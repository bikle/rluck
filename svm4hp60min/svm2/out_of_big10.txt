
SQL*Plus: Release 11.2.0.1.0 Production on Wed Dec 15 02:42:13 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

02:42:13 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
02:42:13 SQL> 02:42:13 SQL> --
02:42:13 SQL> -- eur10.sql
02:42:13 SQL> --
02:42:13 SQL> 
02:42:13 SQL> -- Creates views and tables for backtesting a forex SVM strategy
02:42:13 SQL> 
02:42:13 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.56
02:42:14 SQL> 
02:42:14 SQL> -- I created ibfu_t here:
02:42:14 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
02:42:14 SQL> 
02:42:14 SQL> CREATE OR REPLACE VIEW q11 AS
02:42:14   2  SELECT
02:42:14   3  pair
02:42:14   4  ,ydate
02:42:14   5  ,prdate
02:42:14   6  ,rownum rnum -- acts as t in my time-series
02:42:14   7  ,clse
02:42:14   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
02:42:14   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
02:42:14  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
02:42:14  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
02:42:14  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
02:42:14  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
02:42:14  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
02:42:14  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
02:42:14  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
02:42:14  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
02:42:14  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
02:42:14  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
02:42:14  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
02:42:14  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
02:42:14  22  FROM ibfu_t WHERE pair LIKE'%eur%'
02:42:14  23  ORDER BY ydate
02:42:14  24  /

View created.

Elapsed: 00:00:00.07
02:42:14 SQL> 
02:42:14 SQL> -- rpt
02:42:14 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd 	3792

Elapsed: 00:00:00.12
02:42:14 SQL> 
02:42:14 SQL> -- Calc deltas and gains
02:42:14 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.40
02:42:15 SQL> 
02:42:15 SQL> CREATE TABLE q13 COMPRESS AS
02:42:15   2  SELECT
02:42:15   3  pair
02:42:15   4  ,ydate
02:42:15   5  ,prdate
02:42:15   6  ,rnum
02:42:15   7  ,lg4
02:42:15   8  ,lg8
02:42:15   9  ,lg12
02:42:15  10  ,ld4
02:42:15  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
02:42:15  12  -- step by 1
02:42:15  13  ,clse-lg1 d01
02:42:15  14  ,lg1-lg2	d12
02:42:15  15  ,lg2-lg3	d23
02:42:15  16  ,lg3-lg4	d34
02:42:15  17  ,lg4-lg5	d45
02:42:15  18  ,lg5-lg6	d56
02:42:15  19  ,lg6-lg7	d67
02:42:15  20  ,lg7-lg8	d78
02:42:15  21  ,lg8-lg9	d89
02:42:15  22  -- step by 2
02:42:15  23  ,clse-lg2 d02
02:42:15  24  ,lg2-lg4 d24
02:42:15  25  ,lg4-lg6 d46
02:42:15  26  ,lg6-lg8 d68
02:42:15  27  -- step by 3
02:42:15  28  ,clse-lg3 d03
02:42:15  29  ,lg3-lg6	d36
02:42:15  30  ,lg6-lg9	d69
02:42:15  31  ,lg9-lg12 d912
02:42:15  32  -- step by 4
02:42:15  33  ,clse-lg4 d04
02:42:15  34  ,lg4-lg8	d48
02:42:15  35  ,lg8-lg12 d812
02:42:15  36  ,lg6-lg12 d612
02:42:15  37  ,lg12-lg18 d1218
02:42:15  38  --
02:42:15  39  ,ABS(clse-lg1)dc1
02:42:15  40  ,ABS(clse-lg2)dc2
02:42:15  41  ,ABS(clse-lg3)dc3
02:42:15  42  ,ABS(clse-lg4)dc4
02:42:15  43  ,ABS(clse-lg5)dc5
02:42:15  44  ,ABS(clse-lg6)dc6
02:42:15  45  ,ABS(clse-lg7)dc7
02:42:15  46  ,ABS(clse-lg8)dc8
02:42:15  47  ,ABS(clse-lg9)dc9
02:42:15  48  ,ABS(clse-lg12)dc12
02:42:15  49  ,ABS(clse-lg18)dc18
02:42:15  50  ,ABS(clse-lg24)dc24
02:42:15  51  ,ABS(clse-lg72)dc72
02:42:15  52  ,(ld4-clse) ug4
02:42:15  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
02:42:15  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
02:42:15  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
02:42:15  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
02:42:15  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
02:42:15  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
02:42:15  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
02:42:15  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
02:42:15  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
02:42:15  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
02:42:15  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
02:42:15  64  ,0+TO_CHAR(ydate,'HH24')hh
02:42:15  65  ,0+TO_CHAR(ydate,'D')d
02:42:15  66  ,0+TO_CHAR(ydate,'W')w
02:42:15  67  FROM q11
02:42:15  68  ORDER BY pair,ydate
02:42:15  69  /

Table created.

Elapsed: 00:00:00.88
02:42:15 SQL> 
02:42:15 SQL> -- rpt
02:42:15 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1929
	-1	    1863

Elapsed: 00:00:00.03
02:42:15 SQL> 
02:42:15 SQL> -- Calc gains and ntiles
02:42:15 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.04
02:42:15 SQL> CREATE TABLE q15 COMPRESS AS
02:42:15   2  SELECT
02:42:15   3  pair
02:42:15   4  ,ydate
02:42:15   5  ,prdate -- Should be unique
02:42:15   6  ,trend -- +1 or -1
02:42:15   7  ,dc12 -- next statement needs this
02:42:15   8  -- Use NTILE() to derive some attributes
02:42:15   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
02:42:15  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
02:42:15  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
02:42:15  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
02:42:15  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
02:42:15  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
02:42:15  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
02:42:15  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
02:42:15  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
02:42:15  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
02:42:15  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
02:42:15  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
02:42:15  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
02:42:15  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
02:42:15  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
02:42:15  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
02:42:15  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
02:42:15  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
02:42:15  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
02:42:15  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
02:42:15  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
02:42:15  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
02:42:15  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
02:42:15  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
02:42:15  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
02:42:15  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
02:42:15  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
02:42:15  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
02:42:15  37  -- date related integers: hour of day, day of week, week of month:
02:42:15  38  ,hh    att28
02:42:15  39  ,d     att29
02:42:15  40  ,w     att30
02:42:15  41  ,trend att31
02:42:15  42  ,ug4 g4
02:42:15  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
02:42:15  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
02:42:15  45  FROM q13
02:42:15  46  ORDER BY pair,ydate
02:42:15  47  /

Table created.

Elapsed: 00:00:01.48
02:42:17 SQL> 
02:42:17 SQL> -- rpt
02:42:17 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
02:42:17   2  GROUP BY pair,trend,gatt,gattn
02:42:17   3  ORDER BY pair,trend,gatt,gattn
02:42:17   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00004014	     295    .048269751
eur_usd 	-1 nup up  -.00348792	     755    -.02175909
eur_usd 	-1 up  nup .003626545	     809    -.09547087
eur_usd 	-1			       0
eur_usd 	 1 nup nup 4.2437E-06	     357    .068853821
eur_usd 	 1 nup up   -.0032753	     827    -.02133736
eur_usd 	 1 up  nup .003599664	     745    -.01955522

7 rows selected.

Elapsed: 00:00:00.03
02:42:17 SQL> 
02:42:17 SQL> -- rpt
02:42:17 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-15 00:00:00

Elapsed: 00:00:00.00
02:42:17 SQL> 
02:42:17 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.40
02:42:17 SQL> CREATE TABLE modsrc COMPRESS AS
02:42:17   2  SELECT
02:42:17   3  pair
02:42:17   4  ,ydate
02:42:17   5  ,prdate
02:42:17   6  ,trend
02:42:17   7  ,g4
02:42:17   8  ,gatt
02:42:17   9  ,gattn
02:42:17  10  ,dc12
02:42:17  11  FROM q15
02:42:17  12  /

Table created.

Elapsed: 00:00:00.05
02:42:17 SQL> 
02:42:17 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.11
02:42:18 SQL> 
02:42:18 SQL> -- rpt
02:42:18 SQL> 
02:42:18 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.12
02:42:18 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
02:42:18 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:42:18 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:42:18 SQL> 
02:42:18 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
02:42:18   2  GROUP BY pair,trend,gatt,gattn
02:42:18   3  ORDER BY pair,trend,gatt,gattn
02:42:18   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00004014	     295    .048269751
eur_usd 	-1 nup up  -.00348792	     755    -.02175909
eur_usd 	-1 up  nup .003626545	     809    -.09547087
eur_usd 	-1			       0
eur_usd 	 1 nup nup 4.2437E-06	     357    .068853821
eur_usd 	 1 nup up   -.0032753	     827    -.02133736
eur_usd 	 1 up  nup .003599664	     745    -.01955522

7 rows selected.

Elapsed: 00:00:00.01
02:42:18 SQL> 
02:42:18 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.06
02:42:18 SQL> CREATE TABLE eur_ms10 COMPRESS AS
02:42:18   2  SELECT
02:42:18   3  ydate
02:42:18   4  ,trend eur_trend
02:42:18   5  ,g4    eur_g4
02:42:18   6  ,gatt  eur_gatt
02:42:18   7  ,gattn	eur_gattn
02:42:18   8  FROM modsrc
02:42:18   9  /

Table created.

Elapsed: 00:00:00.03
02:42:18 SQL> 
02:42:18 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.06
02:42:18 SQL> 
02:42:18 SQL> -- rpt
02:42:18 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 08:00:00 2010-12-14 19:00:00	 1929	  -.0175      .0172
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	 1859	  -.0164      .0224

Elapsed: 00:00:00.01
02:42:18 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 08:00:00 2010-12-14 19:00:00	       1929	 -.0175       .0172
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	       1863	 -.0164       .0224

Elapsed: 00:00:00.00
02:42:18 SQL> 
02:42:18 SQL> -- I need a copy of q15 attributes
02:42:18 SQL> 
02:42:18 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.05
02:42:18 SQL> CREATE TABLE eur_att COMPRESS AS
02:42:18   2  SELECT
02:42:18   3  ydate
02:42:18   4  ,att00 eur_att00
02:42:18   5  ,att01 eur_att01
02:42:18   6  ,att02 eur_att02
02:42:18   7  ,att03 eur_att03
02:42:18   8  ,att04 eur_att04
02:42:18   9  ,att05 eur_att05
02:42:18  10  ,att06 eur_att06
02:42:18  11  ,att07 eur_att07
02:42:18  12  ,att08 eur_att08
02:42:18  13  ,att09 eur_att09
02:42:18  14  ,att10 eur_att10
02:42:18  15  ,att11 eur_att11
02:42:18  16  ,att12 eur_att12
02:42:18  17  ,att13 eur_att13
02:42:18  18  ,att14 eur_att14
02:42:18  19  ,att15 eur_att15
02:42:18  20  ,att16 eur_att16
02:42:18  21  ,att17 eur_att17
02:42:18  22  ,att18 eur_att18
02:42:18  23  ,att19 eur_att19
02:42:18  24  ,att20 eur_att20
02:42:18  25  ,att21 eur_att21
02:42:18  26  ,att22 eur_att22
02:42:18  27  ,att23 eur_att23
02:42:18  28  ,att24 eur_att24
02:42:18  29  ,att25 eur_att25
02:42:18  30  ,att26 eur_att26
02:42:18  31  ,att27 eur_att27
02:42:18  32  ,att28 eur_att28
02:42:18  33  ,att29 eur_att29
02:42:18  34  ,att30 eur_att30
02:42:18  35  ,att31 eur_att31
02:42:18  36  FROM q15
02:42:18  37  /

Table created.

Elapsed: 00:00:00.08
02:42:18 SQL> 
02:42:18 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
02:42:18 SQL> 
02:42:18 SQL> -- rpt
02:42:18 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.00
02:42:18 SQL> 
02:42:18 SQL> --
02:42:18 SQL> -- aud10.sql
02:42:18 SQL> --
02:42:18 SQL> 
02:42:18 SQL> -- Creates views and tables for backtesting a forex SVM strategy
02:42:18 SQL> 
02:42:18 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.37
02:42:19 SQL> 
02:42:19 SQL> -- I created ibfu_t here:
02:42:19 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
02:42:19 SQL> 
02:42:19 SQL> CREATE OR REPLACE VIEW q11 AS
02:42:19   2  SELECT
02:42:19   3  pair
02:42:19   4  ,ydate
02:42:19   5  ,prdate
02:42:19   6  ,rownum rnum -- acts as t in my time-series
02:42:19   7  ,clse
02:42:19   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
02:42:19   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
02:42:19  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
02:42:19  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
02:42:19  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
02:42:19  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
02:42:19  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
02:42:19  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
02:42:19  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
02:42:19  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
02:42:19  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
02:42:19  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
02:42:19  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
02:42:19  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
02:42:19  22  FROM ibfu_t WHERE pair LIKE'%aud%'
02:42:19  23  ORDER BY ydate
02:42:19  24  /

View created.

Elapsed: 00:00:00.04
02:42:19 SQL> 
02:42:19 SQL> -- rpt
02:42:19 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd 	3792

Elapsed: 00:00:00.13
02:42:19 SQL> 
02:42:19 SQL> -- Calc deltas and gains
02:42:19 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.13
02:42:19 SQL> 
02:42:19 SQL> CREATE TABLE q13 COMPRESS AS
02:42:19   2  SELECT
02:42:19   3  pair
02:42:19   4  ,ydate
02:42:19   5  ,prdate
02:42:19   6  ,rnum
02:42:19   7  ,lg4
02:42:19   8  ,lg8
02:42:19   9  ,lg12
02:42:19  10  ,ld4
02:42:19  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
02:42:19  12  -- step by 1
02:42:19  13  ,clse-lg1 d01
02:42:19  14  ,lg1-lg2	d12
02:42:19  15  ,lg2-lg3	d23
02:42:19  16  ,lg3-lg4	d34
02:42:19  17  ,lg4-lg5	d45
02:42:19  18  ,lg5-lg6	d56
02:42:19  19  ,lg6-lg7	d67
02:42:19  20  ,lg7-lg8	d78
02:42:19  21  ,lg8-lg9	d89
02:42:19  22  -- step by 2
02:42:19  23  ,clse-lg2 d02
02:42:19  24  ,lg2-lg4 d24
02:42:19  25  ,lg4-lg6 d46
02:42:19  26  ,lg6-lg8 d68
02:42:19  27  -- step by 3
02:42:19  28  ,clse-lg3 d03
02:42:19  29  ,lg3-lg6	d36
02:42:19  30  ,lg6-lg9	d69
02:42:19  31  ,lg9-lg12 d912
02:42:19  32  -- step by 4
02:42:19  33  ,clse-lg4 d04
02:42:19  34  ,lg4-lg8	d48
02:42:19  35  ,lg8-lg12 d812
02:42:19  36  ,lg6-lg12 d612
02:42:19  37  ,lg12-lg18 d1218
02:42:19  38  --
02:42:19  39  ,ABS(clse-lg1)dc1
02:42:19  40  ,ABS(clse-lg2)dc2
02:42:19  41  ,ABS(clse-lg3)dc3
02:42:19  42  ,ABS(clse-lg4)dc4
02:42:19  43  ,ABS(clse-lg5)dc5
02:42:19  44  ,ABS(clse-lg6)dc6
02:42:19  45  ,ABS(clse-lg7)dc7
02:42:19  46  ,ABS(clse-lg8)dc8
02:42:19  47  ,ABS(clse-lg9)dc9
02:42:19  48  ,ABS(clse-lg12)dc12
02:42:19  49  ,ABS(clse-lg18)dc18
02:42:19  50  ,ABS(clse-lg24)dc24
02:42:19  51  ,ABS(clse-lg72)dc72
02:42:19  52  ,(ld4-clse) ug4
02:42:19  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
02:42:19  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
02:42:19  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
02:42:19  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
02:42:19  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
02:42:19  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
02:42:19  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
02:42:19  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
02:42:19  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
02:42:19  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
02:42:19  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
02:42:19  64  ,0+TO_CHAR(ydate,'HH24')hh
02:42:19  65  ,0+TO_CHAR(ydate,'D')d
02:42:19  66  ,0+TO_CHAR(ydate,'W')w
02:42:19  67  FROM q11
02:42:19  68  ORDER BY pair,ydate
02:42:19  69  /

Table created.

Elapsed: 00:00:00.69
02:42:20 SQL> 
02:42:20 SQL> -- rpt
02:42:20 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1951
	-1	    1841

Elapsed: 00:00:00.02
02:42:20 SQL> 
02:42:20 SQL> -- Calc gains and ntiles
02:42:20 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.37
02:42:20 SQL> CREATE TABLE q15 COMPRESS AS
02:42:20   2  SELECT
02:42:20   3  pair
02:42:20   4  ,ydate
02:42:20   5  ,prdate -- Should be unique
02:42:20   6  ,trend -- +1 or -1
02:42:20   7  ,dc12 -- next statement needs this
02:42:20   8  -- Use NTILE() to derive some attributes
02:42:20   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
02:42:20  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
02:42:20  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
02:42:20  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
02:42:20  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
02:42:20  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
02:42:20  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
02:42:20  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
02:42:20  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
02:42:20  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
02:42:20  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
02:42:20  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
02:42:20  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
02:42:20  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
02:42:20  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
02:42:20  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
02:42:20  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
02:42:20  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
02:42:20  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
02:42:20  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
02:42:20  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
02:42:20  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
02:42:20  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
02:42:20  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
02:42:20  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
02:42:20  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
02:42:20  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
02:42:20  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
02:42:20  37  -- date related integers: hour of day, day of week, week of month:
02:42:20  38  ,hh    att28
02:42:20  39  ,d     att29
02:42:20  40  ,w     att30
02:42:20  41  ,trend att31
02:42:20  42  ,ug4 g4
02:42:20  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
02:42:20  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
02:42:20  45  FROM q13
02:42:20  46  ORDER BY pair,ydate
02:42:20  47  /

Table created.

Elapsed: 00:00:01.50
02:42:21 SQL> 
02:42:21 SQL> -- rpt
02:42:21 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
02:42:21   2  GROUP BY pair,trend,gatt,gattn
02:42:21   3  ORDER BY pair,trend,gatt,gattn
02:42:21   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup  -.0000113	     301    .037489029
aud_usd 	-1 nup up  -.00326065	     716    -.16044588
aud_usd 	-1 up  nup .003175335	     822    .149459209
aud_usd 	-1			       0
aud_usd 	 1 nup nup -.00002417	     362    -.02443808
aud_usd 	 1 nup up   -.0031269	     762    -.00734127
aud_usd 	 1 up  nup .003059152	     825    -.01396605
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.01
02:42:21 SQL> 
02:42:21 SQL> -- rpt
02:42:21 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-15 00:00:00

Elapsed: 00:00:00.01
02:42:21 SQL> 
02:42:21 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.07
02:42:22 SQL> CREATE TABLE modsrc COMPRESS AS
02:42:22   2  SELECT
02:42:22   3  pair
02:42:22   4  ,ydate
02:42:22   5  ,prdate
02:42:22   6  ,trend
02:42:22   7  ,g4
02:42:22   8  ,gatt
02:42:22   9  ,gattn
02:42:22  10  ,dc12
02:42:22  11  FROM q15
02:42:22  12  /

Table created.

Elapsed: 00:00:00.06
02:42:22 SQL> 
02:42:22 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.07
02:42:22 SQL> 
02:42:22 SQL> -- rpt
02:42:22 SQL> 
02:42:22 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.12
02:42:22 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
02:42:22 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:42:22 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:42:22 SQL> 
02:42:22 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
02:42:22   2  GROUP BY pair,trend,gatt,gattn
02:42:22   3  ORDER BY pair,trend,gatt,gattn
02:42:22   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup  -.0000113	     301    .037489029
aud_usd 	-1 nup up  -.00326065	     716    -.16044588
aud_usd 	-1 up  nup .003175335	     822    .149459209
aud_usd 	-1			       0
aud_usd 	 1 nup nup -.00002417	     362    -.02443808
aud_usd 	 1 nup up   -.0031269	     762    -.00734127
aud_usd 	 1 up  nup .003059152	     825    -.01396605
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.01
02:42:22 SQL> 
02:42:22 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.06
02:42:22 SQL> CREATE TABLE aud_ms10 COMPRESS AS
02:42:22   2  SELECT
02:42:22   3  ydate
02:42:22   4  ,trend aud_trend
02:42:22   5  ,g4    aud_g4
02:42:22   6  ,gatt  aud_gatt
02:42:22   7  ,gattn	aud_gattn
02:42:22   8  FROM modsrc
02:42:22   9  /

Table created.

Elapsed: 00:00:00.04
02:42:22 SQL> 
02:42:22 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.05
02:42:22 SQL> 
02:42:22 SQL> -- rpt
02:42:22 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 01:00:00 2010-12-14 22:00:00	 1949	  -.0197      .0116
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	 1839	  -.0179      .0184

Elapsed: 00:00:00.01
02:42:22 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 01:00:00 2010-12-14 22:00:00	       1951	 -.0197       .0116
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	       1841	 -.0179       .0184

Elapsed: 00:00:00.01
02:42:22 SQL> 
02:42:22 SQL> -- I need a copy of q15 attributes
02:42:22 SQL> 
02:42:22 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.13
02:42:22 SQL> CREATE TABLE aud_att COMPRESS AS
02:42:22   2  SELECT
02:42:22   3  ydate
02:42:22   4  ,att00 aud_att00
02:42:22   5  ,att01 aud_att01
02:42:22   6  ,att02 aud_att02
02:42:22   7  ,att03 aud_att03
02:42:22   8  ,att04 aud_att04
02:42:22   9  ,att05 aud_att05
02:42:22  10  ,att06 aud_att06
02:42:22  11  ,att07 aud_att07
02:42:22  12  ,att08 aud_att08
02:42:22  13  ,att09 aud_att09
02:42:22  14  ,att10 aud_att10
02:42:22  15  ,att11 aud_att11
02:42:22  16  ,att12 aud_att12
02:42:22  17  ,att13 aud_att13
02:42:22  18  ,att14 aud_att14
02:42:22  19  ,att15 aud_att15
02:42:22  20  ,att16 aud_att16
02:42:22  21  ,att17 aud_att17
02:42:22  22  ,att18 aud_att18
02:42:22  23  ,att19 aud_att19
02:42:22  24  ,att20 aud_att20
02:42:22  25  ,att21 aud_att21
02:42:22  26  ,att22 aud_att22
02:42:22  27  ,att23 aud_att23
02:42:22  28  ,att24 aud_att24
02:42:22  29  ,att25 aud_att25
02:42:22  30  ,att26 aud_att26
02:42:22  31  ,att27 aud_att27
02:42:22  32  ,att28 aud_att28
02:42:22  33  ,att29 aud_att29
02:42:22  34  ,att30 aud_att30
02:42:22  35  ,att31 aud_att31
02:42:22  36  FROM q15
02:42:22  37  /

Table created.

Elapsed: 00:00:00.08
02:42:22 SQL> 
02:42:22 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.14
02:42:22 SQL> 
02:42:22 SQL> -- rpt
02:42:22 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.00
02:42:22 SQL> 
02:42:22 SQL> --
02:42:22 SQL> -- gbp10.sql
02:42:22 SQL> --
02:42:22 SQL> 
02:42:22 SQL> -- Creates views and tables for backtesting a forex SVM strategy
02:42:22 SQL> 
02:42:22 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.38
02:42:23 SQL> 
02:42:23 SQL> -- I created ibfu_t here:
02:42:23 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
02:42:23 SQL> 
02:42:23 SQL> CREATE OR REPLACE VIEW q11 AS
02:42:23   2  SELECT
02:42:23   3  pair
02:42:23   4  ,ydate
02:42:23   5  ,prdate
02:42:23   6  ,rownum rnum -- acts as t in my time-series
02:42:23   7  ,clse
02:42:23   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
02:42:23   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
02:42:23  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
02:42:23  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
02:42:23  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
02:42:23  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
02:42:23  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
02:42:23  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
02:42:23  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
02:42:23  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
02:42:23  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
02:42:23  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
02:42:23  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
02:42:23  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
02:42:23  22  FROM ibfu_t WHERE pair LIKE'%gbp%'
02:42:23  23  ORDER BY ydate
02:42:23  24  /

View created.

Elapsed: 00:00:00.04
02:42:23 SQL> 
02:42:23 SQL> -- rpt
02:42:23 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd 	3792

Elapsed: 00:00:00.12
02:42:23 SQL> 
02:42:23 SQL> -- Calc deltas and gains
02:42:23 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.13
02:42:23 SQL> 
02:42:23 SQL> CREATE TABLE q13 COMPRESS AS
02:42:23   2  SELECT
02:42:23   3  pair
02:42:23   4  ,ydate
02:42:23   5  ,prdate
02:42:23   6  ,rnum
02:42:23   7  ,lg4
02:42:23   8  ,lg8
02:42:23   9  ,lg12
02:42:23  10  ,ld4
02:42:23  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
02:42:23  12  -- step by 1
02:42:23  13  ,clse-lg1 d01
02:42:23  14  ,lg1-lg2	d12
02:42:23  15  ,lg2-lg3	d23
02:42:23  16  ,lg3-lg4	d34
02:42:23  17  ,lg4-lg5	d45
02:42:23  18  ,lg5-lg6	d56
02:42:23  19  ,lg6-lg7	d67
02:42:23  20  ,lg7-lg8	d78
02:42:23  21  ,lg8-lg9	d89
02:42:23  22  -- step by 2
02:42:23  23  ,clse-lg2 d02
02:42:23  24  ,lg2-lg4 d24
02:42:23  25  ,lg4-lg6 d46
02:42:23  26  ,lg6-lg8 d68
02:42:23  27  -- step by 3
02:42:23  28  ,clse-lg3 d03
02:42:23  29  ,lg3-lg6	d36
02:42:23  30  ,lg6-lg9	d69
02:42:23  31  ,lg9-lg12 d912
02:42:23  32  -- step by 4
02:42:23  33  ,clse-lg4 d04
02:42:23  34  ,lg4-lg8	d48
02:42:23  35  ,lg8-lg12 d812
02:42:23  36  ,lg6-lg12 d612
02:42:23  37  ,lg12-lg18 d1218
02:42:23  38  --
02:42:23  39  ,ABS(clse-lg1)dc1
02:42:23  40  ,ABS(clse-lg2)dc2
02:42:23  41  ,ABS(clse-lg3)dc3
02:42:23  42  ,ABS(clse-lg4)dc4
02:42:23  43  ,ABS(clse-lg5)dc5
02:42:23  44  ,ABS(clse-lg6)dc6
02:42:23  45  ,ABS(clse-lg7)dc7
02:42:23  46  ,ABS(clse-lg8)dc8
02:42:23  47  ,ABS(clse-lg9)dc9
02:42:23  48  ,ABS(clse-lg12)dc12
02:42:23  49  ,ABS(clse-lg18)dc18
02:42:23  50  ,ABS(clse-lg24)dc24
02:42:23  51  ,ABS(clse-lg72)dc72
02:42:23  52  ,(ld4-clse) ug4
02:42:23  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
02:42:23  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
02:42:23  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
02:42:23  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
02:42:23  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
02:42:23  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
02:42:23  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
02:42:23  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
02:42:23  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
02:42:23  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
02:42:23  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
02:42:23  64  ,0+TO_CHAR(ydate,'HH24')hh
02:42:23  65  ,0+TO_CHAR(ydate,'D')d
02:42:23  66  ,0+TO_CHAR(ydate,'W')w
02:42:23  67  FROM q11
02:42:23  68  ORDER BY pair,ydate
02:42:23  69  /

Table created.

Elapsed: 00:00:00.76
02:42:24 SQL> 
02:42:24 SQL> -- rpt
02:42:24 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1918
	-1	    1874

Elapsed: 00:00:00.01
02:42:24 SQL> 
02:42:24 SQL> -- Calc gains and ntiles
02:42:24 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.08
02:42:24 SQL> CREATE TABLE q15 COMPRESS AS
02:42:24   2  SELECT
02:42:24   3  pair
02:42:24   4  ,ydate
02:42:24   5  ,prdate -- Should be unique
02:42:24   6  ,trend -- +1 or -1
02:42:24   7  ,dc12 -- next statement needs this
02:42:24   8  -- Use NTILE() to derive some attributes
02:42:24   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
02:42:24  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
02:42:24  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
02:42:24  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
02:42:24  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
02:42:24  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
02:42:24  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
02:42:24  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
02:42:24  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
02:42:24  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
02:42:24  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
02:42:24  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
02:42:24  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
02:42:24  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
02:42:24  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
02:42:24  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
02:42:24  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
02:42:24  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
02:42:24  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
02:42:24  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
02:42:24  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
02:42:24  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
02:42:24  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
02:42:24  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
02:42:24  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
02:42:24  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
02:42:24  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
02:42:24  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
02:42:24  37  -- date related integers: hour of day, day of week, week of month:
02:42:24  38  ,hh    att28
02:42:24  39  ,d     att29
02:42:24  40  ,w     att30
02:42:24  41  ,trend att31
02:42:24  42  ,ug4 g4
02:42:24  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
02:42:24  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
02:42:24  45  FROM q13
02:42:24  46  ORDER BY pair,ydate
02:42:24  47  /

Table created.

Elapsed: 00:00:01.43
02:42:25 SQL> 
02:42:25 SQL> -- rpt
02:42:25 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
02:42:25   2  GROUP BY pair,trend,gatt,gattn
02:42:25   3  ORDER BY pair,trend,gatt,gattn
02:42:25   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -3.832E-06	     304    .031143431
gbp_usd 	-1 nup up  -.00343995	     771     -.0408022
gbp_usd 	-1 up  nup .003627428	     795    .021496454
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup 7.9279E-06	     333    .029231468
gbp_usd 	 1 nup up  -.00341519	     792    .053150895
gbp_usd 	 1 up  nup .003562295	     793    -.04671055

7 rows selected.

Elapsed: 00:00:00.02
02:42:25 SQL> 
02:42:25 SQL> -- rpt
02:42:25 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-15 00:00:00

Elapsed: 00:00:00.01
02:42:25 SQL> 
02:42:25 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.17
02:42:25 SQL> CREATE TABLE modsrc COMPRESS AS
02:42:25   2  SELECT
02:42:25   3  pair
02:42:25   4  ,ydate
02:42:25   5  ,prdate
02:42:25   6  ,trend
02:42:25   7  ,g4
02:42:25   8  ,gatt
02:42:25   9  ,gattn
02:42:25  10  ,dc12
02:42:25  11  FROM q15
02:42:25  12  /

Table created.

Elapsed: 00:00:00.05
02:42:26 SQL> 
02:42:26 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.09
02:42:26 SQL> 
02:42:26 SQL> -- rpt
02:42:26 SQL> 
02:42:26 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.11
02:42:26 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
02:42:26 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:42:26 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:42:26 SQL> 
02:42:26 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
02:42:26   2  GROUP BY pair,trend,gatt,gattn
02:42:26   3  ORDER BY pair,trend,gatt,gattn
02:42:26   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -3.832E-06	     304    .031143431
gbp_usd 	-1 nup up  -.00343995	     771     -.0408022
gbp_usd 	-1 up  nup .003627428	     795    .021496454
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup 7.9279E-06	     333    .029231468
gbp_usd 	 1 nup up  -.00341519	     792    .053150895
gbp_usd 	 1 up  nup .003562295	     793    -.04671055

7 rows selected.

Elapsed: 00:00:00.01
02:42:26 SQL> 
02:42:26 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
02:42:26 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
02:42:26   2  SELECT
02:42:26   3  ydate
02:42:26   4  ,trend gbp_trend
02:42:26   5  ,g4    gbp_g4
02:42:26   6  ,gatt  gbp_gatt
02:42:26   7  ,gattn	gbp_gattn
02:42:26   8  FROM modsrc
02:42:26   9  /

Table created.

Elapsed: 00:00:00.05
02:42:26 SQL> 
02:42:26 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.05
02:42:26 SQL> 
02:42:26 SQL> -- rpt
02:42:26 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 01:00:00 2010-12-14 11:00:00	 1918	  -.0194      .0192
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	 1870	  -.0243      .0217

Elapsed: 00:00:00.01
02:42:26 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 01:00:00 2010-12-14 11:00:00	       1918	 -.0194       .0192
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	       1874	 -.0243       .0217

Elapsed: 00:00:00.00
02:42:26 SQL> 
02:42:26 SQL> -- I need a copy of q15 attributes
02:42:26 SQL> 
02:42:26 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.05
02:42:26 SQL> CREATE TABLE gbp_att COMPRESS AS
02:42:26   2  SELECT
02:42:26   3  ydate
02:42:26   4  ,att00 gbp_att00
02:42:26   5  ,att01 gbp_att01
02:42:26   6  ,att02 gbp_att02
02:42:26   7  ,att03 gbp_att03
02:42:26   8  ,att04 gbp_att04
02:42:26   9  ,att05 gbp_att05
02:42:26  10  ,att06 gbp_att06
02:42:26  11  ,att07 gbp_att07
02:42:26  12  ,att08 gbp_att08
02:42:26  13  ,att09 gbp_att09
02:42:26  14  ,att10 gbp_att10
02:42:26  15  ,att11 gbp_att11
02:42:26  16  ,att12 gbp_att12
02:42:26  17  ,att13 gbp_att13
02:42:26  18  ,att14 gbp_att14
02:42:26  19  ,att15 gbp_att15
02:42:26  20  ,att16 gbp_att16
02:42:26  21  ,att17 gbp_att17
02:42:26  22  ,att18 gbp_att18
02:42:26  23  ,att19 gbp_att19
02:42:26  24  ,att20 gbp_att20
02:42:26  25  ,att21 gbp_att21
02:42:26  26  ,att22 gbp_att22
02:42:26  27  ,att23 gbp_att23
02:42:26  28  ,att24 gbp_att24
02:42:26  29  ,att25 gbp_att25
02:42:26  30  ,att26 gbp_att26
02:42:26  31  ,att27 gbp_att27
02:42:26  32  ,att28 gbp_att28
02:42:26  33  ,att29 gbp_att29
02:42:26  34  ,att30 gbp_att30
02:42:26  35  ,att31 gbp_att31
02:42:26  36  FROM q15
02:42:26  37  /

Table created.

Elapsed: 00:00:00.08
02:42:26 SQL> 
02:42:26 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.13
02:42:26 SQL> 
02:42:26 SQL> -- rpt
02:42:26 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.00
02:42:26 SQL> 
02:42:26 SQL> --
02:42:26 SQL> -- jpy10.sql
02:42:26 SQL> --
02:42:26 SQL> 
02:42:26 SQL> -- Creates views and tables for backtesting a forex SVM strategy
02:42:26 SQL> 
02:42:26 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.37
02:42:27 SQL> 
02:42:27 SQL> -- I created ibfu_t here:
02:42:27 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
02:42:27 SQL> 
02:42:27 SQL> CREATE OR REPLACE VIEW q11 AS
02:42:27   2  SELECT
02:42:27   3  pair
02:42:27   4  ,ydate
02:42:27   5  ,prdate
02:42:27   6  ,rownum rnum -- acts as t in my time-series
02:42:27   7  ,clse
02:42:27   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
02:42:27   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
02:42:27  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
02:42:27  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
02:42:27  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
02:42:27  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
02:42:27  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
02:42:27  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
02:42:27  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
02:42:27  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
02:42:27  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
02:42:27  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
02:42:27  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
02:42:27  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
02:42:27  22  FROM ibfu_t WHERE pair LIKE'%jpy%'
02:42:27  23  ORDER BY ydate
02:42:27  24  /

View created.

Elapsed: 00:00:00.04
02:42:27 SQL> 
02:42:27 SQL> -- rpt
02:42:27 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy 	3792

Elapsed: 00:00:00.16
02:42:27 SQL> 
02:42:27 SQL> -- Calc deltas and gains
02:42:27 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.15
02:42:27 SQL> 
02:42:27 SQL> CREATE TABLE q13 COMPRESS AS
02:42:27   2  SELECT
02:42:27   3  pair
02:42:27   4  ,ydate
02:42:27   5  ,prdate
02:42:27   6  ,rnum
02:42:27   7  ,lg4
02:42:27   8  ,lg8
02:42:27   9  ,lg12
02:42:27  10  ,ld4
02:42:27  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
02:42:27  12  -- step by 1
02:42:27  13  ,clse-lg1 d01
02:42:27  14  ,lg1-lg2	d12
02:42:27  15  ,lg2-lg3	d23
02:42:27  16  ,lg3-lg4	d34
02:42:27  17  ,lg4-lg5	d45
02:42:27  18  ,lg5-lg6	d56
02:42:27  19  ,lg6-lg7	d67
02:42:27  20  ,lg7-lg8	d78
02:42:27  21  ,lg8-lg9	d89
02:42:27  22  -- step by 2
02:42:27  23  ,clse-lg2 d02
02:42:27  24  ,lg2-lg4 d24
02:42:27  25  ,lg4-lg6 d46
02:42:27  26  ,lg6-lg8 d68
02:42:27  27  -- step by 3
02:42:27  28  ,clse-lg3 d03
02:42:27  29  ,lg3-lg6	d36
02:42:27  30  ,lg6-lg9	d69
02:42:27  31  ,lg9-lg12 d912
02:42:27  32  -- step by 4
02:42:27  33  ,clse-lg4 d04
02:42:27  34  ,lg4-lg8	d48
02:42:27  35  ,lg8-lg12 d812
02:42:27  36  ,lg6-lg12 d612
02:42:27  37  ,lg12-lg18 d1218
02:42:27  38  --
02:42:27  39  ,ABS(clse-lg1)dc1
02:42:27  40  ,ABS(clse-lg2)dc2
02:42:27  41  ,ABS(clse-lg3)dc3
02:42:27  42  ,ABS(clse-lg4)dc4
02:42:27  43  ,ABS(clse-lg5)dc5
02:42:27  44  ,ABS(clse-lg6)dc6
02:42:27  45  ,ABS(clse-lg7)dc7
02:42:27  46  ,ABS(clse-lg8)dc8
02:42:27  47  ,ABS(clse-lg9)dc9
02:42:27  48  ,ABS(clse-lg12)dc12
02:42:27  49  ,ABS(clse-lg18)dc18
02:42:27  50  ,ABS(clse-lg24)dc24
02:42:27  51  ,ABS(clse-lg72)dc72
02:42:27  52  ,(ld4-clse) ug4
02:42:27  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
02:42:27  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
02:42:27  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
02:42:27  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
02:42:27  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
02:42:27  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
02:42:27  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
02:42:27  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
02:42:27  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
02:42:27  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
02:42:27  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
02:42:27  64  ,0+TO_CHAR(ydate,'HH24')hh
02:42:27  65  ,0+TO_CHAR(ydate,'D')d
02:42:27  66  ,0+TO_CHAR(ydate,'W')w
02:42:27  67  FROM q11
02:42:27  68  ORDER BY pair,ydate
02:42:27  69  /

Table created.

Elapsed: 00:00:00.69
02:42:28 SQL> 
02:42:28 SQL> -- rpt
02:42:28 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1712
	-1	    2080

Elapsed: 00:00:00.01
02:42:28 SQL> 
02:42:28 SQL> -- Calc gains and ntiles
02:42:28 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.36
02:42:28 SQL> CREATE TABLE q15 COMPRESS AS
02:42:28   2  SELECT
02:42:28   3  pair
02:42:28   4  ,ydate
02:42:28   5  ,prdate -- Should be unique
02:42:28   6  ,trend -- +1 or -1
02:42:28   7  ,dc12 -- next statement needs this
02:42:28   8  -- Use NTILE() to derive some attributes
02:42:28   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
02:42:28  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
02:42:28  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
02:42:28  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
02:42:28  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
02:42:28  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
02:42:28  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
02:42:28  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
02:42:28  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
02:42:28  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
02:42:28  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
02:42:28  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
02:42:28  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
02:42:28  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
02:42:28  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
02:42:28  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
02:42:28  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
02:42:28  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
02:42:28  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
02:42:28  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
02:42:28  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
02:42:28  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
02:42:28  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
02:42:28  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
02:42:28  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
02:42:28  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
02:42:28  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
02:42:28  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
02:42:28  37  -- date related integers: hour of day, day of week, week of month:
02:42:28  38  ,hh    att28
02:42:28  39  ,d     att29
02:42:28  40  ,w     att30
02:42:28  41  ,trend att31
02:42:28  42  ,ug4 g4
02:42:28  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
02:42:28  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
02:42:28  45  FROM q13
02:42:28  46  ORDER BY pair,ydate
02:42:28  47  /

Table created.

Elapsed: 00:00:01.44
02:42:29 SQL> 
02:42:29 SQL> -- rpt
02:42:29 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
02:42:29   2  GROUP BY pair,trend,gatt,gattn
02:42:29   3  ORDER BY pair,trend,gatt,gattn
02:42:29   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	      57
usd_jpy 	-1 nup up  -.16870621	     999    -.06495076
usd_jpy 	-1 up  nup .160062012	    1024    .157761449
usd_jpy 	 1 nup nup	    0	      28
usd_jpy 	 1 nup up  -.16423427	     922    -.00550838
usd_jpy 	 1 up  nup .157787599	     758    .109714172
usd_jpy 	 1			       0

7 rows selected.

Elapsed: 00:00:00.01
02:42:29 SQL> 
02:42:29 SQL> -- rpt
02:42:29 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-15 00:00:00

Elapsed: 00:00:00.01
02:42:29 SQL> 
02:42:29 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.08
02:42:30 SQL> CREATE TABLE modsrc COMPRESS AS
02:42:30   2  SELECT
02:42:30   3  pair
02:42:30   4  ,ydate
02:42:30   5  ,prdate
02:42:30   6  ,trend
02:42:30   7  ,g4
02:42:30   8  ,gatt
02:42:30   9  ,gattn
02:42:30  10  ,dc12
02:42:30  11  FROM q15
02:42:30  12  /

Table created.

Elapsed: 00:00:00.05
02:42:30 SQL> 
02:42:30 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.09
02:42:30 SQL> 
02:42:30 SQL> -- rpt
02:42:30 SQL> 
02:42:30 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.12
02:42:30 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:42:30 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:42:30 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
02:42:30 SQL> 
02:42:30 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
02:42:30   2  GROUP BY pair,trend,gatt,gattn
02:42:30   3  ORDER BY pair,trend,gatt,gattn
02:42:30   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	      57
usd_jpy 	-1 nup up  -.16870621	     999    -.06495076
usd_jpy 	-1 up  nup .160062012	    1024    .157761449
usd_jpy 	 1 nup nup	    0	      28
usd_jpy 	 1 nup up  -.16423427	     922    -.00550838
usd_jpy 	 1 up  nup .157787599	     758    .109714172
usd_jpy 	 1			       0

7 rows selected.

Elapsed: 00:00:00.01
02:42:30 SQL> 
02:42:30 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.18
02:42:30 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
02:42:30   2  SELECT
02:42:30   3  ydate
02:42:30   4  ,trend jpy_trend
02:42:30   5  ,g4    jpy_g4
02:42:30   6  ,gatt  jpy_gatt
02:42:30   7  ,gattn	jpy_gattn
02:42:30   8  FROM modsrc
02:42:30   9  /

Table created.

Elapsed: 00:00:00.05
02:42:30 SQL> 
02:42:30 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.05
02:42:30 SQL> 
02:42:30 SQL> -- rpt
02:42:30 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 01:00:00 2010-12-15 00:00:00	 1708	   -1.05	.71
	-1 2010-05-11 13:00:00 2010-12-14 19:00:00	 2080	   -2.13       1.97

Elapsed: 00:00:00.01
02:42:30 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 01:00:00 2010-12-15 00:00:00	       1712	  -1.05 	.71
	-1 2010-05-11 13:00:00 2010-12-14 19:00:00	       2080	  -2.13        1.97

Elapsed: 00:00:00.01
02:42:30 SQL> 
02:42:30 SQL> -- I need a copy of q15 attributes
02:42:30 SQL> 
02:42:30 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.04
02:42:30 SQL> CREATE TABLE jpy_att COMPRESS AS
02:42:30   2  SELECT
02:42:30   3  ydate
02:42:30   4  ,att00 jpy_att00
02:42:30   5  ,att01 jpy_att01
02:42:30   6  ,att02 jpy_att02
02:42:30   7  ,att03 jpy_att03
02:42:30   8  ,att04 jpy_att04
02:42:30   9  ,att05 jpy_att05
02:42:30  10  ,att06 jpy_att06
02:42:30  11  ,att07 jpy_att07
02:42:30  12  ,att08 jpy_att08
02:42:30  13  ,att09 jpy_att09
02:42:30  14  ,att10 jpy_att10
02:42:30  15  ,att11 jpy_att11
02:42:30  16  ,att12 jpy_att12
02:42:30  17  ,att13 jpy_att13
02:42:30  18  ,att14 jpy_att14
02:42:30  19  ,att15 jpy_att15
02:42:30  20  ,att16 jpy_att16
02:42:30  21  ,att17 jpy_att17
02:42:30  22  ,att18 jpy_att18
02:42:30  23  ,att19 jpy_att19
02:42:30  24  ,att20 jpy_att20
02:42:30  25  ,att21 jpy_att21
02:42:30  26  ,att22 jpy_att22
02:42:30  27  ,att23 jpy_att23
02:42:30  28  ,att24 jpy_att24
02:42:30  29  ,att25 jpy_att25
02:42:30  30  ,att26 jpy_att26
02:42:30  31  ,att27 jpy_att27
02:42:30  32  ,att28 jpy_att28
02:42:30  33  ,att29 jpy_att29
02:42:30  34  ,att30 jpy_att30
02:42:30  35  ,att31 jpy_att31
02:42:30  36  FROM q15
02:42:30  37  /

Table created.

Elapsed: 00:00:00.08
02:42:30 SQL> 
02:42:30 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.14
02:42:30 SQL> 
02:42:30 SQL> -- rpt
02:42:30 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.00
02:42:30 SQL> 
02:42:30 SQL> --
02:42:30 SQL> -- cad10.sql
02:42:30 SQL> --
02:42:30 SQL> 
02:42:30 SQL> -- Creates views and tables for backtesting a forex SVM strategy
02:42:30 SQL> 
02:42:30 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.37
02:42:31 SQL> 
02:42:31 SQL> -- I created ibfu_t here:
02:42:31 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
02:42:31 SQL> 
02:42:31 SQL> CREATE OR REPLACE VIEW q11 AS
02:42:31   2  SELECT
02:42:31   3  pair
02:42:31   4  ,ydate
02:42:31   5  ,prdate
02:42:31   6  ,rownum rnum -- acts as t in my time-series
02:42:31   7  ,clse
02:42:31   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
02:42:31   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
02:42:31  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
02:42:31  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
02:42:31  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
02:42:31  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
02:42:31  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
02:42:31  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
02:42:31  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
02:42:31  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
02:42:31  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
02:42:31  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
02:42:31  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
02:42:31  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
02:42:31  22  FROM ibfu_t WHERE pair LIKE'%cad%'
02:42:31  23  ORDER BY ydate
02:42:31  24  /

View created.

Elapsed: 00:00:00.05
02:42:31 SQL> 
02:42:31 SQL> -- rpt
02:42:31 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad 	3792

Elapsed: 00:00:00.11
02:42:31 SQL> 
02:42:31 SQL> -- Calc deltas and gains
02:42:31 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.14
02:42:31 SQL> 
02:42:31 SQL> CREATE TABLE q13 COMPRESS AS
02:42:31   2  SELECT
02:42:31   3  pair
02:42:31   4  ,ydate
02:42:31   5  ,prdate
02:42:31   6  ,rnum
02:42:31   7  ,lg4
02:42:31   8  ,lg8
02:42:31   9  ,lg12
02:42:31  10  ,ld4
02:42:31  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
02:42:31  12  -- step by 1
02:42:31  13  ,clse-lg1 d01
02:42:31  14  ,lg1-lg2	d12
02:42:31  15  ,lg2-lg3	d23
02:42:31  16  ,lg3-lg4	d34
02:42:31  17  ,lg4-lg5	d45
02:42:31  18  ,lg5-lg6	d56
02:42:31  19  ,lg6-lg7	d67
02:42:31  20  ,lg7-lg8	d78
02:42:31  21  ,lg8-lg9	d89
02:42:31  22  -- step by 2
02:42:31  23  ,clse-lg2 d02
02:42:31  24  ,lg2-lg4 d24
02:42:31  25  ,lg4-lg6 d46
02:42:31  26  ,lg6-lg8 d68
02:42:31  27  -- step by 3
02:42:31  28  ,clse-lg3 d03
02:42:31  29  ,lg3-lg6	d36
02:42:31  30  ,lg6-lg9	d69
02:42:31  31  ,lg9-lg12 d912
02:42:31  32  -- step by 4
02:42:31  33  ,clse-lg4 d04
02:42:31  34  ,lg4-lg8	d48
02:42:31  35  ,lg8-lg12 d812
02:42:31  36  ,lg6-lg12 d612
02:42:31  37  ,lg12-lg18 d1218
02:42:31  38  --
02:42:31  39  ,ABS(clse-lg1)dc1
02:42:31  40  ,ABS(clse-lg2)dc2
02:42:31  41  ,ABS(clse-lg3)dc3
02:42:31  42  ,ABS(clse-lg4)dc4
02:42:31  43  ,ABS(clse-lg5)dc5
02:42:31  44  ,ABS(clse-lg6)dc6
02:42:31  45  ,ABS(clse-lg7)dc7
02:42:31  46  ,ABS(clse-lg8)dc8
02:42:31  47  ,ABS(clse-lg9)dc9
02:42:31  48  ,ABS(clse-lg12)dc12
02:42:31  49  ,ABS(clse-lg18)dc18
02:42:31  50  ,ABS(clse-lg24)dc24
02:42:31  51  ,ABS(clse-lg72)dc72
02:42:31  52  ,(ld4-clse) ug4
02:42:31  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
02:42:31  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
02:42:31  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
02:42:31  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
02:42:31  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
02:42:31  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
02:42:31  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
02:42:31  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
02:42:31  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
02:42:31  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
02:42:31  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
02:42:31  64  ,0+TO_CHAR(ydate,'HH24')hh
02:42:31  65  ,0+TO_CHAR(ydate,'D')d
02:42:31  66  ,0+TO_CHAR(ydate,'W')w
02:42:31  67  FROM q11
02:42:31  68  ORDER BY pair,ydate
02:42:31  69  /

Table created.

Elapsed: 00:00:00.70
02:42:32 SQL> 
02:42:32 SQL> -- rpt
02:42:32 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1734
	-1	    2058

Elapsed: 00:00:00.01
02:42:32 SQL> 
02:42:32 SQL> -- Calc gains and ntiles
02:42:32 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.09
02:42:32 SQL> CREATE TABLE q15 COMPRESS AS
02:42:32   2  SELECT
02:42:32   3  pair
02:42:32   4  ,ydate
02:42:32   5  ,prdate -- Should be unique
02:42:32   6  ,trend -- +1 or -1
02:42:32   7  ,dc12 -- next statement needs this
02:42:32   8  -- Use NTILE() to derive some attributes
02:42:32   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
02:42:32  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
02:42:32  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
02:42:32  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
02:42:32  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
02:42:32  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
02:42:32  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
02:42:32  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
02:42:32  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
02:42:32  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
02:42:32  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
02:42:32  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
02:42:32  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
02:42:32  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
02:42:32  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
02:42:32  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
02:42:32  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
02:42:32  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
02:42:32  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
02:42:32  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
02:42:32  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
02:42:32  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
02:42:32  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
02:42:32  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
02:42:32  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
02:42:32  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
02:42:32  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
02:42:32  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
02:42:32  37  -- date related integers: hour of day, day of week, week of month:
02:42:32  38  ,hh    att28
02:42:32  39  ,d     att29
02:42:32  40  ,w     att30
02:42:32  41  ,trend att31
02:42:32  42  ,ug4 g4
02:42:32  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
02:42:32  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
02:42:32  45  FROM q13
02:42:32  46  ORDER BY pair,ydate
02:42:32  47  /

Table created.

Elapsed: 00:00:01.39
02:42:33 SQL> 
02:42:33 SQL> -- rpt
02:42:33 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
02:42:33   2  GROUP BY pair,trend,gatt,gattn
02:42:33   3  ORDER BY pair,trend,gatt,gattn
02:42:33   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00003116	     495    .026030817
usd_cad 	-1 nup up  -.00261484	     790    .068465838
usd_cad 	-1 up  nup .002811655	     769    .029227285
usd_cad 	-1			       0
usd_cad 	 1 nup nup -4.593E-07	     381    .041039252
usd_cad 	 1 nup up  -.00285413	     718    -.01070071
usd_cad 	 1 up  nup .003006969	     635    .054044227

7 rows selected.

Elapsed: 00:00:00.01
02:42:33 SQL> 
02:42:33 SQL> -- rpt
02:42:33 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-15 00:00:00

Elapsed: 00:00:00.01
02:42:33 SQL> 
02:42:33 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.07
02:42:33 SQL> CREATE TABLE modsrc COMPRESS AS
02:42:33   2  SELECT
02:42:33   3  pair
02:42:33   4  ,ydate
02:42:33   5  ,prdate
02:42:33   6  ,trend
02:42:33   7  ,g4
02:42:33   8  ,gatt
02:42:33   9  ,gattn
02:42:33  10  ,dc12
02:42:33  11  FROM q15
02:42:33  12  /

Table created.

Elapsed: 00:00:00.06
02:42:33 SQL> 
02:42:33 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.10
02:42:34 SQL> 
02:42:34 SQL> -- rpt
02:42:34 SQL> 
02:42:34 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.12
02:42:34 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:42:34 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:42:34 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:42:34 SQL> 
02:42:34 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
02:42:34   2  GROUP BY pair,trend,gatt,gattn
02:42:34   3  ORDER BY pair,trend,gatt,gattn
02:42:34   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00003116	     495    .026030817
usd_cad 	-1 nup up  -.00261484	     790    .068465838
usd_cad 	-1 up  nup .002811655	     769    .029227285
usd_cad 	-1			       0
usd_cad 	 1 nup nup -4.593E-07	     381    .041039252
usd_cad 	 1 nup up  -.00285413	     718    -.01070071
usd_cad 	 1 up  nup .003006969	     635    .054044227

7 rows selected.

Elapsed: 00:00:00.02
02:42:34 SQL> 
02:42:34 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.06
02:42:34 SQL> CREATE TABLE cad_ms10 COMPRESS AS
02:42:34   2  SELECT
02:42:34   3  ydate
02:42:34   4  ,trend cad_trend
02:42:34   5  ,g4    cad_g4
02:42:34   6  ,gatt  cad_gatt
02:42:34   7  ,gattn	cad_gattn
02:42:34   8  FROM modsrc
02:42:34   9  /

Table created.

Elapsed: 00:00:00.04
02:42:34 SQL> 
02:42:34 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.05
02:42:34 SQL> 
02:42:34 SQL> -- rpt
02:42:34 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 03:00:00 2010-12-14 15:00:00	 1734	  -.0173      .0159
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	 2054	  -.0139      .0147

Elapsed: 00:00:00.01
02:42:34 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 03:00:00 2010-12-14 15:00:00	       1734	 -.0173       .0159
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	       2058	 -.0139       .0147

Elapsed: 00:00:00.00
02:42:34 SQL> 
02:42:34 SQL> -- I need a copy of q15 attributes
02:42:34 SQL> 
02:42:34 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.05
02:42:34 SQL> CREATE TABLE cad_att COMPRESS AS
02:42:34   2  SELECT
02:42:34   3  ydate
02:42:34   4  ,att00 cad_att00
02:42:34   5  ,att01 cad_att01
02:42:34   6  ,att02 cad_att02
02:42:34   7  ,att03 cad_att03
02:42:34   8  ,att04 cad_att04
02:42:34   9  ,att05 cad_att05
02:42:34  10  ,att06 cad_att06
02:42:34  11  ,att07 cad_att07
02:42:34  12  ,att08 cad_att08
02:42:34  13  ,att09 cad_att09
02:42:34  14  ,att10 cad_att10
02:42:34  15  ,att11 cad_att11
02:42:34  16  ,att12 cad_att12
02:42:34  17  ,att13 cad_att13
02:42:34  18  ,att14 cad_att14
02:42:34  19  ,att15 cad_att15
02:42:34  20  ,att16 cad_att16
02:42:34  21  ,att17 cad_att17
02:42:34  22  ,att18 cad_att18
02:42:34  23  ,att19 cad_att19
02:42:34  24  ,att20 cad_att20
02:42:34  25  ,att21 cad_att21
02:42:34  26  ,att22 cad_att22
02:42:34  27  ,att23 cad_att23
02:42:34  28  ,att24 cad_att24
02:42:34  29  ,att25 cad_att25
02:42:34  30  ,att26 cad_att26
02:42:34  31  ,att27 cad_att27
02:42:34  32  ,att28 cad_att28
02:42:34  33  ,att29 cad_att29
02:42:34  34  ,att30 cad_att30
02:42:34  35  ,att31 cad_att31
02:42:34  36  FROM q15
02:42:34  37  /

Table created.

Elapsed: 00:00:00.10
02:42:34 SQL> 
02:42:34 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.12
02:42:34 SQL> 
02:42:34 SQL> -- rpt
02:42:34 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.00
02:42:34 SQL> 
02:42:34 SQL> --
02:42:34 SQL> -- chf10.sql
02:42:34 SQL> --
02:42:34 SQL> 
02:42:34 SQL> -- Creates views and tables for backtesting a forex SVM strategy
02:42:34 SQL> 
02:42:34 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
02:42:34 SQL> 
02:42:34 SQL> -- I created ibfu_t here:
02:42:34 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
02:42:34 SQL> 
02:42:34 SQL> CREATE OR REPLACE VIEW q11 AS
02:42:34   2  SELECT
02:42:34   3  pair
02:42:34   4  ,ydate
02:42:34   5  ,prdate
02:42:34   6  ,rownum rnum -- acts as t in my time-series
02:42:34   7  ,clse
02:42:34   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
02:42:34   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
02:42:34  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
02:42:34  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
02:42:34  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
02:42:34  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
02:42:34  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
02:42:34  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
02:42:34  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
02:42:34  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
02:42:34  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
02:42:34  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
02:42:34  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
02:42:34  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
02:42:34  22  FROM ibfu_t WHERE pair LIKE'%chf%'
02:42:34  23  ORDER BY ydate
02:42:34  24  /

View created.

Elapsed: 00:00:00.04
02:42:34 SQL> 
02:42:34 SQL> -- rpt
02:42:34 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf 	3792

Elapsed: 00:00:00.15
02:42:35 SQL> 
02:42:35 SQL> -- Calc deltas and gains
02:42:35 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.13
02:42:35 SQL> 
02:42:35 SQL> CREATE TABLE q13 COMPRESS AS
02:42:35   2  SELECT
02:42:35   3  pair
02:42:35   4  ,ydate
02:42:35   5  ,prdate
02:42:35   6  ,rnum
02:42:35   7  ,lg4
02:42:35   8  ,lg8
02:42:35   9  ,lg12
02:42:35  10  ,ld4
02:42:35  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
02:42:35  12  -- step by 1
02:42:35  13  ,clse-lg1 d01
02:42:35  14  ,lg1-lg2	d12
02:42:35  15  ,lg2-lg3	d23
02:42:35  16  ,lg3-lg4	d34
02:42:35  17  ,lg4-lg5	d45
02:42:35  18  ,lg5-lg6	d56
02:42:35  19  ,lg6-lg7	d67
02:42:35  20  ,lg7-lg8	d78
02:42:35  21  ,lg8-lg9	d89
02:42:35  22  -- step by 2
02:42:35  23  ,clse-lg2 d02
02:42:35  24  ,lg2-lg4 d24
02:42:35  25  ,lg4-lg6 d46
02:42:35  26  ,lg6-lg8 d68
02:42:35  27  -- step by 3
02:42:35  28  ,clse-lg3 d03
02:42:35  29  ,lg3-lg6	d36
02:42:35  30  ,lg6-lg9	d69
02:42:35  31  ,lg9-lg12 d912
02:42:35  32  -- step by 4
02:42:35  33  ,clse-lg4 d04
02:42:35  34  ,lg4-lg8	d48
02:42:35  35  ,lg8-lg12 d812
02:42:35  36  ,lg6-lg12 d612
02:42:35  37  ,lg12-lg18 d1218
02:42:35  38  --
02:42:35  39  ,ABS(clse-lg1)dc1
02:42:35  40  ,ABS(clse-lg2)dc2
02:42:35  41  ,ABS(clse-lg3)dc3
02:42:35  42  ,ABS(clse-lg4)dc4
02:42:35  43  ,ABS(clse-lg5)dc5
02:42:35  44  ,ABS(clse-lg6)dc6
02:42:35  45  ,ABS(clse-lg7)dc7
02:42:35  46  ,ABS(clse-lg8)dc8
02:42:35  47  ,ABS(clse-lg9)dc9
02:42:35  48  ,ABS(clse-lg12)dc12
02:42:35  49  ,ABS(clse-lg18)dc18
02:42:35  50  ,ABS(clse-lg24)dc24
02:42:35  51  ,ABS(clse-lg72)dc72
02:42:35  52  ,(ld4-clse) ug4
02:42:35  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
02:42:35  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
02:42:35  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
02:42:35  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
02:42:35  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
02:42:35  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
02:42:35  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
02:42:35  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
02:42:35  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
02:42:35  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
02:42:35  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
02:42:35  64  ,0+TO_CHAR(ydate,'HH24')hh
02:42:35  65  ,0+TO_CHAR(ydate,'D')d
02:42:35  66  ,0+TO_CHAR(ydate,'W')w
02:42:35  67  FROM q11
02:42:35  68  ORDER BY pair,ydate
02:42:35  69  /

Table created.

Elapsed: 00:00:00.68
02:42:35 SQL> 
02:42:35 SQL> -- rpt
02:42:35 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1715
	-1	    2077

Elapsed: 00:00:00.02
02:42:35 SQL> 
02:42:35 SQL> -- Calc gains and ntiles
02:42:35 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.20
02:42:36 SQL> CREATE TABLE q15 COMPRESS AS
02:42:36   2  SELECT
02:42:36   3  pair
02:42:36   4  ,ydate
02:42:36   5  ,prdate -- Should be unique
02:42:36   6  ,trend -- +1 or -1
02:42:36   7  ,dc12 -- next statement needs this
02:42:36   8  -- Use NTILE() to derive some attributes
02:42:36   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
02:42:36  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
02:42:36  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
02:42:36  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
02:42:36  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
02:42:36  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
02:42:36  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
02:42:36  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
02:42:36  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
02:42:36  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
02:42:36  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
02:42:36  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
02:42:36  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
02:42:36  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
02:42:36  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
02:42:36  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
02:42:36  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
02:42:36  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
02:42:36  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
02:42:36  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
02:42:36  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
02:42:36  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
02:42:36  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
02:42:36  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
02:42:36  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
02:42:36  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
02:42:36  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
02:42:36  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
02:42:36  37  -- date related integers: hour of day, day of week, week of month:
02:42:36  38  ,hh    att28
02:42:36  39  ,d     att29
02:42:36  40  ,w     att30
02:42:36  41  ,trend att31
02:42:36  42  ,ug4 g4
02:42:36  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
02:42:36  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
02:42:36  45  FROM q13
02:42:36  46  ORDER BY pair,ydate
02:42:36  47  /

Table created.

Elapsed: 00:00:01.49
02:42:37 SQL> 
02:42:37 SQL> -- rpt
02:42:37 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
02:42:37   2  GROUP BY pair,trend,gatt,gattn
02:42:37   3  ORDER BY pair,trend,gatt,gattn
02:42:37   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup  .00001003	     500    .064926761
usd_chf 	-1 nup up   -.0028407	     767    .075396575
usd_chf 	-1 up  nup .002673685	     806    -.06509418
usd_chf 	-1			       0
usd_chf 	 1 nup nup -.00001178	     401    .038442876
usd_chf 	 1 nup up  -.00292213	     738    .016780666
usd_chf 	 1 up  nup .002766519	     576    -.06192624

7 rows selected.

Elapsed: 00:00:00.01
02:42:37 SQL> 
02:42:37 SQL> -- rpt
02:42:37 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-15 00:00:00

Elapsed: 00:00:00.01
02:42:37 SQL> 
02:42:37 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.07
02:42:37 SQL> CREATE TABLE modsrc COMPRESS AS
02:42:37   2  SELECT
02:42:37   3  pair
02:42:37   4  ,ydate
02:42:37   5  ,prdate
02:42:37   6  ,trend
02:42:37   7  ,g4
02:42:37   8  ,gatt
02:42:37   9  ,gattn
02:42:37  10  ,dc12
02:42:37  11  FROM q15
02:42:37  12  /

Table created.

Elapsed: 00:00:00.04
02:42:37 SQL> 
02:42:37 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.07
02:42:37 SQL> 
02:42:37 SQL> -- rpt
02:42:37 SQL> 
02:42:37 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.16
02:42:38 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
02:42:38 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:42:38 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
02:42:38 SQL> 
02:42:38 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
02:42:38   2  GROUP BY pair,trend,gatt,gattn
02:42:38   3  ORDER BY pair,trend,gatt,gattn
02:42:38   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup  .00001003	     500    .064926761
usd_chf 	-1 nup up   -.0028407	     767    .075396575
usd_chf 	-1 up  nup .002673685	     806    -.06509418
usd_chf 	-1			       0
usd_chf 	 1 nup nup -.00001178	     401    .038442876
usd_chf 	 1 nup up  -.00292213	     738    .016780666
usd_chf 	 1 up  nup .002766519	     576    -.06192624

7 rows selected.

Elapsed: 00:00:00.01
02:42:38 SQL> 
02:42:38 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.10
02:42:38 SQL> CREATE TABLE chf_ms10 COMPRESS AS
02:42:38   2  SELECT
02:42:38   3  ydate
02:42:38   4  ,trend chf_trend
02:42:38   5  ,g4    chf_g4
02:42:38   6  ,gatt  chf_gatt
02:42:38   7  ,gattn	chf_gattn
02:42:38   8  FROM modsrc
02:42:38   9  /

Table created.

Elapsed: 00:00:00.05
02:42:38 SQL> 
02:42:38 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.05
02:42:38 SQL> 
02:42:38 SQL> -- rpt
02:42:38 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 01:00:00 2010-12-14 07:00:00	 1715	  -.0227      .0156
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	 2073	   -.016      .0145

Elapsed: 00:00:00.01
02:42:38 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 01:00:00 2010-12-14 07:00:00	       1715	 -.0227       .0156
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	       2077	  -.016       .0145

Elapsed: 00:00:00.01
02:42:38 SQL> 
02:42:38 SQL> -- I need a copy of q15 attributes
02:42:38 SQL> 
02:42:38 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.05
02:42:38 SQL> CREATE TABLE chf_att COMPRESS AS
02:42:38   2  SELECT
02:42:38   3  ydate
02:42:38   4  ,att00 chf_att00
02:42:38   5  ,att01 chf_att01
02:42:38   6  ,att02 chf_att02
02:42:38   7  ,att03 chf_att03
02:42:38   8  ,att04 chf_att04
02:42:38   9  ,att05 chf_att05
02:42:38  10  ,att06 chf_att06
02:42:38  11  ,att07 chf_att07
02:42:38  12  ,att08 chf_att08
02:42:38  13  ,att09 chf_att09
02:42:38  14  ,att10 chf_att10
02:42:38  15  ,att11 chf_att11
02:42:38  16  ,att12 chf_att12
02:42:38  17  ,att13 chf_att13
02:42:38  18  ,att14 chf_att14
02:42:38  19  ,att15 chf_att15
02:42:38  20  ,att16 chf_att16
02:42:38  21  ,att17 chf_att17
02:42:38  22  ,att18 chf_att18
02:42:38  23  ,att19 chf_att19
02:42:38  24  ,att20 chf_att20
02:42:38  25  ,att21 chf_att21
02:42:38  26  ,att22 chf_att22
02:42:38  27  ,att23 chf_att23
02:42:38  28  ,att24 chf_att24
02:42:38  29  ,att25 chf_att25
02:42:38  30  ,att26 chf_att26
02:42:38  31  ,att27 chf_att27
02:42:38  32  ,att28 chf_att28
02:42:38  33  ,att29 chf_att29
02:42:38  34  ,att30 chf_att30
02:42:38  35  ,att31 chf_att31
02:42:38  36  FROM q15
02:42:38  37  /

Table created.

Elapsed: 00:00:00.08
02:42:38 SQL> 
02:42:38 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
02:42:38 SQL> 
02:42:38 SQL> -- rpt
02:42:38 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.00
02:42:38 SQL> 
02:42:38 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
