
SQL*Plus: Release 11.2.0.1.0 Production on Thu Nov 25 02:33:11 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

02:33:11 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
02:33:11 SQL> 02:33:11 SQL> --
02:33:11 SQL> -- 4hp.sql
02:33:11 SQL> --
02:33:11 SQL> 
02:33:11 SQL> SET LINES 66
02:33:11 SQL> -- I create h15c using h15c.sql to derive prices from hourly table:
02:33:11 SQL> DESC h15c
 Name                             Null?    Type
 -------------------------------- -------- -----------------------
 PAIR                                      CHAR(7)
 YDATE                                     DATE
 CLSE                                      NUMBER

02:33:11 SQL> SET LINES 166
02:33:11 SQL> 
02:33:11 SQL> CREATE OR REPLACE VIEW hp410 AS
02:33:11   2  SELECT
02:33:11   3  pair
02:33:11   4  -- ydate is granular down to the hour:
02:33:11   5  ,ydate
02:33:11   6  ,clse
02:33:11   7  -- Derive an attribute I call "day_hour":
02:33:11   8  ,TO_CHAR(ydate,'D')||'_'||TO_CHAR(ydate,'HH24')dhr
02:33:11   9  -- Get ydate 4 hours in the future:
02:33:11  10  ,LEAD(ydate,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ydate4
02:33:11  11  -- Get closing price 4 hours in the future:
02:33:11  12  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) clse4
02:33:11  13  -- Calculate "Normalized-Price-Gain":
02:33:11  14  ,((LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) - clse)/clse) npg
02:33:11  15  FROM h15c
02:33:11  16  WHERE ydate >= '2007-07-01'
02:33:11  17  -- Prevent divide by zero:
02:33:11  18  AND clse > 0
02:33:11  19  ORDER BY pair,ydate
02:33:11  20  /

View created.

Elapsed: 00:00:00.04
02:33:11 SQL> 
02:33:11 SQL> -- hp410 rpt:
02:33:11 SQL> -- I should see 15 pairs and nearly identical counts for each pair:
02:33:11 SQL> SELECT pair,MIN(ydate),COUNT(*),MAX(ydate)FROM hp410 GROUP BY pair ORDER BY pair;

PAIR    MIN(YDATE)            COUNT(*) MAX(YDATE)
------- ------------------- ---------- -------------------
aud_usd 2007-07-01 21:00:00      21453 2010-11-24 19:00:00
eur_aud 2007-07-01 21:00:00      21453 2010-11-24 19:00:00
eur_cad 2007-07-01 21:00:00      21453 2010-11-24 19:00:00
eur_chf 2007-07-01 21:00:00      21453 2010-11-24 19:00:00
eur_gbp 2007-07-01 21:00:00      21411 2010-11-24 19:00:00
eur_jpy 2007-07-01 21:00:00      21453 2010-11-24 19:00:00
eur_usd 2007-07-01 21:00:00      21453 2010-11-24 19:00:00
gbp_aud 2007-07-01 21:00:00      21411 2010-11-24 19:00:00
gbp_cad 2007-07-01 21:00:00      21411 2010-11-24 19:00:00
gbp_chf 2007-07-01 21:00:00      21411 2010-11-24 19:00:00
gbp_jpy 2007-07-01 21:00:00      21411 2010-11-24 19:00:00
gbp_usd 2007-07-01 21:00:00      21411 2010-11-24 19:00:00
usd_cad 2007-07-01 21:00:00      21453 2010-11-24 19:00:00
usd_chf 2007-07-01 21:00:00      21453 2010-11-24 19:00:00
usd_jpy 2007-07-01 21:00:00      21453 2010-11-24 19:00:00

15 rows selected.

Elapsed: 00:00:00.81
02:33:12 SQL> 
02:33:12 SQL> -- Study distribution of (ydate4 - ydate):
02:33:12 SQL> SELECT AVG(ydate4 - ydate), MIN(ydate4 - ydate),MAX(ydate4 - ydate),COUNT(ydate)FROM hp410;

AVG(YDATE4-YDATE) MIN(YDATE4-YDATE) MAX(YDATE4-YDATE) COUNT(YDATE)
----------------- ----------------- ----------------- ------------
       .231761866        .166666667             2.625       321543

Elapsed: 00:00:01.50
02:33:14 SQL> 
02:33:14 SQL> -- I should see no rows WHERE the date difference is less than 4 hours:
02:33:14 SQL> SELECT COUNT(ydate)FROM hp410 WHERE (ydate4 - ydate) < 4/24;

COUNT(YDATE)
------------
           0

Elapsed: 00:00:00.94
02:33:15 SQL> 
02:33:15 SQL> -- I should see many rows WHERE the date difference is exactly 4 hours:
02:33:15 SQL> SELECT COUNT(ydate)FROM hp410 WHERE (ydate4 - ydate) = 4/24;

COUNT(YDATE)
------------
      310272

Elapsed: 00:00:00.93
02:33:15 SQL> 
02:33:15 SQL> -- I should see some rows
02:33:15 SQL> -- WHERE the date difference is greater than 4 hours due to Saturday getting sandwiched between some of the records.
02:33:15 SQL> -- Also if I am missing some rows, counts will appear here:
02:33:15 SQL> SELECT TO_CHAR(ydate,'Day'),MIN(ydate),COUNT(ydate),MAX(ydate)
02:33:15   2  FROM hp410 WHERE (ydate4 - ydate) > 4/24
02:33:15   3  GROUP BY TO_CHAR(ydate,'Day')
02:33:15   4  ORDER BY COUNT(ydate)
02:33:15   5  /

TO_CHAR(Y MIN(YDATE)          COUNT(YDATE) MAX(YDATE)
--------- ------------------- ------------ -------------------
Sunday    2009-05-10 23:00:00           15 2009-05-10 23:00:00
Monday    2009-05-11 00:00:00           45 2009-05-11 02:00:00
Tuesday   2007-12-25 12:00:00          144 2009-08-18 21:00:00
Wednesday 2008-01-09 20:00:00          171 2010-06-23 18:00:00
Thursday  2008-08-14 00:00:00          189 2009-06-25 15:00:00
Friday    2007-07-06 18:00:00        10647 2010-11-19 21:00:00

6 rows selected.

Elapsed: 00:00:00.99
02:33:16 SQL> 
02:33:16 SQL> -- Now I can aggregate:
02:33:16 SQL> CREATE OR REPLACE VIEW hp4agg AS
02:33:16   2  SELECT
02:33:16   3  pair,dhr
02:33:16   4  ,COUNT(npg)count_npg
02:33:16   5  ,ROUND(MIN(npg),4)min_npg
02:33:16   6  ,ROUND(AVG(npg),4)avg_npg
02:33:16   7  ,ROUND(STDDEV(npg),4)stddev_npg
02:33:16   8  ,ROUND(MAX(npg),4)max_npg
02:33:16   9  ,ROUND(SUM(npg),4)sum_npg
02:33:16  10  FROM hp410
02:33:16  11  GROUP BY pair,dhr
02:33:16  12  /

View created.

Elapsed: 00:00:00.04
02:33:16 SQL> 
02:33:16 SQL> -- I want more than 2 pips / hr:
02:33:16 SQL> SELECT * FROM hp4agg WHERE ABS(avg_npg) > 2 * 0.0001 * 4 ORDER BY dhr,pair;

PAIR    DHR   COUNT_NPG    MIN_NPG    AVG_NPG STDDEV_NPG    MAX_NPG    SUM_NPG
------- ---- ---------- ---------- ---------- ---------- ---------- ----------
gbp_aud 2_04        176     -.0095     -.0009      .0033      .0093     -.1497
aud_usd 2_20        178     -.0158      -.001      .0038      .0136     -.1748
gbp_jpy 2_20        178     -.0166     -.0009      .0037      .0144     -.1578
gbp_jpy 4_10        178     -.0148       .001      .0051      .0171      .1696
aud_usd 4_22        177     -.0124      .0009      .0049      .0255      .1596
gbp_aud 5_03        174     -.0168     -.0009      .0036      .0092     -.1557
eur_gbp 5_05        175     -.2243      -.001      .0174      .0171     -.1739
eur_jpy 5_05        177      -.013      .0014      .0132      .1651      .2435
gbp_aud 5_05        175     -.0148      .0018      .0356       .467      .3155
gbp_cad 5_05        175     -.0123      .0018      .0296      .3873       .314
gbp_chf 5_05        175     -.0246      .0024      .0364      .4771      .4253
gbp_jpy 5_05        175     -.0169       .003      .0383      .5021       .532
usd_cad 5_05        177     -.0088      .0009      .0161      .2102      .1672
usd_chf 5_05        177     -.0186      .0015       .022      .2885      .2638
usd_jpy 5_05        177      -.007      .0021      .0235      .3104      .3685
aud_usd 5_09        177     -.0148      .0016      .0218      .2839      .2768
eur_gbp 5_09        176     -.0128      .0013      .0219      .2869      .2272
eur_jpy 5_09        177     -.1389     -.0011      .0114      .0122     -.1928
gbp_aud 5_09        176      -.317     -.0015      .0243      .0125     -.2563
gbp_chf 5_09        176      -.321     -.0014      .0246      .0239     -.2439
gbp_jpy 5_09        176     -.3309     -.0018      .0255      .0157     -.3241
usd_chf 5_09        177     -.2257     -.0011      .0176        .03     -.1939
usd_jpy 5_09        177      -.237     -.0016      .0182      .0135     -.2771
aud_usd 5_10        176     -.2207     -.0016      .0173       .017     -.2847
eur_aud 5_10        176     -.0142       .001      .0112      .1377      .1823
eur_cad 5_10        176     -.0139       .001      .0072      .0751      .1835
eur_chf 5_10        176     -.0108       .001      .0113      .1433      .1707
eur_gbp 5_10        175     -.2238     -.0013      .0173       .014     -.2362
gbp_aud 5_10        175     -.0133       .003      .0355      .4658      .5264
gbp_cad 5_10        175     -.0195      .0029      .0295      .3852      .5067
gbp_chf 5_10        175     -.0145      .0029       .036       .473      .5132
gbp_jpy 5_10        175     -.0229      .0026       .038      .4975      .4484
usd_cad 5_10        176     -.0155       .002      .0168      .2127      .3447
usd_chf 5_10        176     -.0152      .0019      .0223      .2896       .341
usd_jpy 5_10        176     -.0178      .0015      .0239       .311      .2725
aud_usd 5_12        177     -.0183     -.0009      .0056      .0183     -.1559
usd_cad 5_12        177     -.0175      .0009      .0053      .0212      .1632
aud_usd 5_14        177      -.019      .0017      .0219      .2839      .2974
eur_gbp 5_14        177     -.0118      .0018      .0214      .2824      .3268
eur_usd 5_14        177     -.0118      .0009      .0101      .1264      .1648
gbp_aud 5_14        177     -.3159     -.0019      .0241      .0119     -.3318
gbp_cad 5_14        177     -.2747     -.0013       .021      .0141     -.2372
gbp_chf 5_14        177     -.3127     -.0021      .0237      .0088      -.365
gbp_jpy 5_14        177     -.3268     -.0019      .0255      .0173     -.3418
usd_chf 5_14        177     -.2175     -.0015      .0167       .009     -.2633
usd_jpy 5_14        177     -.2336     -.0014      .0184      .0177     -.2439
gbp_jpy 6_03        175     -.0297     -.0009      .0051      .0134     -.1571
gbp_jpy 6_05        175     -.0744      -.001      .0079      .0193     -.1671
eur_cad 6_08        177     -.0178     -.0009       .005      .0131     -.1566
aud_usd 6_18        177     -.0309      .0012      .0076      .0705      .2064
gbp_aud 6_18        177     -.0535      -.001      .0054      .0169     -.1827
gbp_aud 6_20        175     -.0473     -.0009      .0049      .0153     -.1493
gbp_aud 6_21        176     -.0409      -.001      .0051      .0162     -.1686

53 rows selected.

Elapsed: 00:00:01.79
02:33:18 SQL> 
02:33:18 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
