
SQL*Plus: Release 11.2.0.1.0 Production on Wed Dec 15 02:05:59 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

02:05:59 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
02:05:59 SQL> 02:05:59 SQL> --
02:05:59 SQL> -- eur10.sql
02:05:59 SQL> --
02:05:59 SQL> 
02:05:59 SQL> -- Creates views and tables for backtesting a forex SVM strategy
02:05:59 SQL> 
02:05:59 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.00
02:05:59 SQL> 
02:05:59 SQL> -- I created ibfu_t here:
02:05:59 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
02:05:59 SQL> 
02:05:59 SQL> CREATE OR REPLACE VIEW q11 AS
02:05:59   2  SELECT
02:05:59   3  pair
02:05:59   4  ,ydate
02:05:59   5  ,prdate
02:05:59   6  ,rownum rnum -- acts as t in my time-series
02:05:59   7  ,clse
02:05:59   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
02:05:59   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
02:05:59  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
02:05:59  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
02:05:59  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
02:05:59  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
02:05:59  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
02:05:59  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
02:05:59  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
02:05:59  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
02:05:59  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
02:05:59  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
02:05:59  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
02:05:59  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
02:05:59  22  FROM ibfu_t WHERE pair LIKE'%eur%'
02:05:59  23  ORDER BY ydate
02:05:59  24  /

View created.

Elapsed: 00:00:00.07
02:05:59 SQL> 
02:05:59 SQL> -- rpt
02:05:59 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd 	3792

Elapsed: 00:00:00.16
02:05:59 SQL> 
02:05:59 SQL> -- Calc deltas and gains
02:05:59 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.05
02:05:59 SQL> 
02:05:59 SQL> CREATE TABLE q13 COMPRESS AS
02:05:59   2  SELECT
02:05:59   3  pair
02:05:59   4  ,ydate
02:05:59   5  ,prdate
02:05:59   6  ,rnum
02:05:59   7  ,lg4
02:05:59   8  ,lg8
02:05:59   9  ,lg12
02:05:59  10  ,ld4
02:05:59  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
02:05:59  12  -- step by 1
02:05:59  13  ,clse-lg1 d01
02:05:59  14  ,lg1-lg2	d12
02:05:59  15  ,lg2-lg3	d23
02:05:59  16  ,lg3-lg4	d34
02:05:59  17  ,lg4-lg5	d45
02:05:59  18  ,lg5-lg6	d56
02:05:59  19  ,lg6-lg7	d67
02:05:59  20  ,lg7-lg8	d78
02:05:59  21  ,lg8-lg9	d89
02:05:59  22  -- step by 2
02:05:59  23  ,clse-lg2 d02
02:05:59  24  ,lg2-lg4 d24
02:05:59  25  ,lg4-lg6 d46
02:05:59  26  ,lg6-lg8 d68
02:05:59  27  -- step by 3
02:05:59  28  ,clse-lg3 d03
02:05:59  29  ,lg3-lg6	d36
02:05:59  30  ,lg6-lg9	d69
02:05:59  31  ,lg9-lg12 d912
02:05:59  32  -- step by 4
02:05:59  33  ,clse-lg4 d04
02:05:59  34  ,lg4-lg8	d48
02:05:59  35  ,lg8-lg12 d812
02:05:59  36  ,lg6-lg12 d612
02:05:59  37  ,lg12-lg18 d1218
02:05:59  38  --
02:05:59  39  ,ABS(clse-lg1)dc1
02:05:59  40  ,ABS(clse-lg2)dc2
02:05:59  41  ,ABS(clse-lg3)dc3
02:05:59  42  ,ABS(clse-lg4)dc4
02:05:59  43  ,ABS(clse-lg5)dc5
02:05:59  44  ,ABS(clse-lg6)dc6
02:05:59  45  ,ABS(clse-lg7)dc7
02:05:59  46  ,ABS(clse-lg8)dc8
02:05:59  47  ,ABS(clse-lg9)dc9
02:05:59  48  ,ABS(clse-lg12)dc12
02:05:59  49  ,ABS(clse-lg18)dc18
02:05:59  50  ,ABS(clse-lg24)dc24
02:05:59  51  ,ABS(clse-lg72)dc72
02:05:59  52  ,(ld4-clse) ug4
02:05:59  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
02:05:59  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
02:05:59  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
02:05:59  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
02:05:59  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
02:05:59  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
02:05:59  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
02:05:59  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
02:05:59  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
02:05:59  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
02:05:59  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
02:05:59  64  ,0+TO_CHAR(ydate,'HH24')hh
02:05:59  65  ,0+TO_CHAR(ydate,'D')d
02:05:59  66  ,0+TO_CHAR(ydate,'W')w
02:05:59  67  FROM q11
02:05:59  68  ORDER BY pair,ydate
02:05:59  69  /

Table created.

Elapsed: 00:00:00.67
02:06:00 SQL> 
02:06:00 SQL> -- rpt
02:06:00 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1929
	-1	    1863

Elapsed: 00:00:00.06
02:06:00 SQL> 
02:06:00 SQL> -- Calc gains and ntiles
02:06:00 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.09
02:06:00 SQL> CREATE TABLE q15 COMPRESS AS
02:06:00   2  SELECT
02:06:00   3  pair
02:06:00   4  ,ydate
02:06:00   5  ,prdate -- Should be unique
02:06:00   6  ,trend -- +1 or -1
02:06:00   7  ,dc12 -- next statement needs this
02:06:00   8  -- Use NTILE() to derive some attributes
02:06:00   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
02:06:00  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
02:06:00  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
02:06:00  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
02:06:00  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
02:06:00  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
02:06:00  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
02:06:00  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
02:06:00  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
02:06:00  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
02:06:00  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
02:06:00  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
02:06:00  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
02:06:00  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
02:06:00  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
02:06:00  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
02:06:00  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
02:06:00  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
02:06:00  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
02:06:00  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
02:06:00  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
02:06:00  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
02:06:00  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
02:06:00  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
02:06:00  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
02:06:00  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
02:06:00  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
02:06:00  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
02:06:00  37  -- date related integers: hour of day, day of week, week of month:
02:06:00  38  ,hh    att28
02:06:00  39  ,d     att29
02:06:00  40  ,w     att30
02:06:00  41  ,trend att31
02:06:00  42  ,ug4 g4
02:06:00  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
02:06:00  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
02:06:00  45  FROM q13
02:06:00  46  ORDER BY pair,ydate
02:06:00  47  /

Table created.

Elapsed: 00:00:00.79
02:06:01 SQL> 
02:06:01 SQL> -- rpt
02:06:01 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
02:06:01   2  GROUP BY pair,trend,gatt,gattn
02:06:01   3  ORDER BY pair,trend,gatt,gattn
02:06:01   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00004014	     295    .048269751
eur_usd 	-1 nup up  -.00348792	     755    -.02175909
eur_usd 	-1 up  nup .003626545	     809    -.09547087
eur_usd 	-1			       0
eur_usd 	 1 nup nup 4.2437E-06	     357    .068853821
eur_usd 	 1 nup up   -.0032753	     827    -.02133736
eur_usd 	 1 up  nup .003599664	     745    -.01955522

7 rows selected.

Elapsed: 00:00:00.03
02:06:01 SQL> 
02:06:01 SQL> -- rpt
02:06:01 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-15 00:00:00

Elapsed: 00:00:00.00
02:06:01 SQL> 
02:06:01 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.04
02:06:01 SQL> CREATE TABLE modsrc COMPRESS AS
02:06:01   2  SELECT
02:06:01   3  pair
02:06:01   4  ,ydate
02:06:01   5  ,prdate
02:06:01   6  ,trend
02:06:01   7  ,g4
02:06:01   8  ,gatt
02:06:01   9  ,gattn
02:06:01  10  ,dc12
02:06:01  11  FROM q15
02:06:01  12  /

Table created.

Elapsed: 00:00:00.04
02:06:01 SQL> 
02:06:01 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.05
02:06:01 SQL> 
02:06:01 SQL> -- rpt
02:06:01 SQL> 
02:06:01 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.07
02:06:01 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:06:01 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:06:01 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:06:01 SQL> 
02:06:01 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
02:06:01   2  GROUP BY pair,trend,gatt,gattn
02:06:01   3  ORDER BY pair,trend,gatt,gattn
02:06:01   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00004014	     295    .048269751
eur_usd 	-1 nup up  -.00348792	     755    -.02175909
eur_usd 	-1 up  nup .003626545	     809    -.09547087
eur_usd 	-1			       0
eur_usd 	 1 nup nup 4.2437E-06	     357    .068853821
eur_usd 	 1 nup up   -.0032753	     827    -.02133736
eur_usd 	 1 up  nup .003599664	     745    -.01955522

7 rows selected.

Elapsed: 00:00:00.03
02:06:01 SQL> 
02:06:01 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
02:06:01 SQL> CREATE TABLE eur_ms10 COMPRESS AS
02:06:01   2  SELECT
02:06:01   3  ydate
02:06:01   4  ,trend eur_trend
02:06:01   5  ,g4    eur_g4
02:06:01   6  ,gatt  eur_gatt
02:06:01   7  ,gattn	eur_gattn
02:06:01   8  FROM modsrc
02:06:01   9  /

Table created.

Elapsed: 00:00:00.03
02:06:01 SQL> 
02:06:01 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.06
02:06:01 SQL> 
02:06:01 SQL> -- rpt
02:06:01 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 08:00:00 2010-12-14 19:00:00	 1929	  -.0175      .0172
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	 1859	  -.0164      .0224

Elapsed: 00:00:00.02
02:06:01 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 08:00:00 2010-12-14 19:00:00	       1929	 -.0175       .0172
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	       1863	 -.0164       .0224

Elapsed: 00:00:00.00
02:06:01 SQL> 
02:06:01 SQL> -- I need a copy of q15 attributes
02:06:01 SQL> 
02:06:01 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.03
02:06:01 SQL> CREATE TABLE eur_att COMPRESS AS
02:06:01   2  SELECT
02:06:01   3  ydate
02:06:01   4  ,att00 eur_att00
02:06:01   5  ,att01 eur_att01
02:06:01   6  ,att02 eur_att02
02:06:01   7  ,att03 eur_att03
02:06:01   8  ,att04 eur_att04
02:06:01   9  ,att05 eur_att05
02:06:01  10  ,att06 eur_att06
02:06:01  11  ,att07 eur_att07
02:06:01  12  ,att08 eur_att08
02:06:01  13  ,att09 eur_att09
02:06:01  14  ,att10 eur_att10
02:06:01  15  ,att11 eur_att11
02:06:01  16  ,att12 eur_att12
02:06:01  17  ,att13 eur_att13
02:06:01  18  ,att14 eur_att14
02:06:01  19  ,att15 eur_att15
02:06:01  20  ,att16 eur_att16
02:06:01  21  ,att17 eur_att17
02:06:01  22  ,att18 eur_att18
02:06:01  23  ,att19 eur_att19
02:06:01  24  ,att20 eur_att20
02:06:01  25  ,att21 eur_att21
02:06:01  26  ,att22 eur_att22
02:06:01  27  ,att23 eur_att23
02:06:01  28  ,att24 eur_att24
02:06:01  29  ,att25 eur_att25
02:06:01  30  ,att26 eur_att26
02:06:01  31  ,att27 eur_att27
02:06:01  32  ,att28 eur_att28
02:06:01  33  ,att29 eur_att29
02:06:01  34  ,att30 eur_att30
02:06:01  35  ,att31 eur_att31
02:06:01  36  FROM q15
02:06:01  37  /

Table created.

Elapsed: 00:00:00.05
02:06:02 SQL> 
02:06:02 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.14
02:06:02 SQL> 
02:06:02 SQL> -- rpt
02:06:02 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.01
02:06:02 SQL> 
02:06:02 SQL> --
02:06:02 SQL> -- aud10.sql
02:06:02 SQL> --
02:06:02 SQL> 
02:06:02 SQL> -- Creates views and tables for backtesting a forex SVM strategy
02:06:02 SQL> 
02:06:02 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.44
02:06:02 SQL> 
02:06:02 SQL> -- I created ibfu_t here:
02:06:02 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
02:06:02 SQL> 
02:06:02 SQL> CREATE OR REPLACE VIEW q11 AS
02:06:02   2  SELECT
02:06:02   3  pair
02:06:02   4  ,ydate
02:06:02   5  ,prdate
02:06:02   6  ,rownum rnum -- acts as t in my time-series
02:06:02   7  ,clse
02:06:02   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
02:06:02   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
02:06:02  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
02:06:02  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
02:06:02  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
02:06:02  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
02:06:02  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
02:06:02  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
02:06:02  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
02:06:02  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
02:06:02  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
02:06:02  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
02:06:02  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
02:06:02  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
02:06:02  22  FROM ibfu_t WHERE pair LIKE'%aud%'
02:06:02  23  ORDER BY ydate
02:06:02  24  /

View created.

Elapsed: 00:00:00.05
02:06:02 SQL> 
02:06:02 SQL> -- rpt
02:06:02 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd 	3792

Elapsed: 00:00:00.08
02:06:02 SQL> 
02:06:02 SQL> -- Calc deltas and gains
02:06:02 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.13
02:06:02 SQL> 
02:06:02 SQL> CREATE TABLE q13 COMPRESS AS
02:06:02   2  SELECT
02:06:02   3  pair
02:06:02   4  ,ydate
02:06:02   5  ,prdate
02:06:02   6  ,rnum
02:06:02   7  ,lg4
02:06:02   8  ,lg8
02:06:02   9  ,lg12
02:06:02  10  ,ld4
02:06:02  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
02:06:02  12  -- step by 1
02:06:02  13  ,clse-lg1 d01
02:06:02  14  ,lg1-lg2	d12
02:06:02  15  ,lg2-lg3	d23
02:06:02  16  ,lg3-lg4	d34
02:06:02  17  ,lg4-lg5	d45
02:06:02  18  ,lg5-lg6	d56
02:06:02  19  ,lg6-lg7	d67
02:06:02  20  ,lg7-lg8	d78
02:06:02  21  ,lg8-lg9	d89
02:06:02  22  -- step by 2
02:06:02  23  ,clse-lg2 d02
02:06:02  24  ,lg2-lg4 d24
02:06:02  25  ,lg4-lg6 d46
02:06:02  26  ,lg6-lg8 d68
02:06:02  27  -- step by 3
02:06:02  28  ,clse-lg3 d03
02:06:02  29  ,lg3-lg6	d36
02:06:02  30  ,lg6-lg9	d69
02:06:02  31  ,lg9-lg12 d912
02:06:02  32  -- step by 4
02:06:02  33  ,clse-lg4 d04
02:06:02  34  ,lg4-lg8	d48
02:06:02  35  ,lg8-lg12 d812
02:06:02  36  ,lg6-lg12 d612
02:06:02  37  ,lg12-lg18 d1218
02:06:02  38  --
02:06:02  39  ,ABS(clse-lg1)dc1
02:06:02  40  ,ABS(clse-lg2)dc2
02:06:02  41  ,ABS(clse-lg3)dc3
02:06:02  42  ,ABS(clse-lg4)dc4
02:06:02  43  ,ABS(clse-lg5)dc5
02:06:02  44  ,ABS(clse-lg6)dc6
02:06:02  45  ,ABS(clse-lg7)dc7
02:06:02  46  ,ABS(clse-lg8)dc8
02:06:02  47  ,ABS(clse-lg9)dc9
02:06:02  48  ,ABS(clse-lg12)dc12
02:06:02  49  ,ABS(clse-lg18)dc18
02:06:02  50  ,ABS(clse-lg24)dc24
02:06:02  51  ,ABS(clse-lg72)dc72
02:06:02  52  ,(ld4-clse) ug4
02:06:02  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
02:06:02  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
02:06:02  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
02:06:02  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
02:06:02  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
02:06:02  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
02:06:02  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
02:06:02  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
02:06:02  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
02:06:02  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
02:06:02  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
02:06:02  64  ,0+TO_CHAR(ydate,'HH24')hh
02:06:02  65  ,0+TO_CHAR(ydate,'D')d
02:06:02  66  ,0+TO_CHAR(ydate,'W')w
02:06:02  67  FROM q11
02:06:02  68  ORDER BY pair,ydate
02:06:02  69  /

Table created.

Elapsed: 00:00:00.35
02:06:03 SQL> 
02:06:03 SQL> -- rpt
02:06:03 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1951
	-1	    1841

Elapsed: 00:00:00.09
02:06:03 SQL> 
02:06:03 SQL> -- Calc gains and ntiles
02:06:03 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.09
02:06:03 SQL> CREATE TABLE q15 COMPRESS AS
02:06:03   2  SELECT
02:06:03   3  pair
02:06:03   4  ,ydate
02:06:03   5  ,prdate -- Should be unique
02:06:03   6  ,trend -- +1 or -1
02:06:03   7  ,dc12 -- next statement needs this
02:06:03   8  -- Use NTILE() to derive some attributes
02:06:03   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
02:06:03  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
02:06:03  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
02:06:03  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
02:06:03  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
02:06:03  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
02:06:03  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
02:06:03  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
02:06:03  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
02:06:03  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
02:06:03  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
02:06:03  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
02:06:03  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
02:06:03  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
02:06:03  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
02:06:03  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
02:06:03  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
02:06:03  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
02:06:03  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
02:06:03  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
02:06:03  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
02:06:03  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
02:06:03  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
02:06:03  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
02:06:03  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
02:06:03  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
02:06:03  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
02:06:03  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
02:06:03  37  -- date related integers: hour of day, day of week, week of month:
02:06:03  38  ,hh    att28
02:06:03  39  ,d     att29
02:06:03  40  ,w     att30
02:06:03  41  ,trend att31
02:06:03  42  ,ug4 g4
02:06:03  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
02:06:03  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
02:06:03  45  FROM q13
02:06:03  46  ORDER BY pair,ydate
02:06:03  47  /

Table created.

Elapsed: 00:00:00.73
02:06:04 SQL> 
02:06:04 SQL> -- rpt
02:06:04 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
02:06:04   2  GROUP BY pair,trend,gatt,gattn
02:06:04   3  ORDER BY pair,trend,gatt,gattn
02:06:04   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup  -.0000113	     301    .037489029
aud_usd 	-1 nup up  -.00326065	     716    -.16044588
aud_usd 	-1 up  nup .003175335	     822    .149459209
aud_usd 	-1			       0
aud_usd 	 1 nup nup -.00002417	     362    -.02443808
aud_usd 	 1 nup up   -.0031269	     762    -.00734127
aud_usd 	 1 up  nup .003059152	     825    -.01396605
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
02:06:04 SQL> 
02:06:04 SQL> -- rpt
02:06:04 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-15 00:00:00

Elapsed: 00:00:00.00
02:06:04 SQL> 
02:06:04 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.07
02:06:04 SQL> CREATE TABLE modsrc COMPRESS AS
02:06:04   2  SELECT
02:06:04   3  pair
02:06:04   4  ,ydate
02:06:04   5  ,prdate
02:06:04   6  ,trend
02:06:04   7  ,g4
02:06:04   8  ,gatt
02:06:04   9  ,gattn
02:06:04  10  ,dc12
02:06:04  11  FROM q15
02:06:04  12  /

Table created.

Elapsed: 00:00:00.04
02:06:04 SQL> 
02:06:04 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.10
02:06:04 SQL> 
02:06:04 SQL> -- rpt
02:06:04 SQL> 
02:06:04 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.08
02:06:04 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:06:04 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:06:04 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
02:06:04 SQL> 
02:06:04 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
02:06:04   2  GROUP BY pair,trend,gatt,gattn
02:06:04   3  ORDER BY pair,trend,gatt,gattn
02:06:04   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup  -.0000113	     301    .037489029
aud_usd 	-1 nup up  -.00326065	     716    -.16044588
aud_usd 	-1 up  nup .003175335	     822    .149459209
aud_usd 	-1			       0
aud_usd 	 1 nup nup -.00002417	     362    -.02443808
aud_usd 	 1 nup up   -.0031269	     762    -.00734127
aud_usd 	 1 up  nup .003059152	     825    -.01396605
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.00
02:06:04 SQL> 
02:06:04 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
02:06:04 SQL> CREATE TABLE aud_ms10 COMPRESS AS
02:06:04   2  SELECT
02:06:04   3  ydate
02:06:04   4  ,trend aud_trend
02:06:04   5  ,g4    aud_g4
02:06:04   6  ,gatt  aud_gatt
02:06:04   7  ,gattn	aud_gattn
02:06:04   8  FROM modsrc
02:06:04   9  /

Table created.

Elapsed: 00:00:00.04
02:06:04 SQL> 
02:06:04 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.06
02:06:04 SQL> 
02:06:04 SQL> -- rpt
02:06:04 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 01:00:00 2010-12-14 22:00:00	 1949	  -.0197      .0116
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	 1839	  -.0179      .0184

Elapsed: 00:00:00.01
02:06:04 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 01:00:00 2010-12-14 22:00:00	       1951	 -.0197       .0116
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	       1841	 -.0179       .0184

Elapsed: 00:00:00.01
02:06:04 SQL> 
02:06:04 SQL> -- I need a copy of q15 attributes
02:06:04 SQL> 
02:06:04 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.05
02:06:04 SQL> CREATE TABLE aud_att COMPRESS AS
02:06:04   2  SELECT
02:06:04   3  ydate
02:06:04   4  ,att00 aud_att00
02:06:04   5  ,att01 aud_att01
02:06:04   6  ,att02 aud_att02
02:06:04   7  ,att03 aud_att03
02:06:04   8  ,att04 aud_att04
02:06:04   9  ,att05 aud_att05
02:06:04  10  ,att06 aud_att06
02:06:04  11  ,att07 aud_att07
02:06:04  12  ,att08 aud_att08
02:06:04  13  ,att09 aud_att09
02:06:04  14  ,att10 aud_att10
02:06:04  15  ,att11 aud_att11
02:06:04  16  ,att12 aud_att12
02:06:04  17  ,att13 aud_att13
02:06:04  18  ,att14 aud_att14
02:06:04  19  ,att15 aud_att15
02:06:04  20  ,att16 aud_att16
02:06:04  21  ,att17 aud_att17
02:06:04  22  ,att18 aud_att18
02:06:04  23  ,att19 aud_att19
02:06:04  24  ,att20 aud_att20
02:06:04  25  ,att21 aud_att21
02:06:04  26  ,att22 aud_att22
02:06:04  27  ,att23 aud_att23
02:06:04  28  ,att24 aud_att24
02:06:04  29  ,att25 aud_att25
02:06:04  30  ,att26 aud_att26
02:06:04  31  ,att27 aud_att27
02:06:04  32  ,att28 aud_att28
02:06:04  33  ,att29 aud_att29
02:06:04  34  ,att30 aud_att30
02:06:04  35  ,att31 aud_att31
02:06:04  36  FROM q15
02:06:04  37  /

Table created.

Elapsed: 00:00:00.10
02:06:04 SQL> 
02:06:04 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.14
02:06:04 SQL> 
02:06:04 SQL> -- rpt
02:06:04 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.00
02:06:04 SQL> 
02:06:04 SQL> --
02:06:04 SQL> -- gbp10.sql
02:06:04 SQL> --
02:06:04 SQL> 
02:06:04 SQL> -- Creates views and tables for backtesting a forex SVM strategy
02:06:04 SQL> 
02:06:04 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.41
02:06:05 SQL> 
02:06:05 SQL> -- I created ibfu_t here:
02:06:05 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
02:06:05 SQL> 
02:06:05 SQL> CREATE OR REPLACE VIEW q11 AS
02:06:05   2  SELECT
02:06:05   3  pair
02:06:05   4  ,ydate
02:06:05   5  ,prdate
02:06:05   6  ,rownum rnum -- acts as t in my time-series
02:06:05   7  ,clse
02:06:05   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
02:06:05   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
02:06:05  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
02:06:05  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
02:06:05  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
02:06:05  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
02:06:05  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
02:06:05  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
02:06:05  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
02:06:05  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
02:06:05  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
02:06:05  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
02:06:05  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
02:06:05  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
02:06:05  22  FROM ibfu_t WHERE pair LIKE'%gbp%'
02:06:05  23  ORDER BY ydate
02:06:05  24  /

View created.

Elapsed: 00:00:00.10
02:06:05 SQL> 
02:06:05 SQL> -- rpt
02:06:05 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd 	3792

Elapsed: 00:00:00.08
02:06:05 SQL> 
02:06:05 SQL> -- Calc deltas and gains
02:06:05 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.13
02:06:05 SQL> 
02:06:05 SQL> CREATE TABLE q13 COMPRESS AS
02:06:05   2  SELECT
02:06:05   3  pair
02:06:05   4  ,ydate
02:06:05   5  ,prdate
02:06:05   6  ,rnum
02:06:05   7  ,lg4
02:06:05   8  ,lg8
02:06:05   9  ,lg12
02:06:05  10  ,ld4
02:06:05  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
02:06:05  12  -- step by 1
02:06:05  13  ,clse-lg1 d01
02:06:05  14  ,lg1-lg2	d12
02:06:05  15  ,lg2-lg3	d23
02:06:05  16  ,lg3-lg4	d34
02:06:05  17  ,lg4-lg5	d45
02:06:05  18  ,lg5-lg6	d56
02:06:05  19  ,lg6-lg7	d67
02:06:05  20  ,lg7-lg8	d78
02:06:05  21  ,lg8-lg9	d89
02:06:05  22  -- step by 2
02:06:05  23  ,clse-lg2 d02
02:06:05  24  ,lg2-lg4 d24
02:06:05  25  ,lg4-lg6 d46
02:06:05  26  ,lg6-lg8 d68
02:06:05  27  -- step by 3
02:06:05  28  ,clse-lg3 d03
02:06:05  29  ,lg3-lg6	d36
02:06:05  30  ,lg6-lg9	d69
02:06:05  31  ,lg9-lg12 d912
02:06:05  32  -- step by 4
02:06:05  33  ,clse-lg4 d04
02:06:05  34  ,lg4-lg8	d48
02:06:05  35  ,lg8-lg12 d812
02:06:05  36  ,lg6-lg12 d612
02:06:05  37  ,lg12-lg18 d1218
02:06:05  38  --
02:06:05  39  ,ABS(clse-lg1)dc1
02:06:05  40  ,ABS(clse-lg2)dc2
02:06:05  41  ,ABS(clse-lg3)dc3
02:06:05  42  ,ABS(clse-lg4)dc4
02:06:05  43  ,ABS(clse-lg5)dc5
02:06:05  44  ,ABS(clse-lg6)dc6
02:06:05  45  ,ABS(clse-lg7)dc7
02:06:05  46  ,ABS(clse-lg8)dc8
02:06:05  47  ,ABS(clse-lg9)dc9
02:06:05  48  ,ABS(clse-lg12)dc12
02:06:05  49  ,ABS(clse-lg18)dc18
02:06:05  50  ,ABS(clse-lg24)dc24
02:06:05  51  ,ABS(clse-lg72)dc72
02:06:05  52  ,(ld4-clse) ug4
02:06:05  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
02:06:05  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
02:06:05  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
02:06:05  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
02:06:05  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
02:06:05  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
02:06:05  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
02:06:05  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
02:06:05  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
02:06:05  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
02:06:05  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
02:06:05  64  ,0+TO_CHAR(ydate,'HH24')hh
02:06:05  65  ,0+TO_CHAR(ydate,'D')d
02:06:05  66  ,0+TO_CHAR(ydate,'W')w
02:06:05  67  FROM q11
02:06:05  68  ORDER BY pair,ydate
02:06:05  69  /

Table created.

Elapsed: 00:00:00.36
02:06:06 SQL> 
02:06:06 SQL> -- rpt
02:06:06 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1918
	-1	    1874

Elapsed: 00:00:00.07
02:06:06 SQL> 
02:06:06 SQL> -- Calc gains and ntiles
02:06:06 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.17
02:06:06 SQL> CREATE TABLE q15 COMPRESS AS
02:06:06   2  SELECT
02:06:06   3  pair
02:06:06   4  ,ydate
02:06:06   5  ,prdate -- Should be unique
02:06:06   6  ,trend -- +1 or -1
02:06:06   7  ,dc12 -- next statement needs this
02:06:06   8  -- Use NTILE() to derive some attributes
02:06:06   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
02:06:06  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
02:06:06  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
02:06:06  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
02:06:06  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
02:06:06  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
02:06:06  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
02:06:06  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
02:06:06  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
02:06:06  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
02:06:06  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
02:06:06  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
02:06:06  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
02:06:06  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
02:06:06  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
02:06:06  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
02:06:06  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
02:06:06  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
02:06:06  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
02:06:06  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
02:06:06  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
02:06:06  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
02:06:06  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
02:06:06  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
02:06:06  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
02:06:06  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
02:06:06  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
02:06:06  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
02:06:06  37  -- date related integers: hour of day, day of week, week of month:
02:06:06  38  ,hh    att28
02:06:06  39  ,d     att29
02:06:06  40  ,w     att30
02:06:06  41  ,trend att31
02:06:06  42  ,ug4 g4
02:06:06  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
02:06:06  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
02:06:06  45  FROM q13
02:06:06  46  ORDER BY pair,ydate
02:06:06  47  /

Table created.

Elapsed: 00:00:00.79
02:06:07 SQL> 
02:06:07 SQL> -- rpt
02:06:07 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
02:06:07   2  GROUP BY pair,trend,gatt,gattn
02:06:07   3  ORDER BY pair,trend,gatt,gattn
02:06:07   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -3.832E-06	     304    .031143431
gbp_usd 	-1 nup up  -.00343995	     771     -.0408022
gbp_usd 	-1 up  nup .003627428	     795    .021496454
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup 7.9279E-06	     333    .029231468
gbp_usd 	 1 nup up  -.00341519	     792    .053150895
gbp_usd 	 1 up  nup .003562295	     793    -.04671055

7 rows selected.

Elapsed: 00:00:00.02
02:06:07 SQL> 
02:06:07 SQL> -- rpt
02:06:07 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-15 00:00:00

Elapsed: 00:00:00.01
02:06:07 SQL> 
02:06:07 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.07
02:06:07 SQL> CREATE TABLE modsrc COMPRESS AS
02:06:07   2  SELECT
02:06:07   3  pair
02:06:07   4  ,ydate
02:06:07   5  ,prdate
02:06:07   6  ,trend
02:06:07   7  ,g4
02:06:07   8  ,gatt
02:06:07   9  ,gattn
02:06:07  10  ,dc12
02:06:07  11  FROM q15
02:06:07  12  /

Table created.

Elapsed: 00:00:00.04
02:06:07 SQL> 
02:06:07 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.07
02:06:07 SQL> 
02:06:07 SQL> -- rpt
02:06:07 SQL> 
02:06:07 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.08
02:06:07 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:06:07 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:06:07 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:06:07 SQL> 
02:06:07 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
02:06:07   2  GROUP BY pair,trend,gatt,gattn
02:06:07   3  ORDER BY pair,trend,gatt,gattn
02:06:07   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -3.832E-06	     304    .031143431
gbp_usd 	-1 nup up  -.00343995	     771     -.0408022
gbp_usd 	-1 up  nup .003627428	     795    .021496454
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup 7.9279E-06	     333    .029231468
gbp_usd 	 1 nup up  -.00341519	     792    .053150895
gbp_usd 	 1 up  nup .003562295	     793    -.04671055

7 rows selected.

Elapsed: 00:00:00.00
02:06:07 SQL> 
02:06:07 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
02:06:07 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
02:06:07   2  SELECT
02:06:07   3  ydate
02:06:07   4  ,trend gbp_trend
02:06:07   5  ,g4    gbp_g4
02:06:07   6  ,gatt  gbp_gatt
02:06:07   7  ,gattn	gbp_gattn
02:06:07   8  FROM modsrc
02:06:07   9  /

Table created.

Elapsed: 00:00:00.03
02:06:07 SQL> 
02:06:07 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.06
02:06:07 SQL> 
02:06:07 SQL> -- rpt
02:06:07 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 01:00:00 2010-12-14 11:00:00	 1918	  -.0194      .0192
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	 1870	  -.0243      .0217

Elapsed: 00:00:00.01
02:06:07 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 01:00:00 2010-12-14 11:00:00	       1918	 -.0194       .0192
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	       1874	 -.0243       .0217

Elapsed: 00:00:00.01
02:06:07 SQL> 
02:06:07 SQL> -- I need a copy of q15 attributes
02:06:07 SQL> 
02:06:07 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.04
02:06:07 SQL> CREATE TABLE gbp_att COMPRESS AS
02:06:07   2  SELECT
02:06:07   3  ydate
02:06:07   4  ,att00 gbp_att00
02:06:07   5  ,att01 gbp_att01
02:06:07   6  ,att02 gbp_att02
02:06:07   7  ,att03 gbp_att03
02:06:07   8  ,att04 gbp_att04
02:06:07   9  ,att05 gbp_att05
02:06:07  10  ,att06 gbp_att06
02:06:07  11  ,att07 gbp_att07
02:06:07  12  ,att08 gbp_att08
02:06:07  13  ,att09 gbp_att09
02:06:07  14  ,att10 gbp_att10
02:06:07  15  ,att11 gbp_att11
02:06:07  16  ,att12 gbp_att12
02:06:07  17  ,att13 gbp_att13
02:06:07  18  ,att14 gbp_att14
02:06:07  19  ,att15 gbp_att15
02:06:07  20  ,att16 gbp_att16
02:06:07  21  ,att17 gbp_att17
02:06:07  22  ,att18 gbp_att18
02:06:07  23  ,att19 gbp_att19
02:06:07  24  ,att20 gbp_att20
02:06:07  25  ,att21 gbp_att21
02:06:07  26  ,att22 gbp_att22
02:06:07  27  ,att23 gbp_att23
02:06:07  28  ,att24 gbp_att24
02:06:07  29  ,att25 gbp_att25
02:06:07  30  ,att26 gbp_att26
02:06:07  31  ,att27 gbp_att27
02:06:07  32  ,att28 gbp_att28
02:06:07  33  ,att29 gbp_att29
02:06:07  34  ,att30 gbp_att30
02:06:07  35  ,att31 gbp_att31
02:06:07  36  FROM q15
02:06:07  37  /

Table created.

Elapsed: 00:00:00.05
02:06:07 SQL> 
02:06:07 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.14
02:06:07 SQL> 
02:06:07 SQL> -- rpt
02:06:07 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.01
02:06:07 SQL> 
02:06:07 SQL> --
02:06:07 SQL> -- jpy10.sql
02:06:07 SQL> --
02:06:07 SQL> 
02:06:07 SQL> -- Creates views and tables for backtesting a forex SVM strategy
02:06:07 SQL> 
02:06:07 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.44
02:06:08 SQL> 
02:06:08 SQL> -- I created ibfu_t here:
02:06:08 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
02:06:08 SQL> 
02:06:08 SQL> CREATE OR REPLACE VIEW q11 AS
02:06:08   2  SELECT
02:06:08   3  pair
02:06:08   4  ,ydate
02:06:08   5  ,prdate
02:06:08   6  ,rownum rnum -- acts as t in my time-series
02:06:08   7  ,clse
02:06:08   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
02:06:08   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
02:06:08  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
02:06:08  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
02:06:08  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
02:06:08  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
02:06:08  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
02:06:08  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
02:06:08  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
02:06:08  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
02:06:08  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
02:06:08  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
02:06:08  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
02:06:08  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
02:06:08  22  FROM ibfu_t WHERE pair LIKE'%jpy%'
02:06:08  23  ORDER BY ydate
02:06:08  24  /

View created.

Elapsed: 00:00:00.05
02:06:08 SQL> 
02:06:08 SQL> -- rpt
02:06:08 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy 	3792

Elapsed: 00:00:00.08
02:06:08 SQL> 
02:06:08 SQL> -- Calc deltas and gains
02:06:08 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.13
02:06:08 SQL> 
02:06:08 SQL> CREATE TABLE q13 COMPRESS AS
02:06:08   2  SELECT
02:06:08   3  pair
02:06:08   4  ,ydate
02:06:08   5  ,prdate
02:06:08   6  ,rnum
02:06:08   7  ,lg4
02:06:08   8  ,lg8
02:06:08   9  ,lg12
02:06:08  10  ,ld4
02:06:08  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
02:06:08  12  -- step by 1
02:06:08  13  ,clse-lg1 d01
02:06:08  14  ,lg1-lg2	d12
02:06:08  15  ,lg2-lg3	d23
02:06:08  16  ,lg3-lg4	d34
02:06:08  17  ,lg4-lg5	d45
02:06:08  18  ,lg5-lg6	d56
02:06:08  19  ,lg6-lg7	d67
02:06:08  20  ,lg7-lg8	d78
02:06:08  21  ,lg8-lg9	d89
02:06:08  22  -- step by 2
02:06:08  23  ,clse-lg2 d02
02:06:08  24  ,lg2-lg4 d24
02:06:08  25  ,lg4-lg6 d46
02:06:08  26  ,lg6-lg8 d68
02:06:08  27  -- step by 3
02:06:08  28  ,clse-lg3 d03
02:06:08  29  ,lg3-lg6	d36
02:06:08  30  ,lg6-lg9	d69
02:06:08  31  ,lg9-lg12 d912
02:06:08  32  -- step by 4
02:06:08  33  ,clse-lg4 d04
02:06:08  34  ,lg4-lg8	d48
02:06:08  35  ,lg8-lg12 d812
02:06:08  36  ,lg6-lg12 d612
02:06:08  37  ,lg12-lg18 d1218
02:06:08  38  --
02:06:08  39  ,ABS(clse-lg1)dc1
02:06:08  40  ,ABS(clse-lg2)dc2
02:06:08  41  ,ABS(clse-lg3)dc3
02:06:08  42  ,ABS(clse-lg4)dc4
02:06:08  43  ,ABS(clse-lg5)dc5
02:06:08  44  ,ABS(clse-lg6)dc6
02:06:08  45  ,ABS(clse-lg7)dc7
02:06:08  46  ,ABS(clse-lg8)dc8
02:06:08  47  ,ABS(clse-lg9)dc9
02:06:08  48  ,ABS(clse-lg12)dc12
02:06:08  49  ,ABS(clse-lg18)dc18
02:06:08  50  ,ABS(clse-lg24)dc24
02:06:08  51  ,ABS(clse-lg72)dc72
02:06:08  52  ,(ld4-clse) ug4
02:06:08  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
02:06:08  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
02:06:08  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
02:06:08  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
02:06:08  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
02:06:08  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
02:06:08  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
02:06:08  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
02:06:08  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
02:06:08  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
02:06:08  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
02:06:08  64  ,0+TO_CHAR(ydate,'HH24')hh
02:06:08  65  ,0+TO_CHAR(ydate,'D')d
02:06:08  66  ,0+TO_CHAR(ydate,'W')w
02:06:08  67  FROM q11
02:06:08  68  ORDER BY pair,ydate
02:06:08  69  /

Table created.

Elapsed: 00:00:00.36
02:06:08 SQL> 
02:06:08 SQL> -- rpt
02:06:08 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1712
	-1	    2080

Elapsed: 00:00:00.03
02:06:08 SQL> 
02:06:08 SQL> -- Calc gains and ntiles
02:06:08 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.15
02:06:09 SQL> CREATE TABLE q15 COMPRESS AS
02:06:09   2  SELECT
02:06:09   3  pair
02:06:09   4  ,ydate
02:06:09   5  ,prdate -- Should be unique
02:06:09   6  ,trend -- +1 or -1
02:06:09   7  ,dc12 -- next statement needs this
02:06:09   8  -- Use NTILE() to derive some attributes
02:06:09   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
02:06:09  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
02:06:09  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
02:06:09  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
02:06:09  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
02:06:09  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
02:06:09  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
02:06:09  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
02:06:09  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
02:06:09  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
02:06:09  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
02:06:09  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
02:06:09  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
02:06:09  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
02:06:09  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
02:06:09  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
02:06:09  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
02:06:09  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
02:06:09  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
02:06:09  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
02:06:09  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
02:06:09  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
02:06:09  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
02:06:09  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
02:06:09  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
02:06:09  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
02:06:09  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
02:06:09  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
02:06:09  37  -- date related integers: hour of day, day of week, week of month:
02:06:09  38  ,hh    att28
02:06:09  39  ,d     att29
02:06:09  40  ,w     att30
02:06:09  41  ,trend att31
02:06:09  42  ,ug4 g4
02:06:09  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
02:06:09  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
02:06:09  45  FROM q13
02:06:09  46  ORDER BY pair,ydate
02:06:09  47  /

Table created.

Elapsed: 00:00:00.73
02:06:09 SQL> 
02:06:09 SQL> -- rpt
02:06:09 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
02:06:09   2  GROUP BY pair,trend,gatt,gattn
02:06:09   3  ORDER BY pair,trend,gatt,gattn
02:06:09   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	      57
usd_jpy 	-1 nup up  -.16870621	     999    -.06495076
usd_jpy 	-1 up  nup .160062012	    1024    .157761449
usd_jpy 	 1 nup nup	    0	      28
usd_jpy 	 1 nup up  -.16423427	     922    -.00550838
usd_jpy 	 1 up  nup .157787599	     758    .109714172
usd_jpy 	 1			       0

7 rows selected.

Elapsed: 00:00:00.01
02:06:09 SQL> 
02:06:09 SQL> -- rpt
02:06:09 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-15 00:00:00

Elapsed: 00:00:00.01
02:06:09 SQL> 
02:06:09 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
02:06:09 SQL> CREATE TABLE modsrc COMPRESS AS
02:06:09   2  SELECT
02:06:09   3  pair
02:06:09   4  ,ydate
02:06:09   5  ,prdate
02:06:09   6  ,trend
02:06:09   7  ,g4
02:06:09   8  ,gatt
02:06:09   9  ,gattn
02:06:09  10  ,dc12
02:06:09  11  FROM q15
02:06:09  12  /

Table created.

Elapsed: 00:00:00.05
02:06:09 SQL> 
02:06:09 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.06
02:06:09 SQL> 
02:06:09 SQL> -- rpt
02:06:09 SQL> 
02:06:09 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.08
02:06:10 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:06:10 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
02:06:10 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:06:10 SQL> 
02:06:10 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
02:06:10   2  GROUP BY pair,trend,gatt,gattn
02:06:10   3  ORDER BY pair,trend,gatt,gattn
02:06:10   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	      57
usd_jpy 	-1 nup up  -.16870621	     999    -.06495076
usd_jpy 	-1 up  nup .160062012	    1024    .157761449
usd_jpy 	 1 nup nup	    0	      28
usd_jpy 	 1 nup up  -.16423427	     922    -.00550838
usd_jpy 	 1 up  nup .157787599	     758    .109714172
usd_jpy 	 1			       0

7 rows selected.

Elapsed: 00:00:00.01
02:06:10 SQL> 
02:06:10 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
02:06:10 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
02:06:10   2  SELECT
02:06:10   3  ydate
02:06:10   4  ,trend jpy_trend
02:06:10   5  ,g4    jpy_g4
02:06:10   6  ,gatt  jpy_gatt
02:06:10   7  ,gattn	jpy_gattn
02:06:10   8  FROM modsrc
02:06:10   9  /

Table created.

Elapsed: 00:00:00.08
02:06:10 SQL> 
02:06:10 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.07
02:06:10 SQL> 
02:06:10 SQL> -- rpt
02:06:10 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 01:00:00 2010-12-15 00:00:00	 1708	   -1.05	.71
	-1 2010-05-11 13:00:00 2010-12-14 19:00:00	 2080	   -2.13       1.97

Elapsed: 00:00:00.01
02:06:10 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 01:00:00 2010-12-15 00:00:00	       1712	  -1.05 	.71
	-1 2010-05-11 13:00:00 2010-12-14 19:00:00	       2080	  -2.13        1.97

Elapsed: 00:00:00.01
02:06:10 SQL> 
02:06:10 SQL> -- I need a copy of q15 attributes
02:06:10 SQL> 
02:06:10 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.10
02:06:10 SQL> CREATE TABLE jpy_att COMPRESS AS
02:06:10   2  SELECT
02:06:10   3  ydate
02:06:10   4  ,att00 jpy_att00
02:06:10   5  ,att01 jpy_att01
02:06:10   6  ,att02 jpy_att02
02:06:10   7  ,att03 jpy_att03
02:06:10   8  ,att04 jpy_att04
02:06:10   9  ,att05 jpy_att05
02:06:10  10  ,att06 jpy_att06
02:06:10  11  ,att07 jpy_att07
02:06:10  12  ,att08 jpy_att08
02:06:10  13  ,att09 jpy_att09
02:06:10  14  ,att10 jpy_att10
02:06:10  15  ,att11 jpy_att11
02:06:10  16  ,att12 jpy_att12
02:06:10  17  ,att13 jpy_att13
02:06:10  18  ,att14 jpy_att14
02:06:10  19  ,att15 jpy_att15
02:06:10  20  ,att16 jpy_att16
02:06:10  21  ,att17 jpy_att17
02:06:10  22  ,att18 jpy_att18
02:06:10  23  ,att19 jpy_att19
02:06:10  24  ,att20 jpy_att20
02:06:10  25  ,att21 jpy_att21
02:06:10  26  ,att22 jpy_att22
02:06:10  27  ,att23 jpy_att23
02:06:10  28  ,att24 jpy_att24
02:06:10  29  ,att25 jpy_att25
02:06:10  30  ,att26 jpy_att26
02:06:10  31  ,att27 jpy_att27
02:06:10  32  ,att28 jpy_att28
02:06:10  33  ,att29 jpy_att29
02:06:10  34  ,att30 jpy_att30
02:06:10  35  ,att31 jpy_att31
02:06:10  36  FROM q15
02:06:10  37  /

Table created.

Elapsed: 00:00:00.09
02:06:10 SQL> 
02:06:10 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.09
02:06:10 SQL> 
02:06:10 SQL> -- rpt
02:06:10 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.00
02:06:10 SQL> 
02:06:10 SQL> --
02:06:10 SQL> -- cad10.sql
02:06:10 SQL> --
02:06:10 SQL> 
02:06:10 SQL> -- Creates views and tables for backtesting a forex SVM strategy
02:06:10 SQL> 
02:06:10 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.45
02:06:11 SQL> 
02:06:11 SQL> -- I created ibfu_t here:
02:06:11 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
02:06:11 SQL> 
02:06:11 SQL> CREATE OR REPLACE VIEW q11 AS
02:06:11   2  SELECT
02:06:11   3  pair
02:06:11   4  ,ydate
02:06:11   5  ,prdate
02:06:11   6  ,rownum rnum -- acts as t in my time-series
02:06:11   7  ,clse
02:06:11   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
02:06:11   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
02:06:11  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
02:06:11  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
02:06:11  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
02:06:11  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
02:06:11  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
02:06:11  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
02:06:11  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
02:06:11  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
02:06:11  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
02:06:11  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
02:06:11  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
02:06:11  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
02:06:11  22  FROM ibfu_t WHERE pair LIKE'%cad%'
02:06:11  23  ORDER BY ydate
02:06:11  24  /

View created.

Elapsed: 00:00:00.05
02:06:11 SQL> 
02:06:11 SQL> -- rpt
02:06:11 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad 	3792

Elapsed: 00:00:00.08
02:06:11 SQL> 
02:06:11 SQL> -- Calc deltas and gains
02:06:11 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.13
02:06:11 SQL> 
02:06:11 SQL> CREATE TABLE q13 COMPRESS AS
02:06:11   2  SELECT
02:06:11   3  pair
02:06:11   4  ,ydate
02:06:11   5  ,prdate
02:06:11   6  ,rnum
02:06:11   7  ,lg4
02:06:11   8  ,lg8
02:06:11   9  ,lg12
02:06:11  10  ,ld4
02:06:11  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
02:06:11  12  -- step by 1
02:06:11  13  ,clse-lg1 d01
02:06:11  14  ,lg1-lg2	d12
02:06:11  15  ,lg2-lg3	d23
02:06:11  16  ,lg3-lg4	d34
02:06:11  17  ,lg4-lg5	d45
02:06:11  18  ,lg5-lg6	d56
02:06:11  19  ,lg6-lg7	d67
02:06:11  20  ,lg7-lg8	d78
02:06:11  21  ,lg8-lg9	d89
02:06:11  22  -- step by 2
02:06:11  23  ,clse-lg2 d02
02:06:11  24  ,lg2-lg4 d24
02:06:11  25  ,lg4-lg6 d46
02:06:11  26  ,lg6-lg8 d68
02:06:11  27  -- step by 3
02:06:11  28  ,clse-lg3 d03
02:06:11  29  ,lg3-lg6	d36
02:06:11  30  ,lg6-lg9	d69
02:06:11  31  ,lg9-lg12 d912
02:06:11  32  -- step by 4
02:06:11  33  ,clse-lg4 d04
02:06:11  34  ,lg4-lg8	d48
02:06:11  35  ,lg8-lg12 d812
02:06:11  36  ,lg6-lg12 d612
02:06:11  37  ,lg12-lg18 d1218
02:06:11  38  --
02:06:11  39  ,ABS(clse-lg1)dc1
02:06:11  40  ,ABS(clse-lg2)dc2
02:06:11  41  ,ABS(clse-lg3)dc3
02:06:11  42  ,ABS(clse-lg4)dc4
02:06:11  43  ,ABS(clse-lg5)dc5
02:06:11  44  ,ABS(clse-lg6)dc6
02:06:11  45  ,ABS(clse-lg7)dc7
02:06:11  46  ,ABS(clse-lg8)dc8
02:06:11  47  ,ABS(clse-lg9)dc9
02:06:11  48  ,ABS(clse-lg12)dc12
02:06:11  49  ,ABS(clse-lg18)dc18
02:06:11  50  ,ABS(clse-lg24)dc24
02:06:11  51  ,ABS(clse-lg72)dc72
02:06:11  52  ,(ld4-clse) ug4
02:06:11  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
02:06:11  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
02:06:11  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
02:06:11  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
02:06:11  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
02:06:11  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
02:06:11  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
02:06:11  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
02:06:11  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
02:06:11  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
02:06:11  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
02:06:11  64  ,0+TO_CHAR(ydate,'HH24')hh
02:06:11  65  ,0+TO_CHAR(ydate,'D')d
02:06:11  66  ,0+TO_CHAR(ydate,'W')w
02:06:11  67  FROM q11
02:06:11  68  ORDER BY pair,ydate
02:06:11  69  /

Table created.

Elapsed: 00:00:00.46
02:06:11 SQL> 
02:06:11 SQL> -- rpt
02:06:11 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1734
	-1	    2058

Elapsed: 00:00:00.03
02:06:11 SQL> 
02:06:11 SQL> -- Calc gains and ntiles
02:06:11 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.16
02:06:11 SQL> CREATE TABLE q15 COMPRESS AS
02:06:11   2  SELECT
02:06:11   3  pair
02:06:11   4  ,ydate
02:06:11   5  ,prdate -- Should be unique
02:06:11   6  ,trend -- +1 or -1
02:06:11   7  ,dc12 -- next statement needs this
02:06:11   8  -- Use NTILE() to derive some attributes
02:06:11   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
02:06:11  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
02:06:11  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
02:06:11  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
02:06:11  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
02:06:11  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
02:06:11  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
02:06:11  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
02:06:11  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
02:06:11  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
02:06:11  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
02:06:11  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
02:06:11  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
02:06:11  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
02:06:11  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
02:06:11  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
02:06:11  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
02:06:11  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
02:06:11  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
02:06:11  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
02:06:11  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
02:06:11  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
02:06:11  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
02:06:11  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
02:06:11  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
02:06:11  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
02:06:11  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
02:06:11  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
02:06:11  37  -- date related integers: hour of day, day of week, week of month:
02:06:11  38  ,hh    att28
02:06:11  39  ,d     att29
02:06:11  40  ,w     att30
02:06:11  41  ,trend att31
02:06:11  42  ,ug4 g4
02:06:11  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
02:06:11  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
02:06:11  45  FROM q13
02:06:11  46  ORDER BY pair,ydate
02:06:11  47  /

Table created.

Elapsed: 00:00:00.73
02:06:12 SQL> 
02:06:12 SQL> -- rpt
02:06:12 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
02:06:12   2  GROUP BY pair,trend,gatt,gattn
02:06:12   3  ORDER BY pair,trend,gatt,gattn
02:06:12   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00003116	     495    .026030817
usd_cad 	-1 nup up  -.00261484	     790    .068465838
usd_cad 	-1 up  nup .002811655	     769    .029227285
usd_cad 	-1			       0
usd_cad 	 1 nup nup -4.593E-07	     381    .041039252
usd_cad 	 1 nup up  -.00285413	     718    -.01070071
usd_cad 	 1 up  nup .003006969	     635    .054044227

7 rows selected.

Elapsed: 00:00:00.04
02:06:12 SQL> 
02:06:12 SQL> -- rpt
02:06:12 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-15 00:00:00

Elapsed: 00:00:00.01
02:06:12 SQL> 
02:06:12 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.15
02:06:12 SQL> CREATE TABLE modsrc COMPRESS AS
02:06:12   2  SELECT
02:06:12   3  pair
02:06:12   4  ,ydate
02:06:12   5  ,prdate
02:06:12   6  ,trend
02:06:12   7  ,g4
02:06:12   8  ,gatt
02:06:12   9  ,gattn
02:06:12  10  ,dc12
02:06:12  11  FROM q15
02:06:12  12  /

Table created.

Elapsed: 00:00:00.05
02:06:12 SQL> 
02:06:12 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.11
02:06:13 SQL> 
02:06:13 SQL> -- rpt
02:06:13 SQL> 
02:06:13 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.08
02:06:13 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:06:13 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:06:13 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:06:13 SQL> 
02:06:13 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
02:06:13   2  GROUP BY pair,trend,gatt,gattn
02:06:13   3  ORDER BY pair,trend,gatt,gattn
02:06:13   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00003116	     495    .026030817
usd_cad 	-1 nup up  -.00261484	     790    .068465838
usd_cad 	-1 up  nup .002811655	     769    .029227285
usd_cad 	-1			       0
usd_cad 	 1 nup nup -4.593E-07	     381    .041039252
usd_cad 	 1 nup up  -.00285413	     718    -.01070071
usd_cad 	 1 up  nup .003006969	     635    .054044227

7 rows selected.

Elapsed: 00:00:00.00
02:06:13 SQL> 
02:06:13 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
02:06:13 SQL> CREATE TABLE cad_ms10 COMPRESS AS
02:06:13   2  SELECT
02:06:13   3  ydate
02:06:13   4  ,trend cad_trend
02:06:13   5  ,g4    cad_g4
02:06:13   6  ,gatt  cad_gatt
02:06:13   7  ,gattn	cad_gattn
02:06:13   8  FROM modsrc
02:06:13   9  /

Table created.

Elapsed: 00:00:00.11
02:06:13 SQL> 
02:06:13 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.06
02:06:13 SQL> 
02:06:13 SQL> -- rpt
02:06:13 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 03:00:00 2010-12-14 15:00:00	 1734	  -.0173      .0159
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	 2054	  -.0139      .0147

Elapsed: 00:00:00.02
02:06:13 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 03:00:00 2010-12-14 15:00:00	       1734	 -.0173       .0159
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	       2058	 -.0139       .0147

Elapsed: 00:00:00.01
02:06:13 SQL> 
02:06:13 SQL> -- I need a copy of q15 attributes
02:06:13 SQL> 
02:06:13 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.03
02:06:13 SQL> CREATE TABLE cad_att COMPRESS AS
02:06:13   2  SELECT
02:06:13   3  ydate
02:06:13   4  ,att00 cad_att00
02:06:13   5  ,att01 cad_att01
02:06:13   6  ,att02 cad_att02
02:06:13   7  ,att03 cad_att03
02:06:13   8  ,att04 cad_att04
02:06:13   9  ,att05 cad_att05
02:06:13  10  ,att06 cad_att06
02:06:13  11  ,att07 cad_att07
02:06:13  12  ,att08 cad_att08
02:06:13  13  ,att09 cad_att09
02:06:13  14  ,att10 cad_att10
02:06:13  15  ,att11 cad_att11
02:06:13  16  ,att12 cad_att12
02:06:13  17  ,att13 cad_att13
02:06:13  18  ,att14 cad_att14
02:06:13  19  ,att15 cad_att15
02:06:13  20  ,att16 cad_att16
02:06:13  21  ,att17 cad_att17
02:06:13  22  ,att18 cad_att18
02:06:13  23  ,att19 cad_att19
02:06:13  24  ,att20 cad_att20
02:06:13  25  ,att21 cad_att21
02:06:13  26  ,att22 cad_att22
02:06:13  27  ,att23 cad_att23
02:06:13  28  ,att24 cad_att24
02:06:13  29  ,att25 cad_att25
02:06:13  30  ,att26 cad_att26
02:06:13  31  ,att27 cad_att27
02:06:13  32  ,att28 cad_att28
02:06:13  33  ,att29 cad_att29
02:06:13  34  ,att30 cad_att30
02:06:13  35  ,att31 cad_att31
02:06:13  36  FROM q15
02:06:13  37  /

Table created.

Elapsed: 00:00:00.10
02:06:13 SQL> 
02:06:13 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.10
02:06:13 SQL> 
02:06:13 SQL> -- rpt
02:06:13 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.03
02:06:13 SQL> 
02:06:13 SQL> --
02:06:13 SQL> -- chf10.sql
02:06:13 SQL> --
02:06:13 SQL> 
02:06:13 SQL> -- Creates views and tables for backtesting a forex SVM strategy
02:06:13 SQL> 
02:06:13 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.39
02:06:14 SQL> 
02:06:14 SQL> -- I created ibfu_t here:
02:06:14 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
02:06:14 SQL> 
02:06:14 SQL> CREATE OR REPLACE VIEW q11 AS
02:06:14   2  SELECT
02:06:14   3  pair
02:06:14   4  ,ydate
02:06:14   5  ,prdate
02:06:14   6  ,rownum rnum -- acts as t in my time-series
02:06:14   7  ,clse
02:06:14   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
02:06:14   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
02:06:14  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
02:06:14  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
02:06:14  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
02:06:14  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
02:06:14  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
02:06:14  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
02:06:14  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
02:06:14  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
02:06:14  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
02:06:14  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
02:06:14  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
02:06:14  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
02:06:14  22  FROM ibfu_t WHERE pair LIKE'%chf%'
02:06:14  23  ORDER BY ydate
02:06:14  24  /

View created.

Elapsed: 00:00:00.05
02:06:14 SQL> 
02:06:14 SQL> -- rpt
02:06:14 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf 	3792

Elapsed: 00:00:00.08
02:06:14 SQL> 
02:06:14 SQL> -- Calc deltas and gains
02:06:14 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.12
02:06:14 SQL> 
02:06:14 SQL> CREATE TABLE q13 COMPRESS AS
02:06:14   2  SELECT
02:06:14   3  pair
02:06:14   4  ,ydate
02:06:14   5  ,prdate
02:06:14   6  ,rnum
02:06:14   7  ,lg4
02:06:14   8  ,lg8
02:06:14   9  ,lg12
02:06:14  10  ,ld4
02:06:14  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
02:06:14  12  -- step by 1
02:06:14  13  ,clse-lg1 d01
02:06:14  14  ,lg1-lg2	d12
02:06:14  15  ,lg2-lg3	d23
02:06:14  16  ,lg3-lg4	d34
02:06:14  17  ,lg4-lg5	d45
02:06:14  18  ,lg5-lg6	d56
02:06:14  19  ,lg6-lg7	d67
02:06:14  20  ,lg7-lg8	d78
02:06:14  21  ,lg8-lg9	d89
02:06:14  22  -- step by 2
02:06:14  23  ,clse-lg2 d02
02:06:14  24  ,lg2-lg4 d24
02:06:14  25  ,lg4-lg6 d46
02:06:14  26  ,lg6-lg8 d68
02:06:14  27  -- step by 3
02:06:14  28  ,clse-lg3 d03
02:06:14  29  ,lg3-lg6	d36
02:06:14  30  ,lg6-lg9	d69
02:06:14  31  ,lg9-lg12 d912
02:06:14  32  -- step by 4
02:06:14  33  ,clse-lg4 d04
02:06:14  34  ,lg4-lg8	d48
02:06:14  35  ,lg8-lg12 d812
02:06:14  36  ,lg6-lg12 d612
02:06:14  37  ,lg12-lg18 d1218
02:06:14  38  --
02:06:14  39  ,ABS(clse-lg1)dc1
02:06:14  40  ,ABS(clse-lg2)dc2
02:06:14  41  ,ABS(clse-lg3)dc3
02:06:14  42  ,ABS(clse-lg4)dc4
02:06:14  43  ,ABS(clse-lg5)dc5
02:06:14  44  ,ABS(clse-lg6)dc6
02:06:14  45  ,ABS(clse-lg7)dc7
02:06:14  46  ,ABS(clse-lg8)dc8
02:06:14  47  ,ABS(clse-lg9)dc9
02:06:14  48  ,ABS(clse-lg12)dc12
02:06:14  49  ,ABS(clse-lg18)dc18
02:06:14  50  ,ABS(clse-lg24)dc24
02:06:14  51  ,ABS(clse-lg72)dc72
02:06:14  52  ,(ld4-clse) ug4
02:06:14  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
02:06:14  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
02:06:14  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
02:06:14  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
02:06:14  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
02:06:14  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
02:06:14  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
02:06:14  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
02:06:14  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
02:06:14  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
02:06:14  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
02:06:14  64  ,0+TO_CHAR(ydate,'HH24')hh
02:06:14  65  ,0+TO_CHAR(ydate,'D')d
02:06:14  66  ,0+TO_CHAR(ydate,'W')w
02:06:14  67  FROM q11
02:06:14  68  ORDER BY pair,ydate
02:06:14  69  /

Table created.

Elapsed: 00:00:00.34
02:06:14 SQL> 
02:06:14 SQL> -- rpt
02:06:14 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1715
	-1	    2077

Elapsed: 00:00:00.05
02:06:14 SQL> 
02:06:14 SQL> -- Calc gains and ntiles
02:06:14 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.14
02:06:14 SQL> CREATE TABLE q15 COMPRESS AS
02:06:14   2  SELECT
02:06:14   3  pair
02:06:14   4  ,ydate
02:06:14   5  ,prdate -- Should be unique
02:06:14   6  ,trend -- +1 or -1
02:06:14   7  ,dc12 -- next statement needs this
02:06:14   8  -- Use NTILE() to derive some attributes
02:06:14   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
02:06:14  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
02:06:14  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
02:06:14  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
02:06:14  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
02:06:14  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
02:06:14  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
02:06:14  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
02:06:14  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
02:06:14  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
02:06:14  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
02:06:14  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
02:06:14  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
02:06:14  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
02:06:14  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
02:06:14  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
02:06:14  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
02:06:14  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
02:06:14  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
02:06:14  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
02:06:14  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
02:06:14  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
02:06:14  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
02:06:14  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
02:06:14  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
02:06:14  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
02:06:14  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
02:06:14  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
02:06:14  37  -- date related integers: hour of day, day of week, week of month:
02:06:14  38  ,hh    att28
02:06:14  39  ,d     att29
02:06:14  40  ,w     att30
02:06:14  41  ,trend att31
02:06:14  42  ,ug4 g4
02:06:14  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
02:06:14  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
02:06:14  45  FROM q13
02:06:14  46  ORDER BY pair,ydate
02:06:14  47  /

Table created.

Elapsed: 00:00:00.75
02:06:15 SQL> 
02:06:15 SQL> -- rpt
02:06:15 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
02:06:15   2  GROUP BY pair,trend,gatt,gattn
02:06:15   3  ORDER BY pair,trend,gatt,gattn
02:06:15   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup  .00001003	     500    .064926761
usd_chf 	-1 nup up   -.0028407	     767    .075396575
usd_chf 	-1 up  nup .002673685	     806    -.06509418
usd_chf 	-1			       0
usd_chf 	 1 nup nup -.00001178	     401    .038442876
usd_chf 	 1 nup up  -.00292213	     738    .016780666
usd_chf 	 1 up  nup .002766519	     576    -.06192624

7 rows selected.

Elapsed: 00:00:00.08
02:06:15 SQL> 
02:06:15 SQL> -- rpt
02:06:15 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-15 00:00:00

Elapsed: 00:00:00.00
02:06:15 SQL> 
02:06:15 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
02:06:15 SQL> CREATE TABLE modsrc COMPRESS AS
02:06:15   2  SELECT
02:06:15   3  pair
02:06:15   4  ,ydate
02:06:15   5  ,prdate
02:06:15   6  ,trend
02:06:15   7  ,g4
02:06:15   8  ,gatt
02:06:15   9  ,gattn
02:06:15  10  ,dc12
02:06:15  11  FROM q15
02:06:15  12  /

Table created.

Elapsed: 00:00:00.05
02:06:15 SQL> 
02:06:15 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.09
02:06:15 SQL> 
02:06:15 SQL> -- rpt
02:06:15 SQL> 
02:06:15 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.08
02:06:15 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:06:15 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
02:06:15 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
02:06:15 SQL> 
02:06:15 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
02:06:15   2  GROUP BY pair,trend,gatt,gattn
02:06:15   3  ORDER BY pair,trend,gatt,gattn
02:06:15   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup  .00001003	     500    .064926761
usd_chf 	-1 nup up   -.0028407	     767    .075396575
usd_chf 	-1 up  nup .002673685	     806    -.06509418
usd_chf 	-1			       0
usd_chf 	 1 nup nup -.00001178	     401    .038442876
usd_chf 	 1 nup up  -.00292213	     738    .016780666
usd_chf 	 1 up  nup .002766519	     576    -.06192624

7 rows selected.

Elapsed: 00:00:00.00
02:06:15 SQL> 
02:06:15 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
02:06:16 SQL> CREATE TABLE chf_ms10 COMPRESS AS
02:06:16   2  SELECT
02:06:16   3  ydate
02:06:16   4  ,trend chf_trend
02:06:16   5  ,g4    chf_g4
02:06:16   6  ,gatt  chf_gatt
02:06:16   7  ,gattn	chf_gattn
02:06:16   8  FROM modsrc
02:06:16   9  /

Table created.

Elapsed: 00:00:00.04
02:06:16 SQL> 
02:06:16 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.09
02:06:16 SQL> 
02:06:16 SQL> -- rpt
02:06:16 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 01:00:00 2010-12-14 07:00:00	 1715	  -.0227      .0156
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	 2073	   -.016      .0145

Elapsed: 00:00:00.02
02:06:16 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 01:00:00 2010-12-14 07:00:00	       1715	 -.0227       .0156
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	       2077	  -.016       .0145

Elapsed: 00:00:00.00
02:06:16 SQL> 
02:06:16 SQL> -- I need a copy of q15 attributes
02:06:16 SQL> 
02:06:16 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.03
02:06:16 SQL> CREATE TABLE chf_att COMPRESS AS
02:06:16   2  SELECT
02:06:16   3  ydate
02:06:16   4  ,att00 chf_att00
02:06:16   5  ,att01 chf_att01
02:06:16   6  ,att02 chf_att02
02:06:16   7  ,att03 chf_att03
02:06:16   8  ,att04 chf_att04
02:06:16   9  ,att05 chf_att05
02:06:16  10  ,att06 chf_att06
02:06:16  11  ,att07 chf_att07
02:06:16  12  ,att08 chf_att08
02:06:16  13  ,att09 chf_att09
02:06:16  14  ,att10 chf_att10
02:06:16  15  ,att11 chf_att11
02:06:16  16  ,att12 chf_att12
02:06:16  17  ,att13 chf_att13
02:06:16  18  ,att14 chf_att14
02:06:16  19  ,att15 chf_att15
02:06:16  20  ,att16 chf_att16
02:06:16  21  ,att17 chf_att17
02:06:16  22  ,att18 chf_att18
02:06:16  23  ,att19 chf_att19
02:06:16  24  ,att20 chf_att20
02:06:16  25  ,att21 chf_att21
02:06:16  26  ,att22 chf_att22
02:06:16  27  ,att23 chf_att23
02:06:16  28  ,att24 chf_att24
02:06:16  29  ,att25 chf_att25
02:06:16  30  ,att26 chf_att26
02:06:16  31  ,att27 chf_att27
02:06:16  32  ,att28 chf_att28
02:06:16  33  ,att29 chf_att29
02:06:16  34  ,att30 chf_att30
02:06:16  35  ,att31 chf_att31
02:06:16  36  FROM q15
02:06:16  37  /

Table created.

Elapsed: 00:00:00.10
02:06:16 SQL> 
02:06:16 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
02:06:16 SQL> 
02:06:16 SQL> -- rpt
02:06:16 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.00
02:06:16 SQL> 
02:06:16 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
