
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 16 23:12:17 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

23:12:17 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.01
23:12:17 SQL> 23:12:17 SQL> --
23:12:17 SQL> -- eur10.sql
23:12:17 SQL> --
23:12:17 SQL> 
23:12:17 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:12:17 SQL> 
23:12:17 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.03
23:12:17 SQL> 
23:12:17 SQL> -- I created di5min here:
23:12:17 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:12:17 SQL> 
23:12:17 SQL> CREATE OR REPLACE VIEW q11 AS
23:12:17   2  SELECT
23:12:17   3  pair
23:12:17   4  ,ydate
23:12:17   5  ,prdate
23:12:17   6  ,rownum rnum -- acts as t in my time-series
23:12:17   7  ,clse
23:12:17   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:12:17   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:12:17  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:12:17  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:12:17  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:12:17  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:12:17  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:12:17  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:12:17  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:12:17  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:12:17  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:12:17  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:12:17  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:12:17  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:12:17  22  FROM di5min WHERE pair LIKE'%eur%'
23:12:17  23  ORDER BY ydate
23:12:17  24  /

View created.

Elapsed: 00:00:00.08
23:12:17 SQL> 
23:12:17 SQL> -- rpt
23:12:17 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20822

Elapsed: 00:00:00.37
23:12:17 SQL> 
23:12:17 SQL> -- Calc deltas and gains
23:12:17 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.20
23:12:17 SQL> 
23:12:17 SQL> CREATE TABLE q13 COMPRESS AS
23:12:17   2  SELECT
23:12:17   3  pair
23:12:17   4  ,ydate
23:12:17   5  ,prdate
23:12:17   6  ,rnum
23:12:17   7  ,lg4
23:12:17   8  ,lg8
23:12:17   9  ,lg12
23:12:17  10  ,ld4
23:12:17  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:12:17  12  -- step by 1
23:12:17  13  ,clse-lg1 d01
23:12:17  14  ,lg1-lg2	d12
23:12:17  15  ,lg2-lg3	d23
23:12:17  16  ,lg3-lg4	d34
23:12:17  17  ,lg4-lg5	d45
23:12:17  18  ,lg5-lg6	d56
23:12:17  19  ,lg6-lg7	d67
23:12:17  20  ,lg7-lg8	d78
23:12:17  21  ,lg8-lg9	d89
23:12:17  22  -- step by 2
23:12:17  23  ,clse-lg2 d02
23:12:17  24  ,lg2-lg4 d24
23:12:17  25  ,lg4-lg6 d46
23:12:17  26  ,lg6-lg8 d68
23:12:17  27  -- step by 3
23:12:17  28  ,clse-lg3 d03
23:12:17  29  ,lg3-lg6	d36
23:12:17  30  ,lg6-lg9	d69
23:12:17  31  ,lg9-lg12 d912
23:12:17  32  -- step by 4
23:12:17  33  ,clse-lg4 d04
23:12:17  34  ,lg4-lg8	d48
23:12:17  35  ,lg8-lg12 d812
23:12:17  36  ,lg6-lg12 d612
23:12:17  37  ,lg12-lg18 d1218
23:12:17  38  --
23:12:17  39  ,ABS(clse-lg1)dc1
23:12:17  40  ,ABS(clse-lg2)dc2
23:12:17  41  ,ABS(clse-lg3)dc3
23:12:17  42  ,ABS(clse-lg4)dc4
23:12:17  43  ,ABS(clse-lg5)dc5
23:12:17  44  ,ABS(clse-lg6)dc6
23:12:17  45  ,ABS(clse-lg7)dc7
23:12:17  46  ,ABS(clse-lg8)dc8
23:12:17  47  ,ABS(clse-lg9)dc9
23:12:17  48  ,ABS(clse-lg12)dc12
23:12:17  49  ,ABS(clse-lg18)dc18
23:12:17  50  ,ABS(clse-lg24)dc24
23:12:17  51  ,ABS(clse-lg72)dc72
23:12:17  52  ,(ld4-clse) ug4
23:12:17  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:12:17  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:12:17  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:12:17  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:12:17  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:12:17  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:12:17  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:12:17  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:12:17  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:12:17  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:12:17  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:12:17  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:12:17  65  ,0+TO_CHAR(ydate,'D')d
23:12:17  66  ,0+TO_CHAR(ydate,'W')w
23:12:17  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:12:17  68  FROM q11
23:12:17  69  -- I dont want any NULL values from the LAG() functions:
23:12:17  70  WHERE lg72 > 0
23:12:17  71  ORDER BY pair,ydate
23:12:17  72  /

Table created.

Elapsed: 00:00:02.13
23:12:20 SQL> 
23:12:20 SQL> -- rpt
23:12:20 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10285
	-1	    9673

Elapsed: 00:00:00.06
23:12:20 SQL> 
23:12:20 SQL> -- Calc gains and ntiles
23:12:20 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.34
23:12:20 SQL> CREATE TABLE q15 COMPRESS AS
23:12:20   2  SELECT
23:12:20   3  pair
23:12:20   4  ,ydate
23:12:20   5  ,prdate -- Should be unique
23:12:20   6  ,trend -- +1 or -1
23:12:20   7  ,dc12 -- next statement needs this
23:12:20   8  -- Use NTILE() to derive some attributes
23:12:20   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:12:20  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:12:20  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:12:20  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:12:20  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:12:20  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:12:20  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:12:20  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:12:20  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:12:20  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:12:20  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:12:20  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:12:20  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:12:20  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:12:20  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:12:20  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:12:20  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:12:20  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:12:20  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:12:20  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:12:20  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:12:20  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:12:20  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:12:20  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:12:20  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:12:20  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:12:20  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:12:20  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:12:20  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:12:20  38  ,hh    att28
23:12:20  39  ,d     att29
23:12:20  40  ,w     att30
23:12:20  41  ,mpm   att31
23:12:20  42  ,trend att32
23:12:20  43  ,ug4 g4
23:12:20  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:12:20  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:12:20  46  FROM q13
23:12:20  47  ORDER BY pair,ydate
23:12:20  48  /

Table created.

Elapsed: 00:00:04.07
23:12:24 SQL> 
23:12:24 SQL> -- rpt
23:12:24 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:12:24   2  GROUP BY pair,trend,gatt,gattn
23:12:24   3  ORDER BY pair,trend,gatt,gattn
23:12:24   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003634771	    4163    -.20909079
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup  .00371886	    4328    -.14464731
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
23:12:24 SQL> 
23:12:24 SQL> -- rpt
23:12:24 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-16 23:05:00

Elapsed: 00:00:00.01
23:12:24 SQL> 
23:12:24 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.14
23:12:24 SQL> CREATE TABLE modsrc COMPRESS AS
23:12:24   2  SELECT
23:12:24   3  pair
23:12:24   4  ,ydate
23:12:24   5  ,prdate
23:12:24   6  ,trend
23:12:24   7  ,g4
23:12:24   8  ,gatt
23:12:24   9  ,gattn
23:12:24  10  ,dc12
23:12:24  11  FROM q15
23:12:24  12  /

Table created.

Elapsed: 00:00:00.11
23:12:24 SQL> 
23:12:24 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.27
23:12:25 SQL> 
23:12:25 SQL> -- rpt
23:12:25 SQL> 
23:12:25 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.35
23:12:25 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
23:12:25 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
23:12:25 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
23:12:25 SQL> 
23:12:25 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:12:25   2  GROUP BY pair,trend,gatt,gattn
23:12:25   3  ORDER BY pair,trend,gatt,gattn
23:12:25   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003634771	    4163    -.20909079
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup  .00371886	    4328    -.14464731
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
23:12:25 SQL> 
23:12:25 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
23:12:25 SQL> CREATE TABLE eur_ms10 COMPRESS AS
23:12:25   2  SELECT
23:12:25   3  ydate
23:12:25   4  ,trend eur_trend
23:12:25   5  ,g4    eur_g4
23:12:25   6  ,gatt  eur_gatt
23:12:25   7  ,gattn eur_gattn
23:12:25   8  FROM modsrc
23:12:25   9  /

Table created.

Elapsed: 00:00:00.08
23:12:25 SQL> 
23:12:25 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
23:12:25 SQL> 
23:12:25 SQL> -- rpt
23:12:25 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:15:01 2010-12-16 23:00:00	10272	  -.0153      .0165
	-1 2010-09-12 22:25:01 2010-12-16 23:05:00	 9638	  -.0164      .0167

Elapsed: 00:00:00.02
23:12:25 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:15:01 2010-12-16 23:00:00	      10285	 -.0153       .0165
	-1 2010-09-12 22:25:01 2010-12-16 23:05:00	       9673	 -.0164       .0167

Elapsed: 00:00:00.02
23:12:25 SQL> 
23:12:25 SQL> -- I need a copy of q15 attributes
23:12:25 SQL> 
23:12:25 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.03
23:12:25 SQL> CREATE TABLE eur_att COMPRESS AS
23:12:25   2  SELECT
23:12:25   3  ydate
23:12:25   4  ,att00 eur_att00
23:12:25   5  ,att01 eur_att01
23:12:25   6  ,att02 eur_att02
23:12:25   7  ,att03 eur_att03
23:12:25   8  ,att04 eur_att04
23:12:25   9  ,att05 eur_att05
23:12:25  10  ,att06 eur_att06
23:12:25  11  ,att07 eur_att07
23:12:25  12  ,att08 eur_att08
23:12:25  13  ,att09 eur_att09
23:12:25  14  ,att10 eur_att10
23:12:25  15  ,att11 eur_att11
23:12:25  16  ,att12 eur_att12
23:12:25  17  ,att13 eur_att13
23:12:25  18  ,att14 eur_att14
23:12:25  19  ,att15 eur_att15
23:12:25  20  ,att16 eur_att16
23:12:25  21  ,att17 eur_att17
23:12:25  22  ,att18 eur_att18
23:12:25  23  ,att19 eur_att19
23:12:25  24  ,att20 eur_att20
23:12:25  25  ,att21 eur_att21
23:12:25  26  ,att22 eur_att22
23:12:25  27  ,att23 eur_att23
23:12:25  28  ,att24 eur_att24
23:12:25  29  ,att25 eur_att25
23:12:25  30  ,att26 eur_att26
23:12:25  31  ,att27 eur_att27
23:12:25  32  ,att28 eur_att28
23:12:25  33  ,att29 eur_att29
23:12:25  34  ,att30 eur_att30
23:12:25  35  ,att31 eur_att31
23:12:25  36  ,att32 eur_att32
23:12:25  37  FROM q15
23:12:25  38  /

Table created.

Elapsed: 00:00:00.13
23:12:26 SQL> 
23:12:26 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
23:12:26 SQL> 
23:12:26 SQL> -- rpt
23:12:26 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.01
23:12:26 SQL> 
23:12:26 SQL> --
23:12:26 SQL> -- aud10.sql
23:12:26 SQL> --
23:12:26 SQL> 
23:12:26 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:12:26 SQL> 
23:12:26 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.32
23:12:26 SQL> 
23:12:26 SQL> -- I created di5min here:
23:12:26 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:12:26 SQL> 
23:12:26 SQL> CREATE OR REPLACE VIEW q11 AS
23:12:26   2  SELECT
23:12:26   3  pair
23:12:26   4  ,ydate
23:12:26   5  ,prdate
23:12:26   6  ,rownum rnum -- acts as t in my time-series
23:12:26   7  ,clse
23:12:26   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:12:26   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:12:26  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:12:26  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:12:26  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:12:26  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:12:26  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:12:26  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:12:26  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:12:26  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:12:26  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:12:26  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:12:26  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:12:26  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:12:26  22  FROM di5min WHERE pair LIKE'%aud%'
23:12:26  23  ORDER BY ydate
23:12:26  24  /

View created.

Elapsed: 00:00:00.03
23:12:26 SQL> 
23:12:26 SQL> -- rpt
23:12:26 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20819

Elapsed: 00:00:00.37
23:12:27 SQL> 
23:12:27 SQL> -- Calc deltas and gains
23:12:27 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.19
23:12:27 SQL> 
23:12:27 SQL> CREATE TABLE q13 COMPRESS AS
23:12:27   2  SELECT
23:12:27   3  pair
23:12:27   4  ,ydate
23:12:27   5  ,prdate
23:12:27   6  ,rnum
23:12:27   7  ,lg4
23:12:27   8  ,lg8
23:12:27   9  ,lg12
23:12:27  10  ,ld4
23:12:27  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:12:27  12  -- step by 1
23:12:27  13  ,clse-lg1 d01
23:12:27  14  ,lg1-lg2	d12
23:12:27  15  ,lg2-lg3	d23
23:12:27  16  ,lg3-lg4	d34
23:12:27  17  ,lg4-lg5	d45
23:12:27  18  ,lg5-lg6	d56
23:12:27  19  ,lg6-lg7	d67
23:12:27  20  ,lg7-lg8	d78
23:12:27  21  ,lg8-lg9	d89
23:12:27  22  -- step by 2
23:12:27  23  ,clse-lg2 d02
23:12:27  24  ,lg2-lg4 d24
23:12:27  25  ,lg4-lg6 d46
23:12:27  26  ,lg6-lg8 d68
23:12:27  27  -- step by 3
23:12:27  28  ,clse-lg3 d03
23:12:27  29  ,lg3-lg6	d36
23:12:27  30  ,lg6-lg9	d69
23:12:27  31  ,lg9-lg12 d912
23:12:27  32  -- step by 4
23:12:27  33  ,clse-lg4 d04
23:12:27  34  ,lg4-lg8	d48
23:12:27  35  ,lg8-lg12 d812
23:12:27  36  ,lg6-lg12 d612
23:12:27  37  ,lg12-lg18 d1218
23:12:27  38  --
23:12:27  39  ,ABS(clse-lg1)dc1
23:12:27  40  ,ABS(clse-lg2)dc2
23:12:27  41  ,ABS(clse-lg3)dc3
23:12:27  42  ,ABS(clse-lg4)dc4
23:12:27  43  ,ABS(clse-lg5)dc5
23:12:27  44  ,ABS(clse-lg6)dc6
23:12:27  45  ,ABS(clse-lg7)dc7
23:12:27  46  ,ABS(clse-lg8)dc8
23:12:27  47  ,ABS(clse-lg9)dc9
23:12:27  48  ,ABS(clse-lg12)dc12
23:12:27  49  ,ABS(clse-lg18)dc18
23:12:27  50  ,ABS(clse-lg24)dc24
23:12:27  51  ,ABS(clse-lg72)dc72
23:12:27  52  ,(ld4-clse) ug4
23:12:27  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:12:27  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:12:27  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:12:27  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:12:27  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:12:27  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:12:27  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:12:27  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:12:27  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:12:27  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:12:27  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:12:27  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:12:27  65  ,0+TO_CHAR(ydate,'D')d
23:12:27  66  ,0+TO_CHAR(ydate,'W')w
23:12:27  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:12:27  68  FROM q11
23:12:27  69  -- I dont want any NULL values from the LAG() functions:
23:12:27  70  WHERE lg72 > 0
23:12:27  71  ORDER BY pair,ydate
23:12:27  72  /

Table created.

Elapsed: 00:00:01.73
23:12:29 SQL> 
23:12:29 SQL> -- rpt
23:12:29 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10455
	-1	    9500

Elapsed: 00:00:00.08
23:12:29 SQL> 
23:12:29 SQL> -- Calc gains and ntiles
23:12:29 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.24
23:12:29 SQL> CREATE TABLE q15 COMPRESS AS
23:12:29   2  SELECT
23:12:29   3  pair
23:12:29   4  ,ydate
23:12:29   5  ,prdate -- Should be unique
23:12:29   6  ,trend -- +1 or -1
23:12:29   7  ,dc12 -- next statement needs this
23:12:29   8  -- Use NTILE() to derive some attributes
23:12:29   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:12:29  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:12:29  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:12:29  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:12:29  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:12:29  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:12:29  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:12:29  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:12:29  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:12:29  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:12:29  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:12:29  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:12:29  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:12:29  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:12:29  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:12:29  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:12:29  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:12:29  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:12:29  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:12:29  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:12:29  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:12:29  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:12:29  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:12:29  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:12:29  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:12:29  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:12:29  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:12:29  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:12:29  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:12:29  38  ,hh    att28
23:12:29  39  ,d     att29
23:12:29  40  ,w     att30
23:12:29  41  ,mpm   att31
23:12:29  42  ,trend att32
23:12:29  43  ,ug4 g4
23:12:29  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:12:29  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:12:29  46  FROM q13
23:12:29  47  ORDER BY pair,ydate
23:12:29  48  /

Table created.

Elapsed: 00:00:04.21
23:12:33 SQL> 
23:12:33 SQL> -- rpt
23:12:33 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:12:33   2  GROUP BY pair,trend,gatt,gattn
23:12:33   3  ORDER BY pair,trend,gatt,gattn
23:12:33   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup  .00297839	    4351    .026029253
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.2949E-06	    1950    .023122877
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002937548	    4417    -.17747927
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
23:12:33 SQL> 
23:12:33 SQL> -- rpt
23:12:33 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-16 23:05:00

Elapsed: 00:00:00.01
23:12:33 SQL> 
23:12:33 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.16
23:12:33 SQL> CREATE TABLE modsrc COMPRESS AS
23:12:33   2  SELECT
23:12:33   3  pair
23:12:33   4  ,ydate
23:12:33   5  ,prdate
23:12:33   6  ,trend
23:12:33   7  ,g4
23:12:33   8  ,gatt
23:12:33   9  ,gattn
23:12:33  10  ,dc12
23:12:33  11  FROM q15
23:12:33  12  /

Table created.

Elapsed: 00:00:00.08
23:12:33 SQL> 
23:12:33 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
23:12:34 SQL> 
23:12:34 SQL> -- rpt
23:12:34 SQL> 
23:12:34 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20819

Elapsed: 00:00:00.35
23:12:34 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.00
23:12:34 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.01
23:12:34 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.00
23:12:34 SQL> 
23:12:34 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:12:34   2  GROUP BY pair,trend,gatt,gattn
23:12:34   3  ORDER BY pair,trend,gatt,gattn
23:12:34   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup  .00297839	    4351    .026029253
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.2949E-06	    1950    .023122877
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002937548	    4417    -.17747927
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
23:12:34 SQL> 
23:12:34 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
23:12:34 SQL> CREATE TABLE aud_ms10 COMPRESS AS
23:12:34   2  SELECT
23:12:34   3  ydate
23:12:34   4  ,trend aud_trend
23:12:34   5  ,g4    aud_g4
23:12:34   6  ,gatt  aud_gatt
23:12:34   7  ,gattn aud_gattn
23:12:34   8  FROM modsrc
23:12:34   9  /

Table created.

Elapsed: 00:00:00.06
23:12:34 SQL> 
23:12:34 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
23:12:34 SQL> 
23:12:34 SQL> -- rpt
23:12:34 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:15:01 2010-12-16 23:05:00	10424	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-16 21:20:00	 9483	   -.017      .0131

Elapsed: 00:00:00.02
23:12:34 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:15:01 2010-12-16 23:05:00	      10455	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-16 21:20:00	       9500	  -.017       .0131

Elapsed: 00:00:00.03
23:12:34 SQL> 
23:12:34 SQL> -- I need a copy of q15 attributes
23:12:34 SQL> 
23:12:34 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.03
23:12:34 SQL> CREATE TABLE aud_att COMPRESS AS
23:12:34   2  SELECT
23:12:34   3  ydate
23:12:34   4  ,att00 aud_att00
23:12:34   5  ,att01 aud_att01
23:12:34   6  ,att02 aud_att02
23:12:34   7  ,att03 aud_att03
23:12:34   8  ,att04 aud_att04
23:12:34   9  ,att05 aud_att05
23:12:34  10  ,att06 aud_att06
23:12:34  11  ,att07 aud_att07
23:12:34  12  ,att08 aud_att08
23:12:34  13  ,att09 aud_att09
23:12:34  14  ,att10 aud_att10
23:12:34  15  ,att11 aud_att11
23:12:34  16  ,att12 aud_att12
23:12:34  17  ,att13 aud_att13
23:12:34  18  ,att14 aud_att14
23:12:34  19  ,att15 aud_att15
23:12:34  20  ,att16 aud_att16
23:12:34  21  ,att17 aud_att17
23:12:34  22  ,att18 aud_att18
23:12:34  23  ,att19 aud_att19
23:12:34  24  ,att20 aud_att20
23:12:34  25  ,att21 aud_att21
23:12:34  26  ,att22 aud_att22
23:12:34  27  ,att23 aud_att23
23:12:34  28  ,att24 aud_att24
23:12:34  29  ,att25 aud_att25
23:12:34  30  ,att26 aud_att26
23:12:34  31  ,att27 aud_att27
23:12:34  32  ,att28 aud_att28
23:12:34  33  ,att29 aud_att29
23:12:34  34  ,att30 aud_att30
23:12:34  35  ,att31 aud_att31
23:12:34  36  ,att32 aud_att32
23:12:34  37  FROM q15
23:12:34  38  /

Table created.

Elapsed: 00:00:00.13
23:12:34 SQL> 
23:12:34 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.41
23:12:35 SQL> 
23:12:35 SQL> -- rpt
23:12:35 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19955

Elapsed: 00:00:00.01
23:12:35 SQL> 
23:12:35 SQL> --
23:12:35 SQL> -- gbp10.sql
23:12:35 SQL> --
23:12:35 SQL> 
23:12:35 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:12:35 SQL> 
23:12:35 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.33
23:12:35 SQL> 
23:12:35 SQL> -- I created di5min here:
23:12:35 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:12:35 SQL> 
23:12:35 SQL> CREATE OR REPLACE VIEW q11 AS
23:12:35   2  SELECT
23:12:35   3  pair
23:12:35   4  ,ydate
23:12:35   5  ,prdate
23:12:35   6  ,rownum rnum -- acts as t in my time-series
23:12:35   7  ,clse
23:12:35   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:12:35   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:12:35  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:12:35  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:12:35  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:12:35  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:12:35  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:12:35  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:12:35  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:12:35  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:12:35  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:12:35  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:12:35  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:12:35  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:12:35  22  FROM di5min WHERE pair LIKE'%gbp%'
23:12:35  23  ORDER BY ydate
23:12:35  24  /

View created.

Elapsed: 00:00:00.05
23:12:35 SQL> 
23:12:35 SQL> -- rpt
23:12:35 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20821

Elapsed: 00:00:00.36
23:12:36 SQL> 
23:12:36 SQL> -- Calc deltas and gains
23:12:36 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
23:12:36 SQL> 
23:12:36 SQL> CREATE TABLE q13 COMPRESS AS
23:12:36   2  SELECT
23:12:36   3  pair
23:12:36   4  ,ydate
23:12:36   5  ,prdate
23:12:36   6  ,rnum
23:12:36   7  ,lg4
23:12:36   8  ,lg8
23:12:36   9  ,lg12
23:12:36  10  ,ld4
23:12:36  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:12:36  12  -- step by 1
23:12:36  13  ,clse-lg1 d01
23:12:36  14  ,lg1-lg2	d12
23:12:36  15  ,lg2-lg3	d23
23:12:36  16  ,lg3-lg4	d34
23:12:36  17  ,lg4-lg5	d45
23:12:36  18  ,lg5-lg6	d56
23:12:36  19  ,lg6-lg7	d67
23:12:36  20  ,lg7-lg8	d78
23:12:36  21  ,lg8-lg9	d89
23:12:36  22  -- step by 2
23:12:36  23  ,clse-lg2 d02
23:12:36  24  ,lg2-lg4 d24
23:12:36  25  ,lg4-lg6 d46
23:12:36  26  ,lg6-lg8 d68
23:12:36  27  -- step by 3
23:12:36  28  ,clse-lg3 d03
23:12:36  29  ,lg3-lg6	d36
23:12:36  30  ,lg6-lg9	d69
23:12:36  31  ,lg9-lg12 d912
23:12:36  32  -- step by 4
23:12:36  33  ,clse-lg4 d04
23:12:36  34  ,lg4-lg8	d48
23:12:36  35  ,lg8-lg12 d812
23:12:36  36  ,lg6-lg12 d612
23:12:36  37  ,lg12-lg18 d1218
23:12:36  38  --
23:12:36  39  ,ABS(clse-lg1)dc1
23:12:36  40  ,ABS(clse-lg2)dc2
23:12:36  41  ,ABS(clse-lg3)dc3
23:12:36  42  ,ABS(clse-lg4)dc4
23:12:36  43  ,ABS(clse-lg5)dc5
23:12:36  44  ,ABS(clse-lg6)dc6
23:12:36  45  ,ABS(clse-lg7)dc7
23:12:36  46  ,ABS(clse-lg8)dc8
23:12:36  47  ,ABS(clse-lg9)dc9
23:12:36  48  ,ABS(clse-lg12)dc12
23:12:36  49  ,ABS(clse-lg18)dc18
23:12:36  50  ,ABS(clse-lg24)dc24
23:12:36  51  ,ABS(clse-lg72)dc72
23:12:36  52  ,(ld4-clse) ug4
23:12:36  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:12:36  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:12:36  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:12:36  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:12:36  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:12:36  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:12:36  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:12:36  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:12:36  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:12:36  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:12:36  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:12:36  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:12:36  65  ,0+TO_CHAR(ydate,'D')d
23:12:36  66  ,0+TO_CHAR(ydate,'W')w
23:12:36  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:12:36  68  FROM q11
23:12:36  69  -- I dont want any NULL values from the LAG() functions:
23:12:36  70  WHERE lg72 > 0
23:12:36  71  ORDER BY pair,ydate
23:12:36  72  /

Table created.

Elapsed: 00:00:01.73
23:12:38 SQL> 
23:12:38 SQL> -- rpt
23:12:38 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9736
	-1	   10221

Elapsed: 00:00:00.05
23:12:38 SQL> 
23:12:38 SQL> -- Calc gains and ntiles
23:12:38 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.20
23:12:38 SQL> CREATE TABLE q15 COMPRESS AS
23:12:38   2  SELECT
23:12:38   3  pair
23:12:38   4  ,ydate
23:12:38   5  ,prdate -- Should be unique
23:12:38   6  ,trend -- +1 or -1
23:12:38   7  ,dc12 -- next statement needs this
23:12:38   8  -- Use NTILE() to derive some attributes
23:12:38   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:12:38  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:12:38  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:12:38  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:12:38  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:12:38  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:12:38  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:12:38  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:12:38  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:12:38  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:12:38  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:12:38  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:12:38  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:12:38  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:12:38  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:12:38  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:12:38  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:12:38  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:12:38  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:12:38  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:12:38  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:12:38  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:12:38  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:12:38  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:12:38  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:12:38  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:12:38  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:12:38  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:12:38  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:12:38  38  ,hh    att28
23:12:38  39  ,d     att29
23:12:38  40  ,w     att30
23:12:38  41  ,mpm   att31
23:12:38  42  ,trend att32
23:12:38  43  ,ug4 g4
23:12:38  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:12:38  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:12:38  46  FROM q13
23:12:38  47  ORDER BY pair,ydate
23:12:38  48  /

Table created.

Elapsed: 00:00:04.00
23:12:42 SQL> 
23:12:42 SQL> -- rpt
23:12:42 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:12:42   2  GROUP BY pair,trend,gatt,gattn
23:12:42   3  ORDER BY pair,trend,gatt,gattn
23:12:42   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003109675	    4372    -.09307348
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003573938	    3930    -.16622171
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
23:12:42 SQL> 
23:12:42 SQL> -- rpt
23:12:42 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-16 23:05:00

Elapsed: 00:00:00.01
23:12:42 SQL> 
23:12:42 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
23:12:42 SQL> CREATE TABLE modsrc COMPRESS AS
23:12:42   2  SELECT
23:12:42   3  pair
23:12:42   4  ,ydate
23:12:42   5  ,prdate
23:12:42   6  ,trend
23:12:42   7  ,g4
23:12:42   8  ,gatt
23:12:42   9  ,gattn
23:12:42  10  ,dc12
23:12:42  11  FROM q15
23:12:42  12  /

Table created.

Elapsed: 00:00:00.09
23:12:42 SQL> 
23:12:42 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
23:12:42 SQL> 
23:12:42 SQL> -- rpt
23:12:42 SQL> 
23:12:42 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.37
23:12:43 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
23:12:43 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
23:12:43 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
23:12:43 SQL> 
23:12:43 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:12:43   2  GROUP BY pair,trend,gatt,gattn
23:12:43   3  ORDER BY pair,trend,gatt,gattn
23:12:43   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003109675	    4372    -.09307348
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003573938	    3930    -.16622171
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.03
23:12:43 SQL> 
23:12:43 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.75
23:12:43 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
23:12:43   2  SELECT
23:12:43   3  ydate
23:12:43   4  ,trend gbp_trend
23:12:43   5  ,g4    gbp_g4
23:12:43   6  ,gatt  gbp_gatt
23:12:43   7  ,gattn gbp_gattn
23:12:43   8  FROM modsrc
23:12:43   9  /

Table created.

Elapsed: 00:00:00.07
23:12:43 SQL> 
23:12:43 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
23:12:44 SQL> 
23:12:44 SQL> -- rpt
23:12:44 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 00:05:01 2010-12-16 23:05:00	 9688	  -.0194      .0179
	-1 2010-09-12 22:15:01 2010-12-16 07:30:00	10221	  -.0153      .0159

Elapsed: 00:00:00.02
23:12:44 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 00:05:01 2010-12-16 23:05:00	       9736	 -.0194       .0179
	-1 2010-09-12 22:15:01 2010-12-16 07:30:00	      10221	 -.0153       .0159

Elapsed: 00:00:00.02
23:12:44 SQL> 
23:12:44 SQL> -- I need a copy of q15 attributes
23:12:44 SQL> 
23:12:44 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.04
23:12:44 SQL> CREATE TABLE gbp_att COMPRESS AS
23:12:44   2  SELECT
23:12:44   3  ydate
23:12:44   4  ,att00 gbp_att00
23:12:44   5  ,att01 gbp_att01
23:12:44   6  ,att02 gbp_att02
23:12:44   7  ,att03 gbp_att03
23:12:44   8  ,att04 gbp_att04
23:12:44   9  ,att05 gbp_att05
23:12:44  10  ,att06 gbp_att06
23:12:44  11  ,att07 gbp_att07
23:12:44  12  ,att08 gbp_att08
23:12:44  13  ,att09 gbp_att09
23:12:44  14  ,att10 gbp_att10
23:12:44  15  ,att11 gbp_att11
23:12:44  16  ,att12 gbp_att12
23:12:44  17  ,att13 gbp_att13
23:12:44  18  ,att14 gbp_att14
23:12:44  19  ,att15 gbp_att15
23:12:44  20  ,att16 gbp_att16
23:12:44  21  ,att17 gbp_att17
23:12:44  22  ,att18 gbp_att18
23:12:44  23  ,att19 gbp_att19
23:12:44  24  ,att20 gbp_att20
23:12:44  25  ,att21 gbp_att21
23:12:44  26  ,att22 gbp_att22
23:12:44  27  ,att23 gbp_att23
23:12:44  28  ,att24 gbp_att24
23:12:44  29  ,att25 gbp_att25
23:12:44  30  ,att26 gbp_att26
23:12:44  31  ,att27 gbp_att27
23:12:44  32  ,att28 gbp_att28
23:12:44  33  ,att29 gbp_att29
23:12:44  34  ,att30 gbp_att30
23:12:44  35  ,att31 gbp_att31
23:12:44  36  ,att32 gbp_att32
23:12:44  37  FROM q15
23:12:44  38  /

Table created.

Elapsed: 00:00:00.15
23:12:44 SQL> 
23:12:44 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.44
23:12:44 SQL> 
23:12:44 SQL> -- rpt
23:12:44 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.01
23:12:44 SQL> 
23:12:44 SQL> --
23:12:44 SQL> -- jpy10.sql
23:12:44 SQL> --
23:12:44 SQL> 
23:12:44 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:12:44 SQL> 
23:12:44 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.39
23:12:45 SQL> 
23:12:45 SQL> -- I created di5min here:
23:12:45 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:12:45 SQL> 
23:12:45 SQL> CREATE OR REPLACE VIEW q11 AS
23:12:45   2  SELECT
23:12:45   3  pair
23:12:45   4  ,ydate
23:12:45   5  ,prdate
23:12:45   6  ,rownum rnum -- acts as t in my time-series
23:12:45   7  ,clse
23:12:45   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:12:45   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:12:45  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:12:45  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:12:45  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:12:45  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:12:45  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:12:45  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:12:45  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:12:45  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:12:45  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:12:45  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:12:45  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:12:45  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:12:45  22  FROM di5min WHERE pair LIKE'%jpy%'
23:12:45  23  ORDER BY ydate
23:12:45  24  /

View created.

Elapsed: 00:00:00.04
23:12:45 SQL> 
23:12:45 SQL> -- rpt
23:12:45 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20822

Elapsed: 00:00:00.35
23:12:45 SQL> 
23:12:45 SQL> -- Calc deltas and gains
23:12:45 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.20
23:12:45 SQL> 
23:12:45 SQL> CREATE TABLE q13 COMPRESS AS
23:12:45   2  SELECT
23:12:45   3  pair
23:12:45   4  ,ydate
23:12:45   5  ,prdate
23:12:45   6  ,rnum
23:12:45   7  ,lg4
23:12:45   8  ,lg8
23:12:45   9  ,lg12
23:12:45  10  ,ld4
23:12:45  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:12:45  12  -- step by 1
23:12:45  13  ,clse-lg1 d01
23:12:45  14  ,lg1-lg2	d12
23:12:45  15  ,lg2-lg3	d23
23:12:45  16  ,lg3-lg4	d34
23:12:45  17  ,lg4-lg5	d45
23:12:45  18  ,lg5-lg6	d56
23:12:45  19  ,lg6-lg7	d67
23:12:45  20  ,lg7-lg8	d78
23:12:45  21  ,lg8-lg9	d89
23:12:45  22  -- step by 2
23:12:45  23  ,clse-lg2 d02
23:12:45  24  ,lg2-lg4 d24
23:12:45  25  ,lg4-lg6 d46
23:12:45  26  ,lg6-lg8 d68
23:12:45  27  -- step by 3
23:12:45  28  ,clse-lg3 d03
23:12:45  29  ,lg3-lg6	d36
23:12:45  30  ,lg6-lg9	d69
23:12:45  31  ,lg9-lg12 d912
23:12:45  32  -- step by 4
23:12:45  33  ,clse-lg4 d04
23:12:45  34  ,lg4-lg8	d48
23:12:45  35  ,lg8-lg12 d812
23:12:45  36  ,lg6-lg12 d612
23:12:45  37  ,lg12-lg18 d1218
23:12:45  38  --
23:12:45  39  ,ABS(clse-lg1)dc1
23:12:45  40  ,ABS(clse-lg2)dc2
23:12:45  41  ,ABS(clse-lg3)dc3
23:12:45  42  ,ABS(clse-lg4)dc4
23:12:45  43  ,ABS(clse-lg5)dc5
23:12:45  44  ,ABS(clse-lg6)dc6
23:12:45  45  ,ABS(clse-lg7)dc7
23:12:45  46  ,ABS(clse-lg8)dc8
23:12:45  47  ,ABS(clse-lg9)dc9
23:12:45  48  ,ABS(clse-lg12)dc12
23:12:45  49  ,ABS(clse-lg18)dc18
23:12:45  50  ,ABS(clse-lg24)dc24
23:12:45  51  ,ABS(clse-lg72)dc72
23:12:45  52  ,(ld4-clse) ug4
23:12:45  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:12:45  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:12:45  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:12:45  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:12:45  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:12:45  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:12:45  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:12:45  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:12:45  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:12:45  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:12:45  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:12:45  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:12:45  65  ,0+TO_CHAR(ydate,'D')d
23:12:45  66  ,0+TO_CHAR(ydate,'W')w
23:12:45  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:12:45  68  FROM q11
23:12:45  69  -- I dont want any NULL values from the LAG() functions:
23:12:45  70  WHERE lg72 > 0
23:12:45  71  ORDER BY pair,ydate
23:12:45  72  /

Table created.

Elapsed: 00:00:01.68
23:12:47 SQL> 
23:12:47 SQL> -- rpt
23:12:47 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9252
	-1	   10706

Elapsed: 00:00:00.09
23:12:47 SQL> 
23:12:47 SQL> -- Calc gains and ntiles
23:12:47 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.23
23:12:47 SQL> CREATE TABLE q15 COMPRESS AS
23:12:47   2  SELECT
23:12:47   3  pair
23:12:47   4  ,ydate
23:12:47   5  ,prdate -- Should be unique
23:12:47   6  ,trend -- +1 or -1
23:12:47   7  ,dc12 -- next statement needs this
23:12:47   8  -- Use NTILE() to derive some attributes
23:12:47   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:12:47  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:12:47  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:12:47  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:12:47  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:12:47  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:12:47  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:12:47  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:12:47  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:12:47  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:12:47  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:12:47  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:12:47  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:12:47  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:12:47  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:12:47  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:12:47  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:12:47  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:12:47  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:12:47  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:12:47  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:12:47  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:12:47  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:12:47  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:12:47  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:12:47  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:12:47  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:12:47  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:12:47  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:12:47  38  ,hh    att28
23:12:47  39  ,d     att29
23:12:47  40  ,w     att30
23:12:47  41  ,mpm   att31
23:12:47  42  ,trend att32
23:12:47  43  ,ug4 g4
23:12:47  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:12:47  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:12:47  46  FROM q13
23:12:47  47  ORDER BY pair,ydate
23:12:47  48  /

Table created.

Elapsed: 00:00:04.12
23:12:51 SQL> 
23:12:51 SQL> -- rpt
23:12:51 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:12:51   2  GROUP BY pair,trend,gatt,gattn
23:12:51   3  ORDER BY pair,trend,gatt,gattn
23:12:51   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13711094	    5192      .0231975
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13443389	    4999    -.01458888
usd_jpy 	 1 up  nup .152379407	    4084    .184257426
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
23:12:51 SQL> 
23:12:51 SQL> -- rpt
23:12:51 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-16 23:05:00

Elapsed: 00:00:00.02
23:12:52 SQL> 
23:12:52 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
23:12:52 SQL> CREATE TABLE modsrc COMPRESS AS
23:12:52   2  SELECT
23:12:52   3  pair
23:12:52   4  ,ydate
23:12:52   5  ,prdate
23:12:52   6  ,trend
23:12:52   7  ,g4
23:12:52   8  ,gatt
23:12:52   9  ,gattn
23:12:52  10  ,dc12
23:12:52  11  FROM q15
23:12:52  12  /

Table created.

Elapsed: 00:00:00.09
23:12:52 SQL> 
23:12:52 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.28
23:12:52 SQL> 
23:12:52 SQL> -- rpt
23:12:52 SQL> 
23:12:52 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.36
23:12:52 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
23:12:52 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
23:12:52 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
23:12:52 SQL> 
23:12:52 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:12:52   2  GROUP BY pair,trend,gatt,gattn
23:12:52   3  ORDER BY pair,trend,gatt,gattn
23:12:52   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13711094	    5192      .0231975
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13443389	    4999    -.01458888
usd_jpy 	 1 up  nup .152379407	    4084    .184257426
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
23:12:52 SQL> 
23:12:52 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.02
23:12:52 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
23:12:52   2  SELECT
23:12:52   3  ydate
23:12:52   4  ,trend jpy_trend
23:12:52   5  ,g4    jpy_g4
23:12:52   6  ,gatt  jpy_gatt
23:12:52   7  ,gattn jpy_gattn
23:12:52   8  FROM modsrc
23:12:52   9  /

Table created.

Elapsed: 00:00:00.07
23:12:52 SQL> 
23:12:52 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
23:12:53 SQL> 
23:12:53 SQL> -- rpt
23:12:53 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:15:01 2010-12-16 21:35:00	 9250	   -1.07	1.5
	-1 2010-09-12 23:35:01 2010-12-16 23:05:00	10660	 -1.0775       1.99

Elapsed: 00:00:00.02
23:12:53 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:15:01 2010-12-16 21:35:00	       9252	  -1.07 	1.5
	-1 2010-09-12 23:35:01 2010-12-16 23:05:00	      10706	-1.0775        1.99

Elapsed: 00:00:00.02
23:12:53 SQL> 
23:12:53 SQL> -- I need a copy of q15 attributes
23:12:53 SQL> 
23:12:53 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.04
23:12:53 SQL> CREATE TABLE jpy_att COMPRESS AS
23:12:53   2  SELECT
23:12:53   3  ydate
23:12:53   4  ,att00 jpy_att00
23:12:53   5  ,att01 jpy_att01
23:12:53   6  ,att02 jpy_att02
23:12:53   7  ,att03 jpy_att03
23:12:53   8  ,att04 jpy_att04
23:12:53   9  ,att05 jpy_att05
23:12:53  10  ,att06 jpy_att06
23:12:53  11  ,att07 jpy_att07
23:12:53  12  ,att08 jpy_att08
23:12:53  13  ,att09 jpy_att09
23:12:53  14  ,att10 jpy_att10
23:12:53  15  ,att11 jpy_att11
23:12:53  16  ,att12 jpy_att12
23:12:53  17  ,att13 jpy_att13
23:12:53  18  ,att14 jpy_att14
23:12:53  19  ,att15 jpy_att15
23:12:53  20  ,att16 jpy_att16
23:12:53  21  ,att17 jpy_att17
23:12:53  22  ,att18 jpy_att18
23:12:53  23  ,att19 jpy_att19
23:12:53  24  ,att20 jpy_att20
23:12:53  25  ,att21 jpy_att21
23:12:53  26  ,att22 jpy_att22
23:12:53  27  ,att23 jpy_att23
23:12:53  28  ,att24 jpy_att24
23:12:53  29  ,att25 jpy_att25
23:12:53  30  ,att26 jpy_att26
23:12:53  31  ,att27 jpy_att27
23:12:53  32  ,att28 jpy_att28
23:12:53  33  ,att29 jpy_att29
23:12:53  34  ,att30 jpy_att30
23:12:53  35  ,att31 jpy_att31
23:12:53  36  ,att32 jpy_att32
23:12:53  37  FROM q15
23:12:53  38  /

Table created.

Elapsed: 00:00:00.14
23:12:53 SQL> 
23:12:53 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
23:12:53 SQL> 
23:12:53 SQL> -- rpt
23:12:53 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.01
23:12:53 SQL> 
23:12:53 SQL> --
23:12:53 SQL> -- cad10.sql
23:12:53 SQL> --
23:12:53 SQL> 
23:12:53 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:12:53 SQL> 
23:12:53 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.33
23:12:54 SQL> 
23:12:54 SQL> -- I created di5min here:
23:12:54 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:12:54 SQL> 
23:12:54 SQL> CREATE OR REPLACE VIEW q11 AS
23:12:54   2  SELECT
23:12:54   3  pair
23:12:54   4  ,ydate
23:12:54   5  ,prdate
23:12:54   6  ,rownum rnum -- acts as t in my time-series
23:12:54   7  ,clse
23:12:54   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:12:54   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:12:54  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:12:54  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:12:54  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:12:54  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:12:54  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:12:54  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:12:54  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:12:54  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:12:54  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:12:54  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:12:54  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:12:54  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:12:54  22  FROM di5min WHERE pair LIKE'%cad%'
23:12:54  23  ORDER BY ydate
23:12:54  24  /

View created.

Elapsed: 00:00:00.04
23:12:54 SQL> 
23:12:54 SQL> -- rpt
23:12:54 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20818

Elapsed: 00:00:00.38
23:12:54 SQL> 
23:12:54 SQL> -- Calc deltas and gains
23:12:54 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
23:12:54 SQL> 
23:12:54 SQL> CREATE TABLE q13 COMPRESS AS
23:12:54   2  SELECT
23:12:54   3  pair
23:12:54   4  ,ydate
23:12:54   5  ,prdate
23:12:54   6  ,rnum
23:12:54   7  ,lg4
23:12:54   8  ,lg8
23:12:54   9  ,lg12
23:12:54  10  ,ld4
23:12:54  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:12:54  12  -- step by 1
23:12:54  13  ,clse-lg1 d01
23:12:54  14  ,lg1-lg2	d12
23:12:54  15  ,lg2-lg3	d23
23:12:54  16  ,lg3-lg4	d34
23:12:54  17  ,lg4-lg5	d45
23:12:54  18  ,lg5-lg6	d56
23:12:54  19  ,lg6-lg7	d67
23:12:54  20  ,lg7-lg8	d78
23:12:54  21  ,lg8-lg9	d89
23:12:54  22  -- step by 2
23:12:54  23  ,clse-lg2 d02
23:12:54  24  ,lg2-lg4 d24
23:12:54  25  ,lg4-lg6 d46
23:12:54  26  ,lg6-lg8 d68
23:12:54  27  -- step by 3
23:12:54  28  ,clse-lg3 d03
23:12:54  29  ,lg3-lg6	d36
23:12:54  30  ,lg6-lg9	d69
23:12:54  31  ,lg9-lg12 d912
23:12:54  32  -- step by 4
23:12:54  33  ,clse-lg4 d04
23:12:54  34  ,lg4-lg8	d48
23:12:54  35  ,lg8-lg12 d812
23:12:54  36  ,lg6-lg12 d612
23:12:54  37  ,lg12-lg18 d1218
23:12:54  38  --
23:12:54  39  ,ABS(clse-lg1)dc1
23:12:54  40  ,ABS(clse-lg2)dc2
23:12:54  41  ,ABS(clse-lg3)dc3
23:12:54  42  ,ABS(clse-lg4)dc4
23:12:54  43  ,ABS(clse-lg5)dc5
23:12:54  44  ,ABS(clse-lg6)dc6
23:12:54  45  ,ABS(clse-lg7)dc7
23:12:54  46  ,ABS(clse-lg8)dc8
23:12:54  47  ,ABS(clse-lg9)dc9
23:12:54  48  ,ABS(clse-lg12)dc12
23:12:54  49  ,ABS(clse-lg18)dc18
23:12:54  50  ,ABS(clse-lg24)dc24
23:12:54  51  ,ABS(clse-lg72)dc72
23:12:54  52  ,(ld4-clse) ug4
23:12:54  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:12:54  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:12:54  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:12:54  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:12:54  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:12:54  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:12:54  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:12:54  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:12:54  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:12:54  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:12:54  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:12:54  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:12:54  65  ,0+TO_CHAR(ydate,'D')d
23:12:54  66  ,0+TO_CHAR(ydate,'W')w
23:12:54  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:12:54  68  FROM q11
23:12:54  69  -- I dont want any NULL values from the LAG() functions:
23:12:54  70  WHERE lg72 > 0
23:12:54  71  ORDER BY pair,ydate
23:12:54  72  /

Table created.

Elapsed: 00:00:01.70
23:12:56 SQL> 
23:12:56 SQL> -- rpt
23:12:56 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9008
	-1	   10946

Elapsed: 00:00:00.04
23:12:56 SQL> 
23:12:56 SQL> -- Calc gains and ntiles
23:12:56 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.15
23:12:56 SQL> CREATE TABLE q15 COMPRESS AS
23:12:56   2  SELECT
23:12:56   3  pair
23:12:56   4  ,ydate
23:12:56   5  ,prdate -- Should be unique
23:12:56   6  ,trend -- +1 or -1
23:12:56   7  ,dc12 -- next statement needs this
23:12:56   8  -- Use NTILE() to derive some attributes
23:12:56   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:12:56  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:12:56  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:12:56  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:12:56  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:12:56  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:12:56  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:12:56  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:12:56  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:12:56  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:12:56  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:12:56  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:12:56  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:12:56  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:12:56  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:12:56  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:12:56  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:12:56  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:12:56  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:12:56  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:12:56  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:12:56  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:12:56  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:12:56  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:12:56  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:12:56  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:12:56  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:12:56  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:12:56  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:12:56  38  ,hh    att28
23:12:56  39  ,d     att29
23:12:56  40  ,w     att30
23:12:56  41  ,mpm   att31
23:12:56  42  ,trend att32
23:12:56  43  ,ug4 g4
23:12:56  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:12:56  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:12:56  46  FROM q13
23:12:56  47  ORDER BY pair,ydate
23:12:56  48  /

Table created.

Elapsed: 00:00:04.09
23:13:00 SQL> 
23:13:00 SQL> -- rpt
23:13:00 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:13:00   2  GROUP BY pair,trend,gatt,gattn
23:13:00   3  ORDER BY pair,trend,gatt,gattn
23:13:00   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	-1			       0
usd_cad 	 1 nup nup -.00001455	    2087    -.06644154
usd_cad 	 1 nup up  -.00237461	    3822    .004670141
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
23:13:00 SQL> 
23:13:00 SQL> -- rpt
23:13:00 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-16 23:05:00

Elapsed: 00:00:00.01
23:13:00 SQL> 
23:13:00 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.10
23:13:00 SQL> CREATE TABLE modsrc COMPRESS AS
23:13:00   2  SELECT
23:13:00   3  pair
23:13:00   4  ,ydate
23:13:00   5  ,prdate
23:13:00   6  ,trend
23:13:00   7  ,g4
23:13:00   8  ,gatt
23:13:00   9  ,gattn
23:13:00  10  ,dc12
23:13:00  11  FROM q15
23:13:00  12  /

Table created.

Elapsed: 00:00:00.09
23:13:00 SQL> 
23:13:00 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
23:13:01 SQL> 
23:13:01 SQL> -- rpt
23:13:01 SQL> 
23:13:01 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20818

Elapsed: 00:00:00.35
23:13:01 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.01
23:13:01 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.00
23:13:01 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.01
23:13:01 SQL> 
23:13:01 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:13:01   2  GROUP BY pair,trend,gatt,gattn
23:13:01   3  ORDER BY pair,trend,gatt,gattn
23:13:01   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	-1			       0
usd_cad 	 1 nup nup -.00001455	    2087    -.06644154
usd_cad 	 1 nup up  -.00237461	    3822    .004670141
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
23:13:01 SQL> 
23:13:01 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
23:13:01 SQL> CREATE TABLE cad_ms10 COMPRESS AS
23:13:01   2  SELECT
23:13:01   3  ydate
23:13:01   4  ,trend cad_trend
23:13:01   5  ,g4    cad_g4
23:13:01   6  ,gatt  cad_gatt
23:13:01   7  ,gattn cad_gattn
23:13:01   8  FROM modsrc
23:13:01   9  /

Table created.

Elapsed: 00:00:00.07
23:13:01 SQL> 
23:13:01 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.14
23:13:01 SQL> 
23:13:01 SQL> -- rpt
23:13:01 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:15:01 2010-12-16 22:40:00	 8969	  -.0089      .0151
	-1 2010-09-12 23:30:01 2010-12-16 23:05:00	10937	  -.0107      .0147

Elapsed: 00:00:00.01
23:13:01 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:15:01 2010-12-16 22:40:00	       9008	 -.0089       .0151
	-1 2010-09-12 23:30:01 2010-12-16 23:05:00	      10946	 -.0107       .0147

Elapsed: 00:00:00.01
23:13:01 SQL> 
23:13:01 SQL> -- I need a copy of q15 attributes
23:13:01 SQL> 
23:13:01 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.04
23:13:01 SQL> CREATE TABLE cad_att COMPRESS AS
23:13:01   2  SELECT
23:13:01   3  ydate
23:13:01   4  ,att00 cad_att00
23:13:01   5  ,att01 cad_att01
23:13:01   6  ,att02 cad_att02
23:13:01   7  ,att03 cad_att03
23:13:01   8  ,att04 cad_att04
23:13:01   9  ,att05 cad_att05
23:13:01  10  ,att06 cad_att06
23:13:01  11  ,att07 cad_att07
23:13:01  12  ,att08 cad_att08
23:13:01  13  ,att09 cad_att09
23:13:01  14  ,att10 cad_att10
23:13:01  15  ,att11 cad_att11
23:13:01  16  ,att12 cad_att12
23:13:01  17  ,att13 cad_att13
23:13:01  18  ,att14 cad_att14
23:13:01  19  ,att15 cad_att15
23:13:01  20  ,att16 cad_att16
23:13:01  21  ,att17 cad_att17
23:13:01  22  ,att18 cad_att18
23:13:01  23  ,att19 cad_att19
23:13:01  24  ,att20 cad_att20
23:13:01  25  ,att21 cad_att21
23:13:01  26  ,att22 cad_att22
23:13:01  27  ,att23 cad_att23
23:13:01  28  ,att24 cad_att24
23:13:01  29  ,att25 cad_att25
23:13:01  30  ,att26 cad_att26
23:13:01  31  ,att27 cad_att27
23:13:01  32  ,att28 cad_att28
23:13:01  33  ,att29 cad_att29
23:13:01  34  ,att30 cad_att30
23:13:01  35  ,att31 cad_att31
23:13:01  36  ,att32 cad_att32
23:13:01  37  FROM q15
23:13:01  38  /

Table created.

Elapsed: 00:00:00.13
23:13:01 SQL> 
23:13:01 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
23:13:02 SQL> 
23:13:02 SQL> -- rpt
23:13:02 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19954

Elapsed: 00:00:00.00
23:13:02 SQL> 
23:13:02 SQL> --
23:13:02 SQL> -- chf10.sql
23:13:02 SQL> --
23:13:02 SQL> 
23:13:02 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:13:02 SQL> 
23:13:02 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.37
23:13:02 SQL> 
23:13:02 SQL> -- I created di5min here:
23:13:02 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:13:02 SQL> 
23:13:02 SQL> CREATE OR REPLACE VIEW q11 AS
23:13:02   2  SELECT
23:13:02   3  pair
23:13:02   4  ,ydate
23:13:02   5  ,prdate
23:13:02   6  ,rownum rnum -- acts as t in my time-series
23:13:02   7  ,clse
23:13:02   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:13:02   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:13:02  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:13:02  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:13:02  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:13:02  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:13:02  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:13:02  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:13:02  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:13:02  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:13:02  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:13:02  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:13:02  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:13:02  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:13:02  22  FROM di5min WHERE pair LIKE'%chf%'
23:13:02  23  ORDER BY ydate
23:13:02  24  /

View created.

Elapsed: 00:00:00.05
23:13:02 SQL> 
23:13:02 SQL> -- rpt
23:13:02 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20821

Elapsed: 00:00:00.68
23:13:03 SQL> 
23:13:03 SQL> -- Calc deltas and gains
23:13:03 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.22
23:13:03 SQL> 
23:13:03 SQL> CREATE TABLE q13 COMPRESS AS
23:13:03   2  SELECT
23:13:03   3  pair
23:13:03   4  ,ydate
23:13:03   5  ,prdate
23:13:03   6  ,rnum
23:13:03   7  ,lg4
23:13:03   8  ,lg8
23:13:03   9  ,lg12
23:13:03  10  ,ld4
23:13:03  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:13:03  12  -- step by 1
23:13:03  13  ,clse-lg1 d01
23:13:03  14  ,lg1-lg2	d12
23:13:03  15  ,lg2-lg3	d23
23:13:03  16  ,lg3-lg4	d34
23:13:03  17  ,lg4-lg5	d45
23:13:03  18  ,lg5-lg6	d56
23:13:03  19  ,lg6-lg7	d67
23:13:03  20  ,lg7-lg8	d78
23:13:03  21  ,lg8-lg9	d89
23:13:03  22  -- step by 2
23:13:03  23  ,clse-lg2 d02
23:13:03  24  ,lg2-lg4 d24
23:13:03  25  ,lg4-lg6 d46
23:13:03  26  ,lg6-lg8 d68
23:13:03  27  -- step by 3
23:13:03  28  ,clse-lg3 d03
23:13:03  29  ,lg3-lg6	d36
23:13:03  30  ,lg6-lg9	d69
23:13:03  31  ,lg9-lg12 d912
23:13:03  32  -- step by 4
23:13:03  33  ,clse-lg4 d04
23:13:03  34  ,lg4-lg8	d48
23:13:03  35  ,lg8-lg12 d812
23:13:03  36  ,lg6-lg12 d612
23:13:03  37  ,lg12-lg18 d1218
23:13:03  38  --
23:13:03  39  ,ABS(clse-lg1)dc1
23:13:03  40  ,ABS(clse-lg2)dc2
23:13:03  41  ,ABS(clse-lg3)dc3
23:13:03  42  ,ABS(clse-lg4)dc4
23:13:03  43  ,ABS(clse-lg5)dc5
23:13:03  44  ,ABS(clse-lg6)dc6
23:13:03  45  ,ABS(clse-lg7)dc7
23:13:03  46  ,ABS(clse-lg8)dc8
23:13:03  47  ,ABS(clse-lg9)dc9
23:13:03  48  ,ABS(clse-lg12)dc12
23:13:03  49  ,ABS(clse-lg18)dc18
23:13:03  50  ,ABS(clse-lg24)dc24
23:13:03  51  ,ABS(clse-lg72)dc72
23:13:03  52  ,(ld4-clse) ug4
23:13:03  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:13:03  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:13:03  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:13:03  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:13:03  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:13:03  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:13:03  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:13:03  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:13:03  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:13:03  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:13:03  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:13:03  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:13:03  65  ,0+TO_CHAR(ydate,'D')d
23:13:03  66  ,0+TO_CHAR(ydate,'W')w
23:13:03  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:13:03  68  FROM q11
23:13:03  69  -- I dont want any NULL values from the LAG() functions:
23:13:03  70  WHERE lg72 > 0
23:13:03  71  ORDER BY pair,ydate
23:13:03  72  /

Table created.

Elapsed: 00:00:01.92
23:13:05 SQL> 
23:13:05 SQL> -- rpt
23:13:05 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9320
	-1	   10637

Elapsed: 00:00:00.03
23:13:05 SQL> 
23:13:05 SQL> -- Calc gains and ntiles
23:13:05 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
23:13:05 SQL> CREATE TABLE q15 COMPRESS AS
23:13:05   2  SELECT
23:13:05   3  pair
23:13:05   4  ,ydate
23:13:05   5  ,prdate -- Should be unique
23:13:05   6  ,trend -- +1 or -1
23:13:05   7  ,dc12 -- next statement needs this
23:13:05   8  -- Use NTILE() to derive some attributes
23:13:05   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:13:05  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:13:05  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:13:05  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:13:05  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:13:05  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:13:05  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:13:05  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:13:05  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:13:05  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:13:05  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:13:05  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:13:05  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:13:05  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:13:05  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:13:05  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:13:05  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:13:05  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:13:05  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:13:05  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:13:05  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:13:05  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:13:05  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:13:05  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:13:05  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:13:05  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:13:05  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:13:05  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:13:05  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:13:05  38  ,hh    att28
23:13:05  39  ,d     att29
23:13:05  40  ,w     att30
23:13:05  41  ,mpm   att31
23:13:05  42  ,trend att32
23:13:05  43  ,ug4 g4
23:13:05  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:13:05  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:13:05  46  FROM q13
23:13:05  47  ORDER BY pair,ydate
23:13:05  48  /

Table created.

Elapsed: 00:00:04.08
23:13:09 SQL> 
23:13:09 SQL> -- rpt
23:13:09 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:13:09   2  GROUP BY pair,trend,gatt,gattn
23:13:09   3  ORDER BY pair,trend,gatt,gattn
23:13:09   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032146	    2645    .042491123
usd_chf 	-1 nup up  -.00292502	    3897    .059903814
usd_chf 	-1 up  nup .002646511	    4048    -.12069668
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00254116	    3861    .112061565
usd_chf 	 1 up  nup .002433841	    3232     -.1606913
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
23:13:09 SQL> 
23:13:09 SQL> -- rpt
23:13:09 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-16 23:05:00

Elapsed: 00:00:00.01
23:13:09 SQL> 
23:13:09 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
23:13:10 SQL> CREATE TABLE modsrc COMPRESS AS
23:13:10   2  SELECT
23:13:10   3  pair
23:13:10   4  ,ydate
23:13:10   5  ,prdate
23:13:10   6  ,trend
23:13:10   7  ,g4
23:13:10   8  ,gatt
23:13:10   9  ,gattn
23:13:10  10  ,dc12
23:13:10  11  FROM q15
23:13:10  12  /

Table created.

Elapsed: 00:00:00.09
23:13:10 SQL> 
23:13:10 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
23:13:10 SQL> 
23:13:10 SQL> -- rpt
23:13:10 SQL> 
23:13:10 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.37
23:13:10 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
23:13:10 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
23:13:10 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
23:13:10 SQL> 
23:13:10 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:13:10   2  GROUP BY pair,trend,gatt,gattn
23:13:10   3  ORDER BY pair,trend,gatt,gattn
23:13:10   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032146	    2645    .042491123
usd_chf 	-1 nup up  -.00292502	    3897    .059903814
usd_chf 	-1 up  nup .002646511	    4048    -.12069668
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00254116	    3861    .112061565
usd_chf 	 1 up  nup .002433841	    3232     -.1606913
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
23:13:10 SQL> 
23:13:10 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.07
23:13:10 SQL> CREATE TABLE chf_ms10 COMPRESS AS
23:13:10   2  SELECT
23:13:10   3  ydate
23:13:10   4  ,trend chf_trend
23:13:10   5  ,g4    chf_g4
23:13:10   6  ,gatt  chf_gatt
23:13:10   7  ,gattn chf_gattn
23:13:10   8  FROM modsrc
23:13:10   9  /

Table created.

Elapsed: 00:00:00.07
23:13:10 SQL> 
23:13:10 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
23:13:11 SQL> 
23:13:11 SQL> -- rpt
23:13:11 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	 9319	  -.0176     .01365
	-1 2010-09-12 22:15:01 2010-12-16 23:05:00	10590	  -.0166      .0149

Elapsed: 00:00:00.02
23:13:11 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	       9320	 -.0176      .01365
	-1 2010-09-12 22:15:01 2010-12-16 23:05:00	      10637	 -.0166       .0149

Elapsed: 00:00:00.02
23:13:11 SQL> 
23:13:11 SQL> -- I need a copy of q15 attributes
23:13:11 SQL> 
23:13:11 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.03
23:13:11 SQL> CREATE TABLE chf_att COMPRESS AS
23:13:11   2  SELECT
23:13:11   3  ydate
23:13:11   4  ,att00 chf_att00
23:13:11   5  ,att01 chf_att01
23:13:11   6  ,att02 chf_att02
23:13:11   7  ,att03 chf_att03
23:13:11   8  ,att04 chf_att04
23:13:11   9  ,att05 chf_att05
23:13:11  10  ,att06 chf_att06
23:13:11  11  ,att07 chf_att07
23:13:11  12  ,att08 chf_att08
23:13:11  13  ,att09 chf_att09
23:13:11  14  ,att10 chf_att10
23:13:11  15  ,att11 chf_att11
23:13:11  16  ,att12 chf_att12
23:13:11  17  ,att13 chf_att13
23:13:11  18  ,att14 chf_att14
23:13:11  19  ,att15 chf_att15
23:13:11  20  ,att16 chf_att16
23:13:11  21  ,att17 chf_att17
23:13:11  22  ,att18 chf_att18
23:13:11  23  ,att19 chf_att19
23:13:11  24  ,att20 chf_att20
23:13:11  25  ,att21 chf_att21
23:13:11  26  ,att22 chf_att22
23:13:11  27  ,att23 chf_att23
23:13:11  28  ,att24 chf_att24
23:13:11  29  ,att25 chf_att25
23:13:11  30  ,att26 chf_att26
23:13:11  31  ,att27 chf_att27
23:13:11  32  ,att28 chf_att28
23:13:11  33  ,att29 chf_att29
23:13:11  34  ,att30 chf_att30
23:13:11  35  ,att31 chf_att31
23:13:11  36  ,att32 chf_att32
23:13:11  37  FROM q15
23:13:11  38  /

Table created.

Elapsed: 00:00:00.16
23:13:11 SQL> 
23:13:11 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
23:13:11 SQL> 
23:13:11 SQL> -- rpt
23:13:11 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.00
23:13:11 SQL> 
23:13:11 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
