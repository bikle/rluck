
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 16 23:39:31 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

23:39:31 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
23:39:31 SQL> 23:39:31 SQL> --
23:39:31 SQL> -- eur10.sql
23:39:31 SQL> --
23:39:31 SQL> 
23:39:31 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:39:31 SQL> 
23:39:31 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.00
23:39:31 SQL> 
23:39:31 SQL> -- I created di5min here:
23:39:31 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:39:31 SQL> 
23:39:31 SQL> CREATE OR REPLACE VIEW q11 AS
23:39:31   2  SELECT
23:39:31   3  pair
23:39:31   4  ,ydate
23:39:31   5  ,prdate
23:39:31   6  ,rownum rnum -- acts as t in my time-series
23:39:31   7  ,clse
23:39:31   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:39:31   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:39:31  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:39:31  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:39:31  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:39:31  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:39:31  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:39:31  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:39:31  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:39:31  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:39:31  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:39:31  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:39:31  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:39:31  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:39:31  22  FROM di5min WHERE pair LIKE'%eur%'
23:39:31  23  ORDER BY ydate
23:39:31  24  /

View created.

Elapsed: 00:00:00.04
23:39:31 SQL> 
23:39:31 SQL> -- rpt
23:39:31 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20822

Elapsed: 00:00:00.37
23:39:31 SQL> 
23:39:31 SQL> -- Calc deltas and gains
23:39:31 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.05
23:39:32 SQL> 
23:39:32 SQL> CREATE TABLE q13 COMPRESS AS
23:39:32   2  SELECT
23:39:32   3  pair
23:39:32   4  ,ydate
23:39:32   5  ,prdate
23:39:32   6  ,rnum
23:39:32   7  ,lg4
23:39:32   8  ,lg8
23:39:32   9  ,lg12
23:39:32  10  ,ld4
23:39:32  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:39:32  12  -- step by 1
23:39:32  13  ,clse-lg1 d01
23:39:32  14  ,lg1-lg2	d12
23:39:32  15  ,lg2-lg3	d23
23:39:32  16  ,lg3-lg4	d34
23:39:32  17  ,lg4-lg5	d45
23:39:32  18  ,lg5-lg6	d56
23:39:32  19  ,lg6-lg7	d67
23:39:32  20  ,lg7-lg8	d78
23:39:32  21  ,lg8-lg9	d89
23:39:32  22  -- step by 2
23:39:32  23  ,clse-lg2 d02
23:39:32  24  ,lg2-lg4 d24
23:39:32  25  ,lg4-lg6 d46
23:39:32  26  ,lg6-lg8 d68
23:39:32  27  -- step by 3
23:39:32  28  ,clse-lg3 d03
23:39:32  29  ,lg3-lg6	d36
23:39:32  30  ,lg6-lg9	d69
23:39:32  31  ,lg9-lg12 d912
23:39:32  32  -- step by 4
23:39:32  33  ,clse-lg4 d04
23:39:32  34  ,lg4-lg8	d48
23:39:32  35  ,lg8-lg12 d812
23:39:32  36  ,lg6-lg12 d612
23:39:32  37  ,lg12-lg18 d1218
23:39:32  38  --
23:39:32  39  ,ABS(clse-lg1)dc1
23:39:32  40  ,ABS(clse-lg2)dc2
23:39:32  41  ,ABS(clse-lg3)dc3
23:39:32  42  ,ABS(clse-lg4)dc4
23:39:32  43  ,ABS(clse-lg5)dc5
23:39:32  44  ,ABS(clse-lg6)dc6
23:39:32  45  ,ABS(clse-lg7)dc7
23:39:32  46  ,ABS(clse-lg8)dc8
23:39:32  47  ,ABS(clse-lg9)dc9
23:39:32  48  ,ABS(clse-lg12)dc12
23:39:32  49  ,ABS(clse-lg18)dc18
23:39:32  50  ,ABS(clse-lg24)dc24
23:39:32  51  ,ABS(clse-lg72)dc72
23:39:32  52  ,(ld4-clse) ug4
23:39:32  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:39:32  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:39:32  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:39:32  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:39:32  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:39:32  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:39:32  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:39:32  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:39:32  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:39:32  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:39:32  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:39:32  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:39:32  65  ,0+TO_CHAR(ydate,'D')d
23:39:32  66  ,0+TO_CHAR(ydate,'W')w
23:39:32  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:39:32  68  FROM q11
23:39:32  69  -- I dont want any NULL values from the LAG() functions:
23:39:32  70  WHERE lg72 > 0
23:39:32  71  ORDER BY pair,ydate
23:39:32  72  /

Table created.

Elapsed: 00:00:02.19
23:39:34 SQL> 
23:39:34 SQL> -- rpt
23:39:34 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10287
	-1	    9671

Elapsed: 00:00:00.23
23:39:34 SQL> 
23:39:34 SQL> -- Calc gains and ntiles
23:39:34 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.06
23:39:34 SQL> CREATE TABLE q15 COMPRESS AS
23:39:34   2  SELECT
23:39:34   3  pair
23:39:34   4  ,ydate
23:39:34   5  ,prdate -- Should be unique
23:39:34   6  ,trend -- +1 or -1
23:39:34   7  ,dc12 -- next statement needs this
23:39:34   8  -- Use NTILE() to derive some attributes
23:39:34   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:39:34  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:39:34  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:39:34  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:39:34  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:39:34  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:39:34  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:39:34  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:39:34  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:39:34  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:39:34  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:39:34  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:39:34  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:39:34  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:39:34  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:39:34  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:39:34  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:39:34  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:39:34  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:39:34  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:39:34  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:39:34  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:39:34  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:39:34  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:39:34  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:39:34  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:39:34  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:39:34  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:39:34  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:39:34  38  ,hh    att28
23:39:34  39  ,d     att29
23:39:34  40  ,w     att30
23:39:34  41  ,mpm   att31
23:39:34  42  ,trend att32
23:39:34  43  ,ug4 g4
23:39:34  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:39:34  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:39:34  46  FROM q13
23:39:34  47  ORDER BY pair,ydate
23:39:34  48  /

Table created.

Elapsed: 00:00:05.80
23:39:40 SQL> 
23:39:40 SQL> -- rpt
23:39:40 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:39:40   2  GROUP BY pair,trend,gatt,gattn
23:39:40   3  ORDER BY pair,trend,gatt,gattn
23:39:40   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003631152	    4165    -.20784535
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003717447	    4326    -.14406462
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.20
23:39:40 SQL> 
23:39:40 SQL> -- rpt
23:39:40 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-16 23:30:00

Elapsed: 00:00:00.02
23:39:40 SQL> 
23:39:40 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.03
23:39:40 SQL> CREATE TABLE modsrc COMPRESS AS
23:39:40   2  SELECT
23:39:40   3  pair
23:39:40   4  ,ydate
23:39:40   5  ,prdate
23:39:40   6  ,trend
23:39:40   7  ,g4
23:39:40   8  ,gatt
23:39:40   9  ,gattn
23:39:40  10  ,dc12
23:39:40  11  FROM q15
23:39:40  12  /

Table created.

Elapsed: 00:00:00.09
23:39:40 SQL> 
23:39:40 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.31
23:39:41 SQL> 
23:39:41 SQL> -- rpt
23:39:41 SQL> 
23:39:41 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.36
23:39:41 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
23:39:41 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
23:39:41 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
23:39:41 SQL> 
23:39:41 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:39:41   2  GROUP BY pair,trend,gatt,gattn
23:39:41   3  ORDER BY pair,trend,gatt,gattn
23:39:41   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003631152	    4165    -.20784535
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003717447	    4326    -.14406462
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
23:39:41 SQL> 
23:39:41 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
23:39:41 SQL> CREATE TABLE eur_ms10 COMPRESS AS
23:39:41   2  SELECT
23:39:41   3  ydate
23:39:41   4  ,trend eur_trend
23:39:41   5  ,g4    eur_g4
23:39:41   6  ,gatt  eur_gatt
23:39:41   7  ,gattn eur_gattn
23:39:41   8  FROM modsrc
23:39:41   9  /

Table created.

Elapsed: 00:00:00.11
23:39:41 SQL> 
23:39:41 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
23:39:41 SQL> 
23:39:41 SQL> -- rpt
23:39:41 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 23:25:01 2010-12-16 23:25:00	10270	  -.0153      .0165
	-1 2010-09-12 22:40:01 2010-12-16 23:30:00	 9640	  -.0164      .0167

Elapsed: 00:00:00.02
23:39:41 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 23:25:01 2010-12-16 23:25:00	      10287	 -.0153       .0165
	-1 2010-09-12 22:40:01 2010-12-16 23:30:00	       9671	 -.0164       .0167

Elapsed: 00:00:00.02
23:39:41 SQL> 
23:39:41 SQL> -- I need a copy of q15 attributes
23:39:41 SQL> 
23:39:41 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.04
23:39:41 SQL> CREATE TABLE eur_att COMPRESS AS
23:39:41   2  SELECT
23:39:41   3  ydate
23:39:41   4  ,att00 eur_att00
23:39:41   5  ,att01 eur_att01
23:39:41   6  ,att02 eur_att02
23:39:41   7  ,att03 eur_att03
23:39:41   8  ,att04 eur_att04
23:39:41   9  ,att05 eur_att05
23:39:41  10  ,att06 eur_att06
23:39:41  11  ,att07 eur_att07
23:39:41  12  ,att08 eur_att08
23:39:41  13  ,att09 eur_att09
23:39:41  14  ,att10 eur_att10
23:39:41  15  ,att11 eur_att11
23:39:41  16  ,att12 eur_att12
23:39:41  17  ,att13 eur_att13
23:39:41  18  ,att14 eur_att14
23:39:41  19  ,att15 eur_att15
23:39:41  20  ,att16 eur_att16
23:39:41  21  ,att17 eur_att17
23:39:41  22  ,att18 eur_att18
23:39:41  23  ,att19 eur_att19
23:39:41  24  ,att20 eur_att20
23:39:41  25  ,att21 eur_att21
23:39:41  26  ,att22 eur_att22
23:39:41  27  ,att23 eur_att23
23:39:41  28  ,att24 eur_att24
23:39:41  29  ,att25 eur_att25
23:39:41  30  ,att26 eur_att26
23:39:41  31  ,att27 eur_att27
23:39:41  32  ,att28 eur_att28
23:39:41  33  ,att29 eur_att29
23:39:41  34  ,att30 eur_att30
23:39:41  35  ,att31 eur_att31
23:39:41  36  ,att32 eur_att32
23:39:41  37  FROM q15
23:39:41  38  /

Table created.

Elapsed: 00:00:00.13
23:39:42 SQL> 
23:39:42 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.46
23:39:42 SQL> 
23:39:42 SQL> -- rpt
23:39:42 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.02
23:39:42 SQL> 
23:39:42 SQL> --
23:39:42 SQL> -- aud10.sql
23:39:42 SQL> --
23:39:42 SQL> 
23:39:42 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:39:42 SQL> 
23:39:42 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.55
23:39:43 SQL> 
23:39:43 SQL> -- I created di5min here:
23:39:43 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:39:43 SQL> 
23:39:43 SQL> CREATE OR REPLACE VIEW q11 AS
23:39:43   2  SELECT
23:39:43   3  pair
23:39:43   4  ,ydate
23:39:43   5  ,prdate
23:39:43   6  ,rownum rnum -- acts as t in my time-series
23:39:43   7  ,clse
23:39:43   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:39:43   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:39:43  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:39:43  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:39:43  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:39:43  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:39:43  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:39:43  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:39:43  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:39:43  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:39:43  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:39:43  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:39:43  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:39:43  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:39:43  22  FROM di5min WHERE pair LIKE'%aud%'
23:39:43  23  ORDER BY ydate
23:39:43  24  /

View created.

Elapsed: 00:00:00.04
23:39:43 SQL> 
23:39:43 SQL> -- rpt
23:39:43 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20819

Elapsed: 00:00:00.36
23:39:43 SQL> 
23:39:43 SQL> -- Calc deltas and gains
23:39:43 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.19
23:39:43 SQL> 
23:39:43 SQL> CREATE TABLE q13 COMPRESS AS
23:39:43   2  SELECT
23:39:43   3  pair
23:39:43   4  ,ydate
23:39:43   5  ,prdate
23:39:43   6  ,rnum
23:39:43   7  ,lg4
23:39:43   8  ,lg8
23:39:43   9  ,lg12
23:39:43  10  ,ld4
23:39:43  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:39:43  12  -- step by 1
23:39:43  13  ,clse-lg1 d01
23:39:43  14  ,lg1-lg2	d12
23:39:43  15  ,lg2-lg3	d23
23:39:43  16  ,lg3-lg4	d34
23:39:43  17  ,lg4-lg5	d45
23:39:43  18  ,lg5-lg6	d56
23:39:43  19  ,lg6-lg7	d67
23:39:43  20  ,lg7-lg8	d78
23:39:43  21  ,lg8-lg9	d89
23:39:43  22  -- step by 2
23:39:43  23  ,clse-lg2 d02
23:39:43  24  ,lg2-lg4 d24
23:39:43  25  ,lg4-lg6 d46
23:39:43  26  ,lg6-lg8 d68
23:39:43  27  -- step by 3
23:39:43  28  ,clse-lg3 d03
23:39:43  29  ,lg3-lg6	d36
23:39:43  30  ,lg6-lg9	d69
23:39:43  31  ,lg9-lg12 d912
23:39:43  32  -- step by 4
23:39:43  33  ,clse-lg4 d04
23:39:43  34  ,lg4-lg8	d48
23:39:43  35  ,lg8-lg12 d812
23:39:43  36  ,lg6-lg12 d612
23:39:43  37  ,lg12-lg18 d1218
23:39:43  38  --
23:39:43  39  ,ABS(clse-lg1)dc1
23:39:43  40  ,ABS(clse-lg2)dc2
23:39:43  41  ,ABS(clse-lg3)dc3
23:39:43  42  ,ABS(clse-lg4)dc4
23:39:43  43  ,ABS(clse-lg5)dc5
23:39:43  44  ,ABS(clse-lg6)dc6
23:39:43  45  ,ABS(clse-lg7)dc7
23:39:43  46  ,ABS(clse-lg8)dc8
23:39:43  47  ,ABS(clse-lg9)dc9
23:39:43  48  ,ABS(clse-lg12)dc12
23:39:43  49  ,ABS(clse-lg18)dc18
23:39:43  50  ,ABS(clse-lg24)dc24
23:39:43  51  ,ABS(clse-lg72)dc72
23:39:43  52  ,(ld4-clse) ug4
23:39:43  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:39:43  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:39:43  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:39:43  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:39:43  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:39:43  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:39:43  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:39:43  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:39:43  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:39:43  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:39:43  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:39:43  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:39:43  65  ,0+TO_CHAR(ydate,'D')d
23:39:43  66  ,0+TO_CHAR(ydate,'W')w
23:39:43  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:39:43  68  FROM q11
23:39:43  69  -- I dont want any NULL values from the LAG() functions:
23:39:43  70  WHERE lg72 > 0
23:39:43  71  ORDER BY pair,ydate
23:39:43  72  /

Table created.

Elapsed: 00:00:01.77
23:39:45 SQL> 
23:39:45 SQL> -- rpt
23:39:45 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10455
	-1	    9500

Elapsed: 00:00:00.30
23:39:45 SQL> 
23:39:45 SQL> -- Calc gains and ntiles
23:39:45 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.14
23:39:45 SQL> CREATE TABLE q15 COMPRESS AS
23:39:45   2  SELECT
23:39:45   3  pair
23:39:45   4  ,ydate
23:39:45   5  ,prdate -- Should be unique
23:39:45   6  ,trend -- +1 or -1
23:39:45   7  ,dc12 -- next statement needs this
23:39:45   8  -- Use NTILE() to derive some attributes
23:39:45   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:39:45  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:39:45  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:39:45  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:39:45  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:39:45  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:39:45  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:39:45  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:39:45  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:39:45  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:39:45  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:39:45  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:39:45  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:39:45  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:39:45  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:39:45  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:39:45  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:39:45  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:39:45  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:39:45  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:39:45  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:39:45  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:39:45  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:39:45  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:39:45  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:39:45  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:39:45  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:39:45  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:39:45  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:39:45  38  ,hh    att28
23:39:45  39  ,d     att29
23:39:45  40  ,w     att30
23:39:45  41  ,mpm   att31
23:39:45  42  ,trend att32
23:39:45  43  ,ug4 g4
23:39:45  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:39:45  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:39:45  46  FROM q13
23:39:45  47  ORDER BY pair,ydate
23:39:45  48  /

Table created.

Elapsed: 00:00:03.98
23:39:49 SQL> 
23:39:49 SQL> -- rpt
23:39:49 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:39:49   2  GROUP BY pair,trend,gatt,gattn
23:39:49   3  ORDER BY pair,trend,gatt,gattn
23:39:49   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002978238	    4354    .026109324
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.2949E-06	    1950    .023122877
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002938933	    4414    -.17765835
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.12
23:39:49 SQL> 
23:39:49 SQL> -- rpt
23:39:49 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-16 23:30:00

Elapsed: 00:00:00.01
23:39:49 SQL> 
23:39:49 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.19
23:39:50 SQL> CREATE TABLE modsrc COMPRESS AS
23:39:50   2  SELECT
23:39:50   3  pair
23:39:50   4  ,ydate
23:39:50   5  ,prdate
23:39:50   6  ,trend
23:39:50   7  ,g4
23:39:50   8  ,gatt
23:39:50   9  ,gattn
23:39:50  10  ,dc12
23:39:50  11  FROM q15
23:39:50  12  /

Table created.

Elapsed: 00:00:00.13
23:39:50 SQL> 
23:39:50 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.29
23:39:50 SQL> 
23:39:50 SQL> -- rpt
23:39:50 SQL> 
23:39:50 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20819

Elapsed: 00:00:00.37
23:39:50 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.01
23:39:50 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.00
23:39:50 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.00
23:39:50 SQL> 
23:39:50 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:39:50   2  GROUP BY pair,trend,gatt,gattn
23:39:50   3  ORDER BY pair,trend,gatt,gattn
23:39:50   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002978238	    4354    .026109324
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.2949E-06	    1950    .023122877
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002938933	    4414    -.17765835
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
23:39:50 SQL> 
23:39:50 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
23:39:50 SQL> CREATE TABLE aud_ms10 COMPRESS AS
23:39:50   2  SELECT
23:39:50   3  ydate
23:39:50   4  ,trend aud_trend
23:39:50   5  ,g4    aud_g4
23:39:50   6  ,gatt  aud_gatt
23:39:50   7  ,gattn aud_gattn
23:39:51   8  FROM modsrc
23:39:51   9  /

Table created.

Elapsed: 00:00:00.06
23:39:51 SQL> 
23:39:51 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
23:39:51 SQL> 
23:39:51 SQL> -- rpt
23:39:51 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:40:01 2010-12-16 23:30:00	10421	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-16 21:20:00	 9486	   -.017      .0131

Elapsed: 00:00:00.02
23:39:51 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:40:01 2010-12-16 23:30:00	      10455	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-16 21:20:00	       9500	  -.017       .0131

Elapsed: 00:00:00.02
23:39:51 SQL> 
23:39:51 SQL> -- I need a copy of q15 attributes
23:39:51 SQL> 
23:39:51 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.03
23:39:51 SQL> CREATE TABLE aud_att COMPRESS AS
23:39:51   2  SELECT
23:39:51   3  ydate
23:39:51   4  ,att00 aud_att00
23:39:51   5  ,att01 aud_att01
23:39:51   6  ,att02 aud_att02
23:39:51   7  ,att03 aud_att03
23:39:51   8  ,att04 aud_att04
23:39:51   9  ,att05 aud_att05
23:39:51  10  ,att06 aud_att06
23:39:51  11  ,att07 aud_att07
23:39:51  12  ,att08 aud_att08
23:39:51  13  ,att09 aud_att09
23:39:51  14  ,att10 aud_att10
23:39:51  15  ,att11 aud_att11
23:39:51  16  ,att12 aud_att12
23:39:51  17  ,att13 aud_att13
23:39:51  18  ,att14 aud_att14
23:39:51  19  ,att15 aud_att15
23:39:51  20  ,att16 aud_att16
23:39:51  21  ,att17 aud_att17
23:39:51  22  ,att18 aud_att18
23:39:51  23  ,att19 aud_att19
23:39:51  24  ,att20 aud_att20
23:39:51  25  ,att21 aud_att21
23:39:51  26  ,att22 aud_att22
23:39:51  27  ,att23 aud_att23
23:39:51  28  ,att24 aud_att24
23:39:51  29  ,att25 aud_att25
23:39:51  30  ,att26 aud_att26
23:39:51  31  ,att27 aud_att27
23:39:51  32  ,att28 aud_att28
23:39:51  33  ,att29 aud_att29
23:39:51  34  ,att30 aud_att30
23:39:51  35  ,att31 aud_att31
23:39:51  36  ,att32 aud_att32
23:39:51  37  FROM q15
23:39:51  38  /

Table created.

Elapsed: 00:00:00.18
23:39:51 SQL> 
23:39:51 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.50
23:39:51 SQL> 
23:39:51 SQL> -- rpt
23:39:51 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19955

Elapsed: 00:00:00.00
23:39:51 SQL> 
23:39:51 SQL> --
23:39:51 SQL> -- gbp10.sql
23:39:51 SQL> --
23:39:51 SQL> 
23:39:51 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:39:51 SQL> 
23:39:51 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.35
23:39:52 SQL> 
23:39:52 SQL> -- I created di5min here:
23:39:52 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:39:52 SQL> 
23:39:52 SQL> CREATE OR REPLACE VIEW q11 AS
23:39:52   2  SELECT
23:39:52   3  pair
23:39:52   4  ,ydate
23:39:52   5  ,prdate
23:39:52   6  ,rownum rnum -- acts as t in my time-series
23:39:52   7  ,clse
23:39:52   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:39:52   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:39:52  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:39:52  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:39:52  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:39:52  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:39:52  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:39:52  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:39:52  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:39:52  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:39:52  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:39:52  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:39:52  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:39:52  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:39:52  22  FROM di5min WHERE pair LIKE'%gbp%'
23:39:52  23  ORDER BY ydate
23:39:52  24  /

View created.

Elapsed: 00:00:00.08
23:39:52 SQL> 
23:39:52 SQL> -- rpt
23:39:52 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20821

Elapsed: 00:00:00.37
23:39:52 SQL> 
23:39:52 SQL> -- Calc deltas and gains
23:39:52 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
23:39:52 SQL> 
23:39:52 SQL> CREATE TABLE q13 COMPRESS AS
23:39:52   2  SELECT
23:39:52   3  pair
23:39:52   4  ,ydate
23:39:52   5  ,prdate
23:39:52   6  ,rnum
23:39:52   7  ,lg4
23:39:52   8  ,lg8
23:39:52   9  ,lg12
23:39:52  10  ,ld4
23:39:52  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:39:52  12  -- step by 1
23:39:52  13  ,clse-lg1 d01
23:39:52  14  ,lg1-lg2	d12
23:39:52  15  ,lg2-lg3	d23
23:39:52  16  ,lg3-lg4	d34
23:39:52  17  ,lg4-lg5	d45
23:39:52  18  ,lg5-lg6	d56
23:39:52  19  ,lg6-lg7	d67
23:39:52  20  ,lg7-lg8	d78
23:39:52  21  ,lg8-lg9	d89
23:39:52  22  -- step by 2
23:39:52  23  ,clse-lg2 d02
23:39:52  24  ,lg2-lg4 d24
23:39:52  25  ,lg4-lg6 d46
23:39:52  26  ,lg6-lg8 d68
23:39:52  27  -- step by 3
23:39:52  28  ,clse-lg3 d03
23:39:52  29  ,lg3-lg6	d36
23:39:52  30  ,lg6-lg9	d69
23:39:52  31  ,lg9-lg12 d912
23:39:52  32  -- step by 4
23:39:52  33  ,clse-lg4 d04
23:39:52  34  ,lg4-lg8	d48
23:39:52  35  ,lg8-lg12 d812
23:39:52  36  ,lg6-lg12 d612
23:39:52  37  ,lg12-lg18 d1218
23:39:52  38  --
23:39:52  39  ,ABS(clse-lg1)dc1
23:39:52  40  ,ABS(clse-lg2)dc2
23:39:52  41  ,ABS(clse-lg3)dc3
23:39:52  42  ,ABS(clse-lg4)dc4
23:39:52  43  ,ABS(clse-lg5)dc5
23:39:52  44  ,ABS(clse-lg6)dc6
23:39:52  45  ,ABS(clse-lg7)dc7
23:39:52  46  ,ABS(clse-lg8)dc8
23:39:52  47  ,ABS(clse-lg9)dc9
23:39:52  48  ,ABS(clse-lg12)dc12
23:39:52  49  ,ABS(clse-lg18)dc18
23:39:52  50  ,ABS(clse-lg24)dc24
23:39:52  51  ,ABS(clse-lg72)dc72
23:39:52  52  ,(ld4-clse) ug4
23:39:52  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:39:52  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:39:52  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:39:52  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:39:52  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:39:52  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:39:52  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:39:52  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:39:52  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:39:52  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:39:52  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:39:52  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:39:52  65  ,0+TO_CHAR(ydate,'D')d
23:39:52  66  ,0+TO_CHAR(ydate,'W')w
23:39:52  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:39:52  68  FROM q11
23:39:52  69  -- I dont want any NULL values from the LAG() functions:
23:39:52  70  WHERE lg72 > 0
23:39:52  71  ORDER BY pair,ydate
23:39:52  72  /

Table created.

Elapsed: 00:00:01.76
23:39:54 SQL> 
23:39:54 SQL> -- rpt
23:39:54 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9741
	-1	   10216

Elapsed: 00:00:00.13
23:39:54 SQL> 
23:39:54 SQL> -- Calc gains and ntiles
23:39:54 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.16
23:39:55 SQL> CREATE TABLE q15 COMPRESS AS
23:39:55   2  SELECT
23:39:55   3  pair
23:39:55   4  ,ydate
23:39:55   5  ,prdate -- Should be unique
23:39:55   6  ,trend -- +1 or -1
23:39:55   7  ,dc12 -- next statement needs this
23:39:55   8  -- Use NTILE() to derive some attributes
23:39:55   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:39:55  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:39:55  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:39:55  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:39:55  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:39:55  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:39:55  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:39:55  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:39:55  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:39:55  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:39:55  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:39:55  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:39:55  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:39:55  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:39:55  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:39:55  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:39:55  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:39:55  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:39:55  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:39:55  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:39:55  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:39:55  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:39:55  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:39:55  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:39:55  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:39:55  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:39:55  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:39:55  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:39:55  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:39:55  38  ,hh    att28
23:39:55  39  ,d     att29
23:39:55  40  ,w     att30
23:39:55  41  ,mpm   att31
23:39:55  42  ,trend att32
23:39:55  43  ,ug4 g4
23:39:55  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:39:55  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:39:55  46  FROM q13
23:39:55  47  ORDER BY pair,ydate
23:39:55  48  /

Table created.

Elapsed: 00:00:04.07
23:39:59 SQL> 
23:39:59 SQL> -- rpt
23:39:59 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:39:59   2  GROUP BY pair,trend,gatt,gattn
23:39:59   3  ORDER BY pair,trend,gatt,gattn
23:39:59   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003108392	    4367    -.09356083
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003572586	    3935    -.16609745
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.07
23:39:59 SQL> 
23:39:59 SQL> -- rpt
23:39:59 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-16 23:30:00

Elapsed: 00:00:00.02
23:39:59 SQL> 
23:39:59 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
23:39:59 SQL> CREATE TABLE modsrc COMPRESS AS
23:39:59   2  SELECT
23:39:59   3  pair
23:39:59   4  ,ydate
23:39:59   5  ,prdate
23:39:59   6  ,trend
23:39:59   7  ,g4
23:39:59   8  ,gatt
23:39:59   9  ,gattn
23:39:59  10  ,dc12
23:39:59  11  FROM q15
23:39:59  12  /

Table created.

Elapsed: 00:00:00.20
23:39:59 SQL> 
23:39:59 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.29
23:39:59 SQL> 
23:39:59 SQL> -- rpt
23:39:59 SQL> 
23:39:59 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.35
23:40:00 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
23:40:00 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
23:40:00 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
23:40:00 SQL> 
23:40:00 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:40:00   2  GROUP BY pair,trend,gatt,gattn
23:40:00   3  ORDER BY pair,trend,gatt,gattn
23:40:00   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003108392	    4367    -.09356083
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003572586	    3935    -.16609745
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
23:40:00 SQL> 
23:40:00 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.06
23:40:00 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
23:40:00   2  SELECT
23:40:00   3  ydate
23:40:00   4  ,trend gbp_trend
23:40:00   5  ,g4    gbp_g4
23:40:00   6  ,gatt  gbp_gatt
23:40:00   7  ,gattn gbp_gattn
23:40:00   8  FROM modsrc
23:40:00   9  /

Table created.

Elapsed: 00:00:00.07
23:40:00 SQL> 
23:40:00 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
23:40:00 SQL> 
23:40:00 SQL> -- rpt
23:40:00 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 00:05:01 2010-12-16 23:30:00	 9693	  -.0194      .0179
	-1 2010-09-12 22:40:01 2010-12-16 07:30:00	10216	  -.0153      .0159

Elapsed: 00:00:00.02
23:40:00 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 00:05:01 2010-12-16 23:30:00	       9741	 -.0194       .0179
	-1 2010-09-12 22:40:01 2010-12-16 07:30:00	      10216	 -.0153       .0159

Elapsed: 00:00:00.01
23:40:00 SQL> 
23:40:00 SQL> -- I need a copy of q15 attributes
23:40:00 SQL> 
23:40:00 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.03
23:40:00 SQL> CREATE TABLE gbp_att COMPRESS AS
23:40:00   2  SELECT
23:40:00   3  ydate
23:40:00   4  ,att00 gbp_att00
23:40:00   5  ,att01 gbp_att01
23:40:00   6  ,att02 gbp_att02
23:40:00   7  ,att03 gbp_att03
23:40:00   8  ,att04 gbp_att04
23:40:00   9  ,att05 gbp_att05
23:40:00  10  ,att06 gbp_att06
23:40:00  11  ,att07 gbp_att07
23:40:00  12  ,att08 gbp_att08
23:40:00  13  ,att09 gbp_att09
23:40:00  14  ,att10 gbp_att10
23:40:00  15  ,att11 gbp_att11
23:40:00  16  ,att12 gbp_att12
23:40:00  17  ,att13 gbp_att13
23:40:00  18  ,att14 gbp_att14
23:40:00  19  ,att15 gbp_att15
23:40:00  20  ,att16 gbp_att16
23:40:00  21  ,att17 gbp_att17
23:40:00  22  ,att18 gbp_att18
23:40:00  23  ,att19 gbp_att19
23:40:00  24  ,att20 gbp_att20
23:40:00  25  ,att21 gbp_att21
23:40:00  26  ,att22 gbp_att22
23:40:00  27  ,att23 gbp_att23
23:40:00  28  ,att24 gbp_att24
23:40:00  29  ,att25 gbp_att25
23:40:00  30  ,att26 gbp_att26
23:40:00  31  ,att27 gbp_att27
23:40:00  32  ,att28 gbp_att28
23:40:00  33  ,att29 gbp_att29
23:40:00  34  ,att30 gbp_att30
23:40:00  35  ,att31 gbp_att31
23:40:00  36  ,att32 gbp_att32
23:40:00  37  FROM q15
23:40:00  38  /

Table created.

Elapsed: 00:00:00.13
23:40:00 SQL> 
23:40:00 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
23:40:01 SQL> 
23:40:01 SQL> -- rpt
23:40:01 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.00
23:40:01 SQL> 
23:40:01 SQL> --
23:40:01 SQL> -- jpy10.sql
23:40:01 SQL> --
23:40:01 SQL> 
23:40:01 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:40:01 SQL> 
23:40:01 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.33
23:40:01 SQL> 
23:40:01 SQL> -- I created di5min here:
23:40:01 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:40:01 SQL> 
23:40:01 SQL> CREATE OR REPLACE VIEW q11 AS
23:40:01   2  SELECT
23:40:01   3  pair
23:40:01   4  ,ydate
23:40:01   5  ,prdate
23:40:01   6  ,rownum rnum -- acts as t in my time-series
23:40:01   7  ,clse
23:40:01   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:40:01   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:40:01  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:40:01  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:40:01  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:40:01  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:40:01  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:40:01  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:40:01  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:40:01  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:40:01  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:40:01  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:40:01  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:40:01  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:40:01  22  FROM di5min WHERE pair LIKE'%jpy%'
23:40:01  23  ORDER BY ydate
23:40:01  24  /

View created.

Elapsed: 00:00:00.05
23:40:01 SQL> 
23:40:01 SQL> -- rpt
23:40:01 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20822

Elapsed: 00:00:00.35
23:40:01 SQL> 
23:40:01 SQL> -- Calc deltas and gains
23:40:01 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.18
23:40:02 SQL> 
23:40:02 SQL> CREATE TABLE q13 COMPRESS AS
23:40:02   2  SELECT
23:40:02   3  pair
23:40:02   4  ,ydate
23:40:02   5  ,prdate
23:40:02   6  ,rnum
23:40:02   7  ,lg4
23:40:02   8  ,lg8
23:40:02   9  ,lg12
23:40:02  10  ,ld4
23:40:02  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:40:02  12  -- step by 1
23:40:02  13  ,clse-lg1 d01
23:40:02  14  ,lg1-lg2	d12
23:40:02  15  ,lg2-lg3	d23
23:40:02  16  ,lg3-lg4	d34
23:40:02  17  ,lg4-lg5	d45
23:40:02  18  ,lg5-lg6	d56
23:40:02  19  ,lg6-lg7	d67
23:40:02  20  ,lg7-lg8	d78
23:40:02  21  ,lg8-lg9	d89
23:40:02  22  -- step by 2
23:40:02  23  ,clse-lg2 d02
23:40:02  24  ,lg2-lg4 d24
23:40:02  25  ,lg4-lg6 d46
23:40:02  26  ,lg6-lg8 d68
23:40:02  27  -- step by 3
23:40:02  28  ,clse-lg3 d03
23:40:02  29  ,lg3-lg6	d36
23:40:02  30  ,lg6-lg9	d69
23:40:02  31  ,lg9-lg12 d912
23:40:02  32  -- step by 4
23:40:02  33  ,clse-lg4 d04
23:40:02  34  ,lg4-lg8	d48
23:40:02  35  ,lg8-lg12 d812
23:40:02  36  ,lg6-lg12 d612
23:40:02  37  ,lg12-lg18 d1218
23:40:02  38  --
23:40:02  39  ,ABS(clse-lg1)dc1
23:40:02  40  ,ABS(clse-lg2)dc2
23:40:02  41  ,ABS(clse-lg3)dc3
23:40:02  42  ,ABS(clse-lg4)dc4
23:40:02  43  ,ABS(clse-lg5)dc5
23:40:02  44  ,ABS(clse-lg6)dc6
23:40:02  45  ,ABS(clse-lg7)dc7
23:40:02  46  ,ABS(clse-lg8)dc8
23:40:02  47  ,ABS(clse-lg9)dc9
23:40:02  48  ,ABS(clse-lg12)dc12
23:40:02  49  ,ABS(clse-lg18)dc18
23:40:02  50  ,ABS(clse-lg24)dc24
23:40:02  51  ,ABS(clse-lg72)dc72
23:40:02  52  ,(ld4-clse) ug4
23:40:02  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:40:02  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:40:02  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:40:02  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:40:02  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:40:02  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:40:02  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:40:02  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:40:02  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:40:02  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:40:02  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:40:02  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:40:02  65  ,0+TO_CHAR(ydate,'D')d
23:40:02  66  ,0+TO_CHAR(ydate,'W')w
23:40:02  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:40:02  68  FROM q11
23:40:02  69  -- I dont want any NULL values from the LAG() functions:
23:40:02  70  WHERE lg72 > 0
23:40:02  71  ORDER BY pair,ydate
23:40:02  72  /

Table created.

Elapsed: 00:00:01.71
23:40:03 SQL> 
23:40:03 SQL> -- rpt
23:40:03 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9248
	-1	   10710

Elapsed: 00:00:00.06
23:40:03 SQL> 
23:40:03 SQL> -- Calc gains and ntiles
23:40:03 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.22
23:40:04 SQL> CREATE TABLE q15 COMPRESS AS
23:40:04   2  SELECT
23:40:04   3  pair
23:40:04   4  ,ydate
23:40:04   5  ,prdate -- Should be unique
23:40:04   6  ,trend -- +1 or -1
23:40:04   7  ,dc12 -- next statement needs this
23:40:04   8  -- Use NTILE() to derive some attributes
23:40:04   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:40:04  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:40:04  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:40:04  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:40:04  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:40:04  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:40:04  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:40:04  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:40:04  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:40:04  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:40:04  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:40:04  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:40:04  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:40:04  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:40:04  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:40:04  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:40:04  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:40:04  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:40:04  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:40:04  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:40:04  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:40:04  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:40:04  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:40:04  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:40:04  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:40:04  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:40:04  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:40:04  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:40:04  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:40:04  38  ,hh    att28
23:40:04  39  ,d     att29
23:40:04  40  ,w     att30
23:40:04  41  ,mpm   att31
23:40:04  42  ,trend att32
23:40:04  43  ,ug4 g4
23:40:04  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:40:04  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:40:04  46  FROM q13
23:40:04  47  ORDER BY pair,ydate
23:40:04  48  /

Table created.

Elapsed: 00:00:04.10
23:40:08 SQL> 
23:40:08 SQL> -- rpt
23:40:08 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:40:08   2  GROUP BY pair,trend,gatt,gattn
23:40:08   3  ORDER BY pair,trend,gatt,gattn
23:40:08   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13713825	    5197    .023356961
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13437525	    4994    -.01428711
usd_jpy 	 1 up  nup .152379407	    4084    .184257426
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
23:40:08 SQL> 
23:40:08 SQL> -- rpt
23:40:08 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-16 23:30:00

Elapsed: 00:00:00.01
23:40:08 SQL> 
23:40:08 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.14
23:40:08 SQL> CREATE TABLE modsrc COMPRESS AS
23:40:08   2  SELECT
23:40:08   3  pair
23:40:08   4  ,ydate
23:40:08   5  ,prdate
23:40:08   6  ,trend
23:40:08   7  ,g4
23:40:08   8  ,gatt
23:40:08   9  ,gattn
23:40:08  10  ,dc12
23:40:08  11  FROM q15
23:40:08  12  /

Table created.

Elapsed: 00:00:00.10
23:40:08 SQL> 
23:40:08 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.27
23:40:08 SQL> 
23:40:08 SQL> -- rpt
23:40:08 SQL> 
23:40:08 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.36
23:40:09 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
23:40:09 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
23:40:09 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
23:40:09 SQL> 
23:40:09 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:40:09   2  GROUP BY pair,trend,gatt,gattn
23:40:09   3  ORDER BY pair,trend,gatt,gattn
23:40:09   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13713825	    5197    .023356961
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13437525	    4994    -.01428711
usd_jpy 	 1 up  nup .152379407	    4084    .184257426
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
23:40:09 SQL> 
23:40:09 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
23:40:09 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
23:40:09   2  SELECT
23:40:09   3  ydate
23:40:09   4  ,trend jpy_trend
23:40:09   5  ,g4    jpy_g4
23:40:09   6  ,gatt  jpy_gatt
23:40:09   7  ,gattn jpy_gattn
23:40:09   8  FROM modsrc
23:40:09   9  /

Table created.

Elapsed: 00:00:00.09
23:40:09 SQL> 
23:40:09 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
23:40:09 SQL> 
23:40:09 SQL> -- rpt
23:40:09 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:40:01 2010-12-16 23:25:00	 9245	   -1.07	1.5
	-1 2010-09-12 23:35:01 2010-12-16 23:30:00	10665	 -1.0775       1.99

Elapsed: 00:00:00.02
23:40:09 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:40:01 2010-12-16 23:25:00	       9248	  -1.07 	1.5
	-1 2010-09-12 23:35:01 2010-12-16 23:30:00	      10710	-1.0775        1.99

Elapsed: 00:00:00.01
23:40:09 SQL> 
23:40:09 SQL> -- I need a copy of q15 attributes
23:40:09 SQL> 
23:40:09 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.04
23:40:09 SQL> CREATE TABLE jpy_att COMPRESS AS
23:40:09   2  SELECT
23:40:09   3  ydate
23:40:09   4  ,att00 jpy_att00
23:40:09   5  ,att01 jpy_att01
23:40:09   6  ,att02 jpy_att02
23:40:09   7  ,att03 jpy_att03
23:40:09   8  ,att04 jpy_att04
23:40:09   9  ,att05 jpy_att05
23:40:09  10  ,att06 jpy_att06
23:40:09  11  ,att07 jpy_att07
23:40:09  12  ,att08 jpy_att08
23:40:09  13  ,att09 jpy_att09
23:40:09  14  ,att10 jpy_att10
23:40:09  15  ,att11 jpy_att11
23:40:09  16  ,att12 jpy_att12
23:40:09  17  ,att13 jpy_att13
23:40:09  18  ,att14 jpy_att14
23:40:09  19  ,att15 jpy_att15
23:40:09  20  ,att16 jpy_att16
23:40:09  21  ,att17 jpy_att17
23:40:09  22  ,att18 jpy_att18
23:40:09  23  ,att19 jpy_att19
23:40:09  24  ,att20 jpy_att20
23:40:09  25  ,att21 jpy_att21
23:40:09  26  ,att22 jpy_att22
23:40:09  27  ,att23 jpy_att23
23:40:09  28  ,att24 jpy_att24
23:40:09  29  ,att25 jpy_att25
23:40:09  30  ,att26 jpy_att26
23:40:09  31  ,att27 jpy_att27
23:40:09  32  ,att28 jpy_att28
23:40:09  33  ,att29 jpy_att29
23:40:09  34  ,att30 jpy_att30
23:40:09  35  ,att31 jpy_att31
23:40:09  36  ,att32 jpy_att32
23:40:09  37  FROM q15
23:40:09  38  /

Table created.

Elapsed: 00:00:00.16
23:40:09 SQL> 
23:40:09 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
23:40:10 SQL> 
23:40:10 SQL> -- rpt
23:40:10 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.01
23:40:10 SQL> 
23:40:10 SQL> --
23:40:10 SQL> -- cad10.sql
23:40:10 SQL> --
23:40:10 SQL> 
23:40:10 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:40:10 SQL> 
23:40:10 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.46
23:40:10 SQL> 
23:40:10 SQL> -- I created di5min here:
23:40:10 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:40:10 SQL> 
23:40:10 SQL> CREATE OR REPLACE VIEW q11 AS
23:40:10   2  SELECT
23:40:10   3  pair
23:40:10   4  ,ydate
23:40:10   5  ,prdate
23:40:10   6  ,rownum rnum -- acts as t in my time-series
23:40:10   7  ,clse
23:40:10   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:40:10   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:40:10  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:40:10  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:40:10  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:40:10  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:40:10  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:40:10  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:40:10  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:40:10  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:40:10  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:40:10  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:40:10  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:40:10  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:40:10  22  FROM di5min WHERE pair LIKE'%cad%'
23:40:10  23  ORDER BY ydate
23:40:10  24  /

View created.

Elapsed: 00:00:00.08
23:40:10 SQL> 
23:40:10 SQL> -- rpt
23:40:10 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20818

Elapsed: 00:00:00.35
23:40:10 SQL> 
23:40:10 SQL> -- Calc deltas and gains
23:40:10 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
23:40:11 SQL> 
23:40:11 SQL> CREATE TABLE q13 COMPRESS AS
23:40:11   2  SELECT
23:40:11   3  pair
23:40:11   4  ,ydate
23:40:11   5  ,prdate
23:40:11   6  ,rnum
23:40:11   7  ,lg4
23:40:11   8  ,lg8
23:40:11   9  ,lg12
23:40:11  10  ,ld4
23:40:11  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:40:11  12  -- step by 1
23:40:11  13  ,clse-lg1 d01
23:40:11  14  ,lg1-lg2	d12
23:40:11  15  ,lg2-lg3	d23
23:40:11  16  ,lg3-lg4	d34
23:40:11  17  ,lg4-lg5	d45
23:40:11  18  ,lg5-lg6	d56
23:40:11  19  ,lg6-lg7	d67
23:40:11  20  ,lg7-lg8	d78
23:40:11  21  ,lg8-lg9	d89
23:40:11  22  -- step by 2
23:40:11  23  ,clse-lg2 d02
23:40:11  24  ,lg2-lg4 d24
23:40:11  25  ,lg4-lg6 d46
23:40:11  26  ,lg6-lg8 d68
23:40:11  27  -- step by 3
23:40:11  28  ,clse-lg3 d03
23:40:11  29  ,lg3-lg6	d36
23:40:11  30  ,lg6-lg9	d69
23:40:11  31  ,lg9-lg12 d912
23:40:11  32  -- step by 4
23:40:11  33  ,clse-lg4 d04
23:40:11  34  ,lg4-lg8	d48
23:40:11  35  ,lg8-lg12 d812
23:40:11  36  ,lg6-lg12 d612
23:40:11  37  ,lg12-lg18 d1218
23:40:11  38  --
23:40:11  39  ,ABS(clse-lg1)dc1
23:40:11  40  ,ABS(clse-lg2)dc2
23:40:11  41  ,ABS(clse-lg3)dc3
23:40:11  42  ,ABS(clse-lg4)dc4
23:40:11  43  ,ABS(clse-lg5)dc5
23:40:11  44  ,ABS(clse-lg6)dc6
23:40:11  45  ,ABS(clse-lg7)dc7
23:40:11  46  ,ABS(clse-lg8)dc8
23:40:11  47  ,ABS(clse-lg9)dc9
23:40:11  48  ,ABS(clse-lg12)dc12
23:40:11  49  ,ABS(clse-lg18)dc18
23:40:11  50  ,ABS(clse-lg24)dc24
23:40:11  51  ,ABS(clse-lg72)dc72
23:40:11  52  ,(ld4-clse) ug4
23:40:11  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:40:11  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:40:11  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:40:11  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:40:11  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:40:11  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:40:11  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:40:11  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:40:11  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:40:11  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:40:11  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:40:11  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:40:11  65  ,0+TO_CHAR(ydate,'D')d
23:40:11  66  ,0+TO_CHAR(ydate,'W')w
23:40:11  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:40:11  68  FROM q11
23:40:11  69  -- I dont want any NULL values from the LAG() functions:
23:40:11  70  WHERE lg72 > 0
23:40:11  71  ORDER BY pair,ydate
23:40:11  72  /

Table created.

Elapsed: 00:00:01.71
23:40:12 SQL> 
23:40:12 SQL> -- rpt
23:40:12 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9004
	-1	   10950

Elapsed: 00:00:00.04
23:40:12 SQL> 
23:40:12 SQL> -- Calc gains and ntiles
23:40:12 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.12
23:40:12 SQL> CREATE TABLE q15 COMPRESS AS
23:40:12   2  SELECT
23:40:12   3  pair
23:40:12   4  ,ydate
23:40:12   5  ,prdate -- Should be unique
23:40:12   6  ,trend -- +1 or -1
23:40:12   7  ,dc12 -- next statement needs this
23:40:12   8  -- Use NTILE() to derive some attributes
23:40:12   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:40:12  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:40:12  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:40:12  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:40:12  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:40:12  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:40:12  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:40:12  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:40:12  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:40:12  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:40:12  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:40:12  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:40:12  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:40:12  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:40:12  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:40:12  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:40:12  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:40:12  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:40:12  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:40:12  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:40:12  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:40:12  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:40:12  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:40:12  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:40:12  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:40:12  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:40:12  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:40:12  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:40:12  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:40:12  38  ,hh    att28
23:40:12  39  ,d     att29
23:40:12  40  ,w     att30
23:40:12  41  ,mpm   att31
23:40:12  42  ,trend att32
23:40:12  43  ,ug4 g4
23:40:12  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:40:12  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:40:12  46  FROM q13
23:40:12  47  ORDER BY pair,ydate
23:40:12  48  /

Table created.

Elapsed: 00:00:04.09
23:40:17 SQL> 
23:40:17 SQL> -- rpt
23:40:17 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:40:17   2  GROUP BY pair,trend,gatt,gattn
23:40:17   3  ORDER BY pair,trend,gatt,gattn
23:40:17   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	-1			       0
usd_cad 	 1 nup nup -.00001553	    2089    -.06571403
usd_cad 	 1 nup up  -.00237551	    3820    .004860641
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
23:40:17 SQL> 
23:40:17 SQL> -- rpt
23:40:17 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-16 23:30:00

Elapsed: 00:00:00.01
23:40:17 SQL> 
23:40:17 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.11
23:40:17 SQL> CREATE TABLE modsrc COMPRESS AS
23:40:17   2  SELECT
23:40:17   3  pair
23:40:17   4  ,ydate
23:40:17   5  ,prdate
23:40:17   6  ,trend
23:40:17   7  ,g4
23:40:17   8  ,gatt
23:40:17   9  ,gattn
23:40:17  10  ,dc12
23:40:17  11  FROM q15
23:40:17  12  /

Table created.

Elapsed: 00:00:00.14
23:40:17 SQL> 
23:40:17 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
23:40:17 SQL> 
23:40:17 SQL> -- rpt
23:40:17 SQL> 
23:40:17 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20818

Elapsed: 00:00:00.35
23:40:17 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.00
23:40:17 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.01
23:40:17 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.00
23:40:17 SQL> 
23:40:17 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:40:17   2  GROUP BY pair,trend,gatt,gattn
23:40:17   3  ORDER BY pair,trend,gatt,gattn
23:40:17   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	-1			       0
usd_cad 	 1 nup nup -.00001553	    2089    -.06571403
usd_cad 	 1 nup up  -.00237551	    3820    .004860641
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
23:40:17 SQL> 
23:40:17 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
23:40:18 SQL> CREATE TABLE cad_ms10 COMPRESS AS
23:40:18   2  SELECT
23:40:18   3  ydate
23:40:18   4  ,trend cad_trend
23:40:18   5  ,g4    cad_g4
23:40:18   6  ,gatt  cad_gatt
23:40:18   7  ,gattn cad_gattn
23:40:18   8  FROM modsrc
23:40:18   9  /

Table created.

Elapsed: 00:00:00.07
23:40:18 SQL> 
23:40:18 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
23:40:18 SQL> 
23:40:18 SQL> -- rpt
23:40:18 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:40:01 2010-12-16 23:30:00	 8969	  -.0089      .0151
	-1 2010-09-12 23:30:01 2010-12-16 23:25:00	10937	  -.0107      .0147

Elapsed: 00:00:00.02
23:40:18 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:40:01 2010-12-16 23:30:00	       9004	 -.0089       .0151
	-1 2010-09-12 23:30:01 2010-12-16 23:25:00	      10950	 -.0107       .0147

Elapsed: 00:00:00.02
23:40:18 SQL> 
23:40:18 SQL> -- I need a copy of q15 attributes
23:40:18 SQL> 
23:40:18 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.03
23:40:18 SQL> CREATE TABLE cad_att COMPRESS AS
23:40:18   2  SELECT
23:40:18   3  ydate
23:40:18   4  ,att00 cad_att00
23:40:18   5  ,att01 cad_att01
23:40:18   6  ,att02 cad_att02
23:40:18   7  ,att03 cad_att03
23:40:18   8  ,att04 cad_att04
23:40:18   9  ,att05 cad_att05
23:40:18  10  ,att06 cad_att06
23:40:18  11  ,att07 cad_att07
23:40:18  12  ,att08 cad_att08
23:40:18  13  ,att09 cad_att09
23:40:18  14  ,att10 cad_att10
23:40:18  15  ,att11 cad_att11
23:40:18  16  ,att12 cad_att12
23:40:18  17  ,att13 cad_att13
23:40:18  18  ,att14 cad_att14
23:40:18  19  ,att15 cad_att15
23:40:18  20  ,att16 cad_att16
23:40:18  21  ,att17 cad_att17
23:40:18  22  ,att18 cad_att18
23:40:18  23  ,att19 cad_att19
23:40:18  24  ,att20 cad_att20
23:40:18  25  ,att21 cad_att21
23:40:18  26  ,att22 cad_att22
23:40:18  27  ,att23 cad_att23
23:40:18  28  ,att24 cad_att24
23:40:18  29  ,att25 cad_att25
23:40:18  30  ,att26 cad_att26
23:40:18  31  ,att27 cad_att27
23:40:18  32  ,att28 cad_att28
23:40:18  33  ,att29 cad_att29
23:40:18  34  ,att30 cad_att30
23:40:18  35  ,att31 cad_att31
23:40:18  36  ,att32 cad_att32
23:40:18  37  FROM q15
23:40:18  38  /

Table created.

Elapsed: 00:00:00.15
23:40:18 SQL> 
23:40:18 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.41
23:40:18 SQL> 
23:40:18 SQL> -- rpt
23:40:18 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19954

Elapsed: 00:00:00.00
23:40:18 SQL> 
23:40:18 SQL> --
23:40:18 SQL> -- chf10.sql
23:40:18 SQL> --
23:40:18 SQL> 
23:40:18 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:40:18 SQL> 
23:40:18 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
23:40:19 SQL> 
23:40:19 SQL> -- I created di5min here:
23:40:19 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:40:19 SQL> 
23:40:19 SQL> CREATE OR REPLACE VIEW q11 AS
23:40:19   2  SELECT
23:40:19   3  pair
23:40:19   4  ,ydate
23:40:19   5  ,prdate
23:40:19   6  ,rownum rnum -- acts as t in my time-series
23:40:19   7  ,clse
23:40:19   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:40:19   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:40:19  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:40:19  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:40:19  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:40:19  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:40:19  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:40:19  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:40:19  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:40:19  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:40:19  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:40:19  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:40:19  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:40:19  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:40:19  22  FROM di5min WHERE pair LIKE'%chf%'
23:40:19  23  ORDER BY ydate
23:40:19  24  /

View created.

Elapsed: 00:00:00.04
23:40:19 SQL> 
23:40:19 SQL> -- rpt
23:40:19 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20821

Elapsed: 00:00:00.37
23:40:19 SQL> 
23:40:19 SQL> -- Calc deltas and gains
23:40:19 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.19
23:40:19 SQL> 
23:40:19 SQL> CREATE TABLE q13 COMPRESS AS
23:40:19   2  SELECT
23:40:19   3  pair
23:40:19   4  ,ydate
23:40:19   5  ,prdate
23:40:19   6  ,rnum
23:40:19   7  ,lg4
23:40:19   8  ,lg8
23:40:19   9  ,lg12
23:40:19  10  ,ld4
23:40:19  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:40:19  12  -- step by 1
23:40:19  13  ,clse-lg1 d01
23:40:19  14  ,lg1-lg2	d12
23:40:19  15  ,lg2-lg3	d23
23:40:19  16  ,lg3-lg4	d34
23:40:19  17  ,lg4-lg5	d45
23:40:19  18  ,lg5-lg6	d56
23:40:19  19  ,lg6-lg7	d67
23:40:19  20  ,lg7-lg8	d78
23:40:19  21  ,lg8-lg9	d89
23:40:19  22  -- step by 2
23:40:19  23  ,clse-lg2 d02
23:40:19  24  ,lg2-lg4 d24
23:40:19  25  ,lg4-lg6 d46
23:40:19  26  ,lg6-lg8 d68
23:40:19  27  -- step by 3
23:40:19  28  ,clse-lg3 d03
23:40:19  29  ,lg3-lg6	d36
23:40:19  30  ,lg6-lg9	d69
23:40:19  31  ,lg9-lg12 d912
23:40:19  32  -- step by 4
23:40:19  33  ,clse-lg4 d04
23:40:19  34  ,lg4-lg8	d48
23:40:19  35  ,lg8-lg12 d812
23:40:19  36  ,lg6-lg12 d612
23:40:19  37  ,lg12-lg18 d1218
23:40:19  38  --
23:40:19  39  ,ABS(clse-lg1)dc1
23:40:19  40  ,ABS(clse-lg2)dc2
23:40:19  41  ,ABS(clse-lg3)dc3
23:40:19  42  ,ABS(clse-lg4)dc4
23:40:19  43  ,ABS(clse-lg5)dc5
23:40:19  44  ,ABS(clse-lg6)dc6
23:40:19  45  ,ABS(clse-lg7)dc7
23:40:19  46  ,ABS(clse-lg8)dc8
23:40:19  47  ,ABS(clse-lg9)dc9
23:40:19  48  ,ABS(clse-lg12)dc12
23:40:19  49  ,ABS(clse-lg18)dc18
23:40:19  50  ,ABS(clse-lg24)dc24
23:40:19  51  ,ABS(clse-lg72)dc72
23:40:19  52  ,(ld4-clse) ug4
23:40:19  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:40:19  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:40:19  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:40:19  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:40:19  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:40:19  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:40:19  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:40:19  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:40:19  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:40:19  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:40:19  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:40:19  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:40:19  65  ,0+TO_CHAR(ydate,'D')d
23:40:19  66  ,0+TO_CHAR(ydate,'W')w
23:40:19  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:40:19  68  FROM q11
23:40:19  69  -- I dont want any NULL values from the LAG() functions:
23:40:19  70  WHERE lg72 > 0
23:40:19  71  ORDER BY pair,ydate
23:40:19  72  /

Table created.

Elapsed: 00:00:01.74
23:40:21 SQL> 
23:40:21 SQL> -- rpt
23:40:21 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9320
	-1	   10637

Elapsed: 00:00:00.07
23:40:21 SQL> 
23:40:21 SQL> -- Calc gains and ntiles
23:40:21 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.19
23:40:21 SQL> CREATE TABLE q15 COMPRESS AS
23:40:21   2  SELECT
23:40:21   3  pair
23:40:21   4  ,ydate
23:40:21   5  ,prdate -- Should be unique
23:40:21   6  ,trend -- +1 or -1
23:40:21   7  ,dc12 -- next statement needs this
23:40:21   8  -- Use NTILE() to derive some attributes
23:40:21   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:40:21  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:40:21  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:40:21  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:40:21  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:40:21  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:40:21  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:40:21  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:40:21  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:40:21  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:40:21  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:40:21  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:40:21  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:40:21  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:40:21  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:40:21  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:40:21  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:40:21  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:40:21  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:40:21  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:40:21  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:40:21  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:40:21  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:40:21  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:40:21  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:40:21  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:40:21  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:40:21  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:40:21  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:40:21  38  ,hh    att28
23:40:21  39  ,d     att29
23:40:21  40  ,w     att30
23:40:21  41  ,mpm   att31
23:40:21  42  ,trend att32
23:40:21  43  ,ug4 g4
23:40:21  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:40:21  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:40:21  46  FROM q13
23:40:21  47  ORDER BY pair,ydate
23:40:21  48  /

Table created.

Elapsed: 00:00:04.14
23:40:26 SQL> 
23:40:26 SQL> -- rpt
23:40:26 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:40:26   2  GROUP BY pair,trend,gatt,gattn
23:40:26   3  ORDER BY pair,trend,gatt,gattn
23:40:26   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032146	    2645    .042491123
usd_chf 	-1 nup up  -.00292171	    3896    .059519309
usd_chf 	-1 up  nup .002646511	    4048    -.12069668
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00254098	    3862    .111937469
usd_chf 	 1 up  nup .002433841	    3232     -.1606913

7 rows selected.

Elapsed: 00:00:00.04
23:40:26 SQL> 
23:40:26 SQL> -- rpt
23:40:26 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-16 23:30:00

Elapsed: 00:00:00.02
23:40:26 SQL> 
23:40:26 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
23:40:26 SQL> CREATE TABLE modsrc COMPRESS AS
23:40:26   2  SELECT
23:40:26   3  pair
23:40:26   4  ,ydate
23:40:26   5  ,prdate
23:40:26   6  ,trend
23:40:26   7  ,g4
23:40:26   8  ,gatt
23:40:26   9  ,gattn
23:40:26  10  ,dc12
23:40:26  11  FROM q15
23:40:26  12  /

Table created.

Elapsed: 00:00:00.09
23:40:26 SQL> 
23:40:26 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
23:40:26 SQL> 
23:40:26 SQL> -- rpt
23:40:26 SQL> 
23:40:26 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.36
23:40:26 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
23:40:26 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
23:40:26 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
23:40:26 SQL> 
23:40:26 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:40:26   2  GROUP BY pair,trend,gatt,gattn
23:40:26   3  ORDER BY pair,trend,gatt,gattn
23:40:26   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032146	    2645    .042491123
usd_chf 	-1 nup up  -.00292171	    3896    .059519309
usd_chf 	-1 up  nup .002646511	    4048    -.12069668
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00254098	    3862    .111937469
usd_chf 	 1 up  nup .002433841	    3232     -.1606913

7 rows selected.

Elapsed: 00:00:00.04
23:40:26 SQL> 
23:40:26 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
23:40:26 SQL> CREATE TABLE chf_ms10 COMPRESS AS
23:40:26   2  SELECT
23:40:26   3  ydate
23:40:26   4  ,trend chf_trend
23:40:26   5  ,g4    chf_g4
23:40:26   6  ,gatt  chf_gatt
23:40:26   7  ,gattn chf_gattn
23:40:26   8  FROM modsrc
23:40:26   9  /

Table created.

Elapsed: 00:00:00.07
23:40:27 SQL> 
23:40:27 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
23:40:27 SQL> 
23:40:27 SQL> -- rpt
23:40:27 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	 9320	  -.0176     .01365
	-1 2010-09-12 22:40:01 2010-12-16 23:30:00	10589	  -.0166      .0149

Elapsed: 00:00:00.02
23:40:27 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	       9320	 -.0176      .01365
	-1 2010-09-12 22:40:01 2010-12-16 23:30:00	      10637	 -.0166       .0149

Elapsed: 00:00:00.02
23:40:27 SQL> 
23:40:27 SQL> -- I need a copy of q15 attributes
23:40:27 SQL> 
23:40:27 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.03
23:40:27 SQL> CREATE TABLE chf_att COMPRESS AS
23:40:27   2  SELECT
23:40:27   3  ydate
23:40:27   4  ,att00 chf_att00
23:40:27   5  ,att01 chf_att01
23:40:27   6  ,att02 chf_att02
23:40:27   7  ,att03 chf_att03
23:40:27   8  ,att04 chf_att04
23:40:27   9  ,att05 chf_att05
23:40:27  10  ,att06 chf_att06
23:40:27  11  ,att07 chf_att07
23:40:27  12  ,att08 chf_att08
23:40:27  13  ,att09 chf_att09
23:40:27  14  ,att10 chf_att10
23:40:27  15  ,att11 chf_att11
23:40:27  16  ,att12 chf_att12
23:40:27  17  ,att13 chf_att13
23:40:27  18  ,att14 chf_att14
23:40:27  19  ,att15 chf_att15
23:40:27  20  ,att16 chf_att16
23:40:27  21  ,att17 chf_att17
23:40:27  22  ,att18 chf_att18
23:40:27  23  ,att19 chf_att19
23:40:27  24  ,att20 chf_att20
23:40:27  25  ,att21 chf_att21
23:40:27  26  ,att22 chf_att22
23:40:27  27  ,att23 chf_att23
23:40:27  28  ,att24 chf_att24
23:40:27  29  ,att25 chf_att25
23:40:27  30  ,att26 chf_att26
23:40:27  31  ,att27 chf_att27
23:40:27  32  ,att28 chf_att28
23:40:27  33  ,att29 chf_att29
23:40:27  34  ,att30 chf_att30
23:40:27  35  ,att31 chf_att31
23:40:27  36  ,att32 chf_att32
23:40:27  37  FROM q15
23:40:27  38  /

Table created.

Elapsed: 00:00:00.15
23:40:27 SQL> 
23:40:27 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
23:40:27 SQL> 
23:40:27 SQL> -- rpt
23:40:27 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.00
23:40:27 SQL> 
23:40:27 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
