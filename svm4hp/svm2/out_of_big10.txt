
SQL*Plus: Release 11.2.0.1.0 Production on Wed Dec 15 01:29:07 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

01:29:07 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
01:29:07 SQL> 01:29:07 SQL> --
01:29:07 SQL> -- eur10.sql
01:29:07 SQL> --
01:29:07 SQL> 
01:29:07 SQL> -- Creates views and tables for backtesting a forex SVM strategy
01:29:07 SQL> 
01:29:07 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.11
01:29:07 SQL> 
01:29:07 SQL> -- I created ibfu_t here:
01:29:07 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
01:29:07 SQL> 
01:29:07 SQL> CREATE OR REPLACE VIEW q11 AS
01:29:07   2  SELECT
01:29:07   3  pair
01:29:07   4  ,ydate
01:29:07   5  ,prdate
01:29:07   6  ,rownum rnum -- acts as t in my time-series
01:29:07   7  ,clse
01:29:07   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
01:29:07   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
01:29:07  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
01:29:07  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
01:29:07  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
01:29:07  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
01:29:07  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
01:29:07  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
01:29:07  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
01:29:07  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
01:29:07  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
01:29:07  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
01:29:07  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
01:29:07  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
01:29:07  22  FROM ibfu_t WHERE pair LIKE'%eur%'
01:29:07  23  ORDER BY ydate
01:29:07  24  /

View created.

Elapsed: 00:00:00.12
01:29:07 SQL> 
01:29:07 SQL> -- rpt
01:29:07 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd 	3792

Elapsed: 00:00:00.17
01:29:07 SQL> 
01:29:07 SQL> -- Calc deltas and gains
01:29:07 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.09
01:29:07 SQL> 
01:29:07 SQL> CREATE TABLE q13 COMPRESS AS
01:29:07   2  SELECT
01:29:07   3  pair
01:29:07   4  ,ydate
01:29:07   5  ,prdate
01:29:07   6  ,rnum
01:29:07   7  ,lg4
01:29:07   8  ,lg8
01:29:07   9  ,lg12
01:29:07  10  ,ld4
01:29:07  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
01:29:07  12  -- step by 1
01:29:07  13  ,clse-lg1 d01
01:29:07  14  ,lg1-lg2	d12
01:29:07  15  ,lg2-lg3	d23
01:29:07  16  ,lg3-lg4	d34
01:29:07  17  ,lg4-lg5	d45
01:29:07  18  ,lg5-lg6	d56
01:29:07  19  ,lg6-lg7	d67
01:29:07  20  ,lg7-lg8	d78
01:29:07  21  ,lg8-lg9	d89
01:29:07  22  -- step by 2
01:29:07  23  ,clse-lg2 d02
01:29:07  24  ,lg2-lg4 d24
01:29:07  25  ,lg4-lg6 d46
01:29:07  26  ,lg6-lg8 d68
01:29:07  27  -- step by 3
01:29:07  28  ,clse-lg3 d03
01:29:07  29  ,lg3-lg6	d36
01:29:07  30  ,lg6-lg9	d69
01:29:07  31  ,lg9-lg12 d912
01:29:07  32  -- step by 4
01:29:07  33  ,clse-lg4 d04
01:29:07  34  ,lg4-lg8	d48
01:29:07  35  ,lg8-lg12 d812
01:29:07  36  ,lg6-lg12 d612
01:29:07  37  ,lg12-lg18 d1218
01:29:07  38  --
01:29:07  39  ,ABS(clse-lg1)dc1
01:29:07  40  ,ABS(clse-lg2)dc2
01:29:07  41  ,ABS(clse-lg3)dc3
01:29:07  42  ,ABS(clse-lg4)dc4
01:29:07  43  ,ABS(clse-lg5)dc5
01:29:07  44  ,ABS(clse-lg6)dc6
01:29:07  45  ,ABS(clse-lg7)dc7
01:29:07  46  ,ABS(clse-lg8)dc8
01:29:07  47  ,ABS(clse-lg9)dc9
01:29:07  48  ,ABS(clse-lg12)dc12
01:29:07  49  ,ABS(clse-lg18)dc18
01:29:07  50  ,ABS(clse-lg24)dc24
01:29:07  51  ,ABS(clse-lg72)dc72
01:29:07  52  ,(ld4-clse) ug4
01:29:07  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
01:29:07  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
01:29:07  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
01:29:07  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
01:29:07  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
01:29:07  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
01:29:07  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
01:29:07  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
01:29:07  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
01:29:07  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
01:29:07  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
01:29:07  64  ,0+TO_CHAR(ydate,'HH24')hh
01:29:07  65  ,0+TO_CHAR(ydate,'D')d
01:29:07  66  ,0+TO_CHAR(ydate,'W')w
01:29:07  67  FROM q11
01:29:07  68  ORDER BY pair,ydate
01:29:07  69  /

Table created.

Elapsed: 00:00:00.74
01:29:08 SQL> 
01:29:08 SQL> -- rpt
01:29:08 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1929
	-1	    1863

Elapsed: 00:00:00.09
01:29:08 SQL> 
01:29:08 SQL> -- Calc gains and ntiles
01:29:08 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.09
01:29:08 SQL> CREATE TABLE q15 COMPRESS AS
01:29:08   2  SELECT
01:29:08   3  pair
01:29:08   4  ,ydate
01:29:08   5  ,prdate -- Should be unique
01:29:08   6  ,trend -- +1 or -1
01:29:08   7  ,dc12 -- next statement needs this
01:29:08   8  -- Use NTILE() to derive some attributes
01:29:08   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
01:29:08  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
01:29:08  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
01:29:08  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
01:29:08  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
01:29:08  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
01:29:08  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
01:29:08  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
01:29:08  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
01:29:08  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
01:29:08  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
01:29:08  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
01:29:08  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
01:29:08  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
01:29:08  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
01:29:08  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
01:29:08  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
01:29:08  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
01:29:08  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
01:29:08  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
01:29:08  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
01:29:08  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
01:29:08  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
01:29:08  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
01:29:08  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
01:29:08  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
01:29:08  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
01:29:08  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
01:29:08  37  -- date related integers: hour of day, day of week, week of month:
01:29:08  38  ,hh    att28
01:29:08  39  ,d     att29
01:29:08  40  ,w     att30
01:29:08  41  ,trend att31
01:29:08  42  ,ug4 g4
01:29:08  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
01:29:08  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
01:29:08  45  FROM q13
01:29:08  46  ORDER BY pair,ydate
01:29:08  47  /

Table created.

Elapsed: 00:00:00.96
01:29:09 SQL> 
01:29:09 SQL> -- rpt
01:29:09 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
01:29:09   2  GROUP BY pair,trend,gatt,gattn
01:29:09   3  ORDER BY pair,trend,gatt,gattn
01:29:09   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00004014	     295    .048269751
eur_usd 	-1 nup up  -.00348792	     755    -.02175909
eur_usd 	-1 up  nup .003626545	     809    -.09547087
eur_usd 	-1			       0
eur_usd 	 1 nup nup 4.2437E-06	     357    .068853821
eur_usd 	 1 nup up   -.0032753	     827    -.02133736
eur_usd 	 1 up  nup .003599664	     745    -.01955522

7 rows selected.

Elapsed: 00:00:00.05
01:29:09 SQL> 
01:29:09 SQL> -- rpt
01:29:09 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-15 00:00:00

Elapsed: 00:00:00.00
01:29:09 SQL> 
01:29:09 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.05
01:29:09 SQL> CREATE TABLE modsrc COMPRESS AS
01:29:09   2  SELECT
01:29:09   3  pair
01:29:09   4  ,ydate
01:29:09   5  ,prdate
01:29:09   6  ,trend
01:29:09   7  ,g4
01:29:09   8  ,gatt
01:29:09   9  ,gattn
01:29:09  10  ,dc12
01:29:09  11  FROM q15
01:29:09  12  /

Table created.

Elapsed: 00:00:00.04
01:29:10 SQL> 
01:29:10 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
01:29:10 SQL> 
01:29:10 SQL> -- rpt
01:29:10 SQL> 
01:29:10 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.14
01:29:10 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
01:29:10 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
01:29:10 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
01:29:10 SQL> 
01:29:10 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
01:29:10   2  GROUP BY pair,trend,gatt,gattn
01:29:10   3  ORDER BY pair,trend,gatt,gattn
01:29:10   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00004014	     295    .048269751
eur_usd 	-1 nup up  -.00348792	     755    -.02175909
eur_usd 	-1 up  nup .003626545	     809    -.09547087
eur_usd 	-1			       0
eur_usd 	 1 nup nup 4.2437E-06	     357    .068853821
eur_usd 	 1 nup up   -.0032753	     827    -.02133736
eur_usd 	 1 up  nup .003599664	     745    -.01955522

7 rows selected.

Elapsed: 00:00:00.00
01:29:10 SQL> 
01:29:10 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
01:29:10 SQL> CREATE TABLE eur_ms10 COMPRESS AS
01:29:10   2  SELECT
01:29:10   3  ydate
01:29:10   4  ,trend eur_trend
01:29:10   5  ,g4    eur_g4
01:29:10   6  ,gatt  eur_gatt
01:29:10   7  ,gattn	eur_gattn
01:29:10   8  FROM modsrc
01:29:10   9  /

Table created.

Elapsed: 00:00:00.04
01:29:10 SQL> 
01:29:10 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.07
01:29:10 SQL> 
01:29:10 SQL> -- rpt
01:29:10 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 08:00:00 2010-12-14 19:00:00	 1929	  -.0175      .0172
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	 1859	  -.0164      .0224

Elapsed: 00:00:00.00
01:29:10 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 08:00:00 2010-12-14 19:00:00	       1929	 -.0175       .0172
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	       1863	 -.0164       .0224

Elapsed: 00:00:00.03
01:29:10 SQL> 
01:29:10 SQL> -- I need a copy of q15 attributes
01:29:10 SQL> 
01:29:10 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.06
01:29:10 SQL> CREATE TABLE eur_att COMPRESS AS
01:29:10   2  SELECT
01:29:10   3  ydate
01:29:10   4  ,att00 eur_att00
01:29:10   5  ,att01 eur_att01
01:29:10   6  ,att02 eur_att02
01:29:10   7  ,att03 eur_att03
01:29:10   8  ,att04 eur_att04
01:29:10   9  ,att05 eur_att05
01:29:10  10  ,att06 eur_att06
01:29:10  11  ,att07 eur_att07
01:29:10  12  ,att08 eur_att08
01:29:10  13  ,att09 eur_att09
01:29:10  14  ,att10 eur_att10
01:29:10  15  ,att11 eur_att11
01:29:10  16  ,att12 eur_att12
01:29:10  17  ,att13 eur_att13
01:29:10  18  ,att14 eur_att14
01:29:10  19  ,att15 eur_att15
01:29:10  20  ,att16 eur_att16
01:29:10  21  ,att17 eur_att17
01:29:10  22  ,att18 eur_att18
01:29:10  23  ,att19 eur_att19
01:29:10  24  ,att20 eur_att20
01:29:10  25  ,att21 eur_att21
01:29:10  26  ,att22 eur_att22
01:29:10  27  ,att23 eur_att23
01:29:10  28  ,att24 eur_att24
01:29:10  29  ,att25 eur_att25
01:29:10  30  ,att26 eur_att26
01:29:10  31  ,att27 eur_att27
01:29:10  32  ,att28 eur_att28
01:29:10  33  ,att29 eur_att29
01:29:10  34  ,att30 eur_att30
01:29:10  35  ,att31 eur_att31
01:29:10  36  FROM q15
01:29:10  37  /

Table created.

Elapsed: 00:00:00.12
01:29:10 SQL> 
01:29:10 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
01:29:10 SQL> 
01:29:10 SQL> -- rpt
01:29:10 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.00
01:29:10 SQL> 
01:29:10 SQL> --
01:29:10 SQL> -- aud10.sql
01:29:10 SQL> --
01:29:10 SQL> 
01:29:10 SQL> -- Creates views and tables for backtesting a forex SVM strategy
01:29:10 SQL> 
01:29:10 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.50
01:29:11 SQL> 
01:29:11 SQL> -- I created ibfu_t here:
01:29:11 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
01:29:11 SQL> 
01:29:11 SQL> CREATE OR REPLACE VIEW q11 AS
01:29:11   2  SELECT
01:29:11   3  pair
01:29:11   4  ,ydate
01:29:11   5  ,prdate
01:29:11   6  ,rownum rnum -- acts as t in my time-series
01:29:11   7  ,clse
01:29:11   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
01:29:11   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
01:29:11  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
01:29:11  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
01:29:11  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
01:29:11  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
01:29:11  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
01:29:11  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
01:29:11  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
01:29:11  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
01:29:11  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
01:29:11  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
01:29:11  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
01:29:11  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
01:29:11  22  FROM ibfu_t WHERE pair LIKE'%aud%'
01:29:11  23  ORDER BY ydate
01:29:11  24  /

View created.

Elapsed: 00:00:00.04
01:29:11 SQL> 
01:29:11 SQL> -- rpt
01:29:11 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd 	3792

Elapsed: 00:00:00.12
01:29:11 SQL> 
01:29:11 SQL> -- Calc deltas and gains
01:29:11 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.27
01:29:11 SQL> 
01:29:11 SQL> CREATE TABLE q13 COMPRESS AS
01:29:11   2  SELECT
01:29:11   3  pair
01:29:11   4  ,ydate
01:29:11   5  ,prdate
01:29:11   6  ,rnum
01:29:11   7  ,lg4
01:29:11   8  ,lg8
01:29:11   9  ,lg12
01:29:11  10  ,ld4
01:29:11  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
01:29:11  12  -- step by 1
01:29:11  13  ,clse-lg1 d01
01:29:11  14  ,lg1-lg2	d12
01:29:11  15  ,lg2-lg3	d23
01:29:11  16  ,lg3-lg4	d34
01:29:11  17  ,lg4-lg5	d45
01:29:11  18  ,lg5-lg6	d56
01:29:11  19  ,lg6-lg7	d67
01:29:11  20  ,lg7-lg8	d78
01:29:11  21  ,lg8-lg9	d89
01:29:11  22  -- step by 2
01:29:11  23  ,clse-lg2 d02
01:29:11  24  ,lg2-lg4 d24
01:29:11  25  ,lg4-lg6 d46
01:29:11  26  ,lg6-lg8 d68
01:29:11  27  -- step by 3
01:29:11  28  ,clse-lg3 d03
01:29:11  29  ,lg3-lg6	d36
01:29:11  30  ,lg6-lg9	d69
01:29:11  31  ,lg9-lg12 d912
01:29:11  32  -- step by 4
01:29:11  33  ,clse-lg4 d04
01:29:11  34  ,lg4-lg8	d48
01:29:11  35  ,lg8-lg12 d812
01:29:11  36  ,lg6-lg12 d612
01:29:11  37  ,lg12-lg18 d1218
01:29:11  38  --
01:29:11  39  ,ABS(clse-lg1)dc1
01:29:11  40  ,ABS(clse-lg2)dc2
01:29:11  41  ,ABS(clse-lg3)dc3
01:29:11  42  ,ABS(clse-lg4)dc4
01:29:11  43  ,ABS(clse-lg5)dc5
01:29:11  44  ,ABS(clse-lg6)dc6
01:29:11  45  ,ABS(clse-lg7)dc7
01:29:11  46  ,ABS(clse-lg8)dc8
01:29:11  47  ,ABS(clse-lg9)dc9
01:29:11  48  ,ABS(clse-lg12)dc12
01:29:11  49  ,ABS(clse-lg18)dc18
01:29:11  50  ,ABS(clse-lg24)dc24
01:29:11  51  ,ABS(clse-lg72)dc72
01:29:11  52  ,(ld4-clse) ug4
01:29:11  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
01:29:11  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
01:29:11  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
01:29:11  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
01:29:11  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
01:29:11  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
01:29:11  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
01:29:11  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
01:29:11  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
01:29:11  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
01:29:11  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
01:29:11  64  ,0+TO_CHAR(ydate,'HH24')hh
01:29:11  65  ,0+TO_CHAR(ydate,'D')d
01:29:11  66  ,0+TO_CHAR(ydate,'W')w
01:29:11  67  FROM q11
01:29:11  68  ORDER BY pair,ydate
01:29:11  69  /

Table created.

Elapsed: 00:00:00.65
01:29:12 SQL> 
01:29:12 SQL> -- rpt
01:29:12 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1951
	-1	    1841

Elapsed: 00:00:00.08
01:29:12 SQL> 
01:29:12 SQL> -- Calc gains and ntiles
01:29:12 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.15
01:29:12 SQL> CREATE TABLE q15 COMPRESS AS
01:29:12   2  SELECT
01:29:12   3  pair
01:29:12   4  ,ydate
01:29:12   5  ,prdate -- Should be unique
01:29:12   6  ,trend -- +1 or -1
01:29:12   7  ,dc12 -- next statement needs this
01:29:12   8  -- Use NTILE() to derive some attributes
01:29:12   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
01:29:12  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
01:29:12  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
01:29:12  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
01:29:12  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
01:29:12  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
01:29:12  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
01:29:12  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
01:29:12  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
01:29:12  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
01:29:12  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
01:29:12  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
01:29:12  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
01:29:12  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
01:29:12  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
01:29:12  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
01:29:12  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
01:29:12  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
01:29:12  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
01:29:12  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
01:29:12  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
01:29:12  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
01:29:12  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
01:29:12  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
01:29:12  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
01:29:12  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
01:29:12  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
01:29:12  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
01:29:12  37  -- date related integers: hour of day, day of week, week of month:
01:29:12  38  ,hh    att28
01:29:12  39  ,d     att29
01:29:12  40  ,w     att30
01:29:12  41  ,trend att31
01:29:12  42  ,ug4 g4
01:29:12  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
01:29:12  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
01:29:12  45  FROM q13
01:29:12  46  ORDER BY pair,ydate
01:29:12  47  /

Table created.

Elapsed: 00:00:00.72
01:29:13 SQL> 
01:29:13 SQL> -- rpt
01:29:13 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
01:29:13   2  GROUP BY pair,trend,gatt,gattn
01:29:13   3  ORDER BY pair,trend,gatt,gattn
01:29:13   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup  -.0000113	     301    .037489029
aud_usd 	-1 nup up  -.00326065	     716    -.16044588
aud_usd 	-1 up  nup .003175335	     822    .149459209
aud_usd 	-1			       0
aud_usd 	 1 nup nup -.00002417	     362    -.02443808
aud_usd 	 1 nup up   -.0031269	     762    -.00734127
aud_usd 	 1 up  nup .003059152	     825    -.01396605
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.06
01:29:13 SQL> 
01:29:13 SQL> -- rpt
01:29:13 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-15 00:00:00

Elapsed: 00:00:00.00
01:29:13 SQL> 
01:29:13 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.29
01:29:13 SQL> CREATE TABLE modsrc COMPRESS AS
01:29:13   2  SELECT
01:29:13   3  pair
01:29:13   4  ,ydate
01:29:13   5  ,prdate
01:29:13   6  ,trend
01:29:13   7  ,g4
01:29:13   8  ,gatt
01:29:13   9  ,gattn
01:29:13  10  ,dc12
01:29:13  11  FROM q15
01:29:13  12  /

Table created.

Elapsed: 00:00:00.09
01:29:13 SQL> 
01:29:13 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.12
01:29:13 SQL> 
01:29:13 SQL> -- rpt
01:29:13 SQL> 
01:29:13 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.07
01:29:14 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
01:29:14 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
01:29:14 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
01:29:14 SQL> 
01:29:14 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
01:29:14   2  GROUP BY pair,trend,gatt,gattn
01:29:14   3  ORDER BY pair,trend,gatt,gattn
01:29:14   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup  -.0000113	     301    .037489029
aud_usd 	-1 nup up  -.00326065	     716    -.16044588
aud_usd 	-1 up  nup .003175335	     822    .149459209
aud_usd 	-1			       0
aud_usd 	 1 nup nup -.00002417	     362    -.02443808
aud_usd 	 1 nup up   -.0031269	     762    -.00734127
aud_usd 	 1 up  nup .003059152	     825    -.01396605
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.01
01:29:14 SQL> 
01:29:14 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
01:29:14 SQL> CREATE TABLE aud_ms10 COMPRESS AS
01:29:14   2  SELECT
01:29:14   3  ydate
01:29:14   4  ,trend aud_trend
01:29:14   5  ,g4    aud_g4
01:29:14   6  ,gatt  aud_gatt
01:29:14   7  ,gattn	aud_gattn
01:29:14   8  FROM modsrc
01:29:14   9  /

Table created.

Elapsed: 00:00:00.10
01:29:14 SQL> 
01:29:14 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.06
01:29:14 SQL> 
01:29:14 SQL> -- rpt
01:29:14 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 01:00:00 2010-12-14 22:00:00	 1949	  -.0197      .0116
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	 1839	  -.0179      .0184

Elapsed: 00:00:00.01
01:29:14 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 01:00:00 2010-12-14 22:00:00	       1951	 -.0197       .0116
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	       1841	 -.0179       .0184

Elapsed: 00:00:00.01
01:29:14 SQL> 
01:29:14 SQL> -- I need a copy of q15 attributes
01:29:14 SQL> 
01:29:14 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.11
01:29:14 SQL> CREATE TABLE aud_att COMPRESS AS
01:29:14   2  SELECT
01:29:14   3  ydate
01:29:14   4  ,att00 aud_att00
01:29:14   5  ,att01 aud_att01
01:29:14   6  ,att02 aud_att02
01:29:14   7  ,att03 aud_att03
01:29:14   8  ,att04 aud_att04
01:29:14   9  ,att05 aud_att05
01:29:14  10  ,att06 aud_att06
01:29:14  11  ,att07 aud_att07
01:29:14  12  ,att08 aud_att08
01:29:14  13  ,att09 aud_att09
01:29:14  14  ,att10 aud_att10
01:29:14  15  ,att11 aud_att11
01:29:14  16  ,att12 aud_att12
01:29:14  17  ,att13 aud_att13
01:29:14  18  ,att14 aud_att14
01:29:14  19  ,att15 aud_att15
01:29:14  20  ,att16 aud_att16
01:29:14  21  ,att17 aud_att17
01:29:14  22  ,att18 aud_att18
01:29:14  23  ,att19 aud_att19
01:29:14  24  ,att20 aud_att20
01:29:14  25  ,att21 aud_att21
01:29:14  26  ,att22 aud_att22
01:29:14  27  ,att23 aud_att23
01:29:14  28  ,att24 aud_att24
01:29:14  29  ,att25 aud_att25
01:29:14  30  ,att26 aud_att26
01:29:14  31  ,att27 aud_att27
01:29:14  32  ,att28 aud_att28
01:29:14  33  ,att29 aud_att29
01:29:14  34  ,att30 aud_att30
01:29:14  35  ,att31 aud_att31
01:29:14  36  FROM q15
01:29:14  37  /

Table created.

Elapsed: 00:00:00.08
01:29:14 SQL> 
01:29:14 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
01:29:14 SQL> 
01:29:14 SQL> -- rpt
01:29:14 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.01
01:29:14 SQL> 
01:29:14 SQL> --
01:29:14 SQL> -- gbp10.sql
01:29:14 SQL> --
01:29:14 SQL> 
01:29:14 SQL> -- Creates views and tables for backtesting a forex SVM strategy
01:29:14 SQL> 
01:29:14 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.63
01:29:15 SQL> 
01:29:15 SQL> -- I created ibfu_t here:
01:29:15 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
01:29:15 SQL> 
01:29:15 SQL> CREATE OR REPLACE VIEW q11 AS
01:29:15   2  SELECT
01:29:15   3  pair
01:29:15   4  ,ydate
01:29:15   5  ,prdate
01:29:15   6  ,rownum rnum -- acts as t in my time-series
01:29:15   7  ,clse
01:29:15   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
01:29:15   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
01:29:15  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
01:29:15  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
01:29:15  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
01:29:15  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
01:29:15  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
01:29:15  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
01:29:15  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
01:29:15  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
01:29:15  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
01:29:15  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
01:29:15  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
01:29:15  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
01:29:15  22  FROM ibfu_t WHERE pair LIKE'%gbp%'
01:29:15  23  ORDER BY ydate
01:29:15  24  /

View created.

Elapsed: 00:00:00.05
01:29:15 SQL> 
01:29:15 SQL> -- rpt
01:29:15 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd 	3792

Elapsed: 00:00:00.09
01:29:15 SQL> 
01:29:15 SQL> -- Calc deltas and gains
01:29:15 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.13
01:29:15 SQL> 
01:29:15 SQL> CREATE TABLE q13 COMPRESS AS
01:29:15   2  SELECT
01:29:15   3  pair
01:29:15   4  ,ydate
01:29:15   5  ,prdate
01:29:15   6  ,rnum
01:29:15   7  ,lg4
01:29:15   8  ,lg8
01:29:15   9  ,lg12
01:29:15  10  ,ld4
01:29:15  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
01:29:15  12  -- step by 1
01:29:15  13  ,clse-lg1 d01
01:29:15  14  ,lg1-lg2	d12
01:29:15  15  ,lg2-lg3	d23
01:29:15  16  ,lg3-lg4	d34
01:29:15  17  ,lg4-lg5	d45
01:29:15  18  ,lg5-lg6	d56
01:29:15  19  ,lg6-lg7	d67
01:29:15  20  ,lg7-lg8	d78
01:29:15  21  ,lg8-lg9	d89
01:29:15  22  -- step by 2
01:29:15  23  ,clse-lg2 d02
01:29:15  24  ,lg2-lg4 d24
01:29:15  25  ,lg4-lg6 d46
01:29:15  26  ,lg6-lg8 d68
01:29:15  27  -- step by 3
01:29:15  28  ,clse-lg3 d03
01:29:15  29  ,lg3-lg6	d36
01:29:15  30  ,lg6-lg9	d69
01:29:15  31  ,lg9-lg12 d912
01:29:15  32  -- step by 4
01:29:15  33  ,clse-lg4 d04
01:29:15  34  ,lg4-lg8	d48
01:29:15  35  ,lg8-lg12 d812
01:29:15  36  ,lg6-lg12 d612
01:29:15  37  ,lg12-lg18 d1218
01:29:15  38  --
01:29:15  39  ,ABS(clse-lg1)dc1
01:29:15  40  ,ABS(clse-lg2)dc2
01:29:15  41  ,ABS(clse-lg3)dc3
01:29:15  42  ,ABS(clse-lg4)dc4
01:29:15  43  ,ABS(clse-lg5)dc5
01:29:15  44  ,ABS(clse-lg6)dc6
01:29:15  45  ,ABS(clse-lg7)dc7
01:29:15  46  ,ABS(clse-lg8)dc8
01:29:15  47  ,ABS(clse-lg9)dc9
01:29:15  48  ,ABS(clse-lg12)dc12
01:29:15  49  ,ABS(clse-lg18)dc18
01:29:15  50  ,ABS(clse-lg24)dc24
01:29:15  51  ,ABS(clse-lg72)dc72
01:29:15  52  ,(ld4-clse) ug4
01:29:15  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
01:29:15  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
01:29:15  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
01:29:15  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
01:29:15  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
01:29:15  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
01:29:15  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
01:29:15  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
01:29:15  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
01:29:15  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
01:29:15  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
01:29:15  64  ,0+TO_CHAR(ydate,'HH24')hh
01:29:15  65  ,0+TO_CHAR(ydate,'D')d
01:29:15  66  ,0+TO_CHAR(ydate,'W')w
01:29:15  67  FROM q11
01:29:15  68  ORDER BY pair,ydate
01:29:15  69  /

Table created.

Elapsed: 00:00:00.38
01:29:15 SQL> 
01:29:15 SQL> -- rpt
01:29:15 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1918
	-1	    1874

Elapsed: 00:00:00.08
01:29:15 SQL> 
01:29:15 SQL> -- Calc gains and ntiles
01:29:15 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
01:29:16 SQL> CREATE TABLE q15 COMPRESS AS
01:29:16   2  SELECT
01:29:16   3  pair
01:29:16   4  ,ydate
01:29:16   5  ,prdate -- Should be unique
01:29:16   6  ,trend -- +1 or -1
01:29:16   7  ,dc12 -- next statement needs this
01:29:16   8  -- Use NTILE() to derive some attributes
01:29:16   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
01:29:16  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
01:29:16  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
01:29:16  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
01:29:16  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
01:29:16  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
01:29:16  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
01:29:16  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
01:29:16  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
01:29:16  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
01:29:16  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
01:29:16  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
01:29:16  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
01:29:16  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
01:29:16  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
01:29:16  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
01:29:16  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
01:29:16  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
01:29:16  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
01:29:16  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
01:29:16  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
01:29:16  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
01:29:16  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
01:29:16  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
01:29:16  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
01:29:16  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
01:29:16  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
01:29:16  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
01:29:16  37  -- date related integers: hour of day, day of week, week of month:
01:29:16  38  ,hh    att28
01:29:16  39  ,d     att29
01:29:16  40  ,w     att30
01:29:16  41  ,trend att31
01:29:16  42  ,ug4 g4
01:29:16  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
01:29:16  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
01:29:16  45  FROM q13
01:29:16  46  ORDER BY pair,ydate
01:29:16  47  /

Table created.

Elapsed: 00:00:00.70
01:29:16 SQL> 
01:29:16 SQL> -- rpt
01:29:16 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
01:29:16   2  GROUP BY pair,trend,gatt,gattn
01:29:16   3  ORDER BY pair,trend,gatt,gattn
01:29:16   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -3.832E-06	     304    .031143431
gbp_usd 	-1 nup up  -.00343995	     771     -.0408022
gbp_usd 	-1 up  nup .003627428	     795    .021496454
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup 7.9279E-06	     333    .029231468
gbp_usd 	 1 nup up  -.00341519	     792    .053150895
gbp_usd 	 1 up  nup .003562295	     793    -.04671055

7 rows selected.

Elapsed: 00:00:00.05
01:29:16 SQL> 
01:29:16 SQL> -- rpt
01:29:16 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-15 00:00:00

Elapsed: 00:00:00.00
01:29:16 SQL> 
01:29:16 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.14
01:29:17 SQL> CREATE TABLE modsrc COMPRESS AS
01:29:17   2  SELECT
01:29:17   3  pair
01:29:17   4  ,ydate
01:29:17   5  ,prdate
01:29:17   6  ,trend
01:29:17   7  ,g4
01:29:17   8  ,gatt
01:29:17   9  ,gattn
01:29:17  10  ,dc12
01:29:17  11  FROM q15
01:29:17  12  /

Table created.

Elapsed: 00:00:00.03
01:29:17 SQL> 
01:29:17 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.11
01:29:17 SQL> 
01:29:17 SQL> -- rpt
01:29:17 SQL> 
01:29:17 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.08
01:29:17 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
01:29:17 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
01:29:17 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
01:29:17 SQL> 
01:29:17 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
01:29:17   2  GROUP BY pair,trend,gatt,gattn
01:29:17   3  ORDER BY pair,trend,gatt,gattn
01:29:17   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -3.832E-06	     304    .031143431
gbp_usd 	-1 nup up  -.00343995	     771     -.0408022
gbp_usd 	-1 up  nup .003627428	     795    .021496454
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup 7.9279E-06	     333    .029231468
gbp_usd 	 1 nup up  -.00341519	     792    .053150895
gbp_usd 	 1 up  nup .003562295	     793    -.04671055

7 rows selected.

Elapsed: 00:00:00.01
01:29:17 SQL> 
01:29:17 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.09
01:29:17 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
01:29:17   2  SELECT
01:29:17   3  ydate
01:29:17   4  ,trend gbp_trend
01:29:17   5  ,g4    gbp_g4
01:29:17   6  ,gatt  gbp_gatt
01:29:17   7  ,gattn	gbp_gattn
01:29:17   8  FROM modsrc
01:29:17   9  /

Table created.

Elapsed: 00:00:00.03
01:29:17 SQL> 
01:29:17 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.06
01:29:17 SQL> 
01:29:17 SQL> -- rpt
01:29:17 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 01:00:00 2010-12-14 11:00:00	 1918	  -.0194      .0192
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	 1870	  -.0243      .0217

Elapsed: 00:00:00.01
01:29:17 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 01:00:00 2010-12-14 11:00:00	       1918	 -.0194       .0192
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	       1874	 -.0243       .0217

Elapsed: 00:00:00.01
01:29:17 SQL> 
01:29:17 SQL> -- I need a copy of q15 attributes
01:29:17 SQL> 
01:29:17 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.04
01:29:17 SQL> CREATE TABLE gbp_att COMPRESS AS
01:29:17   2  SELECT
01:29:17   3  ydate
01:29:17   4  ,att00 gbp_att00
01:29:17   5  ,att01 gbp_att01
01:29:17   6  ,att02 gbp_att02
01:29:17   7  ,att03 gbp_att03
01:29:17   8  ,att04 gbp_att04
01:29:17   9  ,att05 gbp_att05
01:29:17  10  ,att06 gbp_att06
01:29:17  11  ,att07 gbp_att07
01:29:17  12  ,att08 gbp_att08
01:29:17  13  ,att09 gbp_att09
01:29:17  14  ,att10 gbp_att10
01:29:17  15  ,att11 gbp_att11
01:29:17  16  ,att12 gbp_att12
01:29:17  17  ,att13 gbp_att13
01:29:17  18  ,att14 gbp_att14
01:29:17  19  ,att15 gbp_att15
01:29:17  20  ,att16 gbp_att16
01:29:17  21  ,att17 gbp_att17
01:29:17  22  ,att18 gbp_att18
01:29:17  23  ,att19 gbp_att19
01:29:17  24  ,att20 gbp_att20
01:29:17  25  ,att21 gbp_att21
01:29:17  26  ,att22 gbp_att22
01:29:17  27  ,att23 gbp_att23
01:29:17  28  ,att24 gbp_att24
01:29:17  29  ,att25 gbp_att25
01:29:17  30  ,att26 gbp_att26
01:29:17  31  ,att27 gbp_att27
01:29:17  32  ,att28 gbp_att28
01:29:17  33  ,att29 gbp_att29
01:29:17  34  ,att30 gbp_att30
01:29:17  35  ,att31 gbp_att31
01:29:17  36  FROM q15
01:29:17  37  /

Table created.

Elapsed: 00:00:00.10
01:29:17 SQL> 
01:29:17 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
01:29:17 SQL> 
01:29:17 SQL> -- rpt
01:29:17 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.01
01:29:17 SQL> 
01:29:17 SQL> --
01:29:17 SQL> -- jpy10.sql
01:29:17 SQL> --
01:29:17 SQL> 
01:29:17 SQL> -- Creates views and tables for backtesting a forex SVM strategy
01:29:17 SQL> 
01:29:17 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.66
01:29:18 SQL> 
01:29:18 SQL> -- I created ibfu_t here:
01:29:18 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
01:29:18 SQL> 
01:29:18 SQL> CREATE OR REPLACE VIEW q11 AS
01:29:18   2  SELECT
01:29:18   3  pair
01:29:18   4  ,ydate
01:29:18   5  ,prdate
01:29:18   6  ,rownum rnum -- acts as t in my time-series
01:29:18   7  ,clse
01:29:18   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
01:29:18   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
01:29:18  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
01:29:18  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
01:29:18  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
01:29:18  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
01:29:18  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
01:29:18  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
01:29:18  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
01:29:18  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
01:29:18  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
01:29:18  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
01:29:18  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
01:29:18  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
01:29:18  22  FROM ibfu_t WHERE pair LIKE'%jpy%'
01:29:18  23  ORDER BY ydate
01:29:18  24  /

View created.

Elapsed: 00:00:00.04
01:29:18 SQL> 
01:29:18 SQL> -- rpt
01:29:18 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy 	3792

Elapsed: 00:00:00.08
01:29:18 SQL> 
01:29:18 SQL> -- Calc deltas and gains
01:29:18 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.25
01:29:18 SQL> 
01:29:18 SQL> CREATE TABLE q13 COMPRESS AS
01:29:18   2  SELECT
01:29:18   3  pair
01:29:18   4  ,ydate
01:29:18   5  ,prdate
01:29:18   6  ,rnum
01:29:18   7  ,lg4
01:29:18   8  ,lg8
01:29:18   9  ,lg12
01:29:18  10  ,ld4
01:29:18  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
01:29:18  12  -- step by 1
01:29:18  13  ,clse-lg1 d01
01:29:18  14  ,lg1-lg2	d12
01:29:18  15  ,lg2-lg3	d23
01:29:18  16  ,lg3-lg4	d34
01:29:18  17  ,lg4-lg5	d45
01:29:18  18  ,lg5-lg6	d56
01:29:18  19  ,lg6-lg7	d67
01:29:18  20  ,lg7-lg8	d78
01:29:18  21  ,lg8-lg9	d89
01:29:18  22  -- step by 2
01:29:18  23  ,clse-lg2 d02
01:29:18  24  ,lg2-lg4 d24
01:29:18  25  ,lg4-lg6 d46
01:29:18  26  ,lg6-lg8 d68
01:29:18  27  -- step by 3
01:29:18  28  ,clse-lg3 d03
01:29:18  29  ,lg3-lg6	d36
01:29:18  30  ,lg6-lg9	d69
01:29:18  31  ,lg9-lg12 d912
01:29:18  32  -- step by 4
01:29:18  33  ,clse-lg4 d04
01:29:18  34  ,lg4-lg8	d48
01:29:18  35  ,lg8-lg12 d812
01:29:18  36  ,lg6-lg12 d612
01:29:18  37  ,lg12-lg18 d1218
01:29:18  38  --
01:29:18  39  ,ABS(clse-lg1)dc1
01:29:18  40  ,ABS(clse-lg2)dc2
01:29:18  41  ,ABS(clse-lg3)dc3
01:29:18  42  ,ABS(clse-lg4)dc4
01:29:18  43  ,ABS(clse-lg5)dc5
01:29:18  44  ,ABS(clse-lg6)dc6
01:29:18  45  ,ABS(clse-lg7)dc7
01:29:18  46  ,ABS(clse-lg8)dc8
01:29:18  47  ,ABS(clse-lg9)dc9
01:29:18  48  ,ABS(clse-lg12)dc12
01:29:18  49  ,ABS(clse-lg18)dc18
01:29:18  50  ,ABS(clse-lg24)dc24
01:29:18  51  ,ABS(clse-lg72)dc72
01:29:18  52  ,(ld4-clse) ug4
01:29:18  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
01:29:18  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
01:29:18  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
01:29:18  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
01:29:18  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
01:29:18  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
01:29:18  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
01:29:18  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
01:29:18  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
01:29:18  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
01:29:18  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
01:29:18  64  ,0+TO_CHAR(ydate,'HH24')hh
01:29:18  65  ,0+TO_CHAR(ydate,'D')d
01:29:18  66  ,0+TO_CHAR(ydate,'W')w
01:29:18  67  FROM q11
01:29:18  68  ORDER BY pair,ydate
01:29:18  69  /

Table created.

Elapsed: 00:00:00.37
01:29:19 SQL> 
01:29:19 SQL> -- rpt
01:29:19 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1712
	-1	    2080

Elapsed: 00:00:00.07
01:29:19 SQL> 
01:29:19 SQL> -- Calc gains and ntiles
01:29:19 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.15
01:29:19 SQL> CREATE TABLE q15 COMPRESS AS
01:29:19   2  SELECT
01:29:19   3  pair
01:29:19   4  ,ydate
01:29:19   5  ,prdate -- Should be unique
01:29:19   6  ,trend -- +1 or -1
01:29:19   7  ,dc12 -- next statement needs this
01:29:19   8  -- Use NTILE() to derive some attributes
01:29:19   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
01:29:19  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
01:29:19  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
01:29:19  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
01:29:19  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
01:29:19  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
01:29:19  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
01:29:19  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
01:29:19  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
01:29:19  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
01:29:19  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
01:29:19  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
01:29:19  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
01:29:19  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
01:29:19  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
01:29:19  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
01:29:19  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
01:29:19  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
01:29:19  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
01:29:19  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
01:29:19  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
01:29:19  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
01:29:19  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
01:29:19  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
01:29:19  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
01:29:19  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
01:29:19  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
01:29:19  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
01:29:19  37  -- date related integers: hour of day, day of week, week of month:
01:29:19  38  ,hh    att28
01:29:19  39  ,d     att29
01:29:19  40  ,w     att30
01:29:19  41  ,trend att31
01:29:19  42  ,ug4 g4
01:29:19  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
01:29:19  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
01:29:19  45  FROM q13
01:29:19  46  ORDER BY pair,ydate
01:29:19  47  /

Table created.

Elapsed: 00:00:00.90
01:29:20 SQL> 
01:29:20 SQL> -- rpt
01:29:20 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
01:29:20   2  GROUP BY pair,trend,gatt,gattn
01:29:20   3  ORDER BY pair,trend,gatt,gattn
01:29:20   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	      57
usd_jpy 	-1 nup up  -.16870621	     999    -.06495076
usd_jpy 	-1 up  nup .160062012	    1024    .157761449
usd_jpy 	 1 nup nup	    0	      28
usd_jpy 	 1 nup up  -.16423427	     922    -.00550838
usd_jpy 	 1 up  nup .157787599	     758    .109714172
usd_jpy 	 1			       0

7 rows selected.

Elapsed: 00:00:00.06
01:29:20 SQL> 
01:29:20 SQL> -- rpt
01:29:20 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-15 00:00:00

Elapsed: 00:00:00.00
01:29:20 SQL> 
01:29:20 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.14
01:29:20 SQL> CREATE TABLE modsrc COMPRESS AS
01:29:20   2  SELECT
01:29:20   3  pair
01:29:20   4  ,ydate
01:29:20   5  ,prdate
01:29:20   6  ,trend
01:29:20   7  ,g4
01:29:20   8  ,gatt
01:29:20   9  ,gattn
01:29:20  10  ,dc12
01:29:20  11  FROM q15
01:29:20  12  /

Table created.

Elapsed: 00:00:00.04
01:29:20 SQL> 
01:29:20 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.10
01:29:20 SQL> 
01:29:20 SQL> -- rpt
01:29:20 SQL> 
01:29:20 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.09
01:29:20 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
01:29:20 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
01:29:20 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
01:29:20 SQL> 
01:29:20 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
01:29:20   2  GROUP BY pair,trend,gatt,gattn
01:29:20   3  ORDER BY pair,trend,gatt,gattn
01:29:20   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	      57
usd_jpy 	-1 nup up  -.16870621	     999    -.06495076
usd_jpy 	-1 up  nup .160062012	    1024    .157761449
usd_jpy 	 1 nup nup	    0	      28
usd_jpy 	 1 nup up  -.16423427	     922    -.00550838
usd_jpy 	 1 up  nup .157787599	     758    .109714172
usd_jpy 	 1			       0

7 rows selected.

Elapsed: 00:00:00.01
01:29:20 SQL> 
01:29:20 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
01:29:20 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
01:29:20   2  SELECT
01:29:20   3  ydate
01:29:20   4  ,trend jpy_trend
01:29:20   5  ,g4    jpy_g4
01:29:20   6  ,gatt  jpy_gatt
01:29:20   7  ,gattn	jpy_gattn
01:29:20   8  FROM modsrc
01:29:20   9  /

Table created.

Elapsed: 00:00:00.11
01:29:20 SQL> 
01:29:20 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.09
01:29:21 SQL> 
01:29:21 SQL> -- rpt
01:29:21 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 01:00:00 2010-12-15 00:00:00	 1708	   -1.05	.71
	-1 2010-05-11 13:00:00 2010-12-14 19:00:00	 2080	   -2.13       1.97

Elapsed: 00:00:00.02
01:29:21 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 01:00:00 2010-12-15 00:00:00	       1712	  -1.05 	.71
	-1 2010-05-11 13:00:00 2010-12-14 19:00:00	       2080	  -2.13        1.97

Elapsed: 00:00:00.00
01:29:21 SQL> 
01:29:21 SQL> -- I need a copy of q15 attributes
01:29:21 SQL> 
01:29:21 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.04
01:29:21 SQL> CREATE TABLE jpy_att COMPRESS AS
01:29:21   2  SELECT
01:29:21   3  ydate
01:29:21   4  ,att00 jpy_att00
01:29:21   5  ,att01 jpy_att01
01:29:21   6  ,att02 jpy_att02
01:29:21   7  ,att03 jpy_att03
01:29:21   8  ,att04 jpy_att04
01:29:21   9  ,att05 jpy_att05
01:29:21  10  ,att06 jpy_att06
01:29:21  11  ,att07 jpy_att07
01:29:21  12  ,att08 jpy_att08
01:29:21  13  ,att09 jpy_att09
01:29:21  14  ,att10 jpy_att10
01:29:21  15  ,att11 jpy_att11
01:29:21  16  ,att12 jpy_att12
01:29:21  17  ,att13 jpy_att13
01:29:21  18  ,att14 jpy_att14
01:29:21  19  ,att15 jpy_att15
01:29:21  20  ,att16 jpy_att16
01:29:21  21  ,att17 jpy_att17
01:29:21  22  ,att18 jpy_att18
01:29:21  23  ,att19 jpy_att19
01:29:21  24  ,att20 jpy_att20
01:29:21  25  ,att21 jpy_att21
01:29:21  26  ,att22 jpy_att22
01:29:21  27  ,att23 jpy_att23
01:29:21  28  ,att24 jpy_att24
01:29:21  29  ,att25 jpy_att25
01:29:21  30  ,att26 jpy_att26
01:29:21  31  ,att27 jpy_att27
01:29:21  32  ,att28 jpy_att28
01:29:21  33  ,att29 jpy_att29
01:29:21  34  ,att30 jpy_att30
01:29:21  35  ,att31 jpy_att31
01:29:21  36  FROM q15
01:29:21  37  /

Table created.

Elapsed: 00:00:00.13
01:29:21 SQL> 
01:29:21 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.13
01:29:21 SQL> 
01:29:21 SQL> -- rpt
01:29:21 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.00
01:29:21 SQL> 
01:29:21 SQL> --
01:29:21 SQL> -- cad10.sql
01:29:21 SQL> --
01:29:21 SQL> 
01:29:21 SQL> -- Creates views and tables for backtesting a forex SVM strategy
01:29:21 SQL> 
01:29:21 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.54
01:29:21 SQL> 
01:29:21 SQL> -- I created ibfu_t here:
01:29:21 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
01:29:21 SQL> 
01:29:21 SQL> CREATE OR REPLACE VIEW q11 AS
01:29:21   2  SELECT
01:29:21   3  pair
01:29:21   4  ,ydate
01:29:21   5  ,prdate
01:29:21   6  ,rownum rnum -- acts as t in my time-series
01:29:21   7  ,clse
01:29:21   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
01:29:21   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
01:29:21  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
01:29:21  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
01:29:21  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
01:29:21  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
01:29:21  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
01:29:21  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
01:29:21  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
01:29:21  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
01:29:21  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
01:29:21  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
01:29:21  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
01:29:21  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
01:29:21  22  FROM ibfu_t WHERE pair LIKE'%cad%'
01:29:21  23  ORDER BY ydate
01:29:21  24  /

View created.

Elapsed: 00:00:00.35
01:29:22 SQL> 
01:29:22 SQL> -- rpt
01:29:22 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad 	3792

Elapsed: 00:00:00.12
01:29:22 SQL> 
01:29:22 SQL> -- Calc deltas and gains
01:29:22 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.15
01:29:22 SQL> 
01:29:22 SQL> CREATE TABLE q13 COMPRESS AS
01:29:22   2  SELECT
01:29:22   3  pair
01:29:22   4  ,ydate
01:29:22   5  ,prdate
01:29:22   6  ,rnum
01:29:22   7  ,lg4
01:29:22   8  ,lg8
01:29:22   9  ,lg12
01:29:22  10  ,ld4
01:29:22  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
01:29:22  12  -- step by 1
01:29:22  13  ,clse-lg1 d01
01:29:22  14  ,lg1-lg2	d12
01:29:22  15  ,lg2-lg3	d23
01:29:22  16  ,lg3-lg4	d34
01:29:22  17  ,lg4-lg5	d45
01:29:22  18  ,lg5-lg6	d56
01:29:22  19  ,lg6-lg7	d67
01:29:22  20  ,lg7-lg8	d78
01:29:22  21  ,lg8-lg9	d89
01:29:22  22  -- step by 2
01:29:22  23  ,clse-lg2 d02
01:29:22  24  ,lg2-lg4 d24
01:29:22  25  ,lg4-lg6 d46
01:29:22  26  ,lg6-lg8 d68
01:29:22  27  -- step by 3
01:29:22  28  ,clse-lg3 d03
01:29:22  29  ,lg3-lg6	d36
01:29:22  30  ,lg6-lg9	d69
01:29:22  31  ,lg9-lg12 d912
01:29:22  32  -- step by 4
01:29:22  33  ,clse-lg4 d04
01:29:22  34  ,lg4-lg8	d48
01:29:22  35  ,lg8-lg12 d812
01:29:22  36  ,lg6-lg12 d612
01:29:22  37  ,lg12-lg18 d1218
01:29:22  38  --
01:29:22  39  ,ABS(clse-lg1)dc1
01:29:22  40  ,ABS(clse-lg2)dc2
01:29:22  41  ,ABS(clse-lg3)dc3
01:29:22  42  ,ABS(clse-lg4)dc4
01:29:22  43  ,ABS(clse-lg5)dc5
01:29:22  44  ,ABS(clse-lg6)dc6
01:29:22  45  ,ABS(clse-lg7)dc7
01:29:22  46  ,ABS(clse-lg8)dc8
01:29:22  47  ,ABS(clse-lg9)dc9
01:29:22  48  ,ABS(clse-lg12)dc12
01:29:22  49  ,ABS(clse-lg18)dc18
01:29:22  50  ,ABS(clse-lg24)dc24
01:29:22  51  ,ABS(clse-lg72)dc72
01:29:22  52  ,(ld4-clse) ug4
01:29:22  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
01:29:22  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
01:29:22  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
01:29:22  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
01:29:22  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
01:29:22  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
01:29:22  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
01:29:22  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
01:29:22  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
01:29:22  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
01:29:22  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
01:29:22  64  ,0+TO_CHAR(ydate,'HH24')hh
01:29:22  65  ,0+TO_CHAR(ydate,'D')d
01:29:22  66  ,0+TO_CHAR(ydate,'W')w
01:29:22  67  FROM q11
01:29:22  68  ORDER BY pair,ydate
01:29:22  69  /

Table created.

Elapsed: 00:00:00.46
01:29:22 SQL> 
01:29:22 SQL> -- rpt
01:29:22 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1734
	-1	    2058

Elapsed: 00:00:00.07
01:29:23 SQL> 
01:29:23 SQL> -- Calc gains and ntiles
01:29:23 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.16
01:29:23 SQL> CREATE TABLE q15 COMPRESS AS
01:29:23   2  SELECT
01:29:23   3  pair
01:29:23   4  ,ydate
01:29:23   5  ,prdate -- Should be unique
01:29:23   6  ,trend -- +1 or -1
01:29:23   7  ,dc12 -- next statement needs this
01:29:23   8  -- Use NTILE() to derive some attributes
01:29:23   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
01:29:23  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
01:29:23  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
01:29:23  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
01:29:23  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
01:29:23  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
01:29:23  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
01:29:23  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
01:29:23  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
01:29:23  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
01:29:23  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
01:29:23  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
01:29:23  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
01:29:23  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
01:29:23  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
01:29:23  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
01:29:23  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
01:29:23  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
01:29:23  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
01:29:23  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
01:29:23  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
01:29:23  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
01:29:23  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
01:29:23  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
01:29:23  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
01:29:23  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
01:29:23  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
01:29:23  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
01:29:23  37  -- date related integers: hour of day, day of week, week of month:
01:29:23  38  ,hh    att28
01:29:23  39  ,d     att29
01:29:23  40  ,w     att30
01:29:23  41  ,trend att31
01:29:23  42  ,ug4 g4
01:29:23  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
01:29:23  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
01:29:23  45  FROM q13
01:29:23  46  ORDER BY pair,ydate
01:29:23  47  /

Table created.

Elapsed: 00:00:00.78
01:29:23 SQL> 
01:29:23 SQL> -- rpt
01:29:23 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
01:29:23   2  GROUP BY pair,trend,gatt,gattn
01:29:23   3  ORDER BY pair,trend,gatt,gattn
01:29:23   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00003116	     495    .026030817
usd_cad 	-1 nup up  -.00261484	     790    .068465838
usd_cad 	-1 up  nup .002811655	     769    .029227285
usd_cad 	-1			       0
usd_cad 	 1 nup nup -4.593E-07	     381    .041039252
usd_cad 	 1 nup up  -.00285413	     718    -.01070071
usd_cad 	 1 up  nup .003006969	     635    .054044227

7 rows selected.

Elapsed: 00:00:00.06
01:29:24 SQL> 
01:29:24 SQL> -- rpt
01:29:24 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-15 00:00:00

Elapsed: 00:00:00.00
01:29:24 SQL> 
01:29:24 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
01:29:24 SQL> CREATE TABLE modsrc COMPRESS AS
01:29:24   2  SELECT
01:29:24   3  pair
01:29:24   4  ,ydate
01:29:24   5  ,prdate
01:29:24   6  ,trend
01:29:24   7  ,g4
01:29:24   8  ,gatt
01:29:24   9  ,gattn
01:29:24  10  ,dc12
01:29:24  11  FROM q15
01:29:24  12  /

Table created.

Elapsed: 00:00:00.04
01:29:24 SQL> 
01:29:24 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
01:29:24 SQL> 
01:29:24 SQL> -- rpt
01:29:24 SQL> 
01:29:24 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.08
01:29:24 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
01:29:24 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
01:29:24 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
01:29:24 SQL> 
01:29:24 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
01:29:24   2  GROUP BY pair,trend,gatt,gattn
01:29:24   3  ORDER BY pair,trend,gatt,gattn
01:29:24   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00003116	     495    .026030817
usd_cad 	-1 nup up  -.00261484	     790    .068465838
usd_cad 	-1 up  nup .002811655	     769    .029227285
usd_cad 	-1			       0
usd_cad 	 1 nup nup -4.593E-07	     381    .041039252
usd_cad 	 1 nup up  -.00285413	     718    -.01070071
usd_cad 	 1 up  nup .003006969	     635    .054044227

7 rows selected.

Elapsed: 00:00:00.01
01:29:24 SQL> 
01:29:24 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.06
01:29:24 SQL> CREATE TABLE cad_ms10 COMPRESS AS
01:29:24   2  SELECT
01:29:24   3  ydate
01:29:24   4  ,trend cad_trend
01:29:24   5  ,g4    cad_g4
01:29:24   6  ,gatt  cad_gatt
01:29:24   7  ,gattn	cad_gattn
01:29:24   8  FROM modsrc
01:29:24   9  /

Table created.

Elapsed: 00:00:00.07
01:29:24 SQL> 
01:29:24 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.12
01:29:24 SQL> 
01:29:24 SQL> -- rpt
01:29:24 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 03:00:00 2010-12-14 15:00:00	 1734	  -.0173      .0159
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	 2054	  -.0139      .0147

Elapsed: 00:00:00.02
01:29:24 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 03:00:00 2010-12-14 15:00:00	       1734	 -.0173       .0159
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	       2058	 -.0139       .0147

Elapsed: 00:00:00.00
01:29:24 SQL> 
01:29:24 SQL> -- I need a copy of q15 attributes
01:29:24 SQL> 
01:29:24 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.04
01:29:24 SQL> CREATE TABLE cad_att COMPRESS AS
01:29:24   2  SELECT
01:29:24   3  ydate
01:29:24   4  ,att00 cad_att00
01:29:24   5  ,att01 cad_att01
01:29:24   6  ,att02 cad_att02
01:29:24   7  ,att03 cad_att03
01:29:24   8  ,att04 cad_att04
01:29:24   9  ,att05 cad_att05
01:29:24  10  ,att06 cad_att06
01:29:24  11  ,att07 cad_att07
01:29:24  12  ,att08 cad_att08
01:29:24  13  ,att09 cad_att09
01:29:24  14  ,att10 cad_att10
01:29:24  15  ,att11 cad_att11
01:29:24  16  ,att12 cad_att12
01:29:24  17  ,att13 cad_att13
01:29:24  18  ,att14 cad_att14
01:29:24  19  ,att15 cad_att15
01:29:24  20  ,att16 cad_att16
01:29:24  21  ,att17 cad_att17
01:29:24  22  ,att18 cad_att18
01:29:24  23  ,att19 cad_att19
01:29:24  24  ,att20 cad_att20
01:29:24  25  ,att21 cad_att21
01:29:24  26  ,att22 cad_att22
01:29:24  27  ,att23 cad_att23
01:29:24  28  ,att24 cad_att24
01:29:24  29  ,att25 cad_att25
01:29:24  30  ,att26 cad_att26
01:29:24  31  ,att27 cad_att27
01:29:24  32  ,att28 cad_att28
01:29:24  33  ,att29 cad_att29
01:29:24  34  ,att30 cad_att30
01:29:24  35  ,att31 cad_att31
01:29:24  36  FROM q15
01:29:24  37  /

Table created.

Elapsed: 00:00:00.25
01:29:25 SQL> 
01:29:25 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
01:29:25 SQL> 
01:29:25 SQL> -- rpt
01:29:25 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.00
01:29:25 SQL> 
01:29:25 SQL> --
01:29:25 SQL> -- chf10.sql
01:29:25 SQL> --
01:29:25 SQL> 
01:29:25 SQL> -- Creates views and tables for backtesting a forex SVM strategy
01:29:25 SQL> 
01:29:25 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.68
01:29:25 SQL> 
01:29:25 SQL> -- I created ibfu_t here:
01:29:25 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
01:29:25 SQL> 
01:29:25 SQL> CREATE OR REPLACE VIEW q11 AS
01:29:25   2  SELECT
01:29:25   3  pair
01:29:25   4  ,ydate
01:29:25   5  ,prdate
01:29:25   6  ,rownum rnum -- acts as t in my time-series
01:29:25   7  ,clse
01:29:25   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
01:29:25   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
01:29:25  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
01:29:25  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
01:29:25  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
01:29:25  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
01:29:25  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
01:29:25  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
01:29:25  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
01:29:25  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
01:29:25  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
01:29:25  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
01:29:25  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
01:29:25  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
01:29:25  22  FROM ibfu_t WHERE pair LIKE'%chf%'
01:29:25  23  ORDER BY ydate
01:29:25  24  /

View created.

Elapsed: 00:00:00.03
01:29:25 SQL> 
01:29:25 SQL> -- rpt
01:29:25 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf 	3792

Elapsed: 00:00:00.08
01:29:25 SQL> 
01:29:25 SQL> -- Calc deltas and gains
01:29:25 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
01:29:26 SQL> 
01:29:26 SQL> CREATE TABLE q13 COMPRESS AS
01:29:26   2  SELECT
01:29:26   3  pair
01:29:26   4  ,ydate
01:29:26   5  ,prdate
01:29:26   6  ,rnum
01:29:26   7  ,lg4
01:29:26   8  ,lg8
01:29:26   9  ,lg12
01:29:26  10  ,ld4
01:29:26  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
01:29:26  12  -- step by 1
01:29:26  13  ,clse-lg1 d01
01:29:26  14  ,lg1-lg2	d12
01:29:26  15  ,lg2-lg3	d23
01:29:26  16  ,lg3-lg4	d34
01:29:26  17  ,lg4-lg5	d45
01:29:26  18  ,lg5-lg6	d56
01:29:26  19  ,lg6-lg7	d67
01:29:26  20  ,lg7-lg8	d78
01:29:26  21  ,lg8-lg9	d89
01:29:26  22  -- step by 2
01:29:26  23  ,clse-lg2 d02
01:29:26  24  ,lg2-lg4 d24
01:29:26  25  ,lg4-lg6 d46
01:29:26  26  ,lg6-lg8 d68
01:29:26  27  -- step by 3
01:29:26  28  ,clse-lg3 d03
01:29:26  29  ,lg3-lg6	d36
01:29:26  30  ,lg6-lg9	d69
01:29:26  31  ,lg9-lg12 d912
01:29:26  32  -- step by 4
01:29:26  33  ,clse-lg4 d04
01:29:26  34  ,lg4-lg8	d48
01:29:26  35  ,lg8-lg12 d812
01:29:26  36  ,lg6-lg12 d612
01:29:26  37  ,lg12-lg18 d1218
01:29:26  38  --
01:29:26  39  ,ABS(clse-lg1)dc1
01:29:26  40  ,ABS(clse-lg2)dc2
01:29:26  41  ,ABS(clse-lg3)dc3
01:29:26  42  ,ABS(clse-lg4)dc4
01:29:26  43  ,ABS(clse-lg5)dc5
01:29:26  44  ,ABS(clse-lg6)dc6
01:29:26  45  ,ABS(clse-lg7)dc7
01:29:26  46  ,ABS(clse-lg8)dc8
01:29:26  47  ,ABS(clse-lg9)dc9
01:29:26  48  ,ABS(clse-lg12)dc12
01:29:26  49  ,ABS(clse-lg18)dc18
01:29:26  50  ,ABS(clse-lg24)dc24
01:29:26  51  ,ABS(clse-lg72)dc72
01:29:26  52  ,(ld4-clse) ug4
01:29:26  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
01:29:26  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
01:29:26  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
01:29:26  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
01:29:26  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
01:29:26  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
01:29:26  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
01:29:26  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
01:29:26  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
01:29:26  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
01:29:26  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
01:29:26  64  ,0+TO_CHAR(ydate,'HH24')hh
01:29:26  65  ,0+TO_CHAR(ydate,'D')d
01:29:26  66  ,0+TO_CHAR(ydate,'W')w
01:29:26  67  FROM q11
01:29:26  68  ORDER BY pair,ydate
01:29:26  69  /

Table created.

Elapsed: 00:00:00.39
01:29:26 SQL> 
01:29:26 SQL> -- rpt
01:29:26 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1715
	-1	    2077

Elapsed: 00:00:00.07
01:29:26 SQL> 
01:29:26 SQL> -- Calc gains and ntiles
01:29:26 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.09
01:29:26 SQL> CREATE TABLE q15 COMPRESS AS
01:29:26   2  SELECT
01:29:26   3  pair
01:29:26   4  ,ydate
01:29:26   5  ,prdate -- Should be unique
01:29:26   6  ,trend -- +1 or -1
01:29:26   7  ,dc12 -- next statement needs this
01:29:26   8  -- Use NTILE() to derive some attributes
01:29:26   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
01:29:26  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
01:29:26  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
01:29:26  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
01:29:26  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
01:29:26  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
01:29:26  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
01:29:26  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
01:29:26  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
01:29:26  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
01:29:26  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
01:29:26  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
01:29:26  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
01:29:26  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
01:29:26  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
01:29:26  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
01:29:26  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
01:29:26  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
01:29:26  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
01:29:26  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
01:29:26  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
01:29:26  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
01:29:26  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
01:29:26  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
01:29:26  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
01:29:26  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
01:29:26  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
01:29:26  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
01:29:26  37  -- date related integers: hour of day, day of week, week of month:
01:29:26  38  ,hh    att28
01:29:26  39  ,d     att29
01:29:26  40  ,w     att30
01:29:26  41  ,trend att31
01:29:26  42  ,ug4 g4
01:29:26  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
01:29:26  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
01:29:26  45  FROM q13
01:29:26  46  ORDER BY pair,ydate
01:29:26  47  /

Table created.

Elapsed: 00:00:00.73
01:29:27 SQL> 
01:29:27 SQL> -- rpt
01:29:27 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
01:29:27   2  GROUP BY pair,trend,gatt,gattn
01:29:27   3  ORDER BY pair,trend,gatt,gattn
01:29:27   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup  .00001003	     500    .064926761
usd_chf 	-1 nup up   -.0028407	     767    .075396575
usd_chf 	-1 up  nup .002673685	     806    -.06509418
usd_chf 	-1			       0
usd_chf 	 1 nup nup -.00001178	     401    .038442876
usd_chf 	 1 nup up  -.00292213	     738    .016780666
usd_chf 	 1 up  nup .002766519	     576    -.06192624

7 rows selected.

Elapsed: 00:00:00.02
01:29:27 SQL> 
01:29:27 SQL> -- rpt
01:29:27 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-15 00:00:00

Elapsed: 00:00:00.01
01:29:27 SQL> 
01:29:27 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.06
01:29:27 SQL> CREATE TABLE modsrc COMPRESS AS
01:29:27   2  SELECT
01:29:27   3  pair
01:29:27   4  ,ydate
01:29:27   5  ,prdate
01:29:27   6  ,trend
01:29:27   7  ,g4
01:29:27   8  ,gatt
01:29:27   9  ,gattn
01:29:27  10  ,dc12
01:29:27  11  FROM q15
01:29:27  12  /

Table created.

Elapsed: 00:00:00.05
01:29:27 SQL> 
01:29:27 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.12
01:29:27 SQL> 
01:29:27 SQL> -- rpt
01:29:27 SQL> 
01:29:27 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.08
01:29:27 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
01:29:27 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
01:29:27 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
01:29:27 SQL> 
01:29:27 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
01:29:27   2  GROUP BY pair,trend,gatt,gattn
01:29:27   3  ORDER BY pair,trend,gatt,gattn
01:29:27   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup  .00001003	     500    .064926761
usd_chf 	-1 nup up   -.0028407	     767    .075396575
usd_chf 	-1 up  nup .002673685	     806    -.06509418
usd_chf 	-1			       0
usd_chf 	 1 nup nup -.00001178	     401    .038442876
usd_chf 	 1 nup up  -.00292213	     738    .016780666
usd_chf 	 1 up  nup .002766519	     576    -.06192624

7 rows selected.

Elapsed: 00:00:00.01
01:29:27 SQL> 
01:29:27 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
01:29:27 SQL> CREATE TABLE chf_ms10 COMPRESS AS
01:29:27   2  SELECT
01:29:27   3  ydate
01:29:27   4  ,trend chf_trend
01:29:27   5  ,g4    chf_g4
01:29:27   6  ,gatt  chf_gatt
01:29:27   7  ,gattn	chf_gattn
01:29:27   8  FROM modsrc
01:29:27   9  /

Table created.

Elapsed: 00:00:00.05
01:29:27 SQL> 
01:29:27 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.06
01:29:27 SQL> 
01:29:27 SQL> -- rpt
01:29:27 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 01:00:00 2010-12-14 07:00:00	 1715	  -.0227      .0156
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	 2073	   -.016      .0145

Elapsed: 00:00:00.01
01:29:27 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 01:00:00 2010-12-14 07:00:00	       1715	 -.0227       .0156
	-1 2010-05-11 13:00:00 2010-12-15 00:00:00	       2077	  -.016       .0145

Elapsed: 00:00:00.03
01:29:27 SQL> 
01:29:27 SQL> -- I need a copy of q15 attributes
01:29:27 SQL> 
01:29:27 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.04
01:29:28 SQL> CREATE TABLE chf_att COMPRESS AS
01:29:28   2  SELECT
01:29:28   3  ydate
01:29:28   4  ,att00 chf_att00
01:29:28   5  ,att01 chf_att01
01:29:28   6  ,att02 chf_att02
01:29:28   7  ,att03 chf_att03
01:29:28   8  ,att04 chf_att04
01:29:28   9  ,att05 chf_att05
01:29:28  10  ,att06 chf_att06
01:29:28  11  ,att07 chf_att07
01:29:28  12  ,att08 chf_att08
01:29:28  13  ,att09 chf_att09
01:29:28  14  ,att10 chf_att10
01:29:28  15  ,att11 chf_att11
01:29:28  16  ,att12 chf_att12
01:29:28  17  ,att13 chf_att13
01:29:28  18  ,att14 chf_att14
01:29:28  19  ,att15 chf_att15
01:29:28  20  ,att16 chf_att16
01:29:28  21  ,att17 chf_att17
01:29:28  22  ,att18 chf_att18
01:29:28  23  ,att19 chf_att19
01:29:28  24  ,att20 chf_att20
01:29:28  25  ,att21 chf_att21
01:29:28  26  ,att22 chf_att22
01:29:28  27  ,att23 chf_att23
01:29:28  28  ,att24 chf_att24
01:29:28  29  ,att25 chf_att25
01:29:28  30  ,att26 chf_att26
01:29:28  31  ,att27 chf_att27
01:29:28  32  ,att28 chf_att28
01:29:28  33  ,att29 chf_att29
01:29:28  34  ,att30 chf_att30
01:29:28  35  ,att31 chf_att31
01:29:28  36  FROM q15
01:29:28  37  /

Table created.

Elapsed: 00:00:00.05
01:29:28 SQL> 
01:29:28 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
01:29:28 SQL> 
01:29:28 SQL> -- rpt
01:29:28 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.00
01:29:28 SQL> 
01:29:28 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
