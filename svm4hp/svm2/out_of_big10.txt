
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 16 18:56:32 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

18:56:32 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
18:56:32 SQL> 18:56:32 SQL> --
18:56:32 SQL> -- eur10.sql
18:56:32 SQL> --
18:56:32 SQL> 
18:56:32 SQL> -- Creates views and tables for backtesting a forex SVM strategy
18:56:32 SQL> 
18:56:32 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.02
18:56:32 SQL> 
18:56:32 SQL> -- I created di5min here:
18:56:32 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
18:56:32 SQL> 
18:56:32 SQL> CREATE OR REPLACE VIEW q11 AS
18:56:32   2  SELECT
18:56:32   3  pair
18:56:32   4  ,ydate
18:56:32   5  ,prdate
18:56:32   6  ,rownum rnum -- acts as t in my time-series
18:56:32   7  ,clse
18:56:32   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
18:56:32   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
18:56:32  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
18:56:32  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
18:56:32  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
18:56:32  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
18:56:32  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
18:56:32  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
18:56:32  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
18:56:32  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
18:56:32  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
18:56:32  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
18:56:32  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
18:56:32  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
18:56:32  22  FROM di5min WHERE pair LIKE'%eur%'
18:56:32  23  ORDER BY ydate
18:56:32  24  /

View created.

Elapsed: 00:00:00.05
18:56:32 SQL> 
18:56:32 SQL> -- rpt
18:56:32 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20825

Elapsed: 00:00:00.37
18:56:33 SQL> 
18:56:33 SQL> -- Calc deltas and gains
18:56:33 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.04
18:56:33 SQL> 
18:56:33 SQL> CREATE TABLE q13 COMPRESS AS
18:56:33   2  SELECT
18:56:33   3  pair
18:56:33   4  ,ydate
18:56:33   5  ,prdate
18:56:33   6  ,rnum
18:56:33   7  ,lg4
18:56:33   8  ,lg8
18:56:33   9  ,lg12
18:56:33  10  ,ld4
18:56:33  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
18:56:33  12  -- step by 1
18:56:33  13  ,clse-lg1 d01
18:56:33  14  ,lg1-lg2	d12
18:56:33  15  ,lg2-lg3	d23
18:56:33  16  ,lg3-lg4	d34
18:56:33  17  ,lg4-lg5	d45
18:56:33  18  ,lg5-lg6	d56
18:56:33  19  ,lg6-lg7	d67
18:56:33  20  ,lg7-lg8	d78
18:56:33  21  ,lg8-lg9	d89
18:56:33  22  -- step by 2
18:56:33  23  ,clse-lg2 d02
18:56:33  24  ,lg2-lg4 d24
18:56:33  25  ,lg4-lg6 d46
18:56:33  26  ,lg6-lg8 d68
18:56:33  27  -- step by 3
18:56:33  28  ,clse-lg3 d03
18:56:33  29  ,lg3-lg6	d36
18:56:33  30  ,lg6-lg9	d69
18:56:33  31  ,lg9-lg12 d912
18:56:33  32  -- step by 4
18:56:33  33  ,clse-lg4 d04
18:56:33  34  ,lg4-lg8	d48
18:56:33  35  ,lg8-lg12 d812
18:56:33  36  ,lg6-lg12 d612
18:56:33  37  ,lg12-lg18 d1218
18:56:33  38  --
18:56:33  39  ,ABS(clse-lg1)dc1
18:56:33  40  ,ABS(clse-lg2)dc2
18:56:33  41  ,ABS(clse-lg3)dc3
18:56:33  42  ,ABS(clse-lg4)dc4
18:56:33  43  ,ABS(clse-lg5)dc5
18:56:33  44  ,ABS(clse-lg6)dc6
18:56:33  45  ,ABS(clse-lg7)dc7
18:56:33  46  ,ABS(clse-lg8)dc8
18:56:33  47  ,ABS(clse-lg9)dc9
18:56:33  48  ,ABS(clse-lg12)dc12
18:56:33  49  ,ABS(clse-lg18)dc18
18:56:33  50  ,ABS(clse-lg24)dc24
18:56:33  51  ,ABS(clse-lg72)dc72
18:56:33  52  ,(ld4-clse) ug4
18:56:33  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
18:56:33  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
18:56:33  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
18:56:33  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
18:56:33  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
18:56:33  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
18:56:33  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
18:56:33  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
18:56:33  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
18:56:33  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
18:56:33  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
18:56:33  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
18:56:33  65  ,0+TO_CHAR(ydate,'D')d
18:56:33  66  ,0+TO_CHAR(ydate,'W')w
18:56:33  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
18:56:33  68  FROM q11
18:56:33  69  -- I dont want any NULL values from the LAG() functions:
18:56:33  70  WHERE lg72 > 0
18:56:33  71  ORDER BY pair,ydate
18:56:33  72  /

Table created.

Elapsed: 00:00:01.94
18:56:35 SQL> 
18:56:35 SQL> -- rpt
18:56:35 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10278
	-1	    9683

Elapsed: 00:00:00.06
18:56:35 SQL> 
18:56:35 SQL> -- Calc gains and ntiles
18:56:35 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.05
18:56:35 SQL> CREATE TABLE q15 COMPRESS AS
18:56:35   2  SELECT
18:56:35   3  pair
18:56:35   4  ,ydate
18:56:35   5  ,prdate -- Should be unique
18:56:35   6  ,trend -- +1 or -1
18:56:35   7  ,dc12 -- next statement needs this
18:56:35   8  -- Use NTILE() to derive some attributes
18:56:35   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
18:56:35  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
18:56:35  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
18:56:35  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
18:56:35  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
18:56:35  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
18:56:35  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
18:56:35  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
18:56:35  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
18:56:35  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
18:56:35  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
18:56:35  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
18:56:35  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
18:56:35  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
18:56:35  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
18:56:35  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
18:56:35  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
18:56:35  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
18:56:35  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
18:56:35  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
18:56:35  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
18:56:35  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
18:56:35  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
18:56:35  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
18:56:35  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
18:56:35  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
18:56:35  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
18:56:35  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
18:56:35  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
18:56:35  38  ,hh    att28
18:56:35  39  ,d     att29
18:56:35  40  ,w     att30
18:56:35  41  ,mpm   att31
18:56:35  42  ,trend att32
18:56:35  43  ,ug4 g4
18:56:35  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
18:56:35  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
18:56:35  46  FROM q13
18:56:35  47  ORDER BY pair,ydate
18:56:35  48  /

Table created.

Elapsed: 00:00:03.97
18:56:39 SQL> 
18:56:39 SQL> -- rpt
18:56:39 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
18:56:39   2  GROUP BY pair,trend,gatt,gattn
18:56:39   3  ORDER BY pair,trend,gatt,gattn
18:56:39   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001405	    1455    .035816673
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003679741	    4166    -.21385139
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014957	    1745    .035574649
eur_usd 	 1 nup up   -.0034226	    4202    .118183688
eur_usd 	 1 up  nup .003721841	    4321    -.14624769
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
18:56:39 SQL> 
18:56:39 SQL> -- rpt
18:56:39 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-16 18:50:00

Elapsed: 00:00:00.01
18:56:39 SQL> 
18:56:39 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.04
18:56:39 SQL> CREATE TABLE modsrc COMPRESS AS
18:56:39   2  SELECT
18:56:39   3  pair
18:56:39   4  ,ydate
18:56:39   5  ,prdate
18:56:39   6  ,trend
18:56:39   7  ,g4
18:56:39   8  ,gatt
18:56:39   9  ,gattn
18:56:39  10  ,dc12
18:56:39  11  FROM q15
18:56:39  12  /

Table created.

Elapsed: 00:00:00.12
18:56:39 SQL> 
18:56:39 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
18:56:39 SQL> 
18:56:39 SQL> -- rpt
18:56:39 SQL> 
18:56:39 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20825

Elapsed: 00:00:00.36
18:56:39 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
18:56:39 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.01
18:56:39 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
18:56:39 SQL> 
18:56:39 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
18:56:39   2  GROUP BY pair,trend,gatt,gattn
18:56:39   3  ORDER BY pair,trend,gatt,gattn
18:56:39   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001405	    1455    .035816673
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003679741	    4166    -.21385139
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014957	    1745    .035574649
eur_usd 	 1 nup up   -.0034226	    4202    .118183688
eur_usd 	 1 up  nup .003721841	    4321    -.14624769
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
18:56:39 SQL> 
18:56:39 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
18:56:39 SQL> CREATE TABLE eur_ms10 COMPRESS AS
18:56:39   2  SELECT
18:56:39   3  ydate
18:56:39   4  ,trend eur_trend
18:56:39   5  ,g4    eur_g4
18:56:39   6  ,gatt  eur_gatt
18:56:39   7  ,gattn eur_gattn
18:56:39   8  FROM modsrc
18:56:39   9  /

Table created.

Elapsed: 00:00:00.05
18:56:40 SQL> 
18:56:40 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
18:56:40 SQL> 
18:56:40 SQL> -- rpt
18:56:40 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 19:00:01 2010-12-16 18:05:00	10268	  -.0153      .0165
	-1 2010-09-10 19:30:01 2010-12-16 18:50:00	 9645	  -.0164      .0167

Elapsed: 00:00:00.02
18:56:40 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 19:00:01 2010-12-16 18:05:00	      10278	 -.0153       .0165
	-1 2010-09-10 19:30:01 2010-12-16 18:50:00	       9683	 -.0164       .0167

Elapsed: 00:00:00.02
18:56:40 SQL> 
18:56:40 SQL> -- I need a copy of q15 attributes
18:56:40 SQL> 
18:56:40 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.04
18:56:40 SQL> CREATE TABLE eur_att COMPRESS AS
18:56:40   2  SELECT
18:56:40   3  ydate
18:56:40   4  ,att00 eur_att00
18:56:40   5  ,att01 eur_att01
18:56:40   6  ,att02 eur_att02
18:56:40   7  ,att03 eur_att03
18:56:40   8  ,att04 eur_att04
18:56:40   9  ,att05 eur_att05
18:56:40  10  ,att06 eur_att06
18:56:40  11  ,att07 eur_att07
18:56:40  12  ,att08 eur_att08
18:56:40  13  ,att09 eur_att09
18:56:40  14  ,att10 eur_att10
18:56:40  15  ,att11 eur_att11
18:56:40  16  ,att12 eur_att12
18:56:40  17  ,att13 eur_att13
18:56:40  18  ,att14 eur_att14
18:56:40  19  ,att15 eur_att15
18:56:40  20  ,att16 eur_att16
18:56:40  21  ,att17 eur_att17
18:56:40  22  ,att18 eur_att18
18:56:40  23  ,att19 eur_att19
18:56:40  24  ,att20 eur_att20
18:56:40  25  ,att21 eur_att21
18:56:40  26  ,att22 eur_att22
18:56:40  27  ,att23 eur_att23
18:56:40  28  ,att24 eur_att24
18:56:40  29  ,att25 eur_att25
18:56:40  30  ,att26 eur_att26
18:56:40  31  ,att27 eur_att27
18:56:40  32  ,att28 eur_att28
18:56:40  33  ,att29 eur_att29
18:56:40  34  ,att30 eur_att30
18:56:40  35  ,att31 eur_att31
18:56:40  36  ,att32 eur_att32
18:56:40  37  FROM q15
18:56:40  38  /

Table created.

Elapsed: 00:00:00.13
18:56:40 SQL> 
18:56:40 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.44
18:56:40 SQL> 
18:56:40 SQL> -- rpt
18:56:40 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19961

Elapsed: 00:00:00.00
18:56:40 SQL> 
18:56:40 SQL> --
18:56:40 SQL> -- aud10.sql
18:56:40 SQL> --
18:56:40 SQL> 
18:56:40 SQL> -- Creates views and tables for backtesting a forex SVM strategy
18:56:40 SQL> 
18:56:40 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.31
18:56:41 SQL> 
18:56:41 SQL> -- I created di5min here:
18:56:41 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
18:56:41 SQL> 
18:56:41 SQL> CREATE OR REPLACE VIEW q11 AS
18:56:41   2  SELECT
18:56:41   3  pair
18:56:41   4  ,ydate
18:56:41   5  ,prdate
18:56:41   6  ,rownum rnum -- acts as t in my time-series
18:56:41   7  ,clse
18:56:41   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
18:56:41   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
18:56:41  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
18:56:41  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
18:56:41  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
18:56:41  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
18:56:41  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
18:56:41  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
18:56:41  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
18:56:41  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
18:56:41  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
18:56:41  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
18:56:41  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
18:56:41  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
18:56:41  22  FROM di5min WHERE pair LIKE'%aud%'
18:56:41  23  ORDER BY ydate
18:56:41  24  /

View created.

Elapsed: 00:00:00.04
18:56:41 SQL> 
18:56:41 SQL> -- rpt
18:56:41 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20822

Elapsed: 00:00:00.36
18:56:41 SQL> 
18:56:41 SQL> -- Calc deltas and gains
18:56:41 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.39
18:56:41 SQL> 
18:56:41 SQL> CREATE TABLE q13 COMPRESS AS
18:56:41   2  SELECT
18:56:41   3  pair
18:56:41   4  ,ydate
18:56:41   5  ,prdate
18:56:41   6  ,rnum
18:56:41   7  ,lg4
18:56:41   8  ,lg8
18:56:41   9  ,lg12
18:56:41  10  ,ld4
18:56:41  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
18:56:41  12  -- step by 1
18:56:41  13  ,clse-lg1 d01
18:56:41  14  ,lg1-lg2	d12
18:56:41  15  ,lg2-lg3	d23
18:56:41  16  ,lg3-lg4	d34
18:56:41  17  ,lg4-lg5	d45
18:56:41  18  ,lg5-lg6	d56
18:56:41  19  ,lg6-lg7	d67
18:56:41  20  ,lg7-lg8	d78
18:56:41  21  ,lg8-lg9	d89
18:56:41  22  -- step by 2
18:56:41  23  ,clse-lg2 d02
18:56:41  24  ,lg2-lg4 d24
18:56:41  25  ,lg4-lg6 d46
18:56:41  26  ,lg6-lg8 d68
18:56:41  27  -- step by 3
18:56:41  28  ,clse-lg3 d03
18:56:41  29  ,lg3-lg6	d36
18:56:41  30  ,lg6-lg9	d69
18:56:41  31  ,lg9-lg12 d912
18:56:41  32  -- step by 4
18:56:41  33  ,clse-lg4 d04
18:56:41  34  ,lg4-lg8	d48
18:56:41  35  ,lg8-lg12 d812
18:56:41  36  ,lg6-lg12 d612
18:56:41  37  ,lg12-lg18 d1218
18:56:41  38  --
18:56:41  39  ,ABS(clse-lg1)dc1
18:56:41  40  ,ABS(clse-lg2)dc2
18:56:41  41  ,ABS(clse-lg3)dc3
18:56:41  42  ,ABS(clse-lg4)dc4
18:56:41  43  ,ABS(clse-lg5)dc5
18:56:41  44  ,ABS(clse-lg6)dc6
18:56:41  45  ,ABS(clse-lg7)dc7
18:56:41  46  ,ABS(clse-lg8)dc8
18:56:41  47  ,ABS(clse-lg9)dc9
18:56:41  48  ,ABS(clse-lg12)dc12
18:56:41  49  ,ABS(clse-lg18)dc18
18:56:41  50  ,ABS(clse-lg24)dc24
18:56:41  51  ,ABS(clse-lg72)dc72
18:56:41  52  ,(ld4-clse) ug4
18:56:41  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
18:56:41  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
18:56:41  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
18:56:41  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
18:56:41  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
18:56:41  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
18:56:41  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
18:56:41  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
18:56:41  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
18:56:41  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
18:56:41  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
18:56:41  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
18:56:41  65  ,0+TO_CHAR(ydate,'D')d
18:56:41  66  ,0+TO_CHAR(ydate,'W')w
18:56:41  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
18:56:41  68  FROM q11
18:56:41  69  -- I dont want any NULL values from the LAG() functions:
18:56:41  70  WHERE lg72 > 0
18:56:41  71  ORDER BY pair,ydate
18:56:41  72  /

Table created.

Elapsed: 00:00:01.70
18:56:43 SQL> 
18:56:43 SQL> -- rpt
18:56:43 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10475
	-1	    9483

Elapsed: 00:00:00.03
18:56:43 SQL> 
18:56:43 SQL> -- Calc gains and ntiles
18:56:43 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.15
18:56:43 SQL> CREATE TABLE q15 COMPRESS AS
18:56:43   2  SELECT
18:56:43   3  pair
18:56:43   4  ,ydate
18:56:43   5  ,prdate -- Should be unique
18:56:43   6  ,trend -- +1 or -1
18:56:43   7  ,dc12 -- next statement needs this
18:56:43   8  -- Use NTILE() to derive some attributes
18:56:43   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
18:56:43  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
18:56:43  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
18:56:43  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
18:56:43  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
18:56:43  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
18:56:43  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
18:56:43  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
18:56:43  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
18:56:43  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
18:56:43  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
18:56:43  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
18:56:43  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
18:56:43  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
18:56:43  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
18:56:43  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
18:56:43  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
18:56:43  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
18:56:43  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
18:56:43  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
18:56:43  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
18:56:43  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
18:56:43  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
18:56:43  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
18:56:43  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
18:56:43  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
18:56:43  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
18:56:43  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
18:56:43  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
18:56:43  38  ,hh    att28
18:56:43  39  ,d     att29
18:56:43  40  ,w     att30
18:56:43  41  ,mpm   att31
18:56:43  42  ,trend att32
18:56:43  43  ,ug4 g4
18:56:43  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
18:56:43  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
18:56:43  46  FROM q13
18:56:43  47  ORDER BY pair,ydate
18:56:43  48  /

Table created.

Elapsed: 00:00:03.98
18:56:47 SQL> 
18:56:47 SQL> -- rpt
18:56:47 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
18:56:47   2  GROUP BY pair,trend,gatt,gattn
18:56:47   3  ORDER BY pair,trend,gatt,gattn
18:56:47   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002982832	    4325     .02387213
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.9028E-06	    1955    .023095913
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002943481	    4441    -.18113129
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
18:56:47 SQL> 
18:56:47 SQL> -- rpt
18:56:47 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-16 18:50:00

Elapsed: 00:00:00.01
18:56:47 SQL> 
18:56:47 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
18:56:48 SQL> CREATE TABLE modsrc COMPRESS AS
18:56:48   2  SELECT
18:56:48   3  pair
18:56:48   4  ,ydate
18:56:48   5  ,prdate
18:56:48   6  ,trend
18:56:48   7  ,g4
18:56:48   8  ,gatt
18:56:48   9  ,gattn
18:56:48  10  ,dc12
18:56:48  11  FROM q15
18:56:48  12  /

Table created.

Elapsed: 00:00:00.11
18:56:48 SQL> 
18:56:48 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
18:56:48 SQL> 
18:56:48 SQL> -- rpt
18:56:48 SQL> 
18:56:48 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.35
18:56:48 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
18:56:48 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
18:56:48 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
18:56:48 SQL> 
18:56:48 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
18:56:48   2  GROUP BY pair,trend,gatt,gattn
18:56:48   3  ORDER BY pair,trend,gatt,gattn
18:56:48   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002982832	    4325     .02387213
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.9028E-06	    1955    .023095913
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002943481	    4441    -.18113129
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
18:56:48 SQL> 
18:56:48 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
18:56:48 SQL> CREATE TABLE aud_ms10 COMPRESS AS
18:56:48   2  SELECT
18:56:48   3  ydate
18:56:48   4  ,trend aud_trend
18:56:48   5  ,g4    aud_g4
18:56:48   6  ,gatt  aud_gatt
18:56:48   7  ,gattn aud_gattn
18:56:48   8  FROM modsrc
18:56:48   9  /

Table created.

Elapsed: 00:00:00.12
18:56:48 SQL> 
18:56:48 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
18:56:49 SQL> 
18:56:49 SQL> -- rpt
18:56:49 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 19:00:01 2010-12-16 18:50:00	10453	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-16 18:30:00	 9457	   -.017      .0131

Elapsed: 00:00:00.02
18:56:49 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 19:00:01 2010-12-16 18:50:00	      10475	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-16 18:30:00	       9483	  -.017       .0131

Elapsed: 00:00:00.01
18:56:49 SQL> 
18:56:49 SQL> -- I need a copy of q15 attributes
18:56:49 SQL> 
18:56:49 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.03
18:56:49 SQL> CREATE TABLE aud_att COMPRESS AS
18:56:49   2  SELECT
18:56:49   3  ydate
18:56:49   4  ,att00 aud_att00
18:56:49   5  ,att01 aud_att01
18:56:49   6  ,att02 aud_att02
18:56:49   7  ,att03 aud_att03
18:56:49   8  ,att04 aud_att04
18:56:49   9  ,att05 aud_att05
18:56:49  10  ,att06 aud_att06
18:56:49  11  ,att07 aud_att07
18:56:49  12  ,att08 aud_att08
18:56:49  13  ,att09 aud_att09
18:56:49  14  ,att10 aud_att10
18:56:49  15  ,att11 aud_att11
18:56:49  16  ,att12 aud_att12
18:56:49  17  ,att13 aud_att13
18:56:49  18  ,att14 aud_att14
18:56:49  19  ,att15 aud_att15
18:56:49  20  ,att16 aud_att16
18:56:49  21  ,att17 aud_att17
18:56:49  22  ,att18 aud_att18
18:56:49  23  ,att19 aud_att19
18:56:49  24  ,att20 aud_att20
18:56:49  25  ,att21 aud_att21
18:56:49  26  ,att22 aud_att22
18:56:49  27  ,att23 aud_att23
18:56:49  28  ,att24 aud_att24
18:56:49  29  ,att25 aud_att25
18:56:49  30  ,att26 aud_att26
18:56:49  31  ,att27 aud_att27
18:56:49  32  ,att28 aud_att28
18:56:49  33  ,att29 aud_att29
18:56:49  34  ,att30 aud_att30
18:56:49  35  ,att31 aud_att31
18:56:49  36  ,att32 aud_att32
18:56:49  37  FROM q15
18:56:49  38  /

Table created.

Elapsed: 00:00:00.14
18:56:49 SQL> 
18:56:49 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
18:56:49 SQL> 
18:56:49 SQL> -- rpt
18:56:49 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.01
18:56:49 SQL> 
18:56:49 SQL> --
18:56:49 SQL> -- gbp10.sql
18:56:49 SQL> --
18:56:49 SQL> 
18:56:49 SQL> -- Creates views and tables for backtesting a forex SVM strategy
18:56:49 SQL> 
18:56:49 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.32
18:56:49 SQL> 
18:56:49 SQL> -- I created di5min here:
18:56:49 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
18:56:49 SQL> 
18:56:49 SQL> CREATE OR REPLACE VIEW q11 AS
18:56:49   2  SELECT
18:56:49   3  pair
18:56:49   4  ,ydate
18:56:49   5  ,prdate
18:56:49   6  ,rownum rnum -- acts as t in my time-series
18:56:49   7  ,clse
18:56:49   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
18:56:49   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
18:56:49  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
18:56:49  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
18:56:49  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
18:56:49  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
18:56:49  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
18:56:49  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
18:56:49  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
18:56:49  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
18:56:49  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
18:56:49  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
18:56:49  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
18:56:49  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
18:56:49  22  FROM di5min WHERE pair LIKE'%gbp%'
18:56:49  23  ORDER BY ydate
18:56:49  24  /

View created.

Elapsed: 00:00:00.05
18:56:50 SQL> 
18:56:50 SQL> -- rpt
18:56:50 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20824

Elapsed: 00:00:00.35
18:56:50 SQL> 
18:56:50 SQL> -- Calc deltas and gains
18:56:50 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.25
18:56:50 SQL> 
18:56:50 SQL> CREATE TABLE q13 COMPRESS AS
18:56:50   2  SELECT
18:56:50   3  pair
18:56:50   4  ,ydate
18:56:50   5  ,prdate
18:56:50   6  ,rnum
18:56:50   7  ,lg4
18:56:50   8  ,lg8
18:56:50   9  ,lg12
18:56:50  10  ,ld4
18:56:50  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
18:56:50  12  -- step by 1
18:56:50  13  ,clse-lg1 d01
18:56:50  14  ,lg1-lg2	d12
18:56:50  15  ,lg2-lg3	d23
18:56:50  16  ,lg3-lg4	d34
18:56:50  17  ,lg4-lg5	d45
18:56:50  18  ,lg5-lg6	d56
18:56:50  19  ,lg6-lg7	d67
18:56:50  20  ,lg7-lg8	d78
18:56:50  21  ,lg8-lg9	d89
18:56:50  22  -- step by 2
18:56:50  23  ,clse-lg2 d02
18:56:50  24  ,lg2-lg4 d24
18:56:50  25  ,lg4-lg6 d46
18:56:50  26  ,lg6-lg8 d68
18:56:50  27  -- step by 3
18:56:50  28  ,clse-lg3 d03
18:56:50  29  ,lg3-lg6	d36
18:56:50  30  ,lg6-lg9	d69
18:56:50  31  ,lg9-lg12 d912
18:56:50  32  -- step by 4
18:56:50  33  ,clse-lg4 d04
18:56:50  34  ,lg4-lg8	d48
18:56:50  35  ,lg8-lg12 d812
18:56:50  36  ,lg6-lg12 d612
18:56:50  37  ,lg12-lg18 d1218
18:56:50  38  --
18:56:50  39  ,ABS(clse-lg1)dc1
18:56:50  40  ,ABS(clse-lg2)dc2
18:56:50  41  ,ABS(clse-lg3)dc3
18:56:50  42  ,ABS(clse-lg4)dc4
18:56:50  43  ,ABS(clse-lg5)dc5
18:56:50  44  ,ABS(clse-lg6)dc6
18:56:50  45  ,ABS(clse-lg7)dc7
18:56:50  46  ,ABS(clse-lg8)dc8
18:56:50  47  ,ABS(clse-lg9)dc9
18:56:50  48  ,ABS(clse-lg12)dc12
18:56:50  49  ,ABS(clse-lg18)dc18
18:56:50  50  ,ABS(clse-lg24)dc24
18:56:50  51  ,ABS(clse-lg72)dc72
18:56:50  52  ,(ld4-clse) ug4
18:56:50  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
18:56:50  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
18:56:50  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
18:56:50  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
18:56:50  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
18:56:50  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
18:56:50  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
18:56:50  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
18:56:50  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
18:56:50  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
18:56:50  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
18:56:50  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
18:56:50  65  ,0+TO_CHAR(ydate,'D')d
18:56:50  66  ,0+TO_CHAR(ydate,'W')w
18:56:50  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
18:56:50  68  FROM q11
18:56:50  69  -- I dont want any NULL values from the LAG() functions:
18:56:50  70  WHERE lg72 > 0
18:56:50  71  ORDER BY pair,ydate
18:56:50  72  /

Table created.

Elapsed: 00:00:01.70
18:56:52 SQL> 
18:56:52 SQL> -- rpt
18:56:52 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9688
	-1	   10272

Elapsed: 00:00:00.03
18:56:52 SQL> 
18:56:52 SQL> -- Calc gains and ntiles
18:56:52 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.12
18:56:52 SQL> CREATE TABLE q15 COMPRESS AS
18:56:52   2  SELECT
18:56:52   3  pair
18:56:52   4  ,ydate
18:56:52   5  ,prdate -- Should be unique
18:56:52   6  ,trend -- +1 or -1
18:56:52   7  ,dc12 -- next statement needs this
18:56:52   8  -- Use NTILE() to derive some attributes
18:56:52   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
18:56:52  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
18:56:52  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
18:56:52  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
18:56:52  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
18:56:52  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
18:56:52  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
18:56:52  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
18:56:52  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
18:56:52  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
18:56:52  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
18:56:52  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
18:56:52  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
18:56:52  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
18:56:52  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
18:56:52  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
18:56:52  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
18:56:52  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
18:56:52  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
18:56:52  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
18:56:52  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
18:56:52  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
18:56:52  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
18:56:52  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
18:56:52  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
18:56:52  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
18:56:52  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
18:56:52  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
18:56:52  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
18:56:52  38  ,hh    att28
18:56:52  39  ,d     att29
18:56:52  40  ,w     att30
18:56:52  41  ,mpm   att31
18:56:52  42  ,trend att32
18:56:52  43  ,ug4 g4
18:56:52  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
18:56:52  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
18:56:52  46  FROM q13
18:56:52  47  ORDER BY pair,ydate
18:56:52  48  /

Table created.

Elapsed: 00:00:03.93
18:56:56 SQL> 
18:56:56 SQL> -- rpt
18:56:56 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
18:56:56   2  GROUP BY pair,trend,gatt,gattn
18:56:56   3  ORDER BY pair,trend,gatt,gattn
18:56:56   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -1.932E-07	    1812    .059868746
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003116339	    4422    -.08737445
gbp_usd 	 1 nup nup .000010299	    1624    .015603449
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003588784	    3883    -.16679901
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
18:56:56 SQL> 
18:56:56 SQL> -- rpt
18:56:56 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-16 18:50:00

Elapsed: 00:00:00.01
18:56:56 SQL> 
18:56:56 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.17
18:56:56 SQL> CREATE TABLE modsrc COMPRESS AS
18:56:56   2  SELECT
18:56:56   3  pair
18:56:56   4  ,ydate
18:56:56   5  ,prdate
18:56:56   6  ,trend
18:56:56   7  ,g4
18:56:56   8  ,gatt
18:56:56   9  ,gattn
18:56:56  10  ,dc12
18:56:56  11  FROM q15
18:56:56  12  /

Table created.

Elapsed: 00:00:00.09
18:56:56 SQL> 
18:56:56 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.63
18:56:57 SQL> 
18:56:57 SQL> -- rpt
18:56:57 SQL> 
18:56:57 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20824

Elapsed: 00:00:00.35
18:56:57 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
18:56:57 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
18:56:57 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
18:56:57 SQL> 
18:56:57 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
18:56:57   2  GROUP BY pair,trend,gatt,gattn
18:56:57   3  ORDER BY pair,trend,gatt,gattn
18:56:57   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -1.932E-07	    1812    .059868746
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003116339	    4422    -.08737445
gbp_usd 	 1 nup nup .000010299	    1624    .015603449
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003588784	    3883    -.16679901
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
18:56:57 SQL> 
18:56:57 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
18:56:57 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
18:56:57   2  SELECT
18:56:57   3  ydate
18:56:57   4  ,trend gbp_trend
18:56:57   5  ,g4    gbp_g4
18:56:57   6  ,gatt  gbp_gatt
18:56:57   7  ,gattn gbp_gattn
18:56:57   8  FROM modsrc
18:56:57   9  /

Table created.

Elapsed: 00:00:00.07
18:56:57 SQL> 
18:56:57 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
18:56:58 SQL> 
18:56:58 SQL> -- rpt
18:56:58 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 00:05:01 2010-12-16 18:50:00	 9640	  -.0194      .0179
	-1 2010-09-10 19:00:01 2010-12-16 07:30:00	10272	  -.0153      .0159

Elapsed: 00:00:00.02
18:56:58 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 00:05:01 2010-12-16 18:50:00	       9688	 -.0194       .0179
	-1 2010-09-10 19:00:01 2010-12-16 07:30:00	      10272	 -.0153       .0159

Elapsed: 00:00:00.01
18:56:58 SQL> 
18:56:58 SQL> -- I need a copy of q15 attributes
18:56:58 SQL> 
18:56:58 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.04
18:56:58 SQL> CREATE TABLE gbp_att COMPRESS AS
18:56:58   2  SELECT
18:56:58   3  ydate
18:56:58   4  ,att00 gbp_att00
18:56:58   5  ,att01 gbp_att01
18:56:58   6  ,att02 gbp_att02
18:56:58   7  ,att03 gbp_att03
18:56:58   8  ,att04 gbp_att04
18:56:58   9  ,att05 gbp_att05
18:56:58  10  ,att06 gbp_att06
18:56:58  11  ,att07 gbp_att07
18:56:58  12  ,att08 gbp_att08
18:56:58  13  ,att09 gbp_att09
18:56:58  14  ,att10 gbp_att10
18:56:58  15  ,att11 gbp_att11
18:56:58  16  ,att12 gbp_att12
18:56:58  17  ,att13 gbp_att13
18:56:58  18  ,att14 gbp_att14
18:56:58  19  ,att15 gbp_att15
18:56:58  20  ,att16 gbp_att16
18:56:58  21  ,att17 gbp_att17
18:56:58  22  ,att18 gbp_att18
18:56:58  23  ,att19 gbp_att19
18:56:58  24  ,att20 gbp_att20
18:56:58  25  ,att21 gbp_att21
18:56:58  26  ,att22 gbp_att22
18:56:58  27  ,att23 gbp_att23
18:56:58  28  ,att24 gbp_att24
18:56:58  29  ,att25 gbp_att25
18:56:58  30  ,att26 gbp_att26
18:56:58  31  ,att27 gbp_att27
18:56:58  32  ,att28 gbp_att28
18:56:58  33  ,att29 gbp_att29
18:56:58  34  ,att30 gbp_att30
18:56:58  35  ,att31 gbp_att31
18:56:58  36  ,att32 gbp_att32
18:56:58  37  FROM q15
18:56:58  38  /

Table created.

Elapsed: 00:00:00.15
18:56:58 SQL> 
18:56:58 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.44
18:56:58 SQL> 
18:56:58 SQL> -- rpt
18:56:58 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19960

Elapsed: 00:00:00.01
18:56:58 SQL> 
18:56:58 SQL> --
18:56:58 SQL> -- jpy10.sql
18:56:58 SQL> --
18:56:58 SQL> 
18:56:58 SQL> -- Creates views and tables for backtesting a forex SVM strategy
18:56:58 SQL> 
18:56:58 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.31
18:56:58 SQL> 
18:56:58 SQL> -- I created di5min here:
18:56:58 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
18:56:58 SQL> 
18:56:58 SQL> CREATE OR REPLACE VIEW q11 AS
18:56:58   2  SELECT
18:56:58   3  pair
18:56:58   4  ,ydate
18:56:58   5  ,prdate
18:56:58   6  ,rownum rnum -- acts as t in my time-series
18:56:58   7  ,clse
18:56:58   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
18:56:58   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
18:56:58  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
18:56:58  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
18:56:58  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
18:56:58  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
18:56:58  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
18:56:58  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
18:56:58  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
18:56:58  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
18:56:58  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
18:56:58  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
18:56:58  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
18:56:58  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
18:56:58  22  FROM di5min WHERE pair LIKE'%jpy%'
18:56:58  23  ORDER BY ydate
18:56:58  24  /

View created.

Elapsed: 00:00:00.05
18:56:59 SQL> 
18:56:59 SQL> -- rpt
18:56:59 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20825

Elapsed: 00:00:00.35
18:56:59 SQL> 
18:56:59 SQL> -- Calc deltas and gains
18:56:59 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
18:56:59 SQL> 
18:56:59 SQL> CREATE TABLE q13 COMPRESS AS
18:56:59   2  SELECT
18:56:59   3  pair
18:56:59   4  ,ydate
18:56:59   5  ,prdate
18:56:59   6  ,rnum
18:56:59   7  ,lg4
18:56:59   8  ,lg8
18:56:59   9  ,lg12
18:56:59  10  ,ld4
18:56:59  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
18:56:59  12  -- step by 1
18:56:59  13  ,clse-lg1 d01
18:56:59  14  ,lg1-lg2	d12
18:56:59  15  ,lg2-lg3	d23
18:56:59  16  ,lg3-lg4	d34
18:56:59  17  ,lg4-lg5	d45
18:56:59  18  ,lg5-lg6	d56
18:56:59  19  ,lg6-lg7	d67
18:56:59  20  ,lg7-lg8	d78
18:56:59  21  ,lg8-lg9	d89
18:56:59  22  -- step by 2
18:56:59  23  ,clse-lg2 d02
18:56:59  24  ,lg2-lg4 d24
18:56:59  25  ,lg4-lg6 d46
18:56:59  26  ,lg6-lg8 d68
18:56:59  27  -- step by 3
18:56:59  28  ,clse-lg3 d03
18:56:59  29  ,lg3-lg6	d36
18:56:59  30  ,lg6-lg9	d69
18:56:59  31  ,lg9-lg12 d912
18:56:59  32  -- step by 4
18:56:59  33  ,clse-lg4 d04
18:56:59  34  ,lg4-lg8	d48
18:56:59  35  ,lg8-lg12 d812
18:56:59  36  ,lg6-lg12 d612
18:56:59  37  ,lg12-lg18 d1218
18:56:59  38  --
18:56:59  39  ,ABS(clse-lg1)dc1
18:56:59  40  ,ABS(clse-lg2)dc2
18:56:59  41  ,ABS(clse-lg3)dc3
18:56:59  42  ,ABS(clse-lg4)dc4
18:56:59  43  ,ABS(clse-lg5)dc5
18:56:59  44  ,ABS(clse-lg6)dc6
18:56:59  45  ,ABS(clse-lg7)dc7
18:56:59  46  ,ABS(clse-lg8)dc8
18:56:59  47  ,ABS(clse-lg9)dc9
18:56:59  48  ,ABS(clse-lg12)dc12
18:56:59  49  ,ABS(clse-lg18)dc18
18:56:59  50  ,ABS(clse-lg24)dc24
18:56:59  51  ,ABS(clse-lg72)dc72
18:56:59  52  ,(ld4-clse) ug4
18:56:59  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
18:56:59  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
18:56:59  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
18:56:59  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
18:56:59  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
18:56:59  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
18:56:59  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
18:56:59  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
18:56:59  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
18:56:59  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
18:56:59  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
18:56:59  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
18:56:59  65  ,0+TO_CHAR(ydate,'D')d
18:56:59  66  ,0+TO_CHAR(ydate,'W')w
18:56:59  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
18:56:59  68  FROM q11
18:56:59  69  -- I dont want any NULL values from the LAG() functions:
18:56:59  70  WHERE lg72 > 0
18:56:59  71  ORDER BY pair,ydate
18:56:59  72  /

Table created.

Elapsed: 00:00:01.70
18:57:01 SQL> 
18:57:01 SQL> -- rpt
18:57:01 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9301
	-1	   10660

Elapsed: 00:00:00.03
18:57:01 SQL> 
18:57:01 SQL> -- Calc gains and ntiles
18:57:01 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.18
18:57:01 SQL> CREATE TABLE q15 COMPRESS AS
18:57:01   2  SELECT
18:57:01   3  pair
18:57:01   4  ,ydate
18:57:01   5  ,prdate -- Should be unique
18:57:01   6  ,trend -- +1 or -1
18:57:01   7  ,dc12 -- next statement needs this
18:57:01   8  -- Use NTILE() to derive some attributes
18:57:01   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
18:57:01  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
18:57:01  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
18:57:01  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
18:57:01  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
18:57:01  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
18:57:01  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
18:57:01  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
18:57:01  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
18:57:01  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
18:57:01  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
18:57:01  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
18:57:01  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
18:57:01  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
18:57:01  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
18:57:01  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
18:57:01  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
18:57:01  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
18:57:01  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
18:57:01  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
18:57:01  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
18:57:01  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
18:57:01  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
18:57:01  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
18:57:01  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
18:57:01  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
18:57:01  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
18:57:01  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
18:57:01  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
18:57:01  38  ,hh    att28
18:57:01  39  ,d     att29
18:57:01  40  ,w     att30
18:57:01  41  ,mpm   att31
18:57:01  42  ,trend att32
18:57:01  43  ,ug4 g4
18:57:01  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
18:57:01  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
18:57:01  46  FROM q13
18:57:01  47  ORDER BY pair,ydate
18:57:01  48  /

Table created.

Elapsed: 00:00:04.08
18:57:05 SQL> 
18:57:05 SQL> -- rpt
18:57:05 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
18:57:05   2  GROUP BY pair,trend,gatt,gattn
18:57:05   3  ORDER BY pair,trend,gatt,gattn
18:57:05   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13693752	    5178     .02198879
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     169
usd_jpy 	 1 nup up  -.13366787	    4977    -.01807639
usd_jpy 	 1 up  nup .151893351	    4121    .184064016
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
18:57:05 SQL> 
18:57:05 SQL> -- rpt
18:57:05 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-16 18:50:00

Elapsed: 00:00:00.01
18:57:05 SQL> 
18:57:05 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.14
18:57:05 SQL> CREATE TABLE modsrc COMPRESS AS
18:57:05   2  SELECT
18:57:05   3  pair
18:57:05   4  ,ydate
18:57:05   5  ,prdate
18:57:05   6  ,trend
18:57:05   7  ,g4
18:57:05   8  ,gatt
18:57:05   9  ,gattn
18:57:05  10  ,dc12
18:57:05  11  FROM q15
18:57:05  12  /

Table created.

Elapsed: 00:00:00.08
18:57:05 SQL> 
18:57:05 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
18:57:06 SQL> 
18:57:06 SQL> -- rpt
18:57:06 SQL> 
18:57:06 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20825

Elapsed: 00:00:00.34
18:57:06 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.01
18:57:06 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
18:57:06 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.01
18:57:06 SQL> 
18:57:06 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
18:57:06   2  GROUP BY pair,trend,gatt,gattn
18:57:06   3  ORDER BY pair,trend,gatt,gattn
18:57:06   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13693752	    5178     .02198879
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     169
usd_jpy 	 1 nup up  -.13366787	    4977    -.01807639
usd_jpy 	 1 up  nup .151893351	    4121    .184064016
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
18:57:06 SQL> 
18:57:06 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
18:57:06 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
18:57:06   2  SELECT
18:57:06   3  ydate
18:57:06   4  ,trend jpy_trend
18:57:06   5  ,g4    jpy_g4
18:57:06   6  ,gatt  jpy_gatt
18:57:06   7  ,gattn jpy_gattn
18:57:06   8  FROM modsrc
18:57:06   9  /

Table created.

Elapsed: 00:00:00.07
18:57:06 SQL> 
18:57:06 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
18:57:06 SQL> 
18:57:06 SQL> -- rpt
18:57:06 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 19:00:01 2010-12-16 18:25:00	 9267	   -1.07	1.5
	-1 2010-09-12 23:35:01 2010-12-16 18:50:00	10646	 -1.0775       1.99

Elapsed: 00:00:00.02
18:57:06 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 19:00:01 2010-12-16 18:25:00	       9301	  -1.07 	1.5
	-1 2010-09-12 23:35:01 2010-12-16 18:50:00	      10660	-1.0775        1.99

Elapsed: 00:00:00.02
18:57:06 SQL> 
18:57:06 SQL> -- I need a copy of q15 attributes
18:57:06 SQL> 
18:57:06 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.04
18:57:06 SQL> CREATE TABLE jpy_att COMPRESS AS
18:57:06   2  SELECT
18:57:06   3  ydate
18:57:06   4  ,att00 jpy_att00
18:57:06   5  ,att01 jpy_att01
18:57:06   6  ,att02 jpy_att02
18:57:06   7  ,att03 jpy_att03
18:57:06   8  ,att04 jpy_att04
18:57:06   9  ,att05 jpy_att05
18:57:06  10  ,att06 jpy_att06
18:57:06  11  ,att07 jpy_att07
18:57:06  12  ,att08 jpy_att08
18:57:06  13  ,att09 jpy_att09
18:57:06  14  ,att10 jpy_att10
18:57:06  15  ,att11 jpy_att11
18:57:06  16  ,att12 jpy_att12
18:57:06  17  ,att13 jpy_att13
18:57:06  18  ,att14 jpy_att14
18:57:06  19  ,att15 jpy_att15
18:57:06  20  ,att16 jpy_att16
18:57:06  21  ,att17 jpy_att17
18:57:06  22  ,att18 jpy_att18
18:57:06  23  ,att19 jpy_att19
18:57:06  24  ,att20 jpy_att20
18:57:06  25  ,att21 jpy_att21
18:57:06  26  ,att22 jpy_att22
18:57:06  27  ,att23 jpy_att23
18:57:06  28  ,att24 jpy_att24
18:57:06  29  ,att25 jpy_att25
18:57:06  30  ,att26 jpy_att26
18:57:06  31  ,att27 jpy_att27
18:57:06  32  ,att28 jpy_att28
18:57:06  33  ,att29 jpy_att29
18:57:06  34  ,att30 jpy_att30
18:57:06  35  ,att31 jpy_att31
18:57:06  36  ,att32 jpy_att32
18:57:06  37  FROM q15
18:57:06  38  /

Table created.

Elapsed: 00:00:00.13
18:57:06 SQL> 
18:57:06 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.46
18:57:07 SQL> 
18:57:07 SQL> -- rpt
18:57:07 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19961

Elapsed: 00:00:00.00
18:57:07 SQL> 
18:57:07 SQL> --
18:57:07 SQL> -- cad10.sql
18:57:07 SQL> --
18:57:07 SQL> 
18:57:07 SQL> -- Creates views and tables for backtesting a forex SVM strategy
18:57:07 SQL> 
18:57:07 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.31
18:57:07 SQL> 
18:57:07 SQL> -- I created di5min here:
18:57:07 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
18:57:07 SQL> 
18:57:07 SQL> CREATE OR REPLACE VIEW q11 AS
18:57:07   2  SELECT
18:57:07   3  pair
18:57:07   4  ,ydate
18:57:07   5  ,prdate
18:57:07   6  ,rownum rnum -- acts as t in my time-series
18:57:07   7  ,clse
18:57:07   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
18:57:07   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
18:57:07  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
18:57:07  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
18:57:07  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
18:57:07  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
18:57:07  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
18:57:07  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
18:57:07  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
18:57:07  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
18:57:07  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
18:57:07  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
18:57:07  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
18:57:07  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
18:57:07  22  FROM di5min WHERE pair LIKE'%cad%'
18:57:07  23  ORDER BY ydate
18:57:07  24  /

View created.

Elapsed: 00:00:00.04
18:57:07 SQL> 
18:57:07 SQL> -- rpt
18:57:07 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20821

Elapsed: 00:00:00.35
18:57:08 SQL> 
18:57:08 SQL> -- Calc deltas and gains
18:57:08 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.24
18:57:08 SQL> 
18:57:08 SQL> CREATE TABLE q13 COMPRESS AS
18:57:08   2  SELECT
18:57:08   3  pair
18:57:08   4  ,ydate
18:57:08   5  ,prdate
18:57:08   6  ,rnum
18:57:08   7  ,lg4
18:57:08   8  ,lg8
18:57:08   9  ,lg12
18:57:08  10  ,ld4
18:57:08  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
18:57:08  12  -- step by 1
18:57:08  13  ,clse-lg1 d01
18:57:08  14  ,lg1-lg2	d12
18:57:08  15  ,lg2-lg3	d23
18:57:08  16  ,lg3-lg4	d34
18:57:08  17  ,lg4-lg5	d45
18:57:08  18  ,lg5-lg6	d56
18:57:08  19  ,lg6-lg7	d67
18:57:08  20  ,lg7-lg8	d78
18:57:08  21  ,lg8-lg9	d89
18:57:08  22  -- step by 2
18:57:08  23  ,clse-lg2 d02
18:57:08  24  ,lg2-lg4 d24
18:57:08  25  ,lg4-lg6 d46
18:57:08  26  ,lg6-lg8 d68
18:57:08  27  -- step by 3
18:57:08  28  ,clse-lg3 d03
18:57:08  29  ,lg3-lg6	d36
18:57:08  30  ,lg6-lg9	d69
18:57:08  31  ,lg9-lg12 d912
18:57:08  32  -- step by 4
18:57:08  33  ,clse-lg4 d04
18:57:08  34  ,lg4-lg8	d48
18:57:08  35  ,lg8-lg12 d812
18:57:08  36  ,lg6-lg12 d612
18:57:08  37  ,lg12-lg18 d1218
18:57:08  38  --
18:57:08  39  ,ABS(clse-lg1)dc1
18:57:08  40  ,ABS(clse-lg2)dc2
18:57:08  41  ,ABS(clse-lg3)dc3
18:57:08  42  ,ABS(clse-lg4)dc4
18:57:08  43  ,ABS(clse-lg5)dc5
18:57:08  44  ,ABS(clse-lg6)dc6
18:57:08  45  ,ABS(clse-lg7)dc7
18:57:08  46  ,ABS(clse-lg8)dc8
18:57:08  47  ,ABS(clse-lg9)dc9
18:57:08  48  ,ABS(clse-lg12)dc12
18:57:08  49  ,ABS(clse-lg18)dc18
18:57:08  50  ,ABS(clse-lg24)dc24
18:57:08  51  ,ABS(clse-lg72)dc72
18:57:08  52  ,(ld4-clse) ug4
18:57:08  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
18:57:08  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
18:57:08  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
18:57:08  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
18:57:08  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
18:57:08  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
18:57:08  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
18:57:08  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
18:57:08  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
18:57:08  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
18:57:08  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
18:57:08  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
18:57:08  65  ,0+TO_CHAR(ydate,'D')d
18:57:08  66  ,0+TO_CHAR(ydate,'W')w
18:57:08  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
18:57:08  68  FROM q11
18:57:08  69  -- I dont want any NULL values from the LAG() functions:
18:57:08  70  WHERE lg72 > 0
18:57:08  71  ORDER BY pair,ydate
18:57:08  72  /

Table created.

Elapsed: 00:00:01.70
18:57:10 SQL> 
18:57:10 SQL> -- rpt
18:57:10 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9020
	-1	   10937

Elapsed: 00:00:00.03
18:57:10 SQL> 
18:57:10 SQL> -- Calc gains and ntiles
18:57:10 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.18
18:57:10 SQL> CREATE TABLE q15 COMPRESS AS
18:57:10   2  SELECT
18:57:10   3  pair
18:57:10   4  ,ydate
18:57:10   5  ,prdate -- Should be unique
18:57:10   6  ,trend -- +1 or -1
18:57:10   7  ,dc12 -- next statement needs this
18:57:10   8  -- Use NTILE() to derive some attributes
18:57:10   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
18:57:10  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
18:57:10  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
18:57:10  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
18:57:10  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
18:57:10  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
18:57:10  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
18:57:10  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
18:57:10  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
18:57:10  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
18:57:10  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
18:57:10  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
18:57:10  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
18:57:10  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
18:57:10  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
18:57:10  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
18:57:10  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
18:57:10  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
18:57:10  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
18:57:10  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
18:57:10  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
18:57:10  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
18:57:10  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
18:57:10  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
18:57:10  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
18:57:10  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
18:57:10  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
18:57:10  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
18:57:10  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
18:57:10  38  ,hh    att28
18:57:10  39  ,d     att29
18:57:10  40  ,w     att30
18:57:10  41  ,mpm   att31
18:57:10  42  ,trend att32
18:57:10  43  ,ug4 g4
18:57:10  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
18:57:10  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
18:57:10  46  FROM q13
18:57:10  47  ORDER BY pair,ydate
18:57:10  48  /

Table created.

Elapsed: 00:00:03.98
18:57:14 SQL> 
18:57:14 SQL> -- rpt
18:57:14 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
18:57:14   2  GROUP BY pair,trend,gatt,gattn
18:57:14   3  ORDER BY pair,trend,gatt,gattn
18:57:14   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	 1 nup nup -.00001398	    2054    -.06558564
usd_cad 	 1 nup up   -.0023884	    3860    .000063255
usd_cad 	 1 up  nup .002591964	    3058    .003628991
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
18:57:14 SQL> 
18:57:14 SQL> -- rpt
18:57:14 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-16 18:50:00

Elapsed: 00:00:00.01
18:57:14 SQL> 
18:57:14 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
18:57:14 SQL> CREATE TABLE modsrc COMPRESS AS
18:57:14   2  SELECT
18:57:14   3  pair
18:57:14   4  ,ydate
18:57:14   5  ,prdate
18:57:14   6  ,trend
18:57:14   7  ,g4
18:57:14   8  ,gatt
18:57:14   9  ,gattn
18:57:14  10  ,dc12
18:57:14  11  FROM q15
18:57:14  12  /

Table created.

Elapsed: 00:00:00.09
18:57:14 SQL> 
18:57:14 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
18:57:14 SQL> 
18:57:14 SQL> -- rpt
18:57:14 SQL> 
18:57:14 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.35
18:57:15 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
18:57:15 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
18:57:15 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
18:57:15 SQL> 
18:57:15 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
18:57:15   2  GROUP BY pair,trend,gatt,gattn
18:57:15   3  ORDER BY pair,trend,gatt,gattn
18:57:15   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	 1 nup nup -.00001398	    2054    -.06558564
usd_cad 	 1 nup up   -.0023884	    3860    .000063255
usd_cad 	 1 up  nup .002591964	    3058    .003628991
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.03
18:57:15 SQL> 
18:57:15 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
18:57:15 SQL> CREATE TABLE cad_ms10 COMPRESS AS
18:57:15   2  SELECT
18:57:15   3  ydate
18:57:15   4  ,trend cad_trend
18:57:15   5  ,g4    cad_g4
18:57:15   6  ,gatt  cad_gatt
18:57:15   7  ,gattn cad_gattn
18:57:15   8  FROM modsrc
18:57:15   9  /

Table created.

Elapsed: 00:00:00.07
18:57:15 SQL> 
18:57:15 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
18:57:15 SQL> 
18:57:15 SQL> -- rpt
18:57:15 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 19:00:01 2010-12-16 18:50:00	 8972	  -.0089      .0151
	-1 2010-09-12 23:30:01 2010-12-16 14:45:00	10937	  -.0107      .0147

Elapsed: 00:00:00.02
18:57:15 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 19:00:01 2010-12-16 18:50:00	       9020	 -.0089       .0151
	-1 2010-09-12 23:30:01 2010-12-16 14:45:00	      10937	 -.0107       .0147

Elapsed: 00:00:00.02
18:57:15 SQL> 
18:57:15 SQL> -- I need a copy of q15 attributes
18:57:15 SQL> 
18:57:15 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.03
18:57:15 SQL> CREATE TABLE cad_att COMPRESS AS
18:57:15   2  SELECT
18:57:15   3  ydate
18:57:15   4  ,att00 cad_att00
18:57:15   5  ,att01 cad_att01
18:57:15   6  ,att02 cad_att02
18:57:15   7  ,att03 cad_att03
18:57:15   8  ,att04 cad_att04
18:57:15   9  ,att05 cad_att05
18:57:15  10  ,att06 cad_att06
18:57:15  11  ,att07 cad_att07
18:57:15  12  ,att08 cad_att08
18:57:15  13  ,att09 cad_att09
18:57:15  14  ,att10 cad_att10
18:57:15  15  ,att11 cad_att11
18:57:15  16  ,att12 cad_att12
18:57:15  17  ,att13 cad_att13
18:57:15  18  ,att14 cad_att14
18:57:15  19  ,att15 cad_att15
18:57:15  20  ,att16 cad_att16
18:57:15  21  ,att17 cad_att17
18:57:15  22  ,att18 cad_att18
18:57:15  23  ,att19 cad_att19
18:57:15  24  ,att20 cad_att20
18:57:15  25  ,att21 cad_att21
18:57:15  26  ,att22 cad_att22
18:57:15  27  ,att23 cad_att23
18:57:15  28  ,att24 cad_att24
18:57:15  29  ,att25 cad_att25
18:57:15  30  ,att26 cad_att26
18:57:15  31  ,att27 cad_att27
18:57:15  32  ,att28 cad_att28
18:57:15  33  ,att29 cad_att29
18:57:15  34  ,att30 cad_att30
18:57:15  35  ,att31 cad_att31
18:57:15  36  ,att32 cad_att32
18:57:15  37  FROM q15
18:57:15  38  /

Table created.

Elapsed: 00:00:00.14
18:57:15 SQL> 
18:57:15 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.41
18:57:15 SQL> 
18:57:15 SQL> -- rpt
18:57:15 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.00
18:57:15 SQL> 
18:57:15 SQL> --
18:57:15 SQL> -- chf10.sql
18:57:15 SQL> --
18:57:15 SQL> 
18:57:15 SQL> -- Creates views and tables for backtesting a forex SVM strategy
18:57:15 SQL> 
18:57:15 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.35
18:57:16 SQL> 
18:57:16 SQL> -- I created di5min here:
18:57:16 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
18:57:16 SQL> 
18:57:16 SQL> CREATE OR REPLACE VIEW q11 AS
18:57:16   2  SELECT
18:57:16   3  pair
18:57:16   4  ,ydate
18:57:16   5  ,prdate
18:57:16   6  ,rownum rnum -- acts as t in my time-series
18:57:16   7  ,clse
18:57:16   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
18:57:16   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
18:57:16  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
18:57:16  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
18:57:16  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
18:57:16  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
18:57:16  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
18:57:16  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
18:57:16  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
18:57:16  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
18:57:16  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
18:57:16  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
18:57:16  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
18:57:16  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
18:57:16  22  FROM di5min WHERE pair LIKE'%chf%'
18:57:16  23  ORDER BY ydate
18:57:16  24  /

View created.

Elapsed: 00:00:00.03
18:57:16 SQL> 
18:57:16 SQL> -- rpt
18:57:16 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20824

Elapsed: 00:00:00.34
18:57:16 SQL> 
18:57:16 SQL> -- Calc deltas and gains
18:57:16 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.27
18:57:16 SQL> 
18:57:16 SQL> CREATE TABLE q13 COMPRESS AS
18:57:16   2  SELECT
18:57:16   3  pair
18:57:16   4  ,ydate
18:57:16   5  ,prdate
18:57:16   6  ,rnum
18:57:16   7  ,lg4
18:57:16   8  ,lg8
18:57:16   9  ,lg12
18:57:16  10  ,ld4
18:57:16  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
18:57:16  12  -- step by 1
18:57:16  13  ,clse-lg1 d01
18:57:16  14  ,lg1-lg2	d12
18:57:16  15  ,lg2-lg3	d23
18:57:16  16  ,lg3-lg4	d34
18:57:16  17  ,lg4-lg5	d45
18:57:16  18  ,lg5-lg6	d56
18:57:16  19  ,lg6-lg7	d67
18:57:16  20  ,lg7-lg8	d78
18:57:16  21  ,lg8-lg9	d89
18:57:16  22  -- step by 2
18:57:16  23  ,clse-lg2 d02
18:57:16  24  ,lg2-lg4 d24
18:57:16  25  ,lg4-lg6 d46
18:57:16  26  ,lg6-lg8 d68
18:57:16  27  -- step by 3
18:57:16  28  ,clse-lg3 d03
18:57:16  29  ,lg3-lg6	d36
18:57:16  30  ,lg6-lg9	d69
18:57:16  31  ,lg9-lg12 d912
18:57:16  32  -- step by 4
18:57:16  33  ,clse-lg4 d04
18:57:16  34  ,lg4-lg8	d48
18:57:16  35  ,lg8-lg12 d812
18:57:16  36  ,lg6-lg12 d612
18:57:16  37  ,lg12-lg18 d1218
18:57:16  38  --
18:57:16  39  ,ABS(clse-lg1)dc1
18:57:16  40  ,ABS(clse-lg2)dc2
18:57:16  41  ,ABS(clse-lg3)dc3
18:57:16  42  ,ABS(clse-lg4)dc4
18:57:16  43  ,ABS(clse-lg5)dc5
18:57:16  44  ,ABS(clse-lg6)dc6
18:57:16  45  ,ABS(clse-lg7)dc7
18:57:16  46  ,ABS(clse-lg8)dc8
18:57:16  47  ,ABS(clse-lg9)dc9
18:57:16  48  ,ABS(clse-lg12)dc12
18:57:16  49  ,ABS(clse-lg18)dc18
18:57:16  50  ,ABS(clse-lg24)dc24
18:57:16  51  ,ABS(clse-lg72)dc72
18:57:16  52  ,(ld4-clse) ug4
18:57:16  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
18:57:16  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
18:57:16  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
18:57:16  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
18:57:16  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
18:57:16  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
18:57:16  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
18:57:16  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
18:57:16  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
18:57:16  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
18:57:16  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
18:57:16  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
18:57:16  65  ,0+TO_CHAR(ydate,'D')d
18:57:16  66  ,0+TO_CHAR(ydate,'W')w
18:57:16  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
18:57:16  68  FROM q11
18:57:16  69  -- I dont want any NULL values from the LAG() functions:
18:57:16  70  WHERE lg72 > 0
18:57:16  71  ORDER BY pair,ydate
18:57:16  72  /

Table created.

Elapsed: 00:00:01.67
18:57:18 SQL> 
18:57:18 SQL> -- rpt
18:57:18 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9319
	-1	   10641

Elapsed: 00:00:00.03
18:57:18 SQL> 
18:57:18 SQL> -- Calc gains and ntiles
18:57:18 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.12
18:57:18 SQL> CREATE TABLE q15 COMPRESS AS
18:57:18   2  SELECT
18:57:18   3  pair
18:57:18   4  ,ydate
18:57:18   5  ,prdate -- Should be unique
18:57:18   6  ,trend -- +1 or -1
18:57:18   7  ,dc12 -- next statement needs this
18:57:18   8  -- Use NTILE() to derive some attributes
18:57:18   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
18:57:18  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
18:57:18  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
18:57:18  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
18:57:18  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
18:57:18  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
18:57:18  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
18:57:18  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
18:57:18  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
18:57:18  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
18:57:18  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
18:57:18  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
18:57:18  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
18:57:18  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
18:57:18  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
18:57:18  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
18:57:18  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
18:57:18  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
18:57:18  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
18:57:18  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
18:57:18  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
18:57:18  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
18:57:18  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
18:57:18  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
18:57:18  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
18:57:18  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
18:57:18  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
18:57:18  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
18:57:18  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
18:57:18  38  ,hh    att28
18:57:18  39  ,d     att29
18:57:18  40  ,w     att30
18:57:18  41  ,mpm   att31
18:57:18  42  ,trend att32
18:57:18  43  ,ug4 g4
18:57:18  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
18:57:18  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
18:57:18  46  FROM q13
18:57:18  47  ORDER BY pair,ydate
18:57:18  48  /
