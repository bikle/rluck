
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 16 20:06:00 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

20:06:00 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.01
20:06:00 SQL> 20:06:00 SQL> --
20:06:00 SQL> -- eur10.sql
20:06:00 SQL> --
20:06:00 SQL> 
20:06:00 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:06:00 SQL> 
20:06:00 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.00
20:06:00 SQL> 
20:06:00 SQL> -- I created di5min here:
20:06:00 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:06:00 SQL> 
20:06:00 SQL> CREATE OR REPLACE VIEW q11 AS
20:06:00   2  SELECT
20:06:00   3  pair
20:06:00   4  ,ydate
20:06:00   5  ,prdate
20:06:00   6  ,rownum rnum -- acts as t in my time-series
20:06:00   7  ,clse
20:06:00   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:06:00   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:06:00  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:06:00  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:06:00  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:06:00  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:06:00  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:06:00  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:06:00  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:06:00  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:06:00  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:06:00  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:06:00  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:06:00  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:06:00  22  FROM di5min WHERE pair LIKE'%eur%'
20:06:00  23  ORDER BY ydate
20:06:00  24  /

View created.

Elapsed: 00:00:00.05
20:06:01 SQL> 
20:06:01 SQL> -- rpt
20:06:01 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20824

Elapsed: 00:00:00.36
20:06:01 SQL> 
20:06:01 SQL> -- Calc deltas and gains
20:06:01 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.08
20:06:01 SQL> 
20:06:01 SQL> CREATE TABLE q13 COMPRESS AS
20:06:01   2  SELECT
20:06:01   3  pair
20:06:01   4  ,ydate
20:06:01   5  ,prdate
20:06:01   6  ,rnum
20:06:01   7  ,lg4
20:06:01   8  ,lg8
20:06:01   9  ,lg12
20:06:01  10  ,ld4
20:06:01  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:06:01  12  -- step by 1
20:06:01  13  ,clse-lg1 d01
20:06:01  14  ,lg1-lg2	d12
20:06:01  15  ,lg2-lg3	d23
20:06:01  16  ,lg3-lg4	d34
20:06:01  17  ,lg4-lg5	d45
20:06:01  18  ,lg5-lg6	d56
20:06:01  19  ,lg6-lg7	d67
20:06:01  20  ,lg7-lg8	d78
20:06:01  21  ,lg8-lg9	d89
20:06:01  22  -- step by 2
20:06:01  23  ,clse-lg2 d02
20:06:01  24  ,lg2-lg4 d24
20:06:01  25  ,lg4-lg6 d46
20:06:01  26  ,lg6-lg8 d68
20:06:01  27  -- step by 3
20:06:01  28  ,clse-lg3 d03
20:06:01  29  ,lg3-lg6	d36
20:06:01  30  ,lg6-lg9	d69
20:06:01  31  ,lg9-lg12 d912
20:06:01  32  -- step by 4
20:06:01  33  ,clse-lg4 d04
20:06:01  34  ,lg4-lg8	d48
20:06:01  35  ,lg8-lg12 d812
20:06:01  36  ,lg6-lg12 d612
20:06:01  37  ,lg12-lg18 d1218
20:06:01  38  --
20:06:01  39  ,ABS(clse-lg1)dc1
20:06:01  40  ,ABS(clse-lg2)dc2
20:06:01  41  ,ABS(clse-lg3)dc3
20:06:01  42  ,ABS(clse-lg4)dc4
20:06:01  43  ,ABS(clse-lg5)dc5
20:06:01  44  ,ABS(clse-lg6)dc6
20:06:01  45  ,ABS(clse-lg7)dc7
20:06:01  46  ,ABS(clse-lg8)dc8
20:06:01  47  ,ABS(clse-lg9)dc9
20:06:01  48  ,ABS(clse-lg12)dc12
20:06:01  49  ,ABS(clse-lg18)dc18
20:06:01  50  ,ABS(clse-lg24)dc24
20:06:01  51  ,ABS(clse-lg72)dc72
20:06:01  52  ,(ld4-clse) ug4
20:06:01  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:06:01  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:06:01  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:06:01  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:06:01  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:06:01  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:06:01  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:06:01  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:06:01  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:06:01  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:06:01  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:06:01  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:06:01  65  ,0+TO_CHAR(ydate,'D')d
20:06:01  66  ,0+TO_CHAR(ydate,'W')w
20:06:01  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:06:01  68  FROM q11
20:06:01  69  -- I dont want any NULL values from the LAG() functions:
20:06:01  70  WHERE lg72 > 0
20:06:01  71  ORDER BY pair,ydate
20:06:01  72  /

Table created.

Elapsed: 00:00:01.97
20:06:03 SQL> 
20:06:03 SQL> -- rpt
20:06:03 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10272
	-1	    9688

Elapsed: 00:00:00.04
20:06:03 SQL> 
20:06:03 SQL> -- Calc gains and ntiles
20:06:03 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.04
20:06:03 SQL> CREATE TABLE q15 COMPRESS AS
20:06:03   2  SELECT
20:06:03   3  pair
20:06:03   4  ,ydate
20:06:03   5  ,prdate -- Should be unique
20:06:03   6  ,trend -- +1 or -1
20:06:03   7  ,dc12 -- next statement needs this
20:06:03   8  -- Use NTILE() to derive some attributes
20:06:03   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:06:03  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:06:03  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:06:03  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:06:03  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:06:03  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:06:03  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:06:03  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:06:03  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:06:03  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:06:03  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:06:03  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:06:03  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:06:03  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:06:03  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:06:03  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:06:03  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:06:03  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:06:03  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:06:03  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:06:03  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:06:03  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:06:03  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:06:03  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:06:03  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:06:03  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:06:03  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:06:03  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:06:03  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:06:03  38  ,hh    att28
20:06:03  39  ,d     att29
20:06:03  40  ,w     att30
20:06:03  41  ,mpm   att31
20:06:03  42  ,trend att32
20:06:03  43  ,ug4 g4
20:06:03  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:06:03  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:06:03  46  FROM q13
20:06:03  47  ORDER BY pair,ydate
20:06:03  48  /

Table created.

Elapsed: 00:00:04.01
20:06:07 SQL> 
20:06:07 SQL> -- rpt
20:06:07 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:06:07   2  GROUP BY pair,trend,gatt,gattn
20:06:07   3  ORDER BY pair,trend,gatt,gattn
20:06:07   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003677576	    4173    -.21301514
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003722517	    4320    -.14656632
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
20:06:07 SQL> 
20:06:07 SQL> -- rpt
20:06:07 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-16 19:55:00

Elapsed: 00:00:00.01
20:06:07 SQL> 
20:06:07 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.03
20:06:07 SQL> CREATE TABLE modsrc COMPRESS AS
20:06:07   2  SELECT
20:06:07   3  pair
20:06:07   4  ,ydate
20:06:07   5  ,prdate
20:06:07   6  ,trend
20:06:07   7  ,g4
20:06:07   8  ,gatt
20:06:07   9  ,gattn
20:06:07  10  ,dc12
20:06:07  11  FROM q15
20:06:07  12  /

Table created.

Elapsed: 00:00:00.09
20:06:07 SQL> 
20:06:07 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
20:06:07 SQL> 
20:06:07 SQL> -- rpt
20:06:07 SQL> 
20:06:07 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20824

Elapsed: 00:00:00.35
20:06:08 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
20:06:08 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
20:06:08 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
20:06:08 SQL> 
20:06:08 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:06:08   2  GROUP BY pair,trend,gatt,gattn
20:06:08   3  ORDER BY pair,trend,gatt,gattn
20:06:08   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003677576	    4173    -.21301514
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003722517	    4320    -.14656632
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
20:06:08 SQL> 
20:06:08 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
20:06:08 SQL> CREATE TABLE eur_ms10 COMPRESS AS
20:06:08   2  SELECT
20:06:08   3  ydate
20:06:08   4  ,trend eur_trend
20:06:08   5  ,g4    eur_g4
20:06:08   6  ,gatt  eur_gatt
20:06:08   7  ,gattn eur_gattn
20:06:08   8  FROM modsrc
20:06:08   9  /

Table created.

Elapsed: 00:00:00.07
20:06:08 SQL> 
20:06:08 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
20:06:08 SQL> 
20:06:08 SQL> -- rpt
20:06:08 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:15:01 2010-12-16 18:05:00	10264	  -.0153      .0165
	-1 2010-09-10 20:10:01 2010-12-16 19:55:00	 9648	  -.0164      .0167

Elapsed: 00:00:00.02
20:06:08 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:15:01 2010-12-16 18:05:00	      10272	 -.0153       .0165
	-1 2010-09-10 20:10:01 2010-12-16 19:55:00	       9688	 -.0164       .0167

Elapsed: 00:00:00.01
20:06:08 SQL> 
20:06:08 SQL> -- I need a copy of q15 attributes
20:06:08 SQL> 
20:06:08 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.03
20:06:08 SQL> CREATE TABLE eur_att COMPRESS AS
20:06:08   2  SELECT
20:06:08   3  ydate
20:06:08   4  ,att00 eur_att00
20:06:08   5  ,att01 eur_att01
20:06:08   6  ,att02 eur_att02
20:06:08   7  ,att03 eur_att03
20:06:08   8  ,att04 eur_att04
20:06:08   9  ,att05 eur_att05
20:06:08  10  ,att06 eur_att06
20:06:08  11  ,att07 eur_att07
20:06:08  12  ,att08 eur_att08
20:06:08  13  ,att09 eur_att09
20:06:08  14  ,att10 eur_att10
20:06:08  15  ,att11 eur_att11
20:06:08  16  ,att12 eur_att12
20:06:08  17  ,att13 eur_att13
20:06:08  18  ,att14 eur_att14
20:06:08  19  ,att15 eur_att15
20:06:08  20  ,att16 eur_att16
20:06:08  21  ,att17 eur_att17
20:06:08  22  ,att18 eur_att18
20:06:08  23  ,att19 eur_att19
20:06:08  24  ,att20 eur_att20
20:06:08  25  ,att21 eur_att21
20:06:08  26  ,att22 eur_att22
20:06:08  27  ,att23 eur_att23
20:06:08  28  ,att24 eur_att24
20:06:08  29  ,att25 eur_att25
20:06:08  30  ,att26 eur_att26
20:06:08  31  ,att27 eur_att27
20:06:08  32  ,att28 eur_att28
20:06:08  33  ,att29 eur_att29
20:06:08  34  ,att30 eur_att30
20:06:08  35  ,att31 eur_att31
20:06:08  36  ,att32 eur_att32
20:06:08  37  FROM q15
20:06:08  38  /

Table created.

Elapsed: 00:00:00.12
20:06:08 SQL> 
20:06:08 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
20:06:09 SQL> 
20:06:09 SQL> -- rpt
20:06:09 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19960

Elapsed: 00:00:00.00
20:06:09 SQL> 
20:06:09 SQL> --
20:06:09 SQL> -- aud10.sql
20:06:09 SQL> --
20:06:09 SQL> 
20:06:09 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:06:09 SQL> 
20:06:09 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.43
20:06:09 SQL> 
20:06:09 SQL> -- I created di5min here:
20:06:09 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:06:09 SQL> 
20:06:09 SQL> CREATE OR REPLACE VIEW q11 AS
20:06:09   2  SELECT
20:06:09   3  pair
20:06:09   4  ,ydate
20:06:09   5  ,prdate
20:06:09   6  ,rownum rnum -- acts as t in my time-series
20:06:09   7  ,clse
20:06:09   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:06:09   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:06:09  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:06:09  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:06:09  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:06:09  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:06:09  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:06:09  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:06:09  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:06:09  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:06:09  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:06:09  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:06:09  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:06:09  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:06:09  22  FROM di5min WHERE pair LIKE'%aud%'
20:06:09  23  ORDER BY ydate
20:06:09  24  /

View created.

Elapsed: 00:00:00.05
20:06:09 SQL> 
20:06:09 SQL> -- rpt
20:06:09 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20821

Elapsed: 00:00:00.36
20:06:10 SQL> 
20:06:10 SQL> -- Calc deltas and gains
20:06:10 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.26
20:06:10 SQL> 
20:06:10 SQL> CREATE TABLE q13 COMPRESS AS
20:06:10   2  SELECT
20:06:10   3  pair
20:06:10   4  ,ydate
20:06:10   5  ,prdate
20:06:10   6  ,rnum
20:06:10   7  ,lg4
20:06:10   8  ,lg8
20:06:10   9  ,lg12
20:06:10  10  ,ld4
20:06:10  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:06:10  12  -- step by 1
20:06:10  13  ,clse-lg1 d01
20:06:10  14  ,lg1-lg2	d12
20:06:10  15  ,lg2-lg3	d23
20:06:10  16  ,lg3-lg4	d34
20:06:10  17  ,lg4-lg5	d45
20:06:10  18  ,lg5-lg6	d56
20:06:10  19  ,lg6-lg7	d67
20:06:10  20  ,lg7-lg8	d78
20:06:10  21  ,lg8-lg9	d89
20:06:10  22  -- step by 2
20:06:10  23  ,clse-lg2 d02
20:06:10  24  ,lg2-lg4 d24
20:06:10  25  ,lg4-lg6 d46
20:06:10  26  ,lg6-lg8 d68
20:06:10  27  -- step by 3
20:06:10  28  ,clse-lg3 d03
20:06:10  29  ,lg3-lg6	d36
20:06:10  30  ,lg6-lg9	d69
20:06:10  31  ,lg9-lg12 d912
20:06:10  32  -- step by 4
20:06:10  33  ,clse-lg4 d04
20:06:10  34  ,lg4-lg8	d48
20:06:10  35  ,lg8-lg12 d812
20:06:10  36  ,lg6-lg12 d612
20:06:10  37  ,lg12-lg18 d1218
20:06:10  38  --
20:06:10  39  ,ABS(clse-lg1)dc1
20:06:10  40  ,ABS(clse-lg2)dc2
20:06:10  41  ,ABS(clse-lg3)dc3
20:06:10  42  ,ABS(clse-lg4)dc4
20:06:10  43  ,ABS(clse-lg5)dc5
20:06:10  44  ,ABS(clse-lg6)dc6
20:06:10  45  ,ABS(clse-lg7)dc7
20:06:10  46  ,ABS(clse-lg8)dc8
20:06:10  47  ,ABS(clse-lg9)dc9
20:06:10  48  ,ABS(clse-lg12)dc12
20:06:10  49  ,ABS(clse-lg18)dc18
20:06:10  50  ,ABS(clse-lg24)dc24
20:06:10  51  ,ABS(clse-lg72)dc72
20:06:10  52  ,(ld4-clse) ug4
20:06:10  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:06:10  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:06:10  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:06:10  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:06:10  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:06:10  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:06:10  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:06:10  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:06:10  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:06:10  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:06:10  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:06:10  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:06:10  65  ,0+TO_CHAR(ydate,'D')d
20:06:10  66  ,0+TO_CHAR(ydate,'W')w
20:06:10  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:06:10  68  FROM q11
20:06:10  69  -- I dont want any NULL values from the LAG() functions:
20:06:10  70  WHERE lg72 > 0
20:06:10  71  ORDER BY pair,ydate
20:06:10  72  /

Table created.

Elapsed: 00:00:01.67
20:06:11 SQL> 
20:06:11 SQL> -- rpt
20:06:11 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10465
	-1	    9492

Elapsed: 00:00:00.06
20:06:12 SQL> 
20:06:12 SQL> -- Calc gains and ntiles
20:06:12 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.19
20:06:12 SQL> CREATE TABLE q15 COMPRESS AS
20:06:12   2  SELECT
20:06:12   3  pair
20:06:12   4  ,ydate
20:06:12   5  ,prdate -- Should be unique
20:06:12   6  ,trend -- +1 or -1
20:06:12   7  ,dc12 -- next statement needs this
20:06:12   8  -- Use NTILE() to derive some attributes
20:06:12   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:06:12  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:06:12  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:06:12  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:06:12  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:06:12  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:06:12  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:06:12  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:06:12  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:06:12  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:06:12  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:06:12  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:06:12  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:06:12  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:06:12  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:06:12  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:06:12  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:06:12  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:06:12  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:06:12  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:06:12  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:06:12  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:06:12  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:06:12  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:06:12  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:06:12  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:06:12  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:06:12  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:06:12  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:06:12  38  ,hh    att28
20:06:12  39  ,d     att29
20:06:12  40  ,w     att30
20:06:12  41  ,mpm   att31
20:06:12  42  ,trend att32
20:06:12  43  ,ug4 g4
20:06:12  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:06:12  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:06:12  46  FROM q13
20:06:12  47  ORDER BY pair,ydate
20:06:12  48  /

Table created.

Elapsed: 00:00:03.99
20:06:16 SQL> 
20:06:16 SQL> -- rpt
20:06:16 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:06:16   2  GROUP BY pair,trend,gatt,gattn
20:06:16   3  ORDER BY pair,trend,gatt,gattn
20:06:16   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002980453	    4337    .024941338
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.9795E-06	    1955    .022883713
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002943581	    4428    -.18096835
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
20:06:16 SQL> 
20:06:16 SQL> -- rpt
20:06:16 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-16 19:55:00

Elapsed: 00:00:00.01
20:06:16 SQL> 
20:06:16 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.14
20:06:16 SQL> CREATE TABLE modsrc COMPRESS AS
20:06:16   2  SELECT
20:06:16   3  pair
20:06:16   4  ,ydate
20:06:16   5  ,prdate
20:06:16   6  ,trend
20:06:16   7  ,g4
20:06:16   8  ,gatt
20:06:16   9  ,gattn
20:06:16  10  ,dc12
20:06:16  11  FROM q15
20:06:16  12  /

Table created.

Elapsed: 00:00:00.09
20:06:16 SQL> 
20:06:16 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.29
20:06:16 SQL> 
20:06:16 SQL> -- rpt
20:06:16 SQL> 
20:06:16 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.34
20:06:17 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
20:06:17 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
20:06:17 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
20:06:17 SQL> 
20:06:17 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:06:17   2  GROUP BY pair,trend,gatt,gattn
20:06:17   3  ORDER BY pair,trend,gatt,gattn
20:06:17   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002980453	    4337    .024941338
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.9795E-06	    1955    .022883713
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002943581	    4428    -.18096835
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
20:06:17 SQL> 
20:06:17 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
20:06:17 SQL> CREATE TABLE aud_ms10 COMPRESS AS
20:06:17   2  SELECT
20:06:17   3  ydate
20:06:17   4  ,trend aud_trend
20:06:17   5  ,g4    aud_g4
20:06:17   6  ,gatt  aud_gatt
20:06:17   7  ,gattn aud_gattn
20:06:17   8  FROM modsrc
20:06:17   9  /

Table created.

Elapsed: 00:00:00.10
20:06:17 SQL> 
20:06:17 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
20:06:17 SQL> 
20:06:17 SQL> -- rpt
20:06:17 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 20:10:01 2010-12-16 19:50:00	10440	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-16 19:55:00	 9469	   -.017      .0131

Elapsed: 00:00:00.02
20:06:17 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 20:10:01 2010-12-16 19:50:00	      10465	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-16 19:55:00	       9492	  -.017       .0131

Elapsed: 00:00:00.02
20:06:17 SQL> 
20:06:17 SQL> -- I need a copy of q15 attributes
20:06:17 SQL> 
20:06:17 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.03
20:06:17 SQL> CREATE TABLE aud_att COMPRESS AS
20:06:17   2  SELECT
20:06:17   3  ydate
20:06:17   4  ,att00 aud_att00
20:06:17   5  ,att01 aud_att01
20:06:17   6  ,att02 aud_att02
20:06:17   7  ,att03 aud_att03
20:06:17   8  ,att04 aud_att04
20:06:17   9  ,att05 aud_att05
20:06:17  10  ,att06 aud_att06
20:06:17  11  ,att07 aud_att07
20:06:17  12  ,att08 aud_att08
20:06:17  13  ,att09 aud_att09
20:06:17  14  ,att10 aud_att10
20:06:17  15  ,att11 aud_att11
20:06:17  16  ,att12 aud_att12
20:06:17  17  ,att13 aud_att13
20:06:17  18  ,att14 aud_att14
20:06:17  19  ,att15 aud_att15
20:06:17  20  ,att16 aud_att16
20:06:17  21  ,att17 aud_att17
20:06:17  22  ,att18 aud_att18
20:06:17  23  ,att19 aud_att19
20:06:17  24  ,att20 aud_att20
20:06:17  25  ,att21 aud_att21
20:06:17  26  ,att22 aud_att22
20:06:17  27  ,att23 aud_att23
20:06:17  28  ,att24 aud_att24
20:06:17  29  ,att25 aud_att25
20:06:17  30  ,att26 aud_att26
20:06:17  31  ,att27 aud_att27
20:06:17  32  ,att28 aud_att28
20:06:17  33  ,att29 aud_att29
20:06:17  34  ,att30 aud_att30
20:06:17  35  ,att31 aud_att31
20:06:17  36  ,att32 aud_att32
20:06:17  37  FROM q15
20:06:17  38  /

Table created.

Elapsed: 00:00:00.15
20:06:17 SQL> 
20:06:17 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
20:06:18 SQL> 
20:06:18 SQL> -- rpt
20:06:18 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.01
20:06:18 SQL> 
20:06:18 SQL> --
20:06:18 SQL> -- gbp10.sql
20:06:18 SQL> --
20:06:18 SQL> 
20:06:18 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:06:18 SQL> 
20:06:18 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.33
20:06:18 SQL> 
20:06:18 SQL> -- I created di5min here:
20:06:18 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:06:18 SQL> 
20:06:18 SQL> CREATE OR REPLACE VIEW q11 AS
20:06:18   2  SELECT
20:06:18   3  pair
20:06:18   4  ,ydate
20:06:18   5  ,prdate
20:06:18   6  ,rownum rnum -- acts as t in my time-series
20:06:18   7  ,clse
20:06:18   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:06:18   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:06:18  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:06:18  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:06:18  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:06:18  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:06:18  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:06:18  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:06:18  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:06:18  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:06:18  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:06:18  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:06:18  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:06:18  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:06:18  22  FROM di5min WHERE pair LIKE'%gbp%'
20:06:18  23  ORDER BY ydate
20:06:18  24  /

View created.

Elapsed: 00:00:00.05
20:06:18 SQL> 
20:06:18 SQL> -- rpt
20:06:18 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20824

Elapsed: 00:00:00.35
20:06:18 SQL> 
20:06:18 SQL> -- Calc deltas and gains
20:06:18 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.21
20:06:19 SQL> 
20:06:19 SQL> CREATE TABLE q13 COMPRESS AS
20:06:19   2  SELECT
20:06:19   3  pair
20:06:19   4  ,ydate
20:06:19   5  ,prdate
20:06:19   6  ,rnum
20:06:19   7  ,lg4
20:06:19   8  ,lg8
20:06:19   9  ,lg12
20:06:19  10  ,ld4
20:06:19  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:06:19  12  -- step by 1
20:06:19  13  ,clse-lg1 d01
20:06:19  14  ,lg1-lg2	d12
20:06:19  15  ,lg2-lg3	d23
20:06:19  16  ,lg3-lg4	d34
20:06:19  17  ,lg4-lg5	d45
20:06:19  18  ,lg5-lg6	d56
20:06:19  19  ,lg6-lg7	d67
20:06:19  20  ,lg7-lg8	d78
20:06:19  21  ,lg8-lg9	d89
20:06:19  22  -- step by 2
20:06:19  23  ,clse-lg2 d02
20:06:19  24  ,lg2-lg4 d24
20:06:19  25  ,lg4-lg6 d46
20:06:19  26  ,lg6-lg8 d68
20:06:19  27  -- step by 3
20:06:19  28  ,clse-lg3 d03
20:06:19  29  ,lg3-lg6	d36
20:06:19  30  ,lg6-lg9	d69
20:06:19  31  ,lg9-lg12 d912
20:06:19  32  -- step by 4
20:06:19  33  ,clse-lg4 d04
20:06:19  34  ,lg4-lg8	d48
20:06:19  35  ,lg8-lg12 d812
20:06:19  36  ,lg6-lg12 d612
20:06:19  37  ,lg12-lg18 d1218
20:06:19  38  --
20:06:19  39  ,ABS(clse-lg1)dc1
20:06:19  40  ,ABS(clse-lg2)dc2
20:06:19  41  ,ABS(clse-lg3)dc3
20:06:19  42  ,ABS(clse-lg4)dc4
20:06:19  43  ,ABS(clse-lg5)dc5
20:06:19  44  ,ABS(clse-lg6)dc6
20:06:19  45  ,ABS(clse-lg7)dc7
20:06:19  46  ,ABS(clse-lg8)dc8
20:06:19  47  ,ABS(clse-lg9)dc9
20:06:19  48  ,ABS(clse-lg12)dc12
20:06:19  49  ,ABS(clse-lg18)dc18
20:06:19  50  ,ABS(clse-lg24)dc24
20:06:19  51  ,ABS(clse-lg72)dc72
20:06:19  52  ,(ld4-clse) ug4
20:06:19  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:06:19  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:06:19  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:06:19  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:06:19  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:06:19  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:06:19  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:06:19  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:06:19  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:06:19  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:06:19  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:06:19  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:06:19  65  ,0+TO_CHAR(ydate,'D')d
20:06:19  66  ,0+TO_CHAR(ydate,'W')w
20:06:19  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:06:19  68  FROM q11
20:06:19  69  -- I dont want any NULL values from the LAG() functions:
20:06:19  70  WHERE lg72 > 0
20:06:19  71  ORDER BY pair,ydate
20:06:19  72  /

Table created.

Elapsed: 00:00:01.71
20:06:20 SQL> 
20:06:20 SQL> -- rpt
20:06:20 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9702
	-1	   10258

Elapsed: 00:00:00.04
20:06:20 SQL> 
20:06:20 SQL> -- Calc gains and ntiles
20:06:20 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.12
20:06:20 SQL> CREATE TABLE q15 COMPRESS AS
20:06:20   2  SELECT
20:06:20   3  pair
20:06:20   4  ,ydate
20:06:20   5  ,prdate -- Should be unique
20:06:20   6  ,trend -- +1 or -1
20:06:20   7  ,dc12 -- next statement needs this
20:06:20   8  -- Use NTILE() to derive some attributes
20:06:20   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:06:20  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:06:20  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:06:20  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:06:20  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:06:20  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:06:20  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:06:20  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:06:20  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:06:20  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:06:20  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:06:20  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:06:20  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:06:20  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:06:20  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:06:20  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:06:20  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:06:20  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:06:20  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:06:20  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:06:20  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:06:20  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:06:20  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:06:20  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:06:20  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:06:20  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:06:20  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:06:20  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:06:20  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:06:20  38  ,hh    att28
20:06:20  39  ,d     att29
20:06:20  40  ,w     att30
20:06:20  41  ,mpm   att31
20:06:20  42  ,trend att32
20:06:20  43  ,ug4 g4
20:06:20  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:06:20  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:06:20  46  FROM q13
20:06:20  47  ORDER BY pair,ydate
20:06:20  48  /

Table created.

Elapsed: 00:00:04.00
20:06:24 SQL> 
20:06:24 SQL> -- rpt
20:06:24 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:06:24   2  GROUP BY pair,trend,gatt,gattn
20:06:24   3  ORDER BY pair,trend,gatt,gattn
20:06:24   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup  .00312166	    4409    -.08603031
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003584535	    3896    -.16622019
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.05
20:06:24 SQL> 
20:06:24 SQL> -- rpt
20:06:24 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-16 20:00:00

Elapsed: 00:00:00.01
20:06:25 SQL> 
20:06:25 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.11
20:06:25 SQL> CREATE TABLE modsrc COMPRESS AS
20:06:25   2  SELECT
20:06:25   3  pair
20:06:25   4  ,ydate
20:06:25   5  ,prdate
20:06:25   6  ,trend
20:06:25   7  ,g4
20:06:25   8  ,gatt
20:06:25   9  ,gattn
20:06:25  10  ,dc12
20:06:25  11  FROM q15
20:06:25  12  /

Table created.

Elapsed: 00:00:00.09
20:06:25 SQL> 
20:06:25 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.28
20:06:25 SQL> 
20:06:25 SQL> -- rpt
20:06:25 SQL> 
20:06:25 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20824

Elapsed: 00:00:00.34
20:06:25 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
20:06:25 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
20:06:25 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
20:06:25 SQL> 
20:06:25 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:06:25   2  GROUP BY pair,trend,gatt,gattn
20:06:25   3  ORDER BY pair,trend,gatt,gattn
20:06:25   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup  .00312166	    4409    -.08603031
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003584535	    3896    -.16622019
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
20:06:25 SQL> 
20:06:25 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
20:06:25 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
20:06:25   2  SELECT
20:06:25   3  ydate
20:06:25   4  ,trend gbp_trend
20:06:25   5  ,g4    gbp_g4
20:06:25   6  ,gatt  gbp_gatt
20:06:25   7  ,gattn gbp_gattn
20:06:25   8  FROM modsrc
20:06:25   9  /

Table created.

Elapsed: 00:00:00.07
20:06:25 SQL> 
20:06:25 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
20:06:26 SQL> 
20:06:26 SQL> -- rpt
20:06:26 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 00:05:01 2010-12-16 20:00:00	 9654	  -.0194      .0179
	-1 2010-09-10 20:10:01 2010-12-16 07:30:00	10258	  -.0153      .0159

Elapsed: 00:00:00.02
20:06:26 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 00:05:01 2010-12-16 20:00:00	       9702	 -.0194       .0179
	-1 2010-09-10 20:10:01 2010-12-16 07:30:00	      10258	 -.0153       .0159

Elapsed: 00:00:00.02
20:06:26 SQL> 
20:06:26 SQL> -- I need a copy of q15 attributes
20:06:26 SQL> 
20:06:26 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.04
20:06:26 SQL> CREATE TABLE gbp_att COMPRESS AS
20:06:26   2  SELECT
20:06:26   3  ydate
20:06:26   4  ,att00 gbp_att00
20:06:26   5  ,att01 gbp_att01
20:06:26   6  ,att02 gbp_att02
20:06:26   7  ,att03 gbp_att03
20:06:26   8  ,att04 gbp_att04
20:06:26   9  ,att05 gbp_att05
20:06:26  10  ,att06 gbp_att06
20:06:26  11  ,att07 gbp_att07
20:06:26  12  ,att08 gbp_att08
20:06:26  13  ,att09 gbp_att09
20:06:26  14  ,att10 gbp_att10
20:06:26  15  ,att11 gbp_att11
20:06:26  16  ,att12 gbp_att12
20:06:26  17  ,att13 gbp_att13
20:06:26  18  ,att14 gbp_att14
20:06:26  19  ,att15 gbp_att15
20:06:26  20  ,att16 gbp_att16
20:06:26  21  ,att17 gbp_att17
20:06:26  22  ,att18 gbp_att18
20:06:26  23  ,att19 gbp_att19
20:06:26  24  ,att20 gbp_att20
20:06:26  25  ,att21 gbp_att21
20:06:26  26  ,att22 gbp_att22
20:06:26  27  ,att23 gbp_att23
20:06:26  28  ,att24 gbp_att24
20:06:26  29  ,att25 gbp_att25
20:06:26  30  ,att26 gbp_att26
20:06:26  31  ,att27 gbp_att27
20:06:26  32  ,att28 gbp_att28
20:06:26  33  ,att29 gbp_att29
20:06:26  34  ,att30 gbp_att30
20:06:26  35  ,att31 gbp_att31
20:06:26  36  ,att32 gbp_att32
20:06:26  37  FROM q15
20:06:26  38  /

Table created.

Elapsed: 00:00:00.14
20:06:26 SQL> 
20:06:26 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
20:06:26 SQL> 
20:06:26 SQL> -- rpt
20:06:26 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19960

Elapsed: 00:00:00.00
20:06:26 SQL> 
20:06:26 SQL> --
20:06:26 SQL> -- jpy10.sql
20:06:26 SQL> --
20:06:26 SQL> 
20:06:26 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:06:26 SQL> 
20:06:26 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.32
20:06:27 SQL> 
20:06:27 SQL> -- I created di5min here:
20:06:27 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:06:27 SQL> 
20:06:27 SQL> CREATE OR REPLACE VIEW q11 AS
20:06:27   2  SELECT
20:06:27   3  pair
20:06:27   4  ,ydate
20:06:27   5  ,prdate
20:06:27   6  ,rownum rnum -- acts as t in my time-series
20:06:27   7  ,clse
20:06:27   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:06:27   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:06:27  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:06:27  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:06:27  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:06:27  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:06:27  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:06:27  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:06:27  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:06:27  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:06:27  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:06:27  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:06:27  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:06:27  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:06:27  22  FROM di5min WHERE pair LIKE'%jpy%'
20:06:27  23  ORDER BY ydate
20:06:27  24  /

View created.

Elapsed: 00:00:00.05
20:06:27 SQL> 
20:06:27 SQL> -- rpt
20:06:27 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20825

Elapsed: 00:00:00.34
20:06:27 SQL> 
20:06:27 SQL> -- Calc deltas and gains
20:06:27 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.23
20:06:27 SQL> 
20:06:27 SQL> CREATE TABLE q13 COMPRESS AS
20:06:27   2  SELECT
20:06:27   3  pair
20:06:27   4  ,ydate
20:06:27   5  ,prdate
20:06:27   6  ,rnum
20:06:27   7  ,lg4
20:06:27   8  ,lg8
20:06:27   9  ,lg12
20:06:27  10  ,ld4
20:06:27  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:06:27  12  -- step by 1
20:06:27  13  ,clse-lg1 d01
20:06:27  14  ,lg1-lg2	d12
20:06:27  15  ,lg2-lg3	d23
20:06:27  16  ,lg3-lg4	d34
20:06:27  17  ,lg4-lg5	d45
20:06:27  18  ,lg5-lg6	d56
20:06:27  19  ,lg6-lg7	d67
20:06:27  20  ,lg7-lg8	d78
20:06:27  21  ,lg8-lg9	d89
20:06:27  22  -- step by 2
20:06:27  23  ,clse-lg2 d02
20:06:27  24  ,lg2-lg4 d24
20:06:27  25  ,lg4-lg6 d46
20:06:27  26  ,lg6-lg8 d68
20:06:27  27  -- step by 3
20:06:27  28  ,clse-lg3 d03
20:06:27  29  ,lg3-lg6	d36
20:06:27  30  ,lg6-lg9	d69
20:06:27  31  ,lg9-lg12 d912
20:06:27  32  -- step by 4
20:06:27  33  ,clse-lg4 d04
20:06:27  34  ,lg4-lg8	d48
20:06:27  35  ,lg8-lg12 d812
20:06:27  36  ,lg6-lg12 d612
20:06:27  37  ,lg12-lg18 d1218
20:06:27  38  --
20:06:27  39  ,ABS(clse-lg1)dc1
20:06:27  40  ,ABS(clse-lg2)dc2
20:06:27  41  ,ABS(clse-lg3)dc3
20:06:27  42  ,ABS(clse-lg4)dc4
20:06:27  43  ,ABS(clse-lg5)dc5
20:06:27  44  ,ABS(clse-lg6)dc6
20:06:27  45  ,ABS(clse-lg7)dc7
20:06:27  46  ,ABS(clse-lg8)dc8
20:06:27  47  ,ABS(clse-lg9)dc9
20:06:27  48  ,ABS(clse-lg12)dc12
20:06:27  49  ,ABS(clse-lg18)dc18
20:06:27  50  ,ABS(clse-lg24)dc24
20:06:27  51  ,ABS(clse-lg72)dc72
20:06:27  52  ,(ld4-clse) ug4
20:06:27  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:06:27  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:06:27  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:06:27  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:06:27  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:06:27  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:06:27  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:06:27  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:06:27  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:06:27  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:06:27  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:06:27  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:06:27  65  ,0+TO_CHAR(ydate,'D')d
20:06:27  66  ,0+TO_CHAR(ydate,'W')w
20:06:27  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:06:27  68  FROM q11
20:06:27  69  -- I dont want any NULL values from the LAG() functions:
20:06:27  70  WHERE lg72 > 0
20:06:27  71  ORDER BY pair,ydate
20:06:27  72  /

Table created.

Elapsed: 00:00:01.67
20:06:29 SQL> 
20:06:29 SQL> -- rpt
20:06:29 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9287
	-1	   10674

Elapsed: 00:00:00.08
20:06:29 SQL> 
20:06:29 SQL> -- Calc gains and ntiles
20:06:29 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.20
20:06:29 SQL> CREATE TABLE q15 COMPRESS AS
20:06:29   2  SELECT
20:06:29   3  pair
20:06:29   4  ,ydate
20:06:29   5  ,prdate -- Should be unique
20:06:29   6  ,trend -- +1 or -1
20:06:29   7  ,dc12 -- next statement needs this
20:06:29   8  -- Use NTILE() to derive some attributes
20:06:29   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:06:29  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:06:29  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:06:29  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:06:29  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:06:29  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:06:29  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:06:29  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:06:29  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:06:29  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:06:29  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:06:29  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:06:29  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:06:29  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:06:29  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:06:29  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:06:29  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:06:29  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:06:29  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:06:29  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:06:29  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:06:29  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:06:29  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:06:29  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:06:29  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:06:29  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:06:29  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:06:29  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:06:29  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:06:29  38  ,hh    att28
20:06:29  39  ,d     att29
20:06:29  40  ,w     att30
20:06:29  41  ,mpm   att31
20:06:29  42  ,trend att32
20:06:29  43  ,ug4 g4
20:06:29  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:06:29  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:06:29  46  FROM q13
20:06:29  47  ORDER BY pair,ydate
20:06:29  48  /

Table created.

Elapsed: 00:00:03.99
20:06:33 SQL> 
20:06:33 SQL> -- rpt
20:06:33 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:06:33   2  GROUP BY pair,trend,gatt,gattn
20:06:33   3  ORDER BY pair,trend,gatt,gattn
20:06:33   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13693752	    5178     .02198879
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     169
usd_jpy 	 1 nup up  -.13375826	    4991    -.01778175
usd_jpy 	 1 up  nup .151933893	    4107    .184221746
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
20:06:33 SQL> 
20:06:33 SQL> -- rpt
20:06:33 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-16 20:00:00

Elapsed: 00:00:00.02
20:06:33 SQL> 
20:06:33 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
20:06:33 SQL> CREATE TABLE modsrc COMPRESS AS
20:06:33   2  SELECT
20:06:33   3  pair
20:06:33   4  ,ydate
20:06:33   5  ,prdate
20:06:33   6  ,trend
20:06:33   7  ,g4
20:06:33   8  ,gatt
20:06:33   9  ,gattn
20:06:33  10  ,dc12
20:06:33  11  FROM q15
20:06:33  12  /

Table created.

Elapsed: 00:00:00.09
20:06:33 SQL> 
20:06:33 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.24
20:06:34 SQL> 
20:06:34 SQL> -- rpt
20:06:34 SQL> 
20:06:34 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20825

Elapsed: 00:00:00.35
20:06:34 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
20:06:34 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.01
20:06:34 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
20:06:34 SQL> 
20:06:34 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:06:34   2  GROUP BY pair,trend,gatt,gattn
20:06:34   3  ORDER BY pair,trend,gatt,gattn
20:06:34   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13693752	    5178     .02198879
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     169
usd_jpy 	 1 nup up  -.13375826	    4991    -.01778175
usd_jpy 	 1 up  nup .151933893	    4107    .184221746
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
20:06:34 SQL> 
20:06:34 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
20:06:34 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
20:06:34   2  SELECT
20:06:34   3  ydate
20:06:34   4  ,trend jpy_trend
20:06:34   5  ,g4    jpy_g4
20:06:34   6  ,gatt  jpy_gatt
20:06:34   7  ,gattn jpy_gattn
20:06:34   8  FROM modsrc
20:06:34   9  /

Table created.

Elapsed: 00:00:00.08
20:06:34 SQL> 
20:06:34 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
20:06:34 SQL> 
20:06:34 SQL> -- rpt
20:06:34 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 20:10:01 2010-12-16 18:25:00	 9267	   -1.07	1.5
	-1 2010-09-12 23:35:01 2010-12-16 20:00:00	10646	 -1.0775       1.99

Elapsed: 00:00:00.02
20:06:34 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 20:10:01 2010-12-16 18:25:00	       9287	  -1.07 	1.5
	-1 2010-09-12 23:35:01 2010-12-16 20:00:00	      10674	-1.0775        1.99

Elapsed: 00:00:00.02
20:06:34 SQL> 
20:06:34 SQL> -- I need a copy of q15 attributes
20:06:34 SQL> 
20:06:34 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.04
20:06:34 SQL> CREATE TABLE jpy_att COMPRESS AS
20:06:34   2  SELECT
20:06:34   3  ydate
20:06:34   4  ,att00 jpy_att00
20:06:34   5  ,att01 jpy_att01
20:06:34   6  ,att02 jpy_att02
20:06:34   7  ,att03 jpy_att03
20:06:34   8  ,att04 jpy_att04
20:06:34   9  ,att05 jpy_att05
20:06:34  10  ,att06 jpy_att06
20:06:34  11  ,att07 jpy_att07
20:06:34  12  ,att08 jpy_att08
20:06:34  13  ,att09 jpy_att09
20:06:34  14  ,att10 jpy_att10
20:06:34  15  ,att11 jpy_att11
20:06:34  16  ,att12 jpy_att12
20:06:34  17  ,att13 jpy_att13
20:06:34  18  ,att14 jpy_att14
20:06:34  19  ,att15 jpy_att15
20:06:34  20  ,att16 jpy_att16
20:06:34  21  ,att17 jpy_att17
20:06:34  22  ,att18 jpy_att18
20:06:34  23  ,att19 jpy_att19
20:06:34  24  ,att20 jpy_att20
20:06:34  25  ,att21 jpy_att21
20:06:34  26  ,att22 jpy_att22
20:06:34  27  ,att23 jpy_att23
20:06:34  28  ,att24 jpy_att24
20:06:34  29  ,att25 jpy_att25
20:06:34  30  ,att26 jpy_att26
20:06:34  31  ,att27 jpy_att27
20:06:34  32  ,att28 jpy_att28
20:06:34  33  ,att29 jpy_att29
20:06:34  34  ,att30 jpy_att30
20:06:34  35  ,att31 jpy_att31
20:06:34  36  ,att32 jpy_att32
20:06:34  37  FROM q15
20:06:34  38  /

Table created.

Elapsed: 00:00:00.16
20:06:35 SQL> 
20:06:35 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.49
20:06:35 SQL> 
20:06:35 SQL> -- rpt
20:06:35 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19961

Elapsed: 00:00:00.00
20:06:35 SQL> 
20:06:35 SQL> --
20:06:35 SQL> -- cad10.sql
20:06:35 SQL> --
20:06:35 SQL> 
20:06:35 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:06:35 SQL> 
20:06:35 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.31
20:06:35 SQL> 
20:06:35 SQL> -- I created di5min here:
20:06:35 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:06:35 SQL> 
20:06:35 SQL> CREATE OR REPLACE VIEW q11 AS
20:06:35   2  SELECT
20:06:35   3  pair
20:06:35   4  ,ydate
20:06:35   5  ,prdate
20:06:35   6  ,rownum rnum -- acts as t in my time-series
20:06:35   7  ,clse
20:06:35   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:06:35   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:06:35  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:06:35  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:06:35  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:06:35  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:06:35  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:06:35  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:06:35  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:06:35  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:06:35  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:06:35  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:06:35  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:06:35  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:06:35  22  FROM di5min WHERE pair LIKE'%cad%'
20:06:35  23  ORDER BY ydate
20:06:35  24  /

View created.

Elapsed: 00:00:00.05
20:06:35 SQL> 
20:06:35 SQL> -- rpt
20:06:35 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20821

Elapsed: 00:00:00.35
20:06:36 SQL> 
20:06:36 SQL> -- Calc deltas and gains
20:06:36 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.27
20:06:36 SQL> 
20:06:36 SQL> CREATE TABLE q13 COMPRESS AS
20:06:36   2  SELECT
20:06:36   3  pair
20:06:36   4  ,ydate
20:06:36   5  ,prdate
20:06:36   6  ,rnum
20:06:36   7  ,lg4
20:06:36   8  ,lg8
20:06:36   9  ,lg12
20:06:36  10  ,ld4
20:06:36  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:06:36  12  -- step by 1
20:06:36  13  ,clse-lg1 d01
20:06:36  14  ,lg1-lg2	d12
20:06:36  15  ,lg2-lg3	d23
20:06:36  16  ,lg3-lg4	d34
20:06:36  17  ,lg4-lg5	d45
20:06:36  18  ,lg5-lg6	d56
20:06:36  19  ,lg6-lg7	d67
20:06:36  20  ,lg7-lg8	d78
20:06:36  21  ,lg8-lg9	d89
20:06:36  22  -- step by 2
20:06:36  23  ,clse-lg2 d02
20:06:36  24  ,lg2-lg4 d24
20:06:36  25  ,lg4-lg6 d46
20:06:36  26  ,lg6-lg8 d68
20:06:36  27  -- step by 3
20:06:36  28  ,clse-lg3 d03
20:06:36  29  ,lg3-lg6	d36
20:06:36  30  ,lg6-lg9	d69
20:06:36  31  ,lg9-lg12 d912
20:06:36  32  -- step by 4
20:06:36  33  ,clse-lg4 d04
20:06:36  34  ,lg4-lg8	d48
20:06:36  35  ,lg8-lg12 d812
20:06:36  36  ,lg6-lg12 d612
20:06:36  37  ,lg12-lg18 d1218
20:06:36  38  --
20:06:36  39  ,ABS(clse-lg1)dc1
20:06:36  40  ,ABS(clse-lg2)dc2
20:06:36  41  ,ABS(clse-lg3)dc3
20:06:36  42  ,ABS(clse-lg4)dc4
20:06:36  43  ,ABS(clse-lg5)dc5
20:06:36  44  ,ABS(clse-lg6)dc6
20:06:36  45  ,ABS(clse-lg7)dc7
20:06:36  46  ,ABS(clse-lg8)dc8
20:06:36  47  ,ABS(clse-lg9)dc9
20:06:36  48  ,ABS(clse-lg12)dc12
20:06:36  49  ,ABS(clse-lg18)dc18
20:06:36  50  ,ABS(clse-lg24)dc24
20:06:36  51  ,ABS(clse-lg72)dc72
20:06:36  52  ,(ld4-clse) ug4
20:06:36  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:06:36  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:06:36  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:06:36  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:06:36  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:06:36  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:06:36  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:06:36  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:06:36  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:06:36  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:06:36  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:06:36  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:06:36  65  ,0+TO_CHAR(ydate,'D')d
20:06:36  66  ,0+TO_CHAR(ydate,'W')w
20:06:36  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:06:36  68  FROM q11
20:06:36  69  -- I dont want any NULL values from the LAG() functions:
20:06:36  70  WHERE lg72 > 0
20:06:36  71  ORDER BY pair,ydate
20:06:36  72  /

Table created.

Elapsed: 00:00:01.70
20:06:38 SQL> 
20:06:38 SQL> -- rpt
20:06:38 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9020
	-1	   10937

Elapsed: 00:00:00.07
20:06:38 SQL> 
20:06:38 SQL> -- Calc gains and ntiles
20:06:38 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.19
20:06:38 SQL> CREATE TABLE q15 COMPRESS AS
20:06:38   2  SELECT
20:06:38   3  pair
20:06:38   4  ,ydate
20:06:38   5  ,prdate -- Should be unique
20:06:38   6  ,trend -- +1 or -1
20:06:38   7  ,dc12 -- next statement needs this
20:06:38   8  -- Use NTILE() to derive some attributes
20:06:38   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:06:38  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:06:38  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:06:38  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:06:38  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:06:38  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:06:38  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:06:38  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:06:38  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:06:38  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:06:38  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:06:38  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:06:38  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:06:38  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:06:38  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:06:38  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:06:38  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:06:38  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:06:38  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:06:38  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:06:38  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:06:38  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:06:38  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:06:38  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:06:38  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:06:38  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:06:38  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:06:38  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:06:38  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:06:38  38  ,hh    att28
20:06:38  39  ,d     att29
20:06:38  40  ,w     att30
20:06:38  41  ,mpm   att31
20:06:38  42  ,trend att32
20:06:38  43  ,ug4 g4
20:06:38  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:06:38  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:06:38  46  FROM q13
20:06:38  47  ORDER BY pair,ydate
20:06:38  48  /

Table created.

Elapsed: 00:00:04.01
20:06:42 SQL> 
20:06:42 SQL> -- rpt
20:06:42 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:06:42   2  GROUP BY pair,trend,gatt,gattn
20:06:42   3  ORDER BY pair,trend,gatt,gattn
20:06:42   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	 1 nup nup  -.0000152	    2064    -.06493239
usd_cad 	 1 nup up  -.00238708	    3848    -.00005457
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.05
20:06:42 SQL> 
20:06:42 SQL> -- rpt
20:06:42 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-16 20:00:00

Elapsed: 00:00:00.01
20:06:42 SQL> 
20:06:42 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.18
20:06:42 SQL> CREATE TABLE modsrc COMPRESS AS
20:06:42   2  SELECT
20:06:42   3  pair
20:06:42   4  ,ydate
20:06:42   5  ,prdate
20:06:42   6  ,trend
20:06:42   7  ,g4
20:06:42   8  ,gatt
20:06:42   9  ,gattn
20:06:42  10  ,dc12
20:06:42  11  FROM q15
20:06:42  12  /

Table created.

Elapsed: 00:00:00.09
20:06:42 SQL> 
20:06:42 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.23
20:06:43 SQL> 
20:06:43 SQL> -- rpt
20:06:43 SQL> 
20:06:43 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.36
20:06:43 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
20:06:43 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
20:06:43 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
20:06:43 SQL> 
20:06:43 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:06:43   2  GROUP BY pair,trend,gatt,gattn
20:06:43   3  ORDER BY pair,trend,gatt,gattn
20:06:43   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	 1 nup nup  -.0000152	    2064    -.06493239
usd_cad 	 1 nup up  -.00238708	    3848    -.00005457
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
20:06:43 SQL> 
20:06:43 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
20:06:43 SQL> CREATE TABLE cad_ms10 COMPRESS AS
20:06:43   2  SELECT
20:06:43   3  ydate
20:06:43   4  ,trend cad_trend
20:06:43   5  ,g4    cad_g4
20:06:43   6  ,gatt  cad_gatt
20:06:43   7  ,gattn cad_gattn
20:06:43   8  FROM modsrc
20:06:43   9  /

Table created.

Elapsed: 00:00:00.07
20:06:43 SQL> 
20:06:43 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
20:06:43 SQL> 
20:06:43 SQL> -- rpt
20:06:43 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 20:10:01 2010-12-16 20:00:00	 8972	  -.0089      .0151
	-1 2010-09-12 23:30:01 2010-12-16 14:45:00	10937	  -.0107      .0147

Elapsed: 00:00:00.02
20:06:43 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 20:10:01 2010-12-16 20:00:00	       9020	 -.0089       .0151
	-1 2010-09-12 23:30:01 2010-12-16 14:45:00	      10937	 -.0107       .0147

Elapsed: 00:00:00.02
20:06:43 SQL> 
20:06:43 SQL> -- I need a copy of q15 attributes
20:06:43 SQL> 
20:06:43 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.03
20:06:43 SQL> CREATE TABLE cad_att COMPRESS AS
20:06:43   2  SELECT
20:06:43   3  ydate
20:06:43   4  ,att00 cad_att00
20:06:43   5  ,att01 cad_att01
20:06:43   6  ,att02 cad_att02
20:06:43   7  ,att03 cad_att03
20:06:43   8  ,att04 cad_att04
20:06:43   9  ,att05 cad_att05
20:06:43  10  ,att06 cad_att06
20:06:43  11  ,att07 cad_att07
20:06:43  12  ,att08 cad_att08
20:06:43  13  ,att09 cad_att09
20:06:43  14  ,att10 cad_att10
20:06:43  15  ,att11 cad_att11
20:06:43  16  ,att12 cad_att12
20:06:43  17  ,att13 cad_att13
20:06:43  18  ,att14 cad_att14
20:06:43  19  ,att15 cad_att15
20:06:43  20  ,att16 cad_att16
20:06:43  21  ,att17 cad_att17
20:06:43  22  ,att18 cad_att18
20:06:43  23  ,att19 cad_att19
20:06:43  24  ,att20 cad_att20
20:06:43  25  ,att21 cad_att21
20:06:43  26  ,att22 cad_att22
20:06:43  27  ,att23 cad_att23
20:06:43  28  ,att24 cad_att24
20:06:43  29  ,att25 cad_att25
20:06:43  30  ,att26 cad_att26
20:06:43  31  ,att27 cad_att27
20:06:43  32  ,att28 cad_att28
20:06:43  33  ,att29 cad_att29
20:06:43  34  ,att30 cad_att30
20:06:43  35  ,att31 cad_att31
20:06:43  36  ,att32 cad_att32
20:06:43  37  FROM q15
20:06:43  38  /

Table created.

Elapsed: 00:00:00.14
20:06:43 SQL> 
20:06:43 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.54
20:06:44 SQL> 
20:06:44 SQL> -- rpt
20:06:44 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.00
20:06:44 SQL> 
20:06:44 SQL> --
20:06:44 SQL> -- chf10.sql
20:06:44 SQL> --
20:06:44 SQL> 
20:06:44 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:06:44 SQL> 
20:06:44 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.33
20:06:44 SQL> 
20:06:44 SQL> -- I created di5min here:
20:06:44 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:06:44 SQL> 
20:06:44 SQL> CREATE OR REPLACE VIEW q11 AS
20:06:44   2  SELECT
20:06:44   3  pair
20:06:44   4  ,ydate
20:06:44   5  ,prdate
20:06:44   6  ,rownum rnum -- acts as t in my time-series
20:06:44   7  ,clse
20:06:44   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:06:44   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:06:44  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:06:44  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:06:44  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:06:44  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:06:44  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:06:44  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:06:44  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:06:44  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:06:44  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:06:44  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:06:44  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:06:44  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:06:44  22  FROM di5min WHERE pair LIKE'%chf%'
20:06:44  23  ORDER BY ydate
20:06:44  24  /

View created.

Elapsed: 00:00:00.05
20:06:44 SQL> 
20:06:44 SQL> -- rpt
20:06:44 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20824

Elapsed: 00:00:00.35
20:06:45 SQL> 
20:06:45 SQL> -- Calc deltas and gains
20:06:45 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.24
20:06:45 SQL> 
20:06:45 SQL> CREATE TABLE q13 COMPRESS AS
20:06:45   2  SELECT
20:06:45   3  pair
20:06:45   4  ,ydate
20:06:45   5  ,prdate
20:06:45   6  ,rnum
20:06:45   7  ,lg4
20:06:45   8  ,lg8
20:06:45   9  ,lg12
20:06:45  10  ,ld4
20:06:45  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:06:45  12  -- step by 1
20:06:45  13  ,clse-lg1 d01
20:06:45  14  ,lg1-lg2	d12
20:06:45  15  ,lg2-lg3	d23
20:06:45  16  ,lg3-lg4	d34
20:06:45  17  ,lg4-lg5	d45
20:06:45  18  ,lg5-lg6	d56
20:06:45  19  ,lg6-lg7	d67
20:06:45  20  ,lg7-lg8	d78
20:06:45  21  ,lg8-lg9	d89
20:06:45  22  -- step by 2
20:06:45  23  ,clse-lg2 d02
20:06:45  24  ,lg2-lg4 d24
20:06:45  25  ,lg4-lg6 d46
20:06:45  26  ,lg6-lg8 d68
20:06:45  27  -- step by 3
20:06:45  28  ,clse-lg3 d03
20:06:45  29  ,lg3-lg6	d36
20:06:45  30  ,lg6-lg9	d69
20:06:45  31  ,lg9-lg12 d912
20:06:45  32  -- step by 4
20:06:45  33  ,clse-lg4 d04
20:06:45  34  ,lg4-lg8	d48
20:06:45  35  ,lg8-lg12 d812
20:06:45  36  ,lg6-lg12 d612
20:06:45  37  ,lg12-lg18 d1218
20:06:45  38  --
20:06:45  39  ,ABS(clse-lg1)dc1
20:06:45  40  ,ABS(clse-lg2)dc2
20:06:45  41  ,ABS(clse-lg3)dc3
20:06:45  42  ,ABS(clse-lg4)dc4
20:06:45  43  ,ABS(clse-lg5)dc5
20:06:45  44  ,ABS(clse-lg6)dc6
20:06:45  45  ,ABS(clse-lg7)dc7
20:06:45  46  ,ABS(clse-lg8)dc8
20:06:45  47  ,ABS(clse-lg9)dc9
20:06:45  48  ,ABS(clse-lg12)dc12
20:06:45  49  ,ABS(clse-lg18)dc18
20:06:45  50  ,ABS(clse-lg24)dc24
20:06:45  51  ,ABS(clse-lg72)dc72
20:06:45  52  ,(ld4-clse) ug4
20:06:45  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:06:45  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:06:45  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:06:45  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:06:45  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:06:45  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:06:45  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:06:45  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:06:45  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:06:45  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:06:45  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:06:45  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:06:45  65  ,0+TO_CHAR(ydate,'D')d
20:06:45  66  ,0+TO_CHAR(ydate,'W')w
20:06:45  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:06:45  68  FROM q11
20:06:45  69  -- I dont want any NULL values from the LAG() functions:
20:06:45  70  WHERE lg72 > 0
20:06:45  71  ORDER BY pair,ydate
20:06:45  72  /

Table created.

Elapsed: 00:00:01.70
20:06:47 SQL> 
20:06:47 SQL> -- rpt
20:06:47 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9320
	-1	   10640

Elapsed: 00:00:00.06
20:06:47 SQL> 
20:06:47 SQL> -- Calc gains and ntiles
20:06:47 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.20
20:06:47 SQL> CREATE TABLE q15 COMPRESS AS
20:06:47   2  SELECT
20:06:47   3  pair
20:06:47   4  ,ydate
20:06:47   5  ,prdate -- Should be unique
20:06:47   6  ,trend -- +1 or -1
20:06:47   7  ,dc12 -- next statement needs this
20:06:47   8  -- Use NTILE() to derive some attributes
20:06:47   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:06:47  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:06:47  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:06:47  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:06:47  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:06:47  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:06:47  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:06:47  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:06:47  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:06:47  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:06:47  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:06:47  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:06:47  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:06:47  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:06:47  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:06:47  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:06:47  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:06:47  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:06:47  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:06:47  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:06:47  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:06:47  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:06:47  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:06:47  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:06:47  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:06:47  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:06:47  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:06:47  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:06:47  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:06:47  38  ,hh    att28
20:06:47  39  ,d     att29
20:06:47  40  ,w     att30
20:06:47  41  ,mpm   att31
20:06:47  42  ,trend att32
20:06:47  43  ,ug4 g4
20:06:47  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:06:47  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:06:47  46  FROM q13
20:06:47  47  ORDER BY pair,ydate
20:06:47  48  /

Table created.

Elapsed: 00:00:03.96
20:06:51 SQL> 
20:06:51 SQL> -- rpt
20:06:51 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:06:51   2  GROUP BY pair,trend,gatt,gattn
20:06:51   3  ORDER BY pair,trend,gatt,gattn
20:06:51   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032073	    2651    .042332329
usd_chf 	-1 nup up  -.00292334	    3907    .063124151
usd_chf 	-1 up  nup .002645254	    4051     -.1201665
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00253723	    3845    .111599855
usd_chf 	 1 up  nup .002433841	    3232     -.1606913
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
20:06:51 SQL> 
20:06:51 SQL> -- rpt
20:06:51 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-16 20:00:00

Elapsed: 00:00:00.01
20:06:51 SQL> 
20:06:51 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
20:06:51 SQL> CREATE TABLE modsrc COMPRESS AS
20:06:51   2  SELECT
20:06:51   3  pair
20:06:51   4  ,ydate
20:06:51   5  ,prdate
20:06:51   6  ,trend
20:06:51   7  ,g4
20:06:51   8  ,gatt
20:06:51   9  ,gattn
20:06:51  10  ,dc12
20:06:51  11  FROM q15
20:06:51  12  /

Table created.

Elapsed: 00:00:00.09
20:06:51 SQL> 
20:06:51 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.23
20:06:51 SQL> 
20:06:51 SQL> -- rpt
20:06:51 SQL> 
20:06:51 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20824

Elapsed: 00:00:00.36
20:06:52 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
20:06:52 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
20:06:52 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
20:06:52 SQL> 
20:06:52 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:06:52   2  GROUP BY pair,trend,gatt,gattn
20:06:52   3  ORDER BY pair,trend,gatt,gattn
20:06:52   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032073	    2651    .042332329
usd_chf 	-1 nup up  -.00292334	    3907    .063124151
usd_chf 	-1 up  nup .002645254	    4051     -.1201665
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00253723	    3845    .111599855
usd_chf 	 1 up  nup .002433841	    3232     -.1606913
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
20:06:52 SQL> 
20:06:52 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
20:06:52 SQL> CREATE TABLE chf_ms10 COMPRESS AS
20:06:52   2  SELECT
20:06:52   3  ydate
20:06:52   4  ,trend chf_trend
20:06:52   5  ,g4    chf_g4
20:06:52   6  ,gatt  chf_gatt
20:06:52   7  ,gattn chf_gattn
20:06:52   8  FROM modsrc
20:06:52   9  /

Table created.

Elapsed: 00:00:00.10
20:06:52 SQL> 
20:06:52 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
20:06:52 SQL> 
20:06:52 SQL> -- rpt
20:06:52 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	 9303	  -.0176     .01365
	-1 2010-09-10 20:10:01 2010-12-16 20:00:00	10609	  -.0166      .0149

Elapsed: 00:00:00.02
20:06:52 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	       9320	 -.0176      .01365
	-1 2010-09-10 20:10:01 2010-12-16 20:00:00	      10640	 -.0166       .0149

Elapsed: 00:00:00.02
20:06:52 SQL> 
20:06:52 SQL> -- I need a copy of q15 attributes
20:06:52 SQL> 
20:06:52 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.04
20:06:52 SQL> CREATE TABLE chf_att COMPRESS AS
20:06:52   2  SELECT
20:06:52   3  ydate
20:06:52   4  ,att00 chf_att00
20:06:52   5  ,att01 chf_att01
20:06:52   6  ,att02 chf_att02
20:06:52   7  ,att03 chf_att03
20:06:52   8  ,att04 chf_att04
20:06:52   9  ,att05 chf_att05
20:06:52  10  ,att06 chf_att06
20:06:52  11  ,att07 chf_att07
20:06:52  12  ,att08 chf_att08
20:06:52  13  ,att09 chf_att09
20:06:52  14  ,att10 chf_att10
20:06:52  15  ,att11 chf_att11
20:06:52  16  ,att12 chf_att12
20:06:52  17  ,att13 chf_att13
20:06:52  18  ,att14 chf_att14
20:06:52  19  ,att15 chf_att15
20:06:52  20  ,att16 chf_att16
20:06:52  21  ,att17 chf_att17
20:06:52  22  ,att18 chf_att18
20:06:52  23  ,att19 chf_att19
20:06:52  24  ,att20 chf_att20
20:06:52  25  ,att21 chf_att21
20:06:52  26  ,att22 chf_att22
20:06:52  27  ,att23 chf_att23
20:06:52  28  ,att24 chf_att24
20:06:52  29  ,att25 chf_att25
20:06:52  30  ,att26 chf_att26
20:06:52  31  ,att27 chf_att27
20:06:52  32  ,att28 chf_att28
20:06:52  33  ,att29 chf_att29
20:06:52  34  ,att30 chf_att30
20:06:52  35  ,att31 chf_att31
20:06:52  36  ,att32 chf_att32
20:06:52  37  FROM q15
20:06:52  38  /

Table created.

Elapsed: 00:00:00.16
20:06:52 SQL> 
20:06:52 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
20:06:53 SQL> 
20:06:53 SQL> -- rpt
20:06:53 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19960

Elapsed: 00:00:00.00
20:06:53 SQL> 
20:06:53 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
