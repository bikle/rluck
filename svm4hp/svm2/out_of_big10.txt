
SQL*Plus: Release 11.2.0.1.0 Production on Fri Dec 17 03:31:33 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

03:31:33 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
03:31:33 SQL> 03:31:33 SQL> --
03:31:33 SQL> -- eur10.sql
03:31:33 SQL> --
03:31:33 SQL> 
03:31:33 SQL> -- Creates views and tables for backtesting a forex SVM strategy
03:31:33 SQL> 
03:31:33 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.01
03:31:33 SQL> 
03:31:33 SQL> -- I created di5min here:
03:31:33 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
03:31:33 SQL> 
03:31:33 SQL> CREATE OR REPLACE VIEW q11 AS
03:31:33   2  SELECT
03:31:33   3  pair
03:31:33   4  ,ydate
03:31:33   5  ,prdate
03:31:33   6  ,rownum rnum -- acts as t in my time-series
03:31:33   7  ,clse
03:31:33   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
03:31:33   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
03:31:33  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
03:31:33  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
03:31:33  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
03:31:33  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
03:31:33  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
03:31:33  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
03:31:33  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
03:31:33  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
03:31:33  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
03:31:33  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
03:31:33  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
03:31:33  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
03:31:33  22  FROM di5min WHERE pair LIKE'%eur%'
03:31:33  23  ORDER BY ydate
03:31:33  24  /

View created.

Elapsed: 00:00:00.04
03:31:33 SQL> 
03:31:33 SQL> -- rpt
03:31:33 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20822

Elapsed: 00:00:00.38
03:31:33 SQL> 
03:31:33 SQL> -- Calc deltas and gains
03:31:33 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.04
03:31:33 SQL> 
03:31:33 SQL> CREATE TABLE q13 COMPRESS AS
03:31:33   2  SELECT
03:31:33   3  pair
03:31:33   4  ,ydate
03:31:33   5  ,prdate
03:31:33   6  ,rnum
03:31:33   7  ,lg4
03:31:33   8  ,lg8
03:31:33   9  ,lg12
03:31:33  10  ,ld4
03:31:33  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
03:31:33  12  -- step by 1
03:31:33  13  ,clse-lg1 d01
03:31:33  14  ,lg1-lg2	d12
03:31:33  15  ,lg2-lg3	d23
03:31:33  16  ,lg3-lg4	d34
03:31:33  17  ,lg4-lg5	d45
03:31:33  18  ,lg5-lg6	d56
03:31:33  19  ,lg6-lg7	d67
03:31:33  20  ,lg7-lg8	d78
03:31:33  21  ,lg8-lg9	d89
03:31:33  22  -- step by 2
03:31:33  23  ,clse-lg2 d02
03:31:33  24  ,lg2-lg4 d24
03:31:33  25  ,lg4-lg6 d46
03:31:33  26  ,lg6-lg8 d68
03:31:33  27  -- step by 3
03:31:33  28  ,clse-lg3 d03
03:31:33  29  ,lg3-lg6	d36
03:31:33  30  ,lg6-lg9	d69
03:31:33  31  ,lg9-lg12 d912
03:31:33  32  -- step by 4
03:31:33  33  ,clse-lg4 d04
03:31:33  34  ,lg4-lg8	d48
03:31:33  35  ,lg8-lg12 d812
03:31:33  36  ,lg6-lg12 d612
03:31:33  37  ,lg12-lg18 d1218
03:31:33  38  --
03:31:33  39  ,ABS(clse-lg1)dc1
03:31:33  40  ,ABS(clse-lg2)dc2
03:31:33  41  ,ABS(clse-lg3)dc3
03:31:33  42  ,ABS(clse-lg4)dc4
03:31:33  43  ,ABS(clse-lg5)dc5
03:31:33  44  ,ABS(clse-lg6)dc6
03:31:33  45  ,ABS(clse-lg7)dc7
03:31:33  46  ,ABS(clse-lg8)dc8
03:31:33  47  ,ABS(clse-lg9)dc9
03:31:33  48  ,ABS(clse-lg12)dc12
03:31:33  49  ,ABS(clse-lg18)dc18
03:31:33  50  ,ABS(clse-lg24)dc24
03:31:33  51  ,ABS(clse-lg72)dc72
03:31:33  52  ,(ld4-clse) ug4
03:31:33  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
03:31:33  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
03:31:33  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
03:31:33  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
03:31:33  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
03:31:33  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
03:31:33  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
03:31:33  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
03:31:33  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
03:31:33  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
03:31:33  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
03:31:33  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
03:31:33  65  ,0+TO_CHAR(ydate,'D')d
03:31:33  66  ,0+TO_CHAR(ydate,'W')w
03:31:33  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
03:31:33  68  FROM q11
03:31:33  69  -- I dont want any NULL values from the LAG() functions:
03:31:33  70  WHERE lg72 > 0
03:31:33  71  ORDER BY pair,ydate
03:31:33  72  /

Table created.

Elapsed: 00:00:02.00
03:31:35 SQL> 
03:31:35 SQL> -- rpt
03:31:35 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10289
	-1	    9669

Elapsed: 00:00:00.03
03:31:35 SQL> 
03:31:35 SQL> -- Calc gains and ntiles
03:31:35 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.03
03:31:35 SQL> CREATE TABLE q15 COMPRESS AS
03:31:35   2  SELECT
03:31:35   3  pair
03:31:35   4  ,ydate
03:31:35   5  ,prdate -- Should be unique
03:31:35   6  ,trend -- +1 or -1
03:31:35   7  ,dc12 -- next statement needs this
03:31:35   8  -- Use NTILE() to derive some attributes
03:31:35   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
03:31:35  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
03:31:35  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
03:31:35  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
03:31:35  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
03:31:35  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
03:31:35  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
03:31:35  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
03:31:35  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
03:31:35  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
03:31:35  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
03:31:35  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
03:31:35  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
03:31:35  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
03:31:35  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
03:31:35  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
03:31:35  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
03:31:35  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
03:31:35  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
03:31:35  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
03:31:35  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
03:31:35  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
03:31:35  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
03:31:35  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
03:31:35  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
03:31:35  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
03:31:35  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
03:31:35  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
03:31:35  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
03:31:35  38  ,hh    att28
03:31:35  39  ,d     att29
03:31:35  40  ,w     att30
03:31:35  41  ,mpm   att31
03:31:35  42  ,trend att32
03:31:35  43  ,ug4 g4
03:31:35  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
03:31:35  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
03:31:35  46  FROM q13
03:31:35  47  ORDER BY pair,ydate
03:31:35  48  /

Table created.

Elapsed: 00:00:04.10
03:31:39 SQL> 
03:31:39 SQL> -- rpt
03:31:39 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
03:31:39   2  GROUP BY pair,trend,gatt,gattn
03:31:39   3  ORDER BY pair,trend,gatt,gattn
03:31:39   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003617917	    4186    -.20324836
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014031	    1739    .037041419
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003728123	    4307    -.14196156
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
03:31:39 SQL> 
03:31:39 SQL> -- rpt
03:31:39 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-17 03:25:00

Elapsed: 00:00:00.01
03:31:40 SQL> 
03:31:40 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.03
03:31:40 SQL> CREATE TABLE modsrc COMPRESS AS
03:31:40   2  SELECT
03:31:40   3  pair
03:31:40   4  ,ydate
03:31:40   5  ,prdate
03:31:40   6  ,trend
03:31:40   7  ,g4
03:31:40   8  ,gatt
03:31:40   9  ,gattn
03:31:40  10  ,dc12
03:31:40  11  FROM q15
03:31:40  12  /

Table created.

Elapsed: 00:00:00.12
03:31:40 SQL> 
03:31:40 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.25
03:31:40 SQL> 
03:31:40 SQL> -- rpt
03:31:40 SQL> 
03:31:40 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.35
03:31:40 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
03:31:40 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
03:31:40 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
03:31:40 SQL> 
03:31:40 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
03:31:40   2  GROUP BY pair,trend,gatt,gattn
03:31:40   3  ORDER BY pair,trend,gatt,gattn
03:31:40   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003617917	    4186    -.20324836
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014031	    1739    .037041419
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003728123	    4307    -.14196156
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
03:31:40 SQL> 
03:31:40 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
03:31:40 SQL> CREATE TABLE eur_ms10 COMPRESS AS
03:31:40   2  SELECT
03:31:40   3  ydate
03:31:40   4  ,trend eur_trend
03:31:40   5  ,g4    eur_g4
03:31:40   6  ,gatt  eur_gatt
03:31:40   7  ,gattn eur_gattn
03:31:40   8  FROM modsrc
03:31:40   9  /

Table created.

Elapsed: 00:00:00.09
03:31:40 SQL> 
03:31:40 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
03:31:41 SQL> 
03:31:41 SQL> -- rpt
03:31:41 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 02:35:01 2010-12-17 03:25:00	10249	  -.0153      .0165
	-1 2010-09-14 03:40:01 2010-12-17 00:50:00	 9661	  -.0164      .0167

Elapsed: 00:00:00.02
03:31:41 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 02:35:01 2010-12-17 03:25:00	      10289	 -.0153       .0165
	-1 2010-09-14 03:40:01 2010-12-17 00:50:00	       9669	 -.0164       .0167

Elapsed: 00:00:00.02
03:31:41 SQL> 
03:31:41 SQL> -- I need a copy of q15 attributes
03:31:41 SQL> 
03:31:41 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.03
03:31:41 SQL> CREATE TABLE eur_att COMPRESS AS
03:31:41   2  SELECT
03:31:41   3  ydate
03:31:41   4  ,att00 eur_att00
03:31:41   5  ,att01 eur_att01
03:31:41   6  ,att02 eur_att02
03:31:41   7  ,att03 eur_att03
03:31:41   8  ,att04 eur_att04
03:31:41   9  ,att05 eur_att05
03:31:41  10  ,att06 eur_att06
03:31:41  11  ,att07 eur_att07
03:31:41  12  ,att08 eur_att08
03:31:41  13  ,att09 eur_att09
03:31:41  14  ,att10 eur_att10
03:31:41  15  ,att11 eur_att11
03:31:41  16  ,att12 eur_att12
03:31:41  17  ,att13 eur_att13
03:31:41  18  ,att14 eur_att14
03:31:41  19  ,att15 eur_att15
03:31:41  20  ,att16 eur_att16
03:31:41  21  ,att17 eur_att17
03:31:41  22  ,att18 eur_att18
03:31:41  23  ,att19 eur_att19
03:31:41  24  ,att20 eur_att20
03:31:41  25  ,att21 eur_att21
03:31:41  26  ,att22 eur_att22
03:31:41  27  ,att23 eur_att23
03:31:41  28  ,att24 eur_att24
03:31:41  29  ,att25 eur_att25
03:31:41  30  ,att26 eur_att26
03:31:41  31  ,att27 eur_att27
03:31:41  32  ,att28 eur_att28
03:31:41  33  ,att29 eur_att29
03:31:41  34  ,att30 eur_att30
03:31:41  35  ,att31 eur_att31
03:31:41  36  ,att32 eur_att32
03:31:41  37  FROM q15
03:31:41  38  /

Table created.

Elapsed: 00:00:00.15
03:31:41 SQL> 
03:31:41 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.41
03:31:41 SQL> 
03:31:41 SQL> -- rpt
03:31:41 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.00
03:31:41 SQL> 
03:31:41 SQL> --
03:31:41 SQL> -- aud10.sql
03:31:41 SQL> --
03:31:41 SQL> 
03:31:41 SQL> -- Creates views and tables for backtesting a forex SVM strategy
03:31:41 SQL> 
03:31:41 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.39
03:31:42 SQL> 
03:31:42 SQL> -- I created di5min here:
03:31:42 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
03:31:42 SQL> 
03:31:42 SQL> CREATE OR REPLACE VIEW q11 AS
03:31:42   2  SELECT
03:31:42   3  pair
03:31:42   4  ,ydate
03:31:42   5  ,prdate
03:31:42   6  ,rownum rnum -- acts as t in my time-series
03:31:42   7  ,clse
03:31:42   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
03:31:42   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
03:31:42  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
03:31:42  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
03:31:42  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
03:31:42  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
03:31:42  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
03:31:42  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
03:31:42  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
03:31:42  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
03:31:42  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
03:31:42  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
03:31:42  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
03:31:42  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
03:31:42  22  FROM di5min WHERE pair LIKE'%aud%'
03:31:42  23  ORDER BY ydate
03:31:42  24  /

View created.

Elapsed: 00:00:00.09
03:31:42 SQL> 
03:31:42 SQL> -- rpt
03:31:42 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20819

Elapsed: 00:00:00.36
03:31:42 SQL> 
03:31:42 SQL> -- Calc deltas and gains
03:31:42 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
03:31:42 SQL> 
03:31:42 SQL> CREATE TABLE q13 COMPRESS AS
03:31:42   2  SELECT
03:31:42   3  pair
03:31:42   4  ,ydate
03:31:42   5  ,prdate
03:31:42   6  ,rnum
03:31:42   7  ,lg4
03:31:42   8  ,lg8
03:31:42   9  ,lg12
03:31:42  10  ,ld4
03:31:42  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
03:31:42  12  -- step by 1
03:31:42  13  ,clse-lg1 d01
03:31:42  14  ,lg1-lg2	d12
03:31:42  15  ,lg2-lg3	d23
03:31:42  16  ,lg3-lg4	d34
03:31:42  17  ,lg4-lg5	d45
03:31:42  18  ,lg5-lg6	d56
03:31:42  19  ,lg6-lg7	d67
03:31:42  20  ,lg7-lg8	d78
03:31:42  21  ,lg8-lg9	d89
03:31:42  22  -- step by 2
03:31:42  23  ,clse-lg2 d02
03:31:42  24  ,lg2-lg4 d24
03:31:42  25  ,lg4-lg6 d46
03:31:42  26  ,lg6-lg8 d68
03:31:42  27  -- step by 3
03:31:42  28  ,clse-lg3 d03
03:31:42  29  ,lg3-lg6	d36
03:31:42  30  ,lg6-lg9	d69
03:31:42  31  ,lg9-lg12 d912
03:31:42  32  -- step by 4
03:31:42  33  ,clse-lg4 d04
03:31:42  34  ,lg4-lg8	d48
03:31:42  35  ,lg8-lg12 d812
03:31:42  36  ,lg6-lg12 d612
03:31:42  37  ,lg12-lg18 d1218
03:31:42  38  --
03:31:42  39  ,ABS(clse-lg1)dc1
03:31:42  40  ,ABS(clse-lg2)dc2
03:31:42  41  ,ABS(clse-lg3)dc3
03:31:42  42  ,ABS(clse-lg4)dc4
03:31:42  43  ,ABS(clse-lg5)dc5
03:31:42  44  ,ABS(clse-lg6)dc6
03:31:42  45  ,ABS(clse-lg7)dc7
03:31:42  46  ,ABS(clse-lg8)dc8
03:31:42  47  ,ABS(clse-lg9)dc9
03:31:42  48  ,ABS(clse-lg12)dc12
03:31:42  49  ,ABS(clse-lg18)dc18
03:31:42  50  ,ABS(clse-lg24)dc24
03:31:42  51  ,ABS(clse-lg72)dc72
03:31:42  52  ,(ld4-clse) ug4
03:31:42  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
03:31:42  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
03:31:42  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
03:31:42  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
03:31:42  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
03:31:42  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
03:31:42  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
03:31:42  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
03:31:42  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
03:31:42  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
03:31:42  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
03:31:42  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
03:31:42  65  ,0+TO_CHAR(ydate,'D')d
03:31:42  66  ,0+TO_CHAR(ydate,'W')w
03:31:42  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
03:31:42  68  FROM q11
03:31:42  69  -- I dont want any NULL values from the LAG() functions:
03:31:42  70  WHERE lg72 > 0
03:31:42  71  ORDER BY pair,ydate
03:31:42  72  /

Table created.

Elapsed: 00:00:01.73
03:31:44 SQL> 
03:31:44 SQL> -- rpt
03:31:44 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10455
	-1	    9500

Elapsed: 00:00:00.03
03:31:44 SQL> 
03:31:44 SQL> -- Calc gains and ntiles
03:31:44 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
03:31:44 SQL> CREATE TABLE q15 COMPRESS AS
03:31:44   2  SELECT
03:31:44   3  pair
03:31:44   4  ,ydate
03:31:44   5  ,prdate -- Should be unique
03:31:44   6  ,trend -- +1 or -1
03:31:44   7  ,dc12 -- next statement needs this
03:31:44   8  -- Use NTILE() to derive some attributes
03:31:44   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
03:31:44  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
03:31:44  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
03:31:44  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
03:31:44  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
03:31:44  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
03:31:44  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
03:31:44  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
03:31:44  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
03:31:44  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
03:31:44  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
03:31:44  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
03:31:44  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
03:31:44  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
03:31:44  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
03:31:44  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
03:31:44  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
03:31:44  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
03:31:44  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
03:31:44  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
03:31:44  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
03:31:44  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
03:31:44  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
03:31:44  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
03:31:44  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
03:31:44  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
03:31:44  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
03:31:44  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
03:31:44  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
03:31:44  38  ,hh    att28
03:31:44  39  ,d     att29
03:31:44  40  ,w     att30
03:31:44  41  ,mpm   att31
03:31:44  42  ,trend att32
03:31:44  43  ,ug4 g4
03:31:44  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
03:31:44  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
03:31:44  46  FROM q13
03:31:44  47  ORDER BY pair,ydate
03:31:44  48  /

Table created.

Elapsed: 00:00:04.35
03:31:49 SQL> 
03:31:49 SQL> -- rpt
03:31:49 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
03:31:49   2  GROUP BY pair,trend,gatt,gattn
03:31:49   3  ORDER BY pair,trend,gatt,gattn
03:31:49   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002977146	    4368      .0266986
aud_usd 	 1 nup nup 2.8956E-06	    1934     .02248855
aud_usd 	 1 nup up  -.00289683	    4041    .052583093
aud_usd 	 1 up  nup .002937523	    4432    -.17495059
aud_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
03:31:49 SQL> 
03:31:49 SQL> -- rpt
03:31:49 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-17 03:25:00

Elapsed: 00:00:00.01
03:31:49 SQL> 
03:31:49 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.41
03:31:49 SQL> CREATE TABLE modsrc COMPRESS AS
03:31:49   2  SELECT
03:31:49   3  pair
03:31:49   4  ,ydate
03:31:49   5  ,prdate
03:31:49   6  ,trend
03:31:49   7  ,g4
03:31:49   8  ,gatt
03:31:49   9  ,gattn
03:31:49  10  ,dc12
03:31:49  11  FROM q15
03:31:49  12  /

Table created.

Elapsed: 00:00:00.09
03:31:49 SQL> 
03:31:49 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
03:31:49 SQL> 
03:31:49 SQL> -- rpt
03:31:49 SQL> 
03:31:49 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20819

Elapsed: 00:00:00.36
03:31:50 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.00
03:31:50 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.01
03:31:50 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.00
03:31:50 SQL> 
03:31:50 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
03:31:50   2  GROUP BY pair,trend,gatt,gattn
03:31:50   3  ORDER BY pair,trend,gatt,gattn
03:31:50   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002977146	    4368      .0266986
aud_usd 	 1 nup nup 2.8956E-06	    1934     .02248855
aud_usd 	 1 nup up  -.00289683	    4041    .052583093
aud_usd 	 1 up  nup .002937523	    4432    -.17495059
aud_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
03:31:50 SQL> 
03:31:50 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
03:31:50 SQL> CREATE TABLE aud_ms10 COMPRESS AS
03:31:50   2  SELECT
03:31:50   3  ydate
03:31:50   4  ,trend aud_trend
03:31:50   5  ,g4    aud_g4
03:31:50   6  ,gatt  aud_gatt
03:31:50   7  ,gattn aud_gattn
03:31:50   8  FROM modsrc
03:31:50   9  /

Table created.

Elapsed: 00:00:00.10
03:31:50 SQL> 
03:31:50 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
03:31:50 SQL> 
03:31:50 SQL> -- rpt
03:31:50 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 02:35:01 2010-12-17 03:25:00	10407	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-16 21:20:00	 9500	   -.017      .0131

Elapsed: 00:00:00.02
03:31:50 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 02:35:01 2010-12-17 03:25:00	      10455	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-16 21:20:00	       9500	  -.017       .0131

Elapsed: 00:00:00.01
03:31:50 SQL> 
03:31:50 SQL> -- I need a copy of q15 attributes
03:31:50 SQL> 
03:31:50 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.07
03:31:50 SQL> CREATE TABLE aud_att COMPRESS AS
03:31:50   2  SELECT
03:31:50   3  ydate
03:31:50   4  ,att00 aud_att00
03:31:50   5  ,att01 aud_att01
03:31:50   6  ,att02 aud_att02
03:31:50   7  ,att03 aud_att03
03:31:50   8  ,att04 aud_att04
03:31:50   9  ,att05 aud_att05
03:31:50  10  ,att06 aud_att06
03:31:50  11  ,att07 aud_att07
03:31:50  12  ,att08 aud_att08
03:31:50  13  ,att09 aud_att09
03:31:50  14  ,att10 aud_att10
03:31:50  15  ,att11 aud_att11
03:31:50  16  ,att12 aud_att12
03:31:50  17  ,att13 aud_att13
03:31:50  18  ,att14 aud_att14
03:31:50  19  ,att15 aud_att15
03:31:50  20  ,att16 aud_att16
03:31:50  21  ,att17 aud_att17
03:31:50  22  ,att18 aud_att18
03:31:50  23  ,att19 aud_att19
03:31:50  24  ,att20 aud_att20
03:31:50  25  ,att21 aud_att21
03:31:50  26  ,att22 aud_att22
03:31:50  27  ,att23 aud_att23
03:31:50  28  ,att24 aud_att24
03:31:50  29  ,att25 aud_att25
03:31:50  30  ,att26 aud_att26
03:31:50  31  ,att27 aud_att27
03:31:50  32  ,att28 aud_att28
03:31:50  33  ,att29 aud_att29
03:31:50  34  ,att30 aud_att30
03:31:50  35  ,att31 aud_att31
03:31:50  36  ,att32 aud_att32
03:31:50  37  FROM q15
03:31:50  38  /

Table created.

Elapsed: 00:00:00.16
03:31:50 SQL> 
03:31:50 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:01.05
03:31:51 SQL> 
03:31:51 SQL> -- rpt
03:31:51 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19955

Elapsed: 00:00:00.00
03:31:51 SQL> 
03:31:51 SQL> --
03:31:51 SQL> -- gbp10.sql
03:31:51 SQL> --
03:31:51 SQL> 
03:31:51 SQL> -- Creates views and tables for backtesting a forex SVM strategy
03:31:51 SQL> 
03:31:51 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
03:31:52 SQL> 
03:31:52 SQL> -- I created di5min here:
03:31:52 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
03:31:52 SQL> 
03:31:52 SQL> CREATE OR REPLACE VIEW q11 AS
03:31:52   2  SELECT
03:31:52   3  pair
03:31:52   4  ,ydate
03:31:52   5  ,prdate
03:31:52   6  ,rownum rnum -- acts as t in my time-series
03:31:52   7  ,clse
03:31:52   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
03:31:52   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
03:31:52  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
03:31:52  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
03:31:52  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
03:31:52  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
03:31:52  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
03:31:52  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
03:31:52  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
03:31:52  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
03:31:52  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
03:31:52  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
03:31:52  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
03:31:52  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
03:31:52  22  FROM di5min WHERE pair LIKE'%gbp%'
03:31:52  23  ORDER BY ydate
03:31:52  24  /

View created.

Elapsed: 00:00:00.05
03:31:52 SQL> 
03:31:52 SQL> -- rpt
03:31:52 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20821

Elapsed: 00:00:00.36
03:31:52 SQL> 
03:31:52 SQL> -- Calc deltas and gains
03:31:52 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.26
03:31:52 SQL> 
03:31:52 SQL> CREATE TABLE q13 COMPRESS AS
03:31:52   2  SELECT
03:31:52   3  pair
03:31:52   4  ,ydate
03:31:52   5  ,prdate
03:31:52   6  ,rnum
03:31:52   7  ,lg4
03:31:52   8  ,lg8
03:31:52   9  ,lg12
03:31:52  10  ,ld4
03:31:52  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
03:31:52  12  -- step by 1
03:31:52  13  ,clse-lg1 d01
03:31:52  14  ,lg1-lg2	d12
03:31:52  15  ,lg2-lg3	d23
03:31:52  16  ,lg3-lg4	d34
03:31:52  17  ,lg4-lg5	d45
03:31:52  18  ,lg5-lg6	d56
03:31:52  19  ,lg6-lg7	d67
03:31:52  20  ,lg7-lg8	d78
03:31:52  21  ,lg8-lg9	d89
03:31:52  22  -- step by 2
03:31:52  23  ,clse-lg2 d02
03:31:52  24  ,lg2-lg4 d24
03:31:52  25  ,lg4-lg6 d46
03:31:52  26  ,lg6-lg8 d68
03:31:52  27  -- step by 3
03:31:52  28  ,clse-lg3 d03
03:31:52  29  ,lg3-lg6	d36
03:31:52  30  ,lg6-lg9	d69
03:31:52  31  ,lg9-lg12 d912
03:31:52  32  -- step by 4
03:31:52  33  ,clse-lg4 d04
03:31:52  34  ,lg4-lg8	d48
03:31:52  35  ,lg8-lg12 d812
03:31:52  36  ,lg6-lg12 d612
03:31:52  37  ,lg12-lg18 d1218
03:31:52  38  --
03:31:52  39  ,ABS(clse-lg1)dc1
03:31:52  40  ,ABS(clse-lg2)dc2
03:31:52  41  ,ABS(clse-lg3)dc3
03:31:52  42  ,ABS(clse-lg4)dc4
03:31:52  43  ,ABS(clse-lg5)dc5
03:31:52  44  ,ABS(clse-lg6)dc6
03:31:52  45  ,ABS(clse-lg7)dc7
03:31:52  46  ,ABS(clse-lg8)dc8
03:31:52  47  ,ABS(clse-lg9)dc9
03:31:52  48  ,ABS(clse-lg12)dc12
03:31:52  49  ,ABS(clse-lg18)dc18
03:31:52  50  ,ABS(clse-lg24)dc24
03:31:52  51  ,ABS(clse-lg72)dc72
03:31:52  52  ,(ld4-clse) ug4
03:31:52  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
03:31:52  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
03:31:52  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
03:31:52  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
03:31:52  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
03:31:52  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
03:31:52  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
03:31:52  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
03:31:52  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
03:31:52  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
03:31:52  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
03:31:52  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
03:31:52  65  ,0+TO_CHAR(ydate,'D')d
03:31:52  66  ,0+TO_CHAR(ydate,'W')w
03:31:52  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
03:31:52  68  FROM q11
03:31:52  69  -- I dont want any NULL values from the LAG() functions:
03:31:52  70  WHERE lg72 > 0
03:31:52  71  ORDER BY pair,ydate
03:31:52  72  /

Table created.

Elapsed: 00:00:02.01
03:31:54 SQL> 
03:31:54 SQL> -- rpt
03:31:54 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9761
	-1	   10196

Elapsed: 00:00:00.05
03:31:54 SQL> 
03:31:54 SQL> -- Calc gains and ntiles
03:31:54 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.85
03:31:55 SQL> CREATE TABLE q15 COMPRESS AS
03:31:55   2  SELECT
03:31:55   3  pair
03:31:55   4  ,ydate
03:31:55   5  ,prdate -- Should be unique
03:31:55   6  ,trend -- +1 or -1
03:31:55   7  ,dc12 -- next statement needs this
03:31:55   8  -- Use NTILE() to derive some attributes
03:31:55   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
03:31:55  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
03:31:55  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
03:31:55  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
03:31:55  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
03:31:55  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
03:31:55  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
03:31:55  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
03:31:55  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
03:31:55  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
03:31:55  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
03:31:55  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
03:31:55  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
03:31:55  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
03:31:55  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
03:31:55  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
03:31:55  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
03:31:55  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
03:31:55  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
03:31:55  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
03:31:55  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
03:31:55  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
03:31:55  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
03:31:55  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
03:31:55  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
03:31:55  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
03:31:55  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
03:31:55  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
03:31:55  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
03:31:55  38  ,hh    att28
03:31:55  39  ,d     att29
03:31:55  40  ,w     att30
03:31:55  41  ,mpm   att31
03:31:55  42  ,trend att32
03:31:55  43  ,ug4 g4
03:31:55  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
03:31:55  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
03:31:55  46  FROM q13
03:31:55  47  ORDER BY pair,ydate
03:31:55  48  /

Table created.

Elapsed: 00:00:04.16
03:31:59 SQL> 
03:31:59 SQL> -- rpt
03:31:59 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
03:31:59   2  GROUP BY pair,trend,gatt,gattn
03:31:59   3  ORDER BY pair,trend,gatt,gattn
03:31:59   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003110916	    4347    -.09517963
gbp_usd 	 1 nup nup .000012699	    1632    .013069516
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003556275	    3948    -.16651661
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.05
03:31:59 SQL> 
03:31:59 SQL> -- rpt
03:31:59 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-17 03:25:00

Elapsed: 00:00:00.01
03:31:59 SQL> 
03:31:59 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
03:32:00 SQL> CREATE TABLE modsrc COMPRESS AS
03:32:00   2  SELECT
03:32:00   3  pair
03:32:00   4  ,ydate
03:32:00   5  ,prdate
03:32:00   6  ,trend
03:32:00   7  ,g4
03:32:00   8  ,gatt
03:32:00   9  ,gattn
03:32:00  10  ,dc12
03:32:00  11  FROM q15
03:32:00  12  /

Table created.

Elapsed: 00:00:00.09
03:32:00 SQL> 
03:32:00 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
03:32:00 SQL> 
03:32:00 SQL> -- rpt
03:32:00 SQL> 
03:32:00 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.36
03:32:00 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
03:32:00 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
03:32:00 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
03:32:00 SQL> 
03:32:00 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
03:32:00   2  GROUP BY pair,trend,gatt,gattn
03:32:00   3  ORDER BY pair,trend,gatt,gattn
03:32:00   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003110916	    4347    -.09517963
gbp_usd 	 1 nup nup .000012699	    1632    .013069516
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003556275	    3948    -.16651661
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
03:32:00 SQL> 
03:32:00 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
03:32:00 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
03:32:00   2  SELECT
03:32:00   3  ydate
03:32:00   4  ,trend gbp_trend
03:32:00   5  ,g4    gbp_g4
03:32:00   6  ,gatt  gbp_gatt
03:32:00   7  ,gattn gbp_gattn
03:32:00   8  FROM modsrc
03:32:00   9  /

Table created.

Elapsed: 00:00:00.07
03:32:00 SQL> 
03:32:00 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
03:32:01 SQL> 
03:32:01 SQL> -- rpt
03:32:01 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 02:35:01 2010-12-17 03:25:00	 9713	  -.0194      .0179
	-1 2010-09-13 12:05:01 2010-12-16 07:30:00	10196	  -.0153      .0159

Elapsed: 00:00:00.02
03:32:01 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 02:35:01 2010-12-17 03:25:00	       9761	 -.0194       .0179
	-1 2010-09-13 12:05:01 2010-12-16 07:30:00	      10196	 -.0153       .0159

Elapsed: 00:00:00.02
03:32:01 SQL> 
03:32:01 SQL> -- I need a copy of q15 attributes
03:32:01 SQL> 
03:32:01 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.03
03:32:01 SQL> CREATE TABLE gbp_att COMPRESS AS
03:32:01   2  SELECT
03:32:01   3  ydate
03:32:01   4  ,att00 gbp_att00
03:32:01   5  ,att01 gbp_att01
03:32:01   6  ,att02 gbp_att02
03:32:01   7  ,att03 gbp_att03
03:32:01   8  ,att04 gbp_att04
03:32:01   9  ,att05 gbp_att05
03:32:01  10  ,att06 gbp_att06
03:32:01  11  ,att07 gbp_att07
03:32:01  12  ,att08 gbp_att08
03:32:01  13  ,att09 gbp_att09
03:32:01  14  ,att10 gbp_att10
03:32:01  15  ,att11 gbp_att11
03:32:01  16  ,att12 gbp_att12
03:32:01  17  ,att13 gbp_att13
03:32:01  18  ,att14 gbp_att14
03:32:01  19  ,att15 gbp_att15
03:32:01  20  ,att16 gbp_att16
03:32:01  21  ,att17 gbp_att17
03:32:01  22  ,att18 gbp_att18
03:32:01  23  ,att19 gbp_att19
03:32:01  24  ,att20 gbp_att20
03:32:01  25  ,att21 gbp_att21
03:32:01  26  ,att22 gbp_att22
03:32:01  27  ,att23 gbp_att23
03:32:01  28  ,att24 gbp_att24
03:32:01  29  ,att25 gbp_att25
03:32:01  30  ,att26 gbp_att26
03:32:01  31  ,att27 gbp_att27
03:32:01  32  ,att28 gbp_att28
03:32:01  33  ,att29 gbp_att29
03:32:01  34  ,att30 gbp_att30
03:32:01  35  ,att31 gbp_att31
03:32:01  36  ,att32 gbp_att32
03:32:01  37  FROM q15
03:32:01  38  /

Table created.

Elapsed: 00:00:00.13
03:32:01 SQL> 
03:32:01 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
03:32:01 SQL> 
03:32:01 SQL> -- rpt
03:32:01 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.00
03:32:01 SQL> 
03:32:01 SQL> --
03:32:01 SQL> -- jpy10.sql
03:32:01 SQL> --
03:32:01 SQL> 
03:32:01 SQL> -- Creates views and tables for backtesting a forex SVM strategy
03:32:01 SQL> 
03:32:01 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.38
03:32:02 SQL> 
03:32:02 SQL> -- I created di5min here:
03:32:02 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
03:32:02 SQL> 
03:32:02 SQL> CREATE OR REPLACE VIEW q11 AS
03:32:02   2  SELECT
03:32:02   3  pair
03:32:02   4  ,ydate
03:32:02   5  ,prdate
03:32:02   6  ,rownum rnum -- acts as t in my time-series
03:32:02   7  ,clse
03:32:02   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
03:32:02   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
03:32:02  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
03:32:02  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
03:32:02  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
03:32:02  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
03:32:02  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
03:32:02  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
03:32:02  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
03:32:02  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
03:32:02  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
03:32:02  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
03:32:02  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
03:32:02  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
03:32:02  22  FROM di5min WHERE pair LIKE'%jpy%'
03:32:02  23  ORDER BY ydate
03:32:02  24  /

View created.

Elapsed: 00:00:00.05
03:32:02 SQL> 
03:32:02 SQL> -- rpt
03:32:02 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20822

Elapsed: 00:00:00.38
03:32:02 SQL> 
03:32:02 SQL> -- Calc deltas and gains
03:32:02 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.19
03:32:02 SQL> 
03:32:02 SQL> CREATE TABLE q13 COMPRESS AS
03:32:02   2  SELECT
03:32:02   3  pair
03:32:02   4  ,ydate
03:32:02   5  ,prdate
03:32:02   6  ,rnum
03:32:02   7  ,lg4
03:32:02   8  ,lg8
03:32:02   9  ,lg12
03:32:02  10  ,ld4
03:32:02  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
03:32:02  12  -- step by 1
03:32:02  13  ,clse-lg1 d01
03:32:02  14  ,lg1-lg2	d12
03:32:02  15  ,lg2-lg3	d23
03:32:02  16  ,lg3-lg4	d34
03:32:02  17  ,lg4-lg5	d45
03:32:02  18  ,lg5-lg6	d56
03:32:02  19  ,lg6-lg7	d67
03:32:02  20  ,lg7-lg8	d78
03:32:02  21  ,lg8-lg9	d89
03:32:02  22  -- step by 2
03:32:02  23  ,clse-lg2 d02
03:32:02  24  ,lg2-lg4 d24
03:32:02  25  ,lg4-lg6 d46
03:32:02  26  ,lg6-lg8 d68
03:32:02  27  -- step by 3
03:32:02  28  ,clse-lg3 d03
03:32:02  29  ,lg3-lg6	d36
03:32:02  30  ,lg6-lg9	d69
03:32:02  31  ,lg9-lg12 d912
03:32:02  32  -- step by 4
03:32:02  33  ,clse-lg4 d04
03:32:02  34  ,lg4-lg8	d48
03:32:02  35  ,lg8-lg12 d812
03:32:02  36  ,lg6-lg12 d612
03:32:02  37  ,lg12-lg18 d1218
03:32:02  38  --
03:32:02  39  ,ABS(clse-lg1)dc1
03:32:02  40  ,ABS(clse-lg2)dc2
03:32:02  41  ,ABS(clse-lg3)dc3
03:32:02  42  ,ABS(clse-lg4)dc4
03:32:02  43  ,ABS(clse-lg5)dc5
03:32:02  44  ,ABS(clse-lg6)dc6
03:32:02  45  ,ABS(clse-lg7)dc7
03:32:02  46  ,ABS(clse-lg8)dc8
03:32:02  47  ,ABS(clse-lg9)dc9
03:32:02  48  ,ABS(clse-lg12)dc12
03:32:02  49  ,ABS(clse-lg18)dc18
03:32:02  50  ,ABS(clse-lg24)dc24
03:32:02  51  ,ABS(clse-lg72)dc72
03:32:02  52  ,(ld4-clse) ug4
03:32:02  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
03:32:02  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
03:32:02  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
03:32:02  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
03:32:02  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
03:32:02  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
03:32:02  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
03:32:02  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
03:32:02  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
03:32:02  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
03:32:02  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
03:32:02  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
03:32:02  65  ,0+TO_CHAR(ydate,'D')d
03:32:02  66  ,0+TO_CHAR(ydate,'W')w
03:32:02  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
03:32:02  68  FROM q11
03:32:02  69  -- I dont want any NULL values from the LAG() functions:
03:32:02  70  WHERE lg72 > 0
03:32:02  71  ORDER BY pair,ydate
03:32:02  72  /

Table created.

Elapsed: 00:00:01.69
03:32:04 SQL> 
03:32:04 SQL> -- rpt
03:32:04 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9235
	-1	   10723

Elapsed: 00:00:00.03
03:32:04 SQL> 
03:32:04 SQL> -- Calc gains and ntiles
03:32:04 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.15
03:32:04 SQL> CREATE TABLE q15 COMPRESS AS
03:32:04   2  SELECT
03:32:04   3  pair
03:32:04   4  ,ydate
03:32:04   5  ,prdate -- Should be unique
03:32:04   6  ,trend -- +1 or -1
03:32:04   7  ,dc12 -- next statement needs this
03:32:04   8  -- Use NTILE() to derive some attributes
03:32:04   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
03:32:04  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
03:32:04  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
03:32:04  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
03:32:04  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
03:32:04  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
03:32:04  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
03:32:04  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
03:32:04  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
03:32:04  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
03:32:04  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
03:32:04  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
03:32:04  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
03:32:04  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
03:32:04  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
03:32:04  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
03:32:04  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
03:32:04  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
03:32:04  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
03:32:04  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
03:32:04  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
03:32:04  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
03:32:04  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
03:32:04  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
03:32:04  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
03:32:04  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
03:32:04  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
03:32:04  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
03:32:04  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
03:32:04  38  ,hh    att28
03:32:04  39  ,d     att29
03:32:04  40  ,w     att30
03:32:04  41  ,mpm   att31
03:32:04  42  ,trend att32
03:32:04  43  ,ug4 g4
03:32:04  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
03:32:04  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
03:32:04  46  FROM q13
03:32:04  47  ORDER BY pair,ydate
03:32:04  48  /

Table created.

Elapsed: 00:00:04.02
03:32:08 SQL> 
03:32:08 SQL> -- rpt
03:32:08 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
03:32:08   2  GROUP BY pair,trend,gatt,gattn
03:32:08   3  ORDER BY pair,trend,gatt,gattn
03:32:08   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13702283	    5213    .022956268
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13436722	    4978    -.01365691
usd_jpy 	 1 up  nup .152379407	    4084    .184257426
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
03:32:08 SQL> 
03:32:08 SQL> -- rpt
03:32:08 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-17 03:25:00

Elapsed: 00:00:00.02
03:32:08 SQL> 
03:32:08 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
03:32:08 SQL> CREATE TABLE modsrc COMPRESS AS
03:32:08   2  SELECT
03:32:08   3  pair
03:32:08   4  ,ydate
03:32:08   5  ,prdate
03:32:08   6  ,trend
03:32:08   7  ,g4
03:32:08   8  ,gatt
03:32:08   9  ,gattn
03:32:08  10  ,dc12
03:32:08  11  FROM q15
03:32:08  12  /

Table created.

Elapsed: 00:00:00.09
03:32:08 SQL> 
03:32:08 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
03:32:09 SQL> 
03:32:09 SQL> -- rpt
03:32:09 SQL> 
03:32:09 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.35
03:32:09 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
03:32:09 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
03:32:09 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
03:32:09 SQL> 
03:32:09 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
03:32:09   2  GROUP BY pair,trend,gatt,gattn
03:32:09   3  ORDER BY pair,trend,gatt,gattn
03:32:09   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13702283	    5213    .022956268
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13436722	    4978    -.01365691
usd_jpy 	 1 up  nup .152379407	    4084    .184257426
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
03:32:09 SQL> 
03:32:09 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
03:32:09 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
03:32:09   2  SELECT
03:32:09   3  ydate
03:32:09   4  ,trend jpy_trend
03:32:09   5  ,g4    jpy_g4
03:32:09   6  ,gatt  jpy_gatt
03:32:09   7  ,gattn jpy_gattn
03:32:09   8  FROM modsrc
03:32:09   9  /

Table created.

Elapsed: 00:00:00.07
03:32:09 SQL> 
03:32:09 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.14
03:32:09 SQL> 
03:32:09 SQL> -- rpt
03:32:09 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 02:55:01 2010-12-17 00:00:00	 9229	   -1.07	1.5
	-1 2010-09-13 02:35:01 2010-12-17 03:25:00	10681	 -1.0775       1.99

Elapsed: 00:00:00.02
03:32:09 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 02:55:01 2010-12-17 00:00:00	       9235	  -1.07 	1.5
	-1 2010-09-13 02:35:01 2010-12-17 03:25:00	      10723	-1.0775        1.99

Elapsed: 00:00:00.02
03:32:09 SQL> 
03:32:09 SQL> -- I need a copy of q15 attributes
03:32:09 SQL> 
03:32:09 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.03
03:32:09 SQL> CREATE TABLE jpy_att COMPRESS AS
03:32:09   2  SELECT
03:32:09   3  ydate
03:32:09   4  ,att00 jpy_att00
03:32:09   5  ,att01 jpy_att01
03:32:09   6  ,att02 jpy_att02
03:32:09   7  ,att03 jpy_att03
03:32:09   8  ,att04 jpy_att04
03:32:09   9  ,att05 jpy_att05
03:32:09  10  ,att06 jpy_att06
03:32:09  11  ,att07 jpy_att07
03:32:09  12  ,att08 jpy_att08
03:32:09  13  ,att09 jpy_att09
03:32:09  14  ,att10 jpy_att10
03:32:09  15  ,att11 jpy_att11
03:32:09  16  ,att12 jpy_att12
03:32:09  17  ,att13 jpy_att13
03:32:09  18  ,att14 jpy_att14
03:32:09  19  ,att15 jpy_att15
03:32:09  20  ,att16 jpy_att16
03:32:09  21  ,att17 jpy_att17
03:32:09  22  ,att18 jpy_att18
03:32:09  23  ,att19 jpy_att19
03:32:09  24  ,att20 jpy_att20
03:32:09  25  ,att21 jpy_att21
03:32:09  26  ,att22 jpy_att22
03:32:09  27  ,att23 jpy_att23
03:32:09  28  ,att24 jpy_att24
03:32:09  29  ,att25 jpy_att25
03:32:09  30  ,att26 jpy_att26
03:32:09  31  ,att27 jpy_att27
03:32:09  32  ,att28 jpy_att28
03:32:09  33  ,att29 jpy_att29
03:32:09  34  ,att30 jpy_att30
03:32:09  35  ,att31 jpy_att31
03:32:09  36  ,att32 jpy_att32
03:32:09  37  FROM q15
03:32:09  38  /

Table created.

Elapsed: 00:00:00.15
03:32:09 SQL> 
03:32:09 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.41
03:32:10 SQL> 
03:32:10 SQL> -- rpt
03:32:10 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.01
03:32:10 SQL> 
03:32:10 SQL> --
03:32:10 SQL> -- cad10.sql
03:32:10 SQL> --
03:32:10 SQL> 
03:32:10 SQL> -- Creates views and tables for backtesting a forex SVM strategy
03:32:10 SQL> 
03:32:10 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.29
03:32:10 SQL> 
03:32:10 SQL> -- I created di5min here:
03:32:10 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
03:32:10 SQL> 
03:32:10 SQL> CREATE OR REPLACE VIEW q11 AS
03:32:10   2  SELECT
03:32:10   3  pair
03:32:10   4  ,ydate
03:32:10   5  ,prdate
03:32:10   6  ,rownum rnum -- acts as t in my time-series
03:32:10   7  ,clse
03:32:10   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
03:32:10   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
03:32:10  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
03:32:10  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
03:32:10  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
03:32:10  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
03:32:10  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
03:32:10  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
03:32:10  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
03:32:10  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
03:32:10  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
03:32:10  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
03:32:10  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
03:32:10  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
03:32:10  22  FROM di5min WHERE pair LIKE'%cad%'
03:32:10  23  ORDER BY ydate
03:32:10  24  /

View created.

Elapsed: 00:00:00.04
03:32:10 SQL> 
03:32:10 SQL> -- rpt
03:32:10 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20818

Elapsed: 00:00:00.35
03:32:10 SQL> 
03:32:10 SQL> -- Calc deltas and gains
03:32:10 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.23
03:32:11 SQL> 
03:32:11 SQL> CREATE TABLE q13 COMPRESS AS
03:32:11   2  SELECT
03:32:11   3  pair
03:32:11   4  ,ydate
03:32:11   5  ,prdate
03:32:11   6  ,rnum
03:32:11   7  ,lg4
03:32:11   8  ,lg8
03:32:11   9  ,lg12
03:32:11  10  ,ld4
03:32:11  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
03:32:11  12  -- step by 1
03:32:11  13  ,clse-lg1 d01
03:32:11  14  ,lg1-lg2	d12
03:32:11  15  ,lg2-lg3	d23
03:32:11  16  ,lg3-lg4	d34
03:32:11  17  ,lg4-lg5	d45
03:32:11  18  ,lg5-lg6	d56
03:32:11  19  ,lg6-lg7	d67
03:32:11  20  ,lg7-lg8	d78
03:32:11  21  ,lg8-lg9	d89
03:32:11  22  -- step by 2
03:32:11  23  ,clse-lg2 d02
03:32:11  24  ,lg2-lg4 d24
03:32:11  25  ,lg4-lg6 d46
03:32:11  26  ,lg6-lg8 d68
03:32:11  27  -- step by 3
03:32:11  28  ,clse-lg3 d03
03:32:11  29  ,lg3-lg6	d36
03:32:11  30  ,lg6-lg9	d69
03:32:11  31  ,lg9-lg12 d912
03:32:11  32  -- step by 4
03:32:11  33  ,clse-lg4 d04
03:32:11  34  ,lg4-lg8	d48
03:32:11  35  ,lg8-lg12 d812
03:32:11  36  ,lg6-lg12 d612
03:32:11  37  ,lg12-lg18 d1218
03:32:11  38  --
03:32:11  39  ,ABS(clse-lg1)dc1
03:32:11  40  ,ABS(clse-lg2)dc2
03:32:11  41  ,ABS(clse-lg3)dc3
03:32:11  42  ,ABS(clse-lg4)dc4
03:32:11  43  ,ABS(clse-lg5)dc5
03:32:11  44  ,ABS(clse-lg6)dc6
03:32:11  45  ,ABS(clse-lg7)dc7
03:32:11  46  ,ABS(clse-lg8)dc8
03:32:11  47  ,ABS(clse-lg9)dc9
03:32:11  48  ,ABS(clse-lg12)dc12
03:32:11  49  ,ABS(clse-lg18)dc18
03:32:11  50  ,ABS(clse-lg24)dc24
03:32:11  51  ,ABS(clse-lg72)dc72
03:32:11  52  ,(ld4-clse) ug4
03:32:11  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
03:32:11  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
03:32:11  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
03:32:11  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
03:32:11  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
03:32:11  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
03:32:11  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
03:32:11  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
03:32:11  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
03:32:11  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
03:32:11  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
03:32:11  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
03:32:11  65  ,0+TO_CHAR(ydate,'D')d
03:32:11  66  ,0+TO_CHAR(ydate,'W')w
03:32:11  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
03:32:11  68  FROM q11
03:32:11  69  -- I dont want any NULL values from the LAG() functions:
03:32:11  70  WHERE lg72 > 0
03:32:11  71  ORDER BY pair,ydate
03:32:11  72  /

Table created.

Elapsed: 00:00:01.67
03:32:12 SQL> 
03:32:12 SQL> -- rpt
03:32:12 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9022
	-1	   10932

Elapsed: 00:00:00.03
03:32:12 SQL> 
03:32:12 SQL> -- Calc gains and ntiles
03:32:12 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.12
03:32:13 SQL> CREATE TABLE q15 COMPRESS AS
03:32:13   2  SELECT
03:32:13   3  pair
03:32:13   4  ,ydate
03:32:13   5  ,prdate -- Should be unique
03:32:13   6  ,trend -- +1 or -1
03:32:13   7  ,dc12 -- next statement needs this
03:32:13   8  -- Use NTILE() to derive some attributes
03:32:13   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
03:32:13  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
03:32:13  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
03:32:13  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
03:32:13  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
03:32:13  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
03:32:13  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
03:32:13  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
03:32:13  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
03:32:13  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
03:32:13  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
03:32:13  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
03:32:13  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
03:32:13  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
03:32:13  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
03:32:13  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
03:32:13  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
03:32:13  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
03:32:13  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
03:32:13  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
03:32:13  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
03:32:13  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
03:32:13  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
03:32:13  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
03:32:13  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
03:32:13  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
03:32:13  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
03:32:13  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
03:32:13  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
03:32:13  38  ,hh    att28
03:32:13  39  ,d     att29
03:32:13  40  ,w     att30
03:32:13  41  ,mpm   att31
03:32:13  42  ,trend att32
03:32:13  43  ,ug4 g4
03:32:13  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
03:32:13  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
03:32:13  46  FROM q13
03:32:13  47  ORDER BY pair,ydate
03:32:13  48  /

Table created.

Elapsed: 00:00:04.02
03:32:17 SQL> 
03:32:17 SQL> -- rpt
03:32:17 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
03:32:17   2  GROUP BY pair,trend,gatt,gattn
03:32:17   3  ORDER BY pair,trend,gatt,gattn
03:32:17   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.532E-06	    3012    .016888763
usd_cad 	-1 nup up  -.00225004	    4104    .062157619
usd_cad 	-1 up  nup  .00240127	    3799    -.00385755
usd_cad 	-1			       0
usd_cad 	 1 nup nup  -.0000181	    2088     -.0617638
usd_cad 	 1 nup up  -.00236847	    3845    .001344464
usd_cad 	 1 up  nup .002592062	    3058    .003465651
usd_cad 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
03:32:17 SQL> 
03:32:17 SQL> -- rpt
03:32:17 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-17 03:25:00

Elapsed: 00:00:00.01
03:32:17 SQL> 
03:32:17 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.11
03:32:17 SQL> CREATE TABLE modsrc COMPRESS AS
03:32:17   2  SELECT
03:32:17   3  pair
03:32:17   4  ,ydate
03:32:17   5  ,prdate
03:32:17   6  ,trend
03:32:17   7  ,g4
03:32:17   8  ,gatt
03:32:17   9  ,gattn
03:32:17  10  ,dc12
03:32:17  11  FROM q15
03:32:17  12  /

Table created.

Elapsed: 00:00:00.09
03:32:17 SQL> 
03:32:17 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
03:32:17 SQL> 
03:32:17 SQL> -- rpt
03:32:17 SQL> 
03:32:17 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20818

Elapsed: 00:00:00.35
03:32:17 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.01
03:32:17 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.01
03:32:17 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.00
03:32:17 SQL> 
03:32:17 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
03:32:17   2  GROUP BY pair,trend,gatt,gattn
03:32:17   3  ORDER BY pair,trend,gatt,gattn
03:32:17   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.532E-06	    3012    .016888763
usd_cad 	-1 nup up  -.00225004	    4104    .062157619
usd_cad 	-1 up  nup  .00240127	    3799    -.00385755
usd_cad 	-1			       0
usd_cad 	 1 nup nup  -.0000181	    2088     -.0617638
usd_cad 	 1 nup up  -.00236847	    3845    .001344464
usd_cad 	 1 up  nup .002592062	    3058    .003465651
usd_cad 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
03:32:17 SQL> 
03:32:17 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
03:32:17 SQL> CREATE TABLE cad_ms10 COMPRESS AS
03:32:17   2  SELECT
03:32:17   3  ydate
03:32:17   4  ,trend cad_trend
03:32:17   5  ,g4    cad_g4
03:32:17   6  ,gatt  cad_gatt
03:32:17   7  ,gattn cad_gattn
03:32:17   8  FROM modsrc
03:32:17   9  /

Table created.

Elapsed: 00:00:00.06
03:32:18 SQL> 
03:32:18 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
03:32:18 SQL> 
03:32:18 SQL> -- rpt
03:32:18 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 00:30:01 2010-12-17 02:55:00	 8991	  -.0089      .0151
	-1 2010-09-13 02:35:01 2010-12-17 03:25:00	10915	  -.0107      .0147

Elapsed: 00:00:00.02
03:32:18 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 00:30:01 2010-12-17 02:55:00	       9022	 -.0089       .0151
	-1 2010-09-13 02:35:01 2010-12-17 03:25:00	      10932	 -.0107       .0147

Elapsed: 00:00:00.01
03:32:18 SQL> 
03:32:18 SQL> -- I need a copy of q15 attributes
03:32:18 SQL> 
03:32:18 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.03
03:32:18 SQL> CREATE TABLE cad_att COMPRESS AS
03:32:18   2  SELECT
03:32:18   3  ydate
03:32:18   4  ,att00 cad_att00
03:32:18   5  ,att01 cad_att01
03:32:18   6  ,att02 cad_att02
03:32:18   7  ,att03 cad_att03
03:32:18   8  ,att04 cad_att04
03:32:18   9  ,att05 cad_att05
03:32:18  10  ,att06 cad_att06
03:32:18  11  ,att07 cad_att07
03:32:18  12  ,att08 cad_att08
03:32:18  13  ,att09 cad_att09
03:32:18  14  ,att10 cad_att10
03:32:18  15  ,att11 cad_att11
03:32:18  16  ,att12 cad_att12
03:32:18  17  ,att13 cad_att13
03:32:18  18  ,att14 cad_att14
03:32:18  19  ,att15 cad_att15
03:32:18  20  ,att16 cad_att16
03:32:18  21  ,att17 cad_att17
03:32:18  22  ,att18 cad_att18
03:32:18  23  ,att19 cad_att19
03:32:18  24  ,att20 cad_att20
03:32:18  25  ,att21 cad_att21
03:32:18  26  ,att22 cad_att22
03:32:18  27  ,att23 cad_att23
03:32:18  28  ,att24 cad_att24
03:32:18  29  ,att25 cad_att25
03:32:18  30  ,att26 cad_att26
03:32:18  31  ,att27 cad_att27
03:32:18  32  ,att28 cad_att28
03:32:18  33  ,att29 cad_att29
03:32:18  34  ,att30 cad_att30
03:32:18  35  ,att31 cad_att31
03:32:18  36  ,att32 cad_att32
03:32:18  37  FROM q15
03:32:18  38  /

Table created.

Elapsed: 00:00:00.15
03:32:18 SQL> 
03:32:18 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
03:32:18 SQL> 
03:32:18 SQL> -- rpt
03:32:18 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19954

Elapsed: 00:00:00.01
03:32:18 SQL> 
03:32:18 SQL> --
03:32:18 SQL> -- chf10.sql
03:32:18 SQL> --
03:32:18 SQL> 
03:32:18 SQL> -- Creates views and tables for backtesting a forex SVM strategy
03:32:18 SQL> 
03:32:18 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.37
03:32:19 SQL> 
03:32:19 SQL> -- I created di5min here:
03:32:19 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
03:32:19 SQL> 
03:32:19 SQL> CREATE OR REPLACE VIEW q11 AS
03:32:19   2  SELECT
03:32:19   3  pair
03:32:19   4  ,ydate
03:32:19   5  ,prdate
03:32:19   6  ,rownum rnum -- acts as t in my time-series
03:32:19   7  ,clse
03:32:19   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
03:32:19   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
03:32:19  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
03:32:19  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
03:32:19  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
03:32:19  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
03:32:19  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
03:32:19  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
03:32:19  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
03:32:19  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
03:32:19  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
03:32:19  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
03:32:19  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
03:32:19  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
03:32:19  22  FROM di5min WHERE pair LIKE'%chf%'
03:32:19  23  ORDER BY ydate
03:32:19  24  /

View created.

Elapsed: 00:00:00.05
03:32:19 SQL> 
03:32:19 SQL> -- rpt
03:32:19 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20821

Elapsed: 00:00:00.36
03:32:19 SQL> 
03:32:19 SQL> -- Calc deltas and gains
03:32:19 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.22
03:32:19 SQL> 
03:32:19 SQL> CREATE TABLE q13 COMPRESS AS
03:32:19   2  SELECT
03:32:19   3  pair
03:32:19   4  ,ydate
03:32:19   5  ,prdate
03:32:19   6  ,rnum
03:32:19   7  ,lg4
03:32:19   8  ,lg8
03:32:19   9  ,lg12
03:32:19  10  ,ld4
03:32:19  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
03:32:19  12  -- step by 1
03:32:19  13  ,clse-lg1 d01
03:32:19  14  ,lg1-lg2	d12
03:32:19  15  ,lg2-lg3	d23
03:32:19  16  ,lg3-lg4	d34
03:32:19  17  ,lg4-lg5	d45
03:32:19  18  ,lg5-lg6	d56
03:32:19  19  ,lg6-lg7	d67
03:32:19  20  ,lg7-lg8	d78
03:32:19  21  ,lg8-lg9	d89
03:32:19  22  -- step by 2
03:32:19  23  ,clse-lg2 d02
03:32:19  24  ,lg2-lg4 d24
03:32:19  25  ,lg4-lg6 d46
03:32:19  26  ,lg6-lg8 d68
03:32:19  27  -- step by 3
03:32:19  28  ,clse-lg3 d03
03:32:19  29  ,lg3-lg6	d36
03:32:19  30  ,lg6-lg9	d69
03:32:19  31  ,lg9-lg12 d912
03:32:19  32  -- step by 4
03:32:19  33  ,clse-lg4 d04
03:32:19  34  ,lg4-lg8	d48
03:32:19  35  ,lg8-lg12 d812
03:32:19  36  ,lg6-lg12 d612
03:32:19  37  ,lg12-lg18 d1218
03:32:19  38  --
03:32:19  39  ,ABS(clse-lg1)dc1
03:32:19  40  ,ABS(clse-lg2)dc2
03:32:19  41  ,ABS(clse-lg3)dc3
03:32:19  42  ,ABS(clse-lg4)dc4
03:32:19  43  ,ABS(clse-lg5)dc5
03:32:19  44  ,ABS(clse-lg6)dc6
03:32:19  45  ,ABS(clse-lg7)dc7
03:32:19  46  ,ABS(clse-lg8)dc8
03:32:19  47  ,ABS(clse-lg9)dc9
03:32:19  48  ,ABS(clse-lg12)dc12
03:32:19  49  ,ABS(clse-lg18)dc18
03:32:19  50  ,ABS(clse-lg24)dc24
03:32:19  51  ,ABS(clse-lg72)dc72
03:32:19  52  ,(ld4-clse) ug4
03:32:19  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
03:32:19  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
03:32:19  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
03:32:19  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
03:32:19  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
03:32:19  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
03:32:19  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
03:32:19  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
03:32:19  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
03:32:19  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
03:32:19  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
03:32:19  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
03:32:19  65  ,0+TO_CHAR(ydate,'D')d
03:32:19  66  ,0+TO_CHAR(ydate,'W')w
03:32:19  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
03:32:19  68  FROM q11
03:32:19  69  -- I dont want any NULL values from the LAG() functions:
03:32:19  70  WHERE lg72 > 0
03:32:19  71  ORDER BY pair,ydate
03:32:19  72  /

Table created.

Elapsed: 00:00:02.11
03:32:21 SQL> 
03:32:21 SQL> -- rpt
03:32:21 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9320
	-1	   10637

Elapsed: 00:00:00.04
03:32:21 SQL> 
03:32:21 SQL> -- Calc gains and ntiles
03:32:21 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.14
03:32:22 SQL> CREATE TABLE q15 COMPRESS AS
03:32:22   2  SELECT
03:32:22   3  pair
03:32:22   4  ,ydate
03:32:22   5  ,prdate -- Should be unique
03:32:22   6  ,trend -- +1 or -1
03:32:22   7  ,dc12 -- next statement needs this
03:32:22   8  -- Use NTILE() to derive some attributes
03:32:22   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
03:32:22  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
03:32:22  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
03:32:22  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
03:32:22  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
03:32:22  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
03:32:22  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
03:32:22  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
03:32:22  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
03:32:22  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
03:32:22  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
03:32:22  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
03:32:22  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
03:32:22  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
03:32:22  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
03:32:22  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
03:32:22  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
03:32:22  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
03:32:22  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
03:32:22  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
03:32:22  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
03:32:22  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
03:32:22  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
03:32:22  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
03:32:22  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
03:32:22  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
03:32:22  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
03:32:22  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
03:32:22  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
03:32:22  38  ,hh    att28
03:32:22  39  ,d     att29
03:32:22  40  ,w     att30
03:32:22  41  ,mpm   att31
03:32:22  42  ,trend att32
03:32:22  43  ,ug4 g4
03:32:22  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
03:32:22  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
03:32:22  46  FROM q13
03:32:22  47  ORDER BY pair,ydate
03:32:22  48  /

Table created.

Elapsed: 00:00:04.29
03:32:26 SQL> 
03:32:26 SQL> -- rpt
03:32:26 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
03:32:26   2  GROUP BY pair,trend,gatt,gattn
03:32:26   3  ORDER BY pair,trend,gatt,gattn
03:32:26   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032146	    2645    .042491123
usd_chf 	-1 nup up  -.00291643	    3896     .05781512
usd_chf 	-1 up  nup .002646511	    4048    -.12069668
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00254098	    3862    .111937469
usd_chf 	 1 up  nup .002433841	    3232     -.1606913

7 rows selected.

Elapsed: 00:00:00.05
03:32:26 SQL> 
03:32:26 SQL> -- rpt
03:32:26 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-17 03:25:00

Elapsed: 00:00:00.01
03:32:26 SQL> 
03:32:26 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.26
03:32:26 SQL> CREATE TABLE modsrc COMPRESS AS
03:32:26   2  SELECT
03:32:26   3  pair
03:32:26   4  ,ydate
03:32:26   5  ,prdate
03:32:26   6  ,trend
03:32:26   7  ,g4
03:32:26   8  ,gatt
03:32:26   9  ,gattn
03:32:26  10  ,dc12
03:32:26  11  FROM q15
03:32:26  12  /

Table created.

Elapsed: 00:00:00.17
03:32:26 SQL> 
03:32:26 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.23
03:32:27 SQL> 
03:32:27 SQL> -- rpt
03:32:27 SQL> 
03:32:27 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.36
03:32:27 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
03:32:27 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
03:32:27 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
03:32:27 SQL> 
03:32:27 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
03:32:27   2  GROUP BY pair,trend,gatt,gattn
03:32:27   3  ORDER BY pair,trend,gatt,gattn
03:32:27   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032146	    2645    .042491123
usd_chf 	-1 nup up  -.00291643	    3896     .05781512
usd_chf 	-1 up  nup .002646511	    4048    -.12069668
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00254098	    3862    .111937469
usd_chf 	 1 up  nup .002433841	    3232     -.1606913

7 rows selected.

Elapsed: 00:00:00.02
03:32:27 SQL> 
03:32:27 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
03:32:27 SQL> CREATE TABLE chf_ms10 COMPRESS AS
03:32:27   2  SELECT
03:32:27   3  ydate
03:32:27   4  ,trend chf_trend
03:32:27   5  ,g4    chf_g4
03:32:27   6  ,gatt  chf_gatt
03:32:27   7  ,gattn chf_gattn
03:32:27   8  FROM modsrc
03:32:27   9  /

Table created.

Elapsed: 00:00:00.08
03:32:27 SQL> 
03:32:27 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
03:32:27 SQL> 
03:32:27 SQL> -- rpt
03:32:27 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	 9320	  -.0176     .01365
	-1 2010-09-13 02:35:01 2010-12-17 03:25:00	10589	  -.0166      .0149

Elapsed: 00:00:00.02
03:32:27 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	       9320	 -.0176      .01365
	-1 2010-09-13 02:35:01 2010-12-17 03:25:00	      10637	 -.0166       .0149

Elapsed: 00:00:00.02
03:32:27 SQL> 
03:32:27 SQL> -- I need a copy of q15 attributes
03:32:27 SQL> 
03:32:27 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.03
03:32:27 SQL> CREATE TABLE chf_att COMPRESS AS
03:32:27   2  SELECT
03:32:27   3  ydate
03:32:27   4  ,att00 chf_att00
03:32:27   5  ,att01 chf_att01
03:32:27   6  ,att02 chf_att02
03:32:27   7  ,att03 chf_att03
03:32:27   8  ,att04 chf_att04
03:32:27   9  ,att05 chf_att05
03:32:27  10  ,att06 chf_att06
03:32:27  11  ,att07 chf_att07
03:32:27  12  ,att08 chf_att08
03:32:27  13  ,att09 chf_att09
03:32:27  14  ,att10 chf_att10
03:32:27  15  ,att11 chf_att11
03:32:27  16  ,att12 chf_att12
03:32:27  17  ,att13 chf_att13
03:32:27  18  ,att14 chf_att14
03:32:27  19  ,att15 chf_att15
03:32:27  20  ,att16 chf_att16
03:32:27  21  ,att17 chf_att17
03:32:27  22  ,att18 chf_att18
03:32:27  23  ,att19 chf_att19
03:32:27  24  ,att20 chf_att20
03:32:27  25  ,att21 chf_att21
03:32:27  26  ,att22 chf_att22
03:32:27  27  ,att23 chf_att23
03:32:27  28  ,att24 chf_att24
03:32:27  29  ,att25 chf_att25
03:32:27  30  ,att26 chf_att26
03:32:27  31  ,att27 chf_att27
03:32:27  32  ,att28 chf_att28
03:32:27  33  ,att29 chf_att29
03:32:27  34  ,att30 chf_att30
03:32:27  35  ,att31 chf_att31
03:32:27  36  ,att32 chf_att32
03:32:27  37  FROM q15
03:32:27  38  /

Table created.

Elapsed: 00:00:00.13
03:32:27 SQL> 
03:32:27 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
03:32:28 SQL> 
03:32:28 SQL> -- rpt
03:32:28 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.00
03:32:28 SQL> 
03:32:28 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
