
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 16 19:34:21 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

19:34:21 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
19:34:21 SQL> 19:34:21 SQL> --
19:34:21 SQL> -- eur10.sql
19:34:21 SQL> --
19:34:21 SQL> 
19:34:21 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:34:21 SQL> 
19:34:21 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.02
19:34:21 SQL> 
19:34:21 SQL> -- I created di5min here:
19:34:21 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:34:21 SQL> 
19:34:21 SQL> CREATE OR REPLACE VIEW q11 AS
19:34:21   2  SELECT
19:34:21   3  pair
19:34:21   4  ,ydate
19:34:21   5  ,prdate
19:34:21   6  ,rownum rnum -- acts as t in my time-series
19:34:21   7  ,clse
19:34:21   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:34:21   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:34:21  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:34:21  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:34:21  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:34:21  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:34:21  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:34:21  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:34:21  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:34:21  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:34:21  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:34:21  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:34:21  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:34:21  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:34:21  22  FROM di5min WHERE pair LIKE'%eur%'
19:34:21  23  ORDER BY ydate
19:34:21  24  /

View created.

Elapsed: 00:00:00.05
19:34:21 SQL> 
19:34:21 SQL> -- rpt
19:34:21 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20825

Elapsed: 00:00:00.35
19:34:21 SQL> 
19:34:21 SQL> -- Calc deltas and gains
19:34:21 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.05
19:34:21 SQL> 
19:34:21 SQL> CREATE TABLE q13 COMPRESS AS
19:34:21   2  SELECT
19:34:21   3  pair
19:34:21   4  ,ydate
19:34:21   5  ,prdate
19:34:21   6  ,rnum
19:34:21   7  ,lg4
19:34:21   8  ,lg8
19:34:21   9  ,lg12
19:34:21  10  ,ld4
19:34:21  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:34:21  12  -- step by 1
19:34:21  13  ,clse-lg1 d01
19:34:21  14  ,lg1-lg2	d12
19:34:21  15  ,lg2-lg3	d23
19:34:21  16  ,lg3-lg4	d34
19:34:21  17  ,lg4-lg5	d45
19:34:21  18  ,lg5-lg6	d56
19:34:21  19  ,lg6-lg7	d67
19:34:21  20  ,lg7-lg8	d78
19:34:21  21  ,lg8-lg9	d89
19:34:21  22  -- step by 2
19:34:21  23  ,clse-lg2 d02
19:34:21  24  ,lg2-lg4 d24
19:34:21  25  ,lg4-lg6 d46
19:34:21  26  ,lg6-lg8 d68
19:34:21  27  -- step by 3
19:34:21  28  ,clse-lg3 d03
19:34:21  29  ,lg3-lg6	d36
19:34:21  30  ,lg6-lg9	d69
19:34:21  31  ,lg9-lg12 d912
19:34:21  32  -- step by 4
19:34:21  33  ,clse-lg4 d04
19:34:21  34  ,lg4-lg8	d48
19:34:21  35  ,lg8-lg12 d812
19:34:21  36  ,lg6-lg12 d612
19:34:21  37  ,lg12-lg18 d1218
19:34:21  38  --
19:34:21  39  ,ABS(clse-lg1)dc1
19:34:21  40  ,ABS(clse-lg2)dc2
19:34:21  41  ,ABS(clse-lg3)dc3
19:34:21  42  ,ABS(clse-lg4)dc4
19:34:21  43  ,ABS(clse-lg5)dc5
19:34:21  44  ,ABS(clse-lg6)dc6
19:34:21  45  ,ABS(clse-lg7)dc7
19:34:21  46  ,ABS(clse-lg8)dc8
19:34:21  47  ,ABS(clse-lg9)dc9
19:34:21  48  ,ABS(clse-lg12)dc12
19:34:21  49  ,ABS(clse-lg18)dc18
19:34:21  50  ,ABS(clse-lg24)dc24
19:34:21  51  ,ABS(clse-lg72)dc72
19:34:21  52  ,(ld4-clse) ug4
19:34:21  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:34:21  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:34:21  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:34:21  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:34:21  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:34:21  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:34:21  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:34:21  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:34:21  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:34:21  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:34:21  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:34:21  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:34:21  65  ,0+TO_CHAR(ydate,'D')d
19:34:21  66  ,0+TO_CHAR(ydate,'W')w
19:34:21  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:34:21  68  FROM q11
19:34:21  69  -- I dont want any NULL values from the LAG() functions:
19:34:21  70  WHERE lg72 > 0
19:34:21  71  ORDER BY pair,ydate
19:34:21  72  /

Table created.

Elapsed: 00:00:01.93
19:34:23 SQL> 
19:34:23 SQL> -- rpt
19:34:23 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10272
	-1	    9689

Elapsed: 00:00:00.06
19:34:23 SQL> 
19:34:23 SQL> -- Calc gains and ntiles
19:34:23 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.06
19:34:23 SQL> CREATE TABLE q15 COMPRESS AS
19:34:23   2  SELECT
19:34:23   3  pair
19:34:23   4  ,ydate
19:34:23   5  ,prdate -- Should be unique
19:34:23   6  ,trend -- +1 or -1
19:34:23   7  ,dc12 -- next statement needs this
19:34:23   8  -- Use NTILE() to derive some attributes
19:34:23   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:34:23  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:34:23  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:34:23  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:34:23  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:34:23  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:34:23  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:34:23  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:34:23  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:34:23  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:34:23  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:34:23  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:34:23  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:34:23  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:34:23  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:34:23  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:34:23  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:34:23  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:34:23  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:34:23  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:34:23  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:34:23  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:34:23  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:34:23  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:34:23  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:34:23  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:34:23  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:34:23  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:34:23  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:34:23  38  ,hh    att28
19:34:23  39  ,d     att29
19:34:23  40  ,w     att30
19:34:23  41  ,mpm   att31
19:34:23  42  ,trend att32
19:34:23  43  ,ug4 g4
19:34:23  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:34:23  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:34:23  46  FROM q13
19:34:23  47  ORDER BY pair,ydate
19:34:23  48  /

Table created.

Elapsed: 00:00:04.00
19:34:27 SQL> 
19:34:27 SQL> -- rpt
19:34:27 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:34:27   2  GROUP BY pair,trend,gatt,gattn
19:34:27   3  ORDER BY pair,trend,gatt,gattn
19:34:27   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001448	    1455    .037379204
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003677314	    4170    -.21297292
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003722517	    4320    -.14656632
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.07
19:34:27 SQL> 
19:34:27 SQL> -- rpt
19:34:27 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-16 19:25:00

Elapsed: 00:00:00.01
19:34:27 SQL> 
19:34:27 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.05
19:34:27 SQL> CREATE TABLE modsrc COMPRESS AS
19:34:27   2  SELECT
19:34:27   3  pair
19:34:27   4  ,ydate
19:34:27   5  ,prdate
19:34:27   6  ,trend
19:34:27   7  ,g4
19:34:27   8  ,gatt
19:34:27   9  ,gattn
19:34:27  10  ,dc12
19:34:27  11  FROM q15
19:34:27  12  /

Table created.

Elapsed: 00:00:00.09
19:34:27 SQL> 
19:34:27 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
19:34:28 SQL> 
19:34:28 SQL> -- rpt
19:34:28 SQL> 
19:34:28 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20825

Elapsed: 00:00:00.36
19:34:28 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.01
19:34:28 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
19:34:28 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
19:34:28 SQL> 
19:34:28 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:34:28   2  GROUP BY pair,trend,gatt,gattn
19:34:28   3  ORDER BY pair,trend,gatt,gattn
19:34:28   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001448	    1455    .037379204
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003677314	    4170    -.21297292
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003722517	    4320    -.14656632
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
19:34:28 SQL> 
19:34:28 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
19:34:28 SQL> CREATE TABLE eur_ms10 COMPRESS AS
19:34:28   2  SELECT
19:34:28   3  ydate
19:34:28   4  ,trend eur_trend
19:34:28   5  ,g4    eur_g4
19:34:28   6  ,gatt  eur_gatt
19:34:28   7  ,gattn eur_gattn
19:34:28   8  FROM modsrc
19:34:28   9  /

Table created.

Elapsed: 00:00:00.06
19:34:28 SQL> 
19:34:28 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
19:34:28 SQL> 
19:34:28 SQL> -- rpt
19:34:28 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:15:01 2010-12-16 18:05:00	10264	  -.0153      .0165
	-1 2010-09-10 19:35:01 2010-12-16 19:25:00	 9649	  -.0164      .0167

Elapsed: 00:00:00.02
19:34:28 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:15:01 2010-12-16 18:05:00	      10272	 -.0153       .0165
	-1 2010-09-10 19:35:01 2010-12-16 19:25:00	       9689	 -.0164       .0167

Elapsed: 00:00:00.02
19:34:28 SQL> 
19:34:28 SQL> -- I need a copy of q15 attributes
19:34:28 SQL> 
19:34:28 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.03
19:34:28 SQL> CREATE TABLE eur_att COMPRESS AS
19:34:28   2  SELECT
19:34:28   3  ydate
19:34:28   4  ,att00 eur_att00
19:34:28   5  ,att01 eur_att01
19:34:28   6  ,att02 eur_att02
19:34:28   7  ,att03 eur_att03
19:34:28   8  ,att04 eur_att04
19:34:28   9  ,att05 eur_att05
19:34:28  10  ,att06 eur_att06
19:34:28  11  ,att07 eur_att07
19:34:28  12  ,att08 eur_att08
19:34:28  13  ,att09 eur_att09
19:34:28  14  ,att10 eur_att10
19:34:28  15  ,att11 eur_att11
19:34:28  16  ,att12 eur_att12
19:34:28  17  ,att13 eur_att13
19:34:28  18  ,att14 eur_att14
19:34:28  19  ,att15 eur_att15
19:34:28  20  ,att16 eur_att16
19:34:28  21  ,att17 eur_att17
19:34:28  22  ,att18 eur_att18
19:34:28  23  ,att19 eur_att19
19:34:28  24  ,att20 eur_att20
19:34:28  25  ,att21 eur_att21
19:34:28  26  ,att22 eur_att22
19:34:28  27  ,att23 eur_att23
19:34:28  28  ,att24 eur_att24
19:34:28  29  ,att25 eur_att25
19:34:28  30  ,att26 eur_att26
19:34:28  31  ,att27 eur_att27
19:34:28  32  ,att28 eur_att28
19:34:28  33  ,att29 eur_att29
19:34:28  34  ,att30 eur_att30
19:34:28  35  ,att31 eur_att31
19:34:28  36  ,att32 eur_att32
19:34:28  37  FROM q15
19:34:28  38  /

Table created.

Elapsed: 00:00:00.14
19:34:28 SQL> 
19:34:28 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
19:34:29 SQL> 
19:34:29 SQL> -- rpt
19:34:29 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19961

Elapsed: 00:00:00.00
19:34:29 SQL> 
19:34:29 SQL> --
19:34:29 SQL> -- aud10.sql
19:34:29 SQL> --
19:34:29 SQL> 
19:34:29 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:34:29 SQL> 
19:34:29 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.42
19:34:29 SQL> 
19:34:29 SQL> -- I created di5min here:
19:34:29 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:34:29 SQL> 
19:34:29 SQL> CREATE OR REPLACE VIEW q11 AS
19:34:29   2  SELECT
19:34:29   3  pair
19:34:29   4  ,ydate
19:34:29   5  ,prdate
19:34:29   6  ,rownum rnum -- acts as t in my time-series
19:34:29   7  ,clse
19:34:29   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:34:29   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:34:29  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:34:29  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:34:29  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:34:29  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:34:29  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:34:29  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:34:29  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:34:29  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:34:29  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:34:29  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:34:29  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:34:29  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:34:29  22  FROM di5min WHERE pair LIKE'%aud%'
19:34:29  23  ORDER BY ydate
19:34:29  24  /

View created.

Elapsed: 00:00:00.04
19:34:29 SQL> 
19:34:29 SQL> -- rpt
19:34:29 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20822

Elapsed: 00:00:00.36
19:34:30 SQL> 
19:34:30 SQL> -- Calc deltas and gains
19:34:30 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.19
19:34:30 SQL> 
19:34:30 SQL> CREATE TABLE q13 COMPRESS AS
19:34:30   2  SELECT
19:34:30   3  pair
19:34:30   4  ,ydate
19:34:30   5  ,prdate
19:34:30   6  ,rnum
19:34:30   7  ,lg4
19:34:30   8  ,lg8
19:34:30   9  ,lg12
19:34:30  10  ,ld4
19:34:30  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:34:30  12  -- step by 1
19:34:30  13  ,clse-lg1 d01
19:34:30  14  ,lg1-lg2	d12
19:34:30  15  ,lg2-lg3	d23
19:34:30  16  ,lg3-lg4	d34
19:34:30  17  ,lg4-lg5	d45
19:34:30  18  ,lg5-lg6	d56
19:34:30  19  ,lg6-lg7	d67
19:34:30  20  ,lg7-lg8	d78
19:34:30  21  ,lg8-lg9	d89
19:34:30  22  -- step by 2
19:34:30  23  ,clse-lg2 d02
19:34:30  24  ,lg2-lg4 d24
19:34:30  25  ,lg4-lg6 d46
19:34:30  26  ,lg6-lg8 d68
19:34:30  27  -- step by 3
19:34:30  28  ,clse-lg3 d03
19:34:30  29  ,lg3-lg6	d36
19:34:30  30  ,lg6-lg9	d69
19:34:30  31  ,lg9-lg12 d912
19:34:30  32  -- step by 4
19:34:30  33  ,clse-lg4 d04
19:34:30  34  ,lg4-lg8	d48
19:34:30  35  ,lg8-lg12 d812
19:34:30  36  ,lg6-lg12 d612
19:34:30  37  ,lg12-lg18 d1218
19:34:30  38  --
19:34:30  39  ,ABS(clse-lg1)dc1
19:34:30  40  ,ABS(clse-lg2)dc2
19:34:30  41  ,ABS(clse-lg3)dc3
19:34:30  42  ,ABS(clse-lg4)dc4
19:34:30  43  ,ABS(clse-lg5)dc5
19:34:30  44  ,ABS(clse-lg6)dc6
19:34:30  45  ,ABS(clse-lg7)dc7
19:34:30  46  ,ABS(clse-lg8)dc8
19:34:30  47  ,ABS(clse-lg9)dc9
19:34:30  48  ,ABS(clse-lg12)dc12
19:34:30  49  ,ABS(clse-lg18)dc18
19:34:30  50  ,ABS(clse-lg24)dc24
19:34:30  51  ,ABS(clse-lg72)dc72
19:34:30  52  ,(ld4-clse) ug4
19:34:30  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:34:30  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:34:30  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:34:30  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:34:30  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:34:30  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:34:30  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:34:30  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:34:30  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:34:30  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:34:30  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:34:30  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:34:30  65  ,0+TO_CHAR(ydate,'D')d
19:34:30  66  ,0+TO_CHAR(ydate,'W')w
19:34:30  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:34:30  68  FROM q11
19:34:30  69  -- I dont want any NULL values from the LAG() functions:
19:34:30  70  WHERE lg72 > 0
19:34:30  71  ORDER BY pair,ydate
19:34:30  72  /

Table created.

Elapsed: 00:00:01.67
19:34:32 SQL> 
19:34:32 SQL> -- rpt
19:34:32 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10471
	-1	    9487

Elapsed: 00:00:00.03
19:34:32 SQL> 
19:34:32 SQL> -- Calc gains and ntiles
19:34:32 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.16
19:34:32 SQL> CREATE TABLE q15 COMPRESS AS
19:34:32   2  SELECT
19:34:32   3  pair
19:34:32   4  ,ydate
19:34:32   5  ,prdate -- Should be unique
19:34:32   6  ,trend -- +1 or -1
19:34:32   7  ,dc12 -- next statement needs this
19:34:32   8  -- Use NTILE() to derive some attributes
19:34:32   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:34:32  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:34:32  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:34:32  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:34:32  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:34:32  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:34:32  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:34:32  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:34:32  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:34:32  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:34:32  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:34:32  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:34:32  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:34:32  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:34:32  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:34:32  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:34:32  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:34:32  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:34:32  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:34:32  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:34:32  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:34:32  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:34:32  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:34:32  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:34:32  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:34:32  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:34:32  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:34:32  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:34:32  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:34:32  38  ,hh    att28
19:34:32  39  ,d     att29
19:34:32  40  ,w     att30
19:34:32  41  ,mpm   att31
19:34:32  42  ,trend att32
19:34:32  43  ,ug4 g4
19:34:32  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:34:32  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:34:32  46  FROM q13
19:34:32  47  ORDER BY pair,ydate
19:34:32  48  /

Table created.

Elapsed: 00:00:03.94
19:34:36 SQL> 
19:34:36 SQL> -- rpt
19:34:36 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:34:36   2  GROUP BY pair,trend,gatt,gattn
19:34:36   3  ORDER BY pair,trend,gatt,gattn
19:34:36   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002980743	    4331    .024834938
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.9795E-06	    1955    .022883713
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002943027	    4435    -.18078879
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
19:34:36 SQL> 
19:34:36 SQL> -- rpt
19:34:36 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-16 19:25:00

Elapsed: 00:00:00.01
19:34:36 SQL> 
19:34:36 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.14
19:34:36 SQL> CREATE TABLE modsrc COMPRESS AS
19:34:36   2  SELECT
19:34:36   3  pair
19:34:36   4  ,ydate
19:34:36   5  ,prdate
19:34:36   6  ,trend
19:34:36   7  ,g4
19:34:36   8  ,gatt
19:34:36   9  ,gattn
19:34:36  10  ,dc12
19:34:36  11  FROM q15
19:34:36  12  /

Table created.

Elapsed: 00:00:00.11
19:34:36 SQL> 
19:34:36 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.25
19:34:36 SQL> 
19:34:36 SQL> -- rpt
19:34:36 SQL> 
19:34:36 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.36
19:34:37 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
19:34:37 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
19:34:37 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
19:34:37 SQL> 
19:34:37 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:34:37   2  GROUP BY pair,trend,gatt,gattn
19:34:37   3  ORDER BY pair,trend,gatt,gattn
19:34:37   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002980743	    4331    .024834938
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.9795E-06	    1955    .022883713
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002943027	    4435    -.18078879
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
19:34:37 SQL> 
19:34:37 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
19:34:37 SQL> CREATE TABLE aud_ms10 COMPRESS AS
19:34:37   2  SELECT
19:34:37   3  ydate
19:34:37   4  ,trend aud_trend
19:34:37   5  ,g4    aud_g4
19:34:37   6  ,gatt  aud_gatt
19:34:37   7  ,gattn aud_gattn
19:34:37   8  FROM modsrc
19:34:37   9  /

Table created.

Elapsed: 00:00:00.06
19:34:37 SQL> 
19:34:37 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
19:34:37 SQL> 
19:34:37 SQL> -- rpt
19:34:37 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 19:35:01 2010-12-16 19:20:00	10447	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-16 19:25:00	 9463	   -.017      .0131

Elapsed: 00:00:00.02
19:34:37 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 19:35:01 2010-12-16 19:20:00	      10471	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-16 19:25:00	       9487	  -.017       .0131

Elapsed: 00:00:00.01
19:34:37 SQL> 
19:34:37 SQL> -- I need a copy of q15 attributes
19:34:37 SQL> 
19:34:37 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.03
19:34:37 SQL> CREATE TABLE aud_att COMPRESS AS
19:34:37   2  SELECT
19:34:37   3  ydate
19:34:37   4  ,att00 aud_att00
19:34:37   5  ,att01 aud_att01
19:34:37   6  ,att02 aud_att02
19:34:37   7  ,att03 aud_att03
19:34:37   8  ,att04 aud_att04
19:34:37   9  ,att05 aud_att05
19:34:37  10  ,att06 aud_att06
19:34:37  11  ,att07 aud_att07
19:34:37  12  ,att08 aud_att08
19:34:37  13  ,att09 aud_att09
19:34:37  14  ,att10 aud_att10
19:34:37  15  ,att11 aud_att11
19:34:37  16  ,att12 aud_att12
19:34:37  17  ,att13 aud_att13
19:34:37  18  ,att14 aud_att14
19:34:37  19  ,att15 aud_att15
19:34:37  20  ,att16 aud_att16
19:34:37  21  ,att17 aud_att17
19:34:37  22  ,att18 aud_att18
19:34:37  23  ,att19 aud_att19
19:34:37  24  ,att20 aud_att20
19:34:37  25  ,att21 aud_att21
19:34:37  26  ,att22 aud_att22
19:34:37  27  ,att23 aud_att23
19:34:37  28  ,att24 aud_att24
19:34:37  29  ,att25 aud_att25
19:34:37  30  ,att26 aud_att26
19:34:37  31  ,att27 aud_att27
19:34:37  32  ,att28 aud_att28
19:34:37  33  ,att29 aud_att29
19:34:37  34  ,att30 aud_att30
19:34:37  35  ,att31 aud_att31
19:34:37  36  ,att32 aud_att32
19:34:37  37  FROM q15
19:34:37  38  /

Table created.

Elapsed: 00:00:00.14
19:34:37 SQL> 
19:34:37 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
19:34:38 SQL> 
19:34:38 SQL> -- rpt
19:34:38 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.01
19:34:38 SQL> 
19:34:38 SQL> --
19:34:38 SQL> -- gbp10.sql
19:34:38 SQL> --
19:34:38 SQL> 
19:34:38 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:34:38 SQL> 
19:34:38 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.35
19:34:38 SQL> 
19:34:38 SQL> -- I created di5min here:
19:34:38 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:34:38 SQL> 
19:34:38 SQL> CREATE OR REPLACE VIEW q11 AS
19:34:38   2  SELECT
19:34:38   3  pair
19:34:38   4  ,ydate
19:34:38   5  ,prdate
19:34:38   6  ,rownum rnum -- acts as t in my time-series
19:34:38   7  ,clse
19:34:38   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:34:38   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:34:38  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:34:38  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:34:38  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:34:38  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:34:38  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:34:38  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:34:38  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:34:38  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:34:38  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:34:38  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:34:38  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:34:38  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:34:38  22  FROM di5min WHERE pair LIKE'%gbp%'
19:34:38  23  ORDER BY ydate
19:34:38  24  /

View created.

Elapsed: 00:00:00.05
19:34:38 SQL> 
19:34:38 SQL> -- rpt
19:34:38 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20824

Elapsed: 00:00:00.35
19:34:38 SQL> 
19:34:38 SQL> -- Calc deltas and gains
19:34:38 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.31
19:34:39 SQL> 
19:34:39 SQL> CREATE TABLE q13 COMPRESS AS
19:34:39   2  SELECT
19:34:39   3  pair
19:34:39   4  ,ydate
19:34:39   5  ,prdate
19:34:39   6  ,rnum
19:34:39   7  ,lg4
19:34:39   8  ,lg8
19:34:39   9  ,lg12
19:34:39  10  ,ld4
19:34:39  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:34:39  12  -- step by 1
19:34:39  13  ,clse-lg1 d01
19:34:39  14  ,lg1-lg2	d12
19:34:39  15  ,lg2-lg3	d23
19:34:39  16  ,lg3-lg4	d34
19:34:39  17  ,lg4-lg5	d45
19:34:39  18  ,lg5-lg6	d56
19:34:39  19  ,lg6-lg7	d67
19:34:39  20  ,lg7-lg8	d78
19:34:39  21  ,lg8-lg9	d89
19:34:39  22  -- step by 2
19:34:39  23  ,clse-lg2 d02
19:34:39  24  ,lg2-lg4 d24
19:34:39  25  ,lg4-lg6 d46
19:34:39  26  ,lg6-lg8 d68
19:34:39  27  -- step by 3
19:34:39  28  ,clse-lg3 d03
19:34:39  29  ,lg3-lg6	d36
19:34:39  30  ,lg6-lg9	d69
19:34:39  31  ,lg9-lg12 d912
19:34:39  32  -- step by 4
19:34:39  33  ,clse-lg4 d04
19:34:39  34  ,lg4-lg8	d48
19:34:39  35  ,lg8-lg12 d812
19:34:39  36  ,lg6-lg12 d612
19:34:39  37  ,lg12-lg18 d1218
19:34:39  38  --
19:34:39  39  ,ABS(clse-lg1)dc1
19:34:39  40  ,ABS(clse-lg2)dc2
19:34:39  41  ,ABS(clse-lg3)dc3
19:34:39  42  ,ABS(clse-lg4)dc4
19:34:39  43  ,ABS(clse-lg5)dc5
19:34:39  44  ,ABS(clse-lg6)dc6
19:34:39  45  ,ABS(clse-lg7)dc7
19:34:39  46  ,ABS(clse-lg8)dc8
19:34:39  47  ,ABS(clse-lg9)dc9
19:34:39  48  ,ABS(clse-lg12)dc12
19:34:39  49  ,ABS(clse-lg18)dc18
19:34:39  50  ,ABS(clse-lg24)dc24
19:34:39  51  ,ABS(clse-lg72)dc72
19:34:39  52  ,(ld4-clse) ug4
19:34:39  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:34:39  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:34:39  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:34:39  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:34:39  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:34:39  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:34:39  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:34:39  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:34:39  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:34:39  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:34:39  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:34:39  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:34:39  65  ,0+TO_CHAR(ydate,'D')d
19:34:39  66  ,0+TO_CHAR(ydate,'W')w
19:34:39  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:34:39  68  FROM q11
19:34:39  69  -- I dont want any NULL values from the LAG() functions:
19:34:39  70  WHERE lg72 > 0
19:34:39  71  ORDER BY pair,ydate
19:34:39  72  /

Table created.

Elapsed: 00:00:01.76
19:34:40 SQL> 
19:34:40 SQL> -- rpt
19:34:40 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9695
	-1	   10265

Elapsed: 00:00:00.03
19:34:40 SQL> 
19:34:40 SQL> -- Calc gains and ntiles
19:34:40 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.15
19:34:41 SQL> CREATE TABLE q15 COMPRESS AS
19:34:41   2  SELECT
19:34:41   3  pair
19:34:41   4  ,ydate
19:34:41   5  ,prdate -- Should be unique
19:34:41   6  ,trend -- +1 or -1
19:34:41   7  ,dc12 -- next statement needs this
19:34:41   8  -- Use NTILE() to derive some attributes
19:34:41   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:34:41  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:34:41  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:34:41  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:34:41  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:34:41  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:34:41  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:34:41  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:34:41  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:34:41  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:34:41  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:34:41  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:34:41  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:34:41  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:34:41  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:34:41  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:34:41  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:34:41  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:34:41  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:34:41  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:34:41  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:34:41  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:34:41  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:34:41  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:34:41  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:34:41  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:34:41  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:34:41  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:34:41  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:34:41  38  ,hh    att28
19:34:41  39  ,d     att29
19:34:41  40  ,w     att30
19:34:41  41  ,mpm   att31
19:34:41  42  ,trend att32
19:34:41  43  ,ug4 g4
19:34:41  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:34:41  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:34:41  46  FROM q13
19:34:41  47  ORDER BY pair,ydate
19:34:41  48  /

Table created.

Elapsed: 00:00:03.96
19:34:45 SQL> 
19:34:45 SQL> -- rpt
19:34:45 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:34:45   2  GROUP BY pair,trend,gatt,gattn
19:34:45   3  ORDER BY pair,trend,gatt,gattn
19:34:45   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003119395	    4416    -.08704987
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003586192	    3889    -.16644107
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
19:34:45 SQL> 
19:34:45 SQL> -- rpt
19:34:45 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-16 19:25:00

Elapsed: 00:00:00.01
19:34:45 SQL> 
19:34:45 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.22
19:34:45 SQL> CREATE TABLE modsrc COMPRESS AS
19:34:45   2  SELECT
19:34:45   3  pair
19:34:45   4  ,ydate
19:34:45   5  ,prdate
19:34:45   6  ,trend
19:34:45   7  ,g4
19:34:45   8  ,gatt
19:34:45   9  ,gattn
19:34:45  10  ,dc12
19:34:45  11  FROM q15
19:34:45  12  /

Table created.

Elapsed: 00:00:00.07
19:34:45 SQL> 
19:34:45 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
19:34:45 SQL> 
19:34:45 SQL> -- rpt
19:34:45 SQL> 
19:34:45 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20824

Elapsed: 00:00:00.35
19:34:45 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
19:34:45 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
19:34:45 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
19:34:45 SQL> 
19:34:45 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:34:45   2  GROUP BY pair,trend,gatt,gattn
19:34:45   3  ORDER BY pair,trend,gatt,gattn
19:34:45   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003119395	    4416    -.08704987
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003586192	    3889    -.16644107
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
19:34:46 SQL> 
19:34:46 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
19:34:46 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
19:34:46   2  SELECT
19:34:46   3  ydate
19:34:46   4  ,trend gbp_trend
19:34:46   5  ,g4    gbp_g4
19:34:46   6  ,gatt  gbp_gatt
19:34:46   7  ,gattn gbp_gattn
19:34:46   8  FROM modsrc
19:34:46   9  /

Table created.

Elapsed: 00:00:00.07
19:34:46 SQL> 
19:34:46 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
19:34:46 SQL> 
19:34:46 SQL> -- rpt
19:34:46 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 00:05:01 2010-12-16 19:25:00	 9647	  -.0194      .0179
	-1 2010-09-10 19:35:01 2010-12-16 07:30:00	10265	  -.0153      .0159

Elapsed: 00:00:00.01
19:34:46 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 00:05:01 2010-12-16 19:25:00	       9695	 -.0194       .0179
	-1 2010-09-10 19:35:01 2010-12-16 07:30:00	      10265	 -.0153       .0159

Elapsed: 00:00:00.01
19:34:46 SQL> 
19:34:46 SQL> -- I need a copy of q15 attributes
19:34:46 SQL> 
19:34:46 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.03
19:34:46 SQL> CREATE TABLE gbp_att COMPRESS AS
19:34:46   2  SELECT
19:34:46   3  ydate
19:34:46   4  ,att00 gbp_att00
19:34:46   5  ,att01 gbp_att01
19:34:46   6  ,att02 gbp_att02
19:34:46   7  ,att03 gbp_att03
19:34:46   8  ,att04 gbp_att04
19:34:46   9  ,att05 gbp_att05
19:34:46  10  ,att06 gbp_att06
19:34:46  11  ,att07 gbp_att07
19:34:46  12  ,att08 gbp_att08
19:34:46  13  ,att09 gbp_att09
19:34:46  14  ,att10 gbp_att10
19:34:46  15  ,att11 gbp_att11
19:34:46  16  ,att12 gbp_att12
19:34:46  17  ,att13 gbp_att13
19:34:46  18  ,att14 gbp_att14
19:34:46  19  ,att15 gbp_att15
19:34:46  20  ,att16 gbp_att16
19:34:46  21  ,att17 gbp_att17
19:34:46  22  ,att18 gbp_att18
19:34:46  23  ,att19 gbp_att19
19:34:46  24  ,att20 gbp_att20
19:34:46  25  ,att21 gbp_att21
19:34:46  26  ,att22 gbp_att22
19:34:46  27  ,att23 gbp_att23
19:34:46  28  ,att24 gbp_att24
19:34:46  29  ,att25 gbp_att25
19:34:46  30  ,att26 gbp_att26
19:34:46  31  ,att27 gbp_att27
19:34:46  32  ,att28 gbp_att28
19:34:46  33  ,att29 gbp_att29
19:34:46  34  ,att30 gbp_att30
19:34:46  35  ,att31 gbp_att31
19:34:46  36  ,att32 gbp_att32
19:34:46  37  FROM q15
19:34:46  38  /

Table created.

Elapsed: 00:00:00.14
19:34:46 SQL> 
19:34:46 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.41
19:34:46 SQL> 
19:34:46 SQL> -- rpt
19:34:46 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19960

Elapsed: 00:00:00.00
19:34:46 SQL> 
19:34:46 SQL> --
19:34:46 SQL> -- jpy10.sql
19:34:46 SQL> --
19:34:46 SQL> 
19:34:46 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:34:46 SQL> 
19:34:46 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.29
19:34:47 SQL> 
19:34:47 SQL> -- I created di5min here:
19:34:47 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:34:47 SQL> 
19:34:47 SQL> CREATE OR REPLACE VIEW q11 AS
19:34:47   2  SELECT
19:34:47   3  pair
19:34:47   4  ,ydate
19:34:47   5  ,prdate
19:34:47   6  ,rownum rnum -- acts as t in my time-series
19:34:47   7  ,clse
19:34:47   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:34:47   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:34:47  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:34:47  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:34:47  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:34:47  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:34:47  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:34:47  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:34:47  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:34:47  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:34:47  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:34:47  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:34:47  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:34:47  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:34:47  22  FROM di5min WHERE pair LIKE'%jpy%'
19:34:47  23  ORDER BY ydate
19:34:47  24  /

View created.

Elapsed: 00:00:00.05
19:34:47 SQL> 
19:34:47 SQL> -- rpt
19:34:47 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20825

Elapsed: 00:00:00.36
19:34:47 SQL> 
19:34:47 SQL> -- Calc deltas and gains
19:34:47 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.27
19:34:47 SQL> 
19:34:47 SQL> CREATE TABLE q13 COMPRESS AS
19:34:47   2  SELECT
19:34:47   3  pair
19:34:47   4  ,ydate
19:34:47   5  ,prdate
19:34:47   6  ,rnum
19:34:47   7  ,lg4
19:34:47   8  ,lg8
19:34:47   9  ,lg12
19:34:47  10  ,ld4
19:34:47  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:34:47  12  -- step by 1
19:34:47  13  ,clse-lg1 d01
19:34:47  14  ,lg1-lg2	d12
19:34:47  15  ,lg2-lg3	d23
19:34:47  16  ,lg3-lg4	d34
19:34:47  17  ,lg4-lg5	d45
19:34:47  18  ,lg5-lg6	d56
19:34:47  19  ,lg6-lg7	d67
19:34:47  20  ,lg7-lg8	d78
19:34:47  21  ,lg8-lg9	d89
19:34:47  22  -- step by 2
19:34:47  23  ,clse-lg2 d02
19:34:47  24  ,lg2-lg4 d24
19:34:47  25  ,lg4-lg6 d46
19:34:47  26  ,lg6-lg8 d68
19:34:47  27  -- step by 3
19:34:47  28  ,clse-lg3 d03
19:34:47  29  ,lg3-lg6	d36
19:34:47  30  ,lg6-lg9	d69
19:34:47  31  ,lg9-lg12 d912
19:34:47  32  -- step by 4
19:34:47  33  ,clse-lg4 d04
19:34:47  34  ,lg4-lg8	d48
19:34:47  35  ,lg8-lg12 d812
19:34:47  36  ,lg6-lg12 d612
19:34:47  37  ,lg12-lg18 d1218
19:34:47  38  --
19:34:47  39  ,ABS(clse-lg1)dc1
19:34:47  40  ,ABS(clse-lg2)dc2
19:34:47  41  ,ABS(clse-lg3)dc3
19:34:47  42  ,ABS(clse-lg4)dc4
19:34:47  43  ,ABS(clse-lg5)dc5
19:34:47  44  ,ABS(clse-lg6)dc6
19:34:47  45  ,ABS(clse-lg7)dc7
19:34:47  46  ,ABS(clse-lg8)dc8
19:34:47  47  ,ABS(clse-lg9)dc9
19:34:47  48  ,ABS(clse-lg12)dc12
19:34:47  49  ,ABS(clse-lg18)dc18
19:34:47  50  ,ABS(clse-lg24)dc24
19:34:47  51  ,ABS(clse-lg72)dc72
19:34:47  52  ,(ld4-clse) ug4
19:34:47  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:34:47  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:34:47  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:34:47  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:34:47  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:34:47  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:34:47  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:34:47  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:34:47  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:34:47  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:34:47  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:34:47  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:34:47  65  ,0+TO_CHAR(ydate,'D')d
19:34:47  66  ,0+TO_CHAR(ydate,'W')w
19:34:47  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:34:47  68  FROM q11
19:34:47  69  -- I dont want any NULL values from the LAG() functions:
19:34:47  70  WHERE lg72 > 0
19:34:47  71  ORDER BY pair,ydate
19:34:47  72  /

Table created.

Elapsed: 00:00:01.65
19:34:49 SQL> 
19:34:49 SQL> -- rpt
19:34:49 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9294
	-1	   10667

Elapsed: 00:00:00.03
19:34:49 SQL> 
19:34:49 SQL> -- Calc gains and ntiles
19:34:49 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
19:34:49 SQL> CREATE TABLE q15 COMPRESS AS
19:34:49   2  SELECT
19:34:49   3  pair
19:34:49   4  ,ydate
19:34:49   5  ,prdate -- Should be unique
19:34:49   6  ,trend -- +1 or -1
19:34:49   7  ,dc12 -- next statement needs this
19:34:49   8  -- Use NTILE() to derive some attributes
19:34:49   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:34:49  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:34:49  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:34:49  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:34:49  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:34:49  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:34:49  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:34:49  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:34:49  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:34:49  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:34:49  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:34:49  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:34:49  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:34:49  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:34:49  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:34:49  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:34:49  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:34:49  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:34:49  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:34:49  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:34:49  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:34:49  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:34:49  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:34:49  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:34:49  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:34:49  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:34:49  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:34:49  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:34:49  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:34:49  38  ,hh    att28
19:34:49  39  ,d     att29
19:34:49  40  ,w     att30
19:34:49  41  ,mpm   att31
19:34:49  42  ,trend att32
19:34:49  43  ,ug4 g4
19:34:49  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:34:49  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:34:49  46  FROM q13
19:34:49  47  ORDER BY pair,ydate
19:34:49  48  /

Table created.

Elapsed: 00:00:04.00
19:34:53 SQL> 
19:34:53 SQL> -- rpt
19:34:53 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:34:53   2  GROUP BY pair,trend,gatt,gattn
19:34:53   3  ORDER BY pair,trend,gatt,gattn
19:34:53   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13693752	    5178     .02198879
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     169
usd_jpy 	 1 nup up  -.13366924	    4984    -.01816195
usd_jpy 	 1 up  nup  .15188685	    4114    .184162613
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
19:34:53 SQL> 
19:34:53 SQL> -- rpt
19:34:53 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-16 19:25:00

Elapsed: 00:00:00.01
19:34:53 SQL> 
19:34:53 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
19:34:53 SQL> CREATE TABLE modsrc COMPRESS AS
19:34:53   2  SELECT
19:34:53   3  pair
19:34:53   4  ,ydate
19:34:53   5  ,prdate
19:34:53   6  ,trend
19:34:53   7  ,g4
19:34:53   8  ,gatt
19:34:53   9  ,gattn
19:34:53  10  ,dc12
19:34:53  11  FROM q15
19:34:53  12  /

Table created.

Elapsed: 00:00:00.08
19:34:53 SQL> 
19:34:53 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
19:34:54 SQL> 
19:34:54 SQL> -- rpt
19:34:54 SQL> 
19:34:54 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20825

Elapsed: 00:00:00.35
19:34:54 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.01
19:34:54 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
19:34:54 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
19:34:54 SQL> 
19:34:54 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:34:54   2  GROUP BY pair,trend,gatt,gattn
19:34:54   3  ORDER BY pair,trend,gatt,gattn
19:34:54   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13693752	    5178     .02198879
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     169
usd_jpy 	 1 nup up  -.13366924	    4984    -.01816195
usd_jpy 	 1 up  nup  .15188685	    4114    .184162613
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
19:34:54 SQL> 
19:34:54 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
19:34:54 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
19:34:54   2  SELECT
19:34:54   3  ydate
19:34:54   4  ,trend jpy_trend
19:34:54   5  ,g4    jpy_g4
19:34:54   6  ,gatt  jpy_gatt
19:34:54   7  ,gattn jpy_gattn
19:34:54   8  FROM modsrc
19:34:54   9  /

Table created.

Elapsed: 00:00:00.07
19:34:54 SQL> 
19:34:54 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
19:34:54 SQL> 
19:34:54 SQL> -- rpt
19:34:54 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 19:35:01 2010-12-16 18:25:00	 9267	   -1.07	1.5
	-1 2010-09-12 23:35:01 2010-12-16 19:25:00	10646	 -1.0775       1.99

Elapsed: 00:00:00.02
19:34:54 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 19:35:01 2010-12-16 18:25:00	       9294	  -1.07 	1.5
	-1 2010-09-12 23:35:01 2010-12-16 19:25:00	      10667	-1.0775        1.99

Elapsed: 00:00:00.01
19:34:54 SQL> 
19:34:54 SQL> -- I need a copy of q15 attributes
19:34:54 SQL> 
19:34:54 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.04
19:34:54 SQL> CREATE TABLE jpy_att COMPRESS AS
19:34:54   2  SELECT
19:34:54   3  ydate
19:34:54   4  ,att00 jpy_att00
19:34:54   5  ,att01 jpy_att01
19:34:54   6  ,att02 jpy_att02
19:34:54   7  ,att03 jpy_att03
19:34:54   8  ,att04 jpy_att04
19:34:54   9  ,att05 jpy_att05
19:34:54  10  ,att06 jpy_att06
19:34:54  11  ,att07 jpy_att07
19:34:54  12  ,att08 jpy_att08
19:34:54  13  ,att09 jpy_att09
19:34:54  14  ,att10 jpy_att10
19:34:54  15  ,att11 jpy_att11
19:34:54  16  ,att12 jpy_att12
19:34:54  17  ,att13 jpy_att13
19:34:54  18  ,att14 jpy_att14
19:34:54  19  ,att15 jpy_att15
19:34:54  20  ,att16 jpy_att16
19:34:54  21  ,att17 jpy_att17
19:34:54  22  ,att18 jpy_att18
19:34:54  23  ,att19 jpy_att19
19:34:54  24  ,att20 jpy_att20
19:34:54  25  ,att21 jpy_att21
19:34:54  26  ,att22 jpy_att22
19:34:54  27  ,att23 jpy_att23
19:34:54  28  ,att24 jpy_att24
19:34:54  29  ,att25 jpy_att25
19:34:54  30  ,att26 jpy_att26
19:34:54  31  ,att27 jpy_att27
19:34:54  32  ,att28 jpy_att28
19:34:54  33  ,att29 jpy_att29
19:34:54  34  ,att30 jpy_att30
19:34:54  35  ,att31 jpy_att31
19:34:54  36  ,att32 jpy_att32
19:34:54  37  FROM q15
19:34:54  38  /

Table created.

Elapsed: 00:00:00.13
19:34:55 SQL> 
19:34:55 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
19:34:55 SQL> 
19:34:55 SQL> -- rpt
19:34:55 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19961

Elapsed: 00:00:00.01
19:34:55 SQL> 
19:34:55 SQL> --
19:34:55 SQL> -- cad10.sql
19:34:55 SQL> --
19:34:55 SQL> 
19:34:55 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:34:55 SQL> 
19:34:55 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
19:34:55 SQL> 
19:34:55 SQL> -- I created di5min here:
19:34:55 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:34:55 SQL> 
19:34:55 SQL> CREATE OR REPLACE VIEW q11 AS
19:34:55   2  SELECT
19:34:55   3  pair
19:34:55   4  ,ydate
19:34:55   5  ,prdate
19:34:55   6  ,rownum rnum -- acts as t in my time-series
19:34:55   7  ,clse
19:34:55   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:34:55   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:34:55  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:34:55  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:34:55  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:34:55  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:34:55  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:34:55  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:34:55  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:34:55  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:34:55  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:34:55  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:34:55  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:34:55  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:34:55  22  FROM di5min WHERE pair LIKE'%cad%'
19:34:55  23  ORDER BY ydate
19:34:55  24  /

View created.

Elapsed: 00:00:00.04
19:34:55 SQL> 
19:34:55 SQL> -- rpt
19:34:55 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20821

Elapsed: 00:00:00.34
19:34:56 SQL> 
19:34:56 SQL> -- Calc deltas and gains
19:34:56 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.28
19:34:56 SQL> 
19:34:56 SQL> CREATE TABLE q13 COMPRESS AS
19:34:56   2  SELECT
19:34:56   3  pair
19:34:56   4  ,ydate
19:34:56   5  ,prdate
19:34:56   6  ,rnum
19:34:56   7  ,lg4
19:34:56   8  ,lg8
19:34:56   9  ,lg12
19:34:56  10  ,ld4
19:34:56  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:34:56  12  -- step by 1
19:34:56  13  ,clse-lg1 d01
19:34:56  14  ,lg1-lg2	d12
19:34:56  15  ,lg2-lg3	d23
19:34:56  16  ,lg3-lg4	d34
19:34:56  17  ,lg4-lg5	d45
19:34:56  18  ,lg5-lg6	d56
19:34:56  19  ,lg6-lg7	d67
19:34:56  20  ,lg7-lg8	d78
19:34:56  21  ,lg8-lg9	d89
19:34:56  22  -- step by 2
19:34:56  23  ,clse-lg2 d02
19:34:56  24  ,lg2-lg4 d24
19:34:56  25  ,lg4-lg6 d46
19:34:56  26  ,lg6-lg8 d68
19:34:56  27  -- step by 3
19:34:56  28  ,clse-lg3 d03
19:34:56  29  ,lg3-lg6	d36
19:34:56  30  ,lg6-lg9	d69
19:34:56  31  ,lg9-lg12 d912
19:34:56  32  -- step by 4
19:34:56  33  ,clse-lg4 d04
19:34:56  34  ,lg4-lg8	d48
19:34:56  35  ,lg8-lg12 d812
19:34:56  36  ,lg6-lg12 d612
19:34:56  37  ,lg12-lg18 d1218
19:34:56  38  --
19:34:56  39  ,ABS(clse-lg1)dc1
19:34:56  40  ,ABS(clse-lg2)dc2
19:34:56  41  ,ABS(clse-lg3)dc3
19:34:56  42  ,ABS(clse-lg4)dc4
19:34:56  43  ,ABS(clse-lg5)dc5
19:34:56  44  ,ABS(clse-lg6)dc6
19:34:56  45  ,ABS(clse-lg7)dc7
19:34:56  46  ,ABS(clse-lg8)dc8
19:34:56  47  ,ABS(clse-lg9)dc9
19:34:56  48  ,ABS(clse-lg12)dc12
19:34:56  49  ,ABS(clse-lg18)dc18
19:34:56  50  ,ABS(clse-lg24)dc24
19:34:56  51  ,ABS(clse-lg72)dc72
19:34:56  52  ,(ld4-clse) ug4
19:34:56  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:34:56  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:34:56  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:34:56  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:34:56  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:34:56  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:34:56  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:34:56  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:34:56  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:34:56  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:34:56  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:34:56  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:34:56  65  ,0+TO_CHAR(ydate,'D')d
19:34:56  66  ,0+TO_CHAR(ydate,'W')w
19:34:56  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:34:56  68  FROM q11
19:34:56  69  -- I dont want any NULL values from the LAG() functions:
19:34:56  70  WHERE lg72 > 0
19:34:56  71  ORDER BY pair,ydate
19:34:56  72  /

Table created.

Elapsed: 00:00:01.72
19:34:58 SQL> 
19:34:58 SQL> -- rpt
19:34:58 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9020
	-1	   10937

Elapsed: 00:00:00.03
19:34:58 SQL> 
19:34:58 SQL> -- Calc gains and ntiles
19:34:58 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.18
19:34:58 SQL> CREATE TABLE q15 COMPRESS AS
19:34:58   2  SELECT
19:34:58   3  pair
19:34:58   4  ,ydate
19:34:58   5  ,prdate -- Should be unique
19:34:58   6  ,trend -- +1 or -1
19:34:58   7  ,dc12 -- next statement needs this
19:34:58   8  -- Use NTILE() to derive some attributes
19:34:58   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:34:58  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:34:58  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:34:58  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:34:58  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:34:58  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:34:58  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:34:58  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:34:58  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:34:58  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:34:58  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:34:58  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:34:58  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:34:58  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:34:58  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:34:58  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:34:58  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:34:58  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:34:58  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:34:58  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:34:58  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:34:58  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:34:58  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:34:58  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:34:58  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:34:58  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:34:58  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:34:58  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:34:58  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:34:58  38  ,hh    att28
19:34:58  39  ,d     att29
19:34:58  40  ,w     att30
19:34:58  41  ,mpm   att31
19:34:58  42  ,trend att32
19:34:58  43  ,ug4 g4
19:34:58  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:34:58  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:34:58  46  FROM q13
19:34:58  47  ORDER BY pair,ydate
19:34:58  48  /

Table created.

Elapsed: 00:00:04.03
19:35:02 SQL> 
19:35:02 SQL> -- rpt
19:35:02 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:35:02   2  GROUP BY pair,trend,gatt,gattn
19:35:02   3  ORDER BY pair,trend,gatt,gattn
19:35:02   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	 1 nup nup -.00001442	    2059    -.06537656
usd_cad 	 1 nup up  -.00238889	    3853    .000104812
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
19:35:02 SQL> 
19:35:02 SQL> -- rpt
19:35:02 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-16 19:25:00

Elapsed: 00:00:00.01
19:35:02 SQL> 
19:35:02 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.16
19:35:02 SQL> CREATE TABLE modsrc COMPRESS AS
19:35:02   2  SELECT
19:35:02   3  pair
19:35:02   4  ,ydate
19:35:02   5  ,prdate
19:35:02   6  ,trend
19:35:02   7  ,g4
19:35:02   8  ,gatt
19:35:02   9  ,gattn
19:35:02  10  ,dc12
19:35:02  11  FROM q15
19:35:02  12  /

Table created.

Elapsed: 00:00:00.09
19:35:02 SQL> 
19:35:02 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.29
19:35:03 SQL> 
19:35:03 SQL> -- rpt
19:35:03 SQL> 
19:35:03 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.34
19:35:03 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
19:35:03 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
19:35:03 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
19:35:03 SQL> 
19:35:03 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:35:03   2  GROUP BY pair,trend,gatt,gattn
19:35:03   3  ORDER BY pair,trend,gatt,gattn
19:35:03   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	 1 nup nup -.00001442	    2059    -.06537656
usd_cad 	 1 nup up  -.00238889	    3853    .000104812
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
19:35:03 SQL> 
19:35:03 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.12
19:35:03 SQL> CREATE TABLE cad_ms10 COMPRESS AS
19:35:03   2  SELECT
19:35:03   3  ydate
19:35:03   4  ,trend cad_trend
19:35:03   5  ,g4    cad_g4
19:35:03   6  ,gatt  cad_gatt
19:35:03   7  ,gattn cad_gattn
19:35:03   8  FROM modsrc
19:35:03   9  /

Table created.

Elapsed: 00:00:00.07
19:35:03 SQL> 
19:35:03 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
19:35:03 SQL> 
19:35:03 SQL> -- rpt
19:35:03 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 19:35:01 2010-12-16 19:25:00	 8972	  -.0089      .0151
	-1 2010-09-12 23:30:01 2010-12-16 14:45:00	10937	  -.0107      .0147

Elapsed: 00:00:00.02
19:35:03 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 19:35:01 2010-12-16 19:25:00	       9020	 -.0089       .0151
	-1 2010-09-12 23:30:01 2010-12-16 14:45:00	      10937	 -.0107       .0147

Elapsed: 00:00:00.02
19:35:03 SQL> 
19:35:03 SQL> -- I need a copy of q15 attributes
19:35:03 SQL> 
19:35:03 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.04
19:35:03 SQL> CREATE TABLE cad_att COMPRESS AS
19:35:03   2  SELECT
19:35:03   3  ydate
19:35:03   4  ,att00 cad_att00
19:35:03   5  ,att01 cad_att01
19:35:03   6  ,att02 cad_att02
19:35:03   7  ,att03 cad_att03
19:35:03   8  ,att04 cad_att04
19:35:03   9  ,att05 cad_att05
19:35:03  10  ,att06 cad_att06
19:35:03  11  ,att07 cad_att07
19:35:03  12  ,att08 cad_att08
19:35:03  13  ,att09 cad_att09
19:35:03  14  ,att10 cad_att10
19:35:03  15  ,att11 cad_att11
19:35:03  16  ,att12 cad_att12
19:35:03  17  ,att13 cad_att13
19:35:03  18  ,att14 cad_att14
19:35:03  19  ,att15 cad_att15
19:35:03  20  ,att16 cad_att16
19:35:03  21  ,att17 cad_att17
19:35:03  22  ,att18 cad_att18
19:35:03  23  ,att19 cad_att19
19:35:03  24  ,att20 cad_att20
19:35:03  25  ,att21 cad_att21
19:35:03  26  ,att22 cad_att22
19:35:03  27  ,att23 cad_att23
19:35:03  28  ,att24 cad_att24
19:35:03  29  ,att25 cad_att25
19:35:03  30  ,att26 cad_att26
19:35:03  31  ,att27 cad_att27
19:35:03  32  ,att28 cad_att28
19:35:03  33  ,att29 cad_att29
19:35:03  34  ,att30 cad_att30
19:35:03  35  ,att31 cad_att31
19:35:03  36  ,att32 cad_att32
19:35:03  37  FROM q15
19:35:03  38  /

Table created.

Elapsed: 00:00:00.15
19:35:04 SQL> 
19:35:04 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.44
19:35:04 SQL> 
19:35:04 SQL> -- rpt
19:35:04 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.01
19:35:04 SQL> 
19:35:04 SQL> --
19:35:04 SQL> -- chf10.sql
19:35:04 SQL> --
19:35:04 SQL> 
19:35:04 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:35:04 SQL> 
19:35:04 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.30
19:35:04 SQL> 
19:35:04 SQL> -- I created di5min here:
19:35:04 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:35:04 SQL> 
19:35:04 SQL> CREATE OR REPLACE VIEW q11 AS
19:35:04   2  SELECT
19:35:04   3  pair
19:35:04   4  ,ydate
19:35:04   5  ,prdate
19:35:04   6  ,rownum rnum -- acts as t in my time-series
19:35:04   7  ,clse
19:35:04   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:35:04   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:35:04  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:35:04  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:35:04  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:35:04  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:35:04  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:35:04  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:35:04  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:35:04  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:35:04  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:35:04  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:35:04  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:35:04  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:35:04  22  FROM di5min WHERE pair LIKE'%chf%'
19:35:04  23  ORDER BY ydate
19:35:04  24  /

View created.

Elapsed: 00:00:00.03
19:35:04 SQL> 
19:35:04 SQL> -- rpt
19:35:04 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20824

Elapsed: 00:00:00.34
19:35:05 SQL> 
19:35:05 SQL> -- Calc deltas and gains
19:35:05 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.26
19:35:05 SQL> 
19:35:05 SQL> CREATE TABLE q13 COMPRESS AS
19:35:05   2  SELECT
19:35:05   3  pair
19:35:05   4  ,ydate
19:35:05   5  ,prdate
19:35:05   6  ,rnum
19:35:05   7  ,lg4
19:35:05   8  ,lg8
19:35:05   9  ,lg12
19:35:05  10  ,ld4
19:35:05  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:35:05  12  -- step by 1
19:35:05  13  ,clse-lg1 d01
19:35:05  14  ,lg1-lg2	d12
19:35:05  15  ,lg2-lg3	d23
19:35:05  16  ,lg3-lg4	d34
19:35:05  17  ,lg4-lg5	d45
19:35:05  18  ,lg5-lg6	d56
19:35:05  19  ,lg6-lg7	d67
19:35:05  20  ,lg7-lg8	d78
19:35:05  21  ,lg8-lg9	d89
19:35:05  22  -- step by 2
19:35:05  23  ,clse-lg2 d02
19:35:05  24  ,lg2-lg4 d24
19:35:05  25  ,lg4-lg6 d46
19:35:05  26  ,lg6-lg8 d68
19:35:05  27  -- step by 3
19:35:05  28  ,clse-lg3 d03
19:35:05  29  ,lg3-lg6	d36
19:35:05  30  ,lg6-lg9	d69
19:35:05  31  ,lg9-lg12 d912
19:35:05  32  -- step by 4
19:35:05  33  ,clse-lg4 d04
19:35:05  34  ,lg4-lg8	d48
19:35:05  35  ,lg8-lg12 d812
19:35:05  36  ,lg6-lg12 d612
19:35:05  37  ,lg12-lg18 d1218
19:35:05  38  --
19:35:05  39  ,ABS(clse-lg1)dc1
19:35:05  40  ,ABS(clse-lg2)dc2
19:35:05  41  ,ABS(clse-lg3)dc3
19:35:05  42  ,ABS(clse-lg4)dc4
19:35:05  43  ,ABS(clse-lg5)dc5
19:35:05  44  ,ABS(clse-lg6)dc6
19:35:05  45  ,ABS(clse-lg7)dc7
19:35:05  46  ,ABS(clse-lg8)dc8
19:35:05  47  ,ABS(clse-lg9)dc9
19:35:05  48  ,ABS(clse-lg12)dc12
19:35:05  49  ,ABS(clse-lg18)dc18
19:35:05  50  ,ABS(clse-lg24)dc24
19:35:05  51  ,ABS(clse-lg72)dc72
19:35:05  52  ,(ld4-clse) ug4
19:35:05  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:35:05  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:35:05  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:35:05  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:35:05  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:35:05  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:35:05  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:35:05  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:35:05  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:35:05  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:35:05  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:35:05  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:35:05  65  ,0+TO_CHAR(ydate,'D')d
19:35:05  66  ,0+TO_CHAR(ydate,'W')w
19:35:05  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:35:05  68  FROM q11
19:35:05  69  -- I dont want any NULL values from the LAG() functions:
19:35:05  70  WHERE lg72 > 0
19:35:05  71  ORDER BY pair,ydate
19:35:05  72  /

Table created.

Elapsed: 00:00:01.76
19:35:07 SQL> 
19:35:07 SQL> -- rpt
19:35:07 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9320
	-1	   10640

Elapsed: 00:00:00.03
19:35:07 SQL> 
19:35:07 SQL> -- Calc gains and ntiles
19:35:07 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.16
19:35:07 SQL> CREATE TABLE q15 COMPRESS AS
19:35:07   2  SELECT
19:35:07   3  pair
19:35:07   4  ,ydate
19:35:07   5  ,prdate -- Should be unique
19:35:07   6  ,trend -- +1 or -1
19:35:07   7  ,dc12 -- next statement needs this
19:35:07   8  -- Use NTILE() to derive some attributes
19:35:07   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:35:07  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:35:07  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:35:07  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:35:07  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:35:07  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:35:07  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:35:07  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:35:07  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:35:07  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:35:07  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:35:07  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:35:07  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:35:07  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:35:07  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:35:07  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:35:07  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:35:07  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:35:07  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:35:07  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:35:07  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:35:07  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:35:07  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:35:07  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:35:07  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:35:07  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:35:07  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:35:07  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:35:07  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:35:07  38  ,hh    att28
19:35:07  39  ,d     att29
19:35:07  40  ,w     att30
19:35:07  41  ,mpm   att31
19:35:07  42  ,trend att32
19:35:07  43  ,ug4 g4
19:35:07  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:35:07  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:35:07  46  FROM q13
19:35:07  47  ORDER BY pair,ydate
19:35:07  48  /

Table created.

Elapsed: 00:00:04.01
19:35:11 SQL> 
19:35:11 SQL> -- rpt
19:35:11 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:35:11   2  GROUP BY pair,trend,gatt,gattn
19:35:11   3  ORDER BY pair,trend,gatt,gattn
19:35:11   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032408	    2656    .041366278
usd_chf 	-1 nup up  -.00292334	    3907    .063124151
usd_chf 	-1 up  nup .002644479	    4053    -.11979029
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00253165	    3838    .112277517
usd_chf 	 1 up  nup .002433841	    3232     -.1606913
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
19:35:11 SQL> 
19:35:11 SQL> -- rpt
19:35:11 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-16 19:25:00

Elapsed: 00:00:00.01
19:35:11 SQL> 
19:35:11 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
19:35:11 SQL> CREATE TABLE modsrc COMPRESS AS
19:35:11   2  SELECT
19:35:11   3  pair
19:35:11   4  ,ydate
19:35:11   5  ,prdate
19:35:11   6  ,trend
19:35:11   7  ,g4
19:35:11   8  ,gatt
19:35:11   9  ,gattn
19:35:11  10  ,dc12
19:35:11  11  FROM q15
19:35:11  12  /

Table created.

Elapsed: 00:00:00.09
19:35:11 SQL> 
19:35:11 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
19:35:11 SQL> 
19:35:11 SQL> -- rpt
19:35:11 SQL> 
19:35:11 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20824

Elapsed: 00:00:00.36
19:35:12 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
19:35:12 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
19:35:12 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
19:35:12 SQL> 
19:35:12 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:35:12   2  GROUP BY pair,trend,gatt,gattn
19:35:12   3  ORDER BY pair,trend,gatt,gattn
19:35:12   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032408	    2656    .041366278
usd_chf 	-1 nup up  -.00292334	    3907    .063124151
usd_chf 	-1 up  nup .002644479	    4053    -.11979029
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00253165	    3838    .112277517
usd_chf 	 1 up  nup .002433841	    3232     -.1606913
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
19:35:12 SQL> 
19:35:12 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
19:35:12 SQL> CREATE TABLE chf_ms10 COMPRESS AS
19:35:12   2  SELECT
19:35:12   3  ydate
19:35:12   4  ,trend chf_trend
19:35:12   5  ,g4    chf_g4
19:35:12   6  ,gatt  chf_gatt
19:35:12   7  ,gattn chf_gattn
19:35:12   8  FROM modsrc
19:35:12   9  /

Table created.

Elapsed: 00:00:00.08
19:35:12 SQL> 
19:35:12 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
19:35:12 SQL> 
19:35:12 SQL> -- rpt
19:35:12 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	 9296	  -.0176     .01365
	-1 2010-09-10 19:35:01 2010-12-16 19:25:00	10616	  -.0166      .0149

Elapsed: 00:00:00.02
19:35:12 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	       9320	 -.0176      .01365
	-1 2010-09-10 19:35:01 2010-12-16 19:25:00	      10640	 -.0166       .0149

Elapsed: 00:00:00.02
19:35:12 SQL> 
19:35:12 SQL> -- I need a copy of q15 attributes
19:35:12 SQL> 
19:35:12 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.06
19:35:12 SQL> CREATE TABLE chf_att COMPRESS AS
19:35:12   2  SELECT
19:35:12   3  ydate
19:35:12   4  ,att00 chf_att00
19:35:12   5  ,att01 chf_att01
19:35:12   6  ,att02 chf_att02
19:35:12   7  ,att03 chf_att03
19:35:12   8  ,att04 chf_att04
19:35:12   9  ,att05 chf_att05
19:35:12  10  ,att06 chf_att06
19:35:12  11  ,att07 chf_att07
19:35:12  12  ,att08 chf_att08
19:35:12  13  ,att09 chf_att09
19:35:12  14  ,att10 chf_att10
19:35:12  15  ,att11 chf_att11
19:35:12  16  ,att12 chf_att12
19:35:12  17  ,att13 chf_att13
19:35:12  18  ,att14 chf_att14
19:35:12  19  ,att15 chf_att15
19:35:12  20  ,att16 chf_att16
19:35:12  21  ,att17 chf_att17
19:35:12  22  ,att18 chf_att18
19:35:12  23  ,att19 chf_att19
19:35:12  24  ,att20 chf_att20
19:35:12  25  ,att21 chf_att21
19:35:12  26  ,att22 chf_att22
19:35:12  27  ,att23 chf_att23
19:35:12  28  ,att24 chf_att24
19:35:12  29  ,att25 chf_att25
19:35:12  30  ,att26 chf_att26
19:35:12  31  ,att27 chf_att27
19:35:12  32  ,att28 chf_att28
19:35:12  33  ,att29 chf_att29
19:35:12  34  ,att30 chf_att30
19:35:12  35  ,att31 chf_att31
19:35:12  36  ,att32 chf_att32
19:35:12  37  FROM q15
19:35:12  38  /

Table created.

Elapsed: 00:00:00.14
19:35:12 SQL> 
19:35:12 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
19:35:13 SQL> 
19:35:13 SQL> -- rpt
19:35:13 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19960

Elapsed: 00:00:00.00
19:35:13 SQL> 
19:35:13 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
