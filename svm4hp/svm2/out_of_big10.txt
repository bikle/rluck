
SQL*Plus: Release 11.2.0.1.0 Production on Fri Dec 17 20:25:47 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

20:25:47 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.01
20:25:47 SQL> 20:25:47 SQL> --
20:25:47 SQL> -- eur10.sql
20:25:47 SQL> --
20:25:47 SQL> 
20:25:47 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:25:47 SQL> 
20:25:47 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.01
20:25:47 SQL> 
20:25:47 SQL> -- I created di5min here:
20:25:47 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:25:47 SQL> 
20:25:47 SQL> CREATE OR REPLACE VIEW q11 AS
20:25:47   2  SELECT
20:25:47   3  pair
20:25:47   4  ,ydate
20:25:47   5  ,prdate
20:25:47   6  ,rownum rnum -- acts as t in my time-series
20:25:47   7  ,clse
20:25:47   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:25:47   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:25:47  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:25:47  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:25:47  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:25:47  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:25:47  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:25:47  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:25:47  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:25:47  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:25:47  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:25:47  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:25:47  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:25:47  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:25:47  22  FROM di5min WHERE pair LIKE'%eur%'
20:25:47  23  ORDER BY ydate
20:25:47  24  /

View created.

Elapsed: 00:00:00.05
20:25:47 SQL> 
20:25:47 SQL> -- rpt
20:25:47 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20821

Elapsed: 00:00:00.35
20:25:48 SQL> 
20:25:48 SQL> -- Calc deltas and gains
20:25:48 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.27
20:25:48 SQL> 
20:25:48 SQL> CREATE TABLE q13 COMPRESS AS
20:25:48   2  SELECT
20:25:48   3  pair
20:25:48   4  ,ydate
20:25:48   5  ,prdate
20:25:48   6  ,rnum
20:25:48   7  ,lg4
20:25:48   8  ,lg8
20:25:48   9  ,lg12
20:25:48  10  ,ld4
20:25:48  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:25:48  12  -- step by 1
20:25:48  13  ,clse-lg1 d01
20:25:48  14  ,lg1-lg2	d12
20:25:48  15  ,lg2-lg3	d23
20:25:48  16  ,lg3-lg4	d34
20:25:48  17  ,lg4-lg5	d45
20:25:48  18  ,lg5-lg6	d56
20:25:48  19  ,lg6-lg7	d67
20:25:48  20  ,lg7-lg8	d78
20:25:48  21  ,lg8-lg9	d89
20:25:48  22  -- step by 2
20:25:48  23  ,clse-lg2 d02
20:25:48  24  ,lg2-lg4 d24
20:25:48  25  ,lg4-lg6 d46
20:25:48  26  ,lg6-lg8 d68
20:25:48  27  -- step by 3
20:25:48  28  ,clse-lg3 d03
20:25:48  29  ,lg3-lg6	d36
20:25:48  30  ,lg6-lg9	d69
20:25:48  31  ,lg9-lg12 d912
20:25:48  32  -- step by 4
20:25:48  33  ,clse-lg4 d04
20:25:48  34  ,lg4-lg8	d48
20:25:48  35  ,lg8-lg12 d812
20:25:48  36  ,lg6-lg12 d612
20:25:48  37  ,lg12-lg18 d1218
20:25:48  38  --
20:25:48  39  ,ABS(clse-lg1)dc1
20:25:48  40  ,ABS(clse-lg2)dc2
20:25:48  41  ,ABS(clse-lg3)dc3
20:25:48  42  ,ABS(clse-lg4)dc4
20:25:48  43  ,ABS(clse-lg5)dc5
20:25:48  44  ,ABS(clse-lg6)dc6
20:25:48  45  ,ABS(clse-lg7)dc7
20:25:48  46  ,ABS(clse-lg8)dc8
20:25:48  47  ,ABS(clse-lg9)dc9
20:25:48  48  ,ABS(clse-lg12)dc12
20:25:48  49  ,ABS(clse-lg18)dc18
20:25:48  50  ,ABS(clse-lg24)dc24
20:25:48  51  ,ABS(clse-lg72)dc72
20:25:48  52  ,(ld4-clse) ug4
20:25:48  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:25:48  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:25:48  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:25:48  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:25:48  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:25:48  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:25:48  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:25:48  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:25:48  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:25:48  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:25:48  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:25:48  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:25:48  65  ,0+TO_CHAR(ydate,'D')d
20:25:48  66  ,0+TO_CHAR(ydate,'W')w
20:25:48  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:25:48  68  FROM q11
20:25:48  69  -- I dont want any NULL values from the LAG() functions:
20:25:48  70  WHERE lg72 > 0
20:25:48  71  ORDER BY pair,ydate
20:25:48  72  /

Table created.

Elapsed: 00:00:02.00
20:25:50 SQL> 
20:25:50 SQL> -- rpt
20:25:50 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10201
	-1	    9756

Elapsed: 00:00:00.03
20:25:50 SQL> 
20:25:50 SQL> -- Calc gains and ntiles
20:25:50 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.04
20:25:50 SQL> CREATE TABLE q15 COMPRESS AS
20:25:50   2  SELECT
20:25:50   3  pair
20:25:50   4  ,ydate
20:25:50   5  ,prdate -- Should be unique
20:25:50   6  ,trend -- +1 or -1
20:25:50   7  ,dc12 -- next statement needs this
20:25:50   8  -- Use NTILE() to derive some attributes
20:25:50   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:25:50  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:25:50  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:25:50  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:25:50  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:25:50  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:25:50  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:25:50  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:25:50  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:25:50  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:25:50  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:25:50  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:25:50  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:25:50  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:25:50  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:25:50  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:25:50  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:25:50  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:25:50  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:25:50  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:25:50  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:25:50  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:25:50  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:25:50  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:25:50  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:25:50  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:25:50  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:25:50  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:25:50  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:25:50  38  ,hh    att28
20:25:50  39  ,d     att29
20:25:50  40  ,w     att30
20:25:50  41  ,mpm   att31
20:25:50  42  ,trend att32
20:25:50  43  ,ug4 g4
20:25:50  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:25:50  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:25:50  46  FROM q13
20:25:50  47  ORDER BY pair,ydate
20:25:50  48  /

Table created.

Elapsed: 00:00:03.99
20:25:54 SQL> 
20:25:54 SQL> -- rpt
20:25:54 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:25:54   2  GROUP BY pair,trend,gatt,gattn
20:25:54   3  ORDER BY pair,trend,gatt,gattn
20:25:54   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001529	    1452    .041522066
eur_usd 	-1 nup up  -.00365153	    4054    .155643414
eur_usd 	-1 up  nup .003618396	    4202    -.20450713
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000010668	    1699    .040576408
eur_usd 	 1 nup up  -.00351389	    4245    .105067876
eur_usd 	 1 up  nup .003735941	    4257    -.13864838

7 rows selected.

Elapsed: 00:00:00.05
20:25:54 SQL> 
20:25:54 SQL> -- rpt
20:25:54 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-17 20:15:00

Elapsed: 00:00:00.01
20:25:54 SQL> 
20:25:54 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.08
20:25:54 SQL> CREATE TABLE modsrc COMPRESS AS
20:25:54   2  SELECT
20:25:54   3  pair
20:25:54   4  ,ydate
20:25:54   5  ,prdate
20:25:54   6  ,trend
20:25:54   7  ,g4
20:25:54   8  ,gatt
20:25:54   9  ,gattn
20:25:54  10  ,dc12
20:25:54  11  FROM q15
20:25:54  12  /

Table created.

Elapsed: 00:00:00.08
20:25:54 SQL> 
20:25:54 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
20:25:55 SQL> 
20:25:55 SQL> -- rpt
20:25:55 SQL> 
20:25:55 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.36
20:25:55 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
20:25:55 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
20:25:55 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
20:25:55 SQL> 
20:25:55 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:25:55   2  GROUP BY pair,trend,gatt,gattn
20:25:55   3  ORDER BY pair,trend,gatt,gattn
20:25:55   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001529	    1452    .041522066
eur_usd 	-1 nup up  -.00365153	    4054    .155643414
eur_usd 	-1 up  nup .003618396	    4202    -.20450713
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000010668	    1699    .040576408
eur_usd 	 1 nup up  -.00351389	    4245    .105067876
eur_usd 	 1 up  nup .003735941	    4257    -.13864838

7 rows selected.

Elapsed: 00:00:00.03
20:25:55 SQL> 
20:25:55 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.08
20:25:55 SQL> CREATE TABLE eur_ms10 COMPRESS AS
20:25:55   2  SELECT
20:25:55   3  ydate
20:25:55   4  ,trend eur_trend
20:25:55   5  ,g4    eur_g4
20:25:55   6  ,gatt  eur_gatt
20:25:55   7  ,gattn eur_gattn
20:25:55   8  FROM modsrc
20:25:55   9  /

Table created.

Elapsed: 00:00:00.12
20:25:55 SQL> 
20:25:55 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
20:25:55 SQL> 
20:25:55 SQL> -- rpt
20:25:55 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 19:30:01 2010-12-17 13:05:00	10201	-.015675      .0165
	-1 2010-09-14 03:40:01 2010-12-17 20:15:00	 9708	  -.0164      .0167

Elapsed: 00:00:00.02
20:25:55 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 19:30:01 2010-12-17 13:05:00	      10201    -.015675       .0165
	-1 2010-09-14 03:40:01 2010-12-17 20:15:00	       9756	 -.0164       .0167

Elapsed: 00:00:00.02
20:25:55 SQL> 
20:25:55 SQL> -- I need a copy of q15 attributes
20:25:55 SQL> 
20:25:55 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.11
20:25:56 SQL> CREATE TABLE eur_att COMPRESS AS
20:25:56   2  SELECT
20:25:56   3  ydate
20:25:56   4  ,att00 eur_att00
20:25:56   5  ,att01 eur_att01
20:25:56   6  ,att02 eur_att02
20:25:56   7  ,att03 eur_att03
20:25:56   8  ,att04 eur_att04
20:25:56   9  ,att05 eur_att05
20:25:56  10  ,att06 eur_att06
20:25:56  11  ,att07 eur_att07
20:25:56  12  ,att08 eur_att08
20:25:56  13  ,att09 eur_att09
20:25:56  14  ,att10 eur_att10
20:25:56  15  ,att11 eur_att11
20:25:56  16  ,att12 eur_att12
20:25:56  17  ,att13 eur_att13
20:25:56  18  ,att14 eur_att14
20:25:56  19  ,att15 eur_att15
20:25:56  20  ,att16 eur_att16
20:25:56  21  ,att17 eur_att17
20:25:56  22  ,att18 eur_att18
20:25:56  23  ,att19 eur_att19
20:25:56  24  ,att20 eur_att20
20:25:56  25  ,att21 eur_att21
20:25:56  26  ,att22 eur_att22
20:25:56  27  ,att23 eur_att23
20:25:56  28  ,att24 eur_att24
20:25:56  29  ,att25 eur_att25
20:25:56  30  ,att26 eur_att26
20:25:56  31  ,att27 eur_att27
20:25:56  32  ,att28 eur_att28
20:25:56  33  ,att29 eur_att29
20:25:56  34  ,att30 eur_att30
20:25:56  35  ,att31 eur_att31
20:25:56  36  ,att32 eur_att32
20:25:56  37  FROM q15
20:25:56  38  /

Table created.

Elapsed: 00:00:00.13
20:25:56 SQL> 
20:25:56 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.41
20:25:56 SQL> 
20:25:56 SQL> -- rpt
20:25:56 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.00
20:25:56 SQL> 
20:25:56 SQL> --
20:25:56 SQL> -- aud10.sql
20:25:56 SQL> --
20:25:56 SQL> 
20:25:56 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:25:56 SQL> 
20:25:56 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.48
20:25:57 SQL> 
20:25:57 SQL> -- I created di5min here:
20:25:57 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:25:57 SQL> 
20:25:57 SQL> CREATE OR REPLACE VIEW q11 AS
20:25:57   2  SELECT
20:25:57   3  pair
20:25:57   4  ,ydate
20:25:57   5  ,prdate
20:25:57   6  ,rownum rnum -- acts as t in my time-series
20:25:57   7  ,clse
20:25:57   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:25:57   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:25:57  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:25:57  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:25:57  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:25:57  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:25:57  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:25:57  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:25:57  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:25:57  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:25:57  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:25:57  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:25:57  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:25:57  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:25:57  22  FROM di5min WHERE pair LIKE'%aud%'
20:25:57  23  ORDER BY ydate
20:25:57  24  /

View created.

Elapsed: 00:00:00.04
20:25:57 SQL> 
20:25:57 SQL> -- rpt
20:25:57 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20818

Elapsed: 00:00:00.35
20:25:57 SQL> 
20:25:57 SQL> -- Calc deltas and gains
20:25:57 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.23
20:25:57 SQL> 
20:25:57 SQL> CREATE TABLE q13 COMPRESS AS
20:25:57   2  SELECT
20:25:57   3  pair
20:25:57   4  ,ydate
20:25:57   5  ,prdate
20:25:57   6  ,rnum
20:25:57   7  ,lg4
20:25:57   8  ,lg8
20:25:57   9  ,lg12
20:25:57  10  ,ld4
20:25:57  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:25:57  12  -- step by 1
20:25:57  13  ,clse-lg1 d01
20:25:57  14  ,lg1-lg2	d12
20:25:57  15  ,lg2-lg3	d23
20:25:57  16  ,lg3-lg4	d34
20:25:57  17  ,lg4-lg5	d45
20:25:57  18  ,lg5-lg6	d56
20:25:57  19  ,lg6-lg7	d67
20:25:57  20  ,lg7-lg8	d78
20:25:57  21  ,lg8-lg9	d89
20:25:57  22  -- step by 2
20:25:57  23  ,clse-lg2 d02
20:25:57  24  ,lg2-lg4 d24
20:25:57  25  ,lg4-lg6 d46
20:25:57  26  ,lg6-lg8 d68
20:25:57  27  -- step by 3
20:25:57  28  ,clse-lg3 d03
20:25:57  29  ,lg3-lg6	d36
20:25:57  30  ,lg6-lg9	d69
20:25:57  31  ,lg9-lg12 d912
20:25:57  32  -- step by 4
20:25:57  33  ,clse-lg4 d04
20:25:57  34  ,lg4-lg8	d48
20:25:57  35  ,lg8-lg12 d812
20:25:57  36  ,lg6-lg12 d612
20:25:57  37  ,lg12-lg18 d1218
20:25:57  38  --
20:25:57  39  ,ABS(clse-lg1)dc1
20:25:57  40  ,ABS(clse-lg2)dc2
20:25:57  41  ,ABS(clse-lg3)dc3
20:25:57  42  ,ABS(clse-lg4)dc4
20:25:57  43  ,ABS(clse-lg5)dc5
20:25:57  44  ,ABS(clse-lg6)dc6
20:25:57  45  ,ABS(clse-lg7)dc7
20:25:57  46  ,ABS(clse-lg8)dc8
20:25:57  47  ,ABS(clse-lg9)dc9
20:25:57  48  ,ABS(clse-lg12)dc12
20:25:57  49  ,ABS(clse-lg18)dc18
20:25:57  50  ,ABS(clse-lg24)dc24
20:25:57  51  ,ABS(clse-lg72)dc72
20:25:57  52  ,(ld4-clse) ug4
20:25:57  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:25:57  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:25:57  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:25:57  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:25:57  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:25:57  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:25:57  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:25:57  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:25:57  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:25:57  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:25:57  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:25:57  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:25:57  65  ,0+TO_CHAR(ydate,'D')d
20:25:57  66  ,0+TO_CHAR(ydate,'W')w
20:25:57  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:25:57  68  FROM q11
20:25:57  69  -- I dont want any NULL values from the LAG() functions:
20:25:57  70  WHERE lg72 > 0
20:25:57  71  ORDER BY pair,ydate
20:25:57  72  /

Table created.

Elapsed: 00:00:01.72
20:25:59 SQL> 
20:25:59 SQL> -- rpt
20:25:59 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10332
	-1	    9622

Elapsed: 00:00:00.05
20:25:59 SQL> 
20:25:59 SQL> -- Calc gains and ntiles
20:25:59 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.20
20:25:59 SQL> CREATE TABLE q15 COMPRESS AS
20:25:59   2  SELECT
20:25:59   3  pair
20:25:59   4  ,ydate
20:25:59   5  ,prdate -- Should be unique
20:25:59   6  ,trend -- +1 or -1
20:25:59   7  ,dc12 -- next statement needs this
20:25:59   8  -- Use NTILE() to derive some attributes
20:25:59   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:25:59  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:25:59  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:25:59  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:25:59  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:25:59  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:25:59  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:25:59  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:25:59  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:25:59  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:25:59  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:25:59  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:25:59  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:25:59  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:25:59  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:25:59  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:25:59  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:25:59  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:25:59  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:25:59  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:25:59  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:25:59  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:25:59  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:25:59  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:25:59  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:25:59  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:25:59  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:25:59  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:25:59  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:25:59  38  ,hh    att28
20:25:59  39  ,d     att29
20:25:59  40  ,w     att30
20:25:59  41  ,mpm   att31
20:25:59  42  ,trend att32
20:25:59  43  ,ug4 g4
20:25:59  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:25:59  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:25:59  46  FROM q13
20:25:59  47  ORDER BY pair,ydate
20:25:59  48  /

Table created.

Elapsed: 00:00:04.01
20:26:03 SQL> 
20:26:03 SQL> -- rpt
20:26:03 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:26:03   2  GROUP BY pair,trend,gatt,gattn
20:26:03   3  ORDER BY pair,trend,gatt,gattn
20:26:03   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000029919	    1550    -.03916318
aud_usd 	-1 nup up  -.00317206	    3635    .000090517
aud_usd 	-1 up  nup .002973775	    4389    .026657409
aud_usd 	-1			       0
aud_usd 	 1 nup nup 1.2533E-06	    1895    .017464771
aud_usd 	 1 nup up  -.00289333	    4114    .052710478
aud_usd 	 1 up  nup  .00296577	    4323    -.17636016

7 rows selected.

Elapsed: 00:00:00.04
20:26:03 SQL> 
20:26:03 SQL> -- rpt
20:26:03 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-17 20:15:00

Elapsed: 00:00:00.03
20:26:03 SQL> 
20:26:03 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.18
20:26:03 SQL> CREATE TABLE modsrc COMPRESS AS
20:26:03   2  SELECT
20:26:03   3  pair
20:26:03   4  ,ydate
20:26:03   5  ,prdate
20:26:03   6  ,trend
20:26:03   7  ,g4
20:26:03   8  ,gatt
20:26:03   9  ,gattn
20:26:03  10  ,dc12
20:26:03  11  FROM q15
20:26:03  12  /

Table created.

Elapsed: 00:00:00.09
20:26:03 SQL> 
20:26:03 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
20:26:04 SQL> 
20:26:04 SQL> -- rpt
20:26:04 SQL> 
20:26:04 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20818

Elapsed: 00:00:00.35
20:26:04 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.01
20:26:04 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.01
20:26:04 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.00
20:26:04 SQL> 
20:26:04 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:26:04   2  GROUP BY pair,trend,gatt,gattn
20:26:04   3  ORDER BY pair,trend,gatt,gattn
20:26:04   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000029919	    1550    -.03916318
aud_usd 	-1 nup up  -.00317206	    3635    .000090517
aud_usd 	-1 up  nup .002973775	    4389    .026657409
aud_usd 	-1			       0
aud_usd 	 1 nup nup 1.2533E-06	    1895    .017464771
aud_usd 	 1 nup up  -.00289333	    4114    .052710478
aud_usd 	 1 up  nup  .00296577	    4323    -.17636016

7 rows selected.

Elapsed: 00:00:00.02
20:26:04 SQL> 
20:26:04 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.10
20:26:04 SQL> CREATE TABLE aud_ms10 COMPRESS AS
20:26:04   2  SELECT
20:26:04   3  ydate
20:26:04   4  ,trend aud_trend
20:26:04   5  ,g4    aud_g4
20:26:04   6  ,gatt  aud_gatt
20:26:04   7  ,gattn aud_gattn
20:26:04   8  FROM modsrc
20:26:04   9  /

Table created.

Elapsed: 00:00:00.07
20:26:04 SQL> 
20:26:04 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
20:26:04 SQL> 
20:26:04 SQL> -- rpt
20:26:04 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 19:30:01 2010-12-17 10:05:00	10332	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-17 20:15:00	 9574	   -.017      .0131

Elapsed: 00:00:00.02
20:26:05 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 19:30:01 2010-12-17 10:05:00	      10332	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-17 20:15:00	       9622	  -.017       .0131

Elapsed: 00:00:00.01
20:26:05 SQL> 
20:26:05 SQL> -- I need a copy of q15 attributes
20:26:05 SQL> 
20:26:05 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.09
20:26:05 SQL> CREATE TABLE aud_att COMPRESS AS
20:26:05   2  SELECT
20:26:05   3  ydate
20:26:05   4  ,att00 aud_att00
20:26:05   5  ,att01 aud_att01
20:26:05   6  ,att02 aud_att02
20:26:05   7  ,att03 aud_att03
20:26:05   8  ,att04 aud_att04
20:26:05   9  ,att05 aud_att05
20:26:05  10  ,att06 aud_att06
20:26:05  11  ,att07 aud_att07
20:26:05  12  ,att08 aud_att08
20:26:05  13  ,att09 aud_att09
20:26:05  14  ,att10 aud_att10
20:26:05  15  ,att11 aud_att11
20:26:05  16  ,att12 aud_att12
20:26:05  17  ,att13 aud_att13
20:26:05  18  ,att14 aud_att14
20:26:05  19  ,att15 aud_att15
20:26:05  20  ,att16 aud_att16
20:26:05  21  ,att17 aud_att17
20:26:05  22  ,att18 aud_att18
20:26:05  23  ,att19 aud_att19
20:26:05  24  ,att20 aud_att20
20:26:05  25  ,att21 aud_att21
20:26:05  26  ,att22 aud_att22
20:26:05  27  ,att23 aud_att23
20:26:05  28  ,att24 aud_att24
20:26:05  29  ,att25 aud_att25
20:26:05  30  ,att26 aud_att26
20:26:05  31  ,att27 aud_att27
20:26:05  32  ,att28 aud_att28
20:26:05  33  ,att29 aud_att29
20:26:05  34  ,att30 aud_att30
20:26:05  35  ,att31 aud_att31
20:26:05  36  ,att32 aud_att32
20:26:05  37  FROM q15
20:26:05  38  /

Table created.

Elapsed: 00:00:00.13
20:26:05 SQL> 
20:26:05 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
20:26:05 SQL> 
20:26:05 SQL> -- rpt
20:26:05 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19954

Elapsed: 00:00:00.00
20:26:05 SQL> 
20:26:05 SQL> --
20:26:05 SQL> -- gbp10.sql
20:26:05 SQL> --
20:26:05 SQL> 
20:26:05 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:26:05 SQL> 
20:26:05 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.49
20:26:06 SQL> 
20:26:06 SQL> -- I created di5min here:
20:26:06 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:26:06 SQL> 
20:26:06 SQL> CREATE OR REPLACE VIEW q11 AS
20:26:06   2  SELECT
20:26:06   3  pair
20:26:06   4  ,ydate
20:26:06   5  ,prdate
20:26:06   6  ,rownum rnum -- acts as t in my time-series
20:26:06   7  ,clse
20:26:06   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:26:06   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:26:06  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:26:06  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:26:06  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:26:06  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:26:06  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:26:06  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:26:06  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:26:06  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:26:06  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:26:06  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:26:06  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:26:06  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:26:06  22  FROM di5min WHERE pair LIKE'%gbp%'
20:26:06  23  ORDER BY ydate
20:26:06  24  /

View created.

Elapsed: 00:00:00.05
20:26:06 SQL> 
20:26:06 SQL> -- rpt
20:26:06 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20820

Elapsed: 00:00:00.35
20:26:06 SQL> 
20:26:06 SQL> -- Calc deltas and gains
20:26:06 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.29
20:26:06 SQL> 
20:26:06 SQL> CREATE TABLE q13 COMPRESS AS
20:26:06   2  SELECT
20:26:06   3  pair
20:26:06   4  ,ydate
20:26:06   5  ,prdate
20:26:06   6  ,rnum
20:26:06   7  ,lg4
20:26:06   8  ,lg8
20:26:06   9  ,lg12
20:26:06  10  ,ld4
20:26:06  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:26:06  12  -- step by 1
20:26:06  13  ,clse-lg1 d01
20:26:06  14  ,lg1-lg2	d12
20:26:06  15  ,lg2-lg3	d23
20:26:06  16  ,lg3-lg4	d34
20:26:06  17  ,lg4-lg5	d45
20:26:06  18  ,lg5-lg6	d56
20:26:06  19  ,lg6-lg7	d67
20:26:06  20  ,lg7-lg8	d78
20:26:06  21  ,lg8-lg9	d89
20:26:06  22  -- step by 2
20:26:06  23  ,clse-lg2 d02
20:26:06  24  ,lg2-lg4 d24
20:26:06  25  ,lg4-lg6 d46
20:26:06  26  ,lg6-lg8 d68
20:26:06  27  -- step by 3
20:26:06  28  ,clse-lg3 d03
20:26:06  29  ,lg3-lg6	d36
20:26:06  30  ,lg6-lg9	d69
20:26:06  31  ,lg9-lg12 d912
20:26:06  32  -- step by 4
20:26:06  33  ,clse-lg4 d04
20:26:06  34  ,lg4-lg8	d48
20:26:06  35  ,lg8-lg12 d812
20:26:06  36  ,lg6-lg12 d612
20:26:06  37  ,lg12-lg18 d1218
20:26:06  38  --
20:26:06  39  ,ABS(clse-lg1)dc1
20:26:06  40  ,ABS(clse-lg2)dc2
20:26:06  41  ,ABS(clse-lg3)dc3
20:26:06  42  ,ABS(clse-lg4)dc4
20:26:06  43  ,ABS(clse-lg5)dc5
20:26:06  44  ,ABS(clse-lg6)dc6
20:26:06  45  ,ABS(clse-lg7)dc7
20:26:06  46  ,ABS(clse-lg8)dc8
20:26:06  47  ,ABS(clse-lg9)dc9
20:26:06  48  ,ABS(clse-lg12)dc12
20:26:06  49  ,ABS(clse-lg18)dc18
20:26:06  50  ,ABS(clse-lg24)dc24
20:26:06  51  ,ABS(clse-lg72)dc72
20:26:06  52  ,(ld4-clse) ug4
20:26:06  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:26:06  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:26:06  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:26:06  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:26:06  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:26:06  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:26:06  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:26:06  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:26:06  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:26:06  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:26:06  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:26:06  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:26:06  65  ,0+TO_CHAR(ydate,'D')d
20:26:06  66  ,0+TO_CHAR(ydate,'W')w
20:26:06  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:26:06  68  FROM q11
20:26:06  69  -- I dont want any NULL values from the LAG() functions:
20:26:06  70  WHERE lg72 > 0
20:26:06  71  ORDER BY pair,ydate
20:26:06  72  /

Table created.

Elapsed: 00:00:02.04
20:26:08 SQL> 
20:26:08 SQL> -- rpt
20:26:08 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9651
	-1	   10305

Elapsed: 00:00:00.07
20:26:08 SQL> 
20:26:08 SQL> -- Calc gains and ntiles
20:26:08 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.26
20:26:09 SQL> CREATE TABLE q15 COMPRESS AS
20:26:09   2  SELECT
20:26:09   3  pair
20:26:09   4  ,ydate
20:26:09   5  ,prdate -- Should be unique
20:26:09   6  ,trend -- +1 or -1
20:26:09   7  ,dc12 -- next statement needs this
20:26:09   8  -- Use NTILE() to derive some attributes
20:26:09   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:26:09  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:26:09  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:26:09  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:26:09  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:26:09  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:26:09  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:26:09  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:26:09  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:26:09  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:26:09  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:26:09  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:26:09  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:26:09  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:26:09  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:26:09  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:26:09  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:26:09  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:26:09  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:26:09  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:26:09  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:26:09  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:26:09  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:26:09  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:26:09  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:26:09  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:26:09  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:26:09  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:26:09  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:26:09  38  ,hh    att28
20:26:09  39  ,d     att29
20:26:09  40  ,w     att30
20:26:09  41  ,mpm   att31
20:26:09  42  ,trend att32
20:26:09  43  ,ug4 g4
20:26:09  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:26:09  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:26:09  46  FROM q13
20:26:09  47  ORDER BY pair,ydate
20:26:09  48  /

Table created.

Elapsed: 00:00:04.08
20:26:13 SQL> 
20:26:13 SQL> -- rpt
20:26:13 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:26:13   2  GROUP BY pair,trend,gatt,gattn
20:26:13   3  ORDER BY pair,trend,gatt,gattn
20:26:13   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -1.187E-06	    1812     .05932405
gbp_usd 	-1 nup up  -.00335273	    4102    -.00132511
gbp_usd 	-1 up  nup .003116394	    4343    -.09405407
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup .000014682	    1650    .009141743
gbp_usd 	 1 nup up  -.00320098	    4122    .009597508
gbp_usd 	 1 up  nup .003543993	    3879    -.16652449

7 rows selected.

Elapsed: 00:00:00.05
20:26:13 SQL> 
20:26:13 SQL> -- rpt
20:26:13 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-17 20:15:00

Elapsed: 00:00:00.01
20:26:13 SQL> 
20:26:13 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.16
20:26:13 SQL> CREATE TABLE modsrc COMPRESS AS
20:26:13   2  SELECT
20:26:13   3  pair
20:26:13   4  ,ydate
20:26:13   5  ,prdate
20:26:13   6  ,trend
20:26:13   7  ,g4
20:26:13   8  ,gatt
20:26:13   9  ,gattn
20:26:13  10  ,dc12
20:26:13  11  FROM q15
20:26:13  12  /

Table created.

Elapsed: 00:00:00.09
20:26:13 SQL> 
20:26:13 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
20:26:13 SQL> 
20:26:13 SQL> -- rpt
20:26:13 SQL> 
20:26:13 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20820

Elapsed: 00:00:00.34
20:26:14 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19956

Elapsed: 00:00:00.01
20:26:14 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19956

Elapsed: 00:00:00.01
20:26:14 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19956

Elapsed: 00:00:00.00
20:26:14 SQL> 
20:26:14 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:26:14   2  GROUP BY pair,trend,gatt,gattn
20:26:14   3  ORDER BY pair,trend,gatt,gattn
20:26:14   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -1.187E-06	    1812     .05932405
gbp_usd 	-1 nup up  -.00335273	    4102    -.00132511
gbp_usd 	-1 up  nup .003116394	    4343    -.09405407
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup .000014682	    1650    .009141743
gbp_usd 	 1 nup up  -.00320098	    4122    .009597508
gbp_usd 	 1 up  nup .003543993	    3879    -.16652449

7 rows selected.

Elapsed: 00:00:00.02
20:26:14 SQL> 
20:26:14 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.07
20:26:14 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
20:26:14   2  SELECT
20:26:14   3  ydate
20:26:14   4  ,trend gbp_trend
20:26:14   5  ,g4    gbp_g4
20:26:14   6  ,gatt  gbp_gatt
20:26:14   7  ,gattn gbp_gattn
20:26:14   8  FROM modsrc
20:26:14   9  /

Table created.

Elapsed: 00:00:00.07
20:26:14 SQL> 
20:26:14 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
20:26:14 SQL> 
20:26:14 SQL> -- rpt
20:26:14 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 22:00:01 2010-12-17 10:20:00	 9651	  -.0194      .0179
	-1 2010-09-13 19:30:01 2010-12-17 20:15:00	10257	  -.0153      .0159

Elapsed: 00:00:00.02
20:26:14 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 22:00:01 2010-12-17 10:20:00	       9651	 -.0194       .0179
	-1 2010-09-13 19:30:01 2010-12-17 20:15:00	      10305	 -.0153       .0159

Elapsed: 00:00:00.02
20:26:14 SQL> 
20:26:14 SQL> -- I need a copy of q15 attributes
20:26:14 SQL> 
20:26:14 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.11
20:26:14 SQL> CREATE TABLE gbp_att COMPRESS AS
20:26:14   2  SELECT
20:26:14   3  ydate
20:26:14   4  ,att00 gbp_att00
20:26:14   5  ,att01 gbp_att01
20:26:14   6  ,att02 gbp_att02
20:26:14   7  ,att03 gbp_att03
20:26:14   8  ,att04 gbp_att04
20:26:14   9  ,att05 gbp_att05
20:26:14  10  ,att06 gbp_att06
20:26:14  11  ,att07 gbp_att07
20:26:14  12  ,att08 gbp_att08
20:26:14  13  ,att09 gbp_att09
20:26:14  14  ,att10 gbp_att10
20:26:14  15  ,att11 gbp_att11
20:26:14  16  ,att12 gbp_att12
20:26:14  17  ,att13 gbp_att13
20:26:14  18  ,att14 gbp_att14
20:26:14  19  ,att15 gbp_att15
20:26:14  20  ,att16 gbp_att16
20:26:14  21  ,att17 gbp_att17
20:26:14  22  ,att18 gbp_att18
20:26:14  23  ,att19 gbp_att19
20:26:14  24  ,att20 gbp_att20
20:26:14  25  ,att21 gbp_att21
20:26:14  26  ,att22 gbp_att22
20:26:14  27  ,att23 gbp_att23
20:26:14  28  ,att24 gbp_att24
20:26:14  29  ,att25 gbp_att25
20:26:14  30  ,att26 gbp_att26
20:26:14  31  ,att27 gbp_att27
20:26:14  32  ,att28 gbp_att28
20:26:14  33  ,att29 gbp_att29
20:26:14  34  ,att30 gbp_att30
20:26:14  35  ,att31 gbp_att31
20:26:14  36  ,att32 gbp_att32
20:26:14  37  FROM q15
20:26:14  38  /

Table created.

Elapsed: 00:00:00.15
20:26:14 SQL> 
20:26:14 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
20:26:15 SQL> 
20:26:15 SQL> -- rpt
20:26:15 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19956

Elapsed: 00:00:00.01
20:26:15 SQL> 
20:26:15 SQL> --
20:26:15 SQL> -- jpy10.sql
20:26:15 SQL> --
20:26:15 SQL> 
20:26:15 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:26:15 SQL> 
20:26:15 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
20:26:15 SQL> 
20:26:15 SQL> -- I created di5min here:
20:26:15 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:26:15 SQL> 
20:26:15 SQL> CREATE OR REPLACE VIEW q11 AS
20:26:15   2  SELECT
20:26:15   3  pair
20:26:15   4  ,ydate
20:26:15   5  ,prdate
20:26:15   6  ,rownum rnum -- acts as t in my time-series
20:26:15   7  ,clse
20:26:15   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:26:15   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:26:15  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:26:15  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:26:15  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:26:15  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:26:15  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:26:15  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:26:15  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:26:15  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:26:15  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:26:15  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:26:15  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:26:15  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:26:15  22  FROM di5min WHERE pair LIKE'%jpy%'
20:26:15  23  ORDER BY ydate
20:26:15  24  /

View created.

Elapsed: 00:00:00.05
20:26:15 SQL> 
20:26:15 SQL> -- rpt
20:26:15 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20822

Elapsed: 00:00:00.34
20:26:15 SQL> 
20:26:15 SQL> -- Calc deltas and gains
20:26:15 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.30
20:26:16 SQL> 
20:26:16 SQL> CREATE TABLE q13 COMPRESS AS
20:26:16   2  SELECT
20:26:16   3  pair
20:26:16   4  ,ydate
20:26:16   5  ,prdate
20:26:16   6  ,rnum
20:26:16   7  ,lg4
20:26:16   8  ,lg8
20:26:16   9  ,lg12
20:26:16  10  ,ld4
20:26:16  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:26:16  12  -- step by 1
20:26:16  13  ,clse-lg1 d01
20:26:16  14  ,lg1-lg2	d12
20:26:16  15  ,lg2-lg3	d23
20:26:16  16  ,lg3-lg4	d34
20:26:16  17  ,lg4-lg5	d45
20:26:16  18  ,lg5-lg6	d56
20:26:16  19  ,lg6-lg7	d67
20:26:16  20  ,lg7-lg8	d78
20:26:16  21  ,lg8-lg9	d89
20:26:16  22  -- step by 2
20:26:16  23  ,clse-lg2 d02
20:26:16  24  ,lg2-lg4 d24
20:26:16  25  ,lg4-lg6 d46
20:26:16  26  ,lg6-lg8 d68
20:26:16  27  -- step by 3
20:26:16  28  ,clse-lg3 d03
20:26:16  29  ,lg3-lg6	d36
20:26:16  30  ,lg6-lg9	d69
20:26:16  31  ,lg9-lg12 d912
20:26:16  32  -- step by 4
20:26:16  33  ,clse-lg4 d04
20:26:16  34  ,lg4-lg8	d48
20:26:16  35  ,lg8-lg12 d812
20:26:16  36  ,lg6-lg12 d612
20:26:16  37  ,lg12-lg18 d1218
20:26:16  38  --
20:26:16  39  ,ABS(clse-lg1)dc1
20:26:16  40  ,ABS(clse-lg2)dc2
20:26:16  41  ,ABS(clse-lg3)dc3
20:26:16  42  ,ABS(clse-lg4)dc4
20:26:16  43  ,ABS(clse-lg5)dc5
20:26:16  44  ,ABS(clse-lg6)dc6
20:26:16  45  ,ABS(clse-lg7)dc7
20:26:16  46  ,ABS(clse-lg8)dc8
20:26:16  47  ,ABS(clse-lg9)dc9
20:26:16  48  ,ABS(clse-lg12)dc12
20:26:16  49  ,ABS(clse-lg18)dc18
20:26:16  50  ,ABS(clse-lg24)dc24
20:26:16  51  ,ABS(clse-lg72)dc72
20:26:16  52  ,(ld4-clse) ug4
20:26:16  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:26:16  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:26:16  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:26:16  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:26:16  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:26:16  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:26:16  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:26:16  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:26:16  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:26:16  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:26:16  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:26:16  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:26:16  65  ,0+TO_CHAR(ydate,'D')d
20:26:16  66  ,0+TO_CHAR(ydate,'W')w
20:26:16  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:26:16  68  FROM q11
20:26:16  69  -- I dont want any NULL values from the LAG() functions:
20:26:16  70  WHERE lg72 > 0
20:26:16  71  ORDER BY pair,ydate
20:26:16  72  /

Table created.

Elapsed: 00:00:01.67
20:26:17 SQL> 
20:26:17 SQL> -- rpt
20:26:17 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9307
	-1	   10651

Elapsed: 00:00:00.03
20:26:17 SQL> 
20:26:17 SQL> -- Calc gains and ntiles
20:26:17 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.12
20:26:18 SQL> CREATE TABLE q15 COMPRESS AS
20:26:18   2  SELECT
20:26:18   3  pair
20:26:18   4  ,ydate
20:26:18   5  ,prdate -- Should be unique
20:26:18   6  ,trend -- +1 or -1
20:26:18   7  ,dc12 -- next statement needs this
20:26:18   8  -- Use NTILE() to derive some attributes
20:26:18   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:26:18  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:26:18  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:26:18  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:26:18  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:26:18  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:26:18  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:26:18  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:26:18  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:26:18  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:26:18  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:26:18  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:26:18  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:26:18  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:26:18  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:26:18  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:26:18  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:26:18  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:26:18  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:26:18  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:26:18  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:26:18  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:26:18  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:26:18  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:26:18  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:26:18  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:26:18  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:26:18  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:26:18  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:26:18  38  ,hh    att28
20:26:18  39  ,d     att29
20:26:18  40  ,w     att30
20:26:18  41  ,mpm   att31
20:26:18  42  ,trend att32
20:26:18  43  ,ug4 g4
20:26:18  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:26:18  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:26:18  46  FROM q13
20:26:18  47  ORDER BY pair,ydate
20:26:18  48  /

Table created.

Elapsed: 00:00:04.09
20:26:22 SQL> 
20:26:22 SQL> -- rpt
20:26:22 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:26:22   2  GROUP BY pair,trend,gatt,gattn
20:26:22   3  ORDER BY pair,trend,gatt,gattn
20:26:22   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     177
usd_jpy 	-1 nup up  -.13472573	    5150    .019618185
usd_jpy 	-1 up  nup .143206819	    5309    .057747995
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13468812	    5002    -.01348468
usd_jpy 	 1 up  nup .152197929	    4105    .184589759
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
20:26:22 SQL> 
20:26:22 SQL> -- rpt
20:26:22 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-17 20:20:00

Elapsed: 00:00:00.01
20:26:22 SQL> 
20:26:22 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.18
20:26:22 SQL> CREATE TABLE modsrc COMPRESS AS
20:26:22   2  SELECT
20:26:22   3  pair
20:26:22   4  ,ydate
20:26:22   5  ,prdate
20:26:22   6  ,trend
20:26:22   7  ,g4
20:26:22   8  ,gatt
20:26:22   9  ,gattn
20:26:22  10  ,dc12
20:26:22  11  FROM q15
20:26:22  12  /

Table created.

Elapsed: 00:00:00.09
20:26:22 SQL> 
20:26:22 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
20:26:22 SQL> 
20:26:22 SQL> -- rpt
20:26:22 SQL> 
20:26:22 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.35
20:26:23 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
20:26:23 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
20:26:23 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
20:26:23 SQL> 
20:26:23 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:26:23   2  GROUP BY pair,trend,gatt,gattn
20:26:23   3  ORDER BY pair,trend,gatt,gattn
20:26:23   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     177
usd_jpy 	-1 nup up  -.13472573	    5150    .019618185
usd_jpy 	-1 up  nup .143206819	    5309    .057747995
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13468812	    5002    -.01348468
usd_jpy 	 1 up  nup .152197929	    4105    .184589759
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
20:26:23 SQL> 
20:26:23 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
20:26:23 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
20:26:23   2  SELECT
20:26:23   3  ydate
20:26:23   4  ,trend jpy_trend
20:26:23   5  ,g4    jpy_g4
20:26:23   6  ,gatt  jpy_gatt
20:26:23   7  ,gattn jpy_gattn
20:26:23   8  FROM modsrc
20:26:23   9  /

Table created.

Elapsed: 00:00:00.07
20:26:23 SQL> 
20:26:23 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
20:26:23 SQL> 
20:26:23 SQL> -- rpt
20:26:23 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 05:55:01 2010-12-17 19:15:00	 9274	   -1.07	1.5
	-1 2010-09-13 19:30:01 2010-12-17 20:20:00	10636	 -1.0775       1.99

Elapsed: 00:00:00.02
20:26:23 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 05:55:01 2010-12-17 19:15:00	       9307	  -1.07 	1.5
	-1 2010-09-13 19:30:01 2010-12-17 20:20:00	      10651	-1.0775        1.99

Elapsed: 00:00:00.01
20:26:23 SQL> 
20:26:23 SQL> -- I need a copy of q15 attributes
20:26:23 SQL> 
20:26:23 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.04
20:26:23 SQL> CREATE TABLE jpy_att COMPRESS AS
20:26:23   2  SELECT
20:26:23   3  ydate
20:26:23   4  ,att00 jpy_att00
20:26:23   5  ,att01 jpy_att01
20:26:23   6  ,att02 jpy_att02
20:26:23   7  ,att03 jpy_att03
20:26:23   8  ,att04 jpy_att04
20:26:23   9  ,att05 jpy_att05
20:26:23  10  ,att06 jpy_att06
20:26:23  11  ,att07 jpy_att07
20:26:23  12  ,att08 jpy_att08
20:26:23  13  ,att09 jpy_att09
20:26:23  14  ,att10 jpy_att10
20:26:23  15  ,att11 jpy_att11
20:26:23  16  ,att12 jpy_att12
20:26:23  17  ,att13 jpy_att13
20:26:23  18  ,att14 jpy_att14
20:26:23  19  ,att15 jpy_att15
20:26:23  20  ,att16 jpy_att16
20:26:23  21  ,att17 jpy_att17
20:26:23  22  ,att18 jpy_att18
20:26:23  23  ,att19 jpy_att19
20:26:23  24  ,att20 jpy_att20
20:26:23  25  ,att21 jpy_att21
20:26:23  26  ,att22 jpy_att22
20:26:23  27  ,att23 jpy_att23
20:26:23  28  ,att24 jpy_att24
20:26:23  29  ,att25 jpy_att25
20:26:23  30  ,att26 jpy_att26
20:26:23  31  ,att27 jpy_att27
20:26:23  32  ,att28 jpy_att28
20:26:23  33  ,att29 jpy_att29
20:26:23  34  ,att30 jpy_att30
20:26:23  35  ,att31 jpy_att31
20:26:23  36  ,att32 jpy_att32
20:26:23  37  FROM q15
20:26:23  38  /

Table created.

Elapsed: 00:00:00.13
20:26:23 SQL> 
20:26:23 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
20:26:24 SQL> 
20:26:24 SQL> -- rpt
20:26:24 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.00
20:26:24 SQL> 
20:26:24 SQL> --
20:26:24 SQL> -- cad10.sql
20:26:24 SQL> --
20:26:24 SQL> 
20:26:24 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:26:24 SQL> 
20:26:24 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.31
20:26:24 SQL> 
20:26:24 SQL> -- I created di5min here:
20:26:24 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:26:24 SQL> 
20:26:24 SQL> CREATE OR REPLACE VIEW q11 AS
20:26:24   2  SELECT
20:26:24   3  pair
20:26:24   4  ,ydate
20:26:24   5  ,prdate
20:26:24   6  ,rownum rnum -- acts as t in my time-series
20:26:24   7  ,clse
20:26:24   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:26:24   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:26:24  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:26:24  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:26:24  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:26:24  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:26:24  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:26:24  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:26:24  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:26:24  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:26:24  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:26:24  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:26:24  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:26:24  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:26:24  22  FROM di5min WHERE pair LIKE'%cad%'
20:26:24  23  ORDER BY ydate
20:26:24  24  /

View created.

Elapsed: 00:00:00.05
20:26:24 SQL> 
20:26:24 SQL> -- rpt
20:26:24 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20817

Elapsed: 00:00:00.35
20:26:24 SQL> 
20:26:24 SQL> -- Calc deltas and gains
20:26:24 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.24
20:26:25 SQL> 
20:26:25 SQL> CREATE TABLE q13 COMPRESS AS
20:26:25   2  SELECT
20:26:25   3  pair
20:26:25   4  ,ydate
20:26:25   5  ,prdate
20:26:25   6  ,rnum
20:26:25   7  ,lg4
20:26:25   8  ,lg8
20:26:25   9  ,lg12
20:26:25  10  ,ld4
20:26:25  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:26:25  12  -- step by 1
20:26:25  13  ,clse-lg1 d01
20:26:25  14  ,lg1-lg2	d12
20:26:25  15  ,lg2-lg3	d23
20:26:25  16  ,lg3-lg4	d34
20:26:25  17  ,lg4-lg5	d45
20:26:25  18  ,lg5-lg6	d56
20:26:25  19  ,lg6-lg7	d67
20:26:25  20  ,lg7-lg8	d78
20:26:25  21  ,lg8-lg9	d89
20:26:25  22  -- step by 2
20:26:25  23  ,clse-lg2 d02
20:26:25  24  ,lg2-lg4 d24
20:26:25  25  ,lg4-lg6 d46
20:26:25  26  ,lg6-lg8 d68
20:26:25  27  -- step by 3
20:26:25  28  ,clse-lg3 d03
20:26:25  29  ,lg3-lg6	d36
20:26:25  30  ,lg6-lg9	d69
20:26:25  31  ,lg9-lg12 d912
20:26:25  32  -- step by 4
20:26:25  33  ,clse-lg4 d04
20:26:25  34  ,lg4-lg8	d48
20:26:25  35  ,lg8-lg12 d812
20:26:25  36  ,lg6-lg12 d612
20:26:25  37  ,lg12-lg18 d1218
20:26:25  38  --
20:26:25  39  ,ABS(clse-lg1)dc1
20:26:25  40  ,ABS(clse-lg2)dc2
20:26:25  41  ,ABS(clse-lg3)dc3
20:26:25  42  ,ABS(clse-lg4)dc4
20:26:25  43  ,ABS(clse-lg5)dc5
20:26:25  44  ,ABS(clse-lg6)dc6
20:26:25  45  ,ABS(clse-lg7)dc7
20:26:25  46  ,ABS(clse-lg8)dc8
20:26:25  47  ,ABS(clse-lg9)dc9
20:26:25  48  ,ABS(clse-lg12)dc12
20:26:25  49  ,ABS(clse-lg18)dc18
20:26:25  50  ,ABS(clse-lg24)dc24
20:26:25  51  ,ABS(clse-lg72)dc72
20:26:25  52  ,(ld4-clse) ug4
20:26:25  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:26:25  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:26:25  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:26:25  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:26:25  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:26:25  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:26:25  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:26:25  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:26:25  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:26:25  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:26:25  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:26:25  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:26:25  65  ,0+TO_CHAR(ydate,'D')d
20:26:25  66  ,0+TO_CHAR(ydate,'W')w
20:26:25  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:26:25  68  FROM q11
20:26:25  69  -- I dont want any NULL values from the LAG() functions:
20:26:25  70  WHERE lg72 > 0
20:26:25  71  ORDER BY pair,ydate
20:26:25  72  /

Table created.

Elapsed: 00:00:01.70
20:26:26 SQL> 
20:26:26 SQL> -- rpt
20:26:26 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9165
	-1	   10788

Elapsed: 00:00:00.03
20:26:26 SQL> 
20:26:26 SQL> -- Calc gains and ntiles
20:26:26 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.18
20:26:26 SQL> CREATE TABLE q15 COMPRESS AS
20:26:26   2  SELECT
20:26:26   3  pair
20:26:26   4  ,ydate
20:26:26   5  ,prdate -- Should be unique
20:26:26   6  ,trend -- +1 or -1
20:26:26   7  ,dc12 -- next statement needs this
20:26:26   8  -- Use NTILE() to derive some attributes
20:26:26   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:26:26  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:26:26  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:26:26  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:26:26  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:26:26  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:26:26  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:26:26  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:26:26  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:26:26  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:26:26  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:26:26  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:26:26  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:26:26  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:26:26  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:26:26  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:26:26  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:26:26  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:26:26  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:26:26  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:26:26  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:26:26  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:26:26  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:26:26  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:26:26  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:26:26  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:26:26  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:26:26  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:26:26  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:26:26  38  ,hh    att28
20:26:26  39  ,d     att29
20:26:26  40  ,w     att30
20:26:26  41  ,mpm   att31
20:26:26  42  ,trend att32
20:26:26  43  ,ug4 g4
20:26:26  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:26:26  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:26:26  46  FROM q13
20:26:26  47  ORDER BY pair,ydate
20:26:26  48  /

Table created.

Elapsed: 00:00:04.03
20:26:30 SQL> 
20:26:30 SQL> -- rpt
20:26:30 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:26:30   2  GROUP BY pair,trend,gatt,gattn
20:26:30   3  ORDER BY pair,trend,gatt,gattn
20:26:30   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00000241	    2988    .015610185
usd_cad 	-1 nup up  -.00227221	    3950    .057642004
usd_cad 	-1 up  nup  .00239324	    3850    .005671542
usd_cad 	 1 nup nup  -.0000176	    2111    -.06147166
usd_cad 	 1 nup up  -.00236607	    3858    .000671943
usd_cad 	 1 up  nup .002599531	    3148    -.00225244
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.05
20:26:30 SQL> 
20:26:30 SQL> -- rpt
20:26:30 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-17 20:15:00

Elapsed: 00:00:00.01
20:26:31 SQL> 
20:26:31 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.17
20:26:31 SQL> CREATE TABLE modsrc COMPRESS AS
20:26:31   2  SELECT
20:26:31   3  pair
20:26:31   4  ,ydate
20:26:31   5  ,prdate
20:26:31   6  ,trend
20:26:31   7  ,g4
20:26:31   8  ,gatt
20:26:31   9  ,gattn
20:26:31  10  ,dc12
20:26:31  11  FROM q15
20:26:31  12  /

Table created.

Elapsed: 00:00:00.09
20:26:31 SQL> 
20:26:31 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.24
20:26:31 SQL> 
20:26:31 SQL> -- rpt
20:26:31 SQL> 
20:26:31 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20817

Elapsed: 00:00:00.36
20:26:31 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19953

Elapsed: 00:00:00.01
20:26:31 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19953

Elapsed: 00:00:00.00
20:26:31 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19953

Elapsed: 00:00:00.01
20:26:31 SQL> 
20:26:31 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:26:31   2  GROUP BY pair,trend,gatt,gattn
20:26:31   3  ORDER BY pair,trend,gatt,gattn
20:26:31   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00000241	    2988    .015610185
usd_cad 	-1 nup up  -.00227221	    3950    .057642004
usd_cad 	-1 up  nup  .00239324	    3850    .005671542
usd_cad 	 1 nup nup  -.0000176	    2111    -.06147166
usd_cad 	 1 nup up  -.00236607	    3858    .000671943
usd_cad 	 1 up  nup .002599531	    3148    -.00225244
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
20:26:31 SQL> 
20:26:31 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
20:26:31 SQL> CREATE TABLE cad_ms10 COMPRESS AS
20:26:31   2  SELECT
20:26:31   3  ydate
20:26:31   4  ,trend cad_trend
20:26:31   5  ,g4    cad_g4
20:26:31   6  ,gatt  cad_gatt
20:26:31   7  ,gattn cad_gattn
20:26:31   8  FROM modsrc
20:26:31   9  /

Table created.

Elapsed: 00:00:00.06
20:26:32 SQL> 
20:26:32 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
20:26:32 SQL> 
20:26:32 SQL> -- rpt
20:26:32 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 00:30:01 2010-12-17 20:15:00	 9117	  -.0089      .0151
	-1 2010-09-13 19:30:01 2010-12-17 09:45:00	10788	  -.0107      .0147

Elapsed: 00:00:00.02
20:26:32 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 00:30:01 2010-12-17 20:15:00	       9165	 -.0089       .0151
	-1 2010-09-13 19:30:01 2010-12-17 09:45:00	      10788	 -.0107       .0147

Elapsed: 00:00:00.02
20:26:32 SQL> 
20:26:32 SQL> -- I need a copy of q15 attributes
20:26:32 SQL> 
20:26:32 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.03
20:26:32 SQL> CREATE TABLE cad_att COMPRESS AS
20:26:32   2  SELECT
20:26:32   3  ydate
20:26:32   4  ,att00 cad_att00
20:26:32   5  ,att01 cad_att01
20:26:32   6  ,att02 cad_att02
20:26:32   7  ,att03 cad_att03
20:26:32   8  ,att04 cad_att04
20:26:32   9  ,att05 cad_att05
20:26:32  10  ,att06 cad_att06
20:26:32  11  ,att07 cad_att07
20:26:32  12  ,att08 cad_att08
20:26:32  13  ,att09 cad_att09
20:26:32  14  ,att10 cad_att10
20:26:32  15  ,att11 cad_att11
20:26:32  16  ,att12 cad_att12
20:26:32  17  ,att13 cad_att13
20:26:32  18  ,att14 cad_att14
20:26:32  19  ,att15 cad_att15
20:26:32  20  ,att16 cad_att16
20:26:32  21  ,att17 cad_att17
20:26:32  22  ,att18 cad_att18
20:26:32  23  ,att19 cad_att19
20:26:32  24  ,att20 cad_att20
20:26:32  25  ,att21 cad_att21
20:26:32  26  ,att22 cad_att22
20:26:32  27  ,att23 cad_att23
20:26:32  28  ,att24 cad_att24
20:26:32  29  ,att25 cad_att25
20:26:32  30  ,att26 cad_att26
20:26:32  31  ,att27 cad_att27
20:26:32  32  ,att28 cad_att28
20:26:32  33  ,att29 cad_att29
20:26:32  34  ,att30 cad_att30
20:26:32  35  ,att31 cad_att31
20:26:32  36  ,att32 cad_att32
20:26:32  37  FROM q15
20:26:32  38  /

Table created.

Elapsed: 00:00:00.15
20:26:32 SQL> 
20:26:32 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
20:26:32 SQL> 
20:26:32 SQL> -- rpt
20:26:32 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19953

Elapsed: 00:00:00.01
20:26:32 SQL> 
20:26:32 SQL> --
20:26:32 SQL> -- chf10.sql
20:26:32 SQL> --
20:26:32 SQL> 
20:26:32 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:26:32 SQL> 
20:26:32 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.30
20:26:33 SQL> 
20:26:33 SQL> -- I created di5min here:
20:26:33 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:26:33 SQL> 
20:26:33 SQL> CREATE OR REPLACE VIEW q11 AS
20:26:33   2  SELECT
20:26:33   3  pair
20:26:33   4  ,ydate
20:26:33   5  ,prdate
20:26:33   6  ,rownum rnum -- acts as t in my time-series
20:26:33   7  ,clse
20:26:33   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:26:33   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:26:33  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:26:33  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:26:33  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:26:33  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:26:33  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:26:33  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:26:33  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:26:33  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:26:33  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:26:33  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:26:33  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:26:33  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:26:33  22  FROM di5min WHERE pair LIKE'%chf%'
20:26:33  23  ORDER BY ydate
20:26:33  24  /

View created.

Elapsed: 00:00:00.05
20:26:33 SQL> 
20:26:33 SQL> -- rpt
20:26:33 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20821

Elapsed: 00:00:00.34
20:26:33 SQL> 
20:26:33 SQL> -- Calc deltas and gains
20:26:33 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.18
20:26:33 SQL> 
20:26:33 SQL> CREATE TABLE q13 COMPRESS AS
20:26:33   2  SELECT
20:26:33   3  pair
20:26:33   4  ,ydate
20:26:33   5  ,prdate
20:26:33   6  ,rnum
20:26:33   7  ,lg4
20:26:33   8  ,lg8
20:26:33   9  ,lg12
20:26:33  10  ,ld4
20:26:33  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:26:33  12  -- step by 1
20:26:33  13  ,clse-lg1 d01
20:26:33  14  ,lg1-lg2	d12
20:26:33  15  ,lg2-lg3	d23
20:26:33  16  ,lg3-lg4	d34
20:26:33  17  ,lg4-lg5	d45
20:26:33  18  ,lg5-lg6	d56
20:26:33  19  ,lg6-lg7	d67
20:26:33  20  ,lg7-lg8	d78
20:26:33  21  ,lg8-lg9	d89
20:26:33  22  -- step by 2
20:26:33  23  ,clse-lg2 d02
20:26:33  24  ,lg2-lg4 d24
20:26:33  25  ,lg4-lg6 d46
20:26:33  26  ,lg6-lg8 d68
20:26:33  27  -- step by 3
20:26:33  28  ,clse-lg3 d03
20:26:33  29  ,lg3-lg6	d36
20:26:33  30  ,lg6-lg9	d69
20:26:33  31  ,lg9-lg12 d912
20:26:33  32  -- step by 4
20:26:33  33  ,clse-lg4 d04
20:26:33  34  ,lg4-lg8	d48
20:26:33  35  ,lg8-lg12 d812
20:26:33  36  ,lg6-lg12 d612
20:26:33  37  ,lg12-lg18 d1218
20:26:33  38  --
20:26:33  39  ,ABS(clse-lg1)dc1
20:26:33  40  ,ABS(clse-lg2)dc2
20:26:33  41  ,ABS(clse-lg3)dc3
20:26:33  42  ,ABS(clse-lg4)dc4
20:26:33  43  ,ABS(clse-lg5)dc5
20:26:33  44  ,ABS(clse-lg6)dc6
20:26:33  45  ,ABS(clse-lg7)dc7
20:26:33  46  ,ABS(clse-lg8)dc8
20:26:33  47  ,ABS(clse-lg9)dc9
20:26:33  48  ,ABS(clse-lg12)dc12
20:26:33  49  ,ABS(clse-lg18)dc18
20:26:33  50  ,ABS(clse-lg24)dc24
20:26:33  51  ,ABS(clse-lg72)dc72
20:26:33  52  ,(ld4-clse) ug4
20:26:33  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:26:33  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:26:33  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:26:33  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:26:33  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:26:33  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:26:33  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:26:33  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:26:33  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:26:33  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:26:33  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:26:33  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:26:33  65  ,0+TO_CHAR(ydate,'D')d
20:26:33  66  ,0+TO_CHAR(ydate,'W')w
20:26:33  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:26:33  68  FROM q11
20:26:33  69  -- I dont want any NULL values from the LAG() functions:
20:26:33  70  WHERE lg72 > 0
20:26:33  71  ORDER BY pair,ydate
20:26:33  72  /

Table created.

Elapsed: 00:00:01.75
20:26:35 SQL> 
20:26:35 SQL> -- rpt
20:26:35 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9399
	-1	   10558

Elapsed: 00:00:00.03
20:26:35 SQL> 
20:26:35 SQL> -- Calc gains and ntiles
20:26:35 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.14
20:26:35 SQL> CREATE TABLE q15 COMPRESS AS
20:26:35   2  SELECT
20:26:35   3  pair
20:26:35   4  ,ydate
20:26:35   5  ,prdate -- Should be unique
20:26:35   6  ,trend -- +1 or -1
20:26:35   7  ,dc12 -- next statement needs this
20:26:35   8  -- Use NTILE() to derive some attributes
20:26:35   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:26:35  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:26:35  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:26:35  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:26:35  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:26:35  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:26:35  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:26:35  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:26:35  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:26:35  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:26:35  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:26:35  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:26:35  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:26:35  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:26:35  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:26:35  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:26:35  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:26:35  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:26:35  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:26:35  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:26:35  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:26:35  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:26:35  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:26:35  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:26:35  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:26:35  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:26:35  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:26:35  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:26:35  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:26:35  38  ,hh    att28
20:26:35  39  ,d     att29
20:26:35  40  ,w     att30
20:26:35  41  ,mpm   att31
20:26:35  42  ,trend att32
20:26:35  43  ,ug4 g4
20:26:35  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:26:35  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:26:35  46  FROM q13
20:26:35  47  ORDER BY pair,ydate
20:26:35  48  /

Table created.

Elapsed: 00:00:04.00
20:26:39 SQL> 
20:26:39 SQL> -- rpt
20:26:39 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:26:39   2  GROUP BY pair,trend,gatt,gattn
20:26:39   3  ORDER BY pair,trend,gatt,gattn
20:26:39   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000038117	    2592    .047429917
usd_chf 	-1 nup up  -.00292377	    3837    .058106097
usd_chf 	-1 up  nup  .00270548	    4129    -.12268561
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00254031	    3872    .111869093
usd_chf 	 1 up  nup  .00244741	    3253    -.16336111
usd_chf 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
20:26:39 SQL> 
20:26:39 SQL> -- rpt
20:26:39 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-17 20:20:00

Elapsed: 00:00:00.01
20:26:39 SQL> 
20:26:39 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
20:26:39 SQL> CREATE TABLE modsrc COMPRESS AS
20:26:39   2  SELECT
20:26:39   3  pair
20:26:39   4  ,ydate
20:26:39   5  ,prdate
20:26:39   6  ,trend
20:26:39   7  ,g4
20:26:39   8  ,gatt
20:26:39   9  ,gattn
20:26:39  10  ,dc12
20:26:39  11  FROM q15
20:26:39  12  /

Table created.

Elapsed: 00:00:00.09
20:26:39 SQL> 
20:26:39 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
20:26:40 SQL> 
20:26:40 SQL> -- rpt
20:26:40 SQL> 
20:26:40 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.35
20:26:40 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
20:26:40 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
20:26:40 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
20:26:40 SQL> 
20:26:40 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:26:40   2  GROUP BY pair,trend,gatt,gattn
20:26:40   3  ORDER BY pair,trend,gatt,gattn
20:26:40   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000038117	    2592    .047429917
usd_chf 	-1 nup up  -.00292377	    3837    .058106097
usd_chf 	-1 up  nup  .00270548	    4129    -.12268561
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00254031	    3872    .111869093
usd_chf 	 1 up  nup  .00244741	    3253    -.16336111
usd_chf 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
20:26:40 SQL> 
20:26:40 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.19
20:26:40 SQL> CREATE TABLE chf_ms10 COMPRESS AS
20:26:40   2  SELECT
20:26:40   3  ydate
20:26:40   4  ,trend chf_trend
20:26:40   5  ,g4    chf_g4
20:26:40   6  ,gatt  chf_gatt
20:26:40   7  ,gattn chf_gattn
20:26:40   8  FROM modsrc
20:26:40   9  /

Table created.

Elapsed: 00:00:00.10
20:26:40 SQL> 
20:26:40 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
20:26:40 SQL> 
20:26:40 SQL> -- rpt
20:26:40 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-15 02:05:01 2010-12-17 20:20:00	 9351	  -.0176     .01365
	-1 2010-09-13 19:30:01 2010-12-17 13:50:00	10558	  -.0166      .0149

Elapsed: 00:00:00.03
20:26:41 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-15 02:05:01 2010-12-17 20:20:00	       9399	 -.0176      .01365
	-1 2010-09-13 19:30:01 2010-12-17 13:50:00	      10558	 -.0166       .0149

Elapsed: 00:00:00.01
20:26:41 SQL> 
20:26:41 SQL> -- I need a copy of q15 attributes
20:26:41 SQL> 
20:26:41 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.03
20:26:41 SQL> CREATE TABLE chf_att COMPRESS AS
20:26:41   2  SELECT
20:26:41   3  ydate
20:26:41   4  ,att00 chf_att00
20:26:41   5  ,att01 chf_att01
20:26:41   6  ,att02 chf_att02
20:26:41   7  ,att03 chf_att03
20:26:41   8  ,att04 chf_att04
20:26:41   9  ,att05 chf_att05
20:26:41  10  ,att06 chf_att06
20:26:41  11  ,att07 chf_att07
20:26:41  12  ,att08 chf_att08
20:26:41  13  ,att09 chf_att09
20:26:41  14  ,att10 chf_att10
20:26:41  15  ,att11 chf_att11
20:26:41  16  ,att12 chf_att12
20:26:41  17  ,att13 chf_att13
20:26:41  18  ,att14 chf_att14
20:26:41  19  ,att15 chf_att15
20:26:41  20  ,att16 chf_att16
20:26:41  21  ,att17 chf_att17
20:26:41  22  ,att18 chf_att18
20:26:41  23  ,att19 chf_att19
20:26:41  24  ,att20 chf_att20
20:26:41  25  ,att21 chf_att21
20:26:41  26  ,att22 chf_att22
20:26:41  27  ,att23 chf_att23
20:26:41  28  ,att24 chf_att24
20:26:41  29  ,att25 chf_att25
20:26:41  30  ,att26 chf_att26
20:26:41  31  ,att27 chf_att27
20:26:41  32  ,att28 chf_att28
20:26:41  33  ,att29 chf_att29
20:26:41  34  ,att30 chf_att30
20:26:41  35  ,att31 chf_att31
20:26:41  36  ,att32 chf_att32
20:26:41  37  FROM q15
20:26:41  38  /

Table created.

Elapsed: 00:00:00.15
20:26:41 SQL> 
20:26:41 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.44
20:26:41 SQL> 
20:26:41 SQL> -- rpt
20:26:41 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.01
20:26:41 SQL> 
20:26:41 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
