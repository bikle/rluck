
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 16 23:00:37 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

23:00:37 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.01
23:00:37 SQL> 23:00:37 SQL> --
23:00:37 SQL> -- eur10.sql
23:00:37 SQL> --
23:00:37 SQL> 
23:00:37 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:00:37 SQL> 
23:00:37 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.00
23:00:37 SQL> 
23:00:37 SQL> -- I created di5min here:
23:00:37 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:00:37 SQL> 
23:00:37 SQL> CREATE OR REPLACE VIEW q11 AS
23:00:37   2  SELECT
23:00:37   3  pair
23:00:37   4  ,ydate
23:00:37   5  ,prdate
23:00:37   6  ,rownum rnum -- acts as t in my time-series
23:00:37   7  ,clse
23:00:37   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:00:37   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:00:37  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:00:37  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:00:37  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:00:37  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:00:37  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:00:37  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:00:37  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:00:37  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:00:37  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:00:37  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:00:37  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:00:37  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:00:37  22  FROM di5min WHERE pair LIKE'%eur%'
23:00:37  23  ORDER BY ydate
23:00:37  24  /

View created.

Elapsed: 00:00:00.04
23:00:37 SQL> 
23:00:37 SQL> -- rpt
23:00:37 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20821

Elapsed: 00:00:00.38
23:00:37 SQL> 
23:00:37 SQL> -- Calc deltas and gains
23:00:37 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.06
23:00:37 SQL> 
23:00:37 SQL> CREATE TABLE q13 COMPRESS AS
23:00:37   2  SELECT
23:00:37   3  pair
23:00:37   4  ,ydate
23:00:37   5  ,prdate
23:00:37   6  ,rnum
23:00:37   7  ,lg4
23:00:37   8  ,lg8
23:00:37   9  ,lg12
23:00:37  10  ,ld4
23:00:37  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:00:37  12  -- step by 1
23:00:37  13  ,clse-lg1 d01
23:00:37  14  ,lg1-lg2	d12
23:00:37  15  ,lg2-lg3	d23
23:00:37  16  ,lg3-lg4	d34
23:00:37  17  ,lg4-lg5	d45
23:00:37  18  ,lg5-lg6	d56
23:00:37  19  ,lg6-lg7	d67
23:00:37  20  ,lg7-lg8	d78
23:00:37  21  ,lg8-lg9	d89
23:00:37  22  -- step by 2
23:00:37  23  ,clse-lg2 d02
23:00:37  24  ,lg2-lg4 d24
23:00:37  25  ,lg4-lg6 d46
23:00:37  26  ,lg6-lg8 d68
23:00:37  27  -- step by 3
23:00:37  28  ,clse-lg3 d03
23:00:37  29  ,lg3-lg6	d36
23:00:37  30  ,lg6-lg9	d69
23:00:37  31  ,lg9-lg12 d912
23:00:37  32  -- step by 4
23:00:37  33  ,clse-lg4 d04
23:00:37  34  ,lg4-lg8	d48
23:00:37  35  ,lg8-lg12 d812
23:00:37  36  ,lg6-lg12 d612
23:00:37  37  ,lg12-lg18 d1218
23:00:37  38  --
23:00:37  39  ,ABS(clse-lg1)dc1
23:00:37  40  ,ABS(clse-lg2)dc2
23:00:37  41  ,ABS(clse-lg3)dc3
23:00:37  42  ,ABS(clse-lg4)dc4
23:00:37  43  ,ABS(clse-lg5)dc5
23:00:37  44  ,ABS(clse-lg6)dc6
23:00:37  45  ,ABS(clse-lg7)dc7
23:00:37  46  ,ABS(clse-lg8)dc8
23:00:37  47  ,ABS(clse-lg9)dc9
23:00:37  48  ,ABS(clse-lg12)dc12
23:00:37  49  ,ABS(clse-lg18)dc18
23:00:37  50  ,ABS(clse-lg24)dc24
23:00:37  51  ,ABS(clse-lg72)dc72
23:00:37  52  ,(ld4-clse) ug4
23:00:37  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:00:37  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:00:37  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:00:37  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:00:37  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:00:37  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:00:37  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:00:37  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:00:37  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:00:37  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:00:37  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:00:37  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:00:37  65  ,0+TO_CHAR(ydate,'D')d
23:00:37  66  ,0+TO_CHAR(ydate,'W')w
23:00:37  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:00:37  68  FROM q11
23:00:37  69  -- I dont want any NULL values from the LAG() functions:
23:00:37  70  WHERE lg72 > 0
23:00:37  71  ORDER BY pair,ydate
23:00:37  72  /

Table created.

Elapsed: 00:00:01.95
23:00:39 SQL> 
23:00:39 SQL> -- rpt
23:00:39 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10283
	-1	    9674

Elapsed: 00:00:00.04
23:00:39 SQL> 
23:00:39 SQL> -- Calc gains and ntiles
23:00:39 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.04
23:00:39 SQL> CREATE TABLE q15 COMPRESS AS
23:00:39   2  SELECT
23:00:39   3  pair
23:00:39   4  ,ydate
23:00:39   5  ,prdate -- Should be unique
23:00:39   6  ,trend -- +1 or -1
23:00:39   7  ,dc12 -- next statement needs this
23:00:39   8  -- Use NTILE() to derive some attributes
23:00:39   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:00:39  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:00:39  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:00:39  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:00:39  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:00:39  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:00:39  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:00:39  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:00:39  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:00:39  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:00:39  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:00:39  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:00:39  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:00:39  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:00:39  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:00:39  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:00:39  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:00:39  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:00:39  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:00:39  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:00:39  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:00:39  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:00:39  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:00:39  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:00:39  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:00:39  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:00:39  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:00:39  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:00:39  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:00:39  38  ,hh    att28
23:00:39  39  ,d     att29
23:00:39  40  ,w     att30
23:00:39  41  ,mpm   att31
23:00:39  42  ,trend att32
23:00:39  43  ,ug4 g4
23:00:39  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:00:39  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:00:39  46  FROM q13
23:00:39  47  ORDER BY pair,ydate
23:00:39  48  /

Table created.

Elapsed: 00:00:03.94
23:00:43 SQL> 
23:00:43 SQL> -- rpt
23:00:43 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:00:43   2  GROUP BY pair,trend,gatt,gattn
23:00:43   3  ORDER BY pair,trend,gatt,gattn
23:00:43   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup  .00363759	    4162    -.21019017
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup  .00371886	    4328    -.14464731
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
23:00:43 SQL> 
23:00:43 SQL> -- rpt
23:00:43 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-16 22:50:00

Elapsed: 00:00:00.01
23:00:43 SQL> 
23:00:43 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.04
23:00:43 SQL> CREATE TABLE modsrc COMPRESS AS
23:00:43   2  SELECT
23:00:43   3  pair
23:00:43   4  ,ydate
23:00:43   5  ,prdate
23:00:43   6  ,trend
23:00:43   7  ,g4
23:00:43   8  ,gatt
23:00:43   9  ,gattn
23:00:43  10  ,dc12
23:00:43  11  FROM q15
23:00:43  12  /

Table created.

Elapsed: 00:00:00.10
23:00:43 SQL> 
23:00:43 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
23:00:44 SQL> 
23:00:44 SQL> -- rpt
23:00:44 SQL> 
23:00:44 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.36
23:00:44 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
23:00:44 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
23:00:44 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
23:00:44 SQL> 
23:00:44 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:00:44   2  GROUP BY pair,trend,gatt,gattn
23:00:44   3  ORDER BY pair,trend,gatt,gattn
23:00:44   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup  .00363759	    4162    -.21019017
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup  .00371886	    4328    -.14464731
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
23:00:44 SQL> 
23:00:44 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.14
23:00:44 SQL> CREATE TABLE eur_ms10 COMPRESS AS
23:00:44   2  SELECT
23:00:44   3  ydate
23:00:44   4  ,trend eur_trend
23:00:44   5  ,g4    eur_g4
23:00:44   6  ,gatt  eur_gatt
23:00:44   7  ,gattn eur_gattn
23:00:44   8  FROM modsrc
23:00:44   9  /

Table created.

Elapsed: 00:00:00.34
23:00:44 SQL> 
23:00:44 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
23:00:45 SQL> 
23:00:45 SQL> -- rpt
23:00:45 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:15:01 2010-12-16 22:50:00	10272	  -.0153      .0165
	-1 2010-09-12 22:05:01 2010-12-16 21:50:00	 9637	  -.0164      .0167

Elapsed: 00:00:00.01
23:00:45 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:15:01 2010-12-16 22:50:00	      10283	 -.0153       .0165
	-1 2010-09-12 22:05:01 2010-12-16 21:50:00	       9674	 -.0164       .0167

Elapsed: 00:00:00.02
23:00:45 SQL> 
23:00:45 SQL> -- I need a copy of q15 attributes
23:00:45 SQL> 
23:00:45 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.03
23:00:45 SQL> CREATE TABLE eur_att COMPRESS AS
23:00:45   2  SELECT
23:00:45   3  ydate
23:00:45   4  ,att00 eur_att00
23:00:45   5  ,att01 eur_att01
23:00:45   6  ,att02 eur_att02
23:00:45   7  ,att03 eur_att03
23:00:45   8  ,att04 eur_att04
23:00:45   9  ,att05 eur_att05
23:00:45  10  ,att06 eur_att06
23:00:45  11  ,att07 eur_att07
23:00:45  12  ,att08 eur_att08
23:00:45  13  ,att09 eur_att09
23:00:45  14  ,att10 eur_att10
23:00:45  15  ,att11 eur_att11
23:00:45  16  ,att12 eur_att12
23:00:45  17  ,att13 eur_att13
23:00:45  18  ,att14 eur_att14
23:00:45  19  ,att15 eur_att15
23:00:45  20  ,att16 eur_att16
23:00:45  21  ,att17 eur_att17
23:00:45  22  ,att18 eur_att18
23:00:45  23  ,att19 eur_att19
23:00:45  24  ,att20 eur_att20
23:00:45  25  ,att21 eur_att21
23:00:45  26  ,att22 eur_att22
23:00:45  27  ,att23 eur_att23
23:00:45  28  ,att24 eur_att24
23:00:45  29  ,att25 eur_att25
23:00:45  30  ,att26 eur_att26
23:00:45  31  ,att27 eur_att27
23:00:45  32  ,att28 eur_att28
23:00:45  33  ,att29 eur_att29
23:00:45  34  ,att30 eur_att30
23:00:45  35  ,att31 eur_att31
23:00:45  36  ,att32 eur_att32
23:00:45  37  FROM q15
23:00:45  38  /

Table created.

Elapsed: 00:00:00.14
23:00:45 SQL> 
23:00:45 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
23:00:45 SQL> 
23:00:45 SQL> -- rpt
23:00:45 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.00
23:00:45 SQL> 
23:00:45 SQL> --
23:00:45 SQL> -- aud10.sql
23:00:45 SQL> --
23:00:45 SQL> 
23:00:45 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:00:45 SQL> 
23:00:45 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.32
23:00:46 SQL> 
23:00:46 SQL> -- I created di5min here:
23:00:46 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:00:46 SQL> 
23:00:46 SQL> CREATE OR REPLACE VIEW q11 AS
23:00:46   2  SELECT
23:00:46   3  pair
23:00:46   4  ,ydate
23:00:46   5  ,prdate
23:00:46   6  ,rownum rnum -- acts as t in my time-series
23:00:46   7  ,clse
23:00:46   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:00:46   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:00:46  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:00:46  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:00:46  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:00:46  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:00:46  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:00:46  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:00:46  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:00:46  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:00:46  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:00:46  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:00:46  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:00:46  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:00:46  22  FROM di5min WHERE pair LIKE'%aud%'
23:00:46  23  ORDER BY ydate
23:00:46  24  /

View created.

Elapsed: 00:00:00.02
23:00:46 SQL> 
23:00:46 SQL> -- rpt
23:00:46 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20818

Elapsed: 00:00:00.35
23:00:46 SQL> 
23:00:46 SQL> -- Calc deltas and gains
23:00:46 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
23:00:46 SQL> 
23:00:46 SQL> CREATE TABLE q13 COMPRESS AS
23:00:46   2  SELECT
23:00:46   3  pair
23:00:46   4  ,ydate
23:00:46   5  ,prdate
23:00:46   6  ,rnum
23:00:46   7  ,lg4
23:00:46   8  ,lg8
23:00:46   9  ,lg12
23:00:46  10  ,ld4
23:00:46  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:00:46  12  -- step by 1
23:00:46  13  ,clse-lg1 d01
23:00:46  14  ,lg1-lg2	d12
23:00:46  15  ,lg2-lg3	d23
23:00:46  16  ,lg3-lg4	d34
23:00:46  17  ,lg4-lg5	d45
23:00:46  18  ,lg5-lg6	d56
23:00:46  19  ,lg6-lg7	d67
23:00:46  20  ,lg7-lg8	d78
23:00:46  21  ,lg8-lg9	d89
23:00:46  22  -- step by 2
23:00:46  23  ,clse-lg2 d02
23:00:46  24  ,lg2-lg4 d24
23:00:46  25  ,lg4-lg6 d46
23:00:46  26  ,lg6-lg8 d68
23:00:46  27  -- step by 3
23:00:46  28  ,clse-lg3 d03
23:00:46  29  ,lg3-lg6	d36
23:00:46  30  ,lg6-lg9	d69
23:00:46  31  ,lg9-lg12 d912
23:00:46  32  -- step by 4
23:00:46  33  ,clse-lg4 d04
23:00:46  34  ,lg4-lg8	d48
23:00:46  35  ,lg8-lg12 d812
23:00:46  36  ,lg6-lg12 d612
23:00:46  37  ,lg12-lg18 d1218
23:00:46  38  --
23:00:46  39  ,ABS(clse-lg1)dc1
23:00:46  40  ,ABS(clse-lg2)dc2
23:00:46  41  ,ABS(clse-lg3)dc3
23:00:46  42  ,ABS(clse-lg4)dc4
23:00:46  43  ,ABS(clse-lg5)dc5
23:00:46  44  ,ABS(clse-lg6)dc6
23:00:46  45  ,ABS(clse-lg7)dc7
23:00:46  46  ,ABS(clse-lg8)dc8
23:00:46  47  ,ABS(clse-lg9)dc9
23:00:46  48  ,ABS(clse-lg12)dc12
23:00:46  49  ,ABS(clse-lg18)dc18
23:00:46  50  ,ABS(clse-lg24)dc24
23:00:46  51  ,ABS(clse-lg72)dc72
23:00:46  52  ,(ld4-clse) ug4
23:00:46  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:00:46  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:00:46  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:00:46  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:00:46  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:00:46  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:00:46  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:00:46  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:00:46  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:00:46  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:00:46  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:00:46  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:00:46  65  ,0+TO_CHAR(ydate,'D')d
23:00:46  66  ,0+TO_CHAR(ydate,'W')w
23:00:46  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:00:46  68  FROM q11
23:00:46  69  -- I dont want any NULL values from the LAG() functions:
23:00:46  70  WHERE lg72 > 0
23:00:46  71  ORDER BY pair,ydate
23:00:46  72  /

Table created.

Elapsed: 00:00:01.67
23:00:48 SQL> 
23:00:48 SQL> -- rpt
23:00:48 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10454
	-1	    9500

Elapsed: 00:00:00.03
23:00:48 SQL> 
23:00:48 SQL> -- Calc gains and ntiles
23:00:48 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
23:00:48 SQL> CREATE TABLE q15 COMPRESS AS
23:00:48   2  SELECT
23:00:48   3  pair
23:00:48   4  ,ydate
23:00:48   5  ,prdate -- Should be unique
23:00:48   6  ,trend -- +1 or -1
23:00:48   7  ,dc12 -- next statement needs this
23:00:48   8  -- Use NTILE() to derive some attributes
23:00:48   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:00:48  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:00:48  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:00:48  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:00:48  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:00:48  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:00:48  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:00:48  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:00:48  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:00:48  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:00:48  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:00:48  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:00:48  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:00:48  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:00:48  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:00:48  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:00:48  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:00:48  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:00:48  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:00:48  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:00:48  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:00:48  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:00:48  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:00:48  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:00:48  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:00:48  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:00:48  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:00:48  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:00:48  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:00:48  38  ,hh    att28
23:00:48  39  ,d     att29
23:00:48  40  ,w     att30
23:00:48  41  ,mpm   att31
23:00:48  42  ,trend att32
23:00:48  43  ,ug4 g4
23:00:48  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:00:48  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:00:48  46  FROM q13
23:00:48  47  ORDER BY pair,ydate
23:00:48  48  /

Table created.

Elapsed: 00:00:03.99
23:00:52 SQL> 
23:00:52 SQL> -- rpt
23:00:52 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:00:52   2  GROUP BY pair,trend,gatt,gattn
23:00:52   3  ORDER BY pair,trend,gatt,gattn
23:00:52   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup  .00297839	    4351    .026029253
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.2949E-06	    1950    .023122877
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002937738	    4416    -.17788013
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
23:00:52 SQL> 
23:00:52 SQL> -- rpt
23:00:52 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-16 22:50:00

Elapsed: 00:00:00.01
23:00:52 SQL> 
23:00:52 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
23:00:52 SQL> CREATE TABLE modsrc COMPRESS AS
23:00:52   2  SELECT
23:00:52   3  pair
23:00:52   4  ,ydate
23:00:52   5  ,prdate
23:00:52   6  ,trend
23:00:52   7  ,g4
23:00:52   8  ,gatt
23:00:52   9  ,gattn
23:00:52  10  ,dc12
23:00:52  11  FROM q15
23:00:52  12  /

Table created.

Elapsed: 00:00:00.09
23:00:52 SQL> 
23:00:52 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.23
23:00:52 SQL> 
23:00:52 SQL> -- rpt
23:00:52 SQL> 
23:00:52 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20818

Elapsed: 00:00:00.35
23:00:53 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.00
23:00:53 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.01
23:00:53 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.00
23:00:53 SQL> 
23:00:53 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:00:53   2  GROUP BY pair,trend,gatt,gattn
23:00:53   3  ORDER BY pair,trend,gatt,gattn
23:00:53   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup  .00297839	    4351    .026029253
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.2949E-06	    1950    .023122877
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002937738	    4416    -.17788013
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
23:00:53 SQL> 
23:00:53 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
23:00:53 SQL> CREATE TABLE aud_ms10 COMPRESS AS
23:00:53   2  SELECT
23:00:53   3  ydate
23:00:53   4  ,trend aud_trend
23:00:53   5  ,g4    aud_g4
23:00:53   6  ,gatt  aud_gatt
23:00:53   7  ,gattn aud_gattn
23:00:53   8  FROM modsrc
23:00:53   9  /

Table created.

Elapsed: 00:00:00.07
23:00:53 SQL> 
23:00:53 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
23:00:53 SQL> 
23:00:53 SQL> -- rpt
23:00:53 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:05:01 2010-12-16 22:50:00	10423	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-16 21:20:00	 9483	   -.017      .0131

Elapsed: 00:00:00.02
23:00:53 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:05:01 2010-12-16 22:50:00	      10454	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-16 21:20:00	       9500	  -.017       .0131

Elapsed: 00:00:00.01
23:00:53 SQL> 
23:00:53 SQL> -- I need a copy of q15 attributes
23:00:53 SQL> 
23:00:53 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.03
23:00:53 SQL> CREATE TABLE aud_att COMPRESS AS
23:00:53   2  SELECT
23:00:53   3  ydate
23:00:53   4  ,att00 aud_att00
23:00:53   5  ,att01 aud_att01
23:00:53   6  ,att02 aud_att02
23:00:53   7  ,att03 aud_att03
23:00:53   8  ,att04 aud_att04
23:00:53   9  ,att05 aud_att05
23:00:53  10  ,att06 aud_att06
23:00:53  11  ,att07 aud_att07
23:00:53  12  ,att08 aud_att08
23:00:53  13  ,att09 aud_att09
23:00:53  14  ,att10 aud_att10
23:00:53  15  ,att11 aud_att11
23:00:53  16  ,att12 aud_att12
23:00:53  17  ,att13 aud_att13
23:00:53  18  ,att14 aud_att14
23:00:53  19  ,att15 aud_att15
23:00:53  20  ,att16 aud_att16
23:00:53  21  ,att17 aud_att17
23:00:53  22  ,att18 aud_att18
23:00:53  23  ,att19 aud_att19
23:00:53  24  ,att20 aud_att20
23:00:53  25  ,att21 aud_att21
23:00:53  26  ,att22 aud_att22
23:00:53  27  ,att23 aud_att23
23:00:53  28  ,att24 aud_att24
23:00:53  29  ,att25 aud_att25
23:00:53  30  ,att26 aud_att26
23:00:53  31  ,att27 aud_att27
23:00:53  32  ,att28 aud_att28
23:00:53  33  ,att29 aud_att29
23:00:53  34  ,att30 aud_att30
23:00:53  35  ,att31 aud_att31
23:00:53  36  ,att32 aud_att32
23:00:53  37  FROM q15
23:00:53  38  /

Table created.

Elapsed: 00:00:00.13
23:00:53 SQL> 
23:00:53 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
23:00:54 SQL> 
23:00:54 SQL> -- rpt
23:00:54 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19954

Elapsed: 00:00:00.00
23:00:54 SQL> 
23:00:54 SQL> --
23:00:54 SQL> -- gbp10.sql
23:00:54 SQL> --
23:00:54 SQL> 
23:00:54 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:00:54 SQL> 
23:00:54 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.30
23:00:54 SQL> 
23:00:54 SQL> -- I created di5min here:
23:00:54 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:00:54 SQL> 
23:00:54 SQL> CREATE OR REPLACE VIEW q11 AS
23:00:54   2  SELECT
23:00:54   3  pair
23:00:54   4  ,ydate
23:00:54   5  ,prdate
23:00:54   6  ,rownum rnum -- acts as t in my time-series
23:00:54   7  ,clse
23:00:54   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:00:54   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:00:54  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:00:54  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:00:54  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:00:54  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:00:54  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:00:54  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:00:54  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:00:54  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:00:54  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:00:54  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:00:54  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:00:54  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:00:54  22  FROM di5min WHERE pair LIKE'%gbp%'
23:00:54  23  ORDER BY ydate
23:00:54  24  /

View created.

Elapsed: 00:00:00.05
23:00:54 SQL> 
23:00:54 SQL> -- rpt
23:00:54 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20820

Elapsed: 00:00:00.36
23:00:54 SQL> 
23:00:54 SQL> -- Calc deltas and gains
23:00:54 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
23:00:55 SQL> 
23:00:55 SQL> CREATE TABLE q13 COMPRESS AS
23:00:55   2  SELECT
23:00:55   3  pair
23:00:55   4  ,ydate
23:00:55   5  ,prdate
23:00:55   6  ,rnum
23:00:55   7  ,lg4
23:00:55   8  ,lg8
23:00:55   9  ,lg12
23:00:55  10  ,ld4
23:00:55  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:00:55  12  -- step by 1
23:00:55  13  ,clse-lg1 d01
23:00:55  14  ,lg1-lg2	d12
23:00:55  15  ,lg2-lg3	d23
23:00:55  16  ,lg3-lg4	d34
23:00:55  17  ,lg4-lg5	d45
23:00:55  18  ,lg5-lg6	d56
23:00:55  19  ,lg6-lg7	d67
23:00:55  20  ,lg7-lg8	d78
23:00:55  21  ,lg8-lg9	d89
23:00:55  22  -- step by 2
23:00:55  23  ,clse-lg2 d02
23:00:55  24  ,lg2-lg4 d24
23:00:55  25  ,lg4-lg6 d46
23:00:55  26  ,lg6-lg8 d68
23:00:55  27  -- step by 3
23:00:55  28  ,clse-lg3 d03
23:00:55  29  ,lg3-lg6	d36
23:00:55  30  ,lg6-lg9	d69
23:00:55  31  ,lg9-lg12 d912
23:00:55  32  -- step by 4
23:00:55  33  ,clse-lg4 d04
23:00:55  34  ,lg4-lg8	d48
23:00:55  35  ,lg8-lg12 d812
23:00:55  36  ,lg6-lg12 d612
23:00:55  37  ,lg12-lg18 d1218
23:00:55  38  --
23:00:55  39  ,ABS(clse-lg1)dc1
23:00:55  40  ,ABS(clse-lg2)dc2
23:00:55  41  ,ABS(clse-lg3)dc3
23:00:55  42  ,ABS(clse-lg4)dc4
23:00:55  43  ,ABS(clse-lg5)dc5
23:00:55  44  ,ABS(clse-lg6)dc6
23:00:55  45  ,ABS(clse-lg7)dc7
23:00:55  46  ,ABS(clse-lg8)dc8
23:00:55  47  ,ABS(clse-lg9)dc9
23:00:55  48  ,ABS(clse-lg12)dc12
23:00:55  49  ,ABS(clse-lg18)dc18
23:00:55  50  ,ABS(clse-lg24)dc24
23:00:55  51  ,ABS(clse-lg72)dc72
23:00:55  52  ,(ld4-clse) ug4
23:00:55  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:00:55  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:00:55  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:00:55  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:00:55  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:00:55  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:00:55  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:00:55  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:00:55  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:00:55  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:00:55  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:00:55  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:00:55  65  ,0+TO_CHAR(ydate,'D')d
23:00:55  66  ,0+TO_CHAR(ydate,'W')w
23:00:55  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:00:55  68  FROM q11
23:00:55  69  -- I dont want any NULL values from the LAG() functions:
23:00:55  70  WHERE lg72 > 0
23:00:55  71  ORDER BY pair,ydate
23:00:55  72  /

Table created.

Elapsed: 00:00:01.71
23:00:56 SQL> 
23:00:56 SQL> -- rpt
23:00:56 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9733
	-1	   10223

Elapsed: 00:00:00.03
23:00:56 SQL> 
23:00:56 SQL> -- Calc gains and ntiles
23:00:56 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.19
23:00:56 SQL> CREATE TABLE q15 COMPRESS AS
23:00:56   2  SELECT
23:00:56   3  pair
23:00:56   4  ,ydate
23:00:56   5  ,prdate -- Should be unique
23:00:56   6  ,trend -- +1 or -1
23:00:56   7  ,dc12 -- next statement needs this
23:00:56   8  -- Use NTILE() to derive some attributes
23:00:56   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:00:56  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:00:56  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:00:56  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:00:56  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:00:56  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:00:56  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:00:57  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:00:57  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:00:57  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:00:57  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:00:57  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:00:57  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:00:57  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:00:57  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:00:57  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:00:57  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:00:57  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:00:57  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:00:57  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:00:57  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:00:57  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:00:57  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:00:57  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:00:57  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:00:57  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:00:57  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:00:57  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:00:57  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:00:57  38  ,hh    att28
23:00:57  39  ,d     att29
23:00:57  40  ,w     att30
23:00:57  41  ,mpm   att31
23:00:57  42  ,trend att32
23:00:57  43  ,ug4 g4
23:00:57  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:00:57  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:00:57  46  FROM q13
23:00:57  47  ORDER BY pair,ydate
23:00:57  48  /

Table created.

Elapsed: 00:00:03.96
23:01:00 SQL> 
23:01:00 SQL> -- rpt
23:01:00 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:01:00   2  GROUP BY pair,trend,gatt,gattn
23:01:00   3  ORDER BY pair,trend,gatt,gattn
23:01:00   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003110265	    4374    -.09275799
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003574854	    3927    -.16625688
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.05
23:01:01 SQL> 
23:01:01 SQL> -- rpt
23:01:01 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-16 22:50:00

Elapsed: 00:00:00.01
23:01:01 SQL> 
23:01:01 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.11
23:01:01 SQL> CREATE TABLE modsrc COMPRESS AS
23:01:01   2  SELECT
23:01:01   3  pair
23:01:01   4  ,ydate
23:01:01   5  ,prdate
23:01:01   6  ,trend
23:01:01   7  ,g4
23:01:01   8  ,gatt
23:01:01   9  ,gattn
23:01:01  10  ,dc12
23:01:01  11  FROM q15
23:01:01  12  /

Table created.

Elapsed: 00:00:00.09
23:01:01 SQL> 
23:01:01 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.23
23:01:01 SQL> 
23:01:01 SQL> -- rpt
23:01:01 SQL> 
23:01:01 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20820

Elapsed: 00:00:00.34
23:01:01 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19956

Elapsed: 00:00:00.01
23:01:01 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19956

Elapsed: 00:00:00.01
23:01:01 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19956

Elapsed: 00:00:00.00
23:01:01 SQL> 
23:01:01 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:01:01   2  GROUP BY pair,trend,gatt,gattn
23:01:01   3  ORDER BY pair,trend,gatt,gattn
23:01:01   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003110265	    4374    -.09275799
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003574854	    3927    -.16625688
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
23:01:01 SQL> 
23:01:01 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.02
23:01:01 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
23:01:01   2  SELECT
23:01:01   3  ydate
23:01:01   4  ,trend gbp_trend
23:01:01   5  ,g4    gbp_g4
23:01:01   6  ,gatt  gbp_gatt
23:01:01   7  ,gattn gbp_gattn
23:01:01   8  FROM modsrc
23:01:01   9  /

Table created.

Elapsed: 00:00:00.06
23:01:01 SQL> 
23:01:01 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
23:01:02 SQL> 
23:01:02 SQL> -- rpt
23:01:02 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 00:05:01 2010-12-16 22:50:00	 9685	  -.0194      .0179
	-1 2010-09-12 22:05:01 2010-12-16 07:30:00	10223	  -.0153      .0159

Elapsed: 00:00:00.02
23:01:02 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 00:05:01 2010-12-16 22:50:00	       9733	 -.0194       .0179
	-1 2010-09-12 22:05:01 2010-12-16 07:30:00	      10223	 -.0153       .0159

Elapsed: 00:00:00.01
23:01:02 SQL> 
23:01:02 SQL> -- I need a copy of q15 attributes
23:01:02 SQL> 
23:01:02 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.03
23:01:02 SQL> CREATE TABLE gbp_att COMPRESS AS
23:01:02   2  SELECT
23:01:02   3  ydate
23:01:02   4  ,att00 gbp_att00
23:01:02   5  ,att01 gbp_att01
23:01:02   6  ,att02 gbp_att02
23:01:02   7  ,att03 gbp_att03
23:01:02   8  ,att04 gbp_att04
23:01:02   9  ,att05 gbp_att05
23:01:02  10  ,att06 gbp_att06
23:01:02  11  ,att07 gbp_att07
23:01:02  12  ,att08 gbp_att08
23:01:02  13  ,att09 gbp_att09
23:01:02  14  ,att10 gbp_att10
23:01:02  15  ,att11 gbp_att11
23:01:02  16  ,att12 gbp_att12
23:01:02  17  ,att13 gbp_att13
23:01:02  18  ,att14 gbp_att14
23:01:02  19  ,att15 gbp_att15
23:01:02  20  ,att16 gbp_att16
23:01:02  21  ,att17 gbp_att17
23:01:02  22  ,att18 gbp_att18
23:01:02  23  ,att19 gbp_att19
23:01:02  24  ,att20 gbp_att20
23:01:02  25  ,att21 gbp_att21
23:01:02  26  ,att22 gbp_att22
23:01:02  27  ,att23 gbp_att23
23:01:02  28  ,att24 gbp_att24
23:01:02  29  ,att25 gbp_att25
23:01:02  30  ,att26 gbp_att26
23:01:02  31  ,att27 gbp_att27
23:01:02  32  ,att28 gbp_att28
23:01:02  33  ,att29 gbp_att29
23:01:02  34  ,att30 gbp_att30
23:01:02  35  ,att31 gbp_att31
23:01:02  36  ,att32 gbp_att32
23:01:02  37  FROM q15
23:01:02  38  /

Table created.

Elapsed: 00:00:00.16
23:01:02 SQL> 
23:01:02 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.51
23:01:02 SQL> 
23:01:02 SQL> -- rpt
23:01:02 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19956

Elapsed: 00:00:00.00
23:01:02 SQL> 
23:01:02 SQL> --
23:01:02 SQL> -- jpy10.sql
23:01:02 SQL> --
23:01:02 SQL> 
23:01:02 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:01:02 SQL> 
23:01:02 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.41
23:01:03 SQL> 
23:01:03 SQL> -- I created di5min here:
23:01:03 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:01:03 SQL> 
23:01:03 SQL> CREATE OR REPLACE VIEW q11 AS
23:01:03   2  SELECT
23:01:03   3  pair
23:01:03   4  ,ydate
23:01:03   5  ,prdate
23:01:03   6  ,rownum rnum -- acts as t in my time-series
23:01:03   7  ,clse
23:01:03   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:01:03   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:01:03  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:01:03  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:01:03  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:01:03  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:01:03  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:01:03  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:01:03  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:01:03  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:01:03  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:01:03  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:01:03  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:01:03  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:01:03  22  FROM di5min WHERE pair LIKE'%jpy%'
23:01:03  23  ORDER BY ydate
23:01:03  24  /

View created.

Elapsed: 00:00:00.07
23:01:03 SQL> 
23:01:03 SQL> -- rpt
23:01:03 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20822

Elapsed: 00:00:00.37
23:01:03 SQL> 
23:01:03 SQL> -- Calc deltas and gains
23:01:03 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.19
23:01:03 SQL> 
23:01:03 SQL> CREATE TABLE q13 COMPRESS AS
23:01:03   2  SELECT
23:01:03   3  pair
23:01:03   4  ,ydate
23:01:03   5  ,prdate
23:01:03   6  ,rnum
23:01:03   7  ,lg4
23:01:03   8  ,lg8
23:01:03   9  ,lg12
23:01:03  10  ,ld4
23:01:03  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:01:03  12  -- step by 1
23:01:03  13  ,clse-lg1 d01
23:01:03  14  ,lg1-lg2	d12
23:01:03  15  ,lg2-lg3	d23
23:01:03  16  ,lg3-lg4	d34
23:01:03  17  ,lg4-lg5	d45
23:01:03  18  ,lg5-lg6	d56
23:01:03  19  ,lg6-lg7	d67
23:01:03  20  ,lg7-lg8	d78
23:01:03  21  ,lg8-lg9	d89
23:01:03  22  -- step by 2
23:01:03  23  ,clse-lg2 d02
23:01:03  24  ,lg2-lg4 d24
23:01:03  25  ,lg4-lg6 d46
23:01:03  26  ,lg6-lg8 d68
23:01:03  27  -- step by 3
23:01:03  28  ,clse-lg3 d03
23:01:03  29  ,lg3-lg6	d36
23:01:03  30  ,lg6-lg9	d69
23:01:03  31  ,lg9-lg12 d912
23:01:03  32  -- step by 4
23:01:03  33  ,clse-lg4 d04
23:01:03  34  ,lg4-lg8	d48
23:01:03  35  ,lg8-lg12 d812
23:01:03  36  ,lg6-lg12 d612
23:01:03  37  ,lg12-lg18 d1218
23:01:03  38  --
23:01:03  39  ,ABS(clse-lg1)dc1
23:01:03  40  ,ABS(clse-lg2)dc2
23:01:03  41  ,ABS(clse-lg3)dc3
23:01:03  42  ,ABS(clse-lg4)dc4
23:01:03  43  ,ABS(clse-lg5)dc5
23:01:03  44  ,ABS(clse-lg6)dc6
23:01:03  45  ,ABS(clse-lg7)dc7
23:01:03  46  ,ABS(clse-lg8)dc8
23:01:03  47  ,ABS(clse-lg9)dc9
23:01:03  48  ,ABS(clse-lg12)dc12
23:01:03  49  ,ABS(clse-lg18)dc18
23:01:03  50  ,ABS(clse-lg24)dc24
23:01:03  51  ,ABS(clse-lg72)dc72
23:01:03  52  ,(ld4-clse) ug4
23:01:03  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:01:03  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:01:03  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:01:03  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:01:03  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:01:03  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:01:03  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:01:03  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:01:03  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:01:03  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:01:03  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:01:03  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:01:03  65  ,0+TO_CHAR(ydate,'D')d
23:01:03  66  ,0+TO_CHAR(ydate,'W')w
23:01:03  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:01:03  68  FROM q11
23:01:03  69  -- I dont want any NULL values from the LAG() functions:
23:01:03  70  WHERE lg72 > 0
23:01:03  71  ORDER BY pair,ydate
23:01:03  72  /

Table created.

Elapsed: 00:00:01.64
23:01:05 SQL> 
23:01:05 SQL> -- rpt
23:01:05 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9254
	-1	   10704

Elapsed: 00:00:00.03
23:01:05 SQL> 
23:01:05 SQL> -- Calc gains and ntiles
23:01:05 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.19
23:01:05 SQL> CREATE TABLE q15 COMPRESS AS
23:01:05   2  SELECT
23:01:05   3  pair
23:01:05   4  ,ydate
23:01:05   5  ,prdate -- Should be unique
23:01:05   6  ,trend -- +1 or -1
23:01:05   7  ,dc12 -- next statement needs this
23:01:05   8  -- Use NTILE() to derive some attributes
23:01:05   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:01:05  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:01:05  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:01:05  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:01:05  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:01:05  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:01:05  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:01:05  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:01:05  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:01:05  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:01:05  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:01:05  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:01:05  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:01:05  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:01:05  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:01:05  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:01:05  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:01:05  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:01:05  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:01:05  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:01:05  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:01:05  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:01:05  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:01:05  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:01:05  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:01:05  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:01:05  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:01:05  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:01:05  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:01:05  38  ,hh    att28
23:01:05  39  ,d     att29
23:01:05  40  ,w     att30
23:01:05  41  ,mpm   att31
23:01:05  42  ,trend att32
23:01:05  43  ,ug4 g4
23:01:05  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:01:05  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:01:05  46  FROM q13
23:01:05  47  ORDER BY pair,ydate
23:01:05  48  /

Table created.

Elapsed: 00:00:04.01
23:01:09 SQL> 
23:01:09 SQL> -- rpt
23:01:09 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:01:09   2  GROUP BY pair,trend,gatt,gattn
23:01:09   3  ORDER BY pair,trend,gatt,gattn
23:01:09   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13710405	    5190    .023151117
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13443411	    5001    -.01458927
usd_jpy 	 1 up  nup .152379407	    4084    .184257426
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
23:01:09 SQL> 
23:01:09 SQL> -- rpt
23:01:09 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-16 22:55:00

Elapsed: 00:00:00.02
23:01:09 SQL> 
23:01:09 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.18
23:01:10 SQL> CREATE TABLE modsrc COMPRESS AS
23:01:10   2  SELECT
23:01:10   3  pair
23:01:10   4  ,ydate
23:01:10   5  ,prdate
23:01:10   6  ,trend
23:01:10   7  ,g4
23:01:10   8  ,gatt
23:01:10   9  ,gattn
23:01:10  10  ,dc12
23:01:10  11  FROM q15
23:01:10  12  /

Table created.

Elapsed: 00:00:00.08
23:01:10 SQL> 
23:01:10 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
23:01:10 SQL> 
23:01:10 SQL> -- rpt
23:01:10 SQL> 
23:01:10 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.35
23:01:10 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
23:01:10 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
23:01:10 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
23:01:10 SQL> 
23:01:10 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:01:10   2  GROUP BY pair,trend,gatt,gattn
23:01:10   3  ORDER BY pair,trend,gatt,gattn
23:01:10   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13710405	    5190    .023151117
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13443411	    5001    -.01458927
usd_jpy 	 1 up  nup .152379407	    4084    .184257426
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
23:01:10 SQL> 
23:01:10 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
23:01:10 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
23:01:10   2  SELECT
23:01:10   3  ydate
23:01:10   4  ,trend jpy_trend
23:01:10   5  ,g4    jpy_g4
23:01:10   6  ,gatt  jpy_gatt
23:01:10   7  ,gattn jpy_gattn
23:01:10   8  FROM modsrc
23:01:10   9  /

Table created.

Elapsed: 00:00:00.07
23:01:10 SQL> 
23:01:10 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
23:01:10 SQL> 
23:01:10 SQL> -- rpt
23:01:10 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:05:01 2010-12-16 21:35:00	 9252	   -1.07	1.5
	-1 2010-09-12 23:35:01 2010-12-16 22:55:00	10658	 -1.0775       1.99

Elapsed: 00:00:00.02
23:01:10 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:05:01 2010-12-16 21:35:00	       9254	  -1.07 	1.5
	-1 2010-09-12 23:35:01 2010-12-16 22:55:00	      10704	-1.0775        1.99

Elapsed: 00:00:00.02
23:01:11 SQL> 
23:01:11 SQL> -- I need a copy of q15 attributes
23:01:11 SQL> 
23:01:11 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.03
23:01:11 SQL> CREATE TABLE jpy_att COMPRESS AS
23:01:11   2  SELECT
23:01:11   3  ydate
23:01:11   4  ,att00 jpy_att00
23:01:11   5  ,att01 jpy_att01
23:01:11   6  ,att02 jpy_att02
23:01:11   7  ,att03 jpy_att03
23:01:11   8  ,att04 jpy_att04
23:01:11   9  ,att05 jpy_att05
23:01:11  10  ,att06 jpy_att06
23:01:11  11  ,att07 jpy_att07
23:01:11  12  ,att08 jpy_att08
23:01:11  13  ,att09 jpy_att09
23:01:11  14  ,att10 jpy_att10
23:01:11  15  ,att11 jpy_att11
23:01:11  16  ,att12 jpy_att12
23:01:11  17  ,att13 jpy_att13
23:01:11  18  ,att14 jpy_att14
23:01:11  19  ,att15 jpy_att15
23:01:11  20  ,att16 jpy_att16
23:01:11  21  ,att17 jpy_att17
23:01:11  22  ,att18 jpy_att18
23:01:11  23  ,att19 jpy_att19
23:01:11  24  ,att20 jpy_att20
23:01:11  25  ,att21 jpy_att21
23:01:11  26  ,att22 jpy_att22
23:01:11  27  ,att23 jpy_att23
23:01:11  28  ,att24 jpy_att24
23:01:11  29  ,att25 jpy_att25
23:01:11  30  ,att26 jpy_att26
23:01:11  31  ,att27 jpy_att27
23:01:11  32  ,att28 jpy_att28
23:01:11  33  ,att29 jpy_att29
23:01:11  34  ,att30 jpy_att30
23:01:11  35  ,att31 jpy_att31
23:01:11  36  ,att32 jpy_att32
23:01:11  37  FROM q15
23:01:11  38  /

Table created.

Elapsed: 00:00:00.14
23:01:11 SQL> 
23:01:11 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
23:01:11 SQL> 
23:01:11 SQL> -- rpt
23:01:11 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.00
23:01:11 SQL> 
23:01:11 SQL> --
23:01:11 SQL> -- cad10.sql
23:01:11 SQL> --
23:01:11 SQL> 
23:01:11 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:01:11 SQL> 
23:01:11 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.33
23:01:11 SQL> 
23:01:11 SQL> -- I created di5min here:
23:01:11 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:01:11 SQL> 
23:01:11 SQL> CREATE OR REPLACE VIEW q11 AS
23:01:11   2  SELECT
23:01:11   3  pair
23:01:11   4  ,ydate
23:01:11   5  ,prdate
23:01:11   6  ,rownum rnum -- acts as t in my time-series
23:01:11   7  ,clse
23:01:11   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:01:11   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:01:11  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:01:11  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:01:11  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:01:11  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:01:11  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:01:11  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:01:11  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:01:11  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:01:11  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:01:11  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:01:11  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:01:11  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:01:11  22  FROM di5min WHERE pair LIKE'%cad%'
23:01:11  23  ORDER BY ydate
23:01:11  24  /

View created.

Elapsed: 00:00:00.05
23:01:11 SQL> 
23:01:11 SQL> -- rpt
23:01:11 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20817

Elapsed: 00:00:00.36
23:01:12 SQL> 
23:01:12 SQL> -- Calc deltas and gains
23:01:12 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.19
23:01:12 SQL> 
23:01:12 SQL> CREATE TABLE q13 COMPRESS AS
23:01:12   2  SELECT
23:01:12   3  pair
23:01:12   4  ,ydate
23:01:12   5  ,prdate
23:01:12   6  ,rnum
23:01:12   7  ,lg4
23:01:12   8  ,lg8
23:01:12   9  ,lg12
23:01:12  10  ,ld4
23:01:12  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:01:12  12  -- step by 1
23:01:12  13  ,clse-lg1 d01
23:01:12  14  ,lg1-lg2	d12
23:01:12  15  ,lg2-lg3	d23
23:01:12  16  ,lg3-lg4	d34
23:01:12  17  ,lg4-lg5	d45
23:01:12  18  ,lg5-lg6	d56
23:01:12  19  ,lg6-lg7	d67
23:01:12  20  ,lg7-lg8	d78
23:01:12  21  ,lg8-lg9	d89
23:01:12  22  -- step by 2
23:01:12  23  ,clse-lg2 d02
23:01:12  24  ,lg2-lg4 d24
23:01:12  25  ,lg4-lg6 d46
23:01:12  26  ,lg6-lg8 d68
23:01:12  27  -- step by 3
23:01:12  28  ,clse-lg3 d03
23:01:12  29  ,lg3-lg6	d36
23:01:12  30  ,lg6-lg9	d69
23:01:12  31  ,lg9-lg12 d912
23:01:12  32  -- step by 4
23:01:12  33  ,clse-lg4 d04
23:01:12  34  ,lg4-lg8	d48
23:01:12  35  ,lg8-lg12 d812
23:01:12  36  ,lg6-lg12 d612
23:01:12  37  ,lg12-lg18 d1218
23:01:12  38  --
23:01:12  39  ,ABS(clse-lg1)dc1
23:01:12  40  ,ABS(clse-lg2)dc2
23:01:12  41  ,ABS(clse-lg3)dc3
23:01:12  42  ,ABS(clse-lg4)dc4
23:01:12  43  ,ABS(clse-lg5)dc5
23:01:12  44  ,ABS(clse-lg6)dc6
23:01:12  45  ,ABS(clse-lg7)dc7
23:01:12  46  ,ABS(clse-lg8)dc8
23:01:12  47  ,ABS(clse-lg9)dc9
23:01:12  48  ,ABS(clse-lg12)dc12
23:01:12  49  ,ABS(clse-lg18)dc18
23:01:12  50  ,ABS(clse-lg24)dc24
23:01:12  51  ,ABS(clse-lg72)dc72
23:01:12  52  ,(ld4-clse) ug4
23:01:12  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:01:12  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:01:12  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:01:12  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:01:12  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:01:12  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:01:12  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:01:12  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:01:12  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:01:12  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:01:12  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:01:12  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:01:12  65  ,0+TO_CHAR(ydate,'D')d
23:01:12  66  ,0+TO_CHAR(ydate,'W')w
23:01:12  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:01:12  68  FROM q11
23:01:12  69  -- I dont want any NULL values from the LAG() functions:
23:01:12  70  WHERE lg72 > 0
23:01:12  71  ORDER BY pair,ydate
23:01:12  72  /

Table created.

Elapsed: 00:00:01.66
23:01:14 SQL> 
23:01:14 SQL> -- rpt
23:01:14 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9010
	-1	   10943

Elapsed: 00:00:00.05
23:01:14 SQL> 
23:01:14 SQL> -- Calc gains and ntiles
23:01:14 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.18
23:01:14 SQL> CREATE TABLE q15 COMPRESS AS
23:01:14   2  SELECT
23:01:14   3  pair
23:01:14   4  ,ydate
23:01:14   5  ,prdate -- Should be unique
23:01:14   6  ,trend -- +1 or -1
23:01:14   7  ,dc12 -- next statement needs this
23:01:14   8  -- Use NTILE() to derive some attributes
23:01:14   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:01:14  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:01:14  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:01:14  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:01:14  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:01:14  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:01:14  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:01:14  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:01:14  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:01:14  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:01:14  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:01:14  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:01:14  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:01:14  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:01:14  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:01:14  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:01:14  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:01:14  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:01:14  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:01:14  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:01:14  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:01:14  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:01:14  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:01:14  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:01:14  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:01:14  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:01:14  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:01:14  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:01:14  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:01:14  38  ,hh    att28
23:01:14  39  ,d     att29
23:01:14  40  ,w     att30
23:01:14  41  ,mpm   att31
23:01:14  42  ,trend att32
23:01:14  43  ,ug4 g4
23:01:14  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:01:14  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:01:14  46  FROM q13
23:01:14  47  ORDER BY pair,ydate
23:01:14  48  /

Table created.

Elapsed: 00:00:04.01
23:01:18 SQL> 
23:01:18 SQL> -- rpt
23:01:18 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:01:18   2  GROUP BY pair,trend,gatt,gattn
23:01:18   3  ORDER BY pair,trend,gatt,gattn
23:01:18   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	-1			       0
usd_cad 	 1 nup nup -.00001441	    2086    -.06650083
usd_cad 	 1 nup up  -.00237505	    3822    .004769848
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
23:01:18 SQL> 
23:01:18 SQL> -- rpt
23:01:18 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-16 22:50:00

Elapsed: 00:00:00.01
23:01:18 SQL> 
23:01:18 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
23:01:18 SQL> CREATE TABLE modsrc COMPRESS AS
23:01:18   2  SELECT
23:01:18   3  pair
23:01:18   4  ,ydate
23:01:18   5  ,prdate
23:01:18   6  ,trend
23:01:18   7  ,g4
23:01:18   8  ,gatt
23:01:18   9  ,gattn
23:01:18  10  ,dc12
23:01:18  11  FROM q15
23:01:18  12  /

Table created.

Elapsed: 00:00:00.09
23:01:18 SQL> 
23:01:18 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
23:01:18 SQL> 
23:01:18 SQL> -- rpt
23:01:18 SQL> 
23:01:18 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20817

Elapsed: 00:00:00.35
23:01:19 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19953

Elapsed: 00:00:00.00
23:01:19 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19953

Elapsed: 00:00:00.01
23:01:19 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19953

Elapsed: 00:00:00.00
23:01:19 SQL> 
23:01:19 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:01:19   2  GROUP BY pair,trend,gatt,gattn
23:01:19   3  ORDER BY pair,trend,gatt,gattn
23:01:19   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	-1			       0
usd_cad 	 1 nup nup -.00001441	    2086    -.06650083
usd_cad 	 1 nup up  -.00237505	    3822    .004769848
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
23:01:19 SQL> 
23:01:19 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
23:01:19 SQL> CREATE TABLE cad_ms10 COMPRESS AS
23:01:19   2  SELECT
23:01:19   3  ydate
23:01:19   4  ,trend cad_trend
23:01:19   5  ,g4    cad_g4
23:01:19   6  ,gatt  cad_gatt
23:01:19   7  ,gattn cad_gattn
23:01:19   8  FROM modsrc
23:01:19   9  /

Table created.

Elapsed: 00:00:00.07
23:01:19 SQL> 
23:01:19 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
23:01:19 SQL> 
23:01:19 SQL> -- rpt
23:01:19 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:05:01 2010-12-16 22:40:00	 8968	  -.0089      .0151
	-1 2010-09-12 23:30:01 2010-12-16 22:50:00	10937	  -.0107      .0147

Elapsed: 00:00:00.02
23:01:19 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:05:01 2010-12-16 22:40:00	       9010	 -.0089       .0151
	-1 2010-09-12 23:30:01 2010-12-16 22:50:00	      10943	 -.0107       .0147

Elapsed: 00:00:00.01
23:01:19 SQL> 
23:01:19 SQL> -- I need a copy of q15 attributes
23:01:19 SQL> 
23:01:19 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.04
23:01:19 SQL> CREATE TABLE cad_att COMPRESS AS
23:01:19   2  SELECT
23:01:19   3  ydate
23:01:19   4  ,att00 cad_att00
23:01:19   5  ,att01 cad_att01
23:01:19   6  ,att02 cad_att02
23:01:19   7  ,att03 cad_att03
23:01:19   8  ,att04 cad_att04
23:01:19   9  ,att05 cad_att05
23:01:19  10  ,att06 cad_att06
23:01:19  11  ,att07 cad_att07
23:01:19  12  ,att08 cad_att08
23:01:19  13  ,att09 cad_att09
23:01:19  14  ,att10 cad_att10
23:01:19  15  ,att11 cad_att11
23:01:19  16  ,att12 cad_att12
23:01:19  17  ,att13 cad_att13
23:01:19  18  ,att14 cad_att14
23:01:19  19  ,att15 cad_att15
23:01:19  20  ,att16 cad_att16
23:01:19  21  ,att17 cad_att17
23:01:19  22  ,att18 cad_att18
23:01:19  23  ,att19 cad_att19
23:01:19  24  ,att20 cad_att20
23:01:19  25  ,att21 cad_att21
23:01:19  26  ,att22 cad_att22
23:01:19  27  ,att23 cad_att23
23:01:19  28  ,att24 cad_att24
23:01:19  29  ,att25 cad_att25
23:01:19  30  ,att26 cad_att26
23:01:19  31  ,att27 cad_att27
23:01:19  32  ,att28 cad_att28
23:01:19  33  ,att29 cad_att29
23:01:19  34  ,att30 cad_att30
23:01:19  35  ,att31 cad_att31
23:01:19  36  ,att32 cad_att32
23:01:19  37  FROM q15
23:01:19  38  /

Table created.

Elapsed: 00:00:00.12
23:01:19 SQL> 
23:01:19 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
23:01:20 SQL> 
23:01:20 SQL> -- rpt
23:01:20 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19953

Elapsed: 00:00:00.01
23:01:20 SQL> 
23:01:20 SQL> --
23:01:20 SQL> -- chf10.sql
23:01:20 SQL> --
23:01:20 SQL> 
23:01:20 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:01:20 SQL> 
23:01:20 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.32
23:01:20 SQL> 
23:01:20 SQL> -- I created di5min here:
23:01:20 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
23:01:20 SQL> 
23:01:20 SQL> CREATE OR REPLACE VIEW q11 AS
23:01:20   2  SELECT
23:01:20   3  pair
23:01:20   4  ,ydate
23:01:20   5  ,prdate
23:01:20   6  ,rownum rnum -- acts as t in my time-series
23:01:20   7  ,clse
23:01:20   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
23:01:20   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
23:01:20  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
23:01:20  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
23:01:20  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
23:01:20  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
23:01:20  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
23:01:20  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
23:01:20  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
23:01:20  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
23:01:20  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
23:01:20  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
23:01:20  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
23:01:20  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
23:01:20  22  FROM di5min WHERE pair LIKE'%chf%'
23:01:20  23  ORDER BY ydate
23:01:20  24  /

View created.

Elapsed: 00:00:00.04
23:01:20 SQL> 
23:01:20 SQL> -- rpt
23:01:20 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20821

Elapsed: 00:00:00.37
23:01:20 SQL> 
23:01:20 SQL> -- Calc deltas and gains
23:01:20 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.23
23:01:21 SQL> 
23:01:21 SQL> CREATE TABLE q13 COMPRESS AS
23:01:21   2  SELECT
23:01:21   3  pair
23:01:21   4  ,ydate
23:01:21   5  ,prdate
23:01:21   6  ,rnum
23:01:21   7  ,lg4
23:01:21   8  ,lg8
23:01:21   9  ,lg12
23:01:21  10  ,ld4
23:01:21  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
23:01:21  12  -- step by 1
23:01:21  13  ,clse-lg1 d01
23:01:21  14  ,lg1-lg2	d12
23:01:21  15  ,lg2-lg3	d23
23:01:21  16  ,lg3-lg4	d34
23:01:21  17  ,lg4-lg5	d45
23:01:21  18  ,lg5-lg6	d56
23:01:21  19  ,lg6-lg7	d67
23:01:21  20  ,lg7-lg8	d78
23:01:21  21  ,lg8-lg9	d89
23:01:21  22  -- step by 2
23:01:21  23  ,clse-lg2 d02
23:01:21  24  ,lg2-lg4 d24
23:01:21  25  ,lg4-lg6 d46
23:01:21  26  ,lg6-lg8 d68
23:01:21  27  -- step by 3
23:01:21  28  ,clse-lg3 d03
23:01:21  29  ,lg3-lg6	d36
23:01:21  30  ,lg6-lg9	d69
23:01:21  31  ,lg9-lg12 d912
23:01:21  32  -- step by 4
23:01:21  33  ,clse-lg4 d04
23:01:21  34  ,lg4-lg8	d48
23:01:21  35  ,lg8-lg12 d812
23:01:21  36  ,lg6-lg12 d612
23:01:21  37  ,lg12-lg18 d1218
23:01:21  38  --
23:01:21  39  ,ABS(clse-lg1)dc1
23:01:21  40  ,ABS(clse-lg2)dc2
23:01:21  41  ,ABS(clse-lg3)dc3
23:01:21  42  ,ABS(clse-lg4)dc4
23:01:21  43  ,ABS(clse-lg5)dc5
23:01:21  44  ,ABS(clse-lg6)dc6
23:01:21  45  ,ABS(clse-lg7)dc7
23:01:21  46  ,ABS(clse-lg8)dc8
23:01:21  47  ,ABS(clse-lg9)dc9
23:01:21  48  ,ABS(clse-lg12)dc12
23:01:21  49  ,ABS(clse-lg18)dc18
23:01:21  50  ,ABS(clse-lg24)dc24
23:01:21  51  ,ABS(clse-lg72)dc72
23:01:21  52  ,(ld4-clse) ug4
23:01:21  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
23:01:21  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
23:01:21  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
23:01:21  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
23:01:21  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:01:21  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
23:01:21  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:01:21  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
23:01:21  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:01:21  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:01:21  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
23:01:21  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:01:21  65  ,0+TO_CHAR(ydate,'D')d
23:01:21  66  ,0+TO_CHAR(ydate,'W')w
23:01:21  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:01:21  68  FROM q11
23:01:21  69  -- I dont want any NULL values from the LAG() functions:
23:01:21  70  WHERE lg72 > 0
23:01:21  71  ORDER BY pair,ydate
23:01:21  72  /

Table created.

Elapsed: 00:00:01.66
23:01:22 SQL> 
23:01:22 SQL> -- rpt
23:01:22 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9320
	-1	   10637

Elapsed: 00:00:00.03
23:01:22 SQL> 
23:01:22 SQL> -- Calc gains and ntiles
23:01:22 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
23:01:22 SQL> CREATE TABLE q15 COMPRESS AS
23:01:22   2  SELECT
23:01:22   3  pair
23:01:22   4  ,ydate
23:01:22   5  ,prdate -- Should be unique
23:01:22   6  ,trend -- +1 or -1
23:01:22   7  ,dc12 -- next statement needs this
23:01:22   8  -- Use NTILE() to derive some attributes
23:01:22   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
23:01:22  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
23:01:22  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
23:01:22  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
23:01:22  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
23:01:22  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
23:01:22  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
23:01:22  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
23:01:22  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
23:01:22  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
23:01:22  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
23:01:22  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
23:01:22  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
23:01:22  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
23:01:22  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
23:01:22  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
23:01:22  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
23:01:22  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
23:01:22  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
23:01:22  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
23:01:22  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
23:01:22  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
23:01:22  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
23:01:22  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
23:01:22  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
23:01:22  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
23:01:22  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
23:01:22  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
23:01:22  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:01:22  38  ,hh    att28
23:01:22  39  ,d     att29
23:01:22  40  ,w     att30
23:01:22  41  ,mpm   att31
23:01:22  42  ,trend att32
23:01:22  43  ,ug4 g4
23:01:22  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
23:01:22  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
23:01:22  46  FROM q13
23:01:22  47  ORDER BY pair,ydate
23:01:22  48  /

Table created.

Elapsed: 00:00:03.98
23:01:26 SQL> 
23:01:26 SQL> -- rpt
23:01:26 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
23:01:26   2  GROUP BY pair,trend,gatt,gattn
23:01:26   3  ORDER BY pair,trend,gatt,gattn
23:01:26   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032146	    2645    .042491123
usd_chf 	-1 nup up  -.00292651	    3897    .060228732
usd_chf 	-1 up  nup .002646511	    4048    -.12069668
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00254116	    3861    .112061565
usd_chf 	 1 up  nup .002433841	    3232     -.1606913
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
23:01:27 SQL> 
23:01:27 SQL> -- rpt
23:01:27 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-16 22:55:00

Elapsed: 00:00:00.01
23:01:27 SQL> 
23:01:27 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.14
23:01:27 SQL> CREATE TABLE modsrc COMPRESS AS
23:01:27   2  SELECT
23:01:27   3  pair
23:01:27   4  ,ydate
23:01:27   5  ,prdate
23:01:27   6  ,trend
23:01:27   7  ,g4
23:01:27   8  ,gatt
23:01:27   9  ,gattn
23:01:27  10  ,dc12
23:01:27  11  FROM q15
23:01:27  12  /

Table created.

Elapsed: 00:00:00.09
23:01:27 SQL> 
23:01:27 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
23:01:27 SQL> 
23:01:27 SQL> -- rpt
23:01:27 SQL> 
23:01:27 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.35
23:01:27 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
23:01:27 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
23:01:27 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
23:01:27 SQL> 
23:01:27 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
23:01:27   2  GROUP BY pair,trend,gatt,gattn
23:01:27   3  ORDER BY pair,trend,gatt,gattn
23:01:27   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032146	    2645    .042491123
usd_chf 	-1 nup up  -.00292651	    3897    .060228732
usd_chf 	-1 up  nup .002646511	    4048    -.12069668
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00254116	    3861    .112061565
usd_chf 	 1 up  nup .002433841	    3232     -.1606913
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
23:01:27 SQL> 
23:01:27 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.11
23:01:27 SQL> CREATE TABLE chf_ms10 COMPRESS AS
23:01:27   2  SELECT
23:01:27   3  ydate
23:01:27   4  ,trend chf_trend
23:01:27   5  ,g4    chf_g4
23:01:27   6  ,gatt  chf_gatt
23:01:27   7  ,gattn chf_gattn
23:01:27   8  FROM modsrc
23:01:27   9  /

Table created.

Elapsed: 00:00:00.07
23:01:28 SQL> 
23:01:28 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
23:01:28 SQL> 
23:01:28 SQL> -- rpt
23:01:28 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	 9319	  -.0176     .01365
	-1 2010-09-12 22:05:01 2010-12-16 22:55:00	10590	  -.0166      .0149

Elapsed: 00:00:00.03
23:01:28 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	       9320	 -.0176      .01365
	-1 2010-09-12 22:05:01 2010-12-16 22:55:00	      10637	 -.0166       .0149

Elapsed: 00:00:00.01
23:01:28 SQL> 
23:01:28 SQL> -- I need a copy of q15 attributes
23:01:28 SQL> 
23:01:28 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.03
23:01:28 SQL> CREATE TABLE chf_att COMPRESS AS
23:01:28   2  SELECT
23:01:28   3  ydate
23:01:28   4  ,att00 chf_att00
23:01:28   5  ,att01 chf_att01
23:01:28   6  ,att02 chf_att02
23:01:28   7  ,att03 chf_att03
23:01:28   8  ,att04 chf_att04
23:01:28   9  ,att05 chf_att05
23:01:28  10  ,att06 chf_att06
23:01:28  11  ,att07 chf_att07
23:01:28  12  ,att08 chf_att08
23:01:28  13  ,att09 chf_att09
23:01:28  14  ,att10 chf_att10
23:01:28  15  ,att11 chf_att11
23:01:28  16  ,att12 chf_att12
23:01:28  17  ,att13 chf_att13
23:01:28  18  ,att14 chf_att14
23:01:28  19  ,att15 chf_att15
23:01:28  20  ,att16 chf_att16
23:01:28  21  ,att17 chf_att17
23:01:28  22  ,att18 chf_att18
23:01:28  23  ,att19 chf_att19
23:01:28  24  ,att20 chf_att20
23:01:28  25  ,att21 chf_att21
23:01:28  26  ,att22 chf_att22
23:01:28  27  ,att23 chf_att23
23:01:28  28  ,att24 chf_att24
23:01:28  29  ,att25 chf_att25
23:01:28  30  ,att26 chf_att26
23:01:28  31  ,att27 chf_att27
23:01:28  32  ,att28 chf_att28
23:01:28  33  ,att29 chf_att29
23:01:28  34  ,att30 chf_att30
23:01:28  35  ,att31 chf_att31
23:01:28  36  ,att32 chf_att32
23:01:28  37  FROM q15
23:01:28  38  /

Table created.

Elapsed: 00:00:00.13
23:01:28 SQL> 
23:01:28 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.46
23:01:28 SQL> 
23:01:28 SQL> -- rpt
23:01:28 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.01
23:01:28 SQL> 
23:01:28 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
