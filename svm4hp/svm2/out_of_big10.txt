
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 16 19:53:45 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

19:53:45 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
19:53:45 SQL> 19:53:45 SQL> --
19:53:45 SQL> -- eur10.sql
19:53:45 SQL> --
19:53:45 SQL> 
19:53:45 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:53:45 SQL> 
19:53:45 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.01
19:53:45 SQL> 
19:53:45 SQL> -- I created di5min here:
19:53:45 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:53:45 SQL> 
19:53:45 SQL> CREATE OR REPLACE VIEW q11 AS
19:53:45   2  SELECT
19:53:45   3  pair
19:53:45   4  ,ydate
19:53:45   5  ,prdate
19:53:45   6  ,rownum rnum -- acts as t in my time-series
19:53:45   7  ,clse
19:53:45   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:53:45   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:53:45  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:53:45  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:53:45  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:53:45  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:53:45  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:53:45  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:53:45  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:53:45  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:53:45  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:53:45  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:53:45  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:53:45  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:53:45  22  FROM di5min WHERE pair LIKE'%eur%'
19:53:45  23  ORDER BY ydate
19:53:45  24  /

View created.

Elapsed: 00:00:00.05
19:53:45 SQL> 
19:53:45 SQL> -- rpt
19:53:45 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20825

Elapsed: 00:00:00.35
19:53:45 SQL> 
19:53:45 SQL> -- Calc deltas and gains
19:53:45 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.06
19:53:46 SQL> 
19:53:46 SQL> CREATE TABLE q13 COMPRESS AS
19:53:46   2  SELECT
19:53:46   3  pair
19:53:46   4  ,ydate
19:53:46   5  ,prdate
19:53:46   6  ,rnum
19:53:46   7  ,lg4
19:53:46   8  ,lg8
19:53:46   9  ,lg12
19:53:46  10  ,ld4
19:53:46  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:53:46  12  -- step by 1
19:53:46  13  ,clse-lg1 d01
19:53:46  14  ,lg1-lg2	d12
19:53:46  15  ,lg2-lg3	d23
19:53:46  16  ,lg3-lg4	d34
19:53:46  17  ,lg4-lg5	d45
19:53:46  18  ,lg5-lg6	d56
19:53:46  19  ,lg6-lg7	d67
19:53:46  20  ,lg7-lg8	d78
19:53:46  21  ,lg8-lg9	d89
19:53:46  22  -- step by 2
19:53:46  23  ,clse-lg2 d02
19:53:46  24  ,lg2-lg4 d24
19:53:46  25  ,lg4-lg6 d46
19:53:46  26  ,lg6-lg8 d68
19:53:46  27  -- step by 3
19:53:46  28  ,clse-lg3 d03
19:53:46  29  ,lg3-lg6	d36
19:53:46  30  ,lg6-lg9	d69
19:53:46  31  ,lg9-lg12 d912
19:53:46  32  -- step by 4
19:53:46  33  ,clse-lg4 d04
19:53:46  34  ,lg4-lg8	d48
19:53:46  35  ,lg8-lg12 d812
19:53:46  36  ,lg6-lg12 d612
19:53:46  37  ,lg12-lg18 d1218
19:53:46  38  --
19:53:46  39  ,ABS(clse-lg1)dc1
19:53:46  40  ,ABS(clse-lg2)dc2
19:53:46  41  ,ABS(clse-lg3)dc3
19:53:46  42  ,ABS(clse-lg4)dc4
19:53:46  43  ,ABS(clse-lg5)dc5
19:53:46  44  ,ABS(clse-lg6)dc6
19:53:46  45  ,ABS(clse-lg7)dc7
19:53:46  46  ,ABS(clse-lg8)dc8
19:53:46  47  ,ABS(clse-lg9)dc9
19:53:46  48  ,ABS(clse-lg12)dc12
19:53:46  49  ,ABS(clse-lg18)dc18
19:53:46  50  ,ABS(clse-lg24)dc24
19:53:46  51  ,ABS(clse-lg72)dc72
19:53:46  52  ,(ld4-clse) ug4
19:53:46  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:53:46  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:53:46  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:53:46  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:53:46  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:53:46  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:53:46  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:53:46  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:53:46  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:53:46  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:53:46  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:53:46  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:53:46  65  ,0+TO_CHAR(ydate,'D')d
19:53:46  66  ,0+TO_CHAR(ydate,'W')w
19:53:46  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:53:46  68  FROM q11
19:53:46  69  -- I dont want any NULL values from the LAG() functions:
19:53:46  70  WHERE lg72 > 0
19:53:46  71  ORDER BY pair,ydate
19:53:46  72  /

Table created.

Elapsed: 00:00:01.94
19:53:47 SQL> 
19:53:47 SQL> -- rpt
19:53:47 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10272
	-1	    9689

Elapsed: 00:00:00.09
19:53:48 SQL> 
19:53:48 SQL> -- Calc gains and ntiles
19:53:48 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.22
19:53:48 SQL> CREATE TABLE q15 COMPRESS AS
19:53:48   2  SELECT
19:53:48   3  pair
19:53:48   4  ,ydate
19:53:48   5  ,prdate -- Should be unique
19:53:48   6  ,trend -- +1 or -1
19:53:48   7  ,dc12 -- next statement needs this
19:53:48   8  -- Use NTILE() to derive some attributes
19:53:48   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:53:48  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:53:48  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:53:48  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:53:48  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:53:48  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:53:48  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:53:48  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:53:48  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:53:48  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:53:48  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:53:48  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:53:48  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:53:48  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:53:48  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:53:48  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:53:48  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:53:48  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:53:48  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:53:48  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:53:48  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:53:48  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:53:48  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:53:48  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:53:48  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:53:48  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:53:48  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:53:48  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:53:48  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:53:48  38  ,hh    att28
19:53:48  39  ,d     att29
19:53:48  40  ,w     att30
19:53:48  41  ,mpm   att31
19:53:48  42  ,trend att32
19:53:48  43  ,ug4 g4
19:53:48  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:53:48  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:53:48  46  FROM q13
19:53:48  47  ORDER BY pair,ydate
19:53:48  48  /

Table created.

Elapsed: 00:00:04.02
19:53:52 SQL> 
19:53:52 SQL> -- rpt
19:53:52 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:53:52   2  GROUP BY pair,trend,gatt,gattn
19:53:52   3  ORDER BY pair,trend,gatt,gattn
19:53:52   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003676162	    4174     -.2126103
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003722517	    4320    -.14656632
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
19:53:52 SQL> 
19:53:52 SQL> -- rpt
19:53:52 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-16 19:45:00

Elapsed: 00:00:00.01
19:53:52 SQL> 
19:53:52 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.03
19:53:52 SQL> CREATE TABLE modsrc COMPRESS AS
19:53:52   2  SELECT
19:53:52   3  pair
19:53:52   4  ,ydate
19:53:52   5  ,prdate
19:53:52   6  ,trend
19:53:52   7  ,g4
19:53:52   8  ,gatt
19:53:52   9  ,gattn
19:53:52  10  ,dc12
19:53:52  11  FROM q15
19:53:52  12  /

Table created.

Elapsed: 00:00:00.08
19:53:52 SQL> 
19:53:52 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.23
19:53:52 SQL> 
19:53:52 SQL> -- rpt
19:53:52 SQL> 
19:53:52 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20825

Elapsed: 00:00:00.35
19:53:53 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.01
19:53:53 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.01
19:53:53 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
19:53:53 SQL> 
19:53:53 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:53:53   2  GROUP BY pair,trend,gatt,gattn
19:53:53   3  ORDER BY pair,trend,gatt,gattn
19:53:53   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003676162	    4174     -.2126103
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003722517	    4320    -.14656632
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
19:53:53 SQL> 
19:53:53 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
19:53:53 SQL> CREATE TABLE eur_ms10 COMPRESS AS
19:53:53   2  SELECT
19:53:53   3  ydate
19:53:53   4  ,trend eur_trend
19:53:53   5  ,g4    eur_g4
19:53:53   6  ,gatt  eur_gatt
19:53:53   7  ,gattn eur_gattn
19:53:53   8  FROM modsrc
19:53:53   9  /

Table created.

Elapsed: 00:00:00.06
19:53:53 SQL> 
19:53:53 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
19:53:53 SQL> 
19:53:53 SQL> -- rpt
19:53:53 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:15:01 2010-12-16 18:05:00	10264	  -.0153      .0165
	-1 2010-09-10 19:55:01 2010-12-16 19:45:00	 9649	  -.0164      .0167

Elapsed: 00:00:00.02
19:53:53 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:15:01 2010-12-16 18:05:00	      10272	 -.0153       .0165
	-1 2010-09-10 19:55:01 2010-12-16 19:45:00	       9689	 -.0164       .0167

Elapsed: 00:00:00.01
19:53:53 SQL> 
19:53:53 SQL> -- I need a copy of q15 attributes
19:53:53 SQL> 
19:53:53 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.09
19:53:53 SQL> CREATE TABLE eur_att COMPRESS AS
19:53:53   2  SELECT
19:53:53   3  ydate
19:53:53   4  ,att00 eur_att00
19:53:53   5  ,att01 eur_att01
19:53:53   6  ,att02 eur_att02
19:53:53   7  ,att03 eur_att03
19:53:53   8  ,att04 eur_att04
19:53:53   9  ,att05 eur_att05
19:53:53  10  ,att06 eur_att06
19:53:53  11  ,att07 eur_att07
19:53:53  12  ,att08 eur_att08
19:53:53  13  ,att09 eur_att09
19:53:53  14  ,att10 eur_att10
19:53:53  15  ,att11 eur_att11
19:53:53  16  ,att12 eur_att12
19:53:53  17  ,att13 eur_att13
19:53:53  18  ,att14 eur_att14
19:53:53  19  ,att15 eur_att15
19:53:53  20  ,att16 eur_att16
19:53:53  21  ,att17 eur_att17
19:53:53  22  ,att18 eur_att18
19:53:53  23  ,att19 eur_att19
19:53:53  24  ,att20 eur_att20
19:53:53  25  ,att21 eur_att21
19:53:53  26  ,att22 eur_att22
19:53:53  27  ,att23 eur_att23
19:53:53  28  ,att24 eur_att24
19:53:53  29  ,att25 eur_att25
19:53:53  30  ,att26 eur_att26
19:53:53  31  ,att27 eur_att27
19:53:53  32  ,att28 eur_att28
19:53:53  33  ,att29 eur_att29
19:53:53  34  ,att30 eur_att30
19:53:53  35  ,att31 eur_att31
19:53:53  36  ,att32 eur_att32
19:53:53  37  FROM q15
19:53:53  38  /

Table created.

Elapsed: 00:00:00.13
19:53:53 SQL> 
19:53:53 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
19:53:54 SQL> 
19:53:54 SQL> -- rpt
19:53:54 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19961

Elapsed: 00:00:00.01
19:53:54 SQL> 
19:53:54 SQL> --
19:53:54 SQL> -- aud10.sql
19:53:54 SQL> --
19:53:54 SQL> 
19:53:54 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:53:54 SQL> 
19:53:54 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.33
19:53:54 SQL> 
19:53:54 SQL> -- I created di5min here:
19:53:54 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:53:54 SQL> 
19:53:54 SQL> CREATE OR REPLACE VIEW q11 AS
19:53:54   2  SELECT
19:53:54   3  pair
19:53:54   4  ,ydate
19:53:54   5  ,prdate
19:53:54   6  ,rownum rnum -- acts as t in my time-series
19:53:54   7  ,clse
19:53:54   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:53:54   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:53:54  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:53:54  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:53:54  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:53:54  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:53:54  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:53:54  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:53:54  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:53:54  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:53:54  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:53:54  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:53:54  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:53:54  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:53:54  22  FROM di5min WHERE pair LIKE'%aud%'
19:53:54  23  ORDER BY ydate
19:53:54  24  /

View created.

Elapsed: 00:00:00.05
19:53:54 SQL> 
19:53:54 SQL> -- rpt
19:53:54 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20822

Elapsed: 00:00:00.36
19:53:54 SQL> 
19:53:54 SQL> -- Calc deltas and gains
19:53:54 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.18
19:53:55 SQL> 
19:53:55 SQL> CREATE TABLE q13 COMPRESS AS
19:53:55   2  SELECT
19:53:55   3  pair
19:53:55   4  ,ydate
19:53:55   5  ,prdate
19:53:55   6  ,rnum
19:53:55   7  ,lg4
19:53:55   8  ,lg8
19:53:55   9  ,lg12
19:53:55  10  ,ld4
19:53:55  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:53:55  12  -- step by 1
19:53:55  13  ,clse-lg1 d01
19:53:55  14  ,lg1-lg2	d12
19:53:55  15  ,lg2-lg3	d23
19:53:55  16  ,lg3-lg4	d34
19:53:55  17  ,lg4-lg5	d45
19:53:55  18  ,lg5-lg6	d56
19:53:55  19  ,lg6-lg7	d67
19:53:55  20  ,lg7-lg8	d78
19:53:55  21  ,lg8-lg9	d89
19:53:55  22  -- step by 2
19:53:55  23  ,clse-lg2 d02
19:53:55  24  ,lg2-lg4 d24
19:53:55  25  ,lg4-lg6 d46
19:53:55  26  ,lg6-lg8 d68
19:53:55  27  -- step by 3
19:53:55  28  ,clse-lg3 d03
19:53:55  29  ,lg3-lg6	d36
19:53:55  30  ,lg6-lg9	d69
19:53:55  31  ,lg9-lg12 d912
19:53:55  32  -- step by 4
19:53:55  33  ,clse-lg4 d04
19:53:55  34  ,lg4-lg8	d48
19:53:55  35  ,lg8-lg12 d812
19:53:55  36  ,lg6-lg12 d612
19:53:55  37  ,lg12-lg18 d1218
19:53:55  38  --
19:53:55  39  ,ABS(clse-lg1)dc1
19:53:55  40  ,ABS(clse-lg2)dc2
19:53:55  41  ,ABS(clse-lg3)dc3
19:53:55  42  ,ABS(clse-lg4)dc4
19:53:55  43  ,ABS(clse-lg5)dc5
19:53:55  44  ,ABS(clse-lg6)dc6
19:53:55  45  ,ABS(clse-lg7)dc7
19:53:55  46  ,ABS(clse-lg8)dc8
19:53:55  47  ,ABS(clse-lg9)dc9
19:53:55  48  ,ABS(clse-lg12)dc12
19:53:55  49  ,ABS(clse-lg18)dc18
19:53:55  50  ,ABS(clse-lg24)dc24
19:53:55  51  ,ABS(clse-lg72)dc72
19:53:55  52  ,(ld4-clse) ug4
19:53:55  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:53:55  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:53:55  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:53:55  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:53:55  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:53:55  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:53:55  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:53:55  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:53:55  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:53:55  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:53:55  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:53:55  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:53:55  65  ,0+TO_CHAR(ydate,'D')d
19:53:55  66  ,0+TO_CHAR(ydate,'W')w
19:53:55  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:53:55  68  FROM q11
19:53:55  69  -- I dont want any NULL values from the LAG() functions:
19:53:55  70  WHERE lg72 > 0
19:53:55  71  ORDER BY pair,ydate
19:53:55  72  /

Table created.

Elapsed: 00:00:01.69
19:53:56 SQL> 
19:53:56 SQL> -- rpt
19:53:56 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10467
	-1	    9491

Elapsed: 00:00:00.08
19:53:56 SQL> 
19:53:56 SQL> -- Calc gains and ntiles
19:53:56 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.18
19:53:56 SQL> CREATE TABLE q15 COMPRESS AS
19:53:56   2  SELECT
19:53:56   3  pair
19:53:56   4  ,ydate
19:53:56   5  ,prdate -- Should be unique
19:53:56   6  ,trend -- +1 or -1
19:53:56   7  ,dc12 -- next statement needs this
19:53:56   8  -- Use NTILE() to derive some attributes
19:53:56   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:53:56  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:53:56  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:53:56  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:53:56  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:53:56  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:53:56  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:53:56  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:53:56  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:53:56  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:53:56  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:53:56  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:53:56  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:53:56  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:53:56  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:53:56  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:53:56  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:53:56  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:53:56  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:53:56  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:53:56  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:53:56  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:53:56  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:53:56  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:53:56  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:53:56  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:53:56  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:53:56  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:53:56  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:53:56  38  ,hh    att28
19:53:56  39  ,d     att29
19:53:56  40  ,w     att30
19:53:56  41  ,mpm   att31
19:53:56  42  ,trend att32
19:53:56  43  ,ug4 g4
19:53:56  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:53:56  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:53:56  46  FROM q13
19:53:56  47  ORDER BY pair,ydate
19:53:56  48  /

Table created.

Elapsed: 00:00:04.03
19:54:00 SQL> 
19:54:00 SQL> -- rpt
19:54:00 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:54:00   2  GROUP BY pair,trend,gatt,gattn
19:54:00   3  ORDER BY pair,trend,gatt,gattn
19:54:00   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002980461	    4335    .024943809
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.9795E-06	    1955    .022883713
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002943246	    4431    -.18087392
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
19:54:01 SQL> 
19:54:01 SQL> -- rpt
19:54:01 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-16 19:45:00

Elapsed: 00:00:00.01
19:54:01 SQL> 
19:54:01 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
19:54:01 SQL> CREATE TABLE modsrc COMPRESS AS
19:54:01   2  SELECT
19:54:01   3  pair
19:54:01   4  ,ydate
19:54:01   5  ,prdate
19:54:01   6  ,trend
19:54:01   7  ,g4
19:54:01   8  ,gatt
19:54:01   9  ,gattn
19:54:01  10  ,dc12
19:54:01  11  FROM q15
19:54:01  12  /

Table created.

Elapsed: 00:00:00.09
19:54:01 SQL> 
19:54:01 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.24
19:54:01 SQL> 
19:54:01 SQL> -- rpt
19:54:01 SQL> 
19:54:01 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.36
19:54:01 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
19:54:01 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
19:54:01 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
19:54:01 SQL> 
19:54:01 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:54:01   2  GROUP BY pair,trend,gatt,gattn
19:54:01   3  ORDER BY pair,trend,gatt,gattn
19:54:01   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002980461	    4335    .024943809
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.9795E-06	    1955    .022883713
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002943246	    4431    -.18087392
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
19:54:01 SQL> 
19:54:01 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
19:54:01 SQL> CREATE TABLE aud_ms10 COMPRESS AS
19:54:01   2  SELECT
19:54:01   3  ydate
19:54:01   4  ,trend aud_trend
19:54:01   5  ,g4    aud_g4
19:54:01   6  ,gatt  aud_gatt
19:54:01   7  ,gattn aud_gattn
19:54:01   8  FROM modsrc
19:54:01   9  /

Table created.

Elapsed: 00:00:00.06
19:54:02 SQL> 
19:54:02 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
19:54:02 SQL> 
19:54:02 SQL> -- rpt
19:54:02 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 19:55:01 2010-12-16 19:20:00	10443	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-16 19:45:00	 9467	   -.017      .0131

Elapsed: 00:00:00.02
19:54:02 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 19:55:01 2010-12-16 19:20:00	      10467	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-16 19:45:00	       9491	  -.017       .0131

Elapsed: 00:00:00.02
19:54:02 SQL> 
19:54:02 SQL> -- I need a copy of q15 attributes
19:54:02 SQL> 
19:54:02 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.04
19:54:02 SQL> CREATE TABLE aud_att COMPRESS AS
19:54:02   2  SELECT
19:54:02   3  ydate
19:54:02   4  ,att00 aud_att00
19:54:02   5  ,att01 aud_att01
19:54:02   6  ,att02 aud_att02
19:54:02   7  ,att03 aud_att03
19:54:02   8  ,att04 aud_att04
19:54:02   9  ,att05 aud_att05
19:54:02  10  ,att06 aud_att06
19:54:02  11  ,att07 aud_att07
19:54:02  12  ,att08 aud_att08
19:54:02  13  ,att09 aud_att09
19:54:02  14  ,att10 aud_att10
19:54:02  15  ,att11 aud_att11
19:54:02  16  ,att12 aud_att12
19:54:02  17  ,att13 aud_att13
19:54:02  18  ,att14 aud_att14
19:54:02  19  ,att15 aud_att15
19:54:02  20  ,att16 aud_att16
19:54:02  21  ,att17 aud_att17
19:54:02  22  ,att18 aud_att18
19:54:02  23  ,att19 aud_att19
19:54:02  24  ,att20 aud_att20
19:54:02  25  ,att21 aud_att21
19:54:02  26  ,att22 aud_att22
19:54:02  27  ,att23 aud_att23
19:54:02  28  ,att24 aud_att24
19:54:02  29  ,att25 aud_att25
19:54:02  30  ,att26 aud_att26
19:54:02  31  ,att27 aud_att27
19:54:02  32  ,att28 aud_att28
19:54:02  33  ,att29 aud_att29
19:54:02  34  ,att30 aud_att30
19:54:02  35  ,att31 aud_att31
19:54:02  36  ,att32 aud_att32
19:54:02  37  FROM q15
19:54:02  38  /

Table created.

Elapsed: 00:00:00.14
19:54:02 SQL> 
19:54:02 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
19:54:02 SQL> 
19:54:02 SQL> -- rpt
19:54:02 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.00
19:54:02 SQL> 
19:54:02 SQL> --
19:54:02 SQL> -- gbp10.sql
19:54:02 SQL> --
19:54:02 SQL> 
19:54:02 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:54:02 SQL> 
19:54:02 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
19:54:03 SQL> 
19:54:03 SQL> -- I created di5min here:
19:54:03 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:54:03 SQL> 
19:54:03 SQL> CREATE OR REPLACE VIEW q11 AS
19:54:03   2  SELECT
19:54:03   3  pair
19:54:03   4  ,ydate
19:54:03   5  ,prdate
19:54:03   6  ,rownum rnum -- acts as t in my time-series
19:54:03   7  ,clse
19:54:03   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:54:03   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:54:03  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:54:03  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:54:03  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:54:03  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:54:03  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:54:03  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:54:03  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:54:03  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:54:03  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:54:03  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:54:03  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:54:03  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:54:03  22  FROM di5min WHERE pair LIKE'%gbp%'
19:54:03  23  ORDER BY ydate
19:54:03  24  /

View created.

Elapsed: 00:00:00.04
19:54:03 SQL> 
19:54:03 SQL> -- rpt
19:54:03 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20824

Elapsed: 00:00:00.35
19:54:03 SQL> 
19:54:03 SQL> -- Calc deltas and gains
19:54:03 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.16
19:54:03 SQL> 
19:54:03 SQL> CREATE TABLE q13 COMPRESS AS
19:54:03   2  SELECT
19:54:03   3  pair
19:54:03   4  ,ydate
19:54:03   5  ,prdate
19:54:03   6  ,rnum
19:54:03   7  ,lg4
19:54:03   8  ,lg8
19:54:03   9  ,lg12
19:54:03  10  ,ld4
19:54:03  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:54:03  12  -- step by 1
19:54:03  13  ,clse-lg1 d01
19:54:03  14  ,lg1-lg2	d12
19:54:03  15  ,lg2-lg3	d23
19:54:03  16  ,lg3-lg4	d34
19:54:03  17  ,lg4-lg5	d45
19:54:03  18  ,lg5-lg6	d56
19:54:03  19  ,lg6-lg7	d67
19:54:03  20  ,lg7-lg8	d78
19:54:03  21  ,lg8-lg9	d89
19:54:03  22  -- step by 2
19:54:03  23  ,clse-lg2 d02
19:54:03  24  ,lg2-lg4 d24
19:54:03  25  ,lg4-lg6 d46
19:54:03  26  ,lg6-lg8 d68
19:54:03  27  -- step by 3
19:54:03  28  ,clse-lg3 d03
19:54:03  29  ,lg3-lg6	d36
19:54:03  30  ,lg6-lg9	d69
19:54:03  31  ,lg9-lg12 d912
19:54:03  32  -- step by 4
19:54:03  33  ,clse-lg4 d04
19:54:03  34  ,lg4-lg8	d48
19:54:03  35  ,lg8-lg12 d812
19:54:03  36  ,lg6-lg12 d612
19:54:03  37  ,lg12-lg18 d1218
19:54:03  38  --
19:54:03  39  ,ABS(clse-lg1)dc1
19:54:03  40  ,ABS(clse-lg2)dc2
19:54:03  41  ,ABS(clse-lg3)dc3
19:54:03  42  ,ABS(clse-lg4)dc4
19:54:03  43  ,ABS(clse-lg5)dc5
19:54:03  44  ,ABS(clse-lg6)dc6
19:54:03  45  ,ABS(clse-lg7)dc7
19:54:03  46  ,ABS(clse-lg8)dc8
19:54:03  47  ,ABS(clse-lg9)dc9
19:54:03  48  ,ABS(clse-lg12)dc12
19:54:03  49  ,ABS(clse-lg18)dc18
19:54:03  50  ,ABS(clse-lg24)dc24
19:54:03  51  ,ABS(clse-lg72)dc72
19:54:03  52  ,(ld4-clse) ug4
19:54:03  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:54:03  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:54:03  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:54:03  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:54:03  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:54:03  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:54:03  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:54:03  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:54:03  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:54:03  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:54:03  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:54:03  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:54:03  65  ,0+TO_CHAR(ydate,'D')d
19:54:03  66  ,0+TO_CHAR(ydate,'W')w
19:54:03  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:54:03  68  FROM q11
19:54:03  69  -- I dont want any NULL values from the LAG() functions:
19:54:03  70  WHERE lg72 > 0
19:54:03  71  ORDER BY pair,ydate
19:54:03  72  /

Table created.

Elapsed: 00:00:01.72
19:54:05 SQL> 
19:54:05 SQL> -- rpt
19:54:05 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9699
	-1	   10261

Elapsed: 00:00:00.03
19:54:05 SQL> 
19:54:05 SQL> -- Calc gains and ntiles
19:54:05 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.12
19:54:05 SQL> CREATE TABLE q15 COMPRESS AS
19:54:05   2  SELECT
19:54:05   3  pair
19:54:05   4  ,ydate
19:54:05   5  ,prdate -- Should be unique
19:54:05   6  ,trend -- +1 or -1
19:54:05   7  ,dc12 -- next statement needs this
19:54:05   8  -- Use NTILE() to derive some attributes
19:54:05   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:54:05  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:54:05  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:54:05  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:54:05  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:54:05  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:54:05  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:54:05  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:54:05  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:54:05  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:54:05  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:54:05  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:54:05  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:54:05  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:54:05  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:54:05  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:54:05  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:54:05  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:54:05  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:54:05  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:54:05  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:54:05  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:54:05  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:54:05  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:54:05  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:54:05  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:54:05  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:54:05  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:54:05  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:54:05  38  ,hh    att28
19:54:05  39  ,d     att29
19:54:05  40  ,w     att30
19:54:05  41  ,mpm   att31
19:54:05  42  ,trend att32
19:54:05  43  ,ug4 g4
19:54:05  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:54:05  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:54:05  46  FROM q13
19:54:05  47  ORDER BY pair,ydate
19:54:05  48  /

Table created.

Elapsed: 00:00:03.92
19:54:09 SQL> 
19:54:09 SQL> -- rpt
19:54:09 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:54:09   2  GROUP BY pair,trend,gatt,gattn
19:54:09   3  ORDER BY pair,trend,gatt,gattn
19:54:09   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003120886	    4412    -.08637111
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003585647	    3893    -.16628062
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.05
19:54:09 SQL> 
19:54:09 SQL> -- rpt
19:54:09 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-16 19:45:00

Elapsed: 00:00:00.01
19:54:09 SQL> 
19:54:09 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.18
19:54:09 SQL> CREATE TABLE modsrc COMPRESS AS
19:54:09   2  SELECT
19:54:09   3  pair
19:54:09   4  ,ydate
19:54:09   5  ,prdate
19:54:09   6  ,trend
19:54:09   7  ,g4
19:54:09   8  ,gatt
19:54:09   9  ,gattn
19:54:09  10  ,dc12
19:54:09  11  FROM q15
19:54:09  12  /

Table created.

Elapsed: 00:00:00.10
19:54:09 SQL> 
19:54:09 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
19:54:10 SQL> 
19:54:10 SQL> -- rpt
19:54:10 SQL> 
19:54:10 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20824

Elapsed: 00:00:00.35
19:54:10 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
19:54:10 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
19:54:10 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
19:54:10 SQL> 
19:54:10 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:54:10   2  GROUP BY pair,trend,gatt,gattn
19:54:10   3  ORDER BY pair,trend,gatt,gattn
19:54:10   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003120886	    4412    -.08637111
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003585647	    3893    -.16628062
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.03
19:54:10 SQL> 
19:54:10 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
19:54:10 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
19:54:10   2  SELECT
19:54:10   3  ydate
19:54:10   4  ,trend gbp_trend
19:54:10   5  ,g4    gbp_g4
19:54:10   6  ,gatt  gbp_gatt
19:54:10   7  ,gattn gbp_gattn
19:54:10   8  FROM modsrc
19:54:10   9  /

Table created.

Elapsed: 00:00:00.06
19:54:10 SQL> 
19:54:10 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
19:54:10 SQL> 
19:54:10 SQL> -- rpt
19:54:10 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 00:05:01 2010-12-16 19:45:00	 9651	  -.0194      .0179
	-1 2010-09-10 19:55:01 2010-12-16 07:30:00	10261	  -.0153      .0159

Elapsed: 00:00:00.02
19:54:10 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 00:05:01 2010-12-16 19:45:00	       9699	 -.0194       .0179
	-1 2010-09-10 19:55:01 2010-12-16 07:30:00	      10261	 -.0153       .0159

Elapsed: 00:00:00.01
19:54:10 SQL> 
19:54:10 SQL> -- I need a copy of q15 attributes
19:54:10 SQL> 
19:54:10 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.03
19:54:10 SQL> CREATE TABLE gbp_att COMPRESS AS
19:54:10   2  SELECT
19:54:10   3  ydate
19:54:10   4  ,att00 gbp_att00
19:54:10   5  ,att01 gbp_att01
19:54:10   6  ,att02 gbp_att02
19:54:10   7  ,att03 gbp_att03
19:54:10   8  ,att04 gbp_att04
19:54:10   9  ,att05 gbp_att05
19:54:10  10  ,att06 gbp_att06
19:54:10  11  ,att07 gbp_att07
19:54:10  12  ,att08 gbp_att08
19:54:10  13  ,att09 gbp_att09
19:54:10  14  ,att10 gbp_att10
19:54:10  15  ,att11 gbp_att11
19:54:10  16  ,att12 gbp_att12
19:54:10  17  ,att13 gbp_att13
19:54:10  18  ,att14 gbp_att14
19:54:10  19  ,att15 gbp_att15
19:54:10  20  ,att16 gbp_att16
19:54:10  21  ,att17 gbp_att17
19:54:10  22  ,att18 gbp_att18
19:54:10  23  ,att19 gbp_att19
19:54:10  24  ,att20 gbp_att20
19:54:10  25  ,att21 gbp_att21
19:54:10  26  ,att22 gbp_att22
19:54:10  27  ,att23 gbp_att23
19:54:10  28  ,att24 gbp_att24
19:54:10  29  ,att25 gbp_att25
19:54:10  30  ,att26 gbp_att26
19:54:10  31  ,att27 gbp_att27
19:54:10  32  ,att28 gbp_att28
19:54:10  33  ,att29 gbp_att29
19:54:10  34  ,att30 gbp_att30
19:54:10  35  ,att31 gbp_att31
19:54:10  36  ,att32 gbp_att32
19:54:10  37  FROM q15
19:54:10  38  /

Table created.

Elapsed: 00:00:00.14
19:54:10 SQL> 
19:54:10 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.41
19:54:11 SQL> 
19:54:11 SQL> -- rpt
19:54:11 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19960

Elapsed: 00:00:00.01
19:54:11 SQL> 
19:54:11 SQL> --
19:54:11 SQL> -- jpy10.sql
19:54:11 SQL> --
19:54:11 SQL> 
19:54:11 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:54:11 SQL> 
19:54:11 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.29
19:54:11 SQL> 
19:54:11 SQL> -- I created di5min here:
19:54:11 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:54:11 SQL> 
19:54:11 SQL> CREATE OR REPLACE VIEW q11 AS
19:54:11   2  SELECT
19:54:11   3  pair
19:54:11   4  ,ydate
19:54:11   5  ,prdate
19:54:11   6  ,rownum rnum -- acts as t in my time-series
19:54:11   7  ,clse
19:54:11   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:54:11   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:54:11  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:54:11  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:54:11  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:54:11  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:54:11  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:54:11  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:54:11  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:54:11  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:54:11  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:54:11  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:54:11  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:54:11  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:54:11  22  FROM di5min WHERE pair LIKE'%jpy%'
19:54:11  23  ORDER BY ydate
19:54:11  24  /

View created.

Elapsed: 00:00:00.04
19:54:11 SQL> 
19:54:11 SQL> -- rpt
19:54:11 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20825

Elapsed: 00:00:00.35
19:54:12 SQL> 
19:54:12 SQL> -- Calc deltas and gains
19:54:12 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.16
19:54:12 SQL> 
19:54:12 SQL> CREATE TABLE q13 COMPRESS AS
19:54:12   2  SELECT
19:54:12   3  pair
19:54:12   4  ,ydate
19:54:12   5  ,prdate
19:54:12   6  ,rnum
19:54:12   7  ,lg4
19:54:12   8  ,lg8
19:54:12   9  ,lg12
19:54:12  10  ,ld4
19:54:12  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:54:12  12  -- step by 1
19:54:12  13  ,clse-lg1 d01
19:54:12  14  ,lg1-lg2	d12
19:54:12  15  ,lg2-lg3	d23
19:54:12  16  ,lg3-lg4	d34
19:54:12  17  ,lg4-lg5	d45
19:54:12  18  ,lg5-lg6	d56
19:54:12  19  ,lg6-lg7	d67
19:54:12  20  ,lg7-lg8	d78
19:54:12  21  ,lg8-lg9	d89
19:54:12  22  -- step by 2
19:54:12  23  ,clse-lg2 d02
19:54:12  24  ,lg2-lg4 d24
19:54:12  25  ,lg4-lg6 d46
19:54:12  26  ,lg6-lg8 d68
19:54:12  27  -- step by 3
19:54:12  28  ,clse-lg3 d03
19:54:12  29  ,lg3-lg6	d36
19:54:12  30  ,lg6-lg9	d69
19:54:12  31  ,lg9-lg12 d912
19:54:12  32  -- step by 4
19:54:12  33  ,clse-lg4 d04
19:54:12  34  ,lg4-lg8	d48
19:54:12  35  ,lg8-lg12 d812
19:54:12  36  ,lg6-lg12 d612
19:54:12  37  ,lg12-lg18 d1218
19:54:12  38  --
19:54:12  39  ,ABS(clse-lg1)dc1
19:54:12  40  ,ABS(clse-lg2)dc2
19:54:12  41  ,ABS(clse-lg3)dc3
19:54:12  42  ,ABS(clse-lg4)dc4
19:54:12  43  ,ABS(clse-lg5)dc5
19:54:12  44  ,ABS(clse-lg6)dc6
19:54:12  45  ,ABS(clse-lg7)dc7
19:54:12  46  ,ABS(clse-lg8)dc8
19:54:12  47  ,ABS(clse-lg9)dc9
19:54:12  48  ,ABS(clse-lg12)dc12
19:54:12  49  ,ABS(clse-lg18)dc18
19:54:12  50  ,ABS(clse-lg24)dc24
19:54:12  51  ,ABS(clse-lg72)dc72
19:54:12  52  ,(ld4-clse) ug4
19:54:12  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:54:12  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:54:12  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:54:12  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:54:12  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:54:12  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:54:12  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:54:12  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:54:12  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:54:12  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:54:12  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:54:12  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:54:12  65  ,0+TO_CHAR(ydate,'D')d
19:54:12  66  ,0+TO_CHAR(ydate,'W')w
19:54:12  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:54:12  68  FROM q11
19:54:12  69  -- I dont want any NULL values from the LAG() functions:
19:54:12  70  WHERE lg72 > 0
19:54:12  71  ORDER BY pair,ydate
19:54:12  72  /

Table created.

Elapsed: 00:00:01.65
19:54:13 SQL> 
19:54:13 SQL> -- rpt
19:54:13 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9290
	-1	   10671

Elapsed: 00:00:00.02
19:54:13 SQL> 
19:54:13 SQL> -- Calc gains and ntiles
19:54:13 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
19:54:13 SQL> CREATE TABLE q15 COMPRESS AS
19:54:13   2  SELECT
19:54:13   3  pair
19:54:13   4  ,ydate
19:54:13   5  ,prdate -- Should be unique
19:54:13   6  ,trend -- +1 or -1
19:54:13   7  ,dc12 -- next statement needs this
19:54:13   8  -- Use NTILE() to derive some attributes
19:54:13   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:54:13  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:54:13  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:54:13  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:54:13  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:54:13  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:54:13  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:54:13  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:54:13  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:54:13  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:54:13  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:54:13  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:54:13  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:54:13  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:54:13  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:54:13  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:54:13  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:54:13  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:54:13  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:54:13  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:54:13  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:54:13  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:54:13  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:54:13  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:54:13  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:54:13  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:54:13  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:54:13  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:54:13  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:54:13  38  ,hh    att28
19:54:13  39  ,d     att29
19:54:13  40  ,w     att30
19:54:13  41  ,mpm   att31
19:54:13  42  ,trend att32
19:54:13  43  ,ug4 g4
19:54:13  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:54:13  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:54:13  46  FROM q13
19:54:13  47  ORDER BY pair,ydate
19:54:13  48  /

Table created.

Elapsed: 00:00:04.02
19:54:18 SQL> 
19:54:18 SQL> -- rpt
19:54:18 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:54:18   2  GROUP BY pair,trend,gatt,gattn
19:54:18   3  ORDER BY pair,trend,gatt,gattn
19:54:18   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13693752	    5178     .02198879
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     169
usd_jpy 	 1 nup up  -.13371742	    4988    -.01799767
usd_jpy 	 1 up  nup .151885036	    4110    .184231788
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
19:54:18 SQL> 
19:54:18 SQL> -- rpt
19:54:18 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-16 19:45:00

Elapsed: 00:00:00.02
19:54:18 SQL> 
19:54:18 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
19:54:18 SQL> CREATE TABLE modsrc COMPRESS AS
19:54:18   2  SELECT
19:54:18   3  pair
19:54:18   4  ,ydate
19:54:18   5  ,prdate
19:54:18   6  ,trend
19:54:18   7  ,g4
19:54:18   8  ,gatt
19:54:18   9  ,gattn
19:54:18  10  ,dc12
19:54:18  11  FROM q15
19:54:18  12  /

Table created.

Elapsed: 00:00:00.09
19:54:18 SQL> 
19:54:18 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
19:54:18 SQL> 
19:54:18 SQL> -- rpt
19:54:18 SQL> 
19:54:18 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20825

Elapsed: 00:00:00.38
19:54:18 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
19:54:18 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.01
19:54:18 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
19:54:18 SQL> 
19:54:18 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:54:18   2  GROUP BY pair,trend,gatt,gattn
19:54:18   3  ORDER BY pair,trend,gatt,gattn
19:54:18   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13693752	    5178     .02198879
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     169
usd_jpy 	 1 nup up  -.13371742	    4988    -.01799767
usd_jpy 	 1 up  nup .151885036	    4110    .184231788
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
19:54:18 SQL> 
19:54:18 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.15
19:54:19 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
19:54:19   2  SELECT
19:54:19   3  ydate
19:54:19   4  ,trend jpy_trend
19:54:19   5  ,g4    jpy_g4
19:54:19   6  ,gatt  jpy_gatt
19:54:19   7  ,gattn jpy_gattn
19:54:19   8  FROM modsrc
19:54:19   9  /

Table created.

Elapsed: 00:00:00.07
19:54:19 SQL> 
19:54:19 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
19:54:19 SQL> 
19:54:19 SQL> -- rpt
19:54:19 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 19:55:01 2010-12-16 18:25:00	 9267	   -1.07	1.5
	-1 2010-09-12 23:35:01 2010-12-16 19:45:00	10646	 -1.0775       1.99

Elapsed: 00:00:00.02
19:54:19 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 19:55:01 2010-12-16 18:25:00	       9290	  -1.07 	1.5
	-1 2010-09-12 23:35:01 2010-12-16 19:45:00	      10671	-1.0775        1.99

Elapsed: 00:00:00.02
19:54:19 SQL> 
19:54:19 SQL> -- I need a copy of q15 attributes
19:54:19 SQL> 
19:54:19 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.03
19:54:19 SQL> CREATE TABLE jpy_att COMPRESS AS
19:54:19   2  SELECT
19:54:19   3  ydate
19:54:19   4  ,att00 jpy_att00
19:54:19   5  ,att01 jpy_att01
19:54:19   6  ,att02 jpy_att02
19:54:19   7  ,att03 jpy_att03
19:54:19   8  ,att04 jpy_att04
19:54:19   9  ,att05 jpy_att05
19:54:19  10  ,att06 jpy_att06
19:54:19  11  ,att07 jpy_att07
19:54:19  12  ,att08 jpy_att08
19:54:19  13  ,att09 jpy_att09
19:54:19  14  ,att10 jpy_att10
19:54:19  15  ,att11 jpy_att11
19:54:19  16  ,att12 jpy_att12
19:54:19  17  ,att13 jpy_att13
19:54:19  18  ,att14 jpy_att14
19:54:19  19  ,att15 jpy_att15
19:54:19  20  ,att16 jpy_att16
19:54:19  21  ,att17 jpy_att17
19:54:19  22  ,att18 jpy_att18
19:54:19  23  ,att19 jpy_att19
19:54:19  24  ,att20 jpy_att20
19:54:19  25  ,att21 jpy_att21
19:54:19  26  ,att22 jpy_att22
19:54:19  27  ,att23 jpy_att23
19:54:19  28  ,att24 jpy_att24
19:54:19  29  ,att25 jpy_att25
19:54:19  30  ,att26 jpy_att26
19:54:19  31  ,att27 jpy_att27
19:54:19  32  ,att28 jpy_att28
19:54:19  33  ,att29 jpy_att29
19:54:19  34  ,att30 jpy_att30
19:54:19  35  ,att31 jpy_att31
19:54:19  36  ,att32 jpy_att32
19:54:19  37  FROM q15
19:54:19  38  /

Table created.

Elapsed: 00:00:00.14
19:54:19 SQL> 
19:54:19 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.53
19:54:20 SQL> 
19:54:20 SQL> -- rpt
19:54:20 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19961

Elapsed: 00:00:00.01
19:54:20 SQL> 
19:54:20 SQL> --
19:54:20 SQL> -- cad10.sql
19:54:20 SQL> --
19:54:20 SQL> 
19:54:20 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:54:20 SQL> 
19:54:20 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
19:54:20 SQL> 
19:54:20 SQL> -- I created di5min here:
19:54:20 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:54:20 SQL> 
19:54:20 SQL> CREATE OR REPLACE VIEW q11 AS
19:54:20   2  SELECT
19:54:20   3  pair
19:54:20   4  ,ydate
19:54:20   5  ,prdate
19:54:20   6  ,rownum rnum -- acts as t in my time-series
19:54:20   7  ,clse
19:54:20   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:54:20   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:54:20  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:54:20  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:54:20  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:54:20  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:54:20  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:54:20  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:54:20  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:54:20  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:54:20  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:54:20  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:54:20  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:54:20  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:54:20  22  FROM di5min WHERE pair LIKE'%cad%'
19:54:20  23  ORDER BY ydate
19:54:20  24  /

View created.

Elapsed: 00:00:00.05
19:54:20 SQL> 
19:54:20 SQL> -- rpt
19:54:20 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20821

Elapsed: 00:00:00.36
19:54:20 SQL> 
19:54:20 SQL> -- Calc deltas and gains
19:54:20 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.21
19:54:21 SQL> 
19:54:21 SQL> CREATE TABLE q13 COMPRESS AS
19:54:21   2  SELECT
19:54:21   3  pair
19:54:21   4  ,ydate
19:54:21   5  ,prdate
19:54:21   6  ,rnum
19:54:21   7  ,lg4
19:54:21   8  ,lg8
19:54:21   9  ,lg12
19:54:21  10  ,ld4
19:54:21  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:54:21  12  -- step by 1
19:54:21  13  ,clse-lg1 d01
19:54:21  14  ,lg1-lg2	d12
19:54:21  15  ,lg2-lg3	d23
19:54:21  16  ,lg3-lg4	d34
19:54:21  17  ,lg4-lg5	d45
19:54:21  18  ,lg5-lg6	d56
19:54:21  19  ,lg6-lg7	d67
19:54:21  20  ,lg7-lg8	d78
19:54:21  21  ,lg8-lg9	d89
19:54:21  22  -- step by 2
19:54:21  23  ,clse-lg2 d02
19:54:21  24  ,lg2-lg4 d24
19:54:21  25  ,lg4-lg6 d46
19:54:21  26  ,lg6-lg8 d68
19:54:21  27  -- step by 3
19:54:21  28  ,clse-lg3 d03
19:54:21  29  ,lg3-lg6	d36
19:54:21  30  ,lg6-lg9	d69
19:54:21  31  ,lg9-lg12 d912
19:54:21  32  -- step by 4
19:54:21  33  ,clse-lg4 d04
19:54:21  34  ,lg4-lg8	d48
19:54:21  35  ,lg8-lg12 d812
19:54:21  36  ,lg6-lg12 d612
19:54:21  37  ,lg12-lg18 d1218
19:54:21  38  --
19:54:21  39  ,ABS(clse-lg1)dc1
19:54:21  40  ,ABS(clse-lg2)dc2
19:54:21  41  ,ABS(clse-lg3)dc3
19:54:21  42  ,ABS(clse-lg4)dc4
19:54:21  43  ,ABS(clse-lg5)dc5
19:54:21  44  ,ABS(clse-lg6)dc6
19:54:21  45  ,ABS(clse-lg7)dc7
19:54:21  46  ,ABS(clse-lg8)dc8
19:54:21  47  ,ABS(clse-lg9)dc9
19:54:21  48  ,ABS(clse-lg12)dc12
19:54:21  49  ,ABS(clse-lg18)dc18
19:54:21  50  ,ABS(clse-lg24)dc24
19:54:21  51  ,ABS(clse-lg72)dc72
19:54:21  52  ,(ld4-clse) ug4
19:54:21  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:54:21  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:54:21  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:54:21  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:54:21  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:54:21  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:54:21  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:54:21  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:54:21  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:54:21  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:54:21  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:54:21  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:54:21  65  ,0+TO_CHAR(ydate,'D')d
19:54:21  66  ,0+TO_CHAR(ydate,'W')w
19:54:21  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:54:21  68  FROM q11
19:54:21  69  -- I dont want any NULL values from the LAG() functions:
19:54:21  70  WHERE lg72 > 0
19:54:21  71  ORDER BY pair,ydate
19:54:21  72  /

Table created.

Elapsed: 00:00:01.75
19:54:22 SQL> 
19:54:22 SQL> -- rpt
19:54:22 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9020
	-1	   10937

Elapsed: 00:00:00.03
19:54:22 SQL> 
19:54:22 SQL> -- Calc gains and ntiles
19:54:22 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.16
19:54:22 SQL> CREATE TABLE q15 COMPRESS AS
19:54:22   2  SELECT
19:54:22   3  pair
19:54:22   4  ,ydate
19:54:22   5  ,prdate -- Should be unique
19:54:22   6  ,trend -- +1 or -1
19:54:22   7  ,dc12 -- next statement needs this
19:54:22   8  -- Use NTILE() to derive some attributes
19:54:22   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:54:22  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:54:22  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:54:22  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:54:22  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:54:22  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:54:22  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:54:22  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:54:22  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:54:22  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:54:22  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:54:22  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:54:22  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:54:22  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:54:22  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:54:22  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:54:22  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:54:22  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:54:22  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:54:22  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:54:22  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:54:22  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:54:22  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:54:22  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:54:22  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:54:22  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:54:22  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:54:22  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:54:22  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:54:22  38  ,hh    att28
19:54:22  39  ,d     att29
19:54:22  40  ,w     att30
19:54:22  41  ,mpm   att31
19:54:22  42  ,trend att32
19:54:22  43  ,ug4 g4
19:54:22  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:54:22  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:54:22  46  FROM q13
19:54:22  47  ORDER BY pair,ydate
19:54:22  48  /

Table created.

Elapsed: 00:00:03.94
19:54:26 SQL> 
19:54:26 SQL> -- rpt
19:54:26 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:54:26   2  GROUP BY pair,trend,gatt,gattn
19:54:26   3  ORDER BY pair,trend,gatt,gattn
19:54:26   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	 1 nup nup -.00001509	    2063     -.0650587
usd_cad 	 1 nup up  -.00238826	    3849    .000143723
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.05
19:54:26 SQL> 
19:54:26 SQL> -- rpt
19:54:26 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-16 19:45:00

Elapsed: 00:00:00.01
19:54:26 SQL> 
19:54:26 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.11
19:54:27 SQL> CREATE TABLE modsrc COMPRESS AS
19:54:27   2  SELECT
19:54:27   3  pair
19:54:27   4  ,ydate
19:54:27   5  ,prdate
19:54:27   6  ,trend
19:54:27   7  ,g4
19:54:27   8  ,gatt
19:54:27   9  ,gattn
19:54:27  10  ,dc12
19:54:27  11  FROM q15
19:54:27  12  /

Table created.

Elapsed: 00:00:00.08
19:54:27 SQL> 
19:54:27 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
19:54:27 SQL> 
19:54:27 SQL> -- rpt
19:54:27 SQL> 
19:54:27 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.36
19:54:27 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
19:54:27 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
19:54:27 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
19:54:27 SQL> 
19:54:27 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:54:27   2  GROUP BY pair,trend,gatt,gattn
19:54:27   3  ORDER BY pair,trend,gatt,gattn
19:54:27   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	 1 nup nup -.00001509	    2063     -.0650587
usd_cad 	 1 nup up  -.00238826	    3849    .000143723
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
19:54:27 SQL> 
19:54:27 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
19:54:27 SQL> CREATE TABLE cad_ms10 COMPRESS AS
19:54:27   2  SELECT
19:54:27   3  ydate
19:54:27   4  ,trend cad_trend
19:54:27   5  ,g4    cad_g4
19:54:27   6  ,gatt  cad_gatt
19:54:27   7  ,gattn cad_gattn
19:54:27   8  FROM modsrc
19:54:27   9  /

Table created.

Elapsed: 00:00:00.13
19:54:27 SQL> 
19:54:27 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
19:54:28 SQL> 
19:54:28 SQL> -- rpt
19:54:28 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 19:55:01 2010-12-16 19:45:00	 8972	  -.0089      .0151
	-1 2010-09-12 23:30:01 2010-12-16 14:45:00	10937	  -.0107      .0147

Elapsed: 00:00:00.03
19:54:28 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 19:55:01 2010-12-16 19:45:00	       9020	 -.0089       .0151
	-1 2010-09-12 23:30:01 2010-12-16 14:45:00	      10937	 -.0107       .0147

Elapsed: 00:00:00.01
19:54:28 SQL> 
19:54:28 SQL> -- I need a copy of q15 attributes
19:54:28 SQL> 
19:54:28 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.04
19:54:28 SQL> CREATE TABLE cad_att COMPRESS AS
19:54:28   2  SELECT
19:54:28   3  ydate
19:54:28   4  ,att00 cad_att00
19:54:28   5  ,att01 cad_att01
19:54:28   6  ,att02 cad_att02
19:54:28   7  ,att03 cad_att03
19:54:28   8  ,att04 cad_att04
19:54:28   9  ,att05 cad_att05
19:54:28  10  ,att06 cad_att06
19:54:28  11  ,att07 cad_att07
19:54:28  12  ,att08 cad_att08
19:54:28  13  ,att09 cad_att09
19:54:28  14  ,att10 cad_att10
19:54:28  15  ,att11 cad_att11
19:54:28  16  ,att12 cad_att12
19:54:28  17  ,att13 cad_att13
19:54:28  18  ,att14 cad_att14
19:54:28  19  ,att15 cad_att15
19:54:28  20  ,att16 cad_att16
19:54:28  21  ,att17 cad_att17
19:54:28  22  ,att18 cad_att18
19:54:28  23  ,att19 cad_att19
19:54:28  24  ,att20 cad_att20
19:54:28  25  ,att21 cad_att21
19:54:28  26  ,att22 cad_att22
19:54:28  27  ,att23 cad_att23
19:54:28  28  ,att24 cad_att24
19:54:28  29  ,att25 cad_att25
19:54:28  30  ,att26 cad_att26
19:54:28  31  ,att27 cad_att27
19:54:28  32  ,att28 cad_att28
19:54:28  33  ,att29 cad_att29
19:54:28  34  ,att30 cad_att30
19:54:28  35  ,att31 cad_att31
19:54:28  36  ,att32 cad_att32
19:54:28  37  FROM q15
19:54:28  38  /

Table created.

Elapsed: 00:00:00.13
19:54:28 SQL> 
19:54:28 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.44
19:54:28 SQL> 
19:54:28 SQL> -- rpt
19:54:28 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.00
19:54:28 SQL> 
19:54:28 SQL> --
19:54:28 SQL> -- chf10.sql
19:54:28 SQL> --
19:54:28 SQL> 
19:54:28 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:54:28 SQL> 
19:54:28 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.35
19:54:29 SQL> 
19:54:29 SQL> -- I created di5min here:
19:54:29 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:54:29 SQL> 
19:54:29 SQL> CREATE OR REPLACE VIEW q11 AS
19:54:29   2  SELECT
19:54:29   3  pair
19:54:29   4  ,ydate
19:54:29   5  ,prdate
19:54:29   6  ,rownum rnum -- acts as t in my time-series
19:54:29   7  ,clse
19:54:29   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:54:29   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:54:29  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:54:29  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:54:29  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:54:29  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:54:29  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:54:29  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:54:29  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:54:29  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:54:29  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:54:29  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:54:29  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:54:29  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:54:29  22  FROM di5min WHERE pair LIKE'%chf%'
19:54:29  23  ORDER BY ydate
19:54:29  24  /

View created.

Elapsed: 00:00:00.04
19:54:29 SQL> 
19:54:29 SQL> -- rpt
19:54:29 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20824

Elapsed: 00:00:00.35
19:54:29 SQL> 
19:54:29 SQL> -- Calc deltas and gains
19:54:29 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.59
19:54:30 SQL> 
19:54:30 SQL> CREATE TABLE q13 COMPRESS AS
19:54:30   2  SELECT
19:54:30   3  pair
19:54:30   4  ,ydate
19:54:30   5  ,prdate
19:54:30   6  ,rnum
19:54:30   7  ,lg4
19:54:30   8  ,lg8
19:54:30   9  ,lg12
19:54:30  10  ,ld4
19:54:30  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:54:30  12  -- step by 1
19:54:30  13  ,clse-lg1 d01
19:54:30  14  ,lg1-lg2	d12
19:54:30  15  ,lg2-lg3	d23
19:54:30  16  ,lg3-lg4	d34
19:54:30  17  ,lg4-lg5	d45
19:54:30  18  ,lg5-lg6	d56
19:54:30  19  ,lg6-lg7	d67
19:54:30  20  ,lg7-lg8	d78
19:54:30  21  ,lg8-lg9	d89
19:54:30  22  -- step by 2
19:54:30  23  ,clse-lg2 d02
19:54:30  24  ,lg2-lg4 d24
19:54:30  25  ,lg4-lg6 d46
19:54:30  26  ,lg6-lg8 d68
19:54:30  27  -- step by 3
19:54:30  28  ,clse-lg3 d03
19:54:30  29  ,lg3-lg6	d36
19:54:30  30  ,lg6-lg9	d69
19:54:30  31  ,lg9-lg12 d912
19:54:30  32  -- step by 4
19:54:30  33  ,clse-lg4 d04
19:54:30  34  ,lg4-lg8	d48
19:54:30  35  ,lg8-lg12 d812
19:54:30  36  ,lg6-lg12 d612
19:54:30  37  ,lg12-lg18 d1218
19:54:30  38  --
19:54:30  39  ,ABS(clse-lg1)dc1
19:54:30  40  ,ABS(clse-lg2)dc2
19:54:30  41  ,ABS(clse-lg3)dc3
19:54:30  42  ,ABS(clse-lg4)dc4
19:54:30  43  ,ABS(clse-lg5)dc5
19:54:30  44  ,ABS(clse-lg6)dc6
19:54:30  45  ,ABS(clse-lg7)dc7
19:54:30  46  ,ABS(clse-lg8)dc8
19:54:30  47  ,ABS(clse-lg9)dc9
19:54:30  48  ,ABS(clse-lg12)dc12
19:54:30  49  ,ABS(clse-lg18)dc18
19:54:30  50  ,ABS(clse-lg24)dc24
19:54:30  51  ,ABS(clse-lg72)dc72
19:54:30  52  ,(ld4-clse) ug4
19:54:30  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:54:30  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:54:30  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:54:30  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:54:30  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:54:30  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:54:30  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:54:30  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:54:30  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:54:30  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:54:30  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:54:30  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:54:30  65  ,0+TO_CHAR(ydate,'D')d
19:54:30  66  ,0+TO_CHAR(ydate,'W')w
19:54:30  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:54:30  68  FROM q11
19:54:30  69  -- I dont want any NULL values from the LAG() functions:
19:54:30  70  WHERE lg72 > 0
19:54:30  71  ORDER BY pair,ydate
19:54:30  72  /

Table created.

Elapsed: 00:00:01.68
19:54:31 SQL> 
19:54:31 SQL> -- rpt
19:54:31 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9320
	-1	   10640

Elapsed: 00:00:00.02
19:54:31 SQL> 
19:54:31 SQL> -- Calc gains and ntiles
19:54:31 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
19:54:31 SQL> CREATE TABLE q15 COMPRESS AS
19:54:31   2  SELECT
19:54:31   3  pair
19:54:31   4  ,ydate
19:54:31   5  ,prdate -- Should be unique
19:54:31   6  ,trend -- +1 or -1
19:54:31   7  ,dc12 -- next statement needs this
19:54:31   8  -- Use NTILE() to derive some attributes
19:54:31   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:54:31  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:54:31  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:54:31  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:54:31  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:54:31  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:54:31  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:54:31  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:54:31  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:54:31  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:54:31  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:54:31  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:54:31  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:54:31  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:54:31  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:54:31  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:54:31  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:54:31  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:54:31  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:54:31  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:54:31  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:54:31  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:54:31  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:54:31  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:54:31  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:54:31  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:54:31  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:54:31  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:54:31  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:54:31  38  ,hh    att28
19:54:31  39  ,d     att29
19:54:31  40  ,w     att30
19:54:31  41  ,mpm   att31
19:54:31  42  ,trend att32
19:54:31  43  ,ug4 g4
19:54:31  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:54:31  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:54:31  46  FROM q13
19:54:31  47  ORDER BY pair,ydate
19:54:31  48  /

Table created.

Elapsed: 00:00:03.93
19:54:35 SQL> 
19:54:35 SQL> -- rpt
19:54:35 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:54:35   2  GROUP BY pair,trend,gatt,gattn
19:54:35   3  ORDER BY pair,trend,gatt,gattn
19:54:35   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032287	    2652     .04168251
usd_chf 	-1 nup up  -.00292334	    3907    .063124151
usd_chf 	-1 up  nup .002644479	    4053    -.11979029
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00253524	    3842    .111585087
usd_chf 	 1 up  nup .002433841	    3232     -.1606913
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
19:54:35 SQL> 
19:54:35 SQL> -- rpt
19:54:35 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-16 19:45:00

Elapsed: 00:00:00.01
19:54:35 SQL> 
19:54:35 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.19
19:54:36 SQL> CREATE TABLE modsrc COMPRESS AS
19:54:36   2  SELECT
19:54:36   3  pair
19:54:36   4  ,ydate
19:54:36   5  ,prdate
19:54:36   6  ,trend
19:54:36   7  ,g4
19:54:36   8  ,gatt
19:54:36   9  ,gattn
19:54:36  10  ,dc12
19:54:36  11  FROM q15
19:54:36  12  /

Table created.

Elapsed: 00:00:00.08
19:54:36 SQL> 
19:54:36 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
19:54:36 SQL> 
19:54:36 SQL> -- rpt
19:54:36 SQL> 
19:54:36 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20824

Elapsed: 00:00:00.37
19:54:36 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
19:54:36 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
19:54:36 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
19:54:36 SQL> 
19:54:36 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:54:36   2  GROUP BY pair,trend,gatt,gattn
19:54:36   3  ORDER BY pair,trend,gatt,gattn
19:54:36   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032287	    2652     .04168251
usd_chf 	-1 nup up  -.00292334	    3907    .063124151
usd_chf 	-1 up  nup .002644479	    4053    -.11979029
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00253524	    3842    .111585087
usd_chf 	 1 up  nup .002433841	    3232     -.1606913
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
19:54:36 SQL> 
19:54:36 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
19:54:36 SQL> CREATE TABLE chf_ms10 COMPRESS AS
19:54:36   2  SELECT
19:54:36   3  ydate
19:54:36   4  ,trend chf_trend
19:54:36   5  ,g4    chf_g4
19:54:36   6  ,gatt  chf_gatt
19:54:36   7  ,gattn chf_gattn
19:54:36   8  FROM modsrc
19:54:36   9  /

Table created.

Elapsed: 00:00:00.07
19:54:36 SQL> 
19:54:36 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
19:54:37 SQL> 
19:54:37 SQL> -- rpt
19:54:37 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	 9300	  -.0176     .01365
	-1 2010-09-10 19:55:01 2010-12-16 19:45:00	10612	  -.0166      .0149

Elapsed: 00:00:00.02
19:54:37 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	       9320	 -.0176      .01365
	-1 2010-09-10 19:55:01 2010-12-16 19:45:00	      10640	 -.0166       .0149

Elapsed: 00:00:00.01
19:54:37 SQL> 
19:54:37 SQL> -- I need a copy of q15 attributes
19:54:37 SQL> 
19:54:37 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.04
19:54:37 SQL> CREATE TABLE chf_att COMPRESS AS
19:54:37   2  SELECT
19:54:37   3  ydate
19:54:37   4  ,att00 chf_att00
19:54:37   5  ,att01 chf_att01
19:54:37   6  ,att02 chf_att02
19:54:37   7  ,att03 chf_att03
19:54:37   8  ,att04 chf_att04
19:54:37   9  ,att05 chf_att05
19:54:37  10  ,att06 chf_att06
19:54:37  11  ,att07 chf_att07
19:54:37  12  ,att08 chf_att08
19:54:37  13  ,att09 chf_att09
19:54:37  14  ,att10 chf_att10
19:54:37  15  ,att11 chf_att11
19:54:37  16  ,att12 chf_att12
19:54:37  17  ,att13 chf_att13
19:54:37  18  ,att14 chf_att14
19:54:37  19  ,att15 chf_att15
19:54:37  20  ,att16 chf_att16
19:54:37  21  ,att17 chf_att17
19:54:37  22  ,att18 chf_att18
19:54:37  23  ,att19 chf_att19
19:54:37  24  ,att20 chf_att20
19:54:37  25  ,att21 chf_att21
19:54:37  26  ,att22 chf_att22
19:54:37  27  ,att23 chf_att23
19:54:37  28  ,att24 chf_att24
19:54:37  29  ,att25 chf_att25
19:54:37  30  ,att26 chf_att26
19:54:37  31  ,att27 chf_att27
19:54:37  32  ,att28 chf_att28
19:54:37  33  ,att29 chf_att29
19:54:37  34  ,att30 chf_att30
19:54:37  35  ,att31 chf_att31
19:54:37  36  ,att32 chf_att32
19:54:37  37  FROM q15
19:54:37  38  /

Table created.

Elapsed: 00:00:00.13
19:54:37 SQL> 
19:54:37 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
19:54:37 SQL> 
19:54:37 SQL> -- rpt
19:54:37 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19960

Elapsed: 00:00:00.00
19:54:37 SQL> 
19:54:37 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
