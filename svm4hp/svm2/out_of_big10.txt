
SQL*Plus: Release 11.2.0.1.0 Production on Fri Dec 17 22:49:45 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

22:49:45 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
22:49:45 SQL> 22:49:45 SQL> --
22:49:45 SQL> -- eur10.sql
22:49:45 SQL> --
22:49:45 SQL> 
22:49:45 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:49:45 SQL> 
22:49:45 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.02
22:49:45 SQL> 
22:49:45 SQL> -- I created di5min here:
22:49:45 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
22:49:45 SQL> 
22:49:45 SQL> CREATE OR REPLACE VIEW q11 AS
22:49:45   2  SELECT
22:49:45   3  pair
22:49:45   4  ,ydate
22:49:45   5  ,prdate
22:49:45   6  ,rownum rnum -- acts as t in my time-series
22:49:45   7  ,clse
22:49:45   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
22:49:45   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
22:49:45  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
22:49:45  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
22:49:45  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
22:49:45  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
22:49:45  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
22:49:45  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
22:49:45  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
22:49:45  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
22:49:45  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
22:49:45  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
22:49:45  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
22:49:45  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
22:49:45  22  FROM di5min WHERE pair LIKE'%eur%'
22:49:45  23  ORDER BY ydate
22:49:45  24  /

View created.

Elapsed: 00:00:00.06
22:49:45 SQL> 
22:49:45 SQL> -- rpt
22:49:45 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20813

Elapsed: 00:00:00.36
22:49:46 SQL> 
22:49:46 SQL> -- Calc deltas and gains
22:49:46 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.22
22:49:46 SQL> 
22:49:46 SQL> CREATE TABLE q13 COMPRESS AS
22:49:46   2  SELECT
22:49:46   3  pair
22:49:46   4  ,ydate
22:49:46   5  ,prdate
22:49:46   6  ,rnum
22:49:46   7  ,lg4
22:49:46   8  ,lg8
22:49:46   9  ,lg12
22:49:46  10  ,ld4
22:49:46  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
22:49:46  12  -- step by 1
22:49:46  13  ,clse-lg1 d01
22:49:46  14  ,lg1-lg2	d12
22:49:46  15  ,lg2-lg3	d23
22:49:46  16  ,lg3-lg4	d34
22:49:46  17  ,lg4-lg5	d45
22:49:46  18  ,lg5-lg6	d56
22:49:46  19  ,lg6-lg7	d67
22:49:46  20  ,lg7-lg8	d78
22:49:46  21  ,lg8-lg9	d89
22:49:46  22  -- step by 2
22:49:46  23  ,clse-lg2 d02
22:49:46  24  ,lg2-lg4 d24
22:49:46  25  ,lg4-lg6 d46
22:49:46  26  ,lg6-lg8 d68
22:49:46  27  -- step by 3
22:49:46  28  ,clse-lg3 d03
22:49:46  29  ,lg3-lg6	d36
22:49:46  30  ,lg6-lg9	d69
22:49:46  31  ,lg9-lg12 d912
22:49:46  32  -- step by 4
22:49:46  33  ,clse-lg4 d04
22:49:46  34  ,lg4-lg8	d48
22:49:46  35  ,lg8-lg12 d812
22:49:46  36  ,lg6-lg12 d612
22:49:46  37  ,lg12-lg18 d1218
22:49:46  38  --
22:49:46  39  ,ABS(clse-lg1)dc1
22:49:46  40  ,ABS(clse-lg2)dc2
22:49:46  41  ,ABS(clse-lg3)dc3
22:49:46  42  ,ABS(clse-lg4)dc4
22:49:46  43  ,ABS(clse-lg5)dc5
22:49:46  44  ,ABS(clse-lg6)dc6
22:49:46  45  ,ABS(clse-lg7)dc7
22:49:46  46  ,ABS(clse-lg8)dc8
22:49:46  47  ,ABS(clse-lg9)dc9
22:49:46  48  ,ABS(clse-lg12)dc12
22:49:46  49  ,ABS(clse-lg18)dc18
22:49:46  50  ,ABS(clse-lg24)dc24
22:49:46  51  ,ABS(clse-lg72)dc72
22:49:46  52  ,(ld4-clse) ug4
22:49:46  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
22:49:46  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
22:49:46  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
22:49:46  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
22:49:46  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:49:46  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
22:49:46  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:49:46  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
22:49:46  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:49:46  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:49:46  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
22:49:46  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:49:46  65  ,0+TO_CHAR(ydate,'D')d
22:49:46  66  ,0+TO_CHAR(ydate,'W')w
22:49:46  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:49:46  68  FROM q11
22:49:46  69  -- I dont want any NULL values from the LAG() functions:
22:49:46  70  WHERE lg72 > 0
22:49:46  71  ORDER BY pair,ydate
22:49:46  72  /

Table created.

Elapsed: 00:00:01.99
22:49:48 SQL> 
22:49:48 SQL> -- rpt
22:49:48 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10173
	-1	    9776

Elapsed: 00:00:00.04
22:49:48 SQL> 
22:49:48 SQL> -- Calc gains and ntiles
22:49:48 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.15
22:49:48 SQL> CREATE TABLE q15 COMPRESS AS
22:49:48   2  SELECT
22:49:48   3  pair
22:49:48   4  ,ydate
22:49:48   5  ,prdate -- Should be unique
22:49:48   6  ,trend -- +1 or -1
22:49:48   7  ,dc12 -- next statement needs this
22:49:48   8  -- Use NTILE() to derive some attributes
22:49:48   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
22:49:48  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
22:49:48  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
22:49:48  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
22:49:48  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
22:49:48  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
22:49:48  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
22:49:48  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
22:49:48  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
22:49:48  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
22:49:48  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
22:49:48  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
22:49:48  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
22:49:48  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
22:49:48  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
22:49:48  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
22:49:48  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
22:49:48  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
22:49:48  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
22:49:48  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
22:49:48  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
22:49:48  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
22:49:48  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
22:49:48  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
22:49:48  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
22:49:48  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
22:49:48  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
22:49:48  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
22:49:48  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:49:48  38  ,hh    att28
22:49:48  39  ,d     att29
22:49:48  40  ,w     att30
22:49:48  41  ,mpm   att31
22:49:48  42  ,trend att32
22:49:48  43  ,ug4 g4
22:49:48  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
22:49:48  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
22:49:48  46  FROM q13
22:49:48  47  ORDER BY pair,ydate
22:49:48  48  /

Table created.

Elapsed: 00:00:03.95
22:49:52 SQL> 
22:49:52 SQL> -- rpt
22:49:52 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
22:49:52   2  GROUP BY pair,trend,gatt,gattn
22:49:52   3  ORDER BY pair,trend,gatt,gattn
22:49:52   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001529	    1452    .041522066
eur_usd 	-1 nup up  -.00365153	    4054    .155643414
eur_usd 	-1 up  nup .003613678	    4222    -.20597561
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000011329	    1697    .040231363
eur_usd 	 1 nup up  -.00352444	    4219    .104477329
eur_usd 	 1 up  nup .003735941	    4257    -.13864838

7 rows selected.

Elapsed: 00:00:00.05
22:49:52 SQL> 
22:49:52 SQL> -- rpt
22:49:52 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-17 21:55:00

Elapsed: 00:00:00.01
22:49:52 SQL> 
22:49:52 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
22:49:52 SQL> CREATE TABLE modsrc COMPRESS AS
22:49:52   2  SELECT
22:49:52   3  pair
22:49:52   4  ,ydate
22:49:52   5  ,prdate
22:49:52   6  ,trend
22:49:52   7  ,g4
22:49:52   8  ,gatt
22:49:52   9  ,gattn
22:49:52  10  ,dc12
22:49:52  11  FROM q15
22:49:52  12  /

Table created.

Elapsed: 00:00:00.08
22:49:52 SQL> 
22:49:52 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.24
22:49:52 SQL> 
22:49:52 SQL> -- rpt
22:49:52 SQL> 
22:49:52 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20813

Elapsed: 00:00:00.34
22:49:53 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19949

Elapsed: 00:00:00.01
22:49:53 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19949

Elapsed: 00:00:00.00
22:49:53 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19949

Elapsed: 00:00:00.00
22:49:53 SQL> 
22:49:53 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
22:49:53   2  GROUP BY pair,trend,gatt,gattn
22:49:53   3  ORDER BY pair,trend,gatt,gattn
22:49:53   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001529	    1452    .041522066
eur_usd 	-1 nup up  -.00365153	    4054    .155643414
eur_usd 	-1 up  nup .003613678	    4222    -.20597561
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000011329	    1697    .040231363
eur_usd 	 1 nup up  -.00352444	    4219    .104477329
eur_usd 	 1 up  nup .003735941	    4257    -.13864838

7 rows selected.

Elapsed: 00:00:00.03
22:49:53 SQL> 
22:49:53 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.15
22:49:53 SQL> CREATE TABLE eur_ms10 COMPRESS AS
22:49:53   2  SELECT
22:49:53   3  ydate
22:49:53   4  ,trend eur_trend
22:49:53   5  ,g4    eur_g4
22:49:53   6  ,gatt  eur_gatt
22:49:53   7  ,gattn eur_gattn
22:49:53   8  FROM modsrc
22:49:53   9  /

Table created.

Elapsed: 00:00:00.07
22:49:53 SQL> 
22:49:53 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
22:49:53 SQL> 
22:49:53 SQL> -- rpt
22:49:53 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 21:50:01 2010-12-17 13:05:00	10173	-.015675      .0165
	-1 2010-09-14 03:40:01 2010-12-17 21:55:00	 9728	  -.0164      .0167

Elapsed: 00:00:00.02
22:49:53 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 21:50:01 2010-12-17 13:05:00	      10173    -.015675       .0165
	-1 2010-09-14 03:40:01 2010-12-17 21:55:00	       9776	 -.0164       .0167

Elapsed: 00:00:00.01
22:49:53 SQL> 
22:49:53 SQL> -- I need a copy of q15 attributes
22:49:53 SQL> 
22:49:53 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.18
22:49:53 SQL> CREATE TABLE eur_att COMPRESS AS
22:49:53   2  SELECT
22:49:53   3  ydate
22:49:53   4  ,att00 eur_att00
22:49:53   5  ,att01 eur_att01
22:49:53   6  ,att02 eur_att02
22:49:53   7  ,att03 eur_att03
22:49:53   8  ,att04 eur_att04
22:49:53   9  ,att05 eur_att05
22:49:53  10  ,att06 eur_att06
22:49:53  11  ,att07 eur_att07
22:49:53  12  ,att08 eur_att08
22:49:53  13  ,att09 eur_att09
22:49:53  14  ,att10 eur_att10
22:49:53  15  ,att11 eur_att11
22:49:53  16  ,att12 eur_att12
22:49:53  17  ,att13 eur_att13
22:49:53  18  ,att14 eur_att14
22:49:53  19  ,att15 eur_att15
22:49:53  20  ,att16 eur_att16
22:49:53  21  ,att17 eur_att17
22:49:53  22  ,att18 eur_att18
22:49:53  23  ,att19 eur_att19
22:49:53  24  ,att20 eur_att20
22:49:53  25  ,att21 eur_att21
22:49:53  26  ,att22 eur_att22
22:49:53  27  ,att23 eur_att23
22:49:53  28  ,att24 eur_att24
22:49:53  29  ,att25 eur_att25
22:49:53  30  ,att26 eur_att26
22:49:53  31  ,att27 eur_att27
22:49:53  32  ,att28 eur_att28
22:49:53  33  ,att29 eur_att29
22:49:53  34  ,att30 eur_att30
22:49:53  35  ,att31 eur_att31
22:49:53  36  ,att32 eur_att32
22:49:53  37  FROM q15
22:49:53  38  /

Table created.

Elapsed: 00:00:00.14
22:49:54 SQL> 
22:49:54 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.44
22:49:54 SQL> 
22:49:54 SQL> -- rpt
22:49:54 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19949

Elapsed: 00:00:00.01
22:49:54 SQL> 
22:49:54 SQL> --
22:49:54 SQL> -- aud10.sql
22:49:54 SQL> --
22:49:54 SQL> 
22:49:54 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:49:54 SQL> 
22:49:54 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.30
22:49:54 SQL> 
22:49:54 SQL> -- I created di5min here:
22:49:54 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
22:49:54 SQL> 
22:49:54 SQL> CREATE OR REPLACE VIEW q11 AS
22:49:54   2  SELECT
22:49:54   3  pair
22:49:54   4  ,ydate
22:49:54   5  ,prdate
22:49:54   6  ,rownum rnum -- acts as t in my time-series
22:49:54   7  ,clse
22:49:54   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
22:49:54   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
22:49:54  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
22:49:54  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
22:49:54  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
22:49:54  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
22:49:54  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
22:49:54  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
22:49:54  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
22:49:54  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
22:49:54  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
22:49:54  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
22:49:54  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
22:49:54  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
22:49:54  22  FROM di5min WHERE pair LIKE'%aud%'
22:49:54  23  ORDER BY ydate
22:49:54  24  /

View created.

Elapsed: 00:00:00.05
22:49:54 SQL> 
22:49:54 SQL> -- rpt
22:49:54 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20810

Elapsed: 00:00:00.34
22:49:55 SQL> 
22:49:55 SQL> -- Calc deltas and gains
22:49:55 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.29
22:49:55 SQL> 
22:49:55 SQL> CREATE TABLE q13 COMPRESS AS
22:49:55   2  SELECT
22:49:55   3  pair
22:49:55   4  ,ydate
22:49:55   5  ,prdate
22:49:55   6  ,rnum
22:49:55   7  ,lg4
22:49:55   8  ,lg8
22:49:55   9  ,lg12
22:49:55  10  ,ld4
22:49:55  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
22:49:55  12  -- step by 1
22:49:55  13  ,clse-lg1 d01
22:49:55  14  ,lg1-lg2	d12
22:49:55  15  ,lg2-lg3	d23
22:49:55  16  ,lg3-lg4	d34
22:49:55  17  ,lg4-lg5	d45
22:49:55  18  ,lg5-lg6	d56
22:49:55  19  ,lg6-lg7	d67
22:49:55  20  ,lg7-lg8	d78
22:49:55  21  ,lg8-lg9	d89
22:49:55  22  -- step by 2
22:49:55  23  ,clse-lg2 d02
22:49:55  24  ,lg2-lg4 d24
22:49:55  25  ,lg4-lg6 d46
22:49:55  26  ,lg6-lg8 d68
22:49:55  27  -- step by 3
22:49:55  28  ,clse-lg3 d03
22:49:55  29  ,lg3-lg6	d36
22:49:55  30  ,lg6-lg9	d69
22:49:55  31  ,lg9-lg12 d912
22:49:55  32  -- step by 4
22:49:55  33  ,clse-lg4 d04
22:49:55  34  ,lg4-lg8	d48
22:49:55  35  ,lg8-lg12 d812
22:49:55  36  ,lg6-lg12 d612
22:49:55  37  ,lg12-lg18 d1218
22:49:55  38  --
22:49:55  39  ,ABS(clse-lg1)dc1
22:49:55  40  ,ABS(clse-lg2)dc2
22:49:55  41  ,ABS(clse-lg3)dc3
22:49:55  42  ,ABS(clse-lg4)dc4
22:49:55  43  ,ABS(clse-lg5)dc5
22:49:55  44  ,ABS(clse-lg6)dc6
22:49:55  45  ,ABS(clse-lg7)dc7
22:49:55  46  ,ABS(clse-lg8)dc8
22:49:55  47  ,ABS(clse-lg9)dc9
22:49:55  48  ,ABS(clse-lg12)dc12
22:49:55  49  ,ABS(clse-lg18)dc18
22:49:55  50  ,ABS(clse-lg24)dc24
22:49:55  51  ,ABS(clse-lg72)dc72
22:49:55  52  ,(ld4-clse) ug4
22:49:55  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
22:49:55  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
22:49:55  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
22:49:55  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
22:49:55  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:49:55  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
22:49:55  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:49:55  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
22:49:55  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:49:55  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:49:55  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
22:49:55  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:49:55  65  ,0+TO_CHAR(ydate,'D')d
22:49:55  66  ,0+TO_CHAR(ydate,'W')w
22:49:55  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:49:55  68  FROM q11
22:49:55  69  -- I dont want any NULL values from the LAG() functions:
22:49:55  70  WHERE lg72 > 0
22:49:55  71  ORDER BY pair,ydate
22:49:55  72  /

Table created.

Elapsed: 00:00:01.69
22:49:57 SQL> 
22:49:57 SQL> -- rpt
22:49:57 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10309
	-1	    9637

Elapsed: 00:00:00.03
22:49:57 SQL> 
22:49:57 SQL> -- Calc gains and ntiles
22:49:57 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.15
22:49:57 SQL> CREATE TABLE q15 COMPRESS AS
22:49:57   2  SELECT
22:49:57   3  pair
22:49:57   4  ,ydate
22:49:57   5  ,prdate -- Should be unique
22:49:57   6  ,trend -- +1 or -1
22:49:57   7  ,dc12 -- next statement needs this
22:49:57   8  -- Use NTILE() to derive some attributes
22:49:57   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
22:49:57  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
22:49:57  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
22:49:57  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
22:49:57  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
22:49:57  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
22:49:57  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
22:49:57  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
22:49:57  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
22:49:57  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
22:49:57  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
22:49:57  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
22:49:57  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
22:49:57  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
22:49:57  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
22:49:57  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
22:49:57  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
22:49:57  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
22:49:57  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
22:49:57  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
22:49:57  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
22:49:57  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
22:49:57  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
22:49:57  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
22:49:57  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
22:49:57  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
22:49:57  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
22:49:57  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
22:49:57  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:49:57  38  ,hh    att28
22:49:57  39  ,d     att29
22:49:57  40  ,w     att30
22:49:57  41  ,mpm   att31
22:49:57  42  ,trend att32
22:49:57  43  ,ug4 g4
22:49:57  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
22:49:57  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
22:49:57  46  FROM q13
22:49:57  47  ORDER BY pair,ydate
22:49:57  48  /

Table created.

Elapsed: 00:00:03.94
22:50:01 SQL> 
22:50:01 SQL> -- rpt
22:50:01 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
22:50:01   2  GROUP BY pair,trend,gatt,gattn
22:50:01   3  ORDER BY pair,trend,gatt,gattn
22:50:01   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000029919	    1550    -.03916318
aud_usd 	-1 nup up  -.00317206	    3635    .000090517
aud_usd 	-1 up  nup .002975828	    4409    .027135902
aud_usd 	-1			       0
aud_usd 	 1 nup nup 1.2533E-06	    1895    .017464771
aud_usd 	 1 nup up  -.00289696	    4086     .05379578
aud_usd 	 1 up  nup  .00296577	    4323    -.17636016
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
22:50:01 SQL> 
22:50:01 SQL> -- rpt
22:50:01 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-17 21:55:00

Elapsed: 00:00:00.01
22:50:01 SQL> 
22:50:01 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
22:50:01 SQL> CREATE TABLE modsrc COMPRESS AS
22:50:01   2  SELECT
22:50:01   3  pair
22:50:01   4  ,ydate
22:50:01   5  ,prdate
22:50:01   6  ,trend
22:50:01   7  ,g4
22:50:01   8  ,gatt
22:50:01   9  ,gattn
22:50:01  10  ,dc12
22:50:01  11  FROM q15
22:50:01  12  /

Table created.

Elapsed: 00:00:00.14
22:50:01 SQL> 
22:50:01 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
22:50:01 SQL> 
22:50:01 SQL> -- rpt
22:50:01 SQL> 
22:50:01 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20810

Elapsed: 00:00:00.35
22:50:02 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19946

Elapsed: 00:00:00.01
22:50:02 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19946

Elapsed: 00:00:00.00
22:50:02 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19946

Elapsed: 00:00:00.00
22:50:02 SQL> 
22:50:02 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
22:50:02   2  GROUP BY pair,trend,gatt,gattn
22:50:02   3  ORDER BY pair,trend,gatt,gattn
22:50:02   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000029919	    1550    -.03916318
aud_usd 	-1 nup up  -.00317206	    3635    .000090517
aud_usd 	-1 up  nup .002975828	    4409    .027135902
aud_usd 	-1			       0
aud_usd 	 1 nup nup 1.2533E-06	    1895    .017464771
aud_usd 	 1 nup up  -.00289696	    4086     .05379578
aud_usd 	 1 up  nup  .00296577	    4323    -.17636016
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
22:50:02 SQL> 
22:50:02 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.16
22:50:02 SQL> CREATE TABLE aud_ms10 COMPRESS AS
22:50:02   2  SELECT
22:50:02   3  ydate
22:50:02   4  ,trend aud_trend
22:50:02   5  ,g4    aud_g4
22:50:02   6  ,gatt  aud_gatt
22:50:02   7  ,gattn aud_gattn
22:50:02   8  FROM modsrc
22:50:02   9  /

Table created.

Elapsed: 00:00:00.05
22:50:02 SQL> 
22:50:02 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
22:50:02 SQL> 
22:50:02 SQL> -- rpt
22:50:02 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 21:50:01 2010-12-17 20:45:00	10304	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-17 21:55:00	 9594	   -.017      .0131

Elapsed: 00:00:00.02
22:50:02 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 21:50:01 2010-12-17 20:45:00	      10309	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-17 21:55:00	       9637	  -.017       .0131

Elapsed: 00:00:00.02
22:50:02 SQL> 
22:50:02 SQL> -- I need a copy of q15 attributes
22:50:02 SQL> 
22:50:02 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.16
22:50:02 SQL> CREATE TABLE aud_att COMPRESS AS
22:50:02   2  SELECT
22:50:02   3  ydate
22:50:02   4  ,att00 aud_att00
22:50:02   5  ,att01 aud_att01
22:50:02   6  ,att02 aud_att02
22:50:02   7  ,att03 aud_att03
22:50:02   8  ,att04 aud_att04
22:50:02   9  ,att05 aud_att05
22:50:02  10  ,att06 aud_att06
22:50:02  11  ,att07 aud_att07
22:50:02  12  ,att08 aud_att08
22:50:02  13  ,att09 aud_att09
22:50:02  14  ,att10 aud_att10
22:50:02  15  ,att11 aud_att11
22:50:02  16  ,att12 aud_att12
22:50:02  17  ,att13 aud_att13
22:50:02  18  ,att14 aud_att14
22:50:02  19  ,att15 aud_att15
22:50:02  20  ,att16 aud_att16
22:50:02  21  ,att17 aud_att17
22:50:02  22  ,att18 aud_att18
22:50:02  23  ,att19 aud_att19
22:50:02  24  ,att20 aud_att20
22:50:02  25  ,att21 aud_att21
22:50:02  26  ,att22 aud_att22
22:50:02  27  ,att23 aud_att23
22:50:02  28  ,att24 aud_att24
22:50:02  29  ,att25 aud_att25
22:50:02  30  ,att26 aud_att26
22:50:02  31  ,att27 aud_att27
22:50:02  32  ,att28 aud_att28
22:50:02  33  ,att29 aud_att29
22:50:02  34  ,att30 aud_att30
22:50:02  35  ,att31 aud_att31
22:50:02  36  ,att32 aud_att32
22:50:02  37  FROM q15
22:50:02  38  /

Table created.

Elapsed: 00:00:00.13
22:50:02 SQL> 
22:50:02 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
22:50:03 SQL> 
22:50:03 SQL> -- rpt
22:50:03 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19946

Elapsed: 00:00:00.00
22:50:03 SQL> 
22:50:03 SQL> --
22:50:03 SQL> -- gbp10.sql
22:50:03 SQL> --
22:50:03 SQL> 
22:50:03 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:50:03 SQL> 
22:50:03 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.74
22:50:04 SQL> 
22:50:04 SQL> -- I created di5min here:
22:50:04 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
22:50:04 SQL> 
22:50:04 SQL> CREATE OR REPLACE VIEW q11 AS
22:50:04   2  SELECT
22:50:04   3  pair
22:50:04   4  ,ydate
22:50:04   5  ,prdate
22:50:04   6  ,rownum rnum -- acts as t in my time-series
22:50:04   7  ,clse
22:50:04   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
22:50:04   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
22:50:04  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
22:50:04  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
22:50:04  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
22:50:04  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
22:50:04  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
22:50:04  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
22:50:04  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
22:50:04  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
22:50:04  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
22:50:04  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
22:50:04  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
22:50:04  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
22:50:04  22  FROM di5min WHERE pair LIKE'%gbp%'
22:50:04  23  ORDER BY ydate
22:50:04  24  /

View created.

Elapsed: 00:00:00.05
22:50:04 SQL> 
22:50:04 SQL> -- rpt
22:50:04 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20812

Elapsed: 00:00:00.35
22:50:04 SQL> 
22:50:04 SQL> -- Calc deltas and gains
22:50:04 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.25
22:50:04 SQL> 
22:50:04 SQL> CREATE TABLE q13 COMPRESS AS
22:50:04   2  SELECT
22:50:04   3  pair
22:50:04   4  ,ydate
22:50:04   5  ,prdate
22:50:04   6  ,rnum
22:50:04   7  ,lg4
22:50:04   8  ,lg8
22:50:04   9  ,lg12
22:50:04  10  ,ld4
22:50:04  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
22:50:04  12  -- step by 1
22:50:04  13  ,clse-lg1 d01
22:50:04  14  ,lg1-lg2	d12
22:50:04  15  ,lg2-lg3	d23
22:50:04  16  ,lg3-lg4	d34
22:50:04  17  ,lg4-lg5	d45
22:50:04  18  ,lg5-lg6	d56
22:50:04  19  ,lg6-lg7	d67
22:50:04  20  ,lg7-lg8	d78
22:50:04  21  ,lg8-lg9	d89
22:50:04  22  -- step by 2
22:50:04  23  ,clse-lg2 d02
22:50:04  24  ,lg2-lg4 d24
22:50:04  25  ,lg4-lg6 d46
22:50:04  26  ,lg6-lg8 d68
22:50:04  27  -- step by 3
22:50:04  28  ,clse-lg3 d03
22:50:04  29  ,lg3-lg6	d36
22:50:04  30  ,lg6-lg9	d69
22:50:04  31  ,lg9-lg12 d912
22:50:04  32  -- step by 4
22:50:04  33  ,clse-lg4 d04
22:50:04  34  ,lg4-lg8	d48
22:50:04  35  ,lg8-lg12 d812
22:50:04  36  ,lg6-lg12 d612
22:50:04  37  ,lg12-lg18 d1218
22:50:04  38  --
22:50:04  39  ,ABS(clse-lg1)dc1
22:50:04  40  ,ABS(clse-lg2)dc2
22:50:04  41  ,ABS(clse-lg3)dc3
22:50:04  42  ,ABS(clse-lg4)dc4
22:50:04  43  ,ABS(clse-lg5)dc5
22:50:04  44  ,ABS(clse-lg6)dc6
22:50:04  45  ,ABS(clse-lg7)dc7
22:50:04  46  ,ABS(clse-lg8)dc8
22:50:04  47  ,ABS(clse-lg9)dc9
22:50:04  48  ,ABS(clse-lg12)dc12
22:50:04  49  ,ABS(clse-lg18)dc18
22:50:04  50  ,ABS(clse-lg24)dc24
22:50:04  51  ,ABS(clse-lg72)dc72
22:50:04  52  ,(ld4-clse) ug4
22:50:04  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
22:50:04  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
22:50:04  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
22:50:04  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
22:50:04  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:50:04  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
22:50:04  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:50:04  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
22:50:04  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:50:04  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:50:04  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
22:50:04  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:50:04  65  ,0+TO_CHAR(ydate,'D')d
22:50:04  66  ,0+TO_CHAR(ydate,'W')w
22:50:04  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:50:04  68  FROM q11
22:50:04  69  -- I dont want any NULL values from the LAG() functions:
22:50:04  70  WHERE lg72 > 0
22:50:04  71  ORDER BY pair,ydate
22:50:04  72  /

Table created.

Elapsed: 00:00:01.70
22:50:06 SQL> 
22:50:06 SQL> -- rpt
22:50:06 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9651
	-1	   10297

Elapsed: 00:00:00.03
22:50:06 SQL> 
22:50:06 SQL> -- Calc gains and ntiles
22:50:06 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.20
22:50:06 SQL> CREATE TABLE q15 COMPRESS AS
22:50:06   2  SELECT
22:50:06   3  pair
22:50:06   4  ,ydate
22:50:06   5  ,prdate -- Should be unique
22:50:06   6  ,trend -- +1 or -1
22:50:06   7  ,dc12 -- next statement needs this
22:50:06   8  -- Use NTILE() to derive some attributes
22:50:06   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
22:50:06  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
22:50:06  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
22:50:06  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
22:50:06  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
22:50:06  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
22:50:06  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
22:50:06  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
22:50:06  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
22:50:06  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
22:50:06  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
22:50:06  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
22:50:06  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
22:50:06  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
22:50:06  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
22:50:06  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
22:50:06  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
22:50:06  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
22:50:06  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
22:50:06  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
22:50:06  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
22:50:06  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
22:50:06  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
22:50:06  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
22:50:06  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
22:50:06  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
22:50:06  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
22:50:06  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
22:50:06  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:50:06  38  ,hh    att28
22:50:06  39  ,d     att29
22:50:06  40  ,w     att30
22:50:06  41  ,mpm   att31
22:50:06  42  ,trend att32
22:50:06  43  ,ug4 g4
22:50:06  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
22:50:06  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
22:50:06  46  FROM q13
22:50:06  47  ORDER BY pair,ydate
22:50:06  48  /

Table created.

Elapsed: 00:00:03.98
22:50:10 SQL> 
22:50:10 SQL> -- rpt
22:50:10 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
22:50:10   2  GROUP BY pair,trend,gatt,gattn
22:50:10   3  ORDER BY pair,trend,gatt,gattn
22:50:10   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -1.187E-06	    1812     .05932405
gbp_usd 	-1 nup up  -.00335021	    4074    -.00130886
gbp_usd 	-1 up  nup .003122072	    4363    -.08757181
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup .000014682	    1650    .009141743
gbp_usd 	 1 nup up  -.00320098	    4122    .009597508
gbp_usd 	 1 up  nup .003543993	    3879    -.16652449

7 rows selected.

Elapsed: 00:00:00.05
22:50:10 SQL> 
22:50:10 SQL> -- rpt
22:50:10 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-17 21:55:00

Elapsed: 00:00:00.01
22:50:10 SQL> 
22:50:10 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.17
22:50:10 SQL> CREATE TABLE modsrc COMPRESS AS
22:50:10   2  SELECT
22:50:10   3  pair
22:50:10   4  ,ydate
22:50:10   5  ,prdate
22:50:10   6  ,trend
22:50:10   7  ,g4
22:50:10   8  ,gatt
22:50:10   9  ,gattn
22:50:10  10  ,dc12
22:50:10  11  FROM q15
22:50:10  12  /

Table created.

Elapsed: 00:00:00.09
22:50:10 SQL> 
22:50:10 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
22:50:11 SQL> 
22:50:11 SQL> -- rpt
22:50:11 SQL> 
22:50:11 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20812

Elapsed: 00:00:00.33
22:50:11 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19948

Elapsed: 00:00:00.01
22:50:11 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19948

Elapsed: 00:00:00.00
22:50:11 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19948

Elapsed: 00:00:00.01
22:50:11 SQL> 
22:50:11 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
22:50:11   2  GROUP BY pair,trend,gatt,gattn
22:50:11   3  ORDER BY pair,trend,gatt,gattn
22:50:11   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -1.187E-06	    1812     .05932405
gbp_usd 	-1 nup up  -.00335021	    4074    -.00130886
gbp_usd 	-1 up  nup .003122072	    4363    -.08757181
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup .000014682	    1650    .009141743
gbp_usd 	 1 nup up  -.00320098	    4122    .009597508
gbp_usd 	 1 up  nup .003543993	    3879    -.16652449

7 rows selected.

Elapsed: 00:00:00.02
22:50:11 SQL> 
22:50:11 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.10
22:50:11 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
22:50:11   2  SELECT
22:50:11   3  ydate
22:50:11   4  ,trend gbp_trend
22:50:11   5  ,g4    gbp_g4
22:50:11   6  ,gatt  gbp_gatt
22:50:11   7  ,gattn gbp_gattn
22:50:11   8  FROM modsrc
22:50:11   9  /

Table created.

Elapsed: 00:00:00.06
22:50:11 SQL> 
22:50:11 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
22:50:11 SQL> 
22:50:11 SQL> -- rpt
22:50:11 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 22:00:01 2010-12-17 10:20:00	 9651	  -.0194      .0179
	-1 2010-09-13 21:50:01 2010-12-17 21:55:00	10249	  -.0153      .0159

Elapsed: 00:00:00.02
22:50:11 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 22:00:01 2010-12-17 10:20:00	       9651	 -.0194       .0179
	-1 2010-09-13 21:50:01 2010-12-17 21:55:00	      10297	 -.0153       .0159

Elapsed: 00:00:00.01
22:50:11 SQL> 
22:50:11 SQL> -- I need a copy of q15 attributes
22:50:11 SQL> 
22:50:11 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.15
22:50:12 SQL> CREATE TABLE gbp_att COMPRESS AS
22:50:12   2  SELECT
22:50:12   3  ydate
22:50:12   4  ,att00 gbp_att00
22:50:12   5  ,att01 gbp_att01
22:50:12   6  ,att02 gbp_att02
22:50:12   7  ,att03 gbp_att03
22:50:12   8  ,att04 gbp_att04
22:50:12   9  ,att05 gbp_att05
22:50:12  10  ,att06 gbp_att06
22:50:12  11  ,att07 gbp_att07
22:50:12  12  ,att08 gbp_att08
22:50:12  13  ,att09 gbp_att09
22:50:12  14  ,att10 gbp_att10
22:50:12  15  ,att11 gbp_att11
22:50:12  16  ,att12 gbp_att12
22:50:12  17  ,att13 gbp_att13
22:50:12  18  ,att14 gbp_att14
22:50:12  19  ,att15 gbp_att15
22:50:12  20  ,att16 gbp_att16
22:50:12  21  ,att17 gbp_att17
22:50:12  22  ,att18 gbp_att18
22:50:12  23  ,att19 gbp_att19
22:50:12  24  ,att20 gbp_att20
22:50:12  25  ,att21 gbp_att21
22:50:12  26  ,att22 gbp_att22
22:50:12  27  ,att23 gbp_att23
22:50:12  28  ,att24 gbp_att24
22:50:12  29  ,att25 gbp_att25
22:50:12  30  ,att26 gbp_att26
22:50:12  31  ,att27 gbp_att27
22:50:12  32  ,att28 gbp_att28
22:50:12  33  ,att29 gbp_att29
22:50:12  34  ,att30 gbp_att30
22:50:12  35  ,att31 gbp_att31
22:50:12  36  ,att32 gbp_att32
22:50:12  37  FROM q15
22:50:12  38  /

Table created.

Elapsed: 00:00:00.13
22:50:12 SQL> 
22:50:12 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
22:50:12 SQL> 
22:50:12 SQL> -- rpt
22:50:12 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19948

Elapsed: 00:00:00.00
22:50:12 SQL> 
22:50:12 SQL> --
22:50:12 SQL> -- jpy10.sql
22:50:12 SQL> --
22:50:12 SQL> 
22:50:12 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:50:12 SQL> 
22:50:12 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.33
22:50:12 SQL> 
22:50:12 SQL> -- I created di5min here:
22:50:12 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
22:50:12 SQL> 
22:50:12 SQL> CREATE OR REPLACE VIEW q11 AS
22:50:12   2  SELECT
22:50:12   3  pair
22:50:12   4  ,ydate
22:50:12   5  ,prdate
22:50:12   6  ,rownum rnum -- acts as t in my time-series
22:50:12   7  ,clse
22:50:12   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
22:50:12   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
22:50:12  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
22:50:12  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
22:50:12  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
22:50:12  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
22:50:12  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
22:50:12  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
22:50:12  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
22:50:12  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
22:50:12  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
22:50:12  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
22:50:12  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
22:50:12  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
22:50:12  22  FROM di5min WHERE pair LIKE'%jpy%'
22:50:12  23  ORDER BY ydate
22:50:12  24  /

View created.

Elapsed: 00:00:00.05
22:50:13 SQL> 
22:50:13 SQL> -- rpt
22:50:13 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20813

Elapsed: 00:00:00.35
22:50:13 SQL> 
22:50:13 SQL> -- Calc deltas and gains
22:50:13 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.25
22:50:13 SQL> 
22:50:13 SQL> CREATE TABLE q13 COMPRESS AS
22:50:13   2  SELECT
22:50:13   3  pair
22:50:13   4  ,ydate
22:50:13   5  ,prdate
22:50:13   6  ,rnum
22:50:13   7  ,lg4
22:50:13   8  ,lg8
22:50:13   9  ,lg12
22:50:13  10  ,ld4
22:50:13  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
22:50:13  12  -- step by 1
22:50:13  13  ,clse-lg1 d01
22:50:13  14  ,lg1-lg2	d12
22:50:13  15  ,lg2-lg3	d23
22:50:13  16  ,lg3-lg4	d34
22:50:13  17  ,lg4-lg5	d45
22:50:13  18  ,lg5-lg6	d56
22:50:13  19  ,lg6-lg7	d67
22:50:13  20  ,lg7-lg8	d78
22:50:13  21  ,lg8-lg9	d89
22:50:13  22  -- step by 2
22:50:13  23  ,clse-lg2 d02
22:50:13  24  ,lg2-lg4 d24
22:50:13  25  ,lg4-lg6 d46
22:50:13  26  ,lg6-lg8 d68
22:50:13  27  -- step by 3
22:50:13  28  ,clse-lg3 d03
22:50:13  29  ,lg3-lg6	d36
22:50:13  30  ,lg6-lg9	d69
22:50:13  31  ,lg9-lg12 d912
22:50:13  32  -- step by 4
22:50:13  33  ,clse-lg4 d04
22:50:13  34  ,lg4-lg8	d48
22:50:13  35  ,lg8-lg12 d812
22:50:13  36  ,lg6-lg12 d612
22:50:13  37  ,lg12-lg18 d1218
22:50:13  38  --
22:50:13  39  ,ABS(clse-lg1)dc1
22:50:13  40  ,ABS(clse-lg2)dc2
22:50:13  41  ,ABS(clse-lg3)dc3
22:50:13  42  ,ABS(clse-lg4)dc4
22:50:13  43  ,ABS(clse-lg5)dc5
22:50:13  44  ,ABS(clse-lg6)dc6
22:50:13  45  ,ABS(clse-lg7)dc7
22:50:13  46  ,ABS(clse-lg8)dc8
22:50:13  47  ,ABS(clse-lg9)dc9
22:50:13  48  ,ABS(clse-lg12)dc12
22:50:13  49  ,ABS(clse-lg18)dc18
22:50:13  50  ,ABS(clse-lg24)dc24
22:50:13  51  ,ABS(clse-lg72)dc72
22:50:13  52  ,(ld4-clse) ug4
22:50:13  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
22:50:13  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
22:50:13  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
22:50:13  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
22:50:13  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:50:13  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
22:50:13  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:50:13  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
22:50:13  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:50:13  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:50:13  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
22:50:13  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:50:13  65  ,0+TO_CHAR(ydate,'D')d
22:50:13  66  ,0+TO_CHAR(ydate,'W')w
22:50:13  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:50:13  68  FROM q11
22:50:13  69  -- I dont want any NULL values from the LAG() functions:
22:50:13  70  WHERE lg72 > 0
22:50:13  71  ORDER BY pair,ydate
22:50:13  72  /

Table created.

Elapsed: 00:00:01.66
22:50:15 SQL> 
22:50:15 SQL> -- rpt
22:50:15 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9320
	-1	   10629

Elapsed: 00:00:00.03
22:50:15 SQL> 
22:50:15 SQL> -- Calc gains and ntiles
22:50:15 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.16
22:50:15 SQL> CREATE TABLE q15 COMPRESS AS
22:50:15   2  SELECT
22:50:15   3  pair
22:50:15   4  ,ydate
22:50:15   5  ,prdate -- Should be unique
22:50:15   6  ,trend -- +1 or -1
22:50:15   7  ,dc12 -- next statement needs this
22:50:15   8  -- Use NTILE() to derive some attributes
22:50:15   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
22:50:15  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
22:50:15  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
22:50:15  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
22:50:15  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
22:50:15  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
22:50:15  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
22:50:15  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
22:50:15  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
22:50:15  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
22:50:15  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
22:50:15  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
22:50:15  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
22:50:15  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
22:50:15  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
22:50:15  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
22:50:15  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
22:50:15  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
22:50:15  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
22:50:15  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
22:50:15  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
22:50:15  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
22:50:15  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
22:50:15  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
22:50:15  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
22:50:15  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
22:50:15  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
22:50:15  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
22:50:15  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:50:15  38  ,hh    att28
22:50:15  39  ,d     att29
22:50:15  40  ,w     att30
22:50:15  41  ,mpm   att31
22:50:15  42  ,trend att32
22:50:15  43  ,ug4 g4
22:50:15  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
22:50:15  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
22:50:15  46  FROM q13
22:50:15  47  ORDER BY pair,ydate
22:50:15  48  /

Table created.

Elapsed: 00:00:04.03
22:50:19 SQL> 
22:50:19 SQL> -- rpt
22:50:19 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
22:50:19   2  GROUP BY pair,trend,gatt,gattn
22:50:19   3  ORDER BY pair,trend,gatt,gattn
22:50:19   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     176
usd_jpy 	-1 nup up  -.13427073	    5125    .021281788
usd_jpy 	-1 up  nup .143255135	    5307    .057857429
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13485212	    5021    -.01351165
usd_jpy 	 1 up  nup .152197929	    4105    .184589759
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
22:50:19 SQL> 
22:50:19 SQL> -- rpt
22:50:19 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-17 21:55:00

Elapsed: 00:00:00.02
22:50:19 SQL> 
22:50:19 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
22:50:19 SQL> CREATE TABLE modsrc COMPRESS AS
22:50:19   2  SELECT
22:50:19   3  pair
22:50:19   4  ,ydate
22:50:19   5  ,prdate
22:50:19   6  ,trend
22:50:19   7  ,g4
22:50:19   8  ,gatt
22:50:19   9  ,gattn
22:50:19  10  ,dc12
22:50:19  11  FROM q15
22:50:19  12  /

Table created.

Elapsed: 00:00:00.10
22:50:19 SQL> 
22:50:19 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
22:50:20 SQL> 
22:50:20 SQL> -- rpt
22:50:20 SQL> 
22:50:20 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20813

Elapsed: 00:00:00.34
22:50:20 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19949

Elapsed: 00:00:00.00
22:50:20 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19949

Elapsed: 00:00:00.01
22:50:20 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19949

Elapsed: 00:00:00.01
22:50:20 SQL> 
22:50:20 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
22:50:20   2  GROUP BY pair,trend,gatt,gattn
22:50:20   3  ORDER BY pair,trend,gatt,gattn
22:50:20   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     176
usd_jpy 	-1 nup up  -.13427073	    5125    .021281788
usd_jpy 	-1 up  nup .143255135	    5307    .057857429
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13485212	    5021    -.01351165
usd_jpy 	 1 up  nup .152197929	    4105    .184589759
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
22:50:20 SQL> 
22:50:20 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.15
22:50:20 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
22:50:20   2  SELECT
22:50:20   3  ydate
22:50:20   4  ,trend jpy_trend
22:50:20   5  ,g4    jpy_g4
22:50:20   6  ,gatt  jpy_gatt
22:50:20   7  ,gattn jpy_gattn
22:50:20   8  FROM modsrc
22:50:20   9  /

Table created.

Elapsed: 00:00:00.07
22:50:20 SQL> 
22:50:20 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
22:50:20 SQL> 
22:50:20 SQL> -- rpt
22:50:20 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 05:55:01 2010-12-17 21:55:00	 9293	   -1.07	1.5
	-1 2010-09-13 21:50:01 2010-12-17 20:55:00	10608	 -1.0775       1.99

Elapsed: 00:00:00.02
22:50:20 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 05:55:01 2010-12-17 21:55:00	       9320	  -1.07 	1.5
	-1 2010-09-13 21:50:01 2010-12-17 20:55:00	      10629	-1.0775        1.99

Elapsed: 00:00:00.01
22:50:20 SQL> 
22:50:20 SQL> -- I need a copy of q15 attributes
22:50:20 SQL> 
22:50:20 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.12
22:50:20 SQL> CREATE TABLE jpy_att COMPRESS AS
22:50:20   2  SELECT
22:50:20   3  ydate
22:50:20   4  ,att00 jpy_att00
22:50:20   5  ,att01 jpy_att01
22:50:20   6  ,att02 jpy_att02
22:50:20   7  ,att03 jpy_att03
22:50:20   8  ,att04 jpy_att04
22:50:20   9  ,att05 jpy_att05
22:50:20  10  ,att06 jpy_att06
22:50:20  11  ,att07 jpy_att07
22:50:20  12  ,att08 jpy_att08
22:50:20  13  ,att09 jpy_att09
22:50:20  14  ,att10 jpy_att10
22:50:20  15  ,att11 jpy_att11
22:50:20  16  ,att12 jpy_att12
22:50:20  17  ,att13 jpy_att13
22:50:20  18  ,att14 jpy_att14
22:50:20  19  ,att15 jpy_att15
22:50:20  20  ,att16 jpy_att16
22:50:20  21  ,att17 jpy_att17
22:50:20  22  ,att18 jpy_att18
22:50:20  23  ,att19 jpy_att19
22:50:20  24  ,att20 jpy_att20
22:50:20  25  ,att21 jpy_att21
22:50:20  26  ,att22 jpy_att22
22:50:20  27  ,att23 jpy_att23
22:50:20  28  ,att24 jpy_att24
22:50:20  29  ,att25 jpy_att25
22:50:20  30  ,att26 jpy_att26
22:50:20  31  ,att27 jpy_att27
22:50:20  32  ,att28 jpy_att28
22:50:20  33  ,att29 jpy_att29
22:50:20  34  ,att30 jpy_att30
22:50:20  35  ,att31 jpy_att31
22:50:20  36  ,att32 jpy_att32
22:50:20  37  FROM q15
22:50:20  38  /

Table created.

Elapsed: 00:00:00.15
22:50:21 SQL> 
22:50:21 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.44
22:50:21 SQL> 
22:50:21 SQL> -- rpt
22:50:21 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19949

Elapsed: 00:00:00.00
22:50:21 SQL> 
22:50:21 SQL> --
22:50:21 SQL> -- cad10.sql
22:50:21 SQL> --
22:50:21 SQL> 
22:50:21 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:50:21 SQL> 
22:50:21 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.50
22:50:22 SQL> 
22:50:22 SQL> -- I created di5min here:
22:50:22 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
22:50:22 SQL> 
22:50:22 SQL> CREATE OR REPLACE VIEW q11 AS
22:50:22   2  SELECT
22:50:22   3  pair
22:50:22   4  ,ydate
22:50:22   5  ,prdate
22:50:22   6  ,rownum rnum -- acts as t in my time-series
22:50:22   7  ,clse
22:50:22   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
22:50:22   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
22:50:22  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
22:50:22  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
22:50:22  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
22:50:22  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
22:50:22  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
22:50:22  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
22:50:22  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
22:50:22  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
22:50:22  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
22:50:22  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
22:50:22  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
22:50:22  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
22:50:22  22  FROM di5min WHERE pair LIKE'%cad%'
22:50:22  23  ORDER BY ydate
22:50:22  24  /

View created.

Elapsed: 00:00:00.07
22:50:22 SQL> 
22:50:22 SQL> -- rpt
22:50:22 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20809

Elapsed: 00:00:00.36
22:50:22 SQL> 
22:50:22 SQL> -- Calc deltas and gains
22:50:22 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
22:50:22 SQL> 
22:50:22 SQL> CREATE TABLE q13 COMPRESS AS
22:50:22   2  SELECT
22:50:22   3  pair
22:50:22   4  ,ydate
22:50:22   5  ,prdate
22:50:22   6  ,rnum
22:50:22   7  ,lg4
22:50:22   8  ,lg8
22:50:22   9  ,lg12
22:50:22  10  ,ld4
22:50:22  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
22:50:22  12  -- step by 1
22:50:22  13  ,clse-lg1 d01
22:50:22  14  ,lg1-lg2	d12
22:50:22  15  ,lg2-lg3	d23
22:50:22  16  ,lg3-lg4	d34
22:50:22  17  ,lg4-lg5	d45
22:50:22  18  ,lg5-lg6	d56
22:50:22  19  ,lg6-lg7	d67
22:50:22  20  ,lg7-lg8	d78
22:50:22  21  ,lg8-lg9	d89
22:50:22  22  -- step by 2
22:50:22  23  ,clse-lg2 d02
22:50:22  24  ,lg2-lg4 d24
22:50:22  25  ,lg4-lg6 d46
22:50:22  26  ,lg6-lg8 d68
22:50:22  27  -- step by 3
22:50:22  28  ,clse-lg3 d03
22:50:22  29  ,lg3-lg6	d36
22:50:22  30  ,lg6-lg9	d69
22:50:22  31  ,lg9-lg12 d912
22:50:22  32  -- step by 4
22:50:22  33  ,clse-lg4 d04
22:50:22  34  ,lg4-lg8	d48
22:50:22  35  ,lg8-lg12 d812
22:50:22  36  ,lg6-lg12 d612
22:50:22  37  ,lg12-lg18 d1218
22:50:22  38  --
22:50:22  39  ,ABS(clse-lg1)dc1
22:50:22  40  ,ABS(clse-lg2)dc2
22:50:22  41  ,ABS(clse-lg3)dc3
22:50:22  42  ,ABS(clse-lg4)dc4
22:50:22  43  ,ABS(clse-lg5)dc5
22:50:22  44  ,ABS(clse-lg6)dc6
22:50:22  45  ,ABS(clse-lg7)dc7
22:50:22  46  ,ABS(clse-lg8)dc8
22:50:22  47  ,ABS(clse-lg9)dc9
22:50:22  48  ,ABS(clse-lg12)dc12
22:50:22  49  ,ABS(clse-lg18)dc18
22:50:22  50  ,ABS(clse-lg24)dc24
22:50:22  51  ,ABS(clse-lg72)dc72
22:50:22  52  ,(ld4-clse) ug4
22:50:22  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
22:50:22  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
22:50:22  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
22:50:22  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
22:50:22  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:50:22  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
22:50:22  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:50:22  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
22:50:22  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:50:22  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:50:22  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
22:50:22  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:50:22  65  ,0+TO_CHAR(ydate,'D')d
22:50:22  66  ,0+TO_CHAR(ydate,'W')w
22:50:22  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:50:22  68  FROM q11
22:50:22  69  -- I dont want any NULL values from the LAG() functions:
22:50:22  70  WHERE lg72 > 0
22:50:22  71  ORDER BY pair,ydate
22:50:22  72  /

Table created.

Elapsed: 00:00:01.72
22:50:24 SQL> 
22:50:24 SQL> -- rpt
22:50:24 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9185
	-1	   10760

Elapsed: 00:00:00.03
22:50:24 SQL> 
22:50:24 SQL> -- Calc gains and ntiles
22:50:24 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.18
22:50:24 SQL> CREATE TABLE q15 COMPRESS AS
22:50:24   2  SELECT
22:50:24   3  pair
22:50:24   4  ,ydate
22:50:24   5  ,prdate -- Should be unique
22:50:24   6  ,trend -- +1 or -1
22:50:24   7  ,dc12 -- next statement needs this
22:50:24   8  -- Use NTILE() to derive some attributes
22:50:24   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
22:50:24  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
22:50:24  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
22:50:24  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
22:50:24  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
22:50:24  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
22:50:24  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
22:50:24  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
22:50:24  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
22:50:24  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
22:50:24  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
22:50:24  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
22:50:24  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
22:50:24  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
22:50:24  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
22:50:24  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
22:50:24  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
22:50:24  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
22:50:24  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
22:50:24  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
22:50:24  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
22:50:24  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
22:50:24  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
22:50:24  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
22:50:24  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
22:50:24  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
22:50:24  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
22:50:24  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
22:50:24  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:50:24  38  ,hh    att28
22:50:24  39  ,d     att29
22:50:24  40  ,w     att30
22:50:24  41  ,mpm   att31
22:50:24  42  ,trend att32
22:50:24  43  ,ug4 g4
22:50:24  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
22:50:24  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
22:50:24  46  FROM q13
22:50:24  47  ORDER BY pair,ydate
22:50:24  48  /

Table created.

Elapsed: 00:00:03.99
22:50:28 SQL> 
22:50:28 SQL> -- rpt
22:50:28 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
22:50:28   2  GROUP BY pair,trend,gatt,gattn
22:50:28   3  ORDER BY pair,trend,gatt,gattn
22:50:28   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -3.003E-06	    2980    .015565561
usd_cad 	-1 nup up  -.00227221	    3950    .057642004
usd_cad 	-1 up  nup .002398388	    3830    .006942802
usd_cad 	 1 nup nup -.00001763	    2118     -.0613625
usd_cad 	 1 nup up  -.00236422	    3865      .0023038
usd_cad 	 1 up  nup  .00259698	    3154    -.00417422
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.05
22:50:28 SQL> 
22:50:28 SQL> -- rpt
22:50:28 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-17 21:55:00

Elapsed: 00:00:00.01
22:50:28 SQL> 
22:50:28 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.11
22:50:28 SQL> CREATE TABLE modsrc COMPRESS AS
22:50:28   2  SELECT
22:50:28   3  pair
22:50:28   4  ,ydate
22:50:28   5  ,prdate
22:50:28   6  ,trend
22:50:28   7  ,g4
22:50:28   8  ,gatt
22:50:28   9  ,gattn
22:50:28  10  ,dc12
22:50:28  11  FROM q15
22:50:28  12  /

Table created.

Elapsed: 00:00:00.09
22:50:28 SQL> 
22:50:28 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
22:50:29 SQL> 
22:50:29 SQL> -- rpt
22:50:29 SQL> 
22:50:29 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20809

Elapsed: 00:00:00.33
22:50:29 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19945

Elapsed: 00:00:00.01
22:50:29 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19945

Elapsed: 00:00:00.00
22:50:29 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19945

Elapsed: 00:00:00.01
22:50:29 SQL> 
22:50:29 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
22:50:29   2  GROUP BY pair,trend,gatt,gattn
22:50:29   3  ORDER BY pair,trend,gatt,gattn
22:50:29   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -3.003E-06	    2980    .015565561
usd_cad 	-1 nup up  -.00227221	    3950    .057642004
usd_cad 	-1 up  nup .002398388	    3830    .006942802
usd_cad 	 1 nup nup -.00001763	    2118     -.0613625
usd_cad 	 1 nup up  -.00236422	    3865      .0023038
usd_cad 	 1 up  nup  .00259698	    3154    -.00417422
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
22:50:29 SQL> 
22:50:29 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.15
22:50:29 SQL> CREATE TABLE cad_ms10 COMPRESS AS
22:50:29   2  SELECT
22:50:29   3  ydate
22:50:29   4  ,trend cad_trend
22:50:29   5  ,g4    cad_g4
22:50:29   6  ,gatt  cad_gatt
22:50:29   7  ,gattn cad_gattn
22:50:29   8  FROM modsrc
22:50:29   9  /

Table created.

Elapsed: 00:00:00.07
22:50:29 SQL> 
22:50:29 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
22:50:29 SQL> 
22:50:29 SQL> -- rpt
22:50:29 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 00:30:01 2010-12-17 21:55:00	 9137	  -.0089      .0151
	-1 2010-09-13 21:50:01 2010-12-17 09:45:00	10760	  -.0107      .0147

Elapsed: 00:00:00.02
22:50:29 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 00:30:01 2010-12-17 21:55:00	       9185	 -.0089       .0151
	-1 2010-09-13 21:50:01 2010-12-17 09:45:00	      10760	 -.0107       .0147

Elapsed: 00:00:00.02
22:50:29 SQL> 
22:50:29 SQL> -- I need a copy of q15 attributes
22:50:29 SQL> 
22:50:29 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.11
22:50:29 SQL> CREATE TABLE cad_att COMPRESS AS
22:50:29   2  SELECT
22:50:29   3  ydate
22:50:29   4  ,att00 cad_att00
22:50:29   5  ,att01 cad_att01
22:50:29   6  ,att02 cad_att02
22:50:29   7  ,att03 cad_att03
22:50:29   8  ,att04 cad_att04
22:50:29   9  ,att05 cad_att05
22:50:29  10  ,att06 cad_att06
22:50:29  11  ,att07 cad_att07
22:50:29  12  ,att08 cad_att08
22:50:29  13  ,att09 cad_att09
22:50:29  14  ,att10 cad_att10
22:50:29  15  ,att11 cad_att11
22:50:29  16  ,att12 cad_att12
22:50:29  17  ,att13 cad_att13
22:50:29  18  ,att14 cad_att14
22:50:29  19  ,att15 cad_att15
22:50:29  20  ,att16 cad_att16
22:50:29  21  ,att17 cad_att17
22:50:29  22  ,att18 cad_att18
22:50:29  23  ,att19 cad_att19
22:50:29  24  ,att20 cad_att20
22:50:29  25  ,att21 cad_att21
22:50:29  26  ,att22 cad_att22
22:50:29  27  ,att23 cad_att23
22:50:29  28  ,att24 cad_att24
22:50:29  29  ,att25 cad_att25
22:50:29  30  ,att26 cad_att26
22:50:29  31  ,att27 cad_att27
22:50:29  32  ,att28 cad_att28
22:50:29  33  ,att29 cad_att29
22:50:29  34  ,att30 cad_att30
22:50:29  35  ,att31 cad_att31
22:50:29  36  ,att32 cad_att32
22:50:29  37  FROM q15
22:50:29  38  /

Table created.

Elapsed: 00:00:00.13
22:50:30 SQL> 
22:50:30 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
22:50:30 SQL> 
22:50:30 SQL> -- rpt
22:50:30 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19945

Elapsed: 00:00:00.00
22:50:30 SQL> 
22:50:30 SQL> --
22:50:30 SQL> -- chf10.sql
22:50:30 SQL> --
22:50:30 SQL> 
22:50:30 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:50:30 SQL> 
22:50:30 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.52
22:50:31 SQL> 
22:50:31 SQL> -- I created di5min here:
22:50:31 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
22:50:31 SQL> 
22:50:31 SQL> CREATE OR REPLACE VIEW q11 AS
22:50:31   2  SELECT
22:50:31   3  pair
22:50:31   4  ,ydate
22:50:31   5  ,prdate
22:50:31   6  ,rownum rnum -- acts as t in my time-series
22:50:31   7  ,clse
22:50:31   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
22:50:31   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
22:50:31  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
22:50:31  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
22:50:31  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
22:50:31  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
22:50:31  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
22:50:31  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
22:50:31  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
22:50:31  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
22:50:31  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
22:50:31  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
22:50:31  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
22:50:31  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
22:50:31  22  FROM di5min WHERE pair LIKE'%chf%'
22:50:31  23  ORDER BY ydate
22:50:31  24  /

View created.

Elapsed: 00:00:00.04
22:50:31 SQL> 
22:50:31 SQL> -- rpt
22:50:31 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20812

Elapsed: 00:00:00.34
22:50:31 SQL> 
22:50:31 SQL> -- Calc deltas and gains
22:50:31 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.48
22:50:31 SQL> 
22:50:31 SQL> CREATE TABLE q13 COMPRESS AS
22:50:31   2  SELECT
22:50:31   3  pair
22:50:31   4  ,ydate
22:50:31   5  ,prdate
22:50:31   6  ,rnum
22:50:31   7  ,lg4
22:50:31   8  ,lg8
22:50:31   9  ,lg12
22:50:31  10  ,ld4
22:50:31  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
22:50:31  12  -- step by 1
22:50:31  13  ,clse-lg1 d01
22:50:31  14  ,lg1-lg2	d12
22:50:31  15  ,lg2-lg3	d23
22:50:31  16  ,lg3-lg4	d34
22:50:31  17  ,lg4-lg5	d45
22:50:31  18  ,lg5-lg6	d56
22:50:31  19  ,lg6-lg7	d67
22:50:31  20  ,lg7-lg8	d78
22:50:31  21  ,lg8-lg9	d89
22:50:31  22  -- step by 2
22:50:31  23  ,clse-lg2 d02
22:50:31  24  ,lg2-lg4 d24
22:50:31  25  ,lg4-lg6 d46
22:50:31  26  ,lg6-lg8 d68
22:50:31  27  -- step by 3
22:50:31  28  ,clse-lg3 d03
22:50:31  29  ,lg3-lg6	d36
22:50:31  30  ,lg6-lg9	d69
22:50:31  31  ,lg9-lg12 d912
22:50:31  32  -- step by 4
22:50:31  33  ,clse-lg4 d04
22:50:31  34  ,lg4-lg8	d48
22:50:31  35  ,lg8-lg12 d812
22:50:31  36  ,lg6-lg12 d612
22:50:31  37  ,lg12-lg18 d1218
22:50:31  38  --
22:50:31  39  ,ABS(clse-lg1)dc1
22:50:31  40  ,ABS(clse-lg2)dc2
22:50:31  41  ,ABS(clse-lg3)dc3
22:50:31  42  ,ABS(clse-lg4)dc4
22:50:31  43  ,ABS(clse-lg5)dc5
22:50:31  44  ,ABS(clse-lg6)dc6
22:50:31  45  ,ABS(clse-lg7)dc7
22:50:31  46  ,ABS(clse-lg8)dc8
22:50:31  47  ,ABS(clse-lg9)dc9
22:50:31  48  ,ABS(clse-lg12)dc12
22:50:31  49  ,ABS(clse-lg18)dc18
22:50:31  50  ,ABS(clse-lg24)dc24
22:50:31  51  ,ABS(clse-lg72)dc72
22:50:31  52  ,(ld4-clse) ug4
22:50:31  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
22:50:31  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
22:50:31  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
22:50:31  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
22:50:31  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:50:31  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
22:50:31  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:50:31  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
22:50:31  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:50:31  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:50:31  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
22:50:31  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:50:31  65  ,0+TO_CHAR(ydate,'D')d
22:50:31  66  ,0+TO_CHAR(ydate,'W')w
22:50:31  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:50:31  68  FROM q11
22:50:31  69  -- I dont want any NULL values from the LAG() functions:
22:50:31  70  WHERE lg72 > 0
22:50:31  71  ORDER BY pair,ydate
22:50:31  72  /

Table created.

Elapsed: 00:00:01.68
22:50:33 SQL> 
22:50:33 SQL> -- rpt
22:50:33 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9418
	-1	   10530

Elapsed: 00:00:00.03
22:50:33 SQL> 
22:50:33 SQL> -- Calc gains and ntiles
22:50:33 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.17
22:50:33 SQL> CREATE TABLE q15 COMPRESS AS
22:50:33   2  SELECT
22:50:33   3  pair
22:50:33   4  ,ydate
22:50:33   5  ,prdate -- Should be unique
22:50:33   6  ,trend -- +1 or -1
22:50:33   7  ,dc12 -- next statement needs this
22:50:33   8  -- Use NTILE() to derive some attributes
22:50:33   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
22:50:33  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
22:50:33  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
22:50:33  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
22:50:33  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
22:50:33  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
22:50:33  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
22:50:33  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
22:50:33  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
22:50:33  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
22:50:33  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
22:50:33  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
22:50:33  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
22:50:33  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
22:50:33  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
22:50:33  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
22:50:33  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
22:50:33  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
22:50:33  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
22:50:33  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
22:50:33  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
22:50:33  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
22:50:33  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
22:50:33  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
22:50:33  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
22:50:33  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
22:50:33  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
22:50:33  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
22:50:33  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:50:33  38  ,hh    att28
22:50:33  39  ,d     att29
22:50:33  40  ,w     att30
22:50:33  41  ,mpm   att31
22:50:33  42  ,trend att32
22:50:33  43  ,ug4 g4
22:50:33  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
22:50:33  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
22:50:33  46  FROM q13
22:50:33  47  ORDER BY pair,ydate
22:50:33  48  /

Table created.

Elapsed: 00:00:04.00
22:50:37 SQL> 
22:50:37 SQL> -- rpt
22:50:37 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
22:50:37   2  GROUP BY pair,trend,gatt,gattn
22:50:37   3  ORDER BY pair,trend,gatt,gattn
22:50:37   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000036286	    2574    .043393926
usd_chf 	-1 nup up  -.00292377	    3837    .058106097
usd_chf 	-1 up  nup .002709814	    4119    -.12075309
usd_chf 	 1 nup nup 9.7675E-06	    2237    .021856194
usd_chf 	 1 nup up  -.00253855	    3879	.11346
usd_chf 	 1 up  nup .002446858	    3254    -.16376016
usd_chf 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
22:50:37 SQL> 
22:50:37 SQL> -- rpt
22:50:37 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-17 21:55:00

Elapsed: 00:00:00.02
22:50:37 SQL> 
22:50:37 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.18
22:50:38 SQL> CREATE TABLE modsrc COMPRESS AS
22:50:38   2  SELECT
22:50:38   3  pair
22:50:38   4  ,ydate
22:50:38   5  ,prdate
22:50:38   6  ,trend
22:50:38   7  ,g4
22:50:38   8  ,gatt
22:50:38   9  ,gattn
22:50:38  10  ,dc12
22:50:38  11  FROM q15
22:50:38  12  /

Table created.

Elapsed: 00:00:00.09
22:50:38 SQL> 
22:50:38 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
22:50:38 SQL> 
22:50:38 SQL> -- rpt
22:50:38 SQL> 
22:50:38 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20812

Elapsed: 00:00:00.34
22:50:38 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19948

Elapsed: 00:00:00.01
22:50:38 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19948

Elapsed: 00:00:00.00
22:50:38 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19948

Elapsed: 00:00:00.01
22:50:38 SQL> 
22:50:38 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
22:50:38   2  GROUP BY pair,trend,gatt,gattn
22:50:38   3  ORDER BY pair,trend,gatt,gattn
22:50:38   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000036286	    2574    .043393926
usd_chf 	-1 nup up  -.00292377	    3837    .058106097
usd_chf 	-1 up  nup .002709814	    4119    -.12075309
usd_chf 	 1 nup nup 9.7675E-06	    2237    .021856194
usd_chf 	 1 nup up  -.00253855	    3879	.11346
usd_chf 	 1 up  nup .002446858	    3254    -.16376016
usd_chf 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
22:50:38 SQL> 
22:50:38 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.08
22:50:38 SQL> CREATE TABLE chf_ms10 COMPRESS AS
22:50:38   2  SELECT
22:50:38   3  ydate
22:50:38   4  ,trend chf_trend
22:50:38   5  ,g4    chf_g4
22:50:38   6  ,gatt  chf_gatt
22:50:38   7  ,gattn chf_gattn
22:50:38   8  FROM modsrc
22:50:38   9  /

Table created.

Elapsed: 00:00:00.06
22:50:38 SQL> 
22:50:38 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
22:50:39 SQL> 
22:50:39 SQL> -- rpt
22:50:39 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-15 02:05:01 2010-12-17 21:55:00	 9370	  -.0176     .01365
	-1 2010-09-13 21:50:01 2010-12-17 13:50:00	10530	  -.0166      .0149

Elapsed: 00:00:00.02
22:50:39 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-15 02:05:01 2010-12-17 21:55:00	       9418	 -.0176      .01365
	-1 2010-09-13 21:50:01 2010-12-17 13:50:00	      10530	 -.0166       .0149

Elapsed: 00:00:00.02
22:50:39 SQL> 
22:50:39 SQL> -- I need a copy of q15 attributes
22:50:39 SQL> 
22:50:39 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.27
22:50:39 SQL> CREATE TABLE chf_att COMPRESS AS
22:50:39   2  SELECT
22:50:39   3  ydate
22:50:39   4  ,att00 chf_att00
22:50:39   5  ,att01 chf_att01
22:50:39   6  ,att02 chf_att02
22:50:39   7  ,att03 chf_att03
22:50:39   8  ,att04 chf_att04
22:50:39   9  ,att05 chf_att05
22:50:39  10  ,att06 chf_att06
22:50:39  11  ,att07 chf_att07
22:50:39  12  ,att08 chf_att08
22:50:39  13  ,att09 chf_att09
22:50:39  14  ,att10 chf_att10
22:50:39  15  ,att11 chf_att11
22:50:39  16  ,att12 chf_att12
22:50:39  17  ,att13 chf_att13
22:50:39  18  ,att14 chf_att14
22:50:39  19  ,att15 chf_att15
22:50:39  20  ,att16 chf_att16
22:50:39  21  ,att17 chf_att17
22:50:39  22  ,att18 chf_att18
22:50:39  23  ,att19 chf_att19
22:50:39  24  ,att20 chf_att20
22:50:39  25  ,att21 chf_att21
22:50:39  26  ,att22 chf_att22
22:50:39  27  ,att23 chf_att23
22:50:39  28  ,att24 chf_att24
22:50:39  29  ,att25 chf_att25
22:50:39  30  ,att26 chf_att26
22:50:39  31  ,att27 chf_att27
22:50:39  32  ,att28 chf_att28
22:50:39  33  ,att29 chf_att29
22:50:39  34  ,att30 chf_att30
22:50:39  35  ,att31 chf_att31
22:50:39  36  ,att32 chf_att32
22:50:39  37  FROM q15
22:50:39  38  /

Table created.

Elapsed: 00:00:00.13
22:50:39 SQL> 
22:50:39 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
22:50:39 SQL> 
22:50:39 SQL> -- rpt
22:50:39 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19948

Elapsed: 00:00:00.00
22:50:39 SQL> 
22:50:39 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
