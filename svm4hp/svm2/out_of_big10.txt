
SQL*Plus: Release 11.2.0.1.0 Production on Wed Dec 15 19:21:32 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

19:21:32 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.01
19:21:32 SQL> 19:21:32 SQL> --
19:21:32 SQL> -- eur10.sql
19:21:32 SQL> --
19:21:32 SQL> 
19:21:32 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:21:32 SQL> 
19:21:32 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.41
19:21:32 SQL> 
19:21:32 SQL> -- I created di5min here:
19:21:32 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:21:32 SQL> 
19:21:32 SQL> CREATE OR REPLACE VIEW q11 AS
19:21:32   2  SELECT
19:21:32   3  pair
19:21:32   4  ,ydate
19:21:32   5  ,prdate
19:21:32   6  ,rownum rnum -- acts as t in my time-series
19:21:32   7  ,clse
19:21:32   8  ,LAG(clse,6*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:21:32   9  ,LAG(clse,6*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:21:32  10  ,LAG(clse,6*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:21:32  11  ,LAG(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:21:32  12  ,LAG(clse,6*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:21:32  13  ,LAG(clse,6*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:21:32  14  ,LAG(clse,6*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:21:32  15  ,LAG(clse,6*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:21:32  16  ,LAG(clse,6*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:21:32  17  ,LAG(clse,6*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:21:32  18  ,LAG(clse,6*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:21:32  19  ,LAG(clse,6*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:21:32  20  ,LAG(clse,6*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:21:32  21  ,LEAD(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:21:32  22  FROM di5min WHERE pair LIKE'%eur%'
19:21:32  23  ORDER BY ydate
19:21:32  24  /

View created.

Elapsed: 00:00:00.04
19:21:32 SQL> 
19:21:32 SQL> -- rpt
19:21:32 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        18644

Elapsed: 00:00:00.31
19:21:32 SQL> 
19:21:32 SQL> -- Calc deltas and gains
19:21:32 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.04
19:21:32 SQL> 
19:21:32 SQL> CREATE TABLE q13 COMPRESS AS
19:21:32   2  SELECT
19:21:32   3  pair
19:21:32   4  ,ydate
19:21:32   5  ,prdate
19:21:32   6  ,rnum
19:21:32   7  ,lg4
19:21:32   8  ,lg8
19:21:32   9  ,lg12
19:21:32  10  ,ld4
19:21:32  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:21:32  12  -- step by 1
19:21:32  13  ,clse-lg1 d01
19:21:32  14  ,lg1-lg2	d12
19:21:32  15  ,lg2-lg3	d23
19:21:32  16  ,lg3-lg4	d34
19:21:32  17  ,lg4-lg5	d45
19:21:32  18  ,lg5-lg6	d56
19:21:32  19  ,lg6-lg7	d67
19:21:32  20  ,lg7-lg8	d78
19:21:32  21  ,lg8-lg9	d89
19:21:32  22  -- step by 2
19:21:32  23  ,clse-lg2 d02
19:21:32  24  ,lg2-lg4 d24
19:21:32  25  ,lg4-lg6 d46
19:21:32  26  ,lg6-lg8 d68
19:21:32  27  -- step by 3
19:21:32  28  ,clse-lg3 d03
19:21:32  29  ,lg3-lg6	d36
19:21:32  30  ,lg6-lg9	d69
19:21:32  31  ,lg9-lg12 d912
19:21:32  32  -- step by 4
19:21:32  33  ,clse-lg4 d04
19:21:32  34  ,lg4-lg8	d48
19:21:32  35  ,lg8-lg12 d812
19:21:32  36  ,lg6-lg12 d612
19:21:32  37  ,lg12-lg18 d1218
19:21:32  38  --
19:21:32  39  ,ABS(clse-lg1)dc1
19:21:32  40  ,ABS(clse-lg2)dc2
19:21:32  41  ,ABS(clse-lg3)dc3
19:21:32  42  ,ABS(clse-lg4)dc4
19:21:32  43  ,ABS(clse-lg5)dc5
19:21:32  44  ,ABS(clse-lg6)dc6
19:21:32  45  ,ABS(clse-lg7)dc7
19:21:32  46  ,ABS(clse-lg8)dc8
19:21:32  47  ,ABS(clse-lg9)dc9
19:21:32  48  ,ABS(clse-lg12)dc12
19:21:32  49  ,ABS(clse-lg18)dc18
19:21:32  50  ,ABS(clse-lg24)dc24
19:21:32  51  ,ABS(clse-lg72)dc72
19:21:32  52  ,(ld4-clse) ug4
19:21:32  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*2  PRECEDING AND CURRENT ROW)crr2
19:21:32  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*3  PRECEDING AND CURRENT ROW)crr3
19:21:32  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*4  PRECEDING AND CURRENT ROW)crr4
19:21:32  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*5  PRECEDING AND CURRENT ROW)crr5
19:21:32  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*6  PRECEDING AND CURRENT ROW)crr6
19:21:32  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*7  PRECEDING AND CURRENT ROW)crr7
19:21:32  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*8  PRECEDING AND CURRENT ROW)crr8
19:21:32  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*9  PRECEDING AND CURRENT ROW)crr9
19:21:32  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*12 PRECEDING AND CURRENT ROW)crr12
19:21:32  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*24 PRECEDING AND CURRENT ROW)crr24
19:21:32  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*72 PRECEDING AND CURRENT ROW)crr72
19:21:32  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:21:32  65  ,0+TO_CHAR(ydate,'D')d
19:21:32  66  ,0+TO_CHAR(ydate,'W')w
19:21:32  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:21:32  68  FROM q11
19:21:32  69  -- I dont want any NULL values from the LAG() functions:
19:21:32  70  WHERE lg72 > 0
19:21:32  71  ORDER BY pair,ydate
19:21:32  72  /

Table created.

Elapsed: 00:00:01.76
19:21:34 SQL> 
19:21:34 SQL> -- rpt
19:21:34 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9397
	-1	    8815

Elapsed: 00:00:00.03
19:21:34 SQL> 
19:21:34 SQL> -- Calc gains and ntiles
19:21:34 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.04
19:21:34 SQL> CREATE TABLE q15 COMPRESS AS
19:21:34   2  SELECT
19:21:34   3  pair
19:21:34   4  ,ydate
19:21:34   5  ,prdate -- Should be unique
19:21:34   6  ,trend -- +1 or -1
19:21:34   7  ,dc12 -- next statement needs this
19:21:34   8  -- Use NTILE() to derive some attributes
19:21:34   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:21:34  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:21:34  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:21:34  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:21:34  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:21:34  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:21:34  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:21:34  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:21:34  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:21:34  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:21:34  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:21:34  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:21:34  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:21:34  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:21:34  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:21:34  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:21:34  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:21:34  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:21:34  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:21:34  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:21:34  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:21:34  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:21:34  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:21:34  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:21:34  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:21:34  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:21:34  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:21:34  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:21:34  37  -- date related integers: hour of day, day of week, week of month:
19:21:34  38  ,hh    att28
19:21:34  39  ,d     att29
19:21:34  40  ,w     att30
19:21:34  41  ,mpm   att31
19:21:34  42  ,trend att32
19:21:34  43  ,ug4 g4
19:21:34  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:21:34  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:21:34  46  FROM q13
19:21:34  47  ORDER BY pair,ydate
19:21:34  48  /

Table created.

Elapsed: 00:00:03.59
19:21:38 SQL> 
19:21:38 SQL> -- rpt
19:21:38 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:21:38   2  GROUP BY pair,trend,gatt,gattn
19:21:38   3  ORDER BY pair,trend,gatt,gattn
19:21:38   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -8.933E-06	    1556    .017845076
eur_usd 	-1 nup up  -.00333028	    3560    .023512137
eur_usd 	-1 up  nup .003597738	    3681    -.16538797
eur_usd 	-1			       0
eur_usd 	 1 nup nup -3.539E-06	    1787    .027043047
eur_usd 	 1 nup up  -.00311969	    3854    .079612124
eur_usd 	 1 up  nup .003475607	    3750    -.03599509
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.06
19:21:38 SQL> 
19:21:38 SQL> -- rpt
19:21:38 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-15 17:50:00

Elapsed: 00:00:00.04
19:21:38 SQL> 
19:21:38 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.04
19:21:38 SQL> CREATE TABLE modsrc COMPRESS AS
19:21:38   2  SELECT
19:21:38   3  pair
19:21:38   4  ,ydate
19:21:38   5  ,prdate
19:21:38   6  ,trend
19:21:38   7  ,g4
19:21:38   8  ,gatt
19:21:38   9  ,gattn
19:21:38  10  ,dc12
19:21:38  11  FROM q15
19:21:38  12  /

Table created.

Elapsed: 00:00:00.10
19:21:38 SQL> 
19:21:38 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
19:21:38 SQL> 
19:21:38 SQL> -- rpt
19:21:38 SQL> 
19:21:38 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      18644

Elapsed: 00:00:00.31
19:21:39 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.00
19:21:39 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.01
19:21:39 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.00
19:21:39 SQL> 
19:21:39 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:21:39   2  GROUP BY pair,trend,gatt,gattn
19:21:39   3  ORDER BY pair,trend,gatt,gattn
19:21:39   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -8.933E-06	    1556    .017845076
eur_usd 	-1 nup up  -.00333028	    3560    .023512137
eur_usd 	-1 up  nup .003597738	    3681    -.16538797
eur_usd 	-1			       0
eur_usd 	 1 nup nup -3.539E-06	    1787    .027043047
eur_usd 	 1 nup up  -.00311969	    3854    .079612124
eur_usd 	 1 up  nup .003475607	    3750    -.03599509
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
19:21:39 SQL> 
19:21:39 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
19:21:39 SQL> CREATE TABLE eur_ms10 COMPRESS AS
19:21:39   2  SELECT
19:21:39   3  ydate
19:21:39   4  ,trend eur_trend
19:21:39   5  ,g4    eur_g4
19:21:39   6  ,gatt  eur_gatt
19:21:39   7  ,gattn	eur_gattn
19:21:39   8  FROM modsrc
19:21:39   9  /

Table created.

Elapsed: 00:00:00.05
19:21:39 SQL> 
19:21:39 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
19:21:39 SQL> 
19:21:39 SQL> -- rpt
19:21:39 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-06-21 14:50:01 2010-12-15 15:20:00	 9391	  -.0153      .0165
	-1 2010-06-21 16:40:01 2010-12-15 17:50:00	 8797	  -.0164      .0167

Elapsed: 00:00:00.02
19:21:39 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-06-21 14:50:01 2010-12-15 15:20:00	       9397	 -.0153       .0165
	-1 2010-06-21 16:40:01 2010-12-15 17:50:00	       8815	 -.0164       .0167

Elapsed: 00:00:00.02
19:21:39 SQL> 
19:21:39 SQL> -- I need a copy of q15 attributes
19:21:39 SQL> 
19:21:39 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.03
19:21:39 SQL> CREATE TABLE eur_att COMPRESS AS
19:21:39   2  SELECT
19:21:39   3  ydate
19:21:39   4  ,att00 eur_att00
19:21:39   5  ,att01 eur_att01
19:21:39   6  ,att02 eur_att02
19:21:39   7  ,att03 eur_att03
19:21:39   8  ,att04 eur_att04
19:21:39   9  ,att05 eur_att05
19:21:39  10  ,att06 eur_att06
19:21:39  11  ,att07 eur_att07
19:21:39  12  ,att08 eur_att08
19:21:39  13  ,att09 eur_att09
19:21:39  14  ,att10 eur_att10
19:21:39  15  ,att11 eur_att11
19:21:39  16  ,att12 eur_att12
19:21:39  17  ,att13 eur_att13
19:21:39  18  ,att14 eur_att14
19:21:39  19  ,att15 eur_att15
19:21:39  20  ,att16 eur_att16
19:21:39  21  ,att17 eur_att17
19:21:39  22  ,att18 eur_att18
19:21:39  23  ,att19 eur_att19
19:21:39  24  ,att20 eur_att20
19:21:39  25  ,att21 eur_att21
19:21:39  26  ,att22 eur_att22
19:21:39  27  ,att23 eur_att23
19:21:39  28  ,att24 eur_att24
19:21:39  29  ,att25 eur_att25
19:21:39  30  ,att26 eur_att26
19:21:39  31  ,att27 eur_att27
19:21:39  32  ,att28 eur_att28
19:21:39  33  ,att29 eur_att29
19:21:39  34  ,att30 eur_att30
19:21:39  35  ,att31 eur_att31
19:21:39  36  ,att32 eur_att32
19:21:39  37  FROM q15
19:21:39  38  /

Table created.

Elapsed: 00:00:00.16
19:21:39 SQL> 
19:21:39 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
19:21:40 SQL> 
19:21:40 SQL> -- rpt
19:21:40 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     18212

Elapsed: 00:00:00.01
19:21:40 SQL> 
19:21:40 SQL> --
19:21:40 SQL> -- aud10.sql
19:21:40 SQL> --
19:21:40 SQL> 
19:21:40 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:21:40 SQL> 
19:21:40 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.40
19:21:40 SQL> 
19:21:40 SQL> -- I created di5min here:
19:21:40 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:21:40 SQL> 
19:21:40 SQL> CREATE OR REPLACE VIEW q11 AS
19:21:40   2  SELECT
19:21:40   3  pair
19:21:40   4  ,ydate
19:21:40   5  ,prdate
19:21:40   6  ,rownum rnum -- acts as t in my time-series
19:21:40   7  ,clse
19:21:40   8  ,LAG(clse,6*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:21:40   9  ,LAG(clse,6*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:21:40  10  ,LAG(clse,6*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:21:40  11  ,LAG(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:21:40  12  ,LAG(clse,6*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:21:40  13  ,LAG(clse,6*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:21:40  14  ,LAG(clse,6*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:21:40  15  ,LAG(clse,6*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:21:40  16  ,LAG(clse,6*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:21:40  17  ,LAG(clse,6*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:21:40  18  ,LAG(clse,6*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:21:40  19  ,LAG(clse,6*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:21:40  20  ,LAG(clse,6*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:21:40  21  ,LEAD(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:21:40  22  FROM di5min WHERE pair LIKE'%aud%'
19:21:40  23  ORDER BY ydate
19:21:40  24  /

View created.

Elapsed: 00:00:00.05
19:21:40 SQL> 
19:21:40 SQL> -- rpt
19:21:40 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        18643

Elapsed: 00:00:00.31
19:21:40 SQL> 
19:21:40 SQL> -- Calc deltas and gains
19:21:40 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.22
19:21:41 SQL> 
19:21:41 SQL> CREATE TABLE q13 COMPRESS AS
19:21:41   2  SELECT
19:21:41   3  pair
19:21:41   4  ,ydate
19:21:41   5  ,prdate
19:21:41   6  ,rnum
19:21:41   7  ,lg4
19:21:41   8  ,lg8
19:21:41   9  ,lg12
19:21:41  10  ,ld4
19:21:41  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:21:41  12  -- step by 1
19:21:41  13  ,clse-lg1 d01
19:21:41  14  ,lg1-lg2	d12
19:21:41  15  ,lg2-lg3	d23
19:21:41  16  ,lg3-lg4	d34
19:21:41  17  ,lg4-lg5	d45
19:21:41  18  ,lg5-lg6	d56
19:21:41  19  ,lg6-lg7	d67
19:21:41  20  ,lg7-lg8	d78
19:21:41  21  ,lg8-lg9	d89
19:21:41  22  -- step by 2
19:21:41  23  ,clse-lg2 d02
19:21:41  24  ,lg2-lg4 d24
19:21:41  25  ,lg4-lg6 d46
19:21:41  26  ,lg6-lg8 d68
19:21:41  27  -- step by 3
19:21:41  28  ,clse-lg3 d03
19:21:41  29  ,lg3-lg6	d36
19:21:41  30  ,lg6-lg9	d69
19:21:41  31  ,lg9-lg12 d912
19:21:41  32  -- step by 4
19:21:41  33  ,clse-lg4 d04
19:21:41  34  ,lg4-lg8	d48
19:21:41  35  ,lg8-lg12 d812
19:21:41  36  ,lg6-lg12 d612
19:21:41  37  ,lg12-lg18 d1218
19:21:41  38  --
19:21:41  39  ,ABS(clse-lg1)dc1
19:21:41  40  ,ABS(clse-lg2)dc2
19:21:41  41  ,ABS(clse-lg3)dc3
19:21:41  42  ,ABS(clse-lg4)dc4
19:21:41  43  ,ABS(clse-lg5)dc5
19:21:41  44  ,ABS(clse-lg6)dc6
19:21:41  45  ,ABS(clse-lg7)dc7
19:21:41  46  ,ABS(clse-lg8)dc8
19:21:41  47  ,ABS(clse-lg9)dc9
19:21:41  48  ,ABS(clse-lg12)dc12
19:21:41  49  ,ABS(clse-lg18)dc18
19:21:41  50  ,ABS(clse-lg24)dc24
19:21:41  51  ,ABS(clse-lg72)dc72
19:21:41  52  ,(ld4-clse) ug4
19:21:41  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*2  PRECEDING AND CURRENT ROW)crr2
19:21:41  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*3  PRECEDING AND CURRENT ROW)crr3
19:21:41  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*4  PRECEDING AND CURRENT ROW)crr4
19:21:41  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*5  PRECEDING AND CURRENT ROW)crr5
19:21:41  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*6  PRECEDING AND CURRENT ROW)crr6
19:21:41  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*7  PRECEDING AND CURRENT ROW)crr7
19:21:41  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*8  PRECEDING AND CURRENT ROW)crr8
19:21:41  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*9  PRECEDING AND CURRENT ROW)crr9
19:21:41  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*12 PRECEDING AND CURRENT ROW)crr12
19:21:41  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*24 PRECEDING AND CURRENT ROW)crr24
19:21:41  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*72 PRECEDING AND CURRENT ROW)crr72
19:21:41  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:21:41  65  ,0+TO_CHAR(ydate,'D')d
19:21:41  66  ,0+TO_CHAR(ydate,'W')w
19:21:41  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:21:41  68  FROM q11
19:21:41  69  -- I dont want any NULL values from the LAG() functions:
19:21:41  70  WHERE lg72 > 0
19:21:41  71  ORDER BY pair,ydate
19:21:41  72  /

Table created.

Elapsed: 00:00:01.45
19:21:42 SQL> 
19:21:42 SQL> -- rpt
19:21:42 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9396
	-1	    8815

Elapsed: 00:00:00.02
19:21:42 SQL> 
19:21:42 SQL> -- Calc gains and ntiles
19:21:42 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
19:21:42 SQL> CREATE TABLE q15 COMPRESS AS
19:21:42   2  SELECT
19:21:42   3  pair
19:21:42   4  ,ydate
19:21:42   5  ,prdate -- Should be unique
19:21:42   6  ,trend -- +1 or -1
19:21:42   7  ,dc12 -- next statement needs this
19:21:42   8  -- Use NTILE() to derive some attributes
19:21:42   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:21:42  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:21:42  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:21:42  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:21:42  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:21:42  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:21:42  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:21:42  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:21:42  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:21:42  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:21:42  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:21:42  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:21:42  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:21:42  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:21:42  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:21:42  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:21:42  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:21:42  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:21:42  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:21:42  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:21:42  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:21:42  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:21:42  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:21:42  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:21:42  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:21:42  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:21:42  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:21:42  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:21:42  37  -- date related integers: hour of day, day of week, week of month:
19:21:42  38  ,hh    att28
19:21:42  39  ,d     att29
19:21:42  40  ,w     att30
19:21:42  41  ,mpm   att31
19:21:42  42  ,trend att32
19:21:42  43  ,ug4 g4
19:21:42  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:21:42  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:21:42  46  FROM q13
19:21:42  47  ORDER BY pair,ydate
19:21:42  48  /

Table created.

Elapsed: 00:00:03.53
19:21:46 SQL> 
19:21:46 SQL> -- rpt
19:21:46 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:21:46   2  GROUP BY pair,trend,gatt,gattn
19:21:46   3  ORDER BY pair,trend,gatt,gattn
19:21:46   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000019961	    1548    -.01579838
aud_usd 	-1 nup up  -.00302308	    3377    -.03765284
aud_usd 	-1 up  nup .002948345	    3866    .026000641
aud_usd 	-1			       0
aud_usd 	 1 nup nup -7.481E-06	    1848    .029928361
aud_usd 	 1 nup up  -.00277946	    3625    .028811907
aud_usd 	 1 up  nup .002958629	    3923    -.03786373

7 rows selected.

Elapsed: 00:00:00.04
19:21:46 SQL> 
19:21:46 SQL> -- rpt
19:21:46 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-15 17:50:00

Elapsed: 00:00:00.01
19:21:46 SQL> 
19:21:46 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
19:21:46 SQL> CREATE TABLE modsrc COMPRESS AS
19:21:46   2  SELECT
19:21:46   3  pair
19:21:46   4  ,ydate
19:21:46   5  ,prdate
19:21:46   6  ,trend
19:21:46   7  ,g4
19:21:46   8  ,gatt
19:21:46   9  ,gattn
19:21:46  10  ,dc12
19:21:46  11  FROM q15
19:21:46  12  /

Table created.

Elapsed: 00:00:00.08
19:21:46 SQL> 
19:21:46 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
19:21:46 SQL> 
19:21:46 SQL> -- rpt
19:21:46 SQL> 
19:21:46 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      18643

Elapsed: 00:00:00.31
19:21:46 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      18211

Elapsed: 00:00:00.01
19:21:46 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      18211

Elapsed: 00:00:00.00
19:21:46 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      18211

Elapsed: 00:00:00.00
19:21:46 SQL> 
19:21:46 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:21:46   2  GROUP BY pair,trend,gatt,gattn
19:21:46   3  ORDER BY pair,trend,gatt,gattn
19:21:46   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000019961	    1548    -.01579838
aud_usd 	-1 nup up  -.00302308	    3377    -.03765284
aud_usd 	-1 up  nup .002948345	    3866    .026000641
aud_usd 	-1			       0
aud_usd 	 1 nup nup -7.481E-06	    1848    .029928361
aud_usd 	 1 nup up  -.00277946	    3625    .028811907
aud_usd 	 1 up  nup .002958629	    3923    -.03786373

7 rows selected.

Elapsed: 00:00:00.03
19:21:47 SQL> 
19:21:47 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.07
19:21:47 SQL> CREATE TABLE aud_ms10 COMPRESS AS
19:21:47   2  SELECT
19:21:47   3  ydate
19:21:47   4  ,trend aud_trend
19:21:47   5  ,g4    aud_g4
19:21:47   6  ,gatt  aud_gatt
19:21:47   7  ,gattn	aud_gattn
19:21:47   8  FROM modsrc
19:21:47   9  /

Table created.

Elapsed: 00:00:00.06
19:21:47 SQL> 
19:21:47 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
19:21:47 SQL> 
19:21:47 SQL> -- rpt
19:21:47 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-06-21 14:50:01 2010-12-14 22:20:00	 9396	  -.0162      .0122
	-1 2010-06-21 23:50:01 2010-12-15 17:50:00	 8791	   -.017      .0131

Elapsed: 00:00:00.02
19:21:47 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-06-21 14:50:01 2010-12-14 22:20:00	       9396	 -.0162       .0122
	-1 2010-06-21 23:50:01 2010-12-15 17:50:00	       8815	  -.017       .0131

Elapsed: 00:00:00.01
19:21:47 SQL> 
19:21:47 SQL> -- I need a copy of q15 attributes
19:21:47 SQL> 
19:21:47 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.03
19:21:47 SQL> CREATE TABLE aud_att COMPRESS AS
19:21:47   2  SELECT
19:21:47   3  ydate
19:21:47   4  ,att00 aud_att00
19:21:47   5  ,att01 aud_att01
19:21:47   6  ,att02 aud_att02
19:21:47   7  ,att03 aud_att03
19:21:47   8  ,att04 aud_att04
19:21:47   9  ,att05 aud_att05
19:21:47  10  ,att06 aud_att06
19:21:47  11  ,att07 aud_att07
19:21:47  12  ,att08 aud_att08
19:21:47  13  ,att09 aud_att09
19:21:47  14  ,att10 aud_att10
19:21:47  15  ,att11 aud_att11
19:21:47  16  ,att12 aud_att12
19:21:47  17  ,att13 aud_att13
19:21:47  18  ,att14 aud_att14
19:21:47  19  ,att15 aud_att15
19:21:47  20  ,att16 aud_att16
19:21:47  21  ,att17 aud_att17
19:21:47  22  ,att18 aud_att18
19:21:47  23  ,att19 aud_att19
19:21:47  24  ,att20 aud_att20
19:21:47  25  ,att21 aud_att21
19:21:47  26  ,att22 aud_att22
19:21:47  27  ,att23 aud_att23
19:21:47  28  ,att24 aud_att24
19:21:47  29  ,att25 aud_att25
19:21:47  30  ,att26 aud_att26
19:21:47  31  ,att27 aud_att27
19:21:47  32  ,att28 aud_att28
19:21:47  33  ,att29 aud_att29
19:21:47  34  ,att30 aud_att30
19:21:47  35  ,att31 aud_att31
19:21:47  36  ,att32 aud_att32
19:21:47  37  FROM q15
19:21:47  38  /

Table created.

Elapsed: 00:00:00.16
19:21:47 SQL> 
19:21:47 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
19:21:47 SQL> 
19:21:47 SQL> -- rpt
19:21:47 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     18211

Elapsed: 00:00:00.00
19:21:47 SQL> 
19:21:47 SQL> --
19:21:47 SQL> -- gbp10.sql
19:21:47 SQL> --
19:21:47 SQL> 
19:21:47 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:21:47 SQL> 
19:21:47 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.41
19:21:48 SQL> 
19:21:48 SQL> -- I created di5min here:
19:21:48 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:21:48 SQL> 
19:21:48 SQL> CREATE OR REPLACE VIEW q11 AS
19:21:48   2  SELECT
19:21:48   3  pair
19:21:48   4  ,ydate
19:21:48   5  ,prdate
19:21:48   6  ,rownum rnum -- acts as t in my time-series
19:21:48   7  ,clse
19:21:48   8  ,LAG(clse,6*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:21:48   9  ,LAG(clse,6*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:21:48  10  ,LAG(clse,6*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:21:48  11  ,LAG(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:21:48  12  ,LAG(clse,6*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:21:48  13  ,LAG(clse,6*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:21:48  14  ,LAG(clse,6*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:21:48  15  ,LAG(clse,6*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:21:48  16  ,LAG(clse,6*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:21:48  17  ,LAG(clse,6*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:21:48  18  ,LAG(clse,6*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:21:48  19  ,LAG(clse,6*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:21:48  20  ,LAG(clse,6*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:21:48  21  ,LEAD(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:21:48  22  FROM di5min WHERE pair LIKE'%gbp%'
19:21:48  23  ORDER BY ydate
19:21:48  24  /

View created.

Elapsed: 00:00:00.05
19:21:48 SQL> 
19:21:48 SQL> -- rpt
19:21:48 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        18643

Elapsed: 00:00:00.31
19:21:48 SQL> 
19:21:48 SQL> -- Calc deltas and gains
19:21:48 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
19:21:48 SQL> 
19:21:48 SQL> CREATE TABLE q13 COMPRESS AS
19:21:48   2  SELECT
19:21:48   3  pair
19:21:48   4  ,ydate
19:21:48   5  ,prdate
19:21:48   6  ,rnum
19:21:48   7  ,lg4
19:21:48   8  ,lg8
19:21:48   9  ,lg12
19:21:48  10  ,ld4
19:21:48  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:21:48  12  -- step by 1
19:21:48  13  ,clse-lg1 d01
19:21:48  14  ,lg1-lg2	d12
19:21:48  15  ,lg2-lg3	d23
19:21:48  16  ,lg3-lg4	d34
19:21:48  17  ,lg4-lg5	d45
19:21:48  18  ,lg5-lg6	d56
19:21:48  19  ,lg6-lg7	d67
19:21:48  20  ,lg7-lg8	d78
19:21:48  21  ,lg8-lg9	d89
19:21:48  22  -- step by 2
19:21:48  23  ,clse-lg2 d02
19:21:48  24  ,lg2-lg4 d24
19:21:48  25  ,lg4-lg6 d46
19:21:48  26  ,lg6-lg8 d68
19:21:48  27  -- step by 3
19:21:48  28  ,clse-lg3 d03
19:21:48  29  ,lg3-lg6	d36
19:21:48  30  ,lg6-lg9	d69
19:21:48  31  ,lg9-lg12 d912
19:21:48  32  -- step by 4
19:21:48  33  ,clse-lg4 d04
19:21:48  34  ,lg4-lg8	d48
19:21:48  35  ,lg8-lg12 d812
19:21:48  36  ,lg6-lg12 d612
19:21:48  37  ,lg12-lg18 d1218
19:21:48  38  --
19:21:48  39  ,ABS(clse-lg1)dc1
19:21:48  40  ,ABS(clse-lg2)dc2
19:21:48  41  ,ABS(clse-lg3)dc3
19:21:48  42  ,ABS(clse-lg4)dc4
19:21:48  43  ,ABS(clse-lg5)dc5
19:21:48  44  ,ABS(clse-lg6)dc6
19:21:48  45  ,ABS(clse-lg7)dc7
19:21:48  46  ,ABS(clse-lg8)dc8
19:21:48  47  ,ABS(clse-lg9)dc9
19:21:48  48  ,ABS(clse-lg12)dc12
19:21:48  49  ,ABS(clse-lg18)dc18
19:21:48  50  ,ABS(clse-lg24)dc24
19:21:48  51  ,ABS(clse-lg72)dc72
19:21:48  52  ,(ld4-clse) ug4
19:21:48  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*2  PRECEDING AND CURRENT ROW)crr2
19:21:48  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*3  PRECEDING AND CURRENT ROW)crr3
19:21:48  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*4  PRECEDING AND CURRENT ROW)crr4
19:21:48  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*5  PRECEDING AND CURRENT ROW)crr5
19:21:48  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*6  PRECEDING AND CURRENT ROW)crr6
19:21:48  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*7  PRECEDING AND CURRENT ROW)crr7
19:21:48  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*8  PRECEDING AND CURRENT ROW)crr8
19:21:48  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*9  PRECEDING AND CURRENT ROW)crr9
19:21:48  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*12 PRECEDING AND CURRENT ROW)crr12
19:21:48  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*24 PRECEDING AND CURRENT ROW)crr24
19:21:48  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*72 PRECEDING AND CURRENT ROW)crr72
19:21:48  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:21:48  65  ,0+TO_CHAR(ydate,'D')d
19:21:48  66  ,0+TO_CHAR(ydate,'W')w
19:21:48  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:21:48  68  FROM q11
19:21:48  69  -- I dont want any NULL values from the LAG() functions:
19:21:48  70  WHERE lg72 > 0
19:21:48  71  ORDER BY pair,ydate
19:21:48  72  /

Table created.

Elapsed: 00:00:01.48
19:21:50 SQL> 
19:21:50 SQL> -- rpt
19:21:50 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9059
	-1	    9152

Elapsed: 00:00:00.02
19:21:50 SQL> 
19:21:50 SQL> -- Calc gains and ntiles
19:21:50 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.16
19:21:50 SQL> CREATE TABLE q15 COMPRESS AS
19:21:50   2  SELECT
19:21:50   3  pair
19:21:50   4  ,ydate
19:21:50   5  ,prdate -- Should be unique
19:21:50   6  ,trend -- +1 or -1
19:21:50   7  ,dc12 -- next statement needs this
19:21:50   8  -- Use NTILE() to derive some attributes
19:21:50   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:21:50  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:21:50  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:21:50  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:21:50  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:21:50  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:21:50  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:21:50  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:21:50  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:21:50  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:21:50  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:21:50  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:21:50  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:21:50  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:21:50  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:21:50  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:21:50  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:21:50  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:21:50  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:21:50  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:21:50  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:21:50  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:21:50  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:21:50  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:21:50  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:21:50  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:21:50  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:21:50  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:21:50  37  -- date related integers: hour of day, day of week, week of month:
19:21:50  38  ,hh    att28
19:21:50  39  ,d     att29
19:21:50  40  ,w     att30
19:21:50  41  ,mpm   att31
19:21:50  42  ,trend att32
19:21:50  43  ,ug4 g4
19:21:50  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:21:50  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:21:50  46  FROM q13
19:21:50  47  ORDER BY pair,ydate
19:21:50  48  /

Table created.

Elapsed: 00:00:03.57
19:21:54 SQL> 
19:21:54 SQL> -- rpt
19:21:54 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:21:54   2  GROUP BY pair,trend,gatt,gattn
19:21:54   3  ORDER BY pair,trend,gatt,gattn
19:21:54   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -9.823E-06	    1662    .027138956
gbp_usd 	-1 nup up  -.00320685	    3743    .023526574
gbp_usd 	-1 up  nup .003457004	    3723    -.03013915
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup -1.668E-06	    1574    .026963894
gbp_usd 	 1 nup up  -.00315693	    3757    .061114431
gbp_usd 	 1 up  nup .003498297	    3728    -.11108955

7 rows selected.

Elapsed: 00:00:00.04
19:21:54 SQL> 
19:21:54 SQL> -- rpt
19:21:54 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-15 17:50:00

Elapsed: 00:00:00.01
19:21:54 SQL> 
19:21:54 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
19:21:54 SQL> CREATE TABLE modsrc COMPRESS AS
19:21:54   2  SELECT
19:21:54   3  pair
19:21:54   4  ,ydate
19:21:54   5  ,prdate
19:21:54   6  ,trend
19:21:54   7  ,g4
19:21:54   8  ,gatt
19:21:54   9  ,gattn
19:21:54  10  ,dc12
19:21:54  11  FROM q15
19:21:54  12  /

Table created.

Elapsed: 00:00:00.09
19:21:54 SQL> 
19:21:54 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
19:21:54 SQL> 
19:21:54 SQL> -- rpt
19:21:54 SQL> 
19:21:54 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      18643

Elapsed: 00:00:00.31
19:21:54 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      18211

Elapsed: 00:00:00.01
19:21:54 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      18211

Elapsed: 00:00:00.00
19:21:54 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      18211

Elapsed: 00:00:00.00
19:21:54 SQL> 
19:21:54 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:21:54   2  GROUP BY pair,trend,gatt,gattn
19:21:54   3  ORDER BY pair,trend,gatt,gattn
19:21:54   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -9.823E-06	    1662    .027138956
gbp_usd 	-1 nup up  -.00320685	    3743    .023526574
gbp_usd 	-1 up  nup .003457004	    3723    -.03013915
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup -1.668E-06	    1574    .026963894
gbp_usd 	 1 nup up  -.00315693	    3757    .061114431
gbp_usd 	 1 up  nup .003498297	    3728    -.11108955

7 rows selected.

Elapsed: 00:00:00.03
19:21:54 SQL> 
19:21:54 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.06
19:21:54 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
19:21:54   2  SELECT
19:21:54   3  ydate
19:21:54   4  ,trend gbp_trend
19:21:54   5  ,g4    gbp_g4
19:21:54   6  ,gatt  gbp_gatt
19:21:54   7  ,gattn	gbp_gattn
19:21:54   8  FROM modsrc
19:21:54   9  /

Table created.

Elapsed: 00:00:00.08
19:21:55 SQL> 
19:21:55 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
19:21:55 SQL> 
19:21:55 SQL> -- rpt
19:21:55 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-06-21 14:50:01 2010-12-15 03:50:00	 9059	  -.0194      .0192
	-1 2010-06-21 16:40:01 2010-12-15 17:50:00	 9128	  -.0153      .0189

Elapsed: 00:00:00.02
19:21:55 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-06-21 14:50:01 2010-12-15 03:50:00	       9059	 -.0194       .0192
	-1 2010-06-21 16:40:01 2010-12-15 17:50:00	       9152	 -.0153       .0189

Elapsed: 00:00:00.02
19:21:55 SQL> 
19:21:55 SQL> -- I need a copy of q15 attributes
19:21:55 SQL> 
19:21:55 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.04
19:21:55 SQL> CREATE TABLE gbp_att COMPRESS AS
19:21:55   2  SELECT
19:21:55   3  ydate
19:21:55   4  ,att00 gbp_att00
19:21:55   5  ,att01 gbp_att01
19:21:55   6  ,att02 gbp_att02
19:21:55   7  ,att03 gbp_att03
19:21:55   8  ,att04 gbp_att04
19:21:55   9  ,att05 gbp_att05
19:21:55  10  ,att06 gbp_att06
19:21:55  11  ,att07 gbp_att07
19:21:55  12  ,att08 gbp_att08
19:21:55  13  ,att09 gbp_att09
19:21:55  14  ,att10 gbp_att10
19:21:55  15  ,att11 gbp_att11
19:21:55  16  ,att12 gbp_att12
19:21:55  17  ,att13 gbp_att13
19:21:55  18  ,att14 gbp_att14
19:21:55  19  ,att15 gbp_att15
19:21:55  20  ,att16 gbp_att16
19:21:55  21  ,att17 gbp_att17
19:21:55  22  ,att18 gbp_att18
19:21:55  23  ,att19 gbp_att19
19:21:55  24  ,att20 gbp_att20
19:21:55  25  ,att21 gbp_att21
19:21:55  26  ,att22 gbp_att22
19:21:55  27  ,att23 gbp_att23
19:21:55  28  ,att24 gbp_att24
19:21:55  29  ,att25 gbp_att25
19:21:55  30  ,att26 gbp_att26
19:21:55  31  ,att27 gbp_att27
19:21:55  32  ,att28 gbp_att28
19:21:55  33  ,att29 gbp_att29
19:21:55  34  ,att30 gbp_att30
19:21:55  35  ,att31 gbp_att31
19:21:55  36  ,att32 gbp_att32
19:21:55  37  FROM q15
19:21:55  38  /

Table created.

Elapsed: 00:00:00.17
19:21:55 SQL> 
19:21:55 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.41
19:21:55 SQL> 
19:21:55 SQL> -- rpt
19:21:55 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     18211

Elapsed: 00:00:00.00
19:21:55 SQL> 
19:21:55 SQL> --
19:21:55 SQL> -- jpy10.sql
19:21:55 SQL> --
19:21:55 SQL> 
19:21:55 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:21:55 SQL> 
19:21:55 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.41
19:21:56 SQL> 
19:21:56 SQL> -- I created di5min here:
19:21:56 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:21:56 SQL> 
19:21:56 SQL> CREATE OR REPLACE VIEW q11 AS
19:21:56   2  SELECT
19:21:56   3  pair
19:21:56   4  ,ydate
19:21:56   5  ,prdate
19:21:56   6  ,rownum rnum -- acts as t in my time-series
19:21:56   7  ,clse
19:21:56   8  ,LAG(clse,6*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:21:56   9  ,LAG(clse,6*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:21:56  10  ,LAG(clse,6*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:21:56  11  ,LAG(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:21:56  12  ,LAG(clse,6*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:21:56  13  ,LAG(clse,6*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:21:56  14  ,LAG(clse,6*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:21:56  15  ,LAG(clse,6*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:21:56  16  ,LAG(clse,6*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:21:56  17  ,LAG(clse,6*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:21:56  18  ,LAG(clse,6*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:21:56  19  ,LAG(clse,6*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:21:56  20  ,LAG(clse,6*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:21:56  21  ,LEAD(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:21:56  22  FROM di5min WHERE pair LIKE'%jpy%'
19:21:56  23  ORDER BY ydate
19:21:56  24  /

View created.

Elapsed: 00:00:00.05
19:21:56 SQL> 
19:21:56 SQL> -- rpt
19:21:56 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        18644

Elapsed: 00:00:00.34
19:21:56 SQL> 
19:21:56 SQL> -- Calc deltas and gains
19:21:56 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.18
19:21:56 SQL> 
19:21:56 SQL> CREATE TABLE q13 COMPRESS AS
19:21:56   2  SELECT
19:21:56   3  pair
19:21:56   4  ,ydate
19:21:56   5  ,prdate
19:21:56   6  ,rnum
19:21:56   7  ,lg4
19:21:56   8  ,lg8
19:21:56   9  ,lg12
19:21:56  10  ,ld4
19:21:56  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:21:56  12  -- step by 1
19:21:56  13  ,clse-lg1 d01
19:21:56  14  ,lg1-lg2	d12
19:21:56  15  ,lg2-lg3	d23
19:21:56  16  ,lg3-lg4	d34
19:21:56  17  ,lg4-lg5	d45
19:21:56  18  ,lg5-lg6	d56
19:21:56  19  ,lg6-lg7	d67
19:21:56  20  ,lg7-lg8	d78
19:21:56  21  ,lg8-lg9	d89
19:21:56  22  -- step by 2
19:21:56  23  ,clse-lg2 d02
19:21:56  24  ,lg2-lg4 d24
19:21:56  25  ,lg4-lg6 d46
19:21:56  26  ,lg6-lg8 d68
19:21:56  27  -- step by 3
19:21:56  28  ,clse-lg3 d03
19:21:56  29  ,lg3-lg6	d36
19:21:56  30  ,lg6-lg9	d69
19:21:56  31  ,lg9-lg12 d912
19:21:56  32  -- step by 4
19:21:56  33  ,clse-lg4 d04
19:21:56  34  ,lg4-lg8	d48
19:21:56  35  ,lg8-lg12 d812
19:21:56  36  ,lg6-lg12 d612
19:21:56  37  ,lg12-lg18 d1218
19:21:56  38  --
19:21:56  39  ,ABS(clse-lg1)dc1
19:21:56  40  ,ABS(clse-lg2)dc2
19:21:56  41  ,ABS(clse-lg3)dc3
19:21:56  42  ,ABS(clse-lg4)dc4
19:21:56  43  ,ABS(clse-lg5)dc5
19:21:56  44  ,ABS(clse-lg6)dc6
19:21:56  45  ,ABS(clse-lg7)dc7
19:21:56  46  ,ABS(clse-lg8)dc8
19:21:56  47  ,ABS(clse-lg9)dc9
19:21:56  48  ,ABS(clse-lg12)dc12
19:21:56  49  ,ABS(clse-lg18)dc18
19:21:56  50  ,ABS(clse-lg24)dc24
19:21:56  51  ,ABS(clse-lg72)dc72
19:21:56  52  ,(ld4-clse) ug4
19:21:56  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*2  PRECEDING AND CURRENT ROW)crr2
19:21:56  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*3  PRECEDING AND CURRENT ROW)crr3
19:21:56  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*4  PRECEDING AND CURRENT ROW)crr4
19:21:56  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*5  PRECEDING AND CURRENT ROW)crr5
19:21:56  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*6  PRECEDING AND CURRENT ROW)crr6
19:21:56  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*7  PRECEDING AND CURRENT ROW)crr7
19:21:56  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*8  PRECEDING AND CURRENT ROW)crr8
19:21:56  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*9  PRECEDING AND CURRENT ROW)crr9
19:21:56  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*12 PRECEDING AND CURRENT ROW)crr12
19:21:56  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*24 PRECEDING AND CURRENT ROW)crr24
19:21:56  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*72 PRECEDING AND CURRENT ROW)crr72
19:21:56  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:21:56  65  ,0+TO_CHAR(ydate,'D')d
19:21:56  66  ,0+TO_CHAR(ydate,'W')w
19:21:56  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:21:56  68  FROM q11
19:21:56  69  -- I dont want any NULL values from the LAG() functions:
19:21:56  70  WHERE lg72 > 0
19:21:56  71  ORDER BY pair,ydate
19:21:56  72  /

Table created.

Elapsed: 00:00:01.47
19:21:58 SQL> 
19:21:58 SQL> -- rpt
19:21:58 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    8115
	-1	   10097

Elapsed: 00:00:00.05
19:21:58 SQL> 
19:21:58 SQL> -- Calc gains and ntiles
19:21:58 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.19
19:21:58 SQL> CREATE TABLE q15 COMPRESS AS
19:21:58   2  SELECT
19:21:58   3  pair
19:21:58   4  ,ydate
19:21:58   5  ,prdate -- Should be unique
19:21:58   6  ,trend -- +1 or -1
19:21:58   7  ,dc12 -- next statement needs this
19:21:58   8  -- Use NTILE() to derive some attributes
19:21:58   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:21:58  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:21:58  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:21:58  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:21:58  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:21:58  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:21:58  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:21:58  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:21:58  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:21:58  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:21:58  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:21:58  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:21:58  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:21:58  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:21:58  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:21:58  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:21:58  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:21:58  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:21:58  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:21:58  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:21:58  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:21:58  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:21:58  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:21:58  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:21:58  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:21:58  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:21:58  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:21:58  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:21:58  37  -- date related integers: hour of day, day of week, week of month:
19:21:58  38  ,hh    att28
19:21:58  39  ,d     att29
19:21:58  40  ,w     att30
19:21:58  41  ,mpm   att31
19:21:58  42  ,trend att32
19:21:58  43  ,ug4 g4
19:21:58  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:21:58  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:21:58  46  FROM q13
19:21:58  47  ORDER BY pair,ydate
19:21:58  48  /

Table created.

Elapsed: 00:00:03.60
19:22:02 SQL> 
19:22:02 SQL> -- rpt
19:22:02 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:22:02   2  GROUP BY pair,trend,gatt,gattn
19:22:02   3  ORDER BY pair,trend,gatt,gattn
19:22:02   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     245
usd_jpy 	-1 nup up  -.15411024	    4962    .024281394
usd_jpy 	-1 up  nup .146742936	    4884    .048544695
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     175
usd_jpy 	 1 nup up  -.15667279	    4358    -.05120202
usd_jpy 	 1 up  nup .157254489	    3564    .144901157
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
19:22:02 SQL> 
19:22:02 SQL> -- rpt
19:22:02 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-15 17:50:00

Elapsed: 00:00:00.01
19:22:02 SQL> 
19:22:02 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.19
19:22:02 SQL> CREATE TABLE modsrc COMPRESS AS
19:22:02   2  SELECT
19:22:02   3  pair
19:22:02   4  ,ydate
19:22:02   5  ,prdate
19:22:02   6  ,trend
19:22:02   7  ,g4
19:22:02   8  ,gatt
19:22:02   9  ,gattn
19:22:02  10  ,dc12
19:22:02  11  FROM q15
19:22:02  12  /

Table created.

Elapsed: 00:00:00.07
19:22:02 SQL> 
19:22:02 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
19:22:02 SQL> 
19:22:02 SQL> -- rpt
19:22:02 SQL> 
19:22:02 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      18644

Elapsed: 00:00:00.31
19:22:03 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.01
19:22:03 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.00
19:22:03 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.00
19:22:03 SQL> 
19:22:03 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:22:03   2  GROUP BY pair,trend,gatt,gattn
19:22:03   3  ORDER BY pair,trend,gatt,gattn
19:22:03   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     245
usd_jpy 	-1 nup up  -.15411024	    4962    .024281394
usd_jpy 	-1 up  nup .146742936	    4884    .048544695
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     175
usd_jpy 	 1 nup up  -.15667279	    4358    -.05120202
usd_jpy 	 1 up  nup .157254489	    3564    .144901157
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
19:22:03 SQL> 
19:22:03 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
19:22:03 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
19:22:03   2  SELECT
19:22:03   3  ydate
19:22:03   4  ,trend jpy_trend
19:22:03   5  ,g4    jpy_g4
19:22:03   6  ,gatt  jpy_gatt
19:22:03   7  ,gattn	jpy_gattn
19:22:03   8  FROM modsrc
19:22:03   9  /

Table created.

Elapsed: 00:00:00.06
19:22:03 SQL> 
19:22:03 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
19:22:03 SQL> 
19:22:03 SQL> -- rpt
19:22:03 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-06-21 14:50:01 2010-12-15 17:50:00	 8097	   -1.07       1.04
	-1 2010-06-22 06:20:01 2010-12-15 15:10:00	10091	   -1.18       1.99

Elapsed: 00:00:00.02
19:22:03 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-06-21 14:50:01 2010-12-15 17:50:00	       8115	  -1.07        1.04
	-1 2010-06-22 06:20:01 2010-12-15 15:10:00	      10097	  -1.18        1.99

Elapsed: 00:00:00.01
19:22:03 SQL> 
19:22:03 SQL> -- I need a copy of q15 attributes
19:22:03 SQL> 
19:22:03 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.07
19:22:03 SQL> CREATE TABLE jpy_att COMPRESS AS
19:22:03   2  SELECT
19:22:03   3  ydate
19:22:03   4  ,att00 jpy_att00
19:22:03   5  ,att01 jpy_att01
19:22:03   6  ,att02 jpy_att02
19:22:03   7  ,att03 jpy_att03
19:22:03   8  ,att04 jpy_att04
19:22:03   9  ,att05 jpy_att05
19:22:03  10  ,att06 jpy_att06
19:22:03  11  ,att07 jpy_att07
19:22:03  12  ,att08 jpy_att08
19:22:03  13  ,att09 jpy_att09
19:22:03  14  ,att10 jpy_att10
19:22:03  15  ,att11 jpy_att11
19:22:03  16  ,att12 jpy_att12
19:22:03  17  ,att13 jpy_att13
19:22:03  18  ,att14 jpy_att14
19:22:03  19  ,att15 jpy_att15
19:22:03  20  ,att16 jpy_att16
19:22:03  21  ,att17 jpy_att17
19:22:03  22  ,att18 jpy_att18
19:22:03  23  ,att19 jpy_att19
19:22:03  24  ,att20 jpy_att20
19:22:03  25  ,att21 jpy_att21
19:22:03  26  ,att22 jpy_att22
19:22:03  27  ,att23 jpy_att23
19:22:03  28  ,att24 jpy_att24
19:22:03  29  ,att25 jpy_att25
19:22:03  30  ,att26 jpy_att26
19:22:03  31  ,att27 jpy_att27
19:22:03  32  ,att28 jpy_att28
19:22:03  33  ,att29 jpy_att29
19:22:03  34  ,att30 jpy_att30
19:22:03  35  ,att31 jpy_att31
19:22:03  36  ,att32 jpy_att32
19:22:03  37  FROM q15
19:22:03  38  /

Table created.

Elapsed: 00:00:00.16
19:22:03 SQL> 
19:22:03 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.41
19:22:03 SQL> 
19:22:03 SQL> -- rpt
19:22:03 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     18212

Elapsed: 00:00:00.00
19:22:03 SQL> 
19:22:03 SQL> --
19:22:03 SQL> -- cad10.sql
19:22:03 SQL> --
19:22:03 SQL> 
19:22:03 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:22:03 SQL> 
19:22:03 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.43
19:22:04 SQL> 
19:22:04 SQL> -- I created di5min here:
19:22:04 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:22:04 SQL> 
19:22:04 SQL> CREATE OR REPLACE VIEW q11 AS
19:22:04   2  SELECT
19:22:04   3  pair
19:22:04   4  ,ydate
19:22:04   5  ,prdate
19:22:04   6  ,rownum rnum -- acts as t in my time-series
19:22:04   7  ,clse
19:22:04   8  ,LAG(clse,6*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:22:04   9  ,LAG(clse,6*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:22:04  10  ,LAG(clse,6*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:22:04  11  ,LAG(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:22:04  12  ,LAG(clse,6*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:22:04  13  ,LAG(clse,6*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:22:04  14  ,LAG(clse,6*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:22:04  15  ,LAG(clse,6*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:22:04  16  ,LAG(clse,6*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:22:04  17  ,LAG(clse,6*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:22:04  18  ,LAG(clse,6*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:22:04  19  ,LAG(clse,6*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:22:04  20  ,LAG(clse,6*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:22:04  21  ,LEAD(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:22:04  22  FROM di5min WHERE pair LIKE'%cad%'
19:22:04  23  ORDER BY ydate
19:22:04  24  /

View created.

Elapsed: 00:00:00.05
19:22:04 SQL> 
19:22:04 SQL> -- rpt
19:22:04 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        18644

Elapsed: 00:00:00.32
19:22:04 SQL> 
19:22:04 SQL> -- Calc deltas and gains
19:22:04 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
19:22:04 SQL> 
19:22:04 SQL> CREATE TABLE q13 COMPRESS AS
19:22:04   2  SELECT
19:22:04   3  pair
19:22:04   4  ,ydate
19:22:04   5  ,prdate
19:22:04   6  ,rnum
19:22:04   7  ,lg4
19:22:04   8  ,lg8
19:22:04   9  ,lg12
19:22:04  10  ,ld4
19:22:04  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:22:04  12  -- step by 1
19:22:04  13  ,clse-lg1 d01
19:22:04  14  ,lg1-lg2	d12
19:22:04  15  ,lg2-lg3	d23
19:22:04  16  ,lg3-lg4	d34
19:22:04  17  ,lg4-lg5	d45
19:22:04  18  ,lg5-lg6	d56
19:22:04  19  ,lg6-lg7	d67
19:22:04  20  ,lg7-lg8	d78
19:22:04  21  ,lg8-lg9	d89
19:22:04  22  -- step by 2
19:22:04  23  ,clse-lg2 d02
19:22:04  24  ,lg2-lg4 d24
19:22:04  25  ,lg4-lg6 d46
19:22:04  26  ,lg6-lg8 d68
19:22:04  27  -- step by 3
19:22:04  28  ,clse-lg3 d03
19:22:04  29  ,lg3-lg6	d36
19:22:04  30  ,lg6-lg9	d69
19:22:04  31  ,lg9-lg12 d912
19:22:04  32  -- step by 4
19:22:04  33  ,clse-lg4 d04
19:22:04  34  ,lg4-lg8	d48
19:22:04  35  ,lg8-lg12 d812
19:22:04  36  ,lg6-lg12 d612
19:22:04  37  ,lg12-lg18 d1218
19:22:04  38  --
19:22:04  39  ,ABS(clse-lg1)dc1
19:22:04  40  ,ABS(clse-lg2)dc2
19:22:04  41  ,ABS(clse-lg3)dc3
19:22:04  42  ,ABS(clse-lg4)dc4
19:22:04  43  ,ABS(clse-lg5)dc5
19:22:04  44  ,ABS(clse-lg6)dc6
19:22:04  45  ,ABS(clse-lg7)dc7
19:22:04  46  ,ABS(clse-lg8)dc8
19:22:04  47  ,ABS(clse-lg9)dc9
19:22:04  48  ,ABS(clse-lg12)dc12
19:22:04  49  ,ABS(clse-lg18)dc18
19:22:04  50  ,ABS(clse-lg24)dc24
19:22:04  51  ,ABS(clse-lg72)dc72
19:22:04  52  ,(ld4-clse) ug4
19:22:04  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*2  PRECEDING AND CURRENT ROW)crr2
19:22:04  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*3  PRECEDING AND CURRENT ROW)crr3
19:22:04  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*4  PRECEDING AND CURRENT ROW)crr4
19:22:04  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*5  PRECEDING AND CURRENT ROW)crr5
19:22:04  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*6  PRECEDING AND CURRENT ROW)crr6
19:22:04  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*7  PRECEDING AND CURRENT ROW)crr7
19:22:04  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*8  PRECEDING AND CURRENT ROW)crr8
19:22:04  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*9  PRECEDING AND CURRENT ROW)crr9
19:22:04  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*12 PRECEDING AND CURRENT ROW)crr12
19:22:04  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*24 PRECEDING AND CURRENT ROW)crr24
19:22:04  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*72 PRECEDING AND CURRENT ROW)crr72
19:22:04  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:22:04  65  ,0+TO_CHAR(ydate,'D')d
19:22:04  66  ,0+TO_CHAR(ydate,'W')w
19:22:04  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:22:04  68  FROM q11
19:22:04  69  -- I dont want any NULL values from the LAG() functions:
19:22:04  70  WHERE lg72 > 0
19:22:04  71  ORDER BY pair,ydate
19:22:04  72  /

Table created.

Elapsed: 00:00:01.50
19:22:06 SQL> 
19:22:06 SQL> -- rpt
19:22:06 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    8479
	-1	    9733

Elapsed: 00:00:00.02
19:22:06 SQL> 
19:22:06 SQL> -- Calc gains and ntiles
19:22:06 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
19:22:06 SQL> CREATE TABLE q15 COMPRESS AS
19:22:06   2  SELECT
19:22:06   3  pair
19:22:06   4  ,ydate
19:22:06   5  ,prdate -- Should be unique
19:22:06   6  ,trend -- +1 or -1
19:22:06   7  ,dc12 -- next statement needs this
19:22:06   8  -- Use NTILE() to derive some attributes
19:22:06   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:22:06  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:22:06  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:22:06  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:22:06  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:22:06  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:22:06  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:22:06  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:22:06  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:22:06  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:22:06  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:22:06  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:22:06  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:22:06  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:22:06  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:22:06  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:22:06  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:22:06  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:22:06  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:22:06  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:22:06  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:22:06  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:22:06  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:22:06  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:22:06  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:22:06  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:22:06  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:22:06  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:22:06  37  -- date related integers: hour of day, day of week, week of month:
19:22:06  38  ,hh    att28
19:22:06  39  ,d     att29
19:22:06  40  ,w     att30
19:22:06  41  ,mpm   att31
19:22:06  42  ,trend att32
19:22:06  43  ,ug4 g4
19:22:06  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:22:06  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:22:06  46  FROM q13
19:22:06  47  ORDER BY pair,ydate
19:22:06  48  /

Table created.

Elapsed: 00:00:03.52
19:22:10 SQL> 
19:22:10 SQL> -- rpt
19:22:10 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:22:10   2  GROUP BY pair,trend,gatt,gattn
19:22:10   3  ORDER BY pair,trend,gatt,gattn
19:22:10   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00000834	    2452    -.01478505
usd_cad 	-1 nup up  -.00244882	    3747    .083035821
usd_cad 	-1 up  nup .002592051	    3510    -.00285136
usd_cad 	-1			       0
usd_cad 	 1 nup nup -.00001803	    2010    -.00353745
usd_cad 	 1 nup up  -.00258383	    3417    .030156712
usd_cad 	 1 up  nup .002790719	    3052    .011338451

7 rows selected.

Elapsed: 00:00:00.04
19:22:10 SQL> 
19:22:10 SQL> -- rpt
19:22:10 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-15 17:50:00

Elapsed: 00:00:00.01
19:22:10 SQL> 
19:22:10 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
19:22:10 SQL> CREATE TABLE modsrc COMPRESS AS
19:22:10   2  SELECT
19:22:10   3  pair
19:22:10   4  ,ydate
19:22:10   5  ,prdate
19:22:10   6  ,trend
19:22:10   7  ,g4
19:22:10   8  ,gatt
19:22:10   9  ,gattn
19:22:10  10  ,dc12
19:22:10  11  FROM q15
19:22:10  12  /

Table created.

Elapsed: 00:00:00.10
19:22:10 SQL> 
19:22:10 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
19:22:10 SQL> 
19:22:10 SQL> -- rpt
19:22:10 SQL> 
19:22:10 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      18644

Elapsed: 00:00:00.31
19:22:10 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.01
19:22:10 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.00
19:22:10 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.00
19:22:10 SQL> 
19:22:10 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:22:10   2  GROUP BY pair,trend,gatt,gattn
19:22:10   3  ORDER BY pair,trend,gatt,gattn
19:22:10   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00000834	    2452    -.01478505
usd_cad 	-1 nup up  -.00244882	    3747    .083035821
usd_cad 	-1 up  nup .002592051	    3510    -.00285136
usd_cad 	-1			       0
usd_cad 	 1 nup nup -.00001803	    2010    -.00353745
usd_cad 	 1 nup up  -.00258383	    3417    .030156712
usd_cad 	 1 up  nup .002790719	    3052    .011338451

7 rows selected.

Elapsed: 00:00:00.03
19:22:10 SQL> 
19:22:10 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
19:22:10 SQL> CREATE TABLE cad_ms10 COMPRESS AS
19:22:10   2  SELECT
19:22:10   3  ydate
19:22:10   4  ,trend cad_trend
19:22:10   5  ,g4    cad_g4
19:22:10   6  ,gatt  cad_gatt
19:22:10   7  ,gattn	cad_gattn
19:22:10   8  FROM modsrc
19:22:10   9  /

Table created.

Elapsed: 00:00:00.06
19:22:11 SQL> 
19:22:11 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
19:22:11 SQL> 
19:22:11 SQL> -- rpt
19:22:11 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-06-21 17:30:01 2010-12-15 12:00:00	 8479	  -.0153      .0164
	-1 2010-06-21 14:50:01 2010-12-15 17:50:00	 9709	  -.0127      .0151

Elapsed: 00:00:00.03
19:22:11 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-06-21 17:30:01 2010-12-15 12:00:00	       8479	 -.0153       .0164
	-1 2010-06-21 14:50:01 2010-12-15 17:50:00	       9733	 -.0127       .0151

Elapsed: 00:00:00.01
19:22:11 SQL> 
19:22:11 SQL> -- I need a copy of q15 attributes
19:22:11 SQL> 
19:22:11 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.04
19:22:11 SQL> CREATE TABLE cad_att COMPRESS AS
19:22:11   2  SELECT
19:22:11   3  ydate
19:22:11   4  ,att00 cad_att00
19:22:11   5  ,att01 cad_att01
19:22:11   6  ,att02 cad_att02
19:22:11   7  ,att03 cad_att03
19:22:11   8  ,att04 cad_att04
19:22:11   9  ,att05 cad_att05
19:22:11  10  ,att06 cad_att06
19:22:11  11  ,att07 cad_att07
19:22:11  12  ,att08 cad_att08
19:22:11  13  ,att09 cad_att09
19:22:11  14  ,att10 cad_att10
19:22:11  15  ,att11 cad_att11
19:22:11  16  ,att12 cad_att12
19:22:11  17  ,att13 cad_att13
19:22:11  18  ,att14 cad_att14
19:22:11  19  ,att15 cad_att15
19:22:11  20  ,att16 cad_att16
19:22:11  21  ,att17 cad_att17
19:22:11  22  ,att18 cad_att18
19:22:11  23  ,att19 cad_att19
19:22:11  24  ,att20 cad_att20
19:22:11  25  ,att21 cad_att21
19:22:11  26  ,att22 cad_att22
19:22:11  27  ,att23 cad_att23
19:22:11  28  ,att24 cad_att24
19:22:11  29  ,att25 cad_att25
19:22:11  30  ,att26 cad_att26
19:22:11  31  ,att27 cad_att27
19:22:11  32  ,att28 cad_att28
19:22:11  33  ,att29 cad_att29
19:22:11  34  ,att30 cad_att30
19:22:11  35  ,att31 cad_att31
19:22:11  36  ,att32 cad_att32
19:22:11  37  FROM q15
19:22:11  38  /

Table created.

Elapsed: 00:00:00.16
19:22:11 SQL> 
19:22:11 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.44
19:22:11 SQL> 
19:22:11 SQL> -- rpt
19:22:11 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     18212

Elapsed: 00:00:00.00
19:22:11 SQL> 
19:22:11 SQL> --
19:22:11 SQL> -- chf10.sql
19:22:11 SQL> --
19:22:11 SQL> 
19:22:11 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:22:11 SQL> 
19:22:11 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.36
19:22:12 SQL> 
19:22:12 SQL> -- I created di5min here:
19:22:12 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:22:12 SQL> 
19:22:12 SQL> CREATE OR REPLACE VIEW q11 AS
19:22:12   2  SELECT
19:22:12   3  pair
19:22:12   4  ,ydate
19:22:12   5  ,prdate
19:22:12   6  ,rownum rnum -- acts as t in my time-series
19:22:12   7  ,clse
19:22:12   8  ,LAG(clse,6*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:22:12   9  ,LAG(clse,6*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:22:12  10  ,LAG(clse,6*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:22:12  11  ,LAG(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:22:12  12  ,LAG(clse,6*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:22:12  13  ,LAG(clse,6*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:22:12  14  ,LAG(clse,6*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:22:12  15  ,LAG(clse,6*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:22:12  16  ,LAG(clse,6*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:22:12  17  ,LAG(clse,6*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:22:12  18  ,LAG(clse,6*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:22:12  19  ,LAG(clse,6*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:22:12  20  ,LAG(clse,6*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:22:12  21  ,LEAD(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:22:12  22  FROM di5min WHERE pair LIKE'%chf%'
19:22:12  23  ORDER BY ydate
19:22:12  24  /

View created.

Elapsed: 00:00:00.05
19:22:12 SQL> 
19:22:12 SQL> -- rpt
19:22:12 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        18644

Elapsed: 00:00:00.31
19:22:12 SQL> 
19:22:12 SQL> -- Calc deltas and gains
19:22:12 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.23
19:22:12 SQL> 
19:22:12 SQL> CREATE TABLE q13 COMPRESS AS
19:22:12   2  SELECT
19:22:12   3  pair
19:22:12   4  ,ydate
19:22:12   5  ,prdate
19:22:12   6  ,rnum
19:22:12   7  ,lg4
19:22:12   8  ,lg8
19:22:12   9  ,lg12
19:22:12  10  ,ld4
19:22:12  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:22:12  12  -- step by 1
19:22:12  13  ,clse-lg1 d01
19:22:12  14  ,lg1-lg2	d12
19:22:12  15  ,lg2-lg3	d23
19:22:12  16  ,lg3-lg4	d34
19:22:12  17  ,lg4-lg5	d45
19:22:12  18  ,lg5-lg6	d56
19:22:12  19  ,lg6-lg7	d67
19:22:12  20  ,lg7-lg8	d78
19:22:12  21  ,lg8-lg9	d89
19:22:12  22  -- step by 2
19:22:12  23  ,clse-lg2 d02
19:22:12  24  ,lg2-lg4 d24
19:22:12  25  ,lg4-lg6 d46
19:22:12  26  ,lg6-lg8 d68
19:22:12  27  -- step by 3
19:22:12  28  ,clse-lg3 d03
19:22:12  29  ,lg3-lg6	d36
19:22:12  30  ,lg6-lg9	d69
19:22:12  31  ,lg9-lg12 d912
19:22:12  32  -- step by 4
19:22:12  33  ,clse-lg4 d04
19:22:12  34  ,lg4-lg8	d48
19:22:12  35  ,lg8-lg12 d812
19:22:12  36  ,lg6-lg12 d612
19:22:12  37  ,lg12-lg18 d1218
19:22:12  38  --
19:22:12  39  ,ABS(clse-lg1)dc1
19:22:12  40  ,ABS(clse-lg2)dc2
19:22:12  41  ,ABS(clse-lg3)dc3
19:22:12  42  ,ABS(clse-lg4)dc4
19:22:12  43  ,ABS(clse-lg5)dc5
19:22:12  44  ,ABS(clse-lg6)dc6
19:22:12  45  ,ABS(clse-lg7)dc7
19:22:12  46  ,ABS(clse-lg8)dc8
19:22:12  47  ,ABS(clse-lg9)dc9
19:22:12  48  ,ABS(clse-lg12)dc12
19:22:12  49  ,ABS(clse-lg18)dc18
19:22:12  50  ,ABS(clse-lg24)dc24
19:22:12  51  ,ABS(clse-lg72)dc72
19:22:12  52  ,(ld4-clse) ug4
19:22:12  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*2  PRECEDING AND CURRENT ROW)crr2
19:22:12  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*3  PRECEDING AND CURRENT ROW)crr3
19:22:12  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*4  PRECEDING AND CURRENT ROW)crr4
19:22:12  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*5  PRECEDING AND CURRENT ROW)crr5
19:22:12  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*6  PRECEDING AND CURRENT ROW)crr6
19:22:12  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*7  PRECEDING AND CURRENT ROW)crr7
19:22:12  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*8  PRECEDING AND CURRENT ROW)crr8
19:22:12  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*9  PRECEDING AND CURRENT ROW)crr9
19:22:12  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*12 PRECEDING AND CURRENT ROW)crr12
19:22:12  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*24 PRECEDING AND CURRENT ROW)crr24
19:22:12  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*72 PRECEDING AND CURRENT ROW)crr72
19:22:12  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:22:12  65  ,0+TO_CHAR(ydate,'D')d
19:22:12  66  ,0+TO_CHAR(ydate,'W')w
19:22:12  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:22:12  68  FROM q11
19:22:12  69  -- I dont want any NULL values from the LAG() functions:
19:22:12  70  WHERE lg72 > 0
19:22:12  71  ORDER BY pair,ydate
19:22:12  72  /

Table created.

Elapsed: 00:00:01.47
19:22:14 SQL> 
19:22:14 SQL> -- rpt
19:22:14 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    8178
	-1	   10034

Elapsed: 00:00:00.02
19:22:14 SQL> 
19:22:14 SQL> -- Calc gains and ntiles
19:22:14 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.14
19:22:14 SQL> CREATE TABLE q15 COMPRESS AS
19:22:14   2  SELECT
19:22:14   3  pair
19:22:14   4  ,ydate
19:22:14   5  ,prdate -- Should be unique
19:22:14   6  ,trend -- +1 or -1
19:22:14   7  ,dc12 -- next statement needs this
19:22:14   8  -- Use NTILE() to derive some attributes
19:22:14   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:22:14  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:22:14  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:22:14  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:22:14  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:22:14  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:22:14  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:22:14  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:22:14  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:22:14  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:22:14  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:22:14  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:22:14  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:22:14  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:22:14  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:22:14  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:22:14  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:22:14  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:22:14  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:22:14  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:22:14  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:22:14  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:22:14  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:22:14  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:22:14  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:22:14  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:22:14  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:22:14  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:22:14  37  -- date related integers: hour of day, day of week, week of month:
19:22:14  38  ,hh    att28
19:22:14  39  ,d     att29
19:22:14  40  ,w     att30
19:22:14  41  ,mpm   att31
19:22:14  42  ,trend att32
19:22:14  43  ,ug4 g4
19:22:14  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:22:14  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:22:14  46  FROM q13
19:22:14  47  ORDER BY pair,ydate
19:22:14  48  /

Table created.

Elapsed: 00:00:03.52
19:22:17 SQL> 
19:22:17 SQL> -- rpt
19:22:17 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:22:17   2  GROUP BY pair,trend,gatt,gattn
19:22:17   3  ORDER BY pair,trend,gatt,gattn
19:22:17   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000028205	    2566     .05520731
usd_chf 	-1 nup up   -.0029293	    3716    .069773965
usd_chf 	-1 up  nup .002542579	    3736    -.11711552
usd_chf 	-1			       0
usd_chf 	 1 nup nup 1.8381E-06	    2013    .035355583
usd_chf 	 1 nup up  -.00267545	    3433      .0982342
usd_chf 	 1 up  nup .002536665	    2724    -.13498577
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
19:22:18 SQL> 
19:22:18 SQL> -- rpt
19:22:18 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-15 17:50:00

Elapsed: 00:00:00.01
19:22:18 SQL> 
19:22:18 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.15
19:22:18 SQL> CREATE TABLE modsrc COMPRESS AS
19:22:18   2  SELECT
19:22:18   3  pair
19:22:18   4  ,ydate
19:22:18   5  ,prdate
19:22:18   6  ,trend
19:22:18   7  ,g4
19:22:18   8  ,gatt
19:22:18   9  ,gattn
19:22:18  10  ,dc12
19:22:18  11  FROM q15
19:22:18  12  /

Table created.

Elapsed: 00:00:00.09
19:22:18 SQL> 
19:22:18 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.27
19:22:18 SQL> 
19:22:18 SQL> -- rpt
19:22:18 SQL> 
19:22:18 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      18644

Elapsed: 00:00:00.31
19:22:18 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.01
19:22:18 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.00
19:22:18 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.00
19:22:18 SQL> 
19:22:18 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:22:18   2  GROUP BY pair,trend,gatt,gattn
19:22:18   3  ORDER BY pair,trend,gatt,gattn
19:22:18   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000028205	    2566     .05520731
usd_chf 	-1 nup up   -.0029293	    3716    .069773965
usd_chf 	-1 up  nup .002542579	    3736    -.11711552
usd_chf 	-1			       0
usd_chf 	 1 nup nup 1.8381E-06	    2013    .035355583
usd_chf 	 1 nup up  -.00267545	    3433      .0982342
usd_chf 	 1 up  nup .002536665	    2724    -.13498577
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
19:22:18 SQL> 
19:22:18 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
19:22:18 SQL> CREATE TABLE chf_ms10 COMPRESS AS
19:22:18   2  SELECT
19:22:18   3  ydate
19:22:18   4  ,trend chf_trend
19:22:18   5  ,g4    chf_g4
19:22:18   6  ,gatt  chf_gatt
19:22:18   7  ,gattn	chf_gattn
19:22:18   8  FROM modsrc
19:22:18   9  /

Table created.

Elapsed: 00:00:00.05
19:22:18 SQL> 
19:22:18 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
19:22:19 SQL> 
19:22:19 SQL> -- rpt
19:22:19 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-06-21 16:40:01 2010-12-15 17:50:00	 8170	-.016775      .0136
	-1 2010-06-21 14:50:01 2010-12-15 16:30:00	10018	  -.0166      .0149

Elapsed: 00:00:00.02
19:22:19 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-06-21 16:40:01 2010-12-15 17:50:00	       8178    -.016775       .0136
	-1 2010-06-21 14:50:01 2010-12-15 16:30:00	      10034	 -.0166       .0149

Elapsed: 00:00:00.01
19:22:19 SQL> 
19:22:19 SQL> -- I need a copy of q15 attributes
19:22:19 SQL> 
19:22:19 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.05
19:22:19 SQL> CREATE TABLE chf_att COMPRESS AS
19:22:19   2  SELECT
19:22:19   3  ydate
19:22:19   4  ,att00 chf_att00
19:22:19   5  ,att01 chf_att01
19:22:19   6  ,att02 chf_att02
19:22:19   7  ,att03 chf_att03
19:22:19   8  ,att04 chf_att04
19:22:19   9  ,att05 chf_att05
19:22:19  10  ,att06 chf_att06
19:22:19  11  ,att07 chf_att07
19:22:19  12  ,att08 chf_att08
19:22:19  13  ,att09 chf_att09
19:22:19  14  ,att10 chf_att10
19:22:19  15  ,att11 chf_att11
19:22:19  16  ,att12 chf_att12
19:22:19  17  ,att13 chf_att13
19:22:19  18  ,att14 chf_att14
19:22:19  19  ,att15 chf_att15
19:22:19  20  ,att16 chf_att16
19:22:19  21  ,att17 chf_att17
19:22:19  22  ,att18 chf_att18
19:22:19  23  ,att19 chf_att19
19:22:19  24  ,att20 chf_att20
19:22:19  25  ,att21 chf_att21
19:22:19  26  ,att22 chf_att22
19:22:19  27  ,att23 chf_att23
19:22:19  28  ,att24 chf_att24
19:22:19  29  ,att25 chf_att25
19:22:19  30  ,att26 chf_att26
19:22:19  31  ,att27 chf_att27
19:22:19  32  ,att28 chf_att28
19:22:19  33  ,att29 chf_att29
19:22:19  34  ,att30 chf_att30
19:22:19  35  ,att31 chf_att31
19:22:19  36  ,att32 chf_att32
19:22:19  37  FROM q15
19:22:19  38  /

Table created.

Elapsed: 00:00:00.15
19:22:19 SQL> 
19:22:19 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.50
19:22:19 SQL> 
19:22:19 SQL> -- rpt
19:22:19 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     18212

Elapsed: 00:00:00.00
19:22:19 SQL> 
19:22:19 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
