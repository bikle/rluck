
SQL*Plus: Release 11.2.0.1.0 Production on Wed Dec 15 19:37:42 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

19:37:42 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
19:37:42 SQL> 19:37:42 SQL> --
19:37:42 SQL> -- eur10.sql
19:37:42 SQL> --
19:37:42 SQL> 
19:37:42 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:37:42 SQL> 
19:37:42 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.49
19:37:42 SQL> 
19:37:42 SQL> -- I created di5min here:
19:37:42 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:37:42 SQL> 
19:37:42 SQL> CREATE OR REPLACE VIEW q11 AS
19:37:42   2  SELECT
19:37:42   3  pair
19:37:42   4  ,ydate
19:37:42   5  ,prdate
19:37:42   6  ,rownum rnum -- acts as t in my time-series
19:37:42   7  ,clse
19:37:42   8  ,LAG(clse,6*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:37:42   9  ,LAG(clse,6*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:37:42  10  ,LAG(clse,6*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:37:42  11  ,LAG(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:37:42  12  ,LAG(clse,6*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:37:42  13  ,LAG(clse,6*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:37:42  14  ,LAG(clse,6*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:37:42  15  ,LAG(clse,6*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:37:42  16  ,LAG(clse,6*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:37:42  17  ,LAG(clse,6*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:37:42  18  ,LAG(clse,6*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:37:42  19  ,LAG(clse,6*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:37:42  20  ,LAG(clse,6*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:37:42  21  ,LEAD(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:37:42  22  FROM di5min WHERE pair LIKE'%eur%'
19:37:42  23  ORDER BY ydate
19:37:42  24  /

View created.

Elapsed: 00:00:00.10
19:37:42 SQL> 
19:37:42 SQL> -- rpt
19:37:42 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        18644

Elapsed: 00:00:00.34
19:37:43 SQL> 
19:37:43 SQL> -- Calc deltas and gains
19:37:43 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.06
19:37:43 SQL> 
19:37:43 SQL> CREATE TABLE q13 COMPRESS AS
19:37:43   2  SELECT
19:37:43   3  pair
19:37:43   4  ,ydate
19:37:43   5  ,prdate
19:37:43   6  ,rnum
19:37:43   7  ,lg4
19:37:43   8  ,lg8
19:37:43   9  ,lg12
19:37:43  10  ,ld4
19:37:43  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:37:43  12  -- step by 1
19:37:43  13  ,clse-lg1 d01
19:37:43  14  ,lg1-lg2	d12
19:37:43  15  ,lg2-lg3	d23
19:37:43  16  ,lg3-lg4	d34
19:37:43  17  ,lg4-lg5	d45
19:37:43  18  ,lg5-lg6	d56
19:37:43  19  ,lg6-lg7	d67
19:37:43  20  ,lg7-lg8	d78
19:37:43  21  ,lg8-lg9	d89
19:37:43  22  -- step by 2
19:37:43  23  ,clse-lg2 d02
19:37:43  24  ,lg2-lg4 d24
19:37:43  25  ,lg4-lg6 d46
19:37:43  26  ,lg6-lg8 d68
19:37:43  27  -- step by 3
19:37:43  28  ,clse-lg3 d03
19:37:43  29  ,lg3-lg6	d36
19:37:43  30  ,lg6-lg9	d69
19:37:43  31  ,lg9-lg12 d912
19:37:43  32  -- step by 4
19:37:43  33  ,clse-lg4 d04
19:37:43  34  ,lg4-lg8	d48
19:37:43  35  ,lg8-lg12 d812
19:37:43  36  ,lg6-lg12 d612
19:37:43  37  ,lg12-lg18 d1218
19:37:43  38  --
19:37:43  39  ,ABS(clse-lg1)dc1
19:37:43  40  ,ABS(clse-lg2)dc2
19:37:43  41  ,ABS(clse-lg3)dc3
19:37:43  42  ,ABS(clse-lg4)dc4
19:37:43  43  ,ABS(clse-lg5)dc5
19:37:43  44  ,ABS(clse-lg6)dc6
19:37:43  45  ,ABS(clse-lg7)dc7
19:37:43  46  ,ABS(clse-lg8)dc8
19:37:43  47  ,ABS(clse-lg9)dc9
19:37:43  48  ,ABS(clse-lg12)dc12
19:37:43  49  ,ABS(clse-lg18)dc18
19:37:43  50  ,ABS(clse-lg24)dc24
19:37:43  51  ,ABS(clse-lg72)dc72
19:37:43  52  ,(ld4-clse) ug4
19:37:43  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*2  PRECEDING AND CURRENT ROW)crr2
19:37:43  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*3  PRECEDING AND CURRENT ROW)crr3
19:37:43  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*4  PRECEDING AND CURRENT ROW)crr4
19:37:43  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*5  PRECEDING AND CURRENT ROW)crr5
19:37:43  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*6  PRECEDING AND CURRENT ROW)crr6
19:37:43  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*7  PRECEDING AND CURRENT ROW)crr7
19:37:43  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*8  PRECEDING AND CURRENT ROW)crr8
19:37:43  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*9  PRECEDING AND CURRENT ROW)crr9
19:37:43  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*12 PRECEDING AND CURRENT ROW)crr12
19:37:43  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*24 PRECEDING AND CURRENT ROW)crr24
19:37:43  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*72 PRECEDING AND CURRENT ROW)crr72
19:37:43  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:37:43  65  ,0+TO_CHAR(ydate,'D')d
19:37:43  66  ,0+TO_CHAR(ydate,'W')w
19:37:43  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:37:43  68  FROM q11
19:37:43  69  -- I dont want any NULL values from the LAG() functions:
19:37:43  70  WHERE lg72 > 0
19:37:43  71  ORDER BY pair,ydate
19:37:43  72  /

Table created.

Elapsed: 00:00:01.75
19:37:44 SQL> 
19:37:44 SQL> -- rpt
19:37:44 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9397
	-1	    8815

Elapsed: 00:00:00.03
19:37:44 SQL> 
19:37:44 SQL> -- Calc gains and ntiles
19:37:44 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.03
19:37:45 SQL> CREATE TABLE q15 COMPRESS AS
19:37:45   2  SELECT
19:37:45   3  pair
19:37:45   4  ,ydate
19:37:45   5  ,prdate -- Should be unique
19:37:45   6  ,trend -- +1 or -1
19:37:45   7  ,dc12 -- next statement needs this
19:37:45   8  -- Use NTILE() to derive some attributes
19:37:45   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:37:45  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:37:45  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:37:45  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:37:45  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:37:45  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:37:45  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:37:45  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:37:45  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:37:45  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:37:45  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:37:45  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:37:45  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:37:45  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:37:45  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:37:45  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:37:45  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:37:45  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:37:45  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:37:45  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:37:45  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:37:45  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:37:45  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:37:45  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:37:45  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:37:45  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:37:45  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:37:45  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:37:45  37  -- date related integers: hour of day, day of week, week of month:
19:37:45  38  ,hh    att28
19:37:45  39  ,d     att29
19:37:45  40  ,w     att30
19:37:45  41  ,mpm   att31
19:37:45  42  ,trend att32
19:37:45  43  ,ug4 g4
19:37:45  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:37:45  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:37:45  46  FROM q13
19:37:45  47  ORDER BY pair,ydate
19:37:45  48  /

Table created.

Elapsed: 00:00:03.59
19:37:48 SQL> 
19:37:48 SQL> -- rpt
19:37:48 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:37:48   2  GROUP BY pair,trend,gatt,gattn
19:37:48   3  ORDER BY pair,trend,gatt,gattn
19:37:48   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -8.933E-06	    1556    .017845076
eur_usd 	-1 nup up  -.00333028	    3560    .023512137
eur_usd 	-1 up  nup .003597738	    3681    -.16538797
eur_usd 	-1			       0
eur_usd 	 1 nup nup -3.539E-06	    1787    .027043047
eur_usd 	 1 nup up  -.00311969	    3854    .079612124
eur_usd 	 1 up  nup .003475607	    3750    -.03599509
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.61
19:37:49 SQL> 
19:37:49 SQL> -- rpt
19:37:49 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-15 17:50:00

Elapsed: 00:00:00.02
19:37:49 SQL> 
19:37:49 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.04
19:37:49 SQL> CREATE TABLE modsrc COMPRESS AS
19:37:49   2  SELECT
19:37:49   3  pair
19:37:49   4  ,ydate
19:37:49   5  ,prdate
19:37:49   6  ,trend
19:37:49   7  ,g4
19:37:49   8  ,gatt
19:37:49   9  ,gattn
19:37:49  10  ,dc12
19:37:49  11  FROM q15
19:37:49  12  /

Table created.

Elapsed: 00:00:00.17
19:37:49 SQL> 
19:37:49 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.67
19:37:50 SQL> 
19:37:50 SQL> -- rpt
19:37:50 SQL> 
19:37:50 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      18644

Elapsed: 00:00:00.31
19:37:50 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.01
19:37:50 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.00
19:37:50 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.00
19:37:50 SQL> 
19:37:50 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:37:50   2  GROUP BY pair,trend,gatt,gattn
19:37:50   3  ORDER BY pair,trend,gatt,gattn
19:37:50   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -8.933E-06	    1556    .017845076
eur_usd 	-1 nup up  -.00333028	    3560    .023512137
eur_usd 	-1 up  nup .003597738	    3681    -.16538797
eur_usd 	-1			       0
eur_usd 	 1 nup nup -3.539E-06	    1787    .027043047
eur_usd 	 1 nup up  -.00311969	    3854    .079612124
eur_usd 	 1 up  nup .003475607	    3750    -.03599509
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
19:37:50 SQL> 
19:37:50 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
19:37:50 SQL> CREATE TABLE eur_ms10 COMPRESS AS
19:37:50   2  SELECT
19:37:50   3  ydate
19:37:50   4  ,trend eur_trend
19:37:50   5  ,g4    eur_g4
19:37:50   6  ,gatt  eur_gatt
19:37:50   7  ,gattn	eur_gattn
19:37:50   8  FROM modsrc
19:37:50   9  /

Table created.

Elapsed: 00:00:00.11
19:37:50 SQL> 
19:37:50 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.31
19:37:50 SQL> 
19:37:50 SQL> -- rpt
19:37:50 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-06-21 14:50:01 2010-12-15 15:20:00	 9391	  -.0153      .0165
	-1 2010-06-21 16:40:01 2010-12-15 17:50:00	 8797	  -.0164      .0167

Elapsed: 00:00:00.02
19:37:50 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-06-21 14:50:01 2010-12-15 15:20:00	       9397	 -.0153       .0165
	-1 2010-06-21 16:40:01 2010-12-15 17:50:00	       8815	 -.0164       .0167

Elapsed: 00:00:00.01
19:37:50 SQL> 
19:37:50 SQL> -- I need a copy of q15 attributes
19:37:50 SQL> 
19:37:50 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.04
19:37:51 SQL> CREATE TABLE eur_att COMPRESS AS
19:37:51   2  SELECT
19:37:51   3  ydate
19:37:51   4  ,att00 eur_att00
19:37:51   5  ,att01 eur_att01
19:37:51   6  ,att02 eur_att02
19:37:51   7  ,att03 eur_att03
19:37:51   8  ,att04 eur_att04
19:37:51   9  ,att05 eur_att05
19:37:51  10  ,att06 eur_att06
19:37:51  11  ,att07 eur_att07
19:37:51  12  ,att08 eur_att08
19:37:51  13  ,att09 eur_att09
19:37:51  14  ,att10 eur_att10
19:37:51  15  ,att11 eur_att11
19:37:51  16  ,att12 eur_att12
19:37:51  17  ,att13 eur_att13
19:37:51  18  ,att14 eur_att14
19:37:51  19  ,att15 eur_att15
19:37:51  20  ,att16 eur_att16
19:37:51  21  ,att17 eur_att17
19:37:51  22  ,att18 eur_att18
19:37:51  23  ,att19 eur_att19
19:37:51  24  ,att20 eur_att20
19:37:51  25  ,att21 eur_att21
19:37:51  26  ,att22 eur_att22
19:37:51  27  ,att23 eur_att23
19:37:51  28  ,att24 eur_att24
19:37:51  29  ,att25 eur_att25
19:37:51  30  ,att26 eur_att26
19:37:51  31  ,att27 eur_att27
19:37:51  32  ,att28 eur_att28
19:37:51  33  ,att29 eur_att29
19:37:51  34  ,att30 eur_att30
19:37:51  35  ,att31 eur_att31
19:37:51  36  ,att32 eur_att32
19:37:51  37  FROM q15
19:37:51  38  /

Table created.

Elapsed: 00:00:00.24
19:37:51 SQL> 
19:37:51 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.83
19:37:52 SQL> 
19:37:52 SQL> -- rpt
19:37:52 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     18212

Elapsed: 00:00:00.00
19:37:52 SQL> 
19:37:52 SQL> --
19:37:52 SQL> -- aud10.sql
19:37:52 SQL> --
19:37:52 SQL> 
19:37:52 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:37:52 SQL> 
19:37:52 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.96
19:37:53 SQL> 
19:37:53 SQL> -- I created di5min here:
19:37:53 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:37:53 SQL> 
19:37:53 SQL> CREATE OR REPLACE VIEW q11 AS
19:37:53   2  SELECT
19:37:53   3  pair
19:37:53   4  ,ydate
19:37:53   5  ,prdate
19:37:53   6  ,rownum rnum -- acts as t in my time-series
19:37:53   7  ,clse
19:37:53   8  ,LAG(clse,6*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:37:53   9  ,LAG(clse,6*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:37:53  10  ,LAG(clse,6*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:37:53  11  ,LAG(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:37:53  12  ,LAG(clse,6*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:37:53  13  ,LAG(clse,6*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:37:53  14  ,LAG(clse,6*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:37:53  15  ,LAG(clse,6*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:37:53  16  ,LAG(clse,6*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:37:53  17  ,LAG(clse,6*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:37:53  18  ,LAG(clse,6*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:37:53  19  ,LAG(clse,6*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:37:53  20  ,LAG(clse,6*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:37:53  21  ,LEAD(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:37:53  22  FROM di5min WHERE pair LIKE'%aud%'
19:37:53  23  ORDER BY ydate
19:37:53  24  /

View created.

Elapsed: 00:00:00.13
19:37:53 SQL> 
19:37:53 SQL> -- rpt
19:37:53 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        18643

Elapsed: 00:00:00.33
19:37:53 SQL> 
19:37:53 SQL> -- Calc deltas and gains
19:37:53 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
19:37:53 SQL> 
19:37:53 SQL> CREATE TABLE q13 COMPRESS AS
19:37:53   2  SELECT
19:37:53   3  pair
19:37:53   4  ,ydate
19:37:53   5  ,prdate
19:37:53   6  ,rnum
19:37:53   7  ,lg4
19:37:53   8  ,lg8
19:37:53   9  ,lg12
19:37:53  10  ,ld4
19:37:53  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:37:53  12  -- step by 1
19:37:53  13  ,clse-lg1 d01
19:37:53  14  ,lg1-lg2	d12
19:37:53  15  ,lg2-lg3	d23
19:37:53  16  ,lg3-lg4	d34
19:37:53  17  ,lg4-lg5	d45
19:37:53  18  ,lg5-lg6	d56
19:37:53  19  ,lg6-lg7	d67
19:37:53  20  ,lg7-lg8	d78
19:37:53  21  ,lg8-lg9	d89
19:37:53  22  -- step by 2
19:37:53  23  ,clse-lg2 d02
19:37:53  24  ,lg2-lg4 d24
19:37:53  25  ,lg4-lg6 d46
19:37:53  26  ,lg6-lg8 d68
19:37:53  27  -- step by 3
19:37:53  28  ,clse-lg3 d03
19:37:53  29  ,lg3-lg6	d36
19:37:53  30  ,lg6-lg9	d69
19:37:53  31  ,lg9-lg12 d912
19:37:53  32  -- step by 4
19:37:53  33  ,clse-lg4 d04
19:37:53  34  ,lg4-lg8	d48
19:37:53  35  ,lg8-lg12 d812
19:37:53  36  ,lg6-lg12 d612
19:37:53  37  ,lg12-lg18 d1218
19:37:53  38  --
19:37:53  39  ,ABS(clse-lg1)dc1
19:37:53  40  ,ABS(clse-lg2)dc2
19:37:53  41  ,ABS(clse-lg3)dc3
19:37:53  42  ,ABS(clse-lg4)dc4
19:37:53  43  ,ABS(clse-lg5)dc5
19:37:53  44  ,ABS(clse-lg6)dc6
19:37:53  45  ,ABS(clse-lg7)dc7
19:37:53  46  ,ABS(clse-lg8)dc8
19:37:53  47  ,ABS(clse-lg9)dc9
19:37:53  48  ,ABS(clse-lg12)dc12
19:37:53  49  ,ABS(clse-lg18)dc18
19:37:53  50  ,ABS(clse-lg24)dc24
19:37:53  51  ,ABS(clse-lg72)dc72
19:37:53  52  ,(ld4-clse) ug4
19:37:53  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*2  PRECEDING AND CURRENT ROW)crr2
19:37:53  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*3  PRECEDING AND CURRENT ROW)crr3
19:37:53  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*4  PRECEDING AND CURRENT ROW)crr4
19:37:53  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*5  PRECEDING AND CURRENT ROW)crr5
19:37:53  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*6  PRECEDING AND CURRENT ROW)crr6
19:37:53  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*7  PRECEDING AND CURRENT ROW)crr7
19:37:53  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*8  PRECEDING AND CURRENT ROW)crr8
19:37:53  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*9  PRECEDING AND CURRENT ROW)crr9
19:37:53  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*12 PRECEDING AND CURRENT ROW)crr12
19:37:53  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*24 PRECEDING AND CURRENT ROW)crr24
19:37:53  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*72 PRECEDING AND CURRENT ROW)crr72
19:37:53  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:37:53  65  ,0+TO_CHAR(ydate,'D')d
19:37:53  66  ,0+TO_CHAR(ydate,'W')w
19:37:53  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:37:53  68  FROM q11
19:37:53  69  -- I dont want any NULL values from the LAG() functions:
19:37:53  70  WHERE lg72 > 0
19:37:53  71  ORDER BY pair,ydate
19:37:53  72  /

Table created.

Elapsed: 00:00:01.56
19:37:55 SQL> 
19:37:55 SQL> -- rpt
19:37:55 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9396
	-1	    8815

Elapsed: 00:00:03.38
19:37:58 SQL> 
19:37:58 SQL> -- Calc gains and ntiles
19:37:58 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.19
19:37:58 SQL> CREATE TABLE q15 COMPRESS AS
19:37:58   2  SELECT
19:37:58   3  pair
19:37:58   4  ,ydate
19:37:58   5  ,prdate -- Should be unique
19:37:58   6  ,trend -- +1 or -1
19:37:58   7  ,dc12 -- next statement needs this
19:37:58   8  -- Use NTILE() to derive some attributes
19:37:58   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:37:58  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:37:58  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:37:58  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:37:58  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:37:58  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:37:58  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:37:58  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:37:58  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:37:58  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:37:58  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:37:58  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:37:58  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:37:58  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:37:58  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:37:58  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:37:58  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:37:58  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:37:58  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:37:58  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:37:58  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:37:58  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:37:58  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:37:58  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:37:58  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:37:58  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:37:58  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:37:58  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:37:58  37  -- date related integers: hour of day, day of week, week of month:
19:37:58  38  ,hh    att28
19:37:58  39  ,d     att29
19:37:58  40  ,w     att30
19:37:58  41  ,mpm   att31
19:37:58  42  ,trend att32
19:37:58  43  ,ug4 g4
19:37:58  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:37:58  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:37:58  46  FROM q13
19:37:58  47  ORDER BY pair,ydate
19:37:58  48  /

Table created.

Elapsed: 00:00:03.67
19:38:02 SQL> 
19:38:02 SQL> -- rpt
19:38:02 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:38:02   2  GROUP BY pair,trend,gatt,gattn
19:38:02   3  ORDER BY pair,trend,gatt,gattn
19:38:02   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000019961	    1548    -.01579838
aud_usd 	-1 nup up  -.00302308	    3377    -.03765284
aud_usd 	-1 up  nup .002948345	    3866    .026000641
aud_usd 	-1			       0
aud_usd 	 1 nup nup -7.481E-06	    1848    .029928361
aud_usd 	 1 nup up  -.00277946	    3625    .028811907
aud_usd 	 1 up  nup .002958629	    3923    -.03786373

7 rows selected.

Elapsed: 00:00:01.02
19:38:03 SQL> 
19:38:03 SQL> -- rpt
19:38:03 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-15 17:50:00

Elapsed: 00:00:00.01
19:38:03 SQL> 
19:38:03 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
19:38:03 SQL> CREATE TABLE modsrc COMPRESS AS
19:38:03   2  SELECT
19:38:03   3  pair
19:38:03   4  ,ydate
19:38:03   5  ,prdate
19:38:03   6  ,trend
19:38:03   7  ,g4
19:38:03   8  ,gatt
19:38:03   9  ,gattn
19:38:03  10  ,dc12
19:38:03  11  FROM q15
19:38:03  12  /

Table created.

Elapsed: 00:00:00.18
19:38:03 SQL> 
19:38:03 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.91
19:38:04 SQL> 
19:38:04 SQL> -- rpt
19:38:04 SQL> 
19:38:04 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      18643

Elapsed: 00:00:00.31
19:38:05 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      18211

Elapsed: 00:00:00.01
19:38:05 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      18211

Elapsed: 00:00:00.00
19:38:05 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      18211

Elapsed: 00:00:00.00
19:38:05 SQL> 
19:38:05 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:38:05   2  GROUP BY pair,trend,gatt,gattn
19:38:05   3  ORDER BY pair,trend,gatt,gattn
19:38:05   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000019961	    1548    -.01579838
aud_usd 	-1 nup up  -.00302308	    3377    -.03765284
aud_usd 	-1 up  nup .002948345	    3866    .026000641
aud_usd 	-1			       0
aud_usd 	 1 nup nup -7.481E-06	    1848    .029928361
aud_usd 	 1 nup up  -.00277946	    3625    .028811907
aud_usd 	 1 up  nup .002958629	    3923    -.03786373

7 rows selected.

Elapsed: 00:00:00.03
19:38:05 SQL> 
19:38:05 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.08
19:38:05 SQL> CREATE TABLE aud_ms10 COMPRESS AS
19:38:05   2  SELECT
19:38:05   3  ydate
19:38:05   4  ,trend aud_trend
19:38:05   5  ,g4    aud_g4
19:38:05   6  ,gatt  aud_gatt
19:38:05   7  ,gattn	aud_gattn
19:38:05   8  FROM modsrc
19:38:05   9  /

Table created.

Elapsed: 00:00:00.19
19:38:05 SQL> 
19:38:05 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
19:38:05 SQL> 
19:38:05 SQL> -- rpt
19:38:05 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-06-21 14:50:01 2010-12-14 22:20:00	 9396	  -.0162      .0122
	-1 2010-06-21 23:50:01 2010-12-15 17:50:00	 8791	   -.017      .0131

Elapsed: 00:00:00.02
19:38:05 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-06-21 14:50:01 2010-12-14 22:20:00	       9396	 -.0162       .0122
	-1 2010-06-21 23:50:01 2010-12-15 17:50:00	       8815	  -.017       .0131

Elapsed: 00:00:00.01
19:38:05 SQL> 
19:38:05 SQL> -- I need a copy of q15 attributes
19:38:05 SQL> 
19:38:05 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.11
19:38:05 SQL> CREATE TABLE aud_att COMPRESS AS
19:38:05   2  SELECT
19:38:05   3  ydate
19:38:05   4  ,att00 aud_att00
19:38:05   5  ,att01 aud_att01
19:38:05   6  ,att02 aud_att02
19:38:05   7  ,att03 aud_att03
19:38:05   8  ,att04 aud_att04
19:38:05   9  ,att05 aud_att05
19:38:05  10  ,att06 aud_att06
19:38:05  11  ,att07 aud_att07
19:38:05  12  ,att08 aud_att08
19:38:05  13  ,att09 aud_att09
19:38:05  14  ,att10 aud_att10
19:38:05  15  ,att11 aud_att11
19:38:05  16  ,att12 aud_att12
19:38:05  17  ,att13 aud_att13
19:38:05  18  ,att14 aud_att14
19:38:05  19  ,att15 aud_att15
19:38:05  20  ,att16 aud_att16
19:38:05  21  ,att17 aud_att17
19:38:05  22  ,att18 aud_att18
19:38:05  23  ,att19 aud_att19
19:38:05  24  ,att20 aud_att20
19:38:05  25  ,att21 aud_att21
19:38:05  26  ,att22 aud_att22
19:38:05  27  ,att23 aud_att23
19:38:05  28  ,att24 aud_att24
19:38:05  29  ,att25 aud_att25
19:38:05  30  ,att26 aud_att26
19:38:05  31  ,att27 aud_att27
19:38:05  32  ,att28 aud_att28
19:38:05  33  ,att29 aud_att29
19:38:05  34  ,att30 aud_att30
19:38:05  35  ,att31 aud_att31
19:38:05  36  ,att32 aud_att32
19:38:05  37  FROM q15
19:38:05  38  /

Table created.

Elapsed: 00:00:00.32
19:38:06 SQL> 
19:38:06 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:01.02
19:38:07 SQL> 
19:38:07 SQL> -- rpt
19:38:07 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     18211

Elapsed: 00:00:00.01
19:38:07 SQL> 
19:38:07 SQL> --
19:38:07 SQL> -- gbp10.sql
19:38:07 SQL> --
19:38:07 SQL> 
19:38:07 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:38:07 SQL> 
19:38:07 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:01.26
19:38:08 SQL> 
19:38:08 SQL> -- I created di5min here:
19:38:08 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:38:08 SQL> 
19:38:08 SQL> CREATE OR REPLACE VIEW q11 AS
19:38:08   2  SELECT
19:38:08   3  pair
19:38:08   4  ,ydate
19:38:08   5  ,prdate
19:38:08   6  ,rownum rnum -- acts as t in my time-series
19:38:08   7  ,clse
19:38:08   8  ,LAG(clse,6*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:38:08   9  ,LAG(clse,6*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:38:08  10  ,LAG(clse,6*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:38:08  11  ,LAG(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:38:08  12  ,LAG(clse,6*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:38:08  13  ,LAG(clse,6*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:38:08  14  ,LAG(clse,6*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:38:08  15  ,LAG(clse,6*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:38:08  16  ,LAG(clse,6*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:38:08  17  ,LAG(clse,6*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:38:08  18  ,LAG(clse,6*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:38:08  19  ,LAG(clse,6*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:38:08  20  ,LAG(clse,6*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:38:08  21  ,LEAD(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:38:08  22  FROM di5min WHERE pair LIKE'%gbp%'
19:38:08  23  ORDER BY ydate
19:38:08  24  /

View created.

Elapsed: 00:00:00.06
19:38:08 SQL> 
19:38:08 SQL> -- rpt
19:38:08 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        18643

Elapsed: 00:00:00.32
19:38:08 SQL> 
19:38:08 SQL> -- Calc deltas and gains
19:38:08 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.16
19:38:09 SQL> 
19:38:09 SQL> CREATE TABLE q13 COMPRESS AS
19:38:09   2  SELECT
19:38:09   3  pair
19:38:09   4  ,ydate
19:38:09   5  ,prdate
19:38:09   6  ,rnum
19:38:09   7  ,lg4
19:38:09   8  ,lg8
19:38:09   9  ,lg12
19:38:09  10  ,ld4
19:38:09  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:38:09  12  -- step by 1
19:38:09  13  ,clse-lg1 d01
19:38:09  14  ,lg1-lg2	d12
19:38:09  15  ,lg2-lg3	d23
19:38:09  16  ,lg3-lg4	d34
19:38:09  17  ,lg4-lg5	d45
19:38:09  18  ,lg5-lg6	d56
19:38:09  19  ,lg6-lg7	d67
19:38:09  20  ,lg7-lg8	d78
19:38:09  21  ,lg8-lg9	d89
19:38:09  22  -- step by 2
19:38:09  23  ,clse-lg2 d02
19:38:09  24  ,lg2-lg4 d24
19:38:09  25  ,lg4-lg6 d46
19:38:09  26  ,lg6-lg8 d68
19:38:09  27  -- step by 3
19:38:09  28  ,clse-lg3 d03
19:38:09  29  ,lg3-lg6	d36
19:38:09  30  ,lg6-lg9	d69
19:38:09  31  ,lg9-lg12 d912
19:38:09  32  -- step by 4
19:38:09  33  ,clse-lg4 d04
19:38:09  34  ,lg4-lg8	d48
19:38:09  35  ,lg8-lg12 d812
19:38:09  36  ,lg6-lg12 d612
19:38:09  37  ,lg12-lg18 d1218
19:38:09  38  --
19:38:09  39  ,ABS(clse-lg1)dc1
19:38:09  40  ,ABS(clse-lg2)dc2
19:38:09  41  ,ABS(clse-lg3)dc3
19:38:09  42  ,ABS(clse-lg4)dc4
19:38:09  43  ,ABS(clse-lg5)dc5
19:38:09  44  ,ABS(clse-lg6)dc6
19:38:09  45  ,ABS(clse-lg7)dc7
19:38:09  46  ,ABS(clse-lg8)dc8
19:38:09  47  ,ABS(clse-lg9)dc9
19:38:09  48  ,ABS(clse-lg12)dc12
19:38:09  49  ,ABS(clse-lg18)dc18
19:38:09  50  ,ABS(clse-lg24)dc24
19:38:09  51  ,ABS(clse-lg72)dc72
19:38:09  52  ,(ld4-clse) ug4
19:38:09  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*2  PRECEDING AND CURRENT ROW)crr2
19:38:09  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*3  PRECEDING AND CURRENT ROW)crr3
19:38:09  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*4  PRECEDING AND CURRENT ROW)crr4
19:38:09  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*5  PRECEDING AND CURRENT ROW)crr5
19:38:09  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*6  PRECEDING AND CURRENT ROW)crr6
19:38:09  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*7  PRECEDING AND CURRENT ROW)crr7
19:38:09  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*8  PRECEDING AND CURRENT ROW)crr8
19:38:09  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*9  PRECEDING AND CURRENT ROW)crr9
19:38:09  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*12 PRECEDING AND CURRENT ROW)crr12
19:38:09  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*24 PRECEDING AND CURRENT ROW)crr24
19:38:09  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*72 PRECEDING AND CURRENT ROW)crr72
19:38:09  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:38:09  65  ,0+TO_CHAR(ydate,'D')d
19:38:09  66  ,0+TO_CHAR(ydate,'W')w
19:38:09  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:38:09  68  FROM q11
19:38:09  69  -- I dont want any NULL values from the LAG() functions:
19:38:09  70  WHERE lg72 > 0
19:38:09  71  ORDER BY pair,ydate
19:38:09  72  /

Table created.

Elapsed: 00:00:01.52
19:38:10 SQL> 
19:38:10 SQL> -- rpt
19:38:10 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9059
	-1	    9152

Elapsed: 00:00:03.71
19:38:14 SQL> 
19:38:14 SQL> -- Calc gains and ntiles
19:38:14 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.16
19:38:14 SQL> CREATE TABLE q15 COMPRESS AS
19:38:14   2  SELECT
19:38:14   3  pair
19:38:14   4  ,ydate
19:38:14   5  ,prdate -- Should be unique
19:38:14   6  ,trend -- +1 or -1
19:38:14   7  ,dc12 -- next statement needs this
19:38:14   8  -- Use NTILE() to derive some attributes
19:38:14   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:38:14  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:38:14  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:38:14  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:38:14  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:38:14  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:38:14  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:38:14  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:38:14  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:38:14  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:38:14  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:38:14  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:38:14  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:38:14  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:38:14  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:38:14  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:38:14  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:38:14  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:38:14  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:38:14  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:38:14  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:38:14  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:38:14  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:38:14  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:38:14  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:38:14  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:38:14  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:38:14  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:38:14  37  -- date related integers: hour of day, day of week, week of month:
19:38:14  38  ,hh    att28
19:38:14  39  ,d     att29
19:38:14  40  ,w     att30
19:38:14  41  ,mpm   att31
19:38:14  42  ,trend att32
19:38:14  43  ,ug4 g4
19:38:14  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:38:14  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:38:14  46  FROM q13
19:38:14  47  ORDER BY pair,ydate
19:38:14  48  /

Table created.

Elapsed: 00:00:03.70
19:38:18 SQL> 
19:38:18 SQL> -- rpt
19:38:18 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:38:18   2  GROUP BY pair,trend,gatt,gattn
19:38:18   3  ORDER BY pair,trend,gatt,gattn
19:38:18   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -9.823E-06	    1662    .027138956
gbp_usd 	-1 nup up  -.00320685	    3743    .023526574
gbp_usd 	-1 up  nup .003457004	    3723    -.03013915
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup -1.668E-06	    1574    .026963894
gbp_usd 	 1 nup up  -.00315693	    3757    .061114431
gbp_usd 	 1 up  nup .003498297	    3728    -.11108955

7 rows selected.

Elapsed: 00:00:00.79
19:38:18 SQL> 
19:38:18 SQL> -- rpt
19:38:18 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-15 17:50:00

Elapsed: 00:00:00.01
19:38:18 SQL> 
19:38:18 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.27
19:38:19 SQL> CREATE TABLE modsrc COMPRESS AS
19:38:19   2  SELECT
19:38:19   3  pair
19:38:19   4  ,ydate
19:38:19   5  ,prdate
19:38:19   6  ,trend
19:38:19   7  ,g4
19:38:19   8  ,gatt
19:38:19   9  ,gattn
19:38:19  10  ,dc12
19:38:19  11  FROM q15
19:38:19  12  /

Table created.

Elapsed: 00:00:00.16
19:38:19 SQL> 
19:38:19 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.95
19:38:20 SQL> 
19:38:20 SQL> -- rpt
19:38:20 SQL> 
19:38:20 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      18643

Elapsed: 00:00:00.31
19:38:20 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      18211

Elapsed: 00:00:00.01
19:38:20 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      18211

Elapsed: 00:00:00.00
19:38:20 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      18211

Elapsed: 00:00:00.01
19:38:20 SQL> 
19:38:20 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:38:20   2  GROUP BY pair,trend,gatt,gattn
19:38:20   3  ORDER BY pair,trend,gatt,gattn
19:38:20   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -9.823E-06	    1662    .027138956
gbp_usd 	-1 nup up  -.00320685	    3743    .023526574
gbp_usd 	-1 up  nup .003457004	    3723    -.03013915
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup -1.668E-06	    1574    .026963894
gbp_usd 	 1 nup up  -.00315693	    3757    .061114431
gbp_usd 	 1 up  nup .003498297	    3728    -.11108955

7 rows selected.

Elapsed: 00:00:00.02
19:38:20 SQL> 
19:38:20 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
19:38:20 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
19:38:20   2  SELECT
19:38:20   3  ydate
19:38:20   4  ,trend gbp_trend
19:38:20   5  ,g4    gbp_g4
19:38:20   6  ,gatt  gbp_gatt
19:38:20   7  ,gattn	gbp_gattn
19:38:20   8  FROM modsrc
19:38:20   9  /

Table created.

Elapsed: 00:00:00.13
19:38:20 SQL> 
19:38:20 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
19:38:21 SQL> 
19:38:21 SQL> -- rpt
19:38:21 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-06-21 14:50:01 2010-12-15 03:50:00	 9059	  -.0194      .0192
	-1 2010-06-21 16:40:01 2010-12-15 17:50:00	 9128	  -.0153      .0189

Elapsed: 00:00:00.02
19:38:21 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-06-21 14:50:01 2010-12-15 03:50:00	       9059	 -.0194       .0192
	-1 2010-06-21 16:40:01 2010-12-15 17:50:00	       9152	 -.0153       .0189

Elapsed: 00:00:00.01
19:38:21 SQL> 
19:38:21 SQL> -- I need a copy of q15 attributes
19:38:21 SQL> 
19:38:21 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.16
19:38:21 SQL> CREATE TABLE gbp_att COMPRESS AS
19:38:21   2  SELECT
19:38:21   3  ydate
19:38:21   4  ,att00 gbp_att00
19:38:21   5  ,att01 gbp_att01
19:38:21   6  ,att02 gbp_att02
19:38:21   7  ,att03 gbp_att03
19:38:21   8  ,att04 gbp_att04
19:38:21   9  ,att05 gbp_att05
19:38:21  10  ,att06 gbp_att06
19:38:21  11  ,att07 gbp_att07
19:38:21  12  ,att08 gbp_att08
19:38:21  13  ,att09 gbp_att09
19:38:21  14  ,att10 gbp_att10
19:38:21  15  ,att11 gbp_att11
19:38:21  16  ,att12 gbp_att12
19:38:21  17  ,att13 gbp_att13
19:38:21  18  ,att14 gbp_att14
19:38:21  19  ,att15 gbp_att15
19:38:21  20  ,att16 gbp_att16
19:38:21  21  ,att17 gbp_att17
19:38:21  22  ,att18 gbp_att18
19:38:21  23  ,att19 gbp_att19
19:38:21  24  ,att20 gbp_att20
19:38:21  25  ,att21 gbp_att21
19:38:21  26  ,att22 gbp_att22
19:38:21  27  ,att23 gbp_att23
19:38:21  28  ,att24 gbp_att24
19:38:21  29  ,att25 gbp_att25
19:38:21  30  ,att26 gbp_att26
19:38:21  31  ,att27 gbp_att27
19:38:21  32  ,att28 gbp_att28
19:38:21  33  ,att29 gbp_att29
19:38:21  34  ,att30 gbp_att30
19:38:21  35  ,att31 gbp_att31
19:38:21  36  ,att32 gbp_att32
19:38:21  37  FROM q15
19:38:21  38  /

Table created.

Elapsed: 00:00:00.38
19:38:21 SQL> 
19:38:21 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.92
19:38:22 SQL> 
19:38:22 SQL> -- rpt
19:38:22 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     18211

Elapsed: 00:00:00.00
19:38:22 SQL> 
19:38:22 SQL> --
19:38:22 SQL> -- jpy10.sql
19:38:22 SQL> --
19:38:22 SQL> 
19:38:22 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:38:22 SQL> 
19:38:22 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:01.23
19:38:23 SQL> 
19:38:23 SQL> -- I created di5min here:
19:38:23 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:38:23 SQL> 
19:38:23 SQL> CREATE OR REPLACE VIEW q11 AS
19:38:23   2  SELECT
19:38:23   3  pair
19:38:23   4  ,ydate
19:38:23   5  ,prdate
19:38:23   6  ,rownum rnum -- acts as t in my time-series
19:38:23   7  ,clse
19:38:23   8  ,LAG(clse,6*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:38:23   9  ,LAG(clse,6*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:38:23  10  ,LAG(clse,6*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:38:23  11  ,LAG(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:38:23  12  ,LAG(clse,6*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:38:23  13  ,LAG(clse,6*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:38:23  14  ,LAG(clse,6*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:38:23  15  ,LAG(clse,6*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:38:23  16  ,LAG(clse,6*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:38:23  17  ,LAG(clse,6*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:38:23  18  ,LAG(clse,6*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:38:23  19  ,LAG(clse,6*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:38:23  20  ,LAG(clse,6*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:38:23  21  ,LEAD(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:38:23  22  FROM di5min WHERE pair LIKE'%jpy%'
19:38:23  23  ORDER BY ydate
19:38:23  24  /

View created.

Elapsed: 00:00:00.16
19:38:24 SQL> 
19:38:24 SQL> -- rpt
19:38:24 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        18644

Elapsed: 00:00:00.32
19:38:24 SQL> 
19:38:24 SQL> -- Calc deltas and gains
19:38:24 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.16
19:38:24 SQL> 
19:38:24 SQL> CREATE TABLE q13 COMPRESS AS
19:38:24   2  SELECT
19:38:24   3  pair
19:38:24   4  ,ydate
19:38:24   5  ,prdate
19:38:24   6  ,rnum
19:38:24   7  ,lg4
19:38:24   8  ,lg8
19:38:24   9  ,lg12
19:38:24  10  ,ld4
19:38:24  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:38:24  12  -- step by 1
19:38:24  13  ,clse-lg1 d01
19:38:24  14  ,lg1-lg2	d12
19:38:24  15  ,lg2-lg3	d23
19:38:24  16  ,lg3-lg4	d34
19:38:24  17  ,lg4-lg5	d45
19:38:24  18  ,lg5-lg6	d56
19:38:24  19  ,lg6-lg7	d67
19:38:24  20  ,lg7-lg8	d78
19:38:24  21  ,lg8-lg9	d89
19:38:24  22  -- step by 2
19:38:24  23  ,clse-lg2 d02
19:38:24  24  ,lg2-lg4 d24
19:38:24  25  ,lg4-lg6 d46
19:38:24  26  ,lg6-lg8 d68
19:38:24  27  -- step by 3
19:38:24  28  ,clse-lg3 d03
19:38:24  29  ,lg3-lg6	d36
19:38:24  30  ,lg6-lg9	d69
19:38:24  31  ,lg9-lg12 d912
19:38:24  32  -- step by 4
19:38:24  33  ,clse-lg4 d04
19:38:24  34  ,lg4-lg8	d48
19:38:24  35  ,lg8-lg12 d812
19:38:24  36  ,lg6-lg12 d612
19:38:24  37  ,lg12-lg18 d1218
19:38:24  38  --
19:38:24  39  ,ABS(clse-lg1)dc1
19:38:24  40  ,ABS(clse-lg2)dc2
19:38:24  41  ,ABS(clse-lg3)dc3
19:38:24  42  ,ABS(clse-lg4)dc4
19:38:24  43  ,ABS(clse-lg5)dc5
19:38:24  44  ,ABS(clse-lg6)dc6
19:38:24  45  ,ABS(clse-lg7)dc7
19:38:24  46  ,ABS(clse-lg8)dc8
19:38:24  47  ,ABS(clse-lg9)dc9
19:38:24  48  ,ABS(clse-lg12)dc12
19:38:24  49  ,ABS(clse-lg18)dc18
19:38:24  50  ,ABS(clse-lg24)dc24
19:38:24  51  ,ABS(clse-lg72)dc72
19:38:24  52  ,(ld4-clse) ug4
19:38:24  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*2  PRECEDING AND CURRENT ROW)crr2
19:38:24  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*3  PRECEDING AND CURRENT ROW)crr3
19:38:24  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*4  PRECEDING AND CURRENT ROW)crr4
19:38:24  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*5  PRECEDING AND CURRENT ROW)crr5
19:38:24  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*6  PRECEDING AND CURRENT ROW)crr6
19:38:24  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*7  PRECEDING AND CURRENT ROW)crr7
19:38:24  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*8  PRECEDING AND CURRENT ROW)crr8
19:38:24  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*9  PRECEDING AND CURRENT ROW)crr9
19:38:24  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*12 PRECEDING AND CURRENT ROW)crr12
19:38:24  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*24 PRECEDING AND CURRENT ROW)crr24
19:38:24  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*72 PRECEDING AND CURRENT ROW)crr72
19:38:24  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:38:24  65  ,0+TO_CHAR(ydate,'D')d
19:38:24  66  ,0+TO_CHAR(ydate,'W')w
19:38:24  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:38:24  68  FROM q11
19:38:24  69  -- I dont want any NULL values from the LAG() functions:
19:38:24  70  WHERE lg72 > 0
19:38:24  71  ORDER BY pair,ydate
19:38:24  72  /

Table created.

Elapsed: 00:00:01.46
19:38:26 SQL> 
19:38:26 SQL> -- rpt
19:38:26 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    8115
	-1	   10097

Elapsed: 00:00:02.13
19:38:28 SQL> 
19:38:28 SQL> -- Calc gains and ntiles
19:38:28 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.22
19:38:28 SQL> CREATE TABLE q15 COMPRESS AS
19:38:28   2  SELECT
19:38:28   3  pair
19:38:28   4  ,ydate
19:38:28   5  ,prdate -- Should be unique
19:38:28   6  ,trend -- +1 or -1
19:38:28   7  ,dc12 -- next statement needs this
19:38:28   8  -- Use NTILE() to derive some attributes
19:38:28   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:38:28  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:38:28  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:38:28  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:38:28  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:38:28  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:38:28  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:38:28  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:38:28  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:38:28  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:38:28  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:38:28  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:38:28  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:38:28  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:38:28  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:38:28  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:38:28  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:38:28  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:38:28  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:38:28  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:38:28  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:38:28  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:38:28  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:38:28  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:38:28  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:38:28  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:38:28  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:38:28  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:38:28  37  -- date related integers: hour of day, day of week, week of month:
19:38:28  38  ,hh    att28
19:38:28  39  ,d     att29
19:38:28  40  ,w     att30
19:38:28  41  ,mpm   att31
19:38:28  42  ,trend att32
19:38:28  43  ,ug4 g4
19:38:28  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:38:28  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:38:28  46  FROM q13
19:38:28  47  ORDER BY pair,ydate
19:38:28  48  /

Table created.

Elapsed: 00:00:03.61
19:38:32 SQL> 
19:38:32 SQL> -- rpt
19:38:32 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:38:32   2  GROUP BY pair,trend,gatt,gattn
19:38:32   3  ORDER BY pair,trend,gatt,gattn
19:38:32   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     245
usd_jpy 	-1 nup up  -.15411024	    4962    .024281394
usd_jpy 	-1 up  nup .146742936	    4884    .048544695
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     175
usd_jpy 	 1 nup up  -.15667279	    4358    -.05120202
usd_jpy 	 1 up  nup .157254489	    3564    .144901157
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.30
19:38:32 SQL> 
19:38:32 SQL> -- rpt
19:38:32 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-15 17:50:00

Elapsed: 00:00:00.01
19:38:32 SQL> 
19:38:32 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
19:38:32 SQL> CREATE TABLE modsrc COMPRESS AS
19:38:32   2  SELECT
19:38:32   3  pair
19:38:32   4  ,ydate
19:38:32   5  ,prdate
19:38:32   6  ,trend
19:38:32   7  ,g4
19:38:32   8  ,gatt
19:38:32   9  ,gattn
19:38:32  10  ,dc12
19:38:32  11  FROM q15
19:38:32  12  /

Table created.

Elapsed: 00:00:00.09
19:38:32 SQL> 
19:38:32 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
19:38:32 SQL> 
19:38:32 SQL> -- rpt
19:38:32 SQL> 
19:38:32 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      18644

Elapsed: 00:00:00.31
19:38:33 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.01
19:38:33 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.00
19:38:33 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.01
19:38:33 SQL> 
19:38:33 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:38:33   2  GROUP BY pair,trend,gatt,gattn
19:38:33   3  ORDER BY pair,trend,gatt,gattn
19:38:33   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     245
usd_jpy 	-1 nup up  -.15411024	    4962    .024281394
usd_jpy 	-1 up  nup .146742936	    4884    .048544695
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     175
usd_jpy 	 1 nup up  -.15667279	    4358    -.05120202
usd_jpy 	 1 up  nup .157254489	    3564    .144901157
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
19:38:33 SQL> 
19:38:33 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
19:38:33 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
19:38:33   2  SELECT
19:38:33   3  ydate
19:38:33   4  ,trend jpy_trend
19:38:33   5  ,g4    jpy_g4
19:38:33   6  ,gatt  jpy_gatt
19:38:33   7  ,gattn	jpy_gattn
19:38:33   8  FROM modsrc
19:38:33   9  /

Table created.

Elapsed: 00:00:00.07
19:38:33 SQL> 
19:38:33 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
19:38:33 SQL> 
19:38:33 SQL> -- rpt
19:38:33 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-06-21 14:50:01 2010-12-15 17:50:00	 8097	   -1.07       1.04
	-1 2010-06-22 06:20:01 2010-12-15 15:10:00	10091	   -1.18       1.99

Elapsed: 00:00:00.01
19:38:33 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-06-21 14:50:01 2010-12-15 17:50:00	       8115	  -1.07        1.04
	-1 2010-06-22 06:20:01 2010-12-15 15:10:00	      10097	  -1.18        1.99

Elapsed: 00:00:00.02
19:38:33 SQL> 
19:38:33 SQL> -- I need a copy of q15 attributes
19:38:33 SQL> 
19:38:33 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.03
19:38:33 SQL> CREATE TABLE jpy_att COMPRESS AS
19:38:33   2  SELECT
19:38:33   3  ydate
19:38:33   4  ,att00 jpy_att00
19:38:33   5  ,att01 jpy_att01
19:38:33   6  ,att02 jpy_att02
19:38:33   7  ,att03 jpy_att03
19:38:33   8  ,att04 jpy_att04
19:38:33   9  ,att05 jpy_att05
19:38:33  10  ,att06 jpy_att06
19:38:33  11  ,att07 jpy_att07
19:38:33  12  ,att08 jpy_att08
19:38:33  13  ,att09 jpy_att09
19:38:33  14  ,att10 jpy_att10
19:38:33  15  ,att11 jpy_att11
19:38:33  16  ,att12 jpy_att12
19:38:33  17  ,att13 jpy_att13
19:38:33  18  ,att14 jpy_att14
19:38:33  19  ,att15 jpy_att15
19:38:33  20  ,att16 jpy_att16
19:38:33  21  ,att17 jpy_att17
19:38:33  22  ,att18 jpy_att18
19:38:33  23  ,att19 jpy_att19
19:38:33  24  ,att20 jpy_att20
19:38:33  25  ,att21 jpy_att21
19:38:33  26  ,att22 jpy_att22
19:38:33  27  ,att23 jpy_att23
19:38:33  28  ,att24 jpy_att24
19:38:33  29  ,att25 jpy_att25
19:38:33  30  ,att26 jpy_att26
19:38:33  31  ,att27 jpy_att27
19:38:33  32  ,att28 jpy_att28
19:38:33  33  ,att29 jpy_att29
19:38:33  34  ,att30 jpy_att30
19:38:33  35  ,att31 jpy_att31
19:38:33  36  ,att32 jpy_att32
19:38:33  37  FROM q15
19:38:33  38  /

Table created.

Elapsed: 00:00:00.20
19:38:33 SQL> 
19:38:33 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.57
19:38:34 SQL> 
19:38:34 SQL> -- rpt
19:38:34 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     18212

Elapsed: 00:00:00.01
19:38:34 SQL> 
19:38:34 SQL> --
19:38:34 SQL> -- cad10.sql
19:38:34 SQL> --
19:38:34 SQL> 
19:38:34 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:38:34 SQL> 
19:38:34 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.74
19:38:35 SQL> 
19:38:35 SQL> -- I created di5min here:
19:38:35 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:38:35 SQL> 
19:38:35 SQL> CREATE OR REPLACE VIEW q11 AS
19:38:35   2  SELECT
19:38:35   3  pair
19:38:35   4  ,ydate
19:38:35   5  ,prdate
19:38:35   6  ,rownum rnum -- acts as t in my time-series
19:38:35   7  ,clse
19:38:35   8  ,LAG(clse,6*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:38:35   9  ,LAG(clse,6*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:38:35  10  ,LAG(clse,6*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:38:35  11  ,LAG(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:38:35  12  ,LAG(clse,6*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:38:35  13  ,LAG(clse,6*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:38:35  14  ,LAG(clse,6*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:38:35  15  ,LAG(clse,6*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:38:35  16  ,LAG(clse,6*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:38:35  17  ,LAG(clse,6*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:38:35  18  ,LAG(clse,6*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:38:35  19  ,LAG(clse,6*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:38:35  20  ,LAG(clse,6*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:38:35  21  ,LEAD(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:38:35  22  FROM di5min WHERE pair LIKE'%cad%'
19:38:35  23  ORDER BY ydate
19:38:35  24  /

View created.

Elapsed: 00:00:00.05
19:38:35 SQL> 
19:38:35 SQL> -- rpt
19:38:35 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        18644

Elapsed: 00:00:00.32
19:38:35 SQL> 
19:38:35 SQL> -- Calc deltas and gains
19:38:35 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.23
19:38:35 SQL> 
19:38:35 SQL> CREATE TABLE q13 COMPRESS AS
19:38:35   2  SELECT
19:38:35   3  pair
19:38:35   4  ,ydate
19:38:35   5  ,prdate
19:38:35   6  ,rnum
19:38:35   7  ,lg4
19:38:35   8  ,lg8
19:38:35   9  ,lg12
19:38:35  10  ,ld4
19:38:35  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:38:35  12  -- step by 1
19:38:35  13  ,clse-lg1 d01
19:38:35  14  ,lg1-lg2	d12
19:38:35  15  ,lg2-lg3	d23
19:38:35  16  ,lg3-lg4	d34
19:38:35  17  ,lg4-lg5	d45
19:38:35  18  ,lg5-lg6	d56
19:38:35  19  ,lg6-lg7	d67
19:38:35  20  ,lg7-lg8	d78
19:38:35  21  ,lg8-lg9	d89
19:38:35  22  -- step by 2
19:38:35  23  ,clse-lg2 d02
19:38:35  24  ,lg2-lg4 d24
19:38:35  25  ,lg4-lg6 d46
19:38:35  26  ,lg6-lg8 d68
19:38:35  27  -- step by 3
19:38:35  28  ,clse-lg3 d03
19:38:35  29  ,lg3-lg6	d36
19:38:35  30  ,lg6-lg9	d69
19:38:35  31  ,lg9-lg12 d912
19:38:35  32  -- step by 4
19:38:35  33  ,clse-lg4 d04
19:38:35  34  ,lg4-lg8	d48
19:38:35  35  ,lg8-lg12 d812
19:38:35  36  ,lg6-lg12 d612
19:38:35  37  ,lg12-lg18 d1218
19:38:35  38  --
19:38:35  39  ,ABS(clse-lg1)dc1
19:38:35  40  ,ABS(clse-lg2)dc2
19:38:35  41  ,ABS(clse-lg3)dc3
19:38:35  42  ,ABS(clse-lg4)dc4
19:38:35  43  ,ABS(clse-lg5)dc5
19:38:35  44  ,ABS(clse-lg6)dc6
19:38:35  45  ,ABS(clse-lg7)dc7
19:38:35  46  ,ABS(clse-lg8)dc8
19:38:35  47  ,ABS(clse-lg9)dc9
19:38:35  48  ,ABS(clse-lg12)dc12
19:38:35  49  ,ABS(clse-lg18)dc18
19:38:35  50  ,ABS(clse-lg24)dc24
19:38:35  51  ,ABS(clse-lg72)dc72
19:38:35  52  ,(ld4-clse) ug4
19:38:35  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*2  PRECEDING AND CURRENT ROW)crr2
19:38:35  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*3  PRECEDING AND CURRENT ROW)crr3
19:38:35  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*4  PRECEDING AND CURRENT ROW)crr4
19:38:35  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*5  PRECEDING AND CURRENT ROW)crr5
19:38:35  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*6  PRECEDING AND CURRENT ROW)crr6
19:38:35  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*7  PRECEDING AND CURRENT ROW)crr7
19:38:35  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*8  PRECEDING AND CURRENT ROW)crr8
19:38:35  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*9  PRECEDING AND CURRENT ROW)crr9
19:38:35  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*12 PRECEDING AND CURRENT ROW)crr12
19:38:35  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*24 PRECEDING AND CURRENT ROW)crr24
19:38:35  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*72 PRECEDING AND CURRENT ROW)crr72
19:38:35  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:38:35  65  ,0+TO_CHAR(ydate,'D')d
19:38:35  66  ,0+TO_CHAR(ydate,'W')w
19:38:35  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:38:35  68  FROM q11
19:38:35  69  -- I dont want any NULL values from the LAG() functions:
19:38:35  70  WHERE lg72 > 0
19:38:35  71  ORDER BY pair,ydate
19:38:35  72  /

Table created.

Elapsed: 00:00:01.55
19:38:37 SQL> 
19:38:37 SQL> -- rpt
19:38:37 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    8479
	-1	    9733

Elapsed: 00:00:00.13
19:38:37 SQL> 
19:38:37 SQL> -- Calc gains and ntiles
19:38:37 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.18
19:38:37 SQL> CREATE TABLE q15 COMPRESS AS
19:38:37   2  SELECT
19:38:37   3  pair
19:38:37   4  ,ydate
19:38:37   5  ,prdate -- Should be unique
19:38:37   6  ,trend -- +1 or -1
19:38:37   7  ,dc12 -- next statement needs this
19:38:37   8  -- Use NTILE() to derive some attributes
19:38:37   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:38:37  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:38:37  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:38:37  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:38:37  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:38:37  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:38:37  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:38:37  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:38:37  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:38:37  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:38:37  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:38:37  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:38:37  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:38:37  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:38:37  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:38:37  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:38:37  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:38:37  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:38:37  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:38:37  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:38:37  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:38:37  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:38:37  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:38:37  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:38:37  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:38:37  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:38:37  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:38:37  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:38:37  37  -- date related integers: hour of day, day of week, week of month:
19:38:37  38  ,hh    att28
19:38:37  39  ,d     att29
19:38:37  40  ,w     att30
19:38:37  41  ,mpm   att31
19:38:37  42  ,trend att32
19:38:37  43  ,ug4 g4
19:38:37  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:38:37  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:38:37  46  FROM q13
19:38:37  47  ORDER BY pair,ydate
19:38:37  48  /

Table created.

Elapsed: 00:00:03.54
19:38:41 SQL> 
19:38:41 SQL> -- rpt
19:38:41 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:38:41   2  GROUP BY pair,trend,gatt,gattn
19:38:41   3  ORDER BY pair,trend,gatt,gattn
19:38:41   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00000834	    2452    -.01478505
usd_cad 	-1 nup up  -.00244882	    3747    .083035821
usd_cad 	-1 up  nup .002592051	    3510    -.00285136
usd_cad 	-1			       0
usd_cad 	 1 nup nup -.00001803	    2010    -.00353745
usd_cad 	 1 nup up  -.00258383	    3417    .030156712
usd_cad 	 1 up  nup .002790719	    3052    .011338451

7 rows selected.

Elapsed: 00:00:00.04
19:38:41 SQL> 
19:38:41 SQL> -- rpt
19:38:41 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-15 17:50:00

Elapsed: 00:00:00.01
19:38:41 SQL> 
19:38:41 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.15
19:38:41 SQL> CREATE TABLE modsrc COMPRESS AS
19:38:41   2  SELECT
19:38:41   3  pair
19:38:41   4  ,ydate
19:38:41   5  ,prdate
19:38:41   6  ,trend
19:38:41   7  ,g4
19:38:41   8  ,gatt
19:38:41   9  ,gattn
19:38:41  10  ,dc12
19:38:41  11  FROM q15
19:38:41  12  /

Table created.

Elapsed: 00:00:00.09
19:38:41 SQL> 
19:38:41 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.23
19:38:41 SQL> 
19:38:41 SQL> -- rpt
19:38:41 SQL> 
19:38:41 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      18644

Elapsed: 00:00:00.31
19:38:41 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.01
19:38:41 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.00
19:38:41 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.01
19:38:41 SQL> 
19:38:41 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:38:41   2  GROUP BY pair,trend,gatt,gattn
19:38:41   3  ORDER BY pair,trend,gatt,gattn
19:38:41   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00000834	    2452    -.01478505
usd_cad 	-1 nup up  -.00244882	    3747    .083035821
usd_cad 	-1 up  nup .002592051	    3510    -.00285136
usd_cad 	-1			       0
usd_cad 	 1 nup nup -.00001803	    2010    -.00353745
usd_cad 	 1 nup up  -.00258383	    3417    .030156712
usd_cad 	 1 up  nup .002790719	    3052    .011338451

7 rows selected.

Elapsed: 00:00:00.02
19:38:41 SQL> 
19:38:41 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.06
19:38:41 SQL> CREATE TABLE cad_ms10 COMPRESS AS
19:38:41   2  SELECT
19:38:41   3  ydate
19:38:41   4  ,trend cad_trend
19:38:41   5  ,g4    cad_g4
19:38:41   6  ,gatt  cad_gatt
19:38:41   7  ,gattn	cad_gattn
19:38:41   8  FROM modsrc
19:38:41   9  /

Table created.

Elapsed: 00:00:00.06
19:38:42 SQL> 
19:38:42 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
19:38:42 SQL> 
19:38:42 SQL> -- rpt
19:38:42 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-06-21 17:30:01 2010-12-15 12:00:00	 8479	  -.0153      .0164
	-1 2010-06-21 14:50:01 2010-12-15 17:50:00	 9709	  -.0127      .0151

Elapsed: 00:00:00.02
19:38:42 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-06-21 17:30:01 2010-12-15 12:00:00	       8479	 -.0153       .0164
	-1 2010-06-21 14:50:01 2010-12-15 17:50:00	       9733	 -.0127       .0151

Elapsed: 00:00:00.02
19:38:42 SQL> 
19:38:42 SQL> -- I need a copy of q15 attributes
19:38:42 SQL> 
19:38:42 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.03
19:38:42 SQL> CREATE TABLE cad_att COMPRESS AS
19:38:42   2  SELECT
19:38:42   3  ydate
19:38:42   4  ,att00 cad_att00
19:38:42   5  ,att01 cad_att01
19:38:42   6  ,att02 cad_att02
19:38:42   7  ,att03 cad_att03
19:38:42   8  ,att04 cad_att04
19:38:42   9  ,att05 cad_att05
19:38:42  10  ,att06 cad_att06
19:38:42  11  ,att07 cad_att07
19:38:42  12  ,att08 cad_att08
19:38:42  13  ,att09 cad_att09
19:38:42  14  ,att10 cad_att10
19:38:42  15  ,att11 cad_att11
19:38:42  16  ,att12 cad_att12
19:38:42  17  ,att13 cad_att13
19:38:42  18  ,att14 cad_att14
19:38:42  19  ,att15 cad_att15
19:38:42  20  ,att16 cad_att16
19:38:42  21  ,att17 cad_att17
19:38:42  22  ,att18 cad_att18
19:38:42  23  ,att19 cad_att19
19:38:42  24  ,att20 cad_att20
19:38:42  25  ,att21 cad_att21
19:38:42  26  ,att22 cad_att22
19:38:42  27  ,att23 cad_att23
19:38:42  28  ,att24 cad_att24
19:38:42  29  ,att25 cad_att25
19:38:42  30  ,att26 cad_att26
19:38:42  31  ,att27 cad_att27
19:38:42  32  ,att28 cad_att28
19:38:42  33  ,att29 cad_att29
19:38:42  34  ,att30 cad_att30
19:38:42  35  ,att31 cad_att31
19:38:42  36  ,att32 cad_att32
19:38:42  37  FROM q15
19:38:42  38  /

Table created.

Elapsed: 00:00:00.17
19:38:42 SQL> 
19:38:42 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.36
19:38:42 SQL> 
19:38:42 SQL> -- rpt
19:38:42 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     18212

Elapsed: 00:00:00.00
19:38:42 SQL> 
19:38:42 SQL> --
19:38:42 SQL> -- chf10.sql
19:38:42 SQL> --
19:38:42 SQL> 
19:38:42 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:38:42 SQL> 
19:38:42 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.37
19:38:43 SQL> 
19:38:43 SQL> -- I created di5min here:
19:38:43 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:38:43 SQL> 
19:38:43 SQL> CREATE OR REPLACE VIEW q11 AS
19:38:43   2  SELECT
19:38:43   3  pair
19:38:43   4  ,ydate
19:38:43   5  ,prdate
19:38:43   6  ,rownum rnum -- acts as t in my time-series
19:38:43   7  ,clse
19:38:43   8  ,LAG(clse,6*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:38:43   9  ,LAG(clse,6*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:38:43  10  ,LAG(clse,6*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:38:43  11  ,LAG(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:38:43  12  ,LAG(clse,6*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:38:43  13  ,LAG(clse,6*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:38:43  14  ,LAG(clse,6*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:38:43  15  ,LAG(clse,6*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:38:43  16  ,LAG(clse,6*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:38:43  17  ,LAG(clse,6*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:38:43  18  ,LAG(clse,6*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:38:43  19  ,LAG(clse,6*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:38:43  20  ,LAG(clse,6*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:38:43  21  ,LEAD(clse,6*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:38:43  22  FROM di5min WHERE pair LIKE'%chf%'
19:38:43  23  ORDER BY ydate
19:38:43  24  /

View created.

Elapsed: 00:00:00.03
19:38:43 SQL> 
19:38:43 SQL> -- rpt
19:38:43 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        18644

Elapsed: 00:00:00.32
19:38:43 SQL> 
19:38:43 SQL> -- Calc deltas and gains
19:38:43 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.22
19:38:43 SQL> 
19:38:43 SQL> CREATE TABLE q13 COMPRESS AS
19:38:43   2  SELECT
19:38:43   3  pair
19:38:43   4  ,ydate
19:38:43   5  ,prdate
19:38:43   6  ,rnum
19:38:43   7  ,lg4
19:38:43   8  ,lg8
19:38:43   9  ,lg12
19:38:43  10  ,ld4
19:38:43  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:38:43  12  -- step by 1
19:38:43  13  ,clse-lg1 d01
19:38:43  14  ,lg1-lg2	d12
19:38:43  15  ,lg2-lg3	d23
19:38:43  16  ,lg3-lg4	d34
19:38:43  17  ,lg4-lg5	d45
19:38:43  18  ,lg5-lg6	d56
19:38:43  19  ,lg6-lg7	d67
19:38:43  20  ,lg7-lg8	d78
19:38:43  21  ,lg8-lg9	d89
19:38:43  22  -- step by 2
19:38:43  23  ,clse-lg2 d02
19:38:43  24  ,lg2-lg4 d24
19:38:43  25  ,lg4-lg6 d46
19:38:43  26  ,lg6-lg8 d68
19:38:43  27  -- step by 3
19:38:43  28  ,clse-lg3 d03
19:38:43  29  ,lg3-lg6	d36
19:38:43  30  ,lg6-lg9	d69
19:38:43  31  ,lg9-lg12 d912
19:38:43  32  -- step by 4
19:38:43  33  ,clse-lg4 d04
19:38:43  34  ,lg4-lg8	d48
19:38:43  35  ,lg8-lg12 d812
19:38:43  36  ,lg6-lg12 d612
19:38:43  37  ,lg12-lg18 d1218
19:38:43  38  --
19:38:43  39  ,ABS(clse-lg1)dc1
19:38:43  40  ,ABS(clse-lg2)dc2
19:38:43  41  ,ABS(clse-lg3)dc3
19:38:43  42  ,ABS(clse-lg4)dc4
19:38:43  43  ,ABS(clse-lg5)dc5
19:38:43  44  ,ABS(clse-lg6)dc6
19:38:43  45  ,ABS(clse-lg7)dc7
19:38:43  46  ,ABS(clse-lg8)dc8
19:38:43  47  ,ABS(clse-lg9)dc9
19:38:43  48  ,ABS(clse-lg12)dc12
19:38:43  49  ,ABS(clse-lg18)dc18
19:38:43  50  ,ABS(clse-lg24)dc24
19:38:43  51  ,ABS(clse-lg72)dc72
19:38:43  52  ,(ld4-clse) ug4
19:38:43  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*2  PRECEDING AND CURRENT ROW)crr2
19:38:43  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*3  PRECEDING AND CURRENT ROW)crr3
19:38:43  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*4  PRECEDING AND CURRENT ROW)crr4
19:38:43  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*5  PRECEDING AND CURRENT ROW)crr5
19:38:43  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*6  PRECEDING AND CURRENT ROW)crr6
19:38:43  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*7  PRECEDING AND CURRENT ROW)crr7
19:38:43  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*8  PRECEDING AND CURRENT ROW)crr8
19:38:43  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*9  PRECEDING AND CURRENT ROW)crr9
19:38:43  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*12 PRECEDING AND CURRENT ROW)crr12
19:38:43  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*24 PRECEDING AND CURRENT ROW)crr24
19:38:43  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6*72 PRECEDING AND CURRENT ROW)crr72
19:38:43  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:38:43  65  ,0+TO_CHAR(ydate,'D')d
19:38:43  66  ,0+TO_CHAR(ydate,'W')w
19:38:43  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:38:43  68  FROM q11
19:38:43  69  -- I dont want any NULL values from the LAG() functions:
19:38:43  70  WHERE lg72 > 0
19:38:43  71  ORDER BY pair,ydate
19:38:43  72  /

Table created.

Elapsed: 00:00:01.50
19:38:45 SQL> 
19:38:45 SQL> -- rpt
19:38:45 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    8178
	-1	   10034

Elapsed: 00:00:00.15
19:38:45 SQL> 
19:38:45 SQL> -- Calc gains and ntiles
19:38:45 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.14
19:38:45 SQL> CREATE TABLE q15 COMPRESS AS
19:38:45   2  SELECT
19:38:45   3  pair
19:38:45   4  ,ydate
19:38:45   5  ,prdate -- Should be unique
19:38:45   6  ,trend -- +1 or -1
19:38:45   7  ,dc12 -- next statement needs this
19:38:45   8  -- Use NTILE() to derive some attributes
19:38:45   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:38:45  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:38:45  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:38:45  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:38:45  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:38:45  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:38:45  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:38:45  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:38:45  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:38:45  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:38:45  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:38:45  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:38:45  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:38:45  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:38:45  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:38:45  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:38:45  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:38:45  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:38:45  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:38:45  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:38:45  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:38:45  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:38:45  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:38:45  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:38:45  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:38:45  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:38:45  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:38:45  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:38:45  37  -- date related integers: hour of day, day of week, week of month:
19:38:45  38  ,hh    att28
19:38:45  39  ,d     att29
19:38:45  40  ,w     att30
19:38:45  41  ,mpm   att31
19:38:45  42  ,trend att32
19:38:45  43  ,ug4 g4
19:38:45  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:38:45  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:38:45  46  FROM q13
19:38:45  47  ORDER BY pair,ydate
19:38:45  48  /

Table created.

Elapsed: 00:00:03.63
19:38:49 SQL> 
19:38:49 SQL> -- rpt
19:38:49 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:38:49   2  GROUP BY pair,trend,gatt,gattn
19:38:49   3  ORDER BY pair,trend,gatt,gattn
19:38:49   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000028205	    2566     .05520731
usd_chf 	-1 nup up   -.0029293	    3716    .069773965
usd_chf 	-1 up  nup .002542579	    3736    -.11711552
usd_chf 	-1			       0
usd_chf 	 1 nup nup 1.8381E-06	    2013    .035355583
usd_chf 	 1 nup up  -.00267545	    3433      .0982342
usd_chf 	 1 up  nup .002536665	    2724    -.13498577
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
19:38:49 SQL> 
19:38:49 SQL> -- rpt
19:38:49 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-15 17:50:00

Elapsed: 00:00:00.02
19:38:49 SQL> 
19:38:49 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.20
19:38:49 SQL> CREATE TABLE modsrc COMPRESS AS
19:38:49   2  SELECT
19:38:49   3  pair
19:38:49   4  ,ydate
19:38:49   5  ,prdate
19:38:49   6  ,trend
19:38:49   7  ,g4
19:38:49   8  ,gatt
19:38:49   9  ,gattn
19:38:49  10  ,dc12
19:38:49  11  FROM q15
19:38:49  12  /

Table created.

Elapsed: 00:00:00.09
19:38:49 SQL> 
19:38:49 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.26
19:38:49 SQL> 
19:38:49 SQL> -- rpt
19:38:49 SQL> 
19:38:49 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      18644

Elapsed: 00:00:00.31
19:38:50 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.01
19:38:50 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.00
19:38:50 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      18212

Elapsed: 00:00:00.00
19:38:50 SQL> 
19:38:50 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:38:50   2  GROUP BY pair,trend,gatt,gattn
19:38:50   3  ORDER BY pair,trend,gatt,gattn
19:38:50   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000028205	    2566     .05520731
usd_chf 	-1 nup up   -.0029293	    3716    .069773965
usd_chf 	-1 up  nup .002542579	    3736    -.11711552
usd_chf 	-1			       0
usd_chf 	 1 nup nup 1.8381E-06	    2013    .035355583
usd_chf 	 1 nup up  -.00267545	    3433      .0982342
usd_chf 	 1 up  nup .002536665	    2724    -.13498577
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
19:38:50 SQL> 
19:38:50 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.09
19:38:50 SQL> CREATE TABLE chf_ms10 COMPRESS AS
19:38:50   2  SELECT
19:38:50   3  ydate
19:38:50   4  ,trend chf_trend
19:38:50   5  ,g4    chf_g4
19:38:50   6  ,gatt  chf_gatt
19:38:50   7  ,gattn	chf_gattn
19:38:50   8  FROM modsrc
19:38:50   9  /

Table created.

Elapsed: 00:00:00.10
19:38:50 SQL> 
19:38:50 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
19:38:50 SQL> 
19:38:50 SQL> -- rpt
19:38:50 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-06-21 16:40:01 2010-12-15 17:50:00	 8170	-.016775      .0136
	-1 2010-06-21 14:50:01 2010-12-15 16:30:00	10018	  -.0166      .0149

Elapsed: 00:00:00.02
19:38:50 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-06-21 16:40:01 2010-12-15 17:50:00	       8178    -.016775       .0136
	-1 2010-06-21 14:50:01 2010-12-15 16:30:00	      10034	 -.0166       .0149

Elapsed: 00:00:00.01
19:38:50 SQL> 
19:38:50 SQL> -- I need a copy of q15 attributes
19:38:50 SQL> 
19:38:50 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.04
19:38:50 SQL> CREATE TABLE chf_att COMPRESS AS
19:38:50   2  SELECT
19:38:50   3  ydate
19:38:50   4  ,att00 chf_att00
19:38:50   5  ,att01 chf_att01
19:38:50   6  ,att02 chf_att02
19:38:50   7  ,att03 chf_att03
19:38:50   8  ,att04 chf_att04
19:38:50   9  ,att05 chf_att05
19:38:50  10  ,att06 chf_att06
19:38:50  11  ,att07 chf_att07
19:38:50  12  ,att08 chf_att08
19:38:50  13  ,att09 chf_att09
19:38:50  14  ,att10 chf_att10
19:38:50  15  ,att11 chf_att11
19:38:50  16  ,att12 chf_att12
19:38:50  17  ,att13 chf_att13
19:38:50  18  ,att14 chf_att14
19:38:50  19  ,att15 chf_att15
19:38:50  20  ,att16 chf_att16
19:38:50  21  ,att17 chf_att17
19:38:50  22  ,att18 chf_att18
19:38:50  23  ,att19 chf_att19
19:38:50  24  ,att20 chf_att20
19:38:50  25  ,att21 chf_att21
19:38:50  26  ,att22 chf_att22
19:38:50  27  ,att23 chf_att23
19:38:50  28  ,att24 chf_att24
19:38:50  29  ,att25 chf_att25
19:38:50  30  ,att26 chf_att26
19:38:50  31  ,att27 chf_att27
19:38:50  32  ,att28 chf_att28
19:38:50  33  ,att29 chf_att29
19:38:50  34  ,att30 chf_att30
19:38:50  35  ,att31 chf_att31
19:38:50  36  ,att32 chf_att32
19:38:50  37  FROM q15
19:38:50  38  /

Table created.

Elapsed: 00:00:00.13
19:38:50 SQL> 
19:38:50 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.48
19:38:51 SQL> 
19:38:51 SQL> -- rpt
19:38:51 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     18212

Elapsed: 00:00:00.01
19:38:51 SQL> 
19:38:51 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
