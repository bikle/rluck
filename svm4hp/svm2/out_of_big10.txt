
SQL*Plus: Release 11.2.0.1.0 Production on Fri Dec 17 22:12:35 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

22:12:35 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
22:12:35 SQL> 22:12:35 SQL> --
22:12:35 SQL> -- eur10.sql
22:12:35 SQL> --
22:12:35 SQL> 
22:12:35 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:12:35 SQL> 
22:12:35 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.01
22:12:35 SQL> 
22:12:35 SQL> -- I created di5min here:
22:12:35 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
22:12:35 SQL> 
22:12:35 SQL> CREATE OR REPLACE VIEW q11 AS
22:12:35   2  SELECT
22:12:35   3  pair
22:12:35   4  ,ydate
22:12:35   5  ,prdate
22:12:35   6  ,rownum rnum -- acts as t in my time-series
22:12:35   7  ,clse
22:12:35   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
22:12:35   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
22:12:35  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
22:12:35  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
22:12:35  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
22:12:35  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
22:12:35  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
22:12:35  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
22:12:35  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
22:12:35  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
22:12:35  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
22:12:35  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
22:12:35  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
22:12:35  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
22:12:35  22  FROM di5min WHERE pair LIKE'%eur%'
22:12:35  23  ORDER BY ydate
22:12:35  24  /

View created.

Elapsed: 00:00:00.10
22:12:36 SQL> 
22:12:36 SQL> -- rpt
22:12:36 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20820

Elapsed: 00:00:00.36
22:12:36 SQL> 
22:12:36 SQL> -- Calc deltas and gains
22:12:36 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.12
22:12:36 SQL> 
22:12:36 SQL> CREATE TABLE q13 COMPRESS AS
22:12:36   2  SELECT
22:12:36   3  pair
22:12:36   4  ,ydate
22:12:36   5  ,prdate
22:12:36   6  ,rnum
22:12:36   7  ,lg4
22:12:36   8  ,lg8
22:12:36   9  ,lg12
22:12:36  10  ,ld4
22:12:36  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
22:12:36  12  -- step by 1
22:12:36  13  ,clse-lg1 d01
22:12:36  14  ,lg1-lg2	d12
22:12:36  15  ,lg2-lg3	d23
22:12:36  16  ,lg3-lg4	d34
22:12:36  17  ,lg4-lg5	d45
22:12:36  18  ,lg5-lg6	d56
22:12:36  19  ,lg6-lg7	d67
22:12:36  20  ,lg7-lg8	d78
22:12:36  21  ,lg8-lg9	d89
22:12:36  22  -- step by 2
22:12:36  23  ,clse-lg2 d02
22:12:36  24  ,lg2-lg4 d24
22:12:36  25  ,lg4-lg6 d46
22:12:36  26  ,lg6-lg8 d68
22:12:36  27  -- step by 3
22:12:36  28  ,clse-lg3 d03
22:12:36  29  ,lg3-lg6	d36
22:12:36  30  ,lg6-lg9	d69
22:12:36  31  ,lg9-lg12 d912
22:12:36  32  -- step by 4
22:12:36  33  ,clse-lg4 d04
22:12:36  34  ,lg4-lg8	d48
22:12:36  35  ,lg8-lg12 d812
22:12:36  36  ,lg6-lg12 d612
22:12:36  37  ,lg12-lg18 d1218
22:12:36  38  --
22:12:36  39  ,ABS(clse-lg1)dc1
22:12:36  40  ,ABS(clse-lg2)dc2
22:12:36  41  ,ABS(clse-lg3)dc3
22:12:36  42  ,ABS(clse-lg4)dc4
22:12:36  43  ,ABS(clse-lg5)dc5
22:12:36  44  ,ABS(clse-lg6)dc6
22:12:36  45  ,ABS(clse-lg7)dc7
22:12:36  46  ,ABS(clse-lg8)dc8
22:12:36  47  ,ABS(clse-lg9)dc9
22:12:36  48  ,ABS(clse-lg12)dc12
22:12:36  49  ,ABS(clse-lg18)dc18
22:12:36  50  ,ABS(clse-lg24)dc24
22:12:36  51  ,ABS(clse-lg72)dc72
22:12:36  52  ,(ld4-clse) ug4
22:12:36  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
22:12:36  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
22:12:36  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
22:12:36  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
22:12:36  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:12:36  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
22:12:36  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:12:36  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
22:12:36  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:12:36  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:12:36  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
22:12:36  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:12:36  65  ,0+TO_CHAR(ydate,'D')d
22:12:36  66  ,0+TO_CHAR(ydate,'W')w
22:12:36  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:12:36  68  FROM q11
22:12:36  69  -- I dont want any NULL values from the LAG() functions:
22:12:36  70  WHERE lg72 > 0
22:12:36  71  ORDER BY pair,ydate
22:12:36  72  /

Table created.

Elapsed: 00:00:01.98
22:12:38 SQL> 
22:12:38 SQL> -- rpt
22:12:38 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10180
	-1	    9776

Elapsed: 00:00:00.06
22:12:38 SQL> 
22:12:38 SQL> -- Calc gains and ntiles
22:12:38 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.04
22:12:38 SQL> CREATE TABLE q15 COMPRESS AS
22:12:38   2  SELECT
22:12:38   3  pair
22:12:38   4  ,ydate
22:12:38   5  ,prdate -- Should be unique
22:12:38   6  ,trend -- +1 or -1
22:12:38   7  ,dc12 -- next statement needs this
22:12:38   8  -- Use NTILE() to derive some attributes
22:12:38   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
22:12:38  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
22:12:38  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
22:12:38  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
22:12:38  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
22:12:38  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
22:12:38  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
22:12:38  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
22:12:38  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
22:12:38  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
22:12:38  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
22:12:38  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
22:12:38  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
22:12:38  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
22:12:38  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
22:12:38  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
22:12:38  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
22:12:38  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
22:12:38  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
22:12:38  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
22:12:38  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
22:12:38  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
22:12:38  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
22:12:38  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
22:12:38  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
22:12:38  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
22:12:38  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
22:12:38  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
22:12:38  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:12:38  38  ,hh    att28
22:12:38  39  ,d     att29
22:12:38  40  ,w     att30
22:12:38  41  ,mpm   att31
22:12:38  42  ,trend att32
22:12:38  43  ,ug4 g4
22:12:38  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
22:12:38  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
22:12:38  46  FROM q13
22:12:38  47  ORDER BY pair,ydate
22:12:38  48  /

Table created.

Elapsed: 00:00:04.08
22:12:42 SQL> 
22:12:42 SQL> -- rpt
22:12:42 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
22:12:42   2  GROUP BY pair,trend,gatt,gattn
22:12:42   3  ORDER BY pair,trend,gatt,gattn
22:12:42   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001529	    1452    .041522066
eur_usd 	-1 nup up  -.00365153	    4054    .155643414
eur_usd 	-1 up  nup .003613667	    4222    -.20598209
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000011329	    1697    .040231363
eur_usd 	 1 nup up  -.00352131	    4226    .104804275
eur_usd 	 1 up  nup .003735941	    4257    -.13864838

7 rows selected.

Elapsed: 00:00:00.05
22:12:42 SQL> 
22:12:42 SQL> -- rpt
22:12:42 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-17 21:55:00

Elapsed: 00:00:00.01
22:12:42 SQL> 
22:12:42 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.05
22:12:42 SQL> CREATE TABLE modsrc COMPRESS AS
22:12:42   2  SELECT
22:12:42   3  pair
22:12:42   4  ,ydate
22:12:42   5  ,prdate
22:12:42   6  ,trend
22:12:42   7  ,g4
22:12:42   8  ,gatt
22:12:42   9  ,gattn
22:12:42  10  ,dc12
22:12:42  11  FROM q15
22:12:42  12  /

Table created.

Elapsed: 00:00:00.09
22:12:42 SQL> 
22:12:42 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
22:12:43 SQL> 
22:12:43 SQL> -- rpt
22:12:43 SQL> 
22:12:43 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20820

Elapsed: 00:00:00.34
22:12:43 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19956

Elapsed: 00:00:00.01
22:12:43 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19956

Elapsed: 00:00:00.00
22:12:43 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19956

Elapsed: 00:00:00.01
22:12:43 SQL> 
22:12:43 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
22:12:43   2  GROUP BY pair,trend,gatt,gattn
22:12:43   3  ORDER BY pair,trend,gatt,gattn
22:12:43   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001529	    1452    .041522066
eur_usd 	-1 nup up  -.00365153	    4054    .155643414
eur_usd 	-1 up  nup .003613667	    4222    -.20598209
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000011329	    1697    .040231363
eur_usd 	 1 nup up  -.00352131	    4226    .104804275
eur_usd 	 1 up  nup .003735941	    4257    -.13864838

7 rows selected.

Elapsed: 00:00:00.02
22:12:43 SQL> 
22:12:43 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
22:12:43 SQL> CREATE TABLE eur_ms10 COMPRESS AS
22:12:43   2  SELECT
22:12:43   3  ydate
22:12:43   4  ,trend eur_trend
22:12:43   5  ,g4    eur_g4
22:12:43   6  ,gatt  eur_gatt
22:12:43   7  ,gattn eur_gattn
22:12:43   8  FROM modsrc
22:12:43   9  /

Table created.

Elapsed: 00:00:00.07
22:12:43 SQL> 
22:12:43 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
22:12:43 SQL> 
22:12:43 SQL> -- rpt
22:12:43 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 21:15:01 2010-12-17 13:05:00	10180	-.015675      .0165
	-1 2010-09-14 03:40:01 2010-12-17 21:55:00	 9728	  -.0164      .0167

Elapsed: 00:00:00.03
22:12:43 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 21:15:01 2010-12-17 13:05:00	      10180    -.015675       .0165
	-1 2010-09-14 03:40:01 2010-12-17 21:55:00	       9776	 -.0164       .0167

Elapsed: 00:00:00.01
22:12:43 SQL> 
22:12:43 SQL> -- I need a copy of q15 attributes
22:12:43 SQL> 
22:12:43 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.04
22:12:43 SQL> CREATE TABLE eur_att COMPRESS AS
22:12:43   2  SELECT
22:12:43   3  ydate
22:12:43   4  ,att00 eur_att00
22:12:43   5  ,att01 eur_att01
22:12:43   6  ,att02 eur_att02
22:12:43   7  ,att03 eur_att03
22:12:43   8  ,att04 eur_att04
22:12:43   9  ,att05 eur_att05
22:12:43  10  ,att06 eur_att06
22:12:43  11  ,att07 eur_att07
22:12:43  12  ,att08 eur_att08
22:12:43  13  ,att09 eur_att09
22:12:43  14  ,att10 eur_att10
22:12:43  15  ,att11 eur_att11
22:12:43  16  ,att12 eur_att12
22:12:43  17  ,att13 eur_att13
22:12:43  18  ,att14 eur_att14
22:12:43  19  ,att15 eur_att15
22:12:43  20  ,att16 eur_att16
22:12:43  21  ,att17 eur_att17
22:12:43  22  ,att18 eur_att18
22:12:43  23  ,att19 eur_att19
22:12:43  24  ,att20 eur_att20
22:12:43  25  ,att21 eur_att21
22:12:43  26  ,att22 eur_att22
22:12:43  27  ,att23 eur_att23
22:12:43  28  ,att24 eur_att24
22:12:43  29  ,att25 eur_att25
22:12:43  30  ,att26 eur_att26
22:12:43  31  ,att27 eur_att27
22:12:43  32  ,att28 eur_att28
22:12:43  33  ,att29 eur_att29
22:12:43  34  ,att30 eur_att30
22:12:43  35  ,att31 eur_att31
22:12:43  36  ,att32 eur_att32
22:12:43  37  FROM q15
22:12:43  38  /

Table created.

Elapsed: 00:00:00.17
22:12:44 SQL> 
22:12:44 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.41
22:12:44 SQL> 
22:12:44 SQL> -- rpt
22:12:44 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19956

Elapsed: 00:00:00.00
22:12:44 SQL> 
22:12:44 SQL> --
22:12:44 SQL> -- aud10.sql
22:12:44 SQL> --
22:12:44 SQL> 
22:12:44 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:12:44 SQL> 
22:12:44 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.29
22:12:44 SQL> 
22:12:44 SQL> -- I created di5min here:
22:12:44 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
22:12:44 SQL> 
22:12:44 SQL> CREATE OR REPLACE VIEW q11 AS
22:12:44   2  SELECT
22:12:44   3  pair
22:12:44   4  ,ydate
22:12:44   5  ,prdate
22:12:44   6  ,rownum rnum -- acts as t in my time-series
22:12:44   7  ,clse
22:12:44   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
22:12:44   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
22:12:44  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
22:12:44  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
22:12:44  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
22:12:44  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
22:12:44  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
22:12:44  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
22:12:44  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
22:12:44  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
22:12:44  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
22:12:44  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
22:12:44  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
22:12:44  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
22:12:44  22  FROM di5min WHERE pair LIKE'%aud%'
22:12:44  23  ORDER BY ydate
22:12:44  24  /

View created.

Elapsed: 00:00:00.03
22:12:44 SQL> 
22:12:44 SQL> -- rpt
22:12:44 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20817

Elapsed: 00:00:00.35
22:12:45 SQL> 
22:12:45 SQL> -- Calc deltas and gains
22:12:45 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.29
22:12:45 SQL> 
22:12:45 SQL> CREATE TABLE q13 COMPRESS AS
22:12:45   2  SELECT
22:12:45   3  pair
22:12:45   4  ,ydate
22:12:45   5  ,prdate
22:12:45   6  ,rnum
22:12:45   7  ,lg4
22:12:45   8  ,lg8
22:12:45   9  ,lg12
22:12:45  10  ,ld4
22:12:45  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
22:12:45  12  -- step by 1
22:12:45  13  ,clse-lg1 d01
22:12:45  14  ,lg1-lg2	d12
22:12:45  15  ,lg2-lg3	d23
22:12:45  16  ,lg3-lg4	d34
22:12:45  17  ,lg4-lg5	d45
22:12:45  18  ,lg5-lg6	d56
22:12:45  19  ,lg6-lg7	d67
22:12:45  20  ,lg7-lg8	d78
22:12:45  21  ,lg8-lg9	d89
22:12:45  22  -- step by 2
22:12:45  23  ,clse-lg2 d02
22:12:45  24  ,lg2-lg4 d24
22:12:45  25  ,lg4-lg6 d46
22:12:45  26  ,lg6-lg8 d68
22:12:45  27  -- step by 3
22:12:45  28  ,clse-lg3 d03
22:12:45  29  ,lg3-lg6	d36
22:12:45  30  ,lg6-lg9	d69
22:12:45  31  ,lg9-lg12 d912
22:12:45  32  -- step by 4
22:12:45  33  ,clse-lg4 d04
22:12:45  34  ,lg4-lg8	d48
22:12:45  35  ,lg8-lg12 d812
22:12:45  36  ,lg6-lg12 d612
22:12:45  37  ,lg12-lg18 d1218
22:12:45  38  --
22:12:45  39  ,ABS(clse-lg1)dc1
22:12:45  40  ,ABS(clse-lg2)dc2
22:12:45  41  ,ABS(clse-lg3)dc3
22:12:45  42  ,ABS(clse-lg4)dc4
22:12:45  43  ,ABS(clse-lg5)dc5
22:12:45  44  ,ABS(clse-lg6)dc6
22:12:45  45  ,ABS(clse-lg7)dc7
22:12:45  46  ,ABS(clse-lg8)dc8
22:12:45  47  ,ABS(clse-lg9)dc9
22:12:45  48  ,ABS(clse-lg12)dc12
22:12:45  49  ,ABS(clse-lg18)dc18
22:12:45  50  ,ABS(clse-lg24)dc24
22:12:45  51  ,ABS(clse-lg72)dc72
22:12:45  52  ,(ld4-clse) ug4
22:12:45  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
22:12:45  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
22:12:45  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
22:12:45  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
22:12:45  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:12:45  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
22:12:45  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:12:45  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
22:12:45  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:12:45  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:12:45  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
22:12:45  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:12:45  65  ,0+TO_CHAR(ydate,'D')d
22:12:45  66  ,0+TO_CHAR(ydate,'W')w
22:12:45  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:12:45  68  FROM q11
22:12:45  69  -- I dont want any NULL values from the LAG() functions:
22:12:45  70  WHERE lg72 > 0
22:12:45  71  ORDER BY pair,ydate
22:12:45  72  /

Table created.

Elapsed: 00:00:01.75
22:12:47 SQL> 
22:12:47 SQL> -- rpt
22:12:47 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10316
	-1	    9637

Elapsed: 00:00:00.07
22:12:47 SQL> 
22:12:47 SQL> -- Calc gains and ntiles
22:12:47 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.19
22:12:47 SQL> CREATE TABLE q15 COMPRESS AS
22:12:47   2  SELECT
22:12:47   3  pair
22:12:47   4  ,ydate
22:12:47   5  ,prdate -- Should be unique
22:12:47   6  ,trend -- +1 or -1
22:12:47   7  ,dc12 -- next statement needs this
22:12:47   8  -- Use NTILE() to derive some attributes
22:12:47   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
22:12:47  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
22:12:47  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
22:12:47  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
22:12:47  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
22:12:47  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
22:12:47  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
22:12:47  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
22:12:47  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
22:12:47  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
22:12:47  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
22:12:47  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
22:12:47  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
22:12:47  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
22:12:47  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
22:12:47  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
22:12:47  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
22:12:47  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
22:12:47  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
22:12:47  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
22:12:47  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
22:12:47  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
22:12:47  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
22:12:47  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
22:12:47  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
22:12:47  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
22:12:47  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
22:12:47  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
22:12:47  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:12:47  38  ,hh    att28
22:12:47  39  ,d     att29
22:12:47  40  ,w     att30
22:12:47  41  ,mpm   att31
22:12:47  42  ,trend att32
22:12:47  43  ,ug4 g4
22:12:47  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
22:12:47  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
22:12:47  46  FROM q13
22:12:47  47  ORDER BY pair,ydate
22:12:47  48  /

Table created.

Elapsed: 00:00:04.01
22:12:51 SQL> 
22:12:51 SQL> -- rpt
22:12:51 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
22:12:51   2  GROUP BY pair,trend,gatt,gattn
22:12:51   3  ORDER BY pair,trend,gatt,gattn
22:12:51   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000029919	    1550    -.03916318
aud_usd 	-1 nup up  -.00317206	    3635    .000090517
aud_usd 	-1 up  nup  .00297576	    4409    .027132832
aud_usd 	-1			       0
aud_usd 	 1 nup nup 1.2533E-06	    1895    .017464771
aud_usd 	 1 nup up  -.00289541	    4093    .053345851
aud_usd 	 1 up  nup  .00296577	    4323    -.17636016
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
22:12:51 SQL> 
22:12:51 SQL> -- rpt
22:12:51 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-17 21:55:00

Elapsed: 00:00:00.01
22:12:51 SQL> 
22:12:51 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.15
22:12:51 SQL> CREATE TABLE modsrc COMPRESS AS
22:12:51   2  SELECT
22:12:51   3  pair
22:12:51   4  ,ydate
22:12:51   5  ,prdate
22:12:51   6  ,trend
22:12:51   7  ,g4
22:12:51   8  ,gatt
22:12:51   9  ,gattn
22:12:51  10  ,dc12
22:12:51  11  FROM q15
22:12:51  12  /

Table created.

Elapsed: 00:00:00.09
22:12:51 SQL> 
22:12:51 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
22:12:51 SQL> 
22:12:51 SQL> -- rpt
22:12:51 SQL> 
22:12:51 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20817

Elapsed: 00:00:00.36
22:12:52 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19953

Elapsed: 00:00:00.00
22:12:52 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19953

Elapsed: 00:00:00.01
22:12:52 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19953

Elapsed: 00:00:00.00
22:12:52 SQL> 
22:12:52 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
22:12:52   2  GROUP BY pair,trend,gatt,gattn
22:12:52   3  ORDER BY pair,trend,gatt,gattn
22:12:52   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000029919	    1550    -.03916318
aud_usd 	-1 nup up  -.00317206	    3635    .000090517
aud_usd 	-1 up  nup  .00297576	    4409    .027132832
aud_usd 	-1			       0
aud_usd 	 1 nup nup 1.2533E-06	    1895    .017464771
aud_usd 	 1 nup up  -.00289541	    4093    .053345851
aud_usd 	 1 up  nup  .00296577	    4323    -.17636016
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
22:12:52 SQL> 
22:12:52 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
22:12:52 SQL> CREATE TABLE aud_ms10 COMPRESS AS
22:12:52   2  SELECT
22:12:52   3  ydate
22:12:52   4  ,trend aud_trend
22:12:52   5  ,g4    aud_g4
22:12:52   6  ,gatt  aud_gatt
22:12:52   7  ,gattn aud_gattn
22:12:52   8  FROM modsrc
22:12:52   9  /

Table created.

Elapsed: 00:00:00.07
22:12:52 SQL> 
22:12:52 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
22:12:52 SQL> 
22:12:52 SQL> -- rpt
22:12:52 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 21:15:01 2010-12-17 20:45:00	10311	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-17 21:55:00	 9594	   -.017      .0131

Elapsed: 00:00:00.02
22:12:52 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 21:15:01 2010-12-17 20:45:00	      10316	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-17 21:55:00	       9637	  -.017       .0131

Elapsed: 00:00:00.02
22:12:52 SQL> 
22:12:52 SQL> -- I need a copy of q15 attributes
22:12:52 SQL> 
22:12:52 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.03
22:12:52 SQL> CREATE TABLE aud_att COMPRESS AS
22:12:52   2  SELECT
22:12:52   3  ydate
22:12:52   4  ,att00 aud_att00
22:12:52   5  ,att01 aud_att01
22:12:52   6  ,att02 aud_att02
22:12:52   7  ,att03 aud_att03
22:12:52   8  ,att04 aud_att04
22:12:52   9  ,att05 aud_att05
22:12:52  10  ,att06 aud_att06
22:12:52  11  ,att07 aud_att07
22:12:52  12  ,att08 aud_att08
22:12:52  13  ,att09 aud_att09
22:12:52  14  ,att10 aud_att10
22:12:52  15  ,att11 aud_att11
22:12:52  16  ,att12 aud_att12
22:12:52  17  ,att13 aud_att13
22:12:52  18  ,att14 aud_att14
22:12:52  19  ,att15 aud_att15
22:12:52  20  ,att16 aud_att16
22:12:52  21  ,att17 aud_att17
22:12:52  22  ,att18 aud_att18
22:12:52  23  ,att19 aud_att19
22:12:52  24  ,att20 aud_att20
22:12:52  25  ,att21 aud_att21
22:12:52  26  ,att22 aud_att22
22:12:52  27  ,att23 aud_att23
22:12:52  28  ,att24 aud_att24
22:12:52  29  ,att25 aud_att25
22:12:52  30  ,att26 aud_att26
22:12:52  31  ,att27 aud_att27
22:12:52  32  ,att28 aud_att28
22:12:52  33  ,att29 aud_att29
22:12:52  34  ,att30 aud_att30
22:12:52  35  ,att31 aud_att31
22:12:52  36  ,att32 aud_att32
22:12:52  37  FROM q15
22:12:52  38  /

Table created.

Elapsed: 00:00:00.13
22:12:52 SQL> 
22:12:52 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
22:12:53 SQL> 
22:12:53 SQL> -- rpt
22:12:53 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19953

Elapsed: 00:00:00.00
22:12:53 SQL> 
22:12:53 SQL> --
22:12:53 SQL> -- gbp10.sql
22:12:53 SQL> --
22:12:53 SQL> 
22:12:53 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:12:53 SQL> 
22:12:53 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.32
22:12:53 SQL> 
22:12:53 SQL> -- I created di5min here:
22:12:53 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
22:12:53 SQL> 
22:12:53 SQL> CREATE OR REPLACE VIEW q11 AS
22:12:53   2  SELECT
22:12:53   3  pair
22:12:53   4  ,ydate
22:12:53   5  ,prdate
22:12:53   6  ,rownum rnum -- acts as t in my time-series
22:12:53   7  ,clse
22:12:53   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
22:12:53   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
22:12:53  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
22:12:53  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
22:12:53  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
22:12:53  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
22:12:53  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
22:12:53  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
22:12:53  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
22:12:53  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
22:12:53  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
22:12:53  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
22:12:53  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
22:12:53  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
22:12:53  22  FROM di5min WHERE pair LIKE'%gbp%'
22:12:53  23  ORDER BY ydate
22:12:53  24  /

View created.

Elapsed: 00:00:00.05
22:12:53 SQL> 
22:12:53 SQL> -- rpt
22:12:53 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20819

Elapsed: 00:00:00.35
22:12:53 SQL> 
22:12:53 SQL> -- Calc deltas and gains
22:12:53 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.24
22:12:54 SQL> 
22:12:54 SQL> CREATE TABLE q13 COMPRESS AS
22:12:54   2  SELECT
22:12:54   3  pair
22:12:54   4  ,ydate
22:12:54   5  ,prdate
22:12:54   6  ,rnum
22:12:54   7  ,lg4
22:12:54   8  ,lg8
22:12:54   9  ,lg12
22:12:54  10  ,ld4
22:12:54  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
22:12:54  12  -- step by 1
22:12:54  13  ,clse-lg1 d01
22:12:54  14  ,lg1-lg2	d12
22:12:54  15  ,lg2-lg3	d23
22:12:54  16  ,lg3-lg4	d34
22:12:54  17  ,lg4-lg5	d45
22:12:54  18  ,lg5-lg6	d56
22:12:54  19  ,lg6-lg7	d67
22:12:54  20  ,lg7-lg8	d78
22:12:54  21  ,lg8-lg9	d89
22:12:54  22  -- step by 2
22:12:54  23  ,clse-lg2 d02
22:12:54  24  ,lg2-lg4 d24
22:12:54  25  ,lg4-lg6 d46
22:12:54  26  ,lg6-lg8 d68
22:12:54  27  -- step by 3
22:12:54  28  ,clse-lg3 d03
22:12:54  29  ,lg3-lg6	d36
22:12:54  30  ,lg6-lg9	d69
22:12:54  31  ,lg9-lg12 d912
22:12:54  32  -- step by 4
22:12:54  33  ,clse-lg4 d04
22:12:54  34  ,lg4-lg8	d48
22:12:54  35  ,lg8-lg12 d812
22:12:54  36  ,lg6-lg12 d612
22:12:54  37  ,lg12-lg18 d1218
22:12:54  38  --
22:12:54  39  ,ABS(clse-lg1)dc1
22:12:54  40  ,ABS(clse-lg2)dc2
22:12:54  41  ,ABS(clse-lg3)dc3
22:12:54  42  ,ABS(clse-lg4)dc4
22:12:54  43  ,ABS(clse-lg5)dc5
22:12:54  44  ,ABS(clse-lg6)dc6
22:12:54  45  ,ABS(clse-lg7)dc7
22:12:54  46  ,ABS(clse-lg8)dc8
22:12:54  47  ,ABS(clse-lg9)dc9
22:12:54  48  ,ABS(clse-lg12)dc12
22:12:54  49  ,ABS(clse-lg18)dc18
22:12:54  50  ,ABS(clse-lg24)dc24
22:12:54  51  ,ABS(clse-lg72)dc72
22:12:54  52  ,(ld4-clse) ug4
22:12:54  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
22:12:54  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
22:12:54  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
22:12:54  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
22:12:54  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:12:54  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
22:12:54  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:12:54  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
22:12:54  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:12:54  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:12:54  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
22:12:54  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:12:54  65  ,0+TO_CHAR(ydate,'D')d
22:12:54  66  ,0+TO_CHAR(ydate,'W')w
22:12:54  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:12:54  68  FROM q11
22:12:54  69  -- I dont want any NULL values from the LAG() functions:
22:12:54  70  WHERE lg72 > 0
22:12:54  71  ORDER BY pair,ydate
22:12:54  72  /

Table created.

Elapsed: 00:00:01.71
22:12:55 SQL> 
22:12:55 SQL> -- rpt
22:12:55 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9651
	-1	   10304

Elapsed: 00:00:00.03
22:12:55 SQL> 
22:12:55 SQL> -- Calc gains and ntiles
22:12:55 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.17
22:12:56 SQL> CREATE TABLE q15 COMPRESS AS
22:12:56   2  SELECT
22:12:56   3  pair
22:12:56   4  ,ydate
22:12:56   5  ,prdate -- Should be unique
22:12:56   6  ,trend -- +1 or -1
22:12:56   7  ,dc12 -- next statement needs this
22:12:56   8  -- Use NTILE() to derive some attributes
22:12:56   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
22:12:56  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
22:12:56  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
22:12:56  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
22:12:56  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
22:12:56  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
22:12:56  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
22:12:56  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
22:12:56  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
22:12:56  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
22:12:56  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
22:12:56  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
22:12:56  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
22:12:56  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
22:12:56  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
22:12:56  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
22:12:56  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
22:12:56  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
22:12:56  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
22:12:56  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
22:12:56  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
22:12:56  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
22:12:56  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
22:12:56  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
22:12:56  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
22:12:56  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
22:12:56  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
22:12:56  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
22:12:56  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:12:56  38  ,hh    att28
22:12:56  39  ,d     att29
22:12:56  40  ,w     att30
22:12:56  41  ,mpm   att31
22:12:56  42  ,trend att32
22:12:56  43  ,ug4 g4
22:12:56  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
22:12:56  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
22:12:56  46  FROM q13
22:12:56  47  ORDER BY pair,ydate
22:12:56  48  /

Table created.

Elapsed: 00:00:03.98
22:13:00 SQL> 
22:13:00 SQL> -- rpt
22:13:00 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
22:13:00   2  GROUP BY pair,trend,gatt,gattn
22:13:00   3  ORDER BY pair,trend,gatt,gattn
22:13:00   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -1.187E-06	    1812     .05932405
gbp_usd 	-1 nup up  -.00334925	    4081    -.00160021
gbp_usd 	-1 up  nup .003122072	    4363    -.08757181
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup .000014682	    1650    .009141743
gbp_usd 	 1 nup up  -.00320098	    4122    .009597508
gbp_usd 	 1 up  nup .003543993	    3879    -.16652449

7 rows selected.

Elapsed: 00:00:00.04
22:13:00 SQL> 
22:13:00 SQL> -- rpt
22:13:00 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-17 21:55:00

Elapsed: 00:00:00.01
22:13:00 SQL> 
22:13:00 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.16
22:13:00 SQL> CREATE TABLE modsrc COMPRESS AS
22:13:00   2  SELECT
22:13:00   3  pair
22:13:00   4  ,ydate
22:13:00   5  ,prdate
22:13:00   6  ,trend
22:13:00   7  ,g4
22:13:00   8  ,gatt
22:13:00   9  ,gattn
22:13:00  10  ,dc12
22:13:00  11  FROM q15
22:13:00  12  /

Table created.

Elapsed: 00:00:00.09
22:13:00 SQL> 
22:13:00 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
22:13:00 SQL> 
22:13:00 SQL> -- rpt
22:13:00 SQL> 
22:13:00 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20819

Elapsed: 00:00:00.35
22:13:00 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.01
22:13:00 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.00
22:13:00 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.01
22:13:00 SQL> 
22:13:00 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
22:13:00   2  GROUP BY pair,trend,gatt,gattn
22:13:00   3  ORDER BY pair,trend,gatt,gattn
22:13:00   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -1.187E-06	    1812     .05932405
gbp_usd 	-1 nup up  -.00334925	    4081    -.00160021
gbp_usd 	-1 up  nup .003122072	    4363    -.08757181
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup .000014682	    1650    .009141743
gbp_usd 	 1 nup up  -.00320098	    4122    .009597508
gbp_usd 	 1 up  nup .003543993	    3879    -.16652449

7 rows selected.

Elapsed: 00:00:00.02
22:13:00 SQL> 
22:13:00 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
22:13:01 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
22:13:01   2  SELECT
22:13:01   3  ydate
22:13:01   4  ,trend gbp_trend
22:13:01   5  ,g4    gbp_g4
22:13:01   6  ,gatt  gbp_gatt
22:13:01   7  ,gattn gbp_gattn
22:13:01   8  FROM modsrc
22:13:01   9  /

Table created.

Elapsed: 00:00:00.07
22:13:01 SQL> 
22:13:01 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
22:13:01 SQL> 
22:13:01 SQL> -- rpt
22:13:01 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 22:00:01 2010-12-17 10:20:00	 9651	  -.0194      .0179
	-1 2010-09-13 21:15:01 2010-12-17 21:55:00	10256	  -.0153      .0159

Elapsed: 00:00:00.02
22:13:01 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 22:00:01 2010-12-17 10:20:00	       9651	 -.0194       .0179
	-1 2010-09-13 21:15:01 2010-12-17 21:55:00	      10304	 -.0153       .0159

Elapsed: 00:00:00.01
22:13:01 SQL> 
22:13:01 SQL> -- I need a copy of q15 attributes
22:13:01 SQL> 
22:13:01 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.09
22:13:01 SQL> CREATE TABLE gbp_att COMPRESS AS
22:13:01   2  SELECT
22:13:01   3  ydate
22:13:01   4  ,att00 gbp_att00
22:13:01   5  ,att01 gbp_att01
22:13:01   6  ,att02 gbp_att02
22:13:01   7  ,att03 gbp_att03
22:13:01   8  ,att04 gbp_att04
22:13:01   9  ,att05 gbp_att05
22:13:01  10  ,att06 gbp_att06
22:13:01  11  ,att07 gbp_att07
22:13:01  12  ,att08 gbp_att08
22:13:01  13  ,att09 gbp_att09
22:13:01  14  ,att10 gbp_att10
22:13:01  15  ,att11 gbp_att11
22:13:01  16  ,att12 gbp_att12
22:13:01  17  ,att13 gbp_att13
22:13:01  18  ,att14 gbp_att14
22:13:01  19  ,att15 gbp_att15
22:13:01  20  ,att16 gbp_att16
22:13:01  21  ,att17 gbp_att17
22:13:01  22  ,att18 gbp_att18
22:13:01  23  ,att19 gbp_att19
22:13:01  24  ,att20 gbp_att20
22:13:01  25  ,att21 gbp_att21
22:13:01  26  ,att22 gbp_att22
22:13:01  27  ,att23 gbp_att23
22:13:01  28  ,att24 gbp_att24
22:13:01  29  ,att25 gbp_att25
22:13:01  30  ,att26 gbp_att26
22:13:01  31  ,att27 gbp_att27
22:13:01  32  ,att28 gbp_att28
22:13:01  33  ,att29 gbp_att29
22:13:01  34  ,att30 gbp_att30
22:13:01  35  ,att31 gbp_att31
22:13:01  36  ,att32 gbp_att32
22:13:01  37  FROM q15
22:13:01  38  /

Table created.

Elapsed: 00:00:00.14
22:13:01 SQL> 
22:13:01 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.50
22:13:02 SQL> 
22:13:02 SQL> -- rpt
22:13:02 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19955

Elapsed: 00:00:00.01
22:13:02 SQL> 
22:13:02 SQL> --
22:13:02 SQL> -- jpy10.sql
22:13:02 SQL> --
22:13:02 SQL> 
22:13:02 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:13:02 SQL> 
22:13:02 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.30
22:13:02 SQL> 
22:13:02 SQL> -- I created di5min here:
22:13:02 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
22:13:02 SQL> 
22:13:02 SQL> CREATE OR REPLACE VIEW q11 AS
22:13:02   2  SELECT
22:13:02   3  pair
22:13:02   4  ,ydate
22:13:02   5  ,prdate
22:13:02   6  ,rownum rnum -- acts as t in my time-series
22:13:02   7  ,clse
22:13:02   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
22:13:02   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
22:13:02  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
22:13:02  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
22:13:02  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
22:13:02  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
22:13:02  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
22:13:02  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
22:13:02  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
22:13:02  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
22:13:02  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
22:13:02  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
22:13:02  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
22:13:02  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
22:13:02  22  FROM di5min WHERE pair LIKE'%jpy%'
22:13:02  23  ORDER BY ydate
22:13:02  24  /

View created.

Elapsed: 00:00:00.03
22:13:02 SQL> 
22:13:02 SQL> -- rpt
22:13:02 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20820

Elapsed: 00:00:00.34
22:13:02 SQL> 
22:13:02 SQL> -- Calc deltas and gains
22:13:02 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
22:13:02 SQL> 
22:13:02 SQL> CREATE TABLE q13 COMPRESS AS
22:13:02   2  SELECT
22:13:02   3  pair
22:13:02   4  ,ydate
22:13:02   5  ,prdate
22:13:02   6  ,rnum
22:13:02   7  ,lg4
22:13:02   8  ,lg8
22:13:02   9  ,lg12
22:13:02  10  ,ld4
22:13:02  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
22:13:02  12  -- step by 1
22:13:02  13  ,clse-lg1 d01
22:13:02  14  ,lg1-lg2	d12
22:13:02  15  ,lg2-lg3	d23
22:13:02  16  ,lg3-lg4	d34
22:13:02  17  ,lg4-lg5	d45
22:13:02  18  ,lg5-lg6	d56
22:13:02  19  ,lg6-lg7	d67
22:13:02  20  ,lg7-lg8	d78
22:13:02  21  ,lg8-lg9	d89
22:13:02  22  -- step by 2
22:13:02  23  ,clse-lg2 d02
22:13:02  24  ,lg2-lg4 d24
22:13:02  25  ,lg4-lg6 d46
22:13:02  26  ,lg6-lg8 d68
22:13:02  27  -- step by 3
22:13:02  28  ,clse-lg3 d03
22:13:02  29  ,lg3-lg6	d36
22:13:02  30  ,lg6-lg9	d69
22:13:02  31  ,lg9-lg12 d912
22:13:02  32  -- step by 4
22:13:02  33  ,clse-lg4 d04
22:13:02  34  ,lg4-lg8	d48
22:13:02  35  ,lg8-lg12 d812
22:13:02  36  ,lg6-lg12 d612
22:13:02  37  ,lg12-lg18 d1218
22:13:02  38  --
22:13:02  39  ,ABS(clse-lg1)dc1
22:13:02  40  ,ABS(clse-lg2)dc2
22:13:02  41  ,ABS(clse-lg3)dc3
22:13:02  42  ,ABS(clse-lg4)dc4
22:13:02  43  ,ABS(clse-lg5)dc5
22:13:02  44  ,ABS(clse-lg6)dc6
22:13:02  45  ,ABS(clse-lg7)dc7
22:13:02  46  ,ABS(clse-lg8)dc8
22:13:02  47  ,ABS(clse-lg9)dc9
22:13:02  48  ,ABS(clse-lg12)dc12
22:13:02  49  ,ABS(clse-lg18)dc18
22:13:02  50  ,ABS(clse-lg24)dc24
22:13:02  51  ,ABS(clse-lg72)dc72
22:13:02  52  ,(ld4-clse) ug4
22:13:02  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
22:13:02  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
22:13:02  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
22:13:02  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
22:13:02  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:13:02  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
22:13:02  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:13:02  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
22:13:02  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:13:02  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:13:02  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
22:13:02  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:13:02  65  ,0+TO_CHAR(ydate,'D')d
22:13:02  66  ,0+TO_CHAR(ydate,'W')w
22:13:02  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:13:02  68  FROM q11
22:13:02  69  -- I dont want any NULL values from the LAG() functions:
22:13:02  70  WHERE lg72 > 0
22:13:02  71  ORDER BY pair,ydate
22:13:02  72  /

Table created.

Elapsed: 00:00:01.64
22:13:04 SQL> 
22:13:04 SQL> -- rpt
22:13:04 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9320
	-1	   10636

Elapsed: 00:00:00.03
22:13:04 SQL> 
22:13:04 SQL> -- Calc gains and ntiles
22:13:04 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.19
22:13:04 SQL> CREATE TABLE q15 COMPRESS AS
22:13:04   2  SELECT
22:13:04   3  pair
22:13:04   4  ,ydate
22:13:04   5  ,prdate -- Should be unique
22:13:04   6  ,trend -- +1 or -1
22:13:04   7  ,dc12 -- next statement needs this
22:13:04   8  -- Use NTILE() to derive some attributes
22:13:04   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
22:13:04  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
22:13:04  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
22:13:04  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
22:13:04  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
22:13:04  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
22:13:04  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
22:13:04  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
22:13:04  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
22:13:04  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
22:13:04  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
22:13:04  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
22:13:04  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
22:13:04  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
22:13:04  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
22:13:04  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
22:13:04  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
22:13:04  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
22:13:04  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
22:13:04  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
22:13:04  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
22:13:04  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
22:13:04  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
22:13:04  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
22:13:04  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
22:13:04  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
22:13:04  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
22:13:04  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
22:13:04  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:13:04  38  ,hh    att28
22:13:04  39  ,d     att29
22:13:04  40  ,w     att30
22:13:04  41  ,mpm   att31
22:13:04  42  ,trend att32
22:13:04  43  ,ug4 g4
22:13:04  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
22:13:04  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
22:13:04  46  FROM q13
22:13:04  47  ORDER BY pair,ydate
22:13:04  48  /

Table created.

Elapsed: 00:00:03.99
22:13:08 SQL> 
22:13:08 SQL> -- rpt
22:13:08 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
22:13:08   2  GROUP BY pair,trend,gatt,gattn
22:13:08   3  ORDER BY pair,trend,gatt,gattn
22:13:08   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     176
usd_jpy 	-1 nup up  -.13456011	    5132    .020227361
usd_jpy 	-1 up  nup .143255135	    5307    .057857429
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13485212	    5021    -.01351165
usd_jpy 	 1 up  nup .152197929	    4105    .184589759
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
22:13:08 SQL> 
22:13:08 SQL> -- rpt
22:13:08 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-17 21:55:00

Elapsed: 00:00:00.02
22:13:08 SQL> 
22:13:08 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.17
22:13:08 SQL> CREATE TABLE modsrc COMPRESS AS
22:13:08   2  SELECT
22:13:08   3  pair
22:13:08   4  ,ydate
22:13:08   5  ,prdate
22:13:08   6  ,trend
22:13:08   7  ,g4
22:13:08   8  ,gatt
22:13:08   9  ,gattn
22:13:08  10  ,dc12
22:13:08  11  FROM q15
22:13:08  12  /

Table created.

Elapsed: 00:00:00.09
22:13:09 SQL> 
22:13:09 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
22:13:09 SQL> 
22:13:09 SQL> -- rpt
22:13:09 SQL> 
22:13:09 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20820

Elapsed: 00:00:00.34
22:13:09 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19956

Elapsed: 00:00:00.01
22:13:09 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19956

Elapsed: 00:00:00.00
22:13:09 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19956

Elapsed: 00:00:00.01
22:13:09 SQL> 
22:13:09 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
22:13:09   2  GROUP BY pair,trend,gatt,gattn
22:13:09   3  ORDER BY pair,trend,gatt,gattn
22:13:09   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     176
usd_jpy 	-1 nup up  -.13456011	    5132    .020227361
usd_jpy 	-1 up  nup .143255135	    5307    .057857429
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13485212	    5021    -.01351165
usd_jpy 	 1 up  nup .152197929	    4105    .184589759
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
22:13:09 SQL> 
22:13:09 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
22:13:09 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
22:13:09   2  SELECT
22:13:09   3  ydate
22:13:09   4  ,trend jpy_trend
22:13:09   5  ,g4    jpy_g4
22:13:09   6  ,gatt  jpy_gatt
22:13:09   7  ,gattn jpy_gattn
22:13:09   8  FROM modsrc
22:13:09   9  /

Table created.

Elapsed: 00:00:00.09
22:13:09 SQL> 
22:13:09 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.26
22:13:10 SQL> 
22:13:10 SQL> -- rpt
22:13:10 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 05:55:01 2010-12-17 21:55:00	 9293	   -1.07	1.5
	-1 2010-09-13 21:15:01 2010-12-17 20:55:00	10615	 -1.0775       1.99

Elapsed: 00:00:00.02
22:13:10 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 05:55:01 2010-12-17 21:55:00	       9320	  -1.07 	1.5
	-1 2010-09-13 21:15:01 2010-12-17 20:55:00	      10636	-1.0775        1.99

Elapsed: 00:00:00.01
22:13:10 SQL> 
22:13:10 SQL> -- I need a copy of q15 attributes
22:13:10 SQL> 
22:13:10 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.03
22:13:10 SQL> CREATE TABLE jpy_att COMPRESS AS
22:13:10   2  SELECT
22:13:10   3  ydate
22:13:10   4  ,att00 jpy_att00
22:13:10   5  ,att01 jpy_att01
22:13:10   6  ,att02 jpy_att02
22:13:10   7  ,att03 jpy_att03
22:13:10   8  ,att04 jpy_att04
22:13:10   9  ,att05 jpy_att05
22:13:10  10  ,att06 jpy_att06
22:13:10  11  ,att07 jpy_att07
22:13:10  12  ,att08 jpy_att08
22:13:10  13  ,att09 jpy_att09
22:13:10  14  ,att10 jpy_att10
22:13:10  15  ,att11 jpy_att11
22:13:10  16  ,att12 jpy_att12
22:13:10  17  ,att13 jpy_att13
22:13:10  18  ,att14 jpy_att14
22:13:10  19  ,att15 jpy_att15
22:13:10  20  ,att16 jpy_att16
22:13:10  21  ,att17 jpy_att17
22:13:10  22  ,att18 jpy_att18
22:13:10  23  ,att19 jpy_att19
22:13:10  24  ,att20 jpy_att20
22:13:10  25  ,att21 jpy_att21
22:13:10  26  ,att22 jpy_att22
22:13:10  27  ,att23 jpy_att23
22:13:10  28  ,att24 jpy_att24
22:13:10  29  ,att25 jpy_att25
22:13:10  30  ,att26 jpy_att26
22:13:10  31  ,att27 jpy_att27
22:13:10  32  ,att28 jpy_att28
22:13:10  33  ,att29 jpy_att29
22:13:10  34  ,att30 jpy_att30
22:13:10  35  ,att31 jpy_att31
22:13:10  36  ,att32 jpy_att32
22:13:10  37  FROM q15
22:13:10  38  /

Table created.

Elapsed: 00:00:00.14
22:13:10 SQL> 
22:13:10 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
22:13:10 SQL> 
22:13:10 SQL> -- rpt
22:13:10 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19956

Elapsed: 00:00:00.00
22:13:10 SQL> 
22:13:10 SQL> --
22:13:10 SQL> -- cad10.sql
22:13:10 SQL> --
22:13:10 SQL> 
22:13:10 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:13:10 SQL> 
22:13:10 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.35
22:13:10 SQL> 
22:13:10 SQL> -- I created di5min here:
22:13:10 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
22:13:10 SQL> 
22:13:10 SQL> CREATE OR REPLACE VIEW q11 AS
22:13:10   2  SELECT
22:13:10   3  pair
22:13:10   4  ,ydate
22:13:10   5  ,prdate
22:13:10   6  ,rownum rnum -- acts as t in my time-series
22:13:10   7  ,clse
22:13:10   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
22:13:10   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
22:13:10  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
22:13:10  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
22:13:10  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
22:13:10  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
22:13:10  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
22:13:10  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
22:13:10  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
22:13:10  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
22:13:10  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
22:13:10  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
22:13:10  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
22:13:10  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
22:13:10  22  FROM di5min WHERE pair LIKE'%cad%'
22:13:10  23  ORDER BY ydate
22:13:10  24  /

View created.

Elapsed: 00:00:00.05
22:13:11 SQL> 
22:13:11 SQL> -- rpt
22:13:11 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20816

Elapsed: 00:00:00.36
22:13:11 SQL> 
22:13:11 SQL> -- Calc deltas and gains
22:13:11 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.25
22:13:11 SQL> 
22:13:11 SQL> CREATE TABLE q13 COMPRESS AS
22:13:11   2  SELECT
22:13:11   3  pair
22:13:11   4  ,ydate
22:13:11   5  ,prdate
22:13:11   6  ,rnum
22:13:11   7  ,lg4
22:13:11   8  ,lg8
22:13:11   9  ,lg12
22:13:11  10  ,ld4
22:13:11  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
22:13:11  12  -- step by 1
22:13:11  13  ,clse-lg1 d01
22:13:11  14  ,lg1-lg2	d12
22:13:11  15  ,lg2-lg3	d23
22:13:11  16  ,lg3-lg4	d34
22:13:11  17  ,lg4-lg5	d45
22:13:11  18  ,lg5-lg6	d56
22:13:11  19  ,lg6-lg7	d67
22:13:11  20  ,lg7-lg8	d78
22:13:11  21  ,lg8-lg9	d89
22:13:11  22  -- step by 2
22:13:11  23  ,clse-lg2 d02
22:13:11  24  ,lg2-lg4 d24
22:13:11  25  ,lg4-lg6 d46
22:13:11  26  ,lg6-lg8 d68
22:13:11  27  -- step by 3
22:13:11  28  ,clse-lg3 d03
22:13:11  29  ,lg3-lg6	d36
22:13:11  30  ,lg6-lg9	d69
22:13:11  31  ,lg9-lg12 d912
22:13:11  32  -- step by 4
22:13:11  33  ,clse-lg4 d04
22:13:11  34  ,lg4-lg8	d48
22:13:11  35  ,lg8-lg12 d812
22:13:11  36  ,lg6-lg12 d612
22:13:11  37  ,lg12-lg18 d1218
22:13:11  38  --
22:13:11  39  ,ABS(clse-lg1)dc1
22:13:11  40  ,ABS(clse-lg2)dc2
22:13:11  41  ,ABS(clse-lg3)dc3
22:13:11  42  ,ABS(clse-lg4)dc4
22:13:11  43  ,ABS(clse-lg5)dc5
22:13:11  44  ,ABS(clse-lg6)dc6
22:13:11  45  ,ABS(clse-lg7)dc7
22:13:11  46  ,ABS(clse-lg8)dc8
22:13:11  47  ,ABS(clse-lg9)dc9
22:13:11  48  ,ABS(clse-lg12)dc12
22:13:11  49  ,ABS(clse-lg18)dc18
22:13:11  50  ,ABS(clse-lg24)dc24
22:13:11  51  ,ABS(clse-lg72)dc72
22:13:11  52  ,(ld4-clse) ug4
22:13:11  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
22:13:11  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
22:13:11  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
22:13:11  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
22:13:11  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:13:11  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
22:13:11  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:13:11  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
22:13:11  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:13:11  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:13:11  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
22:13:11  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:13:11  65  ,0+TO_CHAR(ydate,'D')d
22:13:11  66  ,0+TO_CHAR(ydate,'W')w
22:13:11  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:13:11  68  FROM q11
22:13:11  69  -- I dont want any NULL values from the LAG() functions:
22:13:11  70  WHERE lg72 > 0
22:13:11  71  ORDER BY pair,ydate
22:13:11  72  /

Table created.

Elapsed: 00:00:01.77
22:13:13 SQL> 
22:13:13 SQL> -- rpt
22:13:13 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9185
	-1	   10767

Elapsed: 00:00:00.03
22:13:13 SQL> 
22:13:13 SQL> -- Calc gains and ntiles
22:13:13 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.19
22:13:13 SQL> CREATE TABLE q15 COMPRESS AS
22:13:13   2  SELECT
22:13:13   3  pair
22:13:13   4  ,ydate
22:13:13   5  ,prdate -- Should be unique
22:13:13   6  ,trend -- +1 or -1
22:13:13   7  ,dc12 -- next statement needs this
22:13:13   8  -- Use NTILE() to derive some attributes
22:13:13   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
22:13:13  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
22:13:13  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
22:13:13  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
22:13:13  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
22:13:13  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
22:13:13  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
22:13:13  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
22:13:13  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
22:13:13  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
22:13:13  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
22:13:13  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
22:13:13  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
22:13:13  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
22:13:13  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
22:13:13  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
22:13:13  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
22:13:13  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
22:13:13  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
22:13:13  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
22:13:13  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
22:13:13  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
22:13:13  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
22:13:13  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
22:13:13  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
22:13:13  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
22:13:13  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
22:13:13  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
22:13:13  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:13:13  38  ,hh    att28
22:13:13  39  ,d     att29
22:13:13  40  ,w     att30
22:13:13  41  ,mpm   att31
22:13:13  42  ,trend att32
22:13:13  43  ,ug4 g4
22:13:13  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
22:13:13  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
22:13:13  46  FROM q13
22:13:13  47  ORDER BY pair,ydate
22:13:13  48  /

Table created.

Elapsed: 00:00:03.94
22:13:17 SQL> 
22:13:17 SQL> -- rpt
22:13:17 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
22:13:17   2  GROUP BY pair,trend,gatt,gattn
22:13:17   3  ORDER BY pair,trend,gatt,gattn
22:13:17   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup  -.0000027	    2982    .015497003
usd_cad 	-1 nup up  -.00227221	    3950    .057642004
usd_cad 	-1 up  nup .002396525	    3835    .006708733
usd_cad 	 1 nup nup -.00001763	    2118     -.0613625
usd_cad 	 1 nup up  -.00236422	    3865      .0023038
usd_cad 	 1 up  nup  .00259698	    3154    -.00417422
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
22:13:17 SQL> 
22:13:17 SQL> -- rpt
22:13:17 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-17 21:55:00

Elapsed: 00:00:00.01
22:13:17 SQL> 
22:13:17 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
22:13:17 SQL> CREATE TABLE modsrc COMPRESS AS
22:13:17   2  SELECT
22:13:17   3  pair
22:13:17   4  ,ydate
22:13:17   5  ,prdate
22:13:17   6  ,trend
22:13:17   7  ,g4
22:13:17   8  ,gatt
22:13:17   9  ,gattn
22:13:17  10  ,dc12
22:13:17  11  FROM q15
22:13:17  12  /

Table created.

Elapsed: 00:00:00.09
22:13:17 SQL> 
22:13:17 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
22:13:18 SQL> 
22:13:18 SQL> -- rpt
22:13:18 SQL> 
22:13:18 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20816

Elapsed: 00:00:00.34
22:13:18 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19952

Elapsed: 00:00:00.01
22:13:18 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19952

Elapsed: 00:00:00.00
22:13:18 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19952

Elapsed: 00:00:00.01
22:13:18 SQL> 
22:13:18 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
22:13:18   2  GROUP BY pair,trend,gatt,gattn
22:13:18   3  ORDER BY pair,trend,gatt,gattn
22:13:18   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup  -.0000027	    2982    .015497003
usd_cad 	-1 nup up  -.00227221	    3950    .057642004
usd_cad 	-1 up  nup .002396525	    3835    .006708733
usd_cad 	 1 nup nup -.00001763	    2118     -.0613625
usd_cad 	 1 nup up  -.00236422	    3865      .0023038
usd_cad 	 1 up  nup  .00259698	    3154    -.00417422
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
22:13:18 SQL> 
22:13:18 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
22:13:18 SQL> CREATE TABLE cad_ms10 COMPRESS AS
22:13:18   2  SELECT
22:13:18   3  ydate
22:13:18   4  ,trend cad_trend
22:13:18   5  ,g4    cad_g4
22:13:18   6  ,gatt  cad_gatt
22:13:18   7  ,gattn cad_gattn
22:13:18   8  FROM modsrc
22:13:18   9  /

Table created.

Elapsed: 00:00:00.10
22:13:18 SQL> 
22:13:18 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
22:13:18 SQL> 
22:13:18 SQL> -- rpt
22:13:18 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 00:30:01 2010-12-17 21:55:00	 9137	  -.0089      .0151
	-1 2010-09-13 21:15:01 2010-12-17 09:45:00	10767	  -.0107      .0147

Elapsed: 00:00:00.02
22:13:18 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 00:30:01 2010-12-17 21:55:00	       9185	 -.0089       .0151
	-1 2010-09-13 21:15:01 2010-12-17 09:45:00	      10767	 -.0107       .0147

Elapsed: 00:00:00.02
22:13:18 SQL> 
22:13:18 SQL> -- I need a copy of q15 attributes
22:13:18 SQL> 
22:13:18 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.03
22:13:18 SQL> CREATE TABLE cad_att COMPRESS AS
22:13:18   2  SELECT
22:13:18   3  ydate
22:13:18   4  ,att00 cad_att00
22:13:18   5  ,att01 cad_att01
22:13:18   6  ,att02 cad_att02
22:13:18   7  ,att03 cad_att03
22:13:18   8  ,att04 cad_att04
22:13:18   9  ,att05 cad_att05
22:13:18  10  ,att06 cad_att06
22:13:18  11  ,att07 cad_att07
22:13:18  12  ,att08 cad_att08
22:13:18  13  ,att09 cad_att09
22:13:18  14  ,att10 cad_att10
22:13:18  15  ,att11 cad_att11
22:13:18  16  ,att12 cad_att12
22:13:18  17  ,att13 cad_att13
22:13:18  18  ,att14 cad_att14
22:13:18  19  ,att15 cad_att15
22:13:18  20  ,att16 cad_att16
22:13:18  21  ,att17 cad_att17
22:13:18  22  ,att18 cad_att18
22:13:18  23  ,att19 cad_att19
22:13:18  24  ,att20 cad_att20
22:13:18  25  ,att21 cad_att21
22:13:18  26  ,att22 cad_att22
22:13:18  27  ,att23 cad_att23
22:13:18  28  ,att24 cad_att24
22:13:18  29  ,att25 cad_att25
22:13:18  30  ,att26 cad_att26
22:13:18  31  ,att27 cad_att27
22:13:18  32  ,att28 cad_att28
22:13:18  33  ,att29 cad_att29
22:13:18  34  ,att30 cad_att30
22:13:18  35  ,att31 cad_att31
22:13:18  36  ,att32 cad_att32
22:13:18  37  FROM q15
22:13:18  38  /

Table created.

Elapsed: 00:00:00.14
22:13:18 SQL> 
22:13:18 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
22:13:19 SQL> 
22:13:19 SQL> -- rpt
22:13:19 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19952

Elapsed: 00:00:00.01
22:13:19 SQL> 
22:13:19 SQL> --
22:13:19 SQL> -- chf10.sql
22:13:19 SQL> --
22:13:19 SQL> 
22:13:19 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:13:19 SQL> 
22:13:19 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
22:13:19 SQL> 
22:13:19 SQL> -- I created di5min here:
22:13:19 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
22:13:19 SQL> 
22:13:19 SQL> CREATE OR REPLACE VIEW q11 AS
22:13:19   2  SELECT
22:13:19   3  pair
22:13:19   4  ,ydate
22:13:19   5  ,prdate
22:13:19   6  ,rownum rnum -- acts as t in my time-series
22:13:19   7  ,clse
22:13:19   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
22:13:19   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
22:13:19  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
22:13:19  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
22:13:19  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
22:13:19  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
22:13:19  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
22:13:19  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
22:13:19  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
22:13:19  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
22:13:19  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
22:13:19  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
22:13:19  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
22:13:19  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
22:13:19  22  FROM di5min WHERE pair LIKE'%chf%'
22:13:19  23  ORDER BY ydate
22:13:19  24  /

View created.

Elapsed: 00:00:00.08
22:13:19 SQL> 
22:13:19 SQL> -- rpt
22:13:19 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20819

Elapsed: 00:00:00.37
22:13:20 SQL> 
22:13:20 SQL> -- Calc deltas and gains
22:13:20 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.55
22:13:20 SQL> 
22:13:20 SQL> CREATE TABLE q13 COMPRESS AS
22:13:20   2  SELECT
22:13:20   3  pair
22:13:20   4  ,ydate
22:13:20   5  ,prdate
22:13:20   6  ,rnum
22:13:20   7  ,lg4
22:13:20   8  ,lg8
22:13:20   9  ,lg12
22:13:20  10  ,ld4
22:13:20  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
22:13:20  12  -- step by 1
22:13:20  13  ,clse-lg1 d01
22:13:20  14  ,lg1-lg2	d12
22:13:20  15  ,lg2-lg3	d23
22:13:20  16  ,lg3-lg4	d34
22:13:20  17  ,lg4-lg5	d45
22:13:20  18  ,lg5-lg6	d56
22:13:20  19  ,lg6-lg7	d67
22:13:20  20  ,lg7-lg8	d78
22:13:20  21  ,lg8-lg9	d89
22:13:20  22  -- step by 2
22:13:20  23  ,clse-lg2 d02
22:13:20  24  ,lg2-lg4 d24
22:13:20  25  ,lg4-lg6 d46
22:13:20  26  ,lg6-lg8 d68
22:13:20  27  -- step by 3
22:13:20  28  ,clse-lg3 d03
22:13:20  29  ,lg3-lg6	d36
22:13:20  30  ,lg6-lg9	d69
22:13:20  31  ,lg9-lg12 d912
22:13:20  32  -- step by 4
22:13:20  33  ,clse-lg4 d04
22:13:20  34  ,lg4-lg8	d48
22:13:20  35  ,lg8-lg12 d812
22:13:20  36  ,lg6-lg12 d612
22:13:20  37  ,lg12-lg18 d1218
22:13:20  38  --
22:13:20  39  ,ABS(clse-lg1)dc1
22:13:20  40  ,ABS(clse-lg2)dc2
22:13:20  41  ,ABS(clse-lg3)dc3
22:13:20  42  ,ABS(clse-lg4)dc4
22:13:20  43  ,ABS(clse-lg5)dc5
22:13:20  44  ,ABS(clse-lg6)dc6
22:13:20  45  ,ABS(clse-lg7)dc7
22:13:20  46  ,ABS(clse-lg8)dc8
22:13:20  47  ,ABS(clse-lg9)dc9
22:13:20  48  ,ABS(clse-lg12)dc12
22:13:20  49  ,ABS(clse-lg18)dc18
22:13:20  50  ,ABS(clse-lg24)dc24
22:13:20  51  ,ABS(clse-lg72)dc72
22:13:20  52  ,(ld4-clse) ug4
22:13:20  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
22:13:20  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
22:13:20  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
22:13:20  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
22:13:20  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:13:20  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
22:13:20  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:13:20  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
22:13:20  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:13:20  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:13:20  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
22:13:20  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:13:20  65  ,0+TO_CHAR(ydate,'D')d
22:13:20  66  ,0+TO_CHAR(ydate,'W')w
22:13:20  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:13:20  68  FROM q11
22:13:20  69  -- I dont want any NULL values from the LAG() functions:
22:13:20  70  WHERE lg72 > 0
22:13:20  71  ORDER BY pair,ydate
22:13:20  72  /

Table created.

Elapsed: 00:00:01.72
22:13:22 SQL> 
22:13:22 SQL> -- rpt
22:13:22 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9418
	-1	   10537

Elapsed: 00:00:00.04
22:13:22 SQL> 
22:13:22 SQL> -- Calc gains and ntiles
22:13:22 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
22:13:22 SQL> CREATE TABLE q15 COMPRESS AS
22:13:22   2  SELECT
22:13:22   3  pair
22:13:22   4  ,ydate
22:13:22   5  ,prdate -- Should be unique
22:13:22   6  ,trend -- +1 or -1
22:13:22   7  ,dc12 -- next statement needs this
22:13:22   8  -- Use NTILE() to derive some attributes
22:13:22   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
22:13:22  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
22:13:22  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
22:13:22  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
22:13:22  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
22:13:22  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
22:13:22  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
22:13:22  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
22:13:22  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
22:13:22  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
22:13:22  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
22:13:22  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
22:13:22  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
22:13:22  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
22:13:22  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
22:13:22  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
22:13:22  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
22:13:22  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
22:13:22  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
22:13:22  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
22:13:22  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
22:13:22  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
22:13:22  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
22:13:22  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
22:13:22  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
22:13:22  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
22:13:22  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
22:13:22  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
22:13:22  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:13:22  38  ,hh    att28
22:13:22  39  ,d     att29
22:13:22  40  ,w     att30
22:13:22  41  ,mpm   att31
22:13:22  42  ,trend att32
22:13:22  43  ,ug4 g4
22:13:22  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
22:13:22  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
22:13:22  46  FROM q13
22:13:22  47  ORDER BY pair,ydate
22:13:22  48  /

Table created.

Elapsed: 00:00:03.94
22:13:26 SQL> 
22:13:26 SQL> -- rpt
22:13:26 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
22:13:26   2  GROUP BY pair,trend,gatt,gattn
22:13:26   3  ORDER BY pair,trend,gatt,gattn
22:13:26   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000036614	    2581    .043915528
usd_chf 	-1 nup up  -.00292377	    3837    .058106097
usd_chf 	-1 up  nup .002709814	    4119    -.12075309
usd_chf 	 1 nup nup 9.7675E-06	    2237    .021856194
usd_chf 	 1 nup up  -.00253855	    3879	.11346
usd_chf 	 1 up  nup .002446858	    3254    -.16376016
usd_chf 	 1			       0

7 rows selected.

Elapsed: 00:00:00.05
22:13:26 SQL> 
22:13:26 SQL> -- rpt
22:13:26 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-17 21:55:00

Elapsed: 00:00:00.01
22:13:26 SQL> 
22:13:26 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
22:13:26 SQL> CREATE TABLE modsrc COMPRESS AS
22:13:26   2  SELECT
22:13:26   3  pair
22:13:26   4  ,ydate
22:13:26   5  ,prdate
22:13:26   6  ,trend
22:13:26   7  ,g4
22:13:26   8  ,gatt
22:13:26   9  ,gattn
22:13:26  10  ,dc12
22:13:26  11  FROM q15
22:13:26  12  /

Table created.

Elapsed: 00:00:00.09
22:13:26 SQL> 
22:13:26 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.28
22:13:27 SQL> 
22:13:27 SQL> -- rpt
22:13:27 SQL> 
22:13:27 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20819

Elapsed: 00:00:00.34
22:13:27 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.01
22:13:27 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.00
22:13:27 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.01
22:13:27 SQL> 
22:13:27 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
22:13:27   2  GROUP BY pair,trend,gatt,gattn
22:13:27   3  ORDER BY pair,trend,gatt,gattn
22:13:27   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000036614	    2581    .043915528
usd_chf 	-1 nup up  -.00292377	    3837    .058106097
usd_chf 	-1 up  nup .002709814	    4119    -.12075309
usd_chf 	 1 nup nup 9.7675E-06	    2237    .021856194
usd_chf 	 1 nup up  -.00253855	    3879	.11346
usd_chf 	 1 up  nup .002446858	    3254    -.16376016
usd_chf 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
22:13:27 SQL> 
22:13:27 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
22:13:27 SQL> CREATE TABLE chf_ms10 COMPRESS AS
22:13:27   2  SELECT
22:13:27   3  ydate
22:13:27   4  ,trend chf_trend
22:13:27   5  ,g4    chf_g4
22:13:27   6  ,gatt  chf_gatt
22:13:27   7  ,gattn chf_gattn
22:13:27   8  FROM modsrc
22:13:27   9  /

Table created.

Elapsed: 00:00:00.06
22:13:27 SQL> 
22:13:27 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
22:13:27 SQL> 
22:13:27 SQL> -- rpt
22:13:27 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-15 02:05:01 2010-12-17 21:55:00	 9370	  -.0176     .01365
	-1 2010-09-13 21:15:01 2010-12-17 13:50:00	10537	  -.0166      .0149

Elapsed: 00:00:00.02
22:13:27 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-15 02:05:01 2010-12-17 21:55:00	       9418	 -.0176      .01365
	-1 2010-09-13 21:15:01 2010-12-17 13:50:00	      10537	 -.0166       .0149

Elapsed: 00:00:00.02
22:13:27 SQL> 
22:13:27 SQL> -- I need a copy of q15 attributes
22:13:27 SQL> 
22:13:27 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.03
22:13:27 SQL> CREATE TABLE chf_att COMPRESS AS
22:13:27   2  SELECT
22:13:27   3  ydate
22:13:27   4  ,att00 chf_att00
22:13:27   5  ,att01 chf_att01
22:13:27   6  ,att02 chf_att02
22:13:27   7  ,att03 chf_att03
22:13:27   8  ,att04 chf_att04
22:13:27   9  ,att05 chf_att05
22:13:27  10  ,att06 chf_att06
22:13:27  11  ,att07 chf_att07
22:13:27  12  ,att08 chf_att08
22:13:27  13  ,att09 chf_att09
22:13:27  14  ,att10 chf_att10
22:13:27  15  ,att11 chf_att11
22:13:27  16  ,att12 chf_att12
22:13:27  17  ,att13 chf_att13
22:13:27  18  ,att14 chf_att14
22:13:27  19  ,att15 chf_att15
22:13:27  20  ,att16 chf_att16
22:13:27  21  ,att17 chf_att17
22:13:27  22  ,att18 chf_att18
22:13:27  23  ,att19 chf_att19
22:13:27  24  ,att20 chf_att20
22:13:27  25  ,att21 chf_att21
22:13:27  26  ,att22 chf_att22
22:13:27  27  ,att23 chf_att23
22:13:27  28  ,att24 chf_att24
22:13:27  29  ,att25 chf_att25
22:13:27  30  ,att26 chf_att26
22:13:27  31  ,att27 chf_att27
22:13:27  32  ,att28 chf_att28
22:13:27  33  ,att29 chf_att29
22:13:27  34  ,att30 chf_att30
22:13:27  35  ,att31 chf_att31
22:13:27  36  ,att32 chf_att32
22:13:27  37  FROM q15
22:13:27  38  /

Table created.

Elapsed: 00:00:00.14
22:13:28 SQL> 
22:13:28 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
22:13:28 SQL> 
22:13:28 SQL> -- rpt
22:13:28 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19955

Elapsed: 00:00:00.00
22:13:28 SQL> 
22:13:28 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
