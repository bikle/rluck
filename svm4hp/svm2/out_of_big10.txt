
SQL*Plus: Release 11.2.0.1.0 Production on Fri Dec 17 21:59:33 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

21:59:33 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
21:59:33 SQL> 21:59:33 SQL> --
21:59:33 SQL> -- eur10.sql
21:59:33 SQL> --
21:59:33 SQL> 
21:59:33 SQL> -- Creates views and tables for backtesting a forex SVM strategy
21:59:33 SQL> 
21:59:33 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.01
21:59:33 SQL> 
21:59:33 SQL> -- I created di5min here:
21:59:33 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
21:59:33 SQL> 
21:59:33 SQL> CREATE OR REPLACE VIEW q11 AS
21:59:33   2  SELECT
21:59:33   3  pair
21:59:33   4  ,ydate
21:59:33   5  ,prdate
21:59:33   6  ,rownum rnum -- acts as t in my time-series
21:59:33   7  ,clse
21:59:33   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
21:59:33   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
21:59:33  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
21:59:33  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
21:59:33  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
21:59:33  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
21:59:33  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
21:59:33  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
21:59:33  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
21:59:33  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
21:59:33  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
21:59:33  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
21:59:33  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
21:59:33  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
21:59:33  22  FROM di5min WHERE pair LIKE'%eur%'
21:59:33  23  ORDER BY ydate
21:59:33  24  /

View created.

Elapsed: 00:00:00.05
21:59:33 SQL> 
21:59:33 SQL> -- rpt
21:59:33 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20822

Elapsed: 00:00:00.37
21:59:34 SQL> 
21:59:34 SQL> -- Calc deltas and gains
21:59:34 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.04
21:59:34 SQL> 
21:59:34 SQL> CREATE TABLE q13 COMPRESS AS
21:59:34   2  SELECT
21:59:34   3  pair
21:59:34   4  ,ydate
21:59:34   5  ,prdate
21:59:34   6  ,rnum
21:59:34   7  ,lg4
21:59:34   8  ,lg8
21:59:34   9  ,lg12
21:59:34  10  ,ld4
21:59:34  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
21:59:34  12  -- step by 1
21:59:34  13  ,clse-lg1 d01
21:59:34  14  ,lg1-lg2	d12
21:59:34  15  ,lg2-lg3	d23
21:59:34  16  ,lg3-lg4	d34
21:59:34  17  ,lg4-lg5	d45
21:59:34  18  ,lg5-lg6	d56
21:59:34  19  ,lg6-lg7	d67
21:59:34  20  ,lg7-lg8	d78
21:59:34  21  ,lg8-lg9	d89
21:59:34  22  -- step by 2
21:59:34  23  ,clse-lg2 d02
21:59:34  24  ,lg2-lg4 d24
21:59:34  25  ,lg4-lg6 d46
21:59:34  26  ,lg6-lg8 d68
21:59:34  27  -- step by 3
21:59:34  28  ,clse-lg3 d03
21:59:34  29  ,lg3-lg6	d36
21:59:34  30  ,lg6-lg9	d69
21:59:34  31  ,lg9-lg12 d912
21:59:34  32  -- step by 4
21:59:34  33  ,clse-lg4 d04
21:59:34  34  ,lg4-lg8	d48
21:59:34  35  ,lg8-lg12 d812
21:59:34  36  ,lg6-lg12 d612
21:59:34  37  ,lg12-lg18 d1218
21:59:34  38  --
21:59:34  39  ,ABS(clse-lg1)dc1
21:59:34  40  ,ABS(clse-lg2)dc2
21:59:34  41  ,ABS(clse-lg3)dc3
21:59:34  42  ,ABS(clse-lg4)dc4
21:59:34  43  ,ABS(clse-lg5)dc5
21:59:34  44  ,ABS(clse-lg6)dc6
21:59:34  45  ,ABS(clse-lg7)dc7
21:59:34  46  ,ABS(clse-lg8)dc8
21:59:34  47  ,ABS(clse-lg9)dc9
21:59:34  48  ,ABS(clse-lg12)dc12
21:59:34  49  ,ABS(clse-lg18)dc18
21:59:34  50  ,ABS(clse-lg24)dc24
21:59:34  51  ,ABS(clse-lg72)dc72
21:59:34  52  ,(ld4-clse) ug4
21:59:34  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
21:59:34  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
21:59:34  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
21:59:34  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
21:59:34  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
21:59:34  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
21:59:34  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
21:59:34  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
21:59:34  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
21:59:34  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
21:59:34  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
21:59:34  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
21:59:34  65  ,0+TO_CHAR(ydate,'D')d
21:59:34  66  ,0+TO_CHAR(ydate,'W')w
21:59:34  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
21:59:34  68  FROM q11
21:59:34  69  -- I dont want any NULL values from the LAG() functions:
21:59:34  70  WHERE lg72 > 0
21:59:34  71  ORDER BY pair,ydate
21:59:34  72  /

Table created.

Elapsed: 00:00:01.99
21:59:36 SQL> 
21:59:36 SQL> -- rpt
21:59:36 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10183
	-1	    9775

Elapsed: 00:00:00.02
21:59:36 SQL> 
21:59:36 SQL> -- Calc gains and ntiles
21:59:36 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.03
21:59:36 SQL> CREATE TABLE q15 COMPRESS AS
21:59:36   2  SELECT
21:59:36   3  pair
21:59:36   4  ,ydate
21:59:36   5  ,prdate -- Should be unique
21:59:36   6  ,trend -- +1 or -1
21:59:36   7  ,dc12 -- next statement needs this
21:59:36   8  -- Use NTILE() to derive some attributes
21:59:36   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
21:59:36  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
21:59:36  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
21:59:36  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
21:59:36  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
21:59:36  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
21:59:36  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
21:59:36  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
21:59:36  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
21:59:36  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
21:59:36  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
21:59:36  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
21:59:36  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
21:59:36  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
21:59:36  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
21:59:36  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
21:59:36  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
21:59:36  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
21:59:36  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
21:59:36  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
21:59:36  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
21:59:36  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
21:59:36  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
21:59:36  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
21:59:36  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
21:59:36  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
21:59:36  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
21:59:36  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
21:59:36  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
21:59:36  38  ,hh    att28
21:59:36  39  ,d     att29
21:59:36  40  ,w     att30
21:59:36  41  ,mpm   att31
21:59:36  42  ,trend att32
21:59:36  43  ,ug4 g4
21:59:36  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
21:59:36  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
21:59:36  46  FROM q13
21:59:36  47  ORDER BY pair,ydate
21:59:36  48  /

Table created.

Elapsed: 00:00:04.04
21:59:40 SQL> 
21:59:40 SQL> -- rpt
21:59:40 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
21:59:40   2  GROUP BY pair,trend,gatt,gattn
21:59:40   3  ORDER BY pair,trend,gatt,gattn
21:59:40   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001529	    1452    .041522066
eur_usd 	-1 nup up  -.00365153	    4054    .155643414
eur_usd 	-1 up  nup  .00361377	    4221    -.20597775
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000011329	    1697    .040231363
eur_usd 	 1 nup up  -.00352051	    4229      .1048509
eur_usd 	 1 up  nup .003735941	    4257    -.13864838

7 rows selected.

Elapsed: 00:00:00.04
21:59:40 SQL> 
21:59:40 SQL> -- rpt
21:59:40 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-17 21:50:00

Elapsed: 00:00:00.01
21:59:40 SQL> 
21:59:40 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.04
21:59:40 SQL> CREATE TABLE modsrc COMPRESS AS
21:59:40   2  SELECT
21:59:40   3  pair
21:59:40   4  ,ydate
21:59:40   5  ,prdate
21:59:40   6  ,trend
21:59:40   7  ,g4
21:59:40   8  ,gatt
21:59:40   9  ,gattn
21:59:40  10  ,dc12
21:59:40  11  FROM q15
21:59:40  12  /

Table created.

Elapsed: 00:00:00.09
21:59:40 SQL> 
21:59:40 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.23
21:59:40 SQL> 
21:59:40 SQL> -- rpt
21:59:40 SQL> 
21:59:40 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.35
21:59:41 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
21:59:41 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
21:59:41 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
21:59:41 SQL> 
21:59:41 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
21:59:41   2  GROUP BY pair,trend,gatt,gattn
21:59:41   3  ORDER BY pair,trend,gatt,gattn
21:59:41   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001529	    1452    .041522066
eur_usd 	-1 nup up  -.00365153	    4054    .155643414
eur_usd 	-1 up  nup  .00361377	    4221    -.20597775
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000011329	    1697    .040231363
eur_usd 	 1 nup up  -.00352051	    4229      .1048509
eur_usd 	 1 up  nup .003735941	    4257    -.13864838

7 rows selected.

Elapsed: 00:00:00.02
21:59:41 SQL> 
21:59:41 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
21:59:41 SQL> CREATE TABLE eur_ms10 COMPRESS AS
21:59:41   2  SELECT
21:59:41   3  ydate
21:59:41   4  ,trend eur_trend
21:59:41   5  ,g4    eur_g4
21:59:41   6  ,gatt  eur_gatt
21:59:41   7  ,gattn eur_gattn
21:59:41   8  FROM modsrc
21:59:41   9  /

Table created.

Elapsed: 00:00:00.16
21:59:41 SQL> 
21:59:41 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
21:59:41 SQL> 
21:59:41 SQL> -- rpt
21:59:41 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 21:00:01 2010-12-17 13:05:00	10183	-.015675      .0165
	-1 2010-09-14 03:40:01 2010-12-17 21:50:00	 9727	  -.0164      .0167

Elapsed: 00:00:00.02
21:59:41 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 21:00:01 2010-12-17 13:05:00	      10183    -.015675       .0165
	-1 2010-09-14 03:40:01 2010-12-17 21:50:00	       9775	 -.0164       .0167

Elapsed: 00:00:00.02
21:59:41 SQL> 
21:59:41 SQL> -- I need a copy of q15 attributes
21:59:41 SQL> 
21:59:41 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.04
21:59:41 SQL> CREATE TABLE eur_att COMPRESS AS
21:59:41   2  SELECT
21:59:41   3  ydate
21:59:41   4  ,att00 eur_att00
21:59:41   5  ,att01 eur_att01
21:59:41   6  ,att02 eur_att02
21:59:41   7  ,att03 eur_att03
21:59:41   8  ,att04 eur_att04
21:59:41   9  ,att05 eur_att05
21:59:41  10  ,att06 eur_att06
21:59:41  11  ,att07 eur_att07
21:59:41  12  ,att08 eur_att08
21:59:41  13  ,att09 eur_att09
21:59:41  14  ,att10 eur_att10
21:59:41  15  ,att11 eur_att11
21:59:41  16  ,att12 eur_att12
21:59:41  17  ,att13 eur_att13
21:59:41  18  ,att14 eur_att14
21:59:41  19  ,att15 eur_att15
21:59:41  20  ,att16 eur_att16
21:59:41  21  ,att17 eur_att17
21:59:41  22  ,att18 eur_att18
21:59:41  23  ,att19 eur_att19
21:59:41  24  ,att20 eur_att20
21:59:41  25  ,att21 eur_att21
21:59:41  26  ,att22 eur_att22
21:59:41  27  ,att23 eur_att23
21:59:41  28  ,att24 eur_att24
21:59:41  29  ,att25 eur_att25
21:59:41  30  ,att26 eur_att26
21:59:41  31  ,att27 eur_att27
21:59:41  32  ,att28 eur_att28
21:59:41  33  ,att29 eur_att29
21:59:41  34  ,att30 eur_att30
21:59:41  35  ,att31 eur_att31
21:59:41  36  ,att32 eur_att32
21:59:41  37  FROM q15
21:59:41  38  /

Table created.

Elapsed: 00:00:00.16
21:59:41 SQL> 
21:59:41 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.39
21:59:42 SQL> 
21:59:42 SQL> -- rpt
21:59:42 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.01
21:59:42 SQL> 
21:59:42 SQL> --
21:59:42 SQL> -- aud10.sql
21:59:42 SQL> --
21:59:42 SQL> 
21:59:42 SQL> -- Creates views and tables for backtesting a forex SVM strategy
21:59:42 SQL> 
21:59:42 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.30
21:59:42 SQL> 
21:59:42 SQL> -- I created di5min here:
21:59:42 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
21:59:42 SQL> 
21:59:42 SQL> CREATE OR REPLACE VIEW q11 AS
21:59:42   2  SELECT
21:59:42   3  pair
21:59:42   4  ,ydate
21:59:42   5  ,prdate
21:59:42   6  ,rownum rnum -- acts as t in my time-series
21:59:42   7  ,clse
21:59:42   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
21:59:42   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
21:59:42  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
21:59:42  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
21:59:42  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
21:59:42  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
21:59:42  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
21:59:42  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
21:59:42  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
21:59:42  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
21:59:42  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
21:59:42  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
21:59:42  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
21:59:42  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
21:59:42  22  FROM di5min WHERE pair LIKE'%aud%'
21:59:42  23  ORDER BY ydate
21:59:42  24  /

View created.

Elapsed: 00:00:00.04
21:59:42 SQL> 
21:59:42 SQL> -- rpt
21:59:42 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20819

Elapsed: 00:00:00.37
21:59:42 SQL> 
21:59:42 SQL> -- Calc deltas and gains
21:59:42 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.23
21:59:43 SQL> 
21:59:43 SQL> CREATE TABLE q13 COMPRESS AS
21:59:43   2  SELECT
21:59:43   3  pair
21:59:43   4  ,ydate
21:59:43   5  ,prdate
21:59:43   6  ,rnum
21:59:43   7  ,lg4
21:59:43   8  ,lg8
21:59:43   9  ,lg12
21:59:43  10  ,ld4
21:59:43  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
21:59:43  12  -- step by 1
21:59:43  13  ,clse-lg1 d01
21:59:43  14  ,lg1-lg2	d12
21:59:43  15  ,lg2-lg3	d23
21:59:43  16  ,lg3-lg4	d34
21:59:43  17  ,lg4-lg5	d45
21:59:43  18  ,lg5-lg6	d56
21:59:43  19  ,lg6-lg7	d67
21:59:43  20  ,lg7-lg8	d78
21:59:43  21  ,lg8-lg9	d89
21:59:43  22  -- step by 2
21:59:43  23  ,clse-lg2 d02
21:59:43  24  ,lg2-lg4 d24
21:59:43  25  ,lg4-lg6 d46
21:59:43  26  ,lg6-lg8 d68
21:59:43  27  -- step by 3
21:59:43  28  ,clse-lg3 d03
21:59:43  29  ,lg3-lg6	d36
21:59:43  30  ,lg6-lg9	d69
21:59:43  31  ,lg9-lg12 d912
21:59:43  32  -- step by 4
21:59:43  33  ,clse-lg4 d04
21:59:43  34  ,lg4-lg8	d48
21:59:43  35  ,lg8-lg12 d812
21:59:43  36  ,lg6-lg12 d612
21:59:43  37  ,lg12-lg18 d1218
21:59:43  38  --
21:59:43  39  ,ABS(clse-lg1)dc1
21:59:43  40  ,ABS(clse-lg2)dc2
21:59:43  41  ,ABS(clse-lg3)dc3
21:59:43  42  ,ABS(clse-lg4)dc4
21:59:43  43  ,ABS(clse-lg5)dc5
21:59:43  44  ,ABS(clse-lg6)dc6
21:59:43  45  ,ABS(clse-lg7)dc7
21:59:43  46  ,ABS(clse-lg8)dc8
21:59:43  47  ,ABS(clse-lg9)dc9
21:59:43  48  ,ABS(clse-lg12)dc12
21:59:43  49  ,ABS(clse-lg18)dc18
21:59:43  50  ,ABS(clse-lg24)dc24
21:59:43  51  ,ABS(clse-lg72)dc72
21:59:43  52  ,(ld4-clse) ug4
21:59:43  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
21:59:43  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
21:59:43  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
21:59:43  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
21:59:43  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
21:59:43  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
21:59:43  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
21:59:43  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
21:59:43  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
21:59:43  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
21:59:43  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
21:59:43  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
21:59:43  65  ,0+TO_CHAR(ydate,'D')d
21:59:43  66  ,0+TO_CHAR(ydate,'W')w
21:59:43  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
21:59:43  68  FROM q11
21:59:43  69  -- I dont want any NULL values from the LAG() functions:
21:59:43  70  WHERE lg72 > 0
21:59:43  71  ORDER BY pair,ydate
21:59:43  72  /

Table created.

Elapsed: 00:00:01.71
21:59:44 SQL> 
21:59:44 SQL> -- rpt
21:59:44 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10319
	-1	    9636

Elapsed: 00:00:00.03
21:59:44 SQL> 
21:59:44 SQL> -- Calc gains and ntiles
21:59:44 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
21:59:45 SQL> CREATE TABLE q15 COMPRESS AS
21:59:45   2  SELECT
21:59:45   3  pair
21:59:45   4  ,ydate
21:59:45   5  ,prdate -- Should be unique
21:59:45   6  ,trend -- +1 or -1
21:59:45   7  ,dc12 -- next statement needs this
21:59:45   8  -- Use NTILE() to derive some attributes
21:59:45   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
21:59:45  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
21:59:45  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
21:59:45  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
21:59:45  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
21:59:45  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
21:59:45  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
21:59:45  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
21:59:45  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
21:59:45  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
21:59:45  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
21:59:45  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
21:59:45  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
21:59:45  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
21:59:45  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
21:59:45  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
21:59:45  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
21:59:45  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
21:59:45  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
21:59:45  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
21:59:45  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
21:59:45  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
21:59:45  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
21:59:45  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
21:59:45  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
21:59:45  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
21:59:45  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
21:59:45  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
21:59:45  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
21:59:45  38  ,hh    att28
21:59:45  39  ,d     att29
21:59:45  40  ,w     att30
21:59:45  41  ,mpm   att31
21:59:45  42  ,trend att32
21:59:45  43  ,ug4 g4
21:59:45  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
21:59:45  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
21:59:45  46  FROM q13
21:59:45  47  ORDER BY pair,ydate
21:59:45  48  /

Table created.

Elapsed: 00:00:04.00
21:59:49 SQL> 
21:59:49 SQL> -- rpt
21:59:49 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
21:59:49   2  GROUP BY pair,trend,gatt,gattn
21:59:49   3  ORDER BY pair,trend,gatt,gattn
21:59:49   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000029919	    1550    -.03916318
aud_usd 	-1 nup up  -.00317206	    3635    .000090517
aud_usd 	-1 up  nup .002975805	    4408    .027132024
aud_usd 	-1			       0
aud_usd 	 1 nup nup 1.2533E-06	    1895    .017464771
aud_usd 	 1 nup up  -.00289564	    4096     .05339143
aud_usd 	 1 up  nup  .00296577	    4323    -.17636016
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
21:59:49 SQL> 
21:59:49 SQL> -- rpt
21:59:49 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-17 21:50:00

Elapsed: 00:00:00.01
21:59:49 SQL> 
21:59:49 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
21:59:49 SQL> CREATE TABLE modsrc COMPRESS AS
21:59:49   2  SELECT
21:59:49   3  pair
21:59:49   4  ,ydate
21:59:49   5  ,prdate
21:59:49   6  ,trend
21:59:49   7  ,g4
21:59:49   8  ,gatt
21:59:49   9  ,gattn
21:59:49  10  ,dc12
21:59:49  11  FROM q15
21:59:49  12  /

Table created.

Elapsed: 00:00:00.08
21:59:49 SQL> 
21:59:49 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
21:59:49 SQL> 
21:59:49 SQL> -- rpt
21:59:49 SQL> 
21:59:49 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20819

Elapsed: 00:00:00.35
21:59:49 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.01
21:59:49 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.01
21:59:49 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.00
21:59:49 SQL> 
21:59:49 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
21:59:49   2  GROUP BY pair,trend,gatt,gattn
21:59:49   3  ORDER BY pair,trend,gatt,gattn
21:59:49   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000029919	    1550    -.03916318
aud_usd 	-1 nup up  -.00317206	    3635    .000090517
aud_usd 	-1 up  nup .002975805	    4408    .027132024
aud_usd 	-1			       0
aud_usd 	 1 nup nup 1.2533E-06	    1895    .017464771
aud_usd 	 1 nup up  -.00289564	    4096     .05339143
aud_usd 	 1 up  nup  .00296577	    4323    -.17636016
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
21:59:49 SQL> 
21:59:49 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
21:59:49 SQL> CREATE TABLE aud_ms10 COMPRESS AS
21:59:49   2  SELECT
21:59:49   3  ydate
21:59:49   4  ,trend aud_trend
21:59:49   5  ,g4    aud_g4
21:59:49   6  ,gatt  aud_gatt
21:59:49   7  ,gattn aud_gattn
21:59:49   8  FROM modsrc
21:59:49   9  /

Table created.

Elapsed: 00:00:00.19
21:59:50 SQL> 
21:59:50 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.36
21:59:50 SQL> 
21:59:50 SQL> -- rpt
21:59:50 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 21:00:01 2010-12-17 20:45:00	10314	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-17 21:50:00	 9593	   -.017      .0131

Elapsed: 00:00:00.02
21:59:50 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 21:00:01 2010-12-17 20:45:00	      10319	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-17 21:50:00	       9636	  -.017       .0131

Elapsed: 00:00:00.02
21:59:50 SQL> 
21:59:50 SQL> -- I need a copy of q15 attributes
21:59:50 SQL> 
21:59:50 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.24
21:59:50 SQL> CREATE TABLE aud_att COMPRESS AS
21:59:50   2  SELECT
21:59:50   3  ydate
21:59:50   4  ,att00 aud_att00
21:59:50   5  ,att01 aud_att01
21:59:50   6  ,att02 aud_att02
21:59:50   7  ,att03 aud_att03
21:59:50   8  ,att04 aud_att04
21:59:50   9  ,att05 aud_att05
21:59:50  10  ,att06 aud_att06
21:59:50  11  ,att07 aud_att07
21:59:50  12  ,att08 aud_att08
21:59:50  13  ,att09 aud_att09
21:59:50  14  ,att10 aud_att10
21:59:50  15  ,att11 aud_att11
21:59:50  16  ,att12 aud_att12
21:59:50  17  ,att13 aud_att13
21:59:50  18  ,att14 aud_att14
21:59:50  19  ,att15 aud_att15
21:59:50  20  ,att16 aud_att16
21:59:50  21  ,att17 aud_att17
21:59:50  22  ,att18 aud_att18
21:59:50  23  ,att19 aud_att19
21:59:50  24  ,att20 aud_att20
21:59:50  25  ,att21 aud_att21
21:59:50  26  ,att22 aud_att22
21:59:50  27  ,att23 aud_att23
21:59:50  28  ,att24 aud_att24
21:59:50  29  ,att25 aud_att25
21:59:50  30  ,att26 aud_att26
21:59:50  31  ,att27 aud_att27
21:59:50  32  ,att28 aud_att28
21:59:50  33  ,att29 aud_att29
21:59:50  34  ,att30 aud_att30
21:59:50  35  ,att31 aud_att31
21:59:50  36  ,att32 aud_att32
21:59:50  37  FROM q15
21:59:50  38  /

Table created.

Elapsed: 00:00:00.28
21:59:51 SQL> 
21:59:51 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.46
21:59:51 SQL> 
21:59:51 SQL> -- rpt
21:59:51 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19955

Elapsed: 00:00:00.00
21:59:51 SQL> 
21:59:51 SQL> --
21:59:51 SQL> -- gbp10.sql
21:59:51 SQL> --
21:59:51 SQL> 
21:59:51 SQL> -- Creates views and tables for backtesting a forex SVM strategy
21:59:51 SQL> 
21:59:51 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.42
21:59:51 SQL> 
21:59:51 SQL> -- I created di5min here:
21:59:51 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
21:59:51 SQL> 
21:59:51 SQL> CREATE OR REPLACE VIEW q11 AS
21:59:51   2  SELECT
21:59:51   3  pair
21:59:51   4  ,ydate
21:59:51   5  ,prdate
21:59:51   6  ,rownum rnum -- acts as t in my time-series
21:59:51   7  ,clse
21:59:51   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
21:59:51   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
21:59:51  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
21:59:51  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
21:59:51  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
21:59:51  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
21:59:51  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
21:59:51  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
21:59:51  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
21:59:51  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
21:59:51  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
21:59:51  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
21:59:51  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
21:59:51  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
21:59:51  22  FROM di5min WHERE pair LIKE'%gbp%'
21:59:51  23  ORDER BY ydate
21:59:51  24  /

View created.

Elapsed: 00:00:00.04
21:59:52 SQL> 
21:59:52 SQL> -- rpt
21:59:52 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20821

Elapsed: 00:00:00.37
21:59:52 SQL> 
21:59:52 SQL> -- Calc deltas and gains
21:59:52 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.18
21:59:52 SQL> 
21:59:52 SQL> CREATE TABLE q13 COMPRESS AS
21:59:52   2  SELECT
21:59:52   3  pair
21:59:52   4  ,ydate
21:59:52   5  ,prdate
21:59:52   6  ,rnum
21:59:52   7  ,lg4
21:59:52   8  ,lg8
21:59:52   9  ,lg12
21:59:52  10  ,ld4
21:59:52  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
21:59:52  12  -- step by 1
21:59:52  13  ,clse-lg1 d01
21:59:52  14  ,lg1-lg2	d12
21:59:52  15  ,lg2-lg3	d23
21:59:52  16  ,lg3-lg4	d34
21:59:52  17  ,lg4-lg5	d45
21:59:52  18  ,lg5-lg6	d56
21:59:52  19  ,lg6-lg7	d67
21:59:52  20  ,lg7-lg8	d78
21:59:52  21  ,lg8-lg9	d89
21:59:52  22  -- step by 2
21:59:52  23  ,clse-lg2 d02
21:59:52  24  ,lg2-lg4 d24
21:59:52  25  ,lg4-lg6 d46
21:59:52  26  ,lg6-lg8 d68
21:59:52  27  -- step by 3
21:59:52  28  ,clse-lg3 d03
21:59:52  29  ,lg3-lg6	d36
21:59:52  30  ,lg6-lg9	d69
21:59:52  31  ,lg9-lg12 d912
21:59:52  32  -- step by 4
21:59:52  33  ,clse-lg4 d04
21:59:52  34  ,lg4-lg8	d48
21:59:52  35  ,lg8-lg12 d812
21:59:52  36  ,lg6-lg12 d612
21:59:52  37  ,lg12-lg18 d1218
21:59:52  38  --
21:59:52  39  ,ABS(clse-lg1)dc1
21:59:52  40  ,ABS(clse-lg2)dc2
21:59:52  41  ,ABS(clse-lg3)dc3
21:59:52  42  ,ABS(clse-lg4)dc4
21:59:52  43  ,ABS(clse-lg5)dc5
21:59:52  44  ,ABS(clse-lg6)dc6
21:59:52  45  ,ABS(clse-lg7)dc7
21:59:52  46  ,ABS(clse-lg8)dc8
21:59:52  47  ,ABS(clse-lg9)dc9
21:59:52  48  ,ABS(clse-lg12)dc12
21:59:52  49  ,ABS(clse-lg18)dc18
21:59:52  50  ,ABS(clse-lg24)dc24
21:59:52  51  ,ABS(clse-lg72)dc72
21:59:52  52  ,(ld4-clse) ug4
21:59:52  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
21:59:52  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
21:59:52  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
21:59:52  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
21:59:52  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
21:59:52  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
21:59:52  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
21:59:52  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
21:59:52  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
21:59:52  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
21:59:52  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
21:59:52  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
21:59:52  65  ,0+TO_CHAR(ydate,'D')d
21:59:52  66  ,0+TO_CHAR(ydate,'W')w
21:59:52  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
21:59:52  68  FROM q11
21:59:52  69  -- I dont want any NULL values from the LAG() functions:
21:59:52  70  WHERE lg72 > 0
21:59:52  71  ORDER BY pair,ydate
21:59:52  72  /

Table created.

Elapsed: 00:00:01.76
21:59:54 SQL> 
21:59:54 SQL> -- rpt
21:59:54 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9651
	-1	   10306

Elapsed: 00:00:00.03
21:59:54 SQL> 
21:59:54 SQL> -- Calc gains and ntiles
21:59:54 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.18
21:59:54 SQL> CREATE TABLE q15 COMPRESS AS
21:59:54   2  SELECT
21:59:54   3  pair
21:59:54   4  ,ydate
21:59:54   5  ,prdate -- Should be unique
21:59:54   6  ,trend -- +1 or -1
21:59:54   7  ,dc12 -- next statement needs this
21:59:54   8  -- Use NTILE() to derive some attributes
21:59:54   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
21:59:54  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
21:59:54  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
21:59:54  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
21:59:54  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
21:59:54  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
21:59:54  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
21:59:54  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
21:59:54  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
21:59:54  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
21:59:54  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
21:59:54  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
21:59:54  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
21:59:54  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
21:59:54  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
21:59:54  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
21:59:54  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
21:59:54  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
21:59:54  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
21:59:54  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
21:59:54  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
21:59:54  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
21:59:54  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
21:59:54  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
21:59:54  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
21:59:54  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
21:59:54  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
21:59:54  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
21:59:54  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
21:59:54  38  ,hh    att28
21:59:54  39  ,d     att29
21:59:54  40  ,w     att30
21:59:54  41  ,mpm   att31
21:59:54  42  ,trend att32
21:59:54  43  ,ug4 g4
21:59:54  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
21:59:54  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
21:59:54  46  FROM q13
21:59:54  47  ORDER BY pair,ydate
21:59:54  48  /

Table created.

Elapsed: 00:00:04.39
21:59:58 SQL> 
21:59:58 SQL> -- rpt
21:59:58 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
21:59:58   2  GROUP BY pair,trend,gatt,gattn
21:59:58   3  ORDER BY pair,trend,gatt,gattn
21:59:58   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -1.187E-06	    1812     .05932405
gbp_usd 	-1 nup up  -.00334962	    4084    -.00156165
gbp_usd 	-1 up  nup .003121601	    4362    -.08803205
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup .000014682	    1650    .009141743
gbp_usd 	 1 nup up  -.00320098	    4122    .009597508
gbp_usd 	 1 up  nup .003543993	    3879    -.16652449

7 rows selected.

Elapsed: 00:00:00.05
21:59:58 SQL> 
21:59:58 SQL> -- rpt
21:59:58 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-17 21:50:00

Elapsed: 00:00:00.01
21:59:58 SQL> 
21:59:58 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
21:59:59 SQL> CREATE TABLE modsrc COMPRESS AS
21:59:59   2  SELECT
21:59:59   3  pair
21:59:59   4  ,ydate
21:59:59   5  ,prdate
21:59:59   6  ,trend
21:59:59   7  ,g4
21:59:59   8  ,gatt
21:59:59   9  ,gattn
21:59:59  10  ,dc12
21:59:59  11  FROM q15
21:59:59  12  /

Table created.

Elapsed: 00:00:00.09
21:59:59 SQL> 
21:59:59 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
21:59:59 SQL> 
21:59:59 SQL> -- rpt
21:59:59 SQL> 
21:59:59 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.38
21:59:59 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
21:59:59 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
21:59:59 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
21:59:59 SQL> 
21:59:59 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
21:59:59   2  GROUP BY pair,trend,gatt,gattn
21:59:59   3  ORDER BY pair,trend,gatt,gattn
21:59:59   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -1.187E-06	    1812     .05932405
gbp_usd 	-1 nup up  -.00334962	    4084    -.00156165
gbp_usd 	-1 up  nup .003121601	    4362    -.08803205
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup .000014682	    1650    .009141743
gbp_usd 	 1 nup up  -.00320098	    4122    .009597508
gbp_usd 	 1 up  nup .003543993	    3879    -.16652449

7 rows selected.

Elapsed: 00:00:00.02
21:59:59 SQL> 
21:59:59 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
21:59:59 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
21:59:59   2  SELECT
21:59:59   3  ydate
21:59:59   4  ,trend gbp_trend
21:59:59   5  ,g4    gbp_g4
21:59:59   6  ,gatt  gbp_gatt
21:59:59   7  ,gattn gbp_gattn
21:59:59   8  FROM modsrc
21:59:59   9  /

Table created.

Elapsed: 00:00:00.08
21:59:59 SQL> 
21:59:59 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
22:00:00 SQL> 
22:00:00 SQL> -- rpt
22:00:00 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 22:00:01 2010-12-17 10:20:00	 9651	  -.0194      .0179
	-1 2010-09-13 21:00:01 2010-12-17 21:50:00	10258	  -.0153      .0159

Elapsed: 00:00:00.02
22:00:00 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 22:00:01 2010-12-17 10:20:00	       9651	 -.0194       .0179
	-1 2010-09-13 21:00:01 2010-12-17 21:50:00	      10306	 -.0153       .0159

Elapsed: 00:00:00.01
22:00:00 SQL> 
22:00:00 SQL> -- I need a copy of q15 attributes
22:00:00 SQL> 
22:00:00 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.03
22:00:00 SQL> CREATE TABLE gbp_att COMPRESS AS
22:00:00   2  SELECT
22:00:00   3  ydate
22:00:00   4  ,att00 gbp_att00
22:00:00   5  ,att01 gbp_att01
22:00:00   6  ,att02 gbp_att02
22:00:00   7  ,att03 gbp_att03
22:00:00   8  ,att04 gbp_att04
22:00:00   9  ,att05 gbp_att05
22:00:00  10  ,att06 gbp_att06
22:00:00  11  ,att07 gbp_att07
22:00:00  12  ,att08 gbp_att08
22:00:00  13  ,att09 gbp_att09
22:00:00  14  ,att10 gbp_att10
22:00:00  15  ,att11 gbp_att11
22:00:00  16  ,att12 gbp_att12
22:00:00  17  ,att13 gbp_att13
22:00:00  18  ,att14 gbp_att14
22:00:00  19  ,att15 gbp_att15
22:00:00  20  ,att16 gbp_att16
22:00:00  21  ,att17 gbp_att17
22:00:00  22  ,att18 gbp_att18
22:00:00  23  ,att19 gbp_att19
22:00:00  24  ,att20 gbp_att20
22:00:00  25  ,att21 gbp_att21
22:00:00  26  ,att22 gbp_att22
22:00:00  27  ,att23 gbp_att23
22:00:00  28  ,att24 gbp_att24
22:00:00  29  ,att25 gbp_att25
22:00:00  30  ,att26 gbp_att26
22:00:00  31  ,att27 gbp_att27
22:00:00  32  ,att28 gbp_att28
22:00:00  33  ,att29 gbp_att29
22:00:00  34  ,att30 gbp_att30
22:00:00  35  ,att31 gbp_att31
22:00:00  36  ,att32 gbp_att32
22:00:00  37  FROM q15
22:00:00  38  /

Table created.

Elapsed: 00:00:00.15
22:00:00 SQL> 
22:00:00 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
22:00:00 SQL> 
22:00:00 SQL> -- rpt
22:00:00 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.01
22:00:00 SQL> 
22:00:00 SQL> --
22:00:00 SQL> -- jpy10.sql
22:00:00 SQL> --
22:00:00 SQL> 
22:00:00 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:00:00 SQL> 
22:00:00 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.42
22:00:01 SQL> 
22:00:01 SQL> -- I created di5min here:
22:00:01 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
22:00:01 SQL> 
22:00:01 SQL> CREATE OR REPLACE VIEW q11 AS
22:00:01   2  SELECT
22:00:01   3  pair
22:00:01   4  ,ydate
22:00:01   5  ,prdate
22:00:01   6  ,rownum rnum -- acts as t in my time-series
22:00:01   7  ,clse
22:00:01   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
22:00:01   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
22:00:01  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
22:00:01  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
22:00:01  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
22:00:01  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
22:00:01  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
22:00:01  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
22:00:01  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
22:00:01  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
22:00:01  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
22:00:01  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
22:00:01  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
22:00:01  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
22:00:01  22  FROM di5min WHERE pair LIKE'%jpy%'
22:00:01  23  ORDER BY ydate
22:00:01  24  /

View created.

Elapsed: 00:00:00.03
22:00:01 SQL> 
22:00:01 SQL> -- rpt
22:00:01 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20822

Elapsed: 00:00:00.35
22:00:01 SQL> 
22:00:01 SQL> -- Calc deltas and gains
22:00:01 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.19
22:00:01 SQL> 
22:00:01 SQL> CREATE TABLE q13 COMPRESS AS
22:00:01   2  SELECT
22:00:01   3  pair
22:00:01   4  ,ydate
22:00:01   5  ,prdate
22:00:01   6  ,rnum
22:00:01   7  ,lg4
22:00:01   8  ,lg8
22:00:01   9  ,lg12
22:00:01  10  ,ld4
22:00:01  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
22:00:01  12  -- step by 1
22:00:01  13  ,clse-lg1 d01
22:00:01  14  ,lg1-lg2	d12
22:00:01  15  ,lg2-lg3	d23
22:00:01  16  ,lg3-lg4	d34
22:00:01  17  ,lg4-lg5	d45
22:00:01  18  ,lg5-lg6	d56
22:00:01  19  ,lg6-lg7	d67
22:00:01  20  ,lg7-lg8	d78
22:00:01  21  ,lg8-lg9	d89
22:00:01  22  -- step by 2
22:00:01  23  ,clse-lg2 d02
22:00:01  24  ,lg2-lg4 d24
22:00:01  25  ,lg4-lg6 d46
22:00:01  26  ,lg6-lg8 d68
22:00:01  27  -- step by 3
22:00:01  28  ,clse-lg3 d03
22:00:01  29  ,lg3-lg6	d36
22:00:01  30  ,lg6-lg9	d69
22:00:01  31  ,lg9-lg12 d912
22:00:01  32  -- step by 4
22:00:01  33  ,clse-lg4 d04
22:00:01  34  ,lg4-lg8	d48
22:00:01  35  ,lg8-lg12 d812
22:00:01  36  ,lg6-lg12 d612
22:00:01  37  ,lg12-lg18 d1218
22:00:01  38  --
22:00:01  39  ,ABS(clse-lg1)dc1
22:00:01  40  ,ABS(clse-lg2)dc2
22:00:01  41  ,ABS(clse-lg3)dc3
22:00:01  42  ,ABS(clse-lg4)dc4
22:00:01  43  ,ABS(clse-lg5)dc5
22:00:01  44  ,ABS(clse-lg6)dc6
22:00:01  45  ,ABS(clse-lg7)dc7
22:00:01  46  ,ABS(clse-lg8)dc8
22:00:01  47  ,ABS(clse-lg9)dc9
22:00:01  48  ,ABS(clse-lg12)dc12
22:00:01  49  ,ABS(clse-lg18)dc18
22:00:01  50  ,ABS(clse-lg24)dc24
22:00:01  51  ,ABS(clse-lg72)dc72
22:00:01  52  ,(ld4-clse) ug4
22:00:01  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
22:00:01  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
22:00:01  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
22:00:01  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
22:00:01  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:00:01  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
22:00:01  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:00:01  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
22:00:01  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:00:01  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:00:01  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
22:00:01  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:00:01  65  ,0+TO_CHAR(ydate,'D')d
22:00:01  66  ,0+TO_CHAR(ydate,'W')w
22:00:01  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:00:01  68  FROM q11
22:00:01  69  -- I dont want any NULL values from the LAG() functions:
22:00:01  70  WHERE lg72 > 0
22:00:01  71  ORDER BY pair,ydate
22:00:01  72  /

Table created.

Elapsed: 00:00:01.71
22:00:03 SQL> 
22:00:03 SQL> -- rpt
22:00:03 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9319
	-1	   10639

Elapsed: 00:00:00.02
22:00:03 SQL> 
22:00:03 SQL> -- Calc gains and ntiles
22:00:03 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
22:00:03 SQL> CREATE TABLE q15 COMPRESS AS
22:00:03   2  SELECT
22:00:03   3  pair
22:00:03   4  ,ydate
22:00:03   5  ,prdate -- Should be unique
22:00:03   6  ,trend -- +1 or -1
22:00:03   7  ,dc12 -- next statement needs this
22:00:03   8  -- Use NTILE() to derive some attributes
22:00:03   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
22:00:03  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
22:00:03  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
22:00:03  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
22:00:03  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
22:00:03  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
22:00:03  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
22:00:03  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
22:00:03  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
22:00:03  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
22:00:03  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
22:00:03  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
22:00:03  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
22:00:03  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
22:00:03  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
22:00:03  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
22:00:03  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
22:00:03  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
22:00:03  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
22:00:03  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
22:00:03  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
22:00:03  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
22:00:03  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
22:00:03  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
22:00:03  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
22:00:03  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
22:00:03  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
22:00:03  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
22:00:03  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:00:03  38  ,hh    att28
22:00:03  39  ,d     att29
22:00:03  40  ,w     att30
22:00:03  41  ,mpm   att31
22:00:03  42  ,trend att32
22:00:03  43  ,ug4 g4
22:00:03  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
22:00:03  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
22:00:03  46  FROM q13
22:00:03  47  ORDER BY pair,ydate
22:00:03  48  /

Table created.

Elapsed: 00:00:04.13
22:00:07 SQL> 
22:00:07 SQL> -- rpt
22:00:07 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
22:00:07   2  GROUP BY pair,trend,gatt,gattn
22:00:07   3  ORDER BY pair,trend,gatt,gattn
22:00:07   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     176
usd_jpy 	-1 nup up  -.13465969	    5135    .019927537
usd_jpy 	-1 up  nup .143255135	    5307    .057857429
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up   -.1348491	    5020    -.01352436
usd_jpy 	 1 up  nup .152197929	    4105    .184589759
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
22:00:07 SQL> 
22:00:07 SQL> -- rpt
22:00:07 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-17 21:50:00

Elapsed: 00:00:00.02
22:00:07 SQL> 
22:00:07 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
22:00:07 SQL> CREATE TABLE modsrc COMPRESS AS
22:00:07   2  SELECT
22:00:07   3  pair
22:00:07   4  ,ydate
22:00:07   5  ,prdate
22:00:07   6  ,trend
22:00:07   7  ,g4
22:00:07   8  ,gatt
22:00:07   9  ,gattn
22:00:07  10  ,dc12
22:00:07  11  FROM q15
22:00:07  12  /

Table created.

Elapsed: 00:00:00.09
22:00:08 SQL> 
22:00:08 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
22:00:08 SQL> 
22:00:08 SQL> -- rpt
22:00:08 SQL> 
22:00:08 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.35
22:00:08 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
22:00:08 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
22:00:08 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
22:00:08 SQL> 
22:00:08 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
22:00:08   2  GROUP BY pair,trend,gatt,gattn
22:00:08   3  ORDER BY pair,trend,gatt,gattn
22:00:08   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     176
usd_jpy 	-1 nup up  -.13465969	    5135    .019927537
usd_jpy 	-1 up  nup .143255135	    5307    .057857429
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up   -.1348491	    5020    -.01352436
usd_jpy 	 1 up  nup .152197929	    4105    .184589759
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
22:00:08 SQL> 
22:00:08 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
22:00:08 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
22:00:08   2  SELECT
22:00:08   3  ydate
22:00:08   4  ,trend jpy_trend
22:00:08   5  ,g4    jpy_g4
22:00:08   6  ,gatt  jpy_gatt
22:00:08   7  ,gattn jpy_gattn
22:00:08   8  FROM modsrc
22:00:08   9  /

Table created.

Elapsed: 00:00:00.06
22:00:08 SQL> 
22:00:08 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.14
22:00:08 SQL> 
22:00:08 SQL> -- rpt
22:00:08 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 05:55:01 2010-12-17 21:50:00	 9292	   -1.07	1.5
	-1 2010-09-13 21:00:01 2010-12-17 20:55:00	10618	 -1.0775       1.99

Elapsed: 00:00:00.02
22:00:08 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 05:55:01 2010-12-17 21:50:00	       9319	  -1.07 	1.5
	-1 2010-09-13 21:00:01 2010-12-17 20:55:00	      10639	-1.0775        1.99

Elapsed: 00:00:00.01
22:00:08 SQL> 
22:00:08 SQL> -- I need a copy of q15 attributes
22:00:08 SQL> 
22:00:08 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.04
22:00:08 SQL> CREATE TABLE jpy_att COMPRESS AS
22:00:08   2  SELECT
22:00:08   3  ydate
22:00:08   4  ,att00 jpy_att00
22:00:08   5  ,att01 jpy_att01
22:00:08   6  ,att02 jpy_att02
22:00:08   7  ,att03 jpy_att03
22:00:08   8  ,att04 jpy_att04
22:00:08   9  ,att05 jpy_att05
22:00:08  10  ,att06 jpy_att06
22:00:08  11  ,att07 jpy_att07
22:00:08  12  ,att08 jpy_att08
22:00:08  13  ,att09 jpy_att09
22:00:08  14  ,att10 jpy_att10
22:00:08  15  ,att11 jpy_att11
22:00:08  16  ,att12 jpy_att12
22:00:08  17  ,att13 jpy_att13
22:00:08  18  ,att14 jpy_att14
22:00:08  19  ,att15 jpy_att15
22:00:08  20  ,att16 jpy_att16
22:00:08  21  ,att17 jpy_att17
22:00:08  22  ,att18 jpy_att18
22:00:08  23  ,att19 jpy_att19
22:00:08  24  ,att20 jpy_att20
22:00:08  25  ,att21 jpy_att21
22:00:08  26  ,att22 jpy_att22
22:00:08  27  ,att23 jpy_att23
22:00:08  28  ,att24 jpy_att24
22:00:08  29  ,att25 jpy_att25
22:00:08  30  ,att26 jpy_att26
22:00:08  31  ,att27 jpy_att27
22:00:08  32  ,att28 jpy_att28
22:00:08  33  ,att29 jpy_att29
22:00:08  34  ,att30 jpy_att30
22:00:08  35  ,att31 jpy_att31
22:00:08  36  ,att32 jpy_att32
22:00:08  37  FROM q15
22:00:08  38  /

Table created.

Elapsed: 00:00:00.13
22:00:09 SQL> 
22:00:09 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
22:00:09 SQL> 
22:00:09 SQL> -- rpt
22:00:09 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.00
22:00:09 SQL> 
22:00:09 SQL> --
22:00:09 SQL> -- cad10.sql
22:00:09 SQL> --
22:00:09 SQL> 
22:00:09 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:00:09 SQL> 
22:00:09 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.32
22:00:09 SQL> 
22:00:09 SQL> -- I created di5min here:
22:00:09 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
22:00:09 SQL> 
22:00:09 SQL> CREATE OR REPLACE VIEW q11 AS
22:00:09   2  SELECT
22:00:09   3  pair
22:00:09   4  ,ydate
22:00:09   5  ,prdate
22:00:09   6  ,rownum rnum -- acts as t in my time-series
22:00:09   7  ,clse
22:00:09   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
22:00:09   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
22:00:09  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
22:00:09  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
22:00:09  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
22:00:09  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
22:00:09  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
22:00:09  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
22:00:09  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
22:00:09  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
22:00:09  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
22:00:09  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
22:00:09  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
22:00:09  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
22:00:09  22  FROM di5min WHERE pair LIKE'%cad%'
22:00:09  23  ORDER BY ydate
22:00:09  24  /

View created.

Elapsed: 00:00:00.03
22:00:09 SQL> 
22:00:09 SQL> -- rpt
22:00:09 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20818

Elapsed: 00:00:00.39
22:00:10 SQL> 
22:00:10 SQL> -- Calc deltas and gains
22:00:10 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.23
22:00:10 SQL> 
22:00:10 SQL> CREATE TABLE q13 COMPRESS AS
22:00:10   2  SELECT
22:00:10   3  pair
22:00:10   4  ,ydate
22:00:10   5  ,prdate
22:00:10   6  ,rnum
22:00:10   7  ,lg4
22:00:10   8  ,lg8
22:00:10   9  ,lg12
22:00:10  10  ,ld4
22:00:10  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
22:00:10  12  -- step by 1
22:00:10  13  ,clse-lg1 d01
22:00:10  14  ,lg1-lg2	d12
22:00:10  15  ,lg2-lg3	d23
22:00:10  16  ,lg3-lg4	d34
22:00:10  17  ,lg4-lg5	d45
22:00:10  18  ,lg5-lg6	d56
22:00:10  19  ,lg6-lg7	d67
22:00:10  20  ,lg7-lg8	d78
22:00:10  21  ,lg8-lg9	d89
22:00:10  22  -- step by 2
22:00:10  23  ,clse-lg2 d02
22:00:10  24  ,lg2-lg4 d24
22:00:10  25  ,lg4-lg6 d46
22:00:10  26  ,lg6-lg8 d68
22:00:10  27  -- step by 3
22:00:10  28  ,clse-lg3 d03
22:00:10  29  ,lg3-lg6	d36
22:00:10  30  ,lg6-lg9	d69
22:00:10  31  ,lg9-lg12 d912
22:00:10  32  -- step by 4
22:00:10  33  ,clse-lg4 d04
22:00:10  34  ,lg4-lg8	d48
22:00:10  35  ,lg8-lg12 d812
22:00:10  36  ,lg6-lg12 d612
22:00:10  37  ,lg12-lg18 d1218
22:00:10  38  --
22:00:10  39  ,ABS(clse-lg1)dc1
22:00:10  40  ,ABS(clse-lg2)dc2
22:00:10  41  ,ABS(clse-lg3)dc3
22:00:10  42  ,ABS(clse-lg4)dc4
22:00:10  43  ,ABS(clse-lg5)dc5
22:00:10  44  ,ABS(clse-lg6)dc6
22:00:10  45  ,ABS(clse-lg7)dc7
22:00:10  46  ,ABS(clse-lg8)dc8
22:00:10  47  ,ABS(clse-lg9)dc9
22:00:10  48  ,ABS(clse-lg12)dc12
22:00:10  49  ,ABS(clse-lg18)dc18
22:00:10  50  ,ABS(clse-lg24)dc24
22:00:10  51  ,ABS(clse-lg72)dc72
22:00:10  52  ,(ld4-clse) ug4
22:00:10  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
22:00:10  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
22:00:10  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
22:00:10  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
22:00:10  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:00:10  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
22:00:10  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:00:10  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
22:00:10  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:00:10  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:00:10  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
22:00:10  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:00:10  65  ,0+TO_CHAR(ydate,'D')d
22:00:10  66  ,0+TO_CHAR(ydate,'W')w
22:00:10  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:00:10  68  FROM q11
22:00:10  69  -- I dont want any NULL values from the LAG() functions:
22:00:10  70  WHERE lg72 > 0
22:00:10  71  ORDER BY pair,ydate
22:00:10  72  /

Table created.

Elapsed: 00:00:01.72
22:00:12 SQL> 
22:00:12 SQL> -- rpt
22:00:12 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9184
	-1	   10770

Elapsed: 00:00:00.04
22:00:12 SQL> 
22:00:12 SQL> -- Calc gains and ntiles
22:00:12 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.19
22:00:12 SQL> CREATE TABLE q15 COMPRESS AS
22:00:12   2  SELECT
22:00:12   3  pair
22:00:12   4  ,ydate
22:00:12   5  ,prdate -- Should be unique
22:00:12   6  ,trend -- +1 or -1
22:00:12   7  ,dc12 -- next statement needs this
22:00:12   8  -- Use NTILE() to derive some attributes
22:00:12   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
22:00:12  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
22:00:12  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
22:00:12  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
22:00:12  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
22:00:12  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
22:00:12  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
22:00:12  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
22:00:12  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
22:00:12  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
22:00:12  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
22:00:12  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
22:00:12  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
22:00:12  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
22:00:12  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
22:00:12  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
22:00:12  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
22:00:12  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
22:00:12  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
22:00:12  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
22:00:12  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
22:00:12  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
22:00:12  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
22:00:12  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
22:00:12  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
22:00:12  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
22:00:12  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
22:00:12  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
22:00:12  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:00:12  38  ,hh    att28
22:00:12  39  ,d     att29
22:00:12  40  ,w     att30
22:00:12  41  ,mpm   att31
22:00:12  42  ,trend att32
22:00:12  43  ,ug4 g4
22:00:12  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
22:00:12  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
22:00:12  46  FROM q13
22:00:12  47  ORDER BY pair,ydate
22:00:12  48  /

Table created.

Elapsed: 00:00:03.98
22:00:16 SQL> 
22:00:16 SQL> -- rpt
22:00:16 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
22:00:16   2  GROUP BY pair,trend,gatt,gattn
22:00:16   3  ORDER BY pair,trend,gatt,gattn
22:00:16   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup  -.0000027	    2982    .015497003
usd_cad 	-1 nup up  -.00227221	    3950    .057642004
usd_cad 	-1 up  nup .002396059	    3838    .006630123
usd_cad 	 1 nup nup -.00001763	    2118     -.0613625
usd_cad 	 1 nup up  -.00236422	    3865      .0023038
usd_cad 	 1 up  nup .002597336	    3153    -.00390778
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
22:00:16 SQL> 
22:00:16 SQL> -- rpt
22:00:16 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-17 21:50:00

Elapsed: 00:00:00.01
22:00:16 SQL> 
22:00:16 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.17
22:00:16 SQL> CREATE TABLE modsrc COMPRESS AS
22:00:16   2  SELECT
22:00:16   3  pair
22:00:16   4  ,ydate
22:00:16   5  ,prdate
22:00:16   6  ,trend
22:00:16   7  ,g4
22:00:16   8  ,gatt
22:00:16   9  ,gattn
22:00:16  10  ,dc12
22:00:16  11  FROM q15
22:00:16  12  /

Table created.

Elapsed: 00:00:00.08
22:00:16 SQL> 
22:00:16 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
22:00:16 SQL> 
22:00:16 SQL> -- rpt
22:00:16 SQL> 
22:00:16 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20818

Elapsed: 00:00:00.35
22:00:17 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.01
22:00:17 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.00
22:00:17 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.00
22:00:17 SQL> 
22:00:17 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
22:00:17   2  GROUP BY pair,trend,gatt,gattn
22:00:17   3  ORDER BY pair,trend,gatt,gattn
22:00:17   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup  -.0000027	    2982    .015497003
usd_cad 	-1 nup up  -.00227221	    3950    .057642004
usd_cad 	-1 up  nup .002396059	    3838    .006630123
usd_cad 	 1 nup nup -.00001763	    2118     -.0613625
usd_cad 	 1 nup up  -.00236422	    3865      .0023038
usd_cad 	 1 up  nup .002597336	    3153    -.00390778
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.03
22:00:17 SQL> 
22:00:17 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
22:00:17 SQL> CREATE TABLE cad_ms10 COMPRESS AS
22:00:17   2  SELECT
22:00:17   3  ydate
22:00:17   4  ,trend cad_trend
22:00:17   5  ,g4    cad_g4
22:00:17   6  ,gatt  cad_gatt
22:00:17   7  ,gattn cad_gattn
22:00:17   8  FROM modsrc
22:00:17   9  /

Table created.

Elapsed: 00:00:00.07
22:00:17 SQL> 
22:00:17 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
22:00:17 SQL> 
22:00:17 SQL> -- rpt
22:00:17 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 00:30:01 2010-12-17 21:50:00	 9136	  -.0089      .0151
	-1 2010-09-13 21:00:01 2010-12-17 09:45:00	10770	  -.0107      .0147

Elapsed: 00:00:00.02
22:00:17 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 00:30:01 2010-12-17 21:50:00	       9184	 -.0089       .0151
	-1 2010-09-13 21:00:01 2010-12-17 09:45:00	      10770	 -.0107       .0147

Elapsed: 00:00:00.01
22:00:17 SQL> 
22:00:17 SQL> -- I need a copy of q15 attributes
22:00:17 SQL> 
22:00:17 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.04
22:00:17 SQL> CREATE TABLE cad_att COMPRESS AS
22:00:17   2  SELECT
22:00:17   3  ydate
22:00:17   4  ,att00 cad_att00
22:00:17   5  ,att01 cad_att01
22:00:17   6  ,att02 cad_att02
22:00:17   7  ,att03 cad_att03
22:00:17   8  ,att04 cad_att04
22:00:17   9  ,att05 cad_att05
22:00:17  10  ,att06 cad_att06
22:00:17  11  ,att07 cad_att07
22:00:17  12  ,att08 cad_att08
22:00:17  13  ,att09 cad_att09
22:00:17  14  ,att10 cad_att10
22:00:17  15  ,att11 cad_att11
22:00:17  16  ,att12 cad_att12
22:00:17  17  ,att13 cad_att13
22:00:17  18  ,att14 cad_att14
22:00:17  19  ,att15 cad_att15
22:00:17  20  ,att16 cad_att16
22:00:17  21  ,att17 cad_att17
22:00:17  22  ,att18 cad_att18
22:00:17  23  ,att19 cad_att19
22:00:17  24  ,att20 cad_att20
22:00:17  25  ,att21 cad_att21
22:00:17  26  ,att22 cad_att22
22:00:17  27  ,att23 cad_att23
22:00:17  28  ,att24 cad_att24
22:00:17  29  ,att25 cad_att25
22:00:17  30  ,att26 cad_att26
22:00:17  31  ,att27 cad_att27
22:00:17  32  ,att28 cad_att28
22:00:17  33  ,att29 cad_att29
22:00:17  34  ,att30 cad_att30
22:00:17  35  ,att31 cad_att31
22:00:17  36  ,att32 cad_att32
22:00:17  37  FROM q15
22:00:17  38  /

Table created.

Elapsed: 00:00:00.14
22:00:17 SQL> 
22:00:17 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
22:00:18 SQL> 
22:00:18 SQL> -- rpt
22:00:18 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19954

Elapsed: 00:00:00.00
22:00:18 SQL> 
22:00:18 SQL> --
22:00:18 SQL> -- chf10.sql
22:00:18 SQL> --
22:00:18 SQL> 
22:00:18 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:00:18 SQL> 
22:00:18 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
22:00:18 SQL> 
22:00:18 SQL> -- I created di5min here:
22:00:18 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
22:00:18 SQL> 
22:00:18 SQL> CREATE OR REPLACE VIEW q11 AS
22:00:18   2  SELECT
22:00:18   3  pair
22:00:18   4  ,ydate
22:00:18   5  ,prdate
22:00:18   6  ,rownum rnum -- acts as t in my time-series
22:00:18   7  ,clse
22:00:18   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
22:00:18   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
22:00:18  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
22:00:18  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
22:00:18  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
22:00:18  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
22:00:18  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
22:00:18  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
22:00:18  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
22:00:18  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
22:00:18  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
22:00:18  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
22:00:18  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
22:00:18  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
22:00:18  22  FROM di5min WHERE pair LIKE'%chf%'
22:00:18  23  ORDER BY ydate
22:00:18  24  /

View created.

Elapsed: 00:00:00.05
22:00:18 SQL> 
22:00:18 SQL> -- rpt
22:00:18 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20821

Elapsed: 00:00:00.39
22:00:18 SQL> 
22:00:18 SQL> -- Calc deltas and gains
22:00:18 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.23
22:00:19 SQL> 
22:00:19 SQL> CREATE TABLE q13 COMPRESS AS
22:00:19   2  SELECT
22:00:19   3  pair
22:00:19   4  ,ydate
22:00:19   5  ,prdate
22:00:19   6  ,rnum
22:00:19   7  ,lg4
22:00:19   8  ,lg8
22:00:19   9  ,lg12
22:00:19  10  ,ld4
22:00:19  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
22:00:19  12  -- step by 1
22:00:19  13  ,clse-lg1 d01
22:00:19  14  ,lg1-lg2	d12
22:00:19  15  ,lg2-lg3	d23
22:00:19  16  ,lg3-lg4	d34
22:00:19  17  ,lg4-lg5	d45
22:00:19  18  ,lg5-lg6	d56
22:00:19  19  ,lg6-lg7	d67
22:00:19  20  ,lg7-lg8	d78
22:00:19  21  ,lg8-lg9	d89
22:00:19  22  -- step by 2
22:00:19  23  ,clse-lg2 d02
22:00:19  24  ,lg2-lg4 d24
22:00:19  25  ,lg4-lg6 d46
22:00:19  26  ,lg6-lg8 d68
22:00:19  27  -- step by 3
22:00:19  28  ,clse-lg3 d03
22:00:19  29  ,lg3-lg6	d36
22:00:19  30  ,lg6-lg9	d69
22:00:19  31  ,lg9-lg12 d912
22:00:19  32  -- step by 4
22:00:19  33  ,clse-lg4 d04
22:00:19  34  ,lg4-lg8	d48
22:00:19  35  ,lg8-lg12 d812
22:00:19  36  ,lg6-lg12 d612
22:00:19  37  ,lg12-lg18 d1218
22:00:19  38  --
22:00:19  39  ,ABS(clse-lg1)dc1
22:00:19  40  ,ABS(clse-lg2)dc2
22:00:19  41  ,ABS(clse-lg3)dc3
22:00:19  42  ,ABS(clse-lg4)dc4
22:00:19  43  ,ABS(clse-lg5)dc5
22:00:19  44  ,ABS(clse-lg6)dc6
22:00:19  45  ,ABS(clse-lg7)dc7
22:00:19  46  ,ABS(clse-lg8)dc8
22:00:19  47  ,ABS(clse-lg9)dc9
22:00:19  48  ,ABS(clse-lg12)dc12
22:00:19  49  ,ABS(clse-lg18)dc18
22:00:19  50  ,ABS(clse-lg24)dc24
22:00:19  51  ,ABS(clse-lg72)dc72
22:00:19  52  ,(ld4-clse) ug4
22:00:19  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
22:00:19  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
22:00:19  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
22:00:19  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
22:00:19  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:00:19  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
22:00:19  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:00:19  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
22:00:19  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:00:19  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:00:19  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
22:00:19  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:00:19  65  ,0+TO_CHAR(ydate,'D')d
22:00:19  66  ,0+TO_CHAR(ydate,'W')w
22:00:19  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:00:19  68  FROM q11
22:00:19  69  -- I dont want any NULL values from the LAG() functions:
22:00:19  70  WHERE lg72 > 0
22:00:19  71  ORDER BY pair,ydate
22:00:19  72  /

Table created.

Elapsed: 00:00:01.77
22:00:20 SQL> 
22:00:20 SQL> -- rpt
22:00:20 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9417
	-1	   10540

Elapsed: 00:00:00.03
22:00:20 SQL> 
22:00:20 SQL> -- Calc gains and ntiles
22:00:20 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
22:00:21 SQL> CREATE TABLE q15 COMPRESS AS
22:00:21   2  SELECT
22:00:21   3  pair
22:00:21   4  ,ydate
22:00:21   5  ,prdate -- Should be unique
22:00:21   6  ,trend -- +1 or -1
22:00:21   7  ,dc12 -- next statement needs this
22:00:21   8  -- Use NTILE() to derive some attributes
22:00:21   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
22:00:21  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
22:00:21  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
22:00:21  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
22:00:21  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
22:00:21  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
22:00:21  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
22:00:21  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
22:00:21  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
22:00:21  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
22:00:21  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
22:00:21  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
22:00:21  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
22:00:21  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
22:00:21  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
22:00:21  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
22:00:21  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
22:00:21  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
22:00:21  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
22:00:21  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
22:00:21  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
22:00:21  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
22:00:21  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
22:00:21  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
22:00:21  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
22:00:21  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
22:00:21  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
22:00:21  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
22:00:21  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:00:21  38  ,hh    att28
22:00:21  39  ,d     att29
22:00:21  40  ,w     att30
22:00:21  41  ,mpm   att31
22:00:21  42  ,trend att32
22:00:21  43  ,ug4 g4
22:00:21  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
22:00:21  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
22:00:21  46  FROM q13
22:00:21  47  ORDER BY pair,ydate
22:00:21  48  /

Table created.

Elapsed: 00:00:03.97
22:00:25 SQL> 
22:00:25 SQL> -- rpt
22:00:25 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
22:00:25   2  GROUP BY pair,trend,gatt,gattn
22:00:25   3  ORDER BY pair,trend,gatt,gattn
22:00:25   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup  .00003721	    2584    .044860747
usd_chf 	-1 nup up  -.00292377	    3837    .058106097
usd_chf 	-1 up  nup .002709814	    4119    -.12075309
usd_chf 	 1 nup nup 9.7675E-06	    2237    .021856194
usd_chf 	 1 nup up  -.00253867	    3878    .113393158
usd_chf 	 1 up  nup .002446858	    3254    -.16376016
usd_chf 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
22:00:25 SQL> 
22:00:25 SQL> -- rpt
22:00:25 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-17 21:50:00

Elapsed: 00:00:00.01
22:00:25 SQL> 
22:00:25 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
22:00:25 SQL> CREATE TABLE modsrc COMPRESS AS
22:00:25   2  SELECT
22:00:25   3  pair
22:00:25   4  ,ydate
22:00:25   5  ,prdate
22:00:25   6  ,trend
22:00:25   7  ,g4
22:00:25   8  ,gatt
22:00:25   9  ,gattn
22:00:25  10  ,dc12
22:00:25  11  FROM q15
22:00:25  12  /

Table created.

Elapsed: 00:00:00.10
22:00:25 SQL> 
22:00:25 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.27
22:00:25 SQL> 
22:00:25 SQL> -- rpt
22:00:25 SQL> 
22:00:25 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.36
22:00:25 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
22:00:26 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
22:00:26 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
22:00:26 SQL> 
22:00:26 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
22:00:26   2  GROUP BY pair,trend,gatt,gattn
22:00:26   3  ORDER BY pair,trend,gatt,gattn
22:00:26   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup  .00003721	    2584    .044860747
usd_chf 	-1 nup up  -.00292377	    3837    .058106097
usd_chf 	-1 up  nup .002709814	    4119    -.12075309
usd_chf 	 1 nup nup 9.7675E-06	    2237    .021856194
usd_chf 	 1 nup up  -.00253867	    3878    .113393158
usd_chf 	 1 up  nup .002446858	    3254    -.16376016
usd_chf 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
22:00:26 SQL> 
22:00:26 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
22:00:26 SQL> CREATE TABLE chf_ms10 COMPRESS AS
22:00:26   2  SELECT
22:00:26   3  ydate
22:00:26   4  ,trend chf_trend
22:00:26   5  ,g4    chf_g4
22:00:26   6  ,gatt  chf_gatt
22:00:26   7  ,gattn chf_gattn
22:00:26   8  FROM modsrc
22:00:26   9  /

Table created.

Elapsed: 00:00:00.07
22:00:26 SQL> 
22:00:26 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.48
22:00:26 SQL> 
22:00:26 SQL> -- rpt
22:00:26 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-15 02:05:01 2010-12-17 21:50:00	 9369	  -.0176     .01365
	-1 2010-09-13 21:00:01 2010-12-17 13:50:00	10540	  -.0166      .0149

Elapsed: 00:00:00.02
22:00:26 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-15 02:05:01 2010-12-17 21:50:00	       9417	 -.0176      .01365
	-1 2010-09-13 21:00:01 2010-12-17 13:50:00	      10540	 -.0166       .0149

Elapsed: 00:00:00.02
22:00:26 SQL> 
22:00:26 SQL> -- I need a copy of q15 attributes
22:00:26 SQL> 
22:00:26 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.11
22:00:26 SQL> CREATE TABLE chf_att COMPRESS AS
22:00:26   2  SELECT
22:00:26   3  ydate
22:00:26   4  ,att00 chf_att00
22:00:26   5  ,att01 chf_att01
22:00:26   6  ,att02 chf_att02
22:00:26   7  ,att03 chf_att03
22:00:26   8  ,att04 chf_att04
22:00:26   9  ,att05 chf_att05
22:00:26  10  ,att06 chf_att06
22:00:26  11  ,att07 chf_att07
22:00:26  12  ,att08 chf_att08
22:00:26  13  ,att09 chf_att09
22:00:26  14  ,att10 chf_att10
22:00:26  15  ,att11 chf_att11
22:00:26  16  ,att12 chf_att12
22:00:26  17  ,att13 chf_att13
22:00:26  18  ,att14 chf_att14
22:00:26  19  ,att15 chf_att15
22:00:26  20  ,att16 chf_att16
22:00:26  21  ,att17 chf_att17
22:00:26  22  ,att18 chf_att18
22:00:26  23  ,att19 chf_att19
22:00:26  24  ,att20 chf_att20
22:00:26  25  ,att21 chf_att21
22:00:26  26  ,att22 chf_att22
22:00:26  27  ,att23 chf_att23
22:00:26  28  ,att24 chf_att24
22:00:26  29  ,att25 chf_att25
22:00:26  30  ,att26 chf_att26
22:00:26  31  ,att27 chf_att27
22:00:26  32  ,att28 chf_att28
22:00:26  33  ,att29 chf_att29
22:00:26  34  ,att30 chf_att30
22:00:26  35  ,att31 chf_att31
22:00:26  36  ,att32 chf_att32
22:00:26  37  FROM q15
22:00:26  38  /

Table created.

Elapsed: 00:00:00.13
22:00:26 SQL> 
22:00:26 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.41
22:00:27 SQL> 
22:00:27 SQL> -- rpt
22:00:27 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.00
22:00:27 SQL> 
22:00:27 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
