
SQL*Plus: Release 11.2.0.1.0 Production on Fri Dec 17 03:39:39 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

03:39:39 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
03:39:39 SQL> 03:39:39 SQL> --
03:39:39 SQL> -- eur10.sql
03:39:39 SQL> --
03:39:39 SQL> 
03:39:39 SQL> -- Creates views and tables for backtesting a forex SVM strategy
03:39:39 SQL> 
03:39:39 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.01
03:39:39 SQL> 
03:39:39 SQL> -- I created di5min here:
03:39:39 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
03:39:39 SQL> 
03:39:39 SQL> CREATE OR REPLACE VIEW q11 AS
03:39:39   2  SELECT
03:39:39   3  pair
03:39:39   4  ,ydate
03:39:39   5  ,prdate
03:39:39   6  ,rownum rnum -- acts as t in my time-series
03:39:39   7  ,clse
03:39:39   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
03:39:39   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
03:39:39  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
03:39:39  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
03:39:39  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
03:39:39  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
03:39:39  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
03:39:39  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
03:39:39  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
03:39:39  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
03:39:39  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
03:39:39  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
03:39:39  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
03:39:39  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
03:39:39  22  FROM di5min WHERE pair LIKE'%eur%'
03:39:39  23  ORDER BY ydate
03:39:39  24  /

View created.

Elapsed: 00:00:00.05
03:39:39 SQL> 
03:39:39 SQL> -- rpt
03:39:39 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20822

Elapsed: 00:00:00.36
03:39:40 SQL> 
03:39:40 SQL> -- Calc deltas and gains
03:39:40 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.04
03:39:40 SQL> 
03:39:40 SQL> CREATE TABLE q13 COMPRESS AS
03:39:40   2  SELECT
03:39:40   3  pair
03:39:40   4  ,ydate
03:39:40   5  ,prdate
03:39:40   6  ,rnum
03:39:40   7  ,lg4
03:39:40   8  ,lg8
03:39:40   9  ,lg12
03:39:40  10  ,ld4
03:39:40  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
03:39:40  12  -- step by 1
03:39:40  13  ,clse-lg1 d01
03:39:40  14  ,lg1-lg2	d12
03:39:40  15  ,lg2-lg3	d23
03:39:40  16  ,lg3-lg4	d34
03:39:40  17  ,lg4-lg5	d45
03:39:40  18  ,lg5-lg6	d56
03:39:40  19  ,lg6-lg7	d67
03:39:40  20  ,lg7-lg8	d78
03:39:40  21  ,lg8-lg9	d89
03:39:40  22  -- step by 2
03:39:40  23  ,clse-lg2 d02
03:39:40  24  ,lg2-lg4 d24
03:39:40  25  ,lg4-lg6 d46
03:39:40  26  ,lg6-lg8 d68
03:39:40  27  -- step by 3
03:39:40  28  ,clse-lg3 d03
03:39:40  29  ,lg3-lg6	d36
03:39:40  30  ,lg6-lg9	d69
03:39:40  31  ,lg9-lg12 d912
03:39:40  32  -- step by 4
03:39:40  33  ,clse-lg4 d04
03:39:40  34  ,lg4-lg8	d48
03:39:40  35  ,lg8-lg12 d812
03:39:40  36  ,lg6-lg12 d612
03:39:40  37  ,lg12-lg18 d1218
03:39:40  38  --
03:39:40  39  ,ABS(clse-lg1)dc1
03:39:40  40  ,ABS(clse-lg2)dc2
03:39:40  41  ,ABS(clse-lg3)dc3
03:39:40  42  ,ABS(clse-lg4)dc4
03:39:40  43  ,ABS(clse-lg5)dc5
03:39:40  44  ,ABS(clse-lg6)dc6
03:39:40  45  ,ABS(clse-lg7)dc7
03:39:40  46  ,ABS(clse-lg8)dc8
03:39:40  47  ,ABS(clse-lg9)dc9
03:39:40  48  ,ABS(clse-lg12)dc12
03:39:40  49  ,ABS(clse-lg18)dc18
03:39:40  50  ,ABS(clse-lg24)dc24
03:39:40  51  ,ABS(clse-lg72)dc72
03:39:40  52  ,(ld4-clse) ug4
03:39:40  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
03:39:40  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
03:39:40  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
03:39:40  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
03:39:40  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
03:39:40  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
03:39:40  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
03:39:40  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
03:39:40  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
03:39:40  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
03:39:40  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
03:39:40  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
03:39:40  65  ,0+TO_CHAR(ydate,'D')d
03:39:40  66  ,0+TO_CHAR(ydate,'W')w
03:39:40  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
03:39:40  68  FROM q11
03:39:40  69  -- I dont want any NULL values from the LAG() functions:
03:39:40  70  WHERE lg72 > 0
03:39:40  71  ORDER BY pair,ydate
03:39:40  72  /

Table created.

Elapsed: 00:00:02.35
03:39:42 SQL> 
03:39:42 SQL> -- rpt
03:39:42 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10289
	-1	    9669

Elapsed: 00:00:00.03
03:39:42 SQL> 
03:39:42 SQL> -- Calc gains and ntiles
03:39:42 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.04
03:39:42 SQL> CREATE TABLE q15 COMPRESS AS
03:39:42   2  SELECT
03:39:42   3  pair
03:39:42   4  ,ydate
03:39:42   5  ,prdate -- Should be unique
03:39:42   6  ,trend -- +1 or -1
03:39:42   7  ,dc12 -- next statement needs this
03:39:42   8  -- Use NTILE() to derive some attributes
03:39:42   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
03:39:42  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
03:39:42  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
03:39:42  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
03:39:42  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
03:39:42  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
03:39:42  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
03:39:42  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
03:39:42  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
03:39:42  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
03:39:42  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
03:39:42  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
03:39:42  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
03:39:42  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
03:39:42  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
03:39:42  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
03:39:42  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
03:39:42  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
03:39:42  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
03:39:42  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
03:39:42  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
03:39:42  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
03:39:42  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
03:39:42  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
03:39:42  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
03:39:42  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
03:39:42  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
03:39:42  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
03:39:42  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
03:39:42  38  ,hh    att28
03:39:42  39  ,d     att29
03:39:42  40  ,w     att30
03:39:42  41  ,mpm   att31
03:39:42  42  ,trend att32
03:39:42  43  ,ug4 g4
03:39:42  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
03:39:42  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
03:39:42  46  FROM q13
03:39:42  47  ORDER BY pair,ydate
03:39:42  48  /

Table created.

Elapsed: 00:00:04.14
03:39:46 SQL> 
03:39:46 SQL> -- rpt
03:39:46 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
03:39:46   2  GROUP BY pair,trend,gatt,gattn
03:39:46   3  ORDER BY pair,trend,gatt,gattn
03:39:46   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003618277	    4187    -.20336225
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014031	    1739    .037041419
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003728408	    4306    -.14195879
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
03:39:46 SQL> 
03:39:46 SQL> -- rpt
03:39:46 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-17 03:30:00

Elapsed: 00:00:00.01
03:39:46 SQL> 
03:39:46 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.09
03:39:46 SQL> CREATE TABLE modsrc COMPRESS AS
03:39:46   2  SELECT
03:39:46   3  pair
03:39:46   4  ,ydate
03:39:46   5  ,prdate
03:39:46   6  ,trend
03:39:46   7  ,g4
03:39:46   8  ,gatt
03:39:46   9  ,gattn
03:39:46  10  ,dc12
03:39:46  11  FROM q15
03:39:46  12  /

Table created.

Elapsed: 00:00:00.09
03:39:46 SQL> 
03:39:46 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.27
03:39:47 SQL> 
03:39:47 SQL> -- rpt
03:39:47 SQL> 
03:39:47 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.35
03:39:47 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
03:39:47 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
03:39:47 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
03:39:47 SQL> 
03:39:47 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
03:39:47   2  GROUP BY pair,trend,gatt,gattn
03:39:47   3  ORDER BY pair,trend,gatt,gattn
03:39:47   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003618277	    4187    -.20336225
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014031	    1739    .037041419
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003728408	    4306    -.14195879
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
03:39:47 SQL> 
03:39:47 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.30
03:39:47 SQL> CREATE TABLE eur_ms10 COMPRESS AS
03:39:47   2  SELECT
03:39:47   3  ydate
03:39:47   4  ,trend eur_trend
03:39:47   5  ,g4    eur_g4
03:39:47   6  ,gatt  eur_gatt
03:39:47   7  ,gattn eur_gattn
03:39:47   8  FROM modsrc
03:39:47   9  /

Table created.

Elapsed: 00:00:00.07
03:39:47 SQL> 
03:39:47 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
03:39:48 SQL> 
03:39:48 SQL> -- rpt
03:39:48 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 02:40:01 2010-12-17 03:30:00	10248	  -.0153      .0165
	-1 2010-09-14 03:40:01 2010-12-17 00:50:00	 9662	  -.0164      .0167

Elapsed: 00:00:00.02
03:39:48 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 02:40:01 2010-12-17 03:30:00	      10289	 -.0153       .0165
	-1 2010-09-14 03:40:01 2010-12-17 00:50:00	       9669	 -.0164       .0167

Elapsed: 00:00:00.01
03:39:48 SQL> 
03:39:48 SQL> -- I need a copy of q15 attributes
03:39:48 SQL> 
03:39:48 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.11
03:39:48 SQL> CREATE TABLE eur_att COMPRESS AS
03:39:48   2  SELECT
03:39:48   3  ydate
03:39:48   4  ,att00 eur_att00
03:39:48   5  ,att01 eur_att01
03:39:48   6  ,att02 eur_att02
03:39:48   7  ,att03 eur_att03
03:39:48   8  ,att04 eur_att04
03:39:48   9  ,att05 eur_att05
03:39:48  10  ,att06 eur_att06
03:39:48  11  ,att07 eur_att07
03:39:48  12  ,att08 eur_att08
03:39:48  13  ,att09 eur_att09
03:39:48  14  ,att10 eur_att10
03:39:48  15  ,att11 eur_att11
03:39:48  16  ,att12 eur_att12
03:39:48  17  ,att13 eur_att13
03:39:48  18  ,att14 eur_att14
03:39:48  19  ,att15 eur_att15
03:39:48  20  ,att16 eur_att16
03:39:48  21  ,att17 eur_att17
03:39:48  22  ,att18 eur_att18
03:39:48  23  ,att19 eur_att19
03:39:48  24  ,att20 eur_att20
03:39:48  25  ,att21 eur_att21
03:39:48  26  ,att22 eur_att22
03:39:48  27  ,att23 eur_att23
03:39:48  28  ,att24 eur_att24
03:39:48  29  ,att25 eur_att25
03:39:48  30  ,att26 eur_att26
03:39:48  31  ,att27 eur_att27
03:39:48  32  ,att28 eur_att28
03:39:48  33  ,att29 eur_att29
03:39:48  34  ,att30 eur_att30
03:39:48  35  ,att31 eur_att31
03:39:48  36  ,att32 eur_att32
03:39:48  37  FROM q15
03:39:48  38  /

Table created.

Elapsed: 00:00:00.15
03:39:48 SQL> 
03:39:48 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
03:39:48 SQL> 
03:39:48 SQL> -- rpt
03:39:48 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.01
03:39:48 SQL> 
03:39:48 SQL> --
03:39:48 SQL> -- aud10.sql
03:39:48 SQL> --
03:39:48 SQL> 
03:39:48 SQL> -- Creates views and tables for backtesting a forex SVM strategy
03:39:48 SQL> 
03:39:48 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.53
03:39:49 SQL> 
03:39:49 SQL> -- I created di5min here:
03:39:49 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
03:39:49 SQL> 
03:39:49 SQL> CREATE OR REPLACE VIEW q11 AS
03:39:49   2  SELECT
03:39:49   3  pair
03:39:49   4  ,ydate
03:39:49   5  ,prdate
03:39:49   6  ,rownum rnum -- acts as t in my time-series
03:39:49   7  ,clse
03:39:49   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
03:39:49   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
03:39:49  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
03:39:49  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
03:39:49  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
03:39:49  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
03:39:49  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
03:39:49  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
03:39:49  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
03:39:49  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
03:39:49  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
03:39:49  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
03:39:49  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
03:39:49  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
03:39:49  22  FROM di5min WHERE pair LIKE'%aud%'
03:39:49  23  ORDER BY ydate
03:39:49  24  /

View created.

Elapsed: 00:00:00.04
03:39:49 SQL> 
03:39:49 SQL> -- rpt
03:39:49 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20819

Elapsed: 00:00:00.35
03:39:49 SQL> 
03:39:49 SQL> -- Calc deltas and gains
03:39:49 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.25
03:39:49 SQL> 
03:39:49 SQL> CREATE TABLE q13 COMPRESS AS
03:39:49   2  SELECT
03:39:49   3  pair
03:39:49   4  ,ydate
03:39:49   5  ,prdate
03:39:49   6  ,rnum
03:39:49   7  ,lg4
03:39:49   8  ,lg8
03:39:49   9  ,lg12
03:39:49  10  ,ld4
03:39:49  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
03:39:49  12  -- step by 1
03:39:49  13  ,clse-lg1 d01
03:39:49  14  ,lg1-lg2	d12
03:39:49  15  ,lg2-lg3	d23
03:39:49  16  ,lg3-lg4	d34
03:39:49  17  ,lg4-lg5	d45
03:39:49  18  ,lg5-lg6	d56
03:39:49  19  ,lg6-lg7	d67
03:39:49  20  ,lg7-lg8	d78
03:39:49  21  ,lg8-lg9	d89
03:39:49  22  -- step by 2
03:39:49  23  ,clse-lg2 d02
03:39:49  24  ,lg2-lg4 d24
03:39:49  25  ,lg4-lg6 d46
03:39:49  26  ,lg6-lg8 d68
03:39:49  27  -- step by 3
03:39:49  28  ,clse-lg3 d03
03:39:49  29  ,lg3-lg6	d36
03:39:49  30  ,lg6-lg9	d69
03:39:49  31  ,lg9-lg12 d912
03:39:49  32  -- step by 4
03:39:49  33  ,clse-lg4 d04
03:39:49  34  ,lg4-lg8	d48
03:39:49  35  ,lg8-lg12 d812
03:39:49  36  ,lg6-lg12 d612
03:39:49  37  ,lg12-lg18 d1218
03:39:49  38  --
03:39:49  39  ,ABS(clse-lg1)dc1
03:39:49  40  ,ABS(clse-lg2)dc2
03:39:49  41  ,ABS(clse-lg3)dc3
03:39:49  42  ,ABS(clse-lg4)dc4
03:39:49  43  ,ABS(clse-lg5)dc5
03:39:49  44  ,ABS(clse-lg6)dc6
03:39:49  45  ,ABS(clse-lg7)dc7
03:39:49  46  ,ABS(clse-lg8)dc8
03:39:49  47  ,ABS(clse-lg9)dc9
03:39:49  48  ,ABS(clse-lg12)dc12
03:39:49  49  ,ABS(clse-lg18)dc18
03:39:49  50  ,ABS(clse-lg24)dc24
03:39:49  51  ,ABS(clse-lg72)dc72
03:39:49  52  ,(ld4-clse) ug4
03:39:49  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
03:39:49  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
03:39:49  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
03:39:49  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
03:39:49  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
03:39:49  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
03:39:49  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
03:39:49  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
03:39:49  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
03:39:49  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
03:39:49  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
03:39:49  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
03:39:49  65  ,0+TO_CHAR(ydate,'D')d
03:39:49  66  ,0+TO_CHAR(ydate,'W')w
03:39:49  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
03:39:49  68  FROM q11
03:39:49  69  -- I dont want any NULL values from the LAG() functions:
03:39:49  70  WHERE lg72 > 0
03:39:49  71  ORDER BY pair,ydate
03:39:49  72  /

Table created.

Elapsed: 00:00:01.70
03:39:51 SQL> 
03:39:51 SQL> -- rpt
03:39:51 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10455
	-1	    9500

Elapsed: 00:00:00.03
03:39:51 SQL> 
03:39:51 SQL> -- Calc gains and ntiles
03:39:51 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
03:39:51 SQL> CREATE TABLE q15 COMPRESS AS
03:39:51   2  SELECT
03:39:51   3  pair
03:39:51   4  ,ydate
03:39:51   5  ,prdate -- Should be unique
03:39:51   6  ,trend -- +1 or -1
03:39:51   7  ,dc12 -- next statement needs this
03:39:51   8  -- Use NTILE() to derive some attributes
03:39:51   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
03:39:51  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
03:39:51  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
03:39:51  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
03:39:51  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
03:39:51  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
03:39:51  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
03:39:51  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
03:39:51  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
03:39:51  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
03:39:51  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
03:39:51  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
03:39:51  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
03:39:51  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
03:39:51  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
03:39:51  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
03:39:51  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
03:39:51  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
03:39:51  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
03:39:51  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
03:39:51  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
03:39:51  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
03:39:51  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
03:39:51  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
03:39:51  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
03:39:51  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
03:39:51  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
03:39:51  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
03:39:51  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
03:39:51  38  ,hh    att28
03:39:51  39  ,d     att29
03:39:51  40  ,w     att30
03:39:51  41  ,mpm   att31
03:39:51  42  ,trend att32
03:39:51  43  ,ug4 g4
03:39:51  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
03:39:51  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
03:39:51  46  FROM q13
03:39:51  47  ORDER BY pair,ydate
03:39:51  48  /

Table created.

Elapsed: 00:00:03.97
03:39:55 SQL> 
03:39:55 SQL> -- rpt
03:39:55 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
03:39:55   2  GROUP BY pair,trend,gatt,gattn
03:39:55   3  ORDER BY pair,trend,gatt,gattn
03:39:55   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002977146	    4368      .0266986
aud_usd 	 1 nup nup 2.8956E-06	    1934     .02248855
aud_usd 	 1 nup up  -.00289683	    4041    .052583093
aud_usd 	 1 up  nup  .00293781	    4432    -.17482582
aud_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
03:39:55 SQL> 
03:39:55 SQL> -- rpt
03:39:55 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-17 03:30:00

Elapsed: 00:00:00.01
03:39:55 SQL> 
03:39:55 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.21
03:39:56 SQL> CREATE TABLE modsrc COMPRESS AS
03:39:56   2  SELECT
03:39:56   3  pair
03:39:56   4  ,ydate
03:39:56   5  ,prdate
03:39:56   6  ,trend
03:39:56   7  ,g4
03:39:56   8  ,gatt
03:39:56   9  ,gattn
03:39:56  10  ,dc12
03:39:56  11  FROM q15
03:39:56  12  /

Table created.

Elapsed: 00:00:00.09
03:39:56 SQL> 
03:39:56 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
03:39:56 SQL> 
03:39:56 SQL> -- rpt
03:39:56 SQL> 
03:39:56 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20819

Elapsed: 00:00:00.35
03:39:56 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.01
03:39:56 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.01
03:39:56 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.01
03:39:56 SQL> 
03:39:56 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
03:39:56   2  GROUP BY pair,trend,gatt,gattn
03:39:56   3  ORDER BY pair,trend,gatt,gattn
03:39:56   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002977146	    4368      .0266986
aud_usd 	 1 nup nup 2.8956E-06	    1934     .02248855
aud_usd 	 1 nup up  -.00289683	    4041    .052583093
aud_usd 	 1 up  nup  .00293781	    4432    -.17482582
aud_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
03:39:56 SQL> 
03:39:56 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.06
03:39:56 SQL> CREATE TABLE aud_ms10 COMPRESS AS
03:39:56   2  SELECT
03:39:56   3  ydate
03:39:56   4  ,trend aud_trend
03:39:56   5  ,g4    aud_g4
03:39:56   6  ,gatt  aud_gatt
03:39:56   7  ,gattn aud_gattn
03:39:56   8  FROM modsrc
03:39:56   9  /

Table created.

Elapsed: 00:00:00.07
03:39:56 SQL> 
03:39:56 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
03:39:57 SQL> 
03:39:57 SQL> -- rpt
03:39:57 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 02:40:01 2010-12-17 03:30:00	10407	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-16 21:20:00	 9500	   -.017      .0131

Elapsed: 00:00:00.01
03:39:57 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 02:40:01 2010-12-17 03:30:00	      10455	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-16 21:20:00	       9500	  -.017       .0131

Elapsed: 00:00:00.02
03:39:57 SQL> 
03:39:57 SQL> -- I need a copy of q15 attributes
03:39:57 SQL> 
03:39:57 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.03
03:39:57 SQL> CREATE TABLE aud_att COMPRESS AS
03:39:57   2  SELECT
03:39:57   3  ydate
03:39:57   4  ,att00 aud_att00
03:39:57   5  ,att01 aud_att01
03:39:57   6  ,att02 aud_att02
03:39:57   7  ,att03 aud_att03
03:39:57   8  ,att04 aud_att04
03:39:57   9  ,att05 aud_att05
03:39:57  10  ,att06 aud_att06
03:39:57  11  ,att07 aud_att07
03:39:57  12  ,att08 aud_att08
03:39:57  13  ,att09 aud_att09
03:39:57  14  ,att10 aud_att10
03:39:57  15  ,att11 aud_att11
03:39:57  16  ,att12 aud_att12
03:39:57  17  ,att13 aud_att13
03:39:57  18  ,att14 aud_att14
03:39:57  19  ,att15 aud_att15
03:39:57  20  ,att16 aud_att16
03:39:57  21  ,att17 aud_att17
03:39:57  22  ,att18 aud_att18
03:39:57  23  ,att19 aud_att19
03:39:57  24  ,att20 aud_att20
03:39:57  25  ,att21 aud_att21
03:39:57  26  ,att22 aud_att22
03:39:57  27  ,att23 aud_att23
03:39:57  28  ,att24 aud_att24
03:39:57  29  ,att25 aud_att25
03:39:57  30  ,att26 aud_att26
03:39:57  31  ,att27 aud_att27
03:39:57  32  ,att28 aud_att28
03:39:57  33  ,att29 aud_att29
03:39:57  34  ,att30 aud_att30
03:39:57  35  ,att31 aud_att31
03:39:57  36  ,att32 aud_att32
03:39:57  37  FROM q15
03:39:57  38  /

Table created.

Elapsed: 00:00:00.16
03:39:57 SQL> 
03:39:57 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.48
03:39:57 SQL> 
03:39:57 SQL> -- rpt
03:39:57 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19955

Elapsed: 00:00:00.00
03:39:57 SQL> 
03:39:57 SQL> --
03:39:57 SQL> -- gbp10.sql
03:39:57 SQL> --
03:39:57 SQL> 
03:39:57 SQL> -- Creates views and tables for backtesting a forex SVM strategy
03:39:57 SQL> 
03:39:57 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.65
03:39:58 SQL> 
03:39:58 SQL> -- I created di5min here:
03:39:58 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
03:39:58 SQL> 
03:39:58 SQL> CREATE OR REPLACE VIEW q11 AS
03:39:58   2  SELECT
03:39:58   3  pair
03:39:58   4  ,ydate
03:39:58   5  ,prdate
03:39:58   6  ,rownum rnum -- acts as t in my time-series
03:39:58   7  ,clse
03:39:58   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
03:39:58   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
03:39:58  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
03:39:58  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
03:39:58  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
03:39:58  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
03:39:58  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
03:39:58  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
03:39:58  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
03:39:58  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
03:39:58  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
03:39:58  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
03:39:58  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
03:39:58  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
03:39:58  22  FROM di5min WHERE pair LIKE'%gbp%'
03:39:58  23  ORDER BY ydate
03:39:58  24  /

View created.

Elapsed: 00:00:00.11
03:39:58 SQL> 
03:39:58 SQL> -- rpt
03:39:58 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20821

Elapsed: 00:00:00.37
03:39:58 SQL> 
03:39:58 SQL> -- Calc deltas and gains
03:39:58 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.24
03:39:59 SQL> 
03:39:59 SQL> CREATE TABLE q13 COMPRESS AS
03:39:59   2  SELECT
03:39:59   3  pair
03:39:59   4  ,ydate
03:39:59   5  ,prdate
03:39:59   6  ,rnum
03:39:59   7  ,lg4
03:39:59   8  ,lg8
03:39:59   9  ,lg12
03:39:59  10  ,ld4
03:39:59  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
03:39:59  12  -- step by 1
03:39:59  13  ,clse-lg1 d01
03:39:59  14  ,lg1-lg2	d12
03:39:59  15  ,lg2-lg3	d23
03:39:59  16  ,lg3-lg4	d34
03:39:59  17  ,lg4-lg5	d45
03:39:59  18  ,lg5-lg6	d56
03:39:59  19  ,lg6-lg7	d67
03:39:59  20  ,lg7-lg8	d78
03:39:59  21  ,lg8-lg9	d89
03:39:59  22  -- step by 2
03:39:59  23  ,clse-lg2 d02
03:39:59  24  ,lg2-lg4 d24
03:39:59  25  ,lg4-lg6 d46
03:39:59  26  ,lg6-lg8 d68
03:39:59  27  -- step by 3
03:39:59  28  ,clse-lg3 d03
03:39:59  29  ,lg3-lg6	d36
03:39:59  30  ,lg6-lg9	d69
03:39:59  31  ,lg9-lg12 d912
03:39:59  32  -- step by 4
03:39:59  33  ,clse-lg4 d04
03:39:59  34  ,lg4-lg8	d48
03:39:59  35  ,lg8-lg12 d812
03:39:59  36  ,lg6-lg12 d612
03:39:59  37  ,lg12-lg18 d1218
03:39:59  38  --
03:39:59  39  ,ABS(clse-lg1)dc1
03:39:59  40  ,ABS(clse-lg2)dc2
03:39:59  41  ,ABS(clse-lg3)dc3
03:39:59  42  ,ABS(clse-lg4)dc4
03:39:59  43  ,ABS(clse-lg5)dc5
03:39:59  44  ,ABS(clse-lg6)dc6
03:39:59  45  ,ABS(clse-lg7)dc7
03:39:59  46  ,ABS(clse-lg8)dc8
03:39:59  47  ,ABS(clse-lg9)dc9
03:39:59  48  ,ABS(clse-lg12)dc12
03:39:59  49  ,ABS(clse-lg18)dc18
03:39:59  50  ,ABS(clse-lg24)dc24
03:39:59  51  ,ABS(clse-lg72)dc72
03:39:59  52  ,(ld4-clse) ug4
03:39:59  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
03:39:59  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
03:39:59  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
03:39:59  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
03:39:59  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
03:39:59  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
03:39:59  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
03:39:59  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
03:39:59  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
03:39:59  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
03:39:59  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
03:39:59  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
03:39:59  65  ,0+TO_CHAR(ydate,'D')d
03:39:59  66  ,0+TO_CHAR(ydate,'W')w
03:39:59  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
03:39:59  68  FROM q11
03:39:59  69  -- I dont want any NULL values from the LAG() functions:
03:39:59  70  WHERE lg72 > 0
03:39:59  71  ORDER BY pair,ydate
03:39:59  72  /

Table created.

Elapsed: 00:00:01.68
03:40:00 SQL> 
03:40:00 SQL> -- rpt
03:40:00 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9761
	-1	   10196

Elapsed: 00:00:00.03
03:40:00 SQL> 
03:40:00 SQL> -- Calc gains and ntiles
03:40:00 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.24
03:40:01 SQL> CREATE TABLE q15 COMPRESS AS
03:40:01   2  SELECT
03:40:01   3  pair
03:40:01   4  ,ydate
03:40:01   5  ,prdate -- Should be unique
03:40:01   6  ,trend -- +1 or -1
03:40:01   7  ,dc12 -- next statement needs this
03:40:01   8  -- Use NTILE() to derive some attributes
03:40:01   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
03:40:01  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
03:40:01  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
03:40:01  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
03:40:01  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
03:40:01  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
03:40:01  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
03:40:01  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
03:40:01  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
03:40:01  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
03:40:01  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
03:40:01  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
03:40:01  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
03:40:01  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
03:40:01  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
03:40:01  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
03:40:01  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
03:40:01  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
03:40:01  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
03:40:01  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
03:40:01  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
03:40:01  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
03:40:01  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
03:40:01  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
03:40:01  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
03:40:01  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
03:40:01  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
03:40:01  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
03:40:01  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
03:40:01  38  ,hh    att28
03:40:01  39  ,d     att29
03:40:01  40  ,w     att30
03:40:01  41  ,mpm   att31
03:40:01  42  ,trend att32
03:40:01  43  ,ug4 g4
03:40:01  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
03:40:01  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
03:40:01  46  FROM q13
03:40:01  47  ORDER BY pair,ydate
03:40:01  48  /

Table created.

Elapsed: 00:00:04.04
03:40:05 SQL> 
03:40:05 SQL> -- rpt
03:40:05 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
03:40:05   2  GROUP BY pair,trend,gatt,gattn
03:40:05   3  ORDER BY pair,trend,gatt,gattn
03:40:05   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003110916	    4347    -.09517963
gbp_usd 	 1 nup nup .000012699	    1632    .013069516
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003555072	    3948     -.1662432
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
03:40:05 SQL> 
03:40:05 SQL> -- rpt
03:40:05 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-17 03:30:00

Elapsed: 00:00:00.01
03:40:05 SQL> 
03:40:05 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.16
03:40:05 SQL> CREATE TABLE modsrc COMPRESS AS
03:40:05   2  SELECT
03:40:05   3  pair
03:40:05   4  ,ydate
03:40:05   5  ,prdate
03:40:05   6  ,trend
03:40:05   7  ,g4
03:40:05   8  ,gatt
03:40:05   9  ,gattn
03:40:05  10  ,dc12
03:40:05  11  FROM q15
03:40:05  12  /

Table created.

Elapsed: 00:00:00.09
03:40:05 SQL> 
03:40:05 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
03:40:05 SQL> 
03:40:05 SQL> -- rpt
03:40:05 SQL> 
03:40:05 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.34
03:40:06 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
03:40:06 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
03:40:06 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
03:40:06 SQL> 
03:40:06 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
03:40:06   2  GROUP BY pair,trend,gatt,gattn
03:40:06   3  ORDER BY pair,trend,gatt,gattn
03:40:06   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003110916	    4347    -.09517963
gbp_usd 	 1 nup nup .000012699	    1632    .013069516
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003555072	    3948     -.1662432
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.03
03:40:06 SQL> 
03:40:06 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.02
03:40:06 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
03:40:06   2  SELECT
03:40:06   3  ydate
03:40:06   4  ,trend gbp_trend
03:40:06   5  ,g4    gbp_g4
03:40:06   6  ,gatt  gbp_gatt
03:40:06   7  ,gattn gbp_gattn
03:40:06   8  FROM modsrc
03:40:06   9  /

Table created.

Elapsed: 00:00:00.05
03:40:06 SQL> 
03:40:06 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
03:40:06 SQL> 
03:40:06 SQL> -- rpt
03:40:06 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 02:40:01 2010-12-17 03:30:00	 9713	  -.0194      .0179
	-1 2010-09-13 12:05:01 2010-12-16 07:30:00	10196	  -.0153      .0159

Elapsed: 00:00:00.02
03:40:06 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 02:40:01 2010-12-17 03:30:00	       9761	 -.0194       .0179
	-1 2010-09-13 12:05:01 2010-12-16 07:30:00	      10196	 -.0153       .0159

Elapsed: 00:00:00.01
03:40:06 SQL> 
03:40:06 SQL> -- I need a copy of q15 attributes
03:40:06 SQL> 
03:40:06 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:01.21
03:40:07 SQL> CREATE TABLE gbp_att COMPRESS AS
03:40:07   2  SELECT
03:40:07   3  ydate
03:40:07   4  ,att00 gbp_att00
03:40:07   5  ,att01 gbp_att01
03:40:07   6  ,att02 gbp_att02
03:40:07   7  ,att03 gbp_att03
03:40:07   8  ,att04 gbp_att04
03:40:07   9  ,att05 gbp_att05
03:40:07  10  ,att06 gbp_att06
03:40:07  11  ,att07 gbp_att07
03:40:07  12  ,att08 gbp_att08
03:40:07  13  ,att09 gbp_att09
03:40:07  14  ,att10 gbp_att10
03:40:07  15  ,att11 gbp_att11
03:40:07  16  ,att12 gbp_att12
03:40:07  17  ,att13 gbp_att13
03:40:07  18  ,att14 gbp_att14
03:40:07  19  ,att15 gbp_att15
03:40:07  20  ,att16 gbp_att16
03:40:07  21  ,att17 gbp_att17
03:40:07  22  ,att18 gbp_att18
03:40:07  23  ,att19 gbp_att19
03:40:07  24  ,att20 gbp_att20
03:40:07  25  ,att21 gbp_att21
03:40:07  26  ,att22 gbp_att22
03:40:07  27  ,att23 gbp_att23
03:40:07  28  ,att24 gbp_att24
03:40:07  29  ,att25 gbp_att25
03:40:07  30  ,att26 gbp_att26
03:40:07  31  ,att27 gbp_att27
03:40:07  32  ,att28 gbp_att28
03:40:07  33  ,att29 gbp_att29
03:40:07  34  ,att30 gbp_att30
03:40:07  35  ,att31 gbp_att31
03:40:07  36  ,att32 gbp_att32
03:40:07  37  FROM q15
03:40:07  38  /

Table created.

Elapsed: 00:00:00.17
03:40:07 SQL> 
03:40:07 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
03:40:08 SQL> 
03:40:08 SQL> -- rpt
03:40:08 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.00
03:40:08 SQL> 
03:40:08 SQL> --
03:40:08 SQL> -- jpy10.sql
03:40:08 SQL> --
03:40:08 SQL> 
03:40:08 SQL> -- Creates views and tables for backtesting a forex SVM strategy
03:40:08 SQL> 
03:40:08 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.44
03:40:08 SQL> 
03:40:08 SQL> -- I created di5min here:
03:40:08 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
03:40:08 SQL> 
03:40:08 SQL> CREATE OR REPLACE VIEW q11 AS
03:40:08   2  SELECT
03:40:08   3  pair
03:40:08   4  ,ydate
03:40:08   5  ,prdate
03:40:08   6  ,rownum rnum -- acts as t in my time-series
03:40:08   7  ,clse
03:40:08   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
03:40:08   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
03:40:08  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
03:40:08  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
03:40:08  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
03:40:08  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
03:40:08  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
03:40:08  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
03:40:08  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
03:40:08  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
03:40:08  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
03:40:08  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
03:40:08  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
03:40:08  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
03:40:08  22  FROM di5min WHERE pair LIKE'%jpy%'
03:40:08  23  ORDER BY ydate
03:40:08  24  /

View created.

Elapsed: 00:00:00.05
03:40:08 SQL> 
03:40:08 SQL> -- rpt
03:40:08 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20822

Elapsed: 00:00:00.37
03:40:08 SQL> 
03:40:08 SQL> -- Calc deltas and gains
03:40:08 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.31
03:40:09 SQL> 
03:40:09 SQL> CREATE TABLE q13 COMPRESS AS
03:40:09   2  SELECT
03:40:09   3  pair
03:40:09   4  ,ydate
03:40:09   5  ,prdate
03:40:09   6  ,rnum
03:40:09   7  ,lg4
03:40:09   8  ,lg8
03:40:09   9  ,lg12
03:40:09  10  ,ld4
03:40:09  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
03:40:09  12  -- step by 1
03:40:09  13  ,clse-lg1 d01
03:40:09  14  ,lg1-lg2	d12
03:40:09  15  ,lg2-lg3	d23
03:40:09  16  ,lg3-lg4	d34
03:40:09  17  ,lg4-lg5	d45
03:40:09  18  ,lg5-lg6	d56
03:40:09  19  ,lg6-lg7	d67
03:40:09  20  ,lg7-lg8	d78
03:40:09  21  ,lg8-lg9	d89
03:40:09  22  -- step by 2
03:40:09  23  ,clse-lg2 d02
03:40:09  24  ,lg2-lg4 d24
03:40:09  25  ,lg4-lg6 d46
03:40:09  26  ,lg6-lg8 d68
03:40:09  27  -- step by 3
03:40:09  28  ,clse-lg3 d03
03:40:09  29  ,lg3-lg6	d36
03:40:09  30  ,lg6-lg9	d69
03:40:09  31  ,lg9-lg12 d912
03:40:09  32  -- step by 4
03:40:09  33  ,clse-lg4 d04
03:40:09  34  ,lg4-lg8	d48
03:40:09  35  ,lg8-lg12 d812
03:40:09  36  ,lg6-lg12 d612
03:40:09  37  ,lg12-lg18 d1218
03:40:09  38  --
03:40:09  39  ,ABS(clse-lg1)dc1
03:40:09  40  ,ABS(clse-lg2)dc2
03:40:09  41  ,ABS(clse-lg3)dc3
03:40:09  42  ,ABS(clse-lg4)dc4
03:40:09  43  ,ABS(clse-lg5)dc5
03:40:09  44  ,ABS(clse-lg6)dc6
03:40:09  45  ,ABS(clse-lg7)dc7
03:40:09  46  ,ABS(clse-lg8)dc8
03:40:09  47  ,ABS(clse-lg9)dc9
03:40:09  48  ,ABS(clse-lg12)dc12
03:40:09  49  ,ABS(clse-lg18)dc18
03:40:09  50  ,ABS(clse-lg24)dc24
03:40:09  51  ,ABS(clse-lg72)dc72
03:40:09  52  ,(ld4-clse) ug4
03:40:09  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
03:40:09  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
03:40:09  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
03:40:09  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
03:40:09  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
03:40:09  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
03:40:09  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
03:40:09  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
03:40:09  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
03:40:09  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
03:40:09  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
03:40:09  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
03:40:09  65  ,0+TO_CHAR(ydate,'D')d
03:40:09  66  ,0+TO_CHAR(ydate,'W')w
03:40:09  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
03:40:09  68  FROM q11
03:40:09  69  -- I dont want any NULL values from the LAG() functions:
03:40:09  70  WHERE lg72 > 0
03:40:09  71  ORDER BY pair,ydate
03:40:09  72  /

Table created.

Elapsed: 00:00:01.69
03:40:10 SQL> 
03:40:10 SQL> -- rpt
03:40:10 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9235
	-1	   10723

Elapsed: 00:00:00.02
03:40:10 SQL> 
03:40:10 SQL> -- Calc gains and ntiles
03:40:10 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.17
03:40:11 SQL> CREATE TABLE q15 COMPRESS AS
03:40:11   2  SELECT
03:40:11   3  pair
03:40:11   4  ,ydate
03:40:11   5  ,prdate -- Should be unique
03:40:11   6  ,trend -- +1 or -1
03:40:11   7  ,dc12 -- next statement needs this
03:40:11   8  -- Use NTILE() to derive some attributes
03:40:11   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
03:40:11  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
03:40:11  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
03:40:11  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
03:40:11  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
03:40:11  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
03:40:11  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
03:40:11  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
03:40:11  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
03:40:11  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
03:40:11  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
03:40:11  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
03:40:11  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
03:40:11  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
03:40:11  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
03:40:11  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
03:40:11  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
03:40:11  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
03:40:11  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
03:40:11  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
03:40:11  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
03:40:11  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
03:40:11  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
03:40:11  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
03:40:11  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
03:40:11  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
03:40:11  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
03:40:11  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
03:40:11  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
03:40:11  38  ,hh    att28
03:40:11  39  ,d     att29
03:40:11  40  ,w     att30
03:40:11  41  ,mpm   att31
03:40:11  42  ,trend att32
03:40:11  43  ,ug4 g4
03:40:11  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
03:40:11  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
03:40:11  46  FROM q13
03:40:11  47  ORDER BY pair,ydate
03:40:11  48  /

Table created.

Elapsed: 00:00:04.02
03:40:15 SQL> 
03:40:15 SQL> -- rpt
03:40:15 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
03:40:15   2  GROUP BY pair,trend,gatt,gattn
03:40:15   3  ORDER BY pair,trend,gatt,gattn
03:40:15   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13701458	    5212    .022899693
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13436734	    4979    -.01365257
usd_jpy 	 1 up  nup .152379407	    4084    .184257426
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
03:40:15 SQL> 
03:40:15 SQL> -- rpt
03:40:15 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-17 03:30:00

Elapsed: 00:00:00.02
03:40:15 SQL> 
03:40:15 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.20
03:40:15 SQL> CREATE TABLE modsrc COMPRESS AS
03:40:15   2  SELECT
03:40:15   3  pair
03:40:15   4  ,ydate
03:40:15   5  ,prdate
03:40:15   6  ,trend
03:40:15   7  ,g4
03:40:15   8  ,gatt
03:40:15   9  ,gattn
03:40:15  10  ,dc12
03:40:15  11  FROM q15
03:40:15  12  /

Table created.

Elapsed: 00:00:00.10
03:40:15 SQL> 
03:40:15 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.24
03:40:15 SQL> 
03:40:15 SQL> -- rpt
03:40:15 SQL> 
03:40:15 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.35
03:40:16 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
03:40:16 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
03:40:16 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
03:40:16 SQL> 
03:40:16 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
03:40:16   2  GROUP BY pair,trend,gatt,gattn
03:40:16   3  ORDER BY pair,trend,gatt,gattn
03:40:16   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13701458	    5212    .022899693
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13436734	    4979    -.01365257
usd_jpy 	 1 up  nup .152379407	    4084    .184257426
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
03:40:16 SQL> 
03:40:16 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.08
03:40:16 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
03:40:16   2  SELECT
03:40:16   3  ydate
03:40:16   4  ,trend jpy_trend
03:40:16   5  ,g4    jpy_g4
03:40:16   6  ,gatt  jpy_gatt
03:40:16   7  ,gattn jpy_gattn
03:40:16   8  FROM modsrc
03:40:16   9  /

Table created.

Elapsed: 00:00:00.06
03:40:16 SQL> 
03:40:16 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.28
03:40:16 SQL> 
03:40:16 SQL> -- rpt
03:40:16 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 02:55:01 2010-12-17 00:00:00	 9230	   -1.07	1.5
	-1 2010-09-13 02:40:01 2010-12-17 03:30:00	10680	 -1.0775       1.99

Elapsed: 00:00:00.02
03:40:16 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 02:55:01 2010-12-17 00:00:00	       9235	  -1.07 	1.5
	-1 2010-09-13 02:40:01 2010-12-17 03:30:00	      10723	-1.0775        1.99

Elapsed: 00:00:00.02
03:40:16 SQL> 
03:40:16 SQL> -- I need a copy of q15 attributes
03:40:16 SQL> 
03:40:16 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.07
03:40:16 SQL> CREATE TABLE jpy_att COMPRESS AS
03:40:16   2  SELECT
03:40:16   3  ydate
03:40:16   4  ,att00 jpy_att00
03:40:16   5  ,att01 jpy_att01
03:40:16   6  ,att02 jpy_att02
03:40:16   7  ,att03 jpy_att03
03:40:16   8  ,att04 jpy_att04
03:40:16   9  ,att05 jpy_att05
03:40:16  10  ,att06 jpy_att06
03:40:16  11  ,att07 jpy_att07
03:40:16  12  ,att08 jpy_att08
03:40:16  13  ,att09 jpy_att09
03:40:16  14  ,att10 jpy_att10
03:40:16  15  ,att11 jpy_att11
03:40:16  16  ,att12 jpy_att12
03:40:16  17  ,att13 jpy_att13
03:40:16  18  ,att14 jpy_att14
03:40:16  19  ,att15 jpy_att15
03:40:16  20  ,att16 jpy_att16
03:40:16  21  ,att17 jpy_att17
03:40:16  22  ,att18 jpy_att18
03:40:16  23  ,att19 jpy_att19
03:40:16  24  ,att20 jpy_att20
03:40:16  25  ,att21 jpy_att21
03:40:16  26  ,att22 jpy_att22
03:40:16  27  ,att23 jpy_att23
03:40:16  28  ,att24 jpy_att24
03:40:16  29  ,att25 jpy_att25
03:40:16  30  ,att26 jpy_att26
03:40:16  31  ,att27 jpy_att27
03:40:16  32  ,att28 jpy_att28
03:40:16  33  ,att29 jpy_att29
03:40:16  34  ,att30 jpy_att30
03:40:16  35  ,att31 jpy_att31
03:40:16  36  ,att32 jpy_att32
03:40:16  37  FROM q15
03:40:16  38  /

Table created.

Elapsed: 00:00:00.15
03:40:16 SQL> 
03:40:16 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.55
03:40:17 SQL> 
03:40:17 SQL> -- rpt
03:40:17 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.00
03:40:17 SQL> 
03:40:17 SQL> --
03:40:17 SQL> -- cad10.sql
03:40:17 SQL> --
03:40:17 SQL> 
03:40:17 SQL> -- Creates views and tables for backtesting a forex SVM strategy
03:40:17 SQL> 
03:40:17 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.71
03:40:18 SQL> 
03:40:18 SQL> -- I created di5min here:
03:40:18 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
03:40:18 SQL> 
03:40:18 SQL> CREATE OR REPLACE VIEW q11 AS
03:40:18   2  SELECT
03:40:18   3  pair
03:40:18   4  ,ydate
03:40:18   5  ,prdate
03:40:18   6  ,rownum rnum -- acts as t in my time-series
03:40:18   7  ,clse
03:40:18   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
03:40:18   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
03:40:18  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
03:40:18  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
03:40:18  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
03:40:18  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
03:40:18  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
03:40:18  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
03:40:18  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
03:40:18  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
03:40:18  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
03:40:18  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
03:40:18  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
03:40:18  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
03:40:18  22  FROM di5min WHERE pair LIKE'%cad%'
03:40:18  23  ORDER BY ydate
03:40:18  24  /

View created.

Elapsed: 00:00:00.05
03:40:18 SQL> 
03:40:18 SQL> -- rpt
03:40:18 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20818

Elapsed: 00:00:00.36
03:40:18 SQL> 
03:40:18 SQL> -- Calc deltas and gains
03:40:18 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.22
03:40:18 SQL> 
03:40:18 SQL> CREATE TABLE q13 COMPRESS AS
03:40:18   2  SELECT
03:40:18   3  pair
03:40:18   4  ,ydate
03:40:18   5  ,prdate
03:40:18   6  ,rnum
03:40:18   7  ,lg4
03:40:18   8  ,lg8
03:40:18   9  ,lg12
03:40:18  10  ,ld4
03:40:18  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
03:40:18  12  -- step by 1
03:40:18  13  ,clse-lg1 d01
03:40:18  14  ,lg1-lg2	d12
03:40:18  15  ,lg2-lg3	d23
03:40:18  16  ,lg3-lg4	d34
03:40:18  17  ,lg4-lg5	d45
03:40:18  18  ,lg5-lg6	d56
03:40:18  19  ,lg6-lg7	d67
03:40:18  20  ,lg7-lg8	d78
03:40:18  21  ,lg8-lg9	d89
03:40:18  22  -- step by 2
03:40:18  23  ,clse-lg2 d02
03:40:18  24  ,lg2-lg4 d24
03:40:18  25  ,lg4-lg6 d46
03:40:18  26  ,lg6-lg8 d68
03:40:18  27  -- step by 3
03:40:18  28  ,clse-lg3 d03
03:40:18  29  ,lg3-lg6	d36
03:40:18  30  ,lg6-lg9	d69
03:40:18  31  ,lg9-lg12 d912
03:40:18  32  -- step by 4
03:40:18  33  ,clse-lg4 d04
03:40:18  34  ,lg4-lg8	d48
03:40:18  35  ,lg8-lg12 d812
03:40:18  36  ,lg6-lg12 d612
03:40:18  37  ,lg12-lg18 d1218
03:40:18  38  --
03:40:18  39  ,ABS(clse-lg1)dc1
03:40:18  40  ,ABS(clse-lg2)dc2
03:40:18  41  ,ABS(clse-lg3)dc3
03:40:18  42  ,ABS(clse-lg4)dc4
03:40:18  43  ,ABS(clse-lg5)dc5
03:40:18  44  ,ABS(clse-lg6)dc6
03:40:18  45  ,ABS(clse-lg7)dc7
03:40:18  46  ,ABS(clse-lg8)dc8
03:40:18  47  ,ABS(clse-lg9)dc9
03:40:18  48  ,ABS(clse-lg12)dc12
03:40:18  49  ,ABS(clse-lg18)dc18
03:40:18  50  ,ABS(clse-lg24)dc24
03:40:18  51  ,ABS(clse-lg72)dc72
03:40:18  52  ,(ld4-clse) ug4
03:40:18  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
03:40:18  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
03:40:18  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
03:40:18  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
03:40:18  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
03:40:18  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
03:40:18  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
03:40:18  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
03:40:18  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
03:40:18  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
03:40:18  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
03:40:18  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
03:40:18  65  ,0+TO_CHAR(ydate,'D')d
03:40:18  66  ,0+TO_CHAR(ydate,'W')w
03:40:18  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
03:40:18  68  FROM q11
03:40:18  69  -- I dont want any NULL values from the LAG() functions:
03:40:18  70  WHERE lg72 > 0
03:40:18  71  ORDER BY pair,ydate
03:40:18  72  /

Table created.

Elapsed: 00:00:01.82
03:40:20 SQL> 
03:40:20 SQL> -- rpt
03:40:20 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9022
	-1	   10932

Elapsed: 00:00:00.03
03:40:20 SQL> 
03:40:20 SQL> -- Calc gains and ntiles
03:40:20 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.28
03:40:20 SQL> CREATE TABLE q15 COMPRESS AS
03:40:20   2  SELECT
03:40:20   3  pair
03:40:20   4  ,ydate
03:40:20   5  ,prdate -- Should be unique
03:40:20   6  ,trend -- +1 or -1
03:40:20   7  ,dc12 -- next statement needs this
03:40:20   8  -- Use NTILE() to derive some attributes
03:40:20   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
03:40:20  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
03:40:20  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
03:40:20  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
03:40:20  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
03:40:20  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
03:40:20  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
03:40:20  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
03:40:20  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
03:40:20  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
03:40:20  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
03:40:20  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
03:40:20  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
03:40:20  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
03:40:20  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
03:40:20  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
03:40:20  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
03:40:20  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
03:40:20  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
03:40:20  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
03:40:20  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
03:40:20  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
03:40:20  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
03:40:20  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
03:40:20  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
03:40:20  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
03:40:20  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
03:40:20  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
03:40:20  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
03:40:20  38  ,hh    att28
03:40:20  39  ,d     att29
03:40:20  40  ,w     att30
03:40:20  41  ,mpm   att31
03:40:20  42  ,trend att32
03:40:20  43  ,ug4 g4
03:40:20  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
03:40:20  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
03:40:20  46  FROM q13
03:40:20  47  ORDER BY pair,ydate
03:40:20  48  /

Table created.

Elapsed: 00:00:04.06
03:40:24 SQL> 
03:40:24 SQL> -- rpt
03:40:24 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
03:40:24   2  GROUP BY pair,trend,gatt,gattn
03:40:24   3  ORDER BY pair,trend,gatt,gattn
03:40:24   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.532E-06	    3012    .016888763
usd_cad 	-1 nup up  -.00225026	    4103     .06221467
usd_cad 	-1 up  nup  .00240127	    3799    -.00385755
usd_cad 	-1			       0
usd_cad 	 1 nup nup  -.0000181	    2088     -.0617638
usd_cad 	 1 nup up  -.00236845	    3846    .001330583
usd_cad 	 1 up  nup .002592062	    3058    .003465651
usd_cad 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
03:40:25 SQL> 
03:40:25 SQL> -- rpt
03:40:25 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-17 03:30:00

Elapsed: 00:00:00.02
03:40:25 SQL> 
03:40:25 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.23
03:40:25 SQL> CREATE TABLE modsrc COMPRESS AS
03:40:25   2  SELECT
03:40:25   3  pair
03:40:25   4  ,ydate
03:40:25   5  ,prdate
03:40:25   6  ,trend
03:40:25   7  ,g4
03:40:25   8  ,gatt
03:40:25   9  ,gattn
03:40:25  10  ,dc12
03:40:25  11  FROM q15
03:40:25  12  /

Table created.

Elapsed: 00:00:00.08
03:40:25 SQL> 
03:40:25 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
03:40:25 SQL> 
03:40:25 SQL> -- rpt
03:40:25 SQL> 
03:40:25 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20818

Elapsed: 00:00:00.36
03:40:25 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.01
03:40:25 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.01
03:40:25 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.00
03:40:25 SQL> 
03:40:25 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
03:40:25   2  GROUP BY pair,trend,gatt,gattn
03:40:25   3  ORDER BY pair,trend,gatt,gattn
03:40:25   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.532E-06	    3012    .016888763
usd_cad 	-1 nup up  -.00225026	    4103     .06221467
usd_cad 	-1 up  nup  .00240127	    3799    -.00385755
usd_cad 	-1			       0
usd_cad 	 1 nup nup  -.0000181	    2088     -.0617638
usd_cad 	 1 nup up  -.00236845	    3846    .001330583
usd_cad 	 1 up  nup .002592062	    3058    .003465651
usd_cad 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
03:40:25 SQL> 
03:40:25 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.06
03:40:26 SQL> CREATE TABLE cad_ms10 COMPRESS AS
03:40:26   2  SELECT
03:40:26   3  ydate
03:40:26   4  ,trend cad_trend
03:40:26   5  ,g4    cad_g4
03:40:26   6  ,gatt  cad_gatt
03:40:26   7  ,gattn cad_gattn
03:40:26   8  FROM modsrc
03:40:26   9  /

Table created.

Elapsed: 00:00:00.07
03:40:26 SQL> 
03:40:26 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
03:40:26 SQL> 
03:40:26 SQL> -- rpt
03:40:26 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 00:30:01 2010-12-17 02:55:00	 8992	  -.0089      .0151
	-1 2010-09-13 02:40:01 2010-12-17 03:30:00	10914	  -.0107      .0147

Elapsed: 00:00:00.03
03:40:26 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 00:30:01 2010-12-17 02:55:00	       9022	 -.0089       .0151
	-1 2010-09-13 02:40:01 2010-12-17 03:30:00	      10932	 -.0107       .0147

Elapsed: 00:00:00.01
03:40:26 SQL> 
03:40:26 SQL> -- I need a copy of q15 attributes
03:40:26 SQL> 
03:40:26 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.11
03:40:26 SQL> CREATE TABLE cad_att COMPRESS AS
03:40:26   2  SELECT
03:40:26   3  ydate
03:40:26   4  ,att00 cad_att00
03:40:26   5  ,att01 cad_att01
03:40:26   6  ,att02 cad_att02
03:40:26   7  ,att03 cad_att03
03:40:26   8  ,att04 cad_att04
03:40:26   9  ,att05 cad_att05
03:40:26  10  ,att06 cad_att06
03:40:26  11  ,att07 cad_att07
03:40:26  12  ,att08 cad_att08
03:40:26  13  ,att09 cad_att09
03:40:26  14  ,att10 cad_att10
03:40:26  15  ,att11 cad_att11
03:40:26  16  ,att12 cad_att12
03:40:26  17  ,att13 cad_att13
03:40:26  18  ,att14 cad_att14
03:40:26  19  ,att15 cad_att15
03:40:26  20  ,att16 cad_att16
03:40:26  21  ,att17 cad_att17
03:40:26  22  ,att18 cad_att18
03:40:26  23  ,att19 cad_att19
03:40:26  24  ,att20 cad_att20
03:40:26  25  ,att21 cad_att21
03:40:26  26  ,att22 cad_att22
03:40:26  27  ,att23 cad_att23
03:40:26  28  ,att24 cad_att24
03:40:26  29  ,att25 cad_att25
03:40:26  30  ,att26 cad_att26
03:40:26  31  ,att27 cad_att27
03:40:26  32  ,att28 cad_att28
03:40:26  33  ,att29 cad_att29
03:40:26  34  ,att30 cad_att30
03:40:26  35  ,att31 cad_att31
03:40:26  36  ,att32 cad_att32
03:40:26  37  FROM q15
03:40:26  38  /

Table created.

Elapsed: 00:00:00.13
03:40:26 SQL> 
03:40:26 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.39
03:40:26 SQL> 
03:40:26 SQL> -- rpt
03:40:26 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19954

Elapsed: 00:00:00.00
03:40:26 SQL> 
03:40:26 SQL> --
03:40:26 SQL> -- chf10.sql
03:40:26 SQL> --
03:40:26 SQL> 
03:40:26 SQL> -- Creates views and tables for backtesting a forex SVM strategy
03:40:26 SQL> 
03:40:26 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.54
03:40:27 SQL> 
03:40:27 SQL> -- I created di5min here:
03:40:27 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
03:40:27 SQL> 
03:40:27 SQL> CREATE OR REPLACE VIEW q11 AS
03:40:27   2  SELECT
03:40:27   3  pair
03:40:27   4  ,ydate
03:40:27   5  ,prdate
03:40:27   6  ,rownum rnum -- acts as t in my time-series
03:40:27   7  ,clse
03:40:27   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
03:40:27   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
03:40:27  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
03:40:27  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
03:40:27  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
03:40:27  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
03:40:27  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
03:40:27  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
03:40:27  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
03:40:27  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
03:40:27  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
03:40:27  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
03:40:27  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
03:40:27  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
03:40:27  22  FROM di5min WHERE pair LIKE'%chf%'
03:40:27  23  ORDER BY ydate
03:40:27  24  /

View created.

Elapsed: 00:00:00.05
03:40:27 SQL> 
03:40:27 SQL> -- rpt
03:40:27 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20821

Elapsed: 00:00:00.35
03:40:27 SQL> 
03:40:27 SQL> -- Calc deltas and gains
03:40:27 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.25
03:40:28 SQL> 
03:40:28 SQL> CREATE TABLE q13 COMPRESS AS
03:40:28   2  SELECT
03:40:28   3  pair
03:40:28   4  ,ydate
03:40:28   5  ,prdate
03:40:28   6  ,rnum
03:40:28   7  ,lg4
03:40:28   8  ,lg8
03:40:28   9  ,lg12
03:40:28  10  ,ld4
03:40:28  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
03:40:28  12  -- step by 1
03:40:28  13  ,clse-lg1 d01
03:40:28  14  ,lg1-lg2	d12
03:40:28  15  ,lg2-lg3	d23
03:40:28  16  ,lg3-lg4	d34
03:40:28  17  ,lg4-lg5	d45
03:40:28  18  ,lg5-lg6	d56
03:40:28  19  ,lg6-lg7	d67
03:40:28  20  ,lg7-lg8	d78
03:40:28  21  ,lg8-lg9	d89
03:40:28  22  -- step by 2
03:40:28  23  ,clse-lg2 d02
03:40:28  24  ,lg2-lg4 d24
03:40:28  25  ,lg4-lg6 d46
03:40:28  26  ,lg6-lg8 d68
03:40:28  27  -- step by 3
03:40:28  28  ,clse-lg3 d03
03:40:28  29  ,lg3-lg6	d36
03:40:28  30  ,lg6-lg9	d69
03:40:28  31  ,lg9-lg12 d912
03:40:28  32  -- step by 4
03:40:28  33  ,clse-lg4 d04
03:40:28  34  ,lg4-lg8	d48
03:40:28  35  ,lg8-lg12 d812
03:40:28  36  ,lg6-lg12 d612
03:40:28  37  ,lg12-lg18 d1218
03:40:28  38  --
03:40:28  39  ,ABS(clse-lg1)dc1
03:40:28  40  ,ABS(clse-lg2)dc2
03:40:28  41  ,ABS(clse-lg3)dc3
03:40:28  42  ,ABS(clse-lg4)dc4
03:40:28  43  ,ABS(clse-lg5)dc5
03:40:28  44  ,ABS(clse-lg6)dc6
03:40:28  45  ,ABS(clse-lg7)dc7
03:40:28  46  ,ABS(clse-lg8)dc8
03:40:28  47  ,ABS(clse-lg9)dc9
03:40:28  48  ,ABS(clse-lg12)dc12
03:40:28  49  ,ABS(clse-lg18)dc18
03:40:28  50  ,ABS(clse-lg24)dc24
03:40:28  51  ,ABS(clse-lg72)dc72
03:40:28  52  ,(ld4-clse) ug4
03:40:28  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
03:40:28  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
03:40:28  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
03:40:28  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
03:40:28  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
03:40:28  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
03:40:28  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
03:40:28  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
03:40:28  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
03:40:28  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
03:40:28  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
03:40:28  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
03:40:28  65  ,0+TO_CHAR(ydate,'D')d
03:40:28  66  ,0+TO_CHAR(ydate,'W')w
03:40:28  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
03:40:28  68  FROM q11
03:40:28  69  -- I dont want any NULL values from the LAG() functions:
03:40:28  70  WHERE lg72 > 0
03:40:28  71  ORDER BY pair,ydate
03:40:28  72  /

Table created.

Elapsed: 00:00:01.72
03:40:29 SQL> 
03:40:29 SQL> -- rpt
03:40:29 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9320
	-1	   10637

Elapsed: 00:00:00.03
03:40:29 SQL> 
03:40:29 SQL> -- Calc gains and ntiles
03:40:29 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.24
03:40:30 SQL> CREATE TABLE q15 COMPRESS AS
03:40:30   2  SELECT
03:40:30   3  pair
03:40:30   4  ,ydate
03:40:30   5  ,prdate -- Should be unique
03:40:30   6  ,trend -- +1 or -1
03:40:30   7  ,dc12 -- next statement needs this
03:40:30   8  -- Use NTILE() to derive some attributes
03:40:30   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
03:40:30  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
03:40:30  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
03:40:30  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
03:40:30  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
03:40:30  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
03:40:30  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
03:40:30  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
03:40:30  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
03:40:30  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
03:40:30  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
03:40:30  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
03:40:30  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
03:40:30  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
03:40:30  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
03:40:30  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
03:40:30  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
03:40:30  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
03:40:30  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
03:40:30  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
03:40:30  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
03:40:30  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
03:40:30  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
03:40:30  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
03:40:30  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
03:40:30  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
03:40:30  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
03:40:30  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
03:40:30  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
03:40:30  38  ,hh    att28
03:40:30  39  ,d     att29
03:40:30  40  ,w     att30
03:40:30  41  ,mpm   att31
03:40:30  42  ,trend att32
03:40:30  43  ,ug4 g4
03:40:30  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
03:40:30  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
03:40:30  46  FROM q13
03:40:30  47  ORDER BY pair,ydate
03:40:30  48  /

Table created.

Elapsed: 00:00:03.99
03:40:34 SQL> 
03:40:34 SQL> -- rpt
03:40:34 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
03:40:34   2  GROUP BY pair,trend,gatt,gattn
03:40:34   3  ORDER BY pair,trend,gatt,gattn
03:40:34   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032146	    2645    .042491123
usd_chf 	-1 nup up  -.00291718	    3896    .057735077
usd_chf 	-1 up  nup .002646511	    4048    -.12069668
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00254098	    3862    .111937469
usd_chf 	 1 up  nup .002433841	    3232     -.1606913

7 rows selected.

Elapsed: 00:00:00.05
03:40:34 SQL> 
03:40:34 SQL> -- rpt
03:40:34 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-17 03:30:00

Elapsed: 00:00:00.01
03:40:34 SQL> 
03:40:34 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.17
03:40:34 SQL> CREATE TABLE modsrc COMPRESS AS
03:40:34   2  SELECT
03:40:34   3  pair
03:40:34   4  ,ydate
03:40:34   5  ,prdate
03:40:34   6  ,trend
03:40:34   7  ,g4
03:40:34   8  ,gatt
03:40:34   9  ,gattn
03:40:34  10  ,dc12
03:40:34  11  FROM q15
03:40:34  12  /

Table created.

Elapsed: 00:00:00.09
03:40:34 SQL> 
03:40:34 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.23
03:40:34 SQL> 
03:40:34 SQL> -- rpt
03:40:34 SQL> 
03:40:34 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.35
03:40:35 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
03:40:35 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
03:40:35 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
03:40:35 SQL> 
03:40:35 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
03:40:35   2  GROUP BY pair,trend,gatt,gattn
03:40:35   3  ORDER BY pair,trend,gatt,gattn
03:40:35   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032146	    2645    .042491123
usd_chf 	-1 nup up  -.00291718	    3896    .057735077
usd_chf 	-1 up  nup .002646511	    4048    -.12069668
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00254098	    3862    .111937469
usd_chf 	 1 up  nup .002433841	    3232     -.1606913

7 rows selected.

Elapsed: 00:00:00.02
03:40:35 SQL> 
03:40:35 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.07
03:40:35 SQL> CREATE TABLE chf_ms10 COMPRESS AS
03:40:35   2  SELECT
03:40:35   3  ydate
03:40:35   4  ,trend chf_trend
03:40:35   5  ,g4    chf_g4
03:40:35   6  ,gatt  chf_gatt
03:40:35   7  ,gattn chf_gattn
03:40:35   8  FROM modsrc
03:40:35   9  /

Table created.

Elapsed: 00:00:00.07
03:40:35 SQL> 
03:40:35 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
03:40:35 SQL> 
03:40:35 SQL> -- rpt
03:40:35 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	 9320	  -.0176     .01365
	-1 2010-09-13 02:40:01 2010-12-17 03:30:00	10589	  -.0166      .0149

Elapsed: 00:00:00.02
03:40:35 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	       9320	 -.0176      .01365
	-1 2010-09-13 02:40:01 2010-12-17 03:30:00	      10637	 -.0166       .0149

Elapsed: 00:00:00.02
03:40:35 SQL> 
03:40:35 SQL> -- I need a copy of q15 attributes
03:40:35 SQL> 
03:40:35 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.08
03:40:35 SQL> CREATE TABLE chf_att COMPRESS AS
03:40:35   2  SELECT
03:40:35   3  ydate
03:40:35   4  ,att00 chf_att00
03:40:35   5  ,att01 chf_att01
03:40:35   6  ,att02 chf_att02
03:40:35   7  ,att03 chf_att03
03:40:35   8  ,att04 chf_att04
03:40:35   9  ,att05 chf_att05
03:40:35  10  ,att06 chf_att06
03:40:35  11  ,att07 chf_att07
03:40:35  12  ,att08 chf_att08
03:40:35  13  ,att09 chf_att09
03:40:35  14  ,att10 chf_att10
03:40:35  15  ,att11 chf_att11
03:40:35  16  ,att12 chf_att12
03:40:35  17  ,att13 chf_att13
03:40:35  18  ,att14 chf_att14
03:40:35  19  ,att15 chf_att15
03:40:35  20  ,att16 chf_att16
03:40:35  21  ,att17 chf_att17
03:40:35  22  ,att18 chf_att18
03:40:35  23  ,att19 chf_att19
03:40:35  24  ,att20 chf_att20
03:40:35  25  ,att21 chf_att21
03:40:35  26  ,att22 chf_att22
03:40:35  27  ,att23 chf_att23
03:40:35  28  ,att24 chf_att24
03:40:35  29  ,att25 chf_att25
03:40:35  30  ,att26 chf_att26
03:40:35  31  ,att27 chf_att27
03:40:35  32  ,att28 chf_att28
03:40:35  33  ,att29 chf_att29
03:40:35  34  ,att30 chf_att30
03:40:35  35  ,att31 chf_att31
03:40:35  36  ,att32 chf_att32
03:40:35  37  FROM q15
03:40:35  38  /

Table created.

Elapsed: 00:00:00.14
03:40:35 SQL> 
03:40:35 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.37
03:40:35 SQL> 
03:40:35 SQL> -- rpt
03:40:35 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.01
03:40:35 SQL> 
03:40:35 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
