
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 16 19:40:25 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

19:40:25 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
19:40:25 SQL> 19:40:25 SQL> --
19:40:25 SQL> -- eur10.sql
19:40:25 SQL> --
19:40:25 SQL> 
19:40:25 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:40:25 SQL> 
19:40:25 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.00
19:40:25 SQL> 
19:40:25 SQL> -- I created di5min here:
19:40:25 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:40:25 SQL> 
19:40:25 SQL> CREATE OR REPLACE VIEW q11 AS
19:40:25   2  SELECT
19:40:25   3  pair
19:40:25   4  ,ydate
19:40:25   5  ,prdate
19:40:25   6  ,rownum rnum -- acts as t in my time-series
19:40:25   7  ,clse
19:40:25   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:40:25   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:40:25  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:40:25  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:40:25  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:40:25  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:40:25  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:40:25  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:40:25  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:40:25  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:40:25  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:40:25  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:40:25  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:40:25  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:40:25  22  FROM di5min WHERE pair LIKE'%eur%'
19:40:25  23  ORDER BY ydate
19:40:25  24  /

View created.

Elapsed: 00:00:00.05
19:40:25 SQL> 
19:40:25 SQL> -- rpt
19:40:25 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20824

Elapsed: 00:00:00.36
19:40:25 SQL> 
19:40:25 SQL> -- Calc deltas and gains
19:40:25 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.04
19:40:25 SQL> 
19:40:25 SQL> CREATE TABLE q13 COMPRESS AS
19:40:25   2  SELECT
19:40:25   3  pair
19:40:25   4  ,ydate
19:40:25   5  ,prdate
19:40:25   6  ,rnum
19:40:25   7  ,lg4
19:40:25   8  ,lg8
19:40:25   9  ,lg12
19:40:25  10  ,ld4
19:40:25  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:40:25  12  -- step by 1
19:40:25  13  ,clse-lg1 d01
19:40:25  14  ,lg1-lg2	d12
19:40:25  15  ,lg2-lg3	d23
19:40:25  16  ,lg3-lg4	d34
19:40:25  17  ,lg4-lg5	d45
19:40:25  18  ,lg5-lg6	d56
19:40:25  19  ,lg6-lg7	d67
19:40:25  20  ,lg7-lg8	d78
19:40:25  21  ,lg8-lg9	d89
19:40:25  22  -- step by 2
19:40:25  23  ,clse-lg2 d02
19:40:25  24  ,lg2-lg4 d24
19:40:25  25  ,lg4-lg6 d46
19:40:25  26  ,lg6-lg8 d68
19:40:25  27  -- step by 3
19:40:25  28  ,clse-lg3 d03
19:40:25  29  ,lg3-lg6	d36
19:40:25  30  ,lg6-lg9	d69
19:40:25  31  ,lg9-lg12 d912
19:40:25  32  -- step by 4
19:40:25  33  ,clse-lg4 d04
19:40:25  34  ,lg4-lg8	d48
19:40:25  35  ,lg8-lg12 d812
19:40:25  36  ,lg6-lg12 d612
19:40:25  37  ,lg12-lg18 d1218
19:40:25  38  --
19:40:25  39  ,ABS(clse-lg1)dc1
19:40:25  40  ,ABS(clse-lg2)dc2
19:40:25  41  ,ABS(clse-lg3)dc3
19:40:25  42  ,ABS(clse-lg4)dc4
19:40:25  43  ,ABS(clse-lg5)dc5
19:40:25  44  ,ABS(clse-lg6)dc6
19:40:25  45  ,ABS(clse-lg7)dc7
19:40:25  46  ,ABS(clse-lg8)dc8
19:40:25  47  ,ABS(clse-lg9)dc9
19:40:25  48  ,ABS(clse-lg12)dc12
19:40:25  49  ,ABS(clse-lg18)dc18
19:40:25  50  ,ABS(clse-lg24)dc24
19:40:25  51  ,ABS(clse-lg72)dc72
19:40:25  52  ,(ld4-clse) ug4
19:40:25  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:40:25  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:40:25  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:40:25  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:40:25  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:40:25  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:40:25  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:40:25  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:40:25  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:40:25  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:40:25  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:40:25  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:40:25  65  ,0+TO_CHAR(ydate,'D')d
19:40:25  66  ,0+TO_CHAR(ydate,'W')w
19:40:25  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:40:25  68  FROM q11
19:40:25  69  -- I dont want any NULL values from the LAG() functions:
19:40:25  70  WHERE lg72 > 0
19:40:25  71  ORDER BY pair,ydate
19:40:25  72  /

Table created.

Elapsed: 00:00:01.93
19:40:27 SQL> 
19:40:27 SQL> -- rpt
19:40:27 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10272
	-1	    9688

Elapsed: 00:00:00.03
19:40:27 SQL> 
19:40:27 SQL> -- Calc gains and ntiles
19:40:27 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.03
19:40:27 SQL> CREATE TABLE q15 COMPRESS AS
19:40:27   2  SELECT
19:40:27   3  pair
19:40:27   4  ,ydate
19:40:27   5  ,prdate -- Should be unique
19:40:27   6  ,trend -- +1 or -1
19:40:27   7  ,dc12 -- next statement needs this
19:40:27   8  -- Use NTILE() to derive some attributes
19:40:27   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:40:27  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:40:27  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:40:27  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:40:27  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:40:27  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:40:27  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:40:27  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:40:27  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:40:27  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:40:27  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:40:27  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:40:27  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:40:27  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:40:27  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:40:27  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:40:27  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:40:27  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:40:27  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:40:27  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:40:27  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:40:27  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:40:27  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:40:27  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:40:27  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:40:27  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:40:27  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:40:27  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:40:27  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:40:27  38  ,hh    att28
19:40:27  39  ,d     att29
19:40:27  40  ,w     att30
19:40:27  41  ,mpm   att31
19:40:27  42  ,trend att32
19:40:27  43  ,ug4 g4
19:40:27  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:40:27  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:40:27  46  FROM q13
19:40:27  47  ORDER BY pair,ydate
19:40:27  48  /

Table created.

Elapsed: 00:00:03.99
19:40:31 SQL> 
19:40:31 SQL> -- rpt
19:40:31 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:40:31   2  GROUP BY pair,trend,gatt,gattn
19:40:31   3  ORDER BY pair,trend,gatt,gattn
19:40:31   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001485	    1453    .038601912
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup  .00367705	    4171     -.2128946
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003722517	    4320    -.14656632
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
19:40:31 SQL> 
19:40:31 SQL> -- rpt
19:40:31 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-16 19:30:00

Elapsed: 00:00:00.03
19:40:31 SQL> 
19:40:31 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.03
19:40:31 SQL> CREATE TABLE modsrc COMPRESS AS
19:40:31   2  SELECT
19:40:31   3  pair
19:40:31   4  ,ydate
19:40:31   5  ,prdate
19:40:31   6  ,trend
19:40:31   7  ,g4
19:40:31   8  ,gatt
19:40:31   9  ,gattn
19:40:31  10  ,dc12
19:40:31  11  FROM q15
19:40:31  12  /

Table created.

Elapsed: 00:00:00.09
19:40:32 SQL> 
19:40:32 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.26
19:40:32 SQL> 
19:40:32 SQL> -- rpt
19:40:32 SQL> 
19:40:32 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20824

Elapsed: 00:00:00.33
19:40:32 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
19:40:32 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
19:40:32 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
19:40:32 SQL> 
19:40:32 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:40:32   2  GROUP BY pair,trend,gatt,gattn
19:40:32   3  ORDER BY pair,trend,gatt,gattn
19:40:32   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001485	    1453    .038601912
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup  .00367705	    4171     -.2128946
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003722517	    4320    -.14656632
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
19:40:32 SQL> 
19:40:32 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
19:40:32 SQL> CREATE TABLE eur_ms10 COMPRESS AS
19:40:32   2  SELECT
19:40:32   3  ydate
19:40:32   4  ,trend eur_trend
19:40:32   5  ,g4    eur_g4
19:40:32   6  ,gatt  eur_gatt
19:40:32   7  ,gattn eur_gattn
19:40:32   8  FROM modsrc
19:40:32   9  /

Table created.

Elapsed: 00:00:00.06
19:40:32 SQL> 
19:40:32 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
19:40:32 SQL> 
19:40:32 SQL> -- rpt
19:40:32 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:15:01 2010-12-16 18:05:00	10264	  -.0153      .0165
	-1 2010-09-10 19:45:01 2010-12-16 19:30:00	 9648	  -.0164      .0167

Elapsed: 00:00:00.02
19:40:32 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:15:01 2010-12-16 18:05:00	      10272	 -.0153       .0165
	-1 2010-09-10 19:45:01 2010-12-16 19:30:00	       9688	 -.0164       .0167

Elapsed: 00:00:00.02
19:40:32 SQL> 
19:40:32 SQL> -- I need a copy of q15 attributes
19:40:32 SQL> 
19:40:32 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.03
19:40:33 SQL> CREATE TABLE eur_att COMPRESS AS
19:40:33   2  SELECT
19:40:33   3  ydate
19:40:33   4  ,att00 eur_att00
19:40:33   5  ,att01 eur_att01
19:40:33   6  ,att02 eur_att02
19:40:33   7  ,att03 eur_att03
19:40:33   8  ,att04 eur_att04
19:40:33   9  ,att05 eur_att05
19:40:33  10  ,att06 eur_att06
19:40:33  11  ,att07 eur_att07
19:40:33  12  ,att08 eur_att08
19:40:33  13  ,att09 eur_att09
19:40:33  14  ,att10 eur_att10
19:40:33  15  ,att11 eur_att11
19:40:33  16  ,att12 eur_att12
19:40:33  17  ,att13 eur_att13
19:40:33  18  ,att14 eur_att14
19:40:33  19  ,att15 eur_att15
19:40:33  20  ,att16 eur_att16
19:40:33  21  ,att17 eur_att17
19:40:33  22  ,att18 eur_att18
19:40:33  23  ,att19 eur_att19
19:40:33  24  ,att20 eur_att20
19:40:33  25  ,att21 eur_att21
19:40:33  26  ,att22 eur_att22
19:40:33  27  ,att23 eur_att23
19:40:33  28  ,att24 eur_att24
19:40:33  29  ,att25 eur_att25
19:40:33  30  ,att26 eur_att26
19:40:33  31  ,att27 eur_att27
19:40:33  32  ,att28 eur_att28
19:40:33  33  ,att29 eur_att29
19:40:33  34  ,att30 eur_att30
19:40:33  35  ,att31 eur_att31
19:40:33  36  ,att32 eur_att32
19:40:33  37  FROM q15
19:40:33  38  /

Table created.

Elapsed: 00:00:00.13
19:40:33 SQL> 
19:40:33 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
19:40:33 SQL> 
19:40:33 SQL> -- rpt
19:40:33 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19960

Elapsed: 00:00:00.00
19:40:33 SQL> 
19:40:33 SQL> --
19:40:33 SQL> -- aud10.sql
19:40:33 SQL> --
19:40:33 SQL> 
19:40:33 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:40:33 SQL> 
19:40:33 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
19:40:33 SQL> 
19:40:33 SQL> -- I created di5min here:
19:40:33 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:40:33 SQL> 
19:40:33 SQL> CREATE OR REPLACE VIEW q11 AS
19:40:33   2  SELECT
19:40:33   3  pair
19:40:33   4  ,ydate
19:40:33   5  ,prdate
19:40:33   6  ,rownum rnum -- acts as t in my time-series
19:40:33   7  ,clse
19:40:33   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:40:33   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:40:33  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:40:33  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:40:33  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:40:33  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:40:33  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:40:33  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:40:33  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:40:33  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:40:33  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:40:33  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:40:33  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:40:33  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:40:33  22  FROM di5min WHERE pair LIKE'%aud%'
19:40:33  23  ORDER BY ydate
19:40:33  24  /

View created.

Elapsed: 00:00:00.04
19:40:33 SQL> 
19:40:33 SQL> -- rpt
19:40:33 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20821

Elapsed: 00:00:00.35
19:40:34 SQL> 
19:40:34 SQL> -- Calc deltas and gains
19:40:34 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.24
19:40:34 SQL> 
19:40:34 SQL> CREATE TABLE q13 COMPRESS AS
19:40:34   2  SELECT
19:40:34   3  pair
19:40:34   4  ,ydate
19:40:34   5  ,prdate
19:40:34   6  ,rnum
19:40:34   7  ,lg4
19:40:34   8  ,lg8
19:40:34   9  ,lg12
19:40:34  10  ,ld4
19:40:34  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:40:34  12  -- step by 1
19:40:34  13  ,clse-lg1 d01
19:40:34  14  ,lg1-lg2	d12
19:40:34  15  ,lg2-lg3	d23
19:40:34  16  ,lg3-lg4	d34
19:40:34  17  ,lg4-lg5	d45
19:40:34  18  ,lg5-lg6	d56
19:40:34  19  ,lg6-lg7	d67
19:40:34  20  ,lg7-lg8	d78
19:40:34  21  ,lg8-lg9	d89
19:40:34  22  -- step by 2
19:40:34  23  ,clse-lg2 d02
19:40:34  24  ,lg2-lg4 d24
19:40:34  25  ,lg4-lg6 d46
19:40:34  26  ,lg6-lg8 d68
19:40:34  27  -- step by 3
19:40:34  28  ,clse-lg3 d03
19:40:34  29  ,lg3-lg6	d36
19:40:34  30  ,lg6-lg9	d69
19:40:34  31  ,lg9-lg12 d912
19:40:34  32  -- step by 4
19:40:34  33  ,clse-lg4 d04
19:40:34  34  ,lg4-lg8	d48
19:40:34  35  ,lg8-lg12 d812
19:40:34  36  ,lg6-lg12 d612
19:40:34  37  ,lg12-lg18 d1218
19:40:34  38  --
19:40:34  39  ,ABS(clse-lg1)dc1
19:40:34  40  ,ABS(clse-lg2)dc2
19:40:34  41  ,ABS(clse-lg3)dc3
19:40:34  42  ,ABS(clse-lg4)dc4
19:40:34  43  ,ABS(clse-lg5)dc5
19:40:34  44  ,ABS(clse-lg6)dc6
19:40:34  45  ,ABS(clse-lg7)dc7
19:40:34  46  ,ABS(clse-lg8)dc8
19:40:34  47  ,ABS(clse-lg9)dc9
19:40:34  48  ,ABS(clse-lg12)dc12
19:40:34  49  ,ABS(clse-lg18)dc18
19:40:34  50  ,ABS(clse-lg24)dc24
19:40:34  51  ,ABS(clse-lg72)dc72
19:40:34  52  ,(ld4-clse) ug4
19:40:34  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:40:34  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:40:34  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:40:34  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:40:34  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:40:34  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:40:34  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:40:34  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:40:34  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:40:34  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:40:34  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:40:34  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:40:34  65  ,0+TO_CHAR(ydate,'D')d
19:40:34  66  ,0+TO_CHAR(ydate,'W')w
19:40:34  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:40:34  68  FROM q11
19:40:34  69  -- I dont want any NULL values from the LAG() functions:
19:40:34  70  WHERE lg72 > 0
19:40:34  71  ORDER BY pair,ydate
19:40:34  72  /

Table created.

Elapsed: 00:00:01.70
19:40:36 SQL> 
19:40:36 SQL> -- rpt
19:40:36 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10469
	-1	    9488

Elapsed: 00:00:00.03
19:40:36 SQL> 
19:40:36 SQL> -- Calc gains and ntiles
19:40:36 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.14
19:40:36 SQL> CREATE TABLE q15 COMPRESS AS
19:40:36   2  SELECT
19:40:36   3  pair
19:40:36   4  ,ydate
19:40:36   5  ,prdate -- Should be unique
19:40:36   6  ,trend -- +1 or -1
19:40:36   7  ,dc12 -- next statement needs this
19:40:36   8  -- Use NTILE() to derive some attributes
19:40:36   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:40:36  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:40:36  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:40:36  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:40:36  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:40:36  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:40:36  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:40:36  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:40:36  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:40:36  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:40:36  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:40:36  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:40:36  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:40:36  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:40:36  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:40:36  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:40:36  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:40:36  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:40:36  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:40:36  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:40:36  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:40:36  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:40:36  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:40:36  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:40:36  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:40:36  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:40:36  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:40:36  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:40:36  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:40:36  38  ,hh    att28
19:40:36  39  ,d     att29
19:40:36  40  ,w     att30
19:40:36  41  ,mpm   att31
19:40:36  42  ,trend att32
19:40:36  43  ,ug4 g4
19:40:36  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:40:36  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:40:36  46  FROM q13
19:40:36  47  ORDER BY pair,ydate
19:40:36  48  /

Table created.

Elapsed: 00:00:04.03
19:40:40 SQL> 
19:40:40 SQL> -- rpt
19:40:40 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:40:40   2  GROUP BY pair,trend,gatt,gattn
19:40:40   3  ORDER BY pair,trend,gatt,gattn
19:40:40   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002980673	    4332    .024857265
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.9795E-06	    1955    .022883713
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002943046	    4433    -.18080376
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
19:40:40 SQL> 
19:40:40 SQL> -- rpt
19:40:40 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-16 19:30:00

Elapsed: 00:00:00.01
19:40:40 SQL> 
19:40:40 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.19
19:40:40 SQL> CREATE TABLE modsrc COMPRESS AS
19:40:40   2  SELECT
19:40:40   3  pair
19:40:40   4  ,ydate
19:40:40   5  ,prdate
19:40:40   6  ,trend
19:40:40   7  ,g4
19:40:40   8  ,gatt
19:40:40   9  ,gattn
19:40:40  10  ,dc12
19:40:40  11  FROM q15
19:40:40  12  /

Table created.

Elapsed: 00:00:00.08
19:40:40 SQL> 
19:40:40 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
19:40:40 SQL> 
19:40:40 SQL> -- rpt
19:40:40 SQL> 
19:40:40 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.34
19:40:41 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
19:40:41 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
19:40:41 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
19:40:41 SQL> 
19:40:41 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:40:41   2  GROUP BY pair,trend,gatt,gattn
19:40:41   3  ORDER BY pair,trend,gatt,gattn
19:40:41   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002980673	    4332    .024857265
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.9795E-06	    1955    .022883713
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002943046	    4433    -.18080376
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
19:40:41 SQL> 
19:40:41 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
19:40:41 SQL> CREATE TABLE aud_ms10 COMPRESS AS
19:40:41   2  SELECT
19:40:41   3  ydate
19:40:41   4  ,trend aud_trend
19:40:41   5  ,g4    aud_g4
19:40:41   6  ,gatt  aud_gatt
19:40:41   7  ,gattn aud_gattn
19:40:41   8  FROM modsrc
19:40:41   9  /

Table created.

Elapsed: 00:00:00.06
19:40:41 SQL> 
19:40:41 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
19:40:41 SQL> 
19:40:41 SQL> -- rpt
19:40:41 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 19:45:01 2010-12-16 19:20:00	10445	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-16 19:30:00	 9464	   -.017      .0131

Elapsed: 00:00:00.02
19:40:41 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 19:45:01 2010-12-16 19:20:00	      10469	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-16 19:30:00	       9488	  -.017       .0131

Elapsed: 00:00:00.02
19:40:41 SQL> 
19:40:41 SQL> -- I need a copy of q15 attributes
19:40:41 SQL> 
19:40:41 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.03
19:40:41 SQL> CREATE TABLE aud_att COMPRESS AS
19:40:41   2  SELECT
19:40:41   3  ydate
19:40:41   4  ,att00 aud_att00
19:40:41   5  ,att01 aud_att01
19:40:41   6  ,att02 aud_att02
19:40:41   7  ,att03 aud_att03
19:40:41   8  ,att04 aud_att04
19:40:41   9  ,att05 aud_att05
19:40:41  10  ,att06 aud_att06
19:40:41  11  ,att07 aud_att07
19:40:41  12  ,att08 aud_att08
19:40:41  13  ,att09 aud_att09
19:40:41  14  ,att10 aud_att10
19:40:41  15  ,att11 aud_att11
19:40:41  16  ,att12 aud_att12
19:40:41  17  ,att13 aud_att13
19:40:41  18  ,att14 aud_att14
19:40:41  19  ,att15 aud_att15
19:40:41  20  ,att16 aud_att16
19:40:41  21  ,att17 aud_att17
19:40:41  22  ,att18 aud_att18
19:40:41  23  ,att19 aud_att19
19:40:41  24  ,att20 aud_att20
19:40:41  25  ,att21 aud_att21
19:40:41  26  ,att22 aud_att22
19:40:41  27  ,att23 aud_att23
19:40:41  28  ,att24 aud_att24
19:40:41  29  ,att25 aud_att25
19:40:41  30  ,att26 aud_att26
19:40:41  31  ,att27 aud_att27
19:40:41  32  ,att28 aud_att28
19:40:41  33  ,att29 aud_att29
19:40:41  34  ,att30 aud_att30
19:40:41  35  ,att31 aud_att31
19:40:41  36  ,att32 aud_att32
19:40:41  37  FROM q15
19:40:41  38  /

Table created.

Elapsed: 00:00:00.14
19:40:41 SQL> 
19:40:41 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
19:40:42 SQL> 
19:40:42 SQL> -- rpt
19:40:42 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.00
19:40:42 SQL> 
19:40:42 SQL> --
19:40:42 SQL> -- gbp10.sql
19:40:42 SQL> --
19:40:42 SQL> 
19:40:42 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:40:42 SQL> 
19:40:42 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.35
19:40:42 SQL> 
19:40:42 SQL> -- I created di5min here:
19:40:42 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:40:42 SQL> 
19:40:42 SQL> CREATE OR REPLACE VIEW q11 AS
19:40:42   2  SELECT
19:40:42   3  pair
19:40:42   4  ,ydate
19:40:42   5  ,prdate
19:40:42   6  ,rownum rnum -- acts as t in my time-series
19:40:42   7  ,clse
19:40:42   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:40:42   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:40:42  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:40:42  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:40:42  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:40:42  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:40:42  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:40:42  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:40:42  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:40:42  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:40:42  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:40:42  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:40:42  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:40:42  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:40:42  22  FROM di5min WHERE pair LIKE'%gbp%'
19:40:42  23  ORDER BY ydate
19:40:42  24  /

View created.

Elapsed: 00:00:00.06
19:40:42 SQL> 
19:40:42 SQL> -- rpt
19:40:42 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20823

Elapsed: 00:00:00.34
19:40:42 SQL> 
19:40:42 SQL> -- Calc deltas and gains
19:40:42 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.19
19:40:43 SQL> 
19:40:43 SQL> CREATE TABLE q13 COMPRESS AS
19:40:43   2  SELECT
19:40:43   3  pair
19:40:43   4  ,ydate
19:40:43   5  ,prdate
19:40:43   6  ,rnum
19:40:43   7  ,lg4
19:40:43   8  ,lg8
19:40:43   9  ,lg12
19:40:43  10  ,ld4
19:40:43  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:40:43  12  -- step by 1
19:40:43  13  ,clse-lg1 d01
19:40:43  14  ,lg1-lg2	d12
19:40:43  15  ,lg2-lg3	d23
19:40:43  16  ,lg3-lg4	d34
19:40:43  17  ,lg4-lg5	d45
19:40:43  18  ,lg5-lg6	d56
19:40:43  19  ,lg6-lg7	d67
19:40:43  20  ,lg7-lg8	d78
19:40:43  21  ,lg8-lg9	d89
19:40:43  22  -- step by 2
19:40:43  23  ,clse-lg2 d02
19:40:43  24  ,lg2-lg4 d24
19:40:43  25  ,lg4-lg6 d46
19:40:43  26  ,lg6-lg8 d68
19:40:43  27  -- step by 3
19:40:43  28  ,clse-lg3 d03
19:40:43  29  ,lg3-lg6	d36
19:40:43  30  ,lg6-lg9	d69
19:40:43  31  ,lg9-lg12 d912
19:40:43  32  -- step by 4
19:40:43  33  ,clse-lg4 d04
19:40:43  34  ,lg4-lg8	d48
19:40:43  35  ,lg8-lg12 d812
19:40:43  36  ,lg6-lg12 d612
19:40:43  37  ,lg12-lg18 d1218
19:40:43  38  --
19:40:43  39  ,ABS(clse-lg1)dc1
19:40:43  40  ,ABS(clse-lg2)dc2
19:40:43  41  ,ABS(clse-lg3)dc3
19:40:43  42  ,ABS(clse-lg4)dc4
19:40:43  43  ,ABS(clse-lg5)dc5
19:40:43  44  ,ABS(clse-lg6)dc6
19:40:43  45  ,ABS(clse-lg7)dc7
19:40:43  46  ,ABS(clse-lg8)dc8
19:40:43  47  ,ABS(clse-lg9)dc9
19:40:43  48  ,ABS(clse-lg12)dc12
19:40:43  49  ,ABS(clse-lg18)dc18
19:40:43  50  ,ABS(clse-lg24)dc24
19:40:43  51  ,ABS(clse-lg72)dc72
19:40:43  52  ,(ld4-clse) ug4
19:40:43  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:40:43  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:40:43  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:40:43  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:40:43  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:40:43  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:40:43  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:40:43  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:40:43  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:40:43  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:40:43  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:40:43  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:40:43  65  ,0+TO_CHAR(ydate,'D')d
19:40:43  66  ,0+TO_CHAR(ydate,'W')w
19:40:43  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:40:43  68  FROM q11
19:40:43  69  -- I dont want any NULL values from the LAG() functions:
19:40:43  70  WHERE lg72 > 0
19:40:43  71  ORDER BY pair,ydate
19:40:43  72  /

Table created.

Elapsed: 00:00:02.04
19:40:45 SQL> 
19:40:45 SQL> -- rpt
19:40:45 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9696
	-1	   10263

Elapsed: 00:00:00.04
19:40:45 SQL> 
19:40:45 SQL> -- Calc gains and ntiles
19:40:45 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.12
19:40:45 SQL> CREATE TABLE q15 COMPRESS AS
19:40:45   2  SELECT
19:40:45   3  pair
19:40:45   4  ,ydate
19:40:45   5  ,prdate -- Should be unique
19:40:45   6  ,trend -- +1 or -1
19:40:45   7  ,dc12 -- next statement needs this
19:40:45   8  -- Use NTILE() to derive some attributes
19:40:45   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:40:45  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:40:45  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:40:45  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:40:45  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:40:45  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:40:45  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:40:45  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:40:45  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:40:45  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:40:45  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:40:45  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:40:45  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:40:45  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:40:45  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:40:45  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:40:45  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:40:45  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:40:45  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:40:45  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:40:45  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:40:45  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:40:45  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:40:45  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:40:45  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:40:45  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:40:45  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:40:45  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:40:45  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:40:45  38  ,hh    att28
19:40:45  39  ,d     att29
19:40:45  40  ,w     att30
19:40:45  41  ,mpm   att31
19:40:45  42  ,trend att32
19:40:45  43  ,ug4 g4
19:40:45  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:40:45  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:40:45  46  FROM q13
19:40:45  47  ORDER BY pair,ydate
19:40:45  48  /

Table created.

Elapsed: 00:00:04.02
19:40:49 SQL> 
19:40:49 SQL> -- rpt
19:40:49 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:40:49   2  GROUP BY pair,trend,gatt,gattn
19:40:49   3  ORDER BY pair,trend,gatt,gattn
19:40:49   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003120152	    4414    -.08673377
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003586125	    3890    -.16641006
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.05
19:40:49 SQL> 
19:40:49 SQL> -- rpt
19:40:49 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-16 19:30:00

Elapsed: 00:00:00.01
19:40:49 SQL> 
19:40:49 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.20
19:40:49 SQL> CREATE TABLE modsrc COMPRESS AS
19:40:49   2  SELECT
19:40:49   3  pair
19:40:49   4  ,ydate
19:40:49   5  ,prdate
19:40:49   6  ,trend
19:40:49   7  ,g4
19:40:49   8  ,gatt
19:40:49   9  ,gattn
19:40:49  10  ,dc12
19:40:49  11  FROM q15
19:40:49  12  /

Table created.

Elapsed: 00:00:00.08
19:40:49 SQL> 
19:40:49 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
19:40:49 SQL> 
19:40:49 SQL> -- rpt
19:40:49 SQL> 
19:40:49 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20823

Elapsed: 00:00:00.35
19:40:50 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19959

Elapsed: 00:00:00.01
19:40:50 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19959

Elapsed: 00:00:00.00
19:40:50 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19959

Elapsed: 00:00:00.01
19:40:50 SQL> 
19:40:50 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:40:50   2  GROUP BY pair,trend,gatt,gattn
19:40:50   3  ORDER BY pair,trend,gatt,gattn
19:40:50   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003120152	    4414    -.08673377
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003586125	    3890    -.16641006
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
19:40:50 SQL> 
19:40:50 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
19:40:50 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
19:40:50   2  SELECT
19:40:50   3  ydate
19:40:50   4  ,trend gbp_trend
19:40:50   5  ,g4    gbp_g4
19:40:50   6  ,gatt  gbp_gatt
19:40:50   7  ,gattn gbp_gattn
19:40:50   8  FROM modsrc
19:40:50   9  /

Table created.

Elapsed: 00:00:00.08
19:40:50 SQL> 
19:40:50 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
19:40:50 SQL> 
19:40:50 SQL> -- rpt
19:40:50 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 00:05:01 2010-12-16 19:30:00	 9648	  -.0194      .0179
	-1 2010-09-10 19:45:01 2010-12-16 07:30:00	10263	  -.0153      .0159

Elapsed: 00:00:00.02
19:40:50 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 00:05:01 2010-12-16 19:30:00	       9696	 -.0194       .0179
	-1 2010-09-10 19:45:01 2010-12-16 07:30:00	      10263	 -.0153       .0159

Elapsed: 00:00:00.02
19:40:50 SQL> 
19:40:50 SQL> -- I need a copy of q15 attributes
19:40:50 SQL> 
19:40:50 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.03
19:40:50 SQL> CREATE TABLE gbp_att COMPRESS AS
19:40:50   2  SELECT
19:40:50   3  ydate
19:40:50   4  ,att00 gbp_att00
19:40:50   5  ,att01 gbp_att01
19:40:50   6  ,att02 gbp_att02
19:40:50   7  ,att03 gbp_att03
19:40:50   8  ,att04 gbp_att04
19:40:50   9  ,att05 gbp_att05
19:40:50  10  ,att06 gbp_att06
19:40:50  11  ,att07 gbp_att07
19:40:50  12  ,att08 gbp_att08
19:40:50  13  ,att09 gbp_att09
19:40:50  14  ,att10 gbp_att10
19:40:50  15  ,att11 gbp_att11
19:40:50  16  ,att12 gbp_att12
19:40:50  17  ,att13 gbp_att13
19:40:50  18  ,att14 gbp_att14
19:40:50  19  ,att15 gbp_att15
19:40:50  20  ,att16 gbp_att16
19:40:50  21  ,att17 gbp_att17
19:40:50  22  ,att18 gbp_att18
19:40:50  23  ,att19 gbp_att19
19:40:50  24  ,att20 gbp_att20
19:40:50  25  ,att21 gbp_att21
19:40:50  26  ,att22 gbp_att22
19:40:50  27  ,att23 gbp_att23
19:40:50  28  ,att24 gbp_att24
19:40:50  29  ,att25 gbp_att25
19:40:50  30  ,att26 gbp_att26
19:40:50  31  ,att27 gbp_att27
19:40:50  32  ,att28 gbp_att28
19:40:50  33  ,att29 gbp_att29
19:40:50  34  ,att30 gbp_att30
19:40:50  35  ,att31 gbp_att31
19:40:50  36  ,att32 gbp_att32
19:40:50  37  FROM q15
19:40:50  38  /

Table created.

Elapsed: 00:00:00.14
19:40:50 SQL> 
19:40:50 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.39
19:40:51 SQL> 
19:40:51 SQL> -- rpt
19:40:51 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19959

Elapsed: 00:00:00.00
19:40:51 SQL> 
19:40:51 SQL> --
19:40:51 SQL> -- jpy10.sql
19:40:51 SQL> --
19:40:51 SQL> 
19:40:51 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:40:51 SQL> 
19:40:51 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.32
19:40:51 SQL> 
19:40:51 SQL> -- I created di5min here:
19:40:51 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:40:51 SQL> 
19:40:51 SQL> CREATE OR REPLACE VIEW q11 AS
19:40:51   2  SELECT
19:40:51   3  pair
19:40:51   4  ,ydate
19:40:51   5  ,prdate
19:40:51   6  ,rownum rnum -- acts as t in my time-series
19:40:51   7  ,clse
19:40:51   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:40:51   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:40:51  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:40:51  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:40:51  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:40:51  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:40:51  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:40:51  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:40:51  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:40:51  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:40:51  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:40:51  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:40:51  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:40:51  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:40:51  22  FROM di5min WHERE pair LIKE'%jpy%'
19:40:51  23  ORDER BY ydate
19:40:51  24  /

View created.

Elapsed: 00:00:00.04
19:40:51 SQL> 
19:40:51 SQL> -- rpt
19:40:51 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20825

Elapsed: 00:00:00.34
19:40:51 SQL> 
19:40:51 SQL> -- Calc deltas and gains
19:40:51 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.16
19:40:52 SQL> 
19:40:52 SQL> CREATE TABLE q13 COMPRESS AS
19:40:52   2  SELECT
19:40:52   3  pair
19:40:52   4  ,ydate
19:40:52   5  ,prdate
19:40:52   6  ,rnum
19:40:52   7  ,lg4
19:40:52   8  ,lg8
19:40:52   9  ,lg12
19:40:52  10  ,ld4
19:40:52  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:40:52  12  -- step by 1
19:40:52  13  ,clse-lg1 d01
19:40:52  14  ,lg1-lg2	d12
19:40:52  15  ,lg2-lg3	d23
19:40:52  16  ,lg3-lg4	d34
19:40:52  17  ,lg4-lg5	d45
19:40:52  18  ,lg5-lg6	d56
19:40:52  19  ,lg6-lg7	d67
19:40:52  20  ,lg7-lg8	d78
19:40:52  21  ,lg8-lg9	d89
19:40:52  22  -- step by 2
19:40:52  23  ,clse-lg2 d02
19:40:52  24  ,lg2-lg4 d24
19:40:52  25  ,lg4-lg6 d46
19:40:52  26  ,lg6-lg8 d68
19:40:52  27  -- step by 3
19:40:52  28  ,clse-lg3 d03
19:40:52  29  ,lg3-lg6	d36
19:40:52  30  ,lg6-lg9	d69
19:40:52  31  ,lg9-lg12 d912
19:40:52  32  -- step by 4
19:40:52  33  ,clse-lg4 d04
19:40:52  34  ,lg4-lg8	d48
19:40:52  35  ,lg8-lg12 d812
19:40:52  36  ,lg6-lg12 d612
19:40:52  37  ,lg12-lg18 d1218
19:40:52  38  --
19:40:52  39  ,ABS(clse-lg1)dc1
19:40:52  40  ,ABS(clse-lg2)dc2
19:40:52  41  ,ABS(clse-lg3)dc3
19:40:52  42  ,ABS(clse-lg4)dc4
19:40:52  43  ,ABS(clse-lg5)dc5
19:40:52  44  ,ABS(clse-lg6)dc6
19:40:52  45  ,ABS(clse-lg7)dc7
19:40:52  46  ,ABS(clse-lg8)dc8
19:40:52  47  ,ABS(clse-lg9)dc9
19:40:52  48  ,ABS(clse-lg12)dc12
19:40:52  49  ,ABS(clse-lg18)dc18
19:40:52  50  ,ABS(clse-lg24)dc24
19:40:52  51  ,ABS(clse-lg72)dc72
19:40:52  52  ,(ld4-clse) ug4
19:40:52  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:40:52  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:40:52  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:40:52  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:40:52  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:40:52  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:40:52  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:40:52  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:40:52  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:40:52  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:40:52  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:40:52  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:40:52  65  ,0+TO_CHAR(ydate,'D')d
19:40:52  66  ,0+TO_CHAR(ydate,'W')w
19:40:52  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:40:52  68  FROM q11
19:40:52  69  -- I dont want any NULL values from the LAG() functions:
19:40:52  70  WHERE lg72 > 0
19:40:52  71  ORDER BY pair,ydate
19:40:52  72  /

Table created.

Elapsed: 00:00:01.66
19:40:53 SQL> 
19:40:53 SQL> -- rpt
19:40:53 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9292
	-1	   10669

Elapsed: 00:00:00.03
19:40:53 SQL> 
19:40:53 SQL> -- Calc gains and ntiles
19:40:53 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.19
19:40:54 SQL> CREATE TABLE q15 COMPRESS AS
19:40:54   2  SELECT
19:40:54   3  pair
19:40:54   4  ,ydate
19:40:54   5  ,prdate -- Should be unique
19:40:54   6  ,trend -- +1 or -1
19:40:54   7  ,dc12 -- next statement needs this
19:40:54   8  -- Use NTILE() to derive some attributes
19:40:54   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:40:54  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:40:54  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:40:54  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:40:54  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:40:54  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:40:54  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:40:54  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:40:54  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:40:54  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:40:54  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:40:54  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:40:54  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:40:54  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:40:54  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:40:54  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:40:54  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:40:54  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:40:54  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:40:54  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:40:54  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:40:54  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:40:54  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:40:54  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:40:54  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:40:54  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:40:54  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:40:54  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:40:54  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:40:54  38  ,hh    att28
19:40:54  39  ,d     att29
19:40:54  40  ,w     att30
19:40:54  41  ,mpm   att31
19:40:54  42  ,trend att32
19:40:54  43  ,ug4 g4
19:40:54  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:40:54  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:40:54  46  FROM q13
19:40:54  47  ORDER BY pair,ydate
19:40:54  48  /

Table created.

Elapsed: 00:00:04.02
19:40:58 SQL> 
19:40:58 SQL> -- rpt
19:40:58 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:40:58   2  GROUP BY pair,trend,gatt,gattn
19:40:58   3  ORDER BY pair,trend,gatt,gattn
19:40:58   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13693752	    5178     .02198879
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     169
usd_jpy 	 1 nup up  -.13370788	    4986    -.01804834
usd_jpy 	 1 up  nup .151870744	    4112    .184228085
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
19:40:58 SQL> 
19:40:58 SQL> -- rpt
19:40:58 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-16 19:35:00

Elapsed: 00:00:00.01
19:40:58 SQL> 
19:40:58 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.19
19:40:58 SQL> CREATE TABLE modsrc COMPRESS AS
19:40:58   2  SELECT
19:40:58   3  pair
19:40:58   4  ,ydate
19:40:58   5  ,prdate
19:40:58   6  ,trend
19:40:58   7  ,g4
19:40:58   8  ,gatt
19:40:58   9  ,gattn
19:40:58  10  ,dc12
19:40:58  11  FROM q15
19:40:58  12  /

Table created.

Elapsed: 00:00:00.09
19:40:58 SQL> 
19:40:58 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
19:40:58 SQL> 
19:40:58 SQL> -- rpt
19:40:58 SQL> 
19:40:58 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20825

Elapsed: 00:00:00.35
19:40:58 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
19:40:58 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.01
19:40:58 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
19:40:58 SQL> 
19:40:58 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:40:58   2  GROUP BY pair,trend,gatt,gattn
19:40:58   3  ORDER BY pair,trend,gatt,gattn
19:40:58   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13693752	    5178     .02198879
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     169
usd_jpy 	 1 nup up  -.13370788	    4986    -.01804834
usd_jpy 	 1 up  nup .151870744	    4112    .184228085
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
19:40:58 SQL> 
19:40:58 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
19:40:59 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
19:40:59   2  SELECT
19:40:59   3  ydate
19:40:59   4  ,trend jpy_trend
19:40:59   5  ,g4    jpy_g4
19:40:59   6  ,gatt  jpy_gatt
19:40:59   7  ,gattn jpy_gattn
19:40:59   8  FROM modsrc
19:40:59   9  /

Table created.

Elapsed: 00:00:00.07
19:40:59 SQL> 
19:40:59 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
19:40:59 SQL> 
19:40:59 SQL> -- rpt
19:40:59 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 19:45:01 2010-12-16 18:25:00	 9267	   -1.07	1.5
	-1 2010-09-12 23:35:01 2010-12-16 19:35:00	10646	 -1.0775       1.99

Elapsed: 00:00:00.02
19:40:59 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 19:45:01 2010-12-16 18:25:00	       9292	  -1.07 	1.5
	-1 2010-09-12 23:35:01 2010-12-16 19:35:00	      10669	-1.0775        1.99

Elapsed: 00:00:00.01
19:40:59 SQL> 
19:40:59 SQL> -- I need a copy of q15 attributes
19:40:59 SQL> 
19:40:59 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.03
19:40:59 SQL> CREATE TABLE jpy_att COMPRESS AS
19:40:59   2  SELECT
19:40:59   3  ydate
19:40:59   4  ,att00 jpy_att00
19:40:59   5  ,att01 jpy_att01
19:40:59   6  ,att02 jpy_att02
19:40:59   7  ,att03 jpy_att03
19:40:59   8  ,att04 jpy_att04
19:40:59   9  ,att05 jpy_att05
19:40:59  10  ,att06 jpy_att06
19:40:59  11  ,att07 jpy_att07
19:40:59  12  ,att08 jpy_att08
19:40:59  13  ,att09 jpy_att09
19:40:59  14  ,att10 jpy_att10
19:40:59  15  ,att11 jpy_att11
19:40:59  16  ,att12 jpy_att12
19:40:59  17  ,att13 jpy_att13
19:40:59  18  ,att14 jpy_att14
19:40:59  19  ,att15 jpy_att15
19:40:59  20  ,att16 jpy_att16
19:40:59  21  ,att17 jpy_att17
19:40:59  22  ,att18 jpy_att18
19:40:59  23  ,att19 jpy_att19
19:40:59  24  ,att20 jpy_att20
19:40:59  25  ,att21 jpy_att21
19:40:59  26  ,att22 jpy_att22
19:40:59  27  ,att23 jpy_att23
19:40:59  28  ,att24 jpy_att24
19:40:59  29  ,att25 jpy_att25
19:40:59  30  ,att26 jpy_att26
19:40:59  31  ,att27 jpy_att27
19:40:59  32  ,att28 jpy_att28
19:40:59  33  ,att29 jpy_att29
19:40:59  34  ,att30 jpy_att30
19:40:59  35  ,att31 jpy_att31
19:40:59  36  ,att32 jpy_att32
19:40:59  37  FROM q15
19:40:59  38  /

Table created.

Elapsed: 00:00:00.13
19:40:59 SQL> 
19:40:59 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
19:40:59 SQL> 
19:40:59 SQL> -- rpt
19:40:59 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19961

Elapsed: 00:00:00.00
19:40:59 SQL> 
19:40:59 SQL> --
19:40:59 SQL> -- cad10.sql
19:40:59 SQL> --
19:40:59 SQL> 
19:40:59 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:40:59 SQL> 
19:40:59 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.33
19:41:00 SQL> 
19:41:00 SQL> -- I created di5min here:
19:41:00 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:41:00 SQL> 
19:41:00 SQL> CREATE OR REPLACE VIEW q11 AS
19:41:00   2  SELECT
19:41:00   3  pair
19:41:00   4  ,ydate
19:41:00   5  ,prdate
19:41:00   6  ,rownum rnum -- acts as t in my time-series
19:41:00   7  ,clse
19:41:00   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:41:00   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:41:00  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:41:00  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:41:00  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:41:00  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:41:00  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:41:00  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:41:00  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:41:00  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:41:00  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:41:00  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:41:00  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:41:00  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:41:00  22  FROM di5min WHERE pair LIKE'%cad%'
19:41:00  23  ORDER BY ydate
19:41:00  24  /

View created.

Elapsed: 00:00:00.04
19:41:00 SQL> 
19:41:00 SQL> -- rpt
19:41:00 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20820

Elapsed: 00:00:00.35
19:41:00 SQL> 
19:41:00 SQL> -- Calc deltas and gains
19:41:00 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.15
19:41:00 SQL> 
19:41:00 SQL> CREATE TABLE q13 COMPRESS AS
19:41:00   2  SELECT
19:41:00   3  pair
19:41:00   4  ,ydate
19:41:00   5  ,prdate
19:41:00   6  ,rnum
19:41:00   7  ,lg4
19:41:00   8  ,lg8
19:41:00   9  ,lg12
19:41:00  10  ,ld4
19:41:00  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:41:00  12  -- step by 1
19:41:00  13  ,clse-lg1 d01
19:41:00  14  ,lg1-lg2	d12
19:41:00  15  ,lg2-lg3	d23
19:41:00  16  ,lg3-lg4	d34
19:41:00  17  ,lg4-lg5	d45
19:41:00  18  ,lg5-lg6	d56
19:41:00  19  ,lg6-lg7	d67
19:41:00  20  ,lg7-lg8	d78
19:41:00  21  ,lg8-lg9	d89
19:41:00  22  -- step by 2
19:41:00  23  ,clse-lg2 d02
19:41:00  24  ,lg2-lg4 d24
19:41:00  25  ,lg4-lg6 d46
19:41:00  26  ,lg6-lg8 d68
19:41:00  27  -- step by 3
19:41:00  28  ,clse-lg3 d03
19:41:00  29  ,lg3-lg6	d36
19:41:00  30  ,lg6-lg9	d69
19:41:00  31  ,lg9-lg12 d912
19:41:00  32  -- step by 4
19:41:00  33  ,clse-lg4 d04
19:41:00  34  ,lg4-lg8	d48
19:41:00  35  ,lg8-lg12 d812
19:41:00  36  ,lg6-lg12 d612
19:41:00  37  ,lg12-lg18 d1218
19:41:00  38  --
19:41:00  39  ,ABS(clse-lg1)dc1
19:41:00  40  ,ABS(clse-lg2)dc2
19:41:00  41  ,ABS(clse-lg3)dc3
19:41:00  42  ,ABS(clse-lg4)dc4
19:41:00  43  ,ABS(clse-lg5)dc5
19:41:00  44  ,ABS(clse-lg6)dc6
19:41:00  45  ,ABS(clse-lg7)dc7
19:41:00  46  ,ABS(clse-lg8)dc8
19:41:00  47  ,ABS(clse-lg9)dc9
19:41:00  48  ,ABS(clse-lg12)dc12
19:41:00  49  ,ABS(clse-lg18)dc18
19:41:00  50  ,ABS(clse-lg24)dc24
19:41:00  51  ,ABS(clse-lg72)dc72
19:41:00  52  ,(ld4-clse) ug4
19:41:00  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:41:00  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:41:00  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:41:00  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:41:00  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:41:00  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:41:00  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:41:00  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:41:00  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:41:00  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:41:00  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:41:00  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:41:00  65  ,0+TO_CHAR(ydate,'D')d
19:41:00  66  ,0+TO_CHAR(ydate,'W')w
19:41:00  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:41:00  68  FROM q11
19:41:00  69  -- I dont want any NULL values from the LAG() functions:
19:41:00  70  WHERE lg72 > 0
19:41:00  71  ORDER BY pair,ydate
19:41:00  72  /

Table created.

Elapsed: 00:00:01.71
19:41:02 SQL> 
19:41:02 SQL> -- rpt
19:41:02 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9019
	-1	   10937

Elapsed: 00:00:00.04
19:41:02 SQL> 
19:41:02 SQL> -- Calc gains and ntiles
19:41:02 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.12
19:41:02 SQL> CREATE TABLE q15 COMPRESS AS
19:41:02   2  SELECT
19:41:02   3  pair
19:41:02   4  ,ydate
19:41:02   5  ,prdate -- Should be unique
19:41:02   6  ,trend -- +1 or -1
19:41:02   7  ,dc12 -- next statement needs this
19:41:02   8  -- Use NTILE() to derive some attributes
19:41:02   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:41:02  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:41:02  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:41:02  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:41:02  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:41:02  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:41:02  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:41:02  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:41:02  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:41:02  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:41:02  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:41:02  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:41:02  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:41:02  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:41:02  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:41:02  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:41:02  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:41:02  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:41:02  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:41:02  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:41:02  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:41:02  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:41:02  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:41:02  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:41:02  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:41:02  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:41:02  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:41:02  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:41:02  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:41:02  38  ,hh    att28
19:41:02  39  ,d     att29
19:41:02  40  ,w     att30
19:41:02  41  ,mpm   att31
19:41:02  42  ,trend att32
19:41:02  43  ,ug4 g4
19:41:02  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:41:02  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:41:02  46  FROM q13
19:41:02  47  ORDER BY pair,ydate
19:41:02  48  /

Table created.

Elapsed: 00:00:03.93
19:41:06 SQL> 
19:41:06 SQL> -- rpt
19:41:06 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:41:06   2  GROUP BY pair,trend,gatt,gattn
19:41:06   3  ORDER BY pair,trend,gatt,gattn
19:41:06   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	 1 nup nup -.00001464	    2060    -.06532275
usd_cad 	 1 nup up  -.00238848	    3851    .000136259
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
19:41:06 SQL> 
19:41:06 SQL> -- rpt
19:41:06 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-16 19:30:00

Elapsed: 00:00:00.01
19:41:06 SQL> 
19:41:06 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
19:41:06 SQL> CREATE TABLE modsrc COMPRESS AS
19:41:06   2  SELECT
19:41:06   3  pair
19:41:06   4  ,ydate
19:41:06   5  ,prdate
19:41:06   6  ,trend
19:41:06   7  ,g4
19:41:06   8  ,gatt
19:41:06   9  ,gattn
19:41:06  10  ,dc12
19:41:06  11  FROM q15
19:41:06  12  /

Table created.

Elapsed: 00:00:00.09
19:41:06 SQL> 
19:41:06 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.23
19:41:07 SQL> 
19:41:07 SQL> -- rpt
19:41:07 SQL> 
19:41:07 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20820

Elapsed: 00:00:00.34
19:41:07 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19956

Elapsed: 00:00:00.01
19:41:07 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19956

Elapsed: 00:00:00.01
19:41:07 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19956

Elapsed: 00:00:00.00
19:41:07 SQL> 
19:41:07 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:41:07   2  GROUP BY pair,trend,gatt,gattn
19:41:07   3  ORDER BY pair,trend,gatt,gattn
19:41:07   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	 1 nup nup -.00001464	    2060    -.06532275
usd_cad 	 1 nup up  -.00238848	    3851    .000136259
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
19:41:07 SQL> 
19:41:07 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
19:41:07 SQL> CREATE TABLE cad_ms10 COMPRESS AS
19:41:07   2  SELECT
19:41:07   3  ydate
19:41:07   4  ,trend cad_trend
19:41:07   5  ,g4    cad_g4
19:41:07   6  ,gatt  cad_gatt
19:41:07   7  ,gattn cad_gattn
19:41:07   8  FROM modsrc
19:41:07   9  /

Table created.

Elapsed: 00:00:00.06
19:41:07 SQL> 
19:41:07 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
19:41:07 SQL> 
19:41:07 SQL> -- rpt
19:41:07 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 19:45:01 2010-12-16 19:30:00	 8971	  -.0089      .0151
	-1 2010-09-12 23:30:01 2010-12-16 14:45:00	10937	  -.0107      .0147

Elapsed: 00:00:00.02
19:41:07 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 19:45:01 2010-12-16 19:30:00	       9019	 -.0089       .0151
	-1 2010-09-12 23:30:01 2010-12-16 14:45:00	      10937	 -.0107       .0147

Elapsed: 00:00:00.02
19:41:07 SQL> 
19:41:07 SQL> -- I need a copy of q15 attributes
19:41:07 SQL> 
19:41:07 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.03
19:41:07 SQL> CREATE TABLE cad_att COMPRESS AS
19:41:07   2  SELECT
19:41:07   3  ydate
19:41:07   4  ,att00 cad_att00
19:41:07   5  ,att01 cad_att01
19:41:07   6  ,att02 cad_att02
19:41:07   7  ,att03 cad_att03
19:41:07   8  ,att04 cad_att04
19:41:07   9  ,att05 cad_att05
19:41:07  10  ,att06 cad_att06
19:41:07  11  ,att07 cad_att07
19:41:07  12  ,att08 cad_att08
19:41:07  13  ,att09 cad_att09
19:41:07  14  ,att10 cad_att10
19:41:07  15  ,att11 cad_att11
19:41:07  16  ,att12 cad_att12
19:41:07  17  ,att13 cad_att13
19:41:07  18  ,att14 cad_att14
19:41:07  19  ,att15 cad_att15
19:41:07  20  ,att16 cad_att16
19:41:07  21  ,att17 cad_att17
19:41:07  22  ,att18 cad_att18
19:41:07  23  ,att19 cad_att19
19:41:07  24  ,att20 cad_att20
19:41:07  25  ,att21 cad_att21
19:41:07  26  ,att22 cad_att22
19:41:07  27  ,att23 cad_att23
19:41:07  28  ,att24 cad_att24
19:41:07  29  ,att25 cad_att25
19:41:07  30  ,att26 cad_att26
19:41:07  31  ,att27 cad_att27
19:41:07  32  ,att28 cad_att28
19:41:07  33  ,att29 cad_att29
19:41:07  34  ,att30 cad_att30
19:41:07  35  ,att31 cad_att31
19:41:07  36  ,att32 cad_att32
19:41:07  37  FROM q15
19:41:07  38  /

Table created.

Elapsed: 00:00:00.13
19:41:07 SQL> 
19:41:07 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.41
19:41:08 SQL> 
19:41:08 SQL> -- rpt
19:41:08 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19956

Elapsed: 00:00:00.00
19:41:08 SQL> 
19:41:08 SQL> --
19:41:08 SQL> -- chf10.sql
19:41:08 SQL> --
19:41:08 SQL> 
19:41:08 SQL> -- Creates views and tables for backtesting a forex SVM strategy
19:41:08 SQL> 
19:41:08 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.33
19:41:08 SQL> 
19:41:08 SQL> -- I created di5min here:
19:41:08 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
19:41:08 SQL> 
19:41:08 SQL> CREATE OR REPLACE VIEW q11 AS
19:41:08   2  SELECT
19:41:08   3  pair
19:41:08   4  ,ydate
19:41:08   5  ,prdate
19:41:08   6  ,rownum rnum -- acts as t in my time-series
19:41:08   7  ,clse
19:41:08   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
19:41:08   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
19:41:08  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
19:41:08  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
19:41:08  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
19:41:08  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
19:41:08  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
19:41:08  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
19:41:08  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
19:41:08  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
19:41:08  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
19:41:08  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
19:41:08  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
19:41:08  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
19:41:08  22  FROM di5min WHERE pair LIKE'%chf%'
19:41:08  23  ORDER BY ydate
19:41:08  24  /

View created.

Elapsed: 00:00:00.04
19:41:08 SQL> 
19:41:08 SQL> -- rpt
19:41:08 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20823

Elapsed: 00:00:00.35
19:41:09 SQL> 
19:41:09 SQL> -- Calc deltas and gains
19:41:09 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.18
19:41:09 SQL> 
19:41:09 SQL> CREATE TABLE q13 COMPRESS AS
19:41:09   2  SELECT
19:41:09   3  pair
19:41:09   4  ,ydate
19:41:09   5  ,prdate
19:41:09   6  ,rnum
19:41:09   7  ,lg4
19:41:09   8  ,lg8
19:41:09   9  ,lg12
19:41:09  10  ,ld4
19:41:09  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
19:41:09  12  -- step by 1
19:41:09  13  ,clse-lg1 d01
19:41:09  14  ,lg1-lg2	d12
19:41:09  15  ,lg2-lg3	d23
19:41:09  16  ,lg3-lg4	d34
19:41:09  17  ,lg4-lg5	d45
19:41:09  18  ,lg5-lg6	d56
19:41:09  19  ,lg6-lg7	d67
19:41:09  20  ,lg7-lg8	d78
19:41:09  21  ,lg8-lg9	d89
19:41:09  22  -- step by 2
19:41:09  23  ,clse-lg2 d02
19:41:09  24  ,lg2-lg4 d24
19:41:09  25  ,lg4-lg6 d46
19:41:09  26  ,lg6-lg8 d68
19:41:09  27  -- step by 3
19:41:09  28  ,clse-lg3 d03
19:41:09  29  ,lg3-lg6	d36
19:41:09  30  ,lg6-lg9	d69
19:41:09  31  ,lg9-lg12 d912
19:41:09  32  -- step by 4
19:41:09  33  ,clse-lg4 d04
19:41:09  34  ,lg4-lg8	d48
19:41:09  35  ,lg8-lg12 d812
19:41:09  36  ,lg6-lg12 d612
19:41:09  37  ,lg12-lg18 d1218
19:41:09  38  --
19:41:09  39  ,ABS(clse-lg1)dc1
19:41:09  40  ,ABS(clse-lg2)dc2
19:41:09  41  ,ABS(clse-lg3)dc3
19:41:09  42  ,ABS(clse-lg4)dc4
19:41:09  43  ,ABS(clse-lg5)dc5
19:41:09  44  ,ABS(clse-lg6)dc6
19:41:09  45  ,ABS(clse-lg7)dc7
19:41:09  46  ,ABS(clse-lg8)dc8
19:41:09  47  ,ABS(clse-lg9)dc9
19:41:09  48  ,ABS(clse-lg12)dc12
19:41:09  49  ,ABS(clse-lg18)dc18
19:41:09  50  ,ABS(clse-lg24)dc24
19:41:09  51  ,ABS(clse-lg72)dc72
19:41:09  52  ,(ld4-clse) ug4
19:41:09  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
19:41:09  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
19:41:09  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
19:41:09  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
19:41:09  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
19:41:09  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
19:41:09  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
19:41:09  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
19:41:09  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
19:41:09  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
19:41:09  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
19:41:09  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
19:41:09  65  ,0+TO_CHAR(ydate,'D')d
19:41:09  66  ,0+TO_CHAR(ydate,'W')w
19:41:09  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
19:41:09  68  FROM q11
19:41:09  69  -- I dont want any NULL values from the LAG() functions:
19:41:09  70  WHERE lg72 > 0
19:41:09  71  ORDER BY pair,ydate
19:41:09  72  /

Table created.

Elapsed: 00:00:01.70
19:41:10 SQL> 
19:41:10 SQL> -- rpt
19:41:10 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9320
	-1	   10639

Elapsed: 00:00:00.03
19:41:10 SQL> 
19:41:10 SQL> -- Calc gains and ntiles
19:41:10 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
19:41:11 SQL> CREATE TABLE q15 COMPRESS AS
19:41:11   2  SELECT
19:41:11   3  pair
19:41:11   4  ,ydate
19:41:11   5  ,prdate -- Should be unique
19:41:11   6  ,trend -- +1 or -1
19:41:11   7  ,dc12 -- next statement needs this
19:41:11   8  -- Use NTILE() to derive some attributes
19:41:11   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
19:41:11  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
19:41:11  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
19:41:11  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
19:41:11  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
19:41:11  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
19:41:11  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
19:41:11  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
19:41:11  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
19:41:11  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
19:41:11  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
19:41:11  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
19:41:11  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
19:41:11  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
19:41:11  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
19:41:11  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
19:41:11  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
19:41:11  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
19:41:11  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
19:41:11  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
19:41:11  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
19:41:11  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
19:41:11  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
19:41:11  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
19:41:11  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
19:41:11  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
19:41:11  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
19:41:11  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
19:41:11  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
19:41:11  38  ,hh    att28
19:41:11  39  ,d     att29
19:41:11  40  ,w     att30
19:41:11  41  ,mpm   att31
19:41:11  42  ,trend att32
19:41:11  43  ,ug4 g4
19:41:11  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
19:41:11  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
19:41:11  46  FROM q13
19:41:11  47  ORDER BY pair,ydate
19:41:11  48  /

Table created.

Elapsed: 00:00:04.33
19:41:15 SQL> 
19:41:15 SQL> -- rpt
19:41:15 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
19:41:15   2  GROUP BY pair,trend,gatt,gattn
19:41:15   3  ORDER BY pair,trend,gatt,gattn
19:41:15   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032338	    2654    .041532759
usd_chf 	-1 nup up  -.00292334	    3907    .063124151
usd_chf 	-1 up  nup .002644479	    4053    -.11979029
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00253267	    3839    .112020105
usd_chf 	 1 up  nup .002433841	    3232     -.1606913
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
19:41:15 SQL> 
19:41:15 SQL> -- rpt
19:41:15 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-16 19:30:00

Elapsed: 00:00:00.01
19:41:15 SQL> 
19:41:15 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.24
19:41:15 SQL> CREATE TABLE modsrc COMPRESS AS
19:41:15   2  SELECT
19:41:15   3  pair
19:41:15   4  ,ydate
19:41:15   5  ,prdate
19:41:15   6  ,trend
19:41:15   7  ,g4
19:41:15   8  ,gatt
19:41:15   9  ,gattn
19:41:15  10  ,dc12
19:41:15  11  FROM q15
19:41:15  12  /

Table created.

Elapsed: 00:00:00.09
19:41:15 SQL> 
19:41:15 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
19:41:16 SQL> 
19:41:16 SQL> -- rpt
19:41:16 SQL> 
19:41:16 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20823

Elapsed: 00:00:00.34
19:41:16 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19959

Elapsed: 00:00:00.01
19:41:16 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19959

Elapsed: 00:00:00.01
19:41:16 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19959

Elapsed: 00:00:00.00
19:41:16 SQL> 
19:41:16 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
19:41:16   2  GROUP BY pair,trend,gatt,gattn
19:41:16   3  ORDER BY pair,trend,gatt,gattn
19:41:16   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000032338	    2654    .041532759
usd_chf 	-1 nup up  -.00292334	    3907    .063124151
usd_chf 	-1 up  nup .002644479	    4053    -.11979029
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00253267	    3839    .112020105
usd_chf 	 1 up  nup .002433841	    3232     -.1606913
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
19:41:16 SQL> 
19:41:16 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
19:41:16 SQL> CREATE TABLE chf_ms10 COMPRESS AS
19:41:16   2  SELECT
19:41:16   3  ydate
19:41:16   4  ,trend chf_trend
19:41:16   5  ,g4    chf_g4
19:41:16   6  ,gatt  chf_gatt
19:41:16   7  ,gattn chf_gattn
19:41:16   8  FROM modsrc
19:41:16   9  /

Table created.

Elapsed: 00:00:00.07
19:41:16 SQL> 
19:41:16 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
19:41:16 SQL> 
19:41:16 SQL> -- rpt
19:41:16 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	 9297	  -.0176     .01365
	-1 2010-09-10 19:45:01 2010-12-16 19:30:00	10614	  -.0166      .0149

Elapsed: 00:00:00.02
19:41:16 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	       9320	 -.0176      .01365
	-1 2010-09-10 19:45:01 2010-12-16 19:30:00	      10639	 -.0166       .0149

Elapsed: 00:00:00.01
19:41:16 SQL> 
19:41:16 SQL> -- I need a copy of q15 attributes
19:41:16 SQL> 
19:41:16 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.03
19:41:16 SQL> CREATE TABLE chf_att COMPRESS AS
19:41:16   2  SELECT
19:41:16   3  ydate
19:41:16   4  ,att00 chf_att00
19:41:16   5  ,att01 chf_att01
19:41:16   6  ,att02 chf_att02
19:41:16   7  ,att03 chf_att03
19:41:16   8  ,att04 chf_att04
19:41:16   9  ,att05 chf_att05
19:41:16  10  ,att06 chf_att06
19:41:16  11  ,att07 chf_att07
19:41:16  12  ,att08 chf_att08
19:41:16  13  ,att09 chf_att09
19:41:16  14  ,att10 chf_att10
19:41:16  15  ,att11 chf_att11
19:41:16  16  ,att12 chf_att12
19:41:16  17  ,att13 chf_att13
19:41:16  18  ,att14 chf_att14
19:41:16  19  ,att15 chf_att15
19:41:16  20  ,att16 chf_att16
19:41:16  21  ,att17 chf_att17
19:41:16  22  ,att18 chf_att18
19:41:16  23  ,att19 chf_att19
19:41:16  24  ,att20 chf_att20
19:41:16  25  ,att21 chf_att21
19:41:16  26  ,att22 chf_att22
19:41:16  27  ,att23 chf_att23
19:41:16  28  ,att24 chf_att24
19:41:16  29  ,att25 chf_att25
19:41:16  30  ,att26 chf_att26
19:41:16  31  ,att27 chf_att27
19:41:16  32  ,att28 chf_att28
19:41:16  33  ,att29 chf_att29
19:41:16  34  ,att30 chf_att30
19:41:16  35  ,att31 chf_att31
19:41:16  36  ,att32 chf_att32
19:41:16  37  FROM q15
19:41:16  38  /

Table created.

Elapsed: 00:00:00.14
19:41:16 SQL> 
19:41:16 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
19:41:17 SQL> 
19:41:17 SQL> -- rpt
19:41:17 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19959

Elapsed: 00:00:00.01
19:41:17 SQL> 
19:41:17 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
