
SQL*Plus: Release 11.2.0.1.0 Production on Fri Dec 17 20:44:36 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

20:44:36 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
20:44:36 SQL> 20:44:36 SQL> --
20:44:36 SQL> -- eur10.sql
20:44:36 SQL> --
20:44:36 SQL> 
20:44:36 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:44:36 SQL> 
20:44:36 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.01
20:44:36 SQL> 
20:44:36 SQL> -- I created di5min here:
20:44:36 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:44:36 SQL> 
20:44:36 SQL> CREATE OR REPLACE VIEW q11 AS
20:44:36   2  SELECT
20:44:36   3  pair
20:44:36   4  ,ydate
20:44:36   5  ,prdate
20:44:36   6  ,rownum rnum -- acts as t in my time-series
20:44:36   7  ,clse
20:44:36   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:44:36   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:44:36  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:44:36  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:44:36  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:44:36  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:44:36  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:44:36  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:44:36  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:44:36  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:44:36  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:44:36  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:44:36  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:44:36  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:44:36  22  FROM di5min WHERE pair LIKE'%eur%'
20:44:36  23  ORDER BY ydate
20:44:36  24  /

View created.

Elapsed: 00:00:00.05
20:44:36 SQL> 
20:44:36 SQL> -- rpt
20:44:36 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20822

Elapsed: 00:00:00.36
20:44:36 SQL> 
20:44:36 SQL> -- Calc deltas and gains
20:44:36 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.12
20:44:36 SQL> 
20:44:36 SQL> CREATE TABLE q13 COMPRESS AS
20:44:36   2  SELECT
20:44:36   3  pair
20:44:36   4  ,ydate
20:44:36   5  ,prdate
20:44:36   6  ,rnum
20:44:36   7  ,lg4
20:44:36   8  ,lg8
20:44:36   9  ,lg12
20:44:36  10  ,ld4
20:44:36  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:44:36  12  -- step by 1
20:44:36  13  ,clse-lg1 d01
20:44:36  14  ,lg1-lg2	d12
20:44:36  15  ,lg2-lg3	d23
20:44:36  16  ,lg3-lg4	d34
20:44:36  17  ,lg4-lg5	d45
20:44:36  18  ,lg5-lg6	d56
20:44:36  19  ,lg6-lg7	d67
20:44:36  20  ,lg7-lg8	d78
20:44:36  21  ,lg8-lg9	d89
20:44:36  22  -- step by 2
20:44:36  23  ,clse-lg2 d02
20:44:36  24  ,lg2-lg4 d24
20:44:36  25  ,lg4-lg6 d46
20:44:36  26  ,lg6-lg8 d68
20:44:36  27  -- step by 3
20:44:36  28  ,clse-lg3 d03
20:44:36  29  ,lg3-lg6	d36
20:44:36  30  ,lg6-lg9	d69
20:44:36  31  ,lg9-lg12 d912
20:44:36  32  -- step by 4
20:44:36  33  ,clse-lg4 d04
20:44:36  34  ,lg4-lg8	d48
20:44:36  35  ,lg8-lg12 d812
20:44:36  36  ,lg6-lg12 d612
20:44:36  37  ,lg12-lg18 d1218
20:44:36  38  --
20:44:36  39  ,ABS(clse-lg1)dc1
20:44:36  40  ,ABS(clse-lg2)dc2
20:44:36  41  ,ABS(clse-lg3)dc3
20:44:36  42  ,ABS(clse-lg4)dc4
20:44:36  43  ,ABS(clse-lg5)dc5
20:44:36  44  ,ABS(clse-lg6)dc6
20:44:36  45  ,ABS(clse-lg7)dc7
20:44:36  46  ,ABS(clse-lg8)dc8
20:44:36  47  ,ABS(clse-lg9)dc9
20:44:36  48  ,ABS(clse-lg12)dc12
20:44:36  49  ,ABS(clse-lg18)dc18
20:44:36  50  ,ABS(clse-lg24)dc24
20:44:36  51  ,ABS(clse-lg72)dc72
20:44:36  52  ,(ld4-clse) ug4
20:44:36  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:44:36  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:44:36  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:44:36  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:44:36  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:44:36  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:44:36  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:44:36  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:44:36  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:44:36  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:44:36  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:44:36  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:44:36  65  ,0+TO_CHAR(ydate,'D')d
20:44:36  66  ,0+TO_CHAR(ydate,'W')w
20:44:36  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:44:36  68  FROM q11
20:44:36  69  -- I dont want any NULL values from the LAG() functions:
20:44:36  70  WHERE lg72 > 0
20:44:36  71  ORDER BY pair,ydate
20:44:36  72  /

Table created.

Elapsed: 00:00:02.00
20:44:38 SQL> 
20:44:38 SQL> -- rpt
20:44:38 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10198
	-1	    9760

Elapsed: 00:00:00.03
20:44:38 SQL> 
20:44:38 SQL> -- Calc gains and ntiles
20:44:38 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.07
20:44:38 SQL> CREATE TABLE q15 COMPRESS AS
20:44:38   2  SELECT
20:44:38   3  pair
20:44:38   4  ,ydate
20:44:38   5  ,prdate -- Should be unique
20:44:38   6  ,trend -- +1 or -1
20:44:38   7  ,dc12 -- next statement needs this
20:44:38   8  -- Use NTILE() to derive some attributes
20:44:38   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:44:38  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:44:38  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:44:38  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:44:38  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:44:38  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:44:38  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:44:38  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:44:38  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:44:38  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:44:38  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:44:38  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:44:38  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:44:38  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:44:38  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:44:38  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:44:38  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:44:38  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:44:38  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:44:38  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:44:38  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:44:38  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:44:38  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:44:38  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:44:38  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:44:38  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:44:38  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:44:38  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:44:38  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:44:38  38  ,hh    att28
20:44:38  39  ,d     att29
20:44:38  40  ,w     att30
20:44:38  41  ,mpm   att31
20:44:38  42  ,trend att32
20:44:38  43  ,ug4 g4
20:44:38  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:44:38  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:44:38  46  FROM q13
20:44:38  47  ORDER BY pair,ydate
20:44:38  48  /

Table created.

Elapsed: 00:00:03.92
20:44:42 SQL> 
20:44:42 SQL> -- rpt
20:44:42 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:44:42   2  GROUP BY pair,trend,gatt,gattn
20:44:42   3  ORDER BY pair,trend,gatt,gattn
20:44:42   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001529	    1452    .041522066
eur_usd 	-1 nup up  -.00365153	    4054    .155643414
eur_usd 	-1 up  nup .003617529	    4206    -.20473606
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000010969	    1698    .040334554
eur_usd 	 1 nup up   -.0035152	    4243     .10515626
eur_usd 	 1 up  nup .003735941	    4257    -.13864838

7 rows selected.

Elapsed: 00:00:00.03
20:44:42 SQL> 
20:44:42 SQL> -- rpt
20:44:42 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-17 20:35:00

Elapsed: 00:00:00.02
20:44:42 SQL> 
20:44:42 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.05
20:44:42 SQL> CREATE TABLE modsrc COMPRESS AS
20:44:42   2  SELECT
20:44:42   3  pair
20:44:42   4  ,ydate
20:44:42   5  ,prdate
20:44:42   6  ,trend
20:44:42   7  ,g4
20:44:42   8  ,gatt
20:44:42   9  ,gattn
20:44:42  10  ,dc12
20:44:42  11  FROM q15
20:44:42  12  /

Table created.

Elapsed: 00:00:00.09
20:44:42 SQL> 
20:44:42 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
20:44:43 SQL> 
20:44:43 SQL> -- rpt
20:44:43 SQL> 
20:44:43 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.34
20:44:43 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
20:44:43 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
20:44:43 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
20:44:43 SQL> 
20:44:43 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:44:43   2  GROUP BY pair,trend,gatt,gattn
20:44:43   3  ORDER BY pair,trend,gatt,gattn
20:44:43   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001529	    1452    .041522066
eur_usd 	-1 nup up  -.00365153	    4054    .155643414
eur_usd 	-1 up  nup .003617529	    4206    -.20473606
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000010969	    1698    .040334554
eur_usd 	 1 nup up   -.0035152	    4243     .10515626
eur_usd 	 1 up  nup .003735941	    4257    -.13864838

7 rows selected.

Elapsed: 00:00:00.03
20:44:43 SQL> 
20:44:43 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
20:44:43 SQL> CREATE TABLE eur_ms10 COMPRESS AS
20:44:43   2  SELECT
20:44:43   3  ydate
20:44:43   4  ,trend eur_trend
20:44:43   5  ,g4    eur_g4
20:44:43   6  ,gatt  eur_gatt
20:44:43   7  ,gattn eur_gattn
20:44:43   8  FROM modsrc
20:44:43   9  /

Table created.

Elapsed: 00:00:00.08
20:44:43 SQL> 
20:44:43 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
20:44:43 SQL> 
20:44:43 SQL> -- rpt
20:44:43 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 19:45:01 2010-12-17 13:05:00	10198	-.015675      .0165
	-1 2010-09-14 03:40:01 2010-12-17 20:35:00	 9712	  -.0164      .0167

Elapsed: 00:00:00.02
20:44:43 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 19:45:01 2010-12-17 13:05:00	      10198    -.015675       .0165
	-1 2010-09-14 03:40:01 2010-12-17 20:35:00	       9760	 -.0164       .0167

Elapsed: 00:00:00.01
20:44:43 SQL> 
20:44:43 SQL> -- I need a copy of q15 attributes
20:44:43 SQL> 
20:44:43 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.04
20:44:43 SQL> CREATE TABLE eur_att COMPRESS AS
20:44:43   2  SELECT
20:44:43   3  ydate
20:44:43   4  ,att00 eur_att00
20:44:43   5  ,att01 eur_att01
20:44:43   6  ,att02 eur_att02
20:44:43   7  ,att03 eur_att03
20:44:43   8  ,att04 eur_att04
20:44:43   9  ,att05 eur_att05
20:44:43  10  ,att06 eur_att06
20:44:43  11  ,att07 eur_att07
20:44:43  12  ,att08 eur_att08
20:44:43  13  ,att09 eur_att09
20:44:43  14  ,att10 eur_att10
20:44:43  15  ,att11 eur_att11
20:44:43  16  ,att12 eur_att12
20:44:43  17  ,att13 eur_att13
20:44:43  18  ,att14 eur_att14
20:44:43  19  ,att15 eur_att15
20:44:43  20  ,att16 eur_att16
20:44:43  21  ,att17 eur_att17
20:44:43  22  ,att18 eur_att18
20:44:43  23  ,att19 eur_att19
20:44:43  24  ,att20 eur_att20
20:44:43  25  ,att21 eur_att21
20:44:43  26  ,att22 eur_att22
20:44:43  27  ,att23 eur_att23
20:44:43  28  ,att24 eur_att24
20:44:43  29  ,att25 eur_att25
20:44:43  30  ,att26 eur_att26
20:44:43  31  ,att27 eur_att27
20:44:43  32  ,att28 eur_att28
20:44:43  33  ,att29 eur_att29
20:44:43  34  ,att30 eur_att30
20:44:43  35  ,att31 eur_att31
20:44:43  36  ,att32 eur_att32
20:44:43  37  FROM q15
20:44:43  38  /

Table created.

Elapsed: 00:00:00.13
20:44:43 SQL> 
20:44:43 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
20:44:44 SQL> 
20:44:44 SQL> -- rpt
20:44:44 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.00
20:44:44 SQL> 
20:44:44 SQL> --
20:44:44 SQL> -- aud10.sql
20:44:44 SQL> --
20:44:44 SQL> 
20:44:44 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:44:44 SQL> 
20:44:44 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.29
20:44:44 SQL> 
20:44:44 SQL> -- I created di5min here:
20:44:44 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:44:44 SQL> 
20:44:44 SQL> CREATE OR REPLACE VIEW q11 AS
20:44:44   2  SELECT
20:44:44   3  pair
20:44:44   4  ,ydate
20:44:44   5  ,prdate
20:44:44   6  ,rownum rnum -- acts as t in my time-series
20:44:44   7  ,clse
20:44:44   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:44:44   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:44:44  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:44:44  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:44:44  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:44:44  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:44:44  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:44:44  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:44:44  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:44:44  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:44:44  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:44:44  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:44:44  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:44:44  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:44:44  22  FROM di5min WHERE pair LIKE'%aud%'
20:44:44  23  ORDER BY ydate
20:44:44  24  /

View created.

Elapsed: 00:00:00.04
20:44:44 SQL> 
20:44:44 SQL> -- rpt
20:44:44 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20819

Elapsed: 00:00:00.37
20:44:45 SQL> 
20:44:45 SQL> -- Calc deltas and gains
20:44:45 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.18
20:44:45 SQL> 
20:44:45 SQL> CREATE TABLE q13 COMPRESS AS
20:44:45   2  SELECT
20:44:45   3  pair
20:44:45   4  ,ydate
20:44:45   5  ,prdate
20:44:45   6  ,rnum
20:44:45   7  ,lg4
20:44:45   8  ,lg8
20:44:45   9  ,lg12
20:44:45  10  ,ld4
20:44:45  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:44:45  12  -- step by 1
20:44:45  13  ,clse-lg1 d01
20:44:45  14  ,lg1-lg2	d12
20:44:45  15  ,lg2-lg3	d23
20:44:45  16  ,lg3-lg4	d34
20:44:45  17  ,lg4-lg5	d45
20:44:45  18  ,lg5-lg6	d56
20:44:45  19  ,lg6-lg7	d67
20:44:45  20  ,lg7-lg8	d78
20:44:45  21  ,lg8-lg9	d89
20:44:45  22  -- step by 2
20:44:45  23  ,clse-lg2 d02
20:44:45  24  ,lg2-lg4 d24
20:44:45  25  ,lg4-lg6 d46
20:44:45  26  ,lg6-lg8 d68
20:44:45  27  -- step by 3
20:44:45  28  ,clse-lg3 d03
20:44:45  29  ,lg3-lg6	d36
20:44:45  30  ,lg6-lg9	d69
20:44:45  31  ,lg9-lg12 d912
20:44:45  32  -- step by 4
20:44:45  33  ,clse-lg4 d04
20:44:45  34  ,lg4-lg8	d48
20:44:45  35  ,lg8-lg12 d812
20:44:45  36  ,lg6-lg12 d612
20:44:45  37  ,lg12-lg18 d1218
20:44:45  38  --
20:44:45  39  ,ABS(clse-lg1)dc1
20:44:45  40  ,ABS(clse-lg2)dc2
20:44:45  41  ,ABS(clse-lg3)dc3
20:44:45  42  ,ABS(clse-lg4)dc4
20:44:45  43  ,ABS(clse-lg5)dc5
20:44:45  44  ,ABS(clse-lg6)dc6
20:44:45  45  ,ABS(clse-lg7)dc7
20:44:45  46  ,ABS(clse-lg8)dc8
20:44:45  47  ,ABS(clse-lg9)dc9
20:44:45  48  ,ABS(clse-lg12)dc12
20:44:45  49  ,ABS(clse-lg18)dc18
20:44:45  50  ,ABS(clse-lg24)dc24
20:44:45  51  ,ABS(clse-lg72)dc72
20:44:45  52  ,(ld4-clse) ug4
20:44:45  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:44:45  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:44:45  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:44:45  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:44:45  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:44:45  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:44:45  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:44:45  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:44:45  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:44:45  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:44:45  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:44:45  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:44:45  65  ,0+TO_CHAR(ydate,'D')d
20:44:45  66  ,0+TO_CHAR(ydate,'W')w
20:44:45  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:44:45  68  FROM q11
20:44:45  69  -- I dont want any NULL values from the LAG() functions:
20:44:45  70  WHERE lg72 > 0
20:44:45  71  ORDER BY pair,ydate
20:44:45  72  /

Table created.

Elapsed: 00:00:01.69
20:44:46 SQL> 
20:44:46 SQL> -- rpt
20:44:46 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10332
	-1	    9623

Elapsed: 00:00:00.09
20:44:47 SQL> 
20:44:47 SQL> -- Calc gains and ntiles
20:44:47 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.15
20:44:47 SQL> CREATE TABLE q15 COMPRESS AS
20:44:47   2  SELECT
20:44:47   3  pair
20:44:47   4  ,ydate
20:44:47   5  ,prdate -- Should be unique
20:44:47   6  ,trend -- +1 or -1
20:44:47   7  ,dc12 -- next statement needs this
20:44:47   8  -- Use NTILE() to derive some attributes
20:44:47   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:44:47  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:44:47  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:44:47  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:44:47  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:44:47  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:44:47  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:44:47  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:44:47  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:44:47  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:44:47  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:44:47  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:44:47  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:44:47  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:44:47  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:44:47  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:44:47  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:44:47  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:44:47  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:44:47  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:44:47  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:44:47  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:44:47  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:44:47  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:44:47  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:44:47  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:44:47  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:44:47  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:44:47  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:44:47  38  ,hh    att28
20:44:47  39  ,d     att29
20:44:47  40  ,w     att30
20:44:47  41  ,mpm   att31
20:44:47  42  ,trend att32
20:44:47  43  ,ug4 g4
20:44:47  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:44:47  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:44:47  46  FROM q13
20:44:47  47  ORDER BY pair,ydate
20:44:47  48  /

Table created.

Elapsed: 00:00:04.12
20:44:51 SQL> 
20:44:51 SQL> -- rpt
20:44:51 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:44:51   2  GROUP BY pair,trend,gatt,gattn
20:44:51   3  ORDER BY pair,trend,gatt,gattn
20:44:51   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000029919	    1550    -.03916318
aud_usd 	-1 nup up  -.00317206	    3635    .000090517
aud_usd 	-1 up  nup .002974869	    4393    .027006235
aud_usd 	-1			       0
aud_usd 	 1 nup nup 1.2533E-06	    1895    .017464771
aud_usd 	 1 nup up  -.00289442	    4111    .052995189
aud_usd 	 1 up  nup  .00296577	    4323    -.17636016
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
20:44:51 SQL> 
20:44:51 SQL> -- rpt
20:44:51 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-17 20:35:00

Elapsed: 00:00:00.02
20:44:51 SQL> 
20:44:51 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.13
20:44:51 SQL> CREATE TABLE modsrc COMPRESS AS
20:44:51   2  SELECT
20:44:51   3  pair
20:44:51   4  ,ydate
20:44:51   5  ,prdate
20:44:51   6  ,trend
20:44:51   7  ,g4
20:44:51   8  ,gatt
20:44:51   9  ,gattn
20:44:51  10  ,dc12
20:44:51  11  FROM q15
20:44:51  12  /

Table created.

Elapsed: 00:00:00.08
20:44:51 SQL> 
20:44:51 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
20:44:51 SQL> 
20:44:51 SQL> -- rpt
20:44:51 SQL> 
20:44:51 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20819

Elapsed: 00:00:00.35
20:44:52 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.01
20:44:52 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.00
20:44:52 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19955

Elapsed: 00:00:00.01
20:44:52 SQL> 
20:44:52 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:44:52   2  GROUP BY pair,trend,gatt,gattn
20:44:52   3  ORDER BY pair,trend,gatt,gattn
20:44:52   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000029919	    1550    -.03916318
aud_usd 	-1 nup up  -.00317206	    3635    .000090517
aud_usd 	-1 up  nup .002974869	    4393    .027006235
aud_usd 	-1			       0
aud_usd 	 1 nup nup 1.2533E-06	    1895    .017464771
aud_usd 	 1 nup up  -.00289442	    4111    .052995189
aud_usd 	 1 up  nup  .00296577	    4323    -.17636016
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
20:44:52 SQL> 
20:44:52 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
20:44:52 SQL> CREATE TABLE aud_ms10 COMPRESS AS
20:44:52   2  SELECT
20:44:52   3  ydate
20:44:52   4  ,trend aud_trend
20:44:52   5  ,g4    aud_g4
20:44:52   6  ,gatt  aud_gatt
20:44:52   7  ,gattn aud_gattn
20:44:52   8  FROM modsrc
20:44:52   9  /

Table created.

Elapsed: 00:00:00.07
20:44:52 SQL> 
20:44:52 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
20:44:52 SQL> 
20:44:52 SQL> -- rpt
20:44:52 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 19:45:01 2010-12-17 20:35:00	10329	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-17 20:20:00	 9578	   -.017      .0131

Elapsed: 00:00:00.02
20:44:52 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 19:45:01 2010-12-17 20:35:00	      10332	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-17 20:20:00	       9623	  -.017       .0131

Elapsed: 00:00:00.01
20:44:52 SQL> 
20:44:52 SQL> -- I need a copy of q15 attributes
20:44:52 SQL> 
20:44:52 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.03
20:44:52 SQL> CREATE TABLE aud_att COMPRESS AS
20:44:52   2  SELECT
20:44:52   3  ydate
20:44:52   4  ,att00 aud_att00
20:44:52   5  ,att01 aud_att01
20:44:52   6  ,att02 aud_att02
20:44:52   7  ,att03 aud_att03
20:44:52   8  ,att04 aud_att04
20:44:52   9  ,att05 aud_att05
20:44:52  10  ,att06 aud_att06
20:44:52  11  ,att07 aud_att07
20:44:52  12  ,att08 aud_att08
20:44:52  13  ,att09 aud_att09
20:44:52  14  ,att10 aud_att10
20:44:52  15  ,att11 aud_att11
20:44:52  16  ,att12 aud_att12
20:44:52  17  ,att13 aud_att13
20:44:52  18  ,att14 aud_att14
20:44:52  19  ,att15 aud_att15
20:44:52  20  ,att16 aud_att16
20:44:52  21  ,att17 aud_att17
20:44:52  22  ,att18 aud_att18
20:44:52  23  ,att19 aud_att19
20:44:52  24  ,att20 aud_att20
20:44:52  25  ,att21 aud_att21
20:44:52  26  ,att22 aud_att22
20:44:52  27  ,att23 aud_att23
20:44:52  28  ,att24 aud_att24
20:44:52  29  ,att25 aud_att25
20:44:52  30  ,att26 aud_att26
20:44:52  31  ,att27 aud_att27
20:44:52  32  ,att28 aud_att28
20:44:52  33  ,att29 aud_att29
20:44:52  34  ,att30 aud_att30
20:44:52  35  ,att31 aud_att31
20:44:52  36  ,att32 aud_att32
20:44:52  37  FROM q15
20:44:52  38  /

Table created.

Elapsed: 00:00:00.14
20:44:52 SQL> 
20:44:52 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.44
20:44:53 SQL> 
20:44:53 SQL> -- rpt
20:44:53 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19955

Elapsed: 00:00:00.00
20:44:53 SQL> 
20:44:53 SQL> --
20:44:53 SQL> -- gbp10.sql
20:44:53 SQL> --
20:44:53 SQL> 
20:44:53 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:44:53 SQL> 
20:44:53 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.32
20:44:53 SQL> 
20:44:53 SQL> -- I created di5min here:
20:44:53 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:44:53 SQL> 
20:44:53 SQL> CREATE OR REPLACE VIEW q11 AS
20:44:53   2  SELECT
20:44:53   3  pair
20:44:53   4  ,ydate
20:44:53   5  ,prdate
20:44:53   6  ,rownum rnum -- acts as t in my time-series
20:44:53   7  ,clse
20:44:53   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:44:53   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:44:53  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:44:53  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:44:53  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:44:53  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:44:53  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:44:53  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:44:53  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:44:53  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:44:53  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:44:53  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:44:53  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:44:53  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:44:53  22  FROM di5min WHERE pair LIKE'%gbp%'
20:44:53  23  ORDER BY ydate
20:44:53  24  /

View created.

Elapsed: 00:00:00.05
20:44:53 SQL> 
20:44:53 SQL> -- rpt
20:44:53 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20821

Elapsed: 00:00:00.35
20:44:53 SQL> 
20:44:53 SQL> -- Calc deltas and gains
20:44:53 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.25
20:44:54 SQL> 
20:44:54 SQL> CREATE TABLE q13 COMPRESS AS
20:44:54   2  SELECT
20:44:54   3  pair
20:44:54   4  ,ydate
20:44:54   5  ,prdate
20:44:54   6  ,rnum
20:44:54   7  ,lg4
20:44:54   8  ,lg8
20:44:54   9  ,lg12
20:44:54  10  ,ld4
20:44:54  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:44:54  12  -- step by 1
20:44:54  13  ,clse-lg1 d01
20:44:54  14  ,lg1-lg2	d12
20:44:54  15  ,lg2-lg3	d23
20:44:54  16  ,lg3-lg4	d34
20:44:54  17  ,lg4-lg5	d45
20:44:54  18  ,lg5-lg6	d56
20:44:54  19  ,lg6-lg7	d67
20:44:54  20  ,lg7-lg8	d78
20:44:54  21  ,lg8-lg9	d89
20:44:54  22  -- step by 2
20:44:54  23  ,clse-lg2 d02
20:44:54  24  ,lg2-lg4 d24
20:44:54  25  ,lg4-lg6 d46
20:44:54  26  ,lg6-lg8 d68
20:44:54  27  -- step by 3
20:44:54  28  ,clse-lg3 d03
20:44:54  29  ,lg3-lg6	d36
20:44:54  30  ,lg6-lg9	d69
20:44:54  31  ,lg9-lg12 d912
20:44:54  32  -- step by 4
20:44:54  33  ,clse-lg4 d04
20:44:54  34  ,lg4-lg8	d48
20:44:54  35  ,lg8-lg12 d812
20:44:54  36  ,lg6-lg12 d612
20:44:54  37  ,lg12-lg18 d1218
20:44:54  38  --
20:44:54  39  ,ABS(clse-lg1)dc1
20:44:54  40  ,ABS(clse-lg2)dc2
20:44:54  41  ,ABS(clse-lg3)dc3
20:44:54  42  ,ABS(clse-lg4)dc4
20:44:54  43  ,ABS(clse-lg5)dc5
20:44:54  44  ,ABS(clse-lg6)dc6
20:44:54  45  ,ABS(clse-lg7)dc7
20:44:54  46  ,ABS(clse-lg8)dc8
20:44:54  47  ,ABS(clse-lg9)dc9
20:44:54  48  ,ABS(clse-lg12)dc12
20:44:54  49  ,ABS(clse-lg18)dc18
20:44:54  50  ,ABS(clse-lg24)dc24
20:44:54  51  ,ABS(clse-lg72)dc72
20:44:54  52  ,(ld4-clse) ug4
20:44:54  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:44:54  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:44:54  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:44:54  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:44:54  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:44:54  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:44:54  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:44:54  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:44:54  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:44:54  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:44:54  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:44:54  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:44:54  65  ,0+TO_CHAR(ydate,'D')d
20:44:54  66  ,0+TO_CHAR(ydate,'W')w
20:44:54  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:44:54  68  FROM q11
20:44:54  69  -- I dont want any NULL values from the LAG() functions:
20:44:54  70  WHERE lg72 > 0
20:44:54  71  ORDER BY pair,ydate
20:44:54  72  /

Table created.

Elapsed: 00:00:01.73
20:44:55 SQL> 
20:44:55 SQL> -- rpt
20:44:55 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9651
	-1	   10306

Elapsed: 00:00:00.06
20:44:55 SQL> 
20:44:55 SQL> -- Calc gains and ntiles
20:44:55 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.24
20:44:56 SQL> CREATE TABLE q15 COMPRESS AS
20:44:56   2  SELECT
20:44:56   3  pair
20:44:56   4  ,ydate
20:44:56   5  ,prdate -- Should be unique
20:44:56   6  ,trend -- +1 or -1
20:44:56   7  ,dc12 -- next statement needs this
20:44:56   8  -- Use NTILE() to derive some attributes
20:44:56   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:44:56  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:44:56  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:44:56  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:44:56  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:44:56  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:44:56  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:44:56  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:44:56  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:44:56  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:44:56  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:44:56  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:44:56  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:44:56  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:44:56  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:44:56  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:44:56  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:44:56  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:44:56  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:44:56  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:44:56  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:44:56  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:44:56  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:44:56  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:44:56  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:44:56  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:44:56  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:44:56  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:44:56  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:44:56  38  ,hh    att28
20:44:56  39  ,d     att29
20:44:56  40  ,w     att30
20:44:56  41  ,mpm   att31
20:44:56  42  ,trend att32
20:44:56  43  ,ug4 g4
20:44:56  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:44:56  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:44:56  46  FROM q13
20:44:56  47  ORDER BY pair,ydate
20:44:56  48  /

Table created.

Elapsed: 00:00:04.05
20:45:00 SQL> 
20:45:00 SQL> -- rpt
20:45:00 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:45:00   2  GROUP BY pair,trend,gatt,gattn
20:45:00   3  ORDER BY pair,trend,gatt,gattn
20:45:00   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -1.187E-06	    1812     .05932405
gbp_usd 	-1 nup up  -.00335299	    4099    -.00137357
gbp_usd 	-1 up  nup .003116902	    4347    -.09320994
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup .000014682	    1650    .009141743
gbp_usd 	 1 nup up  -.00320098	    4122    .009597508
gbp_usd 	 1 up  nup .003543993	    3879    -.16652449

7 rows selected.

Elapsed: 00:00:00.05
20:45:00 SQL> 
20:45:00 SQL> -- rpt
20:45:00 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-17 20:35:00

Elapsed: 00:00:00.01
20:45:00 SQL> 
20:45:00 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
20:45:00 SQL> CREATE TABLE modsrc COMPRESS AS
20:45:00   2  SELECT
20:45:00   3  pair
20:45:00   4  ,ydate
20:45:00   5  ,prdate
20:45:00   6  ,trend
20:45:00   7  ,g4
20:45:00   8  ,gatt
20:45:00   9  ,gattn
20:45:00  10  ,dc12
20:45:00  11  FROM q15
20:45:00  12  /

Table created.

Elapsed: 00:00:00.09
20:45:00 SQL> 
20:45:00 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
20:45:00 SQL> 
20:45:00 SQL> -- rpt
20:45:00 SQL> 
20:45:00 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.34
20:45:00 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
20:45:00 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
20:45:01 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
20:45:01 SQL> 
20:45:01 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:45:01   2  GROUP BY pair,trend,gatt,gattn
20:45:01   3  ORDER BY pair,trend,gatt,gattn
20:45:01   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -1.187E-06	    1812     .05932405
gbp_usd 	-1 nup up  -.00335299	    4099    -.00137357
gbp_usd 	-1 up  nup .003116902	    4347    -.09320994
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup .000014682	    1650    .009141743
gbp_usd 	 1 nup up  -.00320098	    4122    .009597508
gbp_usd 	 1 up  nup .003543993	    3879    -.16652449

7 rows selected.

Elapsed: 00:00:00.02
20:45:01 SQL> 
20:45:01 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.11
20:45:01 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
20:45:01   2  SELECT
20:45:01   3  ydate
20:45:01   4  ,trend gbp_trend
20:45:01   5  ,g4    gbp_g4
20:45:01   6  ,gatt  gbp_gatt
20:45:01   7  ,gattn gbp_gattn
20:45:01   8  FROM modsrc
20:45:01   9  /

Table created.

Elapsed: 00:00:00.07
20:45:01 SQL> 
20:45:01 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
20:45:01 SQL> 
20:45:01 SQL> -- rpt
20:45:01 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 22:00:01 2010-12-17 10:20:00	 9651	  -.0194      .0179
	-1 2010-09-13 19:45:01 2010-12-17 20:35:00	10258	  -.0153      .0159

Elapsed: 00:00:00.01
20:45:01 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 22:00:01 2010-12-17 10:20:00	       9651	 -.0194       .0179
	-1 2010-09-13 19:45:01 2010-12-17 20:35:00	      10306	 -.0153       .0159

Elapsed: 00:00:00.01
20:45:01 SQL> 
20:45:01 SQL> -- I need a copy of q15 attributes
20:45:01 SQL> 
20:45:01 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.04
20:45:01 SQL> CREATE TABLE gbp_att COMPRESS AS
20:45:01   2  SELECT
20:45:01   3  ydate
20:45:01   4  ,att00 gbp_att00
20:45:01   5  ,att01 gbp_att01
20:45:01   6  ,att02 gbp_att02
20:45:01   7  ,att03 gbp_att03
20:45:01   8  ,att04 gbp_att04
20:45:01   9  ,att05 gbp_att05
20:45:01  10  ,att06 gbp_att06
20:45:01  11  ,att07 gbp_att07
20:45:01  12  ,att08 gbp_att08
20:45:01  13  ,att09 gbp_att09
20:45:01  14  ,att10 gbp_att10
20:45:01  15  ,att11 gbp_att11
20:45:01  16  ,att12 gbp_att12
20:45:01  17  ,att13 gbp_att13
20:45:01  18  ,att14 gbp_att14
20:45:01  19  ,att15 gbp_att15
20:45:01  20  ,att16 gbp_att16
20:45:01  21  ,att17 gbp_att17
20:45:01  22  ,att18 gbp_att18
20:45:01  23  ,att19 gbp_att19
20:45:01  24  ,att20 gbp_att20
20:45:01  25  ,att21 gbp_att21
20:45:01  26  ,att22 gbp_att22
20:45:01  27  ,att23 gbp_att23
20:45:01  28  ,att24 gbp_att24
20:45:01  29  ,att25 gbp_att25
20:45:01  30  ,att26 gbp_att26
20:45:01  31  ,att27 gbp_att27
20:45:01  32  ,att28 gbp_att28
20:45:01  33  ,att29 gbp_att29
20:45:01  34  ,att30 gbp_att30
20:45:01  35  ,att31 gbp_att31
20:45:01  36  ,att32 gbp_att32
20:45:01  37  FROM q15
20:45:01  38  /

Table created.

Elapsed: 00:00:00.12
20:45:01 SQL> 
20:45:01 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
20:45:01 SQL> 
20:45:01 SQL> -- rpt
20:45:01 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.00
20:45:01 SQL> 
20:45:01 SQL> --
20:45:01 SQL> -- jpy10.sql
20:45:01 SQL> --
20:45:01 SQL> 
20:45:01 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:45:01 SQL> 
20:45:01 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
20:45:02 SQL> 
20:45:02 SQL> -- I created di5min here:
20:45:02 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:45:02 SQL> 
20:45:02 SQL> CREATE OR REPLACE VIEW q11 AS
20:45:02   2  SELECT
20:45:02   3  pair
20:45:02   4  ,ydate
20:45:02   5  ,prdate
20:45:02   6  ,rownum rnum -- acts as t in my time-series
20:45:02   7  ,clse
20:45:02   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:45:02   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:45:02  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:45:02  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:45:02  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:45:02  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:45:02  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:45:02  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:45:02  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:45:02  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:45:02  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:45:02  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:45:02  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:45:02  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:45:02  22  FROM di5min WHERE pair LIKE'%jpy%'
20:45:02  23  ORDER BY ydate
20:45:02  24  /

View created.

Elapsed: 00:00:00.10
20:45:02 SQL> 
20:45:02 SQL> -- rpt
20:45:02 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20822

Elapsed: 00:00:00.35
20:45:02 SQL> 
20:45:02 SQL> -- Calc deltas and gains
20:45:02 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.23
20:45:02 SQL> 
20:45:02 SQL> CREATE TABLE q13 COMPRESS AS
20:45:02   2  SELECT
20:45:02   3  pair
20:45:02   4  ,ydate
20:45:02   5  ,prdate
20:45:02   6  ,rnum
20:45:02   7  ,lg4
20:45:02   8  ,lg8
20:45:02   9  ,lg12
20:45:02  10  ,ld4
20:45:02  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:45:02  12  -- step by 1
20:45:02  13  ,clse-lg1 d01
20:45:02  14  ,lg1-lg2	d12
20:45:02  15  ,lg2-lg3	d23
20:45:02  16  ,lg3-lg4	d34
20:45:02  17  ,lg4-lg5	d45
20:45:02  18  ,lg5-lg6	d56
20:45:02  19  ,lg6-lg7	d67
20:45:02  20  ,lg7-lg8	d78
20:45:02  21  ,lg8-lg9	d89
20:45:02  22  -- step by 2
20:45:02  23  ,clse-lg2 d02
20:45:02  24  ,lg2-lg4 d24
20:45:02  25  ,lg4-lg6 d46
20:45:02  26  ,lg6-lg8 d68
20:45:02  27  -- step by 3
20:45:02  28  ,clse-lg3 d03
20:45:02  29  ,lg3-lg6	d36
20:45:02  30  ,lg6-lg9	d69
20:45:02  31  ,lg9-lg12 d912
20:45:02  32  -- step by 4
20:45:02  33  ,clse-lg4 d04
20:45:02  34  ,lg4-lg8	d48
20:45:02  35  ,lg8-lg12 d812
20:45:02  36  ,lg6-lg12 d612
20:45:02  37  ,lg12-lg18 d1218
20:45:02  38  --
20:45:02  39  ,ABS(clse-lg1)dc1
20:45:02  40  ,ABS(clse-lg2)dc2
20:45:02  41  ,ABS(clse-lg3)dc3
20:45:02  42  ,ABS(clse-lg4)dc4
20:45:02  43  ,ABS(clse-lg5)dc5
20:45:02  44  ,ABS(clse-lg6)dc6
20:45:02  45  ,ABS(clse-lg7)dc7
20:45:02  46  ,ABS(clse-lg8)dc8
20:45:02  47  ,ABS(clse-lg9)dc9
20:45:02  48  ,ABS(clse-lg12)dc12
20:45:02  49  ,ABS(clse-lg18)dc18
20:45:02  50  ,ABS(clse-lg24)dc24
20:45:02  51  ,ABS(clse-lg72)dc72
20:45:02  52  ,(ld4-clse) ug4
20:45:02  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:45:02  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:45:02  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:45:02  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:45:02  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:45:02  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:45:02  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:45:02  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:45:02  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:45:02  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:45:02  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:45:02  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:45:02  65  ,0+TO_CHAR(ydate,'D')d
20:45:02  66  ,0+TO_CHAR(ydate,'W')w
20:45:02  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:45:02  68  FROM q11
20:45:02  69  -- I dont want any NULL values from the LAG() functions:
20:45:02  70  WHERE lg72 > 0
20:45:02  71  ORDER BY pair,ydate
20:45:02  72  /

Table created.

Elapsed: 00:00:01.69
20:45:04 SQL> 
20:45:04 SQL> -- rpt
20:45:04 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9307
	-1	   10651

Elapsed: 00:00:00.04
20:45:04 SQL> 
20:45:04 SQL> -- Calc gains and ntiles
20:45:04 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.12
20:45:04 SQL> CREATE TABLE q15 COMPRESS AS
20:45:04   2  SELECT
20:45:04   3  pair
20:45:04   4  ,ydate
20:45:04   5  ,prdate -- Should be unique
20:45:04   6  ,trend -- +1 or -1
20:45:04   7  ,dc12 -- next statement needs this
20:45:04   8  -- Use NTILE() to derive some attributes
20:45:04   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:45:04  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:45:04  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:45:04  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:45:04  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:45:04  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:45:04  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:45:04  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:45:04  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:45:04  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:45:04  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:45:04  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:45:04  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:45:04  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:45:04  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:45:04  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:45:04  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:45:04  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:45:04  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:45:04  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:45:04  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:45:04  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:45:04  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:45:04  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:45:04  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:45:04  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:45:04  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:45:04  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:45:04  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:45:04  38  ,hh    att28
20:45:04  39  ,d     att29
20:45:04  40  ,w     att30
20:45:04  41  ,mpm   att31
20:45:04  42  ,trend att32
20:45:04  43  ,ug4 g4
20:45:04  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:45:04  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:45:04  46  FROM q13
20:45:04  47  ORDER BY pair,ydate
20:45:04  48  /

Table created.

Elapsed: 00:00:04.10
20:45:08 SQL> 
20:45:08 SQL> -- rpt
20:45:08 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:45:08   2  GROUP BY pair,trend,gatt,gattn
20:45:08   3  ORDER BY pair,trend,gatt,gattn
20:45:08   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     176
usd_jpy 	-1 nup up  -.13472573	    5150    .019618185
usd_jpy 	-1 up  nup .143255135	    5307    .057857429
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13474825	    5005    -.01355572
usd_jpy 	 1 up  nup .152197929	    4105    .184589759
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
20:45:08 SQL> 
20:45:08 SQL> -- rpt
20:45:08 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-17 20:35:00

Elapsed: 00:00:00.01
20:45:08 SQL> 
20:45:08 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.19
20:45:09 SQL> CREATE TABLE modsrc COMPRESS AS
20:45:09   2  SELECT
20:45:09   3  pair
20:45:09   4  ,ydate
20:45:09   5  ,prdate
20:45:09   6  ,trend
20:45:09   7  ,g4
20:45:09   8  ,gatt
20:45:09   9  ,gattn
20:45:09  10  ,dc12
20:45:09  11  FROM q15
20:45:09  12  /

Table created.

Elapsed: 00:00:00.10
20:45:09 SQL> 
20:45:09 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.26
20:45:09 SQL> 
20:45:09 SQL> -- rpt
20:45:09 SQL> 
20:45:09 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20822

Elapsed: 00:00:00.35
20:45:09 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
20:45:09 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.00
20:45:09 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19958

Elapsed: 00:00:00.01
20:45:09 SQL> 
20:45:09 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:45:09   2  GROUP BY pair,trend,gatt,gattn
20:45:09   3  ORDER BY pair,trend,gatt,gattn
20:45:09   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     176
usd_jpy 	-1 nup up  -.13472573	    5150    .019618185
usd_jpy 	-1 up  nup .143255135	    5307    .057857429
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     167
usd_jpy 	 1 nup up  -.13474825	    5005    -.01355572
usd_jpy 	 1 up  nup .152197929	    4105    .184589759
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
20:45:09 SQL> 
20:45:09 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.02
20:45:09 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
20:45:09   2  SELECT
20:45:09   3  ydate
20:45:09   4  ,trend jpy_trend
20:45:09   5  ,g4    jpy_g4
20:45:09   6  ,gatt  jpy_gatt
20:45:09   7  ,gattn jpy_gattn
20:45:09   8  FROM modsrc
20:45:09   9  /

Table created.

Elapsed: 00:00:00.06
20:45:10 SQL> 
20:45:10 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
20:45:10 SQL> 
20:45:10 SQL> -- rpt
20:45:10 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 05:55:01 2010-12-17 19:15:00	 9277	   -1.07	1.5
	-1 2010-09-13 19:45:01 2010-12-17 20:35:00	10633	 -1.0775       1.99

Elapsed: 00:00:00.02
20:45:10 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 05:55:01 2010-12-17 19:15:00	       9307	  -1.07 	1.5
	-1 2010-09-13 19:45:01 2010-12-17 20:35:00	      10651	-1.0775        1.99

Elapsed: 00:00:00.01
20:45:10 SQL> 
20:45:10 SQL> -- I need a copy of q15 attributes
20:45:10 SQL> 
20:45:10 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.03
20:45:10 SQL> CREATE TABLE jpy_att COMPRESS AS
20:45:10   2  SELECT
20:45:10   3  ydate
20:45:10   4  ,att00 jpy_att00
20:45:10   5  ,att01 jpy_att01
20:45:10   6  ,att02 jpy_att02
20:45:10   7  ,att03 jpy_att03
20:45:10   8  ,att04 jpy_att04
20:45:10   9  ,att05 jpy_att05
20:45:10  10  ,att06 jpy_att06
20:45:10  11  ,att07 jpy_att07
20:45:10  12  ,att08 jpy_att08
20:45:10  13  ,att09 jpy_att09
20:45:10  14  ,att10 jpy_att10
20:45:10  15  ,att11 jpy_att11
20:45:10  16  ,att12 jpy_att12
20:45:10  17  ,att13 jpy_att13
20:45:10  18  ,att14 jpy_att14
20:45:10  19  ,att15 jpy_att15
20:45:10  20  ,att16 jpy_att16
20:45:10  21  ,att17 jpy_att17
20:45:10  22  ,att18 jpy_att18
20:45:10  23  ,att19 jpy_att19
20:45:10  24  ,att20 jpy_att20
20:45:10  25  ,att21 jpy_att21
20:45:10  26  ,att22 jpy_att22
20:45:10  27  ,att23 jpy_att23
20:45:10  28  ,att24 jpy_att24
20:45:10  29  ,att25 jpy_att25
20:45:10  30  ,att26 jpy_att26
20:45:10  31  ,att27 jpy_att27
20:45:10  32  ,att28 jpy_att28
20:45:10  33  ,att29 jpy_att29
20:45:10  34  ,att30 jpy_att30
20:45:10  35  ,att31 jpy_att31
20:45:10  36  ,att32 jpy_att32
20:45:10  37  FROM q15
20:45:10  38  /

Table created.

Elapsed: 00:00:00.14
20:45:10 SQL> 
20:45:10 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
20:45:10 SQL> 
20:45:10 SQL> -- rpt
20:45:10 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19958

Elapsed: 00:00:00.01
20:45:10 SQL> 
20:45:10 SQL> --
20:45:10 SQL> -- cad10.sql
20:45:10 SQL> --
20:45:10 SQL> 
20:45:10 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:45:10 SQL> 
20:45:10 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.31
20:45:11 SQL> 
20:45:11 SQL> -- I created di5min here:
20:45:11 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:45:11 SQL> 
20:45:11 SQL> CREATE OR REPLACE VIEW q11 AS
20:45:11   2  SELECT
20:45:11   3  pair
20:45:11   4  ,ydate
20:45:11   5  ,prdate
20:45:11   6  ,rownum rnum -- acts as t in my time-series
20:45:11   7  ,clse
20:45:11   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:45:11   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:45:11  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:45:11  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:45:11  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:45:11  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:45:11  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:45:11  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:45:11  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:45:11  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:45:11  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:45:11  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:45:11  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:45:11  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:45:11  22  FROM di5min WHERE pair LIKE'%cad%'
20:45:11  23  ORDER BY ydate
20:45:11  24  /

View created.

Elapsed: 00:00:00.05
20:45:11 SQL> 
20:45:11 SQL> -- rpt
20:45:11 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20818

Elapsed: 00:00:00.37
20:45:11 SQL> 
20:45:11 SQL> -- Calc deltas and gains
20:45:11 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.18
20:45:11 SQL> 
20:45:11 SQL> CREATE TABLE q13 COMPRESS AS
20:45:11   2  SELECT
20:45:11   3  pair
20:45:11   4  ,ydate
20:45:11   5  ,prdate
20:45:11   6  ,rnum
20:45:11   7  ,lg4
20:45:11   8  ,lg8
20:45:11   9  ,lg12
20:45:11  10  ,ld4
20:45:11  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:45:11  12  -- step by 1
20:45:11  13  ,clse-lg1 d01
20:45:11  14  ,lg1-lg2	d12
20:45:11  15  ,lg2-lg3	d23
20:45:11  16  ,lg3-lg4	d34
20:45:11  17  ,lg4-lg5	d45
20:45:11  18  ,lg5-lg6	d56
20:45:11  19  ,lg6-lg7	d67
20:45:11  20  ,lg7-lg8	d78
20:45:11  21  ,lg8-lg9	d89
20:45:11  22  -- step by 2
20:45:11  23  ,clse-lg2 d02
20:45:11  24  ,lg2-lg4 d24
20:45:11  25  ,lg4-lg6 d46
20:45:11  26  ,lg6-lg8 d68
20:45:11  27  -- step by 3
20:45:11  28  ,clse-lg3 d03
20:45:11  29  ,lg3-lg6	d36
20:45:11  30  ,lg6-lg9	d69
20:45:11  31  ,lg9-lg12 d912
20:45:11  32  -- step by 4
20:45:11  33  ,clse-lg4 d04
20:45:11  34  ,lg4-lg8	d48
20:45:11  35  ,lg8-lg12 d812
20:45:11  36  ,lg6-lg12 d612
20:45:11  37  ,lg12-lg18 d1218
20:45:11  38  --
20:45:11  39  ,ABS(clse-lg1)dc1
20:45:11  40  ,ABS(clse-lg2)dc2
20:45:11  41  ,ABS(clse-lg3)dc3
20:45:11  42  ,ABS(clse-lg4)dc4
20:45:11  43  ,ABS(clse-lg5)dc5
20:45:11  44  ,ABS(clse-lg6)dc6
20:45:11  45  ,ABS(clse-lg7)dc7
20:45:11  46  ,ABS(clse-lg8)dc8
20:45:11  47  ,ABS(clse-lg9)dc9
20:45:11  48  ,ABS(clse-lg12)dc12
20:45:11  49  ,ABS(clse-lg18)dc18
20:45:11  50  ,ABS(clse-lg24)dc24
20:45:11  51  ,ABS(clse-lg72)dc72
20:45:11  52  ,(ld4-clse) ug4
20:45:11  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:45:11  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:45:11  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:45:11  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:45:11  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:45:11  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:45:11  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:45:11  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:45:11  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:45:11  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:45:11  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:45:11  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:45:11  65  ,0+TO_CHAR(ydate,'D')d
20:45:11  66  ,0+TO_CHAR(ydate,'W')w
20:45:11  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:45:11  68  FROM q11
20:45:11  69  -- I dont want any NULL values from the LAG() functions:
20:45:11  70  WHERE lg72 > 0
20:45:11  71  ORDER BY pair,ydate
20:45:11  72  /

Table created.

Elapsed: 00:00:01.74
20:45:13 SQL> 
20:45:13 SQL> -- rpt
20:45:13 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9169
	-1	   10785

Elapsed: 00:00:00.04
20:45:13 SQL> 
20:45:13 SQL> -- Calc gains and ntiles
20:45:13 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.12
20:45:13 SQL> CREATE TABLE q15 COMPRESS AS
20:45:13   2  SELECT
20:45:13   3  pair
20:45:13   4  ,ydate
20:45:13   5  ,prdate -- Should be unique
20:45:13   6  ,trend -- +1 or -1
20:45:13   7  ,dc12 -- next statement needs this
20:45:13   8  -- Use NTILE() to derive some attributes
20:45:13   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:45:13  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:45:13  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:45:13  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:45:13  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:45:13  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:45:13  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:45:13  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:45:13  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:45:13  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:45:13  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:45:13  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:45:13  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:45:13  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:45:13  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:45:13  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:45:13  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:45:13  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:45:13  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:45:13  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:45:13  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:45:13  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:45:13  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:45:13  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:45:13  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:45:13  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:45:13  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:45:13  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:45:13  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:45:13  38  ,hh    att28
20:45:13  39  ,d     att29
20:45:13  40  ,w     att30
20:45:13  41  ,mpm   att31
20:45:13  42  ,trend att32
20:45:13  43  ,ug4 g4
20:45:13  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:45:13  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:45:13  46  FROM q13
20:45:13  47  ORDER BY pair,ydate
20:45:13  48  /

Table created.

Elapsed: 00:00:04.13
20:45:17 SQL> 
20:45:17 SQL> -- rpt
20:45:17 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:45:17   2  GROUP BY pair,trend,gatt,gattn
20:45:17   3  ORDER BY pair,trend,gatt,gattn
20:45:17   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00000241	    2988    .015610185
usd_cad 	-1 nup up  -.00227221	    3950    .057642004
usd_cad 	-1 up  nup  .00239421	    3847    .005945669
usd_cad 	 1 nup nup  -.0000176	    2111    -.06147166
usd_cad 	 1 nup up  -.00236526	    3862    .001325986
usd_cad 	 1 up  nup .002599531	    3148    -.00225244
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.05
20:45:17 SQL> 
20:45:17 SQL> -- rpt
20:45:17 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-17 20:35:00

Elapsed: 00:00:00.01
20:45:17 SQL> 
20:45:17 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.16
20:45:17 SQL> CREATE TABLE modsrc COMPRESS AS
20:45:17   2  SELECT
20:45:17   3  pair
20:45:17   4  ,ydate
20:45:17   5  ,prdate
20:45:17   6  ,trend
20:45:17   7  ,g4
20:45:17   8  ,gatt
20:45:17   9  ,gattn
20:45:17  10  ,dc12
20:45:17  11  FROM q15
20:45:17  12  /

Table created.

Elapsed: 00:00:00.10
20:45:18 SQL> 
20:45:18 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
20:45:18 SQL> 
20:45:18 SQL> -- rpt
20:45:18 SQL> 
20:45:18 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20818

Elapsed: 00:00:00.36
20:45:18 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.01
20:45:18 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.00
20:45:18 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19954

Elapsed: 00:00:00.00
20:45:18 SQL> 
20:45:18 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:45:18   2  GROUP BY pair,trend,gatt,gattn
20:45:18   3  ORDER BY pair,trend,gatt,gattn
20:45:18   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00000241	    2988    .015610185
usd_cad 	-1 nup up  -.00227221	    3950    .057642004
usd_cad 	-1 up  nup  .00239421	    3847    .005945669
usd_cad 	 1 nup nup  -.0000176	    2111    -.06147166
usd_cad 	 1 nup up  -.00236526	    3862    .001325986
usd_cad 	 1 up  nup .002599531	    3148    -.00225244
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
20:45:18 SQL> 
20:45:18 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
20:45:18 SQL> CREATE TABLE cad_ms10 COMPRESS AS
20:45:18   2  SELECT
20:45:18   3  ydate
20:45:18   4  ,trend cad_trend
20:45:18   5  ,g4    cad_g4
20:45:18   6  ,gatt  cad_gatt
20:45:18   7  ,gattn cad_gattn
20:45:18   8  FROM modsrc
20:45:18   9  /

Table created.

Elapsed: 00:00:00.42
20:45:19 SQL> 
20:45:19 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.40
20:45:19 SQL> 
20:45:19 SQL> -- rpt
20:45:19 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 00:30:01 2010-12-17 20:35:00	 9121	  -.0089      .0151
	-1 2010-09-13 19:45:01 2010-12-17 09:45:00	10785	  -.0107      .0147

Elapsed: 00:00:00.02
20:45:19 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 00:30:01 2010-12-17 20:35:00	       9169	 -.0089       .0151
	-1 2010-09-13 19:45:01 2010-12-17 09:45:00	      10785	 -.0107       .0147

Elapsed: 00:00:00.02
20:45:19 SQL> 
20:45:19 SQL> -- I need a copy of q15 attributes
20:45:19 SQL> 
20:45:19 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.03
20:45:19 SQL> CREATE TABLE cad_att COMPRESS AS
20:45:19   2  SELECT
20:45:19   3  ydate
20:45:19   4  ,att00 cad_att00
20:45:19   5  ,att01 cad_att01
20:45:19   6  ,att02 cad_att02
20:45:19   7  ,att03 cad_att03
20:45:19   8  ,att04 cad_att04
20:45:19   9  ,att05 cad_att05
20:45:19  10  ,att06 cad_att06
20:45:19  11  ,att07 cad_att07
20:45:19  12  ,att08 cad_att08
20:45:19  13  ,att09 cad_att09
20:45:19  14  ,att10 cad_att10
20:45:19  15  ,att11 cad_att11
20:45:19  16  ,att12 cad_att12
20:45:19  17  ,att13 cad_att13
20:45:19  18  ,att14 cad_att14
20:45:19  19  ,att15 cad_att15
20:45:19  20  ,att16 cad_att16
20:45:19  21  ,att17 cad_att17
20:45:19  22  ,att18 cad_att18
20:45:19  23  ,att19 cad_att19
20:45:19  24  ,att20 cad_att20
20:45:19  25  ,att21 cad_att21
20:45:19  26  ,att22 cad_att22
20:45:19  27  ,att23 cad_att23
20:45:19  28  ,att24 cad_att24
20:45:19  29  ,att25 cad_att25
20:45:19  30  ,att26 cad_att26
20:45:19  31  ,att27 cad_att27
20:45:19  32  ,att28 cad_att28
20:45:19  33  ,att29 cad_att29
20:45:19  34  ,att30 cad_att30
20:45:19  35  ,att31 cad_att31
20:45:19  36  ,att32 cad_att32
20:45:19  37  FROM q15
20:45:19  38  /

Table created.

Elapsed: 00:00:00.14
20:45:19 SQL> 
20:45:19 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
20:45:20 SQL> 
20:45:20 SQL> -- rpt
20:45:20 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19954

Elapsed: 00:00:00.00
20:45:20 SQL> 
20:45:20 SQL> --
20:45:20 SQL> -- chf10.sql
20:45:20 SQL> --
20:45:20 SQL> 
20:45:20 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:45:20 SQL> 
20:45:20 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
20:45:20 SQL> 
20:45:20 SQL> -- I created di5min here:
20:45:20 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:45:20 SQL> 
20:45:20 SQL> CREATE OR REPLACE VIEW q11 AS
20:45:20   2  SELECT
20:45:20   3  pair
20:45:20   4  ,ydate
20:45:20   5  ,prdate
20:45:20   6  ,rownum rnum -- acts as t in my time-series
20:45:20   7  ,clse
20:45:20   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:45:20   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:45:20  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:45:20  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:45:20  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:45:20  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:45:20  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:45:20  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:45:20  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:45:20  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:45:20  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:45:20  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:45:20  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:45:20  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:45:20  22  FROM di5min WHERE pair LIKE'%chf%'
20:45:20  23  ORDER BY ydate
20:45:20  24  /

View created.

Elapsed: 00:00:00.04
20:45:20 SQL> 
20:45:20 SQL> -- rpt
20:45:20 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20821

Elapsed: 00:00:00.36
20:45:20 SQL> 
20:45:20 SQL> -- Calc deltas and gains
20:45:20 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
20:45:21 SQL> 
20:45:21 SQL> CREATE TABLE q13 COMPRESS AS
20:45:21   2  SELECT
20:45:21   3  pair
20:45:21   4  ,ydate
20:45:21   5  ,prdate
20:45:21   6  ,rnum
20:45:21   7  ,lg4
20:45:21   8  ,lg8
20:45:21   9  ,lg12
20:45:21  10  ,ld4
20:45:21  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:45:21  12  -- step by 1
20:45:21  13  ,clse-lg1 d01
20:45:21  14  ,lg1-lg2	d12
20:45:21  15  ,lg2-lg3	d23
20:45:21  16  ,lg3-lg4	d34
20:45:21  17  ,lg4-lg5	d45
20:45:21  18  ,lg5-lg6	d56
20:45:21  19  ,lg6-lg7	d67
20:45:21  20  ,lg7-lg8	d78
20:45:21  21  ,lg8-lg9	d89
20:45:21  22  -- step by 2
20:45:21  23  ,clse-lg2 d02
20:45:21  24  ,lg2-lg4 d24
20:45:21  25  ,lg4-lg6 d46
20:45:21  26  ,lg6-lg8 d68
20:45:21  27  -- step by 3
20:45:21  28  ,clse-lg3 d03
20:45:21  29  ,lg3-lg6	d36
20:45:21  30  ,lg6-lg9	d69
20:45:21  31  ,lg9-lg12 d912
20:45:21  32  -- step by 4
20:45:21  33  ,clse-lg4 d04
20:45:21  34  ,lg4-lg8	d48
20:45:21  35  ,lg8-lg12 d812
20:45:21  36  ,lg6-lg12 d612
20:45:21  37  ,lg12-lg18 d1218
20:45:21  38  --
20:45:21  39  ,ABS(clse-lg1)dc1
20:45:21  40  ,ABS(clse-lg2)dc2
20:45:21  41  ,ABS(clse-lg3)dc3
20:45:21  42  ,ABS(clse-lg4)dc4
20:45:21  43  ,ABS(clse-lg5)dc5
20:45:21  44  ,ABS(clse-lg6)dc6
20:45:21  45  ,ABS(clse-lg7)dc7
20:45:21  46  ,ABS(clse-lg8)dc8
20:45:21  47  ,ABS(clse-lg9)dc9
20:45:21  48  ,ABS(clse-lg12)dc12
20:45:21  49  ,ABS(clse-lg18)dc18
20:45:21  50  ,ABS(clse-lg24)dc24
20:45:21  51  ,ABS(clse-lg72)dc72
20:45:21  52  ,(ld4-clse) ug4
20:45:21  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:45:21  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:45:21  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:45:21  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:45:21  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:45:21  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:45:21  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:45:21  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:45:21  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:45:21  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:45:21  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:45:21  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:45:21  65  ,0+TO_CHAR(ydate,'D')d
20:45:21  66  ,0+TO_CHAR(ydate,'W')w
20:45:21  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:45:21  68  FROM q11
20:45:21  69  -- I dont want any NULL values from the LAG() functions:
20:45:21  70  WHERE lg72 > 0
20:45:21  71  ORDER BY pair,ydate
20:45:21  72  /

Table created.

Elapsed: 00:00:01.76
20:45:22 SQL> 
20:45:22 SQL> -- rpt
20:45:22 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9402
	-1	   10555

Elapsed: 00:00:00.04
20:45:22 SQL> 
20:45:22 SQL> -- Calc gains and ntiles
20:45:22 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.19
20:45:23 SQL> CREATE TABLE q15 COMPRESS AS
20:45:23   2  SELECT
20:45:23   3  pair
20:45:23   4  ,ydate
20:45:23   5  ,prdate -- Should be unique
20:45:23   6  ,trend -- +1 or -1
20:45:23   7  ,dc12 -- next statement needs this
20:45:23   8  -- Use NTILE() to derive some attributes
20:45:23   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:45:23  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:45:23  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:45:23  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:45:23  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:45:23  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:45:23  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:45:23  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:45:23  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:45:23  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:45:23  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:45:23  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:45:23  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:45:23  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:45:23  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:45:23  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:45:23  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:45:23  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:45:23  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:45:23  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:45:23  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:45:23  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:45:23  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:45:23  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:45:23  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:45:23  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:45:23  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:45:23  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:45:23  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:45:23  38  ,hh    att28
20:45:23  39  ,d     att29
20:45:23  40  ,w     att30
20:45:23  41  ,mpm   att31
20:45:23  42  ,trend att32
20:45:23  43  ,ug4 g4
20:45:23  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:45:23  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:45:23  46  FROM q13
20:45:23  47  ORDER BY pair,ydate
20:45:23  48  /

Table created.

Elapsed: 00:00:03.96
20:45:27 SQL> 
20:45:27 SQL> -- rpt
20:45:27 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:45:27   2  GROUP BY pair,trend,gatt,gattn
20:45:27   3  ORDER BY pair,trend,gatt,gattn
20:45:27   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000037939	    2591     .04688768
usd_chf 	-1 nup up  -.00292377	    3837    .058106097
usd_chf 	-1 up  nup .002706403	    4127    -.12224145
usd_chf 	 1 nup nup 8.7113E-06	    2227    .016736454
usd_chf 	 1 nup up  -.00253995	    3874    .112165501
usd_chf 	 1 up  nup  .00244741	    3253    -.16336111
usd_chf 	 1			       0

7 rows selected.

Elapsed: 00:00:00.03
20:45:27 SQL> 
20:45:27 SQL> -- rpt
20:45:27 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-17 20:35:00

Elapsed: 00:00:00.02
20:45:27 SQL> 
20:45:27 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.11
20:45:27 SQL> CREATE TABLE modsrc COMPRESS AS
20:45:27   2  SELECT
20:45:27   3  pair
20:45:27   4  ,ydate
20:45:27   5  ,prdate
20:45:27   6  ,trend
20:45:27   7  ,g4
20:45:27   8  ,gatt
20:45:27   9  ,gattn
20:45:27  10  ,dc12
20:45:27  11  FROM q15
20:45:27  12  /

Table created.

Elapsed: 00:00:00.08
20:45:27 SQL> 
20:45:27 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
20:45:27 SQL> 
20:45:27 SQL> -- rpt
20:45:27 SQL> 
20:45:27 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.36
20:45:27 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
20:45:27 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.02
20:45:27 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
20:45:27 SQL> 
20:45:27 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:45:27   2  GROUP BY pair,trend,gatt,gattn
20:45:27   3  ORDER BY pair,trend,gatt,gattn
20:45:27   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000037939	    2591     .04688768
usd_chf 	-1 nup up  -.00292377	    3837    .058106097
usd_chf 	-1 up  nup .002706403	    4127    -.12224145
usd_chf 	 1 nup nup 8.7113E-06	    2227    .016736454
usd_chf 	 1 nup up  -.00253995	    3874    .112165501
usd_chf 	 1 up  nup  .00244741	    3253    -.16336111
usd_chf 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
20:45:27 SQL> 
20:45:27 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
20:45:27 SQL> CREATE TABLE chf_ms10 COMPRESS AS
20:45:27   2  SELECT
20:45:27   3  ydate
20:45:27   4  ,trend chf_trend
20:45:27   5  ,g4    chf_g4
20:45:27   6  ,gatt  chf_gatt
20:45:27   7  ,gattn chf_gattn
20:45:27   8  FROM modsrc
20:45:27   9  /

Table created.

Elapsed: 00:00:00.08
20:45:28 SQL> 
20:45:28 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
20:45:28 SQL> 
20:45:28 SQL> -- rpt
20:45:28 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-15 02:05:01 2010-12-17 20:35:00	 9354	  -.0176     .01365
	-1 2010-09-13 19:45:01 2010-12-17 13:50:00	10555	  -.0166      .0149

Elapsed: 00:00:00.01
20:45:28 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-15 02:05:01 2010-12-17 20:35:00	       9402	 -.0176      .01365
	-1 2010-09-13 19:45:01 2010-12-17 13:50:00	      10555	 -.0166       .0149

Elapsed: 00:00:00.01
20:45:28 SQL> 
20:45:28 SQL> -- I need a copy of q15 attributes
20:45:28 SQL> 
20:45:28 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.03
20:45:28 SQL> CREATE TABLE chf_att COMPRESS AS
20:45:28   2  SELECT
20:45:28   3  ydate
20:45:28   4  ,att00 chf_att00
20:45:28   5  ,att01 chf_att01
20:45:28   6  ,att02 chf_att02
20:45:28   7  ,att03 chf_att03
20:45:28   8  ,att04 chf_att04
20:45:28   9  ,att05 chf_att05
20:45:28  10  ,att06 chf_att06
20:45:28  11  ,att07 chf_att07
20:45:28  12  ,att08 chf_att08
20:45:28  13  ,att09 chf_att09
20:45:28  14  ,att10 chf_att10
20:45:28  15  ,att11 chf_att11
20:45:28  16  ,att12 chf_att12
20:45:28  17  ,att13 chf_att13
20:45:28  18  ,att14 chf_att14
20:45:28  19  ,att15 chf_att15
20:45:28  20  ,att16 chf_att16
20:45:28  21  ,att17 chf_att17
20:45:28  22  ,att18 chf_att18
20:45:28  23  ,att19 chf_att19
20:45:28  24  ,att20 chf_att20
20:45:28  25  ,att21 chf_att21
20:45:28  26  ,att22 chf_att22
20:45:28  27  ,att23 chf_att23
20:45:28  28  ,att24 chf_att24
20:45:28  29  ,att25 chf_att25
20:45:28  30  ,att26 chf_att26
20:45:28  31  ,att27 chf_att27
20:45:28  32  ,att28 chf_att28
20:45:28  33  ,att29 chf_att29
20:45:28  34  ,att30 chf_att30
20:45:28  35  ,att31 chf_att31
20:45:28  36  ,att32 chf_att32
20:45:28  37  FROM q15
20:45:28  38  /

Table created.

Elapsed: 00:00:00.14
20:45:28 SQL> 
20:45:28 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
20:45:28 SQL> 
20:45:28 SQL> -- rpt
20:45:28 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.00
20:45:28 SQL> 
20:45:28 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
