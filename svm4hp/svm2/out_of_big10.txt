
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 16 20:36:23 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

20:36:23 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
20:36:23 SQL> 20:36:23 SQL> --
20:36:23 SQL> -- eur10.sql
20:36:23 SQL> --
20:36:23 SQL> 
20:36:23 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:36:23 SQL> 
20:36:23 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.01
20:36:23 SQL> 
20:36:23 SQL> -- I created di5min here:
20:36:24 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:36:24 SQL> 
20:36:24 SQL> CREATE OR REPLACE VIEW q11 AS
20:36:24   2  SELECT
20:36:24   3  pair
20:36:24   4  ,ydate
20:36:24   5  ,prdate
20:36:24   6  ,rownum rnum -- acts as t in my time-series
20:36:24   7  ,clse
20:36:24   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:36:24   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:36:24  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:36:24  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:36:24  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:36:24  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:36:24  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:36:24  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:36:24  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:36:24  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:36:24  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:36:24  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:36:24  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:36:24  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:36:24  22  FROM di5min WHERE pair LIKE'%eur%'
20:36:24  23  ORDER BY ydate
20:36:24  24  /

View created.

Elapsed: 00:00:00.05
20:36:24 SQL> 
20:36:24 SQL> -- rpt
20:36:24 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20825

Elapsed: 00:00:00.36
20:36:24 SQL> 
20:36:24 SQL> -- Calc deltas and gains
20:36:24 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.04
20:36:24 SQL> 
20:36:24 SQL> CREATE TABLE q13 COMPRESS AS
20:36:24   2  SELECT
20:36:24   3  pair
20:36:24   4  ,ydate
20:36:24   5  ,prdate
20:36:24   6  ,rnum
20:36:24   7  ,lg4
20:36:24   8  ,lg8
20:36:24   9  ,lg12
20:36:24  10  ,ld4
20:36:24  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:36:24  12  -- step by 1
20:36:24  13  ,clse-lg1 d01
20:36:24  14  ,lg1-lg2	d12
20:36:24  15  ,lg2-lg3	d23
20:36:24  16  ,lg3-lg4	d34
20:36:24  17  ,lg4-lg5	d45
20:36:24  18  ,lg5-lg6	d56
20:36:24  19  ,lg6-lg7	d67
20:36:24  20  ,lg7-lg8	d78
20:36:24  21  ,lg8-lg9	d89
20:36:24  22  -- step by 2
20:36:24  23  ,clse-lg2 d02
20:36:24  24  ,lg2-lg4 d24
20:36:24  25  ,lg4-lg6 d46
20:36:24  26  ,lg6-lg8 d68
20:36:24  27  -- step by 3
20:36:24  28  ,clse-lg3 d03
20:36:24  29  ,lg3-lg6	d36
20:36:24  30  ,lg6-lg9	d69
20:36:24  31  ,lg9-lg12 d912
20:36:24  32  -- step by 4
20:36:24  33  ,clse-lg4 d04
20:36:24  34  ,lg4-lg8	d48
20:36:24  35  ,lg8-lg12 d812
20:36:24  36  ,lg6-lg12 d612
20:36:24  37  ,lg12-lg18 d1218
20:36:24  38  --
20:36:24  39  ,ABS(clse-lg1)dc1
20:36:24  40  ,ABS(clse-lg2)dc2
20:36:24  41  ,ABS(clse-lg3)dc3
20:36:24  42  ,ABS(clse-lg4)dc4
20:36:24  43  ,ABS(clse-lg5)dc5
20:36:24  44  ,ABS(clse-lg6)dc6
20:36:24  45  ,ABS(clse-lg7)dc7
20:36:24  46  ,ABS(clse-lg8)dc8
20:36:24  47  ,ABS(clse-lg9)dc9
20:36:24  48  ,ABS(clse-lg12)dc12
20:36:24  49  ,ABS(clse-lg18)dc18
20:36:24  50  ,ABS(clse-lg24)dc24
20:36:24  51  ,ABS(clse-lg72)dc72
20:36:24  52  ,(ld4-clse) ug4
20:36:24  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:36:24  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:36:24  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:36:24  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:36:24  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:36:24  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:36:24  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:36:24  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:36:24  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:36:24  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:36:24  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:36:24  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:36:24  65  ,0+TO_CHAR(ydate,'D')d
20:36:24  66  ,0+TO_CHAR(ydate,'W')w
20:36:24  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:36:24  68  FROM q11
20:36:24  69  -- I dont want any NULL values from the LAG() functions:
20:36:24  70  WHERE lg72 > 0
20:36:24  71  ORDER BY pair,ydate
20:36:24  72  /

Table created.

Elapsed: 00:00:01.93
20:36:26 SQL> 
20:36:26 SQL> -- rpt
20:36:26 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10274
	-1	    9687

Elapsed: 00:00:00.06
20:36:26 SQL> 
20:36:26 SQL> -- Calc gains and ntiles
20:36:26 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.05
20:36:26 SQL> CREATE TABLE q15 COMPRESS AS
20:36:26   2  SELECT
20:36:26   3  pair
20:36:26   4  ,ydate
20:36:26   5  ,prdate -- Should be unique
20:36:26   6  ,trend -- +1 or -1
20:36:26   7  ,dc12 -- next statement needs this
20:36:26   8  -- Use NTILE() to derive some attributes
20:36:26   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:36:26  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:36:26  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:36:26  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:36:26  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:36:26  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:36:26  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:36:26  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:36:26  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:36:26  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:36:26  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:36:26  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:36:26  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:36:26  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:36:26  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:36:26  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:36:26  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:36:26  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:36:26  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:36:26  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:36:26  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:36:26  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:36:26  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:36:26  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:36:26  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:36:26  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:36:26  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:36:26  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:36:26  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:36:26  38  ,hh    att28
20:36:26  39  ,d     att29
20:36:26  40  ,w     att30
20:36:26  41  ,mpm   att31
20:36:26  42  ,trend att32
20:36:26  43  ,ug4 g4
20:36:26  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:36:26  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:36:26  46  FROM q13
20:36:26  47  ORDER BY pair,ydate
20:36:26  48  /

Table created.

Elapsed: 00:00:03.98
20:36:30 SQL> 
20:36:30 SQL> -- rpt
20:36:30 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:36:30   2  GROUP BY pair,trend,gatt,gattn
20:36:30   3  ORDER BY pair,trend,gatt,gattn
20:36:30   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003676659	    4174    -.21261099
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003722517	    4320    -.14656632
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
20:36:30 SQL> 
20:36:30 SQL> -- rpt
20:36:30 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-16 20:30:00

Elapsed: 00:00:00.02
20:36:30 SQL> 
20:36:30 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.02
20:36:30 SQL> CREATE TABLE modsrc COMPRESS AS
20:36:30   2  SELECT
20:36:30   3  pair
20:36:30   4  ,ydate
20:36:30   5  ,prdate
20:36:30   6  ,trend
20:36:30   7  ,g4
20:36:30   8  ,gatt
20:36:30   9  ,gattn
20:36:30  10  ,dc12
20:36:30  11  FROM q15
20:36:30  12  /

Table created.

Elapsed: 00:00:00.08
20:36:30 SQL> 
20:36:30 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
20:36:30 SQL> 
20:36:30 SQL> -- rpt
20:36:30 SQL> 
20:36:30 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20825

Elapsed: 00:00:00.34
20:36:31 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.01
20:36:31 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.01
20:36:31 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
20:36:31 SQL> 
20:36:31 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:36:31   2  GROUP BY pair,trend,gatt,gattn
20:36:31   3  ORDER BY pair,trend,gatt,gattn
20:36:31   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00001559	    1451    .040431941
eur_usd 	-1 nup up  -.00362281	    4024    .148664094
eur_usd 	-1 up  nup .003676659	    4174    -.21261099
eur_usd 	-1			       0
eur_usd 	 1 nup nup .000014474	    1741     .03725399
eur_usd 	 1 nup up  -.00342209	    4203     .11794192
eur_usd 	 1 up  nup .003722517	    4320    -.14656632
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
20:36:31 SQL> 
20:36:31 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.06
20:36:31 SQL> CREATE TABLE eur_ms10 COMPRESS AS
20:36:31   2  SELECT
20:36:31   3  ydate
20:36:31   4  ,trend eur_trend
20:36:31   5  ,g4    eur_g4
20:36:31   6  ,gatt  eur_gatt
20:36:31   7  ,gattn eur_gattn
20:36:31   8  FROM modsrc
20:36:31   9  /

Table created.

Elapsed: 00:00:00.07
20:36:31 SQL> 
20:36:31 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
20:36:31 SQL> 
20:36:31 SQL> -- rpt
20:36:31 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-12 22:15:01 2010-12-16 20:10:00	10264	  -.0153      .0165
	-1 2010-09-10 20:40:01 2010-12-16 20:30:00	 9649	  -.0164      .0167

Elapsed: 00:00:00.02
20:36:31 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-12 22:15:01 2010-12-16 20:10:00	      10274	 -.0153       .0165
	-1 2010-09-10 20:40:01 2010-12-16 20:30:00	       9687	 -.0164       .0167

Elapsed: 00:00:00.01
20:36:31 SQL> 
20:36:31 SQL> -- I need a copy of q15 attributes
20:36:31 SQL> 
20:36:31 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.04
20:36:31 SQL> CREATE TABLE eur_att COMPRESS AS
20:36:31   2  SELECT
20:36:31   3  ydate
20:36:31   4  ,att00 eur_att00
20:36:31   5  ,att01 eur_att01
20:36:31   6  ,att02 eur_att02
20:36:31   7  ,att03 eur_att03
20:36:31   8  ,att04 eur_att04
20:36:31   9  ,att05 eur_att05
20:36:31  10  ,att06 eur_att06
20:36:31  11  ,att07 eur_att07
20:36:31  12  ,att08 eur_att08
20:36:31  13  ,att09 eur_att09
20:36:31  14  ,att10 eur_att10
20:36:31  15  ,att11 eur_att11
20:36:31  16  ,att12 eur_att12
20:36:31  17  ,att13 eur_att13
20:36:31  18  ,att14 eur_att14
20:36:31  19  ,att15 eur_att15
20:36:31  20  ,att16 eur_att16
20:36:31  21  ,att17 eur_att17
20:36:31  22  ,att18 eur_att18
20:36:31  23  ,att19 eur_att19
20:36:31  24  ,att20 eur_att20
20:36:31  25  ,att21 eur_att21
20:36:31  26  ,att22 eur_att22
20:36:31  27  ,att23 eur_att23
20:36:31  28  ,att24 eur_att24
20:36:31  29  ,att25 eur_att25
20:36:31  30  ,att26 eur_att26
20:36:31  31  ,att27 eur_att27
20:36:31  32  ,att28 eur_att28
20:36:31  33  ,att29 eur_att29
20:36:31  34  ,att30 eur_att30
20:36:31  35  ,att31 eur_att31
20:36:31  36  ,att32 eur_att32
20:36:31  37  FROM q15
20:36:31  38  /

Table created.

Elapsed: 00:00:00.13
20:36:31 SQL> 
20:36:31 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.46
20:36:32 SQL> 
20:36:32 SQL> -- rpt
20:36:32 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19961

Elapsed: 00:00:00.01
20:36:32 SQL> 
20:36:32 SQL> --
20:36:32 SQL> -- aud10.sql
20:36:32 SQL> --
20:36:32 SQL> 
20:36:32 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:36:32 SQL> 
20:36:32 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.28
20:36:32 SQL> 
20:36:32 SQL> -- I created di5min here:
20:36:32 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:36:32 SQL> 
20:36:32 SQL> CREATE OR REPLACE VIEW q11 AS
20:36:32   2  SELECT
20:36:32   3  pair
20:36:32   4  ,ydate
20:36:32   5  ,prdate
20:36:32   6  ,rownum rnum -- acts as t in my time-series
20:36:32   7  ,clse
20:36:32   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:36:32   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:36:32  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:36:32  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:36:32  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:36:32  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:36:32  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:36:32  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:36:32  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:36:32  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:36:32  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:36:32  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:36:32  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:36:32  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:36:32  22  FROM di5min WHERE pair LIKE'%aud%'
20:36:32  23  ORDER BY ydate
20:36:32  24  /

View created.

Elapsed: 00:00:00.04
20:36:32 SQL> 
20:36:32 SQL> -- rpt
20:36:32 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20821

Elapsed: 00:00:00.36
20:36:32 SQL> 
20:36:32 SQL> -- Calc deltas and gains
20:36:32 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.19
20:36:33 SQL> 
20:36:33 SQL> CREATE TABLE q13 COMPRESS AS
20:36:33   2  SELECT
20:36:33   3  pair
20:36:33   4  ,ydate
20:36:33   5  ,prdate
20:36:33   6  ,rnum
20:36:33   7  ,lg4
20:36:33   8  ,lg8
20:36:33   9  ,lg12
20:36:33  10  ,ld4
20:36:33  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:36:33  12  -- step by 1
20:36:33  13  ,clse-lg1 d01
20:36:33  14  ,lg1-lg2	d12
20:36:33  15  ,lg2-lg3	d23
20:36:33  16  ,lg3-lg4	d34
20:36:33  17  ,lg4-lg5	d45
20:36:33  18  ,lg5-lg6	d56
20:36:33  19  ,lg6-lg7	d67
20:36:33  20  ,lg7-lg8	d78
20:36:33  21  ,lg8-lg9	d89
20:36:33  22  -- step by 2
20:36:33  23  ,clse-lg2 d02
20:36:33  24  ,lg2-lg4 d24
20:36:33  25  ,lg4-lg6 d46
20:36:33  26  ,lg6-lg8 d68
20:36:33  27  -- step by 3
20:36:33  28  ,clse-lg3 d03
20:36:33  29  ,lg3-lg6	d36
20:36:33  30  ,lg6-lg9	d69
20:36:33  31  ,lg9-lg12 d912
20:36:33  32  -- step by 4
20:36:33  33  ,clse-lg4 d04
20:36:33  34  ,lg4-lg8	d48
20:36:33  35  ,lg8-lg12 d812
20:36:33  36  ,lg6-lg12 d612
20:36:33  37  ,lg12-lg18 d1218
20:36:33  38  --
20:36:33  39  ,ABS(clse-lg1)dc1
20:36:33  40  ,ABS(clse-lg2)dc2
20:36:33  41  ,ABS(clse-lg3)dc3
20:36:33  42  ,ABS(clse-lg4)dc4
20:36:33  43  ,ABS(clse-lg5)dc5
20:36:33  44  ,ABS(clse-lg6)dc6
20:36:33  45  ,ABS(clse-lg7)dc7
20:36:33  46  ,ABS(clse-lg8)dc8
20:36:33  47  ,ABS(clse-lg9)dc9
20:36:33  48  ,ABS(clse-lg12)dc12
20:36:33  49  ,ABS(clse-lg18)dc18
20:36:33  50  ,ABS(clse-lg24)dc24
20:36:33  51  ,ABS(clse-lg72)dc72
20:36:33  52  ,(ld4-clse) ug4
20:36:33  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:36:33  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:36:33  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:36:33  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:36:33  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:36:33  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:36:33  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:36:33  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:36:33  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:36:33  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:36:33  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:36:33  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:36:33  65  ,0+TO_CHAR(ydate,'D')d
20:36:33  66  ,0+TO_CHAR(ydate,'W')w
20:36:33  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:36:33  68  FROM q11
20:36:33  69  -- I dont want any NULL values from the LAG() functions:
20:36:33  70  WHERE lg72 > 0
20:36:33  71  ORDER BY pair,ydate
20:36:33  72  /

Table created.

Elapsed: 00:00:01.69
20:36:34 SQL> 
20:36:34 SQL> -- rpt
20:36:34 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10464
	-1	    9493

Elapsed: 00:00:00.03
20:36:34 SQL> 
20:36:34 SQL> -- Calc gains and ntiles
20:36:34 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
20:36:34 SQL> CREATE TABLE q15 COMPRESS AS
20:36:34   2  SELECT
20:36:34   3  pair
20:36:34   4  ,ydate
20:36:34   5  ,prdate -- Should be unique
20:36:34   6  ,trend -- +1 or -1
20:36:34   7  ,dc12 -- next statement needs this
20:36:34   8  -- Use NTILE() to derive some attributes
20:36:34   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:36:34  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:36:34  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:36:34  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:36:34  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:36:34  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:36:34  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:36:34  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:36:34  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:36:34  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:36:34  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:36:34  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:36:34  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:36:34  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:36:34  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:36:34  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:36:34  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:36:34  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:36:34  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:36:34  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:36:34  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:36:34  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:36:34  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:36:34  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:36:34  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:36:34  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:36:34  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:36:34  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:36:34  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:36:34  38  ,hh    att28
20:36:34  39  ,d     att29
20:36:34  40  ,w     att30
20:36:34  41  ,mpm   att31
20:36:34  42  ,trend att32
20:36:34  43  ,ug4 g4
20:36:34  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:36:34  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:36:34  46  FROM q13
20:36:34  47  ORDER BY pair,ydate
20:36:34  48  /

Table created.

Elapsed: 00:00:04.04
20:36:39 SQL> 
20:36:39 SQL> -- rpt
20:36:39 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:36:39   2  GROUP BY pair,trend,gatt,gattn
20:36:39   3  ORDER BY pair,trend,gatt,gattn
20:36:39   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002978857	    4343    .025774359
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.9795E-06	    1955    .022883713
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002943187	    4422    -.18090288
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
20:36:39 SQL> 
20:36:39 SQL> -- rpt
20:36:39 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-16 20:25:00

Elapsed: 00:00:00.02
20:36:39 SQL> 
20:36:39 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
20:36:39 SQL> CREATE TABLE modsrc COMPRESS AS
20:36:39   2  SELECT
20:36:39   3  pair
20:36:39   4  ,ydate
20:36:39   5  ,prdate
20:36:39   6  ,trend
20:36:39   7  ,g4
20:36:39   8  ,gatt
20:36:39   9  ,gattn
20:36:39  10  ,dc12
20:36:39  11  FROM q15
20:36:39  12  /

Table created.

Elapsed: 00:00:00.09
20:36:39 SQL> 
20:36:39 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
20:36:39 SQL> 
20:36:39 SQL> -- rpt
20:36:39 SQL> 
20:36:39 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.35
20:36:39 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
20:36:39 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
20:36:39 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
20:36:39 SQL> 
20:36:39 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:36:39   2  GROUP BY pair,trend,gatt,gattn
20:36:39   3  ORDER BY pair,trend,gatt,gattn
20:36:39   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup .000032531	    1537    -.04095214
aud_usd 	-1 nup up  -.00318952	    3595    .000866359
aud_usd 	-1 up  nup .002978857	    4343    .025774359
aud_usd 	-1			       0
aud_usd 	 1 nup nup 2.9795E-06	    1955    .022883713
aud_usd 	 1 nup up   -.0028891	    4057    .054230128
aud_usd 	 1 up  nup .002943187	    4422    -.18090288
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
20:36:39 SQL> 
20:36:39 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
20:36:39 SQL> CREATE TABLE aud_ms10 COMPRESS AS
20:36:39   2  SELECT
20:36:39   3  ydate
20:36:39   4  ,trend aud_trend
20:36:39   5  ,g4    aud_g4
20:36:39   6  ,gatt  aud_gatt
20:36:39   7  ,gattn aud_gattn
20:36:39   8  FROM modsrc
20:36:39   9  /

Table created.

Elapsed: 00:00:00.06
20:36:39 SQL> 
20:36:39 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
20:36:40 SQL> 
20:36:40 SQL> -- rpt
20:36:40 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 20:40:01 2010-12-16 20:25:00	10434	  -.0162    .010925
	-1 2010-09-14 00:35:01 2010-12-16 20:20:00	 9475	   -.017      .0131

Elapsed: 00:00:00.03
20:36:40 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 20:40:01 2010-12-16 20:25:00	      10464	 -.0162     .010925
	-1 2010-09-14 00:35:01 2010-12-16 20:20:00	       9493	  -.017       .0131

Elapsed: 00:00:00.01
20:36:40 SQL> 
20:36:40 SQL> -- I need a copy of q15 attributes
20:36:40 SQL> 
20:36:40 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.04
20:36:40 SQL> CREATE TABLE aud_att COMPRESS AS
20:36:40   2  SELECT
20:36:40   3  ydate
20:36:40   4  ,att00 aud_att00
20:36:40   5  ,att01 aud_att01
20:36:40   6  ,att02 aud_att02
20:36:40   7  ,att03 aud_att03
20:36:40   8  ,att04 aud_att04
20:36:40   9  ,att05 aud_att05
20:36:40  10  ,att06 aud_att06
20:36:40  11  ,att07 aud_att07
20:36:40  12  ,att08 aud_att08
20:36:40  13  ,att09 aud_att09
20:36:40  14  ,att10 aud_att10
20:36:40  15  ,att11 aud_att11
20:36:40  16  ,att12 aud_att12
20:36:40  17  ,att13 aud_att13
20:36:40  18  ,att14 aud_att14
20:36:40  19  ,att15 aud_att15
20:36:40  20  ,att16 aud_att16
20:36:40  21  ,att17 aud_att17
20:36:40  22  ,att18 aud_att18
20:36:40  23  ,att19 aud_att19
20:36:40  24  ,att20 aud_att20
20:36:40  25  ,att21 aud_att21
20:36:40  26  ,att22 aud_att22
20:36:40  27  ,att23 aud_att23
20:36:40  28  ,att24 aud_att24
20:36:40  29  ,att25 aud_att25
20:36:40  30  ,att26 aud_att26
20:36:40  31  ,att27 aud_att27
20:36:40  32  ,att28 aud_att28
20:36:40  33  ,att29 aud_att29
20:36:40  34  ,att30 aud_att30
20:36:40  35  ,att31 aud_att31
20:36:40  36  ,att32 aud_att32
20:36:40  37  FROM q15
20:36:40  38  /

Table created.

Elapsed: 00:00:00.13
20:36:40 SQL> 
20:36:40 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.39
20:36:40 SQL> 
20:36:40 SQL> -- rpt
20:36:40 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.01
20:36:40 SQL> 
20:36:40 SQL> --
20:36:40 SQL> -- gbp10.sql
20:36:40 SQL> --
20:36:40 SQL> 
20:36:40 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:36:40 SQL> 
20:36:40 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.38
20:36:41 SQL> 
20:36:41 SQL> -- I created di5min here:
20:36:41 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:36:41 SQL> 
20:36:41 SQL> CREATE OR REPLACE VIEW q11 AS
20:36:41   2  SELECT
20:36:41   3  pair
20:36:41   4  ,ydate
20:36:41   5  ,prdate
20:36:41   6  ,rownum rnum -- acts as t in my time-series
20:36:41   7  ,clse
20:36:41   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:36:41   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:36:41  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:36:41  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:36:41  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:36:41  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:36:41  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:36:41  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:36:41  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:36:41  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:36:41  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:36:41  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:36:41  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:36:41  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:36:41  22  FROM di5min WHERE pair LIKE'%gbp%'
20:36:41  23  ORDER BY ydate
20:36:41  24  /

View created.

Elapsed: 00:00:00.03
20:36:41 SQL> 
20:36:41 SQL> -- rpt
20:36:41 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20824

Elapsed: 00:00:00.36
20:36:41 SQL> 
20:36:41 SQL> -- Calc deltas and gains
20:36:41 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.15
20:36:41 SQL> 
20:36:41 SQL> CREATE TABLE q13 COMPRESS AS
20:36:41   2  SELECT
20:36:41   3  pair
20:36:41   4  ,ydate
20:36:41   5  ,prdate
20:36:41   6  ,rnum
20:36:41   7  ,lg4
20:36:41   8  ,lg8
20:36:41   9  ,lg12
20:36:41  10  ,ld4
20:36:41  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:36:41  12  -- step by 1
20:36:41  13  ,clse-lg1 d01
20:36:41  14  ,lg1-lg2	d12
20:36:41  15  ,lg2-lg3	d23
20:36:41  16  ,lg3-lg4	d34
20:36:41  17  ,lg4-lg5	d45
20:36:41  18  ,lg5-lg6	d56
20:36:41  19  ,lg6-lg7	d67
20:36:41  20  ,lg7-lg8	d78
20:36:41  21  ,lg8-lg9	d89
20:36:41  22  -- step by 2
20:36:41  23  ,clse-lg2 d02
20:36:41  24  ,lg2-lg4 d24
20:36:41  25  ,lg4-lg6 d46
20:36:41  26  ,lg6-lg8 d68
20:36:41  27  -- step by 3
20:36:41  28  ,clse-lg3 d03
20:36:41  29  ,lg3-lg6	d36
20:36:41  30  ,lg6-lg9	d69
20:36:41  31  ,lg9-lg12 d912
20:36:41  32  -- step by 4
20:36:41  33  ,clse-lg4 d04
20:36:41  34  ,lg4-lg8	d48
20:36:41  35  ,lg8-lg12 d812
20:36:41  36  ,lg6-lg12 d612
20:36:41  37  ,lg12-lg18 d1218
20:36:41  38  --
20:36:41  39  ,ABS(clse-lg1)dc1
20:36:41  40  ,ABS(clse-lg2)dc2
20:36:41  41  ,ABS(clse-lg3)dc3
20:36:41  42  ,ABS(clse-lg4)dc4
20:36:41  43  ,ABS(clse-lg5)dc5
20:36:41  44  ,ABS(clse-lg6)dc6
20:36:41  45  ,ABS(clse-lg7)dc7
20:36:41  46  ,ABS(clse-lg8)dc8
20:36:41  47  ,ABS(clse-lg9)dc9
20:36:41  48  ,ABS(clse-lg12)dc12
20:36:41  49  ,ABS(clse-lg18)dc18
20:36:41  50  ,ABS(clse-lg24)dc24
20:36:41  51  ,ABS(clse-lg72)dc72
20:36:41  52  ,(ld4-clse) ug4
20:36:41  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:36:41  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:36:41  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:36:41  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:36:41  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:36:41  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:36:41  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:36:41  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:36:41  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:36:41  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:36:41  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:36:41  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:36:41  65  ,0+TO_CHAR(ydate,'D')d
20:36:41  66  ,0+TO_CHAR(ydate,'W')w
20:36:41  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:36:41  68  FROM q11
20:36:41  69  -- I dont want any NULL values from the LAG() functions:
20:36:41  70  WHERE lg72 > 0
20:36:41  71  ORDER BY pair,ydate
20:36:41  72  /

Table created.

Elapsed: 00:00:01.73
20:36:43 SQL> 
20:36:43 SQL> -- rpt
20:36:43 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9708
	-1	   10252

Elapsed: 00:00:00.03
20:36:43 SQL> 
20:36:43 SQL> -- Calc gains and ntiles
20:36:43 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.17
20:36:43 SQL> CREATE TABLE q15 COMPRESS AS
20:36:43   2  SELECT
20:36:43   3  pair
20:36:43   4  ,ydate
20:36:43   5  ,prdate -- Should be unique
20:36:43   6  ,trend -- +1 or -1
20:36:43   7  ,dc12 -- next statement needs this
20:36:43   8  -- Use NTILE() to derive some attributes
20:36:43   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:36:43  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:36:43  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:36:43  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:36:43  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:36:43  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:36:43  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:36:43  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:36:43  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:36:43  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:36:43  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:36:43  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:36:43  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:36:43  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:36:43  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:36:43  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:36:43  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:36:43  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:36:43  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:36:43  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:36:43  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:36:43  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:36:43  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:36:43  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:36:43  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:36:43  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:36:43  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:36:43  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:36:43  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:36:43  38  ,hh    att28
20:36:43  39  ,d     att29
20:36:43  40  ,w     att30
20:36:43  41  ,mpm   att31
20:36:43  42  ,trend att32
20:36:43  43  ,ug4 g4
20:36:43  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:36:43  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:36:43  46  FROM q13
20:36:43  47  ORDER BY pair,ydate
20:36:43  48  /

Table created.

Elapsed: 00:00:03.93
20:36:47 SQL> 
20:36:47 SQL> -- rpt
20:36:47 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:36:47   2  GROUP BY pair,trend,gatt,gattn
20:36:47   3  ORDER BY pair,trend,gatt,gattn
20:36:47   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003122292	    4403    -.08589056
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003582887	    3902    -.16614004
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.04
20:36:47 SQL> 
20:36:47 SQL> -- rpt
20:36:47 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-16 20:30:00

Elapsed: 00:00:00.01
20:36:47 SQL> 
20:36:47 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.17
20:36:47 SQL> CREATE TABLE modsrc COMPRESS AS
20:36:47   2  SELECT
20:36:47   3  pair
20:36:47   4  ,ydate
20:36:47   5  ,prdate
20:36:47   6  ,trend
20:36:47   7  ,g4
20:36:47   8  ,gatt
20:36:47   9  ,gattn
20:36:47  10  ,dc12
20:36:47  11  FROM q15
20:36:47  12  /

Table created.

Elapsed: 00:00:00.09
20:36:47 SQL> 
20:36:47 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.24
20:36:48 SQL> 
20:36:48 SQL> -- rpt
20:36:48 SQL> 
20:36:48 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20824

Elapsed: 00:00:00.35
20:36:48 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
20:36:48 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
20:36:48 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
20:36:48 SQL> 
20:36:48 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:36:48   2  GROUP BY pair,trend,gatt,gattn
20:36:48   3  ORDER BY pair,trend,gatt,gattn
20:36:48   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -5.246E-07	    1811    .059906803
gbp_usd 	-1 nup up  -.00327618	    4038    -.01089499
gbp_usd 	-1 up  nup .003122292	    4403    -.08589056
gbp_usd 	 1 nup nup .000010662	    1625    .015390196
gbp_usd 	 1 nup up  -.00321854	    4133    -.00827244
gbp_usd 	 1 up  nup .003582887	    3902    -.16614004
gbp_usd 	 1			       0

7 rows selected.

Elapsed: 00:00:00.03
20:36:48 SQL> 
20:36:48 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.02
20:36:48 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
20:36:48   2  SELECT
20:36:48   3  ydate
20:36:48   4  ,trend gbp_trend
20:36:48   5  ,g4    gbp_g4
20:36:48   6  ,gatt  gbp_gatt
20:36:48   7  ,gattn gbp_gattn
20:36:48   8  FROM modsrc
20:36:48   9  /

Table created.

Elapsed: 00:00:00.07
20:36:48 SQL> 
20:36:48 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
20:36:48 SQL> 
20:36:48 SQL> -- rpt
20:36:48 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-13 00:05:01 2010-12-16 20:30:00	 9660	  -.0194      .0179
	-1 2010-09-10 20:40:01 2010-12-16 07:30:00	10252	  -.0153      .0159

Elapsed: 00:00:00.02
20:36:48 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-13 00:05:01 2010-12-16 20:30:00	       9708	 -.0194       .0179
	-1 2010-09-10 20:40:01 2010-12-16 07:30:00	      10252	 -.0153       .0159

Elapsed: 00:00:00.02
20:36:48 SQL> 
20:36:48 SQL> -- I need a copy of q15 attributes
20:36:48 SQL> 
20:36:48 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.03
20:36:48 SQL> CREATE TABLE gbp_att COMPRESS AS
20:36:48   2  SELECT
20:36:48   3  ydate
20:36:48   4  ,att00 gbp_att00
20:36:48   5  ,att01 gbp_att01
20:36:48   6  ,att02 gbp_att02
20:36:48   7  ,att03 gbp_att03
20:36:48   8  ,att04 gbp_att04
20:36:48   9  ,att05 gbp_att05
20:36:48  10  ,att06 gbp_att06
20:36:48  11  ,att07 gbp_att07
20:36:48  12  ,att08 gbp_att08
20:36:48  13  ,att09 gbp_att09
20:36:48  14  ,att10 gbp_att10
20:36:48  15  ,att11 gbp_att11
20:36:48  16  ,att12 gbp_att12
20:36:48  17  ,att13 gbp_att13
20:36:48  18  ,att14 gbp_att14
20:36:48  19  ,att15 gbp_att15
20:36:48  20  ,att16 gbp_att16
20:36:48  21  ,att17 gbp_att17
20:36:48  22  ,att18 gbp_att18
20:36:48  23  ,att19 gbp_att19
20:36:48  24  ,att20 gbp_att20
20:36:48  25  ,att21 gbp_att21
20:36:48  26  ,att22 gbp_att22
20:36:48  27  ,att23 gbp_att23
20:36:48  28  ,att24 gbp_att24
20:36:48  29  ,att25 gbp_att25
20:36:48  30  ,att26 gbp_att26
20:36:48  31  ,att27 gbp_att27
20:36:48  32  ,att28 gbp_att28
20:36:48  33  ,att29 gbp_att29
20:36:48  34  ,att30 gbp_att30
20:36:48  35  ,att31 gbp_att31
20:36:48  36  ,att32 gbp_att32
20:36:48  37  FROM q15
20:36:48  38  /

Table created.

Elapsed: 00:00:00.13
20:36:48 SQL> 
20:36:48 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.46
20:36:49 SQL> 
20:36:49 SQL> -- rpt
20:36:49 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19960

Elapsed: 00:00:00.00
20:36:49 SQL> 
20:36:49 SQL> --
20:36:49 SQL> -- jpy10.sql
20:36:49 SQL> --
20:36:49 SQL> 
20:36:49 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:36:49 SQL> 
20:36:49 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.32
20:36:49 SQL> 
20:36:49 SQL> -- I created di5min here:
20:36:49 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:36:49 SQL> 
20:36:49 SQL> CREATE OR REPLACE VIEW q11 AS
20:36:49   2  SELECT
20:36:49   3  pair
20:36:49   4  ,ydate
20:36:49   5  ,prdate
20:36:49   6  ,rownum rnum -- acts as t in my time-series
20:36:49   7  ,clse
20:36:49   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:36:49   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:36:49  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:36:49  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:36:49  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:36:49  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:36:49  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:36:49  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:36:49  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:36:49  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:36:49  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:36:49  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:36:49  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:36:49  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:36:49  22  FROM di5min WHERE pair LIKE'%jpy%'
20:36:49  23  ORDER BY ydate
20:36:49  24  /

View created.

Elapsed: 00:00:00.04
20:36:49 SQL> 
20:36:49 SQL> -- rpt
20:36:49 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20825

Elapsed: 00:00:00.36
20:36:50 SQL> 
20:36:50 SQL> -- Calc deltas and gains
20:36:50 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.20
20:36:50 SQL> 
20:36:50 SQL> CREATE TABLE q13 COMPRESS AS
20:36:50   2  SELECT
20:36:50   3  pair
20:36:50   4  ,ydate
20:36:50   5  ,prdate
20:36:50   6  ,rnum
20:36:50   7  ,lg4
20:36:50   8  ,lg8
20:36:50   9  ,lg12
20:36:50  10  ,ld4
20:36:50  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:36:50  12  -- step by 1
20:36:50  13  ,clse-lg1 d01
20:36:50  14  ,lg1-lg2	d12
20:36:50  15  ,lg2-lg3	d23
20:36:50  16  ,lg3-lg4	d34
20:36:50  17  ,lg4-lg5	d45
20:36:50  18  ,lg5-lg6	d56
20:36:50  19  ,lg6-lg7	d67
20:36:50  20  ,lg7-lg8	d78
20:36:50  21  ,lg8-lg9	d89
20:36:50  22  -- step by 2
20:36:50  23  ,clse-lg2 d02
20:36:50  24  ,lg2-lg4 d24
20:36:50  25  ,lg4-lg6 d46
20:36:50  26  ,lg6-lg8 d68
20:36:50  27  -- step by 3
20:36:50  28  ,clse-lg3 d03
20:36:50  29  ,lg3-lg6	d36
20:36:50  30  ,lg6-lg9	d69
20:36:50  31  ,lg9-lg12 d912
20:36:50  32  -- step by 4
20:36:50  33  ,clse-lg4 d04
20:36:50  34  ,lg4-lg8	d48
20:36:50  35  ,lg8-lg12 d812
20:36:50  36  ,lg6-lg12 d612
20:36:50  37  ,lg12-lg18 d1218
20:36:50  38  --
20:36:50  39  ,ABS(clse-lg1)dc1
20:36:50  40  ,ABS(clse-lg2)dc2
20:36:50  41  ,ABS(clse-lg3)dc3
20:36:50  42  ,ABS(clse-lg4)dc4
20:36:50  43  ,ABS(clse-lg5)dc5
20:36:50  44  ,ABS(clse-lg6)dc6
20:36:50  45  ,ABS(clse-lg7)dc7
20:36:50  46  ,ABS(clse-lg8)dc8
20:36:50  47  ,ABS(clse-lg9)dc9
20:36:50  48  ,ABS(clse-lg12)dc12
20:36:50  49  ,ABS(clse-lg18)dc18
20:36:50  50  ,ABS(clse-lg24)dc24
20:36:50  51  ,ABS(clse-lg72)dc72
20:36:50  52  ,(ld4-clse) ug4
20:36:50  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:36:50  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:36:50  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:36:50  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:36:50  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:36:50  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:36:50  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:36:50  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:36:50  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:36:50  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:36:50  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:36:50  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:36:50  65  ,0+TO_CHAR(ydate,'D')d
20:36:50  66  ,0+TO_CHAR(ydate,'W')w
20:36:50  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:36:50  68  FROM q11
20:36:50  69  -- I dont want any NULL values from the LAG() functions:
20:36:50  70  WHERE lg72 > 0
20:36:50  71  ORDER BY pair,ydate
20:36:50  72  /

Table created.

Elapsed: 00:00:01.69
20:36:52 SQL> 
20:36:52 SQL> -- rpt
20:36:52 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9281
	-1	   10680

Elapsed: 00:00:00.03
20:36:52 SQL> 
20:36:52 SQL> -- Calc gains and ntiles
20:36:52 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.12
20:36:52 SQL> CREATE TABLE q15 COMPRESS AS
20:36:52   2  SELECT
20:36:52   3  pair
20:36:52   4  ,ydate
20:36:52   5  ,prdate -- Should be unique
20:36:52   6  ,trend -- +1 or -1
20:36:52   7  ,dc12 -- next statement needs this
20:36:52   8  -- Use NTILE() to derive some attributes
20:36:52   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:36:52  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:36:52  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:36:52  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:36:52  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:36:52  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:36:52  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:36:52  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:36:52  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:36:52  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:36:52  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:36:52  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:36:52  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:36:52  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:36:52  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:36:52  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:36:52  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:36:52  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:36:52  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:36:52  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:36:52  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:36:52  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:36:52  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:36:52  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:36:52  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:36:52  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:36:52  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:36:52  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:36:52  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:36:52  38  ,hh    att28
20:36:52  39  ,d     att29
20:36:52  40  ,w     att30
20:36:52  41  ,mpm   att31
20:36:52  42  ,trend att32
20:36:52  43  ,ug4 g4
20:36:52  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:36:52  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:36:52  46  FROM q13
20:36:52  47  ORDER BY pair,ydate
20:36:52  48  /

Table created.

Elapsed: 00:00:03.97
20:36:56 SQL> 
20:36:56 SQL> -- rpt
20:36:56 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:36:56   2  GROUP BY pair,trend,gatt,gattn
20:36:56   3  ORDER BY pair,trend,gatt,gattn
20:36:56   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13693752	    5178     .02198879
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     169
usd_jpy 	 1 nup up  -.13395237	    4997    -.01709582
usd_jpy 	 1 up  nup .152045233	    4101    .184286281
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
20:36:56 SQL> 
20:36:56 SQL> -- rpt
20:36:56 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-16 20:30:00

Elapsed: 00:00:00.01
20:36:56 SQL> 
20:36:56 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.14
20:36:56 SQL> CREATE TABLE modsrc COMPRESS AS
20:36:56   2  SELECT
20:36:56   3  pair
20:36:56   4  ,ydate
20:36:56   5  ,prdate
20:36:56   6  ,trend
20:36:56   7  ,g4
20:36:56   8  ,gatt
20:36:56   9  ,gattn
20:36:56  10  ,dc12
20:36:56  11  FROM q15
20:36:56  12  /

Table created.

Elapsed: 00:00:00.09
20:36:56 SQL> 
20:36:56 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.25
20:36:56 SQL> 
20:36:56 SQL> -- rpt
20:36:56 SQL> 
20:36:56 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20825

Elapsed: 00:00:00.37
20:36:57 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
20:36:57 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.01
20:36:57 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
20:36:57 SQL> 
20:36:57 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:36:57   2  GROUP BY pair,trend,gatt,gattn
20:36:57   3  ORDER BY pair,trend,gatt,gattn
20:36:57   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	     181
usd_jpy 	-1 nup up  -.13693752	    5178     .02198879
usd_jpy 	-1 up  nup .142687252	    5287    .058730771
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     169
usd_jpy 	 1 nup up  -.13395237	    4997    -.01709582
usd_jpy 	 1 up  nup .152045233	    4101    .184286281
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
20:36:57 SQL> 
20:36:57 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
20:36:57 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
20:36:57   2  SELECT
20:36:57   3  ydate
20:36:57   4  ,trend jpy_trend
20:36:57   5  ,g4    jpy_g4
20:36:57   6  ,gatt  jpy_gatt
20:36:57   7  ,gattn jpy_gattn
20:36:57   8  FROM modsrc
20:36:57   9  /

Table created.

Elapsed: 00:00:00.07
20:36:57 SQL> 
20:36:57 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
20:36:57 SQL> 
20:36:57 SQL> -- rpt
20:36:57 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 20:40:01 2010-12-16 18:25:00	 9267	   -1.07	1.5
	-1 2010-09-12 23:35:01 2010-12-16 20:30:00	10646	 -1.0775       1.99

Elapsed: 00:00:00.02
20:36:57 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 20:40:01 2010-12-16 18:25:00	       9281	  -1.07 	1.5
	-1 2010-09-12 23:35:01 2010-12-16 20:30:00	      10680	-1.0775        1.99

Elapsed: 00:00:00.01
20:36:57 SQL> 
20:36:57 SQL> -- I need a copy of q15 attributes
20:36:57 SQL> 
20:36:57 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.04
20:36:57 SQL> CREATE TABLE jpy_att COMPRESS AS
20:36:57   2  SELECT
20:36:57   3  ydate
20:36:57   4  ,att00 jpy_att00
20:36:57   5  ,att01 jpy_att01
20:36:57   6  ,att02 jpy_att02
20:36:57   7  ,att03 jpy_att03
20:36:57   8  ,att04 jpy_att04
20:36:57   9  ,att05 jpy_att05
20:36:57  10  ,att06 jpy_att06
20:36:57  11  ,att07 jpy_att07
20:36:57  12  ,att08 jpy_att08
20:36:57  13  ,att09 jpy_att09
20:36:57  14  ,att10 jpy_att10
20:36:57  15  ,att11 jpy_att11
20:36:57  16  ,att12 jpy_att12
20:36:57  17  ,att13 jpy_att13
20:36:57  18  ,att14 jpy_att14
20:36:57  19  ,att15 jpy_att15
20:36:57  20  ,att16 jpy_att16
20:36:57  21  ,att17 jpy_att17
20:36:57  22  ,att18 jpy_att18
20:36:57  23  ,att19 jpy_att19
20:36:57  24  ,att20 jpy_att20
20:36:57  25  ,att21 jpy_att21
20:36:57  26  ,att22 jpy_att22
20:36:57  27  ,att23 jpy_att23
20:36:57  28  ,att24 jpy_att24
20:36:57  29  ,att25 jpy_att25
20:36:57  30  ,att26 jpy_att26
20:36:57  31  ,att27 jpy_att27
20:36:57  32  ,att28 jpy_att28
20:36:57  33  ,att29 jpy_att29
20:36:57  34  ,att30 jpy_att30
20:36:57  35  ,att31 jpy_att31
20:36:57  36  ,att32 jpy_att32
20:36:57  37  FROM q15
20:36:57  38  /

Table created.

Elapsed: 00:00:00.13
20:36:57 SQL> 
20:36:57 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.39
20:36:57 SQL> 
20:36:57 SQL> -- rpt
20:36:57 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19961

Elapsed: 00:00:00.00
20:36:57 SQL> 
20:36:57 SQL> --
20:36:57 SQL> -- cad10.sql
20:36:57 SQL> --
20:36:57 SQL> 
20:36:57 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:36:57 SQL> 
20:36:57 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.36
20:36:58 SQL> 
20:36:58 SQL> -- I created di5min here:
20:36:58 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:36:58 SQL> 
20:36:58 SQL> CREATE OR REPLACE VIEW q11 AS
20:36:58   2  SELECT
20:36:58   3  pair
20:36:58   4  ,ydate
20:36:58   5  ,prdate
20:36:58   6  ,rownum rnum -- acts as t in my time-series
20:36:58   7  ,clse
20:36:58   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:36:58   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:36:58  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:36:58  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:36:58  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:36:58  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:36:58  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:36:58  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:36:58  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:36:58  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:36:58  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:36:58  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:36:58  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:36:58  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:36:58  22  FROM di5min WHERE pair LIKE'%cad%'
20:36:58  23  ORDER BY ydate
20:36:58  24  /

View created.

Elapsed: 00:00:00.05
20:36:58 SQL> 
20:36:58 SQL> -- rpt
20:36:58 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20821

Elapsed: 00:00:00.36
20:36:58 SQL> 
20:36:58 SQL> -- Calc deltas and gains
20:36:58 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.23
20:36:58 SQL> 
20:36:58 SQL> CREATE TABLE q13 COMPRESS AS
20:36:58   2  SELECT
20:36:58   3  pair
20:36:58   4  ,ydate
20:36:58   5  ,prdate
20:36:58   6  ,rnum
20:36:58   7  ,lg4
20:36:58   8  ,lg8
20:36:58   9  ,lg12
20:36:58  10  ,ld4
20:36:58  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:36:58  12  -- step by 1
20:36:58  13  ,clse-lg1 d01
20:36:58  14  ,lg1-lg2	d12
20:36:58  15  ,lg2-lg3	d23
20:36:58  16  ,lg3-lg4	d34
20:36:58  17  ,lg4-lg5	d45
20:36:58  18  ,lg5-lg6	d56
20:36:58  19  ,lg6-lg7	d67
20:36:58  20  ,lg7-lg8	d78
20:36:58  21  ,lg8-lg9	d89
20:36:58  22  -- step by 2
20:36:58  23  ,clse-lg2 d02
20:36:58  24  ,lg2-lg4 d24
20:36:58  25  ,lg4-lg6 d46
20:36:58  26  ,lg6-lg8 d68
20:36:58  27  -- step by 3
20:36:58  28  ,clse-lg3 d03
20:36:58  29  ,lg3-lg6	d36
20:36:58  30  ,lg6-lg9	d69
20:36:58  31  ,lg9-lg12 d912
20:36:58  32  -- step by 4
20:36:58  33  ,clse-lg4 d04
20:36:58  34  ,lg4-lg8	d48
20:36:58  35  ,lg8-lg12 d812
20:36:58  36  ,lg6-lg12 d612
20:36:58  37  ,lg12-lg18 d1218
20:36:58  38  --
20:36:58  39  ,ABS(clse-lg1)dc1
20:36:58  40  ,ABS(clse-lg2)dc2
20:36:58  41  ,ABS(clse-lg3)dc3
20:36:58  42  ,ABS(clse-lg4)dc4
20:36:58  43  ,ABS(clse-lg5)dc5
20:36:58  44  ,ABS(clse-lg6)dc6
20:36:58  45  ,ABS(clse-lg7)dc7
20:36:58  46  ,ABS(clse-lg8)dc8
20:36:58  47  ,ABS(clse-lg9)dc9
20:36:58  48  ,ABS(clse-lg12)dc12
20:36:58  49  ,ABS(clse-lg18)dc18
20:36:58  50  ,ABS(clse-lg24)dc24
20:36:58  51  ,ABS(clse-lg72)dc72
20:36:58  52  ,(ld4-clse) ug4
20:36:58  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:36:58  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:36:58  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:36:58  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:36:58  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:36:58  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:36:58  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:36:58  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:36:58  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:36:58  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:36:58  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:36:58  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:36:58  65  ,0+TO_CHAR(ydate,'D')d
20:36:58  66  ,0+TO_CHAR(ydate,'W')w
20:36:58  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:36:58  68  FROM q11
20:36:58  69  -- I dont want any NULL values from the LAG() functions:
20:36:58  70  WHERE lg72 > 0
20:36:58  71  ORDER BY pair,ydate
20:36:58  72  /

Table created.

Elapsed: 00:00:01.69
20:37:00 SQL> 
20:37:00 SQL> -- rpt
20:37:00 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9020
	-1	   10937

Elapsed: 00:00:00.03
20:37:00 SQL> 
20:37:00 SQL> -- Calc gains and ntiles
20:37:00 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
20:37:00 SQL> CREATE TABLE q15 COMPRESS AS
20:37:00   2  SELECT
20:37:00   3  pair
20:37:00   4  ,ydate
20:37:00   5  ,prdate -- Should be unique
20:37:00   6  ,trend -- +1 or -1
20:37:00   7  ,dc12 -- next statement needs this
20:37:00   8  -- Use NTILE() to derive some attributes
20:37:00   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:37:00  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:37:00  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:37:00  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:37:00  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:37:00  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:37:00  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:37:00  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:37:00  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:37:00  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:37:00  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:37:00  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:37:00  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:37:00  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:37:00  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:37:00  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:37:00  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:37:00  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:37:00  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:37:00  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:37:00  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:37:00  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:37:00  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:37:00  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:37:00  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:37:00  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:37:00  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:37:00  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:37:00  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:37:00  38  ,hh    att28
20:37:00  39  ,d     att29
20:37:00  40  ,w     att30
20:37:00  41  ,mpm   att31
20:37:00  42  ,trend att32
20:37:00  43  ,ug4 g4
20:37:00  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:37:00  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:37:00  46  FROM q13
20:37:00  47  ORDER BY pair,ydate
20:37:00  48  /

Table created.

Elapsed: 00:00:03.91
20:37:04 SQL> 
20:37:04 SQL> -- rpt
20:37:04 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:37:04   2  GROUP BY pair,trend,gatt,gattn
20:37:04   3  ORDER BY pair,trend,gatt,gattn
20:37:04   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	 1 nup nup  -.0000149	    2070    -.06548695
usd_cad 	 1 nup up  -.00238539	    3842    .000264045
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.05
20:37:04 SQL> 
20:37:04 SQL> -- rpt
20:37:04 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-16 20:30:00

Elapsed: 00:00:00.02
20:37:04 SQL> 
20:37:04 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.10
20:37:04 SQL> CREATE TABLE modsrc COMPRESS AS
20:37:04   2  SELECT
20:37:04   3  pair
20:37:04   4  ,ydate
20:37:04   5  ,prdate
20:37:04   6  ,trend
20:37:04   7  ,g4
20:37:04   8  ,gatt
20:37:04   9  ,gattn
20:37:04  10  ,dc12
20:37:04  11  FROM q15
20:37:04  12  /

Table created.

Elapsed: 00:00:00.09
20:37:04 SQL> 
20:37:04 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
20:37:05 SQL> 
20:37:05 SQL> -- rpt
20:37:05 SQL> 
20:37:05 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20821

Elapsed: 00:00:00.35
20:37:05 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
20:37:05 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.01
20:37:05 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19957

Elapsed: 00:00:00.00
20:37:05 SQL> 
20:37:05 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:37:05   2  GROUP BY pair,trend,gatt,gattn
20:37:05   3  ORDER BY pair,trend,gatt,gattn
20:37:05   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -4.103E-06	    3022    .015826632
usd_cad 	-1 nup up  -.00225153	    4093    .063378027
usd_cad 	-1 up  nup .002396566	    3822    -.00128762
usd_cad 	 1 nup nup  -.0000149	    2070    -.06548695
usd_cad 	 1 nup up  -.00238539	    3842    .000264045
usd_cad 	 1 up  nup .002590989	    3060    .004013367
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.03
20:37:05 SQL> 
20:37:05 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
20:37:05 SQL> CREATE TABLE cad_ms10 COMPRESS AS
20:37:05   2  SELECT
20:37:05   3  ydate
20:37:05   4  ,trend cad_trend
20:37:05   5  ,g4    cad_g4
20:37:05   6  ,gatt  cad_gatt
20:37:05   7  ,gattn cad_gattn
20:37:05   8  FROM modsrc
20:37:05   9  /

Table created.

Elapsed: 00:00:00.07
20:37:05 SQL> 
20:37:05 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
20:37:05 SQL> 
20:37:05 SQL> -- rpt
20:37:05 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-10 20:40:01 2010-12-16 20:30:00	 8972	  -.0089      .0151
	-1 2010-09-12 23:30:01 2010-12-16 14:45:00	10937	  -.0107      .0147

Elapsed: 00:00:00.01
20:37:05 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-10 20:40:01 2010-12-16 20:30:00	       9020	 -.0089       .0151
	-1 2010-09-12 23:30:01 2010-12-16 14:45:00	      10937	 -.0107       .0147

Elapsed: 00:00:00.01
20:37:05 SQL> 
20:37:05 SQL> -- I need a copy of q15 attributes
20:37:05 SQL> 
20:37:05 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.03
20:37:05 SQL> CREATE TABLE cad_att COMPRESS AS
20:37:05   2  SELECT
20:37:05   3  ydate
20:37:05   4  ,att00 cad_att00
20:37:05   5  ,att01 cad_att01
20:37:05   6  ,att02 cad_att02
20:37:05   7  ,att03 cad_att03
20:37:05   8  ,att04 cad_att04
20:37:05   9  ,att05 cad_att05
20:37:05  10  ,att06 cad_att06
20:37:05  11  ,att07 cad_att07
20:37:05  12  ,att08 cad_att08
20:37:05  13  ,att09 cad_att09
20:37:05  14  ,att10 cad_att10
20:37:05  15  ,att11 cad_att11
20:37:05  16  ,att12 cad_att12
20:37:05  17  ,att13 cad_att13
20:37:05  18  ,att14 cad_att14
20:37:05  19  ,att15 cad_att15
20:37:05  20  ,att16 cad_att16
20:37:05  21  ,att17 cad_att17
20:37:05  22  ,att18 cad_att18
20:37:05  23  ,att19 cad_att19
20:37:05  24  ,att20 cad_att20
20:37:05  25  ,att21 cad_att21
20:37:05  26  ,att22 cad_att22
20:37:05  27  ,att23 cad_att23
20:37:05  28  ,att24 cad_att24
20:37:05  29  ,att25 cad_att25
20:37:05  30  ,att26 cad_att26
20:37:05  31  ,att27 cad_att27
20:37:05  32  ,att28 cad_att28
20:37:05  33  ,att29 cad_att29
20:37:05  34  ,att30 cad_att30
20:37:05  35  ,att31 cad_att31
20:37:05  36  ,att32 cad_att32
20:37:05  37  FROM q15
20:37:05  38  /

Table created.

Elapsed: 00:00:00.14
20:37:06 SQL> 
20:37:06 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.41
20:37:06 SQL> 
20:37:06 SQL> -- rpt
20:37:06 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19957

Elapsed: 00:00:00.01
20:37:06 SQL> 
20:37:06 SQL> --
20:37:06 SQL> -- chf10.sql
20:37:06 SQL> --
20:37:06 SQL> 
20:37:06 SQL> -- Creates views and tables for backtesting a forex SVM strategy
20:37:06 SQL> 
20:37:06 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.35
20:37:06 SQL> 
20:37:06 SQL> -- I created di5min here:
20:37:06 SQL> -- /pt/s/rlk/svm4hp/update_di5min.sql
20:37:06 SQL> 
20:37:06 SQL> CREATE OR REPLACE VIEW q11 AS
20:37:06   2  SELECT
20:37:06   3  pair
20:37:06   4  ,ydate
20:37:06   5  ,prdate
20:37:06   6  ,rownum rnum -- acts as t in my time-series
20:37:06   7  ,clse
20:37:06   8  ,LAG(clse,12*1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg1
20:37:06   9  ,LAG(clse,12*2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg2
20:37:06  10  ,LAG(clse,12*3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg3
20:37:06  11  ,LAG(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg4
20:37:06  12  ,LAG(clse,12*5,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg5
20:37:06  13  ,LAG(clse,12*6,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg6
20:37:06  14  ,LAG(clse,12*7,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg7
20:37:06  15  ,LAG(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg8
20:37:06  16  ,LAG(clse,12*9,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg9
20:37:06  17  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg12
20:37:06  18  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg18
20:37:06  19  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg24
20:37:06  20  ,LAG(clse,12*72,NULL)OVER(PARTITION BY pair ORDER BY ydate) lg72
20:37:06  21  ,LEAD(clse,12*4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ld4
20:37:06  22  FROM di5min WHERE pair LIKE'%chf%'
20:37:06  23  ORDER BY ydate
20:37:06  24  /

View created.

Elapsed: 00:00:00.03
20:37:06 SQL> 
20:37:06 SQL> -- rpt
20:37:06 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20824

Elapsed: 00:00:00.35
20:37:07 SQL> 
20:37:07 SQL> -- Calc deltas and gains
20:37:07 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.27
20:37:07 SQL> 
20:37:07 SQL> CREATE TABLE q13 COMPRESS AS
20:37:07   2  SELECT
20:37:07   3  pair
20:37:07   4  ,ydate
20:37:07   5  ,prdate
20:37:07   6  ,rnum
20:37:07   7  ,lg4
20:37:07   8  ,lg8
20:37:07   9  ,lg12
20:37:07  10  ,ld4
20:37:07  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
20:37:07  12  -- step by 1
20:37:07  13  ,clse-lg1 d01
20:37:07  14  ,lg1-lg2	d12
20:37:07  15  ,lg2-lg3	d23
20:37:07  16  ,lg3-lg4	d34
20:37:07  17  ,lg4-lg5	d45
20:37:07  18  ,lg5-lg6	d56
20:37:07  19  ,lg6-lg7	d67
20:37:07  20  ,lg7-lg8	d78
20:37:07  21  ,lg8-lg9	d89
20:37:07  22  -- step by 2
20:37:07  23  ,clse-lg2 d02
20:37:07  24  ,lg2-lg4 d24
20:37:07  25  ,lg4-lg6 d46
20:37:07  26  ,lg6-lg8 d68
20:37:07  27  -- step by 3
20:37:07  28  ,clse-lg3 d03
20:37:07  29  ,lg3-lg6	d36
20:37:07  30  ,lg6-lg9	d69
20:37:07  31  ,lg9-lg12 d912
20:37:07  32  -- step by 4
20:37:07  33  ,clse-lg4 d04
20:37:07  34  ,lg4-lg8	d48
20:37:07  35  ,lg8-lg12 d812
20:37:07  36  ,lg6-lg12 d612
20:37:07  37  ,lg12-lg18 d1218
20:37:07  38  --
20:37:07  39  ,ABS(clse-lg1)dc1
20:37:07  40  ,ABS(clse-lg2)dc2
20:37:07  41  ,ABS(clse-lg3)dc3
20:37:07  42  ,ABS(clse-lg4)dc4
20:37:07  43  ,ABS(clse-lg5)dc5
20:37:07  44  ,ABS(clse-lg6)dc6
20:37:07  45  ,ABS(clse-lg7)dc7
20:37:07  46  ,ABS(clse-lg8)dc8
20:37:07  47  ,ABS(clse-lg9)dc9
20:37:07  48  ,ABS(clse-lg12)dc12
20:37:07  49  ,ABS(clse-lg18)dc18
20:37:07  50  ,ABS(clse-lg24)dc24
20:37:07  51  ,ABS(clse-lg72)dc72
20:37:07  52  ,(ld4-clse) ug4
20:37:07  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*2  PRECEDING AND CURRENT ROW)crr2
20:37:07  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*3  PRECEDING AND CURRENT ROW)crr3
20:37:07  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*4  PRECEDING AND CURRENT ROW)crr4
20:37:07  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*5  PRECEDING AND CURRENT ROW)crr5
20:37:07  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
20:37:07  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*7  PRECEDING AND CURRENT ROW)crr7
20:37:07  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
20:37:07  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*9  PRECEDING AND CURRENT ROW)crr9
20:37:07  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:37:07  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:37:07  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:37:07  64  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:37:07  65  ,0+TO_CHAR(ydate,'D')d
20:37:07  66  ,0+TO_CHAR(ydate,'W')w
20:37:07  67  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:37:07  68  FROM q11
20:37:07  69  -- I dont want any NULL values from the LAG() functions:
20:37:07  70  WHERE lg72 > 0
20:37:07  71  ORDER BY pair,ydate
20:37:07  72  /

Table created.

Elapsed: 00:00:01.69
20:37:09 SQL> 
20:37:09 SQL> -- rpt
20:37:09 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9320
	-1	   10640

Elapsed: 00:00:00.03
20:37:09 SQL> 
20:37:09 SQL> -- Calc gains and ntiles
20:37:09 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.19
20:37:09 SQL> CREATE TABLE q15 COMPRESS AS
20:37:09   2  SELECT
20:37:09   3  pair
20:37:09   4  ,ydate
20:37:09   5  ,prdate -- Should be unique
20:37:09   6  ,trend -- +1 or -1
20:37:09   7  ,dc12 -- next statement needs this
20:37:09   8  -- Use NTILE() to derive some attributes
20:37:09   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
20:37:09  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
20:37:09  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
20:37:09  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
20:37:09  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
20:37:09  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
20:37:09  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
20:37:09  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
20:37:09  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
20:37:09  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
20:37:09  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
20:37:09  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
20:37:09  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
20:37:09  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
20:37:09  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
20:37:09  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
20:37:09  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
20:37:09  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
20:37:09  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
20:37:09  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
20:37:09  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
20:37:09  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
20:37:09  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
20:37:09  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
20:37:09  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
20:37:09  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
20:37:09  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
20:37:09  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
20:37:09  37  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
20:37:09  38  ,hh    att28
20:37:09  39  ,d     att29
20:37:09  40  ,w     att30
20:37:09  41  ,mpm   att31
20:37:09  42  ,trend att32
20:37:09  43  ,ug4 g4
20:37:09  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
20:37:09  45  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
20:37:09  46  FROM q13
20:37:09  47  ORDER BY pair,ydate
20:37:09  48  /

Table created.

Elapsed: 00:00:03.98
20:37:13 SQL> 
20:37:13 SQL> -- rpt
20:37:13 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
20:37:13   2  GROUP BY pair,trend,gatt,gattn
20:37:13   3  ORDER BY pair,trend,gatt,gattn
20:37:13   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000031939	    2648    .042636976
usd_chf 	-1 nup up  -.00292334	    3907    .063124151
usd_chf 	-1 up  nup .002646511	    4048    -.12069668
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00254072	    3851    .111957971
usd_chf 	 1 up  nup .002433841	    3232     -.1606913
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.05
20:37:13 SQL> 
20:37:13 SQL> -- rpt
20:37:13 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-16 20:30:00

Elapsed: 00:00:00.01
20:37:13 SQL> 
20:37:13 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.19
20:37:13 SQL> CREATE TABLE modsrc COMPRESS AS
20:37:13   2  SELECT
20:37:13   3  pair
20:37:13   4  ,ydate
20:37:13   5  ,prdate
20:37:13   6  ,trend
20:37:13   7  ,g4
20:37:13   8  ,gatt
20:37:13   9  ,gattn
20:37:13  10  ,dc12
20:37:13  11  FROM q15
20:37:13  12  /

Table created.

Elapsed: 00:00:00.09
20:37:13 SQL> 
20:37:13 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
20:37:13 SQL> 
20:37:13 SQL> -- rpt
20:37:13 SQL> 
20:37:13 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20824

Elapsed: 00:00:00.36
20:37:14 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
20:37:14 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.00
20:37:14 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19960

Elapsed: 00:00:00.01
20:37:14 SQL> 
20:37:14 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
20:37:14   2  GROUP BY pair,trend,gatt,gattn
20:37:14   3  ORDER BY pair,trend,gatt,gattn
20:37:14   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup .000031939	    2648    .042636976
usd_chf 	-1 nup up  -.00292334	    3907    .063124151
usd_chf 	-1 up  nup .002646511	    4048    -.12069668
usd_chf 	-1			       0
usd_chf 	 1 nup nup 8.9398E-06	    2226    .017980122
usd_chf 	 1 nup up  -.00254072	    3851    .111957971
usd_chf 	 1 up  nup .002433841	    3232     -.1606913
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
20:37:14 SQL> 
20:37:14 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
20:37:14 SQL> CREATE TABLE chf_ms10 COMPRESS AS
20:37:14   2  SELECT
20:37:14   3  ydate
20:37:14   4  ,trend chf_trend
20:37:14   5  ,g4    chf_g4
20:37:14   6  ,gatt  chf_gatt
20:37:14   7  ,gattn chf_gattn
20:37:14   8  FROM modsrc
20:37:14   9  /

Table created.

Elapsed: 00:00:00.07
20:37:14 SQL> 
20:37:14 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.66
20:37:15 SQL> 
20:37:15 SQL> -- rpt
20:37:15 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	 9309	  -.0176     .01365
	-1 2010-09-10 20:40:01 2010-12-16 20:30:00	10603	  -.0166      .0149

Elapsed: 00:00:00.02
20:37:15 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-15 02:05:01 2010-12-16 18:55:00	       9320	 -.0176      .01365
	-1 2010-09-10 20:40:01 2010-12-16 20:30:00	      10640	 -.0166       .0149

Elapsed: 00:00:00.02
20:37:15 SQL> 
20:37:15 SQL> -- I need a copy of q15 attributes
20:37:15 SQL> 
20:37:15 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.03
20:37:15 SQL> CREATE TABLE chf_att COMPRESS AS
20:37:15   2  SELECT
20:37:15   3  ydate
20:37:15   4  ,att00 chf_att00
20:37:15   5  ,att01 chf_att01
20:37:15   6  ,att02 chf_att02
20:37:15   7  ,att03 chf_att03
20:37:15   8  ,att04 chf_att04
20:37:15   9  ,att05 chf_att05
20:37:15  10  ,att06 chf_att06
20:37:15  11  ,att07 chf_att07
20:37:15  12  ,att08 chf_att08
20:37:15  13  ,att09 chf_att09
20:37:15  14  ,att10 chf_att10
20:37:15  15  ,att11 chf_att11
20:37:15  16  ,att12 chf_att12
20:37:15  17  ,att13 chf_att13
20:37:15  18  ,att14 chf_att14
20:37:15  19  ,att15 chf_att15
20:37:15  20  ,att16 chf_att16
20:37:15  21  ,att17 chf_att17
20:37:15  22  ,att18 chf_att18
20:37:15  23  ,att19 chf_att19
20:37:15  24  ,att20 chf_att20
20:37:15  25  ,att21 chf_att21
20:37:15  26  ,att22 chf_att22
20:37:15  27  ,att23 chf_att23
20:37:15  28  ,att24 chf_att24
20:37:15  29  ,att25 chf_att25
20:37:15  30  ,att26 chf_att26
20:37:15  31  ,att27 chf_att27
20:37:15  32  ,att28 chf_att28
20:37:15  33  ,att29 chf_att29
20:37:15  34  ,att30 chf_att30
20:37:15  35  ,att31 chf_att31
20:37:15  36  ,att32 chf_att32
20:37:15  37  FROM q15
20:37:15  38  /

Table created.

Elapsed: 00:00:00.14
20:37:15 SQL> 
20:37:15 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.41
20:37:15 SQL> 
20:37:15 SQL> -- rpt
20:37:15 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19960

Elapsed: 00:00:00.00
20:37:15 SQL> 
20:37:15 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
