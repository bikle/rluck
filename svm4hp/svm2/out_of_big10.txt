
SQL*Plus: Release 11.2.0.1.0 Production on Wed Dec 15 08:14:07 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

08:14:07 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
08:14:07 SQL> 08:14:07 SQL> --
08:14:07 SQL> -- eur10.sql
08:14:07 SQL> --
08:14:07 SQL> 
08:14:07 SQL> -- Creates views and tables for backtesting a forex SVM strategy
08:14:07 SQL> 
08:14:07 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:03.25
08:14:10 SQL> 
08:14:10 SQL> -- I created ibfu_t here:
08:14:10 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
08:14:10 SQL> 
08:14:10 SQL> CREATE OR REPLACE VIEW q11 AS
08:14:10   2  SELECT
08:14:10   3  pair
08:14:10   4  ,ydate
08:14:10   5  ,prdate
08:14:10   6  ,rownum rnum -- acts as t in my time-series
08:14:10   7  ,clse
08:14:10   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
08:14:10   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
08:14:10  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
08:14:10  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
08:14:10  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
08:14:10  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
08:14:10  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
08:14:10  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
08:14:10  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
08:14:10  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
08:14:10  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
08:14:10  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
08:14:10  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
08:14:10  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
08:14:10  22  FROM ibfu_t WHERE pair LIKE'%eur%'
08:14:10  23  ORDER BY ydate
08:14:10  24  /

View created.

Elapsed: 00:00:00.22
08:14:10 SQL> 
08:14:10 SQL> -- rpt
08:14:10 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd 	3792

Elapsed: 00:00:00.43
08:14:11 SQL> 
08:14:11 SQL> -- Calc deltas and gains
08:14:11 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.16
08:14:11 SQL> 
08:14:11 SQL> CREATE TABLE q13 COMPRESS AS
08:14:11   2  SELECT
08:14:11   3  pair
08:14:11   4  ,ydate
08:14:11   5  ,prdate
08:14:11   6  ,rnum
08:14:11   7  ,lg4
08:14:11   8  ,lg8
08:14:11   9  ,lg12
08:14:11  10  ,ld4
08:14:11  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
08:14:11  12  -- step by 1
08:14:11  13  ,clse-lg1 d01
08:14:11  14  ,lg1-lg2	d12
08:14:11  15  ,lg2-lg3	d23
08:14:11  16  ,lg3-lg4	d34
08:14:11  17  ,lg4-lg5	d45
08:14:11  18  ,lg5-lg6	d56
08:14:11  19  ,lg6-lg7	d67
08:14:11  20  ,lg7-lg8	d78
08:14:11  21  ,lg8-lg9	d89
08:14:11  22  -- step by 2
08:14:11  23  ,clse-lg2 d02
08:14:11  24  ,lg2-lg4 d24
08:14:11  25  ,lg4-lg6 d46
08:14:11  26  ,lg6-lg8 d68
08:14:11  27  -- step by 3
08:14:11  28  ,clse-lg3 d03
08:14:11  29  ,lg3-lg6	d36
08:14:11  30  ,lg6-lg9	d69
08:14:11  31  ,lg9-lg12 d912
08:14:11  32  -- step by 4
08:14:11  33  ,clse-lg4 d04
08:14:11  34  ,lg4-lg8	d48
08:14:11  35  ,lg8-lg12 d812
08:14:11  36  ,lg6-lg12 d612
08:14:11  37  ,lg12-lg18 d1218
08:14:11  38  --
08:14:11  39  ,ABS(clse-lg1)dc1
08:14:11  40  ,ABS(clse-lg2)dc2
08:14:11  41  ,ABS(clse-lg3)dc3
08:14:11  42  ,ABS(clse-lg4)dc4
08:14:11  43  ,ABS(clse-lg5)dc5
08:14:11  44  ,ABS(clse-lg6)dc6
08:14:11  45  ,ABS(clse-lg7)dc7
08:14:11  46  ,ABS(clse-lg8)dc8
08:14:11  47  ,ABS(clse-lg9)dc9
08:14:11  48  ,ABS(clse-lg12)dc12
08:14:11  49  ,ABS(clse-lg18)dc18
08:14:11  50  ,ABS(clse-lg24)dc24
08:14:11  51  ,ABS(clse-lg72)dc72
08:14:11  52  ,(ld4-clse) ug4
08:14:11  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
08:14:11  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
08:14:11  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
08:14:11  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
08:14:11  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
08:14:11  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
08:14:11  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
08:14:11  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
08:14:11  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
08:14:11  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
08:14:11  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
08:14:11  64  ,0+TO_CHAR(ydate,'HH24')hh
08:14:11  65  ,0+TO_CHAR(ydate,'D')d
08:14:11  66  ,0+TO_CHAR(ydate,'W')w
08:14:11  67  FROM q11
08:14:11  68  ORDER BY pair,ydate
08:14:11  69  /

Table created.

Elapsed: 00:00:00.95
08:14:12 SQL> 
08:14:12 SQL> -- rpt
08:14:12 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1928
	-1	    1864

Elapsed: 00:00:00.22
08:14:12 SQL> 
08:14:12 SQL> -- Calc gains and ntiles
08:14:12 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.12
08:14:12 SQL> CREATE TABLE q15 COMPRESS AS
08:14:12   2  SELECT
08:14:12   3  pair
08:14:12   4  ,ydate
08:14:12   5  ,prdate -- Should be unique
08:14:12   6  ,trend -- +1 or -1
08:14:12   7  ,dc12 -- next statement needs this
08:14:12   8  -- Use NTILE() to derive some attributes
08:14:12   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
08:14:12  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
08:14:12  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
08:14:12  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
08:14:12  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
08:14:12  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
08:14:12  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
08:14:12  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
08:14:12  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
08:14:12  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
08:14:12  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
08:14:12  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
08:14:12  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
08:14:12  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
08:14:12  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
08:14:12  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
08:14:12  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
08:14:12  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
08:14:12  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
08:14:12  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
08:14:12  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
08:14:12  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
08:14:12  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
08:14:12  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
08:14:12  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
08:14:12  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
08:14:12  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
08:14:12  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
08:14:12  37  -- date related integers: hour of day, day of week, week of month:
08:14:12  38  ,hh    att28
08:14:12  39  ,d     att29
08:14:12  40  ,w     att30
08:14:12  41  ,trend att31
08:14:12  42  ,ug4 g4
08:14:12  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
08:14:12  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
08:14:12  45  FROM q13
08:14:12  46  ORDER BY pair,ydate
08:14:12  47  /

Table created.

Elapsed: 00:00:01.41
08:14:14 SQL> 
08:14:14 SQL> -- rpt
08:14:14 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
08:14:14   2  GROUP BY pair,trend,gatt,gattn
08:14:14   3  ORDER BY pair,trend,gatt,gattn
08:14:14   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00003798	     296    .050764511
eur_usd 	-1 nup up  -.00347232	     756    -.02137931
eur_usd 	-1 up  nup .003630167	     808    -.10277432
eur_usd 	-1			       0
eur_usd 	 1 nup nup 4.2437E-06	     357    .068853821
eur_usd 	 1 nup up   -.0032743	     826    -.02143819
eur_usd 	 1 up  nup .003599664	     745    -.01955522

7 rows selected.

Elapsed: 00:00:00.19
08:14:14 SQL> 
08:14:14 SQL> -- rpt
08:14:14 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-15 08:00:00

Elapsed: 00:00:00.00
08:14:14 SQL> 
08:14:14 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.38
08:14:14 SQL> CREATE TABLE modsrc COMPRESS AS
08:14:14   2  SELECT
08:14:14   3  pair
08:14:14   4  ,ydate
08:14:14   5  ,prdate
08:14:14   6  ,trend
08:14:14   7  ,g4
08:14:14   8  ,gatt
08:14:14   9  ,gattn
08:14:14  10  ,dc12
08:14:14  11  FROM q15
08:14:14  12  /

Table created.

Elapsed: 00:00:00.17
08:14:14 SQL> 
08:14:14 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.28
08:14:15 SQL> 
08:14:15 SQL> -- rpt
08:14:15 SQL> 
08:14:15 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.07
08:14:15 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
08:14:15 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
08:14:15 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.02
08:14:15 SQL> 
08:14:15 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
08:14:15   2  GROUP BY pair,trend,gatt,gattn
08:14:15   3  ORDER BY pair,trend,gatt,gattn
08:14:15   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
eur_usd 	-1 nup nup -.00003798	     296    .050764511
eur_usd 	-1 nup up  -.00347232	     756    -.02137931
eur_usd 	-1 up  nup .003630167	     808    -.10277432
eur_usd 	-1			       0
eur_usd 	 1 nup nup 4.2437E-06	     357    .068853821
eur_usd 	 1 nup up   -.0032743	     826    -.02143819
eur_usd 	 1 up  nup .003599664	     745    -.01955522

7 rows selected.

Elapsed: 00:00:00.01
08:14:15 SQL> 
08:14:15 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.12
08:14:15 SQL> CREATE TABLE eur_ms10 COMPRESS AS
08:14:15   2  SELECT
08:14:15   3  ydate
08:14:15   4  ,trend eur_trend
08:14:15   5  ,g4    eur_g4
08:14:15   6  ,gatt  eur_gatt
08:14:15   7  ,gattn	eur_gattn
08:14:15   8  FROM modsrc
08:14:15   9  /

Table created.

Elapsed: 00:00:00.05
08:14:15 SQL> 
08:14:15 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.14
08:14:15 SQL> 
08:14:15 SQL> -- rpt
08:14:15 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 09:00:00 2010-12-14 19:00:00	 1928	  -.0175      .0172
	-1 2010-05-11 21:00:00 2010-12-15 08:00:00	 1860	  -.0164      .0224

Elapsed: 00:00:00.04
08:14:15 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g4),MAX(eur_g4)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G4) MAX(EUR_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 09:00:00 2010-12-14 19:00:00	       1928	 -.0175       .0172
	-1 2010-05-11 21:00:00 2010-12-15 08:00:00	       1864	 -.0164       .0224

Elapsed: 00:00:00.01
08:14:15 SQL> 
08:14:15 SQL> -- I need a copy of q15 attributes
08:14:15 SQL> 
08:14:15 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.23
08:14:15 SQL> CREATE TABLE eur_att COMPRESS AS
08:14:15   2  SELECT
08:14:15   3  ydate
08:14:15   4  ,att00 eur_att00
08:14:15   5  ,att01 eur_att01
08:14:15   6  ,att02 eur_att02
08:14:15   7  ,att03 eur_att03
08:14:15   8  ,att04 eur_att04
08:14:15   9  ,att05 eur_att05
08:14:15  10  ,att06 eur_att06
08:14:15  11  ,att07 eur_att07
08:14:15  12  ,att08 eur_att08
08:14:15  13  ,att09 eur_att09
08:14:15  14  ,att10 eur_att10
08:14:15  15  ,att11 eur_att11
08:14:15  16  ,att12 eur_att12
08:14:15  17  ,att13 eur_att13
08:14:15  18  ,att14 eur_att14
08:14:15  19  ,att15 eur_att15
08:14:15  20  ,att16 eur_att16
08:14:15  21  ,att17 eur_att17
08:14:15  22  ,att18 eur_att18
08:14:15  23  ,att19 eur_att19
08:14:15  24  ,att20 eur_att20
08:14:15  25  ,att21 eur_att21
08:14:15  26  ,att22 eur_att22
08:14:15  27  ,att23 eur_att23
08:14:15  28  ,att24 eur_att24
08:14:15  29  ,att25 eur_att25
08:14:15  30  ,att26 eur_att26
08:14:15  31  ,att27 eur_att27
08:14:15  32  ,att28 eur_att28
08:14:15  33  ,att29 eur_att29
08:14:15  34  ,att30 eur_att30
08:14:15  35  ,att31 eur_att31
08:14:15  36  FROM q15
08:14:15  37  /

Table created.

Elapsed: 00:00:00.55
08:14:16 SQL> 
08:14:16 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.74
08:14:17 SQL> 
08:14:17 SQL> -- rpt
08:14:17 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.01
08:14:17 SQL> 
08:14:17 SQL> --
08:14:17 SQL> -- aud10.sql
08:14:17 SQL> --
08:14:17 SQL> 
08:14:17 SQL> -- Creates views and tables for backtesting a forex SVM strategy
08:14:17 SQL> 
08:14:17 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.64
08:14:17 SQL> 
08:14:17 SQL> -- I created ibfu_t here:
08:14:17 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
08:14:17 SQL> 
08:14:17 SQL> CREATE OR REPLACE VIEW q11 AS
08:14:17   2  SELECT
08:14:17   3  pair
08:14:17   4  ,ydate
08:14:17   5  ,prdate
08:14:17   6  ,rownum rnum -- acts as t in my time-series
08:14:17   7  ,clse
08:14:17   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
08:14:17   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
08:14:17  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
08:14:17  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
08:14:17  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
08:14:17  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
08:14:17  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
08:14:17  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
08:14:17  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
08:14:17  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
08:14:17  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
08:14:17  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
08:14:17  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
08:14:17  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
08:14:17  22  FROM ibfu_t WHERE pair LIKE'%aud%'
08:14:17  23  ORDER BY ydate
08:14:17  24  /

View created.

Elapsed: 00:00:00.36
08:14:18 SQL> 
08:14:18 SQL> -- rpt
08:14:18 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd 	3792

Elapsed: 00:00:00.07
08:14:18 SQL> 
08:14:18 SQL> -- Calc deltas and gains
08:14:18 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:01.23
08:14:19 SQL> 
08:14:19 SQL> CREATE TABLE q13 COMPRESS AS
08:14:19   2  SELECT
08:14:19   3  pair
08:14:19   4  ,ydate
08:14:19   5  ,prdate
08:14:19   6  ,rnum
08:14:19   7  ,lg4
08:14:19   8  ,lg8
08:14:19   9  ,lg12
08:14:19  10  ,ld4
08:14:19  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
08:14:19  12  -- step by 1
08:14:19  13  ,clse-lg1 d01
08:14:19  14  ,lg1-lg2	d12
08:14:19  15  ,lg2-lg3	d23
08:14:19  16  ,lg3-lg4	d34
08:14:19  17  ,lg4-lg5	d45
08:14:19  18  ,lg5-lg6	d56
08:14:19  19  ,lg6-lg7	d67
08:14:19  20  ,lg7-lg8	d78
08:14:19  21  ,lg8-lg9	d89
08:14:19  22  -- step by 2
08:14:19  23  ,clse-lg2 d02
08:14:19  24  ,lg2-lg4 d24
08:14:19  25  ,lg4-lg6 d46
08:14:19  26  ,lg6-lg8 d68
08:14:19  27  -- step by 3
08:14:19  28  ,clse-lg3 d03
08:14:19  29  ,lg3-lg6	d36
08:14:19  30  ,lg6-lg9	d69
08:14:19  31  ,lg9-lg12 d912
08:14:19  32  -- step by 4
08:14:19  33  ,clse-lg4 d04
08:14:19  34  ,lg4-lg8	d48
08:14:19  35  ,lg8-lg12 d812
08:14:19  36  ,lg6-lg12 d612
08:14:19  37  ,lg12-lg18 d1218
08:14:19  38  --
08:14:19  39  ,ABS(clse-lg1)dc1
08:14:19  40  ,ABS(clse-lg2)dc2
08:14:19  41  ,ABS(clse-lg3)dc3
08:14:19  42  ,ABS(clse-lg4)dc4
08:14:19  43  ,ABS(clse-lg5)dc5
08:14:19  44  ,ABS(clse-lg6)dc6
08:14:19  45  ,ABS(clse-lg7)dc7
08:14:19  46  ,ABS(clse-lg8)dc8
08:14:19  47  ,ABS(clse-lg9)dc9
08:14:19  48  ,ABS(clse-lg12)dc12
08:14:19  49  ,ABS(clse-lg18)dc18
08:14:19  50  ,ABS(clse-lg24)dc24
08:14:19  51  ,ABS(clse-lg72)dc72
08:14:19  52  ,(ld4-clse) ug4
08:14:19  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
08:14:19  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
08:14:19  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
08:14:19  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
08:14:19  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
08:14:19  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
08:14:19  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
08:14:19  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
08:14:19  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
08:14:19  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
08:14:19  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
08:14:19  64  ,0+TO_CHAR(ydate,'HH24')hh
08:14:19  65  ,0+TO_CHAR(ydate,'D')d
08:14:19  66  ,0+TO_CHAR(ydate,'W')w
08:14:19  67  FROM q11
08:14:19  68  ORDER BY pair,ydate
08:14:19  69  /

Table created.

Elapsed: 00:00:00.56
08:14:20 SQL> 
08:14:20 SQL> -- rpt
08:14:20 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1950
	-1	    1842

Elapsed: 00:00:00.10
08:14:20 SQL> 
08:14:20 SQL> -- Calc gains and ntiles
08:14:20 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.20
08:14:20 SQL> CREATE TABLE q15 COMPRESS AS
08:14:20   2  SELECT
08:14:20   3  pair
08:14:20   4  ,ydate
08:14:20   5  ,prdate -- Should be unique
08:14:20   6  ,trend -- +1 or -1
08:14:20   7  ,dc12 -- next statement needs this
08:14:20   8  -- Use NTILE() to derive some attributes
08:14:20   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
08:14:20  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
08:14:20  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
08:14:20  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
08:14:20  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
08:14:20  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
08:14:20  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
08:14:20  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
08:14:20  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
08:14:20  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
08:14:20  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
08:14:20  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
08:14:20  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
08:14:20  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
08:14:20  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
08:14:20  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
08:14:20  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
08:14:20  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
08:14:20  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
08:14:20  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
08:14:20  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
08:14:20  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
08:14:20  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
08:14:20  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
08:14:20  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
08:14:20  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
08:14:20  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
08:14:20  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
08:14:20  37  -- date related integers: hour of day, day of week, week of month:
08:14:20  38  ,hh    att28
08:14:20  39  ,d     att29
08:14:20  40  ,w     att30
08:14:20  41  ,trend att31
08:14:20  42  ,ug4 g4
08:14:20  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
08:14:20  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
08:14:20  45  FROM q13
08:14:20  46  ORDER BY pair,ydate
08:14:20  47  /

Table created.

Elapsed: 00:00:00.83
08:14:21 SQL> 
08:14:21 SQL> -- rpt
08:14:21 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
08:14:21   2  GROUP BY pair,trend,gatt,gattn
08:14:21   3  ORDER BY pair,trend,gatt,gattn
08:14:21   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup  -.0000101	     302    .039073994
aud_usd 	-1 nup up  -.00326115	     715    -.16052413
aud_usd 	-1 up  nup .003171711	     821    .146140361
aud_usd 	-1			       0
aud_usd 	 1 nup nup -.00002417	     362    -.02443808
aud_usd 	 1 nup up  -.00312798	     763     -.0073345
aud_usd 	 1 up  nup .003059152	     825    -.01396605

7 rows selected.

Elapsed: 00:00:00.11
08:14:21 SQL> 
08:14:21 SQL> -- rpt
08:14:21 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-15 08:00:00

Elapsed: 00:00:00.00
08:14:21 SQL> 
08:14:21 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.14
08:14:21 SQL> CREATE TABLE modsrc COMPRESS AS
08:14:21   2  SELECT
08:14:21   3  pair
08:14:21   4  ,ydate
08:14:21   5  ,prdate
08:14:21   6  ,trend
08:14:21   7  ,g4
08:14:21   8  ,gatt
08:14:21   9  ,gattn
08:14:21  10  ,dc12
08:14:21  11  FROM q15
08:14:21  12  /

Table created.

Elapsed: 00:00:00.17
08:14:21 SQL> 
08:14:21 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.26
08:14:21 SQL> 
08:14:21 SQL> -- rpt
08:14:21 SQL> 
08:14:21 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.08
08:14:21 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
08:14:21 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
08:14:21 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
08:14:21 SQL> 
08:14:21 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
08:14:21   2  GROUP BY pair,trend,gatt,gattn
08:14:21   3  ORDER BY pair,trend,gatt,gattn
08:14:21   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
aud_usd 	-1 nup nup  -.0000101	     302    .039073994
aud_usd 	-1 nup up  -.00326115	     715    -.16052413
aud_usd 	-1 up  nup .003171711	     821    .146140361
aud_usd 	-1			       0
aud_usd 	 1 nup nup -.00002417	     362    -.02443808
aud_usd 	 1 nup up  -.00312798	     763     -.0073345
aud_usd 	 1 up  nup .003059152	     825    -.01396605

7 rows selected.

Elapsed: 00:00:00.00
08:14:21 SQL> 
08:14:21 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.10
08:14:22 SQL> CREATE TABLE aud_ms10 COMPRESS AS
08:14:22   2  SELECT
08:14:22   3  ydate
08:14:22   4  ,trend aud_trend
08:14:22   5  ,g4    aud_g4
08:14:22   6  ,gatt  aud_gatt
08:14:22   7  ,gattn	aud_gattn
08:14:22   8  FROM modsrc
08:14:22   9  /

Table created.

Elapsed: 00:00:00.11
08:14:22 SQL> 
08:14:22 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.23
08:14:22 SQL> 
08:14:22 SQL> -- rpt
08:14:22 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 09:00:00 2010-12-14 22:00:00	 1950	  -.0197      .0116
	-1 2010-05-11 21:00:00 2010-12-15 08:00:00	 1838	  -.0179      .0184

Elapsed: 00:00:00.01
08:14:22 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g4),MAX(aud_g4)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G4) MAX(AUD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 09:00:00 2010-12-14 22:00:00	       1950	 -.0197       .0116
	-1 2010-05-11 21:00:00 2010-12-15 08:00:00	       1842	 -.0179       .0184

Elapsed: 00:00:00.01
08:14:22 SQL> 
08:14:22 SQL> -- I need a copy of q15 attributes
08:14:22 SQL> 
08:14:22 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.45
08:14:22 SQL> CREATE TABLE aud_att COMPRESS AS
08:14:22   2  SELECT
08:14:22   3  ydate
08:14:22   4  ,att00 aud_att00
08:14:22   5  ,att01 aud_att01
08:14:22   6  ,att02 aud_att02
08:14:22   7  ,att03 aud_att03
08:14:22   8  ,att04 aud_att04
08:14:22   9  ,att05 aud_att05
08:14:22  10  ,att06 aud_att06
08:14:22  11  ,att07 aud_att07
08:14:22  12  ,att08 aud_att08
08:14:22  13  ,att09 aud_att09
08:14:22  14  ,att10 aud_att10
08:14:22  15  ,att11 aud_att11
08:14:22  16  ,att12 aud_att12
08:14:22  17  ,att13 aud_att13
08:14:22  18  ,att14 aud_att14
08:14:22  19  ,att15 aud_att15
08:14:22  20  ,att16 aud_att16
08:14:22  21  ,att17 aud_att17
08:14:22  22  ,att18 aud_att18
08:14:22  23  ,att19 aud_att19
08:14:22  24  ,att20 aud_att20
08:14:22  25  ,att21 aud_att21
08:14:22  26  ,att22 aud_att22
08:14:22  27  ,att23 aud_att23
08:14:22  28  ,att24 aud_att24
08:14:22  29  ,att25 aud_att25
08:14:22  30  ,att26 aud_att26
08:14:22  31  ,att27 aud_att27
08:14:22  32  ,att28 aud_att28
08:14:22  33  ,att29 aud_att29
08:14:22  34  ,att30 aud_att30
08:14:22  35  ,att31 aud_att31
08:14:22  36  FROM q15
08:14:22  37  /

Table created.

Elapsed: 00:00:00.34
08:14:23 SQL> 
08:14:23 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.42
08:14:23 SQL> 
08:14:23 SQL> -- rpt
08:14:23 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.00
08:14:23 SQL> 
08:14:23 SQL> --
08:14:23 SQL> -- gbp10.sql
08:14:23 SQL> --
08:14:23 SQL> 
08:14:23 SQL> -- Creates views and tables for backtesting a forex SVM strategy
08:14:23 SQL> 
08:14:23 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:01.00
08:14:24 SQL> 
08:14:24 SQL> -- I created ibfu_t here:
08:14:24 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
08:14:24 SQL> 
08:14:24 SQL> CREATE OR REPLACE VIEW q11 AS
08:14:24   2  SELECT
08:14:24   3  pair
08:14:24   4  ,ydate
08:14:24   5  ,prdate
08:14:24   6  ,rownum rnum -- acts as t in my time-series
08:14:24   7  ,clse
08:14:24   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
08:14:24   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
08:14:24  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
08:14:24  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
08:14:24  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
08:14:24  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
08:14:24  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
08:14:24  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
08:14:24  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
08:14:24  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
08:14:24  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
08:14:24  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
08:14:24  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
08:14:24  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
08:14:24  22  FROM ibfu_t WHERE pair LIKE'%gbp%'
08:14:24  23  ORDER BY ydate
08:14:24  24  /

View created.

Elapsed: 00:00:00.11
08:14:24 SQL> 
08:14:24 SQL> -- rpt
08:14:24 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd 	3792

Elapsed: 00:00:00.11
08:14:24 SQL> 
08:14:24 SQL> -- Calc deltas and gains
08:14:24 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.36
08:14:25 SQL> 
08:14:25 SQL> CREATE TABLE q13 COMPRESS AS
08:14:25   2  SELECT
08:14:25   3  pair
08:14:25   4  ,ydate
08:14:25   5  ,prdate
08:14:25   6  ,rnum
08:14:25   7  ,lg4
08:14:25   8  ,lg8
08:14:25   9  ,lg12
08:14:25  10  ,ld4
08:14:25  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
08:14:25  12  -- step by 1
08:14:25  13  ,clse-lg1 d01
08:14:25  14  ,lg1-lg2	d12
08:14:25  15  ,lg2-lg3	d23
08:14:25  16  ,lg3-lg4	d34
08:14:25  17  ,lg4-lg5	d45
08:14:25  18  ,lg5-lg6	d56
08:14:25  19  ,lg6-lg7	d67
08:14:25  20  ,lg7-lg8	d78
08:14:25  21  ,lg8-lg9	d89
08:14:25  22  -- step by 2
08:14:25  23  ,clse-lg2 d02
08:14:25  24  ,lg2-lg4 d24
08:14:25  25  ,lg4-lg6 d46
08:14:25  26  ,lg6-lg8 d68
08:14:25  27  -- step by 3
08:14:25  28  ,clse-lg3 d03
08:14:25  29  ,lg3-lg6	d36
08:14:25  30  ,lg6-lg9	d69
08:14:25  31  ,lg9-lg12 d912
08:14:25  32  -- step by 4
08:14:25  33  ,clse-lg4 d04
08:14:25  34  ,lg4-lg8	d48
08:14:25  35  ,lg8-lg12 d812
08:14:25  36  ,lg6-lg12 d612
08:14:25  37  ,lg12-lg18 d1218
08:14:25  38  --
08:14:25  39  ,ABS(clse-lg1)dc1
08:14:25  40  ,ABS(clse-lg2)dc2
08:14:25  41  ,ABS(clse-lg3)dc3
08:14:25  42  ,ABS(clse-lg4)dc4
08:14:25  43  ,ABS(clse-lg5)dc5
08:14:25  44  ,ABS(clse-lg6)dc6
08:14:25  45  ,ABS(clse-lg7)dc7
08:14:25  46  ,ABS(clse-lg8)dc8
08:14:25  47  ,ABS(clse-lg9)dc9
08:14:25  48  ,ABS(clse-lg12)dc12
08:14:25  49  ,ABS(clse-lg18)dc18
08:14:25  50  ,ABS(clse-lg24)dc24
08:14:25  51  ,ABS(clse-lg72)dc72
08:14:25  52  ,(ld4-clse) ug4
08:14:25  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
08:14:25  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
08:14:25  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
08:14:25  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
08:14:25  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
08:14:25  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
08:14:25  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
08:14:25  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
08:14:25  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
08:14:25  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
08:14:25  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
08:14:25  64  ,0+TO_CHAR(ydate,'HH24')hh
08:14:25  65  ,0+TO_CHAR(ydate,'D')d
08:14:25  66  ,0+TO_CHAR(ydate,'W')w
08:14:25  67  FROM q11
08:14:25  68  ORDER BY pair,ydate
08:14:25  69  /

Table created.

Elapsed: 00:00:00.44
08:14:25 SQL> 
08:14:25 SQL> -- rpt
08:14:25 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1914
	-1	    1878

Elapsed: 00:00:00.18
08:14:25 SQL> 
08:14:25 SQL> -- Calc gains and ntiles
08:14:25 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.22
08:14:26 SQL> CREATE TABLE q15 COMPRESS AS
08:14:26   2  SELECT
08:14:26   3  pair
08:14:26   4  ,ydate
08:14:26   5  ,prdate -- Should be unique
08:14:26   6  ,trend -- +1 or -1
08:14:26   7  ,dc12 -- next statement needs this
08:14:26   8  -- Use NTILE() to derive some attributes
08:14:26   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
08:14:26  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
08:14:26  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
08:14:26  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
08:14:26  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
08:14:26  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
08:14:26  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
08:14:26  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
08:14:26  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
08:14:26  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
08:14:26  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
08:14:26  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
08:14:26  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
08:14:26  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
08:14:26  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
08:14:26  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
08:14:26  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
08:14:26  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
08:14:26  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
08:14:26  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
08:14:26  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
08:14:26  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
08:14:26  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
08:14:26  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
08:14:26  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
08:14:26  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
08:14:26  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
08:14:26  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
08:14:26  37  -- date related integers: hour of day, day of week, week of month:
08:14:26  38  ,hh    att28
08:14:26  39  ,d     att29
08:14:26  40  ,w     att30
08:14:26  41  ,trend att31
08:14:26  42  ,ug4 g4
08:14:26  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
08:14:26  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
08:14:26  45  FROM q13
08:14:26  46  ORDER BY pair,ydate
08:14:26  47  /

Table created.

Elapsed: 00:00:00.74
08:14:26 SQL> 
08:14:26 SQL> -- rpt
08:14:26 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
08:14:26   2  GROUP BY pair,trend,gatt,gattn
08:14:26   3  ORDER BY pair,trend,gatt,gattn
08:14:26   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -1.525E-06	     305    .027924561
gbp_usd 	-1 nup up  -.00344606	     774    -.03950937
gbp_usd 	-1 up  nup .003594535	     795    .013518562
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup 6.1446E-06	     332    .029458244
gbp_usd 	 1 nup up  -.00340725	     790    .053387672
gbp_usd 	 1 up  nup .003564773	     792    -.04665928

7 rows selected.

Elapsed: 00:00:00.08
08:14:26 SQL> 
08:14:26 SQL> -- rpt
08:14:26 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-15 08:00:00

Elapsed: 00:00:00.00
08:14:26 SQL> 
08:14:26 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.21
08:14:27 SQL> CREATE TABLE modsrc COMPRESS AS
08:14:27   2  SELECT
08:14:27   3  pair
08:14:27   4  ,ydate
08:14:27   5  ,prdate
08:14:27   6  ,trend
08:14:27   7  ,g4
08:14:27   8  ,gatt
08:14:27   9  ,gattn
08:14:27  10  ,dc12
08:14:27  11  FROM q15
08:14:27  12  /

Table created.

Elapsed: 00:00:01.24
08:14:28 SQL> 
08:14:28 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.33
08:14:28 SQL> 
08:14:28 SQL> -- rpt
08:14:28 SQL> 
08:14:28 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.08
08:14:28 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
08:14:28 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
08:14:28 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
08:14:28 SQL> 
08:14:28 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
08:14:28   2  GROUP BY pair,trend,gatt,gattn
08:14:28   3  ORDER BY pair,trend,gatt,gattn
08:14:28   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
gbp_usd 	-1 nup nup -1.525E-06	     305    .027924561
gbp_usd 	-1 nup up  -.00344606	     774    -.03950937
gbp_usd 	-1 up  nup .003594535	     795    .013518562
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup 6.1446E-06	     332    .029458244
gbp_usd 	 1 nup up  -.00340725	     790    .053387672
gbp_usd 	 1 up  nup .003564773	     792    -.04665928

7 rows selected.

Elapsed: 00:00:00.00
08:14:28 SQL> 
08:14:28 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
08:14:28 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
08:14:28   2  SELECT
08:14:28   3  ydate
08:14:28   4  ,trend gbp_trend
08:14:28   5  ,g4    gbp_g4
08:14:28   6  ,gatt  gbp_gatt
08:14:28   7  ,gattn	gbp_gattn
08:14:28   8  FROM modsrc
08:14:28   9  /

Table created.

Elapsed: 00:00:00.10
08:14:28 SQL> 
08:14:28 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
08:14:29 SQL> 
08:14:29 SQL> -- rpt
08:14:29 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 09:00:00 2010-12-14 11:00:00	 1914	  -.0194      .0192
	-1 2010-05-11 21:00:00 2010-12-15 08:00:00	 1874	  -.0243      .0217

Elapsed: 00:00:00.01
08:14:29 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g4),MAX(gbp_g4)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G4) MAX(GBP_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 09:00:00 2010-12-14 11:00:00	       1914	 -.0194       .0192
	-1 2010-05-11 21:00:00 2010-12-15 08:00:00	       1878	 -.0243       .0217

Elapsed: 00:00:00.01
08:14:29 SQL> 
08:14:29 SQL> -- I need a copy of q15 attributes
08:14:29 SQL> 
08:14:29 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.14
08:14:29 SQL> CREATE TABLE gbp_att COMPRESS AS
08:14:29   2  SELECT
08:14:29   3  ydate
08:14:29   4  ,att00 gbp_att00
08:14:29   5  ,att01 gbp_att01
08:14:29   6  ,att02 gbp_att02
08:14:29   7  ,att03 gbp_att03
08:14:29   8  ,att04 gbp_att04
08:14:29   9  ,att05 gbp_att05
08:14:29  10  ,att06 gbp_att06
08:14:29  11  ,att07 gbp_att07
08:14:29  12  ,att08 gbp_att08
08:14:29  13  ,att09 gbp_att09
08:14:29  14  ,att10 gbp_att10
08:14:29  15  ,att11 gbp_att11
08:14:29  16  ,att12 gbp_att12
08:14:29  17  ,att13 gbp_att13
08:14:29  18  ,att14 gbp_att14
08:14:29  19  ,att15 gbp_att15
08:14:29  20  ,att16 gbp_att16
08:14:29  21  ,att17 gbp_att17
08:14:29  22  ,att18 gbp_att18
08:14:29  23  ,att19 gbp_att19
08:14:29  24  ,att20 gbp_att20
08:14:29  25  ,att21 gbp_att21
08:14:29  26  ,att22 gbp_att22
08:14:29  27  ,att23 gbp_att23
08:14:29  28  ,att24 gbp_att24
08:14:29  29  ,att25 gbp_att25
08:14:29  30  ,att26 gbp_att26
08:14:29  31  ,att27 gbp_att27
08:14:29  32  ,att28 gbp_att28
08:14:29  33  ,att29 gbp_att29
08:14:29  34  ,att30 gbp_att30
08:14:29  35  ,att31 gbp_att31
08:14:29  36  FROM q15
08:14:29  37  /

Table created.

Elapsed: 00:00:00.07
08:14:29 SQL> 
08:14:29 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.27
08:14:29 SQL> 
08:14:29 SQL> -- rpt
08:14:29 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.00
08:14:29 SQL> 
08:14:29 SQL> --
08:14:29 SQL> -- jpy10.sql
08:14:29 SQL> --
08:14:29 SQL> 
08:14:29 SQL> -- Creates views and tables for backtesting a forex SVM strategy
08:14:29 SQL> 
08:14:29 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.85
08:14:30 SQL> 
08:14:30 SQL> -- I created ibfu_t here:
08:14:30 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
08:14:30 SQL> 
08:14:30 SQL> CREATE OR REPLACE VIEW q11 AS
08:14:30   2  SELECT
08:14:30   3  pair
08:14:30   4  ,ydate
08:14:30   5  ,prdate
08:14:30   6  ,rownum rnum -- acts as t in my time-series
08:14:30   7  ,clse
08:14:30   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
08:14:30   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
08:14:30  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
08:14:30  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
08:14:30  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
08:14:30  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
08:14:30  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
08:14:30  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
08:14:30  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
08:14:30  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
08:14:30  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
08:14:30  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
08:14:30  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
08:14:30  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
08:14:30  22  FROM ibfu_t WHERE pair LIKE'%jpy%'
08:14:30  23  ORDER BY ydate
08:14:30  24  /

View created.

Elapsed: 00:00:00.15
08:14:30 SQL> 
08:14:30 SQL> -- rpt
08:14:30 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy 	3792

Elapsed: 00:00:00.08
08:14:30 SQL> 
08:14:30 SQL> -- Calc deltas and gains
08:14:30 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.39
08:14:31 SQL> 
08:14:31 SQL> CREATE TABLE q13 COMPRESS AS
08:14:31   2  SELECT
08:14:31   3  pair
08:14:31   4  ,ydate
08:14:31   5  ,prdate
08:14:31   6  ,rnum
08:14:31   7  ,lg4
08:14:31   8  ,lg8
08:14:31   9  ,lg12
08:14:31  10  ,ld4
08:14:31  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
08:14:31  12  -- step by 1
08:14:31  13  ,clse-lg1 d01
08:14:31  14  ,lg1-lg2	d12
08:14:31  15  ,lg2-lg3	d23
08:14:31  16  ,lg3-lg4	d34
08:14:31  17  ,lg4-lg5	d45
08:14:31  18  ,lg5-lg6	d56
08:14:31  19  ,lg6-lg7	d67
08:14:31  20  ,lg7-lg8	d78
08:14:31  21  ,lg8-lg9	d89
08:14:31  22  -- step by 2
08:14:31  23  ,clse-lg2 d02
08:14:31  24  ,lg2-lg4 d24
08:14:31  25  ,lg4-lg6 d46
08:14:31  26  ,lg6-lg8 d68
08:14:31  27  -- step by 3
08:14:31  28  ,clse-lg3 d03
08:14:31  29  ,lg3-lg6	d36
08:14:31  30  ,lg6-lg9	d69
08:14:31  31  ,lg9-lg12 d912
08:14:31  32  -- step by 4
08:14:31  33  ,clse-lg4 d04
08:14:31  34  ,lg4-lg8	d48
08:14:31  35  ,lg8-lg12 d812
08:14:31  36  ,lg6-lg12 d612
08:14:31  37  ,lg12-lg18 d1218
08:14:31  38  --
08:14:31  39  ,ABS(clse-lg1)dc1
08:14:31  40  ,ABS(clse-lg2)dc2
08:14:31  41  ,ABS(clse-lg3)dc3
08:14:31  42  ,ABS(clse-lg4)dc4
08:14:31  43  ,ABS(clse-lg5)dc5
08:14:31  44  ,ABS(clse-lg6)dc6
08:14:31  45  ,ABS(clse-lg7)dc7
08:14:31  46  ,ABS(clse-lg8)dc8
08:14:31  47  ,ABS(clse-lg9)dc9
08:14:31  48  ,ABS(clse-lg12)dc12
08:14:31  49  ,ABS(clse-lg18)dc18
08:14:31  50  ,ABS(clse-lg24)dc24
08:14:31  51  ,ABS(clse-lg72)dc72
08:14:31  52  ,(ld4-clse) ug4
08:14:31  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
08:14:31  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
08:14:31  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
08:14:31  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
08:14:31  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
08:14:31  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
08:14:31  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
08:14:31  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
08:14:31  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
08:14:31  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
08:14:31  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
08:14:31  64  ,0+TO_CHAR(ydate,'HH24')hh
08:14:31  65  ,0+TO_CHAR(ydate,'D')d
08:14:31  66  ,0+TO_CHAR(ydate,'W')w
08:14:31  67  FROM q11
08:14:31  68  ORDER BY pair,ydate
08:14:31  69  /

Table created.

Elapsed: 00:00:00.50
08:14:31 SQL> 
08:14:31 SQL> -- rpt
08:14:31 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1717
	-1	    2075

Elapsed: 00:00:00.30
08:14:31 SQL> 
08:14:31 SQL> -- Calc gains and ntiles
08:14:31 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.12
08:14:32 SQL> CREATE TABLE q15 COMPRESS AS
08:14:32   2  SELECT
08:14:32   3  pair
08:14:32   4  ,ydate
08:14:32   5  ,prdate -- Should be unique
08:14:32   6  ,trend -- +1 or -1
08:14:32   7  ,dc12 -- next statement needs this
08:14:32   8  -- Use NTILE() to derive some attributes
08:14:32   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
08:14:32  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
08:14:32  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
08:14:32  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
08:14:32  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
08:14:32  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
08:14:32  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
08:14:32  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
08:14:32  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
08:14:32  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
08:14:32  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
08:14:32  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
08:14:32  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
08:14:32  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
08:14:32  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
08:14:32  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
08:14:32  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
08:14:32  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
08:14:32  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
08:14:32  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
08:14:32  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
08:14:32  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
08:14:32  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
08:14:32  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
08:14:32  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
08:14:32  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
08:14:32  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
08:14:32  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
08:14:32  37  -- date related integers: hour of day, day of week, week of month:
08:14:32  38  ,hh    att28
08:14:32  39  ,d     att29
08:14:32  40  ,w     att30
08:14:32  41  ,trend att31
08:14:32  42  ,ug4 g4
08:14:32  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
08:14:32  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
08:14:32  45  FROM q13
08:14:32  46  ORDER BY pair,ydate
08:14:32  47  /

Table created.

Elapsed: 00:00:00.80
08:14:32 SQL> 
08:14:32 SQL> -- rpt
08:14:32 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
08:14:32   2  GROUP BY pair,trend,gatt,gattn
08:14:32   3  ORDER BY pair,trend,gatt,gattn
08:14:32   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	      57
usd_jpy 	-1 nup up  -.16828062	     996    -.06454534
usd_jpy 	-1 up  nup .160208904	    1022     .15748503
usd_jpy 	 1 nup nup	    0	      28
usd_jpy 	 1 nup up  -.16370162	     925    .001557389
usd_jpy 	 1 up  nup .157865789	     760    .111896103
usd_jpy 	 1			       0

7 rows selected.

Elapsed: 00:00:00.10
08:14:32 SQL> 
08:14:32 SQL> -- rpt
08:14:32 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-15 08:00:00

Elapsed: 00:00:00.04
08:14:32 SQL> 
08:14:32 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.19
08:14:33 SQL> CREATE TABLE modsrc COMPRESS AS
08:14:33   2  SELECT
08:14:33   3  pair
08:14:33   4  ,ydate
08:14:33   5  ,prdate
08:14:33   6  ,trend
08:14:33   7  ,g4
08:14:33   8  ,gatt
08:14:33   9  ,gattn
08:14:33  10  ,dc12
08:14:33  11  FROM q15
08:14:33  12  /

Table created.

Elapsed: 00:00:00.07
08:14:33 SQL> 
08:14:33 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
08:14:33 SQL> 
08:14:33 SQL> -- rpt
08:14:33 SQL> 
08:14:33 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.08
08:14:33 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
08:14:33 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
08:14:33 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
08:14:33 SQL> 
08:14:33 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
08:14:33   2  GROUP BY pair,trend,gatt,gattn
08:14:33   3  ORDER BY pair,trend,gatt,gattn
08:14:33   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_jpy 	-1 nup nup	    0	      57
usd_jpy 	-1 nup up  -.16828062	     996    -.06454534
usd_jpy 	-1 up  nup .160208904	    1022     .15748503
usd_jpy 	 1 nup nup	    0	      28
usd_jpy 	 1 nup up  -.16370162	     925    .001557389
usd_jpy 	 1 up  nup .157865789	     760    .111896103
usd_jpy 	 1			       0

7 rows selected.

Elapsed: 00:00:00.01
08:14:33 SQL> 
08:14:33 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.35
08:14:33 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
08:14:33   2  SELECT
08:14:33   3  ydate
08:14:33   4  ,trend jpy_trend
08:14:33   5  ,g4    jpy_g4
08:14:33   6  ,gatt  jpy_gatt
08:14:33   7  ,gattn	jpy_gattn
08:14:33   8  FROM modsrc
08:14:33   9  /

Table created.

Elapsed: 00:00:00.42
08:14:34 SQL> 
08:14:34 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
08:14:34 SQL> 
08:14:34 SQL> -- rpt
08:14:34 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 09:00:00 2010-12-15 08:00:00	 1713	   -1.05	.71
	-1 2010-05-11 21:00:00 2010-12-14 19:00:00	 2075	   -2.13       1.97

Elapsed: 00:00:00.02
08:14:34 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g4),MAX(jpy_g4)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G4) MAX(JPY_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 09:00:00 2010-12-15 08:00:00	       1717	  -1.05 	.71
	-1 2010-05-11 21:00:00 2010-12-14 19:00:00	       2075	  -2.13        1.97

Elapsed: 00:00:00.00
08:14:34 SQL> 
08:14:34 SQL> -- I need a copy of q15 attributes
08:14:34 SQL> 
08:14:34 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.05
08:14:34 SQL> CREATE TABLE jpy_att COMPRESS AS
08:14:34   2  SELECT
08:14:34   3  ydate
08:14:34   4  ,att00 jpy_att00
08:14:34   5  ,att01 jpy_att01
08:14:34   6  ,att02 jpy_att02
08:14:34   7  ,att03 jpy_att03
08:14:34   8  ,att04 jpy_att04
08:14:34   9  ,att05 jpy_att05
08:14:34  10  ,att06 jpy_att06
08:14:34  11  ,att07 jpy_att07
08:14:34  12  ,att08 jpy_att08
08:14:34  13  ,att09 jpy_att09
08:14:34  14  ,att10 jpy_att10
08:14:34  15  ,att11 jpy_att11
08:14:34  16  ,att12 jpy_att12
08:14:34  17  ,att13 jpy_att13
08:14:34  18  ,att14 jpy_att14
08:14:34  19  ,att15 jpy_att15
08:14:34  20  ,att16 jpy_att16
08:14:34  21  ,att17 jpy_att17
08:14:34  22  ,att18 jpy_att18
08:14:34  23  ,att19 jpy_att19
08:14:34  24  ,att20 jpy_att20
08:14:34  25  ,att21 jpy_att21
08:14:34  26  ,att22 jpy_att22
08:14:34  27  ,att23 jpy_att23
08:14:34  28  ,att24 jpy_att24
08:14:34  29  ,att25 jpy_att25
08:14:34  30  ,att26 jpy_att26
08:14:34  31  ,att27 jpy_att27
08:14:34  32  ,att28 jpy_att28
08:14:34  33  ,att29 jpy_att29
08:14:34  34  ,att30 jpy_att30
08:14:34  35  ,att31 jpy_att31
08:14:34  36  FROM q15
08:14:34  37  /

Table created.

Elapsed: 00:00:00.11
08:14:34 SQL> 
08:14:34 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
08:14:34 SQL> 
08:14:34 SQL> -- rpt
08:14:34 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.01
08:14:34 SQL> 
08:14:34 SQL> --
08:14:34 SQL> -- cad10.sql
08:14:34 SQL> --
08:14:34 SQL> 
08:14:34 SQL> -- Creates views and tables for backtesting a forex SVM strategy
08:14:34 SQL> 
08:14:34 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:01.06
08:14:35 SQL> 
08:14:35 SQL> -- I created ibfu_t here:
08:14:35 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
08:14:35 SQL> 
08:14:35 SQL> CREATE OR REPLACE VIEW q11 AS
08:14:35   2  SELECT
08:14:35   3  pair
08:14:35   4  ,ydate
08:14:35   5  ,prdate
08:14:35   6  ,rownum rnum -- acts as t in my time-series
08:14:35   7  ,clse
08:14:35   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
08:14:35   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
08:14:35  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
08:14:35  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
08:14:35  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
08:14:35  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
08:14:35  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
08:14:35  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
08:14:35  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
08:14:35  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
08:14:35  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
08:14:35  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
08:14:35  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
08:14:35  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
08:14:35  22  FROM ibfu_t WHERE pair LIKE'%cad%'
08:14:35  23  ORDER BY ydate
08:14:35  24  /

View created.

Elapsed: 00:00:00.15
08:14:36 SQL> 
08:14:36 SQL> -- rpt
08:14:36 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad 	3792

Elapsed: 00:00:00.08
08:14:36 SQL> 
08:14:36 SQL> -- Calc deltas and gains
08:14:36 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.39
08:14:36 SQL> 
08:14:36 SQL> CREATE TABLE q13 COMPRESS AS
08:14:36   2  SELECT
08:14:36   3  pair
08:14:36   4  ,ydate
08:14:36   5  ,prdate
08:14:36   6  ,rnum
08:14:36   7  ,lg4
08:14:36   8  ,lg8
08:14:36   9  ,lg12
08:14:36  10  ,ld4
08:14:36  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
08:14:36  12  -- step by 1
08:14:36  13  ,clse-lg1 d01
08:14:36  14  ,lg1-lg2	d12
08:14:36  15  ,lg2-lg3	d23
08:14:36  16  ,lg3-lg4	d34
08:14:36  17  ,lg4-lg5	d45
08:14:36  18  ,lg5-lg6	d56
08:14:36  19  ,lg6-lg7	d67
08:14:36  20  ,lg7-lg8	d78
08:14:36  21  ,lg8-lg9	d89
08:14:36  22  -- step by 2
08:14:36  23  ,clse-lg2 d02
08:14:36  24  ,lg2-lg4 d24
08:14:36  25  ,lg4-lg6 d46
08:14:36  26  ,lg6-lg8 d68
08:14:36  27  -- step by 3
08:14:36  28  ,clse-lg3 d03
08:14:36  29  ,lg3-lg6	d36
08:14:36  30  ,lg6-lg9	d69
08:14:36  31  ,lg9-lg12 d912
08:14:36  32  -- step by 4
08:14:36  33  ,clse-lg4 d04
08:14:36  34  ,lg4-lg8	d48
08:14:36  35  ,lg8-lg12 d812
08:14:36  36  ,lg6-lg12 d612
08:14:36  37  ,lg12-lg18 d1218
08:14:36  38  --
08:14:36  39  ,ABS(clse-lg1)dc1
08:14:36  40  ,ABS(clse-lg2)dc2
08:14:36  41  ,ABS(clse-lg3)dc3
08:14:36  42  ,ABS(clse-lg4)dc4
08:14:36  43  ,ABS(clse-lg5)dc5
08:14:36  44  ,ABS(clse-lg6)dc6
08:14:36  45  ,ABS(clse-lg7)dc7
08:14:36  46  ,ABS(clse-lg8)dc8
08:14:36  47  ,ABS(clse-lg9)dc9
08:14:36  48  ,ABS(clse-lg12)dc12
08:14:36  49  ,ABS(clse-lg18)dc18
08:14:36  50  ,ABS(clse-lg24)dc24
08:14:36  51  ,ABS(clse-lg72)dc72
08:14:36  52  ,(ld4-clse) ug4
08:14:36  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
08:14:36  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
08:14:36  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
08:14:36  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
08:14:36  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
08:14:36  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
08:14:36  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
08:14:36  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
08:14:36  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
08:14:36  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
08:14:36  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
08:14:36  64  ,0+TO_CHAR(ydate,'HH24')hh
08:14:36  65  ,0+TO_CHAR(ydate,'D')d
08:14:36  66  ,0+TO_CHAR(ydate,'W')w
08:14:36  67  FROM q11
08:14:36  68  ORDER BY pair,ydate
08:14:36  69  /

Table created.

Elapsed: 00:00:00.41
08:14:36 SQL> 
08:14:36 SQL> -- rpt
08:14:36 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1737
	-1	    2055

Elapsed: 00:00:00.19
08:14:37 SQL> 
08:14:37 SQL> -- Calc gains and ntiles
08:14:37 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.59
08:14:37 SQL> CREATE TABLE q15 COMPRESS AS
08:14:37   2  SELECT
08:14:37   3  pair
08:14:37   4  ,ydate
08:14:37   5  ,prdate -- Should be unique
08:14:37   6  ,trend -- +1 or -1
08:14:37   7  ,dc12 -- next statement needs this
08:14:37   8  -- Use NTILE() to derive some attributes
08:14:37   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
08:14:37  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
08:14:37  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
08:14:37  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
08:14:37  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
08:14:37  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
08:14:37  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
08:14:37  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
08:14:37  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
08:14:37  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
08:14:37  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
08:14:37  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
08:14:37  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
08:14:37  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
08:14:37  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
08:14:37  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
08:14:37  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
08:14:37  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
08:14:37  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
08:14:37  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
08:14:37  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
08:14:37  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
08:14:37  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
08:14:37  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
08:14:37  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
08:14:37  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
08:14:37  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
08:14:37  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
08:14:37  37  -- date related integers: hour of day, day of week, week of month:
08:14:37  38  ,hh    att28
08:14:37  39  ,d     att29
08:14:37  40  ,w     att30
08:14:37  41  ,trend att31
08:14:37  42  ,ug4 g4
08:14:37  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
08:14:37  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
08:14:37  45  FROM q13
08:14:37  46  ORDER BY pair,ydate
08:14:37  47  /

Table created.

Elapsed: 00:00:00.78
08:14:38 SQL> 
08:14:38 SQL> -- rpt
08:14:38 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
08:14:38   2  GROUP BY pair,trend,gatt,gattn
08:14:38   3  ORDER BY pair,trend,gatt,gattn
08:14:38   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00003084	     497    .023306966
usd_cad 	-1 nup up  -.00261625	     789    .066977781
usd_cad 	-1 up  nup .002802682	     769    .030952702
usd_cad 	 1 nup nup 1.6319E-06	     383    .034968469
usd_cad 	 1 nup up  -.00284638	     715    -.01036462
usd_cad 	 1 up  nup .003006969	     635    .054044227
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.09
08:14:38 SQL> 
08:14:38 SQL> -- rpt
08:14:38 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-15 08:00:00

Elapsed: 00:00:00.00
08:14:38 SQL> 
08:14:38 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.17
08:14:38 SQL> CREATE TABLE modsrc COMPRESS AS
08:14:38   2  SELECT
08:14:38   3  pair
08:14:38   4  ,ydate
08:14:38   5  ,prdate
08:14:38   6  ,trend
08:14:38   7  ,g4
08:14:38   8  ,gatt
08:14:38   9  ,gattn
08:14:38  10  ,dc12
08:14:38  11  FROM q15
08:14:38  12  /

Table created.

Elapsed: 00:00:00.13
08:14:38 SQL> 
08:14:38 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
08:14:39 SQL> 
08:14:39 SQL> -- rpt
08:14:39 SQL> 
08:14:39 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.08
08:14:39 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
08:14:39 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
08:14:39 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
08:14:39 SQL> 
08:14:39 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
08:14:39   2  GROUP BY pair,trend,gatt,gattn
08:14:39   3  ORDER BY pair,trend,gatt,gattn
08:14:39   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_cad 	-1 nup nup -.00003084	     497    .023306966
usd_cad 	-1 nup up  -.00261625	     789    .066977781
usd_cad 	-1 up  nup .002802682	     769    .030952702
usd_cad 	 1 nup nup 1.6319E-06	     383    .034968469
usd_cad 	 1 nup up  -.00284638	     715    -.01036462
usd_cad 	 1 up  nup .003006969	     635    .054044227
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.01
08:14:39 SQL> 
08:14:39 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.11
08:14:39 SQL> CREATE TABLE cad_ms10 COMPRESS AS
08:14:39   2  SELECT
08:14:39   3  ydate
08:14:39   4  ,trend cad_trend
08:14:39   5  ,g4    cad_g4
08:14:39   6  ,gatt  cad_gatt
08:14:39   7  ,gattn	cad_gattn
08:14:39   8  FROM modsrc
08:14:39   9  /

Table created.

Elapsed: 00:00:00.09
08:14:39 SQL> 
08:14:39 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.10
08:14:39 SQL> 
08:14:39 SQL> -- rpt
08:14:39 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 15:00:00 2010-12-15 08:00:00	 1733	  -.0173      .0159
	-1 2010-05-11 21:00:00 2010-12-15 03:00:00	 2055	  -.0139      .0147

Elapsed: 00:00:00.01
08:14:39 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g4),MAX(cad_g4)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G4) MAX(CAD_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 15:00:00 2010-12-15 08:00:00	       1737	 -.0173       .0159
	-1 2010-05-11 21:00:00 2010-12-15 03:00:00	       2055	 -.0139       .0147

Elapsed: 00:00:00.02
08:14:39 SQL> 
08:14:39 SQL> -- I need a copy of q15 attributes
08:14:39 SQL> 
08:14:39 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.07
08:14:39 SQL> CREATE TABLE cad_att COMPRESS AS
08:14:39   2  SELECT
08:14:39   3  ydate
08:14:39   4  ,att00 cad_att00
08:14:39   5  ,att01 cad_att01
08:14:39   6  ,att02 cad_att02
08:14:39   7  ,att03 cad_att03
08:14:39   8  ,att04 cad_att04
08:14:39   9  ,att05 cad_att05
08:14:39  10  ,att06 cad_att06
08:14:39  11  ,att07 cad_att07
08:14:39  12  ,att08 cad_att08
08:14:39  13  ,att09 cad_att09
08:14:39  14  ,att10 cad_att10
08:14:39  15  ,att11 cad_att11
08:14:39  16  ,att12 cad_att12
08:14:39  17  ,att13 cad_att13
08:14:39  18  ,att14 cad_att14
08:14:39  19  ,att15 cad_att15
08:14:39  20  ,att16 cad_att16
08:14:39  21  ,att17 cad_att17
08:14:39  22  ,att18 cad_att18
08:14:39  23  ,att19 cad_att19
08:14:39  24  ,att20 cad_att20
08:14:39  25  ,att21 cad_att21
08:14:39  26  ,att22 cad_att22
08:14:39  27  ,att23 cad_att23
08:14:39  28  ,att24 cad_att24
08:14:39  29  ,att25 cad_att25
08:14:39  30  ,att26 cad_att26
08:14:39  31  ,att27 cad_att27
08:14:39  32  ,att28 cad_att28
08:14:39  33  ,att29 cad_att29
08:14:39  34  ,att30 cad_att30
08:14:39  35  ,att31 cad_att31
08:14:39  36  FROM q15
08:14:39  37  /

Table created.

Elapsed: 00:00:00.22
08:14:39 SQL> 
08:14:39 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.34
08:14:40 SQL> 
08:14:40 SQL> -- rpt
08:14:40 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.01
08:14:40 SQL> 
08:14:40 SQL> --
08:14:40 SQL> -- chf10.sql
08:14:40 SQL> --
08:14:40 SQL> 
08:14:40 SQL> -- Creates views and tables for backtesting a forex SVM strategy
08:14:40 SQL> 
08:14:40 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:01.27
08:14:41 SQL> 
08:14:41 SQL> -- I created ibfu_t here:
08:14:41 SQL> -- /pt/s/rlk/svm4hp/update_ibfu_t.sql
08:14:41 SQL> 
08:14:41 SQL> CREATE OR REPLACE VIEW q11 AS
08:14:41   2  SELECT
08:14:41   3  pair
08:14:41   4  ,ydate
08:14:41   5  ,prdate
08:14:41   6  ,rownum rnum -- acts as t in my time-series
08:14:41   7  ,clse
08:14:41   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg1
08:14:41   9  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg2
08:14:41  10  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg3
08:14:41  11  ,LAG(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg4
08:14:41  12  ,LAG(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg5
08:14:41  13  ,LAG(clse,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg6
08:14:41  14  ,LAG(clse,7,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg7
08:14:41  15  ,LAG(clse,8,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg8
08:14:41  16  ,LAG(clse,9,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg9
08:14:41  17  ,LAG(clse,12,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg12
08:14:41  18  ,LAG(clse,18,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg18
08:14:41  19  ,LAG(clse,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg24
08:14:41  20  ,LAG(clse,72,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) lg72
08:14:41  21  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ld4
08:14:41  22  FROM ibfu_t WHERE pair LIKE'%chf%'
08:14:41  23  ORDER BY ydate
08:14:41  24  /

View created.

Elapsed: 00:00:00.10
08:14:41 SQL> 
08:14:41 SQL> -- rpt
08:14:41 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf 	3792

Elapsed: 00:00:00.08
08:14:41 SQL> 
08:14:41 SQL> -- Calc deltas and gains
08:14:41 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.33
08:14:41 SQL> 
08:14:41 SQL> CREATE TABLE q13 COMPRESS AS
08:14:41   2  SELECT
08:14:41   3  pair
08:14:41   4  ,ydate
08:14:41   5  ,prdate
08:14:41   6  ,rnum
08:14:41   7  ,lg4
08:14:41   8  ,lg8
08:14:41   9  ,lg12
08:14:41  10  ,ld4
08:14:41  11  ,CASE WHEN(clse-lg12)>0 then 1 ELSE -1 END trend
08:14:41  12  -- step by 1
08:14:41  13  ,clse-lg1 d01
08:14:41  14  ,lg1-lg2	d12
08:14:41  15  ,lg2-lg3	d23
08:14:41  16  ,lg3-lg4	d34
08:14:41  17  ,lg4-lg5	d45
08:14:41  18  ,lg5-lg6	d56
08:14:41  19  ,lg6-lg7	d67
08:14:41  20  ,lg7-lg8	d78
08:14:41  21  ,lg8-lg9	d89
08:14:41  22  -- step by 2
08:14:41  23  ,clse-lg2 d02
08:14:41  24  ,lg2-lg4 d24
08:14:41  25  ,lg4-lg6 d46
08:14:41  26  ,lg6-lg8 d68
08:14:41  27  -- step by 3
08:14:41  28  ,clse-lg3 d03
08:14:41  29  ,lg3-lg6	d36
08:14:41  30  ,lg6-lg9	d69
08:14:41  31  ,lg9-lg12 d912
08:14:41  32  -- step by 4
08:14:41  33  ,clse-lg4 d04
08:14:41  34  ,lg4-lg8	d48
08:14:41  35  ,lg8-lg12 d812
08:14:41  36  ,lg6-lg12 d612
08:14:41  37  ,lg12-lg18 d1218
08:14:41  38  --
08:14:41  39  ,ABS(clse-lg1)dc1
08:14:41  40  ,ABS(clse-lg2)dc2
08:14:41  41  ,ABS(clse-lg3)dc3
08:14:41  42  ,ABS(clse-lg4)dc4
08:14:41  43  ,ABS(clse-lg5)dc5
08:14:41  44  ,ABS(clse-lg6)dc6
08:14:41  45  ,ABS(clse-lg7)dc7
08:14:41  46  ,ABS(clse-lg8)dc8
08:14:41  47  ,ABS(clse-lg9)dc9
08:14:41  48  ,ABS(clse-lg12)dc12
08:14:41  49  ,ABS(clse-lg18)dc18
08:14:41  50  ,ABS(clse-lg24)dc24
08:14:41  51  ,ABS(clse-lg72)dc72
08:14:41  52  ,(ld4-clse) ug4
08:14:41  53  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 2  PRECEDING AND CURRENT ROW)crr2
08:14:41  54  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 3  PRECEDING AND CURRENT ROW)crr3
08:14:41  55  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4  PRECEDING AND CURRENT ROW)crr4
08:14:41  56  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5  PRECEDING AND CURRENT ROW)crr5
08:14:41  57  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6  PRECEDING AND CURRENT ROW)crr6
08:14:41  58  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7  PRECEDING AND CURRENT ROW)crr7
08:14:41  59  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8  PRECEDING AND CURRENT ROW)crr8
08:14:41  60  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9  PRECEDING AND CURRENT ROW)crr9
08:14:41  61  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)crr12
08:14:41  62  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 24 PRECEDING AND CURRENT ROW)crr24
08:14:41  63  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 72 PRECEDING AND CURRENT ROW)crr72
08:14:41  64  ,0+TO_CHAR(ydate,'HH24')hh
08:14:41  65  ,0+TO_CHAR(ydate,'D')d
08:14:41  66  ,0+TO_CHAR(ydate,'W')w
08:14:41  67  FROM q11
08:14:41  68  ORDER BY pair,ydate
08:14:41  69  /

Table created.

Elapsed: 00:00:00.41
08:14:42 SQL> 
08:14:42 SQL> -- rpt
08:14:42 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    1715
	-1	    2077

Elapsed: 00:00:00.79
08:14:43 SQL> 
08:14:43 SQL> -- Calc gains and ntiles
08:14:43 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.27
08:14:43 SQL> CREATE TABLE q15 COMPRESS AS
08:14:43   2  SELECT
08:14:43   3  pair
08:14:43   4  ,ydate
08:14:43   5  ,prdate -- Should be unique
08:14:43   6  ,trend -- +1 or -1
08:14:43   7  ,dc12 -- next statement needs this
08:14:43   8  -- Use NTILE() to derive some attributes
08:14:43   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d12))		 att00
08:14:43  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d23))		 att01
08:14:43  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d34))		 att02
08:14:43  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d45))		 att03
08:14:43  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d56))		 att04
08:14:43  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d67))		 att05
08:14:43  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d78))		 att06
08:14:43  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d89))		 att07
08:14:43  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d912)) 	 att08
08:14:43  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc2)		 att09
08:14:43  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc3)		 att10
08:14:43  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc4)		 att11
08:14:43  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc5)		 att12
08:14:43  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6)		 att13
08:14:43  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc7)		 att14
08:14:43  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8)		 att15
08:14:43  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc9)		 att16
08:14:43  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att17
08:14:43  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc24)		 att18
08:14:43  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc72)		 att19
08:14:43  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr2,7))) att20
08:14:43  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr3,7))) att21
08:14:43  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr4,7))) att22
08:14:43  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr5,7))) att23
08:14:43  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6,7))) att24
08:14:43  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att25
08:14:43  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att26
08:14:43  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr72,7)))att27
08:14:43  37  -- date related integers: hour of day, day of week, week of month:
08:14:43  38  ,hh    att28
08:14:43  39  ,d     att29
08:14:43  40  ,w     att30
08:14:43  41  ,trend att31
08:14:43  42  ,ug4 g4
08:14:43  43  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4 > 0.0006 THEN 'up' ELSE 'nup' END gatt
08:14:43  44  ,CASE WHEN ug4 IS NULL THEN NULL WHEN ug4< -0.0006 THEN 'up' ELSE 'nup' END gattn
08:14:43  45  FROM q13
08:14:43  46  ORDER BY pair,ydate
08:14:43  47  /

Table created.

Elapsed: 00:00:01.53
08:14:44 SQL> 
08:14:44 SQL> -- rpt
08:14:44 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM q15
08:14:44   2  GROUP BY pair,trend,gatt,gattn
08:14:44   3  ORDER BY pair,trend,gatt,gattn
08:14:44   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup 9.3924E-06	     502    .063935961
usd_chf 	-1 nup up  -.00283945	     771    .075396575
usd_chf 	-1 up  nup .002665697	     804    -.06478155
usd_chf 	 1 nup nup -9.438E-06	     400    .037388328
usd_chf 	 1 nup up  -.00292392	     734     .01581684
usd_chf 	 1 up  nup .002763024	     577    -.06026713
usd_chf 	 1			       0

7 rows selected.

Elapsed: 00:00:00.09
08:14:45 SQL> 
08:14:45 SQL> -- rpt
08:14:45 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-15 08:00:00

Elapsed: 00:00:00.00
08:14:45 SQL> 
08:14:45 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.25
08:14:45 SQL> CREATE TABLE modsrc COMPRESS AS
08:14:45   2  SELECT
08:14:45   3  pair
08:14:45   4  ,ydate
08:14:45   5  ,prdate
08:14:45   6  ,trend
08:14:45   7  ,g4
08:14:45   8  ,gatt
08:14:45   9  ,gattn
08:14:45  10  ,dc12
08:14:45  11  FROM q15
08:14:45  12  /

Table created.

Elapsed: 00:00:00.11
08:14:45 SQL> 
08:14:45 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.29
08:14:45 SQL> 
08:14:45 SQL> -- rpt
08:14:45 SQL> 
08:14:45 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.08
08:14:45 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
08:14:45 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.01
08:14:45 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
       3792

Elapsed: 00:00:00.00
08:14:45 SQL> 
08:14:45 SQL> SELECT pair,trend,gatt,gattn,AVG(g4),COUNT(g4),CORR(dc12,g4)FROM modsrc
08:14:45   2  GROUP BY pair,trend,gatt,gattn
08:14:45   3  ORDER BY pair,trend,gatt,gattn
08:14:45   4  /

PAIR	     TREND GAT GAT    AVG(G4)  COUNT(G4) CORR(DC12,G4)
------- ---------- --- --- ---------- ---------- -------------
usd_chf 	-1 nup nup 9.3924E-06	     502    .063935961
usd_chf 	-1 nup up  -.00283945	     771    .075396575
usd_chf 	-1 up  nup .002665697	     804    -.06478155
usd_chf 	 1 nup nup -9.438E-06	     400    .037388328
usd_chf 	 1 nup up  -.00292392	     734     .01581684
usd_chf 	 1 up  nup .002763024	     577    -.06026713
usd_chf 	 1			       0

7 rows selected.

Elapsed: 00:00:00.00
08:14:45 SQL> 
08:14:45 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.15
08:14:45 SQL> CREATE TABLE chf_ms10 COMPRESS AS
08:14:45   2  SELECT
08:14:45   3  ydate
08:14:45   4  ,trend chf_trend
08:14:45   5  ,g4    chf_g4
08:14:45   6  ,gatt  chf_gatt
08:14:45   7  ,gattn	chf_gattn
08:14:45   8  FROM modsrc
08:14:45   9  /

Table created.

Elapsed: 00:00:00.09
08:14:46 SQL> 
08:14:46 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
08:14:46 SQL> 
08:14:46 SQL> -- rpt
08:14:46 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g4),MIN(g4),MAX(g4)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G4)	 MIN(G4)    MAX(G4)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-05-12 20:00:00 2010-12-15 08:00:00	 1711	  -.0227      .0156
	-1 2010-05-11 21:00:00 2010-12-15 04:00:00	 2077	   -.016      .0145

Elapsed: 00:00:00.01
08:14:46 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g4),MAX(chf_g4)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G4) MAX(CHF_G4)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-05-12 20:00:00 2010-12-15 08:00:00	       1715	 -.0227       .0156
	-1 2010-05-11 21:00:00 2010-12-15 04:00:00	       2077	  -.016       .0145

Elapsed: 00:00:00.01
08:14:46 SQL> 
08:14:46 SQL> -- I need a copy of q15 attributes
08:14:46 SQL> 
08:14:46 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.24
08:14:46 SQL> CREATE TABLE chf_att COMPRESS AS
08:14:46   2  SELECT
08:14:46   3  ydate
08:14:46   4  ,att00 chf_att00
08:14:46   5  ,att01 chf_att01
08:14:46   6  ,att02 chf_att02
08:14:46   7  ,att03 chf_att03
08:14:46   8  ,att04 chf_att04
08:14:46   9  ,att05 chf_att05
08:14:46  10  ,att06 chf_att06
08:14:46  11  ,att07 chf_att07
08:14:46  12  ,att08 chf_att08
08:14:46  13  ,att09 chf_att09
08:14:46  14  ,att10 chf_att10
08:14:46  15  ,att11 chf_att11
08:14:46  16  ,att12 chf_att12
08:14:46  17  ,att13 chf_att13
08:14:46  18  ,att14 chf_att14
08:14:46  19  ,att15 chf_att15
08:14:46  20  ,att16 chf_att16
08:14:46  21  ,att17 chf_att17
08:14:46  22  ,att18 chf_att18
08:14:46  23  ,att19 chf_att19
08:14:46  24  ,att20 chf_att20
08:14:46  25  ,att21 chf_att21
08:14:46  26  ,att22 chf_att22
08:14:46  27  ,att23 chf_att23
08:14:46  28  ,att24 chf_att24
08:14:46  29  ,att25 chf_att25
08:14:46  30  ,att26 chf_att26
08:14:46  31  ,att27 chf_att27
08:14:46  32  ,att28 chf_att28
08:14:46  33  ,att29 chf_att29
08:14:46  34  ,att30 chf_att30
08:14:46  35  ,att31 chf_att31
08:14:46  36  FROM q15
08:14:46  37  /

Table created.

Elapsed: 00:00:00.65
08:14:47 SQL> 
08:14:47 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
08:14:47 SQL> 
08:14:47 SQL> -- rpt
08:14:47 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
      3792

Elapsed: 00:00:00.03
08:14:47 SQL> 
08:14:47 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
