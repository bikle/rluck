
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 16 18:18:35 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

18:18:35 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
18:18:35 SQL> 18:18:35 SQL> --
18:18:35 SQL> -- jpy14.sql
18:18:35 SQL> --
18:18:35 SQL> 
18:18:35 SQL> -- For jpy-model, calc goodness from attributes of gbp, etc.
18:18:35 SQL> 
18:18:35 SQL> DROP TABLE jpy_ms14;

Table dropped.

Elapsed: 00:00:00.06
18:18:35 SQL> CREATE TABLE jpy_ms14 COMPRESS AS
18:18:35   2  SELECT
18:18:35   3  g.ydate
18:18:35   4  ,jpy_trend
18:18:35   5  ,jpy_g4
18:18:35   6  ,jpy_gatt gatt
18:18:35   7  ,jpy_gattn gattn
18:18:35   8  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att00 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g00
18:18:35   9  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att01 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g01
18:18:35  10  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att02 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g02
18:18:35  11  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att03 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g03
18:18:35  12  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att04 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g04
18:18:35  13  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att05 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g05
18:18:35  14  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att06 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g06
18:18:35  15  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att07 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g07
18:18:35  16  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att08 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g08
18:18:35  17  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att09 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g09
18:18:35  18  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att10 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g10
18:18:35  19  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att11 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g11
18:18:35  20  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att12 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g12
18:18:35  21  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att13 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g13
18:18:35  22  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att14 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g14
18:18:35  23  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att15 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g15
18:18:35  24  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att16 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g16
18:18:35  25  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att17 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g17
18:18:35  26  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att18 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g18
18:18:35  27  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att19 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g19
18:18:35  28  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att20 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g20
18:18:35  29  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att21 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g21
18:18:35  30  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att22 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g22
18:18:35  31  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att23 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g23
18:18:35  32  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att24 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g24
18:18:35  33  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att25 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g25
18:18:35  34  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att26 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g26
18:18:35  35  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att27 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g27
18:18:35  36  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att28 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g28
18:18:35  37  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att29 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g29
18:18:35  38  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att30 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g30
18:18:35  39  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att31 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g31
18:18:35  40  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g32
18:18:35  41  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 6*40 PRECEDING AND CURRENT ROW)eur_g33
18:18:35  42  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 6*30 PRECEDING AND CURRENT ROW)eur_g34
18:18:35  43  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 6*20 PRECEDING AND CURRENT ROW)eur_g35
18:18:35  44  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 6*10 PRECEDING AND CURRENT ROW)eur_g36
18:18:35  45  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att00 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g00
18:18:35  46  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att01 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g01
18:18:35  47  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att02 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g02
18:18:35  48  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att03 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g03
18:18:35  49  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att04 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g04
18:18:35  50  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att05 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g05
18:18:35  51  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att06 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g06
18:18:35  52  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att07 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g07
18:18:35  53  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att08 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g08
18:18:35  54  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att09 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g09
18:18:35  55  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att10 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g10
18:18:35  56  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att11 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g11
18:18:35  57  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att12 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g12
18:18:35  58  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att13 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g13
18:18:35  59  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att14 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g14
18:18:35  60  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att15 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g15
18:18:35  61  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att16 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g16
18:18:35  62  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att17 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g17
18:18:35  63  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att18 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g18
18:18:35  64  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att19 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g19
18:18:35  65  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att20 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g20
18:18:35  66  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att21 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g21
18:18:35  67  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att22 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g22
18:18:35  68  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att23 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g23
18:18:35  69  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att24 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g24
18:18:35  70  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att25 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g25
18:18:35  71  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att26 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g26
18:18:35  72  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att27 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g27
18:18:35  73  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att28 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g28
18:18:35  74  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att29 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g29
18:18:35  75  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att30 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g30
18:18:35  76  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att31 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g31
18:18:35  77  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g32
18:18:35  78  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 6*40 PRECEDING AND CURRENT ROW)aud_g33
18:18:35  79  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 6*30 PRECEDING AND CURRENT ROW)aud_g34
18:18:35  80  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 6*20 PRECEDING AND CURRENT ROW)aud_g35
18:18:35  81  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 6*10 PRECEDING AND CURRENT ROW)aud_g36
18:18:35  82  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att00 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g00
18:18:35  83  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att01 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g01
18:18:35  84  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att02 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g02
18:18:35  85  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att03 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g03
18:18:35  86  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att04 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g04
18:18:35  87  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att05 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g05
18:18:35  88  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att06 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g06
18:18:35  89  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att07 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g07
18:18:35  90  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att08 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g08
18:18:35  91  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att09 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g09
18:18:35  92  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att10 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g10
18:18:35  93  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att11 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g11
18:18:35  94  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att12 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g12
18:18:35  95  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att13 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g13
18:18:35  96  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att14 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g14
18:18:35  97  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att15 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g15
18:18:35  98  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att16 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g16
18:18:35  99  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att17 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g17
18:18:35 100  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att18 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g18
18:18:35 101  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att19 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g19
18:18:35 102  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att20 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g20
18:18:35 103  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att21 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g21
18:18:35 104  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att22 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g22
18:18:35 105  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att23 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g23
18:18:35 106  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att24 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g24
18:18:35 107  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att25 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g25
18:18:35 108  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att26 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g26
18:18:35 109  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att27 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g27
18:18:35 110  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att28 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g28
18:18:35 111  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att29 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g29
18:18:35 112  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att30 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g30
18:18:35 113  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att31 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g31
18:18:35 114  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g32
18:18:35 115  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 6*40 PRECEDING AND CURRENT ROW)gbp_g33
18:18:35 116  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 6*30 PRECEDING AND CURRENT ROW)gbp_g34
18:18:35 117  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 6*20 PRECEDING AND CURRENT ROW)gbp_g35
18:18:35 118  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 6*10 PRECEDING AND CURRENT ROW)gbp_g36
18:18:35 119  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att00 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g00
18:18:35 120  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att01 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g01
18:18:35 121  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att02 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g02
18:18:35 122  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att03 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g03
18:18:35 123  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att04 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g04
18:18:35 124  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att05 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g05
18:18:35 125  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att06 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g06
18:18:35 126  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att07 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g07
18:18:35 127  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att08 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g08
18:18:35 128  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att09 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g09
18:18:35 129  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att10 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g10
18:18:35 130  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att11 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g11
18:18:35 131  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att12 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g12
18:18:35 132  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att13 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g13
18:18:35 133  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att14 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g14
18:18:35 134  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att15 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g15
18:18:35 135  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att16 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g16
18:18:35 136  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att17 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g17
18:18:35 137  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att18 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g18
18:18:35 138  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att19 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g19
18:18:35 139  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att20 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g20
18:18:35 140  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att21 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g21
18:18:35 141  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att22 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g22
18:18:35 142  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att23 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g23
18:18:35 143  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att24 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g24
18:18:35 144  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att25 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g25
18:18:35 145  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att26 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g26
18:18:35 146  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att27 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g27
18:18:35 147  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att28 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g28
18:18:35 148  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att29 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g29
18:18:35 149  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att30 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g30
18:18:35 150  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att31 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g31
18:18:35 151  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g32
18:18:35 152  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 6*40 PRECEDING AND CURRENT ROW)jpy_g33
18:18:35 153  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 6*30 PRECEDING AND CURRENT ROW)jpy_g34
18:18:35 154  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 6*20 PRECEDING AND CURRENT ROW)jpy_g35
18:18:35 155  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 6*10 PRECEDING AND CURRENT ROW)jpy_g36
18:18:35 156  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att00 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g00
18:18:35 157  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att01 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g01
18:18:35 158  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att02 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g02
18:18:35 159  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att03 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g03
18:18:35 160  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att04 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g04
18:18:35 161  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att05 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g05
18:18:35 162  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att06 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g06
18:18:35 163  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att07 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g07
18:18:35 164  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att08 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g08
18:18:35 165  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att09 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g09
18:18:35 166  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att10 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g10
18:18:35 167  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att11 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g11
18:18:35 168  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att12 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g12
18:18:35 169  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att13 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g13
18:18:35 170  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att14 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g14
18:18:35 171  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att15 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g15
18:18:35 172  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att16 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g16
18:18:35 173  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att17 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g17
18:18:35 174  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att18 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g18
18:18:35 175  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att19 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g19
18:18:35 176  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att20 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g20
18:18:35 177  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att21 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g21
18:18:35 178  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att22 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g22
18:18:35 179  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att23 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g23
18:18:35 180  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att24 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g24
18:18:35 181  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att25 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g25
18:18:35 182  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att26 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g26
18:18:35 183  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att27 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g27
18:18:35 184  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att28 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g28
18:18:35 185  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att29 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g29
18:18:35 186  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att30 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g30
18:18:35 187  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att31 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g31
18:18:35 188  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g32
18:18:35 189  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 6*40 PRECEDING AND CURRENT ROW)cad_g33
18:18:35 190  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 6*30 PRECEDING AND CURRENT ROW)cad_g34
18:18:35 191  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 6*20 PRECEDING AND CURRENT ROW)cad_g35
18:18:35 192  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 6*10 PRECEDING AND CURRENT ROW)cad_g36
18:18:35 193  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att00 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g00
18:18:35 194  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att01 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g01
18:18:35 195  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att02 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g02
18:18:35 196  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att03 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g03
18:18:35 197  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att04 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g04
18:18:35 198  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att05 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g05
18:18:35 199  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att06 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g06
18:18:35 200  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att07 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g07
18:18:35 201  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att08 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g08
18:18:35 202  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att09 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g09
18:18:35 203  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att10 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g10
18:18:35 204  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att11 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g11
18:18:35 205  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att12 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g12
18:18:35 206  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att13 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g13
18:18:35 207  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att14 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g14
18:18:35 208  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att15 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g15
18:18:35 209  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att16 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g16
18:18:35 210  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att17 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g17
18:18:35 211  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att18 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g18
18:18:35 212  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att19 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g19
18:18:35 213  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att20 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g20
18:18:35 214  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att21 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g21
18:18:35 215  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att22 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g22
18:18:35 216  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att23 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g23
18:18:35 217  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att24 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g24
18:18:35 218  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att25 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g25
18:18:35 219  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att26 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g26
18:18:35 220  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att27 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g27
18:18:35 221  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att28 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g28
18:18:35 222  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att29 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g29
18:18:35 223  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att30 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g30
18:18:35 224  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att31 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g31
18:18:35 225  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g32
18:18:35 226  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 6*40 PRECEDING AND CURRENT ROW)chf_g33
18:18:35 227  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 6*30 PRECEDING AND CURRENT ROW)chf_g34
18:18:35 228  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 6*20 PRECEDING AND CURRENT ROW)chf_g35
18:18:35 229  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 6*10 PRECEDING AND CURRENT ROW)chf_g36
18:18:35 230  FROM jpy_ms10 m
18:18:35 231  ,eur_att e
18:18:35 232  ,aud_att a
18:18:35 233  ,gbp_att g
18:18:35 234  ,jpy_att j
18:18:35 235  ,cad_att d
18:18:35 236  ,chf_att f
18:18:35 237  WHERE m.ydate = e.ydate
18:18:35 238  AND   m.ydate = a.ydate
18:18:35 239  AND   m.ydate = g.ydate
18:18:35 240  AND   m.ydate = j.ydate
18:18:35 241  AND   m.ydate = d.ydate
18:18:35 242  AND   m.ydate = f.ydate
18:18:35 243  /

Table created.

Elapsed: 00:02:02.64
18:20:38 SQL> 
18:20:38 SQL> -- rpt
18:20:38 SQL> SELECT COUNT(ydate),MIN(ydate),MAX(ydate)FROM jpy_ms14;

COUNT(YDATE) MIN(YDATE) 	 MAX(YDATE)
------------ ------------------- -------------------
       18207 2010-06-23 16:20:01 2010-12-16 18:10:00

Elapsed: 00:00:00.05
18:20:38 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
