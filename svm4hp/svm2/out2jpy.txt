
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 16 20:06:53 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

20:06:53 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
20:06:53 SQL> 20:06:53 SQL> --
20:06:53 SQL> -- jpy14.sql
20:06:53 SQL> --
20:06:53 SQL> 
20:06:53 SQL> -- For jpy-model, calc goodness from attributes of gbp, etc.
20:06:53 SQL> 
20:06:53 SQL> DROP TABLE jpy_ms14;

Table dropped.

Elapsed: 00:00:00.09
20:06:54 SQL> CREATE TABLE jpy_ms14 COMPRESS AS
20:06:54   2  SELECT
20:06:54   3  g.ydate
20:06:54   4  ,jpy_trend
20:06:54   5  ,jpy_g4
20:06:54   6  ,jpy_gatt gatt
20:06:54   7  ,jpy_gattn gattn
20:06:54   8  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att00 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g00
20:06:54   9  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att01 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g01
20:06:54  10  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att02 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g02
20:06:54  11  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att03 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g03
20:06:54  12  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att04 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g04
20:06:54  13  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att05 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g05
20:06:54  14  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att06 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g06
20:06:54  15  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att07 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g07
20:06:54  16  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att08 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g08
20:06:54  17  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att09 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g09
20:06:54  18  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att10 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g10
20:06:54  19  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att11 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g11
20:06:54  20  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att12 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g12
20:06:54  21  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att13 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g13
20:06:54  22  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att14 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g14
20:06:54  23  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att15 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g15
20:06:54  24  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att16 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g16
20:06:54  25  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att17 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g17
20:06:54  26  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att18 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g18
20:06:54  27  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att19 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g19
20:06:54  28  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att20 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g20
20:06:54  29  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att21 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g21
20:06:54  30  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att22 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g22
20:06:54  31  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att23 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g23
20:06:54  32  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att24 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g24
20:06:54  33  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att25 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g25
20:06:54  34  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att26 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g26
20:06:54  35  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att27 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g27
20:06:54  36  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att28 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g28
20:06:54  37  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att29 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g29
20:06:54  38  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att30 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g30
20:06:54  39  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att31 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g31
20:06:54  40  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g32
20:06:54  41  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 12*40 PRECEDING AND CURRENT ROW)eur_g33
20:06:54  42  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)eur_g34
20:06:54  43  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)eur_g35
20:06:54  44  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)eur_g36
20:06:54  45  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att00 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g00
20:06:54  46  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att01 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g01
20:06:54  47  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att02 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g02
20:06:54  48  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att03 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g03
20:06:54  49  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att04 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g04
20:06:54  50  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att05 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g05
20:06:54  51  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att06 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g06
20:06:54  52  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att07 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g07
20:06:54  53  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att08 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g08
20:06:54  54  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att09 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g09
20:06:54  55  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att10 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g10
20:06:54  56  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att11 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g11
20:06:54  57  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att12 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g12
20:06:54  58  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att13 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g13
20:06:54  59  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att14 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g14
20:06:54  60  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att15 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g15
20:06:54  61  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att16 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g16
20:06:54  62  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att17 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g17
20:06:54  63  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att18 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g18
20:06:54  64  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att19 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g19
20:06:54  65  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att20 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g20
20:06:54  66  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att21 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g21
20:06:54  67  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att22 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g22
20:06:54  68  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att23 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g23
20:06:54  69  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att24 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g24
20:06:54  70  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att25 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g25
20:06:54  71  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att26 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g26
20:06:54  72  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att27 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g27
20:06:54  73  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att28 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g28
20:06:54  74  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att29 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g29
20:06:54  75  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att30 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g30
20:06:54  76  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att31 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g31
20:06:54  77  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g32
20:06:54  78  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 12*40 PRECEDING AND CURRENT ROW)aud_g33
20:06:54  79  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)aud_g34
20:06:54  80  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)aud_g35
20:06:54  81  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)aud_g36
20:06:54  82  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att00 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g00
20:06:54  83  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att01 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g01
20:06:54  84  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att02 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g02
20:06:54  85  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att03 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g03
20:06:54  86  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att04 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g04
20:06:54  87  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att05 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g05
20:06:54  88  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att06 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g06
20:06:54  89  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att07 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g07
20:06:54  90  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att08 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g08
20:06:54  91  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att09 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g09
20:06:54  92  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att10 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g10
20:06:54  93  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att11 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g11
20:06:54  94  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att12 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g12
20:06:54  95  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att13 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g13
20:06:54  96  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att14 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g14
20:06:54  97  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att15 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g15
20:06:54  98  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att16 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g16
20:06:54  99  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att17 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g17
20:06:54 100  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att18 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g18
20:06:54 101  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att19 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g19
20:06:54 102  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att20 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g20
20:06:54 103  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att21 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g21
20:06:54 104  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att22 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g22
20:06:54 105  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att23 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g23
20:06:54 106  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att24 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g24
20:06:54 107  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att25 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g25
20:06:54 108  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att26 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g26
20:06:54 109  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att27 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g27
20:06:54 110  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att28 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g28
20:06:54 111  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att29 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g29
20:06:54 112  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att30 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g30
20:06:54 113  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att31 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g31
20:06:54 114  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g32
20:06:54 115  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 12*40 PRECEDING AND CURRENT ROW)gbp_g33
20:06:54 116  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)gbp_g34
20:06:54 117  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)gbp_g35
20:06:54 118  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)gbp_g36
20:06:54 119  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att00 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g00
20:06:54 120  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att01 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g01
20:06:54 121  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att02 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g02
20:06:54 122  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att03 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g03
20:06:54 123  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att04 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g04
20:06:54 124  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att05 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g05
20:06:54 125  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att06 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g06
20:06:54 126  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att07 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g07
20:06:54 127  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att08 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g08
20:06:54 128  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att09 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g09
20:06:54 129  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att10 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g10
20:06:54 130  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att11 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g11
20:06:54 131  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att12 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g12
20:06:54 132  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att13 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g13
20:06:54 133  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att14 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g14
20:06:54 134  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att15 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g15
20:06:54 135  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att16 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g16
20:06:54 136  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att17 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g17
20:06:54 137  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att18 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g18
20:06:54 138  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att19 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g19
20:06:54 139  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att20 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g20
20:06:54 140  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att21 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g21
20:06:54 141  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att22 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g22
20:06:54 142  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att23 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g23
20:06:54 143  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att24 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g24
20:06:54 144  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att25 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g25
20:06:54 145  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att26 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g26
20:06:54 146  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att27 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g27
20:06:54 147  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att28 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g28
20:06:54 148  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att29 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g29
20:06:54 149  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att30 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g30
20:06:54 150  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att31 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g31
20:06:54 151  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g32
20:06:54 152  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 12*40 PRECEDING AND CURRENT ROW)jpy_g33
20:06:54 153  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)jpy_g34
20:06:54 154  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)jpy_g35
20:06:54 155  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)jpy_g36
20:06:54 156  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att00 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g00
20:06:54 157  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att01 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g01
20:06:54 158  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att02 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g02
20:06:54 159  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att03 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g03
20:06:54 160  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att04 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g04
20:06:54 161  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att05 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g05
20:06:54 162  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att06 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g06
20:06:54 163  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att07 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g07
20:06:54 164  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att08 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g08
20:06:54 165  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att09 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g09
20:06:54 166  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att10 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g10
20:06:54 167  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att11 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g11
20:06:54 168  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att12 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g12
20:06:54 169  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att13 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g13
20:06:54 170  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att14 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g14
20:06:54 171  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att15 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g15
20:06:54 172  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att16 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g16
20:06:54 173  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att17 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g17
20:06:54 174  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att18 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g18
20:06:54 175  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att19 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g19
20:06:54 176  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att20 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g20
20:06:54 177  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att21 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g21
20:06:54 178  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att22 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g22
20:06:54 179  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att23 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g23
20:06:54 180  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att24 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g24
20:06:54 181  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att25 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g25
20:06:54 182  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att26 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g26
20:06:54 183  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att27 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g27
20:06:54 184  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att28 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g28
20:06:54 185  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att29 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g29
20:06:54 186  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att30 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g30
20:06:54 187  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att31 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g31
20:06:54 188  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g32
20:06:54 189  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 12*40 PRECEDING AND CURRENT ROW)cad_g33
20:06:54 190  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)cad_g34
20:06:54 191  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)cad_g35
20:06:54 192  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)cad_g36
20:06:54 193  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att00 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g00
20:06:54 194  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att01 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g01
20:06:54 195  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att02 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g02
20:06:54 196  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att03 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g03
20:06:54 197  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att04 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g04
20:06:54 198  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att05 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g05
20:06:54 199  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att06 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g06
20:06:54 200  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att07 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g07
20:06:54 201  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att08 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g08
20:06:54 202  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att09 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g09
20:06:54 203  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att10 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g10
20:06:54 204  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att11 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g11
20:06:54 205  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att12 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g12
20:06:54 206  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att13 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g13
20:06:54 207  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att14 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g14
20:06:54 208  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att15 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g15
20:06:54 209  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att16 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g16
20:06:54 210  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att17 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g17
20:06:54 211  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att18 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g18
20:06:54 212  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att19 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g19
20:06:54 213  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att20 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g20
20:06:54 214  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att21 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g21
20:06:54 215  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att22 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g22
20:06:54 216  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att23 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g23
20:06:54 217  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att24 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g24
20:06:54 218  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att25 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g25
20:06:54 219  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att26 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g26
20:06:54 220  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att27 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g27
20:06:54 221  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att28 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g28
20:06:54 222  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att29 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g29
20:06:54 223  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att30 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g30
20:06:54 224  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att31 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g31
20:06:54 225  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g32
20:06:54 226  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 12*40 PRECEDING AND CURRENT ROW)chf_g33
20:06:54 227  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)chf_g34
20:06:54 228  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)chf_g35
20:06:54 229  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)chf_g36
20:06:54 230  FROM jpy_ms10 m
20:06:54 231  ,eur_att e
20:06:54 232  ,aud_att a
20:06:54 233  ,gbp_att g
20:06:54 234  ,jpy_att j
20:06:54 235  ,cad_att d
20:06:54 236  ,chf_att f
20:06:54 237  WHERE m.ydate = e.ydate
20:06:54 238  AND   m.ydate = a.ydate
20:06:54 239  AND   m.ydate = g.ydate
20:06:54 240  AND   m.ydate = j.ydate
20:06:54 241  AND   m.ydate = d.ydate
20:06:54 242  AND   m.ydate = f.ydate
20:06:54 243  /

Table created.

Elapsed: 00:02:16.42
20:09:10 SQL> 
20:09:10 SQL> -- rpt
20:09:10 SQL> SELECT COUNT(ydate),MIN(ydate),MAX(ydate)FROM jpy_ms14;

COUNT(YDATE) MIN(YDATE) 	 MAX(YDATE)
------------ ------------------- -------------------
       19952 2010-09-10 20:10:01 2010-12-16 19:55:00

Elapsed: 00:00:00.06
20:09:10 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
