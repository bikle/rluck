
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 16 03:49:52 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

03:49:52 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
03:49:52 SQL> 03:49:52 SQL> --
03:49:52 SQL> -- jpy14.sql
03:49:52 SQL> --
03:49:52 SQL> 
03:49:52 SQL> -- For jpy-model, calc goodness from attributes of gbp, etc.
03:49:52 SQL> 
03:49:52 SQL> DROP TABLE jpy_ms14;

Table dropped.

Elapsed: 00:00:00.09
03:49:52 SQL> CREATE TABLE jpy_ms14 COMPRESS AS
03:49:52   2  SELECT
03:49:52   3  g.ydate
03:49:52   4  ,jpy_trend
03:49:52   5  ,jpy_g4
03:49:52   6  ,jpy_gatt gatt
03:49:52   7  ,jpy_gattn gattn
03:49:52   8  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att00 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g00
03:49:52   9  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att01 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g01
03:49:52  10  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att02 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g02
03:49:52  11  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att03 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g03
03:49:52  12  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att04 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g04
03:49:52  13  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att05 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g05
03:49:52  14  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att06 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g06
03:49:52  15  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att07 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g07
03:49:52  16  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att08 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g08
03:49:52  17  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att09 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g09
03:49:52  18  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att10 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g10
03:49:52  19  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att11 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g11
03:49:52  20  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att12 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g12
03:49:52  21  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att13 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g13
03:49:52  22  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att14 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g14
03:49:52  23  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att15 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g15
03:49:52  24  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att16 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g16
03:49:52  25  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att17 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g17
03:49:52  26  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att18 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g18
03:49:52  27  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att19 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g19
03:49:52  28  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att20 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g20
03:49:52  29  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att21 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g21
03:49:52  30  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att22 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g22
03:49:52  31  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att23 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g23
03:49:52  32  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att24 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g24
03:49:52  33  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att25 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g25
03:49:52  34  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att26 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g26
03:49:52  35  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att27 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g27
03:49:52  36  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att28 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g28
03:49:52  37  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att29 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g29
03:49:52  38  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att30 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g30
03:49:52  39  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att31 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g31
03:49:52  40  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)eur_g32
03:49:52  41  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 6*40 PRECEDING AND CURRENT ROW)eur_g33
03:49:52  42  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 6*30 PRECEDING AND CURRENT ROW)eur_g34
03:49:52  43  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 6*20 PRECEDING AND CURRENT ROW)eur_g35
03:49:52  44  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 6*10 PRECEDING AND CURRENT ROW)eur_g36
03:49:52  45  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att00 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g00
03:49:52  46  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att01 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g01
03:49:52  47  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att02 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g02
03:49:52  48  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att03 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g03
03:49:52  49  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att04 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g04
03:49:52  50  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att05 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g05
03:49:52  51  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att06 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g06
03:49:52  52  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att07 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g07
03:49:52  53  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att08 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g08
03:49:52  54  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att09 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g09
03:49:52  55  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att10 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g10
03:49:52  56  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att11 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g11
03:49:52  57  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att12 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g12
03:49:52  58  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att13 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g13
03:49:52  59  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att14 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g14
03:49:52  60  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att15 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g15
03:49:52  61  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att16 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g16
03:49:52  62  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att17 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g17
03:49:52  63  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att18 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g18
03:49:52  64  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att19 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g19
03:49:52  65  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att20 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g20
03:49:52  66  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att21 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g21
03:49:52  67  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att22 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g22
03:49:52  68  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att23 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g23
03:49:52  69  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att24 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g24
03:49:52  70  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att25 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g25
03:49:52  71  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att26 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g26
03:49:52  72  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att27 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g27
03:49:52  73  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att28 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g28
03:49:52  74  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att29 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g29
03:49:52  75  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att30 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g30
03:49:52  76  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att31 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g31
03:49:52  77  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)aud_g32
03:49:52  78  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 6*40 PRECEDING AND CURRENT ROW)aud_g33
03:49:52  79  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 6*30 PRECEDING AND CURRENT ROW)aud_g34
03:49:52  80  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 6*20 PRECEDING AND CURRENT ROW)aud_g35
03:49:52  81  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 6*10 PRECEDING AND CURRENT ROW)aud_g36
03:49:52  82  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att00 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g00
03:49:52  83  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att01 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g01
03:49:52  84  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att02 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g02
03:49:52  85  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att03 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g03
03:49:52  86  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att04 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g04
03:49:52  87  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att05 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g05
03:49:52  88  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att06 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g06
03:49:52  89  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att07 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g07
03:49:52  90  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att08 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g08
03:49:52  91  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att09 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g09
03:49:52  92  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att10 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g10
03:49:52  93  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att11 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g11
03:49:52  94  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att12 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g12
03:49:52  95  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att13 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g13
03:49:52  96  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att14 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g14
03:49:52  97  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att15 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g15
03:49:52  98  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att16 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g16
03:49:52  99  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att17 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g17
03:49:52 100  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att18 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g18
03:49:52 101  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att19 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g19
03:49:52 102  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att20 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g20
03:49:52 103  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att21 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g21
03:49:52 104  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att22 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g22
03:49:52 105  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att23 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g23
03:49:52 106  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att24 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g24
03:49:52 107  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att25 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g25
03:49:52 108  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att26 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g26
03:49:52 109  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att27 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g27
03:49:52 110  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att28 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g28
03:49:52 111  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att29 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g29
03:49:52 112  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att30 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g30
03:49:52 113  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att31 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g31
03:49:52 114  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)gbp_g32
03:49:52 115  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 6*40 PRECEDING AND CURRENT ROW)gbp_g33
03:49:52 116  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 6*30 PRECEDING AND CURRENT ROW)gbp_g34
03:49:52 117  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 6*20 PRECEDING AND CURRENT ROW)gbp_g35
03:49:52 118  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 6*10 PRECEDING AND CURRENT ROW)gbp_g36
03:49:52 119  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att00 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g00
03:49:52 120  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att01 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g01
03:49:52 121  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att02 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g02
03:49:52 122  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att03 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g03
03:49:52 123  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att04 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g04
03:49:52 124  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att05 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g05
03:49:52 125  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att06 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g06
03:49:52 126  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att07 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g07
03:49:52 127  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att08 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g08
03:49:52 128  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att09 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g09
03:49:52 129  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att10 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g10
03:49:52 130  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att11 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g11
03:49:52 131  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att12 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g12
03:49:52 132  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att13 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g13
03:49:52 133  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att14 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g14
03:49:52 134  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att15 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g15
03:49:52 135  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att16 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g16
03:49:52 136  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att17 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g17
03:49:52 137  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att18 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g18
03:49:52 138  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att19 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g19
03:49:52 139  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att20 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g20
03:49:52 140  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att21 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g21
03:49:52 141  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att22 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g22
03:49:52 142  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att23 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g23
03:49:52 143  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att24 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g24
03:49:52 144  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att25 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g25
03:49:52 145  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att26 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g26
03:49:52 146  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att27 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g27
03:49:52 147  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att28 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g28
03:49:52 148  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att29 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g29
03:49:52 149  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att30 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g30
03:49:52 150  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att31 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g31
03:49:52 151  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)jpy_g32
03:49:52 152  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 6*40 PRECEDING AND CURRENT ROW)jpy_g33
03:49:52 153  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 6*30 PRECEDING AND CURRENT ROW)jpy_g34
03:49:52 154  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 6*20 PRECEDING AND CURRENT ROW)jpy_g35
03:49:52 155  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 6*10 PRECEDING AND CURRENT ROW)jpy_g36
03:49:52 156  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att00 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g00
03:49:52 157  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att01 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g01
03:49:52 158  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att02 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g02
03:49:52 159  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att03 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g03
03:49:52 160  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att04 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g04
03:49:52 161  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att05 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g05
03:49:52 162  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att06 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g06
03:49:52 163  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att07 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g07
03:49:52 164  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att08 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g08
03:49:52 165  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att09 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g09
03:49:52 166  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att10 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g10
03:49:52 167  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att11 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g11
03:49:52 168  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att12 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g12
03:49:52 169  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att13 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g13
03:49:52 170  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att14 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g14
03:49:52 171  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att15 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g15
03:49:52 172  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att16 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g16
03:49:52 173  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att17 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g17
03:49:52 174  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att18 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g18
03:49:52 175  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att19 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g19
03:49:52 176  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att20 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g20
03:49:52 177  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att21 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g21
03:49:52 178  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att22 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g22
03:49:52 179  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att23 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g23
03:49:52 180  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att24 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g24
03:49:52 181  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att25 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g25
03:49:52 182  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att26 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g26
03:49:52 183  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att27 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g27
03:49:52 184  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att28 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g28
03:49:52 185  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att29 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g29
03:49:52 186  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att30 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g30
03:49:52 187  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att31 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g31
03:49:52 188  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)cad_g32
03:49:52 189  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 6*40 PRECEDING AND CURRENT ROW)cad_g33
03:49:52 190  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 6*30 PRECEDING AND CURRENT ROW)cad_g34
03:49:52 191  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 6*20 PRECEDING AND CURRENT ROW)cad_g35
03:49:52 192  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 6*10 PRECEDING AND CURRENT ROW)cad_g36
03:49:52 193  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att00 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g00
03:49:52 194  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att01 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g01
03:49:52 195  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att02 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g02
03:49:52 196  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att03 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g03
03:49:52 197  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att04 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g04
03:49:52 198  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att05 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g05
03:49:52 199  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att06 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g06
03:49:52 200  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att07 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g07
03:49:52 201  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att08 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g08
03:49:52 202  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att09 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g09
03:49:52 203  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att10 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g10
03:49:52 204  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att11 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g11
03:49:52 205  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att12 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g12
03:49:52 206  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att13 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g13
03:49:52 207  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att14 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g14
03:49:52 208  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att15 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g15
03:49:52 209  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att16 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g16
03:49:52 210  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att17 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g17
03:49:52 211  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att18 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g18
03:49:52 212  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att19 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g19
03:49:52 213  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att20 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g20
03:49:52 214  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att21 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g21
03:49:52 215  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att22 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g22
03:49:52 216  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att23 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g23
03:49:52 217  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att24 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g24
03:49:52 218  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att25 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g25
03:49:52 219  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att26 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g26
03:49:52 220  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att27 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g27
03:49:52 221  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att28 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g28
03:49:52 222  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att29 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g29
03:49:52 223  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att30 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g30
03:49:52 224  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att31 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g31
03:49:52 225  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 6*22*30 PRECEDING AND CURRENT ROW)chf_g32
03:49:52 226  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 6*40 PRECEDING AND CURRENT ROW)chf_g33
03:49:52 227  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 6*30 PRECEDING AND CURRENT ROW)chf_g34
03:49:52 228  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 6*20 PRECEDING AND CURRENT ROW)chf_g35
03:49:52 229  ,SUM(jpy_g4)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 6*10 PRECEDING AND CURRENT ROW)chf_g36
03:49:52 230  FROM jpy_ms10 m
03:49:52 231  ,eur_att e
03:49:52 232  ,aud_att a
03:49:52 233  ,gbp_att g
03:49:52 234  ,jpy_att j
03:49:52 235  ,cad_att d
03:49:52 236  ,chf_att f
03:49:52 237  WHERE m.ydate = e.ydate
03:49:52 238  AND   m.ydate = a.ydate
03:49:52 239  AND   m.ydate = g.ydate
03:49:52 240  AND   m.ydate = j.ydate
03:49:52 241  AND   m.ydate = d.ydate
03:49:52 242  AND   m.ydate = f.ydate
03:49:52 243  /

Table created.

Elapsed: 00:01:59.93
03:51:52 SQL> 
03:51:52 SQL> -- rpt
03:51:52 SQL> SELECT COUNT(ydate),MIN(ydate),MAX(ydate)FROM jpy_ms14;

COUNT(YDATE) MIN(YDATE) 	 MAX(YDATE)
------------ ------------------- -------------------
       18207 2010-06-22 10:30:01 2010-12-16 03:40:00

Elapsed: 00:00:00.05
03:51:52 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
