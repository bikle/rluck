
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 23 17:14:10 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

17:14:10 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
17:14:10 SQL> 17:14:10 SQL> --
17:14:10 SQL> -- eur10.sql
17:14:10 SQL> --
17:14:10 SQL> 
17:14:10 SQL> -- Creates views and tables for backtesting a forex SVM strategy
17:14:10 SQL> 
17:14:10 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.04
17:14:10 SQL> 
17:14:10 SQL> -- I created di5min here:
17:14:10 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
17:14:10 SQL> 
17:14:10 SQL> CREATE OR REPLACE VIEW q11 AS
17:14:10   2  SELECT
17:14:10   3  pair
17:14:10   4  ,ydate
17:14:10   5  ,prdate
17:14:10   6  ,rownum rnum -- acts as t in my time-series
17:14:10   7  ,clse
17:14:10   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
17:14:10   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
17:14:10  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
17:14:10  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
17:14:10  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
17:14:10  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
17:14:10  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
17:14:10  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
17:14:10  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
17:14:10  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
17:14:10  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
17:14:10  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
17:14:10  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
17:14:10  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
17:14:10  22  FROM di5min WHERE pair LIKE'%eur%'
17:14:10  23  ORDER BY ydate
17:14:10  24  /

View created.

Elapsed: 00:00:00.10
17:14:10 SQL> 
17:14:10 SQL> -- rpt
17:14:10 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20746

Elapsed: 00:00:00.36
17:14:11 SQL> 
17:14:11 SQL> -- Calc deltas and gains
17:14:11 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.11
17:14:11 SQL> 
17:14:11 SQL> CREATE TABLE q13 COMPRESS AS
17:14:11   2  SELECT
17:14:11   3  pair
17:14:11   4  ,ydate
17:14:11   5  ,prdate
17:14:11   6  ,rnum
17:14:11   7  ,ld8
17:14:11   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
17:14:11   9  -- step by 2
17:14:11  10  ,clse-lg6  d06
17:14:11  11  ,lg6 -lg8  d68
17:14:11  12  ,lg8 -lg10 d810
17:14:11  13  ,lg10-lg12 d1012
17:14:11  14  ,lg12-lg14 d1214
17:14:11  15  ,lg14-lg16 d1416
17:14:11  16  ,lg16-lg18 d1618
17:14:11  17  -- step by 4
17:14:11  18  ,lg6 -lg10 d610
17:14:11  19  ,lg8 -lg12 d812
17:14:11  20  ,lg10-lg14 d1014
17:14:11  21  ,lg12-lg16 d1216
17:14:11  22  --
17:14:11  23  ,ABS(clse-lg6 )dc6
17:14:11  24  ,ABS(clse-lg8 )dc8
17:14:11  25  ,ABS(clse-lg10)dc10
17:14:11  26  ,ABS(clse-lg12)dc12
17:14:11  27  ,ABS(clse-lg14)dc14
17:14:11  28  ,ABS(clse-lg16)dc16
17:14:11  29  ,ABS(clse-lg18)dc18
17:14:11  30  ,ABS(clse-lg20)dc20
17:14:11  31  ,ABS(clse-lg22)dc22
17:14:11  32  ,(ld8-clse) ug8
17:14:11  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
17:14:11  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
17:14:11  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
17:14:11  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
17:14:11  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
17:14:11  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
17:14:11  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
17:14:11  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
17:14:11  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
17:14:11  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
17:14:11  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
17:14:11  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
17:14:11  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
17:14:11  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
17:14:11  47  ,0+TO_CHAR(ydate,'D')d
17:14:11  48  ,0+TO_CHAR(ydate,'W')w
17:14:11  49  -- mpm stands for minutes-past-midnight:
17:14:11  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
17:14:11  51  FROM q11
17:14:11  52  -- I dont want any NULL values from the LAG() functions:
17:14:11  53  WHERE lg32 > 0
17:14:11  54  ORDER BY pair,ydate
17:14:11  55  /

Table created.

Elapsed: 00:00:02.12
17:14:13 SQL> 
17:14:13 SQL> -- rpt
17:14:13 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10056
	-1	   10306

Elapsed: 00:00:00.04
17:14:13 SQL> 
17:14:13 SQL> -- Calc gains and ntiles
17:14:13 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.07
17:14:13 SQL> CREATE TABLE q15 COMPRESS AS
17:14:13   2  SELECT
17:14:13   3  pair
17:14:13   4  ,ydate
17:14:13   5  ,prdate -- Should be unique
17:14:13   6  ,trend -- +1 or -1
17:14:13   7  -- Use NTILE() to derive some attributes
17:14:13   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
17:14:13   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
17:14:13  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
17:14:13  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
17:14:13  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
17:14:13  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
17:14:13  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
17:14:13  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
17:14:13  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
17:14:13  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
17:14:13  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
17:14:13  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
17:14:13  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
17:14:13  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
17:14:13  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
17:14:13  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
17:14:13  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
17:14:13  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
17:14:13  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
17:14:13  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
17:14:13  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
17:14:13  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
17:14:13  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
17:14:13  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
17:14:13  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
17:14:13  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
17:14:13  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
17:14:13  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
17:14:13  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
17:14:13  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
17:14:13  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
17:14:13  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
17:14:13  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
17:14:13  41  ,hh    att32
17:14:13  42  ,d     att33
17:14:13  43  ,w     att34
17:14:13  44  ,mpm   att35
17:14:13  45  ,trend att36
17:14:13  46  ,ug8 g8
17:14:13  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
17:14:13  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
17:14:13  49  FROM q13
17:14:13  50  ORDER BY pair,ydate
17:14:13  51  /

Table created.

Elapsed: 00:00:05.43
17:14:19 SQL> 
17:14:19 SQL> -- rpt
17:14:19 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
17:14:19   2  GROUP BY pair,trend,gatt,gattn
17:14:19   3  ORDER BY pair,trend,gatt,gattn
17:14:19   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
eur_usd 	-1 nup nup .000015048	    2993
eur_usd 	-1 nup up  -.00602802	    3651
eur_usd 	-1 up  nup  .00585128	    3573
eur_usd 	-1			       0
eur_usd 	 1 nup nup -.00009925	    2951
eur_usd 	 1 nup up  -.00625215	    3472
eur_usd 	 1 up  nup .006580195	    3626
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
17:14:19 SQL> 
17:14:19 SQL> -- rpt
17:14:19 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-23 17:10:00

Elapsed: 00:00:00.02
17:14:19 SQL> 
17:14:19 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.16
17:14:19 SQL> CREATE TABLE modsrc COMPRESS AS
17:14:19   2  SELECT
17:14:19   3  pair
17:14:19   4  ,ydate
17:14:19   5  ,prdate
17:14:19   6  ,trend
17:14:19   7  ,g8
17:14:19   8  ,gatt
17:14:19   9  ,gattn
17:14:19  10  FROM q15
17:14:19  11  /

Table created.

Elapsed: 00:00:00.16
17:14:19 SQL> 
17:14:19 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
17:14:19 SQL> 
17:14:19 SQL> -- rpt
17:14:19 SQL> 
17:14:19 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20746

Elapsed: 00:00:00.35
17:14:20 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20362

Elapsed: 00:00:00.01
17:14:20 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20362

Elapsed: 00:00:00.01
17:14:20 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20362

Elapsed: 00:00:00.00
17:14:20 SQL> 
17:14:20 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.06
17:14:20 SQL> CREATE TABLE eur_ms10 COMPRESS AS
17:14:20   2  SELECT
17:14:20   3  ydate
17:14:20   4  ,trend eur_trend
17:14:20   5  ,g8    eur_g8
17:14:20   6  ,gatt  eur_gatt
17:14:20   7  ,gattn eur_gattn
17:14:20   8  FROM modsrc
17:14:20   9  /

Table created.

Elapsed: 00:00:00.08
17:14:20 SQL> 
17:14:20 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
17:14:20 SQL> 
17:14:20 SQL> -- rpt
17:14:20 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-16 07:10:01 2010-12-23 17:00:00	10049	  -.0218     .02165
	-1 2010-09-16 01:15:01 2010-12-23 17:10:00	10217	 -.02085      .0196

Elapsed: 00:00:00.02
17:14:20 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g8),MAX(eur_g8)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G8) MAX(EUR_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-16 07:10:01 2010-12-23 17:00:00	      10056	 -.0218      .02165
	-1 2010-09-16 01:15:01 2010-12-23 17:10:00	      10306	-.02085       .0196

Elapsed: 00:00:00.02
17:14:20 SQL> 
17:14:20 SQL> -- I need a copy of q15 attributes
17:14:20 SQL> 
17:14:20 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.08
17:14:20 SQL> CREATE TABLE eur_att COMPRESS AS
17:14:20   2  SELECT
17:14:20   3  ydate
17:14:20   4  ,att00 eur_att00
17:14:20   5  ,att01 eur_att01
17:14:20   6  ,att02 eur_att02
17:14:20   7  ,att03 eur_att03
17:14:20   8  ,att04 eur_att04
17:14:20   9  ,att05 eur_att05
17:14:20  10  ,att06 eur_att06
17:14:20  11  ,att07 eur_att07
17:14:20  12  ,att08 eur_att08
17:14:20  13  ,att09 eur_att09
17:14:20  14  ,att10 eur_att10
17:14:20  15  ,att11 eur_att11
17:14:20  16  ,att12 eur_att12
17:14:20  17  ,att13 eur_att13
17:14:20  18  ,att14 eur_att14
17:14:20  19  ,att15 eur_att15
17:14:20  20  ,att16 eur_att16
17:14:20  21  ,att17 eur_att17
17:14:20  22  ,att18 eur_att18
17:14:20  23  ,att19 eur_att19
17:14:20  24  ,att20 eur_att20
17:14:20  25  ,att21 eur_att21
17:14:20  26  ,att22 eur_att22
17:14:20  27  ,att23 eur_att23
17:14:20  28  ,att24 eur_att24
17:14:20  29  ,att25 eur_att25
17:14:20  30  ,att26 eur_att26
17:14:20  31  ,att27 eur_att27
17:14:20  32  ,att28 eur_att28
17:14:20  33  ,att29 eur_att29
17:14:20  34  ,att30 eur_att30
17:14:20  35  ,att31 eur_att31
17:14:20  36  ,att32 eur_att32
17:14:20  37  ,att33 eur_att33
17:14:20  38  ,att34 eur_att34
17:14:20  39  ,att35 eur_att35
17:14:20  40  ,att36 eur_att36
17:14:20  41  FROM q15
17:14:20  42  /

Table created.

Elapsed: 00:00:00.17
17:14:20 SQL> 
17:14:20 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
17:14:21 SQL> 
17:14:21 SQL> -- rpt
17:14:21 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     20362

Elapsed: 00:00:00.00
17:14:21 SQL> 
17:14:21 SQL> --
17:14:21 SQL> -- aud10.sql
17:14:21 SQL> --
17:14:21 SQL> 
17:14:21 SQL> -- Creates views and tables for backtesting a forex SVM strategy
17:14:21 SQL> 
17:14:21 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.38
17:14:21 SQL> 
17:14:21 SQL> -- I created di5min here:
17:14:21 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
17:14:21 SQL> 
17:14:21 SQL> CREATE OR REPLACE VIEW q11 AS
17:14:21   2  SELECT
17:14:21   3  pair
17:14:21   4  ,ydate
17:14:21   5  ,prdate
17:14:21   6  ,rownum rnum -- acts as t in my time-series
17:14:21   7  ,clse
17:14:21   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
17:14:21   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
17:14:21  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
17:14:21  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
17:14:21  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
17:14:21  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
17:14:21  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
17:14:21  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
17:14:21  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
17:14:21  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
17:14:21  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
17:14:21  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
17:14:21  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
17:14:21  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
17:14:21  22  FROM di5min WHERE pair LIKE'%aud%'
17:14:21  23  ORDER BY ydate
17:14:21  24  /

View created.

Elapsed: 00:00:00.05
17:14:21 SQL> 
17:14:21 SQL> -- rpt
17:14:21 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20743

Elapsed: 00:00:00.36
17:14:21 SQL> 
17:14:21 SQL> -- Calc deltas and gains
17:14:21 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.24
17:14:22 SQL> 
17:14:22 SQL> CREATE TABLE q13 COMPRESS AS
17:14:22   2  SELECT
17:14:22   3  pair
17:14:22   4  ,ydate
17:14:22   5  ,prdate
17:14:22   6  ,rnum
17:14:22   7  ,ld8
17:14:22   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
17:14:22   9  -- step by 2
17:14:22  10  ,clse-lg6  d06
17:14:22  11  ,lg6 -lg8  d68
17:14:22  12  ,lg8 -lg10 d810
17:14:22  13  ,lg10-lg12 d1012
17:14:22  14  ,lg12-lg14 d1214
17:14:22  15  ,lg14-lg16 d1416
17:14:22  16  ,lg16-lg18 d1618
17:14:22  17  -- step by 4
17:14:22  18  ,lg6 -lg10 d610
17:14:22  19  ,lg8 -lg12 d812
17:14:22  20  ,lg10-lg14 d1014
17:14:22  21  ,lg12-lg16 d1216
17:14:22  22  --
17:14:22  23  ,ABS(clse-lg6 )dc6
17:14:22  24  ,ABS(clse-lg8 )dc8
17:14:22  25  ,ABS(clse-lg10)dc10
17:14:22  26  ,ABS(clse-lg12)dc12
17:14:22  27  ,ABS(clse-lg14)dc14
17:14:22  28  ,ABS(clse-lg16)dc16
17:14:22  29  ,ABS(clse-lg18)dc18
17:14:22  30  ,ABS(clse-lg20)dc20
17:14:22  31  ,ABS(clse-lg22)dc22
17:14:22  32  ,(ld8-clse) ug8
17:14:22  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
17:14:22  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
17:14:22  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
17:14:22  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
17:14:22  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
17:14:22  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
17:14:22  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
17:14:22  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
17:14:22  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
17:14:22  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
17:14:22  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
17:14:22  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
17:14:22  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
17:14:22  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
17:14:22  47  ,0+TO_CHAR(ydate,'D')d
17:14:22  48  ,0+TO_CHAR(ydate,'W')w
17:14:22  49  -- mpm stands for minutes-past-midnight:
17:14:22  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
17:14:22  51  FROM q11
17:14:22  52  -- I dont want any NULL values from the LAG() functions:
17:14:22  53  WHERE lg32 > 0
17:14:22  54  ORDER BY pair,ydate
17:14:22  55  /

Table created.

Elapsed: 00:00:01.76
17:14:23 SQL> 
17:14:23 SQL> -- rpt
17:14:23 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10799
	-1	    9560

Elapsed: 00:00:00.03
17:14:23 SQL> 
17:14:23 SQL> -- Calc gains and ntiles
17:14:23 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.17
17:14:24 SQL> CREATE TABLE q15 COMPRESS AS
17:14:24   2  SELECT
17:14:24   3  pair
17:14:24   4  ,ydate
17:14:24   5  ,prdate -- Should be unique
17:14:24   6  ,trend -- +1 or -1
17:14:24   7  -- Use NTILE() to derive some attributes
17:14:24   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
17:14:24   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
17:14:24  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
17:14:24  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
17:14:24  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
17:14:24  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
17:14:24  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
17:14:24  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
17:14:24  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
17:14:24  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
17:14:24  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
17:14:24  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
17:14:24  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
17:14:24  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
17:14:24  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
17:14:24  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
17:14:24  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
17:14:24  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
17:14:24  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
17:14:24  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
17:14:24  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
17:14:24  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
17:14:24  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
17:14:24  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
17:14:24  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
17:14:24  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
17:14:24  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
17:14:24  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
17:14:24  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
17:14:24  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
17:14:24  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
17:14:24  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
17:14:24  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
17:14:24  41  ,hh    att32
17:14:24  42  ,d     att33
17:14:24  43  ,w     att34
17:14:24  44  ,mpm   att35
17:14:24  45  ,trend att36
17:14:24  46  ,ug8 g8
17:14:24  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
17:14:24  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
17:14:24  49  FROM q13
17:14:24  50  ORDER BY pair,ydate
17:14:24  51  /

Table created.

Elapsed: 00:00:05.46
17:14:29 SQL> 
17:14:29 SQL> -- rpt
17:14:29 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
17:14:29   2  GROUP BY pair,trend,gatt,gattn
17:14:29   3  ORDER BY pair,trend,gatt,gattn
17:14:29   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
aud_usd 	-1 nup nup .000037885	    3576
aud_usd 	-1 nup up  -.00523332	    2544
aud_usd 	-1 up  nup .005169886	    3412
aud_usd 	-1			       0
aud_usd 	 1 nup nup .000028106	    4286
aud_usd 	 1 nup up  -.00500134	    3061
aud_usd 	 1 up  nup .005089591	    3384
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
17:14:29 SQL> 
17:14:29 SQL> -- rpt
17:14:29 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-23 17:10:00

Elapsed: 00:00:00.02
17:14:29 SQL> 
17:14:29 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
17:14:29 SQL> CREATE TABLE modsrc COMPRESS AS
17:14:29   2  SELECT
17:14:29   3  pair
17:14:29   4  ,ydate
17:14:29   5  ,prdate
17:14:29   6  ,trend
17:14:29   7  ,g8
17:14:29   8  ,gatt
17:14:29   9  ,gattn
17:14:29  10  FROM q15
17:14:29  11  /

Table created.

Elapsed: 00:00:00.08
17:14:29 SQL> 
17:14:29 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
17:14:30 SQL> 
17:14:30 SQL> -- rpt
17:14:30 SQL> 
17:14:30 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20743

Elapsed: 00:00:00.35
17:14:30 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20359

Elapsed: 00:00:00.01
17:14:30 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20359

Elapsed: 00:00:00.00
17:14:30 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20359

Elapsed: 00:00:00.00
17:14:30 SQL> 
17:14:30 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.09
17:14:30 SQL> CREATE TABLE aud_ms10 COMPRESS AS
17:14:30   2  SELECT
17:14:30   3  ydate
17:14:30   4  ,trend aud_trend
17:14:30   5  ,g8    aud_g8
17:14:30   6  ,gatt  aud_gatt
17:14:30   7  ,gattn aud_gattn
17:14:30   8  FROM modsrc
17:14:30   9  /

Table created.

Elapsed: 00:00:00.07
17:14:30 SQL> 
17:14:30 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
17:14:30 SQL> 
17:14:30 SQL> -- rpt
17:14:30 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-16 09:00:01 2010-12-23 17:10:00	10731	  -.0203      .0136
	-1 2010-09-16 01:15:01 2010-12-23 15:40:00	 9532	  -.0196      .0148

Elapsed: 00:00:00.02
17:14:30 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g8),MAX(aud_g8)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G8) MAX(AUD_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-16 09:00:01 2010-12-23 17:10:00	      10799	 -.0203       .0136
	-1 2010-09-16 01:15:01 2010-12-23 15:40:00	       9560	 -.0196       .0148

Elapsed: 00:00:00.01
17:14:30 SQL> 
17:14:30 SQL> -- I need a copy of q15 attributes
17:14:30 SQL> 
17:14:30 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.04
17:14:30 SQL> CREATE TABLE aud_att COMPRESS AS
17:14:30   2  SELECT
17:14:30   3  ydate
17:14:30   4  ,att00 aud_att00
17:14:30   5  ,att01 aud_att01
17:14:30   6  ,att02 aud_att02
17:14:30   7  ,att03 aud_att03
17:14:30   8  ,att04 aud_att04
17:14:30   9  ,att05 aud_att05
17:14:30  10  ,att06 aud_att06
17:14:30  11  ,att07 aud_att07
17:14:30  12  ,att08 aud_att08
17:14:30  13  ,att09 aud_att09
17:14:30  14  ,att10 aud_att10
17:14:30  15  ,att11 aud_att11
17:14:30  16  ,att12 aud_att12
17:14:30  17  ,att13 aud_att13
17:14:30  18  ,att14 aud_att14
17:14:30  19  ,att15 aud_att15
17:14:30  20  ,att16 aud_att16
17:14:30  21  ,att17 aud_att17
17:14:30  22  ,att18 aud_att18
17:14:30  23  ,att19 aud_att19
17:14:30  24  ,att20 aud_att20
17:14:30  25  ,att21 aud_att21
17:14:30  26  ,att22 aud_att22
17:14:30  27  ,att23 aud_att23
17:14:30  28  ,att24 aud_att24
17:14:30  29  ,att25 aud_att25
17:14:30  30  ,att26 aud_att26
17:14:30  31  ,att27 aud_att27
17:14:30  32  ,att28 aud_att28
17:14:30  33  ,att29 aud_att29
17:14:30  34  ,att30 aud_att30
17:14:30  35  ,att31 aud_att31
17:14:30  36  ,att32 aud_att32
17:14:30  37  ,att33 aud_att33
17:14:30  38  ,att34 aud_att34
17:14:30  39  ,att35 aud_att35
17:14:30  40  ,att36 aud_att36
17:14:30  41  FROM q15
17:14:30  42  /

Table created.

Elapsed: 00:00:00.17
17:14:30 SQL> 
17:14:30 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
17:14:31 SQL> 
17:14:31 SQL> -- rpt
17:14:31 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     20359

Elapsed: 00:00:00.00
17:14:31 SQL> 
17:14:31 SQL> --
17:14:31 SQL> -- gbp10.sql
17:14:31 SQL> --
17:14:31 SQL> 
17:14:31 SQL> -- Creates views and tables for backtesting a forex SVM strategy
17:14:31 SQL> 
17:14:31 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
17:14:31 SQL> 
17:14:31 SQL> -- I created di5min here:
17:14:31 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
17:14:31 SQL> 
17:14:31 SQL> CREATE OR REPLACE VIEW q11 AS
17:14:31   2  SELECT
17:14:31   3  pair
17:14:31   4  ,ydate
17:14:31   5  ,prdate
17:14:31   6  ,rownum rnum -- acts as t in my time-series
17:14:31   7  ,clse
17:14:31   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
17:14:31   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
17:14:31  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
17:14:31  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
17:14:31  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
17:14:31  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
17:14:31  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
17:14:31  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
17:14:31  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
17:14:31  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
17:14:31  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
17:14:31  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
17:14:31  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
17:14:31  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
17:14:31  22  FROM di5min WHERE pair LIKE'%gbp%'
17:14:31  23  ORDER BY ydate
17:14:31  24  /

View created.

Elapsed: 00:00:00.05
17:14:31 SQL> 
17:14:31 SQL> -- rpt
17:14:31 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20745

Elapsed: 00:00:00.36
17:14:32 SQL> 
17:14:32 SQL> -- Calc deltas and gains
17:14:32 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.25
17:14:32 SQL> 
17:14:32 SQL> CREATE TABLE q13 COMPRESS AS
17:14:32   2  SELECT
17:14:32   3  pair
17:14:32   4  ,ydate
17:14:32   5  ,prdate
17:14:32   6  ,rnum
17:14:32   7  ,ld8
17:14:32   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
17:14:32   9  -- step by 2
17:14:32  10  ,clse-lg6  d06
17:14:32  11  ,lg6 -lg8  d68
17:14:32  12  ,lg8 -lg10 d810
17:14:32  13  ,lg10-lg12 d1012
17:14:32  14  ,lg12-lg14 d1214
17:14:32  15  ,lg14-lg16 d1416
17:14:32  16  ,lg16-lg18 d1618
17:14:32  17  -- step by 4
17:14:32  18  ,lg6 -lg10 d610
17:14:32  19  ,lg8 -lg12 d812
17:14:32  20  ,lg10-lg14 d1014
17:14:32  21  ,lg12-lg16 d1216
17:14:32  22  --
17:14:32  23  ,ABS(clse-lg6 )dc6
17:14:32  24  ,ABS(clse-lg8 )dc8
17:14:32  25  ,ABS(clse-lg10)dc10
17:14:32  26  ,ABS(clse-lg12)dc12
17:14:32  27  ,ABS(clse-lg14)dc14
17:14:32  28  ,ABS(clse-lg16)dc16
17:14:32  29  ,ABS(clse-lg18)dc18
17:14:32  30  ,ABS(clse-lg20)dc20
17:14:32  31  ,ABS(clse-lg22)dc22
17:14:32  32  ,(ld8-clse) ug8
17:14:32  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
17:14:32  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
17:14:32  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
17:14:32  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
17:14:32  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
17:14:32  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
17:14:32  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
17:14:32  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
17:14:32  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
17:14:32  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
17:14:32  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
17:14:32  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
17:14:32  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
17:14:32  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
17:14:32  47  ,0+TO_CHAR(ydate,'D')d
17:14:32  48  ,0+TO_CHAR(ydate,'W')w
17:14:32  49  -- mpm stands for minutes-past-midnight:
17:14:32  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
17:14:32  51  FROM q11
17:14:32  52  -- I dont want any NULL values from the LAG() functions:
17:14:32  53  WHERE lg32 > 0
17:14:32  54  ORDER BY pair,ydate
17:14:32  55  /

Table created.

Elapsed: 00:00:01.74
17:14:34 SQL> 
17:14:34 SQL> -- rpt
17:14:34 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9870
	-1	   10491

Elapsed: 00:00:00.03
17:14:34 SQL> 
17:14:34 SQL> -- Calc gains and ntiles
17:14:34 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.14
17:14:34 SQL> CREATE TABLE q15 COMPRESS AS
17:14:34   2  SELECT
17:14:34   3  pair
17:14:34   4  ,ydate
17:14:34   5  ,prdate -- Should be unique
17:14:34   6  ,trend -- +1 or -1
17:14:34   7  -- Use NTILE() to derive some attributes
17:14:34   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
17:14:34   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
17:14:34  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
17:14:34  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
17:14:34  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
17:14:34  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
17:14:34  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
17:14:34  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
17:14:34  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
17:14:34  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
17:14:34  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
17:14:34  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
17:14:34  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
17:14:34  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
17:14:34  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
17:14:34  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
17:14:34  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
17:14:34  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
17:14:34  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
17:14:34  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
17:14:34  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
17:14:34  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
17:14:34  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
17:14:34  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
17:14:34  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
17:14:34  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
17:14:34  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
17:14:34  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
17:14:34  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
17:14:34  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
17:14:34  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
17:14:34  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
17:14:34  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
17:14:34  41  ,hh    att32
17:14:34  42  ,d     att33
17:14:34  43  ,w     att34
17:14:34  44  ,mpm   att35
17:14:34  45  ,trend att36
17:14:34  46  ,ug8 g8
17:14:34  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
17:14:34  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
17:14:34  49  FROM q13
17:14:34  50  ORDER BY pair,ydate
17:14:34  51  /

Table created.

Elapsed: 00:00:05.51
17:14:39 SQL> 
17:14:39 SQL> -- rpt
17:14:39 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
17:14:39   2  GROUP BY pair,trend,gatt,gattn
17:14:39   3  ORDER BY pair,trend,gatt,gattn
17:14:39   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
gbp_usd 	-1 nup nup .000087855	    3875
gbp_usd 	-1 nup up  -.00589361	    3278
gbp_usd 	-1 up  nup .005471348	    3262
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup -.00008366	    3630
gbp_usd 	 1 nup up  -.00554248	    3281
gbp_usd 	 1 up  nup .006010675	    2939
gbp_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
17:14:39 SQL> 
17:14:39 SQL> -- rpt
17:14:39 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-23 17:10:00

Elapsed: 00:00:00.02
17:14:39 SQL> 
17:14:39 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.16
17:14:40 SQL> CREATE TABLE modsrc COMPRESS AS
17:14:40   2  SELECT
17:14:40   3  pair
17:14:40   4  ,ydate
17:14:40   5  ,prdate
17:14:40   6  ,trend
17:14:40   7  ,g8
17:14:40   8  ,gatt
17:14:40   9  ,gattn
17:14:40  10  FROM q15
17:14:40  11  /

Table created.

Elapsed: 00:00:00.13
17:14:40 SQL> 
17:14:40 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
17:14:40 SQL> 
17:14:40 SQL> -- rpt
17:14:40 SQL> 
17:14:40 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20745

Elapsed: 00:00:00.36
17:14:40 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20361

Elapsed: 00:00:00.00
17:14:40 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20361

Elapsed: 00:00:00.01
17:14:40 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20361

Elapsed: 00:00:00.00
17:14:40 SQL> 
17:14:40 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.06
17:14:40 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
17:14:40   2  SELECT
17:14:40   3  ydate
17:14:40   4  ,trend gbp_trend
17:14:40   5  ,g8    gbp_g8
17:14:40   6  ,gatt  gbp_gatt
17:14:40   7  ,gattn gbp_gattn
17:14:40   8  FROM modsrc
17:14:40   9  /

Table created.

Elapsed: 00:00:00.07
17:14:40 SQL> 
17:14:40 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
17:14:41 SQL> 
17:14:41 SQL> -- rpt
17:14:41 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-16 01:25:01 2010-12-23 17:10:00	 9850	  -.0231       .019
	-1 2010-09-16 01:15:01 2010-12-23 16:00:00	10415	    -.02      .0204

Elapsed: 00:00:00.02
17:14:41 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g8),MAX(gbp_g8)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G8) MAX(GBP_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-16 01:25:01 2010-12-23 17:10:00	       9870	 -.0231        .019
	-1 2010-09-16 01:15:01 2010-12-23 16:00:00	      10491	   -.02       .0204

Elapsed: 00:00:00.01
17:14:41 SQL> 
17:14:41 SQL> -- I need a copy of q15 attributes
17:14:41 SQL> 
17:14:41 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.07
17:14:41 SQL> CREATE TABLE gbp_att COMPRESS AS
17:14:41   2  SELECT
17:14:41   3  ydate
17:14:41   4  ,att00 gbp_att00
17:14:41   5  ,att01 gbp_att01
17:14:41   6  ,att02 gbp_att02
17:14:41   7  ,att03 gbp_att03
17:14:41   8  ,att04 gbp_att04
17:14:41   9  ,att05 gbp_att05
17:14:41  10  ,att06 gbp_att06
17:14:41  11  ,att07 gbp_att07
17:14:41  12  ,att08 gbp_att08
17:14:41  13  ,att09 gbp_att09
17:14:41  14  ,att10 gbp_att10
17:14:41  15  ,att11 gbp_att11
17:14:41  16  ,att12 gbp_att12
17:14:41  17  ,att13 gbp_att13
17:14:41  18  ,att14 gbp_att14
17:14:41  19  ,att15 gbp_att15
17:14:41  20  ,att16 gbp_att16
17:14:41  21  ,att17 gbp_att17
17:14:41  22  ,att18 gbp_att18
17:14:41  23  ,att19 gbp_att19
17:14:41  24  ,att20 gbp_att20
17:14:41  25  ,att21 gbp_att21
17:14:41  26  ,att22 gbp_att22
17:14:41  27  ,att23 gbp_att23
17:14:41  28  ,att24 gbp_att24
17:14:41  29  ,att25 gbp_att25
17:14:41  30  ,att26 gbp_att26
17:14:41  31  ,att27 gbp_att27
17:14:41  32  ,att28 gbp_att28
17:14:41  33  ,att29 gbp_att29
17:14:41  34  ,att30 gbp_att30
17:14:41  35  ,att31 gbp_att31
17:14:41  36  ,att32 gbp_att32
17:14:41  37  ,att33 gbp_att33
17:14:41  38  ,att34 gbp_att34
17:14:41  39  ,att35 gbp_att35
17:14:41  40  ,att36 gbp_att36
17:14:41  41  FROM q15
17:14:41  42  /

Table created.

Elapsed: 00:00:00.18
17:14:41 SQL> 
17:14:41 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
17:14:41 SQL> 
17:14:41 SQL> -- rpt
17:14:41 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     20361

Elapsed: 00:00:00.00
17:14:41 SQL> 
17:14:41 SQL> --
17:14:41 SQL> -- jpy10.sql
17:14:41 SQL> --
17:14:41 SQL> 
17:14:41 SQL> -- Creates views and tables for backtesting a forex SVM strategy
17:14:41 SQL> 
17:14:41 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.35
17:14:42 SQL> 
17:14:42 SQL> -- I created di5min here:
17:14:42 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
17:14:42 SQL> 
17:14:42 SQL> CREATE OR REPLACE VIEW q11 AS
17:14:42   2  SELECT
17:14:42   3  pair
17:14:42   4  ,ydate
17:14:42   5  ,prdate
17:14:42   6  ,rownum rnum -- acts as t in my time-series
17:14:42   7  ,clse
17:14:42   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
17:14:42   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
17:14:42  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
17:14:42  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
17:14:42  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
17:14:42  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
17:14:42  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
17:14:42  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
17:14:42  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
17:14:42  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
17:14:42  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
17:14:42  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
17:14:42  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
17:14:42  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
17:14:42  22  FROM di5min WHERE pair LIKE'%jpy%'
17:14:42  23  ORDER BY ydate
17:14:42  24  /

View created.

Elapsed: 00:00:00.05
17:14:42 SQL> 
17:14:42 SQL> -- rpt
17:14:42 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20744

Elapsed: 00:00:00.35
17:14:42 SQL> 
17:14:42 SQL> -- Calc deltas and gains
17:14:42 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.20
17:14:42 SQL> 
17:14:42 SQL> CREATE TABLE q13 COMPRESS AS
17:14:42   2  SELECT
17:14:42   3  pair
17:14:42   4  ,ydate
17:14:42   5  ,prdate
17:14:42   6  ,rnum
17:14:42   7  ,ld8
17:14:42   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
17:14:42   9  -- step by 2
17:14:42  10  ,clse-lg6  d06
17:14:42  11  ,lg6 -lg8  d68
17:14:42  12  ,lg8 -lg10 d810
17:14:42  13  ,lg10-lg12 d1012
17:14:42  14  ,lg12-lg14 d1214
17:14:42  15  ,lg14-lg16 d1416
17:14:42  16  ,lg16-lg18 d1618
17:14:42  17  -- step by 4
17:14:42  18  ,lg6 -lg10 d610
17:14:42  19  ,lg8 -lg12 d812
17:14:42  20  ,lg10-lg14 d1014
17:14:42  21  ,lg12-lg16 d1216
17:14:42  22  --
17:14:42  23  ,ABS(clse-lg6 )dc6
17:14:42  24  ,ABS(clse-lg8 )dc8
17:14:42  25  ,ABS(clse-lg10)dc10
17:14:42  26  ,ABS(clse-lg12)dc12
17:14:42  27  ,ABS(clse-lg14)dc14
17:14:42  28  ,ABS(clse-lg16)dc16
17:14:42  29  ,ABS(clse-lg18)dc18
17:14:42  30  ,ABS(clse-lg20)dc20
17:14:42  31  ,ABS(clse-lg22)dc22
17:14:42  32  ,(ld8-clse) ug8
17:14:42  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
17:14:42  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
17:14:42  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
17:14:42  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
17:14:42  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
17:14:42  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
17:14:42  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
17:14:42  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
17:14:42  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
17:14:42  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
17:14:42  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
17:14:42  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
17:14:42  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
17:14:42  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
17:14:42  47  ,0+TO_CHAR(ydate,'D')d
17:14:42  48  ,0+TO_CHAR(ydate,'W')w
17:14:42  49  -- mpm stands for minutes-past-midnight:
17:14:42  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
17:14:42  51  FROM q11
17:14:42  52  -- I dont want any NULL values from the LAG() functions:
17:14:42  53  WHERE lg32 > 0
17:14:42  54  ORDER BY pair,ydate
17:14:42  55  /

Table created.

Elapsed: 00:00:01.69
17:14:44 SQL> 
17:14:44 SQL> -- rpt
17:14:44 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9406
	-1	   10954

Elapsed: 00:00:00.03
17:14:44 SQL> 
17:14:44 SQL> -- Calc gains and ntiles
17:14:44 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.17
17:14:44 SQL> CREATE TABLE q15 COMPRESS AS
17:14:44   2  SELECT
17:14:44   3  pair
17:14:44   4  ,ydate
17:14:44   5  ,prdate -- Should be unique
17:14:44   6  ,trend -- +1 or -1
17:14:44   7  -- Use NTILE() to derive some attributes
17:14:44   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
17:14:44   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
17:14:44  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
17:14:44  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
17:14:44  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
17:14:44  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
17:14:44  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
17:14:44  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
17:14:44  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
17:14:44  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
17:14:44  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
17:14:44  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
17:14:44  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
17:14:44  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
17:14:44  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
17:14:44  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
17:14:44  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
17:14:44  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
17:14:44  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
17:14:44  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
17:14:44  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
17:14:44  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
17:14:44  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
17:14:44  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
17:14:44  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
17:14:44  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
17:14:44  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
17:14:44  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
17:14:44  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
17:14:44  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
17:14:44  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
17:14:44  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
17:14:44  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
17:14:44  41  ,hh    att32
17:14:44  42  ,d     att33
17:14:44  43  ,w     att34
17:14:44  44  ,mpm   att35
17:14:44  45  ,trend att36
17:14:44  46  ,ug8 g8
17:14:44  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
17:14:44  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
17:14:44  49  FROM q13
17:14:44  50  ORDER BY pair,ydate
17:14:44  51  /

Table created.

Elapsed: 00:00:05.46
17:14:50 SQL> 
17:14:50 SQL> -- rpt
17:14:50 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
17:14:50   2  GROUP BY pair,trend,gatt,gattn
17:14:50   3  ORDER BY pair,trend,gatt,gattn
17:14:50   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
usd_jpy 	-1 nup nup  .00001506	     166
usd_jpy 	-1 nup up   -.1856186	    5468
usd_jpy 	-1 up  nup .182907303	    5251
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     118
usd_jpy 	 1 nup up  -.18852008	    5116
usd_jpy 	 1 up  nup .191536188	    4145
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
17:14:50 SQL> 
17:14:50 SQL> -- rpt
17:14:50 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-23 17:10:00

Elapsed: 00:00:00.02
17:14:50 SQL> 
17:14:50 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.14
17:14:50 SQL> CREATE TABLE modsrc COMPRESS AS
17:14:50   2  SELECT
17:14:50   3  pair
17:14:50   4  ,ydate
17:14:50   5  ,prdate
17:14:50   6  ,trend
17:14:50   7  ,g8
17:14:50   8  ,gatt
17:14:50   9  ,gattn
17:14:50  10  FROM q15
17:14:50  11  /

Table created.

Elapsed: 00:00:00.09
17:14:50 SQL> 
17:14:50 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
17:14:50 SQL> 
17:14:50 SQL> -- rpt
17:14:50 SQL> 
17:14:50 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20744

Elapsed: 00:00:00.34
17:14:50 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20360

Elapsed: 00:00:00.01
17:14:50 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20360

Elapsed: 00:00:00.00
17:14:50 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20360

Elapsed: 00:00:00.01
17:14:50 SQL> 
17:14:50 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.07
17:14:50 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
17:14:50   2  SELECT
17:14:50   3  ydate
17:14:50   4  ,trend jpy_trend
17:14:50   5  ,g8    jpy_g8
17:14:50   6  ,gatt  jpy_gatt
17:14:50   7  ,gattn jpy_gattn
17:14:50   8  FROM modsrc
17:14:50   9  /

Table created.

Elapsed: 00:00:00.07
17:14:51 SQL> 
17:14:51 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
17:14:51 SQL> 
17:14:51 SQL> -- rpt
17:14:51 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-16 08:15:01 2010-12-23 16:10:00	 9379	  -1.185	  1
	-1 2010-09-16 01:15:01 2010-12-23 17:10:00	10885	 -1.0575       1.32

Elapsed: 00:00:00.02
17:14:51 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g8),MAX(jpy_g8)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G8) MAX(JPY_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-16 08:15:01 2010-12-23 16:10:00	       9406	 -1.185 	  1
	-1 2010-09-16 01:15:01 2010-12-23 17:10:00	      10954	-1.0575        1.32

Elapsed: 00:00:00.01
17:14:51 SQL> 
17:14:51 SQL> -- I need a copy of q15 attributes
17:14:51 SQL> 
17:14:51 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.05
17:14:51 SQL> CREATE TABLE jpy_att COMPRESS AS
17:14:51   2  SELECT
17:14:51   3  ydate
17:14:51   4  ,att00 jpy_att00
17:14:51   5  ,att01 jpy_att01
17:14:51   6  ,att02 jpy_att02
17:14:51   7  ,att03 jpy_att03
17:14:51   8  ,att04 jpy_att04
17:14:51   9  ,att05 jpy_att05
17:14:51  10  ,att06 jpy_att06
17:14:51  11  ,att07 jpy_att07
17:14:51  12  ,att08 jpy_att08
17:14:51  13  ,att09 jpy_att09
17:14:51  14  ,att10 jpy_att10
17:14:51  15  ,att11 jpy_att11
17:14:51  16  ,att12 jpy_att12
17:14:51  17  ,att13 jpy_att13
17:14:51  18  ,att14 jpy_att14
17:14:51  19  ,att15 jpy_att15
17:14:51  20  ,att16 jpy_att16
17:14:51  21  ,att17 jpy_att17
17:14:51  22  ,att18 jpy_att18
17:14:51  23  ,att19 jpy_att19
17:14:51  24  ,att20 jpy_att20
17:14:51  25  ,att21 jpy_att21
17:14:51  26  ,att22 jpy_att22
17:14:51  27  ,att23 jpy_att23
17:14:51  28  ,att24 jpy_att24
17:14:51  29  ,att25 jpy_att25
17:14:51  30  ,att26 jpy_att26
17:14:51  31  ,att27 jpy_att27
17:14:51  32  ,att28 jpy_att28
17:14:51  33  ,att29 jpy_att29
17:14:51  34  ,att30 jpy_att30
17:14:51  35  ,att31 jpy_att31
17:14:51  36  ,att32 jpy_att32
17:14:51  37  ,att33 jpy_att33
17:14:51  38  ,att34 jpy_att34
17:14:51  39  ,att35 jpy_att35
17:14:51  40  ,att36 jpy_att36
17:14:51  41  FROM q15
17:14:51  42  /

Table created.

Elapsed: 00:00:00.22
17:14:51 SQL> 
17:14:51 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
17:14:51 SQL> 
17:14:51 SQL> -- rpt
17:14:51 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     20360

Elapsed: 00:00:00.00
17:14:51 SQL> 
17:14:51 SQL> --
17:14:51 SQL> -- cad10.sql
17:14:51 SQL> --
17:14:51 SQL> 
17:14:51 SQL> -- Creates views and tables for backtesting a forex SVM strategy
17:14:51 SQL> 
17:14:51 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.40
17:14:52 SQL> 
17:14:52 SQL> -- I created di5min here:
17:14:52 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
17:14:52 SQL> 
17:14:52 SQL> CREATE OR REPLACE VIEW q11 AS
17:14:52   2  SELECT
17:14:52   3  pair
17:14:52   4  ,ydate
17:14:52   5  ,prdate
17:14:52   6  ,rownum rnum -- acts as t in my time-series
17:14:52   7  ,clse
17:14:52   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
17:14:52   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
17:14:52  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
17:14:52  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
17:14:52  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
17:14:52  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
17:14:52  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
17:14:52  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
17:14:52  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
17:14:52  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
17:14:52  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
17:14:52  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
17:14:52  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
17:14:52  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
17:14:52  22  FROM di5min WHERE pair LIKE'%cad%'
17:14:52  23  ORDER BY ydate
17:14:52  24  /

View created.

Elapsed: 00:00:00.05
17:14:52 SQL> 
17:14:52 SQL> -- rpt
17:14:52 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20742

Elapsed: 00:00:00.36
17:14:52 SQL> 
17:14:52 SQL> -- Calc deltas and gains
17:14:52 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.80
17:14:53 SQL> 
17:14:53 SQL> CREATE TABLE q13 COMPRESS AS
17:14:53   2  SELECT
17:14:53   3  pair
17:14:53   4  ,ydate
17:14:53   5  ,prdate
17:14:53   6  ,rnum
17:14:53   7  ,ld8
17:14:53   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
17:14:53   9  -- step by 2
17:14:53  10  ,clse-lg6  d06
17:14:53  11  ,lg6 -lg8  d68
17:14:53  12  ,lg8 -lg10 d810
17:14:53  13  ,lg10-lg12 d1012
17:14:53  14  ,lg12-lg14 d1214
17:14:53  15  ,lg14-lg16 d1416
17:14:53  16  ,lg16-lg18 d1618
17:14:53  17  -- step by 4
17:14:53  18  ,lg6 -lg10 d610
17:14:53  19  ,lg8 -lg12 d812
17:14:53  20  ,lg10-lg14 d1014
17:14:53  21  ,lg12-lg16 d1216
17:14:53  22  --
17:14:53  23  ,ABS(clse-lg6 )dc6
17:14:53  24  ,ABS(clse-lg8 )dc8
17:14:53  25  ,ABS(clse-lg10)dc10
17:14:53  26  ,ABS(clse-lg12)dc12
17:14:53  27  ,ABS(clse-lg14)dc14
17:14:53  28  ,ABS(clse-lg16)dc16
17:14:53  29  ,ABS(clse-lg18)dc18
17:14:53  30  ,ABS(clse-lg20)dc20
17:14:53  31  ,ABS(clse-lg22)dc22
17:14:53  32  ,(ld8-clse) ug8
17:14:53  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
17:14:53  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
17:14:53  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
17:14:53  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
17:14:53  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
17:14:53  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
17:14:53  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
17:14:53  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
17:14:53  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
17:14:53  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
17:14:53  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
17:14:53  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
17:14:53  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
17:14:53  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
17:14:53  47  ,0+TO_CHAR(ydate,'D')d
17:14:53  48  ,0+TO_CHAR(ydate,'W')w
17:14:53  49  -- mpm stands for minutes-past-midnight:
17:14:53  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
17:14:53  51  FROM q11
17:14:53  52  -- I dont want any NULL values from the LAG() functions:
17:14:53  53  WHERE lg32 > 0
17:14:53  54  ORDER BY pair,ydate
17:14:53  55  /

Table created.

Elapsed: 00:00:01.75
17:14:55 SQL> 
17:14:55 SQL> -- rpt
17:14:55 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9449
	-1	   10909

Elapsed: 00:00:00.03
17:14:55 SQL> 
17:14:55 SQL> -- Calc gains and ntiles
17:14:55 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.26
17:14:55 SQL> CREATE TABLE q15 COMPRESS AS
17:14:55   2  SELECT
17:14:55   3  pair
17:14:55   4  ,ydate
17:14:55   5  ,prdate -- Should be unique
17:14:55   6  ,trend -- +1 or -1
17:14:55   7  -- Use NTILE() to derive some attributes
17:14:55   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
17:14:55   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
17:14:55  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
17:14:55  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
17:14:55  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
17:14:55  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
17:14:55  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
17:14:55  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
17:14:55  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
17:14:55  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
17:14:55  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
17:14:55  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
17:14:55  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
17:14:55  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
17:14:55  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
17:14:55  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
17:14:55  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
17:14:55  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
17:14:55  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
17:14:55  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
17:14:55  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
17:14:55  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
17:14:55  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
17:14:55  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
17:14:55  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
17:14:55  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
17:14:55  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
17:14:55  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
17:14:55  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
17:14:55  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
17:14:55  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
17:14:55  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
17:14:55  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
17:14:55  41  ,hh    att32
17:14:55  42  ,d     att33
17:14:55  43  ,w     att34
17:14:55  44  ,mpm   att35
17:14:55  45  ,trend att36
17:14:55  46  ,ug8 g8
17:14:55  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
17:14:55  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
17:14:55  49  FROM q13
17:14:55  50  ORDER BY pair,ydate
17:14:55  51  /

Table created.

Elapsed: 00:00:05.43
17:15:01 SQL> 
17:15:01 SQL> -- rpt
17:15:01 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
17:15:01   2  GROUP BY pair,trend,gatt,gattn
17:15:01   3  ORDER BY pair,trend,gatt,gattn
17:15:01   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
usd_cad 	-1 nup nup  -.0000193	    5672
usd_cad 	-1 nup up  -.00401237	    2621
usd_cad 	-1 up  nup .004659205	    2595
usd_cad 	-1			       0
usd_cad 	 1 nup nup -.00012255	    4709
usd_cad 	 1 nup up  -.00421282	    2687
usd_cad 	 1 up  nup .004616835	    1978
usd_cad 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
17:15:01 SQL> 
17:15:01 SQL> -- rpt
17:15:01 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-23 17:10:00

Elapsed: 00:00:00.02
17:15:01 SQL> 
17:15:01 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.36
17:15:01 SQL> CREATE TABLE modsrc COMPRESS AS
17:15:01   2  SELECT
17:15:01   3  pair
17:15:01   4  ,ydate
17:15:01   5  ,prdate
17:15:01   6  ,trend
17:15:01   7  ,g8
17:15:01   8  ,gatt
17:15:01   9  ,gattn
17:15:01  10  FROM q15
17:15:01  11  /

Table created.

Elapsed: 00:00:00.09
17:15:01 SQL> 
17:15:01 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
17:15:01 SQL> 
17:15:01 SQL> -- rpt
17:15:01 SQL> 
17:15:01 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20742

Elapsed: 00:00:00.35
17:15:02 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20358

Elapsed: 00:00:00.01
17:15:02 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20358

Elapsed: 00:00:00.00
17:15:02 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20358

Elapsed: 00:00:00.01
17:15:02 SQL> 
17:15:02 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.11
17:15:02 SQL> CREATE TABLE cad_ms10 COMPRESS AS
17:15:02   2  SELECT
17:15:02   3  ydate
17:15:02   4  ,trend cad_trend
17:15:02   5  ,g8    cad_g8
17:15:02   6  ,gatt  cad_gatt
17:15:02   7  ,gattn cad_gattn
17:15:02   8  FROM modsrc
17:15:02   9  /

Table created.

Elapsed: 00:00:00.08
17:15:02 SQL> 
17:15:02 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
17:15:02 SQL> 
17:15:02 SQL> -- rpt
17:15:02 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-16 01:45:01 2010-12-23 15:30:00	 9374	  -.0122      .0159
	-1 2010-09-16 01:15:01 2010-12-23 17:10:00	10888	 -.01105      .0176

Elapsed: 00:00:00.02
17:15:02 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g8),MAX(cad_g8)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G8) MAX(CAD_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-16 01:45:01 2010-12-23 15:30:00	       9449	 -.0122       .0159
	-1 2010-09-16 01:15:01 2010-12-23 17:10:00	      10909	-.01105       .0176

Elapsed: 00:00:00.01
17:15:02 SQL> 
17:15:02 SQL> -- I need a copy of q15 attributes
17:15:02 SQL> 
17:15:02 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.08
17:15:02 SQL> CREATE TABLE cad_att COMPRESS AS
17:15:02   2  SELECT
17:15:02   3  ydate
17:15:02   4  ,att00 cad_att00
17:15:02   5  ,att01 cad_att01
17:15:02   6  ,att02 cad_att02
17:15:02   7  ,att03 cad_att03
17:15:02   8  ,att04 cad_att04
17:15:02   9  ,att05 cad_att05
17:15:02  10  ,att06 cad_att06
17:15:02  11  ,att07 cad_att07
17:15:02  12  ,att08 cad_att08
17:15:02  13  ,att09 cad_att09
17:15:02  14  ,att10 cad_att10
17:15:02  15  ,att11 cad_att11
17:15:02  16  ,att12 cad_att12
17:15:02  17  ,att13 cad_att13
17:15:02  18  ,att14 cad_att14
17:15:02  19  ,att15 cad_att15
17:15:02  20  ,att16 cad_att16
17:15:02  21  ,att17 cad_att17
17:15:02  22  ,att18 cad_att18
17:15:02  23  ,att19 cad_att19
17:15:02  24  ,att20 cad_att20
17:15:02  25  ,att21 cad_att21
17:15:02  26  ,att22 cad_att22
17:15:02  27  ,att23 cad_att23
17:15:02  28  ,att24 cad_att24
17:15:02  29  ,att25 cad_att25
17:15:02  30  ,att26 cad_att26
17:15:02  31  ,att27 cad_att27
17:15:02  32  ,att28 cad_att28
17:15:02  33  ,att29 cad_att29
17:15:02  34  ,att30 cad_att30
17:15:02  35  ,att31 cad_att31
17:15:02  36  ,att32 cad_att32
17:15:02  37  ,att33 cad_att33
17:15:02  38  ,att34 cad_att34
17:15:02  39  ,att35 cad_att35
17:15:02  40  ,att36 cad_att36
17:15:02  41  FROM q15
17:15:02  42  /

Table created.

Elapsed: 00:00:00.20
17:15:02 SQL> 
17:15:02 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.46
17:15:03 SQL> 
17:15:03 SQL> -- rpt
17:15:03 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     20358

Elapsed: 00:00:00.00
17:15:03 SQL> 
17:15:03 SQL> --
17:15:03 SQL> -- chf10.sql
17:15:03 SQL> --
17:15:03 SQL> 
17:15:03 SQL> -- Creates views and tables for backtesting a forex SVM strategy
17:15:03 SQL> 
17:15:03 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.45
17:15:03 SQL> 
17:15:03 SQL> -- I created di5min here:
17:15:03 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
17:15:03 SQL> 
17:15:03 SQL> CREATE OR REPLACE VIEW q11 AS
17:15:03   2  SELECT
17:15:03   3  pair
17:15:03   4  ,ydate
17:15:03   5  ,prdate
17:15:03   6  ,rownum rnum -- acts as t in my time-series
17:15:03   7  ,clse
17:15:03   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
17:15:03   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
17:15:03  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
17:15:03  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
17:15:03  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
17:15:03  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
17:15:03  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
17:15:03  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
17:15:03  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
17:15:03  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
17:15:03  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
17:15:03  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
17:15:03  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
17:15:03  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
17:15:03  22  FROM di5min WHERE pair LIKE'%chf%'
17:15:03  23  ORDER BY ydate
17:15:03  24  /

View created.

Elapsed: 00:00:00.08
17:15:03 SQL> 
17:15:03 SQL> -- rpt
17:15:03 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20745

Elapsed: 00:00:00.35
17:15:04 SQL> 
17:15:04 SQL> -- Calc deltas and gains
17:15:04 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.33
17:15:04 SQL> 
17:15:04 SQL> CREATE TABLE q13 COMPRESS AS
17:15:04   2  SELECT
17:15:04   3  pair
17:15:04   4  ,ydate
17:15:04   5  ,prdate
17:15:04   6  ,rnum
17:15:04   7  ,ld8
17:15:04   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
17:15:04   9  -- step by 2
17:15:04  10  ,clse-lg6  d06
17:15:04  11  ,lg6 -lg8  d68
17:15:04  12  ,lg8 -lg10 d810
17:15:04  13  ,lg10-lg12 d1012
17:15:04  14  ,lg12-lg14 d1214
17:15:04  15  ,lg14-lg16 d1416
17:15:04  16  ,lg16-lg18 d1618
17:15:04  17  -- step by 4
17:15:04  18  ,lg6 -lg10 d610
17:15:04  19  ,lg8 -lg12 d812
17:15:04  20  ,lg10-lg14 d1014
17:15:04  21  ,lg12-lg16 d1216
17:15:04  22  --
17:15:04  23  ,ABS(clse-lg6 )dc6
17:15:04  24  ,ABS(clse-lg8 )dc8
17:15:04  25  ,ABS(clse-lg10)dc10
17:15:04  26  ,ABS(clse-lg12)dc12
17:15:04  27  ,ABS(clse-lg14)dc14
17:15:04  28  ,ABS(clse-lg16)dc16
17:15:04  29  ,ABS(clse-lg18)dc18
17:15:04  30  ,ABS(clse-lg20)dc20
17:15:04  31  ,ABS(clse-lg22)dc22
17:15:04  32  ,(ld8-clse) ug8
17:15:04  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
17:15:04  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
17:15:04  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
17:15:04  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
17:15:04  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
17:15:04  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
17:15:04  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
17:15:04  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
17:15:04  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
17:15:04  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
17:15:04  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
17:15:04  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
17:15:04  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
17:15:04  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
17:15:04  47  ,0+TO_CHAR(ydate,'D')d
17:15:04  48  ,0+TO_CHAR(ydate,'W')w
17:15:04  49  -- mpm stands for minutes-past-midnight:
17:15:04  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
17:15:04  51  FROM q11
17:15:04  52  -- I dont want any NULL values from the LAG() functions:
17:15:04  53  WHERE lg32 > 0
17:15:04  54  ORDER BY pair,ydate
17:15:04  55  /

Table created.

Elapsed: 00:00:01.70
17:15:06 SQL> 
17:15:06 SQL> -- rpt
17:15:06 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9581
	-1	   10780

Elapsed: 00:00:00.03
17:15:06 SQL> 
17:15:06 SQL> -- Calc gains and ntiles
17:15:06 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.16
17:15:06 SQL> CREATE TABLE q15 COMPRESS AS
17:15:06   2  SELECT
17:15:06   3  pair
17:15:06   4  ,ydate
17:15:06   5  ,prdate -- Should be unique
17:15:06   6  ,trend -- +1 or -1
17:15:06   7  -- Use NTILE() to derive some attributes
17:15:06   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
17:15:06   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
17:15:06  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
17:15:06  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
17:15:06  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
17:15:06  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
17:15:06  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
17:15:06  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
17:15:06  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
17:15:06  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
17:15:06  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
17:15:06  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
17:15:06  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
17:15:06  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
17:15:06  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
17:15:06  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
17:15:06  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
17:15:06  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
17:15:06  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
17:15:06  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
17:15:06  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
17:15:06  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
17:15:06  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
17:15:06  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
17:15:06  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
17:15:06  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
17:15:06  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
17:15:06  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
17:15:06  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
17:15:06  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
17:15:06  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
17:15:06  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
17:15:06  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
17:15:06  41  ,hh    att32
17:15:06  42  ,d     att33
17:15:06  43  ,w     att34
17:15:06  44  ,mpm   att35
17:15:06  45  ,trend att36
17:15:06  46  ,ug8 g8
17:15:06  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
17:15:06  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
17:15:06  49  FROM q13
17:15:06  50  ORDER BY pair,ydate
17:15:06  51  /

Table created.

Elapsed: 00:00:05.44
17:15:11 SQL> 
17:15:11 SQL> -- rpt
17:15:11 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
17:15:11   2  GROUP BY pair,trend,gatt,gattn
17:15:11   3  ORDER BY pair,trend,gatt,gattn
17:15:11   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
usd_chf 	-1 nup nup .000030488	    4911
usd_chf 	-1 nup up  -.00494899	    3142
usd_chf 	-1 up  nup .005257733	    2727
usd_chf 	 1 nup nup -6.976E-06	    4517
usd_chf 	 1 nup up  -.00456159	    2852
usd_chf 	 1 up  nup .004709233	    2116
usd_chf 	 1			       0

7 rows selected.

Elapsed: 00:00:00.02
17:15:11 SQL> 
17:15:11 SQL> -- rpt
17:15:11 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-23 17:10:00

Elapsed: 00:00:00.01
17:15:11 SQL> 
17:15:11 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.19
17:15:12 SQL> CREATE TABLE modsrc COMPRESS AS
17:15:12   2  SELECT
17:15:12   3  pair
17:15:12   4  ,ydate
17:15:12   5  ,prdate
17:15:12   6  ,trend
17:15:12   7  ,g8
17:15:12   8  ,gatt
17:15:12   9  ,gattn
17:15:12  10  FROM q15
17:15:12  11  /

Table created.

Elapsed: 00:00:00.10
17:15:12 SQL> 
17:15:12 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
17:15:12 SQL> 
17:15:12 SQL> -- rpt
17:15:12 SQL> 
17:15:12 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20745

Elapsed: 00:00:00.35
17:15:12 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20361

Elapsed: 00:00:00.01
17:15:12 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20361

Elapsed: 00:00:00.01
17:15:12 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20361

Elapsed: 00:00:00.00
17:15:12 SQL> 
17:15:12 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.07
17:15:12 SQL> CREATE TABLE chf_ms10 COMPRESS AS
17:15:12   2  SELECT
17:15:12   3  ydate
17:15:12   4  ,trend chf_trend
17:15:12   5  ,g8    chf_g8
17:15:12   6  ,gatt  chf_gatt
17:15:12   7  ,gattn chf_gattn
17:15:12   8  FROM modsrc
17:15:12   9  /

Table created.

Elapsed: 00:00:00.07
17:15:12 SQL> 
17:15:12 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
17:15:13 SQL> 
17:15:13 SQL> -- rpt
17:15:13 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-16 08:00:01 2010-12-23 17:10:00	 9485	 -.01775      .0155
	-1 2010-09-16 01:15:01 2010-12-23 08:50:00	10780	 -.01825     .01545

Elapsed: 00:00:00.02
17:15:13 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g8),MAX(chf_g8)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G8) MAX(CHF_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-16 08:00:01 2010-12-23 17:10:00	       9581	-.01775       .0155
	-1 2010-09-16 01:15:01 2010-12-23 08:50:00	      10780	-.01825      .01545

Elapsed: 00:00:00.01
17:15:13 SQL> 
17:15:13 SQL> -- I need a copy of q15 attributes
17:15:13 SQL> 
17:15:13 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.09
17:15:13 SQL> CREATE TABLE chf_att COMPRESS AS
17:15:13   2  SELECT
17:15:13   3  ydate
17:15:13   4  ,att00 chf_att00
17:15:13   5  ,att01 chf_att01
17:15:13   6  ,att02 chf_att02
17:15:13   7  ,att03 chf_att03
17:15:13   8  ,att04 chf_att04
17:15:13   9  ,att05 chf_att05
17:15:13  10  ,att06 chf_att06
17:15:13  11  ,att07 chf_att07
17:15:13  12  ,att08 chf_att08
17:15:13  13  ,att09 chf_att09
17:15:13  14  ,att10 chf_att10
17:15:13  15  ,att11 chf_att11
17:15:13  16  ,att12 chf_att12
17:15:13  17  ,att13 chf_att13
17:15:13  18  ,att14 chf_att14
17:15:13  19  ,att15 chf_att15
17:15:13  20  ,att16 chf_att16
17:15:13  21  ,att17 chf_att17
17:15:13  22  ,att18 chf_att18
17:15:13  23  ,att19 chf_att19
17:15:13  24  ,att20 chf_att20
17:15:13  25  ,att21 chf_att21
17:15:13  26  ,att22 chf_att22
17:15:13  27  ,att23 chf_att23
17:15:13  28  ,att24 chf_att24
17:15:13  29  ,att25 chf_att25
17:15:13  30  ,att26 chf_att26
17:15:13  31  ,att27 chf_att27
17:15:13  32  ,att28 chf_att28
17:15:13  33  ,att29 chf_att29
17:15:13  34  ,att30 chf_att30
17:15:13  35  ,att31 chf_att31
17:15:13  36  ,att32 chf_att32
17:15:13  37  ,att33 chf_att33
17:15:13  38  ,att34 chf_att34
17:15:13  39  ,att35 chf_att35
17:15:13  40  ,att36 chf_att36
17:15:13  41  FROM q15
17:15:13  42  /

Table created.

Elapsed: 00:00:00.20
17:15:13 SQL> 
17:15:13 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.46
17:15:13 SQL> 
17:15:13 SQL> -- rpt
17:15:13 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     20361

Elapsed: 00:00:00.01
17:15:13 SQL> 
17:15:13 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
