
SQL*Plus: Release 11.2.0.1.0 Production on Fri Dec 24 09:36:15 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

09:36:15 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.01
09:36:15 SQL> 09:36:15 SQL> --
09:36:15 SQL> -- eur10.sql
09:36:15 SQL> --
09:36:15 SQL> 
09:36:15 SQL> -- Creates views and tables for backtesting a forex SVM strategy
09:36:15 SQL> 
09:36:15 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.00
09:36:15 SQL> 
09:36:15 SQL> -- I created di5min here:
09:36:15 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
09:36:15 SQL> 
09:36:15 SQL> CREATE OR REPLACE VIEW q11 AS
09:36:15   2  SELECT
09:36:15   3  pair
09:36:15   4  ,ydate
09:36:15   5  ,prdate
09:36:15   6  ,rownum rnum -- acts as t in my time-series
09:36:15   7  ,clse
09:36:15   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
09:36:15   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
09:36:15  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
09:36:15  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
09:36:15  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
09:36:15  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
09:36:15  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
09:36:15  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
09:36:15  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
09:36:15  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
09:36:15  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
09:36:15  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
09:36:15  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
09:36:15  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
09:36:15  22  FROM di5min WHERE pair LIKE'%eur%'
09:36:15  23  ORDER BY ydate
09:36:15  24  /

View created.

Elapsed: 00:00:00.05
09:36:15 SQL> 
09:36:15 SQL> -- rpt
09:36:15 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20742

Elapsed: 00:00:00.37
09:36:16 SQL> 
09:36:16 SQL> -- Calc deltas and gains
09:36:16 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
09:36:16 SQL> 
09:36:16 SQL> CREATE TABLE q13 COMPRESS AS
09:36:16   2  SELECT
09:36:16   3  pair
09:36:16   4  ,ydate
09:36:16   5  ,prdate
09:36:16   6  ,rnum
09:36:16   7  ,ld8
09:36:16   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
09:36:16   9  -- step by 2
09:36:16  10  ,clse-lg6  d06
09:36:16  11  ,lg6 -lg8  d68
09:36:16  12  ,lg8 -lg10 d810
09:36:16  13  ,lg10-lg12 d1012
09:36:16  14  ,lg12-lg14 d1214
09:36:16  15  ,lg14-lg16 d1416
09:36:16  16  ,lg16-lg18 d1618
09:36:16  17  -- step by 4
09:36:16  18  ,lg6 -lg10 d610
09:36:16  19  ,lg8 -lg12 d812
09:36:16  20  ,lg10-lg14 d1014
09:36:16  21  ,lg12-lg16 d1216
09:36:16  22  --
09:36:16  23  ,ABS(clse-lg6 )dc6
09:36:16  24  ,ABS(clse-lg8 )dc8
09:36:16  25  ,ABS(clse-lg10)dc10
09:36:16  26  ,ABS(clse-lg12)dc12
09:36:16  27  ,ABS(clse-lg14)dc14
09:36:16  28  ,ABS(clse-lg16)dc16
09:36:16  29  ,ABS(clse-lg18)dc18
09:36:16  30  ,ABS(clse-lg20)dc20
09:36:16  31  ,ABS(clse-lg22)dc22
09:36:16  32  ,(ld8-clse) ug8
09:36:16  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
09:36:16  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
09:36:16  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
09:36:16  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
09:36:16  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
09:36:16  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
09:36:16  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
09:36:16  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
09:36:16  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
09:36:16  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
09:36:16  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
09:36:16  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
09:36:16  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
09:36:16  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
09:36:16  47  ,0+TO_CHAR(ydate,'D')d
09:36:16  48  ,0+TO_CHAR(ydate,'W')w
09:36:16  49  -- mpm stands for minutes-past-midnight:
09:36:16  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
09:36:16  51  FROM q11
09:36:16  52  -- I dont want any NULL values from the LAG() functions:
09:36:16  53  WHERE lg32 > 0
09:36:16  54  ORDER BY pair,ydate
09:36:16  55  /

Table created.

Elapsed: 00:00:02.03
09:36:18 SQL> 
09:36:18 SQL> -- rpt
09:36:18 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10122
	-1	   10236

Elapsed: 00:00:00.03
09:36:18 SQL> 
09:36:18 SQL> -- Calc gains and ntiles
09:36:18 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.14
09:36:18 SQL> CREATE TABLE q15 COMPRESS AS
09:36:18   2  SELECT
09:36:18   3  pair
09:36:18   4  ,ydate
09:36:18   5  ,prdate -- Should be unique
09:36:18   6  ,trend -- +1 or -1
09:36:18   7  -- Use NTILE() to derive some attributes
09:36:18   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
09:36:18   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
09:36:18  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
09:36:18  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
09:36:18  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
09:36:18  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
09:36:18  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
09:36:18  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
09:36:18  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
09:36:18  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
09:36:18  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
09:36:18  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
09:36:18  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
09:36:18  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
09:36:18  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
09:36:18  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
09:36:18  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
09:36:18  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
09:36:18  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
09:36:18  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
09:36:18  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
09:36:18  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
09:36:18  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
09:36:18  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
09:36:18  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
09:36:18  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
09:36:18  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
09:36:18  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
09:36:18  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
09:36:18  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
09:36:18  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
09:36:18  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
09:36:18  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
09:36:18  41  ,hh    att32
09:36:18  42  ,d     att33
09:36:18  43  ,w     att34
09:36:18  44  ,mpm   att35
09:36:18  45  ,trend att36
09:36:18  46  ,ug8 g8
09:36:18  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
09:36:18  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
09:36:18  49  FROM q13
09:36:18  50  ORDER BY pair,ydate
09:36:18  51  /

Table created.

Elapsed: 00:00:05.37
09:36:23 SQL> 
09:36:23 SQL> -- rpt
09:36:23 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
09:36:23   2  GROUP BY pair,trend,gatt,gattn
09:36:23   3  ORDER BY pair,trend,gatt,gattn
09:36:23   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
eur_usd 	-1 nup nup .000026417	    3018
eur_usd 	-1 nup up  -.00602802	    3651
eur_usd 	-1 up  nup .005755672	    3566
eur_usd 	-1			       0
eur_usd 	 1 nup nup -.00006327	    2941
eur_usd 	 1 nup up  -.00626446	    3461
eur_usd 	 1 up  nup .006564552	    3625
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
09:36:23 SQL> 
09:36:23 SQL> -- rpt
09:36:23 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-24 09:30:00

Elapsed: 00:00:00.02
09:36:23 SQL> 
09:36:23 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.03
09:36:23 SQL> CREATE TABLE modsrc COMPRESS AS
09:36:23   2  SELECT
09:36:23   3  pair
09:36:23   4  ,ydate
09:36:23   5  ,prdate
09:36:23   6  ,trend
09:36:23   7  ,g8
09:36:23   8  ,gatt
09:36:23   9  ,gattn
09:36:23  10  FROM q15
09:36:23  11  /

Table created.

Elapsed: 00:00:00.09
09:36:24 SQL> 
09:36:24 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
09:36:24 SQL> 
09:36:24 SQL> -- rpt
09:36:24 SQL> 
09:36:24 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20742

Elapsed: 00:00:00.34
09:36:24 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20358

Elapsed: 00:00:00.00
09:36:24 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20358

Elapsed: 00:00:00.00
09:36:24 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20358

Elapsed: 00:00:00.00
09:36:24 SQL> 
09:36:24 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.12
09:36:24 SQL> CREATE TABLE eur_ms10 COMPRESS AS
09:36:24   2  SELECT
09:36:24   3  ydate
09:36:24   4  ,trend eur_trend
09:36:24   5  ,g8    eur_g8
09:36:24   6  ,gatt  eur_gatt
09:36:24   7  ,gattn eur_gattn
09:36:24   8  FROM modsrc
09:36:24   9  /

Table created.

Elapsed: 00:00:00.07
09:36:24 SQL> 
09:36:24 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
09:36:24 SQL> 
09:36:24 SQL> -- rpt
09:36:24 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-16 17:55:01 2010-12-24 09:30:00	10027	  -.0218     .02165
	-1 2010-09-16 17:40:01 2010-12-24 01:50:00	10235	 -.02085      .0196

Elapsed: 00:00:00.02
09:36:24 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g8),MAX(eur_g8)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G8) MAX(EUR_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-16 17:55:01 2010-12-24 09:30:00	      10122	 -.0218      .02165
	-1 2010-09-16 17:40:01 2010-12-24 01:50:00	      10236	-.02085       .0196

Elapsed: 00:00:00.01
09:36:24 SQL> 
09:36:24 SQL> -- I need a copy of q15 attributes
09:36:24 SQL> 
09:36:24 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.04
09:36:25 SQL> CREATE TABLE eur_att COMPRESS AS
09:36:25   2  SELECT
09:36:25   3  ydate
09:36:25   4  ,att00 eur_att00
09:36:25   5  ,att01 eur_att01
09:36:25   6  ,att02 eur_att02
09:36:25   7  ,att03 eur_att03
09:36:25   8  ,att04 eur_att04
09:36:25   9  ,att05 eur_att05
09:36:25  10  ,att06 eur_att06
09:36:25  11  ,att07 eur_att07
09:36:25  12  ,att08 eur_att08
09:36:25  13  ,att09 eur_att09
09:36:25  14  ,att10 eur_att10
09:36:25  15  ,att11 eur_att11
09:36:25  16  ,att12 eur_att12
09:36:25  17  ,att13 eur_att13
09:36:25  18  ,att14 eur_att14
09:36:25  19  ,att15 eur_att15
09:36:25  20  ,att16 eur_att16
09:36:25  21  ,att17 eur_att17
09:36:25  22  ,att18 eur_att18
09:36:25  23  ,att19 eur_att19
09:36:25  24  ,att20 eur_att20
09:36:25  25  ,att21 eur_att21
09:36:25  26  ,att22 eur_att22
09:36:25  27  ,att23 eur_att23
09:36:25  28  ,att24 eur_att24
09:36:25  29  ,att25 eur_att25
09:36:25  30  ,att26 eur_att26
09:36:25  31  ,att27 eur_att27
09:36:25  32  ,att28 eur_att28
09:36:25  33  ,att29 eur_att29
09:36:25  34  ,att30 eur_att30
09:36:25  35  ,att31 eur_att31
09:36:25  36  ,att32 eur_att32
09:36:25  37  ,att33 eur_att33
09:36:25  38  ,att34 eur_att34
09:36:25  39  ,att35 eur_att35
09:36:25  40  ,att36 eur_att36
09:36:25  41  FROM q15
09:36:25  42  /

Table created.

Elapsed: 00:00:00.18
09:36:25 SQL> 
09:36:25 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.48
09:36:25 SQL> 
09:36:25 SQL> -- rpt
09:36:25 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     20358

Elapsed: 00:00:00.00
09:36:25 SQL> 
09:36:25 SQL> --
09:36:25 SQL> -- aud10.sql
09:36:25 SQL> --
09:36:25 SQL> 
09:36:25 SQL> -- Creates views and tables for backtesting a forex SVM strategy
09:36:25 SQL> 
09:36:25 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.31
09:36:25 SQL> 
09:36:25 SQL> -- I created di5min here:
09:36:25 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
09:36:25 SQL> 
09:36:25 SQL> CREATE OR REPLACE VIEW q11 AS
09:36:25   2  SELECT
09:36:25   3  pair
09:36:25   4  ,ydate
09:36:25   5  ,prdate
09:36:25   6  ,rownum rnum -- acts as t in my time-series
09:36:25   7  ,clse
09:36:25   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
09:36:25   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
09:36:25  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
09:36:25  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
09:36:25  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
09:36:25  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
09:36:25  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
09:36:25  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
09:36:25  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
09:36:25  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
09:36:25  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
09:36:25  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
09:36:25  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
09:36:25  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
09:36:25  22  FROM di5min WHERE pair LIKE'%aud%'
09:36:25  23  ORDER BY ydate
09:36:25  24  /

View created.

Elapsed: 00:00:00.05
09:36:26 SQL> 
09:36:26 SQL> -- rpt
09:36:26 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20739

Elapsed: 00:00:00.34
09:36:26 SQL> 
09:36:26 SQL> -- Calc deltas and gains
09:36:26 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.19
09:36:26 SQL> 
09:36:26 SQL> CREATE TABLE q13 COMPRESS AS
09:36:26   2  SELECT
09:36:26   3  pair
09:36:26   4  ,ydate
09:36:26   5  ,prdate
09:36:26   6  ,rnum
09:36:26   7  ,ld8
09:36:26   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
09:36:26   9  -- step by 2
09:36:26  10  ,clse-lg6  d06
09:36:26  11  ,lg6 -lg8  d68
09:36:26  12  ,lg8 -lg10 d810
09:36:26  13  ,lg10-lg12 d1012
09:36:26  14  ,lg12-lg14 d1214
09:36:26  15  ,lg14-lg16 d1416
09:36:26  16  ,lg16-lg18 d1618
09:36:26  17  -- step by 4
09:36:26  18  ,lg6 -lg10 d610
09:36:26  19  ,lg8 -lg12 d812
09:36:26  20  ,lg10-lg14 d1014
09:36:26  21  ,lg12-lg16 d1216
09:36:26  22  --
09:36:26  23  ,ABS(clse-lg6 )dc6
09:36:26  24  ,ABS(clse-lg8 )dc8
09:36:26  25  ,ABS(clse-lg10)dc10
09:36:26  26  ,ABS(clse-lg12)dc12
09:36:26  27  ,ABS(clse-lg14)dc14
09:36:26  28  ,ABS(clse-lg16)dc16
09:36:26  29  ,ABS(clse-lg18)dc18
09:36:26  30  ,ABS(clse-lg20)dc20
09:36:26  31  ,ABS(clse-lg22)dc22
09:36:26  32  ,(ld8-clse) ug8
09:36:26  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
09:36:26  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
09:36:26  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
09:36:26  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
09:36:26  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
09:36:26  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
09:36:26  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
09:36:26  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
09:36:26  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
09:36:26  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
09:36:26  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
09:36:26  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
09:36:26  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
09:36:26  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
09:36:26  47  ,0+TO_CHAR(ydate,'D')d
09:36:26  48  ,0+TO_CHAR(ydate,'W')w
09:36:26  49  -- mpm stands for minutes-past-midnight:
09:36:26  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
09:36:26  51  FROM q11
09:36:26  52  -- I dont want any NULL values from the LAG() functions:
09:36:26  53  WHERE lg32 > 0
09:36:26  54  ORDER BY pair,ydate
09:36:26  55  /

Table created.

Elapsed: 00:00:01.82
09:36:28 SQL> 
09:36:28 SQL> -- rpt
09:36:28 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10834
	-1	    9521

Elapsed: 00:00:00.03
09:36:28 SQL> 
09:36:28 SQL> -- Calc gains and ntiles
09:36:28 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.20
09:36:28 SQL> CREATE TABLE q15 COMPRESS AS
09:36:28   2  SELECT
09:36:28   3  pair
09:36:28   4  ,ydate
09:36:28   5  ,prdate -- Should be unique
09:36:28   6  ,trend -- +1 or -1
09:36:28   7  -- Use NTILE() to derive some attributes
09:36:28   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
09:36:28   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
09:36:28  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
09:36:28  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
09:36:28  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
09:36:28  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
09:36:28  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
09:36:28  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
09:36:28  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
09:36:28  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
09:36:28  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
09:36:28  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
09:36:28  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
09:36:28  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
09:36:28  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
09:36:28  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
09:36:28  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
09:36:28  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
09:36:28  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
09:36:28  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
09:36:28  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
09:36:28  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
09:36:28  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
09:36:28  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
09:36:28  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
09:36:28  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
09:36:28  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
09:36:28  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
09:36:28  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
09:36:28  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
09:36:28  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
09:36:28  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
09:36:28  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
09:36:28  41  ,hh    att32
09:36:28  42  ,d     att33
09:36:28  43  ,w     att34
09:36:28  44  ,mpm   att35
09:36:28  45  ,trend att36
09:36:28  46  ,ug8 g8
09:36:28  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
09:36:28  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
09:36:28  49  FROM q13
09:36:28  50  ORDER BY pair,ydate
09:36:28  51  /

Table created.

Elapsed: 00:00:05.51
09:36:34 SQL> 
09:36:34 SQL> -- rpt
09:36:34 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
09:36:34   2  GROUP BY pair,trend,gatt,gattn
09:36:34   3  ORDER BY pair,trend,gatt,gattn
09:36:34   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
aud_usd 	-1 nup nup .000037518	    3555
aud_usd 	-1 nup up  -.00525835	    2519
aud_usd 	-1 up  nup .005182983	    3390
aud_usd 	-1			       0
aud_usd 	 1 nup nup .000028006	    4354
aud_usd 	 1 nup up  -.00500047	    3062
aud_usd 	 1 up  nup .005093811	    3379
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
09:36:34 SQL> 
09:36:34 SQL> -- rpt
09:36:34 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-24 09:30:00

Elapsed: 00:00:00.01
09:36:34 SQL> 
09:36:34 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.19
09:36:34 SQL> CREATE TABLE modsrc COMPRESS AS
09:36:34   2  SELECT
09:36:34   3  pair
09:36:34   4  ,ydate
09:36:34   5  ,prdate
09:36:34   6  ,trend
09:36:34   7  ,g8
09:36:34   8  ,gatt
09:36:34   9  ,gattn
09:36:34  10  FROM q15
09:36:34  11  /

Table created.

Elapsed: 00:00:00.08
09:36:34 SQL> 
09:36:34 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.27
09:36:34 SQL> 
09:36:34 SQL> -- rpt
09:36:34 SQL> 
09:36:34 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20739

Elapsed: 00:00:00.36
09:36:35 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20355

Elapsed: 00:00:00.01
09:36:35 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20355

Elapsed: 00:00:00.00
09:36:35 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20355

Elapsed: 00:00:00.00
09:36:35 SQL> 
09:36:35 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
09:36:35 SQL> CREATE TABLE aud_ms10 COMPRESS AS
09:36:35   2  SELECT
09:36:35   3  ydate
09:36:35   4  ,trend aud_trend
09:36:35   5  ,g8    aud_g8
09:36:35   6  ,gatt  aud_gatt
09:36:35   7  ,gattn aud_gattn
09:36:35   8  FROM modsrc
09:36:35   9  /

Table created.

Elapsed: 00:00:00.07
09:36:35 SQL> 
09:36:35 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
09:36:35 SQL> 
09:36:35 SQL> -- rpt
09:36:35 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-16 19:30:01 2010-12-24 09:30:00	10795	  -.0203      .0136
	-1 2010-09-16 17:40:01 2010-12-24 08:00:00	 9464	  -.0196      .0148

Elapsed: 00:00:00.02
09:36:35 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g8),MAX(aud_g8)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G8) MAX(AUD_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-16 19:30:01 2010-12-24 09:30:00	      10834	 -.0203       .0136
	-1 2010-09-16 17:40:01 2010-12-24 08:00:00	       9521	 -.0196       .0148

Elapsed: 00:00:00.01
09:36:35 SQL> 
09:36:35 SQL> -- I need a copy of q15 attributes
09:36:35 SQL> 
09:36:35 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.04
09:36:35 SQL> CREATE TABLE aud_att COMPRESS AS
09:36:35   2  SELECT
09:36:35   3  ydate
09:36:35   4  ,att00 aud_att00
09:36:35   5  ,att01 aud_att01
09:36:35   6  ,att02 aud_att02
09:36:35   7  ,att03 aud_att03
09:36:35   8  ,att04 aud_att04
09:36:35   9  ,att05 aud_att05
09:36:35  10  ,att06 aud_att06
09:36:35  11  ,att07 aud_att07
09:36:35  12  ,att08 aud_att08
09:36:35  13  ,att09 aud_att09
09:36:35  14  ,att10 aud_att10
09:36:35  15  ,att11 aud_att11
09:36:35  16  ,att12 aud_att12
09:36:35  17  ,att13 aud_att13
09:36:35  18  ,att14 aud_att14
09:36:35  19  ,att15 aud_att15
09:36:35  20  ,att16 aud_att16
09:36:35  21  ,att17 aud_att17
09:36:35  22  ,att18 aud_att18
09:36:35  23  ,att19 aud_att19
09:36:35  24  ,att20 aud_att20
09:36:35  25  ,att21 aud_att21
09:36:35  26  ,att22 aud_att22
09:36:35  27  ,att23 aud_att23
09:36:35  28  ,att24 aud_att24
09:36:35  29  ,att25 aud_att25
09:36:35  30  ,att26 aud_att26
09:36:35  31  ,att27 aud_att27
09:36:35  32  ,att28 aud_att28
09:36:35  33  ,att29 aud_att29
09:36:35  34  ,att30 aud_att30
09:36:35  35  ,att31 aud_att31
09:36:35  36  ,att32 aud_att32
09:36:35  37  ,att33 aud_att33
09:36:35  38  ,att34 aud_att34
09:36:35  39  ,att35 aud_att35
09:36:35  40  ,att36 aud_att36
09:36:35  41  FROM q15
09:36:35  42  /

Table created.

Elapsed: 00:00:00.16
09:36:35 SQL> 
09:36:35 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.49
09:36:36 SQL> 
09:36:36 SQL> -- rpt
09:36:36 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     20355

Elapsed: 00:00:00.00
09:36:36 SQL> 
09:36:36 SQL> --
09:36:36 SQL> -- gbp10.sql
09:36:36 SQL> --
09:36:36 SQL> 
09:36:36 SQL> -- Creates views and tables for backtesting a forex SVM strategy
09:36:36 SQL> 
09:36:36 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.32
09:36:36 SQL> 
09:36:36 SQL> -- I created di5min here:
09:36:36 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
09:36:36 SQL> 
09:36:36 SQL> CREATE OR REPLACE VIEW q11 AS
09:36:36   2  SELECT
09:36:36   3  pair
09:36:36   4  ,ydate
09:36:36   5  ,prdate
09:36:36   6  ,rownum rnum -- acts as t in my time-series
09:36:36   7  ,clse
09:36:36   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
09:36:36   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
09:36:36  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
09:36:36  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
09:36:36  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
09:36:36  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
09:36:36  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
09:36:36  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
09:36:36  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
09:36:36  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
09:36:36  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
09:36:36  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
09:36:36  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
09:36:36  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
09:36:36  22  FROM di5min WHERE pair LIKE'%gbp%'
09:36:36  23  ORDER BY ydate
09:36:36  24  /

View created.

Elapsed: 00:00:00.06
09:36:36 SQL> 
09:36:36 SQL> -- rpt
09:36:36 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20741

Elapsed: 00:00:00.35
09:36:36 SQL> 
09:36:36 SQL> -- Calc deltas and gains
09:36:36 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.17
09:36:36 SQL> 
09:36:36 SQL> CREATE TABLE q13 COMPRESS AS
09:36:36   2  SELECT
09:36:36   3  pair
09:36:36   4  ,ydate
09:36:36   5  ,prdate
09:36:36   6  ,rnum
09:36:36   7  ,ld8
09:36:36   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
09:36:36   9  -- step by 2
09:36:36  10  ,clse-lg6  d06
09:36:36  11  ,lg6 -lg8  d68
09:36:36  12  ,lg8 -lg10 d810
09:36:36  13  ,lg10-lg12 d1012
09:36:36  14  ,lg12-lg14 d1214
09:36:36  15  ,lg14-lg16 d1416
09:36:36  16  ,lg16-lg18 d1618
09:36:36  17  -- step by 4
09:36:36  18  ,lg6 -lg10 d610
09:36:36  19  ,lg8 -lg12 d812
09:36:36  20  ,lg10-lg14 d1014
09:36:36  21  ,lg12-lg16 d1216
09:36:36  22  --
09:36:36  23  ,ABS(clse-lg6 )dc6
09:36:36  24  ,ABS(clse-lg8 )dc8
09:36:36  25  ,ABS(clse-lg10)dc10
09:36:36  26  ,ABS(clse-lg12)dc12
09:36:36  27  ,ABS(clse-lg14)dc14
09:36:36  28  ,ABS(clse-lg16)dc16
09:36:36  29  ,ABS(clse-lg18)dc18
09:36:36  30  ,ABS(clse-lg20)dc20
09:36:36  31  ,ABS(clse-lg22)dc22
09:36:36  32  ,(ld8-clse) ug8
09:36:36  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
09:36:36  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
09:36:36  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
09:36:36  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
09:36:36  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
09:36:36  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
09:36:36  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
09:36:36  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
09:36:36  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
09:36:36  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
09:36:36  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
09:36:36  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
09:36:36  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
09:36:36  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
09:36:36  47  ,0+TO_CHAR(ydate,'D')d
09:36:36  48  ,0+TO_CHAR(ydate,'W')w
09:36:36  49  -- mpm stands for minutes-past-midnight:
09:36:36  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
09:36:36  51  FROM q11
09:36:36  52  -- I dont want any NULL values from the LAG() functions:
09:36:36  53  WHERE lg32 > 0
09:36:36  54  ORDER BY pair,ydate
09:36:36  55  /

Table created.

Elapsed: 00:00:01.69
09:36:38 SQL> 
09:36:38 SQL> -- rpt
09:36:38 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9988
	-1	   10369

Elapsed: 00:00:00.03
09:36:38 SQL> 
09:36:38 SQL> -- Calc gains and ntiles
09:36:38 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.15
09:36:38 SQL> CREATE TABLE q15 COMPRESS AS
09:36:38   2  SELECT
09:36:38   3  pair
09:36:38   4  ,ydate
09:36:38   5  ,prdate -- Should be unique
09:36:38   6  ,trend -- +1 or -1
09:36:38   7  -- Use NTILE() to derive some attributes
09:36:38   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
09:36:38   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
09:36:38  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
09:36:38  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
09:36:38  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
09:36:38  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
09:36:38  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
09:36:38  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
09:36:38  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
09:36:38  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
09:36:38  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
09:36:38  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
09:36:38  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
09:36:38  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
09:36:38  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
09:36:38  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
09:36:38  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
09:36:38  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
09:36:38  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
09:36:38  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
09:36:38  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
09:36:38  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
09:36:38  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
09:36:38  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
09:36:38  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
09:36:38  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
09:36:38  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
09:36:38  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
09:36:38  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
09:36:38  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
09:36:38  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
09:36:38  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
09:36:38  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
09:36:38  41  ,hh    att32
09:36:38  42  ,d     att33
09:36:38  43  ,w     att34
09:36:38  44  ,mpm   att35
09:36:38  45  ,trend att36
09:36:38  46  ,ug8 g8
09:36:38  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
09:36:38  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
09:36:38  49  FROM q13
09:36:38  50  ORDER BY pair,ydate
09:36:38  51  /

Table created.

Elapsed: 00:00:05.52
09:36:44 SQL> 
09:36:44 SQL> -- rpt
09:36:44 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
09:36:44   2  GROUP BY pair,trend,gatt,gattn
09:36:44   3  ORDER BY pair,trend,gatt,gattn
09:36:44   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
gbp_usd 	-1 nup nup .000094428	    3832
gbp_usd 	-1 nup up   -.0059004	    3270
gbp_usd 	-1 up  nup .005468704	    3260
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup -.00007289	    3630
gbp_usd 	 1 nup up  -.00555039	    3268
gbp_usd 	 1 up  nup .005948192	    3001
gbp_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
09:36:44 SQL> 
09:36:44 SQL> -- rpt
09:36:44 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-24 09:30:00

Elapsed: 00:00:00.02
09:36:44 SQL> 
09:36:44 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.11
09:36:44 SQL> CREATE TABLE modsrc COMPRESS AS
09:36:44   2  SELECT
09:36:44   3  pair
09:36:44   4  ,ydate
09:36:44   5  ,prdate
09:36:44   6  ,trend
09:36:44   7  ,g8
09:36:44   8  ,gatt
09:36:44   9  ,gattn
09:36:44  10  FROM q15
09:36:44  11  /

Table created.

Elapsed: 00:00:00.09
09:36:44 SQL> 
09:36:44 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.28
09:36:44 SQL> 
09:36:44 SQL> -- rpt
09:36:44 SQL> 
09:36:44 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20741

Elapsed: 00:00:00.35
09:36:45 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20357

Elapsed: 00:00:00.01
09:36:45 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20357

Elapsed: 00:00:00.01
09:36:45 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20357

Elapsed: 00:00:00.00
09:36:45 SQL> 
09:36:45 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
09:36:45 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
09:36:45   2  SELECT
09:36:45   3  ydate
09:36:45   4  ,trend gbp_trend
09:36:45   5  ,g8    gbp_g8
09:36:45   6  ,gatt  gbp_gatt
09:36:45   7  ,gattn gbp_gattn
09:36:45   8  FROM modsrc
09:36:45   9  /

Table created.

Elapsed: 00:00:00.06
09:36:45 SQL> 
09:36:45 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
09:36:45 SQL> 
09:36:45 SQL> -- rpt
09:36:45 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-16 17:40:01 2010-12-24 09:30:00	 9899	  -.0231       .019
	-1 2010-09-16 22:20:01 2010-12-24 06:05:00	10362	    -.02      .0204

Elapsed: 00:00:00.02
09:36:45 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g8),MAX(gbp_g8)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G8) MAX(GBP_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-16 17:40:01 2010-12-24 09:30:00	       9988	 -.0231        .019
	-1 2010-09-16 22:20:01 2010-12-24 06:05:00	      10369	   -.02       .0204

Elapsed: 00:00:00.01
09:36:45 SQL> 
09:36:45 SQL> -- I need a copy of q15 attributes
09:36:45 SQL> 
09:36:45 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.04
09:36:45 SQL> CREATE TABLE gbp_att COMPRESS AS
09:36:45   2  SELECT
09:36:45   3  ydate
09:36:45   4  ,att00 gbp_att00
09:36:45   5  ,att01 gbp_att01
09:36:45   6  ,att02 gbp_att02
09:36:45   7  ,att03 gbp_att03
09:36:45   8  ,att04 gbp_att04
09:36:45   9  ,att05 gbp_att05
09:36:45  10  ,att06 gbp_att06
09:36:45  11  ,att07 gbp_att07
09:36:45  12  ,att08 gbp_att08
09:36:45  13  ,att09 gbp_att09
09:36:45  14  ,att10 gbp_att10
09:36:45  15  ,att11 gbp_att11
09:36:45  16  ,att12 gbp_att12
09:36:45  17  ,att13 gbp_att13
09:36:45  18  ,att14 gbp_att14
09:36:45  19  ,att15 gbp_att15
09:36:45  20  ,att16 gbp_att16
09:36:45  21  ,att17 gbp_att17
09:36:45  22  ,att18 gbp_att18
09:36:45  23  ,att19 gbp_att19
09:36:45  24  ,att20 gbp_att20
09:36:45  25  ,att21 gbp_att21
09:36:45  26  ,att22 gbp_att22
09:36:45  27  ,att23 gbp_att23
09:36:45  28  ,att24 gbp_att24
09:36:45  29  ,att25 gbp_att25
09:36:45  30  ,att26 gbp_att26
09:36:45  31  ,att27 gbp_att27
09:36:45  32  ,att28 gbp_att28
09:36:45  33  ,att29 gbp_att29
09:36:45  34  ,att30 gbp_att30
09:36:45  35  ,att31 gbp_att31
09:36:45  36  ,att32 gbp_att32
09:36:45  37  ,att33 gbp_att33
09:36:45  38  ,att34 gbp_att34
09:36:45  39  ,att35 gbp_att35
09:36:45  40  ,att36 gbp_att36
09:36:45  41  FROM q15
09:36:45  42  /

Table created.

Elapsed: 00:00:00.17
09:36:45 SQL> 
09:36:45 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.46
09:36:46 SQL> 
09:36:46 SQL> -- rpt
09:36:46 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     20357

Elapsed: 00:00:00.00
09:36:46 SQL> 
09:36:46 SQL> --
09:36:46 SQL> -- jpy10.sql
09:36:46 SQL> --
09:36:46 SQL> 
09:36:46 SQL> -- Creates views and tables for backtesting a forex SVM strategy
09:36:46 SQL> 
09:36:46 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
09:36:46 SQL> 
09:36:46 SQL> -- I created di5min here:
09:36:46 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
09:36:46 SQL> 
09:36:46 SQL> CREATE OR REPLACE VIEW q11 AS
09:36:46   2  SELECT
09:36:46   3  pair
09:36:46   4  ,ydate
09:36:46   5  ,prdate
09:36:46   6  ,rownum rnum -- acts as t in my time-series
09:36:46   7  ,clse
09:36:46   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
09:36:46   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
09:36:46  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
09:36:46  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
09:36:46  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
09:36:46  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
09:36:46  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
09:36:46  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
09:36:46  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
09:36:46  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
09:36:46  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
09:36:46  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
09:36:46  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
09:36:46  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
09:36:46  22  FROM di5min WHERE pair LIKE'%jpy%'
09:36:46  23  ORDER BY ydate
09:36:46  24  /

View created.

Elapsed: 00:00:00.05
09:36:46 SQL> 
09:36:46 SQL> -- rpt
09:36:46 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20741

Elapsed: 00:00:00.35
09:36:46 SQL> 
09:36:46 SQL> -- Calc deltas and gains
09:36:46 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.19
09:36:47 SQL> 
09:36:47 SQL> CREATE TABLE q13 COMPRESS AS
09:36:47   2  SELECT
09:36:47   3  pair
09:36:47   4  ,ydate
09:36:47   5  ,prdate
09:36:47   6  ,rnum
09:36:47   7  ,ld8
09:36:47   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
09:36:47   9  -- step by 2
09:36:47  10  ,clse-lg6  d06
09:36:47  11  ,lg6 -lg8  d68
09:36:47  12  ,lg8 -lg10 d810
09:36:47  13  ,lg10-lg12 d1012
09:36:47  14  ,lg12-lg14 d1214
09:36:47  15  ,lg14-lg16 d1416
09:36:47  16  ,lg16-lg18 d1618
09:36:47  17  -- step by 4
09:36:47  18  ,lg6 -lg10 d610
09:36:47  19  ,lg8 -lg12 d812
09:36:47  20  ,lg10-lg14 d1014
09:36:47  21  ,lg12-lg16 d1216
09:36:47  22  --
09:36:47  23  ,ABS(clse-lg6 )dc6
09:36:47  24  ,ABS(clse-lg8 )dc8
09:36:47  25  ,ABS(clse-lg10)dc10
09:36:47  26  ,ABS(clse-lg12)dc12
09:36:47  27  ,ABS(clse-lg14)dc14
09:36:47  28  ,ABS(clse-lg16)dc16
09:36:47  29  ,ABS(clse-lg18)dc18
09:36:47  30  ,ABS(clse-lg20)dc20
09:36:47  31  ,ABS(clse-lg22)dc22
09:36:47  32  ,(ld8-clse) ug8
09:36:47  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
09:36:47  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
09:36:47  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
09:36:47  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
09:36:47  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
09:36:47  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
09:36:47  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
09:36:47  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
09:36:47  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
09:36:47  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
09:36:47  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
09:36:47  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
09:36:47  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
09:36:47  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
09:36:47  47  ,0+TO_CHAR(ydate,'D')d
09:36:47  48  ,0+TO_CHAR(ydate,'W')w
09:36:47  49  -- mpm stands for minutes-past-midnight:
09:36:47  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
09:36:47  51  FROM q11
09:36:47  52  -- I dont want any NULL values from the LAG() functions:
09:36:47  53  WHERE lg32 > 0
09:36:47  54  ORDER BY pair,ydate
09:36:47  55  /

Table created.

Elapsed: 00:00:01.71
09:36:48 SQL> 
09:36:48 SQL> -- rpt
09:36:48 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9386
	-1	   10971

Elapsed: 00:00:00.03
09:36:48 SQL> 
09:36:48 SQL> -- Calc gains and ntiles
09:36:48 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
09:36:49 SQL> CREATE TABLE q15 COMPRESS AS
09:36:49   2  SELECT
09:36:49   3  pair
09:36:49   4  ,ydate
09:36:49   5  ,prdate -- Should be unique
09:36:49   6  ,trend -- +1 or -1
09:36:49   7  -- Use NTILE() to derive some attributes
09:36:49   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
09:36:49   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
09:36:49  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
09:36:49  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
09:36:49  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
09:36:49  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
09:36:49  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
09:36:49  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
09:36:49  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
09:36:49  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
09:36:49  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
09:36:49  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
09:36:49  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
09:36:49  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
09:36:49  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
09:36:49  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
09:36:49  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
09:36:49  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
09:36:49  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
09:36:49  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
09:36:49  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
09:36:49  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
09:36:49  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
09:36:49  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
09:36:49  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
09:36:49  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
09:36:49  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
09:36:49  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
09:36:49  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
09:36:49  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
09:36:49  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
09:36:49  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
09:36:49  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
09:36:49  41  ,hh    att32
09:36:49  42  ,d     att33
09:36:49  43  ,w     att34
09:36:49  44  ,mpm   att35
09:36:49  45  ,trend att36
09:36:49  46  ,ug8 g8
09:36:49  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
09:36:49  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
09:36:49  49  FROM q13
09:36:49  50  ORDER BY pair,ydate
09:36:49  51  /

Table created.

Elapsed: 00:00:05.55
09:36:54 SQL> 
09:36:54 SQL> -- rpt
09:36:54 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
09:36:54   2  GROUP BY pair,trend,gatt,gattn
09:36:54   3  ORDER BY pair,trend,gatt,gattn
09:36:54   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
usd_jpy 	-1 nup nup 1.8165E-08	     168
usd_jpy 	-1 nup up  -.18409515	    5534
usd_jpy 	-1 up  nup .179597951	    5232
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     118
usd_jpy 	 1 nup up  -.18888816	    5148
usd_jpy 	 1 up  nup .192752361	    4061
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
09:36:54 SQL> 
09:36:54 SQL> -- rpt
09:36:54 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-24 09:35:00

Elapsed: 00:00:00.02
09:36:54 SQL> 
09:36:54 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
09:36:54 SQL> CREATE TABLE modsrc COMPRESS AS
09:36:54   2  SELECT
09:36:54   3  pair
09:36:54   4  ,ydate
09:36:54   5  ,prdate
09:36:54   6  ,trend
09:36:54   7  ,g8
09:36:54   8  ,gatt
09:36:54   9  ,gattn
09:36:54  10  FROM q15
09:36:54  11  /

Table created.

Elapsed: 00:00:00.10
09:36:54 SQL> 
09:36:54 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
09:36:55 SQL> 
09:36:55 SQL> -- rpt
09:36:55 SQL> 
09:36:55 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20741

Elapsed: 00:00:00.35
09:36:55 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20357

Elapsed: 00:00:00.01
09:36:55 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20357

Elapsed: 00:00:00.00
09:36:55 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20357

Elapsed: 00:00:00.01
09:36:55 SQL> 
09:36:55 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
09:36:55 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
09:36:55   2  SELECT
09:36:55   3  ydate
09:36:55   4  ,trend jpy_trend
09:36:55   5  ,g8    jpy_g8
09:36:55   6  ,gatt  jpy_gatt
09:36:55   7  ,gattn jpy_gattn
09:36:55   8  FROM modsrc
09:36:55   9  /

Table created.

Elapsed: 00:00:00.08
09:36:55 SQL> 
09:36:55 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
09:36:55 SQL> 
09:36:55 SQL> -- rpt
09:36:55 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-16 17:40:01 2010-12-24 06:30:00	 9327	  -1.185	  1
	-1 2010-09-17 00:15:01 2010-12-24 09:35:00	10934	 -1.0575       1.32

Elapsed: 00:00:00.02
09:36:55 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g8),MAX(jpy_g8)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G8) MAX(JPY_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-16 17:40:01 2010-12-24 06:30:00	       9386	 -1.185 	  1
	-1 2010-09-17 00:15:01 2010-12-24 09:35:00	      10971	-1.0575        1.32

Elapsed: 00:00:00.01
09:36:55 SQL> 
09:36:55 SQL> -- I need a copy of q15 attributes
09:36:55 SQL> 
09:36:55 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.04
09:36:55 SQL> CREATE TABLE jpy_att COMPRESS AS
09:36:55   2  SELECT
09:36:55   3  ydate
09:36:55   4  ,att00 jpy_att00
09:36:55   5  ,att01 jpy_att01
09:36:55   6  ,att02 jpy_att02
09:36:55   7  ,att03 jpy_att03
09:36:55   8  ,att04 jpy_att04
09:36:55   9  ,att05 jpy_att05
09:36:55  10  ,att06 jpy_att06
09:36:55  11  ,att07 jpy_att07
09:36:55  12  ,att08 jpy_att08
09:36:55  13  ,att09 jpy_att09
09:36:55  14  ,att10 jpy_att10
09:36:55  15  ,att11 jpy_att11
09:36:55  16  ,att12 jpy_att12
09:36:55  17  ,att13 jpy_att13
09:36:55  18  ,att14 jpy_att14
09:36:55  19  ,att15 jpy_att15
09:36:55  20  ,att16 jpy_att16
09:36:55  21  ,att17 jpy_att17
09:36:55  22  ,att18 jpy_att18
09:36:55  23  ,att19 jpy_att19
09:36:55  24  ,att20 jpy_att20
09:36:55  25  ,att21 jpy_att21
09:36:55  26  ,att22 jpy_att22
09:36:55  27  ,att23 jpy_att23
09:36:55  28  ,att24 jpy_att24
09:36:55  29  ,att25 jpy_att25
09:36:55  30  ,att26 jpy_att26
09:36:55  31  ,att27 jpy_att27
09:36:55  32  ,att28 jpy_att28
09:36:55  33  ,att29 jpy_att29
09:36:55  34  ,att30 jpy_att30
09:36:55  35  ,att31 jpy_att31
09:36:55  36  ,att32 jpy_att32
09:36:55  37  ,att33 jpy_att33
09:36:55  38  ,att34 jpy_att34
09:36:55  39  ,att35 jpy_att35
09:36:55  40  ,att36 jpy_att36
09:36:55  41  FROM q15
09:36:55  42  /

Table created.

Elapsed: 00:00:00.20
09:36:55 SQL> 
09:36:55 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
09:36:56 SQL> 
09:36:56 SQL> -- rpt
09:36:56 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     20357

Elapsed: 00:00:00.01
09:36:56 SQL> 
09:36:56 SQL> --
09:36:56 SQL> -- cad10.sql
09:36:56 SQL> --
09:36:56 SQL> 
09:36:56 SQL> -- Creates views and tables for backtesting a forex SVM strategy
09:36:56 SQL> 
09:36:56 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.31
09:36:56 SQL> 
09:36:56 SQL> -- I created di5min here:
09:36:56 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
09:36:56 SQL> 
09:36:56 SQL> CREATE OR REPLACE VIEW q11 AS
09:36:56   2  SELECT
09:36:56   3  pair
09:36:56   4  ,ydate
09:36:56   5  ,prdate
09:36:56   6  ,rownum rnum -- acts as t in my time-series
09:36:56   7  ,clse
09:36:56   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
09:36:56   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
09:36:56  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
09:36:56  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
09:36:56  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
09:36:56  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
09:36:56  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
09:36:56  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
09:36:56  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
09:36:56  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
09:36:56  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
09:36:56  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
09:36:56  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
09:36:56  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
09:36:56  22  FROM di5min WHERE pair LIKE'%cad%'
09:36:56  23  ORDER BY ydate
09:36:56  24  /

View created.

Elapsed: 00:00:00.05
09:36:56 SQL> 
09:36:56 SQL> -- rpt
09:36:56 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20738

Elapsed: 00:00:00.35
09:36:57 SQL> 
09:36:57 SQL> -- Calc deltas and gains
09:36:57 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.18
09:36:57 SQL> 
09:36:57 SQL> CREATE TABLE q13 COMPRESS AS
09:36:57   2  SELECT
09:36:57   3  pair
09:36:57   4  ,ydate
09:36:57   5  ,prdate
09:36:57   6  ,rnum
09:36:57   7  ,ld8
09:36:57   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
09:36:57   9  -- step by 2
09:36:57  10  ,clse-lg6  d06
09:36:57  11  ,lg6 -lg8  d68
09:36:57  12  ,lg8 -lg10 d810
09:36:57  13  ,lg10-lg12 d1012
09:36:57  14  ,lg12-lg14 d1214
09:36:57  15  ,lg14-lg16 d1416
09:36:57  16  ,lg16-lg18 d1618
09:36:57  17  -- step by 4
09:36:57  18  ,lg6 -lg10 d610
09:36:57  19  ,lg8 -lg12 d812
09:36:57  20  ,lg10-lg14 d1014
09:36:57  21  ,lg12-lg16 d1216
09:36:57  22  --
09:36:57  23  ,ABS(clse-lg6 )dc6
09:36:57  24  ,ABS(clse-lg8 )dc8
09:36:57  25  ,ABS(clse-lg10)dc10
09:36:57  26  ,ABS(clse-lg12)dc12
09:36:57  27  ,ABS(clse-lg14)dc14
09:36:57  28  ,ABS(clse-lg16)dc16
09:36:57  29  ,ABS(clse-lg18)dc18
09:36:57  30  ,ABS(clse-lg20)dc20
09:36:57  31  ,ABS(clse-lg22)dc22
09:36:57  32  ,(ld8-clse) ug8
09:36:57  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
09:36:57  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
09:36:57  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
09:36:57  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
09:36:57  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
09:36:57  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
09:36:57  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
09:36:57  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
09:36:57  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
09:36:57  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
09:36:57  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
09:36:57  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
09:36:57  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
09:36:57  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
09:36:57  47  ,0+TO_CHAR(ydate,'D')d
09:36:57  48  ,0+TO_CHAR(ydate,'W')w
09:36:57  49  -- mpm stands for minutes-past-midnight:
09:36:57  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
09:36:57  51  FROM q11
09:36:57  52  -- I dont want any NULL values from the LAG() functions:
09:36:57  53  WHERE lg32 > 0
09:36:57  54  ORDER BY pair,ydate
09:36:57  55  /

Table created.

Elapsed: 00:00:01.80
09:36:59 SQL> 
09:36:59 SQL> -- rpt
09:36:59 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9386
	-1	   10968

Elapsed: 00:00:00.03
09:36:59 SQL> 
09:36:59 SQL> -- Calc gains and ntiles
09:36:59 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.14
09:36:59 SQL> CREATE TABLE q15 COMPRESS AS
09:36:59   2  SELECT
09:36:59   3  pair
09:36:59   4  ,ydate
09:36:59   5  ,prdate -- Should be unique
09:36:59   6  ,trend -- +1 or -1
09:36:59   7  -- Use NTILE() to derive some attributes
09:36:59   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
09:36:59   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
09:36:59  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
09:36:59  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
09:36:59  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
09:36:59  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
09:36:59  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
09:36:59  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
09:36:59  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
09:36:59  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
09:36:59  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
09:36:59  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
09:36:59  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
09:36:59  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
09:36:59  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
09:36:59  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
09:36:59  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
09:36:59  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
09:36:59  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
09:36:59  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
09:36:59  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
09:36:59  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
09:36:59  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
09:36:59  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
09:36:59  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
09:36:59  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
09:36:59  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
09:36:59  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
09:36:59  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
09:36:59  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
09:36:59  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
09:36:59  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
09:36:59  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
09:36:59  41  ,hh    att32
09:36:59  42  ,d     att33
09:36:59  43  ,w     att34
09:36:59  44  ,mpm   att35
09:36:59  45  ,trend att36
09:36:59  46  ,ug8 g8
09:36:59  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
09:36:59  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
09:36:59  49  FROM q13
09:36:59  50  ORDER BY pair,ydate
09:36:59  51  /

Table created.

Elapsed: 00:00:05.37
09:37:04 SQL> 
09:37:04 SQL> -- rpt
09:37:04 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
09:37:04   2  GROUP BY pair,trend,gatt,gattn
09:37:04   3  ORDER BY pair,trend,gatt,gattn
09:37:04   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
usd_cad 	-1 nup nup -.00002756	    5687
usd_cad 	-1 nup up  -.00400673	    2629
usd_cad 	-1 up  nup .004683752	    2565
usd_cad 	-1			       0
usd_cad 	 1 nup nup -.00011458	    4639
usd_cad 	 1 nup up  -.00422651	    2756
usd_cad 	 1 up  nup .004613081	    1982
usd_cad 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
09:37:04 SQL> 
09:37:04 SQL> -- rpt
09:37:04 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-24 09:30:00

Elapsed: 00:00:00.02
09:37:04 SQL> 
09:37:04 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.18
09:37:04 SQL> CREATE TABLE modsrc COMPRESS AS
09:37:04   2  SELECT
09:37:04   3  pair
09:37:04   4  ,ydate
09:37:04   5  ,prdate
09:37:04   6  ,trend
09:37:04   7  ,g8
09:37:04   8  ,gatt
09:37:04   9  ,gattn
09:37:04  10  FROM q15
09:37:04  11  /

Table created.

Elapsed: 00:00:00.09
09:37:04 SQL> 
09:37:04 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.27
09:37:05 SQL> 
09:37:05 SQL> -- rpt
09:37:05 SQL> 
09:37:05 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20738

Elapsed: 00:00:00.36
09:37:05 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20354

Elapsed: 00:00:00.01
09:37:05 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20354

Elapsed: 00:00:00.00
09:37:05 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20354

Elapsed: 00:00:00.01
09:37:05 SQL> 
09:37:05 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
09:37:05 SQL> CREATE TABLE cad_ms10 COMPRESS AS
09:37:05   2  SELECT
09:37:05   3  ydate
09:37:05   4  ,trend cad_trend
09:37:05   5  ,g8    cad_g8
09:37:05   6  ,gatt  cad_gatt
09:37:05   7  ,gattn cad_gattn
09:37:05   8  FROM modsrc
09:37:05   9  /

Table created.

Elapsed: 00:00:00.07
09:37:05 SQL> 
09:37:05 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
09:37:05 SQL> 
09:37:05 SQL> -- rpt
09:37:05 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-16 17:40:01 2010-12-24 04:55:00	 9377	  -.0122      .0159
	-1 2010-09-16 20:05:01 2010-12-24 09:30:00	10881	 -.01105      .0176

Elapsed: 00:00:00.02
09:37:05 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g8),MAX(cad_g8)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G8) MAX(CAD_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-16 17:40:01 2010-12-24 04:55:00	       9386	 -.0122       .0159
	-1 2010-09-16 20:05:01 2010-12-24 09:30:00	      10968	-.01105       .0176

Elapsed: 00:00:00.01
09:37:05 SQL> 
09:37:05 SQL> -- I need a copy of q15 attributes
09:37:05 SQL> 
09:37:05 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.04
09:37:05 SQL> CREATE TABLE cad_att COMPRESS AS
09:37:05   2  SELECT
09:37:05   3  ydate
09:37:05   4  ,att00 cad_att00
09:37:05   5  ,att01 cad_att01
09:37:05   6  ,att02 cad_att02
09:37:05   7  ,att03 cad_att03
09:37:05   8  ,att04 cad_att04
09:37:05   9  ,att05 cad_att05
09:37:05  10  ,att06 cad_att06
09:37:05  11  ,att07 cad_att07
09:37:05  12  ,att08 cad_att08
09:37:05  13  ,att09 cad_att09
09:37:05  14  ,att10 cad_att10
09:37:05  15  ,att11 cad_att11
09:37:05  16  ,att12 cad_att12
09:37:05  17  ,att13 cad_att13
09:37:05  18  ,att14 cad_att14
09:37:05  19  ,att15 cad_att15
09:37:05  20  ,att16 cad_att16
09:37:05  21  ,att17 cad_att17
09:37:05  22  ,att18 cad_att18
09:37:05  23  ,att19 cad_att19
09:37:05  24  ,att20 cad_att20
09:37:05  25  ,att21 cad_att21
09:37:05  26  ,att22 cad_att22
09:37:05  27  ,att23 cad_att23
09:37:05  28  ,att24 cad_att24
09:37:05  29  ,att25 cad_att25
09:37:05  30  ,att26 cad_att26
09:37:05  31  ,att27 cad_att27
09:37:05  32  ,att28 cad_att28
09:37:05  33  ,att29 cad_att29
09:37:05  34  ,att30 cad_att30
09:37:05  35  ,att31 cad_att31
09:37:05  36  ,att32 cad_att32
09:37:05  37  ,att33 cad_att33
09:37:05  38  ,att34 cad_att34
09:37:05  39  ,att35 cad_att35
09:37:05  40  ,att36 cad_att36
09:37:05  41  FROM q15
09:37:05  42  /

Table created.

Elapsed: 00:00:00.16
09:37:06 SQL> 
09:37:06 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
09:37:06 SQL> 
09:37:06 SQL> -- rpt
09:37:06 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     20354

Elapsed: 00:00:00.01
09:37:06 SQL> 
09:37:06 SQL> --
09:37:06 SQL> -- chf10.sql
09:37:06 SQL> --
09:37:06 SQL> 
09:37:06 SQL> -- Creates views and tables for backtesting a forex SVM strategy
09:37:06 SQL> 
09:37:06 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.43
09:37:06 SQL> 
09:37:06 SQL> -- I created di5min here:
09:37:06 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
09:37:06 SQL> 
09:37:06 SQL> CREATE OR REPLACE VIEW q11 AS
09:37:06   2  SELECT
09:37:06   3  pair
09:37:06   4  ,ydate
09:37:06   5  ,prdate
09:37:06   6  ,rownum rnum -- acts as t in my time-series
09:37:06   7  ,clse
09:37:06   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
09:37:06   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
09:37:06  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
09:37:06  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
09:37:06  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
09:37:06  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
09:37:06  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
09:37:06  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
09:37:06  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
09:37:06  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
09:37:06  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
09:37:06  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
09:37:06  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
09:37:06  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
09:37:06  22  FROM di5min WHERE pair LIKE'%chf%'
09:37:06  23  ORDER BY ydate
09:37:06  24  /

View created.

Elapsed: 00:00:00.05
09:37:07 SQL> 
09:37:07 SQL> -- rpt
09:37:07 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20742

Elapsed: 00:00:00.34
09:37:07 SQL> 
09:37:07 SQL> -- Calc deltas and gains
09:37:07 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.21
09:37:07 SQL> 
09:37:07 SQL> CREATE TABLE q13 COMPRESS AS
09:37:07   2  SELECT
09:37:07   3  pair
09:37:07   4  ,ydate
09:37:07   5  ,prdate
09:37:07   6  ,rnum
09:37:07   7  ,ld8
09:37:07   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
09:37:07   9  -- step by 2
09:37:07  10  ,clse-lg6  d06
09:37:07  11  ,lg6 -lg8  d68
09:37:07  12  ,lg8 -lg10 d810
09:37:07  13  ,lg10-lg12 d1012
09:37:07  14  ,lg12-lg14 d1214
09:37:07  15  ,lg14-lg16 d1416
09:37:07  16  ,lg16-lg18 d1618
09:37:07  17  -- step by 4
09:37:07  18  ,lg6 -lg10 d610
09:37:07  19  ,lg8 -lg12 d812
09:37:07  20  ,lg10-lg14 d1014
09:37:07  21  ,lg12-lg16 d1216
09:37:07  22  --
09:37:07  23  ,ABS(clse-lg6 )dc6
09:37:07  24  ,ABS(clse-lg8 )dc8
09:37:07  25  ,ABS(clse-lg10)dc10
09:37:07  26  ,ABS(clse-lg12)dc12
09:37:07  27  ,ABS(clse-lg14)dc14
09:37:07  28  ,ABS(clse-lg16)dc16
09:37:07  29  ,ABS(clse-lg18)dc18
09:37:07  30  ,ABS(clse-lg20)dc20
09:37:07  31  ,ABS(clse-lg22)dc22
09:37:07  32  ,(ld8-clse) ug8
09:37:07  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
09:37:07  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
09:37:07  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
09:37:07  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
09:37:07  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
09:37:07  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
09:37:07  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
09:37:07  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
09:37:07  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
09:37:07  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
09:37:07  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
09:37:07  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
09:37:07  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
09:37:07  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
09:37:07  47  ,0+TO_CHAR(ydate,'D')d
09:37:07  48  ,0+TO_CHAR(ydate,'W')w
09:37:07  49  -- mpm stands for minutes-past-midnight:
09:37:07  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
09:37:07  51  FROM q11
09:37:07  52  -- I dont want any NULL values from the LAG() functions:
09:37:07  53  WHERE lg32 > 0
09:37:07  54  ORDER BY pair,ydate
09:37:07  55  /

Table created.

Elapsed: 00:00:01.77
09:37:09 SQL> 
09:37:09 SQL> -- rpt
09:37:09 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9555
	-1	   10803

Elapsed: 00:00:00.03
09:37:09 SQL> 
09:37:09 SQL> -- Calc gains and ntiles
09:37:09 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.18
09:37:09 SQL> CREATE TABLE q15 COMPRESS AS
09:37:09   2  SELECT
09:37:09   3  pair
09:37:09   4  ,ydate
09:37:09   5  ,prdate -- Should be unique
09:37:09   6  ,trend -- +1 or -1
09:37:09   7  -- Use NTILE() to derive some attributes
09:37:09   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
09:37:09   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
09:37:09  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
09:37:09  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
09:37:09  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
09:37:09  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
09:37:09  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
09:37:09  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
09:37:09  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
09:37:09  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
09:37:09  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
09:37:09  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
09:37:09  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
09:37:09  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
09:37:09  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
09:37:09  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
09:37:09  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
09:37:09  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
09:37:09  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
09:37:09  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
09:37:09  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
09:37:09  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
09:37:09  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
09:37:09  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
09:37:09  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
09:37:09  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
09:37:09  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
09:37:09  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
09:37:09  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
09:37:09  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
09:37:09  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
09:37:09  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
09:37:09  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
09:37:09  41  ,hh    att32
09:37:09  42  ,d     att33
09:37:09  43  ,w     att34
09:37:09  44  ,mpm   att35
09:37:09  45  ,trend att36
09:37:09  46  ,ug8 g8
09:37:09  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
09:37:09  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
09:37:09  49  FROM q13
09:37:09  50  ORDER BY pair,ydate
09:37:09  51  /

Table created.

Elapsed: 00:00:05.63
09:37:15 SQL> 
09:37:15 SQL> -- rpt
09:37:15 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
09:37:15   2  GROUP BY pair,trend,gatt,gattn
09:37:15   3  ORDER BY pair,trend,gatt,gattn
09:37:15   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
usd_chf 	-1 nup nup .000024507	    4914
usd_chf 	-1 nup up  -.00495047	    3141
usd_chf 	-1 up  nup .005059382	    2678
usd_chf 	-1			       0
usd_chf 	 1 nup nup -.00002415	    4520
usd_chf 	 1 nup up  -.00452926	    2921
usd_chf 	 1 up  nup   .0046493	    2088
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
09:37:15 SQL> 
09:37:15 SQL> -- rpt
09:37:15 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-24 09:35:00

Elapsed: 00:00:00.01
09:37:15 SQL> 
09:37:15 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.23
09:37:15 SQL> CREATE TABLE modsrc COMPRESS AS
09:37:15   2  SELECT
09:37:15   3  pair
09:37:15   4  ,ydate
09:37:15   5  ,prdate
09:37:15   6  ,trend
09:37:15   7  ,g8
09:37:15   8  ,gatt
09:37:15   9  ,gattn
09:37:15  10  FROM q15
09:37:15  11  /

Table created.

Elapsed: 00:00:00.18
09:37:15 SQL> 
09:37:15 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.25
09:37:15 SQL> 
09:37:15 SQL> -- rpt
09:37:15 SQL> 
09:37:15 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20742

Elapsed: 00:00:00.34
09:37:16 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20358

Elapsed: 00:00:00.01
09:37:16 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20358

Elapsed: 00:00:00.00
09:37:16 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20358

Elapsed: 00:00:00.01
09:37:16 SQL> 
09:37:16 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
09:37:16 SQL> CREATE TABLE chf_ms10 COMPRESS AS
09:37:16   2  SELECT
09:37:16   3  ydate
09:37:16   4  ,trend chf_trend
09:37:16   5  ,g8    chf_g8
09:37:16   6  ,gatt  chf_gatt
09:37:16   7  ,gattn chf_gattn
09:37:16   8  FROM modsrc
09:37:16   9  /

Table created.

Elapsed: 00:00:00.06
09:37:16 SQL> 
09:37:16 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
09:37:16 SQL> 
09:37:16 SQL> -- rpt
09:37:16 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-16 17:40:01 2010-12-24 09:35:00	 9529	 -.01775      .0155
	-1 2010-09-16 20:55:01 2010-12-24 07:25:00	10733	 -.01825     .01545

Elapsed: 00:00:00.02
09:37:16 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g8),MAX(chf_g8)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G8) MAX(CHF_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-16 17:40:01 2010-12-24 09:35:00	       9555	-.01775       .0155
	-1 2010-09-16 20:55:01 2010-12-24 07:25:00	      10803	-.01825      .01545

Elapsed: 00:00:00.01
09:37:16 SQL> 
09:37:16 SQL> -- I need a copy of q15 attributes
09:37:16 SQL> 
09:37:16 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.03
09:37:16 SQL> CREATE TABLE chf_att COMPRESS AS
09:37:16   2  SELECT
09:37:16   3  ydate
09:37:16   4  ,att00 chf_att00
09:37:16   5  ,att01 chf_att01
09:37:16   6  ,att02 chf_att02
09:37:16   7  ,att03 chf_att03
09:37:16   8  ,att04 chf_att04
09:37:16   9  ,att05 chf_att05
09:37:16  10  ,att06 chf_att06
09:37:16  11  ,att07 chf_att07
09:37:16  12  ,att08 chf_att08
09:37:16  13  ,att09 chf_att09
09:37:16  14  ,att10 chf_att10
09:37:16  15  ,att11 chf_att11
09:37:16  16  ,att12 chf_att12
09:37:16  17  ,att13 chf_att13
09:37:16  18  ,att14 chf_att14
09:37:16  19  ,att15 chf_att15
09:37:16  20  ,att16 chf_att16
09:37:16  21  ,att17 chf_att17
09:37:16  22  ,att18 chf_att18
09:37:16  23  ,att19 chf_att19
09:37:16  24  ,att20 chf_att20
09:37:16  25  ,att21 chf_att21
09:37:16  26  ,att22 chf_att22
09:37:16  27  ,att23 chf_att23
09:37:16  28  ,att24 chf_att24
09:37:16  29  ,att25 chf_att25
09:37:16  30  ,att26 chf_att26
09:37:16  31  ,att27 chf_att27
09:37:16  32  ,att28 chf_att28
09:37:16  33  ,att29 chf_att29
09:37:16  34  ,att30 chf_att30
09:37:16  35  ,att31 chf_att31
09:37:16  36  ,att32 chf_att32
09:37:16  37  ,att33 chf_att33
09:37:16  38  ,att34 chf_att34
09:37:16  39  ,att35 chf_att35
09:37:16  40  ,att36 chf_att36
09:37:16  41  FROM q15
09:37:16  42  /

Table created.

Elapsed: 00:00:00.17
09:37:16 SQL> 
09:37:16 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.44
09:37:17 SQL> 
09:37:17 SQL> -- rpt
09:37:17 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     20358

Elapsed: 00:00:00.00
09:37:17 SQL> 
09:37:17 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
