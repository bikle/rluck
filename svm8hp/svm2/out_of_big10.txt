
SQL*Plus: Release 11.2.0.1.0 Production on Tue Dec 21 18:28:51 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

18:28:51 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
18:28:51 SQL> 18:28:51 SQL> --
18:28:51 SQL> -- eur10.sql
18:28:51 SQL> --
18:28:51 SQL> 
18:28:51 SQL> -- Creates views and tables for backtesting a forex SVM strategy
18:28:51 SQL> 
18:28:51 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.02
18:28:51 SQL> 
18:28:51 SQL> -- I created di5min here:
18:28:51 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
18:28:51 SQL> 
18:28:51 SQL> CREATE OR REPLACE VIEW q11 AS
18:28:51   2  SELECT
18:28:51   3  pair
18:28:51   4  ,ydate
18:28:51   5  ,prdate
18:28:51   6  ,rownum rnum -- acts as t in my time-series
18:28:51   7  ,clse
18:28:51   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
18:28:51   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
18:28:51  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
18:28:51  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
18:28:51  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
18:28:51  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
18:28:51  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
18:28:51  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
18:28:51  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
18:28:51  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
18:28:51  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
18:28:51  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
18:28:51  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
18:28:51  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
18:28:51  22  FROM di5min WHERE pair LIKE'%eur%'
18:28:51  23  ORDER BY ydate
18:28:51  24  /

View created.

Elapsed: 00:00:00.05
18:28:51 SQL> 
18:28:51 SQL> -- rpt
18:28:51 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20776

Elapsed: 00:00:00.36
18:28:52 SQL> 
18:28:52 SQL> -- Calc deltas and gains
18:28:52 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.04
18:28:52 SQL> 
18:28:52 SQL> CREATE TABLE q13 COMPRESS AS
18:28:52   2  SELECT
18:28:52   3  pair
18:28:52   4  ,ydate
18:28:52   5  ,prdate
18:28:52   6  ,rnum
18:28:52   7  ,ld8
18:28:52   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
18:28:52   9  -- step by 2
18:28:52  10  ,clse-lg6  d06
18:28:52  11  ,lg6 -lg8  d68
18:28:52  12  ,lg8 -lg10 d810
18:28:52  13  ,lg10-lg12 d1012
18:28:52  14  ,lg12-lg14 d1214
18:28:52  15  ,lg14-lg16 d1416
18:28:52  16  ,lg16-lg18 d1618
18:28:52  17  -- step by 4
18:28:52  18  ,lg6 -lg10 d610
18:28:52  19  ,lg8 -lg12 d812
18:28:52  20  ,lg10-lg14 d1014
18:28:52  21  ,lg12-lg16 d1216
18:28:52  22  --
18:28:52  23  ,ABS(clse-lg6 )dc6
18:28:52  24  ,ABS(clse-lg8 )dc8
18:28:52  25  ,ABS(clse-lg10)dc10
18:28:52  26  ,ABS(clse-lg12)dc12
18:28:52  27  ,ABS(clse-lg14)dc14
18:28:52  28  ,ABS(clse-lg16)dc16
18:28:52  29  ,ABS(clse-lg18)dc18
18:28:52  30  ,ABS(clse-lg20)dc20
18:28:52  31  ,ABS(clse-lg22)dc22
18:28:52  32  ,(ld8-clse) ug8
18:28:52  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
18:28:52  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
18:28:52  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
18:28:52  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
18:28:52  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
18:28:52  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
18:28:52  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
18:28:52  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
18:28:52  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
18:28:52  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
18:28:52  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
18:28:52  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
18:28:52  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
18:28:52  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
18:28:52  47  ,0+TO_CHAR(ydate,'D')d
18:28:52  48  ,0+TO_CHAR(ydate,'W')w
18:28:52  49  -- mpm stands for minutes-past-midnight:
18:28:52  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
18:28:52  51  FROM q11
18:28:52  52  -- I dont want any NULL values from the LAG() functions:
18:28:52  53  WHERE lg32 > 0
18:28:52  54  ORDER BY pair,ydate
18:28:52  55  /

Table created.

Elapsed: 00:00:01.99
18:28:54 SQL> 
18:28:54 SQL> -- rpt
18:28:54 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10144
	-1	   10248

Elapsed: 00:00:00.04
18:28:54 SQL> 
18:28:54 SQL> -- Calc gains and ntiles
18:28:54 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.04
18:28:54 SQL> CREATE TABLE q15 COMPRESS AS
18:28:54   2  SELECT
18:28:54   3  pair
18:28:54   4  ,ydate
18:28:54   5  ,prdate -- Should be unique
18:28:54   6  ,trend -- +1 or -1
18:28:54   7  -- Use NTILE() to derive some attributes
18:28:54   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
18:28:54   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
18:28:54  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
18:28:54  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
18:28:54  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
18:28:54  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
18:28:54  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
18:28:54  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
18:28:54  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
18:28:54  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
18:28:54  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
18:28:54  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
18:28:54  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
18:28:54  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
18:28:54  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
18:28:54  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
18:28:54  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
18:28:54  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
18:28:54  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
18:28:54  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
18:28:54  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
18:28:54  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
18:28:54  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
18:28:54  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
18:28:54  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
18:28:54  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
18:28:54  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
18:28:54  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
18:28:54  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
18:28:54  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
18:28:54  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
18:28:54  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
18:28:54  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
18:28:54  41  ,hh    att32
18:28:54  42  ,d     att33
18:28:54  43  ,w     att34
18:28:54  44  ,mpm   att35
18:28:54  45  ,trend att36
18:28:54  46  ,ug8 g8
18:28:54  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
18:28:54  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
18:28:54  49  FROM q13
18:28:54  50  ORDER BY pair,ydate
18:28:54  51  /

Table created.

Elapsed: 00:00:05.39
18:28:59 SQL> 
18:28:59 SQL> -- rpt
18:28:59 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
18:28:59   2  GROUP BY pair,trend,gatt,gattn
18:28:59   3  ORDER BY pair,trend,gatt,gattn
18:28:59   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
eur_usd 	-1 nup nup .000012723	    2971
eur_usd 	-1 nup up  -.00601155	    3626
eur_usd 	-1 up  nup .006072519	    3562
eur_usd 	-1			       0
eur_usd 	 1 nup nup -.00010801	    3039
eur_usd 	 1 nup up  -.00622699	    3403
eur_usd 	 1 up  nup .006588907	    3695
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
18:28:59 SQL> 
18:28:59 SQL> -- rpt
18:28:59 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-21 18:25:00

Elapsed: 00:00:00.01
18:28:59 SQL> 
18:28:59 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.04
18:28:59 SQL> CREATE TABLE modsrc COMPRESS AS
18:28:59   2  SELECT
18:28:59   3  pair
18:28:59   4  ,ydate
18:28:59   5  ,prdate
18:28:59   6  ,trend
18:28:59   7  ,g8
18:28:59   8  ,gatt
18:28:59   9  ,gattn
18:28:59  10  FROM q15
18:28:59  11  /

Table created.

Elapsed: 00:00:00.09
18:28:59 SQL> 
18:28:59 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
18:29:00 SQL> 
18:29:00 SQL> -- rpt
18:29:00 SQL> 
18:29:00 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20776

Elapsed: 00:00:00.34
18:29:00 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20392

Elapsed: 00:00:00.01
18:29:00 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20392

Elapsed: 00:00:00.00
18:29:00 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20392

Elapsed: 00:00:00.01
18:29:00 SQL> 
18:29:00 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
18:29:00 SQL> CREATE TABLE eur_ms10 COMPRESS AS
18:29:00   2  SELECT
18:29:00   3  ydate
18:29:00   4  ,trend eur_trend
18:29:00   5  ,g8    eur_g8
18:29:00   6  ,gatt  eur_gatt
18:29:00   7  ,gattn eur_gattn
18:29:00   8  FROM modsrc
18:29:00   9  /

Table created.

Elapsed: 00:00:00.07
18:29:00 SQL> 
18:29:00 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
18:29:00 SQL> 
18:29:00 SQL> -- rpt
18:29:00 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 05:00:01 2010-12-21 14:05:00	10137	  -.0218     .02165
	-1 2010-09-14 04:55:01 2010-12-21 18:25:00	10159	 -.02085      .0196

Elapsed: 00:00:00.02
18:29:00 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g8),MAX(eur_g8)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G8) MAX(EUR_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 05:00:01 2010-12-21 14:05:00	      10144	 -.0218      .02165
	-1 2010-09-14 04:55:01 2010-12-21 18:25:00	      10248	-.02085       .0196

Elapsed: 00:00:00.02
18:29:00 SQL> 
18:29:00 SQL> -- I need a copy of q15 attributes
18:29:00 SQL> 
18:29:00 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.04
18:29:00 SQL> CREATE TABLE eur_att COMPRESS AS
18:29:00   2  SELECT
18:29:00   3  ydate
18:29:00   4  ,att00 eur_att00
18:29:00   5  ,att01 eur_att01
18:29:00   6  ,att02 eur_att02
18:29:00   7  ,att03 eur_att03
18:29:00   8  ,att04 eur_att04
18:29:00   9  ,att05 eur_att05
18:29:00  10  ,att06 eur_att06
18:29:00  11  ,att07 eur_att07
18:29:00  12  ,att08 eur_att08
18:29:00  13  ,att09 eur_att09
18:29:00  14  ,att10 eur_att10
18:29:00  15  ,att11 eur_att11
18:29:00  16  ,att12 eur_att12
18:29:00  17  ,att13 eur_att13
18:29:00  18  ,att14 eur_att14
18:29:00  19  ,att15 eur_att15
18:29:00  20  ,att16 eur_att16
18:29:00  21  ,att17 eur_att17
18:29:00  22  ,att18 eur_att18
18:29:00  23  ,att19 eur_att19
18:29:00  24  ,att20 eur_att20
18:29:00  25  ,att21 eur_att21
18:29:00  26  ,att22 eur_att22
18:29:00  27  ,att23 eur_att23
18:29:00  28  ,att24 eur_att24
18:29:00  29  ,att25 eur_att25
18:29:00  30  ,att26 eur_att26
18:29:00  31  ,att27 eur_att27
18:29:00  32  ,att28 eur_att28
18:29:00  33  ,att29 eur_att29
18:29:00  34  ,att30 eur_att30
18:29:00  35  ,att31 eur_att31
18:29:00  36  ,att32 eur_att32
18:29:00  37  ,att33 eur_att33
18:29:00  38  ,att34 eur_att34
18:29:00  39  ,att35 eur_att35
18:29:00  40  ,att36 eur_att36
18:29:00  41  FROM q15
18:29:00  42  /

Table created.

Elapsed: 00:00:00.18
18:29:00 SQL> 
18:29:00 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.46
18:29:01 SQL> 
18:29:01 SQL> -- rpt
18:29:01 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     20392

Elapsed: 00:00:00.00
18:29:01 SQL> 
18:29:01 SQL> --
18:29:01 SQL> -- aud10.sql
18:29:01 SQL> --
18:29:01 SQL> 
18:29:01 SQL> -- Creates views and tables for backtesting a forex SVM strategy
18:29:01 SQL> 
18:29:01 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.33
18:29:01 SQL> 
18:29:01 SQL> -- I created di5min here:
18:29:01 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
18:29:01 SQL> 
18:29:01 SQL> CREATE OR REPLACE VIEW q11 AS
18:29:01   2  SELECT
18:29:01   3  pair
18:29:01   4  ,ydate
18:29:01   5  ,prdate
18:29:01   6  ,rownum rnum -- acts as t in my time-series
18:29:01   7  ,clse
18:29:01   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
18:29:01   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
18:29:01  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
18:29:01  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
18:29:01  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
18:29:01  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
18:29:01  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
18:29:01  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
18:29:01  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
18:29:01  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
18:29:01  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
18:29:01  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
18:29:01  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
18:29:01  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
18:29:01  22  FROM di5min WHERE pair LIKE'%aud%'
18:29:01  23  ORDER BY ydate
18:29:01  24  /

View created.

Elapsed: 00:00:00.04
18:29:01 SQL> 
18:29:01 SQL> -- rpt
18:29:01 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20773

Elapsed: 00:00:00.34
18:29:02 SQL> 
18:29:02 SQL> -- Calc deltas and gains
18:29:02 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.19
18:29:02 SQL> 
18:29:02 SQL> CREATE TABLE q13 COMPRESS AS
18:29:02   2  SELECT
18:29:02   3  pair
18:29:02   4  ,ydate
18:29:02   5  ,prdate
18:29:02   6  ,rnum
18:29:02   7  ,ld8
18:29:02   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
18:29:02   9  -- step by 2
18:29:02  10  ,clse-lg6  d06
18:29:02  11  ,lg6 -lg8  d68
18:29:02  12  ,lg8 -lg10 d810
18:29:02  13  ,lg10-lg12 d1012
18:29:02  14  ,lg12-lg14 d1214
18:29:02  15  ,lg14-lg16 d1416
18:29:02  16  ,lg16-lg18 d1618
18:29:02  17  -- step by 4
18:29:02  18  ,lg6 -lg10 d610
18:29:02  19  ,lg8 -lg12 d812
18:29:02  20  ,lg10-lg14 d1014
18:29:02  21  ,lg12-lg16 d1216
18:29:02  22  --
18:29:02  23  ,ABS(clse-lg6 )dc6
18:29:02  24  ,ABS(clse-lg8 )dc8
18:29:02  25  ,ABS(clse-lg10)dc10
18:29:02  26  ,ABS(clse-lg12)dc12
18:29:02  27  ,ABS(clse-lg14)dc14
18:29:02  28  ,ABS(clse-lg16)dc16
18:29:02  29  ,ABS(clse-lg18)dc18
18:29:02  30  ,ABS(clse-lg20)dc20
18:29:02  31  ,ABS(clse-lg22)dc22
18:29:02  32  ,(ld8-clse) ug8
18:29:02  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
18:29:02  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
18:29:02  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
18:29:02  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
18:29:02  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
18:29:02  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
18:29:02  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
18:29:02  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
18:29:02  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
18:29:02  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
18:29:02  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
18:29:02  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
18:29:02  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
18:29:02  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
18:29:02  47  ,0+TO_CHAR(ydate,'D')d
18:29:02  48  ,0+TO_CHAR(ydate,'W')w
18:29:02  49  -- mpm stands for minutes-past-midnight:
18:29:02  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
18:29:02  51  FROM q11
18:29:02  52  -- I dont want any NULL values from the LAG() functions:
18:29:02  53  WHERE lg32 > 0
18:29:02  54  ORDER BY pair,ydate
18:29:02  55  /

Table created.

Elapsed: 00:00:01.73
18:29:04 SQL> 
18:29:04 SQL> -- rpt
18:29:04 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10697
	-1	    9692

Elapsed: 00:00:00.03
18:29:04 SQL> 
18:29:04 SQL> -- Calc gains and ntiles
18:29:04 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.17
18:29:04 SQL> CREATE TABLE q15 COMPRESS AS
18:29:04   2  SELECT
18:29:04   3  pair
18:29:04   4  ,ydate
18:29:04   5  ,prdate -- Should be unique
18:29:04   6  ,trend -- +1 or -1
18:29:04   7  -- Use NTILE() to derive some attributes
18:29:04   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
18:29:04   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
18:29:04  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
18:29:04  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
18:29:04  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
18:29:04  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
18:29:04  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
18:29:04  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
18:29:04  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
18:29:04  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
18:29:04  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
18:29:04  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
18:29:04  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
18:29:04  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
18:29:04  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
18:29:04  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
18:29:04  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
18:29:04  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
18:29:04  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
18:29:04  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
18:29:04  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
18:29:04  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
18:29:04  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
18:29:04  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
18:29:04  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
18:29:04  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
18:29:04  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
18:29:04  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
18:29:04  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
18:29:04  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
18:29:04  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
18:29:04  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
18:29:04  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
18:29:04  41  ,hh    att32
18:29:04  42  ,d     att33
18:29:04  43  ,w     att34
18:29:04  44  ,mpm   att35
18:29:04  45  ,trend att36
18:29:04  46  ,ug8 g8
18:29:04  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
18:29:04  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
18:29:04  49  FROM q13
18:29:04  50  ORDER BY pair,ydate
18:29:04  51  /

Table created.

Elapsed: 00:00:05.39
18:29:09 SQL> 
18:29:09 SQL> -- rpt
18:29:09 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
18:29:09   2  GROUP BY pair,trend,gatt,gattn
18:29:09   3  ORDER BY pair,trend,gatt,gattn
18:29:09   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
aud_usd 	-1 nup nup .000018709	    3628
aud_usd 	-1 nup up  -.00519991	    2596
aud_usd 	-1 up  nup .005254841	    3442
aud_usd 	-1			       0
aud_usd 	 1 nup nup .000018764	    4099
aud_usd 	 1 nup up  -.00495998	    3189
aud_usd 	 1 up  nup .005161059	    3339
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
18:29:09 SQL> 
18:29:09 SQL> -- rpt
18:29:09 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-21 18:25:00

Elapsed: 00:00:00.02
18:29:09 SQL> 
18:29:09 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.15
18:29:09 SQL> CREATE TABLE modsrc COMPRESS AS
18:29:09   2  SELECT
18:29:09   3  pair
18:29:09   4  ,ydate
18:29:09   5  ,prdate
18:29:09   6  ,trend
18:29:09   7  ,g8
18:29:09   8  ,gatt
18:29:09   9  ,gattn
18:29:09  10  FROM q15
18:29:09  11  /

Table created.

Elapsed: 00:00:00.08
18:29:09 SQL> 
18:29:09 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
18:29:10 SQL> 
18:29:10 SQL> -- rpt
18:29:10 SQL> 
18:29:10 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20773

Elapsed: 00:00:00.36
18:29:10 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20389

Elapsed: 00:00:00.01
18:29:10 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20389

Elapsed: 00:00:00.00
18:29:10 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20389

Elapsed: 00:00:00.01
18:29:10 SQL> 
18:29:10 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
18:29:10 SQL> CREATE TABLE aud_ms10 COMPRESS AS
18:29:10   2  SELECT
18:29:10   3  ydate
18:29:10   4  ,trend aud_trend
18:29:10   5  ,g8    aud_g8
18:29:10   6  ,gatt  aud_gatt
18:29:10   7  ,gattn aud_gattn
18:29:10   8  FROM modsrc
18:29:10   9  /

Table created.

Elapsed: 00:00:00.06
18:29:10 SQL> 
18:29:10 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
18:29:10 SQL> 
18:29:10 SQL> -- rpt
18:29:10 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 07:10:01 2010-12-21 18:25:00	10627	  -.0203      .0136
	-1 2010-09-14 04:55:01 2010-12-21 15:25:00	 9666	  -.0196      .0148

Elapsed: 00:00:00.02
18:29:10 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g8),MAX(aud_g8)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G8) MAX(AUD_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 07:10:01 2010-12-21 18:25:00	      10697	 -.0203       .0136
	-1 2010-09-14 04:55:01 2010-12-21 15:25:00	       9692	 -.0196       .0148

Elapsed: 00:00:00.01
18:29:10 SQL> 
18:29:10 SQL> -- I need a copy of q15 attributes
18:29:10 SQL> 
18:29:10 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.03
18:29:10 SQL> CREATE TABLE aud_att COMPRESS AS
18:29:10   2  SELECT
18:29:10   3  ydate
18:29:10   4  ,att00 aud_att00
18:29:10   5  ,att01 aud_att01
18:29:10   6  ,att02 aud_att02
18:29:10   7  ,att03 aud_att03
18:29:10   8  ,att04 aud_att04
18:29:10   9  ,att05 aud_att05
18:29:10  10  ,att06 aud_att06
18:29:10  11  ,att07 aud_att07
18:29:10  12  ,att08 aud_att08
18:29:10  13  ,att09 aud_att09
18:29:10  14  ,att10 aud_att10
18:29:10  15  ,att11 aud_att11
18:29:10  16  ,att12 aud_att12
18:29:10  17  ,att13 aud_att13
18:29:10  18  ,att14 aud_att14
18:29:10  19  ,att15 aud_att15
18:29:10  20  ,att16 aud_att16
18:29:10  21  ,att17 aud_att17
18:29:10  22  ,att18 aud_att18
18:29:10  23  ,att19 aud_att19
18:29:10  24  ,att20 aud_att20
18:29:10  25  ,att21 aud_att21
18:29:10  26  ,att22 aud_att22
18:29:10  27  ,att23 aud_att23
18:29:10  28  ,att24 aud_att24
18:29:10  29  ,att25 aud_att25
18:29:10  30  ,att26 aud_att26
18:29:10  31  ,att27 aud_att27
18:29:10  32  ,att28 aud_att28
18:29:10  33  ,att29 aud_att29
18:29:10  34  ,att30 aud_att30
18:29:10  35  ,att31 aud_att31
18:29:10  36  ,att32 aud_att32
18:29:10  37  ,att33 aud_att33
18:29:10  38  ,att34 aud_att34
18:29:10  39  ,att35 aud_att35
18:29:10  40  ,att36 aud_att36
18:29:10  41  FROM q15
18:29:10  42  /

Table created.

Elapsed: 00:00:00.16
18:29:10 SQL> 
18:29:10 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
18:29:11 SQL> 
18:29:11 SQL> -- rpt
18:29:11 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     20389

Elapsed: 00:00:00.01
18:29:11 SQL> 
18:29:11 SQL> --
18:29:11 SQL> -- gbp10.sql
18:29:11 SQL> --
18:29:11 SQL> 
18:29:11 SQL> -- Creates views and tables for backtesting a forex SVM strategy
18:29:11 SQL> 
18:29:11 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.60
18:29:12 SQL> 
18:29:12 SQL> -- I created di5min here:
18:29:12 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
18:29:12 SQL> 
18:29:12 SQL> CREATE OR REPLACE VIEW q11 AS
18:29:12   2  SELECT
18:29:12   3  pair
18:29:12   4  ,ydate
18:29:12   5  ,prdate
18:29:12   6  ,rownum rnum -- acts as t in my time-series
18:29:12   7  ,clse
18:29:12   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
18:29:12   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
18:29:12  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
18:29:12  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
18:29:12  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
18:29:12  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
18:29:12  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
18:29:12  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
18:29:12  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
18:29:12  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
18:29:12  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
18:29:12  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
18:29:12  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
18:29:12  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
18:29:12  22  FROM di5min WHERE pair LIKE'%gbp%'
18:29:12  23  ORDER BY ydate
18:29:12  24  /

View created.

Elapsed: 00:00:00.04
18:29:12 SQL> 
18:29:12 SQL> -- rpt
18:29:12 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20775

Elapsed: 00:00:00.36
18:29:12 SQL> 
18:29:12 SQL> -- Calc deltas and gains
18:29:12 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.24
18:29:12 SQL> 
18:29:12 SQL> CREATE TABLE q13 COMPRESS AS
18:29:12   2  SELECT
18:29:12   3  pair
18:29:12   4  ,ydate
18:29:12   5  ,prdate
18:29:12   6  ,rnum
18:29:12   7  ,ld8
18:29:12   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
18:29:12   9  -- step by 2
18:29:12  10  ,clse-lg6  d06
18:29:12  11  ,lg6 -lg8  d68
18:29:12  12  ,lg8 -lg10 d810
18:29:12  13  ,lg10-lg12 d1012
18:29:12  14  ,lg12-lg14 d1214
18:29:12  15  ,lg14-lg16 d1416
18:29:12  16  ,lg16-lg18 d1618
18:29:12  17  -- step by 4
18:29:12  18  ,lg6 -lg10 d610
18:29:12  19  ,lg8 -lg12 d812
18:29:12  20  ,lg10-lg14 d1014
18:29:12  21  ,lg12-lg16 d1216
18:29:12  22  --
18:29:12  23  ,ABS(clse-lg6 )dc6
18:29:12  24  ,ABS(clse-lg8 )dc8
18:29:12  25  ,ABS(clse-lg10)dc10
18:29:12  26  ,ABS(clse-lg12)dc12
18:29:12  27  ,ABS(clse-lg14)dc14
18:29:12  28  ,ABS(clse-lg16)dc16
18:29:12  29  ,ABS(clse-lg18)dc18
18:29:12  30  ,ABS(clse-lg20)dc20
18:29:12  31  ,ABS(clse-lg22)dc22
18:29:12  32  ,(ld8-clse) ug8
18:29:12  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
18:29:12  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
18:29:12  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
18:29:12  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
18:29:12  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
18:29:12  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
18:29:12  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
18:29:12  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
18:29:12  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
18:29:12  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
18:29:12  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
18:29:12  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
18:29:12  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
18:29:12  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
18:29:12  47  ,0+TO_CHAR(ydate,'D')d
18:29:12  48  ,0+TO_CHAR(ydate,'W')w
18:29:12  49  -- mpm stands for minutes-past-midnight:
18:29:12  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
18:29:12  51  FROM q11
18:29:12  52  -- I dont want any NULL values from the LAG() functions:
18:29:12  53  WHERE lg32 > 0
18:29:12  54  ORDER BY pair,ydate
18:29:12  55  /

Table created.

Elapsed: 00:00:01.71
18:29:14 SQL> 
18:29:14 SQL> -- rpt
18:29:14 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10026
	-1	   10365

Elapsed: 00:00:00.03
18:29:14 SQL> 
18:29:14 SQL> -- Calc gains and ntiles
18:29:14 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.20
18:29:14 SQL> CREATE TABLE q15 COMPRESS AS
18:29:14   2  SELECT
18:29:14   3  pair
18:29:14   4  ,ydate
18:29:14   5  ,prdate -- Should be unique
18:29:14   6  ,trend -- +1 or -1
18:29:14   7  -- Use NTILE() to derive some attributes
18:29:14   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
18:29:14   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
18:29:14  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
18:29:14  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
18:29:14  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
18:29:14  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
18:29:14  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
18:29:14  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
18:29:14  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
18:29:14  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
18:29:14  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
18:29:14  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
18:29:14  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
18:29:14  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
18:29:14  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
18:29:14  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
18:29:14  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
18:29:14  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
18:29:14  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
18:29:14  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
18:29:14  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
18:29:14  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
18:29:14  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
18:29:14  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
18:29:14  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
18:29:14  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
18:29:14  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
18:29:14  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
18:29:14  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
18:29:14  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
18:29:14  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
18:29:14  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
18:29:14  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
18:29:14  41  ,hh    att32
18:29:14  42  ,d     att33
18:29:14  43  ,w     att34
18:29:14  44  ,mpm   att35
18:29:14  45  ,trend att36
18:29:14  46  ,ug8 g8
18:29:14  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
18:29:14  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
18:29:14  49  FROM q13
18:29:14  50  ORDER BY pair,ydate
18:29:14  51  /

Table created.

Elapsed: 00:00:05.38
18:29:19 SQL> 
18:29:19 SQL> -- rpt
18:29:19 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
18:29:19   2  GROUP BY pair,trend,gatt,gattn
18:29:19   3  ORDER BY pair,trend,gatt,gattn
18:29:19   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
gbp_usd 	-1 nup nup .000084451	    3788
gbp_usd 	-1 nup up   -.0058879	    3190
gbp_usd 	-1 up  nup .005729687	    3291
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup -.00007496	    3654
gbp_usd 	 1 nup up  -.00553339	    3309
gbp_usd 	 1 up  nup .006202294	    3063

7 rows selected.

Elapsed: 00:00:00.03
18:29:20 SQL> 
18:29:20 SQL> -- rpt
18:29:20 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-21 18:25:00

Elapsed: 00:00:00.01
18:29:20 SQL> 
18:29:20 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
18:29:20 SQL> CREATE TABLE modsrc COMPRESS AS
18:29:20   2  SELECT
18:29:20   3  pair
18:29:20   4  ,ydate
18:29:20   5  ,prdate
18:29:20   6  ,trend
18:29:20   7  ,g8
18:29:20   8  ,gatt
18:29:20   9  ,gattn
18:29:20  10  FROM q15
18:29:20  11  /

Table created.

Elapsed: 00:00:00.09
18:29:20 SQL> 
18:29:20 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
18:29:20 SQL> 
18:29:20 SQL> -- rpt
18:29:20 SQL> 
18:29:20 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20775

Elapsed: 00:00:00.34
18:29:20 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20391

Elapsed: 00:00:00.01
18:29:20 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20391

Elapsed: 00:00:00.00
18:29:20 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20391

Elapsed: 00:00:00.00
18:29:20 SQL> 
18:29:20 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
18:29:20 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
18:29:20   2  SELECT
18:29:20   3  ydate
18:29:20   4  ,trend gbp_trend
18:29:20   5  ,g8    gbp_g8
18:29:20   6  ,gatt  gbp_gatt
18:29:20   7  ,gattn gbp_gattn
18:29:20   8  FROM modsrc
18:29:20   9  /

Table created.

Elapsed: 00:00:00.07
18:29:20 SQL> 
18:29:20 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
18:29:21 SQL> 
18:29:21 SQL> -- rpt
18:29:21 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 07:35:01 2010-12-21 09:20:00	10026	  -.0231       .019
	-1 2010-09-14 04:55:01 2010-12-21 18:25:00	10269	    -.02      .0204

Elapsed: 00:00:00.01
18:29:21 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g8),MAX(gbp_g8)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G8) MAX(GBP_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 07:35:01 2010-12-21 09:20:00	      10026	 -.0231        .019
	-1 2010-09-14 04:55:01 2010-12-21 18:25:00	      10365	   -.02       .0204

Elapsed: 00:00:00.02
18:29:21 SQL> 
18:29:21 SQL> -- I need a copy of q15 attributes
18:29:21 SQL> 
18:29:21 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.03
18:29:21 SQL> CREATE TABLE gbp_att COMPRESS AS
18:29:21   2  SELECT
18:29:21   3  ydate
18:29:21   4  ,att00 gbp_att00
18:29:21   5  ,att01 gbp_att01
18:29:21   6  ,att02 gbp_att02
18:29:21   7  ,att03 gbp_att03
18:29:21   8  ,att04 gbp_att04
18:29:21   9  ,att05 gbp_att05
18:29:21  10  ,att06 gbp_att06
18:29:21  11  ,att07 gbp_att07
18:29:21  12  ,att08 gbp_att08
18:29:21  13  ,att09 gbp_att09
18:29:21  14  ,att10 gbp_att10
18:29:21  15  ,att11 gbp_att11
18:29:21  16  ,att12 gbp_att12
18:29:21  17  ,att13 gbp_att13
18:29:21  18  ,att14 gbp_att14
18:29:21  19  ,att15 gbp_att15
18:29:21  20  ,att16 gbp_att16
18:29:21  21  ,att17 gbp_att17
18:29:21  22  ,att18 gbp_att18
18:29:21  23  ,att19 gbp_att19
18:29:21  24  ,att20 gbp_att20
18:29:21  25  ,att21 gbp_att21
18:29:21  26  ,att22 gbp_att22
18:29:21  27  ,att23 gbp_att23
18:29:21  28  ,att24 gbp_att24
18:29:21  29  ,att25 gbp_att25
18:29:21  30  ,att26 gbp_att26
18:29:21  31  ,att27 gbp_att27
18:29:21  32  ,att28 gbp_att28
18:29:21  33  ,att29 gbp_att29
18:29:21  34  ,att30 gbp_att30
18:29:21  35  ,att31 gbp_att31
18:29:21  36  ,att32 gbp_att32
18:29:21  37  ,att33 gbp_att33
18:29:21  38  ,att34 gbp_att34
18:29:21  39  ,att35 gbp_att35
18:29:21  40  ,att36 gbp_att36
18:29:21  41  FROM q15
18:29:21  42  /

Table created.

Elapsed: 00:00:00.18
18:29:21 SQL> 
18:29:21 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
18:29:21 SQL> 
18:29:21 SQL> -- rpt
18:29:21 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     20391

Elapsed: 00:00:00.00
18:29:21 SQL> 
18:29:21 SQL> --
18:29:21 SQL> -- jpy10.sql
18:29:21 SQL> --
18:29:21 SQL> 
18:29:21 SQL> -- Creates views and tables for backtesting a forex SVM strategy
18:29:21 SQL> 
18:29:21 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.28
18:29:22 SQL> 
18:29:22 SQL> -- I created di5min here:
18:29:22 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
18:29:22 SQL> 
18:29:22 SQL> CREATE OR REPLACE VIEW q11 AS
18:29:22   2  SELECT
18:29:22   3  pair
18:29:22   4  ,ydate
18:29:22   5  ,prdate
18:29:22   6  ,rownum rnum -- acts as t in my time-series
18:29:22   7  ,clse
18:29:22   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
18:29:22   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
18:29:22  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
18:29:22  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
18:29:22  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
18:29:22  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
18:29:22  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
18:29:22  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
18:29:22  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
18:29:22  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
18:29:22  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
18:29:22  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
18:29:22  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
18:29:22  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
18:29:22  22  FROM di5min WHERE pair LIKE'%jpy%'
18:29:22  23  ORDER BY ydate
18:29:22  24  /

View created.

Elapsed: 00:00:00.04
18:29:22 SQL> 
18:29:22 SQL> -- rpt
18:29:22 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20776

Elapsed: 00:00:00.34
18:29:22 SQL> 
18:29:22 SQL> -- Calc deltas and gains
18:29:22 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.21
18:29:22 SQL> 
18:29:22 SQL> CREATE TABLE q13 COMPRESS AS
18:29:22   2  SELECT
18:29:22   3  pair
18:29:22   4  ,ydate
18:29:22   5  ,prdate
18:29:22   6  ,rnum
18:29:22   7  ,ld8
18:29:22   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
18:29:22   9  -- step by 2
18:29:22  10  ,clse-lg6  d06
18:29:22  11  ,lg6 -lg8  d68
18:29:22  12  ,lg8 -lg10 d810
18:29:22  13  ,lg10-lg12 d1012
18:29:22  14  ,lg12-lg14 d1214
18:29:22  15  ,lg14-lg16 d1416
18:29:22  16  ,lg16-lg18 d1618
18:29:22  17  -- step by 4
18:29:22  18  ,lg6 -lg10 d610
18:29:22  19  ,lg8 -lg12 d812
18:29:22  20  ,lg10-lg14 d1014
18:29:22  21  ,lg12-lg16 d1216
18:29:22  22  --
18:29:22  23  ,ABS(clse-lg6 )dc6
18:29:22  24  ,ABS(clse-lg8 )dc8
18:29:22  25  ,ABS(clse-lg10)dc10
18:29:22  26  ,ABS(clse-lg12)dc12
18:29:22  27  ,ABS(clse-lg14)dc14
18:29:22  28  ,ABS(clse-lg16)dc16
18:29:22  29  ,ABS(clse-lg18)dc18
18:29:22  30  ,ABS(clse-lg20)dc20
18:29:22  31  ,ABS(clse-lg22)dc22
18:29:22  32  ,(ld8-clse) ug8
18:29:22  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
18:29:22  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
18:29:22  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
18:29:22  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
18:29:22  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
18:29:22  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
18:29:22  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
18:29:22  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
18:29:22  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
18:29:22  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
18:29:22  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
18:29:22  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
18:29:22  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
18:29:22  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
18:29:22  47  ,0+TO_CHAR(ydate,'D')d
18:29:22  48  ,0+TO_CHAR(ydate,'W')w
18:29:22  49  -- mpm stands for minutes-past-midnight:
18:29:22  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
18:29:22  51  FROM q11
18:29:22  52  -- I dont want any NULL values from the LAG() functions:
18:29:22  53  WHERE lg32 > 0
18:29:22  54  ORDER BY pair,ydate
18:29:22  55  /

Table created.

Elapsed: 00:00:01.70
18:29:24 SQL> 
18:29:24 SQL> -- rpt
18:29:24 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9547
	-1	   10845

Elapsed: 00:00:00.03
18:29:24 SQL> 
18:29:24 SQL> -- Calc gains and ntiles
18:29:24 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.14
18:29:24 SQL> CREATE TABLE q15 COMPRESS AS
18:29:24   2  SELECT
18:29:24   3  pair
18:29:24   4  ,ydate
18:29:24   5  ,prdate -- Should be unique
18:29:24   6  ,trend -- +1 or -1
18:29:24   7  -- Use NTILE() to derive some attributes
18:29:24   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
18:29:24   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
18:29:24  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
18:29:24  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
18:29:24  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
18:29:24  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
18:29:24  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
18:29:24  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
18:29:24  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
18:29:24  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
18:29:24  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
18:29:24  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
18:29:24  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
18:29:24  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
18:29:24  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
18:29:24  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
18:29:24  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
18:29:24  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
18:29:24  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
18:29:24  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
18:29:24  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
18:29:24  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
18:29:24  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
18:29:24  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
18:29:24  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
18:29:24  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
18:29:24  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
18:29:24  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
18:29:24  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
18:29:24  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
18:29:24  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
18:29:24  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
18:29:24  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
18:29:24  41  ,hh    att32
18:29:24  42  ,d     att33
18:29:24  43  ,w     att34
18:29:24  44  ,mpm   att35
18:29:24  45  ,trend att36
18:29:24  46  ,ug8 g8
18:29:24  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
18:29:24  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
18:29:24  49  FROM q13
18:29:24  50  ORDER BY pair,ydate
18:29:24  51  /

Table created.

Elapsed: 00:00:05.50
18:29:30 SQL> 
18:29:30 SQL> -- rpt
18:29:30 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
18:29:30   2  GROUP BY pair,trend,gatt,gattn
18:29:30   3  ORDER BY pair,trend,gatt,gattn
18:29:30   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
usd_jpy 	-1 nup nup .000015244	     164
usd_jpy 	-1 nup up  -.18526771	    5407
usd_jpy 	-1 up  nup .204290386	    5237
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     119
usd_jpy 	 1 nup up  -.18717133	    5062
usd_jpy 	 1 up  nup .212631472	    4307
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
18:29:30 SQL> 
18:29:30 SQL> -- rpt
18:29:30 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-21 18:25:00

Elapsed: 00:00:00.02
18:29:30 SQL> 
18:29:30 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.11
18:29:30 SQL> CREATE TABLE modsrc COMPRESS AS
18:29:30   2  SELECT
18:29:30   3  pair
18:29:30   4  ,ydate
18:29:30   5  ,prdate
18:29:30   6  ,trend
18:29:30   7  ,g8
18:29:30   8  ,gatt
18:29:30   9  ,gattn
18:29:30  10  FROM q15
18:29:30  11  /

Table created.

Elapsed: 00:00:00.08
18:29:30 SQL> 
18:29:30 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
18:29:30 SQL> 
18:29:30 SQL> -- rpt
18:29:30 SQL> 
18:29:30 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20776

Elapsed: 00:00:00.34
18:29:30 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20392

Elapsed: 00:00:00.01
18:29:30 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20392

Elapsed: 00:00:00.01
18:29:30 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20392

Elapsed: 00:00:00.00
18:29:30 SQL> 
18:29:30 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
18:29:30 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
18:29:30   2  SELECT
18:29:30   3  ydate
18:29:30   4  ,trend jpy_trend
18:29:30   5  ,g8    jpy_g8
18:29:30   6  ,gatt  jpy_gatt
18:29:30   7  ,gattn jpy_gattn
18:29:30   8  FROM modsrc
18:29:30   9  /

Table created.

Elapsed: 00:00:00.07
18:29:30 SQL> 
18:29:30 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
18:29:31 SQL> 
18:29:31 SQL> -- rpt
18:29:31 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 08:50:01 2010-12-21 18:25:00	 9488	  -1.185       2.42
	-1 2010-09-14 04:55:01 2010-12-21 16:30:00	10808	 -1.0575       2.49

Elapsed: 00:00:00.02
18:29:31 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g8),MAX(jpy_g8)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G8) MAX(JPY_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 08:50:01 2010-12-21 18:25:00	       9547	 -1.185        2.42
	-1 2010-09-14 04:55:01 2010-12-21 16:30:00	      10845	-1.0575        2.49

Elapsed: 00:00:00.02
18:29:31 SQL> 
18:29:31 SQL> -- I need a copy of q15 attributes
18:29:31 SQL> 
18:29:31 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.03
18:29:31 SQL> CREATE TABLE jpy_att COMPRESS AS
18:29:31   2  SELECT
18:29:31   3  ydate
18:29:31   4  ,att00 jpy_att00
18:29:31   5  ,att01 jpy_att01
18:29:31   6  ,att02 jpy_att02
18:29:31   7  ,att03 jpy_att03
18:29:31   8  ,att04 jpy_att04
18:29:31   9  ,att05 jpy_att05
18:29:31  10  ,att06 jpy_att06
18:29:31  11  ,att07 jpy_att07
18:29:31  12  ,att08 jpy_att08
18:29:31  13  ,att09 jpy_att09
18:29:31  14  ,att10 jpy_att10
18:29:31  15  ,att11 jpy_att11
18:29:31  16  ,att12 jpy_att12
18:29:31  17  ,att13 jpy_att13
18:29:31  18  ,att14 jpy_att14
18:29:31  19  ,att15 jpy_att15
18:29:31  20  ,att16 jpy_att16
18:29:31  21  ,att17 jpy_att17
18:29:31  22  ,att18 jpy_att18
18:29:31  23  ,att19 jpy_att19
18:29:31  24  ,att20 jpy_att20
18:29:31  25  ,att21 jpy_att21
18:29:31  26  ,att22 jpy_att22
18:29:31  27  ,att23 jpy_att23
18:29:31  28  ,att24 jpy_att24
18:29:31  29  ,att25 jpy_att25
18:29:31  30  ,att26 jpy_att26
18:29:31  31  ,att27 jpy_att27
18:29:31  32  ,att28 jpy_att28
18:29:31  33  ,att29 jpy_att29
18:29:31  34  ,att30 jpy_att30
18:29:31  35  ,att31 jpy_att31
18:29:31  36  ,att32 jpy_att32
18:29:31  37  ,att33 jpy_att33
18:29:31  38  ,att34 jpy_att34
18:29:31  39  ,att35 jpy_att35
18:29:31  40  ,att36 jpy_att36
18:29:31  41  FROM q15
18:29:31  42  /

Table created.

Elapsed: 00:00:00.21
18:29:31 SQL> 
18:29:31 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.47
18:29:31 SQL> 
18:29:31 SQL> -- rpt
18:29:31 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     20392

Elapsed: 00:00:00.00
18:29:31 SQL> 
18:29:31 SQL> --
18:29:31 SQL> -- cad10.sql
18:29:31 SQL> --
18:29:31 SQL> 
18:29:31 SQL> -- Creates views and tables for backtesting a forex SVM strategy
18:29:31 SQL> 
18:29:31 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.33
18:29:32 SQL> 
18:29:32 SQL> -- I created di5min here:
18:29:32 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
18:29:32 SQL> 
18:29:32 SQL> CREATE OR REPLACE VIEW q11 AS
18:29:32   2  SELECT
18:29:32   3  pair
18:29:32   4  ,ydate
18:29:32   5  ,prdate
18:29:32   6  ,rownum rnum -- acts as t in my time-series
18:29:32   7  ,clse
18:29:32   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
18:29:32   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
18:29:32  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
18:29:32  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
18:29:32  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
18:29:32  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
18:29:32  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
18:29:32  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
18:29:32  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
18:29:32  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
18:29:32  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
18:29:32  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
18:29:32  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
18:29:32  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
18:29:32  22  FROM di5min WHERE pair LIKE'%cad%'
18:29:32  23  ORDER BY ydate
18:29:32  24  /

View created.

Elapsed: 00:00:00.03
18:29:32 SQL> 
18:29:32 SQL> -- rpt
18:29:32 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20772

Elapsed: 00:00:00.34
18:29:32 SQL> 
18:29:32 SQL> -- Calc deltas and gains
18:29:32 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.34
18:29:32 SQL> 
18:29:32 SQL> CREATE TABLE q13 COMPRESS AS
18:29:32   2  SELECT
18:29:32   3  pair
18:29:32   4  ,ydate
18:29:32   5  ,prdate
18:29:32   6  ,rnum
18:29:32   7  ,ld8
18:29:32   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
18:29:32   9  -- step by 2
18:29:32  10  ,clse-lg6  d06
18:29:32  11  ,lg6 -lg8  d68
18:29:32  12  ,lg8 -lg10 d810
18:29:32  13  ,lg10-lg12 d1012
18:29:32  14  ,lg12-lg14 d1214
18:29:32  15  ,lg14-lg16 d1416
18:29:32  16  ,lg16-lg18 d1618
18:29:32  17  -- step by 4
18:29:32  18  ,lg6 -lg10 d610
18:29:32  19  ,lg8 -lg12 d812
18:29:32  20  ,lg10-lg14 d1014
18:29:32  21  ,lg12-lg16 d1216
18:29:32  22  --
18:29:32  23  ,ABS(clse-lg6 )dc6
18:29:32  24  ,ABS(clse-lg8 )dc8
18:29:32  25  ,ABS(clse-lg10)dc10
18:29:32  26  ,ABS(clse-lg12)dc12
18:29:32  27  ,ABS(clse-lg14)dc14
18:29:32  28  ,ABS(clse-lg16)dc16
18:29:32  29  ,ABS(clse-lg18)dc18
18:29:32  30  ,ABS(clse-lg20)dc20
18:29:32  31  ,ABS(clse-lg22)dc22
18:29:32  32  ,(ld8-clse) ug8
18:29:32  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
18:29:32  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
18:29:32  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
18:29:32  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
18:29:32  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
18:29:32  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
18:29:32  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
18:29:32  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
18:29:32  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
18:29:32  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
18:29:32  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
18:29:32  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
18:29:32  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
18:29:32  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
18:29:32  47  ,0+TO_CHAR(ydate,'D')d
18:29:32  48  ,0+TO_CHAR(ydate,'W')w
18:29:32  49  -- mpm stands for minutes-past-midnight:
18:29:32  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
18:29:32  51  FROM q11
18:29:32  52  -- I dont want any NULL values from the LAG() functions:
18:29:32  53  WHERE lg32 > 0
18:29:32  54  ORDER BY pair,ydate
18:29:32  55  /

Table created.

Elapsed: 00:00:01.73
18:29:34 SQL> 
18:29:34 SQL> -- rpt
18:29:34 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9502
	-1	   10886

Elapsed: 00:00:00.03
18:29:34 SQL> 
18:29:34 SQL> -- Calc gains and ntiles
18:29:34 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
18:29:34 SQL> CREATE TABLE q15 COMPRESS AS
18:29:34   2  SELECT
18:29:34   3  pair
18:29:34   4  ,ydate
18:29:34   5  ,prdate -- Should be unique
18:29:34   6  ,trend -- +1 or -1
18:29:34   7  -- Use NTILE() to derive some attributes
18:29:34   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
18:29:34   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
18:29:34  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
18:29:34  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
18:29:34  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
18:29:34  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
18:29:34  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
18:29:34  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
18:29:34  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
18:29:34  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
18:29:34  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
18:29:34  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
18:29:34  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
18:29:34  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
18:29:34  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
18:29:34  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
18:29:34  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
18:29:34  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
18:29:34  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
18:29:34  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
18:29:34  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
18:29:34  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
18:29:34  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
18:29:34  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
18:29:34  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
18:29:34  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
18:29:34  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
18:29:34  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
18:29:34  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
18:29:34  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
18:29:34  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
18:29:34  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
18:29:34  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
18:29:34  41  ,hh    att32
18:29:34  42  ,d     att33
18:29:34  43  ,w     att34
18:29:34  44  ,mpm   att35
18:29:34  45  ,trend att36
18:29:34  46  ,ug8 g8
18:29:34  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
18:29:34  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
18:29:34  49  FROM q13
18:29:34  50  ORDER BY pair,ydate
18:29:34  51  /

Table created.

Elapsed: 00:00:05.42
18:29:40 SQL> 
18:29:40 SQL> -- rpt
18:29:40 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
18:29:40   2  GROUP BY pair,trend,gatt,gattn
18:29:40   3  ORDER BY pair,trend,gatt,gattn
18:29:40   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
usd_cad 	-1 nup nup -.00001859	    5638
usd_cad 	-1 nup up  -.00401714	    2610
usd_cad 	-1 up  nup .004656015	    2637
usd_cad 	-1			       0
usd_cad 	 1 nup nup -.00010595	    4646
usd_cad 	 1 nup up   -.0042099	    2722
usd_cad 	 1 up  nup  .00458392	    2039
usd_cad 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
18:29:40 SQL> 
18:29:40 SQL> -- rpt
18:29:40 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-21 18:25:00

Elapsed: 00:00:00.01
18:29:40 SQL> 
18:29:40 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
18:29:40 SQL> CREATE TABLE modsrc COMPRESS AS
18:29:40   2  SELECT
18:29:40   3  pair
18:29:40   4  ,ydate
18:29:40   5  ,prdate
18:29:40   6  ,trend
18:29:40   7  ,g8
18:29:40   8  ,gatt
18:29:40   9  ,gattn
18:29:40  10  FROM q15
18:29:40  11  /

Table created.

Elapsed: 00:00:00.09
18:29:40 SQL> 
18:29:40 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.22
18:29:40 SQL> 
18:29:40 SQL> -- rpt
18:29:40 SQL> 
18:29:40 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20772

Elapsed: 00:00:00.35
18:29:40 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20388

Elapsed: 00:00:00.00
18:29:40 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20388

Elapsed: 00:00:00.01
18:29:40 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20388

Elapsed: 00:00:00.00
18:29:40 SQL> 
18:29:40 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
18:29:41 SQL> CREATE TABLE cad_ms10 COMPRESS AS
18:29:41   2  SELECT
18:29:41   3  ydate
18:29:41   4  ,trend cad_trend
18:29:41   5  ,g8    cad_g8
18:29:41   6  ,gatt  cad_gatt
18:29:41   7  ,gattn cad_gattn
18:29:41   8  FROM modsrc
18:29:41   9  /

Table created.

Elapsed: 00:00:00.06
18:29:41 SQL> 
18:29:41 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
18:29:41 SQL> 
18:29:41 SQL> -- rpt
18:29:41 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 04:55:01 2010-12-21 18:25:00	 9407	  -.0122      .0159
	-1 2010-09-14 07:10:01 2010-12-21 16:15:00	10885	 -.01105      .0176

Elapsed: 00:00:00.02
18:29:41 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g8),MAX(cad_g8)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G8) MAX(CAD_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 04:55:01 2010-12-21 18:25:00	       9502	 -.0122       .0159
	-1 2010-09-14 07:10:01 2010-12-21 16:15:00	      10886	-.01105       .0176

Elapsed: 00:00:00.02
18:29:41 SQL> 
18:29:41 SQL> -- I need a copy of q15 attributes
18:29:41 SQL> 
18:29:41 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.03
18:29:41 SQL> CREATE TABLE cad_att COMPRESS AS
18:29:41   2  SELECT
18:29:41   3  ydate
18:29:41   4  ,att00 cad_att00
18:29:41   5  ,att01 cad_att01
18:29:41   6  ,att02 cad_att02
18:29:41   7  ,att03 cad_att03
18:29:41   8  ,att04 cad_att04
18:29:41   9  ,att05 cad_att05
18:29:41  10  ,att06 cad_att06
18:29:41  11  ,att07 cad_att07
18:29:41  12  ,att08 cad_att08
18:29:41  13  ,att09 cad_att09
18:29:41  14  ,att10 cad_att10
18:29:41  15  ,att11 cad_att11
18:29:41  16  ,att12 cad_att12
18:29:41  17  ,att13 cad_att13
18:29:41  18  ,att14 cad_att14
18:29:41  19  ,att15 cad_att15
18:29:41  20  ,att16 cad_att16
18:29:41  21  ,att17 cad_att17
18:29:41  22  ,att18 cad_att18
18:29:41  23  ,att19 cad_att19
18:29:41  24  ,att20 cad_att20
18:29:41  25  ,att21 cad_att21
18:29:41  26  ,att22 cad_att22
18:29:41  27  ,att23 cad_att23
18:29:41  28  ,att24 cad_att24
18:29:41  29  ,att25 cad_att25
18:29:41  30  ,att26 cad_att26
18:29:41  31  ,att27 cad_att27
18:29:41  32  ,att28 cad_att28
18:29:41  33  ,att29 cad_att29
18:29:41  34  ,att30 cad_att30
18:29:41  35  ,att31 cad_att31
18:29:41  36  ,att32 cad_att32
18:29:41  37  ,att33 cad_att33
18:29:41  38  ,att34 cad_att34
18:29:41  39  ,att35 cad_att35
18:29:41  40  ,att36 cad_att36
18:29:41  41  FROM q15
18:29:41  42  /

Table created.

Elapsed: 00:00:00.19
18:29:41 SQL> 
18:29:41 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.46
18:29:41 SQL> 
18:29:41 SQL> -- rpt
18:29:41 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     20388

Elapsed: 00:00:00.00
18:29:41 SQL> 
18:29:41 SQL> --
18:29:41 SQL> -- chf10.sql
18:29:41 SQL> --
18:29:41 SQL> 
18:29:41 SQL> -- Creates views and tables for backtesting a forex SVM strategy
18:29:41 SQL> 
18:29:41 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.36
18:29:42 SQL> 
18:29:42 SQL> -- I created di5min here:
18:29:42 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
18:29:42 SQL> 
18:29:42 SQL> CREATE OR REPLACE VIEW q11 AS
18:29:42   2  SELECT
18:29:42   3  pair
18:29:42   4  ,ydate
18:29:42   5  ,prdate
18:29:42   6  ,rownum rnum -- acts as t in my time-series
18:29:42   7  ,clse
18:29:42   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
18:29:42   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
18:29:42  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
18:29:42  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
18:29:42  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
18:29:42  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
18:29:42  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
18:29:42  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
18:29:42  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
18:29:42  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
18:29:42  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
18:29:42  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
18:29:42  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
18:29:42  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
18:29:42  22  FROM di5min WHERE pair LIKE'%chf%'
18:29:42  23  ORDER BY ydate
18:29:42  24  /

View created.

Elapsed: 00:00:00.02
18:29:42 SQL> 
18:29:42 SQL> -- rpt
18:29:42 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20775

Elapsed: 00:00:00.34
18:29:42 SQL> 
18:29:42 SQL> -- Calc deltas and gains
18:29:42 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.24
18:29:42 SQL> 
18:29:42 SQL> CREATE TABLE q13 COMPRESS AS
18:29:42   2  SELECT
18:29:42   3  pair
18:29:42   4  ,ydate
18:29:42   5  ,prdate
18:29:42   6  ,rnum
18:29:42   7  ,ld8
18:29:42   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
18:29:42   9  -- step by 2
18:29:42  10  ,clse-lg6  d06
18:29:42  11  ,lg6 -lg8  d68
18:29:42  12  ,lg8 -lg10 d810
18:29:42  13  ,lg10-lg12 d1012
18:29:42  14  ,lg12-lg14 d1214
18:29:42  15  ,lg14-lg16 d1416
18:29:42  16  ,lg16-lg18 d1618
18:29:42  17  -- step by 4
18:29:42  18  ,lg6 -lg10 d610
18:29:42  19  ,lg8 -lg12 d812
18:29:42  20  ,lg10-lg14 d1014
18:29:42  21  ,lg12-lg16 d1216
18:29:42  22  --
18:29:42  23  ,ABS(clse-lg6 )dc6
18:29:42  24  ,ABS(clse-lg8 )dc8
18:29:42  25  ,ABS(clse-lg10)dc10
18:29:42  26  ,ABS(clse-lg12)dc12
18:29:42  27  ,ABS(clse-lg14)dc14
18:29:42  28  ,ABS(clse-lg16)dc16
18:29:42  29  ,ABS(clse-lg18)dc18
18:29:42  30  ,ABS(clse-lg20)dc20
18:29:42  31  ,ABS(clse-lg22)dc22
18:29:42  32  ,(ld8-clse) ug8
18:29:42  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
18:29:42  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
18:29:42  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
18:29:42  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
18:29:42  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
18:29:42  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
18:29:42  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
18:29:42  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
18:29:42  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
18:29:42  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
18:29:42  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
18:29:42  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
18:29:42  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
18:29:42  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
18:29:42  47  ,0+TO_CHAR(ydate,'D')d
18:29:42  48  ,0+TO_CHAR(ydate,'W')w
18:29:42  49  -- mpm stands for minutes-past-midnight:
18:29:42  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
18:29:42  51  FROM q11
18:29:42  52  -- I dont want any NULL values from the LAG() functions:
18:29:42  53  WHERE lg32 > 0
18:29:42  54  ORDER BY pair,ydate
18:29:42  55  /

Table created.

Elapsed: 00:00:01.73
18:29:44 SQL> 
18:29:44 SQL> -- rpt
18:29:44 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9688
	-1	   10703

Elapsed: 00:00:00.03
18:29:44 SQL> 
18:29:44 SQL> -- Calc gains and ntiles
18:29:44 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.27
18:29:45 SQL> CREATE TABLE q15 COMPRESS AS
18:29:45   2  SELECT
18:29:45   3  pair
18:29:45   4  ,ydate
18:29:45   5  ,prdate -- Should be unique
18:29:45   6  ,trend -- +1 or -1
18:29:45   7  -- Use NTILE() to derive some attributes
18:29:45   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
18:29:45   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
18:29:45  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
18:29:45  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
18:29:45  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
18:29:45  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
18:29:45  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
18:29:45  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
18:29:45  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
18:29:45  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
18:29:45  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
18:29:45  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
18:29:45  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
18:29:45  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
18:29:45  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
18:29:45  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
18:29:45  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
18:29:45  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
18:29:45  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
18:29:45  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
18:29:45  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
18:29:45  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
18:29:45  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
18:29:45  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
18:29:45  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
18:29:45  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
18:29:45  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
18:29:45  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
18:29:45  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
18:29:45  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
18:29:45  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
18:29:45  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
18:29:45  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
18:29:45  41  ,hh    att32
18:29:45  42  ,d     att33
18:29:45  43  ,w     att34
18:29:45  44  ,mpm   att35
18:29:45  45  ,trend att36
18:29:45  46  ,ug8 g8
18:29:45  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
18:29:45  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
18:29:45  49  FROM q13
18:29:45  50  ORDER BY pair,ydate
18:29:45  51  /

Table created.

Elapsed: 00:00:05.41
18:29:50 SQL> 
18:29:50 SQL> -- rpt
18:29:50 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
18:29:50   2  GROUP BY pair,trend,gatt,gattn
18:29:50   3  ORDER BY pair,trend,gatt,gattn
18:29:50   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
usd_chf 	-1 nup nup .000058052	    4797
usd_chf 	-1 nup up  -.00504398	    3095
usd_chf 	-1 up  nup  .00521724	    2716
usd_chf 	-1			       0
usd_chf 	 1 nup nup -.00001062	    4682
usd_chf 	 1 nup up  -.00459848	    2856
usd_chf 	 1 up  nup  .00470652	    2149
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
18:29:50 SQL> 
18:29:50 SQL> -- rpt
18:29:50 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-21 18:25:00

Elapsed: 00:00:00.03
18:29:50 SQL> 
18:29:50 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.10
18:29:50 SQL> CREATE TABLE modsrc COMPRESS AS
18:29:50   2  SELECT
18:29:50   3  pair
18:29:50   4  ,ydate
18:29:50   5  ,prdate
18:29:50   6  ,trend
18:29:50   7  ,g8
18:29:50   8  ,gatt
18:29:50   9  ,gattn
18:29:50  10  FROM q15
18:29:50  11  /

Table created.

Elapsed: 00:00:00.09
18:29:50 SQL> 
18:29:50 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
18:29:50 SQL> 
18:29:50 SQL> -- rpt
18:29:50 SQL> 
18:29:50 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20775

Elapsed: 00:00:00.35
18:29:51 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20391

Elapsed: 00:00:00.00
18:29:51 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20391

Elapsed: 00:00:00.01
18:29:51 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20391

Elapsed: 00:00:00.00
18:29:51 SQL> 
18:29:51 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
18:29:51 SQL> CREATE TABLE chf_ms10 COMPRESS AS
18:29:51   2  SELECT
18:29:51   3  ydate
18:29:51   4  ,trend chf_trend
18:29:51   5  ,g8    chf_g8
18:29:51   6  ,gatt  chf_gatt
18:29:51   7  ,gattn chf_gattn
18:29:51   8  FROM modsrc
18:29:51   9  /

Table created.

Elapsed: 00:00:00.06
18:29:51 SQL> 
18:29:51 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
18:29:51 SQL> 
18:29:51 SQL> -- rpt
18:29:51 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 11:10:01 2010-12-21 18:20:00	 9687	 -.01775      .0155
	-1 2010-09-14 04:55:01 2010-12-21 18:25:00	10608	 -.01825     .01545

Elapsed: 00:00:00.02
18:29:51 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g8),MAX(chf_g8)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G8) MAX(CHF_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 11:10:01 2010-12-21 18:20:00	       9688	-.01775       .0155
	-1 2010-09-14 04:55:01 2010-12-21 18:25:00	      10703	-.01825      .01545

Elapsed: 00:00:00.02
18:29:51 SQL> 
18:29:51 SQL> -- I need a copy of q15 attributes
18:29:51 SQL> 
18:29:51 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.03
18:29:51 SQL> CREATE TABLE chf_att COMPRESS AS
18:29:51   2  SELECT
18:29:51   3  ydate
18:29:51   4  ,att00 chf_att00
18:29:51   5  ,att01 chf_att01
18:29:51   6  ,att02 chf_att02
18:29:51   7  ,att03 chf_att03
18:29:51   8  ,att04 chf_att04
18:29:51   9  ,att05 chf_att05
18:29:51  10  ,att06 chf_att06
18:29:51  11  ,att07 chf_att07
18:29:51  12  ,att08 chf_att08
18:29:51  13  ,att09 chf_att09
18:29:51  14  ,att10 chf_att10
18:29:51  15  ,att11 chf_att11
18:29:51  16  ,att12 chf_att12
18:29:51  17  ,att13 chf_att13
18:29:51  18  ,att14 chf_att14
18:29:51  19  ,att15 chf_att15
18:29:51  20  ,att16 chf_att16
18:29:51  21  ,att17 chf_att17
18:29:51  22  ,att18 chf_att18
18:29:51  23  ,att19 chf_att19
18:29:51  24  ,att20 chf_att20
18:29:51  25  ,att21 chf_att21
18:29:51  26  ,att22 chf_att22
18:29:51  27  ,att23 chf_att23
18:29:51  28  ,att24 chf_att24
18:29:51  29  ,att25 chf_att25
18:29:51  30  ,att26 chf_att26
18:29:51  31  ,att27 chf_att27
18:29:51  32  ,att28 chf_att28
18:29:51  33  ,att29 chf_att29
18:29:51  34  ,att30 chf_att30
18:29:51  35  ,att31 chf_att31
18:29:51  36  ,att32 chf_att32
18:29:51  37  ,att33 chf_att33
18:29:51  38  ,att34 chf_att34
18:29:51  39  ,att35 chf_att35
18:29:51  40  ,att36 chf_att36
18:29:51  41  FROM q15
18:29:51  42  /

Table created.

Elapsed: 00:00:00.16
18:29:51 SQL> 
18:29:51 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.47
18:29:52 SQL> 
18:29:52 SQL> -- rpt
18:29:52 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     20391

Elapsed: 00:00:00.00
18:29:52 SQL> 
18:29:52 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
