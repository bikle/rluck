
SQL*Plus: Release 11.2.0.1.0 Production on Sun Dec 19 23:55:31 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

23:55:31 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
23:55:31 SQL> 23:55:31 SQL> --
23:55:31 SQL> -- eur10.sql
23:55:31 SQL> --
23:55:31 SQL> 
23:55:31 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:55:31 SQL> 
23:55:31 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.00
23:55:31 SQL> 
23:55:31 SQL> -- I created di5min here:
23:55:31 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
23:55:31 SQL> 
23:55:31 SQL> CREATE OR REPLACE VIEW q11 AS
23:55:31   2  SELECT
23:55:31   3  pair
23:55:31   4  ,ydate
23:55:31   5  ,prdate
23:55:31   6  ,rownum rnum -- acts as t in my time-series
23:55:31   7  ,clse
23:55:31   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
23:55:31   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
23:55:31  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
23:55:31  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
23:55:31  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
23:55:31  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
23:55:31  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
23:55:31  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
23:55:31  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
23:55:31  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
23:55:31  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
23:55:31  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
23:55:31  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
23:55:31  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
23:55:31  22  FROM di5min WHERE pair LIKE'%eur%'
23:55:31  23  ORDER BY ydate
23:55:31  24  /

View created.

Elapsed: 00:00:00.16
23:55:32 SQL> 
23:55:32 SQL> -- rpt
23:55:32 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20268

Elapsed: 00:00:00.34
23:55:32 SQL> 
23:55:32 SQL> -- Calc deltas and gains
23:55:32 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.05
23:55:32 SQL> 
23:55:32 SQL> CREATE TABLE q13 COMPRESS AS
23:55:32   2  SELECT
23:55:32   3  pair
23:55:32   4  ,ydate
23:55:32   5  ,prdate
23:55:32   6  ,rnum
23:55:32   7  ,ld8
23:55:32   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
23:55:32   9  -- step by 2
23:55:32  10  ,clse-lg6  d06
23:55:32  11  ,lg6 -lg8  d68
23:55:32  12  ,lg8 -lg10 d810
23:55:32  13  ,lg10-lg12 d1012
23:55:32  14  ,lg12-lg14 d1214
23:55:32  15  ,lg14-lg16 d1416
23:55:32  16  ,lg16-lg18 d1618
23:55:32  17  -- step by 4
23:55:32  18  ,lg6 -lg10 d610
23:55:32  19  ,lg8 -lg12 d812
23:55:32  20  ,lg10-lg14 d1014
23:55:32  21  ,lg12-lg16 d1216
23:55:32  22  --
23:55:32  23  ,ABS(clse-lg6 )dc6
23:55:32  24  ,ABS(clse-lg8 )dc8
23:55:32  25  ,ABS(clse-lg10)dc10
23:55:32  26  ,ABS(clse-lg12)dc12
23:55:32  27  ,ABS(clse-lg14)dc14
23:55:32  28  ,ABS(clse-lg16)dc16
23:55:32  29  ,ABS(clse-lg18)dc18
23:55:32  30  ,ABS(clse-lg20)dc20
23:55:32  31  ,ABS(clse-lg22)dc22
23:55:32  32  ,(ld8-clse) ug8
23:55:32  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:55:32  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:55:32  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
23:55:32  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:55:32  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
23:55:32  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
23:55:32  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
23:55:32  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
23:55:32  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
23:55:32  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:55:32  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
23:55:32  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
23:55:32  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
23:55:32  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:55:32  47  ,0+TO_CHAR(ydate,'D')d
23:55:32  48  ,0+TO_CHAR(ydate,'W')w
23:55:32  49  -- mpm stands for minutes-past-midnight:
23:55:32  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:55:32  51  FROM q11
23:55:32  52  -- I dont want any NULL values from the LAG() functions:
23:55:32  53  WHERE lg32 > 0
23:55:32  54  ORDER BY pair,ydate
23:55:32  55  /

Table created.

Elapsed: 00:00:02.04
23:55:34 SQL> 
23:55:34 SQL> -- rpt
23:55:34 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9950
	-1	    9934

Elapsed: 00:00:00.03
23:55:34 SQL> 
23:55:34 SQL> -- Calc gains and ntiles
23:55:34 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.07
23:55:34 SQL> CREATE TABLE q15 COMPRESS AS
23:55:34   2  SELECT
23:55:34   3  pair
23:55:34   4  ,ydate
23:55:34   5  ,prdate -- Should be unique
23:55:34   6  ,trend -- +1 or -1
23:55:34   7  -- Use NTILE() to derive some attributes
23:55:34   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
23:55:34   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
23:55:34  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
23:55:34  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
23:55:34  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
23:55:34  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
23:55:34  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
23:55:34  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
23:55:34  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
23:55:34  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
23:55:34  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
23:55:34  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
23:55:34  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
23:55:34  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
23:55:34  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
23:55:34  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
23:55:34  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
23:55:34  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
23:55:34  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
23:55:34  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
23:55:34  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
23:55:34  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
23:55:34  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
23:55:34  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
23:55:34  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
23:55:34  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
23:55:34  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
23:55:34  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
23:55:34  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
23:55:34  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
23:55:34  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
23:55:34  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
23:55:34  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:55:34  41  ,hh    att32
23:55:34  42  ,d     att33
23:55:34  43  ,w     att34
23:55:34  44  ,mpm   att35
23:55:34  45  ,trend att36
23:55:34  46  ,ug8 g8
23:55:34  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
23:55:34  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
23:55:34  49  FROM q13
23:55:34  50  ORDER BY pair,ydate
23:55:34  51  /

Table created.

Elapsed: 00:00:05.25
23:55:39 SQL> 
23:55:39 SQL> -- rpt
23:55:39 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
23:55:39   2  GROUP BY pair,trend,gatt,gattn
23:55:39   3  ORDER BY pair,trend,gatt,gattn
23:55:39   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
eur_usd 	-1 nup nup .000017866	    2835
eur_usd 	-1 nup up  -.00607302	    3541
eur_usd 	-1 up  nup .006107575	    3462
eur_usd 	-1			       0
eur_usd 	 1 nup nup -.00009763	    2975
eur_usd 	 1 nup up  -.00630061	    3295
eur_usd 	 1 up  nup .006596746	    3680

7 rows selected.

Elapsed: 00:00:00.02
23:55:39 SQL> 
23:55:39 SQL> -- rpt
23:55:39 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-19 23:50:00

Elapsed: 00:00:00.02
23:55:39 SQL> 
23:55:39 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.06
23:55:40 SQL> CREATE TABLE modsrc COMPRESS AS
23:55:40   2  SELECT
23:55:40   3  pair
23:55:40   4  ,ydate
23:55:40   5  ,prdate
23:55:40   6  ,trend
23:55:40   7  ,g8
23:55:40   8  ,gatt
23:55:40   9  ,gattn
23:55:40  10  FROM q15
23:55:40  11  /

Table created.

Elapsed: 00:00:00.08
23:55:40 SQL> 
23:55:40 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
23:55:40 SQL> 
23:55:40 SQL> -- rpt
23:55:40 SQL> 
23:55:40 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20268

Elapsed: 00:00:00.34
23:55:40 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19884

Elapsed: 00:00:00.01
23:55:40 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19884

Elapsed: 00:00:00.00
23:55:40 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19884

Elapsed: 00:00:00.00
23:55:40 SQL> 
23:55:40 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.06
23:55:40 SQL> CREATE TABLE eur_ms10 COMPRESS AS
23:55:40   2  SELECT
23:55:40   3  ydate
23:55:40   4  ,trend eur_trend
23:55:40   5  ,g8    eur_g8
23:55:40   6  ,gatt  eur_gatt
23:55:40   7  ,gattn eur_gattn
23:55:40   8  FROM modsrc
23:55:40   9  /

Table created.

Elapsed: 00:00:00.07
23:55:40 SQL> 
23:55:40 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
23:55:40 SQL> 
23:55:40 SQL> -- rpt
23:55:40 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 05:00:01 2010-12-17 11:40:00	 9950	  -.0218     .02165
	-1 2010-09-14 04:55:01 2010-12-19 23:50:00	 9838	 -.02085      .0196

Elapsed: 00:00:00.02
23:55:40 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g8),MAX(eur_g8)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G8) MAX(EUR_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 05:00:01 2010-12-17 11:40:00	       9950	 -.0218      .02165
	-1 2010-09-14 04:55:01 2010-12-19 23:50:00	       9934	-.02085       .0196

Elapsed: 00:00:00.01
23:55:40 SQL> 
23:55:40 SQL> -- I need a copy of q15 attributes
23:55:40 SQL> 
23:55:40 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.05
23:55:41 SQL> CREATE TABLE eur_att COMPRESS AS
23:55:41   2  SELECT
23:55:41   3  ydate
23:55:41   4  ,att00 eur_att00
23:55:41   5  ,att01 eur_att01
23:55:41   6  ,att02 eur_att02
23:55:41   7  ,att03 eur_att03
23:55:41   8  ,att04 eur_att04
23:55:41   9  ,att05 eur_att05
23:55:41  10  ,att06 eur_att06
23:55:41  11  ,att07 eur_att07
23:55:41  12  ,att08 eur_att08
23:55:41  13  ,att09 eur_att09
23:55:41  14  ,att10 eur_att10
23:55:41  15  ,att11 eur_att11
23:55:41  16  ,att12 eur_att12
23:55:41  17  ,att13 eur_att13
23:55:41  18  ,att14 eur_att14
23:55:41  19  ,att15 eur_att15
23:55:41  20  ,att16 eur_att16
23:55:41  21  ,att17 eur_att17
23:55:41  22  ,att18 eur_att18
23:55:41  23  ,att19 eur_att19
23:55:41  24  ,att20 eur_att20
23:55:41  25  ,att21 eur_att21
23:55:41  26  ,att22 eur_att22
23:55:41  27  ,att23 eur_att23
23:55:41  28  ,att24 eur_att24
23:55:41  29  ,att25 eur_att25
23:55:41  30  ,att26 eur_att26
23:55:41  31  ,att27 eur_att27
23:55:41  32  ,att28 eur_att28
23:55:41  33  ,att29 eur_att29
23:55:41  34  ,att30 eur_att30
23:55:41  35  ,att31 eur_att31
23:55:41  36  ,att32 eur_att32
23:55:41  37  ,att33 eur_att33
23:55:41  38  ,att34 eur_att34
23:55:41  39  ,att35 eur_att35
23:55:41  40  ,att36 eur_att36
23:55:41  41  FROM q15
23:55:41  42  /

Table created.

Elapsed: 00:00:00.17
23:55:41 SQL> 
23:55:41 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.46
23:55:41 SQL> 
23:55:41 SQL> -- rpt
23:55:41 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19884

Elapsed: 00:00:00.01
23:55:41 SQL> 
23:55:41 SQL> --
23:55:41 SQL> -- aud10.sql
23:55:41 SQL> --
23:55:41 SQL> 
23:55:41 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:55:41 SQL> 
23:55:41 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
23:55:42 SQL> 
23:55:42 SQL> -- I created di5min here:
23:55:42 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
23:55:42 SQL> 
23:55:42 SQL> CREATE OR REPLACE VIEW q11 AS
23:55:42   2  SELECT
23:55:42   3  pair
23:55:42   4  ,ydate
23:55:42   5  ,prdate
23:55:42   6  ,rownum rnum -- acts as t in my time-series
23:55:42   7  ,clse
23:55:42   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
23:55:42   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
23:55:42  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
23:55:42  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
23:55:42  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
23:55:42  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
23:55:42  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
23:55:42  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
23:55:42  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
23:55:42  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
23:55:42  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
23:55:42  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
23:55:42  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
23:55:42  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
23:55:42  22  FROM di5min WHERE pair LIKE'%aud%'
23:55:42  23  ORDER BY ydate
23:55:42  24  /

View created.

Elapsed: 00:00:00.03
23:55:42 SQL> 
23:55:42 SQL> -- rpt
23:55:42 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20265

Elapsed: 00:00:00.33
23:55:42 SQL> 
23:55:42 SQL> -- Calc deltas and gains
23:55:42 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.24
23:55:42 SQL> 
23:55:42 SQL> CREATE TABLE q13 COMPRESS AS
23:55:42   2  SELECT
23:55:42   3  pair
23:55:42   4  ,ydate
23:55:42   5  ,prdate
23:55:42   6  ,rnum
23:55:42   7  ,ld8
23:55:42   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
23:55:42   9  -- step by 2
23:55:42  10  ,clse-lg6  d06
23:55:42  11  ,lg6 -lg8  d68
23:55:42  12  ,lg8 -lg10 d810
23:55:42  13  ,lg10-lg12 d1012
23:55:42  14  ,lg12-lg14 d1214
23:55:42  15  ,lg14-lg16 d1416
23:55:42  16  ,lg16-lg18 d1618
23:55:42  17  -- step by 4
23:55:42  18  ,lg6 -lg10 d610
23:55:42  19  ,lg8 -lg12 d812
23:55:42  20  ,lg10-lg14 d1014
23:55:42  21  ,lg12-lg16 d1216
23:55:42  22  --
23:55:42  23  ,ABS(clse-lg6 )dc6
23:55:42  24  ,ABS(clse-lg8 )dc8
23:55:42  25  ,ABS(clse-lg10)dc10
23:55:42  26  ,ABS(clse-lg12)dc12
23:55:42  27  ,ABS(clse-lg14)dc14
23:55:42  28  ,ABS(clse-lg16)dc16
23:55:42  29  ,ABS(clse-lg18)dc18
23:55:42  30  ,ABS(clse-lg20)dc20
23:55:42  31  ,ABS(clse-lg22)dc22
23:55:42  32  ,(ld8-clse) ug8
23:55:42  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:55:42  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:55:42  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
23:55:42  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:55:42  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
23:55:42  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
23:55:42  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
23:55:42  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
23:55:42  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
23:55:42  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:55:42  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
23:55:42  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
23:55:42  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
23:55:42  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:55:42  47  ,0+TO_CHAR(ydate,'D')d
23:55:42  48  ,0+TO_CHAR(ydate,'W')w
23:55:42  49  -- mpm stands for minutes-past-midnight:
23:55:42  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:55:42  51  FROM q11
23:55:42  52  -- I dont want any NULL values from the LAG() functions:
23:55:42  53  WHERE lg32 > 0
23:55:42  54  ORDER BY pair,ydate
23:55:42  55  /

Table created.

Elapsed: 00:00:01.63
23:55:44 SQL> 
23:55:44 SQL> -- rpt
23:55:44 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10285
	-1	    9596

Elapsed: 00:00:00.02
23:55:44 SQL> 
23:55:44 SQL> -- Calc gains and ntiles
23:55:44 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.18
23:55:44 SQL> CREATE TABLE q15 COMPRESS AS
23:55:44   2  SELECT
23:55:44   3  pair
23:55:44   4  ,ydate
23:55:44   5  ,prdate -- Should be unique
23:55:44   6  ,trend -- +1 or -1
23:55:44   7  -- Use NTILE() to derive some attributes
23:55:44   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
23:55:44   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
23:55:44  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
23:55:44  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
23:55:44  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
23:55:44  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
23:55:44  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
23:55:44  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
23:55:44  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
23:55:44  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
23:55:44  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
23:55:44  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
23:55:44  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
23:55:44  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
23:55:44  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
23:55:44  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
23:55:44  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
23:55:44  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
23:55:44  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
23:55:44  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
23:55:44  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
23:55:44  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
23:55:44  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
23:55:44  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
23:55:44  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
23:55:44  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
23:55:44  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
23:55:44  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
23:55:44  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
23:55:44  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
23:55:44  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
23:55:44  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
23:55:44  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:55:44  41  ,hh    att32
23:55:44  42  ,d     att33
23:55:44  43  ,w     att34
23:55:44  44  ,mpm   att35
23:55:44  45  ,trend att36
23:55:44  46  ,ug8 g8
23:55:44  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
23:55:44  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
23:55:44  49  FROM q13
23:55:44  50  ORDER BY pair,ydate
23:55:44  51  /

Table created.

Elapsed: 00:00:05.14
23:55:49 SQL> 
23:55:49 SQL> -- rpt
23:55:49 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
23:55:49   2  GROUP BY pair,trend,gatt,gattn
23:55:49   3  ORDER BY pair,trend,gatt,gattn
23:55:49   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
aud_usd 	-1 nup nup .000014606	    3615
aud_usd 	-1 nup up  -.00519991	    2596
aud_usd 	-1 up  nup .005293634	    3346
aud_usd 	-1			       0
aud_usd 	 1 nup nup 7.1493E-06	    3871
aud_usd 	 1 nup up  -.00496245	    3186
aud_usd 	 1 up  nup .005270648	    3171
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
23:55:49 SQL> 
23:55:49 SQL> -- rpt
23:55:49 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-19 23:50:00

Elapsed: 00:00:00.01
23:55:49 SQL> 
23:55:49 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
23:55:49 SQL> CREATE TABLE modsrc COMPRESS AS
23:55:49   2  SELECT
23:55:49   3  pair
23:55:49   4  ,ydate
23:55:49   5  ,prdate
23:55:49   6  ,trend
23:55:49   7  ,g8
23:55:49   8  ,gatt
23:55:49   9  ,gattn
23:55:49  10  FROM q15
23:55:49  11  /

Table created.

Elapsed: 00:00:00.08
23:55:49 SQL> 
23:55:49 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
23:55:50 SQL> 
23:55:50 SQL> -- rpt
23:55:50 SQL> 
23:55:50 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20265

Elapsed: 00:00:00.33
23:55:50 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19881

Elapsed: 00:00:00.01
23:55:50 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19881

Elapsed: 00:00:00.00
23:55:50 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19881

Elapsed: 00:00:00.00
23:55:50 SQL> 
23:55:50 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.08
23:55:50 SQL> CREATE TABLE aud_ms10 COMPRESS AS
23:55:50   2  SELECT
23:55:50   3  ydate
23:55:50   4  ,trend aud_trend
23:55:50   5  ,g8    aud_g8
23:55:50   6  ,gatt  aud_gatt
23:55:50   7  ,gattn aud_gattn
23:55:50   8  FROM modsrc
23:55:50   9  /

Table created.

Elapsed: 00:00:00.08
23:55:50 SQL> 
23:55:50 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
23:55:50 SQL> 
23:55:50 SQL> -- rpt
23:55:50 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 07:10:01 2010-12-19 23:50:00	10228	  -.0203      .0136
	-1 2010-09-14 04:55:01 2010-12-19 22:50:00	 9557	  -.0196      .0148

Elapsed: 00:00:00.02
23:55:50 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g8),MAX(aud_g8)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G8) MAX(AUD_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 07:10:01 2010-12-19 23:50:00	      10285	 -.0203       .0136
	-1 2010-09-14 04:55:01 2010-12-19 22:50:00	       9596	 -.0196       .0148

Elapsed: 00:00:00.01
23:55:50 SQL> 
23:55:50 SQL> -- I need a copy of q15 attributes
23:55:50 SQL> 
23:55:50 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.05
23:55:50 SQL> CREATE TABLE aud_att COMPRESS AS
23:55:50   2  SELECT
23:55:50   3  ydate
23:55:50   4  ,att00 aud_att00
23:55:50   5  ,att01 aud_att01
23:55:50   6  ,att02 aud_att02
23:55:50   7  ,att03 aud_att03
23:55:50   8  ,att04 aud_att04
23:55:50   9  ,att05 aud_att05
23:55:50  10  ,att06 aud_att06
23:55:50  11  ,att07 aud_att07
23:55:50  12  ,att08 aud_att08
23:55:50  13  ,att09 aud_att09
23:55:50  14  ,att10 aud_att10
23:55:50  15  ,att11 aud_att11
23:55:50  16  ,att12 aud_att12
23:55:50  17  ,att13 aud_att13
23:55:50  18  ,att14 aud_att14
23:55:50  19  ,att15 aud_att15
23:55:50  20  ,att16 aud_att16
23:55:50  21  ,att17 aud_att17
23:55:50  22  ,att18 aud_att18
23:55:50  23  ,att19 aud_att19
23:55:50  24  ,att20 aud_att20
23:55:50  25  ,att21 aud_att21
23:55:50  26  ,att22 aud_att22
23:55:50  27  ,att23 aud_att23
23:55:50  28  ,att24 aud_att24
23:55:50  29  ,att25 aud_att25
23:55:50  30  ,att26 aud_att26
23:55:50  31  ,att27 aud_att27
23:55:50  32  ,att28 aud_att28
23:55:50  33  ,att29 aud_att29
23:55:50  34  ,att30 aud_att30
23:55:50  35  ,att31 aud_att31
23:55:50  36  ,att32 aud_att32
23:55:50  37  ,att33 aud_att33
23:55:50  38  ,att34 aud_att34
23:55:50  39  ,att35 aud_att35
23:55:50  40  ,att36 aud_att36
23:55:50  41  FROM q15
23:55:50  42  /

Table created.

Elapsed: 00:00:00.17
23:55:50 SQL> 
23:55:50 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
23:55:51 SQL> 
23:55:51 SQL> -- rpt
23:55:51 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19881

Elapsed: 00:00:00.00
23:55:51 SQL> 
23:55:51 SQL> --
23:55:51 SQL> -- gbp10.sql
23:55:51 SQL> --
23:55:51 SQL> 
23:55:51 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:55:51 SQL> 
23:55:51 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.33
23:55:51 SQL> 
23:55:51 SQL> -- I created di5min here:
23:55:51 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
23:55:51 SQL> 
23:55:51 SQL> CREATE OR REPLACE VIEW q11 AS
23:55:51   2  SELECT
23:55:51   3  pair
23:55:51   4  ,ydate
23:55:51   5  ,prdate
23:55:51   6  ,rownum rnum -- acts as t in my time-series
23:55:51   7  ,clse
23:55:51   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
23:55:51   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
23:55:51  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
23:55:51  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
23:55:51  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
23:55:51  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
23:55:51  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
23:55:51  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
23:55:51  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
23:55:51  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
23:55:51  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
23:55:51  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
23:55:51  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
23:55:51  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
23:55:51  22  FROM di5min WHERE pair LIKE'%gbp%'
23:55:51  23  ORDER BY ydate
23:55:51  24  /

View created.

Elapsed: 00:00:00.05
23:55:51 SQL> 
23:55:51 SQL> -- rpt
23:55:51 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20267

Elapsed: 00:00:00.34
23:55:52 SQL> 
23:55:52 SQL> -- Calc deltas and gains
23:55:52 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.25
23:55:52 SQL> 
23:55:52 SQL> CREATE TABLE q13 COMPRESS AS
23:55:52   2  SELECT
23:55:52   3  pair
23:55:52   4  ,ydate
23:55:52   5  ,prdate
23:55:52   6  ,rnum
23:55:52   7  ,ld8
23:55:52   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
23:55:52   9  -- step by 2
23:55:52  10  ,clse-lg6  d06
23:55:52  11  ,lg6 -lg8  d68
23:55:52  12  ,lg8 -lg10 d810
23:55:52  13  ,lg10-lg12 d1012
23:55:52  14  ,lg12-lg14 d1214
23:55:52  15  ,lg14-lg16 d1416
23:55:52  16  ,lg16-lg18 d1618
23:55:52  17  -- step by 4
23:55:52  18  ,lg6 -lg10 d610
23:55:52  19  ,lg8 -lg12 d812
23:55:52  20  ,lg10-lg14 d1014
23:55:52  21  ,lg12-lg16 d1216
23:55:52  22  --
23:55:52  23  ,ABS(clse-lg6 )dc6
23:55:52  24  ,ABS(clse-lg8 )dc8
23:55:52  25  ,ABS(clse-lg10)dc10
23:55:52  26  ,ABS(clse-lg12)dc12
23:55:52  27  ,ABS(clse-lg14)dc14
23:55:52  28  ,ABS(clse-lg16)dc16
23:55:52  29  ,ABS(clse-lg18)dc18
23:55:52  30  ,ABS(clse-lg20)dc20
23:55:52  31  ,ABS(clse-lg22)dc22
23:55:52  32  ,(ld8-clse) ug8
23:55:52  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:55:52  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:55:52  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
23:55:52  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:55:52  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
23:55:52  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
23:55:52  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
23:55:52  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
23:55:52  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
23:55:52  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:55:52  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
23:55:52  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
23:55:52  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
23:55:52  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:55:52  47  ,0+TO_CHAR(ydate,'D')d
23:55:52  48  ,0+TO_CHAR(ydate,'W')w
23:55:52  49  -- mpm stands for minutes-past-midnight:
23:55:52  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:55:52  51  FROM q11
23:55:52  52  -- I dont want any NULL values from the LAG() functions:
23:55:52  53  WHERE lg32 > 0
23:55:52  54  ORDER BY pair,ydate
23:55:52  55  /

Table created.

Elapsed: 00:00:01.64
23:55:54 SQL> 
23:55:54 SQL> -- rpt
23:55:54 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9767
	-1	   10116

Elapsed: 00:00:00.02
23:55:54 SQL> 
23:55:54 SQL> -- Calc gains and ntiles
23:55:54 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
23:55:54 SQL> CREATE TABLE q15 COMPRESS AS
23:55:54   2  SELECT
23:55:54   3  pair
23:55:54   4  ,ydate
23:55:54   5  ,prdate -- Should be unique
23:55:54   6  ,trend -- +1 or -1
23:55:54   7  -- Use NTILE() to derive some attributes
23:55:54   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
23:55:54   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
23:55:54  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
23:55:54  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
23:55:54  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
23:55:54  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
23:55:54  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
23:55:54  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
23:55:54  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
23:55:54  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
23:55:54  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
23:55:54  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
23:55:54  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
23:55:54  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
23:55:54  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
23:55:54  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
23:55:54  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
23:55:54  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
23:55:54  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
23:55:54  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
23:55:54  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
23:55:54  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
23:55:54  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
23:55:54  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
23:55:54  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
23:55:54  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
23:55:54  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
23:55:54  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
23:55:54  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
23:55:54  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
23:55:54  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
23:55:54  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
23:55:54  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:55:54  41  ,hh    att32
23:55:54  42  ,d     att33
23:55:54  43  ,w     att34
23:55:54  44  ,mpm   att35
23:55:54  45  ,trend att36
23:55:54  46  ,ug8 g8
23:55:54  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
23:55:54  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
23:55:54  49  FROM q13
23:55:54  50  ORDER BY pair,ydate
23:55:54  51  /

Table created.

Elapsed: 00:00:05.27
23:55:59 SQL> 
23:55:59 SQL> -- rpt
23:55:59 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
23:55:59   2  GROUP BY pair,trend,gatt,gattn
23:55:59   3  ORDER BY pair,trend,gatt,gattn
23:55:59   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
gbp_usd 	-1 nup nup .000081874	    3713
gbp_usd 	-1 nup up  -.00590001	    3172
gbp_usd 	-1 up  nup .005821702	    3146
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup -.00007666	    3635
gbp_usd 	 1 nup up   -.0055598	    3120
gbp_usd 	 1 up  nup .006246143	    3001
gbp_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
23:55:59 SQL> 
23:55:59 SQL> -- rpt
23:55:59 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-19 23:50:00

Elapsed: 00:00:00.02
23:55:59 SQL> 
23:55:59 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
23:55:59 SQL> CREATE TABLE modsrc COMPRESS AS
23:55:59   2  SELECT
23:55:59   3  pair
23:55:59   4  ,ydate
23:55:59   5  ,prdate
23:55:59   6  ,trend
23:55:59   7  ,g8
23:55:59   8  ,gatt
23:55:59   9  ,gattn
23:55:59  10  FROM q15
23:55:59  11  /

Table created.

Elapsed: 00:00:00.95
23:56:00 SQL> 
23:56:00 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
23:56:00 SQL> 
23:56:00 SQL> -- rpt
23:56:00 SQL> 
23:56:00 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20267

Elapsed: 00:00:00.33
23:56:01 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19883

Elapsed: 00:00:00.00
23:56:01 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19883

Elapsed: 00:00:00.01
23:56:01 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19883

Elapsed: 00:00:00.01
23:56:01 SQL> 
23:56:01 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.12
23:56:01 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
23:56:01   2  SELECT
23:56:01   3  ydate
23:56:01   4  ,trend gbp_trend
23:56:01   5  ,g8    gbp_g8
23:56:01   6  ,gatt  gbp_gatt
23:56:01   7  ,gattn gbp_gattn
23:56:01   8  FROM modsrc
23:56:01   9  /

Table created.

Elapsed: 00:00:00.07
23:56:01 SQL> 
23:56:01 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
23:56:01 SQL> 
23:56:01 SQL> -- rpt
23:56:01 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 07:35:01 2010-12-19 23:50:00	 9756	  -.0231       .019
	-1 2010-09-14 04:55:01 2010-12-19 23:35:00	10031	    -.02      .0204

Elapsed: 00:00:00.02
23:56:01 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g8),MAX(gbp_g8)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G8) MAX(GBP_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 07:35:01 2010-12-19 23:50:00	       9767	 -.0231        .019
	-1 2010-09-14 04:55:01 2010-12-19 23:35:00	      10116	   -.02       .0204

Elapsed: 00:00:00.02
23:56:01 SQL> 
23:56:01 SQL> -- I need a copy of q15 attributes
23:56:01 SQL> 
23:56:01 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.05
23:56:01 SQL> CREATE TABLE gbp_att COMPRESS AS
23:56:01   2  SELECT
23:56:01   3  ydate
23:56:01   4  ,att00 gbp_att00
23:56:01   5  ,att01 gbp_att01
23:56:01   6  ,att02 gbp_att02
23:56:01   7  ,att03 gbp_att03
23:56:01   8  ,att04 gbp_att04
23:56:01   9  ,att05 gbp_att05
23:56:01  10  ,att06 gbp_att06
23:56:01  11  ,att07 gbp_att07
23:56:01  12  ,att08 gbp_att08
23:56:01  13  ,att09 gbp_att09
23:56:01  14  ,att10 gbp_att10
23:56:01  15  ,att11 gbp_att11
23:56:01  16  ,att12 gbp_att12
23:56:01  17  ,att13 gbp_att13
23:56:01  18  ,att14 gbp_att14
23:56:01  19  ,att15 gbp_att15
23:56:01  20  ,att16 gbp_att16
23:56:01  21  ,att17 gbp_att17
23:56:01  22  ,att18 gbp_att18
23:56:01  23  ,att19 gbp_att19
23:56:01  24  ,att20 gbp_att20
23:56:01  25  ,att21 gbp_att21
23:56:01  26  ,att22 gbp_att22
23:56:01  27  ,att23 gbp_att23
23:56:01  28  ,att24 gbp_att24
23:56:01  29  ,att25 gbp_att25
23:56:01  30  ,att26 gbp_att26
23:56:01  31  ,att27 gbp_att27
23:56:01  32  ,att28 gbp_att28
23:56:01  33  ,att29 gbp_att29
23:56:01  34  ,att30 gbp_att30
23:56:01  35  ,att31 gbp_att31
23:56:01  36  ,att32 gbp_att32
23:56:01  37  ,att33 gbp_att33
23:56:01  38  ,att34 gbp_att34
23:56:01  39  ,att35 gbp_att35
23:56:01  40  ,att36 gbp_att36
23:56:01  41  FROM q15
23:56:01  42  /

Table created.

Elapsed: 00:00:00.17
23:56:01 SQL> 
23:56:01 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
23:56:02 SQL> 
23:56:02 SQL> -- rpt
23:56:02 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19883

Elapsed: 00:00:00.00
23:56:02 SQL> 
23:56:02 SQL> --
23:56:02 SQL> -- jpy10.sql
23:56:02 SQL> --
23:56:02 SQL> 
23:56:02 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:56:02 SQL> 
23:56:02 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.31
23:56:02 SQL> 
23:56:02 SQL> -- I created di5min here:
23:56:02 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
23:56:02 SQL> 
23:56:02 SQL> CREATE OR REPLACE VIEW q11 AS
23:56:02   2  SELECT
23:56:02   3  pair
23:56:02   4  ,ydate
23:56:02   5  ,prdate
23:56:02   6  ,rownum rnum -- acts as t in my time-series
23:56:02   7  ,clse
23:56:02   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
23:56:02   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
23:56:02  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
23:56:02  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
23:56:02  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
23:56:02  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
23:56:02  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
23:56:02  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
23:56:02  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
23:56:02  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
23:56:02  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
23:56:02  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
23:56:02  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
23:56:02  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
23:56:02  22  FROM di5min WHERE pair LIKE'%jpy%'
23:56:02  23  ORDER BY ydate
23:56:02  24  /

View created.

Elapsed: 00:00:00.04
23:56:02 SQL> 
23:56:02 SQL> -- rpt
23:56:02 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20269

Elapsed: 00:00:00.34
23:56:02 SQL> 
23:56:02 SQL> -- Calc deltas and gains
23:56:02 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.21
23:56:03 SQL> 
23:56:03 SQL> CREATE TABLE q13 COMPRESS AS
23:56:03   2  SELECT
23:56:03   3  pair
23:56:03   4  ,ydate
23:56:03   5  ,prdate
23:56:03   6  ,rnum
23:56:03   7  ,ld8
23:56:03   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
23:56:03   9  -- step by 2
23:56:03  10  ,clse-lg6  d06
23:56:03  11  ,lg6 -lg8  d68
23:56:03  12  ,lg8 -lg10 d810
23:56:03  13  ,lg10-lg12 d1012
23:56:03  14  ,lg12-lg14 d1214
23:56:03  15  ,lg14-lg16 d1416
23:56:03  16  ,lg16-lg18 d1618
23:56:03  17  -- step by 4
23:56:03  18  ,lg6 -lg10 d610
23:56:03  19  ,lg8 -lg12 d812
23:56:03  20  ,lg10-lg14 d1014
23:56:03  21  ,lg12-lg16 d1216
23:56:03  22  --
23:56:03  23  ,ABS(clse-lg6 )dc6
23:56:03  24  ,ABS(clse-lg8 )dc8
23:56:03  25  ,ABS(clse-lg10)dc10
23:56:03  26  ,ABS(clse-lg12)dc12
23:56:03  27  ,ABS(clse-lg14)dc14
23:56:03  28  ,ABS(clse-lg16)dc16
23:56:03  29  ,ABS(clse-lg18)dc18
23:56:03  30  ,ABS(clse-lg20)dc20
23:56:03  31  ,ABS(clse-lg22)dc22
23:56:03  32  ,(ld8-clse) ug8
23:56:03  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:56:03  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:56:03  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
23:56:03  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:56:03  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
23:56:03  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
23:56:03  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
23:56:03  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
23:56:03  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
23:56:03  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:56:03  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
23:56:03  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
23:56:03  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
23:56:03  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:56:03  47  ,0+TO_CHAR(ydate,'D')d
23:56:03  48  ,0+TO_CHAR(ydate,'W')w
23:56:03  49  -- mpm stands for minutes-past-midnight:
23:56:03  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:56:03  51  FROM q11
23:56:03  52  -- I dont want any NULL values from the LAG() functions:
23:56:03  53  WHERE lg32 > 0
23:56:03  54  ORDER BY pair,ydate
23:56:03  55  /

Table created.

Elapsed: 00:00:01.74
23:56:04 SQL> 
23:56:04 SQL> -- rpt
23:56:04 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9400
	-1	   10485

Elapsed: 00:00:00.03
23:56:04 SQL> 
23:56:04 SQL> -- Calc gains and ntiles
23:56:04 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.16
23:56:04 SQL> CREATE TABLE q15 COMPRESS AS
23:56:04   2  SELECT
23:56:04   3  pair
23:56:04   4  ,ydate
23:56:04   5  ,prdate -- Should be unique
23:56:04   6  ,trend -- +1 or -1
23:56:04   7  -- Use NTILE() to derive some attributes
23:56:04   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
23:56:04   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
23:56:04  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
23:56:04  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
23:56:04  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
23:56:04  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
23:56:04  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
23:56:04  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
23:56:04  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
23:56:04  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
23:56:04  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
23:56:04  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
23:56:04  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
23:56:04  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
23:56:04  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
23:56:04  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
23:56:04  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
23:56:04  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
23:56:04  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
23:56:04  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
23:56:04  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
23:56:04  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
23:56:04  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
23:56:04  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
23:56:04  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
23:56:04  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
23:56:04  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
23:56:04  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
23:56:04  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
23:56:04  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
23:56:04  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
23:56:04  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
23:56:04  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:56:04  41  ,hh    att32
23:56:04  42  ,d     att33
23:56:04  43  ,w     att34
23:56:04  44  ,mpm   att35
23:56:04  45  ,trend att36
23:56:04  46  ,ug8 g8
23:56:04  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
23:56:04  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
23:56:04  49  FROM q13
23:56:04  50  ORDER BY pair,ydate
23:56:04  51  /

Table created.

Elapsed: 00:00:05.43
23:56:10 SQL> 
23:56:10 SQL> -- rpt
23:56:10 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
23:56:10   2  GROUP BY pair,trend,gatt,gattn
23:56:10   3  ORDER BY pair,trend,gatt,gattn
23:56:10   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
usd_jpy 	-1 nup nup	    0	     160
usd_jpy 	-1 nup up  -.18870188	    5169
usd_jpy 	-1 up  nup .208237569	    5108
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     119
usd_jpy 	 1 nup up  -.18891036	    4942
usd_jpy 	 1 up  nup .213079702	    4291
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
23:56:10 SQL> 
23:56:10 SQL> -- rpt
23:56:10 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-19 23:55:00

Elapsed: 00:00:00.01
23:56:10 SQL> 
23:56:10 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.12
23:56:10 SQL> CREATE TABLE modsrc COMPRESS AS
23:56:10   2  SELECT
23:56:10   3  pair
23:56:10   4  ,ydate
23:56:10   5  ,prdate
23:56:10   6  ,trend
23:56:10   7  ,g8
23:56:10   8  ,gatt
23:56:10   9  ,gattn
23:56:10  10  FROM q15
23:56:10  11  /

Table created.

Elapsed: 00:00:00.09
23:56:10 SQL> 
23:56:10 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
23:56:10 SQL> 
23:56:10 SQL> -- rpt
23:56:10 SQL> 
23:56:10 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20269

Elapsed: 00:00:00.33
23:56:11 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19885

Elapsed: 00:00:00.00
23:56:11 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19885

Elapsed: 00:00:00.01
23:56:11 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19885

Elapsed: 00:00:00.00
23:56:11 SQL> 
23:56:11 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
23:56:11 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
23:56:11   2  SELECT
23:56:11   3  ydate
23:56:11   4  ,trend jpy_trend
23:56:11   5  ,g8    jpy_g8
23:56:11   6  ,gatt  jpy_gatt
23:56:11   7  ,gattn jpy_gattn
23:56:11   8  FROM modsrc
23:56:11   9  /

Table created.

Elapsed: 00:00:00.07
23:56:11 SQL> 
23:56:11 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
23:56:11 SQL> 
23:56:11 SQL> -- rpt
23:56:11 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 08:50:01 2010-12-19 23:20:00	 9352	  -1.185       2.42
	-1 2010-09-14 04:55:01 2010-12-19 23:55:00	10437	 -1.0575       2.49

Elapsed: 00:00:00.02
23:56:11 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g8),MAX(jpy_g8)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G8) MAX(JPY_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 08:50:01 2010-12-19 23:20:00	       9400	 -1.185        2.42
	-1 2010-09-14 04:55:01 2010-12-19 23:55:00	      10485	-1.0575        2.49

Elapsed: 00:00:00.01
23:56:11 SQL> 
23:56:11 SQL> -- I need a copy of q15 attributes
23:56:11 SQL> 
23:56:11 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.06
23:56:11 SQL> CREATE TABLE jpy_att COMPRESS AS
23:56:11   2  SELECT
23:56:11   3  ydate
23:56:11   4  ,att00 jpy_att00
23:56:11   5  ,att01 jpy_att01
23:56:11   6  ,att02 jpy_att02
23:56:11   7  ,att03 jpy_att03
23:56:11   8  ,att04 jpy_att04
23:56:11   9  ,att05 jpy_att05
23:56:11  10  ,att06 jpy_att06
23:56:11  11  ,att07 jpy_att07
23:56:11  12  ,att08 jpy_att08
23:56:11  13  ,att09 jpy_att09
23:56:11  14  ,att10 jpy_att10
23:56:11  15  ,att11 jpy_att11
23:56:11  16  ,att12 jpy_att12
23:56:11  17  ,att13 jpy_att13
23:56:11  18  ,att14 jpy_att14
23:56:11  19  ,att15 jpy_att15
23:56:11  20  ,att16 jpy_att16
23:56:11  21  ,att17 jpy_att17
23:56:11  22  ,att18 jpy_att18
23:56:11  23  ,att19 jpy_att19
23:56:11  24  ,att20 jpy_att20
23:56:11  25  ,att21 jpy_att21
23:56:11  26  ,att22 jpy_att22
23:56:11  27  ,att23 jpy_att23
23:56:11  28  ,att24 jpy_att24
23:56:11  29  ,att25 jpy_att25
23:56:11  30  ,att26 jpy_att26
23:56:11  31  ,att27 jpy_att27
23:56:11  32  ,att28 jpy_att28
23:56:11  33  ,att29 jpy_att29
23:56:11  34  ,att30 jpy_att30
23:56:11  35  ,att31 jpy_att31
23:56:11  36  ,att32 jpy_att32
23:56:11  37  ,att33 jpy_att33
23:56:11  38  ,att34 jpy_att34
23:56:11  39  ,att35 jpy_att35
23:56:11  40  ,att36 jpy_att36
23:56:11  41  FROM q15
23:56:11  42  /

Table created.

Elapsed: 00:00:00.25
23:56:11 SQL> 
23:56:11 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
23:56:12 SQL> 
23:56:12 SQL> -- rpt
23:56:12 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19885

Elapsed: 00:00:00.00
23:56:12 SQL> 
23:56:12 SQL> --
23:56:12 SQL> -- cad10.sql
23:56:12 SQL> --
23:56:12 SQL> 
23:56:12 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:56:12 SQL> 
23:56:12 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.32
23:56:12 SQL> 
23:56:12 SQL> -- I created di5min here:
23:56:12 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
23:56:12 SQL> 
23:56:12 SQL> CREATE OR REPLACE VIEW q11 AS
23:56:12   2  SELECT
23:56:12   3  pair
23:56:12   4  ,ydate
23:56:12   5  ,prdate
23:56:12   6  ,rownum rnum -- acts as t in my time-series
23:56:12   7  ,clse
23:56:12   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
23:56:12   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
23:56:12  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
23:56:12  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
23:56:12  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
23:56:12  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
23:56:12  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
23:56:12  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
23:56:12  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
23:56:12  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
23:56:12  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
23:56:12  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
23:56:12  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
23:56:12  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
23:56:12  22  FROM di5min WHERE pair LIKE'%cad%'
23:56:12  23  ORDER BY ydate
23:56:12  24  /

View created.

Elapsed: 00:00:00.05
23:56:12 SQL> 
23:56:12 SQL> -- rpt
23:56:12 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20264

Elapsed: 00:00:00.34
23:56:12 SQL> 
23:56:12 SQL> -- Calc deltas and gains
23:56:12 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.29
23:56:13 SQL> 
23:56:13 SQL> CREATE TABLE q13 COMPRESS AS
23:56:13   2  SELECT
23:56:13   3  pair
23:56:13   4  ,ydate
23:56:13   5  ,prdate
23:56:13   6  ,rnum
23:56:13   7  ,ld8
23:56:13   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
23:56:13   9  -- step by 2
23:56:13  10  ,clse-lg6  d06
23:56:13  11  ,lg6 -lg8  d68
23:56:13  12  ,lg8 -lg10 d810
23:56:13  13  ,lg10-lg12 d1012
23:56:13  14  ,lg12-lg14 d1214
23:56:13  15  ,lg14-lg16 d1416
23:56:13  16  ,lg16-lg18 d1618
23:56:13  17  -- step by 4
23:56:13  18  ,lg6 -lg10 d610
23:56:13  19  ,lg8 -lg12 d812
23:56:13  20  ,lg10-lg14 d1014
23:56:13  21  ,lg12-lg16 d1216
23:56:13  22  --
23:56:13  23  ,ABS(clse-lg6 )dc6
23:56:13  24  ,ABS(clse-lg8 )dc8
23:56:13  25  ,ABS(clse-lg10)dc10
23:56:13  26  ,ABS(clse-lg12)dc12
23:56:13  27  ,ABS(clse-lg14)dc14
23:56:13  28  ,ABS(clse-lg16)dc16
23:56:13  29  ,ABS(clse-lg18)dc18
23:56:13  30  ,ABS(clse-lg20)dc20
23:56:13  31  ,ABS(clse-lg22)dc22
23:56:13  32  ,(ld8-clse) ug8
23:56:13  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
23:56:13  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
23:56:13  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
23:56:13  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
23:56:13  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
23:56:13  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
23:56:13  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
23:56:13  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
23:56:13  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
23:56:13  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
23:56:13  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
23:56:13  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
23:56:13  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
23:56:13  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
23:56:13  47  ,0+TO_CHAR(ydate,'D')d
23:56:13  48  ,0+TO_CHAR(ydate,'W')w
23:56:13  49  -- mpm stands for minutes-past-midnight:
23:56:13  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
23:56:13  51  FROM q11
23:56:13  52  -- I dont want any NULL values from the LAG() functions:
23:56:13  53  WHERE lg32 > 0
23:56:13  54  ORDER BY pair,ydate
23:56:13  55  /

Table created.

Elapsed: 00:00:01.70
23:56:14 SQL> 
23:56:14 SQL> -- rpt
23:56:14 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9218
	-1	   10662

Elapsed: 00:00:00.03
23:56:14 SQL> 
23:56:14 SQL> -- Calc gains and ntiles
23:56:14 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.16
23:56:15 SQL> CREATE TABLE q15 COMPRESS AS
23:56:15   2  SELECT
23:56:15   3  pair
23:56:15   4  ,ydate
23:56:15   5  ,prdate -- Should be unique
23:56:15   6  ,trend -- +1 or -1
23:56:15   7  -- Use NTILE() to derive some attributes
23:56:15   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
23:56:15   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
23:56:15  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
23:56:15  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
23:56:15  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
23:56:15  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
23:56:15  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
23:56:15  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
23:56:15  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
23:56:15  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
23:56:15  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
23:56:15  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
23:56:15  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
23:56:15  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
23:56:15  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
23:56:15  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
23:56:15  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
23:56:15  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
23:56:15  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
23:56:15  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
23:56:15  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
23:56:15  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
23:56:15  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
23:56:15  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
23:56:15  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
23:56:15  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
23:56:15  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
23:56:15  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
23:56:15  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
23:56:15  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
23:56:15  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
23:56:15  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
23:56:15  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
23:56:15  41  ,hh    att32
23:56:15  42  ,d     att33
23:56:15  43  ,w     att34
23:56:15  44  ,mpm   att35
23:56:15  45  ,trend att36
23:56:15  46  ,ug8 g8
23:56:15  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
23:56:15  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
23:56:15  49  FROM q13
23:56:15  50  ORDER BY pair,ydate
23:56:15  51  /

Table created.

Elapsed: 00:00:05.21
23:56:20 SQL> 
23:56:20 SQL> -- rpt
23:56:20 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
23:56:20   2  GROUP BY pair,trend,gatt,gattn
23:56:20   3  ORDER BY pair,trend,gatt,gattn
23:56:20   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
usd_cad 	-1 nup nup -.00002778	    5534
usd_cad 	-1 nup up  -.00402052	    2605
usd_cad 	-1 up  nup .004652368	    2523
usd_cad 	 1 nup nup  -.0000868	    4419
usd_cad 	 1 nup up  -.00422395	    2703
usd_cad 	 1 up  nup .004591138	    2000
usd_cad 	 1			       0

7 rows selected.

Elapsed: 00:00:00.03
23:56:20 SQL> 
23:56:20 SQL> -- rpt
23:56:20 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-19 23:50:00

Elapsed: 00:00:00.02
23:56:20 SQL> 
23:56:20 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.10
23:56:20 SQL> CREATE TABLE modsrc COMPRESS AS
23:56:20   2  SELECT
23:56:20   3  pair
23:56:20   4  ,ydate
23:56:20   5  ,prdate
23:56:20   6  ,trend
23:56:20   7  ,g8
23:56:20   8  ,gatt
23:56:20   9  ,gattn
23:56:20  10  FROM q15
23:56:20  11  /

Table created.

Elapsed: 00:00:00.07
23:56:20 SQL> 
23:56:20 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
23:56:20 SQL> 
23:56:20 SQL> -- rpt
23:56:20 SQL> 
23:56:20 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20264

Elapsed: 00:00:00.33
23:56:21 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19880

Elapsed: 00:00:00.00
23:56:21 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19880

Elapsed: 00:00:00.01
23:56:21 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19880

Elapsed: 00:00:00.00
23:56:21 SQL> 
23:56:21 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
23:56:21 SQL> CREATE TABLE cad_ms10 COMPRESS AS
23:56:21   2  SELECT
23:56:21   3  ydate
23:56:21   4  ,trend cad_trend
23:56:21   5  ,g8    cad_g8
23:56:21   6  ,gatt  cad_gatt
23:56:21   7  ,gattn cad_gattn
23:56:21   8  FROM modsrc
23:56:21   9  /

Table created.

Elapsed: 00:00:00.06
23:56:21 SQL> 
23:56:21 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
23:56:21 SQL> 
23:56:21 SQL> -- rpt
23:56:21 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 04:55:01 2010-12-19 23:50:00	 9122	  -.0122      .0159
	-1 2010-09-14 07:10:01 2010-12-17 08:05:00	10662	 -.01105      .0176

Elapsed: 00:00:00.02
23:56:21 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g8),MAX(cad_g8)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G8) MAX(CAD_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 04:55:01 2010-12-19 23:50:00	       9218	 -.0122       .0159
	-1 2010-09-14 07:10:01 2010-12-17 08:05:00	      10662	-.01105       .0176

Elapsed: 00:00:00.01
23:56:21 SQL> 
23:56:21 SQL> -- I need a copy of q15 attributes
23:56:21 SQL> 
23:56:21 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.05
23:56:21 SQL> CREATE TABLE cad_att COMPRESS AS
23:56:21   2  SELECT
23:56:21   3  ydate
23:56:21   4  ,att00 cad_att00
23:56:21   5  ,att01 cad_att01
23:56:21   6  ,att02 cad_att02
23:56:21   7  ,att03 cad_att03
23:56:21   8  ,att04 cad_att04
23:56:21   9  ,att05 cad_att05
23:56:21  10  ,att06 cad_att06
23:56:21  11  ,att07 cad_att07
23:56:21  12  ,att08 cad_att08
23:56:21  13  ,att09 cad_att09
23:56:21  14  ,att10 cad_att10
23:56:21  15  ,att11 cad_att11
23:56:21  16  ,att12 cad_att12
23:56:21  17  ,att13 cad_att13
23:56:21  18  ,att14 cad_att14
23:56:21  19  ,att15 cad_att15
23:56:21  20  ,att16 cad_att16
23:56:21  21  ,att17 cad_att17
23:56:21  22  ,att18 cad_att18
23:56:21  23  ,att19 cad_att19
23:56:21  24  ,att20 cad_att20
23:56:21  25  ,att21 cad_att21
23:56:21  26  ,att22 cad_att22
23:56:21  27  ,att23 cad_att23
23:56:21  28  ,att24 cad_att24
23:56:21  29  ,att25 cad_att25
23:56:21  30  ,att26 cad_att26
23:56:21  31  ,att27 cad_att27
23:56:21  32  ,att28 cad_att28
23:56:21  33  ,att29 cad_att29
23:56:21  34  ,att30 cad_att30
23:56:21  35  ,att31 cad_att31
23:56:21  36  ,att32 cad_att32
23:56:21  37  ,att33 cad_att33
23:56:21  38  ,att34 cad_att34
23:56:21  39  ,att35 cad_att35
23:56:21  40  ,att36 cad_att36
23:56:21  41  FROM q15
23:56:21  42  /

Table created.

Elapsed: 00:00:00.17
23:56:21 SQL> 
23:56:21 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.43
23:56:22 SQL> 
23:56:22 SQL> -- rpt
23:56:22 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19880

Elapsed: 00:00:00.01
23:56:22 SQL> 
23:56:22 SQL> --
23:56:22 SQL> -- chf10.sql
23:56:22 SQL> --
23:56:22 SQL> 
23:56:22 SQL> -- Creates views and tables for backtesting a forex SVM strategy
23:56:22 SQL> 
23:56:22 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.41
23:56:22 SQL> 
23:56:22 SQL> -- I created di5min here:
23:56:22 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
23:56:22 SQL> 
23:56:22 SQL> CREATE OR REPLACE VIEW q11 AS
23:56:22   2  SELECT
23:56:22   3  pair
23:56:22   4  ,ydate
23:56:22   5  ,prdate
23:56:22   6  ,rownum rnum -- acts as t in my time-series
23:56:22   7  ,clse
23:56:22   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
23:56:22   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
23:56:22  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
23:56:22  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
23:56:22  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
23:56:22  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
23:56:22  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
23:56:22  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
23:56:22  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
23:56:22  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
23:56:22  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
23:56:22  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
23:56:22  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
23:56:22  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
23:56:22  22  FROM di5min WHERE pair LIKE'%chf%'
23:56:22  23  ORDER BY ydate
23:56:22  24  /

View created.

Elapsed: 00:00:00.04
23:56:22 SQL> 
23:56:22 SQL> -- rpt
23:56:22 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20267

Elapsed: 00:00:00.33
23:56:22 SQL> 
23:56:22 SQL> -- Calc deltas and gains
23:56:22 SQL> DROP TABLE q13;
