
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 23 22:18:36 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

22:18:36 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
22:18:36 SQL> 22:18:36 SQL> --
22:18:36 SQL> -- eur10.sql
22:18:36 SQL> --
22:18:36 SQL> 
22:18:36 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:18:36 SQL> 
22:18:36 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.02
22:18:36 SQL> 
22:18:36 SQL> -- I created di5min here:
22:18:36 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
22:18:36 SQL> 
22:18:36 SQL> CREATE OR REPLACE VIEW q11 AS
22:18:36   2  SELECT
22:18:36   3  pair
22:18:36   4  ,ydate
22:18:36   5  ,prdate
22:18:36   6  ,rownum rnum -- acts as t in my time-series
22:18:36   7  ,clse
22:18:36   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
22:18:36   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
22:18:36  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
22:18:36  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
22:18:36  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
22:18:36  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
22:18:36  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
22:18:36  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
22:18:36  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
22:18:36  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
22:18:36  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
22:18:36  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
22:18:36  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
22:18:36  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
22:18:36  22  FROM di5min WHERE pair LIKE'%eur%'
22:18:36  23  ORDER BY ydate
22:18:36  24  /

View created.

Elapsed: 00:00:00.05
22:18:36 SQL> 
22:18:36 SQL> -- rpt
22:18:36 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20743

Elapsed: 00:00:00.37
22:18:36 SQL> 
22:18:36 SQL> -- Calc deltas and gains
22:18:36 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.19
22:18:36 SQL> 
22:18:36 SQL> CREATE TABLE q13 COMPRESS AS
22:18:36   2  SELECT
22:18:36   3  pair
22:18:36   4  ,ydate
22:18:36   5  ,prdate
22:18:36   6  ,rnum
22:18:36   7  ,ld8
22:18:36   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
22:18:36   9  -- step by 2
22:18:36  10  ,clse-lg6  d06
22:18:36  11  ,lg6 -lg8  d68
22:18:36  12  ,lg8 -lg10 d810
22:18:36  13  ,lg10-lg12 d1012
22:18:36  14  ,lg12-lg14 d1214
22:18:36  15  ,lg14-lg16 d1416
22:18:36  16  ,lg16-lg18 d1618
22:18:36  17  -- step by 4
22:18:36  18  ,lg6 -lg10 d610
22:18:36  19  ,lg8 -lg12 d812
22:18:36  20  ,lg10-lg14 d1014
22:18:36  21  ,lg12-lg16 d1216
22:18:36  22  --
22:18:36  23  ,ABS(clse-lg6 )dc6
22:18:36  24  ,ABS(clse-lg8 )dc8
22:18:36  25  ,ABS(clse-lg10)dc10
22:18:36  26  ,ABS(clse-lg12)dc12
22:18:36  27  ,ABS(clse-lg14)dc14
22:18:36  28  ,ABS(clse-lg16)dc16
22:18:36  29  ,ABS(clse-lg18)dc18
22:18:36  30  ,ABS(clse-lg20)dc20
22:18:36  31  ,ABS(clse-lg22)dc22
22:18:36  32  ,(ld8-clse) ug8
22:18:36  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:18:36  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:18:36  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
22:18:36  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:18:36  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
22:18:36  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
22:18:36  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
22:18:36  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
22:18:36  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
22:18:36  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:18:36  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
22:18:36  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
22:18:36  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
22:18:36  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:18:36  47  ,0+TO_CHAR(ydate,'D')d
22:18:36  48  ,0+TO_CHAR(ydate,'W')w
22:18:36  49  -- mpm stands for minutes-past-midnight:
22:18:36  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:18:36  51  FROM q11
22:18:36  52  -- I dont want any NULL values from the LAG() functions:
22:18:36  53  WHERE lg32 > 0
22:18:36  54  ORDER BY pair,ydate
22:18:36  55  /

Table created.

Elapsed: 00:00:02.05
22:18:38 SQL> 
22:18:38 SQL> -- rpt
22:18:38 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10113
	-1	   10246

Elapsed: 00:00:00.03
22:18:38 SQL> 
22:18:38 SQL> -- Calc gains and ntiles
22:18:38 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.14
22:18:38 SQL> CREATE TABLE q15 COMPRESS AS
22:18:38   2  SELECT
22:18:38   3  pair
22:18:38   4  ,ydate
22:18:38   5  ,prdate -- Should be unique
22:18:38   6  ,trend -- +1 or -1
22:18:38   7  -- Use NTILE() to derive some attributes
22:18:38   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
22:18:38   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
22:18:38  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
22:18:38  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
22:18:38  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
22:18:38  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
22:18:38  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
22:18:38  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
22:18:38  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
22:18:38  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
22:18:38  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
22:18:38  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
22:18:38  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
22:18:38  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
22:18:38  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
22:18:38  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
22:18:38  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
22:18:38  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
22:18:38  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
22:18:38  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
22:18:38  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
22:18:38  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
22:18:38  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
22:18:38  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
22:18:38  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
22:18:38  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
22:18:38  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
22:18:38  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
22:18:38  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
22:18:38  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
22:18:38  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
22:18:38  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
22:18:38  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:18:38  41  ,hh    att32
22:18:38  42  ,d     att33
22:18:38  43  ,w     att34
22:18:38  44  ,mpm   att35
22:18:38  45  ,trend att36
22:18:38  46  ,ug8 g8
22:18:38  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
22:18:38  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
22:18:38  49  FROM q13
22:18:38  50  ORDER BY pair,ydate
22:18:38  51  /

Table created.

Elapsed: 00:00:05.39
22:18:44 SQL> 
22:18:44 SQL> -- rpt
22:18:44 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
22:18:44   2  GROUP BY pair,trend,gatt,gattn
22:18:44   3  ORDER BY pair,trend,gatt,gattn
22:18:44   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
eur_usd 	-1 nup nup .000024743	    3019
eur_usd 	-1 nup up  -.00602802	    3651
eur_usd 	-1 up  nup .005778524	    3544
eur_usd 	-1			       0
eur_usd 	 1 nup nup -.00009925	    2951
eur_usd 	 1 nup up  -.00625215	    3472
eur_usd 	 1 up  nup .006580195	    3626
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
22:18:44 SQL> 
22:18:44 SQL> -- rpt
22:18:44 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-23 22:15:00

Elapsed: 00:00:00.02
22:18:44 SQL> 
22:18:44 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.16
22:18:44 SQL> CREATE TABLE modsrc COMPRESS AS
22:18:44   2  SELECT
22:18:44   3  pair
22:18:44   4  ,ydate
22:18:44   5  ,prdate
22:18:44   6  ,trend
22:18:44   7  ,g8
22:18:44   8  ,gatt
22:18:44   9  ,gattn
22:18:44  10  FROM q15
22:18:44  11  /

Table created.

Elapsed: 00:00:00.09
22:18:44 SQL> 
22:18:44 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.26
22:18:44 SQL> 
22:18:44 SQL> -- rpt
22:18:44 SQL> 
22:18:44 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20743

Elapsed: 00:00:00.34
22:18:45 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20359

Elapsed: 00:00:00.01
22:18:45 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20359

Elapsed: 00:00:00.01
22:18:45 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20359

Elapsed: 00:00:00.00
22:18:45 SQL> 
22:18:45 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.10
22:18:45 SQL> CREATE TABLE eur_ms10 COMPRESS AS
22:18:45   2  SELECT
22:18:45   3  ydate
22:18:45   4  ,trend eur_trend
22:18:45   5  ,g8    eur_g8
22:18:45   6  ,gatt  eur_gatt
22:18:45   7  ,gattn eur_gattn
22:18:45   8  FROM modsrc
22:18:45   9  /

Table created.

Elapsed: 00:00:00.07
22:18:45 SQL> 
22:18:45 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
22:18:45 SQL> 
22:18:45 SQL> -- rpt
22:18:45 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-16 07:10:01 2010-12-23 22:15:00	10049	  -.0218     .02165
	-1 2010-09-16 06:20:01 2010-12-23 18:05:00	10214	 -.02085      .0196

Elapsed: 00:00:00.03
22:18:45 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g8),MAX(eur_g8)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G8) MAX(EUR_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-16 07:10:01 2010-12-23 22:15:00	      10113	 -.0218      .02165
	-1 2010-09-16 06:20:01 2010-12-23 18:05:00	      10246	-.02085       .0196

Elapsed: 00:00:00.01
22:18:45 SQL> 
22:18:45 SQL> -- I need a copy of q15 attributes
22:18:45 SQL> 
22:18:45 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.15
22:18:45 SQL> CREATE TABLE eur_att COMPRESS AS
22:18:45   2  SELECT
22:18:45   3  ydate
22:18:45   4  ,att00 eur_att00
22:18:45   5  ,att01 eur_att01
22:18:45   6  ,att02 eur_att02
22:18:45   7  ,att03 eur_att03
22:18:45   8  ,att04 eur_att04
22:18:45   9  ,att05 eur_att05
22:18:45  10  ,att06 eur_att06
22:18:45  11  ,att07 eur_att07
22:18:45  12  ,att08 eur_att08
22:18:45  13  ,att09 eur_att09
22:18:45  14  ,att10 eur_att10
22:18:45  15  ,att11 eur_att11
22:18:45  16  ,att12 eur_att12
22:18:45  17  ,att13 eur_att13
22:18:45  18  ,att14 eur_att14
22:18:45  19  ,att15 eur_att15
22:18:45  20  ,att16 eur_att16
22:18:45  21  ,att17 eur_att17
22:18:45  22  ,att18 eur_att18
22:18:45  23  ,att19 eur_att19
22:18:45  24  ,att20 eur_att20
22:18:45  25  ,att21 eur_att21
22:18:45  26  ,att22 eur_att22
22:18:45  27  ,att23 eur_att23
22:18:45  28  ,att24 eur_att24
22:18:45  29  ,att25 eur_att25
22:18:45  30  ,att26 eur_att26
22:18:45  31  ,att27 eur_att27
22:18:45  32  ,att28 eur_att28
22:18:45  33  ,att29 eur_att29
22:18:45  34  ,att30 eur_att30
22:18:45  35  ,att31 eur_att31
22:18:45  36  ,att32 eur_att32
22:18:45  37  ,att33 eur_att33
22:18:45  38  ,att34 eur_att34
22:18:45  39  ,att35 eur_att35
22:18:45  40  ,att36 eur_att36
22:18:45  41  FROM q15
22:18:45  42  /

Table created.

Elapsed: 00:00:00.18
22:18:46 SQL> 
22:18:46 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
22:18:46 SQL> 
22:18:46 SQL> -- rpt
22:18:46 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     20359

Elapsed: 00:00:00.00
22:18:46 SQL> 
22:18:46 SQL> --
22:18:46 SQL> -- aud10.sql
22:18:46 SQL> --
22:18:46 SQL> 
22:18:46 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:18:46 SQL> 
22:18:46 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.30
22:18:46 SQL> 
22:18:46 SQL> -- I created di5min here:
22:18:46 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
22:18:46 SQL> 
22:18:46 SQL> CREATE OR REPLACE VIEW q11 AS
22:18:46   2  SELECT
22:18:46   3  pair
22:18:46   4  ,ydate
22:18:46   5  ,prdate
22:18:46   6  ,rownum rnum -- acts as t in my time-series
22:18:46   7  ,clse
22:18:46   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
22:18:46   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
22:18:46  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
22:18:46  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
22:18:46  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
22:18:46  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
22:18:46  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
22:18:46  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
22:18:46  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
22:18:46  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
22:18:46  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
22:18:46  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
22:18:46  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
22:18:46  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
22:18:46  22  FROM di5min WHERE pair LIKE'%aud%'
22:18:46  23  ORDER BY ydate
22:18:46  24  /

View created.

Elapsed: 00:00:00.04
22:18:46 SQL> 
22:18:46 SQL> -- rpt
22:18:46 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20740

Elapsed: 00:00:00.35
22:18:47 SQL> 
22:18:47 SQL> -- Calc deltas and gains
22:18:47 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.25
22:18:47 SQL> 
22:18:47 SQL> CREATE TABLE q13 COMPRESS AS
22:18:47   2  SELECT
22:18:47   3  pair
22:18:47   4  ,ydate
22:18:47   5  ,prdate
22:18:47   6  ,rnum
22:18:47   7  ,ld8
22:18:47   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
22:18:47   9  -- step by 2
22:18:47  10  ,clse-lg6  d06
22:18:47  11  ,lg6 -lg8  d68
22:18:47  12  ,lg8 -lg10 d810
22:18:47  13  ,lg10-lg12 d1012
22:18:47  14  ,lg12-lg14 d1214
22:18:47  15  ,lg14-lg16 d1416
22:18:47  16  ,lg16-lg18 d1618
22:18:47  17  -- step by 4
22:18:47  18  ,lg6 -lg10 d610
22:18:47  19  ,lg8 -lg12 d812
22:18:47  20  ,lg10-lg14 d1014
22:18:47  21  ,lg12-lg16 d1216
22:18:47  22  --
22:18:47  23  ,ABS(clse-lg6 )dc6
22:18:47  24  ,ABS(clse-lg8 )dc8
22:18:47  25  ,ABS(clse-lg10)dc10
22:18:47  26  ,ABS(clse-lg12)dc12
22:18:47  27  ,ABS(clse-lg14)dc14
22:18:47  28  ,ABS(clse-lg16)dc16
22:18:47  29  ,ABS(clse-lg18)dc18
22:18:47  30  ,ABS(clse-lg20)dc20
22:18:47  31  ,ABS(clse-lg22)dc22
22:18:47  32  ,(ld8-clse) ug8
22:18:47  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:18:47  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:18:47  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
22:18:47  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:18:47  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
22:18:47  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
22:18:47  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
22:18:47  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
22:18:47  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
22:18:47  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:18:47  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
22:18:47  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
22:18:47  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
22:18:47  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:18:47  47  ,0+TO_CHAR(ydate,'D')d
22:18:47  48  ,0+TO_CHAR(ydate,'W')w
22:18:47  49  -- mpm stands for minutes-past-midnight:
22:18:47  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:18:47  51  FROM q11
22:18:47  52  -- I dont want any NULL values from the LAG() functions:
22:18:47  53  WHERE lg32 > 0
22:18:47  54  ORDER BY pair,ydate
22:18:47  55  /

Table created.

Elapsed: 00:00:01.72
22:18:49 SQL> 
22:18:49 SQL> -- rpt
22:18:49 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10835
	-1	    9521

Elapsed: 00:00:00.03
22:18:49 SQL> 
22:18:49 SQL> -- Calc gains and ntiles
22:18:49 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.19
22:18:49 SQL> CREATE TABLE q15 COMPRESS AS
22:18:49   2  SELECT
22:18:49   3  pair
22:18:49   4  ,ydate
22:18:49   5  ,prdate -- Should be unique
22:18:49   6  ,trend -- +1 or -1
22:18:49   7  -- Use NTILE() to derive some attributes
22:18:49   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
22:18:49   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
22:18:49  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
22:18:49  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
22:18:49  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
22:18:49  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
22:18:49  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
22:18:49  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
22:18:49  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
22:18:49  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
22:18:49  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
22:18:49  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
22:18:49  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
22:18:49  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
22:18:49  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
22:18:49  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
22:18:49  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
22:18:49  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
22:18:49  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
22:18:49  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
22:18:49  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
22:18:49  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
22:18:49  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
22:18:49  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
22:18:49  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
22:18:49  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
22:18:49  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
22:18:49  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
22:18:49  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
22:18:49  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
22:18:49  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
22:18:49  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
22:18:49  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:18:49  41  ,hh    att32
22:18:49  42  ,d     att33
22:18:49  43  ,w     att34
22:18:49  44  ,mpm   att35
22:18:49  45  ,trend att36
22:18:49  46  ,ug8 g8
22:18:49  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
22:18:49  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
22:18:49  49  FROM q13
22:18:49  50  ORDER BY pair,ydate
22:18:49  51  /

Table created.

Elapsed: 00:00:05.53
22:18:54 SQL> 
22:18:54 SQL> -- rpt
22:18:54 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
22:18:54   2  GROUP BY pair,trend,gatt,gattn
22:18:54   3  ORDER BY pair,trend,gatt,gattn
22:18:54   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
aud_usd 	-1 nup nup .000033305	    3531
aud_usd 	-1 nup up  -.00523332	    2544
aud_usd 	-1 up  nup .005169704	    3408
aud_usd 	-1			       0
aud_usd 	 1 nup nup .000033145	    4337
aud_usd 	 1 nup up  -.00500133	    3061
aud_usd 	 1 up  nup .005093811	    3379
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
22:18:54 SQL> 
22:18:54 SQL> -- rpt
22:18:54 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-23 22:15:00

Elapsed: 00:00:00.02
22:18:54 SQL> 
22:18:54 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.39
22:18:55 SQL> CREATE TABLE modsrc COMPRESS AS
22:18:55   2  SELECT
22:18:55   3  pair
22:18:55   4  ,ydate
22:18:55   5  ,prdate
22:18:55   6  ,trend
22:18:55   7  ,g8
22:18:55   8  ,gatt
22:18:55   9  ,gattn
22:18:55  10  FROM q15
22:18:55  11  /

Table created.

Elapsed: 00:00:00.16
22:18:55 SQL> 
22:18:55 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.28
22:18:55 SQL> 
22:18:55 SQL> -- rpt
22:18:55 SQL> 
22:18:55 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20740

Elapsed: 00:00:00.35
22:18:56 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20356

Elapsed: 00:00:00.01
22:18:56 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20356

Elapsed: 00:00:00.00
22:18:56 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20356

Elapsed: 00:00:00.01
22:18:56 SQL> 
22:18:56 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.08
22:18:56 SQL> CREATE TABLE aud_ms10 COMPRESS AS
22:18:56   2  SELECT
22:18:56   3  ydate
22:18:56   4  ,trend aud_trend
22:18:56   5  ,g8    aud_g8
22:18:56   6  ,gatt  aud_gatt
22:18:56   7  ,gattn aud_gattn
22:18:56   8  FROM modsrc
22:18:56   9  /

Table created.

Elapsed: 00:00:00.07
22:18:56 SQL> 
22:18:56 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
22:18:56 SQL> 
22:18:56 SQL> -- rpt
22:18:56 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-16 09:00:01 2010-12-23 22:15:00	10777	  -.0203      .0136
	-1 2010-09-16 06:20:01 2010-12-23 20:15:00	 9483	  -.0196      .0148

Elapsed: 00:00:00.04
22:18:56 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g8),MAX(aud_g8)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G8) MAX(AUD_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-16 09:00:01 2010-12-23 22:15:00	      10835	 -.0203       .0136
	-1 2010-09-16 06:20:01 2010-12-23 20:15:00	       9521	 -.0196       .0148

Elapsed: 00:00:00.01
22:18:56 SQL> 
22:18:56 SQL> -- I need a copy of q15 attributes
22:18:56 SQL> 
22:18:56 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.04
22:18:56 SQL> CREATE TABLE aud_att COMPRESS AS
22:18:56   2  SELECT
22:18:56   3  ydate
22:18:56   4  ,att00 aud_att00
22:18:56   5  ,att01 aud_att01
22:18:56   6  ,att02 aud_att02
22:18:56   7  ,att03 aud_att03
22:18:56   8  ,att04 aud_att04
22:18:56   9  ,att05 aud_att05
22:18:56  10  ,att06 aud_att06
22:18:56  11  ,att07 aud_att07
22:18:56  12  ,att08 aud_att08
22:18:56  13  ,att09 aud_att09
22:18:56  14  ,att10 aud_att10
22:18:56  15  ,att11 aud_att11
22:18:56  16  ,att12 aud_att12
22:18:56  17  ,att13 aud_att13
22:18:56  18  ,att14 aud_att14
22:18:56  19  ,att15 aud_att15
22:18:56  20  ,att16 aud_att16
22:18:56  21  ,att17 aud_att17
22:18:56  22  ,att18 aud_att18
22:18:56  23  ,att19 aud_att19
22:18:56  24  ,att20 aud_att20
22:18:56  25  ,att21 aud_att21
22:18:56  26  ,att22 aud_att22
22:18:56  27  ,att23 aud_att23
22:18:56  28  ,att24 aud_att24
22:18:56  29  ,att25 aud_att25
22:18:56  30  ,att26 aud_att26
22:18:56  31  ,att27 aud_att27
22:18:56  32  ,att28 aud_att28
22:18:56  33  ,att29 aud_att29
22:18:56  34  ,att30 aud_att30
22:18:56  35  ,att31 aud_att31
22:18:56  36  ,att32 aud_att32
22:18:56  37  ,att33 aud_att33
22:18:56  38  ,att34 aud_att34
22:18:56  39  ,att35 aud_att35
22:18:56  40  ,att36 aud_att36
22:18:56  41  FROM q15
22:18:56  42  /

Table created.

Elapsed: 00:00:00.17
22:18:56 SQL> 
22:18:56 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.47
22:18:57 SQL> 
22:18:57 SQL> -- rpt
22:18:57 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     20356

Elapsed: 00:00:00.00
22:18:57 SQL> 
22:18:57 SQL> --
22:18:57 SQL> -- gbp10.sql
22:18:57 SQL> --
22:18:57 SQL> 
22:18:57 SQL> -- Creates views and tables for backtesting a forex SVM strategy
22:18:57 SQL> 
22:18:57 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.38
22:18:57 SQL> 
22:18:57 SQL> -- I created di5min here:
22:18:57 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
22:18:57 SQL> 
22:18:57 SQL> CREATE OR REPLACE VIEW q11 AS
22:18:57   2  SELECT
22:18:57   3  pair
22:18:57   4  ,ydate
22:18:57   5  ,prdate
22:18:57   6  ,rownum rnum -- acts as t in my time-series
22:18:57   7  ,clse
22:18:57   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
22:18:57   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
22:18:57  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
22:18:57  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
22:18:57  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
22:18:57  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
22:18:57  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
22:18:57  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
22:18:57  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
22:18:57  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
22:18:57  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
22:18:57  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
22:18:57  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
22:18:57  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
22:18:57  22  FROM di5min WHERE pair LIKE'%gbp%'
22:18:57  23  ORDER BY ydate
22:18:57  24  /

View created.

Elapsed: 00:00:00.02
22:18:57 SQL> 
22:18:57 SQL> -- rpt
22:18:57 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20742

Elapsed: 00:00:00.35
22:18:57 SQL> 
22:18:57 SQL> -- Calc deltas and gains
22:18:57 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.27
22:18:58 SQL> 
22:18:58 SQL> CREATE TABLE q13 COMPRESS AS
22:18:58   2  SELECT
22:18:58   3  pair
22:18:58   4  ,ydate
22:18:58   5  ,prdate
22:18:58   6  ,rnum
22:18:58   7  ,ld8
22:18:58   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
22:18:58   9  -- step by 2
22:18:58  10  ,clse-lg6  d06
22:18:58  11  ,lg6 -lg8  d68
22:18:58  12  ,lg8 -lg10 d810
22:18:58  13  ,lg10-lg12 d1012
22:18:58  14  ,lg12-lg14 d1214
22:18:58  15  ,lg14-lg16 d1416
22:18:58  16  ,lg16-lg18 d1618
22:18:58  17  -- step by 4
22:18:58  18  ,lg6 -lg10 d610
22:18:58  19  ,lg8 -lg12 d812
22:18:58  20  ,lg10-lg14 d1014
22:18:58  21  ,lg12-lg16 d1216
22:18:58  22  --
22:18:58  23  ,ABS(clse-lg6 )dc6
22:18:58  24  ,ABS(clse-lg8 )dc8
22:18:58  25  ,ABS(clse-lg10)dc10
22:18:58  26  ,ABS(clse-lg12)dc12
22:18:58  27  ,ABS(clse-lg14)dc14
22:18:58  28  ,ABS(clse-lg16)dc16
22:18:58  29  ,ABS(clse-lg18)dc18
22:18:58  30  ,ABS(clse-lg20)dc20
22:18:58  31  ,ABS(clse-lg22)dc22
22:18:58  32  ,(ld8-clse) ug8
22:18:58  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
22:18:58  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
22:18:58  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
22:18:58  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
22:18:58  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
22:18:58  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
22:18:58  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
22:18:58  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
22:18:58  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
22:18:58  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
22:18:58  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
22:18:58  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
22:18:58  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
22:18:58  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:18:58  47  ,0+TO_CHAR(ydate,'D')d
22:18:58  48  ,0+TO_CHAR(ydate,'W')w
22:18:58  49  -- mpm stands for minutes-past-midnight:
22:18:58  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:18:58  51  FROM q11
22:18:58  52  -- I dont want any NULL values from the LAG() functions:
22:18:58  53  WHERE lg32 > 0
22:18:58  54  ORDER BY pair,ydate
22:18:58  55  /

Table created.

Elapsed: 00:00:01.72
22:18:59 SQL> 
22:18:59 SQL> -- rpt
22:18:59 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9918
	-1	   10440

Elapsed: 00:00:00.03
22:18:59 SQL> 
22:18:59 SQL> -- Calc gains and ntiles
22:18:59 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.18
22:19:00 SQL> CREATE TABLE q15 COMPRESS AS
22:19:00   2  SELECT
22:19:00   3  pair
22:19:00   4  ,ydate
22:19:00   5  ,prdate -- Should be unique
22:19:00   6  ,trend -- +1 or -1
22:19:00   7  -- Use NTILE() to derive some attributes
22:19:00   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
22:19:00   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
22:19:00  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
22:19:00  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
22:19:00  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
22:19:00  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
22:19:00  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
22:19:00  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
22:19:00  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
22:19:00  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
22:19:00  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
22:19:00  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
22:19:00  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
22:19:00  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
22:19:00  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
22:19:00  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
22:19:00  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
22:19:00  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
22:19:00  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
22:19:00  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
22:19:00  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
22:19:00  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
22:19:00  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
22:19:00  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
22:19:00  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
22:19:00  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
22:19:00  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
22:19:00  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
22:19:00  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
22:19:00  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
22:19:00  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
22:19:00  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
22:19:00  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
22:19:00  41  ,hh    att32
22:19:00  42  ,d     att33
22:19:00  43  ,w     att34
22:19:00  44  ,mpm   att35
22:19:00  45  ,trend att36
22:19:00  46  ,ug8 g8
22:19:00  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
22:19:00  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
22:19:00  49  FROM q13
22:19:00  50  ORDER BY pair,ydate
22:19:00  51  /

Table created.

Elapsed: 00:00:05.52
22:19:05 SQL> 
22:19:05 SQL> -- rpt
22:19:05 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
22:19:05   2  GROUP BY pair,trend,gatt,gattn
22:19:05   3  ORDER BY pair,trend,gatt,gattn
22:19:05   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
gbp_usd 	-1 nup nup .000094521	    3853
gbp_usd 	-1 nup up   -.0059004	    3270
gbp_usd 	-1 up  nup .005447216	    3296
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup -.00008296	    3633
gbp_usd 	 1 nup up  -.00554744	    3271
gbp_usd 	 1 up  nup .006010675	    2939
gbp_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
22:19:05 SQL> 
22:19:05 SQL> -- rpt
22:19:05 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-23 22:15:00

Elapsed: 00:00:00.02
22:19:05 SQL> 
22:19:05 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.20
22:19:05 SQL> CREATE TABLE modsrc COMPRESS AS
22:19:05   2  SELECT
22:19:05   3  pair
22:19:05   4  ,ydate
22:19:05   5  ,prdate
22:19:05   6  ,trend
22:19:05   7  ,g8
22:19:05   8  ,gatt
22:19:05   9  ,gattn
22:19:05  10  FROM q15
22:19:05  11  /

Table created.

Elapsed: 00:00:00.07
22:19:06 SQL> 
22:19:06 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
22:19:06 SQL> 
22:19:06 SQL> -- rpt
22:19:06 SQL> 
22:19:06 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20742

Elapsed: 00:00:00.36
22:19:06 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      20358

Elapsed: 00:00:00.00
22:19:06 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      20358

Elapsed: 00:00:00.01
22:19:06 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      20358

Elapsed: 00:00:00.00
22:19:06 SQL> 
22:19:06 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.05
22:19:06 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
22:19:06   2  SELECT
22:19:06   3  ydate
22:19:06   4  ,trend gbp_trend
22:19:06   5  ,g8    gbp_g8
22:19:06   6  ,gatt  gbp_gatt
22:19:06   7  ,gattn gbp_gattn
22:19:06   8  FROM modsrc
22:19:06   9  /

Table created.

Elapsed: 00:00:00.07
22:19:06 SQL> 
22:19:06 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
22:19:06 SQL> 
22:19:06 SQL> -- rpt
22:19:06 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-16 10:50:01 2010-12-23 22:15:00	 9843	  -.0231       .019
	-1 2010-09-16 06:20:01 2010-12-23 16:00:00	10419	    -.02      .0204

Elapsed: 00:00:00.03
22:19:06 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g8),MAX(gbp_g8)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G8) MAX(GBP_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-16 10:50:01 2010-12-23 22:15:00	       9918	 -.0231        .019
	-1 2010-09-16 06:20:01 2010-12-23 16:00:00	      10440	   -.02       .0204

Elapsed: 00:00:00.01
22:19:06 SQL> 
22:19:06 SQL> -- I need a copy of q15 attributes
22:19:06 SQL> 
22:19:06 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.04
22:19:06 SQL> CREATE TABLE gbp_att COMPRESS AS
22:19:06   2  SELECT
22:19:06   3  ydate
22:19:06   4  ,att00 gbp_att00
22:19:06   5  ,att01 gbp_att01
22:19:06   6  ,att02 gbp_att02
22:19:06   7  ,att03 gbp_att03
22:19:06   8  ,att04 gbp_att04
22:19:06   9  ,att05 gbp_att05
22:19:06  10  ,att06 gbp_att06
22:19:06  11  ,att07 gbp_att07
22:19:06  12  ,att08 gbp_att08
22:19:06  13  ,att09 gbp_att09
22:19:06  14  ,att10 gbp_att10
22:19:06  15  ,att11 gbp_att11
22:19:06  16  ,att12 gbp_att12
22:19:06  17  ,att13 gbp_att13
22:19:06  18  ,att14 gbp_att14
22:19:06  19  ,att15 gbp_att15
22:19:06  20  ,att16 gbp_att16
22:19:06  21  ,att17 gbp_att17
22:19:06  22  ,att18 gbp_att18
22:19:06  23  ,att19 gbp_att19
22:19:06  24  ,att20 gbp_att20
22:19:06  25  ,att21 gbp_att21
22:19:06  26  ,att22 gbp_att22
22:19:06  27  ,att23 gbp_att23
22:19:06  28  ,att24 gbp_att24
22:19:06  29  ,att25 gbp_att25
22:19:06  30  ,att26 gbp_att26
22:19:06  31  ,att27 gbp_att27
22:19:06  32  ,att28 gbp_att28
22:19:06  33  ,att29 gbp_att29
22:19:06  34  ,att30 gbp_att30
22:19:06  35  ,att31 gbp_att31
22:19:06  36  ,att32 gbp_att32
22:19:06  37  ,att33 gbp_att33
22:19:06  38  ,att34 gbp_att34
22:19:06  39  ,att35 gbp_att35
22:19:06  40  ,att36 gbp_att36
22:19:06  41  FROM q15
22:19:06  42  /
