
SQL*Plus: Release 11.2.0.1.0 Production on Mon Dec 20 06:38:23 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

06:38:23 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
06:38:23 SQL> 06:38:23 SQL> --
06:38:23 SQL> -- eur10.sql
06:38:23 SQL> --
06:38:23 SQL> 
06:38:23 SQL> -- Creates views and tables for backtesting a forex SVM strategy
06:38:23 SQL> 
06:38:23 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.01
06:38:23 SQL> 
06:38:23 SQL> -- I created di5min here:
06:38:23 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
06:38:23 SQL> 
06:38:23 SQL> CREATE OR REPLACE VIEW q11 AS
06:38:23   2  SELECT
06:38:23   3  pair
06:38:23   4  ,ydate
06:38:23   5  ,prdate
06:38:23   6  ,rownum rnum -- acts as t in my time-series
06:38:23   7  ,clse
06:38:23   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
06:38:23   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
06:38:23  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
06:38:23  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
06:38:23  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
06:38:23  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
06:38:23  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
06:38:23  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
06:38:23  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
06:38:23  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
06:38:23  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
06:38:23  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
06:38:23  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
06:38:23  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
06:38:23  22  FROM di5min WHERE pair LIKE'%eur%'
06:38:23  23  ORDER BY ydate
06:38:23  24  /

View created.

Elapsed: 00:00:00.05
06:38:23 SQL> 
06:38:23 SQL> -- rpt
06:38:23 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
eur_usd        20349

Elapsed: 00:00:00.35
06:38:24 SQL> 
06:38:24 SQL> -- Calc deltas and gains
06:38:24 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.04
06:38:24 SQL> 
06:38:24 SQL> CREATE TABLE q13 COMPRESS AS
06:38:24   2  SELECT
06:38:24   3  pair
06:38:24   4  ,ydate
06:38:24   5  ,prdate
06:38:24   6  ,rnum
06:38:24   7  ,ld8
06:38:24   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
06:38:24   9  -- step by 2
06:38:24  10  ,clse-lg6  d06
06:38:24  11  ,lg6 -lg8  d68
06:38:24  12  ,lg8 -lg10 d810
06:38:24  13  ,lg10-lg12 d1012
06:38:24  14  ,lg12-lg14 d1214
06:38:24  15  ,lg14-lg16 d1416
06:38:24  16  ,lg16-lg18 d1618
06:38:24  17  -- step by 4
06:38:24  18  ,lg6 -lg10 d610
06:38:24  19  ,lg8 -lg12 d812
06:38:24  20  ,lg10-lg14 d1014
06:38:24  21  ,lg12-lg16 d1216
06:38:24  22  --
06:38:24  23  ,ABS(clse-lg6 )dc6
06:38:24  24  ,ABS(clse-lg8 )dc8
06:38:24  25  ,ABS(clse-lg10)dc10
06:38:24  26  ,ABS(clse-lg12)dc12
06:38:24  27  ,ABS(clse-lg14)dc14
06:38:24  28  ,ABS(clse-lg16)dc16
06:38:24  29  ,ABS(clse-lg18)dc18
06:38:24  30  ,ABS(clse-lg20)dc20
06:38:24  31  ,ABS(clse-lg22)dc22
06:38:24  32  ,(ld8-clse) ug8
06:38:24  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
06:38:24  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
06:38:24  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
06:38:24  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
06:38:24  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
06:38:24  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
06:38:24  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
06:38:24  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
06:38:24  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
06:38:24  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
06:38:24  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
06:38:24  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
06:38:24  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
06:38:24  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
06:38:24  47  ,0+TO_CHAR(ydate,'D')d
06:38:24  48  ,0+TO_CHAR(ydate,'W')w
06:38:24  49  -- mpm stands for minutes-past-midnight:
06:38:24  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
06:38:24  51  FROM q11
06:38:24  52  -- I dont want any NULL values from the LAG() functions:
06:38:24  53  WHERE lg32 > 0
06:38:24  54  ORDER BY pair,ydate
06:38:24  55  /

Table created.

Elapsed: 00:00:01.92
06:38:26 SQL> 
06:38:26 SQL> -- rpt
06:38:26 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9962
	-1	   10003

Elapsed: 00:00:00.05
06:38:26 SQL> 
06:38:26 SQL> -- Calc gains and ntiles
06:38:26 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.05
06:38:26 SQL> CREATE TABLE q15 COMPRESS AS
06:38:26   2  SELECT
06:38:26   3  pair
06:38:26   4  ,ydate
06:38:26   5  ,prdate -- Should be unique
06:38:26   6  ,trend -- +1 or -1
06:38:26   7  -- Use NTILE() to derive some attributes
06:38:26   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
06:38:26   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
06:38:26  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
06:38:26  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
06:38:26  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
06:38:26  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
06:38:26  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
06:38:26  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
06:38:26  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
06:38:26  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
06:38:26  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
06:38:26  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
06:38:26  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
06:38:26  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
06:38:26  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
06:38:26  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
06:38:26  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
06:38:26  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
06:38:26  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
06:38:26  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
06:38:26  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
06:38:26  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
06:38:26  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
06:38:26  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
06:38:26  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
06:38:26  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
06:38:26  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
06:38:26  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
06:38:26  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
06:38:26  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
06:38:26  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
06:38:26  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
06:38:26  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
06:38:26  41  ,hh    att32
06:38:26  42  ,d     att33
06:38:26  43  ,w     att34
06:38:26  44  ,mpm   att35
06:38:26  45  ,trend att36
06:38:26  46  ,ug8 g8
06:38:26  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
06:38:26  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
06:38:26  49  FROM q13
06:38:26  50  ORDER BY pair,ydate
06:38:26  51  /

Table created.

Elapsed: 00:00:05.30
06:38:31 SQL> 
06:38:31 SQL> -- rpt
06:38:31 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
06:38:31   2  GROUP BY pair,trend,gatt,gattn
06:38:31   3  ORDER BY pair,trend,gatt,gattn
06:38:31   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
eur_usd 	-1 nup nup 6.3564E-06	    2879
eur_usd 	-1 nup up  -.00604363	    3574
eur_usd 	-1 up  nup .006103152	    3466
eur_usd 	-1			       0
eur_usd 	 1 nup nup -.00009763	    2975
eur_usd 	 1 nup up  -.00630061	    3295
eur_usd 	 1 up  nup .006596746	    3680
eur_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.04
06:38:31 SQL> 
06:38:31 SQL> -- rpt
06:38:31 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
eur_usd 2010-12-20 06:35:00

Elapsed: 00:00:00.02
06:38:31 SQL> 
06:38:31 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.03
06:38:31 SQL> CREATE TABLE modsrc COMPRESS AS
06:38:31   2  SELECT
06:38:31   3  pair
06:38:31   4  ,ydate
06:38:31   5  ,prdate
06:38:31   6  ,trend
06:38:31   7  ,g8
06:38:31   8  ,gatt
06:38:31   9  ,gattn
06:38:31  10  FROM q15
06:38:31  11  /

Table created.

Elapsed: 00:00:00.09
06:38:31 SQL> 
06:38:31 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
06:38:32 SQL> 
06:38:32 SQL> -- rpt
06:38:32 SQL> 
06:38:32 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20349

Elapsed: 00:00:00.34
06:38:32 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19965

Elapsed: 00:00:00.01
06:38:32 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19965

Elapsed: 00:00:00.00
06:38:32 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19965

Elapsed: 00:00:00.01
06:38:32 SQL> 
06:38:32 SQL> DROP   TABLE eur_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
06:38:32 SQL> CREATE TABLE eur_ms10 COMPRESS AS
06:38:32   2  SELECT
06:38:32   3  ydate
06:38:32   4  ,trend eur_trend
06:38:32   5  ,g8    eur_g8
06:38:32   6  ,gatt  eur_gatt
06:38:32   7  ,gattn eur_gattn
06:38:32   8  FROM modsrc
06:38:32   9  /

Table created.

Elapsed: 00:00:00.06
06:38:32 SQL> 
06:38:32 SQL> ANALYZE TABLE eur_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
06:38:32 SQL> 
06:38:32 SQL> -- rpt
06:38:32 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 05:00:01 2010-12-20 02:15:00	 9950	  -.0218     .02165
	-1 2010-09-14 04:55:01 2010-12-20 06:35:00	 9919	 -.02085      .0196

Elapsed: 00:00:00.02
06:38:32 SQL> SELECT eur_trend,MIN(ydate),MAX(ydate),COUNT(eur_trend),MIN(eur_g8),MAX(eur_g8)FROM eur_ms10 GROUP BY eur_trend;

 EUR_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(EUR_TREND) MIN(EUR_G8) MAX(EUR_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 05:00:01 2010-12-20 02:15:00	       9962	 -.0218      .02165
	-1 2010-09-14 04:55:01 2010-12-20 06:35:00	      10003	-.02085       .0196

Elapsed: 00:00:00.01
06:38:32 SQL> 
06:38:32 SQL> -- I need a copy of q15 attributes
06:38:32 SQL> 
06:38:32 SQL> DROP   TABLE eur_att;

Table dropped.

Elapsed: 00:00:00.04
06:38:32 SQL> CREATE TABLE eur_att COMPRESS AS
06:38:32   2  SELECT
06:38:32   3  ydate
06:38:32   4  ,att00 eur_att00
06:38:32   5  ,att01 eur_att01
06:38:32   6  ,att02 eur_att02
06:38:32   7  ,att03 eur_att03
06:38:32   8  ,att04 eur_att04
06:38:32   9  ,att05 eur_att05
06:38:32  10  ,att06 eur_att06
06:38:32  11  ,att07 eur_att07
06:38:32  12  ,att08 eur_att08
06:38:32  13  ,att09 eur_att09
06:38:32  14  ,att10 eur_att10
06:38:32  15  ,att11 eur_att11
06:38:32  16  ,att12 eur_att12
06:38:32  17  ,att13 eur_att13
06:38:32  18  ,att14 eur_att14
06:38:32  19  ,att15 eur_att15
06:38:32  20  ,att16 eur_att16
06:38:32  21  ,att17 eur_att17
06:38:32  22  ,att18 eur_att18
06:38:32  23  ,att19 eur_att19
06:38:32  24  ,att20 eur_att20
06:38:32  25  ,att21 eur_att21
06:38:32  26  ,att22 eur_att22
06:38:32  27  ,att23 eur_att23
06:38:32  28  ,att24 eur_att24
06:38:32  29  ,att25 eur_att25
06:38:32  30  ,att26 eur_att26
06:38:32  31  ,att27 eur_att27
06:38:32  32  ,att28 eur_att28
06:38:32  33  ,att29 eur_att29
06:38:32  34  ,att30 eur_att30
06:38:32  35  ,att31 eur_att31
06:38:32  36  ,att32 eur_att32
06:38:32  37  ,att33 eur_att33
06:38:32  38  ,att34 eur_att34
06:38:32  39  ,att35 eur_att35
06:38:32  40  ,att36 eur_att36
06:38:32  41  FROM q15
06:38:32  42  /

Table created.

Elapsed: 00:00:00.17
06:38:32 SQL> 
06:38:32 SQL> ANALYZE TABLE eur_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.48
06:38:33 SQL> 
06:38:33 SQL> -- rpt
06:38:33 SQL> SELECT COUNT(*)FROM eur_att;

  COUNT(*)
----------
     19965

Elapsed: 00:00:00.00
06:38:33 SQL> 
06:38:33 SQL> --
06:38:33 SQL> -- aud10.sql
06:38:33 SQL> --
06:38:33 SQL> 
06:38:33 SQL> -- Creates views and tables for backtesting a forex SVM strategy
06:38:33 SQL> 
06:38:33 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.39
06:38:33 SQL> 
06:38:33 SQL> -- I created di5min here:
06:38:33 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
06:38:33 SQL> 
06:38:33 SQL> CREATE OR REPLACE VIEW q11 AS
06:38:33   2  SELECT
06:38:33   3  pair
06:38:33   4  ,ydate
06:38:33   5  ,prdate
06:38:33   6  ,rownum rnum -- acts as t in my time-series
06:38:33   7  ,clse
06:38:33   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
06:38:33   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
06:38:33  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
06:38:33  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
06:38:33  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
06:38:33  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
06:38:33  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
06:38:33  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
06:38:33  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
06:38:33  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
06:38:33  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
06:38:33  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
06:38:33  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
06:38:33  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
06:38:33  22  FROM di5min WHERE pair LIKE'%aud%'
06:38:33  23  ORDER BY ydate
06:38:33  24  /

View created.

Elapsed: 00:00:00.05
06:38:33 SQL> 
06:38:33 SQL> -- rpt
06:38:33 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
aud_usd        20346

Elapsed: 00:00:00.34
06:38:34 SQL> 
06:38:34 SQL> -- Calc deltas and gains
06:38:34 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.28
06:38:34 SQL> 
06:38:34 SQL> CREATE TABLE q13 COMPRESS AS
06:38:34   2  SELECT
06:38:34   3  pair
06:38:34   4  ,ydate
06:38:34   5  ,prdate
06:38:34   6  ,rnum
06:38:34   7  ,ld8
06:38:34   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
06:38:34   9  -- step by 2
06:38:34  10  ,clse-lg6  d06
06:38:34  11  ,lg6 -lg8  d68
06:38:34  12  ,lg8 -lg10 d810
06:38:34  13  ,lg10-lg12 d1012
06:38:34  14  ,lg12-lg14 d1214
06:38:34  15  ,lg14-lg16 d1416
06:38:34  16  ,lg16-lg18 d1618
06:38:34  17  -- step by 4
06:38:34  18  ,lg6 -lg10 d610
06:38:34  19  ,lg8 -lg12 d812
06:38:34  20  ,lg10-lg14 d1014
06:38:34  21  ,lg12-lg16 d1216
06:38:34  22  --
06:38:34  23  ,ABS(clse-lg6 )dc6
06:38:34  24  ,ABS(clse-lg8 )dc8
06:38:34  25  ,ABS(clse-lg10)dc10
06:38:34  26  ,ABS(clse-lg12)dc12
06:38:34  27  ,ABS(clse-lg14)dc14
06:38:34  28  ,ABS(clse-lg16)dc16
06:38:34  29  ,ABS(clse-lg18)dc18
06:38:34  30  ,ABS(clse-lg20)dc20
06:38:34  31  ,ABS(clse-lg22)dc22
06:38:34  32  ,(ld8-clse) ug8
06:38:34  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
06:38:34  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
06:38:34  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
06:38:34  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
06:38:34  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
06:38:34  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
06:38:34  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
06:38:34  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
06:38:34  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
06:38:34  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
06:38:34  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
06:38:34  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
06:38:34  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
06:38:34  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
06:38:34  47  ,0+TO_CHAR(ydate,'D')d
06:38:34  48  ,0+TO_CHAR(ydate,'W')w
06:38:34  49  -- mpm stands for minutes-past-midnight:
06:38:34  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
06:38:34  51  FROM q11
06:38:34  52  -- I dont want any NULL values from the LAG() functions:
06:38:34  53  WHERE lg32 > 0
06:38:34  54  ORDER BY pair,ydate
06:38:34  55  /

Table created.

Elapsed: 00:00:01.69
06:38:36 SQL> 
06:38:36 SQL> -- rpt
06:38:36 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	   10333
	-1	    9629

Elapsed: 00:00:00.03
06:38:36 SQL> 
06:38:36 SQL> -- Calc gains and ntiles
06:38:36 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.12
06:38:36 SQL> CREATE TABLE q15 COMPRESS AS
06:38:36   2  SELECT
06:38:36   3  pair
06:38:36   4  ,ydate
06:38:36   5  ,prdate -- Should be unique
06:38:36   6  ,trend -- +1 or -1
06:38:36   7  -- Use NTILE() to derive some attributes
06:38:36   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
06:38:36   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
06:38:36  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
06:38:36  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
06:38:36  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
06:38:36  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
06:38:36  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
06:38:36  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
06:38:36  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
06:38:36  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
06:38:36  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
06:38:36  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
06:38:36  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
06:38:36  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
06:38:36  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
06:38:36  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
06:38:36  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
06:38:36  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
06:38:36  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
06:38:36  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
06:38:36  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
06:38:36  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
06:38:36  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
06:38:36  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
06:38:36  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
06:38:36  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
06:38:36  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
06:38:36  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
06:38:36  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
06:38:36  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
06:38:36  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
06:38:36  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
06:38:36  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
06:38:36  41  ,hh    att32
06:38:36  42  ,d     att33
06:38:36  43  ,w     att34
06:38:36  44  ,mpm   att35
06:38:36  45  ,trend att36
06:38:36  46  ,ug8 g8
06:38:36  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
06:38:36  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
06:38:36  49  FROM q13
06:38:36  50  ORDER BY pair,ydate
06:38:36  51  /

Table created.

Elapsed: 00:00:05.20
06:38:41 SQL> 
06:38:41 SQL> -- rpt
06:38:41 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
06:38:41   2  GROUP BY pair,trend,gatt,gattn
06:38:41   3  ORDER BY pair,trend,gatt,gattn
06:38:41   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
aud_usd 	-1 nup nup .000014712	    3616
aud_usd 	-1 nup up  -.00519991	    2596
aud_usd 	-1 up  nup .005269042	    3382
aud_usd 	-1			       0
aud_usd 	 1 nup nup 1.0614E-06	    3910
aud_usd 	 1 nup up  -.00495997	    3189
aud_usd 	 1 up  nup .005268917	    3173
aud_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.02
06:38:41 SQL> 
06:38:41 SQL> -- rpt
06:38:41 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
aud_usd 2010-12-20 06:35:00

Elapsed: 00:00:00.02
06:38:41 SQL> 
06:38:41 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.11
06:38:41 SQL> CREATE TABLE modsrc COMPRESS AS
06:38:41   2  SELECT
06:38:41   3  pair
06:38:41   4  ,ydate
06:38:41   5  ,prdate
06:38:41   6  ,trend
06:38:41   7  ,g8
06:38:41   8  ,gatt
06:38:41   9  ,gattn
06:38:41  10  FROM q15
06:38:41  11  /

Table created.

Elapsed: 00:00:00.08
06:38:41 SQL> 
06:38:41 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.21
06:38:41 SQL> 
06:38:41 SQL> -- rpt
06:38:41 SQL> 
06:38:41 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20346

Elapsed: 00:00:00.34
06:38:42 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19962

Elapsed: 00:00:00.00
06:38:42 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19962

Elapsed: 00:00:00.01
06:38:42 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19962

Elapsed: 00:00:00.00
06:38:42 SQL> 
06:38:42 SQL> DROP   TABLE aud_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
06:38:42 SQL> CREATE TABLE aud_ms10 COMPRESS AS
06:38:42   2  SELECT
06:38:42   3  ydate
06:38:42   4  ,trend aud_trend
06:38:42   5  ,g8    aud_g8
06:38:42   6  ,gatt  aud_gatt
06:38:42   7  ,gattn aud_gattn
06:38:42   8  FROM modsrc
06:38:42   9  /

Table created.

Elapsed: 00:00:00.06
06:38:42 SQL> 
06:38:42 SQL> ANALYZE TABLE aud_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.17
06:38:42 SQL> 
06:38:42 SQL> -- rpt
06:38:42 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 07:10:01 2010-12-20 06:35:00	10272	  -.0203      .0136
	-1 2010-09-14 04:55:01 2010-12-20 06:10:00	 9594	  -.0196      .0148

Elapsed: 00:00:00.02
06:38:42 SQL> SELECT aud_trend,MIN(ydate),MAX(ydate),COUNT(aud_trend),MIN(aud_g8),MAX(aud_g8)FROM aud_ms10 GROUP BY aud_trend;

 AUD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(AUD_TREND) MIN(AUD_G8) MAX(AUD_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 07:10:01 2010-12-20 06:35:00	      10333	 -.0203       .0136
	-1 2010-09-14 04:55:01 2010-12-20 06:10:00	       9629	 -.0196       .0148

Elapsed: 00:00:00.01
06:38:42 SQL> 
06:38:42 SQL> -- I need a copy of q15 attributes
06:38:42 SQL> 
06:38:42 SQL> DROP   TABLE aud_att;

Table dropped.

Elapsed: 00:00:00.03
06:38:42 SQL> CREATE TABLE aud_att COMPRESS AS
06:38:42   2  SELECT
06:38:42   3  ydate
06:38:42   4  ,att00 aud_att00
06:38:42   5  ,att01 aud_att01
06:38:42   6  ,att02 aud_att02
06:38:42   7  ,att03 aud_att03
06:38:42   8  ,att04 aud_att04
06:38:42   9  ,att05 aud_att05
06:38:42  10  ,att06 aud_att06
06:38:42  11  ,att07 aud_att07
06:38:42  12  ,att08 aud_att08
06:38:42  13  ,att09 aud_att09
06:38:42  14  ,att10 aud_att10
06:38:42  15  ,att11 aud_att11
06:38:42  16  ,att12 aud_att12
06:38:42  17  ,att13 aud_att13
06:38:42  18  ,att14 aud_att14
06:38:42  19  ,att15 aud_att15
06:38:42  20  ,att16 aud_att16
06:38:42  21  ,att17 aud_att17
06:38:42  22  ,att18 aud_att18
06:38:42  23  ,att19 aud_att19
06:38:42  24  ,att20 aud_att20
06:38:42  25  ,att21 aud_att21
06:38:42  26  ,att22 aud_att22
06:38:42  27  ,att23 aud_att23
06:38:42  28  ,att24 aud_att24
06:38:42  29  ,att25 aud_att25
06:38:42  30  ,att26 aud_att26
06:38:42  31  ,att27 aud_att27
06:38:42  32  ,att28 aud_att28
06:38:42  33  ,att29 aud_att29
06:38:42  34  ,att30 aud_att30
06:38:42  35  ,att31 aud_att31
06:38:42  36  ,att32 aud_att32
06:38:42  37  ,att33 aud_att33
06:38:42  38  ,att34 aud_att34
06:38:42  39  ,att35 aud_att35
06:38:42  40  ,att36 aud_att36
06:38:42  41  FROM q15
06:38:42  42  /

Table created.

Elapsed: 00:00:00.16
06:38:42 SQL> 
06:38:42 SQL> ANALYZE TABLE aud_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.44
06:38:43 SQL> 
06:38:43 SQL> -- rpt
06:38:43 SQL> SELECT COUNT(*)FROM aud_att;

  COUNT(*)
----------
     19962

Elapsed: 00:00:00.01
06:38:43 SQL> 
06:38:43 SQL> --
06:38:43 SQL> -- gbp10.sql
06:38:43 SQL> --
06:38:43 SQL> 
06:38:43 SQL> -- Creates views and tables for backtesting a forex SVM strategy
06:38:43 SQL> 
06:38:43 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
06:38:43 SQL> 
06:38:43 SQL> -- I created di5min here:
06:38:43 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
06:38:43 SQL> 
06:38:43 SQL> CREATE OR REPLACE VIEW q11 AS
06:38:43   2  SELECT
06:38:43   3  pair
06:38:43   4  ,ydate
06:38:43   5  ,prdate
06:38:43   6  ,rownum rnum -- acts as t in my time-series
06:38:43   7  ,clse
06:38:43   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
06:38:43   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
06:38:43  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
06:38:43  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
06:38:43  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
06:38:43  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
06:38:43  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
06:38:43  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
06:38:43  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
06:38:43  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
06:38:43  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
06:38:43  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
06:38:43  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
06:38:43  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
06:38:43  22  FROM di5min WHERE pair LIKE'%gbp%'
06:38:43  23  ORDER BY ydate
06:38:43  24  /

View created.

Elapsed: 00:00:00.04
06:38:43 SQL> 
06:38:43 SQL> -- rpt
06:38:43 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
gbp_usd        20348

Elapsed: 00:00:00.35
06:38:43 SQL> 
06:38:43 SQL> -- Calc deltas and gains
06:38:43 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.23
06:38:44 SQL> 
06:38:44 SQL> CREATE TABLE q13 COMPRESS AS
06:38:44   2  SELECT
06:38:44   3  pair
06:38:44   4  ,ydate
06:38:44   5  ,prdate
06:38:44   6  ,rnum
06:38:44   7  ,ld8
06:38:44   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
06:38:44   9  -- step by 2
06:38:44  10  ,clse-lg6  d06
06:38:44  11  ,lg6 -lg8  d68
06:38:44  12  ,lg8 -lg10 d810
06:38:44  13  ,lg10-lg12 d1012
06:38:44  14  ,lg12-lg14 d1214
06:38:44  15  ,lg14-lg16 d1416
06:38:44  16  ,lg16-lg18 d1618
06:38:44  17  -- step by 4
06:38:44  18  ,lg6 -lg10 d610
06:38:44  19  ,lg8 -lg12 d812
06:38:44  20  ,lg10-lg14 d1014
06:38:44  21  ,lg12-lg16 d1216
06:38:44  22  --
06:38:44  23  ,ABS(clse-lg6 )dc6
06:38:44  24  ,ABS(clse-lg8 )dc8
06:38:44  25  ,ABS(clse-lg10)dc10
06:38:44  26  ,ABS(clse-lg12)dc12
06:38:44  27  ,ABS(clse-lg14)dc14
06:38:44  28  ,ABS(clse-lg16)dc16
06:38:44  29  ,ABS(clse-lg18)dc18
06:38:44  30  ,ABS(clse-lg20)dc20
06:38:44  31  ,ABS(clse-lg22)dc22
06:38:44  32  ,(ld8-clse) ug8
06:38:44  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
06:38:44  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
06:38:44  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
06:38:44  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
06:38:44  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
06:38:44  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
06:38:44  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
06:38:44  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
06:38:44  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
06:38:44  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
06:38:44  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
06:38:44  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
06:38:44  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
06:38:44  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
06:38:44  47  ,0+TO_CHAR(ydate,'D')d
06:38:44  48  ,0+TO_CHAR(ydate,'W')w
06:38:44  49  -- mpm stands for minutes-past-midnight:
06:38:44  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
06:38:44  51  FROM q11
06:38:44  52  -- I dont want any NULL values from the LAG() functions:
06:38:44  53  WHERE lg32 > 0
06:38:44  54  ORDER BY pair,ydate
06:38:44  55  /

Table created.

Elapsed: 00:00:01.68
06:38:45 SQL> 
06:38:45 SQL> -- rpt
06:38:45 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9811
	-1	   10153

Elapsed: 00:00:00.03
06:38:45 SQL> 
06:38:45 SQL> -- Calc gains and ntiles
06:38:45 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.18
06:38:46 SQL> CREATE TABLE q15 COMPRESS AS
06:38:46   2  SELECT
06:38:46   3  pair
06:38:46   4  ,ydate
06:38:46   5  ,prdate -- Should be unique
06:38:46   6  ,trend -- +1 or -1
06:38:46   7  -- Use NTILE() to derive some attributes
06:38:46   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
06:38:46   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
06:38:46  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
06:38:46  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
06:38:46  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
06:38:46  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
06:38:46  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
06:38:46  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
06:38:46  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
06:38:46  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
06:38:46  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
06:38:46  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
06:38:46  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
06:38:46  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
06:38:46  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
06:38:46  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
06:38:46  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
06:38:46  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
06:38:46  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
06:38:46  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
06:38:46  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
06:38:46  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
06:38:46  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
06:38:46  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
06:38:46  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
06:38:46  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
06:38:46  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
06:38:46  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
06:38:46  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
06:38:46  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
06:38:46  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
06:38:46  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
06:38:46  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
06:38:46  41  ,hh    att32
06:38:46  42  ,d     att33
06:38:46  43  ,w     att34
06:38:46  44  ,mpm   att35
06:38:46  45  ,trend att36
06:38:46  46  ,ug8 g8
06:38:46  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
06:38:46  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
06:38:46  49  FROM q13
06:38:46  50  ORDER BY pair,ydate
06:38:46  51  /

Table created.

Elapsed: 00:00:05.46
06:38:51 SQL> 
06:38:51 SQL> -- rpt
06:38:51 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
06:38:51   2  GROUP BY pair,trend,gatt,gattn
06:38:51   3  ORDER BY pair,trend,gatt,gattn
06:38:51   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
gbp_usd 	-1 nup nup .000078775	    3755
gbp_usd 	-1 nup up  -.00589459	    3177
gbp_usd 	-1 up  nup .005797512	    3175
gbp_usd 	-1			       0
gbp_usd 	 1 nup nup -.00007705	    3638
gbp_usd 	 1 nup up  -.00555795	    3122
gbp_usd 	 1 up  nup .006246143	    3001
gbp_usd 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
06:38:51 SQL> 
06:38:51 SQL> -- rpt
06:38:51 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
gbp_usd 2010-12-20 06:35:00

Elapsed: 00:00:00.01
06:38:51 SQL> 
06:38:51 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.11
06:38:51 SQL> CREATE TABLE modsrc COMPRESS AS
06:38:51   2  SELECT
06:38:51   3  pair
06:38:51   4  ,ydate
06:38:51   5  ,prdate
06:38:51   6  ,trend
06:38:51   7  ,g8
06:38:51   8  ,gatt
06:38:51   9  ,gattn
06:38:51  10  FROM q15
06:38:51  11  /

Table created.

Elapsed: 00:00:00.09
06:38:51 SQL> 
06:38:51 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.20
06:38:51 SQL> 
06:38:51 SQL> -- rpt
06:38:51 SQL> 
06:38:51 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20348

Elapsed: 00:00:00.34
06:38:52 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19964

Elapsed: 00:00:00.00
06:38:52 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19964

Elapsed: 00:00:00.01
06:38:52 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19964

Elapsed: 00:00:00.00
06:38:52 SQL> 
06:38:52 SQL> DROP   TABLE gbp_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
06:38:52 SQL> CREATE TABLE gbp_ms10 COMPRESS AS
06:38:52   2  SELECT
06:38:52   3  ydate
06:38:52   4  ,trend gbp_trend
06:38:52   5  ,g8    gbp_g8
06:38:52   6  ,gatt  gbp_gatt
06:38:52   7  ,gattn gbp_gattn
06:38:52   8  FROM modsrc
06:38:52   9  /

Table created.

Elapsed: 00:00:00.06
06:38:52 SQL> 
06:38:52 SQL> ANALYZE TABLE gbp_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.16
06:38:52 SQL> 
06:38:52 SQL> -- rpt
06:38:52 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 07:35:01 2010-12-20 06:30:00	 9761	  -.0231       .019
	-1 2010-09-14 04:55:01 2010-12-20 06:35:00	10107	    -.02      .0204

Elapsed: 00:00:00.02
06:38:52 SQL> SELECT gbp_trend,MIN(ydate),MAX(ydate),COUNT(gbp_trend),MIN(gbp_g8),MAX(gbp_g8)FROM gbp_ms10 GROUP BY gbp_trend;

 GBP_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(GBP_TREND) MIN(GBP_G8) MAX(GBP_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 07:35:01 2010-12-20 06:30:00	       9811	 -.0231        .019
	-1 2010-09-14 04:55:01 2010-12-20 06:35:00	      10153	   -.02       .0204

Elapsed: 00:00:00.02
06:38:52 SQL> 
06:38:52 SQL> -- I need a copy of q15 attributes
06:38:52 SQL> 
06:38:52 SQL> DROP   TABLE gbp_att;

Table dropped.

Elapsed: 00:00:00.03
06:38:52 SQL> CREATE TABLE gbp_att COMPRESS AS
06:38:52   2  SELECT
06:38:52   3  ydate
06:38:52   4  ,att00 gbp_att00
06:38:52   5  ,att01 gbp_att01
06:38:52   6  ,att02 gbp_att02
06:38:52   7  ,att03 gbp_att03
06:38:52   8  ,att04 gbp_att04
06:38:52   9  ,att05 gbp_att05
06:38:52  10  ,att06 gbp_att06
06:38:52  11  ,att07 gbp_att07
06:38:52  12  ,att08 gbp_att08
06:38:52  13  ,att09 gbp_att09
06:38:52  14  ,att10 gbp_att10
06:38:52  15  ,att11 gbp_att11
06:38:52  16  ,att12 gbp_att12
06:38:52  17  ,att13 gbp_att13
06:38:52  18  ,att14 gbp_att14
06:38:52  19  ,att15 gbp_att15
06:38:52  20  ,att16 gbp_att16
06:38:52  21  ,att17 gbp_att17
06:38:52  22  ,att18 gbp_att18
06:38:52  23  ,att19 gbp_att19
06:38:52  24  ,att20 gbp_att20
06:38:52  25  ,att21 gbp_att21
06:38:52  26  ,att22 gbp_att22
06:38:52  27  ,att23 gbp_att23
06:38:52  28  ,att24 gbp_att24
06:38:52  29  ,att25 gbp_att25
06:38:52  30  ,att26 gbp_att26
06:38:52  31  ,att27 gbp_att27
06:38:52  32  ,att28 gbp_att28
06:38:52  33  ,att29 gbp_att29
06:38:52  34  ,att30 gbp_att30
06:38:52  35  ,att31 gbp_att31
06:38:52  36  ,att32 gbp_att32
06:38:52  37  ,att33 gbp_att33
06:38:52  38  ,att34 gbp_att34
06:38:52  39  ,att35 gbp_att35
06:38:52  40  ,att36 gbp_att36
06:38:52  41  FROM q15
06:38:52  42  /

Table created.

Elapsed: 00:00:00.17
06:38:52 SQL> 
06:38:52 SQL> ANALYZE TABLE gbp_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
06:38:53 SQL> 
06:38:53 SQL> -- rpt
06:38:53 SQL> SELECT COUNT(*)FROM gbp_att;

  COUNT(*)
----------
     19964

Elapsed: 00:00:00.01
06:38:53 SQL> 
06:38:53 SQL> --
06:38:53 SQL> -- jpy10.sql
06:38:53 SQL> --
06:38:53 SQL> 
06:38:53 SQL> -- Creates views and tables for backtesting a forex SVM strategy
06:38:53 SQL> 
06:38:53 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.30
06:38:53 SQL> 
06:38:53 SQL> -- I created di5min here:
06:38:53 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
06:38:53 SQL> 
06:38:53 SQL> CREATE OR REPLACE VIEW q11 AS
06:38:53   2  SELECT
06:38:53   3  pair
06:38:53   4  ,ydate
06:38:53   5  ,prdate
06:38:53   6  ,rownum rnum -- acts as t in my time-series
06:38:53   7  ,clse
06:38:53   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
06:38:53   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
06:38:53  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
06:38:53  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
06:38:53  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
06:38:53  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
06:38:53  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
06:38:53  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
06:38:53  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
06:38:53  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
06:38:53  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
06:38:53  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
06:38:53  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
06:38:53  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
06:38:53  22  FROM di5min WHERE pair LIKE'%jpy%'
06:38:53  23  ORDER BY ydate
06:38:53  24  /

View created.

Elapsed: 00:00:00.04
06:38:53 SQL> 
06:38:53 SQL> -- rpt
06:38:53 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_jpy        20349

Elapsed: 00:00:00.34
06:38:53 SQL> 
06:38:53 SQL> -- Calc deltas and gains
06:38:53 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.18
06:38:54 SQL> 
06:38:54 SQL> CREATE TABLE q13 COMPRESS AS
06:38:54   2  SELECT
06:38:54   3  pair
06:38:54   4  ,ydate
06:38:54   5  ,prdate
06:38:54   6  ,rnum
06:38:54   7  ,ld8
06:38:54   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
06:38:54   9  -- step by 2
06:38:54  10  ,clse-lg6  d06
06:38:54  11  ,lg6 -lg8  d68
06:38:54  12  ,lg8 -lg10 d810
06:38:54  13  ,lg10-lg12 d1012
06:38:54  14  ,lg12-lg14 d1214
06:38:54  15  ,lg14-lg16 d1416
06:38:54  16  ,lg16-lg18 d1618
06:38:54  17  -- step by 4
06:38:54  18  ,lg6 -lg10 d610
06:38:54  19  ,lg8 -lg12 d812
06:38:54  20  ,lg10-lg14 d1014
06:38:54  21  ,lg12-lg16 d1216
06:38:54  22  --
06:38:54  23  ,ABS(clse-lg6 )dc6
06:38:54  24  ,ABS(clse-lg8 )dc8
06:38:54  25  ,ABS(clse-lg10)dc10
06:38:54  26  ,ABS(clse-lg12)dc12
06:38:54  27  ,ABS(clse-lg14)dc14
06:38:54  28  ,ABS(clse-lg16)dc16
06:38:54  29  ,ABS(clse-lg18)dc18
06:38:54  30  ,ABS(clse-lg20)dc20
06:38:54  31  ,ABS(clse-lg22)dc22
06:38:54  32  ,(ld8-clse) ug8
06:38:54  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
06:38:54  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
06:38:54  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
06:38:54  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
06:38:54  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
06:38:54  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
06:38:54  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
06:38:54  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
06:38:54  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
06:38:54  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
06:38:54  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
06:38:54  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
06:38:54  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
06:38:54  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
06:38:54  47  ,0+TO_CHAR(ydate,'D')d
06:38:54  48  ,0+TO_CHAR(ydate,'W')w
06:38:54  49  -- mpm stands for minutes-past-midnight:
06:38:54  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
06:38:54  51  FROM q11
06:38:54  52  -- I dont want any NULL values from the LAG() functions:
06:38:54  53  WHERE lg32 > 0
06:38:54  54  ORDER BY pair,ydate
06:38:54  55  /

Table created.

Elapsed: 00:00:01.67
06:38:55 SQL> 
06:38:55 SQL> -- rpt
06:38:55 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9408
	-1	   10557

Elapsed: 00:00:00.03
06:38:55 SQL> 
06:38:55 SQL> -- Calc gains and ntiles
06:38:55 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.14
06:38:56 SQL> CREATE TABLE q15 COMPRESS AS
06:38:56   2  SELECT
06:38:56   3  pair
06:38:56   4  ,ydate
06:38:56   5  ,prdate -- Should be unique
06:38:56   6  ,trend -- +1 or -1
06:38:56   7  -- Use NTILE() to derive some attributes
06:38:56   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
06:38:56   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
06:38:56  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
06:38:56  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
06:38:56  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
06:38:56  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
06:38:56  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
06:38:56  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
06:38:56  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
06:38:56  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
06:38:56  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
06:38:56  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
06:38:56  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
06:38:56  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
06:38:56  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
06:38:56  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
06:38:56  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
06:38:56  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
06:38:56  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
06:38:56  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
06:38:56  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
06:38:56  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
06:38:56  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
06:38:56  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
06:38:56  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
06:38:56  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
06:38:56  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
06:38:56  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
06:38:56  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
06:38:56  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
06:38:56  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
06:38:56  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
06:38:56  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
06:38:56  41  ,hh    att32
06:38:56  42  ,d     att33
06:38:56  43  ,w     att34
06:38:56  44  ,mpm   att35
06:38:56  45  ,trend att36
06:38:56  46  ,ug8 g8
06:38:56  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
06:38:56  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
06:38:56  49  FROM q13
06:38:56  50  ORDER BY pair,ydate
06:38:56  51  /

Table created.

Elapsed: 00:00:05.40
06:39:01 SQL> 
06:39:01 SQL> -- rpt
06:39:01 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
06:39:01   2  GROUP BY pair,trend,gatt,gattn
06:39:01   3  ORDER BY pair,trend,gatt,gattn
06:39:01   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
usd_jpy 	-1 nup nup	    0	     160
usd_jpy 	-1 nup up  -.18809251	    5194
usd_jpy 	-1 up  nup .207949081	    5116
usd_jpy 	-1			       0
usd_jpy 	 1 nup nup	    0	     119
usd_jpy 	 1 nup up  -.18841852	    4989
usd_jpy 	 1 up  nup .213079702	    4291
usd_jpy 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
06:39:01 SQL> 
06:39:01 SQL> -- rpt
06:39:01 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_jpy 2010-12-20 06:35:00

Elapsed: 00:00:00.02
06:39:01 SQL> 
06:39:01 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.11
06:39:01 SQL> CREATE TABLE modsrc COMPRESS AS
06:39:01   2  SELECT
06:39:01   3  pair
06:39:01   4  ,ydate
06:39:01   5  ,prdate
06:39:01   6  ,trend
06:39:01   7  ,g8
06:39:01   8  ,gatt
06:39:01   9  ,gattn
06:39:01  10  FROM q15
06:39:01  11  /

Table created.

Elapsed: 00:00:00.08
06:39:01 SQL> 
06:39:01 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
06:39:01 SQL> 
06:39:01 SQL> -- rpt
06:39:01 SQL> 
06:39:01 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20349

Elapsed: 00:00:00.33
06:39:02 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19965

Elapsed: 00:00:00.01
06:39:02 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19965

Elapsed: 00:00:00.01
06:39:02 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19965

Elapsed: 00:00:00.00
06:39:02 SQL> 
06:39:02 SQL> DROP   TABLE jpy_ms10 ;

Table dropped.

Elapsed: 00:00:00.04
06:39:02 SQL> CREATE TABLE jpy_ms10 COMPRESS AS
06:39:02   2  SELECT
06:39:02   3  ydate
06:39:02   4  ,trend jpy_trend
06:39:02   5  ,g8    jpy_g8
06:39:02   6  ,gatt  jpy_gatt
06:39:02   7  ,gattn jpy_gattn
06:39:02   8  FROM modsrc
06:39:02   9  /

Table created.

Elapsed: 00:00:00.07
06:39:02 SQL> 
06:39:02 SQL> ANALYZE TABLE jpy_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
06:39:02 SQL> 
06:39:02 SQL> -- rpt
06:39:02 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 08:50:01 2010-12-20 04:15:00	 9399	  -1.185       2.42
	-1 2010-09-14 04:55:01 2010-12-20 06:35:00	10470	 -1.0575       2.49

Elapsed: 00:00:00.02
06:39:02 SQL> SELECT jpy_trend,MIN(ydate),MAX(ydate),COUNT(jpy_trend),MIN(jpy_g8),MAX(jpy_g8)FROM jpy_ms10 GROUP BY jpy_trend;

 JPY_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(JPY_TREND) MIN(JPY_G8) MAX(JPY_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 08:50:01 2010-12-20 04:15:00	       9408	 -1.185        2.42
	-1 2010-09-14 04:55:01 2010-12-20 06:35:00	      10557	-1.0575        2.49

Elapsed: 00:00:00.02
06:39:02 SQL> 
06:39:02 SQL> -- I need a copy of q15 attributes
06:39:02 SQL> 
06:39:02 SQL> DROP   TABLE jpy_att;

Table dropped.

Elapsed: 00:00:00.03
06:39:02 SQL> CREATE TABLE jpy_att COMPRESS AS
06:39:02   2  SELECT
06:39:02   3  ydate
06:39:02   4  ,att00 jpy_att00
06:39:02   5  ,att01 jpy_att01
06:39:02   6  ,att02 jpy_att02
06:39:02   7  ,att03 jpy_att03
06:39:02   8  ,att04 jpy_att04
06:39:02   9  ,att05 jpy_att05
06:39:02  10  ,att06 jpy_att06
06:39:02  11  ,att07 jpy_att07
06:39:02  12  ,att08 jpy_att08
06:39:02  13  ,att09 jpy_att09
06:39:02  14  ,att10 jpy_att10
06:39:02  15  ,att11 jpy_att11
06:39:02  16  ,att12 jpy_att12
06:39:02  17  ,att13 jpy_att13
06:39:02  18  ,att14 jpy_att14
06:39:02  19  ,att15 jpy_att15
06:39:02  20  ,att16 jpy_att16
06:39:02  21  ,att17 jpy_att17
06:39:02  22  ,att18 jpy_att18
06:39:02  23  ,att19 jpy_att19
06:39:02  24  ,att20 jpy_att20
06:39:02  25  ,att21 jpy_att21
06:39:02  26  ,att22 jpy_att22
06:39:02  27  ,att23 jpy_att23
06:39:02  28  ,att24 jpy_att24
06:39:02  29  ,att25 jpy_att25
06:39:02  30  ,att26 jpy_att26
06:39:02  31  ,att27 jpy_att27
06:39:02  32  ,att28 jpy_att28
06:39:02  33  ,att29 jpy_att29
06:39:02  34  ,att30 jpy_att30
06:39:02  35  ,att31 jpy_att31
06:39:02  36  ,att32 jpy_att32
06:39:02  37  ,att33 jpy_att33
06:39:02  38  ,att34 jpy_att34
06:39:02  39  ,att35 jpy_att35
06:39:02  40  ,att36 jpy_att36
06:39:02  41  FROM q15
06:39:02  42  /

Table created.

Elapsed: 00:00:00.16
06:39:02 SQL> 
06:39:02 SQL> ANALYZE TABLE jpy_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:01.18
06:39:03 SQL> 
06:39:03 SQL> -- rpt
06:39:03 SQL> SELECT COUNT(*)FROM jpy_att;

  COUNT(*)
----------
     19965

Elapsed: 00:00:00.00
06:39:03 SQL> 
06:39:03 SQL> --
06:39:03 SQL> -- cad10.sql
06:39:03 SQL> --
06:39:03 SQL> 
06:39:03 SQL> -- Creates views and tables for backtesting a forex SVM strategy
06:39:03 SQL> 
06:39:03 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.33
06:39:04 SQL> 
06:39:04 SQL> -- I created di5min here:
06:39:04 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
06:39:04 SQL> 
06:39:04 SQL> CREATE OR REPLACE VIEW q11 AS
06:39:04   2  SELECT
06:39:04   3  pair
06:39:04   4  ,ydate
06:39:04   5  ,prdate
06:39:04   6  ,rownum rnum -- acts as t in my time-series
06:39:04   7  ,clse
06:39:04   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
06:39:04   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
06:39:04  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
06:39:04  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
06:39:04  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
06:39:04  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
06:39:04  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
06:39:04  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
06:39:04  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
06:39:04  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
06:39:04  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
06:39:04  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
06:39:04  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
06:39:04  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
06:39:04  22  FROM di5min WHERE pair LIKE'%cad%'
06:39:04  23  ORDER BY ydate
06:39:04  24  /

View created.

Elapsed: 00:00:00.05
06:39:04 SQL> 
06:39:04 SQL> -- rpt
06:39:04 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_cad        20345

Elapsed: 00:00:00.34
06:39:04 SQL> 
06:39:04 SQL> -- Calc deltas and gains
06:39:04 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.20
06:39:04 SQL> 
06:39:04 SQL> CREATE TABLE q13 COMPRESS AS
06:39:04   2  SELECT
06:39:04   3  pair
06:39:04   4  ,ydate
06:39:04   5  ,prdate
06:39:04   6  ,rnum
06:39:04   7  ,ld8
06:39:04   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
06:39:04   9  -- step by 2
06:39:04  10  ,clse-lg6  d06
06:39:04  11  ,lg6 -lg8  d68
06:39:04  12  ,lg8 -lg10 d810
06:39:04  13  ,lg10-lg12 d1012
06:39:04  14  ,lg12-lg14 d1214
06:39:04  15  ,lg14-lg16 d1416
06:39:04  16  ,lg16-lg18 d1618
06:39:04  17  -- step by 4
06:39:04  18  ,lg6 -lg10 d610
06:39:04  19  ,lg8 -lg12 d812
06:39:04  20  ,lg10-lg14 d1014
06:39:04  21  ,lg12-lg16 d1216
06:39:04  22  --
06:39:04  23  ,ABS(clse-lg6 )dc6
06:39:04  24  ,ABS(clse-lg8 )dc8
06:39:04  25  ,ABS(clse-lg10)dc10
06:39:04  26  ,ABS(clse-lg12)dc12
06:39:04  27  ,ABS(clse-lg14)dc14
06:39:04  28  ,ABS(clse-lg16)dc16
06:39:04  29  ,ABS(clse-lg18)dc18
06:39:04  30  ,ABS(clse-lg20)dc20
06:39:04  31  ,ABS(clse-lg22)dc22
06:39:04  32  ,(ld8-clse) ug8
06:39:04  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
06:39:04  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
06:39:04  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
06:39:04  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
06:39:04  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
06:39:04  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
06:39:04  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
06:39:04  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
06:39:04  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
06:39:04  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
06:39:04  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
06:39:04  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
06:39:04  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
06:39:04  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
06:39:04  47  ,0+TO_CHAR(ydate,'D')d
06:39:04  48  ,0+TO_CHAR(ydate,'W')w
06:39:04  49  -- mpm stands for minutes-past-midnight:
06:39:04  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
06:39:04  51  FROM q11
06:39:04  52  -- I dont want any NULL values from the LAG() functions:
06:39:04  53  WHERE lg32 > 0
06:39:04  54  ORDER BY pair,ydate
06:39:04  55  /

Table created.

Elapsed: 00:00:01.70
06:39:06 SQL> 
06:39:06 SQL> -- rpt
06:39:06 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9260
	-1	   10701

Elapsed: 00:00:00.03
06:39:06 SQL> 
06:39:06 SQL> -- Calc gains and ntiles
06:39:06 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.13
06:39:06 SQL> CREATE TABLE q15 COMPRESS AS
06:39:06   2  SELECT
06:39:06   3  pair
06:39:06   4  ,ydate
06:39:06   5  ,prdate -- Should be unique
06:39:06   6  ,trend -- +1 or -1
06:39:06   7  -- Use NTILE() to derive some attributes
06:39:06   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
06:39:06   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
06:39:06  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
06:39:06  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
06:39:06  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
06:39:06  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
06:39:06  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
06:39:06  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
06:39:06  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
06:39:06  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
06:39:06  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
06:39:06  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
06:39:06  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
06:39:06  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
06:39:06  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
06:39:06  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
06:39:06  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
06:39:06  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
06:39:06  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
06:39:06  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
06:39:06  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
06:39:06  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
06:39:06  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
06:39:06  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
06:39:06  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
06:39:06  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
06:39:06  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
06:39:06  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
06:39:06  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
06:39:06  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
06:39:06  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
06:39:06  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
06:39:06  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
06:39:06  41  ,hh    att32
06:39:06  42  ,d     att33
06:39:06  43  ,w     att34
06:39:06  44  ,mpm   att35
06:39:06  45  ,trend att36
06:39:06  46  ,ug8 g8
06:39:06  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
06:39:06  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
06:39:06  49  FROM q13
06:39:06  50  ORDER BY pair,ydate
06:39:06  51  /

Table created.

Elapsed: 00:00:05.30
06:39:11 SQL> 
06:39:11 SQL> -- rpt
06:39:11 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
06:39:11   2  GROUP BY pair,trend,gatt,gattn
06:39:11   3  ORDER BY pair,trend,gatt,gattn
06:39:11   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
usd_cad 	-1 nup nup -.00002778	    5534
usd_cad 	-1 nup up  -.00402052	    2605
usd_cad 	-1 up  nup .004652368	    2523
usd_cad 	-1			       0
usd_cad 	 1 nup nup -.00008174	    4496
usd_cad 	 1 nup up  -.00422395	    2703
usd_cad 	 1 up  nup  .00458629	    2004
usd_cad 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
06:39:12 SQL> 
06:39:12 SQL> -- rpt
06:39:12 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_cad 2010-12-20 06:35:00

Elapsed: 00:00:00.02
06:39:12 SQL> 
06:39:12 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.11
06:39:12 SQL> CREATE TABLE modsrc COMPRESS AS
06:39:12   2  SELECT
06:39:12   3  pair
06:39:12   4  ,ydate
06:39:12   5  ,prdate
06:39:12   6  ,trend
06:39:12   7  ,g8
06:39:12   8  ,gatt
06:39:12   9  ,gattn
06:39:12  10  FROM q15
06:39:12  11  /

Table created.

Elapsed: 00:00:00.08
06:39:12 SQL> 
06:39:12 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.19
06:39:12 SQL> 
06:39:12 SQL> -- rpt
06:39:12 SQL> 
06:39:12 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20345

Elapsed: 00:00:00.33
06:39:12 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.01
06:39:12 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.00
06:39:12 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19961

Elapsed: 00:00:00.01
06:39:12 SQL> 
06:39:12 SQL> DROP   TABLE cad_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
06:39:12 SQL> CREATE TABLE cad_ms10 COMPRESS AS
06:39:12   2  SELECT
06:39:12   3  ydate
06:39:12   4  ,trend cad_trend
06:39:12   5  ,g8    cad_g8
06:39:12   6  ,gatt  cad_gatt
06:39:12   7  ,gattn cad_gattn
06:39:12   8  FROM modsrc
06:39:12   9  /

Table created.

Elapsed: 00:00:00.06
06:39:12 SQL> 
06:39:12 SQL> ANALYZE TABLE cad_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.15
06:39:12 SQL> 
06:39:12 SQL> -- rpt
06:39:12 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 04:55:01 2010-12-20 05:40:00	 9203	  -.0122      .0159
	-1 2010-09-14 07:10:01 2010-12-20 06:35:00	10662	 -.01105      .0176

Elapsed: 00:00:00.02
06:39:13 SQL> SELECT cad_trend,MIN(ydate),MAX(ydate),COUNT(cad_trend),MIN(cad_g8),MAX(cad_g8)FROM cad_ms10 GROUP BY cad_trend;

 CAD_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CAD_TREND) MIN(CAD_G8) MAX(CAD_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 04:55:01 2010-12-20 05:40:00	       9260	 -.0122       .0159
	-1 2010-09-14 07:10:01 2010-12-20 06:35:00	      10701	-.01105       .0176

Elapsed: 00:00:00.02
06:39:13 SQL> 
06:39:13 SQL> -- I need a copy of q15 attributes
06:39:13 SQL> 
06:39:13 SQL> DROP   TABLE cad_att;

Table dropped.

Elapsed: 00:00:00.03
06:39:13 SQL> CREATE TABLE cad_att COMPRESS AS
06:39:13   2  SELECT
06:39:13   3  ydate
06:39:13   4  ,att00 cad_att00
06:39:13   5  ,att01 cad_att01
06:39:13   6  ,att02 cad_att02
06:39:13   7  ,att03 cad_att03
06:39:13   8  ,att04 cad_att04
06:39:13   9  ,att05 cad_att05
06:39:13  10  ,att06 cad_att06
06:39:13  11  ,att07 cad_att07
06:39:13  12  ,att08 cad_att08
06:39:13  13  ,att09 cad_att09
06:39:13  14  ,att10 cad_att10
06:39:13  15  ,att11 cad_att11
06:39:13  16  ,att12 cad_att12
06:39:13  17  ,att13 cad_att13
06:39:13  18  ,att14 cad_att14
06:39:13  19  ,att15 cad_att15
06:39:13  20  ,att16 cad_att16
06:39:13  21  ,att17 cad_att17
06:39:13  22  ,att18 cad_att18
06:39:13  23  ,att19 cad_att19
06:39:13  24  ,att20 cad_att20
06:39:13  25  ,att21 cad_att21
06:39:13  26  ,att22 cad_att22
06:39:13  27  ,att23 cad_att23
06:39:13  28  ,att24 cad_att24
06:39:13  29  ,att25 cad_att25
06:39:13  30  ,att26 cad_att26
06:39:13  31  ,att27 cad_att27
06:39:13  32  ,att28 cad_att28
06:39:13  33  ,att29 cad_att29
06:39:13  34  ,att30 cad_att30
06:39:13  35  ,att31 cad_att31
06:39:13  36  ,att32 cad_att32
06:39:13  37  ,att33 cad_att33
06:39:13  38  ,att34 cad_att34
06:39:13  39  ,att35 cad_att35
06:39:13  40  ,att36 cad_att36
06:39:13  41  FROM q15
06:39:13  42  /

Table created.

Elapsed: 00:00:00.18
06:39:13 SQL> 
06:39:13 SQL> ANALYZE TABLE cad_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.46
06:39:13 SQL> 
06:39:13 SQL> -- rpt
06:39:13 SQL> SELECT COUNT(*)FROM cad_att;

  COUNT(*)
----------
     19961

Elapsed: 00:00:00.00
06:39:13 SQL> 
06:39:13 SQL> --
06:39:13 SQL> -- chf10.sql
06:39:13 SQL> --
06:39:13 SQL> 
06:39:13 SQL> -- Creates views and tables for backtesting a forex SVM strategy
06:39:13 SQL> 
06:39:13 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.29
06:39:13 SQL> 
06:39:13 SQL> -- I created di5min here:
06:39:13 SQL> -- /pt/s/rlk/svm8hp/update_di5min.sql
06:39:13 SQL> 
06:39:13 SQL> CREATE OR REPLACE VIEW q11 AS
06:39:13   2  SELECT
06:39:13   3  pair
06:39:13   4  ,ydate
06:39:13   5  ,prdate
06:39:13   6  ,rownum rnum -- acts as t in my time-series
06:39:13   7  ,clse
06:39:13   8  ,LAG(clse,12*6 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg6
06:39:14   9  ,LAG(clse,12*8 ,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg8
06:39:14  10  ,LAG(clse,12*10,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg10
06:39:14  11  ,LAG(clse,12*12,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg12
06:39:14  12  ,LAG(clse,12*14,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg14
06:39:14  13  ,LAG(clse,12*16,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg16
06:39:14  14  ,LAG(clse,12*18,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg18
06:39:14  15  ,LAG(clse,12*20,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg20
06:39:14  16  ,LAG(clse,12*22,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg22
06:39:14  17  ,LAG(clse,12*24,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg24
06:39:14  18  ,LAG(clse,12*26,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg26
06:39:14  19  ,LAG(clse,12*28,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg28
06:39:14  20  ,LAG(clse,12*32,NULL)OVER(PARTITION BY pair ORDER BY ydate)lg32
06:39:14  21  ,LEAD(clse,12*8,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld8
06:39:14  22  FROM di5min WHERE pair LIKE'%chf%'
06:39:14  23  ORDER BY ydate
06:39:14  24  /

View created.

Elapsed: 00:00:00.05
06:39:14 SQL> 
06:39:14 SQL> -- rpt
06:39:14 SQL> SELECT pair,COUNT(ydate) FROM q11 GROUP BY pair;

PAIR	COUNT(YDATE)
------- ------------
usd_chf        20348

Elapsed: 00:00:00.34
06:39:14 SQL> 
06:39:14 SQL> -- Calc deltas and gains
06:39:14 SQL> DROP TABLE q13;

Table dropped.

Elapsed: 00:00:00.25
06:39:14 SQL> 
06:39:14 SQL> CREATE TABLE q13 COMPRESS AS
06:39:14   2  SELECT
06:39:14   3  pair
06:39:14   4  ,ydate
06:39:14   5  ,prdate
06:39:14   6  ,rnum
06:39:14   7  ,ld8
06:39:14   8  ,CASE WHEN(clse-lg8)>0 then 1 ELSE -1 END trend
06:39:14   9  -- step by 2
06:39:14  10  ,clse-lg6  d06
06:39:14  11  ,lg6 -lg8  d68
06:39:14  12  ,lg8 -lg10 d810
06:39:14  13  ,lg10-lg12 d1012
06:39:14  14  ,lg12-lg14 d1214
06:39:14  15  ,lg14-lg16 d1416
06:39:14  16  ,lg16-lg18 d1618
06:39:14  17  -- step by 4
06:39:14  18  ,lg6 -lg10 d610
06:39:14  19  ,lg8 -lg12 d812
06:39:14  20  ,lg10-lg14 d1014
06:39:14  21  ,lg12-lg16 d1216
06:39:14  22  --
06:39:14  23  ,ABS(clse-lg6 )dc6
06:39:14  24  ,ABS(clse-lg8 )dc8
06:39:14  25  ,ABS(clse-lg10)dc10
06:39:14  26  ,ABS(clse-lg12)dc12
06:39:14  27  ,ABS(clse-lg14)dc14
06:39:14  28  ,ABS(clse-lg16)dc16
06:39:14  29  ,ABS(clse-lg18)dc18
06:39:14  30  ,ABS(clse-lg20)dc20
06:39:14  31  ,ABS(clse-lg22)dc22
06:39:14  32  ,(ld8-clse) ug8
06:39:14  33  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*6  PRECEDING AND CURRENT ROW)crr6
06:39:14  34  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*8  PRECEDING AND CURRENT ROW)crr8
06:39:14  35  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)crr10
06:39:14  36  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
06:39:14  37  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*14 PRECEDING AND CURRENT ROW)crr14
06:39:14  38  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*16 PRECEDING AND CURRENT ROW)crr16
06:39:14  39  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
06:39:14  40  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)crr20
06:39:14  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*22 PRECEDING AND CURRENT ROW)crr22
06:39:14  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
06:39:14  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*26 PRECEDING AND CURRENT ROW)crr26
06:39:14  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*28 PRECEDING AND CURRENT ROW)crr28
06:39:14  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*32 PRECEDING AND CURRENT ROW)crr32
06:39:14  46  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
06:39:14  47  ,0+TO_CHAR(ydate,'D')d
06:39:14  48  ,0+TO_CHAR(ydate,'W')w
06:39:14  49  -- mpm stands for minutes-past-midnight:
06:39:14  50  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
06:39:14  51  FROM q11
06:39:14  52  -- I dont want any NULL values from the LAG() functions:
06:39:14  53  WHERE lg32 > 0
06:39:14  54  ORDER BY pair,ydate
06:39:14  55  /

Table created.

Elapsed: 00:00:01.68
06:39:16 SQL> 
06:39:16 SQL> -- rpt
06:39:16 SQL> SELECT trend,COUNT(prdate)FROM q13 GROUP BY trend;

     TREND COUNT(PRDATE)
---------- -------------
	 1	    9654
	-1	   10310

Elapsed: 00:00:00.03
06:39:16 SQL> 
06:39:16 SQL> -- Calc gains and ntiles
06:39:16 SQL> DROP TABLE q15;

Table dropped.

Elapsed: 00:00:00.14
06:39:16 SQL> CREATE TABLE q15 COMPRESS AS
06:39:16   2  SELECT
06:39:16   3  pair
06:39:16   4  ,ydate
06:39:16   5  ,prdate -- Should be unique
06:39:16   6  ,trend -- +1 or -1
06:39:16   7  -- Use NTILE() to derive some attributes
06:39:16   8  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d68	))	 att00
06:39:16   9  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d810 ))	 att01
06:39:16  10  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1012))	 att02
06:39:16  11  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1214))	 att03
06:39:16  12  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1416))	 att04
06:39:16  13  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1618))	 att05
06:39:16  14  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d610 ))	 att06
06:39:16  15  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d812 ))	 att07
06:39:16  16  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1014))	 att08
06:39:16  17  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(d1216))	 att09
06:39:16  18  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc6 )		 att10
06:39:16  19  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc8 )		 att11
06:39:16  20  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc10)		 att12
06:39:16  21  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc12)		 att13
06:39:16  22  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc14)		 att14
06:39:16  23  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc16)		 att15
06:39:16  24  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc18)		 att16
06:39:16  25  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc20)		 att17
06:39:16  26  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY dc22)		 att18
06:39:16  27  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr6 ,7)))att19
06:39:16  28  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr8 ,7)))att20
06:39:16  29  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr10,7)))att21
06:39:16  30  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr12,7)))att22
06:39:16  31  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr14,7)))att23
06:39:16  32  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr16,7)))att24
06:39:16  33  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr18,7)))att25
06:39:16  34  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr20,7)))att26
06:39:16  35  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr22,7)))att27
06:39:16  36  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr24,7)))att28
06:39:16  37  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr26,7)))att29
06:39:16  38  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr28,7)))att30
06:39:16  39  ,NTILE(6)OVER(PARTITION BY trend,pair ORDER BY ABS(ROUND(crr32,7)))att31
06:39:16  40  -- date related integers: hour of day, day of week, week of month, minutes-past-midnight:
06:39:16  41  ,hh    att32
06:39:16  42  ,d     att33
06:39:16  43  ,w     att34
06:39:16  44  ,mpm   att35
06:39:16  45  ,trend att36
06:39:16  46  ,ug8 g8
06:39:16  47  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8 > 0.0020 THEN 'up' ELSE 'nup' END gatt
06:39:16  48  ,CASE WHEN ug8 IS NULL THEN NULL WHEN ug8< -0.0020 THEN 'up' ELSE 'nup' END gattn
06:39:16  49  FROM q13
06:39:16  50  ORDER BY pair,ydate
06:39:16  51  /

Table created.

Elapsed: 00:00:05.41
06:39:21 SQL> 
06:39:21 SQL> -- rpt
06:39:21 SQL> SELECT pair,trend,gatt,gattn,AVG(g8),COUNT(g8)FROM q15
06:39:21   2  GROUP BY pair,trend,gatt,gattn
06:39:21   3  ORDER BY pair,trend,gatt,gattn
06:39:21   4  /

PAIR	     TREND GAT GAT    AVG(G8)  COUNT(G8)
------- ---------- --- --- ---------- ----------
usd_chf 	-1 nup nup .000079771	    4648
usd_chf 	-1 nup up  -.00516123	    2887
usd_chf 	-1 up  nup  .00521724	    2716
usd_chf 	-1			       0
usd_chf 	 1 nup nup -9.145E-06	    4680
usd_chf 	 1 nup up  -.00463492	    2788
usd_chf 	 1 up  nup  .00470655	    2149
usd_chf 	 1			       0

8 rows selected.

Elapsed: 00:00:00.03
06:39:21 SQL> 
06:39:21 SQL> -- rpt
06:39:21 SQL> SELECT pair,max(ydate)from q15 group by pair;

PAIR	MAX(YDATE)
------- -------------------
usd_chf 2010-12-20 06:35:00

Elapsed: 00:00:00.02
06:39:21 SQL> 
06:39:21 SQL> DROP TABLE modsrc;

Table dropped.

Elapsed: 00:00:00.15
06:39:22 SQL> CREATE TABLE modsrc COMPRESS AS
06:39:22   2  SELECT
06:39:22   3  pair
06:39:22   4  ,ydate
06:39:22   5  ,prdate
06:39:22   6  ,trend
06:39:22   7  ,g8
06:39:22   8  ,gatt
06:39:22   9  ,gattn
06:39:22  10  FROM q15
06:39:22  11  /

Table created.

Elapsed: 00:00:00.09
06:39:22 SQL> 
06:39:22 SQL> ANALYZE TABLE modsrc COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.18
06:39:22 SQL> 
06:39:22 SQL> -- rpt
06:39:22 SQL> 
06:39:22 SQL> SELECT COUNT(pair)FROM q11;

COUNT(PAIR)
-----------
      20348

Elapsed: 00:00:00.33
06:39:22 SQL> SELECT COUNT(pair)FROM q13;

COUNT(PAIR)
-----------
      19964

Elapsed: 00:00:00.00
06:39:22 SQL> SELECT COUNT(pair)FROM q15;

COUNT(PAIR)
-----------
      19964

Elapsed: 00:00:00.02
06:39:22 SQL> SELECT COUNT(pair)FROM modsrc;

COUNT(PAIR)
-----------
      19964

Elapsed: 00:00:00.00
06:39:22 SQL> 
06:39:22 SQL> DROP   TABLE chf_ms10 ;

Table dropped.

Elapsed: 00:00:00.03
06:39:22 SQL> CREATE TABLE chf_ms10 COMPRESS AS
06:39:22   2  SELECT
06:39:22   3  ydate
06:39:22   4  ,trend chf_trend
06:39:22   5  ,g8    chf_g8
06:39:22   6  ,gatt  chf_gatt
06:39:22   7  ,gattn chf_gattn
06:39:22   8  FROM modsrc
06:39:22   9  /

Table created.

Elapsed: 00:00:00.07
06:39:22 SQL> 
06:39:22 SQL> ANALYZE TABLE chf_ms10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.14
06:39:22 SQL> 
06:39:22 SQL> -- rpt
06:39:22 SQL> SELECT trend,MIN(ydate),MAX(ydate),COUNT(g8),MIN(g8),MAX(g8)FROM modsrc GROUP BY trend;

     TREND MIN(YDATE)	       MAX(YDATE)	    COUNT(G8)	 MIN(G8)    MAX(G8)
---------- ------------------- ------------------- ---------- ---------- ----------
	 1 2010-09-14 11:10:01 2010-12-20 06:10:00	 9617	 -.01775      .0155
	-1 2010-09-14 04:55:01 2010-12-20 06:35:00	10251	 -.01825     .01545

Elapsed: 00:00:00.02
06:39:23 SQL> SELECT chf_trend,MIN(ydate),MAX(ydate),COUNT(chf_trend),MIN(chf_g8),MAX(chf_g8)FROM chf_ms10 GROUP BY chf_trend;

 CHF_TREND MIN(YDATE)	       MAX(YDATE)	   COUNT(CHF_TREND) MIN(CHF_G8) MAX(CHF_G8)
---------- ------------------- ------------------- ---------------- ----------- -----------
	 1 2010-09-14 11:10:01 2010-12-20 06:10:00	       9654	-.01775       .0155
	-1 2010-09-14 04:55:01 2010-12-20 06:35:00	      10310	-.01825      .01545

Elapsed: 00:00:00.01
06:39:23 SQL> 
06:39:23 SQL> -- I need a copy of q15 attributes
06:39:23 SQL> 
06:39:23 SQL> DROP   TABLE chf_att;

Table dropped.

Elapsed: 00:00:00.04
06:39:23 SQL> CREATE TABLE chf_att COMPRESS AS
06:39:23   2  SELECT
06:39:23   3  ydate
06:39:23   4  ,att00 chf_att00
06:39:23   5  ,att01 chf_att01
06:39:23   6  ,att02 chf_att02
06:39:23   7  ,att03 chf_att03
06:39:23   8  ,att04 chf_att04
06:39:23   9  ,att05 chf_att05
06:39:23  10  ,att06 chf_att06
06:39:23  11  ,att07 chf_att07
06:39:23  12  ,att08 chf_att08
06:39:23  13  ,att09 chf_att09
06:39:23  14  ,att10 chf_att10
06:39:23  15  ,att11 chf_att11
06:39:23  16  ,att12 chf_att12
06:39:23  17  ,att13 chf_att13
06:39:23  18  ,att14 chf_att14
06:39:23  19  ,att15 chf_att15
06:39:23  20  ,att16 chf_att16
06:39:23  21  ,att17 chf_att17
06:39:23  22  ,att18 chf_att18
06:39:23  23  ,att19 chf_att19
06:39:23  24  ,att20 chf_att20
06:39:23  25  ,att21 chf_att21
06:39:23  26  ,att22 chf_att22
06:39:23  27  ,att23 chf_att23
06:39:23  28  ,att24 chf_att24
06:39:23  29  ,att25 chf_att25
06:39:23  30  ,att26 chf_att26
06:39:23  31  ,att27 chf_att27
06:39:23  32  ,att28 chf_att28
06:39:23  33  ,att29 chf_att29
06:39:23  34  ,att30 chf_att30
06:39:23  35  ,att31 chf_att31
06:39:23  36  ,att32 chf_att32
06:39:23  37  ,att33 chf_att33
06:39:23  38  ,att34 chf_att34
06:39:23  39  ,att35 chf_att35
06:39:23  40  ,att36 chf_att36
06:39:23  41  FROM q15
06:39:23  42  /

Table created.

Elapsed: 00:00:00.17
06:39:23 SQL> 
06:39:23 SQL> ANALYZE TABLE chf_att COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.45
06:39:23 SQL> 
06:39:23 SQL> -- rpt
06:39:23 SQL> SELECT COUNT(*)FROM chf_att;

  COUNT(*)
----------
     19964

Elapsed: 00:00:00.00
06:39:23 SQL> 
06:39:23 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
