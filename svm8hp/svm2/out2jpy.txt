
SQL*Plus: Release 11.2.0.1.0 Production on Mon Dec 20 05:57:54 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

05:57:54 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
05:57:54 SQL> 05:57:54 SQL> --
05:57:54 SQL> -- jpy14.sql
05:57:54 SQL> --
05:57:54 SQL> 
05:57:54 SQL> -- For jpy-model, calc goodness from attributes of gbp, etc.
05:57:54 SQL> 
05:57:54 SQL> DROP TABLE jpy_ms14;

Table dropped.

Elapsed: 00:00:00.07
05:57:55 SQL> CREATE TABLE jpy_ms14 COMPRESS AS
05:57:55   2  SELECT
05:57:55   3  g.ydate
05:57:55   4  ,jpy_trend
05:57:55   5  ,jpy_g8
05:57:55   6  ,jpy_gatt gatt
05:57:55   7  ,jpy_gattn gattn
05:57:55   8  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att00 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g00
05:57:55   9  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att01 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g01
05:57:55  10  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att02 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g02
05:57:55  11  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att03 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g03
05:57:55  12  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att04 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g04
05:57:55  13  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att05 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g05
05:57:55  14  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att06 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g06
05:57:55  15  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att07 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g07
05:57:55  16  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att08 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g08
05:57:55  17  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att09 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g09
05:57:55  18  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att10 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g10
05:57:55  19  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att11 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g11
05:57:55  20  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att12 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g12
05:57:55  21  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att13 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g13
05:57:55  22  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att14 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g14
05:57:55  23  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att15 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g15
05:57:55  24  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att16 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g16
05:57:55  25  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att17 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g17
05:57:55  26  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att18 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g18
05:57:55  27  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att19 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g19
05:57:55  28  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att20 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g20
05:57:55  29  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att21 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g21
05:57:55  30  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att22 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g22
05:57:55  31  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att23 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g23
05:57:55  32  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att24 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g24
05:57:55  33  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att25 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g25
05:57:55  34  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att26 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g26
05:57:55  35  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att27 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g27
05:57:55  36  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att28 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g28
05:57:55  37  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att29 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g29
05:57:55  38  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att30 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g30
05:57:55  39  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att31 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g31
05:57:55  40  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att32 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g32
05:57:55  41  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att33 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g33
05:57:55  42  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att34 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g34
05:57:55  43  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att35 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g35
05:57:55  44  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att36 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)eur_g36
05:57:55  45  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att36 ORDER BY j.ydate ROWS BETWEEN 12*40 PRECEDING AND CURRENT ROW)eur_g37
05:57:55  46  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att36 ORDER BY j.ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)eur_g38
05:57:55  47  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att36 ORDER BY j.ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)eur_g39
05:57:55  48  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,eur_att36 ORDER BY j.ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)eur_g40
05:57:55  49  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att00 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g00
05:57:55  50  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att01 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g01
05:57:55  51  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att02 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g02
05:57:55  52  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att03 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g03
05:57:55  53  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att04 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g04
05:57:55  54  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att05 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g05
05:57:55  55  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att06 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g06
05:57:55  56  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att07 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g07
05:57:55  57  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att08 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g08
05:57:55  58  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att09 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g09
05:57:55  59  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att10 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g10
05:57:55  60  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att11 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g11
05:57:55  61  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att12 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g12
05:57:55  62  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att13 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g13
05:57:55  63  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att14 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g14
05:57:55  64  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att15 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g15
05:57:55  65  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att16 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g16
05:57:55  66  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att17 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g17
05:57:55  67  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att18 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g18
05:57:55  68  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att19 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g19
05:57:55  69  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att20 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g20
05:57:55  70  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att21 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g21
05:57:55  71  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att22 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g22
05:57:55  72  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att23 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g23
05:57:55  73  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att24 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g24
05:57:55  74  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att25 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g25
05:57:55  75  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att26 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g26
05:57:55  76  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att27 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g27
05:57:55  77  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att28 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g28
05:57:55  78  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att29 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g29
05:57:55  79  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att30 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g30
05:57:55  80  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att31 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g31
05:57:55  81  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att32 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g32
05:57:55  82  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att33 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g33
05:57:55  83  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att34 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g34
05:57:55  84  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att35 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g35
05:57:55  85  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att36 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)aud_g36
05:57:55  86  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att36 ORDER BY j.ydate ROWS BETWEEN 12*40 PRECEDING AND CURRENT ROW)aud_g37
05:57:55  87  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att36 ORDER BY j.ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)aud_g38
05:57:55  88  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att36 ORDER BY j.ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)aud_g39
05:57:55  89  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,aud_att36 ORDER BY j.ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)aud_g40
05:57:55  90  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att00 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g00
05:57:55  91  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att01 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g01
05:57:55  92  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att02 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g02
05:57:55  93  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att03 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g03
05:57:55  94  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att04 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g04
05:57:55  95  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att05 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g05
05:57:55  96  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att06 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g06
05:57:55  97  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att07 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g07
05:57:55  98  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att08 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g08
05:57:55  99  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att09 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g09
05:57:55 100  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att10 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g10
05:57:55 101  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att11 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g11
05:57:55 102  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att12 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g12
05:57:55 103  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att13 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g13
05:57:55 104  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att14 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g14
05:57:55 105  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att15 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g15
05:57:55 106  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att16 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g16
05:57:55 107  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att17 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g17
05:57:55 108  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att18 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g18
05:57:55 109  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att19 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g19
05:57:55 110  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att20 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g20
05:57:55 111  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att21 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g21
05:57:55 112  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att22 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g22
05:57:55 113  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att23 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g23
05:57:55 114  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att24 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g24
05:57:55 115  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att25 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g25
05:57:55 116  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att26 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g26
05:57:55 117  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att27 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g27
05:57:55 118  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att28 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g28
05:57:55 119  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att29 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g29
05:57:55 120  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att30 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g30
05:57:55 121  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att31 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g31
05:57:55 122  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att32 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g32
05:57:55 123  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att33 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g33
05:57:55 124  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att34 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g34
05:57:55 125  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att35 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g35
05:57:55 126  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att36 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)gbp_g36
05:57:55 127  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att36 ORDER BY j.ydate ROWS BETWEEN 12*40 PRECEDING AND CURRENT ROW)gbp_g37
05:57:55 128  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att36 ORDER BY j.ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)gbp_g38
05:57:55 129  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att36 ORDER BY j.ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)gbp_g39
05:57:55 130  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,gbp_att36 ORDER BY j.ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)gbp_g40
05:57:55 131  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att00 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g00
05:57:55 132  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att01 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g01
05:57:55 133  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att02 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g02
05:57:55 134  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att03 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g03
05:57:55 135  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att04 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g04
05:57:55 136  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att05 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g05
05:57:55 137  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att06 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g06
05:57:55 138  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att07 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g07
05:57:55 139  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att08 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g08
05:57:55 140  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att09 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g09
05:57:55 141  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att10 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g10
05:57:55 142  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att11 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g11
05:57:55 143  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att12 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g12
05:57:55 144  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att13 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g13
05:57:55 145  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att14 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g14
05:57:55 146  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att15 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g15
05:57:55 147  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att16 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g16
05:57:55 148  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att17 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g17
05:57:55 149  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att18 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g18
05:57:55 150  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att19 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g19
05:57:55 151  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att20 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g20
05:57:55 152  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att21 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g21
05:57:55 153  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att22 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g22
05:57:55 154  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att23 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g23
05:57:55 155  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att24 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g24
05:57:55 156  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att25 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g25
05:57:55 157  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att26 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g26
05:57:55 158  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att27 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g27
05:57:55 159  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att28 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g28
05:57:55 160  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att29 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g29
05:57:55 161  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att30 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g30
05:57:55 162  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att31 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g31
05:57:55 163  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att32 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g32
05:57:55 164  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att33 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g33
05:57:55 165  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att34 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g34
05:57:55 166  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att35 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g35
05:57:55 167  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att36 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)jpy_g36
05:57:55 168  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att36 ORDER BY j.ydate ROWS BETWEEN 12*40 PRECEDING AND CURRENT ROW)jpy_g37
05:57:55 169  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att36 ORDER BY j.ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)jpy_g38
05:57:55 170  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att36 ORDER BY j.ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)jpy_g39
05:57:55 171  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,jpy_att36 ORDER BY j.ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)jpy_g40
05:57:55 172  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att00 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g00
05:57:55 173  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att01 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g01
05:57:55 174  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att02 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g02
05:57:55 175  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att03 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g03
05:57:55 176  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att04 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g04
05:57:55 177  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att05 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g05
05:57:55 178  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att06 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g06
05:57:55 179  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att07 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g07
05:57:55 180  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att08 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g08
05:57:55 181  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att09 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g09
05:57:55 182  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att10 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g10
05:57:55 183  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att11 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g11
05:57:55 184  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att12 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g12
05:57:55 185  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att13 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g13
05:57:55 186  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att14 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g14
05:57:55 187  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att15 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g15
05:57:55 188  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att16 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g16
05:57:55 189  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att17 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g17
05:57:55 190  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att18 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g18
05:57:55 191  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att19 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g19
05:57:55 192  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att20 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g20
05:57:55 193  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att21 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g21
05:57:55 194  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att22 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g22
05:57:55 195  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att23 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g23
05:57:55 196  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att24 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g24
05:57:55 197  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att25 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g25
05:57:55 198  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att26 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g26
05:57:55 199  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att27 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g27
05:57:55 200  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att28 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g28
05:57:55 201  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att29 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g29
05:57:55 202  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att30 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g30
05:57:55 203  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att31 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g31
05:57:55 204  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att32 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g32
05:57:55 205  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att33 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g33
05:57:55 206  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att34 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g34
05:57:55 207  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att35 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g35
05:57:55 208  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att36 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)cad_g36
05:57:55 209  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att36 ORDER BY j.ydate ROWS BETWEEN 12*40 PRECEDING AND CURRENT ROW)cad_g37
05:57:55 210  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att36 ORDER BY j.ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)cad_g38
05:57:55 211  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att36 ORDER BY j.ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)cad_g39
05:57:55 212  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,cad_att36 ORDER BY j.ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)cad_g40
05:57:55 213  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att00 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g00
05:57:55 214  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att01 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g01
05:57:55 215  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att02 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g02
05:57:55 216  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att03 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g03
05:57:55 217  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att04 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g04
05:57:55 218  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att05 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g05
05:57:55 219  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att06 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g06
05:57:55 220  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att07 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g07
05:57:55 221  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att08 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g08
05:57:55 222  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att09 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g09
05:57:55 223  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att10 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g10
05:57:55 224  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att11 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g11
05:57:55 225  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att12 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g12
05:57:55 226  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att13 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g13
05:57:55 227  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att14 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g14
05:57:55 228  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att15 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g15
05:57:55 229  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att16 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g16
05:57:55 230  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att17 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g17
05:57:55 231  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att18 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g18
05:57:55 232  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att19 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g19
05:57:55 233  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att20 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g20
05:57:55 234  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att21 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g21
05:57:55 235  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att22 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g22
05:57:55 236  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att23 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g23
05:57:55 237  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att24 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g24
05:57:55 238  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att25 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g25
05:57:55 239  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att26 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g26
05:57:55 240  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att27 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g27
05:57:55 241  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att28 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g28
05:57:55 242  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att29 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g29
05:57:55 243  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att30 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g30
05:57:55 244  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att31 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g31
05:57:55 245  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att32 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g32
05:57:55 246  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att33 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g33
05:57:55 247  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att34 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g34
05:57:55 248  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att35 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g35
05:57:55 249  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att36 ORDER BY j.ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)chf_g36
05:57:55 250  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att36 ORDER BY j.ydate ROWS BETWEEN 12*40 PRECEDING AND CURRENT ROW)chf_g37
05:57:55 251  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att36 ORDER BY j.ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)chf_g38
05:57:55 252  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att36 ORDER BY j.ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)chf_g39
05:57:55 253  ,SUM(jpy_g8)OVER(PARTITION BY jpy_trend,chf_att36 ORDER BY j.ydate ROWS BETWEEN 12*10 PRECEDING AND CURRENT ROW)chf_g40
05:57:55 254  FROM jpy_ms10 m
05:57:55 255  ,eur_att e
05:57:55 256  ,aud_att a
05:57:55 257  ,gbp_att g
05:57:55 258  ,jpy_att j
05:57:55 259  ,cad_att d
05:57:55 260  ,chf_att f
05:57:55 261  WHERE m.ydate = e.ydate
05:57:55 262  AND   m.ydate = a.ydate
05:57:55 263  AND   m.ydate = g.ydate
05:57:55 264  AND   m.ydate = j.ydate
05:57:55 265  AND   m.ydate = d.ydate
05:57:55 266  AND   m.ydate = f.ydate
05:57:55 267  /

Table created.

Elapsed: 00:02:49.54
06:00:44 SQL> 
06:00:44 SQL> -- rpt
06:00:44 SQL> SELECT COUNT(ydate),MIN(ydate),MAX(ydate)FROM jpy_ms14;

COUNT(YDATE) MIN(YDATE) 	 MAX(YDATE)
------------ ------------------- -------------------
       19949 2010-09-14 04:55:01 2010-12-20 05:55:00

Elapsed: 00:00:00.08
06:00:44 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
