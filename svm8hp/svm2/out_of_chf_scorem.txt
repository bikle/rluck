
SQL*Plus: Release 11.2.0.1.0 Production on Sat Dec 18 21:21:41 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

21:21:42 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
21:21:42 SQL> 21:21:42 SQL> @chf_score1day_gattn.sql	2010-12-17 11:50:00
21:21:42 SQL> --
21:21:42 SQL> -- chf_score1day_gattn.sql
21:21:42 SQL> --
21:21:42 SQL> 
21:21:42 SQL> CREATE OR REPLACE VIEW sme AS
21:21:42   2  SELECT
21:21:42   3  'chf'||m.ydate prdate
21:21:42   4  ,NULL gattn
21:21:42   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:21:42   6  ,eur_g00
21:21:42   7  ,eur_g01
21:21:42   8  ,eur_g02
21:21:42   9  ,eur_g03
21:21:42  10  ,eur_g04
21:21:42  11  ,eur_g05
21:21:42  12  ,eur_g06
21:21:42  13  ,eur_g07
21:21:42  14  ,eur_g08
21:21:42  15  ,eur_g09
21:21:42  16  ,eur_g10
21:21:42  17  ,eur_g11
21:21:42  18  ,eur_g12
21:21:42  19  ,eur_g13
21:21:42  20  ,eur_g14
21:21:42  21  ,eur_g15
21:21:42  22  ,eur_g16
21:21:42  23  ,eur_g17
21:21:42  24  ,eur_g18
21:21:42  25  ,eur_g19
21:21:42  26  ,eur_g20
21:21:42  27  ,eur_g21
21:21:42  28  ,eur_g22
21:21:42  29  ,eur_g23
21:21:42  30  ,eur_g24
21:21:42  31  ,eur_g25
21:21:42  32  ,eur_g26
21:21:42  33  ,eur_g27
21:21:42  34  ,eur_g28
21:21:42  35  ,eur_g29
21:21:42  36  ,eur_g30
21:21:42  37  ,eur_g31
21:21:42  38  ,eur_g32
21:21:42  39  ,eur_g33
21:21:42  40  ,eur_g34
21:21:42  41  ,eur_g35
21:21:42  42  ,eur_g36
21:21:42  43  ,eur_g37
21:21:42  44  ,eur_g38
21:21:42  45  ,eur_g39
21:21:42  46  ,eur_g40
21:21:42  47  ,aud_g00
21:21:42  48  ,aud_g01
21:21:42  49  ,aud_g02
21:21:42  50  ,aud_g03
21:21:42  51  ,aud_g04
21:21:42  52  ,aud_g05
21:21:42  53  ,aud_g06
21:21:42  54  ,aud_g07
21:21:42  55  ,aud_g08
21:21:42  56  ,aud_g09
21:21:42  57  ,aud_g10
21:21:42  58  ,aud_g11
21:21:42  59  ,aud_g12
21:21:42  60  ,aud_g13
21:21:42  61  ,aud_g14
21:21:42  62  ,aud_g15
21:21:42  63  ,aud_g16
21:21:42  64  ,aud_g17
21:21:42  65  ,aud_g18
21:21:42  66  ,aud_g19
21:21:42  67  ,aud_g20
21:21:42  68  ,aud_g21
21:21:42  69  ,aud_g22
21:21:42  70  ,aud_g23
21:21:42  71  ,aud_g24
21:21:42  72  ,aud_g25
21:21:42  73  ,aud_g26
21:21:42  74  ,aud_g27
21:21:42  75  ,aud_g28
21:21:42  76  ,aud_g29
21:21:42  77  ,aud_g30
21:21:42  78  ,aud_g31
21:21:42  79  ,aud_g32
21:21:42  80  ,aud_g33
21:21:42  81  ,aud_g34
21:21:42  82  ,aud_g35
21:21:42  83  ,aud_g36
21:21:42  84  ,aud_g37
21:21:42  85  ,aud_g38
21:21:42  86  ,aud_g39
21:21:42  87  ,aud_g40
21:21:42  88  ,gbp_g00
21:21:42  89  ,gbp_g01
21:21:42  90  ,gbp_g02
21:21:42  91  ,gbp_g03
21:21:42  92  ,gbp_g04
21:21:42  93  ,gbp_g05
21:21:42  94  ,gbp_g06
21:21:42  95  ,gbp_g07
21:21:42  96  ,gbp_g08
21:21:42  97  ,gbp_g09
21:21:42  98  ,gbp_g10
21:21:42  99  ,gbp_g11
21:21:42 100  ,gbp_g12
21:21:42 101  ,gbp_g13
21:21:42 102  ,gbp_g14
21:21:42 103  ,gbp_g15
21:21:42 104  ,gbp_g16
21:21:42 105  ,gbp_g17
21:21:42 106  ,gbp_g18
21:21:42 107  ,gbp_g19
21:21:42 108  ,gbp_g20
21:21:42 109  ,gbp_g21
21:21:42 110  ,gbp_g22
21:21:42 111  ,gbp_g23
21:21:42 112  ,gbp_g24
21:21:42 113  ,gbp_g25
21:21:42 114  ,gbp_g26
21:21:42 115  ,gbp_g27
21:21:42 116  ,gbp_g28
21:21:42 117  ,gbp_g29
21:21:42 118  ,gbp_g30
21:21:42 119  ,gbp_g31
21:21:42 120  ,gbp_g32
21:21:42 121  ,gbp_g33
21:21:42 122  ,gbp_g34
21:21:42 123  ,gbp_g35
21:21:42 124  ,gbp_g36
21:21:42 125  ,gbp_g37
21:21:42 126  ,gbp_g38
21:21:42 127  ,gbp_g39
21:21:42 128  ,gbp_g40
21:21:42 129  ,jpy_g00
21:21:42 130  ,jpy_g01
21:21:42 131  ,jpy_g02
21:21:42 132  ,jpy_g03
21:21:42 133  ,jpy_g04
21:21:42 134  ,jpy_g05
21:21:42 135  ,jpy_g06
21:21:42 136  ,jpy_g07
21:21:42 137  ,jpy_g08
21:21:42 138  ,jpy_g09
21:21:42 139  ,jpy_g10
21:21:42 140  ,jpy_g11
21:21:42 141  ,jpy_g12
21:21:42 142  ,jpy_g13
21:21:42 143  ,jpy_g14
21:21:42 144  ,jpy_g15
21:21:42 145  ,jpy_g16
21:21:42 146  ,jpy_g17
21:21:42 147  ,jpy_g18
21:21:42 148  ,jpy_g19
21:21:42 149  ,jpy_g20
21:21:42 150  ,jpy_g21
21:21:42 151  ,jpy_g22
21:21:42 152  ,jpy_g23
21:21:42 153  ,jpy_g24
21:21:42 154  ,jpy_g25
21:21:42 155  ,jpy_g26
21:21:42 156  ,jpy_g27
21:21:42 157  ,jpy_g28
21:21:42 158  ,jpy_g29
21:21:42 159  ,jpy_g30
21:21:42 160  ,jpy_g31
21:21:42 161  ,jpy_g32
21:21:42 162  ,jpy_g33
21:21:42 163  ,jpy_g34
21:21:42 164  ,jpy_g35
21:21:42 165  ,jpy_g36
21:21:42 166  ,jpy_g37
21:21:42 167  ,jpy_g38
21:21:42 168  ,jpy_g39
21:21:42 169  ,jpy_g40
21:21:42 170  ,cad_g00
21:21:42 171  ,cad_g01
21:21:42 172  ,cad_g02
21:21:42 173  ,cad_g03
21:21:42 174  ,cad_g04
21:21:42 175  ,cad_g05
21:21:42 176  ,cad_g06
21:21:42 177  ,cad_g07
21:21:42 178  ,cad_g08
21:21:42 179  ,cad_g09
21:21:42 180  ,cad_g10
21:21:42 181  ,cad_g11
21:21:42 182  ,cad_g12
21:21:42 183  ,cad_g13
21:21:42 184  ,cad_g14
21:21:42 185  ,cad_g15
21:21:42 186  ,cad_g16
21:21:42 187  ,cad_g17
21:21:42 188  ,cad_g18
21:21:42 189  ,cad_g19
21:21:42 190  ,cad_g20
21:21:42 191  ,cad_g21
21:21:42 192  ,cad_g22
21:21:42 193  ,cad_g23
21:21:42 194  ,cad_g24
21:21:42 195  ,cad_g25
21:21:42 196  ,cad_g26
21:21:42 197  ,cad_g27
21:21:42 198  ,cad_g28
21:21:42 199  ,cad_g29
21:21:42 200  ,cad_g30
21:21:42 201  ,cad_g31
21:21:42 202  ,cad_g32
21:21:42 203  ,cad_g33
21:21:42 204  ,cad_g34
21:21:42 205  ,cad_g35
21:21:42 206  ,cad_g36
21:21:42 207  ,cad_g37
21:21:42 208  ,cad_g38
21:21:42 209  ,cad_g39
21:21:42 210  ,cad_g40
21:21:42 211  ,chf_g00
21:21:42 212  ,chf_g01
21:21:42 213  ,chf_g02
21:21:42 214  ,chf_g03
21:21:42 215  ,chf_g04
21:21:42 216  ,chf_g05
21:21:42 217  ,chf_g06
21:21:42 218  ,chf_g07
21:21:42 219  ,chf_g08
21:21:42 220  ,chf_g09
21:21:42 221  ,chf_g10
21:21:42 222  ,chf_g11
21:21:42 223  ,chf_g12
21:21:42 224  ,chf_g13
21:21:42 225  ,chf_g14
21:21:42 226  ,chf_g15
21:21:42 227  ,chf_g16
21:21:42 228  ,chf_g17
21:21:42 229  ,chf_g18
21:21:42 230  ,chf_g19
21:21:42 231  ,chf_g20
21:21:42 232  ,chf_g21
21:21:42 233  ,chf_g22
21:21:42 234  ,chf_g23
21:21:42 235  ,chf_g24
21:21:42 236  ,chf_g25
21:21:42 237  ,chf_g26
21:21:42 238  ,chf_g27
21:21:42 239  ,chf_g28
21:21:42 240  ,chf_g29
21:21:42 241  ,chf_g30
21:21:42 242  ,chf_g31
21:21:42 243  ,chf_g32
21:21:42 244  ,chf_g33
21:21:42 245  ,chf_g34
21:21:42 246  ,chf_g35
21:21:42 247  ,chf_g36
21:21:42 248  ,chf_g37
21:21:42 249  ,chf_g38
21:21:42 250  ,chf_g39
21:21:42 251  ,chf_g40
21:21:42 252  FROM chf_ms14 m
21:21:42 253  WHERE m.ydate = '&1'||' '||'&2'
21:21:42 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'11:50:00'

View created.

Elapsed: 00:00:00.15
21:21:42 SQL> 
21:21:42 SQL> -- rpt
21:21:42 SQL> -- We should see just 1 row:
21:21:42 SQL> 
21:21:42 SQL> SELECT COUNT(prdate) FROM sme
21:21:42   2  
21:21:42 SQL> -- Build the model:
21:21:42 SQL> CREATE OR REPLACE VIEW bme AS
21:21:42   2  SELECT
21:21:42   3  'chf'||m.ydate prdate
21:21:42   4  ,gattn
21:21:42   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:21:42   6  ,eur_g00
21:21:42   7  ,eur_g01
21:21:42   8  ,eur_g02
21:21:42   9  ,eur_g03
21:21:42  10  ,eur_g04
21:21:42  11  ,eur_g05
21:21:42  12  ,eur_g06
21:21:42  13  ,eur_g07
21:21:42  14  ,eur_g08
21:21:42  15  ,eur_g09
21:21:42  16  ,eur_g10
21:21:42  17  ,eur_g11
21:21:42  18  ,eur_g12
21:21:42  19  ,eur_g13
21:21:42  20  ,eur_g14
21:21:42  21  ,eur_g15
21:21:42  22  ,eur_g16
21:21:42  23  ,eur_g17
21:21:42  24  ,eur_g18
21:21:42  25  ,eur_g19
21:21:42  26  ,eur_g20
21:21:42  27  ,eur_g21
21:21:42  28  ,eur_g22
21:21:42  29  ,eur_g23
21:21:42  30  ,eur_g24
21:21:42  31  ,eur_g25
21:21:42  32  ,eur_g26
21:21:42  33  ,eur_g27
21:21:42  34  ,eur_g28
21:21:42  35  ,eur_g29
21:21:42  36  ,eur_g30
21:21:42  37  ,eur_g31
21:21:42  38  ,eur_g32
21:21:42  39  ,eur_g33
21:21:42  40  ,eur_g34
21:21:42  41  ,eur_g35
21:21:42  42  ,eur_g36
21:21:42  43  ,eur_g37
21:21:42  44  ,eur_g38
21:21:42  45  ,eur_g39
21:21:42  46  ,eur_g40
21:21:42  47  ,aud_g00
21:21:42  48  ,aud_g01
21:21:42  49  ,aud_g02
21:21:42  50  ,aud_g03
21:21:42  51  ,aud_g04
21:21:42  52  ,aud_g05
21:21:42  53  ,aud_g06
21:21:42  54  ,aud_g07
21:21:42  55  ,aud_g08
21:21:42  56  ,aud_g09
21:21:42  57  ,aud_g10
21:21:42  58  ,aud_g11
21:21:42  59  ,aud_g12
21:21:42  60  ,aud_g13
21:21:42  61  ,aud_g14
21:21:42  62  ,aud_g15
21:21:42  63  ,aud_g16
21:21:42  64  ,aud_g17
21:21:42  65  ,aud_g18
21:21:42  66  ,aud_g19
21:21:42  67  ,aud_g20
21:21:42  68  ,aud_g21
21:21:42  69  ,aud_g22
21:21:42  70  ,aud_g23
21:21:42  71  ,aud_g24
21:21:42  72  ,aud_g25
21:21:42  73  ,aud_g26
21:21:42  74  ,aud_g27
21:21:42  75  ,aud_g28
21:21:42  76  ,aud_g29
21:21:42  77  ,aud_g30
21:21:42  78  ,aud_g31
21:21:42  79  ,aud_g32
21:21:42  80  ,aud_g33
21:21:42  81  ,aud_g34
21:21:42  82  ,aud_g35
21:21:42  83  ,aud_g36
21:21:42  84  ,aud_g37
21:21:42  85  ,aud_g38
21:21:42  86  ,aud_g39
21:21:42  87  ,aud_g40
21:21:42  88  ,gbp_g00
21:21:42  89  ,gbp_g01
21:21:42  90  ,gbp_g02
21:21:42  91  ,gbp_g03
21:21:42  92  ,gbp_g04
21:21:42  93  ,gbp_g05
21:21:42  94  ,gbp_g06
21:21:42  95  ,gbp_g07
21:21:42  96  ,gbp_g08
21:21:42  97  ,gbp_g09
21:21:42  98  ,gbp_g10
21:21:42  99  ,gbp_g11
21:21:42 100  ,gbp_g12
21:21:42 101  ,gbp_g13
21:21:42 102  ,gbp_g14
21:21:42 103  ,gbp_g15
21:21:42 104  ,gbp_g16
21:21:42 105  ,gbp_g17
21:21:42 106  ,gbp_g18
21:21:42 107  ,gbp_g19
21:21:42 108  ,gbp_g20
21:21:42 109  ,gbp_g21
21:21:42 110  ,gbp_g22
21:21:42 111  ,gbp_g23
21:21:42 112  ,gbp_g24
21:21:42 113  ,gbp_g25
21:21:42 114  ,gbp_g26
21:21:42 115  ,gbp_g27
21:21:42 116  ,gbp_g28
21:21:42 117  ,gbp_g29
21:21:42 118  ,gbp_g30
21:21:42 119  ,gbp_g31
21:21:42 120  ,gbp_g32
21:21:42 121  ,gbp_g33
21:21:42 122  ,gbp_g34
21:21:42 123  ,gbp_g35
21:21:42 124  ,gbp_g36
21:21:42 125  ,gbp_g37
21:21:42 126  ,gbp_g38
21:21:42 127  ,gbp_g39
21:21:42 128  ,gbp_g40
21:21:42 129  ,jpy_g00
21:21:42 130  ,jpy_g01
21:21:42 131  ,jpy_g02
21:21:42 132  ,jpy_g03
21:21:42 133  ,jpy_g04
21:21:42 134  ,jpy_g05
21:21:42 135  ,jpy_g06
21:21:42 136  ,jpy_g07
21:21:42 137  ,jpy_g08
21:21:42 138  ,jpy_g09
21:21:42 139  ,jpy_g10
21:21:42 140  ,jpy_g11
21:21:42 141  ,jpy_g12
21:21:42 142  ,jpy_g13
21:21:42 143  ,jpy_g14
21:21:42 144  ,jpy_g15
21:21:42 145  ,jpy_g16
21:21:42 146  ,jpy_g17
21:21:42 147  ,jpy_g18
21:21:42 148  ,jpy_g19
21:21:42 149  ,jpy_g20
21:21:42 150  ,jpy_g21
21:21:42 151  ,jpy_g22
21:21:42 152  ,jpy_g23
21:21:42 153  ,jpy_g24
21:21:42 154  ,jpy_g25
21:21:42 155  ,jpy_g26
21:21:42 156  ,jpy_g27
21:21:42 157  ,jpy_g28
21:21:42 158  ,jpy_g29
21:21:42 159  ,jpy_g30
21:21:42 160  ,jpy_g31
21:21:42 161  ,jpy_g32
21:21:42 162  ,jpy_g33
21:21:42 163  ,jpy_g34
21:21:42 164  ,jpy_g35
21:21:42 165  ,jpy_g36
21:21:42 166  ,jpy_g37
21:21:42 167  ,jpy_g38
21:21:42 168  ,jpy_g39
21:21:42 169  ,jpy_g40
21:21:42 170  ,cad_g00
21:21:42 171  ,cad_g01
21:21:42 172  ,cad_g02
21:21:42 173  ,cad_g03
21:21:42 174  ,cad_g04
21:21:42 175  ,cad_g05
21:21:42 176  ,cad_g06
21:21:42 177  ,cad_g07
21:21:42 178  ,cad_g08
21:21:42 179  ,cad_g09
21:21:42 180  ,cad_g10
21:21:42 181  ,cad_g11
21:21:42 182  ,cad_g12
21:21:42 183  ,cad_g13
21:21:42 184  ,cad_g14
21:21:42 185  ,cad_g15
21:21:42 186  ,cad_g16
21:21:42 187  ,cad_g17
21:21:42 188  ,cad_g18
21:21:42 189  ,cad_g19
21:21:42 190  ,cad_g20
21:21:42 191  ,cad_g21
21:21:42 192  ,cad_g22
21:21:42 193  ,cad_g23
21:21:42 194  ,cad_g24
21:21:42 195  ,cad_g25
21:21:42 196  ,cad_g26
21:21:42 197  ,cad_g27
21:21:42 198  ,cad_g28
21:21:42 199  ,cad_g29
21:21:42 200  ,cad_g30
21:21:42 201  ,cad_g31
21:21:42 202  ,cad_g32
21:21:42 203  ,cad_g33
21:21:42 204  ,cad_g34
21:21:42 205  ,cad_g35
21:21:42 206  ,cad_g36
21:21:42 207  ,cad_g37
21:21:42 208  ,cad_g38
21:21:42 209  ,cad_g39
21:21:42 210  ,cad_g40
21:21:42 211  ,chf_g00
21:21:42 212  ,chf_g01
21:21:42 213  ,chf_g02
21:21:42 214  ,chf_g03
21:21:42 215  ,chf_g04
21:21:42 216  ,chf_g05
21:21:42 217  ,chf_g06
21:21:42 218  ,chf_g07
21:21:42 219  ,chf_g08
21:21:42 220  ,chf_g09
21:21:42 221  ,chf_g10
21:21:42 222  ,chf_g11
21:21:42 223  ,chf_g12
21:21:42 224  ,chf_g13
21:21:42 225  ,chf_g14
21:21:42 226  ,chf_g15
21:21:42 227  ,chf_g16
21:21:42 228  ,chf_g17
21:21:42 229  ,chf_g18
21:21:42 230  ,chf_g19
21:21:42 231  ,chf_g20
21:21:42 232  ,chf_g21
21:21:42 233  ,chf_g22
21:21:42 234  ,chf_g23
21:21:42 235  ,chf_g24
21:21:42 236  ,chf_g25
21:21:42 237  ,chf_g26
21:21:42 238  ,chf_g27
21:21:42 239  ,chf_g28
21:21:42 240  ,chf_g29
21:21:42 241  ,chf_g30
21:21:42 242  ,chf_g31
21:21:42 243  ,chf_g32
21:21:42 244  ,chf_g33
21:21:42 245  ,chf_g34
21:21:42 246  ,chf_g35
21:21:42 247  ,chf_g36
21:21:42 248  ,chf_g37
21:21:42 249  ,chf_g38
21:21:42 250  ,chf_g39
21:21:42 251  ,chf_g40
21:21:42 252  FROM chf_ms14 m
21:21:42 253  WHERE gattn IN('nup','up')
21:21:42 254  AND 1+m.ydate < '&1'||' '||'&2'
21:21:42 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'11:50:00'

View created.

Elapsed: 00:00:00.12
21:21:42 SQL> 
21:21:42 SQL> -- rpt
21:21:42 SQL> 
21:21:42 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:21:42   2  
21:21:42 SQL> SELECT MAX(prdate) FROM bme
21:21:42   2  
21:21:42 SQL> -- Now build model from bme and score sme
21:21:42 SQL> @score1gattn.sql
21:21:42 SQL> -- score1gattn.sql
21:21:42 SQL> 
21:21:42 SQL> -- Does the 1st SVM score
21:21:42 SQL> 
21:21:42 SQL> -- Fill up svmc_apply_prep
21:21:42 SQL> @score_gattn.sql
21:21:42 SQL> --
21:21:42 SQL> -- score_gattn.sql
21:21:42 SQL> --
21:21:42 SQL> 
21:21:42 SQL> -- usage: score_gattn.sql
21:21:42 SQL> 
21:21:42 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:21:42 SQL> 
21:21:42 SQL> DEFINE target	= 'gattn'
21:21:42 SQL> DEFINE model_name = 'forex14'
21:21:42 SQL> DEFINE bldtable	= 'bme'
21:21:42 SQL> DEFINE scoretable = 'sme'
21:21:42 SQL> DEFINE case_id	= 'prdate'
21:21:42 SQL> 
21:21:42 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:21:42 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:21:42 SQL> 
21:21:42 SQL> -- Builds an SVM model using pl/sql.
21:21:42 SQL> 
21:21:42 SQL> -----------------------------------------------------------------------
21:21:42 SQL> --			    BUILD THE MODEL
21:21:42 SQL> -----------------------------------------------------------------------
21:21:42 SQL> 
21:21:42 SQL> -- Cleanup old build data preparation objects for repeat runs
21:21:42 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:21:42 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:21:42 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:21:42 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:21:42 SQL> 
21:21:42 SQL> 
21:21:42 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:21:42 SQL> --
21:21:42 SQL> -- DROP	TABLE svmc_settings ;
21:21:42 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:21:42 SQL> -- DELETE svmc_settings;
21:21:42 SQL> 
21:21:42 SQL> -- The default classification algorithm is Naive Bayes. So override
21:21:42 SQL> -- this choice to SVM using a settings table.
21:21:42 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:21:42 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:21:42 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:21:42 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:21:42 SQL> -- models.
21:21:42 SQL> --
21:21:42 SQL> 
21:21:42 SQL> -- Do this once and then comment it out.
21:21:42 SQL> -- That makes script go faster.
21:21:42 SQL> -- BEGIN
21:21:42 SQL> -- -- Populate settings table
21:21:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:21:42 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:21:42 SQL> --
21:21:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:21:42 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:21:42 SQL> --
21:21:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:21:42 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:21:42 SQL> --   COMMIT;
21:21:42 SQL> -- END;
21:21:42 SQL> -- /
21:21:42 SQL> 
21:21:42 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:21:42 SQL> 
21:21:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:21:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:21:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:21:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:21:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:21:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:21:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:21:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:21:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:21:42 SQL> 
21:21:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:21:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:21:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:21:42 SQL> 
21:21:42 SQL> --------------------------------
21:21:42 SQL> -- PREPARE BUILD (TRAINING) DATA
21:21:42 SQL> --
21:21:42 SQL> 
21:21:42 SQL> -- 1. Missing Value treatment for all Predictors and
21:21:42 SQL> -- 2. Outlier Treatment and
21:21:42 SQL> -- 3. Normalization are performed below.
21:21:42 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:21:42 SQL> --    normalized here.
21:21:42 SQL> 
21:21:42 SQL> BEGIN
21:21:42   2  	-- Perform missing value treatment for all predictors
21:21:42   3  	-- create miss tables
21:21:42   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:21:42   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:21:42   6  
21:21:42   7  	-- populate miss tables
21:21:42   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:21:42   9  	  miss_table_name => 'svmc_miss_num',
21:21:42  10  	  data_table_name => '&bldtable',
21:21:42  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:21:42  12  
21:21:42  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:21:42  14  	  miss_table_name => 'svmc_miss_cat',
21:21:42  15  	  data_table_name => '&bldtable',
21:21:42  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:21:42  17  
21:21:42  18  	-- xform input data to replace missing values
21:21:42  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:21:42  20  	  miss_table_name => 'svmc_miss_num',
21:21:42  21  	  data_table_name => '&bldtable',
21:21:42  22  	  xform_view_name => 'xformed_build_miss_num');
21:21:42  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:21:42  24  	  miss_table_name => 'svmc_miss_cat',
21:21:42  25  	  data_table_name => '&bldtable',
21:21:42  26  	  xform_view_name => 'xformed_build_miss_cat');
21:21:42  27  
21:21:42  28  	-- Perform outlier treatment.
21:21:42  29  	-- create clip table
21:21:42  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:21:42  31  
21:21:42  32  	-- populate clip table
21:21:42  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:21:42  34  	  clip_table_name => 'svmc_clip',
21:21:42  35  	  data_table_name => '&bldtable',
21:21:42  36  	  tail_frac	  => 0.025,
21:21:42  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:21:42  38  
21:21:42  39  	-- xform input data to winsorized data
21:21:42  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:21:42  41  	  clip_table_name => 'svmc_clip',
21:21:42  42  	  data_table_name => '&bldtable',
21:21:42  43  	  xform_view_name => 'svmc_winsor');
21:21:42  44  
21:21:42  45  	-- create normalization table
21:21:42  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:21:42  47  
21:21:42  48  	-- populate normalization table based on winsorized data
21:21:42  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:21:42  50  	  norm_table_name => 'svmc_norm',
21:21:42  51  	  data_table_name => 'svmc_winsor',
21:21:42  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:21:42  53  
21:21:42  54  	-- normalize the original data
21:21:42  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:21:42  56  	  norm_table_name => 'svmc_norm',
21:21:42  57  	  data_table_name => '&bldtable',
21:21:42  58  	  xform_view_name => 'svmc_build_prep');
21:21:42  59  END;
21:21:42  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.00
21:22:00 SQL> 
21:22:00 SQL> ---------------------
21:22:00 SQL> -- CREATE A NEW MODEL
21:22:00 SQL> --
21:22:00 SQL> -- Cleanup old model with the same name for repeat runs
21:22:00 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:22:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:22:00   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.54
21:22:01 SQL> 
21:22:01 SQL> -- Build a new SVM Model
21:22:01 SQL> BEGIN
21:22:01   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:22:01   3  	  model_name	      => '&model_name',
21:22:01   4  	  mining_function     => dbms_data_mining.classification,
21:22:01   5  	  data_table_name     => 'svmc_build_prep',
21:22:01   6  	  case_id_column_name => '&case_id',
21:22:01   7  	  target_column_name  => '&target',
21:22:01   8  	  settings_table_name => 'svmc_settings');
21:22:01   9  END;
21:22:01  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.82
21:22:27 SQL> 
21:22:27 SQL> -----------------------------------------------------------------------
21:22:27 SQL> --			       APPLY/score THE MODEL
21:22:27 SQL> -----------------------------------------------------------------------
21:22:27 SQL> 
21:22:27 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:22:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:22:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:22:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:22:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:22:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:22:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:22:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:22:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:22:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:22:27 SQL> -----------------------
21:22:27 SQL> -- PREPARE SCORING DATA
21:22:27 SQL> --
21:22:27 SQL> -- If the data for model creation has been prepared, then the data
21:22:27 SQL> -- to be scored using the model must be prepared in the same manner
21:22:27 SQL> -- in order to obtain meaningful results.
21:22:27 SQL> --
21:22:27 SQL> -- 1. Missing Value treatment for all Predictors and
21:22:27 SQL> -- 2. Normalization
21:22:27 SQL> -- No outlier treatment will be performed during test and apply. The
21:22:27 SQL> -- normalization step is sufficient, since the normalization parameters
21:22:27 SQL> -- already capture the effects of outlier treatment done with build data.
21:22:27 SQL> --
21:22:27 SQL> BEGIN
21:22:27   2  	-- Xform Test data to replace missing values
21:22:27   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:22:27   4  	  miss_table_name => 'svmc_miss_num',
21:22:27   5  	  data_table_name => '&scoretable',
21:22:27   6  	  xform_view_name => 'xformed_apply_miss_num');
21:22:27   7  
21:22:27   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:22:27   9  	  miss_table_name => 'svmc_miss_cat',
21:22:27  10  	  data_table_name => '&scoretable',
21:22:27  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:22:27  12  
21:22:27  13  	-- Normalize the data to be scored
21:22:27  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:22:27  15  	  norm_table_name => 'svmc_norm',
21:22:27  16  	  data_table_name => '&scoretable',
21:22:27  17  	  xform_view_name => 'svmc_apply_prep');
21:22:27  18  END;
21:22:27  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.10
21:22:28 SQL> 
21:22:28 SQL> -- Use same model_name used in score_gattn.sql
21:22:28 SQL> DEFINE model_name = 'forex14'
21:22:28 SQL> 
21:22:28 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

1 row deleted.

Elapsed: 00:00:00.02
21:22:28 SQL> 
21:22:28 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:22:28   2  SELECT
21:22:28   3  prdate
21:22:28   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:22:28   5  ,sysdate
21:22:28   6  ,SUBSTR(prdate,1,3)pair
21:22:28   7  ,SUBSTR(prdate,4,19)ydate
21:22:28   8  FROM svmc_apply_prep
21:22:28   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:22:28 SQL> @chf_score1day_gattn.sql	2010-12-17 11:45:00
21:22:28 SQL> --
21:22:28 SQL> -- chf_score1day_gattn.sql
21:22:28 SQL> --
21:22:28 SQL> 
21:22:28 SQL> CREATE OR REPLACE VIEW sme AS
21:22:28   2  SELECT
21:22:28   3  'chf'||m.ydate prdate
21:22:28   4  ,NULL gattn
21:22:28   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:22:28   6  ,eur_g00
21:22:28   7  ,eur_g01
21:22:28   8  ,eur_g02
21:22:28   9  ,eur_g03
21:22:28  10  ,eur_g04
21:22:28  11  ,eur_g05
21:22:28  12  ,eur_g06
21:22:28  13  ,eur_g07
21:22:28  14  ,eur_g08
21:22:28  15  ,eur_g09
21:22:28  16  ,eur_g10
21:22:28  17  ,eur_g11
21:22:28  18  ,eur_g12
21:22:28  19  ,eur_g13
21:22:28  20  ,eur_g14
21:22:28  21  ,eur_g15
21:22:28  22  ,eur_g16
21:22:28  23  ,eur_g17
21:22:28  24  ,eur_g18
21:22:28  25  ,eur_g19
21:22:28  26  ,eur_g20
21:22:28  27  ,eur_g21
21:22:28  28  ,eur_g22
21:22:28  29  ,eur_g23
21:22:28  30  ,eur_g24
21:22:28  31  ,eur_g25
21:22:28  32  ,eur_g26
21:22:28  33  ,eur_g27
21:22:28  34  ,eur_g28
21:22:28  35  ,eur_g29
21:22:28  36  ,eur_g30
21:22:28  37  ,eur_g31
21:22:28  38  ,eur_g32
21:22:28  39  ,eur_g33
21:22:28  40  ,eur_g34
21:22:28  41  ,eur_g35
21:22:28  42  ,eur_g36
21:22:28  43  ,eur_g37
21:22:28  44  ,eur_g38
21:22:28  45  ,eur_g39
21:22:28  46  ,eur_g40
21:22:28  47  ,aud_g00
21:22:28  48  ,aud_g01
21:22:28  49  ,aud_g02
21:22:28  50  ,aud_g03
21:22:28  51  ,aud_g04
21:22:28  52  ,aud_g05
21:22:28  53  ,aud_g06
21:22:28  54  ,aud_g07
21:22:28  55  ,aud_g08
21:22:28  56  ,aud_g09
21:22:28  57  ,aud_g10
21:22:28  58  ,aud_g11
21:22:28  59  ,aud_g12
21:22:28  60  ,aud_g13
21:22:28  61  ,aud_g14
21:22:28  62  ,aud_g15
21:22:28  63  ,aud_g16
21:22:28  64  ,aud_g17
21:22:28  65  ,aud_g18
21:22:28  66  ,aud_g19
21:22:28  67  ,aud_g20
21:22:28  68  ,aud_g21
21:22:28  69  ,aud_g22
21:22:28  70  ,aud_g23
21:22:28  71  ,aud_g24
21:22:28  72  ,aud_g25
21:22:28  73  ,aud_g26
21:22:28  74  ,aud_g27
21:22:28  75  ,aud_g28
21:22:28  76  ,aud_g29
21:22:28  77  ,aud_g30
21:22:28  78  ,aud_g31
21:22:28  79  ,aud_g32
21:22:28  80  ,aud_g33
21:22:28  81  ,aud_g34
21:22:28  82  ,aud_g35
21:22:28  83  ,aud_g36
21:22:28  84  ,aud_g37
21:22:28  85  ,aud_g38
21:22:28  86  ,aud_g39
21:22:28  87  ,aud_g40
21:22:28  88  ,gbp_g00
21:22:28  89  ,gbp_g01
21:22:28  90  ,gbp_g02
21:22:28  91  ,gbp_g03
21:22:28  92  ,gbp_g04
21:22:28  93  ,gbp_g05
21:22:28  94  ,gbp_g06
21:22:28  95  ,gbp_g07
21:22:28  96  ,gbp_g08
21:22:28  97  ,gbp_g09
21:22:28  98  ,gbp_g10
21:22:28  99  ,gbp_g11
21:22:28 100  ,gbp_g12
21:22:28 101  ,gbp_g13
21:22:28 102  ,gbp_g14
21:22:28 103  ,gbp_g15
21:22:28 104  ,gbp_g16
21:22:28 105  ,gbp_g17
21:22:28 106  ,gbp_g18
21:22:28 107  ,gbp_g19
21:22:28 108  ,gbp_g20
21:22:28 109  ,gbp_g21
21:22:28 110  ,gbp_g22
21:22:28 111  ,gbp_g23
21:22:28 112  ,gbp_g24
21:22:28 113  ,gbp_g25
21:22:28 114  ,gbp_g26
21:22:28 115  ,gbp_g27
21:22:28 116  ,gbp_g28
21:22:28 117  ,gbp_g29
21:22:28 118  ,gbp_g30
21:22:28 119  ,gbp_g31
21:22:28 120  ,gbp_g32
21:22:28 121  ,gbp_g33
21:22:28 122  ,gbp_g34
21:22:28 123  ,gbp_g35
21:22:28 124  ,gbp_g36
21:22:28 125  ,gbp_g37
21:22:28 126  ,gbp_g38
21:22:28 127  ,gbp_g39
21:22:28 128  ,gbp_g40
21:22:28 129  ,jpy_g00
21:22:28 130  ,jpy_g01
21:22:28 131  ,jpy_g02
21:22:28 132  ,jpy_g03
21:22:28 133  ,jpy_g04
21:22:28 134  ,jpy_g05
21:22:28 135  ,jpy_g06
21:22:28 136  ,jpy_g07
21:22:28 137  ,jpy_g08
21:22:28 138  ,jpy_g09
21:22:28 139  ,jpy_g10
21:22:28 140  ,jpy_g11
21:22:28 141  ,jpy_g12
21:22:28 142  ,jpy_g13
21:22:28 143  ,jpy_g14
21:22:28 144  ,jpy_g15
21:22:28 145  ,jpy_g16
21:22:28 146  ,jpy_g17
21:22:28 147  ,jpy_g18
21:22:28 148  ,jpy_g19
21:22:28 149  ,jpy_g20
21:22:28 150  ,jpy_g21
21:22:28 151  ,jpy_g22
21:22:28 152  ,jpy_g23
21:22:28 153  ,jpy_g24
21:22:28 154  ,jpy_g25
21:22:28 155  ,jpy_g26
21:22:28 156  ,jpy_g27
21:22:28 157  ,jpy_g28
21:22:28 158  ,jpy_g29
21:22:28 159  ,jpy_g30
21:22:28 160  ,jpy_g31
21:22:28 161  ,jpy_g32
21:22:28 162  ,jpy_g33
21:22:28 163  ,jpy_g34
21:22:28 164  ,jpy_g35
21:22:28 165  ,jpy_g36
21:22:28 166  ,jpy_g37
21:22:28 167  ,jpy_g38
21:22:28 168  ,jpy_g39
21:22:28 169  ,jpy_g40
21:22:28 170  ,cad_g00
21:22:28 171  ,cad_g01
21:22:28 172  ,cad_g02
21:22:28 173  ,cad_g03
21:22:28 174  ,cad_g04
21:22:28 175  ,cad_g05
21:22:28 176  ,cad_g06
21:22:28 177  ,cad_g07
21:22:28 178  ,cad_g08
21:22:28 179  ,cad_g09
21:22:28 180  ,cad_g10
21:22:28 181  ,cad_g11
21:22:28 182  ,cad_g12
21:22:28 183  ,cad_g13
21:22:28 184  ,cad_g14
21:22:28 185  ,cad_g15
21:22:28 186  ,cad_g16
21:22:28 187  ,cad_g17
21:22:28 188  ,cad_g18
21:22:28 189  ,cad_g19
21:22:28 190  ,cad_g20
21:22:28 191  ,cad_g21
21:22:28 192  ,cad_g22
21:22:28 193  ,cad_g23
21:22:28 194  ,cad_g24
21:22:28 195  ,cad_g25
21:22:28 196  ,cad_g26
21:22:28 197  ,cad_g27
21:22:28 198  ,cad_g28
21:22:28 199  ,cad_g29
21:22:28 200  ,cad_g30
21:22:28 201  ,cad_g31
21:22:28 202  ,cad_g32
21:22:28 203  ,cad_g33
21:22:28 204  ,cad_g34
21:22:28 205  ,cad_g35
21:22:28 206  ,cad_g36
21:22:28 207  ,cad_g37
21:22:28 208  ,cad_g38
21:22:28 209  ,cad_g39
21:22:28 210  ,cad_g40
21:22:28 211  ,chf_g00
21:22:28 212  ,chf_g01
21:22:28 213  ,chf_g02
21:22:28 214  ,chf_g03
21:22:28 215  ,chf_g04
21:22:28 216  ,chf_g05
21:22:28 217  ,chf_g06
21:22:28 218  ,chf_g07
21:22:28 219  ,chf_g08
21:22:28 220  ,chf_g09
21:22:28 221  ,chf_g10
21:22:28 222  ,chf_g11
21:22:28 223  ,chf_g12
21:22:28 224  ,chf_g13
21:22:28 225  ,chf_g14
21:22:28 226  ,chf_g15
21:22:28 227  ,chf_g16
21:22:28 228  ,chf_g17
21:22:28 229  ,chf_g18
21:22:28 230  ,chf_g19
21:22:28 231  ,chf_g20
21:22:28 232  ,chf_g21
21:22:28 233  ,chf_g22
21:22:28 234  ,chf_g23
21:22:28 235  ,chf_g24
21:22:28 236  ,chf_g25
21:22:28 237  ,chf_g26
21:22:28 238  ,chf_g27
21:22:28 239  ,chf_g28
21:22:28 240  ,chf_g29
21:22:28 241  ,chf_g30
21:22:28 242  ,chf_g31
21:22:28 243  ,chf_g32
21:22:28 244  ,chf_g33
21:22:28 245  ,chf_g34
21:22:28 246  ,chf_g35
21:22:28 247  ,chf_g36
21:22:28 248  ,chf_g37
21:22:28 249  ,chf_g38
21:22:28 250  ,chf_g39
21:22:28 251  ,chf_g40
21:22:28 252  FROM chf_ms14 m
21:22:28 253  WHERE m.ydate = '&1'||' '||'&2'
21:22:28 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'11:45:00'

View created.

Elapsed: 00:00:00.12
21:22:28 SQL> 
21:22:28 SQL> -- rpt
21:22:28 SQL> -- We should see just 1 row:
21:22:28 SQL> 
21:22:28 SQL> SELECT COUNT(prdate) FROM sme
21:22:28   2  
21:22:28 SQL> -- Build the model:
21:22:28 SQL> CREATE OR REPLACE VIEW bme AS
21:22:28   2  SELECT
21:22:28   3  'chf'||m.ydate prdate
21:22:28   4  ,gattn
21:22:28   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:22:28   6  ,eur_g00
21:22:28   7  ,eur_g01
21:22:28   8  ,eur_g02
21:22:28   9  ,eur_g03
21:22:28  10  ,eur_g04
21:22:28  11  ,eur_g05
21:22:28  12  ,eur_g06
21:22:28  13  ,eur_g07
21:22:28  14  ,eur_g08
21:22:28  15  ,eur_g09
21:22:28  16  ,eur_g10
21:22:28  17  ,eur_g11
21:22:28  18  ,eur_g12
21:22:28  19  ,eur_g13
21:22:28  20  ,eur_g14
21:22:28  21  ,eur_g15
21:22:28  22  ,eur_g16
21:22:28  23  ,eur_g17
21:22:28  24  ,eur_g18
21:22:28  25  ,eur_g19
21:22:28  26  ,eur_g20
21:22:28  27  ,eur_g21
21:22:28  28  ,eur_g22
21:22:28  29  ,eur_g23
21:22:28  30  ,eur_g24
21:22:28  31  ,eur_g25
21:22:28  32  ,eur_g26
21:22:28  33  ,eur_g27
21:22:28  34  ,eur_g28
21:22:28  35  ,eur_g29
21:22:28  36  ,eur_g30
21:22:28  37  ,eur_g31
21:22:28  38  ,eur_g32
21:22:28  39  ,eur_g33
21:22:28  40  ,eur_g34
21:22:28  41  ,eur_g35
21:22:28  42  ,eur_g36
21:22:28  43  ,eur_g37
21:22:28  44  ,eur_g38
21:22:28  45  ,eur_g39
21:22:28  46  ,eur_g40
21:22:28  47  ,aud_g00
21:22:28  48  ,aud_g01
21:22:28  49  ,aud_g02
21:22:28  50  ,aud_g03
21:22:28  51  ,aud_g04
21:22:28  52  ,aud_g05
21:22:28  53  ,aud_g06
21:22:28  54  ,aud_g07
21:22:28  55  ,aud_g08
21:22:28  56  ,aud_g09
21:22:28  57  ,aud_g10
21:22:28  58  ,aud_g11
21:22:28  59  ,aud_g12
21:22:28  60  ,aud_g13
21:22:28  61  ,aud_g14
21:22:28  62  ,aud_g15
21:22:28  63  ,aud_g16
21:22:28  64  ,aud_g17
21:22:28  65  ,aud_g18
21:22:28  66  ,aud_g19
21:22:28  67  ,aud_g20
21:22:28  68  ,aud_g21
21:22:28  69  ,aud_g22
21:22:28  70  ,aud_g23
21:22:28  71  ,aud_g24
21:22:28  72  ,aud_g25
21:22:28  73  ,aud_g26
21:22:28  74  ,aud_g27
21:22:28  75  ,aud_g28
21:22:28  76  ,aud_g29
21:22:28  77  ,aud_g30
21:22:28  78  ,aud_g31
21:22:28  79  ,aud_g32
21:22:28  80  ,aud_g33
21:22:28  81  ,aud_g34
21:22:28  82  ,aud_g35
21:22:28  83  ,aud_g36
21:22:28  84  ,aud_g37
21:22:28  85  ,aud_g38
21:22:28  86  ,aud_g39
21:22:28  87  ,aud_g40
21:22:28  88  ,gbp_g00
21:22:28  89  ,gbp_g01
21:22:28  90  ,gbp_g02
21:22:28  91  ,gbp_g03
21:22:28  92  ,gbp_g04
21:22:28  93  ,gbp_g05
21:22:28  94  ,gbp_g06
21:22:28  95  ,gbp_g07
21:22:28  96  ,gbp_g08
21:22:28  97  ,gbp_g09
21:22:28  98  ,gbp_g10
21:22:28  99  ,gbp_g11
21:22:28 100  ,gbp_g12
21:22:28 101  ,gbp_g13
21:22:28 102  ,gbp_g14
21:22:28 103  ,gbp_g15
21:22:28 104  ,gbp_g16
21:22:28 105  ,gbp_g17
21:22:28 106  ,gbp_g18
21:22:28 107  ,gbp_g19
21:22:28 108  ,gbp_g20
21:22:28 109  ,gbp_g21
21:22:28 110  ,gbp_g22
21:22:28 111  ,gbp_g23
21:22:28 112  ,gbp_g24
21:22:28 113  ,gbp_g25
21:22:28 114  ,gbp_g26
21:22:28 115  ,gbp_g27
21:22:28 116  ,gbp_g28
21:22:28 117  ,gbp_g29
21:22:28 118  ,gbp_g30
21:22:28 119  ,gbp_g31
21:22:28 120  ,gbp_g32
21:22:28 121  ,gbp_g33
21:22:28 122  ,gbp_g34
21:22:28 123  ,gbp_g35
21:22:28 124  ,gbp_g36
21:22:28 125  ,gbp_g37
21:22:28 126  ,gbp_g38
21:22:28 127  ,gbp_g39
21:22:28 128  ,gbp_g40
21:22:28 129  ,jpy_g00
21:22:28 130  ,jpy_g01
21:22:28 131  ,jpy_g02
21:22:28 132  ,jpy_g03
21:22:28 133  ,jpy_g04
21:22:28 134  ,jpy_g05
21:22:28 135  ,jpy_g06
21:22:28 136  ,jpy_g07
21:22:28 137  ,jpy_g08
21:22:28 138  ,jpy_g09
21:22:28 139  ,jpy_g10
21:22:28 140  ,jpy_g11
21:22:28 141  ,jpy_g12
21:22:28 142  ,jpy_g13
21:22:28 143  ,jpy_g14
21:22:28 144  ,jpy_g15
21:22:28 145  ,jpy_g16
21:22:28 146  ,jpy_g17
21:22:28 147  ,jpy_g18
21:22:28 148  ,jpy_g19
21:22:28 149  ,jpy_g20
21:22:28 150  ,jpy_g21
21:22:28 151  ,jpy_g22
21:22:28 152  ,jpy_g23
21:22:28 153  ,jpy_g24
21:22:28 154  ,jpy_g25
21:22:28 155  ,jpy_g26
21:22:28 156  ,jpy_g27
21:22:28 157  ,jpy_g28
21:22:28 158  ,jpy_g29
21:22:28 159  ,jpy_g30
21:22:28 160  ,jpy_g31
21:22:28 161  ,jpy_g32
21:22:28 162  ,jpy_g33
21:22:28 163  ,jpy_g34
21:22:28 164  ,jpy_g35
21:22:28 165  ,jpy_g36
21:22:28 166  ,jpy_g37
21:22:28 167  ,jpy_g38
21:22:28 168  ,jpy_g39
21:22:28 169  ,jpy_g40
21:22:28 170  ,cad_g00
21:22:28 171  ,cad_g01
21:22:28 172  ,cad_g02
21:22:28 173  ,cad_g03
21:22:28 174  ,cad_g04
21:22:28 175  ,cad_g05
21:22:28 176  ,cad_g06
21:22:28 177  ,cad_g07
21:22:28 178  ,cad_g08
21:22:28 179  ,cad_g09
21:22:28 180  ,cad_g10
21:22:28 181  ,cad_g11
21:22:28 182  ,cad_g12
21:22:28 183  ,cad_g13
21:22:28 184  ,cad_g14
21:22:28 185  ,cad_g15
21:22:28 186  ,cad_g16
21:22:28 187  ,cad_g17
21:22:28 188  ,cad_g18
21:22:28 189  ,cad_g19
21:22:28 190  ,cad_g20
21:22:28 191  ,cad_g21
21:22:28 192  ,cad_g22
21:22:28 193  ,cad_g23
21:22:28 194  ,cad_g24
21:22:28 195  ,cad_g25
21:22:28 196  ,cad_g26
21:22:28 197  ,cad_g27
21:22:28 198  ,cad_g28
21:22:28 199  ,cad_g29
21:22:28 200  ,cad_g30
21:22:28 201  ,cad_g31
21:22:28 202  ,cad_g32
21:22:28 203  ,cad_g33
21:22:28 204  ,cad_g34
21:22:28 205  ,cad_g35
21:22:28 206  ,cad_g36
21:22:28 207  ,cad_g37
21:22:28 208  ,cad_g38
21:22:28 209  ,cad_g39
21:22:28 210  ,cad_g40
21:22:28 211  ,chf_g00
21:22:28 212  ,chf_g01
21:22:28 213  ,chf_g02
21:22:28 214  ,chf_g03
21:22:28 215  ,chf_g04
21:22:28 216  ,chf_g05
21:22:28 217  ,chf_g06
21:22:28 218  ,chf_g07
21:22:28 219  ,chf_g08
21:22:28 220  ,chf_g09
21:22:28 221  ,chf_g10
21:22:28 222  ,chf_g11
21:22:28 223  ,chf_g12
21:22:28 224  ,chf_g13
21:22:28 225  ,chf_g14
21:22:28 226  ,chf_g15
21:22:28 227  ,chf_g16
21:22:28 228  ,chf_g17
21:22:28 229  ,chf_g18
21:22:28 230  ,chf_g19
21:22:28 231  ,chf_g20
21:22:28 232  ,chf_g21
21:22:28 233  ,chf_g22
21:22:28 234  ,chf_g23
21:22:28 235  ,chf_g24
21:22:28 236  ,chf_g25
21:22:28 237  ,chf_g26
21:22:28 238  ,chf_g27
21:22:28 239  ,chf_g28
21:22:28 240  ,chf_g29
21:22:28 241  ,chf_g30
21:22:28 242  ,chf_g31
21:22:28 243  ,chf_g32
21:22:28 244  ,chf_g33
21:22:28 245  ,chf_g34
21:22:28 246  ,chf_g35
21:22:28 247  ,chf_g36
21:22:28 248  ,chf_g37
21:22:28 249  ,chf_g38
21:22:28 250  ,chf_g39
21:22:28 251  ,chf_g40
21:22:28 252  FROM chf_ms14 m
21:22:28 253  WHERE gattn IN('nup','up')
21:22:28 254  AND 1+m.ydate < '&1'||' '||'&2'
21:22:28 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'11:45:00'

View created.

Elapsed: 00:00:00.12
21:22:28 SQL> 
21:22:28 SQL> -- rpt
21:22:28 SQL> 
21:22:28 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:22:28   2  
21:22:28 SQL> SELECT MAX(prdate) FROM bme
21:22:28   2  
21:22:28 SQL> -- Now build model from bme and score sme
21:22:28 SQL> @score1gattn.sql
21:22:28 SQL> -- score1gattn.sql
21:22:28 SQL> 
21:22:28 SQL> -- Does the 1st SVM score
21:22:28 SQL> 
21:22:28 SQL> -- Fill up svmc_apply_prep
21:22:28 SQL> @score_gattn.sql
21:22:28 SQL> --
21:22:28 SQL> -- score_gattn.sql
21:22:28 SQL> --
21:22:28 SQL> 
21:22:28 SQL> -- usage: score_gattn.sql
21:22:28 SQL> 
21:22:28 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:22:28 SQL> 
21:22:28 SQL> DEFINE target	= 'gattn'
21:22:28 SQL> DEFINE model_name = 'forex14'
21:22:28 SQL> DEFINE bldtable	= 'bme'
21:22:28 SQL> DEFINE scoretable = 'sme'
21:22:28 SQL> DEFINE case_id	= 'prdate'
21:22:28 SQL> 
21:22:28 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:22:28 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:22:28 SQL> 
21:22:28 SQL> -- Builds an SVM model using pl/sql.
21:22:28 SQL> 
21:22:28 SQL> -----------------------------------------------------------------------
21:22:28 SQL> --			    BUILD THE MODEL
21:22:28 SQL> -----------------------------------------------------------------------
21:22:28 SQL> 
21:22:28 SQL> -- Cleanup old build data preparation objects for repeat runs
21:22:28 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:22:28 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:22:28 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:22:28 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:22:28 SQL> 
21:22:28 SQL> 
21:22:28 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:22:28 SQL> --
21:22:28 SQL> -- DROP	TABLE svmc_settings ;
21:22:28 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:22:28 SQL> -- DELETE svmc_settings;
21:22:28 SQL> 
21:22:28 SQL> -- The default classification algorithm is Naive Bayes. So override
21:22:28 SQL> -- this choice to SVM using a settings table.
21:22:28 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:22:28 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:22:28 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:22:28 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:22:28 SQL> -- models.
21:22:28 SQL> --
21:22:28 SQL> 
21:22:28 SQL> -- Do this once and then comment it out.
21:22:28 SQL> -- That makes script go faster.
21:22:28 SQL> -- BEGIN
21:22:28 SQL> -- -- Populate settings table
21:22:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:22:28 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:22:28 SQL> --
21:22:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:22:28 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:22:28 SQL> --
21:22:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:22:28 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:22:28 SQL> --   COMMIT;
21:22:28 SQL> -- END;
21:22:28 SQL> -- /
21:22:28 SQL> 
21:22:28 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:22:28 SQL> 
21:22:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:22:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:22:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:22:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:22:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:22:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:22:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:22:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:22:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:22:29 SQL> 
21:22:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:22:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:22:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:22:29 SQL> 
21:22:29 SQL> --------------------------------
21:22:29 SQL> -- PREPARE BUILD (TRAINING) DATA
21:22:29 SQL> --
21:22:29 SQL> 
21:22:29 SQL> -- 1. Missing Value treatment for all Predictors and
21:22:29 SQL> -- 2. Outlier Treatment and
21:22:29 SQL> -- 3. Normalization are performed below.
21:22:29 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:22:29 SQL> --    normalized here.
21:22:29 SQL> 
21:22:29 SQL> BEGIN
21:22:29   2  	-- Perform missing value treatment for all predictors
21:22:29   3  	-- create miss tables
21:22:29   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:22:29   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:22:29   6  
21:22:29   7  	-- populate miss tables
21:22:29   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:22:29   9  	  miss_table_name => 'svmc_miss_num',
21:22:29  10  	  data_table_name => '&bldtable',
21:22:29  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:22:29  12  
21:22:29  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:22:29  14  	  miss_table_name => 'svmc_miss_cat',
21:22:29  15  	  data_table_name => '&bldtable',
21:22:29  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:22:29  17  
21:22:29  18  	-- xform input data to replace missing values
21:22:29  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:22:29  20  	  miss_table_name => 'svmc_miss_num',
21:22:29  21  	  data_table_name => '&bldtable',
21:22:29  22  	  xform_view_name => 'xformed_build_miss_num');
21:22:29  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:22:29  24  	  miss_table_name => 'svmc_miss_cat',
21:22:29  25  	  data_table_name => '&bldtable',
21:22:29  26  	  xform_view_name => 'xformed_build_miss_cat');
21:22:29  27  
21:22:29  28  	-- Perform outlier treatment.
21:22:29  29  	-- create clip table
21:22:29  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:22:29  31  
21:22:29  32  	-- populate clip table
21:22:29  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:22:29  34  	  clip_table_name => 'svmc_clip',
21:22:29  35  	  data_table_name => '&bldtable',
21:22:29  36  	  tail_frac	  => 0.025,
21:22:29  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:22:29  38  
21:22:29  39  	-- xform input data to winsorized data
21:22:29  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:22:29  41  	  clip_table_name => 'svmc_clip',
21:22:29  42  	  data_table_name => '&bldtable',
21:22:29  43  	  xform_view_name => 'svmc_winsor');
21:22:29  44  
21:22:29  45  	-- create normalization table
21:22:29  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:22:29  47  
21:22:29  48  	-- populate normalization table based on winsorized data
21:22:29  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:22:29  50  	  norm_table_name => 'svmc_norm',
21:22:29  51  	  data_table_name => 'svmc_winsor',
21:22:29  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:22:29  53  
21:22:29  54  	-- normalize the original data
21:22:29  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:22:29  56  	  norm_table_name => 'svmc_norm',
21:22:29  57  	  data_table_name => '&bldtable',
21:22:29  58  	  xform_view_name => 'svmc_build_prep');
21:22:29  59  END;
21:22:29  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.00
21:22:47 SQL> 
21:22:47 SQL> ---------------------
21:22:47 SQL> -- CREATE A NEW MODEL
21:22:47 SQL> --
21:22:47 SQL> -- Cleanup old model with the same name for repeat runs
21:22:47 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:22:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:22:47   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.08
21:22:48 SQL> 
21:22:48 SQL> -- Build a new SVM Model
21:22:48 SQL> BEGIN
21:22:48   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:22:48   3  	  model_name	      => '&model_name',
21:22:48   4  	  mining_function     => dbms_data_mining.classification,
21:22:48   5  	  data_table_name     => 'svmc_build_prep',
21:22:48   6  	  case_id_column_name => '&case_id',
21:22:48   7  	  target_column_name  => '&target',
21:22:48   8  	  settings_table_name => 'svmc_settings');
21:22:48   9  END;
21:22:48  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.83
21:23:15 SQL> 
21:23:15 SQL> -----------------------------------------------------------------------
21:23:15 SQL> --			       APPLY/score THE MODEL
21:23:15 SQL> -----------------------------------------------------------------------
21:23:15 SQL> 
21:23:15 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:23:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:23:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:23:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:23:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:23:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:23:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:23:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:23:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:23:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:23:15 SQL> -----------------------
21:23:15 SQL> -- PREPARE SCORING DATA
21:23:15 SQL> --
21:23:15 SQL> -- If the data for model creation has been prepared, then the data
21:23:15 SQL> -- to be scored using the model must be prepared in the same manner
21:23:15 SQL> -- in order to obtain meaningful results.
21:23:15 SQL> --
21:23:15 SQL> -- 1. Missing Value treatment for all Predictors and
21:23:15 SQL> -- 2. Normalization
21:23:15 SQL> -- No outlier treatment will be performed during test and apply. The
21:23:15 SQL> -- normalization step is sufficient, since the normalization parameters
21:23:15 SQL> -- already capture the effects of outlier treatment done with build data.
21:23:15 SQL> --
21:23:15 SQL> BEGIN
21:23:15   2  	-- Xform Test data to replace missing values
21:23:15   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:23:15   4  	  miss_table_name => 'svmc_miss_num',
21:23:15   5  	  data_table_name => '&scoretable',
21:23:15   6  	  xform_view_name => 'xformed_apply_miss_num');
21:23:15   7  
21:23:15   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:23:15   9  	  miss_table_name => 'svmc_miss_cat',
21:23:15  10  	  data_table_name => '&scoretable',
21:23:15  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:23:15  12  
21:23:15  13  	-- Normalize the data to be scored
21:23:15  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:23:15  15  	  norm_table_name => 'svmc_norm',
21:23:15  16  	  data_table_name => '&scoretable',
21:23:15  17  	  xform_view_name => 'svmc_apply_prep');
21:23:15  18  END;
21:23:15  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.10
21:23:16 SQL> 
21:23:16 SQL> -- Use same model_name used in score_gattn.sql
21:23:16 SQL> DEFINE model_name = 'forex14'
21:23:16 SQL> 
21:23:16 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:23:16 SQL> 
21:23:16 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:23:16   2  SELECT
21:23:16   3  prdate
21:23:16   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:23:16   5  ,sysdate
21:23:16   6  ,SUBSTR(prdate,1,3)pair
21:23:16   7  ,SUBSTR(prdate,4,19)ydate
21:23:16   8  FROM svmc_apply_prep
21:23:16   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
21:23:16 SQL> @chf_score1day_gattn.sql	2010-12-17 11:40:00
21:23:16 SQL> --
21:23:16 SQL> -- chf_score1day_gattn.sql
21:23:16 SQL> --
21:23:16 SQL> 
21:23:16 SQL> CREATE OR REPLACE VIEW sme AS
21:23:16   2  SELECT
21:23:16   3  'chf'||m.ydate prdate
21:23:16   4  ,NULL gattn
21:23:16   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:23:16   6  ,eur_g00
21:23:16   7  ,eur_g01
21:23:16   8  ,eur_g02
21:23:16   9  ,eur_g03
21:23:16  10  ,eur_g04
21:23:16  11  ,eur_g05
21:23:16  12  ,eur_g06
21:23:16  13  ,eur_g07
21:23:16  14  ,eur_g08
21:23:16  15  ,eur_g09
21:23:16  16  ,eur_g10
21:23:16  17  ,eur_g11
21:23:16  18  ,eur_g12
21:23:16  19  ,eur_g13
21:23:16  20  ,eur_g14
21:23:16  21  ,eur_g15
21:23:16  22  ,eur_g16
21:23:16  23  ,eur_g17
21:23:16  24  ,eur_g18
21:23:16  25  ,eur_g19
21:23:16  26  ,eur_g20
21:23:16  27  ,eur_g21
21:23:16  28  ,eur_g22
21:23:16  29  ,eur_g23
21:23:16  30  ,eur_g24
21:23:16  31  ,eur_g25
21:23:16  32  ,eur_g26
21:23:16  33  ,eur_g27
21:23:16  34  ,eur_g28
21:23:16  35  ,eur_g29
21:23:16  36  ,eur_g30
21:23:16  37  ,eur_g31
21:23:16  38  ,eur_g32
21:23:16  39  ,eur_g33
21:23:16  40  ,eur_g34
21:23:16  41  ,eur_g35
21:23:16  42  ,eur_g36
21:23:16  43  ,eur_g37
21:23:16  44  ,eur_g38
21:23:16  45  ,eur_g39
21:23:16  46  ,eur_g40
21:23:16  47  ,aud_g00
21:23:16  48  ,aud_g01
21:23:16  49  ,aud_g02
21:23:16  50  ,aud_g03
21:23:16  51  ,aud_g04
21:23:16  52  ,aud_g05
21:23:16  53  ,aud_g06
21:23:16  54  ,aud_g07
21:23:16  55  ,aud_g08
21:23:16  56  ,aud_g09
21:23:16  57  ,aud_g10
21:23:16  58  ,aud_g11
21:23:16  59  ,aud_g12
21:23:16  60  ,aud_g13
21:23:16  61  ,aud_g14
21:23:16  62  ,aud_g15
21:23:16  63  ,aud_g16
21:23:16  64  ,aud_g17
21:23:16  65  ,aud_g18
21:23:16  66  ,aud_g19
21:23:16  67  ,aud_g20
21:23:16  68  ,aud_g21
21:23:16  69  ,aud_g22
21:23:16  70  ,aud_g23
21:23:16  71  ,aud_g24
21:23:16  72  ,aud_g25
21:23:16  73  ,aud_g26
21:23:16  74  ,aud_g27
21:23:16  75  ,aud_g28
21:23:16  76  ,aud_g29
21:23:16  77  ,aud_g30
21:23:16  78  ,aud_g31
21:23:16  79  ,aud_g32
21:23:16  80  ,aud_g33
21:23:16  81  ,aud_g34
21:23:16  82  ,aud_g35
21:23:16  83  ,aud_g36
21:23:16  84  ,aud_g37
21:23:16  85  ,aud_g38
21:23:16  86  ,aud_g39
21:23:16  87  ,aud_g40
21:23:16  88  ,gbp_g00
21:23:16  89  ,gbp_g01
21:23:16  90  ,gbp_g02
21:23:16  91  ,gbp_g03
21:23:16  92  ,gbp_g04
21:23:16  93  ,gbp_g05
21:23:16  94  ,gbp_g06
21:23:16  95  ,gbp_g07
21:23:16  96  ,gbp_g08
21:23:16  97  ,gbp_g09
21:23:16  98  ,gbp_g10
21:23:16  99  ,gbp_g11
21:23:16 100  ,gbp_g12
21:23:16 101  ,gbp_g13
21:23:16 102  ,gbp_g14
21:23:16 103  ,gbp_g15
21:23:16 104  ,gbp_g16
21:23:16 105  ,gbp_g17
21:23:16 106  ,gbp_g18
21:23:16 107  ,gbp_g19
21:23:16 108  ,gbp_g20
21:23:16 109  ,gbp_g21
21:23:16 110  ,gbp_g22
21:23:16 111  ,gbp_g23
21:23:16 112  ,gbp_g24
21:23:16 113  ,gbp_g25
21:23:16 114  ,gbp_g26
21:23:16 115  ,gbp_g27
21:23:16 116  ,gbp_g28
21:23:16 117  ,gbp_g29
21:23:16 118  ,gbp_g30
21:23:16 119  ,gbp_g31
21:23:16 120  ,gbp_g32
21:23:16 121  ,gbp_g33
21:23:16 122  ,gbp_g34
21:23:16 123  ,gbp_g35
21:23:16 124  ,gbp_g36
21:23:16 125  ,gbp_g37
21:23:16 126  ,gbp_g38
21:23:16 127  ,gbp_g39
21:23:16 128  ,gbp_g40
21:23:16 129  ,jpy_g00
21:23:16 130  ,jpy_g01
21:23:16 131  ,jpy_g02
21:23:16 132  ,jpy_g03
21:23:16 133  ,jpy_g04
21:23:16 134  ,jpy_g05
21:23:16 135  ,jpy_g06
21:23:16 136  ,jpy_g07
21:23:16 137  ,jpy_g08
21:23:16 138  ,jpy_g09
21:23:16 139  ,jpy_g10
21:23:16 140  ,jpy_g11
21:23:16 141  ,jpy_g12
21:23:16 142  ,jpy_g13
21:23:16 143  ,jpy_g14
21:23:16 144  ,jpy_g15
21:23:16 145  ,jpy_g16
21:23:16 146  ,jpy_g17
21:23:16 147  ,jpy_g18
21:23:16 148  ,jpy_g19
21:23:16 149  ,jpy_g20
21:23:16 150  ,jpy_g21
21:23:16 151  ,jpy_g22
21:23:16 152  ,jpy_g23
21:23:16 153  ,jpy_g24
21:23:16 154  ,jpy_g25
21:23:16 155  ,jpy_g26
21:23:16 156  ,jpy_g27
21:23:16 157  ,jpy_g28
21:23:16 158  ,jpy_g29
21:23:16 159  ,jpy_g30
21:23:16 160  ,jpy_g31
21:23:16 161  ,jpy_g32
21:23:16 162  ,jpy_g33
21:23:16 163  ,jpy_g34
21:23:16 164  ,jpy_g35
21:23:16 165  ,jpy_g36
21:23:16 166  ,jpy_g37
21:23:16 167  ,jpy_g38
21:23:16 168  ,jpy_g39
21:23:16 169  ,jpy_g40
21:23:16 170  ,cad_g00
21:23:16 171  ,cad_g01
21:23:16 172  ,cad_g02
21:23:16 173  ,cad_g03
21:23:16 174  ,cad_g04
21:23:16 175  ,cad_g05
21:23:16 176  ,cad_g06
21:23:16 177  ,cad_g07
21:23:16 178  ,cad_g08
21:23:16 179  ,cad_g09
21:23:16 180  ,cad_g10
21:23:16 181  ,cad_g11
21:23:16 182  ,cad_g12
21:23:16 183  ,cad_g13
21:23:16 184  ,cad_g14
21:23:16 185  ,cad_g15
21:23:16 186  ,cad_g16
21:23:16 187  ,cad_g17
21:23:16 188  ,cad_g18
21:23:16 189  ,cad_g19
21:23:16 190  ,cad_g20
21:23:16 191  ,cad_g21
21:23:16 192  ,cad_g22
21:23:16 193  ,cad_g23
21:23:16 194  ,cad_g24
21:23:16 195  ,cad_g25
21:23:16 196  ,cad_g26
21:23:16 197  ,cad_g27
21:23:16 198  ,cad_g28
21:23:16 199  ,cad_g29
21:23:16 200  ,cad_g30
21:23:16 201  ,cad_g31
21:23:16 202  ,cad_g32
21:23:16 203  ,cad_g33
21:23:16 204  ,cad_g34
21:23:16 205  ,cad_g35
21:23:16 206  ,cad_g36
21:23:16 207  ,cad_g37
21:23:16 208  ,cad_g38
21:23:16 209  ,cad_g39
21:23:16 210  ,cad_g40
21:23:16 211  ,chf_g00
21:23:16 212  ,chf_g01
21:23:16 213  ,chf_g02
21:23:16 214  ,chf_g03
21:23:16 215  ,chf_g04
21:23:16 216  ,chf_g05
21:23:16 217  ,chf_g06
21:23:16 218  ,chf_g07
21:23:16 219  ,chf_g08
21:23:16 220  ,chf_g09
21:23:16 221  ,chf_g10
21:23:16 222  ,chf_g11
21:23:16 223  ,chf_g12
21:23:16 224  ,chf_g13
21:23:16 225  ,chf_g14
21:23:16 226  ,chf_g15
21:23:16 227  ,chf_g16
21:23:16 228  ,chf_g17
21:23:16 229  ,chf_g18
21:23:16 230  ,chf_g19
21:23:16 231  ,chf_g20
21:23:16 232  ,chf_g21
21:23:16 233  ,chf_g22
21:23:16 234  ,chf_g23
21:23:16 235  ,chf_g24
21:23:16 236  ,chf_g25
21:23:16 237  ,chf_g26
21:23:16 238  ,chf_g27
21:23:16 239  ,chf_g28
21:23:16 240  ,chf_g29
21:23:16 241  ,chf_g30
21:23:16 242  ,chf_g31
21:23:16 243  ,chf_g32
21:23:16 244  ,chf_g33
21:23:16 245  ,chf_g34
21:23:16 246  ,chf_g35
21:23:16 247  ,chf_g36
21:23:16 248  ,chf_g37
21:23:16 249  ,chf_g38
21:23:16 250  ,chf_g39
21:23:16 251  ,chf_g40
21:23:16 252  FROM chf_ms14 m
21:23:16 253  WHERE m.ydate = '&1'||' '||'&2'
21:23:16 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'11:40:00'

View created.

Elapsed: 00:00:00.11
21:23:16 SQL> 
21:23:16 SQL> -- rpt
21:23:16 SQL> -- We should see just 1 row:
21:23:16 SQL> 
21:23:16 SQL> SELECT COUNT(prdate) FROM sme
21:23:16   2  
21:23:16 SQL> -- Build the model:
21:23:16 SQL> CREATE OR REPLACE VIEW bme AS
21:23:16   2  SELECT
21:23:16   3  'chf'||m.ydate prdate
21:23:16   4  ,gattn
21:23:16   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:23:16   6  ,eur_g00
21:23:16   7  ,eur_g01
21:23:16   8  ,eur_g02
21:23:16   9  ,eur_g03
21:23:16  10  ,eur_g04
21:23:16  11  ,eur_g05
21:23:16  12  ,eur_g06
21:23:16  13  ,eur_g07
21:23:16  14  ,eur_g08
21:23:16  15  ,eur_g09
21:23:16  16  ,eur_g10
21:23:16  17  ,eur_g11
21:23:16  18  ,eur_g12
21:23:16  19  ,eur_g13
21:23:16  20  ,eur_g14
21:23:16  21  ,eur_g15
21:23:16  22  ,eur_g16
21:23:16  23  ,eur_g17
21:23:16  24  ,eur_g18
21:23:16  25  ,eur_g19
21:23:16  26  ,eur_g20
21:23:16  27  ,eur_g21
21:23:16  28  ,eur_g22
21:23:16  29  ,eur_g23
21:23:16  30  ,eur_g24
21:23:16  31  ,eur_g25
21:23:16  32  ,eur_g26
21:23:16  33  ,eur_g27
21:23:16  34  ,eur_g28
21:23:16  35  ,eur_g29
21:23:16  36  ,eur_g30
21:23:16  37  ,eur_g31
21:23:16  38  ,eur_g32
21:23:16  39  ,eur_g33
21:23:16  40  ,eur_g34
21:23:16  41  ,eur_g35
21:23:16  42  ,eur_g36
21:23:16  43  ,eur_g37
21:23:16  44  ,eur_g38
21:23:16  45  ,eur_g39
21:23:16  46  ,eur_g40
21:23:16  47  ,aud_g00
21:23:16  48  ,aud_g01
21:23:16  49  ,aud_g02
21:23:16  50  ,aud_g03
21:23:16  51  ,aud_g04
21:23:16  52  ,aud_g05
21:23:16  53  ,aud_g06
21:23:16  54  ,aud_g07
21:23:16  55  ,aud_g08
21:23:16  56  ,aud_g09
21:23:16  57  ,aud_g10
21:23:16  58  ,aud_g11
21:23:16  59  ,aud_g12
21:23:16  60  ,aud_g13
21:23:16  61  ,aud_g14
21:23:16  62  ,aud_g15
21:23:16  63  ,aud_g16
21:23:16  64  ,aud_g17
21:23:16  65  ,aud_g18
21:23:16  66  ,aud_g19
21:23:16  67  ,aud_g20
21:23:16  68  ,aud_g21
21:23:16  69  ,aud_g22
21:23:16  70  ,aud_g23
21:23:16  71  ,aud_g24
21:23:16  72  ,aud_g25
21:23:16  73  ,aud_g26
21:23:16  74  ,aud_g27
21:23:16  75  ,aud_g28
21:23:16  76  ,aud_g29
21:23:16  77  ,aud_g30
21:23:16  78  ,aud_g31
21:23:16  79  ,aud_g32
21:23:16  80  ,aud_g33
21:23:16  81  ,aud_g34
21:23:16  82  ,aud_g35
21:23:16  83  ,aud_g36
21:23:16  84  ,aud_g37
21:23:16  85  ,aud_g38
21:23:16  86  ,aud_g39
21:23:16  87  ,aud_g40
21:23:16  88  ,gbp_g00
21:23:16  89  ,gbp_g01
21:23:16  90  ,gbp_g02
21:23:16  91  ,gbp_g03
21:23:16  92  ,gbp_g04
21:23:16  93  ,gbp_g05
21:23:16  94  ,gbp_g06
21:23:16  95  ,gbp_g07
21:23:16  96  ,gbp_g08
21:23:16  97  ,gbp_g09
21:23:16  98  ,gbp_g10
21:23:16  99  ,gbp_g11
21:23:16 100  ,gbp_g12
21:23:16 101  ,gbp_g13
21:23:16 102  ,gbp_g14
21:23:16 103  ,gbp_g15
21:23:16 104  ,gbp_g16
21:23:16 105  ,gbp_g17
21:23:16 106  ,gbp_g18
21:23:16 107  ,gbp_g19
21:23:16 108  ,gbp_g20
21:23:16 109  ,gbp_g21
21:23:16 110  ,gbp_g22
21:23:16 111  ,gbp_g23
21:23:16 112  ,gbp_g24
21:23:16 113  ,gbp_g25
21:23:16 114  ,gbp_g26
21:23:16 115  ,gbp_g27
21:23:16 116  ,gbp_g28
21:23:16 117  ,gbp_g29
21:23:16 118  ,gbp_g30
21:23:16 119  ,gbp_g31
21:23:16 120  ,gbp_g32
21:23:16 121  ,gbp_g33
21:23:16 122  ,gbp_g34
21:23:16 123  ,gbp_g35
21:23:16 124  ,gbp_g36
21:23:16 125  ,gbp_g37
21:23:16 126  ,gbp_g38
21:23:16 127  ,gbp_g39
21:23:16 128  ,gbp_g40
21:23:16 129  ,jpy_g00
21:23:16 130  ,jpy_g01
21:23:16 131  ,jpy_g02
21:23:16 132  ,jpy_g03
21:23:16 133  ,jpy_g04
21:23:16 134  ,jpy_g05
21:23:16 135  ,jpy_g06
21:23:16 136  ,jpy_g07
21:23:16 137  ,jpy_g08
21:23:16 138  ,jpy_g09
21:23:16 139  ,jpy_g10
21:23:16 140  ,jpy_g11
21:23:16 141  ,jpy_g12
21:23:16 142  ,jpy_g13
21:23:16 143  ,jpy_g14
21:23:16 144  ,jpy_g15
21:23:16 145  ,jpy_g16
21:23:16 146  ,jpy_g17
21:23:16 147  ,jpy_g18
21:23:16 148  ,jpy_g19
21:23:16 149  ,jpy_g20
21:23:16 150  ,jpy_g21
21:23:16 151  ,jpy_g22
21:23:16 152  ,jpy_g23
21:23:16 153  ,jpy_g24
21:23:16 154  ,jpy_g25
21:23:16 155  ,jpy_g26
21:23:16 156  ,jpy_g27
21:23:16 157  ,jpy_g28
21:23:16 158  ,jpy_g29
21:23:16 159  ,jpy_g30
21:23:16 160  ,jpy_g31
21:23:16 161  ,jpy_g32
21:23:16 162  ,jpy_g33
21:23:16 163  ,jpy_g34
21:23:16 164  ,jpy_g35
21:23:16 165  ,jpy_g36
21:23:16 166  ,jpy_g37
21:23:16 167  ,jpy_g38
21:23:16 168  ,jpy_g39
21:23:16 169  ,jpy_g40
21:23:16 170  ,cad_g00
21:23:16 171  ,cad_g01
21:23:16 172  ,cad_g02
21:23:16 173  ,cad_g03
21:23:16 174  ,cad_g04
21:23:16 175  ,cad_g05
21:23:16 176  ,cad_g06
21:23:16 177  ,cad_g07
21:23:16 178  ,cad_g08
21:23:16 179  ,cad_g09
21:23:16 180  ,cad_g10
21:23:16 181  ,cad_g11
21:23:16 182  ,cad_g12
21:23:16 183  ,cad_g13
21:23:16 184  ,cad_g14
21:23:16 185  ,cad_g15
21:23:16 186  ,cad_g16
21:23:16 187  ,cad_g17
21:23:16 188  ,cad_g18
21:23:16 189  ,cad_g19
21:23:16 190  ,cad_g20
21:23:16 191  ,cad_g21
21:23:16 192  ,cad_g22
21:23:16 193  ,cad_g23
21:23:16 194  ,cad_g24
21:23:16 195  ,cad_g25
21:23:16 196  ,cad_g26
21:23:16 197  ,cad_g27
21:23:16 198  ,cad_g28
21:23:16 199  ,cad_g29
21:23:16 200  ,cad_g30
21:23:16 201  ,cad_g31
21:23:16 202  ,cad_g32
21:23:16 203  ,cad_g33
21:23:16 204  ,cad_g34
21:23:16 205  ,cad_g35
21:23:16 206  ,cad_g36
21:23:16 207  ,cad_g37
21:23:16 208  ,cad_g38
21:23:16 209  ,cad_g39
21:23:16 210  ,cad_g40
21:23:16 211  ,chf_g00
21:23:16 212  ,chf_g01
21:23:16 213  ,chf_g02
21:23:16 214  ,chf_g03
21:23:16 215  ,chf_g04
21:23:16 216  ,chf_g05
21:23:16 217  ,chf_g06
21:23:16 218  ,chf_g07
21:23:16 219  ,chf_g08
21:23:16 220  ,chf_g09
21:23:16 221  ,chf_g10
21:23:16 222  ,chf_g11
21:23:16 223  ,chf_g12
21:23:16 224  ,chf_g13
21:23:16 225  ,chf_g14
21:23:16 226  ,chf_g15
21:23:16 227  ,chf_g16
21:23:16 228  ,chf_g17
21:23:16 229  ,chf_g18
21:23:16 230  ,chf_g19
21:23:16 231  ,chf_g20
21:23:16 232  ,chf_g21
21:23:16 233  ,chf_g22
21:23:16 234  ,chf_g23
21:23:16 235  ,chf_g24
21:23:16 236  ,chf_g25
21:23:16 237  ,chf_g26
21:23:16 238  ,chf_g27
21:23:16 239  ,chf_g28
21:23:16 240  ,chf_g29
21:23:16 241  ,chf_g30
21:23:16 242  ,chf_g31
21:23:16 243  ,chf_g32
21:23:16 244  ,chf_g33
21:23:16 245  ,chf_g34
21:23:16 246  ,chf_g35
21:23:16 247  ,chf_g36
21:23:16 248  ,chf_g37
21:23:16 249  ,chf_g38
21:23:16 250  ,chf_g39
21:23:16 251  ,chf_g40
21:23:16 252  FROM chf_ms14 m
21:23:16 253  WHERE gattn IN('nup','up')
21:23:16 254  AND 1+m.ydate < '&1'||' '||'&2'
21:23:16 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'11:40:00'

View created.

Elapsed: 00:00:00.12
21:23:16 SQL> 
21:23:16 SQL> -- rpt
21:23:16 SQL> 
21:23:16 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:23:16   2  
21:23:16 SQL> SELECT MAX(prdate) FROM bme
21:23:16   2  
21:23:16 SQL> -- Now build model from bme and score sme
21:23:16 SQL> @score1gattn.sql
21:23:16 SQL> -- score1gattn.sql
21:23:16 SQL> 
21:23:16 SQL> -- Does the 1st SVM score
21:23:16 SQL> 
21:23:16 SQL> -- Fill up svmc_apply_prep
21:23:16 SQL> @score_gattn.sql
21:23:16 SQL> --
21:23:16 SQL> -- score_gattn.sql
21:23:16 SQL> --
21:23:16 SQL> 
21:23:16 SQL> -- usage: score_gattn.sql
21:23:16 SQL> 
21:23:16 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:23:16 SQL> 
21:23:16 SQL> DEFINE target	= 'gattn'
21:23:16 SQL> DEFINE model_name = 'forex14'
21:23:16 SQL> DEFINE bldtable	= 'bme'
21:23:16 SQL> DEFINE scoretable = 'sme'
21:23:16 SQL> DEFINE case_id	= 'prdate'
21:23:16 SQL> 
21:23:16 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:23:16 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:23:16 SQL> 
21:23:16 SQL> -- Builds an SVM model using pl/sql.
21:23:16 SQL> 
21:23:16 SQL> -----------------------------------------------------------------------
21:23:16 SQL> --			    BUILD THE MODEL
21:23:16 SQL> -----------------------------------------------------------------------
21:23:16 SQL> 
21:23:16 SQL> -- Cleanup old build data preparation objects for repeat runs
21:23:16 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:23:16 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:23:16 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:23:16 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:23:16 SQL> 
21:23:16 SQL> 
21:23:16 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:23:16 SQL> --
21:23:16 SQL> -- DROP	TABLE svmc_settings ;
21:23:16 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:23:16 SQL> -- DELETE svmc_settings;
21:23:16 SQL> 
21:23:16 SQL> -- The default classification algorithm is Naive Bayes. So override
21:23:16 SQL> -- this choice to SVM using a settings table.
21:23:16 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:23:16 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:23:16 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:23:16 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:23:16 SQL> -- models.
21:23:16 SQL> --
21:23:16 SQL> 
21:23:16 SQL> -- Do this once and then comment it out.
21:23:16 SQL> -- That makes script go faster.
21:23:16 SQL> -- BEGIN
21:23:16 SQL> -- -- Populate settings table
21:23:16 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:23:16 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:23:16 SQL> --
21:23:16 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:23:16 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:23:16 SQL> --
21:23:16 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:23:16 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:23:16 SQL> --   COMMIT;
21:23:16 SQL> -- END;
21:23:16 SQL> -- /
21:23:16 SQL> 
21:23:16 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:23:16 SQL> 
21:23:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:23:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:23:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
21:23:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:23:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:23:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
21:23:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:23:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:23:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:23:17 SQL> 
21:23:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:23:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:23:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:23:17 SQL> 
21:23:17 SQL> --------------------------------
21:23:17 SQL> -- PREPARE BUILD (TRAINING) DATA
21:23:17 SQL> --
21:23:17 SQL> 
21:23:17 SQL> -- 1. Missing Value treatment for all Predictors and
21:23:17 SQL> -- 2. Outlier Treatment and
21:23:17 SQL> -- 3. Normalization are performed below.
21:23:17 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:23:17 SQL> --    normalized here.
21:23:17 SQL> 
21:23:17 SQL> BEGIN
21:23:17   2  	-- Perform missing value treatment for all predictors
21:23:17   3  	-- create miss tables
21:23:17   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:23:17   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:23:17   6  
21:23:17   7  	-- populate miss tables
21:23:17   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:23:17   9  	  miss_table_name => 'svmc_miss_num',
21:23:17  10  	  data_table_name => '&bldtable',
21:23:17  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:23:17  12  
21:23:17  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:23:17  14  	  miss_table_name => 'svmc_miss_cat',
21:23:17  15  	  data_table_name => '&bldtable',
21:23:17  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:23:17  17  
21:23:17  18  	-- xform input data to replace missing values
21:23:17  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:23:17  20  	  miss_table_name => 'svmc_miss_num',
21:23:17  21  	  data_table_name => '&bldtable',
21:23:17  22  	  xform_view_name => 'xformed_build_miss_num');
21:23:17  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:23:17  24  	  miss_table_name => 'svmc_miss_cat',
21:23:17  25  	  data_table_name => '&bldtable',
21:23:17  26  	  xform_view_name => 'xformed_build_miss_cat');
21:23:17  27  
21:23:17  28  	-- Perform outlier treatment.
21:23:17  29  	-- create clip table
21:23:17  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:23:17  31  
21:23:17  32  	-- populate clip table
21:23:17  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:23:17  34  	  clip_table_name => 'svmc_clip',
21:23:17  35  	  data_table_name => '&bldtable',
21:23:17  36  	  tail_frac	  => 0.025,
21:23:17  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:23:17  38  
21:23:17  39  	-- xform input data to winsorized data
21:23:17  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:23:17  41  	  clip_table_name => 'svmc_clip',
21:23:17  42  	  data_table_name => '&bldtable',
21:23:17  43  	  xform_view_name => 'svmc_winsor');
21:23:17  44  
21:23:17  45  	-- create normalization table
21:23:17  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:23:17  47  
21:23:17  48  	-- populate normalization table based on winsorized data
21:23:17  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:23:17  50  	  norm_table_name => 'svmc_norm',
21:23:17  51  	  data_table_name => 'svmc_winsor',
21:23:17  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:23:17  53  
21:23:17  54  	-- normalize the original data
21:23:17  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:23:17  56  	  norm_table_name => 'svmc_norm',
21:23:17  57  	  data_table_name => '&bldtable',
21:23:17  58  	  xform_view_name => 'svmc_build_prep');
21:23:17  59  END;
21:23:17  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.81
21:23:34 SQL> 
21:23:34 SQL> ---------------------
21:23:34 SQL> -- CREATE A NEW MODEL
21:23:34 SQL> --
21:23:34 SQL> -- Cleanup old model with the same name for repeat runs
21:23:34 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:23:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:23:34   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.09
21:23:35 SQL> 
21:23:35 SQL> -- Build a new SVM Model
21:23:35 SQL> BEGIN
21:23:35   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:23:35   3  	  model_name	      => '&model_name',
21:23:35   4  	  mining_function     => dbms_data_mining.classification,
21:23:35   5  	  data_table_name     => 'svmc_build_prep',
21:23:35   6  	  case_id_column_name => '&case_id',
21:23:35   7  	  target_column_name  => '&target',
21:23:35   8  	  settings_table_name => 'svmc_settings');
21:23:35   9  END;
21:23:35  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.49
21:24:01 SQL> 
21:24:01 SQL> -----------------------------------------------------------------------
21:24:01 SQL> --			       APPLY/score THE MODEL
21:24:01 SQL> -----------------------------------------------------------------------
21:24:01 SQL> 
21:24:01 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:24:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:24:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:24:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
21:24:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:24:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:24:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:24:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:24:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:24:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:24:01 SQL> -----------------------
21:24:01 SQL> -- PREPARE SCORING DATA
21:24:01 SQL> --
21:24:01 SQL> -- If the data for model creation has been prepared, then the data
21:24:01 SQL> -- to be scored using the model must be prepared in the same manner
21:24:01 SQL> -- in order to obtain meaningful results.
21:24:01 SQL> --
21:24:01 SQL> -- 1. Missing Value treatment for all Predictors and
21:24:01 SQL> -- 2. Normalization
21:24:01 SQL> -- No outlier treatment will be performed during test and apply. The
21:24:01 SQL> -- normalization step is sufficient, since the normalization parameters
21:24:01 SQL> -- already capture the effects of outlier treatment done with build data.
21:24:01 SQL> --
21:24:01 SQL> BEGIN
21:24:01   2  	-- Xform Test data to replace missing values
21:24:01   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:24:01   4  	  miss_table_name => 'svmc_miss_num',
21:24:01   5  	  data_table_name => '&scoretable',
21:24:01   6  	  xform_view_name => 'xformed_apply_miss_num');
21:24:01   7  
21:24:01   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:24:01   9  	  miss_table_name => 'svmc_miss_cat',
21:24:01  10  	  data_table_name => '&scoretable',
21:24:01  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:24:01  12  
21:24:01  13  	-- Normalize the data to be scored
21:24:01  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:24:01  15  	  norm_table_name => 'svmc_norm',
21:24:01  16  	  data_table_name => '&scoretable',
21:24:01  17  	  xform_view_name => 'svmc_apply_prep');
21:24:01  18  END;
21:24:01  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.13
21:24:02 SQL> 
21:24:02 SQL> -- Use same model_name used in score_gattn.sql
21:24:02 SQL> DEFINE model_name = 'forex14'
21:24:02 SQL> 
21:24:02 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.01
21:24:02 SQL> 
21:24:02 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:24:02   2  SELECT
21:24:02   3  prdate
21:24:02   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:24:02   5  ,sysdate
21:24:02   6  ,SUBSTR(prdate,1,3)pair
21:24:02   7  ,SUBSTR(prdate,4,19)ydate
21:24:02   8  FROM svmc_apply_prep
21:24:02   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:24:02 SQL> @chf_score1day_gattn.sql	2010-12-17 11:35:00
21:24:02 SQL> --
21:24:02 SQL> -- chf_score1day_gattn.sql
21:24:02 SQL> --
21:24:02 SQL> 
21:24:02 SQL> CREATE OR REPLACE VIEW sme AS
21:24:02   2  SELECT
21:24:02   3  'chf'||m.ydate prdate
21:24:02   4  ,NULL gattn
21:24:02   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:24:02   6  ,eur_g00
21:24:02   7  ,eur_g01
21:24:02   8  ,eur_g02
21:24:02   9  ,eur_g03
21:24:02  10  ,eur_g04
21:24:02  11  ,eur_g05
21:24:02  12  ,eur_g06
21:24:02  13  ,eur_g07
21:24:02  14  ,eur_g08
21:24:02  15  ,eur_g09
21:24:02  16  ,eur_g10
21:24:02  17  ,eur_g11
21:24:02  18  ,eur_g12
21:24:02  19  ,eur_g13
21:24:02  20  ,eur_g14
21:24:02  21  ,eur_g15
21:24:02  22  ,eur_g16
21:24:02  23  ,eur_g17
21:24:02  24  ,eur_g18
21:24:02  25  ,eur_g19
21:24:02  26  ,eur_g20
21:24:02  27  ,eur_g21
21:24:02  28  ,eur_g22
21:24:02  29  ,eur_g23
21:24:02  30  ,eur_g24
21:24:02  31  ,eur_g25
21:24:02  32  ,eur_g26
21:24:02  33  ,eur_g27
21:24:02  34  ,eur_g28
21:24:02  35  ,eur_g29
21:24:02  36  ,eur_g30
21:24:02  37  ,eur_g31
21:24:02  38  ,eur_g32
21:24:02  39  ,eur_g33
21:24:02  40  ,eur_g34
21:24:02  41  ,eur_g35
21:24:02  42  ,eur_g36
21:24:02  43  ,eur_g37
21:24:02  44  ,eur_g38
21:24:02  45  ,eur_g39
21:24:02  46  ,eur_g40
21:24:02  47  ,aud_g00
21:24:02  48  ,aud_g01
21:24:02  49  ,aud_g02
21:24:02  50  ,aud_g03
21:24:02  51  ,aud_g04
21:24:02  52  ,aud_g05
21:24:02  53  ,aud_g06
21:24:02  54  ,aud_g07
21:24:02  55  ,aud_g08
21:24:02  56  ,aud_g09
21:24:02  57  ,aud_g10
21:24:02  58  ,aud_g11
21:24:02  59  ,aud_g12
21:24:02  60  ,aud_g13
21:24:02  61  ,aud_g14
21:24:02  62  ,aud_g15
21:24:02  63  ,aud_g16
21:24:02  64  ,aud_g17
21:24:02  65  ,aud_g18
21:24:02  66  ,aud_g19
21:24:02  67  ,aud_g20
21:24:02  68  ,aud_g21
21:24:02  69  ,aud_g22
21:24:02  70  ,aud_g23
21:24:02  71  ,aud_g24
21:24:02  72  ,aud_g25
21:24:02  73  ,aud_g26
21:24:02  74  ,aud_g27
21:24:02  75  ,aud_g28
21:24:02  76  ,aud_g29
21:24:02  77  ,aud_g30
21:24:02  78  ,aud_g31
21:24:02  79  ,aud_g32
21:24:02  80  ,aud_g33
21:24:02  81  ,aud_g34
21:24:02  82  ,aud_g35
21:24:02  83  ,aud_g36
21:24:02  84  ,aud_g37
21:24:02  85  ,aud_g38
21:24:02  86  ,aud_g39
21:24:02  87  ,aud_g40
21:24:02  88  ,gbp_g00
21:24:02  89  ,gbp_g01
21:24:02  90  ,gbp_g02
21:24:02  91  ,gbp_g03
21:24:02  92  ,gbp_g04
21:24:02  93  ,gbp_g05
21:24:02  94  ,gbp_g06
21:24:02  95  ,gbp_g07
21:24:02  96  ,gbp_g08
21:24:02  97  ,gbp_g09
21:24:02  98  ,gbp_g10
21:24:02  99  ,gbp_g11
21:24:02 100  ,gbp_g12
21:24:02 101  ,gbp_g13
21:24:02 102  ,gbp_g14
21:24:02 103  ,gbp_g15
21:24:02 104  ,gbp_g16
21:24:02 105  ,gbp_g17
21:24:02 106  ,gbp_g18
21:24:02 107  ,gbp_g19
21:24:02 108  ,gbp_g20
21:24:02 109  ,gbp_g21
21:24:02 110  ,gbp_g22
21:24:02 111  ,gbp_g23
21:24:02 112  ,gbp_g24
21:24:02 113  ,gbp_g25
21:24:02 114  ,gbp_g26
21:24:02 115  ,gbp_g27
21:24:02 116  ,gbp_g28
21:24:02 117  ,gbp_g29
21:24:02 118  ,gbp_g30
21:24:02 119  ,gbp_g31
21:24:02 120  ,gbp_g32
21:24:02 121  ,gbp_g33
21:24:02 122  ,gbp_g34
21:24:02 123  ,gbp_g35
21:24:02 124  ,gbp_g36
21:24:02 125  ,gbp_g37
21:24:02 126  ,gbp_g38
21:24:02 127  ,gbp_g39
21:24:02 128  ,gbp_g40
21:24:02 129  ,jpy_g00
21:24:02 130  ,jpy_g01
21:24:02 131  ,jpy_g02
21:24:02 132  ,jpy_g03
21:24:02 133  ,jpy_g04
21:24:02 134  ,jpy_g05
21:24:02 135  ,jpy_g06
21:24:02 136  ,jpy_g07
21:24:02 137  ,jpy_g08
21:24:02 138  ,jpy_g09
21:24:02 139  ,jpy_g10
21:24:02 140  ,jpy_g11
21:24:02 141  ,jpy_g12
21:24:02 142  ,jpy_g13
21:24:02 143  ,jpy_g14
21:24:02 144  ,jpy_g15
21:24:02 145  ,jpy_g16
21:24:02 146  ,jpy_g17
21:24:02 147  ,jpy_g18
21:24:02 148  ,jpy_g19
21:24:02 149  ,jpy_g20
21:24:02 150  ,jpy_g21
21:24:02 151  ,jpy_g22
21:24:02 152  ,jpy_g23
21:24:02 153  ,jpy_g24
21:24:02 154  ,jpy_g25
21:24:02 155  ,jpy_g26
21:24:02 156  ,jpy_g27
21:24:02 157  ,jpy_g28
21:24:02 158  ,jpy_g29
21:24:02 159  ,jpy_g30
21:24:02 160  ,jpy_g31
21:24:02 161  ,jpy_g32
21:24:02 162  ,jpy_g33
21:24:02 163  ,jpy_g34
21:24:02 164  ,jpy_g35
21:24:02 165  ,jpy_g36
21:24:02 166  ,jpy_g37
21:24:02 167  ,jpy_g38
21:24:02 168  ,jpy_g39
21:24:02 169  ,jpy_g40
21:24:02 170  ,cad_g00
21:24:02 171  ,cad_g01
21:24:02 172  ,cad_g02
21:24:02 173  ,cad_g03
21:24:02 174  ,cad_g04
21:24:02 175  ,cad_g05
21:24:02 176  ,cad_g06
21:24:02 177  ,cad_g07
21:24:02 178  ,cad_g08
21:24:02 179  ,cad_g09
21:24:02 180  ,cad_g10
21:24:02 181  ,cad_g11
21:24:02 182  ,cad_g12
21:24:02 183  ,cad_g13
21:24:02 184  ,cad_g14
21:24:02 185  ,cad_g15
21:24:02 186  ,cad_g16
21:24:02 187  ,cad_g17
21:24:02 188  ,cad_g18
21:24:02 189  ,cad_g19
21:24:02 190  ,cad_g20
21:24:02 191  ,cad_g21
21:24:02 192  ,cad_g22
21:24:02 193  ,cad_g23
21:24:02 194  ,cad_g24
21:24:02 195  ,cad_g25
21:24:02 196  ,cad_g26
21:24:02 197  ,cad_g27
21:24:02 198  ,cad_g28
21:24:02 199  ,cad_g29
21:24:02 200  ,cad_g30
21:24:02 201  ,cad_g31
21:24:02 202  ,cad_g32
21:24:02 203  ,cad_g33
21:24:02 204  ,cad_g34
21:24:02 205  ,cad_g35
21:24:02 206  ,cad_g36
21:24:02 207  ,cad_g37
21:24:02 208  ,cad_g38
21:24:02 209  ,cad_g39
21:24:02 210  ,cad_g40
21:24:02 211  ,chf_g00
21:24:02 212  ,chf_g01
21:24:02 213  ,chf_g02
21:24:02 214  ,chf_g03
21:24:02 215  ,chf_g04
21:24:02 216  ,chf_g05
21:24:02 217  ,chf_g06
21:24:02 218  ,chf_g07
21:24:02 219  ,chf_g08
21:24:02 220  ,chf_g09
21:24:02 221  ,chf_g10
21:24:02 222  ,chf_g11
21:24:02 223  ,chf_g12
21:24:02 224  ,chf_g13
21:24:02 225  ,chf_g14
21:24:02 226  ,chf_g15
21:24:02 227  ,chf_g16
21:24:02 228  ,chf_g17
21:24:02 229  ,chf_g18
21:24:02 230  ,chf_g19
21:24:02 231  ,chf_g20
21:24:02 232  ,chf_g21
21:24:02 233  ,chf_g22
21:24:02 234  ,chf_g23
21:24:02 235  ,chf_g24
21:24:02 236  ,chf_g25
21:24:02 237  ,chf_g26
21:24:02 238  ,chf_g27
21:24:02 239  ,chf_g28
21:24:02 240  ,chf_g29
21:24:02 241  ,chf_g30
21:24:02 242  ,chf_g31
21:24:02 243  ,chf_g32
21:24:02 244  ,chf_g33
21:24:02 245  ,chf_g34
21:24:02 246  ,chf_g35
21:24:02 247  ,chf_g36
21:24:02 248  ,chf_g37
21:24:02 249  ,chf_g38
21:24:02 250  ,chf_g39
21:24:02 251  ,chf_g40
21:24:02 252  FROM chf_ms14 m
21:24:02 253  WHERE m.ydate = '&1'||' '||'&2'
21:24:02 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'11:35:00'

View created.

Elapsed: 00:00:00.11
21:24:03 SQL> 
21:24:03 SQL> -- rpt
21:24:03 SQL> -- We should see just 1 row:
21:24:03 SQL> 
21:24:03 SQL> SELECT COUNT(prdate) FROM sme
21:24:03   2  
21:24:03 SQL> -- Build the model:
21:24:03 SQL> CREATE OR REPLACE VIEW bme AS
21:24:03   2  SELECT
21:24:03   3  'chf'||m.ydate prdate
21:24:03   4  ,gattn
21:24:03   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:24:03   6  ,eur_g00
21:24:03   7  ,eur_g01
21:24:03   8  ,eur_g02
21:24:03   9  ,eur_g03
21:24:03  10  ,eur_g04
21:24:03  11  ,eur_g05
21:24:03  12  ,eur_g06
21:24:03  13  ,eur_g07
21:24:03  14  ,eur_g08
21:24:03  15  ,eur_g09
21:24:03  16  ,eur_g10
21:24:03  17  ,eur_g11
21:24:03  18  ,eur_g12
21:24:03  19  ,eur_g13
21:24:03  20  ,eur_g14
21:24:03  21  ,eur_g15
21:24:03  22  ,eur_g16
21:24:03  23  ,eur_g17
21:24:03  24  ,eur_g18
21:24:03  25  ,eur_g19
21:24:03  26  ,eur_g20
21:24:03  27  ,eur_g21
21:24:03  28  ,eur_g22
21:24:03  29  ,eur_g23
21:24:03  30  ,eur_g24
21:24:03  31  ,eur_g25
21:24:03  32  ,eur_g26
21:24:03  33  ,eur_g27
21:24:03  34  ,eur_g28
21:24:03  35  ,eur_g29
21:24:03  36  ,eur_g30
21:24:03  37  ,eur_g31
21:24:03  38  ,eur_g32
21:24:03  39  ,eur_g33
21:24:03  40  ,eur_g34
21:24:03  41  ,eur_g35
21:24:03  42  ,eur_g36
21:24:03  43  ,eur_g37
21:24:03  44  ,eur_g38
21:24:03  45  ,eur_g39
21:24:03  46  ,eur_g40
21:24:03  47  ,aud_g00
21:24:03  48  ,aud_g01
21:24:03  49  ,aud_g02
21:24:03  50  ,aud_g03
21:24:03  51  ,aud_g04
21:24:03  52  ,aud_g05
21:24:03  53  ,aud_g06
21:24:03  54  ,aud_g07
21:24:03  55  ,aud_g08
21:24:03  56  ,aud_g09
21:24:03  57  ,aud_g10
21:24:03  58  ,aud_g11
21:24:03  59  ,aud_g12
21:24:03  60  ,aud_g13
21:24:03  61  ,aud_g14
21:24:03  62  ,aud_g15
21:24:03  63  ,aud_g16
21:24:03  64  ,aud_g17
21:24:03  65  ,aud_g18
21:24:03  66  ,aud_g19
21:24:03  67  ,aud_g20
21:24:03  68  ,aud_g21
21:24:03  69  ,aud_g22
21:24:03  70  ,aud_g23
21:24:03  71  ,aud_g24
21:24:03  72  ,aud_g25
21:24:03  73  ,aud_g26
21:24:03  74  ,aud_g27
21:24:03  75  ,aud_g28
21:24:03  76  ,aud_g29
21:24:03  77  ,aud_g30
21:24:03  78  ,aud_g31
21:24:03  79  ,aud_g32
21:24:03  80  ,aud_g33
21:24:03  81  ,aud_g34
21:24:03  82  ,aud_g35
21:24:03  83  ,aud_g36
21:24:03  84  ,aud_g37
21:24:03  85  ,aud_g38
21:24:03  86  ,aud_g39
21:24:03  87  ,aud_g40
21:24:03  88  ,gbp_g00
21:24:03  89  ,gbp_g01
21:24:03  90  ,gbp_g02
21:24:03  91  ,gbp_g03
21:24:03  92  ,gbp_g04
21:24:03  93  ,gbp_g05
21:24:03  94  ,gbp_g06
21:24:03  95  ,gbp_g07
21:24:03  96  ,gbp_g08
21:24:03  97  ,gbp_g09
21:24:03  98  ,gbp_g10
21:24:03  99  ,gbp_g11
21:24:03 100  ,gbp_g12
21:24:03 101  ,gbp_g13
21:24:03 102  ,gbp_g14
21:24:03 103  ,gbp_g15
21:24:03 104  ,gbp_g16
21:24:03 105  ,gbp_g17
21:24:03 106  ,gbp_g18
21:24:03 107  ,gbp_g19
21:24:03 108  ,gbp_g20
21:24:03 109  ,gbp_g21
21:24:03 110  ,gbp_g22
21:24:03 111  ,gbp_g23
21:24:03 112  ,gbp_g24
21:24:03 113  ,gbp_g25
21:24:03 114  ,gbp_g26
21:24:03 115  ,gbp_g27
21:24:03 116  ,gbp_g28
21:24:03 117  ,gbp_g29
21:24:03 118  ,gbp_g30
21:24:03 119  ,gbp_g31
21:24:03 120  ,gbp_g32
21:24:03 121  ,gbp_g33
21:24:03 122  ,gbp_g34
21:24:03 123  ,gbp_g35
21:24:03 124  ,gbp_g36
21:24:03 125  ,gbp_g37
21:24:03 126  ,gbp_g38
21:24:03 127  ,gbp_g39
21:24:03 128  ,gbp_g40
21:24:03 129  ,jpy_g00
21:24:03 130  ,jpy_g01
21:24:03 131  ,jpy_g02
21:24:03 132  ,jpy_g03
21:24:03 133  ,jpy_g04
21:24:03 134  ,jpy_g05
21:24:03 135  ,jpy_g06
21:24:03 136  ,jpy_g07
21:24:03 137  ,jpy_g08
21:24:03 138  ,jpy_g09
21:24:03 139  ,jpy_g10
21:24:03 140  ,jpy_g11
21:24:03 141  ,jpy_g12
21:24:03 142  ,jpy_g13
21:24:03 143  ,jpy_g14
21:24:03 144  ,jpy_g15
21:24:03 145  ,jpy_g16
21:24:03 146  ,jpy_g17
21:24:03 147  ,jpy_g18
21:24:03 148  ,jpy_g19
21:24:03 149  ,jpy_g20
21:24:03 150  ,jpy_g21
21:24:03 151  ,jpy_g22
21:24:03 152  ,jpy_g23
21:24:03 153  ,jpy_g24
21:24:03 154  ,jpy_g25
21:24:03 155  ,jpy_g26
21:24:03 156  ,jpy_g27
21:24:03 157  ,jpy_g28
21:24:03 158  ,jpy_g29
21:24:03 159  ,jpy_g30
21:24:03 160  ,jpy_g31
21:24:03 161  ,jpy_g32
21:24:03 162  ,jpy_g33
21:24:03 163  ,jpy_g34
21:24:03 164  ,jpy_g35
21:24:03 165  ,jpy_g36
21:24:03 166  ,jpy_g37
21:24:03 167  ,jpy_g38
21:24:03 168  ,jpy_g39
21:24:03 169  ,jpy_g40
21:24:03 170  ,cad_g00
21:24:03 171  ,cad_g01
21:24:03 172  ,cad_g02
21:24:03 173  ,cad_g03
21:24:03 174  ,cad_g04
21:24:03 175  ,cad_g05
21:24:03 176  ,cad_g06
21:24:03 177  ,cad_g07
21:24:03 178  ,cad_g08
21:24:03 179  ,cad_g09
21:24:03 180  ,cad_g10
21:24:03 181  ,cad_g11
21:24:03 182  ,cad_g12
21:24:03 183  ,cad_g13
21:24:03 184  ,cad_g14
21:24:03 185  ,cad_g15
21:24:03 186  ,cad_g16
21:24:03 187  ,cad_g17
21:24:03 188  ,cad_g18
21:24:03 189  ,cad_g19
21:24:03 190  ,cad_g20
21:24:03 191  ,cad_g21
21:24:03 192  ,cad_g22
21:24:03 193  ,cad_g23
21:24:03 194  ,cad_g24
21:24:03 195  ,cad_g25
21:24:03 196  ,cad_g26
21:24:03 197  ,cad_g27
21:24:03 198  ,cad_g28
21:24:03 199  ,cad_g29
21:24:03 200  ,cad_g30
21:24:03 201  ,cad_g31
21:24:03 202  ,cad_g32
21:24:03 203  ,cad_g33
21:24:03 204  ,cad_g34
21:24:03 205  ,cad_g35
21:24:03 206  ,cad_g36
21:24:03 207  ,cad_g37
21:24:03 208  ,cad_g38
21:24:03 209  ,cad_g39
21:24:03 210  ,cad_g40
21:24:03 211  ,chf_g00
21:24:03 212  ,chf_g01
21:24:03 213  ,chf_g02
21:24:03 214  ,chf_g03
21:24:03 215  ,chf_g04
21:24:03 216  ,chf_g05
21:24:03 217  ,chf_g06
21:24:03 218  ,chf_g07
21:24:03 219  ,chf_g08
21:24:03 220  ,chf_g09
21:24:03 221  ,chf_g10
21:24:03 222  ,chf_g11
21:24:03 223  ,chf_g12
21:24:03 224  ,chf_g13
21:24:03 225  ,chf_g14
21:24:03 226  ,chf_g15
21:24:03 227  ,chf_g16
21:24:03 228  ,chf_g17
21:24:03 229  ,chf_g18
21:24:03 230  ,chf_g19
21:24:03 231  ,chf_g20
21:24:03 232  ,chf_g21
21:24:03 233  ,chf_g22
21:24:03 234  ,chf_g23
21:24:03 235  ,chf_g24
21:24:03 236  ,chf_g25
21:24:03 237  ,chf_g26
21:24:03 238  ,chf_g27
21:24:03 239  ,chf_g28
21:24:03 240  ,chf_g29
21:24:03 241  ,chf_g30
21:24:03 242  ,chf_g31
21:24:03 243  ,chf_g32
21:24:03 244  ,chf_g33
21:24:03 245  ,chf_g34
21:24:03 246  ,chf_g35
21:24:03 247  ,chf_g36
21:24:03 248  ,chf_g37
21:24:03 249  ,chf_g38
21:24:03 250  ,chf_g39
21:24:03 251  ,chf_g40
21:24:03 252  FROM chf_ms14 m
21:24:03 253  WHERE gattn IN('nup','up')
21:24:03 254  AND 1+m.ydate < '&1'||' '||'&2'
21:24:03 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'11:35:00'

View created.

Elapsed: 00:00:00.12
21:24:03 SQL> 
21:24:03 SQL> -- rpt
21:24:03 SQL> 
21:24:03 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:24:03   2  
21:24:03 SQL> SELECT MAX(prdate) FROM bme
21:24:03   2  
21:24:03 SQL> -- Now build model from bme and score sme
21:24:03 SQL> @score1gattn.sql
21:24:03 SQL> -- score1gattn.sql
21:24:03 SQL> 
21:24:03 SQL> -- Does the 1st SVM score
21:24:03 SQL> 
21:24:03 SQL> -- Fill up svmc_apply_prep
21:24:03 SQL> @score_gattn.sql
21:24:03 SQL> --
21:24:03 SQL> -- score_gattn.sql
21:24:03 SQL> --
21:24:03 SQL> 
21:24:03 SQL> -- usage: score_gattn.sql
21:24:03 SQL> 
21:24:03 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:24:03 SQL> 
21:24:03 SQL> DEFINE target	= 'gattn'
21:24:03 SQL> DEFINE model_name = 'forex14'
21:24:03 SQL> DEFINE bldtable	= 'bme'
21:24:03 SQL> DEFINE scoretable = 'sme'
21:24:03 SQL> DEFINE case_id	= 'prdate'
21:24:03 SQL> 
21:24:03 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:24:03 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:24:03 SQL> 
21:24:03 SQL> -- Builds an SVM model using pl/sql.
21:24:03 SQL> 
21:24:03 SQL> -----------------------------------------------------------------------
21:24:03 SQL> --			    BUILD THE MODEL
21:24:03 SQL> -----------------------------------------------------------------------
21:24:03 SQL> 
21:24:03 SQL> -- Cleanup old build data preparation objects for repeat runs
21:24:03 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:24:03 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:24:03 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:24:03 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:24:03 SQL> 
21:24:03 SQL> 
21:24:03 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:24:03 SQL> --
21:24:03 SQL> -- DROP	TABLE svmc_settings ;
21:24:03 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:24:03 SQL> -- DELETE svmc_settings;
21:24:03 SQL> 
21:24:03 SQL> -- The default classification algorithm is Naive Bayes. So override
21:24:03 SQL> -- this choice to SVM using a settings table.
21:24:03 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:24:03 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:24:03 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:24:03 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:24:03 SQL> -- models.
21:24:03 SQL> --
21:24:03 SQL> 
21:24:03 SQL> -- Do this once and then comment it out.
21:24:03 SQL> -- That makes script go faster.
21:24:03 SQL> -- BEGIN
21:24:03 SQL> -- -- Populate settings table
21:24:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:24:03 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:24:03 SQL> --
21:24:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:24:03 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:24:03 SQL> --
21:24:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:24:03 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:24:03 SQL> --   COMMIT;
21:24:03 SQL> -- END;
21:24:03 SQL> -- /
21:24:03 SQL> 
21:24:03 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:24:03 SQL> 
21:24:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:24:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:24:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
21:24:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:24:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:24:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:24:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:24:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:24:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:24:03 SQL> 
21:24:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:24:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:24:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:24:03 SQL> 
21:24:03 SQL> --------------------------------
21:24:03 SQL> -- PREPARE BUILD (TRAINING) DATA
21:24:03 SQL> --
21:24:03 SQL> 
21:24:03 SQL> -- 1. Missing Value treatment for all Predictors and
21:24:03 SQL> -- 2. Outlier Treatment and
21:24:03 SQL> -- 3. Normalization are performed below.
21:24:03 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:24:03 SQL> --    normalized here.
21:24:03 SQL> 
21:24:03 SQL> BEGIN
21:24:03   2  	-- Perform missing value treatment for all predictors
21:24:03   3  	-- create miss tables
21:24:03   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:24:03   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:24:03   6  
21:24:03   7  	-- populate miss tables
21:24:03   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:24:03   9  	  miss_table_name => 'svmc_miss_num',
21:24:03  10  	  data_table_name => '&bldtable',
21:24:03  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:24:03  12  
21:24:03  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:24:03  14  	  miss_table_name => 'svmc_miss_cat',
21:24:03  15  	  data_table_name => '&bldtable',
21:24:03  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:24:03  17  
21:24:03  18  	-- xform input data to replace missing values
21:24:03  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:24:03  20  	  miss_table_name => 'svmc_miss_num',
21:24:03  21  	  data_table_name => '&bldtable',
21:24:03  22  	  xform_view_name => 'xformed_build_miss_num');
21:24:03  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:24:03  24  	  miss_table_name => 'svmc_miss_cat',
21:24:03  25  	  data_table_name => '&bldtable',
21:24:03  26  	  xform_view_name => 'xformed_build_miss_cat');
21:24:03  27  
21:24:03  28  	-- Perform outlier treatment.
21:24:03  29  	-- create clip table
21:24:03  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:24:03  31  
21:24:03  32  	-- populate clip table
21:24:03  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:24:03  34  	  clip_table_name => 'svmc_clip',
21:24:03  35  	  data_table_name => '&bldtable',
21:24:03  36  	  tail_frac	  => 0.025,
21:24:03  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:24:03  38  
21:24:03  39  	-- xform input data to winsorized data
21:24:03  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:24:03  41  	  clip_table_name => 'svmc_clip',
21:24:03  42  	  data_table_name => '&bldtable',
21:24:03  43  	  xform_view_name => 'svmc_winsor');
21:24:03  44  
21:24:03  45  	-- create normalization table
21:24:03  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:24:03  47  
21:24:03  48  	-- populate normalization table based on winsorized data
21:24:03  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:24:03  50  	  norm_table_name => 'svmc_norm',
21:24:03  51  	  data_table_name => 'svmc_winsor',
21:24:03  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:24:03  53  
21:24:03  54  	-- normalize the original data
21:24:03  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:24:03  56  	  norm_table_name => 'svmc_norm',
21:24:03  57  	  data_table_name => '&bldtable',
21:24:03  58  	  xform_view_name => 'svmc_build_prep');
21:24:03  59  END;
21:24:03  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.97
21:24:21 SQL> 
21:24:21 SQL> ---------------------
21:24:21 SQL> -- CREATE A NEW MODEL
21:24:21 SQL> --
21:24:21 SQL> -- Cleanup old model with the same name for repeat runs
21:24:21 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:24:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:24:21   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.00
21:24:22 SQL> 
21:24:22 SQL> -- Build a new SVM Model
21:24:22 SQL> BEGIN
21:24:22   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:24:22   3  	  model_name	      => '&model_name',
21:24:22   4  	  mining_function     => dbms_data_mining.classification,
21:24:22   5  	  data_table_name     => 'svmc_build_prep',
21:24:22   6  	  case_id_column_name => '&case_id',
21:24:22   7  	  target_column_name  => '&target',
21:24:22   8  	  settings_table_name => 'svmc_settings');
21:24:22   9  END;
21:24:22  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.74
21:24:48 SQL> 
21:24:48 SQL> -----------------------------------------------------------------------
21:24:48 SQL> --			       APPLY/score THE MODEL
21:24:48 SQL> -----------------------------------------------------------------------
21:24:48 SQL> 
21:24:48 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:24:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:24:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:24:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:24:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:24:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:24:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:24:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:24:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:24:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:24:48 SQL> -----------------------
21:24:48 SQL> -- PREPARE SCORING DATA
21:24:48 SQL> --
21:24:48 SQL> -- If the data for model creation has been prepared, then the data
21:24:48 SQL> -- to be scored using the model must be prepared in the same manner
21:24:48 SQL> -- in order to obtain meaningful results.
21:24:48 SQL> --
21:24:48 SQL> -- 1. Missing Value treatment for all Predictors and
21:24:48 SQL> -- 2. Normalization
21:24:48 SQL> -- No outlier treatment will be performed during test and apply. The
21:24:48 SQL> -- normalization step is sufficient, since the normalization parameters
21:24:48 SQL> -- already capture the effects of outlier treatment done with build data.
21:24:48 SQL> --
21:24:48 SQL> BEGIN
21:24:48   2  	-- Xform Test data to replace missing values
21:24:48   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:24:48   4  	  miss_table_name => 'svmc_miss_num',
21:24:48   5  	  data_table_name => '&scoretable',
21:24:48   6  	  xform_view_name => 'xformed_apply_miss_num');
21:24:48   7  
21:24:48   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:24:48   9  	  miss_table_name => 'svmc_miss_cat',
21:24:48  10  	  data_table_name => '&scoretable',
21:24:48  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:24:48  12  
21:24:48  13  	-- Normalize the data to be scored
21:24:48  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:24:48  15  	  norm_table_name => 'svmc_norm',
21:24:48  16  	  data_table_name => '&scoretable',
21:24:48  17  	  xform_view_name => 'svmc_apply_prep');
21:24:48  18  END;
21:24:48  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.15
21:24:49 SQL> 
21:24:49 SQL> -- Use same model_name used in score_gattn.sql
21:24:49 SQL> DEFINE model_name = 'forex14'
21:24:49 SQL> 
21:24:49 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:24:49 SQL> 
21:24:49 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:24:49   2  SELECT
21:24:49   3  prdate
21:24:49   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:24:49   5  ,sysdate
21:24:49   6  ,SUBSTR(prdate,1,3)pair
21:24:49   7  ,SUBSTR(prdate,4,19)ydate
21:24:49   8  FROM svmc_apply_prep
21:24:49   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:24:49 SQL> @chf_score1day_gattn.sql	2010-12-17 11:30:00
21:24:49 SQL> --
21:24:49 SQL> -- chf_score1day_gattn.sql
21:24:49 SQL> --
21:24:49 SQL> 
21:24:49 SQL> CREATE OR REPLACE VIEW sme AS
21:24:49   2  SELECT
21:24:49   3  'chf'||m.ydate prdate
21:24:49   4  ,NULL gattn
21:24:49   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:24:49   6  ,eur_g00
21:24:49   7  ,eur_g01
21:24:49   8  ,eur_g02
21:24:49   9  ,eur_g03
21:24:49  10  ,eur_g04
21:24:49  11  ,eur_g05
21:24:49  12  ,eur_g06
21:24:49  13  ,eur_g07
21:24:49  14  ,eur_g08
21:24:49  15  ,eur_g09
21:24:49  16  ,eur_g10
21:24:49  17  ,eur_g11
21:24:49  18  ,eur_g12
21:24:49  19  ,eur_g13
21:24:49  20  ,eur_g14
21:24:49  21  ,eur_g15
21:24:49  22  ,eur_g16
21:24:49  23  ,eur_g17
21:24:49  24  ,eur_g18
21:24:49  25  ,eur_g19
21:24:49  26  ,eur_g20
21:24:49  27  ,eur_g21
21:24:49  28  ,eur_g22
21:24:49  29  ,eur_g23
21:24:49  30  ,eur_g24
21:24:49  31  ,eur_g25
21:24:49  32  ,eur_g26
21:24:49  33  ,eur_g27
21:24:49  34  ,eur_g28
21:24:49  35  ,eur_g29
21:24:49  36  ,eur_g30
21:24:49  37  ,eur_g31
21:24:49  38  ,eur_g32
21:24:49  39  ,eur_g33
21:24:49  40  ,eur_g34
21:24:49  41  ,eur_g35
21:24:49  42  ,eur_g36
21:24:49  43  ,eur_g37
21:24:49  44  ,eur_g38
21:24:49  45  ,eur_g39
21:24:49  46  ,eur_g40
21:24:49  47  ,aud_g00
21:24:49  48  ,aud_g01
21:24:49  49  ,aud_g02
21:24:49  50  ,aud_g03
21:24:49  51  ,aud_g04
21:24:49  52  ,aud_g05
21:24:49  53  ,aud_g06
21:24:49  54  ,aud_g07
21:24:49  55  ,aud_g08
21:24:49  56  ,aud_g09
21:24:49  57  ,aud_g10
21:24:49  58  ,aud_g11
21:24:49  59  ,aud_g12
21:24:49  60  ,aud_g13
21:24:49  61  ,aud_g14
21:24:49  62  ,aud_g15
21:24:49  63  ,aud_g16
21:24:49  64  ,aud_g17
21:24:49  65  ,aud_g18
21:24:49  66  ,aud_g19
21:24:49  67  ,aud_g20
21:24:49  68  ,aud_g21
21:24:49  69  ,aud_g22
21:24:49  70  ,aud_g23
21:24:49  71  ,aud_g24
21:24:49  72  ,aud_g25
21:24:49  73  ,aud_g26
21:24:49  74  ,aud_g27
21:24:49  75  ,aud_g28
21:24:49  76  ,aud_g29
21:24:49  77  ,aud_g30
21:24:49  78  ,aud_g31
21:24:49  79  ,aud_g32
21:24:49  80  ,aud_g33
21:24:49  81  ,aud_g34
21:24:49  82  ,aud_g35
21:24:49  83  ,aud_g36
21:24:49  84  ,aud_g37
21:24:49  85  ,aud_g38
21:24:49  86  ,aud_g39
21:24:49  87  ,aud_g40
21:24:49  88  ,gbp_g00
21:24:49  89  ,gbp_g01
21:24:49  90  ,gbp_g02
21:24:49  91  ,gbp_g03
21:24:49  92  ,gbp_g04
21:24:49  93  ,gbp_g05
21:24:49  94  ,gbp_g06
21:24:49  95  ,gbp_g07
21:24:49  96  ,gbp_g08
21:24:49  97  ,gbp_g09
21:24:49  98  ,gbp_g10
21:24:49  99  ,gbp_g11
21:24:49 100  ,gbp_g12
21:24:49 101  ,gbp_g13
21:24:49 102  ,gbp_g14
21:24:49 103  ,gbp_g15
21:24:49 104  ,gbp_g16
21:24:49 105  ,gbp_g17
21:24:49 106  ,gbp_g18
21:24:49 107  ,gbp_g19
21:24:49 108  ,gbp_g20
21:24:49 109  ,gbp_g21
21:24:49 110  ,gbp_g22
21:24:49 111  ,gbp_g23
21:24:49 112  ,gbp_g24
21:24:49 113  ,gbp_g25
21:24:49 114  ,gbp_g26
21:24:49 115  ,gbp_g27
21:24:49 116  ,gbp_g28
21:24:49 117  ,gbp_g29
21:24:49 118  ,gbp_g30
21:24:49 119  ,gbp_g31
21:24:49 120  ,gbp_g32
21:24:49 121  ,gbp_g33
21:24:49 122  ,gbp_g34
21:24:49 123  ,gbp_g35
21:24:49 124  ,gbp_g36
21:24:49 125  ,gbp_g37
21:24:49 126  ,gbp_g38
21:24:49 127  ,gbp_g39
21:24:49 128  ,gbp_g40
21:24:49 129  ,jpy_g00
21:24:49 130  ,jpy_g01
21:24:49 131  ,jpy_g02
21:24:49 132  ,jpy_g03
21:24:49 133  ,jpy_g04
21:24:49 134  ,jpy_g05
21:24:49 135  ,jpy_g06
21:24:49 136  ,jpy_g07
21:24:49 137  ,jpy_g08
21:24:49 138  ,jpy_g09
21:24:49 139  ,jpy_g10
21:24:49 140  ,jpy_g11
21:24:49 141  ,jpy_g12
21:24:49 142  ,jpy_g13
21:24:49 143  ,jpy_g14
21:24:49 144  ,jpy_g15
21:24:49 145  ,jpy_g16
21:24:49 146  ,jpy_g17
21:24:49 147  ,jpy_g18
21:24:49 148  ,jpy_g19
21:24:49 149  ,jpy_g20
21:24:49 150  ,jpy_g21
21:24:49 151  ,jpy_g22
21:24:49 152  ,jpy_g23
21:24:49 153  ,jpy_g24
21:24:49 154  ,jpy_g25
21:24:49 155  ,jpy_g26
21:24:49 156  ,jpy_g27
21:24:49 157  ,jpy_g28
21:24:49 158  ,jpy_g29
21:24:49 159  ,jpy_g30
21:24:49 160  ,jpy_g31
21:24:49 161  ,jpy_g32
21:24:49 162  ,jpy_g33
21:24:49 163  ,jpy_g34
21:24:49 164  ,jpy_g35
21:24:49 165  ,jpy_g36
21:24:49 166  ,jpy_g37
21:24:49 167  ,jpy_g38
21:24:49 168  ,jpy_g39
21:24:49 169  ,jpy_g40
21:24:49 170  ,cad_g00
21:24:49 171  ,cad_g01
21:24:49 172  ,cad_g02
21:24:49 173  ,cad_g03
21:24:49 174  ,cad_g04
21:24:49 175  ,cad_g05
21:24:49 176  ,cad_g06
21:24:49 177  ,cad_g07
21:24:49 178  ,cad_g08
21:24:49 179  ,cad_g09
21:24:49 180  ,cad_g10
21:24:49 181  ,cad_g11
21:24:49 182  ,cad_g12
21:24:49 183  ,cad_g13
21:24:49 184  ,cad_g14
21:24:49 185  ,cad_g15
21:24:49 186  ,cad_g16
21:24:49 187  ,cad_g17
21:24:49 188  ,cad_g18
21:24:49 189  ,cad_g19
21:24:49 190  ,cad_g20
21:24:49 191  ,cad_g21
21:24:49 192  ,cad_g22
21:24:49 193  ,cad_g23
21:24:49 194  ,cad_g24
21:24:49 195  ,cad_g25
21:24:49 196  ,cad_g26
21:24:49 197  ,cad_g27
21:24:49 198  ,cad_g28
21:24:49 199  ,cad_g29
21:24:49 200  ,cad_g30
21:24:49 201  ,cad_g31
21:24:49 202  ,cad_g32
21:24:49 203  ,cad_g33
21:24:49 204  ,cad_g34
21:24:49 205  ,cad_g35
21:24:49 206  ,cad_g36
21:24:49 207  ,cad_g37
21:24:49 208  ,cad_g38
21:24:49 209  ,cad_g39
21:24:49 210  ,cad_g40
21:24:49 211  ,chf_g00
21:24:49 212  ,chf_g01
21:24:49 213  ,chf_g02
21:24:49 214  ,chf_g03
21:24:49 215  ,chf_g04
21:24:49 216  ,chf_g05
21:24:49 217  ,chf_g06
21:24:49 218  ,chf_g07
21:24:49 219  ,chf_g08
21:24:49 220  ,chf_g09
21:24:49 221  ,chf_g10
21:24:49 222  ,chf_g11
21:24:49 223  ,chf_g12
21:24:49 224  ,chf_g13
21:24:49 225  ,chf_g14
21:24:49 226  ,chf_g15
21:24:49 227  ,chf_g16
21:24:49 228  ,chf_g17
21:24:49 229  ,chf_g18
21:24:49 230  ,chf_g19
21:24:49 231  ,chf_g20
21:24:49 232  ,chf_g21
21:24:49 233  ,chf_g22
21:24:49 234  ,chf_g23
21:24:49 235  ,chf_g24
21:24:49 236  ,chf_g25
21:24:49 237  ,chf_g26
21:24:49 238  ,chf_g27
21:24:49 239  ,chf_g28
21:24:49 240  ,chf_g29
21:24:49 241  ,chf_g30
21:24:49 242  ,chf_g31
21:24:49 243  ,chf_g32
21:24:49 244  ,chf_g33
21:24:49 245  ,chf_g34
21:24:49 246  ,chf_g35
21:24:49 247  ,chf_g36
21:24:49 248  ,chf_g37
21:24:49 249  ,chf_g38
21:24:49 250  ,chf_g39
21:24:49 251  ,chf_g40
21:24:49 252  FROM chf_ms14 m
21:24:49 253  WHERE m.ydate = '&1'||' '||'&2'
21:24:49 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'11:30:00'

View created.

Elapsed: 00:00:00.12
21:24:49 SQL> 
21:24:49 SQL> -- rpt
21:24:49 SQL> -- We should see just 1 row:
21:24:49 SQL> 
21:24:49 SQL> SELECT COUNT(prdate) FROM sme
21:24:49   2  
21:24:49 SQL> -- Build the model:
21:24:49 SQL> CREATE OR REPLACE VIEW bme AS
21:24:49   2  SELECT
21:24:49   3  'chf'||m.ydate prdate
21:24:49   4  ,gattn
21:24:49   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:24:49   6  ,eur_g00
21:24:49   7  ,eur_g01
21:24:49   8  ,eur_g02
21:24:49   9  ,eur_g03
21:24:49  10  ,eur_g04
21:24:49  11  ,eur_g05
21:24:49  12  ,eur_g06
21:24:49  13  ,eur_g07
21:24:49  14  ,eur_g08
21:24:49  15  ,eur_g09
21:24:49  16  ,eur_g10
21:24:49  17  ,eur_g11
21:24:49  18  ,eur_g12
21:24:49  19  ,eur_g13
21:24:49  20  ,eur_g14
21:24:49  21  ,eur_g15
21:24:49  22  ,eur_g16
21:24:49  23  ,eur_g17
21:24:49  24  ,eur_g18
21:24:49  25  ,eur_g19
21:24:49  26  ,eur_g20
21:24:49  27  ,eur_g21
21:24:49  28  ,eur_g22
21:24:49  29  ,eur_g23
21:24:49  30  ,eur_g24
21:24:49  31  ,eur_g25
21:24:49  32  ,eur_g26
21:24:49  33  ,eur_g27
21:24:49  34  ,eur_g28
21:24:49  35  ,eur_g29
21:24:49  36  ,eur_g30
21:24:49  37  ,eur_g31
21:24:49  38  ,eur_g32
21:24:49  39  ,eur_g33
21:24:49  40  ,eur_g34
21:24:49  41  ,eur_g35
21:24:49  42  ,eur_g36
21:24:49  43  ,eur_g37
21:24:49  44  ,eur_g38
21:24:49  45  ,eur_g39
21:24:49  46  ,eur_g40
21:24:49  47  ,aud_g00
21:24:49  48  ,aud_g01
21:24:49  49  ,aud_g02
21:24:49  50  ,aud_g03
21:24:49  51  ,aud_g04
21:24:49  52  ,aud_g05
21:24:49  53  ,aud_g06
21:24:49  54  ,aud_g07
21:24:49  55  ,aud_g08
21:24:49  56  ,aud_g09
21:24:49  57  ,aud_g10
21:24:49  58  ,aud_g11
21:24:49  59  ,aud_g12
21:24:49  60  ,aud_g13
21:24:49  61  ,aud_g14
21:24:49  62  ,aud_g15
21:24:49  63  ,aud_g16
21:24:49  64  ,aud_g17
21:24:49  65  ,aud_g18
21:24:49  66  ,aud_g19
21:24:49  67  ,aud_g20
21:24:49  68  ,aud_g21
21:24:49  69  ,aud_g22
21:24:49  70  ,aud_g23
21:24:49  71  ,aud_g24
21:24:49  72  ,aud_g25
21:24:49  73  ,aud_g26
21:24:49  74  ,aud_g27
21:24:49  75  ,aud_g28
21:24:49  76  ,aud_g29
21:24:49  77  ,aud_g30
21:24:49  78  ,aud_g31
21:24:49  79  ,aud_g32
21:24:49  80  ,aud_g33
21:24:49  81  ,aud_g34
21:24:49  82  ,aud_g35
21:24:49  83  ,aud_g36
21:24:49  84  ,aud_g37
21:24:49  85  ,aud_g38
21:24:49  86  ,aud_g39
21:24:49  87  ,aud_g40
21:24:49  88  ,gbp_g00
21:24:49  89  ,gbp_g01
21:24:49  90  ,gbp_g02
21:24:49  91  ,gbp_g03
21:24:49  92  ,gbp_g04
21:24:49  93  ,gbp_g05
21:24:49  94  ,gbp_g06
21:24:49  95  ,gbp_g07
21:24:49  96  ,gbp_g08
21:24:49  97  ,gbp_g09
21:24:49  98  ,gbp_g10
21:24:49  99  ,gbp_g11
21:24:49 100  ,gbp_g12
21:24:49 101  ,gbp_g13
21:24:49 102  ,gbp_g14
21:24:49 103  ,gbp_g15
21:24:49 104  ,gbp_g16
21:24:49 105  ,gbp_g17
21:24:49 106  ,gbp_g18
21:24:49 107  ,gbp_g19
21:24:49 108  ,gbp_g20
21:24:49 109  ,gbp_g21
21:24:49 110  ,gbp_g22
21:24:49 111  ,gbp_g23
21:24:49 112  ,gbp_g24
21:24:49 113  ,gbp_g25
21:24:49 114  ,gbp_g26
21:24:49 115  ,gbp_g27
21:24:49 116  ,gbp_g28
21:24:49 117  ,gbp_g29
21:24:49 118  ,gbp_g30
21:24:49 119  ,gbp_g31
21:24:49 120  ,gbp_g32
21:24:49 121  ,gbp_g33
21:24:49 122  ,gbp_g34
21:24:49 123  ,gbp_g35
21:24:49 124  ,gbp_g36
21:24:49 125  ,gbp_g37
21:24:49 126  ,gbp_g38
21:24:49 127  ,gbp_g39
21:24:49 128  ,gbp_g40
21:24:49 129  ,jpy_g00
21:24:49 130  ,jpy_g01
21:24:49 131  ,jpy_g02
21:24:49 132  ,jpy_g03
21:24:49 133  ,jpy_g04
21:24:49 134  ,jpy_g05
21:24:49 135  ,jpy_g06
21:24:49 136  ,jpy_g07
21:24:49 137  ,jpy_g08
21:24:49 138  ,jpy_g09
21:24:49 139  ,jpy_g10
21:24:49 140  ,jpy_g11
21:24:49 141  ,jpy_g12
21:24:49 142  ,jpy_g13
21:24:49 143  ,jpy_g14
21:24:49 144  ,jpy_g15
21:24:49 145  ,jpy_g16
21:24:49 146  ,jpy_g17
21:24:49 147  ,jpy_g18
21:24:49 148  ,jpy_g19
21:24:49 149  ,jpy_g20
21:24:49 150  ,jpy_g21
21:24:49 151  ,jpy_g22
21:24:49 152  ,jpy_g23
21:24:49 153  ,jpy_g24
21:24:49 154  ,jpy_g25
21:24:49 155  ,jpy_g26
21:24:49 156  ,jpy_g27
21:24:49 157  ,jpy_g28
21:24:49 158  ,jpy_g29
21:24:49 159  ,jpy_g30
21:24:49 160  ,jpy_g31
21:24:49 161  ,jpy_g32
21:24:49 162  ,jpy_g33
21:24:49 163  ,jpy_g34
21:24:49 164  ,jpy_g35
21:24:49 165  ,jpy_g36
21:24:49 166  ,jpy_g37
21:24:49 167  ,jpy_g38
21:24:49 168  ,jpy_g39
21:24:49 169  ,jpy_g40
21:24:49 170  ,cad_g00
21:24:49 171  ,cad_g01
21:24:49 172  ,cad_g02
21:24:49 173  ,cad_g03
21:24:49 174  ,cad_g04
21:24:49 175  ,cad_g05
21:24:49 176  ,cad_g06
21:24:49 177  ,cad_g07
21:24:49 178  ,cad_g08
21:24:49 179  ,cad_g09
21:24:49 180  ,cad_g10
21:24:49 181  ,cad_g11
21:24:49 182  ,cad_g12
21:24:49 183  ,cad_g13
21:24:49 184  ,cad_g14
21:24:49 185  ,cad_g15
21:24:49 186  ,cad_g16
21:24:49 187  ,cad_g17
21:24:49 188  ,cad_g18
21:24:49 189  ,cad_g19
21:24:49 190  ,cad_g20
21:24:49 191  ,cad_g21
21:24:49 192  ,cad_g22
21:24:49 193  ,cad_g23
21:24:49 194  ,cad_g24
21:24:49 195  ,cad_g25
21:24:49 196  ,cad_g26
21:24:49 197  ,cad_g27
21:24:49 198  ,cad_g28
21:24:49 199  ,cad_g29
21:24:49 200  ,cad_g30
21:24:49 201  ,cad_g31
21:24:49 202  ,cad_g32
21:24:49 203  ,cad_g33
21:24:49 204  ,cad_g34
21:24:49 205  ,cad_g35
21:24:49 206  ,cad_g36
21:24:49 207  ,cad_g37
21:24:49 208  ,cad_g38
21:24:49 209  ,cad_g39
21:24:49 210  ,cad_g40
21:24:49 211  ,chf_g00
21:24:49 212  ,chf_g01
21:24:49 213  ,chf_g02
21:24:49 214  ,chf_g03
21:24:49 215  ,chf_g04
21:24:49 216  ,chf_g05
21:24:49 217  ,chf_g06
21:24:49 218  ,chf_g07
21:24:49 219  ,chf_g08
21:24:49 220  ,chf_g09
21:24:49 221  ,chf_g10
21:24:49 222  ,chf_g11
21:24:49 223  ,chf_g12
21:24:49 224  ,chf_g13
21:24:49 225  ,chf_g14
21:24:49 226  ,chf_g15
21:24:49 227  ,chf_g16
21:24:49 228  ,chf_g17
21:24:49 229  ,chf_g18
21:24:49 230  ,chf_g19
21:24:49 231  ,chf_g20
21:24:49 232  ,chf_g21
21:24:49 233  ,chf_g22
21:24:49 234  ,chf_g23
21:24:49 235  ,chf_g24
21:24:49 236  ,chf_g25
21:24:49 237  ,chf_g26
21:24:49 238  ,chf_g27
21:24:49 239  ,chf_g28
21:24:49 240  ,chf_g29
21:24:49 241  ,chf_g30
21:24:49 242  ,chf_g31
21:24:49 243  ,chf_g32
21:24:49 244  ,chf_g33
21:24:49 245  ,chf_g34
21:24:49 246  ,chf_g35
21:24:49 247  ,chf_g36
21:24:49 248  ,chf_g37
21:24:49 249  ,chf_g38
21:24:49 250  ,chf_g39
21:24:49 251  ,chf_g40
21:24:49 252  FROM chf_ms14 m
21:24:49 253  WHERE gattn IN('nup','up')
21:24:49 254  AND 1+m.ydate < '&1'||' '||'&2'
21:24:49 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'11:30:00'

View created.

Elapsed: 00:00:00.11
21:24:50 SQL> 
21:24:50 SQL> -- rpt
21:24:50 SQL> 
21:24:50 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:24:50   2  
21:24:50 SQL> SELECT MAX(prdate) FROM bme
21:24:50   2  
21:24:50 SQL> -- Now build model from bme and score sme
21:24:50 SQL> @score1gattn.sql
21:24:50 SQL> -- score1gattn.sql
21:24:50 SQL> 
21:24:50 SQL> -- Does the 1st SVM score
21:24:50 SQL> 
21:24:50 SQL> -- Fill up svmc_apply_prep
21:24:50 SQL> @score_gattn.sql
21:24:50 SQL> --
21:24:50 SQL> -- score_gattn.sql
21:24:50 SQL> --
21:24:50 SQL> 
21:24:50 SQL> -- usage: score_gattn.sql
21:24:50 SQL> 
21:24:50 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:24:50 SQL> 
21:24:50 SQL> DEFINE target	= 'gattn'
21:24:50 SQL> DEFINE model_name = 'forex14'
21:24:50 SQL> DEFINE bldtable	= 'bme'
21:24:50 SQL> DEFINE scoretable = 'sme'
21:24:50 SQL> DEFINE case_id	= 'prdate'
21:24:50 SQL> 
21:24:50 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:24:50 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:24:50 SQL> 
21:24:50 SQL> -- Builds an SVM model using pl/sql.
21:24:50 SQL> 
21:24:50 SQL> -----------------------------------------------------------------------
21:24:50 SQL> --			    BUILD THE MODEL
21:24:50 SQL> -----------------------------------------------------------------------
21:24:50 SQL> 
21:24:50 SQL> -- Cleanup old build data preparation objects for repeat runs
21:24:50 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:24:50 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:24:50 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:24:50 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:24:50 SQL> 
21:24:50 SQL> 
21:24:50 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:24:50 SQL> --
21:24:50 SQL> -- DROP	TABLE svmc_settings ;
21:24:50 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:24:50 SQL> -- DELETE svmc_settings;
21:24:50 SQL> 
21:24:50 SQL> -- The default classification algorithm is Naive Bayes. So override
21:24:50 SQL> -- this choice to SVM using a settings table.
21:24:50 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:24:50 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:24:50 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:24:50 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:24:50 SQL> -- models.
21:24:50 SQL> --
21:24:50 SQL> 
21:24:50 SQL> -- Do this once and then comment it out.
21:24:50 SQL> -- That makes script go faster.
21:24:50 SQL> -- BEGIN
21:24:50 SQL> -- -- Populate settings table
21:24:50 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:24:50 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:24:50 SQL> --
21:24:50 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:24:50 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:24:50 SQL> --
21:24:50 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:24:50 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:24:50 SQL> --   COMMIT;
21:24:50 SQL> -- END;
21:24:50 SQL> -- /
21:24:50 SQL> 
21:24:50 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:24:50 SQL> 
21:24:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:24:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:24:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:24:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:24:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:24:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:24:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:24:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:24:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:24:50 SQL> 
21:24:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:24:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:24:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
21:24:50 SQL> 
21:24:50 SQL> --------------------------------
21:24:50 SQL> -- PREPARE BUILD (TRAINING) DATA
21:24:50 SQL> --
21:24:50 SQL> 
21:24:50 SQL> -- 1. Missing Value treatment for all Predictors and
21:24:50 SQL> -- 2. Outlier Treatment and
21:24:50 SQL> -- 3. Normalization are performed below.
21:24:50 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:24:50 SQL> --    normalized here.
21:24:50 SQL> 
21:24:50 SQL> BEGIN
21:24:50   2  	-- Perform missing value treatment for all predictors
21:24:50   3  	-- create miss tables
21:24:50   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:24:50   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:24:50   6  
21:24:50   7  	-- populate miss tables
21:24:50   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:24:50   9  	  miss_table_name => 'svmc_miss_num',
21:24:50  10  	  data_table_name => '&bldtable',
21:24:50  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:24:50  12  
21:24:50  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:24:50  14  	  miss_table_name => 'svmc_miss_cat',
21:24:50  15  	  data_table_name => '&bldtable',
21:24:50  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:24:50  17  
21:24:50  18  	-- xform input data to replace missing values
21:24:50  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:24:50  20  	  miss_table_name => 'svmc_miss_num',
21:24:50  21  	  data_table_name => '&bldtable',
21:24:50  22  	  xform_view_name => 'xformed_build_miss_num');
21:24:50  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:24:50  24  	  miss_table_name => 'svmc_miss_cat',
21:24:50  25  	  data_table_name => '&bldtable',
21:24:50  26  	  xform_view_name => 'xformed_build_miss_cat');
21:24:50  27  
21:24:50  28  	-- Perform outlier treatment.
21:24:50  29  	-- create clip table
21:24:50  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:24:50  31  
21:24:50  32  	-- populate clip table
21:24:50  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:24:50  34  	  clip_table_name => 'svmc_clip',
21:24:50  35  	  data_table_name => '&bldtable',
21:24:50  36  	  tail_frac	  => 0.025,
21:24:50  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:24:50  38  
21:24:50  39  	-- xform input data to winsorized data
21:24:50  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:24:50  41  	  clip_table_name => 'svmc_clip',
21:24:50  42  	  data_table_name => '&bldtable',
21:24:50  43  	  xform_view_name => 'svmc_winsor');
21:24:50  44  
21:24:50  45  	-- create normalization table
21:24:50  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:24:50  47  
21:24:50  48  	-- populate normalization table based on winsorized data
21:24:50  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:24:50  50  	  norm_table_name => 'svmc_norm',
21:24:50  51  	  data_table_name => 'svmc_winsor',
21:24:50  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:24:50  53  
21:24:50  54  	-- normalize the original data
21:24:50  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:24:50  56  	  norm_table_name => 'svmc_norm',
21:24:50  57  	  data_table_name => '&bldtable',
21:24:50  58  	  xform_view_name => 'svmc_build_prep');
21:24:50  59  END;
21:24:50  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.00
21:25:08 SQL> 
21:25:08 SQL> ---------------------
21:25:08 SQL> -- CREATE A NEW MODEL
21:25:08 SQL> --
21:25:08 SQL> -- Cleanup old model with the same name for repeat runs
21:25:08 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:25:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:25:08   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.97
21:25:09 SQL> 
21:25:09 SQL> -- Build a new SVM Model
21:25:09 SQL> BEGIN
21:25:09   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:25:09   3  	  model_name	      => '&model_name',
21:25:09   4  	  mining_function     => dbms_data_mining.classification,
21:25:09   5  	  data_table_name     => 'svmc_build_prep',
21:25:09   6  	  case_id_column_name => '&case_id',
21:25:09   7  	  target_column_name  => '&target',
21:25:09   8  	  settings_table_name => 'svmc_settings');
21:25:09   9  END;
21:25:09  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.58
21:25:34 SQL> 
21:25:34 SQL> -----------------------------------------------------------------------
21:25:34 SQL> --			       APPLY/score THE MODEL
21:25:34 SQL> -----------------------------------------------------------------------
21:25:34 SQL> 
21:25:34 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:25:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:25:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:25:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:25:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:25:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:25:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:25:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:25:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:25:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:25:35 SQL> -----------------------
21:25:35 SQL> -- PREPARE SCORING DATA
21:25:35 SQL> --
21:25:35 SQL> -- If the data for model creation has been prepared, then the data
21:25:35 SQL> -- to be scored using the model must be prepared in the same manner
21:25:35 SQL> -- in order to obtain meaningful results.
21:25:35 SQL> --
21:25:35 SQL> -- 1. Missing Value treatment for all Predictors and
21:25:35 SQL> -- 2. Normalization
21:25:35 SQL> -- No outlier treatment will be performed during test and apply. The
21:25:35 SQL> -- normalization step is sufficient, since the normalization parameters
21:25:35 SQL> -- already capture the effects of outlier treatment done with build data.
21:25:35 SQL> --
21:25:35 SQL> BEGIN
21:25:35   2  	-- Xform Test data to replace missing values
21:25:35   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:25:35   4  	  miss_table_name => 'svmc_miss_num',
21:25:35   5  	  data_table_name => '&scoretable',
21:25:35   6  	  xform_view_name => 'xformed_apply_miss_num');
21:25:35   7  
21:25:35   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:25:35   9  	  miss_table_name => 'svmc_miss_cat',
21:25:35  10  	  data_table_name => '&scoretable',
21:25:35  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:25:35  12  
21:25:35  13  	-- Normalize the data to be scored
21:25:35  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:25:35  15  	  norm_table_name => 'svmc_norm',
21:25:35  16  	  data_table_name => '&scoretable',
21:25:35  17  	  xform_view_name => 'svmc_apply_prep');
21:25:35  18  END;
21:25:35  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.12
21:25:36 SQL> 
21:25:36 SQL> -- Use same model_name used in score_gattn.sql
21:25:36 SQL> DEFINE model_name = 'forex14'
21:25:36 SQL> 
21:25:36 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:25:36 SQL> 
21:25:36 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:25:36   2  SELECT
21:25:36   3  prdate
21:25:36   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:25:36   5  ,sysdate
21:25:36   6  ,SUBSTR(prdate,1,3)pair
21:25:36   7  ,SUBSTR(prdate,4,19)ydate
21:25:36   8  FROM svmc_apply_prep
21:25:36   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
21:25:36 SQL> @chf_score1day_gattn.sql	2010-12-17 11:25:00
21:25:36 SQL> --
21:25:36 SQL> -- chf_score1day_gattn.sql
21:25:36 SQL> --
21:25:36 SQL> 
21:25:36 SQL> CREATE OR REPLACE VIEW sme AS
21:25:36   2  SELECT
21:25:36   3  'chf'||m.ydate prdate
21:25:36   4  ,NULL gattn
21:25:36   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:25:36   6  ,eur_g00
21:25:36   7  ,eur_g01
21:25:36   8  ,eur_g02
21:25:36   9  ,eur_g03
21:25:36  10  ,eur_g04
21:25:36  11  ,eur_g05
21:25:36  12  ,eur_g06
21:25:36  13  ,eur_g07
21:25:36  14  ,eur_g08
21:25:36  15  ,eur_g09
21:25:36  16  ,eur_g10
21:25:36  17  ,eur_g11
21:25:36  18  ,eur_g12
21:25:36  19  ,eur_g13
21:25:36  20  ,eur_g14
21:25:36  21  ,eur_g15
21:25:36  22  ,eur_g16
21:25:36  23  ,eur_g17
21:25:36  24  ,eur_g18
21:25:36  25  ,eur_g19
21:25:36  26  ,eur_g20
21:25:36  27  ,eur_g21
21:25:36  28  ,eur_g22
21:25:36  29  ,eur_g23
21:25:36  30  ,eur_g24
21:25:36  31  ,eur_g25
21:25:36  32  ,eur_g26
21:25:36  33  ,eur_g27
21:25:36  34  ,eur_g28
21:25:36  35  ,eur_g29
21:25:36  36  ,eur_g30
21:25:36  37  ,eur_g31
21:25:36  38  ,eur_g32
21:25:36  39  ,eur_g33
21:25:36  40  ,eur_g34
21:25:36  41  ,eur_g35
21:25:36  42  ,eur_g36
21:25:36  43  ,eur_g37
21:25:36  44  ,eur_g38
21:25:36  45  ,eur_g39
21:25:36  46  ,eur_g40
21:25:36  47  ,aud_g00
21:25:36  48  ,aud_g01
21:25:36  49  ,aud_g02
21:25:36  50  ,aud_g03
21:25:36  51  ,aud_g04
21:25:36  52  ,aud_g05
21:25:36  53  ,aud_g06
21:25:36  54  ,aud_g07
21:25:36  55  ,aud_g08
21:25:36  56  ,aud_g09
21:25:36  57  ,aud_g10
21:25:36  58  ,aud_g11
21:25:36  59  ,aud_g12
21:25:36  60  ,aud_g13
21:25:36  61  ,aud_g14
21:25:36  62  ,aud_g15
21:25:36  63  ,aud_g16
21:25:36  64  ,aud_g17
21:25:36  65  ,aud_g18
21:25:36  66  ,aud_g19
21:25:36  67  ,aud_g20
21:25:36  68  ,aud_g21
21:25:36  69  ,aud_g22
21:25:36  70  ,aud_g23
21:25:36  71  ,aud_g24
21:25:36  72  ,aud_g25
21:25:36  73  ,aud_g26
21:25:36  74  ,aud_g27
21:25:36  75  ,aud_g28
21:25:36  76  ,aud_g29
21:25:36  77  ,aud_g30
21:25:36  78  ,aud_g31
21:25:36  79  ,aud_g32
21:25:36  80  ,aud_g33
21:25:36  81  ,aud_g34
21:25:36  82  ,aud_g35
21:25:36  83  ,aud_g36
21:25:36  84  ,aud_g37
21:25:36  85  ,aud_g38
21:25:36  86  ,aud_g39
21:25:36  87  ,aud_g40
21:25:36  88  ,gbp_g00
21:25:36  89  ,gbp_g01
21:25:36  90  ,gbp_g02
21:25:36  91  ,gbp_g03
21:25:36  92  ,gbp_g04
21:25:36  93  ,gbp_g05
21:25:36  94  ,gbp_g06
21:25:36  95  ,gbp_g07
21:25:36  96  ,gbp_g08
21:25:36  97  ,gbp_g09
21:25:36  98  ,gbp_g10
21:25:36  99  ,gbp_g11
21:25:36 100  ,gbp_g12
21:25:36 101  ,gbp_g13
21:25:36 102  ,gbp_g14
21:25:36 103  ,gbp_g15
21:25:36 104  ,gbp_g16
21:25:36 105  ,gbp_g17
21:25:36 106  ,gbp_g18
21:25:36 107  ,gbp_g19
21:25:36 108  ,gbp_g20
21:25:36 109  ,gbp_g21
21:25:36 110  ,gbp_g22
21:25:36 111  ,gbp_g23
21:25:36 112  ,gbp_g24
21:25:36 113  ,gbp_g25
21:25:36 114  ,gbp_g26
21:25:36 115  ,gbp_g27
21:25:36 116  ,gbp_g28
21:25:36 117  ,gbp_g29
21:25:36 118  ,gbp_g30
21:25:36 119  ,gbp_g31
21:25:36 120  ,gbp_g32
21:25:36 121  ,gbp_g33
21:25:36 122  ,gbp_g34
21:25:36 123  ,gbp_g35
21:25:36 124  ,gbp_g36
21:25:36 125  ,gbp_g37
21:25:36 126  ,gbp_g38
21:25:36 127  ,gbp_g39
21:25:36 128  ,gbp_g40
21:25:36 129  ,jpy_g00
21:25:36 130  ,jpy_g01
21:25:36 131  ,jpy_g02
21:25:36 132  ,jpy_g03
21:25:36 133  ,jpy_g04
21:25:36 134  ,jpy_g05
21:25:36 135  ,jpy_g06
21:25:36 136  ,jpy_g07
21:25:36 137  ,jpy_g08
21:25:36 138  ,jpy_g09
21:25:36 139  ,jpy_g10
21:25:36 140  ,jpy_g11
21:25:36 141  ,jpy_g12
21:25:36 142  ,jpy_g13
21:25:36 143  ,jpy_g14
21:25:36 144  ,jpy_g15
21:25:36 145  ,jpy_g16
21:25:36 146  ,jpy_g17
21:25:36 147  ,jpy_g18
21:25:36 148  ,jpy_g19
21:25:36 149  ,jpy_g20
21:25:36 150  ,jpy_g21
21:25:36 151  ,jpy_g22
21:25:36 152  ,jpy_g23
21:25:36 153  ,jpy_g24
21:25:36 154  ,jpy_g25
21:25:36 155  ,jpy_g26
21:25:36 156  ,jpy_g27
21:25:36 157  ,jpy_g28
21:25:36 158  ,jpy_g29
21:25:36 159  ,jpy_g30
21:25:36 160  ,jpy_g31
21:25:36 161  ,jpy_g32
21:25:36 162  ,jpy_g33
21:25:36 163  ,jpy_g34
21:25:36 164  ,jpy_g35
21:25:36 165  ,jpy_g36
21:25:36 166  ,jpy_g37
21:25:36 167  ,jpy_g38
21:25:36 168  ,jpy_g39
21:25:36 169  ,jpy_g40
21:25:36 170  ,cad_g00
21:25:36 171  ,cad_g01
21:25:36 172  ,cad_g02
21:25:36 173  ,cad_g03
21:25:36 174  ,cad_g04
21:25:36 175  ,cad_g05
21:25:36 176  ,cad_g06
21:25:36 177  ,cad_g07
21:25:36 178  ,cad_g08
21:25:36 179  ,cad_g09
21:25:36 180  ,cad_g10
21:25:36 181  ,cad_g11
21:25:36 182  ,cad_g12
21:25:36 183  ,cad_g13
21:25:36 184  ,cad_g14
21:25:36 185  ,cad_g15
21:25:36 186  ,cad_g16
21:25:36 187  ,cad_g17
21:25:36 188  ,cad_g18
21:25:36 189  ,cad_g19
21:25:36 190  ,cad_g20
21:25:36 191  ,cad_g21
21:25:36 192  ,cad_g22
21:25:36 193  ,cad_g23
21:25:36 194  ,cad_g24
21:25:36 195  ,cad_g25
21:25:36 196  ,cad_g26
21:25:36 197  ,cad_g27
21:25:36 198  ,cad_g28
21:25:36 199  ,cad_g29
21:25:36 200  ,cad_g30
21:25:36 201  ,cad_g31
21:25:36 202  ,cad_g32
21:25:36 203  ,cad_g33
21:25:36 204  ,cad_g34
21:25:36 205  ,cad_g35
21:25:36 206  ,cad_g36
21:25:36 207  ,cad_g37
21:25:36 208  ,cad_g38
21:25:36 209  ,cad_g39
21:25:36 210  ,cad_g40
21:25:36 211  ,chf_g00
21:25:36 212  ,chf_g01
21:25:36 213  ,chf_g02
21:25:36 214  ,chf_g03
21:25:36 215  ,chf_g04
21:25:36 216  ,chf_g05
21:25:36 217  ,chf_g06
21:25:36 218  ,chf_g07
21:25:36 219  ,chf_g08
21:25:36 220  ,chf_g09
21:25:36 221  ,chf_g10
21:25:36 222  ,chf_g11
21:25:36 223  ,chf_g12
21:25:36 224  ,chf_g13
21:25:36 225  ,chf_g14
21:25:36 226  ,chf_g15
21:25:36 227  ,chf_g16
21:25:36 228  ,chf_g17
21:25:36 229  ,chf_g18
21:25:36 230  ,chf_g19
21:25:36 231  ,chf_g20
21:25:36 232  ,chf_g21
21:25:36 233  ,chf_g22
21:25:36 234  ,chf_g23
21:25:36 235  ,chf_g24
21:25:36 236  ,chf_g25
21:25:36 237  ,chf_g26
21:25:36 238  ,chf_g27
21:25:36 239  ,chf_g28
21:25:36 240  ,chf_g29
21:25:36 241  ,chf_g30
21:25:36 242  ,chf_g31
21:25:36 243  ,chf_g32
21:25:36 244  ,chf_g33
21:25:36 245  ,chf_g34
21:25:36 246  ,chf_g35
21:25:36 247  ,chf_g36
21:25:36 248  ,chf_g37
21:25:36 249  ,chf_g38
21:25:36 250  ,chf_g39
21:25:36 251  ,chf_g40
21:25:36 252  FROM chf_ms14 m
21:25:36 253  WHERE m.ydate = '&1'||' '||'&2'
21:25:36 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'11:25:00'

View created.

Elapsed: 00:00:00.12
21:25:36 SQL> 
21:25:36 SQL> -- rpt
21:25:36 SQL> -- We should see just 1 row:
21:25:36 SQL> 
21:25:36 SQL> SELECT COUNT(prdate) FROM sme
21:25:36   2  
21:25:36 SQL> -- Build the model:
21:25:36 SQL> CREATE OR REPLACE VIEW bme AS
21:25:36   2  SELECT
21:25:36   3  'chf'||m.ydate prdate
21:25:36   4  ,gattn
21:25:36   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:25:36   6  ,eur_g00
21:25:36   7  ,eur_g01
21:25:36   8  ,eur_g02
21:25:36   9  ,eur_g03
21:25:36  10  ,eur_g04
21:25:36  11  ,eur_g05
21:25:36  12  ,eur_g06
21:25:36  13  ,eur_g07
21:25:36  14  ,eur_g08
21:25:36  15  ,eur_g09
21:25:36  16  ,eur_g10
21:25:36  17  ,eur_g11
21:25:36  18  ,eur_g12
21:25:36  19  ,eur_g13
21:25:36  20  ,eur_g14
21:25:36  21  ,eur_g15
21:25:36  22  ,eur_g16
21:25:36  23  ,eur_g17
21:25:36  24  ,eur_g18
21:25:36  25  ,eur_g19
21:25:36  26  ,eur_g20
21:25:36  27  ,eur_g21
21:25:36  28  ,eur_g22
21:25:36  29  ,eur_g23
21:25:36  30  ,eur_g24
21:25:36  31  ,eur_g25
21:25:36  32  ,eur_g26
21:25:36  33  ,eur_g27
21:25:36  34  ,eur_g28
21:25:36  35  ,eur_g29
21:25:36  36  ,eur_g30
21:25:36  37  ,eur_g31
21:25:36  38  ,eur_g32
21:25:36  39  ,eur_g33
21:25:36  40  ,eur_g34
21:25:36  41  ,eur_g35
21:25:36  42  ,eur_g36
21:25:36  43  ,eur_g37
21:25:36  44  ,eur_g38
21:25:36  45  ,eur_g39
21:25:36  46  ,eur_g40
21:25:36  47  ,aud_g00
21:25:36  48  ,aud_g01
21:25:36  49  ,aud_g02
21:25:36  50  ,aud_g03
21:25:36  51  ,aud_g04
21:25:36  52  ,aud_g05
21:25:36  53  ,aud_g06
21:25:36  54  ,aud_g07
21:25:36  55  ,aud_g08
21:25:36  56  ,aud_g09
21:25:36  57  ,aud_g10
21:25:36  58  ,aud_g11
21:25:36  59  ,aud_g12
21:25:36  60  ,aud_g13
21:25:36  61  ,aud_g14
21:25:36  62  ,aud_g15
21:25:36  63  ,aud_g16
21:25:36  64  ,aud_g17
21:25:36  65  ,aud_g18
21:25:36  66  ,aud_g19
21:25:36  67  ,aud_g20
21:25:36  68  ,aud_g21
21:25:36  69  ,aud_g22
21:25:36  70  ,aud_g23
21:25:36  71  ,aud_g24
21:25:36  72  ,aud_g25
21:25:36  73  ,aud_g26
21:25:36  74  ,aud_g27
21:25:36  75  ,aud_g28
21:25:36  76  ,aud_g29
21:25:36  77  ,aud_g30
21:25:36  78  ,aud_g31
21:25:36  79  ,aud_g32
21:25:36  80  ,aud_g33
21:25:36  81  ,aud_g34
21:25:36  82  ,aud_g35
21:25:36  83  ,aud_g36
21:25:36  84  ,aud_g37
21:25:36  85  ,aud_g38
21:25:36  86  ,aud_g39
21:25:36  87  ,aud_g40
21:25:36  88  ,gbp_g00
21:25:36  89  ,gbp_g01
21:25:36  90  ,gbp_g02
21:25:36  91  ,gbp_g03
21:25:36  92  ,gbp_g04
21:25:36  93  ,gbp_g05
21:25:36  94  ,gbp_g06
21:25:36  95  ,gbp_g07
21:25:36  96  ,gbp_g08
21:25:36  97  ,gbp_g09
21:25:36  98  ,gbp_g10
21:25:36  99  ,gbp_g11
21:25:36 100  ,gbp_g12
21:25:36 101  ,gbp_g13
21:25:36 102  ,gbp_g14
21:25:36 103  ,gbp_g15
21:25:36 104  ,gbp_g16
21:25:36 105  ,gbp_g17
21:25:36 106  ,gbp_g18
21:25:36 107  ,gbp_g19
21:25:36 108  ,gbp_g20
21:25:36 109  ,gbp_g21
21:25:36 110  ,gbp_g22
21:25:36 111  ,gbp_g23
21:25:36 112  ,gbp_g24
21:25:36 113  ,gbp_g25
21:25:36 114  ,gbp_g26
21:25:36 115  ,gbp_g27
21:25:36 116  ,gbp_g28
21:25:36 117  ,gbp_g29
21:25:36 118  ,gbp_g30
21:25:36 119  ,gbp_g31
21:25:36 120  ,gbp_g32
21:25:36 121  ,gbp_g33
21:25:36 122  ,gbp_g34
21:25:36 123  ,gbp_g35
21:25:36 124  ,gbp_g36
21:25:36 125  ,gbp_g37
21:25:36 126  ,gbp_g38
21:25:36 127  ,gbp_g39
21:25:36 128  ,gbp_g40
21:25:36 129  ,jpy_g00
21:25:36 130  ,jpy_g01
21:25:36 131  ,jpy_g02
21:25:36 132  ,jpy_g03
21:25:36 133  ,jpy_g04
21:25:36 134  ,jpy_g05
21:25:36 135  ,jpy_g06
21:25:36 136  ,jpy_g07
21:25:36 137  ,jpy_g08
21:25:36 138  ,jpy_g09
21:25:36 139  ,jpy_g10
21:25:36 140  ,jpy_g11
21:25:36 141  ,jpy_g12
21:25:36 142  ,jpy_g13
21:25:36 143  ,jpy_g14
21:25:36 144  ,jpy_g15
21:25:36 145  ,jpy_g16
21:25:36 146  ,jpy_g17
21:25:36 147  ,jpy_g18
21:25:36 148  ,jpy_g19
21:25:36 149  ,jpy_g20
21:25:36 150  ,jpy_g21
21:25:36 151  ,jpy_g22
21:25:36 152  ,jpy_g23
21:25:36 153  ,jpy_g24
21:25:36 154  ,jpy_g25
21:25:36 155  ,jpy_g26
21:25:36 156  ,jpy_g27
21:25:36 157  ,jpy_g28
21:25:36 158  ,jpy_g29
21:25:36 159  ,jpy_g30
21:25:36 160  ,jpy_g31
21:25:36 161  ,jpy_g32
21:25:36 162  ,jpy_g33
21:25:36 163  ,jpy_g34
21:25:36 164  ,jpy_g35
21:25:36 165  ,jpy_g36
21:25:36 166  ,jpy_g37
21:25:36 167  ,jpy_g38
21:25:36 168  ,jpy_g39
21:25:36 169  ,jpy_g40
21:25:36 170  ,cad_g00
21:25:36 171  ,cad_g01
21:25:36 172  ,cad_g02
21:25:36 173  ,cad_g03
21:25:36 174  ,cad_g04
21:25:36 175  ,cad_g05
21:25:36 176  ,cad_g06
21:25:36 177  ,cad_g07
21:25:36 178  ,cad_g08
21:25:36 179  ,cad_g09
21:25:36 180  ,cad_g10
21:25:36 181  ,cad_g11
21:25:36 182  ,cad_g12
21:25:36 183  ,cad_g13
21:25:36 184  ,cad_g14
21:25:36 185  ,cad_g15
21:25:36 186  ,cad_g16
21:25:36 187  ,cad_g17
21:25:36 188  ,cad_g18
21:25:36 189  ,cad_g19
21:25:36 190  ,cad_g20
21:25:36 191  ,cad_g21
21:25:36 192  ,cad_g22
21:25:36 193  ,cad_g23
21:25:36 194  ,cad_g24
21:25:36 195  ,cad_g25
21:25:36 196  ,cad_g26
21:25:36 197  ,cad_g27
21:25:36 198  ,cad_g28
21:25:36 199  ,cad_g29
21:25:36 200  ,cad_g30
21:25:36 201  ,cad_g31
21:25:36 202  ,cad_g32
21:25:36 203  ,cad_g33
21:25:36 204  ,cad_g34
21:25:36 205  ,cad_g35
21:25:36 206  ,cad_g36
21:25:36 207  ,cad_g37
21:25:36 208  ,cad_g38
21:25:36 209  ,cad_g39
21:25:36 210  ,cad_g40
21:25:36 211  ,chf_g00
21:25:36 212  ,chf_g01
21:25:36 213  ,chf_g02
21:25:36 214  ,chf_g03
21:25:36 215  ,chf_g04
21:25:36 216  ,chf_g05
21:25:36 217  ,chf_g06
21:25:36 218  ,chf_g07
21:25:36 219  ,chf_g08
21:25:36 220  ,chf_g09
21:25:36 221  ,chf_g10
21:25:36 222  ,chf_g11
21:25:36 223  ,chf_g12
21:25:36 224  ,chf_g13
21:25:36 225  ,chf_g14
21:25:36 226  ,chf_g15
21:25:36 227  ,chf_g16
21:25:36 228  ,chf_g17
21:25:36 229  ,chf_g18
21:25:36 230  ,chf_g19
21:25:36 231  ,chf_g20
21:25:36 232  ,chf_g21
21:25:36 233  ,chf_g22
21:25:36 234  ,chf_g23
21:25:36 235  ,chf_g24
21:25:36 236  ,chf_g25
21:25:36 237  ,chf_g26
21:25:36 238  ,chf_g27
21:25:36 239  ,chf_g28
21:25:36 240  ,chf_g29
21:25:36 241  ,chf_g30
21:25:36 242  ,chf_g31
21:25:36 243  ,chf_g32
21:25:36 244  ,chf_g33
21:25:36 245  ,chf_g34
21:25:36 246  ,chf_g35
21:25:36 247  ,chf_g36
21:25:36 248  ,chf_g37
21:25:36 249  ,chf_g38
21:25:36 250  ,chf_g39
21:25:36 251  ,chf_g40
21:25:36 252  FROM chf_ms14 m
21:25:36 253  WHERE gattn IN('nup','up')
21:25:36 254  AND 1+m.ydate < '&1'||' '||'&2'
21:25:36 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'11:25:00'

View created.

Elapsed: 00:00:00.12
21:25:36 SQL> 
21:25:36 SQL> -- rpt
21:25:36 SQL> 
21:25:36 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:25:36   2  
21:25:36 SQL> SELECT MAX(prdate) FROM bme
21:25:36   2  
21:25:36 SQL> -- Now build model from bme and score sme
21:25:36 SQL> @score1gattn.sql
21:25:36 SQL> -- score1gattn.sql
21:25:36 SQL> 
21:25:36 SQL> -- Does the 1st SVM score
21:25:36 SQL> 
21:25:36 SQL> -- Fill up svmc_apply_prep
21:25:36 SQL> @score_gattn.sql
21:25:36 SQL> --
21:25:36 SQL> -- score_gattn.sql
21:25:36 SQL> --
21:25:36 SQL> 
21:25:36 SQL> -- usage: score_gattn.sql
21:25:36 SQL> 
21:25:36 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:25:36 SQL> 
21:25:36 SQL> DEFINE target	= 'gattn'
21:25:36 SQL> DEFINE model_name = 'forex14'
21:25:36 SQL> DEFINE bldtable	= 'bme'
21:25:36 SQL> DEFINE scoretable = 'sme'
21:25:36 SQL> DEFINE case_id	= 'prdate'
21:25:36 SQL> 
21:25:36 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:25:36 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:25:36 SQL> 
21:25:36 SQL> -- Builds an SVM model using pl/sql.
21:25:36 SQL> 
21:25:36 SQL> -----------------------------------------------------------------------
21:25:36 SQL> --			    BUILD THE MODEL
21:25:36 SQL> -----------------------------------------------------------------------
21:25:36 SQL> 
21:25:36 SQL> -- Cleanup old build data preparation objects for repeat runs
21:25:36 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:25:36 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:25:36 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:25:36 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:25:36 SQL> 
21:25:36 SQL> 
21:25:36 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:25:36 SQL> --
21:25:36 SQL> -- DROP	TABLE svmc_settings ;
21:25:36 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:25:36 SQL> -- DELETE svmc_settings;
21:25:36 SQL> 
21:25:36 SQL> -- The default classification algorithm is Naive Bayes. So override
21:25:36 SQL> -- this choice to SVM using a settings table.
21:25:36 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:25:36 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:25:36 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:25:36 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:25:36 SQL> -- models.
21:25:36 SQL> --
21:25:36 SQL> 
21:25:36 SQL> -- Do this once and then comment it out.
21:25:36 SQL> -- That makes script go faster.
21:25:36 SQL> -- BEGIN
21:25:36 SQL> -- -- Populate settings table
21:25:36 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:25:36 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:25:36 SQL> --
21:25:36 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:25:36 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:25:36 SQL> --
21:25:36 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:25:36 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:25:36 SQL> --   COMMIT;
21:25:36 SQL> -- END;
21:25:36 SQL> -- /
21:25:36 SQL> 
21:25:36 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
21:25:36 SQL> 
21:25:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:25:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:25:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:25:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:25:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:25:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:25:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:25:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:25:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:25:36 SQL> 
21:25:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:25:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:25:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:25:36 SQL> 
21:25:36 SQL> --------------------------------
21:25:36 SQL> -- PREPARE BUILD (TRAINING) DATA
21:25:36 SQL> --
21:25:36 SQL> 
21:25:36 SQL> -- 1. Missing Value treatment for all Predictors and
21:25:36 SQL> -- 2. Outlier Treatment and
21:25:36 SQL> -- 3. Normalization are performed below.
21:25:36 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:25:36 SQL> --    normalized here.
21:25:36 SQL> 
21:25:36 SQL> BEGIN
21:25:36   2  	-- Perform missing value treatment for all predictors
21:25:36   3  	-- create miss tables
21:25:36   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:25:36   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:25:36   6  
21:25:36   7  	-- populate miss tables
21:25:36   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:25:36   9  	  miss_table_name => 'svmc_miss_num',
21:25:36  10  	  data_table_name => '&bldtable',
21:25:36  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:25:36  12  
21:25:36  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:25:36  14  	  miss_table_name => 'svmc_miss_cat',
21:25:36  15  	  data_table_name => '&bldtable',
21:25:36  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:25:36  17  
21:25:36  18  	-- xform input data to replace missing values
21:25:36  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:25:36  20  	  miss_table_name => 'svmc_miss_num',
21:25:36  21  	  data_table_name => '&bldtable',
21:25:36  22  	  xform_view_name => 'xformed_build_miss_num');
21:25:36  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:25:36  24  	  miss_table_name => 'svmc_miss_cat',
21:25:36  25  	  data_table_name => '&bldtable',
21:25:36  26  	  xform_view_name => 'xformed_build_miss_cat');
21:25:36  27  
21:25:36  28  	-- Perform outlier treatment.
21:25:36  29  	-- create clip table
21:25:36  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:25:36  31  
21:25:36  32  	-- populate clip table
21:25:36  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:25:36  34  	  clip_table_name => 'svmc_clip',
21:25:36  35  	  data_table_name => '&bldtable',
21:25:36  36  	  tail_frac	  => 0.025,
21:25:36  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:25:36  38  
21:25:36  39  	-- xform input data to winsorized data
21:25:36  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:25:36  41  	  clip_table_name => 'svmc_clip',
21:25:36  42  	  data_table_name => '&bldtable',
21:25:36  43  	  xform_view_name => 'svmc_winsor');
21:25:36  44  
21:25:36  45  	-- create normalization table
21:25:36  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:25:36  47  
21:25:36  48  	-- populate normalization table based on winsorized data
21:25:36  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:25:36  50  	  norm_table_name => 'svmc_norm',
21:25:36  51  	  data_table_name => 'svmc_winsor',
21:25:36  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:25:36  53  
21:25:36  54  	-- normalize the original data
21:25:36  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:25:36  56  	  norm_table_name => 'svmc_norm',
21:25:36  57  	  data_table_name => '&bldtable',
21:25:36  58  	  xform_view_name => 'svmc_build_prep');
21:25:36  59  END;
21:25:36  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.74
21:25:54 SQL> 
21:25:54 SQL> ---------------------
21:25:54 SQL> -- CREATE A NEW MODEL
21:25:54 SQL> --
21:25:54 SQL> -- Cleanup old model with the same name for repeat runs
21:25:54 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:25:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:25:54   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.01
21:25:55 SQL> 
21:25:55 SQL> -- Build a new SVM Model
21:25:55 SQL> BEGIN
21:25:55   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:25:55   3  	  model_name	      => '&model_name',
21:25:55   4  	  mining_function     => dbms_data_mining.classification,
21:25:55   5  	  data_table_name     => 'svmc_build_prep',
21:25:55   6  	  case_id_column_name => '&case_id',
21:25:55   7  	  target_column_name  => '&target',
21:25:55   8  	  settings_table_name => 'svmc_settings');
21:25:55   9  END;
21:25:55  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.89
21:26:22 SQL> 
21:26:22 SQL> -----------------------------------------------------------------------
21:26:22 SQL> --			       APPLY/score THE MODEL
21:26:22 SQL> -----------------------------------------------------------------------
21:26:22 SQL> 
21:26:22 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:26:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:26:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:26:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:26:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:26:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:26:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:26:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:26:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:26:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:26:22 SQL> -----------------------
21:26:22 SQL> -- PREPARE SCORING DATA
21:26:22 SQL> --
21:26:22 SQL> -- If the data for model creation has been prepared, then the data
21:26:22 SQL> -- to be scored using the model must be prepared in the same manner
21:26:22 SQL> -- in order to obtain meaningful results.
21:26:22 SQL> --
21:26:22 SQL> -- 1. Missing Value treatment for all Predictors and
21:26:22 SQL> -- 2. Normalization
21:26:22 SQL> -- No outlier treatment will be performed during test and apply. The
21:26:22 SQL> -- normalization step is sufficient, since the normalization parameters
21:26:22 SQL> -- already capture the effects of outlier treatment done with build data.
21:26:22 SQL> --
21:26:22 SQL> BEGIN
21:26:22   2  	-- Xform Test data to replace missing values
21:26:22   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:26:22   4  	  miss_table_name => 'svmc_miss_num',
21:26:22   5  	  data_table_name => '&scoretable',
21:26:22   6  	  xform_view_name => 'xformed_apply_miss_num');
21:26:22   7  
21:26:22   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:26:22   9  	  miss_table_name => 'svmc_miss_cat',
21:26:22  10  	  data_table_name => '&scoretable',
21:26:22  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:26:22  12  
21:26:22  13  	-- Normalize the data to be scored
21:26:22  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:26:22  15  	  norm_table_name => 'svmc_norm',
21:26:22  16  	  data_table_name => '&scoretable',
21:26:22  17  	  xform_view_name => 'svmc_apply_prep');
21:26:22  18  END;
21:26:22  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.12
21:26:23 SQL> 
21:26:23 SQL> -- Use same model_name used in score_gattn.sql
21:26:23 SQL> DEFINE model_name = 'forex14'
21:26:23 SQL> 
21:26:23 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:26:23 SQL> 
21:26:23 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:26:23   2  SELECT
21:26:23   3  prdate
21:26:23   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:26:23   5  ,sysdate
21:26:23   6  ,SUBSTR(prdate,1,3)pair
21:26:23   7  ,SUBSTR(prdate,4,19)ydate
21:26:23   8  FROM svmc_apply_prep
21:26:23   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:26:24 SQL> @chf_score1day_gattn.sql	2010-12-17 11:20:00
21:26:24 SQL> --
21:26:24 SQL> -- chf_score1day_gattn.sql
21:26:24 SQL> --
21:26:24 SQL> 
21:26:24 SQL> CREATE OR REPLACE VIEW sme AS
21:26:24   2  SELECT
21:26:24   3  'chf'||m.ydate prdate
21:26:24   4  ,NULL gattn
21:26:24   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:26:24   6  ,eur_g00
21:26:24   7  ,eur_g01
21:26:24   8  ,eur_g02
21:26:24   9  ,eur_g03
21:26:24  10  ,eur_g04
21:26:24  11  ,eur_g05
21:26:24  12  ,eur_g06
21:26:24  13  ,eur_g07
21:26:24  14  ,eur_g08
21:26:24  15  ,eur_g09
21:26:24  16  ,eur_g10
21:26:24  17  ,eur_g11
21:26:24  18  ,eur_g12
21:26:24  19  ,eur_g13
21:26:24  20  ,eur_g14
21:26:24  21  ,eur_g15
21:26:24  22  ,eur_g16
21:26:24  23  ,eur_g17
21:26:24  24  ,eur_g18
21:26:24  25  ,eur_g19
21:26:24  26  ,eur_g20
21:26:24  27  ,eur_g21
21:26:24  28  ,eur_g22
21:26:24  29  ,eur_g23
21:26:24  30  ,eur_g24
21:26:24  31  ,eur_g25
21:26:24  32  ,eur_g26
21:26:24  33  ,eur_g27
21:26:24  34  ,eur_g28
21:26:24  35  ,eur_g29
21:26:24  36  ,eur_g30
21:26:24  37  ,eur_g31
21:26:24  38  ,eur_g32
21:26:24  39  ,eur_g33
21:26:24  40  ,eur_g34
21:26:24  41  ,eur_g35
21:26:24  42  ,eur_g36
21:26:24  43  ,eur_g37
21:26:24  44  ,eur_g38
21:26:24  45  ,eur_g39
21:26:24  46  ,eur_g40
21:26:24  47  ,aud_g00
21:26:24  48  ,aud_g01
21:26:24  49  ,aud_g02
21:26:24  50  ,aud_g03
21:26:24  51  ,aud_g04
21:26:24  52  ,aud_g05
21:26:24  53  ,aud_g06
21:26:24  54  ,aud_g07
21:26:24  55  ,aud_g08
21:26:24  56  ,aud_g09
21:26:24  57  ,aud_g10
21:26:24  58  ,aud_g11
21:26:24  59  ,aud_g12
21:26:24  60  ,aud_g13
21:26:24  61  ,aud_g14
21:26:24  62  ,aud_g15
21:26:24  63  ,aud_g16
21:26:24  64  ,aud_g17
21:26:24  65  ,aud_g18
21:26:24  66  ,aud_g19
21:26:24  67  ,aud_g20
21:26:24  68  ,aud_g21
21:26:24  69  ,aud_g22
21:26:24  70  ,aud_g23
21:26:24  71  ,aud_g24
21:26:24  72  ,aud_g25
21:26:24  73  ,aud_g26
21:26:24  74  ,aud_g27
21:26:24  75  ,aud_g28
21:26:24  76  ,aud_g29
21:26:24  77  ,aud_g30
21:26:24  78  ,aud_g31
21:26:24  79  ,aud_g32
21:26:24  80  ,aud_g33
21:26:24  81  ,aud_g34
21:26:24  82  ,aud_g35
21:26:24  83  ,aud_g36
21:26:24  84  ,aud_g37
21:26:24  85  ,aud_g38
21:26:24  86  ,aud_g39
21:26:24  87  ,aud_g40
21:26:24  88  ,gbp_g00
21:26:24  89  ,gbp_g01
21:26:24  90  ,gbp_g02
21:26:24  91  ,gbp_g03
21:26:24  92  ,gbp_g04
21:26:24  93  ,gbp_g05
21:26:24  94  ,gbp_g06
21:26:24  95  ,gbp_g07
21:26:24  96  ,gbp_g08
21:26:24  97  ,gbp_g09
21:26:24  98  ,gbp_g10
21:26:24  99  ,gbp_g11
21:26:24 100  ,gbp_g12
21:26:24 101  ,gbp_g13
21:26:24 102  ,gbp_g14
21:26:24 103  ,gbp_g15
21:26:24 104  ,gbp_g16
21:26:24 105  ,gbp_g17
21:26:24 106  ,gbp_g18
21:26:24 107  ,gbp_g19
21:26:24 108  ,gbp_g20
21:26:24 109  ,gbp_g21
21:26:24 110  ,gbp_g22
21:26:24 111  ,gbp_g23
21:26:24 112  ,gbp_g24
21:26:24 113  ,gbp_g25
21:26:24 114  ,gbp_g26
21:26:24 115  ,gbp_g27
21:26:24 116  ,gbp_g28
21:26:24 117  ,gbp_g29
21:26:24 118  ,gbp_g30
21:26:24 119  ,gbp_g31
21:26:24 120  ,gbp_g32
21:26:24 121  ,gbp_g33
21:26:24 122  ,gbp_g34
21:26:24 123  ,gbp_g35
21:26:24 124  ,gbp_g36
21:26:24 125  ,gbp_g37
21:26:24 126  ,gbp_g38
21:26:24 127  ,gbp_g39
21:26:24 128  ,gbp_g40
21:26:24 129  ,jpy_g00
21:26:24 130  ,jpy_g01
21:26:24 131  ,jpy_g02
21:26:24 132  ,jpy_g03
21:26:24 133  ,jpy_g04
21:26:24 134  ,jpy_g05
21:26:24 135  ,jpy_g06
21:26:24 136  ,jpy_g07
21:26:24 137  ,jpy_g08
21:26:24 138  ,jpy_g09
21:26:24 139  ,jpy_g10
21:26:24 140  ,jpy_g11
21:26:24 141  ,jpy_g12
21:26:24 142  ,jpy_g13
21:26:24 143  ,jpy_g14
21:26:24 144  ,jpy_g15
21:26:24 145  ,jpy_g16
21:26:24 146  ,jpy_g17
21:26:24 147  ,jpy_g18
21:26:24 148  ,jpy_g19
21:26:24 149  ,jpy_g20
21:26:24 150  ,jpy_g21
21:26:24 151  ,jpy_g22
21:26:24 152  ,jpy_g23
21:26:24 153  ,jpy_g24
21:26:24 154  ,jpy_g25
21:26:24 155  ,jpy_g26
21:26:24 156  ,jpy_g27
21:26:24 157  ,jpy_g28
21:26:24 158  ,jpy_g29
21:26:24 159  ,jpy_g30
21:26:24 160  ,jpy_g31
21:26:24 161  ,jpy_g32
21:26:24 162  ,jpy_g33
21:26:24 163  ,jpy_g34
21:26:24 164  ,jpy_g35
21:26:24 165  ,jpy_g36
21:26:24 166  ,jpy_g37
21:26:24 167  ,jpy_g38
21:26:24 168  ,jpy_g39
21:26:24 169  ,jpy_g40
21:26:24 170  ,cad_g00
21:26:24 171  ,cad_g01
21:26:24 172  ,cad_g02
21:26:24 173  ,cad_g03
21:26:24 174  ,cad_g04
21:26:24 175  ,cad_g05
21:26:24 176  ,cad_g06
21:26:24 177  ,cad_g07
21:26:24 178  ,cad_g08
21:26:24 179  ,cad_g09
21:26:24 180  ,cad_g10
21:26:24 181  ,cad_g11
21:26:24 182  ,cad_g12
21:26:24 183  ,cad_g13
21:26:24 184  ,cad_g14
21:26:24 185  ,cad_g15
21:26:24 186  ,cad_g16
21:26:24 187  ,cad_g17
21:26:24 188  ,cad_g18
21:26:24 189  ,cad_g19
21:26:24 190  ,cad_g20
21:26:24 191  ,cad_g21
21:26:24 192  ,cad_g22
21:26:24 193  ,cad_g23
21:26:24 194  ,cad_g24
21:26:24 195  ,cad_g25
21:26:24 196  ,cad_g26
21:26:24 197  ,cad_g27
21:26:24 198  ,cad_g28
21:26:24 199  ,cad_g29
21:26:24 200  ,cad_g30
21:26:24 201  ,cad_g31
21:26:24 202  ,cad_g32
21:26:24 203  ,cad_g33
21:26:24 204  ,cad_g34
21:26:24 205  ,cad_g35
21:26:24 206  ,cad_g36
21:26:24 207  ,cad_g37
21:26:24 208  ,cad_g38
21:26:24 209  ,cad_g39
21:26:24 210  ,cad_g40
21:26:24 211  ,chf_g00
21:26:24 212  ,chf_g01
21:26:24 213  ,chf_g02
21:26:24 214  ,chf_g03
21:26:24 215  ,chf_g04
21:26:24 216  ,chf_g05
21:26:24 217  ,chf_g06
21:26:24 218  ,chf_g07
21:26:24 219  ,chf_g08
21:26:24 220  ,chf_g09
21:26:24 221  ,chf_g10
21:26:24 222  ,chf_g11
21:26:24 223  ,chf_g12
21:26:24 224  ,chf_g13
21:26:24 225  ,chf_g14
21:26:24 226  ,chf_g15
21:26:24 227  ,chf_g16
21:26:24 228  ,chf_g17
21:26:24 229  ,chf_g18
21:26:24 230  ,chf_g19
21:26:24 231  ,chf_g20
21:26:24 232  ,chf_g21
21:26:24 233  ,chf_g22
21:26:24 234  ,chf_g23
21:26:24 235  ,chf_g24
21:26:24 236  ,chf_g25
21:26:24 237  ,chf_g26
21:26:24 238  ,chf_g27
21:26:24 239  ,chf_g28
21:26:24 240  ,chf_g29
21:26:24 241  ,chf_g30
21:26:24 242  ,chf_g31
21:26:24 243  ,chf_g32
21:26:24 244  ,chf_g33
21:26:24 245  ,chf_g34
21:26:24 246  ,chf_g35
21:26:24 247  ,chf_g36
21:26:24 248  ,chf_g37
21:26:24 249  ,chf_g38
21:26:24 250  ,chf_g39
21:26:24 251  ,chf_g40
21:26:24 252  FROM chf_ms14 m
21:26:24 253  WHERE m.ydate = '&1'||' '||'&2'
21:26:24 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'11:20:00'

View created.

Elapsed: 00:00:00.11
21:26:24 SQL> 
21:26:24 SQL> -- rpt
21:26:24 SQL> -- We should see just 1 row:
21:26:24 SQL> 
21:26:24 SQL> SELECT COUNT(prdate) FROM sme
21:26:24   2  
21:26:24 SQL> -- Build the model:
21:26:24 SQL> CREATE OR REPLACE VIEW bme AS
21:26:24   2  SELECT
21:26:24   3  'chf'||m.ydate prdate
21:26:24   4  ,gattn
21:26:24   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:26:24   6  ,eur_g00
21:26:24   7  ,eur_g01
21:26:24   8  ,eur_g02
21:26:24   9  ,eur_g03
21:26:24  10  ,eur_g04
21:26:24  11  ,eur_g05
21:26:24  12  ,eur_g06
21:26:24  13  ,eur_g07
21:26:24  14  ,eur_g08
21:26:24  15  ,eur_g09
21:26:24  16  ,eur_g10
21:26:24  17  ,eur_g11
21:26:24  18  ,eur_g12
21:26:24  19  ,eur_g13
21:26:24  20  ,eur_g14
21:26:24  21  ,eur_g15
21:26:24  22  ,eur_g16
21:26:24  23  ,eur_g17
21:26:24  24  ,eur_g18
21:26:24  25  ,eur_g19
21:26:24  26  ,eur_g20
21:26:24  27  ,eur_g21
21:26:24  28  ,eur_g22
21:26:24  29  ,eur_g23
21:26:24  30  ,eur_g24
21:26:24  31  ,eur_g25
21:26:24  32  ,eur_g26
21:26:24  33  ,eur_g27
21:26:24  34  ,eur_g28
21:26:24  35  ,eur_g29
21:26:24  36  ,eur_g30
21:26:24  37  ,eur_g31
21:26:24  38  ,eur_g32
21:26:24  39  ,eur_g33
21:26:24  40  ,eur_g34
21:26:24  41  ,eur_g35
21:26:24  42  ,eur_g36
21:26:24  43  ,eur_g37
21:26:24  44  ,eur_g38
21:26:24  45  ,eur_g39
21:26:24  46  ,eur_g40
21:26:24  47  ,aud_g00
21:26:24  48  ,aud_g01
21:26:24  49  ,aud_g02
21:26:24  50  ,aud_g03
21:26:24  51  ,aud_g04
21:26:24  52  ,aud_g05
21:26:24  53  ,aud_g06
21:26:24  54  ,aud_g07
21:26:24  55  ,aud_g08
21:26:24  56  ,aud_g09
21:26:24  57  ,aud_g10
21:26:24  58  ,aud_g11
21:26:24  59  ,aud_g12
21:26:24  60  ,aud_g13
21:26:24  61  ,aud_g14
21:26:24  62  ,aud_g15
21:26:24  63  ,aud_g16
21:26:24  64  ,aud_g17
21:26:24  65  ,aud_g18
21:26:24  66  ,aud_g19
21:26:24  67  ,aud_g20
21:26:24  68  ,aud_g21
21:26:24  69  ,aud_g22
21:26:24  70  ,aud_g23
21:26:24  71  ,aud_g24
21:26:24  72  ,aud_g25
21:26:24  73  ,aud_g26
21:26:24  74  ,aud_g27
21:26:24  75  ,aud_g28
21:26:24  76  ,aud_g29
21:26:24  77  ,aud_g30
21:26:24  78  ,aud_g31
21:26:24  79  ,aud_g32
21:26:24  80  ,aud_g33
21:26:24  81  ,aud_g34
21:26:24  82  ,aud_g35
21:26:24  83  ,aud_g36
21:26:24  84  ,aud_g37
21:26:24  85  ,aud_g38
21:26:24  86  ,aud_g39
21:26:24  87  ,aud_g40
21:26:24  88  ,gbp_g00
21:26:24  89  ,gbp_g01
21:26:24  90  ,gbp_g02
21:26:24  91  ,gbp_g03
21:26:24  92  ,gbp_g04
21:26:24  93  ,gbp_g05
21:26:24  94  ,gbp_g06
21:26:24  95  ,gbp_g07
21:26:24  96  ,gbp_g08
21:26:24  97  ,gbp_g09
21:26:24  98  ,gbp_g10
21:26:24  99  ,gbp_g11
21:26:24 100  ,gbp_g12
21:26:24 101  ,gbp_g13
21:26:24 102  ,gbp_g14
21:26:24 103  ,gbp_g15
21:26:24 104  ,gbp_g16
21:26:24 105  ,gbp_g17
21:26:24 106  ,gbp_g18
21:26:24 107  ,gbp_g19
21:26:24 108  ,gbp_g20
21:26:24 109  ,gbp_g21
21:26:24 110  ,gbp_g22
21:26:24 111  ,gbp_g23
21:26:24 112  ,gbp_g24
21:26:24 113  ,gbp_g25
21:26:24 114  ,gbp_g26
21:26:24 115  ,gbp_g27
21:26:24 116  ,gbp_g28
21:26:24 117  ,gbp_g29
21:26:24 118  ,gbp_g30
21:26:24 119  ,gbp_g31
21:26:24 120  ,gbp_g32
21:26:24 121  ,gbp_g33
21:26:24 122  ,gbp_g34
21:26:24 123  ,gbp_g35
21:26:24 124  ,gbp_g36
21:26:24 125  ,gbp_g37
21:26:24 126  ,gbp_g38
21:26:24 127  ,gbp_g39
21:26:24 128  ,gbp_g40
21:26:24 129  ,jpy_g00
21:26:24 130  ,jpy_g01
21:26:24 131  ,jpy_g02
21:26:24 132  ,jpy_g03
21:26:24 133  ,jpy_g04
21:26:24 134  ,jpy_g05
21:26:24 135  ,jpy_g06
21:26:24 136  ,jpy_g07
21:26:24 137  ,jpy_g08
21:26:24 138  ,jpy_g09
21:26:24 139  ,jpy_g10
21:26:24 140  ,jpy_g11
21:26:24 141  ,jpy_g12
21:26:24 142  ,jpy_g13
21:26:24 143  ,jpy_g14
21:26:24 144  ,jpy_g15
21:26:24 145  ,jpy_g16
21:26:24 146  ,jpy_g17
21:26:24 147  ,jpy_g18
21:26:24 148  ,jpy_g19
21:26:24 149  ,jpy_g20
21:26:24 150  ,jpy_g21
21:26:24 151  ,jpy_g22
21:26:24 152  ,jpy_g23
21:26:24 153  ,jpy_g24
21:26:24 154  ,jpy_g25
21:26:24 155  ,jpy_g26
21:26:24 156  ,jpy_g27
21:26:24 157  ,jpy_g28
21:26:24 158  ,jpy_g29
21:26:24 159  ,jpy_g30
21:26:24 160  ,jpy_g31
21:26:24 161  ,jpy_g32
21:26:24 162  ,jpy_g33
21:26:24 163  ,jpy_g34
21:26:24 164  ,jpy_g35
21:26:24 165  ,jpy_g36
21:26:24 166  ,jpy_g37
21:26:24 167  ,jpy_g38
21:26:24 168  ,jpy_g39
21:26:24 169  ,jpy_g40
21:26:24 170  ,cad_g00
21:26:24 171  ,cad_g01
21:26:24 172  ,cad_g02
21:26:24 173  ,cad_g03
21:26:24 174  ,cad_g04
21:26:24 175  ,cad_g05
21:26:24 176  ,cad_g06
21:26:24 177  ,cad_g07
21:26:24 178  ,cad_g08
21:26:24 179  ,cad_g09
21:26:24 180  ,cad_g10
21:26:24 181  ,cad_g11
21:26:24 182  ,cad_g12
21:26:24 183  ,cad_g13
21:26:24 184  ,cad_g14
21:26:24 185  ,cad_g15
21:26:24 186  ,cad_g16
21:26:24 187  ,cad_g17
21:26:24 188  ,cad_g18
21:26:24 189  ,cad_g19
21:26:24 190  ,cad_g20
21:26:24 191  ,cad_g21
21:26:24 192  ,cad_g22
21:26:24 193  ,cad_g23
21:26:24 194  ,cad_g24
21:26:24 195  ,cad_g25
21:26:24 196  ,cad_g26
21:26:24 197  ,cad_g27
21:26:24 198  ,cad_g28
21:26:24 199  ,cad_g29
21:26:24 200  ,cad_g30
21:26:24 201  ,cad_g31
21:26:24 202  ,cad_g32
21:26:24 203  ,cad_g33
21:26:24 204  ,cad_g34
21:26:24 205  ,cad_g35
21:26:24 206  ,cad_g36
21:26:24 207  ,cad_g37
21:26:24 208  ,cad_g38
21:26:24 209  ,cad_g39
21:26:24 210  ,cad_g40
21:26:24 211  ,chf_g00
21:26:24 212  ,chf_g01
21:26:24 213  ,chf_g02
21:26:24 214  ,chf_g03
21:26:24 215  ,chf_g04
21:26:24 216  ,chf_g05
21:26:24 217  ,chf_g06
21:26:24 218  ,chf_g07
21:26:24 219  ,chf_g08
21:26:24 220  ,chf_g09
21:26:24 221  ,chf_g10
21:26:24 222  ,chf_g11
21:26:24 223  ,chf_g12
21:26:24 224  ,chf_g13
21:26:24 225  ,chf_g14
21:26:24 226  ,chf_g15
21:26:24 227  ,chf_g16
21:26:24 228  ,chf_g17
21:26:24 229  ,chf_g18
21:26:24 230  ,chf_g19
21:26:24 231  ,chf_g20
21:26:24 232  ,chf_g21
21:26:24 233  ,chf_g22
21:26:24 234  ,chf_g23
21:26:24 235  ,chf_g24
21:26:24 236  ,chf_g25
21:26:24 237  ,chf_g26
21:26:24 238  ,chf_g27
21:26:24 239  ,chf_g28
21:26:24 240  ,chf_g29
21:26:24 241  ,chf_g30
21:26:24 242  ,chf_g31
21:26:24 243  ,chf_g32
21:26:24 244  ,chf_g33
21:26:24 245  ,chf_g34
21:26:24 246  ,chf_g35
21:26:24 247  ,chf_g36
21:26:24 248  ,chf_g37
21:26:24 249  ,chf_g38
21:26:24 250  ,chf_g39
21:26:24 251  ,chf_g40
21:26:24 252  FROM chf_ms14 m
21:26:24 253  WHERE gattn IN('nup','up')
21:26:24 254  AND 1+m.ydate < '&1'||' '||'&2'
21:26:24 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'11:20:00'

View created.

Elapsed: 00:00:00.11
21:26:24 SQL> 
21:26:24 SQL> -- rpt
21:26:24 SQL> 
21:26:24 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:26:24   2  
21:26:24 SQL> SELECT MAX(prdate) FROM bme
21:26:24   2  
21:26:24 SQL> -- Now build model from bme and score sme
21:26:24 SQL> @score1gattn.sql
21:26:24 SQL> -- score1gattn.sql
21:26:24 SQL> 
21:26:24 SQL> -- Does the 1st SVM score
21:26:24 SQL> 
21:26:24 SQL> -- Fill up svmc_apply_prep
21:26:24 SQL> @score_gattn.sql
21:26:24 SQL> --
21:26:24 SQL> -- score_gattn.sql
21:26:24 SQL> --
21:26:24 SQL> 
21:26:24 SQL> -- usage: score_gattn.sql
21:26:24 SQL> 
21:26:24 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:26:24 SQL> 
21:26:24 SQL> DEFINE target	= 'gattn'
21:26:24 SQL> DEFINE model_name = 'forex14'
21:26:24 SQL> DEFINE bldtable	= 'bme'
21:26:24 SQL> DEFINE scoretable = 'sme'
21:26:24 SQL> DEFINE case_id	= 'prdate'
21:26:24 SQL> 
21:26:24 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:26:24 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:26:24 SQL> 
21:26:24 SQL> -- Builds an SVM model using pl/sql.
21:26:24 SQL> 
21:26:24 SQL> -----------------------------------------------------------------------
21:26:24 SQL> --			    BUILD THE MODEL
21:26:24 SQL> -----------------------------------------------------------------------
21:26:24 SQL> 
21:26:24 SQL> -- Cleanup old build data preparation objects for repeat runs
21:26:24 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:26:24 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:26:24 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:26:24 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:26:24 SQL> 
21:26:24 SQL> 
21:26:24 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:26:24 SQL> --
21:26:24 SQL> -- DROP	TABLE svmc_settings ;
21:26:24 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:26:24 SQL> -- DELETE svmc_settings;
21:26:24 SQL> 
21:26:24 SQL> -- The default classification algorithm is Naive Bayes. So override
21:26:24 SQL> -- this choice to SVM using a settings table.
21:26:24 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:26:24 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:26:24 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:26:24 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:26:24 SQL> -- models.
21:26:24 SQL> --
21:26:24 SQL> 
21:26:24 SQL> -- Do this once and then comment it out.
21:26:24 SQL> -- That makes script go faster.
21:26:24 SQL> -- BEGIN
21:26:24 SQL> -- -- Populate settings table
21:26:24 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:26:24 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:26:24 SQL> --
21:26:24 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:26:24 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:26:24 SQL> --
21:26:24 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:26:24 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:26:24 SQL> --   COMMIT;
21:26:24 SQL> -- END;
21:26:24 SQL> -- /
21:26:24 SQL> 
21:26:24 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:26:24 SQL> 
21:26:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:26:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:26:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:26:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:26:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:26:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:26:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:26:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:26:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:26:24 SQL> 
21:26:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:26:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:26:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:26:24 SQL> 
21:26:24 SQL> --------------------------------
21:26:24 SQL> -- PREPARE BUILD (TRAINING) DATA
21:26:24 SQL> --
21:26:24 SQL> 
21:26:24 SQL> -- 1. Missing Value treatment for all Predictors and
21:26:24 SQL> -- 2. Outlier Treatment and
21:26:24 SQL> -- 3. Normalization are performed below.
21:26:24 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:26:24 SQL> --    normalized here.
21:26:24 SQL> 
21:26:24 SQL> BEGIN
21:26:24   2  	-- Perform missing value treatment for all predictors
21:26:24   3  	-- create miss tables
21:26:24   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:26:24   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:26:24   6  
21:26:24   7  	-- populate miss tables
21:26:24   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:26:24   9  	  miss_table_name => 'svmc_miss_num',
21:26:24  10  	  data_table_name => '&bldtable',
21:26:24  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:26:24  12  
21:26:24  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:26:24  14  	  miss_table_name => 'svmc_miss_cat',
21:26:24  15  	  data_table_name => '&bldtable',
21:26:24  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:26:24  17  
21:26:24  18  	-- xform input data to replace missing values
21:26:24  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:26:24  20  	  miss_table_name => 'svmc_miss_num',
21:26:24  21  	  data_table_name => '&bldtable',
21:26:24  22  	  xform_view_name => 'xformed_build_miss_num');
21:26:24  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:26:24  24  	  miss_table_name => 'svmc_miss_cat',
21:26:24  25  	  data_table_name => '&bldtable',
21:26:24  26  	  xform_view_name => 'xformed_build_miss_cat');
21:26:24  27  
21:26:24  28  	-- Perform outlier treatment.
21:26:24  29  	-- create clip table
21:26:24  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:26:24  31  
21:26:24  32  	-- populate clip table
21:26:24  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:26:24  34  	  clip_table_name => 'svmc_clip',
21:26:24  35  	  data_table_name => '&bldtable',
21:26:24  36  	  tail_frac	  => 0.025,
21:26:24  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:26:24  38  
21:26:24  39  	-- xform input data to winsorized data
21:26:24  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:26:24  41  	  clip_table_name => 'svmc_clip',
21:26:24  42  	  data_table_name => '&bldtable',
21:26:24  43  	  xform_view_name => 'svmc_winsor');
21:26:24  44  
21:26:24  45  	-- create normalization table
21:26:24  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:26:24  47  
21:26:24  48  	-- populate normalization table based on winsorized data
21:26:24  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:26:24  50  	  norm_table_name => 'svmc_norm',
21:26:24  51  	  data_table_name => 'svmc_winsor',
21:26:24  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:26:24  53  
21:26:24  54  	-- normalize the original data
21:26:24  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:26:24  56  	  norm_table_name => 'svmc_norm',
21:26:24  57  	  data_table_name => '&bldtable',
21:26:24  58  	  xform_view_name => 'svmc_build_prep');
21:26:24  59  END;
21:26:24  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.87
21:26:42 SQL> 
21:26:42 SQL> ---------------------
21:26:42 SQL> -- CREATE A NEW MODEL
21:26:42 SQL> --
21:26:42 SQL> -- Cleanup old model with the same name for repeat runs
21:26:42 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:26:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:26:42   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.99
21:26:43 SQL> 
21:26:43 SQL> -- Build a new SVM Model
21:26:43 SQL> BEGIN
21:26:43   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:26:43   3  	  model_name	      => '&model_name',
21:26:43   4  	  mining_function     => dbms_data_mining.classification,
21:26:43   5  	  data_table_name     => 'svmc_build_prep',
21:26:43   6  	  case_id_column_name => '&case_id',
21:26:43   7  	  target_column_name  => '&target',
21:26:43   8  	  settings_table_name => 'svmc_settings');
21:26:43   9  END;
21:26:43  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.83
21:27:11 SQL> 
21:27:11 SQL> -----------------------------------------------------------------------
21:27:11 SQL> --			       APPLY/score THE MODEL
21:27:11 SQL> -----------------------------------------------------------------------
21:27:11 SQL> 
21:27:11 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:27:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:27:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:27:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:27:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:27:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:27:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:27:11 SQL> -----------------------
21:27:11 SQL> -- PREPARE SCORING DATA
21:27:11 SQL> --
21:27:11 SQL> -- If the data for model creation has been prepared, then the data
21:27:11 SQL> -- to be scored using the model must be prepared in the same manner
21:27:11 SQL> -- in order to obtain meaningful results.
21:27:11 SQL> --
21:27:11 SQL> -- 1. Missing Value treatment for all Predictors and
21:27:11 SQL> -- 2. Normalization
21:27:11 SQL> -- No outlier treatment will be performed during test and apply. The
21:27:11 SQL> -- normalization step is sufficient, since the normalization parameters
21:27:11 SQL> -- already capture the effects of outlier treatment done with build data.
21:27:11 SQL> --
21:27:11 SQL> BEGIN
21:27:11   2  	-- Xform Test data to replace missing values
21:27:11   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:27:11   4  	  miss_table_name => 'svmc_miss_num',
21:27:11   5  	  data_table_name => '&scoretable',
21:27:11   6  	  xform_view_name => 'xformed_apply_miss_num');
21:27:11   7  
21:27:11   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:27:11   9  	  miss_table_name => 'svmc_miss_cat',
21:27:11  10  	  data_table_name => '&scoretable',
21:27:11  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:27:11  12  
21:27:11  13  	-- Normalize the data to be scored
21:27:11  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:27:11  15  	  norm_table_name => 'svmc_norm',
21:27:11  16  	  data_table_name => '&scoretable',
21:27:11  17  	  xform_view_name => 'svmc_apply_prep');
21:27:11  18  END;
21:27:11  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
21:27:12 SQL> 
21:27:12 SQL> -- Use same model_name used in score_gattn.sql
21:27:12 SQL> DEFINE model_name = 'forex14'
21:27:12 SQL> 
21:27:12 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:27:12 SQL> 
21:27:12 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:27:12   2  SELECT
21:27:12   3  prdate
21:27:12   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:27:12   5  ,sysdate
21:27:12   6  ,SUBSTR(prdate,1,3)pair
21:27:12   7  ,SUBSTR(prdate,4,19)ydate
21:27:12   8  FROM svmc_apply_prep
21:27:12   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:27:12 SQL> @chf_score1day_gattn.sql	2010-12-17 11:10:00
21:27:12 SQL> --
21:27:12 SQL> -- chf_score1day_gattn.sql
21:27:12 SQL> --
21:27:12 SQL> 
21:27:12 SQL> CREATE OR REPLACE VIEW sme AS
21:27:12   2  SELECT
21:27:12   3  'chf'||m.ydate prdate
21:27:12   4  ,NULL gattn
21:27:12   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:27:12   6  ,eur_g00
21:27:12   7  ,eur_g01
21:27:12   8  ,eur_g02
21:27:12   9  ,eur_g03
21:27:12  10  ,eur_g04
21:27:12  11  ,eur_g05
21:27:12  12  ,eur_g06
21:27:12  13  ,eur_g07
21:27:12  14  ,eur_g08
21:27:12  15  ,eur_g09
21:27:12  16  ,eur_g10
21:27:12  17  ,eur_g11
21:27:12  18  ,eur_g12
21:27:12  19  ,eur_g13
21:27:12  20  ,eur_g14
21:27:12  21  ,eur_g15
21:27:12  22  ,eur_g16
21:27:12  23  ,eur_g17
21:27:12  24  ,eur_g18
21:27:12  25  ,eur_g19
21:27:12  26  ,eur_g20
21:27:12  27  ,eur_g21
21:27:12  28  ,eur_g22
21:27:12  29  ,eur_g23
21:27:12  30  ,eur_g24
21:27:12  31  ,eur_g25
21:27:12  32  ,eur_g26
21:27:12  33  ,eur_g27
21:27:12  34  ,eur_g28
21:27:12  35  ,eur_g29
21:27:12  36  ,eur_g30
21:27:12  37  ,eur_g31
21:27:12  38  ,eur_g32
21:27:12  39  ,eur_g33
21:27:12  40  ,eur_g34
21:27:12  41  ,eur_g35
21:27:12  42  ,eur_g36
21:27:12  43  ,eur_g37
21:27:12  44  ,eur_g38
21:27:12  45  ,eur_g39
21:27:12  46  ,eur_g40
21:27:12  47  ,aud_g00
21:27:12  48  ,aud_g01
21:27:12  49  ,aud_g02
21:27:12  50  ,aud_g03
21:27:12  51  ,aud_g04
21:27:12  52  ,aud_g05
21:27:12  53  ,aud_g06
21:27:12  54  ,aud_g07
21:27:12  55  ,aud_g08
21:27:12  56  ,aud_g09
21:27:12  57  ,aud_g10
21:27:12  58  ,aud_g11
21:27:12  59  ,aud_g12
21:27:12  60  ,aud_g13
21:27:12  61  ,aud_g14
21:27:12  62  ,aud_g15
21:27:12  63  ,aud_g16
21:27:12  64  ,aud_g17
21:27:12  65  ,aud_g18
21:27:12  66  ,aud_g19
21:27:12  67  ,aud_g20
21:27:12  68  ,aud_g21
21:27:12  69  ,aud_g22
21:27:12  70  ,aud_g23
21:27:12  71  ,aud_g24
21:27:12  72  ,aud_g25
21:27:12  73  ,aud_g26
21:27:12  74  ,aud_g27
21:27:12  75  ,aud_g28
21:27:12  76  ,aud_g29
21:27:12  77  ,aud_g30
21:27:12  78  ,aud_g31
21:27:12  79  ,aud_g32
21:27:12  80  ,aud_g33
21:27:12  81  ,aud_g34
21:27:12  82  ,aud_g35
21:27:12  83  ,aud_g36
21:27:12  84  ,aud_g37
21:27:12  85  ,aud_g38
21:27:12  86  ,aud_g39
21:27:12  87  ,aud_g40
21:27:12  88  ,gbp_g00
21:27:12  89  ,gbp_g01
21:27:12  90  ,gbp_g02
21:27:12  91  ,gbp_g03
21:27:12  92  ,gbp_g04
21:27:12  93  ,gbp_g05
21:27:12  94  ,gbp_g06
21:27:12  95  ,gbp_g07
21:27:12  96  ,gbp_g08
21:27:12  97  ,gbp_g09
21:27:12  98  ,gbp_g10
21:27:12  99  ,gbp_g11
21:27:12 100  ,gbp_g12
21:27:12 101  ,gbp_g13
21:27:12 102  ,gbp_g14
21:27:12 103  ,gbp_g15
21:27:12 104  ,gbp_g16
21:27:12 105  ,gbp_g17
21:27:12 106  ,gbp_g18
21:27:12 107  ,gbp_g19
21:27:12 108  ,gbp_g20
21:27:12 109  ,gbp_g21
21:27:12 110  ,gbp_g22
21:27:12 111  ,gbp_g23
21:27:12 112  ,gbp_g24
21:27:12 113  ,gbp_g25
21:27:12 114  ,gbp_g26
21:27:12 115  ,gbp_g27
21:27:12 116  ,gbp_g28
21:27:12 117  ,gbp_g29
21:27:12 118  ,gbp_g30
21:27:12 119  ,gbp_g31
21:27:12 120  ,gbp_g32
21:27:12 121  ,gbp_g33
21:27:12 122  ,gbp_g34
21:27:12 123  ,gbp_g35
21:27:12 124  ,gbp_g36
21:27:12 125  ,gbp_g37
21:27:12 126  ,gbp_g38
21:27:12 127  ,gbp_g39
21:27:12 128  ,gbp_g40
21:27:12 129  ,jpy_g00
21:27:12 130  ,jpy_g01
21:27:12 131  ,jpy_g02
21:27:12 132  ,jpy_g03
21:27:12 133  ,jpy_g04
21:27:12 134  ,jpy_g05
21:27:12 135  ,jpy_g06
21:27:12 136  ,jpy_g07
21:27:12 137  ,jpy_g08
21:27:12 138  ,jpy_g09
21:27:12 139  ,jpy_g10
21:27:12 140  ,jpy_g11
21:27:12 141  ,jpy_g12
21:27:12 142  ,jpy_g13
21:27:12 143  ,jpy_g14
21:27:12 144  ,jpy_g15
21:27:12 145  ,jpy_g16
21:27:12 146  ,jpy_g17
21:27:12 147  ,jpy_g18
21:27:12 148  ,jpy_g19
21:27:12 149  ,jpy_g20
21:27:12 150  ,jpy_g21
21:27:12 151  ,jpy_g22
21:27:12 152  ,jpy_g23
21:27:12 153  ,jpy_g24
21:27:12 154  ,jpy_g25
21:27:12 155  ,jpy_g26
21:27:12 156  ,jpy_g27
21:27:12 157  ,jpy_g28
21:27:12 158  ,jpy_g29
21:27:12 159  ,jpy_g30
21:27:12 160  ,jpy_g31
21:27:12 161  ,jpy_g32
21:27:12 162  ,jpy_g33
21:27:12 163  ,jpy_g34
21:27:12 164  ,jpy_g35
21:27:12 165  ,jpy_g36
21:27:12 166  ,jpy_g37
21:27:12 167  ,jpy_g38
21:27:12 168  ,jpy_g39
21:27:12 169  ,jpy_g40
21:27:12 170  ,cad_g00
21:27:12 171  ,cad_g01
21:27:12 172  ,cad_g02
21:27:12 173  ,cad_g03
21:27:12 174  ,cad_g04
21:27:12 175  ,cad_g05
21:27:12 176  ,cad_g06
21:27:12 177  ,cad_g07
21:27:12 178  ,cad_g08
21:27:12 179  ,cad_g09
21:27:12 180  ,cad_g10
21:27:12 181  ,cad_g11
21:27:12 182  ,cad_g12
21:27:12 183  ,cad_g13
21:27:12 184  ,cad_g14
21:27:12 185  ,cad_g15
21:27:12 186  ,cad_g16
21:27:12 187  ,cad_g17
21:27:12 188  ,cad_g18
21:27:12 189  ,cad_g19
21:27:12 190  ,cad_g20
21:27:12 191  ,cad_g21
21:27:12 192  ,cad_g22
21:27:12 193  ,cad_g23
21:27:12 194  ,cad_g24
21:27:12 195  ,cad_g25
21:27:12 196  ,cad_g26
21:27:12 197  ,cad_g27
21:27:12 198  ,cad_g28
21:27:12 199  ,cad_g29
21:27:12 200  ,cad_g30
21:27:12 201  ,cad_g31
21:27:12 202  ,cad_g32
21:27:12 203  ,cad_g33
21:27:12 204  ,cad_g34
21:27:12 205  ,cad_g35
21:27:12 206  ,cad_g36
21:27:12 207  ,cad_g37
21:27:12 208  ,cad_g38
21:27:12 209  ,cad_g39
21:27:12 210  ,cad_g40
21:27:12 211  ,chf_g00
21:27:12 212  ,chf_g01
21:27:12 213  ,chf_g02
21:27:12 214  ,chf_g03
21:27:12 215  ,chf_g04
21:27:12 216  ,chf_g05
21:27:12 217  ,chf_g06
21:27:12 218  ,chf_g07
21:27:12 219  ,chf_g08
21:27:12 220  ,chf_g09
21:27:12 221  ,chf_g10
21:27:12 222  ,chf_g11
21:27:12 223  ,chf_g12
21:27:12 224  ,chf_g13
21:27:12 225  ,chf_g14
21:27:12 226  ,chf_g15
21:27:12 227  ,chf_g16
21:27:12 228  ,chf_g17
21:27:12 229  ,chf_g18
21:27:12 230  ,chf_g19
21:27:12 231  ,chf_g20
21:27:12 232  ,chf_g21
21:27:12 233  ,chf_g22
21:27:12 234  ,chf_g23
21:27:12 235  ,chf_g24
21:27:12 236  ,chf_g25
21:27:12 237  ,chf_g26
21:27:12 238  ,chf_g27
21:27:12 239  ,chf_g28
21:27:12 240  ,chf_g29
21:27:12 241  ,chf_g30
21:27:12 242  ,chf_g31
21:27:12 243  ,chf_g32
21:27:12 244  ,chf_g33
21:27:12 245  ,chf_g34
21:27:12 246  ,chf_g35
21:27:12 247  ,chf_g36
21:27:12 248  ,chf_g37
21:27:12 249  ,chf_g38
21:27:12 250  ,chf_g39
21:27:12 251  ,chf_g40
21:27:12 252  FROM chf_ms14 m
21:27:12 253  WHERE m.ydate = '&1'||' '||'&2'
21:27:12 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'11:10:00'

View created.

Elapsed: 00:00:00.13
21:27:12 SQL> 
21:27:12 SQL> -- rpt
21:27:12 SQL> -- We should see just 1 row:
21:27:12 SQL> 
21:27:12 SQL> SELECT COUNT(prdate) FROM sme
21:27:12   2  
21:27:12 SQL> -- Build the model:
21:27:12 SQL> CREATE OR REPLACE VIEW bme AS
21:27:12   2  SELECT
21:27:12   3  'chf'||m.ydate prdate
21:27:12   4  ,gattn
21:27:12   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:27:12   6  ,eur_g00
21:27:12   7  ,eur_g01
21:27:12   8  ,eur_g02
21:27:12   9  ,eur_g03
21:27:12  10  ,eur_g04
21:27:12  11  ,eur_g05
21:27:12  12  ,eur_g06
21:27:12  13  ,eur_g07
21:27:12  14  ,eur_g08
21:27:12  15  ,eur_g09
21:27:12  16  ,eur_g10
21:27:12  17  ,eur_g11
21:27:12  18  ,eur_g12
21:27:12  19  ,eur_g13
21:27:12  20  ,eur_g14
21:27:12  21  ,eur_g15
21:27:12  22  ,eur_g16
21:27:12  23  ,eur_g17
21:27:12  24  ,eur_g18
21:27:12  25  ,eur_g19
21:27:12  26  ,eur_g20
21:27:12  27  ,eur_g21
21:27:12  28  ,eur_g22
21:27:12  29  ,eur_g23
21:27:12  30  ,eur_g24
21:27:12  31  ,eur_g25
21:27:12  32  ,eur_g26
21:27:12  33  ,eur_g27
21:27:12  34  ,eur_g28
21:27:12  35  ,eur_g29
21:27:12  36  ,eur_g30
21:27:12  37  ,eur_g31
21:27:12  38  ,eur_g32
21:27:12  39  ,eur_g33
21:27:12  40  ,eur_g34
21:27:12  41  ,eur_g35
21:27:12  42  ,eur_g36
21:27:12  43  ,eur_g37
21:27:12  44  ,eur_g38
21:27:12  45  ,eur_g39
21:27:12  46  ,eur_g40
21:27:12  47  ,aud_g00
21:27:12  48  ,aud_g01
21:27:12  49  ,aud_g02
21:27:12  50  ,aud_g03
21:27:12  51  ,aud_g04
21:27:12  52  ,aud_g05
21:27:12  53  ,aud_g06
21:27:12  54  ,aud_g07
21:27:12  55  ,aud_g08
21:27:12  56  ,aud_g09
21:27:12  57  ,aud_g10
21:27:12  58  ,aud_g11
21:27:12  59  ,aud_g12
21:27:12  60  ,aud_g13
21:27:12  61  ,aud_g14
21:27:12  62  ,aud_g15
21:27:12  63  ,aud_g16
21:27:12  64  ,aud_g17
21:27:12  65  ,aud_g18
21:27:12  66  ,aud_g19
21:27:12  67  ,aud_g20
21:27:12  68  ,aud_g21
21:27:12  69  ,aud_g22
21:27:12  70  ,aud_g23
21:27:12  71  ,aud_g24
21:27:12  72  ,aud_g25
21:27:12  73  ,aud_g26
21:27:12  74  ,aud_g27
21:27:12  75  ,aud_g28
21:27:12  76  ,aud_g29
21:27:12  77  ,aud_g30
21:27:12  78  ,aud_g31
21:27:12  79  ,aud_g32
21:27:12  80  ,aud_g33
21:27:12  81  ,aud_g34
21:27:12  82  ,aud_g35
21:27:12  83  ,aud_g36
21:27:12  84  ,aud_g37
21:27:12  85  ,aud_g38
21:27:12  86  ,aud_g39
21:27:12  87  ,aud_g40
21:27:12  88  ,gbp_g00
21:27:12  89  ,gbp_g01
21:27:12  90  ,gbp_g02
21:27:12  91  ,gbp_g03
21:27:12  92  ,gbp_g04
21:27:12  93  ,gbp_g05
21:27:12  94  ,gbp_g06
21:27:12  95  ,gbp_g07
21:27:12  96  ,gbp_g08
21:27:12  97  ,gbp_g09
21:27:12  98  ,gbp_g10
21:27:12  99  ,gbp_g11
21:27:12 100  ,gbp_g12
21:27:12 101  ,gbp_g13
21:27:12 102  ,gbp_g14
21:27:12 103  ,gbp_g15
21:27:12 104  ,gbp_g16
21:27:12 105  ,gbp_g17
21:27:12 106  ,gbp_g18
21:27:12 107  ,gbp_g19
21:27:12 108  ,gbp_g20
21:27:12 109  ,gbp_g21
21:27:12 110  ,gbp_g22
21:27:12 111  ,gbp_g23
21:27:12 112  ,gbp_g24
21:27:12 113  ,gbp_g25
21:27:12 114  ,gbp_g26
21:27:12 115  ,gbp_g27
21:27:12 116  ,gbp_g28
21:27:12 117  ,gbp_g29
21:27:12 118  ,gbp_g30
21:27:12 119  ,gbp_g31
21:27:12 120  ,gbp_g32
21:27:12 121  ,gbp_g33
21:27:12 122  ,gbp_g34
21:27:12 123  ,gbp_g35
21:27:12 124  ,gbp_g36
21:27:12 125  ,gbp_g37
21:27:12 126  ,gbp_g38
21:27:12 127  ,gbp_g39
21:27:12 128  ,gbp_g40
21:27:12 129  ,jpy_g00
21:27:12 130  ,jpy_g01
21:27:12 131  ,jpy_g02
21:27:12 132  ,jpy_g03
21:27:12 133  ,jpy_g04
21:27:12 134  ,jpy_g05
21:27:12 135  ,jpy_g06
21:27:12 136  ,jpy_g07
21:27:12 137  ,jpy_g08
21:27:12 138  ,jpy_g09
21:27:12 139  ,jpy_g10
21:27:12 140  ,jpy_g11
21:27:12 141  ,jpy_g12
21:27:12 142  ,jpy_g13
21:27:12 143  ,jpy_g14
21:27:12 144  ,jpy_g15
21:27:12 145  ,jpy_g16
21:27:12 146  ,jpy_g17
21:27:12 147  ,jpy_g18
21:27:12 148  ,jpy_g19
21:27:12 149  ,jpy_g20
21:27:12 150  ,jpy_g21
21:27:12 151  ,jpy_g22
21:27:12 152  ,jpy_g23
21:27:12 153  ,jpy_g24
21:27:12 154  ,jpy_g25
21:27:12 155  ,jpy_g26
21:27:12 156  ,jpy_g27
21:27:12 157  ,jpy_g28
21:27:12 158  ,jpy_g29
21:27:12 159  ,jpy_g30
21:27:12 160  ,jpy_g31
21:27:12 161  ,jpy_g32
21:27:12 162  ,jpy_g33
21:27:12 163  ,jpy_g34
21:27:12 164  ,jpy_g35
21:27:12 165  ,jpy_g36
21:27:12 166  ,jpy_g37
21:27:12 167  ,jpy_g38
21:27:12 168  ,jpy_g39
21:27:12 169  ,jpy_g40
21:27:12 170  ,cad_g00
21:27:12 171  ,cad_g01
21:27:12 172  ,cad_g02
21:27:12 173  ,cad_g03
21:27:12 174  ,cad_g04
21:27:12 175  ,cad_g05
21:27:12 176  ,cad_g06
21:27:12 177  ,cad_g07
21:27:12 178  ,cad_g08
21:27:12 179  ,cad_g09
21:27:12 180  ,cad_g10
21:27:12 181  ,cad_g11
21:27:12 182  ,cad_g12
21:27:12 183  ,cad_g13
21:27:12 184  ,cad_g14
21:27:12 185  ,cad_g15
21:27:12 186  ,cad_g16
21:27:12 187  ,cad_g17
21:27:12 188  ,cad_g18
21:27:12 189  ,cad_g19
21:27:12 190  ,cad_g20
21:27:12 191  ,cad_g21
21:27:12 192  ,cad_g22
21:27:12 193  ,cad_g23
21:27:12 194  ,cad_g24
21:27:12 195  ,cad_g25
21:27:12 196  ,cad_g26
21:27:12 197  ,cad_g27
21:27:12 198  ,cad_g28
21:27:12 199  ,cad_g29
21:27:12 200  ,cad_g30
21:27:12 201  ,cad_g31
21:27:12 202  ,cad_g32
21:27:12 203  ,cad_g33
21:27:12 204  ,cad_g34
21:27:12 205  ,cad_g35
21:27:12 206  ,cad_g36
21:27:12 207  ,cad_g37
21:27:12 208  ,cad_g38
21:27:12 209  ,cad_g39
21:27:12 210  ,cad_g40
21:27:12 211  ,chf_g00
21:27:12 212  ,chf_g01
21:27:12 213  ,chf_g02
21:27:12 214  ,chf_g03
21:27:12 215  ,chf_g04
21:27:12 216  ,chf_g05
21:27:12 217  ,chf_g06
21:27:12 218  ,chf_g07
21:27:12 219  ,chf_g08
21:27:12 220  ,chf_g09
21:27:12 221  ,chf_g10
21:27:12 222  ,chf_g11
21:27:12 223  ,chf_g12
21:27:12 224  ,chf_g13
21:27:12 225  ,chf_g14
21:27:12 226  ,chf_g15
21:27:12 227  ,chf_g16
21:27:12 228  ,chf_g17
21:27:12 229  ,chf_g18
21:27:12 230  ,chf_g19
21:27:12 231  ,chf_g20
21:27:12 232  ,chf_g21
21:27:12 233  ,chf_g22
21:27:12 234  ,chf_g23
21:27:12 235  ,chf_g24
21:27:12 236  ,chf_g25
21:27:12 237  ,chf_g26
21:27:12 238  ,chf_g27
21:27:12 239  ,chf_g28
21:27:12 240  ,chf_g29
21:27:12 241  ,chf_g30
21:27:12 242  ,chf_g31
21:27:12 243  ,chf_g32
21:27:12 244  ,chf_g33
21:27:12 245  ,chf_g34
21:27:12 246  ,chf_g35
21:27:12 247  ,chf_g36
21:27:12 248  ,chf_g37
21:27:12 249  ,chf_g38
21:27:12 250  ,chf_g39
21:27:12 251  ,chf_g40
21:27:12 252  FROM chf_ms14 m
21:27:12 253  WHERE gattn IN('nup','up')
21:27:12 254  AND 1+m.ydate < '&1'||' '||'&2'
21:27:12 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'11:10:00'

View created.

Elapsed: 00:00:00.12
21:27:13 SQL> 
21:27:13 SQL> -- rpt
21:27:13 SQL> 
21:27:13 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:27:13   2  
21:27:13 SQL> SELECT MAX(prdate) FROM bme
21:27:13   2  
21:27:13 SQL> -- Now build model from bme and score sme
21:27:13 SQL> @score1gattn.sql
21:27:13 SQL> -- score1gattn.sql
21:27:13 SQL> 
21:27:13 SQL> -- Does the 1st SVM score
21:27:13 SQL> 
21:27:13 SQL> -- Fill up svmc_apply_prep
21:27:13 SQL> @score_gattn.sql
21:27:13 SQL> --
21:27:13 SQL> -- score_gattn.sql
21:27:13 SQL> --
21:27:13 SQL> 
21:27:13 SQL> -- usage: score_gattn.sql
21:27:13 SQL> 
21:27:13 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:27:13 SQL> 
21:27:13 SQL> DEFINE target	= 'gattn'
21:27:13 SQL> DEFINE model_name = 'forex14'
21:27:13 SQL> DEFINE bldtable	= 'bme'
21:27:13 SQL> DEFINE scoretable = 'sme'
21:27:13 SQL> DEFINE case_id	= 'prdate'
21:27:13 SQL> 
21:27:13 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:27:13 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:27:13 SQL> 
21:27:13 SQL> -- Builds an SVM model using pl/sql.
21:27:13 SQL> 
21:27:13 SQL> -----------------------------------------------------------------------
21:27:13 SQL> --			    BUILD THE MODEL
21:27:13 SQL> -----------------------------------------------------------------------
21:27:13 SQL> 
21:27:13 SQL> -- Cleanup old build data preparation objects for repeat runs
21:27:13 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:27:13 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:27:13 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:27:13 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:27:13 SQL> 
21:27:13 SQL> 
21:27:13 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:27:13 SQL> --
21:27:13 SQL> -- DROP	TABLE svmc_settings ;
21:27:13 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:27:13 SQL> -- DELETE svmc_settings;
21:27:13 SQL> 
21:27:13 SQL> -- The default classification algorithm is Naive Bayes. So override
21:27:13 SQL> -- this choice to SVM using a settings table.
21:27:13 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:27:13 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:27:13 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:27:13 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:27:13 SQL> -- models.
21:27:13 SQL> --
21:27:13 SQL> 
21:27:13 SQL> -- Do this once and then comment it out.
21:27:13 SQL> -- That makes script go faster.
21:27:13 SQL> -- BEGIN
21:27:13 SQL> -- -- Populate settings table
21:27:13 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:27:13 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:27:13 SQL> --
21:27:13 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:27:13 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:27:13 SQL> --
21:27:13 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:27:13 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:27:13 SQL> --   COMMIT;
21:27:13 SQL> -- END;
21:27:13 SQL> -- /
21:27:13 SQL> 
21:27:13 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:27:13 SQL> 
21:27:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:27:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:27:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:27:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:27:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:27:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:27:13 SQL> 
21:27:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:27:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:27:13 SQL> 
21:27:13 SQL> --------------------------------
21:27:13 SQL> -- PREPARE BUILD (TRAINING) DATA
21:27:13 SQL> --
21:27:13 SQL> 
21:27:13 SQL> -- 1. Missing Value treatment for all Predictors and
21:27:13 SQL> -- 2. Outlier Treatment and
21:27:13 SQL> -- 3. Normalization are performed below.
21:27:13 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:27:13 SQL> --    normalized here.
21:27:13 SQL> 
21:27:13 SQL> BEGIN
21:27:13   2  	-- Perform missing value treatment for all predictors
21:27:13   3  	-- create miss tables
21:27:13   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:27:13   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:27:13   6  
21:27:13   7  	-- populate miss tables
21:27:13   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:27:13   9  	  miss_table_name => 'svmc_miss_num',
21:27:13  10  	  data_table_name => '&bldtable',
21:27:13  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:27:13  12  
21:27:13  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:27:13  14  	  miss_table_name => 'svmc_miss_cat',
21:27:13  15  	  data_table_name => '&bldtable',
21:27:13  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:27:13  17  
21:27:13  18  	-- xform input data to replace missing values
21:27:13  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:27:13  20  	  miss_table_name => 'svmc_miss_num',
21:27:13  21  	  data_table_name => '&bldtable',
21:27:13  22  	  xform_view_name => 'xformed_build_miss_num');
21:27:13  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:27:13  24  	  miss_table_name => 'svmc_miss_cat',
21:27:13  25  	  data_table_name => '&bldtable',
21:27:13  26  	  xform_view_name => 'xformed_build_miss_cat');
21:27:13  27  
21:27:13  28  	-- Perform outlier treatment.
21:27:13  29  	-- create clip table
21:27:13  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:27:13  31  
21:27:13  32  	-- populate clip table
21:27:13  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:27:13  34  	  clip_table_name => 'svmc_clip',
21:27:13  35  	  data_table_name => '&bldtable',
21:27:13  36  	  tail_frac	  => 0.025,
21:27:13  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:27:13  38  
21:27:13  39  	-- xform input data to winsorized data
21:27:13  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:27:13  41  	  clip_table_name => 'svmc_clip',
21:27:13  42  	  data_table_name => '&bldtable',
21:27:13  43  	  xform_view_name => 'svmc_winsor');
21:27:13  44  
21:27:13  45  	-- create normalization table
21:27:13  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:27:13  47  
21:27:13  48  	-- populate normalization table based on winsorized data
21:27:13  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:27:13  50  	  norm_table_name => 'svmc_norm',
21:27:13  51  	  data_table_name => 'svmc_winsor',
21:27:13  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:27:13  53  
21:27:13  54  	-- normalize the original data
21:27:13  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:27:13  56  	  norm_table_name => 'svmc_norm',
21:27:13  57  	  data_table_name => '&bldtable',
21:27:13  58  	  xform_view_name => 'svmc_build_prep');
21:27:13  59  END;
21:27:13  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.92
21:27:31 SQL> 
21:27:31 SQL> ---------------------
21:27:31 SQL> -- CREATE A NEW MODEL
21:27:31 SQL> --
21:27:31 SQL> -- Cleanup old model with the same name for repeat runs
21:27:31 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:27:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:31   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
21:27:32 SQL> 
21:27:32 SQL> -- Build a new SVM Model
21:27:32 SQL> BEGIN
21:27:32   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:27:32   3  	  model_name	      => '&model_name',
21:27:32   4  	  mining_function     => dbms_data_mining.classification,
21:27:32   5  	  data_table_name     => 'svmc_build_prep',
21:27:32   6  	  case_id_column_name => '&case_id',
21:27:32   7  	  target_column_name  => '&target',
21:27:32   8  	  settings_table_name => 'svmc_settings');
21:27:32   9  END;
21:27:32  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.21
21:27:58 SQL> 
21:27:58 SQL> -----------------------------------------------------------------------
21:27:58 SQL> --			       APPLY/score THE MODEL
21:27:58 SQL> -----------------------------------------------------------------------
21:27:58 SQL> 
21:27:58 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:27:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:27:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:27:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:27:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:27:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:27:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:27:58 SQL> -----------------------
21:27:58 SQL> -- PREPARE SCORING DATA
21:27:58 SQL> --
21:27:58 SQL> -- If the data for model creation has been prepared, then the data
21:27:58 SQL> -- to be scored using the model must be prepared in the same manner
21:27:58 SQL> -- in order to obtain meaningful results.
21:27:58 SQL> --
21:27:58 SQL> -- 1. Missing Value treatment for all Predictors and
21:27:58 SQL> -- 2. Normalization
21:27:58 SQL> -- No outlier treatment will be performed during test and apply. The
21:27:58 SQL> -- normalization step is sufficient, since the normalization parameters
21:27:58 SQL> -- already capture the effects of outlier treatment done with build data.
21:27:58 SQL> --
21:27:58 SQL> BEGIN
21:27:58   2  	-- Xform Test data to replace missing values
21:27:58   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:27:58   4  	  miss_table_name => 'svmc_miss_num',
21:27:58   5  	  data_table_name => '&scoretable',
21:27:58   6  	  xform_view_name => 'xformed_apply_miss_num');
21:27:58   7  
21:27:58   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:27:58   9  	  miss_table_name => 'svmc_miss_cat',
21:27:58  10  	  data_table_name => '&scoretable',
21:27:58  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:27:58  12  
21:27:58  13  	-- Normalize the data to be scored
21:27:58  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:27:58  15  	  norm_table_name => 'svmc_norm',
21:27:58  16  	  data_table_name => '&scoretable',
21:27:58  17  	  xform_view_name => 'svmc_apply_prep');
21:27:58  18  END;
21:27:58  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
21:27:59 SQL> 
21:27:59 SQL> -- Use same model_name used in score_gattn.sql
21:27:59 SQL> DEFINE model_name = 'forex14'
21:27:59 SQL> 
21:27:59 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:27:59 SQL> 
21:27:59 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:27:59   2  SELECT
21:27:59   3  prdate
21:27:59   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:27:59   5  ,sysdate
21:27:59   6  ,SUBSTR(prdate,1,3)pair
21:27:59   7  ,SUBSTR(prdate,4,19)ydate
21:27:59   8  FROM svmc_apply_prep
21:27:59   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:28:00 SQL> @chf_score1day_gattn.sql	2010-12-17 11:05:00
21:28:00 SQL> --
21:28:00 SQL> -- chf_score1day_gattn.sql
21:28:00 SQL> --
21:28:00 SQL> 
21:28:00 SQL> CREATE OR REPLACE VIEW sme AS
21:28:00   2  SELECT
21:28:00   3  'chf'||m.ydate prdate
21:28:00   4  ,NULL gattn
21:28:00   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:28:00   6  ,eur_g00
21:28:00   7  ,eur_g01
21:28:00   8  ,eur_g02
21:28:00   9  ,eur_g03
21:28:00  10  ,eur_g04
21:28:00  11  ,eur_g05
21:28:00  12  ,eur_g06
21:28:00  13  ,eur_g07
21:28:00  14  ,eur_g08
21:28:00  15  ,eur_g09
21:28:00  16  ,eur_g10
21:28:00  17  ,eur_g11
21:28:00  18  ,eur_g12
21:28:00  19  ,eur_g13
21:28:00  20  ,eur_g14
21:28:00  21  ,eur_g15
21:28:00  22  ,eur_g16
21:28:00  23  ,eur_g17
21:28:00  24  ,eur_g18
21:28:00  25  ,eur_g19
21:28:00  26  ,eur_g20
21:28:00  27  ,eur_g21
21:28:00  28  ,eur_g22
21:28:00  29  ,eur_g23
21:28:00  30  ,eur_g24
21:28:00  31  ,eur_g25
21:28:00  32  ,eur_g26
21:28:00  33  ,eur_g27
21:28:00  34  ,eur_g28
21:28:00  35  ,eur_g29
21:28:00  36  ,eur_g30
21:28:00  37  ,eur_g31
21:28:00  38  ,eur_g32
21:28:00  39  ,eur_g33
21:28:00  40  ,eur_g34
21:28:00  41  ,eur_g35
21:28:00  42  ,eur_g36
21:28:00  43  ,eur_g37
21:28:00  44  ,eur_g38
21:28:00  45  ,eur_g39
21:28:00  46  ,eur_g40
21:28:00  47  ,aud_g00
21:28:00  48  ,aud_g01
21:28:00  49  ,aud_g02
21:28:00  50  ,aud_g03
21:28:00  51  ,aud_g04
21:28:00  52  ,aud_g05
21:28:00  53  ,aud_g06
21:28:00  54  ,aud_g07
21:28:00  55  ,aud_g08
21:28:00  56  ,aud_g09
21:28:00  57  ,aud_g10
21:28:00  58  ,aud_g11
21:28:00  59  ,aud_g12
21:28:00  60  ,aud_g13
21:28:00  61  ,aud_g14
21:28:00  62  ,aud_g15
21:28:00  63  ,aud_g16
21:28:00  64  ,aud_g17
21:28:00  65  ,aud_g18
21:28:00  66  ,aud_g19
21:28:00  67  ,aud_g20
21:28:00  68  ,aud_g21
21:28:00  69  ,aud_g22
21:28:00  70  ,aud_g23
21:28:00  71  ,aud_g24
21:28:00  72  ,aud_g25
21:28:00  73  ,aud_g26
21:28:00  74  ,aud_g27
21:28:00  75  ,aud_g28
21:28:00  76  ,aud_g29
21:28:00  77  ,aud_g30
21:28:00  78  ,aud_g31
21:28:00  79  ,aud_g32
21:28:00  80  ,aud_g33
21:28:00  81  ,aud_g34
21:28:00  82  ,aud_g35
21:28:00  83  ,aud_g36
21:28:00  84  ,aud_g37
21:28:00  85  ,aud_g38
21:28:00  86  ,aud_g39
21:28:00  87  ,aud_g40
21:28:00  88  ,gbp_g00
21:28:00  89  ,gbp_g01
21:28:00  90  ,gbp_g02
21:28:00  91  ,gbp_g03
21:28:00  92  ,gbp_g04
21:28:00  93  ,gbp_g05
21:28:00  94  ,gbp_g06
21:28:00  95  ,gbp_g07
21:28:00  96  ,gbp_g08
21:28:00  97  ,gbp_g09
21:28:00  98  ,gbp_g10
21:28:00  99  ,gbp_g11
21:28:00 100  ,gbp_g12
21:28:00 101  ,gbp_g13
21:28:00 102  ,gbp_g14
21:28:00 103  ,gbp_g15
21:28:00 104  ,gbp_g16
21:28:00 105  ,gbp_g17
21:28:00 106  ,gbp_g18
21:28:00 107  ,gbp_g19
21:28:00 108  ,gbp_g20
21:28:00 109  ,gbp_g21
21:28:00 110  ,gbp_g22
21:28:00 111  ,gbp_g23
21:28:00 112  ,gbp_g24
21:28:00 113  ,gbp_g25
21:28:00 114  ,gbp_g26
21:28:00 115  ,gbp_g27
21:28:00 116  ,gbp_g28
21:28:00 117  ,gbp_g29
21:28:00 118  ,gbp_g30
21:28:00 119  ,gbp_g31
21:28:00 120  ,gbp_g32
21:28:00 121  ,gbp_g33
21:28:00 122  ,gbp_g34
21:28:00 123  ,gbp_g35
21:28:00 124  ,gbp_g36
21:28:00 125  ,gbp_g37
21:28:00 126  ,gbp_g38
21:28:00 127  ,gbp_g39
21:28:00 128  ,gbp_g40
21:28:00 129  ,jpy_g00
21:28:00 130  ,jpy_g01
21:28:00 131  ,jpy_g02
21:28:00 132  ,jpy_g03
21:28:00 133  ,jpy_g04
21:28:00 134  ,jpy_g05
21:28:00 135  ,jpy_g06
21:28:00 136  ,jpy_g07
21:28:00 137  ,jpy_g08
21:28:00 138  ,jpy_g09
21:28:00 139  ,jpy_g10
21:28:00 140  ,jpy_g11
21:28:00 141  ,jpy_g12
21:28:00 142  ,jpy_g13
21:28:00 143  ,jpy_g14
21:28:00 144  ,jpy_g15
21:28:00 145  ,jpy_g16
21:28:00 146  ,jpy_g17
21:28:00 147  ,jpy_g18
21:28:00 148  ,jpy_g19
21:28:00 149  ,jpy_g20
21:28:00 150  ,jpy_g21
21:28:00 151  ,jpy_g22
21:28:00 152  ,jpy_g23
21:28:00 153  ,jpy_g24
21:28:00 154  ,jpy_g25
21:28:00 155  ,jpy_g26
21:28:00 156  ,jpy_g27
21:28:00 157  ,jpy_g28
21:28:00 158  ,jpy_g29
21:28:00 159  ,jpy_g30
21:28:00 160  ,jpy_g31
21:28:00 161  ,jpy_g32
21:28:00 162  ,jpy_g33
21:28:00 163  ,jpy_g34
21:28:00 164  ,jpy_g35
21:28:00 165  ,jpy_g36
21:28:00 166  ,jpy_g37
21:28:00 167  ,jpy_g38
21:28:00 168  ,jpy_g39
21:28:00 169  ,jpy_g40
21:28:00 170  ,cad_g00
21:28:00 171  ,cad_g01
21:28:00 172  ,cad_g02
21:28:00 173  ,cad_g03
21:28:00 174  ,cad_g04
21:28:00 175  ,cad_g05
21:28:00 176  ,cad_g06
21:28:00 177  ,cad_g07
21:28:00 178  ,cad_g08
21:28:00 179  ,cad_g09
21:28:00 180  ,cad_g10
21:28:00 181  ,cad_g11
21:28:00 182  ,cad_g12
21:28:00 183  ,cad_g13
21:28:00 184  ,cad_g14
21:28:00 185  ,cad_g15
21:28:00 186  ,cad_g16
21:28:00 187  ,cad_g17
21:28:00 188  ,cad_g18
21:28:00 189  ,cad_g19
21:28:00 190  ,cad_g20
21:28:00 191  ,cad_g21
21:28:00 192  ,cad_g22
21:28:00 193  ,cad_g23
21:28:00 194  ,cad_g24
21:28:00 195  ,cad_g25
21:28:00 196  ,cad_g26
21:28:00 197  ,cad_g27
21:28:00 198  ,cad_g28
21:28:00 199  ,cad_g29
21:28:00 200  ,cad_g30
21:28:00 201  ,cad_g31
21:28:00 202  ,cad_g32
21:28:00 203  ,cad_g33
21:28:00 204  ,cad_g34
21:28:00 205  ,cad_g35
21:28:00 206  ,cad_g36
21:28:00 207  ,cad_g37
21:28:00 208  ,cad_g38
21:28:00 209  ,cad_g39
21:28:00 210  ,cad_g40
21:28:00 211  ,chf_g00
21:28:00 212  ,chf_g01
21:28:00 213  ,chf_g02
21:28:00 214  ,chf_g03
21:28:00 215  ,chf_g04
21:28:00 216  ,chf_g05
21:28:00 217  ,chf_g06
21:28:00 218  ,chf_g07
21:28:00 219  ,chf_g08
21:28:00 220  ,chf_g09
21:28:00 221  ,chf_g10
21:28:00 222  ,chf_g11
21:28:00 223  ,chf_g12
21:28:00 224  ,chf_g13
21:28:00 225  ,chf_g14
21:28:00 226  ,chf_g15
21:28:00 227  ,chf_g16
21:28:00 228  ,chf_g17
21:28:00 229  ,chf_g18
21:28:00 230  ,chf_g19
21:28:00 231  ,chf_g20
21:28:00 232  ,chf_g21
21:28:00 233  ,chf_g22
21:28:00 234  ,chf_g23
21:28:00 235  ,chf_g24
21:28:00 236  ,chf_g25
21:28:00 237  ,chf_g26
21:28:00 238  ,chf_g27
21:28:00 239  ,chf_g28
21:28:00 240  ,chf_g29
21:28:00 241  ,chf_g30
21:28:00 242  ,chf_g31
21:28:00 243  ,chf_g32
21:28:00 244  ,chf_g33
21:28:00 245  ,chf_g34
21:28:00 246  ,chf_g35
21:28:00 247  ,chf_g36
21:28:00 248  ,chf_g37
21:28:00 249  ,chf_g38
21:28:00 250  ,chf_g39
21:28:00 251  ,chf_g40
21:28:00 252  FROM chf_ms14 m
21:28:00 253  WHERE m.ydate = '&1'||' '||'&2'
21:28:00 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'11:05:00'

View created.

Elapsed: 00:00:00.12
21:28:00 SQL> 
21:28:00 SQL> -- rpt
21:28:00 SQL> -- We should see just 1 row:
21:28:00 SQL> 
21:28:00 SQL> SELECT COUNT(prdate) FROM sme
21:28:00   2  
21:28:00 SQL> -- Build the model:
21:28:00 SQL> CREATE OR REPLACE VIEW bme AS
21:28:00   2  SELECT
21:28:00   3  'chf'||m.ydate prdate
21:28:00   4  ,gattn
21:28:00   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:28:00   6  ,eur_g00
21:28:00   7  ,eur_g01
21:28:00   8  ,eur_g02
21:28:00   9  ,eur_g03
21:28:00  10  ,eur_g04
21:28:00  11  ,eur_g05
21:28:00  12  ,eur_g06
21:28:00  13  ,eur_g07
21:28:00  14  ,eur_g08
21:28:00  15  ,eur_g09
21:28:00  16  ,eur_g10
21:28:00  17  ,eur_g11
21:28:00  18  ,eur_g12
21:28:00  19  ,eur_g13
21:28:00  20  ,eur_g14
21:28:00  21  ,eur_g15
21:28:00  22  ,eur_g16
21:28:00  23  ,eur_g17
21:28:00  24  ,eur_g18
21:28:00  25  ,eur_g19
21:28:00  26  ,eur_g20
21:28:00  27  ,eur_g21
21:28:00  28  ,eur_g22
21:28:00  29  ,eur_g23
21:28:00  30  ,eur_g24
21:28:00  31  ,eur_g25
21:28:00  32  ,eur_g26
21:28:00  33  ,eur_g27
21:28:00  34  ,eur_g28
21:28:00  35  ,eur_g29
21:28:00  36  ,eur_g30
21:28:00  37  ,eur_g31
21:28:00  38  ,eur_g32
21:28:00  39  ,eur_g33
21:28:00  40  ,eur_g34
21:28:00  41  ,eur_g35
21:28:00  42  ,eur_g36
21:28:00  43  ,eur_g37
21:28:00  44  ,eur_g38
21:28:00  45  ,eur_g39
21:28:00  46  ,eur_g40
21:28:00  47  ,aud_g00
21:28:00  48  ,aud_g01
21:28:00  49  ,aud_g02
21:28:00  50  ,aud_g03
21:28:00  51  ,aud_g04
21:28:00  52  ,aud_g05
21:28:00  53  ,aud_g06
21:28:00  54  ,aud_g07
21:28:00  55  ,aud_g08
21:28:00  56  ,aud_g09
21:28:00  57  ,aud_g10
21:28:00  58  ,aud_g11
21:28:00  59  ,aud_g12
21:28:00  60  ,aud_g13
21:28:00  61  ,aud_g14
21:28:00  62  ,aud_g15
21:28:00  63  ,aud_g16
21:28:00  64  ,aud_g17
21:28:00  65  ,aud_g18
21:28:00  66  ,aud_g19
21:28:00  67  ,aud_g20
21:28:00  68  ,aud_g21
21:28:00  69  ,aud_g22
21:28:00  70  ,aud_g23
21:28:00  71  ,aud_g24
21:28:00  72  ,aud_g25
21:28:00  73  ,aud_g26
21:28:00  74  ,aud_g27
21:28:00  75  ,aud_g28
21:28:00  76  ,aud_g29
21:28:00  77  ,aud_g30
21:28:00  78  ,aud_g31
21:28:00  79  ,aud_g32
21:28:00  80  ,aud_g33
21:28:00  81  ,aud_g34
21:28:00  82  ,aud_g35
21:28:00  83  ,aud_g36
21:28:00  84  ,aud_g37
21:28:00  85  ,aud_g38
21:28:00  86  ,aud_g39
21:28:00  87  ,aud_g40
21:28:00  88  ,gbp_g00
21:28:00  89  ,gbp_g01
21:28:00  90  ,gbp_g02
21:28:00  91  ,gbp_g03
21:28:00  92  ,gbp_g04
21:28:00  93  ,gbp_g05
21:28:00  94  ,gbp_g06
21:28:00  95  ,gbp_g07
21:28:00  96  ,gbp_g08
21:28:00  97  ,gbp_g09
21:28:00  98  ,gbp_g10
21:28:00  99  ,gbp_g11
21:28:00 100  ,gbp_g12
21:28:00 101  ,gbp_g13
21:28:00 102  ,gbp_g14
21:28:00 103  ,gbp_g15
21:28:00 104  ,gbp_g16
21:28:00 105  ,gbp_g17
21:28:00 106  ,gbp_g18
21:28:00 107  ,gbp_g19
21:28:00 108  ,gbp_g20
21:28:00 109  ,gbp_g21
21:28:00 110  ,gbp_g22
21:28:00 111  ,gbp_g23
21:28:00 112  ,gbp_g24
21:28:00 113  ,gbp_g25
21:28:00 114  ,gbp_g26
21:28:00 115  ,gbp_g27
21:28:00 116  ,gbp_g28
21:28:00 117  ,gbp_g29
21:28:00 118  ,gbp_g30
21:28:00 119  ,gbp_g31
21:28:00 120  ,gbp_g32
21:28:00 121  ,gbp_g33
21:28:00 122  ,gbp_g34
21:28:00 123  ,gbp_g35
21:28:00 124  ,gbp_g36
21:28:00 125  ,gbp_g37
21:28:00 126  ,gbp_g38
21:28:00 127  ,gbp_g39
21:28:00 128  ,gbp_g40
21:28:00 129  ,jpy_g00
21:28:00 130  ,jpy_g01
21:28:00 131  ,jpy_g02
21:28:00 132  ,jpy_g03
21:28:00 133  ,jpy_g04
21:28:00 134  ,jpy_g05
21:28:00 135  ,jpy_g06
21:28:00 136  ,jpy_g07
21:28:00 137  ,jpy_g08
21:28:00 138  ,jpy_g09
21:28:00 139  ,jpy_g10
21:28:00 140  ,jpy_g11
21:28:00 141  ,jpy_g12
21:28:00 142  ,jpy_g13
21:28:00 143  ,jpy_g14
21:28:00 144  ,jpy_g15
21:28:00 145  ,jpy_g16
21:28:00 146  ,jpy_g17
21:28:00 147  ,jpy_g18
21:28:00 148  ,jpy_g19
21:28:00 149  ,jpy_g20
21:28:00 150  ,jpy_g21
21:28:00 151  ,jpy_g22
21:28:00 152  ,jpy_g23
21:28:00 153  ,jpy_g24
21:28:00 154  ,jpy_g25
21:28:00 155  ,jpy_g26
21:28:00 156  ,jpy_g27
21:28:00 157  ,jpy_g28
21:28:00 158  ,jpy_g29
21:28:00 159  ,jpy_g30
21:28:00 160  ,jpy_g31
21:28:00 161  ,jpy_g32
21:28:00 162  ,jpy_g33
21:28:00 163  ,jpy_g34
21:28:00 164  ,jpy_g35
21:28:00 165  ,jpy_g36
21:28:00 166  ,jpy_g37
21:28:00 167  ,jpy_g38
21:28:00 168  ,jpy_g39
21:28:00 169  ,jpy_g40
21:28:00 170  ,cad_g00
21:28:00 171  ,cad_g01
21:28:00 172  ,cad_g02
21:28:00 173  ,cad_g03
21:28:00 174  ,cad_g04
21:28:00 175  ,cad_g05
21:28:00 176  ,cad_g06
21:28:00 177  ,cad_g07
21:28:00 178  ,cad_g08
21:28:00 179  ,cad_g09
21:28:00 180  ,cad_g10
21:28:00 181  ,cad_g11
21:28:00 182  ,cad_g12
21:28:00 183  ,cad_g13
21:28:00 184  ,cad_g14
21:28:00 185  ,cad_g15
21:28:00 186  ,cad_g16
21:28:00 187  ,cad_g17
21:28:00 188  ,cad_g18
21:28:00 189  ,cad_g19
21:28:00 190  ,cad_g20
21:28:00 191  ,cad_g21
21:28:00 192  ,cad_g22
21:28:00 193  ,cad_g23
21:28:00 194  ,cad_g24
21:28:00 195  ,cad_g25
21:28:00 196  ,cad_g26
21:28:00 197  ,cad_g27
21:28:00 198  ,cad_g28
21:28:00 199  ,cad_g29
21:28:00 200  ,cad_g30
21:28:00 201  ,cad_g31
21:28:00 202  ,cad_g32
21:28:00 203  ,cad_g33
21:28:00 204  ,cad_g34
21:28:00 205  ,cad_g35
21:28:00 206  ,cad_g36
21:28:00 207  ,cad_g37
21:28:00 208  ,cad_g38
21:28:00 209  ,cad_g39
21:28:00 210  ,cad_g40
21:28:00 211  ,chf_g00
21:28:00 212  ,chf_g01
21:28:00 213  ,chf_g02
21:28:00 214  ,chf_g03
21:28:00 215  ,chf_g04
21:28:00 216  ,chf_g05
21:28:00 217  ,chf_g06
21:28:00 218  ,chf_g07
21:28:00 219  ,chf_g08
21:28:00 220  ,chf_g09
21:28:00 221  ,chf_g10
21:28:00 222  ,chf_g11
21:28:00 223  ,chf_g12
21:28:00 224  ,chf_g13
21:28:00 225  ,chf_g14
21:28:00 226  ,chf_g15
21:28:00 227  ,chf_g16
21:28:00 228  ,chf_g17
21:28:00 229  ,chf_g18
21:28:00 230  ,chf_g19
21:28:00 231  ,chf_g20
21:28:00 232  ,chf_g21
21:28:00 233  ,chf_g22
21:28:00 234  ,chf_g23
21:28:00 235  ,chf_g24
21:28:00 236  ,chf_g25
21:28:00 237  ,chf_g26
21:28:00 238  ,chf_g27
21:28:00 239  ,chf_g28
21:28:00 240  ,chf_g29
21:28:00 241  ,chf_g30
21:28:00 242  ,chf_g31
21:28:00 243  ,chf_g32
21:28:00 244  ,chf_g33
21:28:00 245  ,chf_g34
21:28:00 246  ,chf_g35
21:28:00 247  ,chf_g36
21:28:00 248  ,chf_g37
21:28:00 249  ,chf_g38
21:28:00 250  ,chf_g39
21:28:00 251  ,chf_g40
21:28:00 252  FROM chf_ms14 m
21:28:00 253  WHERE gattn IN('nup','up')
21:28:00 254  AND 1+m.ydate < '&1'||' '||'&2'
21:28:00 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'11:05:00'

View created.

Elapsed: 00:00:00.11
21:28:00 SQL> 
21:28:00 SQL> -- rpt
21:28:00 SQL> 
21:28:00 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:28:00   2  
21:28:00 SQL> SELECT MAX(prdate) FROM bme
21:28:00   2  
21:28:00 SQL> -- Now build model from bme and score sme
21:28:00 SQL> @score1gattn.sql
21:28:00 SQL> -- score1gattn.sql
21:28:00 SQL> 
21:28:00 SQL> -- Does the 1st SVM score
21:28:00 SQL> 
21:28:00 SQL> -- Fill up svmc_apply_prep
21:28:00 SQL> @score_gattn.sql
21:28:00 SQL> --
21:28:00 SQL> -- score_gattn.sql
21:28:00 SQL> --
21:28:00 SQL> 
21:28:00 SQL> -- usage: score_gattn.sql
21:28:00 SQL> 
21:28:00 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:28:00 SQL> 
21:28:00 SQL> DEFINE target	= 'gattn'
21:28:00 SQL> DEFINE model_name = 'forex14'
21:28:00 SQL> DEFINE bldtable	= 'bme'
21:28:00 SQL> DEFINE scoretable = 'sme'
21:28:00 SQL> DEFINE case_id	= 'prdate'
21:28:00 SQL> 
21:28:00 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:28:00 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:28:00 SQL> 
21:28:00 SQL> -- Builds an SVM model using pl/sql.
21:28:00 SQL> 
21:28:00 SQL> -----------------------------------------------------------------------
21:28:00 SQL> --			    BUILD THE MODEL
21:28:00 SQL> -----------------------------------------------------------------------
21:28:00 SQL> 
21:28:00 SQL> -- Cleanup old build data preparation objects for repeat runs
21:28:00 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:28:00 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:28:00 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:28:00 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:28:00 SQL> 
21:28:00 SQL> 
21:28:00 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:28:00 SQL> --
21:28:00 SQL> -- DROP	TABLE svmc_settings ;
21:28:00 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:28:00 SQL> -- DELETE svmc_settings;
21:28:00 SQL> 
21:28:00 SQL> -- The default classification algorithm is Naive Bayes. So override
21:28:00 SQL> -- this choice to SVM using a settings table.
21:28:00 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:28:00 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:28:00 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:28:00 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:28:00 SQL> -- models.
21:28:00 SQL> --
21:28:00 SQL> 
21:28:00 SQL> -- Do this once and then comment it out.
21:28:00 SQL> -- That makes script go faster.
21:28:00 SQL> -- BEGIN
21:28:00 SQL> -- -- Populate settings table
21:28:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:28:00 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:28:00 SQL> --
21:28:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:28:00 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:28:00 SQL> --
21:28:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:28:00 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:28:00 SQL> --   COMMIT;
21:28:00 SQL> -- END;
21:28:00 SQL> -- /
21:28:00 SQL> 
21:28:00 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:28:00 SQL> 
21:28:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:28:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:28:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:28:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:28:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:28:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:28:00 SQL> 
21:28:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:28:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:28:00 SQL> 
21:28:00 SQL> --------------------------------
21:28:00 SQL> -- PREPARE BUILD (TRAINING) DATA
21:28:00 SQL> --
21:28:00 SQL> 
21:28:00 SQL> -- 1. Missing Value treatment for all Predictors and
21:28:00 SQL> -- 2. Outlier Treatment and
21:28:00 SQL> -- 3. Normalization are performed below.
21:28:00 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:28:00 SQL> --    normalized here.
21:28:00 SQL> 
21:28:00 SQL> BEGIN
21:28:00   2  	-- Perform missing value treatment for all predictors
21:28:00   3  	-- create miss tables
21:28:00   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:28:00   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:28:00   6  
21:28:00   7  	-- populate miss tables
21:28:00   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:28:00   9  	  miss_table_name => 'svmc_miss_num',
21:28:00  10  	  data_table_name => '&bldtable',
21:28:00  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:28:00  12  
21:28:00  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:28:00  14  	  miss_table_name => 'svmc_miss_cat',
21:28:00  15  	  data_table_name => '&bldtable',
21:28:00  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:28:00  17  
21:28:00  18  	-- xform input data to replace missing values
21:28:00  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:28:00  20  	  miss_table_name => 'svmc_miss_num',
21:28:00  21  	  data_table_name => '&bldtable',
21:28:00  22  	  xform_view_name => 'xformed_build_miss_num');
21:28:00  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:28:00  24  	  miss_table_name => 'svmc_miss_cat',
21:28:00  25  	  data_table_name => '&bldtable',
21:28:00  26  	  xform_view_name => 'xformed_build_miss_cat');
21:28:00  27  
21:28:00  28  	-- Perform outlier treatment.
21:28:00  29  	-- create clip table
21:28:00  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:28:00  31  
21:28:00  32  	-- populate clip table
21:28:00  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:28:00  34  	  clip_table_name => 'svmc_clip',
21:28:00  35  	  data_table_name => '&bldtable',
21:28:00  36  	  tail_frac	  => 0.025,
21:28:00  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:28:00  38  
21:28:00  39  	-- xform input data to winsorized data
21:28:00  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:28:00  41  	  clip_table_name => 'svmc_clip',
21:28:00  42  	  data_table_name => '&bldtable',
21:28:00  43  	  xform_view_name => 'svmc_winsor');
21:28:00  44  
21:28:00  45  	-- create normalization table
21:28:00  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:28:00  47  
21:28:00  48  	-- populate normalization table based on winsorized data
21:28:00  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:28:00  50  	  norm_table_name => 'svmc_norm',
21:28:00  51  	  data_table_name => 'svmc_winsor',
21:28:00  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:28:00  53  
21:28:00  54  	-- normalize the original data
21:28:00  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:28:00  56  	  norm_table_name => 'svmc_norm',
21:28:00  57  	  data_table_name => '&bldtable',
21:28:00  58  	  xform_view_name => 'svmc_build_prep');
21:28:00  59  END;
21:28:00  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.98
21:28:18 SQL> 
21:28:18 SQL> ---------------------
21:28:18 SQL> -- CREATE A NEW MODEL
21:28:18 SQL> --
21:28:18 SQL> -- Cleanup old model with the same name for repeat runs
21:28:18 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:28:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:18   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
21:28:19 SQL> 
21:28:19 SQL> -- Build a new SVM Model
21:28:19 SQL> BEGIN
21:28:19   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:28:19   3  	  model_name	      => '&model_name',
21:28:19   4  	  mining_function     => dbms_data_mining.classification,
21:28:19   5  	  data_table_name     => 'svmc_build_prep',
21:28:19   6  	  case_id_column_name => '&case_id',
21:28:19   7  	  target_column_name  => '&target',
21:28:19   8  	  settings_table_name => 'svmc_settings');
21:28:19   9  END;
21:28:19  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.20
21:28:46 SQL> 
21:28:46 SQL> -----------------------------------------------------------------------
21:28:46 SQL> --			       APPLY/score THE MODEL
21:28:46 SQL> -----------------------------------------------------------------------
21:28:46 SQL> 
21:28:46 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:28:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:28:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:28:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:28:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:28:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:28:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:28:46 SQL> -----------------------
21:28:46 SQL> -- PREPARE SCORING DATA
21:28:46 SQL> --
21:28:46 SQL> -- If the data for model creation has been prepared, then the data
21:28:46 SQL> -- to be scored using the model must be prepared in the same manner
21:28:46 SQL> -- in order to obtain meaningful results.
21:28:46 SQL> --
21:28:46 SQL> -- 1. Missing Value treatment for all Predictors and
21:28:46 SQL> -- 2. Normalization
21:28:46 SQL> -- No outlier treatment will be performed during test and apply. The
21:28:46 SQL> -- normalization step is sufficient, since the normalization parameters
21:28:46 SQL> -- already capture the effects of outlier treatment done with build data.
21:28:46 SQL> --
21:28:46 SQL> BEGIN
21:28:46   2  	-- Xform Test data to replace missing values
21:28:46   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:28:46   4  	  miss_table_name => 'svmc_miss_num',
21:28:46   5  	  data_table_name => '&scoretable',
21:28:46   6  	  xform_view_name => 'xformed_apply_miss_num');
21:28:46   7  
21:28:46   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:28:46   9  	  miss_table_name => 'svmc_miss_cat',
21:28:46  10  	  data_table_name => '&scoretable',
21:28:46  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:28:46  12  
21:28:46  13  	-- Normalize the data to be scored
21:28:46  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:28:46  15  	  norm_table_name => 'svmc_norm',
21:28:46  16  	  data_table_name => '&scoretable',
21:28:46  17  	  xform_view_name => 'svmc_apply_prep');
21:28:46  18  END;
21:28:46  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.13
21:28:47 SQL> 
21:28:47 SQL> -- Use same model_name used in score_gattn.sql
21:28:47 SQL> DEFINE model_name = 'forex14'
21:28:47 SQL> 
21:28:47 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:28:47 SQL> 
21:28:47 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:28:47   2  SELECT
21:28:47   3  prdate
21:28:47   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:28:47   5  ,sysdate
21:28:47   6  ,SUBSTR(prdate,1,3)pair
21:28:47   7  ,SUBSTR(prdate,4,19)ydate
21:28:47   8  FROM svmc_apply_prep
21:28:47   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
21:28:47 SQL> @chf_score1day_gattn.sql	2010-12-17 11:00:00
21:28:47 SQL> --
21:28:47 SQL> -- chf_score1day_gattn.sql
21:28:47 SQL> --
21:28:47 SQL> 
21:28:47 SQL> CREATE OR REPLACE VIEW sme AS
21:28:47   2  SELECT
21:28:47   3  'chf'||m.ydate prdate
21:28:47   4  ,NULL gattn
21:28:47   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:28:47   6  ,eur_g00
21:28:47   7  ,eur_g01
21:28:47   8  ,eur_g02
21:28:47   9  ,eur_g03
21:28:47  10  ,eur_g04
21:28:47  11  ,eur_g05
21:28:47  12  ,eur_g06
21:28:47  13  ,eur_g07
21:28:47  14  ,eur_g08
21:28:47  15  ,eur_g09
21:28:47  16  ,eur_g10
21:28:47  17  ,eur_g11
21:28:47  18  ,eur_g12
21:28:47  19  ,eur_g13
21:28:47  20  ,eur_g14
21:28:47  21  ,eur_g15
21:28:47  22  ,eur_g16
21:28:47  23  ,eur_g17
21:28:47  24  ,eur_g18
21:28:47  25  ,eur_g19
21:28:47  26  ,eur_g20
21:28:47  27  ,eur_g21
21:28:47  28  ,eur_g22
21:28:47  29  ,eur_g23
21:28:47  30  ,eur_g24
21:28:47  31  ,eur_g25
21:28:47  32  ,eur_g26
21:28:47  33  ,eur_g27
21:28:47  34  ,eur_g28
21:28:47  35  ,eur_g29
21:28:47  36  ,eur_g30
21:28:47  37  ,eur_g31
21:28:47  38  ,eur_g32
21:28:47  39  ,eur_g33
21:28:47  40  ,eur_g34
21:28:47  41  ,eur_g35
21:28:47  42  ,eur_g36
21:28:47  43  ,eur_g37
21:28:47  44  ,eur_g38
21:28:47  45  ,eur_g39
21:28:47  46  ,eur_g40
21:28:47  47  ,aud_g00
21:28:47  48  ,aud_g01
21:28:47  49  ,aud_g02
21:28:47  50  ,aud_g03
21:28:47  51  ,aud_g04
21:28:47  52  ,aud_g05
21:28:47  53  ,aud_g06
21:28:47  54  ,aud_g07
21:28:47  55  ,aud_g08
21:28:47  56  ,aud_g09
21:28:47  57  ,aud_g10
21:28:47  58  ,aud_g11
21:28:47  59  ,aud_g12
21:28:47  60  ,aud_g13
21:28:47  61  ,aud_g14
21:28:47  62  ,aud_g15
21:28:47  63  ,aud_g16
21:28:47  64  ,aud_g17
21:28:47  65  ,aud_g18
21:28:47  66  ,aud_g19
21:28:47  67  ,aud_g20
21:28:47  68  ,aud_g21
21:28:47  69  ,aud_g22
21:28:47  70  ,aud_g23
21:28:47  71  ,aud_g24
21:28:47  72  ,aud_g25
21:28:47  73  ,aud_g26
21:28:47  74  ,aud_g27
21:28:47  75  ,aud_g28
21:28:47  76  ,aud_g29
21:28:47  77  ,aud_g30
21:28:47  78  ,aud_g31
21:28:47  79  ,aud_g32
21:28:47  80  ,aud_g33
21:28:47  81  ,aud_g34
21:28:47  82  ,aud_g35
21:28:47  83  ,aud_g36
21:28:47  84  ,aud_g37
21:28:47  85  ,aud_g38
21:28:47  86  ,aud_g39
21:28:47  87  ,aud_g40
21:28:47  88  ,gbp_g00
21:28:47  89  ,gbp_g01
21:28:47  90  ,gbp_g02
21:28:47  91  ,gbp_g03
21:28:47  92  ,gbp_g04
21:28:47  93  ,gbp_g05
21:28:47  94  ,gbp_g06
21:28:47  95  ,gbp_g07
21:28:47  96  ,gbp_g08
21:28:47  97  ,gbp_g09
21:28:47  98  ,gbp_g10
21:28:47  99  ,gbp_g11
21:28:47 100  ,gbp_g12
21:28:47 101  ,gbp_g13
21:28:47 102  ,gbp_g14
21:28:47 103  ,gbp_g15
21:28:47 104  ,gbp_g16
21:28:47 105  ,gbp_g17
21:28:47 106  ,gbp_g18
21:28:47 107  ,gbp_g19
21:28:47 108  ,gbp_g20
21:28:47 109  ,gbp_g21
21:28:47 110  ,gbp_g22
21:28:47 111  ,gbp_g23
21:28:47 112  ,gbp_g24
21:28:47 113  ,gbp_g25
21:28:47 114  ,gbp_g26
21:28:47 115  ,gbp_g27
21:28:47 116  ,gbp_g28
21:28:47 117  ,gbp_g29
21:28:47 118  ,gbp_g30
21:28:47 119  ,gbp_g31
21:28:47 120  ,gbp_g32
21:28:47 121  ,gbp_g33
21:28:47 122  ,gbp_g34
21:28:47 123  ,gbp_g35
21:28:47 124  ,gbp_g36
21:28:47 125  ,gbp_g37
21:28:47 126  ,gbp_g38
21:28:47 127  ,gbp_g39
21:28:47 128  ,gbp_g40
21:28:47 129  ,jpy_g00
21:28:47 130  ,jpy_g01
21:28:47 131  ,jpy_g02
21:28:47 132  ,jpy_g03
21:28:47 133  ,jpy_g04
21:28:47 134  ,jpy_g05
21:28:47 135  ,jpy_g06
21:28:47 136  ,jpy_g07
21:28:47 137  ,jpy_g08
21:28:47 138  ,jpy_g09
21:28:47 139  ,jpy_g10
21:28:47 140  ,jpy_g11
21:28:47 141  ,jpy_g12
21:28:47 142  ,jpy_g13
21:28:47 143  ,jpy_g14
21:28:47 144  ,jpy_g15
21:28:47 145  ,jpy_g16
21:28:47 146  ,jpy_g17
21:28:47 147  ,jpy_g18
21:28:47 148  ,jpy_g19
21:28:47 149  ,jpy_g20
21:28:47 150  ,jpy_g21
21:28:47 151  ,jpy_g22
21:28:47 152  ,jpy_g23
21:28:47 153  ,jpy_g24
21:28:47 154  ,jpy_g25
21:28:47 155  ,jpy_g26
21:28:47 156  ,jpy_g27
21:28:47 157  ,jpy_g28
21:28:47 158  ,jpy_g29
21:28:47 159  ,jpy_g30
21:28:47 160  ,jpy_g31
21:28:47 161  ,jpy_g32
21:28:47 162  ,jpy_g33
21:28:47 163  ,jpy_g34
21:28:47 164  ,jpy_g35
21:28:47 165  ,jpy_g36
21:28:47 166  ,jpy_g37
21:28:47 167  ,jpy_g38
21:28:47 168  ,jpy_g39
21:28:47 169  ,jpy_g40
21:28:47 170  ,cad_g00
21:28:47 171  ,cad_g01
21:28:47 172  ,cad_g02
21:28:47 173  ,cad_g03
21:28:47 174  ,cad_g04
21:28:47 175  ,cad_g05
21:28:47 176  ,cad_g06
21:28:47 177  ,cad_g07
21:28:47 178  ,cad_g08
21:28:47 179  ,cad_g09
21:28:47 180  ,cad_g10
21:28:47 181  ,cad_g11
21:28:47 182  ,cad_g12
21:28:47 183  ,cad_g13
21:28:47 184  ,cad_g14
21:28:47 185  ,cad_g15
21:28:47 186  ,cad_g16
21:28:47 187  ,cad_g17
21:28:47 188  ,cad_g18
21:28:47 189  ,cad_g19
21:28:47 190  ,cad_g20
21:28:47 191  ,cad_g21
21:28:47 192  ,cad_g22
21:28:47 193  ,cad_g23
21:28:47 194  ,cad_g24
21:28:47 195  ,cad_g25
21:28:47 196  ,cad_g26
21:28:47 197  ,cad_g27
21:28:47 198  ,cad_g28
21:28:47 199  ,cad_g29
21:28:47 200  ,cad_g30
21:28:47 201  ,cad_g31
21:28:47 202  ,cad_g32
21:28:47 203  ,cad_g33
21:28:47 204  ,cad_g34
21:28:47 205  ,cad_g35
21:28:47 206  ,cad_g36
21:28:47 207  ,cad_g37
21:28:47 208  ,cad_g38
21:28:47 209  ,cad_g39
21:28:47 210  ,cad_g40
21:28:47 211  ,chf_g00
21:28:47 212  ,chf_g01
21:28:47 213  ,chf_g02
21:28:47 214  ,chf_g03
21:28:47 215  ,chf_g04
21:28:47 216  ,chf_g05
21:28:47 217  ,chf_g06
21:28:47 218  ,chf_g07
21:28:47 219  ,chf_g08
21:28:47 220  ,chf_g09
21:28:47 221  ,chf_g10
21:28:47 222  ,chf_g11
21:28:47 223  ,chf_g12
21:28:47 224  ,chf_g13
21:28:47 225  ,chf_g14
21:28:47 226  ,chf_g15
21:28:47 227  ,chf_g16
21:28:47 228  ,chf_g17
21:28:47 229  ,chf_g18
21:28:47 230  ,chf_g19
21:28:47 231  ,chf_g20
21:28:47 232  ,chf_g21
21:28:47 233  ,chf_g22
21:28:47 234  ,chf_g23
21:28:47 235  ,chf_g24
21:28:47 236  ,chf_g25
21:28:47 237  ,chf_g26
21:28:47 238  ,chf_g27
21:28:47 239  ,chf_g28
21:28:47 240  ,chf_g29
21:28:47 241  ,chf_g30
21:28:47 242  ,chf_g31
21:28:47 243  ,chf_g32
21:28:47 244  ,chf_g33
21:28:47 245  ,chf_g34
21:28:47 246  ,chf_g35
21:28:47 247  ,chf_g36
21:28:47 248  ,chf_g37
21:28:47 249  ,chf_g38
21:28:47 250  ,chf_g39
21:28:47 251  ,chf_g40
21:28:47 252  FROM chf_ms14 m
21:28:47 253  WHERE m.ydate = '&1'||' '||'&2'
21:28:47 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'11:00:00'

View created.

Elapsed: 00:00:00.11
21:28:47 SQL> 
21:28:47 SQL> -- rpt
21:28:47 SQL> -- We should see just 1 row:
21:28:47 SQL> 
21:28:47 SQL> SELECT COUNT(prdate) FROM sme
21:28:47   2  
21:28:47 SQL> -- Build the model:
21:28:47 SQL> CREATE OR REPLACE VIEW bme AS
21:28:47   2  SELECT
21:28:47   3  'chf'||m.ydate prdate
21:28:47   4  ,gattn
21:28:47   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:28:47   6  ,eur_g00
21:28:47   7  ,eur_g01
21:28:47   8  ,eur_g02
21:28:47   9  ,eur_g03
21:28:47  10  ,eur_g04
21:28:47  11  ,eur_g05
21:28:47  12  ,eur_g06
21:28:47  13  ,eur_g07
21:28:47  14  ,eur_g08
21:28:47  15  ,eur_g09
21:28:47  16  ,eur_g10
21:28:47  17  ,eur_g11
21:28:47  18  ,eur_g12
21:28:47  19  ,eur_g13
21:28:47  20  ,eur_g14
21:28:47  21  ,eur_g15
21:28:47  22  ,eur_g16
21:28:47  23  ,eur_g17
21:28:47  24  ,eur_g18
21:28:47  25  ,eur_g19
21:28:47  26  ,eur_g20
21:28:47  27  ,eur_g21
21:28:47  28  ,eur_g22
21:28:47  29  ,eur_g23
21:28:47  30  ,eur_g24
21:28:47  31  ,eur_g25
21:28:47  32  ,eur_g26
21:28:47  33  ,eur_g27
21:28:47  34  ,eur_g28
21:28:47  35  ,eur_g29
21:28:47  36  ,eur_g30
21:28:47  37  ,eur_g31
21:28:47  38  ,eur_g32
21:28:47  39  ,eur_g33
21:28:47  40  ,eur_g34
21:28:47  41  ,eur_g35
21:28:47  42  ,eur_g36
21:28:47  43  ,eur_g37
21:28:47  44  ,eur_g38
21:28:47  45  ,eur_g39
21:28:47  46  ,eur_g40
21:28:47  47  ,aud_g00
21:28:47  48  ,aud_g01
21:28:47  49  ,aud_g02
21:28:47  50  ,aud_g03
21:28:47  51  ,aud_g04
21:28:47  52  ,aud_g05
21:28:47  53  ,aud_g06
21:28:47  54  ,aud_g07
21:28:47  55  ,aud_g08
21:28:47  56  ,aud_g09
21:28:47  57  ,aud_g10
21:28:47  58  ,aud_g11
21:28:47  59  ,aud_g12
21:28:47  60  ,aud_g13
21:28:47  61  ,aud_g14
21:28:47  62  ,aud_g15
21:28:47  63  ,aud_g16
21:28:47  64  ,aud_g17
21:28:47  65  ,aud_g18
21:28:47  66  ,aud_g19
21:28:47  67  ,aud_g20
21:28:47  68  ,aud_g21
21:28:47  69  ,aud_g22
21:28:47  70  ,aud_g23
21:28:47  71  ,aud_g24
21:28:47  72  ,aud_g25
21:28:47  73  ,aud_g26
21:28:47  74  ,aud_g27
21:28:47  75  ,aud_g28
21:28:47  76  ,aud_g29
21:28:47  77  ,aud_g30
21:28:47  78  ,aud_g31
21:28:47  79  ,aud_g32
21:28:47  80  ,aud_g33
21:28:47  81  ,aud_g34
21:28:47  82  ,aud_g35
21:28:47  83  ,aud_g36
21:28:47  84  ,aud_g37
21:28:47  85  ,aud_g38
21:28:47  86  ,aud_g39
21:28:47  87  ,aud_g40
21:28:47  88  ,gbp_g00
21:28:47  89  ,gbp_g01
21:28:47  90  ,gbp_g02
21:28:47  91  ,gbp_g03
21:28:47  92  ,gbp_g04
21:28:47  93  ,gbp_g05
21:28:47  94  ,gbp_g06
21:28:47  95  ,gbp_g07
21:28:47  96  ,gbp_g08
21:28:47  97  ,gbp_g09
21:28:47  98  ,gbp_g10
21:28:47  99  ,gbp_g11
21:28:47 100  ,gbp_g12
21:28:47 101  ,gbp_g13
21:28:47 102  ,gbp_g14
21:28:47 103  ,gbp_g15
21:28:47 104  ,gbp_g16
21:28:47 105  ,gbp_g17
21:28:47 106  ,gbp_g18
21:28:47 107  ,gbp_g19
21:28:47 108  ,gbp_g20
21:28:47 109  ,gbp_g21
21:28:47 110  ,gbp_g22
21:28:47 111  ,gbp_g23
21:28:47 112  ,gbp_g24
21:28:47 113  ,gbp_g25
21:28:47 114  ,gbp_g26
21:28:47 115  ,gbp_g27
21:28:47 116  ,gbp_g28
21:28:47 117  ,gbp_g29
21:28:47 118  ,gbp_g30
21:28:47 119  ,gbp_g31
21:28:47 120  ,gbp_g32
21:28:47 121  ,gbp_g33
21:28:47 122  ,gbp_g34
21:28:47 123  ,gbp_g35
21:28:47 124  ,gbp_g36
21:28:47 125  ,gbp_g37
21:28:47 126  ,gbp_g38
21:28:47 127  ,gbp_g39
21:28:47 128  ,gbp_g40
21:28:47 129  ,jpy_g00
21:28:47 130  ,jpy_g01
21:28:47 131  ,jpy_g02
21:28:47 132  ,jpy_g03
21:28:47 133  ,jpy_g04
21:28:47 134  ,jpy_g05
21:28:47 135  ,jpy_g06
21:28:47 136  ,jpy_g07
21:28:47 137  ,jpy_g08
21:28:47 138  ,jpy_g09
21:28:47 139  ,jpy_g10
21:28:47 140  ,jpy_g11
21:28:47 141  ,jpy_g12
21:28:47 142  ,jpy_g13
21:28:47 143  ,jpy_g14
21:28:47 144  ,jpy_g15
21:28:47 145  ,jpy_g16
21:28:47 146  ,jpy_g17
21:28:47 147  ,jpy_g18
21:28:47 148  ,jpy_g19
21:28:47 149  ,jpy_g20
21:28:47 150  ,jpy_g21
21:28:47 151  ,jpy_g22
21:28:47 152  ,jpy_g23
21:28:47 153  ,jpy_g24
21:28:47 154  ,jpy_g25
21:28:47 155  ,jpy_g26
21:28:47 156  ,jpy_g27
21:28:47 157  ,jpy_g28
21:28:47 158  ,jpy_g29
21:28:47 159  ,jpy_g30
21:28:47 160  ,jpy_g31
21:28:47 161  ,jpy_g32
21:28:47 162  ,jpy_g33
21:28:47 163  ,jpy_g34
21:28:47 164  ,jpy_g35
21:28:47 165  ,jpy_g36
21:28:47 166  ,jpy_g37
21:28:47 167  ,jpy_g38
21:28:47 168  ,jpy_g39
21:28:47 169  ,jpy_g40
21:28:47 170  ,cad_g00
21:28:47 171  ,cad_g01
21:28:47 172  ,cad_g02
21:28:47 173  ,cad_g03
21:28:47 174  ,cad_g04
21:28:47 175  ,cad_g05
21:28:47 176  ,cad_g06
21:28:47 177  ,cad_g07
21:28:47 178  ,cad_g08
21:28:47 179  ,cad_g09
21:28:47 180  ,cad_g10
21:28:47 181  ,cad_g11
21:28:47 182  ,cad_g12
21:28:47 183  ,cad_g13
21:28:47 184  ,cad_g14
21:28:47 185  ,cad_g15
21:28:47 186  ,cad_g16
21:28:47 187  ,cad_g17
21:28:47 188  ,cad_g18
21:28:47 189  ,cad_g19
21:28:47 190  ,cad_g20
21:28:47 191  ,cad_g21
21:28:47 192  ,cad_g22
21:28:47 193  ,cad_g23
21:28:47 194  ,cad_g24
21:28:47 195  ,cad_g25
21:28:47 196  ,cad_g26
21:28:47 197  ,cad_g27
21:28:47 198  ,cad_g28
21:28:47 199  ,cad_g29
21:28:47 200  ,cad_g30
21:28:47 201  ,cad_g31
21:28:47 202  ,cad_g32
21:28:47 203  ,cad_g33
21:28:47 204  ,cad_g34
21:28:47 205  ,cad_g35
21:28:47 206  ,cad_g36
21:28:47 207  ,cad_g37
21:28:47 208  ,cad_g38
21:28:47 209  ,cad_g39
21:28:47 210  ,cad_g40
21:28:47 211  ,chf_g00
21:28:47 212  ,chf_g01
21:28:47 213  ,chf_g02
21:28:47 214  ,chf_g03
21:28:47 215  ,chf_g04
21:28:47 216  ,chf_g05
21:28:47 217  ,chf_g06
21:28:47 218  ,chf_g07
21:28:47 219  ,chf_g08
21:28:47 220  ,chf_g09
21:28:47 221  ,chf_g10
21:28:47 222  ,chf_g11
21:28:47 223  ,chf_g12
21:28:47 224  ,chf_g13
21:28:47 225  ,chf_g14
21:28:47 226  ,chf_g15
21:28:47 227  ,chf_g16
21:28:47 228  ,chf_g17
21:28:47 229  ,chf_g18
21:28:47 230  ,chf_g19
21:28:47 231  ,chf_g20
21:28:47 232  ,chf_g21
21:28:47 233  ,chf_g22
21:28:47 234  ,chf_g23
21:28:47 235  ,chf_g24
21:28:47 236  ,chf_g25
21:28:47 237  ,chf_g26
21:28:47 238  ,chf_g27
21:28:47 239  ,chf_g28
21:28:47 240  ,chf_g29
21:28:47 241  ,chf_g30
21:28:47 242  ,chf_g31
21:28:47 243  ,chf_g32
21:28:47 244  ,chf_g33
21:28:47 245  ,chf_g34
21:28:47 246  ,chf_g35
21:28:47 247  ,chf_g36
21:28:47 248  ,chf_g37
21:28:47 249  ,chf_g38
21:28:47 250  ,chf_g39
21:28:47 251  ,chf_g40
21:28:47 252  FROM chf_ms14 m
21:28:47 253  WHERE gattn IN('nup','up')
21:28:47 254  AND 1+m.ydate < '&1'||' '||'&2'
21:28:47 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'11:00:00'

View created.

Elapsed: 00:00:00.11
21:28:47 SQL> 
21:28:47 SQL> -- rpt
21:28:47 SQL> 
21:28:47 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:28:47   2  
21:28:47 SQL> SELECT MAX(prdate) FROM bme
21:28:47   2  
21:28:47 SQL> -- Now build model from bme and score sme
21:28:47 SQL> @score1gattn.sql
21:28:47 SQL> -- score1gattn.sql
21:28:47 SQL> 
21:28:47 SQL> -- Does the 1st SVM score
21:28:47 SQL> 
21:28:47 SQL> -- Fill up svmc_apply_prep
21:28:47 SQL> @score_gattn.sql
21:28:47 SQL> --
21:28:47 SQL> -- score_gattn.sql
21:28:47 SQL> --
21:28:47 SQL> 
21:28:47 SQL> -- usage: score_gattn.sql
21:28:47 SQL> 
21:28:47 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:28:47 SQL> 
21:28:47 SQL> DEFINE target	= 'gattn'
21:28:47 SQL> DEFINE model_name = 'forex14'
21:28:47 SQL> DEFINE bldtable	= 'bme'
21:28:47 SQL> DEFINE scoretable = 'sme'
21:28:47 SQL> DEFINE case_id	= 'prdate'
21:28:47 SQL> 
21:28:47 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:28:47 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:28:47 SQL> 
21:28:47 SQL> -- Builds an SVM model using pl/sql.
21:28:47 SQL> 
21:28:47 SQL> -----------------------------------------------------------------------
21:28:47 SQL> --			    BUILD THE MODEL
21:28:47 SQL> -----------------------------------------------------------------------
21:28:47 SQL> 
21:28:47 SQL> -- Cleanup old build data preparation objects for repeat runs
21:28:47 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:28:47 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:28:47 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:28:47 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:28:47 SQL> 
21:28:47 SQL> 
21:28:47 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:28:47 SQL> --
21:28:47 SQL> -- DROP	TABLE svmc_settings ;
21:28:47 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:28:47 SQL> -- DELETE svmc_settings;
21:28:47 SQL> 
21:28:47 SQL> -- The default classification algorithm is Naive Bayes. So override
21:28:47 SQL> -- this choice to SVM using a settings table.
21:28:47 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:28:47 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:28:47 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:28:47 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:28:47 SQL> -- models.
21:28:47 SQL> --
21:28:47 SQL> 
21:28:47 SQL> -- Do this once and then comment it out.
21:28:47 SQL> -- That makes script go faster.
21:28:47 SQL> -- BEGIN
21:28:47 SQL> -- -- Populate settings table
21:28:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:28:47 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:28:47 SQL> --
21:28:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:28:47 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:28:47 SQL> --
21:28:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:28:47 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:28:47 SQL> --   COMMIT;
21:28:47 SQL> -- END;
21:28:47 SQL> -- /
21:28:47 SQL> 
21:28:47 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:28:47 SQL> 
21:28:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:28:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
21:28:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:28:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:28:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:28:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:28:47 SQL> 
21:28:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:28:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:28:47 SQL> 
21:28:47 SQL> --------------------------------
21:28:47 SQL> -- PREPARE BUILD (TRAINING) DATA
21:28:47 SQL> --
21:28:47 SQL> 
21:28:47 SQL> -- 1. Missing Value treatment for all Predictors and
21:28:47 SQL> -- 2. Outlier Treatment and
21:28:47 SQL> -- 3. Normalization are performed below.
21:28:47 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:28:47 SQL> --    normalized here.
21:28:47 SQL> 
21:28:47 SQL> BEGIN
21:28:47   2  	-- Perform missing value treatment for all predictors
21:28:47   3  	-- create miss tables
21:28:47   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:28:47   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:28:47   6  
21:28:47   7  	-- populate miss tables
21:28:47   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:28:47   9  	  miss_table_name => 'svmc_miss_num',
21:28:47  10  	  data_table_name => '&bldtable',
21:28:47  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:28:47  12  
21:28:47  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:28:47  14  	  miss_table_name => 'svmc_miss_cat',
21:28:47  15  	  data_table_name => '&bldtable',
21:28:47  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:28:47  17  
21:28:47  18  	-- xform input data to replace missing values
21:28:47  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:28:47  20  	  miss_table_name => 'svmc_miss_num',
21:28:47  21  	  data_table_name => '&bldtable',
21:28:47  22  	  xform_view_name => 'xformed_build_miss_num');
21:28:47  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:28:47  24  	  miss_table_name => 'svmc_miss_cat',
21:28:47  25  	  data_table_name => '&bldtable',
21:28:47  26  	  xform_view_name => 'xformed_build_miss_cat');
21:28:47  27  
21:28:47  28  	-- Perform outlier treatment.
21:28:47  29  	-- create clip table
21:28:47  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:28:47  31  
21:28:47  32  	-- populate clip table
21:28:47  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:28:47  34  	  clip_table_name => 'svmc_clip',
21:28:47  35  	  data_table_name => '&bldtable',
21:28:47  36  	  tail_frac	  => 0.025,
21:28:47  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:28:47  38  
21:28:47  39  	-- xform input data to winsorized data
21:28:47  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:28:47  41  	  clip_table_name => 'svmc_clip',
21:28:47  42  	  data_table_name => '&bldtable',
21:28:47  43  	  xform_view_name => 'svmc_winsor');
21:28:47  44  
21:28:47  45  	-- create normalization table
21:28:47  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:28:47  47  
21:28:47  48  	-- populate normalization table based on winsorized data
21:28:47  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:28:47  50  	  norm_table_name => 'svmc_norm',
21:28:47  51  	  data_table_name => 'svmc_winsor',
21:28:47  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:28:47  53  
21:28:47  54  	-- normalize the original data
21:28:47  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:28:47  56  	  norm_table_name => 'svmc_norm',
21:28:47  57  	  data_table_name => '&bldtable',
21:28:47  58  	  xform_view_name => 'svmc_build_prep');
21:28:47  59  END;
21:28:47  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.18
21:29:06 SQL> 
21:29:06 SQL> ---------------------
21:29:06 SQL> -- CREATE A NEW MODEL
21:29:06 SQL> --
21:29:06 SQL> -- Cleanup old model with the same name for repeat runs
21:29:06 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:29:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:06   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
21:29:07 SQL> 
21:29:07 SQL> -- Build a new SVM Model
21:29:07 SQL> BEGIN
21:29:07   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:29:07   3  	  model_name	      => '&model_name',
21:29:07   4  	  mining_function     => dbms_data_mining.classification,
21:29:07   5  	  data_table_name     => 'svmc_build_prep',
21:29:07   6  	  case_id_column_name => '&case_id',
21:29:07   7  	  target_column_name  => '&target',
21:29:07   8  	  settings_table_name => 'svmc_settings');
21:29:07   9  END;
21:29:07  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.64
21:29:33 SQL> 
21:29:33 SQL> -----------------------------------------------------------------------
21:29:33 SQL> --			       APPLY/score THE MODEL
21:29:33 SQL> -----------------------------------------------------------------------
21:29:33 SQL> 
21:29:33 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:29:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:29:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:29:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:29:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:29:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:29:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
21:29:34 SQL> -----------------------
21:29:34 SQL> -- PREPARE SCORING DATA
21:29:34 SQL> --
21:29:34 SQL> -- If the data for model creation has been prepared, then the data
21:29:34 SQL> -- to be scored using the model must be prepared in the same manner
21:29:34 SQL> -- in order to obtain meaningful results.
21:29:34 SQL> --
21:29:34 SQL> -- 1. Missing Value treatment for all Predictors and
21:29:34 SQL> -- 2. Normalization
21:29:34 SQL> -- No outlier treatment will be performed during test and apply. The
21:29:34 SQL> -- normalization step is sufficient, since the normalization parameters
21:29:34 SQL> -- already capture the effects of outlier treatment done with build data.
21:29:34 SQL> --
21:29:34 SQL> BEGIN
21:29:34   2  	-- Xform Test data to replace missing values
21:29:34   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:29:34   4  	  miss_table_name => 'svmc_miss_num',
21:29:34   5  	  data_table_name => '&scoretable',
21:29:34   6  	  xform_view_name => 'xformed_apply_miss_num');
21:29:34   7  
21:29:34   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:29:34   9  	  miss_table_name => 'svmc_miss_cat',
21:29:34  10  	  data_table_name => '&scoretable',
21:29:34  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:29:34  12  
21:29:34  13  	-- Normalize the data to be scored
21:29:34  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:29:34  15  	  norm_table_name => 'svmc_norm',
21:29:34  16  	  data_table_name => '&scoretable',
21:29:34  17  	  xform_view_name => 'svmc_apply_prep');
21:29:34  18  END;
21:29:34  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.14
21:29:35 SQL> 
21:29:35 SQL> -- Use same model_name used in score_gattn.sql
21:29:35 SQL> DEFINE model_name = 'forex14'
21:29:35 SQL> 
21:29:35 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:29:35 SQL> 
21:29:35 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:29:35   2  SELECT
21:29:35   3  prdate
21:29:35   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:29:35   5  ,sysdate
21:29:35   6  ,SUBSTR(prdate,1,3)pair
21:29:35   7  ,SUBSTR(prdate,4,19)ydate
21:29:35   8  FROM svmc_apply_prep
21:29:35   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:29:35 SQL> @chf_score1day_gattn.sql	2010-12-17 10:55:00
21:29:35 SQL> --
21:29:35 SQL> -- chf_score1day_gattn.sql
21:29:35 SQL> --
21:29:35 SQL> 
21:29:35 SQL> CREATE OR REPLACE VIEW sme AS
21:29:35   2  SELECT
21:29:35   3  'chf'||m.ydate prdate
21:29:35   4  ,NULL gattn
21:29:35   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:29:35   6  ,eur_g00
21:29:35   7  ,eur_g01
21:29:35   8  ,eur_g02
21:29:35   9  ,eur_g03
21:29:35  10  ,eur_g04
21:29:35  11  ,eur_g05
21:29:35  12  ,eur_g06
21:29:35  13  ,eur_g07
21:29:35  14  ,eur_g08
21:29:35  15  ,eur_g09
21:29:35  16  ,eur_g10
21:29:35  17  ,eur_g11
21:29:35  18  ,eur_g12
21:29:35  19  ,eur_g13
21:29:35  20  ,eur_g14
21:29:35  21  ,eur_g15
21:29:35  22  ,eur_g16
21:29:35  23  ,eur_g17
21:29:35  24  ,eur_g18
21:29:35  25  ,eur_g19
21:29:35  26  ,eur_g20
21:29:35  27  ,eur_g21
21:29:35  28  ,eur_g22
21:29:35  29  ,eur_g23
21:29:35  30  ,eur_g24
21:29:35  31  ,eur_g25
21:29:35  32  ,eur_g26
21:29:35  33  ,eur_g27
21:29:35  34  ,eur_g28
21:29:35  35  ,eur_g29
21:29:35  36  ,eur_g30
21:29:35  37  ,eur_g31
21:29:35  38  ,eur_g32
21:29:35  39  ,eur_g33
21:29:35  40  ,eur_g34
21:29:35  41  ,eur_g35
21:29:35  42  ,eur_g36
21:29:35  43  ,eur_g37
21:29:35  44  ,eur_g38
21:29:35  45  ,eur_g39
21:29:35  46  ,eur_g40
21:29:35  47  ,aud_g00
21:29:35  48  ,aud_g01
21:29:35  49  ,aud_g02
21:29:35  50  ,aud_g03
21:29:35  51  ,aud_g04
21:29:35  52  ,aud_g05
21:29:35  53  ,aud_g06
21:29:35  54  ,aud_g07
21:29:35  55  ,aud_g08
21:29:35  56  ,aud_g09
21:29:35  57  ,aud_g10
21:29:35  58  ,aud_g11
21:29:35  59  ,aud_g12
21:29:35  60  ,aud_g13
21:29:35  61  ,aud_g14
21:29:35  62  ,aud_g15
21:29:35  63  ,aud_g16
21:29:35  64  ,aud_g17
21:29:35  65  ,aud_g18
21:29:35  66  ,aud_g19
21:29:35  67  ,aud_g20
21:29:35  68  ,aud_g21
21:29:35  69  ,aud_g22
21:29:35  70  ,aud_g23
21:29:35  71  ,aud_g24
21:29:35  72  ,aud_g25
21:29:35  73  ,aud_g26
21:29:35  74  ,aud_g27
21:29:35  75  ,aud_g28
21:29:35  76  ,aud_g29
21:29:35  77  ,aud_g30
21:29:35  78  ,aud_g31
21:29:35  79  ,aud_g32
21:29:35  80  ,aud_g33
21:29:35  81  ,aud_g34
21:29:35  82  ,aud_g35
21:29:35  83  ,aud_g36
21:29:35  84  ,aud_g37
21:29:35  85  ,aud_g38
21:29:35  86  ,aud_g39
21:29:35  87  ,aud_g40
21:29:35  88  ,gbp_g00
21:29:35  89  ,gbp_g01
21:29:35  90  ,gbp_g02
21:29:35  91  ,gbp_g03
21:29:35  92  ,gbp_g04
21:29:35  93  ,gbp_g05
21:29:35  94  ,gbp_g06
21:29:35  95  ,gbp_g07
21:29:35  96  ,gbp_g08
21:29:35  97  ,gbp_g09
21:29:35  98  ,gbp_g10
21:29:35  99  ,gbp_g11
21:29:35 100  ,gbp_g12
21:29:35 101  ,gbp_g13
21:29:35 102  ,gbp_g14
21:29:35 103  ,gbp_g15
21:29:35 104  ,gbp_g16
21:29:35 105  ,gbp_g17
21:29:35 106  ,gbp_g18
21:29:35 107  ,gbp_g19
21:29:35 108  ,gbp_g20
21:29:35 109  ,gbp_g21
21:29:35 110  ,gbp_g22
21:29:35 111  ,gbp_g23
21:29:35 112  ,gbp_g24
21:29:35 113  ,gbp_g25
21:29:35 114  ,gbp_g26
21:29:35 115  ,gbp_g27
21:29:35 116  ,gbp_g28
21:29:35 117  ,gbp_g29
21:29:35 118  ,gbp_g30
21:29:35 119  ,gbp_g31
21:29:35 120  ,gbp_g32
21:29:35 121  ,gbp_g33
21:29:35 122  ,gbp_g34
21:29:35 123  ,gbp_g35
21:29:35 124  ,gbp_g36
21:29:35 125  ,gbp_g37
21:29:35 126  ,gbp_g38
21:29:35 127  ,gbp_g39
21:29:35 128  ,gbp_g40
21:29:35 129  ,jpy_g00
21:29:35 130  ,jpy_g01
21:29:35 131  ,jpy_g02
21:29:35 132  ,jpy_g03
21:29:35 133  ,jpy_g04
21:29:35 134  ,jpy_g05
21:29:35 135  ,jpy_g06
21:29:35 136  ,jpy_g07
21:29:35 137  ,jpy_g08
21:29:35 138  ,jpy_g09
21:29:35 139  ,jpy_g10
21:29:35 140  ,jpy_g11
21:29:35 141  ,jpy_g12
21:29:35 142  ,jpy_g13
21:29:35 143  ,jpy_g14
21:29:35 144  ,jpy_g15
21:29:35 145  ,jpy_g16
21:29:35 146  ,jpy_g17
21:29:35 147  ,jpy_g18
21:29:35 148  ,jpy_g19
21:29:35 149  ,jpy_g20
21:29:35 150  ,jpy_g21
21:29:35 151  ,jpy_g22
21:29:35 152  ,jpy_g23
21:29:35 153  ,jpy_g24
21:29:35 154  ,jpy_g25
21:29:35 155  ,jpy_g26
21:29:35 156  ,jpy_g27
21:29:35 157  ,jpy_g28
21:29:35 158  ,jpy_g29
21:29:35 159  ,jpy_g30
21:29:35 160  ,jpy_g31
21:29:35 161  ,jpy_g32
21:29:35 162  ,jpy_g33
21:29:35 163  ,jpy_g34
21:29:35 164  ,jpy_g35
21:29:35 165  ,jpy_g36
21:29:35 166  ,jpy_g37
21:29:35 167  ,jpy_g38
21:29:35 168  ,jpy_g39
21:29:35 169  ,jpy_g40
21:29:35 170  ,cad_g00
21:29:35 171  ,cad_g01
21:29:35 172  ,cad_g02
21:29:35 173  ,cad_g03
21:29:35 174  ,cad_g04
21:29:35 175  ,cad_g05
21:29:35 176  ,cad_g06
21:29:35 177  ,cad_g07
21:29:35 178  ,cad_g08
21:29:35 179  ,cad_g09
21:29:35 180  ,cad_g10
21:29:35 181  ,cad_g11
21:29:35 182  ,cad_g12
21:29:35 183  ,cad_g13
21:29:35 184  ,cad_g14
21:29:35 185  ,cad_g15
21:29:35 186  ,cad_g16
21:29:35 187  ,cad_g17
21:29:35 188  ,cad_g18
21:29:35 189  ,cad_g19
21:29:35 190  ,cad_g20
21:29:35 191  ,cad_g21
21:29:35 192  ,cad_g22
21:29:35 193  ,cad_g23
21:29:35 194  ,cad_g24
21:29:35 195  ,cad_g25
21:29:35 196  ,cad_g26
21:29:35 197  ,cad_g27
21:29:35 198  ,cad_g28
21:29:35 199  ,cad_g29
21:29:35 200  ,cad_g30
21:29:35 201  ,cad_g31
21:29:35 202  ,cad_g32
21:29:35 203  ,cad_g33
21:29:35 204  ,cad_g34
21:29:35 205  ,cad_g35
21:29:35 206  ,cad_g36
21:29:35 207  ,cad_g37
21:29:35 208  ,cad_g38
21:29:35 209  ,cad_g39
21:29:35 210  ,cad_g40
21:29:35 211  ,chf_g00
21:29:35 212  ,chf_g01
21:29:35 213  ,chf_g02
21:29:35 214  ,chf_g03
21:29:35 215  ,chf_g04
21:29:35 216  ,chf_g05
21:29:35 217  ,chf_g06
21:29:35 218  ,chf_g07
21:29:35 219  ,chf_g08
21:29:35 220  ,chf_g09
21:29:35 221  ,chf_g10
21:29:35 222  ,chf_g11
21:29:35 223  ,chf_g12
21:29:35 224  ,chf_g13
21:29:35 225  ,chf_g14
21:29:35 226  ,chf_g15
21:29:35 227  ,chf_g16
21:29:35 228  ,chf_g17
21:29:35 229  ,chf_g18
21:29:35 230  ,chf_g19
21:29:35 231  ,chf_g20
21:29:35 232  ,chf_g21
21:29:35 233  ,chf_g22
21:29:35 234  ,chf_g23
21:29:35 235  ,chf_g24
21:29:35 236  ,chf_g25
21:29:35 237  ,chf_g26
21:29:35 238  ,chf_g27
21:29:35 239  ,chf_g28
21:29:35 240  ,chf_g29
21:29:35 241  ,chf_g30
21:29:35 242  ,chf_g31
21:29:35 243  ,chf_g32
21:29:35 244  ,chf_g33
21:29:35 245  ,chf_g34
21:29:35 246  ,chf_g35
21:29:35 247  ,chf_g36
21:29:35 248  ,chf_g37
21:29:35 249  ,chf_g38
21:29:35 250  ,chf_g39
21:29:35 251  ,chf_g40
21:29:35 252  FROM chf_ms14 m
21:29:35 253  WHERE m.ydate = '&1'||' '||'&2'
21:29:35 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:55:00'

View created.

Elapsed: 00:00:00.13
21:29:35 SQL> 
21:29:35 SQL> -- rpt
21:29:35 SQL> -- We should see just 1 row:
21:29:35 SQL> 
21:29:35 SQL> SELECT COUNT(prdate) FROM sme
21:29:35   2  
21:29:35 SQL> -- Build the model:
21:29:35 SQL> CREATE OR REPLACE VIEW bme AS
21:29:35   2  SELECT
21:29:35   3  'chf'||m.ydate prdate
21:29:35   4  ,gattn
21:29:35   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:29:35   6  ,eur_g00
21:29:35   7  ,eur_g01
21:29:35   8  ,eur_g02
21:29:35   9  ,eur_g03
21:29:35  10  ,eur_g04
21:29:35  11  ,eur_g05
21:29:35  12  ,eur_g06
21:29:35  13  ,eur_g07
21:29:35  14  ,eur_g08
21:29:35  15  ,eur_g09
21:29:35  16  ,eur_g10
21:29:35  17  ,eur_g11
21:29:35  18  ,eur_g12
21:29:35  19  ,eur_g13
21:29:35  20  ,eur_g14
21:29:35  21  ,eur_g15
21:29:35  22  ,eur_g16
21:29:35  23  ,eur_g17
21:29:35  24  ,eur_g18
21:29:35  25  ,eur_g19
21:29:35  26  ,eur_g20
21:29:35  27  ,eur_g21
21:29:35  28  ,eur_g22
21:29:35  29  ,eur_g23
21:29:35  30  ,eur_g24
21:29:35  31  ,eur_g25
21:29:35  32  ,eur_g26
21:29:35  33  ,eur_g27
21:29:35  34  ,eur_g28
21:29:35  35  ,eur_g29
21:29:35  36  ,eur_g30
21:29:35  37  ,eur_g31
21:29:35  38  ,eur_g32
21:29:35  39  ,eur_g33
21:29:35  40  ,eur_g34
21:29:35  41  ,eur_g35
21:29:35  42  ,eur_g36
21:29:35  43  ,eur_g37
21:29:35  44  ,eur_g38
21:29:35  45  ,eur_g39
21:29:35  46  ,eur_g40
21:29:35  47  ,aud_g00
21:29:35  48  ,aud_g01
21:29:35  49  ,aud_g02
21:29:35  50  ,aud_g03
21:29:35  51  ,aud_g04
21:29:35  52  ,aud_g05
21:29:35  53  ,aud_g06
21:29:35  54  ,aud_g07
21:29:35  55  ,aud_g08
21:29:35  56  ,aud_g09
21:29:35  57  ,aud_g10
21:29:35  58  ,aud_g11
21:29:35  59  ,aud_g12
21:29:35  60  ,aud_g13
21:29:35  61  ,aud_g14
21:29:35  62  ,aud_g15
21:29:35  63  ,aud_g16
21:29:35  64  ,aud_g17
21:29:35  65  ,aud_g18
21:29:35  66  ,aud_g19
21:29:35  67  ,aud_g20
21:29:35  68  ,aud_g21
21:29:35  69  ,aud_g22
21:29:35  70  ,aud_g23
21:29:35  71  ,aud_g24
21:29:35  72  ,aud_g25
21:29:35  73  ,aud_g26
21:29:35  74  ,aud_g27
21:29:35  75  ,aud_g28
21:29:35  76  ,aud_g29
21:29:35  77  ,aud_g30
21:29:35  78  ,aud_g31
21:29:35  79  ,aud_g32
21:29:35  80  ,aud_g33
21:29:35  81  ,aud_g34
21:29:35  82  ,aud_g35
21:29:35  83  ,aud_g36
21:29:35  84  ,aud_g37
21:29:35  85  ,aud_g38
21:29:35  86  ,aud_g39
21:29:35  87  ,aud_g40
21:29:35  88  ,gbp_g00
21:29:35  89  ,gbp_g01
21:29:35  90  ,gbp_g02
21:29:35  91  ,gbp_g03
21:29:35  92  ,gbp_g04
21:29:35  93  ,gbp_g05
21:29:35  94  ,gbp_g06
21:29:35  95  ,gbp_g07
21:29:35  96  ,gbp_g08
21:29:35  97  ,gbp_g09
21:29:35  98  ,gbp_g10
21:29:35  99  ,gbp_g11
21:29:35 100  ,gbp_g12
21:29:35 101  ,gbp_g13
21:29:35 102  ,gbp_g14
21:29:35 103  ,gbp_g15
21:29:35 104  ,gbp_g16
21:29:35 105  ,gbp_g17
21:29:35 106  ,gbp_g18
21:29:35 107  ,gbp_g19
21:29:35 108  ,gbp_g20
21:29:35 109  ,gbp_g21
21:29:35 110  ,gbp_g22
21:29:35 111  ,gbp_g23
21:29:35 112  ,gbp_g24
21:29:35 113  ,gbp_g25
21:29:35 114  ,gbp_g26
21:29:35 115  ,gbp_g27
21:29:35 116  ,gbp_g28
21:29:35 117  ,gbp_g29
21:29:35 118  ,gbp_g30
21:29:35 119  ,gbp_g31
21:29:35 120  ,gbp_g32
21:29:35 121  ,gbp_g33
21:29:35 122  ,gbp_g34
21:29:35 123  ,gbp_g35
21:29:35 124  ,gbp_g36
21:29:35 125  ,gbp_g37
21:29:35 126  ,gbp_g38
21:29:35 127  ,gbp_g39
21:29:35 128  ,gbp_g40
21:29:35 129  ,jpy_g00
21:29:35 130  ,jpy_g01
21:29:35 131  ,jpy_g02
21:29:35 132  ,jpy_g03
21:29:35 133  ,jpy_g04
21:29:35 134  ,jpy_g05
21:29:35 135  ,jpy_g06
21:29:35 136  ,jpy_g07
21:29:35 137  ,jpy_g08
21:29:35 138  ,jpy_g09
21:29:35 139  ,jpy_g10
21:29:35 140  ,jpy_g11
21:29:35 141  ,jpy_g12
21:29:35 142  ,jpy_g13
21:29:35 143  ,jpy_g14
21:29:35 144  ,jpy_g15
21:29:35 145  ,jpy_g16
21:29:35 146  ,jpy_g17
21:29:35 147  ,jpy_g18
21:29:35 148  ,jpy_g19
21:29:35 149  ,jpy_g20
21:29:35 150  ,jpy_g21
21:29:35 151  ,jpy_g22
21:29:35 152  ,jpy_g23
21:29:35 153  ,jpy_g24
21:29:35 154  ,jpy_g25
21:29:35 155  ,jpy_g26
21:29:35 156  ,jpy_g27
21:29:35 157  ,jpy_g28
21:29:35 158  ,jpy_g29
21:29:35 159  ,jpy_g30
21:29:35 160  ,jpy_g31
21:29:35 161  ,jpy_g32
21:29:35 162  ,jpy_g33
21:29:35 163  ,jpy_g34
21:29:35 164  ,jpy_g35
21:29:35 165  ,jpy_g36
21:29:35 166  ,jpy_g37
21:29:35 167  ,jpy_g38
21:29:35 168  ,jpy_g39
21:29:35 169  ,jpy_g40
21:29:35 170  ,cad_g00
21:29:35 171  ,cad_g01
21:29:35 172  ,cad_g02
21:29:35 173  ,cad_g03
21:29:35 174  ,cad_g04
21:29:35 175  ,cad_g05
21:29:35 176  ,cad_g06
21:29:35 177  ,cad_g07
21:29:35 178  ,cad_g08
21:29:35 179  ,cad_g09
21:29:35 180  ,cad_g10
21:29:35 181  ,cad_g11
21:29:35 182  ,cad_g12
21:29:35 183  ,cad_g13
21:29:35 184  ,cad_g14
21:29:35 185  ,cad_g15
21:29:35 186  ,cad_g16
21:29:35 187  ,cad_g17
21:29:35 188  ,cad_g18
21:29:35 189  ,cad_g19
21:29:35 190  ,cad_g20
21:29:35 191  ,cad_g21
21:29:35 192  ,cad_g22
21:29:35 193  ,cad_g23
21:29:35 194  ,cad_g24
21:29:35 195  ,cad_g25
21:29:35 196  ,cad_g26
21:29:35 197  ,cad_g27
21:29:35 198  ,cad_g28
21:29:35 199  ,cad_g29
21:29:35 200  ,cad_g30
21:29:35 201  ,cad_g31
21:29:35 202  ,cad_g32
21:29:35 203  ,cad_g33
21:29:35 204  ,cad_g34
21:29:35 205  ,cad_g35
21:29:35 206  ,cad_g36
21:29:35 207  ,cad_g37
21:29:35 208  ,cad_g38
21:29:35 209  ,cad_g39
21:29:35 210  ,cad_g40
21:29:35 211  ,chf_g00
21:29:35 212  ,chf_g01
21:29:35 213  ,chf_g02
21:29:35 214  ,chf_g03
21:29:35 215  ,chf_g04
21:29:35 216  ,chf_g05
21:29:35 217  ,chf_g06
21:29:35 218  ,chf_g07
21:29:35 219  ,chf_g08
21:29:35 220  ,chf_g09
21:29:35 221  ,chf_g10
21:29:35 222  ,chf_g11
21:29:35 223  ,chf_g12
21:29:35 224  ,chf_g13
21:29:35 225  ,chf_g14
21:29:35 226  ,chf_g15
21:29:35 227  ,chf_g16
21:29:35 228  ,chf_g17
21:29:35 229  ,chf_g18
21:29:35 230  ,chf_g19
21:29:35 231  ,chf_g20
21:29:35 232  ,chf_g21
21:29:35 233  ,chf_g22
21:29:35 234  ,chf_g23
21:29:35 235  ,chf_g24
21:29:35 236  ,chf_g25
21:29:35 237  ,chf_g26
21:29:35 238  ,chf_g27
21:29:35 239  ,chf_g28
21:29:35 240  ,chf_g29
21:29:35 241  ,chf_g30
21:29:35 242  ,chf_g31
21:29:35 243  ,chf_g32
21:29:35 244  ,chf_g33
21:29:35 245  ,chf_g34
21:29:35 246  ,chf_g35
21:29:35 247  ,chf_g36
21:29:35 248  ,chf_g37
21:29:35 249  ,chf_g38
21:29:35 250  ,chf_g39
21:29:35 251  ,chf_g40
21:29:35 252  FROM chf_ms14 m
21:29:35 253  WHERE gattn IN('nup','up')
21:29:35 254  AND 1+m.ydate < '&1'||' '||'&2'
21:29:35 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:55:00'

View created.

Elapsed: 00:00:00.14
21:29:35 SQL> 
21:29:35 SQL> -- rpt
21:29:35 SQL> 
21:29:35 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:29:35   2  
21:29:35 SQL> SELECT MAX(prdate) FROM bme
21:29:35   2  
21:29:35 SQL> -- Now build model from bme and score sme
21:29:35 SQL> @score1gattn.sql
21:29:35 SQL> -- score1gattn.sql
21:29:35 SQL> 
21:29:35 SQL> -- Does the 1st SVM score
21:29:35 SQL> 
21:29:35 SQL> -- Fill up svmc_apply_prep
21:29:35 SQL> @score_gattn.sql
21:29:35 SQL> --
21:29:35 SQL> -- score_gattn.sql
21:29:35 SQL> --
21:29:35 SQL> 
21:29:35 SQL> -- usage: score_gattn.sql
21:29:35 SQL> 
21:29:35 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:29:35 SQL> 
21:29:35 SQL> DEFINE target	= 'gattn'
21:29:35 SQL> DEFINE model_name = 'forex14'
21:29:35 SQL> DEFINE bldtable	= 'bme'
21:29:35 SQL> DEFINE scoretable = 'sme'
21:29:35 SQL> DEFINE case_id	= 'prdate'
21:29:35 SQL> 
21:29:35 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:29:35 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:29:35 SQL> 
21:29:35 SQL> -- Builds an SVM model using pl/sql.
21:29:35 SQL> 
21:29:35 SQL> -----------------------------------------------------------------------
21:29:35 SQL> --			    BUILD THE MODEL
21:29:35 SQL> -----------------------------------------------------------------------
21:29:35 SQL> 
21:29:35 SQL> -- Cleanup old build data preparation objects for repeat runs
21:29:35 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:29:35 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:29:35 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:29:35 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:29:35 SQL> 
21:29:35 SQL> 
21:29:35 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:29:35 SQL> --
21:29:35 SQL> -- DROP	TABLE svmc_settings ;
21:29:35 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:29:35 SQL> -- DELETE svmc_settings;
21:29:35 SQL> 
21:29:35 SQL> -- The default classification algorithm is Naive Bayes. So override
21:29:35 SQL> -- this choice to SVM using a settings table.
21:29:35 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:29:35 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:29:35 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:29:35 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:29:35 SQL> -- models.
21:29:35 SQL> --
21:29:35 SQL> 
21:29:35 SQL> -- Do this once and then comment it out.
21:29:35 SQL> -- That makes script go faster.
21:29:35 SQL> -- BEGIN
21:29:35 SQL> -- -- Populate settings table
21:29:35 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:29:35 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:29:35 SQL> --
21:29:35 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:29:35 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:29:35 SQL> --
21:29:35 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:29:35 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:29:35 SQL> --   COMMIT;
21:29:35 SQL> -- END;
21:29:35 SQL> -- /
21:29:35 SQL> 
21:29:35 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:29:35 SQL> 
21:29:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:29:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.13
21:29:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:29:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.18
21:29:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:29:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:29:36 SQL> 
21:29:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:29:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:29:36 SQL> 
21:29:36 SQL> --------------------------------
21:29:36 SQL> -- PREPARE BUILD (TRAINING) DATA
21:29:36 SQL> --
21:29:36 SQL> 
21:29:36 SQL> -- 1. Missing Value treatment for all Predictors and
21:29:36 SQL> -- 2. Outlier Treatment and
21:29:36 SQL> -- 3. Normalization are performed below.
21:29:36 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:29:36 SQL> --    normalized here.
21:29:36 SQL> 
21:29:36 SQL> BEGIN
21:29:36   2  	-- Perform missing value treatment for all predictors
21:29:36   3  	-- create miss tables
21:29:36   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:29:36   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:29:36   6  
21:29:36   7  	-- populate miss tables
21:29:36   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:29:36   9  	  miss_table_name => 'svmc_miss_num',
21:29:36  10  	  data_table_name => '&bldtable',
21:29:36  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:29:36  12  
21:29:36  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:29:36  14  	  miss_table_name => 'svmc_miss_cat',
21:29:36  15  	  data_table_name => '&bldtable',
21:29:36  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:29:36  17  
21:29:36  18  	-- xform input data to replace missing values
21:29:36  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:29:36  20  	  miss_table_name => 'svmc_miss_num',
21:29:36  21  	  data_table_name => '&bldtable',
21:29:36  22  	  xform_view_name => 'xformed_build_miss_num');
21:29:36  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:29:36  24  	  miss_table_name => 'svmc_miss_cat',
21:29:36  25  	  data_table_name => '&bldtable',
21:29:36  26  	  xform_view_name => 'xformed_build_miss_cat');
21:29:36  27  
21:29:36  28  	-- Perform outlier treatment.
21:29:36  29  	-- create clip table
21:29:36  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:29:36  31  
21:29:36  32  	-- populate clip table
21:29:36  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:29:36  34  	  clip_table_name => 'svmc_clip',
21:29:36  35  	  data_table_name => '&bldtable',
21:29:36  36  	  tail_frac	  => 0.025,
21:29:36  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:29:36  38  
21:29:36  39  	-- xform input data to winsorized data
21:29:36  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:29:36  41  	  clip_table_name => 'svmc_clip',
21:29:36  42  	  data_table_name => '&bldtable',
21:29:36  43  	  xform_view_name => 'svmc_winsor');
21:29:36  44  
21:29:36  45  	-- create normalization table
21:29:36  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:29:36  47  
21:29:36  48  	-- populate normalization table based on winsorized data
21:29:36  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:29:36  50  	  norm_table_name => 'svmc_norm',
21:29:36  51  	  data_table_name => 'svmc_winsor',
21:29:36  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:29:36  53  
21:29:36  54  	-- normalize the original data
21:29:36  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:29:36  56  	  norm_table_name => 'svmc_norm',
21:29:36  57  	  data_table_name => '&bldtable',
21:29:36  58  	  xform_view_name => 'svmc_build_prep');
21:29:36  59  END;
21:29:36  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.13
21:29:54 SQL> 
21:29:54 SQL> ---------------------
21:29:54 SQL> -- CREATE A NEW MODEL
21:29:54 SQL> --
21:29:54 SQL> -- Cleanup old model with the same name for repeat runs
21:29:54 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:29:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:54   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.27
21:29:55 SQL> 
21:29:55 SQL> -- Build a new SVM Model
21:29:55 SQL> BEGIN
21:29:55   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:29:55   3  	  model_name	      => '&model_name',
21:29:55   4  	  mining_function     => dbms_data_mining.classification,
21:29:55   5  	  data_table_name     => 'svmc_build_prep',
21:29:55   6  	  case_id_column_name => '&case_id',
21:29:55   7  	  target_column_name  => '&target',
21:29:55   8  	  settings_table_name => 'svmc_settings');
21:29:55   9  END;
21:29:55  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.90
21:30:21 SQL> 
21:30:21 SQL> -----------------------------------------------------------------------
21:30:21 SQL> --			       APPLY/score THE MODEL
21:30:21 SQL> -----------------------------------------------------------------------
21:30:21 SQL> 
21:30:21 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:30:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:30:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:30:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:30:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:30:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:30:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:30:21 SQL> -----------------------
21:30:21 SQL> -- PREPARE SCORING DATA
21:30:21 SQL> --
21:30:21 SQL> -- If the data for model creation has been prepared, then the data
21:30:21 SQL> -- to be scored using the model must be prepared in the same manner
21:30:21 SQL> -- in order to obtain meaningful results.
21:30:21 SQL> --
21:30:21 SQL> -- 1. Missing Value treatment for all Predictors and
21:30:21 SQL> -- 2. Normalization
21:30:21 SQL> -- No outlier treatment will be performed during test and apply. The
21:30:21 SQL> -- normalization step is sufficient, since the normalization parameters
21:30:21 SQL> -- already capture the effects of outlier treatment done with build data.
21:30:21 SQL> --
21:30:21 SQL> BEGIN
21:30:21   2  	-- Xform Test data to replace missing values
21:30:21   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:30:21   4  	  miss_table_name => 'svmc_miss_num',
21:30:21   5  	  data_table_name => '&scoretable',
21:30:21   6  	  xform_view_name => 'xformed_apply_miss_num');
21:30:21   7  
21:30:21   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:30:21   9  	  miss_table_name => 'svmc_miss_cat',
21:30:21  10  	  data_table_name => '&scoretable',
21:30:21  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:30:21  12  
21:30:21  13  	-- Normalize the data to be scored
21:30:21  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:30:21  15  	  norm_table_name => 'svmc_norm',
21:30:21  16  	  data_table_name => '&scoretable',
21:30:21  17  	  xform_view_name => 'svmc_apply_prep');
21:30:21  18  END;
21:30:21  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.12
21:30:22 SQL> 
21:30:22 SQL> -- Use same model_name used in score_gattn.sql
21:30:22 SQL> DEFINE model_name = 'forex14'
21:30:22 SQL> 
21:30:22 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:30:22 SQL> 
21:30:22 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:30:22   2  SELECT
21:30:22   3  prdate
21:30:22   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:30:22   5  ,sysdate
21:30:22   6  ,SUBSTR(prdate,1,3)pair
21:30:22   7  ,SUBSTR(prdate,4,19)ydate
21:30:22   8  FROM svmc_apply_prep
21:30:22   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:30:23 SQL> @chf_score1day_gattn.sql	2010-12-17 10:50:00
21:30:23 SQL> --
21:30:23 SQL> -- chf_score1day_gattn.sql
21:30:23 SQL> --
21:30:23 SQL> 
21:30:23 SQL> CREATE OR REPLACE VIEW sme AS
21:30:23   2  SELECT
21:30:23   3  'chf'||m.ydate prdate
21:30:23   4  ,NULL gattn
21:30:23   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:30:23   6  ,eur_g00
21:30:23   7  ,eur_g01
21:30:23   8  ,eur_g02
21:30:23   9  ,eur_g03
21:30:23  10  ,eur_g04
21:30:23  11  ,eur_g05
21:30:23  12  ,eur_g06
21:30:23  13  ,eur_g07
21:30:23  14  ,eur_g08
21:30:23  15  ,eur_g09
21:30:23  16  ,eur_g10
21:30:23  17  ,eur_g11
21:30:23  18  ,eur_g12
21:30:23  19  ,eur_g13
21:30:23  20  ,eur_g14
21:30:23  21  ,eur_g15
21:30:23  22  ,eur_g16
21:30:23  23  ,eur_g17
21:30:23  24  ,eur_g18
21:30:23  25  ,eur_g19
21:30:23  26  ,eur_g20
21:30:23  27  ,eur_g21
21:30:23  28  ,eur_g22
21:30:23  29  ,eur_g23
21:30:23  30  ,eur_g24
21:30:23  31  ,eur_g25
21:30:23  32  ,eur_g26
21:30:23  33  ,eur_g27
21:30:23  34  ,eur_g28
21:30:23  35  ,eur_g29
21:30:23  36  ,eur_g30
21:30:23  37  ,eur_g31
21:30:23  38  ,eur_g32
21:30:23  39  ,eur_g33
21:30:23  40  ,eur_g34
21:30:23  41  ,eur_g35
21:30:23  42  ,eur_g36
21:30:23  43  ,eur_g37
21:30:23  44  ,eur_g38
21:30:23  45  ,eur_g39
21:30:23  46  ,eur_g40
21:30:23  47  ,aud_g00
21:30:23  48  ,aud_g01
21:30:23  49  ,aud_g02
21:30:23  50  ,aud_g03
21:30:23  51  ,aud_g04
21:30:23  52  ,aud_g05
21:30:23  53  ,aud_g06
21:30:23  54  ,aud_g07
21:30:23  55  ,aud_g08
21:30:23  56  ,aud_g09
21:30:23  57  ,aud_g10
21:30:23  58  ,aud_g11
21:30:23  59  ,aud_g12
21:30:23  60  ,aud_g13
21:30:23  61  ,aud_g14
21:30:23  62  ,aud_g15
21:30:23  63  ,aud_g16
21:30:23  64  ,aud_g17
21:30:23  65  ,aud_g18
21:30:23  66  ,aud_g19
21:30:23  67  ,aud_g20
21:30:23  68  ,aud_g21
21:30:23  69  ,aud_g22
21:30:23  70  ,aud_g23
21:30:23  71  ,aud_g24
21:30:23  72  ,aud_g25
21:30:23  73  ,aud_g26
21:30:23  74  ,aud_g27
21:30:23  75  ,aud_g28
21:30:23  76  ,aud_g29
21:30:23  77  ,aud_g30
21:30:23  78  ,aud_g31
21:30:23  79  ,aud_g32
21:30:23  80  ,aud_g33
21:30:23  81  ,aud_g34
21:30:23  82  ,aud_g35
21:30:23  83  ,aud_g36
21:30:23  84  ,aud_g37
21:30:23  85  ,aud_g38
21:30:23  86  ,aud_g39
21:30:23  87  ,aud_g40
21:30:23  88  ,gbp_g00
21:30:23  89  ,gbp_g01
21:30:23  90  ,gbp_g02
21:30:23  91  ,gbp_g03
21:30:23  92  ,gbp_g04
21:30:23  93  ,gbp_g05
21:30:23  94  ,gbp_g06
21:30:23  95  ,gbp_g07
21:30:23  96  ,gbp_g08
21:30:23  97  ,gbp_g09
21:30:23  98  ,gbp_g10
21:30:23  99  ,gbp_g11
21:30:23 100  ,gbp_g12
21:30:23 101  ,gbp_g13
21:30:23 102  ,gbp_g14
21:30:23 103  ,gbp_g15
21:30:23 104  ,gbp_g16
21:30:23 105  ,gbp_g17
21:30:23 106  ,gbp_g18
21:30:23 107  ,gbp_g19
21:30:23 108  ,gbp_g20
21:30:23 109  ,gbp_g21
21:30:23 110  ,gbp_g22
21:30:23 111  ,gbp_g23
21:30:23 112  ,gbp_g24
21:30:23 113  ,gbp_g25
21:30:23 114  ,gbp_g26
21:30:23 115  ,gbp_g27
21:30:23 116  ,gbp_g28
21:30:23 117  ,gbp_g29
21:30:23 118  ,gbp_g30
21:30:23 119  ,gbp_g31
21:30:23 120  ,gbp_g32
21:30:23 121  ,gbp_g33
21:30:23 122  ,gbp_g34
21:30:23 123  ,gbp_g35
21:30:23 124  ,gbp_g36
21:30:23 125  ,gbp_g37
21:30:23 126  ,gbp_g38
21:30:23 127  ,gbp_g39
21:30:23 128  ,gbp_g40
21:30:23 129  ,jpy_g00
21:30:23 130  ,jpy_g01
21:30:23 131  ,jpy_g02
21:30:23 132  ,jpy_g03
21:30:23 133  ,jpy_g04
21:30:23 134  ,jpy_g05
21:30:23 135  ,jpy_g06
21:30:23 136  ,jpy_g07
21:30:23 137  ,jpy_g08
21:30:23 138  ,jpy_g09
21:30:23 139  ,jpy_g10
21:30:23 140  ,jpy_g11
21:30:23 141  ,jpy_g12
21:30:23 142  ,jpy_g13
21:30:23 143  ,jpy_g14
21:30:23 144  ,jpy_g15
21:30:23 145  ,jpy_g16
21:30:23 146  ,jpy_g17
21:30:23 147  ,jpy_g18
21:30:23 148  ,jpy_g19
21:30:23 149  ,jpy_g20
21:30:23 150  ,jpy_g21
21:30:23 151  ,jpy_g22
21:30:23 152  ,jpy_g23
21:30:23 153  ,jpy_g24
21:30:23 154  ,jpy_g25
21:30:23 155  ,jpy_g26
21:30:23 156  ,jpy_g27
21:30:23 157  ,jpy_g28
21:30:23 158  ,jpy_g29
21:30:23 159  ,jpy_g30
21:30:23 160  ,jpy_g31
21:30:23 161  ,jpy_g32
21:30:23 162  ,jpy_g33
21:30:23 163  ,jpy_g34
21:30:23 164  ,jpy_g35
21:30:23 165  ,jpy_g36
21:30:23 166  ,jpy_g37
21:30:23 167  ,jpy_g38
21:30:23 168  ,jpy_g39
21:30:23 169  ,jpy_g40
21:30:23 170  ,cad_g00
21:30:23 171  ,cad_g01
21:30:23 172  ,cad_g02
21:30:23 173  ,cad_g03
21:30:23 174  ,cad_g04
21:30:23 175  ,cad_g05
21:30:23 176  ,cad_g06
21:30:23 177  ,cad_g07
21:30:23 178  ,cad_g08
21:30:23 179  ,cad_g09
21:30:23 180  ,cad_g10
21:30:23 181  ,cad_g11
21:30:23 182  ,cad_g12
21:30:23 183  ,cad_g13
21:30:23 184  ,cad_g14
21:30:23 185  ,cad_g15
21:30:23 186  ,cad_g16
21:30:23 187  ,cad_g17
21:30:23 188  ,cad_g18
21:30:23 189  ,cad_g19
21:30:23 190  ,cad_g20
21:30:23 191  ,cad_g21
21:30:23 192  ,cad_g22
21:30:23 193  ,cad_g23
21:30:23 194  ,cad_g24
21:30:23 195  ,cad_g25
21:30:23 196  ,cad_g26
21:30:23 197  ,cad_g27
21:30:23 198  ,cad_g28
21:30:23 199  ,cad_g29
21:30:23 200  ,cad_g30
21:30:23 201  ,cad_g31
21:30:23 202  ,cad_g32
21:30:23 203  ,cad_g33
21:30:23 204  ,cad_g34
21:30:23 205  ,cad_g35
21:30:23 206  ,cad_g36
21:30:23 207  ,cad_g37
21:30:23 208  ,cad_g38
21:30:23 209  ,cad_g39
21:30:23 210  ,cad_g40
21:30:23 211  ,chf_g00
21:30:23 212  ,chf_g01
21:30:23 213  ,chf_g02
21:30:23 214  ,chf_g03
21:30:23 215  ,chf_g04
21:30:23 216  ,chf_g05
21:30:23 217  ,chf_g06
21:30:23 218  ,chf_g07
21:30:23 219  ,chf_g08
21:30:23 220  ,chf_g09
21:30:23 221  ,chf_g10
21:30:23 222  ,chf_g11
21:30:23 223  ,chf_g12
21:30:23 224  ,chf_g13
21:30:23 225  ,chf_g14
21:30:23 226  ,chf_g15
21:30:23 227  ,chf_g16
21:30:23 228  ,chf_g17
21:30:23 229  ,chf_g18
21:30:23 230  ,chf_g19
21:30:23 231  ,chf_g20
21:30:23 232  ,chf_g21
21:30:23 233  ,chf_g22
21:30:23 234  ,chf_g23
21:30:23 235  ,chf_g24
21:30:23 236  ,chf_g25
21:30:23 237  ,chf_g26
21:30:23 238  ,chf_g27
21:30:23 239  ,chf_g28
21:30:23 240  ,chf_g29
21:30:23 241  ,chf_g30
21:30:23 242  ,chf_g31
21:30:23 243  ,chf_g32
21:30:23 244  ,chf_g33
21:30:23 245  ,chf_g34
21:30:23 246  ,chf_g35
21:30:23 247  ,chf_g36
21:30:23 248  ,chf_g37
21:30:23 249  ,chf_g38
21:30:23 250  ,chf_g39
21:30:23 251  ,chf_g40
21:30:23 252  FROM chf_ms14 m
21:30:23 253  WHERE m.ydate = '&1'||' '||'&2'
21:30:23 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:50:00'

View created.

Elapsed: 00:00:00.11
21:30:23 SQL> 
21:30:23 SQL> -- rpt
21:30:23 SQL> -- We should see just 1 row:
21:30:23 SQL> 
21:30:23 SQL> SELECT COUNT(prdate) FROM sme
21:30:23   2  
21:30:23 SQL> -- Build the model:
21:30:23 SQL> CREATE OR REPLACE VIEW bme AS
21:30:23   2  SELECT
21:30:23   3  'chf'||m.ydate prdate
21:30:23   4  ,gattn
21:30:23   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:30:23   6  ,eur_g00
21:30:23   7  ,eur_g01
21:30:23   8  ,eur_g02
21:30:23   9  ,eur_g03
21:30:23  10  ,eur_g04
21:30:23  11  ,eur_g05
21:30:23  12  ,eur_g06
21:30:23  13  ,eur_g07
21:30:23  14  ,eur_g08
21:30:23  15  ,eur_g09
21:30:23  16  ,eur_g10
21:30:23  17  ,eur_g11
21:30:23  18  ,eur_g12
21:30:23  19  ,eur_g13
21:30:23  20  ,eur_g14
21:30:23  21  ,eur_g15
21:30:23  22  ,eur_g16
21:30:23  23  ,eur_g17
21:30:23  24  ,eur_g18
21:30:23  25  ,eur_g19
21:30:23  26  ,eur_g20
21:30:23  27  ,eur_g21
21:30:23  28  ,eur_g22
21:30:23  29  ,eur_g23
21:30:23  30  ,eur_g24
21:30:23  31  ,eur_g25
21:30:23  32  ,eur_g26
21:30:23  33  ,eur_g27
21:30:23  34  ,eur_g28
21:30:23  35  ,eur_g29
21:30:23  36  ,eur_g30
21:30:23  37  ,eur_g31
21:30:23  38  ,eur_g32
21:30:23  39  ,eur_g33
21:30:23  40  ,eur_g34
21:30:23  41  ,eur_g35
21:30:23  42  ,eur_g36
21:30:23  43  ,eur_g37
21:30:23  44  ,eur_g38
21:30:23  45  ,eur_g39
21:30:23  46  ,eur_g40
21:30:23  47  ,aud_g00
21:30:23  48  ,aud_g01
21:30:23  49  ,aud_g02
21:30:23  50  ,aud_g03
21:30:23  51  ,aud_g04
21:30:23  52  ,aud_g05
21:30:23  53  ,aud_g06
21:30:23  54  ,aud_g07
21:30:23  55  ,aud_g08
21:30:23  56  ,aud_g09
21:30:23  57  ,aud_g10
21:30:23  58  ,aud_g11
21:30:23  59  ,aud_g12
21:30:23  60  ,aud_g13
21:30:23  61  ,aud_g14
21:30:23  62  ,aud_g15
21:30:23  63  ,aud_g16
21:30:23  64  ,aud_g17
21:30:23  65  ,aud_g18
21:30:23  66  ,aud_g19
21:30:23  67  ,aud_g20
21:30:23  68  ,aud_g21
21:30:23  69  ,aud_g22
21:30:23  70  ,aud_g23
21:30:23  71  ,aud_g24
21:30:23  72  ,aud_g25
21:30:23  73  ,aud_g26
21:30:23  74  ,aud_g27
21:30:23  75  ,aud_g28
21:30:23  76  ,aud_g29
21:30:23  77  ,aud_g30
21:30:23  78  ,aud_g31
21:30:23  79  ,aud_g32
21:30:23  80  ,aud_g33
21:30:23  81  ,aud_g34
21:30:23  82  ,aud_g35
21:30:23  83  ,aud_g36
21:30:23  84  ,aud_g37
21:30:23  85  ,aud_g38
21:30:23  86  ,aud_g39
21:30:23  87  ,aud_g40
21:30:23  88  ,gbp_g00
21:30:23  89  ,gbp_g01
21:30:23  90  ,gbp_g02
21:30:23  91  ,gbp_g03
21:30:23  92  ,gbp_g04
21:30:23  93  ,gbp_g05
21:30:23  94  ,gbp_g06
21:30:23  95  ,gbp_g07
21:30:23  96  ,gbp_g08
21:30:23  97  ,gbp_g09
21:30:23  98  ,gbp_g10
21:30:23  99  ,gbp_g11
21:30:23 100  ,gbp_g12
21:30:23 101  ,gbp_g13
21:30:23 102  ,gbp_g14
21:30:23 103  ,gbp_g15
21:30:23 104  ,gbp_g16
21:30:23 105  ,gbp_g17
21:30:23 106  ,gbp_g18
21:30:23 107  ,gbp_g19
21:30:23 108  ,gbp_g20
21:30:23 109  ,gbp_g21
21:30:23 110  ,gbp_g22
21:30:23 111  ,gbp_g23
21:30:23 112  ,gbp_g24
21:30:23 113  ,gbp_g25
21:30:23 114  ,gbp_g26
21:30:23 115  ,gbp_g27
21:30:23 116  ,gbp_g28
21:30:23 117  ,gbp_g29
21:30:23 118  ,gbp_g30
21:30:23 119  ,gbp_g31
21:30:23 120  ,gbp_g32
21:30:23 121  ,gbp_g33
21:30:23 122  ,gbp_g34
21:30:23 123  ,gbp_g35
21:30:23 124  ,gbp_g36
21:30:23 125  ,gbp_g37
21:30:23 126  ,gbp_g38
21:30:23 127  ,gbp_g39
21:30:23 128  ,gbp_g40
21:30:23 129  ,jpy_g00
21:30:23 130  ,jpy_g01
21:30:23 131  ,jpy_g02
21:30:23 132  ,jpy_g03
21:30:23 133  ,jpy_g04
21:30:23 134  ,jpy_g05
21:30:23 135  ,jpy_g06
21:30:23 136  ,jpy_g07
21:30:23 137  ,jpy_g08
21:30:23 138  ,jpy_g09
21:30:23 139  ,jpy_g10
21:30:23 140  ,jpy_g11
21:30:23 141  ,jpy_g12
21:30:23 142  ,jpy_g13
21:30:23 143  ,jpy_g14
21:30:23 144  ,jpy_g15
21:30:23 145  ,jpy_g16
21:30:23 146  ,jpy_g17
21:30:23 147  ,jpy_g18
21:30:23 148  ,jpy_g19
21:30:23 149  ,jpy_g20
21:30:23 150  ,jpy_g21
21:30:23 151  ,jpy_g22
21:30:23 152  ,jpy_g23
21:30:23 153  ,jpy_g24
21:30:23 154  ,jpy_g25
21:30:23 155  ,jpy_g26
21:30:23 156  ,jpy_g27
21:30:23 157  ,jpy_g28
21:30:23 158  ,jpy_g29
21:30:23 159  ,jpy_g30
21:30:23 160  ,jpy_g31
21:30:23 161  ,jpy_g32
21:30:23 162  ,jpy_g33
21:30:23 163  ,jpy_g34
21:30:23 164  ,jpy_g35
21:30:23 165  ,jpy_g36
21:30:23 166  ,jpy_g37
21:30:23 167  ,jpy_g38
21:30:23 168  ,jpy_g39
21:30:23 169  ,jpy_g40
21:30:23 170  ,cad_g00
21:30:23 171  ,cad_g01
21:30:23 172  ,cad_g02
21:30:23 173  ,cad_g03
21:30:23 174  ,cad_g04
21:30:23 175  ,cad_g05
21:30:23 176  ,cad_g06
21:30:23 177  ,cad_g07
21:30:23 178  ,cad_g08
21:30:23 179  ,cad_g09
21:30:23 180  ,cad_g10
21:30:23 181  ,cad_g11
21:30:23 182  ,cad_g12
21:30:23 183  ,cad_g13
21:30:23 184  ,cad_g14
21:30:23 185  ,cad_g15
21:30:23 186  ,cad_g16
21:30:23 187  ,cad_g17
21:30:23 188  ,cad_g18
21:30:23 189  ,cad_g19
21:30:23 190  ,cad_g20
21:30:23 191  ,cad_g21
21:30:23 192  ,cad_g22
21:30:23 193  ,cad_g23
21:30:23 194  ,cad_g24
21:30:23 195  ,cad_g25
21:30:23 196  ,cad_g26
21:30:23 197  ,cad_g27
21:30:23 198  ,cad_g28
21:30:23 199  ,cad_g29
21:30:23 200  ,cad_g30
21:30:23 201  ,cad_g31
21:30:23 202  ,cad_g32
21:30:23 203  ,cad_g33
21:30:23 204  ,cad_g34
21:30:23 205  ,cad_g35
21:30:23 206  ,cad_g36
21:30:23 207  ,cad_g37
21:30:23 208  ,cad_g38
21:30:23 209  ,cad_g39
21:30:23 210  ,cad_g40
21:30:23 211  ,chf_g00
21:30:23 212  ,chf_g01
21:30:23 213  ,chf_g02
21:30:23 214  ,chf_g03
21:30:23 215  ,chf_g04
21:30:23 216  ,chf_g05
21:30:23 217  ,chf_g06
21:30:23 218  ,chf_g07
21:30:23 219  ,chf_g08
21:30:23 220  ,chf_g09
21:30:23 221  ,chf_g10
21:30:23 222  ,chf_g11
21:30:23 223  ,chf_g12
21:30:23 224  ,chf_g13
21:30:23 225  ,chf_g14
21:30:23 226  ,chf_g15
21:30:23 227  ,chf_g16
21:30:23 228  ,chf_g17
21:30:23 229  ,chf_g18
21:30:23 230  ,chf_g19
21:30:23 231  ,chf_g20
21:30:23 232  ,chf_g21
21:30:23 233  ,chf_g22
21:30:23 234  ,chf_g23
21:30:23 235  ,chf_g24
21:30:23 236  ,chf_g25
21:30:23 237  ,chf_g26
21:30:23 238  ,chf_g27
21:30:23 239  ,chf_g28
21:30:23 240  ,chf_g29
21:30:23 241  ,chf_g30
21:30:23 242  ,chf_g31
21:30:23 243  ,chf_g32
21:30:23 244  ,chf_g33
21:30:23 245  ,chf_g34
21:30:23 246  ,chf_g35
21:30:23 247  ,chf_g36
21:30:23 248  ,chf_g37
21:30:23 249  ,chf_g38
21:30:23 250  ,chf_g39
21:30:23 251  ,chf_g40
21:30:23 252  FROM chf_ms14 m
21:30:23 253  WHERE gattn IN('nup','up')
21:30:23 254  AND 1+m.ydate < '&1'||' '||'&2'
21:30:23 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:50:00'

View created.

Elapsed: 00:00:00.10
21:30:23 SQL> 
21:30:23 SQL> -- rpt
21:30:23 SQL> 
21:30:23 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:30:23   2  
21:30:23 SQL> SELECT MAX(prdate) FROM bme
21:30:23   2  
21:30:23 SQL> -- Now build model from bme and score sme
21:30:23 SQL> @score1gattn.sql
21:30:23 SQL> -- score1gattn.sql
21:30:23 SQL> 
21:30:23 SQL> -- Does the 1st SVM score
21:30:23 SQL> 
21:30:23 SQL> -- Fill up svmc_apply_prep
21:30:23 SQL> @score_gattn.sql
21:30:23 SQL> --
21:30:23 SQL> -- score_gattn.sql
21:30:23 SQL> --
21:30:23 SQL> 
21:30:23 SQL> -- usage: score_gattn.sql
21:30:23 SQL> 
21:30:23 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:30:23 SQL> 
21:30:23 SQL> DEFINE target	= 'gattn'
21:30:23 SQL> DEFINE model_name = 'forex14'
21:30:23 SQL> DEFINE bldtable	= 'bme'
21:30:23 SQL> DEFINE scoretable = 'sme'
21:30:23 SQL> DEFINE case_id	= 'prdate'
21:30:23 SQL> 
21:30:23 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:30:23 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:30:23 SQL> 
21:30:23 SQL> -- Builds an SVM model using pl/sql.
21:30:23 SQL> 
21:30:23 SQL> -----------------------------------------------------------------------
21:30:23 SQL> --			    BUILD THE MODEL
21:30:23 SQL> -----------------------------------------------------------------------
21:30:23 SQL> 
21:30:23 SQL> -- Cleanup old build data preparation objects for repeat runs
21:30:23 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:30:23 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:30:23 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:30:23 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:30:23 SQL> 
21:30:23 SQL> 
21:30:23 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:30:23 SQL> --
21:30:23 SQL> -- DROP	TABLE svmc_settings ;
21:30:23 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:30:23 SQL> -- DELETE svmc_settings;
21:30:23 SQL> 
21:30:23 SQL> -- The default classification algorithm is Naive Bayes. So override
21:30:23 SQL> -- this choice to SVM using a settings table.
21:30:23 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:30:23 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:30:23 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:30:23 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:30:23 SQL> -- models.
21:30:23 SQL> --
21:30:23 SQL> 
21:30:23 SQL> -- Do this once and then comment it out.
21:30:23 SQL> -- That makes script go faster.
21:30:23 SQL> -- BEGIN
21:30:23 SQL> -- -- Populate settings table
21:30:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:30:23 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:30:23 SQL> --
21:30:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:30:23 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:30:23 SQL> --
21:30:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:30:23 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:30:23 SQL> --   COMMIT;
21:30:23 SQL> -- END;
21:30:23 SQL> -- /
21:30:23 SQL> 
21:30:23 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:30:23 SQL> 
21:30:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:30:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:30:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:30:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:30:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:30:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:30:23 SQL> 
21:30:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:30:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:30:23 SQL> 
21:30:23 SQL> --------------------------------
21:30:23 SQL> -- PREPARE BUILD (TRAINING) DATA
21:30:23 SQL> --
21:30:23 SQL> 
21:30:23 SQL> -- 1. Missing Value treatment for all Predictors and
21:30:23 SQL> -- 2. Outlier Treatment and
21:30:23 SQL> -- 3. Normalization are performed below.
21:30:23 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:30:23 SQL> --    normalized here.
21:30:23 SQL> 
21:30:23 SQL> BEGIN
21:30:23   2  	-- Perform missing value treatment for all predictors
21:30:23   3  	-- create miss tables
21:30:23   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:30:23   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:30:23   6  
21:30:23   7  	-- populate miss tables
21:30:23   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:30:23   9  	  miss_table_name => 'svmc_miss_num',
21:30:23  10  	  data_table_name => '&bldtable',
21:30:23  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:30:23  12  
21:30:23  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:30:23  14  	  miss_table_name => 'svmc_miss_cat',
21:30:23  15  	  data_table_name => '&bldtable',
21:30:23  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:30:23  17  
21:30:23  18  	-- xform input data to replace missing values
21:30:23  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:30:23  20  	  miss_table_name => 'svmc_miss_num',
21:30:23  21  	  data_table_name => '&bldtable',
21:30:23  22  	  xform_view_name => 'xformed_build_miss_num');
21:30:23  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:30:23  24  	  miss_table_name => 'svmc_miss_cat',
21:30:23  25  	  data_table_name => '&bldtable',
21:30:23  26  	  xform_view_name => 'xformed_build_miss_cat');
21:30:23  27  
21:30:23  28  	-- Perform outlier treatment.
21:30:23  29  	-- create clip table
21:30:23  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:30:23  31  
21:30:23  32  	-- populate clip table
21:30:23  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:30:23  34  	  clip_table_name => 'svmc_clip',
21:30:23  35  	  data_table_name => '&bldtable',
21:30:23  36  	  tail_frac	  => 0.025,
21:30:23  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:30:23  38  
21:30:23  39  	-- xform input data to winsorized data
21:30:23  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:30:23  41  	  clip_table_name => 'svmc_clip',
21:30:23  42  	  data_table_name => '&bldtable',
21:30:23  43  	  xform_view_name => 'svmc_winsor');
21:30:23  44  
21:30:23  45  	-- create normalization table
21:30:23  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:30:23  47  
21:30:23  48  	-- populate normalization table based on winsorized data
21:30:23  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:30:23  50  	  norm_table_name => 'svmc_norm',
21:30:23  51  	  data_table_name => 'svmc_winsor',
21:30:23  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:30:23  53  
21:30:23  54  	-- normalize the original data
21:30:23  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:30:23  56  	  norm_table_name => 'svmc_norm',
21:30:23  57  	  data_table_name => '&bldtable',
21:30:23  58  	  xform_view_name => 'svmc_build_prep');
21:30:23  59  END;
21:30:23  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.06
21:30:41 SQL> 
21:30:41 SQL> ---------------------
21:30:41 SQL> -- CREATE A NEW MODEL
21:30:41 SQL> --
21:30:41 SQL> -- Cleanup old model with the same name for repeat runs
21:30:41 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:30:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:41   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.29
21:30:42 SQL> 
21:30:42 SQL> -- Build a new SVM Model
21:30:42 SQL> BEGIN
21:30:42   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:30:42   3  	  model_name	      => '&model_name',
21:30:42   4  	  mining_function     => dbms_data_mining.classification,
21:30:42   5  	  data_table_name     => 'svmc_build_prep',
21:30:42   6  	  case_id_column_name => '&case_id',
21:30:42   7  	  target_column_name  => '&target',
21:30:42   8  	  settings_table_name => 'svmc_settings');
21:30:42   9  END;
21:30:42  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.50
21:31:08 SQL> 
21:31:08 SQL> -----------------------------------------------------------------------
21:31:08 SQL> --			       APPLY/score THE MODEL
21:31:08 SQL> -----------------------------------------------------------------------
21:31:08 SQL> 
21:31:08 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:31:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:31:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
21:31:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:31:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:31:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:31:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:31:08 SQL> -----------------------
21:31:08 SQL> -- PREPARE SCORING DATA
21:31:08 SQL> --
21:31:08 SQL> -- If the data for model creation has been prepared, then the data
21:31:08 SQL> -- to be scored using the model must be prepared in the same manner
21:31:08 SQL> -- in order to obtain meaningful results.
21:31:08 SQL> --
21:31:08 SQL> -- 1. Missing Value treatment for all Predictors and
21:31:08 SQL> -- 2. Normalization
21:31:08 SQL> -- No outlier treatment will be performed during test and apply. The
21:31:08 SQL> -- normalization step is sufficient, since the normalization parameters
21:31:08 SQL> -- already capture the effects of outlier treatment done with build data.
21:31:08 SQL> --
21:31:08 SQL> BEGIN
21:31:08   2  	-- Xform Test data to replace missing values
21:31:08   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:31:08   4  	  miss_table_name => 'svmc_miss_num',
21:31:08   5  	  data_table_name => '&scoretable',
21:31:08   6  	  xform_view_name => 'xformed_apply_miss_num');
21:31:08   7  
21:31:08   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:31:08   9  	  miss_table_name => 'svmc_miss_cat',
21:31:08  10  	  data_table_name => '&scoretable',
21:31:08  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:31:08  12  
21:31:08  13  	-- Normalize the data to be scored
21:31:08  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:31:08  15  	  norm_table_name => 'svmc_norm',
21:31:08  16  	  data_table_name => '&scoretable',
21:31:08  17  	  xform_view_name => 'svmc_apply_prep');
21:31:08  18  END;
21:31:08  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.12
21:31:09 SQL> 
21:31:09 SQL> -- Use same model_name used in score_gattn.sql
21:31:09 SQL> DEFINE model_name = 'forex14'
21:31:09 SQL> 
21:31:09 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:31:09 SQL> 
21:31:09 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:31:09   2  SELECT
21:31:09   3  prdate
21:31:09   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:31:09   5  ,sysdate
21:31:09   6  ,SUBSTR(prdate,1,3)pair
21:31:09   7  ,SUBSTR(prdate,4,19)ydate
21:31:09   8  FROM svmc_apply_prep
21:31:09   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:31:09 SQL> @chf_score1day_gattn.sql	2010-12-17 10:45:00
21:31:09 SQL> --
21:31:09 SQL> -- chf_score1day_gattn.sql
21:31:09 SQL> --
21:31:09 SQL> 
21:31:09 SQL> CREATE OR REPLACE VIEW sme AS
21:31:09   2  SELECT
21:31:09   3  'chf'||m.ydate prdate
21:31:09   4  ,NULL gattn
21:31:09   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:31:09   6  ,eur_g00
21:31:09   7  ,eur_g01
21:31:09   8  ,eur_g02
21:31:09   9  ,eur_g03
21:31:09  10  ,eur_g04
21:31:09  11  ,eur_g05
21:31:09  12  ,eur_g06
21:31:09  13  ,eur_g07
21:31:09  14  ,eur_g08
21:31:09  15  ,eur_g09
21:31:09  16  ,eur_g10
21:31:09  17  ,eur_g11
21:31:09  18  ,eur_g12
21:31:09  19  ,eur_g13
21:31:09  20  ,eur_g14
21:31:09  21  ,eur_g15
21:31:09  22  ,eur_g16
21:31:09  23  ,eur_g17
21:31:09  24  ,eur_g18
21:31:09  25  ,eur_g19
21:31:09  26  ,eur_g20
21:31:09  27  ,eur_g21
21:31:09  28  ,eur_g22
21:31:09  29  ,eur_g23
21:31:09  30  ,eur_g24
21:31:09  31  ,eur_g25
21:31:09  32  ,eur_g26
21:31:09  33  ,eur_g27
21:31:09  34  ,eur_g28
21:31:09  35  ,eur_g29
21:31:09  36  ,eur_g30
21:31:09  37  ,eur_g31
21:31:09  38  ,eur_g32
21:31:09  39  ,eur_g33
21:31:09  40  ,eur_g34
21:31:09  41  ,eur_g35
21:31:09  42  ,eur_g36
21:31:09  43  ,eur_g37
21:31:09  44  ,eur_g38
21:31:09  45  ,eur_g39
21:31:09  46  ,eur_g40
21:31:09  47  ,aud_g00
21:31:09  48  ,aud_g01
21:31:09  49  ,aud_g02
21:31:09  50  ,aud_g03
21:31:09  51  ,aud_g04
21:31:09  52  ,aud_g05
21:31:09  53  ,aud_g06
21:31:09  54  ,aud_g07
21:31:09  55  ,aud_g08
21:31:09  56  ,aud_g09
21:31:09  57  ,aud_g10
21:31:09  58  ,aud_g11
21:31:09  59  ,aud_g12
21:31:09  60  ,aud_g13
21:31:09  61  ,aud_g14
21:31:09  62  ,aud_g15
21:31:09  63  ,aud_g16
21:31:09  64  ,aud_g17
21:31:09  65  ,aud_g18
21:31:09  66  ,aud_g19
21:31:09  67  ,aud_g20
21:31:09  68  ,aud_g21
21:31:09  69  ,aud_g22
21:31:09  70  ,aud_g23
21:31:09  71  ,aud_g24
21:31:09  72  ,aud_g25
21:31:09  73  ,aud_g26
21:31:09  74  ,aud_g27
21:31:09  75  ,aud_g28
21:31:09  76  ,aud_g29
21:31:09  77  ,aud_g30
21:31:09  78  ,aud_g31
21:31:09  79  ,aud_g32
21:31:09  80  ,aud_g33
21:31:09  81  ,aud_g34
21:31:09  82  ,aud_g35
21:31:09  83  ,aud_g36
21:31:09  84  ,aud_g37
21:31:09  85  ,aud_g38
21:31:09  86  ,aud_g39
21:31:09  87  ,aud_g40
21:31:09  88  ,gbp_g00
21:31:09  89  ,gbp_g01
21:31:09  90  ,gbp_g02
21:31:09  91  ,gbp_g03
21:31:09  92  ,gbp_g04
21:31:09  93  ,gbp_g05
21:31:09  94  ,gbp_g06
21:31:09  95  ,gbp_g07
21:31:09  96  ,gbp_g08
21:31:09  97  ,gbp_g09
21:31:09  98  ,gbp_g10
21:31:09  99  ,gbp_g11
21:31:09 100  ,gbp_g12
21:31:09 101  ,gbp_g13
21:31:09 102  ,gbp_g14
21:31:09 103  ,gbp_g15
21:31:09 104  ,gbp_g16
21:31:09 105  ,gbp_g17
21:31:09 106  ,gbp_g18
21:31:09 107  ,gbp_g19
21:31:09 108  ,gbp_g20
21:31:09 109  ,gbp_g21
21:31:09 110  ,gbp_g22
21:31:09 111  ,gbp_g23
21:31:09 112  ,gbp_g24
21:31:09 113  ,gbp_g25
21:31:09 114  ,gbp_g26
21:31:09 115  ,gbp_g27
21:31:09 116  ,gbp_g28
21:31:09 117  ,gbp_g29
21:31:09 118  ,gbp_g30
21:31:09 119  ,gbp_g31
21:31:09 120  ,gbp_g32
21:31:09 121  ,gbp_g33
21:31:09 122  ,gbp_g34
21:31:09 123  ,gbp_g35
21:31:09 124  ,gbp_g36
21:31:09 125  ,gbp_g37
21:31:09 126  ,gbp_g38
21:31:09 127  ,gbp_g39
21:31:09 128  ,gbp_g40
21:31:09 129  ,jpy_g00
21:31:09 130  ,jpy_g01
21:31:09 131  ,jpy_g02
21:31:09 132  ,jpy_g03
21:31:09 133  ,jpy_g04
21:31:09 134  ,jpy_g05
21:31:09 135  ,jpy_g06
21:31:09 136  ,jpy_g07
21:31:09 137  ,jpy_g08
21:31:09 138  ,jpy_g09
21:31:09 139  ,jpy_g10
21:31:09 140  ,jpy_g11
21:31:09 141  ,jpy_g12
21:31:09 142  ,jpy_g13
21:31:09 143  ,jpy_g14
21:31:09 144  ,jpy_g15
21:31:09 145  ,jpy_g16
21:31:09 146  ,jpy_g17
21:31:09 147  ,jpy_g18
21:31:09 148  ,jpy_g19
21:31:09 149  ,jpy_g20
21:31:09 150  ,jpy_g21
21:31:09 151  ,jpy_g22
21:31:09 152  ,jpy_g23
21:31:09 153  ,jpy_g24
21:31:09 154  ,jpy_g25
21:31:09 155  ,jpy_g26
21:31:09 156  ,jpy_g27
21:31:09 157  ,jpy_g28
21:31:09 158  ,jpy_g29
21:31:09 159  ,jpy_g30
21:31:09 160  ,jpy_g31
21:31:09 161  ,jpy_g32
21:31:09 162  ,jpy_g33
21:31:09 163  ,jpy_g34
21:31:09 164  ,jpy_g35
21:31:09 165  ,jpy_g36
21:31:09 166  ,jpy_g37
21:31:09 167  ,jpy_g38
21:31:09 168  ,jpy_g39
21:31:09 169  ,jpy_g40
21:31:09 170  ,cad_g00
21:31:09 171  ,cad_g01
21:31:09 172  ,cad_g02
21:31:09 173  ,cad_g03
21:31:09 174  ,cad_g04
21:31:09 175  ,cad_g05
21:31:09 176  ,cad_g06
21:31:09 177  ,cad_g07
21:31:09 178  ,cad_g08
21:31:09 179  ,cad_g09
21:31:09 180  ,cad_g10
21:31:09 181  ,cad_g11
21:31:09 182  ,cad_g12
21:31:09 183  ,cad_g13
21:31:09 184  ,cad_g14
21:31:09 185  ,cad_g15
21:31:09 186  ,cad_g16
21:31:09 187  ,cad_g17
21:31:09 188  ,cad_g18
21:31:09 189  ,cad_g19
21:31:09 190  ,cad_g20
21:31:09 191  ,cad_g21
21:31:09 192  ,cad_g22
21:31:09 193  ,cad_g23
21:31:09 194  ,cad_g24
21:31:09 195  ,cad_g25
21:31:09 196  ,cad_g26
21:31:09 197  ,cad_g27
21:31:09 198  ,cad_g28
21:31:09 199  ,cad_g29
21:31:09 200  ,cad_g30
21:31:09 201  ,cad_g31
21:31:09 202  ,cad_g32
21:31:09 203  ,cad_g33
21:31:09 204  ,cad_g34
21:31:09 205  ,cad_g35
21:31:09 206  ,cad_g36
21:31:09 207  ,cad_g37
21:31:09 208  ,cad_g38
21:31:09 209  ,cad_g39
21:31:09 210  ,cad_g40
21:31:09 211  ,chf_g00
21:31:09 212  ,chf_g01
21:31:09 213  ,chf_g02
21:31:09 214  ,chf_g03
21:31:09 215  ,chf_g04
21:31:09 216  ,chf_g05
21:31:09 217  ,chf_g06
21:31:09 218  ,chf_g07
21:31:09 219  ,chf_g08
21:31:09 220  ,chf_g09
21:31:09 221  ,chf_g10
21:31:09 222  ,chf_g11
21:31:09 223  ,chf_g12
21:31:09 224  ,chf_g13
21:31:09 225  ,chf_g14
21:31:09 226  ,chf_g15
21:31:09 227  ,chf_g16
21:31:09 228  ,chf_g17
21:31:09 229  ,chf_g18
21:31:09 230  ,chf_g19
21:31:09 231  ,chf_g20
21:31:09 232  ,chf_g21
21:31:09 233  ,chf_g22
21:31:09 234  ,chf_g23
21:31:09 235  ,chf_g24
21:31:09 236  ,chf_g25
21:31:09 237  ,chf_g26
21:31:09 238  ,chf_g27
21:31:09 239  ,chf_g28
21:31:09 240  ,chf_g29
21:31:09 241  ,chf_g30
21:31:09 242  ,chf_g31
21:31:09 243  ,chf_g32
21:31:09 244  ,chf_g33
21:31:09 245  ,chf_g34
21:31:09 246  ,chf_g35
21:31:09 247  ,chf_g36
21:31:09 248  ,chf_g37
21:31:09 249  ,chf_g38
21:31:09 250  ,chf_g39
21:31:09 251  ,chf_g40
21:31:09 252  FROM chf_ms14 m
21:31:09 253  WHERE m.ydate = '&1'||' '||'&2'
21:31:09 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:45:00'

View created.

Elapsed: 00:00:00.12
21:31:09 SQL> 
21:31:09 SQL> -- rpt
21:31:09 SQL> -- We should see just 1 row:
21:31:09 SQL> 
21:31:09 SQL> SELECT COUNT(prdate) FROM sme
21:31:09   2  
21:31:09 SQL> -- Build the model:
21:31:09 SQL> CREATE OR REPLACE VIEW bme AS
21:31:09   2  SELECT
21:31:09   3  'chf'||m.ydate prdate
21:31:09   4  ,gattn
21:31:09   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:31:09   6  ,eur_g00
21:31:09   7  ,eur_g01
21:31:09   8  ,eur_g02
21:31:09   9  ,eur_g03
21:31:09  10  ,eur_g04
21:31:09  11  ,eur_g05
21:31:09  12  ,eur_g06
21:31:09  13  ,eur_g07
21:31:09  14  ,eur_g08
21:31:09  15  ,eur_g09
21:31:09  16  ,eur_g10
21:31:09  17  ,eur_g11
21:31:09  18  ,eur_g12
21:31:09  19  ,eur_g13
21:31:09  20  ,eur_g14
21:31:09  21  ,eur_g15
21:31:09  22  ,eur_g16
21:31:09  23  ,eur_g17
21:31:09  24  ,eur_g18
21:31:09  25  ,eur_g19
21:31:09  26  ,eur_g20
21:31:09  27  ,eur_g21
21:31:09  28  ,eur_g22
21:31:09  29  ,eur_g23
21:31:09  30  ,eur_g24
21:31:09  31  ,eur_g25
21:31:09  32  ,eur_g26
21:31:09  33  ,eur_g27
21:31:09  34  ,eur_g28
21:31:09  35  ,eur_g29
21:31:09  36  ,eur_g30
21:31:09  37  ,eur_g31
21:31:09  38  ,eur_g32
21:31:09  39  ,eur_g33
21:31:09  40  ,eur_g34
21:31:09  41  ,eur_g35
21:31:09  42  ,eur_g36
21:31:09  43  ,eur_g37
21:31:09  44  ,eur_g38
21:31:09  45  ,eur_g39
21:31:09  46  ,eur_g40
21:31:09  47  ,aud_g00
21:31:09  48  ,aud_g01
21:31:09  49  ,aud_g02
21:31:09  50  ,aud_g03
21:31:09  51  ,aud_g04
21:31:09  52  ,aud_g05
21:31:09  53  ,aud_g06
21:31:09  54  ,aud_g07
21:31:09  55  ,aud_g08
21:31:09  56  ,aud_g09
21:31:09  57  ,aud_g10
21:31:09  58  ,aud_g11
21:31:09  59  ,aud_g12
21:31:09  60  ,aud_g13
21:31:09  61  ,aud_g14
21:31:09  62  ,aud_g15
21:31:09  63  ,aud_g16
21:31:09  64  ,aud_g17
21:31:09  65  ,aud_g18
21:31:09  66  ,aud_g19
21:31:09  67  ,aud_g20
21:31:09  68  ,aud_g21
21:31:09  69  ,aud_g22
21:31:09  70  ,aud_g23
21:31:09  71  ,aud_g24
21:31:09  72  ,aud_g25
21:31:09  73  ,aud_g26
21:31:09  74  ,aud_g27
21:31:09  75  ,aud_g28
21:31:09  76  ,aud_g29
21:31:09  77  ,aud_g30
21:31:09  78  ,aud_g31
21:31:09  79  ,aud_g32
21:31:09  80  ,aud_g33
21:31:09  81  ,aud_g34
21:31:09  82  ,aud_g35
21:31:09  83  ,aud_g36
21:31:09  84  ,aud_g37
21:31:09  85  ,aud_g38
21:31:09  86  ,aud_g39
21:31:09  87  ,aud_g40
21:31:09  88  ,gbp_g00
21:31:09  89  ,gbp_g01
21:31:09  90  ,gbp_g02
21:31:09  91  ,gbp_g03
21:31:09  92  ,gbp_g04
21:31:09  93  ,gbp_g05
21:31:09  94  ,gbp_g06
21:31:09  95  ,gbp_g07
21:31:09  96  ,gbp_g08
21:31:09  97  ,gbp_g09
21:31:09  98  ,gbp_g10
21:31:09  99  ,gbp_g11
21:31:09 100  ,gbp_g12
21:31:09 101  ,gbp_g13
21:31:09 102  ,gbp_g14
21:31:09 103  ,gbp_g15
21:31:09 104  ,gbp_g16
21:31:09 105  ,gbp_g17
21:31:09 106  ,gbp_g18
21:31:09 107  ,gbp_g19
21:31:09 108  ,gbp_g20
21:31:09 109  ,gbp_g21
21:31:09 110  ,gbp_g22
21:31:09 111  ,gbp_g23
21:31:09 112  ,gbp_g24
21:31:09 113  ,gbp_g25
21:31:09 114  ,gbp_g26
21:31:09 115  ,gbp_g27
21:31:10 116  ,gbp_g28
21:31:10 117  ,gbp_g29
21:31:10 118  ,gbp_g30
21:31:10 119  ,gbp_g31
21:31:10 120  ,gbp_g32
21:31:10 121  ,gbp_g33
21:31:10 122  ,gbp_g34
21:31:10 123  ,gbp_g35
21:31:10 124  ,gbp_g36
21:31:10 125  ,gbp_g37
21:31:10 126  ,gbp_g38
21:31:10 127  ,gbp_g39
21:31:10 128  ,gbp_g40
21:31:10 129  ,jpy_g00
21:31:10 130  ,jpy_g01
21:31:10 131  ,jpy_g02
21:31:10 132  ,jpy_g03
21:31:10 133  ,jpy_g04
21:31:10 134  ,jpy_g05
21:31:10 135  ,jpy_g06
21:31:10 136  ,jpy_g07
21:31:10 137  ,jpy_g08
21:31:10 138  ,jpy_g09
21:31:10 139  ,jpy_g10
21:31:10 140  ,jpy_g11
21:31:10 141  ,jpy_g12
21:31:10 142  ,jpy_g13
21:31:10 143  ,jpy_g14
21:31:10 144  ,jpy_g15
21:31:10 145  ,jpy_g16
21:31:10 146  ,jpy_g17
21:31:10 147  ,jpy_g18
21:31:10 148  ,jpy_g19
21:31:10 149  ,jpy_g20
21:31:10 150  ,jpy_g21
21:31:10 151  ,jpy_g22
21:31:10 152  ,jpy_g23
21:31:10 153  ,jpy_g24
21:31:10 154  ,jpy_g25
21:31:10 155  ,jpy_g26
21:31:10 156  ,jpy_g27
21:31:10 157  ,jpy_g28
21:31:10 158  ,jpy_g29
21:31:10 159  ,jpy_g30
21:31:10 160  ,jpy_g31
21:31:10 161  ,jpy_g32
21:31:10 162  ,jpy_g33
21:31:10 163  ,jpy_g34
21:31:10 164  ,jpy_g35
21:31:10 165  ,jpy_g36
21:31:10 166  ,jpy_g37
21:31:10 167  ,jpy_g38
21:31:10 168  ,jpy_g39
21:31:10 169  ,jpy_g40
21:31:10 170  ,cad_g00
21:31:10 171  ,cad_g01
21:31:10 172  ,cad_g02
21:31:10 173  ,cad_g03
21:31:10 174  ,cad_g04
21:31:10 175  ,cad_g05
21:31:10 176  ,cad_g06
21:31:10 177  ,cad_g07
21:31:10 178  ,cad_g08
21:31:10 179  ,cad_g09
21:31:10 180  ,cad_g10
21:31:10 181  ,cad_g11
21:31:10 182  ,cad_g12
21:31:10 183  ,cad_g13
21:31:10 184  ,cad_g14
21:31:10 185  ,cad_g15
21:31:10 186  ,cad_g16
21:31:10 187  ,cad_g17
21:31:10 188  ,cad_g18
21:31:10 189  ,cad_g19
21:31:10 190  ,cad_g20
21:31:10 191  ,cad_g21
21:31:10 192  ,cad_g22
21:31:10 193  ,cad_g23
21:31:10 194  ,cad_g24
21:31:10 195  ,cad_g25
21:31:10 196  ,cad_g26
21:31:10 197  ,cad_g27
21:31:10 198  ,cad_g28
21:31:10 199  ,cad_g29
21:31:10 200  ,cad_g30
21:31:10 201  ,cad_g31
21:31:10 202  ,cad_g32
21:31:10 203  ,cad_g33
21:31:10 204  ,cad_g34
21:31:10 205  ,cad_g35
21:31:10 206  ,cad_g36
21:31:10 207  ,cad_g37
21:31:10 208  ,cad_g38
21:31:10 209  ,cad_g39
21:31:10 210  ,cad_g40
21:31:10 211  ,chf_g00
21:31:10 212  ,chf_g01
21:31:10 213  ,chf_g02
21:31:10 214  ,chf_g03
21:31:10 215  ,chf_g04
21:31:10 216  ,chf_g05
21:31:10 217  ,chf_g06
21:31:10 218  ,chf_g07
21:31:10 219  ,chf_g08
21:31:10 220  ,chf_g09
21:31:10 221  ,chf_g10
21:31:10 222  ,chf_g11
21:31:10 223  ,chf_g12
21:31:10 224  ,chf_g13
21:31:10 225  ,chf_g14
21:31:10 226  ,chf_g15
21:31:10 227  ,chf_g16
21:31:10 228  ,chf_g17
21:31:10 229  ,chf_g18
21:31:10 230  ,chf_g19
21:31:10 231  ,chf_g20
21:31:10 232  ,chf_g21
21:31:10 233  ,chf_g22
21:31:10 234  ,chf_g23
21:31:10 235  ,chf_g24
21:31:10 236  ,chf_g25
21:31:10 237  ,chf_g26
21:31:10 238  ,chf_g27
21:31:10 239  ,chf_g28
21:31:10 240  ,chf_g29
21:31:10 241  ,chf_g30
21:31:10 242  ,chf_g31
21:31:10 243  ,chf_g32
21:31:10 244  ,chf_g33
21:31:10 245  ,chf_g34
21:31:10 246  ,chf_g35
21:31:10 247  ,chf_g36
21:31:10 248  ,chf_g37
21:31:10 249  ,chf_g38
21:31:10 250  ,chf_g39
21:31:10 251  ,chf_g40
21:31:10 252  FROM chf_ms14 m
21:31:10 253  WHERE gattn IN('nup','up')
21:31:10 254  AND 1+m.ydate < '&1'||' '||'&2'
21:31:10 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:45:00'

View created.

Elapsed: 00:00:00.12
21:31:10 SQL> 
21:31:10 SQL> -- rpt
21:31:10 SQL> 
21:31:10 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:31:10   2  
21:31:10 SQL> SELECT MAX(prdate) FROM bme
21:31:10   2  
21:31:10 SQL> -- Now build model from bme and score sme
21:31:10 SQL> @score1gattn.sql
21:31:10 SQL> -- score1gattn.sql
21:31:10 SQL> 
21:31:10 SQL> -- Does the 1st SVM score
21:31:10 SQL> 
21:31:10 SQL> -- Fill up svmc_apply_prep
21:31:10 SQL> @score_gattn.sql
21:31:10 SQL> --
21:31:10 SQL> -- score_gattn.sql
21:31:10 SQL> --
21:31:10 SQL> 
21:31:10 SQL> -- usage: score_gattn.sql
21:31:10 SQL> 
21:31:10 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:31:10 SQL> 
21:31:10 SQL> DEFINE target	= 'gattn'
21:31:10 SQL> DEFINE model_name = 'forex14'
21:31:10 SQL> DEFINE bldtable	= 'bme'
21:31:10 SQL> DEFINE scoretable = 'sme'
21:31:10 SQL> DEFINE case_id	= 'prdate'
21:31:10 SQL> 
21:31:10 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:31:10 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:31:10 SQL> 
21:31:10 SQL> -- Builds an SVM model using pl/sql.
21:31:10 SQL> 
21:31:10 SQL> -----------------------------------------------------------------------
21:31:10 SQL> --			    BUILD THE MODEL
21:31:10 SQL> -----------------------------------------------------------------------
21:31:10 SQL> 
21:31:10 SQL> -- Cleanup old build data preparation objects for repeat runs
21:31:10 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:31:10 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:31:10 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:31:10 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:31:10 SQL> 
21:31:10 SQL> 
21:31:10 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:31:10 SQL> --
21:31:10 SQL> -- DROP	TABLE svmc_settings ;
21:31:10 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:31:10 SQL> -- DELETE svmc_settings;
21:31:10 SQL> 
21:31:10 SQL> -- The default classification algorithm is Naive Bayes. So override
21:31:10 SQL> -- this choice to SVM using a settings table.
21:31:10 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:31:10 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:31:10 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:31:10 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:31:10 SQL> -- models.
21:31:10 SQL> --
21:31:10 SQL> 
21:31:10 SQL> -- Do this once and then comment it out.
21:31:10 SQL> -- That makes script go faster.
21:31:10 SQL> -- BEGIN
21:31:10 SQL> -- -- Populate settings table
21:31:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:31:10 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:31:10 SQL> --
21:31:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:31:10 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:31:10 SQL> --
21:31:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:31:10 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:31:10 SQL> --   COMMIT;
21:31:10 SQL> -- END;
21:31:10 SQL> -- /
21:31:10 SQL> 
21:31:10 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:31:10 SQL> 
21:31:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:31:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:31:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:31:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:31:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:31:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:31:10 SQL> 
21:31:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:31:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:31:10 SQL> 
21:31:10 SQL> --------------------------------
21:31:10 SQL> -- PREPARE BUILD (TRAINING) DATA
21:31:10 SQL> --
21:31:10 SQL> 
21:31:10 SQL> -- 1. Missing Value treatment for all Predictors and
21:31:10 SQL> -- 2. Outlier Treatment and
21:31:10 SQL> -- 3. Normalization are performed below.
21:31:10 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:31:10 SQL> --    normalized here.
21:31:10 SQL> 
21:31:10 SQL> BEGIN
21:31:10   2  	-- Perform missing value treatment for all predictors
21:31:10   3  	-- create miss tables
21:31:10   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:31:10   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:31:10   6  
21:31:10   7  	-- populate miss tables
21:31:10   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:31:10   9  	  miss_table_name => 'svmc_miss_num',
21:31:10  10  	  data_table_name => '&bldtable',
21:31:10  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:31:10  12  
21:31:10  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:31:10  14  	  miss_table_name => 'svmc_miss_cat',
21:31:10  15  	  data_table_name => '&bldtable',
21:31:10  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:31:10  17  
21:31:10  18  	-- xform input data to replace missing values
21:31:10  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:31:10  20  	  miss_table_name => 'svmc_miss_num',
21:31:10  21  	  data_table_name => '&bldtable',
21:31:10  22  	  xform_view_name => 'xformed_build_miss_num');
21:31:10  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:31:10  24  	  miss_table_name => 'svmc_miss_cat',
21:31:10  25  	  data_table_name => '&bldtable',
21:31:10  26  	  xform_view_name => 'xformed_build_miss_cat');
21:31:10  27  
21:31:10  28  	-- Perform outlier treatment.
21:31:10  29  	-- create clip table
21:31:10  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:31:10  31  
21:31:10  32  	-- populate clip table
21:31:10  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:31:10  34  	  clip_table_name => 'svmc_clip',
21:31:10  35  	  data_table_name => '&bldtable',
21:31:10  36  	  tail_frac	  => 0.025,
21:31:10  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:31:10  38  
21:31:10  39  	-- xform input data to winsorized data
21:31:10  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:31:10  41  	  clip_table_name => 'svmc_clip',
21:31:10  42  	  data_table_name => '&bldtable',
21:31:10  43  	  xform_view_name => 'svmc_winsor');
21:31:10  44  
21:31:10  45  	-- create normalization table
21:31:10  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:31:10  47  
21:31:10  48  	-- populate normalization table based on winsorized data
21:31:10  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:31:10  50  	  norm_table_name => 'svmc_norm',
21:31:10  51  	  data_table_name => 'svmc_winsor',
21:31:10  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:31:10  53  
21:31:10  54  	-- normalize the original data
21:31:10  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:31:10  56  	  norm_table_name => 'svmc_norm',
21:31:10  57  	  data_table_name => '&bldtable',
21:31:10  58  	  xform_view_name => 'svmc_build_prep');
21:31:10  59  END;
21:31:10  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.97
21:31:28 SQL> 
21:31:28 SQL> ---------------------
21:31:28 SQL> -- CREATE A NEW MODEL
21:31:28 SQL> --
21:31:28 SQL> -- Cleanup old model with the same name for repeat runs
21:31:28 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:31:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:28   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.28
21:31:29 SQL> 
21:31:29 SQL> -- Build a new SVM Model
21:31:29 SQL> BEGIN
21:31:29   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:31:29   3  	  model_name	      => '&model_name',
21:31:29   4  	  mining_function     => dbms_data_mining.classification,
21:31:29   5  	  data_table_name     => 'svmc_build_prep',
21:31:29   6  	  case_id_column_name => '&case_id',
21:31:29   7  	  target_column_name  => '&target',
21:31:29   8  	  settings_table_name => 'svmc_settings');
21:31:29   9  END;
21:31:29  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.27
21:31:55 SQL> 
21:31:55 SQL> -----------------------------------------------------------------------
21:31:55 SQL> --			       APPLY/score THE MODEL
21:31:55 SQL> -----------------------------------------------------------------------
21:31:55 SQL> 
21:31:55 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:31:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:31:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
21:31:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:31:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:31:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:31:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:31:56 SQL> -----------------------
21:31:56 SQL> -- PREPARE SCORING DATA
21:31:56 SQL> --
21:31:56 SQL> -- If the data for model creation has been prepared, then the data
21:31:56 SQL> -- to be scored using the model must be prepared in the same manner
21:31:56 SQL> -- in order to obtain meaningful results.
21:31:56 SQL> --
21:31:56 SQL> -- 1. Missing Value treatment for all Predictors and
21:31:56 SQL> -- 2. Normalization
21:31:56 SQL> -- No outlier treatment will be performed during test and apply. The
21:31:56 SQL> -- normalization step is sufficient, since the normalization parameters
21:31:56 SQL> -- already capture the effects of outlier treatment done with build data.
21:31:56 SQL> --
21:31:56 SQL> BEGIN
21:31:56   2  	-- Xform Test data to replace missing values
21:31:56   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:31:56   4  	  miss_table_name => 'svmc_miss_num',
21:31:56   5  	  data_table_name => '&scoretable',
21:31:56   6  	  xform_view_name => 'xformed_apply_miss_num');
21:31:56   7  
21:31:56   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:31:56   9  	  miss_table_name => 'svmc_miss_cat',
21:31:56  10  	  data_table_name => '&scoretable',
21:31:56  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:31:56  12  
21:31:56  13  	-- Normalize the data to be scored
21:31:56  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:31:56  15  	  norm_table_name => 'svmc_norm',
21:31:56  16  	  data_table_name => '&scoretable',
21:31:56  17  	  xform_view_name => 'svmc_apply_prep');
21:31:56  18  END;
21:31:56  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.13
21:31:57 SQL> 
21:31:57 SQL> -- Use same model_name used in score_gattn.sql
21:31:57 SQL> DEFINE model_name = 'forex14'
21:31:57 SQL> 
21:31:57 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:31:57 SQL> 
21:31:57 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:31:57   2  SELECT
21:31:57   3  prdate
21:31:57   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:31:57   5  ,sysdate
21:31:57   6  ,SUBSTR(prdate,1,3)pair
21:31:57   7  ,SUBSTR(prdate,4,19)ydate
21:31:57   8  FROM svmc_apply_prep
21:31:57   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:31:57 SQL> @chf_score1day_gattn.sql	2010-12-17 10:35:00
21:31:57 SQL> --
21:31:57 SQL> -- chf_score1day_gattn.sql
21:31:57 SQL> --
21:31:57 SQL> 
21:31:57 SQL> CREATE OR REPLACE VIEW sme AS
21:31:57   2  SELECT
21:31:57   3  'chf'||m.ydate prdate
21:31:57   4  ,NULL gattn
21:31:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:31:57   6  ,eur_g00
21:31:57   7  ,eur_g01
21:31:57   8  ,eur_g02
21:31:57   9  ,eur_g03
21:31:57  10  ,eur_g04
21:31:57  11  ,eur_g05
21:31:57  12  ,eur_g06
21:31:57  13  ,eur_g07
21:31:57  14  ,eur_g08
21:31:57  15  ,eur_g09
21:31:57  16  ,eur_g10
21:31:57  17  ,eur_g11
21:31:57  18  ,eur_g12
21:31:57  19  ,eur_g13
21:31:57  20  ,eur_g14
21:31:57  21  ,eur_g15
21:31:57  22  ,eur_g16
21:31:57  23  ,eur_g17
21:31:57  24  ,eur_g18
21:31:57  25  ,eur_g19
21:31:57  26  ,eur_g20
21:31:57  27  ,eur_g21
21:31:57  28  ,eur_g22
21:31:57  29  ,eur_g23
21:31:57  30  ,eur_g24
21:31:57  31  ,eur_g25
21:31:57  32  ,eur_g26
21:31:57  33  ,eur_g27
21:31:57  34  ,eur_g28
21:31:57  35  ,eur_g29
21:31:57  36  ,eur_g30
21:31:57  37  ,eur_g31
21:31:57  38  ,eur_g32
21:31:57  39  ,eur_g33
21:31:57  40  ,eur_g34
21:31:57  41  ,eur_g35
21:31:57  42  ,eur_g36
21:31:57  43  ,eur_g37
21:31:57  44  ,eur_g38
21:31:57  45  ,eur_g39
21:31:57  46  ,eur_g40
21:31:57  47  ,aud_g00
21:31:57  48  ,aud_g01
21:31:57  49  ,aud_g02
21:31:57  50  ,aud_g03
21:31:57  51  ,aud_g04
21:31:57  52  ,aud_g05
21:31:57  53  ,aud_g06
21:31:57  54  ,aud_g07
21:31:57  55  ,aud_g08
21:31:57  56  ,aud_g09
21:31:57  57  ,aud_g10
21:31:57  58  ,aud_g11
21:31:57  59  ,aud_g12
21:31:57  60  ,aud_g13
21:31:57  61  ,aud_g14
21:31:57  62  ,aud_g15
21:31:57  63  ,aud_g16
21:31:57  64  ,aud_g17
21:31:57  65  ,aud_g18
21:31:57  66  ,aud_g19
21:31:57  67  ,aud_g20
21:31:57  68  ,aud_g21
21:31:57  69  ,aud_g22
21:31:57  70  ,aud_g23
21:31:57  71  ,aud_g24
21:31:57  72  ,aud_g25
21:31:57  73  ,aud_g26
21:31:57  74  ,aud_g27
21:31:57  75  ,aud_g28
21:31:57  76  ,aud_g29
21:31:57  77  ,aud_g30
21:31:57  78  ,aud_g31
21:31:57  79  ,aud_g32
21:31:57  80  ,aud_g33
21:31:57  81  ,aud_g34
21:31:57  82  ,aud_g35
21:31:57  83  ,aud_g36
21:31:57  84  ,aud_g37
21:31:57  85  ,aud_g38
21:31:57  86  ,aud_g39
21:31:57  87  ,aud_g40
21:31:57  88  ,gbp_g00
21:31:57  89  ,gbp_g01
21:31:57  90  ,gbp_g02
21:31:57  91  ,gbp_g03
21:31:57  92  ,gbp_g04
21:31:57  93  ,gbp_g05
21:31:57  94  ,gbp_g06
21:31:57  95  ,gbp_g07
21:31:57  96  ,gbp_g08
21:31:57  97  ,gbp_g09
21:31:57  98  ,gbp_g10
21:31:57  99  ,gbp_g11
21:31:57 100  ,gbp_g12
21:31:57 101  ,gbp_g13
21:31:57 102  ,gbp_g14
21:31:57 103  ,gbp_g15
21:31:57 104  ,gbp_g16
21:31:57 105  ,gbp_g17
21:31:57 106  ,gbp_g18
21:31:57 107  ,gbp_g19
21:31:57 108  ,gbp_g20
21:31:57 109  ,gbp_g21
21:31:57 110  ,gbp_g22
21:31:57 111  ,gbp_g23
21:31:57 112  ,gbp_g24
21:31:57 113  ,gbp_g25
21:31:57 114  ,gbp_g26
21:31:57 115  ,gbp_g27
21:31:57 116  ,gbp_g28
21:31:57 117  ,gbp_g29
21:31:57 118  ,gbp_g30
21:31:57 119  ,gbp_g31
21:31:57 120  ,gbp_g32
21:31:57 121  ,gbp_g33
21:31:57 122  ,gbp_g34
21:31:57 123  ,gbp_g35
21:31:57 124  ,gbp_g36
21:31:57 125  ,gbp_g37
21:31:57 126  ,gbp_g38
21:31:57 127  ,gbp_g39
21:31:57 128  ,gbp_g40
21:31:57 129  ,jpy_g00
21:31:57 130  ,jpy_g01
21:31:57 131  ,jpy_g02
21:31:57 132  ,jpy_g03
21:31:57 133  ,jpy_g04
21:31:57 134  ,jpy_g05
21:31:57 135  ,jpy_g06
21:31:57 136  ,jpy_g07
21:31:57 137  ,jpy_g08
21:31:57 138  ,jpy_g09
21:31:57 139  ,jpy_g10
21:31:57 140  ,jpy_g11
21:31:57 141  ,jpy_g12
21:31:57 142  ,jpy_g13
21:31:57 143  ,jpy_g14
21:31:57 144  ,jpy_g15
21:31:57 145  ,jpy_g16
21:31:57 146  ,jpy_g17
21:31:57 147  ,jpy_g18
21:31:57 148  ,jpy_g19
21:31:57 149  ,jpy_g20
21:31:57 150  ,jpy_g21
21:31:57 151  ,jpy_g22
21:31:57 152  ,jpy_g23
21:31:57 153  ,jpy_g24
21:31:57 154  ,jpy_g25
21:31:57 155  ,jpy_g26
21:31:57 156  ,jpy_g27
21:31:57 157  ,jpy_g28
21:31:57 158  ,jpy_g29
21:31:57 159  ,jpy_g30
21:31:57 160  ,jpy_g31
21:31:57 161  ,jpy_g32
21:31:57 162  ,jpy_g33
21:31:57 163  ,jpy_g34
21:31:57 164  ,jpy_g35
21:31:57 165  ,jpy_g36
21:31:57 166  ,jpy_g37
21:31:57 167  ,jpy_g38
21:31:57 168  ,jpy_g39
21:31:57 169  ,jpy_g40
21:31:57 170  ,cad_g00
21:31:57 171  ,cad_g01
21:31:57 172  ,cad_g02
21:31:57 173  ,cad_g03
21:31:57 174  ,cad_g04
21:31:57 175  ,cad_g05
21:31:57 176  ,cad_g06
21:31:57 177  ,cad_g07
21:31:57 178  ,cad_g08
21:31:57 179  ,cad_g09
21:31:57 180  ,cad_g10
21:31:57 181  ,cad_g11
21:31:57 182  ,cad_g12
21:31:57 183  ,cad_g13
21:31:57 184  ,cad_g14
21:31:57 185  ,cad_g15
21:31:57 186  ,cad_g16
21:31:57 187  ,cad_g17
21:31:57 188  ,cad_g18
21:31:57 189  ,cad_g19
21:31:57 190  ,cad_g20
21:31:57 191  ,cad_g21
21:31:57 192  ,cad_g22
21:31:57 193  ,cad_g23
21:31:57 194  ,cad_g24
21:31:57 195  ,cad_g25
21:31:57 196  ,cad_g26
21:31:57 197  ,cad_g27
21:31:57 198  ,cad_g28
21:31:57 199  ,cad_g29
21:31:57 200  ,cad_g30
21:31:57 201  ,cad_g31
21:31:57 202  ,cad_g32
21:31:57 203  ,cad_g33
21:31:57 204  ,cad_g34
21:31:57 205  ,cad_g35
21:31:57 206  ,cad_g36
21:31:57 207  ,cad_g37
21:31:57 208  ,cad_g38
21:31:57 209  ,cad_g39
21:31:57 210  ,cad_g40
21:31:57 211  ,chf_g00
21:31:57 212  ,chf_g01
21:31:57 213  ,chf_g02
21:31:57 214  ,chf_g03
21:31:57 215  ,chf_g04
21:31:57 216  ,chf_g05
21:31:57 217  ,chf_g06
21:31:57 218  ,chf_g07
21:31:57 219  ,chf_g08
21:31:57 220  ,chf_g09
21:31:57 221  ,chf_g10
21:31:57 222  ,chf_g11
21:31:57 223  ,chf_g12
21:31:57 224  ,chf_g13
21:31:57 225  ,chf_g14
21:31:57 226  ,chf_g15
21:31:57 227  ,chf_g16
21:31:57 228  ,chf_g17
21:31:57 229  ,chf_g18
21:31:57 230  ,chf_g19
21:31:57 231  ,chf_g20
21:31:57 232  ,chf_g21
21:31:57 233  ,chf_g22
21:31:57 234  ,chf_g23
21:31:57 235  ,chf_g24
21:31:57 236  ,chf_g25
21:31:57 237  ,chf_g26
21:31:57 238  ,chf_g27
21:31:57 239  ,chf_g28
21:31:57 240  ,chf_g29
21:31:57 241  ,chf_g30
21:31:57 242  ,chf_g31
21:31:57 243  ,chf_g32
21:31:57 244  ,chf_g33
21:31:57 245  ,chf_g34
21:31:57 246  ,chf_g35
21:31:57 247  ,chf_g36
21:31:57 248  ,chf_g37
21:31:57 249  ,chf_g38
21:31:57 250  ,chf_g39
21:31:57 251  ,chf_g40
21:31:57 252  FROM chf_ms14 m
21:31:57 253  WHERE m.ydate = '&1'||' '||'&2'
21:31:57 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:35:00'

View created.

Elapsed: 00:00:00.12
21:31:57 SQL> 
21:31:57 SQL> -- rpt
21:31:57 SQL> -- We should see just 1 row:
21:31:57 SQL> 
21:31:57 SQL> SELECT COUNT(prdate) FROM sme
21:31:57   2  
21:31:57 SQL> -- Build the model:
21:31:57 SQL> CREATE OR REPLACE VIEW bme AS
21:31:57   2  SELECT
21:31:57   3  'chf'||m.ydate prdate
21:31:57   4  ,gattn
21:31:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:31:57   6  ,eur_g00
21:31:57   7  ,eur_g01
21:31:57   8  ,eur_g02
21:31:57   9  ,eur_g03
21:31:57  10  ,eur_g04
21:31:57  11  ,eur_g05
21:31:57  12  ,eur_g06
21:31:57  13  ,eur_g07
21:31:57  14  ,eur_g08
21:31:57  15  ,eur_g09
21:31:57  16  ,eur_g10
21:31:57  17  ,eur_g11
21:31:57  18  ,eur_g12
21:31:57  19  ,eur_g13
21:31:57  20  ,eur_g14
21:31:57  21  ,eur_g15
21:31:57  22  ,eur_g16
21:31:57  23  ,eur_g17
21:31:57  24  ,eur_g18
21:31:57  25  ,eur_g19
21:31:57  26  ,eur_g20
21:31:57  27  ,eur_g21
21:31:57  28  ,eur_g22
21:31:57  29  ,eur_g23
21:31:57  30  ,eur_g24
21:31:57  31  ,eur_g25
21:31:57  32  ,eur_g26
21:31:57  33  ,eur_g27
21:31:57  34  ,eur_g28
21:31:57  35  ,eur_g29
21:31:57  36  ,eur_g30
21:31:57  37  ,eur_g31
21:31:57  38  ,eur_g32
21:31:57  39  ,eur_g33
21:31:57  40  ,eur_g34
21:31:57  41  ,eur_g35
21:31:57  42  ,eur_g36
21:31:57  43  ,eur_g37
21:31:57  44  ,eur_g38
21:31:57  45  ,eur_g39
21:31:57  46  ,eur_g40
21:31:57  47  ,aud_g00
21:31:57  48  ,aud_g01
21:31:57  49  ,aud_g02
21:31:57  50  ,aud_g03
21:31:57  51  ,aud_g04
21:31:57  52  ,aud_g05
21:31:57  53  ,aud_g06
21:31:57  54  ,aud_g07
21:31:57  55  ,aud_g08
21:31:57  56  ,aud_g09
21:31:57  57  ,aud_g10
21:31:57  58  ,aud_g11
21:31:57  59  ,aud_g12
21:31:57  60  ,aud_g13
21:31:57  61  ,aud_g14
21:31:57  62  ,aud_g15
21:31:57  63  ,aud_g16
21:31:57  64  ,aud_g17
21:31:57  65  ,aud_g18
21:31:57  66  ,aud_g19
21:31:57  67  ,aud_g20
21:31:57  68  ,aud_g21
21:31:57  69  ,aud_g22
21:31:57  70  ,aud_g23
21:31:57  71  ,aud_g24
21:31:57  72  ,aud_g25
21:31:57  73  ,aud_g26
21:31:57  74  ,aud_g27
21:31:57  75  ,aud_g28
21:31:57  76  ,aud_g29
21:31:57  77  ,aud_g30
21:31:57  78  ,aud_g31
21:31:57  79  ,aud_g32
21:31:57  80  ,aud_g33
21:31:57  81  ,aud_g34
21:31:57  82  ,aud_g35
21:31:57  83  ,aud_g36
21:31:57  84  ,aud_g37
21:31:57  85  ,aud_g38
21:31:57  86  ,aud_g39
21:31:57  87  ,aud_g40
21:31:57  88  ,gbp_g00
21:31:57  89  ,gbp_g01
21:31:57  90  ,gbp_g02
21:31:57  91  ,gbp_g03
21:31:57  92  ,gbp_g04
21:31:57  93  ,gbp_g05
21:31:57  94  ,gbp_g06
21:31:57  95  ,gbp_g07
21:31:57  96  ,gbp_g08
21:31:57  97  ,gbp_g09
21:31:57  98  ,gbp_g10
21:31:57  99  ,gbp_g11
21:31:57 100  ,gbp_g12
21:31:57 101  ,gbp_g13
21:31:57 102  ,gbp_g14
21:31:57 103  ,gbp_g15
21:31:57 104  ,gbp_g16
21:31:57 105  ,gbp_g17
21:31:57 106  ,gbp_g18
21:31:57 107  ,gbp_g19
21:31:57 108  ,gbp_g20
21:31:57 109  ,gbp_g21
21:31:57 110  ,gbp_g22
21:31:57 111  ,gbp_g23
21:31:57 112  ,gbp_g24
21:31:57 113  ,gbp_g25
21:31:57 114  ,gbp_g26
21:31:57 115  ,gbp_g27
21:31:57 116  ,gbp_g28
21:31:57 117  ,gbp_g29
21:31:57 118  ,gbp_g30
21:31:57 119  ,gbp_g31
21:31:57 120  ,gbp_g32
21:31:57 121  ,gbp_g33
21:31:57 122  ,gbp_g34
21:31:57 123  ,gbp_g35
21:31:57 124  ,gbp_g36
21:31:57 125  ,gbp_g37
21:31:57 126  ,gbp_g38
21:31:57 127  ,gbp_g39
21:31:57 128  ,gbp_g40
21:31:57 129  ,jpy_g00
21:31:57 130  ,jpy_g01
21:31:57 131  ,jpy_g02
21:31:57 132  ,jpy_g03
21:31:57 133  ,jpy_g04
21:31:57 134  ,jpy_g05
21:31:57 135  ,jpy_g06
21:31:57 136  ,jpy_g07
21:31:57 137  ,jpy_g08
21:31:57 138  ,jpy_g09
21:31:57 139  ,jpy_g10
21:31:57 140  ,jpy_g11
21:31:57 141  ,jpy_g12
21:31:57 142  ,jpy_g13
21:31:57 143  ,jpy_g14
21:31:57 144  ,jpy_g15
21:31:57 145  ,jpy_g16
21:31:57 146  ,jpy_g17
21:31:57 147  ,jpy_g18
21:31:57 148  ,jpy_g19
21:31:57 149  ,jpy_g20
21:31:57 150  ,jpy_g21
21:31:57 151  ,jpy_g22
21:31:57 152  ,jpy_g23
21:31:57 153  ,jpy_g24
21:31:57 154  ,jpy_g25
21:31:57 155  ,jpy_g26
21:31:57 156  ,jpy_g27
21:31:57 157  ,jpy_g28
21:31:57 158  ,jpy_g29
21:31:57 159  ,jpy_g30
21:31:57 160  ,jpy_g31
21:31:57 161  ,jpy_g32
21:31:57 162  ,jpy_g33
21:31:57 163  ,jpy_g34
21:31:57 164  ,jpy_g35
21:31:57 165  ,jpy_g36
21:31:57 166  ,jpy_g37
21:31:57 167  ,jpy_g38
21:31:57 168  ,jpy_g39
21:31:57 169  ,jpy_g40
21:31:57 170  ,cad_g00
21:31:57 171  ,cad_g01
21:31:57 172  ,cad_g02
21:31:57 173  ,cad_g03
21:31:57 174  ,cad_g04
21:31:57 175  ,cad_g05
21:31:57 176  ,cad_g06
21:31:57 177  ,cad_g07
21:31:57 178  ,cad_g08
21:31:57 179  ,cad_g09
21:31:57 180  ,cad_g10
21:31:57 181  ,cad_g11
21:31:57 182  ,cad_g12
21:31:57 183  ,cad_g13
21:31:57 184  ,cad_g14
21:31:57 185  ,cad_g15
21:31:57 186  ,cad_g16
21:31:57 187  ,cad_g17
21:31:57 188  ,cad_g18
21:31:57 189  ,cad_g19
21:31:57 190  ,cad_g20
21:31:57 191  ,cad_g21
21:31:57 192  ,cad_g22
21:31:57 193  ,cad_g23
21:31:57 194  ,cad_g24
21:31:57 195  ,cad_g25
21:31:57 196  ,cad_g26
21:31:57 197  ,cad_g27
21:31:57 198  ,cad_g28
21:31:57 199  ,cad_g29
21:31:57 200  ,cad_g30
21:31:57 201  ,cad_g31
21:31:57 202  ,cad_g32
21:31:57 203  ,cad_g33
21:31:57 204  ,cad_g34
21:31:57 205  ,cad_g35
21:31:57 206  ,cad_g36
21:31:57 207  ,cad_g37
21:31:57 208  ,cad_g38
21:31:57 209  ,cad_g39
21:31:57 210  ,cad_g40
21:31:57 211  ,chf_g00
21:31:57 212  ,chf_g01
21:31:57 213  ,chf_g02
21:31:57 214  ,chf_g03
21:31:57 215  ,chf_g04
21:31:57 216  ,chf_g05
21:31:57 217  ,chf_g06
21:31:57 218  ,chf_g07
21:31:57 219  ,chf_g08
21:31:57 220  ,chf_g09
21:31:57 221  ,chf_g10
21:31:57 222  ,chf_g11
21:31:57 223  ,chf_g12
21:31:57 224  ,chf_g13
21:31:57 225  ,chf_g14
21:31:57 226  ,chf_g15
21:31:57 227  ,chf_g16
21:31:57 228  ,chf_g17
21:31:57 229  ,chf_g18
21:31:57 230  ,chf_g19
21:31:57 231  ,chf_g20
21:31:57 232  ,chf_g21
21:31:57 233  ,chf_g22
21:31:57 234  ,chf_g23
21:31:57 235  ,chf_g24
21:31:57 236  ,chf_g25
21:31:57 237  ,chf_g26
21:31:57 238  ,chf_g27
21:31:57 239  ,chf_g28
21:31:57 240  ,chf_g29
21:31:57 241  ,chf_g30
21:31:57 242  ,chf_g31
21:31:57 243  ,chf_g32
21:31:57 244  ,chf_g33
21:31:57 245  ,chf_g34
21:31:57 246  ,chf_g35
21:31:57 247  ,chf_g36
21:31:57 248  ,chf_g37
21:31:57 249  ,chf_g38
21:31:57 250  ,chf_g39
21:31:57 251  ,chf_g40
21:31:57 252  FROM chf_ms14 m
21:31:57 253  WHERE gattn IN('nup','up')
21:31:57 254  AND 1+m.ydate < '&1'||' '||'&2'
21:31:57 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:35:00'

View created.

Elapsed: 00:00:00.12
21:31:57 SQL> 
21:31:57 SQL> -- rpt
21:31:57 SQL> 
21:31:57 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:31:57   2  
21:31:57 SQL> SELECT MAX(prdate) FROM bme
21:31:57   2  
21:31:57 SQL> -- Now build model from bme and score sme
21:31:57 SQL> @score1gattn.sql
21:31:57 SQL> -- score1gattn.sql
21:31:57 SQL> 
21:31:57 SQL> -- Does the 1st SVM score
21:31:57 SQL> 
21:31:57 SQL> -- Fill up svmc_apply_prep
21:31:57 SQL> @score_gattn.sql
21:31:57 SQL> --
21:31:57 SQL> -- score_gattn.sql
21:31:57 SQL> --
21:31:57 SQL> 
21:31:57 SQL> -- usage: score_gattn.sql
21:31:57 SQL> 
21:31:57 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:31:57 SQL> 
21:31:57 SQL> DEFINE target	= 'gattn'
21:31:57 SQL> DEFINE model_name = 'forex14'
21:31:57 SQL> DEFINE bldtable	= 'bme'
21:31:57 SQL> DEFINE scoretable = 'sme'
21:31:57 SQL> DEFINE case_id	= 'prdate'
21:31:57 SQL> 
21:31:57 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:31:57 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:31:57 SQL> 
21:31:57 SQL> -- Builds an SVM model using pl/sql.
21:31:57 SQL> 
21:31:57 SQL> -----------------------------------------------------------------------
21:31:57 SQL> --			    BUILD THE MODEL
21:31:57 SQL> -----------------------------------------------------------------------
21:31:57 SQL> 
21:31:57 SQL> -- Cleanup old build data preparation objects for repeat runs
21:31:57 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:31:57 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:31:57 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:31:57 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:31:57 SQL> 
21:31:57 SQL> 
21:31:57 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:31:57 SQL> --
21:31:57 SQL> -- DROP	TABLE svmc_settings ;
21:31:57 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:31:57 SQL> -- DELETE svmc_settings;
21:31:57 SQL> 
21:31:57 SQL> -- The default classification algorithm is Naive Bayes. So override
21:31:57 SQL> -- this choice to SVM using a settings table.
21:31:57 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:31:57 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:31:57 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:31:57 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:31:57 SQL> -- models.
21:31:57 SQL> --
21:31:57 SQL> 
21:31:57 SQL> -- Do this once and then comment it out.
21:31:57 SQL> -- That makes script go faster.
21:31:57 SQL> -- BEGIN
21:31:57 SQL> -- -- Populate settings table
21:31:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:31:57 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:31:57 SQL> --
21:31:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:31:57 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:31:57 SQL> --
21:31:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:31:57 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:31:57 SQL> --   COMMIT;
21:31:57 SQL> -- END;
21:31:57 SQL> -- /
21:31:57 SQL> 
21:31:57 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
21:31:57 SQL> 
21:31:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:31:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:31:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:31:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:31:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:31:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:31:57 SQL> 
21:31:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:31:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:31:57 SQL> 
21:31:57 SQL> --------------------------------
21:31:57 SQL> -- PREPARE BUILD (TRAINING) DATA
21:31:57 SQL> --
21:31:57 SQL> 
21:31:57 SQL> -- 1. Missing Value treatment for all Predictors and
21:31:57 SQL> -- 2. Outlier Treatment and
21:31:57 SQL> -- 3. Normalization are performed below.
21:31:57 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:31:57 SQL> --    normalized here.
21:31:57 SQL> 
21:31:57 SQL> BEGIN
21:31:57   2  	-- Perform missing value treatment for all predictors
21:31:57   3  	-- create miss tables
21:31:57   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:31:57   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:31:57   6  
21:31:57   7  	-- populate miss tables
21:31:57   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:31:57   9  	  miss_table_name => 'svmc_miss_num',
21:31:57  10  	  data_table_name => '&bldtable',
21:31:57  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:31:57  12  
21:31:57  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:31:57  14  	  miss_table_name => 'svmc_miss_cat',
21:31:57  15  	  data_table_name => '&bldtable',
21:31:57  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:31:57  17  
21:31:57  18  	-- xform input data to replace missing values
21:31:57  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:31:57  20  	  miss_table_name => 'svmc_miss_num',
21:31:57  21  	  data_table_name => '&bldtable',
21:31:57  22  	  xform_view_name => 'xformed_build_miss_num');
21:31:57  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:31:57  24  	  miss_table_name => 'svmc_miss_cat',
21:31:57  25  	  data_table_name => '&bldtable',
21:31:57  26  	  xform_view_name => 'xformed_build_miss_cat');
21:31:57  27  
21:31:57  28  	-- Perform outlier treatment.
21:31:57  29  	-- create clip table
21:31:57  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:31:57  31  
21:31:57  32  	-- populate clip table
21:31:57  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:31:57  34  	  clip_table_name => 'svmc_clip',
21:31:57  35  	  data_table_name => '&bldtable',
21:31:57  36  	  tail_frac	  => 0.025,
21:31:57  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:31:57  38  
21:31:57  39  	-- xform input data to winsorized data
21:31:57  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:31:57  41  	  clip_table_name => 'svmc_clip',
21:31:57  42  	  data_table_name => '&bldtable',
21:31:57  43  	  xform_view_name => 'svmc_winsor');
21:31:57  44  
21:31:57  45  	-- create normalization table
21:31:57  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:31:57  47  
21:31:57  48  	-- populate normalization table based on winsorized data
21:31:57  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:31:57  50  	  norm_table_name => 'svmc_norm',
21:31:57  51  	  data_table_name => 'svmc_winsor',
21:31:57  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:31:57  53  
21:31:57  54  	-- normalize the original data
21:31:57  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:31:57  56  	  norm_table_name => 'svmc_norm',
21:31:57  57  	  data_table_name => '&bldtable',
21:31:57  58  	  xform_view_name => 'svmc_build_prep');
21:31:57  59  END;
21:31:57  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.91
21:32:15 SQL> 
21:32:15 SQL> ---------------------
21:32:15 SQL> -- CREATE A NEW MODEL
21:32:15 SQL> --
21:32:15 SQL> -- Cleanup old model with the same name for repeat runs
21:32:15 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:32:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:32:15   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.98
21:32:16 SQL> 
21:32:16 SQL> -- Build a new SVM Model
21:32:16 SQL> BEGIN
21:32:16   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:32:16   3  	  model_name	      => '&model_name',
21:32:16   4  	  mining_function     => dbms_data_mining.classification,
21:32:16   5  	  data_table_name     => 'svmc_build_prep',
21:32:16   6  	  case_id_column_name => '&case_id',
21:32:16   7  	  target_column_name  => '&target',
21:32:16   8  	  settings_table_name => 'svmc_settings');
21:32:16   9  END;
21:32:16  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.98
21:32:43 SQL> 
21:32:43 SQL> -----------------------------------------------------------------------
21:32:43 SQL> --			       APPLY/score THE MODEL
21:32:43 SQL> -----------------------------------------------------------------------
21:32:43 SQL> 
21:32:43 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:32:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:32:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:32:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:32:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:32:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:32:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:32:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:32:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:32:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:32:44 SQL> -----------------------
21:32:44 SQL> -- PREPARE SCORING DATA
21:32:44 SQL> --
21:32:44 SQL> -- If the data for model creation has been prepared, then the data
21:32:44 SQL> -- to be scored using the model must be prepared in the same manner
21:32:44 SQL> -- in order to obtain meaningful results.
21:32:44 SQL> --
21:32:44 SQL> -- 1. Missing Value treatment for all Predictors and
21:32:44 SQL> -- 2. Normalization
21:32:44 SQL> -- No outlier treatment will be performed during test and apply. The
21:32:44 SQL> -- normalization step is sufficient, since the normalization parameters
21:32:44 SQL> -- already capture the effects of outlier treatment done with build data.
21:32:44 SQL> --
21:32:44 SQL> BEGIN
21:32:44   2  	-- Xform Test data to replace missing values
21:32:44   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:32:44   4  	  miss_table_name => 'svmc_miss_num',
21:32:44   5  	  data_table_name => '&scoretable',
21:32:44   6  	  xform_view_name => 'xformed_apply_miss_num');
21:32:44   7  
21:32:44   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:32:44   9  	  miss_table_name => 'svmc_miss_cat',
21:32:44  10  	  data_table_name => '&scoretable',
21:32:44  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:32:44  12  
21:32:44  13  	-- Normalize the data to be scored
21:32:44  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:32:44  15  	  norm_table_name => 'svmc_norm',
21:32:44  16  	  data_table_name => '&scoretable',
21:32:44  17  	  xform_view_name => 'svmc_apply_prep');
21:32:44  18  END;
21:32:44  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
21:32:45 SQL> 
21:32:45 SQL> -- Use same model_name used in score_gattn.sql
21:32:45 SQL> DEFINE model_name = 'forex14'
21:32:45 SQL> 
21:32:45 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:32:45 SQL> 
21:32:45 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:32:45   2  SELECT
21:32:45   3  prdate
21:32:45   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:32:45   5  ,sysdate
21:32:45   6  ,SUBSTR(prdate,1,3)pair
21:32:45   7  ,SUBSTR(prdate,4,19)ydate
21:32:45   8  FROM svmc_apply_prep
21:32:45   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:32:45 SQL> @chf_score1day_gattn.sql	2010-12-17 10:30:00
21:32:45 SQL> --
21:32:45 SQL> -- chf_score1day_gattn.sql
21:32:45 SQL> --
21:32:45 SQL> 
21:32:45 SQL> CREATE OR REPLACE VIEW sme AS
21:32:45   2  SELECT
21:32:45   3  'chf'||m.ydate prdate
21:32:45   4  ,NULL gattn
21:32:45   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:32:45   6  ,eur_g00
21:32:45   7  ,eur_g01
21:32:45   8  ,eur_g02
21:32:45   9  ,eur_g03
21:32:45  10  ,eur_g04
21:32:45  11  ,eur_g05
21:32:45  12  ,eur_g06
21:32:45  13  ,eur_g07
21:32:45  14  ,eur_g08
21:32:45  15  ,eur_g09
21:32:45  16  ,eur_g10
21:32:45  17  ,eur_g11
21:32:45  18  ,eur_g12
21:32:45  19  ,eur_g13
21:32:45  20  ,eur_g14
21:32:45  21  ,eur_g15
21:32:45  22  ,eur_g16
21:32:45  23  ,eur_g17
21:32:45  24  ,eur_g18
21:32:45  25  ,eur_g19
21:32:45  26  ,eur_g20
21:32:45  27  ,eur_g21
21:32:45  28  ,eur_g22
21:32:45  29  ,eur_g23
21:32:45  30  ,eur_g24
21:32:45  31  ,eur_g25
21:32:45  32  ,eur_g26
21:32:45  33  ,eur_g27
21:32:45  34  ,eur_g28
21:32:45  35  ,eur_g29
21:32:45  36  ,eur_g30
21:32:45  37  ,eur_g31
21:32:45  38  ,eur_g32
21:32:45  39  ,eur_g33
21:32:45  40  ,eur_g34
21:32:45  41  ,eur_g35
21:32:45  42  ,eur_g36
21:32:45  43  ,eur_g37
21:32:45  44  ,eur_g38
21:32:45  45  ,eur_g39
21:32:45  46  ,eur_g40
21:32:45  47  ,aud_g00
21:32:45  48  ,aud_g01
21:32:45  49  ,aud_g02
21:32:45  50  ,aud_g03
21:32:45  51  ,aud_g04
21:32:45  52  ,aud_g05
21:32:45  53  ,aud_g06
21:32:45  54  ,aud_g07
21:32:45  55  ,aud_g08
21:32:45  56  ,aud_g09
21:32:45  57  ,aud_g10
21:32:45  58  ,aud_g11
21:32:45  59  ,aud_g12
21:32:45  60  ,aud_g13
21:32:45  61  ,aud_g14
21:32:45  62  ,aud_g15
21:32:45  63  ,aud_g16
21:32:45  64  ,aud_g17
21:32:45  65  ,aud_g18
21:32:45  66  ,aud_g19
21:32:45  67  ,aud_g20
21:32:45  68  ,aud_g21
21:32:45  69  ,aud_g22
21:32:45  70  ,aud_g23
21:32:45  71  ,aud_g24
21:32:45  72  ,aud_g25
21:32:45  73  ,aud_g26
21:32:45  74  ,aud_g27
21:32:45  75  ,aud_g28
21:32:45  76  ,aud_g29
21:32:45  77  ,aud_g30
21:32:45  78  ,aud_g31
21:32:45  79  ,aud_g32
21:32:45  80  ,aud_g33
21:32:45  81  ,aud_g34
21:32:45  82  ,aud_g35
21:32:45  83  ,aud_g36
21:32:45  84  ,aud_g37
21:32:45  85  ,aud_g38
21:32:45  86  ,aud_g39
21:32:45  87  ,aud_g40
21:32:45  88  ,gbp_g00
21:32:45  89  ,gbp_g01
21:32:45  90  ,gbp_g02
21:32:45  91  ,gbp_g03
21:32:45  92  ,gbp_g04
21:32:45  93  ,gbp_g05
21:32:45  94  ,gbp_g06
21:32:45  95  ,gbp_g07
21:32:45  96  ,gbp_g08
21:32:45  97  ,gbp_g09
21:32:45  98  ,gbp_g10
21:32:45  99  ,gbp_g11
21:32:45 100  ,gbp_g12
21:32:45 101  ,gbp_g13
21:32:45 102  ,gbp_g14
21:32:45 103  ,gbp_g15
21:32:45 104  ,gbp_g16
21:32:45 105  ,gbp_g17
21:32:45 106  ,gbp_g18
21:32:45 107  ,gbp_g19
21:32:45 108  ,gbp_g20
21:32:45 109  ,gbp_g21
21:32:45 110  ,gbp_g22
21:32:45 111  ,gbp_g23
21:32:45 112  ,gbp_g24
21:32:45 113  ,gbp_g25
21:32:45 114  ,gbp_g26
21:32:45 115  ,gbp_g27
21:32:45 116  ,gbp_g28
21:32:45 117  ,gbp_g29
21:32:45 118  ,gbp_g30
21:32:45 119  ,gbp_g31
21:32:45 120  ,gbp_g32
21:32:45 121  ,gbp_g33
21:32:45 122  ,gbp_g34
21:32:45 123  ,gbp_g35
21:32:45 124  ,gbp_g36
21:32:45 125  ,gbp_g37
21:32:45 126  ,gbp_g38
21:32:45 127  ,gbp_g39
21:32:45 128  ,gbp_g40
21:32:45 129  ,jpy_g00
21:32:45 130  ,jpy_g01
21:32:45 131  ,jpy_g02
21:32:45 132  ,jpy_g03
21:32:45 133  ,jpy_g04
21:32:45 134  ,jpy_g05
21:32:45 135  ,jpy_g06
21:32:45 136  ,jpy_g07
21:32:45 137  ,jpy_g08
21:32:45 138  ,jpy_g09
21:32:45 139  ,jpy_g10
21:32:45 140  ,jpy_g11
21:32:45 141  ,jpy_g12
21:32:45 142  ,jpy_g13
21:32:45 143  ,jpy_g14
21:32:45 144  ,jpy_g15
21:32:45 145  ,jpy_g16
21:32:45 146  ,jpy_g17
21:32:45 147  ,jpy_g18
21:32:45 148  ,jpy_g19
21:32:45 149  ,jpy_g20
21:32:45 150  ,jpy_g21
21:32:45 151  ,jpy_g22
21:32:45 152  ,jpy_g23
21:32:45 153  ,jpy_g24
21:32:45 154  ,jpy_g25
21:32:45 155  ,jpy_g26
21:32:45 156  ,jpy_g27
21:32:45 157  ,jpy_g28
21:32:45 158  ,jpy_g29
21:32:45 159  ,jpy_g30
21:32:45 160  ,jpy_g31
21:32:45 161  ,jpy_g32
21:32:45 162  ,jpy_g33
21:32:45 163  ,jpy_g34
21:32:45 164  ,jpy_g35
21:32:45 165  ,jpy_g36
21:32:45 166  ,jpy_g37
21:32:45 167  ,jpy_g38
21:32:45 168  ,jpy_g39
21:32:45 169  ,jpy_g40
21:32:45 170  ,cad_g00
21:32:45 171  ,cad_g01
21:32:45 172  ,cad_g02
21:32:45 173  ,cad_g03
21:32:45 174  ,cad_g04
21:32:45 175  ,cad_g05
21:32:45 176  ,cad_g06
21:32:45 177  ,cad_g07
21:32:45 178  ,cad_g08
21:32:45 179  ,cad_g09
21:32:45 180  ,cad_g10
21:32:45 181  ,cad_g11
21:32:45 182  ,cad_g12
21:32:45 183  ,cad_g13
21:32:45 184  ,cad_g14
21:32:45 185  ,cad_g15
21:32:45 186  ,cad_g16
21:32:45 187  ,cad_g17
21:32:45 188  ,cad_g18
21:32:45 189  ,cad_g19
21:32:45 190  ,cad_g20
21:32:45 191  ,cad_g21
21:32:45 192  ,cad_g22
21:32:45 193  ,cad_g23
21:32:45 194  ,cad_g24
21:32:45 195  ,cad_g25
21:32:45 196  ,cad_g26
21:32:45 197  ,cad_g27
21:32:45 198  ,cad_g28
21:32:45 199  ,cad_g29
21:32:45 200  ,cad_g30
21:32:45 201  ,cad_g31
21:32:45 202  ,cad_g32
21:32:45 203  ,cad_g33
21:32:45 204  ,cad_g34
21:32:45 205  ,cad_g35
21:32:45 206  ,cad_g36
21:32:45 207  ,cad_g37
21:32:45 208  ,cad_g38
21:32:45 209  ,cad_g39
21:32:45 210  ,cad_g40
21:32:45 211  ,chf_g00
21:32:45 212  ,chf_g01
21:32:45 213  ,chf_g02
21:32:45 214  ,chf_g03
21:32:45 215  ,chf_g04
21:32:45 216  ,chf_g05
21:32:45 217  ,chf_g06
21:32:45 218  ,chf_g07
21:32:45 219  ,chf_g08
21:32:45 220  ,chf_g09
21:32:45 221  ,chf_g10
21:32:45 222  ,chf_g11
21:32:45 223  ,chf_g12
21:32:45 224  ,chf_g13
21:32:45 225  ,chf_g14
21:32:45 226  ,chf_g15
21:32:45 227  ,chf_g16
21:32:45 228  ,chf_g17
21:32:45 229  ,chf_g18
21:32:45 230  ,chf_g19
21:32:45 231  ,chf_g20
21:32:45 232  ,chf_g21
21:32:45 233  ,chf_g22
21:32:45 234  ,chf_g23
21:32:45 235  ,chf_g24
21:32:45 236  ,chf_g25
21:32:45 237  ,chf_g26
21:32:45 238  ,chf_g27
21:32:45 239  ,chf_g28
21:32:45 240  ,chf_g29
21:32:45 241  ,chf_g30
21:32:45 242  ,chf_g31
21:32:45 243  ,chf_g32
21:32:45 244  ,chf_g33
21:32:45 245  ,chf_g34
21:32:45 246  ,chf_g35
21:32:45 247  ,chf_g36
21:32:45 248  ,chf_g37
21:32:45 249  ,chf_g38
21:32:45 250  ,chf_g39
21:32:45 251  ,chf_g40
21:32:45 252  FROM chf_ms14 m
21:32:45 253  WHERE m.ydate = '&1'||' '||'&2'
21:32:45 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:30:00'

View created.

Elapsed: 00:00:00.12
21:32:45 SQL> 
21:32:45 SQL> -- rpt
21:32:45 SQL> -- We should see just 1 row:
21:32:45 SQL> 
21:32:45 SQL> SELECT COUNT(prdate) FROM sme
21:32:45   2  
21:32:45 SQL> -- Build the model:
21:32:45 SQL> CREATE OR REPLACE VIEW bme AS
21:32:45   2  SELECT
21:32:45   3  'chf'||m.ydate prdate
21:32:45   4  ,gattn
21:32:45   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:32:45   6  ,eur_g00
21:32:45   7  ,eur_g01
21:32:45   8  ,eur_g02
21:32:45   9  ,eur_g03
21:32:45  10  ,eur_g04
21:32:45  11  ,eur_g05
21:32:45  12  ,eur_g06
21:32:45  13  ,eur_g07
21:32:45  14  ,eur_g08
21:32:45  15  ,eur_g09
21:32:45  16  ,eur_g10
21:32:45  17  ,eur_g11
21:32:45  18  ,eur_g12
21:32:45  19  ,eur_g13
21:32:45  20  ,eur_g14
21:32:45  21  ,eur_g15
21:32:45  22  ,eur_g16
21:32:45  23  ,eur_g17
21:32:45  24  ,eur_g18
21:32:45  25  ,eur_g19
21:32:45  26  ,eur_g20
21:32:45  27  ,eur_g21
21:32:45  28  ,eur_g22
21:32:45  29  ,eur_g23
21:32:45  30  ,eur_g24
21:32:45  31  ,eur_g25
21:32:45  32  ,eur_g26
21:32:45  33  ,eur_g27
21:32:45  34  ,eur_g28
21:32:45  35  ,eur_g29
21:32:45  36  ,eur_g30
21:32:45  37  ,eur_g31
21:32:45  38  ,eur_g32
21:32:45  39  ,eur_g33
21:32:45  40  ,eur_g34
21:32:45  41  ,eur_g35
21:32:45  42  ,eur_g36
21:32:45  43  ,eur_g37
21:32:45  44  ,eur_g38
21:32:45  45  ,eur_g39
21:32:45  46  ,eur_g40
21:32:45  47  ,aud_g00
21:32:45  48  ,aud_g01
21:32:45  49  ,aud_g02
21:32:45  50  ,aud_g03
21:32:45  51  ,aud_g04
21:32:45  52  ,aud_g05
21:32:45  53  ,aud_g06
21:32:45  54  ,aud_g07
21:32:45  55  ,aud_g08
21:32:45  56  ,aud_g09
21:32:45  57  ,aud_g10
21:32:45  58  ,aud_g11
21:32:45  59  ,aud_g12
21:32:45  60  ,aud_g13
21:32:45  61  ,aud_g14
21:32:45  62  ,aud_g15
21:32:45  63  ,aud_g16
21:32:45  64  ,aud_g17
21:32:45  65  ,aud_g18
21:32:45  66  ,aud_g19
21:32:45  67  ,aud_g20
21:32:45  68  ,aud_g21
21:32:45  69  ,aud_g22
21:32:45  70  ,aud_g23
21:32:45  71  ,aud_g24
21:32:45  72  ,aud_g25
21:32:45  73  ,aud_g26
21:32:45  74  ,aud_g27
21:32:45  75  ,aud_g28
21:32:45  76  ,aud_g29
21:32:45  77  ,aud_g30
21:32:45  78  ,aud_g31
21:32:45  79  ,aud_g32
21:32:45  80  ,aud_g33
21:32:45  81  ,aud_g34
21:32:45  82  ,aud_g35
21:32:45  83  ,aud_g36
21:32:45  84  ,aud_g37
21:32:45  85  ,aud_g38
21:32:45  86  ,aud_g39
21:32:45  87  ,aud_g40
21:32:45  88  ,gbp_g00
21:32:45  89  ,gbp_g01
21:32:45  90  ,gbp_g02
21:32:45  91  ,gbp_g03
21:32:45  92  ,gbp_g04
21:32:45  93  ,gbp_g05
21:32:45  94  ,gbp_g06
21:32:45  95  ,gbp_g07
21:32:45  96  ,gbp_g08
21:32:45  97  ,gbp_g09
21:32:45  98  ,gbp_g10
21:32:45  99  ,gbp_g11
21:32:45 100  ,gbp_g12
21:32:45 101  ,gbp_g13
21:32:45 102  ,gbp_g14
21:32:45 103  ,gbp_g15
21:32:45 104  ,gbp_g16
21:32:45 105  ,gbp_g17
21:32:45 106  ,gbp_g18
21:32:45 107  ,gbp_g19
21:32:45 108  ,gbp_g20
21:32:45 109  ,gbp_g21
21:32:45 110  ,gbp_g22
21:32:45 111  ,gbp_g23
21:32:45 112  ,gbp_g24
21:32:45 113  ,gbp_g25
21:32:45 114  ,gbp_g26
21:32:45 115  ,gbp_g27
21:32:45 116  ,gbp_g28
21:32:45 117  ,gbp_g29
21:32:45 118  ,gbp_g30
21:32:45 119  ,gbp_g31
21:32:45 120  ,gbp_g32
21:32:45 121  ,gbp_g33
21:32:45 122  ,gbp_g34
21:32:45 123  ,gbp_g35
21:32:45 124  ,gbp_g36
21:32:45 125  ,gbp_g37
21:32:45 126  ,gbp_g38
21:32:45 127  ,gbp_g39
21:32:45 128  ,gbp_g40
21:32:45 129  ,jpy_g00
21:32:45 130  ,jpy_g01
21:32:45 131  ,jpy_g02
21:32:45 132  ,jpy_g03
21:32:45 133  ,jpy_g04
21:32:45 134  ,jpy_g05
21:32:45 135  ,jpy_g06
21:32:45 136  ,jpy_g07
21:32:45 137  ,jpy_g08
21:32:45 138  ,jpy_g09
21:32:45 139  ,jpy_g10
21:32:45 140  ,jpy_g11
21:32:45 141  ,jpy_g12
21:32:45 142  ,jpy_g13
21:32:45 143  ,jpy_g14
21:32:45 144  ,jpy_g15
21:32:45 145  ,jpy_g16
21:32:45 146  ,jpy_g17
21:32:45 147  ,jpy_g18
21:32:45 148  ,jpy_g19
21:32:45 149  ,jpy_g20
21:32:45 150  ,jpy_g21
21:32:45 151  ,jpy_g22
21:32:45 152  ,jpy_g23
21:32:45 153  ,jpy_g24
21:32:45 154  ,jpy_g25
21:32:45 155  ,jpy_g26
21:32:45 156  ,jpy_g27
21:32:45 157  ,jpy_g28
21:32:45 158  ,jpy_g29
21:32:45 159  ,jpy_g30
21:32:45 160  ,jpy_g31
21:32:45 161  ,jpy_g32
21:32:45 162  ,jpy_g33
21:32:45 163  ,jpy_g34
21:32:45 164  ,jpy_g35
21:32:45 165  ,jpy_g36
21:32:45 166  ,jpy_g37
21:32:45 167  ,jpy_g38
21:32:45 168  ,jpy_g39
21:32:45 169  ,jpy_g40
21:32:45 170  ,cad_g00
21:32:45 171  ,cad_g01
21:32:45 172  ,cad_g02
21:32:45 173  ,cad_g03
21:32:45 174  ,cad_g04
21:32:45 175  ,cad_g05
21:32:45 176  ,cad_g06
21:32:45 177  ,cad_g07
21:32:45 178  ,cad_g08
21:32:45 179  ,cad_g09
21:32:45 180  ,cad_g10
21:32:45 181  ,cad_g11
21:32:45 182  ,cad_g12
21:32:45 183  ,cad_g13
21:32:45 184  ,cad_g14
21:32:45 185  ,cad_g15
21:32:45 186  ,cad_g16
21:32:45 187  ,cad_g17
21:32:45 188  ,cad_g18
21:32:45 189  ,cad_g19
21:32:45 190  ,cad_g20
21:32:45 191  ,cad_g21
21:32:45 192  ,cad_g22
21:32:45 193  ,cad_g23
21:32:45 194  ,cad_g24
21:32:45 195  ,cad_g25
21:32:45 196  ,cad_g26
21:32:45 197  ,cad_g27
21:32:45 198  ,cad_g28
21:32:45 199  ,cad_g29
21:32:45 200  ,cad_g30
21:32:45 201  ,cad_g31
21:32:45 202  ,cad_g32
21:32:45 203  ,cad_g33
21:32:45 204  ,cad_g34
21:32:45 205  ,cad_g35
21:32:45 206  ,cad_g36
21:32:45 207  ,cad_g37
21:32:45 208  ,cad_g38
21:32:45 209  ,cad_g39
21:32:45 210  ,cad_g40
21:32:45 211  ,chf_g00
21:32:45 212  ,chf_g01
21:32:45 213  ,chf_g02
21:32:45 214  ,chf_g03
21:32:45 215  ,chf_g04
21:32:45 216  ,chf_g05
21:32:45 217  ,chf_g06
21:32:45 218  ,chf_g07
21:32:45 219  ,chf_g08
21:32:45 220  ,chf_g09
21:32:45 221  ,chf_g10
21:32:45 222  ,chf_g11
21:32:45 223  ,chf_g12
21:32:45 224  ,chf_g13
21:32:45 225  ,chf_g14
21:32:45 226  ,chf_g15
21:32:45 227  ,chf_g16
21:32:45 228  ,chf_g17
21:32:45 229  ,chf_g18
21:32:45 230  ,chf_g19
21:32:45 231  ,chf_g20
21:32:45 232  ,chf_g21
21:32:45 233  ,chf_g22
21:32:45 234  ,chf_g23
21:32:45 235  ,chf_g24
21:32:45 236  ,chf_g25
21:32:45 237  ,chf_g26
21:32:45 238  ,chf_g27
21:32:45 239  ,chf_g28
21:32:45 240  ,chf_g29
21:32:45 241  ,chf_g30
21:32:45 242  ,chf_g31
21:32:45 243  ,chf_g32
21:32:45 244  ,chf_g33
21:32:45 245  ,chf_g34
21:32:45 246  ,chf_g35
21:32:45 247  ,chf_g36
21:32:45 248  ,chf_g37
21:32:45 249  ,chf_g38
21:32:45 250  ,chf_g39
21:32:45 251  ,chf_g40
21:32:45 252  FROM chf_ms14 m
21:32:45 253  WHERE gattn IN('nup','up')
21:32:45 254  AND 1+m.ydate < '&1'||' '||'&2'
21:32:45 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:30:00'

View created.

Elapsed: 00:00:00.12
21:32:45 SQL> 
21:32:45 SQL> -- rpt
21:32:45 SQL> 
21:32:45 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:32:45   2  
21:32:45 SQL> SELECT MAX(prdate) FROM bme
21:32:45   2  
21:32:45 SQL> -- Now build model from bme and score sme
21:32:45 SQL> @score1gattn.sql
21:32:45 SQL> -- score1gattn.sql
21:32:45 SQL> 
21:32:45 SQL> -- Does the 1st SVM score
21:32:45 SQL> 
21:32:45 SQL> -- Fill up svmc_apply_prep
21:32:45 SQL> @score_gattn.sql
21:32:45 SQL> --
21:32:45 SQL> -- score_gattn.sql
21:32:45 SQL> --
21:32:45 SQL> 
21:32:45 SQL> -- usage: score_gattn.sql
21:32:45 SQL> 
21:32:45 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:32:45 SQL> 
21:32:45 SQL> DEFINE target	= 'gattn'
21:32:45 SQL> DEFINE model_name = 'forex14'
21:32:45 SQL> DEFINE bldtable	= 'bme'
21:32:45 SQL> DEFINE scoretable = 'sme'
21:32:45 SQL> DEFINE case_id	= 'prdate'
21:32:45 SQL> 
21:32:45 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:32:45 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:32:45 SQL> 
21:32:45 SQL> -- Builds an SVM model using pl/sql.
21:32:45 SQL> 
21:32:45 SQL> -----------------------------------------------------------------------
21:32:45 SQL> --			    BUILD THE MODEL
21:32:45 SQL> -----------------------------------------------------------------------
21:32:45 SQL> 
21:32:45 SQL> -- Cleanup old build data preparation objects for repeat runs
21:32:45 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:32:45 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:32:45 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:32:45 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:32:45 SQL> 
21:32:45 SQL> 
21:32:45 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:32:45 SQL> --
21:32:45 SQL> -- DROP	TABLE svmc_settings ;
21:32:45 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:32:45 SQL> -- DELETE svmc_settings;
21:32:45 SQL> 
21:32:45 SQL> -- The default classification algorithm is Naive Bayes. So override
21:32:45 SQL> -- this choice to SVM using a settings table.
21:32:45 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:32:45 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:32:45 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:32:45 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:32:45 SQL> -- models.
21:32:45 SQL> --
21:32:45 SQL> 
21:32:45 SQL> -- Do this once and then comment it out.
21:32:45 SQL> -- That makes script go faster.
21:32:45 SQL> -- BEGIN
21:32:45 SQL> -- -- Populate settings table
21:32:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:32:45 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:32:45 SQL> --
21:32:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:32:45 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:32:45 SQL> --
21:32:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:32:45 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:32:45 SQL> --   COMMIT;
21:32:45 SQL> -- END;
21:32:45 SQL> -- /
21:32:45 SQL> 
21:32:45 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:32:45 SQL> 
21:32:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:32:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:32:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:32:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:32:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:32:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:32:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:32:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:32:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:32:45 SQL> 
21:32:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:32:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:32:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:32:45 SQL> 
21:32:45 SQL> --------------------------------
21:32:45 SQL> -- PREPARE BUILD (TRAINING) DATA
21:32:45 SQL> --
21:32:45 SQL> 
21:32:45 SQL> -- 1. Missing Value treatment for all Predictors and
21:32:45 SQL> -- 2. Outlier Treatment and
21:32:45 SQL> -- 3. Normalization are performed below.
21:32:45 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:32:45 SQL> --    normalized here.
21:32:45 SQL> 
21:32:45 SQL> BEGIN
21:32:45   2  	-- Perform missing value treatment for all predictors
21:32:45   3  	-- create miss tables
21:32:45   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:32:45   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:32:45   6  
21:32:45   7  	-- populate miss tables
21:32:45   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:32:45   9  	  miss_table_name => 'svmc_miss_num',
21:32:45  10  	  data_table_name => '&bldtable',
21:32:45  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:32:45  12  
21:32:45  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:32:45  14  	  miss_table_name => 'svmc_miss_cat',
21:32:45  15  	  data_table_name => '&bldtable',
21:32:45  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:32:45  17  
21:32:45  18  	-- xform input data to replace missing values
21:32:45  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:32:45  20  	  miss_table_name => 'svmc_miss_num',
21:32:45  21  	  data_table_name => '&bldtable',
21:32:45  22  	  xform_view_name => 'xformed_build_miss_num');
21:32:45  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:32:45  24  	  miss_table_name => 'svmc_miss_cat',
21:32:45  25  	  data_table_name => '&bldtable',
21:32:45  26  	  xform_view_name => 'xformed_build_miss_cat');
21:32:45  27  
21:32:45  28  	-- Perform outlier treatment.
21:32:45  29  	-- create clip table
21:32:45  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:32:45  31  
21:32:45  32  	-- populate clip table
21:32:45  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:32:45  34  	  clip_table_name => 'svmc_clip',
21:32:45  35  	  data_table_name => '&bldtable',
21:32:45  36  	  tail_frac	  => 0.025,
21:32:45  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:32:45  38  
21:32:45  39  	-- xform input data to winsorized data
21:32:45  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:32:45  41  	  clip_table_name => 'svmc_clip',
21:32:45  42  	  data_table_name => '&bldtable',
21:32:45  43  	  xform_view_name => 'svmc_winsor');
21:32:45  44  
21:32:45  45  	-- create normalization table
21:32:45  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:32:45  47  
21:32:45  48  	-- populate normalization table based on winsorized data
21:32:45  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:32:45  50  	  norm_table_name => 'svmc_norm',
21:32:45  51  	  data_table_name => 'svmc_winsor',
21:32:45  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:32:45  53  
21:32:45  54  	-- normalize the original data
21:32:45  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:32:45  56  	  norm_table_name => 'svmc_norm',
21:32:45  57  	  data_table_name => '&bldtable',
21:32:45  58  	  xform_view_name => 'svmc_build_prep');
21:32:45  59  END;
21:32:45  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.98
21:33:03 SQL> 
21:33:03 SQL> ---------------------
21:33:03 SQL> -- CREATE A NEW MODEL
21:33:03 SQL> --
21:33:03 SQL> -- Cleanup old model with the same name for repeat runs
21:33:03 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:33:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:33:03   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.13
21:33:04 SQL> 
21:33:04 SQL> -- Build a new SVM Model
21:33:04 SQL> BEGIN
21:33:04   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:33:04   3  	  model_name	      => '&model_name',
21:33:04   4  	  mining_function     => dbms_data_mining.classification,
21:33:04   5  	  data_table_name     => 'svmc_build_prep',
21:33:04   6  	  case_id_column_name => '&case_id',
21:33:04   7  	  target_column_name  => '&target',
21:33:04   8  	  settings_table_name => 'svmc_settings');
21:33:04   9  END;
21:33:04  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.81
21:33:31 SQL> 
21:33:31 SQL> -----------------------------------------------------------------------
21:33:31 SQL> --			       APPLY/score THE MODEL
21:33:31 SQL> -----------------------------------------------------------------------
21:33:31 SQL> 
21:33:31 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:33:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:33:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:33:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
21:33:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:33:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:33:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:33:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:33:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:33:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:33:31 SQL> -----------------------
21:33:31 SQL> -- PREPARE SCORING DATA
21:33:31 SQL> --
21:33:31 SQL> -- If the data for model creation has been prepared, then the data
21:33:31 SQL> -- to be scored using the model must be prepared in the same manner
21:33:31 SQL> -- in order to obtain meaningful results.
21:33:31 SQL> --
21:33:31 SQL> -- 1. Missing Value treatment for all Predictors and
21:33:31 SQL> -- 2. Normalization
21:33:31 SQL> -- No outlier treatment will be performed during test and apply. The
21:33:31 SQL> -- normalization step is sufficient, since the normalization parameters
21:33:31 SQL> -- already capture the effects of outlier treatment done with build data.
21:33:31 SQL> --
21:33:31 SQL> BEGIN
21:33:31   2  	-- Xform Test data to replace missing values
21:33:31   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:33:31   4  	  miss_table_name => 'svmc_miss_num',
21:33:31   5  	  data_table_name => '&scoretable',
21:33:31   6  	  xform_view_name => 'xformed_apply_miss_num');
21:33:31   7  
21:33:31   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:33:31   9  	  miss_table_name => 'svmc_miss_cat',
21:33:31  10  	  data_table_name => '&scoretable',
21:33:31  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:33:31  12  
21:33:31  13  	-- Normalize the data to be scored
21:33:31  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:33:31  15  	  norm_table_name => 'svmc_norm',
21:33:31  16  	  data_table_name => '&scoretable',
21:33:31  17  	  xform_view_name => 'svmc_apply_prep');
21:33:31  18  END;
21:33:31  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
21:33:33 SQL> 
21:33:33 SQL> -- Use same model_name used in score_gattn.sql
21:33:33 SQL> DEFINE model_name = 'forex14'
21:33:33 SQL> 
21:33:33 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
21:33:33 SQL> 
21:33:33 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:33:33   2  SELECT
21:33:33   3  prdate
21:33:33   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:33:33   5  ,sysdate
21:33:33   6  ,SUBSTR(prdate,1,3)pair
21:33:33   7  ,SUBSTR(prdate,4,19)ydate
21:33:33   8  FROM svmc_apply_prep
21:33:33   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:33:33 SQL> @chf_score1day_gattn.sql	2010-12-17 10:25:00
21:33:33 SQL> --
21:33:33 SQL> -- chf_score1day_gattn.sql
21:33:33 SQL> --
21:33:33 SQL> 
21:33:33 SQL> CREATE OR REPLACE VIEW sme AS
21:33:33   2  SELECT
21:33:33   3  'chf'||m.ydate prdate
21:33:33   4  ,NULL gattn
21:33:33   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:33:33   6  ,eur_g00
21:33:33   7  ,eur_g01
21:33:33   8  ,eur_g02
21:33:33   9  ,eur_g03
21:33:33  10  ,eur_g04
21:33:33  11  ,eur_g05
21:33:33  12  ,eur_g06
21:33:33  13  ,eur_g07
21:33:33  14  ,eur_g08
21:33:33  15  ,eur_g09
21:33:33  16  ,eur_g10
21:33:33  17  ,eur_g11
21:33:33  18  ,eur_g12
21:33:33  19  ,eur_g13
21:33:33  20  ,eur_g14
21:33:33  21  ,eur_g15
21:33:33  22  ,eur_g16
21:33:33  23  ,eur_g17
21:33:33  24  ,eur_g18
21:33:33  25  ,eur_g19
21:33:33  26  ,eur_g20
21:33:33  27  ,eur_g21
21:33:33  28  ,eur_g22
21:33:33  29  ,eur_g23
21:33:33  30  ,eur_g24
21:33:33  31  ,eur_g25
21:33:33  32  ,eur_g26
21:33:33  33  ,eur_g27
21:33:33  34  ,eur_g28
21:33:33  35  ,eur_g29
21:33:33  36  ,eur_g30
21:33:33  37  ,eur_g31
21:33:33  38  ,eur_g32
21:33:33  39  ,eur_g33
21:33:33  40  ,eur_g34
21:33:33  41  ,eur_g35
21:33:33  42  ,eur_g36
21:33:33  43  ,eur_g37
21:33:33  44  ,eur_g38
21:33:33  45  ,eur_g39
21:33:33  46  ,eur_g40
21:33:33  47  ,aud_g00
21:33:33  48  ,aud_g01
21:33:33  49  ,aud_g02
21:33:33  50  ,aud_g03
21:33:33  51  ,aud_g04
21:33:33  52  ,aud_g05
21:33:33  53  ,aud_g06
21:33:33  54  ,aud_g07
21:33:33  55  ,aud_g08
21:33:33  56  ,aud_g09
21:33:33  57  ,aud_g10
21:33:33  58  ,aud_g11
21:33:33  59  ,aud_g12
21:33:33  60  ,aud_g13
21:33:33  61  ,aud_g14
21:33:33  62  ,aud_g15
21:33:33  63  ,aud_g16
21:33:33  64  ,aud_g17
21:33:33  65  ,aud_g18
21:33:33  66  ,aud_g19
21:33:33  67  ,aud_g20
21:33:33  68  ,aud_g21
21:33:33  69  ,aud_g22
21:33:33  70  ,aud_g23
21:33:33  71  ,aud_g24
21:33:33  72  ,aud_g25
21:33:33  73  ,aud_g26
21:33:33  74  ,aud_g27
21:33:33  75  ,aud_g28
21:33:33  76  ,aud_g29
21:33:33  77  ,aud_g30
21:33:33  78  ,aud_g31
21:33:33  79  ,aud_g32
21:33:33  80  ,aud_g33
21:33:33  81  ,aud_g34
21:33:33  82  ,aud_g35
21:33:33  83  ,aud_g36
21:33:33  84  ,aud_g37
21:33:33  85  ,aud_g38
21:33:33  86  ,aud_g39
21:33:33  87  ,aud_g40
21:33:33  88  ,gbp_g00
21:33:33  89  ,gbp_g01
21:33:33  90  ,gbp_g02
21:33:33  91  ,gbp_g03
21:33:33  92  ,gbp_g04
21:33:33  93  ,gbp_g05
21:33:33  94  ,gbp_g06
21:33:33  95  ,gbp_g07
21:33:33  96  ,gbp_g08
21:33:33  97  ,gbp_g09
21:33:33  98  ,gbp_g10
21:33:33  99  ,gbp_g11
21:33:33 100  ,gbp_g12
21:33:33 101  ,gbp_g13
21:33:33 102  ,gbp_g14
21:33:33 103  ,gbp_g15
21:33:33 104  ,gbp_g16
21:33:33 105  ,gbp_g17
21:33:33 106  ,gbp_g18
21:33:33 107  ,gbp_g19
21:33:33 108  ,gbp_g20
21:33:33 109  ,gbp_g21
21:33:33 110  ,gbp_g22
21:33:33 111  ,gbp_g23
21:33:33 112  ,gbp_g24
21:33:33 113  ,gbp_g25
21:33:33 114  ,gbp_g26
21:33:33 115  ,gbp_g27
21:33:33 116  ,gbp_g28
21:33:33 117  ,gbp_g29
21:33:33 118  ,gbp_g30
21:33:33 119  ,gbp_g31
21:33:33 120  ,gbp_g32
21:33:33 121  ,gbp_g33
21:33:33 122  ,gbp_g34
21:33:33 123  ,gbp_g35
21:33:33 124  ,gbp_g36
21:33:33 125  ,gbp_g37
21:33:33 126  ,gbp_g38
21:33:33 127  ,gbp_g39
21:33:33 128  ,gbp_g40
21:33:33 129  ,jpy_g00
21:33:33 130  ,jpy_g01
21:33:33 131  ,jpy_g02
21:33:33 132  ,jpy_g03
21:33:33 133  ,jpy_g04
21:33:33 134  ,jpy_g05
21:33:33 135  ,jpy_g06
21:33:33 136  ,jpy_g07
21:33:33 137  ,jpy_g08
21:33:33 138  ,jpy_g09
21:33:33 139  ,jpy_g10
21:33:33 140  ,jpy_g11
21:33:33 141  ,jpy_g12
21:33:33 142  ,jpy_g13
21:33:33 143  ,jpy_g14
21:33:33 144  ,jpy_g15
21:33:33 145  ,jpy_g16
21:33:33 146  ,jpy_g17
21:33:33 147  ,jpy_g18
21:33:33 148  ,jpy_g19
21:33:33 149  ,jpy_g20
21:33:33 150  ,jpy_g21
21:33:33 151  ,jpy_g22
21:33:33 152  ,jpy_g23
21:33:33 153  ,jpy_g24
21:33:33 154  ,jpy_g25
21:33:33 155  ,jpy_g26
21:33:33 156  ,jpy_g27
21:33:33 157  ,jpy_g28
21:33:33 158  ,jpy_g29
21:33:33 159  ,jpy_g30
21:33:33 160  ,jpy_g31
21:33:33 161  ,jpy_g32
21:33:33 162  ,jpy_g33
21:33:33 163  ,jpy_g34
21:33:33 164  ,jpy_g35
21:33:33 165  ,jpy_g36
21:33:33 166  ,jpy_g37
21:33:33 167  ,jpy_g38
21:33:33 168  ,jpy_g39
21:33:33 169  ,jpy_g40
21:33:33 170  ,cad_g00
21:33:33 171  ,cad_g01
21:33:33 172  ,cad_g02
21:33:33 173  ,cad_g03
21:33:33 174  ,cad_g04
21:33:33 175  ,cad_g05
21:33:33 176  ,cad_g06
21:33:33 177  ,cad_g07
21:33:33 178  ,cad_g08
21:33:33 179  ,cad_g09
21:33:33 180  ,cad_g10
21:33:33 181  ,cad_g11
21:33:33 182  ,cad_g12
21:33:33 183  ,cad_g13
21:33:33 184  ,cad_g14
21:33:33 185  ,cad_g15
21:33:33 186  ,cad_g16
21:33:33 187  ,cad_g17
21:33:33 188  ,cad_g18
21:33:33 189  ,cad_g19
21:33:33 190  ,cad_g20
21:33:33 191  ,cad_g21
21:33:33 192  ,cad_g22
21:33:33 193  ,cad_g23
21:33:33 194  ,cad_g24
21:33:33 195  ,cad_g25
21:33:33 196  ,cad_g26
21:33:33 197  ,cad_g27
21:33:33 198  ,cad_g28
21:33:33 199  ,cad_g29
21:33:33 200  ,cad_g30
21:33:33 201  ,cad_g31
21:33:33 202  ,cad_g32
21:33:33 203  ,cad_g33
21:33:33 204  ,cad_g34
21:33:33 205  ,cad_g35
21:33:33 206  ,cad_g36
21:33:33 207  ,cad_g37
21:33:33 208  ,cad_g38
21:33:33 209  ,cad_g39
21:33:33 210  ,cad_g40
21:33:33 211  ,chf_g00
21:33:33 212  ,chf_g01
21:33:33 213  ,chf_g02
21:33:33 214  ,chf_g03
21:33:33 215  ,chf_g04
21:33:33 216  ,chf_g05
21:33:33 217  ,chf_g06
21:33:33 218  ,chf_g07
21:33:33 219  ,chf_g08
21:33:33 220  ,chf_g09
21:33:33 221  ,chf_g10
21:33:33 222  ,chf_g11
21:33:33 223  ,chf_g12
21:33:33 224  ,chf_g13
21:33:33 225  ,chf_g14
21:33:33 226  ,chf_g15
21:33:33 227  ,chf_g16
21:33:33 228  ,chf_g17
21:33:33 229  ,chf_g18
21:33:33 230  ,chf_g19
21:33:33 231  ,chf_g20
21:33:33 232  ,chf_g21
21:33:33 233  ,chf_g22
21:33:33 234  ,chf_g23
21:33:33 235  ,chf_g24
21:33:33 236  ,chf_g25
21:33:33 237  ,chf_g26
21:33:33 238  ,chf_g27
21:33:33 239  ,chf_g28
21:33:33 240  ,chf_g29
21:33:33 241  ,chf_g30
21:33:33 242  ,chf_g31
21:33:33 243  ,chf_g32
21:33:33 244  ,chf_g33
21:33:33 245  ,chf_g34
21:33:33 246  ,chf_g35
21:33:33 247  ,chf_g36
21:33:33 248  ,chf_g37
21:33:33 249  ,chf_g38
21:33:33 250  ,chf_g39
21:33:33 251  ,chf_g40
21:33:33 252  FROM chf_ms14 m
21:33:33 253  WHERE m.ydate = '&1'||' '||'&2'
21:33:33 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:25:00'

View created.

Elapsed: 00:00:00.12
21:33:33 SQL> 
21:33:33 SQL> -- rpt
21:33:33 SQL> -- We should see just 1 row:
21:33:33 SQL> 
21:33:33 SQL> SELECT COUNT(prdate) FROM sme
21:33:33   2  
21:33:33 SQL> -- Build the model:
21:33:33 SQL> CREATE OR REPLACE VIEW bme AS
21:33:33   2  SELECT
21:33:33   3  'chf'||m.ydate prdate
21:33:33   4  ,gattn
21:33:33   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:33:33   6  ,eur_g00
21:33:33   7  ,eur_g01
21:33:33   8  ,eur_g02
21:33:33   9  ,eur_g03
21:33:33  10  ,eur_g04
21:33:33  11  ,eur_g05
21:33:33  12  ,eur_g06
21:33:33  13  ,eur_g07
21:33:33  14  ,eur_g08
21:33:33  15  ,eur_g09
21:33:33  16  ,eur_g10
21:33:33  17  ,eur_g11
21:33:33  18  ,eur_g12
21:33:33  19  ,eur_g13
21:33:33  20  ,eur_g14
21:33:33  21  ,eur_g15
21:33:33  22  ,eur_g16
21:33:33  23  ,eur_g17
21:33:33  24  ,eur_g18
21:33:33  25  ,eur_g19
21:33:33  26  ,eur_g20
21:33:33  27  ,eur_g21
21:33:33  28  ,eur_g22
21:33:33  29  ,eur_g23
21:33:33  30  ,eur_g24
21:33:33  31  ,eur_g25
21:33:33  32  ,eur_g26
21:33:33  33  ,eur_g27
21:33:33  34  ,eur_g28
21:33:33  35  ,eur_g29
21:33:33  36  ,eur_g30
21:33:33  37  ,eur_g31
21:33:33  38  ,eur_g32
21:33:33  39  ,eur_g33
21:33:33  40  ,eur_g34
21:33:33  41  ,eur_g35
21:33:33  42  ,eur_g36
21:33:33  43  ,eur_g37
21:33:33  44  ,eur_g38
21:33:33  45  ,eur_g39
21:33:33  46  ,eur_g40
21:33:33  47  ,aud_g00
21:33:33  48  ,aud_g01
21:33:33  49  ,aud_g02
21:33:33  50  ,aud_g03
21:33:33  51  ,aud_g04
21:33:33  52  ,aud_g05
21:33:33  53  ,aud_g06
21:33:33  54  ,aud_g07
21:33:33  55  ,aud_g08
21:33:33  56  ,aud_g09
21:33:33  57  ,aud_g10
21:33:33  58  ,aud_g11
21:33:33  59  ,aud_g12
21:33:33  60  ,aud_g13
21:33:33  61  ,aud_g14
21:33:33  62  ,aud_g15
21:33:33  63  ,aud_g16
21:33:33  64  ,aud_g17
21:33:33  65  ,aud_g18
21:33:33  66  ,aud_g19
21:33:33  67  ,aud_g20
21:33:33  68  ,aud_g21
21:33:33  69  ,aud_g22
21:33:33  70  ,aud_g23
21:33:33  71  ,aud_g24
21:33:33  72  ,aud_g25
21:33:33  73  ,aud_g26
21:33:33  74  ,aud_g27
21:33:33  75  ,aud_g28
21:33:33  76  ,aud_g29
21:33:33  77  ,aud_g30
21:33:33  78  ,aud_g31
21:33:33  79  ,aud_g32
21:33:33  80  ,aud_g33
21:33:33  81  ,aud_g34
21:33:33  82  ,aud_g35
21:33:33  83  ,aud_g36
21:33:33  84  ,aud_g37
21:33:33  85  ,aud_g38
21:33:33  86  ,aud_g39
21:33:33  87  ,aud_g40
21:33:33  88  ,gbp_g00
21:33:33  89  ,gbp_g01
21:33:33  90  ,gbp_g02
21:33:33  91  ,gbp_g03
21:33:33  92  ,gbp_g04
21:33:33  93  ,gbp_g05
21:33:33  94  ,gbp_g06
21:33:33  95  ,gbp_g07
21:33:33  96  ,gbp_g08
21:33:33  97  ,gbp_g09
21:33:33  98  ,gbp_g10
21:33:33  99  ,gbp_g11
21:33:33 100  ,gbp_g12
21:33:33 101  ,gbp_g13
21:33:33 102  ,gbp_g14
21:33:33 103  ,gbp_g15
21:33:33 104  ,gbp_g16
21:33:33 105  ,gbp_g17
21:33:33 106  ,gbp_g18
21:33:33 107  ,gbp_g19
21:33:33 108  ,gbp_g20
21:33:33 109  ,gbp_g21
21:33:33 110  ,gbp_g22
21:33:33 111  ,gbp_g23
21:33:33 112  ,gbp_g24
21:33:33 113  ,gbp_g25
21:33:33 114  ,gbp_g26
21:33:33 115  ,gbp_g27
21:33:33 116  ,gbp_g28
21:33:33 117  ,gbp_g29
21:33:33 118  ,gbp_g30
21:33:33 119  ,gbp_g31
21:33:33 120  ,gbp_g32
21:33:33 121  ,gbp_g33
21:33:33 122  ,gbp_g34
21:33:33 123  ,gbp_g35
21:33:33 124  ,gbp_g36
21:33:33 125  ,gbp_g37
21:33:33 126  ,gbp_g38
21:33:33 127  ,gbp_g39
21:33:33 128  ,gbp_g40
21:33:33 129  ,jpy_g00
21:33:33 130  ,jpy_g01
21:33:33 131  ,jpy_g02
21:33:33 132  ,jpy_g03
21:33:33 133  ,jpy_g04
21:33:33 134  ,jpy_g05
21:33:33 135  ,jpy_g06
21:33:33 136  ,jpy_g07
21:33:33 137  ,jpy_g08
21:33:33 138  ,jpy_g09
21:33:33 139  ,jpy_g10
21:33:33 140  ,jpy_g11
21:33:33 141  ,jpy_g12
21:33:33 142  ,jpy_g13
21:33:33 143  ,jpy_g14
21:33:33 144  ,jpy_g15
21:33:33 145  ,jpy_g16
21:33:33 146  ,jpy_g17
21:33:33 147  ,jpy_g18
21:33:33 148  ,jpy_g19
21:33:33 149  ,jpy_g20
21:33:33 150  ,jpy_g21
21:33:33 151  ,jpy_g22
21:33:33 152  ,jpy_g23
21:33:33 153  ,jpy_g24
21:33:33 154  ,jpy_g25
21:33:33 155  ,jpy_g26
21:33:33 156  ,jpy_g27
21:33:33 157  ,jpy_g28
21:33:33 158  ,jpy_g29
21:33:33 159  ,jpy_g30
21:33:33 160  ,jpy_g31
21:33:33 161  ,jpy_g32
21:33:33 162  ,jpy_g33
21:33:33 163  ,jpy_g34
21:33:33 164  ,jpy_g35
21:33:33 165  ,jpy_g36
21:33:33 166  ,jpy_g37
21:33:33 167  ,jpy_g38
21:33:33 168  ,jpy_g39
21:33:33 169  ,jpy_g40
21:33:33 170  ,cad_g00
21:33:33 171  ,cad_g01
21:33:33 172  ,cad_g02
21:33:33 173  ,cad_g03
21:33:33 174  ,cad_g04
21:33:33 175  ,cad_g05
21:33:33 176  ,cad_g06
21:33:33 177  ,cad_g07
21:33:33 178  ,cad_g08
21:33:33 179  ,cad_g09
21:33:33 180  ,cad_g10
21:33:33 181  ,cad_g11
21:33:33 182  ,cad_g12
21:33:33 183  ,cad_g13
21:33:33 184  ,cad_g14
21:33:33 185  ,cad_g15
21:33:33 186  ,cad_g16
21:33:33 187  ,cad_g17
21:33:33 188  ,cad_g18
21:33:33 189  ,cad_g19
21:33:33 190  ,cad_g20
21:33:33 191  ,cad_g21
21:33:33 192  ,cad_g22
21:33:33 193  ,cad_g23
21:33:33 194  ,cad_g24
21:33:33 195  ,cad_g25
21:33:33 196  ,cad_g26
21:33:33 197  ,cad_g27
21:33:33 198  ,cad_g28
21:33:33 199  ,cad_g29
21:33:33 200  ,cad_g30
21:33:33 201  ,cad_g31
21:33:33 202  ,cad_g32
21:33:33 203  ,cad_g33
21:33:33 204  ,cad_g34
21:33:33 205  ,cad_g35
21:33:33 206  ,cad_g36
21:33:33 207  ,cad_g37
21:33:33 208  ,cad_g38
21:33:33 209  ,cad_g39
21:33:33 210  ,cad_g40
21:33:33 211  ,chf_g00
21:33:33 212  ,chf_g01
21:33:33 213  ,chf_g02
21:33:33 214  ,chf_g03
21:33:33 215  ,chf_g04
21:33:33 216  ,chf_g05
21:33:33 217  ,chf_g06
21:33:33 218  ,chf_g07
21:33:33 219  ,chf_g08
21:33:33 220  ,chf_g09
21:33:33 221  ,chf_g10
21:33:33 222  ,chf_g11
21:33:33 223  ,chf_g12
21:33:33 224  ,chf_g13
21:33:33 225  ,chf_g14
21:33:33 226  ,chf_g15
21:33:33 227  ,chf_g16
21:33:33 228  ,chf_g17
21:33:33 229  ,chf_g18
21:33:33 230  ,chf_g19
21:33:33 231  ,chf_g20
21:33:33 232  ,chf_g21
21:33:33 233  ,chf_g22
21:33:33 234  ,chf_g23
21:33:33 235  ,chf_g24
21:33:33 236  ,chf_g25
21:33:33 237  ,chf_g26
21:33:33 238  ,chf_g27
21:33:33 239  ,chf_g28
21:33:33 240  ,chf_g29
21:33:33 241  ,chf_g30
21:33:33 242  ,chf_g31
21:33:33 243  ,chf_g32
21:33:33 244  ,chf_g33
21:33:33 245  ,chf_g34
21:33:33 246  ,chf_g35
21:33:33 247  ,chf_g36
21:33:33 248  ,chf_g37
21:33:33 249  ,chf_g38
21:33:33 250  ,chf_g39
21:33:33 251  ,chf_g40
21:33:33 252  FROM chf_ms14 m
21:33:33 253  WHERE gattn IN('nup','up')
21:33:33 254  AND 1+m.ydate < '&1'||' '||'&2'
21:33:33 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:25:00'

View created.

Elapsed: 00:00:00.11
21:33:33 SQL> 
21:33:33 SQL> -- rpt
21:33:33 SQL> 
21:33:33 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:33:33   2  
21:33:33 SQL> SELECT MAX(prdate) FROM bme
21:33:33   2  
21:33:33 SQL> -- Now build model from bme and score sme
21:33:33 SQL> @score1gattn.sql
21:33:33 SQL> -- score1gattn.sql
21:33:33 SQL> 
21:33:33 SQL> -- Does the 1st SVM score
21:33:33 SQL> 
21:33:33 SQL> -- Fill up svmc_apply_prep
21:33:33 SQL> @score_gattn.sql
21:33:33 SQL> --
21:33:33 SQL> -- score_gattn.sql
21:33:33 SQL> --
21:33:33 SQL> 
21:33:33 SQL> -- usage: score_gattn.sql
21:33:33 SQL> 
21:33:33 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:33:33 SQL> 
21:33:33 SQL> DEFINE target	= 'gattn'
21:33:33 SQL> DEFINE model_name = 'forex14'
21:33:33 SQL> DEFINE bldtable	= 'bme'
21:33:33 SQL> DEFINE scoretable = 'sme'
21:33:33 SQL> DEFINE case_id	= 'prdate'
21:33:33 SQL> 
21:33:33 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:33:33 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:33:33 SQL> 
21:33:33 SQL> -- Builds an SVM model using pl/sql.
21:33:33 SQL> 
21:33:33 SQL> -----------------------------------------------------------------------
21:33:33 SQL> --			    BUILD THE MODEL
21:33:33 SQL> -----------------------------------------------------------------------
21:33:33 SQL> 
21:33:33 SQL> -- Cleanup old build data preparation objects for repeat runs
21:33:33 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:33:33 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:33:33 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:33:33 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:33:33 SQL> 
21:33:33 SQL> 
21:33:33 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:33:33 SQL> --
21:33:33 SQL> -- DROP	TABLE svmc_settings ;
21:33:33 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:33:33 SQL> -- DELETE svmc_settings;
21:33:33 SQL> 
21:33:33 SQL> -- The default classification algorithm is Naive Bayes. So override
21:33:33 SQL> -- this choice to SVM using a settings table.
21:33:33 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:33:33 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:33:33 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:33:33 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:33:33 SQL> -- models.
21:33:33 SQL> --
21:33:33 SQL> 
21:33:33 SQL> -- Do this once and then comment it out.
21:33:33 SQL> -- That makes script go faster.
21:33:33 SQL> -- BEGIN
21:33:33 SQL> -- -- Populate settings table
21:33:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:33:33 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:33:33 SQL> --
21:33:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:33:33 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:33:33 SQL> --
21:33:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:33:33 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:33:33 SQL> --   COMMIT;
21:33:33 SQL> -- END;
21:33:33 SQL> -- /
21:33:33 SQL> 
21:33:33 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:33:33 SQL> 
21:33:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:33:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:33:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:33:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:33:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:33:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:33:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:33:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:33:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:33:33 SQL> 
21:33:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:33:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:33:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:33:33 SQL> 
21:33:33 SQL> --------------------------------
21:33:33 SQL> -- PREPARE BUILD (TRAINING) DATA
21:33:33 SQL> --
21:33:33 SQL> 
21:33:33 SQL> -- 1. Missing Value treatment for all Predictors and
21:33:33 SQL> -- 2. Outlier Treatment and
21:33:33 SQL> -- 3. Normalization are performed below.
21:33:33 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:33:33 SQL> --    normalized here.
21:33:33 SQL> 
21:33:33 SQL> BEGIN
21:33:33   2  	-- Perform missing value treatment for all predictors
21:33:33   3  	-- create miss tables
21:33:33   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:33:33   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:33:33   6  
21:33:33   7  	-- populate miss tables
21:33:33   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:33:33   9  	  miss_table_name => 'svmc_miss_num',
21:33:33  10  	  data_table_name => '&bldtable',
21:33:33  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:33:33  12  
21:33:33  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:33:33  14  	  miss_table_name => 'svmc_miss_cat',
21:33:33  15  	  data_table_name => '&bldtable',
21:33:33  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:33:33  17  
21:33:33  18  	-- xform input data to replace missing values
21:33:33  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:33:33  20  	  miss_table_name => 'svmc_miss_num',
21:33:33  21  	  data_table_name => '&bldtable',
21:33:33  22  	  xform_view_name => 'xformed_build_miss_num');
21:33:33  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:33:33  24  	  miss_table_name => 'svmc_miss_cat',
21:33:33  25  	  data_table_name => '&bldtable',
21:33:33  26  	  xform_view_name => 'xformed_build_miss_cat');
21:33:33  27  
21:33:33  28  	-- Perform outlier treatment.
21:33:33  29  	-- create clip table
21:33:33  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:33:33  31  
21:33:33  32  	-- populate clip table
21:33:33  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:33:33  34  	  clip_table_name => 'svmc_clip',
21:33:33  35  	  data_table_name => '&bldtable',
21:33:33  36  	  tail_frac	  => 0.025,
21:33:33  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:33:33  38  
21:33:33  39  	-- xform input data to winsorized data
21:33:33  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:33:33  41  	  clip_table_name => 'svmc_clip',
21:33:33  42  	  data_table_name => '&bldtable',
21:33:33  43  	  xform_view_name => 'svmc_winsor');
21:33:33  44  
21:33:33  45  	-- create normalization table
21:33:33  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:33:33  47  
21:33:33  48  	-- populate normalization table based on winsorized data
21:33:33  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:33:33  50  	  norm_table_name => 'svmc_norm',
21:33:33  51  	  data_table_name => 'svmc_winsor',
21:33:33  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:33:33  53  
21:33:33  54  	-- normalize the original data
21:33:33  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:33:33  56  	  norm_table_name => 'svmc_norm',
21:33:33  57  	  data_table_name => '&bldtable',
21:33:33  58  	  xform_view_name => 'svmc_build_prep');
21:33:33  59  END;
21:33:33  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.00
21:33:51 SQL> 
21:33:51 SQL> ---------------------
21:33:51 SQL> -- CREATE A NEW MODEL
21:33:51 SQL> --
21:33:51 SQL> -- Cleanup old model with the same name for repeat runs
21:33:51 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:33:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:33:51   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.76
21:33:53 SQL> 
21:33:53 SQL> -- Build a new SVM Model
21:33:53 SQL> BEGIN
21:33:53   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:33:53   3  	  model_name	      => '&model_name',
21:33:53   4  	  mining_function     => dbms_data_mining.classification,
21:33:53   5  	  data_table_name     => 'svmc_build_prep',
21:33:53   6  	  case_id_column_name => '&case_id',
21:33:53   7  	  target_column_name  => '&target',
21:33:53   8  	  settings_table_name => 'svmc_settings');
21:33:53   9  END;
21:33:53  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.69
21:34:20 SQL> 
21:34:20 SQL> -----------------------------------------------------------------------
21:34:20 SQL> --			       APPLY/score THE MODEL
21:34:20 SQL> -----------------------------------------------------------------------
21:34:20 SQL> 
21:34:20 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:34:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:34:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:34:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:34:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:34:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:34:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:34:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:34:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:34:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:34:20 SQL> -----------------------
21:34:20 SQL> -- PREPARE SCORING DATA
21:34:20 SQL> --
21:34:20 SQL> -- If the data for model creation has been prepared, then the data
21:34:20 SQL> -- to be scored using the model must be prepared in the same manner
21:34:20 SQL> -- in order to obtain meaningful results.
21:34:20 SQL> --
21:34:20 SQL> -- 1. Missing Value treatment for all Predictors and
21:34:20 SQL> -- 2. Normalization
21:34:20 SQL> -- No outlier treatment will be performed during test and apply. The
21:34:20 SQL> -- normalization step is sufficient, since the normalization parameters
21:34:20 SQL> -- already capture the effects of outlier treatment done with build data.
21:34:20 SQL> --
21:34:20 SQL> BEGIN
21:34:20   2  	-- Xform Test data to replace missing values
21:34:20   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:34:20   4  	  miss_table_name => 'svmc_miss_num',
21:34:20   5  	  data_table_name => '&scoretable',
21:34:20   6  	  xform_view_name => 'xformed_apply_miss_num');
21:34:20   7  
21:34:20   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:34:20   9  	  miss_table_name => 'svmc_miss_cat',
21:34:20  10  	  data_table_name => '&scoretable',
21:34:20  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:34:20  12  
21:34:20  13  	-- Normalize the data to be scored
21:34:20  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:34:20  15  	  norm_table_name => 'svmc_norm',
21:34:20  16  	  data_table_name => '&scoretable',
21:34:20  17  	  xform_view_name => 'svmc_apply_prep');
21:34:20  18  END;
21:34:20  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
21:34:21 SQL> 
21:34:21 SQL> -- Use same model_name used in score_gattn.sql
21:34:21 SQL> DEFINE model_name = 'forex14'
21:34:21 SQL> 
21:34:21 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:34:21 SQL> 
21:34:21 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:34:21   2  SELECT
21:34:21   3  prdate
21:34:21   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:34:21   5  ,sysdate
21:34:21   6  ,SUBSTR(prdate,1,3)pair
21:34:21   7  ,SUBSTR(prdate,4,19)ydate
21:34:21   8  FROM svmc_apply_prep
21:34:21   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:34:21 SQL> @chf_score1day_gattn.sql	2010-12-17 10:20:00
21:34:21 SQL> --
21:34:21 SQL> -- chf_score1day_gattn.sql
21:34:21 SQL> --
21:34:21 SQL> 
21:34:21 SQL> CREATE OR REPLACE VIEW sme AS
21:34:21   2  SELECT
21:34:21   3  'chf'||m.ydate prdate
21:34:21   4  ,NULL gattn
21:34:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:34:21   6  ,eur_g00
21:34:21   7  ,eur_g01
21:34:21   8  ,eur_g02
21:34:21   9  ,eur_g03
21:34:21  10  ,eur_g04
21:34:21  11  ,eur_g05
21:34:21  12  ,eur_g06
21:34:21  13  ,eur_g07
21:34:21  14  ,eur_g08
21:34:21  15  ,eur_g09
21:34:21  16  ,eur_g10
21:34:21  17  ,eur_g11
21:34:21  18  ,eur_g12
21:34:21  19  ,eur_g13
21:34:21  20  ,eur_g14
21:34:21  21  ,eur_g15
21:34:21  22  ,eur_g16
21:34:21  23  ,eur_g17
21:34:21  24  ,eur_g18
21:34:21  25  ,eur_g19
21:34:21  26  ,eur_g20
21:34:21  27  ,eur_g21
21:34:21  28  ,eur_g22
21:34:21  29  ,eur_g23
21:34:21  30  ,eur_g24
21:34:21  31  ,eur_g25
21:34:21  32  ,eur_g26
21:34:21  33  ,eur_g27
21:34:21  34  ,eur_g28
21:34:21  35  ,eur_g29
21:34:21  36  ,eur_g30
21:34:21  37  ,eur_g31
21:34:21  38  ,eur_g32
21:34:21  39  ,eur_g33
21:34:21  40  ,eur_g34
21:34:21  41  ,eur_g35
21:34:21  42  ,eur_g36
21:34:21  43  ,eur_g37
21:34:21  44  ,eur_g38
21:34:21  45  ,eur_g39
21:34:21  46  ,eur_g40
21:34:21  47  ,aud_g00
21:34:21  48  ,aud_g01
21:34:21  49  ,aud_g02
21:34:21  50  ,aud_g03
21:34:21  51  ,aud_g04
21:34:21  52  ,aud_g05
21:34:21  53  ,aud_g06
21:34:21  54  ,aud_g07
21:34:21  55  ,aud_g08
21:34:21  56  ,aud_g09
21:34:21  57  ,aud_g10
21:34:21  58  ,aud_g11
21:34:21  59  ,aud_g12
21:34:21  60  ,aud_g13
21:34:21  61  ,aud_g14
21:34:21  62  ,aud_g15
21:34:21  63  ,aud_g16
21:34:21  64  ,aud_g17
21:34:21  65  ,aud_g18
21:34:21  66  ,aud_g19
21:34:21  67  ,aud_g20
21:34:21  68  ,aud_g21
21:34:21  69  ,aud_g22
21:34:21  70  ,aud_g23
21:34:21  71  ,aud_g24
21:34:21  72  ,aud_g25
21:34:21  73  ,aud_g26
21:34:21  74  ,aud_g27
21:34:21  75  ,aud_g28
21:34:21  76  ,aud_g29
21:34:21  77  ,aud_g30
21:34:21  78  ,aud_g31
21:34:21  79  ,aud_g32
21:34:21  80  ,aud_g33
21:34:21  81  ,aud_g34
21:34:21  82  ,aud_g35
21:34:21  83  ,aud_g36
21:34:21  84  ,aud_g37
21:34:21  85  ,aud_g38
21:34:21  86  ,aud_g39
21:34:21  87  ,aud_g40
21:34:21  88  ,gbp_g00
21:34:21  89  ,gbp_g01
21:34:21  90  ,gbp_g02
21:34:21  91  ,gbp_g03
21:34:21  92  ,gbp_g04
21:34:21  93  ,gbp_g05
21:34:21  94  ,gbp_g06
21:34:21  95  ,gbp_g07
21:34:21  96  ,gbp_g08
21:34:21  97  ,gbp_g09
21:34:21  98  ,gbp_g10
21:34:21  99  ,gbp_g11
21:34:21 100  ,gbp_g12
21:34:21 101  ,gbp_g13
21:34:21 102  ,gbp_g14
21:34:21 103  ,gbp_g15
21:34:21 104  ,gbp_g16
21:34:21 105  ,gbp_g17
21:34:21 106  ,gbp_g18
21:34:21 107  ,gbp_g19
21:34:21 108  ,gbp_g20
21:34:21 109  ,gbp_g21
21:34:21 110  ,gbp_g22
21:34:21 111  ,gbp_g23
21:34:21 112  ,gbp_g24
21:34:21 113  ,gbp_g25
21:34:21 114  ,gbp_g26
21:34:21 115  ,gbp_g27
21:34:21 116  ,gbp_g28
21:34:21 117  ,gbp_g29
21:34:21 118  ,gbp_g30
21:34:21 119  ,gbp_g31
21:34:21 120  ,gbp_g32
21:34:21 121  ,gbp_g33
21:34:21 122  ,gbp_g34
21:34:21 123  ,gbp_g35
21:34:21 124  ,gbp_g36
21:34:21 125  ,gbp_g37
21:34:21 126  ,gbp_g38
21:34:21 127  ,gbp_g39
21:34:21 128  ,gbp_g40
21:34:21 129  ,jpy_g00
21:34:21 130  ,jpy_g01
21:34:21 131  ,jpy_g02
21:34:21 132  ,jpy_g03
21:34:21 133  ,jpy_g04
21:34:21 134  ,jpy_g05
21:34:21 135  ,jpy_g06
21:34:21 136  ,jpy_g07
21:34:21 137  ,jpy_g08
21:34:21 138  ,jpy_g09
21:34:21 139  ,jpy_g10
21:34:21 140  ,jpy_g11
21:34:21 141  ,jpy_g12
21:34:21 142  ,jpy_g13
21:34:21 143  ,jpy_g14
21:34:21 144  ,jpy_g15
21:34:21 145  ,jpy_g16
21:34:21 146  ,jpy_g17
21:34:21 147  ,jpy_g18
21:34:21 148  ,jpy_g19
21:34:21 149  ,jpy_g20
21:34:21 150  ,jpy_g21
21:34:21 151  ,jpy_g22
21:34:21 152  ,jpy_g23
21:34:21 153  ,jpy_g24
21:34:21 154  ,jpy_g25
21:34:21 155  ,jpy_g26
21:34:21 156  ,jpy_g27
21:34:21 157  ,jpy_g28
21:34:21 158  ,jpy_g29
21:34:21 159  ,jpy_g30
21:34:21 160  ,jpy_g31
21:34:21 161  ,jpy_g32
21:34:21 162  ,jpy_g33
21:34:21 163  ,jpy_g34
21:34:21 164  ,jpy_g35
21:34:21 165  ,jpy_g36
21:34:21 166  ,jpy_g37
21:34:21 167  ,jpy_g38
21:34:21 168  ,jpy_g39
21:34:21 169  ,jpy_g40
21:34:21 170  ,cad_g00
21:34:21 171  ,cad_g01
21:34:21 172  ,cad_g02
21:34:21 173  ,cad_g03
21:34:21 174  ,cad_g04
21:34:21 175  ,cad_g05
21:34:21 176  ,cad_g06
21:34:21 177  ,cad_g07
21:34:21 178  ,cad_g08
21:34:21 179  ,cad_g09
21:34:21 180  ,cad_g10
21:34:21 181  ,cad_g11
21:34:21 182  ,cad_g12
21:34:21 183  ,cad_g13
21:34:21 184  ,cad_g14
21:34:21 185  ,cad_g15
21:34:21 186  ,cad_g16
21:34:21 187  ,cad_g17
21:34:21 188  ,cad_g18
21:34:21 189  ,cad_g19
21:34:21 190  ,cad_g20
21:34:21 191  ,cad_g21
21:34:21 192  ,cad_g22
21:34:21 193  ,cad_g23
21:34:21 194  ,cad_g24
21:34:21 195  ,cad_g25
21:34:21 196  ,cad_g26
21:34:21 197  ,cad_g27
21:34:21 198  ,cad_g28
21:34:21 199  ,cad_g29
21:34:21 200  ,cad_g30
21:34:21 201  ,cad_g31
21:34:21 202  ,cad_g32
21:34:21 203  ,cad_g33
21:34:21 204  ,cad_g34
21:34:21 205  ,cad_g35
21:34:21 206  ,cad_g36
21:34:21 207  ,cad_g37
21:34:21 208  ,cad_g38
21:34:21 209  ,cad_g39
21:34:21 210  ,cad_g40
21:34:21 211  ,chf_g00
21:34:21 212  ,chf_g01
21:34:21 213  ,chf_g02
21:34:21 214  ,chf_g03
21:34:21 215  ,chf_g04
21:34:21 216  ,chf_g05
21:34:21 217  ,chf_g06
21:34:21 218  ,chf_g07
21:34:21 219  ,chf_g08
21:34:21 220  ,chf_g09
21:34:21 221  ,chf_g10
21:34:21 222  ,chf_g11
21:34:21 223  ,chf_g12
21:34:21 224  ,chf_g13
21:34:21 225  ,chf_g14
21:34:21 226  ,chf_g15
21:34:21 227  ,chf_g16
21:34:21 228  ,chf_g17
21:34:21 229  ,chf_g18
21:34:21 230  ,chf_g19
21:34:21 231  ,chf_g20
21:34:21 232  ,chf_g21
21:34:21 233  ,chf_g22
21:34:21 234  ,chf_g23
21:34:21 235  ,chf_g24
21:34:21 236  ,chf_g25
21:34:21 237  ,chf_g26
21:34:21 238  ,chf_g27
21:34:21 239  ,chf_g28
21:34:21 240  ,chf_g29
21:34:21 241  ,chf_g30
21:34:21 242  ,chf_g31
21:34:21 243  ,chf_g32
21:34:21 244  ,chf_g33
21:34:21 245  ,chf_g34
21:34:21 246  ,chf_g35
21:34:21 247  ,chf_g36
21:34:21 248  ,chf_g37
21:34:21 249  ,chf_g38
21:34:21 250  ,chf_g39
21:34:21 251  ,chf_g40
21:34:21 252  FROM chf_ms14 m
21:34:21 253  WHERE m.ydate = '&1'||' '||'&2'
21:34:21 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:20:00'

View created.

Elapsed: 00:00:00.13
21:34:21 SQL> 
21:34:21 SQL> -- rpt
21:34:21 SQL> -- We should see just 1 row:
21:34:21 SQL> 
21:34:21 SQL> SELECT COUNT(prdate) FROM sme
21:34:21   2  
21:34:21 SQL> -- Build the model:
21:34:21 SQL> CREATE OR REPLACE VIEW bme AS
21:34:21   2  SELECT
21:34:21   3  'chf'||m.ydate prdate
21:34:21   4  ,gattn
21:34:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:34:21   6  ,eur_g00
21:34:21   7  ,eur_g01
21:34:21   8  ,eur_g02
21:34:21   9  ,eur_g03
21:34:21  10  ,eur_g04
21:34:21  11  ,eur_g05
21:34:21  12  ,eur_g06
21:34:21  13  ,eur_g07
21:34:21  14  ,eur_g08
21:34:21  15  ,eur_g09
21:34:21  16  ,eur_g10
21:34:21  17  ,eur_g11
21:34:21  18  ,eur_g12
21:34:21  19  ,eur_g13
21:34:21  20  ,eur_g14
21:34:21  21  ,eur_g15
21:34:21  22  ,eur_g16
21:34:21  23  ,eur_g17
21:34:21  24  ,eur_g18
21:34:21  25  ,eur_g19
21:34:21  26  ,eur_g20
21:34:21  27  ,eur_g21
21:34:21  28  ,eur_g22
21:34:21  29  ,eur_g23
21:34:21  30  ,eur_g24
21:34:21  31  ,eur_g25
21:34:21  32  ,eur_g26
21:34:21  33  ,eur_g27
21:34:21  34  ,eur_g28
21:34:21  35  ,eur_g29
21:34:21  36  ,eur_g30
21:34:21  37  ,eur_g31
21:34:21  38  ,eur_g32
21:34:21  39  ,eur_g33
21:34:21  40  ,eur_g34
21:34:21  41  ,eur_g35
21:34:21  42  ,eur_g36
21:34:21  43  ,eur_g37
21:34:21  44  ,eur_g38
21:34:21  45  ,eur_g39
21:34:21  46  ,eur_g40
21:34:21  47  ,aud_g00
21:34:21  48  ,aud_g01
21:34:21  49  ,aud_g02
21:34:21  50  ,aud_g03
21:34:21  51  ,aud_g04
21:34:21  52  ,aud_g05
21:34:21  53  ,aud_g06
21:34:21  54  ,aud_g07
21:34:21  55  ,aud_g08
21:34:21  56  ,aud_g09
21:34:21  57  ,aud_g10
21:34:21  58  ,aud_g11
21:34:21  59  ,aud_g12
21:34:21  60  ,aud_g13
21:34:21  61  ,aud_g14
21:34:21  62  ,aud_g15
21:34:21  63  ,aud_g16
21:34:21  64  ,aud_g17
21:34:21  65  ,aud_g18
21:34:21  66  ,aud_g19
21:34:21  67  ,aud_g20
21:34:21  68  ,aud_g21
21:34:21  69  ,aud_g22
21:34:21  70  ,aud_g23
21:34:21  71  ,aud_g24
21:34:21  72  ,aud_g25
21:34:21  73  ,aud_g26
21:34:21  74  ,aud_g27
21:34:21  75  ,aud_g28
21:34:21  76  ,aud_g29
21:34:21  77  ,aud_g30
21:34:21  78  ,aud_g31
21:34:21  79  ,aud_g32
21:34:21  80  ,aud_g33
21:34:21  81  ,aud_g34
21:34:21  82  ,aud_g35
21:34:21  83  ,aud_g36
21:34:21  84  ,aud_g37
21:34:21  85  ,aud_g38
21:34:21  86  ,aud_g39
21:34:21  87  ,aud_g40
21:34:21  88  ,gbp_g00
21:34:21  89  ,gbp_g01
21:34:21  90  ,gbp_g02
21:34:21  91  ,gbp_g03
21:34:21  92  ,gbp_g04
21:34:21  93  ,gbp_g05
21:34:21  94  ,gbp_g06
21:34:21  95  ,gbp_g07
21:34:21  96  ,gbp_g08
21:34:21  97  ,gbp_g09
21:34:21  98  ,gbp_g10
21:34:21  99  ,gbp_g11
21:34:21 100  ,gbp_g12
21:34:21 101  ,gbp_g13
21:34:21 102  ,gbp_g14
21:34:21 103  ,gbp_g15
21:34:21 104  ,gbp_g16
21:34:21 105  ,gbp_g17
21:34:21 106  ,gbp_g18
21:34:21 107  ,gbp_g19
21:34:21 108  ,gbp_g20
21:34:21 109  ,gbp_g21
21:34:21 110  ,gbp_g22
21:34:21 111  ,gbp_g23
21:34:21 112  ,gbp_g24
21:34:21 113  ,gbp_g25
21:34:21 114  ,gbp_g26
21:34:21 115  ,gbp_g27
21:34:21 116  ,gbp_g28
21:34:21 117  ,gbp_g29
21:34:21 118  ,gbp_g30
21:34:21 119  ,gbp_g31
21:34:21 120  ,gbp_g32
21:34:21 121  ,gbp_g33
21:34:21 122  ,gbp_g34
21:34:21 123  ,gbp_g35
21:34:21 124  ,gbp_g36
21:34:21 125  ,gbp_g37
21:34:21 126  ,gbp_g38
21:34:21 127  ,gbp_g39
21:34:21 128  ,gbp_g40
21:34:21 129  ,jpy_g00
21:34:21 130  ,jpy_g01
21:34:21 131  ,jpy_g02
21:34:21 132  ,jpy_g03
21:34:21 133  ,jpy_g04
21:34:21 134  ,jpy_g05
21:34:21 135  ,jpy_g06
21:34:21 136  ,jpy_g07
21:34:21 137  ,jpy_g08
21:34:21 138  ,jpy_g09
21:34:21 139  ,jpy_g10
21:34:21 140  ,jpy_g11
21:34:21 141  ,jpy_g12
21:34:21 142  ,jpy_g13
21:34:21 143  ,jpy_g14
21:34:21 144  ,jpy_g15
21:34:21 145  ,jpy_g16
21:34:21 146  ,jpy_g17
21:34:21 147  ,jpy_g18
21:34:21 148  ,jpy_g19
21:34:21 149  ,jpy_g20
21:34:21 150  ,jpy_g21
21:34:21 151  ,jpy_g22
21:34:21 152  ,jpy_g23
21:34:21 153  ,jpy_g24
21:34:21 154  ,jpy_g25
21:34:21 155  ,jpy_g26
21:34:21 156  ,jpy_g27
21:34:21 157  ,jpy_g28
21:34:21 158  ,jpy_g29
21:34:21 159  ,jpy_g30
21:34:21 160  ,jpy_g31
21:34:21 161  ,jpy_g32
21:34:21 162  ,jpy_g33
21:34:21 163  ,jpy_g34
21:34:21 164  ,jpy_g35
21:34:21 165  ,jpy_g36
21:34:21 166  ,jpy_g37
21:34:21 167  ,jpy_g38
21:34:21 168  ,jpy_g39
21:34:21 169  ,jpy_g40
21:34:21 170  ,cad_g00
21:34:21 171  ,cad_g01
21:34:21 172  ,cad_g02
21:34:21 173  ,cad_g03
21:34:21 174  ,cad_g04
21:34:21 175  ,cad_g05
21:34:21 176  ,cad_g06
21:34:21 177  ,cad_g07
21:34:21 178  ,cad_g08
21:34:21 179  ,cad_g09
21:34:21 180  ,cad_g10
21:34:21 181  ,cad_g11
21:34:21 182  ,cad_g12
21:34:21 183  ,cad_g13
21:34:21 184  ,cad_g14
21:34:21 185  ,cad_g15
21:34:21 186  ,cad_g16
21:34:21 187  ,cad_g17
21:34:21 188  ,cad_g18
21:34:21 189  ,cad_g19
21:34:21 190  ,cad_g20
21:34:21 191  ,cad_g21
21:34:21 192  ,cad_g22
21:34:21 193  ,cad_g23
21:34:21 194  ,cad_g24
21:34:21 195  ,cad_g25
21:34:21 196  ,cad_g26
21:34:21 197  ,cad_g27
21:34:21 198  ,cad_g28
21:34:21 199  ,cad_g29
21:34:21 200  ,cad_g30
21:34:21 201  ,cad_g31
21:34:21 202  ,cad_g32
21:34:21 203  ,cad_g33
21:34:21 204  ,cad_g34
21:34:21 205  ,cad_g35
21:34:21 206  ,cad_g36
21:34:21 207  ,cad_g37
21:34:21 208  ,cad_g38
21:34:21 209  ,cad_g39
21:34:21 210  ,cad_g40
21:34:21 211  ,chf_g00
21:34:21 212  ,chf_g01
21:34:21 213  ,chf_g02
21:34:21 214  ,chf_g03
21:34:21 215  ,chf_g04
21:34:21 216  ,chf_g05
21:34:21 217  ,chf_g06
21:34:21 218  ,chf_g07
21:34:21 219  ,chf_g08
21:34:21 220  ,chf_g09
21:34:21 221  ,chf_g10
21:34:21 222  ,chf_g11
21:34:21 223  ,chf_g12
21:34:21 224  ,chf_g13
21:34:21 225  ,chf_g14
21:34:21 226  ,chf_g15
21:34:21 227  ,chf_g16
21:34:21 228  ,chf_g17
21:34:21 229  ,chf_g18
21:34:21 230  ,chf_g19
21:34:21 231  ,chf_g20
21:34:21 232  ,chf_g21
21:34:21 233  ,chf_g22
21:34:21 234  ,chf_g23
21:34:21 235  ,chf_g24
21:34:21 236  ,chf_g25
21:34:21 237  ,chf_g26
21:34:21 238  ,chf_g27
21:34:21 239  ,chf_g28
21:34:21 240  ,chf_g29
21:34:21 241  ,chf_g30
21:34:21 242  ,chf_g31
21:34:21 243  ,chf_g32
21:34:21 244  ,chf_g33
21:34:21 245  ,chf_g34
21:34:21 246  ,chf_g35
21:34:21 247  ,chf_g36
21:34:21 248  ,chf_g37
21:34:21 249  ,chf_g38
21:34:21 250  ,chf_g39
21:34:21 251  ,chf_g40
21:34:21 252  FROM chf_ms14 m
21:34:21 253  WHERE gattn IN('nup','up')
21:34:21 254  AND 1+m.ydate < '&1'||' '||'&2'
21:34:21 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:20:00'

View created.

Elapsed: 00:00:00.12
21:34:22 SQL> 
21:34:22 SQL> -- rpt
21:34:22 SQL> 
21:34:22 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:34:22   2  
21:34:22 SQL> SELECT MAX(prdate) FROM bme
21:34:22   2  
21:34:22 SQL> -- Now build model from bme and score sme
21:34:22 SQL> @score1gattn.sql
21:34:22 SQL> -- score1gattn.sql
21:34:22 SQL> 
21:34:22 SQL> -- Does the 1st SVM score
21:34:22 SQL> 
21:34:22 SQL> -- Fill up svmc_apply_prep
21:34:22 SQL> @score_gattn.sql
21:34:22 SQL> --
21:34:22 SQL> -- score_gattn.sql
21:34:22 SQL> --
21:34:22 SQL> 
21:34:22 SQL> -- usage: score_gattn.sql
21:34:22 SQL> 
21:34:22 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:34:22 SQL> 
21:34:22 SQL> DEFINE target	= 'gattn'
21:34:22 SQL> DEFINE model_name = 'forex14'
21:34:22 SQL> DEFINE bldtable	= 'bme'
21:34:22 SQL> DEFINE scoretable = 'sme'
21:34:22 SQL> DEFINE case_id	= 'prdate'
21:34:22 SQL> 
21:34:22 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:34:22 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:34:22 SQL> 
21:34:22 SQL> -- Builds an SVM model using pl/sql.
21:34:22 SQL> 
21:34:22 SQL> -----------------------------------------------------------------------
21:34:22 SQL> --			    BUILD THE MODEL
21:34:22 SQL> -----------------------------------------------------------------------
21:34:22 SQL> 
21:34:22 SQL> -- Cleanup old build data preparation objects for repeat runs
21:34:22 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:34:22 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:34:22 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:34:22 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:34:22 SQL> 
21:34:22 SQL> 
21:34:22 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:34:22 SQL> --
21:34:22 SQL> -- DROP	TABLE svmc_settings ;
21:34:22 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:34:22 SQL> -- DELETE svmc_settings;
21:34:22 SQL> 
21:34:22 SQL> -- The default classification algorithm is Naive Bayes. So override
21:34:22 SQL> -- this choice to SVM using a settings table.
21:34:22 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:34:22 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:34:22 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:34:22 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:34:22 SQL> -- models.
21:34:22 SQL> --
21:34:22 SQL> 
21:34:22 SQL> -- Do this once and then comment it out.
21:34:22 SQL> -- That makes script go faster.
21:34:22 SQL> -- BEGIN
21:34:22 SQL> -- -- Populate settings table
21:34:22 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:34:22 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:34:22 SQL> --
21:34:22 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:34:22 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:34:22 SQL> --
21:34:22 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:34:22 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:34:22 SQL> --   COMMIT;
21:34:22 SQL> -- END;
21:34:22 SQL> -- /
21:34:22 SQL> 
21:34:22 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:34:22 SQL> 
21:34:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:34:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:34:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:34:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:34:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:34:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:34:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:34:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:34:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:34:22 SQL> 
21:34:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:34:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:34:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:34:22 SQL> 
21:34:22 SQL> --------------------------------
21:34:22 SQL> -- PREPARE BUILD (TRAINING) DATA
21:34:22 SQL> --
21:34:22 SQL> 
21:34:22 SQL> -- 1. Missing Value treatment for all Predictors and
21:34:22 SQL> -- 2. Outlier Treatment and
21:34:22 SQL> -- 3. Normalization are performed below.
21:34:22 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:34:22 SQL> --    normalized here.
21:34:22 SQL> 
21:34:22 SQL> BEGIN
21:34:22   2  	-- Perform missing value treatment for all predictors
21:34:22   3  	-- create miss tables
21:34:22   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:34:22   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:34:22   6  
21:34:22   7  	-- populate miss tables
21:34:22   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:34:22   9  	  miss_table_name => 'svmc_miss_num',
21:34:22  10  	  data_table_name => '&bldtable',
21:34:22  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:34:22  12  
21:34:22  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:34:22  14  	  miss_table_name => 'svmc_miss_cat',
21:34:22  15  	  data_table_name => '&bldtable',
21:34:22  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:34:22  17  
21:34:22  18  	-- xform input data to replace missing values
21:34:22  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:34:22  20  	  miss_table_name => 'svmc_miss_num',
21:34:22  21  	  data_table_name => '&bldtable',
21:34:22  22  	  xform_view_name => 'xformed_build_miss_num');
21:34:22  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:34:22  24  	  miss_table_name => 'svmc_miss_cat',
21:34:22  25  	  data_table_name => '&bldtable',
21:34:22  26  	  xform_view_name => 'xformed_build_miss_cat');
21:34:22  27  
21:34:22  28  	-- Perform outlier treatment.
21:34:22  29  	-- create clip table
21:34:22  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:34:22  31  
21:34:22  32  	-- populate clip table
21:34:22  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:34:22  34  	  clip_table_name => 'svmc_clip',
21:34:22  35  	  data_table_name => '&bldtable',
21:34:22  36  	  tail_frac	  => 0.025,
21:34:22  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:34:22  38  
21:34:22  39  	-- xform input data to winsorized data
21:34:22  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:34:22  41  	  clip_table_name => 'svmc_clip',
21:34:22  42  	  data_table_name => '&bldtable',
21:34:22  43  	  xform_view_name => 'svmc_winsor');
21:34:22  44  
21:34:22  45  	-- create normalization table
21:34:22  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:34:22  47  
21:34:22  48  	-- populate normalization table based on winsorized data
21:34:22  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:34:22  50  	  norm_table_name => 'svmc_norm',
21:34:22  51  	  data_table_name => 'svmc_winsor',
21:34:22  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:34:22  53  
21:34:22  54  	-- normalize the original data
21:34:22  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:34:22  56  	  norm_table_name => 'svmc_norm',
21:34:22  57  	  data_table_name => '&bldtable',
21:34:22  58  	  xform_view_name => 'svmc_build_prep');
21:34:22  59  END;
21:34:22  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.95
21:34:40 SQL> 
21:34:40 SQL> ---------------------
21:34:40 SQL> -- CREATE A NEW MODEL
21:34:40 SQL> --
21:34:40 SQL> -- Cleanup old model with the same name for repeat runs
21:34:40 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:34:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:34:40   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.37
21:34:41 SQL> 
21:34:41 SQL> -- Build a new SVM Model
21:34:41 SQL> BEGIN
21:34:41   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:34:41   3  	  model_name	      => '&model_name',
21:34:41   4  	  mining_function     => dbms_data_mining.classification,
21:34:41   5  	  data_table_name     => 'svmc_build_prep',
21:34:41   6  	  case_id_column_name => '&case_id',
21:34:41   7  	  target_column_name  => '&target',
21:34:41   8  	  settings_table_name => 'svmc_settings');
21:34:41   9  END;
21:34:41  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.31
21:35:08 SQL> 
21:35:08 SQL> -----------------------------------------------------------------------
21:35:08 SQL> --			       APPLY/score THE MODEL
21:35:08 SQL> -----------------------------------------------------------------------
21:35:08 SQL> 
21:35:08 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:35:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:35:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:35:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:35:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:35:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:35:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:35:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:35:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:35:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:35:08 SQL> -----------------------
21:35:08 SQL> -- PREPARE SCORING DATA
21:35:08 SQL> --
21:35:08 SQL> -- If the data for model creation has been prepared, then the data
21:35:08 SQL> -- to be scored using the model must be prepared in the same manner
21:35:08 SQL> -- in order to obtain meaningful results.
21:35:08 SQL> --
21:35:08 SQL> -- 1. Missing Value treatment for all Predictors and
21:35:08 SQL> -- 2. Normalization
21:35:08 SQL> -- No outlier treatment will be performed during test and apply. The
21:35:08 SQL> -- normalization step is sufficient, since the normalization parameters
21:35:08 SQL> -- already capture the effects of outlier treatment done with build data.
21:35:08 SQL> --
21:35:08 SQL> BEGIN
21:35:08   2  	-- Xform Test data to replace missing values
21:35:08   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:35:08   4  	  miss_table_name => 'svmc_miss_num',
21:35:08   5  	  data_table_name => '&scoretable',
21:35:08   6  	  xform_view_name => 'xformed_apply_miss_num');
21:35:08   7  
21:35:08   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:35:08   9  	  miss_table_name => 'svmc_miss_cat',
21:35:08  10  	  data_table_name => '&scoretable',
21:35:08  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:35:08  12  
21:35:08  13  	-- Normalize the data to be scored
21:35:08  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:35:08  15  	  norm_table_name => 'svmc_norm',
21:35:08  16  	  data_table_name => '&scoretable',
21:35:08  17  	  xform_view_name => 'svmc_apply_prep');
21:35:08  18  END;
21:35:08  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.14
21:35:09 SQL> 
21:35:09 SQL> -- Use same model_name used in score_gattn.sql
21:35:09 SQL> DEFINE model_name = 'forex14'
21:35:09 SQL> 
21:35:09 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:35:09 SQL> 
21:35:09 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:35:09   2  SELECT
21:35:09   3  prdate
21:35:09   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:35:09   5  ,sysdate
21:35:09   6  ,SUBSTR(prdate,1,3)pair
21:35:09   7  ,SUBSTR(prdate,4,19)ydate
21:35:09   8  FROM svmc_apply_prep
21:35:09   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:35:09 SQL> @chf_score1day_gattn.sql	2010-12-17 10:15:00
21:35:09 SQL> --
21:35:09 SQL> -- chf_score1day_gattn.sql
21:35:09 SQL> --
21:35:09 SQL> 
21:35:09 SQL> CREATE OR REPLACE VIEW sme AS
21:35:09   2  SELECT
21:35:09   3  'chf'||m.ydate prdate
21:35:09   4  ,NULL gattn
21:35:09   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:35:09   6  ,eur_g00
21:35:09   7  ,eur_g01
21:35:09   8  ,eur_g02
21:35:09   9  ,eur_g03
21:35:09  10  ,eur_g04
21:35:09  11  ,eur_g05
21:35:09  12  ,eur_g06
21:35:09  13  ,eur_g07
21:35:09  14  ,eur_g08
21:35:09  15  ,eur_g09
21:35:09  16  ,eur_g10
21:35:09  17  ,eur_g11
21:35:09  18  ,eur_g12
21:35:09  19  ,eur_g13
21:35:09  20  ,eur_g14
21:35:09  21  ,eur_g15
21:35:09  22  ,eur_g16
21:35:09  23  ,eur_g17
21:35:09  24  ,eur_g18
21:35:09  25  ,eur_g19
21:35:09  26  ,eur_g20
21:35:09  27  ,eur_g21
21:35:09  28  ,eur_g22
21:35:09  29  ,eur_g23
21:35:09  30  ,eur_g24
21:35:09  31  ,eur_g25
21:35:09  32  ,eur_g26
21:35:09  33  ,eur_g27
21:35:09  34  ,eur_g28
21:35:09  35  ,eur_g29
21:35:09  36  ,eur_g30
21:35:09  37  ,eur_g31
21:35:09  38  ,eur_g32
21:35:09  39  ,eur_g33
21:35:09  40  ,eur_g34
21:35:09  41  ,eur_g35
21:35:09  42  ,eur_g36
21:35:09  43  ,eur_g37
21:35:09  44  ,eur_g38
21:35:09  45  ,eur_g39
21:35:09  46  ,eur_g40
21:35:09  47  ,aud_g00
21:35:09  48  ,aud_g01
21:35:09  49  ,aud_g02
21:35:09  50  ,aud_g03
21:35:09  51  ,aud_g04
21:35:09  52  ,aud_g05
21:35:09  53  ,aud_g06
21:35:09  54  ,aud_g07
21:35:09  55  ,aud_g08
21:35:09  56  ,aud_g09
21:35:09  57  ,aud_g10
21:35:09  58  ,aud_g11
21:35:09  59  ,aud_g12
21:35:09  60  ,aud_g13
21:35:09  61  ,aud_g14
21:35:09  62  ,aud_g15
21:35:09  63  ,aud_g16
21:35:09  64  ,aud_g17
21:35:09  65  ,aud_g18
21:35:09  66  ,aud_g19
21:35:09  67  ,aud_g20
21:35:09  68  ,aud_g21
21:35:09  69  ,aud_g22
21:35:09  70  ,aud_g23
21:35:09  71  ,aud_g24
21:35:09  72  ,aud_g25
21:35:09  73  ,aud_g26
21:35:09  74  ,aud_g27
21:35:09  75  ,aud_g28
21:35:09  76  ,aud_g29
21:35:09  77  ,aud_g30
21:35:09  78  ,aud_g31
21:35:09  79  ,aud_g32
21:35:09  80  ,aud_g33
21:35:09  81  ,aud_g34
21:35:09  82  ,aud_g35
21:35:09  83  ,aud_g36
21:35:09  84  ,aud_g37
21:35:09  85  ,aud_g38
21:35:09  86  ,aud_g39
21:35:09  87  ,aud_g40
21:35:09  88  ,gbp_g00
21:35:09  89  ,gbp_g01
21:35:09  90  ,gbp_g02
21:35:09  91  ,gbp_g03
21:35:09  92  ,gbp_g04
21:35:09  93  ,gbp_g05
21:35:09  94  ,gbp_g06
21:35:09  95  ,gbp_g07
21:35:09  96  ,gbp_g08
21:35:09  97  ,gbp_g09
21:35:09  98  ,gbp_g10
21:35:09  99  ,gbp_g11
21:35:09 100  ,gbp_g12
21:35:09 101  ,gbp_g13
21:35:09 102  ,gbp_g14
21:35:09 103  ,gbp_g15
21:35:09 104  ,gbp_g16
21:35:09 105  ,gbp_g17
21:35:09 106  ,gbp_g18
21:35:09 107  ,gbp_g19
21:35:09 108  ,gbp_g20
21:35:09 109  ,gbp_g21
21:35:09 110  ,gbp_g22
21:35:09 111  ,gbp_g23
21:35:09 112  ,gbp_g24
21:35:09 113  ,gbp_g25
21:35:09 114  ,gbp_g26
21:35:09 115  ,gbp_g27
21:35:09 116  ,gbp_g28
21:35:09 117  ,gbp_g29
21:35:09 118  ,gbp_g30
21:35:09 119  ,gbp_g31
21:35:09 120  ,gbp_g32
21:35:09 121  ,gbp_g33
21:35:09 122  ,gbp_g34
21:35:09 123  ,gbp_g35
21:35:09 124  ,gbp_g36
21:35:09 125  ,gbp_g37
21:35:09 126  ,gbp_g38
21:35:09 127  ,gbp_g39
21:35:09 128  ,gbp_g40
21:35:09 129  ,jpy_g00
21:35:09 130  ,jpy_g01
21:35:09 131  ,jpy_g02
21:35:09 132  ,jpy_g03
21:35:09 133  ,jpy_g04
21:35:09 134  ,jpy_g05
21:35:09 135  ,jpy_g06
21:35:09 136  ,jpy_g07
21:35:09 137  ,jpy_g08
21:35:09 138  ,jpy_g09
21:35:09 139  ,jpy_g10
21:35:09 140  ,jpy_g11
21:35:09 141  ,jpy_g12
21:35:09 142  ,jpy_g13
21:35:09 143  ,jpy_g14
21:35:09 144  ,jpy_g15
21:35:09 145  ,jpy_g16
21:35:09 146  ,jpy_g17
21:35:09 147  ,jpy_g18
21:35:09 148  ,jpy_g19
21:35:09 149  ,jpy_g20
21:35:09 150  ,jpy_g21
21:35:09 151  ,jpy_g22
21:35:09 152  ,jpy_g23
21:35:09 153  ,jpy_g24
21:35:09 154  ,jpy_g25
21:35:09 155  ,jpy_g26
21:35:09 156  ,jpy_g27
21:35:09 157  ,jpy_g28
21:35:09 158  ,jpy_g29
21:35:09 159  ,jpy_g30
21:35:09 160  ,jpy_g31
21:35:09 161  ,jpy_g32
21:35:09 162  ,jpy_g33
21:35:09 163  ,jpy_g34
21:35:09 164  ,jpy_g35
21:35:09 165  ,jpy_g36
21:35:09 166  ,jpy_g37
21:35:09 167  ,jpy_g38
21:35:09 168  ,jpy_g39
21:35:09 169  ,jpy_g40
21:35:09 170  ,cad_g00
21:35:09 171  ,cad_g01
21:35:09 172  ,cad_g02
21:35:09 173  ,cad_g03
21:35:09 174  ,cad_g04
21:35:09 175  ,cad_g05
21:35:09 176  ,cad_g06
21:35:09 177  ,cad_g07
21:35:09 178  ,cad_g08
21:35:09 179  ,cad_g09
21:35:09 180  ,cad_g10
21:35:09 181  ,cad_g11
21:35:09 182  ,cad_g12
21:35:09 183  ,cad_g13
21:35:09 184  ,cad_g14
21:35:09 185  ,cad_g15
21:35:09 186  ,cad_g16
21:35:09 187  ,cad_g17
21:35:09 188  ,cad_g18
21:35:09 189  ,cad_g19
21:35:09 190  ,cad_g20
21:35:09 191  ,cad_g21
21:35:09 192  ,cad_g22
21:35:09 193  ,cad_g23
21:35:09 194  ,cad_g24
21:35:09 195  ,cad_g25
21:35:09 196  ,cad_g26
21:35:09 197  ,cad_g27
21:35:09 198  ,cad_g28
21:35:09 199  ,cad_g29
21:35:09 200  ,cad_g30
21:35:09 201  ,cad_g31
21:35:09 202  ,cad_g32
21:35:09 203  ,cad_g33
21:35:09 204  ,cad_g34
21:35:09 205  ,cad_g35
21:35:09 206  ,cad_g36
21:35:09 207  ,cad_g37
21:35:09 208  ,cad_g38
21:35:09 209  ,cad_g39
21:35:09 210  ,cad_g40
21:35:09 211  ,chf_g00
21:35:09 212  ,chf_g01
21:35:09 213  ,chf_g02
21:35:09 214  ,chf_g03
21:35:09 215  ,chf_g04
21:35:09 216  ,chf_g05
21:35:09 217  ,chf_g06
21:35:09 218  ,chf_g07
21:35:09 219  ,chf_g08
21:35:09 220  ,chf_g09
21:35:09 221  ,chf_g10
21:35:09 222  ,chf_g11
21:35:09 223  ,chf_g12
21:35:09 224  ,chf_g13
21:35:09 225  ,chf_g14
21:35:09 226  ,chf_g15
21:35:09 227  ,chf_g16
21:35:09 228  ,chf_g17
21:35:09 229  ,chf_g18
21:35:09 230  ,chf_g19
21:35:09 231  ,chf_g20
21:35:09 232  ,chf_g21
21:35:09 233  ,chf_g22
21:35:09 234  ,chf_g23
21:35:09 235  ,chf_g24
21:35:09 236  ,chf_g25
21:35:09 237  ,chf_g26
21:35:09 238  ,chf_g27
21:35:09 239  ,chf_g28
21:35:09 240  ,chf_g29
21:35:09 241  ,chf_g30
21:35:09 242  ,chf_g31
21:35:09 243  ,chf_g32
21:35:09 244  ,chf_g33
21:35:09 245  ,chf_g34
21:35:09 246  ,chf_g35
21:35:09 247  ,chf_g36
21:35:09 248  ,chf_g37
21:35:09 249  ,chf_g38
21:35:09 250  ,chf_g39
21:35:09 251  ,chf_g40
21:35:09 252  FROM chf_ms14 m
21:35:09 253  WHERE m.ydate = '&1'||' '||'&2'
21:35:09 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:15:00'

View created.

Elapsed: 00:00:00.12
21:35:09 SQL> 
21:35:09 SQL> -- rpt
21:35:09 SQL> -- We should see just 1 row:
21:35:09 SQL> 
21:35:09 SQL> SELECT COUNT(prdate) FROM sme
21:35:09   2  
21:35:09 SQL> -- Build the model:
21:35:09 SQL> CREATE OR REPLACE VIEW bme AS
21:35:09   2  SELECT
21:35:09   3  'chf'||m.ydate prdate
21:35:09   4  ,gattn
21:35:09   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:35:09   6  ,eur_g00
21:35:09   7  ,eur_g01
21:35:09   8  ,eur_g02
21:35:09   9  ,eur_g03
21:35:09  10  ,eur_g04
21:35:09  11  ,eur_g05
21:35:09  12  ,eur_g06
21:35:09  13  ,eur_g07
21:35:09  14  ,eur_g08
21:35:09  15  ,eur_g09
21:35:09  16  ,eur_g10
21:35:09  17  ,eur_g11
21:35:09  18  ,eur_g12
21:35:09  19  ,eur_g13
21:35:09  20  ,eur_g14
21:35:09  21  ,eur_g15
21:35:09  22  ,eur_g16
21:35:09  23  ,eur_g17
21:35:09  24  ,eur_g18
21:35:09  25  ,eur_g19
21:35:09  26  ,eur_g20
21:35:09  27  ,eur_g21
21:35:09  28  ,eur_g22
21:35:09  29  ,eur_g23
21:35:09  30  ,eur_g24
21:35:09  31  ,eur_g25
21:35:09  32  ,eur_g26
21:35:09  33  ,eur_g27
21:35:09  34  ,eur_g28
21:35:09  35  ,eur_g29
21:35:09  36  ,eur_g30
21:35:09  37  ,eur_g31
21:35:09  38  ,eur_g32
21:35:09  39  ,eur_g33
21:35:09  40  ,eur_g34
21:35:09  41  ,eur_g35
21:35:09  42  ,eur_g36
21:35:09  43  ,eur_g37
21:35:09  44  ,eur_g38
21:35:09  45  ,eur_g39
21:35:09  46  ,eur_g40
21:35:09  47  ,aud_g00
21:35:09  48  ,aud_g01
21:35:09  49  ,aud_g02
21:35:09  50  ,aud_g03
21:35:09  51  ,aud_g04
21:35:09  52  ,aud_g05
21:35:09  53  ,aud_g06
21:35:09  54  ,aud_g07
21:35:09  55  ,aud_g08
21:35:09  56  ,aud_g09
21:35:09  57  ,aud_g10
21:35:09  58  ,aud_g11
21:35:09  59  ,aud_g12
21:35:09  60  ,aud_g13
21:35:09  61  ,aud_g14
21:35:09  62  ,aud_g15
21:35:09  63  ,aud_g16
21:35:09  64  ,aud_g17
21:35:09  65  ,aud_g18
21:35:09  66  ,aud_g19
21:35:09  67  ,aud_g20
21:35:09  68  ,aud_g21
21:35:09  69  ,aud_g22
21:35:09  70  ,aud_g23
21:35:09  71  ,aud_g24
21:35:09  72  ,aud_g25
21:35:09  73  ,aud_g26
21:35:09  74  ,aud_g27
21:35:09  75  ,aud_g28
21:35:09  76  ,aud_g29
21:35:09  77  ,aud_g30
21:35:09  78  ,aud_g31
21:35:09  79  ,aud_g32
21:35:09  80  ,aud_g33
21:35:09  81  ,aud_g34
21:35:09  82  ,aud_g35
21:35:09  83  ,aud_g36
21:35:09  84  ,aud_g37
21:35:09  85  ,aud_g38
21:35:09  86  ,aud_g39
21:35:09  87  ,aud_g40
21:35:09  88  ,gbp_g00
21:35:09  89  ,gbp_g01
21:35:09  90  ,gbp_g02
21:35:09  91  ,gbp_g03
21:35:09  92  ,gbp_g04
21:35:09  93  ,gbp_g05
21:35:09  94  ,gbp_g06
21:35:09  95  ,gbp_g07
21:35:09  96  ,gbp_g08
21:35:09  97  ,gbp_g09
21:35:09  98  ,gbp_g10
21:35:09  99  ,gbp_g11
21:35:09 100  ,gbp_g12
21:35:09 101  ,gbp_g13
21:35:09 102  ,gbp_g14
21:35:09 103  ,gbp_g15
21:35:09 104  ,gbp_g16
21:35:09 105  ,gbp_g17
21:35:09 106  ,gbp_g18
21:35:09 107  ,gbp_g19
21:35:09 108  ,gbp_g20
21:35:09 109  ,gbp_g21
21:35:09 110  ,gbp_g22
21:35:09 111  ,gbp_g23
21:35:09 112  ,gbp_g24
21:35:09 113  ,gbp_g25
21:35:09 114  ,gbp_g26
21:35:09 115  ,gbp_g27
21:35:09 116  ,gbp_g28
21:35:09 117  ,gbp_g29
21:35:09 118  ,gbp_g30
21:35:09 119  ,gbp_g31
21:35:09 120  ,gbp_g32
21:35:09 121  ,gbp_g33
21:35:09 122  ,gbp_g34
21:35:09 123  ,gbp_g35
21:35:09 124  ,gbp_g36
21:35:09 125  ,gbp_g37
21:35:09 126  ,gbp_g38
21:35:09 127  ,gbp_g39
21:35:09 128  ,gbp_g40
21:35:09 129  ,jpy_g00
21:35:09 130  ,jpy_g01
21:35:09 131  ,jpy_g02
21:35:09 132  ,jpy_g03
21:35:09 133  ,jpy_g04
21:35:09 134  ,jpy_g05
21:35:09 135  ,jpy_g06
21:35:09 136  ,jpy_g07
21:35:09 137  ,jpy_g08
21:35:09 138  ,jpy_g09
21:35:09 139  ,jpy_g10
21:35:09 140  ,jpy_g11
21:35:09 141  ,jpy_g12
21:35:09 142  ,jpy_g13
21:35:09 143  ,jpy_g14
21:35:09 144  ,jpy_g15
21:35:09 145  ,jpy_g16
21:35:09 146  ,jpy_g17
21:35:09 147  ,jpy_g18
21:35:09 148  ,jpy_g19
21:35:09 149  ,jpy_g20
21:35:09 150  ,jpy_g21
21:35:09 151  ,jpy_g22
21:35:09 152  ,jpy_g23
21:35:09 153  ,jpy_g24
21:35:09 154  ,jpy_g25
21:35:09 155  ,jpy_g26
21:35:09 156  ,jpy_g27
21:35:09 157  ,jpy_g28
21:35:09 158  ,jpy_g29
21:35:09 159  ,jpy_g30
21:35:09 160  ,jpy_g31
21:35:09 161  ,jpy_g32
21:35:09 162  ,jpy_g33
21:35:09 163  ,jpy_g34
21:35:09 164  ,jpy_g35
21:35:09 165  ,jpy_g36
21:35:09 166  ,jpy_g37
21:35:09 167  ,jpy_g38
21:35:09 168  ,jpy_g39
21:35:09 169  ,jpy_g40
21:35:09 170  ,cad_g00
21:35:09 171  ,cad_g01
21:35:09 172  ,cad_g02
21:35:09 173  ,cad_g03
21:35:09 174  ,cad_g04
21:35:09 175  ,cad_g05
21:35:09 176  ,cad_g06
21:35:09 177  ,cad_g07
21:35:09 178  ,cad_g08
21:35:09 179  ,cad_g09
21:35:09 180  ,cad_g10
21:35:09 181  ,cad_g11
21:35:09 182  ,cad_g12
21:35:09 183  ,cad_g13
21:35:09 184  ,cad_g14
21:35:09 185  ,cad_g15
21:35:09 186  ,cad_g16
21:35:09 187  ,cad_g17
21:35:09 188  ,cad_g18
21:35:09 189  ,cad_g19
21:35:09 190  ,cad_g20
21:35:09 191  ,cad_g21
21:35:09 192  ,cad_g22
21:35:09 193  ,cad_g23
21:35:09 194  ,cad_g24
21:35:09 195  ,cad_g25
21:35:09 196  ,cad_g26
21:35:09 197  ,cad_g27
21:35:09 198  ,cad_g28
21:35:09 199  ,cad_g29
21:35:09 200  ,cad_g30
21:35:09 201  ,cad_g31
21:35:09 202  ,cad_g32
21:35:09 203  ,cad_g33
21:35:09 204  ,cad_g34
21:35:09 205  ,cad_g35
21:35:09 206  ,cad_g36
21:35:09 207  ,cad_g37
21:35:09 208  ,cad_g38
21:35:09 209  ,cad_g39
21:35:09 210  ,cad_g40
21:35:09 211  ,chf_g00
21:35:09 212  ,chf_g01
21:35:09 213  ,chf_g02
21:35:09 214  ,chf_g03
21:35:09 215  ,chf_g04
21:35:09 216  ,chf_g05
21:35:09 217  ,chf_g06
21:35:09 218  ,chf_g07
21:35:09 219  ,chf_g08
21:35:09 220  ,chf_g09
21:35:09 221  ,chf_g10
21:35:09 222  ,chf_g11
21:35:09 223  ,chf_g12
21:35:09 224  ,chf_g13
21:35:09 225  ,chf_g14
21:35:09 226  ,chf_g15
21:35:09 227  ,chf_g16
21:35:09 228  ,chf_g17
21:35:09 229  ,chf_g18
21:35:09 230  ,chf_g19
21:35:09 231  ,chf_g20
21:35:09 232  ,chf_g21
21:35:09 233  ,chf_g22
21:35:09 234  ,chf_g23
21:35:09 235  ,chf_g24
21:35:09 236  ,chf_g25
21:35:09 237  ,chf_g26
21:35:09 238  ,chf_g27
21:35:09 239  ,chf_g28
21:35:09 240  ,chf_g29
21:35:09 241  ,chf_g30
21:35:09 242  ,chf_g31
21:35:09 243  ,chf_g32
21:35:09 244  ,chf_g33
21:35:09 245  ,chf_g34
21:35:09 246  ,chf_g35
21:35:09 247  ,chf_g36
21:35:09 248  ,chf_g37
21:35:09 249  ,chf_g38
21:35:09 250  ,chf_g39
21:35:09 251  ,chf_g40
21:35:09 252  FROM chf_ms14 m
21:35:09 253  WHERE gattn IN('nup','up')
21:35:09 254  AND 1+m.ydate < '&1'||' '||'&2'
21:35:09 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:15:00'

View created.

Elapsed: 00:00:00.13
21:35:09 SQL> 
21:35:09 SQL> -- rpt
21:35:09 SQL> 
21:35:09 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:35:09   2  
21:35:09 SQL> SELECT MAX(prdate) FROM bme
21:35:09   2  
21:35:09 SQL> -- Now build model from bme and score sme
21:35:09 SQL> @score1gattn.sql
21:35:09 SQL> -- score1gattn.sql
21:35:09 SQL> 
21:35:09 SQL> -- Does the 1st SVM score
21:35:09 SQL> 
21:35:09 SQL> -- Fill up svmc_apply_prep
21:35:09 SQL> @score_gattn.sql
21:35:09 SQL> --
21:35:09 SQL> -- score_gattn.sql
21:35:09 SQL> --
21:35:09 SQL> 
21:35:09 SQL> -- usage: score_gattn.sql
21:35:09 SQL> 
21:35:09 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:35:09 SQL> 
21:35:09 SQL> DEFINE target	= 'gattn'
21:35:09 SQL> DEFINE model_name = 'forex14'
21:35:09 SQL> DEFINE bldtable	= 'bme'
21:35:09 SQL> DEFINE scoretable = 'sme'
21:35:09 SQL> DEFINE case_id	= 'prdate'
21:35:09 SQL> 
21:35:09 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:35:09 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:35:09 SQL> 
21:35:09 SQL> -- Builds an SVM model using pl/sql.
21:35:09 SQL> 
21:35:09 SQL> -----------------------------------------------------------------------
21:35:09 SQL> --			    BUILD THE MODEL
21:35:09 SQL> -----------------------------------------------------------------------
21:35:09 SQL> 
21:35:09 SQL> -- Cleanup old build data preparation objects for repeat runs
21:35:09 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:35:09 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:35:09 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:35:09 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:35:09 SQL> 
21:35:09 SQL> 
21:35:09 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:35:09 SQL> --
21:35:09 SQL> -- DROP	TABLE svmc_settings ;
21:35:09 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:35:09 SQL> -- DELETE svmc_settings;
21:35:09 SQL> 
21:35:09 SQL> -- The default classification algorithm is Naive Bayes. So override
21:35:09 SQL> -- this choice to SVM using a settings table.
21:35:09 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:35:09 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:35:09 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:35:09 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:35:09 SQL> -- models.
21:35:09 SQL> --
21:35:09 SQL> 
21:35:09 SQL> -- Do this once and then comment it out.
21:35:09 SQL> -- That makes script go faster.
21:35:09 SQL> -- BEGIN
21:35:09 SQL> -- -- Populate settings table
21:35:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:35:09 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:35:09 SQL> --
21:35:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:35:09 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:35:09 SQL> --
21:35:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:35:09 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:35:09 SQL> --   COMMIT;
21:35:09 SQL> -- END;
21:35:09 SQL> -- /
21:35:09 SQL> 
21:35:09 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:35:09 SQL> 
21:35:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:35:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:35:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:35:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:35:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:35:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:35:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:35:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:35:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:35:10 SQL> 
21:35:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:35:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:35:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:35:10 SQL> 
21:35:10 SQL> --------------------------------
21:35:10 SQL> -- PREPARE BUILD (TRAINING) DATA
21:35:10 SQL> --
21:35:10 SQL> 
21:35:10 SQL> -- 1. Missing Value treatment for all Predictors and
21:35:10 SQL> -- 2. Outlier Treatment and
21:35:10 SQL> -- 3. Normalization are performed below.
21:35:10 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:35:10 SQL> --    normalized here.
21:35:10 SQL> 
21:35:10 SQL> BEGIN
21:35:10   2  	-- Perform missing value treatment for all predictors
21:35:10   3  	-- create miss tables
21:35:10   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:35:10   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:35:10   6  
21:35:10   7  	-- populate miss tables
21:35:10   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:35:10   9  	  miss_table_name => 'svmc_miss_num',
21:35:10  10  	  data_table_name => '&bldtable',
21:35:10  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:35:10  12  
21:35:10  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:35:10  14  	  miss_table_name => 'svmc_miss_cat',
21:35:10  15  	  data_table_name => '&bldtable',
21:35:10  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:35:10  17  
21:35:10  18  	-- xform input data to replace missing values
21:35:10  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:35:10  20  	  miss_table_name => 'svmc_miss_num',
21:35:10  21  	  data_table_name => '&bldtable',
21:35:10  22  	  xform_view_name => 'xformed_build_miss_num');
21:35:10  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:35:10  24  	  miss_table_name => 'svmc_miss_cat',
21:35:10  25  	  data_table_name => '&bldtable',
21:35:10  26  	  xform_view_name => 'xformed_build_miss_cat');
21:35:10  27  
21:35:10  28  	-- Perform outlier treatment.
21:35:10  29  	-- create clip table
21:35:10  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:35:10  31  
21:35:10  32  	-- populate clip table
21:35:10  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:35:10  34  	  clip_table_name => 'svmc_clip',
21:35:10  35  	  data_table_name => '&bldtable',
21:35:10  36  	  tail_frac	  => 0.025,
21:35:10  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:35:10  38  
21:35:10  39  	-- xform input data to winsorized data
21:35:10  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:35:10  41  	  clip_table_name => 'svmc_clip',
21:35:10  42  	  data_table_name => '&bldtable',
21:35:10  43  	  xform_view_name => 'svmc_winsor');
21:35:10  44  
21:35:10  45  	-- create normalization table
21:35:10  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:35:10  47  
21:35:10  48  	-- populate normalization table based on winsorized data
21:35:10  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:35:10  50  	  norm_table_name => 'svmc_norm',
21:35:10  51  	  data_table_name => 'svmc_winsor',
21:35:10  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:35:10  53  
21:35:10  54  	-- normalize the original data
21:35:10  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:35:10  56  	  norm_table_name => 'svmc_norm',
21:35:10  57  	  data_table_name => '&bldtable',
21:35:10  58  	  xform_view_name => 'svmc_build_prep');
21:35:10  59  END;
21:35:10  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.14
21:35:28 SQL> 
21:35:28 SQL> ---------------------
21:35:28 SQL> -- CREATE A NEW MODEL
21:35:28 SQL> --
21:35:28 SQL> -- Cleanup old model with the same name for repeat runs
21:35:28 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:35:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:35:28   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.41
21:35:29 SQL> 
21:35:29 SQL> -- Build a new SVM Model
21:35:29 SQL> BEGIN
21:35:29   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:35:29   3  	  model_name	      => '&model_name',
21:35:29   4  	  mining_function     => dbms_data_mining.classification,
21:35:29   5  	  data_table_name     => 'svmc_build_prep',
21:35:29   6  	  case_id_column_name => '&case_id',
21:35:29   7  	  target_column_name  => '&target',
21:35:29   8  	  settings_table_name => 'svmc_settings');
21:35:29   9  END;
21:35:29  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.92
21:35:55 SQL> 
21:35:55 SQL> -----------------------------------------------------------------------
21:35:55 SQL> --			       APPLY/score THE MODEL
21:35:55 SQL> -----------------------------------------------------------------------
21:35:55 SQL> 
21:35:55 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:35:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:35:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:35:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:35:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:35:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:35:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:35:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:35:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:35:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:35:55 SQL> -----------------------
21:35:55 SQL> -- PREPARE SCORING DATA
21:35:55 SQL> --
21:35:55 SQL> -- If the data for model creation has been prepared, then the data
21:35:55 SQL> -- to be scored using the model must be prepared in the same manner
21:35:55 SQL> -- in order to obtain meaningful results.
21:35:55 SQL> --
21:35:55 SQL> -- 1. Missing Value treatment for all Predictors and
21:35:55 SQL> -- 2. Normalization
21:35:55 SQL> -- No outlier treatment will be performed during test and apply. The
21:35:55 SQL> -- normalization step is sufficient, since the normalization parameters
21:35:55 SQL> -- already capture the effects of outlier treatment done with build data.
21:35:55 SQL> --
21:35:55 SQL> BEGIN
21:35:55   2  	-- Xform Test data to replace missing values
21:35:55   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:35:55   4  	  miss_table_name => 'svmc_miss_num',
21:35:55   5  	  data_table_name => '&scoretable',
21:35:55   6  	  xform_view_name => 'xformed_apply_miss_num');
21:35:55   7  
21:35:55   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:35:55   9  	  miss_table_name => 'svmc_miss_cat',
21:35:55  10  	  data_table_name => '&scoretable',
21:35:55  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:35:55  12  
21:35:55  13  	-- Normalize the data to be scored
21:35:55  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:35:55  15  	  norm_table_name => 'svmc_norm',
21:35:55  16  	  data_table_name => '&scoretable',
21:35:55  17  	  xform_view_name => 'svmc_apply_prep');
21:35:55  18  END;
21:35:55  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.13
21:35:56 SQL> 
21:35:56 SQL> -- Use same model_name used in score_gattn.sql
21:35:56 SQL> DEFINE model_name = 'forex14'
21:35:56 SQL> 
21:35:56 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:35:56 SQL> 
21:35:56 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:35:56   2  SELECT
21:35:56   3  prdate
21:35:56   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:35:56   5  ,sysdate
21:35:56   6  ,SUBSTR(prdate,1,3)pair
21:35:56   7  ,SUBSTR(prdate,4,19)ydate
21:35:56   8  FROM svmc_apply_prep
21:35:56   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:35:57 SQL> @chf_score1day_gattn.sql	2010-12-17 10:10:00
21:35:57 SQL> --
21:35:57 SQL> -- chf_score1day_gattn.sql
21:35:57 SQL> --
21:35:57 SQL> 
21:35:57 SQL> CREATE OR REPLACE VIEW sme AS
21:35:57   2  SELECT
21:35:57   3  'chf'||m.ydate prdate
21:35:57   4  ,NULL gattn
21:35:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:35:57   6  ,eur_g00
21:35:57   7  ,eur_g01
21:35:57   8  ,eur_g02
21:35:57   9  ,eur_g03
21:35:57  10  ,eur_g04
21:35:57  11  ,eur_g05
21:35:57  12  ,eur_g06
21:35:57  13  ,eur_g07
21:35:57  14  ,eur_g08
21:35:57  15  ,eur_g09
21:35:57  16  ,eur_g10
21:35:57  17  ,eur_g11
21:35:57  18  ,eur_g12
21:35:57  19  ,eur_g13
21:35:57  20  ,eur_g14
21:35:57  21  ,eur_g15
21:35:57  22  ,eur_g16
21:35:57  23  ,eur_g17
21:35:57  24  ,eur_g18
21:35:57  25  ,eur_g19
21:35:57  26  ,eur_g20
21:35:57  27  ,eur_g21
21:35:57  28  ,eur_g22
21:35:57  29  ,eur_g23
21:35:57  30  ,eur_g24
21:35:57  31  ,eur_g25
21:35:57  32  ,eur_g26
21:35:57  33  ,eur_g27
21:35:57  34  ,eur_g28
21:35:57  35  ,eur_g29
21:35:57  36  ,eur_g30
21:35:57  37  ,eur_g31
21:35:57  38  ,eur_g32
21:35:57  39  ,eur_g33
21:35:57  40  ,eur_g34
21:35:57  41  ,eur_g35
21:35:57  42  ,eur_g36
21:35:57  43  ,eur_g37
21:35:57  44  ,eur_g38
21:35:57  45  ,eur_g39
21:35:57  46  ,eur_g40
21:35:57  47  ,aud_g00
21:35:57  48  ,aud_g01
21:35:57  49  ,aud_g02
21:35:57  50  ,aud_g03
21:35:57  51  ,aud_g04
21:35:57  52  ,aud_g05
21:35:57  53  ,aud_g06
21:35:57  54  ,aud_g07
21:35:57  55  ,aud_g08
21:35:57  56  ,aud_g09
21:35:57  57  ,aud_g10
21:35:57  58  ,aud_g11
21:35:57  59  ,aud_g12
21:35:57  60  ,aud_g13
21:35:57  61  ,aud_g14
21:35:57  62  ,aud_g15
21:35:57  63  ,aud_g16
21:35:57  64  ,aud_g17
21:35:57  65  ,aud_g18
21:35:57  66  ,aud_g19
21:35:57  67  ,aud_g20
21:35:57  68  ,aud_g21
21:35:57  69  ,aud_g22
21:35:57  70  ,aud_g23
21:35:57  71  ,aud_g24
21:35:57  72  ,aud_g25
21:35:57  73  ,aud_g26
21:35:57  74  ,aud_g27
21:35:57  75  ,aud_g28
21:35:57  76  ,aud_g29
21:35:57  77  ,aud_g30
21:35:57  78  ,aud_g31
21:35:57  79  ,aud_g32
21:35:57  80  ,aud_g33
21:35:57  81  ,aud_g34
21:35:57  82  ,aud_g35
21:35:57  83  ,aud_g36
21:35:57  84  ,aud_g37
21:35:57  85  ,aud_g38
21:35:57  86  ,aud_g39
21:35:57  87  ,aud_g40
21:35:57  88  ,gbp_g00
21:35:57  89  ,gbp_g01
21:35:57  90  ,gbp_g02
21:35:57  91  ,gbp_g03
21:35:57  92  ,gbp_g04
21:35:57  93  ,gbp_g05
21:35:57  94  ,gbp_g06
21:35:57  95  ,gbp_g07
21:35:57  96  ,gbp_g08
21:35:57  97  ,gbp_g09
21:35:57  98  ,gbp_g10
21:35:57  99  ,gbp_g11
21:35:57 100  ,gbp_g12
21:35:57 101  ,gbp_g13
21:35:57 102  ,gbp_g14
21:35:57 103  ,gbp_g15
21:35:57 104  ,gbp_g16
21:35:57 105  ,gbp_g17
21:35:57 106  ,gbp_g18
21:35:57 107  ,gbp_g19
21:35:57 108  ,gbp_g20
21:35:57 109  ,gbp_g21
21:35:57 110  ,gbp_g22
21:35:57 111  ,gbp_g23
21:35:57 112  ,gbp_g24
21:35:57 113  ,gbp_g25
21:35:57 114  ,gbp_g26
21:35:57 115  ,gbp_g27
21:35:57 116  ,gbp_g28
21:35:57 117  ,gbp_g29
21:35:57 118  ,gbp_g30
21:35:57 119  ,gbp_g31
21:35:57 120  ,gbp_g32
21:35:57 121  ,gbp_g33
21:35:57 122  ,gbp_g34
21:35:57 123  ,gbp_g35
21:35:57 124  ,gbp_g36
21:35:57 125  ,gbp_g37
21:35:57 126  ,gbp_g38
21:35:57 127  ,gbp_g39
21:35:57 128  ,gbp_g40
21:35:57 129  ,jpy_g00
21:35:57 130  ,jpy_g01
21:35:57 131  ,jpy_g02
21:35:57 132  ,jpy_g03
21:35:57 133  ,jpy_g04
21:35:57 134  ,jpy_g05
21:35:57 135  ,jpy_g06
21:35:57 136  ,jpy_g07
21:35:57 137  ,jpy_g08
21:35:57 138  ,jpy_g09
21:35:57 139  ,jpy_g10
21:35:57 140  ,jpy_g11
21:35:57 141  ,jpy_g12
21:35:57 142  ,jpy_g13
21:35:57 143  ,jpy_g14
21:35:57 144  ,jpy_g15
21:35:57 145  ,jpy_g16
21:35:57 146  ,jpy_g17
21:35:57 147  ,jpy_g18
21:35:57 148  ,jpy_g19
21:35:57 149  ,jpy_g20
21:35:57 150  ,jpy_g21
21:35:57 151  ,jpy_g22
21:35:57 152  ,jpy_g23
21:35:57 153  ,jpy_g24
21:35:57 154  ,jpy_g25
21:35:57 155  ,jpy_g26
21:35:57 156  ,jpy_g27
21:35:57 157  ,jpy_g28
21:35:57 158  ,jpy_g29
21:35:57 159  ,jpy_g30
21:35:57 160  ,jpy_g31
21:35:57 161  ,jpy_g32
21:35:57 162  ,jpy_g33
21:35:57 163  ,jpy_g34
21:35:57 164  ,jpy_g35
21:35:57 165  ,jpy_g36
21:35:57 166  ,jpy_g37
21:35:57 167  ,jpy_g38
21:35:57 168  ,jpy_g39
21:35:57 169  ,jpy_g40
21:35:57 170  ,cad_g00
21:35:57 171  ,cad_g01
21:35:57 172  ,cad_g02
21:35:57 173  ,cad_g03
21:35:57 174  ,cad_g04
21:35:57 175  ,cad_g05
21:35:57 176  ,cad_g06
21:35:57 177  ,cad_g07
21:35:57 178  ,cad_g08
21:35:57 179  ,cad_g09
21:35:57 180  ,cad_g10
21:35:57 181  ,cad_g11
21:35:57 182  ,cad_g12
21:35:57 183  ,cad_g13
21:35:57 184  ,cad_g14
21:35:57 185  ,cad_g15
21:35:57 186  ,cad_g16
21:35:57 187  ,cad_g17
21:35:57 188  ,cad_g18
21:35:57 189  ,cad_g19
21:35:57 190  ,cad_g20
21:35:57 191  ,cad_g21
21:35:57 192  ,cad_g22
21:35:57 193  ,cad_g23
21:35:57 194  ,cad_g24
21:35:57 195  ,cad_g25
21:35:57 196  ,cad_g26
21:35:57 197  ,cad_g27
21:35:57 198  ,cad_g28
21:35:57 199  ,cad_g29
21:35:57 200  ,cad_g30
21:35:57 201  ,cad_g31
21:35:57 202  ,cad_g32
21:35:57 203  ,cad_g33
21:35:57 204  ,cad_g34
21:35:57 205  ,cad_g35
21:35:57 206  ,cad_g36
21:35:57 207  ,cad_g37
21:35:57 208  ,cad_g38
21:35:57 209  ,cad_g39
21:35:57 210  ,cad_g40
21:35:57 211  ,chf_g00
21:35:57 212  ,chf_g01
21:35:57 213  ,chf_g02
21:35:57 214  ,chf_g03
21:35:57 215  ,chf_g04
21:35:57 216  ,chf_g05
21:35:57 217  ,chf_g06
21:35:57 218  ,chf_g07
21:35:57 219  ,chf_g08
21:35:57 220  ,chf_g09
21:35:57 221  ,chf_g10
21:35:57 222  ,chf_g11
21:35:57 223  ,chf_g12
21:35:57 224  ,chf_g13
21:35:57 225  ,chf_g14
21:35:57 226  ,chf_g15
21:35:57 227  ,chf_g16
21:35:57 228  ,chf_g17
21:35:57 229  ,chf_g18
21:35:57 230  ,chf_g19
21:35:57 231  ,chf_g20
21:35:57 232  ,chf_g21
21:35:57 233  ,chf_g22
21:35:57 234  ,chf_g23
21:35:57 235  ,chf_g24
21:35:57 236  ,chf_g25
21:35:57 237  ,chf_g26
21:35:57 238  ,chf_g27
21:35:57 239  ,chf_g28
21:35:57 240  ,chf_g29
21:35:57 241  ,chf_g30
21:35:57 242  ,chf_g31
21:35:57 243  ,chf_g32
21:35:57 244  ,chf_g33
21:35:57 245  ,chf_g34
21:35:57 246  ,chf_g35
21:35:57 247  ,chf_g36
21:35:57 248  ,chf_g37
21:35:57 249  ,chf_g38
21:35:57 250  ,chf_g39
21:35:57 251  ,chf_g40
21:35:57 252  FROM chf_ms14 m
21:35:57 253  WHERE m.ydate = '&1'||' '||'&2'
21:35:57 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:10:00'

View created.

Elapsed: 00:00:00.13
21:35:57 SQL> 
21:35:57 SQL> -- rpt
21:35:57 SQL> -- We should see just 1 row:
21:35:57 SQL> 
21:35:57 SQL> SELECT COUNT(prdate) FROM sme
21:35:57   2  
21:35:57 SQL> -- Build the model:
21:35:57 SQL> CREATE OR REPLACE VIEW bme AS
21:35:57   2  SELECT
21:35:57   3  'chf'||m.ydate prdate
21:35:57   4  ,gattn
21:35:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:35:57   6  ,eur_g00
21:35:57   7  ,eur_g01
21:35:57   8  ,eur_g02
21:35:57   9  ,eur_g03
21:35:57  10  ,eur_g04
21:35:57  11  ,eur_g05
21:35:57  12  ,eur_g06
21:35:57  13  ,eur_g07
21:35:57  14  ,eur_g08
21:35:57  15  ,eur_g09
21:35:57  16  ,eur_g10
21:35:57  17  ,eur_g11
21:35:57  18  ,eur_g12
21:35:57  19  ,eur_g13
21:35:57  20  ,eur_g14
21:35:57  21  ,eur_g15
21:35:57  22  ,eur_g16
21:35:57  23  ,eur_g17
21:35:57  24  ,eur_g18
21:35:57  25  ,eur_g19
21:35:57  26  ,eur_g20
21:35:57  27  ,eur_g21
21:35:57  28  ,eur_g22
21:35:57  29  ,eur_g23
21:35:57  30  ,eur_g24
21:35:57  31  ,eur_g25
21:35:57  32  ,eur_g26
21:35:57  33  ,eur_g27
21:35:57  34  ,eur_g28
21:35:57  35  ,eur_g29
21:35:57  36  ,eur_g30
21:35:57  37  ,eur_g31
21:35:57  38  ,eur_g32
21:35:57  39  ,eur_g33
21:35:57  40  ,eur_g34
21:35:57  41  ,eur_g35
21:35:57  42  ,eur_g36
21:35:57  43  ,eur_g37
21:35:57  44  ,eur_g38
21:35:57  45  ,eur_g39
21:35:57  46  ,eur_g40
21:35:57  47  ,aud_g00
21:35:57  48  ,aud_g01
21:35:57  49  ,aud_g02
21:35:57  50  ,aud_g03
21:35:57  51  ,aud_g04
21:35:57  52  ,aud_g05
21:35:57  53  ,aud_g06
21:35:57  54  ,aud_g07
21:35:57  55  ,aud_g08
21:35:57  56  ,aud_g09
21:35:57  57  ,aud_g10
21:35:57  58  ,aud_g11
21:35:57  59  ,aud_g12
21:35:57  60  ,aud_g13
21:35:57  61  ,aud_g14
21:35:57  62  ,aud_g15
21:35:57  63  ,aud_g16
21:35:57  64  ,aud_g17
21:35:57  65  ,aud_g18
21:35:57  66  ,aud_g19
21:35:57  67  ,aud_g20
21:35:57  68  ,aud_g21
21:35:57  69  ,aud_g22
21:35:57  70  ,aud_g23
21:35:57  71  ,aud_g24
21:35:57  72  ,aud_g25
21:35:57  73  ,aud_g26
21:35:57  74  ,aud_g27
21:35:57  75  ,aud_g28
21:35:57  76  ,aud_g29
21:35:57  77  ,aud_g30
21:35:57  78  ,aud_g31
21:35:57  79  ,aud_g32
21:35:57  80  ,aud_g33
21:35:57  81  ,aud_g34
21:35:57  82  ,aud_g35
21:35:57  83  ,aud_g36
21:35:57  84  ,aud_g37
21:35:57  85  ,aud_g38
21:35:57  86  ,aud_g39
21:35:57  87  ,aud_g40
21:35:57  88  ,gbp_g00
21:35:57  89  ,gbp_g01
21:35:57  90  ,gbp_g02
21:35:57  91  ,gbp_g03
21:35:57  92  ,gbp_g04
21:35:57  93  ,gbp_g05
21:35:57  94  ,gbp_g06
21:35:57  95  ,gbp_g07
21:35:57  96  ,gbp_g08
21:35:57  97  ,gbp_g09
21:35:57  98  ,gbp_g10
21:35:57  99  ,gbp_g11
21:35:57 100  ,gbp_g12
21:35:57 101  ,gbp_g13
21:35:57 102  ,gbp_g14
21:35:57 103  ,gbp_g15
21:35:57 104  ,gbp_g16
21:35:57 105  ,gbp_g17
21:35:57 106  ,gbp_g18
21:35:57 107  ,gbp_g19
21:35:57 108  ,gbp_g20
21:35:57 109  ,gbp_g21
21:35:57 110  ,gbp_g22
21:35:57 111  ,gbp_g23
21:35:57 112  ,gbp_g24
21:35:57 113  ,gbp_g25
21:35:57 114  ,gbp_g26
21:35:57 115  ,gbp_g27
21:35:57 116  ,gbp_g28
21:35:57 117  ,gbp_g29
21:35:57 118  ,gbp_g30
21:35:57 119  ,gbp_g31
21:35:57 120  ,gbp_g32
21:35:57 121  ,gbp_g33
21:35:57 122  ,gbp_g34
21:35:57 123  ,gbp_g35
21:35:57 124  ,gbp_g36
21:35:57 125  ,gbp_g37
21:35:57 126  ,gbp_g38
21:35:57 127  ,gbp_g39
21:35:57 128  ,gbp_g40
21:35:57 129  ,jpy_g00
21:35:57 130  ,jpy_g01
21:35:57 131  ,jpy_g02
21:35:57 132  ,jpy_g03
21:35:57 133  ,jpy_g04
21:35:57 134  ,jpy_g05
21:35:57 135  ,jpy_g06
21:35:57 136  ,jpy_g07
21:35:57 137  ,jpy_g08
21:35:57 138  ,jpy_g09
21:35:57 139  ,jpy_g10
21:35:57 140  ,jpy_g11
21:35:57 141  ,jpy_g12
21:35:57 142  ,jpy_g13
21:35:57 143  ,jpy_g14
21:35:57 144  ,jpy_g15
21:35:57 145  ,jpy_g16
21:35:57 146  ,jpy_g17
21:35:57 147  ,jpy_g18
21:35:57 148  ,jpy_g19
21:35:57 149  ,jpy_g20
21:35:57 150  ,jpy_g21
21:35:57 151  ,jpy_g22
21:35:57 152  ,jpy_g23
21:35:57 153  ,jpy_g24
21:35:57 154  ,jpy_g25
21:35:57 155  ,jpy_g26
21:35:57 156  ,jpy_g27
21:35:57 157  ,jpy_g28
21:35:57 158  ,jpy_g29
21:35:57 159  ,jpy_g30
21:35:57 160  ,jpy_g31
21:35:57 161  ,jpy_g32
21:35:57 162  ,jpy_g33
21:35:57 163  ,jpy_g34
21:35:57 164  ,jpy_g35
21:35:57 165  ,jpy_g36
21:35:57 166  ,jpy_g37
21:35:57 167  ,jpy_g38
21:35:57 168  ,jpy_g39
21:35:57 169  ,jpy_g40
21:35:57 170  ,cad_g00
21:35:57 171  ,cad_g01
21:35:57 172  ,cad_g02
21:35:57 173  ,cad_g03
21:35:57 174  ,cad_g04
21:35:57 175  ,cad_g05
21:35:57 176  ,cad_g06
21:35:57 177  ,cad_g07
21:35:57 178  ,cad_g08
21:35:57 179  ,cad_g09
21:35:57 180  ,cad_g10
21:35:57 181  ,cad_g11
21:35:57 182  ,cad_g12
21:35:57 183  ,cad_g13
21:35:57 184  ,cad_g14
21:35:57 185  ,cad_g15
21:35:57 186  ,cad_g16
21:35:57 187  ,cad_g17
21:35:57 188  ,cad_g18
21:35:57 189  ,cad_g19
21:35:57 190  ,cad_g20
21:35:57 191  ,cad_g21
21:35:57 192  ,cad_g22
21:35:57 193  ,cad_g23
21:35:57 194  ,cad_g24
21:35:57 195  ,cad_g25
21:35:57 196  ,cad_g26
21:35:57 197  ,cad_g27
21:35:57 198  ,cad_g28
21:35:57 199  ,cad_g29
21:35:57 200  ,cad_g30
21:35:57 201  ,cad_g31
21:35:57 202  ,cad_g32
21:35:57 203  ,cad_g33
21:35:57 204  ,cad_g34
21:35:57 205  ,cad_g35
21:35:57 206  ,cad_g36
21:35:57 207  ,cad_g37
21:35:57 208  ,cad_g38
21:35:57 209  ,cad_g39
21:35:57 210  ,cad_g40
21:35:57 211  ,chf_g00
21:35:57 212  ,chf_g01
21:35:57 213  ,chf_g02
21:35:57 214  ,chf_g03
21:35:57 215  ,chf_g04
21:35:57 216  ,chf_g05
21:35:57 217  ,chf_g06
21:35:57 218  ,chf_g07
21:35:57 219  ,chf_g08
21:35:57 220  ,chf_g09
21:35:57 221  ,chf_g10
21:35:57 222  ,chf_g11
21:35:57 223  ,chf_g12
21:35:57 224  ,chf_g13
21:35:57 225  ,chf_g14
21:35:57 226  ,chf_g15
21:35:57 227  ,chf_g16
21:35:57 228  ,chf_g17
21:35:57 229  ,chf_g18
21:35:57 230  ,chf_g19
21:35:57 231  ,chf_g20
21:35:57 232  ,chf_g21
21:35:57 233  ,chf_g22
21:35:57 234  ,chf_g23
21:35:57 235  ,chf_g24
21:35:57 236  ,chf_g25
21:35:57 237  ,chf_g26
21:35:57 238  ,chf_g27
21:35:57 239  ,chf_g28
21:35:57 240  ,chf_g29
21:35:57 241  ,chf_g30
21:35:57 242  ,chf_g31
21:35:57 243  ,chf_g32
21:35:57 244  ,chf_g33
21:35:57 245  ,chf_g34
21:35:57 246  ,chf_g35
21:35:57 247  ,chf_g36
21:35:57 248  ,chf_g37
21:35:57 249  ,chf_g38
21:35:57 250  ,chf_g39
21:35:57 251  ,chf_g40
21:35:57 252  FROM chf_ms14 m
21:35:57 253  WHERE gattn IN('nup','up')
21:35:57 254  AND 1+m.ydate < '&1'||' '||'&2'
21:35:57 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:10:00'

View created.

Elapsed: 00:00:00.12
21:35:57 SQL> 
21:35:57 SQL> -- rpt
21:35:57 SQL> 
21:35:57 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:35:57   2  
21:35:57 SQL> SELECT MAX(prdate) FROM bme
21:35:57   2  
21:35:57 SQL> -- Now build model from bme and score sme
21:35:57 SQL> @score1gattn.sql
21:35:57 SQL> -- score1gattn.sql
21:35:57 SQL> 
21:35:57 SQL> -- Does the 1st SVM score
21:35:57 SQL> 
21:35:57 SQL> -- Fill up svmc_apply_prep
21:35:57 SQL> @score_gattn.sql
21:35:57 SQL> --
21:35:57 SQL> -- score_gattn.sql
21:35:57 SQL> --
21:35:57 SQL> 
21:35:57 SQL> -- usage: score_gattn.sql
21:35:57 SQL> 
21:35:57 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:35:57 SQL> 
21:35:57 SQL> DEFINE target	= 'gattn'
21:35:57 SQL> DEFINE model_name = 'forex14'
21:35:57 SQL> DEFINE bldtable	= 'bme'
21:35:57 SQL> DEFINE scoretable = 'sme'
21:35:57 SQL> DEFINE case_id	= 'prdate'
21:35:57 SQL> 
21:35:57 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:35:57 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:35:57 SQL> 
21:35:57 SQL> -- Builds an SVM model using pl/sql.
21:35:57 SQL> 
21:35:57 SQL> -----------------------------------------------------------------------
21:35:57 SQL> --			    BUILD THE MODEL
21:35:57 SQL> -----------------------------------------------------------------------
21:35:57 SQL> 
21:35:57 SQL> -- Cleanup old build data preparation objects for repeat runs
21:35:57 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:35:57 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:35:57 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:35:57 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:35:57 SQL> 
21:35:57 SQL> 
21:35:57 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:35:57 SQL> --
21:35:57 SQL> -- DROP	TABLE svmc_settings ;
21:35:57 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:35:57 SQL> -- DELETE svmc_settings;
21:35:57 SQL> 
21:35:57 SQL> -- The default classification algorithm is Naive Bayes. So override
21:35:57 SQL> -- this choice to SVM using a settings table.
21:35:57 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:35:57 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:35:57 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:35:57 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:35:57 SQL> -- models.
21:35:57 SQL> --
21:35:57 SQL> 
21:35:57 SQL> -- Do this once and then comment it out.
21:35:57 SQL> -- That makes script go faster.
21:35:57 SQL> -- BEGIN
21:35:57 SQL> -- -- Populate settings table
21:35:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:35:57 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:35:57 SQL> --
21:35:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:35:57 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:35:57 SQL> --
21:35:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:35:57 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:35:57 SQL> --   COMMIT;
21:35:57 SQL> -- END;
21:35:57 SQL> -- /
21:35:57 SQL> 
21:35:57 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:35:57 SQL> 
21:35:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:35:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:35:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:35:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:35:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:35:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:35:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:35:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:35:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:35:57 SQL> 
21:35:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:35:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:35:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:35:57 SQL> 
21:35:57 SQL> --------------------------------
21:35:57 SQL> -- PREPARE BUILD (TRAINING) DATA
21:35:57 SQL> --
21:35:57 SQL> 
21:35:57 SQL> -- 1. Missing Value treatment for all Predictors and
21:35:57 SQL> -- 2. Outlier Treatment and
21:35:57 SQL> -- 3. Normalization are performed below.
21:35:57 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:35:57 SQL> --    normalized here.
21:35:57 SQL> 
21:35:57 SQL> BEGIN
21:35:57   2  	-- Perform missing value treatment for all predictors
21:35:57   3  	-- create miss tables
21:35:57   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:35:57   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:35:57   6  
21:35:57   7  	-- populate miss tables
21:35:57   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:35:57   9  	  miss_table_name => 'svmc_miss_num',
21:35:57  10  	  data_table_name => '&bldtable',
21:35:57  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:35:57  12  
21:35:57  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:35:57  14  	  miss_table_name => 'svmc_miss_cat',
21:35:57  15  	  data_table_name => '&bldtable',
21:35:57  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:35:57  17  
21:35:57  18  	-- xform input data to replace missing values
21:35:57  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:35:57  20  	  miss_table_name => 'svmc_miss_num',
21:35:57  21  	  data_table_name => '&bldtable',
21:35:57  22  	  xform_view_name => 'xformed_build_miss_num');
21:35:57  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:35:57  24  	  miss_table_name => 'svmc_miss_cat',
21:35:57  25  	  data_table_name => '&bldtable',
21:35:57  26  	  xform_view_name => 'xformed_build_miss_cat');
21:35:57  27  
21:35:57  28  	-- Perform outlier treatment.
21:35:57  29  	-- create clip table
21:35:57  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:35:57  31  
21:35:57  32  	-- populate clip table
21:35:57  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:35:57  34  	  clip_table_name => 'svmc_clip',
21:35:57  35  	  data_table_name => '&bldtable',
21:35:57  36  	  tail_frac	  => 0.025,
21:35:57  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:35:57  38  
21:35:57  39  	-- xform input data to winsorized data
21:35:57  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:35:57  41  	  clip_table_name => 'svmc_clip',
21:35:57  42  	  data_table_name => '&bldtable',
21:35:57  43  	  xform_view_name => 'svmc_winsor');
21:35:57  44  
21:35:57  45  	-- create normalization table
21:35:57  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:35:57  47  
21:35:57  48  	-- populate normalization table based on winsorized data
21:35:57  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:35:57  50  	  norm_table_name => 'svmc_norm',
21:35:57  51  	  data_table_name => 'svmc_winsor',
21:35:57  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:35:57  53  
21:35:57  54  	-- normalize the original data
21:35:57  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:35:57  56  	  norm_table_name => 'svmc_norm',
21:35:57  57  	  data_table_name => '&bldtable',
21:35:57  58  	  xform_view_name => 'svmc_build_prep');
21:35:57  59  END;
21:35:57  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.04
21:36:15 SQL> 
21:36:15 SQL> ---------------------
21:36:15 SQL> -- CREATE A NEW MODEL
21:36:15 SQL> --
21:36:15 SQL> -- Cleanup old model with the same name for repeat runs
21:36:15 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:36:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:36:15   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.90
21:36:16 SQL> 
21:36:16 SQL> -- Build a new SVM Model
21:36:16 SQL> BEGIN
21:36:16   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:36:16   3  	  model_name	      => '&model_name',
21:36:16   4  	  mining_function     => dbms_data_mining.classification,
21:36:16   5  	  data_table_name     => 'svmc_build_prep',
21:36:16   6  	  case_id_column_name => '&case_id',
21:36:16   7  	  target_column_name  => '&target',
21:36:16   8  	  settings_table_name => 'svmc_settings');
21:36:16   9  END;
21:36:16  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:24.96
21:36:41 SQL> 
21:36:41 SQL> -----------------------------------------------------------------------
21:36:41 SQL> --			       APPLY/score THE MODEL
21:36:41 SQL> -----------------------------------------------------------------------
21:36:41 SQL> 
21:36:41 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:36:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:36:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:36:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
21:36:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:36:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:36:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:36:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:36:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:36:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:36:41 SQL> -----------------------
21:36:41 SQL> -- PREPARE SCORING DATA
21:36:41 SQL> --
21:36:41 SQL> -- If the data for model creation has been prepared, then the data
21:36:41 SQL> -- to be scored using the model must be prepared in the same manner
21:36:41 SQL> -- in order to obtain meaningful results.
21:36:41 SQL> --
21:36:41 SQL> -- 1. Missing Value treatment for all Predictors and
21:36:41 SQL> -- 2. Normalization
21:36:41 SQL> -- No outlier treatment will be performed during test and apply. The
21:36:41 SQL> -- normalization step is sufficient, since the normalization parameters
21:36:41 SQL> -- already capture the effects of outlier treatment done with build data.
21:36:41 SQL> --
21:36:41 SQL> BEGIN
21:36:41   2  	-- Xform Test data to replace missing values
21:36:41   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:36:41   4  	  miss_table_name => 'svmc_miss_num',
21:36:41   5  	  data_table_name => '&scoretable',
21:36:41   6  	  xform_view_name => 'xformed_apply_miss_num');
21:36:41   7  
21:36:41   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:36:41   9  	  miss_table_name => 'svmc_miss_cat',
21:36:41  10  	  data_table_name => '&scoretable',
21:36:41  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:36:41  12  
21:36:41  13  	-- Normalize the data to be scored
21:36:41  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:36:41  15  	  norm_table_name => 'svmc_norm',
21:36:41  16  	  data_table_name => '&scoretable',
21:36:41  17  	  xform_view_name => 'svmc_apply_prep');
21:36:41  18  END;
21:36:41  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.16
21:36:42 SQL> 
21:36:42 SQL> -- Use same model_name used in score_gattn.sql
21:36:42 SQL> DEFINE model_name = 'forex14'
21:36:42 SQL> 
21:36:42 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:36:42 SQL> 
21:36:42 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:36:42   2  SELECT
21:36:42   3  prdate
21:36:42   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:36:42   5  ,sysdate
21:36:42   6  ,SUBSTR(prdate,1,3)pair
21:36:42   7  ,SUBSTR(prdate,4,19)ydate
21:36:42   8  FROM svmc_apply_prep
21:36:42   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:36:43 SQL> @chf_score1day_gattn.sql	2010-12-17 10:05:00
21:36:43 SQL> --
21:36:43 SQL> -- chf_score1day_gattn.sql
21:36:43 SQL> --
21:36:43 SQL> 
21:36:43 SQL> CREATE OR REPLACE VIEW sme AS
21:36:43   2  SELECT
21:36:43   3  'chf'||m.ydate prdate
21:36:43   4  ,NULL gattn
21:36:43   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:36:43   6  ,eur_g00
21:36:43   7  ,eur_g01
21:36:43   8  ,eur_g02
21:36:43   9  ,eur_g03
21:36:43  10  ,eur_g04
21:36:43  11  ,eur_g05
21:36:43  12  ,eur_g06
21:36:43  13  ,eur_g07
21:36:43  14  ,eur_g08
21:36:43  15  ,eur_g09
21:36:43  16  ,eur_g10
21:36:43  17  ,eur_g11
21:36:43  18  ,eur_g12
21:36:43  19  ,eur_g13
21:36:43  20  ,eur_g14
21:36:43  21  ,eur_g15
21:36:43  22  ,eur_g16
21:36:43  23  ,eur_g17
21:36:43  24  ,eur_g18
21:36:43  25  ,eur_g19
21:36:43  26  ,eur_g20
21:36:43  27  ,eur_g21
21:36:43  28  ,eur_g22
21:36:43  29  ,eur_g23
21:36:43  30  ,eur_g24
21:36:43  31  ,eur_g25
21:36:43  32  ,eur_g26
21:36:43  33  ,eur_g27
21:36:43  34  ,eur_g28
21:36:43  35  ,eur_g29
21:36:43  36  ,eur_g30
21:36:43  37  ,eur_g31
21:36:43  38  ,eur_g32
21:36:43  39  ,eur_g33
21:36:43  40  ,eur_g34
21:36:43  41  ,eur_g35
21:36:43  42  ,eur_g36
21:36:43  43  ,eur_g37
21:36:43  44  ,eur_g38
21:36:43  45  ,eur_g39
21:36:43  46  ,eur_g40
21:36:43  47  ,aud_g00
21:36:43  48  ,aud_g01
21:36:43  49  ,aud_g02
21:36:43  50  ,aud_g03
21:36:43  51  ,aud_g04
21:36:43  52  ,aud_g05
21:36:43  53  ,aud_g06
21:36:43  54  ,aud_g07
21:36:43  55  ,aud_g08
21:36:43  56  ,aud_g09
21:36:43  57  ,aud_g10
21:36:43  58  ,aud_g11
21:36:43  59  ,aud_g12
21:36:43  60  ,aud_g13
21:36:43  61  ,aud_g14
21:36:43  62  ,aud_g15
21:36:43  63  ,aud_g16
21:36:43  64  ,aud_g17
21:36:43  65  ,aud_g18
21:36:43  66  ,aud_g19
21:36:43  67  ,aud_g20
21:36:43  68  ,aud_g21
21:36:43  69  ,aud_g22
21:36:43  70  ,aud_g23
21:36:43  71  ,aud_g24
21:36:43  72  ,aud_g25
21:36:43  73  ,aud_g26
21:36:43  74  ,aud_g27
21:36:43  75  ,aud_g28
21:36:43  76  ,aud_g29
21:36:43  77  ,aud_g30
21:36:43  78  ,aud_g31
21:36:43  79  ,aud_g32
21:36:43  80  ,aud_g33
21:36:43  81  ,aud_g34
21:36:43  82  ,aud_g35
21:36:43  83  ,aud_g36
21:36:43  84  ,aud_g37
21:36:43  85  ,aud_g38
21:36:43  86  ,aud_g39
21:36:43  87  ,aud_g40
21:36:43  88  ,gbp_g00
21:36:43  89  ,gbp_g01
21:36:43  90  ,gbp_g02
21:36:43  91  ,gbp_g03
21:36:43  92  ,gbp_g04
21:36:43  93  ,gbp_g05
21:36:43  94  ,gbp_g06
21:36:43  95  ,gbp_g07
21:36:43  96  ,gbp_g08
21:36:43  97  ,gbp_g09
21:36:43  98  ,gbp_g10
21:36:43  99  ,gbp_g11
21:36:43 100  ,gbp_g12
21:36:43 101  ,gbp_g13
21:36:43 102  ,gbp_g14
21:36:43 103  ,gbp_g15
21:36:43 104  ,gbp_g16
21:36:43 105  ,gbp_g17
21:36:43 106  ,gbp_g18
21:36:43 107  ,gbp_g19
21:36:43 108  ,gbp_g20
21:36:43 109  ,gbp_g21
21:36:43 110  ,gbp_g22
21:36:43 111  ,gbp_g23
21:36:43 112  ,gbp_g24
21:36:43 113  ,gbp_g25
21:36:43 114  ,gbp_g26
21:36:43 115  ,gbp_g27
21:36:43 116  ,gbp_g28
21:36:43 117  ,gbp_g29
21:36:43 118  ,gbp_g30
21:36:43 119  ,gbp_g31
21:36:43 120  ,gbp_g32
21:36:43 121  ,gbp_g33
21:36:43 122  ,gbp_g34
21:36:43 123  ,gbp_g35
21:36:43 124  ,gbp_g36
21:36:43 125  ,gbp_g37
21:36:43 126  ,gbp_g38
21:36:43 127  ,gbp_g39
21:36:43 128  ,gbp_g40
21:36:43 129  ,jpy_g00
21:36:43 130  ,jpy_g01
21:36:43 131  ,jpy_g02
21:36:43 132  ,jpy_g03
21:36:43 133  ,jpy_g04
21:36:43 134  ,jpy_g05
21:36:43 135  ,jpy_g06
21:36:43 136  ,jpy_g07
21:36:43 137  ,jpy_g08
21:36:43 138  ,jpy_g09
21:36:43 139  ,jpy_g10
21:36:43 140  ,jpy_g11
21:36:43 141  ,jpy_g12
21:36:43 142  ,jpy_g13
21:36:43 143  ,jpy_g14
21:36:43 144  ,jpy_g15
21:36:43 145  ,jpy_g16
21:36:43 146  ,jpy_g17
21:36:43 147  ,jpy_g18
21:36:43 148  ,jpy_g19
21:36:43 149  ,jpy_g20
21:36:43 150  ,jpy_g21
21:36:43 151  ,jpy_g22
21:36:43 152  ,jpy_g23
21:36:43 153  ,jpy_g24
21:36:43 154  ,jpy_g25
21:36:43 155  ,jpy_g26
21:36:43 156  ,jpy_g27
21:36:43 157  ,jpy_g28
21:36:43 158  ,jpy_g29
21:36:43 159  ,jpy_g30
21:36:43 160  ,jpy_g31
21:36:43 161  ,jpy_g32
21:36:43 162  ,jpy_g33
21:36:43 163  ,jpy_g34
21:36:43 164  ,jpy_g35
21:36:43 165  ,jpy_g36
21:36:43 166  ,jpy_g37
21:36:43 167  ,jpy_g38
21:36:43 168  ,jpy_g39
21:36:43 169  ,jpy_g40
21:36:43 170  ,cad_g00
21:36:43 171  ,cad_g01
21:36:43 172  ,cad_g02
21:36:43 173  ,cad_g03
21:36:43 174  ,cad_g04
21:36:43 175  ,cad_g05
21:36:43 176  ,cad_g06
21:36:43 177  ,cad_g07
21:36:43 178  ,cad_g08
21:36:43 179  ,cad_g09
21:36:43 180  ,cad_g10
21:36:43 181  ,cad_g11
21:36:43 182  ,cad_g12
21:36:43 183  ,cad_g13
21:36:43 184  ,cad_g14
21:36:43 185  ,cad_g15
21:36:43 186  ,cad_g16
21:36:43 187  ,cad_g17
21:36:43 188  ,cad_g18
21:36:43 189  ,cad_g19
21:36:43 190  ,cad_g20
21:36:43 191  ,cad_g21
21:36:43 192  ,cad_g22
21:36:43 193  ,cad_g23
21:36:43 194  ,cad_g24
21:36:43 195  ,cad_g25
21:36:43 196  ,cad_g26
21:36:43 197  ,cad_g27
21:36:43 198  ,cad_g28
21:36:43 199  ,cad_g29
21:36:43 200  ,cad_g30
21:36:43 201  ,cad_g31
21:36:43 202  ,cad_g32
21:36:43 203  ,cad_g33
21:36:43 204  ,cad_g34
21:36:43 205  ,cad_g35
21:36:43 206  ,cad_g36
21:36:43 207  ,cad_g37
21:36:43 208  ,cad_g38
21:36:43 209  ,cad_g39
21:36:43 210  ,cad_g40
21:36:43 211  ,chf_g00
21:36:43 212  ,chf_g01
21:36:43 213  ,chf_g02
21:36:43 214  ,chf_g03
21:36:43 215  ,chf_g04
21:36:43 216  ,chf_g05
21:36:43 217  ,chf_g06
21:36:43 218  ,chf_g07
21:36:43 219  ,chf_g08
21:36:43 220  ,chf_g09
21:36:43 221  ,chf_g10
21:36:43 222  ,chf_g11
21:36:43 223  ,chf_g12
21:36:43 224  ,chf_g13
21:36:43 225  ,chf_g14
21:36:43 226  ,chf_g15
21:36:43 227  ,chf_g16
21:36:43 228  ,chf_g17
21:36:43 229  ,chf_g18
21:36:43 230  ,chf_g19
21:36:43 231  ,chf_g20
21:36:43 232  ,chf_g21
21:36:43 233  ,chf_g22
21:36:43 234  ,chf_g23
21:36:43 235  ,chf_g24
21:36:43 236  ,chf_g25
21:36:43 237  ,chf_g26
21:36:43 238  ,chf_g27
21:36:43 239  ,chf_g28
21:36:43 240  ,chf_g29
21:36:43 241  ,chf_g30
21:36:43 242  ,chf_g31
21:36:43 243  ,chf_g32
21:36:43 244  ,chf_g33
21:36:43 245  ,chf_g34
21:36:43 246  ,chf_g35
21:36:43 247  ,chf_g36
21:36:43 248  ,chf_g37
21:36:43 249  ,chf_g38
21:36:43 250  ,chf_g39
21:36:43 251  ,chf_g40
21:36:43 252  FROM chf_ms14 m
21:36:43 253  WHERE m.ydate = '&1'||' '||'&2'
21:36:43 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:05:00'

View created.

Elapsed: 00:00:00.12
21:36:43 SQL> 
21:36:43 SQL> -- rpt
21:36:43 SQL> -- We should see just 1 row:
21:36:43 SQL> 
21:36:43 SQL> SELECT COUNT(prdate) FROM sme
21:36:43   2  
21:36:43 SQL> -- Build the model:
21:36:43 SQL> CREATE OR REPLACE VIEW bme AS
21:36:43   2  SELECT
21:36:43   3  'chf'||m.ydate prdate
21:36:43   4  ,gattn
21:36:43   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:36:43   6  ,eur_g00
21:36:43   7  ,eur_g01
21:36:43   8  ,eur_g02
21:36:43   9  ,eur_g03
21:36:43  10  ,eur_g04
21:36:43  11  ,eur_g05
21:36:43  12  ,eur_g06
21:36:43  13  ,eur_g07
21:36:43  14  ,eur_g08
21:36:43  15  ,eur_g09
21:36:43  16  ,eur_g10
21:36:43  17  ,eur_g11
21:36:43  18  ,eur_g12
21:36:43  19  ,eur_g13
21:36:43  20  ,eur_g14
21:36:43  21  ,eur_g15
21:36:43  22  ,eur_g16
21:36:43  23  ,eur_g17
21:36:43  24  ,eur_g18
21:36:43  25  ,eur_g19
21:36:43  26  ,eur_g20
21:36:43  27  ,eur_g21
21:36:43  28  ,eur_g22
21:36:43  29  ,eur_g23
21:36:43  30  ,eur_g24
21:36:43  31  ,eur_g25
21:36:43  32  ,eur_g26
21:36:43  33  ,eur_g27
21:36:43  34  ,eur_g28
21:36:43  35  ,eur_g29
21:36:43  36  ,eur_g30
21:36:43  37  ,eur_g31
21:36:43  38  ,eur_g32
21:36:43  39  ,eur_g33
21:36:43  40  ,eur_g34
21:36:43  41  ,eur_g35
21:36:43  42  ,eur_g36
21:36:43  43  ,eur_g37
21:36:43  44  ,eur_g38
21:36:43  45  ,eur_g39
21:36:43  46  ,eur_g40
21:36:43  47  ,aud_g00
21:36:43  48  ,aud_g01
21:36:43  49  ,aud_g02
21:36:43  50  ,aud_g03
21:36:43  51  ,aud_g04
21:36:43  52  ,aud_g05
21:36:43  53  ,aud_g06
21:36:43  54  ,aud_g07
21:36:43  55  ,aud_g08
21:36:43  56  ,aud_g09
21:36:43  57  ,aud_g10
21:36:43  58  ,aud_g11
21:36:43  59  ,aud_g12
21:36:43  60  ,aud_g13
21:36:43  61  ,aud_g14
21:36:43  62  ,aud_g15
21:36:43  63  ,aud_g16
21:36:43  64  ,aud_g17
21:36:43  65  ,aud_g18
21:36:43  66  ,aud_g19
21:36:43  67  ,aud_g20
21:36:43  68  ,aud_g21
21:36:43  69  ,aud_g22
21:36:43  70  ,aud_g23
21:36:43  71  ,aud_g24
21:36:43  72  ,aud_g25
21:36:43  73  ,aud_g26
21:36:43  74  ,aud_g27
21:36:43  75  ,aud_g28
21:36:43  76  ,aud_g29
21:36:43  77  ,aud_g30
21:36:43  78  ,aud_g31
21:36:43  79  ,aud_g32
21:36:43  80  ,aud_g33
21:36:43  81  ,aud_g34
21:36:43  82  ,aud_g35
21:36:43  83  ,aud_g36
21:36:43  84  ,aud_g37
21:36:43  85  ,aud_g38
21:36:43  86  ,aud_g39
21:36:43  87  ,aud_g40
21:36:43  88  ,gbp_g00
21:36:43  89  ,gbp_g01
21:36:43  90  ,gbp_g02
21:36:43  91  ,gbp_g03
21:36:43  92  ,gbp_g04
21:36:43  93  ,gbp_g05
21:36:43  94  ,gbp_g06
21:36:43  95  ,gbp_g07
21:36:43  96  ,gbp_g08
21:36:43  97  ,gbp_g09
21:36:43  98  ,gbp_g10
21:36:43  99  ,gbp_g11
21:36:43 100  ,gbp_g12
21:36:43 101  ,gbp_g13
21:36:43 102  ,gbp_g14
21:36:43 103  ,gbp_g15
21:36:43 104  ,gbp_g16
21:36:43 105  ,gbp_g17
21:36:43 106  ,gbp_g18
21:36:43 107  ,gbp_g19
21:36:43 108  ,gbp_g20
21:36:43 109  ,gbp_g21
21:36:43 110  ,gbp_g22
21:36:43 111  ,gbp_g23
21:36:43 112  ,gbp_g24
21:36:43 113  ,gbp_g25
21:36:43 114  ,gbp_g26
21:36:43 115  ,gbp_g27
21:36:43 116  ,gbp_g28
21:36:43 117  ,gbp_g29
21:36:43 118  ,gbp_g30
21:36:43 119  ,gbp_g31
21:36:43 120  ,gbp_g32
21:36:43 121  ,gbp_g33
21:36:43 122  ,gbp_g34
21:36:43 123  ,gbp_g35
21:36:43 124  ,gbp_g36
21:36:43 125  ,gbp_g37
21:36:43 126  ,gbp_g38
21:36:43 127  ,gbp_g39
21:36:43 128  ,gbp_g40
21:36:43 129  ,jpy_g00
21:36:43 130  ,jpy_g01
21:36:43 131  ,jpy_g02
21:36:43 132  ,jpy_g03
21:36:43 133  ,jpy_g04
21:36:43 134  ,jpy_g05
21:36:43 135  ,jpy_g06
21:36:43 136  ,jpy_g07
21:36:43 137  ,jpy_g08
21:36:43 138  ,jpy_g09
21:36:43 139  ,jpy_g10
21:36:43 140  ,jpy_g11
21:36:43 141  ,jpy_g12
21:36:43 142  ,jpy_g13
21:36:43 143  ,jpy_g14
21:36:43 144  ,jpy_g15
21:36:43 145  ,jpy_g16
21:36:43 146  ,jpy_g17
21:36:43 147  ,jpy_g18
21:36:43 148  ,jpy_g19
21:36:43 149  ,jpy_g20
21:36:43 150  ,jpy_g21
21:36:43 151  ,jpy_g22
21:36:43 152  ,jpy_g23
21:36:43 153  ,jpy_g24
21:36:43 154  ,jpy_g25
21:36:43 155  ,jpy_g26
21:36:43 156  ,jpy_g27
21:36:43 157  ,jpy_g28
21:36:43 158  ,jpy_g29
21:36:43 159  ,jpy_g30
21:36:43 160  ,jpy_g31
21:36:43 161  ,jpy_g32
21:36:43 162  ,jpy_g33
21:36:43 163  ,jpy_g34
21:36:43 164  ,jpy_g35
21:36:43 165  ,jpy_g36
21:36:43 166  ,jpy_g37
21:36:43 167  ,jpy_g38
21:36:43 168  ,jpy_g39
21:36:43 169  ,jpy_g40
21:36:43 170  ,cad_g00
21:36:43 171  ,cad_g01
21:36:43 172  ,cad_g02
21:36:43 173  ,cad_g03
21:36:43 174  ,cad_g04
21:36:43 175  ,cad_g05
21:36:43 176  ,cad_g06
21:36:43 177  ,cad_g07
21:36:43 178  ,cad_g08
21:36:43 179  ,cad_g09
21:36:43 180  ,cad_g10
21:36:43 181  ,cad_g11
21:36:43 182  ,cad_g12
21:36:43 183  ,cad_g13
21:36:43 184  ,cad_g14
21:36:43 185  ,cad_g15
21:36:43 186  ,cad_g16
21:36:43 187  ,cad_g17
21:36:43 188  ,cad_g18
21:36:43 189  ,cad_g19
21:36:43 190  ,cad_g20
21:36:43 191  ,cad_g21
21:36:43 192  ,cad_g22
21:36:43 193  ,cad_g23
21:36:43 194  ,cad_g24
21:36:43 195  ,cad_g25
21:36:43 196  ,cad_g26
21:36:43 197  ,cad_g27
21:36:43 198  ,cad_g28
21:36:43 199  ,cad_g29
21:36:43 200  ,cad_g30
21:36:43 201  ,cad_g31
21:36:43 202  ,cad_g32
21:36:43 203  ,cad_g33
21:36:43 204  ,cad_g34
21:36:43 205  ,cad_g35
21:36:43 206  ,cad_g36
21:36:43 207  ,cad_g37
21:36:43 208  ,cad_g38
21:36:43 209  ,cad_g39
21:36:43 210  ,cad_g40
21:36:43 211  ,chf_g00
21:36:43 212  ,chf_g01
21:36:43 213  ,chf_g02
21:36:43 214  ,chf_g03
21:36:43 215  ,chf_g04
21:36:43 216  ,chf_g05
21:36:43 217  ,chf_g06
21:36:43 218  ,chf_g07
21:36:43 219  ,chf_g08
21:36:43 220  ,chf_g09
21:36:43 221  ,chf_g10
21:36:43 222  ,chf_g11
21:36:43 223  ,chf_g12
21:36:43 224  ,chf_g13
21:36:43 225  ,chf_g14
21:36:43 226  ,chf_g15
21:36:43 227  ,chf_g16
21:36:43 228  ,chf_g17
21:36:43 229  ,chf_g18
21:36:43 230  ,chf_g19
21:36:43 231  ,chf_g20
21:36:43 232  ,chf_g21
21:36:43 233  ,chf_g22
21:36:43 234  ,chf_g23
21:36:43 235  ,chf_g24
21:36:43 236  ,chf_g25
21:36:43 237  ,chf_g26
21:36:43 238  ,chf_g27
21:36:43 239  ,chf_g28
21:36:43 240  ,chf_g29
21:36:43 241  ,chf_g30
21:36:43 242  ,chf_g31
21:36:43 243  ,chf_g32
21:36:43 244  ,chf_g33
21:36:43 245  ,chf_g34
21:36:43 246  ,chf_g35
21:36:43 247  ,chf_g36
21:36:43 248  ,chf_g37
21:36:43 249  ,chf_g38
21:36:43 250  ,chf_g39
21:36:43 251  ,chf_g40
21:36:43 252  FROM chf_ms14 m
21:36:43 253  WHERE gattn IN('nup','up')
21:36:43 254  AND 1+m.ydate < '&1'||' '||'&2'
21:36:43 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:05:00'

View created.

Elapsed: 00:00:00.12
21:36:43 SQL> 
21:36:43 SQL> -- rpt
21:36:43 SQL> 
21:36:43 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:36:43   2  
21:36:43 SQL> SELECT MAX(prdate) FROM bme
21:36:43   2  
21:36:43 SQL> -- Now build model from bme and score sme
21:36:43 SQL> @score1gattn.sql
21:36:43 SQL> -- score1gattn.sql
21:36:43 SQL> 
21:36:43 SQL> -- Does the 1st SVM score
21:36:43 SQL> 
21:36:43 SQL> -- Fill up svmc_apply_prep
21:36:43 SQL> @score_gattn.sql
21:36:43 SQL> --
21:36:43 SQL> -- score_gattn.sql
21:36:43 SQL> --
21:36:43 SQL> 
21:36:43 SQL> -- usage: score_gattn.sql
21:36:43 SQL> 
21:36:43 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:36:43 SQL> 
21:36:43 SQL> DEFINE target	= 'gattn'
21:36:43 SQL> DEFINE model_name = 'forex14'
21:36:43 SQL> DEFINE bldtable	= 'bme'
21:36:43 SQL> DEFINE scoretable = 'sme'
21:36:43 SQL> DEFINE case_id	= 'prdate'
21:36:43 SQL> 
21:36:43 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:36:43 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:36:43 SQL> 
21:36:43 SQL> -- Builds an SVM model using pl/sql.
21:36:43 SQL> 
21:36:43 SQL> -----------------------------------------------------------------------
21:36:43 SQL> --			    BUILD THE MODEL
21:36:43 SQL> -----------------------------------------------------------------------
21:36:43 SQL> 
21:36:43 SQL> -- Cleanup old build data preparation objects for repeat runs
21:36:43 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:36:43 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:36:43 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:36:43 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:36:43 SQL> 
21:36:43 SQL> 
21:36:43 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:36:43 SQL> --
21:36:43 SQL> -- DROP	TABLE svmc_settings ;
21:36:43 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:36:43 SQL> -- DELETE svmc_settings;
21:36:43 SQL> 
21:36:43 SQL> -- The default classification algorithm is Naive Bayes. So override
21:36:43 SQL> -- this choice to SVM using a settings table.
21:36:43 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:36:43 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:36:43 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:36:43 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:36:43 SQL> -- models.
21:36:43 SQL> --
21:36:43 SQL> 
21:36:43 SQL> -- Do this once and then comment it out.
21:36:43 SQL> -- That makes script go faster.
21:36:43 SQL> -- BEGIN
21:36:43 SQL> -- -- Populate settings table
21:36:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:36:43 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:36:43 SQL> --
21:36:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:36:43 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:36:43 SQL> --
21:36:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:36:43 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:36:43 SQL> --   COMMIT;
21:36:43 SQL> -- END;
21:36:43 SQL> -- /
21:36:43 SQL> 
21:36:43 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:36:43 SQL> 
21:36:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:36:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:36:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:36:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:36:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:36:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:36:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:36:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:36:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
21:36:43 SQL> 
21:36:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:36:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:36:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:36:43 SQL> 
21:36:43 SQL> --------------------------------
21:36:43 SQL> -- PREPARE BUILD (TRAINING) DATA
21:36:43 SQL> --
21:36:43 SQL> 
21:36:43 SQL> -- 1. Missing Value treatment for all Predictors and
21:36:43 SQL> -- 2. Outlier Treatment and
21:36:43 SQL> -- 3. Normalization are performed below.
21:36:43 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:36:43 SQL> --    normalized here.
21:36:43 SQL> 
21:36:43 SQL> BEGIN
21:36:43   2  	-- Perform missing value treatment for all predictors
21:36:43   3  	-- create miss tables
21:36:43   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:36:43   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:36:43   6  
21:36:43   7  	-- populate miss tables
21:36:43   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:36:43   9  	  miss_table_name => 'svmc_miss_num',
21:36:43  10  	  data_table_name => '&bldtable',
21:36:43  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:36:43  12  
21:36:43  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:36:43  14  	  miss_table_name => 'svmc_miss_cat',
21:36:43  15  	  data_table_name => '&bldtable',
21:36:43  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:36:43  17  
21:36:43  18  	-- xform input data to replace missing values
21:36:43  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:36:43  20  	  miss_table_name => 'svmc_miss_num',
21:36:43  21  	  data_table_name => '&bldtable',
21:36:43  22  	  xform_view_name => 'xformed_build_miss_num');
21:36:43  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:36:43  24  	  miss_table_name => 'svmc_miss_cat',
21:36:43  25  	  data_table_name => '&bldtable',
21:36:43  26  	  xform_view_name => 'xformed_build_miss_cat');
21:36:43  27  
21:36:43  28  	-- Perform outlier treatment.
21:36:43  29  	-- create clip table
21:36:43  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:36:43  31  
21:36:43  32  	-- populate clip table
21:36:43  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:36:43  34  	  clip_table_name => 'svmc_clip',
21:36:43  35  	  data_table_name => '&bldtable',
21:36:43  36  	  tail_frac	  => 0.025,
21:36:43  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:36:43  38  
21:36:43  39  	-- xform input data to winsorized data
21:36:43  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:36:43  41  	  clip_table_name => 'svmc_clip',
21:36:43  42  	  data_table_name => '&bldtable',
21:36:43  43  	  xform_view_name => 'svmc_winsor');
21:36:43  44  
21:36:43  45  	-- create normalization table
21:36:43  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:36:43  47  
21:36:43  48  	-- populate normalization table based on winsorized data
21:36:43  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:36:43  50  	  norm_table_name => 'svmc_norm',
21:36:43  51  	  data_table_name => 'svmc_winsor',
21:36:43  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:36:43  53  
21:36:43  54  	-- normalize the original data
21:36:43  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:36:43  56  	  norm_table_name => 'svmc_norm',
21:36:43  57  	  data_table_name => '&bldtable',
21:36:43  58  	  xform_view_name => 'svmc_build_prep');
21:36:43  59  END;
21:36:43  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.00
21:37:01 SQL> 
21:37:01 SQL> ---------------------
21:37:01 SQL> -- CREATE A NEW MODEL
21:37:01 SQL> --
21:37:01 SQL> -- Cleanup old model with the same name for repeat runs
21:37:01 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:37:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:37:01   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.29
21:37:02 SQL> 
21:37:02 SQL> -- Build a new SVM Model
21:37:02 SQL> BEGIN
21:37:02   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:37:02   3  	  model_name	      => '&model_name',
21:37:02   4  	  mining_function     => dbms_data_mining.classification,
21:37:02   5  	  data_table_name     => 'svmc_build_prep',
21:37:02   6  	  case_id_column_name => '&case_id',
21:37:02   7  	  target_column_name  => '&target',
21:37:02   8  	  settings_table_name => 'svmc_settings');
21:37:02   9  END;
21:37:02  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.55
21:37:29 SQL> 
21:37:29 SQL> -----------------------------------------------------------------------
21:37:29 SQL> --			       APPLY/score THE MODEL
21:37:29 SQL> -----------------------------------------------------------------------
21:37:29 SQL> 
21:37:29 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:37:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:37:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:37:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:37:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:37:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:37:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:37:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:37:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:37:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:37:29 SQL> -----------------------
21:37:29 SQL> -- PREPARE SCORING DATA
21:37:29 SQL> --
21:37:29 SQL> -- If the data for model creation has been prepared, then the data
21:37:29 SQL> -- to be scored using the model must be prepared in the same manner
21:37:29 SQL> -- in order to obtain meaningful results.
21:37:29 SQL> --
21:37:29 SQL> -- 1. Missing Value treatment for all Predictors and
21:37:29 SQL> -- 2. Normalization
21:37:29 SQL> -- No outlier treatment will be performed during test and apply. The
21:37:29 SQL> -- normalization step is sufficient, since the normalization parameters
21:37:29 SQL> -- already capture the effects of outlier treatment done with build data.
21:37:29 SQL> --
21:37:29 SQL> BEGIN
21:37:29   2  	-- Xform Test data to replace missing values
21:37:29   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:37:29   4  	  miss_table_name => 'svmc_miss_num',
21:37:29   5  	  data_table_name => '&scoretable',
21:37:29   6  	  xform_view_name => 'xformed_apply_miss_num');
21:37:29   7  
21:37:29   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:37:29   9  	  miss_table_name => 'svmc_miss_cat',
21:37:29  10  	  data_table_name => '&scoretable',
21:37:29  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:37:29  12  
21:37:29  13  	-- Normalize the data to be scored
21:37:29  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:37:29  15  	  norm_table_name => 'svmc_norm',
21:37:29  16  	  data_table_name => '&scoretable',
21:37:29  17  	  xform_view_name => 'svmc_apply_prep');
21:37:29  18  END;
21:37:29  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.24
21:37:30 SQL> 
21:37:30 SQL> -- Use same model_name used in score_gattn.sql
21:37:30 SQL> DEFINE model_name = 'forex14'
21:37:30 SQL> 
21:37:30 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:37:30 SQL> 
21:37:30 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:37:30   2  SELECT
21:37:30   3  prdate
21:37:30   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:37:30   5  ,sysdate
21:37:30   6  ,SUBSTR(prdate,1,3)pair
21:37:30   7  ,SUBSTR(prdate,4,19)ydate
21:37:30   8  FROM svmc_apply_prep
21:37:30   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:37:31 SQL> @chf_score1day_gattn.sql	2010-12-17 09:55:00
21:37:31 SQL> --
21:37:31 SQL> -- chf_score1day_gattn.sql
21:37:31 SQL> --
21:37:31 SQL> 
21:37:31 SQL> CREATE OR REPLACE VIEW sme AS
21:37:31   2  SELECT
21:37:31   3  'chf'||m.ydate prdate
21:37:31   4  ,NULL gattn
21:37:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:37:31   6  ,eur_g00
21:37:31   7  ,eur_g01
21:37:31   8  ,eur_g02
21:37:31   9  ,eur_g03
21:37:31  10  ,eur_g04
21:37:31  11  ,eur_g05
21:37:31  12  ,eur_g06
21:37:31  13  ,eur_g07
21:37:31  14  ,eur_g08
21:37:31  15  ,eur_g09
21:37:31  16  ,eur_g10
21:37:31  17  ,eur_g11
21:37:31  18  ,eur_g12
21:37:31  19  ,eur_g13
21:37:31  20  ,eur_g14
21:37:31  21  ,eur_g15
21:37:31  22  ,eur_g16
21:37:31  23  ,eur_g17
21:37:31  24  ,eur_g18
21:37:31  25  ,eur_g19
21:37:31  26  ,eur_g20
21:37:31  27  ,eur_g21
21:37:31  28  ,eur_g22
21:37:31  29  ,eur_g23
21:37:31  30  ,eur_g24
21:37:31  31  ,eur_g25
21:37:31  32  ,eur_g26
21:37:31  33  ,eur_g27
21:37:31  34  ,eur_g28
21:37:31  35  ,eur_g29
21:37:31  36  ,eur_g30
21:37:31  37  ,eur_g31
21:37:31  38  ,eur_g32
21:37:31  39  ,eur_g33
21:37:31  40  ,eur_g34
21:37:31  41  ,eur_g35
21:37:31  42  ,eur_g36
21:37:31  43  ,eur_g37
21:37:31  44  ,eur_g38
21:37:31  45  ,eur_g39
21:37:31  46  ,eur_g40
21:37:31  47  ,aud_g00
21:37:31  48  ,aud_g01
21:37:31  49  ,aud_g02
21:37:31  50  ,aud_g03
21:37:31  51  ,aud_g04
21:37:31  52  ,aud_g05
21:37:31  53  ,aud_g06
21:37:31  54  ,aud_g07
21:37:31  55  ,aud_g08
21:37:31  56  ,aud_g09
21:37:31  57  ,aud_g10
21:37:31  58  ,aud_g11
21:37:31  59  ,aud_g12
21:37:31  60  ,aud_g13
21:37:31  61  ,aud_g14
21:37:31  62  ,aud_g15
21:37:31  63  ,aud_g16
21:37:31  64  ,aud_g17
21:37:31  65  ,aud_g18
21:37:31  66  ,aud_g19
21:37:31  67  ,aud_g20
21:37:31  68  ,aud_g21
21:37:31  69  ,aud_g22
21:37:31  70  ,aud_g23
21:37:31  71  ,aud_g24
21:37:31  72  ,aud_g25
21:37:31  73  ,aud_g26
21:37:31  74  ,aud_g27
21:37:31  75  ,aud_g28
21:37:31  76  ,aud_g29
21:37:31  77  ,aud_g30
21:37:31  78  ,aud_g31
21:37:31  79  ,aud_g32
21:37:31  80  ,aud_g33
21:37:31  81  ,aud_g34
21:37:31  82  ,aud_g35
21:37:31  83  ,aud_g36
21:37:31  84  ,aud_g37
21:37:31  85  ,aud_g38
21:37:31  86  ,aud_g39
21:37:31  87  ,aud_g40
21:37:31  88  ,gbp_g00
21:37:31  89  ,gbp_g01
21:37:31  90  ,gbp_g02
21:37:31  91  ,gbp_g03
21:37:31  92  ,gbp_g04
21:37:31  93  ,gbp_g05
21:37:31  94  ,gbp_g06
21:37:31  95  ,gbp_g07
21:37:31  96  ,gbp_g08
21:37:31  97  ,gbp_g09
21:37:31  98  ,gbp_g10
21:37:31  99  ,gbp_g11
21:37:31 100  ,gbp_g12
21:37:31 101  ,gbp_g13
21:37:31 102  ,gbp_g14
21:37:31 103  ,gbp_g15
21:37:31 104  ,gbp_g16
21:37:31 105  ,gbp_g17
21:37:31 106  ,gbp_g18
21:37:31 107  ,gbp_g19
21:37:31 108  ,gbp_g20
21:37:31 109  ,gbp_g21
21:37:31 110  ,gbp_g22
21:37:31 111  ,gbp_g23
21:37:31 112  ,gbp_g24
21:37:31 113  ,gbp_g25
21:37:31 114  ,gbp_g26
21:37:31 115  ,gbp_g27
21:37:31 116  ,gbp_g28
21:37:31 117  ,gbp_g29
21:37:31 118  ,gbp_g30
21:37:31 119  ,gbp_g31
21:37:31 120  ,gbp_g32
21:37:31 121  ,gbp_g33
21:37:31 122  ,gbp_g34
21:37:31 123  ,gbp_g35
21:37:31 124  ,gbp_g36
21:37:31 125  ,gbp_g37
21:37:31 126  ,gbp_g38
21:37:31 127  ,gbp_g39
21:37:31 128  ,gbp_g40
21:37:31 129  ,jpy_g00
21:37:31 130  ,jpy_g01
21:37:31 131  ,jpy_g02
21:37:31 132  ,jpy_g03
21:37:31 133  ,jpy_g04
21:37:31 134  ,jpy_g05
21:37:31 135  ,jpy_g06
21:37:31 136  ,jpy_g07
21:37:31 137  ,jpy_g08
21:37:31 138  ,jpy_g09
21:37:31 139  ,jpy_g10
21:37:31 140  ,jpy_g11
21:37:31 141  ,jpy_g12
21:37:31 142  ,jpy_g13
21:37:31 143  ,jpy_g14
21:37:31 144  ,jpy_g15
21:37:31 145  ,jpy_g16
21:37:31 146  ,jpy_g17
21:37:31 147  ,jpy_g18
21:37:31 148  ,jpy_g19
21:37:31 149  ,jpy_g20
21:37:31 150  ,jpy_g21
21:37:31 151  ,jpy_g22
21:37:31 152  ,jpy_g23
21:37:31 153  ,jpy_g24
21:37:31 154  ,jpy_g25
21:37:31 155  ,jpy_g26
21:37:31 156  ,jpy_g27
21:37:31 157  ,jpy_g28
21:37:31 158  ,jpy_g29
21:37:31 159  ,jpy_g30
21:37:31 160  ,jpy_g31
21:37:31 161  ,jpy_g32
21:37:31 162  ,jpy_g33
21:37:31 163  ,jpy_g34
21:37:31 164  ,jpy_g35
21:37:31 165  ,jpy_g36
21:37:31 166  ,jpy_g37
21:37:31 167  ,jpy_g38
21:37:31 168  ,jpy_g39
21:37:31 169  ,jpy_g40
21:37:31 170  ,cad_g00
21:37:31 171  ,cad_g01
21:37:31 172  ,cad_g02
21:37:31 173  ,cad_g03
21:37:31 174  ,cad_g04
21:37:31 175  ,cad_g05
21:37:31 176  ,cad_g06
21:37:31 177  ,cad_g07
21:37:31 178  ,cad_g08
21:37:31 179  ,cad_g09
21:37:31 180  ,cad_g10
21:37:31 181  ,cad_g11
21:37:31 182  ,cad_g12
21:37:31 183  ,cad_g13
21:37:31 184  ,cad_g14
21:37:31 185  ,cad_g15
21:37:31 186  ,cad_g16
21:37:31 187  ,cad_g17
21:37:31 188  ,cad_g18
21:37:31 189  ,cad_g19
21:37:31 190  ,cad_g20
21:37:31 191  ,cad_g21
21:37:31 192  ,cad_g22
21:37:31 193  ,cad_g23
21:37:31 194  ,cad_g24
21:37:31 195  ,cad_g25
21:37:31 196  ,cad_g26
21:37:31 197  ,cad_g27
21:37:31 198  ,cad_g28
21:37:31 199  ,cad_g29
21:37:31 200  ,cad_g30
21:37:31 201  ,cad_g31
21:37:31 202  ,cad_g32
21:37:31 203  ,cad_g33
21:37:31 204  ,cad_g34
21:37:31 205  ,cad_g35
21:37:31 206  ,cad_g36
21:37:31 207  ,cad_g37
21:37:31 208  ,cad_g38
21:37:31 209  ,cad_g39
21:37:31 210  ,cad_g40
21:37:31 211  ,chf_g00
21:37:31 212  ,chf_g01
21:37:31 213  ,chf_g02
21:37:31 214  ,chf_g03
21:37:31 215  ,chf_g04
21:37:31 216  ,chf_g05
21:37:31 217  ,chf_g06
21:37:31 218  ,chf_g07
21:37:31 219  ,chf_g08
21:37:31 220  ,chf_g09
21:37:31 221  ,chf_g10
21:37:31 222  ,chf_g11
21:37:31 223  ,chf_g12
21:37:31 224  ,chf_g13
21:37:31 225  ,chf_g14
21:37:31 226  ,chf_g15
21:37:31 227  ,chf_g16
21:37:31 228  ,chf_g17
21:37:31 229  ,chf_g18
21:37:31 230  ,chf_g19
21:37:31 231  ,chf_g20
21:37:31 232  ,chf_g21
21:37:31 233  ,chf_g22
21:37:31 234  ,chf_g23
21:37:31 235  ,chf_g24
21:37:31 236  ,chf_g25
21:37:31 237  ,chf_g26
21:37:31 238  ,chf_g27
21:37:31 239  ,chf_g28
21:37:31 240  ,chf_g29
21:37:31 241  ,chf_g30
21:37:31 242  ,chf_g31
21:37:31 243  ,chf_g32
21:37:31 244  ,chf_g33
21:37:31 245  ,chf_g34
21:37:31 246  ,chf_g35
21:37:31 247  ,chf_g36
21:37:31 248  ,chf_g37
21:37:31 249  ,chf_g38
21:37:31 250  ,chf_g39
21:37:31 251  ,chf_g40
21:37:31 252  FROM chf_ms14 m
21:37:31 253  WHERE m.ydate = '&1'||' '||'&2'
21:37:31 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'09:55:00'

View created.

Elapsed: 00:00:00.14
21:37:31 SQL> 
21:37:31 SQL> -- rpt
21:37:31 SQL> -- We should see just 1 row:
21:37:31 SQL> 
21:37:31 SQL> SELECT COUNT(prdate) FROM sme
21:37:31   2  
21:37:31 SQL> -- Build the model:
21:37:31 SQL> CREATE OR REPLACE VIEW bme AS
21:37:31   2  SELECT
21:37:31   3  'chf'||m.ydate prdate
21:37:31   4  ,gattn
21:37:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:37:31   6  ,eur_g00
21:37:31   7  ,eur_g01
21:37:31   8  ,eur_g02
21:37:31   9  ,eur_g03
21:37:31  10  ,eur_g04
21:37:31  11  ,eur_g05
21:37:31  12  ,eur_g06
21:37:31  13  ,eur_g07
21:37:31  14  ,eur_g08
21:37:31  15  ,eur_g09
21:37:31  16  ,eur_g10
21:37:31  17  ,eur_g11
21:37:31  18  ,eur_g12
21:37:31  19  ,eur_g13
21:37:31  20  ,eur_g14
21:37:31  21  ,eur_g15
21:37:31  22  ,eur_g16
21:37:31  23  ,eur_g17
21:37:31  24  ,eur_g18
21:37:31  25  ,eur_g19
21:37:31  26  ,eur_g20
21:37:31  27  ,eur_g21
21:37:31  28  ,eur_g22
21:37:31  29  ,eur_g23
21:37:31  30  ,eur_g24
21:37:31  31  ,eur_g25
21:37:31  32  ,eur_g26
21:37:31  33  ,eur_g27
21:37:31  34  ,eur_g28
21:37:31  35  ,eur_g29
21:37:31  36  ,eur_g30
21:37:31  37  ,eur_g31
21:37:31  38  ,eur_g32
21:37:31  39  ,eur_g33
21:37:31  40  ,eur_g34
21:37:31  41  ,eur_g35
21:37:31  42  ,eur_g36
21:37:31  43  ,eur_g37
21:37:31  44  ,eur_g38
21:37:31  45  ,eur_g39
21:37:31  46  ,eur_g40
21:37:31  47  ,aud_g00
21:37:31  48  ,aud_g01
21:37:31  49  ,aud_g02
21:37:31  50  ,aud_g03
21:37:31  51  ,aud_g04
21:37:31  52  ,aud_g05
21:37:31  53  ,aud_g06
21:37:31  54  ,aud_g07
21:37:31  55  ,aud_g08
21:37:31  56  ,aud_g09
21:37:31  57  ,aud_g10
21:37:31  58  ,aud_g11
21:37:31  59  ,aud_g12
21:37:31  60  ,aud_g13
21:37:31  61  ,aud_g14
21:37:31  62  ,aud_g15
21:37:31  63  ,aud_g16
21:37:31  64  ,aud_g17
21:37:31  65  ,aud_g18
21:37:31  66  ,aud_g19
21:37:31  67  ,aud_g20
21:37:31  68  ,aud_g21
21:37:31  69  ,aud_g22
21:37:31  70  ,aud_g23
21:37:31  71  ,aud_g24
21:37:31  72  ,aud_g25
21:37:31  73  ,aud_g26
21:37:31  74  ,aud_g27
21:37:31  75  ,aud_g28
21:37:31  76  ,aud_g29
21:37:31  77  ,aud_g30
21:37:31  78  ,aud_g31
21:37:31  79  ,aud_g32
21:37:31  80  ,aud_g33
21:37:31  81  ,aud_g34
21:37:31  82  ,aud_g35
21:37:31  83  ,aud_g36
21:37:31  84  ,aud_g37
21:37:31  85  ,aud_g38
21:37:31  86  ,aud_g39
21:37:31  87  ,aud_g40
21:37:31  88  ,gbp_g00
21:37:31  89  ,gbp_g01
21:37:31  90  ,gbp_g02
21:37:31  91  ,gbp_g03
21:37:31  92  ,gbp_g04
21:37:31  93  ,gbp_g05
21:37:31  94  ,gbp_g06
21:37:31  95  ,gbp_g07
21:37:31  96  ,gbp_g08
21:37:31  97  ,gbp_g09
21:37:31  98  ,gbp_g10
21:37:31  99  ,gbp_g11
21:37:31 100  ,gbp_g12
21:37:31 101  ,gbp_g13
21:37:31 102  ,gbp_g14
21:37:31 103  ,gbp_g15
21:37:31 104  ,gbp_g16
21:37:31 105  ,gbp_g17
21:37:31 106  ,gbp_g18
21:37:31 107  ,gbp_g19
21:37:31 108  ,gbp_g20
21:37:31 109  ,gbp_g21
21:37:31 110  ,gbp_g22
21:37:31 111  ,gbp_g23
21:37:31 112  ,gbp_g24
21:37:31 113  ,gbp_g25
21:37:31 114  ,gbp_g26
21:37:31 115  ,gbp_g27
21:37:31 116  ,gbp_g28
21:37:31 117  ,gbp_g29
21:37:31 118  ,gbp_g30
21:37:31 119  ,gbp_g31
21:37:31 120  ,gbp_g32
21:37:31 121  ,gbp_g33
21:37:31 122  ,gbp_g34
21:37:31 123  ,gbp_g35
21:37:31 124  ,gbp_g36
21:37:31 125  ,gbp_g37
21:37:31 126  ,gbp_g38
21:37:31 127  ,gbp_g39
21:37:31 128  ,gbp_g40
21:37:31 129  ,jpy_g00
21:37:31 130  ,jpy_g01
21:37:31 131  ,jpy_g02
21:37:31 132  ,jpy_g03
21:37:31 133  ,jpy_g04
21:37:31 134  ,jpy_g05
21:37:31 135  ,jpy_g06
21:37:31 136  ,jpy_g07
21:37:31 137  ,jpy_g08
21:37:31 138  ,jpy_g09
21:37:31 139  ,jpy_g10
21:37:31 140  ,jpy_g11
21:37:31 141  ,jpy_g12
21:37:31 142  ,jpy_g13
21:37:31 143  ,jpy_g14
21:37:31 144  ,jpy_g15
21:37:31 145  ,jpy_g16
21:37:31 146  ,jpy_g17
21:37:31 147  ,jpy_g18
21:37:31 148  ,jpy_g19
21:37:31 149  ,jpy_g20
21:37:31 150  ,jpy_g21
21:37:31 151  ,jpy_g22
21:37:31 152  ,jpy_g23
21:37:31 153  ,jpy_g24
21:37:31 154  ,jpy_g25
21:37:31 155  ,jpy_g26
21:37:31 156  ,jpy_g27
21:37:31 157  ,jpy_g28
21:37:31 158  ,jpy_g29
21:37:31 159  ,jpy_g30
21:37:31 160  ,jpy_g31
21:37:31 161  ,jpy_g32
21:37:31 162  ,jpy_g33
21:37:31 163  ,jpy_g34
21:37:31 164  ,jpy_g35
21:37:31 165  ,jpy_g36
21:37:31 166  ,jpy_g37
21:37:31 167  ,jpy_g38
21:37:31 168  ,jpy_g39
21:37:31 169  ,jpy_g40
21:37:31 170  ,cad_g00
21:37:31 171  ,cad_g01
21:37:31 172  ,cad_g02
21:37:31 173  ,cad_g03
21:37:31 174  ,cad_g04
21:37:31 175  ,cad_g05
21:37:31 176  ,cad_g06
21:37:31 177  ,cad_g07
21:37:31 178  ,cad_g08
21:37:31 179  ,cad_g09
21:37:31 180  ,cad_g10
21:37:31 181  ,cad_g11
21:37:31 182  ,cad_g12
21:37:31 183  ,cad_g13
21:37:31 184  ,cad_g14
21:37:31 185  ,cad_g15
21:37:31 186  ,cad_g16
21:37:31 187  ,cad_g17
21:37:31 188  ,cad_g18
21:37:31 189  ,cad_g19
21:37:31 190  ,cad_g20
21:37:31 191  ,cad_g21
21:37:31 192  ,cad_g22
21:37:31 193  ,cad_g23
21:37:31 194  ,cad_g24
21:37:31 195  ,cad_g25
21:37:31 196  ,cad_g26
21:37:31 197  ,cad_g27
21:37:31 198  ,cad_g28
21:37:31 199  ,cad_g29
21:37:31 200  ,cad_g30
21:37:31 201  ,cad_g31
21:37:31 202  ,cad_g32
21:37:31 203  ,cad_g33
21:37:31 204  ,cad_g34
21:37:31 205  ,cad_g35
21:37:31 206  ,cad_g36
21:37:31 207  ,cad_g37
21:37:31 208  ,cad_g38
21:37:31 209  ,cad_g39
21:37:31 210  ,cad_g40
21:37:31 211  ,chf_g00
21:37:31 212  ,chf_g01
21:37:31 213  ,chf_g02
21:37:31 214  ,chf_g03
21:37:31 215  ,chf_g04
21:37:31 216  ,chf_g05
21:37:31 217  ,chf_g06
21:37:31 218  ,chf_g07
21:37:31 219  ,chf_g08
21:37:31 220  ,chf_g09
21:37:31 221  ,chf_g10
21:37:31 222  ,chf_g11
21:37:31 223  ,chf_g12
21:37:31 224  ,chf_g13
21:37:31 225  ,chf_g14
21:37:31 226  ,chf_g15
21:37:31 227  ,chf_g16
21:37:31 228  ,chf_g17
21:37:31 229  ,chf_g18
21:37:31 230  ,chf_g19
21:37:31 231  ,chf_g20
21:37:31 232  ,chf_g21
21:37:31 233  ,chf_g22
21:37:31 234  ,chf_g23
21:37:31 235  ,chf_g24
21:37:31 236  ,chf_g25
21:37:31 237  ,chf_g26
21:37:31 238  ,chf_g27
21:37:31 239  ,chf_g28
21:37:31 240  ,chf_g29
21:37:31 241  ,chf_g30
21:37:31 242  ,chf_g31
21:37:31 243  ,chf_g32
21:37:31 244  ,chf_g33
21:37:31 245  ,chf_g34
21:37:31 246  ,chf_g35
21:37:31 247  ,chf_g36
21:37:31 248  ,chf_g37
21:37:31 249  ,chf_g38
21:37:31 250  ,chf_g39
21:37:31 251  ,chf_g40
21:37:31 252  FROM chf_ms14 m
21:37:31 253  WHERE gattn IN('nup','up')
21:37:31 254  AND 1+m.ydate < '&1'||' '||'&2'
21:37:31 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'09:55:00'

View created.

Elapsed: 00:00:00.11
21:37:31 SQL> 
21:37:31 SQL> -- rpt
21:37:31 SQL> 
21:37:31 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:37:31   2  
21:37:31 SQL> SELECT MAX(prdate) FROM bme
21:37:31   2  
21:37:31 SQL> -- Now build model from bme and score sme
21:37:31 SQL> @score1gattn.sql
21:37:31 SQL> -- score1gattn.sql
21:37:31 SQL> 
21:37:31 SQL> -- Does the 1st SVM score
21:37:31 SQL> 
21:37:31 SQL> -- Fill up svmc_apply_prep
21:37:31 SQL> @score_gattn.sql
21:37:31 SQL> --
21:37:31 SQL> -- score_gattn.sql
21:37:31 SQL> --
21:37:31 SQL> 
21:37:31 SQL> -- usage: score_gattn.sql
21:37:31 SQL> 
21:37:31 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:37:31 SQL> 
21:37:31 SQL> DEFINE target	= 'gattn'
21:37:31 SQL> DEFINE model_name = 'forex14'
21:37:31 SQL> DEFINE bldtable	= 'bme'
21:37:31 SQL> DEFINE scoretable = 'sme'
21:37:31 SQL> DEFINE case_id	= 'prdate'
21:37:31 SQL> 
21:37:31 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:37:31 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:37:31 SQL> 
21:37:31 SQL> -- Builds an SVM model using pl/sql.
21:37:31 SQL> 
21:37:31 SQL> -----------------------------------------------------------------------
21:37:31 SQL> --			    BUILD THE MODEL
21:37:31 SQL> -----------------------------------------------------------------------
21:37:31 SQL> 
21:37:31 SQL> -- Cleanup old build data preparation objects for repeat runs
21:37:31 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:37:31 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:37:31 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:37:31 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:37:31 SQL> 
21:37:31 SQL> 
21:37:31 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:37:31 SQL> --
21:37:31 SQL> -- DROP	TABLE svmc_settings ;
21:37:31 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:37:31 SQL> -- DELETE svmc_settings;
21:37:31 SQL> 
21:37:31 SQL> -- The default classification algorithm is Naive Bayes. So override
21:37:31 SQL> -- this choice to SVM using a settings table.
21:37:31 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:37:31 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:37:31 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:37:31 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:37:31 SQL> -- models.
21:37:31 SQL> --
21:37:31 SQL> 
21:37:31 SQL> -- Do this once and then comment it out.
21:37:31 SQL> -- That makes script go faster.
21:37:31 SQL> -- BEGIN
21:37:31 SQL> -- -- Populate settings table
21:37:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:37:31 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:37:31 SQL> --
21:37:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:37:31 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:37:31 SQL> --
21:37:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:37:31 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:37:31 SQL> --   COMMIT;
21:37:31 SQL> -- END;
21:37:31 SQL> -- /
21:37:31 SQL> 
21:37:31 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:37:31 SQL> 
21:37:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:37:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:37:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:37:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:37:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:37:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:37:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:37:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:37:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:37:31 SQL> 
21:37:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:37:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:37:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:37:31 SQL> 
21:37:31 SQL> --------------------------------
21:37:31 SQL> -- PREPARE BUILD (TRAINING) DATA
21:37:31 SQL> --
21:37:31 SQL> 
21:37:31 SQL> -- 1. Missing Value treatment for all Predictors and
21:37:31 SQL> -- 2. Outlier Treatment and
21:37:31 SQL> -- 3. Normalization are performed below.
21:37:31 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:37:31 SQL> --    normalized here.
21:37:31 SQL> 
21:37:31 SQL> BEGIN
21:37:31   2  	-- Perform missing value treatment for all predictors
21:37:31   3  	-- create miss tables
21:37:31   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:37:31   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:37:31   6  
21:37:31   7  	-- populate miss tables
21:37:31   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:37:31   9  	  miss_table_name => 'svmc_miss_num',
21:37:31  10  	  data_table_name => '&bldtable',
21:37:31  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:37:31  12  
21:37:31  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:37:31  14  	  miss_table_name => 'svmc_miss_cat',
21:37:31  15  	  data_table_name => '&bldtable',
21:37:31  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:37:31  17  
21:37:31  18  	-- xform input data to replace missing values
21:37:31  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:37:31  20  	  miss_table_name => 'svmc_miss_num',
21:37:31  21  	  data_table_name => '&bldtable',
21:37:31  22  	  xform_view_name => 'xformed_build_miss_num');
21:37:31  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:37:31  24  	  miss_table_name => 'svmc_miss_cat',
21:37:31  25  	  data_table_name => '&bldtable',
21:37:31  26  	  xform_view_name => 'xformed_build_miss_cat');
21:37:31  27  
21:37:31  28  	-- Perform outlier treatment.
21:37:31  29  	-- create clip table
21:37:31  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:37:31  31  
21:37:31  32  	-- populate clip table
21:37:31  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:37:31  34  	  clip_table_name => 'svmc_clip',
21:37:31  35  	  data_table_name => '&bldtable',
21:37:31  36  	  tail_frac	  => 0.025,
21:37:31  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:37:31  38  
21:37:31  39  	-- xform input data to winsorized data
21:37:31  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:37:31  41  	  clip_table_name => 'svmc_clip',
21:37:31  42  	  data_table_name => '&bldtable',
21:37:31  43  	  xform_view_name => 'svmc_winsor');
21:37:31  44  
21:37:31  45  	-- create normalization table
21:37:31  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:37:31  47  
21:37:31  48  	-- populate normalization table based on winsorized data
21:37:31  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:37:31  50  	  norm_table_name => 'svmc_norm',
21:37:31  51  	  data_table_name => 'svmc_winsor',
21:37:31  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:37:31  53  
21:37:31  54  	-- normalize the original data
21:37:31  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:37:31  56  	  norm_table_name => 'svmc_norm',
21:37:31  57  	  data_table_name => '&bldtable',
21:37:31  58  	  xform_view_name => 'svmc_build_prep');
21:37:31  59  END;
21:37:31  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.90
21:37:49 SQL> 
21:37:49 SQL> ---------------------
21:37:49 SQL> -- CREATE A NEW MODEL
21:37:49 SQL> --
21:37:49 SQL> -- Cleanup old model with the same name for repeat runs
21:37:49 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:37:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:37:49   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:02.29
21:37:51 SQL> 
21:37:51 SQL> -- Build a new SVM Model
21:37:51 SQL> BEGIN
21:37:51   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:37:51   3  	  model_name	      => '&model_name',
21:37:51   4  	  mining_function     => dbms_data_mining.classification,
21:37:51   5  	  data_table_name     => 'svmc_build_prep',
21:37:51   6  	  case_id_column_name => '&case_id',
21:37:51   7  	  target_column_name  => '&target',
21:37:51   8  	  settings_table_name => 'svmc_settings');
21:37:51   9  END;
21:37:51  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.99
21:38:17 SQL> 
21:38:17 SQL> -----------------------------------------------------------------------
21:38:17 SQL> --			       APPLY/score THE MODEL
21:38:17 SQL> -----------------------------------------------------------------------
21:38:17 SQL> 
21:38:17 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:38:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:38:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:38:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:38:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:38:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:38:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:38:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:38:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:38:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:38:17 SQL> -----------------------
21:38:17 SQL> -- PREPARE SCORING DATA
21:38:17 SQL> --
21:38:17 SQL> -- If the data for model creation has been prepared, then the data
21:38:17 SQL> -- to be scored using the model must be prepared in the same manner
21:38:17 SQL> -- in order to obtain meaningful results.
21:38:17 SQL> --
21:38:17 SQL> -- 1. Missing Value treatment for all Predictors and
21:38:17 SQL> -- 2. Normalization
21:38:17 SQL> -- No outlier treatment will be performed during test and apply. The
21:38:17 SQL> -- normalization step is sufficient, since the normalization parameters
21:38:17 SQL> -- already capture the effects of outlier treatment done with build data.
21:38:17 SQL> --
21:38:17 SQL> BEGIN
21:38:17   2  	-- Xform Test data to replace missing values
21:38:17   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:38:17   4  	  miss_table_name => 'svmc_miss_num',
21:38:17   5  	  data_table_name => '&scoretable',
21:38:17   6  	  xform_view_name => 'xformed_apply_miss_num');
21:38:17   7  
21:38:17   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:38:17   9  	  miss_table_name => 'svmc_miss_cat',
21:38:17  10  	  data_table_name => '&scoretable',
21:38:17  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:38:17  12  
21:38:17  13  	-- Normalize the data to be scored
21:38:17  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:38:17  15  	  norm_table_name => 'svmc_norm',
21:38:17  16  	  data_table_name => '&scoretable',
21:38:17  17  	  xform_view_name => 'svmc_apply_prep');
21:38:17  18  END;
21:38:17  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
21:38:19 SQL> 
21:38:19 SQL> -- Use same model_name used in score_gattn.sql
21:38:19 SQL> DEFINE model_name = 'forex14'
21:38:19 SQL> 
21:38:19 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:38:19 SQL> 
21:38:19 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:38:19   2  SELECT
21:38:19   3  prdate
21:38:19   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:38:19   5  ,sysdate
21:38:19   6  ,SUBSTR(prdate,1,3)pair
21:38:19   7  ,SUBSTR(prdate,4,19)ydate
21:38:19   8  FROM svmc_apply_prep
21:38:19   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:38:19 SQL> @chf_score1day_gattn.sql	2010-12-17 09:50:00
21:38:19 SQL> --
21:38:19 SQL> -- chf_score1day_gattn.sql
21:38:19 SQL> --
21:38:19 SQL> 
21:38:19 SQL> CREATE OR REPLACE VIEW sme AS
21:38:19   2  SELECT
21:38:19   3  'chf'||m.ydate prdate
21:38:19   4  ,NULL gattn
21:38:19   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:38:19   6  ,eur_g00
21:38:19   7  ,eur_g01
21:38:19   8  ,eur_g02
21:38:19   9  ,eur_g03
21:38:19  10  ,eur_g04
21:38:19  11  ,eur_g05
21:38:19  12  ,eur_g06
21:38:19  13  ,eur_g07
21:38:19  14  ,eur_g08
21:38:19  15  ,eur_g09
21:38:19  16  ,eur_g10
21:38:19  17  ,eur_g11
21:38:19  18  ,eur_g12
21:38:19  19  ,eur_g13
21:38:19  20  ,eur_g14
21:38:19  21  ,eur_g15
21:38:19  22  ,eur_g16
21:38:19  23  ,eur_g17
21:38:19  24  ,eur_g18
21:38:19  25  ,eur_g19
21:38:19  26  ,eur_g20
21:38:19  27  ,eur_g21
21:38:19  28  ,eur_g22
21:38:19  29  ,eur_g23
21:38:19  30  ,eur_g24
21:38:19  31  ,eur_g25
21:38:19  32  ,eur_g26
21:38:19  33  ,eur_g27
21:38:19  34  ,eur_g28
21:38:19  35  ,eur_g29
21:38:19  36  ,eur_g30
21:38:19  37  ,eur_g31
21:38:19  38  ,eur_g32
21:38:19  39  ,eur_g33
21:38:19  40  ,eur_g34
21:38:19  41  ,eur_g35
21:38:19  42  ,eur_g36
21:38:19  43  ,eur_g37
21:38:19  44  ,eur_g38
21:38:19  45  ,eur_g39
21:38:19  46  ,eur_g40
21:38:19  47  ,aud_g00
21:38:19  48  ,aud_g01
21:38:19  49  ,aud_g02
21:38:19  50  ,aud_g03
21:38:19  51  ,aud_g04
21:38:19  52  ,aud_g05
21:38:19  53  ,aud_g06
21:38:19  54  ,aud_g07
21:38:19  55  ,aud_g08
21:38:19  56  ,aud_g09
21:38:19  57  ,aud_g10
21:38:19  58  ,aud_g11
21:38:19  59  ,aud_g12
21:38:19  60  ,aud_g13
21:38:19  61  ,aud_g14
21:38:19  62  ,aud_g15
21:38:19  63  ,aud_g16
21:38:19  64  ,aud_g17
21:38:19  65  ,aud_g18
21:38:19  66  ,aud_g19
21:38:19  67  ,aud_g20
21:38:19  68  ,aud_g21
21:38:19  69  ,aud_g22
21:38:19  70  ,aud_g23
21:38:19  71  ,aud_g24
21:38:19  72  ,aud_g25
21:38:19  73  ,aud_g26
21:38:19  74  ,aud_g27
21:38:19  75  ,aud_g28
21:38:19  76  ,aud_g29
21:38:19  77  ,aud_g30
21:38:19  78  ,aud_g31
21:38:19  79  ,aud_g32
21:38:19  80  ,aud_g33
21:38:19  81  ,aud_g34
21:38:19  82  ,aud_g35
21:38:19  83  ,aud_g36
21:38:19  84  ,aud_g37
21:38:19  85  ,aud_g38
21:38:19  86  ,aud_g39
21:38:19  87  ,aud_g40
21:38:19  88  ,gbp_g00
21:38:19  89  ,gbp_g01
21:38:19  90  ,gbp_g02
21:38:19  91  ,gbp_g03
21:38:19  92  ,gbp_g04
21:38:19  93  ,gbp_g05
21:38:19  94  ,gbp_g06
21:38:19  95  ,gbp_g07
21:38:19  96  ,gbp_g08
21:38:19  97  ,gbp_g09
21:38:19  98  ,gbp_g10
21:38:19  99  ,gbp_g11
21:38:19 100  ,gbp_g12
21:38:19 101  ,gbp_g13
21:38:19 102  ,gbp_g14
21:38:19 103  ,gbp_g15
21:38:19 104  ,gbp_g16
21:38:19 105  ,gbp_g17
21:38:19 106  ,gbp_g18
21:38:19 107  ,gbp_g19
21:38:19 108  ,gbp_g20
21:38:19 109  ,gbp_g21
21:38:19 110  ,gbp_g22
21:38:19 111  ,gbp_g23
21:38:19 112  ,gbp_g24
21:38:19 113  ,gbp_g25
21:38:19 114  ,gbp_g26
21:38:19 115  ,gbp_g27
21:38:19 116  ,gbp_g28
21:38:19 117  ,gbp_g29
21:38:19 118  ,gbp_g30
21:38:19 119  ,gbp_g31
21:38:19 120  ,gbp_g32
21:38:19 121  ,gbp_g33
21:38:19 122  ,gbp_g34
21:38:19 123  ,gbp_g35
21:38:19 124  ,gbp_g36
21:38:19 125  ,gbp_g37
21:38:19 126  ,gbp_g38
21:38:19 127  ,gbp_g39
21:38:19 128  ,gbp_g40
21:38:19 129  ,jpy_g00
21:38:19 130  ,jpy_g01
21:38:19 131  ,jpy_g02
21:38:19 132  ,jpy_g03
21:38:19 133  ,jpy_g04
21:38:19 134  ,jpy_g05
21:38:19 135  ,jpy_g06
21:38:19 136  ,jpy_g07
21:38:19 137  ,jpy_g08
21:38:19 138  ,jpy_g09
21:38:19 139  ,jpy_g10
21:38:19 140  ,jpy_g11
21:38:19 141  ,jpy_g12
21:38:19 142  ,jpy_g13
21:38:19 143  ,jpy_g14
21:38:19 144  ,jpy_g15
21:38:19 145  ,jpy_g16
21:38:19 146  ,jpy_g17
21:38:19 147  ,jpy_g18
21:38:19 148  ,jpy_g19
21:38:19 149  ,jpy_g20
21:38:19 150  ,jpy_g21
21:38:19 151  ,jpy_g22
21:38:19 152  ,jpy_g23
21:38:19 153  ,jpy_g24
21:38:19 154  ,jpy_g25
21:38:19 155  ,jpy_g26
21:38:19 156  ,jpy_g27
21:38:19 157  ,jpy_g28
21:38:19 158  ,jpy_g29
21:38:19 159  ,jpy_g30
21:38:19 160  ,jpy_g31
21:38:19 161  ,jpy_g32
21:38:19 162  ,jpy_g33
21:38:19 163  ,jpy_g34
21:38:19 164  ,jpy_g35
21:38:19 165  ,jpy_g36
21:38:19 166  ,jpy_g37
21:38:19 167  ,jpy_g38
21:38:19 168  ,jpy_g39
21:38:19 169  ,jpy_g40
21:38:19 170  ,cad_g00
21:38:19 171  ,cad_g01
21:38:19 172  ,cad_g02
21:38:19 173  ,cad_g03
21:38:19 174  ,cad_g04
21:38:19 175  ,cad_g05
21:38:19 176  ,cad_g06
21:38:19 177  ,cad_g07
21:38:19 178  ,cad_g08
21:38:19 179  ,cad_g09
21:38:19 180  ,cad_g10
21:38:19 181  ,cad_g11
21:38:19 182  ,cad_g12
21:38:19 183  ,cad_g13
21:38:19 184  ,cad_g14
21:38:19 185  ,cad_g15
21:38:19 186  ,cad_g16
21:38:19 187  ,cad_g17
21:38:19 188  ,cad_g18
21:38:19 189  ,cad_g19
21:38:19 190  ,cad_g20
21:38:19 191  ,cad_g21
21:38:19 192  ,cad_g22
21:38:19 193  ,cad_g23
21:38:19 194  ,cad_g24
21:38:19 195  ,cad_g25
21:38:19 196  ,cad_g26
21:38:19 197  ,cad_g27
21:38:19 198  ,cad_g28
21:38:19 199  ,cad_g29
21:38:19 200  ,cad_g30
21:38:19 201  ,cad_g31
21:38:19 202  ,cad_g32
21:38:19 203  ,cad_g33
21:38:19 204  ,cad_g34
21:38:19 205  ,cad_g35
21:38:19 206  ,cad_g36
21:38:19 207  ,cad_g37
21:38:19 208  ,cad_g38
21:38:19 209  ,cad_g39
21:38:19 210  ,cad_g40
21:38:19 211  ,chf_g00
21:38:19 212  ,chf_g01
21:38:19 213  ,chf_g02
21:38:19 214  ,chf_g03
21:38:19 215  ,chf_g04
21:38:19 216  ,chf_g05
21:38:19 217  ,chf_g06
21:38:19 218  ,chf_g07
21:38:19 219  ,chf_g08
21:38:19 220  ,chf_g09
21:38:19 221  ,chf_g10
21:38:19 222  ,chf_g11
21:38:19 223  ,chf_g12
21:38:19 224  ,chf_g13
21:38:19 225  ,chf_g14
21:38:19 226  ,chf_g15
21:38:19 227  ,chf_g16
21:38:19 228  ,chf_g17
21:38:19 229  ,chf_g18
21:38:19 230  ,chf_g19
21:38:19 231  ,chf_g20
21:38:19 232  ,chf_g21
21:38:19 233  ,chf_g22
21:38:19 234  ,chf_g23
21:38:19 235  ,chf_g24
21:38:19 236  ,chf_g25
21:38:19 237  ,chf_g26
21:38:19 238  ,chf_g27
21:38:19 239  ,chf_g28
21:38:19 240  ,chf_g29
21:38:19 241  ,chf_g30
21:38:19 242  ,chf_g31
21:38:19 243  ,chf_g32
21:38:19 244  ,chf_g33
21:38:19 245  ,chf_g34
21:38:19 246  ,chf_g35
21:38:19 247  ,chf_g36
21:38:19 248  ,chf_g37
21:38:19 249  ,chf_g38
21:38:19 250  ,chf_g39
21:38:19 251  ,chf_g40
21:38:19 252  FROM chf_ms14 m
21:38:19 253  WHERE m.ydate = '&1'||' '||'&2'
21:38:19 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'09:50:00'

View created.

Elapsed: 00:00:00.12
21:38:19 SQL> 
21:38:19 SQL> -- rpt
21:38:19 SQL> -- We should see just 1 row:
21:38:19 SQL> 
21:38:19 SQL> SELECT COUNT(prdate) FROM sme
21:38:19   2  
21:38:19 SQL> -- Build the model:
21:38:19 SQL> CREATE OR REPLACE VIEW bme AS
21:38:19   2  SELECT
21:38:19   3  'chf'||m.ydate prdate
21:38:19   4  ,gattn
21:38:19   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:38:19   6  ,eur_g00
21:38:19   7  ,eur_g01
21:38:19   8  ,eur_g02
21:38:19   9  ,eur_g03
21:38:19  10  ,eur_g04
21:38:19  11  ,eur_g05
21:38:19  12  ,eur_g06
21:38:19  13  ,eur_g07
21:38:19  14  ,eur_g08
21:38:19  15  ,eur_g09
21:38:19  16  ,eur_g10
21:38:19  17  ,eur_g11
21:38:19  18  ,eur_g12
21:38:19  19  ,eur_g13
21:38:19  20  ,eur_g14
21:38:19  21  ,eur_g15
21:38:19  22  ,eur_g16
21:38:19  23  ,eur_g17
21:38:19  24  ,eur_g18
21:38:19  25  ,eur_g19
21:38:19  26  ,eur_g20
21:38:19  27  ,eur_g21
21:38:19  28  ,eur_g22
21:38:19  29  ,eur_g23
21:38:19  30  ,eur_g24
21:38:19  31  ,eur_g25
21:38:19  32  ,eur_g26
21:38:19  33  ,eur_g27
21:38:19  34  ,eur_g28
21:38:19  35  ,eur_g29
21:38:19  36  ,eur_g30
21:38:19  37  ,eur_g31
21:38:19  38  ,eur_g32
21:38:19  39  ,eur_g33
21:38:19  40  ,eur_g34
21:38:19  41  ,eur_g35
21:38:19  42  ,eur_g36
21:38:19  43  ,eur_g37
21:38:19  44  ,eur_g38
21:38:19  45  ,eur_g39
21:38:19  46  ,eur_g40
21:38:19  47  ,aud_g00
21:38:19  48  ,aud_g01
21:38:19  49  ,aud_g02
21:38:19  50  ,aud_g03
21:38:19  51  ,aud_g04
21:38:19  52  ,aud_g05
21:38:19  53  ,aud_g06
21:38:19  54  ,aud_g07
21:38:19  55  ,aud_g08
21:38:19  56  ,aud_g09
21:38:19  57  ,aud_g10
21:38:19  58  ,aud_g11
21:38:19  59  ,aud_g12
21:38:19  60  ,aud_g13
21:38:19  61  ,aud_g14
21:38:19  62  ,aud_g15
21:38:19  63  ,aud_g16
21:38:19  64  ,aud_g17
21:38:19  65  ,aud_g18
21:38:19  66  ,aud_g19
21:38:19  67  ,aud_g20
21:38:19  68  ,aud_g21
21:38:19  69  ,aud_g22
21:38:19  70  ,aud_g23
21:38:19  71  ,aud_g24
21:38:19  72  ,aud_g25
21:38:19  73  ,aud_g26
21:38:19  74  ,aud_g27
21:38:19  75  ,aud_g28
21:38:19  76  ,aud_g29
21:38:19  77  ,aud_g30
21:38:19  78  ,aud_g31
21:38:19  79  ,aud_g32
21:38:19  80  ,aud_g33
21:38:19  81  ,aud_g34
21:38:19  82  ,aud_g35
21:38:19  83  ,aud_g36
21:38:19  84  ,aud_g37
21:38:19  85  ,aud_g38
21:38:19  86  ,aud_g39
21:38:19  87  ,aud_g40
21:38:19  88  ,gbp_g00
21:38:19  89  ,gbp_g01
21:38:19  90  ,gbp_g02
21:38:19  91  ,gbp_g03
21:38:19  92  ,gbp_g04
21:38:19  93  ,gbp_g05
21:38:19  94  ,gbp_g06
21:38:19  95  ,gbp_g07
21:38:19  96  ,gbp_g08
21:38:19  97  ,gbp_g09
21:38:19  98  ,gbp_g10
21:38:19  99  ,gbp_g11
21:38:19 100  ,gbp_g12
21:38:19 101  ,gbp_g13
21:38:19 102  ,gbp_g14
21:38:19 103  ,gbp_g15
21:38:19 104  ,gbp_g16
21:38:19 105  ,gbp_g17
21:38:19 106  ,gbp_g18
21:38:19 107  ,gbp_g19
21:38:19 108  ,gbp_g20
21:38:19 109  ,gbp_g21
21:38:19 110  ,gbp_g22
21:38:19 111  ,gbp_g23
21:38:19 112  ,gbp_g24
21:38:19 113  ,gbp_g25
21:38:19 114  ,gbp_g26
21:38:19 115  ,gbp_g27
21:38:19 116  ,gbp_g28
21:38:19 117  ,gbp_g29
21:38:19 118  ,gbp_g30
21:38:19 119  ,gbp_g31
21:38:19 120  ,gbp_g32
21:38:19 121  ,gbp_g33
21:38:19 122  ,gbp_g34
21:38:19 123  ,gbp_g35
21:38:19 124  ,gbp_g36
21:38:19 125  ,gbp_g37
21:38:19 126  ,gbp_g38
21:38:19 127  ,gbp_g39
21:38:19 128  ,gbp_g40
21:38:19 129  ,jpy_g00
21:38:19 130  ,jpy_g01
21:38:19 131  ,jpy_g02
21:38:19 132  ,jpy_g03
21:38:19 133  ,jpy_g04
21:38:19 134  ,jpy_g05
21:38:19 135  ,jpy_g06
21:38:19 136  ,jpy_g07
21:38:19 137  ,jpy_g08
21:38:19 138  ,jpy_g09
21:38:19 139  ,jpy_g10
21:38:19 140  ,jpy_g11
21:38:19 141  ,jpy_g12
21:38:19 142  ,jpy_g13
21:38:19 143  ,jpy_g14
21:38:19 144  ,jpy_g15
21:38:19 145  ,jpy_g16
21:38:19 146  ,jpy_g17
21:38:19 147  ,jpy_g18
21:38:19 148  ,jpy_g19
21:38:19 149  ,jpy_g20
21:38:19 150  ,jpy_g21
21:38:19 151  ,jpy_g22
21:38:19 152  ,jpy_g23
21:38:19 153  ,jpy_g24
21:38:19 154  ,jpy_g25
21:38:19 155  ,jpy_g26
21:38:19 156  ,jpy_g27
21:38:19 157  ,jpy_g28
21:38:19 158  ,jpy_g29
21:38:19 159  ,jpy_g30
21:38:19 160  ,jpy_g31
21:38:19 161  ,jpy_g32
21:38:19 162  ,jpy_g33
21:38:19 163  ,jpy_g34
21:38:19 164  ,jpy_g35
21:38:19 165  ,jpy_g36
21:38:19 166  ,jpy_g37
21:38:19 167  ,jpy_g38
21:38:19 168  ,jpy_g39
21:38:19 169  ,jpy_g40
21:38:19 170  ,cad_g00
21:38:19 171  ,cad_g01
21:38:19 172  ,cad_g02
21:38:19 173  ,cad_g03
21:38:19 174  ,cad_g04
21:38:19 175  ,cad_g05
21:38:19 176  ,cad_g06
21:38:19 177  ,cad_g07
21:38:19 178  ,cad_g08
21:38:19 179  ,cad_g09
21:38:19 180  ,cad_g10
21:38:19 181  ,cad_g11
21:38:19 182  ,cad_g12
21:38:19 183  ,cad_g13
21:38:19 184  ,cad_g14
21:38:19 185  ,cad_g15
21:38:19 186  ,cad_g16
21:38:19 187  ,cad_g17
21:38:19 188  ,cad_g18
21:38:19 189  ,cad_g19
21:38:19 190  ,cad_g20
21:38:19 191  ,cad_g21
21:38:19 192  ,cad_g22
21:38:19 193  ,cad_g23
21:38:19 194  ,cad_g24
21:38:19 195  ,cad_g25
21:38:19 196  ,cad_g26
21:38:19 197  ,cad_g27
21:38:19 198  ,cad_g28
21:38:19 199  ,cad_g29
21:38:19 200  ,cad_g30
21:38:19 201  ,cad_g31
21:38:19 202  ,cad_g32
21:38:19 203  ,cad_g33
21:38:19 204  ,cad_g34
21:38:19 205  ,cad_g35
21:38:19 206  ,cad_g36
21:38:19 207  ,cad_g37
21:38:19 208  ,cad_g38
21:38:19 209  ,cad_g39
21:38:19 210  ,cad_g40
21:38:19 211  ,chf_g00
21:38:19 212  ,chf_g01
21:38:19 213  ,chf_g02
21:38:19 214  ,chf_g03
21:38:19 215  ,chf_g04
21:38:19 216  ,chf_g05
21:38:19 217  ,chf_g06
21:38:19 218  ,chf_g07
21:38:19 219  ,chf_g08
21:38:19 220  ,chf_g09
21:38:19 221  ,chf_g10
21:38:19 222  ,chf_g11
21:38:19 223  ,chf_g12
21:38:19 224  ,chf_g13
21:38:19 225  ,chf_g14
21:38:19 226  ,chf_g15
21:38:19 227  ,chf_g16
21:38:19 228  ,chf_g17
21:38:19 229  ,chf_g18
21:38:19 230  ,chf_g19
21:38:19 231  ,chf_g20
21:38:19 232  ,chf_g21
21:38:19 233  ,chf_g22
21:38:19 234  ,chf_g23
21:38:19 235  ,chf_g24
21:38:19 236  ,chf_g25
21:38:19 237  ,chf_g26
21:38:19 238  ,chf_g27
21:38:19 239  ,chf_g28
21:38:19 240  ,chf_g29
21:38:19 241  ,chf_g30
21:38:19 242  ,chf_g31
21:38:19 243  ,chf_g32
21:38:19 244  ,chf_g33
21:38:19 245  ,chf_g34
21:38:19 246  ,chf_g35
21:38:19 247  ,chf_g36
21:38:19 248  ,chf_g37
21:38:19 249  ,chf_g38
21:38:19 250  ,chf_g39
21:38:19 251  ,chf_g40
21:38:19 252  FROM chf_ms14 m
21:38:19 253  WHERE gattn IN('nup','up')
21:38:19 254  AND 1+m.ydate < '&1'||' '||'&2'
21:38:19 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'09:50:00'

View created.

Elapsed: 00:00:00.13
21:38:19 SQL> 
21:38:19 SQL> -- rpt
21:38:19 SQL> 
21:38:19 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:38:19   2  
21:38:19 SQL> SELECT MAX(prdate) FROM bme
21:38:19   2  
21:38:19 SQL> -- Now build model from bme and score sme
21:38:19 SQL> @score1gattn.sql
21:38:19 SQL> -- score1gattn.sql
21:38:19 SQL> 
21:38:19 SQL> -- Does the 1st SVM score
21:38:19 SQL> 
21:38:19 SQL> -- Fill up svmc_apply_prep
21:38:19 SQL> @score_gattn.sql
21:38:19 SQL> --
21:38:19 SQL> -- score_gattn.sql
21:38:19 SQL> --
21:38:19 SQL> 
21:38:19 SQL> -- usage: score_gattn.sql
21:38:19 SQL> 
21:38:19 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:38:19 SQL> 
21:38:19 SQL> DEFINE target	= 'gattn'
21:38:19 SQL> DEFINE model_name = 'forex14'
21:38:19 SQL> DEFINE bldtable	= 'bme'
21:38:19 SQL> DEFINE scoretable = 'sme'
21:38:19 SQL> DEFINE case_id	= 'prdate'
21:38:19 SQL> 
21:38:19 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:38:19 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:38:19 SQL> 
21:38:19 SQL> -- Builds an SVM model using pl/sql.
21:38:19 SQL> 
21:38:19 SQL> -----------------------------------------------------------------------
21:38:19 SQL> --			    BUILD THE MODEL
21:38:19 SQL> -----------------------------------------------------------------------
21:38:19 SQL> 
21:38:19 SQL> -- Cleanup old build data preparation objects for repeat runs
21:38:19 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:38:19 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:38:19 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:38:19 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:38:19 SQL> 
21:38:19 SQL> 
21:38:19 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:38:19 SQL> --
21:38:19 SQL> -- DROP	TABLE svmc_settings ;
21:38:19 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:38:19 SQL> -- DELETE svmc_settings;
21:38:19 SQL> 
21:38:19 SQL> -- The default classification algorithm is Naive Bayes. So override
21:38:19 SQL> -- this choice to SVM using a settings table.
21:38:19 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:38:19 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:38:19 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:38:19 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:38:19 SQL> -- models.
21:38:19 SQL> --
21:38:19 SQL> 
21:38:19 SQL> -- Do this once and then comment it out.
21:38:19 SQL> -- That makes script go faster.
21:38:19 SQL> -- BEGIN
21:38:19 SQL> -- -- Populate settings table
21:38:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:38:19 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:38:19 SQL> --
21:38:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:38:19 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:38:19 SQL> --
21:38:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:38:19 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:38:19 SQL> --   COMMIT;
21:38:19 SQL> -- END;
21:38:19 SQL> -- /
21:38:19 SQL> 
21:38:19 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:38:19 SQL> 
21:38:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:38:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:38:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:38:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:38:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:38:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:38:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:38:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:38:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:38:19 SQL> 
21:38:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:38:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:38:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:38:19 SQL> 
21:38:19 SQL> --------------------------------
21:38:19 SQL> -- PREPARE BUILD (TRAINING) DATA
21:38:19 SQL> --
21:38:19 SQL> 
21:38:19 SQL> -- 1. Missing Value treatment for all Predictors and
21:38:19 SQL> -- 2. Outlier Treatment and
21:38:19 SQL> -- 3. Normalization are performed below.
21:38:19 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:38:19 SQL> --    normalized here.
21:38:19 SQL> 
21:38:19 SQL> BEGIN
21:38:19   2  	-- Perform missing value treatment for all predictors
21:38:19   3  	-- create miss tables
21:38:19   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:38:19   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:38:19   6  
21:38:19   7  	-- populate miss tables
21:38:19   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:38:19   9  	  miss_table_name => 'svmc_miss_num',
21:38:19  10  	  data_table_name => '&bldtable',
21:38:19  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:38:19  12  
21:38:19  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:38:19  14  	  miss_table_name => 'svmc_miss_cat',
21:38:19  15  	  data_table_name => '&bldtable',
21:38:19  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:38:19  17  
21:38:19  18  	-- xform input data to replace missing values
21:38:19  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:38:19  20  	  miss_table_name => 'svmc_miss_num',
21:38:19  21  	  data_table_name => '&bldtable',
21:38:19  22  	  xform_view_name => 'xformed_build_miss_num');
21:38:19  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:38:19  24  	  miss_table_name => 'svmc_miss_cat',
21:38:19  25  	  data_table_name => '&bldtable',
21:38:19  26  	  xform_view_name => 'xformed_build_miss_cat');
21:38:19  27  
21:38:19  28  	-- Perform outlier treatment.
21:38:19  29  	-- create clip table
21:38:19  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:38:19  31  
21:38:19  32  	-- populate clip table
21:38:19  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:38:19  34  	  clip_table_name => 'svmc_clip',
21:38:19  35  	  data_table_name => '&bldtable',
21:38:19  36  	  tail_frac	  => 0.025,
21:38:19  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:38:19  38  
21:38:19  39  	-- xform input data to winsorized data
21:38:19  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:38:19  41  	  clip_table_name => 'svmc_clip',
21:38:19  42  	  data_table_name => '&bldtable',
21:38:19  43  	  xform_view_name => 'svmc_winsor');
21:38:19  44  
21:38:19  45  	-- create normalization table
21:38:19  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:38:19  47  
21:38:19  48  	-- populate normalization table based on winsorized data
21:38:19  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:38:19  50  	  norm_table_name => 'svmc_norm',
21:38:19  51  	  data_table_name => 'svmc_winsor',
21:38:19  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:38:19  53  
21:38:19  54  	-- normalize the original data
21:38:19  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:38:19  56  	  norm_table_name => 'svmc_norm',
21:38:19  57  	  data_table_name => '&bldtable',
21:38:19  58  	  xform_view_name => 'svmc_build_prep');
21:38:19  59  END;
21:38:19  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.02
21:38:37 SQL> 
21:38:37 SQL> ---------------------
21:38:37 SQL> -- CREATE A NEW MODEL
21:38:37 SQL> --
21:38:37 SQL> -- Cleanup old model with the same name for repeat runs
21:38:37 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:38:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:38:37   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.64
21:38:39 SQL> 
21:38:39 SQL> -- Build a new SVM Model
21:38:39 SQL> BEGIN
21:38:39   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:38:39   3  	  model_name	      => '&model_name',
21:38:39   4  	  mining_function     => dbms_data_mining.classification,
21:38:39   5  	  data_table_name     => 'svmc_build_prep',
21:38:39   6  	  case_id_column_name => '&case_id',
21:38:39   7  	  target_column_name  => '&target',
21:38:39   8  	  settings_table_name => 'svmc_settings');
21:38:39   9  END;
21:38:39  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.62
21:39:05 SQL> 
21:39:05 SQL> -----------------------------------------------------------------------
21:39:05 SQL> --			       APPLY/score THE MODEL
21:39:05 SQL> -----------------------------------------------------------------------
21:39:05 SQL> 
21:39:05 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:39:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:39:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:39:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:39:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:39:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:39:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:39:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:39:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:39:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:39:05 SQL> -----------------------
21:39:05 SQL> -- PREPARE SCORING DATA
21:39:05 SQL> --
21:39:05 SQL> -- If the data for model creation has been prepared, then the data
21:39:05 SQL> -- to be scored using the model must be prepared in the same manner
21:39:05 SQL> -- in order to obtain meaningful results.
21:39:05 SQL> --
21:39:05 SQL> -- 1. Missing Value treatment for all Predictors and
21:39:05 SQL> -- 2. Normalization
21:39:05 SQL> -- No outlier treatment will be performed during test and apply. The
21:39:05 SQL> -- normalization step is sufficient, since the normalization parameters
21:39:05 SQL> -- already capture the effects of outlier treatment done with build data.
21:39:05 SQL> --
21:39:05 SQL> BEGIN
21:39:05   2  	-- Xform Test data to replace missing values
21:39:05   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:39:05   4  	  miss_table_name => 'svmc_miss_num',
21:39:05   5  	  data_table_name => '&scoretable',
21:39:05   6  	  xform_view_name => 'xformed_apply_miss_num');
21:39:05   7  
21:39:05   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:39:05   9  	  miss_table_name => 'svmc_miss_cat',
21:39:05  10  	  data_table_name => '&scoretable',
21:39:05  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:39:05  12  
21:39:05  13  	-- Normalize the data to be scored
21:39:05  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:39:05  15  	  norm_table_name => 'svmc_norm',
21:39:05  16  	  data_table_name => '&scoretable',
21:39:05  17  	  xform_view_name => 'svmc_apply_prep');
21:39:05  18  END;
21:39:05  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.12
21:39:06 SQL> 
21:39:06 SQL> -- Use same model_name used in score_gattn.sql
21:39:06 SQL> DEFINE model_name = 'forex14'
21:39:06 SQL> 
21:39:06 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:39:06 SQL> 
21:39:06 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:39:06   2  SELECT
21:39:06   3  prdate
21:39:06   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:39:06   5  ,sysdate
21:39:06   6  ,SUBSTR(prdate,1,3)pair
21:39:06   7  ,SUBSTR(prdate,4,19)ydate
21:39:06   8  FROM svmc_apply_prep
21:39:06   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:39:06 SQL> @chf_score1day_gattn.sql	2010-12-17 09:45:00
21:39:06 SQL> --
21:39:06 SQL> -- chf_score1day_gattn.sql
21:39:06 SQL> --
21:39:06 SQL> 
21:39:06 SQL> CREATE OR REPLACE VIEW sme AS
21:39:06   2  SELECT
21:39:06   3  'chf'||m.ydate prdate
21:39:06   4  ,NULL gattn
21:39:06   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:39:06   6  ,eur_g00
21:39:06   7  ,eur_g01
21:39:06   8  ,eur_g02
21:39:06   9  ,eur_g03
21:39:06  10  ,eur_g04
21:39:06  11  ,eur_g05
21:39:06  12  ,eur_g06
21:39:06  13  ,eur_g07
21:39:06  14  ,eur_g08
21:39:06  15  ,eur_g09
21:39:06  16  ,eur_g10
21:39:06  17  ,eur_g11
21:39:06  18  ,eur_g12
21:39:06  19  ,eur_g13
21:39:06  20  ,eur_g14
21:39:06  21  ,eur_g15
21:39:06  22  ,eur_g16
21:39:06  23  ,eur_g17
21:39:06  24  ,eur_g18
21:39:06  25  ,eur_g19
21:39:06  26  ,eur_g20
21:39:06  27  ,eur_g21
21:39:06  28  ,eur_g22
21:39:06  29  ,eur_g23
21:39:06  30  ,eur_g24
21:39:06  31  ,eur_g25
21:39:06  32  ,eur_g26
21:39:06  33  ,eur_g27
21:39:06  34  ,eur_g28
21:39:06  35  ,eur_g29
21:39:06  36  ,eur_g30
21:39:06  37  ,eur_g31
21:39:06  38  ,eur_g32
21:39:06  39  ,eur_g33
21:39:06  40  ,eur_g34
21:39:06  41  ,eur_g35
21:39:06  42  ,eur_g36
21:39:06  43  ,eur_g37
21:39:06  44  ,eur_g38
21:39:06  45  ,eur_g39
21:39:06  46  ,eur_g40
21:39:06  47  ,aud_g00
21:39:06  48  ,aud_g01
21:39:06  49  ,aud_g02
21:39:06  50  ,aud_g03
21:39:06  51  ,aud_g04
21:39:06  52  ,aud_g05
21:39:06  53  ,aud_g06
21:39:06  54  ,aud_g07
21:39:06  55  ,aud_g08
21:39:06  56  ,aud_g09
21:39:06  57  ,aud_g10
21:39:06  58  ,aud_g11
21:39:06  59  ,aud_g12
21:39:06  60  ,aud_g13
21:39:06  61  ,aud_g14
21:39:06  62  ,aud_g15
21:39:06  63  ,aud_g16
21:39:06  64  ,aud_g17
21:39:06  65  ,aud_g18
21:39:06  66  ,aud_g19
21:39:06  67  ,aud_g20
21:39:06  68  ,aud_g21
21:39:06  69  ,aud_g22
21:39:06  70  ,aud_g23
21:39:06  71  ,aud_g24
21:39:06  72  ,aud_g25
21:39:06  73  ,aud_g26
21:39:06  74  ,aud_g27
21:39:06  75  ,aud_g28
21:39:06  76  ,aud_g29
21:39:06  77  ,aud_g30
21:39:06  78  ,aud_g31
21:39:06  79  ,aud_g32
21:39:06  80  ,aud_g33
21:39:06  81  ,aud_g34
21:39:06  82  ,aud_g35
21:39:06  83  ,aud_g36
21:39:06  84  ,aud_g37
21:39:06  85  ,aud_g38
21:39:06  86  ,aud_g39
21:39:06  87  ,aud_g40
21:39:06  88  ,gbp_g00
21:39:06  89  ,gbp_g01
21:39:06  90  ,gbp_g02
21:39:06  91  ,gbp_g03
21:39:06  92  ,gbp_g04
21:39:06  93  ,gbp_g05
21:39:06  94  ,gbp_g06
21:39:06  95  ,gbp_g07
21:39:06  96  ,gbp_g08
21:39:06  97  ,gbp_g09
21:39:06  98  ,gbp_g10
21:39:06  99  ,gbp_g11
21:39:06 100  ,gbp_g12
21:39:06 101  ,gbp_g13
21:39:06 102  ,gbp_g14
21:39:06 103  ,gbp_g15
21:39:06 104  ,gbp_g16
21:39:06 105  ,gbp_g17
21:39:06 106  ,gbp_g18
21:39:06 107  ,gbp_g19
21:39:06 108  ,gbp_g20
21:39:06 109  ,gbp_g21
21:39:06 110  ,gbp_g22
21:39:06 111  ,gbp_g23
21:39:06 112  ,gbp_g24
21:39:06 113  ,gbp_g25
21:39:06 114  ,gbp_g26
21:39:06 115  ,gbp_g27
21:39:06 116  ,gbp_g28
21:39:06 117  ,gbp_g29
21:39:06 118  ,gbp_g30
21:39:06 119  ,gbp_g31
21:39:06 120  ,gbp_g32
21:39:06 121  ,gbp_g33
21:39:06 122  ,gbp_g34
21:39:06 123  ,gbp_g35
21:39:06 124  ,gbp_g36
21:39:06 125  ,gbp_g37
21:39:06 126  ,gbp_g38
21:39:06 127  ,gbp_g39
21:39:06 128  ,gbp_g40
21:39:06 129  ,jpy_g00
21:39:06 130  ,jpy_g01
21:39:06 131  ,jpy_g02
21:39:06 132  ,jpy_g03
21:39:06 133  ,jpy_g04
21:39:06 134  ,jpy_g05
21:39:06 135  ,jpy_g06
21:39:06 136  ,jpy_g07
21:39:06 137  ,jpy_g08
21:39:06 138  ,jpy_g09
21:39:06 139  ,jpy_g10
21:39:06 140  ,jpy_g11
21:39:06 141  ,jpy_g12
21:39:06 142  ,jpy_g13
21:39:06 143  ,jpy_g14
21:39:06 144  ,jpy_g15
21:39:06 145  ,jpy_g16
21:39:06 146  ,jpy_g17
21:39:06 147  ,jpy_g18
21:39:06 148  ,jpy_g19
21:39:06 149  ,jpy_g20
21:39:06 150  ,jpy_g21
21:39:06 151  ,jpy_g22
21:39:06 152  ,jpy_g23
21:39:06 153  ,jpy_g24
21:39:06 154  ,jpy_g25
21:39:06 155  ,jpy_g26
21:39:06 156  ,jpy_g27
21:39:06 157  ,jpy_g28
21:39:06 158  ,jpy_g29
21:39:06 159  ,jpy_g30
21:39:06 160  ,jpy_g31
21:39:06 161  ,jpy_g32
21:39:06 162  ,jpy_g33
21:39:06 163  ,jpy_g34
21:39:06 164  ,jpy_g35
21:39:06 165  ,jpy_g36
21:39:06 166  ,jpy_g37
21:39:06 167  ,jpy_g38
21:39:06 168  ,jpy_g39
21:39:06 169  ,jpy_g40
21:39:06 170  ,cad_g00
21:39:06 171  ,cad_g01
21:39:06 172  ,cad_g02
21:39:06 173  ,cad_g03
21:39:06 174  ,cad_g04
21:39:06 175  ,cad_g05
21:39:06 176  ,cad_g06
21:39:06 177  ,cad_g07
21:39:06 178  ,cad_g08
21:39:06 179  ,cad_g09
21:39:06 180  ,cad_g10
21:39:06 181  ,cad_g11
21:39:06 182  ,cad_g12
21:39:06 183  ,cad_g13
21:39:06 184  ,cad_g14
21:39:06 185  ,cad_g15
21:39:06 186  ,cad_g16
21:39:06 187  ,cad_g17
21:39:06 188  ,cad_g18
21:39:06 189  ,cad_g19
21:39:06 190  ,cad_g20
21:39:06 191  ,cad_g21
21:39:06 192  ,cad_g22
21:39:06 193  ,cad_g23
21:39:06 194  ,cad_g24
21:39:06 195  ,cad_g25
21:39:06 196  ,cad_g26
21:39:06 197  ,cad_g27
21:39:06 198  ,cad_g28
21:39:06 199  ,cad_g29
21:39:06 200  ,cad_g30
21:39:06 201  ,cad_g31
21:39:06 202  ,cad_g32
21:39:06 203  ,cad_g33
21:39:06 204  ,cad_g34
21:39:06 205  ,cad_g35
21:39:06 206  ,cad_g36
21:39:06 207  ,cad_g37
21:39:06 208  ,cad_g38
21:39:06 209  ,cad_g39
21:39:06 210  ,cad_g40
21:39:06 211  ,chf_g00
21:39:06 212  ,chf_g01
21:39:06 213  ,chf_g02
21:39:06 214  ,chf_g03
21:39:06 215  ,chf_g04
21:39:06 216  ,chf_g05
21:39:06 217  ,chf_g06
21:39:06 218  ,chf_g07
21:39:06 219  ,chf_g08
21:39:06 220  ,chf_g09
21:39:06 221  ,chf_g10
21:39:06 222  ,chf_g11
21:39:06 223  ,chf_g12
21:39:06 224  ,chf_g13
21:39:06 225  ,chf_g14
21:39:06 226  ,chf_g15
21:39:06 227  ,chf_g16
21:39:06 228  ,chf_g17
21:39:06 229  ,chf_g18
21:39:06 230  ,chf_g19
21:39:06 231  ,chf_g20
21:39:06 232  ,chf_g21
21:39:06 233  ,chf_g22
21:39:06 234  ,chf_g23
21:39:06 235  ,chf_g24
21:39:06 236  ,chf_g25
21:39:06 237  ,chf_g26
21:39:06 238  ,chf_g27
21:39:06 239  ,chf_g28
21:39:06 240  ,chf_g29
21:39:06 241  ,chf_g30
21:39:06 242  ,chf_g31
21:39:06 243  ,chf_g32
21:39:06 244  ,chf_g33
21:39:06 245  ,chf_g34
21:39:06 246  ,chf_g35
21:39:06 247  ,chf_g36
21:39:06 248  ,chf_g37
21:39:06 249  ,chf_g38
21:39:06 250  ,chf_g39
21:39:06 251  ,chf_g40
21:39:06 252  FROM chf_ms14 m
21:39:06 253  WHERE m.ydate = '&1'||' '||'&2'
21:39:06 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'09:45:00'

View created.

Elapsed: 00:00:00.12
21:39:06 SQL> 
21:39:06 SQL> -- rpt
21:39:06 SQL> -- We should see just 1 row:
21:39:06 SQL> 
21:39:06 SQL> SELECT COUNT(prdate) FROM sme
21:39:06   2  
21:39:06 SQL> -- Build the model:
21:39:06 SQL> CREATE OR REPLACE VIEW bme AS
21:39:06   2  SELECT
21:39:06   3  'chf'||m.ydate prdate
21:39:06   4  ,gattn
21:39:06   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:39:06   6  ,eur_g00
21:39:06   7  ,eur_g01
21:39:06   8  ,eur_g02
21:39:06   9  ,eur_g03
21:39:06  10  ,eur_g04
21:39:06  11  ,eur_g05
21:39:06  12  ,eur_g06
21:39:06  13  ,eur_g07
21:39:06  14  ,eur_g08
21:39:06  15  ,eur_g09
21:39:06  16  ,eur_g10
21:39:06  17  ,eur_g11
21:39:06  18  ,eur_g12
21:39:06  19  ,eur_g13
21:39:06  20  ,eur_g14
21:39:06  21  ,eur_g15
21:39:06  22  ,eur_g16
21:39:06  23  ,eur_g17
21:39:06  24  ,eur_g18
21:39:06  25  ,eur_g19
21:39:06  26  ,eur_g20
21:39:06  27  ,eur_g21
21:39:06  28  ,eur_g22
21:39:06  29  ,eur_g23
21:39:06  30  ,eur_g24
21:39:06  31  ,eur_g25
21:39:06  32  ,eur_g26
21:39:06  33  ,eur_g27
21:39:06  34  ,eur_g28
21:39:06  35  ,eur_g29
21:39:06  36  ,eur_g30
21:39:06  37  ,eur_g31
21:39:06  38  ,eur_g32
21:39:06  39  ,eur_g33
21:39:06  40  ,eur_g34
21:39:06  41  ,eur_g35
21:39:06  42  ,eur_g36
21:39:06  43  ,eur_g37
21:39:06  44  ,eur_g38
21:39:06  45  ,eur_g39
21:39:06  46  ,eur_g40
21:39:06  47  ,aud_g00
21:39:06  48  ,aud_g01
21:39:06  49  ,aud_g02
21:39:06  50  ,aud_g03
21:39:06  51  ,aud_g04
21:39:06  52  ,aud_g05
21:39:06  53  ,aud_g06
21:39:06  54  ,aud_g07
21:39:06  55  ,aud_g08
21:39:06  56  ,aud_g09
21:39:06  57  ,aud_g10
21:39:06  58  ,aud_g11
21:39:06  59  ,aud_g12
21:39:06  60  ,aud_g13
21:39:06  61  ,aud_g14
21:39:06  62  ,aud_g15
21:39:06  63  ,aud_g16
21:39:06  64  ,aud_g17
21:39:06  65  ,aud_g18
21:39:06  66  ,aud_g19
21:39:06  67  ,aud_g20
21:39:06  68  ,aud_g21
21:39:06  69  ,aud_g22
21:39:06  70  ,aud_g23
21:39:06  71  ,aud_g24
21:39:06  72  ,aud_g25
21:39:06  73  ,aud_g26
21:39:06  74  ,aud_g27
21:39:06  75  ,aud_g28
21:39:06  76  ,aud_g29
21:39:06  77  ,aud_g30
21:39:06  78  ,aud_g31
21:39:06  79  ,aud_g32
21:39:06  80  ,aud_g33
21:39:06  81  ,aud_g34
21:39:06  82  ,aud_g35
21:39:06  83  ,aud_g36
21:39:06  84  ,aud_g37
21:39:06  85  ,aud_g38
21:39:06  86  ,aud_g39
21:39:06  87  ,aud_g40
21:39:06  88  ,gbp_g00
21:39:06  89  ,gbp_g01
21:39:06  90  ,gbp_g02
21:39:06  91  ,gbp_g03
21:39:06  92  ,gbp_g04
21:39:06  93  ,gbp_g05
21:39:06  94  ,gbp_g06
21:39:06  95  ,gbp_g07
21:39:06  96  ,gbp_g08
21:39:06  97  ,gbp_g09
21:39:06  98  ,gbp_g10
21:39:06  99  ,gbp_g11
21:39:06 100  ,gbp_g12
21:39:06 101  ,gbp_g13
21:39:06 102  ,gbp_g14
21:39:06 103  ,gbp_g15
21:39:06 104  ,gbp_g16
21:39:06 105  ,gbp_g17
21:39:06 106  ,gbp_g18
21:39:06 107  ,gbp_g19
21:39:06 108  ,gbp_g20
21:39:06 109  ,gbp_g21
21:39:06 110  ,gbp_g22
21:39:06 111  ,gbp_g23
21:39:06 112  ,gbp_g24
21:39:06 113  ,gbp_g25
21:39:06 114  ,gbp_g26
21:39:06 115  ,gbp_g27
21:39:06 116  ,gbp_g28
21:39:06 117  ,gbp_g29
21:39:06 118  ,gbp_g30
21:39:06 119  ,gbp_g31
21:39:06 120  ,gbp_g32
21:39:06 121  ,gbp_g33
21:39:06 122  ,gbp_g34
21:39:06 123  ,gbp_g35
21:39:06 124  ,gbp_g36
21:39:06 125  ,gbp_g37
21:39:06 126  ,gbp_g38
21:39:06 127  ,gbp_g39
21:39:06 128  ,gbp_g40
21:39:06 129  ,jpy_g00
21:39:06 130  ,jpy_g01
21:39:06 131  ,jpy_g02
21:39:06 132  ,jpy_g03
21:39:06 133  ,jpy_g04
21:39:06 134  ,jpy_g05
21:39:06 135  ,jpy_g06
21:39:06 136  ,jpy_g07
21:39:06 137  ,jpy_g08
21:39:06 138  ,jpy_g09
21:39:06 139  ,jpy_g10
21:39:06 140  ,jpy_g11
21:39:06 141  ,jpy_g12
21:39:06 142  ,jpy_g13
21:39:06 143  ,jpy_g14
21:39:06 144  ,jpy_g15
21:39:06 145  ,jpy_g16
21:39:06 146  ,jpy_g17
21:39:06 147  ,jpy_g18
21:39:06 148  ,jpy_g19
21:39:06 149  ,jpy_g20
21:39:06 150  ,jpy_g21
21:39:06 151  ,jpy_g22
21:39:06 152  ,jpy_g23
21:39:06 153  ,jpy_g24
21:39:06 154  ,jpy_g25
21:39:06 155  ,jpy_g26
21:39:06 156  ,jpy_g27
21:39:06 157  ,jpy_g28
21:39:06 158  ,jpy_g29
21:39:06 159  ,jpy_g30
21:39:06 160  ,jpy_g31
21:39:06 161  ,jpy_g32
21:39:06 162  ,jpy_g33
21:39:06 163  ,jpy_g34
21:39:06 164  ,jpy_g35
21:39:06 165  ,jpy_g36
21:39:06 166  ,jpy_g37
21:39:06 167  ,jpy_g38
21:39:06 168  ,jpy_g39
21:39:06 169  ,jpy_g40
21:39:06 170  ,cad_g00
21:39:06 171  ,cad_g01
21:39:06 172  ,cad_g02
21:39:06 173  ,cad_g03
21:39:06 174  ,cad_g04
21:39:06 175  ,cad_g05
21:39:06 176  ,cad_g06
21:39:06 177  ,cad_g07
21:39:06 178  ,cad_g08
21:39:06 179  ,cad_g09
21:39:06 180  ,cad_g10
21:39:06 181  ,cad_g11
21:39:06 182  ,cad_g12
21:39:06 183  ,cad_g13
21:39:06 184  ,cad_g14
21:39:06 185  ,cad_g15
21:39:06 186  ,cad_g16
21:39:06 187  ,cad_g17
21:39:06 188  ,cad_g18
21:39:06 189  ,cad_g19
21:39:06 190  ,cad_g20
21:39:06 191  ,cad_g21
21:39:06 192  ,cad_g22
21:39:06 193  ,cad_g23
21:39:06 194  ,cad_g24
21:39:06 195  ,cad_g25
21:39:06 196  ,cad_g26
21:39:06 197  ,cad_g27
21:39:06 198  ,cad_g28
21:39:06 199  ,cad_g29
21:39:06 200  ,cad_g30
21:39:06 201  ,cad_g31
21:39:06 202  ,cad_g32
21:39:06 203  ,cad_g33
21:39:06 204  ,cad_g34
21:39:06 205  ,cad_g35
21:39:06 206  ,cad_g36
21:39:06 207  ,cad_g37
21:39:06 208  ,cad_g38
21:39:06 209  ,cad_g39
21:39:06 210  ,cad_g40
21:39:06 211  ,chf_g00
21:39:06 212  ,chf_g01
21:39:06 213  ,chf_g02
21:39:06 214  ,chf_g03
21:39:06 215  ,chf_g04
21:39:06 216  ,chf_g05
21:39:06 217  ,chf_g06
21:39:06 218  ,chf_g07
21:39:06 219  ,chf_g08
21:39:06 220  ,chf_g09
21:39:06 221  ,chf_g10
21:39:06 222  ,chf_g11
21:39:06 223  ,chf_g12
21:39:06 224  ,chf_g13
21:39:06 225  ,chf_g14
21:39:06 226  ,chf_g15
21:39:06 227  ,chf_g16
21:39:06 228  ,chf_g17
21:39:06 229  ,chf_g18
21:39:06 230  ,chf_g19
21:39:06 231  ,chf_g20
21:39:06 232  ,chf_g21
21:39:06 233  ,chf_g22
21:39:06 234  ,chf_g23
21:39:06 235  ,chf_g24
21:39:06 236  ,chf_g25
21:39:06 237  ,chf_g26
21:39:06 238  ,chf_g27
21:39:06 239  ,chf_g28
21:39:06 240  ,chf_g29
21:39:06 241  ,chf_g30
21:39:06 242  ,chf_g31
21:39:06 243  ,chf_g32
21:39:06 244  ,chf_g33
21:39:06 245  ,chf_g34
21:39:06 246  ,chf_g35
21:39:06 247  ,chf_g36
21:39:06 248  ,chf_g37
21:39:06 249  ,chf_g38
21:39:06 250  ,chf_g39
21:39:06 251  ,chf_g40
21:39:06 252  FROM chf_ms14 m
21:39:06 253  WHERE gattn IN('nup','up')
21:39:06 254  AND 1+m.ydate < '&1'||' '||'&2'
21:39:06 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'09:45:00'

View created.

Elapsed: 00:00:00.12
21:39:06 SQL> 
21:39:06 SQL> -- rpt
21:39:06 SQL> 
21:39:06 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:39:06   2  
21:39:06 SQL> SELECT MAX(prdate) FROM bme
21:39:06   2  
21:39:06 SQL> -- Now build model from bme and score sme
21:39:06 SQL> @score1gattn.sql
21:39:06 SQL> -- score1gattn.sql
21:39:06 SQL> 
21:39:06 SQL> -- Does the 1st SVM score
21:39:06 SQL> 
21:39:06 SQL> -- Fill up svmc_apply_prep
21:39:06 SQL> @score_gattn.sql
21:39:06 SQL> --
21:39:06 SQL> -- score_gattn.sql
21:39:06 SQL> --
21:39:06 SQL> 
21:39:06 SQL> -- usage: score_gattn.sql
21:39:06 SQL> 
21:39:06 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:39:06 SQL> 
21:39:06 SQL> DEFINE target	= 'gattn'
21:39:06 SQL> DEFINE model_name = 'forex14'
21:39:06 SQL> DEFINE bldtable	= 'bme'
21:39:06 SQL> DEFINE scoretable = 'sme'
21:39:06 SQL> DEFINE case_id	= 'prdate'
21:39:06 SQL> 
21:39:06 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:39:06 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:39:06 SQL> 
21:39:06 SQL> -- Builds an SVM model using pl/sql.
21:39:06 SQL> 
21:39:06 SQL> -----------------------------------------------------------------------
21:39:06 SQL> --			    BUILD THE MODEL
21:39:06 SQL> -----------------------------------------------------------------------
21:39:06 SQL> 
21:39:06 SQL> -- Cleanup old build data preparation objects for repeat runs
21:39:06 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:39:06 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:39:06 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:39:06 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:39:06 SQL> 
21:39:06 SQL> 
21:39:06 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:39:06 SQL> --
21:39:06 SQL> -- DROP	TABLE svmc_settings ;
21:39:06 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:39:06 SQL> -- DELETE svmc_settings;
21:39:06 SQL> 
21:39:06 SQL> -- The default classification algorithm is Naive Bayes. So override
21:39:06 SQL> -- this choice to SVM using a settings table.
21:39:06 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:39:06 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:39:06 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:39:06 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:39:06 SQL> -- models.
21:39:06 SQL> --
21:39:06 SQL> 
21:39:06 SQL> -- Do this once and then comment it out.
21:39:06 SQL> -- That makes script go faster.
21:39:06 SQL> -- BEGIN
21:39:06 SQL> -- -- Populate settings table
21:39:06 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:39:06 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:39:06 SQL> --
21:39:06 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:39:06 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:39:06 SQL> --
21:39:06 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:39:06 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:39:06 SQL> --   COMMIT;
21:39:06 SQL> -- END;
21:39:06 SQL> -- /
21:39:06 SQL> 
21:39:06 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:39:06 SQL> 
21:39:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:39:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:39:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:39:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:39:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:39:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:39:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:39:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:39:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:39:07 SQL> 
21:39:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:39:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:39:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:39:07 SQL> 
21:39:07 SQL> --------------------------------
21:39:07 SQL> -- PREPARE BUILD (TRAINING) DATA
21:39:07 SQL> --
21:39:07 SQL> 
21:39:07 SQL> -- 1. Missing Value treatment for all Predictors and
21:39:07 SQL> -- 2. Outlier Treatment and
21:39:07 SQL> -- 3. Normalization are performed below.
21:39:07 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:39:07 SQL> --    normalized here.
21:39:07 SQL> 
21:39:07 SQL> BEGIN
21:39:07   2  	-- Perform missing value treatment for all predictors
21:39:07   3  	-- create miss tables
21:39:07   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:39:07   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:39:07   6  
21:39:07   7  	-- populate miss tables
21:39:07   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:39:07   9  	  miss_table_name => 'svmc_miss_num',
21:39:07  10  	  data_table_name => '&bldtable',
21:39:07  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:39:07  12  
21:39:07  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:39:07  14  	  miss_table_name => 'svmc_miss_cat',
21:39:07  15  	  data_table_name => '&bldtable',
21:39:07  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:39:07  17  
21:39:07  18  	-- xform input data to replace missing values
21:39:07  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:39:07  20  	  miss_table_name => 'svmc_miss_num',
21:39:07  21  	  data_table_name => '&bldtable',
21:39:07  22  	  xform_view_name => 'xformed_build_miss_num');
21:39:07  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:39:07  24  	  miss_table_name => 'svmc_miss_cat',
21:39:07  25  	  data_table_name => '&bldtable',
21:39:07  26  	  xform_view_name => 'xformed_build_miss_cat');
21:39:07  27  
21:39:07  28  	-- Perform outlier treatment.
21:39:07  29  	-- create clip table
21:39:07  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:39:07  31  
21:39:07  32  	-- populate clip table
21:39:07  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:39:07  34  	  clip_table_name => 'svmc_clip',
21:39:07  35  	  data_table_name => '&bldtable',
21:39:07  36  	  tail_frac	  => 0.025,
21:39:07  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:39:07  38  
21:39:07  39  	-- xform input data to winsorized data
21:39:07  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:39:07  41  	  clip_table_name => 'svmc_clip',
21:39:07  42  	  data_table_name => '&bldtable',
21:39:07  43  	  xform_view_name => 'svmc_winsor');
21:39:07  44  
21:39:07  45  	-- create normalization table
21:39:07  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:39:07  47  
21:39:07  48  	-- populate normalization table based on winsorized data
21:39:07  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:39:07  50  	  norm_table_name => 'svmc_norm',
21:39:07  51  	  data_table_name => 'svmc_winsor',
21:39:07  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:39:07  53  
21:39:07  54  	-- normalize the original data
21:39:07  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:39:07  56  	  norm_table_name => 'svmc_norm',
21:39:07  57  	  data_table_name => '&bldtable',
21:39:07  58  	  xform_view_name => 'svmc_build_prep');
21:39:07  59  END;
21:39:07  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.86
21:39:25 SQL> 
21:39:25 SQL> ---------------------
21:39:25 SQL> -- CREATE A NEW MODEL
21:39:25 SQL> --
21:39:25 SQL> -- Cleanup old model with the same name for repeat runs
21:39:25 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:39:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:39:25   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.00
21:39:26 SQL> 
21:39:26 SQL> -- Build a new SVM Model
21:39:26 SQL> BEGIN
21:39:26   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:39:26   3  	  model_name	      => '&model_name',
21:39:26   4  	  mining_function     => dbms_data_mining.classification,
21:39:26   5  	  data_table_name     => 'svmc_build_prep',
21:39:26   6  	  case_id_column_name => '&case_id',
21:39:26   7  	  target_column_name  => '&target',
21:39:26   8  	  settings_table_name => 'svmc_settings');
21:39:26   9  END;
21:39:26  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.09
21:39:51 SQL> 
21:39:51 SQL> -----------------------------------------------------------------------
21:39:51 SQL> --			       APPLY/score THE MODEL
21:39:51 SQL> -----------------------------------------------------------------------
21:39:51 SQL> 
21:39:51 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:39:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:39:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:39:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:39:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:39:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:39:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:39:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:39:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:39:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:39:51 SQL> -----------------------
21:39:51 SQL> -- PREPARE SCORING DATA
21:39:51 SQL> --
21:39:51 SQL> -- If the data for model creation has been prepared, then the data
21:39:51 SQL> -- to be scored using the model must be prepared in the same manner
21:39:51 SQL> -- in order to obtain meaningful results.
21:39:51 SQL> --
21:39:51 SQL> -- 1. Missing Value treatment for all Predictors and
21:39:51 SQL> -- 2. Normalization
21:39:51 SQL> -- No outlier treatment will be performed during test and apply. The
21:39:51 SQL> -- normalization step is sufficient, since the normalization parameters
21:39:51 SQL> -- already capture the effects of outlier treatment done with build data.
21:39:51 SQL> --
21:39:51 SQL> BEGIN
21:39:51   2  	-- Xform Test data to replace missing values
21:39:51   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:39:51   4  	  miss_table_name => 'svmc_miss_num',
21:39:51   5  	  data_table_name => '&scoretable',
21:39:51   6  	  xform_view_name => 'xformed_apply_miss_num');
21:39:51   7  
21:39:51   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:39:51   9  	  miss_table_name => 'svmc_miss_cat',
21:39:51  10  	  data_table_name => '&scoretable',
21:39:51  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:39:51  12  
21:39:51  13  	-- Normalize the data to be scored
21:39:51  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:39:51  15  	  norm_table_name => 'svmc_norm',
21:39:51  16  	  data_table_name => '&scoretable',
21:39:51  17  	  xform_view_name => 'svmc_apply_prep');
21:39:51  18  END;
21:39:51  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
21:39:52 SQL> 
21:39:52 SQL> -- Use same model_name used in score_gattn.sql
21:39:52 SQL> DEFINE model_name = 'forex14'
21:39:52 SQL> 
21:39:52 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:39:52 SQL> 
21:39:52 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:39:52   2  SELECT
21:39:52   3  prdate
21:39:52   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:39:52   5  ,sysdate
21:39:52   6  ,SUBSTR(prdate,1,3)pair
21:39:52   7  ,SUBSTR(prdate,4,19)ydate
21:39:52   8  FROM svmc_apply_prep
21:39:52   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
21:39:52 SQL> @chf_score1day_gattn.sql	2010-12-17 09:40:00
21:39:52 SQL> --
21:39:52 SQL> -- chf_score1day_gattn.sql
21:39:52 SQL> --
21:39:52 SQL> 
21:39:52 SQL> CREATE OR REPLACE VIEW sme AS
21:39:52   2  SELECT
21:39:52   3  'chf'||m.ydate prdate
21:39:52   4  ,NULL gattn
21:39:52   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:39:52   6  ,eur_g00
21:39:52   7  ,eur_g01
21:39:52   8  ,eur_g02
21:39:52   9  ,eur_g03
21:39:52  10  ,eur_g04
21:39:52  11  ,eur_g05
21:39:52  12  ,eur_g06
21:39:52  13  ,eur_g07
21:39:52  14  ,eur_g08
21:39:52  15  ,eur_g09
21:39:52  16  ,eur_g10
21:39:52  17  ,eur_g11
21:39:52  18  ,eur_g12
21:39:52  19  ,eur_g13
21:39:52  20  ,eur_g14
21:39:52  21  ,eur_g15
21:39:52  22  ,eur_g16
21:39:52  23  ,eur_g17
21:39:52  24  ,eur_g18
21:39:52  25  ,eur_g19
21:39:52  26  ,eur_g20
21:39:52  27  ,eur_g21
21:39:52  28  ,eur_g22
21:39:52  29  ,eur_g23
21:39:52  30  ,eur_g24
21:39:52  31  ,eur_g25
21:39:52  32  ,eur_g26
21:39:52  33  ,eur_g27
21:39:52  34  ,eur_g28
21:39:52  35  ,eur_g29
21:39:52  36  ,eur_g30
21:39:52  37  ,eur_g31
21:39:52  38  ,eur_g32
21:39:52  39  ,eur_g33
21:39:52  40  ,eur_g34
21:39:52  41  ,eur_g35
21:39:52  42  ,eur_g36
21:39:52  43  ,eur_g37
21:39:52  44  ,eur_g38
21:39:52  45  ,eur_g39
21:39:52  46  ,eur_g40
21:39:52  47  ,aud_g00
21:39:52  48  ,aud_g01
21:39:52  49  ,aud_g02
21:39:52  50  ,aud_g03
21:39:52  51  ,aud_g04
21:39:52  52  ,aud_g05
21:39:52  53  ,aud_g06
21:39:52  54  ,aud_g07
21:39:52  55  ,aud_g08
21:39:52  56  ,aud_g09
21:39:52  57  ,aud_g10
21:39:52  58  ,aud_g11
21:39:52  59  ,aud_g12
21:39:52  60  ,aud_g13
21:39:52  61  ,aud_g14
21:39:52  62  ,aud_g15
21:39:52  63  ,aud_g16
21:39:52  64  ,aud_g17
21:39:52  65  ,aud_g18
21:39:52  66  ,aud_g19
21:39:52  67  ,aud_g20
21:39:52  68  ,aud_g21
21:39:52  69  ,aud_g22
21:39:52  70  ,aud_g23
21:39:52  71  ,aud_g24
21:39:52  72  ,aud_g25
21:39:52  73  ,aud_g26
21:39:52  74  ,aud_g27
21:39:52  75  ,aud_g28
21:39:52  76  ,aud_g29
21:39:52  77  ,aud_g30
21:39:52  78  ,aud_g31
21:39:52  79  ,aud_g32
21:39:52  80  ,aud_g33
21:39:52  81  ,aud_g34
21:39:52  82  ,aud_g35
21:39:52  83  ,aud_g36
21:39:52  84  ,aud_g37
21:39:52  85  ,aud_g38
21:39:52  86  ,aud_g39
21:39:52  87  ,aud_g40
21:39:52  88  ,gbp_g00
21:39:52  89  ,gbp_g01
21:39:52  90  ,gbp_g02
21:39:52  91  ,gbp_g03
21:39:52  92  ,gbp_g04
21:39:52  93  ,gbp_g05
21:39:52  94  ,gbp_g06
21:39:52  95  ,gbp_g07
21:39:52  96  ,gbp_g08
21:39:52  97  ,gbp_g09
21:39:52  98  ,gbp_g10
21:39:52  99  ,gbp_g11
21:39:52 100  ,gbp_g12
21:39:52 101  ,gbp_g13
21:39:52 102  ,gbp_g14
21:39:52 103  ,gbp_g15
21:39:52 104  ,gbp_g16
21:39:52 105  ,gbp_g17
21:39:52 106  ,gbp_g18
21:39:52 107  ,gbp_g19
21:39:52 108  ,gbp_g20
21:39:52 109  ,gbp_g21
21:39:52 110  ,gbp_g22
21:39:52 111  ,gbp_g23
21:39:52 112  ,gbp_g24
21:39:52 113  ,gbp_g25
21:39:52 114  ,gbp_g26
21:39:52 115  ,gbp_g27
21:39:52 116  ,gbp_g28
21:39:52 117  ,gbp_g29
21:39:52 118  ,gbp_g30
21:39:52 119  ,gbp_g31
21:39:52 120  ,gbp_g32
21:39:52 121  ,gbp_g33
21:39:52 122  ,gbp_g34
21:39:52 123  ,gbp_g35
21:39:52 124  ,gbp_g36
21:39:52 125  ,gbp_g37
21:39:52 126  ,gbp_g38
21:39:52 127  ,gbp_g39
21:39:52 128  ,gbp_g40
21:39:52 129  ,jpy_g00
21:39:52 130  ,jpy_g01
21:39:52 131  ,jpy_g02
21:39:52 132  ,jpy_g03
21:39:52 133  ,jpy_g04
21:39:52 134  ,jpy_g05
21:39:52 135  ,jpy_g06
21:39:52 136  ,jpy_g07
21:39:52 137  ,jpy_g08
21:39:52 138  ,jpy_g09
21:39:52 139  ,jpy_g10
21:39:52 140  ,jpy_g11
21:39:52 141  ,jpy_g12
21:39:52 142  ,jpy_g13
21:39:52 143  ,jpy_g14
21:39:52 144  ,jpy_g15
21:39:52 145  ,jpy_g16
21:39:52 146  ,jpy_g17
21:39:52 147  ,jpy_g18
21:39:52 148  ,jpy_g19
21:39:52 149  ,jpy_g20
21:39:52 150  ,jpy_g21
21:39:52 151  ,jpy_g22
21:39:52 152  ,jpy_g23
21:39:52 153  ,jpy_g24
21:39:52 154  ,jpy_g25
21:39:52 155  ,jpy_g26
21:39:52 156  ,jpy_g27
21:39:52 157  ,jpy_g28
21:39:52 158  ,jpy_g29
21:39:52 159  ,jpy_g30
21:39:52 160  ,jpy_g31
21:39:52 161  ,jpy_g32
21:39:52 162  ,jpy_g33
21:39:52 163  ,jpy_g34
21:39:52 164  ,jpy_g35
21:39:52 165  ,jpy_g36
21:39:52 166  ,jpy_g37
21:39:52 167  ,jpy_g38
21:39:52 168  ,jpy_g39
21:39:52 169  ,jpy_g40
21:39:52 170  ,cad_g00
21:39:52 171  ,cad_g01
21:39:52 172  ,cad_g02
21:39:52 173  ,cad_g03
21:39:52 174  ,cad_g04
21:39:52 175  ,cad_g05
21:39:52 176  ,cad_g06
21:39:52 177  ,cad_g07
21:39:52 178  ,cad_g08
21:39:52 179  ,cad_g09
21:39:52 180  ,cad_g10
21:39:52 181  ,cad_g11
21:39:52 182  ,cad_g12
21:39:52 183  ,cad_g13
21:39:52 184  ,cad_g14
21:39:52 185  ,cad_g15
21:39:52 186  ,cad_g16
21:39:52 187  ,cad_g17
21:39:52 188  ,cad_g18
21:39:52 189  ,cad_g19
21:39:52 190  ,cad_g20
21:39:52 191  ,cad_g21
21:39:52 192  ,cad_g22
21:39:52 193  ,cad_g23
21:39:52 194  ,cad_g24
21:39:52 195  ,cad_g25
21:39:52 196  ,cad_g26
21:39:52 197  ,cad_g27
21:39:52 198  ,cad_g28
21:39:52 199  ,cad_g29
21:39:52 200  ,cad_g30
21:39:52 201  ,cad_g31
21:39:52 202  ,cad_g32
21:39:52 203  ,cad_g33
21:39:52 204  ,cad_g34
21:39:52 205  ,cad_g35
21:39:52 206  ,cad_g36
21:39:52 207  ,cad_g37
21:39:52 208  ,cad_g38
21:39:52 209  ,cad_g39
21:39:52 210  ,cad_g40
21:39:52 211  ,chf_g00
21:39:52 212  ,chf_g01
21:39:52 213  ,chf_g02
21:39:52 214  ,chf_g03
21:39:52 215  ,chf_g04
21:39:52 216  ,chf_g05
21:39:52 217  ,chf_g06
21:39:52 218  ,chf_g07
21:39:52 219  ,chf_g08
21:39:52 220  ,chf_g09
21:39:52 221  ,chf_g10
21:39:52 222  ,chf_g11
21:39:52 223  ,chf_g12
21:39:52 224  ,chf_g13
21:39:52 225  ,chf_g14
21:39:52 226  ,chf_g15
21:39:52 227  ,chf_g16
21:39:52 228  ,chf_g17
21:39:52 229  ,chf_g18
21:39:52 230  ,chf_g19
21:39:52 231  ,chf_g20
21:39:52 232  ,chf_g21
21:39:52 233  ,chf_g22
21:39:52 234  ,chf_g23
21:39:52 235  ,chf_g24
21:39:52 236  ,chf_g25
21:39:52 237  ,chf_g26
21:39:52 238  ,chf_g27
21:39:52 239  ,chf_g28
21:39:52 240  ,chf_g29
21:39:52 241  ,chf_g30
21:39:52 242  ,chf_g31
21:39:52 243  ,chf_g32
21:39:52 244  ,chf_g33
21:39:52 245  ,chf_g34
21:39:52 246  ,chf_g35
21:39:52 247  ,chf_g36
21:39:52 248  ,chf_g37
21:39:52 249  ,chf_g38
21:39:52 250  ,chf_g39
21:39:52 251  ,chf_g40
21:39:52 252  FROM chf_ms14 m
21:39:52 253  WHERE m.ydate = '&1'||' '||'&2'
21:39:52 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'09:40:00'

View created.

Elapsed: 00:00:00.11
21:39:52 SQL> 
21:39:52 SQL> -- rpt
21:39:52 SQL> -- We should see just 1 row:
21:39:52 SQL> 
21:39:52 SQL> SELECT COUNT(prdate) FROM sme
21:39:52   2  
21:39:52 SQL> -- Build the model:
21:39:52 SQL> CREATE OR REPLACE VIEW bme AS
21:39:52   2  SELECT
21:39:52   3  'chf'||m.ydate prdate
21:39:52   4  ,gattn
21:39:52   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:39:52   6  ,eur_g00
21:39:52   7  ,eur_g01
21:39:52   8  ,eur_g02
21:39:52   9  ,eur_g03
21:39:52  10  ,eur_g04
21:39:52  11  ,eur_g05
21:39:52  12  ,eur_g06
21:39:52  13  ,eur_g07
21:39:52  14  ,eur_g08
21:39:52  15  ,eur_g09
21:39:52  16  ,eur_g10
21:39:52  17  ,eur_g11
21:39:52  18  ,eur_g12
21:39:52  19  ,eur_g13
21:39:52  20  ,eur_g14
21:39:52  21  ,eur_g15
21:39:52  22  ,eur_g16
21:39:52  23  ,eur_g17
21:39:52  24  ,eur_g18
21:39:52  25  ,eur_g19
21:39:52  26  ,eur_g20
21:39:52  27  ,eur_g21
21:39:52  28  ,eur_g22
21:39:52  29  ,eur_g23
21:39:52  30  ,eur_g24
21:39:52  31  ,eur_g25
21:39:52  32  ,eur_g26
21:39:52  33  ,eur_g27
21:39:52  34  ,eur_g28
21:39:52  35  ,eur_g29
21:39:52  36  ,eur_g30
21:39:52  37  ,eur_g31
21:39:52  38  ,eur_g32
21:39:52  39  ,eur_g33
21:39:52  40  ,eur_g34
21:39:52  41  ,eur_g35
21:39:52  42  ,eur_g36
21:39:52  43  ,eur_g37
21:39:52  44  ,eur_g38
21:39:52  45  ,eur_g39
21:39:52  46  ,eur_g40
21:39:52  47  ,aud_g00
21:39:52  48  ,aud_g01
21:39:52  49  ,aud_g02
21:39:52  50  ,aud_g03
21:39:52  51  ,aud_g04
21:39:52  52  ,aud_g05
21:39:52  53  ,aud_g06
21:39:52  54  ,aud_g07
21:39:52  55  ,aud_g08
21:39:52  56  ,aud_g09
21:39:52  57  ,aud_g10
21:39:52  58  ,aud_g11
21:39:52  59  ,aud_g12
21:39:52  60  ,aud_g13
21:39:52  61  ,aud_g14
21:39:52  62  ,aud_g15
21:39:52  63  ,aud_g16
21:39:52  64  ,aud_g17
21:39:52  65  ,aud_g18
21:39:52  66  ,aud_g19
21:39:52  67  ,aud_g20
21:39:52  68  ,aud_g21
21:39:52  69  ,aud_g22
21:39:52  70  ,aud_g23
21:39:52  71  ,aud_g24
21:39:52  72  ,aud_g25
21:39:52  73  ,aud_g26
21:39:52  74  ,aud_g27
21:39:52  75  ,aud_g28
21:39:52  76  ,aud_g29
21:39:52  77  ,aud_g30
21:39:52  78  ,aud_g31
21:39:52  79  ,aud_g32
21:39:52  80  ,aud_g33
21:39:52  81  ,aud_g34
21:39:52  82  ,aud_g35
21:39:52  83  ,aud_g36
21:39:52  84  ,aud_g37
21:39:52  85  ,aud_g38
21:39:52  86  ,aud_g39
21:39:52  87  ,aud_g40
21:39:52  88  ,gbp_g00
21:39:52  89  ,gbp_g01
21:39:52  90  ,gbp_g02
21:39:52  91  ,gbp_g03
21:39:52  92  ,gbp_g04
21:39:52  93  ,gbp_g05
21:39:52  94  ,gbp_g06
21:39:52  95  ,gbp_g07
21:39:52  96  ,gbp_g08
21:39:52  97  ,gbp_g09
21:39:52  98  ,gbp_g10
21:39:52  99  ,gbp_g11
21:39:52 100  ,gbp_g12
21:39:52 101  ,gbp_g13
21:39:52 102  ,gbp_g14
21:39:52 103  ,gbp_g15
21:39:52 104  ,gbp_g16
21:39:52 105  ,gbp_g17
21:39:52 106  ,gbp_g18
21:39:52 107  ,gbp_g19
21:39:52 108  ,gbp_g20
21:39:52 109  ,gbp_g21
21:39:52 110  ,gbp_g22
21:39:52 111  ,gbp_g23
21:39:52 112  ,gbp_g24
21:39:52 113  ,gbp_g25
21:39:52 114  ,gbp_g26
21:39:52 115  ,gbp_g27
21:39:52 116  ,gbp_g28
21:39:52 117  ,gbp_g29
21:39:52 118  ,gbp_g30
21:39:52 119  ,gbp_g31
21:39:52 120  ,gbp_g32
21:39:52 121  ,gbp_g33
21:39:52 122  ,gbp_g34
21:39:52 123  ,gbp_g35
21:39:52 124  ,gbp_g36
21:39:52 125  ,gbp_g37
21:39:52 126  ,gbp_g38
21:39:52 127  ,gbp_g39
21:39:52 128  ,gbp_g40
21:39:52 129  ,jpy_g00
21:39:52 130  ,jpy_g01
21:39:52 131  ,jpy_g02
21:39:52 132  ,jpy_g03
21:39:52 133  ,jpy_g04
21:39:52 134  ,jpy_g05
21:39:52 135  ,jpy_g06
21:39:52 136  ,jpy_g07
21:39:52 137  ,jpy_g08
21:39:52 138  ,jpy_g09
21:39:52 139  ,jpy_g10
21:39:52 140  ,jpy_g11
21:39:52 141  ,jpy_g12
21:39:52 142  ,jpy_g13
21:39:52 143  ,jpy_g14
21:39:52 144  ,jpy_g15
21:39:52 145  ,jpy_g16
21:39:52 146  ,jpy_g17
21:39:52 147  ,jpy_g18
21:39:52 148  ,jpy_g19
21:39:52 149  ,jpy_g20
21:39:52 150  ,jpy_g21
21:39:52 151  ,jpy_g22
21:39:52 152  ,jpy_g23
21:39:52 153  ,jpy_g24
21:39:52 154  ,jpy_g25
21:39:52 155  ,jpy_g26
21:39:52 156  ,jpy_g27
21:39:52 157  ,jpy_g28
21:39:52 158  ,jpy_g29
21:39:52 159  ,jpy_g30
21:39:52 160  ,jpy_g31
21:39:52 161  ,jpy_g32
21:39:52 162  ,jpy_g33
21:39:52 163  ,jpy_g34
21:39:52 164  ,jpy_g35
21:39:52 165  ,jpy_g36
21:39:52 166  ,jpy_g37
21:39:52 167  ,jpy_g38
21:39:52 168  ,jpy_g39
21:39:52 169  ,jpy_g40
21:39:52 170  ,cad_g00
21:39:52 171  ,cad_g01
21:39:52 172  ,cad_g02
21:39:52 173  ,cad_g03
21:39:52 174  ,cad_g04
21:39:52 175  ,cad_g05
21:39:52 176  ,cad_g06
21:39:52 177  ,cad_g07
21:39:52 178  ,cad_g08
21:39:52 179  ,cad_g09
21:39:52 180  ,cad_g10
21:39:52 181  ,cad_g11
21:39:52 182  ,cad_g12
21:39:52 183  ,cad_g13
21:39:52 184  ,cad_g14
21:39:52 185  ,cad_g15
21:39:52 186  ,cad_g16
21:39:52 187  ,cad_g17
21:39:52 188  ,cad_g18
21:39:52 189  ,cad_g19
21:39:52 190  ,cad_g20
21:39:52 191  ,cad_g21
21:39:52 192  ,cad_g22
21:39:52 193  ,cad_g23
21:39:52 194  ,cad_g24
21:39:52 195  ,cad_g25
21:39:52 196  ,cad_g26
21:39:52 197  ,cad_g27
21:39:52 198  ,cad_g28
21:39:52 199  ,cad_g29
21:39:52 200  ,cad_g30
21:39:52 201  ,cad_g31
21:39:52 202  ,cad_g32
21:39:52 203  ,cad_g33
21:39:52 204  ,cad_g34
21:39:52 205  ,cad_g35
21:39:52 206  ,cad_g36
21:39:52 207  ,cad_g37
21:39:52 208  ,cad_g38
21:39:52 209  ,cad_g39
21:39:52 210  ,cad_g40
21:39:52 211  ,chf_g00
21:39:52 212  ,chf_g01
21:39:52 213  ,chf_g02
21:39:52 214  ,chf_g03
21:39:52 215  ,chf_g04
21:39:52 216  ,chf_g05
21:39:52 217  ,chf_g06
21:39:52 218  ,chf_g07
21:39:52 219  ,chf_g08
21:39:52 220  ,chf_g09
21:39:52 221  ,chf_g10
21:39:52 222  ,chf_g11
21:39:52 223  ,chf_g12
21:39:52 224  ,chf_g13
21:39:52 225  ,chf_g14
21:39:52 226  ,chf_g15
21:39:52 227  ,chf_g16
21:39:52 228  ,chf_g17
21:39:52 229  ,chf_g18
21:39:52 230  ,chf_g19
21:39:52 231  ,chf_g20
21:39:52 232  ,chf_g21
21:39:52 233  ,chf_g22
21:39:52 234  ,chf_g23
21:39:52 235  ,chf_g24
21:39:52 236  ,chf_g25
21:39:52 237  ,chf_g26
21:39:52 238  ,chf_g27
21:39:52 239  ,chf_g28
21:39:52 240  ,chf_g29
21:39:52 241  ,chf_g30
21:39:52 242  ,chf_g31
21:39:52 243  ,chf_g32
21:39:52 244  ,chf_g33
21:39:52 245  ,chf_g34
21:39:52 246  ,chf_g35
21:39:52 247  ,chf_g36
21:39:52 248  ,chf_g37
21:39:52 249  ,chf_g38
21:39:52 250  ,chf_g39
21:39:52 251  ,chf_g40
21:39:52 252  FROM chf_ms14 m
21:39:52 253  WHERE gattn IN('nup','up')
21:39:52 254  AND 1+m.ydate < '&1'||' '||'&2'
21:39:52 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'09:40:00'

View created.

Elapsed: 00:00:00.13
21:39:52 SQL> 
21:39:52 SQL> -- rpt
21:39:52 SQL> 
21:39:52 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:39:52   2  
21:39:52 SQL> SELECT MAX(prdate) FROM bme
21:39:52   2  
21:39:52 SQL> -- Now build model from bme and score sme
21:39:52 SQL> @score1gattn.sql
21:39:52 SQL> -- score1gattn.sql
21:39:52 SQL> 
21:39:52 SQL> -- Does the 1st SVM score
21:39:52 SQL> 
21:39:52 SQL> -- Fill up svmc_apply_prep
21:39:52 SQL> @score_gattn.sql
21:39:52 SQL> --
21:39:52 SQL> -- score_gattn.sql
21:39:52 SQL> --
21:39:52 SQL> 
21:39:52 SQL> -- usage: score_gattn.sql
21:39:52 SQL> 
21:39:52 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:39:52 SQL> 
21:39:52 SQL> DEFINE target	= 'gattn'
21:39:52 SQL> DEFINE model_name = 'forex14'
21:39:52 SQL> DEFINE bldtable	= 'bme'
21:39:52 SQL> DEFINE scoretable = 'sme'
21:39:52 SQL> DEFINE case_id	= 'prdate'
21:39:52 SQL> 
21:39:52 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:39:52 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:39:52 SQL> 
21:39:52 SQL> -- Builds an SVM model using pl/sql.
21:39:52 SQL> 
21:39:52 SQL> -----------------------------------------------------------------------
21:39:52 SQL> --			    BUILD THE MODEL
21:39:52 SQL> -----------------------------------------------------------------------
21:39:52 SQL> 
21:39:52 SQL> -- Cleanup old build data preparation objects for repeat runs
21:39:52 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:39:52 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:39:52 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:39:52 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:39:52 SQL> 
21:39:52 SQL> 
21:39:52 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:39:52 SQL> --
21:39:52 SQL> -- DROP	TABLE svmc_settings ;
21:39:52 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:39:52 SQL> -- DELETE svmc_settings;
21:39:52 SQL> 
21:39:52 SQL> -- The default classification algorithm is Naive Bayes. So override
21:39:52 SQL> -- this choice to SVM using a settings table.
21:39:52 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:39:52 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:39:52 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:39:52 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:39:52 SQL> -- models.
21:39:52 SQL> --
21:39:52 SQL> 
21:39:52 SQL> -- Do this once and then comment it out.
21:39:52 SQL> -- That makes script go faster.
21:39:52 SQL> -- BEGIN
21:39:52 SQL> -- -- Populate settings table
21:39:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:39:52 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:39:52 SQL> --
21:39:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:39:52 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:39:52 SQL> --
21:39:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:39:52 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:39:52 SQL> --   COMMIT;
21:39:52 SQL> -- END;
21:39:52 SQL> -- /
21:39:52 SQL> 
21:39:52 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:39:52 SQL> 
21:39:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:39:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:39:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:39:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:39:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:39:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:39:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:39:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:39:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:39:53 SQL> 
21:39:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:39:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:39:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:39:53 SQL> 
21:39:53 SQL> --------------------------------
21:39:53 SQL> -- PREPARE BUILD (TRAINING) DATA
21:39:53 SQL> --
21:39:53 SQL> 
21:39:53 SQL> -- 1. Missing Value treatment for all Predictors and
21:39:53 SQL> -- 2. Outlier Treatment and
21:39:53 SQL> -- 3. Normalization are performed below.
21:39:53 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:39:53 SQL> --    normalized here.
21:39:53 SQL> 
21:39:53 SQL> BEGIN
21:39:53   2  	-- Perform missing value treatment for all predictors
21:39:53   3  	-- create miss tables
21:39:53   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:39:53   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:39:53   6  
21:39:53   7  	-- populate miss tables
21:39:53   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:39:53   9  	  miss_table_name => 'svmc_miss_num',
21:39:53  10  	  data_table_name => '&bldtable',
21:39:53  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:39:53  12  
21:39:53  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:39:53  14  	  miss_table_name => 'svmc_miss_cat',
21:39:53  15  	  data_table_name => '&bldtable',
21:39:53  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:39:53  17  
21:39:53  18  	-- xform input data to replace missing values
21:39:53  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:39:53  20  	  miss_table_name => 'svmc_miss_num',
21:39:53  21  	  data_table_name => '&bldtable',
21:39:53  22  	  xform_view_name => 'xformed_build_miss_num');
21:39:53  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:39:53  24  	  miss_table_name => 'svmc_miss_cat',
21:39:53  25  	  data_table_name => '&bldtable',
21:39:53  26  	  xform_view_name => 'xformed_build_miss_cat');
21:39:53  27  
21:39:53  28  	-- Perform outlier treatment.
21:39:53  29  	-- create clip table
21:39:53  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:39:53  31  
21:39:53  32  	-- populate clip table
21:39:53  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:39:53  34  	  clip_table_name => 'svmc_clip',
21:39:53  35  	  data_table_name => '&bldtable',
21:39:53  36  	  tail_frac	  => 0.025,
21:39:53  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:39:53  38  
21:39:53  39  	-- xform input data to winsorized data
21:39:53  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:39:53  41  	  clip_table_name => 'svmc_clip',
21:39:53  42  	  data_table_name => '&bldtable',
21:39:53  43  	  xform_view_name => 'svmc_winsor');
21:39:53  44  
21:39:53  45  	-- create normalization table
21:39:53  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:39:53  47  
21:39:53  48  	-- populate normalization table based on winsorized data
21:39:53  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:39:53  50  	  norm_table_name => 'svmc_norm',
21:39:53  51  	  data_table_name => 'svmc_winsor',
21:39:53  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:39:53  53  
21:39:53  54  	-- normalize the original data
21:39:53  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:39:53  56  	  norm_table_name => 'svmc_norm',
21:39:53  57  	  data_table_name => '&bldtable',
21:39:53  58  	  xform_view_name => 'svmc_build_prep');
21:39:53  59  END;
21:39:53  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.94
21:40:11 SQL> 
21:40:11 SQL> ---------------------
21:40:11 SQL> -- CREATE A NEW MODEL
21:40:11 SQL> --
21:40:11 SQL> -- Cleanup old model with the same name for repeat runs
21:40:11 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:40:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:40:11   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
21:40:12 SQL> 
21:40:12 SQL> -- Build a new SVM Model
21:40:12 SQL> BEGIN
21:40:12   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:40:12   3  	  model_name	      => '&model_name',
21:40:12   4  	  mining_function     => dbms_data_mining.classification,
21:40:12   5  	  data_table_name     => 'svmc_build_prep',
21:40:12   6  	  case_id_column_name => '&case_id',
21:40:12   7  	  target_column_name  => '&target',
21:40:12   8  	  settings_table_name => 'svmc_settings');
21:40:12   9  END;
21:40:12  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.95
21:40:38 SQL> 
21:40:38 SQL> -----------------------------------------------------------------------
21:40:38 SQL> --			       APPLY/score THE MODEL
21:40:38 SQL> -----------------------------------------------------------------------
21:40:38 SQL> 
21:40:38 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:40:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:40:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:40:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:40:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:40:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:40:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:40:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:40:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:40:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:40:38 SQL> -----------------------
21:40:38 SQL> -- PREPARE SCORING DATA
21:40:38 SQL> --
21:40:38 SQL> -- If the data for model creation has been prepared, then the data
21:40:38 SQL> -- to be scored using the model must be prepared in the same manner
21:40:38 SQL> -- in order to obtain meaningful results.
21:40:38 SQL> --
21:40:38 SQL> -- 1. Missing Value treatment for all Predictors and
21:40:38 SQL> -- 2. Normalization
21:40:38 SQL> -- No outlier treatment will be performed during test and apply. The
21:40:38 SQL> -- normalization step is sufficient, since the normalization parameters
21:40:38 SQL> -- already capture the effects of outlier treatment done with build data.
21:40:38 SQL> --
21:40:38 SQL> BEGIN
21:40:38   2  	-- Xform Test data to replace missing values
21:40:38   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:40:38   4  	  miss_table_name => 'svmc_miss_num',
21:40:38   5  	  data_table_name => '&scoretable',
21:40:38   6  	  xform_view_name => 'xformed_apply_miss_num');
21:40:38   7  
21:40:38   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:40:38   9  	  miss_table_name => 'svmc_miss_cat',
21:40:38  10  	  data_table_name => '&scoretable',
21:40:38  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:40:38  12  
21:40:38  13  	-- Normalize the data to be scored
21:40:38  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:40:38  15  	  norm_table_name => 'svmc_norm',
21:40:38  16  	  data_table_name => '&scoretable',
21:40:38  17  	  xform_view_name => 'svmc_apply_prep');
21:40:38  18  END;
21:40:38  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
21:40:39 SQL> 
21:40:39 SQL> -- Use same model_name used in score_gattn.sql
21:40:39 SQL> DEFINE model_name = 'forex14'
21:40:39 SQL> 
21:40:39 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:40:39 SQL> 
21:40:39 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:40:39   2  SELECT
21:40:39   3  prdate
21:40:39   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:40:39   5  ,sysdate
21:40:39   6  ,SUBSTR(prdate,1,3)pair
21:40:39   7  ,SUBSTR(prdate,4,19)ydate
21:40:39   8  FROM svmc_apply_prep
21:40:39   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:40:39 SQL> @chf_score1day_gattn.sql	2010-12-17 09:35:00
21:40:39 SQL> --
21:40:39 SQL> -- chf_score1day_gattn.sql
21:40:39 SQL> --
21:40:39 SQL> 
21:40:39 SQL> CREATE OR REPLACE VIEW sme AS
21:40:39   2  SELECT
21:40:39   3  'chf'||m.ydate prdate
21:40:39   4  ,NULL gattn
21:40:39   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:40:39   6  ,eur_g00
21:40:39   7  ,eur_g01
21:40:39   8  ,eur_g02
21:40:39   9  ,eur_g03
21:40:39  10  ,eur_g04
21:40:39  11  ,eur_g05
21:40:39  12  ,eur_g06
21:40:39  13  ,eur_g07
21:40:39  14  ,eur_g08
21:40:39  15  ,eur_g09
21:40:39  16  ,eur_g10
21:40:39  17  ,eur_g11
21:40:39  18  ,eur_g12
21:40:39  19  ,eur_g13
21:40:39  20  ,eur_g14
21:40:39  21  ,eur_g15
21:40:39  22  ,eur_g16
21:40:39  23  ,eur_g17
21:40:39  24  ,eur_g18
21:40:39  25  ,eur_g19
21:40:39  26  ,eur_g20
21:40:39  27  ,eur_g21
21:40:39  28  ,eur_g22
21:40:39  29  ,eur_g23
21:40:39  30  ,eur_g24
21:40:39  31  ,eur_g25
21:40:39  32  ,eur_g26
21:40:39  33  ,eur_g27
21:40:39  34  ,eur_g28
21:40:39  35  ,eur_g29
21:40:39  36  ,eur_g30
21:40:39  37  ,eur_g31
21:40:39  38  ,eur_g32
21:40:39  39  ,eur_g33
21:40:39  40  ,eur_g34
21:40:39  41  ,eur_g35
21:40:39  42  ,eur_g36
21:40:39  43  ,eur_g37
21:40:39  44  ,eur_g38
21:40:39  45  ,eur_g39
21:40:39  46  ,eur_g40
21:40:39  47  ,aud_g00
21:40:39  48  ,aud_g01
21:40:39  49  ,aud_g02
21:40:39  50  ,aud_g03
21:40:39  51  ,aud_g04
21:40:39  52  ,aud_g05
21:40:39  53  ,aud_g06
21:40:39  54  ,aud_g07
21:40:39  55  ,aud_g08
21:40:39  56  ,aud_g09
21:40:39  57  ,aud_g10
21:40:39  58  ,aud_g11
21:40:39  59  ,aud_g12
21:40:39  60  ,aud_g13
21:40:39  61  ,aud_g14
21:40:39  62  ,aud_g15
21:40:39  63  ,aud_g16
21:40:39  64  ,aud_g17
21:40:39  65  ,aud_g18
21:40:39  66  ,aud_g19
21:40:39  67  ,aud_g20
21:40:39  68  ,aud_g21
21:40:39  69  ,aud_g22
21:40:39  70  ,aud_g23
21:40:39  71  ,aud_g24
21:40:39  72  ,aud_g25
21:40:39  73  ,aud_g26
21:40:39  74  ,aud_g27
21:40:39  75  ,aud_g28
21:40:39  76  ,aud_g29
21:40:39  77  ,aud_g30
21:40:39  78  ,aud_g31
21:40:39  79  ,aud_g32
21:40:39  80  ,aud_g33
21:40:39  81  ,aud_g34
21:40:39  82  ,aud_g35
21:40:39  83  ,aud_g36
21:40:39  84  ,aud_g37
21:40:39  85  ,aud_g38
21:40:39  86  ,aud_g39
21:40:39  87  ,aud_g40
21:40:39  88  ,gbp_g00
21:40:39  89  ,gbp_g01
21:40:39  90  ,gbp_g02
21:40:39  91  ,gbp_g03
21:40:39  92  ,gbp_g04
21:40:39  93  ,gbp_g05
21:40:39  94  ,gbp_g06
21:40:39  95  ,gbp_g07
21:40:39  96  ,gbp_g08
21:40:39  97  ,gbp_g09
21:40:39  98  ,gbp_g10
21:40:39  99  ,gbp_g11
21:40:39 100  ,gbp_g12
21:40:39 101  ,gbp_g13
21:40:39 102  ,gbp_g14
21:40:39 103  ,gbp_g15
21:40:39 104  ,gbp_g16
21:40:39 105  ,gbp_g17
21:40:39 106  ,gbp_g18
21:40:39 107  ,gbp_g19
21:40:39 108  ,gbp_g20
21:40:39 109  ,gbp_g21
21:40:39 110  ,gbp_g22
21:40:39 111  ,gbp_g23
21:40:39 112  ,gbp_g24
21:40:39 113  ,gbp_g25
21:40:39 114  ,gbp_g26
21:40:39 115  ,gbp_g27
21:40:39 116  ,gbp_g28
21:40:39 117  ,gbp_g29
21:40:39 118  ,gbp_g30
21:40:39 119  ,gbp_g31
21:40:39 120  ,gbp_g32
21:40:39 121  ,gbp_g33
21:40:39 122  ,gbp_g34
21:40:39 123  ,gbp_g35
21:40:39 124  ,gbp_g36
21:40:39 125  ,gbp_g37
21:40:39 126  ,gbp_g38
21:40:39 127  ,gbp_g39
21:40:39 128  ,gbp_g40
21:40:39 129  ,jpy_g00
21:40:39 130  ,jpy_g01
21:40:39 131  ,jpy_g02
21:40:39 132  ,jpy_g03
21:40:39 133  ,jpy_g04
21:40:39 134  ,jpy_g05
21:40:39 135  ,jpy_g06
21:40:39 136  ,jpy_g07
21:40:39 137  ,jpy_g08
21:40:39 138  ,jpy_g09
21:40:39 139  ,jpy_g10
21:40:39 140  ,jpy_g11
21:40:39 141  ,jpy_g12
21:40:39 142  ,jpy_g13
21:40:39 143  ,jpy_g14
21:40:39 144  ,jpy_g15
21:40:39 145  ,jpy_g16
21:40:39 146  ,jpy_g17
21:40:39 147  ,jpy_g18
21:40:39 148  ,jpy_g19
21:40:39 149  ,jpy_g20
21:40:39 150  ,jpy_g21
21:40:39 151  ,jpy_g22
21:40:39 152  ,jpy_g23
21:40:39 153  ,jpy_g24
21:40:39 154  ,jpy_g25
21:40:39 155  ,jpy_g26
21:40:39 156  ,jpy_g27
21:40:39 157  ,jpy_g28
21:40:39 158  ,jpy_g29
21:40:39 159  ,jpy_g30
21:40:39 160  ,jpy_g31
21:40:39 161  ,jpy_g32
21:40:39 162  ,jpy_g33
21:40:39 163  ,jpy_g34
21:40:39 164  ,jpy_g35
21:40:39 165  ,jpy_g36
21:40:39 166  ,jpy_g37
21:40:39 167  ,jpy_g38
21:40:39 168  ,jpy_g39
21:40:39 169  ,jpy_g40
21:40:39 170  ,cad_g00
21:40:39 171  ,cad_g01
21:40:39 172  ,cad_g02
21:40:39 173  ,cad_g03
21:40:39 174  ,cad_g04
21:40:39 175  ,cad_g05
21:40:39 176  ,cad_g06
21:40:39 177  ,cad_g07
21:40:39 178  ,cad_g08
21:40:39 179  ,cad_g09
21:40:39 180  ,cad_g10
21:40:39 181  ,cad_g11
21:40:39 182  ,cad_g12
21:40:39 183  ,cad_g13
21:40:39 184  ,cad_g14
21:40:39 185  ,cad_g15
21:40:39 186  ,cad_g16
21:40:39 187  ,cad_g17
21:40:39 188  ,cad_g18
21:40:39 189  ,cad_g19
21:40:39 190  ,cad_g20
21:40:39 191  ,cad_g21
21:40:39 192  ,cad_g22
21:40:39 193  ,cad_g23
21:40:39 194  ,cad_g24
21:40:39 195  ,cad_g25
21:40:39 196  ,cad_g26
21:40:39 197  ,cad_g27
21:40:39 198  ,cad_g28
21:40:39 199  ,cad_g29
21:40:39 200  ,cad_g30
21:40:39 201  ,cad_g31
21:40:39 202  ,cad_g32
21:40:39 203  ,cad_g33
21:40:39 204  ,cad_g34
21:40:39 205  ,cad_g35
21:40:39 206  ,cad_g36
21:40:39 207  ,cad_g37
21:40:39 208  ,cad_g38
21:40:39 209  ,cad_g39
21:40:39 210  ,cad_g40
21:40:39 211  ,chf_g00
21:40:39 212  ,chf_g01
21:40:39 213  ,chf_g02
21:40:39 214  ,chf_g03
21:40:39 215  ,chf_g04
21:40:39 216  ,chf_g05
21:40:39 217  ,chf_g06
21:40:39 218  ,chf_g07
21:40:39 219  ,chf_g08
21:40:39 220  ,chf_g09
21:40:39 221  ,chf_g10
21:40:39 222  ,chf_g11
21:40:39 223  ,chf_g12
21:40:39 224  ,chf_g13
21:40:39 225  ,chf_g14
21:40:39 226  ,chf_g15
21:40:39 227  ,chf_g16
21:40:39 228  ,chf_g17
21:40:39 229  ,chf_g18
21:40:39 230  ,chf_g19
21:40:39 231  ,chf_g20
21:40:39 232  ,chf_g21
21:40:39 233  ,chf_g22
21:40:39 234  ,chf_g23
21:40:39 235  ,chf_g24
21:40:39 236  ,chf_g25
21:40:39 237  ,chf_g26
21:40:39 238  ,chf_g27
21:40:39 239  ,chf_g28
21:40:39 240  ,chf_g29
21:40:39 241  ,chf_g30
21:40:39 242  ,chf_g31
21:40:39 243  ,chf_g32
21:40:39 244  ,chf_g33
21:40:39 245  ,chf_g34
21:40:39 246  ,chf_g35
21:40:39 247  ,chf_g36
21:40:39 248  ,chf_g37
21:40:39 249  ,chf_g38
21:40:39 250  ,chf_g39
21:40:39 251  ,chf_g40
21:40:39 252  FROM chf_ms14 m
21:40:39 253  WHERE m.ydate = '&1'||' '||'&2'
21:40:39 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'09:35:00'

View created.

Elapsed: 00:00:00.11
21:40:39 SQL> 
21:40:39 SQL> -- rpt
21:40:39 SQL> -- We should see just 1 row:
21:40:39 SQL> 
21:40:39 SQL> SELECT COUNT(prdate) FROM sme
21:40:39   2  
21:40:39 SQL> -- Build the model:
21:40:39 SQL> CREATE OR REPLACE VIEW bme AS
21:40:39   2  SELECT
21:40:39   3  'chf'||m.ydate prdate
21:40:39   4  ,gattn
21:40:39   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:40:39   6  ,eur_g00
21:40:39   7  ,eur_g01
21:40:39   8  ,eur_g02
21:40:39   9  ,eur_g03
21:40:39  10  ,eur_g04
21:40:39  11  ,eur_g05
21:40:39  12  ,eur_g06
21:40:39  13  ,eur_g07
21:40:39  14  ,eur_g08
21:40:39  15  ,eur_g09
21:40:39  16  ,eur_g10
21:40:39  17  ,eur_g11
21:40:39  18  ,eur_g12
21:40:39  19  ,eur_g13
21:40:39  20  ,eur_g14
21:40:39  21  ,eur_g15
21:40:39  22  ,eur_g16
21:40:39  23  ,eur_g17
21:40:39  24  ,eur_g18
21:40:39  25  ,eur_g19
21:40:39  26  ,eur_g20
21:40:39  27  ,eur_g21
21:40:39  28  ,eur_g22
21:40:39  29  ,eur_g23
21:40:39  30  ,eur_g24
21:40:39  31  ,eur_g25
21:40:39  32  ,eur_g26
21:40:39  33  ,eur_g27
21:40:39  34  ,eur_g28
21:40:39  35  ,eur_g29
21:40:39  36  ,eur_g30
21:40:39  37  ,eur_g31
21:40:39  38  ,eur_g32
21:40:39  39  ,eur_g33
21:40:39  40  ,eur_g34
21:40:39  41  ,eur_g35
21:40:39  42  ,eur_g36
21:40:39  43  ,eur_g37
21:40:39  44  ,eur_g38
21:40:39  45  ,eur_g39
21:40:39  46  ,eur_g40
21:40:39  47  ,aud_g00
21:40:39  48  ,aud_g01
21:40:39  49  ,aud_g02
21:40:39  50  ,aud_g03
21:40:39  51  ,aud_g04
21:40:39  52  ,aud_g05
21:40:39  53  ,aud_g06
21:40:39  54  ,aud_g07
21:40:39  55  ,aud_g08
21:40:39  56  ,aud_g09
21:40:39  57  ,aud_g10
21:40:39  58  ,aud_g11
21:40:39  59  ,aud_g12
21:40:39  60  ,aud_g13
21:40:39  61  ,aud_g14
21:40:39  62  ,aud_g15
21:40:39  63  ,aud_g16
21:40:39  64  ,aud_g17
21:40:39  65  ,aud_g18
21:40:39  66  ,aud_g19
21:40:39  67  ,aud_g20
21:40:39  68  ,aud_g21
21:40:39  69  ,aud_g22
21:40:39  70  ,aud_g23
21:40:39  71  ,aud_g24
21:40:39  72  ,aud_g25
21:40:39  73  ,aud_g26
21:40:39  74  ,aud_g27
21:40:39  75  ,aud_g28
21:40:39  76  ,aud_g29
21:40:39  77  ,aud_g30
21:40:39  78  ,aud_g31
21:40:39  79  ,aud_g32
21:40:39  80  ,aud_g33
21:40:39  81  ,aud_g34
21:40:39  82  ,aud_g35
21:40:39  83  ,aud_g36
21:40:39  84  ,aud_g37
21:40:39  85  ,aud_g38
21:40:39  86  ,aud_g39
21:40:39  87  ,aud_g40
21:40:39  88  ,gbp_g00
21:40:39  89  ,gbp_g01
21:40:39  90  ,gbp_g02
21:40:39  91  ,gbp_g03
21:40:39  92  ,gbp_g04
21:40:39  93  ,gbp_g05
21:40:39  94  ,gbp_g06
21:40:39  95  ,gbp_g07
21:40:39  96  ,gbp_g08
21:40:39  97  ,gbp_g09
21:40:39  98  ,gbp_g10
21:40:39  99  ,gbp_g11
21:40:39 100  ,gbp_g12
21:40:39 101  ,gbp_g13
21:40:39 102  ,gbp_g14
21:40:39 103  ,gbp_g15
21:40:39 104  ,gbp_g16
21:40:39 105  ,gbp_g17
21:40:39 106  ,gbp_g18
21:40:39 107  ,gbp_g19
21:40:39 108  ,gbp_g20
21:40:39 109  ,gbp_g21
21:40:39 110  ,gbp_g22
21:40:39 111  ,gbp_g23
21:40:39 112  ,gbp_g24
21:40:39 113  ,gbp_g25
21:40:39 114  ,gbp_g26
21:40:39 115  ,gbp_g27
21:40:39 116  ,gbp_g28
21:40:39 117  ,gbp_g29
21:40:39 118  ,gbp_g30
21:40:39 119  ,gbp_g31
21:40:39 120  ,gbp_g32
21:40:39 121  ,gbp_g33
21:40:39 122  ,gbp_g34
21:40:39 123  ,gbp_g35
21:40:39 124  ,gbp_g36
21:40:39 125  ,gbp_g37
21:40:39 126  ,gbp_g38
21:40:39 127  ,gbp_g39
21:40:39 128  ,gbp_g40
21:40:39 129  ,jpy_g00
21:40:39 130  ,jpy_g01
21:40:39 131  ,jpy_g02
21:40:39 132  ,jpy_g03
21:40:39 133  ,jpy_g04
21:40:39 134  ,jpy_g05
21:40:39 135  ,jpy_g06
21:40:39 136  ,jpy_g07
21:40:39 137  ,jpy_g08
21:40:39 138  ,jpy_g09
21:40:39 139  ,jpy_g10
21:40:39 140  ,jpy_g11
21:40:39 141  ,jpy_g12
21:40:39 142  ,jpy_g13
21:40:39 143  ,jpy_g14
21:40:39 144  ,jpy_g15
21:40:39 145  ,jpy_g16
21:40:39 146  ,jpy_g17
21:40:39 147  ,jpy_g18
21:40:39 148  ,jpy_g19
21:40:39 149  ,jpy_g20
21:40:39 150  ,jpy_g21
21:40:39 151  ,jpy_g22
21:40:39 152  ,jpy_g23
21:40:39 153  ,jpy_g24
21:40:39 154  ,jpy_g25
21:40:39 155  ,jpy_g26
21:40:39 156  ,jpy_g27
21:40:39 157  ,jpy_g28
21:40:39 158  ,jpy_g29
21:40:39 159  ,jpy_g30
21:40:39 160  ,jpy_g31
21:40:39 161  ,jpy_g32
21:40:39 162  ,jpy_g33
21:40:39 163  ,jpy_g34
21:40:39 164  ,jpy_g35
21:40:39 165  ,jpy_g36
21:40:39 166  ,jpy_g37
21:40:39 167  ,jpy_g38
21:40:39 168  ,jpy_g39
21:40:39 169  ,jpy_g40
21:40:39 170  ,cad_g00
21:40:39 171  ,cad_g01
21:40:39 172  ,cad_g02
21:40:39 173  ,cad_g03
21:40:39 174  ,cad_g04
21:40:39 175  ,cad_g05
21:40:39 176  ,cad_g06
21:40:39 177  ,cad_g07
21:40:39 178  ,cad_g08
21:40:39 179  ,cad_g09
21:40:39 180  ,cad_g10
21:40:39 181  ,cad_g11
21:40:39 182  ,cad_g12
21:40:39 183  ,cad_g13
21:40:39 184  ,cad_g14
21:40:39 185  ,cad_g15
21:40:39 186  ,cad_g16
21:40:39 187  ,cad_g17
21:40:39 188  ,cad_g18
21:40:39 189  ,cad_g19
21:40:39 190  ,cad_g20
21:40:39 191  ,cad_g21
21:40:39 192  ,cad_g22
21:40:39 193  ,cad_g23
21:40:39 194  ,cad_g24
21:40:39 195  ,cad_g25
21:40:39 196  ,cad_g26
21:40:39 197  ,cad_g27
21:40:39 198  ,cad_g28
21:40:39 199  ,cad_g29
21:40:39 200  ,cad_g30
21:40:39 201  ,cad_g31
21:40:39 202  ,cad_g32
21:40:39 203  ,cad_g33
21:40:39 204  ,cad_g34
21:40:39 205  ,cad_g35
21:40:39 206  ,cad_g36
21:40:39 207  ,cad_g37
21:40:39 208  ,cad_g38
21:40:39 209  ,cad_g39
21:40:39 210  ,cad_g40
21:40:39 211  ,chf_g00
21:40:39 212  ,chf_g01
21:40:39 213  ,chf_g02
21:40:39 214  ,chf_g03
21:40:39 215  ,chf_g04
21:40:39 216  ,chf_g05
21:40:39 217  ,chf_g06
21:40:39 218  ,chf_g07
21:40:39 219  ,chf_g08
21:40:39 220  ,chf_g09
21:40:39 221  ,chf_g10
21:40:39 222  ,chf_g11
21:40:39 223  ,chf_g12
21:40:39 224  ,chf_g13
21:40:39 225  ,chf_g14
21:40:39 226  ,chf_g15
21:40:39 227  ,chf_g16
21:40:39 228  ,chf_g17
21:40:39 229  ,chf_g18
21:40:39 230  ,chf_g19
21:40:39 231  ,chf_g20
21:40:39 232  ,chf_g21
21:40:39 233  ,chf_g22
21:40:39 234  ,chf_g23
21:40:39 235  ,chf_g24
21:40:39 236  ,chf_g25
21:40:39 237  ,chf_g26
21:40:39 238  ,chf_g27
21:40:39 239  ,chf_g28
21:40:39 240  ,chf_g29
21:40:39 241  ,chf_g30
21:40:39 242  ,chf_g31
21:40:39 243  ,chf_g32
21:40:39 244  ,chf_g33
21:40:39 245  ,chf_g34
21:40:39 246  ,chf_g35
21:40:39 247  ,chf_g36
21:40:39 248  ,chf_g37
21:40:39 249  ,chf_g38
21:40:39 250  ,chf_g39
21:40:39 251  ,chf_g40
21:40:39 252  FROM chf_ms14 m
21:40:39 253  WHERE gattn IN('nup','up')
21:40:39 254  AND 1+m.ydate < '&1'||' '||'&2'
21:40:39 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'09:35:00'

View created.

Elapsed: 00:00:00.12
21:40:40 SQL> 
21:40:40 SQL> -- rpt
21:40:40 SQL> 
21:40:40 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:40:40   2  
21:40:40 SQL> SELECT MAX(prdate) FROM bme
21:40:40   2  
21:40:40 SQL> -- Now build model from bme and score sme
21:40:40 SQL> @score1gattn.sql
21:40:40 SQL> -- score1gattn.sql
21:40:40 SQL> 
21:40:40 SQL> -- Does the 1st SVM score
21:40:40 SQL> 
21:40:40 SQL> -- Fill up svmc_apply_prep
21:40:40 SQL> @score_gattn.sql
21:40:40 SQL> --
21:40:40 SQL> -- score_gattn.sql
21:40:40 SQL> --
21:40:40 SQL> 
21:40:40 SQL> -- usage: score_gattn.sql
21:40:40 SQL> 
21:40:40 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:40:40 SQL> 
21:40:40 SQL> DEFINE target	= 'gattn'
21:40:40 SQL> DEFINE model_name = 'forex14'
21:40:40 SQL> DEFINE bldtable	= 'bme'
21:40:40 SQL> DEFINE scoretable = 'sme'
21:40:40 SQL> DEFINE case_id	= 'prdate'
21:40:40 SQL> 
21:40:40 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:40:40 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:40:40 SQL> 
21:40:40 SQL> -- Builds an SVM model using pl/sql.
21:40:40 SQL> 
21:40:40 SQL> -----------------------------------------------------------------------
21:40:40 SQL> --			    BUILD THE MODEL
21:40:40 SQL> -----------------------------------------------------------------------
21:40:40 SQL> 
21:40:40 SQL> -- Cleanup old build data preparation objects for repeat runs
21:40:40 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:40:40 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:40:40 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:40:40 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:40:40 SQL> 
21:40:40 SQL> 
21:40:40 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:40:40 SQL> --
21:40:40 SQL> -- DROP	TABLE svmc_settings ;
21:40:40 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:40:40 SQL> -- DELETE svmc_settings;
21:40:40 SQL> 
21:40:40 SQL> -- The default classification algorithm is Naive Bayes. So override
21:40:40 SQL> -- this choice to SVM using a settings table.
21:40:40 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:40:40 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:40:40 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:40:40 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:40:40 SQL> -- models.
21:40:40 SQL> --
21:40:40 SQL> 
21:40:40 SQL> -- Do this once and then comment it out.
21:40:40 SQL> -- That makes script go faster.
21:40:40 SQL> -- BEGIN
21:40:40 SQL> -- -- Populate settings table
21:40:40 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:40:40 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:40:40 SQL> --
21:40:40 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:40:40 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:40:40 SQL> --
21:40:40 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:40:40 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:40:40 SQL> --   COMMIT;
21:40:40 SQL> -- END;
21:40:40 SQL> -- /
21:40:40 SQL> 
21:40:40 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:40:40 SQL> 
21:40:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:40:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:40:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:40:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:40:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:40:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:40:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:40:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:40:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:40:40 SQL> 
21:40:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:40:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:40:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:40:40 SQL> 
21:40:40 SQL> --------------------------------
21:40:40 SQL> -- PREPARE BUILD (TRAINING) DATA
21:40:40 SQL> --
21:40:40 SQL> 
21:40:40 SQL> -- 1. Missing Value treatment for all Predictors and
21:40:40 SQL> -- 2. Outlier Treatment and
21:40:40 SQL> -- 3. Normalization are performed below.
21:40:40 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:40:40 SQL> --    normalized here.
21:40:40 SQL> 
21:40:40 SQL> BEGIN
21:40:40   2  	-- Perform missing value treatment for all predictors
21:40:40   3  	-- create miss tables
21:40:40   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:40:40   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:40:40   6  
21:40:40   7  	-- populate miss tables
21:40:40   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:40:40   9  	  miss_table_name => 'svmc_miss_num',
21:40:40  10  	  data_table_name => '&bldtable',
21:40:40  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:40:40  12  
21:40:40  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:40:40  14  	  miss_table_name => 'svmc_miss_cat',
21:40:40  15  	  data_table_name => '&bldtable',
21:40:40  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:40:40  17  
21:40:40  18  	-- xform input data to replace missing values
21:40:40  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:40:40  20  	  miss_table_name => 'svmc_miss_num',
21:40:40  21  	  data_table_name => '&bldtable',
21:40:40  22  	  xform_view_name => 'xformed_build_miss_num');
21:40:40  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:40:40  24  	  miss_table_name => 'svmc_miss_cat',
21:40:40  25  	  data_table_name => '&bldtable',
21:40:40  26  	  xform_view_name => 'xformed_build_miss_cat');
21:40:40  27  
21:40:40  28  	-- Perform outlier treatment.
21:40:40  29  	-- create clip table
21:40:40  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:40:40  31  
21:40:40  32  	-- populate clip table
21:40:40  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:40:40  34  	  clip_table_name => 'svmc_clip',
21:40:40  35  	  data_table_name => '&bldtable',
21:40:40  36  	  tail_frac	  => 0.025,
21:40:40  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:40:40  38  
21:40:40  39  	-- xform input data to winsorized data
21:40:40  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:40:40  41  	  clip_table_name => 'svmc_clip',
21:40:40  42  	  data_table_name => '&bldtable',
21:40:40  43  	  xform_view_name => 'svmc_winsor');
21:40:40  44  
21:40:40  45  	-- create normalization table
21:40:40  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:40:40  47  
21:40:40  48  	-- populate normalization table based on winsorized data
21:40:40  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:40:40  50  	  norm_table_name => 'svmc_norm',
21:40:40  51  	  data_table_name => 'svmc_winsor',
21:40:40  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:40:40  53  
21:40:40  54  	-- normalize the original data
21:40:40  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:40:40  56  	  norm_table_name => 'svmc_norm',
21:40:40  57  	  data_table_name => '&bldtable',
21:40:40  58  	  xform_view_name => 'svmc_build_prep');
21:40:40  59  END;
21:40:40  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.04
21:40:58 SQL> 
21:40:58 SQL> ---------------------
21:40:58 SQL> -- CREATE A NEW MODEL
21:40:58 SQL> --
21:40:58 SQL> -- Cleanup old model with the same name for repeat runs
21:40:58 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:40:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:40:58   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.04
21:40:59 SQL> 
21:40:59 SQL> -- Build a new SVM Model
21:40:59 SQL> BEGIN
21:40:59   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:40:59   3  	  model_name	      => '&model_name',
21:40:59   4  	  mining_function     => dbms_data_mining.classification,
21:40:59   5  	  data_table_name     => 'svmc_build_prep',
21:40:59   6  	  case_id_column_name => '&case_id',
21:40:59   7  	  target_column_name  => '&target',
21:40:59   8  	  settings_table_name => 'svmc_settings');
21:40:59   9  END;
21:40:59  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.44
21:41:24 SQL> 
21:41:24 SQL> -----------------------------------------------------------------------
21:41:24 SQL> --			       APPLY/score THE MODEL
21:41:24 SQL> -----------------------------------------------------------------------
21:41:24 SQL> 
21:41:24 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:41:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:41:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:41:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:41:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:41:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:41:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:41:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:41:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:41:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:41:25 SQL> -----------------------
21:41:25 SQL> -- PREPARE SCORING DATA
21:41:25 SQL> --
21:41:25 SQL> -- If the data for model creation has been prepared, then the data
21:41:25 SQL> -- to be scored using the model must be prepared in the same manner
21:41:25 SQL> -- in order to obtain meaningful results.
21:41:25 SQL> --
21:41:25 SQL> -- 1. Missing Value treatment for all Predictors and
21:41:25 SQL> -- 2. Normalization
21:41:25 SQL> -- No outlier treatment will be performed during test and apply. The
21:41:25 SQL> -- normalization step is sufficient, since the normalization parameters
21:41:25 SQL> -- already capture the effects of outlier treatment done with build data.
21:41:25 SQL> --
21:41:25 SQL> BEGIN
21:41:25   2  	-- Xform Test data to replace missing values
21:41:25   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:41:25   4  	  miss_table_name => 'svmc_miss_num',
21:41:25   5  	  data_table_name => '&scoretable',
21:41:25   6  	  xform_view_name => 'xformed_apply_miss_num');
21:41:25   7  
21:41:25   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:41:25   9  	  miss_table_name => 'svmc_miss_cat',
21:41:25  10  	  data_table_name => '&scoretable',
21:41:25  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:41:25  12  
21:41:25  13  	-- Normalize the data to be scored
21:41:25  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:41:25  15  	  norm_table_name => 'svmc_norm',
21:41:25  16  	  data_table_name => '&scoretable',
21:41:25  17  	  xform_view_name => 'svmc_apply_prep');
21:41:25  18  END;
21:41:25  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.15
21:41:26 SQL> 
21:41:26 SQL> -- Use same model_name used in score_gattn.sql
21:41:26 SQL> DEFINE model_name = 'forex14'
21:41:26 SQL> 
21:41:26 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:41:26 SQL> 
21:41:26 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:41:26   2  SELECT
21:41:26   3  prdate
21:41:26   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:41:26   5  ,sysdate
21:41:26   6  ,SUBSTR(prdate,1,3)pair
21:41:26   7  ,SUBSTR(prdate,4,19)ydate
21:41:26   8  FROM svmc_apply_prep
21:41:26   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:41:26 SQL> @chf_score1day_gattn.sql	2010-12-17 09:30:00
21:41:26 SQL> --
21:41:26 SQL> -- chf_score1day_gattn.sql
21:41:26 SQL> --
21:41:26 SQL> 
21:41:26 SQL> CREATE OR REPLACE VIEW sme AS
21:41:26   2  SELECT
21:41:26   3  'chf'||m.ydate prdate
21:41:26   4  ,NULL gattn
21:41:26   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:41:26   6  ,eur_g00
21:41:26   7  ,eur_g01
21:41:26   8  ,eur_g02
21:41:26   9  ,eur_g03
21:41:26  10  ,eur_g04
21:41:26  11  ,eur_g05
21:41:26  12  ,eur_g06
21:41:26  13  ,eur_g07
21:41:26  14  ,eur_g08
21:41:26  15  ,eur_g09
21:41:26  16  ,eur_g10
21:41:26  17  ,eur_g11
21:41:26  18  ,eur_g12
21:41:26  19  ,eur_g13
21:41:26  20  ,eur_g14
21:41:26  21  ,eur_g15
21:41:26  22  ,eur_g16
21:41:26  23  ,eur_g17
21:41:26  24  ,eur_g18
21:41:26  25  ,eur_g19
21:41:26  26  ,eur_g20
21:41:26  27  ,eur_g21
21:41:26  28  ,eur_g22
21:41:26  29  ,eur_g23
21:41:26  30  ,eur_g24
21:41:26  31  ,eur_g25
21:41:26  32  ,eur_g26
21:41:26  33  ,eur_g27
21:41:26  34  ,eur_g28
21:41:26  35  ,eur_g29
21:41:26  36  ,eur_g30
21:41:26  37  ,eur_g31
21:41:26  38  ,eur_g32
21:41:26  39  ,eur_g33
21:41:26  40  ,eur_g34
21:41:26  41  ,eur_g35
21:41:26  42  ,eur_g36
21:41:26  43  ,eur_g37
21:41:26  44  ,eur_g38
21:41:26  45  ,eur_g39
21:41:26  46  ,eur_g40
21:41:26  47  ,aud_g00
21:41:26  48  ,aud_g01
21:41:26  49  ,aud_g02
21:41:26  50  ,aud_g03
21:41:26  51  ,aud_g04
21:41:26  52  ,aud_g05
21:41:26  53  ,aud_g06
21:41:26  54  ,aud_g07
21:41:26  55  ,aud_g08
21:41:26  56  ,aud_g09
21:41:26  57  ,aud_g10
21:41:26  58  ,aud_g11
21:41:26  59  ,aud_g12
21:41:26  60  ,aud_g13
21:41:26  61  ,aud_g14
21:41:26  62  ,aud_g15
21:41:26  63  ,aud_g16
21:41:26  64  ,aud_g17
21:41:26  65  ,aud_g18
21:41:26  66  ,aud_g19
21:41:26  67  ,aud_g20
21:41:26  68  ,aud_g21
21:41:26  69  ,aud_g22
21:41:26  70  ,aud_g23
21:41:26  71  ,aud_g24
21:41:26  72  ,aud_g25
21:41:26  73  ,aud_g26
21:41:26  74  ,aud_g27
21:41:26  75  ,aud_g28
21:41:26  76  ,aud_g29
21:41:26  77  ,aud_g30
21:41:26  78  ,aud_g31
21:41:26  79  ,aud_g32
21:41:26  80  ,aud_g33
21:41:26  81  ,aud_g34
21:41:26  82  ,aud_g35
21:41:26  83  ,aud_g36
21:41:26  84  ,aud_g37
21:41:26  85  ,aud_g38
21:41:26  86  ,aud_g39
21:41:26  87  ,aud_g40
21:41:26  88  ,gbp_g00
21:41:26  89  ,gbp_g01
21:41:26  90  ,gbp_g02
21:41:26  91  ,gbp_g03
21:41:26  92  ,gbp_g04
21:41:26  93  ,gbp_g05
21:41:26  94  ,gbp_g06
21:41:26  95  ,gbp_g07
21:41:26  96  ,gbp_g08
21:41:26  97  ,gbp_g09
21:41:26  98  ,gbp_g10
21:41:26  99  ,gbp_g11
21:41:26 100  ,gbp_g12
21:41:26 101  ,gbp_g13
21:41:26 102  ,gbp_g14
21:41:26 103  ,gbp_g15
21:41:26 104  ,gbp_g16
21:41:26 105  ,gbp_g17
21:41:26 106  ,gbp_g18
21:41:26 107  ,gbp_g19
21:41:26 108  ,gbp_g20
21:41:26 109  ,gbp_g21
21:41:26 110  ,gbp_g22
21:41:26 111  ,gbp_g23
21:41:26 112  ,gbp_g24
21:41:26 113  ,gbp_g25
21:41:26 114  ,gbp_g26
21:41:26 115  ,gbp_g27
21:41:26 116  ,gbp_g28
21:41:26 117  ,gbp_g29
21:41:26 118  ,gbp_g30
21:41:26 119  ,gbp_g31
21:41:26 120  ,gbp_g32
21:41:26 121  ,gbp_g33
21:41:26 122  ,gbp_g34
21:41:26 123  ,gbp_g35
21:41:26 124  ,gbp_g36
21:41:26 125  ,gbp_g37
21:41:26 126  ,gbp_g38
21:41:26 127  ,gbp_g39
21:41:26 128  ,gbp_g40
21:41:26 129  ,jpy_g00
21:41:26 130  ,jpy_g01
21:41:26 131  ,jpy_g02
21:41:26 132  ,jpy_g03
21:41:26 133  ,jpy_g04
21:41:26 134  ,jpy_g05
21:41:26 135  ,jpy_g06
21:41:26 136  ,jpy_g07
21:41:26 137  ,jpy_g08
21:41:26 138  ,jpy_g09
21:41:26 139  ,jpy_g10
21:41:26 140  ,jpy_g11
21:41:26 141  ,jpy_g12
21:41:26 142  ,jpy_g13
21:41:26 143  ,jpy_g14
21:41:26 144  ,jpy_g15
21:41:26 145  ,jpy_g16
21:41:26 146  ,jpy_g17
21:41:26 147  ,jpy_g18
21:41:26 148  ,jpy_g19
21:41:26 149  ,jpy_g20
21:41:26 150  ,jpy_g21
21:41:26 151  ,jpy_g22
21:41:26 152  ,jpy_g23
21:41:26 153  ,jpy_g24
21:41:26 154  ,jpy_g25
21:41:26 155  ,jpy_g26
21:41:26 156  ,jpy_g27
21:41:26 157  ,jpy_g28
21:41:26 158  ,jpy_g29
21:41:26 159  ,jpy_g30
21:41:26 160  ,jpy_g31
21:41:26 161  ,jpy_g32
21:41:26 162  ,jpy_g33
21:41:26 163  ,jpy_g34
21:41:26 164  ,jpy_g35
21:41:26 165  ,jpy_g36
21:41:26 166  ,jpy_g37
21:41:26 167  ,jpy_g38
21:41:26 168  ,jpy_g39
21:41:26 169  ,jpy_g40
21:41:26 170  ,cad_g00
21:41:26 171  ,cad_g01
21:41:26 172  ,cad_g02
21:41:26 173  ,cad_g03
21:41:26 174  ,cad_g04
21:41:26 175  ,cad_g05
21:41:26 176  ,cad_g06
21:41:26 177  ,cad_g07
21:41:26 178  ,cad_g08
21:41:26 179  ,cad_g09
21:41:26 180  ,cad_g10
21:41:26 181  ,cad_g11
21:41:26 182  ,cad_g12
21:41:26 183  ,cad_g13
21:41:26 184  ,cad_g14
21:41:26 185  ,cad_g15
21:41:26 186  ,cad_g16
21:41:26 187  ,cad_g17
21:41:26 188  ,cad_g18
21:41:26 189  ,cad_g19
21:41:26 190  ,cad_g20
21:41:26 191  ,cad_g21
21:41:26 192  ,cad_g22
21:41:26 193  ,cad_g23
21:41:26 194  ,cad_g24
21:41:26 195  ,cad_g25
21:41:26 196  ,cad_g26
21:41:26 197  ,cad_g27
21:41:26 198  ,cad_g28
21:41:26 199  ,cad_g29
21:41:26 200  ,cad_g30
21:41:26 201  ,cad_g31
21:41:26 202  ,cad_g32
21:41:26 203  ,cad_g33
21:41:26 204  ,cad_g34
21:41:26 205  ,cad_g35
21:41:26 206  ,cad_g36
21:41:26 207  ,cad_g37
21:41:26 208  ,cad_g38
21:41:26 209  ,cad_g39
21:41:26 210  ,cad_g40
21:41:26 211  ,chf_g00
21:41:26 212  ,chf_g01
21:41:26 213  ,chf_g02
21:41:26 214  ,chf_g03
21:41:26 215  ,chf_g04
21:41:26 216  ,chf_g05
21:41:26 217  ,chf_g06
21:41:26 218  ,chf_g07
21:41:26 219  ,chf_g08
21:41:26 220  ,chf_g09
21:41:26 221  ,chf_g10
21:41:26 222  ,chf_g11
21:41:26 223  ,chf_g12
21:41:26 224  ,chf_g13
21:41:26 225  ,chf_g14
21:41:26 226  ,chf_g15
21:41:26 227  ,chf_g16
21:41:26 228  ,chf_g17
21:41:26 229  ,chf_g18
21:41:26 230  ,chf_g19
21:41:26 231  ,chf_g20
21:41:26 232  ,chf_g21
21:41:26 233  ,chf_g22
21:41:26 234  ,chf_g23
21:41:26 235  ,chf_g24
21:41:26 236  ,chf_g25
21:41:26 237  ,chf_g26
21:41:26 238  ,chf_g27
21:41:26 239  ,chf_g28
21:41:26 240  ,chf_g29
21:41:26 241  ,chf_g30
21:41:26 242  ,chf_g31
21:41:26 243  ,chf_g32
21:41:26 244  ,chf_g33
21:41:26 245  ,chf_g34
21:41:26 246  ,chf_g35
21:41:26 247  ,chf_g36
21:41:26 248  ,chf_g37
21:41:26 249  ,chf_g38
21:41:26 250  ,chf_g39
21:41:26 251  ,chf_g40
21:41:26 252  FROM chf_ms14 m
21:41:26 253  WHERE m.ydate = '&1'||' '||'&2'
21:41:26 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'09:30:00'

View created.

Elapsed: 00:00:00.12
21:41:26 SQL> 
21:41:26 SQL> -- rpt
21:41:26 SQL> -- We should see just 1 row:
21:41:26 SQL> 
21:41:26 SQL> SELECT COUNT(prdate) FROM sme
21:41:26   2  
21:41:26 SQL> -- Build the model:
21:41:26 SQL> CREATE OR REPLACE VIEW bme AS
21:41:26   2  SELECT
21:41:26   3  'chf'||m.ydate prdate
21:41:26   4  ,gattn
21:41:26   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:41:26   6  ,eur_g00
21:41:26   7  ,eur_g01
21:41:26   8  ,eur_g02
21:41:26   9  ,eur_g03
21:41:26  10  ,eur_g04
21:41:26  11  ,eur_g05
21:41:26  12  ,eur_g06
21:41:26  13  ,eur_g07
21:41:26  14  ,eur_g08
21:41:26  15  ,eur_g09
21:41:26  16  ,eur_g10
21:41:26  17  ,eur_g11
21:41:26  18  ,eur_g12
21:41:26  19  ,eur_g13
21:41:26  20  ,eur_g14
21:41:26  21  ,eur_g15
21:41:26  22  ,eur_g16
21:41:26  23  ,eur_g17
21:41:26  24  ,eur_g18
21:41:26  25  ,eur_g19
21:41:26  26  ,eur_g20
21:41:26  27  ,eur_g21
21:41:26  28  ,eur_g22
21:41:26  29  ,eur_g23
21:41:26  30  ,eur_g24
21:41:26  31  ,eur_g25
21:41:26  32  ,eur_g26
21:41:26  33  ,eur_g27
21:41:26  34  ,eur_g28
21:41:26  35  ,eur_g29
21:41:26  36  ,eur_g30
21:41:26  37  ,eur_g31
21:41:26  38  ,eur_g32
21:41:26  39  ,eur_g33
21:41:26  40  ,eur_g34
21:41:26  41  ,eur_g35
21:41:26  42  ,eur_g36
21:41:26  43  ,eur_g37
21:41:26  44  ,eur_g38
21:41:26  45  ,eur_g39
21:41:26  46  ,eur_g40
21:41:26  47  ,aud_g00
21:41:26  48  ,aud_g01
21:41:26  49  ,aud_g02
21:41:26  50  ,aud_g03
21:41:26  51  ,aud_g04
21:41:26  52  ,aud_g05
21:41:26  53  ,aud_g06
21:41:26  54  ,aud_g07
21:41:26  55  ,aud_g08
21:41:26  56  ,aud_g09
21:41:26  57  ,aud_g10
21:41:26  58  ,aud_g11
21:41:26  59  ,aud_g12
21:41:26  60  ,aud_g13
21:41:26  61  ,aud_g14
21:41:26  62  ,aud_g15
21:41:26  63  ,aud_g16
21:41:26  64  ,aud_g17
21:41:26  65  ,aud_g18
21:41:26  66  ,aud_g19
21:41:26  67  ,aud_g20
21:41:26  68  ,aud_g21
21:41:26  69  ,aud_g22
21:41:26  70  ,aud_g23
21:41:26  71  ,aud_g24
21:41:26  72  ,aud_g25
21:41:26  73  ,aud_g26
21:41:26  74  ,aud_g27
21:41:26  75  ,aud_g28
21:41:26  76  ,aud_g29
21:41:26  77  ,aud_g30
21:41:26  78  ,aud_g31
21:41:26  79  ,aud_g32
21:41:26  80  ,aud_g33
21:41:26  81  ,aud_g34
21:41:26  82  ,aud_g35
21:41:26  83  ,aud_g36
21:41:26  84  ,aud_g37
21:41:26  85  ,aud_g38
21:41:26  86  ,aud_g39
21:41:26  87  ,aud_g40
21:41:26  88  ,gbp_g00
21:41:26  89  ,gbp_g01
21:41:26  90  ,gbp_g02
21:41:26  91  ,gbp_g03
21:41:26  92  ,gbp_g04
21:41:26  93  ,gbp_g05
21:41:26  94  ,gbp_g06
21:41:26  95  ,gbp_g07
21:41:26  96  ,gbp_g08
21:41:26  97  ,gbp_g09
21:41:26  98  ,gbp_g10
21:41:26  99  ,gbp_g11
21:41:26 100  ,gbp_g12
21:41:26 101  ,gbp_g13
21:41:26 102  ,gbp_g14
21:41:26 103  ,gbp_g15
21:41:26 104  ,gbp_g16
21:41:26 105  ,gbp_g17
21:41:26 106  ,gbp_g18
21:41:26 107  ,gbp_g19
21:41:26 108  ,gbp_g20
21:41:26 109  ,gbp_g21
21:41:26 110  ,gbp_g22
21:41:26 111  ,gbp_g23
21:41:26 112  ,gbp_g24
21:41:26 113  ,gbp_g25
21:41:26 114  ,gbp_g26
21:41:26 115  ,gbp_g27
21:41:26 116  ,gbp_g28
21:41:26 117  ,gbp_g29
21:41:26 118  ,gbp_g30
21:41:26 119  ,gbp_g31
21:41:26 120  ,gbp_g32
21:41:26 121  ,gbp_g33
21:41:26 122  ,gbp_g34
21:41:26 123  ,gbp_g35
21:41:26 124  ,gbp_g36
21:41:26 125  ,gbp_g37
21:41:26 126  ,gbp_g38
21:41:26 127  ,gbp_g39
21:41:26 128  ,gbp_g40
21:41:26 129  ,jpy_g00
21:41:26 130  ,jpy_g01
21:41:26 131  ,jpy_g02
21:41:26 132  ,jpy_g03
21:41:26 133  ,jpy_g04
21:41:26 134  ,jpy_g05
21:41:26 135  ,jpy_g06
21:41:26 136  ,jpy_g07
21:41:26 137  ,jpy_g08
21:41:26 138  ,jpy_g09
21:41:26 139  ,jpy_g10
21:41:26 140  ,jpy_g11
21:41:26 141  ,jpy_g12
21:41:26 142  ,jpy_g13
21:41:26 143  ,jpy_g14
21:41:26 144  ,jpy_g15
21:41:26 145  ,jpy_g16
21:41:26 146  ,jpy_g17
21:41:26 147  ,jpy_g18
21:41:26 148  ,jpy_g19
21:41:26 149  ,jpy_g20
21:41:26 150  ,jpy_g21
21:41:26 151  ,jpy_g22
21:41:26 152  ,jpy_g23
21:41:26 153  ,jpy_g24
21:41:26 154  ,jpy_g25
21:41:26 155  ,jpy_g26
21:41:26 156  ,jpy_g27
21:41:26 157  ,jpy_g28
21:41:26 158  ,jpy_g29
21:41:26 159  ,jpy_g30
21:41:26 160  ,jpy_g31
21:41:26 161  ,jpy_g32
21:41:26 162  ,jpy_g33
21:41:26 163  ,jpy_g34
21:41:26 164  ,jpy_g35
21:41:26 165  ,jpy_g36
21:41:26 166  ,jpy_g37
21:41:26 167  ,jpy_g38
21:41:26 168  ,jpy_g39
21:41:26 169  ,jpy_g40
21:41:26 170  ,cad_g00
21:41:26 171  ,cad_g01
21:41:26 172  ,cad_g02
21:41:26 173  ,cad_g03
21:41:26 174  ,cad_g04
21:41:26 175  ,cad_g05
21:41:26 176  ,cad_g06
21:41:26 177  ,cad_g07
21:41:26 178  ,cad_g08
21:41:26 179  ,cad_g09
21:41:26 180  ,cad_g10
21:41:26 181  ,cad_g11
21:41:26 182  ,cad_g12
21:41:26 183  ,cad_g13
21:41:26 184  ,cad_g14
21:41:26 185  ,cad_g15
21:41:26 186  ,cad_g16
21:41:26 187  ,cad_g17
21:41:26 188  ,cad_g18
21:41:26 189  ,cad_g19
21:41:26 190  ,cad_g20
21:41:26 191  ,cad_g21
21:41:26 192  ,cad_g22
21:41:26 193  ,cad_g23
21:41:26 194  ,cad_g24
21:41:26 195  ,cad_g25
21:41:26 196  ,cad_g26
21:41:26 197  ,cad_g27
21:41:26 198  ,cad_g28
21:41:26 199  ,cad_g29
21:41:26 200  ,cad_g30
21:41:26 201  ,cad_g31
21:41:26 202  ,cad_g32
21:41:26 203  ,cad_g33
21:41:26 204  ,cad_g34
21:41:26 205  ,cad_g35
21:41:26 206  ,cad_g36
21:41:26 207  ,cad_g37
21:41:26 208  ,cad_g38
21:41:26 209  ,cad_g39
21:41:26 210  ,cad_g40
21:41:26 211  ,chf_g00
21:41:26 212  ,chf_g01
21:41:26 213  ,chf_g02
21:41:26 214  ,chf_g03
21:41:26 215  ,chf_g04
21:41:26 216  ,chf_g05
21:41:26 217  ,chf_g06
21:41:26 218  ,chf_g07
21:41:26 219  ,chf_g08
21:41:26 220  ,chf_g09
21:41:26 221  ,chf_g10
21:41:26 222  ,chf_g11
21:41:26 223  ,chf_g12
21:41:26 224  ,chf_g13
21:41:26 225  ,chf_g14
21:41:26 226  ,chf_g15
21:41:26 227  ,chf_g16
21:41:26 228  ,chf_g17
21:41:26 229  ,chf_g18
21:41:26 230  ,chf_g19
21:41:26 231  ,chf_g20
21:41:26 232  ,chf_g21
21:41:26 233  ,chf_g22
21:41:26 234  ,chf_g23
21:41:26 235  ,chf_g24
21:41:26 236  ,chf_g25
21:41:26 237  ,chf_g26
21:41:26 238  ,chf_g27
21:41:26 239  ,chf_g28
21:41:26 240  ,chf_g29
21:41:26 241  ,chf_g30
21:41:26 242  ,chf_g31
21:41:26 243  ,chf_g32
21:41:26 244  ,chf_g33
21:41:26 245  ,chf_g34
21:41:26 246  ,chf_g35
21:41:26 247  ,chf_g36
21:41:26 248  ,chf_g37
21:41:26 249  ,chf_g38
21:41:26 250  ,chf_g39
21:41:26 251  ,chf_g40
21:41:26 252  FROM chf_ms14 m
21:41:26 253  WHERE gattn IN('nup','up')
21:41:26 254  AND 1+m.ydate < '&1'||' '||'&2'
21:41:26 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'09:30:00'

View created.

Elapsed: 00:00:00.12
21:41:26 SQL> 
21:41:26 SQL> -- rpt
21:41:26 SQL> 
21:41:26 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:41:26   2  
21:41:26 SQL> SELECT MAX(prdate) FROM bme
21:41:26   2  
21:41:26 SQL> -- Now build model from bme and score sme
21:41:26 SQL> @score1gattn.sql
21:41:26 SQL> -- score1gattn.sql
21:41:26 SQL> 
21:41:26 SQL> -- Does the 1st SVM score
21:41:26 SQL> 
21:41:26 SQL> -- Fill up svmc_apply_prep
21:41:26 SQL> @score_gattn.sql
21:41:26 SQL> --
21:41:26 SQL> -- score_gattn.sql
21:41:26 SQL> --
21:41:26 SQL> 
21:41:26 SQL> -- usage: score_gattn.sql
21:41:26 SQL> 
21:41:26 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:41:26 SQL> 
21:41:26 SQL> DEFINE target	= 'gattn'
21:41:26 SQL> DEFINE model_name = 'forex14'
21:41:26 SQL> DEFINE bldtable	= 'bme'
21:41:26 SQL> DEFINE scoretable = 'sme'
21:41:26 SQL> DEFINE case_id	= 'prdate'
21:41:26 SQL> 
21:41:26 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:41:26 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:41:26 SQL> 
21:41:26 SQL> -- Builds an SVM model using pl/sql.
21:41:26 SQL> 
21:41:26 SQL> -----------------------------------------------------------------------
21:41:26 SQL> --			    BUILD THE MODEL
21:41:26 SQL> -----------------------------------------------------------------------
21:41:26 SQL> 
21:41:26 SQL> -- Cleanup old build data preparation objects for repeat runs
21:41:26 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:41:26 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:41:26 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:41:26 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:41:26 SQL> 
21:41:26 SQL> 
21:41:26 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:41:26 SQL> --
21:41:26 SQL> -- DROP	TABLE svmc_settings ;
21:41:26 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:41:26 SQL> -- DELETE svmc_settings;
21:41:26 SQL> 
21:41:26 SQL> -- The default classification algorithm is Naive Bayes. So override
21:41:26 SQL> -- this choice to SVM using a settings table.
21:41:26 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:41:26 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:41:26 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:41:26 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:41:26 SQL> -- models.
21:41:26 SQL> --
21:41:26 SQL> 
21:41:26 SQL> -- Do this once and then comment it out.
21:41:26 SQL> -- That makes script go faster.
21:41:26 SQL> -- BEGIN
21:41:26 SQL> -- -- Populate settings table
21:41:26 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:41:26 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:41:26 SQL> --
21:41:26 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:41:26 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:41:26 SQL> --
21:41:26 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:41:26 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:41:26 SQL> --   COMMIT;
21:41:26 SQL> -- END;
21:41:26 SQL> -- /
21:41:26 SQL> 
21:41:26 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:41:26 SQL> 
21:41:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:41:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:41:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:41:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:41:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:41:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:41:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:41:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:41:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:41:26 SQL> 
21:41:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:41:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:41:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:41:26 SQL> 
21:41:26 SQL> --------------------------------
21:41:26 SQL> -- PREPARE BUILD (TRAINING) DATA
21:41:26 SQL> --
21:41:26 SQL> 
21:41:26 SQL> -- 1. Missing Value treatment for all Predictors and
21:41:26 SQL> -- 2. Outlier Treatment and
21:41:26 SQL> -- 3. Normalization are performed below.
21:41:26 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:41:26 SQL> --    normalized here.
21:41:26 SQL> 
21:41:26 SQL> BEGIN
21:41:26   2  	-- Perform missing value treatment for all predictors
21:41:26   3  	-- create miss tables
21:41:26   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:41:26   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:41:26   6  
21:41:26   7  	-- populate miss tables
21:41:26   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:41:26   9  	  miss_table_name => 'svmc_miss_num',
21:41:26  10  	  data_table_name => '&bldtable',
21:41:26  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:41:26  12  
21:41:26  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:41:26  14  	  miss_table_name => 'svmc_miss_cat',
21:41:26  15  	  data_table_name => '&bldtable',
21:41:26  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:41:26  17  
21:41:26  18  	-- xform input data to replace missing values
21:41:26  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:41:26  20  	  miss_table_name => 'svmc_miss_num',
21:41:26  21  	  data_table_name => '&bldtable',
21:41:26  22  	  xform_view_name => 'xformed_build_miss_num');
21:41:26  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:41:26  24  	  miss_table_name => 'svmc_miss_cat',
21:41:26  25  	  data_table_name => '&bldtable',
21:41:26  26  	  xform_view_name => 'xformed_build_miss_cat');
21:41:26  27  
21:41:26  28  	-- Perform outlier treatment.
21:41:26  29  	-- create clip table
21:41:26  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:41:26  31  
21:41:26  32  	-- populate clip table
21:41:26  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:41:26  34  	  clip_table_name => 'svmc_clip',
21:41:26  35  	  data_table_name => '&bldtable',
21:41:26  36  	  tail_frac	  => 0.025,
21:41:26  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:41:26  38  
21:41:26  39  	-- xform input data to winsorized data
21:41:26  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:41:26  41  	  clip_table_name => 'svmc_clip',
21:41:26  42  	  data_table_name => '&bldtable',
21:41:26  43  	  xform_view_name => 'svmc_winsor');
21:41:26  44  
21:41:26  45  	-- create normalization table
21:41:26  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:41:26  47  
21:41:26  48  	-- populate normalization table based on winsorized data
21:41:26  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:41:26  50  	  norm_table_name => 'svmc_norm',
21:41:26  51  	  data_table_name => 'svmc_winsor',
21:41:26  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:41:26  53  
21:41:26  54  	-- normalize the original data
21:41:26  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:41:26  56  	  norm_table_name => 'svmc_norm',
21:41:26  57  	  data_table_name => '&bldtable',
21:41:26  58  	  xform_view_name => 'svmc_build_prep');
21:41:26  59  END;
21:41:26  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.93
21:41:44 SQL> 
21:41:44 SQL> ---------------------
21:41:44 SQL> -- CREATE A NEW MODEL
21:41:44 SQL> --
21:41:44 SQL> -- Cleanup old model with the same name for repeat runs
21:41:44 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:41:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:41:44   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.06
21:41:45 SQL> 
21:41:45 SQL> -- Build a new SVM Model
21:41:45 SQL> BEGIN
21:41:45   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:41:45   3  	  model_name	      => '&model_name',
21:41:45   4  	  mining_function     => dbms_data_mining.classification,
21:41:45   5  	  data_table_name     => 'svmc_build_prep',
21:41:45   6  	  case_id_column_name => '&case_id',
21:41:45   7  	  target_column_name  => '&target',
21:41:45   8  	  settings_table_name => 'svmc_settings');
21:41:45   9  END;
21:41:45  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.02
21:42:11 SQL> 
21:42:11 SQL> -----------------------------------------------------------------------
21:42:11 SQL> --			       APPLY/score THE MODEL
21:42:11 SQL> -----------------------------------------------------------------------
21:42:11 SQL> 
21:42:11 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:42:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:42:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:42:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:42:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:42:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:42:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:42:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:42:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:42:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:42:12 SQL> -----------------------
21:42:12 SQL> -- PREPARE SCORING DATA
21:42:12 SQL> --
21:42:12 SQL> -- If the data for model creation has been prepared, then the data
21:42:12 SQL> -- to be scored using the model must be prepared in the same manner
21:42:12 SQL> -- in order to obtain meaningful results.
21:42:12 SQL> --
21:42:12 SQL> -- 1. Missing Value treatment for all Predictors and
21:42:12 SQL> -- 2. Normalization
21:42:12 SQL> -- No outlier treatment will be performed during test and apply. The
21:42:12 SQL> -- normalization step is sufficient, since the normalization parameters
21:42:12 SQL> -- already capture the effects of outlier treatment done with build data.
21:42:12 SQL> --
21:42:12 SQL> BEGIN
21:42:12   2  	-- Xform Test data to replace missing values
21:42:12   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:42:12   4  	  miss_table_name => 'svmc_miss_num',
21:42:12   5  	  data_table_name => '&scoretable',
21:42:12   6  	  xform_view_name => 'xformed_apply_miss_num');
21:42:12   7  
21:42:12   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:42:12   9  	  miss_table_name => 'svmc_miss_cat',
21:42:12  10  	  data_table_name => '&scoretable',
21:42:12  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:42:12  12  
21:42:12  13  	-- Normalize the data to be scored
21:42:12  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:42:12  15  	  norm_table_name => 'svmc_norm',
21:42:12  16  	  data_table_name => '&scoretable',
21:42:12  17  	  xform_view_name => 'svmc_apply_prep');
21:42:12  18  END;
21:42:12  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
21:42:13 SQL> 
21:42:13 SQL> -- Use same model_name used in score_gattn.sql
21:42:13 SQL> DEFINE model_name = 'forex14'
21:42:13 SQL> 
21:42:13 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:42:13 SQL> 
21:42:13 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:42:13   2  SELECT
21:42:13   3  prdate
21:42:13   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:42:13   5  ,sysdate
21:42:13   6  ,SUBSTR(prdate,1,3)pair
21:42:13   7  ,SUBSTR(prdate,4,19)ydate
21:42:13   8  FROM svmc_apply_prep
21:42:13   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:42:13 SQL> @chf_score1day_gattn.sql	2010-12-17 09:20:00
21:42:13 SQL> --
21:42:13 SQL> -- chf_score1day_gattn.sql
21:42:13 SQL> --
21:42:13 SQL> 
21:42:13 SQL> CREATE OR REPLACE VIEW sme AS
21:42:13   2  SELECT
21:42:13   3  'chf'||m.ydate prdate
21:42:13   4  ,NULL gattn
21:42:13   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:42:13   6  ,eur_g00
21:42:13   7  ,eur_g01
21:42:13   8  ,eur_g02
21:42:13   9  ,eur_g03
21:42:13  10  ,eur_g04
21:42:13  11  ,eur_g05
21:42:13  12  ,eur_g06
21:42:13  13  ,eur_g07
21:42:13  14  ,eur_g08
21:42:13  15  ,eur_g09
21:42:13  16  ,eur_g10
21:42:13  17  ,eur_g11
21:42:13  18  ,eur_g12
21:42:13  19  ,eur_g13
21:42:13  20  ,eur_g14
21:42:13  21  ,eur_g15
21:42:13  22  ,eur_g16
21:42:13  23  ,eur_g17
21:42:13  24  ,eur_g18
21:42:13  25  ,eur_g19
21:42:13  26  ,eur_g20
21:42:13  27  ,eur_g21
21:42:13  28  ,eur_g22
21:42:13  29  ,eur_g23
21:42:13  30  ,eur_g24
21:42:13  31  ,eur_g25
21:42:13  32  ,eur_g26
21:42:13  33  ,eur_g27
21:42:13  34  ,eur_g28
21:42:13  35  ,eur_g29
21:42:13  36  ,eur_g30
21:42:13  37  ,eur_g31
21:42:13  38  ,eur_g32
21:42:13  39  ,eur_g33
21:42:13  40  ,eur_g34
21:42:13  41  ,eur_g35
21:42:13  42  ,eur_g36
21:42:13  43  ,eur_g37
21:42:13  44  ,eur_g38
21:42:13  45  ,eur_g39
21:42:13  46  ,eur_g40
21:42:13  47  ,aud_g00
21:42:13  48  ,aud_g01
21:42:13  49  ,aud_g02
21:42:13  50  ,aud_g03
21:42:13  51  ,aud_g04
21:42:13  52  ,aud_g05
21:42:13  53  ,aud_g06
21:42:13  54  ,aud_g07
21:42:13  55  ,aud_g08
21:42:13  56  ,aud_g09
21:42:13  57  ,aud_g10
21:42:13  58  ,aud_g11
21:42:13  59  ,aud_g12
21:42:13  60  ,aud_g13
21:42:13  61  ,aud_g14
21:42:13  62  ,aud_g15
21:42:13  63  ,aud_g16
21:42:13  64  ,aud_g17
21:42:13  65  ,aud_g18
21:42:13  66  ,aud_g19
21:42:13  67  ,aud_g20
21:42:13  68  ,aud_g21
21:42:13  69  ,aud_g22
21:42:13  70  ,aud_g23
21:42:13  71  ,aud_g24
21:42:13  72  ,aud_g25
21:42:13  73  ,aud_g26
21:42:13  74  ,aud_g27
21:42:13  75  ,aud_g28
21:42:13  76  ,aud_g29
21:42:13  77  ,aud_g30
21:42:13  78  ,aud_g31
21:42:13  79  ,aud_g32
21:42:13  80  ,aud_g33
21:42:13  81  ,aud_g34
21:42:13  82  ,aud_g35
21:42:13  83  ,aud_g36
21:42:13  84  ,aud_g37
21:42:13  85  ,aud_g38
21:42:13  86  ,aud_g39
21:42:13  87  ,aud_g40
21:42:13  88  ,gbp_g00
21:42:13  89  ,gbp_g01
21:42:13  90  ,gbp_g02
21:42:13  91  ,gbp_g03
21:42:13  92  ,gbp_g04
21:42:13  93  ,gbp_g05
21:42:13  94  ,gbp_g06
21:42:13  95  ,gbp_g07
21:42:13  96  ,gbp_g08
21:42:13  97  ,gbp_g09
21:42:13  98  ,gbp_g10
21:42:13  99  ,gbp_g11
21:42:13 100  ,gbp_g12
21:42:13 101  ,gbp_g13
21:42:13 102  ,gbp_g14
21:42:13 103  ,gbp_g15
21:42:13 104  ,gbp_g16
21:42:13 105  ,gbp_g17
21:42:13 106  ,gbp_g18
21:42:13 107  ,gbp_g19
21:42:13 108  ,gbp_g20
21:42:13 109  ,gbp_g21
21:42:13 110  ,gbp_g22
21:42:13 111  ,gbp_g23
21:42:13 112  ,gbp_g24
21:42:13 113  ,gbp_g25
21:42:13 114  ,gbp_g26
21:42:13 115  ,gbp_g27
21:42:13 116  ,gbp_g28
21:42:13 117  ,gbp_g29
21:42:13 118  ,gbp_g30
21:42:13 119  ,gbp_g31
21:42:13 120  ,gbp_g32
21:42:13 121  ,gbp_g33
21:42:13 122  ,gbp_g34
21:42:13 123  ,gbp_g35
21:42:13 124  ,gbp_g36
21:42:13 125  ,gbp_g37
21:42:13 126  ,gbp_g38
21:42:13 127  ,gbp_g39
21:42:13 128  ,gbp_g40
21:42:13 129  ,jpy_g00
21:42:13 130  ,jpy_g01
21:42:13 131  ,jpy_g02
21:42:13 132  ,jpy_g03
21:42:13 133  ,jpy_g04
21:42:13 134  ,jpy_g05
21:42:13 135  ,jpy_g06
21:42:13 136  ,jpy_g07
21:42:13 137  ,jpy_g08
21:42:13 138  ,jpy_g09
21:42:13 139  ,jpy_g10
21:42:13 140  ,jpy_g11
21:42:13 141  ,jpy_g12
21:42:13 142  ,jpy_g13
21:42:13 143  ,jpy_g14
21:42:13 144  ,jpy_g15
21:42:13 145  ,jpy_g16
21:42:13 146  ,jpy_g17
21:42:13 147  ,jpy_g18
21:42:13 148  ,jpy_g19
21:42:13 149  ,jpy_g20
21:42:13 150  ,jpy_g21
21:42:13 151  ,jpy_g22
21:42:13 152  ,jpy_g23
21:42:13 153  ,jpy_g24
21:42:13 154  ,jpy_g25
21:42:13 155  ,jpy_g26
21:42:13 156  ,jpy_g27
21:42:13 157  ,jpy_g28
21:42:13 158  ,jpy_g29
21:42:13 159  ,jpy_g30
21:42:13 160  ,jpy_g31
21:42:13 161  ,jpy_g32
21:42:13 162  ,jpy_g33
21:42:13 163  ,jpy_g34
21:42:13 164  ,jpy_g35
21:42:13 165  ,jpy_g36
21:42:13 166  ,jpy_g37
21:42:13 167  ,jpy_g38
21:42:13 168  ,jpy_g39
21:42:13 169  ,jpy_g40
21:42:13 170  ,cad_g00
21:42:13 171  ,cad_g01
21:42:13 172  ,cad_g02
21:42:13 173  ,cad_g03
21:42:13 174  ,cad_g04
21:42:13 175  ,cad_g05
21:42:13 176  ,cad_g06
21:42:13 177  ,cad_g07
21:42:13 178  ,cad_g08
21:42:13 179  ,cad_g09
21:42:13 180  ,cad_g10
21:42:13 181  ,cad_g11
21:42:13 182  ,cad_g12
21:42:13 183  ,cad_g13
21:42:13 184  ,cad_g14
21:42:13 185  ,cad_g15
21:42:13 186  ,cad_g16
21:42:13 187  ,cad_g17
21:42:13 188  ,cad_g18
21:42:13 189  ,cad_g19
21:42:13 190  ,cad_g20
21:42:13 191  ,cad_g21
21:42:13 192  ,cad_g22
21:42:13 193  ,cad_g23
21:42:13 194  ,cad_g24
21:42:13 195  ,cad_g25
21:42:13 196  ,cad_g26
21:42:13 197  ,cad_g27
21:42:13 198  ,cad_g28
21:42:13 199  ,cad_g29
21:42:13 200  ,cad_g30
21:42:13 201  ,cad_g31
21:42:13 202  ,cad_g32
21:42:13 203  ,cad_g33
21:42:13 204  ,cad_g34
21:42:13 205  ,cad_g35
21:42:13 206  ,cad_g36
21:42:13 207  ,cad_g37
21:42:13 208  ,cad_g38
21:42:13 209  ,cad_g39
21:42:13 210  ,cad_g40
21:42:13 211  ,chf_g00
21:42:13 212  ,chf_g01
21:42:13 213  ,chf_g02
21:42:13 214  ,chf_g03
21:42:13 215  ,chf_g04
21:42:13 216  ,chf_g05
21:42:13 217  ,chf_g06
21:42:13 218  ,chf_g07
21:42:13 219  ,chf_g08
21:42:13 220  ,chf_g09
21:42:13 221  ,chf_g10
21:42:13 222  ,chf_g11
21:42:13 223  ,chf_g12
21:42:13 224  ,chf_g13
21:42:13 225  ,chf_g14
21:42:13 226  ,chf_g15
21:42:13 227  ,chf_g16
21:42:13 228  ,chf_g17
21:42:13 229  ,chf_g18
21:42:13 230  ,chf_g19
21:42:13 231  ,chf_g20
21:42:13 232  ,chf_g21
21:42:13 233  ,chf_g22
21:42:13 234  ,chf_g23
21:42:13 235  ,chf_g24
21:42:13 236  ,chf_g25
21:42:13 237  ,chf_g26
21:42:13 238  ,chf_g27
21:42:13 239  ,chf_g28
21:42:13 240  ,chf_g29
21:42:13 241  ,chf_g30
21:42:13 242  ,chf_g31
21:42:13 243  ,chf_g32
21:42:13 244  ,chf_g33
21:42:13 245  ,chf_g34
21:42:13 246  ,chf_g35
21:42:13 247  ,chf_g36
21:42:13 248  ,chf_g37
21:42:13 249  ,chf_g38
21:42:13 250  ,chf_g39
21:42:13 251  ,chf_g40
21:42:13 252  FROM chf_ms14 m
21:42:13 253  WHERE m.ydate = '&1'||' '||'&2'
21:42:13 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'09:20:00'

View created.

Elapsed: 00:00:00.14
21:42:13 SQL> 
21:42:13 SQL> -- rpt
21:42:13 SQL> -- We should see just 1 row:
21:42:13 SQL> 
21:42:13 SQL> SELECT COUNT(prdate) FROM sme
21:42:13   2  
21:42:13 SQL> -- Build the model:
21:42:13 SQL> CREATE OR REPLACE VIEW bme AS
21:42:13   2  SELECT
21:42:13   3  'chf'||m.ydate prdate
21:42:13   4  ,gattn
21:42:13   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:42:13   6  ,eur_g00
21:42:13   7  ,eur_g01
21:42:13   8  ,eur_g02
21:42:13   9  ,eur_g03
21:42:13  10  ,eur_g04
21:42:13  11  ,eur_g05
21:42:13  12  ,eur_g06
21:42:13  13  ,eur_g07
21:42:13  14  ,eur_g08
21:42:13  15  ,eur_g09
21:42:13  16  ,eur_g10
21:42:13  17  ,eur_g11
21:42:13  18  ,eur_g12
21:42:13  19  ,eur_g13
21:42:13  20  ,eur_g14
21:42:13  21  ,eur_g15
21:42:13  22  ,eur_g16
21:42:13  23  ,eur_g17
21:42:13  24  ,eur_g18
21:42:13  25  ,eur_g19
21:42:13  26  ,eur_g20
21:42:13  27  ,eur_g21
21:42:13  28  ,eur_g22
21:42:13  29  ,eur_g23
21:42:13  30  ,eur_g24
21:42:13  31  ,eur_g25
21:42:13  32  ,eur_g26
21:42:13  33  ,eur_g27
21:42:13  34  ,eur_g28
21:42:13  35  ,eur_g29
21:42:13  36  ,eur_g30
21:42:13  37  ,eur_g31
21:42:13  38  ,eur_g32
21:42:13  39  ,eur_g33
21:42:13  40  ,eur_g34
21:42:13  41  ,eur_g35
21:42:13  42  ,eur_g36
21:42:13  43  ,eur_g37
21:42:13  44  ,eur_g38
21:42:13  45  ,eur_g39
21:42:13  46  ,eur_g40
21:42:13  47  ,aud_g00
21:42:13  48  ,aud_g01
21:42:13  49  ,aud_g02
21:42:13  50  ,aud_g03
21:42:13  51  ,aud_g04
21:42:13  52  ,aud_g05
21:42:13  53  ,aud_g06
21:42:13  54  ,aud_g07
21:42:13  55  ,aud_g08
21:42:13  56  ,aud_g09
21:42:13  57  ,aud_g10
21:42:13  58  ,aud_g11
21:42:13  59  ,aud_g12
21:42:13  60  ,aud_g13
21:42:13  61  ,aud_g14
21:42:13  62  ,aud_g15
21:42:13  63  ,aud_g16
21:42:13  64  ,aud_g17
21:42:13  65  ,aud_g18
21:42:13  66  ,aud_g19
21:42:13  67  ,aud_g20
21:42:13  68  ,aud_g21
21:42:13  69  ,aud_g22
21:42:13  70  ,aud_g23
21:42:13  71  ,aud_g24
21:42:13  72  ,aud_g25
21:42:13  73  ,aud_g26
21:42:13  74  ,aud_g27
21:42:13  75  ,aud_g28
21:42:13  76  ,aud_g29
21:42:13  77  ,aud_g30
21:42:13  78  ,aud_g31
21:42:13  79  ,aud_g32
21:42:13  80  ,aud_g33
21:42:13  81  ,aud_g34
21:42:13  82  ,aud_g35
21:42:13  83  ,aud_g36
21:42:13  84  ,aud_g37
21:42:13  85  ,aud_g38
21:42:13  86  ,aud_g39
21:42:13  87  ,aud_g40
21:42:13  88  ,gbp_g00
21:42:13  89  ,gbp_g01
21:42:13  90  ,gbp_g02
21:42:13  91  ,gbp_g03
21:42:13  92  ,gbp_g04
21:42:13  93  ,gbp_g05
21:42:13  94  ,gbp_g06
21:42:13  95  ,gbp_g07
21:42:13  96  ,gbp_g08
21:42:13  97  ,gbp_g09
21:42:13  98  ,gbp_g10
21:42:13  99  ,gbp_g11
21:42:13 100  ,gbp_g12
21:42:13 101  ,gbp_g13
21:42:13 102  ,gbp_g14
21:42:13 103  ,gbp_g15
21:42:13 104  ,gbp_g16
21:42:13 105  ,gbp_g17
21:42:13 106  ,gbp_g18
21:42:13 107  ,gbp_g19
21:42:13 108  ,gbp_g20
21:42:13 109  ,gbp_g21
21:42:13 110  ,gbp_g22
21:42:13 111  ,gbp_g23
21:42:13 112  ,gbp_g24
21:42:13 113  ,gbp_g25
21:42:13 114  ,gbp_g26
21:42:13 115  ,gbp_g27
21:42:13 116  ,gbp_g28
21:42:13 117  ,gbp_g29
21:42:13 118  ,gbp_g30
21:42:13 119  ,gbp_g31
21:42:13 120  ,gbp_g32
21:42:13 121  ,gbp_g33
21:42:13 122  ,gbp_g34
21:42:13 123  ,gbp_g35
21:42:13 124  ,gbp_g36
21:42:13 125  ,gbp_g37
21:42:13 126  ,gbp_g38
21:42:13 127  ,gbp_g39
21:42:13 128  ,gbp_g40
21:42:13 129  ,jpy_g00
21:42:13 130  ,jpy_g01
21:42:13 131  ,jpy_g02
21:42:13 132  ,jpy_g03
21:42:13 133  ,jpy_g04
21:42:13 134  ,jpy_g05
21:42:13 135  ,jpy_g06
21:42:13 136  ,jpy_g07
21:42:13 137  ,jpy_g08
21:42:13 138  ,jpy_g09
21:42:13 139  ,jpy_g10
21:42:13 140  ,jpy_g11
21:42:13 141  ,jpy_g12
21:42:13 142  ,jpy_g13
21:42:13 143  ,jpy_g14
21:42:13 144  ,jpy_g15
21:42:13 145  ,jpy_g16
21:42:13 146  ,jpy_g17
21:42:13 147  ,jpy_g18
21:42:13 148  ,jpy_g19
21:42:13 149  ,jpy_g20
21:42:13 150  ,jpy_g21
21:42:13 151  ,jpy_g22
21:42:13 152  ,jpy_g23
21:42:13 153  ,jpy_g24
21:42:13 154  ,jpy_g25
21:42:13 155  ,jpy_g26
21:42:13 156  ,jpy_g27
21:42:13 157  ,jpy_g28
21:42:13 158  ,jpy_g29
21:42:13 159  ,jpy_g30
21:42:13 160  ,jpy_g31
21:42:13 161  ,jpy_g32
21:42:13 162  ,jpy_g33
21:42:13 163  ,jpy_g34
21:42:13 164  ,jpy_g35
21:42:13 165  ,jpy_g36
21:42:13 166  ,jpy_g37
21:42:13 167  ,jpy_g38
21:42:13 168  ,jpy_g39
21:42:13 169  ,jpy_g40
21:42:13 170  ,cad_g00
21:42:13 171  ,cad_g01
21:42:13 172  ,cad_g02
21:42:13 173  ,cad_g03
21:42:13 174  ,cad_g04
21:42:13 175  ,cad_g05
21:42:13 176  ,cad_g06
21:42:13 177  ,cad_g07
21:42:13 178  ,cad_g08
21:42:13 179  ,cad_g09
21:42:13 180  ,cad_g10
21:42:13 181  ,cad_g11
21:42:13 182  ,cad_g12
21:42:13 183  ,cad_g13
21:42:13 184  ,cad_g14
21:42:13 185  ,cad_g15
21:42:13 186  ,cad_g16
21:42:13 187  ,cad_g17
21:42:13 188  ,cad_g18
21:42:13 189  ,cad_g19
21:42:13 190  ,cad_g20
21:42:13 191  ,cad_g21
21:42:13 192  ,cad_g22
21:42:13 193  ,cad_g23
21:42:13 194  ,cad_g24
21:42:13 195  ,cad_g25
21:42:13 196  ,cad_g26
21:42:13 197  ,cad_g27
21:42:13 198  ,cad_g28
21:42:13 199  ,cad_g29
21:42:13 200  ,cad_g30
21:42:13 201  ,cad_g31
21:42:13 202  ,cad_g32
21:42:13 203  ,cad_g33
21:42:13 204  ,cad_g34
21:42:13 205  ,cad_g35
21:42:13 206  ,cad_g36
21:42:13 207  ,cad_g37
21:42:13 208  ,cad_g38
21:42:13 209  ,cad_g39
21:42:13 210  ,cad_g40
21:42:13 211  ,chf_g00
21:42:13 212  ,chf_g01
21:42:13 213  ,chf_g02
21:42:13 214  ,chf_g03
21:42:13 215  ,chf_g04
21:42:13 216  ,chf_g05
21:42:13 217  ,chf_g06
21:42:13 218  ,chf_g07
21:42:13 219  ,chf_g08
21:42:13 220  ,chf_g09
21:42:13 221  ,chf_g10
21:42:13 222  ,chf_g11
21:42:13 223  ,chf_g12
21:42:13 224  ,chf_g13
21:42:13 225  ,chf_g14
21:42:13 226  ,chf_g15
21:42:13 227  ,chf_g16
21:42:13 228  ,chf_g17
21:42:13 229  ,chf_g18
21:42:13 230  ,chf_g19
21:42:13 231  ,chf_g20
21:42:13 232  ,chf_g21
21:42:13 233  ,chf_g22
21:42:13 234  ,chf_g23
21:42:13 235  ,chf_g24
21:42:13 236  ,chf_g25
21:42:13 237  ,chf_g26
21:42:13 238  ,chf_g27
21:42:13 239  ,chf_g28
21:42:13 240  ,chf_g29
21:42:13 241  ,chf_g30
21:42:13 242  ,chf_g31
21:42:13 243  ,chf_g32
21:42:13 244  ,chf_g33
21:42:13 245  ,chf_g34
21:42:13 246  ,chf_g35
21:42:13 247  ,chf_g36
21:42:13 248  ,chf_g37
21:42:13 249  ,chf_g38
21:42:13 250  ,chf_g39
21:42:13 251  ,chf_g40
21:42:13 252  FROM chf_ms14 m
21:42:13 253  WHERE gattn IN('nup','up')
21:42:13 254  AND 1+m.ydate < '&1'||' '||'&2'
21:42:13 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'09:20:00'

View created.

Elapsed: 00:00:00.12
21:42:13 SQL> 
21:42:13 SQL> -- rpt
21:42:13 SQL> 
21:42:13 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:42:13   2  
21:42:13 SQL> SELECT MAX(prdate) FROM bme
21:42:13   2  
21:42:13 SQL> -- Now build model from bme and score sme
21:42:13 SQL> @score1gattn.sql
21:42:13 SQL> -- score1gattn.sql
21:42:13 SQL> 
21:42:13 SQL> -- Does the 1st SVM score
21:42:13 SQL> 
21:42:13 SQL> -- Fill up svmc_apply_prep
21:42:13 SQL> @score_gattn.sql
21:42:13 SQL> --
21:42:13 SQL> -- score_gattn.sql
21:42:13 SQL> --
21:42:13 SQL> 
21:42:13 SQL> -- usage: score_gattn.sql
21:42:13 SQL> 
21:42:13 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:42:13 SQL> 
21:42:13 SQL> DEFINE target	= 'gattn'
21:42:13 SQL> DEFINE model_name = 'forex14'
21:42:13 SQL> DEFINE bldtable	= 'bme'
21:42:13 SQL> DEFINE scoretable = 'sme'
21:42:13 SQL> DEFINE case_id	= 'prdate'
21:42:13 SQL> 
21:42:13 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:42:13 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:42:13 SQL> 
21:42:13 SQL> -- Builds an SVM model using pl/sql.
21:42:13 SQL> 
21:42:13 SQL> -----------------------------------------------------------------------
21:42:13 SQL> --			    BUILD THE MODEL
21:42:13 SQL> -----------------------------------------------------------------------
21:42:13 SQL> 
21:42:13 SQL> -- Cleanup old build data preparation objects for repeat runs
21:42:13 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:42:13 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:42:13 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:42:13 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:42:13 SQL> 
21:42:13 SQL> 
21:42:13 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:42:13 SQL> --
21:42:13 SQL> -- DROP	TABLE svmc_settings ;
21:42:13 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:42:13 SQL> -- DELETE svmc_settings;
21:42:13 SQL> 
21:42:13 SQL> -- The default classification algorithm is Naive Bayes. So override
21:42:13 SQL> -- this choice to SVM using a settings table.
21:42:13 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:42:13 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:42:13 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:42:13 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:42:13 SQL> -- models.
21:42:13 SQL> --
21:42:13 SQL> 
21:42:13 SQL> -- Do this once and then comment it out.
21:42:13 SQL> -- That makes script go faster.
21:42:13 SQL> -- BEGIN
21:42:13 SQL> -- -- Populate settings table
21:42:13 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:42:13 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:42:13 SQL> --
21:42:13 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:42:13 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:42:13 SQL> --
21:42:13 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:42:13 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:42:13 SQL> --   COMMIT;
21:42:13 SQL> -- END;
21:42:13 SQL> -- /
21:42:13 SQL> 
21:42:13 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:42:13 SQL> 
21:42:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:42:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:42:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
21:42:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:42:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:42:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:42:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:42:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:42:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:42:14 SQL> 
21:42:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:42:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:42:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:42:14 SQL> 
21:42:14 SQL> --------------------------------
21:42:14 SQL> -- PREPARE BUILD (TRAINING) DATA
21:42:14 SQL> --
21:42:14 SQL> 
21:42:14 SQL> -- 1. Missing Value treatment for all Predictors and
21:42:14 SQL> -- 2. Outlier Treatment and
21:42:14 SQL> -- 3. Normalization are performed below.
21:42:14 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:42:14 SQL> --    normalized here.
21:42:14 SQL> 
21:42:14 SQL> BEGIN
21:42:14   2  	-- Perform missing value treatment for all predictors
21:42:14   3  	-- create miss tables
21:42:14   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:42:14   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:42:14   6  
21:42:14   7  	-- populate miss tables
21:42:14   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:42:14   9  	  miss_table_name => 'svmc_miss_num',
21:42:14  10  	  data_table_name => '&bldtable',
21:42:14  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:42:14  12  
21:42:14  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:42:14  14  	  miss_table_name => 'svmc_miss_cat',
21:42:14  15  	  data_table_name => '&bldtable',
21:42:14  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:42:14  17  
21:42:14  18  	-- xform input data to replace missing values
21:42:14  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:42:14  20  	  miss_table_name => 'svmc_miss_num',
21:42:14  21  	  data_table_name => '&bldtable',
21:42:14  22  	  xform_view_name => 'xformed_build_miss_num');
21:42:14  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:42:14  24  	  miss_table_name => 'svmc_miss_cat',
21:42:14  25  	  data_table_name => '&bldtable',
21:42:14  26  	  xform_view_name => 'xformed_build_miss_cat');
21:42:14  27  
21:42:14  28  	-- Perform outlier treatment.
21:42:14  29  	-- create clip table
21:42:14  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:42:14  31  
21:42:14  32  	-- populate clip table
21:42:14  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:42:14  34  	  clip_table_name => 'svmc_clip',
21:42:14  35  	  data_table_name => '&bldtable',
21:42:14  36  	  tail_frac	  => 0.025,
21:42:14  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:42:14  38  
21:42:14  39  	-- xform input data to winsorized data
21:42:14  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:42:14  41  	  clip_table_name => 'svmc_clip',
21:42:14  42  	  data_table_name => '&bldtable',
21:42:14  43  	  xform_view_name => 'svmc_winsor');
21:42:14  44  
21:42:14  45  	-- create normalization table
21:42:14  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:42:14  47  
21:42:14  48  	-- populate normalization table based on winsorized data
21:42:14  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:42:14  50  	  norm_table_name => 'svmc_norm',
21:42:14  51  	  data_table_name => 'svmc_winsor',
21:42:14  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:42:14  53  
21:42:14  54  	-- normalize the original data
21:42:14  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:42:14  56  	  norm_table_name => 'svmc_norm',
21:42:14  57  	  data_table_name => '&bldtable',
21:42:14  58  	  xform_view_name => 'svmc_build_prep');
21:42:14  59  END;
21:42:14  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.88
21:42:31 SQL> 
21:42:31 SQL> ---------------------
21:42:31 SQL> -- CREATE A NEW MODEL
21:42:31 SQL> --
21:42:31 SQL> -- Cleanup old model with the same name for repeat runs
21:42:31 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:42:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:42:31   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
21:42:33 SQL> 
21:42:33 SQL> -- Build a new SVM Model
21:42:33 SQL> BEGIN
21:42:33   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:42:33   3  	  model_name	      => '&model_name',
21:42:33   4  	  mining_function     => dbms_data_mining.classification,
21:42:33   5  	  data_table_name     => 'svmc_build_prep',
21:42:33   6  	  case_id_column_name => '&case_id',
21:42:33   7  	  target_column_name  => '&target',
21:42:33   8  	  settings_table_name => 'svmc_settings');
21:42:33   9  END;
21:42:33  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.76
21:42:59 SQL> 
21:42:59 SQL> -----------------------------------------------------------------------
21:42:59 SQL> --			       APPLY/score THE MODEL
21:42:59 SQL> -----------------------------------------------------------------------
21:42:59 SQL> 
21:42:59 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:42:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:42:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:42:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:42:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:42:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:42:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:43:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:43:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:43:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:43:00 SQL> -----------------------
21:43:00 SQL> -- PREPARE SCORING DATA
21:43:00 SQL> --
21:43:00 SQL> -- If the data for model creation has been prepared, then the data
21:43:00 SQL> -- to be scored using the model must be prepared in the same manner
21:43:00 SQL> -- in order to obtain meaningful results.
21:43:00 SQL> --
21:43:00 SQL> -- 1. Missing Value treatment for all Predictors and
21:43:00 SQL> -- 2. Normalization
21:43:00 SQL> -- No outlier treatment will be performed during test and apply. The
21:43:00 SQL> -- normalization step is sufficient, since the normalization parameters
21:43:00 SQL> -- already capture the effects of outlier treatment done with build data.
21:43:00 SQL> --
21:43:00 SQL> BEGIN
21:43:00   2  	-- Xform Test data to replace missing values
21:43:00   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:43:00   4  	  miss_table_name => 'svmc_miss_num',
21:43:00   5  	  data_table_name => '&scoretable',
21:43:00   6  	  xform_view_name => 'xformed_apply_miss_num');
21:43:00   7  
21:43:00   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:43:00   9  	  miss_table_name => 'svmc_miss_cat',
21:43:00  10  	  data_table_name => '&scoretable',
21:43:00  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:43:00  12  
21:43:00  13  	-- Normalize the data to be scored
21:43:00  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:43:00  15  	  norm_table_name => 'svmc_norm',
21:43:00  16  	  data_table_name => '&scoretable',
21:43:00  17  	  xform_view_name => 'svmc_apply_prep');
21:43:00  18  END;
21:43:00  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
21:43:01 SQL> 
21:43:01 SQL> -- Use same model_name used in score_gattn.sql
21:43:01 SQL> DEFINE model_name = 'forex14'
21:43:01 SQL> 
21:43:01 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:43:01 SQL> 
21:43:01 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:43:01   2  SELECT
21:43:01   3  prdate
21:43:01   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:43:01   5  ,sysdate
21:43:01   6  ,SUBSTR(prdate,1,3)pair
21:43:01   7  ,SUBSTR(prdate,4,19)ydate
21:43:01   8  FROM svmc_apply_prep
21:43:01   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:43:01 SQL> @chf_score1day_gattn.sql	2010-12-17 09:15:00
21:43:01 SQL> --
21:43:01 SQL> -- chf_score1day_gattn.sql
21:43:01 SQL> --
21:43:01 SQL> 
21:43:01 SQL> CREATE OR REPLACE VIEW sme AS
21:43:01   2  SELECT
21:43:01   3  'chf'||m.ydate prdate
21:43:01   4  ,NULL gattn
21:43:01   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:43:01   6  ,eur_g00
21:43:01   7  ,eur_g01
21:43:01   8  ,eur_g02
21:43:01   9  ,eur_g03
21:43:01  10  ,eur_g04
21:43:01  11  ,eur_g05
21:43:01  12  ,eur_g06
21:43:01  13  ,eur_g07
21:43:01  14  ,eur_g08
21:43:01  15  ,eur_g09
21:43:01  16  ,eur_g10
21:43:01  17  ,eur_g11
21:43:01  18  ,eur_g12
21:43:01  19  ,eur_g13
21:43:01  20  ,eur_g14
21:43:01  21  ,eur_g15
21:43:01  22  ,eur_g16
21:43:01  23  ,eur_g17
21:43:01  24  ,eur_g18
21:43:01  25  ,eur_g19
21:43:01  26  ,eur_g20
21:43:01  27  ,eur_g21
21:43:01  28  ,eur_g22
21:43:01  29  ,eur_g23
21:43:01  30  ,eur_g24
21:43:01  31  ,eur_g25
21:43:01  32  ,eur_g26
21:43:01  33  ,eur_g27
21:43:01  34  ,eur_g28
21:43:01  35  ,eur_g29
21:43:01  36  ,eur_g30
21:43:01  37  ,eur_g31
21:43:01  38  ,eur_g32
21:43:01  39  ,eur_g33
21:43:01  40  ,eur_g34
21:43:01  41  ,eur_g35
21:43:01  42  ,eur_g36
21:43:01  43  ,eur_g37
21:43:01  44  ,eur_g38
21:43:01  45  ,eur_g39
21:43:01  46  ,eur_g40
21:43:01  47  ,aud_g00
21:43:01  48  ,aud_g01
21:43:01  49  ,aud_g02
21:43:01  50  ,aud_g03
21:43:01  51  ,aud_g04
21:43:01  52  ,aud_g05
21:43:01  53  ,aud_g06
21:43:01  54  ,aud_g07
21:43:01  55  ,aud_g08
21:43:01  56  ,aud_g09
21:43:01  57  ,aud_g10
21:43:01  58  ,aud_g11
21:43:01  59  ,aud_g12
21:43:01  60  ,aud_g13
21:43:01  61  ,aud_g14
21:43:01  62  ,aud_g15
21:43:01  63  ,aud_g16
21:43:01  64  ,aud_g17
21:43:01  65  ,aud_g18
21:43:01  66  ,aud_g19
21:43:01  67  ,aud_g20
21:43:01  68  ,aud_g21
21:43:01  69  ,aud_g22
21:43:01  70  ,aud_g23
21:43:01  71  ,aud_g24
21:43:01  72  ,aud_g25
21:43:01  73  ,aud_g26
21:43:01  74  ,aud_g27
21:43:01  75  ,aud_g28
21:43:01  76  ,aud_g29
21:43:01  77  ,aud_g30
21:43:01  78  ,aud_g31
21:43:01  79  ,aud_g32
21:43:01  80  ,aud_g33
21:43:01  81  ,aud_g34
21:43:01  82  ,aud_g35
21:43:01  83  ,aud_g36
21:43:01  84  ,aud_g37
21:43:01  85  ,aud_g38
21:43:01  86  ,aud_g39
21:43:01  87  ,aud_g40
21:43:01  88  ,gbp_g00
21:43:01  89  ,gbp_g01
21:43:01  90  ,gbp_g02
21:43:01  91  ,gbp_g03
21:43:01  92  ,gbp_g04
21:43:01  93  ,gbp_g05
21:43:01  94  ,gbp_g06
21:43:01  95  ,gbp_g07
21:43:01  96  ,gbp_g08
21:43:01  97  ,gbp_g09
21:43:01  98  ,gbp_g10
21:43:01  99  ,gbp_g11
21:43:01 100  ,gbp_g12
21:43:01 101  ,gbp_g13
21:43:01 102  ,gbp_g14
21:43:01 103  ,gbp_g15
21:43:01 104  ,gbp_g16
21:43:01 105  ,gbp_g17
21:43:01 106  ,gbp_g18
21:43:01 107  ,gbp_g19
21:43:01 108  ,gbp_g20
21:43:01 109  ,gbp_g21
21:43:01 110  ,gbp_g22
21:43:01 111  ,gbp_g23
21:43:01 112  ,gbp_g24
21:43:01 113  ,gbp_g25
21:43:01 114  ,gbp_g26
21:43:01 115  ,gbp_g27
21:43:01 116  ,gbp_g28
21:43:01 117  ,gbp_g29
21:43:01 118  ,gbp_g30
21:43:01 119  ,gbp_g31
21:43:01 120  ,gbp_g32
21:43:01 121  ,gbp_g33
21:43:01 122  ,gbp_g34
21:43:01 123  ,gbp_g35
21:43:01 124  ,gbp_g36
21:43:01 125  ,gbp_g37
21:43:01 126  ,gbp_g38
21:43:01 127  ,gbp_g39
21:43:01 128  ,gbp_g40
21:43:01 129  ,jpy_g00
21:43:01 130  ,jpy_g01
21:43:01 131  ,jpy_g02
21:43:01 132  ,jpy_g03
21:43:01 133  ,jpy_g04
21:43:01 134  ,jpy_g05
21:43:01 135  ,jpy_g06
21:43:01 136  ,jpy_g07
21:43:01 137  ,jpy_g08
21:43:01 138  ,jpy_g09
21:43:01 139  ,jpy_g10
21:43:01 140  ,jpy_g11
21:43:01 141  ,jpy_g12
21:43:01 142  ,jpy_g13
21:43:01 143  ,jpy_g14
21:43:01 144  ,jpy_g15
21:43:01 145  ,jpy_g16
21:43:01 146  ,jpy_g17
21:43:01 147  ,jpy_g18
21:43:01 148  ,jpy_g19
21:43:01 149  ,jpy_g20
21:43:01 150  ,jpy_g21
21:43:01 151  ,jpy_g22
21:43:01 152  ,jpy_g23
21:43:01 153  ,jpy_g24
21:43:01 154  ,jpy_g25
21:43:01 155  ,jpy_g26
21:43:01 156  ,jpy_g27
21:43:01 157  ,jpy_g28
21:43:01 158  ,jpy_g29
21:43:01 159  ,jpy_g30
21:43:01 160  ,jpy_g31
21:43:01 161  ,jpy_g32
21:43:01 162  ,jpy_g33
21:43:01 163  ,jpy_g34
21:43:01 164  ,jpy_g35
21:43:01 165  ,jpy_g36
21:43:01 166  ,jpy_g37
21:43:01 167  ,jpy_g38
21:43:01 168  ,jpy_g39
21:43:01 169  ,jpy_g40
21:43:01 170  ,cad_g00
21:43:01 171  ,cad_g01
21:43:01 172  ,cad_g02
21:43:01 173  ,cad_g03
21:43:01 174  ,cad_g04
21:43:01 175  ,cad_g05
21:43:01 176  ,cad_g06
21:43:01 177  ,cad_g07
21:43:01 178  ,cad_g08
21:43:01 179  ,cad_g09
21:43:01 180  ,cad_g10
21:43:01 181  ,cad_g11
21:43:01 182  ,cad_g12
21:43:01 183  ,cad_g13
21:43:01 184  ,cad_g14
21:43:01 185  ,cad_g15
21:43:01 186  ,cad_g16
21:43:01 187  ,cad_g17
21:43:01 188  ,cad_g18
21:43:01 189  ,cad_g19
21:43:01 190  ,cad_g20
21:43:01 191  ,cad_g21
21:43:01 192  ,cad_g22
21:43:01 193  ,cad_g23
21:43:01 194  ,cad_g24
21:43:01 195  ,cad_g25
21:43:01 196  ,cad_g26
21:43:01 197  ,cad_g27
21:43:01 198  ,cad_g28
21:43:01 199  ,cad_g29
21:43:01 200  ,cad_g30
21:43:01 201  ,cad_g31
21:43:01 202  ,cad_g32
21:43:01 203  ,cad_g33
21:43:01 204  ,cad_g34
21:43:01 205  ,cad_g35
21:43:01 206  ,cad_g36
21:43:01 207  ,cad_g37
21:43:01 208  ,cad_g38
21:43:01 209  ,cad_g39
21:43:01 210  ,cad_g40
21:43:01 211  ,chf_g00
21:43:01 212  ,chf_g01
21:43:01 213  ,chf_g02
21:43:01 214  ,chf_g03
21:43:01 215  ,chf_g04
21:43:01 216  ,chf_g05
21:43:01 217  ,chf_g06
21:43:01 218  ,chf_g07
21:43:01 219  ,chf_g08
21:43:01 220  ,chf_g09
21:43:01 221  ,chf_g10
21:43:01 222  ,chf_g11
21:43:01 223  ,chf_g12
21:43:01 224  ,chf_g13
21:43:01 225  ,chf_g14
21:43:01 226  ,chf_g15
21:43:01 227  ,chf_g16
21:43:01 228  ,chf_g17
21:43:01 229  ,chf_g18
21:43:01 230  ,chf_g19
21:43:01 231  ,chf_g20
21:43:01 232  ,chf_g21
21:43:01 233  ,chf_g22
21:43:01 234  ,chf_g23
21:43:01 235  ,chf_g24
21:43:01 236  ,chf_g25
21:43:01 237  ,chf_g26
21:43:01 238  ,chf_g27
21:43:01 239  ,chf_g28
21:43:01 240  ,chf_g29
21:43:01 241  ,chf_g30
21:43:01 242  ,chf_g31
21:43:01 243  ,chf_g32
21:43:01 244  ,chf_g33
21:43:01 245  ,chf_g34
21:43:01 246  ,chf_g35
21:43:01 247  ,chf_g36
21:43:01 248  ,chf_g37
21:43:01 249  ,chf_g38
21:43:01 250  ,chf_g39
21:43:01 251  ,chf_g40
21:43:01 252  FROM chf_ms14 m
21:43:01 253  WHERE m.ydate = '&1'||' '||'&2'
21:43:01 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'09:15:00'

View created.

Elapsed: 00:00:00.11
21:43:01 SQL> 
21:43:01 SQL> -- rpt
21:43:01 SQL> -- We should see just 1 row:
21:43:01 SQL> 
21:43:01 SQL> SELECT COUNT(prdate) FROM sme
21:43:01   2  
21:43:01 SQL> -- Build the model:
21:43:01 SQL> CREATE OR REPLACE VIEW bme AS
21:43:01   2  SELECT
21:43:01   3  'chf'||m.ydate prdate
21:43:01   4  ,gattn
21:43:01   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:43:01   6  ,eur_g00
21:43:01   7  ,eur_g01
21:43:01   8  ,eur_g02
21:43:01   9  ,eur_g03
21:43:01  10  ,eur_g04
21:43:01  11  ,eur_g05
21:43:01  12  ,eur_g06
21:43:01  13  ,eur_g07
21:43:01  14  ,eur_g08
21:43:01  15  ,eur_g09
21:43:01  16  ,eur_g10
21:43:01  17  ,eur_g11
21:43:01  18  ,eur_g12
21:43:01  19  ,eur_g13
21:43:01  20  ,eur_g14
21:43:01  21  ,eur_g15
21:43:01  22  ,eur_g16
21:43:01  23  ,eur_g17
21:43:01  24  ,eur_g18
21:43:01  25  ,eur_g19
21:43:01  26  ,eur_g20
21:43:01  27  ,eur_g21
21:43:01  28  ,eur_g22
21:43:01  29  ,eur_g23
21:43:01  30  ,eur_g24
21:43:01  31  ,eur_g25
21:43:01  32  ,eur_g26
21:43:01  33  ,eur_g27
21:43:01  34  ,eur_g28
21:43:01  35  ,eur_g29
21:43:01  36  ,eur_g30
21:43:01  37  ,eur_g31
21:43:01  38  ,eur_g32
21:43:01  39  ,eur_g33
21:43:01  40  ,eur_g34
21:43:01  41  ,eur_g35
21:43:01  42  ,eur_g36
21:43:01  43  ,eur_g37
21:43:01  44  ,eur_g38
21:43:01  45  ,eur_g39
21:43:01  46  ,eur_g40
21:43:01  47  ,aud_g00
21:43:01  48  ,aud_g01
21:43:01  49  ,aud_g02
21:43:01  50  ,aud_g03
21:43:01  51  ,aud_g04
21:43:01  52  ,aud_g05
21:43:01  53  ,aud_g06
21:43:01  54  ,aud_g07
21:43:01  55  ,aud_g08
21:43:01  56  ,aud_g09
21:43:01  57  ,aud_g10
21:43:01  58  ,aud_g11
21:43:01  59  ,aud_g12
21:43:01  60  ,aud_g13
21:43:01  61  ,aud_g14
21:43:01  62  ,aud_g15
21:43:01  63  ,aud_g16
21:43:01  64  ,aud_g17
21:43:01  65  ,aud_g18
21:43:01  66  ,aud_g19
21:43:01  67  ,aud_g20
21:43:01  68  ,aud_g21
21:43:01  69  ,aud_g22
21:43:01  70  ,aud_g23
21:43:01  71  ,aud_g24
21:43:01  72  ,aud_g25
21:43:01  73  ,aud_g26
21:43:01  74  ,aud_g27
21:43:01  75  ,aud_g28
21:43:01  76  ,aud_g29
21:43:01  77  ,aud_g30
21:43:01  78  ,aud_g31
21:43:01  79  ,aud_g32
21:43:01  80  ,aud_g33
21:43:01  81  ,aud_g34
21:43:01  82  ,aud_g35
21:43:01  83  ,aud_g36
21:43:01  84  ,aud_g37
21:43:01  85  ,aud_g38
21:43:01  86  ,aud_g39
21:43:01  87  ,aud_g40
21:43:01  88  ,gbp_g00
21:43:01  89  ,gbp_g01
21:43:01  90  ,gbp_g02
21:43:01  91  ,gbp_g03
21:43:01  92  ,gbp_g04
21:43:01  93  ,gbp_g05
21:43:01  94  ,gbp_g06
21:43:01  95  ,gbp_g07
21:43:01  96  ,gbp_g08
21:43:01  97  ,gbp_g09
21:43:01  98  ,gbp_g10
21:43:01  99  ,gbp_g11
21:43:01 100  ,gbp_g12
21:43:01 101  ,gbp_g13
21:43:01 102  ,gbp_g14
21:43:01 103  ,gbp_g15
21:43:01 104  ,gbp_g16
21:43:01 105  ,gbp_g17
21:43:01 106  ,gbp_g18
21:43:01 107  ,gbp_g19
21:43:01 108  ,gbp_g20
21:43:01 109  ,gbp_g21
21:43:01 110  ,gbp_g22
21:43:01 111  ,gbp_g23
21:43:01 112  ,gbp_g24
21:43:01 113  ,gbp_g25
21:43:01 114  ,gbp_g26
21:43:01 115  ,gbp_g27
21:43:01 116  ,gbp_g28
21:43:01 117  ,gbp_g29
21:43:01 118  ,gbp_g30
21:43:01 119  ,gbp_g31
21:43:01 120  ,gbp_g32
21:43:01 121  ,gbp_g33
21:43:01 122  ,gbp_g34
21:43:01 123  ,gbp_g35
21:43:01 124  ,gbp_g36
21:43:01 125  ,gbp_g37
21:43:01 126  ,gbp_g38
21:43:01 127  ,gbp_g39
21:43:01 128  ,gbp_g40
21:43:01 129  ,jpy_g00
21:43:01 130  ,jpy_g01
21:43:01 131  ,jpy_g02
21:43:01 132  ,jpy_g03
21:43:01 133  ,jpy_g04
21:43:01 134  ,jpy_g05
21:43:01 135  ,jpy_g06
21:43:01 136  ,jpy_g07
21:43:01 137  ,jpy_g08
21:43:01 138  ,jpy_g09
21:43:01 139  ,jpy_g10
21:43:01 140  ,jpy_g11
21:43:01 141  ,jpy_g12
21:43:01 142  ,jpy_g13
21:43:01 143  ,jpy_g14
21:43:01 144  ,jpy_g15
21:43:01 145  ,jpy_g16
21:43:01 146  ,jpy_g17
21:43:01 147  ,jpy_g18
21:43:01 148  ,jpy_g19
21:43:01 149  ,jpy_g20
21:43:01 150  ,jpy_g21
21:43:01 151  ,jpy_g22
21:43:01 152  ,jpy_g23
21:43:01 153  ,jpy_g24
21:43:01 154  ,jpy_g25
21:43:01 155  ,jpy_g26
21:43:01 156  ,jpy_g27
21:43:01 157  ,jpy_g28
21:43:01 158  ,jpy_g29
21:43:01 159  ,jpy_g30
21:43:01 160  ,jpy_g31
21:43:01 161  ,jpy_g32
21:43:01 162  ,jpy_g33
21:43:01 163  ,jpy_g34
21:43:01 164  ,jpy_g35
21:43:01 165  ,jpy_g36
21:43:01 166  ,jpy_g37
21:43:01 167  ,jpy_g38
21:43:01 168  ,jpy_g39
21:43:01 169  ,jpy_g40
21:43:01 170  ,cad_g00
21:43:01 171  ,cad_g01
21:43:01 172  ,cad_g02
21:43:01 173  ,cad_g03
21:43:01 174  ,cad_g04
21:43:01 175  ,cad_g05
21:43:01 176  ,cad_g06
21:43:01 177  ,cad_g07
21:43:01 178  ,cad_g08
21:43:01 179  ,cad_g09
21:43:01 180  ,cad_g10
21:43:01 181  ,cad_g11
21:43:01 182  ,cad_g12
21:43:01 183  ,cad_g13
21:43:01 184  ,cad_g14
21:43:01 185  ,cad_g15
21:43:01 186  ,cad_g16
21:43:01 187  ,cad_g17
21:43:01 188  ,cad_g18
21:43:01 189  ,cad_g19
21:43:01 190  ,cad_g20
21:43:01 191  ,cad_g21
21:43:01 192  ,cad_g22
21:43:01 193  ,cad_g23
21:43:01 194  ,cad_g24
21:43:01 195  ,cad_g25
21:43:01 196  ,cad_g26
21:43:01 197  ,cad_g27
21:43:01 198  ,cad_g28
21:43:01 199  ,cad_g29
21:43:01 200  ,cad_g30
21:43:01 201  ,cad_g31
21:43:01 202  ,cad_g32
21:43:01 203  ,cad_g33
21:43:01 204  ,cad_g34
21:43:01 205  ,cad_g35
21:43:01 206  ,cad_g36
21:43:01 207  ,cad_g37
21:43:01 208  ,cad_g38
21:43:01 209  ,cad_g39
21:43:01 210  ,cad_g40
21:43:01 211  ,chf_g00
21:43:01 212  ,chf_g01
21:43:01 213  ,chf_g02
21:43:01 214  ,chf_g03
21:43:01 215  ,chf_g04
21:43:01 216  ,chf_g05
21:43:01 217  ,chf_g06
21:43:01 218  ,chf_g07
21:43:01 219  ,chf_g08
21:43:01 220  ,chf_g09
21:43:01 221  ,chf_g10
21:43:01 222  ,chf_g11
21:43:01 223  ,chf_g12
21:43:01 224  ,chf_g13
21:43:01 225  ,chf_g14
21:43:01 226  ,chf_g15
21:43:01 227  ,chf_g16
21:43:01 228  ,chf_g17
21:43:01 229  ,chf_g18
21:43:01 230  ,chf_g19
21:43:01 231  ,chf_g20
21:43:01 232  ,chf_g21
21:43:01 233  ,chf_g22
21:43:01 234  ,chf_g23
21:43:01 235  ,chf_g24
21:43:01 236  ,chf_g25
21:43:01 237  ,chf_g26
21:43:01 238  ,chf_g27
21:43:01 239  ,chf_g28
21:43:01 240  ,chf_g29
21:43:01 241  ,chf_g30
21:43:01 242  ,chf_g31
21:43:01 243  ,chf_g32
21:43:01 244  ,chf_g33
21:43:01 245  ,chf_g34
21:43:01 246  ,chf_g35
21:43:01 247  ,chf_g36
21:43:01 248  ,chf_g37
21:43:01 249  ,chf_g38
21:43:01 250  ,chf_g39
21:43:01 251  ,chf_g40
21:43:01 252  FROM chf_ms14 m
21:43:01 253  WHERE gattn IN('nup','up')
21:43:01 254  AND 1+m.ydate < '&1'||' '||'&2'
21:43:01 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'09:15:00'

View created.

Elapsed: 00:00:00.12
21:43:01 SQL> 
21:43:01 SQL> -- rpt
21:43:01 SQL> 
21:43:01 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:43:01   2  
21:43:01 SQL> SELECT MAX(prdate) FROM bme
21:43:01   2  
21:43:01 SQL> -- Now build model from bme and score sme
21:43:01 SQL> @score1gattn.sql
21:43:01 SQL> -- score1gattn.sql
21:43:01 SQL> 
21:43:01 SQL> -- Does the 1st SVM score
21:43:01 SQL> 
21:43:01 SQL> -- Fill up svmc_apply_prep
21:43:01 SQL> @score_gattn.sql
21:43:01 SQL> --
21:43:01 SQL> -- score_gattn.sql
21:43:01 SQL> --
21:43:01 SQL> 
21:43:01 SQL> -- usage: score_gattn.sql
21:43:01 SQL> 
21:43:01 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:43:01 SQL> 
21:43:01 SQL> DEFINE target	= 'gattn'
21:43:01 SQL> DEFINE model_name = 'forex14'
21:43:01 SQL> DEFINE bldtable	= 'bme'
21:43:01 SQL> DEFINE scoretable = 'sme'
21:43:01 SQL> DEFINE case_id	= 'prdate'
21:43:01 SQL> 
21:43:01 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:43:01 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:43:01 SQL> 
21:43:01 SQL> -- Builds an SVM model using pl/sql.
21:43:01 SQL> 
21:43:01 SQL> -----------------------------------------------------------------------
21:43:01 SQL> --			    BUILD THE MODEL
21:43:01 SQL> -----------------------------------------------------------------------
21:43:01 SQL> 
21:43:01 SQL> -- Cleanup old build data preparation objects for repeat runs
21:43:01 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:43:01 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:43:01 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:43:01 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:43:01 SQL> 
21:43:01 SQL> 
21:43:01 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:43:01 SQL> --
21:43:01 SQL> -- DROP	TABLE svmc_settings ;
21:43:01 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:43:01 SQL> -- DELETE svmc_settings;
21:43:01 SQL> 
21:43:01 SQL> -- The default classification algorithm is Naive Bayes. So override
21:43:01 SQL> -- this choice to SVM using a settings table.
21:43:01 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:43:01 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:43:01 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:43:01 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:43:01 SQL> -- models.
21:43:01 SQL> --
21:43:01 SQL> 
21:43:01 SQL> -- Do this once and then comment it out.
21:43:01 SQL> -- That makes script go faster.
21:43:01 SQL> -- BEGIN
21:43:01 SQL> -- -- Populate settings table
21:43:01 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:43:01 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:43:01 SQL> --
21:43:01 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:43:01 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:43:01 SQL> --
21:43:01 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:43:01 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:43:01 SQL> --   COMMIT;
21:43:01 SQL> -- END;
21:43:01 SQL> -- /
21:43:01 SQL> 
21:43:01 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:43:01 SQL> 
21:43:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:43:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:43:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:43:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:43:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:43:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:43:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:43:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:43:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:43:01 SQL> 
21:43:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:43:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:43:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:43:02 SQL> 
21:43:02 SQL> --------------------------------
21:43:02 SQL> -- PREPARE BUILD (TRAINING) DATA
21:43:02 SQL> --
21:43:02 SQL> 
21:43:02 SQL> -- 1. Missing Value treatment for all Predictors and
21:43:02 SQL> -- 2. Outlier Treatment and
21:43:02 SQL> -- 3. Normalization are performed below.
21:43:02 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:43:02 SQL> --    normalized here.
21:43:02 SQL> 
21:43:02 SQL> BEGIN
21:43:02   2  	-- Perform missing value treatment for all predictors
21:43:02   3  	-- create miss tables
21:43:02   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:43:02   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:43:02   6  
21:43:02   7  	-- populate miss tables
21:43:02   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:43:02   9  	  miss_table_name => 'svmc_miss_num',
21:43:02  10  	  data_table_name => '&bldtable',
21:43:02  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:43:02  12  
21:43:02  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:43:02  14  	  miss_table_name => 'svmc_miss_cat',
21:43:02  15  	  data_table_name => '&bldtable',
21:43:02  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:43:02  17  
21:43:02  18  	-- xform input data to replace missing values
21:43:02  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:43:02  20  	  miss_table_name => 'svmc_miss_num',
21:43:02  21  	  data_table_name => '&bldtable',
21:43:02  22  	  xform_view_name => 'xformed_build_miss_num');
21:43:02  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:43:02  24  	  miss_table_name => 'svmc_miss_cat',
21:43:02  25  	  data_table_name => '&bldtable',
21:43:02  26  	  xform_view_name => 'xformed_build_miss_cat');
21:43:02  27  
21:43:02  28  	-- Perform outlier treatment.
21:43:02  29  	-- create clip table
21:43:02  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:43:02  31  
21:43:02  32  	-- populate clip table
21:43:02  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:43:02  34  	  clip_table_name => 'svmc_clip',
21:43:02  35  	  data_table_name => '&bldtable',
21:43:02  36  	  tail_frac	  => 0.025,
21:43:02  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:43:02  38  
21:43:02  39  	-- xform input data to winsorized data
21:43:02  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:43:02  41  	  clip_table_name => 'svmc_clip',
21:43:02  42  	  data_table_name => '&bldtable',
21:43:02  43  	  xform_view_name => 'svmc_winsor');
21:43:02  44  
21:43:02  45  	-- create normalization table
21:43:02  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:43:02  47  
21:43:02  48  	-- populate normalization table based on winsorized data
21:43:02  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:43:02  50  	  norm_table_name => 'svmc_norm',
21:43:02  51  	  data_table_name => 'svmc_winsor',
21:43:02  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:43:02  53  
21:43:02  54  	-- normalize the original data
21:43:02  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:43:02  56  	  norm_table_name => 'svmc_norm',
21:43:02  57  	  data_table_name => '&bldtable',
21:43:02  58  	  xform_view_name => 'svmc_build_prep');
21:43:02  59  END;
21:43:02  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.89
21:43:19 SQL> 
21:43:19 SQL> ---------------------
21:43:19 SQL> -- CREATE A NEW MODEL
21:43:19 SQL> --
21:43:19 SQL> -- Cleanup old model with the same name for repeat runs
21:43:19 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:43:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:43:19   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.14
21:43:21 SQL> 
21:43:21 SQL> -- Build a new SVM Model
21:43:21 SQL> BEGIN
21:43:21   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:43:21   3  	  model_name	      => '&model_name',
21:43:21   4  	  mining_function     => dbms_data_mining.classification,
21:43:21   5  	  data_table_name     => 'svmc_build_prep',
21:43:21   6  	  case_id_column_name => '&case_id',
21:43:21   7  	  target_column_name  => '&target',
21:43:21   8  	  settings_table_name => 'svmc_settings');
21:43:21   9  END;
21:43:21  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.18
21:43:48 SQL> 
21:43:48 SQL> -----------------------------------------------------------------------
21:43:48 SQL> --			       APPLY/score THE MODEL
21:43:48 SQL> -----------------------------------------------------------------------
21:43:48 SQL> 
21:43:48 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:43:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:43:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:43:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:43:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:43:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:43:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:43:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:43:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:43:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:43:48 SQL> -----------------------
21:43:48 SQL> -- PREPARE SCORING DATA
21:43:48 SQL> --
21:43:48 SQL> -- If the data for model creation has been prepared, then the data
21:43:48 SQL> -- to be scored using the model must be prepared in the same manner
21:43:48 SQL> -- in order to obtain meaningful results.
21:43:48 SQL> --
21:43:48 SQL> -- 1. Missing Value treatment for all Predictors and
21:43:48 SQL> -- 2. Normalization
21:43:48 SQL> -- No outlier treatment will be performed during test and apply. The
21:43:48 SQL> -- normalization step is sufficient, since the normalization parameters
21:43:48 SQL> -- already capture the effects of outlier treatment done with build data.
21:43:48 SQL> --
21:43:48 SQL> BEGIN
21:43:48   2  	-- Xform Test data to replace missing values
21:43:48   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:43:48   4  	  miss_table_name => 'svmc_miss_num',
21:43:48   5  	  data_table_name => '&scoretable',
21:43:48   6  	  xform_view_name => 'xformed_apply_miss_num');
21:43:48   7  
21:43:48   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:43:48   9  	  miss_table_name => 'svmc_miss_cat',
21:43:48  10  	  data_table_name => '&scoretable',
21:43:48  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:43:48  12  
21:43:48  13  	-- Normalize the data to be scored
21:43:48  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:43:48  15  	  norm_table_name => 'svmc_norm',
21:43:48  16  	  data_table_name => '&scoretable',
21:43:48  17  	  xform_view_name => 'svmc_apply_prep');
21:43:48  18  END;
21:43:48  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.12
21:43:49 SQL> 
21:43:49 SQL> -- Use same model_name used in score_gattn.sql
21:43:49 SQL> DEFINE model_name = 'forex14'
21:43:49 SQL> 
21:43:49 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:43:49 SQL> 
21:43:49 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:43:49   2  SELECT
21:43:49   3  prdate
21:43:49   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:43:49   5  ,sysdate
21:43:49   6  ,SUBSTR(prdate,1,3)pair
21:43:49   7  ,SUBSTR(prdate,4,19)ydate
21:43:49   8  FROM svmc_apply_prep
21:43:49   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:43:49 SQL> @chf_score1day_gattn.sql	2010-12-17 09:10:00
21:43:49 SQL> --
21:43:49 SQL> -- chf_score1day_gattn.sql
21:43:49 SQL> --
21:43:49 SQL> 
21:43:49 SQL> CREATE OR REPLACE VIEW sme AS
21:43:49   2  SELECT
21:43:49   3  'chf'||m.ydate prdate
21:43:49   4  ,NULL gattn
21:43:49   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:43:49   6  ,eur_g00
21:43:49   7  ,eur_g01
21:43:49   8  ,eur_g02
21:43:49   9  ,eur_g03
21:43:49  10  ,eur_g04
21:43:49  11  ,eur_g05
21:43:49  12  ,eur_g06
21:43:49  13  ,eur_g07
21:43:49  14  ,eur_g08
21:43:49  15  ,eur_g09
21:43:49  16  ,eur_g10
21:43:49  17  ,eur_g11
21:43:49  18  ,eur_g12
21:43:49  19  ,eur_g13
21:43:49  20  ,eur_g14
21:43:49  21  ,eur_g15
21:43:49  22  ,eur_g16
21:43:49  23  ,eur_g17
21:43:49  24  ,eur_g18
21:43:49  25  ,eur_g19
21:43:49  26  ,eur_g20
21:43:49  27  ,eur_g21
21:43:49  28  ,eur_g22
21:43:49  29  ,eur_g23
21:43:49  30  ,eur_g24
21:43:49  31  ,eur_g25
21:43:49  32  ,eur_g26
21:43:49  33  ,eur_g27
21:43:49  34  ,eur_g28
21:43:49  35  ,eur_g29
21:43:49  36  ,eur_g30
21:43:49  37  ,eur_g31
21:43:49  38  ,eur_g32
21:43:49  39  ,eur_g33
21:43:49  40  ,eur_g34
21:43:49  41  ,eur_g35
21:43:49  42  ,eur_g36
21:43:49  43  ,eur_g37
21:43:49  44  ,eur_g38
21:43:49  45  ,eur_g39
21:43:49  46  ,eur_g40
21:43:49  47  ,aud_g00
21:43:49  48  ,aud_g01
21:43:49  49  ,aud_g02
21:43:49  50  ,aud_g03
21:43:49  51  ,aud_g04
21:43:49  52  ,aud_g05
21:43:49  53  ,aud_g06
21:43:49  54  ,aud_g07
21:43:49  55  ,aud_g08
21:43:49  56  ,aud_g09
21:43:49  57  ,aud_g10
21:43:49  58  ,aud_g11
21:43:49  59  ,aud_g12
21:43:49  60  ,aud_g13
21:43:49  61  ,aud_g14
21:43:49  62  ,aud_g15
21:43:49  63  ,aud_g16
21:43:49  64  ,aud_g17
21:43:49  65  ,aud_g18
21:43:49  66  ,aud_g19
21:43:49  67  ,aud_g20
21:43:49  68  ,aud_g21
21:43:49  69  ,aud_g22
21:43:49  70  ,aud_g23
21:43:49  71  ,aud_g24
21:43:49  72  ,aud_g25
21:43:49  73  ,aud_g26
21:43:49  74  ,aud_g27
21:43:49  75  ,aud_g28
21:43:49  76  ,aud_g29
21:43:49  77  ,aud_g30
21:43:49  78  ,aud_g31
21:43:49  79  ,aud_g32
21:43:49  80  ,aud_g33
21:43:49  81  ,aud_g34
21:43:49  82  ,aud_g35
21:43:49  83  ,aud_g36
21:43:49  84  ,aud_g37
21:43:49  85  ,aud_g38
21:43:49  86  ,aud_g39
21:43:49  87  ,aud_g40
21:43:49  88  ,gbp_g00
21:43:49  89  ,gbp_g01
21:43:49  90  ,gbp_g02
21:43:49  91  ,gbp_g03
21:43:49  92  ,gbp_g04
21:43:49  93  ,gbp_g05
21:43:49  94  ,gbp_g06
21:43:49  95  ,gbp_g07
21:43:49  96  ,gbp_g08
21:43:49  97  ,gbp_g09
21:43:49  98  ,gbp_g10
21:43:49  99  ,gbp_g11
21:43:49 100  ,gbp_g12
21:43:49 101  ,gbp_g13
21:43:49 102  ,gbp_g14
21:43:49 103  ,gbp_g15
21:43:49 104  ,gbp_g16
21:43:49 105  ,gbp_g17
21:43:49 106  ,gbp_g18
21:43:49 107  ,gbp_g19
21:43:49 108  ,gbp_g20
21:43:49 109  ,gbp_g21
21:43:49 110  ,gbp_g22
21:43:49 111  ,gbp_g23
21:43:49 112  ,gbp_g24
21:43:49 113  ,gbp_g25
21:43:49 114  ,gbp_g26
21:43:49 115  ,gbp_g27
21:43:49 116  ,gbp_g28
21:43:49 117  ,gbp_g29
21:43:49 118  ,gbp_g30
21:43:49 119  ,gbp_g31
21:43:49 120  ,gbp_g32
21:43:49 121  ,gbp_g33
21:43:49 122  ,gbp_g34
21:43:49 123  ,gbp_g35
21:43:49 124  ,gbp_g36
21:43:49 125  ,gbp_g37
21:43:49 126  ,gbp_g38
21:43:49 127  ,gbp_g39
21:43:49 128  ,gbp_g40
21:43:49 129  ,jpy_g00
21:43:49 130  ,jpy_g01
21:43:49 131  ,jpy_g02
21:43:49 132  ,jpy_g03
21:43:49 133  ,jpy_g04
21:43:49 134  ,jpy_g05
21:43:49 135  ,jpy_g06
21:43:49 136  ,jpy_g07
21:43:49 137  ,jpy_g08
21:43:49 138  ,jpy_g09
21:43:49 139  ,jpy_g10
21:43:49 140  ,jpy_g11
21:43:49 141  ,jpy_g12
21:43:49 142  ,jpy_g13
21:43:49 143  ,jpy_g14
21:43:49 144  ,jpy_g15
21:43:49 145  ,jpy_g16
21:43:49 146  ,jpy_g17
21:43:49 147  ,jpy_g18
21:43:49 148  ,jpy_g19
21:43:49 149  ,jpy_g20
21:43:49 150  ,jpy_g21
21:43:49 151  ,jpy_g22
21:43:49 152  ,jpy_g23
21:43:49 153  ,jpy_g24
21:43:49 154  ,jpy_g25
21:43:49 155  ,jpy_g26
21:43:49 156  ,jpy_g27
21:43:49 157  ,jpy_g28
21:43:49 158  ,jpy_g29
21:43:49 159  ,jpy_g30
21:43:49 160  ,jpy_g31
21:43:49 161  ,jpy_g32
21:43:49 162  ,jpy_g33
21:43:49 163  ,jpy_g34
21:43:49 164  ,jpy_g35
21:43:49 165  ,jpy_g36
21:43:49 166  ,jpy_g37
21:43:49 167  ,jpy_g38
21:43:49 168  ,jpy_g39
21:43:49 169  ,jpy_g40
21:43:49 170  ,cad_g00
21:43:49 171  ,cad_g01
21:43:49 172  ,cad_g02
21:43:49 173  ,cad_g03
21:43:49 174  ,cad_g04
21:43:49 175  ,cad_g05
21:43:49 176  ,cad_g06
21:43:49 177  ,cad_g07
21:43:49 178  ,cad_g08
21:43:49 179  ,cad_g09
21:43:49 180  ,cad_g10
21:43:49 181  ,cad_g11
21:43:49 182  ,cad_g12
21:43:49 183  ,cad_g13
21:43:49 184  ,cad_g14
21:43:49 185  ,cad_g15
21:43:49 186  ,cad_g16
21:43:49 187  ,cad_g17
21:43:49 188  ,cad_g18
21:43:49 189  ,cad_g19
21:43:49 190  ,cad_g20
21:43:49 191  ,cad_g21
21:43:49 192  ,cad_g22
21:43:49 193  ,cad_g23
21:43:49 194  ,cad_g24
21:43:49 195  ,cad_g25
21:43:49 196  ,cad_g26
21:43:49 197  ,cad_g27
21:43:49 198  ,cad_g28
21:43:49 199  ,cad_g29
21:43:49 200  ,cad_g30
21:43:49 201  ,cad_g31
21:43:49 202  ,cad_g32
21:43:49 203  ,cad_g33
21:43:49 204  ,cad_g34
21:43:49 205  ,cad_g35
21:43:49 206  ,cad_g36
21:43:49 207  ,cad_g37
21:43:49 208  ,cad_g38
21:43:49 209  ,cad_g39
21:43:49 210  ,cad_g40
21:43:49 211  ,chf_g00
21:43:49 212  ,chf_g01
21:43:49 213  ,chf_g02
21:43:49 214  ,chf_g03
21:43:49 215  ,chf_g04
21:43:49 216  ,chf_g05
21:43:49 217  ,chf_g06
21:43:49 218  ,chf_g07
21:43:49 219  ,chf_g08
21:43:49 220  ,chf_g09
21:43:49 221  ,chf_g10
21:43:49 222  ,chf_g11
21:43:49 223  ,chf_g12
21:43:49 224  ,chf_g13
21:43:49 225  ,chf_g14
21:43:49 226  ,chf_g15
21:43:49 227  ,chf_g16
21:43:49 228  ,chf_g17
21:43:49 229  ,chf_g18
21:43:49 230  ,chf_g19
21:43:49 231  ,chf_g20
21:43:49 232  ,chf_g21
21:43:49 233  ,chf_g22
21:43:49 234  ,chf_g23
21:43:49 235  ,chf_g24
21:43:49 236  ,chf_g25
21:43:49 237  ,chf_g26
21:43:49 238  ,chf_g27
21:43:49 239  ,chf_g28
21:43:49 240  ,chf_g29
21:43:49 241  ,chf_g30
21:43:49 242  ,chf_g31
21:43:49 243  ,chf_g32
21:43:49 244  ,chf_g33
21:43:49 245  ,chf_g34
21:43:49 246  ,chf_g35
21:43:49 247  ,chf_g36
21:43:49 248  ,chf_g37
21:43:49 249  ,chf_g38
21:43:49 250  ,chf_g39
21:43:49 251  ,chf_g40
21:43:49 252  FROM chf_ms14 m
21:43:49 253  WHERE m.ydate = '&1'||' '||'&2'
21:43:49 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'09:10:00'

View created.

Elapsed: 00:00:00.14
21:43:49 SQL> 
21:43:49 SQL> -- rpt
21:43:49 SQL> -- We should see just 1 row:
21:43:49 SQL> 
21:43:49 SQL> SELECT COUNT(prdate) FROM sme
21:43:49   2  
21:43:49 SQL> -- Build the model:
21:43:49 SQL> CREATE OR REPLACE VIEW bme AS
21:43:49   2  SELECT
21:43:49   3  'chf'||m.ydate prdate
21:43:49   4  ,gattn
21:43:49   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:43:49   6  ,eur_g00
21:43:49   7  ,eur_g01
21:43:49   8  ,eur_g02
21:43:49   9  ,eur_g03
21:43:49  10  ,eur_g04
21:43:49  11  ,eur_g05
21:43:49  12  ,eur_g06
21:43:49  13  ,eur_g07
21:43:49  14  ,eur_g08
21:43:49  15  ,eur_g09
21:43:49  16  ,eur_g10
21:43:49  17  ,eur_g11
21:43:49  18  ,eur_g12
21:43:49  19  ,eur_g13
21:43:49  20  ,eur_g14
21:43:49  21  ,eur_g15
21:43:49  22  ,eur_g16
21:43:49  23  ,eur_g17
21:43:49  24  ,eur_g18
21:43:49  25  ,eur_g19
21:43:49  26  ,eur_g20
21:43:49  27  ,eur_g21
21:43:49  28  ,eur_g22
21:43:49  29  ,eur_g23
21:43:49  30  ,eur_g24
21:43:49  31  ,eur_g25
21:43:49  32  ,eur_g26
21:43:49  33  ,eur_g27
21:43:49  34  ,eur_g28
21:43:49  35  ,eur_g29
21:43:49  36  ,eur_g30
21:43:49  37  ,eur_g31
21:43:49  38  ,eur_g32
21:43:49  39  ,eur_g33
21:43:49  40  ,eur_g34
21:43:49  41  ,eur_g35
21:43:49  42  ,eur_g36
21:43:49  43  ,eur_g37
21:43:49  44  ,eur_g38
21:43:49  45  ,eur_g39
21:43:49  46  ,eur_g40
21:43:49  47  ,aud_g00
21:43:49  48  ,aud_g01
21:43:49  49  ,aud_g02
21:43:49  50  ,aud_g03
21:43:49  51  ,aud_g04
21:43:49  52  ,aud_g05
21:43:49  53  ,aud_g06
21:43:49  54  ,aud_g07
21:43:49  55  ,aud_g08
21:43:49  56  ,aud_g09
21:43:49  57  ,aud_g10
21:43:49  58  ,aud_g11
21:43:49  59  ,aud_g12
21:43:49  60  ,aud_g13
21:43:49  61  ,aud_g14
21:43:49  62  ,aud_g15
21:43:49  63  ,aud_g16
21:43:49  64  ,aud_g17
21:43:49  65  ,aud_g18
21:43:49  66  ,aud_g19
21:43:49  67  ,aud_g20
21:43:49  68  ,aud_g21
21:43:49  69  ,aud_g22
21:43:49  70  ,aud_g23
21:43:49  71  ,aud_g24
21:43:49  72  ,aud_g25
21:43:49  73  ,aud_g26
21:43:49  74  ,aud_g27
21:43:49  75  ,aud_g28
21:43:49  76  ,aud_g29
21:43:49  77  ,aud_g30
21:43:49  78  ,aud_g31
21:43:49  79  ,aud_g32
21:43:49  80  ,aud_g33
21:43:49  81  ,aud_g34
21:43:49  82  ,aud_g35
21:43:49  83  ,aud_g36
21:43:49  84  ,aud_g37
21:43:49  85  ,aud_g38
21:43:49  86  ,aud_g39
21:43:49  87  ,aud_g40
21:43:49  88  ,gbp_g00
21:43:49  89  ,gbp_g01
21:43:49  90  ,gbp_g02
21:43:49  91  ,gbp_g03
21:43:49  92  ,gbp_g04
21:43:49  93  ,gbp_g05
21:43:49  94  ,gbp_g06
21:43:49  95  ,gbp_g07
21:43:49  96  ,gbp_g08
21:43:49  97  ,gbp_g09
21:43:49  98  ,gbp_g10
21:43:49  99  ,gbp_g11
21:43:49 100  ,gbp_g12
21:43:49 101  ,gbp_g13
21:43:49 102  ,gbp_g14
21:43:49 103  ,gbp_g15
21:43:49 104  ,gbp_g16
21:43:49 105  ,gbp_g17
21:43:49 106  ,gbp_g18
21:43:49 107  ,gbp_g19
21:43:49 108  ,gbp_g20
21:43:49 109  ,gbp_g21
21:43:49 110  ,gbp_g22
21:43:49 111  ,gbp_g23
21:43:49 112  ,gbp_g24
21:43:49 113  ,gbp_g25
21:43:49 114  ,gbp_g26
21:43:49 115  ,gbp_g27
21:43:49 116  ,gbp_g28
21:43:49 117  ,gbp_g29
21:43:49 118  ,gbp_g30
21:43:49 119  ,gbp_g31
21:43:49 120  ,gbp_g32
21:43:49 121  ,gbp_g33
21:43:49 122  ,gbp_g34
21:43:49 123  ,gbp_g35
21:43:49 124  ,gbp_g36
21:43:49 125  ,gbp_g37
21:43:49 126  ,gbp_g38
21:43:49 127  ,gbp_g39
21:43:49 128  ,gbp_g40
21:43:49 129  ,jpy_g00
21:43:49 130  ,jpy_g01
21:43:49 131  ,jpy_g02
21:43:49 132  ,jpy_g03
21:43:49 133  ,jpy_g04
21:43:49 134  ,jpy_g05
21:43:49 135  ,jpy_g06
21:43:49 136  ,jpy_g07
21:43:49 137  ,jpy_g08
21:43:49 138  ,jpy_g09
21:43:49 139  ,jpy_g10
21:43:49 140  ,jpy_g11
21:43:49 141  ,jpy_g12
21:43:49 142  ,jpy_g13
21:43:49 143  ,jpy_g14
21:43:49 144  ,jpy_g15
21:43:49 145  ,jpy_g16
21:43:49 146  ,jpy_g17
21:43:49 147  ,jpy_g18
21:43:49 148  ,jpy_g19
21:43:49 149  ,jpy_g20
21:43:49 150  ,jpy_g21
21:43:49 151  ,jpy_g22
21:43:49 152  ,jpy_g23
21:43:49 153  ,jpy_g24
21:43:49 154  ,jpy_g25
21:43:49 155  ,jpy_g26
21:43:49 156  ,jpy_g27
21:43:49 157  ,jpy_g28
21:43:49 158  ,jpy_g29
21:43:49 159  ,jpy_g30
21:43:49 160  ,jpy_g31
21:43:49 161  ,jpy_g32
21:43:49 162  ,jpy_g33
21:43:49 163  ,jpy_g34
21:43:49 164  ,jpy_g35
21:43:49 165  ,jpy_g36
21:43:49 166  ,jpy_g37
21:43:49 167  ,jpy_g38
21:43:49 168  ,jpy_g39
21:43:49 169  ,jpy_g40
21:43:49 170  ,cad_g00
21:43:49 171  ,cad_g01
21:43:49 172  ,cad_g02
21:43:49 173  ,cad_g03
21:43:49 174  ,cad_g04
21:43:49 175  ,cad_g05
21:43:49 176  ,cad_g06
21:43:49 177  ,cad_g07
21:43:49 178  ,cad_g08
21:43:49 179  ,cad_g09
21:43:49 180  ,cad_g10
21:43:49 181  ,cad_g11
21:43:49 182  ,cad_g12
21:43:49 183  ,cad_g13
21:43:49 184  ,cad_g14
21:43:49 185  ,cad_g15
21:43:49 186  ,cad_g16
21:43:49 187  ,cad_g17
21:43:49 188  ,cad_g18
21:43:49 189  ,cad_g19
21:43:49 190  ,cad_g20
21:43:49 191  ,cad_g21
21:43:49 192  ,cad_g22
21:43:49 193  ,cad_g23
21:43:49 194  ,cad_g24
21:43:49 195  ,cad_g25
21:43:49 196  ,cad_g26
21:43:49 197  ,cad_g27
21:43:49 198  ,cad_g28
21:43:49 199  ,cad_g29
21:43:49 200  ,cad_g30
21:43:49 201  ,cad_g31
21:43:49 202  ,cad_g32
21:43:49 203  ,cad_g33
21:43:49 204  ,cad_g34
21:43:49 205  ,cad_g35
21:43:49 206  ,cad_g36
21:43:49 207  ,cad_g37
21:43:49 208  ,cad_g38
21:43:49 209  ,cad_g39
21:43:49 210  ,cad_g40
21:43:49 211  ,chf_g00
21:43:49 212  ,chf_g01
21:43:49 213  ,chf_g02
21:43:49 214  ,chf_g03
21:43:49 215  ,chf_g04
21:43:49 216  ,chf_g05
21:43:49 217  ,chf_g06
21:43:49 218  ,chf_g07
21:43:49 219  ,chf_g08
21:43:49 220  ,chf_g09
21:43:49 221  ,chf_g10
21:43:49 222  ,chf_g11
21:43:49 223  ,chf_g12
21:43:49 224  ,chf_g13
21:43:49 225  ,chf_g14
21:43:49 226  ,chf_g15
21:43:49 227  ,chf_g16
21:43:49 228  ,chf_g17
21:43:49 229  ,chf_g18
21:43:49 230  ,chf_g19
21:43:49 231  ,chf_g20
21:43:49 232  ,chf_g21
21:43:49 233  ,chf_g22
21:43:49 234  ,chf_g23
21:43:49 235  ,chf_g24
21:43:49 236  ,chf_g25
21:43:49 237  ,chf_g26
21:43:49 238  ,chf_g27
21:43:49 239  ,chf_g28
21:43:49 240  ,chf_g29
21:43:49 241  ,chf_g30
21:43:49 242  ,chf_g31
21:43:49 243  ,chf_g32
21:43:49 244  ,chf_g33
21:43:49 245  ,chf_g34
21:43:49 246  ,chf_g35
21:43:49 247  ,chf_g36
21:43:49 248  ,chf_g37
21:43:49 249  ,chf_g38
21:43:49 250  ,chf_g39
21:43:49 251  ,chf_g40
21:43:49 252  FROM chf_ms14 m
21:43:49 253  WHERE gattn IN('nup','up')
21:43:49 254  AND 1+m.ydate < '&1'||' '||'&2'
21:43:49 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'09:10:00'

View created.

Elapsed: 00:00:00.11
21:43:50 SQL> 
21:43:50 SQL> -- rpt
21:43:50 SQL> 
21:43:50 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:43:50   2  
21:43:50 SQL> SELECT MAX(prdate) FROM bme
21:43:50   2  
21:43:50 SQL> -- Now build model from bme and score sme
21:43:50 SQL> @score1gattn.sql
21:43:50 SQL> -- score1gattn.sql
21:43:50 SQL> 
21:43:50 SQL> -- Does the 1st SVM score
21:43:50 SQL> 
21:43:50 SQL> -- Fill up svmc_apply_prep
21:43:50 SQL> @score_gattn.sql
21:43:50 SQL> --
21:43:50 SQL> -- score_gattn.sql
21:43:50 SQL> --
21:43:50 SQL> 
21:43:50 SQL> -- usage: score_gattn.sql
21:43:50 SQL> 
21:43:50 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:43:50 SQL> 
21:43:50 SQL> DEFINE target	= 'gattn'
21:43:50 SQL> DEFINE model_name = 'forex14'
21:43:50 SQL> DEFINE bldtable	= 'bme'
21:43:50 SQL> DEFINE scoretable = 'sme'
21:43:50 SQL> DEFINE case_id	= 'prdate'
21:43:50 SQL> 
21:43:50 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:43:50 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:43:50 SQL> 
21:43:50 SQL> -- Builds an SVM model using pl/sql.
21:43:50 SQL> 
21:43:50 SQL> -----------------------------------------------------------------------
21:43:50 SQL> --			    BUILD THE MODEL
21:43:50 SQL> -----------------------------------------------------------------------
21:43:50 SQL> 
21:43:50 SQL> -- Cleanup old build data preparation objects for repeat runs
21:43:50 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:43:50 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:43:50 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:43:50 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:43:50 SQL> 
21:43:50 SQL> 
21:43:50 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:43:50 SQL> --
21:43:50 SQL> -- DROP	TABLE svmc_settings ;
21:43:50 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:43:50 SQL> -- DELETE svmc_settings;
21:43:50 SQL> 
21:43:50 SQL> -- The default classification algorithm is Naive Bayes. So override
21:43:50 SQL> -- this choice to SVM using a settings table.
21:43:50 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:43:50 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:43:50 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:43:50 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:43:50 SQL> -- models.
21:43:50 SQL> --
21:43:50 SQL> 
21:43:50 SQL> -- Do this once and then comment it out.
21:43:50 SQL> -- That makes script go faster.
21:43:50 SQL> -- BEGIN
21:43:50 SQL> -- -- Populate settings table
21:43:50 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:43:50 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:43:50 SQL> --
21:43:50 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:43:50 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:43:50 SQL> --
21:43:50 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:43:50 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:43:50 SQL> --   COMMIT;
21:43:50 SQL> -- END;
21:43:50 SQL> -- /
21:43:50 SQL> 
21:43:50 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:43:50 SQL> 
21:43:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:43:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:43:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:43:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:43:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:43:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:43:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:43:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:43:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:43:50 SQL> 
21:43:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:43:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:43:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:43:50 SQL> 
21:43:50 SQL> --------------------------------
21:43:50 SQL> -- PREPARE BUILD (TRAINING) DATA
21:43:50 SQL> --
21:43:50 SQL> 
21:43:50 SQL> -- 1. Missing Value treatment for all Predictors and
21:43:50 SQL> -- 2. Outlier Treatment and
21:43:50 SQL> -- 3. Normalization are performed below.
21:43:50 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:43:50 SQL> --    normalized here.
21:43:50 SQL> 
21:43:50 SQL> BEGIN
21:43:50   2  	-- Perform missing value treatment for all predictors
21:43:50   3  	-- create miss tables
21:43:50   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:43:50   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:43:50   6  
21:43:50   7  	-- populate miss tables
21:43:50   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:43:50   9  	  miss_table_name => 'svmc_miss_num',
21:43:50  10  	  data_table_name => '&bldtable',
21:43:50  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:43:50  12  
21:43:50  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:43:50  14  	  miss_table_name => 'svmc_miss_cat',
21:43:50  15  	  data_table_name => '&bldtable',
21:43:50  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:43:50  17  
21:43:50  18  	-- xform input data to replace missing values
21:43:50  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:43:50  20  	  miss_table_name => 'svmc_miss_num',
21:43:50  21  	  data_table_name => '&bldtable',
21:43:50  22  	  xform_view_name => 'xformed_build_miss_num');
21:43:50  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:43:50  24  	  miss_table_name => 'svmc_miss_cat',
21:43:50  25  	  data_table_name => '&bldtable',
21:43:50  26  	  xform_view_name => 'xformed_build_miss_cat');
21:43:50  27  
21:43:50  28  	-- Perform outlier treatment.
21:43:50  29  	-- create clip table
21:43:50  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:43:50  31  
21:43:50  32  	-- populate clip table
21:43:50  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:43:50  34  	  clip_table_name => 'svmc_clip',
21:43:50  35  	  data_table_name => '&bldtable',
21:43:50  36  	  tail_frac	  => 0.025,
21:43:50  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:43:50  38  
21:43:50  39  	-- xform input data to winsorized data
21:43:50  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:43:50  41  	  clip_table_name => 'svmc_clip',
21:43:50  42  	  data_table_name => '&bldtable',
21:43:50  43  	  xform_view_name => 'svmc_winsor');
21:43:50  44  
21:43:50  45  	-- create normalization table
21:43:50  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:43:50  47  
21:43:50  48  	-- populate normalization table based on winsorized data
21:43:50  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:43:50  50  	  norm_table_name => 'svmc_norm',
21:43:50  51  	  data_table_name => 'svmc_winsor',
21:43:50  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:43:50  53  
21:43:50  54  	-- normalize the original data
21:43:50  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:43:50  56  	  norm_table_name => 'svmc_norm',
21:43:50  57  	  data_table_name => '&bldtable',
21:43:50  58  	  xform_view_name => 'svmc_build_prep');
21:43:50  59  END;
21:43:50  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.91
21:44:08 SQL> 
21:44:08 SQL> ---------------------
21:44:08 SQL> -- CREATE A NEW MODEL
21:44:08 SQL> --
21:44:08 SQL> -- Cleanup old model with the same name for repeat runs
21:44:08 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:44:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:44:08   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.95
21:44:09 SQL> 
21:44:09 SQL> -- Build a new SVM Model
21:44:09 SQL> BEGIN
21:44:09   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:44:09   3  	  model_name	      => '&model_name',
21:44:09   4  	  mining_function     => dbms_data_mining.classification,
21:44:09   5  	  data_table_name     => 'svmc_build_prep',
21:44:09   6  	  case_id_column_name => '&case_id',
21:44:09   7  	  target_column_name  => '&target',
21:44:09   8  	  settings_table_name => 'svmc_settings');
21:44:09   9  END;
21:44:09  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.94
21:44:35 SQL> 
21:44:35 SQL> -----------------------------------------------------------------------
21:44:35 SQL> --			       APPLY/score THE MODEL
21:44:35 SQL> -----------------------------------------------------------------------
21:44:35 SQL> 
21:44:35 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:44:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:44:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:44:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:44:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:44:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:44:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:44:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:44:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:44:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:44:35 SQL> -----------------------
21:44:35 SQL> -- PREPARE SCORING DATA
21:44:35 SQL> --
21:44:35 SQL> -- If the data for model creation has been prepared, then the data
21:44:35 SQL> -- to be scored using the model must be prepared in the same manner
21:44:35 SQL> -- in order to obtain meaningful results.
21:44:35 SQL> --
21:44:35 SQL> -- 1. Missing Value treatment for all Predictors and
21:44:35 SQL> -- 2. Normalization
21:44:35 SQL> -- No outlier treatment will be performed during test and apply. The
21:44:35 SQL> -- normalization step is sufficient, since the normalization parameters
21:44:35 SQL> -- already capture the effects of outlier treatment done with build data.
21:44:35 SQL> --
21:44:35 SQL> BEGIN
21:44:35   2  	-- Xform Test data to replace missing values
21:44:35   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:44:35   4  	  miss_table_name => 'svmc_miss_num',
21:44:35   5  	  data_table_name => '&scoretable',
21:44:35   6  	  xform_view_name => 'xformed_apply_miss_num');
21:44:35   7  
21:44:35   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:44:35   9  	  miss_table_name => 'svmc_miss_cat',
21:44:35  10  	  data_table_name => '&scoretable',
21:44:35  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:44:35  12  
21:44:35  13  	-- Normalize the data to be scored
21:44:35  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:44:35  15  	  norm_table_name => 'svmc_norm',
21:44:35  16  	  data_table_name => '&scoretable',
21:44:35  17  	  xform_view_name => 'svmc_apply_prep');
21:44:35  18  END;
21:44:35  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
21:44:36 SQL> 
21:44:36 SQL> -- Use same model_name used in score_gattn.sql
21:44:36 SQL> DEFINE model_name = 'forex14'
21:44:36 SQL> 
21:44:36 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:44:36 SQL> 
21:44:36 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:44:36   2  SELECT
21:44:36   3  prdate
21:44:36   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:44:36   5  ,sysdate
21:44:36   6  ,SUBSTR(prdate,1,3)pair
21:44:36   7  ,SUBSTR(prdate,4,19)ydate
21:44:36   8  FROM svmc_apply_prep
21:44:36   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:44:36 SQL> @chf_score1day_gattn.sql	2010-12-17 09:05:00
21:44:36 SQL> --
21:44:36 SQL> -- chf_score1day_gattn.sql
21:44:36 SQL> --
21:44:36 SQL> 
21:44:36 SQL> CREATE OR REPLACE VIEW sme AS
21:44:36   2  SELECT
21:44:36   3  'chf'||m.ydate prdate
21:44:36   4  ,NULL gattn
21:44:36   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:44:36   6  ,eur_g00
21:44:36   7  ,eur_g01
21:44:36   8  ,eur_g02
21:44:36   9  ,eur_g03
21:44:36  10  ,eur_g04
21:44:36  11  ,eur_g05
21:44:36  12  ,eur_g06
21:44:36  13  ,eur_g07
21:44:36  14  ,eur_g08
21:44:36  15  ,eur_g09
21:44:36  16  ,eur_g10
21:44:36  17  ,eur_g11
21:44:36  18  ,eur_g12
21:44:36  19  ,eur_g13
21:44:36  20  ,eur_g14
21:44:36  21  ,eur_g15
21:44:36  22  ,eur_g16
21:44:36  23  ,eur_g17
21:44:36  24  ,eur_g18
21:44:36  25  ,eur_g19
21:44:36  26  ,eur_g20
21:44:36  27  ,eur_g21
21:44:36  28  ,eur_g22
21:44:36  29  ,eur_g23
21:44:36  30  ,eur_g24
21:44:36  31  ,eur_g25
21:44:36  32  ,eur_g26
21:44:36  33  ,eur_g27
21:44:36  34  ,eur_g28
21:44:36  35  ,eur_g29
21:44:36  36  ,eur_g30
21:44:36  37  ,eur_g31
21:44:36  38  ,eur_g32
21:44:36  39  ,eur_g33
21:44:36  40  ,eur_g34
21:44:36  41  ,eur_g35
21:44:36  42  ,eur_g36
21:44:36  43  ,eur_g37
21:44:36  44  ,eur_g38
21:44:36  45  ,eur_g39
21:44:36  46  ,eur_g40
21:44:36  47  ,aud_g00
21:44:36  48  ,aud_g01
21:44:36  49  ,aud_g02
21:44:36  50  ,aud_g03
21:44:36  51  ,aud_g04
21:44:36  52  ,aud_g05
21:44:36  53  ,aud_g06
21:44:36  54  ,aud_g07
21:44:36  55  ,aud_g08
21:44:36  56  ,aud_g09
21:44:36  57  ,aud_g10
21:44:36  58  ,aud_g11
21:44:36  59  ,aud_g12
21:44:36  60  ,aud_g13
21:44:36  61  ,aud_g14
21:44:36  62  ,aud_g15
21:44:36  63  ,aud_g16
21:44:36  64  ,aud_g17
21:44:36  65  ,aud_g18
21:44:36  66  ,aud_g19
21:44:36  67  ,aud_g20
21:44:36  68  ,aud_g21
21:44:36  69  ,aud_g22
21:44:36  70  ,aud_g23
21:44:36  71  ,aud_g24
21:44:36  72  ,aud_g25
21:44:36  73  ,aud_g26
21:44:36  74  ,aud_g27
21:44:36  75  ,aud_g28
21:44:36  76  ,aud_g29
21:44:36  77  ,aud_g30
21:44:36  78  ,aud_g31
21:44:36  79  ,aud_g32
21:44:36  80  ,aud_g33
21:44:36  81  ,aud_g34
21:44:36  82  ,aud_g35
21:44:36  83  ,aud_g36
21:44:36  84  ,aud_g37
21:44:36  85  ,aud_g38
21:44:36  86  ,aud_g39
21:44:36  87  ,aud_g40
21:44:36  88  ,gbp_g00
21:44:36  89  ,gbp_g01
21:44:36  90  ,gbp_g02
21:44:36  91  ,gbp_g03
21:44:36  92  ,gbp_g04
21:44:36  93  ,gbp_g05
21:44:36  94  ,gbp_g06
21:44:36  95  ,gbp_g07
21:44:36  96  ,gbp_g08
21:44:36  97  ,gbp_g09
21:44:36  98  ,gbp_g10
21:44:36  99  ,gbp_g11
21:44:36 100  ,gbp_g12
21:44:36 101  ,gbp_g13
21:44:36 102  ,gbp_g14
21:44:36 103  ,gbp_g15
21:44:36 104  ,gbp_g16
21:44:36 105  ,gbp_g17
21:44:36 106  ,gbp_g18
21:44:36 107  ,gbp_g19
21:44:36 108  ,gbp_g20
21:44:36 109  ,gbp_g21
21:44:36 110  ,gbp_g22
21:44:36 111  ,gbp_g23
21:44:36 112  ,gbp_g24
21:44:36 113  ,gbp_g25
21:44:36 114  ,gbp_g26
21:44:36 115  ,gbp_g27
21:44:36 116  ,gbp_g28
21:44:36 117  ,gbp_g29
21:44:36 118  ,gbp_g30
21:44:36 119  ,gbp_g31
21:44:36 120  ,gbp_g32
21:44:36 121  ,gbp_g33
21:44:36 122  ,gbp_g34
21:44:36 123  ,gbp_g35
21:44:36 124  ,gbp_g36
21:44:36 125  ,gbp_g37
21:44:36 126  ,gbp_g38
21:44:36 127  ,gbp_g39
21:44:36 128  ,gbp_g40
21:44:36 129  ,jpy_g00
21:44:36 130  ,jpy_g01
21:44:36 131  ,jpy_g02
21:44:36 132  ,jpy_g03
21:44:36 133  ,jpy_g04
21:44:36 134  ,jpy_g05
21:44:36 135  ,jpy_g06
21:44:36 136  ,jpy_g07
21:44:36 137  ,jpy_g08
21:44:36 138  ,jpy_g09
21:44:36 139  ,jpy_g10
21:44:36 140  ,jpy_g11
21:44:36 141  ,jpy_g12
21:44:36 142  ,jpy_g13
21:44:36 143  ,jpy_g14
21:44:36 144  ,jpy_g15
21:44:36 145  ,jpy_g16
21:44:36 146  ,jpy_g17
21:44:36 147  ,jpy_g18
21:44:36 148  ,jpy_g19
21:44:36 149  ,jpy_g20
21:44:36 150  ,jpy_g21
21:44:36 151  ,jpy_g22
21:44:36 152  ,jpy_g23
21:44:36 153  ,jpy_g24
21:44:36 154  ,jpy_g25
21:44:36 155  ,jpy_g26
21:44:36 156  ,jpy_g27
21:44:36 157  ,jpy_g28
21:44:36 158  ,jpy_g29
21:44:36 159  ,jpy_g30
21:44:36 160  ,jpy_g31
21:44:36 161  ,jpy_g32
21:44:36 162  ,jpy_g33
21:44:36 163  ,jpy_g34
21:44:36 164  ,jpy_g35
21:44:36 165  ,jpy_g36
21:44:36 166  ,jpy_g37
21:44:36 167  ,jpy_g38
21:44:36 168  ,jpy_g39
21:44:36 169  ,jpy_g40
21:44:36 170  ,cad_g00
21:44:36 171  ,cad_g01
21:44:36 172  ,cad_g02
21:44:36 173  ,cad_g03
21:44:36 174  ,cad_g04
21:44:36 175  ,cad_g05
21:44:36 176  ,cad_g06
21:44:36 177  ,cad_g07
21:44:36 178  ,cad_g08
21:44:36 179  ,cad_g09
21:44:36 180  ,cad_g10
21:44:36 181  ,cad_g11
21:44:36 182  ,cad_g12
21:44:36 183  ,cad_g13
21:44:36 184  ,cad_g14
21:44:36 185  ,cad_g15
21:44:36 186  ,cad_g16
21:44:36 187  ,cad_g17
21:44:36 188  ,cad_g18
21:44:36 189  ,cad_g19
21:44:36 190  ,cad_g20
21:44:36 191  ,cad_g21
21:44:36 192  ,cad_g22
21:44:36 193  ,cad_g23
21:44:36 194  ,cad_g24
21:44:36 195  ,cad_g25
21:44:36 196  ,cad_g26
21:44:36 197  ,cad_g27
21:44:36 198  ,cad_g28
21:44:36 199  ,cad_g29
21:44:36 200  ,cad_g30
21:44:36 201  ,cad_g31
21:44:36 202  ,cad_g32
21:44:36 203  ,cad_g33
21:44:36 204  ,cad_g34
21:44:36 205  ,cad_g35
21:44:36 206  ,cad_g36
21:44:36 207  ,cad_g37
21:44:36 208  ,cad_g38
21:44:36 209  ,cad_g39
21:44:36 210  ,cad_g40
21:44:36 211  ,chf_g00
21:44:36 212  ,chf_g01
21:44:36 213  ,chf_g02
21:44:36 214  ,chf_g03
21:44:36 215  ,chf_g04
21:44:36 216  ,chf_g05
21:44:36 217  ,chf_g06
21:44:36 218  ,chf_g07
21:44:36 219  ,chf_g08
21:44:36 220  ,chf_g09
21:44:36 221  ,chf_g10
21:44:36 222  ,chf_g11
21:44:36 223  ,chf_g12
21:44:36 224  ,chf_g13
21:44:36 225  ,chf_g14
21:44:36 226  ,chf_g15
21:44:36 227  ,chf_g16
21:44:36 228  ,chf_g17
21:44:36 229  ,chf_g18
21:44:36 230  ,chf_g19
21:44:36 231  ,chf_g20
21:44:36 232  ,chf_g21
21:44:36 233  ,chf_g22
21:44:36 234  ,chf_g23
21:44:36 235  ,chf_g24
21:44:36 236  ,chf_g25
21:44:36 237  ,chf_g26
21:44:36 238  ,chf_g27
21:44:36 239  ,chf_g28
21:44:36 240  ,chf_g29
21:44:36 241  ,chf_g30
21:44:36 242  ,chf_g31
21:44:36 243  ,chf_g32
21:44:36 244  ,chf_g33
21:44:36 245  ,chf_g34
21:44:36 246  ,chf_g35
21:44:36 247  ,chf_g36
21:44:36 248  ,chf_g37
21:44:36 249  ,chf_g38
21:44:36 250  ,chf_g39
21:44:36 251  ,chf_g40
21:44:36 252  FROM chf_ms14 m
21:44:36 253  WHERE m.ydate = '&1'||' '||'&2'
21:44:36 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'09:05:00'

View created.

Elapsed: 00:00:00.12
21:44:36 SQL> 
21:44:36 SQL> -- rpt
21:44:36 SQL> -- We should see just 1 row:
21:44:36 SQL> 
21:44:36 SQL> SELECT COUNT(prdate) FROM sme
21:44:36   2  
21:44:36 SQL> -- Build the model:
21:44:36 SQL> CREATE OR REPLACE VIEW bme AS
21:44:36   2  SELECT
21:44:36   3  'chf'||m.ydate prdate
21:44:36   4  ,gattn
21:44:36   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:44:36   6  ,eur_g00
21:44:36   7  ,eur_g01
21:44:36   8  ,eur_g02
21:44:36   9  ,eur_g03
21:44:36  10  ,eur_g04
21:44:36  11  ,eur_g05
21:44:36  12  ,eur_g06
21:44:36  13  ,eur_g07
21:44:36  14  ,eur_g08
21:44:36  15  ,eur_g09
21:44:36  16  ,eur_g10
21:44:36  17  ,eur_g11
21:44:36  18  ,eur_g12
21:44:36  19  ,eur_g13
21:44:36  20  ,eur_g14
21:44:36  21  ,eur_g15
21:44:36  22  ,eur_g16
21:44:36  23  ,eur_g17
21:44:36  24  ,eur_g18
21:44:36  25  ,eur_g19
21:44:36  26  ,eur_g20
21:44:36  27  ,eur_g21
21:44:36  28  ,eur_g22
21:44:36  29  ,eur_g23
21:44:36  30  ,eur_g24
21:44:36  31  ,eur_g25
21:44:36  32  ,eur_g26
21:44:36  33  ,eur_g27
21:44:36  34  ,eur_g28
21:44:36  35  ,eur_g29
21:44:36  36  ,eur_g30
21:44:36  37  ,eur_g31
21:44:36  38  ,eur_g32
21:44:36  39  ,eur_g33
21:44:36  40  ,eur_g34
21:44:36  41  ,eur_g35
21:44:36  42  ,eur_g36
21:44:36  43  ,eur_g37
21:44:36  44  ,eur_g38
21:44:36  45  ,eur_g39
21:44:36  46  ,eur_g40
21:44:36  47  ,aud_g00
21:44:36  48  ,aud_g01
21:44:36  49  ,aud_g02
21:44:36  50  ,aud_g03
21:44:36  51  ,aud_g04
21:44:36  52  ,aud_g05
21:44:36  53  ,aud_g06
21:44:36  54  ,aud_g07
21:44:36  55  ,aud_g08
21:44:36  56  ,aud_g09
21:44:36  57  ,aud_g10
21:44:36  58  ,aud_g11
21:44:36  59  ,aud_g12
21:44:36  60  ,aud_g13
21:44:36  61  ,aud_g14
21:44:36  62  ,aud_g15
21:44:36  63  ,aud_g16
21:44:36  64  ,aud_g17
21:44:36  65  ,aud_g18
21:44:36  66  ,aud_g19
21:44:36  67  ,aud_g20
21:44:36  68  ,aud_g21
21:44:36  69  ,aud_g22
21:44:36  70  ,aud_g23
21:44:36  71  ,aud_g24
21:44:36  72  ,aud_g25
21:44:36  73  ,aud_g26
21:44:36  74  ,aud_g27
21:44:36  75  ,aud_g28
21:44:36  76  ,aud_g29
21:44:36  77  ,aud_g30
21:44:36  78  ,aud_g31
21:44:36  79  ,aud_g32
21:44:36  80  ,aud_g33
21:44:36  81  ,aud_g34
21:44:36  82  ,aud_g35
21:44:36  83  ,aud_g36
21:44:36  84  ,aud_g37
21:44:36  85  ,aud_g38
21:44:36  86  ,aud_g39
21:44:36  87  ,aud_g40
21:44:36  88  ,gbp_g00
21:44:36  89  ,gbp_g01
21:44:36  90  ,gbp_g02
21:44:36  91  ,gbp_g03
21:44:36  92  ,gbp_g04
21:44:36  93  ,gbp_g05
21:44:36  94  ,gbp_g06
21:44:36  95  ,gbp_g07
21:44:36  96  ,gbp_g08
21:44:36  97  ,gbp_g09
21:44:36  98  ,gbp_g10
21:44:36  99  ,gbp_g11
21:44:36 100  ,gbp_g12
21:44:36 101  ,gbp_g13
21:44:36 102  ,gbp_g14
21:44:36 103  ,gbp_g15
21:44:36 104  ,gbp_g16
21:44:36 105  ,gbp_g17
21:44:36 106  ,gbp_g18
21:44:36 107  ,gbp_g19
21:44:36 108  ,gbp_g20
21:44:36 109  ,gbp_g21
21:44:36 110  ,gbp_g22
21:44:36 111  ,gbp_g23
21:44:36 112  ,gbp_g24
21:44:36 113  ,gbp_g25
21:44:36 114  ,gbp_g26
21:44:36 115  ,gbp_g27
21:44:36 116  ,gbp_g28
21:44:36 117  ,gbp_g29
21:44:36 118  ,gbp_g30
21:44:36 119  ,gbp_g31
21:44:36 120  ,gbp_g32
21:44:36 121  ,gbp_g33
21:44:36 122  ,gbp_g34
21:44:36 123  ,gbp_g35
21:44:36 124  ,gbp_g36
21:44:36 125  ,gbp_g37
21:44:36 126  ,gbp_g38
21:44:36 127  ,gbp_g39
21:44:36 128  ,gbp_g40
21:44:36 129  ,jpy_g00
21:44:36 130  ,jpy_g01
21:44:36 131  ,jpy_g02
21:44:36 132  ,jpy_g03
21:44:36 133  ,jpy_g04
21:44:36 134  ,jpy_g05
21:44:36 135  ,jpy_g06
21:44:36 136  ,jpy_g07
21:44:36 137  ,jpy_g08
21:44:36 138  ,jpy_g09
21:44:36 139  ,jpy_g10
21:44:36 140  ,jpy_g11
21:44:36 141  ,jpy_g12
21:44:36 142  ,jpy_g13
21:44:36 143  ,jpy_g14
21:44:36 144  ,jpy_g15
21:44:36 145  ,jpy_g16
21:44:36 146  ,jpy_g17
21:44:36 147  ,jpy_g18
21:44:36 148  ,jpy_g19
21:44:36 149  ,jpy_g20
21:44:36 150  ,jpy_g21
21:44:36 151  ,jpy_g22
21:44:36 152  ,jpy_g23
21:44:36 153  ,jpy_g24
21:44:36 154  ,jpy_g25
21:44:36 155  ,jpy_g26
21:44:36 156  ,jpy_g27
21:44:36 157  ,jpy_g28
21:44:36 158  ,jpy_g29
21:44:36 159  ,jpy_g30
21:44:36 160  ,jpy_g31
21:44:36 161  ,jpy_g32
21:44:36 162  ,jpy_g33
21:44:36 163  ,jpy_g34
21:44:36 164  ,jpy_g35
21:44:36 165  ,jpy_g36
21:44:36 166  ,jpy_g37
21:44:36 167  ,jpy_g38
21:44:36 168  ,jpy_g39
21:44:36 169  ,jpy_g40
21:44:36 170  ,cad_g00
21:44:36 171  ,cad_g01
21:44:36 172  ,cad_g02
21:44:36 173  ,cad_g03
21:44:36 174  ,cad_g04
21:44:36 175  ,cad_g05
21:44:36 176  ,cad_g06
21:44:36 177  ,cad_g07
21:44:36 178  ,cad_g08
21:44:36 179  ,cad_g09
21:44:36 180  ,cad_g10
21:44:36 181  ,cad_g11
21:44:36 182  ,cad_g12
21:44:36 183  ,cad_g13
21:44:36 184  ,cad_g14
21:44:36 185  ,cad_g15
21:44:36 186  ,cad_g16
21:44:36 187  ,cad_g17
21:44:36 188  ,cad_g18
21:44:36 189  ,cad_g19
21:44:36 190  ,cad_g20
21:44:36 191  ,cad_g21
21:44:36 192  ,cad_g22
21:44:36 193  ,cad_g23
21:44:36 194  ,cad_g24
21:44:36 195  ,cad_g25
21:44:36 196  ,cad_g26
21:44:36 197  ,cad_g27
21:44:36 198  ,cad_g28
21:44:36 199  ,cad_g29
21:44:36 200  ,cad_g30
21:44:36 201  ,cad_g31
21:44:36 202  ,cad_g32
21:44:36 203  ,cad_g33
21:44:36 204  ,cad_g34
21:44:36 205  ,cad_g35
21:44:36 206  ,cad_g36
21:44:36 207  ,cad_g37
21:44:36 208  ,cad_g38
21:44:36 209  ,cad_g39
21:44:36 210  ,cad_g40
21:44:36 211  ,chf_g00
21:44:36 212  ,chf_g01
21:44:36 213  ,chf_g02
21:44:36 214  ,chf_g03
21:44:36 215  ,chf_g04
21:44:36 216  ,chf_g05
21:44:36 217  ,chf_g06
21:44:36 218  ,chf_g07
21:44:36 219  ,chf_g08
21:44:36 220  ,chf_g09
21:44:36 221  ,chf_g10
21:44:36 222  ,chf_g11
21:44:36 223  ,chf_g12
21:44:36 224  ,chf_g13
21:44:36 225  ,chf_g14
21:44:36 226  ,chf_g15
21:44:36 227  ,chf_g16
21:44:36 228  ,chf_g17
21:44:36 229  ,chf_g18
21:44:36 230  ,chf_g19
21:44:36 231  ,chf_g20
21:44:36 232  ,chf_g21
21:44:36 233  ,chf_g22
21:44:36 234  ,chf_g23
21:44:36 235  ,chf_g24
21:44:36 236  ,chf_g25
21:44:36 237  ,chf_g26
21:44:36 238  ,chf_g27
21:44:36 239  ,chf_g28
21:44:36 240  ,chf_g29
21:44:36 241  ,chf_g30
21:44:36 242  ,chf_g31
21:44:36 243  ,chf_g32
21:44:36 244  ,chf_g33
21:44:36 245  ,chf_g34
21:44:36 246  ,chf_g35
21:44:36 247  ,chf_g36
21:44:36 248  ,chf_g37
21:44:36 249  ,chf_g38
21:44:36 250  ,chf_g39
21:44:36 251  ,chf_g40
21:44:36 252  FROM chf_ms14 m
21:44:36 253  WHERE gattn IN('nup','up')
21:44:36 254  AND 1+m.ydate < '&1'||' '||'&2'
21:44:36 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'09:05:00'

View created.

Elapsed: 00:00:00.11
21:44:36 SQL> 
21:44:36 SQL> -- rpt
21:44:36 SQL> 
21:44:36 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:44:36   2  
21:44:36 SQL> SELECT MAX(prdate) FROM bme
21:44:36   2  
21:44:36 SQL> -- Now build model from bme and score sme
21:44:36 SQL> @score1gattn.sql
21:44:36 SQL> -- score1gattn.sql
21:44:36 SQL> 
21:44:36 SQL> -- Does the 1st SVM score
21:44:36 SQL> 
21:44:36 SQL> -- Fill up svmc_apply_prep
21:44:36 SQL> @score_gattn.sql
21:44:36 SQL> --
21:44:36 SQL> -- score_gattn.sql
21:44:36 SQL> --
21:44:36 SQL> 
21:44:36 SQL> -- usage: score_gattn.sql
21:44:36 SQL> 
21:44:36 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:44:36 SQL> 
21:44:36 SQL> DEFINE target	= 'gattn'
21:44:36 SQL> DEFINE model_name = 'forex14'
21:44:36 SQL> DEFINE bldtable	= 'bme'
21:44:36 SQL> DEFINE scoretable = 'sme'
21:44:36 SQL> DEFINE case_id	= 'prdate'
21:44:36 SQL> 
21:44:36 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:44:36 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:44:36 SQL> 
21:44:36 SQL> -- Builds an SVM model using pl/sql.
21:44:36 SQL> 
21:44:36 SQL> -----------------------------------------------------------------------
21:44:36 SQL> --			    BUILD THE MODEL
21:44:36 SQL> -----------------------------------------------------------------------
21:44:36 SQL> 
21:44:36 SQL> -- Cleanup old build data preparation objects for repeat runs
21:44:36 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:44:36 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:44:36 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:44:36 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:44:36 SQL> 
21:44:36 SQL> 
21:44:36 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:44:36 SQL> --
21:44:36 SQL> -- DROP	TABLE svmc_settings ;
21:44:36 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:44:36 SQL> -- DELETE svmc_settings;
21:44:36 SQL> 
21:44:36 SQL> -- The default classification algorithm is Naive Bayes. So override
21:44:36 SQL> -- this choice to SVM using a settings table.
21:44:36 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:44:36 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:44:36 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:44:36 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:44:36 SQL> -- models.
21:44:36 SQL> --
21:44:36 SQL> 
21:44:36 SQL> -- Do this once and then comment it out.
21:44:36 SQL> -- That makes script go faster.
21:44:36 SQL> -- BEGIN
21:44:36 SQL> -- -- Populate settings table
21:44:36 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:44:36 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:44:36 SQL> --
21:44:36 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:44:36 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:44:36 SQL> --
21:44:36 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:44:36 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:44:36 SQL> --   COMMIT;
21:44:36 SQL> -- END;
21:44:36 SQL> -- /
21:44:36 SQL> 
21:44:36 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
21:44:36 SQL> 
21:44:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:44:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:44:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:44:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:44:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:44:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:44:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:44:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:44:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:44:37 SQL> 
21:44:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:44:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:44:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:44:37 SQL> 
21:44:37 SQL> --------------------------------
21:44:37 SQL> -- PREPARE BUILD (TRAINING) DATA
21:44:37 SQL> --
21:44:37 SQL> 
21:44:37 SQL> -- 1. Missing Value treatment for all Predictors and
21:44:37 SQL> -- 2. Outlier Treatment and
21:44:37 SQL> -- 3. Normalization are performed below.
21:44:37 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:44:37 SQL> --    normalized here.
21:44:37 SQL> 
21:44:37 SQL> BEGIN
21:44:37   2  	-- Perform missing value treatment for all predictors
21:44:37   3  	-- create miss tables
21:44:37   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:44:37   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:44:37   6  
21:44:37   7  	-- populate miss tables
21:44:37   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:44:37   9  	  miss_table_name => 'svmc_miss_num',
21:44:37  10  	  data_table_name => '&bldtable',
21:44:37  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:44:37  12  
21:44:37  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:44:37  14  	  miss_table_name => 'svmc_miss_cat',
21:44:37  15  	  data_table_name => '&bldtable',
21:44:37  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:44:37  17  
21:44:37  18  	-- xform input data to replace missing values
21:44:37  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:44:37  20  	  miss_table_name => 'svmc_miss_num',
21:44:37  21  	  data_table_name => '&bldtable',
21:44:37  22  	  xform_view_name => 'xformed_build_miss_num');
21:44:37  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:44:37  24  	  miss_table_name => 'svmc_miss_cat',
21:44:37  25  	  data_table_name => '&bldtable',
21:44:37  26  	  xform_view_name => 'xformed_build_miss_cat');
21:44:37  27  
21:44:37  28  	-- Perform outlier treatment.
21:44:37  29  	-- create clip table
21:44:37  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:44:37  31  
21:44:37  32  	-- populate clip table
21:44:37  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:44:37  34  	  clip_table_name => 'svmc_clip',
21:44:37  35  	  data_table_name => '&bldtable',
21:44:37  36  	  tail_frac	  => 0.025,
21:44:37  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:44:37  38  
21:44:37  39  	-- xform input data to winsorized data
21:44:37  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:44:37  41  	  clip_table_name => 'svmc_clip',
21:44:37  42  	  data_table_name => '&bldtable',
21:44:37  43  	  xform_view_name => 'svmc_winsor');
21:44:37  44  
21:44:37  45  	-- create normalization table
21:44:37  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:44:37  47  
21:44:37  48  	-- populate normalization table based on winsorized data
21:44:37  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:44:37  50  	  norm_table_name => 'svmc_norm',
21:44:37  51  	  data_table_name => 'svmc_winsor',
21:44:37  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:44:37  53  
21:44:37  54  	-- normalize the original data
21:44:37  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:44:37  56  	  norm_table_name => 'svmc_norm',
21:44:37  57  	  data_table_name => '&bldtable',
21:44:37  58  	  xform_view_name => 'svmc_build_prep');
21:44:37  59  END;
21:44:37  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.94
21:44:55 SQL> 
21:44:55 SQL> ---------------------
21:44:55 SQL> -- CREATE A NEW MODEL
21:44:55 SQL> --
21:44:55 SQL> -- Cleanup old model with the same name for repeat runs
21:44:55 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:44:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:44:55   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.42
21:44:56 SQL> 
21:44:56 SQL> -- Build a new SVM Model
21:44:56 SQL> BEGIN
21:44:56   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:44:56   3  	  model_name	      => '&model_name',
21:44:56   4  	  mining_function     => dbms_data_mining.classification,
21:44:56   5  	  data_table_name     => 'svmc_build_prep',
21:44:56   6  	  case_id_column_name => '&case_id',
21:44:56   7  	  target_column_name  => '&target',
21:44:56   8  	  settings_table_name => 'svmc_settings');
21:44:56   9  END;
21:44:56  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.10
21:45:21 SQL> 
21:45:21 SQL> -----------------------------------------------------------------------
21:45:21 SQL> --			       APPLY/score THE MODEL
21:45:21 SQL> -----------------------------------------------------------------------
21:45:21 SQL> 
21:45:21 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:45:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:45:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:45:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:45:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:45:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:45:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:45:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:45:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:45:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:45:21 SQL> -----------------------
21:45:21 SQL> -- PREPARE SCORING DATA
21:45:21 SQL> --
21:45:21 SQL> -- If the data for model creation has been prepared, then the data
21:45:21 SQL> -- to be scored using the model must be prepared in the same manner
21:45:21 SQL> -- in order to obtain meaningful results.
21:45:21 SQL> --
21:45:21 SQL> -- 1. Missing Value treatment for all Predictors and
21:45:21 SQL> -- 2. Normalization
21:45:21 SQL> -- No outlier treatment will be performed during test and apply. The
21:45:21 SQL> -- normalization step is sufficient, since the normalization parameters
21:45:21 SQL> -- already capture the effects of outlier treatment done with build data.
21:45:21 SQL> --
21:45:21 SQL> BEGIN
21:45:21   2  	-- Xform Test data to replace missing values
21:45:21   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:45:21   4  	  miss_table_name => 'svmc_miss_num',
21:45:21   5  	  data_table_name => '&scoretable',
21:45:21   6  	  xform_view_name => 'xformed_apply_miss_num');
21:45:21   7  
21:45:21   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:45:21   9  	  miss_table_name => 'svmc_miss_cat',
21:45:21  10  	  data_table_name => '&scoretable',
21:45:21  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:45:21  12  
21:45:21  13  	-- Normalize the data to be scored
21:45:21  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:45:21  15  	  norm_table_name => 'svmc_norm',
21:45:21  16  	  data_table_name => '&scoretable',
21:45:21  17  	  xform_view_name => 'svmc_apply_prep');
21:45:21  18  END;
21:45:21  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
21:45:22 SQL> 
21:45:22 SQL> -- Use same model_name used in score_gattn.sql
21:45:22 SQL> DEFINE model_name = 'forex14'
21:45:22 SQL> 
21:45:22 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:45:22 SQL> 
21:45:22 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:45:22   2  SELECT
21:45:22   3  prdate
21:45:22   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:45:22   5  ,sysdate
21:45:22   6  ,SUBSTR(prdate,1,3)pair
21:45:22   7  ,SUBSTR(prdate,4,19)ydate
21:45:22   8  FROM svmc_apply_prep
21:45:22   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:45:23 SQL> @chf_score1day_gattn.sql	2010-12-17 09:00:00
21:45:23 SQL> --
21:45:23 SQL> -- chf_score1day_gattn.sql
21:45:23 SQL> --
21:45:23 SQL> 
21:45:23 SQL> CREATE OR REPLACE VIEW sme AS
21:45:23   2  SELECT
21:45:23   3  'chf'||m.ydate prdate
21:45:23   4  ,NULL gattn
21:45:23   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:45:23   6  ,eur_g00
21:45:23   7  ,eur_g01
21:45:23   8  ,eur_g02
21:45:23   9  ,eur_g03
21:45:23  10  ,eur_g04
21:45:23  11  ,eur_g05
21:45:23  12  ,eur_g06
21:45:23  13  ,eur_g07
21:45:23  14  ,eur_g08
21:45:23  15  ,eur_g09
21:45:23  16  ,eur_g10
21:45:23  17  ,eur_g11
21:45:23  18  ,eur_g12
21:45:23  19  ,eur_g13
21:45:23  20  ,eur_g14
21:45:23  21  ,eur_g15
21:45:23  22  ,eur_g16
21:45:23  23  ,eur_g17
21:45:23  24  ,eur_g18
21:45:23  25  ,eur_g19
21:45:23  26  ,eur_g20
21:45:23  27  ,eur_g21
21:45:23  28  ,eur_g22
21:45:23  29  ,eur_g23
21:45:23  30  ,eur_g24
21:45:23  31  ,eur_g25
21:45:23  32  ,eur_g26
21:45:23  33  ,eur_g27
21:45:23  34  ,eur_g28
21:45:23  35  ,eur_g29
21:45:23  36  ,eur_g30
21:45:23  37  ,eur_g31
21:45:23  38  ,eur_g32
21:45:23  39  ,eur_g33
21:45:23  40  ,eur_g34
21:45:23  41  ,eur_g35
21:45:23  42  ,eur_g36
21:45:23  43  ,eur_g37
21:45:23  44  ,eur_g38
21:45:23  45  ,eur_g39
21:45:23  46  ,eur_g40
21:45:23  47  ,aud_g00
21:45:23  48  ,aud_g01
21:45:23  49  ,aud_g02
21:45:23  50  ,aud_g03
21:45:23  51  ,aud_g04
21:45:23  52  ,aud_g05
21:45:23  53  ,aud_g06
21:45:23  54  ,aud_g07
21:45:23  55  ,aud_g08
21:45:23  56  ,aud_g09
21:45:23  57  ,aud_g10
21:45:23  58  ,aud_g11
21:45:23  59  ,aud_g12
21:45:23  60  ,aud_g13
21:45:23  61  ,aud_g14
21:45:23  62  ,aud_g15
21:45:23  63  ,aud_g16
21:45:23  64  ,aud_g17
21:45:23  65  ,aud_g18
21:45:23  66  ,aud_g19
21:45:23  67  ,aud_g20
21:45:23  68  ,aud_g21
21:45:23  69  ,aud_g22
21:45:23  70  ,aud_g23
21:45:23  71  ,aud_g24
21:45:23  72  ,aud_g25
21:45:23  73  ,aud_g26
21:45:23  74  ,aud_g27
21:45:23  75  ,aud_g28
21:45:23  76  ,aud_g29
21:45:23  77  ,aud_g30
21:45:23  78  ,aud_g31
21:45:23  79  ,aud_g32
21:45:23  80  ,aud_g33
21:45:23  81  ,aud_g34
21:45:23  82  ,aud_g35
21:45:23  83  ,aud_g36
21:45:23  84  ,aud_g37
21:45:23  85  ,aud_g38
21:45:23  86  ,aud_g39
21:45:23  87  ,aud_g40
21:45:23  88  ,gbp_g00
21:45:23  89  ,gbp_g01
21:45:23  90  ,gbp_g02
21:45:23  91  ,gbp_g03
21:45:23  92  ,gbp_g04
21:45:23  93  ,gbp_g05
21:45:23  94  ,gbp_g06
21:45:23  95  ,gbp_g07
21:45:23  96  ,gbp_g08
21:45:23  97  ,gbp_g09
21:45:23  98  ,gbp_g10
21:45:23  99  ,gbp_g11
21:45:23 100  ,gbp_g12
21:45:23 101  ,gbp_g13
21:45:23 102  ,gbp_g14
21:45:23 103  ,gbp_g15
21:45:23 104  ,gbp_g16
21:45:23 105  ,gbp_g17
21:45:23 106  ,gbp_g18
21:45:23 107  ,gbp_g19
21:45:23 108  ,gbp_g20
21:45:23 109  ,gbp_g21
21:45:23 110  ,gbp_g22
21:45:23 111  ,gbp_g23
21:45:23 112  ,gbp_g24
21:45:23 113  ,gbp_g25
21:45:23 114  ,gbp_g26
21:45:23 115  ,gbp_g27
21:45:23 116  ,gbp_g28
21:45:23 117  ,gbp_g29
21:45:23 118  ,gbp_g30
21:45:23 119  ,gbp_g31
21:45:23 120  ,gbp_g32
21:45:23 121  ,gbp_g33
21:45:23 122  ,gbp_g34
21:45:23 123  ,gbp_g35
21:45:23 124  ,gbp_g36
21:45:23 125  ,gbp_g37
21:45:23 126  ,gbp_g38
21:45:23 127  ,gbp_g39
21:45:23 128  ,gbp_g40
21:45:23 129  ,jpy_g00
21:45:23 130  ,jpy_g01
21:45:23 131  ,jpy_g02
21:45:23 132  ,jpy_g03
21:45:23 133  ,jpy_g04
21:45:23 134  ,jpy_g05
21:45:23 135  ,jpy_g06
21:45:23 136  ,jpy_g07
21:45:23 137  ,jpy_g08
21:45:23 138  ,jpy_g09
21:45:23 139  ,jpy_g10
21:45:23 140  ,jpy_g11
21:45:23 141  ,jpy_g12
21:45:23 142  ,jpy_g13
21:45:23 143  ,jpy_g14
21:45:23 144  ,jpy_g15
21:45:23 145  ,jpy_g16
21:45:23 146  ,jpy_g17
21:45:23 147  ,jpy_g18
21:45:23 148  ,jpy_g19
21:45:23 149  ,jpy_g20
21:45:23 150  ,jpy_g21
21:45:23 151  ,jpy_g22
21:45:23 152  ,jpy_g23
21:45:23 153  ,jpy_g24
21:45:23 154  ,jpy_g25
21:45:23 155  ,jpy_g26
21:45:23 156  ,jpy_g27
21:45:23 157  ,jpy_g28
21:45:23 158  ,jpy_g29
21:45:23 159  ,jpy_g30
21:45:23 160  ,jpy_g31
21:45:23 161  ,jpy_g32
21:45:23 162  ,jpy_g33
21:45:23 163  ,jpy_g34
21:45:23 164  ,jpy_g35
21:45:23 165  ,jpy_g36
21:45:23 166  ,jpy_g37
21:45:23 167  ,jpy_g38
21:45:23 168  ,jpy_g39
21:45:23 169  ,jpy_g40
21:45:23 170  ,cad_g00
21:45:23 171  ,cad_g01
21:45:23 172  ,cad_g02
21:45:23 173  ,cad_g03
21:45:23 174  ,cad_g04
21:45:23 175  ,cad_g05
21:45:23 176  ,cad_g06
21:45:23 177  ,cad_g07
21:45:23 178  ,cad_g08
21:45:23 179  ,cad_g09
21:45:23 180  ,cad_g10
21:45:23 181  ,cad_g11
21:45:23 182  ,cad_g12
21:45:23 183  ,cad_g13
21:45:23 184  ,cad_g14
21:45:23 185  ,cad_g15
21:45:23 186  ,cad_g16
21:45:23 187  ,cad_g17
21:45:23 188  ,cad_g18
21:45:23 189  ,cad_g19
21:45:23 190  ,cad_g20
21:45:23 191  ,cad_g21
21:45:23 192  ,cad_g22
21:45:23 193  ,cad_g23
21:45:23 194  ,cad_g24
21:45:23 195  ,cad_g25
21:45:23 196  ,cad_g26
21:45:23 197  ,cad_g27
21:45:23 198  ,cad_g28
21:45:23 199  ,cad_g29
21:45:23 200  ,cad_g30
21:45:23 201  ,cad_g31
21:45:23 202  ,cad_g32
21:45:23 203  ,cad_g33
21:45:23 204  ,cad_g34
21:45:23 205  ,cad_g35
21:45:23 206  ,cad_g36
21:45:23 207  ,cad_g37
21:45:23 208  ,cad_g38
21:45:23 209  ,cad_g39
21:45:23 210  ,cad_g40
21:45:23 211  ,chf_g00
21:45:23 212  ,chf_g01
21:45:23 213  ,chf_g02
21:45:23 214  ,chf_g03
21:45:23 215  ,chf_g04
21:45:23 216  ,chf_g05
21:45:23 217  ,chf_g06
21:45:23 218  ,chf_g07
21:45:23 219  ,chf_g08
21:45:23 220  ,chf_g09
21:45:23 221  ,chf_g10
21:45:23 222  ,chf_g11
21:45:23 223  ,chf_g12
21:45:23 224  ,chf_g13
21:45:23 225  ,chf_g14
21:45:23 226  ,chf_g15
21:45:23 227  ,chf_g16
21:45:23 228  ,chf_g17
21:45:23 229  ,chf_g18
21:45:23 230  ,chf_g19
21:45:23 231  ,chf_g20
21:45:23 232  ,chf_g21
21:45:23 233  ,chf_g22
21:45:23 234  ,chf_g23
21:45:23 235  ,chf_g24
21:45:23 236  ,chf_g25
21:45:23 237  ,chf_g26
21:45:23 238  ,chf_g27
21:45:23 239  ,chf_g28
21:45:23 240  ,chf_g29
21:45:23 241  ,chf_g30
21:45:23 242  ,chf_g31
21:45:23 243  ,chf_g32
21:45:23 244  ,chf_g33
21:45:23 245  ,chf_g34
21:45:23 246  ,chf_g35
21:45:23 247  ,chf_g36
21:45:23 248  ,chf_g37
21:45:23 249  ,chf_g38
21:45:23 250  ,chf_g39
21:45:23 251  ,chf_g40
21:45:23 252  FROM chf_ms14 m
21:45:23 253  WHERE m.ydate = '&1'||' '||'&2'
21:45:23 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'09:00:00'

View created.

Elapsed: 00:00:00.12
21:45:23 SQL> 
21:45:23 SQL> -- rpt
21:45:23 SQL> -- We should see just 1 row:
21:45:23 SQL> 
21:45:23 SQL> SELECT COUNT(prdate) FROM sme
21:45:23   2  
21:45:23 SQL> -- Build the model:
21:45:23 SQL> CREATE OR REPLACE VIEW bme AS
21:45:23   2  SELECT
21:45:23   3  'chf'||m.ydate prdate
21:45:23   4  ,gattn
21:45:23   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:45:23   6  ,eur_g00
21:45:23   7  ,eur_g01
21:45:23   8  ,eur_g02
21:45:23   9  ,eur_g03
21:45:23  10  ,eur_g04
21:45:23  11  ,eur_g05
21:45:23  12  ,eur_g06
21:45:23  13  ,eur_g07
21:45:23  14  ,eur_g08
21:45:23  15  ,eur_g09
21:45:23  16  ,eur_g10
21:45:23  17  ,eur_g11
21:45:23  18  ,eur_g12
21:45:23  19  ,eur_g13
21:45:23  20  ,eur_g14
21:45:23  21  ,eur_g15
21:45:23  22  ,eur_g16
21:45:23  23  ,eur_g17
21:45:23  24  ,eur_g18
21:45:23  25  ,eur_g19
21:45:23  26  ,eur_g20
21:45:23  27  ,eur_g21
21:45:23  28  ,eur_g22
21:45:23  29  ,eur_g23
21:45:23  30  ,eur_g24
21:45:23  31  ,eur_g25
21:45:23  32  ,eur_g26
21:45:23  33  ,eur_g27
21:45:23  34  ,eur_g28
21:45:23  35  ,eur_g29
21:45:23  36  ,eur_g30
21:45:23  37  ,eur_g31
21:45:23  38  ,eur_g32
21:45:23  39  ,eur_g33
21:45:23  40  ,eur_g34
21:45:23  41  ,eur_g35
21:45:23  42  ,eur_g36
21:45:23  43  ,eur_g37
21:45:23  44  ,eur_g38
21:45:23  45  ,eur_g39
21:45:23  46  ,eur_g40
21:45:23  47  ,aud_g00
21:45:23  48  ,aud_g01
21:45:23  49  ,aud_g02
21:45:23  50  ,aud_g03
21:45:23  51  ,aud_g04
21:45:23  52  ,aud_g05
21:45:23  53  ,aud_g06
21:45:23  54  ,aud_g07
21:45:23  55  ,aud_g08
21:45:23  56  ,aud_g09
21:45:23  57  ,aud_g10
21:45:23  58  ,aud_g11
21:45:23  59  ,aud_g12
21:45:23  60  ,aud_g13
21:45:23  61  ,aud_g14
21:45:23  62  ,aud_g15
21:45:23  63  ,aud_g16
21:45:23  64  ,aud_g17
21:45:23  65  ,aud_g18
21:45:23  66  ,aud_g19
21:45:23  67  ,aud_g20
21:45:23  68  ,aud_g21
21:45:23  69  ,aud_g22
21:45:23  70  ,aud_g23
21:45:23  71  ,aud_g24
21:45:23  72  ,aud_g25
21:45:23  73  ,aud_g26
21:45:23  74  ,aud_g27
21:45:23  75  ,aud_g28
21:45:23  76  ,aud_g29
21:45:23  77  ,aud_g30
21:45:23  78  ,aud_g31
21:45:23  79  ,aud_g32
21:45:23  80  ,aud_g33
21:45:23  81  ,aud_g34
21:45:23  82  ,aud_g35
21:45:23  83  ,aud_g36
21:45:23  84  ,aud_g37
21:45:23  85  ,aud_g38
21:45:23  86  ,aud_g39
21:45:23  87  ,aud_g40
21:45:23  88  ,gbp_g00
21:45:23  89  ,gbp_g01
21:45:23  90  ,gbp_g02
21:45:23  91  ,gbp_g03
21:45:23  92  ,gbp_g04
21:45:23  93  ,gbp_g05
21:45:23  94  ,gbp_g06
21:45:23  95  ,gbp_g07
21:45:23  96  ,gbp_g08
21:45:23  97  ,gbp_g09
21:45:23  98  ,gbp_g10
21:45:23  99  ,gbp_g11
21:45:23 100  ,gbp_g12
21:45:23 101  ,gbp_g13
21:45:23 102  ,gbp_g14
21:45:23 103  ,gbp_g15
21:45:23 104  ,gbp_g16
21:45:23 105  ,gbp_g17
21:45:23 106  ,gbp_g18
21:45:23 107  ,gbp_g19
21:45:23 108  ,gbp_g20
21:45:23 109  ,gbp_g21
21:45:23 110  ,gbp_g22
21:45:23 111  ,gbp_g23
21:45:23 112  ,gbp_g24
21:45:23 113  ,gbp_g25
21:45:23 114  ,gbp_g26
21:45:23 115  ,gbp_g27
21:45:23 116  ,gbp_g28
21:45:23 117  ,gbp_g29
21:45:23 118  ,gbp_g30
21:45:23 119  ,gbp_g31
21:45:23 120  ,gbp_g32
21:45:23 121  ,gbp_g33
21:45:23 122  ,gbp_g34
21:45:23 123  ,gbp_g35
21:45:23 124  ,gbp_g36
21:45:23 125  ,gbp_g37
21:45:23 126  ,gbp_g38
21:45:23 127  ,gbp_g39
21:45:23 128  ,gbp_g40
21:45:23 129  ,jpy_g00
21:45:23 130  ,jpy_g01
21:45:23 131  ,jpy_g02
21:45:23 132  ,jpy_g03
21:45:23 133  ,jpy_g04
21:45:23 134  ,jpy_g05
21:45:23 135  ,jpy_g06
21:45:23 136  ,jpy_g07
21:45:23 137  ,jpy_g08
21:45:23 138  ,jpy_g09
21:45:23 139  ,jpy_g10
21:45:23 140  ,jpy_g11
21:45:23 141  ,jpy_g12
21:45:23 142  ,jpy_g13
21:45:23 143  ,jpy_g14
21:45:23 144  ,jpy_g15
21:45:23 145  ,jpy_g16
21:45:23 146  ,jpy_g17
21:45:23 147  ,jpy_g18
21:45:23 148  ,jpy_g19
21:45:23 149  ,jpy_g20
21:45:23 150  ,jpy_g21
21:45:23 151  ,jpy_g22
21:45:23 152  ,jpy_g23
21:45:23 153  ,jpy_g24
21:45:23 154  ,jpy_g25
21:45:23 155  ,jpy_g26
21:45:23 156  ,jpy_g27
21:45:23 157  ,jpy_g28
21:45:23 158  ,jpy_g29
21:45:23 159  ,jpy_g30
21:45:23 160  ,jpy_g31
21:45:23 161  ,jpy_g32
21:45:23 162  ,jpy_g33
21:45:23 163  ,jpy_g34
21:45:23 164  ,jpy_g35
21:45:23 165  ,jpy_g36
21:45:23 166  ,jpy_g37
21:45:23 167  ,jpy_g38
21:45:23 168  ,jpy_g39
21:45:23 169  ,jpy_g40
21:45:23 170  ,cad_g00
21:45:23 171  ,cad_g01
21:45:23 172  ,cad_g02
21:45:23 173  ,cad_g03
21:45:23 174  ,cad_g04
21:45:23 175  ,cad_g05
21:45:23 176  ,cad_g06
21:45:23 177  ,cad_g07
21:45:23 178  ,cad_g08
21:45:23 179  ,cad_g09
21:45:23 180  ,cad_g10
21:45:23 181  ,cad_g11
21:45:23 182  ,cad_g12
21:45:23 183  ,cad_g13
21:45:23 184  ,cad_g14
21:45:23 185  ,cad_g15
21:45:23 186  ,cad_g16
21:45:23 187  ,cad_g17
21:45:23 188  ,cad_g18
21:45:23 189  ,cad_g19
21:45:23 190  ,cad_g20
21:45:23 191  ,cad_g21
21:45:23 192  ,cad_g22
21:45:23 193  ,cad_g23
21:45:23 194  ,cad_g24
21:45:23 195  ,cad_g25
21:45:23 196  ,cad_g26
21:45:23 197  ,cad_g27
21:45:23 198  ,cad_g28
21:45:23 199  ,cad_g29
21:45:23 200  ,cad_g30
21:45:23 201  ,cad_g31
21:45:23 202  ,cad_g32
21:45:23 203  ,cad_g33
21:45:23 204  ,cad_g34
21:45:23 205  ,cad_g35
21:45:23 206  ,cad_g36
21:45:23 207  ,cad_g37
21:45:23 208  ,cad_g38
21:45:23 209  ,cad_g39
21:45:23 210  ,cad_g40
21:45:23 211  ,chf_g00
21:45:23 212  ,chf_g01
21:45:23 213  ,chf_g02
21:45:23 214  ,chf_g03
21:45:23 215  ,chf_g04
21:45:23 216  ,chf_g05
21:45:23 217  ,chf_g06
21:45:23 218  ,chf_g07
21:45:23 219  ,chf_g08
21:45:23 220  ,chf_g09
21:45:23 221  ,chf_g10
21:45:23 222  ,chf_g11
21:45:23 223  ,chf_g12
21:45:23 224  ,chf_g13
21:45:23 225  ,chf_g14
21:45:23 226  ,chf_g15
21:45:23 227  ,chf_g16
21:45:23 228  ,chf_g17
21:45:23 229  ,chf_g18
21:45:23 230  ,chf_g19
21:45:23 231  ,chf_g20
21:45:23 232  ,chf_g21
21:45:23 233  ,chf_g22
21:45:23 234  ,chf_g23
21:45:23 235  ,chf_g24
21:45:23 236  ,chf_g25
21:45:23 237  ,chf_g26
21:45:23 238  ,chf_g27
21:45:23 239  ,chf_g28
21:45:23 240  ,chf_g29
21:45:23 241  ,chf_g30
21:45:23 242  ,chf_g31
21:45:23 243  ,chf_g32
21:45:23 244  ,chf_g33
21:45:23 245  ,chf_g34
21:45:23 246  ,chf_g35
21:45:23 247  ,chf_g36
21:45:23 248  ,chf_g37
21:45:23 249  ,chf_g38
21:45:23 250  ,chf_g39
21:45:23 251  ,chf_g40
21:45:23 252  FROM chf_ms14 m
21:45:23 253  WHERE gattn IN('nup','up')
21:45:23 254  AND 1+m.ydate < '&1'||' '||'&2'
21:45:23 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'09:00:00'

View created.

Elapsed: 00:00:00.12
21:45:23 SQL> 
21:45:23 SQL> -- rpt
21:45:23 SQL> 
21:45:23 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:45:23   2  
21:45:23 SQL> SELECT MAX(prdate) FROM bme
21:45:23   2  
21:45:23 SQL> -- Now build model from bme and score sme
21:45:23 SQL> @score1gattn.sql
21:45:23 SQL> -- score1gattn.sql
21:45:23 SQL> 
21:45:23 SQL> -- Does the 1st SVM score
21:45:23 SQL> 
21:45:23 SQL> -- Fill up svmc_apply_prep
21:45:23 SQL> @score_gattn.sql
21:45:23 SQL> --
21:45:23 SQL> -- score_gattn.sql
21:45:23 SQL> --
21:45:23 SQL> 
21:45:23 SQL> -- usage: score_gattn.sql
21:45:23 SQL> 
21:45:23 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:45:23 SQL> 
21:45:23 SQL> DEFINE target	= 'gattn'
21:45:23 SQL> DEFINE model_name = 'forex14'
21:45:23 SQL> DEFINE bldtable	= 'bme'
21:45:23 SQL> DEFINE scoretable = 'sme'
21:45:23 SQL> DEFINE case_id	= 'prdate'
21:45:23 SQL> 
21:45:23 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:45:23 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:45:23 SQL> 
21:45:23 SQL> -- Builds an SVM model using pl/sql.
21:45:23 SQL> 
21:45:23 SQL> -----------------------------------------------------------------------
21:45:23 SQL> --			    BUILD THE MODEL
21:45:23 SQL> -----------------------------------------------------------------------
21:45:23 SQL> 
21:45:23 SQL> -- Cleanup old build data preparation objects for repeat runs
21:45:23 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:45:23 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:45:23 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:45:23 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:45:23 SQL> 
21:45:23 SQL> 
21:45:23 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:45:23 SQL> --
21:45:23 SQL> -- DROP	TABLE svmc_settings ;
21:45:23 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:45:23 SQL> -- DELETE svmc_settings;
21:45:23 SQL> 
21:45:23 SQL> -- The default classification algorithm is Naive Bayes. So override
21:45:23 SQL> -- this choice to SVM using a settings table.
21:45:23 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:45:23 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:45:23 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:45:23 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:45:23 SQL> -- models.
21:45:23 SQL> --
21:45:23 SQL> 
21:45:23 SQL> -- Do this once and then comment it out.
21:45:23 SQL> -- That makes script go faster.
21:45:23 SQL> -- BEGIN
21:45:23 SQL> -- -- Populate settings table
21:45:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:45:23 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:45:23 SQL> --
21:45:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:45:23 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:45:23 SQL> --
21:45:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:45:23 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:45:23 SQL> --   COMMIT;
21:45:23 SQL> -- END;
21:45:23 SQL> -- /
21:45:23 SQL> 
21:45:23 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:45:23 SQL> 
21:45:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:45:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:45:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:45:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:45:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:45:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:45:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:45:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:45:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:45:23 SQL> 
21:45:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:45:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:45:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:45:23 SQL> 
21:45:23 SQL> --------------------------------
21:45:23 SQL> -- PREPARE BUILD (TRAINING) DATA
21:45:23 SQL> --
21:45:23 SQL> 
21:45:23 SQL> -- 1. Missing Value treatment for all Predictors and
21:45:23 SQL> -- 2. Outlier Treatment and
21:45:23 SQL> -- 3. Normalization are performed below.
21:45:23 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:45:23 SQL> --    normalized here.
21:45:23 SQL> 
21:45:23 SQL> BEGIN
21:45:23   2  	-- Perform missing value treatment for all predictors
21:45:23   3  	-- create miss tables
21:45:23   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:45:23   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:45:23   6  
21:45:23   7  	-- populate miss tables
21:45:23   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:45:23   9  	  miss_table_name => 'svmc_miss_num',
21:45:23  10  	  data_table_name => '&bldtable',
21:45:23  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:45:23  12  
21:45:23  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:45:23  14  	  miss_table_name => 'svmc_miss_cat',
21:45:23  15  	  data_table_name => '&bldtable',
21:45:23  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:45:23  17  
21:45:23  18  	-- xform input data to replace missing values
21:45:23  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:45:23  20  	  miss_table_name => 'svmc_miss_num',
21:45:23  21  	  data_table_name => '&bldtable',
21:45:23  22  	  xform_view_name => 'xformed_build_miss_num');
21:45:23  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:45:23  24  	  miss_table_name => 'svmc_miss_cat',
21:45:23  25  	  data_table_name => '&bldtable',
21:45:23  26  	  xform_view_name => 'xformed_build_miss_cat');
21:45:23  27  
21:45:23  28  	-- Perform outlier treatment.
21:45:23  29  	-- create clip table
21:45:23  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:45:23  31  
21:45:23  32  	-- populate clip table
21:45:23  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:45:23  34  	  clip_table_name => 'svmc_clip',
21:45:23  35  	  data_table_name => '&bldtable',
21:45:23  36  	  tail_frac	  => 0.025,
21:45:23  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:45:23  38  
21:45:23  39  	-- xform input data to winsorized data
21:45:23  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:45:23  41  	  clip_table_name => 'svmc_clip',
21:45:23  42  	  data_table_name => '&bldtable',
21:45:23  43  	  xform_view_name => 'svmc_winsor');
21:45:23  44  
21:45:23  45  	-- create normalization table
21:45:23  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:45:23  47  
21:45:23  48  	-- populate normalization table based on winsorized data
21:45:23  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:45:23  50  	  norm_table_name => 'svmc_norm',
21:45:23  51  	  data_table_name => 'svmc_winsor',
21:45:23  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:45:23  53  
21:45:23  54  	-- normalize the original data
21:45:23  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:45:23  56  	  norm_table_name => 'svmc_norm',
21:45:23  57  	  data_table_name => '&bldtable',
21:45:23  58  	  xform_view_name => 'svmc_build_prep');
21:45:23  59  END;
21:45:23  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.08
21:45:41 SQL> 
21:45:41 SQL> ---------------------
21:45:41 SQL> -- CREATE A NEW MODEL
21:45:41 SQL> --
21:45:41 SQL> -- Cleanup old model with the same name for repeat runs
21:45:41 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:45:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:45:41   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.94
21:45:42 SQL> 
21:45:42 SQL> -- Build a new SVM Model
21:45:42 SQL> BEGIN
21:45:42   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:45:42   3  	  model_name	      => '&model_name',
21:45:42   4  	  mining_function     => dbms_data_mining.classification,
21:45:42   5  	  data_table_name     => 'svmc_build_prep',
21:45:42   6  	  case_id_column_name => '&case_id',
21:45:42   7  	  target_column_name  => '&target',
21:45:42   8  	  settings_table_name => 'svmc_settings');
21:45:42   9  END;
21:45:42  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.93
21:46:08 SQL> 
21:46:08 SQL> -----------------------------------------------------------------------
21:46:08 SQL> --			       APPLY/score THE MODEL
21:46:08 SQL> -----------------------------------------------------------------------
21:46:08 SQL> 
21:46:08 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:46:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:46:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:46:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:46:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:46:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:46:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:46:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:46:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:46:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:46:08 SQL> -----------------------
21:46:08 SQL> -- PREPARE SCORING DATA
21:46:08 SQL> --
21:46:08 SQL> -- If the data for model creation has been prepared, then the data
21:46:08 SQL> -- to be scored using the model must be prepared in the same manner
21:46:08 SQL> -- in order to obtain meaningful results.
21:46:08 SQL> --
21:46:08 SQL> -- 1. Missing Value treatment for all Predictors and
21:46:08 SQL> -- 2. Normalization
21:46:08 SQL> -- No outlier treatment will be performed during test and apply. The
21:46:08 SQL> -- normalization step is sufficient, since the normalization parameters
21:46:08 SQL> -- already capture the effects of outlier treatment done with build data.
21:46:08 SQL> --
21:46:08 SQL> BEGIN
21:46:08   2  	-- Xform Test data to replace missing values
21:46:08   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:46:08   4  	  miss_table_name => 'svmc_miss_num',
21:46:08   5  	  data_table_name => '&scoretable',
21:46:08   6  	  xform_view_name => 'xformed_apply_miss_num');
21:46:08   7  
21:46:08   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:46:08   9  	  miss_table_name => 'svmc_miss_cat',
21:46:08  10  	  data_table_name => '&scoretable',
21:46:08  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:46:08  12  
21:46:08  13  	-- Normalize the data to be scored
21:46:08  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:46:08  15  	  norm_table_name => 'svmc_norm',
21:46:08  16  	  data_table_name => '&scoretable',
21:46:08  17  	  xform_view_name => 'svmc_apply_prep');
21:46:08  18  END;
21:46:08  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
21:46:09 SQL> 
21:46:09 SQL> -- Use same model_name used in score_gattn.sql
21:46:09 SQL> DEFINE model_name = 'forex14'
21:46:09 SQL> 
21:46:09 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:46:09 SQL> 
21:46:09 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:46:09   2  SELECT
21:46:09   3  prdate
21:46:09   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:46:09   5  ,sysdate
21:46:09   6  ,SUBSTR(prdate,1,3)pair
21:46:09   7  ,SUBSTR(prdate,4,19)ydate
21:46:09   8  FROM svmc_apply_prep
21:46:09   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:46:10 SQL> @chf_score1day_gattn.sql	2010-12-17 08:55:00
21:46:10 SQL> --
21:46:10 SQL> -- chf_score1day_gattn.sql
21:46:10 SQL> --
21:46:10 SQL> 
21:46:10 SQL> CREATE OR REPLACE VIEW sme AS
21:46:10   2  SELECT
21:46:10   3  'chf'||m.ydate prdate
21:46:10   4  ,NULL gattn
21:46:10   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:46:10   6  ,eur_g00
21:46:10   7  ,eur_g01
21:46:10   8  ,eur_g02
21:46:10   9  ,eur_g03
21:46:10  10  ,eur_g04
21:46:10  11  ,eur_g05
21:46:10  12  ,eur_g06
21:46:10  13  ,eur_g07
21:46:10  14  ,eur_g08
21:46:10  15  ,eur_g09
21:46:10  16  ,eur_g10
21:46:10  17  ,eur_g11
21:46:10  18  ,eur_g12
21:46:10  19  ,eur_g13
21:46:10  20  ,eur_g14
21:46:10  21  ,eur_g15
21:46:10  22  ,eur_g16
21:46:10  23  ,eur_g17
21:46:10  24  ,eur_g18
21:46:10  25  ,eur_g19
21:46:10  26  ,eur_g20
21:46:10  27  ,eur_g21
21:46:10  28  ,eur_g22
21:46:10  29  ,eur_g23
21:46:10  30  ,eur_g24
21:46:10  31  ,eur_g25
21:46:10  32  ,eur_g26
21:46:10  33  ,eur_g27
21:46:10  34  ,eur_g28
21:46:10  35  ,eur_g29
21:46:10  36  ,eur_g30
21:46:10  37  ,eur_g31
21:46:10  38  ,eur_g32
21:46:10  39  ,eur_g33
21:46:10  40  ,eur_g34
21:46:10  41  ,eur_g35
21:46:10  42  ,eur_g36
21:46:10  43  ,eur_g37
21:46:10  44  ,eur_g38
21:46:10  45  ,eur_g39
21:46:10  46  ,eur_g40
21:46:10  47  ,aud_g00
21:46:10  48  ,aud_g01
21:46:10  49  ,aud_g02
21:46:10  50  ,aud_g03
21:46:10  51  ,aud_g04
21:46:10  52  ,aud_g05
21:46:10  53  ,aud_g06
21:46:10  54  ,aud_g07
21:46:10  55  ,aud_g08
21:46:10  56  ,aud_g09
21:46:10  57  ,aud_g10
21:46:10  58  ,aud_g11
21:46:10  59  ,aud_g12
21:46:10  60  ,aud_g13
21:46:10  61  ,aud_g14
21:46:10  62  ,aud_g15
21:46:10  63  ,aud_g16
21:46:10  64  ,aud_g17
21:46:10  65  ,aud_g18
21:46:10  66  ,aud_g19
21:46:10  67  ,aud_g20
21:46:10  68  ,aud_g21
21:46:10  69  ,aud_g22
21:46:10  70  ,aud_g23
21:46:10  71  ,aud_g24
21:46:10  72  ,aud_g25
21:46:10  73  ,aud_g26
21:46:10  74  ,aud_g27
21:46:10  75  ,aud_g28
21:46:10  76  ,aud_g29
21:46:10  77  ,aud_g30
21:46:10  78  ,aud_g31
21:46:10  79  ,aud_g32
21:46:10  80  ,aud_g33
21:46:10  81  ,aud_g34
21:46:10  82  ,aud_g35
21:46:10  83  ,aud_g36
21:46:10  84  ,aud_g37
21:46:10  85  ,aud_g38
21:46:10  86  ,aud_g39
21:46:10  87  ,aud_g40
21:46:10  88  ,gbp_g00
21:46:10  89  ,gbp_g01
21:46:10  90  ,gbp_g02
21:46:10  91  ,gbp_g03
21:46:10  92  ,gbp_g04
21:46:10  93  ,gbp_g05
21:46:10  94  ,gbp_g06
21:46:10  95  ,gbp_g07
21:46:10  96  ,gbp_g08
21:46:10  97  ,gbp_g09
21:46:10  98  ,gbp_g10
21:46:10  99  ,gbp_g11
21:46:10 100  ,gbp_g12
21:46:10 101  ,gbp_g13
21:46:10 102  ,gbp_g14
21:46:10 103  ,gbp_g15
21:46:10 104  ,gbp_g16
21:46:10 105  ,gbp_g17
21:46:10 106  ,gbp_g18
21:46:10 107  ,gbp_g19
21:46:10 108  ,gbp_g20
21:46:10 109  ,gbp_g21
21:46:10 110  ,gbp_g22
21:46:10 111  ,gbp_g23
21:46:10 112  ,gbp_g24
21:46:10 113  ,gbp_g25
21:46:10 114  ,gbp_g26
21:46:10 115  ,gbp_g27
21:46:10 116  ,gbp_g28
21:46:10 117  ,gbp_g29
21:46:10 118  ,gbp_g30
21:46:10 119  ,gbp_g31
21:46:10 120  ,gbp_g32
21:46:10 121  ,gbp_g33
21:46:10 122  ,gbp_g34
21:46:10 123  ,gbp_g35
21:46:10 124  ,gbp_g36
21:46:10 125  ,gbp_g37
21:46:10 126  ,gbp_g38
21:46:10 127  ,gbp_g39
21:46:10 128  ,gbp_g40
21:46:10 129  ,jpy_g00
21:46:10 130  ,jpy_g01
21:46:10 131  ,jpy_g02
21:46:10 132  ,jpy_g03
21:46:10 133  ,jpy_g04
21:46:10 134  ,jpy_g05
21:46:10 135  ,jpy_g06
21:46:10 136  ,jpy_g07
21:46:10 137  ,jpy_g08
21:46:10 138  ,jpy_g09
21:46:10 139  ,jpy_g10
21:46:10 140  ,jpy_g11
21:46:10 141  ,jpy_g12
21:46:10 142  ,jpy_g13
21:46:10 143  ,jpy_g14
21:46:10 144  ,jpy_g15
21:46:10 145  ,jpy_g16
21:46:10 146  ,jpy_g17
21:46:10 147  ,jpy_g18
21:46:10 148  ,jpy_g19
21:46:10 149  ,jpy_g20
21:46:10 150  ,jpy_g21
21:46:10 151  ,jpy_g22
21:46:10 152  ,jpy_g23
21:46:10 153  ,jpy_g24
21:46:10 154  ,jpy_g25
21:46:10 155  ,jpy_g26
21:46:10 156  ,jpy_g27
21:46:10 157  ,jpy_g28
21:46:10 158  ,jpy_g29
21:46:10 159  ,jpy_g30
21:46:10 160  ,jpy_g31
21:46:10 161  ,jpy_g32
21:46:10 162  ,jpy_g33
21:46:10 163  ,jpy_g34
21:46:10 164  ,jpy_g35
21:46:10 165  ,jpy_g36
21:46:10 166  ,jpy_g37
21:46:10 167  ,jpy_g38
21:46:10 168  ,jpy_g39
21:46:10 169  ,jpy_g40
21:46:10 170  ,cad_g00
21:46:10 171  ,cad_g01
21:46:10 172  ,cad_g02
21:46:10 173  ,cad_g03
21:46:10 174  ,cad_g04
21:46:10 175  ,cad_g05
21:46:10 176  ,cad_g06
21:46:10 177  ,cad_g07
21:46:10 178  ,cad_g08
21:46:10 179  ,cad_g09
21:46:10 180  ,cad_g10
21:46:10 181  ,cad_g11
21:46:10 182  ,cad_g12
21:46:10 183  ,cad_g13
21:46:10 184  ,cad_g14
21:46:10 185  ,cad_g15
21:46:10 186  ,cad_g16
21:46:10 187  ,cad_g17
21:46:10 188  ,cad_g18
21:46:10 189  ,cad_g19
21:46:10 190  ,cad_g20
21:46:10 191  ,cad_g21
21:46:10 192  ,cad_g22
21:46:10 193  ,cad_g23
21:46:10 194  ,cad_g24
21:46:10 195  ,cad_g25
21:46:10 196  ,cad_g26
21:46:10 197  ,cad_g27
21:46:10 198  ,cad_g28
21:46:10 199  ,cad_g29
21:46:10 200  ,cad_g30
21:46:10 201  ,cad_g31
21:46:10 202  ,cad_g32
21:46:10 203  ,cad_g33
21:46:10 204  ,cad_g34
21:46:10 205  ,cad_g35
21:46:10 206  ,cad_g36
21:46:10 207  ,cad_g37
21:46:10 208  ,cad_g38
21:46:10 209  ,cad_g39
21:46:10 210  ,cad_g40
21:46:10 211  ,chf_g00
21:46:10 212  ,chf_g01
21:46:10 213  ,chf_g02
21:46:10 214  ,chf_g03
21:46:10 215  ,chf_g04
21:46:10 216  ,chf_g05
21:46:10 217  ,chf_g06
21:46:10 218  ,chf_g07
21:46:10 219  ,chf_g08
21:46:10 220  ,chf_g09
21:46:10 221  ,chf_g10
21:46:10 222  ,chf_g11
21:46:10 223  ,chf_g12
21:46:10 224  ,chf_g13
21:46:10 225  ,chf_g14
21:46:10 226  ,chf_g15
21:46:10 227  ,chf_g16
21:46:10 228  ,chf_g17
21:46:10 229  ,chf_g18
21:46:10 230  ,chf_g19
21:46:10 231  ,chf_g20
21:46:10 232  ,chf_g21
21:46:10 233  ,chf_g22
21:46:10 234  ,chf_g23
21:46:10 235  ,chf_g24
21:46:10 236  ,chf_g25
21:46:10 237  ,chf_g26
21:46:10 238  ,chf_g27
21:46:10 239  ,chf_g28
21:46:10 240  ,chf_g29
21:46:10 241  ,chf_g30
21:46:10 242  ,chf_g31
21:46:10 243  ,chf_g32
21:46:10 244  ,chf_g33
21:46:10 245  ,chf_g34
21:46:10 246  ,chf_g35
21:46:10 247  ,chf_g36
21:46:10 248  ,chf_g37
21:46:10 249  ,chf_g38
21:46:10 250  ,chf_g39
21:46:10 251  ,chf_g40
21:46:10 252  FROM chf_ms14 m
21:46:10 253  WHERE m.ydate = '&1'||' '||'&2'
21:46:10 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'08:55:00'

View created.

Elapsed: 00:00:00.13
21:46:10 SQL> 
21:46:10 SQL> -- rpt
21:46:10 SQL> -- We should see just 1 row:
21:46:10 SQL> 
21:46:10 SQL> SELECT COUNT(prdate) FROM sme
21:46:10   2  
21:46:10 SQL> -- Build the model:
21:46:10 SQL> CREATE OR REPLACE VIEW bme AS
21:46:10   2  SELECT
21:46:10   3  'chf'||m.ydate prdate
21:46:10   4  ,gattn
21:46:10   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:46:10   6  ,eur_g00
21:46:10   7  ,eur_g01
21:46:10   8  ,eur_g02
21:46:10   9  ,eur_g03
21:46:10  10  ,eur_g04
21:46:10  11  ,eur_g05
21:46:10  12  ,eur_g06
21:46:10  13  ,eur_g07
21:46:10  14  ,eur_g08
21:46:10  15  ,eur_g09
21:46:10  16  ,eur_g10
21:46:10  17  ,eur_g11
21:46:10  18  ,eur_g12
21:46:10  19  ,eur_g13
21:46:10  20  ,eur_g14
21:46:10  21  ,eur_g15
21:46:10  22  ,eur_g16
21:46:10  23  ,eur_g17
21:46:10  24  ,eur_g18
21:46:10  25  ,eur_g19
21:46:10  26  ,eur_g20
21:46:10  27  ,eur_g21
21:46:10  28  ,eur_g22
21:46:10  29  ,eur_g23
21:46:10  30  ,eur_g24
21:46:10  31  ,eur_g25
21:46:10  32  ,eur_g26
21:46:10  33  ,eur_g27
21:46:10  34  ,eur_g28
21:46:10  35  ,eur_g29
21:46:10  36  ,eur_g30
21:46:10  37  ,eur_g31
21:46:10  38  ,eur_g32
21:46:10  39  ,eur_g33
21:46:10  40  ,eur_g34
21:46:10  41  ,eur_g35
21:46:10  42  ,eur_g36
21:46:10  43  ,eur_g37
21:46:10  44  ,eur_g38
21:46:10  45  ,eur_g39
21:46:10  46  ,eur_g40
21:46:10  47  ,aud_g00
21:46:10  48  ,aud_g01
21:46:10  49  ,aud_g02
21:46:10  50  ,aud_g03
21:46:10  51  ,aud_g04
21:46:10  52  ,aud_g05
21:46:10  53  ,aud_g06
21:46:10  54  ,aud_g07
21:46:10  55  ,aud_g08
21:46:10  56  ,aud_g09
21:46:10  57  ,aud_g10
21:46:10  58  ,aud_g11
21:46:10  59  ,aud_g12
21:46:10  60  ,aud_g13
21:46:10  61  ,aud_g14
21:46:10  62  ,aud_g15
21:46:10  63  ,aud_g16
21:46:10  64  ,aud_g17
21:46:10  65  ,aud_g18
21:46:10  66  ,aud_g19
21:46:10  67  ,aud_g20
21:46:10  68  ,aud_g21
21:46:10  69  ,aud_g22
21:46:10  70  ,aud_g23
21:46:10  71  ,aud_g24
21:46:10  72  ,aud_g25
21:46:10  73  ,aud_g26
21:46:10  74  ,aud_g27
21:46:10  75  ,aud_g28
21:46:10  76  ,aud_g29
21:46:10  77  ,aud_g30
21:46:10  78  ,aud_g31
21:46:10  79  ,aud_g32
21:46:10  80  ,aud_g33
21:46:10  81  ,aud_g34
21:46:10  82  ,aud_g35
21:46:10  83  ,aud_g36
21:46:10  84  ,aud_g37
21:46:10  85  ,aud_g38
21:46:10  86  ,aud_g39
21:46:10  87  ,aud_g40
21:46:10  88  ,gbp_g00
21:46:10  89  ,gbp_g01
21:46:10  90  ,gbp_g02
21:46:10  91  ,gbp_g03
21:46:10  92  ,gbp_g04
21:46:10  93  ,gbp_g05
21:46:10  94  ,gbp_g06
21:46:10  95  ,gbp_g07
21:46:10  96  ,gbp_g08
21:46:10  97  ,gbp_g09
21:46:10  98  ,gbp_g10
21:46:10  99  ,gbp_g11
21:46:10 100  ,gbp_g12
21:46:10 101  ,gbp_g13
21:46:10 102  ,gbp_g14
21:46:10 103  ,gbp_g15
21:46:10 104  ,gbp_g16
21:46:10 105  ,gbp_g17
21:46:10 106  ,gbp_g18
21:46:10 107  ,gbp_g19
21:46:10 108  ,gbp_g20
21:46:10 109  ,gbp_g21
21:46:10 110  ,gbp_g22
21:46:10 111  ,gbp_g23
21:46:10 112  ,gbp_g24
21:46:10 113  ,gbp_g25
21:46:10 114  ,gbp_g26
21:46:10 115  ,gbp_g27
21:46:10 116  ,gbp_g28
21:46:10 117  ,gbp_g29
21:46:10 118  ,gbp_g30
21:46:10 119  ,gbp_g31
21:46:10 120  ,gbp_g32
21:46:10 121  ,gbp_g33
21:46:10 122  ,gbp_g34
21:46:10 123  ,gbp_g35
21:46:10 124  ,gbp_g36
21:46:10 125  ,gbp_g37
21:46:10 126  ,gbp_g38
21:46:10 127  ,gbp_g39
21:46:10 128  ,gbp_g40
21:46:10 129  ,jpy_g00
21:46:10 130  ,jpy_g01
21:46:10 131  ,jpy_g02
21:46:10 132  ,jpy_g03
21:46:10 133  ,jpy_g04
21:46:10 134  ,jpy_g05
21:46:10 135  ,jpy_g06
21:46:10 136  ,jpy_g07
21:46:10 137  ,jpy_g08
21:46:10 138  ,jpy_g09
21:46:10 139  ,jpy_g10
21:46:10 140  ,jpy_g11
21:46:10 141  ,jpy_g12
21:46:10 142  ,jpy_g13
21:46:10 143  ,jpy_g14
21:46:10 144  ,jpy_g15
21:46:10 145  ,jpy_g16
21:46:10 146  ,jpy_g17
21:46:10 147  ,jpy_g18
21:46:10 148  ,jpy_g19
21:46:10 149  ,jpy_g20
21:46:10 150  ,jpy_g21
21:46:10 151  ,jpy_g22
21:46:10 152  ,jpy_g23
21:46:10 153  ,jpy_g24
21:46:10 154  ,jpy_g25
21:46:10 155  ,jpy_g26
21:46:10 156  ,jpy_g27
21:46:10 157  ,jpy_g28
21:46:10 158  ,jpy_g29
21:46:10 159  ,jpy_g30
21:46:10 160  ,jpy_g31
21:46:10 161  ,jpy_g32
21:46:10 162  ,jpy_g33
21:46:10 163  ,jpy_g34
21:46:10 164  ,jpy_g35
21:46:10 165  ,jpy_g36
21:46:10 166  ,jpy_g37
21:46:10 167  ,jpy_g38
21:46:10 168  ,jpy_g39
21:46:10 169  ,jpy_g40
21:46:10 170  ,cad_g00
21:46:10 171  ,cad_g01
21:46:10 172  ,cad_g02
21:46:10 173  ,cad_g03
21:46:10 174  ,cad_g04
21:46:10 175  ,cad_g05
21:46:10 176  ,cad_g06
21:46:10 177  ,cad_g07
21:46:10 178  ,cad_g08
21:46:10 179  ,cad_g09
21:46:10 180  ,cad_g10
21:46:10 181  ,cad_g11
21:46:10 182  ,cad_g12
21:46:10 183  ,cad_g13
21:46:10 184  ,cad_g14
21:46:10 185  ,cad_g15
21:46:10 186  ,cad_g16
21:46:10 187  ,cad_g17
21:46:10 188  ,cad_g18
21:46:10 189  ,cad_g19
21:46:10 190  ,cad_g20
21:46:10 191  ,cad_g21
21:46:10 192  ,cad_g22
21:46:10 193  ,cad_g23
21:46:10 194  ,cad_g24
21:46:10 195  ,cad_g25
21:46:10 196  ,cad_g26
21:46:10 197  ,cad_g27
21:46:10 198  ,cad_g28
21:46:10 199  ,cad_g29
21:46:10 200  ,cad_g30
21:46:10 201  ,cad_g31
21:46:10 202  ,cad_g32
21:46:10 203  ,cad_g33
21:46:10 204  ,cad_g34
21:46:10 205  ,cad_g35
21:46:10 206  ,cad_g36
21:46:10 207  ,cad_g37
21:46:10 208  ,cad_g38
21:46:10 209  ,cad_g39
21:46:10 210  ,cad_g40
21:46:10 211  ,chf_g00
21:46:10 212  ,chf_g01
21:46:10 213  ,chf_g02
21:46:10 214  ,chf_g03
21:46:10 215  ,chf_g04
21:46:10 216  ,chf_g05
21:46:10 217  ,chf_g06
21:46:10 218  ,chf_g07
21:46:10 219  ,chf_g08
21:46:10 220  ,chf_g09
21:46:10 221  ,chf_g10
21:46:10 222  ,chf_g11
21:46:10 223  ,chf_g12
21:46:10 224  ,chf_g13
21:46:10 225  ,chf_g14
21:46:10 226  ,chf_g15
21:46:10 227  ,chf_g16
21:46:10 228  ,chf_g17
21:46:10 229  ,chf_g18
21:46:10 230  ,chf_g19
21:46:10 231  ,chf_g20
21:46:10 232  ,chf_g21
21:46:10 233  ,chf_g22
21:46:10 234  ,chf_g23
21:46:10 235  ,chf_g24
21:46:10 236  ,chf_g25
21:46:10 237  ,chf_g26
21:46:10 238  ,chf_g27
21:46:10 239  ,chf_g28
21:46:10 240  ,chf_g29
21:46:10 241  ,chf_g30
21:46:10 242  ,chf_g31
21:46:10 243  ,chf_g32
21:46:10 244  ,chf_g33
21:46:10 245  ,chf_g34
21:46:10 246  ,chf_g35
21:46:10 247  ,chf_g36
21:46:10 248  ,chf_g37
21:46:10 249  ,chf_g38
21:46:10 250  ,chf_g39
21:46:10 251  ,chf_g40
21:46:10 252  FROM chf_ms14 m
21:46:10 253  WHERE gattn IN('nup','up')
21:46:10 254  AND 1+m.ydate < '&1'||' '||'&2'
21:46:10 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'08:55:00'

View created.

Elapsed: 00:00:00.11
21:46:10 SQL> 
21:46:10 SQL> -- rpt
21:46:10 SQL> 
21:46:10 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:46:10   2  
21:46:10 SQL> SELECT MAX(prdate) FROM bme
21:46:10   2  
21:46:10 SQL> -- Now build model from bme and score sme
21:46:10 SQL> @score1gattn.sql
21:46:10 SQL> -- score1gattn.sql
21:46:10 SQL> 
21:46:10 SQL> -- Does the 1st SVM score
21:46:10 SQL> 
21:46:10 SQL> -- Fill up svmc_apply_prep
21:46:10 SQL> @score_gattn.sql
21:46:10 SQL> --
21:46:10 SQL> -- score_gattn.sql
21:46:10 SQL> --
21:46:10 SQL> 
21:46:10 SQL> -- usage: score_gattn.sql
21:46:10 SQL> 
21:46:10 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:46:10 SQL> 
21:46:10 SQL> DEFINE target	= 'gattn'
21:46:10 SQL> DEFINE model_name = 'forex14'
21:46:10 SQL> DEFINE bldtable	= 'bme'
21:46:10 SQL> DEFINE scoretable = 'sme'
21:46:10 SQL> DEFINE case_id	= 'prdate'
21:46:10 SQL> 
21:46:10 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:46:10 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:46:10 SQL> 
21:46:10 SQL> -- Builds an SVM model using pl/sql.
21:46:10 SQL> 
21:46:10 SQL> -----------------------------------------------------------------------
21:46:10 SQL> --			    BUILD THE MODEL
21:46:10 SQL> -----------------------------------------------------------------------
21:46:10 SQL> 
21:46:10 SQL> -- Cleanup old build data preparation objects for repeat runs
21:46:10 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:46:10 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:46:10 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:46:10 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:46:10 SQL> 
21:46:10 SQL> 
21:46:10 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:46:10 SQL> --
21:46:10 SQL> -- DROP	TABLE svmc_settings ;
21:46:10 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:46:10 SQL> -- DELETE svmc_settings;
21:46:10 SQL> 
21:46:10 SQL> -- The default classification algorithm is Naive Bayes. So override
21:46:10 SQL> -- this choice to SVM using a settings table.
21:46:10 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:46:10 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:46:10 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:46:10 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:46:10 SQL> -- models.
21:46:10 SQL> --
21:46:10 SQL> 
21:46:10 SQL> -- Do this once and then comment it out.
21:46:10 SQL> -- That makes script go faster.
21:46:10 SQL> -- BEGIN
21:46:10 SQL> -- -- Populate settings table
21:46:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:46:10 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:46:10 SQL> --
21:46:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:46:10 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:46:10 SQL> --
21:46:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:46:10 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:46:10 SQL> --   COMMIT;
21:46:10 SQL> -- END;
21:46:10 SQL> -- /
21:46:10 SQL> 
21:46:10 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
21:46:10 SQL> 
21:46:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:46:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:46:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:46:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:46:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:46:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:46:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:46:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:46:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:46:10 SQL> 
21:46:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:46:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:46:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:46:10 SQL> 
21:46:10 SQL> --------------------------------
21:46:10 SQL> -- PREPARE BUILD (TRAINING) DATA
21:46:10 SQL> --
21:46:10 SQL> 
21:46:10 SQL> -- 1. Missing Value treatment for all Predictors and
21:46:10 SQL> -- 2. Outlier Treatment and
21:46:10 SQL> -- 3. Normalization are performed below.
21:46:10 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:46:10 SQL> --    normalized here.
21:46:10 SQL> 
21:46:10 SQL> BEGIN
21:46:10   2  	-- Perform missing value treatment for all predictors
21:46:10   3  	-- create miss tables
21:46:10   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:46:10   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:46:10   6  
21:46:10   7  	-- populate miss tables
21:46:10   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:46:10   9  	  miss_table_name => 'svmc_miss_num',
21:46:10  10  	  data_table_name => '&bldtable',
21:46:10  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:46:10  12  
21:46:10  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:46:10  14  	  miss_table_name => 'svmc_miss_cat',
21:46:10  15  	  data_table_name => '&bldtable',
21:46:10  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:46:10  17  
21:46:10  18  	-- xform input data to replace missing values
21:46:10  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:46:10  20  	  miss_table_name => 'svmc_miss_num',
21:46:10  21  	  data_table_name => '&bldtable',
21:46:10  22  	  xform_view_name => 'xformed_build_miss_num');
21:46:10  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:46:10  24  	  miss_table_name => 'svmc_miss_cat',
21:46:10  25  	  data_table_name => '&bldtable',
21:46:10  26  	  xform_view_name => 'xformed_build_miss_cat');
21:46:10  27  
21:46:10  28  	-- Perform outlier treatment.
21:46:10  29  	-- create clip table
21:46:10  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:46:10  31  
21:46:10  32  	-- populate clip table
21:46:10  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:46:10  34  	  clip_table_name => 'svmc_clip',
21:46:10  35  	  data_table_name => '&bldtable',
21:46:10  36  	  tail_frac	  => 0.025,
21:46:10  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:46:10  38  
21:46:10  39  	-- xform input data to winsorized data
21:46:10  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:46:10  41  	  clip_table_name => 'svmc_clip',
21:46:10  42  	  data_table_name => '&bldtable',
21:46:10  43  	  xform_view_name => 'svmc_winsor');
21:46:10  44  
21:46:10  45  	-- create normalization table
21:46:10  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:46:10  47  
21:46:10  48  	-- populate normalization table based on winsorized data
21:46:10  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:46:10  50  	  norm_table_name => 'svmc_norm',
21:46:10  51  	  data_table_name => 'svmc_winsor',
21:46:10  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:46:10  53  
21:46:10  54  	-- normalize the original data
21:46:10  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:46:10  56  	  norm_table_name => 'svmc_norm',
21:46:10  57  	  data_table_name => '&bldtable',
21:46:10  58  	  xform_view_name => 'svmc_build_prep');
21:46:10  59  END;
21:46:10  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.98
21:46:28 SQL> 
21:46:28 SQL> ---------------------
21:46:28 SQL> -- CREATE A NEW MODEL
21:46:28 SQL> --
21:46:28 SQL> -- Cleanup old model with the same name for repeat runs
21:46:28 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:46:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:46:28   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
21:46:29 SQL> 
21:46:29 SQL> -- Build a new SVM Model
21:46:29 SQL> BEGIN
21:46:29   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:46:29   3  	  model_name	      => '&model_name',
21:46:29   4  	  mining_function     => dbms_data_mining.classification,
21:46:29   5  	  data_table_name     => 'svmc_build_prep',
21:46:29   6  	  case_id_column_name => '&case_id',
21:46:29   7  	  target_column_name  => '&target',
21:46:29   8  	  settings_table_name => 'svmc_settings');
21:46:29   9  END;
21:46:29  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.77
21:46:55 SQL> 
21:46:55 SQL> -----------------------------------------------------------------------
21:46:55 SQL> --			       APPLY/score THE MODEL
21:46:55 SQL> -----------------------------------------------------------------------
21:46:55 SQL> 
21:46:55 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:46:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:46:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:46:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:46:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:46:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:46:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:46:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:46:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:46:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:46:55 SQL> -----------------------
21:46:55 SQL> -- PREPARE SCORING DATA
21:46:55 SQL> --
21:46:55 SQL> -- If the data for model creation has been prepared, then the data
21:46:55 SQL> -- to be scored using the model must be prepared in the same manner
21:46:55 SQL> -- in order to obtain meaningful results.
21:46:55 SQL> --
21:46:55 SQL> -- 1. Missing Value treatment for all Predictors and
21:46:55 SQL> -- 2. Normalization
21:46:55 SQL> -- No outlier treatment will be performed during test and apply. The
21:46:55 SQL> -- normalization step is sufficient, since the normalization parameters
21:46:55 SQL> -- already capture the effects of outlier treatment done with build data.
21:46:55 SQL> --
21:46:55 SQL> BEGIN
21:46:55   2  	-- Xform Test data to replace missing values
21:46:55   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:46:55   4  	  miss_table_name => 'svmc_miss_num',
21:46:55   5  	  data_table_name => '&scoretable',
21:46:55   6  	  xform_view_name => 'xformed_apply_miss_num');
21:46:55   7  
21:46:55   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:46:55   9  	  miss_table_name => 'svmc_miss_cat',
21:46:55  10  	  data_table_name => '&scoretable',
21:46:55  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:46:55  12  
21:46:55  13  	-- Normalize the data to be scored
21:46:55  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:46:55  15  	  norm_table_name => 'svmc_norm',
21:46:55  16  	  data_table_name => '&scoretable',
21:46:55  17  	  xform_view_name => 'svmc_apply_prep');
21:46:55  18  END;
21:46:55  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.15
21:46:57 SQL> 
21:46:57 SQL> -- Use same model_name used in score_gattn.sql
21:46:57 SQL> DEFINE model_name = 'forex14'
21:46:57 SQL> 
21:46:57 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:46:57 SQL> 
21:46:57 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:46:57   2  SELECT
21:46:57   3  prdate
21:46:57   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:46:57   5  ,sysdate
21:46:57   6  ,SUBSTR(prdate,1,3)pair
21:46:57   7  ,SUBSTR(prdate,4,19)ydate
21:46:57   8  FROM svmc_apply_prep
21:46:57   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:46:57 SQL> @chf_score1day_gattn.sql	2010-12-17 08:50:00
21:46:57 SQL> --
21:46:57 SQL> -- chf_score1day_gattn.sql
21:46:57 SQL> --
21:46:57 SQL> 
21:46:57 SQL> CREATE OR REPLACE VIEW sme AS
21:46:57   2  SELECT
21:46:57   3  'chf'||m.ydate prdate
21:46:57   4  ,NULL gattn
21:46:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:46:57   6  ,eur_g00
21:46:57   7  ,eur_g01
21:46:57   8  ,eur_g02
21:46:57   9  ,eur_g03
21:46:57  10  ,eur_g04
21:46:57  11  ,eur_g05
21:46:57  12  ,eur_g06
21:46:57  13  ,eur_g07
21:46:57  14  ,eur_g08
21:46:57  15  ,eur_g09
21:46:57  16  ,eur_g10
21:46:57  17  ,eur_g11
21:46:57  18  ,eur_g12
21:46:57  19  ,eur_g13
21:46:57  20  ,eur_g14
21:46:57  21  ,eur_g15
21:46:57  22  ,eur_g16
21:46:57  23  ,eur_g17
21:46:57  24  ,eur_g18
21:46:57  25  ,eur_g19
21:46:57  26  ,eur_g20
21:46:57  27  ,eur_g21
21:46:57  28  ,eur_g22
21:46:57  29  ,eur_g23
21:46:57  30  ,eur_g24
21:46:57  31  ,eur_g25
21:46:57  32  ,eur_g26
21:46:57  33  ,eur_g27
21:46:57  34  ,eur_g28
21:46:57  35  ,eur_g29
21:46:57  36  ,eur_g30
21:46:57  37  ,eur_g31
21:46:57  38  ,eur_g32
21:46:57  39  ,eur_g33
21:46:57  40  ,eur_g34
21:46:57  41  ,eur_g35
21:46:57  42  ,eur_g36
21:46:57  43  ,eur_g37
21:46:57  44  ,eur_g38
21:46:57  45  ,eur_g39
21:46:57  46  ,eur_g40
21:46:57  47  ,aud_g00
21:46:57  48  ,aud_g01
21:46:57  49  ,aud_g02
21:46:57  50  ,aud_g03
21:46:57  51  ,aud_g04
21:46:57  52  ,aud_g05
21:46:57  53  ,aud_g06
21:46:57  54  ,aud_g07
21:46:57  55  ,aud_g08
21:46:57  56  ,aud_g09
21:46:57  57  ,aud_g10
21:46:57  58  ,aud_g11
21:46:57  59  ,aud_g12
21:46:57  60  ,aud_g13
21:46:57  61  ,aud_g14
21:46:57  62  ,aud_g15
21:46:57  63  ,aud_g16
21:46:57  64  ,aud_g17
21:46:57  65  ,aud_g18
21:46:57  66  ,aud_g19
21:46:57  67  ,aud_g20
21:46:57  68  ,aud_g21
21:46:57  69  ,aud_g22
21:46:57  70  ,aud_g23
21:46:57  71  ,aud_g24
21:46:57  72  ,aud_g25
21:46:57  73  ,aud_g26
21:46:57  74  ,aud_g27
21:46:57  75  ,aud_g28
21:46:57  76  ,aud_g29
21:46:57  77  ,aud_g30
21:46:57  78  ,aud_g31
21:46:57  79  ,aud_g32
21:46:57  80  ,aud_g33
21:46:57  81  ,aud_g34
21:46:57  82  ,aud_g35
21:46:57  83  ,aud_g36
21:46:57  84  ,aud_g37
21:46:57  85  ,aud_g38
21:46:57  86  ,aud_g39
21:46:57  87  ,aud_g40
21:46:57  88  ,gbp_g00
21:46:57  89  ,gbp_g01
21:46:57  90  ,gbp_g02
21:46:57  91  ,gbp_g03
21:46:57  92  ,gbp_g04
21:46:57  93  ,gbp_g05
21:46:57  94  ,gbp_g06
21:46:57  95  ,gbp_g07
21:46:57  96  ,gbp_g08
21:46:57  97  ,gbp_g09
21:46:57  98  ,gbp_g10
21:46:57  99  ,gbp_g11
21:46:57 100  ,gbp_g12
21:46:57 101  ,gbp_g13
21:46:57 102  ,gbp_g14
21:46:57 103  ,gbp_g15
21:46:57 104  ,gbp_g16
21:46:57 105  ,gbp_g17
21:46:57 106  ,gbp_g18
21:46:57 107  ,gbp_g19
21:46:57 108  ,gbp_g20
21:46:57 109  ,gbp_g21
21:46:57 110  ,gbp_g22
21:46:57 111  ,gbp_g23
21:46:57 112  ,gbp_g24
21:46:57 113  ,gbp_g25
21:46:57 114  ,gbp_g26
21:46:57 115  ,gbp_g27
21:46:57 116  ,gbp_g28
21:46:57 117  ,gbp_g29
21:46:57 118  ,gbp_g30
21:46:57 119  ,gbp_g31
21:46:57 120  ,gbp_g32
21:46:57 121  ,gbp_g33
21:46:57 122  ,gbp_g34
21:46:57 123  ,gbp_g35
21:46:57 124  ,gbp_g36
21:46:57 125  ,gbp_g37
21:46:57 126  ,gbp_g38
21:46:57 127  ,gbp_g39
21:46:57 128  ,gbp_g40
21:46:57 129  ,jpy_g00
21:46:57 130  ,jpy_g01
21:46:57 131  ,jpy_g02
21:46:57 132  ,jpy_g03
21:46:57 133  ,jpy_g04
21:46:57 134  ,jpy_g05
21:46:57 135  ,jpy_g06
21:46:57 136  ,jpy_g07
21:46:57 137  ,jpy_g08
21:46:57 138  ,jpy_g09
21:46:57 139  ,jpy_g10
21:46:57 140  ,jpy_g11
21:46:57 141  ,jpy_g12
21:46:57 142  ,jpy_g13
21:46:57 143  ,jpy_g14
21:46:57 144  ,jpy_g15
21:46:57 145  ,jpy_g16
21:46:57 146  ,jpy_g17
21:46:57 147  ,jpy_g18
21:46:57 148  ,jpy_g19
21:46:57 149  ,jpy_g20
21:46:57 150  ,jpy_g21
21:46:57 151  ,jpy_g22
21:46:57 152  ,jpy_g23
21:46:57 153  ,jpy_g24
21:46:57 154  ,jpy_g25
21:46:57 155  ,jpy_g26
21:46:57 156  ,jpy_g27
21:46:57 157  ,jpy_g28
21:46:57 158  ,jpy_g29
21:46:57 159  ,jpy_g30
21:46:57 160  ,jpy_g31
21:46:57 161  ,jpy_g32
21:46:57 162  ,jpy_g33
21:46:57 163  ,jpy_g34
21:46:57 164  ,jpy_g35
21:46:57 165  ,jpy_g36
21:46:57 166  ,jpy_g37
21:46:57 167  ,jpy_g38
21:46:57 168  ,jpy_g39
21:46:57 169  ,jpy_g40
21:46:57 170  ,cad_g00
21:46:57 171  ,cad_g01
21:46:57 172  ,cad_g02
21:46:57 173  ,cad_g03
21:46:57 174  ,cad_g04
21:46:57 175  ,cad_g05
21:46:57 176  ,cad_g06
21:46:57 177  ,cad_g07
21:46:57 178  ,cad_g08
21:46:57 179  ,cad_g09
21:46:57 180  ,cad_g10
21:46:57 181  ,cad_g11
21:46:57 182  ,cad_g12
21:46:57 183  ,cad_g13
21:46:57 184  ,cad_g14
21:46:57 185  ,cad_g15
21:46:57 186  ,cad_g16
21:46:57 187  ,cad_g17
21:46:57 188  ,cad_g18
21:46:57 189  ,cad_g19
21:46:57 190  ,cad_g20
21:46:57 191  ,cad_g21
21:46:57 192  ,cad_g22
21:46:57 193  ,cad_g23
21:46:57 194  ,cad_g24
21:46:57 195  ,cad_g25
21:46:57 196  ,cad_g26
21:46:57 197  ,cad_g27
21:46:57 198  ,cad_g28
21:46:57 199  ,cad_g29
21:46:57 200  ,cad_g30
21:46:57 201  ,cad_g31
21:46:57 202  ,cad_g32
21:46:57 203  ,cad_g33
21:46:57 204  ,cad_g34
21:46:57 205  ,cad_g35
21:46:57 206  ,cad_g36
21:46:57 207  ,cad_g37
21:46:57 208  ,cad_g38
21:46:57 209  ,cad_g39
21:46:57 210  ,cad_g40
21:46:57 211  ,chf_g00
21:46:57 212  ,chf_g01
21:46:57 213  ,chf_g02
21:46:57 214  ,chf_g03
21:46:57 215  ,chf_g04
21:46:57 216  ,chf_g05
21:46:57 217  ,chf_g06
21:46:57 218  ,chf_g07
21:46:57 219  ,chf_g08
21:46:57 220  ,chf_g09
21:46:57 221  ,chf_g10
21:46:57 222  ,chf_g11
21:46:57 223  ,chf_g12
21:46:57 224  ,chf_g13
21:46:57 225  ,chf_g14
21:46:57 226  ,chf_g15
21:46:57 227  ,chf_g16
21:46:57 228  ,chf_g17
21:46:57 229  ,chf_g18
21:46:57 230  ,chf_g19
21:46:57 231  ,chf_g20
21:46:57 232  ,chf_g21
21:46:57 233  ,chf_g22
21:46:57 234  ,chf_g23
21:46:57 235  ,chf_g24
21:46:57 236  ,chf_g25
21:46:57 237  ,chf_g26
21:46:57 238  ,chf_g27
21:46:57 239  ,chf_g28
21:46:57 240  ,chf_g29
21:46:57 241  ,chf_g30
21:46:57 242  ,chf_g31
21:46:57 243  ,chf_g32
21:46:57 244  ,chf_g33
21:46:57 245  ,chf_g34
21:46:57 246  ,chf_g35
21:46:57 247  ,chf_g36
21:46:57 248  ,chf_g37
21:46:57 249  ,chf_g38
21:46:57 250  ,chf_g39
21:46:57 251  ,chf_g40
21:46:57 252  FROM chf_ms14 m
21:46:57 253  WHERE m.ydate = '&1'||' '||'&2'
21:46:57 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'08:50:00'

View created.

Elapsed: 00:00:00.12
21:46:57 SQL> 
21:46:57 SQL> -- rpt
21:46:57 SQL> -- We should see just 1 row:
21:46:57 SQL> 
21:46:57 SQL> SELECT COUNT(prdate) FROM sme
21:46:57   2  
21:46:57 SQL> -- Build the model:
21:46:57 SQL> CREATE OR REPLACE VIEW bme AS
21:46:57   2  SELECT
21:46:57   3  'chf'||m.ydate prdate
21:46:57   4  ,gattn
21:46:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:46:57   6  ,eur_g00
21:46:57   7  ,eur_g01
21:46:57   8  ,eur_g02
21:46:57   9  ,eur_g03
21:46:57  10  ,eur_g04
21:46:57  11  ,eur_g05
21:46:57  12  ,eur_g06
21:46:57  13  ,eur_g07
21:46:57  14  ,eur_g08
21:46:57  15  ,eur_g09
21:46:57  16  ,eur_g10
21:46:57  17  ,eur_g11
21:46:57  18  ,eur_g12
21:46:57  19  ,eur_g13
21:46:57  20  ,eur_g14
21:46:57  21  ,eur_g15
21:46:57  22  ,eur_g16
21:46:57  23  ,eur_g17
21:46:57  24  ,eur_g18
21:46:57  25  ,eur_g19
21:46:57  26  ,eur_g20
21:46:57  27  ,eur_g21
21:46:57  28  ,eur_g22
21:46:57  29  ,eur_g23
21:46:57  30  ,eur_g24
21:46:57  31  ,eur_g25
21:46:57  32  ,eur_g26
21:46:57  33  ,eur_g27
21:46:57  34  ,eur_g28
21:46:57  35  ,eur_g29
21:46:57  36  ,eur_g30
21:46:57  37  ,eur_g31
21:46:57  38  ,eur_g32
21:46:57  39  ,eur_g33
21:46:57  40  ,eur_g34
21:46:57  41  ,eur_g35
21:46:57  42  ,eur_g36
21:46:57  43  ,eur_g37
21:46:57  44  ,eur_g38
21:46:57  45  ,eur_g39
21:46:57  46  ,eur_g40
21:46:57  47  ,aud_g00
21:46:57  48  ,aud_g01
21:46:57  49  ,aud_g02
21:46:57  50  ,aud_g03
21:46:57  51  ,aud_g04
21:46:57  52  ,aud_g05
21:46:57  53  ,aud_g06
21:46:57  54  ,aud_g07
21:46:57  55  ,aud_g08
21:46:57  56  ,aud_g09
21:46:57  57  ,aud_g10
21:46:57  58  ,aud_g11
21:46:57  59  ,aud_g12
21:46:57  60  ,aud_g13
21:46:57  61  ,aud_g14
21:46:57  62  ,aud_g15
21:46:57  63  ,aud_g16
21:46:57  64  ,aud_g17
21:46:57  65  ,aud_g18
21:46:57  66  ,aud_g19
21:46:57  67  ,aud_g20
21:46:57  68  ,aud_g21
21:46:57  69  ,aud_g22
21:46:57  70  ,aud_g23
21:46:57  71  ,aud_g24
21:46:57  72  ,aud_g25
21:46:57  73  ,aud_g26
21:46:57  74  ,aud_g27
21:46:57  75  ,aud_g28
21:46:57  76  ,aud_g29
21:46:57  77  ,aud_g30
21:46:57  78  ,aud_g31
21:46:57  79  ,aud_g32
21:46:57  80  ,aud_g33
21:46:57  81  ,aud_g34
21:46:57  82  ,aud_g35
21:46:57  83  ,aud_g36
21:46:57  84  ,aud_g37
21:46:57  85  ,aud_g38
21:46:57  86  ,aud_g39
21:46:57  87  ,aud_g40
21:46:57  88  ,gbp_g00
21:46:57  89  ,gbp_g01
21:46:57  90  ,gbp_g02
21:46:57  91  ,gbp_g03
21:46:57  92  ,gbp_g04
21:46:57  93  ,gbp_g05
21:46:57  94  ,gbp_g06
21:46:57  95  ,gbp_g07
21:46:57  96  ,gbp_g08
21:46:57  97  ,gbp_g09
21:46:57  98  ,gbp_g10
21:46:57  99  ,gbp_g11
21:46:57 100  ,gbp_g12
21:46:57 101  ,gbp_g13
21:46:57 102  ,gbp_g14
21:46:57 103  ,gbp_g15
21:46:57 104  ,gbp_g16
21:46:57 105  ,gbp_g17
21:46:57 106  ,gbp_g18
21:46:57 107  ,gbp_g19
21:46:57 108  ,gbp_g20
21:46:57 109  ,gbp_g21
21:46:57 110  ,gbp_g22
21:46:57 111  ,gbp_g23
21:46:57 112  ,gbp_g24
21:46:57 113  ,gbp_g25
21:46:57 114  ,gbp_g26
21:46:57 115  ,gbp_g27
21:46:57 116  ,gbp_g28
21:46:57 117  ,gbp_g29
21:46:57 118  ,gbp_g30
21:46:57 119  ,gbp_g31
21:46:57 120  ,gbp_g32
21:46:57 121  ,gbp_g33
21:46:57 122  ,gbp_g34
21:46:57 123  ,gbp_g35
21:46:57 124  ,gbp_g36
21:46:57 125  ,gbp_g37
21:46:57 126  ,gbp_g38
21:46:57 127  ,gbp_g39
21:46:57 128  ,gbp_g40
21:46:57 129  ,jpy_g00
21:46:57 130  ,jpy_g01
21:46:57 131  ,jpy_g02
21:46:57 132  ,jpy_g03
21:46:57 133  ,jpy_g04
21:46:57 134  ,jpy_g05
21:46:57 135  ,jpy_g06
21:46:57 136  ,jpy_g07
21:46:57 137  ,jpy_g08
21:46:57 138  ,jpy_g09
21:46:57 139  ,jpy_g10
21:46:57 140  ,jpy_g11
21:46:57 141  ,jpy_g12
21:46:57 142  ,jpy_g13
21:46:57 143  ,jpy_g14
21:46:57 144  ,jpy_g15
21:46:57 145  ,jpy_g16
21:46:57 146  ,jpy_g17
21:46:57 147  ,jpy_g18
21:46:57 148  ,jpy_g19
21:46:57 149  ,jpy_g20
21:46:57 150  ,jpy_g21
21:46:57 151  ,jpy_g22
21:46:57 152  ,jpy_g23
21:46:57 153  ,jpy_g24
21:46:57 154  ,jpy_g25
21:46:57 155  ,jpy_g26
21:46:57 156  ,jpy_g27
21:46:57 157  ,jpy_g28
21:46:57 158  ,jpy_g29
21:46:57 159  ,jpy_g30
21:46:57 160  ,jpy_g31
21:46:57 161  ,jpy_g32
21:46:57 162  ,jpy_g33
21:46:57 163  ,jpy_g34
21:46:57 164  ,jpy_g35
21:46:57 165  ,jpy_g36
21:46:57 166  ,jpy_g37
21:46:57 167  ,jpy_g38
21:46:57 168  ,jpy_g39
21:46:57 169  ,jpy_g40
21:46:57 170  ,cad_g00
21:46:57 171  ,cad_g01
21:46:57 172  ,cad_g02
21:46:57 173  ,cad_g03
21:46:57 174  ,cad_g04
21:46:57 175  ,cad_g05
21:46:57 176  ,cad_g06
21:46:57 177  ,cad_g07
21:46:57 178  ,cad_g08
21:46:57 179  ,cad_g09
21:46:57 180  ,cad_g10
21:46:57 181  ,cad_g11
21:46:57 182  ,cad_g12
21:46:57 183  ,cad_g13
21:46:57 184  ,cad_g14
21:46:57 185  ,cad_g15
21:46:57 186  ,cad_g16
21:46:57 187  ,cad_g17
21:46:57 188  ,cad_g18
21:46:57 189  ,cad_g19
21:46:57 190  ,cad_g20
21:46:57 191  ,cad_g21
21:46:57 192  ,cad_g22
21:46:57 193  ,cad_g23
21:46:57 194  ,cad_g24
21:46:57 195  ,cad_g25
21:46:57 196  ,cad_g26
21:46:57 197  ,cad_g27
21:46:57 198  ,cad_g28
21:46:57 199  ,cad_g29
21:46:57 200  ,cad_g30
21:46:57 201  ,cad_g31
21:46:57 202  ,cad_g32
21:46:57 203  ,cad_g33
21:46:57 204  ,cad_g34
21:46:57 205  ,cad_g35
21:46:57 206  ,cad_g36
21:46:57 207  ,cad_g37
21:46:57 208  ,cad_g38
21:46:57 209  ,cad_g39
21:46:57 210  ,cad_g40
21:46:57 211  ,chf_g00
21:46:57 212  ,chf_g01
21:46:57 213  ,chf_g02
21:46:57 214  ,chf_g03
21:46:57 215  ,chf_g04
21:46:57 216  ,chf_g05
21:46:57 217  ,chf_g06
21:46:57 218  ,chf_g07
21:46:57 219  ,chf_g08
21:46:57 220  ,chf_g09
21:46:57 221  ,chf_g10
21:46:57 222  ,chf_g11
21:46:57 223  ,chf_g12
21:46:57 224  ,chf_g13
21:46:57 225  ,chf_g14
21:46:57 226  ,chf_g15
21:46:57 227  ,chf_g16
21:46:57 228  ,chf_g17
21:46:57 229  ,chf_g18
21:46:57 230  ,chf_g19
21:46:57 231  ,chf_g20
21:46:57 232  ,chf_g21
21:46:57 233  ,chf_g22
21:46:57 234  ,chf_g23
21:46:57 235  ,chf_g24
21:46:57 236  ,chf_g25
21:46:57 237  ,chf_g26
21:46:57 238  ,chf_g27
21:46:57 239  ,chf_g28
21:46:57 240  ,chf_g29
21:46:57 241  ,chf_g30
21:46:57 242  ,chf_g31
21:46:57 243  ,chf_g32
21:46:57 244  ,chf_g33
21:46:57 245  ,chf_g34
21:46:57 246  ,chf_g35
21:46:57 247  ,chf_g36
21:46:57 248  ,chf_g37
21:46:57 249  ,chf_g38
21:46:57 250  ,chf_g39
21:46:57 251  ,chf_g40
21:46:57 252  FROM chf_ms14 m
21:46:57 253  WHERE gattn IN('nup','up')
21:46:57 254  AND 1+m.ydate < '&1'||' '||'&2'
21:46:57 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'08:50:00'

View created.

Elapsed: 00:00:00.13
21:46:57 SQL> 
21:46:57 SQL> -- rpt
21:46:57 SQL> 
21:46:57 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:46:57   2  
21:46:57 SQL> SELECT MAX(prdate) FROM bme
21:46:57   2  
21:46:57 SQL> -- Now build model from bme and score sme
21:46:57 SQL> @score1gattn.sql
21:46:57 SQL> -- score1gattn.sql
21:46:57 SQL> 
21:46:57 SQL> -- Does the 1st SVM score
21:46:57 SQL> 
21:46:57 SQL> -- Fill up svmc_apply_prep
21:46:57 SQL> @score_gattn.sql
21:46:57 SQL> --
21:46:57 SQL> -- score_gattn.sql
21:46:57 SQL> --
21:46:57 SQL> 
21:46:57 SQL> -- usage: score_gattn.sql
21:46:57 SQL> 
21:46:57 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:46:57 SQL> 
21:46:57 SQL> DEFINE target	= 'gattn'
21:46:57 SQL> DEFINE model_name = 'forex14'
21:46:57 SQL> DEFINE bldtable	= 'bme'
21:46:57 SQL> DEFINE scoretable = 'sme'
21:46:57 SQL> DEFINE case_id	= 'prdate'
21:46:57 SQL> 
21:46:57 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:46:57 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:46:57 SQL> 
21:46:57 SQL> -- Builds an SVM model using pl/sql.
21:46:57 SQL> 
21:46:57 SQL> -----------------------------------------------------------------------
21:46:57 SQL> --			    BUILD THE MODEL
21:46:57 SQL> -----------------------------------------------------------------------
21:46:57 SQL> 
21:46:57 SQL> -- Cleanup old build data preparation objects for repeat runs
21:46:57 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:46:57 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:46:57 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:46:57 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:46:57 SQL> 
21:46:57 SQL> 
21:46:57 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:46:57 SQL> --
21:46:57 SQL> -- DROP	TABLE svmc_settings ;
21:46:57 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:46:57 SQL> -- DELETE svmc_settings;
21:46:57 SQL> 
21:46:57 SQL> -- The default classification algorithm is Naive Bayes. So override
21:46:57 SQL> -- this choice to SVM using a settings table.
21:46:57 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:46:57 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:46:57 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:46:57 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:46:57 SQL> -- models.
21:46:57 SQL> --
21:46:57 SQL> 
21:46:57 SQL> -- Do this once and then comment it out.
21:46:57 SQL> -- That makes script go faster.
21:46:57 SQL> -- BEGIN
21:46:57 SQL> -- -- Populate settings table
21:46:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:46:57 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:46:57 SQL> --
21:46:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:46:57 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:46:57 SQL> --
21:46:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:46:57 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:46:57 SQL> --   COMMIT;
21:46:57 SQL> -- END;
21:46:57 SQL> -- /
21:46:57 SQL> 
21:46:57 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
21:46:57 SQL> 
21:46:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:46:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:46:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:46:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:46:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:46:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:46:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:46:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:46:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:46:57 SQL> 
21:46:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:46:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:46:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:46:57 SQL> 
21:46:57 SQL> --------------------------------
21:46:57 SQL> -- PREPARE BUILD (TRAINING) DATA
21:46:57 SQL> --
21:46:57 SQL> 
21:46:57 SQL> -- 1. Missing Value treatment for all Predictors and
21:46:57 SQL> -- 2. Outlier Treatment and
21:46:57 SQL> -- 3. Normalization are performed below.
21:46:57 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:46:57 SQL> --    normalized here.
21:46:57 SQL> 
21:46:57 SQL> BEGIN
21:46:57   2  	-- Perform missing value treatment for all predictors
21:46:57   3  	-- create miss tables
21:46:57   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:46:57   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:46:57   6  
21:46:57   7  	-- populate miss tables
21:46:57   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:46:57   9  	  miss_table_name => 'svmc_miss_num',
21:46:57  10  	  data_table_name => '&bldtable',
21:46:57  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:46:57  12  
21:46:57  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:46:57  14  	  miss_table_name => 'svmc_miss_cat',
21:46:57  15  	  data_table_name => '&bldtable',
21:46:57  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:46:57  17  
21:46:57  18  	-- xform input data to replace missing values
21:46:57  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:46:57  20  	  miss_table_name => 'svmc_miss_num',
21:46:57  21  	  data_table_name => '&bldtable',
21:46:57  22  	  xform_view_name => 'xformed_build_miss_num');
21:46:57  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:46:57  24  	  miss_table_name => 'svmc_miss_cat',
21:46:57  25  	  data_table_name => '&bldtable',
21:46:57  26  	  xform_view_name => 'xformed_build_miss_cat');
21:46:57  27  
21:46:57  28  	-- Perform outlier treatment.
21:46:57  29  	-- create clip table
21:46:57  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:46:57  31  
21:46:57  32  	-- populate clip table
21:46:57  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:46:57  34  	  clip_table_name => 'svmc_clip',
21:46:57  35  	  data_table_name => '&bldtable',
21:46:57  36  	  tail_frac	  => 0.025,
21:46:57  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:46:57  38  
21:46:57  39  	-- xform input data to winsorized data
21:46:57  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:46:57  41  	  clip_table_name => 'svmc_clip',
21:46:57  42  	  data_table_name => '&bldtable',
21:46:57  43  	  xform_view_name => 'svmc_winsor');
21:46:57  44  
21:46:57  45  	-- create normalization table
21:46:57  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:46:57  47  
21:46:57  48  	-- populate normalization table based on winsorized data
21:46:57  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:46:57  50  	  norm_table_name => 'svmc_norm',
21:46:57  51  	  data_table_name => 'svmc_winsor',
21:46:57  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:46:57  53  
21:46:57  54  	-- normalize the original data
21:46:57  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:46:57  56  	  norm_table_name => 'svmc_norm',
21:46:57  57  	  data_table_name => '&bldtable',
21:46:57  58  	  xform_view_name => 'svmc_build_prep');
21:46:57  59  END;
21:46:57  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.92
21:47:15 SQL> 
21:47:15 SQL> ---------------------
21:47:15 SQL> -- CREATE A NEW MODEL
21:47:15 SQL> --
21:47:15 SQL> -- Cleanup old model with the same name for repeat runs
21:47:15 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:47:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:47:15   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.94
21:47:16 SQL> 
21:47:16 SQL> -- Build a new SVM Model
21:47:16 SQL> BEGIN
21:47:16   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:47:16   3  	  model_name	      => '&model_name',
21:47:16   4  	  mining_function     => dbms_data_mining.classification,
21:47:16   5  	  data_table_name     => 'svmc_build_prep',
21:47:16   6  	  case_id_column_name => '&case_id',
21:47:16   7  	  target_column_name  => '&target',
21:47:16   8  	  settings_table_name => 'svmc_settings');
21:47:16   9  END;
21:47:16  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.71
21:47:42 SQL> 
21:47:42 SQL> -----------------------------------------------------------------------
21:47:42 SQL> --			       APPLY/score THE MODEL
21:47:42 SQL> -----------------------------------------------------------------------
21:47:42 SQL> 
21:47:42 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:47:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:47:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:47:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:47:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:47:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:47:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:47:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:47:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:47:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:47:42 SQL> -----------------------
21:47:42 SQL> -- PREPARE SCORING DATA
21:47:42 SQL> --
21:47:42 SQL> -- If the data for model creation has been prepared, then the data
21:47:42 SQL> -- to be scored using the model must be prepared in the same manner
21:47:42 SQL> -- in order to obtain meaningful results.
21:47:42 SQL> --
21:47:42 SQL> -- 1. Missing Value treatment for all Predictors and
21:47:42 SQL> -- 2. Normalization
21:47:42 SQL> -- No outlier treatment will be performed during test and apply. The
21:47:42 SQL> -- normalization step is sufficient, since the normalization parameters
21:47:42 SQL> -- already capture the effects of outlier treatment done with build data.
21:47:42 SQL> --
21:47:42 SQL> BEGIN
21:47:42   2  	-- Xform Test data to replace missing values
21:47:42   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:47:42   4  	  miss_table_name => 'svmc_miss_num',
21:47:42   5  	  data_table_name => '&scoretable',
21:47:42   6  	  xform_view_name => 'xformed_apply_miss_num');
21:47:42   7  
21:47:42   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:47:42   9  	  miss_table_name => 'svmc_miss_cat',
21:47:42  10  	  data_table_name => '&scoretable',
21:47:42  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:47:42  12  
21:47:42  13  	-- Normalize the data to be scored
21:47:42  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:47:42  15  	  norm_table_name => 'svmc_norm',
21:47:42  16  	  data_table_name => '&scoretable',
21:47:42  17  	  xform_view_name => 'svmc_apply_prep');
21:47:42  18  END;
21:47:42  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
21:47:43 SQL> 
21:47:43 SQL> -- Use same model_name used in score_gattn.sql
21:47:43 SQL> DEFINE model_name = 'forex14'
21:47:43 SQL> 
21:47:43 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:47:43 SQL> 
21:47:43 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:47:43   2  SELECT
21:47:43   3  prdate
21:47:43   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:47:43   5  ,sysdate
21:47:43   6  ,SUBSTR(prdate,1,3)pair
21:47:43   7  ,SUBSTR(prdate,4,19)ydate
21:47:43   8  FROM svmc_apply_prep
21:47:43   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:47:43 SQL> @chf_score1day_gattn.sql	2010-12-17 08:40:00
21:47:43 SQL> --
21:47:43 SQL> -- chf_score1day_gattn.sql
21:47:43 SQL> --
21:47:43 SQL> 
21:47:43 SQL> CREATE OR REPLACE VIEW sme AS
21:47:43   2  SELECT
21:47:43   3  'chf'||m.ydate prdate
21:47:43   4  ,NULL gattn
21:47:43   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:47:43   6  ,eur_g00
21:47:43   7  ,eur_g01
21:47:43   8  ,eur_g02
21:47:43   9  ,eur_g03
21:47:43  10  ,eur_g04
21:47:43  11  ,eur_g05
21:47:43  12  ,eur_g06
21:47:43  13  ,eur_g07
21:47:43  14  ,eur_g08
21:47:43  15  ,eur_g09
21:47:43  16  ,eur_g10
21:47:43  17  ,eur_g11
21:47:43  18  ,eur_g12
21:47:43  19  ,eur_g13
21:47:43  20  ,eur_g14
21:47:43  21  ,eur_g15
21:47:43  22  ,eur_g16
21:47:43  23  ,eur_g17
21:47:43  24  ,eur_g18
21:47:43  25  ,eur_g19
21:47:43  26  ,eur_g20
21:47:43  27  ,eur_g21
21:47:43  28  ,eur_g22
21:47:43  29  ,eur_g23
21:47:43  30  ,eur_g24
21:47:43  31  ,eur_g25
21:47:43  32  ,eur_g26
21:47:43  33  ,eur_g27
21:47:43  34  ,eur_g28
21:47:43  35  ,eur_g29
21:47:43  36  ,eur_g30
21:47:43  37  ,eur_g31
21:47:43  38  ,eur_g32
21:47:43  39  ,eur_g33
21:47:43  40  ,eur_g34
21:47:43  41  ,eur_g35
21:47:43  42  ,eur_g36
21:47:43  43  ,eur_g37
21:47:43  44  ,eur_g38
21:47:43  45  ,eur_g39
21:47:43  46  ,eur_g40
21:47:43  47  ,aud_g00
21:47:43  48  ,aud_g01
21:47:43  49  ,aud_g02
21:47:43  50  ,aud_g03
21:47:43  51  ,aud_g04
21:47:43  52  ,aud_g05
21:47:43  53  ,aud_g06
21:47:43  54  ,aud_g07
21:47:43  55  ,aud_g08
21:47:43  56  ,aud_g09
21:47:43  57  ,aud_g10
21:47:43  58  ,aud_g11
21:47:43  59  ,aud_g12
21:47:43  60  ,aud_g13
21:47:43  61  ,aud_g14
21:47:43  62  ,aud_g15
21:47:43  63  ,aud_g16
21:47:43  64  ,aud_g17
21:47:43  65  ,aud_g18
21:47:43  66  ,aud_g19
21:47:43  67  ,aud_g20
21:47:43  68  ,aud_g21
21:47:43  69  ,aud_g22
21:47:43  70  ,aud_g23
21:47:43  71  ,aud_g24
21:47:43  72  ,aud_g25
21:47:43  73  ,aud_g26
21:47:43  74  ,aud_g27
21:47:43  75  ,aud_g28
21:47:43  76  ,aud_g29
21:47:43  77  ,aud_g30
21:47:43  78  ,aud_g31
21:47:43  79  ,aud_g32
21:47:43  80  ,aud_g33
21:47:43  81  ,aud_g34
21:47:43  82  ,aud_g35
21:47:43  83  ,aud_g36
21:47:43  84  ,aud_g37
21:47:43  85  ,aud_g38
21:47:43  86  ,aud_g39
21:47:43  87  ,aud_g40
21:47:43  88  ,gbp_g00
21:47:43  89  ,gbp_g01
21:47:43  90  ,gbp_g02
21:47:43  91  ,gbp_g03
21:47:43  92  ,gbp_g04
21:47:43  93  ,gbp_g05
21:47:43  94  ,gbp_g06
21:47:43  95  ,gbp_g07
21:47:43  96  ,gbp_g08
21:47:43  97  ,gbp_g09
21:47:43  98  ,gbp_g10
21:47:43  99  ,gbp_g11
21:47:43 100  ,gbp_g12
21:47:43 101  ,gbp_g13
21:47:43 102  ,gbp_g14
21:47:43 103  ,gbp_g15
21:47:43 104  ,gbp_g16
21:47:43 105  ,gbp_g17
21:47:43 106  ,gbp_g18
21:47:43 107  ,gbp_g19
21:47:43 108  ,gbp_g20
21:47:43 109  ,gbp_g21
21:47:43 110  ,gbp_g22
21:47:43 111  ,gbp_g23
21:47:43 112  ,gbp_g24
21:47:43 113  ,gbp_g25
21:47:43 114  ,gbp_g26
21:47:43 115  ,gbp_g27
21:47:43 116  ,gbp_g28
21:47:43 117  ,gbp_g29
21:47:43 118  ,gbp_g30
21:47:43 119  ,gbp_g31
21:47:43 120  ,gbp_g32
21:47:43 121  ,gbp_g33
21:47:43 122  ,gbp_g34
21:47:43 123  ,gbp_g35
21:47:43 124  ,gbp_g36
21:47:43 125  ,gbp_g37
21:47:43 126  ,gbp_g38
21:47:43 127  ,gbp_g39
21:47:43 128  ,gbp_g40
21:47:43 129  ,jpy_g00
21:47:43 130  ,jpy_g01
21:47:43 131  ,jpy_g02
21:47:43 132  ,jpy_g03
21:47:43 133  ,jpy_g04
21:47:43 134  ,jpy_g05
21:47:43 135  ,jpy_g06
21:47:43 136  ,jpy_g07
21:47:43 137  ,jpy_g08
21:47:43 138  ,jpy_g09
21:47:43 139  ,jpy_g10
21:47:43 140  ,jpy_g11
21:47:43 141  ,jpy_g12
21:47:43 142  ,jpy_g13
21:47:43 143  ,jpy_g14
21:47:43 144  ,jpy_g15
21:47:43 145  ,jpy_g16
21:47:43 146  ,jpy_g17
21:47:43 147  ,jpy_g18
21:47:43 148  ,jpy_g19
21:47:43 149  ,jpy_g20
21:47:43 150  ,jpy_g21
21:47:43 151  ,jpy_g22
21:47:43 152  ,jpy_g23
21:47:43 153  ,jpy_g24
21:47:43 154  ,jpy_g25
21:47:43 155  ,jpy_g26
21:47:43 156  ,jpy_g27
21:47:43 157  ,jpy_g28
21:47:43 158  ,jpy_g29
21:47:43 159  ,jpy_g30
21:47:43 160  ,jpy_g31
21:47:43 161  ,jpy_g32
21:47:43 162  ,jpy_g33
21:47:43 163  ,jpy_g34
21:47:43 164  ,jpy_g35
21:47:43 165  ,jpy_g36
21:47:43 166  ,jpy_g37
21:47:43 167  ,jpy_g38
21:47:43 168  ,jpy_g39
21:47:43 169  ,jpy_g40
21:47:43 170  ,cad_g00
21:47:43 171  ,cad_g01
21:47:43 172  ,cad_g02
21:47:43 173  ,cad_g03
21:47:43 174  ,cad_g04
21:47:43 175  ,cad_g05
21:47:43 176  ,cad_g06
21:47:43 177  ,cad_g07
21:47:43 178  ,cad_g08
21:47:43 179  ,cad_g09
21:47:43 180  ,cad_g10
21:47:43 181  ,cad_g11
21:47:43 182  ,cad_g12
21:47:43 183  ,cad_g13
21:47:43 184  ,cad_g14
21:47:43 185  ,cad_g15
21:47:43 186  ,cad_g16
21:47:43 187  ,cad_g17
21:47:43 188  ,cad_g18
21:47:43 189  ,cad_g19
21:47:43 190  ,cad_g20
21:47:43 191  ,cad_g21
21:47:43 192  ,cad_g22
21:47:43 193  ,cad_g23
21:47:43 194  ,cad_g24
21:47:43 195  ,cad_g25
21:47:43 196  ,cad_g26
21:47:43 197  ,cad_g27
21:47:43 198  ,cad_g28
21:47:43 199  ,cad_g29
21:47:43 200  ,cad_g30
21:47:43 201  ,cad_g31
21:47:43 202  ,cad_g32
21:47:43 203  ,cad_g33
21:47:43 204  ,cad_g34
21:47:43 205  ,cad_g35
21:47:43 206  ,cad_g36
21:47:43 207  ,cad_g37
21:47:43 208  ,cad_g38
21:47:43 209  ,cad_g39
21:47:43 210  ,cad_g40
21:47:43 211  ,chf_g00
21:47:43 212  ,chf_g01
21:47:43 213  ,chf_g02
21:47:43 214  ,chf_g03
21:47:43 215  ,chf_g04
21:47:43 216  ,chf_g05
21:47:43 217  ,chf_g06
21:47:43 218  ,chf_g07
21:47:43 219  ,chf_g08
21:47:43 220  ,chf_g09
21:47:43 221  ,chf_g10
21:47:43 222  ,chf_g11
21:47:43 223  ,chf_g12
21:47:43 224  ,chf_g13
21:47:43 225  ,chf_g14
21:47:43 226  ,chf_g15
21:47:43 227  ,chf_g16
21:47:43 228  ,chf_g17
21:47:43 229  ,chf_g18
21:47:43 230  ,chf_g19
21:47:43 231  ,chf_g20
21:47:43 232  ,chf_g21
21:47:43 233  ,chf_g22
21:47:43 234  ,chf_g23
21:47:43 235  ,chf_g24
21:47:43 236  ,chf_g25
21:47:43 237  ,chf_g26
21:47:43 238  ,chf_g27
21:47:43 239  ,chf_g28
21:47:43 240  ,chf_g29
21:47:43 241  ,chf_g30
21:47:43 242  ,chf_g31
21:47:43 243  ,chf_g32
21:47:43 244  ,chf_g33
21:47:43 245  ,chf_g34
21:47:43 246  ,chf_g35
21:47:43 247  ,chf_g36
21:47:43 248  ,chf_g37
21:47:43 249  ,chf_g38
21:47:43 250  ,chf_g39
21:47:43 251  ,chf_g40
21:47:43 252  FROM chf_ms14 m
21:47:43 253  WHERE m.ydate = '&1'||' '||'&2'
21:47:43 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'08:40:00'

View created.

Elapsed: 00:00:00.13
21:47:44 SQL> 
21:47:44 SQL> -- rpt
21:47:44 SQL> -- We should see just 1 row:
21:47:44 SQL> 
21:47:44 SQL> SELECT COUNT(prdate) FROM sme
21:47:44   2  
21:47:44 SQL> -- Build the model:
21:47:44 SQL> CREATE OR REPLACE VIEW bme AS
21:47:44   2  SELECT
21:47:44   3  'chf'||m.ydate prdate
21:47:44   4  ,gattn
21:47:44   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:47:44   6  ,eur_g00
21:47:44   7  ,eur_g01
21:47:44   8  ,eur_g02
21:47:44   9  ,eur_g03
21:47:44  10  ,eur_g04
21:47:44  11  ,eur_g05
21:47:44  12  ,eur_g06
21:47:44  13  ,eur_g07
21:47:44  14  ,eur_g08
21:47:44  15  ,eur_g09
21:47:44  16  ,eur_g10
21:47:44  17  ,eur_g11
21:47:44  18  ,eur_g12
21:47:44  19  ,eur_g13
21:47:44  20  ,eur_g14
21:47:44  21  ,eur_g15
21:47:44  22  ,eur_g16
21:47:44  23  ,eur_g17
21:47:44  24  ,eur_g18
21:47:44  25  ,eur_g19
21:47:44  26  ,eur_g20
21:47:44  27  ,eur_g21
21:47:44  28  ,eur_g22
21:47:44  29  ,eur_g23
21:47:44  30  ,eur_g24
21:47:44  31  ,eur_g25
21:47:44  32  ,eur_g26
21:47:44  33  ,eur_g27
21:47:44  34  ,eur_g28
21:47:44  35  ,eur_g29
21:47:44  36  ,eur_g30
21:47:44  37  ,eur_g31
21:47:44  38  ,eur_g32
21:47:44  39  ,eur_g33
21:47:44  40  ,eur_g34
21:47:44  41  ,eur_g35
21:47:44  42  ,eur_g36
21:47:44  43  ,eur_g37
21:47:44  44  ,eur_g38
21:47:44  45  ,eur_g39
21:47:44  46  ,eur_g40
21:47:44  47  ,aud_g00
21:47:44  48  ,aud_g01
21:47:44  49  ,aud_g02
21:47:44  50  ,aud_g03
21:47:44  51  ,aud_g04
21:47:44  52  ,aud_g05
21:47:44  53  ,aud_g06
21:47:44  54  ,aud_g07
21:47:44  55  ,aud_g08
21:47:44  56  ,aud_g09
21:47:44  57  ,aud_g10
21:47:44  58  ,aud_g11
21:47:44  59  ,aud_g12
21:47:44  60  ,aud_g13
21:47:44  61  ,aud_g14
21:47:44  62  ,aud_g15
21:47:44  63  ,aud_g16
21:47:44  64  ,aud_g17
21:47:44  65  ,aud_g18
21:47:44  66  ,aud_g19
21:47:44  67  ,aud_g20
21:47:44  68  ,aud_g21
21:47:44  69  ,aud_g22
21:47:44  70  ,aud_g23
21:47:44  71  ,aud_g24
21:47:44  72  ,aud_g25
21:47:44  73  ,aud_g26
21:47:44  74  ,aud_g27
21:47:44  75  ,aud_g28
21:47:44  76  ,aud_g29
21:47:44  77  ,aud_g30
21:47:44  78  ,aud_g31
21:47:44  79  ,aud_g32
21:47:44  80  ,aud_g33
21:47:44  81  ,aud_g34
21:47:44  82  ,aud_g35
21:47:44  83  ,aud_g36
21:47:44  84  ,aud_g37
21:47:44  85  ,aud_g38
21:47:44  86  ,aud_g39
21:47:44  87  ,aud_g40
21:47:44  88  ,gbp_g00
21:47:44  89  ,gbp_g01
21:47:44  90  ,gbp_g02
21:47:44  91  ,gbp_g03
21:47:44  92  ,gbp_g04
21:47:44  93  ,gbp_g05
21:47:44  94  ,gbp_g06
21:47:44  95  ,gbp_g07
21:47:44  96  ,gbp_g08
21:47:44  97  ,gbp_g09
21:47:44  98  ,gbp_g10
21:47:44  99  ,gbp_g11
21:47:44 100  ,gbp_g12
21:47:44 101  ,gbp_g13
21:47:44 102  ,gbp_g14
21:47:44 103  ,gbp_g15
21:47:44 104  ,gbp_g16
21:47:44 105  ,gbp_g17
21:47:44 106  ,gbp_g18
21:47:44 107  ,gbp_g19
21:47:44 108  ,gbp_g20
21:47:44 109  ,gbp_g21
21:47:44 110  ,gbp_g22
21:47:44 111  ,gbp_g23
21:47:44 112  ,gbp_g24
21:47:44 113  ,gbp_g25
21:47:44 114  ,gbp_g26
21:47:44 115  ,gbp_g27
21:47:44 116  ,gbp_g28
21:47:44 117  ,gbp_g29
21:47:44 118  ,gbp_g30
21:47:44 119  ,gbp_g31
21:47:44 120  ,gbp_g32
21:47:44 121  ,gbp_g33
21:47:44 122  ,gbp_g34
21:47:44 123  ,gbp_g35
21:47:44 124  ,gbp_g36
21:47:44 125  ,gbp_g37
21:47:44 126  ,gbp_g38
21:47:44 127  ,gbp_g39
21:47:44 128  ,gbp_g40
21:47:44 129  ,jpy_g00
21:47:44 130  ,jpy_g01
21:47:44 131  ,jpy_g02
21:47:44 132  ,jpy_g03
21:47:44 133  ,jpy_g04
21:47:44 134  ,jpy_g05
21:47:44 135  ,jpy_g06
21:47:44 136  ,jpy_g07
21:47:44 137  ,jpy_g08
21:47:44 138  ,jpy_g09
21:47:44 139  ,jpy_g10
21:47:44 140  ,jpy_g11
21:47:44 141  ,jpy_g12
21:47:44 142  ,jpy_g13
21:47:44 143  ,jpy_g14
21:47:44 144  ,jpy_g15
21:47:44 145  ,jpy_g16
21:47:44 146  ,jpy_g17
21:47:44 147  ,jpy_g18
21:47:44 148  ,jpy_g19
21:47:44 149  ,jpy_g20
21:47:44 150  ,jpy_g21
21:47:44 151  ,jpy_g22
21:47:44 152  ,jpy_g23
21:47:44 153  ,jpy_g24
21:47:44 154  ,jpy_g25
21:47:44 155  ,jpy_g26
21:47:44 156  ,jpy_g27
21:47:44 157  ,jpy_g28
21:47:44 158  ,jpy_g29
21:47:44 159  ,jpy_g30
21:47:44 160  ,jpy_g31
21:47:44 161  ,jpy_g32
21:47:44 162  ,jpy_g33
21:47:44 163  ,jpy_g34
21:47:44 164  ,jpy_g35
21:47:44 165  ,jpy_g36
21:47:44 166  ,jpy_g37
21:47:44 167  ,jpy_g38
21:47:44 168  ,jpy_g39
21:47:44 169  ,jpy_g40
21:47:44 170  ,cad_g00
21:47:44 171  ,cad_g01
21:47:44 172  ,cad_g02
21:47:44 173  ,cad_g03
21:47:44 174  ,cad_g04
21:47:44 175  ,cad_g05
21:47:44 176  ,cad_g06
21:47:44 177  ,cad_g07
21:47:44 178  ,cad_g08
21:47:44 179  ,cad_g09
21:47:44 180  ,cad_g10
21:47:44 181  ,cad_g11
21:47:44 182  ,cad_g12
21:47:44 183  ,cad_g13
21:47:44 184  ,cad_g14
21:47:44 185  ,cad_g15
21:47:44 186  ,cad_g16
21:47:44 187  ,cad_g17
21:47:44 188  ,cad_g18
21:47:44 189  ,cad_g19
21:47:44 190  ,cad_g20
21:47:44 191  ,cad_g21
21:47:44 192  ,cad_g22
21:47:44 193  ,cad_g23
21:47:44 194  ,cad_g24
21:47:44 195  ,cad_g25
21:47:44 196  ,cad_g26
21:47:44 197  ,cad_g27
21:47:44 198  ,cad_g28
21:47:44 199  ,cad_g29
21:47:44 200  ,cad_g30
21:47:44 201  ,cad_g31
21:47:44 202  ,cad_g32
21:47:44 203  ,cad_g33
21:47:44 204  ,cad_g34
21:47:44 205  ,cad_g35
21:47:44 206  ,cad_g36
21:47:44 207  ,cad_g37
21:47:44 208  ,cad_g38
21:47:44 209  ,cad_g39
21:47:44 210  ,cad_g40
21:47:44 211  ,chf_g00
21:47:44 212  ,chf_g01
21:47:44 213  ,chf_g02
21:47:44 214  ,chf_g03
21:47:44 215  ,chf_g04
21:47:44 216  ,chf_g05
21:47:44 217  ,chf_g06
21:47:44 218  ,chf_g07
21:47:44 219  ,chf_g08
21:47:44 220  ,chf_g09
21:47:44 221  ,chf_g10
21:47:44 222  ,chf_g11
21:47:44 223  ,chf_g12
21:47:44 224  ,chf_g13
21:47:44 225  ,chf_g14
21:47:44 226  ,chf_g15
21:47:44 227  ,chf_g16
21:47:44 228  ,chf_g17
21:47:44 229  ,chf_g18
21:47:44 230  ,chf_g19
21:47:44 231  ,chf_g20
21:47:44 232  ,chf_g21
21:47:44 233  ,chf_g22
21:47:44 234  ,chf_g23
21:47:44 235  ,chf_g24
21:47:44 236  ,chf_g25
21:47:44 237  ,chf_g26
21:47:44 238  ,chf_g27
21:47:44 239  ,chf_g28
21:47:44 240  ,chf_g29
21:47:44 241  ,chf_g30
21:47:44 242  ,chf_g31
21:47:44 243  ,chf_g32
21:47:44 244  ,chf_g33
21:47:44 245  ,chf_g34
21:47:44 246  ,chf_g35
21:47:44 247  ,chf_g36
21:47:44 248  ,chf_g37
21:47:44 249  ,chf_g38
21:47:44 250  ,chf_g39
21:47:44 251  ,chf_g40
21:47:44 252  FROM chf_ms14 m
21:47:44 253  WHERE gattn IN('nup','up')
21:47:44 254  AND 1+m.ydate < '&1'||' '||'&2'
21:47:44 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'08:40:00'

View created.

Elapsed: 00:00:00.12
21:47:44 SQL> 
21:47:44 SQL> -- rpt
21:47:44 SQL> 
21:47:44 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:47:44   2  
21:47:44 SQL> SELECT MAX(prdate) FROM bme
21:47:44   2  
21:47:44 SQL> -- Now build model from bme and score sme
21:47:44 SQL> @score1gattn.sql
21:47:44 SQL> -- score1gattn.sql
21:47:44 SQL> 
21:47:44 SQL> -- Does the 1st SVM score
21:47:44 SQL> 
21:47:44 SQL> -- Fill up svmc_apply_prep
21:47:44 SQL> @score_gattn.sql
21:47:44 SQL> --
21:47:44 SQL> -- score_gattn.sql
21:47:44 SQL> --
21:47:44 SQL> 
21:47:44 SQL> -- usage: score_gattn.sql
21:47:44 SQL> 
21:47:44 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:47:44 SQL> 
21:47:44 SQL> DEFINE target	= 'gattn'
21:47:44 SQL> DEFINE model_name = 'forex14'
21:47:44 SQL> DEFINE bldtable	= 'bme'
21:47:44 SQL> DEFINE scoretable = 'sme'
21:47:44 SQL> DEFINE case_id	= 'prdate'
21:47:44 SQL> 
21:47:44 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:47:44 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:47:44 SQL> 
21:47:44 SQL> -- Builds an SVM model using pl/sql.
21:47:44 SQL> 
21:47:44 SQL> -----------------------------------------------------------------------
21:47:44 SQL> --			    BUILD THE MODEL
21:47:44 SQL> -----------------------------------------------------------------------
21:47:44 SQL> 
21:47:44 SQL> -- Cleanup old build data preparation objects for repeat runs
21:47:44 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:47:44 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:47:44 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:47:44 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:47:44 SQL> 
21:47:44 SQL> 
21:47:44 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:47:44 SQL> --
21:47:44 SQL> -- DROP	TABLE svmc_settings ;
21:47:44 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:47:44 SQL> -- DELETE svmc_settings;
21:47:44 SQL> 
21:47:44 SQL> -- The default classification algorithm is Naive Bayes. So override
21:47:44 SQL> -- this choice to SVM using a settings table.
21:47:44 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:47:44 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:47:44 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:47:44 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:47:44 SQL> -- models.
21:47:44 SQL> --
21:47:44 SQL> 
21:47:44 SQL> -- Do this once and then comment it out.
21:47:44 SQL> -- That makes script go faster.
21:47:44 SQL> -- BEGIN
21:47:44 SQL> -- -- Populate settings table
21:47:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:47:44 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:47:44 SQL> --
21:47:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:47:44 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:47:44 SQL> --
21:47:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:47:44 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:47:44 SQL> --   COMMIT;
21:47:44 SQL> -- END;
21:47:44 SQL> -- /
21:47:44 SQL> 
21:47:44 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
21:47:44 SQL> 
21:47:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:47:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:47:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:47:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:47:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:47:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:47:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:47:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:47:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
21:47:44 SQL> 
21:47:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:47:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:47:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:47:44 SQL> 
21:47:44 SQL> --------------------------------
21:47:44 SQL> -- PREPARE BUILD (TRAINING) DATA
21:47:44 SQL> --
21:47:44 SQL> 
21:47:44 SQL> -- 1. Missing Value treatment for all Predictors and
21:47:44 SQL> -- 2. Outlier Treatment and
21:47:44 SQL> -- 3. Normalization are performed below.
21:47:44 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:47:44 SQL> --    normalized here.
21:47:44 SQL> 
21:47:44 SQL> BEGIN
21:47:44   2  	-- Perform missing value treatment for all predictors
21:47:44   3  	-- create miss tables
21:47:44   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:47:44   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:47:44   6  
21:47:44   7  	-- populate miss tables
21:47:44   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:47:44   9  	  miss_table_name => 'svmc_miss_num',
21:47:44  10  	  data_table_name => '&bldtable',
21:47:44  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:47:44  12  
21:47:44  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:47:44  14  	  miss_table_name => 'svmc_miss_cat',
21:47:44  15  	  data_table_name => '&bldtable',
21:47:44  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:47:44  17  
21:47:44  18  	-- xform input data to replace missing values
21:47:44  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:47:44  20  	  miss_table_name => 'svmc_miss_num',
21:47:44  21  	  data_table_name => '&bldtable',
21:47:44  22  	  xform_view_name => 'xformed_build_miss_num');
21:47:44  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:47:44  24  	  miss_table_name => 'svmc_miss_cat',
21:47:44  25  	  data_table_name => '&bldtable',
21:47:44  26  	  xform_view_name => 'xformed_build_miss_cat');
21:47:44  27  
21:47:44  28  	-- Perform outlier treatment.
21:47:44  29  	-- create clip table
21:47:44  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:47:44  31  
21:47:44  32  	-- populate clip table
21:47:44  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:47:44  34  	  clip_table_name => 'svmc_clip',
21:47:44  35  	  data_table_name => '&bldtable',
21:47:44  36  	  tail_frac	  => 0.025,
21:47:44  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:47:44  38  
21:47:44  39  	-- xform input data to winsorized data
21:47:44  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:47:44  41  	  clip_table_name => 'svmc_clip',
21:47:44  42  	  data_table_name => '&bldtable',
21:47:44  43  	  xform_view_name => 'svmc_winsor');
21:47:44  44  
21:47:44  45  	-- create normalization table
21:47:44  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:47:44  47  
21:47:44  48  	-- populate normalization table based on winsorized data
21:47:44  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:47:44  50  	  norm_table_name => 'svmc_norm',
21:47:44  51  	  data_table_name => 'svmc_winsor',
21:47:44  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:47:44  53  
21:47:44  54  	-- normalize the original data
21:47:44  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:47:44  56  	  norm_table_name => 'svmc_norm',
21:47:44  57  	  data_table_name => '&bldtable',
21:47:44  58  	  xform_view_name => 'svmc_build_prep');
21:47:44  59  END;
21:47:44  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.85
21:48:02 SQL> 
21:48:02 SQL> ---------------------
21:48:02 SQL> -- CREATE A NEW MODEL
21:48:02 SQL> --
21:48:02 SQL> -- Cleanup old model with the same name for repeat runs
21:48:02 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:48:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:48:02   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
21:48:03 SQL> 
21:48:03 SQL> -- Build a new SVM Model
21:48:03 SQL> BEGIN
21:48:03   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:48:03   3  	  model_name	      => '&model_name',
21:48:03   4  	  mining_function     => dbms_data_mining.classification,
21:48:03   5  	  data_table_name     => 'svmc_build_prep',
21:48:03   6  	  case_id_column_name => '&case_id',
21:48:03   7  	  target_column_name  => '&target',
21:48:03   8  	  settings_table_name => 'svmc_settings');
21:48:03   9  END;
21:48:03  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.23
21:48:29 SQL> 
21:48:29 SQL> -----------------------------------------------------------------------
21:48:29 SQL> --			       APPLY/score THE MODEL
21:48:29 SQL> -----------------------------------------------------------------------
21:48:29 SQL> 
21:48:29 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:48:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:48:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:48:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
21:48:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:48:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:48:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:48:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:48:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:48:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:48:30 SQL> -----------------------
21:48:30 SQL> -- PREPARE SCORING DATA
21:48:30 SQL> --
21:48:30 SQL> -- If the data for model creation has been prepared, then the data
21:48:30 SQL> -- to be scored using the model must be prepared in the same manner
21:48:30 SQL> -- in order to obtain meaningful results.
21:48:30 SQL> --
21:48:30 SQL> -- 1. Missing Value treatment for all Predictors and
21:48:30 SQL> -- 2. Normalization
21:48:30 SQL> -- No outlier treatment will be performed during test and apply. The
21:48:30 SQL> -- normalization step is sufficient, since the normalization parameters
21:48:30 SQL> -- already capture the effects of outlier treatment done with build data.
21:48:30 SQL> --
21:48:30 SQL> BEGIN
21:48:30   2  	-- Xform Test data to replace missing values
21:48:30   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:48:30   4  	  miss_table_name => 'svmc_miss_num',
21:48:30   5  	  data_table_name => '&scoretable',
21:48:30   6  	  xform_view_name => 'xformed_apply_miss_num');
21:48:30   7  
21:48:30   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:48:30   9  	  miss_table_name => 'svmc_miss_cat',
21:48:30  10  	  data_table_name => '&scoretable',
21:48:30  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:48:30  12  
21:48:30  13  	-- Normalize the data to be scored
21:48:30  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:48:30  15  	  norm_table_name => 'svmc_norm',
21:48:30  16  	  data_table_name => '&scoretable',
21:48:30  17  	  xform_view_name => 'svmc_apply_prep');
21:48:30  18  END;
21:48:30  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
21:48:31 SQL> 
21:48:31 SQL> -- Use same model_name used in score_gattn.sql
21:48:31 SQL> DEFINE model_name = 'forex14'
21:48:31 SQL> 
21:48:31 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:48:31 SQL> 
21:48:31 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:48:31   2  SELECT
21:48:31   3  prdate
21:48:31   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:48:31   5  ,sysdate
21:48:31   6  ,SUBSTR(prdate,1,3)pair
21:48:31   7  ,SUBSTR(prdate,4,19)ydate
21:48:31   8  FROM svmc_apply_prep
21:48:31   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:48:31 SQL> @chf_score1day_gattn.sql	2010-12-17 08:35:00
21:48:31 SQL> --
21:48:31 SQL> -- chf_score1day_gattn.sql
21:48:31 SQL> --
21:48:31 SQL> 
21:48:31 SQL> CREATE OR REPLACE VIEW sme AS
21:48:31   2  SELECT
21:48:31   3  'chf'||m.ydate prdate
21:48:31   4  ,NULL gattn
21:48:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:48:31   6  ,eur_g00
21:48:31   7  ,eur_g01
21:48:31   8  ,eur_g02
21:48:31   9  ,eur_g03
21:48:31  10  ,eur_g04
21:48:31  11  ,eur_g05
21:48:31  12  ,eur_g06
21:48:31  13  ,eur_g07
21:48:31  14  ,eur_g08
21:48:31  15  ,eur_g09
21:48:31  16  ,eur_g10
21:48:31  17  ,eur_g11
21:48:31  18  ,eur_g12
21:48:31  19  ,eur_g13
21:48:31  20  ,eur_g14
21:48:31  21  ,eur_g15
21:48:31  22  ,eur_g16
21:48:31  23  ,eur_g17
21:48:31  24  ,eur_g18
21:48:31  25  ,eur_g19
21:48:31  26  ,eur_g20
21:48:31  27  ,eur_g21
21:48:31  28  ,eur_g22
21:48:31  29  ,eur_g23
21:48:31  30  ,eur_g24
21:48:31  31  ,eur_g25
21:48:31  32  ,eur_g26
21:48:31  33  ,eur_g27
21:48:31  34  ,eur_g28
21:48:31  35  ,eur_g29
21:48:31  36  ,eur_g30
21:48:31  37  ,eur_g31
21:48:31  38  ,eur_g32
21:48:31  39  ,eur_g33
21:48:31  40  ,eur_g34
21:48:31  41  ,eur_g35
21:48:31  42  ,eur_g36
21:48:31  43  ,eur_g37
21:48:31  44  ,eur_g38
21:48:31  45  ,eur_g39
21:48:31  46  ,eur_g40
21:48:31  47  ,aud_g00
21:48:31  48  ,aud_g01
21:48:31  49  ,aud_g02
21:48:31  50  ,aud_g03
21:48:31  51  ,aud_g04
21:48:31  52  ,aud_g05
21:48:31  53  ,aud_g06
21:48:31  54  ,aud_g07
21:48:31  55  ,aud_g08
21:48:31  56  ,aud_g09
21:48:31  57  ,aud_g10
21:48:31  58  ,aud_g11
21:48:31  59  ,aud_g12
21:48:31  60  ,aud_g13
21:48:31  61  ,aud_g14
21:48:31  62  ,aud_g15
21:48:31  63  ,aud_g16
21:48:31  64  ,aud_g17
21:48:31  65  ,aud_g18
21:48:31  66  ,aud_g19
21:48:31  67  ,aud_g20
21:48:31  68  ,aud_g21
21:48:31  69  ,aud_g22
21:48:31  70  ,aud_g23
21:48:31  71  ,aud_g24
21:48:31  72  ,aud_g25
21:48:31  73  ,aud_g26
21:48:31  74  ,aud_g27
21:48:31  75  ,aud_g28
21:48:31  76  ,aud_g29
21:48:31  77  ,aud_g30
21:48:31  78  ,aud_g31
21:48:31  79  ,aud_g32
21:48:31  80  ,aud_g33
21:48:31  81  ,aud_g34
21:48:31  82  ,aud_g35
21:48:31  83  ,aud_g36
21:48:31  84  ,aud_g37
21:48:31  85  ,aud_g38
21:48:31  86  ,aud_g39
21:48:31  87  ,aud_g40
21:48:31  88  ,gbp_g00
21:48:31  89  ,gbp_g01
21:48:31  90  ,gbp_g02
21:48:31  91  ,gbp_g03
21:48:31  92  ,gbp_g04
21:48:31  93  ,gbp_g05
21:48:31  94  ,gbp_g06
21:48:31  95  ,gbp_g07
21:48:31  96  ,gbp_g08
21:48:31  97  ,gbp_g09
21:48:31  98  ,gbp_g10
21:48:31  99  ,gbp_g11
21:48:31 100  ,gbp_g12
21:48:31 101  ,gbp_g13
21:48:31 102  ,gbp_g14
21:48:31 103  ,gbp_g15
21:48:31 104  ,gbp_g16
21:48:31 105  ,gbp_g17
21:48:31 106  ,gbp_g18
21:48:31 107  ,gbp_g19
21:48:31 108  ,gbp_g20
21:48:31 109  ,gbp_g21
21:48:31 110  ,gbp_g22
21:48:31 111  ,gbp_g23
21:48:31 112  ,gbp_g24
21:48:31 113  ,gbp_g25
21:48:31 114  ,gbp_g26
21:48:31 115  ,gbp_g27
21:48:31 116  ,gbp_g28
21:48:31 117  ,gbp_g29
21:48:31 118  ,gbp_g30
21:48:31 119  ,gbp_g31
21:48:31 120  ,gbp_g32
21:48:31 121  ,gbp_g33
21:48:31 122  ,gbp_g34
21:48:31 123  ,gbp_g35
21:48:31 124  ,gbp_g36
21:48:31 125  ,gbp_g37
21:48:31 126  ,gbp_g38
21:48:31 127  ,gbp_g39
21:48:31 128  ,gbp_g40
21:48:31 129  ,jpy_g00
21:48:31 130  ,jpy_g01
21:48:31 131  ,jpy_g02
21:48:31 132  ,jpy_g03
21:48:31 133  ,jpy_g04
21:48:31 134  ,jpy_g05
21:48:31 135  ,jpy_g06
21:48:31 136  ,jpy_g07
21:48:31 137  ,jpy_g08
21:48:31 138  ,jpy_g09
21:48:31 139  ,jpy_g10
21:48:31 140  ,jpy_g11
21:48:31 141  ,jpy_g12
21:48:31 142  ,jpy_g13
21:48:31 143  ,jpy_g14
21:48:31 144  ,jpy_g15
21:48:31 145  ,jpy_g16
21:48:31 146  ,jpy_g17
21:48:31 147  ,jpy_g18
21:48:31 148  ,jpy_g19
21:48:31 149  ,jpy_g20
21:48:31 150  ,jpy_g21
21:48:31 151  ,jpy_g22
21:48:31 152  ,jpy_g23
21:48:31 153  ,jpy_g24
21:48:31 154  ,jpy_g25
21:48:31 155  ,jpy_g26
21:48:31 156  ,jpy_g27
21:48:31 157  ,jpy_g28
21:48:31 158  ,jpy_g29
21:48:31 159  ,jpy_g30
21:48:31 160  ,jpy_g31
21:48:31 161  ,jpy_g32
21:48:31 162  ,jpy_g33
21:48:31 163  ,jpy_g34
21:48:31 164  ,jpy_g35
21:48:31 165  ,jpy_g36
21:48:31 166  ,jpy_g37
21:48:31 167  ,jpy_g38
21:48:31 168  ,jpy_g39
21:48:31 169  ,jpy_g40
21:48:31 170  ,cad_g00
21:48:31 171  ,cad_g01
21:48:31 172  ,cad_g02
21:48:31 173  ,cad_g03
21:48:31 174  ,cad_g04
21:48:31 175  ,cad_g05
21:48:31 176  ,cad_g06
21:48:31 177  ,cad_g07
21:48:31 178  ,cad_g08
21:48:31 179  ,cad_g09
21:48:31 180  ,cad_g10
21:48:31 181  ,cad_g11
21:48:31 182  ,cad_g12
21:48:31 183  ,cad_g13
21:48:31 184  ,cad_g14
21:48:31 185  ,cad_g15
21:48:31 186  ,cad_g16
21:48:31 187  ,cad_g17
21:48:31 188  ,cad_g18
21:48:31 189  ,cad_g19
21:48:31 190  ,cad_g20
21:48:31 191  ,cad_g21
21:48:31 192  ,cad_g22
21:48:31 193  ,cad_g23
21:48:31 194  ,cad_g24
21:48:31 195  ,cad_g25
21:48:31 196  ,cad_g26
21:48:31 197  ,cad_g27
21:48:31 198  ,cad_g28
21:48:31 199  ,cad_g29
21:48:31 200  ,cad_g30
21:48:31 201  ,cad_g31
21:48:31 202  ,cad_g32
21:48:31 203  ,cad_g33
21:48:31 204  ,cad_g34
21:48:31 205  ,cad_g35
21:48:31 206  ,cad_g36
21:48:31 207  ,cad_g37
21:48:31 208  ,cad_g38
21:48:31 209  ,cad_g39
21:48:31 210  ,cad_g40
21:48:31 211  ,chf_g00
21:48:31 212  ,chf_g01
21:48:31 213  ,chf_g02
21:48:31 214  ,chf_g03
21:48:31 215  ,chf_g04
21:48:31 216  ,chf_g05
21:48:31 217  ,chf_g06
21:48:31 218  ,chf_g07
21:48:31 219  ,chf_g08
21:48:31 220  ,chf_g09
21:48:31 221  ,chf_g10
21:48:31 222  ,chf_g11
21:48:31 223  ,chf_g12
21:48:31 224  ,chf_g13
21:48:31 225  ,chf_g14
21:48:31 226  ,chf_g15
21:48:31 227  ,chf_g16
21:48:31 228  ,chf_g17
21:48:31 229  ,chf_g18
21:48:31 230  ,chf_g19
21:48:31 231  ,chf_g20
21:48:31 232  ,chf_g21
21:48:31 233  ,chf_g22
21:48:31 234  ,chf_g23
21:48:31 235  ,chf_g24
21:48:31 236  ,chf_g25
21:48:31 237  ,chf_g26
21:48:31 238  ,chf_g27
21:48:31 239  ,chf_g28
21:48:31 240  ,chf_g29
21:48:31 241  ,chf_g30
21:48:31 242  ,chf_g31
21:48:31 243  ,chf_g32
21:48:31 244  ,chf_g33
21:48:31 245  ,chf_g34
21:48:31 246  ,chf_g35
21:48:31 247  ,chf_g36
21:48:31 248  ,chf_g37
21:48:31 249  ,chf_g38
21:48:31 250  ,chf_g39
21:48:31 251  ,chf_g40
21:48:31 252  FROM chf_ms14 m
21:48:31 253  WHERE m.ydate = '&1'||' '||'&2'
21:48:31 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'08:35:00'

View created.

Elapsed: 00:00:00.12
21:48:31 SQL> 
21:48:31 SQL> -- rpt
21:48:31 SQL> -- We should see just 1 row:
21:48:31 SQL> 
21:48:31 SQL> SELECT COUNT(prdate) FROM sme
21:48:31   2  
21:48:31 SQL> -- Build the model:
21:48:31 SQL> CREATE OR REPLACE VIEW bme AS
21:48:31   2  SELECT
21:48:31   3  'chf'||m.ydate prdate
21:48:31   4  ,gattn
21:48:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:48:31   6  ,eur_g00
21:48:31   7  ,eur_g01
21:48:31   8  ,eur_g02
21:48:31   9  ,eur_g03
21:48:31  10  ,eur_g04
21:48:31  11  ,eur_g05
21:48:31  12  ,eur_g06
21:48:31  13  ,eur_g07
21:48:31  14  ,eur_g08
21:48:31  15  ,eur_g09
21:48:31  16  ,eur_g10
21:48:31  17  ,eur_g11
21:48:31  18  ,eur_g12
21:48:31  19  ,eur_g13
21:48:31  20  ,eur_g14
21:48:31  21  ,eur_g15
21:48:31  22  ,eur_g16
21:48:31  23  ,eur_g17
21:48:31  24  ,eur_g18
21:48:31  25  ,eur_g19
21:48:31  26  ,eur_g20
21:48:31  27  ,eur_g21
21:48:31  28  ,eur_g22
21:48:31  29  ,eur_g23
21:48:31  30  ,eur_g24
21:48:31  31  ,eur_g25
21:48:31  32  ,eur_g26
21:48:31  33  ,eur_g27
21:48:31  34  ,eur_g28
21:48:31  35  ,eur_g29
21:48:31  36  ,eur_g30
21:48:31  37  ,eur_g31
21:48:31  38  ,eur_g32
21:48:31  39  ,eur_g33
21:48:31  40  ,eur_g34
21:48:31  41  ,eur_g35
21:48:31  42  ,eur_g36
21:48:31  43  ,eur_g37
21:48:31  44  ,eur_g38
21:48:31  45  ,eur_g39
21:48:31  46  ,eur_g40
21:48:31  47  ,aud_g00
21:48:31  48  ,aud_g01
21:48:31  49  ,aud_g02
21:48:31  50  ,aud_g03
21:48:31  51  ,aud_g04
21:48:31  52  ,aud_g05
21:48:31  53  ,aud_g06
21:48:31  54  ,aud_g07
21:48:31  55  ,aud_g08
21:48:31  56  ,aud_g09
21:48:31  57  ,aud_g10
21:48:31  58  ,aud_g11
21:48:31  59  ,aud_g12
21:48:31  60  ,aud_g13
21:48:31  61  ,aud_g14
21:48:31  62  ,aud_g15
21:48:31  63  ,aud_g16
21:48:31  64  ,aud_g17
21:48:31  65  ,aud_g18
21:48:31  66  ,aud_g19
21:48:31  67  ,aud_g20
21:48:31  68  ,aud_g21
21:48:31  69  ,aud_g22
21:48:31  70  ,aud_g23
21:48:31  71  ,aud_g24
21:48:31  72  ,aud_g25
21:48:31  73  ,aud_g26
21:48:31  74  ,aud_g27
21:48:31  75  ,aud_g28
21:48:31  76  ,aud_g29
21:48:31  77  ,aud_g30
21:48:31  78  ,aud_g31
21:48:31  79  ,aud_g32
21:48:31  80  ,aud_g33
21:48:31  81  ,aud_g34
21:48:31  82  ,aud_g35
21:48:31  83  ,aud_g36
21:48:31  84  ,aud_g37
21:48:31  85  ,aud_g38
21:48:31  86  ,aud_g39
21:48:31  87  ,aud_g40
21:48:31  88  ,gbp_g00
21:48:31  89  ,gbp_g01
21:48:31  90  ,gbp_g02
21:48:31  91  ,gbp_g03
21:48:31  92  ,gbp_g04
21:48:31  93  ,gbp_g05
21:48:31  94  ,gbp_g06
21:48:31  95  ,gbp_g07
21:48:31  96  ,gbp_g08
21:48:31  97  ,gbp_g09
21:48:31  98  ,gbp_g10
21:48:31  99  ,gbp_g11
21:48:31 100  ,gbp_g12
21:48:31 101  ,gbp_g13
21:48:31 102  ,gbp_g14
21:48:31 103  ,gbp_g15
21:48:31 104  ,gbp_g16
21:48:31 105  ,gbp_g17
21:48:31 106  ,gbp_g18
21:48:31 107  ,gbp_g19
21:48:31 108  ,gbp_g20
21:48:31 109  ,gbp_g21
21:48:31 110  ,gbp_g22
21:48:31 111  ,gbp_g23
21:48:31 112  ,gbp_g24
21:48:31 113  ,gbp_g25
21:48:31 114  ,gbp_g26
21:48:31 115  ,gbp_g27
21:48:31 116  ,gbp_g28
21:48:31 117  ,gbp_g29
21:48:31 118  ,gbp_g30
21:48:31 119  ,gbp_g31
21:48:31 120  ,gbp_g32
21:48:31 121  ,gbp_g33
21:48:31 122  ,gbp_g34
21:48:31 123  ,gbp_g35
21:48:31 124  ,gbp_g36
21:48:31 125  ,gbp_g37
21:48:31 126  ,gbp_g38
21:48:31 127  ,gbp_g39
21:48:31 128  ,gbp_g40
21:48:31 129  ,jpy_g00
21:48:31 130  ,jpy_g01
21:48:31 131  ,jpy_g02
21:48:31 132  ,jpy_g03
21:48:31 133  ,jpy_g04
21:48:31 134  ,jpy_g05
21:48:31 135  ,jpy_g06
21:48:31 136  ,jpy_g07
21:48:31 137  ,jpy_g08
21:48:31 138  ,jpy_g09
21:48:31 139  ,jpy_g10
21:48:31 140  ,jpy_g11
21:48:31 141  ,jpy_g12
21:48:31 142  ,jpy_g13
21:48:31 143  ,jpy_g14
21:48:31 144  ,jpy_g15
21:48:31 145  ,jpy_g16
21:48:31 146  ,jpy_g17
21:48:31 147  ,jpy_g18
21:48:31 148  ,jpy_g19
21:48:31 149  ,jpy_g20
21:48:31 150  ,jpy_g21
21:48:31 151  ,jpy_g22
21:48:31 152  ,jpy_g23
21:48:31 153  ,jpy_g24
21:48:31 154  ,jpy_g25
21:48:31 155  ,jpy_g26
21:48:31 156  ,jpy_g27
21:48:31 157  ,jpy_g28
21:48:31 158  ,jpy_g29
21:48:31 159  ,jpy_g30
21:48:31 160  ,jpy_g31
21:48:31 161  ,jpy_g32
21:48:31 162  ,jpy_g33
21:48:31 163  ,jpy_g34
21:48:31 164  ,jpy_g35
21:48:31 165  ,jpy_g36
21:48:31 166  ,jpy_g37
21:48:31 167  ,jpy_g38
21:48:31 168  ,jpy_g39
21:48:31 169  ,jpy_g40
21:48:31 170  ,cad_g00
21:48:31 171  ,cad_g01
21:48:31 172  ,cad_g02
21:48:31 173  ,cad_g03
21:48:31 174  ,cad_g04
21:48:31 175  ,cad_g05
21:48:31 176  ,cad_g06
21:48:31 177  ,cad_g07
21:48:31 178  ,cad_g08
21:48:31 179  ,cad_g09
21:48:31 180  ,cad_g10
21:48:31 181  ,cad_g11
21:48:31 182  ,cad_g12
21:48:31 183  ,cad_g13
21:48:31 184  ,cad_g14
21:48:31 185  ,cad_g15
21:48:31 186  ,cad_g16
21:48:31 187  ,cad_g17
21:48:31 188  ,cad_g18
21:48:31 189  ,cad_g19
21:48:31 190  ,cad_g20
21:48:31 191  ,cad_g21
21:48:31 192  ,cad_g22
21:48:31 193  ,cad_g23
21:48:31 194  ,cad_g24
21:48:31 195  ,cad_g25
21:48:31 196  ,cad_g26
21:48:31 197  ,cad_g27
21:48:31 198  ,cad_g28
21:48:31 199  ,cad_g29
21:48:31 200  ,cad_g30
21:48:31 201  ,cad_g31
21:48:31 202  ,cad_g32
21:48:31 203  ,cad_g33
21:48:31 204  ,cad_g34
21:48:31 205  ,cad_g35
21:48:31 206  ,cad_g36
21:48:31 207  ,cad_g37
21:48:31 208  ,cad_g38
21:48:31 209  ,cad_g39
21:48:31 210  ,cad_g40
21:48:31 211  ,chf_g00
21:48:31 212  ,chf_g01
21:48:31 213  ,chf_g02
21:48:31 214  ,chf_g03
21:48:31 215  ,chf_g04
21:48:31 216  ,chf_g05
21:48:31 217  ,chf_g06
21:48:31 218  ,chf_g07
21:48:31 219  ,chf_g08
21:48:31 220  ,chf_g09
21:48:31 221  ,chf_g10
21:48:31 222  ,chf_g11
21:48:31 223  ,chf_g12
21:48:31 224  ,chf_g13
21:48:31 225  ,chf_g14
21:48:31 226  ,chf_g15
21:48:31 227  ,chf_g16
21:48:31 228  ,chf_g17
21:48:31 229  ,chf_g18
21:48:31 230  ,chf_g19
21:48:31 231  ,chf_g20
21:48:31 232  ,chf_g21
21:48:31 233  ,chf_g22
21:48:31 234  ,chf_g23
21:48:31 235  ,chf_g24
21:48:31 236  ,chf_g25
21:48:31 237  ,chf_g26
21:48:31 238  ,chf_g27
21:48:31 239  ,chf_g28
21:48:31 240  ,chf_g29
21:48:31 241  ,chf_g30
21:48:31 242  ,chf_g31
21:48:31 243  ,chf_g32
21:48:31 244  ,chf_g33
21:48:31 245  ,chf_g34
21:48:31 246  ,chf_g35
21:48:31 247  ,chf_g36
21:48:31 248  ,chf_g37
21:48:31 249  ,chf_g38
21:48:31 250  ,chf_g39
21:48:31 251  ,chf_g40
21:48:31 252  FROM chf_ms14 m
21:48:31 253  WHERE gattn IN('nup','up')
21:48:31 254  AND 1+m.ydate < '&1'||' '||'&2'
21:48:31 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'08:35:00'

View created.

Elapsed: 00:00:00.13
21:48:31 SQL> 
21:48:31 SQL> -- rpt
21:48:31 SQL> 
21:48:31 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:48:31   2  
21:48:31 SQL> SELECT MAX(prdate) FROM bme
21:48:31   2  
21:48:31 SQL> -- Now build model from bme and score sme
21:48:31 SQL> @score1gattn.sql
21:48:31 SQL> -- score1gattn.sql
21:48:31 SQL> 
21:48:31 SQL> -- Does the 1st SVM score
21:48:31 SQL> 
21:48:31 SQL> -- Fill up svmc_apply_prep
21:48:31 SQL> @score_gattn.sql
21:48:31 SQL> --
21:48:31 SQL> -- score_gattn.sql
21:48:31 SQL> --
21:48:31 SQL> 
21:48:31 SQL> -- usage: score_gattn.sql
21:48:31 SQL> 
21:48:31 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:48:31 SQL> 
21:48:31 SQL> DEFINE target	= 'gattn'
21:48:31 SQL> DEFINE model_name = 'forex14'
21:48:31 SQL> DEFINE bldtable	= 'bme'
21:48:31 SQL> DEFINE scoretable = 'sme'
21:48:31 SQL> DEFINE case_id	= 'prdate'
21:48:31 SQL> 
21:48:31 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:48:31 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:48:31 SQL> 
21:48:31 SQL> -- Builds an SVM model using pl/sql.
21:48:31 SQL> 
21:48:31 SQL> -----------------------------------------------------------------------
21:48:31 SQL> --			    BUILD THE MODEL
21:48:31 SQL> -----------------------------------------------------------------------
21:48:31 SQL> 
21:48:31 SQL> -- Cleanup old build data preparation objects for repeat runs
21:48:31 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:48:31 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:48:31 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:48:31 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:48:31 SQL> 
21:48:31 SQL> 
21:48:31 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:48:31 SQL> --
21:48:31 SQL> -- DROP	TABLE svmc_settings ;
21:48:31 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:48:31 SQL> -- DELETE svmc_settings;
21:48:31 SQL> 
21:48:31 SQL> -- The default classification algorithm is Naive Bayes. So override
21:48:31 SQL> -- this choice to SVM using a settings table.
21:48:31 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:48:31 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:48:31 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:48:31 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:48:31 SQL> -- models.
21:48:31 SQL> --
21:48:31 SQL> 
21:48:31 SQL> -- Do this once and then comment it out.
21:48:31 SQL> -- That makes script go faster.
21:48:31 SQL> -- BEGIN
21:48:31 SQL> -- -- Populate settings table
21:48:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:48:31 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:48:31 SQL> --
21:48:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:48:31 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:48:31 SQL> --
21:48:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:48:31 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:48:31 SQL> --   COMMIT;
21:48:31 SQL> -- END;
21:48:31 SQL> -- /
21:48:31 SQL> 
21:48:31 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:48:31 SQL> 
21:48:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:48:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:48:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:48:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:48:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:48:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:48:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:48:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:48:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:48:31 SQL> 
21:48:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:48:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:48:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:48:31 SQL> 
21:48:31 SQL> --------------------------------
21:48:31 SQL> -- PREPARE BUILD (TRAINING) DATA
21:48:31 SQL> --
21:48:31 SQL> 
21:48:31 SQL> -- 1. Missing Value treatment for all Predictors and
21:48:31 SQL> -- 2. Outlier Treatment and
21:48:31 SQL> -- 3. Normalization are performed below.
21:48:31 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:48:31 SQL> --    normalized here.
21:48:31 SQL> 
21:48:31 SQL> BEGIN
21:48:31   2  	-- Perform missing value treatment for all predictors
21:48:31   3  	-- create miss tables
21:48:31   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:48:31   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:48:31   6  
21:48:31   7  	-- populate miss tables
21:48:31   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:48:31   9  	  miss_table_name => 'svmc_miss_num',
21:48:31  10  	  data_table_name => '&bldtable',
21:48:31  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:48:31  12  
21:48:31  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:48:31  14  	  miss_table_name => 'svmc_miss_cat',
21:48:31  15  	  data_table_name => '&bldtable',
21:48:31  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:48:31  17  
21:48:31  18  	-- xform input data to replace missing values
21:48:31  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:48:31  20  	  miss_table_name => 'svmc_miss_num',
21:48:31  21  	  data_table_name => '&bldtable',
21:48:31  22  	  xform_view_name => 'xformed_build_miss_num');
21:48:31  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:48:31  24  	  miss_table_name => 'svmc_miss_cat',
21:48:31  25  	  data_table_name => '&bldtable',
21:48:31  26  	  xform_view_name => 'xformed_build_miss_cat');
21:48:31  27  
21:48:31  28  	-- Perform outlier treatment.
21:48:31  29  	-- create clip table
21:48:31  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:48:31  31  
21:48:31  32  	-- populate clip table
21:48:31  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:48:31  34  	  clip_table_name => 'svmc_clip',
21:48:31  35  	  data_table_name => '&bldtable',
21:48:31  36  	  tail_frac	  => 0.025,
21:48:31  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:48:31  38  
21:48:31  39  	-- xform input data to winsorized data
21:48:31  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:48:31  41  	  clip_table_name => 'svmc_clip',
21:48:31  42  	  data_table_name => '&bldtable',
21:48:31  43  	  xform_view_name => 'svmc_winsor');
21:48:31  44  
21:48:31  45  	-- create normalization table
21:48:31  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:48:31  47  
21:48:31  48  	-- populate normalization table based on winsorized data
21:48:31  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:48:31  50  	  norm_table_name => 'svmc_norm',
21:48:31  51  	  data_table_name => 'svmc_winsor',
21:48:31  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:48:31  53  
21:48:31  54  	-- normalize the original data
21:48:31  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:48:31  56  	  norm_table_name => 'svmc_norm',
21:48:31  57  	  data_table_name => '&bldtable',
21:48:31  58  	  xform_view_name => 'svmc_build_prep');
21:48:31  59  END;
21:48:31  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.84
21:48:49 SQL> 
21:48:49 SQL> ---------------------
21:48:49 SQL> -- CREATE A NEW MODEL
21:48:49 SQL> --
21:48:49 SQL> -- Cleanup old model with the same name for repeat runs
21:48:49 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:48:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:48:49   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.04
21:48:50 SQL> 
21:48:50 SQL> -- Build a new SVM Model
21:48:50 SQL> BEGIN
21:48:50   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:48:50   3  	  model_name	      => '&model_name',
21:48:50   4  	  mining_function     => dbms_data_mining.classification,
21:48:50   5  	  data_table_name     => 'svmc_build_prep',
21:48:50   6  	  case_id_column_name => '&case_id',
21:48:50   7  	  target_column_name  => '&target',
21:48:50   8  	  settings_table_name => 'svmc_settings');
21:48:50   9  END;
21:48:50  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.17
21:49:17 SQL> 
21:49:17 SQL> -----------------------------------------------------------------------
21:49:17 SQL> --			       APPLY/score THE MODEL
21:49:17 SQL> -----------------------------------------------------------------------
21:49:17 SQL> 
21:49:17 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:49:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:49:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:49:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:49:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:49:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:49:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:49:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:49:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:49:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:49:17 SQL> -----------------------
21:49:17 SQL> -- PREPARE SCORING DATA
21:49:17 SQL> --
21:49:17 SQL> -- If the data for model creation has been prepared, then the data
21:49:17 SQL> -- to be scored using the model must be prepared in the same manner
21:49:17 SQL> -- in order to obtain meaningful results.
21:49:17 SQL> --
21:49:17 SQL> -- 1. Missing Value treatment for all Predictors and
21:49:17 SQL> -- 2. Normalization
21:49:17 SQL> -- No outlier treatment will be performed during test and apply. The
21:49:17 SQL> -- normalization step is sufficient, since the normalization parameters
21:49:17 SQL> -- already capture the effects of outlier treatment done with build data.
21:49:17 SQL> --
21:49:17 SQL> BEGIN
21:49:17   2  	-- Xform Test data to replace missing values
21:49:17   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:49:17   4  	  miss_table_name => 'svmc_miss_num',
21:49:17   5  	  data_table_name => '&scoretable',
21:49:17   6  	  xform_view_name => 'xformed_apply_miss_num');
21:49:17   7  
21:49:17   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:49:17   9  	  miss_table_name => 'svmc_miss_cat',
21:49:17  10  	  data_table_name => '&scoretable',
21:49:17  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:49:17  12  
21:49:17  13  	-- Normalize the data to be scored
21:49:17  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:49:17  15  	  norm_table_name => 'svmc_norm',
21:49:17  16  	  data_table_name => '&scoretable',
21:49:17  17  	  xform_view_name => 'svmc_apply_prep');
21:49:17  18  END;
21:49:17  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
21:49:18 SQL> 
21:49:18 SQL> -- Use same model_name used in score_gattn.sql
21:49:18 SQL> DEFINE model_name = 'forex14'
21:49:18 SQL> 
21:49:18 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:49:18 SQL> 
21:49:18 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:49:18   2  SELECT
21:49:18   3  prdate
21:49:18   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:49:18   5  ,sysdate
21:49:18   6  ,SUBSTR(prdate,1,3)pair
21:49:18   7  ,SUBSTR(prdate,4,19)ydate
21:49:18   8  FROM svmc_apply_prep
21:49:18   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:49:18 SQL> @chf_score1day_gattn.sql	2010-12-17 08:30:00
21:49:18 SQL> --
21:49:18 SQL> -- chf_score1day_gattn.sql
21:49:18 SQL> --
21:49:18 SQL> 
21:49:18 SQL> CREATE OR REPLACE VIEW sme AS
21:49:18   2  SELECT
21:49:18   3  'chf'||m.ydate prdate
21:49:18   4  ,NULL gattn
21:49:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:49:18   6  ,eur_g00
21:49:18   7  ,eur_g01
21:49:18   8  ,eur_g02
21:49:18   9  ,eur_g03
21:49:18  10  ,eur_g04
21:49:18  11  ,eur_g05
21:49:18  12  ,eur_g06
21:49:18  13  ,eur_g07
21:49:18  14  ,eur_g08
21:49:18  15  ,eur_g09
21:49:18  16  ,eur_g10
21:49:18  17  ,eur_g11
21:49:18  18  ,eur_g12
21:49:18  19  ,eur_g13
21:49:18  20  ,eur_g14
21:49:18  21  ,eur_g15
21:49:18  22  ,eur_g16
21:49:18  23  ,eur_g17
21:49:18  24  ,eur_g18
21:49:18  25  ,eur_g19
21:49:18  26  ,eur_g20
21:49:18  27  ,eur_g21
21:49:18  28  ,eur_g22
21:49:18  29  ,eur_g23
21:49:18  30  ,eur_g24
21:49:18  31  ,eur_g25
21:49:18  32  ,eur_g26
21:49:18  33  ,eur_g27
21:49:18  34  ,eur_g28
21:49:18  35  ,eur_g29
21:49:18  36  ,eur_g30
21:49:18  37  ,eur_g31
21:49:18  38  ,eur_g32
21:49:18  39  ,eur_g33
21:49:18  40  ,eur_g34
21:49:18  41  ,eur_g35
21:49:18  42  ,eur_g36
21:49:18  43  ,eur_g37
21:49:18  44  ,eur_g38
21:49:18  45  ,eur_g39
21:49:18  46  ,eur_g40
21:49:18  47  ,aud_g00
21:49:18  48  ,aud_g01
21:49:18  49  ,aud_g02
21:49:18  50  ,aud_g03
21:49:18  51  ,aud_g04
21:49:18  52  ,aud_g05
21:49:18  53  ,aud_g06
21:49:18  54  ,aud_g07
21:49:18  55  ,aud_g08
21:49:18  56  ,aud_g09
21:49:18  57  ,aud_g10
21:49:18  58  ,aud_g11
21:49:18  59  ,aud_g12
21:49:18  60  ,aud_g13
21:49:18  61  ,aud_g14
21:49:18  62  ,aud_g15
21:49:18  63  ,aud_g16
21:49:18  64  ,aud_g17
21:49:18  65  ,aud_g18
21:49:18  66  ,aud_g19
21:49:18  67  ,aud_g20
21:49:18  68  ,aud_g21
21:49:18  69  ,aud_g22
21:49:18  70  ,aud_g23
21:49:18  71  ,aud_g24
21:49:18  72  ,aud_g25
21:49:18  73  ,aud_g26
21:49:18  74  ,aud_g27
21:49:18  75  ,aud_g28
21:49:18  76  ,aud_g29
21:49:18  77  ,aud_g30
21:49:18  78  ,aud_g31
21:49:18  79  ,aud_g32
21:49:18  80  ,aud_g33
21:49:18  81  ,aud_g34
21:49:18  82  ,aud_g35
21:49:18  83  ,aud_g36
21:49:18  84  ,aud_g37
21:49:18  85  ,aud_g38
21:49:18  86  ,aud_g39
21:49:18  87  ,aud_g40
21:49:18  88  ,gbp_g00
21:49:18  89  ,gbp_g01
21:49:18  90  ,gbp_g02
21:49:18  91  ,gbp_g03
21:49:18  92  ,gbp_g04
21:49:18  93  ,gbp_g05
21:49:18  94  ,gbp_g06
21:49:18  95  ,gbp_g07
21:49:18  96  ,gbp_g08
21:49:18  97  ,gbp_g09
21:49:18  98  ,gbp_g10
21:49:18  99  ,gbp_g11
21:49:18 100  ,gbp_g12
21:49:18 101  ,gbp_g13
21:49:18 102  ,gbp_g14
21:49:18 103  ,gbp_g15
21:49:18 104  ,gbp_g16
21:49:18 105  ,gbp_g17
21:49:18 106  ,gbp_g18
21:49:18 107  ,gbp_g19
21:49:18 108  ,gbp_g20
21:49:18 109  ,gbp_g21
21:49:18 110  ,gbp_g22
21:49:18 111  ,gbp_g23
21:49:18 112  ,gbp_g24
21:49:18 113  ,gbp_g25
21:49:18 114  ,gbp_g26
21:49:18 115  ,gbp_g27
21:49:18 116  ,gbp_g28
21:49:18 117  ,gbp_g29
21:49:18 118  ,gbp_g30
21:49:18 119  ,gbp_g31
21:49:18 120  ,gbp_g32
21:49:18 121  ,gbp_g33
21:49:18 122  ,gbp_g34
21:49:18 123  ,gbp_g35
21:49:18 124  ,gbp_g36
21:49:18 125  ,gbp_g37
21:49:18 126  ,gbp_g38
21:49:18 127  ,gbp_g39
21:49:18 128  ,gbp_g40
21:49:18 129  ,jpy_g00
21:49:18 130  ,jpy_g01
21:49:18 131  ,jpy_g02
21:49:18 132  ,jpy_g03
21:49:18 133  ,jpy_g04
21:49:18 134  ,jpy_g05
21:49:18 135  ,jpy_g06
21:49:18 136  ,jpy_g07
21:49:18 137  ,jpy_g08
21:49:18 138  ,jpy_g09
21:49:18 139  ,jpy_g10
21:49:18 140  ,jpy_g11
21:49:18 141  ,jpy_g12
21:49:18 142  ,jpy_g13
21:49:18 143  ,jpy_g14
21:49:18 144  ,jpy_g15
21:49:18 145  ,jpy_g16
21:49:18 146  ,jpy_g17
21:49:18 147  ,jpy_g18
21:49:18 148  ,jpy_g19
21:49:18 149  ,jpy_g20
21:49:18 150  ,jpy_g21
21:49:18 151  ,jpy_g22
21:49:18 152  ,jpy_g23
21:49:18 153  ,jpy_g24
21:49:18 154  ,jpy_g25
21:49:18 155  ,jpy_g26
21:49:18 156  ,jpy_g27
21:49:18 157  ,jpy_g28
21:49:18 158  ,jpy_g29
21:49:18 159  ,jpy_g30
21:49:18 160  ,jpy_g31
21:49:18 161  ,jpy_g32
21:49:18 162  ,jpy_g33
21:49:18 163  ,jpy_g34
21:49:18 164  ,jpy_g35
21:49:18 165  ,jpy_g36
21:49:18 166  ,jpy_g37
21:49:18 167  ,jpy_g38
21:49:18 168  ,jpy_g39
21:49:18 169  ,jpy_g40
21:49:18 170  ,cad_g00
21:49:18 171  ,cad_g01
21:49:18 172  ,cad_g02
21:49:18 173  ,cad_g03
21:49:18 174  ,cad_g04
21:49:18 175  ,cad_g05
21:49:18 176  ,cad_g06
21:49:18 177  ,cad_g07
21:49:18 178  ,cad_g08
21:49:18 179  ,cad_g09
21:49:18 180  ,cad_g10
21:49:18 181  ,cad_g11
21:49:18 182  ,cad_g12
21:49:18 183  ,cad_g13
21:49:18 184  ,cad_g14
21:49:18 185  ,cad_g15
21:49:18 186  ,cad_g16
21:49:18 187  ,cad_g17
21:49:18 188  ,cad_g18
21:49:18 189  ,cad_g19
21:49:18 190  ,cad_g20
21:49:18 191  ,cad_g21
21:49:18 192  ,cad_g22
21:49:18 193  ,cad_g23
21:49:18 194  ,cad_g24
21:49:18 195  ,cad_g25
21:49:18 196  ,cad_g26
21:49:18 197  ,cad_g27
21:49:18 198  ,cad_g28
21:49:18 199  ,cad_g29
21:49:18 200  ,cad_g30
21:49:18 201  ,cad_g31
21:49:18 202  ,cad_g32
21:49:18 203  ,cad_g33
21:49:18 204  ,cad_g34
21:49:18 205  ,cad_g35
21:49:18 206  ,cad_g36
21:49:18 207  ,cad_g37
21:49:18 208  ,cad_g38
21:49:18 209  ,cad_g39
21:49:18 210  ,cad_g40
21:49:18 211  ,chf_g00
21:49:18 212  ,chf_g01
21:49:18 213  ,chf_g02
21:49:18 214  ,chf_g03
21:49:18 215  ,chf_g04
21:49:18 216  ,chf_g05
21:49:18 217  ,chf_g06
21:49:18 218  ,chf_g07
21:49:18 219  ,chf_g08
21:49:18 220  ,chf_g09
21:49:18 221  ,chf_g10
21:49:18 222  ,chf_g11
21:49:18 223  ,chf_g12
21:49:18 224  ,chf_g13
21:49:18 225  ,chf_g14
21:49:18 226  ,chf_g15
21:49:18 227  ,chf_g16
21:49:18 228  ,chf_g17
21:49:18 229  ,chf_g18
21:49:18 230  ,chf_g19
21:49:18 231  ,chf_g20
21:49:18 232  ,chf_g21
21:49:18 233  ,chf_g22
21:49:18 234  ,chf_g23
21:49:18 235  ,chf_g24
21:49:18 236  ,chf_g25
21:49:18 237  ,chf_g26
21:49:18 238  ,chf_g27
21:49:18 239  ,chf_g28
21:49:18 240  ,chf_g29
21:49:18 241  ,chf_g30
21:49:18 242  ,chf_g31
21:49:18 243  ,chf_g32
21:49:18 244  ,chf_g33
21:49:18 245  ,chf_g34
21:49:18 246  ,chf_g35
21:49:18 247  ,chf_g36
21:49:18 248  ,chf_g37
21:49:18 249  ,chf_g38
21:49:18 250  ,chf_g39
21:49:18 251  ,chf_g40
21:49:18 252  FROM chf_ms14 m
21:49:18 253  WHERE m.ydate = '&1'||' '||'&2'
21:49:18 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'08:30:00'

View created.

Elapsed: 00:00:00.14
21:49:18 SQL> 
21:49:18 SQL> -- rpt
21:49:18 SQL> -- We should see just 1 row:
21:49:18 SQL> 
21:49:18 SQL> SELECT COUNT(prdate) FROM sme
21:49:18   2  
21:49:18 SQL> -- Build the model:
21:49:18 SQL> CREATE OR REPLACE VIEW bme AS
21:49:18   2  SELECT
21:49:18   3  'chf'||m.ydate prdate
21:49:18   4  ,gattn
21:49:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:49:18   6  ,eur_g00
21:49:18   7  ,eur_g01
21:49:18   8  ,eur_g02
21:49:18   9  ,eur_g03
21:49:18  10  ,eur_g04
21:49:18  11  ,eur_g05
21:49:18  12  ,eur_g06
21:49:18  13  ,eur_g07
21:49:18  14  ,eur_g08
21:49:18  15  ,eur_g09
21:49:18  16  ,eur_g10
21:49:18  17  ,eur_g11
21:49:18  18  ,eur_g12
21:49:18  19  ,eur_g13
21:49:18  20  ,eur_g14
21:49:18  21  ,eur_g15
21:49:18  22  ,eur_g16
21:49:18  23  ,eur_g17
21:49:18  24  ,eur_g18
21:49:18  25  ,eur_g19
21:49:18  26  ,eur_g20
21:49:18  27  ,eur_g21
21:49:18  28  ,eur_g22
21:49:18  29  ,eur_g23
21:49:18  30  ,eur_g24
21:49:18  31  ,eur_g25
21:49:18  32  ,eur_g26
21:49:18  33  ,eur_g27
21:49:18  34  ,eur_g28
21:49:18  35  ,eur_g29
21:49:18  36  ,eur_g30
21:49:18  37  ,eur_g31
21:49:18  38  ,eur_g32
21:49:18  39  ,eur_g33
21:49:18  40  ,eur_g34
21:49:18  41  ,eur_g35
21:49:18  42  ,eur_g36
21:49:18  43  ,eur_g37
21:49:18  44  ,eur_g38
21:49:18  45  ,eur_g39
21:49:18  46  ,eur_g40
21:49:18  47  ,aud_g00
21:49:18  48  ,aud_g01
21:49:18  49  ,aud_g02
21:49:18  50  ,aud_g03
21:49:18  51  ,aud_g04
21:49:18  52  ,aud_g05
21:49:18  53  ,aud_g06
21:49:18  54  ,aud_g07
21:49:18  55  ,aud_g08
21:49:18  56  ,aud_g09
21:49:18  57  ,aud_g10
21:49:18  58  ,aud_g11
21:49:18  59  ,aud_g12
21:49:18  60  ,aud_g13
21:49:18  61  ,aud_g14
21:49:18  62  ,aud_g15
21:49:18  63  ,aud_g16
21:49:18  64  ,aud_g17
21:49:18  65  ,aud_g18
21:49:18  66  ,aud_g19
21:49:18  67  ,aud_g20
21:49:18  68  ,aud_g21
21:49:18  69  ,aud_g22
21:49:18  70  ,aud_g23
21:49:18  71  ,aud_g24
21:49:18  72  ,aud_g25
21:49:18  73  ,aud_g26
21:49:18  74  ,aud_g27
21:49:18  75  ,aud_g28
21:49:18  76  ,aud_g29
21:49:18  77  ,aud_g30
21:49:18  78  ,aud_g31
21:49:18  79  ,aud_g32
21:49:18  80  ,aud_g33
21:49:18  81  ,aud_g34
21:49:18  82  ,aud_g35
21:49:18  83  ,aud_g36
21:49:18  84  ,aud_g37
21:49:18  85  ,aud_g38
21:49:18  86  ,aud_g39
21:49:18  87  ,aud_g40
21:49:18  88  ,gbp_g00
21:49:18  89  ,gbp_g01
21:49:18  90  ,gbp_g02
21:49:18  91  ,gbp_g03
21:49:18  92  ,gbp_g04
21:49:18  93  ,gbp_g05
21:49:18  94  ,gbp_g06
21:49:18  95  ,gbp_g07
21:49:18  96  ,gbp_g08
21:49:18  97  ,gbp_g09
21:49:18  98  ,gbp_g10
21:49:18  99  ,gbp_g11
21:49:18 100  ,gbp_g12
21:49:18 101  ,gbp_g13
21:49:18 102  ,gbp_g14
21:49:18 103  ,gbp_g15
21:49:18 104  ,gbp_g16
21:49:18 105  ,gbp_g17
21:49:18 106  ,gbp_g18
21:49:18 107  ,gbp_g19
21:49:18 108  ,gbp_g20
21:49:18 109  ,gbp_g21
21:49:18 110  ,gbp_g22
21:49:18 111  ,gbp_g23
21:49:18 112  ,gbp_g24
21:49:18 113  ,gbp_g25
21:49:18 114  ,gbp_g26
21:49:18 115  ,gbp_g27
21:49:18 116  ,gbp_g28
21:49:18 117  ,gbp_g29
21:49:18 118  ,gbp_g30
21:49:18 119  ,gbp_g31
21:49:18 120  ,gbp_g32
21:49:18 121  ,gbp_g33
21:49:18 122  ,gbp_g34
21:49:18 123  ,gbp_g35
21:49:18 124  ,gbp_g36
21:49:18 125  ,gbp_g37
21:49:18 126  ,gbp_g38
21:49:18 127  ,gbp_g39
21:49:18 128  ,gbp_g40
21:49:18 129  ,jpy_g00
21:49:18 130  ,jpy_g01
21:49:18 131  ,jpy_g02
21:49:18 132  ,jpy_g03
21:49:18 133  ,jpy_g04
21:49:18 134  ,jpy_g05
21:49:18 135  ,jpy_g06
21:49:18 136  ,jpy_g07
21:49:18 137  ,jpy_g08
21:49:18 138  ,jpy_g09
21:49:18 139  ,jpy_g10
21:49:18 140  ,jpy_g11
21:49:18 141  ,jpy_g12
21:49:18 142  ,jpy_g13
21:49:18 143  ,jpy_g14
21:49:18 144  ,jpy_g15
21:49:18 145  ,jpy_g16
21:49:18 146  ,jpy_g17
21:49:18 147  ,jpy_g18
21:49:18 148  ,jpy_g19
21:49:18 149  ,jpy_g20
21:49:18 150  ,jpy_g21
21:49:18 151  ,jpy_g22
21:49:18 152  ,jpy_g23
21:49:18 153  ,jpy_g24
21:49:18 154  ,jpy_g25
21:49:18 155  ,jpy_g26
21:49:18 156  ,jpy_g27
21:49:18 157  ,jpy_g28
21:49:18 158  ,jpy_g29
21:49:18 159  ,jpy_g30
21:49:18 160  ,jpy_g31
21:49:18 161  ,jpy_g32
21:49:18 162  ,jpy_g33
21:49:18 163  ,jpy_g34
21:49:18 164  ,jpy_g35
21:49:18 165  ,jpy_g36
21:49:18 166  ,jpy_g37
21:49:18 167  ,jpy_g38
21:49:18 168  ,jpy_g39
21:49:18 169  ,jpy_g40
21:49:18 170  ,cad_g00
21:49:18 171  ,cad_g01
21:49:18 172  ,cad_g02
21:49:18 173  ,cad_g03
21:49:18 174  ,cad_g04
21:49:18 175  ,cad_g05
21:49:18 176  ,cad_g06
21:49:18 177  ,cad_g07
21:49:18 178  ,cad_g08
21:49:18 179  ,cad_g09
21:49:18 180  ,cad_g10
21:49:18 181  ,cad_g11
21:49:18 182  ,cad_g12
21:49:18 183  ,cad_g13
21:49:18 184  ,cad_g14
21:49:18 185  ,cad_g15
21:49:18 186  ,cad_g16
21:49:18 187  ,cad_g17
21:49:18 188  ,cad_g18
21:49:18 189  ,cad_g19
21:49:18 190  ,cad_g20
21:49:18 191  ,cad_g21
21:49:18 192  ,cad_g22
21:49:18 193  ,cad_g23
21:49:18 194  ,cad_g24
21:49:18 195  ,cad_g25
21:49:18 196  ,cad_g26
21:49:18 197  ,cad_g27
21:49:18 198  ,cad_g28
21:49:18 199  ,cad_g29
21:49:18 200  ,cad_g30
21:49:18 201  ,cad_g31
21:49:18 202  ,cad_g32
21:49:18 203  ,cad_g33
21:49:18 204  ,cad_g34
21:49:18 205  ,cad_g35
21:49:18 206  ,cad_g36
21:49:18 207  ,cad_g37
21:49:18 208  ,cad_g38
21:49:18 209  ,cad_g39
21:49:18 210  ,cad_g40
21:49:18 211  ,chf_g00
21:49:18 212  ,chf_g01
21:49:18 213  ,chf_g02
21:49:18 214  ,chf_g03
21:49:18 215  ,chf_g04
21:49:18 216  ,chf_g05
21:49:18 217  ,chf_g06
21:49:18 218  ,chf_g07
21:49:18 219  ,chf_g08
21:49:18 220  ,chf_g09
21:49:18 221  ,chf_g10
21:49:18 222  ,chf_g11
21:49:18 223  ,chf_g12
21:49:18 224  ,chf_g13
21:49:18 225  ,chf_g14
21:49:18 226  ,chf_g15
21:49:18 227  ,chf_g16
21:49:18 228  ,chf_g17
21:49:18 229  ,chf_g18
21:49:18 230  ,chf_g19
21:49:18 231  ,chf_g20
21:49:18 232  ,chf_g21
21:49:18 233  ,chf_g22
21:49:18 234  ,chf_g23
21:49:18 235  ,chf_g24
21:49:18 236  ,chf_g25
21:49:18 237  ,chf_g26
21:49:18 238  ,chf_g27
21:49:18 239  ,chf_g28
21:49:18 240  ,chf_g29
21:49:18 241  ,chf_g30
21:49:18 242  ,chf_g31
21:49:18 243  ,chf_g32
21:49:18 244  ,chf_g33
21:49:18 245  ,chf_g34
21:49:18 246  ,chf_g35
21:49:18 247  ,chf_g36
21:49:18 248  ,chf_g37
21:49:18 249  ,chf_g38
21:49:18 250  ,chf_g39
21:49:18 251  ,chf_g40
21:49:18 252  FROM chf_ms14 m
21:49:18 253  WHERE gattn IN('nup','up')
21:49:18 254  AND 1+m.ydate < '&1'||' '||'&2'
21:49:18 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'08:30:00'

View created.

Elapsed: 00:00:00.13
21:49:18 SQL> 
21:49:18 SQL> -- rpt
21:49:18 SQL> 
21:49:18 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:49:18   2  
21:49:18 SQL> SELECT MAX(prdate) FROM bme
21:49:18   2  
21:49:18 SQL> -- Now build model from bme and score sme
21:49:18 SQL> @score1gattn.sql
21:49:18 SQL> -- score1gattn.sql
21:49:18 SQL> 
21:49:18 SQL> -- Does the 1st SVM score
21:49:18 SQL> 
21:49:18 SQL> -- Fill up svmc_apply_prep
21:49:18 SQL> @score_gattn.sql
21:49:18 SQL> --
21:49:18 SQL> -- score_gattn.sql
21:49:18 SQL> --
21:49:18 SQL> 
21:49:18 SQL> -- usage: score_gattn.sql
21:49:18 SQL> 
21:49:18 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:49:18 SQL> 
21:49:18 SQL> DEFINE target	= 'gattn'
21:49:18 SQL> DEFINE model_name = 'forex14'
21:49:18 SQL> DEFINE bldtable	= 'bme'
21:49:18 SQL> DEFINE scoretable = 'sme'
21:49:18 SQL> DEFINE case_id	= 'prdate'
21:49:18 SQL> 
21:49:18 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:49:18 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:49:18 SQL> 
21:49:18 SQL> -- Builds an SVM model using pl/sql.
21:49:18 SQL> 
21:49:18 SQL> -----------------------------------------------------------------------
21:49:18 SQL> --			    BUILD THE MODEL
21:49:18 SQL> -----------------------------------------------------------------------
21:49:18 SQL> 
21:49:18 SQL> -- Cleanup old build data preparation objects for repeat runs
21:49:18 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:49:18 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:49:18 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:49:18 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:49:18 SQL> 
21:49:18 SQL> 
21:49:18 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:49:18 SQL> --
21:49:18 SQL> -- DROP	TABLE svmc_settings ;
21:49:18 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:49:18 SQL> -- DELETE svmc_settings;
21:49:18 SQL> 
21:49:18 SQL> -- The default classification algorithm is Naive Bayes. So override
21:49:18 SQL> -- this choice to SVM using a settings table.
21:49:18 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:49:18 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:49:18 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:49:18 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:49:18 SQL> -- models.
21:49:18 SQL> --
21:49:18 SQL> 
21:49:18 SQL> -- Do this once and then comment it out.
21:49:18 SQL> -- That makes script go faster.
21:49:18 SQL> -- BEGIN
21:49:18 SQL> -- -- Populate settings table
21:49:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:49:18 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:49:18 SQL> --
21:49:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:49:18 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:49:18 SQL> --
21:49:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:49:18 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:49:18 SQL> --   COMMIT;
21:49:18 SQL> -- END;
21:49:18 SQL> -- /
21:49:18 SQL> 
21:49:18 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:49:18 SQL> 
21:49:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:49:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:49:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:49:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:49:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:49:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:49:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:49:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:49:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:49:19 SQL> 
21:49:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:49:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:49:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:49:19 SQL> 
21:49:19 SQL> --------------------------------
21:49:19 SQL> -- PREPARE BUILD (TRAINING) DATA
21:49:19 SQL> --
21:49:19 SQL> 
21:49:19 SQL> -- 1. Missing Value treatment for all Predictors and
21:49:19 SQL> -- 2. Outlier Treatment and
21:49:19 SQL> -- 3. Normalization are performed below.
21:49:19 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:49:19 SQL> --    normalized here.
21:49:19 SQL> 
21:49:19 SQL> BEGIN
21:49:19   2  	-- Perform missing value treatment for all predictors
21:49:19   3  	-- create miss tables
21:49:19   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:49:19   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:49:19   6  
21:49:19   7  	-- populate miss tables
21:49:19   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:49:19   9  	  miss_table_name => 'svmc_miss_num',
21:49:19  10  	  data_table_name => '&bldtable',
21:49:19  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:49:19  12  
21:49:19  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:49:19  14  	  miss_table_name => 'svmc_miss_cat',
21:49:19  15  	  data_table_name => '&bldtable',
21:49:19  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:49:19  17  
21:49:19  18  	-- xform input data to replace missing values
21:49:19  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:49:19  20  	  miss_table_name => 'svmc_miss_num',
21:49:19  21  	  data_table_name => '&bldtable',
21:49:19  22  	  xform_view_name => 'xformed_build_miss_num');
21:49:19  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:49:19  24  	  miss_table_name => 'svmc_miss_cat',
21:49:19  25  	  data_table_name => '&bldtable',
21:49:19  26  	  xform_view_name => 'xformed_build_miss_cat');
21:49:19  27  
21:49:19  28  	-- Perform outlier treatment.
21:49:19  29  	-- create clip table
21:49:19  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:49:19  31  
21:49:19  32  	-- populate clip table
21:49:19  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:49:19  34  	  clip_table_name => 'svmc_clip',
21:49:19  35  	  data_table_name => '&bldtable',
21:49:19  36  	  tail_frac	  => 0.025,
21:49:19  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:49:19  38  
21:49:19  39  	-- xform input data to winsorized data
21:49:19  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:49:19  41  	  clip_table_name => 'svmc_clip',
21:49:19  42  	  data_table_name => '&bldtable',
21:49:19  43  	  xform_view_name => 'svmc_winsor');
21:49:19  44  
21:49:19  45  	-- create normalization table
21:49:19  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:49:19  47  
21:49:19  48  	-- populate normalization table based on winsorized data
21:49:19  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:49:19  50  	  norm_table_name => 'svmc_norm',
21:49:19  51  	  data_table_name => 'svmc_winsor',
21:49:19  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:49:19  53  
21:49:19  54  	-- normalize the original data
21:49:19  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:49:19  56  	  norm_table_name => 'svmc_norm',
21:49:19  57  	  data_table_name => '&bldtable',
21:49:19  58  	  xform_view_name => 'svmc_build_prep');
21:49:19  59  END;
21:49:19  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.92
21:49:37 SQL> 
21:49:37 SQL> ---------------------
21:49:37 SQL> -- CREATE A NEW MODEL
21:49:37 SQL> --
21:49:37 SQL> -- Cleanup old model with the same name for repeat runs
21:49:37 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:49:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:49:37   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.09
21:49:38 SQL> 
21:49:38 SQL> -- Build a new SVM Model
21:49:38 SQL> BEGIN
21:49:38   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:49:38   3  	  model_name	      => '&model_name',
21:49:38   4  	  mining_function     => dbms_data_mining.classification,
21:49:38   5  	  data_table_name     => 'svmc_build_prep',
21:49:38   6  	  case_id_column_name => '&case_id',
21:49:38   7  	  target_column_name  => '&target',
21:49:38   8  	  settings_table_name => 'svmc_settings');
21:49:38   9  END;
21:49:38  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.11
21:50:05 SQL> 
21:50:05 SQL> -----------------------------------------------------------------------
21:50:05 SQL> --			       APPLY/score THE MODEL
21:50:05 SQL> -----------------------------------------------------------------------
21:50:05 SQL> 
21:50:05 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:50:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:50:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:50:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:50:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:50:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:50:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:50:05 SQL> -----------------------
21:50:05 SQL> -- PREPARE SCORING DATA
21:50:05 SQL> --
21:50:05 SQL> -- If the data for model creation has been prepared, then the data
21:50:05 SQL> -- to be scored using the model must be prepared in the same manner
21:50:05 SQL> -- in order to obtain meaningful results.
21:50:05 SQL> --
21:50:05 SQL> -- 1. Missing Value treatment for all Predictors and
21:50:05 SQL> -- 2. Normalization
21:50:05 SQL> -- No outlier treatment will be performed during test and apply. The
21:50:05 SQL> -- normalization step is sufficient, since the normalization parameters
21:50:05 SQL> -- already capture the effects of outlier treatment done with build data.
21:50:05 SQL> --
21:50:05 SQL> BEGIN
21:50:05   2  	-- Xform Test data to replace missing values
21:50:05   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:50:05   4  	  miss_table_name => 'svmc_miss_num',
21:50:05   5  	  data_table_name => '&scoretable',
21:50:05   6  	  xform_view_name => 'xformed_apply_miss_num');
21:50:05   7  
21:50:05   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:50:05   9  	  miss_table_name => 'svmc_miss_cat',
21:50:05  10  	  data_table_name => '&scoretable',
21:50:05  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:50:05  12  
21:50:05  13  	-- Normalize the data to be scored
21:50:05  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:50:05  15  	  norm_table_name => 'svmc_norm',
21:50:05  16  	  data_table_name => '&scoretable',
21:50:05  17  	  xform_view_name => 'svmc_apply_prep');
21:50:05  18  END;
21:50:05  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.10
21:50:06 SQL> 
21:50:06 SQL> -- Use same model_name used in score_gattn.sql
21:50:06 SQL> DEFINE model_name = 'forex14'
21:50:06 SQL> 
21:50:06 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:50:06 SQL> 
21:50:06 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:50:06   2  SELECT
21:50:06   3  prdate
21:50:06   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:50:06   5  ,sysdate
21:50:06   6  ,SUBSTR(prdate,1,3)pair
21:50:06   7  ,SUBSTR(prdate,4,19)ydate
21:50:06   8  FROM svmc_apply_prep
21:50:06   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:50:06 SQL> @chf_score1day_gattn.sql	2010-12-17 08:25:00
21:50:06 SQL> --
21:50:06 SQL> -- chf_score1day_gattn.sql
21:50:06 SQL> --
21:50:06 SQL> 
21:50:06 SQL> CREATE OR REPLACE VIEW sme AS
21:50:06   2  SELECT
21:50:06   3  'chf'||m.ydate prdate
21:50:06   4  ,NULL gattn
21:50:06   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:50:06   6  ,eur_g00
21:50:06   7  ,eur_g01
21:50:06   8  ,eur_g02
21:50:06   9  ,eur_g03
21:50:06  10  ,eur_g04
21:50:06  11  ,eur_g05
21:50:06  12  ,eur_g06
21:50:06  13  ,eur_g07
21:50:06  14  ,eur_g08
21:50:06  15  ,eur_g09
21:50:06  16  ,eur_g10
21:50:06  17  ,eur_g11
21:50:06  18  ,eur_g12
21:50:06  19  ,eur_g13
21:50:06  20  ,eur_g14
21:50:06  21  ,eur_g15
21:50:06  22  ,eur_g16
21:50:06  23  ,eur_g17
21:50:06  24  ,eur_g18
21:50:06  25  ,eur_g19
21:50:06  26  ,eur_g20
21:50:06  27  ,eur_g21
21:50:06  28  ,eur_g22
21:50:06  29  ,eur_g23
21:50:06  30  ,eur_g24
21:50:06  31  ,eur_g25
21:50:06  32  ,eur_g26
21:50:06  33  ,eur_g27
21:50:06  34  ,eur_g28
21:50:06  35  ,eur_g29
21:50:06  36  ,eur_g30
21:50:06  37  ,eur_g31
21:50:06  38  ,eur_g32
21:50:06  39  ,eur_g33
21:50:06  40  ,eur_g34
21:50:06  41  ,eur_g35
21:50:06  42  ,eur_g36
21:50:06  43  ,eur_g37
21:50:06  44  ,eur_g38
21:50:06  45  ,eur_g39
21:50:06  46  ,eur_g40
21:50:06  47  ,aud_g00
21:50:06  48  ,aud_g01
21:50:06  49  ,aud_g02
21:50:06  50  ,aud_g03
21:50:06  51  ,aud_g04
21:50:06  52  ,aud_g05
21:50:06  53  ,aud_g06
21:50:06  54  ,aud_g07
21:50:06  55  ,aud_g08
21:50:06  56  ,aud_g09
21:50:06  57  ,aud_g10
21:50:06  58  ,aud_g11
21:50:06  59  ,aud_g12
21:50:06  60  ,aud_g13
21:50:06  61  ,aud_g14
21:50:06  62  ,aud_g15
21:50:06  63  ,aud_g16
21:50:06  64  ,aud_g17
21:50:06  65  ,aud_g18
21:50:06  66  ,aud_g19
21:50:06  67  ,aud_g20
21:50:06  68  ,aud_g21
21:50:06  69  ,aud_g22
21:50:06  70  ,aud_g23
21:50:06  71  ,aud_g24
21:50:06  72  ,aud_g25
21:50:06  73  ,aud_g26
21:50:06  74  ,aud_g27
21:50:06  75  ,aud_g28
21:50:06  76  ,aud_g29
21:50:06  77  ,aud_g30
21:50:06  78  ,aud_g31
21:50:06  79  ,aud_g32
21:50:06  80  ,aud_g33
21:50:06  81  ,aud_g34
21:50:06  82  ,aud_g35
21:50:06  83  ,aud_g36
21:50:06  84  ,aud_g37
21:50:06  85  ,aud_g38
21:50:06  86  ,aud_g39
21:50:06  87  ,aud_g40
21:50:06  88  ,gbp_g00
21:50:06  89  ,gbp_g01
21:50:06  90  ,gbp_g02
21:50:06  91  ,gbp_g03
21:50:06  92  ,gbp_g04
21:50:06  93  ,gbp_g05
21:50:06  94  ,gbp_g06
21:50:06  95  ,gbp_g07
21:50:06  96  ,gbp_g08
21:50:06  97  ,gbp_g09
21:50:06  98  ,gbp_g10
21:50:06  99  ,gbp_g11
21:50:06 100  ,gbp_g12
21:50:06 101  ,gbp_g13
21:50:06 102  ,gbp_g14
21:50:06 103  ,gbp_g15
21:50:06 104  ,gbp_g16
21:50:06 105  ,gbp_g17
21:50:06 106  ,gbp_g18
21:50:06 107  ,gbp_g19
21:50:06 108  ,gbp_g20
21:50:06 109  ,gbp_g21
21:50:06 110  ,gbp_g22
21:50:06 111  ,gbp_g23
21:50:06 112  ,gbp_g24
21:50:06 113  ,gbp_g25
21:50:06 114  ,gbp_g26
21:50:06 115  ,gbp_g27
21:50:06 116  ,gbp_g28
21:50:06 117  ,gbp_g29
21:50:06 118  ,gbp_g30
21:50:06 119  ,gbp_g31
21:50:06 120  ,gbp_g32
21:50:06 121  ,gbp_g33
21:50:06 122  ,gbp_g34
21:50:06 123  ,gbp_g35
21:50:06 124  ,gbp_g36
21:50:06 125  ,gbp_g37
21:50:06 126  ,gbp_g38
21:50:06 127  ,gbp_g39
21:50:06 128  ,gbp_g40
21:50:06 129  ,jpy_g00
21:50:06 130  ,jpy_g01
21:50:06 131  ,jpy_g02
21:50:06 132  ,jpy_g03
21:50:06 133  ,jpy_g04
21:50:06 134  ,jpy_g05
21:50:06 135  ,jpy_g06
21:50:06 136  ,jpy_g07
21:50:06 137  ,jpy_g08
21:50:06 138  ,jpy_g09
21:50:06 139  ,jpy_g10
21:50:06 140  ,jpy_g11
21:50:06 141  ,jpy_g12
21:50:06 142  ,jpy_g13
21:50:06 143  ,jpy_g14
21:50:06 144  ,jpy_g15
21:50:06 145  ,jpy_g16
21:50:06 146  ,jpy_g17
21:50:06 147  ,jpy_g18
21:50:06 148  ,jpy_g19
21:50:06 149  ,jpy_g20
21:50:06 150  ,jpy_g21
21:50:06 151  ,jpy_g22
21:50:06 152  ,jpy_g23
21:50:06 153  ,jpy_g24
21:50:06 154  ,jpy_g25
21:50:06 155  ,jpy_g26
21:50:06 156  ,jpy_g27
21:50:06 157  ,jpy_g28
21:50:06 158  ,jpy_g29
21:50:06 159  ,jpy_g30
21:50:06 160  ,jpy_g31
21:50:06 161  ,jpy_g32
21:50:06 162  ,jpy_g33
21:50:06 163  ,jpy_g34
21:50:06 164  ,jpy_g35
21:50:06 165  ,jpy_g36
21:50:06 166  ,jpy_g37
21:50:06 167  ,jpy_g38
21:50:06 168  ,jpy_g39
21:50:06 169  ,jpy_g40
21:50:06 170  ,cad_g00
21:50:06 171  ,cad_g01
21:50:06 172  ,cad_g02
21:50:06 173  ,cad_g03
21:50:06 174  ,cad_g04
21:50:06 175  ,cad_g05
21:50:06 176  ,cad_g06
21:50:06 177  ,cad_g07
21:50:06 178  ,cad_g08
21:50:06 179  ,cad_g09
21:50:06 180  ,cad_g10
21:50:06 181  ,cad_g11
21:50:06 182  ,cad_g12
21:50:06 183  ,cad_g13
21:50:06 184  ,cad_g14
21:50:06 185  ,cad_g15
21:50:06 186  ,cad_g16
21:50:06 187  ,cad_g17
21:50:06 188  ,cad_g18
21:50:06 189  ,cad_g19
21:50:06 190  ,cad_g20
21:50:06 191  ,cad_g21
21:50:06 192  ,cad_g22
21:50:06 193  ,cad_g23
21:50:06 194  ,cad_g24
21:50:06 195  ,cad_g25
21:50:06 196  ,cad_g26
21:50:06 197  ,cad_g27
21:50:06 198  ,cad_g28
21:50:06 199  ,cad_g29
21:50:06 200  ,cad_g30
21:50:06 201  ,cad_g31
21:50:06 202  ,cad_g32
21:50:06 203  ,cad_g33
21:50:06 204  ,cad_g34
21:50:06 205  ,cad_g35
21:50:06 206  ,cad_g36
21:50:06 207  ,cad_g37
21:50:06 208  ,cad_g38
21:50:06 209  ,cad_g39
21:50:06 210  ,cad_g40
21:50:06 211  ,chf_g00
21:50:06 212  ,chf_g01
21:50:06 213  ,chf_g02
21:50:06 214  ,chf_g03
21:50:06 215  ,chf_g04
21:50:06 216  ,chf_g05
21:50:06 217  ,chf_g06
21:50:06 218  ,chf_g07
21:50:06 219  ,chf_g08
21:50:06 220  ,chf_g09
21:50:06 221  ,chf_g10
21:50:06 222  ,chf_g11
21:50:06 223  ,chf_g12
21:50:06 224  ,chf_g13
21:50:06 225  ,chf_g14
21:50:06 226  ,chf_g15
21:50:06 227  ,chf_g16
21:50:06 228  ,chf_g17
21:50:06 229  ,chf_g18
21:50:06 230  ,chf_g19
21:50:06 231  ,chf_g20
21:50:06 232  ,chf_g21
21:50:06 233  ,chf_g22
21:50:06 234  ,chf_g23
21:50:06 235  ,chf_g24
21:50:06 236  ,chf_g25
21:50:06 237  ,chf_g26
21:50:06 238  ,chf_g27
21:50:06 239  ,chf_g28
21:50:06 240  ,chf_g29
21:50:06 241  ,chf_g30
21:50:06 242  ,chf_g31
21:50:06 243  ,chf_g32
21:50:06 244  ,chf_g33
21:50:06 245  ,chf_g34
21:50:06 246  ,chf_g35
21:50:06 247  ,chf_g36
21:50:06 248  ,chf_g37
21:50:06 249  ,chf_g38
21:50:06 250  ,chf_g39
21:50:06 251  ,chf_g40
21:50:06 252  FROM chf_ms14 m
21:50:06 253  WHERE m.ydate = '&1'||' '||'&2'
21:50:06 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'08:25:00'

View created.

Elapsed: 00:00:00.12
21:50:06 SQL> 
21:50:06 SQL> -- rpt
21:50:06 SQL> -- We should see just 1 row:
21:50:06 SQL> 
21:50:06 SQL> SELECT COUNT(prdate) FROM sme
21:50:06   2  
21:50:06 SQL> -- Build the model:
21:50:06 SQL> CREATE OR REPLACE VIEW bme AS
21:50:06   2  SELECT
21:50:06   3  'chf'||m.ydate prdate
21:50:06   4  ,gattn
21:50:06   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:50:06   6  ,eur_g00
21:50:06   7  ,eur_g01
21:50:06   8  ,eur_g02
21:50:06   9  ,eur_g03
21:50:06  10  ,eur_g04
21:50:06  11  ,eur_g05
21:50:06  12  ,eur_g06
21:50:06  13  ,eur_g07
21:50:06  14  ,eur_g08
21:50:06  15  ,eur_g09
21:50:06  16  ,eur_g10
21:50:06  17  ,eur_g11
21:50:06  18  ,eur_g12
21:50:06  19  ,eur_g13
21:50:06  20  ,eur_g14
21:50:06  21  ,eur_g15
21:50:06  22  ,eur_g16
21:50:06  23  ,eur_g17
21:50:06  24  ,eur_g18
21:50:06  25  ,eur_g19
21:50:06  26  ,eur_g20
21:50:06  27  ,eur_g21
21:50:06  28  ,eur_g22
21:50:06  29  ,eur_g23
21:50:06  30  ,eur_g24
21:50:06  31  ,eur_g25
21:50:06  32  ,eur_g26
21:50:06  33  ,eur_g27
21:50:06  34  ,eur_g28
21:50:06  35  ,eur_g29
21:50:06  36  ,eur_g30
21:50:06  37  ,eur_g31
21:50:06  38  ,eur_g32
21:50:06  39  ,eur_g33
21:50:06  40  ,eur_g34
21:50:06  41  ,eur_g35
21:50:06  42  ,eur_g36
21:50:06  43  ,eur_g37
21:50:06  44  ,eur_g38
21:50:06  45  ,eur_g39
21:50:06  46  ,eur_g40
21:50:06  47  ,aud_g00
21:50:06  48  ,aud_g01
21:50:06  49  ,aud_g02
21:50:06  50  ,aud_g03
21:50:06  51  ,aud_g04
21:50:06  52  ,aud_g05
21:50:06  53  ,aud_g06
21:50:06  54  ,aud_g07
21:50:06  55  ,aud_g08
21:50:06  56  ,aud_g09
21:50:06  57  ,aud_g10
21:50:06  58  ,aud_g11
21:50:06  59  ,aud_g12
21:50:06  60  ,aud_g13
21:50:06  61  ,aud_g14
21:50:06  62  ,aud_g15
21:50:06  63  ,aud_g16
21:50:06  64  ,aud_g17
21:50:06  65  ,aud_g18
21:50:06  66  ,aud_g19
21:50:06  67  ,aud_g20
21:50:06  68  ,aud_g21
21:50:06  69  ,aud_g22
21:50:06  70  ,aud_g23
21:50:06  71  ,aud_g24
21:50:06  72  ,aud_g25
21:50:06  73  ,aud_g26
21:50:06  74  ,aud_g27
21:50:06  75  ,aud_g28
21:50:06  76  ,aud_g29
21:50:06  77  ,aud_g30
21:50:06  78  ,aud_g31
21:50:06  79  ,aud_g32
21:50:06  80  ,aud_g33
21:50:06  81  ,aud_g34
21:50:06  82  ,aud_g35
21:50:06  83  ,aud_g36
21:50:06  84  ,aud_g37
21:50:06  85  ,aud_g38
21:50:06  86  ,aud_g39
21:50:06  87  ,aud_g40
21:50:06  88  ,gbp_g00
21:50:06  89  ,gbp_g01
21:50:06  90  ,gbp_g02
21:50:06  91  ,gbp_g03
21:50:06  92  ,gbp_g04
21:50:06  93  ,gbp_g05
21:50:06  94  ,gbp_g06
21:50:06  95  ,gbp_g07
21:50:06  96  ,gbp_g08
21:50:06  97  ,gbp_g09
21:50:06  98  ,gbp_g10
21:50:06  99  ,gbp_g11
21:50:06 100  ,gbp_g12
21:50:06 101  ,gbp_g13
21:50:06 102  ,gbp_g14
21:50:06 103  ,gbp_g15
21:50:06 104  ,gbp_g16
21:50:06 105  ,gbp_g17
21:50:06 106  ,gbp_g18
21:50:06 107  ,gbp_g19
21:50:06 108  ,gbp_g20
21:50:06 109  ,gbp_g21
21:50:06 110  ,gbp_g22
21:50:06 111  ,gbp_g23
21:50:06 112  ,gbp_g24
21:50:06 113  ,gbp_g25
21:50:06 114  ,gbp_g26
21:50:06 115  ,gbp_g27
21:50:06 116  ,gbp_g28
21:50:06 117  ,gbp_g29
21:50:06 118  ,gbp_g30
21:50:06 119  ,gbp_g31
21:50:06 120  ,gbp_g32
21:50:06 121  ,gbp_g33
21:50:06 122  ,gbp_g34
21:50:06 123  ,gbp_g35
21:50:06 124  ,gbp_g36
21:50:06 125  ,gbp_g37
21:50:06 126  ,gbp_g38
21:50:06 127  ,gbp_g39
21:50:06 128  ,gbp_g40
21:50:06 129  ,jpy_g00
21:50:06 130  ,jpy_g01
21:50:06 131  ,jpy_g02
21:50:06 132  ,jpy_g03
21:50:06 133  ,jpy_g04
21:50:06 134  ,jpy_g05
21:50:06 135  ,jpy_g06
21:50:06 136  ,jpy_g07
21:50:06 137  ,jpy_g08
21:50:06 138  ,jpy_g09
21:50:06 139  ,jpy_g10
21:50:06 140  ,jpy_g11
21:50:06 141  ,jpy_g12
21:50:06 142  ,jpy_g13
21:50:06 143  ,jpy_g14
21:50:06 144  ,jpy_g15
21:50:06 145  ,jpy_g16
21:50:06 146  ,jpy_g17
21:50:06 147  ,jpy_g18
21:50:06 148  ,jpy_g19
21:50:06 149  ,jpy_g20
21:50:06 150  ,jpy_g21
21:50:06 151  ,jpy_g22
21:50:06 152  ,jpy_g23
21:50:06 153  ,jpy_g24
21:50:06 154  ,jpy_g25
21:50:06 155  ,jpy_g26
21:50:06 156  ,jpy_g27
21:50:06 157  ,jpy_g28
21:50:06 158  ,jpy_g29
21:50:06 159  ,jpy_g30
21:50:06 160  ,jpy_g31
21:50:06 161  ,jpy_g32
21:50:06 162  ,jpy_g33
21:50:06 163  ,jpy_g34
21:50:06 164  ,jpy_g35
21:50:06 165  ,jpy_g36
21:50:06 166  ,jpy_g37
21:50:06 167  ,jpy_g38
21:50:06 168  ,jpy_g39
21:50:06 169  ,jpy_g40
21:50:06 170  ,cad_g00
21:50:06 171  ,cad_g01
21:50:06 172  ,cad_g02
21:50:06 173  ,cad_g03
21:50:06 174  ,cad_g04
21:50:06 175  ,cad_g05
21:50:06 176  ,cad_g06
21:50:06 177  ,cad_g07
21:50:06 178  ,cad_g08
21:50:06 179  ,cad_g09
21:50:06 180  ,cad_g10
21:50:06 181  ,cad_g11
21:50:06 182  ,cad_g12
21:50:06 183  ,cad_g13
21:50:06 184  ,cad_g14
21:50:06 185  ,cad_g15
21:50:06 186  ,cad_g16
21:50:06 187  ,cad_g17
21:50:06 188  ,cad_g18
21:50:06 189  ,cad_g19
21:50:06 190  ,cad_g20
21:50:06 191  ,cad_g21
21:50:06 192  ,cad_g22
21:50:06 193  ,cad_g23
21:50:06 194  ,cad_g24
21:50:06 195  ,cad_g25
21:50:06 196  ,cad_g26
21:50:06 197  ,cad_g27
21:50:06 198  ,cad_g28
21:50:06 199  ,cad_g29
21:50:06 200  ,cad_g30
21:50:06 201  ,cad_g31
21:50:06 202  ,cad_g32
21:50:06 203  ,cad_g33
21:50:06 204  ,cad_g34
21:50:06 205  ,cad_g35
21:50:06 206  ,cad_g36
21:50:06 207  ,cad_g37
21:50:06 208  ,cad_g38
21:50:06 209  ,cad_g39
21:50:06 210  ,cad_g40
21:50:06 211  ,chf_g00
21:50:06 212  ,chf_g01
21:50:06 213  ,chf_g02
21:50:06 214  ,chf_g03
21:50:06 215  ,chf_g04
21:50:06 216  ,chf_g05
21:50:06 217  ,chf_g06
21:50:06 218  ,chf_g07
21:50:06 219  ,chf_g08
21:50:06 220  ,chf_g09
21:50:06 221  ,chf_g10
21:50:06 222  ,chf_g11
21:50:06 223  ,chf_g12
21:50:06 224  ,chf_g13
21:50:06 225  ,chf_g14
21:50:06 226  ,chf_g15
21:50:06 227  ,chf_g16
21:50:06 228  ,chf_g17
21:50:06 229  ,chf_g18
21:50:06 230  ,chf_g19
21:50:06 231  ,chf_g20
21:50:06 232  ,chf_g21
21:50:06 233  ,chf_g22
21:50:06 234  ,chf_g23
21:50:06 235  ,chf_g24
21:50:06 236  ,chf_g25
21:50:06 237  ,chf_g26
21:50:06 238  ,chf_g27
21:50:06 239  ,chf_g28
21:50:06 240  ,chf_g29
21:50:06 241  ,chf_g30
21:50:06 242  ,chf_g31
21:50:06 243  ,chf_g32
21:50:06 244  ,chf_g33
21:50:06 245  ,chf_g34
21:50:06 246  ,chf_g35
21:50:06 247  ,chf_g36
21:50:06 248  ,chf_g37
21:50:06 249  ,chf_g38
21:50:06 250  ,chf_g39
21:50:06 251  ,chf_g40
21:50:06 252  FROM chf_ms14 m
21:50:06 253  WHERE gattn IN('nup','up')
21:50:06 254  AND 1+m.ydate < '&1'||' '||'&2'
21:50:06 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'08:25:00'

View created.

Elapsed: 00:00:00.13
21:50:06 SQL> 
21:50:06 SQL> -- rpt
21:50:06 SQL> 
21:50:06 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:50:06   2  
21:50:06 SQL> SELECT MAX(prdate) FROM bme
21:50:06   2  
21:50:06 SQL> -- Now build model from bme and score sme
21:50:06 SQL> @score1gattn.sql
21:50:06 SQL> -- score1gattn.sql
21:50:06 SQL> 
21:50:06 SQL> -- Does the 1st SVM score
21:50:06 SQL> 
21:50:06 SQL> -- Fill up svmc_apply_prep
21:50:06 SQL> @score_gattn.sql
21:50:06 SQL> --
21:50:06 SQL> -- score_gattn.sql
21:50:06 SQL> --
21:50:06 SQL> 
21:50:06 SQL> -- usage: score_gattn.sql
21:50:06 SQL> 
21:50:06 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:50:06 SQL> 
21:50:06 SQL> DEFINE target	= 'gattn'
21:50:06 SQL> DEFINE model_name = 'forex14'
21:50:06 SQL> DEFINE bldtable	= 'bme'
21:50:06 SQL> DEFINE scoretable = 'sme'
21:50:06 SQL> DEFINE case_id	= 'prdate'
21:50:06 SQL> 
21:50:06 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:50:06 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:50:06 SQL> 
21:50:06 SQL> -- Builds an SVM model using pl/sql.
21:50:06 SQL> 
21:50:06 SQL> -----------------------------------------------------------------------
21:50:06 SQL> --			    BUILD THE MODEL
21:50:06 SQL> -----------------------------------------------------------------------
21:50:06 SQL> 
21:50:06 SQL> -- Cleanup old build data preparation objects for repeat runs
21:50:06 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:50:06 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:50:06 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:50:07 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:50:07 SQL> 
21:50:07 SQL> 
21:50:07 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:50:07 SQL> --
21:50:07 SQL> -- DROP	TABLE svmc_settings ;
21:50:07 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:50:07 SQL> -- DELETE svmc_settings;
21:50:07 SQL> 
21:50:07 SQL> -- The default classification algorithm is Naive Bayes. So override
21:50:07 SQL> -- this choice to SVM using a settings table.
21:50:07 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:50:07 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:50:07 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:50:07 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:50:07 SQL> -- models.
21:50:07 SQL> --
21:50:07 SQL> 
21:50:07 SQL> -- Do this once and then comment it out.
21:50:07 SQL> -- That makes script go faster.
21:50:07 SQL> -- BEGIN
21:50:07 SQL> -- -- Populate settings table
21:50:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:50:07 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:50:07 SQL> --
21:50:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:50:07 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:50:07 SQL> --
21:50:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:50:07 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:50:07 SQL> --   COMMIT;
21:50:07 SQL> -- END;
21:50:07 SQL> -- /
21:50:07 SQL> 
21:50:07 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:50:07 SQL> 
21:50:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:50:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:50:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:50:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:50:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:50:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:50:07 SQL> 
21:50:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:50:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
21:50:07 SQL> 
21:50:07 SQL> --------------------------------
21:50:07 SQL> -- PREPARE BUILD (TRAINING) DATA
21:50:07 SQL> --
21:50:07 SQL> 
21:50:07 SQL> -- 1. Missing Value treatment for all Predictors and
21:50:07 SQL> -- 2. Outlier Treatment and
21:50:07 SQL> -- 3. Normalization are performed below.
21:50:07 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:50:07 SQL> --    normalized here.
21:50:07 SQL> 
21:50:07 SQL> BEGIN
21:50:07   2  	-- Perform missing value treatment for all predictors
21:50:07   3  	-- create miss tables
21:50:07   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:50:07   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:50:07   6  
21:50:07   7  	-- populate miss tables
21:50:07   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:50:07   9  	  miss_table_name => 'svmc_miss_num',
21:50:07  10  	  data_table_name => '&bldtable',
21:50:07  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:50:07  12  
21:50:07  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:50:07  14  	  miss_table_name => 'svmc_miss_cat',
21:50:07  15  	  data_table_name => '&bldtable',
21:50:07  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:50:07  17  
21:50:07  18  	-- xform input data to replace missing values
21:50:07  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:50:07  20  	  miss_table_name => 'svmc_miss_num',
21:50:07  21  	  data_table_name => '&bldtable',
21:50:07  22  	  xform_view_name => 'xformed_build_miss_num');
21:50:07  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:50:07  24  	  miss_table_name => 'svmc_miss_cat',
21:50:07  25  	  data_table_name => '&bldtable',
21:50:07  26  	  xform_view_name => 'xformed_build_miss_cat');
21:50:07  27  
21:50:07  28  	-- Perform outlier treatment.
21:50:07  29  	-- create clip table
21:50:07  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:50:07  31  
21:50:07  32  	-- populate clip table
21:50:07  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:50:07  34  	  clip_table_name => 'svmc_clip',
21:50:07  35  	  data_table_name => '&bldtable',
21:50:07  36  	  tail_frac	  => 0.025,
21:50:07  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:50:07  38  
21:50:07  39  	-- xform input data to winsorized data
21:50:07  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:50:07  41  	  clip_table_name => 'svmc_clip',
21:50:07  42  	  data_table_name => '&bldtable',
21:50:07  43  	  xform_view_name => 'svmc_winsor');
21:50:07  44  
21:50:07  45  	-- create normalization table
21:50:07  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:50:07  47  
21:50:07  48  	-- populate normalization table based on winsorized data
21:50:07  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:50:07  50  	  norm_table_name => 'svmc_norm',
21:50:07  51  	  data_table_name => 'svmc_winsor',
21:50:07  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:50:07  53  
21:50:07  54  	-- normalize the original data
21:50:07  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:50:07  56  	  norm_table_name => 'svmc_norm',
21:50:07  57  	  data_table_name => '&bldtable',
21:50:07  58  	  xform_view_name => 'svmc_build_prep');
21:50:07  59  END;
21:50:07  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.93
21:50:25 SQL> 
21:50:25 SQL> ---------------------
21:50:25 SQL> -- CREATE A NEW MODEL
21:50:25 SQL> --
21:50:25 SQL> -- Cleanup old model with the same name for repeat runs
21:50:25 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:50:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:25   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.99
21:50:26 SQL> 
21:50:26 SQL> -- Build a new SVM Model
21:50:26 SQL> BEGIN
21:50:26   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:50:26   3  	  model_name	      => '&model_name',
21:50:26   4  	  mining_function     => dbms_data_mining.classification,
21:50:26   5  	  data_table_name     => 'svmc_build_prep',
21:50:26   6  	  case_id_column_name => '&case_id',
21:50:26   7  	  target_column_name  => '&target',
21:50:26   8  	  settings_table_name => 'svmc_settings');
21:50:26   9  END;
21:50:26  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.90
21:50:54 SQL> 
21:50:54 SQL> -----------------------------------------------------------------------
21:50:54 SQL> --			       APPLY/score THE MODEL
21:50:54 SQL> -----------------------------------------------------------------------
21:50:54 SQL> 
21:50:54 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:50:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:50:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:50:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:50:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:50:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:50:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:50:54 SQL> -----------------------
21:50:54 SQL> -- PREPARE SCORING DATA
21:50:54 SQL> --
21:50:54 SQL> -- If the data for model creation has been prepared, then the data
21:50:54 SQL> -- to be scored using the model must be prepared in the same manner
21:50:54 SQL> -- in order to obtain meaningful results.
21:50:54 SQL> --
21:50:54 SQL> -- 1. Missing Value treatment for all Predictors and
21:50:54 SQL> -- 2. Normalization
21:50:54 SQL> -- No outlier treatment will be performed during test and apply. The
21:50:54 SQL> -- normalization step is sufficient, since the normalization parameters
21:50:54 SQL> -- already capture the effects of outlier treatment done with build data.
21:50:54 SQL> --
21:50:54 SQL> BEGIN
21:50:54   2  	-- Xform Test data to replace missing values
21:50:54   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:50:54   4  	  miss_table_name => 'svmc_miss_num',
21:50:54   5  	  data_table_name => '&scoretable',
21:50:54   6  	  xform_view_name => 'xformed_apply_miss_num');
21:50:54   7  
21:50:54   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:50:54   9  	  miss_table_name => 'svmc_miss_cat',
21:50:54  10  	  data_table_name => '&scoretable',
21:50:54  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:50:54  12  
21:50:54  13  	-- Normalize the data to be scored
21:50:54  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:50:54  15  	  norm_table_name => 'svmc_norm',
21:50:54  16  	  data_table_name => '&scoretable',
21:50:54  17  	  xform_view_name => 'svmc_apply_prep');
21:50:54  18  END;
21:50:54  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
21:50:55 SQL> 
21:50:55 SQL> -- Use same model_name used in score_gattn.sql
21:50:55 SQL> DEFINE model_name = 'forex14'
21:50:55 SQL> 
21:50:55 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:50:55 SQL> 
21:50:55 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:50:55   2  SELECT
21:50:55   3  prdate
21:50:55   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:50:55   5  ,sysdate
21:50:55   6  ,SUBSTR(prdate,1,3)pair
21:50:55   7  ,SUBSTR(prdate,4,19)ydate
21:50:55   8  FROM svmc_apply_prep
21:50:55   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:50:55 SQL> @chf_score1day_gattn.sql	2010-12-17 08:20:00
21:50:55 SQL> --
21:50:55 SQL> -- chf_score1day_gattn.sql
21:50:55 SQL> --
21:50:55 SQL> 
21:50:55 SQL> CREATE OR REPLACE VIEW sme AS
21:50:55   2  SELECT
21:50:55   3  'chf'||m.ydate prdate
21:50:55   4  ,NULL gattn
21:50:55   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:50:55   6  ,eur_g00
21:50:55   7  ,eur_g01
21:50:55   8  ,eur_g02
21:50:55   9  ,eur_g03
21:50:55  10  ,eur_g04
21:50:55  11  ,eur_g05
21:50:55  12  ,eur_g06
21:50:55  13  ,eur_g07
21:50:55  14  ,eur_g08
21:50:55  15  ,eur_g09
21:50:55  16  ,eur_g10
21:50:55  17  ,eur_g11
21:50:55  18  ,eur_g12
21:50:55  19  ,eur_g13
21:50:55  20  ,eur_g14
21:50:55  21  ,eur_g15
21:50:55  22  ,eur_g16
21:50:55  23  ,eur_g17
21:50:55  24  ,eur_g18
21:50:55  25  ,eur_g19
21:50:55  26  ,eur_g20
21:50:55  27  ,eur_g21
21:50:55  28  ,eur_g22
21:50:55  29  ,eur_g23
21:50:55  30  ,eur_g24
21:50:55  31  ,eur_g25
21:50:55  32  ,eur_g26
21:50:55  33  ,eur_g27
21:50:55  34  ,eur_g28
21:50:55  35  ,eur_g29
21:50:55  36  ,eur_g30
21:50:55  37  ,eur_g31
21:50:55  38  ,eur_g32
21:50:55  39  ,eur_g33
21:50:55  40  ,eur_g34
21:50:55  41  ,eur_g35
21:50:55  42  ,eur_g36
21:50:55  43  ,eur_g37
21:50:55  44  ,eur_g38
21:50:55  45  ,eur_g39
21:50:55  46  ,eur_g40
21:50:55  47  ,aud_g00
21:50:55  48  ,aud_g01
21:50:55  49  ,aud_g02
21:50:55  50  ,aud_g03
21:50:55  51  ,aud_g04
21:50:55  52  ,aud_g05
21:50:55  53  ,aud_g06
21:50:55  54  ,aud_g07
21:50:55  55  ,aud_g08
21:50:55  56  ,aud_g09
21:50:55  57  ,aud_g10
21:50:55  58  ,aud_g11
21:50:55  59  ,aud_g12
21:50:55  60  ,aud_g13
21:50:55  61  ,aud_g14
21:50:55  62  ,aud_g15
21:50:55  63  ,aud_g16
21:50:55  64  ,aud_g17
21:50:55  65  ,aud_g18
21:50:55  66  ,aud_g19
21:50:55  67  ,aud_g20
21:50:55  68  ,aud_g21
21:50:55  69  ,aud_g22
21:50:55  70  ,aud_g23
21:50:55  71  ,aud_g24
21:50:55  72  ,aud_g25
21:50:55  73  ,aud_g26
21:50:55  74  ,aud_g27
21:50:55  75  ,aud_g28
21:50:55  76  ,aud_g29
21:50:55  77  ,aud_g30
21:50:55  78  ,aud_g31
21:50:55  79  ,aud_g32
21:50:55  80  ,aud_g33
21:50:55  81  ,aud_g34
21:50:55  82  ,aud_g35
21:50:55  83  ,aud_g36
21:50:55  84  ,aud_g37
21:50:55  85  ,aud_g38
21:50:55  86  ,aud_g39
21:50:55  87  ,aud_g40
21:50:55  88  ,gbp_g00
21:50:55  89  ,gbp_g01
21:50:55  90  ,gbp_g02
21:50:55  91  ,gbp_g03
21:50:55  92  ,gbp_g04
21:50:55  93  ,gbp_g05
21:50:55  94  ,gbp_g06
21:50:55  95  ,gbp_g07
21:50:55  96  ,gbp_g08
21:50:55  97  ,gbp_g09
21:50:55  98  ,gbp_g10
21:50:55  99  ,gbp_g11
21:50:55 100  ,gbp_g12
21:50:55 101  ,gbp_g13
21:50:55 102  ,gbp_g14
21:50:55 103  ,gbp_g15
21:50:55 104  ,gbp_g16
21:50:55 105  ,gbp_g17
21:50:55 106  ,gbp_g18
21:50:55 107  ,gbp_g19
21:50:55 108  ,gbp_g20
21:50:55 109  ,gbp_g21
21:50:55 110  ,gbp_g22
21:50:55 111  ,gbp_g23
21:50:55 112  ,gbp_g24
21:50:55 113  ,gbp_g25
21:50:55 114  ,gbp_g26
21:50:55 115  ,gbp_g27
21:50:55 116  ,gbp_g28
21:50:55 117  ,gbp_g29
21:50:55 118  ,gbp_g30
21:50:55 119  ,gbp_g31
21:50:55 120  ,gbp_g32
21:50:55 121  ,gbp_g33
21:50:55 122  ,gbp_g34
21:50:55 123  ,gbp_g35
21:50:55 124  ,gbp_g36
21:50:55 125  ,gbp_g37
21:50:55 126  ,gbp_g38
21:50:55 127  ,gbp_g39
21:50:55 128  ,gbp_g40
21:50:55 129  ,jpy_g00
21:50:55 130  ,jpy_g01
21:50:55 131  ,jpy_g02
21:50:55 132  ,jpy_g03
21:50:55 133  ,jpy_g04
21:50:55 134  ,jpy_g05
21:50:55 135  ,jpy_g06
21:50:55 136  ,jpy_g07
21:50:55 137  ,jpy_g08
21:50:55 138  ,jpy_g09
21:50:55 139  ,jpy_g10
21:50:55 140  ,jpy_g11
21:50:55 141  ,jpy_g12
21:50:55 142  ,jpy_g13
21:50:55 143  ,jpy_g14
21:50:55 144  ,jpy_g15
21:50:55 145  ,jpy_g16
21:50:55 146  ,jpy_g17
21:50:55 147  ,jpy_g18
21:50:55 148  ,jpy_g19
21:50:55 149  ,jpy_g20
21:50:55 150  ,jpy_g21
21:50:55 151  ,jpy_g22
21:50:55 152  ,jpy_g23
21:50:55 153  ,jpy_g24
21:50:55 154  ,jpy_g25
21:50:55 155  ,jpy_g26
21:50:55 156  ,jpy_g27
21:50:55 157  ,jpy_g28
21:50:55 158  ,jpy_g29
21:50:55 159  ,jpy_g30
21:50:55 160  ,jpy_g31
21:50:55 161  ,jpy_g32
21:50:55 162  ,jpy_g33
21:50:55 163  ,jpy_g34
21:50:55 164  ,jpy_g35
21:50:55 165  ,jpy_g36
21:50:55 166  ,jpy_g37
21:50:55 167  ,jpy_g38
21:50:55 168  ,jpy_g39
21:50:55 169  ,jpy_g40
21:50:55 170  ,cad_g00
21:50:55 171  ,cad_g01
21:50:55 172  ,cad_g02
21:50:55 173  ,cad_g03
21:50:55 174  ,cad_g04
21:50:55 175  ,cad_g05
21:50:55 176  ,cad_g06
21:50:55 177  ,cad_g07
21:50:55 178  ,cad_g08
21:50:55 179  ,cad_g09
21:50:55 180  ,cad_g10
21:50:55 181  ,cad_g11
21:50:55 182  ,cad_g12
21:50:55 183  ,cad_g13
21:50:55 184  ,cad_g14
21:50:55 185  ,cad_g15
21:50:55 186  ,cad_g16
21:50:55 187  ,cad_g17
21:50:55 188  ,cad_g18
21:50:55 189  ,cad_g19
21:50:55 190  ,cad_g20
21:50:55 191  ,cad_g21
21:50:55 192  ,cad_g22
21:50:55 193  ,cad_g23
21:50:55 194  ,cad_g24
21:50:55 195  ,cad_g25
21:50:55 196  ,cad_g26
21:50:55 197  ,cad_g27
21:50:55 198  ,cad_g28
21:50:55 199  ,cad_g29
21:50:55 200  ,cad_g30
21:50:55 201  ,cad_g31
21:50:55 202  ,cad_g32
21:50:55 203  ,cad_g33
21:50:55 204  ,cad_g34
21:50:55 205  ,cad_g35
21:50:55 206  ,cad_g36
21:50:55 207  ,cad_g37
21:50:55 208  ,cad_g38
21:50:55 209  ,cad_g39
21:50:55 210  ,cad_g40
21:50:55 211  ,chf_g00
21:50:55 212  ,chf_g01
21:50:55 213  ,chf_g02
21:50:55 214  ,chf_g03
21:50:55 215  ,chf_g04
21:50:55 216  ,chf_g05
21:50:55 217  ,chf_g06
21:50:55 218  ,chf_g07
21:50:55 219  ,chf_g08
21:50:55 220  ,chf_g09
21:50:55 221  ,chf_g10
21:50:55 222  ,chf_g11
21:50:55 223  ,chf_g12
21:50:55 224  ,chf_g13
21:50:55 225  ,chf_g14
21:50:55 226  ,chf_g15
21:50:55 227  ,chf_g16
21:50:55 228  ,chf_g17
21:50:55 229  ,chf_g18
21:50:55 230  ,chf_g19
21:50:55 231  ,chf_g20
21:50:55 232  ,chf_g21
21:50:55 233  ,chf_g22
21:50:55 234  ,chf_g23
21:50:55 235  ,chf_g24
21:50:55 236  ,chf_g25
21:50:55 237  ,chf_g26
21:50:55 238  ,chf_g27
21:50:55 239  ,chf_g28
21:50:55 240  ,chf_g29
21:50:55 241  ,chf_g30
21:50:55 242  ,chf_g31
21:50:55 243  ,chf_g32
21:50:55 244  ,chf_g33
21:50:55 245  ,chf_g34
21:50:55 246  ,chf_g35
21:50:55 247  ,chf_g36
21:50:55 248  ,chf_g37
21:50:55 249  ,chf_g38
21:50:55 250  ,chf_g39
21:50:55 251  ,chf_g40
21:50:55 252  FROM chf_ms14 m
21:50:55 253  WHERE m.ydate = '&1'||' '||'&2'
21:50:55 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'08:20:00'

View created.

Elapsed: 00:00:00.12
21:50:55 SQL> 
21:50:55 SQL> -- rpt
21:50:55 SQL> -- We should see just 1 row:
21:50:55 SQL> 
21:50:55 SQL> SELECT COUNT(prdate) FROM sme
21:50:55   2  
21:50:55 SQL> -- Build the model:
21:50:55 SQL> CREATE OR REPLACE VIEW bme AS
21:50:55   2  SELECT
21:50:55   3  'chf'||m.ydate prdate
21:50:55   4  ,gattn
21:50:55   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:50:55   6  ,eur_g00
21:50:55   7  ,eur_g01
21:50:55   8  ,eur_g02
21:50:55   9  ,eur_g03
21:50:55  10  ,eur_g04
21:50:55  11  ,eur_g05
21:50:55  12  ,eur_g06
21:50:55  13  ,eur_g07
21:50:55  14  ,eur_g08
21:50:55  15  ,eur_g09
21:50:55  16  ,eur_g10
21:50:55  17  ,eur_g11
21:50:55  18  ,eur_g12
21:50:55  19  ,eur_g13
21:50:55  20  ,eur_g14
21:50:55  21  ,eur_g15
21:50:55  22  ,eur_g16
21:50:55  23  ,eur_g17
21:50:55  24  ,eur_g18
21:50:55  25  ,eur_g19
21:50:55  26  ,eur_g20
21:50:55  27  ,eur_g21
21:50:55  28  ,eur_g22
21:50:55  29  ,eur_g23
21:50:55  30  ,eur_g24
21:50:55  31  ,eur_g25
21:50:55  32  ,eur_g26
21:50:55  33  ,eur_g27
21:50:55  34  ,eur_g28
21:50:55  35  ,eur_g29
21:50:55  36  ,eur_g30
21:50:55  37  ,eur_g31
21:50:55  38  ,eur_g32
21:50:55  39  ,eur_g33
21:50:55  40  ,eur_g34
21:50:55  41  ,eur_g35
21:50:55  42  ,eur_g36
21:50:55  43  ,eur_g37
21:50:55  44  ,eur_g38
21:50:55  45  ,eur_g39
21:50:55  46  ,eur_g40
21:50:55  47  ,aud_g00
21:50:55  48  ,aud_g01
21:50:55  49  ,aud_g02
21:50:55  50  ,aud_g03
21:50:55  51  ,aud_g04
21:50:55  52  ,aud_g05
21:50:55  53  ,aud_g06
21:50:55  54  ,aud_g07
21:50:55  55  ,aud_g08
21:50:55  56  ,aud_g09
21:50:55  57  ,aud_g10
21:50:55  58  ,aud_g11
21:50:55  59  ,aud_g12
21:50:55  60  ,aud_g13
21:50:55  61  ,aud_g14
21:50:55  62  ,aud_g15
21:50:55  63  ,aud_g16
21:50:55  64  ,aud_g17
21:50:55  65  ,aud_g18
21:50:55  66  ,aud_g19
21:50:55  67  ,aud_g20
21:50:55  68  ,aud_g21
21:50:55  69  ,aud_g22
21:50:55  70  ,aud_g23
21:50:55  71  ,aud_g24
21:50:55  72  ,aud_g25
21:50:55  73  ,aud_g26
21:50:55  74  ,aud_g27
21:50:55  75  ,aud_g28
21:50:55  76  ,aud_g29
21:50:55  77  ,aud_g30
21:50:55  78  ,aud_g31
21:50:55  79  ,aud_g32
21:50:55  80  ,aud_g33
21:50:55  81  ,aud_g34
21:50:55  82  ,aud_g35
21:50:55  83  ,aud_g36
21:50:55  84  ,aud_g37
21:50:55  85  ,aud_g38
21:50:55  86  ,aud_g39
21:50:55  87  ,aud_g40
21:50:55  88  ,gbp_g00
21:50:55  89  ,gbp_g01
21:50:55  90  ,gbp_g02
21:50:55  91  ,gbp_g03
21:50:55  92  ,gbp_g04
21:50:55  93  ,gbp_g05
21:50:55  94  ,gbp_g06
21:50:55  95  ,gbp_g07
21:50:55  96  ,gbp_g08
21:50:55  97  ,gbp_g09
21:50:55  98  ,gbp_g10
21:50:55  99  ,gbp_g11
21:50:55 100  ,gbp_g12
21:50:55 101  ,gbp_g13
21:50:55 102  ,gbp_g14
21:50:55 103  ,gbp_g15
21:50:55 104  ,gbp_g16
21:50:55 105  ,gbp_g17
21:50:55 106  ,gbp_g18
21:50:55 107  ,gbp_g19
21:50:55 108  ,gbp_g20
21:50:55 109  ,gbp_g21
21:50:55 110  ,gbp_g22
21:50:55 111  ,gbp_g23
21:50:55 112  ,gbp_g24
21:50:55 113  ,gbp_g25
21:50:55 114  ,gbp_g26
21:50:55 115  ,gbp_g27
21:50:55 116  ,gbp_g28
21:50:55 117  ,gbp_g29
21:50:55 118  ,gbp_g30
21:50:55 119  ,gbp_g31
21:50:55 120  ,gbp_g32
21:50:55 121  ,gbp_g33
21:50:55 122  ,gbp_g34
21:50:55 123  ,gbp_g35
21:50:55 124  ,gbp_g36
21:50:55 125  ,gbp_g37
21:50:55 126  ,gbp_g38
21:50:55 127  ,gbp_g39
21:50:55 128  ,gbp_g40
21:50:55 129  ,jpy_g00
21:50:55 130  ,jpy_g01
21:50:55 131  ,jpy_g02
21:50:55 132  ,jpy_g03
21:50:55 133  ,jpy_g04
21:50:55 134  ,jpy_g05
21:50:55 135  ,jpy_g06
21:50:55 136  ,jpy_g07
21:50:55 137  ,jpy_g08
21:50:55 138  ,jpy_g09
21:50:55 139  ,jpy_g10
21:50:55 140  ,jpy_g11
21:50:55 141  ,jpy_g12
21:50:55 142  ,jpy_g13
21:50:55 143  ,jpy_g14
21:50:55 144  ,jpy_g15
21:50:55 145  ,jpy_g16
21:50:55 146  ,jpy_g17
21:50:55 147  ,jpy_g18
21:50:55 148  ,jpy_g19
21:50:55 149  ,jpy_g20
21:50:55 150  ,jpy_g21
21:50:55 151  ,jpy_g22
21:50:55 152  ,jpy_g23
21:50:55 153  ,jpy_g24
21:50:55 154  ,jpy_g25
21:50:55 155  ,jpy_g26
21:50:55 156  ,jpy_g27
21:50:55 157  ,jpy_g28
21:50:55 158  ,jpy_g29
21:50:55 159  ,jpy_g30
21:50:55 160  ,jpy_g31
21:50:55 161  ,jpy_g32
21:50:55 162  ,jpy_g33
21:50:55 163  ,jpy_g34
21:50:55 164  ,jpy_g35
21:50:55 165  ,jpy_g36
21:50:55 166  ,jpy_g37
21:50:55 167  ,jpy_g38
21:50:55 168  ,jpy_g39
21:50:55 169  ,jpy_g40
21:50:55 170  ,cad_g00
21:50:55 171  ,cad_g01
21:50:55 172  ,cad_g02
21:50:55 173  ,cad_g03
21:50:55 174  ,cad_g04
21:50:55 175  ,cad_g05
21:50:55 176  ,cad_g06
21:50:55 177  ,cad_g07
21:50:55 178  ,cad_g08
21:50:55 179  ,cad_g09
21:50:55 180  ,cad_g10
21:50:55 181  ,cad_g11
21:50:55 182  ,cad_g12
21:50:55 183  ,cad_g13
21:50:55 184  ,cad_g14
21:50:55 185  ,cad_g15
21:50:55 186  ,cad_g16
21:50:55 187  ,cad_g17
21:50:55 188  ,cad_g18
21:50:55 189  ,cad_g19
21:50:55 190  ,cad_g20
21:50:55 191  ,cad_g21
21:50:55 192  ,cad_g22
21:50:55 193  ,cad_g23
21:50:55 194  ,cad_g24
21:50:55 195  ,cad_g25
21:50:55 196  ,cad_g26
21:50:55 197  ,cad_g27
21:50:55 198  ,cad_g28
21:50:55 199  ,cad_g29
21:50:55 200  ,cad_g30
21:50:55 201  ,cad_g31
21:50:55 202  ,cad_g32
21:50:55 203  ,cad_g33
21:50:55 204  ,cad_g34
21:50:55 205  ,cad_g35
21:50:55 206  ,cad_g36
21:50:55 207  ,cad_g37
21:50:55 208  ,cad_g38
21:50:55 209  ,cad_g39
21:50:55 210  ,cad_g40
21:50:55 211  ,chf_g00
21:50:55 212  ,chf_g01
21:50:55 213  ,chf_g02
21:50:55 214  ,chf_g03
21:50:55 215  ,chf_g04
21:50:55 216  ,chf_g05
21:50:55 217  ,chf_g06
21:50:55 218  ,chf_g07
21:50:55 219  ,chf_g08
21:50:55 220  ,chf_g09
21:50:55 221  ,chf_g10
21:50:55 222  ,chf_g11
21:50:55 223  ,chf_g12
21:50:55 224  ,chf_g13
21:50:55 225  ,chf_g14
21:50:55 226  ,chf_g15
21:50:55 227  ,chf_g16
21:50:55 228  ,chf_g17
21:50:55 229  ,chf_g18
21:50:55 230  ,chf_g19
21:50:55 231  ,chf_g20
21:50:55 232  ,chf_g21
21:50:55 233  ,chf_g22
21:50:55 234  ,chf_g23
21:50:55 235  ,chf_g24
21:50:55 236  ,chf_g25
21:50:55 237  ,chf_g26
21:50:55 238  ,chf_g27
21:50:55 239  ,chf_g28
21:50:55 240  ,chf_g29
21:50:55 241  ,chf_g30
21:50:55 242  ,chf_g31
21:50:55 243  ,chf_g32
21:50:55 244  ,chf_g33
21:50:55 245  ,chf_g34
21:50:55 246  ,chf_g35
21:50:55 247  ,chf_g36
21:50:55 248  ,chf_g37
21:50:55 249  ,chf_g38
21:50:55 250  ,chf_g39
21:50:55 251  ,chf_g40
21:50:55 252  FROM chf_ms14 m
21:50:55 253  WHERE gattn IN('nup','up')
21:50:55 254  AND 1+m.ydate < '&1'||' '||'&2'
21:50:55 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'08:20:00'

View created.

Elapsed: 00:00:00.13
21:50:55 SQL> 
21:50:55 SQL> -- rpt
21:50:55 SQL> 
21:50:55 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:50:55   2  
21:50:55 SQL> SELECT MAX(prdate) FROM bme
21:50:55   2  
21:50:55 SQL> -- Now build model from bme and score sme
21:50:55 SQL> @score1gattn.sql
21:50:55 SQL> -- score1gattn.sql
21:50:55 SQL> 
21:50:55 SQL> -- Does the 1st SVM score
21:50:55 SQL> 
21:50:55 SQL> -- Fill up svmc_apply_prep
21:50:55 SQL> @score_gattn.sql
21:50:55 SQL> --
21:50:55 SQL> -- score_gattn.sql
21:50:55 SQL> --
21:50:55 SQL> 
21:50:55 SQL> -- usage: score_gattn.sql
21:50:55 SQL> 
21:50:55 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:50:55 SQL> 
21:50:55 SQL> DEFINE target	= 'gattn'
21:50:55 SQL> DEFINE model_name = 'forex14'
21:50:55 SQL> DEFINE bldtable	= 'bme'
21:50:55 SQL> DEFINE scoretable = 'sme'
21:50:55 SQL> DEFINE case_id	= 'prdate'
21:50:55 SQL> 
21:50:55 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:50:55 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:50:55 SQL> 
21:50:55 SQL> -- Builds an SVM model using pl/sql.
21:50:55 SQL> 
21:50:55 SQL> -----------------------------------------------------------------------
21:50:55 SQL> --			    BUILD THE MODEL
21:50:55 SQL> -----------------------------------------------------------------------
21:50:55 SQL> 
21:50:55 SQL> -- Cleanup old build data preparation objects for repeat runs
21:50:55 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:50:55 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:50:55 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:50:55 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:50:55 SQL> 
21:50:55 SQL> 
21:50:55 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:50:55 SQL> --
21:50:55 SQL> -- DROP	TABLE svmc_settings ;
21:50:55 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:50:55 SQL> -- DELETE svmc_settings;
21:50:55 SQL> 
21:50:55 SQL> -- The default classification algorithm is Naive Bayes. So override
21:50:55 SQL> -- this choice to SVM using a settings table.
21:50:55 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:50:55 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:50:55 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:50:55 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:50:55 SQL> -- models.
21:50:55 SQL> --
21:50:55 SQL> 
21:50:55 SQL> -- Do this once and then comment it out.
21:50:55 SQL> -- That makes script go faster.
21:50:55 SQL> -- BEGIN
21:50:55 SQL> -- -- Populate settings table
21:50:55 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:50:55 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:50:55 SQL> --
21:50:55 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:50:55 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:50:55 SQL> --
21:50:55 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:50:55 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:50:55 SQL> --   COMMIT;
21:50:55 SQL> -- END;
21:50:55 SQL> -- /
21:50:55 SQL> 
21:50:55 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:50:55 SQL> 
21:50:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:50:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:50:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:50:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
21:50:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:50:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:50:56 SQL> 
21:50:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:50:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:50:56 SQL> 
21:50:56 SQL> --------------------------------
21:50:56 SQL> -- PREPARE BUILD (TRAINING) DATA
21:50:56 SQL> --
21:50:56 SQL> 
21:50:56 SQL> -- 1. Missing Value treatment for all Predictors and
21:50:56 SQL> -- 2. Outlier Treatment and
21:50:56 SQL> -- 3. Normalization are performed below.
21:50:56 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:50:56 SQL> --    normalized here.
21:50:56 SQL> 
21:50:56 SQL> BEGIN
21:50:56   2  	-- Perform missing value treatment for all predictors
21:50:56   3  	-- create miss tables
21:50:56   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:50:56   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:50:56   6  
21:50:56   7  	-- populate miss tables
21:50:56   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:50:56   9  	  miss_table_name => 'svmc_miss_num',
21:50:56  10  	  data_table_name => '&bldtable',
21:50:56  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:50:56  12  
21:50:56  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:50:56  14  	  miss_table_name => 'svmc_miss_cat',
21:50:56  15  	  data_table_name => '&bldtable',
21:50:56  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:50:56  17  
21:50:56  18  	-- xform input data to replace missing values
21:50:56  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:50:56  20  	  miss_table_name => 'svmc_miss_num',
21:50:56  21  	  data_table_name => '&bldtable',
21:50:56  22  	  xform_view_name => 'xformed_build_miss_num');
21:50:56  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:50:56  24  	  miss_table_name => 'svmc_miss_cat',
21:50:56  25  	  data_table_name => '&bldtable',
21:50:56  26  	  xform_view_name => 'xformed_build_miss_cat');
21:50:56  27  
21:50:56  28  	-- Perform outlier treatment.
21:50:56  29  	-- create clip table
21:50:56  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:50:56  31  
21:50:56  32  	-- populate clip table
21:50:56  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:50:56  34  	  clip_table_name => 'svmc_clip',
21:50:56  35  	  data_table_name => '&bldtable',
21:50:56  36  	  tail_frac	  => 0.025,
21:50:56  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:50:56  38  
21:50:56  39  	-- xform input data to winsorized data
21:50:56  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:50:56  41  	  clip_table_name => 'svmc_clip',
21:50:56  42  	  data_table_name => '&bldtable',
21:50:56  43  	  xform_view_name => 'svmc_winsor');
21:50:56  44  
21:50:56  45  	-- create normalization table
21:50:56  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:50:56  47  
21:50:56  48  	-- populate normalization table based on winsorized data
21:50:56  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:50:56  50  	  norm_table_name => 'svmc_norm',
21:50:56  51  	  data_table_name => 'svmc_winsor',
21:50:56  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:50:56  53  
21:50:56  54  	-- normalize the original data
21:50:56  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:50:56  56  	  norm_table_name => 'svmc_norm',
21:50:56  57  	  data_table_name => '&bldtable',
21:50:56  58  	  xform_view_name => 'svmc_build_prep');
21:50:56  59  END;
21:50:56  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.88
21:51:14 SQL> 
21:51:14 SQL> ---------------------
21:51:14 SQL> -- CREATE A NEW MODEL
21:51:14 SQL> --
21:51:14 SQL> -- Cleanup old model with the same name for repeat runs
21:51:14 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:51:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:14   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.08
21:51:15 SQL> 
21:51:15 SQL> -- Build a new SVM Model
21:51:15 SQL> BEGIN
21:51:15   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:51:15   3  	  model_name	      => '&model_name',
21:51:15   4  	  mining_function     => dbms_data_mining.classification,
21:51:15   5  	  data_table_name     => 'svmc_build_prep',
21:51:15   6  	  case_id_column_name => '&case_id',
21:51:15   7  	  target_column_name  => '&target',
21:51:15   8  	  settings_table_name => 'svmc_settings');
21:51:15   9  END;
21:51:15  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.73
21:51:41 SQL> 
21:51:41 SQL> -----------------------------------------------------------------------
21:51:41 SQL> --			       APPLY/score THE MODEL
21:51:41 SQL> -----------------------------------------------------------------------
21:51:41 SQL> 
21:51:41 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:51:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:51:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:51:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:51:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:51:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:51:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:51:42 SQL> -----------------------
21:51:42 SQL> -- PREPARE SCORING DATA
21:51:42 SQL> --
21:51:42 SQL> -- If the data for model creation has been prepared, then the data
21:51:42 SQL> -- to be scored using the model must be prepared in the same manner
21:51:42 SQL> -- in order to obtain meaningful results.
21:51:42 SQL> --
21:51:42 SQL> -- 1. Missing Value treatment for all Predictors and
21:51:42 SQL> -- 2. Normalization
21:51:42 SQL> -- No outlier treatment will be performed during test and apply. The
21:51:42 SQL> -- normalization step is sufficient, since the normalization parameters
21:51:42 SQL> -- already capture the effects of outlier treatment done with build data.
21:51:42 SQL> --
21:51:42 SQL> BEGIN
21:51:42   2  	-- Xform Test data to replace missing values
21:51:42   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:51:42   4  	  miss_table_name => 'svmc_miss_num',
21:51:42   5  	  data_table_name => '&scoretable',
21:51:42   6  	  xform_view_name => 'xformed_apply_miss_num');
21:51:42   7  
21:51:42   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:51:42   9  	  miss_table_name => 'svmc_miss_cat',
21:51:42  10  	  data_table_name => '&scoretable',
21:51:42  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:51:42  12  
21:51:42  13  	-- Normalize the data to be scored
21:51:42  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:51:42  15  	  norm_table_name => 'svmc_norm',
21:51:42  16  	  data_table_name => '&scoretable',
21:51:42  17  	  xform_view_name => 'svmc_apply_prep');
21:51:42  18  END;
21:51:42  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
21:51:43 SQL> 
21:51:43 SQL> -- Use same model_name used in score_gattn.sql
21:51:43 SQL> DEFINE model_name = 'forex14'
21:51:43 SQL> 
21:51:43 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:51:43 SQL> 
21:51:43 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:51:43   2  SELECT
21:51:43   3  prdate
21:51:43   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:51:43   5  ,sysdate
21:51:43   6  ,SUBSTR(prdate,1,3)pair
21:51:43   7  ,SUBSTR(prdate,4,19)ydate
21:51:43   8  FROM svmc_apply_prep
21:51:43   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:51:43 SQL> @chf_score1day_gattn.sql	2010-12-17 08:15:00
21:51:43 SQL> --
21:51:43 SQL> -- chf_score1day_gattn.sql
21:51:43 SQL> --
21:51:43 SQL> 
21:51:43 SQL> CREATE OR REPLACE VIEW sme AS
21:51:43   2  SELECT
21:51:43   3  'chf'||m.ydate prdate
21:51:43   4  ,NULL gattn
21:51:43   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:51:43   6  ,eur_g00
21:51:43   7  ,eur_g01
21:51:43   8  ,eur_g02
21:51:43   9  ,eur_g03
21:51:43  10  ,eur_g04
21:51:43  11  ,eur_g05
21:51:43  12  ,eur_g06
21:51:43  13  ,eur_g07
21:51:43  14  ,eur_g08
21:51:43  15  ,eur_g09
21:51:43  16  ,eur_g10
21:51:43  17  ,eur_g11
21:51:43  18  ,eur_g12
21:51:43  19  ,eur_g13
21:51:43  20  ,eur_g14
21:51:43  21  ,eur_g15
21:51:43  22  ,eur_g16
21:51:43  23  ,eur_g17
21:51:43  24  ,eur_g18
21:51:43  25  ,eur_g19
21:51:43  26  ,eur_g20
21:51:43  27  ,eur_g21
21:51:43  28  ,eur_g22
21:51:43  29  ,eur_g23
21:51:43  30  ,eur_g24
21:51:43  31  ,eur_g25
21:51:43  32  ,eur_g26
21:51:43  33  ,eur_g27
21:51:43  34  ,eur_g28
21:51:43  35  ,eur_g29
21:51:43  36  ,eur_g30
21:51:43  37  ,eur_g31
21:51:43  38  ,eur_g32
21:51:43  39  ,eur_g33
21:51:43  40  ,eur_g34
21:51:43  41  ,eur_g35
21:51:43  42  ,eur_g36
21:51:43  43  ,eur_g37
21:51:43  44  ,eur_g38
21:51:43  45  ,eur_g39
21:51:43  46  ,eur_g40
21:51:43  47  ,aud_g00
21:51:43  48  ,aud_g01
21:51:43  49  ,aud_g02
21:51:43  50  ,aud_g03
21:51:43  51  ,aud_g04
21:51:43  52  ,aud_g05
21:51:43  53  ,aud_g06
21:51:43  54  ,aud_g07
21:51:43  55  ,aud_g08
21:51:43  56  ,aud_g09
21:51:43  57  ,aud_g10
21:51:43  58  ,aud_g11
21:51:43  59  ,aud_g12
21:51:43  60  ,aud_g13
21:51:43  61  ,aud_g14
21:51:43  62  ,aud_g15
21:51:43  63  ,aud_g16
21:51:43  64  ,aud_g17
21:51:43  65  ,aud_g18
21:51:43  66  ,aud_g19
21:51:43  67  ,aud_g20
21:51:43  68  ,aud_g21
21:51:43  69  ,aud_g22
21:51:43  70  ,aud_g23
21:51:43  71  ,aud_g24
21:51:43  72  ,aud_g25
21:51:43  73  ,aud_g26
21:51:43  74  ,aud_g27
21:51:43  75  ,aud_g28
21:51:43  76  ,aud_g29
21:51:43  77  ,aud_g30
21:51:43  78  ,aud_g31
21:51:43  79  ,aud_g32
21:51:43  80  ,aud_g33
21:51:43  81  ,aud_g34
21:51:43  82  ,aud_g35
21:51:43  83  ,aud_g36
21:51:43  84  ,aud_g37
21:51:43  85  ,aud_g38
21:51:43  86  ,aud_g39
21:51:43  87  ,aud_g40
21:51:43  88  ,gbp_g00
21:51:43  89  ,gbp_g01
21:51:43  90  ,gbp_g02
21:51:43  91  ,gbp_g03
21:51:43  92  ,gbp_g04
21:51:43  93  ,gbp_g05
21:51:43  94  ,gbp_g06
21:51:43  95  ,gbp_g07
21:51:43  96  ,gbp_g08
21:51:43  97  ,gbp_g09
21:51:43  98  ,gbp_g10
21:51:43  99  ,gbp_g11
21:51:43 100  ,gbp_g12
21:51:43 101  ,gbp_g13
21:51:43 102  ,gbp_g14
21:51:43 103  ,gbp_g15
21:51:43 104  ,gbp_g16
21:51:43 105  ,gbp_g17
21:51:43 106  ,gbp_g18
21:51:43 107  ,gbp_g19
21:51:43 108  ,gbp_g20
21:51:43 109  ,gbp_g21
21:51:43 110  ,gbp_g22
21:51:43 111  ,gbp_g23
21:51:43 112  ,gbp_g24
21:51:43 113  ,gbp_g25
21:51:43 114  ,gbp_g26
21:51:43 115  ,gbp_g27
21:51:43 116  ,gbp_g28
21:51:43 117  ,gbp_g29
21:51:43 118  ,gbp_g30
21:51:43 119  ,gbp_g31
21:51:43 120  ,gbp_g32
21:51:43 121  ,gbp_g33
21:51:43 122  ,gbp_g34
21:51:43 123  ,gbp_g35
21:51:43 124  ,gbp_g36
21:51:43 125  ,gbp_g37
21:51:43 126  ,gbp_g38
21:51:43 127  ,gbp_g39
21:51:43 128  ,gbp_g40
21:51:43 129  ,jpy_g00
21:51:43 130  ,jpy_g01
21:51:43 131  ,jpy_g02
21:51:43 132  ,jpy_g03
21:51:43 133  ,jpy_g04
21:51:43 134  ,jpy_g05
21:51:43 135  ,jpy_g06
21:51:43 136  ,jpy_g07
21:51:43 137  ,jpy_g08
21:51:43 138  ,jpy_g09
21:51:43 139  ,jpy_g10
21:51:43 140  ,jpy_g11
21:51:43 141  ,jpy_g12
21:51:43 142  ,jpy_g13
21:51:43 143  ,jpy_g14
21:51:43 144  ,jpy_g15
21:51:43 145  ,jpy_g16
21:51:43 146  ,jpy_g17
21:51:43 147  ,jpy_g18
21:51:43 148  ,jpy_g19
21:51:43 149  ,jpy_g20
21:51:43 150  ,jpy_g21
21:51:43 151  ,jpy_g22
21:51:43 152  ,jpy_g23
21:51:43 153  ,jpy_g24
21:51:43 154  ,jpy_g25
21:51:43 155  ,jpy_g26
21:51:43 156  ,jpy_g27
21:51:43 157  ,jpy_g28
21:51:43 158  ,jpy_g29
21:51:43 159  ,jpy_g30
21:51:43 160  ,jpy_g31
21:51:43 161  ,jpy_g32
21:51:43 162  ,jpy_g33
21:51:43 163  ,jpy_g34
21:51:43 164  ,jpy_g35
21:51:43 165  ,jpy_g36
21:51:43 166  ,jpy_g37
21:51:43 167  ,jpy_g38
21:51:43 168  ,jpy_g39
21:51:43 169  ,jpy_g40
21:51:43 170  ,cad_g00
21:51:43 171  ,cad_g01
21:51:43 172  ,cad_g02
21:51:43 173  ,cad_g03
21:51:43 174  ,cad_g04
21:51:43 175  ,cad_g05
21:51:43 176  ,cad_g06
21:51:43 177  ,cad_g07
21:51:43 178  ,cad_g08
21:51:43 179  ,cad_g09
21:51:43 180  ,cad_g10
21:51:43 181  ,cad_g11
21:51:43 182  ,cad_g12
21:51:43 183  ,cad_g13
21:51:43 184  ,cad_g14
21:51:43 185  ,cad_g15
21:51:43 186  ,cad_g16
21:51:43 187  ,cad_g17
21:51:43 188  ,cad_g18
21:51:43 189  ,cad_g19
21:51:43 190  ,cad_g20
21:51:43 191  ,cad_g21
21:51:43 192  ,cad_g22
21:51:43 193  ,cad_g23
21:51:43 194  ,cad_g24
21:51:43 195  ,cad_g25
21:51:43 196  ,cad_g26
21:51:43 197  ,cad_g27
21:51:43 198  ,cad_g28
21:51:43 199  ,cad_g29
21:51:43 200  ,cad_g30
21:51:43 201  ,cad_g31
21:51:43 202  ,cad_g32
21:51:43 203  ,cad_g33
21:51:43 204  ,cad_g34
21:51:43 205  ,cad_g35
21:51:43 206  ,cad_g36
21:51:43 207  ,cad_g37
21:51:43 208  ,cad_g38
21:51:43 209  ,cad_g39
21:51:43 210  ,cad_g40
21:51:43 211  ,chf_g00
21:51:43 212  ,chf_g01
21:51:43 213  ,chf_g02
21:51:43 214  ,chf_g03
21:51:43 215  ,chf_g04
21:51:43 216  ,chf_g05
21:51:43 217  ,chf_g06
21:51:43 218  ,chf_g07
21:51:43 219  ,chf_g08
21:51:43 220  ,chf_g09
21:51:43 221  ,chf_g10
21:51:43 222  ,chf_g11
21:51:43 223  ,chf_g12
21:51:43 224  ,chf_g13
21:51:43 225  ,chf_g14
21:51:43 226  ,chf_g15
21:51:43 227  ,chf_g16
21:51:43 228  ,chf_g17
21:51:43 229  ,chf_g18
21:51:43 230  ,chf_g19
21:51:43 231  ,chf_g20
21:51:43 232  ,chf_g21
21:51:43 233  ,chf_g22
21:51:43 234  ,chf_g23
21:51:43 235  ,chf_g24
21:51:43 236  ,chf_g25
21:51:43 237  ,chf_g26
21:51:43 238  ,chf_g27
21:51:43 239  ,chf_g28
21:51:43 240  ,chf_g29
21:51:43 241  ,chf_g30
21:51:43 242  ,chf_g31
21:51:43 243  ,chf_g32
21:51:43 244  ,chf_g33
21:51:43 245  ,chf_g34
21:51:43 246  ,chf_g35
21:51:43 247  ,chf_g36
21:51:43 248  ,chf_g37
21:51:43 249  ,chf_g38
21:51:43 250  ,chf_g39
21:51:43 251  ,chf_g40
21:51:43 252  FROM chf_ms14 m
21:51:43 253  WHERE m.ydate = '&1'||' '||'&2'
21:51:43 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'08:15:00'

View created.

Elapsed: 00:00:00.13
21:51:43 SQL> 
21:51:43 SQL> -- rpt
21:51:43 SQL> -- We should see just 1 row:
21:51:43 SQL> 
21:51:43 SQL> SELECT COUNT(prdate) FROM sme
21:51:43   2  
21:51:43 SQL> -- Build the model:
21:51:43 SQL> CREATE OR REPLACE VIEW bme AS
21:51:43   2  SELECT
21:51:43   3  'chf'||m.ydate prdate
21:51:43   4  ,gattn
21:51:43   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:51:43   6  ,eur_g00
21:51:43   7  ,eur_g01
21:51:43   8  ,eur_g02
21:51:43   9  ,eur_g03
21:51:43  10  ,eur_g04
21:51:43  11  ,eur_g05
21:51:43  12  ,eur_g06
21:51:43  13  ,eur_g07
21:51:43  14  ,eur_g08
21:51:43  15  ,eur_g09
21:51:43  16  ,eur_g10
21:51:43  17  ,eur_g11
21:51:43  18  ,eur_g12
21:51:43  19  ,eur_g13
21:51:43  20  ,eur_g14
21:51:43  21  ,eur_g15
21:51:43  22  ,eur_g16
21:51:43  23  ,eur_g17
21:51:43  24  ,eur_g18
21:51:43  25  ,eur_g19
21:51:43  26  ,eur_g20
21:51:43  27  ,eur_g21
21:51:43  28  ,eur_g22
21:51:43  29  ,eur_g23
21:51:43  30  ,eur_g24
21:51:43  31  ,eur_g25
21:51:43  32  ,eur_g26
21:51:43  33  ,eur_g27
21:51:43  34  ,eur_g28
21:51:43  35  ,eur_g29
21:51:43  36  ,eur_g30
21:51:43  37  ,eur_g31
21:51:43  38  ,eur_g32
21:51:43  39  ,eur_g33
21:51:43  40  ,eur_g34
21:51:43  41  ,eur_g35
21:51:43  42  ,eur_g36
21:51:43  43  ,eur_g37
21:51:43  44  ,eur_g38
21:51:43  45  ,eur_g39
21:51:43  46  ,eur_g40
21:51:43  47  ,aud_g00
21:51:43  48  ,aud_g01
21:51:43  49  ,aud_g02
21:51:43  50  ,aud_g03
21:51:43  51  ,aud_g04
21:51:43  52  ,aud_g05
21:51:43  53  ,aud_g06
21:51:43  54  ,aud_g07
21:51:43  55  ,aud_g08
21:51:43  56  ,aud_g09
21:51:43  57  ,aud_g10
21:51:43  58  ,aud_g11
21:51:43  59  ,aud_g12
21:51:43  60  ,aud_g13
21:51:43  61  ,aud_g14
21:51:43  62  ,aud_g15
21:51:43  63  ,aud_g16
21:51:43  64  ,aud_g17
21:51:43  65  ,aud_g18
21:51:43  66  ,aud_g19
21:51:43  67  ,aud_g20
21:51:43  68  ,aud_g21
21:51:43  69  ,aud_g22
21:51:43  70  ,aud_g23
21:51:43  71  ,aud_g24
21:51:43  72  ,aud_g25
21:51:43  73  ,aud_g26
21:51:43  74  ,aud_g27
21:51:43  75  ,aud_g28
21:51:43  76  ,aud_g29
21:51:43  77  ,aud_g30
21:51:43  78  ,aud_g31
21:51:43  79  ,aud_g32
21:51:43  80  ,aud_g33
21:51:43  81  ,aud_g34
21:51:43  82  ,aud_g35
21:51:43  83  ,aud_g36
21:51:43  84  ,aud_g37
21:51:43  85  ,aud_g38
21:51:43  86  ,aud_g39
21:51:43  87  ,aud_g40
21:51:43  88  ,gbp_g00
21:51:43  89  ,gbp_g01
21:51:43  90  ,gbp_g02
21:51:43  91  ,gbp_g03
21:51:43  92  ,gbp_g04
21:51:43  93  ,gbp_g05
21:51:43  94  ,gbp_g06
21:51:43  95  ,gbp_g07
21:51:43  96  ,gbp_g08
21:51:43  97  ,gbp_g09
21:51:43  98  ,gbp_g10
21:51:43  99  ,gbp_g11
21:51:43 100  ,gbp_g12
21:51:43 101  ,gbp_g13
21:51:43 102  ,gbp_g14
21:51:43 103  ,gbp_g15
21:51:43 104  ,gbp_g16
21:51:43 105  ,gbp_g17
21:51:43 106  ,gbp_g18
21:51:43 107  ,gbp_g19
21:51:43 108  ,gbp_g20
21:51:43 109  ,gbp_g21
21:51:43 110  ,gbp_g22
21:51:43 111  ,gbp_g23
21:51:43 112  ,gbp_g24
21:51:43 113  ,gbp_g25
21:51:43 114  ,gbp_g26
21:51:43 115  ,gbp_g27
21:51:43 116  ,gbp_g28
21:51:43 117  ,gbp_g29
21:51:43 118  ,gbp_g30
21:51:43 119  ,gbp_g31
21:51:43 120  ,gbp_g32
21:51:43 121  ,gbp_g33
21:51:43 122  ,gbp_g34
21:51:43 123  ,gbp_g35
21:51:43 124  ,gbp_g36
21:51:43 125  ,gbp_g37
21:51:43 126  ,gbp_g38
21:51:43 127  ,gbp_g39
21:51:43 128  ,gbp_g40
21:51:43 129  ,jpy_g00
21:51:43 130  ,jpy_g01
21:51:43 131  ,jpy_g02
21:51:43 132  ,jpy_g03
21:51:43 133  ,jpy_g04
21:51:43 134  ,jpy_g05
21:51:43 135  ,jpy_g06
21:51:43 136  ,jpy_g07
21:51:43 137  ,jpy_g08
21:51:43 138  ,jpy_g09
21:51:43 139  ,jpy_g10
21:51:43 140  ,jpy_g11
21:51:43 141  ,jpy_g12
21:51:43 142  ,jpy_g13
21:51:43 143  ,jpy_g14
21:51:43 144  ,jpy_g15
21:51:43 145  ,jpy_g16
21:51:43 146  ,jpy_g17
21:51:43 147  ,jpy_g18
21:51:43 148  ,jpy_g19
21:51:43 149  ,jpy_g20
21:51:43 150  ,jpy_g21
21:51:43 151  ,jpy_g22
21:51:43 152  ,jpy_g23
21:51:43 153  ,jpy_g24
21:51:43 154  ,jpy_g25
21:51:43 155  ,jpy_g26
21:51:43 156  ,jpy_g27
21:51:43 157  ,jpy_g28
21:51:43 158  ,jpy_g29
21:51:43 159  ,jpy_g30
21:51:43 160  ,jpy_g31
21:51:43 161  ,jpy_g32
21:51:43 162  ,jpy_g33
21:51:43 163  ,jpy_g34
21:51:43 164  ,jpy_g35
21:51:43 165  ,jpy_g36
21:51:43 166  ,jpy_g37
21:51:43 167  ,jpy_g38
21:51:43 168  ,jpy_g39
21:51:43 169  ,jpy_g40
21:51:43 170  ,cad_g00
21:51:43 171  ,cad_g01
21:51:43 172  ,cad_g02
21:51:43 173  ,cad_g03
21:51:43 174  ,cad_g04
21:51:43 175  ,cad_g05
21:51:43 176  ,cad_g06
21:51:43 177  ,cad_g07
21:51:43 178  ,cad_g08
21:51:43 179  ,cad_g09
21:51:43 180  ,cad_g10
21:51:43 181  ,cad_g11
21:51:43 182  ,cad_g12
21:51:43 183  ,cad_g13
21:51:43 184  ,cad_g14
21:51:43 185  ,cad_g15
21:51:43 186  ,cad_g16
21:51:43 187  ,cad_g17
21:51:43 188  ,cad_g18
21:51:43 189  ,cad_g19
21:51:43 190  ,cad_g20
21:51:43 191  ,cad_g21
21:51:43 192  ,cad_g22
21:51:43 193  ,cad_g23
21:51:43 194  ,cad_g24
21:51:43 195  ,cad_g25
21:51:43 196  ,cad_g26
21:51:43 197  ,cad_g27
21:51:43 198  ,cad_g28
21:51:43 199  ,cad_g29
21:51:43 200  ,cad_g30
21:51:43 201  ,cad_g31
21:51:43 202  ,cad_g32
21:51:43 203  ,cad_g33
21:51:43 204  ,cad_g34
21:51:43 205  ,cad_g35
21:51:43 206  ,cad_g36
21:51:43 207  ,cad_g37
21:51:43 208  ,cad_g38
21:51:43 209  ,cad_g39
21:51:43 210  ,cad_g40
21:51:43 211  ,chf_g00
21:51:43 212  ,chf_g01
21:51:43 213  ,chf_g02
21:51:43 214  ,chf_g03
21:51:43 215  ,chf_g04
21:51:43 216  ,chf_g05
21:51:43 217  ,chf_g06
21:51:43 218  ,chf_g07
21:51:43 219  ,chf_g08
21:51:43 220  ,chf_g09
21:51:43 221  ,chf_g10
21:51:43 222  ,chf_g11
21:51:43 223  ,chf_g12
21:51:43 224  ,chf_g13
21:51:43 225  ,chf_g14
21:51:43 226  ,chf_g15
21:51:43 227  ,chf_g16
21:51:43 228  ,chf_g17
21:51:43 229  ,chf_g18
21:51:43 230  ,chf_g19
21:51:43 231  ,chf_g20
21:51:43 232  ,chf_g21
21:51:43 233  ,chf_g22
21:51:43 234  ,chf_g23
21:51:43 235  ,chf_g24
21:51:43 236  ,chf_g25
21:51:43 237  ,chf_g26
21:51:43 238  ,chf_g27
21:51:43 239  ,chf_g28
21:51:43 240  ,chf_g29
21:51:43 241  ,chf_g30
21:51:43 242  ,chf_g31
21:51:43 243  ,chf_g32
21:51:43 244  ,chf_g33
21:51:43 245  ,chf_g34
21:51:43 246  ,chf_g35
21:51:43 247  ,chf_g36
21:51:43 248  ,chf_g37
21:51:43 249  ,chf_g38
21:51:43 250  ,chf_g39
21:51:43 251  ,chf_g40
21:51:43 252  FROM chf_ms14 m
21:51:43 253  WHERE gattn IN('nup','up')
21:51:43 254  AND 1+m.ydate < '&1'||' '||'&2'
21:51:43 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'08:15:00'

View created.

Elapsed: 00:00:00.12
21:51:43 SQL> 
21:51:43 SQL> -- rpt
21:51:43 SQL> 
21:51:43 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:51:43   2  
21:51:43 SQL> SELECT MAX(prdate) FROM bme
21:51:43   2  
21:51:43 SQL> -- Now build model from bme and score sme
21:51:43 SQL> @score1gattn.sql
21:51:43 SQL> -- score1gattn.sql
21:51:43 SQL> 
21:51:43 SQL> -- Does the 1st SVM score
21:51:43 SQL> 
21:51:43 SQL> -- Fill up svmc_apply_prep
21:51:43 SQL> @score_gattn.sql
21:51:43 SQL> --
21:51:43 SQL> -- score_gattn.sql
21:51:43 SQL> --
21:51:43 SQL> 
21:51:43 SQL> -- usage: score_gattn.sql
21:51:43 SQL> 
21:51:43 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:51:43 SQL> 
21:51:43 SQL> DEFINE target	= 'gattn'
21:51:43 SQL> DEFINE model_name = 'forex14'
21:51:43 SQL> DEFINE bldtable	= 'bme'
21:51:43 SQL> DEFINE scoretable = 'sme'
21:51:43 SQL> DEFINE case_id	= 'prdate'
21:51:43 SQL> 
21:51:43 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:51:43 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:51:43 SQL> 
21:51:43 SQL> -- Builds an SVM model using pl/sql.
21:51:43 SQL> 
21:51:43 SQL> -----------------------------------------------------------------------
21:51:43 SQL> --			    BUILD THE MODEL
21:51:43 SQL> -----------------------------------------------------------------------
21:51:43 SQL> 
21:51:43 SQL> -- Cleanup old build data preparation objects for repeat runs
21:51:43 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:51:43 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:51:43 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:51:43 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:51:43 SQL> 
21:51:43 SQL> 
21:51:43 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:51:43 SQL> --
21:51:43 SQL> -- DROP	TABLE svmc_settings ;
21:51:43 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:51:43 SQL> -- DELETE svmc_settings;
21:51:43 SQL> 
21:51:43 SQL> -- The default classification algorithm is Naive Bayes. So override
21:51:43 SQL> -- this choice to SVM using a settings table.
21:51:43 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:51:43 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:51:43 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:51:43 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:51:43 SQL> -- models.
21:51:43 SQL> --
21:51:43 SQL> 
21:51:43 SQL> -- Do this once and then comment it out.
21:51:43 SQL> -- That makes script go faster.
21:51:43 SQL> -- BEGIN
21:51:43 SQL> -- -- Populate settings table
21:51:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:51:43 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:51:43 SQL> --
21:51:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:51:43 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:51:43 SQL> --
21:51:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:51:43 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:51:43 SQL> --   COMMIT;
21:51:43 SQL> -- END;
21:51:43 SQL> -- /
21:51:43 SQL> 
21:51:43 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:51:43 SQL> 
21:51:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:51:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:51:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:51:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:51:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:51:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:51:44 SQL> 
21:51:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:51:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:51:44 SQL> 
21:51:44 SQL> --------------------------------
21:51:44 SQL> -- PREPARE BUILD (TRAINING) DATA
21:51:44 SQL> --
21:51:44 SQL> 
21:51:44 SQL> -- 1. Missing Value treatment for all Predictors and
21:51:44 SQL> -- 2. Outlier Treatment and
21:51:44 SQL> -- 3. Normalization are performed below.
21:51:44 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:51:44 SQL> --    normalized here.
21:51:44 SQL> 
21:51:44 SQL> BEGIN
21:51:44   2  	-- Perform missing value treatment for all predictors
21:51:44   3  	-- create miss tables
21:51:44   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:51:44   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:51:44   6  
21:51:44   7  	-- populate miss tables
21:51:44   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:51:44   9  	  miss_table_name => 'svmc_miss_num',
21:51:44  10  	  data_table_name => '&bldtable',
21:51:44  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:51:44  12  
21:51:44  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:51:44  14  	  miss_table_name => 'svmc_miss_cat',
21:51:44  15  	  data_table_name => '&bldtable',
21:51:44  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:51:44  17  
21:51:44  18  	-- xform input data to replace missing values
21:51:44  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:51:44  20  	  miss_table_name => 'svmc_miss_num',
21:51:44  21  	  data_table_name => '&bldtable',
21:51:44  22  	  xform_view_name => 'xformed_build_miss_num');
21:51:44  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:51:44  24  	  miss_table_name => 'svmc_miss_cat',
21:51:44  25  	  data_table_name => '&bldtable',
21:51:44  26  	  xform_view_name => 'xformed_build_miss_cat');
21:51:44  27  
21:51:44  28  	-- Perform outlier treatment.
21:51:44  29  	-- create clip table
21:51:44  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:51:44  31  
21:51:44  32  	-- populate clip table
21:51:44  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:51:44  34  	  clip_table_name => 'svmc_clip',
21:51:44  35  	  data_table_name => '&bldtable',
21:51:44  36  	  tail_frac	  => 0.025,
21:51:44  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:51:44  38  
21:51:44  39  	-- xform input data to winsorized data
21:51:44  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:51:44  41  	  clip_table_name => 'svmc_clip',
21:51:44  42  	  data_table_name => '&bldtable',
21:51:44  43  	  xform_view_name => 'svmc_winsor');
21:51:44  44  
21:51:44  45  	-- create normalization table
21:51:44  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:51:44  47  
21:51:44  48  	-- populate normalization table based on winsorized data
21:51:44  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:51:44  50  	  norm_table_name => 'svmc_norm',
21:51:44  51  	  data_table_name => 'svmc_winsor',
21:51:44  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:51:44  53  
21:51:44  54  	-- normalize the original data
21:51:44  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:51:44  56  	  norm_table_name => 'svmc_norm',
21:51:44  57  	  data_table_name => '&bldtable',
21:51:44  58  	  xform_view_name => 'svmc_build_prep');
21:51:44  59  END;
21:51:44  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.20
21:52:02 SQL> 
21:52:02 SQL> ---------------------
21:52:02 SQL> -- CREATE A NEW MODEL
21:52:02 SQL> --
21:52:02 SQL> -- Cleanup old model with the same name for repeat runs
21:52:02 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:52:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:02   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.31
21:52:03 SQL> 
21:52:03 SQL> -- Build a new SVM Model
21:52:03 SQL> BEGIN
21:52:03   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:52:03   3  	  model_name	      => '&model_name',
21:52:03   4  	  mining_function     => dbms_data_mining.classification,
21:52:03   5  	  data_table_name     => 'svmc_build_prep',
21:52:03   6  	  case_id_column_name => '&case_id',
21:52:03   7  	  target_column_name  => '&target',
21:52:03   8  	  settings_table_name => 'svmc_settings');
21:52:03   9  END;
21:52:03  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.15
21:52:29 SQL> 
21:52:29 SQL> -----------------------------------------------------------------------
21:52:29 SQL> --			       APPLY/score THE MODEL
21:52:29 SQL> -----------------------------------------------------------------------
21:52:29 SQL> 
21:52:29 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:52:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:52:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:52:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:52:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:52:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:52:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:52:29 SQL> -----------------------
21:52:29 SQL> -- PREPARE SCORING DATA
21:52:29 SQL> --
21:52:29 SQL> -- If the data for model creation has been prepared, then the data
21:52:29 SQL> -- to be scored using the model must be prepared in the same manner
21:52:29 SQL> -- in order to obtain meaningful results.
21:52:29 SQL> --
21:52:29 SQL> -- 1. Missing Value treatment for all Predictors and
21:52:29 SQL> -- 2. Normalization
21:52:29 SQL> -- No outlier treatment will be performed during test and apply. The
21:52:29 SQL> -- normalization step is sufficient, since the normalization parameters
21:52:29 SQL> -- already capture the effects of outlier treatment done with build data.
21:52:29 SQL> --
21:52:29 SQL> BEGIN
21:52:29   2  	-- Xform Test data to replace missing values
21:52:29   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:52:29   4  	  miss_table_name => 'svmc_miss_num',
21:52:29   5  	  data_table_name => '&scoretable',
21:52:29   6  	  xform_view_name => 'xformed_apply_miss_num');
21:52:29   7  
21:52:29   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:52:29   9  	  miss_table_name => 'svmc_miss_cat',
21:52:29  10  	  data_table_name => '&scoretable',
21:52:29  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:52:29  12  
21:52:29  13  	-- Normalize the data to be scored
21:52:29  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:52:29  15  	  norm_table_name => 'svmc_norm',
21:52:29  16  	  data_table_name => '&scoretable',
21:52:29  17  	  xform_view_name => 'svmc_apply_prep');
21:52:29  18  END;
21:52:29  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
21:52:31 SQL> 
21:52:31 SQL> -- Use same model_name used in score_gattn.sql
21:52:31 SQL> DEFINE model_name = 'forex14'
21:52:31 SQL> 
21:52:31 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:52:31 SQL> 
21:52:31 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:52:31   2  SELECT
21:52:31   3  prdate
21:52:31   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:52:31   5  ,sysdate
21:52:31   6  ,SUBSTR(prdate,1,3)pair
21:52:31   7  ,SUBSTR(prdate,4,19)ydate
21:52:31   8  FROM svmc_apply_prep
21:52:31   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:52:31 SQL> @chf_score1day_gattn.sql	2010-12-17 08:10:00
21:52:31 SQL> --
21:52:31 SQL> -- chf_score1day_gattn.sql
21:52:31 SQL> --
21:52:31 SQL> 
21:52:31 SQL> CREATE OR REPLACE VIEW sme AS
21:52:31   2  SELECT
21:52:31   3  'chf'||m.ydate prdate
21:52:31   4  ,NULL gattn
21:52:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:52:31   6  ,eur_g00
21:52:31   7  ,eur_g01
21:52:31   8  ,eur_g02
21:52:31   9  ,eur_g03
21:52:31  10  ,eur_g04
21:52:31  11  ,eur_g05
21:52:31  12  ,eur_g06
21:52:31  13  ,eur_g07
21:52:31  14  ,eur_g08
21:52:31  15  ,eur_g09
21:52:31  16  ,eur_g10
21:52:31  17  ,eur_g11
21:52:31  18  ,eur_g12
21:52:31  19  ,eur_g13
21:52:31  20  ,eur_g14
21:52:31  21  ,eur_g15
21:52:31  22  ,eur_g16
21:52:31  23  ,eur_g17
21:52:31  24  ,eur_g18
21:52:31  25  ,eur_g19
21:52:31  26  ,eur_g20
21:52:31  27  ,eur_g21
21:52:31  28  ,eur_g22
21:52:31  29  ,eur_g23
21:52:31  30  ,eur_g24
21:52:31  31  ,eur_g25
21:52:31  32  ,eur_g26
21:52:31  33  ,eur_g27
21:52:31  34  ,eur_g28
21:52:31  35  ,eur_g29
21:52:31  36  ,eur_g30
21:52:31  37  ,eur_g31
21:52:31  38  ,eur_g32
21:52:31  39  ,eur_g33
21:52:31  40  ,eur_g34
21:52:31  41  ,eur_g35
21:52:31  42  ,eur_g36
21:52:31  43  ,eur_g37
21:52:31  44  ,eur_g38
21:52:31  45  ,eur_g39
21:52:31  46  ,eur_g40
21:52:31  47  ,aud_g00
21:52:31  48  ,aud_g01
21:52:31  49  ,aud_g02
21:52:31  50  ,aud_g03
21:52:31  51  ,aud_g04
21:52:31  52  ,aud_g05
21:52:31  53  ,aud_g06
21:52:31  54  ,aud_g07
21:52:31  55  ,aud_g08
21:52:31  56  ,aud_g09
21:52:31  57  ,aud_g10
21:52:31  58  ,aud_g11
21:52:31  59  ,aud_g12
21:52:31  60  ,aud_g13
21:52:31  61  ,aud_g14
21:52:31  62  ,aud_g15
21:52:31  63  ,aud_g16
21:52:31  64  ,aud_g17
21:52:31  65  ,aud_g18
21:52:31  66  ,aud_g19
21:52:31  67  ,aud_g20
21:52:31  68  ,aud_g21
21:52:31  69  ,aud_g22
21:52:31  70  ,aud_g23
21:52:31  71  ,aud_g24
21:52:31  72  ,aud_g25
21:52:31  73  ,aud_g26
21:52:31  74  ,aud_g27
21:52:31  75  ,aud_g28
21:52:31  76  ,aud_g29
21:52:31  77  ,aud_g30
21:52:31  78  ,aud_g31
21:52:31  79  ,aud_g32
21:52:31  80  ,aud_g33
21:52:31  81  ,aud_g34
21:52:31  82  ,aud_g35
21:52:31  83  ,aud_g36
21:52:31  84  ,aud_g37
21:52:31  85  ,aud_g38
21:52:31  86  ,aud_g39
21:52:31  87  ,aud_g40
21:52:31  88  ,gbp_g00
21:52:31  89  ,gbp_g01
21:52:31  90  ,gbp_g02
21:52:31  91  ,gbp_g03
21:52:31  92  ,gbp_g04
21:52:31  93  ,gbp_g05
21:52:31  94  ,gbp_g06
21:52:31  95  ,gbp_g07
21:52:31  96  ,gbp_g08
21:52:31  97  ,gbp_g09
21:52:31  98  ,gbp_g10
21:52:31  99  ,gbp_g11
21:52:31 100  ,gbp_g12
21:52:31 101  ,gbp_g13
21:52:31 102  ,gbp_g14
21:52:31 103  ,gbp_g15
21:52:31 104  ,gbp_g16
21:52:31 105  ,gbp_g17
21:52:31 106  ,gbp_g18
21:52:31 107  ,gbp_g19
21:52:31 108  ,gbp_g20
21:52:31 109  ,gbp_g21
21:52:31 110  ,gbp_g22
21:52:31 111  ,gbp_g23
21:52:31 112  ,gbp_g24
21:52:31 113  ,gbp_g25
21:52:31 114  ,gbp_g26
21:52:31 115  ,gbp_g27
21:52:31 116  ,gbp_g28
21:52:31 117  ,gbp_g29
21:52:31 118  ,gbp_g30
21:52:31 119  ,gbp_g31
21:52:31 120  ,gbp_g32
21:52:31 121  ,gbp_g33
21:52:31 122  ,gbp_g34
21:52:31 123  ,gbp_g35
21:52:31 124  ,gbp_g36
21:52:31 125  ,gbp_g37
21:52:31 126  ,gbp_g38
21:52:31 127  ,gbp_g39
21:52:31 128  ,gbp_g40
21:52:31 129  ,jpy_g00
21:52:31 130  ,jpy_g01
21:52:31 131  ,jpy_g02
21:52:31 132  ,jpy_g03
21:52:31 133  ,jpy_g04
21:52:31 134  ,jpy_g05
21:52:31 135  ,jpy_g06
21:52:31 136  ,jpy_g07
21:52:31 137  ,jpy_g08
21:52:31 138  ,jpy_g09
21:52:31 139  ,jpy_g10
21:52:31 140  ,jpy_g11
21:52:31 141  ,jpy_g12
21:52:31 142  ,jpy_g13
21:52:31 143  ,jpy_g14
21:52:31 144  ,jpy_g15
21:52:31 145  ,jpy_g16
21:52:31 146  ,jpy_g17
21:52:31 147  ,jpy_g18
21:52:31 148  ,jpy_g19
21:52:31 149  ,jpy_g20
21:52:31 150  ,jpy_g21
21:52:31 151  ,jpy_g22
21:52:31 152  ,jpy_g23
21:52:31 153  ,jpy_g24
21:52:31 154  ,jpy_g25
21:52:31 155  ,jpy_g26
21:52:31 156  ,jpy_g27
21:52:31 157  ,jpy_g28
21:52:31 158  ,jpy_g29
21:52:31 159  ,jpy_g30
21:52:31 160  ,jpy_g31
21:52:31 161  ,jpy_g32
21:52:31 162  ,jpy_g33
21:52:31 163  ,jpy_g34
21:52:31 164  ,jpy_g35
21:52:31 165  ,jpy_g36
21:52:31 166  ,jpy_g37
21:52:31 167  ,jpy_g38
21:52:31 168  ,jpy_g39
21:52:31 169  ,jpy_g40
21:52:31 170  ,cad_g00
21:52:31 171  ,cad_g01
21:52:31 172  ,cad_g02
21:52:31 173  ,cad_g03
21:52:31 174  ,cad_g04
21:52:31 175  ,cad_g05
21:52:31 176  ,cad_g06
21:52:31 177  ,cad_g07
21:52:31 178  ,cad_g08
21:52:31 179  ,cad_g09
21:52:31 180  ,cad_g10
21:52:31 181  ,cad_g11
21:52:31 182  ,cad_g12
21:52:31 183  ,cad_g13
21:52:31 184  ,cad_g14
21:52:31 185  ,cad_g15
21:52:31 186  ,cad_g16
21:52:31 187  ,cad_g17
21:52:31 188  ,cad_g18
21:52:31 189  ,cad_g19
21:52:31 190  ,cad_g20
21:52:31 191  ,cad_g21
21:52:31 192  ,cad_g22
21:52:31 193  ,cad_g23
21:52:31 194  ,cad_g24
21:52:31 195  ,cad_g25
21:52:31 196  ,cad_g26
21:52:31 197  ,cad_g27
21:52:31 198  ,cad_g28
21:52:31 199  ,cad_g29
21:52:31 200  ,cad_g30
21:52:31 201  ,cad_g31
21:52:31 202  ,cad_g32
21:52:31 203  ,cad_g33
21:52:31 204  ,cad_g34
21:52:31 205  ,cad_g35
21:52:31 206  ,cad_g36
21:52:31 207  ,cad_g37
21:52:31 208  ,cad_g38
21:52:31 209  ,cad_g39
21:52:31 210  ,cad_g40
21:52:31 211  ,chf_g00
21:52:31 212  ,chf_g01
21:52:31 213  ,chf_g02
21:52:31 214  ,chf_g03
21:52:31 215  ,chf_g04
21:52:31 216  ,chf_g05
21:52:31 217  ,chf_g06
21:52:31 218  ,chf_g07
21:52:31 219  ,chf_g08
21:52:31 220  ,chf_g09
21:52:31 221  ,chf_g10
21:52:31 222  ,chf_g11
21:52:31 223  ,chf_g12
21:52:31 224  ,chf_g13
21:52:31 225  ,chf_g14
21:52:31 226  ,chf_g15
21:52:31 227  ,chf_g16
21:52:31 228  ,chf_g17
21:52:31 229  ,chf_g18
21:52:31 230  ,chf_g19
21:52:31 231  ,chf_g20
21:52:31 232  ,chf_g21
21:52:31 233  ,chf_g22
21:52:31 234  ,chf_g23
21:52:31 235  ,chf_g24
21:52:31 236  ,chf_g25
21:52:31 237  ,chf_g26
21:52:31 238  ,chf_g27
21:52:31 239  ,chf_g28
21:52:31 240  ,chf_g29
21:52:31 241  ,chf_g30
21:52:31 242  ,chf_g31
21:52:31 243  ,chf_g32
21:52:31 244  ,chf_g33
21:52:31 245  ,chf_g34
21:52:31 246  ,chf_g35
21:52:31 247  ,chf_g36
21:52:31 248  ,chf_g37
21:52:31 249  ,chf_g38
21:52:31 250  ,chf_g39
21:52:31 251  ,chf_g40
21:52:31 252  FROM chf_ms14 m
21:52:31 253  WHERE m.ydate = '&1'||' '||'&2'
21:52:31 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'08:10:00'

View created.

Elapsed: 00:00:00.12
21:52:31 SQL> 
21:52:31 SQL> -- rpt
21:52:31 SQL> -- We should see just 1 row:
21:52:31 SQL> 
21:52:31 SQL> SELECT COUNT(prdate) FROM sme
21:52:31   2  
21:52:31 SQL> -- Build the model:
21:52:31 SQL> CREATE OR REPLACE VIEW bme AS
21:52:31   2  SELECT
21:52:31   3  'chf'||m.ydate prdate
21:52:31   4  ,gattn
21:52:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:52:31   6  ,eur_g00
21:52:31   7  ,eur_g01
21:52:31   8  ,eur_g02
21:52:31   9  ,eur_g03
21:52:31  10  ,eur_g04
21:52:31  11  ,eur_g05
21:52:31  12  ,eur_g06
21:52:31  13  ,eur_g07
21:52:31  14  ,eur_g08
21:52:31  15  ,eur_g09
21:52:31  16  ,eur_g10
21:52:31  17  ,eur_g11
21:52:31  18  ,eur_g12
21:52:31  19  ,eur_g13
21:52:31  20  ,eur_g14
21:52:31  21  ,eur_g15
21:52:31  22  ,eur_g16
21:52:31  23  ,eur_g17
21:52:31  24  ,eur_g18
21:52:31  25  ,eur_g19
21:52:31  26  ,eur_g20
21:52:31  27  ,eur_g21
21:52:31  28  ,eur_g22
21:52:31  29  ,eur_g23
21:52:31  30  ,eur_g24
21:52:31  31  ,eur_g25
21:52:31  32  ,eur_g26
21:52:31  33  ,eur_g27
21:52:31  34  ,eur_g28
21:52:31  35  ,eur_g29
21:52:31  36  ,eur_g30
21:52:31  37  ,eur_g31
21:52:31  38  ,eur_g32
21:52:31  39  ,eur_g33
21:52:31  40  ,eur_g34
21:52:31  41  ,eur_g35
21:52:31  42  ,eur_g36
21:52:31  43  ,eur_g37
21:52:31  44  ,eur_g38
21:52:31  45  ,eur_g39
21:52:31  46  ,eur_g40
21:52:31  47  ,aud_g00
21:52:31  48  ,aud_g01
21:52:31  49  ,aud_g02
21:52:31  50  ,aud_g03
21:52:31  51  ,aud_g04
21:52:31  52  ,aud_g05
21:52:31  53  ,aud_g06
21:52:31  54  ,aud_g07
21:52:31  55  ,aud_g08
21:52:31  56  ,aud_g09
21:52:31  57  ,aud_g10
21:52:31  58  ,aud_g11
21:52:31  59  ,aud_g12
21:52:31  60  ,aud_g13
21:52:31  61  ,aud_g14
21:52:31  62  ,aud_g15
21:52:31  63  ,aud_g16
21:52:31  64  ,aud_g17
21:52:31  65  ,aud_g18
21:52:31  66  ,aud_g19
21:52:31  67  ,aud_g20
21:52:31  68  ,aud_g21
21:52:31  69  ,aud_g22
21:52:31  70  ,aud_g23
21:52:31  71  ,aud_g24
21:52:31  72  ,aud_g25
21:52:31  73  ,aud_g26
21:52:31  74  ,aud_g27
21:52:31  75  ,aud_g28
21:52:31  76  ,aud_g29
21:52:31  77  ,aud_g30
21:52:31  78  ,aud_g31
21:52:31  79  ,aud_g32
21:52:31  80  ,aud_g33
21:52:31  81  ,aud_g34
21:52:31  82  ,aud_g35
21:52:31  83  ,aud_g36
21:52:31  84  ,aud_g37
21:52:31  85  ,aud_g38
21:52:31  86  ,aud_g39
21:52:31  87  ,aud_g40
21:52:31  88  ,gbp_g00
21:52:31  89  ,gbp_g01
21:52:31  90  ,gbp_g02
21:52:31  91  ,gbp_g03
21:52:31  92  ,gbp_g04
21:52:31  93  ,gbp_g05
21:52:31  94  ,gbp_g06
21:52:31  95  ,gbp_g07
21:52:31  96  ,gbp_g08
21:52:31  97  ,gbp_g09
21:52:31  98  ,gbp_g10
21:52:31  99  ,gbp_g11
21:52:31 100  ,gbp_g12
21:52:31 101  ,gbp_g13
21:52:31 102  ,gbp_g14
21:52:31 103  ,gbp_g15
21:52:31 104  ,gbp_g16
21:52:31 105  ,gbp_g17
21:52:31 106  ,gbp_g18
21:52:31 107  ,gbp_g19
21:52:31 108  ,gbp_g20
21:52:31 109  ,gbp_g21
21:52:31 110  ,gbp_g22
21:52:31 111  ,gbp_g23
21:52:31 112  ,gbp_g24
21:52:31 113  ,gbp_g25
21:52:31 114  ,gbp_g26
21:52:31 115  ,gbp_g27
21:52:31 116  ,gbp_g28
21:52:31 117  ,gbp_g29
21:52:31 118  ,gbp_g30
21:52:31 119  ,gbp_g31
21:52:31 120  ,gbp_g32
21:52:31 121  ,gbp_g33
21:52:31 122  ,gbp_g34
21:52:31 123  ,gbp_g35
21:52:31 124  ,gbp_g36
21:52:31 125  ,gbp_g37
21:52:31 126  ,gbp_g38
21:52:31 127  ,gbp_g39
21:52:31 128  ,gbp_g40
21:52:31 129  ,jpy_g00
21:52:31 130  ,jpy_g01
21:52:31 131  ,jpy_g02
21:52:31 132  ,jpy_g03
21:52:31 133  ,jpy_g04
21:52:31 134  ,jpy_g05
21:52:31 135  ,jpy_g06
21:52:31 136  ,jpy_g07
21:52:31 137  ,jpy_g08
21:52:31 138  ,jpy_g09
21:52:31 139  ,jpy_g10
21:52:31 140  ,jpy_g11
21:52:31 141  ,jpy_g12
21:52:31 142  ,jpy_g13
21:52:31 143  ,jpy_g14
21:52:31 144  ,jpy_g15
21:52:31 145  ,jpy_g16
21:52:31 146  ,jpy_g17
21:52:31 147  ,jpy_g18
21:52:31 148  ,jpy_g19
21:52:31 149  ,jpy_g20
21:52:31 150  ,jpy_g21
21:52:31 151  ,jpy_g22
21:52:31 152  ,jpy_g23
21:52:31 153  ,jpy_g24
21:52:31 154  ,jpy_g25
21:52:31 155  ,jpy_g26
21:52:31 156  ,jpy_g27
21:52:31 157  ,jpy_g28
21:52:31 158  ,jpy_g29
21:52:31 159  ,jpy_g30
21:52:31 160  ,jpy_g31
21:52:31 161  ,jpy_g32
21:52:31 162  ,jpy_g33
21:52:31 163  ,jpy_g34
21:52:31 164  ,jpy_g35
21:52:31 165  ,jpy_g36
21:52:31 166  ,jpy_g37
21:52:31 167  ,jpy_g38
21:52:31 168  ,jpy_g39
21:52:31 169  ,jpy_g40
21:52:31 170  ,cad_g00
21:52:31 171  ,cad_g01
21:52:31 172  ,cad_g02
21:52:31 173  ,cad_g03
21:52:31 174  ,cad_g04
21:52:31 175  ,cad_g05
21:52:31 176  ,cad_g06
21:52:31 177  ,cad_g07
21:52:31 178  ,cad_g08
21:52:31 179  ,cad_g09
21:52:31 180  ,cad_g10
21:52:31 181  ,cad_g11
21:52:31 182  ,cad_g12
21:52:31 183  ,cad_g13
21:52:31 184  ,cad_g14
21:52:31 185  ,cad_g15
21:52:31 186  ,cad_g16
21:52:31 187  ,cad_g17
21:52:31 188  ,cad_g18
21:52:31 189  ,cad_g19
21:52:31 190  ,cad_g20
21:52:31 191  ,cad_g21
21:52:31 192  ,cad_g22
21:52:31 193  ,cad_g23
21:52:31 194  ,cad_g24
21:52:31 195  ,cad_g25
21:52:31 196  ,cad_g26
21:52:31 197  ,cad_g27
21:52:31 198  ,cad_g28
21:52:31 199  ,cad_g29
21:52:31 200  ,cad_g30
21:52:31 201  ,cad_g31
21:52:31 202  ,cad_g32
21:52:31 203  ,cad_g33
21:52:31 204  ,cad_g34
21:52:31 205  ,cad_g35
21:52:31 206  ,cad_g36
21:52:31 207  ,cad_g37
21:52:31 208  ,cad_g38
21:52:31 209  ,cad_g39
21:52:31 210  ,cad_g40
21:52:31 211  ,chf_g00
21:52:31 212  ,chf_g01
21:52:31 213  ,chf_g02
21:52:31 214  ,chf_g03
21:52:31 215  ,chf_g04
21:52:31 216  ,chf_g05
21:52:31 217  ,chf_g06
21:52:31 218  ,chf_g07
21:52:31 219  ,chf_g08
21:52:31 220  ,chf_g09
21:52:31 221  ,chf_g10
21:52:31 222  ,chf_g11
21:52:31 223  ,chf_g12
21:52:31 224  ,chf_g13
21:52:31 225  ,chf_g14
21:52:31 226  ,chf_g15
21:52:31 227  ,chf_g16
21:52:31 228  ,chf_g17
21:52:31 229  ,chf_g18
21:52:31 230  ,chf_g19
21:52:31 231  ,chf_g20
21:52:31 232  ,chf_g21
21:52:31 233  ,chf_g22
21:52:31 234  ,chf_g23
21:52:31 235  ,chf_g24
21:52:31 236  ,chf_g25
21:52:31 237  ,chf_g26
21:52:31 238  ,chf_g27
21:52:31 239  ,chf_g28
21:52:31 240  ,chf_g29
21:52:31 241  ,chf_g30
21:52:31 242  ,chf_g31
21:52:31 243  ,chf_g32
21:52:31 244  ,chf_g33
21:52:31 245  ,chf_g34
21:52:31 246  ,chf_g35
21:52:31 247  ,chf_g36
21:52:31 248  ,chf_g37
21:52:31 249  ,chf_g38
21:52:31 250  ,chf_g39
21:52:31 251  ,chf_g40
21:52:31 252  FROM chf_ms14 m
21:52:31 253  WHERE gattn IN('nup','up')
21:52:31 254  AND 1+m.ydate < '&1'||' '||'&2'
21:52:31 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'08:10:00'

View created.

Elapsed: 00:00:00.11
21:52:31 SQL> 
21:52:31 SQL> -- rpt
21:52:31 SQL> 
21:52:31 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:52:31   2  
21:52:31 SQL> SELECT MAX(prdate) FROM bme
21:52:31   2  
21:52:31 SQL> -- Now build model from bme and score sme
21:52:31 SQL> @score1gattn.sql
21:52:31 SQL> -- score1gattn.sql
21:52:31 SQL> 
21:52:31 SQL> -- Does the 1st SVM score
21:52:31 SQL> 
21:52:31 SQL> -- Fill up svmc_apply_prep
21:52:31 SQL> @score_gattn.sql
21:52:31 SQL> --
21:52:31 SQL> -- score_gattn.sql
21:52:31 SQL> --
21:52:31 SQL> 
21:52:31 SQL> -- usage: score_gattn.sql
21:52:31 SQL> 
21:52:31 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:52:31 SQL> 
21:52:31 SQL> DEFINE target	= 'gattn'
21:52:31 SQL> DEFINE model_name = 'forex14'
21:52:31 SQL> DEFINE bldtable	= 'bme'
21:52:31 SQL> DEFINE scoretable = 'sme'
21:52:31 SQL> DEFINE case_id	= 'prdate'
21:52:31 SQL> 
21:52:31 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:52:31 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:52:31 SQL> 
21:52:31 SQL> -- Builds an SVM model using pl/sql.
21:52:31 SQL> 
21:52:31 SQL> -----------------------------------------------------------------------
21:52:31 SQL> --			    BUILD THE MODEL
21:52:31 SQL> -----------------------------------------------------------------------
21:52:31 SQL> 
21:52:31 SQL> -- Cleanup old build data preparation objects for repeat runs
21:52:31 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:52:31 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:52:31 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:52:31 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:52:31 SQL> 
21:52:31 SQL> 
21:52:31 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:52:31 SQL> --
21:52:31 SQL> -- DROP	TABLE svmc_settings ;
21:52:31 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:52:31 SQL> -- DELETE svmc_settings;
21:52:31 SQL> 
21:52:31 SQL> -- The default classification algorithm is Naive Bayes. So override
21:52:31 SQL> -- this choice to SVM using a settings table.
21:52:31 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:52:31 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:52:31 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:52:31 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:52:31 SQL> -- models.
21:52:31 SQL> --
21:52:31 SQL> 
21:52:31 SQL> -- Do this once and then comment it out.
21:52:31 SQL> -- That makes script go faster.
21:52:31 SQL> -- BEGIN
21:52:31 SQL> -- -- Populate settings table
21:52:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:52:31 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:52:31 SQL> --
21:52:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:52:31 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:52:31 SQL> --
21:52:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:52:31 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:52:31 SQL> --   COMMIT;
21:52:31 SQL> -- END;
21:52:31 SQL> -- /
21:52:31 SQL> 
21:52:31 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:52:31 SQL> 
21:52:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:52:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:52:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:52:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:52:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:52:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:52:31 SQL> 
21:52:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:52:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:52:31 SQL> 
21:52:31 SQL> --------------------------------
21:52:31 SQL> -- PREPARE BUILD (TRAINING) DATA
21:52:31 SQL> --
21:52:31 SQL> 
21:52:31 SQL> -- 1. Missing Value treatment for all Predictors and
21:52:31 SQL> -- 2. Outlier Treatment and
21:52:31 SQL> -- 3. Normalization are performed below.
21:52:31 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:52:31 SQL> --    normalized here.
21:52:31 SQL> 
21:52:31 SQL> BEGIN
21:52:31   2  	-- Perform missing value treatment for all predictors
21:52:31   3  	-- create miss tables
21:52:31   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:52:31   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:52:31   6  
21:52:31   7  	-- populate miss tables
21:52:31   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:52:31   9  	  miss_table_name => 'svmc_miss_num',
21:52:31  10  	  data_table_name => '&bldtable',
21:52:31  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:52:31  12  
21:52:31  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:52:31  14  	  miss_table_name => 'svmc_miss_cat',
21:52:31  15  	  data_table_name => '&bldtable',
21:52:31  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:52:31  17  
21:52:31  18  	-- xform input data to replace missing values
21:52:31  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:52:31  20  	  miss_table_name => 'svmc_miss_num',
21:52:31  21  	  data_table_name => '&bldtable',
21:52:31  22  	  xform_view_name => 'xformed_build_miss_num');
21:52:31  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:52:31  24  	  miss_table_name => 'svmc_miss_cat',
21:52:31  25  	  data_table_name => '&bldtable',
21:52:31  26  	  xform_view_name => 'xformed_build_miss_cat');
21:52:31  27  
21:52:31  28  	-- Perform outlier treatment.
21:52:31  29  	-- create clip table
21:52:31  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:52:31  31  
21:52:31  32  	-- populate clip table
21:52:31  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:52:31  34  	  clip_table_name => 'svmc_clip',
21:52:31  35  	  data_table_name => '&bldtable',
21:52:31  36  	  tail_frac	  => 0.025,
21:52:31  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:52:31  38  
21:52:31  39  	-- xform input data to winsorized data
21:52:31  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:52:31  41  	  clip_table_name => 'svmc_clip',
21:52:31  42  	  data_table_name => '&bldtable',
21:52:31  43  	  xform_view_name => 'svmc_winsor');
21:52:31  44  
21:52:31  45  	-- create normalization table
21:52:31  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:52:31  47  
21:52:31  48  	-- populate normalization table based on winsorized data
21:52:31  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:52:31  50  	  norm_table_name => 'svmc_norm',
21:52:31  51  	  data_table_name => 'svmc_winsor',
21:52:31  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:52:31  53  
21:52:31  54  	-- normalize the original data
21:52:31  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:52:31  56  	  norm_table_name => 'svmc_norm',
21:52:31  57  	  data_table_name => '&bldtable',
21:52:31  58  	  xform_view_name => 'svmc_build_prep');
21:52:31  59  END;
21:52:31  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.89
21:52:49 SQL> 
21:52:49 SQL> ---------------------
21:52:49 SQL> -- CREATE A NEW MODEL
21:52:49 SQL> --
21:52:49 SQL> -- Cleanup old model with the same name for repeat runs
21:52:49 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:52:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:49   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.39
21:52:51 SQL> 
21:52:51 SQL> -- Build a new SVM Model
21:52:51 SQL> BEGIN
21:52:51   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:52:51   3  	  model_name	      => '&model_name',
21:52:51   4  	  mining_function     => dbms_data_mining.classification,
21:52:51   5  	  data_table_name     => 'svmc_build_prep',
21:52:51   6  	  case_id_column_name => '&case_id',
21:52:51   7  	  target_column_name  => '&target',
21:52:51   8  	  settings_table_name => 'svmc_settings');
21:52:51   9  END;
21:52:51  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.34
21:53:18 SQL> 
21:53:18 SQL> -----------------------------------------------------------------------
21:53:18 SQL> --			       APPLY/score THE MODEL
21:53:18 SQL> -----------------------------------------------------------------------
21:53:18 SQL> 
21:53:18 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:53:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:53:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:53:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:53:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:53:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:53:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:53:18 SQL> -----------------------
21:53:18 SQL> -- PREPARE SCORING DATA
21:53:18 SQL> --
21:53:18 SQL> -- If the data for model creation has been prepared, then the data
21:53:18 SQL> -- to be scored using the model must be prepared in the same manner
21:53:18 SQL> -- in order to obtain meaningful results.
21:53:18 SQL> --
21:53:18 SQL> -- 1. Missing Value treatment for all Predictors and
21:53:18 SQL> -- 2. Normalization
21:53:18 SQL> -- No outlier treatment will be performed during test and apply. The
21:53:18 SQL> -- normalization step is sufficient, since the normalization parameters
21:53:18 SQL> -- already capture the effects of outlier treatment done with build data.
21:53:18 SQL> --
21:53:18 SQL> BEGIN
21:53:18   2  	-- Xform Test data to replace missing values
21:53:18   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:53:18   4  	  miss_table_name => 'svmc_miss_num',
21:53:18   5  	  data_table_name => '&scoretable',
21:53:18   6  	  xform_view_name => 'xformed_apply_miss_num');
21:53:18   7  
21:53:18   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:53:18   9  	  miss_table_name => 'svmc_miss_cat',
21:53:18  10  	  data_table_name => '&scoretable',
21:53:18  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:53:18  12  
21:53:18  13  	-- Normalize the data to be scored
21:53:18  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:53:18  15  	  norm_table_name => 'svmc_norm',
21:53:18  16  	  data_table_name => '&scoretable',
21:53:18  17  	  xform_view_name => 'svmc_apply_prep');
21:53:18  18  END;
21:53:18  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
21:53:19 SQL> 
21:53:19 SQL> -- Use same model_name used in score_gattn.sql
21:53:19 SQL> DEFINE model_name = 'forex14'
21:53:19 SQL> 
21:53:19 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:53:19 SQL> 
21:53:19 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:53:19   2  SELECT
21:53:19   3  prdate
21:53:19   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:53:19   5  ,sysdate
21:53:19   6  ,SUBSTR(prdate,1,3)pair
21:53:19   7  ,SUBSTR(prdate,4,19)ydate
21:53:19   8  FROM svmc_apply_prep
21:53:19   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:53:19 SQL> @chf_score1day_gattn.sql	2010-12-17 08:05:00
21:53:19 SQL> --
21:53:19 SQL> -- chf_score1day_gattn.sql
21:53:19 SQL> --
21:53:19 SQL> 
21:53:19 SQL> CREATE OR REPLACE VIEW sme AS
21:53:19   2  SELECT
21:53:19   3  'chf'||m.ydate prdate
21:53:19   4  ,NULL gattn
21:53:19   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:53:19   6  ,eur_g00
21:53:19   7  ,eur_g01
21:53:19   8  ,eur_g02
21:53:19   9  ,eur_g03
21:53:19  10  ,eur_g04
21:53:19  11  ,eur_g05
21:53:19  12  ,eur_g06
21:53:19  13  ,eur_g07
21:53:19  14  ,eur_g08
21:53:19  15  ,eur_g09
21:53:19  16  ,eur_g10
21:53:19  17  ,eur_g11
21:53:19  18  ,eur_g12
21:53:19  19  ,eur_g13
21:53:19  20  ,eur_g14
21:53:19  21  ,eur_g15
21:53:19  22  ,eur_g16
21:53:19  23  ,eur_g17
21:53:19  24  ,eur_g18
21:53:19  25  ,eur_g19
21:53:19  26  ,eur_g20
21:53:19  27  ,eur_g21
21:53:19  28  ,eur_g22
21:53:19  29  ,eur_g23
21:53:19  30  ,eur_g24
21:53:19  31  ,eur_g25
21:53:19  32  ,eur_g26
21:53:19  33  ,eur_g27
21:53:19  34  ,eur_g28
21:53:19  35  ,eur_g29
21:53:19  36  ,eur_g30
21:53:19  37  ,eur_g31
21:53:19  38  ,eur_g32
21:53:19  39  ,eur_g33
21:53:19  40  ,eur_g34
21:53:19  41  ,eur_g35
21:53:19  42  ,eur_g36
21:53:19  43  ,eur_g37
21:53:19  44  ,eur_g38
21:53:19  45  ,eur_g39
21:53:19  46  ,eur_g40
21:53:19  47  ,aud_g00
21:53:19  48  ,aud_g01
21:53:19  49  ,aud_g02
21:53:19  50  ,aud_g03
21:53:19  51  ,aud_g04
21:53:19  52  ,aud_g05
21:53:19  53  ,aud_g06
21:53:19  54  ,aud_g07
21:53:19  55  ,aud_g08
21:53:19  56  ,aud_g09
21:53:19  57  ,aud_g10
21:53:19  58  ,aud_g11
21:53:19  59  ,aud_g12
21:53:19  60  ,aud_g13
21:53:19  61  ,aud_g14
21:53:19  62  ,aud_g15
21:53:19  63  ,aud_g16
21:53:19  64  ,aud_g17
21:53:19  65  ,aud_g18
21:53:19  66  ,aud_g19
21:53:19  67  ,aud_g20
21:53:19  68  ,aud_g21
21:53:19  69  ,aud_g22
21:53:19  70  ,aud_g23
21:53:19  71  ,aud_g24
21:53:19  72  ,aud_g25
21:53:19  73  ,aud_g26
21:53:19  74  ,aud_g27
21:53:19  75  ,aud_g28
21:53:19  76  ,aud_g29
21:53:19  77  ,aud_g30
21:53:19  78  ,aud_g31
21:53:19  79  ,aud_g32
21:53:19  80  ,aud_g33
21:53:19  81  ,aud_g34
21:53:19  82  ,aud_g35
21:53:19  83  ,aud_g36
21:53:19  84  ,aud_g37
21:53:19  85  ,aud_g38
21:53:19  86  ,aud_g39
21:53:19  87  ,aud_g40
21:53:19  88  ,gbp_g00
21:53:19  89  ,gbp_g01
21:53:19  90  ,gbp_g02
21:53:19  91  ,gbp_g03
21:53:19  92  ,gbp_g04
21:53:19  93  ,gbp_g05
21:53:19  94  ,gbp_g06
21:53:19  95  ,gbp_g07
21:53:19  96  ,gbp_g08
21:53:19  97  ,gbp_g09
21:53:19  98  ,gbp_g10
21:53:19  99  ,gbp_g11
21:53:19 100  ,gbp_g12
21:53:19 101  ,gbp_g13
21:53:19 102  ,gbp_g14
21:53:19 103  ,gbp_g15
21:53:19 104  ,gbp_g16
21:53:19 105  ,gbp_g17
21:53:19 106  ,gbp_g18
21:53:19 107  ,gbp_g19
21:53:19 108  ,gbp_g20
21:53:19 109  ,gbp_g21
21:53:19 110  ,gbp_g22
21:53:19 111  ,gbp_g23
21:53:19 112  ,gbp_g24
21:53:19 113  ,gbp_g25
21:53:19 114  ,gbp_g26
21:53:19 115  ,gbp_g27
21:53:19 116  ,gbp_g28
21:53:19 117  ,gbp_g29
21:53:19 118  ,gbp_g30
21:53:19 119  ,gbp_g31
21:53:19 120  ,gbp_g32
21:53:19 121  ,gbp_g33
21:53:19 122  ,gbp_g34
21:53:19 123  ,gbp_g35
21:53:19 124  ,gbp_g36
21:53:19 125  ,gbp_g37
21:53:19 126  ,gbp_g38
21:53:19 127  ,gbp_g39
21:53:19 128  ,gbp_g40
21:53:19 129  ,jpy_g00
21:53:19 130  ,jpy_g01
21:53:19 131  ,jpy_g02
21:53:19 132  ,jpy_g03
21:53:19 133  ,jpy_g04
21:53:19 134  ,jpy_g05
21:53:19 135  ,jpy_g06
21:53:19 136  ,jpy_g07
21:53:19 137  ,jpy_g08
21:53:19 138  ,jpy_g09
21:53:19 139  ,jpy_g10
21:53:19 140  ,jpy_g11
21:53:19 141  ,jpy_g12
21:53:19 142  ,jpy_g13
21:53:19 143  ,jpy_g14
21:53:19 144  ,jpy_g15
21:53:19 145  ,jpy_g16
21:53:19 146  ,jpy_g17
21:53:19 147  ,jpy_g18
21:53:19 148  ,jpy_g19
21:53:19 149  ,jpy_g20
21:53:19 150  ,jpy_g21
21:53:19 151  ,jpy_g22
21:53:19 152  ,jpy_g23
21:53:19 153  ,jpy_g24
21:53:19 154  ,jpy_g25
21:53:19 155  ,jpy_g26
21:53:19 156  ,jpy_g27
21:53:19 157  ,jpy_g28
21:53:19 158  ,jpy_g29
21:53:19 159  ,jpy_g30
21:53:19 160  ,jpy_g31
21:53:19 161  ,jpy_g32
21:53:19 162  ,jpy_g33
21:53:19 163  ,jpy_g34
21:53:19 164  ,jpy_g35
21:53:19 165  ,jpy_g36
21:53:19 166  ,jpy_g37
21:53:19 167  ,jpy_g38
21:53:19 168  ,jpy_g39
21:53:19 169  ,jpy_g40
21:53:19 170  ,cad_g00
21:53:19 171  ,cad_g01
21:53:19 172  ,cad_g02
21:53:19 173  ,cad_g03
21:53:19 174  ,cad_g04
21:53:19 175  ,cad_g05
21:53:19 176  ,cad_g06
21:53:19 177  ,cad_g07
21:53:19 178  ,cad_g08
21:53:19 179  ,cad_g09
21:53:19 180  ,cad_g10
21:53:19 181  ,cad_g11
21:53:19 182  ,cad_g12
21:53:19 183  ,cad_g13
21:53:19 184  ,cad_g14
21:53:19 185  ,cad_g15
21:53:19 186  ,cad_g16
21:53:19 187  ,cad_g17
21:53:19 188  ,cad_g18
21:53:19 189  ,cad_g19
21:53:19 190  ,cad_g20
21:53:19 191  ,cad_g21
21:53:19 192  ,cad_g22
21:53:19 193  ,cad_g23
21:53:19 194  ,cad_g24
21:53:19 195  ,cad_g25
21:53:19 196  ,cad_g26
21:53:19 197  ,cad_g27
21:53:19 198  ,cad_g28
21:53:19 199  ,cad_g29
21:53:19 200  ,cad_g30
21:53:19 201  ,cad_g31
21:53:19 202  ,cad_g32
21:53:19 203  ,cad_g33
21:53:19 204  ,cad_g34
21:53:19 205  ,cad_g35
21:53:19 206  ,cad_g36
21:53:19 207  ,cad_g37
21:53:19 208  ,cad_g38
21:53:19 209  ,cad_g39
21:53:19 210  ,cad_g40
21:53:19 211  ,chf_g00
21:53:19 212  ,chf_g01
21:53:19 213  ,chf_g02
21:53:19 214  ,chf_g03
21:53:19 215  ,chf_g04
21:53:19 216  ,chf_g05
21:53:19 217  ,chf_g06
21:53:19 218  ,chf_g07
21:53:19 219  ,chf_g08
21:53:19 220  ,chf_g09
21:53:19 221  ,chf_g10
21:53:19 222  ,chf_g11
21:53:19 223  ,chf_g12
21:53:19 224  ,chf_g13
21:53:19 225  ,chf_g14
21:53:19 226  ,chf_g15
21:53:19 227  ,chf_g16
21:53:19 228  ,chf_g17
21:53:19 229  ,chf_g18
21:53:19 230  ,chf_g19
21:53:19 231  ,chf_g20
21:53:19 232  ,chf_g21
21:53:19 233  ,chf_g22
21:53:19 234  ,chf_g23
21:53:19 235  ,chf_g24
21:53:19 236  ,chf_g25
21:53:19 237  ,chf_g26
21:53:19 238  ,chf_g27
21:53:19 239  ,chf_g28
21:53:19 240  ,chf_g29
21:53:19 241  ,chf_g30
21:53:19 242  ,chf_g31
21:53:19 243  ,chf_g32
21:53:19 244  ,chf_g33
21:53:19 245  ,chf_g34
21:53:19 246  ,chf_g35
21:53:19 247  ,chf_g36
21:53:19 248  ,chf_g37
21:53:19 249  ,chf_g38
21:53:19 250  ,chf_g39
21:53:19 251  ,chf_g40
21:53:19 252  FROM chf_ms14 m
21:53:19 253  WHERE m.ydate = '&1'||' '||'&2'
21:53:19 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'08:05:00'

View created.

Elapsed: 00:00:00.11
21:53:20 SQL> 
21:53:20 SQL> -- rpt
21:53:20 SQL> -- We should see just 1 row:
21:53:20 SQL> 
21:53:20 SQL> SELECT COUNT(prdate) FROM sme
21:53:20   2  
21:53:20 SQL> -- Build the model:
21:53:20 SQL> CREATE OR REPLACE VIEW bme AS
21:53:20   2  SELECT
21:53:20   3  'chf'||m.ydate prdate
21:53:20   4  ,gattn
21:53:20   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:53:20   6  ,eur_g00
21:53:20   7  ,eur_g01
21:53:20   8  ,eur_g02
21:53:20   9  ,eur_g03
21:53:20  10  ,eur_g04
21:53:20  11  ,eur_g05
21:53:20  12  ,eur_g06
21:53:20  13  ,eur_g07
21:53:20  14  ,eur_g08
21:53:20  15  ,eur_g09
21:53:20  16  ,eur_g10
21:53:20  17  ,eur_g11
21:53:20  18  ,eur_g12
21:53:20  19  ,eur_g13
21:53:20  20  ,eur_g14
21:53:20  21  ,eur_g15
21:53:20  22  ,eur_g16
21:53:20  23  ,eur_g17
21:53:20  24  ,eur_g18
21:53:20  25  ,eur_g19
21:53:20  26  ,eur_g20
21:53:20  27  ,eur_g21
21:53:20  28  ,eur_g22
21:53:20  29  ,eur_g23
21:53:20  30  ,eur_g24
21:53:20  31  ,eur_g25
21:53:20  32  ,eur_g26
21:53:20  33  ,eur_g27
21:53:20  34  ,eur_g28
21:53:20  35  ,eur_g29
21:53:20  36  ,eur_g30
21:53:20  37  ,eur_g31
21:53:20  38  ,eur_g32
21:53:20  39  ,eur_g33
21:53:20  40  ,eur_g34
21:53:20  41  ,eur_g35
21:53:20  42  ,eur_g36
21:53:20  43  ,eur_g37
21:53:20  44  ,eur_g38
21:53:20  45  ,eur_g39
21:53:20  46  ,eur_g40
21:53:20  47  ,aud_g00
21:53:20  48  ,aud_g01
21:53:20  49  ,aud_g02
21:53:20  50  ,aud_g03
21:53:20  51  ,aud_g04
21:53:20  52  ,aud_g05
21:53:20  53  ,aud_g06
21:53:20  54  ,aud_g07
21:53:20  55  ,aud_g08
21:53:20  56  ,aud_g09
21:53:20  57  ,aud_g10
21:53:20  58  ,aud_g11
21:53:20  59  ,aud_g12
21:53:20  60  ,aud_g13
21:53:20  61  ,aud_g14
21:53:20  62  ,aud_g15
21:53:20  63  ,aud_g16
21:53:20  64  ,aud_g17
21:53:20  65  ,aud_g18
21:53:20  66  ,aud_g19
21:53:20  67  ,aud_g20
21:53:20  68  ,aud_g21
21:53:20  69  ,aud_g22
21:53:20  70  ,aud_g23
21:53:20  71  ,aud_g24
21:53:20  72  ,aud_g25
21:53:20  73  ,aud_g26
21:53:20  74  ,aud_g27
21:53:20  75  ,aud_g28
21:53:20  76  ,aud_g29
21:53:20  77  ,aud_g30
21:53:20  78  ,aud_g31
21:53:20  79  ,aud_g32
21:53:20  80  ,aud_g33
21:53:20  81  ,aud_g34
21:53:20  82  ,aud_g35
21:53:20  83  ,aud_g36
21:53:20  84  ,aud_g37
21:53:20  85  ,aud_g38
21:53:20  86  ,aud_g39
21:53:20  87  ,aud_g40
21:53:20  88  ,gbp_g00
21:53:20  89  ,gbp_g01
21:53:20  90  ,gbp_g02
21:53:20  91  ,gbp_g03
21:53:20  92  ,gbp_g04
21:53:20  93  ,gbp_g05
21:53:20  94  ,gbp_g06
21:53:20  95  ,gbp_g07
21:53:20  96  ,gbp_g08
21:53:20  97  ,gbp_g09
21:53:20  98  ,gbp_g10
21:53:20  99  ,gbp_g11
21:53:20 100  ,gbp_g12
21:53:20 101  ,gbp_g13
21:53:20 102  ,gbp_g14
21:53:20 103  ,gbp_g15
21:53:20 104  ,gbp_g16
21:53:20 105  ,gbp_g17
21:53:20 106  ,gbp_g18
21:53:20 107  ,gbp_g19
21:53:20 108  ,gbp_g20
21:53:20 109  ,gbp_g21
21:53:20 110  ,gbp_g22
21:53:20 111  ,gbp_g23
21:53:20 112  ,gbp_g24
21:53:20 113  ,gbp_g25
21:53:20 114  ,gbp_g26
21:53:20 115  ,gbp_g27
21:53:20 116  ,gbp_g28
21:53:20 117  ,gbp_g29
21:53:20 118  ,gbp_g30
21:53:20 119  ,gbp_g31
21:53:20 120  ,gbp_g32
21:53:20 121  ,gbp_g33
21:53:20 122  ,gbp_g34
21:53:20 123  ,gbp_g35
21:53:20 124  ,gbp_g36
21:53:20 125  ,gbp_g37
21:53:20 126  ,gbp_g38
21:53:20 127  ,gbp_g39
21:53:20 128  ,gbp_g40
21:53:20 129  ,jpy_g00
21:53:20 130  ,jpy_g01
21:53:20 131  ,jpy_g02
21:53:20 132  ,jpy_g03
21:53:20 133  ,jpy_g04
21:53:20 134  ,jpy_g05
21:53:20 135  ,jpy_g06
21:53:20 136  ,jpy_g07
21:53:20 137  ,jpy_g08
21:53:20 138  ,jpy_g09
21:53:20 139  ,jpy_g10
21:53:20 140  ,jpy_g11
21:53:20 141  ,jpy_g12
21:53:20 142  ,jpy_g13
21:53:20 143  ,jpy_g14
21:53:20 144  ,jpy_g15
21:53:20 145  ,jpy_g16
21:53:20 146  ,jpy_g17
21:53:20 147  ,jpy_g18
21:53:20 148  ,jpy_g19
21:53:20 149  ,jpy_g20
21:53:20 150  ,jpy_g21
21:53:20 151  ,jpy_g22
21:53:20 152  ,jpy_g23
21:53:20 153  ,jpy_g24
21:53:20 154  ,jpy_g25
21:53:20 155  ,jpy_g26
21:53:20 156  ,jpy_g27
21:53:20 157  ,jpy_g28
21:53:20 158  ,jpy_g29
21:53:20 159  ,jpy_g30
21:53:20 160  ,jpy_g31
21:53:20 161  ,jpy_g32
21:53:20 162  ,jpy_g33
21:53:20 163  ,jpy_g34
21:53:20 164  ,jpy_g35
21:53:20 165  ,jpy_g36
21:53:20 166  ,jpy_g37
21:53:20 167  ,jpy_g38
21:53:20 168  ,jpy_g39
21:53:20 169  ,jpy_g40
21:53:20 170  ,cad_g00
21:53:20 171  ,cad_g01
21:53:20 172  ,cad_g02
21:53:20 173  ,cad_g03
21:53:20 174  ,cad_g04
21:53:20 175  ,cad_g05
21:53:20 176  ,cad_g06
21:53:20 177  ,cad_g07
21:53:20 178  ,cad_g08
21:53:20 179  ,cad_g09
21:53:20 180  ,cad_g10
21:53:20 181  ,cad_g11
21:53:20 182  ,cad_g12
21:53:20 183  ,cad_g13
21:53:20 184  ,cad_g14
21:53:20 185  ,cad_g15
21:53:20 186  ,cad_g16
21:53:20 187  ,cad_g17
21:53:20 188  ,cad_g18
21:53:20 189  ,cad_g19
21:53:20 190  ,cad_g20
21:53:20 191  ,cad_g21
21:53:20 192  ,cad_g22
21:53:20 193  ,cad_g23
21:53:20 194  ,cad_g24
21:53:20 195  ,cad_g25
21:53:20 196  ,cad_g26
21:53:20 197  ,cad_g27
21:53:20 198  ,cad_g28
21:53:20 199  ,cad_g29
21:53:20 200  ,cad_g30
21:53:20 201  ,cad_g31
21:53:20 202  ,cad_g32
21:53:20 203  ,cad_g33
21:53:20 204  ,cad_g34
21:53:20 205  ,cad_g35
21:53:20 206  ,cad_g36
21:53:20 207  ,cad_g37
21:53:20 208  ,cad_g38
21:53:20 209  ,cad_g39
21:53:20 210  ,cad_g40
21:53:20 211  ,chf_g00
21:53:20 212  ,chf_g01
21:53:20 213  ,chf_g02
21:53:20 214  ,chf_g03
21:53:20 215  ,chf_g04
21:53:20 216  ,chf_g05
21:53:20 217  ,chf_g06
21:53:20 218  ,chf_g07
21:53:20 219  ,chf_g08
21:53:20 220  ,chf_g09
21:53:20 221  ,chf_g10
21:53:20 222  ,chf_g11
21:53:20 223  ,chf_g12
21:53:20 224  ,chf_g13
21:53:20 225  ,chf_g14
21:53:20 226  ,chf_g15
21:53:20 227  ,chf_g16
21:53:20 228  ,chf_g17
21:53:20 229  ,chf_g18
21:53:20 230  ,chf_g19
21:53:20 231  ,chf_g20
21:53:20 232  ,chf_g21
21:53:20 233  ,chf_g22
21:53:20 234  ,chf_g23
21:53:20 235  ,chf_g24
21:53:20 236  ,chf_g25
21:53:20 237  ,chf_g26
21:53:20 238  ,chf_g27
21:53:20 239  ,chf_g28
21:53:20 240  ,chf_g29
21:53:20 241  ,chf_g30
21:53:20 242  ,chf_g31
21:53:20 243  ,chf_g32
21:53:20 244  ,chf_g33
21:53:20 245  ,chf_g34
21:53:20 246  ,chf_g35
21:53:20 247  ,chf_g36
21:53:20 248  ,chf_g37
21:53:20 249  ,chf_g38
21:53:20 250  ,chf_g39
21:53:20 251  ,chf_g40
21:53:20 252  FROM chf_ms14 m
21:53:20 253  WHERE gattn IN('nup','up')
21:53:20 254  AND 1+m.ydate < '&1'||' '||'&2'
21:53:20 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'08:05:00'

View created.

Elapsed: 00:00:00.11
21:53:20 SQL> 
21:53:20 SQL> -- rpt
21:53:20 SQL> 
21:53:20 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:53:20   2  
21:53:20 SQL> SELECT MAX(prdate) FROM bme
21:53:20   2  
21:53:20 SQL> -- Now build model from bme and score sme
21:53:20 SQL> @score1gattn.sql
21:53:20 SQL> -- score1gattn.sql
21:53:20 SQL> 
21:53:20 SQL> -- Does the 1st SVM score
21:53:20 SQL> 
21:53:20 SQL> -- Fill up svmc_apply_prep
21:53:20 SQL> @score_gattn.sql
21:53:20 SQL> --
21:53:20 SQL> -- score_gattn.sql
21:53:20 SQL> --
21:53:20 SQL> 
21:53:20 SQL> -- usage: score_gattn.sql
21:53:20 SQL> 
21:53:20 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:53:20 SQL> 
21:53:20 SQL> DEFINE target	= 'gattn'
21:53:20 SQL> DEFINE model_name = 'forex14'
21:53:20 SQL> DEFINE bldtable	= 'bme'
21:53:20 SQL> DEFINE scoretable = 'sme'
21:53:20 SQL> DEFINE case_id	= 'prdate'
21:53:20 SQL> 
21:53:20 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:53:20 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:53:20 SQL> 
21:53:20 SQL> -- Builds an SVM model using pl/sql.
21:53:20 SQL> 
21:53:20 SQL> -----------------------------------------------------------------------
21:53:20 SQL> --			    BUILD THE MODEL
21:53:20 SQL> -----------------------------------------------------------------------
21:53:20 SQL> 
21:53:20 SQL> -- Cleanup old build data preparation objects for repeat runs
21:53:20 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:53:20 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:53:20 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:53:20 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:53:20 SQL> 
21:53:20 SQL> 
21:53:20 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:53:20 SQL> --
21:53:20 SQL> -- DROP	TABLE svmc_settings ;
21:53:20 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:53:20 SQL> -- DELETE svmc_settings;
21:53:20 SQL> 
21:53:20 SQL> -- The default classification algorithm is Naive Bayes. So override
21:53:20 SQL> -- this choice to SVM using a settings table.
21:53:20 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:53:20 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:53:20 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:53:20 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:53:20 SQL> -- models.
21:53:20 SQL> --
21:53:20 SQL> 
21:53:20 SQL> -- Do this once and then comment it out.
21:53:20 SQL> -- That makes script go faster.
21:53:20 SQL> -- BEGIN
21:53:20 SQL> -- -- Populate settings table
21:53:20 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:53:20 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:53:20 SQL> --
21:53:20 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:53:20 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:53:20 SQL> --
21:53:20 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:53:20 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:53:20 SQL> --   COMMIT;
21:53:20 SQL> -- END;
21:53:20 SQL> -- /
21:53:20 SQL> 
21:53:20 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
21:53:20 SQL> 
21:53:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:53:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:53:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:53:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:53:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:53:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:53:20 SQL> 
21:53:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:53:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:53:20 SQL> 
21:53:20 SQL> --------------------------------
21:53:20 SQL> -- PREPARE BUILD (TRAINING) DATA
21:53:20 SQL> --
21:53:20 SQL> 
21:53:20 SQL> -- 1. Missing Value treatment for all Predictors and
21:53:20 SQL> -- 2. Outlier Treatment and
21:53:20 SQL> -- 3. Normalization are performed below.
21:53:20 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:53:20 SQL> --    normalized here.
21:53:20 SQL> 
21:53:20 SQL> BEGIN
21:53:20   2  	-- Perform missing value treatment for all predictors
21:53:20   3  	-- create miss tables
21:53:20   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:53:20   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:53:20   6  
21:53:20   7  	-- populate miss tables
21:53:20   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:53:20   9  	  miss_table_name => 'svmc_miss_num',
21:53:20  10  	  data_table_name => '&bldtable',
21:53:20  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:53:20  12  
21:53:20  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:53:20  14  	  miss_table_name => 'svmc_miss_cat',
21:53:20  15  	  data_table_name => '&bldtable',
21:53:20  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:53:20  17  
21:53:20  18  	-- xform input data to replace missing values
21:53:20  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:53:20  20  	  miss_table_name => 'svmc_miss_num',
21:53:20  21  	  data_table_name => '&bldtable',
21:53:20  22  	  xform_view_name => 'xformed_build_miss_num');
21:53:20  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:53:20  24  	  miss_table_name => 'svmc_miss_cat',
21:53:20  25  	  data_table_name => '&bldtable',
21:53:20  26  	  xform_view_name => 'xformed_build_miss_cat');
21:53:20  27  
21:53:20  28  	-- Perform outlier treatment.
21:53:20  29  	-- create clip table
21:53:20  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:53:20  31  
21:53:20  32  	-- populate clip table
21:53:20  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:53:20  34  	  clip_table_name => 'svmc_clip',
21:53:20  35  	  data_table_name => '&bldtable',
21:53:20  36  	  tail_frac	  => 0.025,
21:53:20  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:53:20  38  
21:53:20  39  	-- xform input data to winsorized data
21:53:20  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:53:20  41  	  clip_table_name => 'svmc_clip',
21:53:20  42  	  data_table_name => '&bldtable',
21:53:20  43  	  xform_view_name => 'svmc_winsor');
21:53:20  44  
21:53:20  45  	-- create normalization table
21:53:20  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:53:20  47  
21:53:20  48  	-- populate normalization table based on winsorized data
21:53:20  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:53:20  50  	  norm_table_name => 'svmc_norm',
21:53:20  51  	  data_table_name => 'svmc_winsor',
21:53:20  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:53:20  53  
21:53:20  54  	-- normalize the original data
21:53:20  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:53:20  56  	  norm_table_name => 'svmc_norm',
21:53:20  57  	  data_table_name => '&bldtable',
21:53:20  58  	  xform_view_name => 'svmc_build_prep');
21:53:20  59  END;
21:53:20  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.01
21:53:38 SQL> 
21:53:38 SQL> ---------------------
21:53:38 SQL> -- CREATE A NEW MODEL
21:53:38 SQL> --
21:53:38 SQL> -- Cleanup old model with the same name for repeat runs
21:53:38 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:53:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:38   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.66
21:53:40 SQL> 
21:53:40 SQL> -- Build a new SVM Model
21:53:40 SQL> BEGIN
21:53:40   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:53:40   3  	  model_name	      => '&model_name',
21:53:40   4  	  mining_function     => dbms_data_mining.classification,
21:53:40   5  	  data_table_name     => 'svmc_build_prep',
21:53:40   6  	  case_id_column_name => '&case_id',
21:53:40   7  	  target_column_name  => '&target',
21:53:40   8  	  settings_table_name => 'svmc_settings');
21:53:40   9  END;
21:53:40  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.67
21:54:05 SQL> 
21:54:05 SQL> -----------------------------------------------------------------------
21:54:05 SQL> --			       APPLY/score THE MODEL
21:54:05 SQL> -----------------------------------------------------------------------
21:54:05 SQL> 
21:54:05 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:54:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:54:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:54:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:54:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:54:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:54:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:54:06 SQL> -----------------------
21:54:06 SQL> -- PREPARE SCORING DATA
21:54:06 SQL> --
21:54:06 SQL> -- If the data for model creation has been prepared, then the data
21:54:06 SQL> -- to be scored using the model must be prepared in the same manner
21:54:06 SQL> -- in order to obtain meaningful results.
21:54:06 SQL> --
21:54:06 SQL> -- 1. Missing Value treatment for all Predictors and
21:54:06 SQL> -- 2. Normalization
21:54:06 SQL> -- No outlier treatment will be performed during test and apply. The
21:54:06 SQL> -- normalization step is sufficient, since the normalization parameters
21:54:06 SQL> -- already capture the effects of outlier treatment done with build data.
21:54:06 SQL> --
21:54:06 SQL> BEGIN
21:54:06   2  	-- Xform Test data to replace missing values
21:54:06   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:54:06   4  	  miss_table_name => 'svmc_miss_num',
21:54:06   5  	  data_table_name => '&scoretable',
21:54:06   6  	  xform_view_name => 'xformed_apply_miss_num');
21:54:06   7  
21:54:06   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:54:06   9  	  miss_table_name => 'svmc_miss_cat',
21:54:06  10  	  data_table_name => '&scoretable',
21:54:06  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:54:06  12  
21:54:06  13  	-- Normalize the data to be scored
21:54:06  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:54:06  15  	  norm_table_name => 'svmc_norm',
21:54:06  16  	  data_table_name => '&scoretable',
21:54:06  17  	  xform_view_name => 'svmc_apply_prep');
21:54:06  18  END;
21:54:06  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
21:54:07 SQL> 
21:54:07 SQL> -- Use same model_name used in score_gattn.sql
21:54:07 SQL> DEFINE model_name = 'forex14'
21:54:07 SQL> 
21:54:07 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:54:07 SQL> 
21:54:07 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:54:07   2  SELECT
21:54:07   3  prdate
21:54:07   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:54:07   5  ,sysdate
21:54:07   6  ,SUBSTR(prdate,1,3)pair
21:54:07   7  ,SUBSTR(prdate,4,19)ydate
21:54:07   8  FROM svmc_apply_prep
21:54:07   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:54:07 SQL> @chf_score1day_gattn.sql	2010-12-17 08:00:00
21:54:07 SQL> --
21:54:07 SQL> -- chf_score1day_gattn.sql
21:54:07 SQL> --
21:54:07 SQL> 
21:54:07 SQL> CREATE OR REPLACE VIEW sme AS
21:54:07   2  SELECT
21:54:07   3  'chf'||m.ydate prdate
21:54:07   4  ,NULL gattn
21:54:07   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:54:07   6  ,eur_g00
21:54:07   7  ,eur_g01
21:54:07   8  ,eur_g02
21:54:07   9  ,eur_g03
21:54:07  10  ,eur_g04
21:54:07  11  ,eur_g05
21:54:07  12  ,eur_g06
21:54:07  13  ,eur_g07
21:54:07  14  ,eur_g08
21:54:07  15  ,eur_g09
21:54:07  16  ,eur_g10
21:54:07  17  ,eur_g11
21:54:07  18  ,eur_g12
21:54:07  19  ,eur_g13
21:54:07  20  ,eur_g14
21:54:07  21  ,eur_g15
21:54:07  22  ,eur_g16
21:54:07  23  ,eur_g17
21:54:07  24  ,eur_g18
21:54:07  25  ,eur_g19
21:54:07  26  ,eur_g20
21:54:07  27  ,eur_g21
21:54:07  28  ,eur_g22
21:54:07  29  ,eur_g23
21:54:07  30  ,eur_g24
21:54:07  31  ,eur_g25
21:54:07  32  ,eur_g26
21:54:07  33  ,eur_g27
21:54:07  34  ,eur_g28
21:54:07  35  ,eur_g29
21:54:07  36  ,eur_g30
21:54:07  37  ,eur_g31
21:54:07  38  ,eur_g32
21:54:07  39  ,eur_g33
21:54:07  40  ,eur_g34
21:54:07  41  ,eur_g35
21:54:07  42  ,eur_g36
21:54:07  43  ,eur_g37
21:54:07  44  ,eur_g38
21:54:07  45  ,eur_g39
21:54:07  46  ,eur_g40
21:54:07  47  ,aud_g00
21:54:07  48  ,aud_g01
21:54:07  49  ,aud_g02
21:54:07  50  ,aud_g03
21:54:07  51  ,aud_g04
21:54:07  52  ,aud_g05
21:54:07  53  ,aud_g06
21:54:07  54  ,aud_g07
21:54:07  55  ,aud_g08
21:54:07  56  ,aud_g09
21:54:07  57  ,aud_g10
21:54:07  58  ,aud_g11
21:54:07  59  ,aud_g12
21:54:07  60  ,aud_g13
21:54:07  61  ,aud_g14
21:54:07  62  ,aud_g15
21:54:07  63  ,aud_g16
21:54:07  64  ,aud_g17
21:54:07  65  ,aud_g18
21:54:07  66  ,aud_g19
21:54:07  67  ,aud_g20
21:54:07  68  ,aud_g21
21:54:07  69  ,aud_g22
21:54:07  70  ,aud_g23
21:54:07  71  ,aud_g24
21:54:07  72  ,aud_g25
21:54:07  73  ,aud_g26
21:54:07  74  ,aud_g27
21:54:07  75  ,aud_g28
21:54:07  76  ,aud_g29
21:54:07  77  ,aud_g30
21:54:07  78  ,aud_g31
21:54:07  79  ,aud_g32
21:54:07  80  ,aud_g33
21:54:07  81  ,aud_g34
21:54:07  82  ,aud_g35
21:54:07  83  ,aud_g36
21:54:07  84  ,aud_g37
21:54:07  85  ,aud_g38
21:54:07  86  ,aud_g39
21:54:07  87  ,aud_g40
21:54:07  88  ,gbp_g00
21:54:07  89  ,gbp_g01
21:54:07  90  ,gbp_g02
21:54:07  91  ,gbp_g03
21:54:07  92  ,gbp_g04
21:54:07  93  ,gbp_g05
21:54:07  94  ,gbp_g06
21:54:07  95  ,gbp_g07
21:54:07  96  ,gbp_g08
21:54:07  97  ,gbp_g09
21:54:07  98  ,gbp_g10
21:54:07  99  ,gbp_g11
21:54:07 100  ,gbp_g12
21:54:07 101  ,gbp_g13
21:54:07 102  ,gbp_g14
21:54:07 103  ,gbp_g15
21:54:07 104  ,gbp_g16
21:54:07 105  ,gbp_g17
21:54:07 106  ,gbp_g18
21:54:07 107  ,gbp_g19
21:54:07 108  ,gbp_g20
21:54:07 109  ,gbp_g21
21:54:07 110  ,gbp_g22
21:54:07 111  ,gbp_g23
21:54:07 112  ,gbp_g24
21:54:07 113  ,gbp_g25
21:54:07 114  ,gbp_g26
21:54:07 115  ,gbp_g27
21:54:07 116  ,gbp_g28
21:54:07 117  ,gbp_g29
21:54:07 118  ,gbp_g30
21:54:07 119  ,gbp_g31
21:54:07 120  ,gbp_g32
21:54:07 121  ,gbp_g33
21:54:07 122  ,gbp_g34
21:54:07 123  ,gbp_g35
21:54:07 124  ,gbp_g36
21:54:07 125  ,gbp_g37
21:54:07 126  ,gbp_g38
21:54:07 127  ,gbp_g39
21:54:07 128  ,gbp_g40
21:54:07 129  ,jpy_g00
21:54:07 130  ,jpy_g01
21:54:07 131  ,jpy_g02
21:54:07 132  ,jpy_g03
21:54:07 133  ,jpy_g04
21:54:07 134  ,jpy_g05
21:54:07 135  ,jpy_g06
21:54:07 136  ,jpy_g07
21:54:07 137  ,jpy_g08
21:54:07 138  ,jpy_g09
21:54:07 139  ,jpy_g10
21:54:07 140  ,jpy_g11
21:54:07 141  ,jpy_g12
21:54:07 142  ,jpy_g13
21:54:07 143  ,jpy_g14
21:54:07 144  ,jpy_g15
21:54:07 145  ,jpy_g16
21:54:07 146  ,jpy_g17
21:54:07 147  ,jpy_g18
21:54:07 148  ,jpy_g19
21:54:07 149  ,jpy_g20
21:54:07 150  ,jpy_g21
21:54:07 151  ,jpy_g22
21:54:07 152  ,jpy_g23
21:54:07 153  ,jpy_g24
21:54:07 154  ,jpy_g25
21:54:07 155  ,jpy_g26
21:54:07 156  ,jpy_g27
21:54:07 157  ,jpy_g28
21:54:07 158  ,jpy_g29
21:54:07 159  ,jpy_g30
21:54:07 160  ,jpy_g31
21:54:07 161  ,jpy_g32
21:54:07 162  ,jpy_g33
21:54:07 163  ,jpy_g34
21:54:07 164  ,jpy_g35
21:54:07 165  ,jpy_g36
21:54:07 166  ,jpy_g37
21:54:07 167  ,jpy_g38
21:54:07 168  ,jpy_g39
21:54:07 169  ,jpy_g40
21:54:07 170  ,cad_g00
21:54:07 171  ,cad_g01
21:54:07 172  ,cad_g02
21:54:07 173  ,cad_g03
21:54:07 174  ,cad_g04
21:54:07 175  ,cad_g05
21:54:07 176  ,cad_g06
21:54:07 177  ,cad_g07
21:54:07 178  ,cad_g08
21:54:07 179  ,cad_g09
21:54:07 180  ,cad_g10
21:54:07 181  ,cad_g11
21:54:07 182  ,cad_g12
21:54:07 183  ,cad_g13
21:54:07 184  ,cad_g14
21:54:07 185  ,cad_g15
21:54:07 186  ,cad_g16
21:54:07 187  ,cad_g17
21:54:07 188  ,cad_g18
21:54:07 189  ,cad_g19
21:54:07 190  ,cad_g20
21:54:07 191  ,cad_g21
21:54:07 192  ,cad_g22
21:54:07 193  ,cad_g23
21:54:07 194  ,cad_g24
21:54:07 195  ,cad_g25
21:54:07 196  ,cad_g26
21:54:07 197  ,cad_g27
21:54:07 198  ,cad_g28
21:54:07 199  ,cad_g29
21:54:07 200  ,cad_g30
21:54:07 201  ,cad_g31
21:54:07 202  ,cad_g32
21:54:07 203  ,cad_g33
21:54:07 204  ,cad_g34
21:54:07 205  ,cad_g35
21:54:07 206  ,cad_g36
21:54:07 207  ,cad_g37
21:54:07 208  ,cad_g38
21:54:07 209  ,cad_g39
21:54:07 210  ,cad_g40
21:54:07 211  ,chf_g00
21:54:07 212  ,chf_g01
21:54:07 213  ,chf_g02
21:54:07 214  ,chf_g03
21:54:07 215  ,chf_g04
21:54:07 216  ,chf_g05
21:54:07 217  ,chf_g06
21:54:07 218  ,chf_g07
21:54:07 219  ,chf_g08
21:54:07 220  ,chf_g09
21:54:07 221  ,chf_g10
21:54:07 222  ,chf_g11
21:54:07 223  ,chf_g12
21:54:07 224  ,chf_g13
21:54:07 225  ,chf_g14
21:54:07 226  ,chf_g15
21:54:07 227  ,chf_g16
21:54:07 228  ,chf_g17
21:54:07 229  ,chf_g18
21:54:07 230  ,chf_g19
21:54:07 231  ,chf_g20
21:54:07 232  ,chf_g21
21:54:07 233  ,chf_g22
21:54:07 234  ,chf_g23
21:54:07 235  ,chf_g24
21:54:07 236  ,chf_g25
21:54:07 237  ,chf_g26
21:54:07 238  ,chf_g27
21:54:07 239  ,chf_g28
21:54:07 240  ,chf_g29
21:54:07 241  ,chf_g30
21:54:07 242  ,chf_g31
21:54:07 243  ,chf_g32
21:54:07 244  ,chf_g33
21:54:07 245  ,chf_g34
21:54:07 246  ,chf_g35
21:54:07 247  ,chf_g36
21:54:07 248  ,chf_g37
21:54:07 249  ,chf_g38
21:54:07 250  ,chf_g39
21:54:07 251  ,chf_g40
21:54:07 252  FROM chf_ms14 m
21:54:07 253  WHERE m.ydate = '&1'||' '||'&2'
21:54:07 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'08:00:00'

View created.

Elapsed: 00:00:00.12
21:54:07 SQL> 
21:54:07 SQL> -- rpt
21:54:07 SQL> -- We should see just 1 row:
21:54:07 SQL> 
21:54:07 SQL> SELECT COUNT(prdate) FROM sme
21:54:07   2  
21:54:07 SQL> -- Build the model:
21:54:07 SQL> CREATE OR REPLACE VIEW bme AS
21:54:07   2  SELECT
21:54:07   3  'chf'||m.ydate prdate
21:54:07   4  ,gattn
21:54:07   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:54:07   6  ,eur_g00
21:54:07   7  ,eur_g01
21:54:07   8  ,eur_g02
21:54:07   9  ,eur_g03
21:54:07  10  ,eur_g04
21:54:07  11  ,eur_g05
21:54:07  12  ,eur_g06
21:54:07  13  ,eur_g07
21:54:07  14  ,eur_g08
21:54:07  15  ,eur_g09
21:54:07  16  ,eur_g10
21:54:07  17  ,eur_g11
21:54:07  18  ,eur_g12
21:54:07  19  ,eur_g13
21:54:07  20  ,eur_g14
21:54:07  21  ,eur_g15
21:54:07  22  ,eur_g16
21:54:07  23  ,eur_g17
21:54:07  24  ,eur_g18
21:54:07  25  ,eur_g19
21:54:07  26  ,eur_g20
21:54:07  27  ,eur_g21
21:54:07  28  ,eur_g22
21:54:07  29  ,eur_g23
21:54:07  30  ,eur_g24
21:54:07  31  ,eur_g25
21:54:07  32  ,eur_g26
21:54:07  33  ,eur_g27
21:54:07  34  ,eur_g28
21:54:07  35  ,eur_g29
21:54:07  36  ,eur_g30
21:54:07  37  ,eur_g31
21:54:07  38  ,eur_g32
21:54:07  39  ,eur_g33
21:54:07  40  ,eur_g34
21:54:07  41  ,eur_g35
21:54:07  42  ,eur_g36
21:54:07  43  ,eur_g37
21:54:07  44  ,eur_g38
21:54:07  45  ,eur_g39
21:54:07  46  ,eur_g40
21:54:07  47  ,aud_g00
21:54:07  48  ,aud_g01
21:54:07  49  ,aud_g02
21:54:07  50  ,aud_g03
21:54:07  51  ,aud_g04
21:54:07  52  ,aud_g05
21:54:07  53  ,aud_g06
21:54:07  54  ,aud_g07
21:54:07  55  ,aud_g08
21:54:07  56  ,aud_g09
21:54:07  57  ,aud_g10
21:54:07  58  ,aud_g11
21:54:07  59  ,aud_g12
21:54:07  60  ,aud_g13
21:54:07  61  ,aud_g14
21:54:07  62  ,aud_g15
21:54:07  63  ,aud_g16
21:54:07  64  ,aud_g17
21:54:07  65  ,aud_g18
21:54:07  66  ,aud_g19
21:54:07  67  ,aud_g20
21:54:07  68  ,aud_g21
21:54:07  69  ,aud_g22
21:54:07  70  ,aud_g23
21:54:07  71  ,aud_g24
21:54:07  72  ,aud_g25
21:54:07  73  ,aud_g26
21:54:07  74  ,aud_g27
21:54:07  75  ,aud_g28
21:54:07  76  ,aud_g29
21:54:07  77  ,aud_g30
21:54:07  78  ,aud_g31
21:54:07  79  ,aud_g32
21:54:07  80  ,aud_g33
21:54:07  81  ,aud_g34
21:54:07  82  ,aud_g35
21:54:07  83  ,aud_g36
21:54:07  84  ,aud_g37
21:54:07  85  ,aud_g38
21:54:07  86  ,aud_g39
21:54:07  87  ,aud_g40
21:54:07  88  ,gbp_g00
21:54:07  89  ,gbp_g01
21:54:07  90  ,gbp_g02
21:54:07  91  ,gbp_g03
21:54:07  92  ,gbp_g04
21:54:07  93  ,gbp_g05
21:54:07  94  ,gbp_g06
21:54:07  95  ,gbp_g07
21:54:07  96  ,gbp_g08
21:54:07  97  ,gbp_g09
21:54:07  98  ,gbp_g10
21:54:07  99  ,gbp_g11
21:54:07 100  ,gbp_g12
21:54:07 101  ,gbp_g13
21:54:07 102  ,gbp_g14
21:54:07 103  ,gbp_g15
21:54:07 104  ,gbp_g16
21:54:07 105  ,gbp_g17
21:54:07 106  ,gbp_g18
21:54:07 107  ,gbp_g19
21:54:07 108  ,gbp_g20
21:54:07 109  ,gbp_g21
21:54:07 110  ,gbp_g22
21:54:07 111  ,gbp_g23
21:54:07 112  ,gbp_g24
21:54:07 113  ,gbp_g25
21:54:07 114  ,gbp_g26
21:54:07 115  ,gbp_g27
21:54:07 116  ,gbp_g28
21:54:07 117  ,gbp_g29
21:54:07 118  ,gbp_g30
21:54:07 119  ,gbp_g31
21:54:07 120  ,gbp_g32
21:54:07 121  ,gbp_g33
21:54:07 122  ,gbp_g34
21:54:07 123  ,gbp_g35
21:54:07 124  ,gbp_g36
21:54:07 125  ,gbp_g37
21:54:07 126  ,gbp_g38
21:54:07 127  ,gbp_g39
21:54:07 128  ,gbp_g40
21:54:07 129  ,jpy_g00
21:54:07 130  ,jpy_g01
21:54:07 131  ,jpy_g02
21:54:07 132  ,jpy_g03
21:54:07 133  ,jpy_g04
21:54:07 134  ,jpy_g05
21:54:07 135  ,jpy_g06
21:54:07 136  ,jpy_g07
21:54:07 137  ,jpy_g08
21:54:07 138  ,jpy_g09
21:54:07 139  ,jpy_g10
21:54:07 140  ,jpy_g11
21:54:07 141  ,jpy_g12
21:54:07 142  ,jpy_g13
21:54:07 143  ,jpy_g14
21:54:07 144  ,jpy_g15
21:54:07 145  ,jpy_g16
21:54:07 146  ,jpy_g17
21:54:07 147  ,jpy_g18
21:54:07 148  ,jpy_g19
21:54:07 149  ,jpy_g20
21:54:07 150  ,jpy_g21
21:54:07 151  ,jpy_g22
21:54:07 152  ,jpy_g23
21:54:07 153  ,jpy_g24
21:54:07 154  ,jpy_g25
21:54:07 155  ,jpy_g26
21:54:07 156  ,jpy_g27
21:54:07 157  ,jpy_g28
21:54:07 158  ,jpy_g29
21:54:07 159  ,jpy_g30
21:54:07 160  ,jpy_g31
21:54:07 161  ,jpy_g32
21:54:07 162  ,jpy_g33
21:54:07 163  ,jpy_g34
21:54:07 164  ,jpy_g35
21:54:07 165  ,jpy_g36
21:54:07 166  ,jpy_g37
21:54:07 167  ,jpy_g38
21:54:07 168  ,jpy_g39
21:54:07 169  ,jpy_g40
21:54:07 170  ,cad_g00
21:54:07 171  ,cad_g01
21:54:07 172  ,cad_g02
21:54:07 173  ,cad_g03
21:54:07 174  ,cad_g04
21:54:07 175  ,cad_g05
21:54:07 176  ,cad_g06
21:54:07 177  ,cad_g07
21:54:07 178  ,cad_g08
21:54:07 179  ,cad_g09
21:54:07 180  ,cad_g10
21:54:07 181  ,cad_g11
21:54:07 182  ,cad_g12
21:54:07 183  ,cad_g13
21:54:07 184  ,cad_g14
21:54:07 185  ,cad_g15
21:54:07 186  ,cad_g16
21:54:07 187  ,cad_g17
21:54:07 188  ,cad_g18
21:54:07 189  ,cad_g19
21:54:07 190  ,cad_g20
21:54:07 191  ,cad_g21
21:54:07 192  ,cad_g22
21:54:07 193  ,cad_g23
21:54:07 194  ,cad_g24
21:54:07 195  ,cad_g25
21:54:07 196  ,cad_g26
21:54:07 197  ,cad_g27
21:54:07 198  ,cad_g28
21:54:07 199  ,cad_g29
21:54:07 200  ,cad_g30
21:54:07 201  ,cad_g31
21:54:07 202  ,cad_g32
21:54:07 203  ,cad_g33
21:54:07 204  ,cad_g34
21:54:07 205  ,cad_g35
21:54:07 206  ,cad_g36
21:54:07 207  ,cad_g37
21:54:07 208  ,cad_g38
21:54:07 209  ,cad_g39
21:54:07 210  ,cad_g40
21:54:07 211  ,chf_g00
21:54:07 212  ,chf_g01
21:54:07 213  ,chf_g02
21:54:07 214  ,chf_g03
21:54:07 215  ,chf_g04
21:54:07 216  ,chf_g05
21:54:07 217  ,chf_g06
21:54:07 218  ,chf_g07
21:54:07 219  ,chf_g08
21:54:07 220  ,chf_g09
21:54:07 221  ,chf_g10
21:54:07 222  ,chf_g11
21:54:07 223  ,chf_g12
21:54:07 224  ,chf_g13
21:54:07 225  ,chf_g14
21:54:07 226  ,chf_g15
21:54:07 227  ,chf_g16
21:54:07 228  ,chf_g17
21:54:07 229  ,chf_g18
21:54:07 230  ,chf_g19
21:54:07 231  ,chf_g20
21:54:07 232  ,chf_g21
21:54:07 233  ,chf_g22
21:54:07 234  ,chf_g23
21:54:07 235  ,chf_g24
21:54:07 236  ,chf_g25
21:54:07 237  ,chf_g26
21:54:07 238  ,chf_g27
21:54:07 239  ,chf_g28
21:54:07 240  ,chf_g29
21:54:07 241  ,chf_g30
21:54:07 242  ,chf_g31
21:54:07 243  ,chf_g32
21:54:07 244  ,chf_g33
21:54:07 245  ,chf_g34
21:54:07 246  ,chf_g35
21:54:07 247  ,chf_g36
21:54:07 248  ,chf_g37
21:54:07 249  ,chf_g38
21:54:07 250  ,chf_g39
21:54:07 251  ,chf_g40
21:54:07 252  FROM chf_ms14 m
21:54:07 253  WHERE gattn IN('nup','up')
21:54:07 254  AND 1+m.ydate < '&1'||' '||'&2'
21:54:07 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'08:00:00'

View created.

Elapsed: 00:00:00.13
21:54:07 SQL> 
21:54:07 SQL> -- rpt
21:54:07 SQL> 
21:54:07 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:54:07   2  
21:54:07 SQL> SELECT MAX(prdate) FROM bme
21:54:07   2  
21:54:07 SQL> -- Now build model from bme and score sme
21:54:07 SQL> @score1gattn.sql
21:54:07 SQL> -- score1gattn.sql
21:54:07 SQL> 
21:54:07 SQL> -- Does the 1st SVM score
21:54:07 SQL> 
21:54:07 SQL> -- Fill up svmc_apply_prep
21:54:07 SQL> @score_gattn.sql
21:54:07 SQL> --
21:54:07 SQL> -- score_gattn.sql
21:54:07 SQL> --
21:54:07 SQL> 
21:54:07 SQL> -- usage: score_gattn.sql
21:54:07 SQL> 
21:54:07 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:54:07 SQL> 
21:54:07 SQL> DEFINE target	= 'gattn'
21:54:07 SQL> DEFINE model_name = 'forex14'
21:54:07 SQL> DEFINE bldtable	= 'bme'
21:54:07 SQL> DEFINE scoretable = 'sme'
21:54:07 SQL> DEFINE case_id	= 'prdate'
21:54:07 SQL> 
21:54:07 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:54:07 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:54:07 SQL> 
21:54:07 SQL> -- Builds an SVM model using pl/sql.
21:54:07 SQL> 
21:54:07 SQL> -----------------------------------------------------------------------
21:54:07 SQL> --			    BUILD THE MODEL
21:54:07 SQL> -----------------------------------------------------------------------
21:54:07 SQL> 
21:54:07 SQL> -- Cleanup old build data preparation objects for repeat runs
21:54:07 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:54:07 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:54:07 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:54:07 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:54:07 SQL> 
21:54:07 SQL> 
21:54:07 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:54:07 SQL> --
21:54:07 SQL> -- DROP	TABLE svmc_settings ;
21:54:07 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:54:07 SQL> -- DELETE svmc_settings;
21:54:07 SQL> 
21:54:07 SQL> -- The default classification algorithm is Naive Bayes. So override
21:54:07 SQL> -- this choice to SVM using a settings table.
21:54:07 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:54:07 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:54:07 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:54:07 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:54:07 SQL> -- models.
21:54:07 SQL> --
21:54:07 SQL> 
21:54:07 SQL> -- Do this once and then comment it out.
21:54:07 SQL> -- That makes script go faster.
21:54:07 SQL> -- BEGIN
21:54:07 SQL> -- -- Populate settings table
21:54:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:54:07 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:54:07 SQL> --
21:54:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:54:07 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:54:07 SQL> --
21:54:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:54:07 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:54:07 SQL> --   COMMIT;
21:54:07 SQL> -- END;
21:54:07 SQL> -- /
21:54:07 SQL> 
21:54:07 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:54:07 SQL> 
21:54:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:54:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
21:54:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:54:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:54:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:54:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:54:07 SQL> 
21:54:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:54:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:54:07 SQL> 
21:54:07 SQL> --------------------------------
21:54:07 SQL> -- PREPARE BUILD (TRAINING) DATA
21:54:07 SQL> --
21:54:07 SQL> 
21:54:07 SQL> -- 1. Missing Value treatment for all Predictors and
21:54:07 SQL> -- 2. Outlier Treatment and
21:54:07 SQL> -- 3. Normalization are performed below.
21:54:07 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:54:07 SQL> --    normalized here.
21:54:07 SQL> 
21:54:07 SQL> BEGIN
21:54:07   2  	-- Perform missing value treatment for all predictors
21:54:07   3  	-- create miss tables
21:54:07   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:54:07   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:54:07   6  
21:54:07   7  	-- populate miss tables
21:54:07   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:54:07   9  	  miss_table_name => 'svmc_miss_num',
21:54:07  10  	  data_table_name => '&bldtable',
21:54:07  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:54:07  12  
21:54:07  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:54:07  14  	  miss_table_name => 'svmc_miss_cat',
21:54:07  15  	  data_table_name => '&bldtable',
21:54:07  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:54:07  17  
21:54:07  18  	-- xform input data to replace missing values
21:54:07  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:54:07  20  	  miss_table_name => 'svmc_miss_num',
21:54:07  21  	  data_table_name => '&bldtable',
21:54:07  22  	  xform_view_name => 'xformed_build_miss_num');
21:54:07  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:54:07  24  	  miss_table_name => 'svmc_miss_cat',
21:54:07  25  	  data_table_name => '&bldtable',
21:54:07  26  	  xform_view_name => 'xformed_build_miss_cat');
21:54:07  27  
21:54:07  28  	-- Perform outlier treatment.
21:54:07  29  	-- create clip table
21:54:07  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:54:07  31  
21:54:07  32  	-- populate clip table
21:54:07  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:54:07  34  	  clip_table_name => 'svmc_clip',
21:54:07  35  	  data_table_name => '&bldtable',
21:54:07  36  	  tail_frac	  => 0.025,
21:54:07  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:54:07  38  
21:54:07  39  	-- xform input data to winsorized data
21:54:07  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:54:07  41  	  clip_table_name => 'svmc_clip',
21:54:07  42  	  data_table_name => '&bldtable',
21:54:07  43  	  xform_view_name => 'svmc_winsor');
21:54:07  44  
21:54:07  45  	-- create normalization table
21:54:07  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:54:07  47  
21:54:07  48  	-- populate normalization table based on winsorized data
21:54:07  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:54:07  50  	  norm_table_name => 'svmc_norm',
21:54:07  51  	  data_table_name => 'svmc_winsor',
21:54:07  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:54:07  53  
21:54:07  54  	-- normalize the original data
21:54:07  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:54:07  56  	  norm_table_name => 'svmc_norm',
21:54:07  57  	  data_table_name => '&bldtable',
21:54:07  58  	  xform_view_name => 'svmc_build_prep');
21:54:07  59  END;
21:54:07  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.94
21:54:25 SQL> 
21:54:25 SQL> ---------------------
21:54:25 SQL> -- CREATE A NEW MODEL
21:54:25 SQL> --
21:54:25 SQL> -- Cleanup old model with the same name for repeat runs
21:54:25 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:54:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:25   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.10
21:54:26 SQL> 
21:54:26 SQL> -- Build a new SVM Model
21:54:26 SQL> BEGIN
21:54:26   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:54:26   3  	  model_name	      => '&model_name',
21:54:26   4  	  mining_function     => dbms_data_mining.classification,
21:54:26   5  	  data_table_name     => 'svmc_build_prep',
21:54:26   6  	  case_id_column_name => '&case_id',
21:54:26   7  	  target_column_name  => '&target',
21:54:26   8  	  settings_table_name => 'svmc_settings');
21:54:26   9  END;
21:54:26  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.59
21:54:52 SQL> 
21:54:52 SQL> -----------------------------------------------------------------------
21:54:52 SQL> --			       APPLY/score THE MODEL
21:54:52 SQL> -----------------------------------------------------------------------
21:54:52 SQL> 
21:54:52 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:54:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:54:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:54:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:54:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:54:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:54:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:54:52 SQL> -----------------------
21:54:52 SQL> -- PREPARE SCORING DATA
21:54:52 SQL> --
21:54:52 SQL> -- If the data for model creation has been prepared, then the data
21:54:52 SQL> -- to be scored using the model must be prepared in the same manner
21:54:52 SQL> -- in order to obtain meaningful results.
21:54:52 SQL> --
21:54:52 SQL> -- 1. Missing Value treatment for all Predictors and
21:54:52 SQL> -- 2. Normalization
21:54:52 SQL> -- No outlier treatment will be performed during test and apply. The
21:54:52 SQL> -- normalization step is sufficient, since the normalization parameters
21:54:52 SQL> -- already capture the effects of outlier treatment done with build data.
21:54:52 SQL> --
21:54:52 SQL> BEGIN
21:54:52   2  	-- Xform Test data to replace missing values
21:54:52   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:54:52   4  	  miss_table_name => 'svmc_miss_num',
21:54:52   5  	  data_table_name => '&scoretable',
21:54:52   6  	  xform_view_name => 'xformed_apply_miss_num');
21:54:52   7  
21:54:52   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:54:52   9  	  miss_table_name => 'svmc_miss_cat',
21:54:52  10  	  data_table_name => '&scoretable',
21:54:52  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:54:52  12  
21:54:52  13  	-- Normalize the data to be scored
21:54:52  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:54:52  15  	  norm_table_name => 'svmc_norm',
21:54:52  16  	  data_table_name => '&scoretable',
21:54:52  17  	  xform_view_name => 'svmc_apply_prep');
21:54:52  18  END;
21:54:52  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.10
21:54:53 SQL> 
21:54:53 SQL> -- Use same model_name used in score_gattn.sql
21:54:53 SQL> DEFINE model_name = 'forex14'
21:54:53 SQL> 
21:54:53 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:54:53 SQL> 
21:54:53 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:54:53   2  SELECT
21:54:53   3  prdate
21:54:53   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:54:53   5  ,sysdate
21:54:53   6  ,SUBSTR(prdate,1,3)pair
21:54:53   7  ,SUBSTR(prdate,4,19)ydate
21:54:53   8  FROM svmc_apply_prep
21:54:53   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:54:54 SQL> @chf_score1day_gattn.sql	2010-12-17 07:55:00
21:54:54 SQL> --
21:54:54 SQL> -- chf_score1day_gattn.sql
21:54:54 SQL> --
21:54:54 SQL> 
21:54:54 SQL> CREATE OR REPLACE VIEW sme AS
21:54:54   2  SELECT
21:54:54   3  'chf'||m.ydate prdate
21:54:54   4  ,NULL gattn
21:54:54   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:54:54   6  ,eur_g00
21:54:54   7  ,eur_g01
21:54:54   8  ,eur_g02
21:54:54   9  ,eur_g03
21:54:54  10  ,eur_g04
21:54:54  11  ,eur_g05
21:54:54  12  ,eur_g06
21:54:54  13  ,eur_g07
21:54:54  14  ,eur_g08
21:54:54  15  ,eur_g09
21:54:54  16  ,eur_g10
21:54:54  17  ,eur_g11
21:54:54  18  ,eur_g12
21:54:54  19  ,eur_g13
21:54:54  20  ,eur_g14
21:54:54  21  ,eur_g15
21:54:54  22  ,eur_g16
21:54:54  23  ,eur_g17
21:54:54  24  ,eur_g18
21:54:54  25  ,eur_g19
21:54:54  26  ,eur_g20
21:54:54  27  ,eur_g21
21:54:54  28  ,eur_g22
21:54:54  29  ,eur_g23
21:54:54  30  ,eur_g24
21:54:54  31  ,eur_g25
21:54:54  32  ,eur_g26
21:54:54  33  ,eur_g27
21:54:54  34  ,eur_g28
21:54:54  35  ,eur_g29
21:54:54  36  ,eur_g30
21:54:54  37  ,eur_g31
21:54:54  38  ,eur_g32
21:54:54  39  ,eur_g33
21:54:54  40  ,eur_g34
21:54:54  41  ,eur_g35
21:54:54  42  ,eur_g36
21:54:54  43  ,eur_g37
21:54:54  44  ,eur_g38
21:54:54  45  ,eur_g39
21:54:54  46  ,eur_g40
21:54:54  47  ,aud_g00
21:54:54  48  ,aud_g01
21:54:54  49  ,aud_g02
21:54:54  50  ,aud_g03
21:54:54  51  ,aud_g04
21:54:54  52  ,aud_g05
21:54:54  53  ,aud_g06
21:54:54  54  ,aud_g07
21:54:54  55  ,aud_g08
21:54:54  56  ,aud_g09
21:54:54  57  ,aud_g10
21:54:54  58  ,aud_g11
21:54:54  59  ,aud_g12
21:54:54  60  ,aud_g13
21:54:54  61  ,aud_g14
21:54:54  62  ,aud_g15
21:54:54  63  ,aud_g16
21:54:54  64  ,aud_g17
21:54:54  65  ,aud_g18
21:54:54  66  ,aud_g19
21:54:54  67  ,aud_g20
21:54:54  68  ,aud_g21
21:54:54  69  ,aud_g22
21:54:54  70  ,aud_g23
21:54:54  71  ,aud_g24
21:54:54  72  ,aud_g25
21:54:54  73  ,aud_g26
21:54:54  74  ,aud_g27
21:54:54  75  ,aud_g28
21:54:54  76  ,aud_g29
21:54:54  77  ,aud_g30
21:54:54  78  ,aud_g31
21:54:54  79  ,aud_g32
21:54:54  80  ,aud_g33
21:54:54  81  ,aud_g34
21:54:54  82  ,aud_g35
21:54:54  83  ,aud_g36
21:54:54  84  ,aud_g37
21:54:54  85  ,aud_g38
21:54:54  86  ,aud_g39
21:54:54  87  ,aud_g40
21:54:54  88  ,gbp_g00
21:54:54  89  ,gbp_g01
21:54:54  90  ,gbp_g02
21:54:54  91  ,gbp_g03
21:54:54  92  ,gbp_g04
21:54:54  93  ,gbp_g05
21:54:54  94  ,gbp_g06
21:54:54  95  ,gbp_g07
21:54:54  96  ,gbp_g08
21:54:54  97  ,gbp_g09
21:54:54  98  ,gbp_g10
21:54:54  99  ,gbp_g11
21:54:54 100  ,gbp_g12
21:54:54 101  ,gbp_g13
21:54:54 102  ,gbp_g14
21:54:54 103  ,gbp_g15
21:54:54 104  ,gbp_g16
21:54:54 105  ,gbp_g17
21:54:54 106  ,gbp_g18
21:54:54 107  ,gbp_g19
21:54:54 108  ,gbp_g20
21:54:54 109  ,gbp_g21
21:54:54 110  ,gbp_g22
21:54:54 111  ,gbp_g23
21:54:54 112  ,gbp_g24
21:54:54 113  ,gbp_g25
21:54:54 114  ,gbp_g26
21:54:54 115  ,gbp_g27
21:54:54 116  ,gbp_g28
21:54:54 117  ,gbp_g29
21:54:54 118  ,gbp_g30
21:54:54 119  ,gbp_g31
21:54:54 120  ,gbp_g32
21:54:54 121  ,gbp_g33
21:54:54 122  ,gbp_g34
21:54:54 123  ,gbp_g35
21:54:54 124  ,gbp_g36
21:54:54 125  ,gbp_g37
21:54:54 126  ,gbp_g38
21:54:54 127  ,gbp_g39
21:54:54 128  ,gbp_g40
21:54:54 129  ,jpy_g00
21:54:54 130  ,jpy_g01
21:54:54 131  ,jpy_g02
21:54:54 132  ,jpy_g03
21:54:54 133  ,jpy_g04
21:54:54 134  ,jpy_g05
21:54:54 135  ,jpy_g06
21:54:54 136  ,jpy_g07
21:54:54 137  ,jpy_g08
21:54:54 138  ,jpy_g09
21:54:54 139  ,jpy_g10
21:54:54 140  ,jpy_g11
21:54:54 141  ,jpy_g12
21:54:54 142  ,jpy_g13
21:54:54 143  ,jpy_g14
21:54:54 144  ,jpy_g15
21:54:54 145  ,jpy_g16
21:54:54 146  ,jpy_g17
21:54:54 147  ,jpy_g18
21:54:54 148  ,jpy_g19
21:54:54 149  ,jpy_g20
21:54:54 150  ,jpy_g21
21:54:54 151  ,jpy_g22
21:54:54 152  ,jpy_g23
21:54:54 153  ,jpy_g24
21:54:54 154  ,jpy_g25
21:54:54 155  ,jpy_g26
21:54:54 156  ,jpy_g27
21:54:54 157  ,jpy_g28
21:54:54 158  ,jpy_g29
21:54:54 159  ,jpy_g30
21:54:54 160  ,jpy_g31
21:54:54 161  ,jpy_g32
21:54:54 162  ,jpy_g33
21:54:54 163  ,jpy_g34
21:54:54 164  ,jpy_g35
21:54:54 165  ,jpy_g36
21:54:54 166  ,jpy_g37
21:54:54 167  ,jpy_g38
21:54:54 168  ,jpy_g39
21:54:54 169  ,jpy_g40
21:54:54 170  ,cad_g00
21:54:54 171  ,cad_g01
21:54:54 172  ,cad_g02
21:54:54 173  ,cad_g03
21:54:54 174  ,cad_g04
21:54:54 175  ,cad_g05
21:54:54 176  ,cad_g06
21:54:54 177  ,cad_g07
21:54:54 178  ,cad_g08
21:54:54 179  ,cad_g09
21:54:54 180  ,cad_g10
21:54:54 181  ,cad_g11
21:54:54 182  ,cad_g12
21:54:54 183  ,cad_g13
21:54:54 184  ,cad_g14
21:54:54 185  ,cad_g15
21:54:54 186  ,cad_g16
21:54:54 187  ,cad_g17
21:54:54 188  ,cad_g18
21:54:54 189  ,cad_g19
21:54:54 190  ,cad_g20
21:54:54 191  ,cad_g21
21:54:54 192  ,cad_g22
21:54:54 193  ,cad_g23
21:54:54 194  ,cad_g24
21:54:54 195  ,cad_g25
21:54:54 196  ,cad_g26
21:54:54 197  ,cad_g27
21:54:54 198  ,cad_g28
21:54:54 199  ,cad_g29
21:54:54 200  ,cad_g30
21:54:54 201  ,cad_g31
21:54:54 202  ,cad_g32
21:54:54 203  ,cad_g33
21:54:54 204  ,cad_g34
21:54:54 205  ,cad_g35
21:54:54 206  ,cad_g36
21:54:54 207  ,cad_g37
21:54:54 208  ,cad_g38
21:54:54 209  ,cad_g39
21:54:54 210  ,cad_g40
21:54:54 211  ,chf_g00
21:54:54 212  ,chf_g01
21:54:54 213  ,chf_g02
21:54:54 214  ,chf_g03
21:54:54 215  ,chf_g04
21:54:54 216  ,chf_g05
21:54:54 217  ,chf_g06
21:54:54 218  ,chf_g07
21:54:54 219  ,chf_g08
21:54:54 220  ,chf_g09
21:54:54 221  ,chf_g10
21:54:54 222  ,chf_g11
21:54:54 223  ,chf_g12
21:54:54 224  ,chf_g13
21:54:54 225  ,chf_g14
21:54:54 226  ,chf_g15
21:54:54 227  ,chf_g16
21:54:54 228  ,chf_g17
21:54:54 229  ,chf_g18
21:54:54 230  ,chf_g19
21:54:54 231  ,chf_g20
21:54:54 232  ,chf_g21
21:54:54 233  ,chf_g22
21:54:54 234  ,chf_g23
21:54:54 235  ,chf_g24
21:54:54 236  ,chf_g25
21:54:54 237  ,chf_g26
21:54:54 238  ,chf_g27
21:54:54 239  ,chf_g28
21:54:54 240  ,chf_g29
21:54:54 241  ,chf_g30
21:54:54 242  ,chf_g31
21:54:54 243  ,chf_g32
21:54:54 244  ,chf_g33
21:54:54 245  ,chf_g34
21:54:54 246  ,chf_g35
21:54:54 247  ,chf_g36
21:54:54 248  ,chf_g37
21:54:54 249  ,chf_g38
21:54:54 250  ,chf_g39
21:54:54 251  ,chf_g40
21:54:54 252  FROM chf_ms14 m
21:54:54 253  WHERE m.ydate = '&1'||' '||'&2'
21:54:54 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'07:55:00'

View created.

Elapsed: 00:00:00.12
21:54:54 SQL> 
21:54:54 SQL> -- rpt
21:54:54 SQL> -- We should see just 1 row:
21:54:54 SQL> 
21:54:54 SQL> SELECT COUNT(prdate) FROM sme
21:54:54   2  
21:54:54 SQL> -- Build the model:
21:54:54 SQL> CREATE OR REPLACE VIEW bme AS
21:54:54   2  SELECT
21:54:54   3  'chf'||m.ydate prdate
21:54:54   4  ,gattn
21:54:54   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:54:54   6  ,eur_g00
21:54:54   7  ,eur_g01
21:54:54   8  ,eur_g02
21:54:54   9  ,eur_g03
21:54:54  10  ,eur_g04
21:54:54  11  ,eur_g05
21:54:54  12  ,eur_g06
21:54:54  13  ,eur_g07
21:54:54  14  ,eur_g08
21:54:54  15  ,eur_g09
21:54:54  16  ,eur_g10
21:54:54  17  ,eur_g11
21:54:54  18  ,eur_g12
21:54:54  19  ,eur_g13
21:54:54  20  ,eur_g14
21:54:54  21  ,eur_g15
21:54:54  22  ,eur_g16
21:54:54  23  ,eur_g17
21:54:54  24  ,eur_g18
21:54:54  25  ,eur_g19
21:54:54  26  ,eur_g20
21:54:54  27  ,eur_g21
21:54:54  28  ,eur_g22
21:54:54  29  ,eur_g23
21:54:54  30  ,eur_g24
21:54:54  31  ,eur_g25
21:54:54  32  ,eur_g26
21:54:54  33  ,eur_g27
21:54:54  34  ,eur_g28
21:54:54  35  ,eur_g29
21:54:54  36  ,eur_g30
21:54:54  37  ,eur_g31
21:54:54  38  ,eur_g32
21:54:54  39  ,eur_g33
21:54:54  40  ,eur_g34
21:54:54  41  ,eur_g35
21:54:54  42  ,eur_g36
21:54:54  43  ,eur_g37
21:54:54  44  ,eur_g38
21:54:54  45  ,eur_g39
21:54:54  46  ,eur_g40
21:54:54  47  ,aud_g00
21:54:54  48  ,aud_g01
21:54:54  49  ,aud_g02
21:54:54  50  ,aud_g03
21:54:54  51  ,aud_g04
21:54:54  52  ,aud_g05
21:54:54  53  ,aud_g06
21:54:54  54  ,aud_g07
21:54:54  55  ,aud_g08
21:54:54  56  ,aud_g09
21:54:54  57  ,aud_g10
21:54:54  58  ,aud_g11
21:54:54  59  ,aud_g12
21:54:54  60  ,aud_g13
21:54:54  61  ,aud_g14
21:54:54  62  ,aud_g15
21:54:54  63  ,aud_g16
21:54:54  64  ,aud_g17
21:54:54  65  ,aud_g18
21:54:54  66  ,aud_g19
21:54:54  67  ,aud_g20
21:54:54  68  ,aud_g21
21:54:54  69  ,aud_g22
21:54:54  70  ,aud_g23
21:54:54  71  ,aud_g24
21:54:54  72  ,aud_g25
21:54:54  73  ,aud_g26
21:54:54  74  ,aud_g27
21:54:54  75  ,aud_g28
21:54:54  76  ,aud_g29
21:54:54  77  ,aud_g30
21:54:54  78  ,aud_g31
21:54:54  79  ,aud_g32
21:54:54  80  ,aud_g33
21:54:54  81  ,aud_g34
21:54:54  82  ,aud_g35
21:54:54  83  ,aud_g36
21:54:54  84  ,aud_g37
21:54:54  85  ,aud_g38
21:54:54  86  ,aud_g39
21:54:54  87  ,aud_g40
21:54:54  88  ,gbp_g00
21:54:54  89  ,gbp_g01
21:54:54  90  ,gbp_g02
21:54:54  91  ,gbp_g03
21:54:54  92  ,gbp_g04
21:54:54  93  ,gbp_g05
21:54:54  94  ,gbp_g06
21:54:54  95  ,gbp_g07
21:54:54  96  ,gbp_g08
21:54:54  97  ,gbp_g09
21:54:54  98  ,gbp_g10
21:54:54  99  ,gbp_g11
21:54:54 100  ,gbp_g12
21:54:54 101  ,gbp_g13
21:54:54 102  ,gbp_g14
21:54:54 103  ,gbp_g15
21:54:54 104  ,gbp_g16
21:54:54 105  ,gbp_g17
21:54:54 106  ,gbp_g18
21:54:54 107  ,gbp_g19
21:54:54 108  ,gbp_g20
21:54:54 109  ,gbp_g21
21:54:54 110  ,gbp_g22
21:54:54 111  ,gbp_g23
21:54:54 112  ,gbp_g24
21:54:54 113  ,gbp_g25
21:54:54 114  ,gbp_g26
21:54:54 115  ,gbp_g27
21:54:54 116  ,gbp_g28
21:54:54 117  ,gbp_g29
21:54:54 118  ,gbp_g30
21:54:54 119  ,gbp_g31
21:54:54 120  ,gbp_g32
21:54:54 121  ,gbp_g33
21:54:54 122  ,gbp_g34
21:54:54 123  ,gbp_g35
21:54:54 124  ,gbp_g36
21:54:54 125  ,gbp_g37
21:54:54 126  ,gbp_g38
21:54:54 127  ,gbp_g39
21:54:54 128  ,gbp_g40
21:54:54 129  ,jpy_g00
21:54:54 130  ,jpy_g01
21:54:54 131  ,jpy_g02
21:54:54 132  ,jpy_g03
21:54:54 133  ,jpy_g04
21:54:54 134  ,jpy_g05
21:54:54 135  ,jpy_g06
21:54:54 136  ,jpy_g07
21:54:54 137  ,jpy_g08
21:54:54 138  ,jpy_g09
21:54:54 139  ,jpy_g10
21:54:54 140  ,jpy_g11
21:54:54 141  ,jpy_g12
21:54:54 142  ,jpy_g13
21:54:54 143  ,jpy_g14
21:54:54 144  ,jpy_g15
21:54:54 145  ,jpy_g16
21:54:54 146  ,jpy_g17
21:54:54 147  ,jpy_g18
21:54:54 148  ,jpy_g19
21:54:54 149  ,jpy_g20
21:54:54 150  ,jpy_g21
21:54:54 151  ,jpy_g22
21:54:54 152  ,jpy_g23
21:54:54 153  ,jpy_g24
21:54:54 154  ,jpy_g25
21:54:54 155  ,jpy_g26
21:54:54 156  ,jpy_g27
21:54:54 157  ,jpy_g28
21:54:54 158  ,jpy_g29
21:54:54 159  ,jpy_g30
21:54:54 160  ,jpy_g31
21:54:54 161  ,jpy_g32
21:54:54 162  ,jpy_g33
21:54:54 163  ,jpy_g34
21:54:54 164  ,jpy_g35
21:54:54 165  ,jpy_g36
21:54:54 166  ,jpy_g37
21:54:54 167  ,jpy_g38
21:54:54 168  ,jpy_g39
21:54:54 169  ,jpy_g40
21:54:54 170  ,cad_g00
21:54:54 171  ,cad_g01
21:54:54 172  ,cad_g02
21:54:54 173  ,cad_g03
21:54:54 174  ,cad_g04
21:54:54 175  ,cad_g05
21:54:54 176  ,cad_g06
21:54:54 177  ,cad_g07
21:54:54 178  ,cad_g08
21:54:54 179  ,cad_g09
21:54:54 180  ,cad_g10
21:54:54 181  ,cad_g11
21:54:54 182  ,cad_g12
21:54:54 183  ,cad_g13
21:54:54 184  ,cad_g14
21:54:54 185  ,cad_g15
21:54:54 186  ,cad_g16
21:54:54 187  ,cad_g17
21:54:54 188  ,cad_g18
21:54:54 189  ,cad_g19
21:54:54 190  ,cad_g20
21:54:54 191  ,cad_g21
21:54:54 192  ,cad_g22
21:54:54 193  ,cad_g23
21:54:54 194  ,cad_g24
21:54:54 195  ,cad_g25
21:54:54 196  ,cad_g26
21:54:54 197  ,cad_g27
21:54:54 198  ,cad_g28
21:54:54 199  ,cad_g29
21:54:54 200  ,cad_g30
21:54:54 201  ,cad_g31
21:54:54 202  ,cad_g32
21:54:54 203  ,cad_g33
21:54:54 204  ,cad_g34
21:54:54 205  ,cad_g35
21:54:54 206  ,cad_g36
21:54:54 207  ,cad_g37
21:54:54 208  ,cad_g38
21:54:54 209  ,cad_g39
21:54:54 210  ,cad_g40
21:54:54 211  ,chf_g00
21:54:54 212  ,chf_g01
21:54:54 213  ,chf_g02
21:54:54 214  ,chf_g03
21:54:54 215  ,chf_g04
21:54:54 216  ,chf_g05
21:54:54 217  ,chf_g06
21:54:54 218  ,chf_g07
21:54:54 219  ,chf_g08
21:54:54 220  ,chf_g09
21:54:54 221  ,chf_g10
21:54:54 222  ,chf_g11
21:54:54 223  ,chf_g12
21:54:54 224  ,chf_g13
21:54:54 225  ,chf_g14
21:54:54 226  ,chf_g15
21:54:54 227  ,chf_g16
21:54:54 228  ,chf_g17
21:54:54 229  ,chf_g18
21:54:54 230  ,chf_g19
21:54:54 231  ,chf_g20
21:54:54 232  ,chf_g21
21:54:54 233  ,chf_g22
21:54:54 234  ,chf_g23
21:54:54 235  ,chf_g24
21:54:54 236  ,chf_g25
21:54:54 237  ,chf_g26
21:54:54 238  ,chf_g27
21:54:54 239  ,chf_g28
21:54:54 240  ,chf_g29
21:54:54 241  ,chf_g30
21:54:54 242  ,chf_g31
21:54:54 243  ,chf_g32
21:54:54 244  ,chf_g33
21:54:54 245  ,chf_g34
21:54:54 246  ,chf_g35
21:54:54 247  ,chf_g36
21:54:54 248  ,chf_g37
21:54:54 249  ,chf_g38
21:54:54 250  ,chf_g39
21:54:54 251  ,chf_g40
21:54:54 252  FROM chf_ms14 m
21:54:54 253  WHERE gattn IN('nup','up')
21:54:54 254  AND 1+m.ydate < '&1'||' '||'&2'
21:54:54 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'07:55:00'

View created.

Elapsed: 00:00:00.13
21:54:54 SQL> 
21:54:54 SQL> -- rpt
21:54:54 SQL> 
21:54:54 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:54:54   2  
21:54:54 SQL> SELECT MAX(prdate) FROM bme
21:54:54   2  
21:54:54 SQL> -- Now build model from bme and score sme
21:54:54 SQL> @score1gattn.sql
21:54:54 SQL> -- score1gattn.sql
21:54:54 SQL> 
21:54:54 SQL> -- Does the 1st SVM score
21:54:54 SQL> 
21:54:54 SQL> -- Fill up svmc_apply_prep
21:54:54 SQL> @score_gattn.sql
21:54:54 SQL> --
21:54:54 SQL> -- score_gattn.sql
21:54:54 SQL> --
21:54:54 SQL> 
21:54:54 SQL> -- usage: score_gattn.sql
21:54:54 SQL> 
21:54:54 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:54:54 SQL> 
21:54:54 SQL> DEFINE target	= 'gattn'
21:54:54 SQL> DEFINE model_name = 'forex14'
21:54:54 SQL> DEFINE bldtable	= 'bme'
21:54:54 SQL> DEFINE scoretable = 'sme'
21:54:54 SQL> DEFINE case_id	= 'prdate'
21:54:54 SQL> 
21:54:54 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:54:54 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:54:54 SQL> 
21:54:54 SQL> -- Builds an SVM model using pl/sql.
21:54:54 SQL> 
21:54:54 SQL> -----------------------------------------------------------------------
21:54:54 SQL> --			    BUILD THE MODEL
21:54:54 SQL> -----------------------------------------------------------------------
21:54:54 SQL> 
21:54:54 SQL> -- Cleanup old build data preparation objects for repeat runs
21:54:54 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:54:54 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:54:54 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:54:54 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:54:54 SQL> 
21:54:54 SQL> 
21:54:54 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:54:54 SQL> --
21:54:54 SQL> -- DROP	TABLE svmc_settings ;
21:54:54 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:54:54 SQL> -- DELETE svmc_settings;
21:54:54 SQL> 
21:54:54 SQL> -- The default classification algorithm is Naive Bayes. So override
21:54:54 SQL> -- this choice to SVM using a settings table.
21:54:54 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:54:54 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:54:54 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:54:54 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:54:54 SQL> -- models.
21:54:54 SQL> --
21:54:54 SQL> 
21:54:54 SQL> -- Do this once and then comment it out.
21:54:54 SQL> -- That makes script go faster.
21:54:54 SQL> -- BEGIN
21:54:54 SQL> -- -- Populate settings table
21:54:54 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:54:54 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:54:54 SQL> --
21:54:54 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:54:54 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:54:54 SQL> --
21:54:54 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:54:54 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:54:54 SQL> --   COMMIT;
21:54:54 SQL> -- END;
21:54:54 SQL> -- /
21:54:54 SQL> 
21:54:54 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:54:54 SQL> 
21:54:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:54:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:54:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:54:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:54:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:54:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:54:54 SQL> 
21:54:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:54:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:54:54 SQL> 
21:54:54 SQL> --------------------------------
21:54:54 SQL> -- PREPARE BUILD (TRAINING) DATA
21:54:54 SQL> --
21:54:54 SQL> 
21:54:54 SQL> -- 1. Missing Value treatment for all Predictors and
21:54:54 SQL> -- 2. Outlier Treatment and
21:54:54 SQL> -- 3. Normalization are performed below.
21:54:54 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:54:54 SQL> --    normalized here.
21:54:54 SQL> 
21:54:54 SQL> BEGIN
21:54:54   2  	-- Perform missing value treatment for all predictors
21:54:54   3  	-- create miss tables
21:54:54   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:54:54   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:54:54   6  
21:54:54   7  	-- populate miss tables
21:54:54   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:54:54   9  	  miss_table_name => 'svmc_miss_num',
21:54:54  10  	  data_table_name => '&bldtable',
21:54:54  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:54:54  12  
21:54:54  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:54:54  14  	  miss_table_name => 'svmc_miss_cat',
21:54:54  15  	  data_table_name => '&bldtable',
21:54:54  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:54:54  17  
21:54:54  18  	-- xform input data to replace missing values
21:54:54  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:54:54  20  	  miss_table_name => 'svmc_miss_num',
21:54:54  21  	  data_table_name => '&bldtable',
21:54:54  22  	  xform_view_name => 'xformed_build_miss_num');
21:54:54  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:54:54  24  	  miss_table_name => 'svmc_miss_cat',
21:54:54  25  	  data_table_name => '&bldtable',
21:54:54  26  	  xform_view_name => 'xformed_build_miss_cat');
21:54:54  27  
21:54:54  28  	-- Perform outlier treatment.
21:54:54  29  	-- create clip table
21:54:54  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:54:54  31  
21:54:54  32  	-- populate clip table
21:54:54  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:54:54  34  	  clip_table_name => 'svmc_clip',
21:54:54  35  	  data_table_name => '&bldtable',
21:54:54  36  	  tail_frac	  => 0.025,
21:54:54  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:54:54  38  
21:54:54  39  	-- xform input data to winsorized data
21:54:54  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:54:54  41  	  clip_table_name => 'svmc_clip',
21:54:54  42  	  data_table_name => '&bldtable',
21:54:54  43  	  xform_view_name => 'svmc_winsor');
21:54:54  44  
21:54:54  45  	-- create normalization table
21:54:54  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:54:54  47  
21:54:54  48  	-- populate normalization table based on winsorized data
21:54:54  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:54:54  50  	  norm_table_name => 'svmc_norm',
21:54:54  51  	  data_table_name => 'svmc_winsor',
21:54:54  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:54:54  53  
21:54:54  54  	-- normalize the original data
21:54:54  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:54:54  56  	  norm_table_name => 'svmc_norm',
21:54:54  57  	  data_table_name => '&bldtable',
21:54:54  58  	  xform_view_name => 'svmc_build_prep');
21:54:54  59  END;
21:54:54  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.85
21:55:12 SQL> 
21:55:12 SQL> ---------------------
21:55:12 SQL> -- CREATE A NEW MODEL
21:55:12 SQL> --
21:55:12 SQL> -- Cleanup old model with the same name for repeat runs
21:55:12 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:55:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:12   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.96
21:55:14 SQL> 
21:55:14 SQL> -- Build a new SVM Model
21:55:14 SQL> BEGIN
21:55:14   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:55:14   3  	  model_name	      => '&model_name',
21:55:14   4  	  mining_function     => dbms_data_mining.classification,
21:55:14   5  	  data_table_name     => 'svmc_build_prep',
21:55:14   6  	  case_id_column_name => '&case_id',
21:55:14   7  	  target_column_name  => '&target',
21:55:14   8  	  settings_table_name => 'svmc_settings');
21:55:14   9  END;
21:55:14  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.06
21:55:39 SQL> 
21:55:39 SQL> -----------------------------------------------------------------------
21:55:39 SQL> --			       APPLY/score THE MODEL
21:55:39 SQL> -----------------------------------------------------------------------
21:55:39 SQL> 
21:55:39 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:55:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:55:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:55:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:55:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:55:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:55:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:55:39 SQL> -----------------------
21:55:39 SQL> -- PREPARE SCORING DATA
21:55:39 SQL> --
21:55:39 SQL> -- If the data for model creation has been prepared, then the data
21:55:39 SQL> -- to be scored using the model must be prepared in the same manner
21:55:39 SQL> -- in order to obtain meaningful results.
21:55:39 SQL> --
21:55:39 SQL> -- 1. Missing Value treatment for all Predictors and
21:55:39 SQL> -- 2. Normalization
21:55:39 SQL> -- No outlier treatment will be performed during test and apply. The
21:55:39 SQL> -- normalization step is sufficient, since the normalization parameters
21:55:39 SQL> -- already capture the effects of outlier treatment done with build data.
21:55:39 SQL> --
21:55:39 SQL> BEGIN
21:55:39   2  	-- Xform Test data to replace missing values
21:55:39   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:55:39   4  	  miss_table_name => 'svmc_miss_num',
21:55:39   5  	  data_table_name => '&scoretable',
21:55:39   6  	  xform_view_name => 'xformed_apply_miss_num');
21:55:39   7  
21:55:39   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:55:39   9  	  miss_table_name => 'svmc_miss_cat',
21:55:39  10  	  data_table_name => '&scoretable',
21:55:39  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:55:39  12  
21:55:39  13  	-- Normalize the data to be scored
21:55:39  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:55:39  15  	  norm_table_name => 'svmc_norm',
21:55:39  16  	  data_table_name => '&scoretable',
21:55:39  17  	  xform_view_name => 'svmc_apply_prep');
21:55:39  18  END;
21:55:39  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.13
21:55:40 SQL> 
21:55:40 SQL> -- Use same model_name used in score_gattn.sql
21:55:40 SQL> DEFINE model_name = 'forex14'
21:55:40 SQL> 
21:55:40 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:55:40 SQL> 
21:55:40 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:55:40   2  SELECT
21:55:40   3  prdate
21:55:40   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:55:40   5  ,sysdate
21:55:40   6  ,SUBSTR(prdate,1,3)pair
21:55:40   7  ,SUBSTR(prdate,4,19)ydate
21:55:40   8  FROM svmc_apply_prep
21:55:40   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:55:40 SQL> @chf_score1day_gattn.sql	2010-12-17 07:50:00
21:55:40 SQL> --
21:55:40 SQL> -- chf_score1day_gattn.sql
21:55:40 SQL> --
21:55:40 SQL> 
21:55:40 SQL> CREATE OR REPLACE VIEW sme AS
21:55:40   2  SELECT
21:55:40   3  'chf'||m.ydate prdate
21:55:40   4  ,NULL gattn
21:55:40   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:55:40   6  ,eur_g00
21:55:40   7  ,eur_g01
21:55:40   8  ,eur_g02
21:55:40   9  ,eur_g03
21:55:40  10  ,eur_g04
21:55:40  11  ,eur_g05
21:55:40  12  ,eur_g06
21:55:40  13  ,eur_g07
21:55:40  14  ,eur_g08
21:55:40  15  ,eur_g09
21:55:40  16  ,eur_g10
21:55:40  17  ,eur_g11
21:55:40  18  ,eur_g12
21:55:40  19  ,eur_g13
21:55:40  20  ,eur_g14
21:55:40  21  ,eur_g15
21:55:40  22  ,eur_g16
21:55:40  23  ,eur_g17
21:55:40  24  ,eur_g18
21:55:40  25  ,eur_g19
21:55:40  26  ,eur_g20
21:55:40  27  ,eur_g21
21:55:40  28  ,eur_g22
21:55:40  29  ,eur_g23
21:55:40  30  ,eur_g24
21:55:40  31  ,eur_g25
21:55:40  32  ,eur_g26
21:55:40  33  ,eur_g27
21:55:40  34  ,eur_g28
21:55:40  35  ,eur_g29
21:55:40  36  ,eur_g30
21:55:40  37  ,eur_g31
21:55:40  38  ,eur_g32
21:55:40  39  ,eur_g33
21:55:40  40  ,eur_g34
21:55:40  41  ,eur_g35
21:55:40  42  ,eur_g36
21:55:40  43  ,eur_g37
21:55:40  44  ,eur_g38
21:55:40  45  ,eur_g39
21:55:40  46  ,eur_g40
21:55:40  47  ,aud_g00
21:55:40  48  ,aud_g01
21:55:40  49  ,aud_g02
21:55:40  50  ,aud_g03
21:55:40  51  ,aud_g04
21:55:40  52  ,aud_g05
21:55:40  53  ,aud_g06
21:55:40  54  ,aud_g07
21:55:40  55  ,aud_g08
21:55:40  56  ,aud_g09
21:55:40  57  ,aud_g10
21:55:40  58  ,aud_g11
21:55:40  59  ,aud_g12
21:55:40  60  ,aud_g13
21:55:40  61  ,aud_g14
21:55:40  62  ,aud_g15
21:55:40  63  ,aud_g16
21:55:40  64  ,aud_g17
21:55:40  65  ,aud_g18
21:55:40  66  ,aud_g19
21:55:40  67  ,aud_g20
21:55:40  68  ,aud_g21
21:55:40  69  ,aud_g22
21:55:40  70  ,aud_g23
21:55:40  71  ,aud_g24
21:55:40  72  ,aud_g25
21:55:40  73  ,aud_g26
21:55:40  74  ,aud_g27
21:55:40  75  ,aud_g28
21:55:40  76  ,aud_g29
21:55:40  77  ,aud_g30
21:55:40  78  ,aud_g31
21:55:40  79  ,aud_g32
21:55:40  80  ,aud_g33
21:55:40  81  ,aud_g34
21:55:40  82  ,aud_g35
21:55:40  83  ,aud_g36
21:55:40  84  ,aud_g37
21:55:40  85  ,aud_g38
21:55:40  86  ,aud_g39
21:55:40  87  ,aud_g40
21:55:40  88  ,gbp_g00
21:55:40  89  ,gbp_g01
21:55:40  90  ,gbp_g02
21:55:40  91  ,gbp_g03
21:55:40  92  ,gbp_g04
21:55:40  93  ,gbp_g05
21:55:40  94  ,gbp_g06
21:55:40  95  ,gbp_g07
21:55:40  96  ,gbp_g08
21:55:40  97  ,gbp_g09
21:55:40  98  ,gbp_g10
21:55:40  99  ,gbp_g11
21:55:40 100  ,gbp_g12
21:55:40 101  ,gbp_g13
21:55:40 102  ,gbp_g14
21:55:40 103  ,gbp_g15
21:55:40 104  ,gbp_g16
21:55:40 105  ,gbp_g17
21:55:40 106  ,gbp_g18
21:55:40 107  ,gbp_g19
21:55:40 108  ,gbp_g20
21:55:40 109  ,gbp_g21
21:55:40 110  ,gbp_g22
21:55:40 111  ,gbp_g23
21:55:40 112  ,gbp_g24
21:55:40 113  ,gbp_g25
21:55:40 114  ,gbp_g26
21:55:40 115  ,gbp_g27
21:55:40 116  ,gbp_g28
21:55:40 117  ,gbp_g29
21:55:40 118  ,gbp_g30
21:55:40 119  ,gbp_g31
21:55:40 120  ,gbp_g32
21:55:40 121  ,gbp_g33
21:55:40 122  ,gbp_g34
21:55:40 123  ,gbp_g35
21:55:40 124  ,gbp_g36
21:55:40 125  ,gbp_g37
21:55:40 126  ,gbp_g38
21:55:40 127  ,gbp_g39
21:55:40 128  ,gbp_g40
21:55:40 129  ,jpy_g00
21:55:40 130  ,jpy_g01
21:55:40 131  ,jpy_g02
21:55:40 132  ,jpy_g03
21:55:40 133  ,jpy_g04
21:55:40 134  ,jpy_g05
21:55:40 135  ,jpy_g06
21:55:40 136  ,jpy_g07
21:55:40 137  ,jpy_g08
21:55:40 138  ,jpy_g09
21:55:40 139  ,jpy_g10
21:55:40 140  ,jpy_g11
21:55:40 141  ,jpy_g12
21:55:40 142  ,jpy_g13
21:55:40 143  ,jpy_g14
21:55:40 144  ,jpy_g15
21:55:40 145  ,jpy_g16
21:55:40 146  ,jpy_g17
21:55:40 147  ,jpy_g18
21:55:40 148  ,jpy_g19
21:55:40 149  ,jpy_g20
21:55:40 150  ,jpy_g21
21:55:40 151  ,jpy_g22
21:55:40 152  ,jpy_g23
21:55:40 153  ,jpy_g24
21:55:40 154  ,jpy_g25
21:55:40 155  ,jpy_g26
21:55:40 156  ,jpy_g27
21:55:40 157  ,jpy_g28
21:55:40 158  ,jpy_g29
21:55:40 159  ,jpy_g30
21:55:40 160  ,jpy_g31
21:55:40 161  ,jpy_g32
21:55:40 162  ,jpy_g33
21:55:40 163  ,jpy_g34
21:55:40 164  ,jpy_g35
21:55:40 165  ,jpy_g36
21:55:40 166  ,jpy_g37
21:55:40 167  ,jpy_g38
21:55:40 168  ,jpy_g39
21:55:40 169  ,jpy_g40
21:55:40 170  ,cad_g00
21:55:40 171  ,cad_g01
21:55:40 172  ,cad_g02
21:55:40 173  ,cad_g03
21:55:40 174  ,cad_g04
21:55:40 175  ,cad_g05
21:55:40 176  ,cad_g06
21:55:40 177  ,cad_g07
21:55:40 178  ,cad_g08
21:55:40 179  ,cad_g09
21:55:40 180  ,cad_g10
21:55:40 181  ,cad_g11
21:55:40 182  ,cad_g12
21:55:40 183  ,cad_g13
21:55:40 184  ,cad_g14
21:55:40 185  ,cad_g15
21:55:40 186  ,cad_g16
21:55:40 187  ,cad_g17
21:55:40 188  ,cad_g18
21:55:40 189  ,cad_g19
21:55:40 190  ,cad_g20
21:55:40 191  ,cad_g21
21:55:40 192  ,cad_g22
21:55:40 193  ,cad_g23
21:55:40 194  ,cad_g24
21:55:40 195  ,cad_g25
21:55:40 196  ,cad_g26
21:55:40 197  ,cad_g27
21:55:40 198  ,cad_g28
21:55:40 199  ,cad_g29
21:55:40 200  ,cad_g30
21:55:40 201  ,cad_g31
21:55:40 202  ,cad_g32
21:55:40 203  ,cad_g33
21:55:40 204  ,cad_g34
21:55:40 205  ,cad_g35
21:55:40 206  ,cad_g36
21:55:40 207  ,cad_g37
21:55:40 208  ,cad_g38
21:55:40 209  ,cad_g39
21:55:40 210  ,cad_g40
21:55:40 211  ,chf_g00
21:55:40 212  ,chf_g01
21:55:40 213  ,chf_g02
21:55:40 214  ,chf_g03
21:55:40 215  ,chf_g04
21:55:40 216  ,chf_g05
21:55:40 217  ,chf_g06
21:55:40 218  ,chf_g07
21:55:40 219  ,chf_g08
21:55:40 220  ,chf_g09
21:55:40 221  ,chf_g10
21:55:40 222  ,chf_g11
21:55:40 223  ,chf_g12
21:55:40 224  ,chf_g13
21:55:40 225  ,chf_g14
21:55:40 226  ,chf_g15
21:55:40 227  ,chf_g16
21:55:40 228  ,chf_g17
21:55:40 229  ,chf_g18
21:55:40 230  ,chf_g19
21:55:40 231  ,chf_g20
21:55:40 232  ,chf_g21
21:55:40 233  ,chf_g22
21:55:40 234  ,chf_g23
21:55:40 235  ,chf_g24
21:55:40 236  ,chf_g25
21:55:40 237  ,chf_g26
21:55:40 238  ,chf_g27
21:55:40 239  ,chf_g28
21:55:40 240  ,chf_g29
21:55:40 241  ,chf_g30
21:55:40 242  ,chf_g31
21:55:40 243  ,chf_g32
21:55:40 244  ,chf_g33
21:55:40 245  ,chf_g34
21:55:40 246  ,chf_g35
21:55:40 247  ,chf_g36
21:55:40 248  ,chf_g37
21:55:40 249  ,chf_g38
21:55:40 250  ,chf_g39
21:55:40 251  ,chf_g40
21:55:40 252  FROM chf_ms14 m
21:55:40 253  WHERE m.ydate = '&1'||' '||'&2'
21:55:40 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'07:50:00'

View created.

Elapsed: 00:00:00.14
21:55:41 SQL> 
21:55:41 SQL> -- rpt
21:55:41 SQL> -- We should see just 1 row:
21:55:41 SQL> 
21:55:41 SQL> SELECT COUNT(prdate) FROM sme
21:55:41   2  
21:55:41 SQL> -- Build the model:
21:55:41 SQL> CREATE OR REPLACE VIEW bme AS
21:55:41   2  SELECT
21:55:41   3  'chf'||m.ydate prdate
21:55:41   4  ,gattn
21:55:41   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:55:41   6  ,eur_g00
21:55:41   7  ,eur_g01
21:55:41   8  ,eur_g02
21:55:41   9  ,eur_g03
21:55:41  10  ,eur_g04
21:55:41  11  ,eur_g05
21:55:41  12  ,eur_g06
21:55:41  13  ,eur_g07
21:55:41  14  ,eur_g08
21:55:41  15  ,eur_g09
21:55:41  16  ,eur_g10
21:55:41  17  ,eur_g11
21:55:41  18  ,eur_g12
21:55:41  19  ,eur_g13
21:55:41  20  ,eur_g14
21:55:41  21  ,eur_g15
21:55:41  22  ,eur_g16
21:55:41  23  ,eur_g17
21:55:41  24  ,eur_g18
21:55:41  25  ,eur_g19
21:55:41  26  ,eur_g20
21:55:41  27  ,eur_g21
21:55:41  28  ,eur_g22
21:55:41  29  ,eur_g23
21:55:41  30  ,eur_g24
21:55:41  31  ,eur_g25
21:55:41  32  ,eur_g26
21:55:41  33  ,eur_g27
21:55:41  34  ,eur_g28
21:55:41  35  ,eur_g29
21:55:41  36  ,eur_g30
21:55:41  37  ,eur_g31
21:55:41  38  ,eur_g32
21:55:41  39  ,eur_g33
21:55:41  40  ,eur_g34
21:55:41  41  ,eur_g35
21:55:41  42  ,eur_g36
21:55:41  43  ,eur_g37
21:55:41  44  ,eur_g38
21:55:41  45  ,eur_g39
21:55:41  46  ,eur_g40
21:55:41  47  ,aud_g00
21:55:41  48  ,aud_g01
21:55:41  49  ,aud_g02
21:55:41  50  ,aud_g03
21:55:41  51  ,aud_g04
21:55:41  52  ,aud_g05
21:55:41  53  ,aud_g06
21:55:41  54  ,aud_g07
21:55:41  55  ,aud_g08
21:55:41  56  ,aud_g09
21:55:41  57  ,aud_g10
21:55:41  58  ,aud_g11
21:55:41  59  ,aud_g12
21:55:41  60  ,aud_g13
21:55:41  61  ,aud_g14
21:55:41  62  ,aud_g15
21:55:41  63  ,aud_g16
21:55:41  64  ,aud_g17
21:55:41  65  ,aud_g18
21:55:41  66  ,aud_g19
21:55:41  67  ,aud_g20
21:55:41  68  ,aud_g21
21:55:41  69  ,aud_g22
21:55:41  70  ,aud_g23
21:55:41  71  ,aud_g24
21:55:41  72  ,aud_g25
21:55:41  73  ,aud_g26
21:55:41  74  ,aud_g27
21:55:41  75  ,aud_g28
21:55:41  76  ,aud_g29
21:55:41  77  ,aud_g30
21:55:41  78  ,aud_g31
21:55:41  79  ,aud_g32
21:55:41  80  ,aud_g33
21:55:41  81  ,aud_g34
21:55:41  82  ,aud_g35
21:55:41  83  ,aud_g36
21:55:41  84  ,aud_g37
21:55:41  85  ,aud_g38
21:55:41  86  ,aud_g39
21:55:41  87  ,aud_g40
21:55:41  88  ,gbp_g00
21:55:41  89  ,gbp_g01
21:55:41  90  ,gbp_g02
21:55:41  91  ,gbp_g03
21:55:41  92  ,gbp_g04
21:55:41  93  ,gbp_g05
21:55:41  94  ,gbp_g06
21:55:41  95  ,gbp_g07
21:55:41  96  ,gbp_g08
21:55:41  97  ,gbp_g09
21:55:41  98  ,gbp_g10
21:55:41  99  ,gbp_g11
21:55:41 100  ,gbp_g12
21:55:41 101  ,gbp_g13
21:55:41 102  ,gbp_g14
21:55:41 103  ,gbp_g15
21:55:41 104  ,gbp_g16
21:55:41 105  ,gbp_g17
21:55:41 106  ,gbp_g18
21:55:41 107  ,gbp_g19
21:55:41 108  ,gbp_g20
21:55:41 109  ,gbp_g21
21:55:41 110  ,gbp_g22
21:55:41 111  ,gbp_g23
21:55:41 112  ,gbp_g24
21:55:41 113  ,gbp_g25
21:55:41 114  ,gbp_g26
21:55:41 115  ,gbp_g27
21:55:41 116  ,gbp_g28
21:55:41 117  ,gbp_g29
21:55:41 118  ,gbp_g30
21:55:41 119  ,gbp_g31
21:55:41 120  ,gbp_g32
21:55:41 121  ,gbp_g33
21:55:41 122  ,gbp_g34
21:55:41 123  ,gbp_g35
21:55:41 124  ,gbp_g36
21:55:41 125  ,gbp_g37
21:55:41 126  ,gbp_g38
21:55:41 127  ,gbp_g39
21:55:41 128  ,gbp_g40
21:55:41 129  ,jpy_g00
21:55:41 130  ,jpy_g01
21:55:41 131  ,jpy_g02
21:55:41 132  ,jpy_g03
21:55:41 133  ,jpy_g04
21:55:41 134  ,jpy_g05
21:55:41 135  ,jpy_g06
21:55:41 136  ,jpy_g07
21:55:41 137  ,jpy_g08
21:55:41 138  ,jpy_g09
21:55:41 139  ,jpy_g10
21:55:41 140  ,jpy_g11
21:55:41 141  ,jpy_g12
21:55:41 142  ,jpy_g13
21:55:41 143  ,jpy_g14
21:55:41 144  ,jpy_g15
21:55:41 145  ,jpy_g16
21:55:41 146  ,jpy_g17
21:55:41 147  ,jpy_g18
21:55:41 148  ,jpy_g19
21:55:41 149  ,jpy_g20
21:55:41 150  ,jpy_g21
21:55:41 151  ,jpy_g22
21:55:41 152  ,jpy_g23
21:55:41 153  ,jpy_g24
21:55:41 154  ,jpy_g25
21:55:41 155  ,jpy_g26
21:55:41 156  ,jpy_g27
21:55:41 157  ,jpy_g28
21:55:41 158  ,jpy_g29
21:55:41 159  ,jpy_g30
21:55:41 160  ,jpy_g31
21:55:41 161  ,jpy_g32
21:55:41 162  ,jpy_g33
21:55:41 163  ,jpy_g34
21:55:41 164  ,jpy_g35
21:55:41 165  ,jpy_g36
21:55:41 166  ,jpy_g37
21:55:41 167  ,jpy_g38
21:55:41 168  ,jpy_g39
21:55:41 169  ,jpy_g40
21:55:41 170  ,cad_g00
21:55:41 171  ,cad_g01
21:55:41 172  ,cad_g02
21:55:41 173  ,cad_g03
21:55:41 174  ,cad_g04
21:55:41 175  ,cad_g05
21:55:41 176  ,cad_g06
21:55:41 177  ,cad_g07
21:55:41 178  ,cad_g08
21:55:41 179  ,cad_g09
21:55:41 180  ,cad_g10
21:55:41 181  ,cad_g11
21:55:41 182  ,cad_g12
21:55:41 183  ,cad_g13
21:55:41 184  ,cad_g14
21:55:41 185  ,cad_g15
21:55:41 186  ,cad_g16
21:55:41 187  ,cad_g17
21:55:41 188  ,cad_g18
21:55:41 189  ,cad_g19
21:55:41 190  ,cad_g20
21:55:41 191  ,cad_g21
21:55:41 192  ,cad_g22
21:55:41 193  ,cad_g23
21:55:41 194  ,cad_g24
21:55:41 195  ,cad_g25
21:55:41 196  ,cad_g26
21:55:41 197  ,cad_g27
21:55:41 198  ,cad_g28
21:55:41 199  ,cad_g29
21:55:41 200  ,cad_g30
21:55:41 201  ,cad_g31
21:55:41 202  ,cad_g32
21:55:41 203  ,cad_g33
21:55:41 204  ,cad_g34
21:55:41 205  ,cad_g35
21:55:41 206  ,cad_g36
21:55:41 207  ,cad_g37
21:55:41 208  ,cad_g38
21:55:41 209  ,cad_g39
21:55:41 210  ,cad_g40
21:55:41 211  ,chf_g00
21:55:41 212  ,chf_g01
21:55:41 213  ,chf_g02
21:55:41 214  ,chf_g03
21:55:41 215  ,chf_g04
21:55:41 216  ,chf_g05
21:55:41 217  ,chf_g06
21:55:41 218  ,chf_g07
21:55:41 219  ,chf_g08
21:55:41 220  ,chf_g09
21:55:41 221  ,chf_g10
21:55:41 222  ,chf_g11
21:55:41 223  ,chf_g12
21:55:41 224  ,chf_g13
21:55:41 225  ,chf_g14
21:55:41 226  ,chf_g15
21:55:41 227  ,chf_g16
21:55:41 228  ,chf_g17
21:55:41 229  ,chf_g18
21:55:41 230  ,chf_g19
21:55:41 231  ,chf_g20
21:55:41 232  ,chf_g21
21:55:41 233  ,chf_g22
21:55:41 234  ,chf_g23
21:55:41 235  ,chf_g24
21:55:41 236  ,chf_g25
21:55:41 237  ,chf_g26
21:55:41 238  ,chf_g27
21:55:41 239  ,chf_g28
21:55:41 240  ,chf_g29
21:55:41 241  ,chf_g30
21:55:41 242  ,chf_g31
21:55:41 243  ,chf_g32
21:55:41 244  ,chf_g33
21:55:41 245  ,chf_g34
21:55:41 246  ,chf_g35
21:55:41 247  ,chf_g36
21:55:41 248  ,chf_g37
21:55:41 249  ,chf_g38
21:55:41 250  ,chf_g39
21:55:41 251  ,chf_g40
21:55:41 252  FROM chf_ms14 m
21:55:41 253  WHERE gattn IN('nup','up')
21:55:41 254  AND 1+m.ydate < '&1'||' '||'&2'
21:55:41 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'07:50:00'

View created.

Elapsed: 00:00:00.12
21:55:41 SQL> 
21:55:41 SQL> -- rpt
21:55:41 SQL> 
21:55:41 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:55:41   2  
21:55:41 SQL> SELECT MAX(prdate) FROM bme
21:55:41   2  
21:55:41 SQL> -- Now build model from bme and score sme
21:55:41 SQL> @score1gattn.sql
21:55:41 SQL> -- score1gattn.sql
21:55:41 SQL> 
21:55:41 SQL> -- Does the 1st SVM score
21:55:41 SQL> 
21:55:41 SQL> -- Fill up svmc_apply_prep
21:55:41 SQL> @score_gattn.sql
21:55:41 SQL> --
21:55:41 SQL> -- score_gattn.sql
21:55:41 SQL> --
21:55:41 SQL> 
21:55:41 SQL> -- usage: score_gattn.sql
21:55:41 SQL> 
21:55:41 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:55:41 SQL> 
21:55:41 SQL> DEFINE target	= 'gattn'
21:55:41 SQL> DEFINE model_name = 'forex14'
21:55:41 SQL> DEFINE bldtable	= 'bme'
21:55:41 SQL> DEFINE scoretable = 'sme'
21:55:41 SQL> DEFINE case_id	= 'prdate'
21:55:41 SQL> 
21:55:41 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:55:41 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:55:41 SQL> 
21:55:41 SQL> -- Builds an SVM model using pl/sql.
21:55:41 SQL> 
21:55:41 SQL> -----------------------------------------------------------------------
21:55:41 SQL> --			    BUILD THE MODEL
21:55:41 SQL> -----------------------------------------------------------------------
21:55:41 SQL> 
21:55:41 SQL> -- Cleanup old build data preparation objects for repeat runs
21:55:41 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:55:41 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:55:41 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:55:41 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:55:41 SQL> 
21:55:41 SQL> 
21:55:41 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:55:41 SQL> --
21:55:41 SQL> -- DROP	TABLE svmc_settings ;
21:55:41 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:55:41 SQL> -- DELETE svmc_settings;
21:55:41 SQL> 
21:55:41 SQL> -- The default classification algorithm is Naive Bayes. So override
21:55:41 SQL> -- this choice to SVM using a settings table.
21:55:41 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:55:41 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:55:41 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:55:41 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:55:41 SQL> -- models.
21:55:41 SQL> --
21:55:41 SQL> 
21:55:41 SQL> -- Do this once and then comment it out.
21:55:41 SQL> -- That makes script go faster.
21:55:41 SQL> -- BEGIN
21:55:41 SQL> -- -- Populate settings table
21:55:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:55:41 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:55:41 SQL> --
21:55:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:55:41 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:55:41 SQL> --
21:55:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:55:41 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:55:41 SQL> --   COMMIT;
21:55:41 SQL> -- END;
21:55:41 SQL> -- /
21:55:41 SQL> 
21:55:41 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
21:55:41 SQL> 
21:55:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:55:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:55:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:55:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:55:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:55:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:55:41 SQL> 
21:55:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:55:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:55:41 SQL> 
21:55:41 SQL> --------------------------------
21:55:41 SQL> -- PREPARE BUILD (TRAINING) DATA
21:55:41 SQL> --
21:55:41 SQL> 
21:55:41 SQL> -- 1. Missing Value treatment for all Predictors and
21:55:41 SQL> -- 2. Outlier Treatment and
21:55:41 SQL> -- 3. Normalization are performed below.
21:55:41 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:55:41 SQL> --    normalized here.
21:55:41 SQL> 
21:55:41 SQL> BEGIN
21:55:41   2  	-- Perform missing value treatment for all predictors
21:55:41   3  	-- create miss tables
21:55:41   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:55:41   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:55:41   6  
21:55:41   7  	-- populate miss tables
21:55:41   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:55:41   9  	  miss_table_name => 'svmc_miss_num',
21:55:41  10  	  data_table_name => '&bldtable',
21:55:41  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:55:41  12  
21:55:41  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:55:41  14  	  miss_table_name => 'svmc_miss_cat',
21:55:41  15  	  data_table_name => '&bldtable',
21:55:41  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:55:41  17  
21:55:41  18  	-- xform input data to replace missing values
21:55:41  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:55:41  20  	  miss_table_name => 'svmc_miss_num',
21:55:41  21  	  data_table_name => '&bldtable',
21:55:41  22  	  xform_view_name => 'xformed_build_miss_num');
21:55:41  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:55:41  24  	  miss_table_name => 'svmc_miss_cat',
21:55:41  25  	  data_table_name => '&bldtable',
21:55:41  26  	  xform_view_name => 'xformed_build_miss_cat');
21:55:41  27  
21:55:41  28  	-- Perform outlier treatment.
21:55:41  29  	-- create clip table
21:55:41  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:55:41  31  
21:55:41  32  	-- populate clip table
21:55:41  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:55:41  34  	  clip_table_name => 'svmc_clip',
21:55:41  35  	  data_table_name => '&bldtable',
21:55:41  36  	  tail_frac	  => 0.025,
21:55:41  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:55:41  38  
21:55:41  39  	-- xform input data to winsorized data
21:55:41  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:55:41  41  	  clip_table_name => 'svmc_clip',
21:55:41  42  	  data_table_name => '&bldtable',
21:55:41  43  	  xform_view_name => 'svmc_winsor');
21:55:41  44  
21:55:41  45  	-- create normalization table
21:55:41  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:55:41  47  
21:55:41  48  	-- populate normalization table based on winsorized data
21:55:41  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:55:41  50  	  norm_table_name => 'svmc_norm',
21:55:41  51  	  data_table_name => 'svmc_winsor',
21:55:41  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:55:41  53  
21:55:41  54  	-- normalize the original data
21:55:41  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:55:41  56  	  norm_table_name => 'svmc_norm',
21:55:41  57  	  data_table_name => '&bldtable',
21:55:41  58  	  xform_view_name => 'svmc_build_prep');
21:55:41  59  END;
21:55:41  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.88
21:55:59 SQL> 
21:55:59 SQL> ---------------------
21:55:59 SQL> -- CREATE A NEW MODEL
21:55:59 SQL> --
21:55:59 SQL> -- Cleanup old model with the same name for repeat runs
21:55:59 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:55:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:59   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
21:56:00 SQL> 
21:56:00 SQL> -- Build a new SVM Model
21:56:00 SQL> BEGIN
21:56:00   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:56:00   3  	  model_name	      => '&model_name',
21:56:00   4  	  mining_function     => dbms_data_mining.classification,
21:56:00   5  	  data_table_name     => 'svmc_build_prep',
21:56:00   6  	  case_id_column_name => '&case_id',
21:56:00   7  	  target_column_name  => '&target',
21:56:00   8  	  settings_table_name => 'svmc_settings');
21:56:00   9  END;
21:56:00  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.83
21:56:27 SQL> 
21:56:27 SQL> -----------------------------------------------------------------------
21:56:27 SQL> --			       APPLY/score THE MODEL
21:56:27 SQL> -----------------------------------------------------------------------
21:56:27 SQL> 
21:56:27 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:56:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:56:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:56:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:56:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:56:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:56:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:56:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:56:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:56:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:56:27 SQL> -----------------------
21:56:27 SQL> -- PREPARE SCORING DATA
21:56:27 SQL> --
21:56:27 SQL> -- If the data for model creation has been prepared, then the data
21:56:27 SQL> -- to be scored using the model must be prepared in the same manner
21:56:27 SQL> -- in order to obtain meaningful results.
21:56:27 SQL> --
21:56:27 SQL> -- 1. Missing Value treatment for all Predictors and
21:56:27 SQL> -- 2. Normalization
21:56:27 SQL> -- No outlier treatment will be performed during test and apply. The
21:56:27 SQL> -- normalization step is sufficient, since the normalization parameters
21:56:27 SQL> -- already capture the effects of outlier treatment done with build data.
21:56:27 SQL> --
21:56:27 SQL> BEGIN
21:56:27   2  	-- Xform Test data to replace missing values
21:56:27   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:56:27   4  	  miss_table_name => 'svmc_miss_num',
21:56:27   5  	  data_table_name => '&scoretable',
21:56:27   6  	  xform_view_name => 'xformed_apply_miss_num');
21:56:27   7  
21:56:27   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:56:27   9  	  miss_table_name => 'svmc_miss_cat',
21:56:27  10  	  data_table_name => '&scoretable',
21:56:27  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:56:27  12  
21:56:27  13  	-- Normalize the data to be scored
21:56:27  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:56:27  15  	  norm_table_name => 'svmc_norm',
21:56:27  16  	  data_table_name => '&scoretable',
21:56:27  17  	  xform_view_name => 'svmc_apply_prep');
21:56:27  18  END;
21:56:27  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
21:56:28 SQL> 
21:56:28 SQL> -- Use same model_name used in score_gattn.sql
21:56:28 SQL> DEFINE model_name = 'forex14'
21:56:28 SQL> 
21:56:28 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:56:28 SQL> 
21:56:28 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:56:28   2  SELECT
21:56:28   3  prdate
21:56:28   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:56:28   5  ,sysdate
21:56:28   6  ,SUBSTR(prdate,1,3)pair
21:56:28   7  ,SUBSTR(prdate,4,19)ydate
21:56:28   8  FROM svmc_apply_prep
21:56:28   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:56:29 SQL> @chf_score1day_gattn.sql	2010-12-17 07:45:00
21:56:29 SQL> --
21:56:29 SQL> -- chf_score1day_gattn.sql
21:56:29 SQL> --
21:56:29 SQL> 
21:56:29 SQL> CREATE OR REPLACE VIEW sme AS
21:56:29   2  SELECT
21:56:29   3  'chf'||m.ydate prdate
21:56:29   4  ,NULL gattn
21:56:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:56:29   6  ,eur_g00
21:56:29   7  ,eur_g01
21:56:29   8  ,eur_g02
21:56:29   9  ,eur_g03
21:56:29  10  ,eur_g04
21:56:29  11  ,eur_g05
21:56:29  12  ,eur_g06
21:56:29  13  ,eur_g07
21:56:29  14  ,eur_g08
21:56:29  15  ,eur_g09
21:56:29  16  ,eur_g10
21:56:29  17  ,eur_g11
21:56:29  18  ,eur_g12
21:56:29  19  ,eur_g13
21:56:29  20  ,eur_g14
21:56:29  21  ,eur_g15
21:56:29  22  ,eur_g16
21:56:29  23  ,eur_g17
21:56:29  24  ,eur_g18
21:56:29  25  ,eur_g19
21:56:29  26  ,eur_g20
21:56:29  27  ,eur_g21
21:56:29  28  ,eur_g22
21:56:29  29  ,eur_g23
21:56:29  30  ,eur_g24
21:56:29  31  ,eur_g25
21:56:29  32  ,eur_g26
21:56:29  33  ,eur_g27
21:56:29  34  ,eur_g28
21:56:29  35  ,eur_g29
21:56:29  36  ,eur_g30
21:56:29  37  ,eur_g31
21:56:29  38  ,eur_g32
21:56:29  39  ,eur_g33
21:56:29  40  ,eur_g34
21:56:29  41  ,eur_g35
21:56:29  42  ,eur_g36
21:56:29  43  ,eur_g37
21:56:29  44  ,eur_g38
21:56:29  45  ,eur_g39
21:56:29  46  ,eur_g40
21:56:29  47  ,aud_g00
21:56:29  48  ,aud_g01
21:56:29  49  ,aud_g02
21:56:29  50  ,aud_g03
21:56:29  51  ,aud_g04
21:56:29  52  ,aud_g05
21:56:29  53  ,aud_g06
21:56:29  54  ,aud_g07
21:56:29  55  ,aud_g08
21:56:29  56  ,aud_g09
21:56:29  57  ,aud_g10
21:56:29  58  ,aud_g11
21:56:29  59  ,aud_g12
21:56:29  60  ,aud_g13
21:56:29  61  ,aud_g14
21:56:29  62  ,aud_g15
21:56:29  63  ,aud_g16
21:56:29  64  ,aud_g17
21:56:29  65  ,aud_g18
21:56:29  66  ,aud_g19
21:56:29  67  ,aud_g20
21:56:29  68  ,aud_g21
21:56:29  69  ,aud_g22
21:56:29  70  ,aud_g23
21:56:29  71  ,aud_g24
21:56:29  72  ,aud_g25
21:56:29  73  ,aud_g26
21:56:29  74  ,aud_g27
21:56:29  75  ,aud_g28
21:56:29  76  ,aud_g29
21:56:29  77  ,aud_g30
21:56:29  78  ,aud_g31
21:56:29  79  ,aud_g32
21:56:29  80  ,aud_g33
21:56:29  81  ,aud_g34
21:56:29  82  ,aud_g35
21:56:29  83  ,aud_g36
21:56:29  84  ,aud_g37
21:56:29  85  ,aud_g38
21:56:29  86  ,aud_g39
21:56:29  87  ,aud_g40
21:56:29  88  ,gbp_g00
21:56:29  89  ,gbp_g01
21:56:29  90  ,gbp_g02
21:56:29  91  ,gbp_g03
21:56:29  92  ,gbp_g04
21:56:29  93  ,gbp_g05
21:56:29  94  ,gbp_g06
21:56:29  95  ,gbp_g07
21:56:29  96  ,gbp_g08
21:56:29  97  ,gbp_g09
21:56:29  98  ,gbp_g10
21:56:29  99  ,gbp_g11
21:56:29 100  ,gbp_g12
21:56:29 101  ,gbp_g13
21:56:29 102  ,gbp_g14
21:56:29 103  ,gbp_g15
21:56:29 104  ,gbp_g16
21:56:29 105  ,gbp_g17
21:56:29 106  ,gbp_g18
21:56:29 107  ,gbp_g19
21:56:29 108  ,gbp_g20
21:56:29 109  ,gbp_g21
21:56:29 110  ,gbp_g22
21:56:29 111  ,gbp_g23
21:56:29 112  ,gbp_g24
21:56:29 113  ,gbp_g25
21:56:29 114  ,gbp_g26
21:56:29 115  ,gbp_g27
21:56:29 116  ,gbp_g28
21:56:29 117  ,gbp_g29
21:56:29 118  ,gbp_g30
21:56:29 119  ,gbp_g31
21:56:29 120  ,gbp_g32
21:56:29 121  ,gbp_g33
21:56:29 122  ,gbp_g34
21:56:29 123  ,gbp_g35
21:56:29 124  ,gbp_g36
21:56:29 125  ,gbp_g37
21:56:29 126  ,gbp_g38
21:56:29 127  ,gbp_g39
21:56:29 128  ,gbp_g40
21:56:29 129  ,jpy_g00
21:56:29 130  ,jpy_g01
21:56:29 131  ,jpy_g02
21:56:29 132  ,jpy_g03
21:56:29 133  ,jpy_g04
21:56:29 134  ,jpy_g05
21:56:29 135  ,jpy_g06
21:56:29 136  ,jpy_g07
21:56:29 137  ,jpy_g08
21:56:29 138  ,jpy_g09
21:56:29 139  ,jpy_g10
21:56:29 140  ,jpy_g11
21:56:29 141  ,jpy_g12
21:56:29 142  ,jpy_g13
21:56:29 143  ,jpy_g14
21:56:29 144  ,jpy_g15
21:56:29 145  ,jpy_g16
21:56:29 146  ,jpy_g17
21:56:29 147  ,jpy_g18
21:56:29 148  ,jpy_g19
21:56:29 149  ,jpy_g20
21:56:29 150  ,jpy_g21
21:56:29 151  ,jpy_g22
21:56:29 152  ,jpy_g23
21:56:29 153  ,jpy_g24
21:56:29 154  ,jpy_g25
21:56:29 155  ,jpy_g26
21:56:29 156  ,jpy_g27
21:56:29 157  ,jpy_g28
21:56:29 158  ,jpy_g29
21:56:29 159  ,jpy_g30
21:56:29 160  ,jpy_g31
21:56:29 161  ,jpy_g32
21:56:29 162  ,jpy_g33
21:56:29 163  ,jpy_g34
21:56:29 164  ,jpy_g35
21:56:29 165  ,jpy_g36
21:56:29 166  ,jpy_g37
21:56:29 167  ,jpy_g38
21:56:29 168  ,jpy_g39
21:56:29 169  ,jpy_g40
21:56:29 170  ,cad_g00
21:56:29 171  ,cad_g01
21:56:29 172  ,cad_g02
21:56:29 173  ,cad_g03
21:56:29 174  ,cad_g04
21:56:29 175  ,cad_g05
21:56:29 176  ,cad_g06
21:56:29 177  ,cad_g07
21:56:29 178  ,cad_g08
21:56:29 179  ,cad_g09
21:56:29 180  ,cad_g10
21:56:29 181  ,cad_g11
21:56:29 182  ,cad_g12
21:56:29 183  ,cad_g13
21:56:29 184  ,cad_g14
21:56:29 185  ,cad_g15
21:56:29 186  ,cad_g16
21:56:29 187  ,cad_g17
21:56:29 188  ,cad_g18
21:56:29 189  ,cad_g19
21:56:29 190  ,cad_g20
21:56:29 191  ,cad_g21
21:56:29 192  ,cad_g22
21:56:29 193  ,cad_g23
21:56:29 194  ,cad_g24
21:56:29 195  ,cad_g25
21:56:29 196  ,cad_g26
21:56:29 197  ,cad_g27
21:56:29 198  ,cad_g28
21:56:29 199  ,cad_g29
21:56:29 200  ,cad_g30
21:56:29 201  ,cad_g31
21:56:29 202  ,cad_g32
21:56:29 203  ,cad_g33
21:56:29 204  ,cad_g34
21:56:29 205  ,cad_g35
21:56:29 206  ,cad_g36
21:56:29 207  ,cad_g37
21:56:29 208  ,cad_g38
21:56:29 209  ,cad_g39
21:56:29 210  ,cad_g40
21:56:29 211  ,chf_g00
21:56:29 212  ,chf_g01
21:56:29 213  ,chf_g02
21:56:29 214  ,chf_g03
21:56:29 215  ,chf_g04
21:56:29 216  ,chf_g05
21:56:29 217  ,chf_g06
21:56:29 218  ,chf_g07
21:56:29 219  ,chf_g08
21:56:29 220  ,chf_g09
21:56:29 221  ,chf_g10
21:56:29 222  ,chf_g11
21:56:29 223  ,chf_g12
21:56:29 224  ,chf_g13
21:56:29 225  ,chf_g14
21:56:29 226  ,chf_g15
21:56:29 227  ,chf_g16
21:56:29 228  ,chf_g17
21:56:29 229  ,chf_g18
21:56:29 230  ,chf_g19
21:56:29 231  ,chf_g20
21:56:29 232  ,chf_g21
21:56:29 233  ,chf_g22
21:56:29 234  ,chf_g23
21:56:29 235  ,chf_g24
21:56:29 236  ,chf_g25
21:56:29 237  ,chf_g26
21:56:29 238  ,chf_g27
21:56:29 239  ,chf_g28
21:56:29 240  ,chf_g29
21:56:29 241  ,chf_g30
21:56:29 242  ,chf_g31
21:56:29 243  ,chf_g32
21:56:29 244  ,chf_g33
21:56:29 245  ,chf_g34
21:56:29 246  ,chf_g35
21:56:29 247  ,chf_g36
21:56:29 248  ,chf_g37
21:56:29 249  ,chf_g38
21:56:29 250  ,chf_g39
21:56:29 251  ,chf_g40
21:56:29 252  FROM chf_ms14 m
21:56:29 253  WHERE m.ydate = '&1'||' '||'&2'
21:56:29 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'07:45:00'

View created.

Elapsed: 00:00:00.13
21:56:29 SQL> 
21:56:29 SQL> -- rpt
21:56:29 SQL> -- We should see just 1 row:
21:56:29 SQL> 
21:56:29 SQL> SELECT COUNT(prdate) FROM sme
21:56:29   2  
21:56:29 SQL> -- Build the model:
21:56:29 SQL> CREATE OR REPLACE VIEW bme AS
21:56:29   2  SELECT
21:56:29   3  'chf'||m.ydate prdate
21:56:29   4  ,gattn
21:56:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:56:29   6  ,eur_g00
21:56:29   7  ,eur_g01
21:56:29   8  ,eur_g02
21:56:29   9  ,eur_g03
21:56:29  10  ,eur_g04
21:56:29  11  ,eur_g05
21:56:29  12  ,eur_g06
21:56:29  13  ,eur_g07
21:56:29  14  ,eur_g08
21:56:29  15  ,eur_g09
21:56:29  16  ,eur_g10
21:56:29  17  ,eur_g11
21:56:29  18  ,eur_g12
21:56:29  19  ,eur_g13
21:56:29  20  ,eur_g14
21:56:29  21  ,eur_g15
21:56:29  22  ,eur_g16
21:56:29  23  ,eur_g17
21:56:29  24  ,eur_g18
21:56:29  25  ,eur_g19
21:56:29  26  ,eur_g20
21:56:29  27  ,eur_g21
21:56:29  28  ,eur_g22
21:56:29  29  ,eur_g23
21:56:29  30  ,eur_g24
21:56:29  31  ,eur_g25
21:56:29  32  ,eur_g26
21:56:29  33  ,eur_g27
21:56:29  34  ,eur_g28
21:56:29  35  ,eur_g29
21:56:29  36  ,eur_g30
21:56:29  37  ,eur_g31
21:56:29  38  ,eur_g32
21:56:29  39  ,eur_g33
21:56:29  40  ,eur_g34
21:56:29  41  ,eur_g35
21:56:29  42  ,eur_g36
21:56:29  43  ,eur_g37
21:56:29  44  ,eur_g38
21:56:29  45  ,eur_g39
21:56:29  46  ,eur_g40
21:56:29  47  ,aud_g00
21:56:29  48  ,aud_g01
21:56:29  49  ,aud_g02
21:56:29  50  ,aud_g03
21:56:29  51  ,aud_g04
21:56:29  52  ,aud_g05
21:56:29  53  ,aud_g06
21:56:29  54  ,aud_g07
21:56:29  55  ,aud_g08
21:56:29  56  ,aud_g09
21:56:29  57  ,aud_g10
21:56:29  58  ,aud_g11
21:56:29  59  ,aud_g12
21:56:29  60  ,aud_g13
21:56:29  61  ,aud_g14
21:56:29  62  ,aud_g15
21:56:29  63  ,aud_g16
21:56:29  64  ,aud_g17
21:56:29  65  ,aud_g18
21:56:29  66  ,aud_g19
21:56:29  67  ,aud_g20
21:56:29  68  ,aud_g21
21:56:29  69  ,aud_g22
21:56:29  70  ,aud_g23
21:56:29  71  ,aud_g24
21:56:29  72  ,aud_g25
21:56:29  73  ,aud_g26
21:56:29  74  ,aud_g27
21:56:29  75  ,aud_g28
21:56:29  76  ,aud_g29
21:56:29  77  ,aud_g30
21:56:29  78  ,aud_g31
21:56:29  79  ,aud_g32
21:56:29  80  ,aud_g33
21:56:29  81  ,aud_g34
21:56:29  82  ,aud_g35
21:56:29  83  ,aud_g36
21:56:29  84  ,aud_g37
21:56:29  85  ,aud_g38
21:56:29  86  ,aud_g39
21:56:29  87  ,aud_g40
21:56:29  88  ,gbp_g00
21:56:29  89  ,gbp_g01
21:56:29  90  ,gbp_g02
21:56:29  91  ,gbp_g03
21:56:29  92  ,gbp_g04
21:56:29  93  ,gbp_g05
21:56:29  94  ,gbp_g06
21:56:29  95  ,gbp_g07
21:56:29  96  ,gbp_g08
21:56:29  97  ,gbp_g09
21:56:29  98  ,gbp_g10
21:56:29  99  ,gbp_g11
21:56:29 100  ,gbp_g12
21:56:29 101  ,gbp_g13
21:56:29 102  ,gbp_g14
21:56:29 103  ,gbp_g15
21:56:29 104  ,gbp_g16
21:56:29 105  ,gbp_g17
21:56:29 106  ,gbp_g18
21:56:29 107  ,gbp_g19
21:56:29 108  ,gbp_g20
21:56:29 109  ,gbp_g21
21:56:29 110  ,gbp_g22
21:56:29 111  ,gbp_g23
21:56:29 112  ,gbp_g24
21:56:29 113  ,gbp_g25
21:56:29 114  ,gbp_g26
21:56:29 115  ,gbp_g27
21:56:29 116  ,gbp_g28
21:56:29 117  ,gbp_g29
21:56:29 118  ,gbp_g30
21:56:29 119  ,gbp_g31
21:56:29 120  ,gbp_g32
21:56:29 121  ,gbp_g33
21:56:29 122  ,gbp_g34
21:56:29 123  ,gbp_g35
21:56:29 124  ,gbp_g36
21:56:29 125  ,gbp_g37
21:56:29 126  ,gbp_g38
21:56:29 127  ,gbp_g39
21:56:29 128  ,gbp_g40
21:56:29 129  ,jpy_g00
21:56:29 130  ,jpy_g01
21:56:29 131  ,jpy_g02
21:56:29 132  ,jpy_g03
21:56:29 133  ,jpy_g04
21:56:29 134  ,jpy_g05
21:56:29 135  ,jpy_g06
21:56:29 136  ,jpy_g07
21:56:29 137  ,jpy_g08
21:56:29 138  ,jpy_g09
21:56:29 139  ,jpy_g10
21:56:29 140  ,jpy_g11
21:56:29 141  ,jpy_g12
21:56:29 142  ,jpy_g13
21:56:29 143  ,jpy_g14
21:56:29 144  ,jpy_g15
21:56:29 145  ,jpy_g16
21:56:29 146  ,jpy_g17
21:56:29 147  ,jpy_g18
21:56:29 148  ,jpy_g19
21:56:29 149  ,jpy_g20
21:56:29 150  ,jpy_g21
21:56:29 151  ,jpy_g22
21:56:29 152  ,jpy_g23
21:56:29 153  ,jpy_g24
21:56:29 154  ,jpy_g25
21:56:29 155  ,jpy_g26
21:56:29 156  ,jpy_g27
21:56:29 157  ,jpy_g28
21:56:29 158  ,jpy_g29
21:56:29 159  ,jpy_g30
21:56:29 160  ,jpy_g31
21:56:29 161  ,jpy_g32
21:56:29 162  ,jpy_g33
21:56:29 163  ,jpy_g34
21:56:29 164  ,jpy_g35
21:56:29 165  ,jpy_g36
21:56:29 166  ,jpy_g37
21:56:29 167  ,jpy_g38
21:56:29 168  ,jpy_g39
21:56:29 169  ,jpy_g40
21:56:29 170  ,cad_g00
21:56:29 171  ,cad_g01
21:56:29 172  ,cad_g02
21:56:29 173  ,cad_g03
21:56:29 174  ,cad_g04
21:56:29 175  ,cad_g05
21:56:29 176  ,cad_g06
21:56:29 177  ,cad_g07
21:56:29 178  ,cad_g08
21:56:29 179  ,cad_g09
21:56:29 180  ,cad_g10
21:56:29 181  ,cad_g11
21:56:29 182  ,cad_g12
21:56:29 183  ,cad_g13
21:56:29 184  ,cad_g14
21:56:29 185  ,cad_g15
21:56:29 186  ,cad_g16
21:56:29 187  ,cad_g17
21:56:29 188  ,cad_g18
21:56:29 189  ,cad_g19
21:56:29 190  ,cad_g20
21:56:29 191  ,cad_g21
21:56:29 192  ,cad_g22
21:56:29 193  ,cad_g23
21:56:29 194  ,cad_g24
21:56:29 195  ,cad_g25
21:56:29 196  ,cad_g26
21:56:29 197  ,cad_g27
21:56:29 198  ,cad_g28
21:56:29 199  ,cad_g29
21:56:29 200  ,cad_g30
21:56:29 201  ,cad_g31
21:56:29 202  ,cad_g32
21:56:29 203  ,cad_g33
21:56:29 204  ,cad_g34
21:56:29 205  ,cad_g35
21:56:29 206  ,cad_g36
21:56:29 207  ,cad_g37
21:56:29 208  ,cad_g38
21:56:29 209  ,cad_g39
21:56:29 210  ,cad_g40
21:56:29 211  ,chf_g00
21:56:29 212  ,chf_g01
21:56:29 213  ,chf_g02
21:56:29 214  ,chf_g03
21:56:29 215  ,chf_g04
21:56:29 216  ,chf_g05
21:56:29 217  ,chf_g06
21:56:29 218  ,chf_g07
21:56:29 219  ,chf_g08
21:56:29 220  ,chf_g09
21:56:29 221  ,chf_g10
21:56:29 222  ,chf_g11
21:56:29 223  ,chf_g12
21:56:29 224  ,chf_g13
21:56:29 225  ,chf_g14
21:56:29 226  ,chf_g15
21:56:29 227  ,chf_g16
21:56:29 228  ,chf_g17
21:56:29 229  ,chf_g18
21:56:29 230  ,chf_g19
21:56:29 231  ,chf_g20
21:56:29 232  ,chf_g21
21:56:29 233  ,chf_g22
21:56:29 234  ,chf_g23
21:56:29 235  ,chf_g24
21:56:29 236  ,chf_g25
21:56:29 237  ,chf_g26
21:56:29 238  ,chf_g27
21:56:29 239  ,chf_g28
21:56:29 240  ,chf_g29
21:56:29 241  ,chf_g30
21:56:29 242  ,chf_g31
21:56:29 243  ,chf_g32
21:56:29 244  ,chf_g33
21:56:29 245  ,chf_g34
21:56:29 246  ,chf_g35
21:56:29 247  ,chf_g36
21:56:29 248  ,chf_g37
21:56:29 249  ,chf_g38
21:56:29 250  ,chf_g39
21:56:29 251  ,chf_g40
21:56:29 252  FROM chf_ms14 m
21:56:29 253  WHERE gattn IN('nup','up')
21:56:29 254  AND 1+m.ydate < '&1'||' '||'&2'
21:56:29 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'07:45:00'

View created.

Elapsed: 00:00:00.12
21:56:29 SQL> 
21:56:29 SQL> -- rpt
21:56:29 SQL> 
21:56:29 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:56:29   2  
21:56:29 SQL> SELECT MAX(prdate) FROM bme
21:56:29   2  
21:56:29 SQL> -- Now build model from bme and score sme
21:56:29 SQL> @score1gattn.sql
21:56:29 SQL> -- score1gattn.sql
21:56:29 SQL> 
21:56:29 SQL> -- Does the 1st SVM score
21:56:29 SQL> 
21:56:29 SQL> -- Fill up svmc_apply_prep
21:56:29 SQL> @score_gattn.sql
21:56:29 SQL> --
21:56:29 SQL> -- score_gattn.sql
21:56:29 SQL> --
21:56:29 SQL> 
21:56:29 SQL> -- usage: score_gattn.sql
21:56:29 SQL> 
21:56:29 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:56:29 SQL> 
21:56:29 SQL> DEFINE target	= 'gattn'
21:56:29 SQL> DEFINE model_name = 'forex14'
21:56:29 SQL> DEFINE bldtable	= 'bme'
21:56:29 SQL> DEFINE scoretable = 'sme'
21:56:29 SQL> DEFINE case_id	= 'prdate'
21:56:29 SQL> 
21:56:29 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:56:29 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:56:29 SQL> 
21:56:29 SQL> -- Builds an SVM model using pl/sql.
21:56:29 SQL> 
21:56:29 SQL> -----------------------------------------------------------------------
21:56:29 SQL> --			    BUILD THE MODEL
21:56:29 SQL> -----------------------------------------------------------------------
21:56:29 SQL> 
21:56:29 SQL> -- Cleanup old build data preparation objects for repeat runs
21:56:29 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:56:29 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:56:29 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:56:29 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:56:29 SQL> 
21:56:29 SQL> 
21:56:29 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:56:29 SQL> --
21:56:29 SQL> -- DROP	TABLE svmc_settings ;
21:56:29 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:56:29 SQL> -- DELETE svmc_settings;
21:56:29 SQL> 
21:56:29 SQL> -- The default classification algorithm is Naive Bayes. So override
21:56:29 SQL> -- this choice to SVM using a settings table.
21:56:29 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:56:29 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:56:29 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:56:29 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:56:29 SQL> -- models.
21:56:29 SQL> --
21:56:29 SQL> 
21:56:29 SQL> -- Do this once and then comment it out.
21:56:29 SQL> -- That makes script go faster.
21:56:29 SQL> -- BEGIN
21:56:29 SQL> -- -- Populate settings table
21:56:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:56:29 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:56:29 SQL> --
21:56:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:56:29 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:56:29 SQL> --
21:56:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:56:29 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:56:29 SQL> --   COMMIT;
21:56:29 SQL> -- END;
21:56:29 SQL> -- /
21:56:29 SQL> 
21:56:29 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:56:29 SQL> 
21:56:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:56:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:56:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:56:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:56:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:56:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:56:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:56:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:56:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:56:29 SQL> 
21:56:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:56:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:56:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:56:29 SQL> 
21:56:29 SQL> --------------------------------
21:56:29 SQL> -- PREPARE BUILD (TRAINING) DATA
21:56:29 SQL> --
21:56:29 SQL> 
21:56:29 SQL> -- 1. Missing Value treatment for all Predictors and
21:56:29 SQL> -- 2. Outlier Treatment and
21:56:29 SQL> -- 3. Normalization are performed below.
21:56:29 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:56:29 SQL> --    normalized here.
21:56:29 SQL> 
21:56:29 SQL> BEGIN
21:56:29   2  	-- Perform missing value treatment for all predictors
21:56:29   3  	-- create miss tables
21:56:29   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:56:29   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:56:29   6  
21:56:29   7  	-- populate miss tables
21:56:29   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:56:29   9  	  miss_table_name => 'svmc_miss_num',
21:56:29  10  	  data_table_name => '&bldtable',
21:56:29  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:56:29  12  
21:56:29  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:56:29  14  	  miss_table_name => 'svmc_miss_cat',
21:56:29  15  	  data_table_name => '&bldtable',
21:56:29  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:56:29  17  
21:56:29  18  	-- xform input data to replace missing values
21:56:29  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:56:29  20  	  miss_table_name => 'svmc_miss_num',
21:56:29  21  	  data_table_name => '&bldtable',
21:56:29  22  	  xform_view_name => 'xformed_build_miss_num');
21:56:29  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:56:29  24  	  miss_table_name => 'svmc_miss_cat',
21:56:29  25  	  data_table_name => '&bldtable',
21:56:29  26  	  xform_view_name => 'xformed_build_miss_cat');
21:56:29  27  
21:56:29  28  	-- Perform outlier treatment.
21:56:29  29  	-- create clip table
21:56:29  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:56:29  31  
21:56:29  32  	-- populate clip table
21:56:29  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:56:29  34  	  clip_table_name => 'svmc_clip',
21:56:29  35  	  data_table_name => '&bldtable',
21:56:29  36  	  tail_frac	  => 0.025,
21:56:29  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:56:29  38  
21:56:29  39  	-- xform input data to winsorized data
21:56:29  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:56:29  41  	  clip_table_name => 'svmc_clip',
21:56:29  42  	  data_table_name => '&bldtable',
21:56:29  43  	  xform_view_name => 'svmc_winsor');
21:56:29  44  
21:56:29  45  	-- create normalization table
21:56:29  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:56:29  47  
21:56:29  48  	-- populate normalization table based on winsorized data
21:56:29  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:56:29  50  	  norm_table_name => 'svmc_norm',
21:56:29  51  	  data_table_name => 'svmc_winsor',
21:56:29  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:56:29  53  
21:56:29  54  	-- normalize the original data
21:56:29  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:56:29  56  	  norm_table_name => 'svmc_norm',
21:56:29  57  	  data_table_name => '&bldtable',
21:56:29  58  	  xform_view_name => 'svmc_build_prep');
21:56:29  59  END;
21:56:29  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.01
21:56:47 SQL> 
21:56:47 SQL> ---------------------
21:56:47 SQL> -- CREATE A NEW MODEL
21:56:47 SQL> --
21:56:47 SQL> -- Cleanup old model with the same name for repeat runs
21:56:47 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:56:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:56:47   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.51
21:56:49 SQL> 
21:56:49 SQL> -- Build a new SVM Model
21:56:49 SQL> BEGIN
21:56:49   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:56:49   3  	  model_name	      => '&model_name',
21:56:49   4  	  mining_function     => dbms_data_mining.classification,
21:56:49   5  	  data_table_name     => 'svmc_build_prep',
21:56:49   6  	  case_id_column_name => '&case_id',
21:56:49   7  	  target_column_name  => '&target',
21:56:49   8  	  settings_table_name => 'svmc_settings');
21:56:49   9  END;
21:56:49  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.88
21:57:14 SQL> 
21:57:14 SQL> -----------------------------------------------------------------------
21:57:14 SQL> --			       APPLY/score THE MODEL
21:57:14 SQL> -----------------------------------------------------------------------
21:57:14 SQL> 
21:57:14 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:57:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:57:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:57:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:57:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:57:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:57:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:57:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:57:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:57:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:57:15 SQL> -----------------------
21:57:15 SQL> -- PREPARE SCORING DATA
21:57:15 SQL> --
21:57:15 SQL> -- If the data for model creation has been prepared, then the data
21:57:15 SQL> -- to be scored using the model must be prepared in the same manner
21:57:15 SQL> -- in order to obtain meaningful results.
21:57:15 SQL> --
21:57:15 SQL> -- 1. Missing Value treatment for all Predictors and
21:57:15 SQL> -- 2. Normalization
21:57:15 SQL> -- No outlier treatment will be performed during test and apply. The
21:57:15 SQL> -- normalization step is sufficient, since the normalization parameters
21:57:15 SQL> -- already capture the effects of outlier treatment done with build data.
21:57:15 SQL> --
21:57:15 SQL> BEGIN
21:57:15   2  	-- Xform Test data to replace missing values
21:57:15   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:57:15   4  	  miss_table_name => 'svmc_miss_num',
21:57:15   5  	  data_table_name => '&scoretable',
21:57:15   6  	  xform_view_name => 'xformed_apply_miss_num');
21:57:15   7  
21:57:15   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:57:15   9  	  miss_table_name => 'svmc_miss_cat',
21:57:15  10  	  data_table_name => '&scoretable',
21:57:15  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:57:15  12  
21:57:15  13  	-- Normalize the data to be scored
21:57:15  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:57:15  15  	  norm_table_name => 'svmc_norm',
21:57:15  16  	  data_table_name => '&scoretable',
21:57:15  17  	  xform_view_name => 'svmc_apply_prep');
21:57:15  18  END;
21:57:15  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.16
21:57:16 SQL> 
21:57:16 SQL> -- Use same model_name used in score_gattn.sql
21:57:16 SQL> DEFINE model_name = 'forex14'
21:57:16 SQL> 
21:57:16 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:57:16 SQL> 
21:57:16 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:57:16   2  SELECT
21:57:16   3  prdate
21:57:16   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:57:16   5  ,sysdate
21:57:16   6  ,SUBSTR(prdate,1,3)pair
21:57:16   7  ,SUBSTR(prdate,4,19)ydate
21:57:16   8  FROM svmc_apply_prep
21:57:16   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.20
21:57:16 SQL> @chf_score1day_gattn.sql	2010-12-17 07:40:00
21:57:16 SQL> --
21:57:16 SQL> -- chf_score1day_gattn.sql
21:57:16 SQL> --
21:57:16 SQL> 
21:57:16 SQL> CREATE OR REPLACE VIEW sme AS
21:57:16   2  SELECT
21:57:16   3  'chf'||m.ydate prdate
21:57:16   4  ,NULL gattn
21:57:16   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:57:16   6  ,eur_g00
21:57:16   7  ,eur_g01
21:57:16   8  ,eur_g02
21:57:16   9  ,eur_g03
21:57:16  10  ,eur_g04
21:57:16  11  ,eur_g05
21:57:16  12  ,eur_g06
21:57:16  13  ,eur_g07
21:57:16  14  ,eur_g08
21:57:16  15  ,eur_g09
21:57:16  16  ,eur_g10
21:57:16  17  ,eur_g11
21:57:16  18  ,eur_g12
21:57:16  19  ,eur_g13
21:57:16  20  ,eur_g14
21:57:16  21  ,eur_g15
21:57:16  22  ,eur_g16
21:57:16  23  ,eur_g17
21:57:16  24  ,eur_g18
21:57:16  25  ,eur_g19
21:57:16  26  ,eur_g20
21:57:16  27  ,eur_g21
21:57:16  28  ,eur_g22
21:57:16  29  ,eur_g23
21:57:16  30  ,eur_g24
21:57:16  31  ,eur_g25
21:57:16  32  ,eur_g26
21:57:16  33  ,eur_g27
21:57:16  34  ,eur_g28
21:57:16  35  ,eur_g29
21:57:16  36  ,eur_g30
21:57:16  37  ,eur_g31
21:57:16  38  ,eur_g32
21:57:16  39  ,eur_g33
21:57:16  40  ,eur_g34
21:57:16  41  ,eur_g35
21:57:16  42  ,eur_g36
21:57:16  43  ,eur_g37
21:57:16  44  ,eur_g38
21:57:16  45  ,eur_g39
21:57:16  46  ,eur_g40
21:57:16  47  ,aud_g00
21:57:16  48  ,aud_g01
21:57:16  49  ,aud_g02
21:57:16  50  ,aud_g03
21:57:16  51  ,aud_g04
21:57:16  52  ,aud_g05
21:57:16  53  ,aud_g06
21:57:16  54  ,aud_g07
21:57:16  55  ,aud_g08
21:57:16  56  ,aud_g09
21:57:16  57  ,aud_g10
21:57:16  58  ,aud_g11
21:57:16  59  ,aud_g12
21:57:16  60  ,aud_g13
21:57:16  61  ,aud_g14
21:57:16  62  ,aud_g15
21:57:16  63  ,aud_g16
21:57:16  64  ,aud_g17
21:57:16  65  ,aud_g18
21:57:16  66  ,aud_g19
21:57:16  67  ,aud_g20
21:57:16  68  ,aud_g21
21:57:16  69  ,aud_g22
21:57:16  70  ,aud_g23
21:57:16  71  ,aud_g24
21:57:16  72  ,aud_g25
21:57:16  73  ,aud_g26
21:57:16  74  ,aud_g27
21:57:16  75  ,aud_g28
21:57:16  76  ,aud_g29
21:57:16  77  ,aud_g30
21:57:16  78  ,aud_g31
21:57:16  79  ,aud_g32
21:57:16  80  ,aud_g33
21:57:16  81  ,aud_g34
21:57:16  82  ,aud_g35
21:57:16  83  ,aud_g36
21:57:16  84  ,aud_g37
21:57:16  85  ,aud_g38
21:57:16  86  ,aud_g39
21:57:16  87  ,aud_g40
21:57:16  88  ,gbp_g00
21:57:16  89  ,gbp_g01
21:57:16  90  ,gbp_g02
21:57:16  91  ,gbp_g03
21:57:16  92  ,gbp_g04
21:57:16  93  ,gbp_g05
21:57:16  94  ,gbp_g06
21:57:16  95  ,gbp_g07
21:57:16  96  ,gbp_g08
21:57:16  97  ,gbp_g09
21:57:16  98  ,gbp_g10
21:57:16  99  ,gbp_g11
21:57:16 100  ,gbp_g12
21:57:16 101  ,gbp_g13
21:57:16 102  ,gbp_g14
21:57:16 103  ,gbp_g15
21:57:16 104  ,gbp_g16
21:57:16 105  ,gbp_g17
21:57:16 106  ,gbp_g18
21:57:16 107  ,gbp_g19
21:57:16 108  ,gbp_g20
21:57:16 109  ,gbp_g21
21:57:16 110  ,gbp_g22
21:57:16 111  ,gbp_g23
21:57:16 112  ,gbp_g24
21:57:16 113  ,gbp_g25
21:57:16 114  ,gbp_g26
21:57:16 115  ,gbp_g27
21:57:16 116  ,gbp_g28
21:57:16 117  ,gbp_g29
21:57:16 118  ,gbp_g30
21:57:16 119  ,gbp_g31
21:57:16 120  ,gbp_g32
21:57:16 121  ,gbp_g33
21:57:16 122  ,gbp_g34
21:57:16 123  ,gbp_g35
21:57:16 124  ,gbp_g36
21:57:16 125  ,gbp_g37
21:57:16 126  ,gbp_g38
21:57:16 127  ,gbp_g39
21:57:16 128  ,gbp_g40
21:57:16 129  ,jpy_g00
21:57:16 130  ,jpy_g01
21:57:16 131  ,jpy_g02
21:57:16 132  ,jpy_g03
21:57:16 133  ,jpy_g04
21:57:16 134  ,jpy_g05
21:57:16 135  ,jpy_g06
21:57:16 136  ,jpy_g07
21:57:16 137  ,jpy_g08
21:57:16 138  ,jpy_g09
21:57:16 139  ,jpy_g10
21:57:16 140  ,jpy_g11
21:57:16 141  ,jpy_g12
21:57:16 142  ,jpy_g13
21:57:16 143  ,jpy_g14
21:57:16 144  ,jpy_g15
21:57:16 145  ,jpy_g16
21:57:16 146  ,jpy_g17
21:57:16 147  ,jpy_g18
21:57:16 148  ,jpy_g19
21:57:16 149  ,jpy_g20
21:57:16 150  ,jpy_g21
21:57:16 151  ,jpy_g22
21:57:16 152  ,jpy_g23
21:57:16 153  ,jpy_g24
21:57:16 154  ,jpy_g25
21:57:16 155  ,jpy_g26
21:57:16 156  ,jpy_g27
21:57:16 157  ,jpy_g28
21:57:16 158  ,jpy_g29
21:57:16 159  ,jpy_g30
21:57:16 160  ,jpy_g31
21:57:16 161  ,jpy_g32
21:57:16 162  ,jpy_g33
21:57:16 163  ,jpy_g34
21:57:16 164  ,jpy_g35
21:57:16 165  ,jpy_g36
21:57:16 166  ,jpy_g37
21:57:16 167  ,jpy_g38
21:57:16 168  ,jpy_g39
21:57:16 169  ,jpy_g40
21:57:16 170  ,cad_g00
21:57:16 171  ,cad_g01
21:57:16 172  ,cad_g02
21:57:16 173  ,cad_g03
21:57:16 174  ,cad_g04
21:57:16 175  ,cad_g05
21:57:16 176  ,cad_g06
21:57:16 177  ,cad_g07
21:57:16 178  ,cad_g08
21:57:16 179  ,cad_g09
21:57:16 180  ,cad_g10
21:57:16 181  ,cad_g11
21:57:16 182  ,cad_g12
21:57:16 183  ,cad_g13
21:57:16 184  ,cad_g14
21:57:16 185  ,cad_g15
21:57:16 186  ,cad_g16
21:57:16 187  ,cad_g17
21:57:16 188  ,cad_g18
21:57:16 189  ,cad_g19
21:57:16 190  ,cad_g20
21:57:16 191  ,cad_g21
21:57:16 192  ,cad_g22
21:57:16 193  ,cad_g23
21:57:16 194  ,cad_g24
21:57:16 195  ,cad_g25
21:57:16 196  ,cad_g26
21:57:16 197  ,cad_g27
21:57:16 198  ,cad_g28
21:57:16 199  ,cad_g29
21:57:16 200  ,cad_g30
21:57:16 201  ,cad_g31
21:57:16 202  ,cad_g32
21:57:16 203  ,cad_g33
21:57:16 204  ,cad_g34
21:57:16 205  ,cad_g35
21:57:16 206  ,cad_g36
21:57:16 207  ,cad_g37
21:57:16 208  ,cad_g38
21:57:16 209  ,cad_g39
21:57:16 210  ,cad_g40
21:57:16 211  ,chf_g00
21:57:16 212  ,chf_g01
21:57:16 213  ,chf_g02
21:57:16 214  ,chf_g03
21:57:16 215  ,chf_g04
21:57:16 216  ,chf_g05
21:57:16 217  ,chf_g06
21:57:16 218  ,chf_g07
21:57:16 219  ,chf_g08
21:57:16 220  ,chf_g09
21:57:16 221  ,chf_g10
21:57:16 222  ,chf_g11
21:57:16 223  ,chf_g12
21:57:16 224  ,chf_g13
21:57:16 225  ,chf_g14
21:57:16 226  ,chf_g15
21:57:16 227  ,chf_g16
21:57:16 228  ,chf_g17
21:57:16 229  ,chf_g18
21:57:16 230  ,chf_g19
21:57:16 231  ,chf_g20
21:57:16 232  ,chf_g21
21:57:16 233  ,chf_g22
21:57:16 234  ,chf_g23
21:57:16 235  ,chf_g24
21:57:16 236  ,chf_g25
21:57:16 237  ,chf_g26
21:57:16 238  ,chf_g27
21:57:16 239  ,chf_g28
21:57:16 240  ,chf_g29
21:57:16 241  ,chf_g30
21:57:16 242  ,chf_g31
21:57:16 243  ,chf_g32
21:57:16 244  ,chf_g33
21:57:16 245  ,chf_g34
21:57:16 246  ,chf_g35
21:57:16 247  ,chf_g36
21:57:16 248  ,chf_g37
21:57:16 249  ,chf_g38
21:57:16 250  ,chf_g39
21:57:16 251  ,chf_g40
21:57:16 252  FROM chf_ms14 m
21:57:16 253  WHERE m.ydate = '&1'||' '||'&2'
21:57:16 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'07:40:00'

View created.

Elapsed: 00:00:00.17
21:57:16 SQL> 
21:57:16 SQL> -- rpt
21:57:16 SQL> -- We should see just 1 row:
21:57:16 SQL> 
21:57:16 SQL> SELECT COUNT(prdate) FROM sme
21:57:16   2  
21:57:16 SQL> -- Build the model:
21:57:16 SQL> CREATE OR REPLACE VIEW bme AS
21:57:16   2  SELECT
21:57:16   3  'chf'||m.ydate prdate
21:57:16   4  ,gattn
21:57:16   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:57:16   6  ,eur_g00
21:57:16   7  ,eur_g01
21:57:16   8  ,eur_g02
21:57:16   9  ,eur_g03
21:57:16  10  ,eur_g04
21:57:16  11  ,eur_g05
21:57:16  12  ,eur_g06
21:57:16  13  ,eur_g07
21:57:16  14  ,eur_g08
21:57:16  15  ,eur_g09
21:57:16  16  ,eur_g10
21:57:16  17  ,eur_g11
21:57:16  18  ,eur_g12
21:57:16  19  ,eur_g13
21:57:16  20  ,eur_g14
21:57:16  21  ,eur_g15
21:57:16  22  ,eur_g16
21:57:16  23  ,eur_g17
21:57:16  24  ,eur_g18
21:57:16  25  ,eur_g19
21:57:16  26  ,eur_g20
21:57:16  27  ,eur_g21
21:57:16  28  ,eur_g22
21:57:16  29  ,eur_g23
21:57:16  30  ,eur_g24
21:57:16  31  ,eur_g25
21:57:16  32  ,eur_g26
21:57:16  33  ,eur_g27
21:57:16  34  ,eur_g28
21:57:16  35  ,eur_g29
21:57:16  36  ,eur_g30
21:57:16  37  ,eur_g31
21:57:16  38  ,eur_g32
21:57:16  39  ,eur_g33
21:57:16  40  ,eur_g34
21:57:16  41  ,eur_g35
21:57:16  42  ,eur_g36
21:57:16  43  ,eur_g37
21:57:16  44  ,eur_g38
21:57:16  45  ,eur_g39
21:57:16  46  ,eur_g40
21:57:16  47  ,aud_g00
21:57:16  48  ,aud_g01
21:57:16  49  ,aud_g02
21:57:16  50  ,aud_g03
21:57:16  51  ,aud_g04
21:57:16  52  ,aud_g05
21:57:16  53  ,aud_g06
21:57:16  54  ,aud_g07
21:57:16  55  ,aud_g08
21:57:16  56  ,aud_g09
21:57:16  57  ,aud_g10
21:57:16  58  ,aud_g11
21:57:16  59  ,aud_g12
21:57:16  60  ,aud_g13
21:57:16  61  ,aud_g14
21:57:16  62  ,aud_g15
21:57:16  63  ,aud_g16
21:57:16  64  ,aud_g17
21:57:16  65  ,aud_g18
21:57:16  66  ,aud_g19
21:57:16  67  ,aud_g20
21:57:16  68  ,aud_g21
21:57:16  69  ,aud_g22
21:57:16  70  ,aud_g23
21:57:16  71  ,aud_g24
21:57:16  72  ,aud_g25
21:57:16  73  ,aud_g26
21:57:16  74  ,aud_g27
21:57:16  75  ,aud_g28
21:57:16  76  ,aud_g29
21:57:16  77  ,aud_g30
21:57:16  78  ,aud_g31
21:57:16  79  ,aud_g32
21:57:16  80  ,aud_g33
21:57:16  81  ,aud_g34
21:57:16  82  ,aud_g35
21:57:16  83  ,aud_g36
21:57:16  84  ,aud_g37
21:57:16  85  ,aud_g38
21:57:16  86  ,aud_g39
21:57:16  87  ,aud_g40
21:57:16  88  ,gbp_g00
21:57:16  89  ,gbp_g01
21:57:16  90  ,gbp_g02
21:57:16  91  ,gbp_g03
21:57:16  92  ,gbp_g04
21:57:16  93  ,gbp_g05
21:57:16  94  ,gbp_g06
21:57:16  95  ,gbp_g07
21:57:16  96  ,gbp_g08
21:57:16  97  ,gbp_g09
21:57:16  98  ,gbp_g10
21:57:16  99  ,gbp_g11
21:57:16 100  ,gbp_g12
21:57:16 101  ,gbp_g13
21:57:16 102  ,gbp_g14
21:57:16 103  ,gbp_g15
21:57:16 104  ,gbp_g16
21:57:16 105  ,gbp_g17
21:57:16 106  ,gbp_g18
21:57:16 107  ,gbp_g19
21:57:16 108  ,gbp_g20
21:57:16 109  ,gbp_g21
21:57:16 110  ,gbp_g22
21:57:16 111  ,gbp_g23
21:57:16 112  ,gbp_g24
21:57:16 113  ,gbp_g25
21:57:16 114  ,gbp_g26
21:57:16 115  ,gbp_g27
21:57:16 116  ,gbp_g28
21:57:16 117  ,gbp_g29
21:57:16 118  ,gbp_g30
21:57:16 119  ,gbp_g31
21:57:16 120  ,gbp_g32
21:57:16 121  ,gbp_g33
21:57:16 122  ,gbp_g34
21:57:16 123  ,gbp_g35
21:57:16 124  ,gbp_g36
21:57:16 125  ,gbp_g37
21:57:16 126  ,gbp_g38
21:57:16 127  ,gbp_g39
21:57:16 128  ,gbp_g40
21:57:16 129  ,jpy_g00
21:57:16 130  ,jpy_g01
21:57:16 131  ,jpy_g02
21:57:16 132  ,jpy_g03
21:57:16 133  ,jpy_g04
21:57:16 134  ,jpy_g05
21:57:16 135  ,jpy_g06
21:57:16 136  ,jpy_g07
21:57:16 137  ,jpy_g08
21:57:16 138  ,jpy_g09
21:57:16 139  ,jpy_g10
21:57:16 140  ,jpy_g11
21:57:16 141  ,jpy_g12
21:57:16 142  ,jpy_g13
21:57:16 143  ,jpy_g14
21:57:16 144  ,jpy_g15
21:57:16 145  ,jpy_g16
21:57:16 146  ,jpy_g17
21:57:16 147  ,jpy_g18
21:57:16 148  ,jpy_g19
21:57:16 149  ,jpy_g20
21:57:16 150  ,jpy_g21
21:57:16 151  ,jpy_g22
21:57:16 152  ,jpy_g23
21:57:16 153  ,jpy_g24
21:57:16 154  ,jpy_g25
21:57:16 155  ,jpy_g26
21:57:16 156  ,jpy_g27
21:57:16 157  ,jpy_g28
21:57:16 158  ,jpy_g29
21:57:16 159  ,jpy_g30
21:57:16 160  ,jpy_g31
21:57:16 161  ,jpy_g32
21:57:16 162  ,jpy_g33
21:57:16 163  ,jpy_g34
21:57:16 164  ,jpy_g35
21:57:16 165  ,jpy_g36
21:57:16 166  ,jpy_g37
21:57:16 167  ,jpy_g38
21:57:16 168  ,jpy_g39
21:57:16 169  ,jpy_g40
21:57:16 170  ,cad_g00
21:57:16 171  ,cad_g01
21:57:16 172  ,cad_g02
21:57:16 173  ,cad_g03
21:57:16 174  ,cad_g04
21:57:16 175  ,cad_g05
21:57:16 176  ,cad_g06
21:57:16 177  ,cad_g07
21:57:16 178  ,cad_g08
21:57:16 179  ,cad_g09
21:57:16 180  ,cad_g10
21:57:16 181  ,cad_g11
21:57:16 182  ,cad_g12
21:57:16 183  ,cad_g13
21:57:16 184  ,cad_g14
21:57:16 185  ,cad_g15
21:57:16 186  ,cad_g16
21:57:16 187  ,cad_g17
21:57:16 188  ,cad_g18
21:57:16 189  ,cad_g19
21:57:16 190  ,cad_g20
21:57:16 191  ,cad_g21
21:57:16 192  ,cad_g22
21:57:16 193  ,cad_g23
21:57:16 194  ,cad_g24
21:57:16 195  ,cad_g25
21:57:16 196  ,cad_g26
21:57:16 197  ,cad_g27
21:57:16 198  ,cad_g28
21:57:16 199  ,cad_g29
21:57:16 200  ,cad_g30
21:57:16 201  ,cad_g31
21:57:16 202  ,cad_g32
21:57:16 203  ,cad_g33
21:57:16 204  ,cad_g34
21:57:16 205  ,cad_g35
21:57:16 206  ,cad_g36
21:57:16 207  ,cad_g37
21:57:16 208  ,cad_g38
21:57:16 209  ,cad_g39
21:57:16 210  ,cad_g40
21:57:16 211  ,chf_g00
21:57:16 212  ,chf_g01
21:57:16 213  ,chf_g02
21:57:16 214  ,chf_g03
21:57:16 215  ,chf_g04
21:57:16 216  ,chf_g05
21:57:16 217  ,chf_g06
21:57:16 218  ,chf_g07
21:57:16 219  ,chf_g08
21:57:16 220  ,chf_g09
21:57:16 221  ,chf_g10
21:57:16 222  ,chf_g11
21:57:16 223  ,chf_g12
21:57:16 224  ,chf_g13
21:57:16 225  ,chf_g14
21:57:16 226  ,chf_g15
21:57:16 227  ,chf_g16
21:57:16 228  ,chf_g17
21:57:16 229  ,chf_g18
21:57:16 230  ,chf_g19
21:57:16 231  ,chf_g20
21:57:16 232  ,chf_g21
21:57:16 233  ,chf_g22
21:57:16 234  ,chf_g23
21:57:16 235  ,chf_g24
21:57:16 236  ,chf_g25
21:57:16 237  ,chf_g26
21:57:16 238  ,chf_g27
21:57:16 239  ,chf_g28
21:57:16 240  ,chf_g29
21:57:16 241  ,chf_g30
21:57:16 242  ,chf_g31
21:57:16 243  ,chf_g32
21:57:16 244  ,chf_g33
21:57:16 245  ,chf_g34
21:57:16 246  ,chf_g35
21:57:16 247  ,chf_g36
21:57:16 248  ,chf_g37
21:57:16 249  ,chf_g38
21:57:16 250  ,chf_g39
21:57:16 251  ,chf_g40
21:57:16 252  FROM chf_ms14 m
21:57:16 253  WHERE gattn IN('nup','up')
21:57:16 254  AND 1+m.ydate < '&1'||' '||'&2'
21:57:16 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'07:40:00'

View created.

Elapsed: 00:00:00.13
21:57:16 SQL> 
21:57:16 SQL> -- rpt
21:57:16 SQL> 
21:57:16 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:57:16   2  
21:57:16 SQL> SELECT MAX(prdate) FROM bme
21:57:16   2  
21:57:16 SQL> -- Now build model from bme and score sme
21:57:16 SQL> @score1gattn.sql
21:57:16 SQL> -- score1gattn.sql
21:57:16 SQL> 
21:57:16 SQL> -- Does the 1st SVM score
21:57:16 SQL> 
21:57:16 SQL> -- Fill up svmc_apply_prep
21:57:16 SQL> @score_gattn.sql
21:57:16 SQL> --
21:57:16 SQL> -- score_gattn.sql
21:57:16 SQL> --
21:57:16 SQL> 
21:57:16 SQL> -- usage: score_gattn.sql
21:57:16 SQL> 
21:57:16 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:57:16 SQL> 
21:57:16 SQL> DEFINE target	= 'gattn'
21:57:16 SQL> DEFINE model_name = 'forex14'
21:57:16 SQL> DEFINE bldtable	= 'bme'
21:57:16 SQL> DEFINE scoretable = 'sme'
21:57:16 SQL> DEFINE case_id	= 'prdate'
21:57:16 SQL> 
21:57:16 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:57:16 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:57:16 SQL> 
21:57:16 SQL> -- Builds an SVM model using pl/sql.
21:57:16 SQL> 
21:57:16 SQL> -----------------------------------------------------------------------
21:57:16 SQL> --			    BUILD THE MODEL
21:57:16 SQL> -----------------------------------------------------------------------
21:57:16 SQL> 
21:57:16 SQL> -- Cleanup old build data preparation objects for repeat runs
21:57:16 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:57:16 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:57:16 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:57:16 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
21:57:16 SQL> 
21:57:16 SQL> 
21:57:16 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:57:16 SQL> --
21:57:16 SQL> -- DROP	TABLE svmc_settings ;
21:57:16 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:57:16 SQL> -- DELETE svmc_settings;
21:57:16 SQL> 
21:57:16 SQL> -- The default classification algorithm is Naive Bayes. So override
21:57:16 SQL> -- this choice to SVM using a settings table.
21:57:16 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:57:16 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:57:16 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:57:16 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:57:16 SQL> -- models.
21:57:16 SQL> --
21:57:16 SQL> 
21:57:16 SQL> -- Do this once and then comment it out.
21:57:16 SQL> -- That makes script go faster.
21:57:16 SQL> -- BEGIN
21:57:16 SQL> -- -- Populate settings table
21:57:16 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:57:16 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:57:16 SQL> --
21:57:16 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:57:16 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:57:16 SQL> --
21:57:16 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:57:16 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:57:16 SQL> --   COMMIT;
21:57:16 SQL> -- END;
21:57:16 SQL> -- /
21:57:16 SQL> 
21:57:16 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
21:57:16 SQL> 
21:57:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:57:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:57:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:57:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:57:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:57:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:57:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:57:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:57:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:57:17 SQL> 
21:57:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:57:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:57:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:57:17 SQL> 
21:57:17 SQL> --------------------------------
21:57:17 SQL> -- PREPARE BUILD (TRAINING) DATA
21:57:17 SQL> --
21:57:17 SQL> 
21:57:17 SQL> -- 1. Missing Value treatment for all Predictors and
21:57:17 SQL> -- 2. Outlier Treatment and
21:57:17 SQL> -- 3. Normalization are performed below.
21:57:17 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:57:17 SQL> --    normalized here.
21:57:17 SQL> 
21:57:17 SQL> BEGIN
21:57:17   2  	-- Perform missing value treatment for all predictors
21:57:17   3  	-- create miss tables
21:57:17   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:57:17   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:57:17   6  
21:57:17   7  	-- populate miss tables
21:57:17   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:57:17   9  	  miss_table_name => 'svmc_miss_num',
21:57:17  10  	  data_table_name => '&bldtable',
21:57:17  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:57:17  12  
21:57:17  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:57:17  14  	  miss_table_name => 'svmc_miss_cat',
21:57:17  15  	  data_table_name => '&bldtable',
21:57:17  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:57:17  17  
21:57:17  18  	-- xform input data to replace missing values
21:57:17  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:57:17  20  	  miss_table_name => 'svmc_miss_num',
21:57:17  21  	  data_table_name => '&bldtable',
21:57:17  22  	  xform_view_name => 'xformed_build_miss_num');
21:57:17  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:57:17  24  	  miss_table_name => 'svmc_miss_cat',
21:57:17  25  	  data_table_name => '&bldtable',
21:57:17  26  	  xform_view_name => 'xformed_build_miss_cat');
21:57:17  27  
21:57:17  28  	-- Perform outlier treatment.
21:57:17  29  	-- create clip table
21:57:17  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:57:17  31  
21:57:17  32  	-- populate clip table
21:57:17  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:57:17  34  	  clip_table_name => 'svmc_clip',
21:57:17  35  	  data_table_name => '&bldtable',
21:57:17  36  	  tail_frac	  => 0.025,
21:57:17  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:57:17  38  
21:57:17  39  	-- xform input data to winsorized data
21:57:17  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:57:17  41  	  clip_table_name => 'svmc_clip',
21:57:17  42  	  data_table_name => '&bldtable',
21:57:17  43  	  xform_view_name => 'svmc_winsor');
21:57:17  44  
21:57:17  45  	-- create normalization table
21:57:17  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:57:17  47  
21:57:17  48  	-- populate normalization table based on winsorized data
21:57:17  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:57:17  50  	  norm_table_name => 'svmc_norm',
21:57:17  51  	  data_table_name => 'svmc_winsor',
21:57:17  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:57:17  53  
21:57:17  54  	-- normalize the original data
21:57:17  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:57:17  56  	  norm_table_name => 'svmc_norm',
21:57:17  57  	  data_table_name => '&bldtable',
21:57:17  58  	  xform_view_name => 'svmc_build_prep');
21:57:17  59  END;
21:57:17  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.89
21:57:35 SQL> 
21:57:35 SQL> ---------------------
21:57:35 SQL> -- CREATE A NEW MODEL
21:57:35 SQL> --
21:57:35 SQL> -- Cleanup old model with the same name for repeat runs
21:57:35 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:57:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:57:35   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.29
21:57:36 SQL> 
21:57:36 SQL> -- Build a new SVM Model
21:57:36 SQL> BEGIN
21:57:36   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:57:36   3  	  model_name	      => '&model_name',
21:57:36   4  	  mining_function     => dbms_data_mining.classification,
21:57:36   5  	  data_table_name     => 'svmc_build_prep',
21:57:36   6  	  case_id_column_name => '&case_id',
21:57:36   7  	  target_column_name  => '&target',
21:57:36   8  	  settings_table_name => 'svmc_settings');
21:57:36   9  END;
21:57:36  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.66
21:58:01 SQL> 
21:58:01 SQL> -----------------------------------------------------------------------
21:58:01 SQL> --			       APPLY/score THE MODEL
21:58:01 SQL> -----------------------------------------------------------------------
21:58:01 SQL> 
21:58:01 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:58:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:58:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:58:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:58:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:58:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:58:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:58:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:58:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:58:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:58:02 SQL> -----------------------
21:58:02 SQL> -- PREPARE SCORING DATA
21:58:02 SQL> --
21:58:02 SQL> -- If the data for model creation has been prepared, then the data
21:58:02 SQL> -- to be scored using the model must be prepared in the same manner
21:58:02 SQL> -- in order to obtain meaningful results.
21:58:02 SQL> --
21:58:02 SQL> -- 1. Missing Value treatment for all Predictors and
21:58:02 SQL> -- 2. Normalization
21:58:02 SQL> -- No outlier treatment will be performed during test and apply. The
21:58:02 SQL> -- normalization step is sufficient, since the normalization parameters
21:58:02 SQL> -- already capture the effects of outlier treatment done with build data.
21:58:02 SQL> --
21:58:02 SQL> BEGIN
21:58:02   2  	-- Xform Test data to replace missing values
21:58:02   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:58:02   4  	  miss_table_name => 'svmc_miss_num',
21:58:02   5  	  data_table_name => '&scoretable',
21:58:02   6  	  xform_view_name => 'xformed_apply_miss_num');
21:58:02   7  
21:58:02   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:58:02   9  	  miss_table_name => 'svmc_miss_cat',
21:58:02  10  	  data_table_name => '&scoretable',
21:58:02  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:58:02  12  
21:58:02  13  	-- Normalize the data to be scored
21:58:02  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:58:02  15  	  norm_table_name => 'svmc_norm',
21:58:02  16  	  data_table_name => '&scoretable',
21:58:02  17  	  xform_view_name => 'svmc_apply_prep');
21:58:02  18  END;
21:58:02  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.14
21:58:03 SQL> 
21:58:03 SQL> -- Use same model_name used in score_gattn.sql
21:58:03 SQL> DEFINE model_name = 'forex14'
21:58:03 SQL> 
21:58:03 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:58:03 SQL> 
21:58:03 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:58:03   2  SELECT
21:58:03   3  prdate
21:58:03   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:58:03   5  ,sysdate
21:58:03   6  ,SUBSTR(prdate,1,3)pair
21:58:03   7  ,SUBSTR(prdate,4,19)ydate
21:58:03   8  FROM svmc_apply_prep
21:58:03   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:58:03 SQL> @chf_score1day_gattn.sql	2010-12-17 07:35:00
21:58:03 SQL> --
21:58:03 SQL> -- chf_score1day_gattn.sql
21:58:03 SQL> --
21:58:03 SQL> 
21:58:03 SQL> CREATE OR REPLACE VIEW sme AS
21:58:03   2  SELECT
21:58:03   3  'chf'||m.ydate prdate
21:58:03   4  ,NULL gattn
21:58:03   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:58:03   6  ,eur_g00
21:58:03   7  ,eur_g01
21:58:03   8  ,eur_g02
21:58:03   9  ,eur_g03
21:58:03  10  ,eur_g04
21:58:03  11  ,eur_g05
21:58:03  12  ,eur_g06
21:58:03  13  ,eur_g07
21:58:03  14  ,eur_g08
21:58:03  15  ,eur_g09
21:58:03  16  ,eur_g10
21:58:03  17  ,eur_g11
21:58:03  18  ,eur_g12
21:58:03  19  ,eur_g13
21:58:03  20  ,eur_g14
21:58:03  21  ,eur_g15
21:58:03  22  ,eur_g16
21:58:03  23  ,eur_g17
21:58:03  24  ,eur_g18
21:58:03  25  ,eur_g19
21:58:03  26  ,eur_g20
21:58:03  27  ,eur_g21
21:58:03  28  ,eur_g22
21:58:03  29  ,eur_g23
21:58:03  30  ,eur_g24
21:58:03  31  ,eur_g25
21:58:03  32  ,eur_g26
21:58:03  33  ,eur_g27
21:58:03  34  ,eur_g28
21:58:03  35  ,eur_g29
21:58:03  36  ,eur_g30
21:58:03  37  ,eur_g31
21:58:03  38  ,eur_g32
21:58:03  39  ,eur_g33
21:58:03  40  ,eur_g34
21:58:03  41  ,eur_g35
21:58:03  42  ,eur_g36
21:58:03  43  ,eur_g37
21:58:03  44  ,eur_g38
21:58:03  45  ,eur_g39
21:58:03  46  ,eur_g40
21:58:03  47  ,aud_g00
21:58:03  48  ,aud_g01
21:58:03  49  ,aud_g02
21:58:03  50  ,aud_g03
21:58:03  51  ,aud_g04
21:58:03  52  ,aud_g05
21:58:03  53  ,aud_g06
21:58:03  54  ,aud_g07
21:58:03  55  ,aud_g08
21:58:03  56  ,aud_g09
21:58:03  57  ,aud_g10
21:58:03  58  ,aud_g11
21:58:03  59  ,aud_g12
21:58:03  60  ,aud_g13
21:58:03  61  ,aud_g14
21:58:03  62  ,aud_g15
21:58:03  63  ,aud_g16
21:58:03  64  ,aud_g17
21:58:03  65  ,aud_g18
21:58:03  66  ,aud_g19
21:58:03  67  ,aud_g20
21:58:03  68  ,aud_g21
21:58:03  69  ,aud_g22
21:58:03  70  ,aud_g23
21:58:03  71  ,aud_g24
21:58:03  72  ,aud_g25
21:58:03  73  ,aud_g26
21:58:03  74  ,aud_g27
21:58:03  75  ,aud_g28
21:58:03  76  ,aud_g29
21:58:03  77  ,aud_g30
21:58:03  78  ,aud_g31
21:58:03  79  ,aud_g32
21:58:03  80  ,aud_g33
21:58:03  81  ,aud_g34
21:58:03  82  ,aud_g35
21:58:03  83  ,aud_g36
21:58:03  84  ,aud_g37
21:58:03  85  ,aud_g38
21:58:03  86  ,aud_g39
21:58:03  87  ,aud_g40
21:58:03  88  ,gbp_g00
21:58:03  89  ,gbp_g01
21:58:03  90  ,gbp_g02
21:58:03  91  ,gbp_g03
21:58:03  92  ,gbp_g04
21:58:03  93  ,gbp_g05
21:58:03  94  ,gbp_g06
21:58:03  95  ,gbp_g07
21:58:03  96  ,gbp_g08
21:58:03  97  ,gbp_g09
21:58:03  98  ,gbp_g10
21:58:03  99  ,gbp_g11
21:58:03 100  ,gbp_g12
21:58:03 101  ,gbp_g13
21:58:03 102  ,gbp_g14
21:58:03 103  ,gbp_g15
21:58:03 104  ,gbp_g16
21:58:03 105  ,gbp_g17
21:58:03 106  ,gbp_g18
21:58:03 107  ,gbp_g19
21:58:03 108  ,gbp_g20
21:58:03 109  ,gbp_g21
21:58:03 110  ,gbp_g22
21:58:03 111  ,gbp_g23
21:58:03 112  ,gbp_g24
21:58:03 113  ,gbp_g25
21:58:03 114  ,gbp_g26
21:58:03 115  ,gbp_g27
21:58:03 116  ,gbp_g28
21:58:03 117  ,gbp_g29
21:58:03 118  ,gbp_g30
21:58:03 119  ,gbp_g31
21:58:03 120  ,gbp_g32
21:58:03 121  ,gbp_g33
21:58:03 122  ,gbp_g34
21:58:03 123  ,gbp_g35
21:58:03 124  ,gbp_g36
21:58:03 125  ,gbp_g37
21:58:03 126  ,gbp_g38
21:58:03 127  ,gbp_g39
21:58:03 128  ,gbp_g40
21:58:03 129  ,jpy_g00
21:58:03 130  ,jpy_g01
21:58:03 131  ,jpy_g02
21:58:03 132  ,jpy_g03
21:58:03 133  ,jpy_g04
21:58:03 134  ,jpy_g05
21:58:03 135  ,jpy_g06
21:58:03 136  ,jpy_g07
21:58:03 137  ,jpy_g08
21:58:03 138  ,jpy_g09
21:58:03 139  ,jpy_g10
21:58:03 140  ,jpy_g11
21:58:03 141  ,jpy_g12
21:58:03 142  ,jpy_g13
21:58:03 143  ,jpy_g14
21:58:03 144  ,jpy_g15
21:58:03 145  ,jpy_g16
21:58:03 146  ,jpy_g17
21:58:03 147  ,jpy_g18
21:58:03 148  ,jpy_g19
21:58:03 149  ,jpy_g20
21:58:03 150  ,jpy_g21
21:58:03 151  ,jpy_g22
21:58:03 152  ,jpy_g23
21:58:03 153  ,jpy_g24
21:58:03 154  ,jpy_g25
21:58:03 155  ,jpy_g26
21:58:03 156  ,jpy_g27
21:58:03 157  ,jpy_g28
21:58:03 158  ,jpy_g29
21:58:03 159  ,jpy_g30
21:58:03 160  ,jpy_g31
21:58:03 161  ,jpy_g32
21:58:03 162  ,jpy_g33
21:58:03 163  ,jpy_g34
21:58:03 164  ,jpy_g35
21:58:03 165  ,jpy_g36
21:58:03 166  ,jpy_g37
21:58:03 167  ,jpy_g38
21:58:03 168  ,jpy_g39
21:58:03 169  ,jpy_g40
21:58:03 170  ,cad_g00
21:58:03 171  ,cad_g01
21:58:03 172  ,cad_g02
21:58:03 173  ,cad_g03
21:58:03 174  ,cad_g04
21:58:03 175  ,cad_g05
21:58:03 176  ,cad_g06
21:58:03 177  ,cad_g07
21:58:03 178  ,cad_g08
21:58:03 179  ,cad_g09
21:58:03 180  ,cad_g10
21:58:03 181  ,cad_g11
21:58:03 182  ,cad_g12
21:58:03 183  ,cad_g13
21:58:03 184  ,cad_g14
21:58:03 185  ,cad_g15
21:58:03 186  ,cad_g16
21:58:03 187  ,cad_g17
21:58:03 188  ,cad_g18
21:58:03 189  ,cad_g19
21:58:03 190  ,cad_g20
21:58:03 191  ,cad_g21
21:58:03 192  ,cad_g22
21:58:03 193  ,cad_g23
21:58:03 194  ,cad_g24
21:58:03 195  ,cad_g25
21:58:03 196  ,cad_g26
21:58:03 197  ,cad_g27
21:58:03 198  ,cad_g28
21:58:03 199  ,cad_g29
21:58:03 200  ,cad_g30
21:58:03 201  ,cad_g31
21:58:03 202  ,cad_g32
21:58:03 203  ,cad_g33
21:58:03 204  ,cad_g34
21:58:03 205  ,cad_g35
21:58:03 206  ,cad_g36
21:58:03 207  ,cad_g37
21:58:03 208  ,cad_g38
21:58:03 209  ,cad_g39
21:58:03 210  ,cad_g40
21:58:03 211  ,chf_g00
21:58:03 212  ,chf_g01
21:58:03 213  ,chf_g02
21:58:03 214  ,chf_g03
21:58:03 215  ,chf_g04
21:58:03 216  ,chf_g05
21:58:03 217  ,chf_g06
21:58:03 218  ,chf_g07
21:58:03 219  ,chf_g08
21:58:03 220  ,chf_g09
21:58:03 221  ,chf_g10
21:58:03 222  ,chf_g11
21:58:03 223  ,chf_g12
21:58:03 224  ,chf_g13
21:58:03 225  ,chf_g14
21:58:03 226  ,chf_g15
21:58:03 227  ,chf_g16
21:58:03 228  ,chf_g17
21:58:03 229  ,chf_g18
21:58:03 230  ,chf_g19
21:58:03 231  ,chf_g20
21:58:03 232  ,chf_g21
21:58:03 233  ,chf_g22
21:58:03 234  ,chf_g23
21:58:03 235  ,chf_g24
21:58:03 236  ,chf_g25
21:58:03 237  ,chf_g26
21:58:03 238  ,chf_g27
21:58:03 239  ,chf_g28
21:58:03 240  ,chf_g29
21:58:03 241  ,chf_g30
21:58:03 242  ,chf_g31
21:58:03 243  ,chf_g32
21:58:03 244  ,chf_g33
21:58:03 245  ,chf_g34
21:58:03 246  ,chf_g35
21:58:03 247  ,chf_g36
21:58:03 248  ,chf_g37
21:58:03 249  ,chf_g38
21:58:03 250  ,chf_g39
21:58:03 251  ,chf_g40
21:58:03 252  FROM chf_ms14 m
21:58:03 253  WHERE m.ydate = '&1'||' '||'&2'
21:58:03 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'07:35:00'

View created.

Elapsed: 00:00:00.12
21:58:03 SQL> 
21:58:03 SQL> -- rpt
21:58:03 SQL> -- We should see just 1 row:
21:58:03 SQL> 
21:58:03 SQL> SELECT COUNT(prdate) FROM sme
21:58:03   2  
21:58:03 SQL> -- Build the model:
21:58:03 SQL> CREATE OR REPLACE VIEW bme AS
21:58:03   2  SELECT
21:58:03   3  'chf'||m.ydate prdate
21:58:03   4  ,gattn
21:58:03   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:58:03   6  ,eur_g00
21:58:03   7  ,eur_g01
21:58:03   8  ,eur_g02
21:58:03   9  ,eur_g03
21:58:03  10  ,eur_g04
21:58:03  11  ,eur_g05
21:58:03  12  ,eur_g06
21:58:03  13  ,eur_g07
21:58:03  14  ,eur_g08
21:58:03  15  ,eur_g09
21:58:03  16  ,eur_g10
21:58:03  17  ,eur_g11
21:58:03  18  ,eur_g12
21:58:03  19  ,eur_g13
21:58:03  20  ,eur_g14
21:58:03  21  ,eur_g15
21:58:03  22  ,eur_g16
21:58:03  23  ,eur_g17
21:58:03  24  ,eur_g18
21:58:03  25  ,eur_g19
21:58:03  26  ,eur_g20
21:58:03  27  ,eur_g21
21:58:03  28  ,eur_g22
21:58:03  29  ,eur_g23
21:58:03  30  ,eur_g24
21:58:03  31  ,eur_g25
21:58:03  32  ,eur_g26
21:58:03  33  ,eur_g27
21:58:03  34  ,eur_g28
21:58:03  35  ,eur_g29
21:58:03  36  ,eur_g30
21:58:03  37  ,eur_g31
21:58:03  38  ,eur_g32
21:58:03  39  ,eur_g33
21:58:03  40  ,eur_g34
21:58:03  41  ,eur_g35
21:58:03  42  ,eur_g36
21:58:03  43  ,eur_g37
21:58:03  44  ,eur_g38
21:58:03  45  ,eur_g39
21:58:03  46  ,eur_g40
21:58:03  47  ,aud_g00
21:58:03  48  ,aud_g01
21:58:03  49  ,aud_g02
21:58:03  50  ,aud_g03
21:58:03  51  ,aud_g04
21:58:03  52  ,aud_g05
21:58:03  53  ,aud_g06
21:58:03  54  ,aud_g07
21:58:03  55  ,aud_g08
21:58:03  56  ,aud_g09
21:58:03  57  ,aud_g10
21:58:03  58  ,aud_g11
21:58:03  59  ,aud_g12
21:58:03  60  ,aud_g13
21:58:03  61  ,aud_g14
21:58:03  62  ,aud_g15
21:58:03  63  ,aud_g16
21:58:03  64  ,aud_g17
21:58:03  65  ,aud_g18
21:58:03  66  ,aud_g19
21:58:03  67  ,aud_g20
21:58:03  68  ,aud_g21
21:58:03  69  ,aud_g22
21:58:03  70  ,aud_g23
21:58:03  71  ,aud_g24
21:58:03  72  ,aud_g25
21:58:03  73  ,aud_g26
21:58:03  74  ,aud_g27
21:58:03  75  ,aud_g28
21:58:03  76  ,aud_g29
21:58:03  77  ,aud_g30
21:58:03  78  ,aud_g31
21:58:03  79  ,aud_g32
21:58:03  80  ,aud_g33
21:58:03  81  ,aud_g34
21:58:03  82  ,aud_g35
21:58:03  83  ,aud_g36
21:58:03  84  ,aud_g37
21:58:03  85  ,aud_g38
21:58:03  86  ,aud_g39
21:58:03  87  ,aud_g40
21:58:03  88  ,gbp_g00
21:58:03  89  ,gbp_g01
21:58:03  90  ,gbp_g02
21:58:03  91  ,gbp_g03
21:58:03  92  ,gbp_g04
21:58:03  93  ,gbp_g05
21:58:03  94  ,gbp_g06
21:58:03  95  ,gbp_g07
21:58:03  96  ,gbp_g08
21:58:03  97  ,gbp_g09
21:58:03  98  ,gbp_g10
21:58:03  99  ,gbp_g11
21:58:03 100  ,gbp_g12
21:58:03 101  ,gbp_g13
21:58:03 102  ,gbp_g14
21:58:03 103  ,gbp_g15
21:58:03 104  ,gbp_g16
21:58:03 105  ,gbp_g17
21:58:03 106  ,gbp_g18
21:58:03 107  ,gbp_g19
21:58:03 108  ,gbp_g20
21:58:03 109  ,gbp_g21
21:58:03 110  ,gbp_g22
21:58:03 111  ,gbp_g23
21:58:03 112  ,gbp_g24
21:58:03 113  ,gbp_g25
21:58:03 114  ,gbp_g26
21:58:03 115  ,gbp_g27
21:58:03 116  ,gbp_g28
21:58:03 117  ,gbp_g29
21:58:03 118  ,gbp_g30
21:58:03 119  ,gbp_g31
21:58:03 120  ,gbp_g32
21:58:03 121  ,gbp_g33
21:58:03 122  ,gbp_g34
21:58:03 123  ,gbp_g35
21:58:03 124  ,gbp_g36
21:58:03 125  ,gbp_g37
21:58:03 126  ,gbp_g38
21:58:03 127  ,gbp_g39
21:58:03 128  ,gbp_g40
21:58:03 129  ,jpy_g00
21:58:03 130  ,jpy_g01
21:58:03 131  ,jpy_g02
21:58:03 132  ,jpy_g03
21:58:03 133  ,jpy_g04
21:58:03 134  ,jpy_g05
21:58:03 135  ,jpy_g06
21:58:03 136  ,jpy_g07
21:58:03 137  ,jpy_g08
21:58:03 138  ,jpy_g09
21:58:03 139  ,jpy_g10
21:58:03 140  ,jpy_g11
21:58:03 141  ,jpy_g12
21:58:03 142  ,jpy_g13
21:58:03 143  ,jpy_g14
21:58:03 144  ,jpy_g15
21:58:03 145  ,jpy_g16
21:58:03 146  ,jpy_g17
21:58:03 147  ,jpy_g18
21:58:03 148  ,jpy_g19
21:58:03 149  ,jpy_g20
21:58:03 150  ,jpy_g21
21:58:03 151  ,jpy_g22
21:58:03 152  ,jpy_g23
21:58:03 153  ,jpy_g24
21:58:03 154  ,jpy_g25
21:58:03 155  ,jpy_g26
21:58:03 156  ,jpy_g27
21:58:03 157  ,jpy_g28
21:58:03 158  ,jpy_g29
21:58:03 159  ,jpy_g30
21:58:03 160  ,jpy_g31
21:58:03 161  ,jpy_g32
21:58:03 162  ,jpy_g33
21:58:03 163  ,jpy_g34
21:58:03 164  ,jpy_g35
21:58:03 165  ,jpy_g36
21:58:03 166  ,jpy_g37
21:58:03 167  ,jpy_g38
21:58:03 168  ,jpy_g39
21:58:03 169  ,jpy_g40
21:58:03 170  ,cad_g00
21:58:03 171  ,cad_g01
21:58:03 172  ,cad_g02
21:58:03 173  ,cad_g03
21:58:03 174  ,cad_g04
21:58:03 175  ,cad_g05
21:58:03 176  ,cad_g06
21:58:03 177  ,cad_g07
21:58:03 178  ,cad_g08
21:58:03 179  ,cad_g09
21:58:03 180  ,cad_g10
21:58:03 181  ,cad_g11
21:58:03 182  ,cad_g12
21:58:03 183  ,cad_g13
21:58:03 184  ,cad_g14
21:58:03 185  ,cad_g15
21:58:03 186  ,cad_g16
21:58:03 187  ,cad_g17
21:58:03 188  ,cad_g18
21:58:03 189  ,cad_g19
21:58:03 190  ,cad_g20
21:58:03 191  ,cad_g21
21:58:03 192  ,cad_g22
21:58:03 193  ,cad_g23
21:58:03 194  ,cad_g24
21:58:03 195  ,cad_g25
21:58:03 196  ,cad_g26
21:58:03 197  ,cad_g27
21:58:03 198  ,cad_g28
21:58:03 199  ,cad_g29
21:58:03 200  ,cad_g30
21:58:03 201  ,cad_g31
21:58:03 202  ,cad_g32
21:58:03 203  ,cad_g33
21:58:03 204  ,cad_g34
21:58:03 205  ,cad_g35
21:58:03 206  ,cad_g36
21:58:03 207  ,cad_g37
21:58:03 208  ,cad_g38
21:58:03 209  ,cad_g39
21:58:03 210  ,cad_g40
21:58:03 211  ,chf_g00
21:58:03 212  ,chf_g01
21:58:03 213  ,chf_g02
21:58:03 214  ,chf_g03
21:58:03 215  ,chf_g04
21:58:03 216  ,chf_g05
21:58:03 217  ,chf_g06
21:58:03 218  ,chf_g07
21:58:03 219  ,chf_g08
21:58:03 220  ,chf_g09
21:58:03 221  ,chf_g10
21:58:03 222  ,chf_g11
21:58:03 223  ,chf_g12
21:58:03 224  ,chf_g13
21:58:03 225  ,chf_g14
21:58:03 226  ,chf_g15
21:58:03 227  ,chf_g16
21:58:03 228  ,chf_g17
21:58:03 229  ,chf_g18
21:58:03 230  ,chf_g19
21:58:03 231  ,chf_g20
21:58:03 232  ,chf_g21
21:58:03 233  ,chf_g22
21:58:03 234  ,chf_g23
21:58:03 235  ,chf_g24
21:58:03 236  ,chf_g25
21:58:03 237  ,chf_g26
21:58:03 238  ,chf_g27
21:58:03 239  ,chf_g28
21:58:03 240  ,chf_g29
21:58:03 241  ,chf_g30
21:58:03 242  ,chf_g31
21:58:03 243  ,chf_g32
21:58:03 244  ,chf_g33
21:58:03 245  ,chf_g34
21:58:03 246  ,chf_g35
21:58:03 247  ,chf_g36
21:58:03 248  ,chf_g37
21:58:03 249  ,chf_g38
21:58:03 250  ,chf_g39
21:58:03 251  ,chf_g40
21:58:03 252  FROM chf_ms14 m
21:58:03 253  WHERE gattn IN('nup','up')
21:58:03 254  AND 1+m.ydate < '&1'||' '||'&2'
21:58:03 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'07:35:00'

View created.

Elapsed: 00:00:00.12
21:58:03 SQL> 
21:58:03 SQL> -- rpt
21:58:03 SQL> 
21:58:03 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:58:03   2  
21:58:03 SQL> SELECT MAX(prdate) FROM bme
21:58:03   2  
21:58:03 SQL> -- Now build model from bme and score sme
21:58:03 SQL> @score1gattn.sql
21:58:03 SQL> -- score1gattn.sql
21:58:03 SQL> 
21:58:03 SQL> -- Does the 1st SVM score
21:58:03 SQL> 
21:58:03 SQL> -- Fill up svmc_apply_prep
21:58:03 SQL> @score_gattn.sql
21:58:03 SQL> --
21:58:03 SQL> -- score_gattn.sql
21:58:03 SQL> --
21:58:03 SQL> 
21:58:03 SQL> -- usage: score_gattn.sql
21:58:03 SQL> 
21:58:03 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:58:03 SQL> 
21:58:03 SQL> DEFINE target	= 'gattn'
21:58:03 SQL> DEFINE model_name = 'forex14'
21:58:03 SQL> DEFINE bldtable	= 'bme'
21:58:03 SQL> DEFINE scoretable = 'sme'
21:58:03 SQL> DEFINE case_id	= 'prdate'
21:58:03 SQL> 
21:58:03 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:58:03 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:58:03 SQL> 
21:58:03 SQL> -- Builds an SVM model using pl/sql.
21:58:03 SQL> 
21:58:03 SQL> -----------------------------------------------------------------------
21:58:03 SQL> --			    BUILD THE MODEL
21:58:03 SQL> -----------------------------------------------------------------------
21:58:03 SQL> 
21:58:03 SQL> -- Cleanup old build data preparation objects for repeat runs
21:58:03 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
21:58:03 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:58:03 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:58:03 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:58:03 SQL> 
21:58:03 SQL> 
21:58:03 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:58:03 SQL> --
21:58:03 SQL> -- DROP	TABLE svmc_settings ;
21:58:03 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:58:03 SQL> -- DELETE svmc_settings;
21:58:03 SQL> 
21:58:03 SQL> -- The default classification algorithm is Naive Bayes. So override
21:58:03 SQL> -- this choice to SVM using a settings table.
21:58:03 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:58:03 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:58:03 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:58:03 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:58:03 SQL> -- models.
21:58:03 SQL> --
21:58:03 SQL> 
21:58:03 SQL> -- Do this once and then comment it out.
21:58:03 SQL> -- That makes script go faster.
21:58:03 SQL> -- BEGIN
21:58:03 SQL> -- -- Populate settings table
21:58:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:58:03 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:58:03 SQL> --
21:58:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:58:03 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:58:03 SQL> --
21:58:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:58:03 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:58:03 SQL> --   COMMIT;
21:58:03 SQL> -- END;
21:58:03 SQL> -- /
21:58:03 SQL> 
21:58:03 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:58:03 SQL> 
21:58:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:58:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:58:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:58:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:58:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:58:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:58:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:58:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:58:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:58:03 SQL> 
21:58:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:58:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:58:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:58:04 SQL> 
21:58:04 SQL> --------------------------------
21:58:04 SQL> -- PREPARE BUILD (TRAINING) DATA
21:58:04 SQL> --
21:58:04 SQL> 
21:58:04 SQL> -- 1. Missing Value treatment for all Predictors and
21:58:04 SQL> -- 2. Outlier Treatment and
21:58:04 SQL> -- 3. Normalization are performed below.
21:58:04 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:58:04 SQL> --    normalized here.
21:58:04 SQL> 
21:58:04 SQL> BEGIN
21:58:04   2  	-- Perform missing value treatment for all predictors
21:58:04   3  	-- create miss tables
21:58:04   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:58:04   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:58:04   6  
21:58:04   7  	-- populate miss tables
21:58:04   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:58:04   9  	  miss_table_name => 'svmc_miss_num',
21:58:04  10  	  data_table_name => '&bldtable',
21:58:04  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:58:04  12  
21:58:04  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:58:04  14  	  miss_table_name => 'svmc_miss_cat',
21:58:04  15  	  data_table_name => '&bldtable',
21:58:04  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:58:04  17  
21:58:04  18  	-- xform input data to replace missing values
21:58:04  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:58:04  20  	  miss_table_name => 'svmc_miss_num',
21:58:04  21  	  data_table_name => '&bldtable',
21:58:04  22  	  xform_view_name => 'xformed_build_miss_num');
21:58:04  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:58:04  24  	  miss_table_name => 'svmc_miss_cat',
21:58:04  25  	  data_table_name => '&bldtable',
21:58:04  26  	  xform_view_name => 'xformed_build_miss_cat');
21:58:04  27  
21:58:04  28  	-- Perform outlier treatment.
21:58:04  29  	-- create clip table
21:58:04  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:58:04  31  
21:58:04  32  	-- populate clip table
21:58:04  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:58:04  34  	  clip_table_name => 'svmc_clip',
21:58:04  35  	  data_table_name => '&bldtable',
21:58:04  36  	  tail_frac	  => 0.025,
21:58:04  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:58:04  38  
21:58:04  39  	-- xform input data to winsorized data
21:58:04  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:58:04  41  	  clip_table_name => 'svmc_clip',
21:58:04  42  	  data_table_name => '&bldtable',
21:58:04  43  	  xform_view_name => 'svmc_winsor');
21:58:04  44  
21:58:04  45  	-- create normalization table
21:58:04  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:58:04  47  
21:58:04  48  	-- populate normalization table based on winsorized data
21:58:04  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:58:04  50  	  norm_table_name => 'svmc_norm',
21:58:04  51  	  data_table_name => 'svmc_winsor',
21:58:04  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:58:04  53  
21:58:04  54  	-- normalize the original data
21:58:04  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:58:04  56  	  norm_table_name => 'svmc_norm',
21:58:04  57  	  data_table_name => '&bldtable',
21:58:04  58  	  xform_view_name => 'svmc_build_prep');
21:58:04  59  END;
21:58:04  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.94
21:58:21 SQL> 
21:58:21 SQL> ---------------------
21:58:21 SQL> -- CREATE A NEW MODEL
21:58:21 SQL> --
21:58:21 SQL> -- Cleanup old model with the same name for repeat runs
21:58:21 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:58:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:58:21   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.96
21:58:22 SQL> 
21:58:22 SQL> -- Build a new SVM Model
21:58:22 SQL> BEGIN
21:58:22   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:58:22   3  	  model_name	      => '&model_name',
21:58:22   4  	  mining_function     => dbms_data_mining.classification,
21:58:22   5  	  data_table_name     => 'svmc_build_prep',
21:58:22   6  	  case_id_column_name => '&case_id',
21:58:22   7  	  target_column_name  => '&target',
21:58:22   8  	  settings_table_name => 'svmc_settings');
21:58:22   9  END;
21:58:22  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.50
21:58:49 SQL> 
21:58:49 SQL> -----------------------------------------------------------------------
21:58:49 SQL> --			       APPLY/score THE MODEL
21:58:49 SQL> -----------------------------------------------------------------------
21:58:49 SQL> 
21:58:49 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:58:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:58:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:58:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:58:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:58:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:58:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:58:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:58:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:58:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:58:49 SQL> -----------------------
21:58:49 SQL> -- PREPARE SCORING DATA
21:58:49 SQL> --
21:58:49 SQL> -- If the data for model creation has been prepared, then the data
21:58:49 SQL> -- to be scored using the model must be prepared in the same manner
21:58:49 SQL> -- in order to obtain meaningful results.
21:58:49 SQL> --
21:58:49 SQL> -- 1. Missing Value treatment for all Predictors and
21:58:49 SQL> -- 2. Normalization
21:58:49 SQL> -- No outlier treatment will be performed during test and apply. The
21:58:49 SQL> -- normalization step is sufficient, since the normalization parameters
21:58:49 SQL> -- already capture the effects of outlier treatment done with build data.
21:58:49 SQL> --
21:58:49 SQL> BEGIN
21:58:49   2  	-- Xform Test data to replace missing values
21:58:49   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:58:49   4  	  miss_table_name => 'svmc_miss_num',
21:58:49   5  	  data_table_name => '&scoretable',
21:58:49   6  	  xform_view_name => 'xformed_apply_miss_num');
21:58:49   7  
21:58:49   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:58:49   9  	  miss_table_name => 'svmc_miss_cat',
21:58:49  10  	  data_table_name => '&scoretable',
21:58:49  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:58:49  12  
21:58:49  13  	-- Normalize the data to be scored
21:58:49  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:58:49  15  	  norm_table_name => 'svmc_norm',
21:58:49  16  	  data_table_name => '&scoretable',
21:58:49  17  	  xform_view_name => 'svmc_apply_prep');
21:58:49  18  END;
21:58:49  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
21:58:50 SQL> 
21:58:50 SQL> -- Use same model_name used in score_gattn.sql
21:58:50 SQL> DEFINE model_name = 'forex14'
21:58:50 SQL> 
21:58:50 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
21:58:50 SQL> 
21:58:50 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:58:50   2  SELECT
21:58:50   3  prdate
21:58:50   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:58:50   5  ,sysdate
21:58:50   6  ,SUBSTR(prdate,1,3)pair
21:58:50   7  ,SUBSTR(prdate,4,19)ydate
21:58:50   8  FROM svmc_apply_prep
21:58:50   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:58:50 SQL> @chf_score1day_gattn.sql	2010-12-17 07:30:00
21:58:50 SQL> --
21:58:50 SQL> -- chf_score1day_gattn.sql
21:58:50 SQL> --
21:58:50 SQL> 
21:58:50 SQL> CREATE OR REPLACE VIEW sme AS
21:58:50   2  SELECT
21:58:50   3  'chf'||m.ydate prdate
21:58:50   4  ,NULL gattn
21:58:50   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:58:50   6  ,eur_g00
21:58:50   7  ,eur_g01
21:58:50   8  ,eur_g02
21:58:50   9  ,eur_g03
21:58:50  10  ,eur_g04
21:58:50  11  ,eur_g05
21:58:50  12  ,eur_g06
21:58:50  13  ,eur_g07
21:58:50  14  ,eur_g08
21:58:50  15  ,eur_g09
21:58:50  16  ,eur_g10
21:58:50  17  ,eur_g11
21:58:50  18  ,eur_g12
21:58:50  19  ,eur_g13
21:58:50  20  ,eur_g14
21:58:50  21  ,eur_g15
21:58:50  22  ,eur_g16
21:58:50  23  ,eur_g17
21:58:50  24  ,eur_g18
21:58:50  25  ,eur_g19
21:58:50  26  ,eur_g20
21:58:50  27  ,eur_g21
21:58:50  28  ,eur_g22
21:58:50  29  ,eur_g23
21:58:50  30  ,eur_g24
21:58:50  31  ,eur_g25
21:58:50  32  ,eur_g26
21:58:50  33  ,eur_g27
21:58:50  34  ,eur_g28
21:58:50  35  ,eur_g29
21:58:50  36  ,eur_g30
21:58:50  37  ,eur_g31
21:58:50  38  ,eur_g32
21:58:50  39  ,eur_g33
21:58:50  40  ,eur_g34
21:58:50  41  ,eur_g35
21:58:50  42  ,eur_g36
21:58:50  43  ,eur_g37
21:58:50  44  ,eur_g38
21:58:50  45  ,eur_g39
21:58:50  46  ,eur_g40
21:58:50  47  ,aud_g00
21:58:50  48  ,aud_g01
21:58:50  49  ,aud_g02
21:58:50  50  ,aud_g03
21:58:50  51  ,aud_g04
21:58:50  52  ,aud_g05
21:58:50  53  ,aud_g06
21:58:50  54  ,aud_g07
21:58:50  55  ,aud_g08
21:58:50  56  ,aud_g09
21:58:50  57  ,aud_g10
21:58:50  58  ,aud_g11
21:58:50  59  ,aud_g12
21:58:50  60  ,aud_g13
21:58:50  61  ,aud_g14
21:58:50  62  ,aud_g15
21:58:50  63  ,aud_g16
21:58:50  64  ,aud_g17
21:58:50  65  ,aud_g18
21:58:50  66  ,aud_g19
21:58:50  67  ,aud_g20
21:58:50  68  ,aud_g21
21:58:50  69  ,aud_g22
21:58:50  70  ,aud_g23
21:58:50  71  ,aud_g24
21:58:50  72  ,aud_g25
21:58:50  73  ,aud_g26
21:58:50  74  ,aud_g27
21:58:50  75  ,aud_g28
21:58:50  76  ,aud_g29
21:58:50  77  ,aud_g30
21:58:50  78  ,aud_g31
21:58:50  79  ,aud_g32
21:58:50  80  ,aud_g33
21:58:50  81  ,aud_g34
21:58:50  82  ,aud_g35
21:58:50  83  ,aud_g36
21:58:50  84  ,aud_g37
21:58:50  85  ,aud_g38
21:58:50  86  ,aud_g39
21:58:50  87  ,aud_g40
21:58:50  88  ,gbp_g00
21:58:50  89  ,gbp_g01
21:58:50  90  ,gbp_g02
21:58:50  91  ,gbp_g03
21:58:50  92  ,gbp_g04
21:58:50  93  ,gbp_g05
21:58:50  94  ,gbp_g06
21:58:50  95  ,gbp_g07
21:58:50  96  ,gbp_g08
21:58:50  97  ,gbp_g09
21:58:50  98  ,gbp_g10
21:58:50  99  ,gbp_g11
21:58:50 100  ,gbp_g12
21:58:50 101  ,gbp_g13
21:58:50 102  ,gbp_g14
21:58:50 103  ,gbp_g15
21:58:50 104  ,gbp_g16
21:58:50 105  ,gbp_g17
21:58:50 106  ,gbp_g18
21:58:50 107  ,gbp_g19
21:58:50 108  ,gbp_g20
21:58:50 109  ,gbp_g21
21:58:50 110  ,gbp_g22
21:58:50 111  ,gbp_g23
21:58:50 112  ,gbp_g24
21:58:50 113  ,gbp_g25
21:58:50 114  ,gbp_g26
21:58:50 115  ,gbp_g27
21:58:50 116  ,gbp_g28
21:58:50 117  ,gbp_g29
21:58:50 118  ,gbp_g30
21:58:50 119  ,gbp_g31
21:58:50 120  ,gbp_g32
21:58:50 121  ,gbp_g33
21:58:50 122  ,gbp_g34
21:58:50 123  ,gbp_g35
21:58:50 124  ,gbp_g36
21:58:50 125  ,gbp_g37
21:58:50 126  ,gbp_g38
21:58:50 127  ,gbp_g39
21:58:50 128  ,gbp_g40
21:58:50 129  ,jpy_g00
21:58:50 130  ,jpy_g01
21:58:50 131  ,jpy_g02
21:58:50 132  ,jpy_g03
21:58:50 133  ,jpy_g04
21:58:50 134  ,jpy_g05
21:58:50 135  ,jpy_g06
21:58:50 136  ,jpy_g07
21:58:50 137  ,jpy_g08
21:58:50 138  ,jpy_g09
21:58:50 139  ,jpy_g10
21:58:50 140  ,jpy_g11
21:58:50 141  ,jpy_g12
21:58:50 142  ,jpy_g13
21:58:50 143  ,jpy_g14
21:58:50 144  ,jpy_g15
21:58:50 145  ,jpy_g16
21:58:50 146  ,jpy_g17
21:58:50 147  ,jpy_g18
21:58:50 148  ,jpy_g19
21:58:50 149  ,jpy_g20
21:58:50 150  ,jpy_g21
21:58:50 151  ,jpy_g22
21:58:50 152  ,jpy_g23
21:58:50 153  ,jpy_g24
21:58:50 154  ,jpy_g25
21:58:50 155  ,jpy_g26
21:58:50 156  ,jpy_g27
21:58:50 157  ,jpy_g28
21:58:50 158  ,jpy_g29
21:58:50 159  ,jpy_g30
21:58:50 160  ,jpy_g31
21:58:50 161  ,jpy_g32
21:58:50 162  ,jpy_g33
21:58:50 163  ,jpy_g34
21:58:50 164  ,jpy_g35
21:58:50 165  ,jpy_g36
21:58:50 166  ,jpy_g37
21:58:50 167  ,jpy_g38
21:58:50 168  ,jpy_g39
21:58:50 169  ,jpy_g40
21:58:50 170  ,cad_g00
21:58:50 171  ,cad_g01
21:58:50 172  ,cad_g02
21:58:50 173  ,cad_g03
21:58:50 174  ,cad_g04
21:58:50 175  ,cad_g05
21:58:50 176  ,cad_g06
21:58:50 177  ,cad_g07
21:58:50 178  ,cad_g08
21:58:50 179  ,cad_g09
21:58:50 180  ,cad_g10
21:58:50 181  ,cad_g11
21:58:50 182  ,cad_g12
21:58:50 183  ,cad_g13
21:58:50 184  ,cad_g14
21:58:50 185  ,cad_g15
21:58:50 186  ,cad_g16
21:58:50 187  ,cad_g17
21:58:50 188  ,cad_g18
21:58:50 189  ,cad_g19
21:58:50 190  ,cad_g20
21:58:50 191  ,cad_g21
21:58:50 192  ,cad_g22
21:58:50 193  ,cad_g23
21:58:50 194  ,cad_g24
21:58:50 195  ,cad_g25
21:58:50 196  ,cad_g26
21:58:50 197  ,cad_g27
21:58:50 198  ,cad_g28
21:58:50 199  ,cad_g29
21:58:50 200  ,cad_g30
21:58:50 201  ,cad_g31
21:58:50 202  ,cad_g32
21:58:50 203  ,cad_g33
21:58:50 204  ,cad_g34
21:58:50 205  ,cad_g35
21:58:50 206  ,cad_g36
21:58:50 207  ,cad_g37
21:58:50 208  ,cad_g38
21:58:50 209  ,cad_g39
21:58:50 210  ,cad_g40
21:58:50 211  ,chf_g00
21:58:50 212  ,chf_g01
21:58:50 213  ,chf_g02
21:58:50 214  ,chf_g03
21:58:50 215  ,chf_g04
21:58:50 216  ,chf_g05
21:58:50 217  ,chf_g06
21:58:50 218  ,chf_g07
21:58:50 219  ,chf_g08
21:58:50 220  ,chf_g09
21:58:50 221  ,chf_g10
21:58:50 222  ,chf_g11
21:58:50 223  ,chf_g12
21:58:50 224  ,chf_g13
21:58:50 225  ,chf_g14
21:58:50 226  ,chf_g15
21:58:50 227  ,chf_g16
21:58:50 228  ,chf_g17
21:58:50 229  ,chf_g18
21:58:50 230  ,chf_g19
21:58:50 231  ,chf_g20
21:58:50 232  ,chf_g21
21:58:50 233  ,chf_g22
21:58:50 234  ,chf_g23
21:58:50 235  ,chf_g24
21:58:50 236  ,chf_g25
21:58:50 237  ,chf_g26
21:58:50 238  ,chf_g27
21:58:50 239  ,chf_g28
21:58:50 240  ,chf_g29
21:58:50 241  ,chf_g30
21:58:50 242  ,chf_g31
21:58:50 243  ,chf_g32
21:58:50 244  ,chf_g33
21:58:50 245  ,chf_g34
21:58:50 246  ,chf_g35
21:58:50 247  ,chf_g36
21:58:50 248  ,chf_g37
21:58:50 249  ,chf_g38
21:58:50 250  ,chf_g39
21:58:50 251  ,chf_g40
21:58:50 252  FROM chf_ms14 m
21:58:50 253  WHERE m.ydate = '&1'||' '||'&2'
21:58:50 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'07:30:00'

View created.

Elapsed: 00:00:00.12
21:58:51 SQL> 
21:58:51 SQL> -- rpt
21:58:51 SQL> -- We should see just 1 row:
21:58:51 SQL> 
21:58:51 SQL> SELECT COUNT(prdate) FROM sme
21:58:51   2  
21:58:51 SQL> -- Build the model:
21:58:51 SQL> CREATE OR REPLACE VIEW bme AS
21:58:51   2  SELECT
21:58:51   3  'chf'||m.ydate prdate
21:58:51   4  ,gattn
21:58:51   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:58:51   6  ,eur_g00
21:58:51   7  ,eur_g01
21:58:51   8  ,eur_g02
21:58:51   9  ,eur_g03
21:58:51  10  ,eur_g04
21:58:51  11  ,eur_g05
21:58:51  12  ,eur_g06
21:58:51  13  ,eur_g07
21:58:51  14  ,eur_g08
21:58:51  15  ,eur_g09
21:58:51  16  ,eur_g10
21:58:51  17  ,eur_g11
21:58:51  18  ,eur_g12
21:58:51  19  ,eur_g13
21:58:51  20  ,eur_g14
21:58:51  21  ,eur_g15
21:58:51  22  ,eur_g16
21:58:51  23  ,eur_g17
21:58:51  24  ,eur_g18
21:58:51  25  ,eur_g19
21:58:51  26  ,eur_g20
21:58:51  27  ,eur_g21
21:58:51  28  ,eur_g22
21:58:51  29  ,eur_g23
21:58:51  30  ,eur_g24
21:58:51  31  ,eur_g25
21:58:51  32  ,eur_g26
21:58:51  33  ,eur_g27
21:58:51  34  ,eur_g28
21:58:51  35  ,eur_g29
21:58:51  36  ,eur_g30
21:58:51  37  ,eur_g31
21:58:51  38  ,eur_g32
21:58:51  39  ,eur_g33
21:58:51  40  ,eur_g34
21:58:51  41  ,eur_g35
21:58:51  42  ,eur_g36
21:58:51  43  ,eur_g37
21:58:51  44  ,eur_g38
21:58:51  45  ,eur_g39
21:58:51  46  ,eur_g40
21:58:51  47  ,aud_g00
21:58:51  48  ,aud_g01
21:58:51  49  ,aud_g02
21:58:51  50  ,aud_g03
21:58:51  51  ,aud_g04
21:58:51  52  ,aud_g05
21:58:51  53  ,aud_g06
21:58:51  54  ,aud_g07
21:58:51  55  ,aud_g08
21:58:51  56  ,aud_g09
21:58:51  57  ,aud_g10
21:58:51  58  ,aud_g11
21:58:51  59  ,aud_g12
21:58:51  60  ,aud_g13
21:58:51  61  ,aud_g14
21:58:51  62  ,aud_g15
21:58:51  63  ,aud_g16
21:58:51  64  ,aud_g17
21:58:51  65  ,aud_g18
21:58:51  66  ,aud_g19
21:58:51  67  ,aud_g20
21:58:51  68  ,aud_g21
21:58:51  69  ,aud_g22
21:58:51  70  ,aud_g23
21:58:51  71  ,aud_g24
21:58:51  72  ,aud_g25
21:58:51  73  ,aud_g26
21:58:51  74  ,aud_g27
21:58:51  75  ,aud_g28
21:58:51  76  ,aud_g29
21:58:51  77  ,aud_g30
21:58:51  78  ,aud_g31
21:58:51  79  ,aud_g32
21:58:51  80  ,aud_g33
21:58:51  81  ,aud_g34
21:58:51  82  ,aud_g35
21:58:51  83  ,aud_g36
21:58:51  84  ,aud_g37
21:58:51  85  ,aud_g38
21:58:51  86  ,aud_g39
21:58:51  87  ,aud_g40
21:58:51  88  ,gbp_g00
21:58:51  89  ,gbp_g01
21:58:51  90  ,gbp_g02
21:58:51  91  ,gbp_g03
21:58:51  92  ,gbp_g04
21:58:51  93  ,gbp_g05
21:58:51  94  ,gbp_g06
21:58:51  95  ,gbp_g07
21:58:51  96  ,gbp_g08
21:58:51  97  ,gbp_g09
21:58:51  98  ,gbp_g10
21:58:51  99  ,gbp_g11
21:58:51 100  ,gbp_g12
21:58:51 101  ,gbp_g13
21:58:51 102  ,gbp_g14
21:58:51 103  ,gbp_g15
21:58:51 104  ,gbp_g16
21:58:51 105  ,gbp_g17
21:58:51 106  ,gbp_g18
21:58:51 107  ,gbp_g19
21:58:51 108  ,gbp_g20
21:58:51 109  ,gbp_g21
21:58:51 110  ,gbp_g22
21:58:51 111  ,gbp_g23
21:58:51 112  ,gbp_g24
21:58:51 113  ,gbp_g25
21:58:51 114  ,gbp_g26
21:58:51 115  ,gbp_g27
21:58:51 116  ,gbp_g28
21:58:51 117  ,gbp_g29
21:58:51 118  ,gbp_g30
21:58:51 119  ,gbp_g31
21:58:51 120  ,gbp_g32
21:58:51 121  ,gbp_g33
21:58:51 122  ,gbp_g34
21:58:51 123  ,gbp_g35
21:58:51 124  ,gbp_g36
21:58:51 125  ,gbp_g37
21:58:51 126  ,gbp_g38
21:58:51 127  ,gbp_g39
21:58:51 128  ,gbp_g40
21:58:51 129  ,jpy_g00
21:58:51 130  ,jpy_g01
21:58:51 131  ,jpy_g02
21:58:51 132  ,jpy_g03
21:58:51 133  ,jpy_g04
21:58:51 134  ,jpy_g05
21:58:51 135  ,jpy_g06
21:58:51 136  ,jpy_g07
21:58:51 137  ,jpy_g08
21:58:51 138  ,jpy_g09
21:58:51 139  ,jpy_g10
21:58:51 140  ,jpy_g11
21:58:51 141  ,jpy_g12
21:58:51 142  ,jpy_g13
21:58:51 143  ,jpy_g14
21:58:51 144  ,jpy_g15
21:58:51 145  ,jpy_g16
21:58:51 146  ,jpy_g17
21:58:51 147  ,jpy_g18
21:58:51 148  ,jpy_g19
21:58:51 149  ,jpy_g20
21:58:51 150  ,jpy_g21
21:58:51 151  ,jpy_g22
21:58:51 152  ,jpy_g23
21:58:51 153  ,jpy_g24
21:58:51 154  ,jpy_g25
21:58:51 155  ,jpy_g26
21:58:51 156  ,jpy_g27
21:58:51 157  ,jpy_g28
21:58:51 158  ,jpy_g29
21:58:51 159  ,jpy_g30
21:58:51 160  ,jpy_g31
21:58:51 161  ,jpy_g32
21:58:51 162  ,jpy_g33
21:58:51 163  ,jpy_g34
21:58:51 164  ,jpy_g35
21:58:51 165  ,jpy_g36
21:58:51 166  ,jpy_g37
21:58:51 167  ,jpy_g38
21:58:51 168  ,jpy_g39
21:58:51 169  ,jpy_g40
21:58:51 170  ,cad_g00
21:58:51 171  ,cad_g01
21:58:51 172  ,cad_g02
21:58:51 173  ,cad_g03
21:58:51 174  ,cad_g04
21:58:51 175  ,cad_g05
21:58:51 176  ,cad_g06
21:58:51 177  ,cad_g07
21:58:51 178  ,cad_g08
21:58:51 179  ,cad_g09
21:58:51 180  ,cad_g10
21:58:51 181  ,cad_g11
21:58:51 182  ,cad_g12
21:58:51 183  ,cad_g13
21:58:51 184  ,cad_g14
21:58:51 185  ,cad_g15
21:58:51 186  ,cad_g16
21:58:51 187  ,cad_g17
21:58:51 188  ,cad_g18
21:58:51 189  ,cad_g19
21:58:51 190  ,cad_g20
21:58:51 191  ,cad_g21
21:58:51 192  ,cad_g22
21:58:51 193  ,cad_g23
21:58:51 194  ,cad_g24
21:58:51 195  ,cad_g25
21:58:51 196  ,cad_g26
21:58:51 197  ,cad_g27
21:58:51 198  ,cad_g28
21:58:51 199  ,cad_g29
21:58:51 200  ,cad_g30
21:58:51 201  ,cad_g31
21:58:51 202  ,cad_g32
21:58:51 203  ,cad_g33
21:58:51 204  ,cad_g34
21:58:51 205  ,cad_g35
21:58:51 206  ,cad_g36
21:58:51 207  ,cad_g37
21:58:51 208  ,cad_g38
21:58:51 209  ,cad_g39
21:58:51 210  ,cad_g40
21:58:51 211  ,chf_g00
21:58:51 212  ,chf_g01
21:58:51 213  ,chf_g02
21:58:51 214  ,chf_g03
21:58:51 215  ,chf_g04
21:58:51 216  ,chf_g05
21:58:51 217  ,chf_g06
21:58:51 218  ,chf_g07
21:58:51 219  ,chf_g08
21:58:51 220  ,chf_g09
21:58:51 221  ,chf_g10
21:58:51 222  ,chf_g11
21:58:51 223  ,chf_g12
21:58:51 224  ,chf_g13
21:58:51 225  ,chf_g14
21:58:51 226  ,chf_g15
21:58:51 227  ,chf_g16
21:58:51 228  ,chf_g17
21:58:51 229  ,chf_g18
21:58:51 230  ,chf_g19
21:58:51 231  ,chf_g20
21:58:51 232  ,chf_g21
21:58:51 233  ,chf_g22
21:58:51 234  ,chf_g23
21:58:51 235  ,chf_g24
21:58:51 236  ,chf_g25
21:58:51 237  ,chf_g26
21:58:51 238  ,chf_g27
21:58:51 239  ,chf_g28
21:58:51 240  ,chf_g29
21:58:51 241  ,chf_g30
21:58:51 242  ,chf_g31
21:58:51 243  ,chf_g32
21:58:51 244  ,chf_g33
21:58:51 245  ,chf_g34
21:58:51 246  ,chf_g35
21:58:51 247  ,chf_g36
21:58:51 248  ,chf_g37
21:58:51 249  ,chf_g38
21:58:51 250  ,chf_g39
21:58:51 251  ,chf_g40
21:58:51 252  FROM chf_ms14 m
21:58:51 253  WHERE gattn IN('nup','up')
21:58:51 254  AND 1+m.ydate < '&1'||' '||'&2'
21:58:51 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'07:30:00'

View created.

Elapsed: 00:00:00.11
21:58:51 SQL> 
21:58:51 SQL> -- rpt
21:58:51 SQL> 
21:58:51 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:58:51   2  
21:58:51 SQL> SELECT MAX(prdate) FROM bme
21:58:51   2  
21:58:51 SQL> -- Now build model from bme and score sme
21:58:51 SQL> @score1gattn.sql
21:58:51 SQL> -- score1gattn.sql
21:58:51 SQL> 
21:58:51 SQL> -- Does the 1st SVM score
21:58:51 SQL> 
21:58:51 SQL> -- Fill up svmc_apply_prep
21:58:51 SQL> @score_gattn.sql
21:58:51 SQL> --
21:58:51 SQL> -- score_gattn.sql
21:58:51 SQL> --
21:58:51 SQL> 
21:58:51 SQL> -- usage: score_gattn.sql
21:58:51 SQL> 
21:58:51 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:58:51 SQL> 
21:58:51 SQL> DEFINE target	= 'gattn'
21:58:51 SQL> DEFINE model_name = 'forex14'
21:58:51 SQL> DEFINE bldtable	= 'bme'
21:58:51 SQL> DEFINE scoretable = 'sme'
21:58:51 SQL> DEFINE case_id	= 'prdate'
21:58:51 SQL> 
21:58:51 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:58:51 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:58:51 SQL> 
21:58:51 SQL> -- Builds an SVM model using pl/sql.
21:58:51 SQL> 
21:58:51 SQL> -----------------------------------------------------------------------
21:58:51 SQL> --			    BUILD THE MODEL
21:58:51 SQL> -----------------------------------------------------------------------
21:58:51 SQL> 
21:58:51 SQL> -- Cleanup old build data preparation objects for repeat runs
21:58:51 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:58:51 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:58:51 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
21:58:51 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:58:51 SQL> 
21:58:51 SQL> 
21:58:51 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:58:51 SQL> --
21:58:51 SQL> -- DROP	TABLE svmc_settings ;
21:58:51 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:58:51 SQL> -- DELETE svmc_settings;
21:58:51 SQL> 
21:58:51 SQL> -- The default classification algorithm is Naive Bayes. So override
21:58:51 SQL> -- this choice to SVM using a settings table.
21:58:51 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:58:51 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:58:51 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:58:51 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:58:51 SQL> -- models.
21:58:51 SQL> --
21:58:51 SQL> 
21:58:51 SQL> -- Do this once and then comment it out.
21:58:51 SQL> -- That makes script go faster.
21:58:51 SQL> -- BEGIN
21:58:51 SQL> -- -- Populate settings table
21:58:51 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:58:51 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:58:51 SQL> --
21:58:51 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:58:51 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:58:51 SQL> --
21:58:51 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:58:51 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:58:51 SQL> --   COMMIT;
21:58:51 SQL> -- END;
21:58:51 SQL> -- /
21:58:51 SQL> 
21:58:51 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:58:51 SQL> 
21:58:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:58:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:58:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:58:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:58:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:58:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:58:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:58:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:58:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:58:51 SQL> 
21:58:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:58:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:58:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:58:51 SQL> 
21:58:51 SQL> --------------------------------
21:58:51 SQL> -- PREPARE BUILD (TRAINING) DATA
21:58:51 SQL> --
21:58:51 SQL> 
21:58:51 SQL> -- 1. Missing Value treatment for all Predictors and
21:58:51 SQL> -- 2. Outlier Treatment and
21:58:51 SQL> -- 3. Normalization are performed below.
21:58:51 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:58:51 SQL> --    normalized here.
21:58:51 SQL> 
21:58:51 SQL> BEGIN
21:58:51   2  	-- Perform missing value treatment for all predictors
21:58:51   3  	-- create miss tables
21:58:51   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:58:51   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:58:51   6  
21:58:51   7  	-- populate miss tables
21:58:51   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:58:51   9  	  miss_table_name => 'svmc_miss_num',
21:58:51  10  	  data_table_name => '&bldtable',
21:58:51  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:58:51  12  
21:58:51  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:58:51  14  	  miss_table_name => 'svmc_miss_cat',
21:58:51  15  	  data_table_name => '&bldtable',
21:58:51  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:58:51  17  
21:58:51  18  	-- xform input data to replace missing values
21:58:51  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:58:51  20  	  miss_table_name => 'svmc_miss_num',
21:58:51  21  	  data_table_name => '&bldtable',
21:58:51  22  	  xform_view_name => 'xformed_build_miss_num');
21:58:51  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:58:51  24  	  miss_table_name => 'svmc_miss_cat',
21:58:51  25  	  data_table_name => '&bldtable',
21:58:51  26  	  xform_view_name => 'xformed_build_miss_cat');
21:58:51  27  
21:58:51  28  	-- Perform outlier treatment.
21:58:51  29  	-- create clip table
21:58:51  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:58:51  31  
21:58:51  32  	-- populate clip table
21:58:51  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:58:51  34  	  clip_table_name => 'svmc_clip',
21:58:51  35  	  data_table_name => '&bldtable',
21:58:51  36  	  tail_frac	  => 0.025,
21:58:51  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:58:51  38  
21:58:51  39  	-- xform input data to winsorized data
21:58:51  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:58:51  41  	  clip_table_name => 'svmc_clip',
21:58:51  42  	  data_table_name => '&bldtable',
21:58:51  43  	  xform_view_name => 'svmc_winsor');
21:58:51  44  
21:58:51  45  	-- create normalization table
21:58:51  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:58:51  47  
21:58:51  48  	-- populate normalization table based on winsorized data
21:58:51  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:58:51  50  	  norm_table_name => 'svmc_norm',
21:58:51  51  	  data_table_name => 'svmc_winsor',
21:58:51  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:58:51  53  
21:58:51  54  	-- normalize the original data
21:58:51  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:58:51  56  	  norm_table_name => 'svmc_norm',
21:58:51  57  	  data_table_name => '&bldtable',
21:58:51  58  	  xform_view_name => 'svmc_build_prep');
21:58:51  59  END;
21:58:51  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.97
21:59:09 SQL> 
21:59:09 SQL> ---------------------
21:59:09 SQL> -- CREATE A NEW MODEL
21:59:09 SQL> --
21:59:09 SQL> -- Cleanup old model with the same name for repeat runs
21:59:09 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:59:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:59:09   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
21:59:10 SQL> 
21:59:10 SQL> -- Build a new SVM Model
21:59:10 SQL> BEGIN
21:59:10   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:59:10   3  	  model_name	      => '&model_name',
21:59:10   4  	  mining_function     => dbms_data_mining.classification,
21:59:10   5  	  data_table_name     => 'svmc_build_prep',
21:59:10   6  	  case_id_column_name => '&case_id',
21:59:10   7  	  target_column_name  => '&target',
21:59:10   8  	  settings_table_name => 'svmc_settings');
21:59:10   9  END;
21:59:10  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.81
21:59:37 SQL> 
21:59:37 SQL> -----------------------------------------------------------------------
21:59:37 SQL> --			       APPLY/score THE MODEL
21:59:37 SQL> -----------------------------------------------------------------------
21:59:37 SQL> 
21:59:37 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:59:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:59:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:59:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:59:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:59:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:59:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:59:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:59:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:59:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:59:37 SQL> -----------------------
21:59:37 SQL> -- PREPARE SCORING DATA
21:59:37 SQL> --
21:59:37 SQL> -- If the data for model creation has been prepared, then the data
21:59:37 SQL> -- to be scored using the model must be prepared in the same manner
21:59:37 SQL> -- in order to obtain meaningful results.
21:59:37 SQL> --
21:59:37 SQL> -- 1. Missing Value treatment for all Predictors and
21:59:37 SQL> -- 2. Normalization
21:59:37 SQL> -- No outlier treatment will be performed during test and apply. The
21:59:37 SQL> -- normalization step is sufficient, since the normalization parameters
21:59:37 SQL> -- already capture the effects of outlier treatment done with build data.
21:59:37 SQL> --
21:59:37 SQL> BEGIN
21:59:37   2  	-- Xform Test data to replace missing values
21:59:37   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:59:37   4  	  miss_table_name => 'svmc_miss_num',
21:59:37   5  	  data_table_name => '&scoretable',
21:59:37   6  	  xform_view_name => 'xformed_apply_miss_num');
21:59:37   7  
21:59:37   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:59:37   9  	  miss_table_name => 'svmc_miss_cat',
21:59:37  10  	  data_table_name => '&scoretable',
21:59:37  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:59:37  12  
21:59:37  13  	-- Normalize the data to be scored
21:59:37  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:59:37  15  	  norm_table_name => 'svmc_norm',
21:59:37  16  	  data_table_name => '&scoretable',
21:59:37  17  	  xform_view_name => 'svmc_apply_prep');
21:59:37  18  END;
21:59:37  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
21:59:38 SQL> 
21:59:38 SQL> -- Use same model_name used in score_gattn.sql
21:59:38 SQL> DEFINE model_name = 'forex14'
21:59:38 SQL> 
21:59:38 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:59:38 SQL> 
21:59:38 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
21:59:38   2  SELECT
21:59:38   3  prdate
21:59:38   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:59:38   5  ,sysdate
21:59:38   6  ,SUBSTR(prdate,1,3)pair
21:59:38   7  ,SUBSTR(prdate,4,19)ydate
21:59:38   8  FROM svmc_apply_prep
21:59:38   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:59:39 SQL> @chf_score1day_gattn.sql	2010-12-17 07:25:00
21:59:39 SQL> --
21:59:39 SQL> -- chf_score1day_gattn.sql
21:59:39 SQL> --
21:59:39 SQL> 
21:59:39 SQL> CREATE OR REPLACE VIEW sme AS
21:59:39   2  SELECT
21:59:39   3  'chf'||m.ydate prdate
21:59:39   4  ,NULL gattn
21:59:39   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:59:39   6  ,eur_g00
21:59:39   7  ,eur_g01
21:59:39   8  ,eur_g02
21:59:39   9  ,eur_g03
21:59:39  10  ,eur_g04
21:59:39  11  ,eur_g05
21:59:39  12  ,eur_g06
21:59:39  13  ,eur_g07
21:59:39  14  ,eur_g08
21:59:39  15  ,eur_g09
21:59:39  16  ,eur_g10
21:59:39  17  ,eur_g11
21:59:39  18  ,eur_g12
21:59:39  19  ,eur_g13
21:59:39  20  ,eur_g14
21:59:39  21  ,eur_g15
21:59:39  22  ,eur_g16
21:59:39  23  ,eur_g17
21:59:39  24  ,eur_g18
21:59:39  25  ,eur_g19
21:59:39  26  ,eur_g20
21:59:39  27  ,eur_g21
21:59:39  28  ,eur_g22
21:59:39  29  ,eur_g23
21:59:39  30  ,eur_g24
21:59:39  31  ,eur_g25
21:59:39  32  ,eur_g26
21:59:39  33  ,eur_g27
21:59:39  34  ,eur_g28
21:59:39  35  ,eur_g29
21:59:39  36  ,eur_g30
21:59:39  37  ,eur_g31
21:59:39  38  ,eur_g32
21:59:39  39  ,eur_g33
21:59:39  40  ,eur_g34
21:59:39  41  ,eur_g35
21:59:39  42  ,eur_g36
21:59:39  43  ,eur_g37
21:59:39  44  ,eur_g38
21:59:39  45  ,eur_g39
21:59:39  46  ,eur_g40
21:59:39  47  ,aud_g00
21:59:39  48  ,aud_g01
21:59:39  49  ,aud_g02
21:59:39  50  ,aud_g03
21:59:39  51  ,aud_g04
21:59:39  52  ,aud_g05
21:59:39  53  ,aud_g06
21:59:39  54  ,aud_g07
21:59:39  55  ,aud_g08
21:59:39  56  ,aud_g09
21:59:39  57  ,aud_g10
21:59:39  58  ,aud_g11
21:59:39  59  ,aud_g12
21:59:39  60  ,aud_g13
21:59:39  61  ,aud_g14
21:59:39  62  ,aud_g15
21:59:39  63  ,aud_g16
21:59:39  64  ,aud_g17
21:59:39  65  ,aud_g18
21:59:39  66  ,aud_g19
21:59:39  67  ,aud_g20
21:59:39  68  ,aud_g21
21:59:39  69  ,aud_g22
21:59:39  70  ,aud_g23
21:59:39  71  ,aud_g24
21:59:39  72  ,aud_g25
21:59:39  73  ,aud_g26
21:59:39  74  ,aud_g27
21:59:39  75  ,aud_g28
21:59:39  76  ,aud_g29
21:59:39  77  ,aud_g30
21:59:39  78  ,aud_g31
21:59:39  79  ,aud_g32
21:59:39  80  ,aud_g33
21:59:39  81  ,aud_g34
21:59:39  82  ,aud_g35
21:59:39  83  ,aud_g36
21:59:39  84  ,aud_g37
21:59:39  85  ,aud_g38
21:59:39  86  ,aud_g39
21:59:39  87  ,aud_g40
21:59:39  88  ,gbp_g00
21:59:39  89  ,gbp_g01
21:59:39  90  ,gbp_g02
21:59:39  91  ,gbp_g03
21:59:39  92  ,gbp_g04
21:59:39  93  ,gbp_g05
21:59:39  94  ,gbp_g06
21:59:39  95  ,gbp_g07
21:59:39  96  ,gbp_g08
21:59:39  97  ,gbp_g09
21:59:39  98  ,gbp_g10
21:59:39  99  ,gbp_g11
21:59:39 100  ,gbp_g12
21:59:39 101  ,gbp_g13
21:59:39 102  ,gbp_g14
21:59:39 103  ,gbp_g15
21:59:39 104  ,gbp_g16
21:59:39 105  ,gbp_g17
21:59:39 106  ,gbp_g18
21:59:39 107  ,gbp_g19
21:59:39 108  ,gbp_g20
21:59:39 109  ,gbp_g21
21:59:39 110  ,gbp_g22
21:59:39 111  ,gbp_g23
21:59:39 112  ,gbp_g24
21:59:39 113  ,gbp_g25
21:59:39 114  ,gbp_g26
21:59:39 115  ,gbp_g27
21:59:39 116  ,gbp_g28
21:59:39 117  ,gbp_g29
21:59:39 118  ,gbp_g30
21:59:39 119  ,gbp_g31
21:59:39 120  ,gbp_g32
21:59:39 121  ,gbp_g33
21:59:39 122  ,gbp_g34
21:59:39 123  ,gbp_g35
21:59:39 124  ,gbp_g36
21:59:39 125  ,gbp_g37
21:59:39 126  ,gbp_g38
21:59:39 127  ,gbp_g39
21:59:39 128  ,gbp_g40
21:59:39 129  ,jpy_g00
21:59:39 130  ,jpy_g01
21:59:39 131  ,jpy_g02
21:59:39 132  ,jpy_g03
21:59:39 133  ,jpy_g04
21:59:39 134  ,jpy_g05
21:59:39 135  ,jpy_g06
21:59:39 136  ,jpy_g07
21:59:39 137  ,jpy_g08
21:59:39 138  ,jpy_g09
21:59:39 139  ,jpy_g10
21:59:39 140  ,jpy_g11
21:59:39 141  ,jpy_g12
21:59:39 142  ,jpy_g13
21:59:39 143  ,jpy_g14
21:59:39 144  ,jpy_g15
21:59:39 145  ,jpy_g16
21:59:39 146  ,jpy_g17
21:59:39 147  ,jpy_g18
21:59:39 148  ,jpy_g19
21:59:39 149  ,jpy_g20
21:59:39 150  ,jpy_g21
21:59:39 151  ,jpy_g22
21:59:39 152  ,jpy_g23
21:59:39 153  ,jpy_g24
21:59:39 154  ,jpy_g25
21:59:39 155  ,jpy_g26
21:59:39 156  ,jpy_g27
21:59:39 157  ,jpy_g28
21:59:39 158  ,jpy_g29
21:59:39 159  ,jpy_g30
21:59:39 160  ,jpy_g31
21:59:39 161  ,jpy_g32
21:59:39 162  ,jpy_g33
21:59:39 163  ,jpy_g34
21:59:39 164  ,jpy_g35
21:59:39 165  ,jpy_g36
21:59:39 166  ,jpy_g37
21:59:39 167  ,jpy_g38
21:59:39 168  ,jpy_g39
21:59:39 169  ,jpy_g40
21:59:39 170  ,cad_g00
21:59:39 171  ,cad_g01
21:59:39 172  ,cad_g02
21:59:39 173  ,cad_g03
21:59:39 174  ,cad_g04
21:59:39 175  ,cad_g05
21:59:39 176  ,cad_g06
21:59:39 177  ,cad_g07
21:59:39 178  ,cad_g08
21:59:39 179  ,cad_g09
21:59:39 180  ,cad_g10
21:59:39 181  ,cad_g11
21:59:39 182  ,cad_g12
21:59:39 183  ,cad_g13
21:59:39 184  ,cad_g14
21:59:39 185  ,cad_g15
21:59:39 186  ,cad_g16
21:59:39 187  ,cad_g17
21:59:39 188  ,cad_g18
21:59:39 189  ,cad_g19
21:59:39 190  ,cad_g20
21:59:39 191  ,cad_g21
21:59:39 192  ,cad_g22
21:59:39 193  ,cad_g23
21:59:39 194  ,cad_g24
21:59:39 195  ,cad_g25
21:59:39 196  ,cad_g26
21:59:39 197  ,cad_g27
21:59:39 198  ,cad_g28
21:59:39 199  ,cad_g29
21:59:39 200  ,cad_g30
21:59:39 201  ,cad_g31
21:59:39 202  ,cad_g32
21:59:39 203  ,cad_g33
21:59:39 204  ,cad_g34
21:59:39 205  ,cad_g35
21:59:39 206  ,cad_g36
21:59:39 207  ,cad_g37
21:59:39 208  ,cad_g38
21:59:39 209  ,cad_g39
21:59:39 210  ,cad_g40
21:59:39 211  ,chf_g00
21:59:39 212  ,chf_g01
21:59:39 213  ,chf_g02
21:59:39 214  ,chf_g03
21:59:39 215  ,chf_g04
21:59:39 216  ,chf_g05
21:59:39 217  ,chf_g06
21:59:39 218  ,chf_g07
21:59:39 219  ,chf_g08
21:59:39 220  ,chf_g09
21:59:39 221  ,chf_g10
21:59:39 222  ,chf_g11
21:59:39 223  ,chf_g12
21:59:39 224  ,chf_g13
21:59:39 225  ,chf_g14
21:59:39 226  ,chf_g15
21:59:39 227  ,chf_g16
21:59:39 228  ,chf_g17
21:59:39 229  ,chf_g18
21:59:39 230  ,chf_g19
21:59:39 231  ,chf_g20
21:59:39 232  ,chf_g21
21:59:39 233  ,chf_g22
21:59:39 234  ,chf_g23
21:59:39 235  ,chf_g24
21:59:39 236  ,chf_g25
21:59:39 237  ,chf_g26
21:59:39 238  ,chf_g27
21:59:39 239  ,chf_g28
21:59:39 240  ,chf_g29
21:59:39 241  ,chf_g30
21:59:39 242  ,chf_g31
21:59:39 243  ,chf_g32
21:59:39 244  ,chf_g33
21:59:39 245  ,chf_g34
21:59:39 246  ,chf_g35
21:59:39 247  ,chf_g36
21:59:39 248  ,chf_g37
21:59:39 249  ,chf_g38
21:59:39 250  ,chf_g39
21:59:39 251  ,chf_g40
21:59:39 252  FROM chf_ms14 m
21:59:39 253  WHERE m.ydate = '&1'||' '||'&2'
21:59:39 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'07:25:00'

View created.

Elapsed: 00:00:00.11
21:59:39 SQL> 
21:59:39 SQL> -- rpt
21:59:39 SQL> -- We should see just 1 row:
21:59:39 SQL> 
21:59:39 SQL> SELECT COUNT(prdate) FROM sme
21:59:39   2  
21:59:39 SQL> -- Build the model:
21:59:39 SQL> CREATE OR REPLACE VIEW bme AS
21:59:39   2  SELECT
21:59:39   3  'chf'||m.ydate prdate
21:59:39   4  ,gattn
21:59:39   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:59:39   6  ,eur_g00
21:59:39   7  ,eur_g01
21:59:39   8  ,eur_g02
21:59:39   9  ,eur_g03
21:59:39  10  ,eur_g04
21:59:39  11  ,eur_g05
21:59:39  12  ,eur_g06
21:59:39  13  ,eur_g07
21:59:39  14  ,eur_g08
21:59:39  15  ,eur_g09
21:59:39  16  ,eur_g10
21:59:39  17  ,eur_g11
21:59:39  18  ,eur_g12
21:59:39  19  ,eur_g13
21:59:39  20  ,eur_g14
21:59:39  21  ,eur_g15
21:59:39  22  ,eur_g16
21:59:39  23  ,eur_g17
21:59:39  24  ,eur_g18
21:59:39  25  ,eur_g19
21:59:39  26  ,eur_g20
21:59:39  27  ,eur_g21
21:59:39  28  ,eur_g22
21:59:39  29  ,eur_g23
21:59:39  30  ,eur_g24
21:59:39  31  ,eur_g25
21:59:39  32  ,eur_g26
21:59:39  33  ,eur_g27
21:59:39  34  ,eur_g28
21:59:39  35  ,eur_g29
21:59:39  36  ,eur_g30
21:59:39  37  ,eur_g31
21:59:39  38  ,eur_g32
21:59:39  39  ,eur_g33
21:59:39  40  ,eur_g34
21:59:39  41  ,eur_g35
21:59:39  42  ,eur_g36
21:59:39  43  ,eur_g37
21:59:39  44  ,eur_g38
21:59:39  45  ,eur_g39
21:59:39  46  ,eur_g40
21:59:39  47  ,aud_g00
21:59:39  48  ,aud_g01
21:59:39  49  ,aud_g02
21:59:39  50  ,aud_g03
21:59:39  51  ,aud_g04
21:59:39  52  ,aud_g05
21:59:39  53  ,aud_g06
21:59:39  54  ,aud_g07
21:59:39  55  ,aud_g08
21:59:39  56  ,aud_g09
21:59:39  57  ,aud_g10
21:59:39  58  ,aud_g11
21:59:39  59  ,aud_g12
21:59:39  60  ,aud_g13
21:59:39  61  ,aud_g14
21:59:39  62  ,aud_g15
21:59:39  63  ,aud_g16
21:59:39  64  ,aud_g17
21:59:39  65  ,aud_g18
21:59:39  66  ,aud_g19
21:59:39  67  ,aud_g20
21:59:39  68  ,aud_g21
21:59:39  69  ,aud_g22
21:59:39  70  ,aud_g23
21:59:39  71  ,aud_g24
21:59:39  72  ,aud_g25
21:59:39  73  ,aud_g26
21:59:39  74  ,aud_g27
21:59:39  75  ,aud_g28
21:59:39  76  ,aud_g29
21:59:39  77  ,aud_g30
21:59:39  78  ,aud_g31
21:59:39  79  ,aud_g32
21:59:39  80  ,aud_g33
21:59:39  81  ,aud_g34
21:59:39  82  ,aud_g35
21:59:39  83  ,aud_g36
21:59:39  84  ,aud_g37
21:59:39  85  ,aud_g38
21:59:39  86  ,aud_g39
21:59:39  87  ,aud_g40
21:59:39  88  ,gbp_g00
21:59:39  89  ,gbp_g01
21:59:39  90  ,gbp_g02
21:59:39  91  ,gbp_g03
21:59:39  92  ,gbp_g04
21:59:39  93  ,gbp_g05
21:59:39  94  ,gbp_g06
21:59:39  95  ,gbp_g07
21:59:39  96  ,gbp_g08
21:59:39  97  ,gbp_g09
21:59:39  98  ,gbp_g10
21:59:39  99  ,gbp_g11
21:59:39 100  ,gbp_g12
21:59:39 101  ,gbp_g13
21:59:39 102  ,gbp_g14
21:59:39 103  ,gbp_g15
21:59:39 104  ,gbp_g16
21:59:39 105  ,gbp_g17
21:59:39 106  ,gbp_g18
21:59:39 107  ,gbp_g19
21:59:39 108  ,gbp_g20
21:59:39 109  ,gbp_g21
21:59:39 110  ,gbp_g22
21:59:39 111  ,gbp_g23
21:59:39 112  ,gbp_g24
21:59:39 113  ,gbp_g25
21:59:39 114  ,gbp_g26
21:59:39 115  ,gbp_g27
21:59:39 116  ,gbp_g28
21:59:39 117  ,gbp_g29
21:59:39 118  ,gbp_g30
21:59:39 119  ,gbp_g31
21:59:39 120  ,gbp_g32
21:59:39 121  ,gbp_g33
21:59:39 122  ,gbp_g34
21:59:39 123  ,gbp_g35
21:59:39 124  ,gbp_g36
21:59:39 125  ,gbp_g37
21:59:39 126  ,gbp_g38
21:59:39 127  ,gbp_g39
21:59:39 128  ,gbp_g40
21:59:39 129  ,jpy_g00
21:59:39 130  ,jpy_g01
21:59:39 131  ,jpy_g02
21:59:39 132  ,jpy_g03
21:59:39 133  ,jpy_g04
21:59:39 134  ,jpy_g05
21:59:39 135  ,jpy_g06
21:59:39 136  ,jpy_g07
21:59:39 137  ,jpy_g08
21:59:39 138  ,jpy_g09
21:59:39 139  ,jpy_g10
21:59:39 140  ,jpy_g11
21:59:39 141  ,jpy_g12
21:59:39 142  ,jpy_g13
21:59:39 143  ,jpy_g14
21:59:39 144  ,jpy_g15
21:59:39 145  ,jpy_g16
21:59:39 146  ,jpy_g17
21:59:39 147  ,jpy_g18
21:59:39 148  ,jpy_g19
21:59:39 149  ,jpy_g20
21:59:39 150  ,jpy_g21
21:59:39 151  ,jpy_g22
21:59:39 152  ,jpy_g23
21:59:39 153  ,jpy_g24
21:59:39 154  ,jpy_g25
21:59:39 155  ,jpy_g26
21:59:39 156  ,jpy_g27
21:59:39 157  ,jpy_g28
21:59:39 158  ,jpy_g29
21:59:39 159  ,jpy_g30
21:59:39 160  ,jpy_g31
21:59:39 161  ,jpy_g32
21:59:39 162  ,jpy_g33
21:59:39 163  ,jpy_g34
21:59:39 164  ,jpy_g35
21:59:39 165  ,jpy_g36
21:59:39 166  ,jpy_g37
21:59:39 167  ,jpy_g38
21:59:39 168  ,jpy_g39
21:59:39 169  ,jpy_g40
21:59:39 170  ,cad_g00
21:59:39 171  ,cad_g01
21:59:39 172  ,cad_g02
21:59:39 173  ,cad_g03
21:59:39 174  ,cad_g04
21:59:39 175  ,cad_g05
21:59:39 176  ,cad_g06
21:59:39 177  ,cad_g07
21:59:39 178  ,cad_g08
21:59:39 179  ,cad_g09
21:59:39 180  ,cad_g10
21:59:39 181  ,cad_g11
21:59:39 182  ,cad_g12
21:59:39 183  ,cad_g13
21:59:39 184  ,cad_g14
21:59:39 185  ,cad_g15
21:59:39 186  ,cad_g16
21:59:39 187  ,cad_g17
21:59:39 188  ,cad_g18
21:59:39 189  ,cad_g19
21:59:39 190  ,cad_g20
21:59:39 191  ,cad_g21
21:59:39 192  ,cad_g22
21:59:39 193  ,cad_g23
21:59:39 194  ,cad_g24
21:59:39 195  ,cad_g25
21:59:39 196  ,cad_g26
21:59:39 197  ,cad_g27
21:59:39 198  ,cad_g28
21:59:39 199  ,cad_g29
21:59:39 200  ,cad_g30
21:59:39 201  ,cad_g31
21:59:39 202  ,cad_g32
21:59:39 203  ,cad_g33
21:59:39 204  ,cad_g34
21:59:39 205  ,cad_g35
21:59:39 206  ,cad_g36
21:59:39 207  ,cad_g37
21:59:39 208  ,cad_g38
21:59:39 209  ,cad_g39
21:59:39 210  ,cad_g40
21:59:39 211  ,chf_g00
21:59:39 212  ,chf_g01
21:59:39 213  ,chf_g02
21:59:39 214  ,chf_g03
21:59:39 215  ,chf_g04
21:59:39 216  ,chf_g05
21:59:39 217  ,chf_g06
21:59:39 218  ,chf_g07
21:59:39 219  ,chf_g08
21:59:39 220  ,chf_g09
21:59:39 221  ,chf_g10
21:59:39 222  ,chf_g11
21:59:39 223  ,chf_g12
21:59:39 224  ,chf_g13
21:59:39 225  ,chf_g14
21:59:39 226  ,chf_g15
21:59:39 227  ,chf_g16
21:59:39 228  ,chf_g17
21:59:39 229  ,chf_g18
21:59:39 230  ,chf_g19
21:59:39 231  ,chf_g20
21:59:39 232  ,chf_g21
21:59:39 233  ,chf_g22
21:59:39 234  ,chf_g23
21:59:39 235  ,chf_g24
21:59:39 236  ,chf_g25
21:59:39 237  ,chf_g26
21:59:39 238  ,chf_g27
21:59:39 239  ,chf_g28
21:59:39 240  ,chf_g29
21:59:39 241  ,chf_g30
21:59:39 242  ,chf_g31
21:59:39 243  ,chf_g32
21:59:39 244  ,chf_g33
21:59:39 245  ,chf_g34
21:59:39 246  ,chf_g35
21:59:39 247  ,chf_g36
21:59:39 248  ,chf_g37
21:59:39 249  ,chf_g38
21:59:39 250  ,chf_g39
21:59:39 251  ,chf_g40
21:59:39 252  FROM chf_ms14 m
21:59:39 253  WHERE gattn IN('nup','up')
21:59:39 254  AND 1+m.ydate < '&1'||' '||'&2'
21:59:39 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'07:25:00'

View created.

Elapsed: 00:00:00.13
21:59:39 SQL> 
21:59:39 SQL> -- rpt
21:59:39 SQL> 
21:59:39 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
21:59:39   2  
21:59:39 SQL> SELECT MAX(prdate) FROM bme
21:59:39   2  
21:59:39 SQL> -- Now build model from bme and score sme
21:59:39 SQL> @score1gattn.sql
21:59:39 SQL> -- score1gattn.sql
21:59:39 SQL> 
21:59:39 SQL> -- Does the 1st SVM score
21:59:39 SQL> 
21:59:39 SQL> -- Fill up svmc_apply_prep
21:59:39 SQL> @score_gattn.sql
21:59:39 SQL> --
21:59:39 SQL> -- score_gattn.sql
21:59:39 SQL> --
21:59:39 SQL> 
21:59:39 SQL> -- usage: score_gattn.sql
21:59:39 SQL> 
21:59:39 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:59:39 SQL> 
21:59:39 SQL> DEFINE target	= 'gattn'
21:59:39 SQL> DEFINE model_name = 'forex14'
21:59:39 SQL> DEFINE bldtable	= 'bme'
21:59:39 SQL> DEFINE scoretable = 'sme'
21:59:39 SQL> DEFINE case_id	= 'prdate'
21:59:39 SQL> 
21:59:39 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:59:39 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:59:39 SQL> 
21:59:39 SQL> -- Builds an SVM model using pl/sql.
21:59:39 SQL> 
21:59:39 SQL> -----------------------------------------------------------------------
21:59:39 SQL> --			    BUILD THE MODEL
21:59:39 SQL> -----------------------------------------------------------------------
21:59:39 SQL> 
21:59:39 SQL> -- Cleanup old build data preparation objects for repeat runs
21:59:39 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
21:59:39 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:59:39 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
21:59:39 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
21:59:39 SQL> 
21:59:39 SQL> 
21:59:39 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:59:39 SQL> --
21:59:39 SQL> -- DROP	TABLE svmc_settings ;
21:59:39 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:59:39 SQL> -- DELETE svmc_settings;
21:59:39 SQL> 
21:59:39 SQL> -- The default classification algorithm is Naive Bayes. So override
21:59:39 SQL> -- this choice to SVM using a settings table.
21:59:39 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:59:39 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:59:39 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:59:39 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:59:39 SQL> -- models.
21:59:39 SQL> --
21:59:39 SQL> 
21:59:39 SQL> -- Do this once and then comment it out.
21:59:39 SQL> -- That makes script go faster.
21:59:39 SQL> -- BEGIN
21:59:39 SQL> -- -- Populate settings table
21:59:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:59:39 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:59:39 SQL> --
21:59:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:59:39 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:59:39 SQL> --
21:59:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:59:39 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:59:39 SQL> --   COMMIT;
21:59:39 SQL> -- END;
21:59:39 SQL> -- /
21:59:39 SQL> 
21:59:39 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:59:39 SQL> 
21:59:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:59:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:59:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:59:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:59:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:59:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:59:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:59:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:59:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:59:39 SQL> 
21:59:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:59:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:59:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:59:39 SQL> 
21:59:39 SQL> --------------------------------
21:59:39 SQL> -- PREPARE BUILD (TRAINING) DATA
21:59:39 SQL> --
21:59:39 SQL> 
21:59:39 SQL> -- 1. Missing Value treatment for all Predictors and
21:59:39 SQL> -- 2. Outlier Treatment and
21:59:39 SQL> -- 3. Normalization are performed below.
21:59:39 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:59:39 SQL> --    normalized here.
21:59:39 SQL> 
21:59:39 SQL> BEGIN
21:59:39   2  	-- Perform missing value treatment for all predictors
21:59:39   3  	-- create miss tables
21:59:39   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:59:39   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:59:39   6  
21:59:39   7  	-- populate miss tables
21:59:39   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:59:39   9  	  miss_table_name => 'svmc_miss_num',
21:59:39  10  	  data_table_name => '&bldtable',
21:59:39  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:59:39  12  
21:59:39  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:59:39  14  	  miss_table_name => 'svmc_miss_cat',
21:59:39  15  	  data_table_name => '&bldtable',
21:59:39  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:59:39  17  
21:59:39  18  	-- xform input data to replace missing values
21:59:39  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:59:39  20  	  miss_table_name => 'svmc_miss_num',
21:59:39  21  	  data_table_name => '&bldtable',
21:59:39  22  	  xform_view_name => 'xformed_build_miss_num');
21:59:39  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:59:39  24  	  miss_table_name => 'svmc_miss_cat',
21:59:39  25  	  data_table_name => '&bldtable',
21:59:39  26  	  xform_view_name => 'xformed_build_miss_cat');
21:59:39  27  
21:59:39  28  	-- Perform outlier treatment.
21:59:39  29  	-- create clip table
21:59:39  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:59:39  31  
21:59:39  32  	-- populate clip table
21:59:39  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:59:39  34  	  clip_table_name => 'svmc_clip',
21:59:39  35  	  data_table_name => '&bldtable',
21:59:39  36  	  tail_frac	  => 0.025,
21:59:39  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:59:39  38  
21:59:39  39  	-- xform input data to winsorized data
21:59:39  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:59:39  41  	  clip_table_name => 'svmc_clip',
21:59:39  42  	  data_table_name => '&bldtable',
21:59:39  43  	  xform_view_name => 'svmc_winsor');
21:59:39  44  
21:59:39  45  	-- create normalization table
21:59:39  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:59:39  47  
21:59:39  48  	-- populate normalization table based on winsorized data
21:59:39  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:59:39  50  	  norm_table_name => 'svmc_norm',
21:59:39  51  	  data_table_name => 'svmc_winsor',
21:59:39  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:59:39  53  
21:59:39  54  	-- normalize the original data
21:59:39  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:59:39  56  	  norm_table_name => 'svmc_norm',
21:59:39  57  	  data_table_name => '&bldtable',
21:59:39  58  	  xform_view_name => 'svmc_build_prep');
21:59:39  59  END;
21:59:39  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.96
21:59:57 SQL> 
21:59:57 SQL> ---------------------
21:59:57 SQL> -- CREATE A NEW MODEL
21:59:57 SQL> --
21:59:57 SQL> -- Cleanup old model with the same name for repeat runs
21:59:57 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:59:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:59:57   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.01
21:59:58 SQL> 
21:59:58 SQL> -- Build a new SVM Model
21:59:58 SQL> BEGIN
21:59:58   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:59:58   3  	  model_name	      => '&model_name',
21:59:58   4  	  mining_function     => dbms_data_mining.classification,
21:59:58   5  	  data_table_name     => 'svmc_build_prep',
21:59:58   6  	  case_id_column_name => '&case_id',
21:59:58   7  	  target_column_name  => '&target',
21:59:58   8  	  settings_table_name => 'svmc_settings');
21:59:58   9  END;
21:59:58  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.85
22:00:24 SQL> 
22:00:24 SQL> -----------------------------------------------------------------------
22:00:24 SQL> --			       APPLY/score THE MODEL
22:00:24 SQL> -----------------------------------------------------------------------
22:00:24 SQL> 
22:00:24 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:00:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:00:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:00:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:00:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:00:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:00:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:00:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:00:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:00:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
22:00:24 SQL> -----------------------
22:00:24 SQL> -- PREPARE SCORING DATA
22:00:24 SQL> --
22:00:24 SQL> -- If the data for model creation has been prepared, then the data
22:00:24 SQL> -- to be scored using the model must be prepared in the same manner
22:00:24 SQL> -- in order to obtain meaningful results.
22:00:24 SQL> --
22:00:24 SQL> -- 1. Missing Value treatment for all Predictors and
22:00:24 SQL> -- 2. Normalization
22:00:24 SQL> -- No outlier treatment will be performed during test and apply. The
22:00:24 SQL> -- normalization step is sufficient, since the normalization parameters
22:00:24 SQL> -- already capture the effects of outlier treatment done with build data.
22:00:24 SQL> --
22:00:24 SQL> BEGIN
22:00:24   2  	-- Xform Test data to replace missing values
22:00:24   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:00:24   4  	  miss_table_name => 'svmc_miss_num',
22:00:24   5  	  data_table_name => '&scoretable',
22:00:24   6  	  xform_view_name => 'xformed_apply_miss_num');
22:00:24   7  
22:00:24   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:00:24   9  	  miss_table_name => 'svmc_miss_cat',
22:00:24  10  	  data_table_name => '&scoretable',
22:00:24  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:00:24  12  
22:00:24  13  	-- Normalize the data to be scored
22:00:24  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:00:24  15  	  norm_table_name => 'svmc_norm',
22:00:24  16  	  data_table_name => '&scoretable',
22:00:24  17  	  xform_view_name => 'svmc_apply_prep');
22:00:24  18  END;
22:00:24  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
22:00:25 SQL> 
22:00:25 SQL> -- Use same model_name used in score_gattn.sql
22:00:25 SQL> DEFINE model_name = 'forex14'
22:00:25 SQL> 
22:00:25 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
22:00:25 SQL> 
22:00:25 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
22:00:25   2  SELECT
22:00:25   3  prdate
22:00:25   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:00:25   5  ,sysdate
22:00:25   6  ,SUBSTR(prdate,1,3)pair
22:00:25   7  ,SUBSTR(prdate,4,19)ydate
22:00:25   8  FROM svmc_apply_prep
22:00:25   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
22:00:25 SQL> @chf_score1day_gattn.sql	2010-12-17 07:15:00
22:00:25 SQL> --
22:00:25 SQL> -- chf_score1day_gattn.sql
22:00:25 SQL> --
22:00:25 SQL> 
22:00:25 SQL> CREATE OR REPLACE VIEW sme AS
22:00:25   2  SELECT
22:00:25   3  'chf'||m.ydate prdate
22:00:25   4  ,NULL gattn
22:00:25   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:00:25   6  ,eur_g00
22:00:25   7  ,eur_g01
22:00:25   8  ,eur_g02
22:00:25   9  ,eur_g03
22:00:25  10  ,eur_g04
22:00:25  11  ,eur_g05
22:00:25  12  ,eur_g06
22:00:25  13  ,eur_g07
22:00:25  14  ,eur_g08
22:00:25  15  ,eur_g09
22:00:25  16  ,eur_g10
22:00:25  17  ,eur_g11
22:00:25  18  ,eur_g12
22:00:25  19  ,eur_g13
22:00:25  20  ,eur_g14
22:00:25  21  ,eur_g15
22:00:25  22  ,eur_g16
22:00:25  23  ,eur_g17
22:00:25  24  ,eur_g18
22:00:25  25  ,eur_g19
22:00:25  26  ,eur_g20
22:00:25  27  ,eur_g21
22:00:25  28  ,eur_g22
22:00:25  29  ,eur_g23
22:00:25  30  ,eur_g24
22:00:25  31  ,eur_g25
22:00:25  32  ,eur_g26
22:00:25  33  ,eur_g27
22:00:25  34  ,eur_g28
22:00:25  35  ,eur_g29
22:00:25  36  ,eur_g30
22:00:25  37  ,eur_g31
22:00:25  38  ,eur_g32
22:00:25  39  ,eur_g33
22:00:25  40  ,eur_g34
22:00:25  41  ,eur_g35
22:00:25  42  ,eur_g36
22:00:25  43  ,eur_g37
22:00:25  44  ,eur_g38
22:00:25  45  ,eur_g39
22:00:25  46  ,eur_g40
22:00:25  47  ,aud_g00
22:00:25  48  ,aud_g01
22:00:25  49  ,aud_g02
22:00:25  50  ,aud_g03
22:00:25  51  ,aud_g04
22:00:25  52  ,aud_g05
22:00:25  53  ,aud_g06
22:00:25  54  ,aud_g07
22:00:25  55  ,aud_g08
22:00:25  56  ,aud_g09
22:00:25  57  ,aud_g10
22:00:25  58  ,aud_g11
22:00:25  59  ,aud_g12
22:00:25  60  ,aud_g13
22:00:25  61  ,aud_g14
22:00:25  62  ,aud_g15
22:00:25  63  ,aud_g16
22:00:25  64  ,aud_g17
22:00:25  65  ,aud_g18
22:00:25  66  ,aud_g19
22:00:25  67  ,aud_g20
22:00:25  68  ,aud_g21
22:00:25  69  ,aud_g22
22:00:25  70  ,aud_g23
22:00:25  71  ,aud_g24
22:00:25  72  ,aud_g25
22:00:25  73  ,aud_g26
22:00:25  74  ,aud_g27
22:00:25  75  ,aud_g28
22:00:25  76  ,aud_g29
22:00:25  77  ,aud_g30
22:00:25  78  ,aud_g31
22:00:25  79  ,aud_g32
22:00:25  80  ,aud_g33
22:00:25  81  ,aud_g34
22:00:25  82  ,aud_g35
22:00:25  83  ,aud_g36
22:00:25  84  ,aud_g37
22:00:25  85  ,aud_g38
22:00:25  86  ,aud_g39
22:00:25  87  ,aud_g40
22:00:25  88  ,gbp_g00
22:00:25  89  ,gbp_g01
22:00:25  90  ,gbp_g02
22:00:25  91  ,gbp_g03
22:00:25  92  ,gbp_g04
22:00:25  93  ,gbp_g05
22:00:25  94  ,gbp_g06
22:00:25  95  ,gbp_g07
22:00:25  96  ,gbp_g08
22:00:25  97  ,gbp_g09
22:00:25  98  ,gbp_g10
22:00:25  99  ,gbp_g11
22:00:25 100  ,gbp_g12
22:00:25 101  ,gbp_g13
22:00:25 102  ,gbp_g14
22:00:25 103  ,gbp_g15
22:00:25 104  ,gbp_g16
22:00:25 105  ,gbp_g17
22:00:25 106  ,gbp_g18
22:00:25 107  ,gbp_g19
22:00:25 108  ,gbp_g20
22:00:25 109  ,gbp_g21
22:00:25 110  ,gbp_g22
22:00:25 111  ,gbp_g23
22:00:25 112  ,gbp_g24
22:00:25 113  ,gbp_g25
22:00:25 114  ,gbp_g26
22:00:25 115  ,gbp_g27
22:00:25 116  ,gbp_g28
22:00:25 117  ,gbp_g29
22:00:25 118  ,gbp_g30
22:00:25 119  ,gbp_g31
22:00:25 120  ,gbp_g32
22:00:25 121  ,gbp_g33
22:00:25 122  ,gbp_g34
22:00:25 123  ,gbp_g35
22:00:25 124  ,gbp_g36
22:00:25 125  ,gbp_g37
22:00:25 126  ,gbp_g38
22:00:25 127  ,gbp_g39
22:00:25 128  ,gbp_g40
22:00:25 129  ,jpy_g00
22:00:25 130  ,jpy_g01
22:00:25 131  ,jpy_g02
22:00:25 132  ,jpy_g03
22:00:25 133  ,jpy_g04
22:00:25 134  ,jpy_g05
22:00:25 135  ,jpy_g06
22:00:25 136  ,jpy_g07
22:00:25 137  ,jpy_g08
22:00:25 138  ,jpy_g09
22:00:25 139  ,jpy_g10
22:00:25 140  ,jpy_g11
22:00:25 141  ,jpy_g12
22:00:25 142  ,jpy_g13
22:00:25 143  ,jpy_g14
22:00:25 144  ,jpy_g15
22:00:25 145  ,jpy_g16
22:00:25 146  ,jpy_g17
22:00:25 147  ,jpy_g18
22:00:25 148  ,jpy_g19
22:00:25 149  ,jpy_g20
22:00:25 150  ,jpy_g21
22:00:25 151  ,jpy_g22
22:00:25 152  ,jpy_g23
22:00:25 153  ,jpy_g24
22:00:25 154  ,jpy_g25
22:00:25 155  ,jpy_g26
22:00:25 156  ,jpy_g27
22:00:25 157  ,jpy_g28
22:00:25 158  ,jpy_g29
22:00:25 159  ,jpy_g30
22:00:25 160  ,jpy_g31
22:00:25 161  ,jpy_g32
22:00:25 162  ,jpy_g33
22:00:25 163  ,jpy_g34
22:00:25 164  ,jpy_g35
22:00:25 165  ,jpy_g36
22:00:25 166  ,jpy_g37
22:00:25 167  ,jpy_g38
22:00:25 168  ,jpy_g39
22:00:25 169  ,jpy_g40
22:00:25 170  ,cad_g00
22:00:25 171  ,cad_g01
22:00:25 172  ,cad_g02
22:00:25 173  ,cad_g03
22:00:25 174  ,cad_g04
22:00:25 175  ,cad_g05
22:00:25 176  ,cad_g06
22:00:25 177  ,cad_g07
22:00:25 178  ,cad_g08
22:00:25 179  ,cad_g09
22:00:25 180  ,cad_g10
22:00:25 181  ,cad_g11
22:00:25 182  ,cad_g12
22:00:25 183  ,cad_g13
22:00:25 184  ,cad_g14
22:00:25 185  ,cad_g15
22:00:25 186  ,cad_g16
22:00:25 187  ,cad_g17
22:00:25 188  ,cad_g18
22:00:25 189  ,cad_g19
22:00:25 190  ,cad_g20
22:00:25 191  ,cad_g21
22:00:25 192  ,cad_g22
22:00:25 193  ,cad_g23
22:00:25 194  ,cad_g24
22:00:25 195  ,cad_g25
22:00:25 196  ,cad_g26
22:00:25 197  ,cad_g27
22:00:25 198  ,cad_g28
22:00:25 199  ,cad_g29
22:00:25 200  ,cad_g30
22:00:25 201  ,cad_g31
22:00:25 202  ,cad_g32
22:00:25 203  ,cad_g33
22:00:25 204  ,cad_g34
22:00:25 205  ,cad_g35
22:00:25 206  ,cad_g36
22:00:25 207  ,cad_g37
22:00:25 208  ,cad_g38
22:00:25 209  ,cad_g39
22:00:25 210  ,cad_g40
22:00:25 211  ,chf_g00
22:00:25 212  ,chf_g01
22:00:25 213  ,chf_g02
22:00:25 214  ,chf_g03
22:00:25 215  ,chf_g04
22:00:25 216  ,chf_g05
22:00:25 217  ,chf_g06
22:00:25 218  ,chf_g07
22:00:25 219  ,chf_g08
22:00:25 220  ,chf_g09
22:00:25 221  ,chf_g10
22:00:25 222  ,chf_g11
22:00:25 223  ,chf_g12
22:00:25 224  ,chf_g13
22:00:25 225  ,chf_g14
22:00:25 226  ,chf_g15
22:00:25 227  ,chf_g16
22:00:25 228  ,chf_g17
22:00:25 229  ,chf_g18
22:00:25 230  ,chf_g19
22:00:25 231  ,chf_g20
22:00:25 232  ,chf_g21
22:00:25 233  ,chf_g22
22:00:25 234  ,chf_g23
22:00:25 235  ,chf_g24
22:00:25 236  ,chf_g25
22:00:25 237  ,chf_g26
22:00:25 238  ,chf_g27
22:00:25 239  ,chf_g28
22:00:25 240  ,chf_g29
22:00:25 241  ,chf_g30
22:00:25 242  ,chf_g31
22:00:25 243  ,chf_g32
22:00:25 244  ,chf_g33
22:00:25 245  ,chf_g34
22:00:25 246  ,chf_g35
22:00:25 247  ,chf_g36
22:00:25 248  ,chf_g37
22:00:25 249  ,chf_g38
22:00:25 250  ,chf_g39
22:00:25 251  ,chf_g40
22:00:25 252  FROM chf_ms14 m
22:00:25 253  WHERE m.ydate = '&1'||' '||'&2'
22:00:25 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'07:15:00'

View created.

Elapsed: 00:00:00.12
22:00:26 SQL> 
22:00:26 SQL> -- rpt
22:00:26 SQL> -- We should see just 1 row:
22:00:26 SQL> 
22:00:26 SQL> SELECT COUNT(prdate) FROM sme
22:00:26   2  
22:00:26 SQL> -- Build the model:
22:00:26 SQL> CREATE OR REPLACE VIEW bme AS
22:00:26   2  SELECT
22:00:26   3  'chf'||m.ydate prdate
22:00:26   4  ,gattn
22:00:26   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:00:26   6  ,eur_g00
22:00:26   7  ,eur_g01
22:00:26   8  ,eur_g02
22:00:26   9  ,eur_g03
22:00:26  10  ,eur_g04
22:00:26  11  ,eur_g05
22:00:26  12  ,eur_g06
22:00:26  13  ,eur_g07
22:00:26  14  ,eur_g08
22:00:26  15  ,eur_g09
22:00:26  16  ,eur_g10
22:00:26  17  ,eur_g11
22:00:26  18  ,eur_g12
22:00:26  19  ,eur_g13
22:00:26  20  ,eur_g14
22:00:26  21  ,eur_g15
22:00:26  22  ,eur_g16
22:00:26  23  ,eur_g17
22:00:26  24  ,eur_g18
22:00:26  25  ,eur_g19
22:00:26  26  ,eur_g20
22:00:26  27  ,eur_g21
22:00:26  28  ,eur_g22
22:00:26  29  ,eur_g23
22:00:26  30  ,eur_g24
22:00:26  31  ,eur_g25
22:00:26  32  ,eur_g26
22:00:26  33  ,eur_g27
22:00:26  34  ,eur_g28
22:00:26  35  ,eur_g29
22:00:26  36  ,eur_g30
22:00:26  37  ,eur_g31
22:00:26  38  ,eur_g32
22:00:26  39  ,eur_g33
22:00:26  40  ,eur_g34
22:00:26  41  ,eur_g35
22:00:26  42  ,eur_g36
22:00:26  43  ,eur_g37
22:00:26  44  ,eur_g38
22:00:26  45  ,eur_g39
22:00:26  46  ,eur_g40
22:00:26  47  ,aud_g00
22:00:26  48  ,aud_g01
22:00:26  49  ,aud_g02
22:00:26  50  ,aud_g03
22:00:26  51  ,aud_g04
22:00:26  52  ,aud_g05
22:00:26  53  ,aud_g06
22:00:26  54  ,aud_g07
22:00:26  55  ,aud_g08
22:00:26  56  ,aud_g09
22:00:26  57  ,aud_g10
22:00:26  58  ,aud_g11
22:00:26  59  ,aud_g12
22:00:26  60  ,aud_g13
22:00:26  61  ,aud_g14
22:00:26  62  ,aud_g15
22:00:26  63  ,aud_g16
22:00:26  64  ,aud_g17
22:00:26  65  ,aud_g18
22:00:26  66  ,aud_g19
22:00:26  67  ,aud_g20
22:00:26  68  ,aud_g21
22:00:26  69  ,aud_g22
22:00:26  70  ,aud_g23
22:00:26  71  ,aud_g24
22:00:26  72  ,aud_g25
22:00:26  73  ,aud_g26
22:00:26  74  ,aud_g27
22:00:26  75  ,aud_g28
22:00:26  76  ,aud_g29
22:00:26  77  ,aud_g30
22:00:26  78  ,aud_g31
22:00:26  79  ,aud_g32
22:00:26  80  ,aud_g33
22:00:26  81  ,aud_g34
22:00:26  82  ,aud_g35
22:00:26  83  ,aud_g36
22:00:26  84  ,aud_g37
22:00:26  85  ,aud_g38
22:00:26  86  ,aud_g39
22:00:26  87  ,aud_g40
22:00:26  88  ,gbp_g00
22:00:26  89  ,gbp_g01
22:00:26  90  ,gbp_g02
22:00:26  91  ,gbp_g03
22:00:26  92  ,gbp_g04
22:00:26  93  ,gbp_g05
22:00:26  94  ,gbp_g06
22:00:26  95  ,gbp_g07
22:00:26  96  ,gbp_g08
22:00:26  97  ,gbp_g09
22:00:26  98  ,gbp_g10
22:00:26  99  ,gbp_g11
22:00:26 100  ,gbp_g12
22:00:26 101  ,gbp_g13
22:00:26 102  ,gbp_g14
22:00:26 103  ,gbp_g15
22:00:26 104  ,gbp_g16
22:00:26 105  ,gbp_g17
22:00:26 106  ,gbp_g18
22:00:26 107  ,gbp_g19
22:00:26 108  ,gbp_g20
22:00:26 109  ,gbp_g21
22:00:26 110  ,gbp_g22
22:00:26 111  ,gbp_g23
22:00:26 112  ,gbp_g24
22:00:26 113  ,gbp_g25
22:00:26 114  ,gbp_g26
22:00:26 115  ,gbp_g27
22:00:26 116  ,gbp_g28
22:00:26 117  ,gbp_g29
22:00:26 118  ,gbp_g30
22:00:26 119  ,gbp_g31
22:00:26 120  ,gbp_g32
22:00:26 121  ,gbp_g33
22:00:26 122  ,gbp_g34
22:00:26 123  ,gbp_g35
22:00:26 124  ,gbp_g36
22:00:26 125  ,gbp_g37
22:00:26 126  ,gbp_g38
22:00:26 127  ,gbp_g39
22:00:26 128  ,gbp_g40
22:00:26 129  ,jpy_g00
22:00:26 130  ,jpy_g01
22:00:26 131  ,jpy_g02
22:00:26 132  ,jpy_g03
22:00:26 133  ,jpy_g04
22:00:26 134  ,jpy_g05
22:00:26 135  ,jpy_g06
22:00:26 136  ,jpy_g07
22:00:26 137  ,jpy_g08
22:00:26 138  ,jpy_g09
22:00:26 139  ,jpy_g10
22:00:26 140  ,jpy_g11
22:00:26 141  ,jpy_g12
22:00:26 142  ,jpy_g13
22:00:26 143  ,jpy_g14
22:00:26 144  ,jpy_g15
22:00:26 145  ,jpy_g16
22:00:26 146  ,jpy_g17
22:00:26 147  ,jpy_g18
22:00:26 148  ,jpy_g19
22:00:26 149  ,jpy_g20
22:00:26 150  ,jpy_g21
22:00:26 151  ,jpy_g22
22:00:26 152  ,jpy_g23
22:00:26 153  ,jpy_g24
22:00:26 154  ,jpy_g25
22:00:26 155  ,jpy_g26
22:00:26 156  ,jpy_g27
22:00:26 157  ,jpy_g28
22:00:26 158  ,jpy_g29
22:00:26 159  ,jpy_g30
22:00:26 160  ,jpy_g31
22:00:26 161  ,jpy_g32
22:00:26 162  ,jpy_g33
22:00:26 163  ,jpy_g34
22:00:26 164  ,jpy_g35
22:00:26 165  ,jpy_g36
22:00:26 166  ,jpy_g37
22:00:26 167  ,jpy_g38
22:00:26 168  ,jpy_g39
22:00:26 169  ,jpy_g40
22:00:26 170  ,cad_g00
22:00:26 171  ,cad_g01
22:00:26 172  ,cad_g02
22:00:26 173  ,cad_g03
22:00:26 174  ,cad_g04
22:00:26 175  ,cad_g05
22:00:26 176  ,cad_g06
22:00:26 177  ,cad_g07
22:00:26 178  ,cad_g08
22:00:26 179  ,cad_g09
22:00:26 180  ,cad_g10
22:00:26 181  ,cad_g11
22:00:26 182  ,cad_g12
22:00:26 183  ,cad_g13
22:00:26 184  ,cad_g14
22:00:26 185  ,cad_g15
22:00:26 186  ,cad_g16
22:00:26 187  ,cad_g17
22:00:26 188  ,cad_g18
22:00:26 189  ,cad_g19
22:00:26 190  ,cad_g20
22:00:26 191  ,cad_g21
22:00:26 192  ,cad_g22
22:00:26 193  ,cad_g23
22:00:26 194  ,cad_g24
22:00:26 195  ,cad_g25
22:00:26 196  ,cad_g26
22:00:26 197  ,cad_g27
22:00:26 198  ,cad_g28
22:00:26 199  ,cad_g29
22:00:26 200  ,cad_g30
22:00:26 201  ,cad_g31
22:00:26 202  ,cad_g32
22:00:26 203  ,cad_g33
22:00:26 204  ,cad_g34
22:00:26 205  ,cad_g35
22:00:26 206  ,cad_g36
22:00:26 207  ,cad_g37
22:00:26 208  ,cad_g38
22:00:26 209  ,cad_g39
22:00:26 210  ,cad_g40
22:00:26 211  ,chf_g00
22:00:26 212  ,chf_g01
22:00:26 213  ,chf_g02
22:00:26 214  ,chf_g03
22:00:26 215  ,chf_g04
22:00:26 216  ,chf_g05
22:00:26 217  ,chf_g06
22:00:26 218  ,chf_g07
22:00:26 219  ,chf_g08
22:00:26 220  ,chf_g09
22:00:26 221  ,chf_g10
22:00:26 222  ,chf_g11
22:00:26 223  ,chf_g12
22:00:26 224  ,chf_g13
22:00:26 225  ,chf_g14
22:00:26 226  ,chf_g15
22:00:26 227  ,chf_g16
22:00:26 228  ,chf_g17
22:00:26 229  ,chf_g18
22:00:26 230  ,chf_g19
22:00:26 231  ,chf_g20
22:00:26 232  ,chf_g21
22:00:26 233  ,chf_g22
22:00:26 234  ,chf_g23
22:00:26 235  ,chf_g24
22:00:26 236  ,chf_g25
22:00:26 237  ,chf_g26
22:00:26 238  ,chf_g27
22:00:26 239  ,chf_g28
22:00:26 240  ,chf_g29
22:00:26 241  ,chf_g30
22:00:26 242  ,chf_g31
22:00:26 243  ,chf_g32
22:00:26 244  ,chf_g33
22:00:26 245  ,chf_g34
22:00:26 246  ,chf_g35
22:00:26 247  ,chf_g36
22:00:26 248  ,chf_g37
22:00:26 249  ,chf_g38
22:00:26 250  ,chf_g39
22:00:26 251  ,chf_g40
22:00:26 252  FROM chf_ms14 m
22:00:26 253  WHERE gattn IN('nup','up')
22:00:26 254  AND 1+m.ydate < '&1'||' '||'&2'
22:00:26 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'07:15:00'

View created.

Elapsed: 00:00:00.15
22:00:26 SQL> 
22:00:26 SQL> -- rpt
22:00:26 SQL> 
22:00:26 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
22:00:26   2  
22:00:26 SQL> SELECT MAX(prdate) FROM bme
22:00:26   2  
22:00:26 SQL> -- Now build model from bme and score sme
22:00:26 SQL> @score1gattn.sql
22:00:26 SQL> -- score1gattn.sql
22:00:26 SQL> 
22:00:26 SQL> -- Does the 1st SVM score
22:00:26 SQL> 
22:00:26 SQL> -- Fill up svmc_apply_prep
22:00:26 SQL> @score_gattn.sql
22:00:26 SQL> --
22:00:26 SQL> -- score_gattn.sql
22:00:26 SQL> --
22:00:26 SQL> 
22:00:26 SQL> -- usage: score_gattn.sql
22:00:26 SQL> 
22:00:26 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:00:26 SQL> 
22:00:26 SQL> DEFINE target	= 'gattn'
22:00:26 SQL> DEFINE model_name = 'forex14'
22:00:26 SQL> DEFINE bldtable	= 'bme'
22:00:26 SQL> DEFINE scoretable = 'sme'
22:00:26 SQL> DEFINE case_id	= 'prdate'
22:00:26 SQL> 
22:00:26 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:00:26 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:00:26 SQL> 
22:00:26 SQL> -- Builds an SVM model using pl/sql.
22:00:26 SQL> 
22:00:26 SQL> -----------------------------------------------------------------------
22:00:26 SQL> --			    BUILD THE MODEL
22:00:26 SQL> -----------------------------------------------------------------------
22:00:26 SQL> 
22:00:26 SQL> -- Cleanup old build data preparation objects for repeat runs
22:00:26 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
22:00:26 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:00:26 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
22:00:26 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
22:00:26 SQL> 
22:00:26 SQL> 
22:00:26 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:00:26 SQL> --
22:00:26 SQL> -- DROP	TABLE svmc_settings ;
22:00:26 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:00:26 SQL> -- DELETE svmc_settings;
22:00:26 SQL> 
22:00:26 SQL> -- The default classification algorithm is Naive Bayes. So override
22:00:26 SQL> -- this choice to SVM using a settings table.
22:00:26 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:00:26 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:00:26 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:00:26 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:00:26 SQL> -- models.
22:00:26 SQL> --
22:00:26 SQL> 
22:00:26 SQL> -- Do this once and then comment it out.
22:00:26 SQL> -- That makes script go faster.
22:00:26 SQL> -- BEGIN
22:00:26 SQL> -- -- Populate settings table
22:00:26 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:00:26 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:00:26 SQL> --
22:00:26 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:00:26 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:00:26 SQL> --
22:00:26 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:00:26 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:00:26 SQL> --   COMMIT;
22:00:26 SQL> -- END;
22:00:26 SQL> -- /
22:00:26 SQL> 
22:00:26 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:00:26 SQL> 
22:00:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:00:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:00:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:00:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:00:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:00:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:00:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:00:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:00:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:00:26 SQL> 
22:00:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:00:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:00:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:00:26 SQL> 
22:00:26 SQL> --------------------------------
22:00:26 SQL> -- PREPARE BUILD (TRAINING) DATA
22:00:26 SQL> --
22:00:26 SQL> 
22:00:26 SQL> -- 1. Missing Value treatment for all Predictors and
22:00:26 SQL> -- 2. Outlier Treatment and
22:00:26 SQL> -- 3. Normalization are performed below.
22:00:26 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:00:26 SQL> --    normalized here.
22:00:26 SQL> 
22:00:26 SQL> BEGIN
22:00:26   2  	-- Perform missing value treatment for all predictors
22:00:26   3  	-- create miss tables
22:00:26   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:00:26   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:00:26   6  
22:00:26   7  	-- populate miss tables
22:00:26   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:00:26   9  	  miss_table_name => 'svmc_miss_num',
22:00:26  10  	  data_table_name => '&bldtable',
22:00:26  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:00:26  12  
22:00:26  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:00:26  14  	  miss_table_name => 'svmc_miss_cat',
22:00:26  15  	  data_table_name => '&bldtable',
22:00:26  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:00:26  17  
22:00:26  18  	-- xform input data to replace missing values
22:00:26  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:00:26  20  	  miss_table_name => 'svmc_miss_num',
22:00:26  21  	  data_table_name => '&bldtable',
22:00:26  22  	  xform_view_name => 'xformed_build_miss_num');
22:00:26  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:00:26  24  	  miss_table_name => 'svmc_miss_cat',
22:00:26  25  	  data_table_name => '&bldtable',
22:00:26  26  	  xform_view_name => 'xformed_build_miss_cat');
22:00:26  27  
22:00:26  28  	-- Perform outlier treatment.
22:00:26  29  	-- create clip table
22:00:26  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:00:26  31  
22:00:26  32  	-- populate clip table
22:00:26  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:00:26  34  	  clip_table_name => 'svmc_clip',
22:00:26  35  	  data_table_name => '&bldtable',
22:00:26  36  	  tail_frac	  => 0.025,
22:00:26  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:00:26  38  
22:00:26  39  	-- xform input data to winsorized data
22:00:26  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:00:26  41  	  clip_table_name => 'svmc_clip',
22:00:26  42  	  data_table_name => '&bldtable',
22:00:26  43  	  xform_view_name => 'svmc_winsor');
22:00:26  44  
22:00:26  45  	-- create normalization table
22:00:26  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:00:26  47  
22:00:26  48  	-- populate normalization table based on winsorized data
22:00:26  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:00:26  50  	  norm_table_name => 'svmc_norm',
22:00:26  51  	  data_table_name => 'svmc_winsor',
22:00:26  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:00:26  53  
22:00:26  54  	-- normalize the original data
22:00:26  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:00:26  56  	  norm_table_name => 'svmc_norm',
22:00:26  57  	  data_table_name => '&bldtable',
22:00:26  58  	  xform_view_name => 'svmc_build_prep');
22:00:26  59  END;
22:00:26  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.93
22:00:44 SQL> 
22:00:44 SQL> ---------------------
22:00:44 SQL> -- CREATE A NEW MODEL
22:00:44 SQL> --
22:00:44 SQL> -- Cleanup old model with the same name for repeat runs
22:00:44 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:00:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:00:44   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.43
22:00:45 SQL> 
22:00:45 SQL> -- Build a new SVM Model
22:00:45 SQL> BEGIN
22:00:45   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:00:45   3  	  model_name	      => '&model_name',
22:00:45   4  	  mining_function     => dbms_data_mining.classification,
22:00:45   5  	  data_table_name     => 'svmc_build_prep',
22:00:45   6  	  case_id_column_name => '&case_id',
22:00:45   7  	  target_column_name  => '&target',
22:00:45   8  	  settings_table_name => 'svmc_settings');
22:00:45   9  END;
22:00:45  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.45
22:01:13 SQL> 
22:01:13 SQL> -----------------------------------------------------------------------
22:01:13 SQL> --			       APPLY/score THE MODEL
22:01:13 SQL> -----------------------------------------------------------------------
22:01:13 SQL> 
22:01:13 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:01:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:01:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:01:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:01:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:01:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:01:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:01:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:01:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:01:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:01:13 SQL> -----------------------
22:01:13 SQL> -- PREPARE SCORING DATA
22:01:13 SQL> --
22:01:13 SQL> -- If the data for model creation has been prepared, then the data
22:01:13 SQL> -- to be scored using the model must be prepared in the same manner
22:01:13 SQL> -- in order to obtain meaningful results.
22:01:13 SQL> --
22:01:13 SQL> -- 1. Missing Value treatment for all Predictors and
22:01:13 SQL> -- 2. Normalization
22:01:13 SQL> -- No outlier treatment will be performed during test and apply. The
22:01:13 SQL> -- normalization step is sufficient, since the normalization parameters
22:01:13 SQL> -- already capture the effects of outlier treatment done with build data.
22:01:13 SQL> --
22:01:13 SQL> BEGIN
22:01:13   2  	-- Xform Test data to replace missing values
22:01:13   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:01:13   4  	  miss_table_name => 'svmc_miss_num',
22:01:13   5  	  data_table_name => '&scoretable',
22:01:13   6  	  xform_view_name => 'xformed_apply_miss_num');
22:01:13   7  
22:01:13   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:01:13   9  	  miss_table_name => 'svmc_miss_cat',
22:01:13  10  	  data_table_name => '&scoretable',
22:01:13  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:01:13  12  
22:01:13  13  	-- Normalize the data to be scored
22:01:13  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:01:13  15  	  norm_table_name => 'svmc_norm',
22:01:13  16  	  data_table_name => '&scoretable',
22:01:13  17  	  xform_view_name => 'svmc_apply_prep');
22:01:13  18  END;
22:01:13  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.10
22:01:14 SQL> 
22:01:14 SQL> -- Use same model_name used in score_gattn.sql
22:01:14 SQL> DEFINE model_name = 'forex14'
22:01:14 SQL> 
22:01:14 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
22:01:14 SQL> 
22:01:14 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
22:01:14   2  SELECT
22:01:14   3  prdate
22:01:14   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:01:14   5  ,sysdate
22:01:14   6  ,SUBSTR(prdate,1,3)pair
22:01:14   7  ,SUBSTR(prdate,4,19)ydate
22:01:14   8  FROM svmc_apply_prep
22:01:14   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
22:01:14 SQL> @chf_score1day_gattn.sql	2010-12-17 07:10:00
22:01:14 SQL> --
22:01:14 SQL> -- chf_score1day_gattn.sql
22:01:14 SQL> --
22:01:14 SQL> 
22:01:14 SQL> CREATE OR REPLACE VIEW sme AS
22:01:14   2  SELECT
22:01:14   3  'chf'||m.ydate prdate
22:01:14   4  ,NULL gattn
22:01:14   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:01:14   6  ,eur_g00
22:01:14   7  ,eur_g01
22:01:14   8  ,eur_g02
22:01:14   9  ,eur_g03
22:01:14  10  ,eur_g04
22:01:14  11  ,eur_g05
22:01:14  12  ,eur_g06
22:01:14  13  ,eur_g07
22:01:14  14  ,eur_g08
22:01:14  15  ,eur_g09
22:01:14  16  ,eur_g10
22:01:14  17  ,eur_g11
22:01:14  18  ,eur_g12
22:01:14  19  ,eur_g13
22:01:14  20  ,eur_g14
22:01:14  21  ,eur_g15
22:01:14  22  ,eur_g16
22:01:14  23  ,eur_g17
22:01:14  24  ,eur_g18
22:01:14  25  ,eur_g19
22:01:14  26  ,eur_g20
22:01:14  27  ,eur_g21
22:01:14  28  ,eur_g22
22:01:14  29  ,eur_g23
22:01:14  30  ,eur_g24
22:01:14  31  ,eur_g25
22:01:14  32  ,eur_g26
22:01:14  33  ,eur_g27
22:01:14  34  ,eur_g28
22:01:14  35  ,eur_g29
22:01:14  36  ,eur_g30
22:01:14  37  ,eur_g31
22:01:14  38  ,eur_g32
22:01:14  39  ,eur_g33
22:01:14  40  ,eur_g34
22:01:14  41  ,eur_g35
22:01:14  42  ,eur_g36
22:01:14  43  ,eur_g37
22:01:14  44  ,eur_g38
22:01:14  45  ,eur_g39
22:01:14  46  ,eur_g40
22:01:14  47  ,aud_g00
22:01:14  48  ,aud_g01
22:01:14  49  ,aud_g02
22:01:14  50  ,aud_g03
22:01:14  51  ,aud_g04
22:01:14  52  ,aud_g05
22:01:14  53  ,aud_g06
22:01:14  54  ,aud_g07
22:01:14  55  ,aud_g08
22:01:14  56  ,aud_g09
22:01:14  57  ,aud_g10
22:01:14  58  ,aud_g11
22:01:14  59  ,aud_g12
22:01:14  60  ,aud_g13
22:01:14  61  ,aud_g14
22:01:14  62  ,aud_g15
22:01:14  63  ,aud_g16
22:01:14  64  ,aud_g17
22:01:14  65  ,aud_g18
22:01:14  66  ,aud_g19
22:01:14  67  ,aud_g20
22:01:14  68  ,aud_g21
22:01:14  69  ,aud_g22
22:01:14  70  ,aud_g23
22:01:14  71  ,aud_g24
22:01:14  72  ,aud_g25
22:01:14  73  ,aud_g26
22:01:14  74  ,aud_g27
22:01:14  75  ,aud_g28
22:01:14  76  ,aud_g29
22:01:14  77  ,aud_g30
22:01:14  78  ,aud_g31
22:01:14  79  ,aud_g32
22:01:14  80  ,aud_g33
22:01:14  81  ,aud_g34
22:01:14  82  ,aud_g35
22:01:14  83  ,aud_g36
22:01:14  84  ,aud_g37
22:01:14  85  ,aud_g38
22:01:14  86  ,aud_g39
22:01:14  87  ,aud_g40
22:01:14  88  ,gbp_g00
22:01:14  89  ,gbp_g01
22:01:14  90  ,gbp_g02
22:01:14  91  ,gbp_g03
22:01:14  92  ,gbp_g04
22:01:14  93  ,gbp_g05
22:01:14  94  ,gbp_g06
22:01:14  95  ,gbp_g07
22:01:14  96  ,gbp_g08
22:01:14  97  ,gbp_g09
22:01:14  98  ,gbp_g10
22:01:14  99  ,gbp_g11
22:01:14 100  ,gbp_g12
22:01:14 101  ,gbp_g13
22:01:14 102  ,gbp_g14
22:01:14 103  ,gbp_g15
22:01:14 104  ,gbp_g16
22:01:14 105  ,gbp_g17
22:01:14 106  ,gbp_g18
22:01:14 107  ,gbp_g19
22:01:14 108  ,gbp_g20
22:01:14 109  ,gbp_g21
22:01:14 110  ,gbp_g22
22:01:14 111  ,gbp_g23
22:01:14 112  ,gbp_g24
22:01:14 113  ,gbp_g25
22:01:14 114  ,gbp_g26
22:01:14 115  ,gbp_g27
22:01:14 116  ,gbp_g28
22:01:14 117  ,gbp_g29
22:01:14 118  ,gbp_g30
22:01:14 119  ,gbp_g31
22:01:14 120  ,gbp_g32
22:01:14 121  ,gbp_g33
22:01:14 122  ,gbp_g34
22:01:14 123  ,gbp_g35
22:01:14 124  ,gbp_g36
22:01:14 125  ,gbp_g37
22:01:14 126  ,gbp_g38
22:01:14 127  ,gbp_g39
22:01:14 128  ,gbp_g40
22:01:14 129  ,jpy_g00
22:01:14 130  ,jpy_g01
22:01:14 131  ,jpy_g02
22:01:14 132  ,jpy_g03
22:01:14 133  ,jpy_g04
22:01:14 134  ,jpy_g05
22:01:14 135  ,jpy_g06
22:01:14 136  ,jpy_g07
22:01:14 137  ,jpy_g08
22:01:14 138  ,jpy_g09
22:01:14 139  ,jpy_g10
22:01:14 140  ,jpy_g11
22:01:14 141  ,jpy_g12
22:01:14 142  ,jpy_g13
22:01:14 143  ,jpy_g14
22:01:14 144  ,jpy_g15
22:01:14 145  ,jpy_g16
22:01:14 146  ,jpy_g17
22:01:14 147  ,jpy_g18
22:01:14 148  ,jpy_g19
22:01:14 149  ,jpy_g20
22:01:14 150  ,jpy_g21
22:01:14 151  ,jpy_g22
22:01:14 152  ,jpy_g23
22:01:14 153  ,jpy_g24
22:01:14 154  ,jpy_g25
22:01:14 155  ,jpy_g26
22:01:14 156  ,jpy_g27
22:01:14 157  ,jpy_g28
22:01:14 158  ,jpy_g29
22:01:14 159  ,jpy_g30
22:01:14 160  ,jpy_g31
22:01:14 161  ,jpy_g32
22:01:14 162  ,jpy_g33
22:01:14 163  ,jpy_g34
22:01:14 164  ,jpy_g35
22:01:14 165  ,jpy_g36
22:01:14 166  ,jpy_g37
22:01:14 167  ,jpy_g38
22:01:14 168  ,jpy_g39
22:01:14 169  ,jpy_g40
22:01:14 170  ,cad_g00
22:01:14 171  ,cad_g01
22:01:14 172  ,cad_g02
22:01:14 173  ,cad_g03
22:01:14 174  ,cad_g04
22:01:14 175  ,cad_g05
22:01:14 176  ,cad_g06
22:01:14 177  ,cad_g07
22:01:14 178  ,cad_g08
22:01:14 179  ,cad_g09
22:01:14 180  ,cad_g10
22:01:14 181  ,cad_g11
22:01:14 182  ,cad_g12
22:01:14 183  ,cad_g13
22:01:14 184  ,cad_g14
22:01:14 185  ,cad_g15
22:01:14 186  ,cad_g16
22:01:14 187  ,cad_g17
22:01:14 188  ,cad_g18
22:01:14 189  ,cad_g19
22:01:14 190  ,cad_g20
22:01:14 191  ,cad_g21
22:01:14 192  ,cad_g22
22:01:14 193  ,cad_g23
22:01:14 194  ,cad_g24
22:01:14 195  ,cad_g25
22:01:14 196  ,cad_g26
22:01:14 197  ,cad_g27
22:01:14 198  ,cad_g28
22:01:14 199  ,cad_g29
22:01:14 200  ,cad_g30
22:01:14 201  ,cad_g31
22:01:14 202  ,cad_g32
22:01:14 203  ,cad_g33
22:01:14 204  ,cad_g34
22:01:14 205  ,cad_g35
22:01:14 206  ,cad_g36
22:01:14 207  ,cad_g37
22:01:14 208  ,cad_g38
22:01:14 209  ,cad_g39
22:01:14 210  ,cad_g40
22:01:14 211  ,chf_g00
22:01:14 212  ,chf_g01
22:01:14 213  ,chf_g02
22:01:14 214  ,chf_g03
22:01:14 215  ,chf_g04
22:01:14 216  ,chf_g05
22:01:14 217  ,chf_g06
22:01:14 218  ,chf_g07
22:01:14 219  ,chf_g08
22:01:14 220  ,chf_g09
22:01:14 221  ,chf_g10
22:01:14 222  ,chf_g11
22:01:14 223  ,chf_g12
22:01:14 224  ,chf_g13
22:01:14 225  ,chf_g14
22:01:14 226  ,chf_g15
22:01:14 227  ,chf_g16
22:01:14 228  ,chf_g17
22:01:14 229  ,chf_g18
22:01:14 230  ,chf_g19
22:01:14 231  ,chf_g20
22:01:14 232  ,chf_g21
22:01:14 233  ,chf_g22
22:01:14 234  ,chf_g23
22:01:14 235  ,chf_g24
22:01:14 236  ,chf_g25
22:01:14 237  ,chf_g26
22:01:14 238  ,chf_g27
22:01:14 239  ,chf_g28
22:01:14 240  ,chf_g29
22:01:14 241  ,chf_g30
22:01:14 242  ,chf_g31
22:01:14 243  ,chf_g32
22:01:14 244  ,chf_g33
22:01:14 245  ,chf_g34
22:01:14 246  ,chf_g35
22:01:14 247  ,chf_g36
22:01:14 248  ,chf_g37
22:01:14 249  ,chf_g38
22:01:14 250  ,chf_g39
22:01:14 251  ,chf_g40
22:01:14 252  FROM chf_ms14 m
22:01:14 253  WHERE m.ydate = '&1'||' '||'&2'
22:01:14 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'07:10:00'

View created.

Elapsed: 00:00:00.13
22:01:15 SQL> 
22:01:15 SQL> -- rpt
22:01:15 SQL> -- We should see just 1 row:
22:01:15 SQL> 
22:01:15 SQL> SELECT COUNT(prdate) FROM sme
22:01:15   2  
22:01:15 SQL> -- Build the model:
22:01:15 SQL> CREATE OR REPLACE VIEW bme AS
22:01:15   2  SELECT
22:01:15   3  'chf'||m.ydate prdate
22:01:15   4  ,gattn
22:01:15   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:01:15   6  ,eur_g00
22:01:15   7  ,eur_g01
22:01:15   8  ,eur_g02
22:01:15   9  ,eur_g03
22:01:15  10  ,eur_g04
22:01:15  11  ,eur_g05
22:01:15  12  ,eur_g06
22:01:15  13  ,eur_g07
22:01:15  14  ,eur_g08
22:01:15  15  ,eur_g09
22:01:15  16  ,eur_g10
22:01:15  17  ,eur_g11
22:01:15  18  ,eur_g12
22:01:15  19  ,eur_g13
22:01:15  20  ,eur_g14
22:01:15  21  ,eur_g15
22:01:15  22  ,eur_g16
22:01:15  23  ,eur_g17
22:01:15  24  ,eur_g18
22:01:15  25  ,eur_g19
22:01:15  26  ,eur_g20
22:01:15  27  ,eur_g21
22:01:15  28  ,eur_g22
22:01:15  29  ,eur_g23
22:01:15  30  ,eur_g24
22:01:15  31  ,eur_g25
22:01:15  32  ,eur_g26
22:01:15  33  ,eur_g27
22:01:15  34  ,eur_g28
22:01:15  35  ,eur_g29
22:01:15  36  ,eur_g30
22:01:15  37  ,eur_g31
22:01:15  38  ,eur_g32
22:01:15  39  ,eur_g33
22:01:15  40  ,eur_g34
22:01:15  41  ,eur_g35
22:01:15  42  ,eur_g36
22:01:15  43  ,eur_g37
22:01:15  44  ,eur_g38
22:01:15  45  ,eur_g39
22:01:15  46  ,eur_g40
22:01:15  47  ,aud_g00
22:01:15  48  ,aud_g01
22:01:15  49  ,aud_g02
22:01:15  50  ,aud_g03
22:01:15  51  ,aud_g04
22:01:15  52  ,aud_g05
22:01:15  53  ,aud_g06
22:01:15  54  ,aud_g07
22:01:15  55  ,aud_g08
22:01:15  56  ,aud_g09
22:01:15  57  ,aud_g10
22:01:15  58  ,aud_g11
22:01:15  59  ,aud_g12
22:01:15  60  ,aud_g13
22:01:15  61  ,aud_g14
22:01:15  62  ,aud_g15
22:01:15  63  ,aud_g16
22:01:15  64  ,aud_g17
22:01:15  65  ,aud_g18
22:01:15  66  ,aud_g19
22:01:15  67  ,aud_g20
22:01:15  68  ,aud_g21
22:01:15  69  ,aud_g22
22:01:15  70  ,aud_g23
22:01:15  71  ,aud_g24
22:01:15  72  ,aud_g25
22:01:15  73  ,aud_g26
22:01:15  74  ,aud_g27
22:01:15  75  ,aud_g28
22:01:15  76  ,aud_g29
22:01:15  77  ,aud_g30
22:01:15  78  ,aud_g31
22:01:15  79  ,aud_g32
22:01:15  80  ,aud_g33
22:01:15  81  ,aud_g34
22:01:15  82  ,aud_g35
22:01:15  83  ,aud_g36
22:01:15  84  ,aud_g37
22:01:15  85  ,aud_g38
22:01:15  86  ,aud_g39
22:01:15  87  ,aud_g40
22:01:15  88  ,gbp_g00
22:01:15  89  ,gbp_g01
22:01:15  90  ,gbp_g02
22:01:15  91  ,gbp_g03
22:01:15  92  ,gbp_g04
22:01:15  93  ,gbp_g05
22:01:15  94  ,gbp_g06
22:01:15  95  ,gbp_g07
22:01:15  96  ,gbp_g08
22:01:15  97  ,gbp_g09
22:01:15  98  ,gbp_g10
22:01:15  99  ,gbp_g11
22:01:15 100  ,gbp_g12
22:01:15 101  ,gbp_g13
22:01:15 102  ,gbp_g14
22:01:15 103  ,gbp_g15
22:01:15 104  ,gbp_g16
22:01:15 105  ,gbp_g17
22:01:15 106  ,gbp_g18
22:01:15 107  ,gbp_g19
22:01:15 108  ,gbp_g20
22:01:15 109  ,gbp_g21
22:01:15 110  ,gbp_g22
22:01:15 111  ,gbp_g23
22:01:15 112  ,gbp_g24
22:01:15 113  ,gbp_g25
22:01:15 114  ,gbp_g26
22:01:15 115  ,gbp_g27
22:01:15 116  ,gbp_g28
22:01:15 117  ,gbp_g29
22:01:15 118  ,gbp_g30
22:01:15 119  ,gbp_g31
22:01:15 120  ,gbp_g32
22:01:15 121  ,gbp_g33
22:01:15 122  ,gbp_g34
22:01:15 123  ,gbp_g35
22:01:15 124  ,gbp_g36
22:01:15 125  ,gbp_g37
22:01:15 126  ,gbp_g38
22:01:15 127  ,gbp_g39
22:01:15 128  ,gbp_g40
22:01:15 129  ,jpy_g00
22:01:15 130  ,jpy_g01
22:01:15 131  ,jpy_g02
22:01:15 132  ,jpy_g03
22:01:15 133  ,jpy_g04
22:01:15 134  ,jpy_g05
22:01:15 135  ,jpy_g06
22:01:15 136  ,jpy_g07
22:01:15 137  ,jpy_g08
22:01:15 138  ,jpy_g09
22:01:15 139  ,jpy_g10
22:01:15 140  ,jpy_g11
22:01:15 141  ,jpy_g12
22:01:15 142  ,jpy_g13
22:01:15 143  ,jpy_g14
22:01:15 144  ,jpy_g15
22:01:15 145  ,jpy_g16
22:01:15 146  ,jpy_g17
22:01:15 147  ,jpy_g18
22:01:15 148  ,jpy_g19
22:01:15 149  ,jpy_g20
22:01:15 150  ,jpy_g21
22:01:15 151  ,jpy_g22
22:01:15 152  ,jpy_g23
22:01:15 153  ,jpy_g24
22:01:15 154  ,jpy_g25
22:01:15 155  ,jpy_g26
22:01:15 156  ,jpy_g27
22:01:15 157  ,jpy_g28
22:01:15 158  ,jpy_g29
22:01:15 159  ,jpy_g30
22:01:15 160  ,jpy_g31
22:01:15 161  ,jpy_g32
22:01:15 162  ,jpy_g33
22:01:15 163  ,jpy_g34
22:01:15 164  ,jpy_g35
22:01:15 165  ,jpy_g36
22:01:15 166  ,jpy_g37
22:01:15 167  ,jpy_g38
22:01:15 168  ,jpy_g39
22:01:15 169  ,jpy_g40
22:01:15 170  ,cad_g00
22:01:15 171  ,cad_g01
22:01:15 172  ,cad_g02
22:01:15 173  ,cad_g03
22:01:15 174  ,cad_g04
22:01:15 175  ,cad_g05
22:01:15 176  ,cad_g06
22:01:15 177  ,cad_g07
22:01:15 178  ,cad_g08
22:01:15 179  ,cad_g09
22:01:15 180  ,cad_g10
22:01:15 181  ,cad_g11
22:01:15 182  ,cad_g12
22:01:15 183  ,cad_g13
22:01:15 184  ,cad_g14
22:01:15 185  ,cad_g15
22:01:15 186  ,cad_g16
22:01:15 187  ,cad_g17
22:01:15 188  ,cad_g18
22:01:15 189  ,cad_g19
22:01:15 190  ,cad_g20
22:01:15 191  ,cad_g21
22:01:15 192  ,cad_g22
22:01:15 193  ,cad_g23
22:01:15 194  ,cad_g24
22:01:15 195  ,cad_g25
22:01:15 196  ,cad_g26
22:01:15 197  ,cad_g27
22:01:15 198  ,cad_g28
22:01:15 199  ,cad_g29
22:01:15 200  ,cad_g30
22:01:15 201  ,cad_g31
22:01:15 202  ,cad_g32
22:01:15 203  ,cad_g33
22:01:15 204  ,cad_g34
22:01:15 205  ,cad_g35
22:01:15 206  ,cad_g36
22:01:15 207  ,cad_g37
22:01:15 208  ,cad_g38
22:01:15 209  ,cad_g39
22:01:15 210  ,cad_g40
22:01:15 211  ,chf_g00
22:01:15 212  ,chf_g01
22:01:15 213  ,chf_g02
22:01:15 214  ,chf_g03
22:01:15 215  ,chf_g04
22:01:15 216  ,chf_g05
22:01:15 217  ,chf_g06
22:01:15 218  ,chf_g07
22:01:15 219  ,chf_g08
22:01:15 220  ,chf_g09
22:01:15 221  ,chf_g10
22:01:15 222  ,chf_g11
22:01:15 223  ,chf_g12
22:01:15 224  ,chf_g13
22:01:15 225  ,chf_g14
22:01:15 226  ,chf_g15
22:01:15 227  ,chf_g16
22:01:15 228  ,chf_g17
22:01:15 229  ,chf_g18
22:01:15 230  ,chf_g19
22:01:15 231  ,chf_g20
22:01:15 232  ,chf_g21
22:01:15 233  ,chf_g22
22:01:15 234  ,chf_g23
22:01:15 235  ,chf_g24
22:01:15 236  ,chf_g25
22:01:15 237  ,chf_g26
22:01:15 238  ,chf_g27
22:01:15 239  ,chf_g28
22:01:15 240  ,chf_g29
22:01:15 241  ,chf_g30
22:01:15 242  ,chf_g31
22:01:15 243  ,chf_g32
22:01:15 244  ,chf_g33
22:01:15 245  ,chf_g34
22:01:15 246  ,chf_g35
22:01:15 247  ,chf_g36
22:01:15 248  ,chf_g37
22:01:15 249  ,chf_g38
22:01:15 250  ,chf_g39
22:01:15 251  ,chf_g40
22:01:15 252  FROM chf_ms14 m
22:01:15 253  WHERE gattn IN('nup','up')
22:01:15 254  AND 1+m.ydate < '&1'||' '||'&2'
22:01:15 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'07:10:00'

View created.

Elapsed: 00:00:00.11
22:01:15 SQL> 
22:01:15 SQL> -- rpt
22:01:15 SQL> 
22:01:15 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
22:01:15   2  
22:01:15 SQL> SELECT MAX(prdate) FROM bme
22:01:15   2  
22:01:15 SQL> -- Now build model from bme and score sme
22:01:15 SQL> @score1gattn.sql
22:01:15 SQL> -- score1gattn.sql
22:01:15 SQL> 
22:01:15 SQL> -- Does the 1st SVM score
22:01:15 SQL> 
22:01:15 SQL> -- Fill up svmc_apply_prep
22:01:15 SQL> @score_gattn.sql
22:01:15 SQL> --
22:01:15 SQL> -- score_gattn.sql
22:01:15 SQL> --
22:01:15 SQL> 
22:01:15 SQL> -- usage: score_gattn.sql
22:01:15 SQL> 
22:01:15 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:01:15 SQL> 
22:01:15 SQL> DEFINE target	= 'gattn'
22:01:15 SQL> DEFINE model_name = 'forex14'
22:01:15 SQL> DEFINE bldtable	= 'bme'
22:01:15 SQL> DEFINE scoretable = 'sme'
22:01:15 SQL> DEFINE case_id	= 'prdate'
22:01:15 SQL> 
22:01:15 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:01:15 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:01:15 SQL> 
22:01:15 SQL> -- Builds an SVM model using pl/sql.
22:01:15 SQL> 
22:01:15 SQL> -----------------------------------------------------------------------
22:01:15 SQL> --			    BUILD THE MODEL
22:01:15 SQL> -----------------------------------------------------------------------
22:01:15 SQL> 
22:01:15 SQL> -- Cleanup old build data preparation objects for repeat runs
22:01:15 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
22:01:15 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
22:01:15 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
22:01:15 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
22:01:15 SQL> 
22:01:15 SQL> 
22:01:15 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:01:15 SQL> --
22:01:15 SQL> -- DROP	TABLE svmc_settings ;
22:01:15 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:01:15 SQL> -- DELETE svmc_settings;
22:01:15 SQL> 
22:01:15 SQL> -- The default classification algorithm is Naive Bayes. So override
22:01:15 SQL> -- this choice to SVM using a settings table.
22:01:15 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:01:15 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:01:15 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:01:15 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:01:15 SQL> -- models.
22:01:15 SQL> --
22:01:15 SQL> 
22:01:15 SQL> -- Do this once and then comment it out.
22:01:15 SQL> -- That makes script go faster.
22:01:15 SQL> -- BEGIN
22:01:15 SQL> -- -- Populate settings table
22:01:15 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:01:15 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:01:15 SQL> --
22:01:15 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:01:15 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:01:15 SQL> --
22:01:15 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:01:15 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:01:15 SQL> --   COMMIT;
22:01:15 SQL> -- END;
22:01:15 SQL> -- /
22:01:15 SQL> 
22:01:15 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
22:01:15 SQL> 
22:01:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:01:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:01:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:01:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:01:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:01:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:01:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:01:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:01:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:01:15 SQL> 
22:01:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:01:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:01:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:01:15 SQL> 
22:01:15 SQL> --------------------------------
22:01:15 SQL> -- PREPARE BUILD (TRAINING) DATA
22:01:15 SQL> --
22:01:15 SQL> 
22:01:15 SQL> -- 1. Missing Value treatment for all Predictors and
22:01:15 SQL> -- 2. Outlier Treatment and
22:01:15 SQL> -- 3. Normalization are performed below.
22:01:15 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:01:15 SQL> --    normalized here.
22:01:15 SQL> 
22:01:15 SQL> BEGIN
22:01:15   2  	-- Perform missing value treatment for all predictors
22:01:15   3  	-- create miss tables
22:01:15   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:01:15   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:01:15   6  
22:01:15   7  	-- populate miss tables
22:01:15   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:01:15   9  	  miss_table_name => 'svmc_miss_num',
22:01:15  10  	  data_table_name => '&bldtable',
22:01:15  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:01:15  12  
22:01:15  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:01:15  14  	  miss_table_name => 'svmc_miss_cat',
22:01:15  15  	  data_table_name => '&bldtable',
22:01:15  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:01:15  17  
22:01:15  18  	-- xform input data to replace missing values
22:01:15  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:01:15  20  	  miss_table_name => 'svmc_miss_num',
22:01:15  21  	  data_table_name => '&bldtable',
22:01:15  22  	  xform_view_name => 'xformed_build_miss_num');
22:01:15  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:01:15  24  	  miss_table_name => 'svmc_miss_cat',
22:01:15  25  	  data_table_name => '&bldtable',
22:01:15  26  	  xform_view_name => 'xformed_build_miss_cat');
22:01:15  27  
22:01:15  28  	-- Perform outlier treatment.
22:01:15  29  	-- create clip table
22:01:15  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:01:15  31  
22:01:15  32  	-- populate clip table
22:01:15  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:01:15  34  	  clip_table_name => 'svmc_clip',
22:01:15  35  	  data_table_name => '&bldtable',
22:01:15  36  	  tail_frac	  => 0.025,
22:01:15  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:01:15  38  
22:01:15  39  	-- xform input data to winsorized data
22:01:15  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:01:15  41  	  clip_table_name => 'svmc_clip',
22:01:15  42  	  data_table_name => '&bldtable',
22:01:15  43  	  xform_view_name => 'svmc_winsor');
22:01:15  44  
22:01:15  45  	-- create normalization table
22:01:15  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:01:15  47  
22:01:15  48  	-- populate normalization table based on winsorized data
22:01:15  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:01:15  50  	  norm_table_name => 'svmc_norm',
22:01:15  51  	  data_table_name => 'svmc_winsor',
22:01:15  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:01:15  53  
22:01:15  54  	-- normalize the original data
22:01:15  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:01:15  56  	  norm_table_name => 'svmc_norm',
22:01:15  57  	  data_table_name => '&bldtable',
22:01:15  58  	  xform_view_name => 'svmc_build_prep');
22:01:15  59  END;
22:01:15  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.94
22:01:33 SQL> 
22:01:33 SQL> ---------------------
22:01:33 SQL> -- CREATE A NEW MODEL
22:01:33 SQL> --
22:01:33 SQL> -- Cleanup old model with the same name for repeat runs
22:01:33 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:01:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:01:33   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.49
22:01:34 SQL> 
22:01:34 SQL> -- Build a new SVM Model
22:01:34 SQL> BEGIN
22:01:34   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:01:34   3  	  model_name	      => '&model_name',
22:01:34   4  	  mining_function     => dbms_data_mining.classification,
22:01:34   5  	  data_table_name     => 'svmc_build_prep',
22:01:34   6  	  case_id_column_name => '&case_id',
22:01:34   7  	  target_column_name  => '&target',
22:01:34   8  	  settings_table_name => 'svmc_settings');
22:01:34   9  END;
22:01:34  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.96
22:02:01 SQL> 
22:02:01 SQL> -----------------------------------------------------------------------
22:02:01 SQL> --			       APPLY/score THE MODEL
22:02:01 SQL> -----------------------------------------------------------------------
22:02:01 SQL> 
22:02:01 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:02:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:02:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:02:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:02:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:02:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:02:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:02:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:02:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:02:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:02:01 SQL> -----------------------
22:02:01 SQL> -- PREPARE SCORING DATA
22:02:01 SQL> --
22:02:01 SQL> -- If the data for model creation has been prepared, then the data
22:02:01 SQL> -- to be scored using the model must be prepared in the same manner
22:02:01 SQL> -- in order to obtain meaningful results.
22:02:01 SQL> --
22:02:01 SQL> -- 1. Missing Value treatment for all Predictors and
22:02:01 SQL> -- 2. Normalization
22:02:01 SQL> -- No outlier treatment will be performed during test and apply. The
22:02:01 SQL> -- normalization step is sufficient, since the normalization parameters
22:02:01 SQL> -- already capture the effects of outlier treatment done with build data.
22:02:01 SQL> --
22:02:01 SQL> BEGIN
22:02:01   2  	-- Xform Test data to replace missing values
22:02:01   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:02:01   4  	  miss_table_name => 'svmc_miss_num',
22:02:01   5  	  data_table_name => '&scoretable',
22:02:01   6  	  xform_view_name => 'xformed_apply_miss_num');
22:02:01   7  
22:02:01   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:02:01   9  	  miss_table_name => 'svmc_miss_cat',
22:02:01  10  	  data_table_name => '&scoretable',
22:02:01  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:02:01  12  
22:02:01  13  	-- Normalize the data to be scored
22:02:01  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:02:01  15  	  norm_table_name => 'svmc_norm',
22:02:01  16  	  data_table_name => '&scoretable',
22:02:01  17  	  xform_view_name => 'svmc_apply_prep');
22:02:01  18  END;
22:02:01  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.12
22:02:03 SQL> 
22:02:03 SQL> -- Use same model_name used in score_gattn.sql
22:02:03 SQL> DEFINE model_name = 'forex14'
22:02:03 SQL> 
22:02:03 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
22:02:03 SQL> 
22:02:03 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
22:02:03   2  SELECT
22:02:03   3  prdate
22:02:03   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:02:03   5  ,sysdate
22:02:03   6  ,SUBSTR(prdate,1,3)pair
22:02:03   7  ,SUBSTR(prdate,4,19)ydate
22:02:03   8  FROM svmc_apply_prep
22:02:03   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
22:02:03 SQL> @chf_score1day_gattn.sql	2010-12-17 07:05:00
22:02:03 SQL> --
22:02:03 SQL> -- chf_score1day_gattn.sql
22:02:03 SQL> --
22:02:03 SQL> 
22:02:03 SQL> CREATE OR REPLACE VIEW sme AS
22:02:03   2  SELECT
22:02:03   3  'chf'||m.ydate prdate
22:02:03   4  ,NULL gattn
22:02:03   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:02:03   6  ,eur_g00
22:02:03   7  ,eur_g01
22:02:03   8  ,eur_g02
22:02:03   9  ,eur_g03
22:02:03  10  ,eur_g04
22:02:03  11  ,eur_g05
22:02:03  12  ,eur_g06
22:02:03  13  ,eur_g07
22:02:03  14  ,eur_g08
22:02:03  15  ,eur_g09
22:02:03  16  ,eur_g10
22:02:03  17  ,eur_g11
22:02:03  18  ,eur_g12
22:02:03  19  ,eur_g13
22:02:03  20  ,eur_g14
22:02:03  21  ,eur_g15
22:02:03  22  ,eur_g16
22:02:03  23  ,eur_g17
22:02:03  24  ,eur_g18
22:02:03  25  ,eur_g19
22:02:03  26  ,eur_g20
22:02:03  27  ,eur_g21
22:02:03  28  ,eur_g22
22:02:03  29  ,eur_g23
22:02:03  30  ,eur_g24
22:02:03  31  ,eur_g25
22:02:03  32  ,eur_g26
22:02:03  33  ,eur_g27
22:02:03  34  ,eur_g28
22:02:03  35  ,eur_g29
22:02:03  36  ,eur_g30
22:02:03  37  ,eur_g31
22:02:03  38  ,eur_g32
22:02:03  39  ,eur_g33
22:02:03  40  ,eur_g34
22:02:03  41  ,eur_g35
22:02:03  42  ,eur_g36
22:02:03  43  ,eur_g37
22:02:03  44  ,eur_g38
22:02:03  45  ,eur_g39
22:02:03  46  ,eur_g40
22:02:03  47  ,aud_g00
22:02:03  48  ,aud_g01
22:02:03  49  ,aud_g02
22:02:03  50  ,aud_g03
22:02:03  51  ,aud_g04
22:02:03  52  ,aud_g05
22:02:03  53  ,aud_g06
22:02:03  54  ,aud_g07
22:02:03  55  ,aud_g08
22:02:03  56  ,aud_g09
22:02:03  57  ,aud_g10
22:02:03  58  ,aud_g11
22:02:03  59  ,aud_g12
22:02:03  60  ,aud_g13
22:02:03  61  ,aud_g14
22:02:03  62  ,aud_g15
22:02:03  63  ,aud_g16
22:02:03  64  ,aud_g17
22:02:03  65  ,aud_g18
22:02:03  66  ,aud_g19
22:02:03  67  ,aud_g20
22:02:03  68  ,aud_g21
22:02:03  69  ,aud_g22
22:02:03  70  ,aud_g23
22:02:03  71  ,aud_g24
22:02:03  72  ,aud_g25
22:02:03  73  ,aud_g26
22:02:03  74  ,aud_g27
22:02:03  75  ,aud_g28
22:02:03  76  ,aud_g29
22:02:03  77  ,aud_g30
22:02:03  78  ,aud_g31
22:02:03  79  ,aud_g32
22:02:03  80  ,aud_g33
22:02:03  81  ,aud_g34
22:02:03  82  ,aud_g35
22:02:03  83  ,aud_g36
22:02:03  84  ,aud_g37
22:02:03  85  ,aud_g38
22:02:03  86  ,aud_g39
22:02:03  87  ,aud_g40
22:02:03  88  ,gbp_g00
22:02:03  89  ,gbp_g01
22:02:03  90  ,gbp_g02
22:02:03  91  ,gbp_g03
22:02:03  92  ,gbp_g04
22:02:03  93  ,gbp_g05
22:02:03  94  ,gbp_g06
22:02:03  95  ,gbp_g07
22:02:03  96  ,gbp_g08
22:02:03  97  ,gbp_g09
22:02:03  98  ,gbp_g10
22:02:03  99  ,gbp_g11
22:02:03 100  ,gbp_g12
22:02:03 101  ,gbp_g13
22:02:03 102  ,gbp_g14
22:02:03 103  ,gbp_g15
22:02:03 104  ,gbp_g16
22:02:03 105  ,gbp_g17
22:02:03 106  ,gbp_g18
22:02:03 107  ,gbp_g19
22:02:03 108  ,gbp_g20
22:02:03 109  ,gbp_g21
22:02:03 110  ,gbp_g22
22:02:03 111  ,gbp_g23
22:02:03 112  ,gbp_g24
22:02:03 113  ,gbp_g25
22:02:03 114  ,gbp_g26
22:02:03 115  ,gbp_g27
22:02:03 116  ,gbp_g28
22:02:03 117  ,gbp_g29
22:02:03 118  ,gbp_g30
22:02:03 119  ,gbp_g31
22:02:03 120  ,gbp_g32
22:02:03 121  ,gbp_g33
22:02:03 122  ,gbp_g34
22:02:03 123  ,gbp_g35
22:02:03 124  ,gbp_g36
22:02:03 125  ,gbp_g37
22:02:03 126  ,gbp_g38
22:02:03 127  ,gbp_g39
22:02:03 128  ,gbp_g40
22:02:03 129  ,jpy_g00
22:02:03 130  ,jpy_g01
22:02:03 131  ,jpy_g02
22:02:03 132  ,jpy_g03
22:02:03 133  ,jpy_g04
22:02:03 134  ,jpy_g05
22:02:03 135  ,jpy_g06
22:02:03 136  ,jpy_g07
22:02:03 137  ,jpy_g08
22:02:03 138  ,jpy_g09
22:02:03 139  ,jpy_g10
22:02:03 140  ,jpy_g11
22:02:03 141  ,jpy_g12
22:02:03 142  ,jpy_g13
22:02:03 143  ,jpy_g14
22:02:03 144  ,jpy_g15
22:02:03 145  ,jpy_g16
22:02:03 146  ,jpy_g17
22:02:03 147  ,jpy_g18
22:02:03 148  ,jpy_g19
22:02:03 149  ,jpy_g20
22:02:03 150  ,jpy_g21
22:02:03 151  ,jpy_g22
22:02:03 152  ,jpy_g23
22:02:03 153  ,jpy_g24
22:02:03 154  ,jpy_g25
22:02:03 155  ,jpy_g26
22:02:03 156  ,jpy_g27
22:02:03 157  ,jpy_g28
22:02:03 158  ,jpy_g29
22:02:03 159  ,jpy_g30
22:02:03 160  ,jpy_g31
22:02:03 161  ,jpy_g32
22:02:03 162  ,jpy_g33
22:02:03 163  ,jpy_g34
22:02:03 164  ,jpy_g35
22:02:03 165  ,jpy_g36
22:02:03 166  ,jpy_g37
22:02:03 167  ,jpy_g38
22:02:03 168  ,jpy_g39
22:02:03 169  ,jpy_g40
22:02:03 170  ,cad_g00
22:02:03 171  ,cad_g01
22:02:03 172  ,cad_g02
22:02:03 173  ,cad_g03
22:02:03 174  ,cad_g04
22:02:03 175  ,cad_g05
22:02:03 176  ,cad_g06
22:02:03 177  ,cad_g07
22:02:03 178  ,cad_g08
22:02:03 179  ,cad_g09
22:02:03 180  ,cad_g10
22:02:03 181  ,cad_g11
22:02:03 182  ,cad_g12
22:02:03 183  ,cad_g13
22:02:03 184  ,cad_g14
22:02:03 185  ,cad_g15
22:02:03 186  ,cad_g16
22:02:03 187  ,cad_g17
22:02:03 188  ,cad_g18
22:02:03 189  ,cad_g19
22:02:03 190  ,cad_g20
22:02:03 191  ,cad_g21
22:02:03 192  ,cad_g22
22:02:03 193  ,cad_g23
22:02:03 194  ,cad_g24
22:02:03 195  ,cad_g25
22:02:03 196  ,cad_g26
22:02:03 197  ,cad_g27
22:02:03 198  ,cad_g28
22:02:03 199  ,cad_g29
22:02:03 200  ,cad_g30
22:02:03 201  ,cad_g31
22:02:03 202  ,cad_g32
22:02:03 203  ,cad_g33
22:02:03 204  ,cad_g34
22:02:03 205  ,cad_g35
22:02:03 206  ,cad_g36
22:02:03 207  ,cad_g37
22:02:03 208  ,cad_g38
22:02:03 209  ,cad_g39
22:02:03 210  ,cad_g40
22:02:03 211  ,chf_g00
22:02:03 212  ,chf_g01
22:02:03 213  ,chf_g02
22:02:03 214  ,chf_g03
22:02:03 215  ,chf_g04
22:02:03 216  ,chf_g05
22:02:03 217  ,chf_g06
22:02:03 218  ,chf_g07
22:02:03 219  ,chf_g08
22:02:03 220  ,chf_g09
22:02:03 221  ,chf_g10
22:02:03 222  ,chf_g11
22:02:03 223  ,chf_g12
22:02:03 224  ,chf_g13
22:02:03 225  ,chf_g14
22:02:03 226  ,chf_g15
22:02:03 227  ,chf_g16
22:02:03 228  ,chf_g17
22:02:03 229  ,chf_g18
22:02:03 230  ,chf_g19
22:02:03 231  ,chf_g20
22:02:03 232  ,chf_g21
22:02:03 233  ,chf_g22
22:02:03 234  ,chf_g23
22:02:03 235  ,chf_g24
22:02:03 236  ,chf_g25
22:02:03 237  ,chf_g26
22:02:03 238  ,chf_g27
22:02:03 239  ,chf_g28
22:02:03 240  ,chf_g29
22:02:03 241  ,chf_g30
22:02:03 242  ,chf_g31
22:02:03 243  ,chf_g32
22:02:03 244  ,chf_g33
22:02:03 245  ,chf_g34
22:02:03 246  ,chf_g35
22:02:03 247  ,chf_g36
22:02:03 248  ,chf_g37
22:02:03 249  ,chf_g38
22:02:03 250  ,chf_g39
22:02:03 251  ,chf_g40
22:02:03 252  FROM chf_ms14 m
22:02:03 253  WHERE m.ydate = '&1'||' '||'&2'
22:02:03 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'07:05:00'

View created.

Elapsed: 00:00:00.13
22:02:03 SQL> 
22:02:03 SQL> -- rpt
22:02:03 SQL> -- We should see just 1 row:
22:02:03 SQL> 
22:02:03 SQL> SELECT COUNT(prdate) FROM sme
22:02:03   2  
22:02:03 SQL> -- Build the model:
22:02:03 SQL> CREATE OR REPLACE VIEW bme AS
22:02:03   2  SELECT
22:02:03   3  'chf'||m.ydate prdate
22:02:03   4  ,gattn
22:02:03   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:02:03   6  ,eur_g00
22:02:03   7  ,eur_g01
22:02:03   8  ,eur_g02
22:02:03   9  ,eur_g03
22:02:03  10  ,eur_g04
22:02:03  11  ,eur_g05
22:02:03  12  ,eur_g06
22:02:03  13  ,eur_g07
22:02:03  14  ,eur_g08
22:02:03  15  ,eur_g09
22:02:03  16  ,eur_g10
22:02:03  17  ,eur_g11
22:02:03  18  ,eur_g12
22:02:03  19  ,eur_g13
22:02:03  20  ,eur_g14
22:02:03  21  ,eur_g15
22:02:03  22  ,eur_g16
22:02:03  23  ,eur_g17
22:02:03  24  ,eur_g18
22:02:03  25  ,eur_g19
22:02:03  26  ,eur_g20
22:02:03  27  ,eur_g21
22:02:03  28  ,eur_g22
22:02:03  29  ,eur_g23
22:02:03  30  ,eur_g24
22:02:03  31  ,eur_g25
22:02:03  32  ,eur_g26
22:02:03  33  ,eur_g27
22:02:03  34  ,eur_g28
22:02:03  35  ,eur_g29
22:02:03  36  ,eur_g30
22:02:03  37  ,eur_g31
22:02:03  38  ,eur_g32
22:02:03  39  ,eur_g33
22:02:03  40  ,eur_g34
22:02:03  41  ,eur_g35
22:02:03  42  ,eur_g36
22:02:03  43  ,eur_g37
22:02:03  44  ,eur_g38
22:02:03  45  ,eur_g39
22:02:03  46  ,eur_g40
22:02:03  47  ,aud_g00
22:02:03  48  ,aud_g01
22:02:03  49  ,aud_g02
22:02:03  50  ,aud_g03
22:02:03  51  ,aud_g04
22:02:03  52  ,aud_g05
22:02:03  53  ,aud_g06
22:02:03  54  ,aud_g07
22:02:03  55  ,aud_g08
22:02:03  56  ,aud_g09
22:02:03  57  ,aud_g10
22:02:03  58  ,aud_g11
22:02:03  59  ,aud_g12
22:02:03  60  ,aud_g13
22:02:03  61  ,aud_g14
22:02:03  62  ,aud_g15
22:02:03  63  ,aud_g16
22:02:03  64  ,aud_g17
22:02:03  65  ,aud_g18
22:02:03  66  ,aud_g19
22:02:03  67  ,aud_g20
22:02:03  68  ,aud_g21
22:02:03  69  ,aud_g22
22:02:03  70  ,aud_g23
22:02:03  71  ,aud_g24
22:02:03  72  ,aud_g25
22:02:03  73  ,aud_g26
22:02:03  74  ,aud_g27
22:02:03  75  ,aud_g28
22:02:03  76  ,aud_g29
22:02:03  77  ,aud_g30
22:02:03  78  ,aud_g31
22:02:03  79  ,aud_g32
22:02:03  80  ,aud_g33
22:02:03  81  ,aud_g34
22:02:03  82  ,aud_g35
22:02:03  83  ,aud_g36
22:02:03  84  ,aud_g37
22:02:03  85  ,aud_g38
22:02:03  86  ,aud_g39
22:02:03  87  ,aud_g40
22:02:03  88  ,gbp_g00
22:02:03  89  ,gbp_g01
22:02:03  90  ,gbp_g02
22:02:03  91  ,gbp_g03
22:02:03  92  ,gbp_g04
22:02:03  93  ,gbp_g05
22:02:03  94  ,gbp_g06
22:02:03  95  ,gbp_g07
22:02:03  96  ,gbp_g08
22:02:03  97  ,gbp_g09
22:02:03  98  ,gbp_g10
22:02:03  99  ,gbp_g11
22:02:03 100  ,gbp_g12
22:02:03 101  ,gbp_g13
22:02:03 102  ,gbp_g14
22:02:03 103  ,gbp_g15
22:02:03 104  ,gbp_g16
22:02:03 105  ,gbp_g17
22:02:03 106  ,gbp_g18
22:02:03 107  ,gbp_g19
22:02:03 108  ,gbp_g20
22:02:03 109  ,gbp_g21
22:02:03 110  ,gbp_g22
22:02:03 111  ,gbp_g23
22:02:03 112  ,gbp_g24
22:02:03 113  ,gbp_g25
22:02:03 114  ,gbp_g26
22:02:03 115  ,gbp_g27
22:02:03 116  ,gbp_g28
22:02:03 117  ,gbp_g29
22:02:03 118  ,gbp_g30
22:02:03 119  ,gbp_g31
22:02:03 120  ,gbp_g32
22:02:03 121  ,gbp_g33
22:02:03 122  ,gbp_g34
22:02:03 123  ,gbp_g35
22:02:03 124  ,gbp_g36
22:02:03 125  ,gbp_g37
22:02:03 126  ,gbp_g38
22:02:03 127  ,gbp_g39
22:02:03 128  ,gbp_g40
22:02:03 129  ,jpy_g00
22:02:03 130  ,jpy_g01
22:02:03 131  ,jpy_g02
22:02:03 132  ,jpy_g03
22:02:03 133  ,jpy_g04
22:02:03 134  ,jpy_g05
22:02:03 135  ,jpy_g06
22:02:03 136  ,jpy_g07
22:02:03 137  ,jpy_g08
22:02:03 138  ,jpy_g09
22:02:03 139  ,jpy_g10
22:02:03 140  ,jpy_g11
22:02:03 141  ,jpy_g12
22:02:03 142  ,jpy_g13
22:02:03 143  ,jpy_g14
22:02:03 144  ,jpy_g15
22:02:03 145  ,jpy_g16
22:02:03 146  ,jpy_g17
22:02:03 147  ,jpy_g18
22:02:03 148  ,jpy_g19
22:02:03 149  ,jpy_g20
22:02:03 150  ,jpy_g21
22:02:03 151  ,jpy_g22
22:02:03 152  ,jpy_g23
22:02:03 153  ,jpy_g24
22:02:03 154  ,jpy_g25
22:02:03 155  ,jpy_g26
22:02:03 156  ,jpy_g27
22:02:03 157  ,jpy_g28
22:02:03 158  ,jpy_g29
22:02:03 159  ,jpy_g30
22:02:03 160  ,jpy_g31
22:02:03 161  ,jpy_g32
22:02:03 162  ,jpy_g33
22:02:03 163  ,jpy_g34
22:02:03 164  ,jpy_g35
22:02:03 165  ,jpy_g36
22:02:03 166  ,jpy_g37
22:02:03 167  ,jpy_g38
22:02:03 168  ,jpy_g39
22:02:03 169  ,jpy_g40
22:02:03 170  ,cad_g00
22:02:03 171  ,cad_g01
22:02:03 172  ,cad_g02
22:02:03 173  ,cad_g03
22:02:03 174  ,cad_g04
22:02:03 175  ,cad_g05
22:02:03 176  ,cad_g06
22:02:03 177  ,cad_g07
22:02:03 178  ,cad_g08
22:02:03 179  ,cad_g09
22:02:03 180  ,cad_g10
22:02:03 181  ,cad_g11
22:02:03 182  ,cad_g12
22:02:03 183  ,cad_g13
22:02:03 184  ,cad_g14
22:02:03 185  ,cad_g15
22:02:03 186  ,cad_g16
22:02:03 187  ,cad_g17
22:02:03 188  ,cad_g18
22:02:03 189  ,cad_g19
22:02:03 190  ,cad_g20
22:02:03 191  ,cad_g21
22:02:03 192  ,cad_g22
22:02:03 193  ,cad_g23
22:02:03 194  ,cad_g24
22:02:03 195  ,cad_g25
22:02:03 196  ,cad_g26
22:02:03 197  ,cad_g27
22:02:03 198  ,cad_g28
22:02:03 199  ,cad_g29
22:02:03 200  ,cad_g30
22:02:03 201  ,cad_g31
22:02:03 202  ,cad_g32
22:02:03 203  ,cad_g33
22:02:03 204  ,cad_g34
22:02:03 205  ,cad_g35
22:02:03 206  ,cad_g36
22:02:03 207  ,cad_g37
22:02:03 208  ,cad_g38
22:02:03 209  ,cad_g39
22:02:03 210  ,cad_g40
22:02:03 211  ,chf_g00
22:02:03 212  ,chf_g01
22:02:03 213  ,chf_g02
22:02:03 214  ,chf_g03
22:02:03 215  ,chf_g04
22:02:03 216  ,chf_g05
22:02:03 217  ,chf_g06
22:02:03 218  ,chf_g07
22:02:03 219  ,chf_g08
22:02:03 220  ,chf_g09
22:02:03 221  ,chf_g10
22:02:03 222  ,chf_g11
22:02:03 223  ,chf_g12
22:02:03 224  ,chf_g13
22:02:03 225  ,chf_g14
22:02:03 226  ,chf_g15
22:02:03 227  ,chf_g16
22:02:03 228  ,chf_g17
22:02:03 229  ,chf_g18
22:02:03 230  ,chf_g19
22:02:03 231  ,chf_g20
22:02:03 232  ,chf_g21
22:02:03 233  ,chf_g22
22:02:03 234  ,chf_g23
22:02:03 235  ,chf_g24
22:02:03 236  ,chf_g25
22:02:03 237  ,chf_g26
22:02:03 238  ,chf_g27
22:02:03 239  ,chf_g28
22:02:03 240  ,chf_g29
22:02:03 241  ,chf_g30
22:02:03 242  ,chf_g31
22:02:03 243  ,chf_g32
22:02:03 244  ,chf_g33
22:02:03 245  ,chf_g34
22:02:03 246  ,chf_g35
22:02:03 247  ,chf_g36
22:02:03 248  ,chf_g37
22:02:03 249  ,chf_g38
22:02:03 250  ,chf_g39
22:02:03 251  ,chf_g40
22:02:03 252  FROM chf_ms14 m
22:02:03 253  WHERE gattn IN('nup','up')
22:02:03 254  AND 1+m.ydate < '&1'||' '||'&2'
22:02:03 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'07:05:00'

View created.

Elapsed: 00:00:00.12
22:02:03 SQL> 
22:02:03 SQL> -- rpt
22:02:03 SQL> 
22:02:03 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
22:02:03   2  
22:02:03 SQL> SELECT MAX(prdate) FROM bme
22:02:03   2  
22:02:03 SQL> -- Now build model from bme and score sme
22:02:03 SQL> @score1gattn.sql
22:02:03 SQL> -- score1gattn.sql
22:02:03 SQL> 
22:02:03 SQL> -- Does the 1st SVM score
22:02:03 SQL> 
22:02:03 SQL> -- Fill up svmc_apply_prep
22:02:03 SQL> @score_gattn.sql
22:02:03 SQL> --
22:02:03 SQL> -- score_gattn.sql
22:02:03 SQL> --
22:02:03 SQL> 
22:02:03 SQL> -- usage: score_gattn.sql
22:02:03 SQL> 
22:02:03 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:02:03 SQL> 
22:02:03 SQL> DEFINE target	= 'gattn'
22:02:03 SQL> DEFINE model_name = 'forex14'
22:02:03 SQL> DEFINE bldtable	= 'bme'
22:02:03 SQL> DEFINE scoretable = 'sme'
22:02:03 SQL> DEFINE case_id	= 'prdate'
22:02:03 SQL> 
22:02:03 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:02:03 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:02:03 SQL> 
22:02:03 SQL> -- Builds an SVM model using pl/sql.
22:02:03 SQL> 
22:02:03 SQL> -----------------------------------------------------------------------
22:02:03 SQL> --			    BUILD THE MODEL
22:02:03 SQL> -----------------------------------------------------------------------
22:02:03 SQL> 
22:02:03 SQL> -- Cleanup old build data preparation objects for repeat runs
22:02:03 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.02
22:02:03 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:02:03 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
22:02:03 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
22:02:03 SQL> 
22:02:03 SQL> 
22:02:03 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:02:03 SQL> --
22:02:03 SQL> -- DROP	TABLE svmc_settings ;
22:02:03 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:02:03 SQL> -- DELETE svmc_settings;
22:02:03 SQL> 
22:02:03 SQL> -- The default classification algorithm is Naive Bayes. So override
22:02:03 SQL> -- this choice to SVM using a settings table.
22:02:03 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:02:03 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:02:03 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:02:03 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:02:03 SQL> -- models.
22:02:03 SQL> --
22:02:03 SQL> 
22:02:03 SQL> -- Do this once and then comment it out.
22:02:03 SQL> -- That makes script go faster.
22:02:03 SQL> -- BEGIN
22:02:03 SQL> -- -- Populate settings table
22:02:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:02:03 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:02:03 SQL> --
22:02:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:02:03 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:02:03 SQL> --
22:02:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:02:03 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:02:03 SQL> --   COMMIT;
22:02:03 SQL> -- END;
22:02:03 SQL> -- /
22:02:03 SQL> 
22:02:03 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:02:03 SQL> 
22:02:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:02:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:02:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:02:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:02:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:02:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
22:02:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:02:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:02:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:02:03 SQL> 
22:02:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:02:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:02:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:02:03 SQL> 
22:02:03 SQL> --------------------------------
22:02:03 SQL> -- PREPARE BUILD (TRAINING) DATA
22:02:03 SQL> --
22:02:03 SQL> 
22:02:03 SQL> -- 1. Missing Value treatment for all Predictors and
22:02:03 SQL> -- 2. Outlier Treatment and
22:02:03 SQL> -- 3. Normalization are performed below.
22:02:03 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:02:03 SQL> --    normalized here.
22:02:03 SQL> 
22:02:03 SQL> BEGIN
22:02:03   2  	-- Perform missing value treatment for all predictors
22:02:03   3  	-- create miss tables
22:02:03   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:02:03   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:02:03   6  
22:02:03   7  	-- populate miss tables
22:02:03   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:02:03   9  	  miss_table_name => 'svmc_miss_num',
22:02:03  10  	  data_table_name => '&bldtable',
22:02:03  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:02:03  12  
22:02:03  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:02:03  14  	  miss_table_name => 'svmc_miss_cat',
22:02:03  15  	  data_table_name => '&bldtable',
22:02:03  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:02:03  17  
22:02:03  18  	-- xform input data to replace missing values
22:02:03  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:02:03  20  	  miss_table_name => 'svmc_miss_num',
22:02:03  21  	  data_table_name => '&bldtable',
22:02:03  22  	  xform_view_name => 'xformed_build_miss_num');
22:02:03  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:02:03  24  	  miss_table_name => 'svmc_miss_cat',
22:02:03  25  	  data_table_name => '&bldtable',
22:02:03  26  	  xform_view_name => 'xformed_build_miss_cat');
22:02:03  27  
22:02:03  28  	-- Perform outlier treatment.
22:02:03  29  	-- create clip table
22:02:03  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:02:03  31  
22:02:03  32  	-- populate clip table
22:02:03  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:02:03  34  	  clip_table_name => 'svmc_clip',
22:02:03  35  	  data_table_name => '&bldtable',
22:02:03  36  	  tail_frac	  => 0.025,
22:02:03  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:02:03  38  
22:02:03  39  	-- xform input data to winsorized data
22:02:03  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:02:03  41  	  clip_table_name => 'svmc_clip',
22:02:03  42  	  data_table_name => '&bldtable',
22:02:03  43  	  xform_view_name => 'svmc_winsor');
22:02:03  44  
22:02:03  45  	-- create normalization table
22:02:03  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:02:03  47  
22:02:03  48  	-- populate normalization table based on winsorized data
22:02:03  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:02:03  50  	  norm_table_name => 'svmc_norm',
22:02:03  51  	  data_table_name => 'svmc_winsor',
22:02:03  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:02:03  53  
22:02:03  54  	-- normalize the original data
22:02:03  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:02:03  56  	  norm_table_name => 'svmc_norm',
22:02:03  57  	  data_table_name => '&bldtable',
22:02:03  58  	  xform_view_name => 'svmc_build_prep');
22:02:03  59  END;
22:02:03  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.99
22:02:21 SQL> 
22:02:21 SQL> ---------------------
22:02:21 SQL> -- CREATE A NEW MODEL
22:02:21 SQL> --
22:02:21 SQL> -- Cleanup old model with the same name for repeat runs
22:02:21 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:02:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:02:21   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.81
22:02:23 SQL> 
22:02:23 SQL> -- Build a new SVM Model
22:02:23 SQL> BEGIN
22:02:23   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:02:23   3  	  model_name	      => '&model_name',
22:02:23   4  	  mining_function     => dbms_data_mining.classification,
22:02:23   5  	  data_table_name     => 'svmc_build_prep',
22:02:23   6  	  case_id_column_name => '&case_id',
22:02:23   7  	  target_column_name  => '&target',
22:02:23   8  	  settings_table_name => 'svmc_settings');
22:02:23   9  END;
22:02:23  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.87
22:02:49 SQL> 
22:02:49 SQL> -----------------------------------------------------------------------
22:02:49 SQL> --			       APPLY/score THE MODEL
22:02:49 SQL> -----------------------------------------------------------------------
22:02:49 SQL> 
22:02:49 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:02:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:02:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:02:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:02:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:02:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:02:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:02:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:02:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:02:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:02:49 SQL> -----------------------
22:02:49 SQL> -- PREPARE SCORING DATA
22:02:49 SQL> --
22:02:49 SQL> -- If the data for model creation has been prepared, then the data
22:02:49 SQL> -- to be scored using the model must be prepared in the same manner
22:02:49 SQL> -- in order to obtain meaningful results.
22:02:49 SQL> --
22:02:49 SQL> -- 1. Missing Value treatment for all Predictors and
22:02:49 SQL> -- 2. Normalization
22:02:49 SQL> -- No outlier treatment will be performed during test and apply. The
22:02:49 SQL> -- normalization step is sufficient, since the normalization parameters
22:02:49 SQL> -- already capture the effects of outlier treatment done with build data.
22:02:49 SQL> --
22:02:49 SQL> BEGIN
22:02:49   2  	-- Xform Test data to replace missing values
22:02:49   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:02:49   4  	  miss_table_name => 'svmc_miss_num',
22:02:49   5  	  data_table_name => '&scoretable',
22:02:49   6  	  xform_view_name => 'xformed_apply_miss_num');
22:02:49   7  
22:02:49   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:02:49   9  	  miss_table_name => 'svmc_miss_cat',
22:02:49  10  	  data_table_name => '&scoretable',
22:02:49  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:02:49  12  
22:02:49  13  	-- Normalize the data to be scored
22:02:49  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:02:49  15  	  norm_table_name => 'svmc_norm',
22:02:49  16  	  data_table_name => '&scoretable',
22:02:49  17  	  xform_view_name => 'svmc_apply_prep');
22:02:49  18  END;
22:02:49  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
22:02:50 SQL> 
22:02:50 SQL> -- Use same model_name used in score_gattn.sql
22:02:50 SQL> DEFINE model_name = 'forex14'
22:02:50 SQL> 
22:02:50 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
22:02:50 SQL> 
22:02:50 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
22:02:50   2  SELECT
22:02:50   3  prdate
22:02:50   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:02:50   5  ,sysdate
22:02:50   6  ,SUBSTR(prdate,1,3)pair
22:02:50   7  ,SUBSTR(prdate,4,19)ydate
22:02:50   8  FROM svmc_apply_prep
22:02:50   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
22:02:51 SQL> @chf_score1day_gattn.sql	2010-12-17 07:00:00
22:02:51 SQL> --
22:02:51 SQL> -- chf_score1day_gattn.sql
22:02:51 SQL> --
22:02:51 SQL> 
22:02:51 SQL> CREATE OR REPLACE VIEW sme AS
22:02:51   2  SELECT
22:02:51   3  'chf'||m.ydate prdate
22:02:51   4  ,NULL gattn
22:02:51   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:02:51   6  ,eur_g00
22:02:51   7  ,eur_g01
22:02:51   8  ,eur_g02
22:02:51   9  ,eur_g03
22:02:51  10  ,eur_g04
22:02:51  11  ,eur_g05
22:02:51  12  ,eur_g06
22:02:51  13  ,eur_g07
22:02:51  14  ,eur_g08
22:02:51  15  ,eur_g09
22:02:51  16  ,eur_g10
22:02:51  17  ,eur_g11
22:02:51  18  ,eur_g12
22:02:51  19  ,eur_g13
22:02:51  20  ,eur_g14
22:02:51  21  ,eur_g15
22:02:51  22  ,eur_g16
22:02:51  23  ,eur_g17
22:02:51  24  ,eur_g18
22:02:51  25  ,eur_g19
22:02:51  26  ,eur_g20
22:02:51  27  ,eur_g21
22:02:51  28  ,eur_g22
22:02:51  29  ,eur_g23
22:02:51  30  ,eur_g24
22:02:51  31  ,eur_g25
22:02:51  32  ,eur_g26
22:02:51  33  ,eur_g27
22:02:51  34  ,eur_g28
22:02:51  35  ,eur_g29
22:02:51  36  ,eur_g30
22:02:51  37  ,eur_g31
22:02:51  38  ,eur_g32
22:02:51  39  ,eur_g33
22:02:51  40  ,eur_g34
22:02:51  41  ,eur_g35
22:02:51  42  ,eur_g36
22:02:51  43  ,eur_g37
22:02:51  44  ,eur_g38
22:02:51  45  ,eur_g39
22:02:51  46  ,eur_g40
22:02:51  47  ,aud_g00
22:02:51  48  ,aud_g01
22:02:51  49  ,aud_g02
22:02:51  50  ,aud_g03
22:02:51  51  ,aud_g04
22:02:51  52  ,aud_g05
22:02:51  53  ,aud_g06
22:02:51  54  ,aud_g07
22:02:51  55  ,aud_g08
22:02:51  56  ,aud_g09
22:02:51  57  ,aud_g10
22:02:51  58  ,aud_g11
22:02:51  59  ,aud_g12
22:02:51  60  ,aud_g13
22:02:51  61  ,aud_g14
22:02:51  62  ,aud_g15
22:02:51  63  ,aud_g16
22:02:51  64  ,aud_g17
22:02:51  65  ,aud_g18
22:02:51  66  ,aud_g19
22:02:51  67  ,aud_g20
22:02:51  68  ,aud_g21
22:02:51  69  ,aud_g22
22:02:51  70  ,aud_g23
22:02:51  71  ,aud_g24
22:02:51  72  ,aud_g25
22:02:51  73  ,aud_g26
22:02:51  74  ,aud_g27
22:02:51  75  ,aud_g28
22:02:51  76  ,aud_g29
22:02:51  77  ,aud_g30
22:02:51  78  ,aud_g31
22:02:51  79  ,aud_g32
22:02:51  80  ,aud_g33
22:02:51  81  ,aud_g34
22:02:51  82  ,aud_g35
22:02:51  83  ,aud_g36
22:02:51  84  ,aud_g37
22:02:51  85  ,aud_g38
22:02:51  86  ,aud_g39
22:02:51  87  ,aud_g40
22:02:51  88  ,gbp_g00
22:02:51  89  ,gbp_g01
22:02:51  90  ,gbp_g02
22:02:51  91  ,gbp_g03
22:02:51  92  ,gbp_g04
22:02:51  93  ,gbp_g05
22:02:51  94  ,gbp_g06
22:02:51  95  ,gbp_g07
22:02:51  96  ,gbp_g08
22:02:51  97  ,gbp_g09
22:02:51  98  ,gbp_g10
22:02:51  99  ,gbp_g11
22:02:51 100  ,gbp_g12
22:02:51 101  ,gbp_g13
22:02:51 102  ,gbp_g14
22:02:51 103  ,gbp_g15
22:02:51 104  ,gbp_g16
22:02:51 105  ,gbp_g17
22:02:51 106  ,gbp_g18
22:02:51 107  ,gbp_g19
22:02:51 108  ,gbp_g20
22:02:51 109  ,gbp_g21
22:02:51 110  ,gbp_g22
22:02:51 111  ,gbp_g23
22:02:51 112  ,gbp_g24
22:02:51 113  ,gbp_g25
22:02:51 114  ,gbp_g26
22:02:51 115  ,gbp_g27
22:02:51 116  ,gbp_g28
22:02:51 117  ,gbp_g29
22:02:51 118  ,gbp_g30
22:02:51 119  ,gbp_g31
22:02:51 120  ,gbp_g32
22:02:51 121  ,gbp_g33
22:02:51 122  ,gbp_g34
22:02:51 123  ,gbp_g35
22:02:51 124  ,gbp_g36
22:02:51 125  ,gbp_g37
22:02:51 126  ,gbp_g38
22:02:51 127  ,gbp_g39
22:02:51 128  ,gbp_g40
22:02:51 129  ,jpy_g00
22:02:51 130  ,jpy_g01
22:02:51 131  ,jpy_g02
22:02:51 132  ,jpy_g03
22:02:51 133  ,jpy_g04
22:02:51 134  ,jpy_g05
22:02:51 135  ,jpy_g06
22:02:51 136  ,jpy_g07
22:02:51 137  ,jpy_g08
22:02:51 138  ,jpy_g09
22:02:51 139  ,jpy_g10
22:02:51 140  ,jpy_g11
22:02:51 141  ,jpy_g12
22:02:51 142  ,jpy_g13
22:02:51 143  ,jpy_g14
22:02:51 144  ,jpy_g15
22:02:51 145  ,jpy_g16
22:02:51 146  ,jpy_g17
22:02:51 147  ,jpy_g18
22:02:51 148  ,jpy_g19
22:02:51 149  ,jpy_g20
22:02:51 150  ,jpy_g21
22:02:51 151  ,jpy_g22
22:02:51 152  ,jpy_g23
22:02:51 153  ,jpy_g24
22:02:51 154  ,jpy_g25
22:02:51 155  ,jpy_g26
22:02:51 156  ,jpy_g27
22:02:51 157  ,jpy_g28
22:02:51 158  ,jpy_g29
22:02:51 159  ,jpy_g30
22:02:51 160  ,jpy_g31
22:02:51 161  ,jpy_g32
22:02:51 162  ,jpy_g33
22:02:51 163  ,jpy_g34
22:02:51 164  ,jpy_g35
22:02:51 165  ,jpy_g36
22:02:51 166  ,jpy_g37
22:02:51 167  ,jpy_g38
22:02:51 168  ,jpy_g39
22:02:51 169  ,jpy_g40
22:02:51 170  ,cad_g00
22:02:51 171  ,cad_g01
22:02:51 172  ,cad_g02
22:02:51 173  ,cad_g03
22:02:51 174  ,cad_g04
22:02:51 175  ,cad_g05
22:02:51 176  ,cad_g06
22:02:51 177  ,cad_g07
22:02:51 178  ,cad_g08
22:02:51 179  ,cad_g09
22:02:51 180  ,cad_g10
22:02:51 181  ,cad_g11
22:02:51 182  ,cad_g12
22:02:51 183  ,cad_g13
22:02:51 184  ,cad_g14
22:02:51 185  ,cad_g15
22:02:51 186  ,cad_g16
22:02:51 187  ,cad_g17
22:02:51 188  ,cad_g18
22:02:51 189  ,cad_g19
22:02:51 190  ,cad_g20
22:02:51 191  ,cad_g21
22:02:51 192  ,cad_g22
22:02:51 193  ,cad_g23
22:02:51 194  ,cad_g24
22:02:51 195  ,cad_g25
22:02:51 196  ,cad_g26
22:02:51 197  ,cad_g27
22:02:51 198  ,cad_g28
22:02:51 199  ,cad_g29
22:02:51 200  ,cad_g30
22:02:51 201  ,cad_g31
22:02:51 202  ,cad_g32
22:02:51 203  ,cad_g33
22:02:51 204  ,cad_g34
22:02:51 205  ,cad_g35
22:02:51 206  ,cad_g36
22:02:51 207  ,cad_g37
22:02:51 208  ,cad_g38
22:02:51 209  ,cad_g39
22:02:51 210  ,cad_g40
22:02:51 211  ,chf_g00
22:02:51 212  ,chf_g01
22:02:51 213  ,chf_g02
22:02:51 214  ,chf_g03
22:02:51 215  ,chf_g04
22:02:51 216  ,chf_g05
22:02:51 217  ,chf_g06
22:02:51 218  ,chf_g07
22:02:51 219  ,chf_g08
22:02:51 220  ,chf_g09
22:02:51 221  ,chf_g10
22:02:51 222  ,chf_g11
22:02:51 223  ,chf_g12
22:02:51 224  ,chf_g13
22:02:51 225  ,chf_g14
22:02:51 226  ,chf_g15
22:02:51 227  ,chf_g16
22:02:51 228  ,chf_g17
22:02:51 229  ,chf_g18
22:02:51 230  ,chf_g19
22:02:51 231  ,chf_g20
22:02:51 232  ,chf_g21
22:02:51 233  ,chf_g22
22:02:51 234  ,chf_g23
22:02:51 235  ,chf_g24
22:02:51 236  ,chf_g25
22:02:51 237  ,chf_g26
22:02:51 238  ,chf_g27
22:02:51 239  ,chf_g28
22:02:51 240  ,chf_g29
22:02:51 241  ,chf_g30
22:02:51 242  ,chf_g31
22:02:51 243  ,chf_g32
22:02:51 244  ,chf_g33
22:02:51 245  ,chf_g34
22:02:51 246  ,chf_g35
22:02:51 247  ,chf_g36
22:02:51 248  ,chf_g37
22:02:51 249  ,chf_g38
22:02:51 250  ,chf_g39
22:02:51 251  ,chf_g40
22:02:51 252  FROM chf_ms14 m
22:02:51 253  WHERE m.ydate = '&1'||' '||'&2'
22:02:51 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'07:00:00'

View created.

Elapsed: 00:00:00.16
22:02:51 SQL> 
22:02:51 SQL> -- rpt
22:02:51 SQL> -- We should see just 1 row:
22:02:51 SQL> 
22:02:51 SQL> SELECT COUNT(prdate) FROM sme
22:02:51   2  
22:02:51 SQL> -- Build the model:
22:02:51 SQL> CREATE OR REPLACE VIEW bme AS
22:02:51   2  SELECT
22:02:51   3  'chf'||m.ydate prdate
22:02:51   4  ,gattn
22:02:51   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:02:51   6  ,eur_g00
22:02:51   7  ,eur_g01
22:02:51   8  ,eur_g02
22:02:51   9  ,eur_g03
22:02:51  10  ,eur_g04
22:02:51  11  ,eur_g05
22:02:51  12  ,eur_g06
22:02:51  13  ,eur_g07
22:02:51  14  ,eur_g08
22:02:51  15  ,eur_g09
22:02:51  16  ,eur_g10
22:02:51  17  ,eur_g11
22:02:51  18  ,eur_g12
22:02:51  19  ,eur_g13
22:02:51  20  ,eur_g14
22:02:51  21  ,eur_g15
22:02:51  22  ,eur_g16
22:02:51  23  ,eur_g17
22:02:51  24  ,eur_g18
22:02:51  25  ,eur_g19
22:02:51  26  ,eur_g20
22:02:51  27  ,eur_g21
22:02:51  28  ,eur_g22
22:02:51  29  ,eur_g23
22:02:51  30  ,eur_g24
22:02:51  31  ,eur_g25
22:02:51  32  ,eur_g26
22:02:51  33  ,eur_g27
22:02:51  34  ,eur_g28
22:02:51  35  ,eur_g29
22:02:51  36  ,eur_g30
22:02:51  37  ,eur_g31
22:02:51  38  ,eur_g32
22:02:51  39  ,eur_g33
22:02:51  40  ,eur_g34
22:02:51  41  ,eur_g35
22:02:51  42  ,eur_g36
22:02:51  43  ,eur_g37
22:02:51  44  ,eur_g38
22:02:51  45  ,eur_g39
22:02:51  46  ,eur_g40
22:02:51  47  ,aud_g00
22:02:51  48  ,aud_g01
22:02:51  49  ,aud_g02
22:02:51  50  ,aud_g03
22:02:51  51  ,aud_g04
22:02:51  52  ,aud_g05
22:02:51  53  ,aud_g06
22:02:51  54  ,aud_g07
22:02:51  55  ,aud_g08
22:02:51  56  ,aud_g09
22:02:51  57  ,aud_g10
22:02:51  58  ,aud_g11
22:02:51  59  ,aud_g12
22:02:51  60  ,aud_g13
22:02:51  61  ,aud_g14
22:02:51  62  ,aud_g15
22:02:51  63  ,aud_g16
22:02:51  64  ,aud_g17
22:02:51  65  ,aud_g18
22:02:51  66  ,aud_g19
22:02:51  67  ,aud_g20
22:02:51  68  ,aud_g21
22:02:51  69  ,aud_g22
22:02:51  70  ,aud_g23
22:02:51  71  ,aud_g24
22:02:51  72  ,aud_g25
22:02:51  73  ,aud_g26
22:02:51  74  ,aud_g27
22:02:51  75  ,aud_g28
22:02:51  76  ,aud_g29
22:02:51  77  ,aud_g30
22:02:51  78  ,aud_g31
22:02:51  79  ,aud_g32
22:02:51  80  ,aud_g33
22:02:51  81  ,aud_g34
22:02:51  82  ,aud_g35
22:02:51  83  ,aud_g36
22:02:51  84  ,aud_g37
22:02:51  85  ,aud_g38
22:02:51  86  ,aud_g39
22:02:51  87  ,aud_g40
22:02:51  88  ,gbp_g00
22:02:51  89  ,gbp_g01
22:02:51  90  ,gbp_g02
22:02:51  91  ,gbp_g03
22:02:51  92  ,gbp_g04
22:02:51  93  ,gbp_g05
22:02:51  94  ,gbp_g06
22:02:51  95  ,gbp_g07
22:02:51  96  ,gbp_g08
22:02:51  97  ,gbp_g09
22:02:51  98  ,gbp_g10
22:02:51  99  ,gbp_g11
22:02:51 100  ,gbp_g12
22:02:51 101  ,gbp_g13
22:02:51 102  ,gbp_g14
22:02:51 103  ,gbp_g15
22:02:51 104  ,gbp_g16
22:02:51 105  ,gbp_g17
22:02:51 106  ,gbp_g18
22:02:51 107  ,gbp_g19
22:02:51 108  ,gbp_g20
22:02:51 109  ,gbp_g21
22:02:51 110  ,gbp_g22
22:02:51 111  ,gbp_g23
22:02:51 112  ,gbp_g24
22:02:51 113  ,gbp_g25
22:02:51 114  ,gbp_g26
22:02:51 115  ,gbp_g27
22:02:51 116  ,gbp_g28
22:02:51 117  ,gbp_g29
22:02:51 118  ,gbp_g30
22:02:51 119  ,gbp_g31
22:02:51 120  ,gbp_g32
22:02:51 121  ,gbp_g33
22:02:51 122  ,gbp_g34
22:02:51 123  ,gbp_g35
22:02:51 124  ,gbp_g36
22:02:51 125  ,gbp_g37
22:02:51 126  ,gbp_g38
22:02:51 127  ,gbp_g39
22:02:51 128  ,gbp_g40
22:02:51 129  ,jpy_g00
22:02:51 130  ,jpy_g01
22:02:51 131  ,jpy_g02
22:02:51 132  ,jpy_g03
22:02:51 133  ,jpy_g04
22:02:51 134  ,jpy_g05
22:02:51 135  ,jpy_g06
22:02:51 136  ,jpy_g07
22:02:51 137  ,jpy_g08
22:02:51 138  ,jpy_g09
22:02:51 139  ,jpy_g10
22:02:51 140  ,jpy_g11
22:02:51 141  ,jpy_g12
22:02:51 142  ,jpy_g13
22:02:51 143  ,jpy_g14
22:02:51 144  ,jpy_g15
22:02:51 145  ,jpy_g16
22:02:51 146  ,jpy_g17
22:02:51 147  ,jpy_g18
22:02:51 148  ,jpy_g19
22:02:51 149  ,jpy_g20
22:02:51 150  ,jpy_g21
22:02:51 151  ,jpy_g22
22:02:51 152  ,jpy_g23
22:02:51 153  ,jpy_g24
22:02:51 154  ,jpy_g25
22:02:51 155  ,jpy_g26
22:02:51 156  ,jpy_g27
22:02:51 157  ,jpy_g28
22:02:51 158  ,jpy_g29
22:02:51 159  ,jpy_g30
22:02:51 160  ,jpy_g31
22:02:51 161  ,jpy_g32
22:02:51 162  ,jpy_g33
22:02:51 163  ,jpy_g34
22:02:51 164  ,jpy_g35
22:02:51 165  ,jpy_g36
22:02:51 166  ,jpy_g37
22:02:51 167  ,jpy_g38
22:02:51 168  ,jpy_g39
22:02:51 169  ,jpy_g40
22:02:51 170  ,cad_g00
22:02:51 171  ,cad_g01
22:02:51 172  ,cad_g02
22:02:51 173  ,cad_g03
22:02:51 174  ,cad_g04
22:02:51 175  ,cad_g05
22:02:51 176  ,cad_g06
22:02:51 177  ,cad_g07
22:02:51 178  ,cad_g08
22:02:51 179  ,cad_g09
22:02:51 180  ,cad_g10
22:02:51 181  ,cad_g11
22:02:51 182  ,cad_g12
22:02:51 183  ,cad_g13
22:02:51 184  ,cad_g14
22:02:51 185  ,cad_g15
22:02:51 186  ,cad_g16
22:02:51 187  ,cad_g17
22:02:51 188  ,cad_g18
22:02:51 189  ,cad_g19
22:02:51 190  ,cad_g20
22:02:51 191  ,cad_g21
22:02:51 192  ,cad_g22
22:02:51 193  ,cad_g23
22:02:51 194  ,cad_g24
22:02:51 195  ,cad_g25
22:02:51 196  ,cad_g26
22:02:51 197  ,cad_g27
22:02:51 198  ,cad_g28
22:02:51 199  ,cad_g29
22:02:51 200  ,cad_g30
22:02:51 201  ,cad_g31
22:02:51 202  ,cad_g32
22:02:51 203  ,cad_g33
22:02:51 204  ,cad_g34
22:02:51 205  ,cad_g35
22:02:51 206  ,cad_g36
22:02:51 207  ,cad_g37
22:02:51 208  ,cad_g38
22:02:51 209  ,cad_g39
22:02:51 210  ,cad_g40
22:02:51 211  ,chf_g00
22:02:51 212  ,chf_g01
22:02:51 213  ,chf_g02
22:02:51 214  ,chf_g03
22:02:51 215  ,chf_g04
22:02:51 216  ,chf_g05
22:02:51 217  ,chf_g06
22:02:51 218  ,chf_g07
22:02:51 219  ,chf_g08
22:02:51 220  ,chf_g09
22:02:51 221  ,chf_g10
22:02:51 222  ,chf_g11
22:02:51 223  ,chf_g12
22:02:51 224  ,chf_g13
22:02:51 225  ,chf_g14
22:02:51 226  ,chf_g15
22:02:51 227  ,chf_g16
22:02:51 228  ,chf_g17
22:02:51 229  ,chf_g18
22:02:51 230  ,chf_g19
22:02:51 231  ,chf_g20
22:02:51 232  ,chf_g21
22:02:51 233  ,chf_g22
22:02:51 234  ,chf_g23
22:02:51 235  ,chf_g24
22:02:51 236  ,chf_g25
22:02:51 237  ,chf_g26
22:02:51 238  ,chf_g27
22:02:51 239  ,chf_g28
22:02:51 240  ,chf_g29
22:02:51 241  ,chf_g30
22:02:51 242  ,chf_g31
22:02:51 243  ,chf_g32
22:02:51 244  ,chf_g33
22:02:51 245  ,chf_g34
22:02:51 246  ,chf_g35
22:02:51 247  ,chf_g36
22:02:51 248  ,chf_g37
22:02:51 249  ,chf_g38
22:02:51 250  ,chf_g39
22:02:51 251  ,chf_g40
22:02:51 252  FROM chf_ms14 m
22:02:51 253  WHERE gattn IN('nup','up')
22:02:51 254  AND 1+m.ydate < '&1'||' '||'&2'
22:02:51 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'07:00:00'

View created.

Elapsed: 00:00:00.11
22:02:51 SQL> 
22:02:51 SQL> -- rpt
22:02:51 SQL> 
22:02:51 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
22:02:51   2  
22:02:51 SQL> SELECT MAX(prdate) FROM bme
22:02:51   2  
22:02:51 SQL> -- Now build model from bme and score sme
22:02:51 SQL> @score1gattn.sql
22:02:51 SQL> -- score1gattn.sql
22:02:51 SQL> 
22:02:51 SQL> -- Does the 1st SVM score
22:02:51 SQL> 
22:02:51 SQL> -- Fill up svmc_apply_prep
22:02:51 SQL> @score_gattn.sql
22:02:51 SQL> --
22:02:51 SQL> -- score_gattn.sql
22:02:51 SQL> --
22:02:51 SQL> 
22:02:51 SQL> -- usage: score_gattn.sql
22:02:51 SQL> 
22:02:51 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:02:51 SQL> 
22:02:51 SQL> DEFINE target	= 'gattn'
22:02:51 SQL> DEFINE model_name = 'forex14'
22:02:51 SQL> DEFINE bldtable	= 'bme'
22:02:51 SQL> DEFINE scoretable = 'sme'
22:02:51 SQL> DEFINE case_id	= 'prdate'
22:02:51 SQL> 
22:02:51 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:02:51 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:02:51 SQL> 
22:02:51 SQL> -- Builds an SVM model using pl/sql.
22:02:51 SQL> 
22:02:51 SQL> -----------------------------------------------------------------------
22:02:51 SQL> --			    BUILD THE MODEL
22:02:51 SQL> -----------------------------------------------------------------------
22:02:51 SQL> 
22:02:51 SQL> -- Cleanup old build data preparation objects for repeat runs
22:02:51 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
22:02:51 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:02:51 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
22:02:51 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
22:02:51 SQL> 
22:02:51 SQL> 
22:02:51 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:02:51 SQL> --
22:02:51 SQL> -- DROP	TABLE svmc_settings ;
22:02:51 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:02:51 SQL> -- DELETE svmc_settings;
22:02:51 SQL> 
22:02:51 SQL> -- The default classification algorithm is Naive Bayes. So override
22:02:51 SQL> -- this choice to SVM using a settings table.
22:02:51 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:02:51 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:02:51 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:02:51 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:02:51 SQL> -- models.
22:02:51 SQL> --
22:02:51 SQL> 
22:02:51 SQL> -- Do this once and then comment it out.
22:02:51 SQL> -- That makes script go faster.
22:02:51 SQL> -- BEGIN
22:02:51 SQL> -- -- Populate settings table
22:02:51 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:02:51 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:02:51 SQL> --
22:02:51 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:02:51 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:02:51 SQL> --
22:02:51 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:02:51 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:02:51 SQL> --   COMMIT;
22:02:51 SQL> -- END;
22:02:51 SQL> -- /
22:02:51 SQL> 
22:02:51 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:02:51 SQL> 
22:02:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:02:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:02:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:02:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:02:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:02:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:02:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:02:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:02:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:02:51 SQL> 
22:02:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:02:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:02:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:02:51 SQL> 
22:02:51 SQL> --------------------------------
22:02:51 SQL> -- PREPARE BUILD (TRAINING) DATA
22:02:51 SQL> --
22:02:51 SQL> 
22:02:51 SQL> -- 1. Missing Value treatment for all Predictors and
22:02:51 SQL> -- 2. Outlier Treatment and
22:02:51 SQL> -- 3. Normalization are performed below.
22:02:51 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:02:51 SQL> --    normalized here.
22:02:51 SQL> 
22:02:51 SQL> BEGIN
22:02:51   2  	-- Perform missing value treatment for all predictors
22:02:51   3  	-- create miss tables
22:02:51   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:02:51   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:02:51   6  
22:02:51   7  	-- populate miss tables
22:02:51   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:02:51   9  	  miss_table_name => 'svmc_miss_num',
22:02:51  10  	  data_table_name => '&bldtable',
22:02:51  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:02:51  12  
22:02:51  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:02:51  14  	  miss_table_name => 'svmc_miss_cat',
22:02:51  15  	  data_table_name => '&bldtable',
22:02:51  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:02:51  17  
22:02:51  18  	-- xform input data to replace missing values
22:02:51  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:02:51  20  	  miss_table_name => 'svmc_miss_num',
22:02:51  21  	  data_table_name => '&bldtable',
22:02:51  22  	  xform_view_name => 'xformed_build_miss_num');
22:02:51  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:02:51  24  	  miss_table_name => 'svmc_miss_cat',
22:02:51  25  	  data_table_name => '&bldtable',
22:02:51  26  	  xform_view_name => 'xformed_build_miss_cat');
22:02:51  27  
22:02:51  28  	-- Perform outlier treatment.
22:02:51  29  	-- create clip table
22:02:51  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:02:51  31  
22:02:51  32  	-- populate clip table
22:02:51  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:02:51  34  	  clip_table_name => 'svmc_clip',
22:02:51  35  	  data_table_name => '&bldtable',
22:02:51  36  	  tail_frac	  => 0.025,
22:02:51  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:02:51  38  
22:02:51  39  	-- xform input data to winsorized data
22:02:51  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:02:51  41  	  clip_table_name => 'svmc_clip',
22:02:51  42  	  data_table_name => '&bldtable',
22:02:51  43  	  xform_view_name => 'svmc_winsor');
22:02:51  44  
22:02:51  45  	-- create normalization table
22:02:51  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:02:51  47  
22:02:51  48  	-- populate normalization table based on winsorized data
22:02:51  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:02:51  50  	  norm_table_name => 'svmc_norm',
22:02:51  51  	  data_table_name => 'svmc_winsor',
22:02:51  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:02:51  53  
22:02:51  54  	-- normalize the original data
22:02:51  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:02:51  56  	  norm_table_name => 'svmc_norm',
22:02:51  57  	  data_table_name => '&bldtable',
22:02:51  58  	  xform_view_name => 'svmc_build_prep');
22:02:51  59  END;
22:02:51  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.89
22:03:09 SQL> 
22:03:09 SQL> ---------------------
22:03:09 SQL> -- CREATE A NEW MODEL
22:03:09 SQL> --
22:03:09 SQL> -- Cleanup old model with the same name for repeat runs
22:03:09 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:03:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:03:09   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.85
22:03:10 SQL> 
22:03:10 SQL> -- Build a new SVM Model
22:03:10 SQL> BEGIN
22:03:10   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:03:10   3  	  model_name	      => '&model_name',
22:03:10   4  	  mining_function     => dbms_data_mining.classification,
22:03:10   5  	  data_table_name     => 'svmc_build_prep',
22:03:10   6  	  case_id_column_name => '&case_id',
22:03:10   7  	  target_column_name  => '&target',
22:03:10   8  	  settings_table_name => 'svmc_settings');
22:03:10   9  END;
22:03:10  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.02
22:03:36 SQL> 
22:03:36 SQL> -----------------------------------------------------------------------
22:03:36 SQL> --			       APPLY/score THE MODEL
22:03:36 SQL> -----------------------------------------------------------------------
22:03:36 SQL> 
22:03:36 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:03:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:03:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:03:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:03:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:03:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:03:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:03:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:03:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:03:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:03:36 SQL> -----------------------
22:03:36 SQL> -- PREPARE SCORING DATA
22:03:36 SQL> --
22:03:36 SQL> -- If the data for model creation has been prepared, then the data
22:03:36 SQL> -- to be scored using the model must be prepared in the same manner
22:03:36 SQL> -- in order to obtain meaningful results.
22:03:36 SQL> --
22:03:36 SQL> -- 1. Missing Value treatment for all Predictors and
22:03:36 SQL> -- 2. Normalization
22:03:36 SQL> -- No outlier treatment will be performed during test and apply. The
22:03:36 SQL> -- normalization step is sufficient, since the normalization parameters
22:03:36 SQL> -- already capture the effects of outlier treatment done with build data.
22:03:36 SQL> --
22:03:36 SQL> BEGIN
22:03:36   2  	-- Xform Test data to replace missing values
22:03:36   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:03:36   4  	  miss_table_name => 'svmc_miss_num',
22:03:36   5  	  data_table_name => '&scoretable',
22:03:36   6  	  xform_view_name => 'xformed_apply_miss_num');
22:03:36   7  
22:03:36   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:03:36   9  	  miss_table_name => 'svmc_miss_cat',
22:03:36  10  	  data_table_name => '&scoretable',
22:03:36  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:03:36  12  
22:03:36  13  	-- Normalize the data to be scored
22:03:36  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:03:36  15  	  norm_table_name => 'svmc_norm',
22:03:36  16  	  data_table_name => '&scoretable',
22:03:36  17  	  xform_view_name => 'svmc_apply_prep');
22:03:36  18  END;
22:03:36  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
22:03:37 SQL> 
22:03:37 SQL> -- Use same model_name used in score_gattn.sql
22:03:37 SQL> DEFINE model_name = 'forex14'
22:03:37 SQL> 
22:03:37 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
22:03:37 SQL> 
22:03:37 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
22:03:37   2  SELECT
22:03:37   3  prdate
22:03:37   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:03:37   5  ,sysdate
22:03:37   6  ,SUBSTR(prdate,1,3)pair
22:03:37   7  ,SUBSTR(prdate,4,19)ydate
22:03:37   8  FROM svmc_apply_prep
22:03:37   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
22:03:37 SQL> @chf_score1day_gattn.sql	2010-12-17 06:55:00
22:03:37 SQL> --
22:03:37 SQL> -- chf_score1day_gattn.sql
22:03:37 SQL> --
22:03:37 SQL> 
22:03:37 SQL> CREATE OR REPLACE VIEW sme AS
22:03:37   2  SELECT
22:03:37   3  'chf'||m.ydate prdate
22:03:37   4  ,NULL gattn
22:03:37   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:03:37   6  ,eur_g00
22:03:37   7  ,eur_g01
22:03:37   8  ,eur_g02
22:03:37   9  ,eur_g03
22:03:37  10  ,eur_g04
22:03:37  11  ,eur_g05
22:03:37  12  ,eur_g06
22:03:37  13  ,eur_g07
22:03:37  14  ,eur_g08
22:03:37  15  ,eur_g09
22:03:37  16  ,eur_g10
22:03:37  17  ,eur_g11
22:03:37  18  ,eur_g12
22:03:37  19  ,eur_g13
22:03:37  20  ,eur_g14
22:03:37  21  ,eur_g15
22:03:37  22  ,eur_g16
22:03:37  23  ,eur_g17
22:03:37  24  ,eur_g18
22:03:37  25  ,eur_g19
22:03:37  26  ,eur_g20
22:03:37  27  ,eur_g21
22:03:37  28  ,eur_g22
22:03:37  29  ,eur_g23
22:03:37  30  ,eur_g24
22:03:37  31  ,eur_g25
22:03:37  32  ,eur_g26
22:03:37  33  ,eur_g27
22:03:37  34  ,eur_g28
22:03:37  35  ,eur_g29
22:03:37  36  ,eur_g30
22:03:37  37  ,eur_g31
22:03:37  38  ,eur_g32
22:03:37  39  ,eur_g33
22:03:37  40  ,eur_g34
22:03:37  41  ,eur_g35
22:03:37  42  ,eur_g36
22:03:37  43  ,eur_g37
22:03:37  44  ,eur_g38
22:03:37  45  ,eur_g39
22:03:37  46  ,eur_g40
22:03:37  47  ,aud_g00
22:03:37  48  ,aud_g01
22:03:37  49  ,aud_g02
22:03:37  50  ,aud_g03
22:03:37  51  ,aud_g04
22:03:37  52  ,aud_g05
22:03:37  53  ,aud_g06
22:03:37  54  ,aud_g07
22:03:37  55  ,aud_g08
22:03:37  56  ,aud_g09
22:03:37  57  ,aud_g10
22:03:37  58  ,aud_g11
22:03:37  59  ,aud_g12
22:03:37  60  ,aud_g13
22:03:37  61  ,aud_g14
22:03:37  62  ,aud_g15
22:03:37  63  ,aud_g16
22:03:37  64  ,aud_g17
22:03:37  65  ,aud_g18
22:03:37  66  ,aud_g19
22:03:37  67  ,aud_g20
22:03:37  68  ,aud_g21
22:03:37  69  ,aud_g22
22:03:37  70  ,aud_g23
22:03:37  71  ,aud_g24
22:03:37  72  ,aud_g25
22:03:37  73  ,aud_g26
22:03:37  74  ,aud_g27
22:03:37  75  ,aud_g28
22:03:37  76  ,aud_g29
22:03:37  77  ,aud_g30
22:03:37  78  ,aud_g31
22:03:37  79  ,aud_g32
22:03:37  80  ,aud_g33
22:03:37  81  ,aud_g34
22:03:37  82  ,aud_g35
22:03:37  83  ,aud_g36
22:03:37  84  ,aud_g37
22:03:37  85  ,aud_g38
22:03:37  86  ,aud_g39
22:03:37  87  ,aud_g40
22:03:37  88  ,gbp_g00
22:03:37  89  ,gbp_g01
22:03:37  90  ,gbp_g02
22:03:37  91  ,gbp_g03
22:03:37  92  ,gbp_g04
22:03:37  93  ,gbp_g05
22:03:37  94  ,gbp_g06
22:03:37  95  ,gbp_g07
22:03:37  96  ,gbp_g08
22:03:37  97  ,gbp_g09
22:03:37  98  ,gbp_g10
22:03:37  99  ,gbp_g11
22:03:37 100  ,gbp_g12
22:03:37 101  ,gbp_g13
22:03:37 102  ,gbp_g14
22:03:37 103  ,gbp_g15
22:03:37 104  ,gbp_g16
22:03:37 105  ,gbp_g17
22:03:37 106  ,gbp_g18
22:03:37 107  ,gbp_g19
22:03:37 108  ,gbp_g20
22:03:37 109  ,gbp_g21
22:03:37 110  ,gbp_g22
22:03:37 111  ,gbp_g23
22:03:37 112  ,gbp_g24
22:03:37 113  ,gbp_g25
22:03:37 114  ,gbp_g26
22:03:37 115  ,gbp_g27
22:03:37 116  ,gbp_g28
22:03:37 117  ,gbp_g29
22:03:37 118  ,gbp_g30
22:03:37 119  ,gbp_g31
22:03:37 120  ,gbp_g32
22:03:37 121  ,gbp_g33
22:03:37 122  ,gbp_g34
22:03:37 123  ,gbp_g35
22:03:37 124  ,gbp_g36
22:03:37 125  ,gbp_g37
22:03:37 126  ,gbp_g38
22:03:37 127  ,gbp_g39
22:03:37 128  ,gbp_g40
22:03:37 129  ,jpy_g00
22:03:37 130  ,jpy_g01
22:03:37 131  ,jpy_g02
22:03:37 132  ,jpy_g03
22:03:37 133  ,jpy_g04
22:03:37 134  ,jpy_g05
22:03:37 135  ,jpy_g06
22:03:37 136  ,jpy_g07
22:03:37 137  ,jpy_g08
22:03:37 138  ,jpy_g09
22:03:37 139  ,jpy_g10
22:03:37 140  ,jpy_g11
22:03:37 141  ,jpy_g12
22:03:37 142  ,jpy_g13
22:03:37 143  ,jpy_g14
22:03:37 144  ,jpy_g15
22:03:37 145  ,jpy_g16
22:03:37 146  ,jpy_g17
22:03:37 147  ,jpy_g18
22:03:37 148  ,jpy_g19
22:03:37 149  ,jpy_g20
22:03:37 150  ,jpy_g21
22:03:37 151  ,jpy_g22
22:03:37 152  ,jpy_g23
22:03:37 153  ,jpy_g24
22:03:37 154  ,jpy_g25
22:03:37 155  ,jpy_g26
22:03:37 156  ,jpy_g27
22:03:37 157  ,jpy_g28
22:03:37 158  ,jpy_g29
22:03:37 159  ,jpy_g30
22:03:37 160  ,jpy_g31
22:03:37 161  ,jpy_g32
22:03:37 162  ,jpy_g33
22:03:37 163  ,jpy_g34
22:03:37 164  ,jpy_g35
22:03:37 165  ,jpy_g36
22:03:37 166  ,jpy_g37
22:03:37 167  ,jpy_g38
22:03:37 168  ,jpy_g39
22:03:37 169  ,jpy_g40
22:03:37 170  ,cad_g00
22:03:37 171  ,cad_g01
22:03:37 172  ,cad_g02
22:03:37 173  ,cad_g03
22:03:37 174  ,cad_g04
22:03:37 175  ,cad_g05
22:03:37 176  ,cad_g06
22:03:37 177  ,cad_g07
22:03:37 178  ,cad_g08
22:03:37 179  ,cad_g09
22:03:37 180  ,cad_g10
22:03:37 181  ,cad_g11
22:03:37 182  ,cad_g12
22:03:37 183  ,cad_g13
22:03:37 184  ,cad_g14
22:03:37 185  ,cad_g15
22:03:37 186  ,cad_g16
22:03:37 187  ,cad_g17
22:03:37 188  ,cad_g18
22:03:37 189  ,cad_g19
22:03:37 190  ,cad_g20
22:03:37 191  ,cad_g21
22:03:37 192  ,cad_g22
22:03:37 193  ,cad_g23
22:03:37 194  ,cad_g24
22:03:37 195  ,cad_g25
22:03:37 196  ,cad_g26
22:03:37 197  ,cad_g27
22:03:37 198  ,cad_g28
22:03:37 199  ,cad_g29
22:03:37 200  ,cad_g30
22:03:37 201  ,cad_g31
22:03:37 202  ,cad_g32
22:03:37 203  ,cad_g33
22:03:37 204  ,cad_g34
22:03:37 205  ,cad_g35
22:03:37 206  ,cad_g36
22:03:37 207  ,cad_g37
22:03:37 208  ,cad_g38
22:03:37 209  ,cad_g39
22:03:37 210  ,cad_g40
22:03:37 211  ,chf_g00
22:03:37 212  ,chf_g01
22:03:37 213  ,chf_g02
22:03:37 214  ,chf_g03
22:03:37 215  ,chf_g04
22:03:37 216  ,chf_g05
22:03:37 217  ,chf_g06
22:03:37 218  ,chf_g07
22:03:37 219  ,chf_g08
22:03:37 220  ,chf_g09
22:03:37 221  ,chf_g10
22:03:37 222  ,chf_g11
22:03:37 223  ,chf_g12
22:03:37 224  ,chf_g13
22:03:37 225  ,chf_g14
22:03:37 226  ,chf_g15
22:03:37 227  ,chf_g16
22:03:37 228  ,chf_g17
22:03:37 229  ,chf_g18
22:03:37 230  ,chf_g19
22:03:37 231  ,chf_g20
22:03:37 232  ,chf_g21
22:03:37 233  ,chf_g22
22:03:37 234  ,chf_g23
22:03:37 235  ,chf_g24
22:03:37 236  ,chf_g25
22:03:37 237  ,chf_g26
22:03:37 238  ,chf_g27
22:03:37 239  ,chf_g28
22:03:37 240  ,chf_g29
22:03:37 241  ,chf_g30
22:03:37 242  ,chf_g31
22:03:37 243  ,chf_g32
22:03:37 244  ,chf_g33
22:03:37 245  ,chf_g34
22:03:37 246  ,chf_g35
22:03:37 247  ,chf_g36
22:03:37 248  ,chf_g37
22:03:37 249  ,chf_g38
22:03:37 250  ,chf_g39
22:03:37 251  ,chf_g40
22:03:37 252  FROM chf_ms14 m
22:03:37 253  WHERE m.ydate = '&1'||' '||'&2'
22:03:37 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'06:55:00'

View created.

Elapsed: 00:00:00.14
22:03:38 SQL> 
22:03:38 SQL> -- rpt
22:03:38 SQL> -- We should see just 1 row:
22:03:38 SQL> 
22:03:38 SQL> SELECT COUNT(prdate) FROM sme
22:03:38   2  
22:03:38 SQL> -- Build the model:
22:03:38 SQL> CREATE OR REPLACE VIEW bme AS
22:03:38   2  SELECT
22:03:38   3  'chf'||m.ydate prdate
22:03:38   4  ,gattn
22:03:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:03:38   6  ,eur_g00
22:03:38   7  ,eur_g01
22:03:38   8  ,eur_g02
22:03:38   9  ,eur_g03
22:03:38  10  ,eur_g04
22:03:38  11  ,eur_g05
22:03:38  12  ,eur_g06
22:03:38  13  ,eur_g07
22:03:38  14  ,eur_g08
22:03:38  15  ,eur_g09
22:03:38  16  ,eur_g10
22:03:38  17  ,eur_g11
22:03:38  18  ,eur_g12
22:03:38  19  ,eur_g13
22:03:38  20  ,eur_g14
22:03:38  21  ,eur_g15
22:03:38  22  ,eur_g16
22:03:38  23  ,eur_g17
22:03:38  24  ,eur_g18
22:03:38  25  ,eur_g19
22:03:38  26  ,eur_g20
22:03:38  27  ,eur_g21
22:03:38  28  ,eur_g22
22:03:38  29  ,eur_g23
22:03:38  30  ,eur_g24
22:03:38  31  ,eur_g25
22:03:38  32  ,eur_g26
22:03:38  33  ,eur_g27
22:03:38  34  ,eur_g28
22:03:38  35  ,eur_g29
22:03:38  36  ,eur_g30
22:03:38  37  ,eur_g31
22:03:38  38  ,eur_g32
22:03:38  39  ,eur_g33
22:03:38  40  ,eur_g34
22:03:38  41  ,eur_g35
22:03:38  42  ,eur_g36
22:03:38  43  ,eur_g37
22:03:38  44  ,eur_g38
22:03:38  45  ,eur_g39
22:03:38  46  ,eur_g40
22:03:38  47  ,aud_g00
22:03:38  48  ,aud_g01
22:03:38  49  ,aud_g02
22:03:38  50  ,aud_g03
22:03:38  51  ,aud_g04
22:03:38  52  ,aud_g05
22:03:38  53  ,aud_g06
22:03:38  54  ,aud_g07
22:03:38  55  ,aud_g08
22:03:38  56  ,aud_g09
22:03:38  57  ,aud_g10
22:03:38  58  ,aud_g11
22:03:38  59  ,aud_g12
22:03:38  60  ,aud_g13
22:03:38  61  ,aud_g14
22:03:38  62  ,aud_g15
22:03:38  63  ,aud_g16
22:03:38  64  ,aud_g17
22:03:38  65  ,aud_g18
22:03:38  66  ,aud_g19
22:03:38  67  ,aud_g20
22:03:38  68  ,aud_g21
22:03:38  69  ,aud_g22
22:03:38  70  ,aud_g23
22:03:38  71  ,aud_g24
22:03:38  72  ,aud_g25
22:03:38  73  ,aud_g26
22:03:38  74  ,aud_g27
22:03:38  75  ,aud_g28
22:03:38  76  ,aud_g29
22:03:38  77  ,aud_g30
22:03:38  78  ,aud_g31
22:03:38  79  ,aud_g32
22:03:38  80  ,aud_g33
22:03:38  81  ,aud_g34
22:03:38  82  ,aud_g35
22:03:38  83  ,aud_g36
22:03:38  84  ,aud_g37
22:03:38  85  ,aud_g38
22:03:38  86  ,aud_g39
22:03:38  87  ,aud_g40
22:03:38  88  ,gbp_g00
22:03:38  89  ,gbp_g01
22:03:38  90  ,gbp_g02
22:03:38  91  ,gbp_g03
22:03:38  92  ,gbp_g04
22:03:38  93  ,gbp_g05
22:03:38  94  ,gbp_g06
22:03:38  95  ,gbp_g07
22:03:38  96  ,gbp_g08
22:03:38  97  ,gbp_g09
22:03:38  98  ,gbp_g10
22:03:38  99  ,gbp_g11
22:03:38 100  ,gbp_g12
22:03:38 101  ,gbp_g13
22:03:38 102  ,gbp_g14
22:03:38 103  ,gbp_g15
22:03:38 104  ,gbp_g16
22:03:38 105  ,gbp_g17
22:03:38 106  ,gbp_g18
22:03:38 107  ,gbp_g19
22:03:38 108  ,gbp_g20
22:03:38 109  ,gbp_g21
22:03:38 110  ,gbp_g22
22:03:38 111  ,gbp_g23
22:03:38 112  ,gbp_g24
22:03:38 113  ,gbp_g25
22:03:38 114  ,gbp_g26
22:03:38 115  ,gbp_g27
22:03:38 116  ,gbp_g28
22:03:38 117  ,gbp_g29
22:03:38 118  ,gbp_g30
22:03:38 119  ,gbp_g31
22:03:38 120  ,gbp_g32
22:03:38 121  ,gbp_g33
22:03:38 122  ,gbp_g34
22:03:38 123  ,gbp_g35
22:03:38 124  ,gbp_g36
22:03:38 125  ,gbp_g37
22:03:38 126  ,gbp_g38
22:03:38 127  ,gbp_g39
22:03:38 128  ,gbp_g40
22:03:38 129  ,jpy_g00
22:03:38 130  ,jpy_g01
22:03:38 131  ,jpy_g02
22:03:38 132  ,jpy_g03
22:03:38 133  ,jpy_g04
22:03:38 134  ,jpy_g05
22:03:38 135  ,jpy_g06
22:03:38 136  ,jpy_g07
22:03:38 137  ,jpy_g08
22:03:38 138  ,jpy_g09
22:03:38 139  ,jpy_g10
22:03:38 140  ,jpy_g11
22:03:38 141  ,jpy_g12
22:03:38 142  ,jpy_g13
22:03:38 143  ,jpy_g14
22:03:38 144  ,jpy_g15
22:03:38 145  ,jpy_g16
22:03:38 146  ,jpy_g17
22:03:38 147  ,jpy_g18
22:03:38 148  ,jpy_g19
22:03:38 149  ,jpy_g20
22:03:38 150  ,jpy_g21
22:03:38 151  ,jpy_g22
22:03:38 152  ,jpy_g23
22:03:38 153  ,jpy_g24
22:03:38 154  ,jpy_g25
22:03:38 155  ,jpy_g26
22:03:38 156  ,jpy_g27
22:03:38 157  ,jpy_g28
22:03:38 158  ,jpy_g29
22:03:38 159  ,jpy_g30
22:03:38 160  ,jpy_g31
22:03:38 161  ,jpy_g32
22:03:38 162  ,jpy_g33
22:03:38 163  ,jpy_g34
22:03:38 164  ,jpy_g35
22:03:38 165  ,jpy_g36
22:03:38 166  ,jpy_g37
22:03:38 167  ,jpy_g38
22:03:38 168  ,jpy_g39
22:03:38 169  ,jpy_g40
22:03:38 170  ,cad_g00
22:03:38 171  ,cad_g01
22:03:38 172  ,cad_g02
22:03:38 173  ,cad_g03
22:03:38 174  ,cad_g04
22:03:38 175  ,cad_g05
22:03:38 176  ,cad_g06
22:03:38 177  ,cad_g07
22:03:38 178  ,cad_g08
22:03:38 179  ,cad_g09
22:03:38 180  ,cad_g10
22:03:38 181  ,cad_g11
22:03:38 182  ,cad_g12
22:03:38 183  ,cad_g13
22:03:38 184  ,cad_g14
22:03:38 185  ,cad_g15
22:03:38 186  ,cad_g16
22:03:38 187  ,cad_g17
22:03:38 188  ,cad_g18
22:03:38 189  ,cad_g19
22:03:38 190  ,cad_g20
22:03:38 191  ,cad_g21
22:03:38 192  ,cad_g22
22:03:38 193  ,cad_g23
22:03:38 194  ,cad_g24
22:03:38 195  ,cad_g25
22:03:38 196  ,cad_g26
22:03:38 197  ,cad_g27
22:03:38 198  ,cad_g28
22:03:38 199  ,cad_g29
22:03:38 200  ,cad_g30
22:03:38 201  ,cad_g31
22:03:38 202  ,cad_g32
22:03:38 203  ,cad_g33
22:03:38 204  ,cad_g34
22:03:38 205  ,cad_g35
22:03:38 206  ,cad_g36
22:03:38 207  ,cad_g37
22:03:38 208  ,cad_g38
22:03:38 209  ,cad_g39
22:03:38 210  ,cad_g40
22:03:38 211  ,chf_g00
22:03:38 212  ,chf_g01
22:03:38 213  ,chf_g02
22:03:38 214  ,chf_g03
22:03:38 215  ,chf_g04
22:03:38 216  ,chf_g05
22:03:38 217  ,chf_g06
22:03:38 218  ,chf_g07
22:03:38 219  ,chf_g08
22:03:38 220  ,chf_g09
22:03:38 221  ,chf_g10
22:03:38 222  ,chf_g11
22:03:38 223  ,chf_g12
22:03:38 224  ,chf_g13
22:03:38 225  ,chf_g14
22:03:38 226  ,chf_g15
22:03:38 227  ,chf_g16
22:03:38 228  ,chf_g17
22:03:38 229  ,chf_g18
22:03:38 230  ,chf_g19
22:03:38 231  ,chf_g20
22:03:38 232  ,chf_g21
22:03:38 233  ,chf_g22
22:03:38 234  ,chf_g23
22:03:38 235  ,chf_g24
22:03:38 236  ,chf_g25
22:03:38 237  ,chf_g26
22:03:38 238  ,chf_g27
22:03:38 239  ,chf_g28
22:03:38 240  ,chf_g29
22:03:38 241  ,chf_g30
22:03:38 242  ,chf_g31
22:03:38 243  ,chf_g32
22:03:38 244  ,chf_g33
22:03:38 245  ,chf_g34
22:03:38 246  ,chf_g35
22:03:38 247  ,chf_g36
22:03:38 248  ,chf_g37
22:03:38 249  ,chf_g38
22:03:38 250  ,chf_g39
22:03:38 251  ,chf_g40
22:03:38 252  FROM chf_ms14 m
22:03:38 253  WHERE gattn IN('nup','up')
22:03:38 254  AND 1+m.ydate < '&1'||' '||'&2'
22:03:38 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'06:55:00'

View created.

Elapsed: 00:00:00.12
22:03:38 SQL> 
22:03:38 SQL> -- rpt
22:03:38 SQL> 
22:03:38 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
22:03:38   2  
22:03:38 SQL> SELECT MAX(prdate) FROM bme
22:03:38   2  
22:03:38 SQL> -- Now build model from bme and score sme
22:03:38 SQL> @score1gattn.sql
22:03:38 SQL> -- score1gattn.sql
22:03:38 SQL> 
22:03:38 SQL> -- Does the 1st SVM score
22:03:38 SQL> 
22:03:38 SQL> -- Fill up svmc_apply_prep
22:03:38 SQL> @score_gattn.sql
22:03:38 SQL> --
22:03:38 SQL> -- score_gattn.sql
22:03:38 SQL> --
22:03:38 SQL> 
22:03:38 SQL> -- usage: score_gattn.sql
22:03:38 SQL> 
22:03:38 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:03:38 SQL> 
22:03:38 SQL> DEFINE target	= 'gattn'
22:03:38 SQL> DEFINE model_name = 'forex14'
22:03:38 SQL> DEFINE bldtable	= 'bme'
22:03:38 SQL> DEFINE scoretable = 'sme'
22:03:38 SQL> DEFINE case_id	= 'prdate'
22:03:38 SQL> 
22:03:38 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:03:38 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:03:38 SQL> 
22:03:38 SQL> -- Builds an SVM model using pl/sql.
22:03:38 SQL> 
22:03:38 SQL> -----------------------------------------------------------------------
22:03:38 SQL> --			    BUILD THE MODEL
22:03:38 SQL> -----------------------------------------------------------------------
22:03:38 SQL> 
22:03:38 SQL> -- Cleanup old build data preparation objects for repeat runs
22:03:38 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
22:03:38 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:03:38 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
22:03:38 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
22:03:38 SQL> 
22:03:38 SQL> 
22:03:38 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:03:38 SQL> --
22:03:38 SQL> -- DROP	TABLE svmc_settings ;
22:03:38 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:03:38 SQL> -- DELETE svmc_settings;
22:03:38 SQL> 
22:03:38 SQL> -- The default classification algorithm is Naive Bayes. So override
22:03:38 SQL> -- this choice to SVM using a settings table.
22:03:38 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:03:38 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:03:38 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:03:38 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:03:38 SQL> -- models.
22:03:38 SQL> --
22:03:38 SQL> 
22:03:38 SQL> -- Do this once and then comment it out.
22:03:38 SQL> -- That makes script go faster.
22:03:38 SQL> -- BEGIN
22:03:38 SQL> -- -- Populate settings table
22:03:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:03:38 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:03:38 SQL> --
22:03:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:03:38 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:03:38 SQL> --
22:03:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:03:38 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:03:38 SQL> --   COMMIT;
22:03:38 SQL> -- END;
22:03:38 SQL> -- /
22:03:38 SQL> 
22:03:38 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:03:38 SQL> 
22:03:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:03:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:03:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
22:03:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:03:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:03:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:03:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:03:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:03:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:03:38 SQL> 
22:03:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:03:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:03:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:03:38 SQL> 
22:03:38 SQL> --------------------------------
22:03:38 SQL> -- PREPARE BUILD (TRAINING) DATA
22:03:38 SQL> --
22:03:38 SQL> 
22:03:38 SQL> -- 1. Missing Value treatment for all Predictors and
22:03:38 SQL> -- 2. Outlier Treatment and
22:03:38 SQL> -- 3. Normalization are performed below.
22:03:38 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:03:38 SQL> --    normalized here.
22:03:38 SQL> 
22:03:38 SQL> BEGIN
22:03:38   2  	-- Perform missing value treatment for all predictors
22:03:38   3  	-- create miss tables
22:03:38   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:03:38   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:03:38   6  
22:03:38   7  	-- populate miss tables
22:03:38   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:03:38   9  	  miss_table_name => 'svmc_miss_num',
22:03:38  10  	  data_table_name => '&bldtable',
22:03:38  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:03:38  12  
22:03:38  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:03:38  14  	  miss_table_name => 'svmc_miss_cat',
22:03:38  15  	  data_table_name => '&bldtable',
22:03:38  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:03:38  17  
22:03:38  18  	-- xform input data to replace missing values
22:03:38  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:03:38  20  	  miss_table_name => 'svmc_miss_num',
22:03:38  21  	  data_table_name => '&bldtable',
22:03:38  22  	  xform_view_name => 'xformed_build_miss_num');
22:03:38  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:03:38  24  	  miss_table_name => 'svmc_miss_cat',
22:03:38  25  	  data_table_name => '&bldtable',
22:03:38  26  	  xform_view_name => 'xformed_build_miss_cat');
22:03:38  27  
22:03:38  28  	-- Perform outlier treatment.
22:03:38  29  	-- create clip table
22:03:38  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:03:38  31  
22:03:38  32  	-- populate clip table
22:03:38  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:03:38  34  	  clip_table_name => 'svmc_clip',
22:03:38  35  	  data_table_name => '&bldtable',
22:03:38  36  	  tail_frac	  => 0.025,
22:03:38  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:03:38  38  
22:03:38  39  	-- xform input data to winsorized data
22:03:38  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:03:38  41  	  clip_table_name => 'svmc_clip',
22:03:38  42  	  data_table_name => '&bldtable',
22:03:38  43  	  xform_view_name => 'svmc_winsor');
22:03:38  44  
22:03:38  45  	-- create normalization table
22:03:38  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:03:38  47  
22:03:38  48  	-- populate normalization table based on winsorized data
22:03:38  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:03:38  50  	  norm_table_name => 'svmc_norm',
22:03:38  51  	  data_table_name => 'svmc_winsor',
22:03:38  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:03:38  53  
22:03:38  54  	-- normalize the original data
22:03:38  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:03:38  56  	  norm_table_name => 'svmc_norm',
22:03:38  57  	  data_table_name => '&bldtable',
22:03:38  58  	  xform_view_name => 'svmc_build_prep');
22:03:38  59  END;
22:03:38  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.03
22:03:56 SQL> 
22:03:56 SQL> ---------------------
22:03:56 SQL> -- CREATE A NEW MODEL
22:03:56 SQL> --
22:03:56 SQL> -- Cleanup old model with the same name for repeat runs
22:03:56 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:03:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:03:56   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.29
22:03:57 SQL> 
22:03:57 SQL> -- Build a new SVM Model
22:03:57 SQL> BEGIN
22:03:57   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:03:57   3  	  model_name	      => '&model_name',
22:03:57   4  	  mining_function     => dbms_data_mining.classification,
22:03:57   5  	  data_table_name     => 'svmc_build_prep',
22:03:57   6  	  case_id_column_name => '&case_id',
22:03:57   7  	  target_column_name  => '&target',
22:03:57   8  	  settings_table_name => 'svmc_settings');
22:03:57   9  END;
22:03:57  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.27
22:04:24 SQL> 
22:04:24 SQL> -----------------------------------------------------------------------
22:04:24 SQL> --			       APPLY/score THE MODEL
22:04:24 SQL> -----------------------------------------------------------------------
22:04:24 SQL> 
22:04:24 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:04:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:04:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:04:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:04:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:04:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:04:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:04:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:04:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:04:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:04:24 SQL> -----------------------
22:04:24 SQL> -- PREPARE SCORING DATA
22:04:24 SQL> --
22:04:24 SQL> -- If the data for model creation has been prepared, then the data
22:04:24 SQL> -- to be scored using the model must be prepared in the same manner
22:04:24 SQL> -- in order to obtain meaningful results.
22:04:24 SQL> --
22:04:24 SQL> -- 1. Missing Value treatment for all Predictors and
22:04:24 SQL> -- 2. Normalization
22:04:24 SQL> -- No outlier treatment will be performed during test and apply. The
22:04:24 SQL> -- normalization step is sufficient, since the normalization parameters
22:04:24 SQL> -- already capture the effects of outlier treatment done with build data.
22:04:24 SQL> --
22:04:24 SQL> BEGIN
22:04:24   2  	-- Xform Test data to replace missing values
22:04:24   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:04:24   4  	  miss_table_name => 'svmc_miss_num',
22:04:24   5  	  data_table_name => '&scoretable',
22:04:24   6  	  xform_view_name => 'xformed_apply_miss_num');
22:04:24   7  
22:04:24   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:04:24   9  	  miss_table_name => 'svmc_miss_cat',
22:04:24  10  	  data_table_name => '&scoretable',
22:04:24  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:04:24  12  
22:04:24  13  	-- Normalize the data to be scored
22:04:24  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:04:24  15  	  norm_table_name => 'svmc_norm',
22:04:24  16  	  data_table_name => '&scoretable',
22:04:24  17  	  xform_view_name => 'svmc_apply_prep');
22:04:24  18  END;
22:04:24  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
22:04:25 SQL> 
22:04:25 SQL> -- Use same model_name used in score_gattn.sql
22:04:25 SQL> DEFINE model_name = 'forex14'
22:04:25 SQL> 
22:04:25 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
22:04:25 SQL> 
22:04:25 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
22:04:25   2  SELECT
22:04:25   3  prdate
22:04:25   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:04:25   5  ,sysdate
22:04:25   6  ,SUBSTR(prdate,1,3)pair
22:04:25   7  ,SUBSTR(prdate,4,19)ydate
22:04:25   8  FROM svmc_apply_prep
22:04:25   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
22:04:25 SQL> @chf_score1day_gattn.sql	2010-12-17 06:50:00
22:04:25 SQL> --
22:04:25 SQL> -- chf_score1day_gattn.sql
22:04:25 SQL> --
22:04:25 SQL> 
22:04:25 SQL> CREATE OR REPLACE VIEW sme AS
22:04:25   2  SELECT
22:04:25   3  'chf'||m.ydate prdate
22:04:25   4  ,NULL gattn
22:04:25   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:04:25   6  ,eur_g00
22:04:25   7  ,eur_g01
22:04:25   8  ,eur_g02
22:04:25   9  ,eur_g03
22:04:25  10  ,eur_g04
22:04:25  11  ,eur_g05
22:04:25  12  ,eur_g06
22:04:25  13  ,eur_g07
22:04:25  14  ,eur_g08
22:04:25  15  ,eur_g09
22:04:25  16  ,eur_g10
22:04:25  17  ,eur_g11
22:04:25  18  ,eur_g12
22:04:25  19  ,eur_g13
22:04:25  20  ,eur_g14
22:04:25  21  ,eur_g15
22:04:25  22  ,eur_g16
22:04:25  23  ,eur_g17
22:04:25  24  ,eur_g18
22:04:25  25  ,eur_g19
22:04:25  26  ,eur_g20
22:04:25  27  ,eur_g21
22:04:25  28  ,eur_g22
22:04:25  29  ,eur_g23
22:04:25  30  ,eur_g24
22:04:25  31  ,eur_g25
22:04:25  32  ,eur_g26
22:04:25  33  ,eur_g27
22:04:25  34  ,eur_g28
22:04:25  35  ,eur_g29
22:04:25  36  ,eur_g30
22:04:25  37  ,eur_g31
22:04:25  38  ,eur_g32
22:04:25  39  ,eur_g33
22:04:25  40  ,eur_g34
22:04:25  41  ,eur_g35
22:04:25  42  ,eur_g36
22:04:25  43  ,eur_g37
22:04:25  44  ,eur_g38
22:04:25  45  ,eur_g39
22:04:25  46  ,eur_g40
22:04:25  47  ,aud_g00
22:04:25  48  ,aud_g01
22:04:25  49  ,aud_g02
22:04:25  50  ,aud_g03
22:04:25  51  ,aud_g04
22:04:25  52  ,aud_g05
22:04:25  53  ,aud_g06
22:04:25  54  ,aud_g07
22:04:25  55  ,aud_g08
22:04:25  56  ,aud_g09
22:04:25  57  ,aud_g10
22:04:25  58  ,aud_g11
22:04:25  59  ,aud_g12
22:04:25  60  ,aud_g13
22:04:25  61  ,aud_g14
22:04:25  62  ,aud_g15
22:04:25  63  ,aud_g16
22:04:25  64  ,aud_g17
22:04:25  65  ,aud_g18
22:04:25  66  ,aud_g19
22:04:25  67  ,aud_g20
22:04:25  68  ,aud_g21
22:04:25  69  ,aud_g22
22:04:25  70  ,aud_g23
22:04:25  71  ,aud_g24
22:04:25  72  ,aud_g25
22:04:25  73  ,aud_g26
22:04:25  74  ,aud_g27
22:04:25  75  ,aud_g28
22:04:25  76  ,aud_g29
22:04:25  77  ,aud_g30
22:04:25  78  ,aud_g31
22:04:25  79  ,aud_g32
22:04:25  80  ,aud_g33
22:04:25  81  ,aud_g34
22:04:25  82  ,aud_g35
22:04:25  83  ,aud_g36
22:04:25  84  ,aud_g37
22:04:25  85  ,aud_g38
22:04:25  86  ,aud_g39
22:04:25  87  ,aud_g40
22:04:25  88  ,gbp_g00
22:04:25  89  ,gbp_g01
22:04:25  90  ,gbp_g02
22:04:25  91  ,gbp_g03
22:04:25  92  ,gbp_g04
22:04:25  93  ,gbp_g05
22:04:25  94  ,gbp_g06
22:04:25  95  ,gbp_g07
22:04:25  96  ,gbp_g08
22:04:25  97  ,gbp_g09
22:04:25  98  ,gbp_g10
22:04:25  99  ,gbp_g11
22:04:25 100  ,gbp_g12
22:04:25 101  ,gbp_g13
22:04:25 102  ,gbp_g14
22:04:25 103  ,gbp_g15
22:04:25 104  ,gbp_g16
22:04:25 105  ,gbp_g17
22:04:25 106  ,gbp_g18
22:04:25 107  ,gbp_g19
22:04:25 108  ,gbp_g20
22:04:25 109  ,gbp_g21
22:04:25 110  ,gbp_g22
22:04:25 111  ,gbp_g23
22:04:25 112  ,gbp_g24
22:04:25 113  ,gbp_g25
22:04:25 114  ,gbp_g26
22:04:25 115  ,gbp_g27
22:04:25 116  ,gbp_g28
22:04:25 117  ,gbp_g29
22:04:25 118  ,gbp_g30
22:04:25 119  ,gbp_g31
22:04:25 120  ,gbp_g32
22:04:25 121  ,gbp_g33
22:04:25 122  ,gbp_g34
22:04:25 123  ,gbp_g35
22:04:25 124  ,gbp_g36
22:04:25 125  ,gbp_g37
22:04:25 126  ,gbp_g38
22:04:25 127  ,gbp_g39
22:04:25 128  ,gbp_g40
22:04:25 129  ,jpy_g00
22:04:25 130  ,jpy_g01
22:04:25 131  ,jpy_g02
22:04:25 132  ,jpy_g03
22:04:25 133  ,jpy_g04
22:04:25 134  ,jpy_g05
22:04:25 135  ,jpy_g06
22:04:25 136  ,jpy_g07
22:04:25 137  ,jpy_g08
22:04:25 138  ,jpy_g09
22:04:25 139  ,jpy_g10
22:04:25 140  ,jpy_g11
22:04:25 141  ,jpy_g12
22:04:25 142  ,jpy_g13
22:04:25 143  ,jpy_g14
22:04:25 144  ,jpy_g15
22:04:25 145  ,jpy_g16
22:04:25 146  ,jpy_g17
22:04:25 147  ,jpy_g18
22:04:25 148  ,jpy_g19
22:04:25 149  ,jpy_g20
22:04:25 150  ,jpy_g21
22:04:25 151  ,jpy_g22
22:04:25 152  ,jpy_g23
22:04:25 153  ,jpy_g24
22:04:25 154  ,jpy_g25
22:04:25 155  ,jpy_g26
22:04:25 156  ,jpy_g27
22:04:25 157  ,jpy_g28
22:04:25 158  ,jpy_g29
22:04:25 159  ,jpy_g30
22:04:25 160  ,jpy_g31
22:04:25 161  ,jpy_g32
22:04:25 162  ,jpy_g33
22:04:25 163  ,jpy_g34
22:04:25 164  ,jpy_g35
22:04:25 165  ,jpy_g36
22:04:25 166  ,jpy_g37
22:04:25 167  ,jpy_g38
22:04:25 168  ,jpy_g39
22:04:25 169  ,jpy_g40
22:04:25 170  ,cad_g00
22:04:25 171  ,cad_g01
22:04:25 172  ,cad_g02
22:04:25 173  ,cad_g03
22:04:25 174  ,cad_g04
22:04:25 175  ,cad_g05
22:04:25 176  ,cad_g06
22:04:25 177  ,cad_g07
22:04:25 178  ,cad_g08
22:04:25 179  ,cad_g09
22:04:25 180  ,cad_g10
22:04:25 181  ,cad_g11
22:04:25 182  ,cad_g12
22:04:25 183  ,cad_g13
22:04:25 184  ,cad_g14
22:04:25 185  ,cad_g15
22:04:25 186  ,cad_g16
22:04:25 187  ,cad_g17
22:04:25 188  ,cad_g18
22:04:25 189  ,cad_g19
22:04:25 190  ,cad_g20
22:04:25 191  ,cad_g21
22:04:25 192  ,cad_g22
22:04:25 193  ,cad_g23
22:04:25 194  ,cad_g24
22:04:25 195  ,cad_g25
22:04:25 196  ,cad_g26
22:04:25 197  ,cad_g27
22:04:25 198  ,cad_g28
22:04:25 199  ,cad_g29
22:04:25 200  ,cad_g30
22:04:25 201  ,cad_g31
22:04:25 202  ,cad_g32
22:04:25 203  ,cad_g33
22:04:25 204  ,cad_g34
22:04:25 205  ,cad_g35
22:04:25 206  ,cad_g36
22:04:25 207  ,cad_g37
22:04:25 208  ,cad_g38
22:04:25 209  ,cad_g39
22:04:25 210  ,cad_g40
22:04:25 211  ,chf_g00
22:04:25 212  ,chf_g01
22:04:25 213  ,chf_g02
22:04:25 214  ,chf_g03
22:04:25 215  ,chf_g04
22:04:25 216  ,chf_g05
22:04:25 217  ,chf_g06
22:04:25 218  ,chf_g07
22:04:25 219  ,chf_g08
22:04:25 220  ,chf_g09
22:04:25 221  ,chf_g10
22:04:25 222  ,chf_g11
22:04:25 223  ,chf_g12
22:04:25 224  ,chf_g13
22:04:25 225  ,chf_g14
22:04:25 226  ,chf_g15
22:04:25 227  ,chf_g16
22:04:25 228  ,chf_g17
22:04:25 229  ,chf_g18
22:04:25 230  ,chf_g19
22:04:25 231  ,chf_g20
22:04:25 232  ,chf_g21
22:04:25 233  ,chf_g22
22:04:25 234  ,chf_g23
22:04:25 235  ,chf_g24
22:04:25 236  ,chf_g25
22:04:25 237  ,chf_g26
22:04:25 238  ,chf_g27
22:04:25 239  ,chf_g28
22:04:25 240  ,chf_g29
22:04:25 241  ,chf_g30
22:04:25 242  ,chf_g31
22:04:25 243  ,chf_g32
22:04:25 244  ,chf_g33
22:04:25 245  ,chf_g34
22:04:25 246  ,chf_g35
22:04:25 247  ,chf_g36
22:04:25 248  ,chf_g37
22:04:25 249  ,chf_g38
22:04:25 250  ,chf_g39
22:04:25 251  ,chf_g40
22:04:25 252  FROM chf_ms14 m
22:04:25 253  WHERE m.ydate = '&1'||' '||'&2'
22:04:25 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'06:50:00'

View created.

Elapsed: 00:00:00.13
22:04:25 SQL> 
22:04:25 SQL> -- rpt
22:04:25 SQL> -- We should see just 1 row:
22:04:25 SQL> 
22:04:25 SQL> SELECT COUNT(prdate) FROM sme
22:04:25   2  
22:04:25 SQL> -- Build the model:
22:04:25 SQL> CREATE OR REPLACE VIEW bme AS
22:04:25   2  SELECT
22:04:25   3  'chf'||m.ydate prdate
22:04:25   4  ,gattn
22:04:25   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:04:25   6  ,eur_g00
22:04:25   7  ,eur_g01
22:04:25   8  ,eur_g02
22:04:25   9  ,eur_g03
22:04:25  10  ,eur_g04
22:04:25  11  ,eur_g05
22:04:25  12  ,eur_g06
22:04:25  13  ,eur_g07
22:04:25  14  ,eur_g08
22:04:25  15  ,eur_g09
22:04:25  16  ,eur_g10
22:04:25  17  ,eur_g11
22:04:25  18  ,eur_g12
22:04:25  19  ,eur_g13
22:04:25  20  ,eur_g14
22:04:25  21  ,eur_g15
22:04:25  22  ,eur_g16
22:04:25  23  ,eur_g17
22:04:25  24  ,eur_g18
22:04:25  25  ,eur_g19
22:04:25  26  ,eur_g20
22:04:25  27  ,eur_g21
22:04:25  28  ,eur_g22
22:04:25  29  ,eur_g23
22:04:25  30  ,eur_g24
22:04:25  31  ,eur_g25
22:04:25  32  ,eur_g26
22:04:25  33  ,eur_g27
22:04:25  34  ,eur_g28
22:04:25  35  ,eur_g29
22:04:25  36  ,eur_g30
22:04:25  37  ,eur_g31
22:04:25  38  ,eur_g32
22:04:25  39  ,eur_g33
22:04:25  40  ,eur_g34
22:04:25  41  ,eur_g35
22:04:25  42  ,eur_g36
22:04:25  43  ,eur_g37
22:04:25  44  ,eur_g38
22:04:25  45  ,eur_g39
22:04:25  46  ,eur_g40
22:04:25  47  ,aud_g00
22:04:25  48  ,aud_g01
22:04:25  49  ,aud_g02
22:04:25  50  ,aud_g03
22:04:25  51  ,aud_g04
22:04:25  52  ,aud_g05
22:04:25  53  ,aud_g06
22:04:25  54  ,aud_g07
22:04:25  55  ,aud_g08
22:04:25  56  ,aud_g09
22:04:25  57  ,aud_g10
22:04:25  58  ,aud_g11
22:04:25  59  ,aud_g12
22:04:25  60  ,aud_g13
22:04:25  61  ,aud_g14
22:04:25  62  ,aud_g15
22:04:25  63  ,aud_g16
22:04:25  64  ,aud_g17
22:04:25  65  ,aud_g18
22:04:25  66  ,aud_g19
22:04:25  67  ,aud_g20
22:04:25  68  ,aud_g21
22:04:25  69  ,aud_g22
22:04:25  70  ,aud_g23
22:04:25  71  ,aud_g24
22:04:25  72  ,aud_g25
22:04:25  73  ,aud_g26
22:04:25  74  ,aud_g27
22:04:25  75  ,aud_g28
22:04:25  76  ,aud_g29
22:04:25  77  ,aud_g30
22:04:25  78  ,aud_g31
22:04:25  79  ,aud_g32
22:04:25  80  ,aud_g33
22:04:25  81  ,aud_g34
22:04:25  82  ,aud_g35
22:04:25  83  ,aud_g36
22:04:25  84  ,aud_g37
22:04:25  85  ,aud_g38
22:04:25  86  ,aud_g39
22:04:25  87  ,aud_g40
22:04:25  88  ,gbp_g00
22:04:25  89  ,gbp_g01
22:04:25  90  ,gbp_g02
22:04:25  91  ,gbp_g03
22:04:25  92  ,gbp_g04
22:04:25  93  ,gbp_g05
22:04:25  94  ,gbp_g06
22:04:25  95  ,gbp_g07
22:04:25  96  ,gbp_g08
22:04:25  97  ,gbp_g09
22:04:25  98  ,gbp_g10
22:04:25  99  ,gbp_g11
22:04:25 100  ,gbp_g12
22:04:25 101  ,gbp_g13
22:04:25 102  ,gbp_g14
22:04:25 103  ,gbp_g15
22:04:25 104  ,gbp_g16
22:04:25 105  ,gbp_g17
22:04:25 106  ,gbp_g18
22:04:25 107  ,gbp_g19
22:04:25 108  ,gbp_g20
22:04:25 109  ,gbp_g21
22:04:25 110  ,gbp_g22
22:04:25 111  ,gbp_g23
22:04:25 112  ,gbp_g24
22:04:25 113  ,gbp_g25
22:04:25 114  ,gbp_g26
22:04:25 115  ,gbp_g27
22:04:25 116  ,gbp_g28
22:04:25 117  ,gbp_g29
22:04:25 118  ,gbp_g30
22:04:25 119  ,gbp_g31
22:04:25 120  ,gbp_g32
22:04:25 121  ,gbp_g33
22:04:25 122  ,gbp_g34
22:04:25 123  ,gbp_g35
22:04:25 124  ,gbp_g36
22:04:25 125  ,gbp_g37
22:04:25 126  ,gbp_g38
22:04:25 127  ,gbp_g39
22:04:25 128  ,gbp_g40
22:04:25 129  ,jpy_g00
22:04:25 130  ,jpy_g01
22:04:25 131  ,jpy_g02
22:04:25 132  ,jpy_g03
22:04:25 133  ,jpy_g04
22:04:25 134  ,jpy_g05
22:04:25 135  ,jpy_g06
22:04:25 136  ,jpy_g07
22:04:25 137  ,jpy_g08
22:04:25 138  ,jpy_g09
22:04:25 139  ,jpy_g10
22:04:25 140  ,jpy_g11
22:04:25 141  ,jpy_g12
22:04:25 142  ,jpy_g13
22:04:25 143  ,jpy_g14
22:04:25 144  ,jpy_g15
22:04:25 145  ,jpy_g16
22:04:25 146  ,jpy_g17
22:04:25 147  ,jpy_g18
22:04:25 148  ,jpy_g19
22:04:25 149  ,jpy_g20
22:04:25 150  ,jpy_g21
22:04:25 151  ,jpy_g22
22:04:25 152  ,jpy_g23
22:04:25 153  ,jpy_g24
22:04:25 154  ,jpy_g25
22:04:25 155  ,jpy_g26
22:04:25 156  ,jpy_g27
22:04:25 157  ,jpy_g28
22:04:25 158  ,jpy_g29
22:04:25 159  ,jpy_g30
22:04:25 160  ,jpy_g31
22:04:25 161  ,jpy_g32
22:04:25 162  ,jpy_g33
22:04:25 163  ,jpy_g34
22:04:25 164  ,jpy_g35
22:04:25 165  ,jpy_g36
22:04:25 166  ,jpy_g37
22:04:25 167  ,jpy_g38
22:04:25 168  ,jpy_g39
22:04:25 169  ,jpy_g40
22:04:25 170  ,cad_g00
22:04:25 171  ,cad_g01
22:04:25 172  ,cad_g02
22:04:25 173  ,cad_g03
22:04:25 174  ,cad_g04
22:04:25 175  ,cad_g05
22:04:25 176  ,cad_g06
22:04:25 177  ,cad_g07
22:04:25 178  ,cad_g08
22:04:25 179  ,cad_g09
22:04:25 180  ,cad_g10
22:04:25 181  ,cad_g11
22:04:25 182  ,cad_g12
22:04:25 183  ,cad_g13
22:04:25 184  ,cad_g14
22:04:25 185  ,cad_g15
22:04:25 186  ,cad_g16
22:04:25 187  ,cad_g17
22:04:25 188  ,cad_g18
22:04:25 189  ,cad_g19
22:04:25 190  ,cad_g20
22:04:25 191  ,cad_g21
22:04:25 192  ,cad_g22
22:04:25 193  ,cad_g23
22:04:25 194  ,cad_g24
22:04:25 195  ,cad_g25
22:04:25 196  ,cad_g26
22:04:25 197  ,cad_g27
22:04:25 198  ,cad_g28
22:04:25 199  ,cad_g29
22:04:25 200  ,cad_g30
22:04:25 201  ,cad_g31
22:04:25 202  ,cad_g32
22:04:25 203  ,cad_g33
22:04:25 204  ,cad_g34
22:04:25 205  ,cad_g35
22:04:25 206  ,cad_g36
22:04:25 207  ,cad_g37
22:04:25 208  ,cad_g38
22:04:25 209  ,cad_g39
22:04:25 210  ,cad_g40
22:04:25 211  ,chf_g00
22:04:25 212  ,chf_g01
22:04:25 213  ,chf_g02
22:04:25 214  ,chf_g03
22:04:25 215  ,chf_g04
22:04:25 216  ,chf_g05
22:04:25 217  ,chf_g06
22:04:25 218  ,chf_g07
22:04:25 219  ,chf_g08
22:04:25 220  ,chf_g09
22:04:25 221  ,chf_g10
22:04:25 222  ,chf_g11
22:04:25 223  ,chf_g12
22:04:25 224  ,chf_g13
22:04:25 225  ,chf_g14
22:04:25 226  ,chf_g15
22:04:25 227  ,chf_g16
22:04:25 228  ,chf_g17
22:04:25 229  ,chf_g18
22:04:25 230  ,chf_g19
22:04:25 231  ,chf_g20
22:04:25 232  ,chf_g21
22:04:25 233  ,chf_g22
22:04:25 234  ,chf_g23
22:04:25 235  ,chf_g24
22:04:25 236  ,chf_g25
22:04:25 237  ,chf_g26
22:04:25 238  ,chf_g27
22:04:25 239  ,chf_g28
22:04:25 240  ,chf_g29
22:04:25 241  ,chf_g30
22:04:25 242  ,chf_g31
22:04:25 243  ,chf_g32
22:04:25 244  ,chf_g33
22:04:25 245  ,chf_g34
22:04:25 246  ,chf_g35
22:04:25 247  ,chf_g36
22:04:25 248  ,chf_g37
22:04:25 249  ,chf_g38
22:04:25 250  ,chf_g39
22:04:25 251  ,chf_g40
22:04:25 252  FROM chf_ms14 m
22:04:25 253  WHERE gattn IN('nup','up')
22:04:25 254  AND 1+m.ydate < '&1'||' '||'&2'
22:04:25 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'06:50:00'

View created.

Elapsed: 00:00:00.13
22:04:25 SQL> 
22:04:25 SQL> -- rpt
22:04:25 SQL> 
22:04:25 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
22:04:25   2  
22:04:25 SQL> SELECT MAX(prdate) FROM bme
22:04:25   2  
22:04:25 SQL> -- Now build model from bme and score sme
22:04:25 SQL> @score1gattn.sql
22:04:25 SQL> -- score1gattn.sql
22:04:25 SQL> 
22:04:25 SQL> -- Does the 1st SVM score
22:04:25 SQL> 
22:04:25 SQL> -- Fill up svmc_apply_prep
22:04:25 SQL> @score_gattn.sql
22:04:25 SQL> --
22:04:25 SQL> -- score_gattn.sql
22:04:25 SQL> --
22:04:25 SQL> 
22:04:25 SQL> -- usage: score_gattn.sql
22:04:25 SQL> 
22:04:25 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:04:25 SQL> 
22:04:25 SQL> DEFINE target	= 'gattn'
22:04:25 SQL> DEFINE model_name = 'forex14'
22:04:25 SQL> DEFINE bldtable	= 'bme'
22:04:25 SQL> DEFINE scoretable = 'sme'
22:04:25 SQL> DEFINE case_id	= 'prdate'
22:04:25 SQL> 
22:04:25 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:04:25 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:04:25 SQL> 
22:04:25 SQL> -- Builds an SVM model using pl/sql.
22:04:25 SQL> 
22:04:25 SQL> -----------------------------------------------------------------------
22:04:25 SQL> --			    BUILD THE MODEL
22:04:25 SQL> -----------------------------------------------------------------------
22:04:25 SQL> 
22:04:25 SQL> -- Cleanup old build data preparation objects for repeat runs
22:04:25 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
22:04:25 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
22:04:25 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
22:04:25 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
22:04:25 SQL> 
22:04:25 SQL> 
22:04:25 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:04:25 SQL> --
22:04:25 SQL> -- DROP	TABLE svmc_settings ;
22:04:25 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:04:25 SQL> -- DELETE svmc_settings;
22:04:25 SQL> 
22:04:25 SQL> -- The default classification algorithm is Naive Bayes. So override
22:04:25 SQL> -- this choice to SVM using a settings table.
22:04:25 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:04:25 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:04:25 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:04:25 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:04:25 SQL> -- models.
22:04:25 SQL> --
22:04:25 SQL> 
22:04:25 SQL> -- Do this once and then comment it out.
22:04:25 SQL> -- That makes script go faster.
22:04:25 SQL> -- BEGIN
22:04:25 SQL> -- -- Populate settings table
22:04:25 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:04:25 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:04:25 SQL> --
22:04:25 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:04:25 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:04:25 SQL> --
22:04:25 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:04:25 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:04:25 SQL> --   COMMIT;
22:04:25 SQL> -- END;
22:04:25 SQL> -- /
22:04:25 SQL> 
22:04:25 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
22:04:25 SQL> 
22:04:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:04:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:04:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:04:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:04:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:04:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
22:04:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:04:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:04:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:04:26 SQL> 
22:04:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:04:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:04:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:04:26 SQL> 
22:04:26 SQL> --------------------------------
22:04:26 SQL> -- PREPARE BUILD (TRAINING) DATA
22:04:26 SQL> --
22:04:26 SQL> 
22:04:26 SQL> -- 1. Missing Value treatment for all Predictors and
22:04:26 SQL> -- 2. Outlier Treatment and
22:04:26 SQL> -- 3. Normalization are performed below.
22:04:26 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:04:26 SQL> --    normalized here.
22:04:26 SQL> 
22:04:26 SQL> BEGIN
22:04:26   2  	-- Perform missing value treatment for all predictors
22:04:26   3  	-- create miss tables
22:04:26   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:04:26   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:04:26   6  
22:04:26   7  	-- populate miss tables
22:04:26   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:04:26   9  	  miss_table_name => 'svmc_miss_num',
22:04:26  10  	  data_table_name => '&bldtable',
22:04:26  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:04:26  12  
22:04:26  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:04:26  14  	  miss_table_name => 'svmc_miss_cat',
22:04:26  15  	  data_table_name => '&bldtable',
22:04:26  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:04:26  17  
22:04:26  18  	-- xform input data to replace missing values
22:04:26  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:04:26  20  	  miss_table_name => 'svmc_miss_num',
22:04:26  21  	  data_table_name => '&bldtable',
22:04:26  22  	  xform_view_name => 'xformed_build_miss_num');
22:04:26  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:04:26  24  	  miss_table_name => 'svmc_miss_cat',
22:04:26  25  	  data_table_name => '&bldtable',
22:04:26  26  	  xform_view_name => 'xformed_build_miss_cat');
22:04:26  27  
22:04:26  28  	-- Perform outlier treatment.
22:04:26  29  	-- create clip table
22:04:26  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:04:26  31  
22:04:26  32  	-- populate clip table
22:04:26  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:04:26  34  	  clip_table_name => 'svmc_clip',
22:04:26  35  	  data_table_name => '&bldtable',
22:04:26  36  	  tail_frac	  => 0.025,
22:04:26  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:04:26  38  
22:04:26  39  	-- xform input data to winsorized data
22:04:26  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:04:26  41  	  clip_table_name => 'svmc_clip',
22:04:26  42  	  data_table_name => '&bldtable',
22:04:26  43  	  xform_view_name => 'svmc_winsor');
22:04:26  44  
22:04:26  45  	-- create normalization table
22:04:26  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:04:26  47  
22:04:26  48  	-- populate normalization table based on winsorized data
22:04:26  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:04:26  50  	  norm_table_name => 'svmc_norm',
22:04:26  51  	  data_table_name => 'svmc_winsor',
22:04:26  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:04:26  53  
22:04:26  54  	-- normalize the original data
22:04:26  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:04:26  56  	  norm_table_name => 'svmc_norm',
22:04:26  57  	  data_table_name => '&bldtable',
22:04:26  58  	  xform_view_name => 'svmc_build_prep');
22:04:26  59  END;
22:04:26  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.91
22:04:44 SQL> 
22:04:44 SQL> ---------------------
22:04:44 SQL> -- CREATE A NEW MODEL
22:04:44 SQL> --
22:04:44 SQL> -- Cleanup old model with the same name for repeat runs
22:04:44 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:04:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:04:44   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:02.53
22:04:46 SQL> 
22:04:46 SQL> -- Build a new SVM Model
22:04:46 SQL> BEGIN
22:04:46   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:04:46   3  	  model_name	      => '&model_name',
22:04:46   4  	  mining_function     => dbms_data_mining.classification,
22:04:46   5  	  data_table_name     => 'svmc_build_prep',
22:04:46   6  	  case_id_column_name => '&case_id',
22:04:46   7  	  target_column_name  => '&target',
22:04:46   8  	  settings_table_name => 'svmc_settings');
22:04:46   9  END;
22:04:46  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.59
22:05:13 SQL> 
22:05:13 SQL> -----------------------------------------------------------------------
22:05:13 SQL> --			       APPLY/score THE MODEL
22:05:13 SQL> -----------------------------------------------------------------------
22:05:13 SQL> 
22:05:13 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:05:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:05:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:05:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:05:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:05:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:05:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:05:13 SQL> -----------------------
22:05:13 SQL> -- PREPARE SCORING DATA
22:05:13 SQL> --
22:05:13 SQL> -- If the data for model creation has been prepared, then the data
22:05:13 SQL> -- to be scored using the model must be prepared in the same manner
22:05:13 SQL> -- in order to obtain meaningful results.
22:05:13 SQL> --
22:05:13 SQL> -- 1. Missing Value treatment for all Predictors and
22:05:13 SQL> -- 2. Normalization
22:05:13 SQL> -- No outlier treatment will be performed during test and apply. The
22:05:13 SQL> -- normalization step is sufficient, since the normalization parameters
22:05:13 SQL> -- already capture the effects of outlier treatment done with build data.
22:05:13 SQL> --
22:05:13 SQL> BEGIN
22:05:13   2  	-- Xform Test data to replace missing values
22:05:13   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:05:13   4  	  miss_table_name => 'svmc_miss_num',
22:05:13   5  	  data_table_name => '&scoretable',
22:05:13   6  	  xform_view_name => 'xformed_apply_miss_num');
22:05:13   7  
22:05:13   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:05:13   9  	  miss_table_name => 'svmc_miss_cat',
22:05:13  10  	  data_table_name => '&scoretable',
22:05:13  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:05:13  12  
22:05:13  13  	-- Normalize the data to be scored
22:05:13  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:05:13  15  	  norm_table_name => 'svmc_norm',
22:05:13  16  	  data_table_name => '&scoretable',
22:05:13  17  	  xform_view_name => 'svmc_apply_prep');
22:05:13  18  END;
22:05:13  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
22:05:14 SQL> 
22:05:14 SQL> -- Use same model_name used in score_gattn.sql
22:05:14 SQL> DEFINE model_name = 'forex14'
22:05:14 SQL> 
22:05:14 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
22:05:14 SQL> 
22:05:14 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
22:05:14   2  SELECT
22:05:14   3  prdate
22:05:14   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:05:14   5  ,sysdate
22:05:14   6  ,SUBSTR(prdate,1,3)pair
22:05:14   7  ,SUBSTR(prdate,4,19)ydate
22:05:14   8  FROM svmc_apply_prep
22:05:14   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.20
22:05:14 SQL> @chf_score1day_gattn.sql	2010-12-17 06:45:00
22:05:14 SQL> --
22:05:14 SQL> -- chf_score1day_gattn.sql
22:05:14 SQL> --
22:05:14 SQL> 
22:05:14 SQL> CREATE OR REPLACE VIEW sme AS
22:05:14   2  SELECT
22:05:14   3  'chf'||m.ydate prdate
22:05:14   4  ,NULL gattn
22:05:14   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:05:14   6  ,eur_g00
22:05:14   7  ,eur_g01
22:05:14   8  ,eur_g02
22:05:14   9  ,eur_g03
22:05:14  10  ,eur_g04
22:05:14  11  ,eur_g05
22:05:14  12  ,eur_g06
22:05:14  13  ,eur_g07
22:05:14  14  ,eur_g08
22:05:14  15  ,eur_g09
22:05:14  16  ,eur_g10
22:05:14  17  ,eur_g11
22:05:14  18  ,eur_g12
22:05:14  19  ,eur_g13
22:05:14  20  ,eur_g14
22:05:14  21  ,eur_g15
22:05:14  22  ,eur_g16
22:05:14  23  ,eur_g17
22:05:14  24  ,eur_g18
22:05:14  25  ,eur_g19
22:05:14  26  ,eur_g20
22:05:14  27  ,eur_g21
22:05:14  28  ,eur_g22
22:05:14  29  ,eur_g23
22:05:14  30  ,eur_g24
22:05:14  31  ,eur_g25
22:05:14  32  ,eur_g26
22:05:14  33  ,eur_g27
22:05:14  34  ,eur_g28
22:05:14  35  ,eur_g29
22:05:14  36  ,eur_g30
22:05:14  37  ,eur_g31
22:05:14  38  ,eur_g32
22:05:14  39  ,eur_g33
22:05:14  40  ,eur_g34
22:05:14  41  ,eur_g35
22:05:14  42  ,eur_g36
22:05:14  43  ,eur_g37
22:05:14  44  ,eur_g38
22:05:14  45  ,eur_g39
22:05:14  46  ,eur_g40
22:05:14  47  ,aud_g00
22:05:14  48  ,aud_g01
22:05:14  49  ,aud_g02
22:05:14  50  ,aud_g03
22:05:14  51  ,aud_g04
22:05:14  52  ,aud_g05
22:05:14  53  ,aud_g06
22:05:14  54  ,aud_g07
22:05:14  55  ,aud_g08
22:05:14  56  ,aud_g09
22:05:14  57  ,aud_g10
22:05:14  58  ,aud_g11
22:05:14  59  ,aud_g12
22:05:14  60  ,aud_g13
22:05:14  61  ,aud_g14
22:05:14  62  ,aud_g15
22:05:14  63  ,aud_g16
22:05:14  64  ,aud_g17
22:05:14  65  ,aud_g18
22:05:14  66  ,aud_g19
22:05:14  67  ,aud_g20
22:05:14  68  ,aud_g21
22:05:14  69  ,aud_g22
22:05:14  70  ,aud_g23
22:05:14  71  ,aud_g24
22:05:14  72  ,aud_g25
22:05:14  73  ,aud_g26
22:05:14  74  ,aud_g27
22:05:14  75  ,aud_g28
22:05:14  76  ,aud_g29
22:05:14  77  ,aud_g30
22:05:14  78  ,aud_g31
22:05:14  79  ,aud_g32
22:05:14  80  ,aud_g33
22:05:14  81  ,aud_g34
22:05:14  82  ,aud_g35
22:05:14  83  ,aud_g36
22:05:14  84  ,aud_g37
22:05:14  85  ,aud_g38
22:05:14  86  ,aud_g39
22:05:14  87  ,aud_g40
22:05:14  88  ,gbp_g00
22:05:14  89  ,gbp_g01
22:05:14  90  ,gbp_g02
22:05:14  91  ,gbp_g03
22:05:14  92  ,gbp_g04
22:05:14  93  ,gbp_g05
22:05:14  94  ,gbp_g06
22:05:14  95  ,gbp_g07
22:05:14  96  ,gbp_g08
22:05:14  97  ,gbp_g09
22:05:14  98  ,gbp_g10
22:05:14  99  ,gbp_g11
22:05:14 100  ,gbp_g12
22:05:14 101  ,gbp_g13
22:05:14 102  ,gbp_g14
22:05:14 103  ,gbp_g15
22:05:14 104  ,gbp_g16
22:05:14 105  ,gbp_g17
22:05:14 106  ,gbp_g18
22:05:14 107  ,gbp_g19
22:05:14 108  ,gbp_g20
22:05:14 109  ,gbp_g21
22:05:14 110  ,gbp_g22
22:05:14 111  ,gbp_g23
22:05:14 112  ,gbp_g24
22:05:14 113  ,gbp_g25
22:05:14 114  ,gbp_g26
22:05:14 115  ,gbp_g27
22:05:14 116  ,gbp_g28
22:05:14 117  ,gbp_g29
22:05:14 118  ,gbp_g30
22:05:14 119  ,gbp_g31
22:05:14 120  ,gbp_g32
22:05:14 121  ,gbp_g33
22:05:14 122  ,gbp_g34
22:05:14 123  ,gbp_g35
22:05:14 124  ,gbp_g36
22:05:14 125  ,gbp_g37
22:05:14 126  ,gbp_g38
22:05:14 127  ,gbp_g39
22:05:14 128  ,gbp_g40
22:05:14 129  ,jpy_g00
22:05:14 130  ,jpy_g01
22:05:14 131  ,jpy_g02
22:05:14 132  ,jpy_g03
22:05:14 133  ,jpy_g04
22:05:14 134  ,jpy_g05
22:05:14 135  ,jpy_g06
22:05:14 136  ,jpy_g07
22:05:14 137  ,jpy_g08
22:05:14 138  ,jpy_g09
22:05:14 139  ,jpy_g10
22:05:14 140  ,jpy_g11
22:05:14 141  ,jpy_g12
22:05:14 142  ,jpy_g13
22:05:14 143  ,jpy_g14
22:05:14 144  ,jpy_g15
22:05:14 145  ,jpy_g16
22:05:14 146  ,jpy_g17
22:05:14 147  ,jpy_g18
22:05:14 148  ,jpy_g19
22:05:14 149  ,jpy_g20
22:05:14 150  ,jpy_g21
22:05:14 151  ,jpy_g22
22:05:14 152  ,jpy_g23
22:05:14 153  ,jpy_g24
22:05:14 154  ,jpy_g25
22:05:14 155  ,jpy_g26
22:05:14 156  ,jpy_g27
22:05:14 157  ,jpy_g28
22:05:14 158  ,jpy_g29
22:05:14 159  ,jpy_g30
22:05:14 160  ,jpy_g31
22:05:14 161  ,jpy_g32
22:05:14 162  ,jpy_g33
22:05:14 163  ,jpy_g34
22:05:14 164  ,jpy_g35
22:05:14 165  ,jpy_g36
22:05:14 166  ,jpy_g37
22:05:14 167  ,jpy_g38
22:05:14 168  ,jpy_g39
22:05:14 169  ,jpy_g40
22:05:14 170  ,cad_g00
22:05:14 171  ,cad_g01
22:05:14 172  ,cad_g02
22:05:14 173  ,cad_g03
22:05:14 174  ,cad_g04
22:05:14 175  ,cad_g05
22:05:14 176  ,cad_g06
22:05:14 177  ,cad_g07
22:05:14 178  ,cad_g08
22:05:14 179  ,cad_g09
22:05:14 180  ,cad_g10
22:05:14 181  ,cad_g11
22:05:14 182  ,cad_g12
22:05:14 183  ,cad_g13
22:05:14 184  ,cad_g14
22:05:14 185  ,cad_g15
22:05:14 186  ,cad_g16
22:05:14 187  ,cad_g17
22:05:14 188  ,cad_g18
22:05:14 189  ,cad_g19
22:05:14 190  ,cad_g20
22:05:14 191  ,cad_g21
22:05:14 192  ,cad_g22
22:05:14 193  ,cad_g23
22:05:14 194  ,cad_g24
22:05:14 195  ,cad_g25
22:05:14 196  ,cad_g26
22:05:14 197  ,cad_g27
22:05:14 198  ,cad_g28
22:05:14 199  ,cad_g29
22:05:14 200  ,cad_g30
22:05:14 201  ,cad_g31
22:05:14 202  ,cad_g32
22:05:14 203  ,cad_g33
22:05:14 204  ,cad_g34
22:05:14 205  ,cad_g35
22:05:14 206  ,cad_g36
22:05:14 207  ,cad_g37
22:05:14 208  ,cad_g38
22:05:14 209  ,cad_g39
22:05:14 210  ,cad_g40
22:05:14 211  ,chf_g00
22:05:14 212  ,chf_g01
22:05:14 213  ,chf_g02
22:05:14 214  ,chf_g03
22:05:14 215  ,chf_g04
22:05:14 216  ,chf_g05
22:05:14 217  ,chf_g06
22:05:14 218  ,chf_g07
22:05:14 219  ,chf_g08
22:05:14 220  ,chf_g09
22:05:14 221  ,chf_g10
22:05:14 222  ,chf_g11
22:05:14 223  ,chf_g12
22:05:14 224  ,chf_g13
22:05:14 225  ,chf_g14
22:05:14 226  ,chf_g15
22:05:14 227  ,chf_g16
22:05:14 228  ,chf_g17
22:05:14 229  ,chf_g18
22:05:14 230  ,chf_g19
22:05:14 231  ,chf_g20
22:05:14 232  ,chf_g21
22:05:14 233  ,chf_g22
22:05:14 234  ,chf_g23
22:05:14 235  ,chf_g24
22:05:14 236  ,chf_g25
22:05:14 237  ,chf_g26
22:05:14 238  ,chf_g27
22:05:14 239  ,chf_g28
22:05:14 240  ,chf_g29
22:05:14 241  ,chf_g30
22:05:14 242  ,chf_g31
22:05:14 243  ,chf_g32
22:05:14 244  ,chf_g33
22:05:14 245  ,chf_g34
22:05:14 246  ,chf_g35
22:05:14 247  ,chf_g36
22:05:14 248  ,chf_g37
22:05:14 249  ,chf_g38
22:05:14 250  ,chf_g39
22:05:14 251  ,chf_g40
22:05:14 252  FROM chf_ms14 m
22:05:14 253  WHERE m.ydate = '&1'||' '||'&2'
22:05:14 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'06:45:00'

View created.

Elapsed: 00:00:00.12
22:05:14 SQL> 
22:05:14 SQL> -- rpt
22:05:14 SQL> -- We should see just 1 row:
22:05:14 SQL> 
22:05:14 SQL> SELECT COUNT(prdate) FROM sme
22:05:14   2  
22:05:14 SQL> -- Build the model:
22:05:14 SQL> CREATE OR REPLACE VIEW bme AS
22:05:14   2  SELECT
22:05:14   3  'chf'||m.ydate prdate
22:05:14   4  ,gattn
22:05:14   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:05:14   6  ,eur_g00
22:05:14   7  ,eur_g01
22:05:14   8  ,eur_g02
22:05:14   9  ,eur_g03
22:05:14  10  ,eur_g04
22:05:14  11  ,eur_g05
22:05:14  12  ,eur_g06
22:05:14  13  ,eur_g07
22:05:14  14  ,eur_g08
22:05:14  15  ,eur_g09
22:05:14  16  ,eur_g10
22:05:14  17  ,eur_g11
22:05:14  18  ,eur_g12
22:05:14  19  ,eur_g13
22:05:14  20  ,eur_g14
22:05:14  21  ,eur_g15
22:05:14  22  ,eur_g16
22:05:14  23  ,eur_g17
22:05:14  24  ,eur_g18
22:05:14  25  ,eur_g19
22:05:14  26  ,eur_g20
22:05:14  27  ,eur_g21
22:05:14  28  ,eur_g22
22:05:14  29  ,eur_g23
22:05:14  30  ,eur_g24
22:05:14  31  ,eur_g25
22:05:14  32  ,eur_g26
22:05:14  33  ,eur_g27
22:05:14  34  ,eur_g28
22:05:14  35  ,eur_g29
22:05:14  36  ,eur_g30
22:05:14  37  ,eur_g31
22:05:14  38  ,eur_g32
22:05:14  39  ,eur_g33
22:05:14  40  ,eur_g34
22:05:14  41  ,eur_g35
22:05:14  42  ,eur_g36
22:05:14  43  ,eur_g37
22:05:14  44  ,eur_g38
22:05:14  45  ,eur_g39
22:05:14  46  ,eur_g40
22:05:14  47  ,aud_g00
22:05:14  48  ,aud_g01
22:05:14  49  ,aud_g02
22:05:14  50  ,aud_g03
22:05:14  51  ,aud_g04
22:05:14  52  ,aud_g05
22:05:14  53  ,aud_g06
22:05:14  54  ,aud_g07
22:05:14  55  ,aud_g08
22:05:14  56  ,aud_g09
22:05:14  57  ,aud_g10
22:05:14  58  ,aud_g11
22:05:14  59  ,aud_g12
22:05:14  60  ,aud_g13
22:05:14  61  ,aud_g14
22:05:14  62  ,aud_g15
22:05:14  63  ,aud_g16
22:05:14  64  ,aud_g17
22:05:14  65  ,aud_g18
22:05:14  66  ,aud_g19
22:05:14  67  ,aud_g20
22:05:14  68  ,aud_g21
22:05:14  69  ,aud_g22
22:05:14  70  ,aud_g23
22:05:14  71  ,aud_g24
22:05:14  72  ,aud_g25
22:05:14  73  ,aud_g26
22:05:14  74  ,aud_g27
22:05:14  75  ,aud_g28
22:05:14  76  ,aud_g29
22:05:14  77  ,aud_g30
22:05:14  78  ,aud_g31
22:05:14  79  ,aud_g32
22:05:14  80  ,aud_g33
22:05:14  81  ,aud_g34
22:05:14  82  ,aud_g35
22:05:14  83  ,aud_g36
22:05:14  84  ,aud_g37
22:05:14  85  ,aud_g38
22:05:14  86  ,aud_g39
22:05:14  87  ,aud_g40
22:05:14  88  ,gbp_g00
22:05:14  89  ,gbp_g01
22:05:14  90  ,gbp_g02
22:05:14  91  ,gbp_g03
22:05:14  92  ,gbp_g04
22:05:14  93  ,gbp_g05
22:05:14  94  ,gbp_g06
22:05:14  95  ,gbp_g07
22:05:14  96  ,gbp_g08
22:05:14  97  ,gbp_g09
22:05:14  98  ,gbp_g10
22:05:14  99  ,gbp_g11
22:05:14 100  ,gbp_g12
22:05:14 101  ,gbp_g13
22:05:14 102  ,gbp_g14
22:05:14 103  ,gbp_g15
22:05:14 104  ,gbp_g16
22:05:14 105  ,gbp_g17
22:05:14 106  ,gbp_g18
22:05:14 107  ,gbp_g19
22:05:14 108  ,gbp_g20
22:05:14 109  ,gbp_g21
22:05:14 110  ,gbp_g22
22:05:14 111  ,gbp_g23
22:05:14 112  ,gbp_g24
22:05:14 113  ,gbp_g25
22:05:14 114  ,gbp_g26
22:05:14 115  ,gbp_g27
22:05:14 116  ,gbp_g28
22:05:14 117  ,gbp_g29
22:05:14 118  ,gbp_g30
22:05:14 119  ,gbp_g31
22:05:14 120  ,gbp_g32
22:05:14 121  ,gbp_g33
22:05:14 122  ,gbp_g34
22:05:14 123  ,gbp_g35
22:05:14 124  ,gbp_g36
22:05:14 125  ,gbp_g37
22:05:14 126  ,gbp_g38
22:05:14 127  ,gbp_g39
22:05:14 128  ,gbp_g40
22:05:14 129  ,jpy_g00
22:05:14 130  ,jpy_g01
22:05:14 131  ,jpy_g02
22:05:14 132  ,jpy_g03
22:05:14 133  ,jpy_g04
22:05:14 134  ,jpy_g05
22:05:14 135  ,jpy_g06
22:05:14 136  ,jpy_g07
22:05:14 137  ,jpy_g08
22:05:14 138  ,jpy_g09
22:05:14 139  ,jpy_g10
22:05:14 140  ,jpy_g11
22:05:14 141  ,jpy_g12
22:05:14 142  ,jpy_g13
22:05:14 143  ,jpy_g14
22:05:14 144  ,jpy_g15
22:05:14 145  ,jpy_g16
22:05:14 146  ,jpy_g17
22:05:14 147  ,jpy_g18
22:05:14 148  ,jpy_g19
22:05:14 149  ,jpy_g20
22:05:14 150  ,jpy_g21
22:05:14 151  ,jpy_g22
22:05:14 152  ,jpy_g23
22:05:14 153  ,jpy_g24
22:05:14 154  ,jpy_g25
22:05:14 155  ,jpy_g26
22:05:14 156  ,jpy_g27
22:05:14 157  ,jpy_g28
22:05:14 158  ,jpy_g29
22:05:14 159  ,jpy_g30
22:05:14 160  ,jpy_g31
22:05:14 161  ,jpy_g32
22:05:14 162  ,jpy_g33
22:05:14 163  ,jpy_g34
22:05:14 164  ,jpy_g35
22:05:14 165  ,jpy_g36
22:05:14 166  ,jpy_g37
22:05:14 167  ,jpy_g38
22:05:14 168  ,jpy_g39
22:05:14 169  ,jpy_g40
22:05:14 170  ,cad_g00
22:05:14 171  ,cad_g01
22:05:14 172  ,cad_g02
22:05:14 173  ,cad_g03
22:05:14 174  ,cad_g04
22:05:14 175  ,cad_g05
22:05:14 176  ,cad_g06
22:05:14 177  ,cad_g07
22:05:14 178  ,cad_g08
22:05:14 179  ,cad_g09
22:05:14 180  ,cad_g10
22:05:14 181  ,cad_g11
22:05:14 182  ,cad_g12
22:05:14 183  ,cad_g13
22:05:14 184  ,cad_g14
22:05:14 185  ,cad_g15
22:05:14 186  ,cad_g16
22:05:14 187  ,cad_g17
22:05:14 188  ,cad_g18
22:05:14 189  ,cad_g19
22:05:14 190  ,cad_g20
22:05:14 191  ,cad_g21
22:05:14 192  ,cad_g22
22:05:14 193  ,cad_g23
22:05:14 194  ,cad_g24
22:05:14 195  ,cad_g25
22:05:14 196  ,cad_g26
22:05:14 197  ,cad_g27
22:05:14 198  ,cad_g28
22:05:14 199  ,cad_g29
22:05:14 200  ,cad_g30
22:05:14 201  ,cad_g31
22:05:14 202  ,cad_g32
22:05:14 203  ,cad_g33
22:05:14 204  ,cad_g34
22:05:14 205  ,cad_g35
22:05:14 206  ,cad_g36
22:05:14 207  ,cad_g37
22:05:14 208  ,cad_g38
22:05:14 209  ,cad_g39
22:05:14 210  ,cad_g40
22:05:14 211  ,chf_g00
22:05:14 212  ,chf_g01
22:05:14 213  ,chf_g02
22:05:14 214  ,chf_g03
22:05:14 215  ,chf_g04
22:05:14 216  ,chf_g05
22:05:14 217  ,chf_g06
22:05:14 218  ,chf_g07
22:05:14 219  ,chf_g08
22:05:14 220  ,chf_g09
22:05:14 221  ,chf_g10
22:05:14 222  ,chf_g11
22:05:14 223  ,chf_g12
22:05:14 224  ,chf_g13
22:05:14 225  ,chf_g14
22:05:14 226  ,chf_g15
22:05:14 227  ,chf_g16
22:05:14 228  ,chf_g17
22:05:14 229  ,chf_g18
22:05:14 230  ,chf_g19
22:05:14 231  ,chf_g20
22:05:14 232  ,chf_g21
22:05:14 233  ,chf_g22
22:05:14 234  ,chf_g23
22:05:14 235  ,chf_g24
22:05:14 236  ,chf_g25
22:05:14 237  ,chf_g26
22:05:14 238  ,chf_g27
22:05:14 239  ,chf_g28
22:05:14 240  ,chf_g29
22:05:14 241  ,chf_g30
22:05:14 242  ,chf_g31
22:05:14 243  ,chf_g32
22:05:14 244  ,chf_g33
22:05:14 245  ,chf_g34
22:05:14 246  ,chf_g35
22:05:14 247  ,chf_g36
22:05:14 248  ,chf_g37
22:05:14 249  ,chf_g38
22:05:14 250  ,chf_g39
22:05:14 251  ,chf_g40
22:05:14 252  FROM chf_ms14 m
22:05:14 253  WHERE gattn IN('nup','up')
22:05:14 254  AND 1+m.ydate < '&1'||' '||'&2'
22:05:14 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'06:45:00'

View created.

Elapsed: 00:00:00.13
22:05:15 SQL> 
22:05:15 SQL> -- rpt
22:05:15 SQL> 
22:05:15 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
22:05:15   2  
22:05:15 SQL> SELECT MAX(prdate) FROM bme
22:05:15   2  
22:05:15 SQL> -- Now build model from bme and score sme
22:05:15 SQL> @score1gattn.sql
22:05:15 SQL> -- score1gattn.sql
22:05:15 SQL> 
22:05:15 SQL> -- Does the 1st SVM score
22:05:15 SQL> 
22:05:15 SQL> -- Fill up svmc_apply_prep
22:05:15 SQL> @score_gattn.sql
22:05:15 SQL> --
22:05:15 SQL> -- score_gattn.sql
22:05:15 SQL> --
22:05:15 SQL> 
22:05:15 SQL> -- usage: score_gattn.sql
22:05:15 SQL> 
22:05:15 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:05:15 SQL> 
22:05:15 SQL> DEFINE target	= 'gattn'
22:05:15 SQL> DEFINE model_name = 'forex14'
22:05:15 SQL> DEFINE bldtable	= 'bme'
22:05:15 SQL> DEFINE scoretable = 'sme'
22:05:15 SQL> DEFINE case_id	= 'prdate'
22:05:15 SQL> 
22:05:15 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:05:15 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:05:15 SQL> 
22:05:15 SQL> -- Builds an SVM model using pl/sql.
22:05:15 SQL> 
22:05:15 SQL> -----------------------------------------------------------------------
22:05:15 SQL> --			    BUILD THE MODEL
22:05:15 SQL> -----------------------------------------------------------------------
22:05:15 SQL> 
22:05:15 SQL> -- Cleanup old build data preparation objects for repeat runs
22:05:15 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
22:05:15 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
22:05:15 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
22:05:15 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
22:05:15 SQL> 
22:05:15 SQL> 
22:05:15 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:05:15 SQL> --
22:05:15 SQL> -- DROP	TABLE svmc_settings ;
22:05:15 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:05:15 SQL> -- DELETE svmc_settings;
22:05:15 SQL> 
22:05:15 SQL> -- The default classification algorithm is Naive Bayes. So override
22:05:15 SQL> -- this choice to SVM using a settings table.
22:05:15 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:05:15 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:05:15 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:05:15 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:05:15 SQL> -- models.
22:05:15 SQL> --
22:05:15 SQL> 
22:05:15 SQL> -- Do this once and then comment it out.
22:05:15 SQL> -- That makes script go faster.
22:05:15 SQL> -- BEGIN
22:05:15 SQL> -- -- Populate settings table
22:05:15 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:05:15 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:05:15 SQL> --
22:05:15 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:05:15 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:05:15 SQL> --
22:05:15 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:05:15 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:05:15 SQL> --   COMMIT;
22:05:15 SQL> -- END;
22:05:15 SQL> -- /
22:05:15 SQL> 
22:05:15 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:05:15 SQL> 
22:05:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:05:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:05:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:05:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:05:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:05:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:05:15 SQL> 
22:05:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:05:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:05:15 SQL> 
22:05:15 SQL> --------------------------------
22:05:15 SQL> -- PREPARE BUILD (TRAINING) DATA
22:05:15 SQL> --
22:05:15 SQL> 
22:05:15 SQL> -- 1. Missing Value treatment for all Predictors and
22:05:15 SQL> -- 2. Outlier Treatment and
22:05:15 SQL> -- 3. Normalization are performed below.
22:05:15 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:05:15 SQL> --    normalized here.
22:05:15 SQL> 
22:05:15 SQL> BEGIN
22:05:15   2  	-- Perform missing value treatment for all predictors
22:05:15   3  	-- create miss tables
22:05:15   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:05:15   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:05:15   6  
22:05:15   7  	-- populate miss tables
22:05:15   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:05:15   9  	  miss_table_name => 'svmc_miss_num',
22:05:15  10  	  data_table_name => '&bldtable',
22:05:15  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:05:15  12  
22:05:15  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:05:15  14  	  miss_table_name => 'svmc_miss_cat',
22:05:15  15  	  data_table_name => '&bldtable',
22:05:15  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:05:15  17  
22:05:15  18  	-- xform input data to replace missing values
22:05:15  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:05:15  20  	  miss_table_name => 'svmc_miss_num',
22:05:15  21  	  data_table_name => '&bldtable',
22:05:15  22  	  xform_view_name => 'xformed_build_miss_num');
22:05:15  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:05:15  24  	  miss_table_name => 'svmc_miss_cat',
22:05:15  25  	  data_table_name => '&bldtable',
22:05:15  26  	  xform_view_name => 'xformed_build_miss_cat');
22:05:15  27  
22:05:15  28  	-- Perform outlier treatment.
22:05:15  29  	-- create clip table
22:05:15  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:05:15  31  
22:05:15  32  	-- populate clip table
22:05:15  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:05:15  34  	  clip_table_name => 'svmc_clip',
22:05:15  35  	  data_table_name => '&bldtable',
22:05:15  36  	  tail_frac	  => 0.025,
22:05:15  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:05:15  38  
22:05:15  39  	-- xform input data to winsorized data
22:05:15  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:05:15  41  	  clip_table_name => 'svmc_clip',
22:05:15  42  	  data_table_name => '&bldtable',
22:05:15  43  	  xform_view_name => 'svmc_winsor');
22:05:15  44  
22:05:15  45  	-- create normalization table
22:05:15  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:05:15  47  
22:05:15  48  	-- populate normalization table based on winsorized data
22:05:15  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:05:15  50  	  norm_table_name => 'svmc_norm',
22:05:15  51  	  data_table_name => 'svmc_winsor',
22:05:15  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:05:15  53  
22:05:15  54  	-- normalize the original data
22:05:15  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:05:15  56  	  norm_table_name => 'svmc_norm',
22:05:15  57  	  data_table_name => '&bldtable',
22:05:15  58  	  xform_view_name => 'svmc_build_prep');
22:05:15  59  END;
22:05:15  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.98
22:05:33 SQL> 
22:05:33 SQL> ---------------------
22:05:33 SQL> -- CREATE A NEW MODEL
22:05:33 SQL> --
22:05:33 SQL> -- Cleanup old model with the same name for repeat runs
22:05:33 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:05:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:33   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.30
22:05:34 SQL> 
22:05:34 SQL> -- Build a new SVM Model
22:05:34 SQL> BEGIN
22:05:34   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:05:34   3  	  model_name	      => '&model_name',
22:05:34   4  	  mining_function     => dbms_data_mining.classification,
22:05:34   5  	  data_table_name     => 'svmc_build_prep',
22:05:34   6  	  case_id_column_name => '&case_id',
22:05:34   7  	  target_column_name  => '&target',
22:05:34   8  	  settings_table_name => 'svmc_settings');
22:05:34   9  END;
22:05:34  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.11
22:06:00 SQL> 
22:06:00 SQL> -----------------------------------------------------------------------
22:06:00 SQL> --			       APPLY/score THE MODEL
22:06:00 SQL> -----------------------------------------------------------------------
22:06:00 SQL> 
22:06:00 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:06:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:06:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:06:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:06:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:06:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:06:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:06:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:06:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:06:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:06:00 SQL> -----------------------
22:06:00 SQL> -- PREPARE SCORING DATA
22:06:00 SQL> --
22:06:00 SQL> -- If the data for model creation has been prepared, then the data
22:06:00 SQL> -- to be scored using the model must be prepared in the same manner
22:06:00 SQL> -- in order to obtain meaningful results.
22:06:00 SQL> --
22:06:00 SQL> -- 1. Missing Value treatment for all Predictors and
22:06:00 SQL> -- 2. Normalization
22:06:00 SQL> -- No outlier treatment will be performed during test and apply. The
22:06:00 SQL> -- normalization step is sufficient, since the normalization parameters
22:06:00 SQL> -- already capture the effects of outlier treatment done with build data.
22:06:00 SQL> --
22:06:00 SQL> BEGIN
22:06:00   2  	-- Xform Test data to replace missing values
22:06:00   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:06:00   4  	  miss_table_name => 'svmc_miss_num',
22:06:00   5  	  data_table_name => '&scoretable',
22:06:00   6  	  xform_view_name => 'xformed_apply_miss_num');
22:06:00   7  
22:06:00   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:06:00   9  	  miss_table_name => 'svmc_miss_cat',
22:06:00  10  	  data_table_name => '&scoretable',
22:06:00  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:06:00  12  
22:06:00  13  	-- Normalize the data to be scored
22:06:00  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:06:00  15  	  norm_table_name => 'svmc_norm',
22:06:00  16  	  data_table_name => '&scoretable',
22:06:00  17  	  xform_view_name => 'svmc_apply_prep');
22:06:00  18  END;
22:06:00  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
22:06:02 SQL> 
22:06:02 SQL> -- Use same model_name used in score_gattn.sql
22:06:02 SQL> DEFINE model_name = 'forex14'
22:06:02 SQL> 
22:06:02 SQL> DELETE fxscores8hp_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
22:06:02 SQL> 
22:06:02 SQL> INSERT INTO fxscores8hp_gattn (prdate,score,rundate,pair,ydate)
22:06:02   2  SELECT
22:06:02   3  prdate
22:06:02   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:06:02   5  ,sysdate
22:06:02   6  ,SUBSTR(prdate,1,3)pair
22:06:02   7  ,SUBSTR(prdate,4,19)ydate
22:06:02   8  FROM svmc_apply_prep
22:06:02   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
22:06:02 SQL> @chf_score1day_gattn.sql	2010-12-17 06:40:00
22:06:02 SQL> --
22:06:02 SQL> -- chf_score1day_gattn.sql
22:06:02 SQL> --
22:06:02 SQL> 
22:06:02 SQL> CREATE OR REPLACE VIEW sme AS
22:06:02   2  SELECT
22:06:02   3  'chf'||m.ydate prdate
22:06:02   4  ,NULL gattn
22:06:02   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:06:02   6  ,eur_g00
22:06:02   7  ,eur_g01
22:06:02   8  ,eur_g02
22:06:02   9  ,eur_g03
22:06:02  10  ,eur_g04
22:06:02  11  ,eur_g05
22:06:02  12  ,eur_g06
22:06:02  13  ,eur_g07
22:06:02  14  ,eur_g08
22:06:02  15  ,eur_g09
22:06:02  16  ,eur_g10
22:06:02  17  ,eur_g11
22:06:02  18  ,eur_g12
22:06:02  19  ,eur_g13
22:06:02  20  ,eur_g14
22:06:02  21  ,eur_g15
22:06:02  22  ,eur_g16
22:06:02  23  ,eur_g17
22:06:02  24  ,eur_g18
22:06:02  25  ,eur_g19
22:06:02  26  ,eur_g20
22:06:02  27  ,eur_g21
22:06:02  28  ,eur_g22
22:06:02  29  ,eur_g23
22:06:02  30  ,eur_g24
22:06:02  31  ,eur_g25
22:06:02  32  ,eur_g26
22:06:02  33  ,eur_g27
22:06:02  34  ,eur_g28
22:06:02  35  ,eur_g29
22:06:02  36  ,eur_g30
22:06:02  37  ,eur_g31
22:06:02  38  ,eur_g32
22:06:02  39  ,eur_g33
22:06:02  40  ,eur_g34
22:06:02  41  ,eur_g35
22:06:02  42  ,eur_g36
22:06:02  43  ,eur_g37
22:06:02  44  ,eur_g38
22:06:02  45  ,eur_g39
22:06:02  46  ,eur_g40
22:06:02  47  ,aud_g00
22:06:02  48  ,aud_g01
22:06:02  49  ,aud_g02
22:06:02  50  ,aud_g03
22:06:02  51  ,aud_g04
22:06:02  52  ,aud_g05
22:06:02  53  ,aud_g06
22:06:02  54  ,aud_g07
22:06:02  55  ,aud_g08
22:06:02  56  ,aud_g09
22:06:02  57  ,aud_g10
22:06:02  58  ,aud_g11
22:06:02  59  ,aud_g12
22:06:02  60  ,aud_g13
22:06:02  61  ,aud_g14
22:06:02  62  ,aud_g15
22:06:02  63  ,aud_g16
22:06:02  64  ,aud_g17
22:06:02  65  ,aud_g18
22:06:02  66  ,aud_g19
22:06:02  67  ,aud_g20
22:06:02  68  ,aud_g21
22:06:02  69  ,aud_g22
22:06:02  70  ,aud_g23
22:06:02  71  ,aud_g24
22:06:02  72  ,aud_g25
22:06:02  73  ,aud_g26
22:06:02  74  ,aud_g27
22:06:02  75  ,aud_g28
22:06:02  76  ,aud_g29
22:06:02  77  ,aud_g30
22:06:02  78  ,aud_g31
22:06:02  79  ,aud_g32
22:06:02  80  ,aud_g33
22:06:02  81  ,aud_g34
22:06:02  82  ,aud_g35
22:06:02  83  ,aud_g36
22:06:02  84  ,aud_g37
22:06:02  85  ,aud_g38
22:06:02  86  ,aud_g39
22:06:02  87  ,aud_g40
22:06:02  88  ,gbp_g00
22:06:02  89  ,gbp_g01
22:06:02  90  ,gbp_g02
22:06:02  91  ,gbp_g03
22:06:02  92  ,gbp_g04
22:06:02  93  ,gbp_g05
22:06:02  94  ,gbp_g06
22:06:02  95  ,gbp_g07
22:06:02  96  ,gbp_g08
22:06:02  97  ,gbp_g09
22:06:02  98  ,gbp_g10
22:06:02  99  ,gbp_g11
22:06:02 100  ,gbp_g12
22:06:02 101  ,gbp_g13
22:06:02 102  ,gbp_g14
22:06:02 103  ,gbp_g15
22:06:02 104  ,gbp_g16
22:06:02 105  ,gbp_g17
22:06:02 106  ,gbp_g18
22:06:02 107  ,gbp_g19
22:06:02 108  ,gbp_g20
22:06:02 109  ,gbp_g21
22:06:02 110  ,gbp_g22
22:06:02 111  ,gbp_g23
22:06:02 112  ,gbp_g24
22:06:02 113  ,gbp_g25
22:06:02 114  ,gbp_g26
22:06:02 115  ,gbp_g27
22:06:02 116  ,gbp_g28
22:06:02 117  ,gbp_g29
22:06:02 118  ,gbp_g30
22:06:02 119  ,gbp_g31
22:06:02 120  ,gbp_g32
22:06:02 121  ,gbp_g33
22:06:02 122  ,gbp_g34
22:06:02 123  ,gbp_g35
22:06:02 124  ,gbp_g36
22:06:02 125  ,gbp_g37
22:06:02 126  ,gbp_g38
22:06:02 127  ,gbp_g39
22:06:02 128  ,gbp_g40
22:06:02 129  ,jpy_g00
22:06:02 130  ,jpy_g01
22:06:02 131  ,jpy_g02
22:06:02 132  ,jpy_g03
22:06:02 133  ,jpy_g04
22:06:02 134  ,jpy_g05
22:06:02 135  ,jpy_g06
22:06:02 136  ,jpy_g07
22:06:02 137  ,jpy_g08
22:06:02 138  ,jpy_g09
22:06:02 139  ,jpy_g10
22:06:02 140  ,jpy_g11
22:06:02 141  ,jpy_g12
22:06:02 142  ,jpy_g13
22:06:02 143  ,jpy_g14
22:06:02 144  ,jpy_g15
22:06:02 145  ,jpy_g16
22:06:02 146  ,jpy_g17
22:06:02 147  ,jpy_g18
22:06:02 148  ,jpy_g19
22:06:02 149  ,jpy_g20
22:06:02 150  ,jpy_g21
22:06:02 151  ,jpy_g22
22:06:02 152  ,jpy_g23
22:06:02 153  ,jpy_g24
22:06:02 154  ,jpy_g25
22:06:02 155  ,jpy_g26
22:06:02 156  ,jpy_g27
22:06:02 157  ,jpy_g28
22:06:02 158  ,jpy_g29
22:06:02 159  ,jpy_g30
22:06:02 160  ,jpy_g31
22:06:02 161  ,jpy_g32
22:06:02 162  ,jpy_g33
22:06:02 163  ,jpy_g34
22:06:02 164  ,jpy_g35
22:06:02 165  ,jpy_g36
22:06:02 166  ,jpy_g37
22:06:02 167  ,jpy_g38
22:06:02 168  ,jpy_g39
22:06:02 169  ,jpy_g40
22:06:02 170  ,cad_g00
22:06:02 171  ,cad_g01
22:06:02 172  ,cad_g02
22:06:02 173  ,cad_g03
22:06:02 174  ,cad_g04
22:06:02 175  ,cad_g05
22:06:02 176  ,cad_g06
22:06:02 177  ,cad_g07
22:06:02 178  ,cad_g08
22:06:02 179  ,cad_g09
22:06:02 180  ,cad_g10
22:06:02 181  ,cad_g11
22:06:02 182  ,cad_g12
22:06:02 183  ,cad_g13
22:06:02 184  ,cad_g14
22:06:02 185  ,cad_g15
22:06:02 186  ,cad_g16
22:06:02 187  ,cad_g17
22:06:02 188  ,cad_g18
22:06:02 189  ,cad_g19
22:06:02 190  ,cad_g20
22:06:02 191  ,cad_g21
22:06:02 192  ,cad_g22
22:06:02 193  ,cad_g23
22:06:02 194  ,cad_g24
22:06:02 195  ,cad_g25
22:06:02 196  ,cad_g26
22:06:02 197  ,cad_g27
22:06:02 198  ,cad_g28
22:06:02 199  ,cad_g29
22:06:02 200  ,cad_g30
22:06:02 201  ,cad_g31
22:06:02 202  ,cad_g32
22:06:02 203  ,cad_g33
22:06:02 204  ,cad_g34
22:06:02 205  ,cad_g35
22:06:02 206  ,cad_g36
22:06:02 207  ,cad_g37
22:06:02 208  ,cad_g38
22:06:02 209  ,cad_g39
22:06:02 210  ,cad_g40
22:06:02 211  ,chf_g00
22:06:02 212  ,chf_g01
22:06:02 213  ,chf_g02
22:06:02 214  ,chf_g03
22:06:02 215  ,chf_g04
22:06:02 216  ,chf_g05
22:06:02 217  ,chf_g06
22:06:02 218  ,chf_g07
22:06:02 219  ,chf_g08
22:06:02 220  ,chf_g09
22:06:02 221  ,chf_g10
22:06:02 222  ,chf_g11
22:06:02 223  ,chf_g12
22:06:02 224  ,chf_g13
22:06:02 225  ,chf_g14
22:06:02 226  ,chf_g15
22:06:02 227  ,chf_g16
22:06:02 228  ,chf_g17
22:06:02 229  ,chf_g18
22:06:02 230  ,chf_g19
22:06:02 231  ,chf_g20
22:06:02 232  ,chf_g21
22:06:02 233  ,chf_g22
22:06:02 234  ,chf_g23
22:06:02 235  ,chf_g24
22:06:02 236  ,chf_g25
22:06:02 237  ,chf_g26
22:06:02 238  ,chf_g27
22:06:02 239  ,chf_g28
22:06:02 240  ,chf_g29
22:06:02 241  ,chf_g30
22:06:02 242  ,chf_g31
22:06:02 243  ,chf_g32
22:06:02 244  ,chf_g33
22:06:02 245  ,chf_g34
22:06:02 246  ,chf_g35
22:06:02 247  ,chf_g36
22:06:02 248  ,chf_g37
22:06:02 249  ,chf_g38
22:06:02 250  ,chf_g39
22:06:02 251  ,chf_g40
22:06:02 252  FROM chf_ms14 m
22:06:02 253  WHERE m.ydate = '&1'||' '||'&2'
22:06:02 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'06:40:00'

View created.

Elapsed: 00:00:00.11
22:06:02 SQL> 
22:06:02 SQL> -- rpt
22:06:02 SQL> -- We should see just 1 row:
22:06:02 SQL> 
22:06:02 SQL> SELECT COUNT(prdate) FROM sme
22:06:02   2  
22:06:02 SQL> -- Build the model:
22:06:02 SQL> CREATE OR REPLACE VIEW bme AS
22:06:02   2  SELECT
22:06:02   3  'chf'||m.ydate prdate
22:06:02   4  ,gattn
22:06:02   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:06:02   6  ,eur_g00
22:06:02   7  ,eur_g01
22:06:02   8  ,eur_g02
22:06:02   9  ,eur_g03
22:06:02  10  ,eur_g04
22:06:02  11  ,eur_g05
22:06:02  12  ,eur_g06
22:06:02  13  ,eur_g07
22:06:02  14  ,eur_g08
22:06:02  15  ,eur_g09
22:06:02  16  ,eur_g10
22:06:02  17  ,eur_g11
22:06:02  18  ,eur_g12
22:06:02  19  ,eur_g13
22:06:02  20  ,eur_g14
22:06:02  21  ,eur_g15
22:06:02  22  ,eur_g16
22:06:02  23  ,eur_g17
22:06:02  24  ,eur_g18
22:06:02  25  ,eur_g19
22:06:02  26  ,eur_g20
22:06:02  27  ,eur_g21
22:06:02  28  ,eur_g22
22:06:02  29  ,eur_g23
22:06:02  30  ,eur_g24
22:06:02  31  ,eur_g25
22:06:02  32  ,eur_g26
22:06:02  33  ,eur_g27
22:06:02  34  ,eur_g28
22:06:02  35  ,eur_g29
22:06:02  36  ,eur_g30
22:06:02  37  ,eur_g31
22:06:02  38  ,eur_g32
22:06:02  39  ,eur_g33
22:06:02  40  ,eur_g34
22:06:02  41  ,eur_g35
22:06:02  42  ,eur_g36
22:06:02  43  ,eur_g37
22:06:02  44  ,eur_g38
22:06:02  45  ,eur_g39
22:06:02  46  ,eur_g40
22:06:02  47  ,aud_g00
22:06:02  48  ,aud_g01
22:06:02  49  ,aud_g02
22:06:02  50  ,aud_g03
22:06:02  51  ,aud_g04
22:06:02  52  ,aud_g05
22:06:02  53  ,aud_g06
22:06:02  54  ,aud_g07
22:06:02  55  ,aud_g08
22:06:02  56  ,aud_g09
22:06:02  57  ,aud_g10
22:06:02  58  ,aud_g11
22:06:02  59  ,aud_g12
22:06:02  60  ,aud_g13
22:06:02  61  ,aud_g14
22:06:02  62  ,aud_g15
22:06:02  63  ,aud_g16
22:06:02  64  ,aud_g17
22:06:02  65  ,aud_g18
22:06:02  66  ,aud_g19
22:06:02  67  ,aud_g20
22:06:02  68  ,aud_g21
22:06:02  69  ,aud_g22
22:06:02  70  ,aud_g23
22:06:02  71  ,aud_g24
22:06:02  72  ,aud_g25
22:06:02  73  ,aud_g26
22:06:02  74  ,aud_g27
22:06:02  75  ,aud_g28
22:06:02  76  ,aud_g29
22:06:02  77  ,aud_g30
22:06:02  78  ,aud_g31
22:06:02  79  ,aud_g32
22:06:02  80  ,aud_g33
22:06:02  81  ,aud_g34
22:06:02  82  ,aud_g35
22:06:02  83  ,aud_g36
22:06:02  84  ,aud_g37
22:06:02  85  ,aud_g38
22:06:02  86  ,aud_g39
22:06:02  87  ,aud_g40
22:06:02  88  ,gbp_g00
22:06:02  89  ,gbp_g01
22:06:02  90  ,gbp_g02
22:06:02  91  ,gbp_g03
22:06:02  92  ,gbp_g04
22:06:02  93  ,gbp_g05
22:06:02  94  ,gbp_g06
22:06:02  95  ,gbp_g07
22:06:02  96  ,gbp_g08
22:06:02  97  ,gbp_g09
22:06:02  98  ,gbp_g10
22:06:02  99  ,gbp_g11
22:06:02 100  ,gbp_g12
22:06:02 101  ,gbp_g13
22:06:02 102  ,gbp_g14
22:06:02 103  ,gbp_g15
22:06:02 104  ,gbp_g16
22:06:02 105  ,gbp_g17
22:06:02 106  ,gbp_g18
22:06:02 107  ,gbp_g19
22:06:02 108  ,gbp_g20
22:06:02 109  ,gbp_g21
22:06:02 110  ,gbp_g22
22:06:02 111  ,gbp_g23
22:06:02 112  ,gbp_g24
22:06:02 113  ,gbp_g25
22:06:02 114  ,gbp_g26
22:06:02 115  ,gbp_g27
22:06:02 116  ,gbp_g28
22:06:02 117  ,gbp_g29
22:06:02 118  ,gbp_g30
22:06:02 119  ,gbp_g31
22:06:02 120  ,gbp_g32
22:06:02 121  ,gbp_g33
22:06:02 122  ,gbp_g34
22:06:02 123  ,gbp_g35
22:06:02 124  ,gbp_g36
22:06:02 125  ,gbp_g37
22:06:02 126  ,gbp_g38
22:06:02 127  ,gbp_g39
22:06:02 128  ,gbp_g40
22:06:02 129  ,jpy_g00
22:06:02 130  ,jpy_g01
22:06:02 131  ,jpy_g02
22:06:02 132  ,jpy_g03
22:06:02 133  ,jpy_g04
22:06:02 134  ,jpy_g05
22:06:02 135  ,jpy_g06
22:06:02 136  ,jpy_g07
22:06:02 137  ,jpy_g08
22:06:02 138  ,jpy_g09
22:06:02 139  ,jpy_g10
22:06:02 140  ,jpy_g11
22:06:02 141  ,jpy_g12
22:06:02 142  ,jpy_g13
22:06:02 143  ,jpy_g14
22:06:02 144  ,jpy_g15
22:06:02 145  ,jpy_g16
22:06:02 146  ,jpy_g17
22:06:02 147  ,jpy_g18
22:06:02 148  ,jpy_g19
22:06:02 149  ,jpy_g20
22:06:02 150  ,jpy_g21
22:06:02 151  ,jpy_g22
22:06:02 152  ,jpy_g23
22:06:02 153  ,jpy_g24
22:06:02 154  ,jpy_g25
22:06:02 155  ,jpy_g26
22:06:02 156  ,jpy_g27
22:06:02 157  ,jpy_g28
22:06:02 158  ,jpy_g29
22:06:02 159  ,jpy_g30
22:06:02 160  ,jpy_g31
22:06:02 161  ,jpy_g32
22:06:02 162  ,jpy_g33
22:06:02 163  ,jpy_g34
22:06:02 164  ,jpy_g35
22:06:02 165  ,jpy_g36
22:06:02 166  ,jpy_g37
22:06:02 167  ,jpy_g38
22:06:02 168  ,jpy_g39
22:06:02 169  ,jpy_g40
22:06:02 170  ,cad_g00
22:06:02 171  ,cad_g01
22:06:02 172  ,cad_g02
22:06:02 173  ,cad_g03
22:06:02 174  ,cad_g04
22:06:02 175  ,cad_g05
22:06:02 176  ,cad_g06
22:06:02 177  ,cad_g07
22:06:02 178  ,cad_g08
22:06:02 179  ,cad_g09
22:06:02 180  ,cad_g10
22:06:02 181  ,cad_g11
22:06:02 182  ,cad_g12
22:06:02 183  ,cad_g13
22:06:02 184  ,cad_g14
22:06:02 185  ,cad_g15
22:06:02 186  ,cad_g16
22:06:02 187  ,cad_g17
22:06:02 188  ,cad_g18
22:06:02 189  ,cad_g19
22:06:02 190  ,cad_g20
22:06:02 191  ,cad_g21
22:06:02 192  ,cad_g22
22:06:02 193  ,cad_g23
22:06:02 194  ,cad_g24
22:06:02 195  ,cad_g25
22:06:02 196  ,cad_g26
22:06:02 197  ,cad_g27
22:06:02 198  ,cad_g28
22:06:02 199  ,cad_g29
22:06:02 200  ,cad_g30
22:06:02 201  ,cad_g31
22:06:02 202  ,cad_g32
22:06:02 203  ,cad_g33
22:06:02 204  ,cad_g34
22:06:02 205  ,cad_g35
22:06:02 206  ,cad_g36
22:06:02 207  ,cad_g37
22:06:02 208  ,cad_g38
22:06:02 209  ,cad_g39
22:06:02 210  ,cad_g40
22:06:02 211  ,chf_g00
22:06:02 212  ,chf_g01
22:06:02 213  ,chf_g02
22:06:02 214  ,chf_g03
22:06:02 215  ,chf_g04
22:06:02 216  ,chf_g05
22:06:02 217  ,chf_g06
22:06:02 218  ,chf_g07
22:06:02 219  ,chf_g08
22:06:02 220  ,chf_g09
22:06:02 221  ,chf_g10
22:06:02 222  ,chf_g11
22:06:02 223  ,chf_g12
22:06:02 224  ,chf_g13
22:06:02 225  ,chf_g14
22:06:02 226  ,chf_g15
22:06:02 227  ,chf_g16
22:06:02 228  ,chf_g17
22:06:02 229  ,chf_g18
22:06:02 230  ,chf_g19
22:06:02 231  ,chf_g20
22:06:02 232  ,chf_g21
22:06:02 233  ,chf_g22
22:06:02 234  ,chf_g23
22:06:02 235  ,chf_g24
22:06:02 236  ,chf_g25
22:06:02 237  ,chf_g26
22:06:02 238  ,chf_g27
22:06:02 239  ,chf_g28
22:06:02 240  ,chf_g29
22:06:02 241  ,chf_g30
22:06:02 242  ,chf_g31
22:06:02 243  ,chf_g32
22:06:02 244  ,chf_g33
22:06:02 245  ,chf_g34
22:06:02 246  ,chf_g35
22:06:02 247  ,chf_g36
22:06:02 248  ,chf_g37
22:06:02 249  ,chf_g38
22:06:02 250  ,chf_g39
22:06:02 251  ,chf_g40
22:06:02 252  FROM chf_ms14 m
22:06:02 253  WHERE gattn IN('nup','up')
22:06:02 254  AND 1+m.ydate < '&1'||' '||'&2'
22:06:02 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'06:40:00'

View created.

Elapsed: 00:00:00.11
22:06:02 SQL> 
22:06:02 SQL> -- rpt
22:06:02 SQL> 
22:06:02 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn
22:06:02   2  
22:06:02 SQL> SELECT MAX(prdate) FROM bme
22:06:02   2  
22:06:02 SQL> -- Now build model from bme and score sme
22:06:02 SQL> @score1gattn.sql
22:06:02 SQL> -- score1gattn.sql
22:06:02 SQL> 
22:06:02 SQL> -- Does the 1st SVM score
22:06:02 SQL> 
22:06:02 SQL> -- Fill up svmc_apply_prep
22:06:02 SQL> @score_gattn.sql
22:06:02 SQL> --
22:06:02 SQL> -- score_gattn.sql
22:06:02 SQL> --
22:06:02 SQL> 
22:06:02 SQL> -- usage: score_gattn.sql
22:06:02 SQL> 
22:06:02 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:06:02 SQL> 
22:06:02 SQL> DEFINE target	= 'gattn'
22:06:02 SQL> DEFINE model_name = 'forex14'
22:06:02 SQL> DEFINE bldtable	= 'bme'
22:06:02 SQL> DEFINE scoretable = 'sme'
22:06:02 SQL> DEFINE case_id	= 'prdate'
22:06:02 SQL> 
22:06:02 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:06:02 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:06:02 SQL> 
22:06:02 SQL> -- Builds an SVM model using pl/sql.
22:06:02 SQL> 
22:06:02 SQL> -----------------------------------------------------------------------
22:06:02 SQL> --			    BUILD THE MODEL
22:06:02 SQL> -----------------------------------------------------------------------
22:06:02 SQL> 
22:06:02 SQL> -- Cleanup old build data preparation objects for repeat runs
22:06:02 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
22:06:02 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:06:02 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
22:06:02 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
22:06:02 SQL> 
22:06:02 SQL> 
22:06:02 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:06:02 SQL> --
22:06:02 SQL> -- DROP	TABLE svmc_settings ;
22:06:02 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:06:02 SQL> -- DELETE svmc_settings;
22:06:02 SQL> 
22:06:02 SQL> -- The default classification algorithm is Naive Bayes. So override
22:06:02 SQL> -- this choice to SVM using a settings table.
22:06:02 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:06:02 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:06:02 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:06:02 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:06:02 SQL> -- models.
22:06:02 SQL> --
22:06:02 SQL> 
22:06:02 SQL> -- Do this once and then comment it out.
22:06:02 SQL> -- That makes script go faster.
22:06:02 SQL> -- BEGIN
22:06:02 SQL> -- -- Populate settings table
22:06:02 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:06:02 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:06:02 SQL> --
22:06:02 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:06:02 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:06:02 SQL> --
22:06:02 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:06:02 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:06:02 SQL> --   COMMIT;
22:06:02 SQL> -- END;
22:06:02 SQL> -- /
22:06:02 SQL> 
22:06:02 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
22:06:02 SQL> 
22:06:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:06:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:06:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:06:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:06:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:06:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:06:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:06:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:06:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:06:02 SQL> 
22:06:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:06:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:06:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:06:02 SQL> 
22:06:02 SQL> --------------------------------
22:06:02 SQL> -- PREPARE BUILD (TRAINING) DATA
22:06:02 SQL> --
22:06:02 SQL> 
22:06:02 SQL> -- 1. Missing Value treatment for all Predictors and
22:06:02 SQL> -- 2. Outlier Treatment and
22:06:02 SQL> -- 3. Normalization are performed below.
22:06:02 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:06:02 SQL> --    normalized here.
22:06:02 SQL> 
22:06:02 SQL> BEGIN
22:06:02   2  	-- Perform missing value treatment for all predictors
22:06:02   3  	-- create miss tables
22:06:02   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:06:02   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:06:02   6  
22:06:02   7  	-- populate miss tables
22:06:02   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:06:02   9  	  miss_table_name => 'svmc_miss_num',
22:06:02  10  	  data_table_name => '&bldtable',
22:06:02  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:06:02  12  
22:06:02  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:06:02  14  	  miss_table_name => 'svmc_miss_cat',
22:06:02  15  	  data_table_name => '&bldtable',
22:06:02  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:06:02  17  
22:06:02  18  	-- xform input data to replace missing values
22:06:02  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:06:02  20  	  miss_table_name => 'svmc_miss_num',
22:06:02  21  	  data_table_name => '&bldtable',
22:06:02  22  	  xform_view_name => 'xformed_build_miss_num');
22:06:02  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:06:02  24  	  miss_table_name => 'svmc_miss_cat',
22:06:02  25  	  data_table_name => '&bldtable',
22:06:02  26  	  xform_view_name => 'xformed_build_miss_cat');
22:06:02  27  
22:06:02  28  	-- Perform outlier treatment.
22:06:02  29  	-- create clip table
22:06:02  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:06:02  31  
22:06:02  32  	-- populate clip table
22:06:02  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:06:02  34  	  clip_table_name => 'svmc_clip',
22:06:02  35  	  data_table_name => '&bldtable',
22:06:02  36  	  tail_frac	  => 0.025,
22:06:02  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:06:02  38  
22:06:02  39  	-- xform input data to winsorized data
22:06:02  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:06:02  41  	  clip_table_name => 'svmc_clip',
22:06:02  42  	  data_table_name => '&bldtable',
22:06:02  43  	  xform_view_name => 'svmc_winsor');
22:06:02  44  
22:06:02  45  	-- create normalization table
22:06:02  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:06:02  47  
22:06:02  48  	-- populate normalization table based on winsorized data
22:06:02  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:06:02  50  	  norm_table_name => 'svmc_norm',
22:06:02  51  	  data_table_name => 'svmc_winsor',
22:06:02  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:06:02  53  
22:06:02  54  	-- normalize the original data
22:06:02  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:06:02  56  	  norm_table_name => 'svmc_norm',
22:06:02  57  	  data_table_name => '&bldtable',
22:06:02  58  	  xform_view_name => 'svmc_build_prep');
22:06:02  59  END;
22:06:02  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',
