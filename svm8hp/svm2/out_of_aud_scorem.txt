
SQL*Plus: Release 11.2.0.1.0 Production on Sat Dec 18 08:16:47 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

08:16:48 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.02
08:16:48 SQL> 08:16:48 SQL> @aud_score1day.sql  2010-12-17 10:55:00
08:16:48 SQL> --
08:16:48 SQL> -- aud_score1day.sql
08:16:48 SQL> --
08:16:48 SQL> 
08:16:48 SQL> CREATE OR REPLACE VIEW sme AS
08:16:48   2  SELECT
08:16:48   3  'aud'||m.ydate prdate
08:16:48   4  ,NULL gatt
08:16:48   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:16:48   6  ,eur_g00
08:16:48   7  ,eur_g01
08:16:48   8  ,eur_g02
08:16:48   9  ,eur_g03
08:16:48  10  ,eur_g04
08:16:48  11  ,eur_g05
08:16:48  12  ,eur_g06
08:16:48  13  ,eur_g07
08:16:48  14  ,eur_g08
08:16:48  15  ,eur_g09
08:16:48  16  ,eur_g10
08:16:48  17  ,eur_g11
08:16:48  18  ,eur_g12
08:16:48  19  ,eur_g13
08:16:48  20  ,eur_g14
08:16:48  21  ,eur_g15
08:16:48  22  ,eur_g16
08:16:48  23  ,eur_g17
08:16:48  24  ,eur_g18
08:16:48  25  ,eur_g19
08:16:48  26  ,eur_g20
08:16:48  27  ,eur_g21
08:16:48  28  ,eur_g22
08:16:48  29  ,eur_g23
08:16:48  30  ,eur_g24
08:16:48  31  ,eur_g25
08:16:48  32  ,eur_g26
08:16:48  33  ,eur_g27
08:16:48  34  ,eur_g28
08:16:48  35  ,eur_g29
08:16:48  36  ,eur_g30
08:16:48  37  ,eur_g31
08:16:48  38  ,eur_g32
08:16:48  39  ,eur_g33
08:16:48  40  ,eur_g34
08:16:48  41  ,eur_g35
08:16:48  42  ,eur_g36
08:16:48  43  ,eur_g37
08:16:48  44  ,eur_g38
08:16:48  45  ,eur_g39
08:16:48  46  ,eur_g40
08:16:48  47  ,aud_g00
08:16:48  48  ,aud_g01
08:16:48  49  ,aud_g02
08:16:48  50  ,aud_g03
08:16:48  51  ,aud_g04
08:16:48  52  ,aud_g05
08:16:48  53  ,aud_g06
08:16:48  54  ,aud_g07
08:16:48  55  ,aud_g08
08:16:48  56  ,aud_g09
08:16:48  57  ,aud_g10
08:16:48  58  ,aud_g11
08:16:48  59  ,aud_g12
08:16:48  60  ,aud_g13
08:16:48  61  ,aud_g14
08:16:48  62  ,aud_g15
08:16:48  63  ,aud_g16
08:16:48  64  ,aud_g17
08:16:48  65  ,aud_g18
08:16:48  66  ,aud_g19
08:16:48  67  ,aud_g20
08:16:48  68  ,aud_g21
08:16:48  69  ,aud_g22
08:16:48  70  ,aud_g23
08:16:48  71  ,aud_g24
08:16:48  72  ,aud_g25
08:16:48  73  ,aud_g26
08:16:48  74  ,aud_g27
08:16:48  75  ,aud_g28
08:16:48  76  ,aud_g29
08:16:48  77  ,aud_g30
08:16:48  78  ,aud_g31
08:16:48  79  ,aud_g32
08:16:48  80  ,aud_g33
08:16:48  81  ,aud_g34
08:16:48  82  ,aud_g35
08:16:48  83  ,aud_g36
08:16:48  84  ,aud_g37
08:16:48  85  ,aud_g38
08:16:48  86  ,aud_g39
08:16:48  87  ,aud_g40
08:16:48  88  ,gbp_g00
08:16:48  89  ,gbp_g01
08:16:48  90  ,gbp_g02
08:16:48  91  ,gbp_g03
08:16:48  92  ,gbp_g04
08:16:48  93  ,gbp_g05
08:16:48  94  ,gbp_g06
08:16:48  95  ,gbp_g07
08:16:48  96  ,gbp_g08
08:16:48  97  ,gbp_g09
08:16:48  98  ,gbp_g10
08:16:48  99  ,gbp_g11
08:16:48 100  ,gbp_g12
08:16:48 101  ,gbp_g13
08:16:48 102  ,gbp_g14
08:16:48 103  ,gbp_g15
08:16:48 104  ,gbp_g16
08:16:48 105  ,gbp_g17
08:16:48 106  ,gbp_g18
08:16:48 107  ,gbp_g19
08:16:48 108  ,gbp_g20
08:16:48 109  ,gbp_g21
08:16:48 110  ,gbp_g22
08:16:48 111  ,gbp_g23
08:16:48 112  ,gbp_g24
08:16:48 113  ,gbp_g25
08:16:48 114  ,gbp_g26
08:16:48 115  ,gbp_g27
08:16:48 116  ,gbp_g28
08:16:48 117  ,gbp_g29
08:16:48 118  ,gbp_g30
08:16:48 119  ,gbp_g31
08:16:48 120  ,gbp_g32
08:16:48 121  ,gbp_g33
08:16:48 122  ,gbp_g34
08:16:48 123  ,gbp_g35
08:16:48 124  ,gbp_g36
08:16:48 125  ,gbp_g37
08:16:48 126  ,gbp_g38
08:16:48 127  ,gbp_g39
08:16:48 128  ,gbp_g40
08:16:48 129  ,jpy_g00
08:16:48 130  ,jpy_g01
08:16:48 131  ,jpy_g02
08:16:48 132  ,jpy_g03
08:16:48 133  ,jpy_g04
08:16:48 134  ,jpy_g05
08:16:48 135  ,jpy_g06
08:16:48 136  ,jpy_g07
08:16:48 137  ,jpy_g08
08:16:48 138  ,jpy_g09
08:16:48 139  ,jpy_g10
08:16:48 140  ,jpy_g11
08:16:48 141  ,jpy_g12
08:16:48 142  ,jpy_g13
08:16:48 143  ,jpy_g14
08:16:48 144  ,jpy_g15
08:16:48 145  ,jpy_g16
08:16:48 146  ,jpy_g17
08:16:48 147  ,jpy_g18
08:16:48 148  ,jpy_g19
08:16:48 149  ,jpy_g20
08:16:48 150  ,jpy_g21
08:16:48 151  ,jpy_g22
08:16:48 152  ,jpy_g23
08:16:48 153  ,jpy_g24
08:16:48 154  ,jpy_g25
08:16:48 155  ,jpy_g26
08:16:48 156  ,jpy_g27
08:16:48 157  ,jpy_g28
08:16:48 158  ,jpy_g29
08:16:48 159  ,jpy_g30
08:16:48 160  ,jpy_g31
08:16:48 161  ,jpy_g32
08:16:48 162  ,jpy_g33
08:16:48 163  ,jpy_g34
08:16:48 164  ,jpy_g35
08:16:48 165  ,jpy_g36
08:16:48 166  ,jpy_g37
08:16:48 167  ,jpy_g38
08:16:48 168  ,jpy_g39
08:16:48 169  ,jpy_g40
08:16:48 170  ,cad_g00
08:16:48 171  ,cad_g01
08:16:48 172  ,cad_g02
08:16:48 173  ,cad_g03
08:16:48 174  ,cad_g04
08:16:48 175  ,cad_g05
08:16:48 176  ,cad_g06
08:16:48 177  ,cad_g07
08:16:48 178  ,cad_g08
08:16:48 179  ,cad_g09
08:16:48 180  ,cad_g10
08:16:48 181  ,cad_g11
08:16:48 182  ,cad_g12
08:16:48 183  ,cad_g13
08:16:48 184  ,cad_g14
08:16:48 185  ,cad_g15
08:16:48 186  ,cad_g16
08:16:48 187  ,cad_g17
08:16:48 188  ,cad_g18
08:16:48 189  ,cad_g19
08:16:48 190  ,cad_g20
08:16:48 191  ,cad_g21
08:16:48 192  ,cad_g22
08:16:48 193  ,cad_g23
08:16:48 194  ,cad_g24
08:16:48 195  ,cad_g25
08:16:48 196  ,cad_g26
08:16:48 197  ,cad_g27
08:16:48 198  ,cad_g28
08:16:48 199  ,cad_g29
08:16:48 200  ,cad_g30
08:16:48 201  ,cad_g31
08:16:48 202  ,cad_g32
08:16:48 203  ,cad_g33
08:16:48 204  ,cad_g34
08:16:48 205  ,cad_g35
08:16:48 206  ,cad_g36
08:16:48 207  ,cad_g37
08:16:48 208  ,cad_g38
08:16:48 209  ,cad_g39
08:16:48 210  ,cad_g40
08:16:48 211  ,chf_g00
08:16:48 212  ,chf_g01
08:16:48 213  ,chf_g02
08:16:48 214  ,chf_g03
08:16:48 215  ,chf_g04
08:16:48 216  ,chf_g05
08:16:48 217  ,chf_g06
08:16:48 218  ,chf_g07
08:16:48 219  ,chf_g08
08:16:48 220  ,chf_g09
08:16:48 221  ,chf_g10
08:16:48 222  ,chf_g11
08:16:48 223  ,chf_g12
08:16:48 224  ,chf_g13
08:16:48 225  ,chf_g14
08:16:48 226  ,chf_g15
08:16:48 227  ,chf_g16
08:16:48 228  ,chf_g17
08:16:48 229  ,chf_g18
08:16:48 230  ,chf_g19
08:16:48 231  ,chf_g20
08:16:48 232  ,chf_g21
08:16:48 233  ,chf_g22
08:16:48 234  ,chf_g23
08:16:48 235  ,chf_g24
08:16:48 236  ,chf_g25
08:16:48 237  ,chf_g26
08:16:48 238  ,chf_g27
08:16:48 239  ,chf_g28
08:16:48 240  ,chf_g29
08:16:48 241  ,chf_g30
08:16:48 242  ,chf_g31
08:16:48 243  ,chf_g32
08:16:48 244  ,chf_g33
08:16:48 245  ,chf_g34
08:16:48 246  ,chf_g35
08:16:48 247  ,chf_g36
08:16:48 248  ,chf_g37
08:16:48 249  ,chf_g38
08:16:48 250  ,chf_g39
08:16:48 251  ,chf_g40
08:16:48 252  FROM aud_ms14 m
08:16:48 253  WHERE m.ydate = '&1'||' '||'&2'
08:16:48 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:55:00'

View created.

Elapsed: 00:00:00.31
08:16:48 SQL> 
08:16:48 SQL> -- rpt
08:16:48 SQL> -- We should see just 1 row:
08:16:48 SQL> 
08:16:48 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.08
08:16:48 SQL> 
08:16:48 SQL> -- Build the model:
08:16:48 SQL> CREATE OR REPLACE VIEW bme AS
08:16:48   2  SELECT
08:16:48   3  'aud'||m.ydate prdate
08:16:48   4  ,gatt
08:16:48   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:16:48   6  ,eur_g00
08:16:48   7  ,eur_g01
08:16:48   8  ,eur_g02
08:16:48   9  ,eur_g03
08:16:48  10  ,eur_g04
08:16:48  11  ,eur_g05
08:16:48  12  ,eur_g06
08:16:48  13  ,eur_g07
08:16:48  14  ,eur_g08
08:16:48  15  ,eur_g09
08:16:48  16  ,eur_g10
08:16:48  17  ,eur_g11
08:16:48  18  ,eur_g12
08:16:48  19  ,eur_g13
08:16:48  20  ,eur_g14
08:16:48  21  ,eur_g15
08:16:48  22  ,eur_g16
08:16:48  23  ,eur_g17
08:16:48  24  ,eur_g18
08:16:48  25  ,eur_g19
08:16:48  26  ,eur_g20
08:16:48  27  ,eur_g21
08:16:48  28  ,eur_g22
08:16:48  29  ,eur_g23
08:16:48  30  ,eur_g24
08:16:48  31  ,eur_g25
08:16:48  32  ,eur_g26
08:16:48  33  ,eur_g27
08:16:48  34  ,eur_g28
08:16:48  35  ,eur_g29
08:16:48  36  ,eur_g30
08:16:48  37  ,eur_g31
08:16:48  38  ,eur_g32
08:16:48  39  ,eur_g33
08:16:48  40  ,eur_g34
08:16:48  41  ,eur_g35
08:16:48  42  ,eur_g36
08:16:48  43  ,eur_g37
08:16:48  44  ,eur_g38
08:16:48  45  ,eur_g39
08:16:48  46  ,eur_g40
08:16:48  47  ,aud_g00
08:16:48  48  ,aud_g01
08:16:48  49  ,aud_g02
08:16:48  50  ,aud_g03
08:16:48  51  ,aud_g04
08:16:48  52  ,aud_g05
08:16:48  53  ,aud_g06
08:16:48  54  ,aud_g07
08:16:48  55  ,aud_g08
08:16:48  56  ,aud_g09
08:16:48  57  ,aud_g10
08:16:48  58  ,aud_g11
08:16:48  59  ,aud_g12
08:16:48  60  ,aud_g13
08:16:48  61  ,aud_g14
08:16:48  62  ,aud_g15
08:16:48  63  ,aud_g16
08:16:48  64  ,aud_g17
08:16:48  65  ,aud_g18
08:16:48  66  ,aud_g19
08:16:48  67  ,aud_g20
08:16:48  68  ,aud_g21
08:16:48  69  ,aud_g22
08:16:48  70  ,aud_g23
08:16:48  71  ,aud_g24
08:16:48  72  ,aud_g25
08:16:48  73  ,aud_g26
08:16:48  74  ,aud_g27
08:16:48  75  ,aud_g28
08:16:48  76  ,aud_g29
08:16:48  77  ,aud_g30
08:16:48  78  ,aud_g31
08:16:48  79  ,aud_g32
08:16:48  80  ,aud_g33
08:16:48  81  ,aud_g34
08:16:48  82  ,aud_g35
08:16:48  83  ,aud_g36
08:16:48  84  ,aud_g37
08:16:48  85  ,aud_g38
08:16:48  86  ,aud_g39
08:16:48  87  ,aud_g40
08:16:48  88  ,gbp_g00
08:16:48  89  ,gbp_g01
08:16:48  90  ,gbp_g02
08:16:48  91  ,gbp_g03
08:16:48  92  ,gbp_g04
08:16:48  93  ,gbp_g05
08:16:48  94  ,gbp_g06
08:16:48  95  ,gbp_g07
08:16:48  96  ,gbp_g08
08:16:48  97  ,gbp_g09
08:16:48  98  ,gbp_g10
08:16:48  99  ,gbp_g11
08:16:48 100  ,gbp_g12
08:16:48 101  ,gbp_g13
08:16:48 102  ,gbp_g14
08:16:48 103  ,gbp_g15
08:16:48 104  ,gbp_g16
08:16:48 105  ,gbp_g17
08:16:48 106  ,gbp_g18
08:16:48 107  ,gbp_g19
08:16:48 108  ,gbp_g20
08:16:48 109  ,gbp_g21
08:16:48 110  ,gbp_g22
08:16:48 111  ,gbp_g23
08:16:48 112  ,gbp_g24
08:16:48 113  ,gbp_g25
08:16:48 114  ,gbp_g26
08:16:48 115  ,gbp_g27
08:16:48 116  ,gbp_g28
08:16:48 117  ,gbp_g29
08:16:48 118  ,gbp_g30
08:16:48 119  ,gbp_g31
08:16:48 120  ,gbp_g32
08:16:48 121  ,gbp_g33
08:16:48 122  ,gbp_g34
08:16:48 123  ,gbp_g35
08:16:48 124  ,gbp_g36
08:16:48 125  ,gbp_g37
08:16:48 126  ,gbp_g38
08:16:48 127  ,gbp_g39
08:16:48 128  ,gbp_g40
08:16:48 129  ,jpy_g00
08:16:48 130  ,jpy_g01
08:16:48 131  ,jpy_g02
08:16:48 132  ,jpy_g03
08:16:48 133  ,jpy_g04
08:16:48 134  ,jpy_g05
08:16:48 135  ,jpy_g06
08:16:48 136  ,jpy_g07
08:16:48 137  ,jpy_g08
08:16:48 138  ,jpy_g09
08:16:48 139  ,jpy_g10
08:16:48 140  ,jpy_g11
08:16:48 141  ,jpy_g12
08:16:48 142  ,jpy_g13
08:16:48 143  ,jpy_g14
08:16:48 144  ,jpy_g15
08:16:48 145  ,jpy_g16
08:16:48 146  ,jpy_g17
08:16:48 147  ,jpy_g18
08:16:48 148  ,jpy_g19
08:16:48 149  ,jpy_g20
08:16:48 150  ,jpy_g21
08:16:48 151  ,jpy_g22
08:16:48 152  ,jpy_g23
08:16:48 153  ,jpy_g24
08:16:48 154  ,jpy_g25
08:16:48 155  ,jpy_g26
08:16:48 156  ,jpy_g27
08:16:48 157  ,jpy_g28
08:16:48 158  ,jpy_g29
08:16:48 159  ,jpy_g30
08:16:48 160  ,jpy_g31
08:16:48 161  ,jpy_g32
08:16:48 162  ,jpy_g33
08:16:48 163  ,jpy_g34
08:16:48 164  ,jpy_g35
08:16:48 165  ,jpy_g36
08:16:48 166  ,jpy_g37
08:16:48 167  ,jpy_g38
08:16:48 168  ,jpy_g39
08:16:48 169  ,jpy_g40
08:16:48 170  ,cad_g00
08:16:48 171  ,cad_g01
08:16:48 172  ,cad_g02
08:16:48 173  ,cad_g03
08:16:48 174  ,cad_g04
08:16:48 175  ,cad_g05
08:16:48 176  ,cad_g06
08:16:48 177  ,cad_g07
08:16:48 178  ,cad_g08
08:16:48 179  ,cad_g09
08:16:48 180  ,cad_g10
08:16:48 181  ,cad_g11
08:16:48 182  ,cad_g12
08:16:48 183  ,cad_g13
08:16:48 184  ,cad_g14
08:16:48 185  ,cad_g15
08:16:48 186  ,cad_g16
08:16:48 187  ,cad_g17
08:16:48 188  ,cad_g18
08:16:48 189  ,cad_g19
08:16:48 190  ,cad_g20
08:16:48 191  ,cad_g21
08:16:48 192  ,cad_g22
08:16:48 193  ,cad_g23
08:16:48 194  ,cad_g24
08:16:48 195  ,cad_g25
08:16:48 196  ,cad_g26
08:16:48 197  ,cad_g27
08:16:48 198  ,cad_g28
08:16:48 199  ,cad_g29
08:16:48 200  ,cad_g30
08:16:48 201  ,cad_g31
08:16:48 202  ,cad_g32
08:16:48 203  ,cad_g33
08:16:48 204  ,cad_g34
08:16:48 205  ,cad_g35
08:16:48 206  ,cad_g36
08:16:48 207  ,cad_g37
08:16:48 208  ,cad_g38
08:16:48 209  ,cad_g39
08:16:48 210  ,cad_g40
08:16:48 211  ,chf_g00
08:16:48 212  ,chf_g01
08:16:48 213  ,chf_g02
08:16:48 214  ,chf_g03
08:16:48 215  ,chf_g04
08:16:48 216  ,chf_g05
08:16:48 217  ,chf_g06
08:16:48 218  ,chf_g07
08:16:48 219  ,chf_g08
08:16:48 220  ,chf_g09
08:16:48 221  ,chf_g10
08:16:48 222  ,chf_g11
08:16:48 223  ,chf_g12
08:16:48 224  ,chf_g13
08:16:48 225  ,chf_g14
08:16:48 226  ,chf_g15
08:16:48 227  ,chf_g16
08:16:48 228  ,chf_g17
08:16:48 229  ,chf_g18
08:16:48 230  ,chf_g19
08:16:48 231  ,chf_g20
08:16:48 232  ,chf_g21
08:16:48 233  ,chf_g22
08:16:48 234  ,chf_g23
08:16:48 235  ,chf_g24
08:16:48 236  ,chf_g25
08:16:48 237  ,chf_g26
08:16:48 238  ,chf_g27
08:16:48 239  ,chf_g28
08:16:48 240  ,chf_g29
08:16:48 241  ,chf_g30
08:16:48 242  ,chf_g31
08:16:48 243  ,chf_g32
08:16:48 244  ,chf_g33
08:16:48 245  ,chf_g34
08:16:48 246  ,chf_g35
08:16:48 247  ,chf_g36
08:16:48 248  ,chf_g37
08:16:48 249  ,chf_g38
08:16:48 250  ,chf_g39
08:16:48 251  ,chf_g40
08:16:48 252  FROM aud_ms14 m
08:16:48 253  WHERE gatt IN('nup','up')
08:16:48 254  AND 1+m.ydate < '&1'||' '||'&2'
08:16:48 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:55:00'

View created.

Elapsed: 00:00:00.13
08:16:49 SQL> 
08:16:49 SQL> -- rpt
08:16:49 SQL> 
08:16:49 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt;

GAT COUNT(PRDATE)
--- -------------
nup	    13267
up	     6627

Elapsed: 00:00:00.04
08:16:49 SQL> 
08:16:49 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-16 10:50:00

Elapsed: 00:00:00.04
08:16:49 SQL> 
08:16:49 SQL> -- Now build model from bme and score sme
08:16:49 SQL> @score1.sql
08:16:49 SQL> -- score1.sql
08:16:49 SQL> 
08:16:49 SQL> -- Does the 1st SVM score
08:16:49 SQL> 
08:16:49 SQL> -- Fill up svmc_apply_prep
08:16:49 SQL> @score.sql
08:16:49 SQL> --
08:16:49 SQL> -- score.sql
08:16:49 SQL> --
08:16:49 SQL> 
08:16:49 SQL> -- usage: score.sql
08:16:49 SQL> 
08:16:49 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
08:16:49 SQL> 
08:16:49 SQL> DEFINE target	= 'gatt'
08:16:49 SQL> DEFINE model_name = 'forex14'
08:16:49 SQL> DEFINE bldtable	= 'bme'
08:16:49 SQL> DEFINE scoretable = 'sme'
08:16:49 SQL> DEFINE case_id	= 'prdate'
08:16:49 SQL> 
08:16:49 SQL> -- Define a variable to help me exclude some columns from some data mining calls
08:16:49 SQL> DEFINE exclude1 = "'&target','&case_id'"
08:16:49 SQL> 
08:16:49 SQL> -- Builds an SVM model using pl/sql.
08:16:49 SQL> 
08:16:49 SQL> -----------------------------------------------------------------------
08:16:49 SQL> --			    BUILD THE MODEL
08:16:49 SQL> -----------------------------------------------------------------------
08:16:49 SQL> 
08:16:49 SQL> -- Cleanup old build data preparation objects for repeat runs
08:16:49 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
08:16:49 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
08:16:49 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
08:16:49 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
08:16:49 SQL> 
08:16:49 SQL> 
08:16:49 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
08:16:49 SQL> --
08:16:49 SQL> -- DROP	TABLE svmc_settings ;
08:16:49 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
08:16:49 SQL> -- DELETE svmc_settings;
08:16:49 SQL> 
08:16:49 SQL> -- The default classification algorithm is Naive Bayes. So override
08:16:49 SQL> -- this choice to SVM using a settings table.
08:16:49 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
08:16:49 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
08:16:49 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
08:16:49 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
08:16:49 SQL> -- models.
08:16:49 SQL> --
08:16:49 SQL> 
08:16:49 SQL> -- Do this once and then comment it out.
08:16:49 SQL> -- That makes script go faster.
08:16:49 SQL> -- BEGIN
08:16:49 SQL> -- -- Populate settings table
08:16:49 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:16:49 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
08:16:49 SQL> --
08:16:49 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:16:49 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
08:16:49 SQL> --
08:16:49 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:16:49 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
08:16:49 SQL> --   COMMIT;
08:16:49 SQL> -- END;
08:16:49 SQL> -- /
08:16:49 SQL> 
08:16:49 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
08:16:49 SQL> 
08:16:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
08:16:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:16:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
08:16:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
08:16:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:16:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
08:16:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
08:16:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:16:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:16:49 SQL> 
08:16:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
08:16:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:16:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:16:49 SQL> 
08:16:49 SQL> --------------------------------
08:16:49 SQL> -- PREPARE BUILD (TRAINING) DATA
08:16:49 SQL> --
08:16:49 SQL> 
08:16:49 SQL> -- 1. Missing Value treatment for all Predictors and
08:16:49 SQL> -- 2. Outlier Treatment and
08:16:49 SQL> -- 3. Normalization are performed below.
08:16:49 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
08:16:49 SQL> --    normalized here.
08:16:49 SQL> 
08:16:49 SQL> BEGIN
08:16:49   2  	-- Perform missing value treatment for all predictors
08:16:49   3  	-- create miss tables
08:16:49   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
08:16:49   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
08:16:49   6  
08:16:49   7  	-- populate miss tables
08:16:49   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
08:16:49   9  	  miss_table_name => 'svmc_miss_num',
08:16:49  10  	  data_table_name => '&bldtable',
08:16:49  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:16:49  12  
08:16:49  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
08:16:49  14  	  miss_table_name => 'svmc_miss_cat',
08:16:49  15  	  data_table_name => '&bldtable',
08:16:49  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:16:49  17  
08:16:49  18  	-- xform input data to replace missing values
08:16:49  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:16:49  20  	  miss_table_name => 'svmc_miss_num',
08:16:49  21  	  data_table_name => '&bldtable',
08:16:49  22  	  xform_view_name => 'xformed_build_miss_num');
08:16:49  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:16:49  24  	  miss_table_name => 'svmc_miss_cat',
08:16:49  25  	  data_table_name => '&bldtable',
08:16:49  26  	  xform_view_name => 'xformed_build_miss_cat');
08:16:49  27  
08:16:49  28  	-- Perform outlier treatment.
08:16:49  29  	-- create clip table
08:16:49  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
08:16:49  31  
08:16:49  32  	-- populate clip table
08:16:49  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
08:16:49  34  	  clip_table_name => 'svmc_clip',
08:16:49  35  	  data_table_name => '&bldtable',
08:16:49  36  	  tail_frac	  => 0.025,
08:16:49  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:16:49  38  
08:16:49  39  	-- xform input data to winsorized data
08:16:49  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
08:16:49  41  	  clip_table_name => 'svmc_clip',
08:16:49  42  	  data_table_name => '&bldtable',
08:16:49  43  	  xform_view_name => 'svmc_winsor');
08:16:49  44  
08:16:49  45  	-- create normalization table
08:16:49  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
08:16:49  47  
08:16:49  48  	-- populate normalization table based on winsorized data
08:16:49  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
08:16:49  50  	  norm_table_name => 'svmc_norm',
08:16:49  51  	  data_table_name => 'svmc_winsor',
08:16:49  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:16:49  53  
08:16:49  54  	-- normalize the original data
08:16:49  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:16:49  56  	  norm_table_name => 'svmc_norm',
08:16:49  57  	  data_table_name => '&bldtable',
08:16:49  58  	  xform_view_name => 'svmc_build_prep');
08:16:49  59  END;
08:16:49  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.25
08:17:08 SQL> 
08:17:08 SQL> ---------------------
08:17:08 SQL> -- CREATE A NEW MODEL
08:17:08 SQL> --
08:17:08 SQL> -- Cleanup old model with the same name for repeat runs
08:17:08 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
08:17:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:17:08   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.69
08:17:09 SQL> 
08:17:09 SQL> -- Build a new SVM Model
08:17:09 SQL> BEGIN
08:17:09   2  	DBMS_DATA_MINING.CREATE_MODEL(
08:17:09   3  	  model_name	      => '&model_name',
08:17:09   4  	  mining_function     => dbms_data_mining.classification,
08:17:09   5  	  data_table_name     => 'svmc_build_prep',
08:17:09   6  	  case_id_column_name => '&case_id',
08:17:09   7  	  target_column_name  => '&target',
08:17:09   8  	  settings_table_name => 'svmc_settings');
08:17:09   9  END;
08:17:09  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.83
08:17:39 SQL> 
08:17:39 SQL> -----------------------------------------------------------------------
08:17:39 SQL> --			       APPLY/score THE MODEL
08:17:39 SQL> -----------------------------------------------------------------------
08:17:39 SQL> 
08:17:39 SQL> -- Cleanup old scoring data preparation objects for repeat runs
08:17:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
08:17:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:17:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
08:17:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
08:17:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:17:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:17:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
08:17:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:17:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
08:17:39 SQL> -----------------------
08:17:39 SQL> -- PREPARE SCORING DATA
08:17:39 SQL> --
08:17:39 SQL> -- If the data for model creation has been prepared, then the data
08:17:39 SQL> -- to be scored using the model must be prepared in the same manner
08:17:39 SQL> -- in order to obtain meaningful results.
08:17:39 SQL> --
08:17:39 SQL> -- 1. Missing Value treatment for all Predictors and
08:17:39 SQL> -- 2. Normalization
08:17:39 SQL> -- No outlier treatment will be performed during test and apply. The
08:17:39 SQL> -- normalization step is sufficient, since the normalization parameters
08:17:39 SQL> -- already capture the effects of outlier treatment done with build data.
08:17:39 SQL> --
08:17:39 SQL> BEGIN
08:17:39   2  	-- Xform Test data to replace missing values
08:17:39   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:17:39   4  	  miss_table_name => 'svmc_miss_num',
08:17:39   5  	  data_table_name => '&scoretable',
08:17:39   6  	  xform_view_name => 'xformed_apply_miss_num');
08:17:39   7  
08:17:39   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:17:39   9  	  miss_table_name => 'svmc_miss_cat',
08:17:39  10  	  data_table_name => '&scoretable',
08:17:39  11  	  xform_view_name => 'xformed_apply_miss_cat');
08:17:39  12  
08:17:39  13  	-- Normalize the data to be scored
08:17:39  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:17:39  15  	  norm_table_name => 'svmc_norm',
08:17:39  16  	  data_table_name => '&scoretable',
08:17:39  17  	  xform_view_name => 'svmc_apply_prep');
08:17:39  18  END;
08:17:39  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
08:17:40 SQL> 
08:17:40 SQL> -- Use same model_name used in score.sql
08:17:40 SQL> DEFINE model_name = 'forex14'
08:17:40 SQL> 
08:17:40 SQL> -- CREATE TABLE fxscores8hp (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
08:17:40 SQL> 
08:17:40 SQL> DELETE fxscores8hp WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
08:17:40 SQL> 
08:17:40 SQL> INSERT INTO fxscores8hp (prdate,score,rundate,pair,ydate)
08:17:40   2  SELECT
08:17:40   3  prdate
08:17:40   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
08:17:40   5  ,sysdate
08:17:40   6  ,SUBSTR(prdate,1,3)pair
08:17:40   7  ,SUBSTR(prdate,4,19)ydate
08:17:40   8  FROM svmc_apply_prep
08:17:40   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.21
08:17:40 SQL> @aud_score1day.sql  2010-12-17 10:45:00
08:17:40 SQL> --
08:17:40 SQL> -- aud_score1day.sql
08:17:40 SQL> --
08:17:40 SQL> 
08:17:40 SQL> CREATE OR REPLACE VIEW sme AS
08:17:40   2  SELECT
08:17:40   3  'aud'||m.ydate prdate
08:17:40   4  ,NULL gatt
08:17:40   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:17:40   6  ,eur_g00
08:17:40   7  ,eur_g01
08:17:40   8  ,eur_g02
08:17:40   9  ,eur_g03
08:17:40  10  ,eur_g04
08:17:40  11  ,eur_g05
08:17:40  12  ,eur_g06
08:17:40  13  ,eur_g07
08:17:40  14  ,eur_g08
08:17:40  15  ,eur_g09
08:17:40  16  ,eur_g10
08:17:40  17  ,eur_g11
08:17:40  18  ,eur_g12
08:17:40  19  ,eur_g13
08:17:40  20  ,eur_g14
08:17:40  21  ,eur_g15
08:17:40  22  ,eur_g16
08:17:40  23  ,eur_g17
08:17:40  24  ,eur_g18
08:17:40  25  ,eur_g19
08:17:40  26  ,eur_g20
08:17:40  27  ,eur_g21
08:17:40  28  ,eur_g22
08:17:40  29  ,eur_g23
08:17:40  30  ,eur_g24
08:17:40  31  ,eur_g25
08:17:40  32  ,eur_g26
08:17:40  33  ,eur_g27
08:17:40  34  ,eur_g28
08:17:40  35  ,eur_g29
08:17:40  36  ,eur_g30
08:17:40  37  ,eur_g31
08:17:40  38  ,eur_g32
08:17:40  39  ,eur_g33
08:17:40  40  ,eur_g34
08:17:40  41  ,eur_g35
08:17:40  42  ,eur_g36
08:17:40  43  ,eur_g37
08:17:40  44  ,eur_g38
08:17:40  45  ,eur_g39
08:17:40  46  ,eur_g40
08:17:40  47  ,aud_g00
08:17:40  48  ,aud_g01
08:17:40  49  ,aud_g02
08:17:40  50  ,aud_g03
08:17:40  51  ,aud_g04
08:17:40  52  ,aud_g05
08:17:40  53  ,aud_g06
08:17:40  54  ,aud_g07
08:17:40  55  ,aud_g08
08:17:40  56  ,aud_g09
08:17:40  57  ,aud_g10
08:17:40  58  ,aud_g11
08:17:40  59  ,aud_g12
08:17:40  60  ,aud_g13
08:17:40  61  ,aud_g14
08:17:40  62  ,aud_g15
08:17:40  63  ,aud_g16
08:17:40  64  ,aud_g17
08:17:40  65  ,aud_g18
08:17:40  66  ,aud_g19
08:17:40  67  ,aud_g20
08:17:40  68  ,aud_g21
08:17:40  69  ,aud_g22
08:17:40  70  ,aud_g23
08:17:40  71  ,aud_g24
08:17:40  72  ,aud_g25
08:17:40  73  ,aud_g26
08:17:40  74  ,aud_g27
08:17:40  75  ,aud_g28
08:17:40  76  ,aud_g29
08:17:40  77  ,aud_g30
08:17:40  78  ,aud_g31
08:17:40  79  ,aud_g32
08:17:40  80  ,aud_g33
08:17:40  81  ,aud_g34
08:17:40  82  ,aud_g35
08:17:40  83  ,aud_g36
08:17:40  84  ,aud_g37
08:17:40  85  ,aud_g38
08:17:40  86  ,aud_g39
08:17:40  87  ,aud_g40
08:17:40  88  ,gbp_g00
08:17:40  89  ,gbp_g01
08:17:40  90  ,gbp_g02
08:17:40  91  ,gbp_g03
08:17:40  92  ,gbp_g04
08:17:40  93  ,gbp_g05
08:17:40  94  ,gbp_g06
08:17:40  95  ,gbp_g07
08:17:40  96  ,gbp_g08
08:17:40  97  ,gbp_g09
08:17:40  98  ,gbp_g10
08:17:40  99  ,gbp_g11
08:17:40 100  ,gbp_g12
08:17:40 101  ,gbp_g13
08:17:40 102  ,gbp_g14
08:17:40 103  ,gbp_g15
08:17:40 104  ,gbp_g16
08:17:40 105  ,gbp_g17
08:17:40 106  ,gbp_g18
08:17:40 107  ,gbp_g19
08:17:40 108  ,gbp_g20
08:17:40 109  ,gbp_g21
08:17:40 110  ,gbp_g22
08:17:40 111  ,gbp_g23
08:17:40 112  ,gbp_g24
08:17:40 113  ,gbp_g25
08:17:40 114  ,gbp_g26
08:17:40 115  ,gbp_g27
08:17:40 116  ,gbp_g28
08:17:40 117  ,gbp_g29
08:17:40 118  ,gbp_g30
08:17:40 119  ,gbp_g31
08:17:40 120  ,gbp_g32
08:17:40 121  ,gbp_g33
08:17:40 122  ,gbp_g34
08:17:40 123  ,gbp_g35
08:17:40 124  ,gbp_g36
08:17:40 125  ,gbp_g37
08:17:40 126  ,gbp_g38
08:17:40 127  ,gbp_g39
08:17:40 128  ,gbp_g40
08:17:40 129  ,jpy_g00
08:17:40 130  ,jpy_g01
08:17:40 131  ,jpy_g02
08:17:40 132  ,jpy_g03
08:17:40 133  ,jpy_g04
08:17:40 134  ,jpy_g05
08:17:40 135  ,jpy_g06
08:17:40 136  ,jpy_g07
08:17:40 137  ,jpy_g08
08:17:40 138  ,jpy_g09
08:17:40 139  ,jpy_g10
08:17:40 140  ,jpy_g11
08:17:40 141  ,jpy_g12
08:17:40 142  ,jpy_g13
08:17:40 143  ,jpy_g14
08:17:40 144  ,jpy_g15
08:17:40 145  ,jpy_g16
08:17:40 146  ,jpy_g17
08:17:40 147  ,jpy_g18
08:17:40 148  ,jpy_g19
08:17:40 149  ,jpy_g20
08:17:40 150  ,jpy_g21
08:17:40 151  ,jpy_g22
08:17:40 152  ,jpy_g23
08:17:40 153  ,jpy_g24
08:17:40 154  ,jpy_g25
08:17:40 155  ,jpy_g26
08:17:40 156  ,jpy_g27
08:17:40 157  ,jpy_g28
08:17:40 158  ,jpy_g29
08:17:40 159  ,jpy_g30
08:17:40 160  ,jpy_g31
08:17:40 161  ,jpy_g32
08:17:40 162  ,jpy_g33
08:17:40 163  ,jpy_g34
08:17:40 164  ,jpy_g35
08:17:40 165  ,jpy_g36
08:17:40 166  ,jpy_g37
08:17:40 167  ,jpy_g38
08:17:40 168  ,jpy_g39
08:17:40 169  ,jpy_g40
08:17:40 170  ,cad_g00
08:17:40 171  ,cad_g01
08:17:40 172  ,cad_g02
08:17:40 173  ,cad_g03
08:17:40 174  ,cad_g04
08:17:40 175  ,cad_g05
08:17:40 176  ,cad_g06
08:17:40 177  ,cad_g07
08:17:40 178  ,cad_g08
08:17:40 179  ,cad_g09
08:17:40 180  ,cad_g10
08:17:40 181  ,cad_g11
08:17:40 182  ,cad_g12
08:17:40 183  ,cad_g13
08:17:40 184  ,cad_g14
08:17:40 185  ,cad_g15
08:17:40 186  ,cad_g16
08:17:40 187  ,cad_g17
08:17:40 188  ,cad_g18
08:17:40 189  ,cad_g19
08:17:40 190  ,cad_g20
08:17:40 191  ,cad_g21
08:17:40 192  ,cad_g22
08:17:40 193  ,cad_g23
08:17:40 194  ,cad_g24
08:17:40 195  ,cad_g25
08:17:40 196  ,cad_g26
08:17:40 197  ,cad_g27
08:17:40 198  ,cad_g28
08:17:40 199  ,cad_g29
08:17:40 200  ,cad_g30
08:17:40 201  ,cad_g31
08:17:40 202  ,cad_g32
08:17:40 203  ,cad_g33
08:17:40 204  ,cad_g34
08:17:40 205  ,cad_g35
08:17:40 206  ,cad_g36
08:17:40 207  ,cad_g37
08:17:40 208  ,cad_g38
08:17:40 209  ,cad_g39
08:17:40 210  ,cad_g40
08:17:40 211  ,chf_g00
08:17:40 212  ,chf_g01
08:17:40 213  ,chf_g02
08:17:40 214  ,chf_g03
08:17:40 215  ,chf_g04
08:17:40 216  ,chf_g05
08:17:40 217  ,chf_g06
08:17:40 218  ,chf_g07
08:17:40 219  ,chf_g08
08:17:40 220  ,chf_g09
08:17:40 221  ,chf_g10
08:17:40 222  ,chf_g11
08:17:40 223  ,chf_g12
08:17:40 224  ,chf_g13
08:17:40 225  ,chf_g14
08:17:40 226  ,chf_g15
08:17:40 227  ,chf_g16
08:17:40 228  ,chf_g17
08:17:40 229  ,chf_g18
08:17:40 230  ,chf_g19
08:17:40 231  ,chf_g20
08:17:40 232  ,chf_g21
08:17:40 233  ,chf_g22
08:17:40 234  ,chf_g23
08:17:40 235  ,chf_g24
08:17:40 236  ,chf_g25
08:17:40 237  ,chf_g26
08:17:40 238  ,chf_g27
08:17:40 239  ,chf_g28
08:17:40 240  ,chf_g29
08:17:40 241  ,chf_g30
08:17:40 242  ,chf_g31
08:17:40 243  ,chf_g32
08:17:40 244  ,chf_g33
08:17:40 245  ,chf_g34
08:17:40 246  ,chf_g35
08:17:40 247  ,chf_g36
08:17:40 248  ,chf_g37
08:17:40 249  ,chf_g38
08:17:40 250  ,chf_g39
08:17:40 251  ,chf_g40
08:17:40 252  FROM aud_ms14 m
08:17:40 253  WHERE m.ydate = '&1'||' '||'&2'
08:17:40 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:45:00'

View created.

Elapsed: 00:00:00.12
08:17:41 SQL> 
08:17:41 SQL> -- rpt
08:17:41 SQL> -- We should see just 1 row:
08:17:41 SQL> 
08:17:41 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
08:17:41 SQL> 
08:17:41 SQL> -- Build the model:
08:17:41 SQL> CREATE OR REPLACE VIEW bme AS
08:17:41   2  SELECT
08:17:41   3  'aud'||m.ydate prdate
08:17:41   4  ,gatt
08:17:41   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:17:41   6  ,eur_g00
08:17:41   7  ,eur_g01
08:17:41   8  ,eur_g02
08:17:41   9  ,eur_g03
08:17:41  10  ,eur_g04
08:17:41  11  ,eur_g05
08:17:41  12  ,eur_g06
08:17:41  13  ,eur_g07
08:17:41  14  ,eur_g08
08:17:41  15  ,eur_g09
08:17:41  16  ,eur_g10
08:17:41  17  ,eur_g11
08:17:41  18  ,eur_g12
08:17:41  19  ,eur_g13
08:17:41  20  ,eur_g14
08:17:41  21  ,eur_g15
08:17:41  22  ,eur_g16
08:17:41  23  ,eur_g17
08:17:41  24  ,eur_g18
08:17:41  25  ,eur_g19
08:17:41  26  ,eur_g20
08:17:41  27  ,eur_g21
08:17:41  28  ,eur_g22
08:17:41  29  ,eur_g23
08:17:41  30  ,eur_g24
08:17:41  31  ,eur_g25
08:17:41  32  ,eur_g26
08:17:41  33  ,eur_g27
08:17:41  34  ,eur_g28
08:17:41  35  ,eur_g29
08:17:41  36  ,eur_g30
08:17:41  37  ,eur_g31
08:17:41  38  ,eur_g32
08:17:41  39  ,eur_g33
08:17:41  40  ,eur_g34
08:17:41  41  ,eur_g35
08:17:41  42  ,eur_g36
08:17:41  43  ,eur_g37
08:17:41  44  ,eur_g38
08:17:41  45  ,eur_g39
08:17:41  46  ,eur_g40
08:17:41  47  ,aud_g00
08:17:41  48  ,aud_g01
08:17:41  49  ,aud_g02
08:17:41  50  ,aud_g03
08:17:41  51  ,aud_g04
08:17:41  52  ,aud_g05
08:17:41  53  ,aud_g06
08:17:41  54  ,aud_g07
08:17:41  55  ,aud_g08
08:17:41  56  ,aud_g09
08:17:41  57  ,aud_g10
08:17:41  58  ,aud_g11
08:17:41  59  ,aud_g12
08:17:41  60  ,aud_g13
08:17:41  61  ,aud_g14
08:17:41  62  ,aud_g15
08:17:41  63  ,aud_g16
08:17:41  64  ,aud_g17
08:17:41  65  ,aud_g18
08:17:41  66  ,aud_g19
08:17:41  67  ,aud_g20
08:17:41  68  ,aud_g21
08:17:41  69  ,aud_g22
08:17:41  70  ,aud_g23
08:17:41  71  ,aud_g24
08:17:41  72  ,aud_g25
08:17:41  73  ,aud_g26
08:17:41  74  ,aud_g27
08:17:41  75  ,aud_g28
08:17:41  76  ,aud_g29
08:17:41  77  ,aud_g30
08:17:41  78  ,aud_g31
08:17:41  79  ,aud_g32
08:17:41  80  ,aud_g33
08:17:41  81  ,aud_g34
08:17:41  82  ,aud_g35
08:17:41  83  ,aud_g36
08:17:41  84  ,aud_g37
08:17:41  85  ,aud_g38
08:17:41  86  ,aud_g39
08:17:41  87  ,aud_g40
08:17:41  88  ,gbp_g00
08:17:41  89  ,gbp_g01
08:17:41  90  ,gbp_g02
08:17:41  91  ,gbp_g03
08:17:41  92  ,gbp_g04
08:17:41  93  ,gbp_g05
08:17:41  94  ,gbp_g06
08:17:41  95  ,gbp_g07
08:17:41  96  ,gbp_g08
08:17:41  97  ,gbp_g09
08:17:41  98  ,gbp_g10
08:17:41  99  ,gbp_g11
08:17:41 100  ,gbp_g12
08:17:41 101  ,gbp_g13
08:17:41 102  ,gbp_g14
08:17:41 103  ,gbp_g15
08:17:41 104  ,gbp_g16
08:17:41 105  ,gbp_g17
08:17:41 106  ,gbp_g18
08:17:41 107  ,gbp_g19
08:17:41 108  ,gbp_g20
08:17:41 109  ,gbp_g21
08:17:41 110  ,gbp_g22
08:17:41 111  ,gbp_g23
08:17:41 112  ,gbp_g24
08:17:41 113  ,gbp_g25
08:17:41 114  ,gbp_g26
08:17:41 115  ,gbp_g27
08:17:41 116  ,gbp_g28
08:17:41 117  ,gbp_g29
08:17:41 118  ,gbp_g30
08:17:41 119  ,gbp_g31
08:17:41 120  ,gbp_g32
08:17:41 121  ,gbp_g33
08:17:41 122  ,gbp_g34
08:17:41 123  ,gbp_g35
08:17:41 124  ,gbp_g36
08:17:41 125  ,gbp_g37
08:17:41 126  ,gbp_g38
08:17:41 127  ,gbp_g39
08:17:41 128  ,gbp_g40
08:17:41 129  ,jpy_g00
08:17:41 130  ,jpy_g01
08:17:41 131  ,jpy_g02
08:17:41 132  ,jpy_g03
08:17:41 133  ,jpy_g04
08:17:41 134  ,jpy_g05
08:17:41 135  ,jpy_g06
08:17:41 136  ,jpy_g07
08:17:41 137  ,jpy_g08
08:17:41 138  ,jpy_g09
08:17:41 139  ,jpy_g10
08:17:41 140  ,jpy_g11
08:17:41 141  ,jpy_g12
08:17:41 142  ,jpy_g13
08:17:41 143  ,jpy_g14
08:17:41 144  ,jpy_g15
08:17:41 145  ,jpy_g16
08:17:41 146  ,jpy_g17
08:17:41 147  ,jpy_g18
08:17:41 148  ,jpy_g19
08:17:41 149  ,jpy_g20
08:17:41 150  ,jpy_g21
08:17:41 151  ,jpy_g22
08:17:41 152  ,jpy_g23
08:17:41 153  ,jpy_g24
08:17:41 154  ,jpy_g25
08:17:41 155  ,jpy_g26
08:17:41 156  ,jpy_g27
08:17:41 157  ,jpy_g28
08:17:41 158  ,jpy_g29
08:17:41 159  ,jpy_g30
08:17:41 160  ,jpy_g31
08:17:41 161  ,jpy_g32
08:17:41 162  ,jpy_g33
08:17:41 163  ,jpy_g34
08:17:41 164  ,jpy_g35
08:17:41 165  ,jpy_g36
08:17:41 166  ,jpy_g37
08:17:41 167  ,jpy_g38
08:17:41 168  ,jpy_g39
08:17:41 169  ,jpy_g40
08:17:41 170  ,cad_g00
08:17:41 171  ,cad_g01
08:17:41 172  ,cad_g02
08:17:41 173  ,cad_g03
08:17:41 174  ,cad_g04
08:17:41 175  ,cad_g05
08:17:41 176  ,cad_g06
08:17:41 177  ,cad_g07
08:17:41 178  ,cad_g08
08:17:41 179  ,cad_g09
08:17:41 180  ,cad_g10
08:17:41 181  ,cad_g11
08:17:41 182  ,cad_g12
08:17:41 183  ,cad_g13
08:17:41 184  ,cad_g14
08:17:41 185  ,cad_g15
08:17:41 186  ,cad_g16
08:17:41 187  ,cad_g17
08:17:41 188  ,cad_g18
08:17:41 189  ,cad_g19
08:17:41 190  ,cad_g20
08:17:41 191  ,cad_g21
08:17:41 192  ,cad_g22
08:17:41 193  ,cad_g23
08:17:41 194  ,cad_g24
08:17:41 195  ,cad_g25
08:17:41 196  ,cad_g26
08:17:41 197  ,cad_g27
08:17:41 198  ,cad_g28
08:17:41 199  ,cad_g29
08:17:41 200  ,cad_g30
08:17:41 201  ,cad_g31
08:17:41 202  ,cad_g32
08:17:41 203  ,cad_g33
08:17:41 204  ,cad_g34
08:17:41 205  ,cad_g35
08:17:41 206  ,cad_g36
08:17:41 207  ,cad_g37
08:17:41 208  ,cad_g38
08:17:41 209  ,cad_g39
08:17:41 210  ,cad_g40
08:17:41 211  ,chf_g00
08:17:41 212  ,chf_g01
08:17:41 213  ,chf_g02
08:17:41 214  ,chf_g03
08:17:41 215  ,chf_g04
08:17:41 216  ,chf_g05
08:17:41 217  ,chf_g06
08:17:41 218  ,chf_g07
08:17:41 219  ,chf_g08
08:17:41 220  ,chf_g09
08:17:41 221  ,chf_g10
08:17:41 222  ,chf_g11
08:17:41 223  ,chf_g12
08:17:41 224  ,chf_g13
08:17:41 225  ,chf_g14
08:17:41 226  ,chf_g15
08:17:41 227  ,chf_g16
08:17:41 228  ,chf_g17
08:17:41 229  ,chf_g18
08:17:41 230  ,chf_g19
08:17:41 231  ,chf_g20
08:17:41 232  ,chf_g21
08:17:41 233  ,chf_g22
08:17:41 234  ,chf_g23
08:17:41 235  ,chf_g24
08:17:41 236  ,chf_g25
08:17:41 237  ,chf_g26
08:17:41 238  ,chf_g27
08:17:41 239  ,chf_g28
08:17:41 240  ,chf_g29
08:17:41 241  ,chf_g30
08:17:41 242  ,chf_g31
08:17:41 243  ,chf_g32
08:17:41 244  ,chf_g33
08:17:41 245  ,chf_g34
08:17:41 246  ,chf_g35
08:17:41 247  ,chf_g36
08:17:41 248  ,chf_g37
08:17:41 249  ,chf_g38
08:17:41 250  ,chf_g39
08:17:41 251  ,chf_g40
08:17:41 252  FROM aud_ms14 m
08:17:41 253  WHERE gatt IN('nup','up')
08:17:41 254  AND 1+m.ydate < '&1'||' '||'&2'
08:17:41 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:45:00'

View created.

Elapsed: 00:00:00.16
08:17:41 SQL> 
08:17:41 SQL> -- rpt
08:17:41 SQL> 
08:17:41 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt;

GAT COUNT(PRDATE)
--- -------------
nup	    13265
up	     6627

Elapsed: 00:00:00.04
08:17:41 SQL> 
08:17:41 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-16 10:40:00

Elapsed: 00:00:00.04
08:17:41 SQL> 
08:17:41 SQL> -- Now build model from bme and score sme
08:17:41 SQL> @score1.sql
08:17:41 SQL> -- score1.sql
08:17:41 SQL> 
08:17:41 SQL> -- Does the 1st SVM score
08:17:41 SQL> 
08:17:41 SQL> -- Fill up svmc_apply_prep
08:17:41 SQL> @score.sql
08:17:41 SQL> --
08:17:41 SQL> -- score.sql
08:17:41 SQL> --
08:17:41 SQL> 
08:17:41 SQL> -- usage: score.sql
08:17:41 SQL> 
08:17:41 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
08:17:41 SQL> 
08:17:41 SQL> DEFINE target	= 'gatt'
08:17:41 SQL> DEFINE model_name = 'forex14'
08:17:41 SQL> DEFINE bldtable	= 'bme'
08:17:41 SQL> DEFINE scoretable = 'sme'
08:17:41 SQL> DEFINE case_id	= 'prdate'
08:17:41 SQL> 
08:17:41 SQL> -- Define a variable to help me exclude some columns from some data mining calls
08:17:41 SQL> DEFINE exclude1 = "'&target','&case_id'"
08:17:41 SQL> 
08:17:41 SQL> -- Builds an SVM model using pl/sql.
08:17:41 SQL> 
08:17:41 SQL> -----------------------------------------------------------------------
08:17:41 SQL> --			    BUILD THE MODEL
08:17:41 SQL> -----------------------------------------------------------------------
08:17:41 SQL> 
08:17:41 SQL> -- Cleanup old build data preparation objects for repeat runs
08:17:41 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
08:17:41 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
08:17:41 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
08:17:41 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
08:17:41 SQL> 
08:17:41 SQL> 
08:17:41 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
08:17:41 SQL> --
08:17:41 SQL> -- DROP	TABLE svmc_settings ;
08:17:41 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
08:17:41 SQL> -- DELETE svmc_settings;
08:17:41 SQL> 
08:17:41 SQL> -- The default classification algorithm is Naive Bayes. So override
08:17:41 SQL> -- this choice to SVM using a settings table.
08:17:41 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
08:17:41 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
08:17:41 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
08:17:41 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
08:17:41 SQL> -- models.
08:17:41 SQL> --
08:17:41 SQL> 
08:17:41 SQL> -- Do this once and then comment it out.
08:17:41 SQL> -- That makes script go faster.
08:17:41 SQL> -- BEGIN
08:17:41 SQL> -- -- Populate settings table
08:17:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:17:41 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
08:17:41 SQL> --
08:17:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:17:41 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
08:17:41 SQL> --
08:17:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:17:41 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
08:17:41 SQL> --   COMMIT;
08:17:41 SQL> -- END;
08:17:41 SQL> -- /
08:17:41 SQL> 
08:17:41 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
08:17:41 SQL> 
08:17:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
08:17:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:17:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:17:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
08:17:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:17:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:17:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
08:17:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:17:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
08:17:41 SQL> 
08:17:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
08:17:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:17:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:17:41 SQL> 
08:17:41 SQL> --------------------------------
08:17:41 SQL> -- PREPARE BUILD (TRAINING) DATA
08:17:41 SQL> --
08:17:41 SQL> 
08:17:41 SQL> -- 1. Missing Value treatment for all Predictors and
08:17:41 SQL> -- 2. Outlier Treatment and
08:17:41 SQL> -- 3. Normalization are performed below.
08:17:41 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
08:17:41 SQL> --    normalized here.
08:17:41 SQL> 
08:17:41 SQL> BEGIN
08:17:41   2  	-- Perform missing value treatment for all predictors
08:17:41   3  	-- create miss tables
08:17:41   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
08:17:41   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
08:17:41   6  
08:17:41   7  	-- populate miss tables
08:17:41   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
08:17:41   9  	  miss_table_name => 'svmc_miss_num',
08:17:41  10  	  data_table_name => '&bldtable',
08:17:41  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:17:41  12  
08:17:41  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
08:17:41  14  	  miss_table_name => 'svmc_miss_cat',
08:17:41  15  	  data_table_name => '&bldtable',
08:17:41  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:17:41  17  
08:17:41  18  	-- xform input data to replace missing values
08:17:41  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:17:41  20  	  miss_table_name => 'svmc_miss_num',
08:17:41  21  	  data_table_name => '&bldtable',
08:17:41  22  	  xform_view_name => 'xformed_build_miss_num');
08:17:41  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:17:41  24  	  miss_table_name => 'svmc_miss_cat',
08:17:41  25  	  data_table_name => '&bldtable',
08:17:41  26  	  xform_view_name => 'xformed_build_miss_cat');
08:17:41  27  
08:17:41  28  	-- Perform outlier treatment.
08:17:41  29  	-- create clip table
08:17:41  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
08:17:41  31  
08:17:41  32  	-- populate clip table
08:17:41  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
08:17:41  34  	  clip_table_name => 'svmc_clip',
08:17:41  35  	  data_table_name => '&bldtable',
08:17:41  36  	  tail_frac	  => 0.025,
08:17:41  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:17:41  38  
08:17:41  39  	-- xform input data to winsorized data
08:17:41  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
08:17:41  41  	  clip_table_name => 'svmc_clip',
08:17:41  42  	  data_table_name => '&bldtable',
08:17:41  43  	  xform_view_name => 'svmc_winsor');
08:17:41  44  
08:17:41  45  	-- create normalization table
08:17:41  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
08:17:41  47  
08:17:41  48  	-- populate normalization table based on winsorized data
08:17:41  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
08:17:41  50  	  norm_table_name => 'svmc_norm',
08:17:41  51  	  data_table_name => 'svmc_winsor',
08:17:41  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:17:41  53  
08:17:41  54  	-- normalize the original data
08:17:41  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:17:41  56  	  norm_table_name => 'svmc_norm',
08:17:41  57  	  data_table_name => '&bldtable',
08:17:41  58  	  xform_view_name => 'svmc_build_prep');
08:17:41  59  END;
08:17:41  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.82
08:18:00 SQL> 
08:18:00 SQL> ---------------------
08:18:00 SQL> -- CREATE A NEW MODEL
08:18:00 SQL> --
08:18:00 SQL> -- Cleanup old model with the same name for repeat runs
08:18:00 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
08:18:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:18:00   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.00
08:18:01 SQL> 
08:18:01 SQL> -- Build a new SVM Model
08:18:01 SQL> BEGIN
08:18:01   2  	DBMS_DATA_MINING.CREATE_MODEL(
08:18:01   3  	  model_name	      => '&model_name',
08:18:01   4  	  mining_function     => dbms_data_mining.classification,
08:18:01   5  	  data_table_name     => 'svmc_build_prep',
08:18:01   6  	  case_id_column_name => '&case_id',
08:18:01   7  	  target_column_name  => '&target',
08:18:01   8  	  settings_table_name => 'svmc_settings');
08:18:01   9  END;
08:18:01  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.53
08:18:27 SQL> 
08:18:27 SQL> -----------------------------------------------------------------------
08:18:27 SQL> --			       APPLY/score THE MODEL
08:18:27 SQL> -----------------------------------------------------------------------
08:18:27 SQL> 
08:18:27 SQL> -- Cleanup old scoring data preparation objects for repeat runs
08:18:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
08:18:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:18:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
08:18:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
08:18:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:18:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
08:18:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
08:18:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:18:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
08:18:28 SQL> -----------------------
08:18:28 SQL> -- PREPARE SCORING DATA
08:18:28 SQL> --
08:18:28 SQL> -- If the data for model creation has been prepared, then the data
08:18:28 SQL> -- to be scored using the model must be prepared in the same manner
08:18:28 SQL> -- in order to obtain meaningful results.
08:18:28 SQL> --
08:18:28 SQL> -- 1. Missing Value treatment for all Predictors and
08:18:28 SQL> -- 2. Normalization
08:18:28 SQL> -- No outlier treatment will be performed during test and apply. The
08:18:28 SQL> -- normalization step is sufficient, since the normalization parameters
08:18:28 SQL> -- already capture the effects of outlier treatment done with build data.
08:18:28 SQL> --
08:18:28 SQL> BEGIN
08:18:28   2  	-- Xform Test data to replace missing values
08:18:28   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:18:28   4  	  miss_table_name => 'svmc_miss_num',
08:18:28   5  	  data_table_name => '&scoretable',
08:18:28   6  	  xform_view_name => 'xformed_apply_miss_num');
08:18:28   7  
08:18:28   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:18:28   9  	  miss_table_name => 'svmc_miss_cat',
08:18:28  10  	  data_table_name => '&scoretable',
08:18:28  11  	  xform_view_name => 'xformed_apply_miss_cat');
08:18:28  12  
08:18:28  13  	-- Normalize the data to be scored
08:18:28  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:18:28  15  	  norm_table_name => 'svmc_norm',
08:18:28  16  	  data_table_name => '&scoretable',
08:18:28  17  	  xform_view_name => 'svmc_apply_prep');
08:18:28  18  END;
08:18:28  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
08:18:29 SQL> 
08:18:29 SQL> -- Use same model_name used in score.sql
08:18:29 SQL> DEFINE model_name = 'forex14'
08:18:29 SQL> 
08:18:29 SQL> -- CREATE TABLE fxscores8hp (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
08:18:29 SQL> 
08:18:29 SQL> DELETE fxscores8hp WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
08:18:29 SQL> 
08:18:29 SQL> INSERT INTO fxscores8hp (prdate,score,rundate,pair,ydate)
08:18:29   2  SELECT
08:18:29   3  prdate
08:18:29   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
08:18:29   5  ,sysdate
08:18:29   6  ,SUBSTR(prdate,1,3)pair
08:18:29   7  ,SUBSTR(prdate,4,19)ydate
08:18:29   8  FROM svmc_apply_prep
08:18:29   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
08:18:29 SQL> @aud_score1day.sql  2010-12-17 10:40:00
08:18:29 SQL> --
08:18:29 SQL> -- aud_score1day.sql
08:18:29 SQL> --
08:18:29 SQL> 
08:18:29 SQL> CREATE OR REPLACE VIEW sme AS
08:18:29   2  SELECT
08:18:29   3  'aud'||m.ydate prdate
08:18:29   4  ,NULL gatt
08:18:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:18:29   6  ,eur_g00
08:18:29   7  ,eur_g01
08:18:29   8  ,eur_g02
08:18:29   9  ,eur_g03
08:18:29  10  ,eur_g04
08:18:29  11  ,eur_g05
08:18:29  12  ,eur_g06
08:18:29  13  ,eur_g07
08:18:29  14  ,eur_g08
08:18:29  15  ,eur_g09
08:18:29  16  ,eur_g10
08:18:29  17  ,eur_g11
08:18:29  18  ,eur_g12
08:18:29  19  ,eur_g13
08:18:29  20  ,eur_g14
08:18:29  21  ,eur_g15
08:18:29  22  ,eur_g16
08:18:29  23  ,eur_g17
08:18:29  24  ,eur_g18
08:18:29  25  ,eur_g19
08:18:29  26  ,eur_g20
08:18:29  27  ,eur_g21
08:18:29  28  ,eur_g22
08:18:29  29  ,eur_g23
08:18:29  30  ,eur_g24
08:18:29  31  ,eur_g25
08:18:29  32  ,eur_g26
08:18:29  33  ,eur_g27
08:18:29  34  ,eur_g28
08:18:29  35  ,eur_g29
08:18:29  36  ,eur_g30
08:18:29  37  ,eur_g31
08:18:29  38  ,eur_g32
08:18:29  39  ,eur_g33
08:18:29  40  ,eur_g34
08:18:29  41  ,eur_g35
08:18:29  42  ,eur_g36
08:18:29  43  ,eur_g37
08:18:29  44  ,eur_g38
08:18:29  45  ,eur_g39
08:18:29  46  ,eur_g40
08:18:29  47  ,aud_g00
08:18:29  48  ,aud_g01
08:18:29  49  ,aud_g02
08:18:29  50  ,aud_g03
08:18:29  51  ,aud_g04
08:18:29  52  ,aud_g05
08:18:29  53  ,aud_g06
08:18:29  54  ,aud_g07
08:18:29  55  ,aud_g08
08:18:29  56  ,aud_g09
08:18:29  57  ,aud_g10
08:18:29  58  ,aud_g11
08:18:29  59  ,aud_g12
08:18:29  60  ,aud_g13
08:18:29  61  ,aud_g14
08:18:29  62  ,aud_g15
08:18:29  63  ,aud_g16
08:18:29  64  ,aud_g17
08:18:29  65  ,aud_g18
08:18:29  66  ,aud_g19
08:18:29  67  ,aud_g20
08:18:29  68  ,aud_g21
08:18:29  69  ,aud_g22
08:18:29  70  ,aud_g23
08:18:29  71  ,aud_g24
08:18:29  72  ,aud_g25
08:18:29  73  ,aud_g26
08:18:29  74  ,aud_g27
08:18:29  75  ,aud_g28
08:18:29  76  ,aud_g29
08:18:29  77  ,aud_g30
08:18:29  78  ,aud_g31
08:18:29  79  ,aud_g32
08:18:29  80  ,aud_g33
08:18:29  81  ,aud_g34
08:18:29  82  ,aud_g35
08:18:29  83  ,aud_g36
08:18:29  84  ,aud_g37
08:18:29  85  ,aud_g38
08:18:29  86  ,aud_g39
08:18:29  87  ,aud_g40
08:18:29  88  ,gbp_g00
08:18:29  89  ,gbp_g01
08:18:29  90  ,gbp_g02
08:18:29  91  ,gbp_g03
08:18:29  92  ,gbp_g04
08:18:29  93  ,gbp_g05
08:18:29  94  ,gbp_g06
08:18:29  95  ,gbp_g07
08:18:29  96  ,gbp_g08
08:18:29  97  ,gbp_g09
08:18:29  98  ,gbp_g10
08:18:29  99  ,gbp_g11
08:18:29 100  ,gbp_g12
08:18:29 101  ,gbp_g13
08:18:29 102  ,gbp_g14
08:18:29 103  ,gbp_g15
08:18:29 104  ,gbp_g16
08:18:29 105  ,gbp_g17
08:18:29 106  ,gbp_g18
08:18:29 107  ,gbp_g19
08:18:29 108  ,gbp_g20
08:18:29 109  ,gbp_g21
08:18:29 110  ,gbp_g22
08:18:29 111  ,gbp_g23
08:18:29 112  ,gbp_g24
08:18:29 113  ,gbp_g25
08:18:29 114  ,gbp_g26
08:18:29 115  ,gbp_g27
08:18:29 116  ,gbp_g28
08:18:29 117  ,gbp_g29
08:18:29 118  ,gbp_g30
08:18:29 119  ,gbp_g31
08:18:29 120  ,gbp_g32
08:18:29 121  ,gbp_g33
08:18:29 122  ,gbp_g34
08:18:29 123  ,gbp_g35
08:18:29 124  ,gbp_g36
08:18:29 125  ,gbp_g37
08:18:29 126  ,gbp_g38
08:18:29 127  ,gbp_g39
08:18:29 128  ,gbp_g40
08:18:29 129  ,jpy_g00
08:18:29 130  ,jpy_g01
08:18:29 131  ,jpy_g02
08:18:29 132  ,jpy_g03
08:18:29 133  ,jpy_g04
08:18:29 134  ,jpy_g05
08:18:29 135  ,jpy_g06
08:18:29 136  ,jpy_g07
08:18:29 137  ,jpy_g08
08:18:29 138  ,jpy_g09
08:18:29 139  ,jpy_g10
08:18:29 140  ,jpy_g11
08:18:29 141  ,jpy_g12
08:18:29 142  ,jpy_g13
08:18:29 143  ,jpy_g14
08:18:29 144  ,jpy_g15
08:18:29 145  ,jpy_g16
08:18:29 146  ,jpy_g17
08:18:29 147  ,jpy_g18
08:18:29 148  ,jpy_g19
08:18:29 149  ,jpy_g20
08:18:29 150  ,jpy_g21
08:18:29 151  ,jpy_g22
08:18:29 152  ,jpy_g23
08:18:29 153  ,jpy_g24
08:18:29 154  ,jpy_g25
08:18:29 155  ,jpy_g26
08:18:29 156  ,jpy_g27
08:18:29 157  ,jpy_g28
08:18:29 158  ,jpy_g29
08:18:29 159  ,jpy_g30
08:18:29 160  ,jpy_g31
08:18:29 161  ,jpy_g32
08:18:29 162  ,jpy_g33
08:18:29 163  ,jpy_g34
08:18:29 164  ,jpy_g35
08:18:29 165  ,jpy_g36
08:18:29 166  ,jpy_g37
08:18:29 167  ,jpy_g38
08:18:29 168  ,jpy_g39
08:18:29 169  ,jpy_g40
08:18:29 170  ,cad_g00
08:18:29 171  ,cad_g01
08:18:29 172  ,cad_g02
08:18:29 173  ,cad_g03
08:18:29 174  ,cad_g04
08:18:29 175  ,cad_g05
08:18:29 176  ,cad_g06
08:18:29 177  ,cad_g07
08:18:29 178  ,cad_g08
08:18:29 179  ,cad_g09
08:18:29 180  ,cad_g10
08:18:29 181  ,cad_g11
08:18:29 182  ,cad_g12
08:18:29 183  ,cad_g13
08:18:29 184  ,cad_g14
08:18:29 185  ,cad_g15
08:18:29 186  ,cad_g16
08:18:29 187  ,cad_g17
08:18:29 188  ,cad_g18
08:18:29 189  ,cad_g19
08:18:29 190  ,cad_g20
08:18:29 191  ,cad_g21
08:18:29 192  ,cad_g22
08:18:29 193  ,cad_g23
08:18:29 194  ,cad_g24
08:18:29 195  ,cad_g25
08:18:29 196  ,cad_g26
08:18:29 197  ,cad_g27
08:18:29 198  ,cad_g28
08:18:29 199  ,cad_g29
08:18:29 200  ,cad_g30
08:18:29 201  ,cad_g31
08:18:29 202  ,cad_g32
08:18:29 203  ,cad_g33
08:18:29 204  ,cad_g34
08:18:29 205  ,cad_g35
08:18:29 206  ,cad_g36
08:18:29 207  ,cad_g37
08:18:29 208  ,cad_g38
08:18:29 209  ,cad_g39
08:18:29 210  ,cad_g40
08:18:29 211  ,chf_g00
08:18:29 212  ,chf_g01
08:18:29 213  ,chf_g02
08:18:29 214  ,chf_g03
08:18:29 215  ,chf_g04
08:18:29 216  ,chf_g05
08:18:29 217  ,chf_g06
08:18:29 218  ,chf_g07
08:18:29 219  ,chf_g08
08:18:29 220  ,chf_g09
08:18:29 221  ,chf_g10
08:18:29 222  ,chf_g11
08:18:29 223  ,chf_g12
08:18:29 224  ,chf_g13
08:18:29 225  ,chf_g14
08:18:29 226  ,chf_g15
08:18:29 227  ,chf_g16
08:18:29 228  ,chf_g17
08:18:29 229  ,chf_g18
08:18:29 230  ,chf_g19
08:18:29 231  ,chf_g20
08:18:29 232  ,chf_g21
08:18:29 233  ,chf_g22
08:18:29 234  ,chf_g23
08:18:29 235  ,chf_g24
08:18:29 236  ,chf_g25
08:18:29 237  ,chf_g26
08:18:29 238  ,chf_g27
08:18:29 239  ,chf_g28
08:18:29 240  ,chf_g29
08:18:29 241  ,chf_g30
08:18:29 242  ,chf_g31
08:18:29 243  ,chf_g32
08:18:29 244  ,chf_g33
08:18:29 245  ,chf_g34
08:18:29 246  ,chf_g35
08:18:29 247  ,chf_g36
08:18:29 248  ,chf_g37
08:18:29 249  ,chf_g38
08:18:29 250  ,chf_g39
08:18:29 251  ,chf_g40
08:18:29 252  FROM aud_ms14 m
08:18:29 253  WHERE m.ydate = '&1'||' '||'&2'
08:18:29 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:40:00'

View created.

Elapsed: 00:00:00.11
08:18:29 SQL> 
08:18:29 SQL> -- rpt
08:18:29 SQL> -- We should see just 1 row:
08:18:29 SQL> 
08:18:29 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
08:18:29 SQL> 
08:18:29 SQL> -- Build the model:
08:18:29 SQL> CREATE OR REPLACE VIEW bme AS
08:18:29   2  SELECT
08:18:29   3  'aud'||m.ydate prdate
08:18:29   4  ,gatt
08:18:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:18:29   6  ,eur_g00
08:18:29   7  ,eur_g01
08:18:29   8  ,eur_g02
08:18:29   9  ,eur_g03
08:18:29  10  ,eur_g04
08:18:29  11  ,eur_g05
08:18:29  12  ,eur_g06
08:18:29  13  ,eur_g07
08:18:29  14  ,eur_g08
08:18:29  15  ,eur_g09
08:18:29  16  ,eur_g10
08:18:29  17  ,eur_g11
08:18:29  18  ,eur_g12
08:18:29  19  ,eur_g13
08:18:29  20  ,eur_g14
08:18:29  21  ,eur_g15
08:18:29  22  ,eur_g16
08:18:29  23  ,eur_g17
08:18:29  24  ,eur_g18
08:18:29  25  ,eur_g19
08:18:29  26  ,eur_g20
08:18:29  27  ,eur_g21
08:18:29  28  ,eur_g22
08:18:29  29  ,eur_g23
08:18:29  30  ,eur_g24
08:18:29  31  ,eur_g25
08:18:29  32  ,eur_g26
08:18:29  33  ,eur_g27
08:18:29  34  ,eur_g28
08:18:29  35  ,eur_g29
08:18:29  36  ,eur_g30
08:18:29  37  ,eur_g31
08:18:29  38  ,eur_g32
08:18:29  39  ,eur_g33
08:18:29  40  ,eur_g34
08:18:29  41  ,eur_g35
08:18:29  42  ,eur_g36
08:18:29  43  ,eur_g37
08:18:29  44  ,eur_g38
08:18:29  45  ,eur_g39
08:18:29  46  ,eur_g40
08:18:29  47  ,aud_g00
08:18:29  48  ,aud_g01
08:18:29  49  ,aud_g02
08:18:29  50  ,aud_g03
08:18:29  51  ,aud_g04
08:18:29  52  ,aud_g05
08:18:29  53  ,aud_g06
08:18:29  54  ,aud_g07
08:18:29  55  ,aud_g08
08:18:29  56  ,aud_g09
08:18:29  57  ,aud_g10
08:18:29  58  ,aud_g11
08:18:29  59  ,aud_g12
08:18:29  60  ,aud_g13
08:18:29  61  ,aud_g14
08:18:29  62  ,aud_g15
08:18:29  63  ,aud_g16
08:18:29  64  ,aud_g17
08:18:29  65  ,aud_g18
08:18:29  66  ,aud_g19
08:18:29  67  ,aud_g20
08:18:29  68  ,aud_g21
08:18:29  69  ,aud_g22
08:18:29  70  ,aud_g23
08:18:29  71  ,aud_g24
08:18:29  72  ,aud_g25
08:18:29  73  ,aud_g26
08:18:29  74  ,aud_g27
08:18:29  75  ,aud_g28
08:18:29  76  ,aud_g29
08:18:29  77  ,aud_g30
08:18:29  78  ,aud_g31
08:18:29  79  ,aud_g32
08:18:29  80  ,aud_g33
08:18:29  81  ,aud_g34
08:18:29  82  ,aud_g35
08:18:29  83  ,aud_g36
08:18:29  84  ,aud_g37
08:18:29  85  ,aud_g38
08:18:29  86  ,aud_g39
08:18:29  87  ,aud_g40
08:18:29  88  ,gbp_g00
08:18:29  89  ,gbp_g01
08:18:29  90  ,gbp_g02
08:18:29  91  ,gbp_g03
08:18:29  92  ,gbp_g04
08:18:29  93  ,gbp_g05
08:18:29  94  ,gbp_g06
08:18:29  95  ,gbp_g07
08:18:29  96  ,gbp_g08
08:18:29  97  ,gbp_g09
08:18:29  98  ,gbp_g10
08:18:29  99  ,gbp_g11
08:18:29 100  ,gbp_g12
08:18:29 101  ,gbp_g13
08:18:29 102  ,gbp_g14
08:18:29 103  ,gbp_g15
08:18:29 104  ,gbp_g16
08:18:29 105  ,gbp_g17
08:18:29 106  ,gbp_g18
08:18:29 107  ,gbp_g19
08:18:29 108  ,gbp_g20
08:18:29 109  ,gbp_g21
08:18:29 110  ,gbp_g22
08:18:29 111  ,gbp_g23
08:18:29 112  ,gbp_g24
08:18:29 113  ,gbp_g25
08:18:29 114  ,gbp_g26
08:18:29 115  ,gbp_g27
08:18:29 116  ,gbp_g28
08:18:29 117  ,gbp_g29
08:18:29 118  ,gbp_g30
08:18:29 119  ,gbp_g31
08:18:29 120  ,gbp_g32
08:18:29 121  ,gbp_g33
08:18:29 122  ,gbp_g34
08:18:29 123  ,gbp_g35
08:18:29 124  ,gbp_g36
08:18:29 125  ,gbp_g37
08:18:29 126  ,gbp_g38
08:18:29 127  ,gbp_g39
08:18:29 128  ,gbp_g40
08:18:29 129  ,jpy_g00
08:18:29 130  ,jpy_g01
08:18:29 131  ,jpy_g02
08:18:29 132  ,jpy_g03
08:18:29 133  ,jpy_g04
08:18:29 134  ,jpy_g05
08:18:29 135  ,jpy_g06
08:18:29 136  ,jpy_g07
08:18:29 137  ,jpy_g08
08:18:29 138  ,jpy_g09
08:18:29 139  ,jpy_g10
08:18:29 140  ,jpy_g11
08:18:29 141  ,jpy_g12
08:18:29 142  ,jpy_g13
08:18:29 143  ,jpy_g14
08:18:29 144  ,jpy_g15
08:18:29 145  ,jpy_g16
08:18:29 146  ,jpy_g17
08:18:29 147  ,jpy_g18
08:18:29 148  ,jpy_g19
08:18:29 149  ,jpy_g20
08:18:29 150  ,jpy_g21
08:18:29 151  ,jpy_g22
08:18:29 152  ,jpy_g23
08:18:29 153  ,jpy_g24
08:18:29 154  ,jpy_g25
08:18:29 155  ,jpy_g26
08:18:29 156  ,jpy_g27
08:18:29 157  ,jpy_g28
08:18:29 158  ,jpy_g29
08:18:29 159  ,jpy_g30
08:18:29 160  ,jpy_g31
08:18:29 161  ,jpy_g32
08:18:29 162  ,jpy_g33
08:18:29 163  ,jpy_g34
08:18:29 164  ,jpy_g35
08:18:29 165  ,jpy_g36
08:18:29 166  ,jpy_g37
08:18:29 167  ,jpy_g38
08:18:29 168  ,jpy_g39
08:18:29 169  ,jpy_g40
08:18:29 170  ,cad_g00
08:18:29 171  ,cad_g01
08:18:29 172  ,cad_g02
08:18:29 173  ,cad_g03
08:18:29 174  ,cad_g04
08:18:29 175  ,cad_g05
08:18:29 176  ,cad_g06
08:18:29 177  ,cad_g07
08:18:29 178  ,cad_g08
08:18:29 179  ,cad_g09
08:18:29 180  ,cad_g10
08:18:29 181  ,cad_g11
08:18:29 182  ,cad_g12
08:18:29 183  ,cad_g13
08:18:29 184  ,cad_g14
08:18:29 185  ,cad_g15
08:18:29 186  ,cad_g16
08:18:29 187  ,cad_g17
08:18:29 188  ,cad_g18
08:18:29 189  ,cad_g19
08:18:29 190  ,cad_g20
08:18:29 191  ,cad_g21
08:18:29 192  ,cad_g22
08:18:29 193  ,cad_g23
08:18:29 194  ,cad_g24
08:18:29 195  ,cad_g25
08:18:29 196  ,cad_g26
08:18:29 197  ,cad_g27
08:18:29 198  ,cad_g28
08:18:29 199  ,cad_g29
08:18:29 200  ,cad_g30
08:18:29 201  ,cad_g31
08:18:29 202  ,cad_g32
08:18:29 203  ,cad_g33
08:18:29 204  ,cad_g34
08:18:29 205  ,cad_g35
08:18:29 206  ,cad_g36
08:18:29 207  ,cad_g37
08:18:29 208  ,cad_g38
08:18:29 209  ,cad_g39
08:18:29 210  ,cad_g40
08:18:29 211  ,chf_g00
08:18:29 212  ,chf_g01
08:18:29 213  ,chf_g02
08:18:29 214  ,chf_g03
08:18:29 215  ,chf_g04
08:18:29 216  ,chf_g05
08:18:29 217  ,chf_g06
08:18:29 218  ,chf_g07
08:18:29 219  ,chf_g08
08:18:29 220  ,chf_g09
08:18:29 221  ,chf_g10
08:18:29 222  ,chf_g11
08:18:29 223  ,chf_g12
08:18:29 224  ,chf_g13
08:18:29 225  ,chf_g14
08:18:29 226  ,chf_g15
08:18:29 227  ,chf_g16
08:18:29 228  ,chf_g17
08:18:29 229  ,chf_g18
08:18:29 230  ,chf_g19
08:18:29 231  ,chf_g20
08:18:29 232  ,chf_g21
08:18:29 233  ,chf_g22
08:18:29 234  ,chf_g23
08:18:29 235  ,chf_g24
08:18:29 236  ,chf_g25
08:18:29 237  ,chf_g26
08:18:29 238  ,chf_g27
08:18:29 239  ,chf_g28
08:18:29 240  ,chf_g29
08:18:29 241  ,chf_g30
08:18:29 242  ,chf_g31
08:18:29 243  ,chf_g32
08:18:29 244  ,chf_g33
08:18:29 245  ,chf_g34
08:18:29 246  ,chf_g35
08:18:29 247  ,chf_g36
08:18:29 248  ,chf_g37
08:18:29 249  ,chf_g38
08:18:29 250  ,chf_g39
08:18:29 251  ,chf_g40
08:18:29 252  FROM aud_ms14 m
08:18:29 253  WHERE gatt IN('nup','up')
08:18:29 254  AND 1+m.ydate < '&1'||' '||'&2'
08:18:29 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:40:00'

View created.

Elapsed: 00:00:00.12
08:18:29 SQL> 
08:18:29 SQL> -- rpt
08:18:29 SQL> 
08:18:29 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt;

GAT COUNT(PRDATE)
--- -------------
nup	    13264
up	     6627

Elapsed: 00:00:00.04
08:18:29 SQL> 
08:18:29 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-16 10:35:00

Elapsed: 00:00:00.04
08:18:29 SQL> 
08:18:29 SQL> -- Now build model from bme and score sme
08:18:29 SQL> @score1.sql
08:18:29 SQL> -- score1.sql
08:18:29 SQL> 
08:18:29 SQL> -- Does the 1st SVM score
08:18:29 SQL> 
08:18:29 SQL> -- Fill up svmc_apply_prep
08:18:29 SQL> @score.sql
08:18:29 SQL> --
08:18:29 SQL> -- score.sql
08:18:29 SQL> --
08:18:29 SQL> 
08:18:29 SQL> -- usage: score.sql
08:18:29 SQL> 
08:18:29 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
08:18:29 SQL> 
08:18:29 SQL> DEFINE target	= 'gatt'
08:18:29 SQL> DEFINE model_name = 'forex14'
08:18:29 SQL> DEFINE bldtable	= 'bme'
08:18:29 SQL> DEFINE scoretable = 'sme'
08:18:29 SQL> DEFINE case_id	= 'prdate'
08:18:29 SQL> 
08:18:29 SQL> -- Define a variable to help me exclude some columns from some data mining calls
08:18:29 SQL> DEFINE exclude1 = "'&target','&case_id'"
08:18:29 SQL> 
08:18:29 SQL> -- Builds an SVM model using pl/sql.
08:18:29 SQL> 
08:18:29 SQL> -----------------------------------------------------------------------
08:18:29 SQL> --			    BUILD THE MODEL
08:18:29 SQL> -----------------------------------------------------------------------
08:18:29 SQL> 
08:18:29 SQL> -- Cleanup old build data preparation objects for repeat runs
08:18:29 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
08:18:29 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
08:18:29 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
08:18:29 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
08:18:29 SQL> 
08:18:29 SQL> 
08:18:29 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
08:18:29 SQL> --
08:18:29 SQL> -- DROP	TABLE svmc_settings ;
08:18:29 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
08:18:29 SQL> -- DELETE svmc_settings;
08:18:29 SQL> 
08:18:29 SQL> -- The default classification algorithm is Naive Bayes. So override
08:18:29 SQL> -- this choice to SVM using a settings table.
08:18:29 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
08:18:29 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
08:18:29 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
08:18:29 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
08:18:29 SQL> -- models.
08:18:29 SQL> --
08:18:29 SQL> 
08:18:29 SQL> -- Do this once and then comment it out.
08:18:29 SQL> -- That makes script go faster.
08:18:29 SQL> -- BEGIN
08:18:29 SQL> -- -- Populate settings table
08:18:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:18:29 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
08:18:29 SQL> --
08:18:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:18:29 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
08:18:29 SQL> --
08:18:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:18:29 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
08:18:29 SQL> --   COMMIT;
08:18:29 SQL> -- END;
08:18:29 SQL> -- /
08:18:29 SQL> 
08:18:29 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
08:18:29 SQL> 
08:18:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
08:18:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:18:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
08:18:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
08:18:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:18:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:18:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
08:18:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:18:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:18:30 SQL> 
08:18:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
08:18:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:18:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
08:18:30 SQL> 
08:18:30 SQL> --------------------------------
08:18:30 SQL> -- PREPARE BUILD (TRAINING) DATA
08:18:30 SQL> --
08:18:30 SQL> 
08:18:30 SQL> -- 1. Missing Value treatment for all Predictors and
08:18:30 SQL> -- 2. Outlier Treatment and
08:18:30 SQL> -- 3. Normalization are performed below.
08:18:30 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
08:18:30 SQL> --    normalized here.
08:18:30 SQL> 
08:18:30 SQL> BEGIN
08:18:30   2  	-- Perform missing value treatment for all predictors
08:18:30   3  	-- create miss tables
08:18:30   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
08:18:30   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
08:18:30   6  
08:18:30   7  	-- populate miss tables
08:18:30   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
08:18:30   9  	  miss_table_name => 'svmc_miss_num',
08:18:30  10  	  data_table_name => '&bldtable',
08:18:30  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:18:30  12  
08:18:30  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
08:18:30  14  	  miss_table_name => 'svmc_miss_cat',
08:18:30  15  	  data_table_name => '&bldtable',
08:18:30  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:18:30  17  
08:18:30  18  	-- xform input data to replace missing values
08:18:30  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:18:30  20  	  miss_table_name => 'svmc_miss_num',
08:18:30  21  	  data_table_name => '&bldtable',
08:18:30  22  	  xform_view_name => 'xformed_build_miss_num');
08:18:30  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:18:30  24  	  miss_table_name => 'svmc_miss_cat',
08:18:30  25  	  data_table_name => '&bldtable',
08:18:30  26  	  xform_view_name => 'xformed_build_miss_cat');
08:18:30  27  
08:18:30  28  	-- Perform outlier treatment.
08:18:30  29  	-- create clip table
08:18:30  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
08:18:30  31  
08:18:30  32  	-- populate clip table
08:18:30  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
08:18:30  34  	  clip_table_name => 'svmc_clip',
08:18:30  35  	  data_table_name => '&bldtable',
08:18:30  36  	  tail_frac	  => 0.025,
08:18:30  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:18:30  38  
08:18:30  39  	-- xform input data to winsorized data
08:18:30  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
08:18:30  41  	  clip_table_name => 'svmc_clip',
08:18:30  42  	  data_table_name => '&bldtable',
08:18:30  43  	  xform_view_name => 'svmc_winsor');
08:18:30  44  
08:18:30  45  	-- create normalization table
08:18:30  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
08:18:30  47  
08:18:30  48  	-- populate normalization table based on winsorized data
08:18:30  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
08:18:30  50  	  norm_table_name => 'svmc_norm',
08:18:30  51  	  data_table_name => 'svmc_winsor',
08:18:30  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:18:30  53  
08:18:30  54  	-- normalize the original data
08:18:30  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:18:30  56  	  norm_table_name => 'svmc_norm',
08:18:30  57  	  data_table_name => '&bldtable',
08:18:30  58  	  xform_view_name => 'svmc_build_prep');
08:18:30  59  END;
08:18:30  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.31
08:18:48 SQL> 
08:18:48 SQL> ---------------------
08:18:48 SQL> -- CREATE A NEW MODEL
08:18:48 SQL> --
08:18:48 SQL> -- Cleanup old model with the same name for repeat runs
08:18:48 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
08:18:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:18:48   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:03.01
08:18:51 SQL> 
08:18:51 SQL> -- Build a new SVM Model
08:18:51 SQL> BEGIN
08:18:51   2  	DBMS_DATA_MINING.CREATE_MODEL(
08:18:51   3  	  model_name	      => '&model_name',
08:18:51   4  	  mining_function     => dbms_data_mining.classification,
08:18:51   5  	  data_table_name     => 'svmc_build_prep',
08:18:51   6  	  case_id_column_name => '&case_id',
08:18:51   7  	  target_column_name  => '&target',
08:18:51   8  	  settings_table_name => 'svmc_settings');
08:18:51   9  END;
08:18:51  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.79
08:19:17 SQL> 
08:19:17 SQL> -----------------------------------------------------------------------
08:19:17 SQL> --			       APPLY/score THE MODEL
08:19:17 SQL> -----------------------------------------------------------------------
08:19:17 SQL> 
08:19:17 SQL> -- Cleanup old scoring data preparation objects for repeat runs
08:19:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
08:19:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:19:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
08:19:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
08:19:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:19:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
08:19:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
08:19:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:19:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:19:17 SQL> -----------------------
08:19:17 SQL> -- PREPARE SCORING DATA
08:19:17 SQL> --
08:19:17 SQL> -- If the data for model creation has been prepared, then the data
08:19:17 SQL> -- to be scored using the model must be prepared in the same manner
08:19:17 SQL> -- in order to obtain meaningful results.
08:19:17 SQL> --
08:19:17 SQL> -- 1. Missing Value treatment for all Predictors and
08:19:17 SQL> -- 2. Normalization
08:19:17 SQL> -- No outlier treatment will be performed during test and apply. The
08:19:17 SQL> -- normalization step is sufficient, since the normalization parameters
08:19:17 SQL> -- already capture the effects of outlier treatment done with build data.
08:19:17 SQL> --
08:19:17 SQL> BEGIN
08:19:17   2  	-- Xform Test data to replace missing values
08:19:17   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:19:17   4  	  miss_table_name => 'svmc_miss_num',
08:19:17   5  	  data_table_name => '&scoretable',
08:19:17   6  	  xform_view_name => 'xformed_apply_miss_num');
08:19:17   7  
08:19:17   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:19:17   9  	  miss_table_name => 'svmc_miss_cat',
08:19:17  10  	  data_table_name => '&scoretable',
08:19:17  11  	  xform_view_name => 'xformed_apply_miss_cat');
08:19:17  12  
08:19:17  13  	-- Normalize the data to be scored
08:19:17  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:19:17  15  	  norm_table_name => 'svmc_norm',
08:19:17  16  	  data_table_name => '&scoretable',
08:19:17  17  	  xform_view_name => 'svmc_apply_prep');
08:19:17  18  END;
08:19:17  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.31
08:19:18 SQL> 
08:19:18 SQL> -- Use same model_name used in score.sql
08:19:18 SQL> DEFINE model_name = 'forex14'
08:19:18 SQL> 
08:19:18 SQL> -- CREATE TABLE fxscores8hp (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
08:19:18 SQL> 
08:19:18 SQL> DELETE fxscores8hp WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
08:19:18 SQL> 
08:19:18 SQL> INSERT INTO fxscores8hp (prdate,score,rundate,pair,ydate)
08:19:18   2  SELECT
08:19:18   3  prdate
08:19:18   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
08:19:18   5  ,sysdate
08:19:18   6  ,SUBSTR(prdate,1,3)pair
08:19:18   7  ,SUBSTR(prdate,4,19)ydate
08:19:18   8  FROM svmc_apply_prep
08:19:18   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
08:19:18 SQL> @aud_score1day.sql  2010-12-17 10:35:00
08:19:18 SQL> --
08:19:18 SQL> -- aud_score1day.sql
08:19:18 SQL> --
08:19:18 SQL> 
08:19:18 SQL> CREATE OR REPLACE VIEW sme AS
08:19:18   2  SELECT
08:19:18   3  'aud'||m.ydate prdate
08:19:18   4  ,NULL gatt
08:19:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:19:18   6  ,eur_g00
08:19:18   7  ,eur_g01
08:19:18   8  ,eur_g02
08:19:18   9  ,eur_g03
08:19:18  10  ,eur_g04
08:19:18  11  ,eur_g05
08:19:18  12  ,eur_g06
08:19:18  13  ,eur_g07
08:19:18  14  ,eur_g08
08:19:18  15  ,eur_g09
08:19:18  16  ,eur_g10
08:19:18  17  ,eur_g11
08:19:18  18  ,eur_g12
08:19:18  19  ,eur_g13
08:19:18  20  ,eur_g14
08:19:18  21  ,eur_g15
08:19:18  22  ,eur_g16
08:19:18  23  ,eur_g17
08:19:18  24  ,eur_g18
08:19:18  25  ,eur_g19
08:19:18  26  ,eur_g20
08:19:18  27  ,eur_g21
08:19:18  28  ,eur_g22
08:19:18  29  ,eur_g23
08:19:18  30  ,eur_g24
08:19:18  31  ,eur_g25
08:19:18  32  ,eur_g26
08:19:18  33  ,eur_g27
08:19:18  34  ,eur_g28
08:19:18  35  ,eur_g29
08:19:18  36  ,eur_g30
08:19:18  37  ,eur_g31
08:19:18  38  ,eur_g32
08:19:18  39  ,eur_g33
08:19:18  40  ,eur_g34
08:19:18  41  ,eur_g35
08:19:18  42  ,eur_g36
08:19:18  43  ,eur_g37
08:19:18  44  ,eur_g38
08:19:18  45  ,eur_g39
08:19:18  46  ,eur_g40
08:19:18  47  ,aud_g00
08:19:18  48  ,aud_g01
08:19:18  49  ,aud_g02
08:19:18  50  ,aud_g03
08:19:18  51  ,aud_g04
08:19:18  52  ,aud_g05
08:19:18  53  ,aud_g06
08:19:18  54  ,aud_g07
08:19:18  55  ,aud_g08
08:19:18  56  ,aud_g09
08:19:18  57  ,aud_g10
08:19:18  58  ,aud_g11
08:19:18  59  ,aud_g12
08:19:18  60  ,aud_g13
08:19:18  61  ,aud_g14
08:19:18  62  ,aud_g15
08:19:18  63  ,aud_g16
08:19:18  64  ,aud_g17
08:19:18  65  ,aud_g18
08:19:18  66  ,aud_g19
08:19:18  67  ,aud_g20
08:19:18  68  ,aud_g21
08:19:18  69  ,aud_g22
08:19:18  70  ,aud_g23
08:19:18  71  ,aud_g24
08:19:18  72  ,aud_g25
08:19:18  73  ,aud_g26
08:19:18  74  ,aud_g27
08:19:18  75  ,aud_g28
08:19:18  76  ,aud_g29
08:19:18  77  ,aud_g30
08:19:18  78  ,aud_g31
08:19:18  79  ,aud_g32
08:19:18  80  ,aud_g33
08:19:18  81  ,aud_g34
08:19:18  82  ,aud_g35
08:19:18  83  ,aud_g36
08:19:18  84  ,aud_g37
08:19:18  85  ,aud_g38
08:19:18  86  ,aud_g39
08:19:18  87  ,aud_g40
08:19:18  88  ,gbp_g00
08:19:18  89  ,gbp_g01
08:19:18  90  ,gbp_g02
08:19:18  91  ,gbp_g03
08:19:18  92  ,gbp_g04
08:19:18  93  ,gbp_g05
08:19:18  94  ,gbp_g06
08:19:18  95  ,gbp_g07
08:19:18  96  ,gbp_g08
08:19:18  97  ,gbp_g09
08:19:18  98  ,gbp_g10
08:19:18  99  ,gbp_g11
08:19:18 100  ,gbp_g12
08:19:18 101  ,gbp_g13
08:19:18 102  ,gbp_g14
08:19:18 103  ,gbp_g15
08:19:18 104  ,gbp_g16
08:19:18 105  ,gbp_g17
08:19:18 106  ,gbp_g18
08:19:18 107  ,gbp_g19
08:19:18 108  ,gbp_g20
08:19:18 109  ,gbp_g21
08:19:18 110  ,gbp_g22
08:19:18 111  ,gbp_g23
08:19:18 112  ,gbp_g24
08:19:18 113  ,gbp_g25
08:19:18 114  ,gbp_g26
08:19:18 115  ,gbp_g27
08:19:18 116  ,gbp_g28
08:19:18 117  ,gbp_g29
08:19:18 118  ,gbp_g30
08:19:18 119  ,gbp_g31
08:19:18 120  ,gbp_g32
08:19:18 121  ,gbp_g33
08:19:18 122  ,gbp_g34
08:19:18 123  ,gbp_g35
08:19:18 124  ,gbp_g36
08:19:18 125  ,gbp_g37
08:19:18 126  ,gbp_g38
08:19:18 127  ,gbp_g39
08:19:18 128  ,gbp_g40
08:19:18 129  ,jpy_g00
08:19:18 130  ,jpy_g01
08:19:18 131  ,jpy_g02
08:19:18 132  ,jpy_g03
08:19:18 133  ,jpy_g04
08:19:18 134  ,jpy_g05
08:19:18 135  ,jpy_g06
08:19:18 136  ,jpy_g07
08:19:18 137  ,jpy_g08
08:19:18 138  ,jpy_g09
08:19:18 139  ,jpy_g10
08:19:18 140  ,jpy_g11
08:19:18 141  ,jpy_g12
08:19:18 142  ,jpy_g13
08:19:18 143  ,jpy_g14
08:19:18 144  ,jpy_g15
08:19:18 145  ,jpy_g16
08:19:18 146  ,jpy_g17
08:19:18 147  ,jpy_g18
08:19:18 148  ,jpy_g19
08:19:18 149  ,jpy_g20
08:19:18 150  ,jpy_g21
08:19:18 151  ,jpy_g22
08:19:18 152  ,jpy_g23
08:19:18 153  ,jpy_g24
08:19:18 154  ,jpy_g25
08:19:18 155  ,jpy_g26
08:19:18 156  ,jpy_g27
08:19:18 157  ,jpy_g28
08:19:18 158  ,jpy_g29
08:19:18 159  ,jpy_g30
08:19:18 160  ,jpy_g31
08:19:18 161  ,jpy_g32
08:19:18 162  ,jpy_g33
08:19:18 163  ,jpy_g34
08:19:18 164  ,jpy_g35
08:19:18 165  ,jpy_g36
08:19:18 166  ,jpy_g37
08:19:18 167  ,jpy_g38
08:19:18 168  ,jpy_g39
08:19:18 169  ,jpy_g40
08:19:18 170  ,cad_g00
08:19:18 171  ,cad_g01
08:19:18 172  ,cad_g02
08:19:18 173  ,cad_g03
08:19:18 174  ,cad_g04
08:19:18 175  ,cad_g05
08:19:18 176  ,cad_g06
08:19:18 177  ,cad_g07
08:19:18 178  ,cad_g08
08:19:18 179  ,cad_g09
08:19:18 180  ,cad_g10
08:19:18 181  ,cad_g11
08:19:18 182  ,cad_g12
08:19:18 183  ,cad_g13
08:19:18 184  ,cad_g14
08:19:18 185  ,cad_g15
08:19:18 186  ,cad_g16
08:19:18 187  ,cad_g17
08:19:18 188  ,cad_g18
08:19:18 189  ,cad_g19
08:19:18 190  ,cad_g20
08:19:18 191  ,cad_g21
08:19:18 192  ,cad_g22
08:19:18 193  ,cad_g23
08:19:18 194  ,cad_g24
08:19:18 195  ,cad_g25
08:19:18 196  ,cad_g26
08:19:18 197  ,cad_g27
08:19:18 198  ,cad_g28
08:19:18 199  ,cad_g29
08:19:18 200  ,cad_g30
08:19:18 201  ,cad_g31
08:19:18 202  ,cad_g32
08:19:18 203  ,cad_g33
08:19:18 204  ,cad_g34
08:19:18 205  ,cad_g35
08:19:18 206  ,cad_g36
08:19:18 207  ,cad_g37
08:19:18 208  ,cad_g38
08:19:18 209  ,cad_g39
08:19:18 210  ,cad_g40
08:19:18 211  ,chf_g00
08:19:18 212  ,chf_g01
08:19:18 213  ,chf_g02
08:19:18 214  ,chf_g03
08:19:18 215  ,chf_g04
08:19:18 216  ,chf_g05
08:19:18 217  ,chf_g06
08:19:18 218  ,chf_g07
08:19:18 219  ,chf_g08
08:19:18 220  ,chf_g09
08:19:18 221  ,chf_g10
08:19:18 222  ,chf_g11
08:19:18 223  ,chf_g12
08:19:18 224  ,chf_g13
08:19:18 225  ,chf_g14
08:19:18 226  ,chf_g15
08:19:18 227  ,chf_g16
08:19:18 228  ,chf_g17
08:19:18 229  ,chf_g18
08:19:18 230  ,chf_g19
08:19:18 231  ,chf_g20
08:19:18 232  ,chf_g21
08:19:18 233  ,chf_g22
08:19:18 234  ,chf_g23
08:19:18 235  ,chf_g24
08:19:18 236  ,chf_g25
08:19:18 237  ,chf_g26
08:19:18 238  ,chf_g27
08:19:18 239  ,chf_g28
08:19:18 240  ,chf_g29
08:19:18 241  ,chf_g30
08:19:18 242  ,chf_g31
08:19:18 243  ,chf_g32
08:19:18 244  ,chf_g33
08:19:18 245  ,chf_g34
08:19:18 246  ,chf_g35
08:19:18 247  ,chf_g36
08:19:18 248  ,chf_g37
08:19:18 249  ,chf_g38
08:19:18 250  ,chf_g39
08:19:18 251  ,chf_g40
08:19:18 252  FROM aud_ms14 m
08:19:18 253  WHERE m.ydate = '&1'||' '||'&2'
08:19:18 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:35:00'

View created.

Elapsed: 00:00:01.08
08:19:20 SQL> 
08:19:20 SQL> -- rpt
08:19:20 SQL> -- We should see just 1 row:
08:19:20 SQL> 
08:19:20 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
08:19:20 SQL> 
08:19:20 SQL> -- Build the model:
08:19:20 SQL> CREATE OR REPLACE VIEW bme AS
08:19:20   2  SELECT
08:19:20   3  'aud'||m.ydate prdate
08:19:20   4  ,gatt
08:19:20   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:19:20   6  ,eur_g00
08:19:20   7  ,eur_g01
08:19:20   8  ,eur_g02
08:19:20   9  ,eur_g03
08:19:20  10  ,eur_g04
08:19:20  11  ,eur_g05
08:19:20  12  ,eur_g06
08:19:20  13  ,eur_g07
08:19:20  14  ,eur_g08
08:19:20  15  ,eur_g09
08:19:20  16  ,eur_g10
08:19:20  17  ,eur_g11
08:19:20  18  ,eur_g12
08:19:20  19  ,eur_g13
08:19:20  20  ,eur_g14
08:19:20  21  ,eur_g15
08:19:20  22  ,eur_g16
08:19:20  23  ,eur_g17
08:19:20  24  ,eur_g18
08:19:20  25  ,eur_g19
08:19:20  26  ,eur_g20
08:19:20  27  ,eur_g21
08:19:20  28  ,eur_g22
08:19:20  29  ,eur_g23
08:19:20  30  ,eur_g24
08:19:20  31  ,eur_g25
08:19:20  32  ,eur_g26
08:19:20  33  ,eur_g27
08:19:20  34  ,eur_g28
08:19:20  35  ,eur_g29
08:19:20  36  ,eur_g30
08:19:20  37  ,eur_g31
08:19:20  38  ,eur_g32
08:19:20  39  ,eur_g33
08:19:20  40  ,eur_g34
08:19:20  41  ,eur_g35
08:19:20  42  ,eur_g36
08:19:20  43  ,eur_g37
08:19:20  44  ,eur_g38
08:19:20  45  ,eur_g39
08:19:20  46  ,eur_g40
08:19:20  47  ,aud_g00
08:19:20  48  ,aud_g01
08:19:20  49  ,aud_g02
08:19:20  50  ,aud_g03
08:19:20  51  ,aud_g04
08:19:20  52  ,aud_g05
08:19:20  53  ,aud_g06
08:19:20  54  ,aud_g07
08:19:20  55  ,aud_g08
08:19:20  56  ,aud_g09
08:19:20  57  ,aud_g10
08:19:20  58  ,aud_g11
08:19:20  59  ,aud_g12
08:19:20  60  ,aud_g13
08:19:20  61  ,aud_g14
08:19:20  62  ,aud_g15
08:19:20  63  ,aud_g16
08:19:20  64  ,aud_g17
08:19:20  65  ,aud_g18
08:19:20  66  ,aud_g19
08:19:20  67  ,aud_g20
08:19:20  68  ,aud_g21
08:19:20  69  ,aud_g22
08:19:20  70  ,aud_g23
08:19:20  71  ,aud_g24
08:19:20  72  ,aud_g25
08:19:20  73  ,aud_g26
08:19:20  74  ,aud_g27
08:19:20  75  ,aud_g28
08:19:20  76  ,aud_g29
08:19:20  77  ,aud_g30
08:19:20  78  ,aud_g31
08:19:20  79  ,aud_g32
08:19:20  80  ,aud_g33
08:19:20  81  ,aud_g34
08:19:20  82  ,aud_g35
08:19:20  83  ,aud_g36
08:19:20  84  ,aud_g37
08:19:20  85  ,aud_g38
08:19:20  86  ,aud_g39
08:19:20  87  ,aud_g40
08:19:20  88  ,gbp_g00
08:19:20  89  ,gbp_g01
08:19:20  90  ,gbp_g02
08:19:20  91  ,gbp_g03
08:19:20  92  ,gbp_g04
08:19:20  93  ,gbp_g05
08:19:20  94  ,gbp_g06
08:19:20  95  ,gbp_g07
08:19:20  96  ,gbp_g08
08:19:20  97  ,gbp_g09
08:19:20  98  ,gbp_g10
08:19:20  99  ,gbp_g11
08:19:20 100  ,gbp_g12
08:19:20 101  ,gbp_g13
08:19:20 102  ,gbp_g14
08:19:20 103  ,gbp_g15
08:19:20 104  ,gbp_g16
08:19:20 105  ,gbp_g17
08:19:20 106  ,gbp_g18
08:19:20 107  ,gbp_g19
08:19:20 108  ,gbp_g20
08:19:20 109  ,gbp_g21
08:19:20 110  ,gbp_g22
08:19:20 111  ,gbp_g23
08:19:20 112  ,gbp_g24
08:19:20 113  ,gbp_g25
08:19:20 114  ,gbp_g26
08:19:20 115  ,gbp_g27
08:19:20 116  ,gbp_g28
08:19:20 117  ,gbp_g29
08:19:20 118  ,gbp_g30
08:19:20 119  ,gbp_g31
08:19:20 120  ,gbp_g32
08:19:20 121  ,gbp_g33
08:19:20 122  ,gbp_g34
08:19:20 123  ,gbp_g35
08:19:20 124  ,gbp_g36
08:19:20 125  ,gbp_g37
08:19:20 126  ,gbp_g38
08:19:20 127  ,gbp_g39
08:19:20 128  ,gbp_g40
08:19:20 129  ,jpy_g00
08:19:20 130  ,jpy_g01
08:19:20 131  ,jpy_g02
08:19:20 132  ,jpy_g03
08:19:20 133  ,jpy_g04
08:19:20 134  ,jpy_g05
08:19:20 135  ,jpy_g06
08:19:20 136  ,jpy_g07
08:19:20 137  ,jpy_g08
08:19:20 138  ,jpy_g09
08:19:20 139  ,jpy_g10
08:19:20 140  ,jpy_g11
08:19:20 141  ,jpy_g12
08:19:20 142  ,jpy_g13
08:19:20 143  ,jpy_g14
08:19:20 144  ,jpy_g15
08:19:20 145  ,jpy_g16
08:19:20 146  ,jpy_g17
08:19:20 147  ,jpy_g18
08:19:20 148  ,jpy_g19
08:19:20 149  ,jpy_g20
08:19:20 150  ,jpy_g21
08:19:20 151  ,jpy_g22
08:19:20 152  ,jpy_g23
08:19:20 153  ,jpy_g24
08:19:20 154  ,jpy_g25
08:19:20 155  ,jpy_g26
08:19:20 156  ,jpy_g27
08:19:20 157  ,jpy_g28
08:19:20 158  ,jpy_g29
08:19:20 159  ,jpy_g30
08:19:20 160  ,jpy_g31
08:19:20 161  ,jpy_g32
08:19:20 162  ,jpy_g33
08:19:20 163  ,jpy_g34
08:19:20 164  ,jpy_g35
08:19:20 165  ,jpy_g36
08:19:20 166  ,jpy_g37
08:19:20 167  ,jpy_g38
08:19:20 168  ,jpy_g39
08:19:20 169  ,jpy_g40
08:19:20 170  ,cad_g00
08:19:20 171  ,cad_g01
08:19:20 172  ,cad_g02
08:19:20 173  ,cad_g03
08:19:20 174  ,cad_g04
08:19:20 175  ,cad_g05
08:19:20 176  ,cad_g06
08:19:20 177  ,cad_g07
08:19:20 178  ,cad_g08
08:19:20 179  ,cad_g09
08:19:20 180  ,cad_g10
08:19:20 181  ,cad_g11
08:19:20 182  ,cad_g12
08:19:20 183  ,cad_g13
08:19:20 184  ,cad_g14
08:19:20 185  ,cad_g15
08:19:20 186  ,cad_g16
08:19:20 187  ,cad_g17
08:19:20 188  ,cad_g18
08:19:20 189  ,cad_g19
08:19:20 190  ,cad_g20
08:19:20 191  ,cad_g21
08:19:20 192  ,cad_g22
08:19:20 193  ,cad_g23
08:19:20 194  ,cad_g24
08:19:20 195  ,cad_g25
08:19:20 196  ,cad_g26
08:19:20 197  ,cad_g27
08:19:20 198  ,cad_g28
08:19:20 199  ,cad_g29
08:19:20 200  ,cad_g30
08:19:20 201  ,cad_g31
08:19:20 202  ,cad_g32
08:19:20 203  ,cad_g33
08:19:20 204  ,cad_g34
08:19:20 205  ,cad_g35
08:19:20 206  ,cad_g36
08:19:20 207  ,cad_g37
08:19:20 208  ,cad_g38
08:19:20 209  ,cad_g39
08:19:20 210  ,cad_g40
08:19:20 211  ,chf_g00
08:19:20 212  ,chf_g01
08:19:20 213  ,chf_g02
08:19:20 214  ,chf_g03
08:19:20 215  ,chf_g04
08:19:20 216  ,chf_g05
08:19:20 217  ,chf_g06
08:19:20 218  ,chf_g07
08:19:20 219  ,chf_g08
08:19:20 220  ,chf_g09
08:19:20 221  ,chf_g10
08:19:20 222  ,chf_g11
08:19:20 223  ,chf_g12
08:19:20 224  ,chf_g13
08:19:20 225  ,chf_g14
08:19:20 226  ,chf_g15
08:19:20 227  ,chf_g16
08:19:20 228  ,chf_g17
08:19:20 229  ,chf_g18
08:19:20 230  ,chf_g19
08:19:20 231  ,chf_g20
08:19:20 232  ,chf_g21
08:19:20 233  ,chf_g22
08:19:20 234  ,chf_g23
08:19:20 235  ,chf_g24
08:19:20 236  ,chf_g25
08:19:20 237  ,chf_g26
08:19:20 238  ,chf_g27
08:19:20 239  ,chf_g28
08:19:20 240  ,chf_g29
08:19:20 241  ,chf_g30
08:19:20 242  ,chf_g31
08:19:20 243  ,chf_g32
08:19:20 244  ,chf_g33
08:19:20 245  ,chf_g34
08:19:20 246  ,chf_g35
08:19:20 247  ,chf_g36
08:19:20 248  ,chf_g37
08:19:20 249  ,chf_g38
08:19:20 250  ,chf_g39
08:19:20 251  ,chf_g40
08:19:20 252  FROM aud_ms14 m
08:19:20 253  WHERE gatt IN('nup','up')
08:19:20 254  AND 1+m.ydate < '&1'||' '||'&2'
08:19:20 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:35:00'

View created.

Elapsed: 00:00:00.48
08:19:20 SQL> 
08:19:20 SQL> -- rpt
08:19:20 SQL> 
08:19:20 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt;

GAT COUNT(PRDATE)
--- -------------
nup	    13263
up	     6627

Elapsed: 00:00:00.05
08:19:20 SQL> 
08:19:20 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-16 10:30:00

Elapsed: 00:00:00.03
08:19:20 SQL> 
08:19:20 SQL> -- Now build model from bme and score sme
08:19:20 SQL> @score1.sql
08:19:20 SQL> -- score1.sql
08:19:20 SQL> 
08:19:20 SQL> -- Does the 1st SVM score
08:19:20 SQL> 
08:19:20 SQL> -- Fill up svmc_apply_prep
08:19:20 SQL> @score.sql
08:19:20 SQL> --
08:19:20 SQL> -- score.sql
08:19:20 SQL> --
08:19:20 SQL> 
08:19:20 SQL> -- usage: score.sql
08:19:20 SQL> 
08:19:20 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
08:19:20 SQL> 
08:19:20 SQL> DEFINE target	= 'gatt'
08:19:20 SQL> DEFINE model_name = 'forex14'
08:19:20 SQL> DEFINE bldtable	= 'bme'
08:19:20 SQL> DEFINE scoretable = 'sme'
08:19:20 SQL> DEFINE case_id	= 'prdate'
08:19:20 SQL> 
08:19:20 SQL> -- Define a variable to help me exclude some columns from some data mining calls
08:19:20 SQL> DEFINE exclude1 = "'&target','&case_id'"
08:19:20 SQL> 
08:19:20 SQL> -- Builds an SVM model using pl/sql.
08:19:20 SQL> 
08:19:20 SQL> -----------------------------------------------------------------------
08:19:20 SQL> --			    BUILD THE MODEL
08:19:20 SQL> -----------------------------------------------------------------------
08:19:20 SQL> 
08:19:20 SQL> -- Cleanup old build data preparation objects for repeat runs
08:19:20 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
08:19:20 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
08:19:20 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
08:19:20 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
08:19:20 SQL> 
08:19:20 SQL> 
08:19:20 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
08:19:20 SQL> --
08:19:20 SQL> -- DROP	TABLE svmc_settings ;
08:19:20 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
08:19:20 SQL> -- DELETE svmc_settings;
08:19:20 SQL> 
08:19:20 SQL> -- The default classification algorithm is Naive Bayes. So override
08:19:20 SQL> -- this choice to SVM using a settings table.
08:19:20 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
08:19:20 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
08:19:20 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
08:19:20 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
08:19:20 SQL> -- models.
08:19:20 SQL> --
08:19:20 SQL> 
08:19:20 SQL> -- Do this once and then comment it out.
08:19:20 SQL> -- That makes script go faster.
08:19:20 SQL> -- BEGIN
08:19:20 SQL> -- -- Populate settings table
08:19:20 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:19:20 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
08:19:20 SQL> --
08:19:20 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:19:20 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
08:19:20 SQL> --
08:19:20 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:19:20 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
08:19:20 SQL> --   COMMIT;
08:19:20 SQL> -- END;
08:19:20 SQL> -- /
08:19:20 SQL> 
08:19:20 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
08:19:20 SQL> 
08:19:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
08:19:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:19:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.30
08:19:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
08:19:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:19:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.58
08:19:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
08:19:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:19:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.30
08:19:21 SQL> 
08:19:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
08:19:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:19:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.24
08:19:22 SQL> 
08:19:22 SQL> --------------------------------
08:19:22 SQL> -- PREPARE BUILD (TRAINING) DATA
08:19:22 SQL> --
08:19:22 SQL> 
08:19:22 SQL> -- 1. Missing Value treatment for all Predictors and
08:19:22 SQL> -- 2. Outlier Treatment and
08:19:22 SQL> -- 3. Normalization are performed below.
08:19:22 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
08:19:22 SQL> --    normalized here.
08:19:22 SQL> 
08:19:22 SQL> BEGIN
08:19:22   2  	-- Perform missing value treatment for all predictors
08:19:22   3  	-- create miss tables
08:19:22   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
08:19:22   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
08:19:22   6  
08:19:22   7  	-- populate miss tables
08:19:22   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
08:19:22   9  	  miss_table_name => 'svmc_miss_num',
08:19:22  10  	  data_table_name => '&bldtable',
08:19:22  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:19:22  12  
08:19:22  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
08:19:22  14  	  miss_table_name => 'svmc_miss_cat',
08:19:22  15  	  data_table_name => '&bldtable',
08:19:22  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:19:22  17  
08:19:22  18  	-- xform input data to replace missing values
08:19:22  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:19:22  20  	  miss_table_name => 'svmc_miss_num',
08:19:22  21  	  data_table_name => '&bldtable',
08:19:22  22  	  xform_view_name => 'xformed_build_miss_num');
08:19:22  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:19:22  24  	  miss_table_name => 'svmc_miss_cat',
08:19:22  25  	  data_table_name => '&bldtable',
08:19:22  26  	  xform_view_name => 'xformed_build_miss_cat');
08:19:22  27  
08:19:22  28  	-- Perform outlier treatment.
08:19:22  29  	-- create clip table
08:19:22  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
08:19:22  31  
08:19:22  32  	-- populate clip table
08:19:22  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
08:19:22  34  	  clip_table_name => 'svmc_clip',
08:19:22  35  	  data_table_name => '&bldtable',
08:19:22  36  	  tail_frac	  => 0.025,
08:19:22  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:19:22  38  
08:19:22  39  	-- xform input data to winsorized data
08:19:22  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
08:19:22  41  	  clip_table_name => 'svmc_clip',
08:19:22  42  	  data_table_name => '&bldtable',
08:19:22  43  	  xform_view_name => 'svmc_winsor');
08:19:22  44  
08:19:22  45  	-- create normalization table
08:19:22  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
08:19:22  47  
08:19:22  48  	-- populate normalization table based on winsorized data
08:19:22  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
08:19:22  50  	  norm_table_name => 'svmc_norm',
08:19:22  51  	  data_table_name => 'svmc_winsor',
08:19:22  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:19:22  53  
08:19:22  54  	-- normalize the original data
08:19:22  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:19:22  56  	  norm_table_name => 'svmc_norm',
08:19:22  57  	  data_table_name => '&bldtable',
08:19:22  58  	  xform_view_name => 'svmc_build_prep');
08:19:22  59  END;
08:19:22  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.70
08:19:40 SQL> 
08:19:40 SQL> ---------------------
08:19:40 SQL> -- CREATE A NEW MODEL
08:19:40 SQL> --
08:19:40 SQL> -- Cleanup old model with the same name for repeat runs
08:19:40 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
08:19:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:19:40   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.82
08:19:41 SQL> 
08:19:41 SQL> -- Build a new SVM Model
08:19:41 SQL> BEGIN
08:19:41   2  	DBMS_DATA_MINING.CREATE_MODEL(
08:19:41   3  	  model_name	      => '&model_name',
08:19:41   4  	  mining_function     => dbms_data_mining.classification,
08:19:41   5  	  data_table_name     => 'svmc_build_prep',
08:19:41   6  	  case_id_column_name => '&case_id',
08:19:41   7  	  target_column_name  => '&target',
08:19:41   8  	  settings_table_name => 'svmc_settings');
08:19:41   9  END;
08:19:41  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.81
08:20:08 SQL> 
08:20:08 SQL> -----------------------------------------------------------------------
08:20:08 SQL> --			       APPLY/score THE MODEL
08:20:08 SQL> -----------------------------------------------------------------------
08:20:08 SQL> 
08:20:08 SQL> -- Cleanup old scoring data preparation objects for repeat runs
08:20:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
08:20:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:20:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
08:20:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
08:20:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:20:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:20:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
08:20:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:20:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
08:20:08 SQL> -----------------------
08:20:08 SQL> -- PREPARE SCORING DATA
08:20:08 SQL> --
08:20:08 SQL> -- If the data for model creation has been prepared, then the data
08:20:08 SQL> -- to be scored using the model must be prepared in the same manner
08:20:08 SQL> -- in order to obtain meaningful results.
08:20:08 SQL> --
08:20:08 SQL> -- 1. Missing Value treatment for all Predictors and
08:20:08 SQL> -- 2. Normalization
08:20:08 SQL> -- No outlier treatment will be performed during test and apply. The
08:20:08 SQL> -- normalization step is sufficient, since the normalization parameters
08:20:08 SQL> -- already capture the effects of outlier treatment done with build data.
08:20:08 SQL> --
08:20:08 SQL> BEGIN
08:20:08   2  	-- Xform Test data to replace missing values
08:20:08   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:20:08   4  	  miss_table_name => 'svmc_miss_num',
08:20:08   5  	  data_table_name => '&scoretable',
08:20:08   6  	  xform_view_name => 'xformed_apply_miss_num');
08:20:08   7  
08:20:08   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:20:08   9  	  miss_table_name => 'svmc_miss_cat',
08:20:08  10  	  data_table_name => '&scoretable',
08:20:08  11  	  xform_view_name => 'xformed_apply_miss_cat');
08:20:08  12  
08:20:08  13  	-- Normalize the data to be scored
08:20:08  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:20:08  15  	  norm_table_name => 'svmc_norm',
08:20:08  16  	  data_table_name => '&scoretable',
08:20:08  17  	  xform_view_name => 'svmc_apply_prep');
08:20:08  18  END;
08:20:08  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.27
08:20:09 SQL> 
08:20:09 SQL> -- Use same model_name used in score.sql
08:20:09 SQL> DEFINE model_name = 'forex14'
08:20:09 SQL> 
08:20:09 SQL> -- CREATE TABLE fxscores8hp (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
08:20:09 SQL> 
08:20:09 SQL> DELETE fxscores8hp WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
08:20:09 SQL> 
08:20:09 SQL> INSERT INTO fxscores8hp (prdate,score,rundate,pair,ydate)
08:20:09   2  SELECT
08:20:09   3  prdate
08:20:09   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
08:20:09   5  ,sysdate
08:20:09   6  ,SUBSTR(prdate,1,3)pair
08:20:09   7  ,SUBSTR(prdate,4,19)ydate
08:20:09   8  FROM svmc_apply_prep
08:20:09   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
08:20:10 SQL> @aud_score1day.sql  2010-12-17 10:30:00
08:20:10 SQL> --
08:20:10 SQL> -- aud_score1day.sql
08:20:10 SQL> --
08:20:10 SQL> 
08:20:10 SQL> CREATE OR REPLACE VIEW sme AS
08:20:10   2  SELECT
08:20:10   3  'aud'||m.ydate prdate
08:20:10   4  ,NULL gatt
08:20:10   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:20:10   6  ,eur_g00
08:20:10   7  ,eur_g01
08:20:10   8  ,eur_g02
08:20:10   9  ,eur_g03
08:20:10  10  ,eur_g04
08:20:10  11  ,eur_g05
08:20:10  12  ,eur_g06
08:20:10  13  ,eur_g07
08:20:10  14  ,eur_g08
08:20:10  15  ,eur_g09
08:20:10  16  ,eur_g10
08:20:10  17  ,eur_g11
08:20:10  18  ,eur_g12
08:20:10  19  ,eur_g13
08:20:10  20  ,eur_g14
08:20:10  21  ,eur_g15
08:20:10  22  ,eur_g16
08:20:10  23  ,eur_g17
08:20:10  24  ,eur_g18
08:20:10  25  ,eur_g19
08:20:10  26  ,eur_g20
08:20:10  27  ,eur_g21
08:20:10  28  ,eur_g22
08:20:10  29  ,eur_g23
08:20:10  30  ,eur_g24
08:20:10  31  ,eur_g25
08:20:10  32  ,eur_g26
08:20:10  33  ,eur_g27
08:20:10  34  ,eur_g28
08:20:10  35  ,eur_g29
08:20:10  36  ,eur_g30
08:20:10  37  ,eur_g31
08:20:10  38  ,eur_g32
08:20:10  39  ,eur_g33
08:20:10  40  ,eur_g34
08:20:10  41  ,eur_g35
08:20:10  42  ,eur_g36
08:20:10  43  ,eur_g37
08:20:10  44  ,eur_g38
08:20:10  45  ,eur_g39
08:20:10  46  ,eur_g40
08:20:10  47  ,aud_g00
08:20:10  48  ,aud_g01
08:20:10  49  ,aud_g02
08:20:10  50  ,aud_g03
08:20:10  51  ,aud_g04
08:20:10  52  ,aud_g05
08:20:10  53  ,aud_g06
08:20:10  54  ,aud_g07
08:20:10  55  ,aud_g08
08:20:10  56  ,aud_g09
08:20:10  57  ,aud_g10
08:20:10  58  ,aud_g11
08:20:10  59  ,aud_g12
08:20:10  60  ,aud_g13
08:20:10  61  ,aud_g14
08:20:10  62  ,aud_g15
08:20:10  63  ,aud_g16
08:20:10  64  ,aud_g17
08:20:10  65  ,aud_g18
08:20:10  66  ,aud_g19
08:20:10  67  ,aud_g20
08:20:10  68  ,aud_g21
08:20:10  69  ,aud_g22
08:20:10  70  ,aud_g23
08:20:10  71  ,aud_g24
08:20:10  72  ,aud_g25
08:20:10  73  ,aud_g26
08:20:10  74  ,aud_g27
08:20:10  75  ,aud_g28
08:20:10  76  ,aud_g29
08:20:10  77  ,aud_g30
08:20:10  78  ,aud_g31
08:20:10  79  ,aud_g32
08:20:10  80  ,aud_g33
08:20:10  81  ,aud_g34
08:20:10  82  ,aud_g35
08:20:10  83  ,aud_g36
08:20:10  84  ,aud_g37
08:20:10  85  ,aud_g38
08:20:10  86  ,aud_g39
08:20:10  87  ,aud_g40
08:20:10  88  ,gbp_g00
08:20:10  89  ,gbp_g01
08:20:10  90  ,gbp_g02
08:20:10  91  ,gbp_g03
08:20:10  92  ,gbp_g04
08:20:10  93  ,gbp_g05
08:20:10  94  ,gbp_g06
08:20:10  95  ,gbp_g07
08:20:10  96  ,gbp_g08
08:20:10  97  ,gbp_g09
08:20:10  98  ,gbp_g10
08:20:10  99  ,gbp_g11
08:20:10 100  ,gbp_g12
08:20:10 101  ,gbp_g13
08:20:10 102  ,gbp_g14
08:20:10 103  ,gbp_g15
08:20:10 104  ,gbp_g16
08:20:10 105  ,gbp_g17
08:20:10 106  ,gbp_g18
08:20:10 107  ,gbp_g19
08:20:10 108  ,gbp_g20
08:20:10 109  ,gbp_g21
08:20:10 110  ,gbp_g22
08:20:10 111  ,gbp_g23
08:20:10 112  ,gbp_g24
08:20:10 113  ,gbp_g25
08:20:10 114  ,gbp_g26
08:20:10 115  ,gbp_g27
08:20:10 116  ,gbp_g28
08:20:10 117  ,gbp_g29
08:20:10 118  ,gbp_g30
08:20:10 119  ,gbp_g31
08:20:10 120  ,gbp_g32
08:20:10 121  ,gbp_g33
08:20:10 122  ,gbp_g34
08:20:10 123  ,gbp_g35
08:20:10 124  ,gbp_g36
08:20:10 125  ,gbp_g37
08:20:10 126  ,gbp_g38
08:20:10 127  ,gbp_g39
08:20:10 128  ,gbp_g40
08:20:10 129  ,jpy_g00
08:20:10 130  ,jpy_g01
08:20:10 131  ,jpy_g02
08:20:10 132  ,jpy_g03
08:20:10 133  ,jpy_g04
08:20:10 134  ,jpy_g05
08:20:10 135  ,jpy_g06
08:20:10 136  ,jpy_g07
08:20:10 137  ,jpy_g08
08:20:10 138  ,jpy_g09
08:20:10 139  ,jpy_g10
08:20:10 140  ,jpy_g11
08:20:10 141  ,jpy_g12
08:20:10 142  ,jpy_g13
08:20:10 143  ,jpy_g14
08:20:10 144  ,jpy_g15
08:20:10 145  ,jpy_g16
08:20:10 146  ,jpy_g17
08:20:10 147  ,jpy_g18
08:20:10 148  ,jpy_g19
08:20:10 149  ,jpy_g20
08:20:10 150  ,jpy_g21
08:20:10 151  ,jpy_g22
08:20:10 152  ,jpy_g23
08:20:10 153  ,jpy_g24
08:20:10 154  ,jpy_g25
08:20:10 155  ,jpy_g26
08:20:10 156  ,jpy_g27
08:20:10 157  ,jpy_g28
08:20:10 158  ,jpy_g29
08:20:10 159  ,jpy_g30
08:20:10 160  ,jpy_g31
08:20:10 161  ,jpy_g32
08:20:10 162  ,jpy_g33
08:20:10 163  ,jpy_g34
08:20:10 164  ,jpy_g35
08:20:10 165  ,jpy_g36
08:20:10 166  ,jpy_g37
08:20:10 167  ,jpy_g38
08:20:10 168  ,jpy_g39
08:20:10 169  ,jpy_g40
08:20:10 170  ,cad_g00
08:20:10 171  ,cad_g01
08:20:10 172  ,cad_g02
08:20:10 173  ,cad_g03
08:20:10 174  ,cad_g04
08:20:10 175  ,cad_g05
08:20:10 176  ,cad_g06
08:20:10 177  ,cad_g07
08:20:10 178  ,cad_g08
08:20:10 179  ,cad_g09
08:20:10 180  ,cad_g10
08:20:10 181  ,cad_g11
08:20:10 182  ,cad_g12
08:20:10 183  ,cad_g13
08:20:10 184  ,cad_g14
08:20:10 185  ,cad_g15
08:20:10 186  ,cad_g16
08:20:10 187  ,cad_g17
08:20:10 188  ,cad_g18
08:20:10 189  ,cad_g19
08:20:10 190  ,cad_g20
08:20:10 191  ,cad_g21
08:20:10 192  ,cad_g22
08:20:10 193  ,cad_g23
08:20:10 194  ,cad_g24
08:20:10 195  ,cad_g25
08:20:10 196  ,cad_g26
08:20:10 197  ,cad_g27
08:20:10 198  ,cad_g28
08:20:10 199  ,cad_g29
08:20:10 200  ,cad_g30
08:20:10 201  ,cad_g31
08:20:10 202  ,cad_g32
08:20:10 203  ,cad_g33
08:20:10 204  ,cad_g34
08:20:10 205  ,cad_g35
08:20:10 206  ,cad_g36
08:20:10 207  ,cad_g37
08:20:10 208  ,cad_g38
08:20:10 209  ,cad_g39
08:20:10 210  ,cad_g40
08:20:10 211  ,chf_g00
08:20:10 212  ,chf_g01
08:20:10 213  ,chf_g02
08:20:10 214  ,chf_g03
08:20:10 215  ,chf_g04
08:20:10 216  ,chf_g05
08:20:10 217  ,chf_g06
08:20:10 218  ,chf_g07
08:20:10 219  ,chf_g08
08:20:10 220  ,chf_g09
08:20:10 221  ,chf_g10
08:20:10 222  ,chf_g11
08:20:10 223  ,chf_g12
08:20:10 224  ,chf_g13
08:20:10 225  ,chf_g14
08:20:10 226  ,chf_g15
08:20:10 227  ,chf_g16
08:20:10 228  ,chf_g17
08:20:10 229  ,chf_g18
08:20:10 230  ,chf_g19
08:20:10 231  ,chf_g20
08:20:10 232  ,chf_g21
08:20:10 233  ,chf_g22
08:20:10 234  ,chf_g23
08:20:10 235  ,chf_g24
08:20:10 236  ,chf_g25
08:20:10 237  ,chf_g26
08:20:10 238  ,chf_g27
08:20:10 239  ,chf_g28
08:20:10 240  ,chf_g29
08:20:10 241  ,chf_g30
08:20:10 242  ,chf_g31
08:20:10 243  ,chf_g32
08:20:10 244  ,chf_g33
08:20:10 245  ,chf_g34
08:20:10 246  ,chf_g35
08:20:10 247  ,chf_g36
08:20:10 248  ,chf_g37
08:20:10 249  ,chf_g38
08:20:10 250  ,chf_g39
08:20:10 251  ,chf_g40
08:20:10 252  FROM aud_ms14 m
08:20:10 253  WHERE m.ydate = '&1'||' '||'&2'
08:20:10 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:30:00'

View created.

Elapsed: 00:00:00.15
08:20:10 SQL> 
08:20:10 SQL> -- rpt
08:20:10 SQL> -- We should see just 1 row:
08:20:10 SQL> 
08:20:10 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
08:20:10 SQL> 
08:20:10 SQL> -- Build the model:
08:20:10 SQL> CREATE OR REPLACE VIEW bme AS
08:20:10   2  SELECT
08:20:10   3  'aud'||m.ydate prdate
08:20:10   4  ,gatt
08:20:10   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:20:10   6  ,eur_g00
08:20:10   7  ,eur_g01
08:20:10   8  ,eur_g02
08:20:10   9  ,eur_g03
08:20:10  10  ,eur_g04
08:20:10  11  ,eur_g05
08:20:10  12  ,eur_g06
08:20:10  13  ,eur_g07
08:20:10  14  ,eur_g08
08:20:10  15  ,eur_g09
08:20:10  16  ,eur_g10
08:20:10  17  ,eur_g11
08:20:10  18  ,eur_g12
08:20:10  19  ,eur_g13
08:20:10  20  ,eur_g14
08:20:10  21  ,eur_g15
08:20:10  22  ,eur_g16
08:20:10  23  ,eur_g17
08:20:10  24  ,eur_g18
08:20:10  25  ,eur_g19
08:20:10  26  ,eur_g20
08:20:10  27  ,eur_g21
08:20:10  28  ,eur_g22
08:20:10  29  ,eur_g23
08:20:10  30  ,eur_g24
08:20:10  31  ,eur_g25
08:20:10  32  ,eur_g26
08:20:10  33  ,eur_g27
08:20:10  34  ,eur_g28
08:20:10  35  ,eur_g29
08:20:10  36  ,eur_g30
08:20:10  37  ,eur_g31
08:20:10  38  ,eur_g32
08:20:10  39  ,eur_g33
08:20:10  40  ,eur_g34
08:20:10  41  ,eur_g35
08:20:10  42  ,eur_g36
08:20:10  43  ,eur_g37
08:20:10  44  ,eur_g38
08:20:10  45  ,eur_g39
08:20:10  46  ,eur_g40
08:20:10  47  ,aud_g00
08:20:10  48  ,aud_g01
08:20:10  49  ,aud_g02
08:20:10  50  ,aud_g03
08:20:10  51  ,aud_g04
08:20:10  52  ,aud_g05
08:20:10  53  ,aud_g06
08:20:10  54  ,aud_g07
08:20:10  55  ,aud_g08
08:20:10  56  ,aud_g09
08:20:10  57  ,aud_g10
08:20:10  58  ,aud_g11
08:20:10  59  ,aud_g12
08:20:10  60  ,aud_g13
08:20:10  61  ,aud_g14
08:20:10  62  ,aud_g15
08:20:10  63  ,aud_g16
08:20:10  64  ,aud_g17
08:20:10  65  ,aud_g18
08:20:10  66  ,aud_g19
08:20:10  67  ,aud_g20
08:20:10  68  ,aud_g21
08:20:10  69  ,aud_g22
08:20:10  70  ,aud_g23
08:20:10  71  ,aud_g24
08:20:10  72  ,aud_g25
08:20:10  73  ,aud_g26
08:20:10  74  ,aud_g27
08:20:10  75  ,aud_g28
08:20:10  76  ,aud_g29
08:20:10  77  ,aud_g30
08:20:10  78  ,aud_g31
08:20:10  79  ,aud_g32
08:20:10  80  ,aud_g33
08:20:10  81  ,aud_g34
08:20:10  82  ,aud_g35
08:20:10  83  ,aud_g36
08:20:10  84  ,aud_g37
08:20:10  85  ,aud_g38
08:20:10  86  ,aud_g39
08:20:10  87  ,aud_g40
08:20:10  88  ,gbp_g00
08:20:10  89  ,gbp_g01
08:20:10  90  ,gbp_g02
08:20:10  91  ,gbp_g03
08:20:10  92  ,gbp_g04
08:20:10  93  ,gbp_g05
08:20:10  94  ,gbp_g06
08:20:10  95  ,gbp_g07
08:20:10  96  ,gbp_g08
08:20:10  97  ,gbp_g09
08:20:10  98  ,gbp_g10
08:20:10  99  ,gbp_g11
08:20:10 100  ,gbp_g12
08:20:10 101  ,gbp_g13
08:20:10 102  ,gbp_g14
08:20:10 103  ,gbp_g15
08:20:10 104  ,gbp_g16
08:20:10 105  ,gbp_g17
08:20:10 106  ,gbp_g18
08:20:10 107  ,gbp_g19
08:20:10 108  ,gbp_g20
08:20:10 109  ,gbp_g21
08:20:10 110  ,gbp_g22
08:20:10 111  ,gbp_g23
08:20:10 112  ,gbp_g24
08:20:10 113  ,gbp_g25
08:20:10 114  ,gbp_g26
08:20:10 115  ,gbp_g27
08:20:10 116  ,gbp_g28
08:20:10 117  ,gbp_g29
08:20:10 118  ,gbp_g30
08:20:10 119  ,gbp_g31
08:20:10 120  ,gbp_g32
08:20:10 121  ,gbp_g33
08:20:10 122  ,gbp_g34
08:20:10 123  ,gbp_g35
08:20:10 124  ,gbp_g36
08:20:10 125  ,gbp_g37
08:20:10 126  ,gbp_g38
08:20:10 127  ,gbp_g39
08:20:10 128  ,gbp_g40
08:20:10 129  ,jpy_g00
08:20:10 130  ,jpy_g01
08:20:10 131  ,jpy_g02
08:20:10 132  ,jpy_g03
08:20:10 133  ,jpy_g04
08:20:10 134  ,jpy_g05
08:20:10 135  ,jpy_g06
08:20:10 136  ,jpy_g07
08:20:10 137  ,jpy_g08
08:20:10 138  ,jpy_g09
08:20:10 139  ,jpy_g10
08:20:10 140  ,jpy_g11
08:20:10 141  ,jpy_g12
08:20:10 142  ,jpy_g13
08:20:10 143  ,jpy_g14
08:20:10 144  ,jpy_g15
08:20:10 145  ,jpy_g16
08:20:10 146  ,jpy_g17
08:20:10 147  ,jpy_g18
08:20:10 148  ,jpy_g19
08:20:10 149  ,jpy_g20
08:20:10 150  ,jpy_g21
08:20:10 151  ,jpy_g22
08:20:10 152  ,jpy_g23
08:20:10 153  ,jpy_g24
08:20:10 154  ,jpy_g25
08:20:10 155  ,jpy_g26
08:20:10 156  ,jpy_g27
08:20:10 157  ,jpy_g28
08:20:10 158  ,jpy_g29
08:20:10 159  ,jpy_g30
08:20:10 160  ,jpy_g31
08:20:10 161  ,jpy_g32
08:20:10 162  ,jpy_g33
08:20:10 163  ,jpy_g34
08:20:10 164  ,jpy_g35
08:20:10 165  ,jpy_g36
08:20:10 166  ,jpy_g37
08:20:10 167  ,jpy_g38
08:20:10 168  ,jpy_g39
08:20:10 169  ,jpy_g40
08:20:10 170  ,cad_g00
08:20:10 171  ,cad_g01
08:20:10 172  ,cad_g02
08:20:10 173  ,cad_g03
08:20:10 174  ,cad_g04
08:20:10 175  ,cad_g05
08:20:10 176  ,cad_g06
08:20:10 177  ,cad_g07
08:20:10 178  ,cad_g08
08:20:10 179  ,cad_g09
08:20:10 180  ,cad_g10
08:20:10 181  ,cad_g11
08:20:10 182  ,cad_g12
08:20:10 183  ,cad_g13
08:20:10 184  ,cad_g14
08:20:10 185  ,cad_g15
08:20:10 186  ,cad_g16
08:20:10 187  ,cad_g17
08:20:10 188  ,cad_g18
08:20:10 189  ,cad_g19
08:20:10 190  ,cad_g20
08:20:10 191  ,cad_g21
08:20:10 192  ,cad_g22
08:20:10 193  ,cad_g23
08:20:10 194  ,cad_g24
08:20:10 195  ,cad_g25
08:20:10 196  ,cad_g26
08:20:10 197  ,cad_g27
08:20:10 198  ,cad_g28
08:20:10 199  ,cad_g29
08:20:10 200  ,cad_g30
08:20:10 201  ,cad_g31
08:20:10 202  ,cad_g32
08:20:10 203  ,cad_g33
08:20:10 204  ,cad_g34
08:20:10 205  ,cad_g35
08:20:10 206  ,cad_g36
08:20:10 207  ,cad_g37
08:20:10 208  ,cad_g38
08:20:10 209  ,cad_g39
08:20:10 210  ,cad_g40
08:20:10 211  ,chf_g00
08:20:10 212  ,chf_g01
08:20:10 213  ,chf_g02
08:20:10 214  ,chf_g03
08:20:10 215  ,chf_g04
08:20:10 216  ,chf_g05
08:20:10 217  ,chf_g06
08:20:10 218  ,chf_g07
08:20:10 219  ,chf_g08
08:20:10 220  ,chf_g09
08:20:10 221  ,chf_g10
08:20:10 222  ,chf_g11
08:20:10 223  ,chf_g12
08:20:10 224  ,chf_g13
08:20:10 225  ,chf_g14
08:20:10 226  ,chf_g15
08:20:10 227  ,chf_g16
08:20:10 228  ,chf_g17
08:20:10 229  ,chf_g18
08:20:10 230  ,chf_g19
08:20:10 231  ,chf_g20
08:20:10 232  ,chf_g21
08:20:10 233  ,chf_g22
08:20:10 234  ,chf_g23
08:20:10 235  ,chf_g24
08:20:10 236  ,chf_g25
08:20:10 237  ,chf_g26
08:20:10 238  ,chf_g27
08:20:10 239  ,chf_g28
08:20:10 240  ,chf_g29
08:20:10 241  ,chf_g30
08:20:10 242  ,chf_g31
08:20:10 243  ,chf_g32
08:20:10 244  ,chf_g33
08:20:10 245  ,chf_g34
08:20:10 246  ,chf_g35
08:20:10 247  ,chf_g36
08:20:10 248  ,chf_g37
08:20:10 249  ,chf_g38
08:20:10 250  ,chf_g39
08:20:10 251  ,chf_g40
08:20:10 252  FROM aud_ms14 m
08:20:10 253  WHERE gatt IN('nup','up')
08:20:10 254  AND 1+m.ydate < '&1'||' '||'&2'
08:20:10 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:30:00'

View created.

Elapsed: 00:00:00.12
08:20:10 SQL> 
08:20:10 SQL> -- rpt
08:20:10 SQL> 
08:20:10 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt;

GAT COUNT(PRDATE)
--- -------------
nup	    13262
up	     6627

Elapsed: 00:00:00.05
08:20:10 SQL> 
08:20:10 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-16 10:25:00

Elapsed: 00:00:00.03
08:20:10 SQL> 
08:20:10 SQL> -- Now build model from bme and score sme
08:20:10 SQL> @score1.sql
08:20:10 SQL> -- score1.sql
08:20:10 SQL> 
08:20:10 SQL> -- Does the 1st SVM score
08:20:10 SQL> 
08:20:10 SQL> -- Fill up svmc_apply_prep
08:20:10 SQL> @score.sql
08:20:10 SQL> --
08:20:10 SQL> -- score.sql
08:20:10 SQL> --
08:20:10 SQL> 
08:20:10 SQL> -- usage: score.sql
08:20:10 SQL> 
08:20:10 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
08:20:10 SQL> 
08:20:10 SQL> DEFINE target	= 'gatt'
08:20:10 SQL> DEFINE model_name = 'forex14'
08:20:10 SQL> DEFINE bldtable	= 'bme'
08:20:10 SQL> DEFINE scoretable = 'sme'
08:20:10 SQL> DEFINE case_id	= 'prdate'
08:20:10 SQL> 
08:20:10 SQL> -- Define a variable to help me exclude some columns from some data mining calls
08:20:10 SQL> DEFINE exclude1 = "'&target','&case_id'"
08:20:10 SQL> 
08:20:10 SQL> -- Builds an SVM model using pl/sql.
08:20:10 SQL> 
08:20:10 SQL> -----------------------------------------------------------------------
08:20:10 SQL> --			    BUILD THE MODEL
08:20:10 SQL> -----------------------------------------------------------------------
08:20:10 SQL> 
08:20:10 SQL> -- Cleanup old build data preparation objects for repeat runs
08:20:10 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
08:20:10 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
08:20:10 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
08:20:10 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
08:20:10 SQL> 
08:20:10 SQL> 
08:20:10 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
08:20:10 SQL> --
08:20:10 SQL> -- DROP	TABLE svmc_settings ;
08:20:10 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
08:20:10 SQL> -- DELETE svmc_settings;
08:20:10 SQL> 
08:20:10 SQL> -- The default classification algorithm is Naive Bayes. So override
08:20:10 SQL> -- this choice to SVM using a settings table.
08:20:10 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
08:20:10 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
08:20:10 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
08:20:10 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
08:20:10 SQL> -- models.
08:20:10 SQL> --
08:20:10 SQL> 
08:20:10 SQL> -- Do this once and then comment it out.
08:20:10 SQL> -- That makes script go faster.
08:20:10 SQL> -- BEGIN
08:20:10 SQL> -- -- Populate settings table
08:20:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:20:10 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
08:20:10 SQL> --
08:20:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:20:10 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
08:20:10 SQL> --
08:20:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:20:10 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
08:20:10 SQL> --   COMMIT;
08:20:10 SQL> -- END;
08:20:10 SQL> -- /
08:20:10 SQL> 
08:20:10 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
08:20:10 SQL> 
08:20:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
08:20:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:20:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
08:20:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
08:20:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:20:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:20:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
08:20:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:20:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
08:20:10 SQL> 
08:20:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
08:20:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:20:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:20:10 SQL> 
08:20:10 SQL> --------------------------------
08:20:10 SQL> -- PREPARE BUILD (TRAINING) DATA
08:20:10 SQL> --
08:20:10 SQL> 
08:20:10 SQL> -- 1. Missing Value treatment for all Predictors and
08:20:10 SQL> -- 2. Outlier Treatment and
08:20:10 SQL> -- 3. Normalization are performed below.
08:20:10 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
08:20:10 SQL> --    normalized here.
08:20:10 SQL> 
08:20:10 SQL> BEGIN
08:20:10   2  	-- Perform missing value treatment for all predictors
08:20:10   3  	-- create miss tables
08:20:10   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
08:20:10   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
08:20:10   6  
08:20:10   7  	-- populate miss tables
08:20:10   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
08:20:10   9  	  miss_table_name => 'svmc_miss_num',
08:20:10  10  	  data_table_name => '&bldtable',
08:20:10  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:20:10  12  
08:20:10  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
08:20:10  14  	  miss_table_name => 'svmc_miss_cat',
08:20:10  15  	  data_table_name => '&bldtable',
08:20:10  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:20:10  17  
08:20:10  18  	-- xform input data to replace missing values
08:20:10  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:20:10  20  	  miss_table_name => 'svmc_miss_num',
08:20:10  21  	  data_table_name => '&bldtable',
08:20:10  22  	  xform_view_name => 'xformed_build_miss_num');
08:20:10  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:20:10  24  	  miss_table_name => 'svmc_miss_cat',
08:20:10  25  	  data_table_name => '&bldtable',
08:20:10  26  	  xform_view_name => 'xformed_build_miss_cat');
08:20:10  27  
08:20:10  28  	-- Perform outlier treatment.
08:20:10  29  	-- create clip table
08:20:10  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
08:20:10  31  
08:20:10  32  	-- populate clip table
08:20:10  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
08:20:10  34  	  clip_table_name => 'svmc_clip',
08:20:10  35  	  data_table_name => '&bldtable',
08:20:10  36  	  tail_frac	  => 0.025,
08:20:10  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:20:10  38  
08:20:10  39  	-- xform input data to winsorized data
08:20:10  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
08:20:10  41  	  clip_table_name => 'svmc_clip',
08:20:10  42  	  data_table_name => '&bldtable',
08:20:10  43  	  xform_view_name => 'svmc_winsor');
08:20:10  44  
08:20:10  45  	-- create normalization table
08:20:10  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
08:20:10  47  
08:20:10  48  	-- populate normalization table based on winsorized data
08:20:10  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
08:20:10  50  	  norm_table_name => 'svmc_norm',
08:20:10  51  	  data_table_name => 'svmc_winsor',
08:20:10  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:20:10  53  
08:20:10  54  	-- normalize the original data
08:20:10  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:20:10  56  	  norm_table_name => 'svmc_norm',
08:20:10  57  	  data_table_name => '&bldtable',
08:20:10  58  	  xform_view_name => 'svmc_build_prep');
08:20:10  59  END;
08:20:10  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.81
08:20:29 SQL> 
08:20:29 SQL> ---------------------
08:20:29 SQL> -- CREATE A NEW MODEL
08:20:29 SQL> --
08:20:29 SQL> -- Cleanup old model with the same name for repeat runs
08:20:29 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
08:20:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:20:29   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.85
08:20:30 SQL> 
08:20:30 SQL> -- Build a new SVM Model
08:20:30 SQL> BEGIN
08:20:30   2  	DBMS_DATA_MINING.CREATE_MODEL(
08:20:30   3  	  model_name	      => '&model_name',
08:20:30   4  	  mining_function     => dbms_data_mining.classification,
08:20:30   5  	  data_table_name     => 'svmc_build_prep',
08:20:30   6  	  case_id_column_name => '&case_id',
08:20:30   7  	  target_column_name  => '&target',
08:20:30   8  	  settings_table_name => 'svmc_settings');
08:20:30   9  END;
08:20:30  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:33.96
08:21:04 SQL> 
08:21:04 SQL> -----------------------------------------------------------------------
08:21:04 SQL> --			       APPLY/score THE MODEL
08:21:04 SQL> -----------------------------------------------------------------------
08:21:04 SQL> 
08:21:04 SQL> -- Cleanup old scoring data preparation objects for repeat runs
08:21:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
08:21:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:21:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:21:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
08:21:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:21:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:21:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
08:21:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:21:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:21:04 SQL> -----------------------
08:21:04 SQL> -- PREPARE SCORING DATA
08:21:04 SQL> --
08:21:04 SQL> -- If the data for model creation has been prepared, then the data
08:21:04 SQL> -- to be scored using the model must be prepared in the same manner
08:21:04 SQL> -- in order to obtain meaningful results.
08:21:04 SQL> --
08:21:04 SQL> -- 1. Missing Value treatment for all Predictors and
08:21:04 SQL> -- 2. Normalization
08:21:04 SQL> -- No outlier treatment will be performed during test and apply. The
08:21:04 SQL> -- normalization step is sufficient, since the normalization parameters
08:21:04 SQL> -- already capture the effects of outlier treatment done with build data.
08:21:04 SQL> --
08:21:04 SQL> BEGIN
08:21:04   2  	-- Xform Test data to replace missing values
08:21:04   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:21:04   4  	  miss_table_name => 'svmc_miss_num',
08:21:04   5  	  data_table_name => '&scoretable',
08:21:04   6  	  xform_view_name => 'xformed_apply_miss_num');
08:21:04   7  
08:21:04   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:21:04   9  	  miss_table_name => 'svmc_miss_cat',
08:21:04  10  	  data_table_name => '&scoretable',
08:21:04  11  	  xform_view_name => 'xformed_apply_miss_cat');
08:21:04  12  
08:21:04  13  	-- Normalize the data to be scored
08:21:04  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:21:04  15  	  norm_table_name => 'svmc_norm',
08:21:04  16  	  data_table_name => '&scoretable',
08:21:04  17  	  xform_view_name => 'svmc_apply_prep');
08:21:04  18  END;
08:21:04  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
08:21:05 SQL> 
08:21:05 SQL> -- Use same model_name used in score.sql
08:21:05 SQL> DEFINE model_name = 'forex14'
08:21:05 SQL> 
08:21:05 SQL> -- CREATE TABLE fxscores8hp (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
08:21:05 SQL> 
08:21:05 SQL> DELETE fxscores8hp WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
08:21:05 SQL> 
08:21:05 SQL> INSERT INTO fxscores8hp (prdate,score,rundate,pair,ydate)
08:21:05   2  SELECT
08:21:05   3  prdate
08:21:05   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
08:21:05   5  ,sysdate
08:21:05   6  ,SUBSTR(prdate,1,3)pair
08:21:05   7  ,SUBSTR(prdate,4,19)ydate
08:21:05   8  FROM svmc_apply_prep
08:21:05   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
08:21:05 SQL> @aud_score1day.sql  2010-12-17 10:25:00
08:21:05 SQL> --
08:21:05 SQL> -- aud_score1day.sql
08:21:05 SQL> --
08:21:05 SQL> 
08:21:05 SQL> CREATE OR REPLACE VIEW sme AS
08:21:05   2  SELECT
08:21:05   3  'aud'||m.ydate prdate
08:21:05   4  ,NULL gatt
08:21:05   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:21:05   6  ,eur_g00
08:21:05   7  ,eur_g01
08:21:05   8  ,eur_g02
08:21:05   9  ,eur_g03
08:21:05  10  ,eur_g04
08:21:05  11  ,eur_g05
08:21:05  12  ,eur_g06
08:21:05  13  ,eur_g07
08:21:05  14  ,eur_g08
08:21:05  15  ,eur_g09
08:21:05  16  ,eur_g10
08:21:05  17  ,eur_g11
08:21:05  18  ,eur_g12
08:21:05  19  ,eur_g13
08:21:05  20  ,eur_g14
08:21:05  21  ,eur_g15
08:21:05  22  ,eur_g16
08:21:05  23  ,eur_g17
08:21:05  24  ,eur_g18
08:21:05  25  ,eur_g19
08:21:05  26  ,eur_g20
08:21:05  27  ,eur_g21
08:21:05  28  ,eur_g22
08:21:05  29  ,eur_g23
08:21:05  30  ,eur_g24
08:21:05  31  ,eur_g25
08:21:05  32  ,eur_g26
08:21:05  33  ,eur_g27
08:21:05  34  ,eur_g28
08:21:05  35  ,eur_g29
08:21:05  36  ,eur_g30
08:21:05  37  ,eur_g31
08:21:05  38  ,eur_g32
08:21:05  39  ,eur_g33
08:21:05  40  ,eur_g34
08:21:05  41  ,eur_g35
08:21:05  42  ,eur_g36
08:21:05  43  ,eur_g37
08:21:05  44  ,eur_g38
08:21:05  45  ,eur_g39
08:21:05  46  ,eur_g40
08:21:05  47  ,aud_g00
08:21:05  48  ,aud_g01
08:21:05  49  ,aud_g02
08:21:05  50  ,aud_g03
08:21:05  51  ,aud_g04
08:21:05  52  ,aud_g05
08:21:05  53  ,aud_g06
08:21:05  54  ,aud_g07
08:21:05  55  ,aud_g08
08:21:05  56  ,aud_g09
08:21:05  57  ,aud_g10
08:21:05  58  ,aud_g11
08:21:05  59  ,aud_g12
08:21:05  60  ,aud_g13
08:21:05  61  ,aud_g14
08:21:05  62  ,aud_g15
08:21:05  63  ,aud_g16
08:21:05  64  ,aud_g17
08:21:05  65  ,aud_g18
08:21:05  66  ,aud_g19
08:21:05  67  ,aud_g20
08:21:05  68  ,aud_g21
08:21:05  69  ,aud_g22
08:21:05  70  ,aud_g23
08:21:05  71  ,aud_g24
08:21:05  72  ,aud_g25
08:21:05  73  ,aud_g26
08:21:05  74  ,aud_g27
08:21:05  75  ,aud_g28
08:21:05  76  ,aud_g29
08:21:05  77  ,aud_g30
08:21:05  78  ,aud_g31
08:21:05  79  ,aud_g32
08:21:05  80  ,aud_g33
08:21:05  81  ,aud_g34
08:21:05  82  ,aud_g35
08:21:05  83  ,aud_g36
08:21:05  84  ,aud_g37
08:21:05  85  ,aud_g38
08:21:05  86  ,aud_g39
08:21:05  87  ,aud_g40
08:21:05  88  ,gbp_g00
08:21:05  89  ,gbp_g01
08:21:05  90  ,gbp_g02
08:21:05  91  ,gbp_g03
08:21:05  92  ,gbp_g04
08:21:05  93  ,gbp_g05
08:21:05  94  ,gbp_g06
08:21:05  95  ,gbp_g07
08:21:05  96  ,gbp_g08
08:21:05  97  ,gbp_g09
08:21:05  98  ,gbp_g10
08:21:05  99  ,gbp_g11
08:21:05 100  ,gbp_g12
08:21:05 101  ,gbp_g13
08:21:05 102  ,gbp_g14
08:21:05 103  ,gbp_g15
08:21:05 104  ,gbp_g16
08:21:05 105  ,gbp_g17
08:21:05 106  ,gbp_g18
08:21:05 107  ,gbp_g19
08:21:05 108  ,gbp_g20
08:21:05 109  ,gbp_g21
08:21:05 110  ,gbp_g22
08:21:05 111  ,gbp_g23
08:21:05 112  ,gbp_g24
08:21:05 113  ,gbp_g25
08:21:05 114  ,gbp_g26
08:21:05 115  ,gbp_g27
08:21:05 116  ,gbp_g28
08:21:05 117  ,gbp_g29
08:21:05 118  ,gbp_g30
08:21:05 119  ,gbp_g31
08:21:05 120  ,gbp_g32
08:21:05 121  ,gbp_g33
08:21:05 122  ,gbp_g34
08:21:05 123  ,gbp_g35
08:21:05 124  ,gbp_g36
08:21:05 125  ,gbp_g37
08:21:05 126  ,gbp_g38
08:21:05 127  ,gbp_g39
08:21:05 128  ,gbp_g40
08:21:05 129  ,jpy_g00
08:21:05 130  ,jpy_g01
08:21:05 131  ,jpy_g02
08:21:05 132  ,jpy_g03
08:21:05 133  ,jpy_g04
08:21:05 134  ,jpy_g05
08:21:05 135  ,jpy_g06
08:21:05 136  ,jpy_g07
08:21:05 137  ,jpy_g08
08:21:05 138  ,jpy_g09
08:21:05 139  ,jpy_g10
08:21:05 140  ,jpy_g11
08:21:05 141  ,jpy_g12
08:21:05 142  ,jpy_g13
08:21:05 143  ,jpy_g14
08:21:05 144  ,jpy_g15
08:21:05 145  ,jpy_g16
08:21:05 146  ,jpy_g17
08:21:05 147  ,jpy_g18
08:21:05 148  ,jpy_g19
08:21:05 149  ,jpy_g20
08:21:05 150  ,jpy_g21
08:21:05 151  ,jpy_g22
08:21:05 152  ,jpy_g23
08:21:05 153  ,jpy_g24
08:21:05 154  ,jpy_g25
08:21:05 155  ,jpy_g26
08:21:05 156  ,jpy_g27
08:21:05 157  ,jpy_g28
08:21:05 158  ,jpy_g29
08:21:05 159  ,jpy_g30
08:21:05 160  ,jpy_g31
08:21:05 161  ,jpy_g32
08:21:05 162  ,jpy_g33
08:21:05 163  ,jpy_g34
08:21:05 164  ,jpy_g35
08:21:05 165  ,jpy_g36
08:21:05 166  ,jpy_g37
08:21:05 167  ,jpy_g38
08:21:05 168  ,jpy_g39
08:21:05 169  ,jpy_g40
08:21:05 170  ,cad_g00
08:21:05 171  ,cad_g01
08:21:05 172  ,cad_g02
08:21:05 173  ,cad_g03
08:21:05 174  ,cad_g04
08:21:05 175  ,cad_g05
08:21:05 176  ,cad_g06
08:21:05 177  ,cad_g07
08:21:05 178  ,cad_g08
08:21:05 179  ,cad_g09
08:21:05 180  ,cad_g10
08:21:05 181  ,cad_g11
08:21:05 182  ,cad_g12
08:21:05 183  ,cad_g13
08:21:05 184  ,cad_g14
08:21:05 185  ,cad_g15
08:21:05 186  ,cad_g16
08:21:05 187  ,cad_g17
08:21:05 188  ,cad_g18
08:21:05 189  ,cad_g19
08:21:05 190  ,cad_g20
08:21:05 191  ,cad_g21
08:21:05 192  ,cad_g22
08:21:05 193  ,cad_g23
08:21:05 194  ,cad_g24
08:21:05 195  ,cad_g25
08:21:05 196  ,cad_g26
08:21:05 197  ,cad_g27
08:21:05 198  ,cad_g28
08:21:05 199  ,cad_g29
08:21:05 200  ,cad_g30
08:21:05 201  ,cad_g31
08:21:05 202  ,cad_g32
08:21:05 203  ,cad_g33
08:21:05 204  ,cad_g34
08:21:05 205  ,cad_g35
08:21:05 206  ,cad_g36
08:21:05 207  ,cad_g37
08:21:05 208  ,cad_g38
08:21:05 209  ,cad_g39
08:21:05 210  ,cad_g40
08:21:05 211  ,chf_g00
08:21:05 212  ,chf_g01
08:21:05 213  ,chf_g02
08:21:05 214  ,chf_g03
08:21:05 215  ,chf_g04
08:21:05 216  ,chf_g05
08:21:05 217  ,chf_g06
08:21:05 218  ,chf_g07
08:21:05 219  ,chf_g08
08:21:05 220  ,chf_g09
08:21:05 221  ,chf_g10
08:21:05 222  ,chf_g11
08:21:05 223  ,chf_g12
08:21:05 224  ,chf_g13
08:21:05 225  ,chf_g14
08:21:05 226  ,chf_g15
08:21:05 227  ,chf_g16
08:21:05 228  ,chf_g17
08:21:05 229  ,chf_g18
08:21:05 230  ,chf_g19
08:21:05 231  ,chf_g20
08:21:05 232  ,chf_g21
08:21:05 233  ,chf_g22
08:21:05 234  ,chf_g23
08:21:05 235  ,chf_g24
08:21:05 236  ,chf_g25
08:21:05 237  ,chf_g26
08:21:05 238  ,chf_g27
08:21:05 239  ,chf_g28
08:21:05 240  ,chf_g29
08:21:05 241  ,chf_g30
08:21:05 242  ,chf_g31
08:21:05 243  ,chf_g32
08:21:05 244  ,chf_g33
08:21:05 245  ,chf_g34
08:21:05 246  ,chf_g35
08:21:05 247  ,chf_g36
08:21:05 248  ,chf_g37
08:21:05 249  ,chf_g38
08:21:05 250  ,chf_g39
08:21:05 251  ,chf_g40
08:21:05 252  FROM aud_ms14 m
08:21:05 253  WHERE m.ydate = '&1'||' '||'&2'
08:21:05 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:25:00'

View created.

Elapsed: 00:00:00.12
08:21:06 SQL> 
08:21:06 SQL> -- rpt
08:21:06 SQL> -- We should see just 1 row:
08:21:06 SQL> 
08:21:06 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
08:21:06 SQL> 
08:21:06 SQL> -- Build the model:
08:21:06 SQL> CREATE OR REPLACE VIEW bme AS
08:21:06   2  SELECT
08:21:06   3  'aud'||m.ydate prdate
08:21:06   4  ,gatt
08:21:06   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:21:06   6  ,eur_g00
08:21:06   7  ,eur_g01
08:21:06   8  ,eur_g02
08:21:06   9  ,eur_g03
08:21:06  10  ,eur_g04
08:21:06  11  ,eur_g05
08:21:06  12  ,eur_g06
08:21:06  13  ,eur_g07
08:21:06  14  ,eur_g08
08:21:06  15  ,eur_g09
08:21:06  16  ,eur_g10
08:21:06  17  ,eur_g11
08:21:06  18  ,eur_g12
08:21:06  19  ,eur_g13
08:21:06  20  ,eur_g14
08:21:06  21  ,eur_g15
08:21:06  22  ,eur_g16
08:21:06  23  ,eur_g17
08:21:06  24  ,eur_g18
08:21:06  25  ,eur_g19
08:21:06  26  ,eur_g20
08:21:06  27  ,eur_g21
08:21:06  28  ,eur_g22
08:21:06  29  ,eur_g23
08:21:06  30  ,eur_g24
08:21:06  31  ,eur_g25
08:21:06  32  ,eur_g26
08:21:06  33  ,eur_g27
08:21:06  34  ,eur_g28
08:21:06  35  ,eur_g29
08:21:06  36  ,eur_g30
08:21:06  37  ,eur_g31
08:21:06  38  ,eur_g32
08:21:06  39  ,eur_g33
08:21:06  40  ,eur_g34
08:21:06  41  ,eur_g35
08:21:06  42  ,eur_g36
08:21:06  43  ,eur_g37
08:21:06  44  ,eur_g38
08:21:06  45  ,eur_g39
08:21:06  46  ,eur_g40
08:21:06  47  ,aud_g00
08:21:06  48  ,aud_g01
08:21:06  49  ,aud_g02
08:21:06  50  ,aud_g03
08:21:06  51  ,aud_g04
08:21:06  52  ,aud_g05
08:21:06  53  ,aud_g06
08:21:06  54  ,aud_g07
08:21:06  55  ,aud_g08
08:21:06  56  ,aud_g09
08:21:06  57  ,aud_g10
08:21:06  58  ,aud_g11
08:21:06  59  ,aud_g12
08:21:06  60  ,aud_g13
08:21:06  61  ,aud_g14
08:21:06  62  ,aud_g15
08:21:06  63  ,aud_g16
08:21:06  64  ,aud_g17
08:21:06  65  ,aud_g18
08:21:06  66  ,aud_g19
08:21:06  67  ,aud_g20
08:21:06  68  ,aud_g21
08:21:06  69  ,aud_g22
08:21:06  70  ,aud_g23
08:21:06  71  ,aud_g24
08:21:06  72  ,aud_g25
08:21:06  73  ,aud_g26
08:21:06  74  ,aud_g27
08:21:06  75  ,aud_g28
08:21:06  76  ,aud_g29
08:21:06  77  ,aud_g30
08:21:06  78  ,aud_g31
08:21:06  79  ,aud_g32
08:21:06  80  ,aud_g33
08:21:06  81  ,aud_g34
08:21:06  82  ,aud_g35
08:21:06  83  ,aud_g36
08:21:06  84  ,aud_g37
08:21:06  85  ,aud_g38
08:21:06  86  ,aud_g39
08:21:06  87  ,aud_g40
08:21:06  88  ,gbp_g00
08:21:06  89  ,gbp_g01
08:21:06  90  ,gbp_g02
08:21:06  91  ,gbp_g03
08:21:06  92  ,gbp_g04
08:21:06  93  ,gbp_g05
08:21:06  94  ,gbp_g06
08:21:06  95  ,gbp_g07
08:21:06  96  ,gbp_g08
08:21:06  97  ,gbp_g09
08:21:06  98  ,gbp_g10
08:21:06  99  ,gbp_g11
08:21:06 100  ,gbp_g12
08:21:06 101  ,gbp_g13
08:21:06 102  ,gbp_g14
08:21:06 103  ,gbp_g15
08:21:06 104  ,gbp_g16
08:21:06 105  ,gbp_g17
08:21:06 106  ,gbp_g18
08:21:06 107  ,gbp_g19
08:21:06 108  ,gbp_g20
08:21:06 109  ,gbp_g21
08:21:06 110  ,gbp_g22
08:21:06 111  ,gbp_g23
08:21:06 112  ,gbp_g24
08:21:06 113  ,gbp_g25
08:21:06 114  ,gbp_g26
08:21:06 115  ,gbp_g27
08:21:06 116  ,gbp_g28
08:21:06 117  ,gbp_g29
08:21:06 118  ,gbp_g30
08:21:06 119  ,gbp_g31
08:21:06 120  ,gbp_g32
08:21:06 121  ,gbp_g33
08:21:06 122  ,gbp_g34
08:21:06 123  ,gbp_g35
08:21:06 124  ,gbp_g36
08:21:06 125  ,gbp_g37
08:21:06 126  ,gbp_g38
08:21:06 127  ,gbp_g39
08:21:06 128  ,gbp_g40
08:21:06 129  ,jpy_g00
08:21:06 130  ,jpy_g01
08:21:06 131  ,jpy_g02
08:21:06 132  ,jpy_g03
08:21:06 133  ,jpy_g04
08:21:06 134  ,jpy_g05
08:21:06 135  ,jpy_g06
08:21:06 136  ,jpy_g07
08:21:06 137  ,jpy_g08
08:21:06 138  ,jpy_g09
08:21:06 139  ,jpy_g10
08:21:06 140  ,jpy_g11
08:21:06 141  ,jpy_g12
08:21:06 142  ,jpy_g13
08:21:06 143  ,jpy_g14
08:21:06 144  ,jpy_g15
08:21:06 145  ,jpy_g16
08:21:06 146  ,jpy_g17
08:21:06 147  ,jpy_g18
08:21:06 148  ,jpy_g19
08:21:06 149  ,jpy_g20
08:21:06 150  ,jpy_g21
08:21:06 151  ,jpy_g22
08:21:06 152  ,jpy_g23
08:21:06 153  ,jpy_g24
08:21:06 154  ,jpy_g25
08:21:06 155  ,jpy_g26
08:21:06 156  ,jpy_g27
08:21:06 157  ,jpy_g28
08:21:06 158  ,jpy_g29
08:21:06 159  ,jpy_g30
08:21:06 160  ,jpy_g31
08:21:06 161  ,jpy_g32
08:21:06 162  ,jpy_g33
08:21:06 163  ,jpy_g34
08:21:06 164  ,jpy_g35
08:21:06 165  ,jpy_g36
08:21:06 166  ,jpy_g37
08:21:06 167  ,jpy_g38
08:21:06 168  ,jpy_g39
08:21:06 169  ,jpy_g40
08:21:06 170  ,cad_g00
08:21:06 171  ,cad_g01
08:21:06 172  ,cad_g02
08:21:06 173  ,cad_g03
08:21:06 174  ,cad_g04
08:21:06 175  ,cad_g05
08:21:06 176  ,cad_g06
08:21:06 177  ,cad_g07
08:21:06 178  ,cad_g08
08:21:06 179  ,cad_g09
08:21:06 180  ,cad_g10
08:21:06 181  ,cad_g11
08:21:06 182  ,cad_g12
08:21:06 183  ,cad_g13
08:21:06 184  ,cad_g14
08:21:06 185  ,cad_g15
08:21:06 186  ,cad_g16
08:21:06 187  ,cad_g17
08:21:06 188  ,cad_g18
08:21:06 189  ,cad_g19
08:21:06 190  ,cad_g20
08:21:06 191  ,cad_g21
08:21:06 192  ,cad_g22
08:21:06 193  ,cad_g23
08:21:06 194  ,cad_g24
08:21:06 195  ,cad_g25
08:21:06 196  ,cad_g26
08:21:06 197  ,cad_g27
08:21:06 198  ,cad_g28
08:21:06 199  ,cad_g29
08:21:06 200  ,cad_g30
08:21:06 201  ,cad_g31
08:21:06 202  ,cad_g32
08:21:06 203  ,cad_g33
08:21:06 204  ,cad_g34
08:21:06 205  ,cad_g35
08:21:06 206  ,cad_g36
08:21:06 207  ,cad_g37
08:21:06 208  ,cad_g38
08:21:06 209  ,cad_g39
08:21:06 210  ,cad_g40
08:21:06 211  ,chf_g00
08:21:06 212  ,chf_g01
08:21:06 213  ,chf_g02
08:21:06 214  ,chf_g03
08:21:06 215  ,chf_g04
08:21:06 216  ,chf_g05
08:21:06 217  ,chf_g06
08:21:06 218  ,chf_g07
08:21:06 219  ,chf_g08
08:21:06 220  ,chf_g09
08:21:06 221  ,chf_g10
08:21:06 222  ,chf_g11
08:21:06 223  ,chf_g12
08:21:06 224  ,chf_g13
08:21:06 225  ,chf_g14
08:21:06 226  ,chf_g15
08:21:06 227  ,chf_g16
08:21:06 228  ,chf_g17
08:21:06 229  ,chf_g18
08:21:06 230  ,chf_g19
08:21:06 231  ,chf_g20
08:21:06 232  ,chf_g21
08:21:06 233  ,chf_g22
08:21:06 234  ,chf_g23
08:21:06 235  ,chf_g24
08:21:06 236  ,chf_g25
08:21:06 237  ,chf_g26
08:21:06 238  ,chf_g27
08:21:06 239  ,chf_g28
08:21:06 240  ,chf_g29
08:21:06 241  ,chf_g30
08:21:06 242  ,chf_g31
08:21:06 243  ,chf_g32
08:21:06 244  ,chf_g33
08:21:06 245  ,chf_g34
08:21:06 246  ,chf_g35
08:21:06 247  ,chf_g36
08:21:06 248  ,chf_g37
08:21:06 249  ,chf_g38
08:21:06 250  ,chf_g39
08:21:06 251  ,chf_g40
08:21:06 252  FROM aud_ms14 m
08:21:06 253  WHERE gatt IN('nup','up')
08:21:06 254  AND 1+m.ydate < '&1'||' '||'&2'
08:21:06 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:25:00'

View created.

Elapsed: 00:00:00.11
08:21:06 SQL> 
08:21:06 SQL> -- rpt
08:21:06 SQL> 
08:21:06 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt;

GAT COUNT(PRDATE)
--- -------------
nup	    13261
up	     6627

Elapsed: 00:00:00.04
08:21:06 SQL> 
08:21:06 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-16 10:20:00

Elapsed: 00:00:00.03
08:21:06 SQL> 
08:21:06 SQL> -- Now build model from bme and score sme
08:21:06 SQL> @score1.sql
08:21:06 SQL> -- score1.sql
08:21:06 SQL> 
08:21:06 SQL> -- Does the 1st SVM score
08:21:06 SQL> 
08:21:06 SQL> -- Fill up svmc_apply_prep
08:21:06 SQL> @score.sql
08:21:06 SQL> --
08:21:06 SQL> -- score.sql
08:21:06 SQL> --
08:21:06 SQL> 
08:21:06 SQL> -- usage: score.sql
08:21:06 SQL> 
08:21:06 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
08:21:06 SQL> 
08:21:06 SQL> DEFINE target	= 'gatt'
08:21:06 SQL> DEFINE model_name = 'forex14'
08:21:06 SQL> DEFINE bldtable	= 'bme'
08:21:06 SQL> DEFINE scoretable = 'sme'
08:21:06 SQL> DEFINE case_id	= 'prdate'
08:21:06 SQL> 
08:21:06 SQL> -- Define a variable to help me exclude some columns from some data mining calls
08:21:06 SQL> DEFINE exclude1 = "'&target','&case_id'"
08:21:06 SQL> 
08:21:06 SQL> -- Builds an SVM model using pl/sql.
08:21:06 SQL> 
08:21:06 SQL> -----------------------------------------------------------------------
08:21:06 SQL> --			    BUILD THE MODEL
08:21:06 SQL> -----------------------------------------------------------------------
08:21:06 SQL> 
08:21:06 SQL> -- Cleanup old build data preparation objects for repeat runs
08:21:06 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
08:21:06 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
08:21:06 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
08:21:06 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
08:21:06 SQL> 
08:21:06 SQL> 
08:21:06 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
08:21:06 SQL> --
08:21:06 SQL> -- DROP	TABLE svmc_settings ;
08:21:06 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
08:21:06 SQL> -- DELETE svmc_settings;
08:21:06 SQL> 
08:21:06 SQL> -- The default classification algorithm is Naive Bayes. So override
08:21:06 SQL> -- this choice to SVM using a settings table.
08:21:06 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
08:21:06 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
08:21:06 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
08:21:06 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
08:21:06 SQL> -- models.
08:21:06 SQL> --
08:21:06 SQL> 
08:21:06 SQL> -- Do this once and then comment it out.
08:21:06 SQL> -- That makes script go faster.
08:21:06 SQL> -- BEGIN
08:21:06 SQL> -- -- Populate settings table
08:21:06 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:21:06 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
08:21:06 SQL> --
08:21:06 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:21:06 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
08:21:06 SQL> --
08:21:06 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:21:06 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
08:21:06 SQL> --   COMMIT;
08:21:06 SQL> -- END;
08:21:06 SQL> -- /
08:21:06 SQL> 
08:21:06 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
08:21:06 SQL> 
08:21:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
08:21:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:21:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:21:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
08:21:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:21:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
08:21:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
08:21:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:21:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:21:06 SQL> 
08:21:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
08:21:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:21:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:21:06 SQL> 
08:21:06 SQL> --------------------------------
08:21:06 SQL> -- PREPARE BUILD (TRAINING) DATA
08:21:06 SQL> --
08:21:06 SQL> 
08:21:06 SQL> -- 1. Missing Value treatment for all Predictors and
08:21:06 SQL> -- 2. Outlier Treatment and
08:21:06 SQL> -- 3. Normalization are performed below.
08:21:06 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
08:21:06 SQL> --    normalized here.
08:21:06 SQL> 
08:21:06 SQL> BEGIN
08:21:06   2  	-- Perform missing value treatment for all predictors
08:21:06   3  	-- create miss tables
08:21:06   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
08:21:06   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
08:21:06   6  
08:21:06   7  	-- populate miss tables
08:21:06   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
08:21:06   9  	  miss_table_name => 'svmc_miss_num',
08:21:06  10  	  data_table_name => '&bldtable',
08:21:06  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:21:06  12  
08:21:06  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
08:21:06  14  	  miss_table_name => 'svmc_miss_cat',
08:21:06  15  	  data_table_name => '&bldtable',
08:21:06  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:21:06  17  
08:21:06  18  	-- xform input data to replace missing values
08:21:06  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:21:06  20  	  miss_table_name => 'svmc_miss_num',
08:21:06  21  	  data_table_name => '&bldtable',
08:21:06  22  	  xform_view_name => 'xformed_build_miss_num');
08:21:06  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:21:06  24  	  miss_table_name => 'svmc_miss_cat',
08:21:06  25  	  data_table_name => '&bldtable',
08:21:06  26  	  xform_view_name => 'xformed_build_miss_cat');
08:21:06  27  
08:21:06  28  	-- Perform outlier treatment.
08:21:06  29  	-- create clip table
08:21:06  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
08:21:06  31  
08:21:06  32  	-- populate clip table
08:21:06  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
08:21:06  34  	  clip_table_name => 'svmc_clip',
08:21:06  35  	  data_table_name => '&bldtable',
08:21:06  36  	  tail_frac	  => 0.025,
08:21:06  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:21:06  38  
08:21:06  39  	-- xform input data to winsorized data
08:21:06  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
08:21:06  41  	  clip_table_name => 'svmc_clip',
08:21:06  42  	  data_table_name => '&bldtable',
08:21:06  43  	  xform_view_name => 'svmc_winsor');
08:21:06  44  
08:21:06  45  	-- create normalization table
08:21:06  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
08:21:06  47  
08:21:06  48  	-- populate normalization table based on winsorized data
08:21:06  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
08:21:06  50  	  norm_table_name => 'svmc_norm',
08:21:06  51  	  data_table_name => 'svmc_winsor',
08:21:06  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:21:06  53  
08:21:06  54  	-- normalize the original data
08:21:06  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:21:06  56  	  norm_table_name => 'svmc_norm',
08:21:06  57  	  data_table_name => '&bldtable',
08:21:06  58  	  xform_view_name => 'svmc_build_prep');
08:21:06  59  END;
08:21:06  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.48
08:21:24 SQL> 
08:21:24 SQL> ---------------------
08:21:24 SQL> -- CREATE A NEW MODEL
08:21:24 SQL> --
08:21:24 SQL> -- Cleanup old model with the same name for repeat runs
08:21:24 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
08:21:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:21:24   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.93
08:21:25 SQL> 
08:21:25 SQL> -- Build a new SVM Model
08:21:25 SQL> BEGIN
08:21:25   2  	DBMS_DATA_MINING.CREATE_MODEL(
08:21:25   3  	  model_name	      => '&model_name',
08:21:25   4  	  mining_function     => dbms_data_mining.classification,
08:21:25   5  	  data_table_name     => 'svmc_build_prep',
08:21:25   6  	  case_id_column_name => '&case_id',
08:21:25   7  	  target_column_name  => '&target',
08:21:25   8  	  settings_table_name => 'svmc_settings');
08:21:25   9  END;
08:21:25  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.94
08:21:54 SQL> 
08:21:54 SQL> -----------------------------------------------------------------------
08:21:54 SQL> --			       APPLY/score THE MODEL
08:21:54 SQL> -----------------------------------------------------------------------
08:21:54 SQL> 
08:21:54 SQL> -- Cleanup old scoring data preparation objects for repeat runs
08:21:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
08:21:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:21:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.14
08:21:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
08:21:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:21:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.14
08:21:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
08:21:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:21:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:21:55 SQL> -----------------------
08:21:55 SQL> -- PREPARE SCORING DATA
08:21:55 SQL> --
08:21:55 SQL> -- If the data for model creation has been prepared, then the data
08:21:55 SQL> -- to be scored using the model must be prepared in the same manner
08:21:55 SQL> -- in order to obtain meaningful results.
08:21:55 SQL> --
08:21:55 SQL> -- 1. Missing Value treatment for all Predictors and
08:21:55 SQL> -- 2. Normalization
08:21:55 SQL> -- No outlier treatment will be performed during test and apply. The
08:21:55 SQL> -- normalization step is sufficient, since the normalization parameters
08:21:55 SQL> -- already capture the effects of outlier treatment done with build data.
08:21:55 SQL> --
08:21:55 SQL> BEGIN
08:21:55   2  	-- Xform Test data to replace missing values
08:21:55   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:21:55   4  	  miss_table_name => 'svmc_miss_num',
08:21:55   5  	  data_table_name => '&scoretable',
08:21:55   6  	  xform_view_name => 'xformed_apply_miss_num');
08:21:55   7  
08:21:55   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:21:55   9  	  miss_table_name => 'svmc_miss_cat',
08:21:55  10  	  data_table_name => '&scoretable',
08:21:55  11  	  xform_view_name => 'xformed_apply_miss_cat');
08:21:55  12  
08:21:55  13  	-- Normalize the data to be scored
08:21:55  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:21:55  15  	  norm_table_name => 'svmc_norm',
08:21:55  16  	  data_table_name => '&scoretable',
08:21:55  17  	  xform_view_name => 'svmc_apply_prep');
08:21:55  18  END;
08:21:55  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
08:21:56 SQL> 
08:21:56 SQL> -- Use same model_name used in score.sql
08:21:56 SQL> DEFINE model_name = 'forex14'
08:21:56 SQL> 
08:21:56 SQL> -- CREATE TABLE fxscores8hp (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
08:21:56 SQL> 
08:21:56 SQL> DELETE fxscores8hp WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
08:21:56 SQL> 
08:21:56 SQL> INSERT INTO fxscores8hp (prdate,score,rundate,pair,ydate)
08:21:56   2  SELECT
08:21:56   3  prdate
08:21:56   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
08:21:56   5  ,sysdate
08:21:56   6  ,SUBSTR(prdate,1,3)pair
08:21:56   7  ,SUBSTR(prdate,4,19)ydate
08:21:56   8  FROM svmc_apply_prep
08:21:56   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
08:21:56 SQL> @aud_score1day.sql  2010-12-17 10:20:00
08:21:56 SQL> --
08:21:56 SQL> -- aud_score1day.sql
08:21:56 SQL> --
08:21:56 SQL> 
08:21:56 SQL> CREATE OR REPLACE VIEW sme AS
08:21:56   2  SELECT
08:21:56   3  'aud'||m.ydate prdate
08:21:56   4  ,NULL gatt
08:21:56   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:21:56   6  ,eur_g00
08:21:56   7  ,eur_g01
08:21:56   8  ,eur_g02
08:21:56   9  ,eur_g03
08:21:56  10  ,eur_g04
08:21:56  11  ,eur_g05
08:21:56  12  ,eur_g06
08:21:56  13  ,eur_g07
08:21:56  14  ,eur_g08
08:21:56  15  ,eur_g09
08:21:56  16  ,eur_g10
08:21:56  17  ,eur_g11
08:21:56  18  ,eur_g12
08:21:56  19  ,eur_g13
08:21:56  20  ,eur_g14
08:21:56  21  ,eur_g15
08:21:56  22  ,eur_g16
08:21:56  23  ,eur_g17
08:21:56  24  ,eur_g18
08:21:56  25  ,eur_g19
08:21:56  26  ,eur_g20
08:21:56  27  ,eur_g21
08:21:56  28  ,eur_g22
08:21:56  29  ,eur_g23
08:21:56  30  ,eur_g24
08:21:56  31  ,eur_g25
08:21:56  32  ,eur_g26
08:21:56  33  ,eur_g27
08:21:56  34  ,eur_g28
08:21:56  35  ,eur_g29
08:21:56  36  ,eur_g30
08:21:56  37  ,eur_g31
08:21:56  38  ,eur_g32
08:21:56  39  ,eur_g33
08:21:56  40  ,eur_g34
08:21:56  41  ,eur_g35
08:21:56  42  ,eur_g36
08:21:56  43  ,eur_g37
08:21:56  44  ,eur_g38
08:21:56  45  ,eur_g39
08:21:56  46  ,eur_g40
08:21:56  47  ,aud_g00
08:21:56  48  ,aud_g01
08:21:56  49  ,aud_g02
08:21:56  50  ,aud_g03
08:21:56  51  ,aud_g04
08:21:56  52  ,aud_g05
08:21:56  53  ,aud_g06
08:21:56  54  ,aud_g07
08:21:56  55  ,aud_g08
08:21:56  56  ,aud_g09
08:21:56  57  ,aud_g10
08:21:56  58  ,aud_g11
08:21:56  59  ,aud_g12
08:21:56  60  ,aud_g13
08:21:56  61  ,aud_g14
08:21:56  62  ,aud_g15
08:21:56  63  ,aud_g16
08:21:56  64  ,aud_g17
08:21:56  65  ,aud_g18
08:21:56  66  ,aud_g19
08:21:56  67  ,aud_g20
08:21:56  68  ,aud_g21
08:21:56  69  ,aud_g22
08:21:56  70  ,aud_g23
08:21:56  71  ,aud_g24
08:21:56  72  ,aud_g25
08:21:56  73  ,aud_g26
08:21:56  74  ,aud_g27
08:21:56  75  ,aud_g28
08:21:56  76  ,aud_g29
08:21:56  77  ,aud_g30
08:21:56  78  ,aud_g31
08:21:56  79  ,aud_g32
08:21:56  80  ,aud_g33
08:21:56  81  ,aud_g34
08:21:56  82  ,aud_g35
08:21:56  83  ,aud_g36
08:21:56  84  ,aud_g37
08:21:56  85  ,aud_g38
08:21:56  86  ,aud_g39
08:21:56  87  ,aud_g40
08:21:56  88  ,gbp_g00
08:21:56  89  ,gbp_g01
08:21:56  90  ,gbp_g02
08:21:56  91  ,gbp_g03
08:21:56  92  ,gbp_g04
08:21:56  93  ,gbp_g05
08:21:56  94  ,gbp_g06
08:21:56  95  ,gbp_g07
08:21:56  96  ,gbp_g08
08:21:56  97  ,gbp_g09
08:21:56  98  ,gbp_g10
08:21:56  99  ,gbp_g11
08:21:56 100  ,gbp_g12
08:21:56 101  ,gbp_g13
08:21:56 102  ,gbp_g14
08:21:56 103  ,gbp_g15
08:21:56 104  ,gbp_g16
08:21:56 105  ,gbp_g17
08:21:56 106  ,gbp_g18
08:21:56 107  ,gbp_g19
08:21:56 108  ,gbp_g20
08:21:56 109  ,gbp_g21
08:21:56 110  ,gbp_g22
08:21:56 111  ,gbp_g23
08:21:56 112  ,gbp_g24
08:21:56 113  ,gbp_g25
08:21:56 114  ,gbp_g26
08:21:56 115  ,gbp_g27
08:21:56 116  ,gbp_g28
08:21:56 117  ,gbp_g29
08:21:56 118  ,gbp_g30
08:21:56 119  ,gbp_g31
08:21:56 120  ,gbp_g32
08:21:56 121  ,gbp_g33
08:21:56 122  ,gbp_g34
08:21:56 123  ,gbp_g35
08:21:56 124  ,gbp_g36
08:21:56 125  ,gbp_g37
08:21:56 126  ,gbp_g38
08:21:56 127  ,gbp_g39
08:21:56 128  ,gbp_g40
08:21:56 129  ,jpy_g00
08:21:56 130  ,jpy_g01
08:21:56 131  ,jpy_g02
08:21:56 132  ,jpy_g03
08:21:56 133  ,jpy_g04
08:21:56 134  ,jpy_g05
08:21:56 135  ,jpy_g06
08:21:56 136  ,jpy_g07
08:21:56 137  ,jpy_g08
08:21:56 138  ,jpy_g09
08:21:56 139  ,jpy_g10
08:21:56 140  ,jpy_g11
08:21:56 141  ,jpy_g12
08:21:56 142  ,jpy_g13
08:21:56 143  ,jpy_g14
08:21:56 144  ,jpy_g15
08:21:56 145  ,jpy_g16
08:21:56 146  ,jpy_g17
08:21:56 147  ,jpy_g18
08:21:56 148  ,jpy_g19
08:21:56 149  ,jpy_g20
08:21:56 150  ,jpy_g21
08:21:56 151  ,jpy_g22
08:21:56 152  ,jpy_g23
08:21:56 153  ,jpy_g24
08:21:56 154  ,jpy_g25
08:21:56 155  ,jpy_g26
08:21:56 156  ,jpy_g27
08:21:56 157  ,jpy_g28
08:21:56 158  ,jpy_g29
08:21:56 159  ,jpy_g30
08:21:56 160  ,jpy_g31
08:21:56 161  ,jpy_g32
08:21:56 162  ,jpy_g33
08:21:56 163  ,jpy_g34
08:21:56 164  ,jpy_g35
08:21:56 165  ,jpy_g36
08:21:56 166  ,jpy_g37
08:21:56 167  ,jpy_g38
08:21:56 168  ,jpy_g39
08:21:56 169  ,jpy_g40
08:21:56 170  ,cad_g00
08:21:56 171  ,cad_g01
08:21:56 172  ,cad_g02
08:21:56 173  ,cad_g03
08:21:56 174  ,cad_g04
08:21:56 175  ,cad_g05
08:21:56 176  ,cad_g06
08:21:56 177  ,cad_g07
08:21:56 178  ,cad_g08
08:21:56 179  ,cad_g09
08:21:56 180  ,cad_g10
08:21:56 181  ,cad_g11
08:21:56 182  ,cad_g12
08:21:56 183  ,cad_g13
08:21:56 184  ,cad_g14
08:21:56 185  ,cad_g15
08:21:56 186  ,cad_g16
08:21:56 187  ,cad_g17
08:21:56 188  ,cad_g18
08:21:56 189  ,cad_g19
08:21:56 190  ,cad_g20
08:21:56 191  ,cad_g21
08:21:56 192  ,cad_g22
08:21:56 193  ,cad_g23
08:21:56 194  ,cad_g24
08:21:56 195  ,cad_g25
08:21:56 196  ,cad_g26
08:21:56 197  ,cad_g27
08:21:56 198  ,cad_g28
08:21:56 199  ,cad_g29
08:21:56 200  ,cad_g30
08:21:56 201  ,cad_g31
08:21:56 202  ,cad_g32
08:21:56 203  ,cad_g33
08:21:56 204  ,cad_g34
08:21:56 205  ,cad_g35
08:21:56 206  ,cad_g36
08:21:56 207  ,cad_g37
08:21:56 208  ,cad_g38
08:21:56 209  ,cad_g39
08:21:56 210  ,cad_g40
08:21:56 211  ,chf_g00
08:21:56 212  ,chf_g01
08:21:56 213  ,chf_g02
08:21:56 214  ,chf_g03
08:21:56 215  ,chf_g04
08:21:56 216  ,chf_g05
08:21:56 217  ,chf_g06
08:21:56 218  ,chf_g07
08:21:56 219  ,chf_g08
08:21:56 220  ,chf_g09
08:21:56 221  ,chf_g10
08:21:56 222  ,chf_g11
08:21:56 223  ,chf_g12
08:21:56 224  ,chf_g13
08:21:56 225  ,chf_g14
08:21:56 226  ,chf_g15
08:21:56 227  ,chf_g16
08:21:56 228  ,chf_g17
08:21:56 229  ,chf_g18
08:21:56 230  ,chf_g19
08:21:56 231  ,chf_g20
08:21:56 232  ,chf_g21
08:21:56 233  ,chf_g22
08:21:56 234  ,chf_g23
08:21:56 235  ,chf_g24
08:21:56 236  ,chf_g25
08:21:56 237  ,chf_g26
08:21:56 238  ,chf_g27
08:21:56 239  ,chf_g28
08:21:56 240  ,chf_g29
08:21:56 241  ,chf_g30
08:21:56 242  ,chf_g31
08:21:56 243  ,chf_g32
08:21:56 244  ,chf_g33
08:21:56 245  ,chf_g34
08:21:56 246  ,chf_g35
08:21:56 247  ,chf_g36
08:21:56 248  ,chf_g37
08:21:56 249  ,chf_g38
08:21:56 250  ,chf_g39
08:21:56 251  ,chf_g40
08:21:56 252  FROM aud_ms14 m
08:21:56 253  WHERE m.ydate = '&1'||' '||'&2'
08:21:56 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:20:00'

View created.

Elapsed: 00:00:00.14
08:21:56 SQL> 
08:21:56 SQL> -- rpt
08:21:56 SQL> -- We should see just 1 row:
08:21:56 SQL> 
08:21:56 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
08:21:56 SQL> 
08:21:56 SQL> -- Build the model:
08:21:56 SQL> CREATE OR REPLACE VIEW bme AS
08:21:56   2  SELECT
08:21:56   3  'aud'||m.ydate prdate
08:21:56   4  ,gatt
08:21:56   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:21:56   6  ,eur_g00
08:21:56   7  ,eur_g01
08:21:56   8  ,eur_g02
08:21:56   9  ,eur_g03
08:21:56  10  ,eur_g04
08:21:56  11  ,eur_g05
08:21:56  12  ,eur_g06
08:21:56  13  ,eur_g07
08:21:56  14  ,eur_g08
08:21:56  15  ,eur_g09
08:21:56  16  ,eur_g10
08:21:56  17  ,eur_g11
08:21:56  18  ,eur_g12
08:21:56  19  ,eur_g13
08:21:56  20  ,eur_g14
08:21:56  21  ,eur_g15
08:21:56  22  ,eur_g16
08:21:56  23  ,eur_g17
08:21:56  24  ,eur_g18
08:21:56  25  ,eur_g19
08:21:56  26  ,eur_g20
08:21:56  27  ,eur_g21
08:21:56  28  ,eur_g22
08:21:56  29  ,eur_g23
08:21:56  30  ,eur_g24
08:21:56  31  ,eur_g25
08:21:56  32  ,eur_g26
08:21:56  33  ,eur_g27
08:21:56  34  ,eur_g28
08:21:56  35  ,eur_g29
08:21:56  36  ,eur_g30
08:21:56  37  ,eur_g31
08:21:56  38  ,eur_g32
08:21:56  39  ,eur_g33
08:21:56  40  ,eur_g34
08:21:56  41  ,eur_g35
08:21:56  42  ,eur_g36
08:21:56  43  ,eur_g37
08:21:56  44  ,eur_g38
08:21:56  45  ,eur_g39
08:21:56  46  ,eur_g40
08:21:56  47  ,aud_g00
08:21:56  48  ,aud_g01
08:21:56  49  ,aud_g02
08:21:56  50  ,aud_g03
08:21:56  51  ,aud_g04
08:21:56  52  ,aud_g05
08:21:56  53  ,aud_g06
08:21:56  54  ,aud_g07
08:21:56  55  ,aud_g08
08:21:56  56  ,aud_g09
08:21:56  57  ,aud_g10
08:21:56  58  ,aud_g11
08:21:56  59  ,aud_g12
08:21:56  60  ,aud_g13
08:21:56  61  ,aud_g14
08:21:56  62  ,aud_g15
08:21:56  63  ,aud_g16
08:21:56  64  ,aud_g17
08:21:56  65  ,aud_g18
08:21:56  66  ,aud_g19
08:21:56  67  ,aud_g20
08:21:56  68  ,aud_g21
08:21:56  69  ,aud_g22
08:21:56  70  ,aud_g23
08:21:56  71  ,aud_g24
08:21:56  72  ,aud_g25
08:21:56  73  ,aud_g26
08:21:56  74  ,aud_g27
08:21:56  75  ,aud_g28
08:21:56  76  ,aud_g29
08:21:56  77  ,aud_g30
08:21:56  78  ,aud_g31
08:21:56  79  ,aud_g32
08:21:56  80  ,aud_g33
08:21:56  81  ,aud_g34
08:21:56  82  ,aud_g35
08:21:56  83  ,aud_g36
08:21:56  84  ,aud_g37
08:21:56  85  ,aud_g38
08:21:56  86  ,aud_g39
08:21:56  87  ,aud_g40
08:21:56  88  ,gbp_g00
08:21:56  89  ,gbp_g01
08:21:56  90  ,gbp_g02
08:21:56  91  ,gbp_g03
08:21:56  92  ,gbp_g04
08:21:56  93  ,gbp_g05
08:21:56  94  ,gbp_g06
08:21:56  95  ,gbp_g07
08:21:56  96  ,gbp_g08
08:21:56  97  ,gbp_g09
08:21:56  98  ,gbp_g10
08:21:56  99  ,gbp_g11
08:21:56 100  ,gbp_g12
08:21:56 101  ,gbp_g13
08:21:56 102  ,gbp_g14
08:21:56 103  ,gbp_g15
08:21:56 104  ,gbp_g16
08:21:56 105  ,gbp_g17
08:21:56 106  ,gbp_g18
08:21:56 107  ,gbp_g19
08:21:56 108  ,gbp_g20
08:21:56 109  ,gbp_g21
08:21:56 110  ,gbp_g22
08:21:56 111  ,gbp_g23
08:21:56 112  ,gbp_g24
08:21:56 113  ,gbp_g25
08:21:56 114  ,gbp_g26
08:21:56 115  ,gbp_g27
08:21:56 116  ,gbp_g28
08:21:56 117  ,gbp_g29
08:21:56 118  ,gbp_g30
08:21:56 119  ,gbp_g31
08:21:56 120  ,gbp_g32
08:21:56 121  ,gbp_g33
08:21:56 122  ,gbp_g34
08:21:56 123  ,gbp_g35
08:21:56 124  ,gbp_g36
08:21:56 125  ,gbp_g37
08:21:56 126  ,gbp_g38
08:21:56 127  ,gbp_g39
08:21:56 128  ,gbp_g40
08:21:56 129  ,jpy_g00
08:21:56 130  ,jpy_g01
08:21:56 131  ,jpy_g02
08:21:56 132  ,jpy_g03
08:21:56 133  ,jpy_g04
08:21:56 134  ,jpy_g05
08:21:56 135  ,jpy_g06
08:21:56 136  ,jpy_g07
08:21:56 137  ,jpy_g08
08:21:56 138  ,jpy_g09
08:21:56 139  ,jpy_g10
08:21:56 140  ,jpy_g11
08:21:56 141  ,jpy_g12
08:21:56 142  ,jpy_g13
08:21:56 143  ,jpy_g14
08:21:56 144  ,jpy_g15
08:21:56 145  ,jpy_g16
08:21:56 146  ,jpy_g17
08:21:56 147  ,jpy_g18
08:21:56 148  ,jpy_g19
08:21:56 149  ,jpy_g20
08:21:56 150  ,jpy_g21
08:21:56 151  ,jpy_g22
08:21:56 152  ,jpy_g23
08:21:56 153  ,jpy_g24
08:21:56 154  ,jpy_g25
08:21:56 155  ,jpy_g26
08:21:56 156  ,jpy_g27
08:21:56 157  ,jpy_g28
08:21:56 158  ,jpy_g29
08:21:56 159  ,jpy_g30
08:21:56 160  ,jpy_g31
08:21:56 161  ,jpy_g32
08:21:56 162  ,jpy_g33
08:21:56 163  ,jpy_g34
08:21:56 164  ,jpy_g35
08:21:56 165  ,jpy_g36
08:21:56 166  ,jpy_g37
08:21:56 167  ,jpy_g38
08:21:56 168  ,jpy_g39
08:21:56 169  ,jpy_g40
08:21:56 170  ,cad_g00
08:21:56 171  ,cad_g01
08:21:56 172  ,cad_g02
08:21:56 173  ,cad_g03
08:21:56 174  ,cad_g04
08:21:56 175  ,cad_g05
08:21:56 176  ,cad_g06
08:21:56 177  ,cad_g07
08:21:56 178  ,cad_g08
08:21:56 179  ,cad_g09
08:21:56 180  ,cad_g10
08:21:56 181  ,cad_g11
08:21:56 182  ,cad_g12
08:21:56 183  ,cad_g13
08:21:56 184  ,cad_g14
08:21:56 185  ,cad_g15
08:21:56 186  ,cad_g16
08:21:56 187  ,cad_g17
08:21:56 188  ,cad_g18
08:21:56 189  ,cad_g19
08:21:56 190  ,cad_g20
08:21:56 191  ,cad_g21
08:21:56 192  ,cad_g22
08:21:56 193  ,cad_g23
08:21:56 194  ,cad_g24
08:21:56 195  ,cad_g25
08:21:56 196  ,cad_g26
08:21:56 197  ,cad_g27
08:21:56 198  ,cad_g28
08:21:56 199  ,cad_g29
08:21:56 200  ,cad_g30
08:21:56 201  ,cad_g31
08:21:56 202  ,cad_g32
08:21:56 203  ,cad_g33
08:21:56 204  ,cad_g34
08:21:56 205  ,cad_g35
08:21:56 206  ,cad_g36
08:21:56 207  ,cad_g37
08:21:56 208  ,cad_g38
08:21:56 209  ,cad_g39
08:21:56 210  ,cad_g40
08:21:56 211  ,chf_g00
08:21:56 212  ,chf_g01
08:21:56 213  ,chf_g02
08:21:56 214  ,chf_g03
08:21:56 215  ,chf_g04
08:21:56 216  ,chf_g05
08:21:56 217  ,chf_g06
08:21:56 218  ,chf_g07
08:21:56 219  ,chf_g08
08:21:56 220  ,chf_g09
08:21:56 221  ,chf_g10
08:21:56 222  ,chf_g11
08:21:56 223  ,chf_g12
08:21:56 224  ,chf_g13
08:21:56 225  ,chf_g14
08:21:56 226  ,chf_g15
08:21:56 227  ,chf_g16
08:21:56 228  ,chf_g17
08:21:56 229  ,chf_g18
08:21:56 230  ,chf_g19
08:21:56 231  ,chf_g20
08:21:56 232  ,chf_g21
08:21:56 233  ,chf_g22
08:21:56 234  ,chf_g23
08:21:56 235  ,chf_g24
08:21:56 236  ,chf_g25
08:21:56 237  ,chf_g26
08:21:56 238  ,chf_g27
08:21:56 239  ,chf_g28
08:21:56 240  ,chf_g29
08:21:56 241  ,chf_g30
08:21:56 242  ,chf_g31
08:21:56 243  ,chf_g32
08:21:56 244  ,chf_g33
08:21:56 245  ,chf_g34
08:21:56 246  ,chf_g35
08:21:56 247  ,chf_g36
08:21:56 248  ,chf_g37
08:21:56 249  ,chf_g38
08:21:56 250  ,chf_g39
08:21:56 251  ,chf_g40
08:21:56 252  FROM aud_ms14 m
08:21:56 253  WHERE gatt IN('nup','up')
08:21:56 254  AND 1+m.ydate < '&1'||' '||'&2'
08:21:56 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:20:00'

View created.

Elapsed: 00:00:00.11
08:21:56 SQL> 
08:21:56 SQL> -- rpt
08:21:56 SQL> 
08:21:56 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt;

GAT COUNT(PRDATE)
--- -------------
nup	    13260
up	     6627

Elapsed: 00:00:00.05
08:21:56 SQL> 
08:21:56 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-16 10:15:00

Elapsed: 00:00:00.03
08:21:56 SQL> 
08:21:56 SQL> -- Now build model from bme and score sme
08:21:56 SQL> @score1.sql
08:21:56 SQL> -- score1.sql
08:21:56 SQL> 
08:21:56 SQL> -- Does the 1st SVM score
08:21:56 SQL> 
08:21:56 SQL> -- Fill up svmc_apply_prep
08:21:56 SQL> @score.sql
08:21:56 SQL> --
08:21:56 SQL> -- score.sql
08:21:56 SQL> --
08:21:56 SQL> 
08:21:56 SQL> -- usage: score.sql
08:21:56 SQL> 
08:21:56 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
08:21:56 SQL> 
08:21:56 SQL> DEFINE target	= 'gatt'
08:21:56 SQL> DEFINE model_name = 'forex14'
08:21:56 SQL> DEFINE bldtable	= 'bme'
08:21:56 SQL> DEFINE scoretable = 'sme'
08:21:56 SQL> DEFINE case_id	= 'prdate'
08:21:56 SQL> 
08:21:56 SQL> -- Define a variable to help me exclude some columns from some data mining calls
08:21:56 SQL> DEFINE exclude1 = "'&target','&case_id'"
08:21:56 SQL> 
08:21:56 SQL> -- Builds an SVM model using pl/sql.
08:21:56 SQL> 
08:21:56 SQL> -----------------------------------------------------------------------
08:21:56 SQL> --			    BUILD THE MODEL
08:21:56 SQL> -----------------------------------------------------------------------
08:21:56 SQL> 
08:21:56 SQL> -- Cleanup old build data preparation objects for repeat runs
08:21:56 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
08:21:56 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
08:21:56 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
08:21:56 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
08:21:56 SQL> 
08:21:56 SQL> 
08:21:56 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
08:21:56 SQL> --
08:21:56 SQL> -- DROP	TABLE svmc_settings ;
08:21:56 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
08:21:56 SQL> -- DELETE svmc_settings;
08:21:56 SQL> 
08:21:56 SQL> -- The default classification algorithm is Naive Bayes. So override
08:21:56 SQL> -- this choice to SVM using a settings table.
08:21:56 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
08:21:56 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
08:21:56 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
08:21:56 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
08:21:56 SQL> -- models.
08:21:56 SQL> --
08:21:56 SQL> 
08:21:56 SQL> -- Do this once and then comment it out.
08:21:56 SQL> -- That makes script go faster.
08:21:56 SQL> -- BEGIN
08:21:56 SQL> -- -- Populate settings table
08:21:56 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:21:56 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
08:21:56 SQL> --
08:21:56 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:21:56 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
08:21:56 SQL> --
08:21:56 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:21:56 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
08:21:56 SQL> --   COMMIT;
08:21:56 SQL> -- END;
08:21:56 SQL> -- /
08:21:56 SQL> 
08:21:56 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
08:21:56 SQL> 
08:21:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
08:21:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:21:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
08:21:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
08:21:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:21:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
08:21:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
08:21:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:21:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:21:57 SQL> 
08:21:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
08:21:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:21:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:21:57 SQL> 
08:21:57 SQL> --------------------------------
08:21:57 SQL> -- PREPARE BUILD (TRAINING) DATA
08:21:57 SQL> --
08:21:57 SQL> 
08:21:57 SQL> -- 1. Missing Value treatment for all Predictors and
08:21:57 SQL> -- 2. Outlier Treatment and
08:21:57 SQL> -- 3. Normalization are performed below.
08:21:57 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
08:21:57 SQL> --    normalized here.
08:21:57 SQL> 
08:21:57 SQL> BEGIN
08:21:57   2  	-- Perform missing value treatment for all predictors
08:21:57   3  	-- create miss tables
08:21:57   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
08:21:57   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
08:21:57   6  
08:21:57   7  	-- populate miss tables
08:21:57   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
08:21:57   9  	  miss_table_name => 'svmc_miss_num',
08:21:57  10  	  data_table_name => '&bldtable',
08:21:57  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:21:57  12  
08:21:57  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
08:21:57  14  	  miss_table_name => 'svmc_miss_cat',
08:21:57  15  	  data_table_name => '&bldtable',
08:21:57  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:21:57  17  
08:21:57  18  	-- xform input data to replace missing values
08:21:57  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:21:57  20  	  miss_table_name => 'svmc_miss_num',
08:21:57  21  	  data_table_name => '&bldtable',
08:21:57  22  	  xform_view_name => 'xformed_build_miss_num');
08:21:57  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:21:57  24  	  miss_table_name => 'svmc_miss_cat',
08:21:57  25  	  data_table_name => '&bldtable',
08:21:57  26  	  xform_view_name => 'xformed_build_miss_cat');
08:21:57  27  
08:21:57  28  	-- Perform outlier treatment.
08:21:57  29  	-- create clip table
08:21:57  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
08:21:57  31  
08:21:57  32  	-- populate clip table
08:21:57  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
08:21:57  34  	  clip_table_name => 'svmc_clip',
08:21:57  35  	  data_table_name => '&bldtable',
08:21:57  36  	  tail_frac	  => 0.025,
08:21:57  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:21:57  38  
08:21:57  39  	-- xform input data to winsorized data
08:21:57  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
08:21:57  41  	  clip_table_name => 'svmc_clip',
08:21:57  42  	  data_table_name => '&bldtable',
08:21:57  43  	  xform_view_name => 'svmc_winsor');
08:21:57  44  
08:21:57  45  	-- create normalization table
08:21:57  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
08:21:57  47  
08:21:57  48  	-- populate normalization table based on winsorized data
08:21:57  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
08:21:57  50  	  norm_table_name => 'svmc_norm',
08:21:57  51  	  data_table_name => 'svmc_winsor',
08:21:57  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:21:57  53  
08:21:57  54  	-- normalize the original data
08:21:57  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:21:57  56  	  norm_table_name => 'svmc_norm',
08:21:57  57  	  data_table_name => '&bldtable',
08:21:57  58  	  xform_view_name => 'svmc_build_prep');
08:21:57  59  END;
08:21:57  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.78
08:22:16 SQL> 
08:22:16 SQL> ---------------------
08:22:16 SQL> -- CREATE A NEW MODEL
08:22:16 SQL> --
08:22:16 SQL> -- Cleanup old model with the same name for repeat runs
08:22:16 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
08:22:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:22:16   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:02.43
08:22:18 SQL> 
08:22:18 SQL> -- Build a new SVM Model
08:22:18 SQL> BEGIN
08:22:18   2  	DBMS_DATA_MINING.CREATE_MODEL(
08:22:18   3  	  model_name	      => '&model_name',
08:22:18   4  	  mining_function     => dbms_data_mining.classification,
08:22:18   5  	  data_table_name     => 'svmc_build_prep',
08:22:18   6  	  case_id_column_name => '&case_id',
08:22:18   7  	  target_column_name  => '&target',
08:22:18   8  	  settings_table_name => 'svmc_settings');
08:22:18   9  END;
08:22:18  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.41
08:22:43 SQL> 
08:22:43 SQL> -----------------------------------------------------------------------
08:22:43 SQL> --			       APPLY/score THE MODEL
08:22:43 SQL> -----------------------------------------------------------------------
08:22:43 SQL> 
08:22:43 SQL> -- Cleanup old scoring data preparation objects for repeat runs
08:22:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
08:22:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:22:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:22:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
08:22:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:22:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:22:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
08:22:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:22:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
08:22:44 SQL> -----------------------
08:22:44 SQL> -- PREPARE SCORING DATA
08:22:44 SQL> --
08:22:44 SQL> -- If the data for model creation has been prepared, then the data
08:22:44 SQL> -- to be scored using the model must be prepared in the same manner
08:22:44 SQL> -- in order to obtain meaningful results.
08:22:44 SQL> --
08:22:44 SQL> -- 1. Missing Value treatment for all Predictors and
08:22:44 SQL> -- 2. Normalization
08:22:44 SQL> -- No outlier treatment will be performed during test and apply. The
08:22:44 SQL> -- normalization step is sufficient, since the normalization parameters
08:22:44 SQL> -- already capture the effects of outlier treatment done with build data.
08:22:44 SQL> --
08:22:44 SQL> BEGIN
08:22:44   2  	-- Xform Test data to replace missing values
08:22:44   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:22:44   4  	  miss_table_name => 'svmc_miss_num',
08:22:44   5  	  data_table_name => '&scoretable',
08:22:44   6  	  xform_view_name => 'xformed_apply_miss_num');
08:22:44   7  
08:22:44   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:22:44   9  	  miss_table_name => 'svmc_miss_cat',
08:22:44  10  	  data_table_name => '&scoretable',
08:22:44  11  	  xform_view_name => 'xformed_apply_miss_cat');
08:22:44  12  
08:22:44  13  	-- Normalize the data to be scored
08:22:44  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:22:44  15  	  norm_table_name => 'svmc_norm',
08:22:44  16  	  data_table_name => '&scoretable',
08:22:44  17  	  xform_view_name => 'svmc_apply_prep');
08:22:44  18  END;
08:22:44  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
08:22:45 SQL> 
08:22:45 SQL> -- Use same model_name used in score.sql
08:22:45 SQL> DEFINE model_name = 'forex14'
08:22:45 SQL> 
08:22:45 SQL> -- CREATE TABLE fxscores8hp (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
08:22:45 SQL> 
08:22:45 SQL> DELETE fxscores8hp WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
08:22:45 SQL> 
08:22:45 SQL> INSERT INTO fxscores8hp (prdate,score,rundate,pair,ydate)
08:22:45   2  SELECT
08:22:45   3  prdate
08:22:45   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
08:22:45   5  ,sysdate
08:22:45   6  ,SUBSTR(prdate,1,3)pair
08:22:45   7  ,SUBSTR(prdate,4,19)ydate
08:22:45   8  FROM svmc_apply_prep
08:22:45   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
08:22:45 SQL> @aud_score1day.sql  2010-12-17 10:10:00
08:22:45 SQL> --
08:22:45 SQL> -- aud_score1day.sql
08:22:45 SQL> --
08:22:45 SQL> 
08:22:45 SQL> CREATE OR REPLACE VIEW sme AS
08:22:45   2  SELECT
08:22:45   3  'aud'||m.ydate prdate
08:22:45   4  ,NULL gatt
08:22:45   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:22:45   6  ,eur_g00
08:22:45   7  ,eur_g01
08:22:45   8  ,eur_g02
08:22:45   9  ,eur_g03
08:22:45  10  ,eur_g04
08:22:45  11  ,eur_g05
08:22:45  12  ,eur_g06
08:22:45  13  ,eur_g07
08:22:45  14  ,eur_g08
08:22:45  15  ,eur_g09
08:22:45  16  ,eur_g10
08:22:45  17  ,eur_g11
08:22:45  18  ,eur_g12
08:22:45  19  ,eur_g13
08:22:45  20  ,eur_g14
08:22:45  21  ,eur_g15
08:22:45  22  ,eur_g16
08:22:45  23  ,eur_g17
08:22:45  24  ,eur_g18
08:22:45  25  ,eur_g19
08:22:45  26  ,eur_g20
08:22:45  27  ,eur_g21
08:22:45  28  ,eur_g22
08:22:45  29  ,eur_g23
08:22:45  30  ,eur_g24
08:22:45  31  ,eur_g25
08:22:45  32  ,eur_g26
08:22:45  33  ,eur_g27
08:22:45  34  ,eur_g28
08:22:45  35  ,eur_g29
08:22:45  36  ,eur_g30
08:22:45  37  ,eur_g31
08:22:45  38  ,eur_g32
08:22:45  39  ,eur_g33
08:22:45  40  ,eur_g34
08:22:45  41  ,eur_g35
08:22:45  42  ,eur_g36
08:22:45  43  ,eur_g37
08:22:45  44  ,eur_g38
08:22:45  45  ,eur_g39
08:22:45  46  ,eur_g40
08:22:45  47  ,aud_g00
08:22:45  48  ,aud_g01
08:22:45  49  ,aud_g02
08:22:45  50  ,aud_g03
08:22:45  51  ,aud_g04
08:22:45  52  ,aud_g05
08:22:45  53  ,aud_g06
08:22:45  54  ,aud_g07
08:22:45  55  ,aud_g08
08:22:45  56  ,aud_g09
08:22:45  57  ,aud_g10
08:22:45  58  ,aud_g11
08:22:45  59  ,aud_g12
08:22:45  60  ,aud_g13
08:22:45  61  ,aud_g14
08:22:45  62  ,aud_g15
08:22:45  63  ,aud_g16
08:22:45  64  ,aud_g17
08:22:45  65  ,aud_g18
08:22:45  66  ,aud_g19
08:22:45  67  ,aud_g20
08:22:45  68  ,aud_g21
08:22:45  69  ,aud_g22
08:22:45  70  ,aud_g23
08:22:45  71  ,aud_g24
08:22:45  72  ,aud_g25
08:22:45  73  ,aud_g26
08:22:45  74  ,aud_g27
08:22:45  75  ,aud_g28
08:22:45  76  ,aud_g29
08:22:45  77  ,aud_g30
08:22:45  78  ,aud_g31
08:22:45  79  ,aud_g32
08:22:45  80  ,aud_g33
08:22:45  81  ,aud_g34
08:22:45  82  ,aud_g35
08:22:45  83  ,aud_g36
08:22:45  84  ,aud_g37
08:22:45  85  ,aud_g38
08:22:45  86  ,aud_g39
08:22:45  87  ,aud_g40
08:22:45  88  ,gbp_g00
08:22:45  89  ,gbp_g01
08:22:45  90  ,gbp_g02
08:22:45  91  ,gbp_g03
08:22:45  92  ,gbp_g04
08:22:45  93  ,gbp_g05
08:22:45  94  ,gbp_g06
08:22:45  95  ,gbp_g07
08:22:45  96  ,gbp_g08
08:22:45  97  ,gbp_g09
08:22:45  98  ,gbp_g10
08:22:45  99  ,gbp_g11
08:22:45 100  ,gbp_g12
08:22:45 101  ,gbp_g13
08:22:45 102  ,gbp_g14
08:22:45 103  ,gbp_g15
08:22:45 104  ,gbp_g16
08:22:45 105  ,gbp_g17
08:22:45 106  ,gbp_g18
08:22:45 107  ,gbp_g19
08:22:45 108  ,gbp_g20
08:22:45 109  ,gbp_g21
08:22:45 110  ,gbp_g22
08:22:45 111  ,gbp_g23
08:22:45 112  ,gbp_g24
08:22:45 113  ,gbp_g25
08:22:45 114  ,gbp_g26
08:22:45 115  ,gbp_g27
08:22:45 116  ,gbp_g28
08:22:45 117  ,gbp_g29
08:22:45 118  ,gbp_g30
08:22:45 119  ,gbp_g31
08:22:45 120  ,gbp_g32
08:22:45 121  ,gbp_g33
08:22:45 122  ,gbp_g34
08:22:45 123  ,gbp_g35
08:22:45 124  ,gbp_g36
08:22:45 125  ,gbp_g37
08:22:45 126  ,gbp_g38
08:22:45 127  ,gbp_g39
08:22:45 128  ,gbp_g40
08:22:45 129  ,jpy_g00
08:22:45 130  ,jpy_g01
08:22:45 131  ,jpy_g02
08:22:45 132  ,jpy_g03
08:22:45 133  ,jpy_g04
08:22:45 134  ,jpy_g05
08:22:45 135  ,jpy_g06
08:22:45 136  ,jpy_g07
08:22:45 137  ,jpy_g08
08:22:45 138  ,jpy_g09
08:22:45 139  ,jpy_g10
08:22:45 140  ,jpy_g11
08:22:45 141  ,jpy_g12
08:22:45 142  ,jpy_g13
08:22:45 143  ,jpy_g14
08:22:45 144  ,jpy_g15
08:22:45 145  ,jpy_g16
08:22:45 146  ,jpy_g17
08:22:45 147  ,jpy_g18
08:22:45 148  ,jpy_g19
08:22:45 149  ,jpy_g20
08:22:45 150  ,jpy_g21
08:22:45 151  ,jpy_g22
08:22:45 152  ,jpy_g23
08:22:45 153  ,jpy_g24
08:22:45 154  ,jpy_g25
08:22:45 155  ,jpy_g26
08:22:45 156  ,jpy_g27
08:22:45 157  ,jpy_g28
08:22:45 158  ,jpy_g29
08:22:45 159  ,jpy_g30
08:22:45 160  ,jpy_g31
08:22:45 161  ,jpy_g32
08:22:45 162  ,jpy_g33
08:22:45 163  ,jpy_g34
08:22:45 164  ,jpy_g35
08:22:45 165  ,jpy_g36
08:22:45 166  ,jpy_g37
08:22:45 167  ,jpy_g38
08:22:45 168  ,jpy_g39
08:22:45 169  ,jpy_g40
08:22:45 170  ,cad_g00
08:22:45 171  ,cad_g01
08:22:45 172  ,cad_g02
08:22:45 173  ,cad_g03
08:22:45 174  ,cad_g04
08:22:45 175  ,cad_g05
08:22:45 176  ,cad_g06
08:22:45 177  ,cad_g07
08:22:45 178  ,cad_g08
08:22:45 179  ,cad_g09
08:22:45 180  ,cad_g10
08:22:45 181  ,cad_g11
08:22:45 182  ,cad_g12
08:22:45 183  ,cad_g13
08:22:45 184  ,cad_g14
08:22:45 185  ,cad_g15
08:22:45 186  ,cad_g16
08:22:45 187  ,cad_g17
08:22:45 188  ,cad_g18
08:22:45 189  ,cad_g19
08:22:45 190  ,cad_g20
08:22:45 191  ,cad_g21
08:22:45 192  ,cad_g22
08:22:45 193  ,cad_g23
08:22:45 194  ,cad_g24
08:22:45 195  ,cad_g25
08:22:45 196  ,cad_g26
08:22:45 197  ,cad_g27
08:22:45 198  ,cad_g28
08:22:45 199  ,cad_g29
08:22:45 200  ,cad_g30
08:22:45 201  ,cad_g31
08:22:45 202  ,cad_g32
08:22:45 203  ,cad_g33
08:22:45 204  ,cad_g34
08:22:45 205  ,cad_g35
08:22:45 206  ,cad_g36
08:22:45 207  ,cad_g37
08:22:45 208  ,cad_g38
08:22:45 209  ,cad_g39
08:22:45 210  ,cad_g40
08:22:45 211  ,chf_g00
08:22:45 212  ,chf_g01
08:22:45 213  ,chf_g02
08:22:45 214  ,chf_g03
08:22:45 215  ,chf_g04
08:22:45 216  ,chf_g05
08:22:45 217  ,chf_g06
08:22:45 218  ,chf_g07
08:22:45 219  ,chf_g08
08:22:45 220  ,chf_g09
08:22:45 221  ,chf_g10
08:22:45 222  ,chf_g11
08:22:45 223  ,chf_g12
08:22:45 224  ,chf_g13
08:22:45 225  ,chf_g14
08:22:45 226  ,chf_g15
08:22:45 227  ,chf_g16
08:22:45 228  ,chf_g17
08:22:45 229  ,chf_g18
08:22:45 230  ,chf_g19
08:22:45 231  ,chf_g20
08:22:45 232  ,chf_g21
08:22:45 233  ,chf_g22
08:22:45 234  ,chf_g23
08:22:45 235  ,chf_g24
08:22:45 236  ,chf_g25
08:22:45 237  ,chf_g26
08:22:45 238  ,chf_g27
08:22:45 239  ,chf_g28
08:22:45 240  ,chf_g29
08:22:45 241  ,chf_g30
08:22:45 242  ,chf_g31
08:22:45 243  ,chf_g32
08:22:45 244  ,chf_g33
08:22:45 245  ,chf_g34
08:22:45 246  ,chf_g35
08:22:45 247  ,chf_g36
08:22:45 248  ,chf_g37
08:22:45 249  ,chf_g38
08:22:45 250  ,chf_g39
08:22:45 251  ,chf_g40
08:22:45 252  FROM aud_ms14 m
08:22:45 253  WHERE m.ydate = '&1'||' '||'&2'
08:22:45 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:10:00'

View created.

Elapsed: 00:00:00.14
08:22:45 SQL> 
08:22:45 SQL> -- rpt
08:22:45 SQL> -- We should see just 1 row:
08:22:45 SQL> 
08:22:45 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
08:22:45 SQL> 
08:22:45 SQL> -- Build the model:
08:22:45 SQL> CREATE OR REPLACE VIEW bme AS
08:22:45   2  SELECT
08:22:45   3  'aud'||m.ydate prdate
08:22:45   4  ,gatt
08:22:45   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:22:45   6  ,eur_g00
08:22:45   7  ,eur_g01
08:22:45   8  ,eur_g02
08:22:45   9  ,eur_g03
08:22:45  10  ,eur_g04
08:22:45  11  ,eur_g05
08:22:45  12  ,eur_g06
08:22:45  13  ,eur_g07
08:22:45  14  ,eur_g08
08:22:45  15  ,eur_g09
08:22:45  16  ,eur_g10
08:22:45  17  ,eur_g11
08:22:45  18  ,eur_g12
08:22:45  19  ,eur_g13
08:22:45  20  ,eur_g14
08:22:45  21  ,eur_g15
08:22:45  22  ,eur_g16
08:22:45  23  ,eur_g17
08:22:45  24  ,eur_g18
08:22:45  25  ,eur_g19
08:22:45  26  ,eur_g20
08:22:45  27  ,eur_g21
08:22:45  28  ,eur_g22
08:22:45  29  ,eur_g23
08:22:45  30  ,eur_g24
08:22:45  31  ,eur_g25
08:22:45  32  ,eur_g26
08:22:45  33  ,eur_g27
08:22:45  34  ,eur_g28
08:22:45  35  ,eur_g29
08:22:45  36  ,eur_g30
08:22:45  37  ,eur_g31
08:22:45  38  ,eur_g32
08:22:45  39  ,eur_g33
08:22:45  40  ,eur_g34
08:22:45  41  ,eur_g35
08:22:45  42  ,eur_g36
08:22:45  43  ,eur_g37
08:22:45  44  ,eur_g38
08:22:45  45  ,eur_g39
08:22:45  46  ,eur_g40
08:22:45  47  ,aud_g00
08:22:45  48  ,aud_g01
08:22:45  49  ,aud_g02
08:22:45  50  ,aud_g03
08:22:45  51  ,aud_g04
08:22:45  52  ,aud_g05
08:22:45  53  ,aud_g06
08:22:45  54  ,aud_g07
08:22:45  55  ,aud_g08
08:22:45  56  ,aud_g09
08:22:45  57  ,aud_g10
08:22:45  58  ,aud_g11
08:22:45  59  ,aud_g12
08:22:45  60  ,aud_g13
08:22:45  61  ,aud_g14
08:22:45  62  ,aud_g15
08:22:45  63  ,aud_g16
08:22:45  64  ,aud_g17
08:22:45  65  ,aud_g18
08:22:45  66  ,aud_g19
08:22:45  67  ,aud_g20
08:22:45  68  ,aud_g21
08:22:45  69  ,aud_g22
08:22:45  70  ,aud_g23
08:22:45  71  ,aud_g24
08:22:45  72  ,aud_g25
08:22:45  73  ,aud_g26
08:22:45  74  ,aud_g27
08:22:45  75  ,aud_g28
08:22:45  76  ,aud_g29
08:22:45  77  ,aud_g30
08:22:45  78  ,aud_g31
08:22:45  79  ,aud_g32
08:22:45  80  ,aud_g33
08:22:45  81  ,aud_g34
08:22:45  82  ,aud_g35
08:22:45  83  ,aud_g36
08:22:45  84  ,aud_g37
08:22:45  85  ,aud_g38
08:22:45  86  ,aud_g39
08:22:45  87  ,aud_g40
08:22:45  88  ,gbp_g00
08:22:45  89  ,gbp_g01
08:22:45  90  ,gbp_g02
08:22:45  91  ,gbp_g03
08:22:45  92  ,gbp_g04
08:22:45  93  ,gbp_g05
08:22:45  94  ,gbp_g06
08:22:45  95  ,gbp_g07
08:22:45  96  ,gbp_g08
08:22:45  97  ,gbp_g09
08:22:45  98  ,gbp_g10
08:22:45  99  ,gbp_g11
08:22:45 100  ,gbp_g12
08:22:45 101  ,gbp_g13
08:22:45 102  ,gbp_g14
08:22:45 103  ,gbp_g15
08:22:45 104  ,gbp_g16
08:22:45 105  ,gbp_g17
08:22:45 106  ,gbp_g18
08:22:45 107  ,gbp_g19
08:22:45 108  ,gbp_g20
08:22:45 109  ,gbp_g21
08:22:45 110  ,gbp_g22
08:22:45 111  ,gbp_g23
08:22:45 112  ,gbp_g24
08:22:45 113  ,gbp_g25
08:22:45 114  ,gbp_g26
08:22:45 115  ,gbp_g27
08:22:45 116  ,gbp_g28
08:22:45 117  ,gbp_g29
08:22:45 118  ,gbp_g30
08:22:45 119  ,gbp_g31
08:22:45 120  ,gbp_g32
08:22:45 121  ,gbp_g33
08:22:45 122  ,gbp_g34
08:22:45 123  ,gbp_g35
08:22:45 124  ,gbp_g36
08:22:45 125  ,gbp_g37
08:22:45 126  ,gbp_g38
08:22:45 127  ,gbp_g39
08:22:45 128  ,gbp_g40
08:22:45 129  ,jpy_g00
08:22:45 130  ,jpy_g01
08:22:45 131  ,jpy_g02
08:22:45 132  ,jpy_g03
08:22:45 133  ,jpy_g04
08:22:45 134  ,jpy_g05
08:22:45 135  ,jpy_g06
08:22:45 136  ,jpy_g07
08:22:45 137  ,jpy_g08
08:22:45 138  ,jpy_g09
08:22:45 139  ,jpy_g10
08:22:45 140  ,jpy_g11
08:22:45 141  ,jpy_g12
08:22:45 142  ,jpy_g13
08:22:45 143  ,jpy_g14
08:22:45 144  ,jpy_g15
08:22:45 145  ,jpy_g16
08:22:45 146  ,jpy_g17
08:22:45 147  ,jpy_g18
08:22:45 148  ,jpy_g19
08:22:45 149  ,jpy_g20
08:22:45 150  ,jpy_g21
08:22:45 151  ,jpy_g22
08:22:45 152  ,jpy_g23
08:22:45 153  ,jpy_g24
08:22:45 154  ,jpy_g25
08:22:45 155  ,jpy_g26
08:22:45 156  ,jpy_g27
08:22:45 157  ,jpy_g28
08:22:45 158  ,jpy_g29
08:22:45 159  ,jpy_g30
08:22:45 160  ,jpy_g31
08:22:45 161  ,jpy_g32
08:22:45 162  ,jpy_g33
08:22:45 163  ,jpy_g34
08:22:45 164  ,jpy_g35
08:22:45 165  ,jpy_g36
08:22:45 166  ,jpy_g37
08:22:45 167  ,jpy_g38
08:22:45 168  ,jpy_g39
08:22:45 169  ,jpy_g40
08:22:45 170  ,cad_g00
08:22:45 171  ,cad_g01
08:22:45 172  ,cad_g02
08:22:45 173  ,cad_g03
08:22:45 174  ,cad_g04
08:22:45 175  ,cad_g05
08:22:45 176  ,cad_g06
08:22:45 177  ,cad_g07
08:22:45 178  ,cad_g08
08:22:45 179  ,cad_g09
08:22:45 180  ,cad_g10
08:22:45 181  ,cad_g11
08:22:45 182  ,cad_g12
08:22:45 183  ,cad_g13
08:22:45 184  ,cad_g14
08:22:45 185  ,cad_g15
08:22:45 186  ,cad_g16
08:22:45 187  ,cad_g17
08:22:45 188  ,cad_g18
08:22:45 189  ,cad_g19
08:22:45 190  ,cad_g20
08:22:45 191  ,cad_g21
08:22:45 192  ,cad_g22
08:22:45 193  ,cad_g23
08:22:45 194  ,cad_g24
08:22:45 195  ,cad_g25
08:22:45 196  ,cad_g26
08:22:45 197  ,cad_g27
08:22:45 198  ,cad_g28
08:22:45 199  ,cad_g29
08:22:45 200  ,cad_g30
08:22:45 201  ,cad_g31
08:22:45 202  ,cad_g32
08:22:45 203  ,cad_g33
08:22:45 204  ,cad_g34
08:22:45 205  ,cad_g35
08:22:45 206  ,cad_g36
08:22:45 207  ,cad_g37
08:22:45 208  ,cad_g38
08:22:45 209  ,cad_g39
08:22:45 210  ,cad_g40
08:22:45 211  ,chf_g00
08:22:45 212  ,chf_g01
08:22:45 213  ,chf_g02
08:22:45 214  ,chf_g03
08:22:45 215  ,chf_g04
08:22:45 216  ,chf_g05
08:22:45 217  ,chf_g06
08:22:45 218  ,chf_g07
08:22:45 219  ,chf_g08
08:22:45 220  ,chf_g09
08:22:45 221  ,chf_g10
08:22:45 222  ,chf_g11
08:22:45 223  ,chf_g12
08:22:45 224  ,chf_g13
08:22:45 225  ,chf_g14
08:22:45 226  ,chf_g15
08:22:45 227  ,chf_g16
08:22:45 228  ,chf_g17
08:22:45 229  ,chf_g18
08:22:45 230  ,chf_g19
08:22:45 231  ,chf_g20
08:22:45 232  ,chf_g21
08:22:45 233  ,chf_g22
08:22:45 234  ,chf_g23
08:22:45 235  ,chf_g24
08:22:45 236  ,chf_g25
08:22:45 237  ,chf_g26
08:22:45 238  ,chf_g27
08:22:45 239  ,chf_g28
08:22:45 240  ,chf_g29
08:22:45 241  ,chf_g30
08:22:45 242  ,chf_g31
08:22:45 243  ,chf_g32
08:22:45 244  ,chf_g33
08:22:45 245  ,chf_g34
08:22:45 246  ,chf_g35
08:22:45 247  ,chf_g36
08:22:45 248  ,chf_g37
08:22:45 249  ,chf_g38
08:22:45 250  ,chf_g39
08:22:45 251  ,chf_g40
08:22:45 252  FROM aud_ms14 m
08:22:45 253  WHERE gatt IN('nup','up')
08:22:45 254  AND 1+m.ydate < '&1'||' '||'&2'
08:22:45 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:10:00'

View created.

Elapsed: 00:00:00.12
08:22:45 SQL> 
08:22:45 SQL> -- rpt
08:22:45 SQL> 
08:22:45 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt;

GAT COUNT(PRDATE)
--- -------------
nup	    13258
up	     6627

Elapsed: 00:00:00.04
08:22:45 SQL> 
08:22:45 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-16 10:05:00

Elapsed: 00:00:00.04
08:22:45 SQL> 
08:22:45 SQL> -- Now build model from bme and score sme
08:22:45 SQL> @score1.sql
08:22:45 SQL> -- score1.sql
08:22:45 SQL> 
08:22:45 SQL> -- Does the 1st SVM score
08:22:45 SQL> 
08:22:45 SQL> -- Fill up svmc_apply_prep
08:22:45 SQL> @score.sql
08:22:45 SQL> --
08:22:45 SQL> -- score.sql
08:22:45 SQL> --
08:22:45 SQL> 
08:22:45 SQL> -- usage: score.sql
08:22:45 SQL> 
08:22:45 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
08:22:45 SQL> 
08:22:45 SQL> DEFINE target	= 'gatt'
08:22:45 SQL> DEFINE model_name = 'forex14'
08:22:45 SQL> DEFINE bldtable	= 'bme'
08:22:45 SQL> DEFINE scoretable = 'sme'
08:22:45 SQL> DEFINE case_id	= 'prdate'
08:22:45 SQL> 
08:22:45 SQL> -- Define a variable to help me exclude some columns from some data mining calls
08:22:45 SQL> DEFINE exclude1 = "'&target','&case_id'"
08:22:45 SQL> 
08:22:45 SQL> -- Builds an SVM model using pl/sql.
08:22:45 SQL> 
08:22:45 SQL> -----------------------------------------------------------------------
08:22:45 SQL> --			    BUILD THE MODEL
08:22:45 SQL> -----------------------------------------------------------------------
08:22:45 SQL> 
08:22:45 SQL> -- Cleanup old build data preparation objects for repeat runs
08:22:45 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
08:22:45 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
08:22:45 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
08:22:45 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
08:22:45 SQL> 
08:22:45 SQL> 
08:22:45 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
08:22:45 SQL> --
08:22:45 SQL> -- DROP	TABLE svmc_settings ;
08:22:45 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
08:22:45 SQL> -- DELETE svmc_settings;
08:22:45 SQL> 
08:22:45 SQL> -- The default classification algorithm is Naive Bayes. So override
08:22:45 SQL> -- this choice to SVM using a settings table.
08:22:45 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
08:22:45 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
08:22:45 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
08:22:45 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
08:22:45 SQL> -- models.
08:22:45 SQL> --
08:22:45 SQL> 
08:22:45 SQL> -- Do this once and then comment it out.
08:22:45 SQL> -- That makes script go faster.
08:22:45 SQL> -- BEGIN
08:22:45 SQL> -- -- Populate settings table
08:22:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:22:45 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
08:22:45 SQL> --
08:22:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:22:45 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
08:22:45 SQL> --
08:22:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:22:45 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
08:22:45 SQL> --   COMMIT;
08:22:45 SQL> -- END;
08:22:45 SQL> -- /
08:22:45 SQL> 
08:22:45 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
08:22:45 SQL> 
08:22:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
08:22:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:22:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:22:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
08:22:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:22:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
08:22:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
08:22:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:22:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:22:46 SQL> 
08:22:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
08:22:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:22:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:22:46 SQL> 
08:22:46 SQL> --------------------------------
08:22:46 SQL> -- PREPARE BUILD (TRAINING) DATA
08:22:46 SQL> --
08:22:46 SQL> 
08:22:46 SQL> -- 1. Missing Value treatment for all Predictors and
08:22:46 SQL> -- 2. Outlier Treatment and
08:22:46 SQL> -- 3. Normalization are performed below.
08:22:46 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
08:22:46 SQL> --    normalized here.
08:22:46 SQL> 
08:22:46 SQL> BEGIN
08:22:46   2  	-- Perform missing value treatment for all predictors
08:22:46   3  	-- create miss tables
08:22:46   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
08:22:46   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
08:22:46   6  
08:22:46   7  	-- populate miss tables
08:22:46   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
08:22:46   9  	  miss_table_name => 'svmc_miss_num',
08:22:46  10  	  data_table_name => '&bldtable',
08:22:46  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:22:46  12  
08:22:46  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
08:22:46  14  	  miss_table_name => 'svmc_miss_cat',
08:22:46  15  	  data_table_name => '&bldtable',
08:22:46  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:22:46  17  
08:22:46  18  	-- xform input data to replace missing values
08:22:46  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:22:46  20  	  miss_table_name => 'svmc_miss_num',
08:22:46  21  	  data_table_name => '&bldtable',
08:22:46  22  	  xform_view_name => 'xformed_build_miss_num');
08:22:46  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:22:46  24  	  miss_table_name => 'svmc_miss_cat',
08:22:46  25  	  data_table_name => '&bldtable',
08:22:46  26  	  xform_view_name => 'xformed_build_miss_cat');
08:22:46  27  
08:22:46  28  	-- Perform outlier treatment.
08:22:46  29  	-- create clip table
08:22:46  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
08:22:46  31  
08:22:46  32  	-- populate clip table
08:22:46  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
08:22:46  34  	  clip_table_name => 'svmc_clip',
08:22:46  35  	  data_table_name => '&bldtable',
08:22:46  36  	  tail_frac	  => 0.025,
08:22:46  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:22:46  38  
08:22:46  39  	-- xform input data to winsorized data
08:22:46  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
08:22:46  41  	  clip_table_name => 'svmc_clip',
08:22:46  42  	  data_table_name => '&bldtable',
08:22:46  43  	  xform_view_name => 'svmc_winsor');
08:22:46  44  
08:22:46  45  	-- create normalization table
08:22:46  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
08:22:46  47  
08:22:46  48  	-- populate normalization table based on winsorized data
08:22:46  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
08:22:46  50  	  norm_table_name => 'svmc_norm',
08:22:46  51  	  data_table_name => 'svmc_winsor',
08:22:46  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:22:46  53  
08:22:46  54  	-- normalize the original data
08:22:46  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:22:46  56  	  norm_table_name => 'svmc_norm',
08:22:46  57  	  data_table_name => '&bldtable',
08:22:46  58  	  xform_view_name => 'svmc_build_prep');
08:22:46  59  END;
08:22:46  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.50
08:23:04 SQL> 
08:23:04 SQL> ---------------------
08:23:04 SQL> -- CREATE A NEW MODEL
08:23:04 SQL> --
08:23:04 SQL> -- Cleanup old model with the same name for repeat runs
08:23:04 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
08:23:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:23:04   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.07
08:23:05 SQL> 
08:23:05 SQL> -- Build a new SVM Model
08:23:05 SQL> BEGIN
08:23:05   2  	DBMS_DATA_MINING.CREATE_MODEL(
08:23:05   3  	  model_name	      => '&model_name',
08:23:05   4  	  mining_function     => dbms_data_mining.classification,
08:23:05   5  	  data_table_name     => 'svmc_build_prep',
08:23:05   6  	  case_id_column_name => '&case_id',
08:23:05   7  	  target_column_name  => '&target',
08:23:05   8  	  settings_table_name => 'svmc_settings');
08:23:05   9  END;
08:23:05  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.60
08:23:32 SQL> 
08:23:32 SQL> -----------------------------------------------------------------------
08:23:32 SQL> --			       APPLY/score THE MODEL
08:23:32 SQL> -----------------------------------------------------------------------
08:23:32 SQL> 
08:23:32 SQL> -- Cleanup old scoring data preparation objects for repeat runs
08:23:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
08:23:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:23:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
08:23:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
08:23:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:23:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:23:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
08:23:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:23:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:23:32 SQL> -----------------------
08:23:32 SQL> -- PREPARE SCORING DATA
08:23:32 SQL> --
08:23:32 SQL> -- If the data for model creation has been prepared, then the data
08:23:32 SQL> -- to be scored using the model must be prepared in the same manner
08:23:32 SQL> -- in order to obtain meaningful results.
08:23:32 SQL> --
08:23:32 SQL> -- 1. Missing Value treatment for all Predictors and
08:23:32 SQL> -- 2. Normalization
08:23:32 SQL> -- No outlier treatment will be performed during test and apply. The
08:23:32 SQL> -- normalization step is sufficient, since the normalization parameters
08:23:32 SQL> -- already capture the effects of outlier treatment done with build data.
08:23:32 SQL> --
08:23:32 SQL> BEGIN
08:23:32   2  	-- Xform Test data to replace missing values
08:23:32   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:23:32   4  	  miss_table_name => 'svmc_miss_num',
08:23:32   5  	  data_table_name => '&scoretable',
08:23:32   6  	  xform_view_name => 'xformed_apply_miss_num');
08:23:32   7  
08:23:32   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:23:32   9  	  miss_table_name => 'svmc_miss_cat',
08:23:32  10  	  data_table_name => '&scoretable',
08:23:32  11  	  xform_view_name => 'xformed_apply_miss_cat');
08:23:32  12  
08:23:32  13  	-- Normalize the data to be scored
08:23:32  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:23:32  15  	  norm_table_name => 'svmc_norm',
08:23:32  16  	  data_table_name => '&scoretable',
08:23:32  17  	  xform_view_name => 'svmc_apply_prep');
08:23:32  18  END;
08:23:32  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
08:23:33 SQL> 
08:23:33 SQL> -- Use same model_name used in score.sql
08:23:33 SQL> DEFINE model_name = 'forex14'
08:23:33 SQL> 
08:23:33 SQL> -- CREATE TABLE fxscores8hp (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
08:23:33 SQL> 
08:23:33 SQL> DELETE fxscores8hp WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
08:23:33 SQL> 
08:23:33 SQL> INSERT INTO fxscores8hp (prdate,score,rundate,pair,ydate)
08:23:33   2  SELECT
08:23:33   3  prdate
08:23:33   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
08:23:33   5  ,sysdate
08:23:33   6  ,SUBSTR(prdate,1,3)pair
08:23:33   7  ,SUBSTR(prdate,4,19)ydate
08:23:33   8  FROM svmc_apply_prep
08:23:33   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
08:23:33 SQL> @aud_score1day.sql  2010-12-17 10:05:00
08:23:33 SQL> --
08:23:33 SQL> -- aud_score1day.sql
08:23:33 SQL> --
08:23:33 SQL> 
08:23:33 SQL> CREATE OR REPLACE VIEW sme AS
08:23:33   2  SELECT
08:23:33   3  'aud'||m.ydate prdate
08:23:33   4  ,NULL gatt
08:23:33   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:23:33   6  ,eur_g00
08:23:33   7  ,eur_g01
08:23:33   8  ,eur_g02
08:23:33   9  ,eur_g03
08:23:33  10  ,eur_g04
08:23:33  11  ,eur_g05
08:23:33  12  ,eur_g06
08:23:33  13  ,eur_g07
08:23:33  14  ,eur_g08
08:23:33  15  ,eur_g09
08:23:33  16  ,eur_g10
08:23:33  17  ,eur_g11
08:23:33  18  ,eur_g12
08:23:33  19  ,eur_g13
08:23:33  20  ,eur_g14
08:23:33  21  ,eur_g15
08:23:33  22  ,eur_g16
08:23:33  23  ,eur_g17
08:23:33  24  ,eur_g18
08:23:33  25  ,eur_g19
08:23:33  26  ,eur_g20
08:23:33  27  ,eur_g21
08:23:33  28  ,eur_g22
08:23:33  29  ,eur_g23
08:23:33  30  ,eur_g24
08:23:33  31  ,eur_g25
08:23:33  32  ,eur_g26
08:23:33  33  ,eur_g27
08:23:33  34  ,eur_g28
08:23:33  35  ,eur_g29
08:23:33  36  ,eur_g30
08:23:33  37  ,eur_g31
08:23:33  38  ,eur_g32
08:23:33  39  ,eur_g33
08:23:33  40  ,eur_g34
08:23:33  41  ,eur_g35
08:23:33  42  ,eur_g36
08:23:33  43  ,eur_g37
08:23:33  44  ,eur_g38
08:23:33  45  ,eur_g39
08:23:33  46  ,eur_g40
08:23:33  47  ,aud_g00
08:23:33  48  ,aud_g01
08:23:33  49  ,aud_g02
08:23:33  50  ,aud_g03
08:23:33  51  ,aud_g04
08:23:33  52  ,aud_g05
08:23:33  53  ,aud_g06
08:23:33  54  ,aud_g07
08:23:33  55  ,aud_g08
08:23:33  56  ,aud_g09
08:23:33  57  ,aud_g10
08:23:33  58  ,aud_g11
08:23:33  59  ,aud_g12
08:23:33  60  ,aud_g13
08:23:33  61  ,aud_g14
08:23:33  62  ,aud_g15
08:23:33  63  ,aud_g16
08:23:33  64  ,aud_g17
08:23:33  65  ,aud_g18
08:23:33  66  ,aud_g19
08:23:33  67  ,aud_g20
08:23:33  68  ,aud_g21
08:23:33  69  ,aud_g22
08:23:33  70  ,aud_g23
08:23:33  71  ,aud_g24
08:23:33  72  ,aud_g25
08:23:33  73  ,aud_g26
08:23:33  74  ,aud_g27
08:23:33  75  ,aud_g28
08:23:33  76  ,aud_g29
08:23:33  77  ,aud_g30
08:23:33  78  ,aud_g31
08:23:33  79  ,aud_g32
08:23:33  80  ,aud_g33
08:23:33  81  ,aud_g34
08:23:33  82  ,aud_g35
08:23:33  83  ,aud_g36
08:23:33  84  ,aud_g37
08:23:33  85  ,aud_g38
08:23:33  86  ,aud_g39
08:23:33  87  ,aud_g40
08:23:33  88  ,gbp_g00
08:23:33  89  ,gbp_g01
08:23:33  90  ,gbp_g02
08:23:33  91  ,gbp_g03
08:23:33  92  ,gbp_g04
08:23:33  93  ,gbp_g05
08:23:33  94  ,gbp_g06
08:23:33  95  ,gbp_g07
08:23:33  96  ,gbp_g08
08:23:33  97  ,gbp_g09
08:23:33  98  ,gbp_g10
08:23:33  99  ,gbp_g11
08:23:33 100  ,gbp_g12
08:23:33 101  ,gbp_g13
08:23:33 102  ,gbp_g14
08:23:33 103  ,gbp_g15
08:23:33 104  ,gbp_g16
08:23:33 105  ,gbp_g17
08:23:33 106  ,gbp_g18
08:23:33 107  ,gbp_g19
08:23:33 108  ,gbp_g20
08:23:33 109  ,gbp_g21
08:23:33 110  ,gbp_g22
08:23:33 111  ,gbp_g23
08:23:33 112  ,gbp_g24
08:23:33 113  ,gbp_g25
08:23:33 114  ,gbp_g26
08:23:33 115  ,gbp_g27
08:23:33 116  ,gbp_g28
08:23:33 117  ,gbp_g29
08:23:33 118  ,gbp_g30
08:23:33 119  ,gbp_g31
08:23:33 120  ,gbp_g32
08:23:33 121  ,gbp_g33
08:23:33 122  ,gbp_g34
08:23:33 123  ,gbp_g35
08:23:33 124  ,gbp_g36
08:23:33 125  ,gbp_g37
08:23:33 126  ,gbp_g38
08:23:33 127  ,gbp_g39
08:23:33 128  ,gbp_g40
08:23:33 129  ,jpy_g00
08:23:33 130  ,jpy_g01
08:23:33 131  ,jpy_g02
08:23:33 132  ,jpy_g03
08:23:33 133  ,jpy_g04
08:23:33 134  ,jpy_g05
08:23:33 135  ,jpy_g06
08:23:33 136  ,jpy_g07
08:23:33 137  ,jpy_g08
08:23:33 138  ,jpy_g09
08:23:33 139  ,jpy_g10
08:23:33 140  ,jpy_g11
08:23:33 141  ,jpy_g12
08:23:33 142  ,jpy_g13
08:23:33 143  ,jpy_g14
08:23:33 144  ,jpy_g15
08:23:33 145  ,jpy_g16
08:23:33 146  ,jpy_g17
08:23:33 147  ,jpy_g18
08:23:33 148  ,jpy_g19
08:23:33 149  ,jpy_g20
08:23:33 150  ,jpy_g21
08:23:33 151  ,jpy_g22
08:23:33 152  ,jpy_g23
08:23:33 153  ,jpy_g24
08:23:33 154  ,jpy_g25
08:23:33 155  ,jpy_g26
08:23:33 156  ,jpy_g27
08:23:33 157  ,jpy_g28
08:23:33 158  ,jpy_g29
08:23:33 159  ,jpy_g30
08:23:33 160  ,jpy_g31
08:23:33 161  ,jpy_g32
08:23:33 162  ,jpy_g33
08:23:33 163  ,jpy_g34
08:23:33 164  ,jpy_g35
08:23:33 165  ,jpy_g36
08:23:33 166  ,jpy_g37
08:23:33 167  ,jpy_g38
08:23:33 168  ,jpy_g39
08:23:33 169  ,jpy_g40
08:23:33 170  ,cad_g00
08:23:33 171  ,cad_g01
08:23:33 172  ,cad_g02
08:23:33 173  ,cad_g03
08:23:33 174  ,cad_g04
08:23:33 175  ,cad_g05
08:23:33 176  ,cad_g06
08:23:33 177  ,cad_g07
08:23:33 178  ,cad_g08
08:23:33 179  ,cad_g09
08:23:33 180  ,cad_g10
08:23:33 181  ,cad_g11
08:23:33 182  ,cad_g12
08:23:33 183  ,cad_g13
08:23:33 184  ,cad_g14
08:23:33 185  ,cad_g15
08:23:33 186  ,cad_g16
08:23:33 187  ,cad_g17
08:23:33 188  ,cad_g18
08:23:33 189  ,cad_g19
08:23:33 190  ,cad_g20
08:23:33 191  ,cad_g21
08:23:33 192  ,cad_g22
08:23:33 193  ,cad_g23
08:23:33 194  ,cad_g24
08:23:33 195  ,cad_g25
08:23:33 196  ,cad_g26
08:23:33 197  ,cad_g27
08:23:33 198  ,cad_g28
08:23:33 199  ,cad_g29
08:23:33 200  ,cad_g30
08:23:33 201  ,cad_g31
08:23:33 202  ,cad_g32
08:23:33 203  ,cad_g33
08:23:33 204  ,cad_g34
08:23:33 205  ,cad_g35
08:23:33 206  ,cad_g36
08:23:33 207  ,cad_g37
08:23:33 208  ,cad_g38
08:23:33 209  ,cad_g39
08:23:33 210  ,cad_g40
08:23:33 211  ,chf_g00
08:23:33 212  ,chf_g01
08:23:33 213  ,chf_g02
08:23:33 214  ,chf_g03
08:23:33 215  ,chf_g04
08:23:33 216  ,chf_g05
08:23:33 217  ,chf_g06
08:23:33 218  ,chf_g07
08:23:33 219  ,chf_g08
08:23:33 220  ,chf_g09
08:23:33 221  ,chf_g10
08:23:33 222  ,chf_g11
08:23:33 223  ,chf_g12
08:23:33 224  ,chf_g13
08:23:33 225  ,chf_g14
08:23:33 226  ,chf_g15
08:23:33 227  ,chf_g16
08:23:33 228  ,chf_g17
08:23:33 229  ,chf_g18
08:23:33 230  ,chf_g19
08:23:33 231  ,chf_g20
08:23:33 232  ,chf_g21
08:23:33 233  ,chf_g22
08:23:33 234  ,chf_g23
08:23:33 235  ,chf_g24
08:23:33 236  ,chf_g25
08:23:33 237  ,chf_g26
08:23:33 238  ,chf_g27
08:23:33 239  ,chf_g28
08:23:33 240  ,chf_g29
08:23:33 241  ,chf_g30
08:23:33 242  ,chf_g31
08:23:33 243  ,chf_g32
08:23:33 244  ,chf_g33
08:23:33 245  ,chf_g34
08:23:33 246  ,chf_g35
08:23:33 247  ,chf_g36
08:23:33 248  ,chf_g37
08:23:33 249  ,chf_g38
08:23:33 250  ,chf_g39
08:23:33 251  ,chf_g40
08:23:33 252  FROM aud_ms14 m
08:23:33 253  WHERE m.ydate = '&1'||' '||'&2'
08:23:33 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:05:00'

View created.

Elapsed: 00:00:00.12
08:23:33 SQL> 
08:23:33 SQL> -- rpt
08:23:33 SQL> -- We should see just 1 row:
08:23:33 SQL> 
08:23:33 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
08:23:34 SQL> 
08:23:34 SQL> -- Build the model:
08:23:34 SQL> CREATE OR REPLACE VIEW bme AS
08:23:34   2  SELECT
08:23:34   3  'aud'||m.ydate prdate
08:23:34   4  ,gatt
08:23:34   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:23:34   6  ,eur_g00
08:23:34   7  ,eur_g01
08:23:34   8  ,eur_g02
08:23:34   9  ,eur_g03
08:23:34  10  ,eur_g04
08:23:34  11  ,eur_g05
08:23:34  12  ,eur_g06
08:23:34  13  ,eur_g07
08:23:34  14  ,eur_g08
08:23:34  15  ,eur_g09
08:23:34  16  ,eur_g10
08:23:34  17  ,eur_g11
08:23:34  18  ,eur_g12
08:23:34  19  ,eur_g13
08:23:34  20  ,eur_g14
08:23:34  21  ,eur_g15
08:23:34  22  ,eur_g16
08:23:34  23  ,eur_g17
08:23:34  24  ,eur_g18
08:23:34  25  ,eur_g19
08:23:34  26  ,eur_g20
08:23:34  27  ,eur_g21
08:23:34  28  ,eur_g22
08:23:34  29  ,eur_g23
08:23:34  30  ,eur_g24
08:23:34  31  ,eur_g25
08:23:34  32  ,eur_g26
08:23:34  33  ,eur_g27
08:23:34  34  ,eur_g28
08:23:34  35  ,eur_g29
08:23:34  36  ,eur_g30
08:23:34  37  ,eur_g31
08:23:34  38  ,eur_g32
08:23:34  39  ,eur_g33
08:23:34  40  ,eur_g34
08:23:34  41  ,eur_g35
08:23:34  42  ,eur_g36
08:23:34  43  ,eur_g37
08:23:34  44  ,eur_g38
08:23:34  45  ,eur_g39
08:23:34  46  ,eur_g40
08:23:34  47  ,aud_g00
08:23:34  48  ,aud_g01
08:23:34  49  ,aud_g02
08:23:34  50  ,aud_g03
08:23:34  51  ,aud_g04
08:23:34  52  ,aud_g05
08:23:34  53  ,aud_g06
08:23:34  54  ,aud_g07
08:23:34  55  ,aud_g08
08:23:34  56  ,aud_g09
08:23:34  57  ,aud_g10
08:23:34  58  ,aud_g11
08:23:34  59  ,aud_g12
08:23:34  60  ,aud_g13
08:23:34  61  ,aud_g14
08:23:34  62  ,aud_g15
08:23:34  63  ,aud_g16
08:23:34  64  ,aud_g17
08:23:34  65  ,aud_g18
08:23:34  66  ,aud_g19
08:23:34  67  ,aud_g20
08:23:34  68  ,aud_g21
08:23:34  69  ,aud_g22
08:23:34  70  ,aud_g23
08:23:34  71  ,aud_g24
08:23:34  72  ,aud_g25
08:23:34  73  ,aud_g26
08:23:34  74  ,aud_g27
08:23:34  75  ,aud_g28
08:23:34  76  ,aud_g29
08:23:34  77  ,aud_g30
08:23:34  78  ,aud_g31
08:23:34  79  ,aud_g32
08:23:34  80  ,aud_g33
08:23:34  81  ,aud_g34
08:23:34  82  ,aud_g35
08:23:34  83  ,aud_g36
08:23:34  84  ,aud_g37
08:23:34  85  ,aud_g38
08:23:34  86  ,aud_g39
08:23:34  87  ,aud_g40
08:23:34  88  ,gbp_g00
08:23:34  89  ,gbp_g01
08:23:34  90  ,gbp_g02
08:23:34  91  ,gbp_g03
08:23:34  92  ,gbp_g04
08:23:34  93  ,gbp_g05
08:23:34  94  ,gbp_g06
08:23:34  95  ,gbp_g07
08:23:34  96  ,gbp_g08
08:23:34  97  ,gbp_g09
08:23:34  98  ,gbp_g10
08:23:34  99  ,gbp_g11
08:23:34 100  ,gbp_g12
08:23:34 101  ,gbp_g13
08:23:34 102  ,gbp_g14
08:23:34 103  ,gbp_g15
08:23:34 104  ,gbp_g16
08:23:34 105  ,gbp_g17
08:23:34 106  ,gbp_g18
08:23:34 107  ,gbp_g19
08:23:34 108  ,gbp_g20
08:23:34 109  ,gbp_g21
08:23:34 110  ,gbp_g22
08:23:34 111  ,gbp_g23
08:23:34 112  ,gbp_g24
08:23:34 113  ,gbp_g25
08:23:34 114  ,gbp_g26
08:23:34 115  ,gbp_g27
08:23:34 116  ,gbp_g28
08:23:34 117  ,gbp_g29
08:23:34 118  ,gbp_g30
08:23:34 119  ,gbp_g31
08:23:34 120  ,gbp_g32
08:23:34 121  ,gbp_g33
08:23:34 122  ,gbp_g34
08:23:34 123  ,gbp_g35
08:23:34 124  ,gbp_g36
08:23:34 125  ,gbp_g37
08:23:34 126  ,gbp_g38
08:23:34 127  ,gbp_g39
08:23:34 128  ,gbp_g40
08:23:34 129  ,jpy_g00
08:23:34 130  ,jpy_g01
08:23:34 131  ,jpy_g02
08:23:34 132  ,jpy_g03
08:23:34 133  ,jpy_g04
08:23:34 134  ,jpy_g05
08:23:34 135  ,jpy_g06
08:23:34 136  ,jpy_g07
08:23:34 137  ,jpy_g08
08:23:34 138  ,jpy_g09
08:23:34 139  ,jpy_g10
08:23:34 140  ,jpy_g11
08:23:34 141  ,jpy_g12
08:23:34 142  ,jpy_g13
08:23:34 143  ,jpy_g14
08:23:34 144  ,jpy_g15
08:23:34 145  ,jpy_g16
08:23:34 146  ,jpy_g17
08:23:34 147  ,jpy_g18
08:23:34 148  ,jpy_g19
08:23:34 149  ,jpy_g20
08:23:34 150  ,jpy_g21
08:23:34 151  ,jpy_g22
08:23:34 152  ,jpy_g23
08:23:34 153  ,jpy_g24
08:23:34 154  ,jpy_g25
08:23:34 155  ,jpy_g26
08:23:34 156  ,jpy_g27
08:23:34 157  ,jpy_g28
08:23:34 158  ,jpy_g29
08:23:34 159  ,jpy_g30
08:23:34 160  ,jpy_g31
08:23:34 161  ,jpy_g32
08:23:34 162  ,jpy_g33
08:23:34 163  ,jpy_g34
08:23:34 164  ,jpy_g35
08:23:34 165  ,jpy_g36
08:23:34 166  ,jpy_g37
08:23:34 167  ,jpy_g38
08:23:34 168  ,jpy_g39
08:23:34 169  ,jpy_g40
08:23:34 170  ,cad_g00
08:23:34 171  ,cad_g01
08:23:34 172  ,cad_g02
08:23:34 173  ,cad_g03
08:23:34 174  ,cad_g04
08:23:34 175  ,cad_g05
08:23:34 176  ,cad_g06
08:23:34 177  ,cad_g07
08:23:34 178  ,cad_g08
08:23:34 179  ,cad_g09
08:23:34 180  ,cad_g10
08:23:34 181  ,cad_g11
08:23:34 182  ,cad_g12
08:23:34 183  ,cad_g13
08:23:34 184  ,cad_g14
08:23:34 185  ,cad_g15
08:23:34 186  ,cad_g16
08:23:34 187  ,cad_g17
08:23:34 188  ,cad_g18
08:23:34 189  ,cad_g19
08:23:34 190  ,cad_g20
08:23:34 191  ,cad_g21
08:23:34 192  ,cad_g22
08:23:34 193  ,cad_g23
08:23:34 194  ,cad_g24
08:23:34 195  ,cad_g25
08:23:34 196  ,cad_g26
08:23:34 197  ,cad_g27
08:23:34 198  ,cad_g28
08:23:34 199  ,cad_g29
08:23:34 200  ,cad_g30
08:23:34 201  ,cad_g31
08:23:34 202  ,cad_g32
08:23:34 203  ,cad_g33
08:23:34 204  ,cad_g34
08:23:34 205  ,cad_g35
08:23:34 206  ,cad_g36
08:23:34 207  ,cad_g37
08:23:34 208  ,cad_g38
08:23:34 209  ,cad_g39
08:23:34 210  ,cad_g40
08:23:34 211  ,chf_g00
08:23:34 212  ,chf_g01
08:23:34 213  ,chf_g02
08:23:34 214  ,chf_g03
08:23:34 215  ,chf_g04
08:23:34 216  ,chf_g05
08:23:34 217  ,chf_g06
08:23:34 218  ,chf_g07
08:23:34 219  ,chf_g08
08:23:34 220  ,chf_g09
08:23:34 221  ,chf_g10
08:23:34 222  ,chf_g11
08:23:34 223  ,chf_g12
08:23:34 224  ,chf_g13
08:23:34 225  ,chf_g14
08:23:34 226  ,chf_g15
08:23:34 227  ,chf_g16
08:23:34 228  ,chf_g17
08:23:34 229  ,chf_g18
08:23:34 230  ,chf_g19
08:23:34 231  ,chf_g20
08:23:34 232  ,chf_g21
08:23:34 233  ,chf_g22
08:23:34 234  ,chf_g23
08:23:34 235  ,chf_g24
08:23:34 236  ,chf_g25
08:23:34 237  ,chf_g26
08:23:34 238  ,chf_g27
08:23:34 239  ,chf_g28
08:23:34 240  ,chf_g29
08:23:34 241  ,chf_g30
08:23:34 242  ,chf_g31
08:23:34 243  ,chf_g32
08:23:34 244  ,chf_g33
08:23:34 245  ,chf_g34
08:23:34 246  ,chf_g35
08:23:34 247  ,chf_g36
08:23:34 248  ,chf_g37
08:23:34 249  ,chf_g38
08:23:34 250  ,chf_g39
08:23:34 251  ,chf_g40
08:23:34 252  FROM aud_ms14 m
08:23:34 253  WHERE gatt IN('nup','up')
08:23:34 254  AND 1+m.ydate < '&1'||' '||'&2'
08:23:34 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:05:00'

View created.

Elapsed: 00:00:00.12
08:23:34 SQL> 
08:23:34 SQL> -- rpt
08:23:34 SQL> 
08:23:34 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt;

GAT COUNT(PRDATE)
--- -------------
nup	    13257
up	     6627

Elapsed: 00:00:00.05
08:23:34 SQL> 
08:23:34 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-16 10:00:00

Elapsed: 00:00:00.03
08:23:34 SQL> 
08:23:34 SQL> -- Now build model from bme and score sme
08:23:34 SQL> @score1.sql
08:23:34 SQL> -- score1.sql
08:23:34 SQL> 
08:23:34 SQL> -- Does the 1st SVM score
08:23:34 SQL> 
08:23:34 SQL> -- Fill up svmc_apply_prep
08:23:34 SQL> @score.sql
08:23:34 SQL> --
08:23:34 SQL> -- score.sql
08:23:34 SQL> --
08:23:34 SQL> 
08:23:34 SQL> -- usage: score.sql
08:23:34 SQL> 
08:23:34 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
08:23:34 SQL> 
08:23:34 SQL> DEFINE target	= 'gatt'
08:23:34 SQL> DEFINE model_name = 'forex14'
08:23:34 SQL> DEFINE bldtable	= 'bme'
08:23:34 SQL> DEFINE scoretable = 'sme'
08:23:34 SQL> DEFINE case_id	= 'prdate'
08:23:34 SQL> 
08:23:34 SQL> -- Define a variable to help me exclude some columns from some data mining calls
08:23:34 SQL> DEFINE exclude1 = "'&target','&case_id'"
08:23:34 SQL> 
08:23:34 SQL> -- Builds an SVM model using pl/sql.
08:23:34 SQL> 
08:23:34 SQL> -----------------------------------------------------------------------
08:23:34 SQL> --			    BUILD THE MODEL
08:23:34 SQL> -----------------------------------------------------------------------
08:23:34 SQL> 
08:23:34 SQL> -- Cleanup old build data preparation objects for repeat runs
08:23:34 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
08:23:34 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
08:23:34 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
08:23:34 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
08:23:34 SQL> 
08:23:34 SQL> 
08:23:34 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
08:23:34 SQL> --
08:23:34 SQL> -- DROP	TABLE svmc_settings ;
08:23:34 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
08:23:34 SQL> -- DELETE svmc_settings;
08:23:34 SQL> 
08:23:34 SQL> -- The default classification algorithm is Naive Bayes. So override
08:23:34 SQL> -- this choice to SVM using a settings table.
08:23:34 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
08:23:34 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
08:23:34 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
08:23:34 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
08:23:34 SQL> -- models.
08:23:34 SQL> --
08:23:34 SQL> 
08:23:34 SQL> -- Do this once and then comment it out.
08:23:34 SQL> -- That makes script go faster.
08:23:34 SQL> -- BEGIN
08:23:34 SQL> -- -- Populate settings table
08:23:34 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:23:34 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
08:23:34 SQL> --
08:23:34 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:23:34 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
08:23:34 SQL> --
08:23:34 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:23:34 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
08:23:34 SQL> --   COMMIT;
08:23:34 SQL> -- END;
08:23:34 SQL> -- /
08:23:34 SQL> 
08:23:34 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
08:23:34 SQL> 
08:23:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
08:23:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:23:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:23:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
08:23:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:23:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:23:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
08:23:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:23:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:23:34 SQL> 
08:23:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
08:23:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:23:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
08:23:34 SQL> 
08:23:34 SQL> --------------------------------
08:23:34 SQL> -- PREPARE BUILD (TRAINING) DATA
08:23:34 SQL> --
08:23:34 SQL> 
08:23:34 SQL> -- 1. Missing Value treatment for all Predictors and
08:23:34 SQL> -- 2. Outlier Treatment and
08:23:34 SQL> -- 3. Normalization are performed below.
08:23:34 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
08:23:34 SQL> --    normalized here.
08:23:34 SQL> 
08:23:34 SQL> BEGIN
08:23:34   2  	-- Perform missing value treatment for all predictors
08:23:34   3  	-- create miss tables
08:23:34   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
08:23:34   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
08:23:34   6  
08:23:34   7  	-- populate miss tables
08:23:34   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
08:23:34   9  	  miss_table_name => 'svmc_miss_num',
08:23:34  10  	  data_table_name => '&bldtable',
08:23:34  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:23:34  12  
08:23:34  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
08:23:34  14  	  miss_table_name => 'svmc_miss_cat',
08:23:34  15  	  data_table_name => '&bldtable',
08:23:34  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:23:34  17  
08:23:34  18  	-- xform input data to replace missing values
08:23:34  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:23:34  20  	  miss_table_name => 'svmc_miss_num',
08:23:34  21  	  data_table_name => '&bldtable',
08:23:34  22  	  xform_view_name => 'xformed_build_miss_num');
08:23:34  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:23:34  24  	  miss_table_name => 'svmc_miss_cat',
08:23:34  25  	  data_table_name => '&bldtable',
08:23:34  26  	  xform_view_name => 'xformed_build_miss_cat');
08:23:34  27  
08:23:34  28  	-- Perform outlier treatment.
08:23:34  29  	-- create clip table
08:23:34  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
08:23:34  31  
08:23:34  32  	-- populate clip table
08:23:34  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
08:23:34  34  	  clip_table_name => 'svmc_clip',
08:23:34  35  	  data_table_name => '&bldtable',
08:23:34  36  	  tail_frac	  => 0.025,
08:23:34  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:23:34  38  
08:23:34  39  	-- xform input data to winsorized data
08:23:34  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
08:23:34  41  	  clip_table_name => 'svmc_clip',
08:23:34  42  	  data_table_name => '&bldtable',
08:23:34  43  	  xform_view_name => 'svmc_winsor');
08:23:34  44  
08:23:34  45  	-- create normalization table
08:23:34  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
08:23:34  47  
08:23:34  48  	-- populate normalization table based on winsorized data
08:23:34  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
08:23:34  50  	  norm_table_name => 'svmc_norm',
08:23:34  51  	  data_table_name => 'svmc_winsor',
08:23:34  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:23:34  53  
08:23:34  54  	-- normalize the original data
08:23:34  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:23:34  56  	  norm_table_name => 'svmc_norm',
08:23:34  57  	  data_table_name => '&bldtable',
08:23:34  58  	  xform_view_name => 'svmc_build_prep');
08:23:34  59  END;
08:23:34  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.29
08:23:52 SQL> 
08:23:52 SQL> ---------------------
08:23:52 SQL> -- CREATE A NEW MODEL
08:23:52 SQL> --
08:23:52 SQL> -- Cleanup old model with the same name for repeat runs
08:23:52 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
08:23:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:23:52   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.06
08:23:53 SQL> 
08:23:53 SQL> -- Build a new SVM Model
08:23:53 SQL> BEGIN
08:23:53   2  	DBMS_DATA_MINING.CREATE_MODEL(
08:23:53   3  	  model_name	      => '&model_name',
08:23:53   4  	  mining_function     => dbms_data_mining.classification,
08:23:53   5  	  data_table_name     => 'svmc_build_prep',
08:23:53   6  	  case_id_column_name => '&case_id',
08:23:53   7  	  target_column_name  => '&target',
08:23:53   8  	  settings_table_name => 'svmc_settings');
08:23:53   9  END;
08:23:53  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.12
08:24:18 SQL> 
08:24:18 SQL> -----------------------------------------------------------------------
08:24:18 SQL> --			       APPLY/score THE MODEL
08:24:18 SQL> -----------------------------------------------------------------------
08:24:18 SQL> 
08:24:18 SQL> -- Cleanup old scoring data preparation objects for repeat runs
08:24:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
08:24:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:24:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
08:24:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
08:24:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:24:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:24:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
08:24:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:24:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
08:24:19 SQL> -----------------------
08:24:19 SQL> -- PREPARE SCORING DATA
08:24:19 SQL> --
08:24:19 SQL> -- If the data for model creation has been prepared, then the data
08:24:19 SQL> -- to be scored using the model must be prepared in the same manner
08:24:19 SQL> -- in order to obtain meaningful results.
08:24:19 SQL> --
08:24:19 SQL> -- 1. Missing Value treatment for all Predictors and
08:24:19 SQL> -- 2. Normalization
08:24:19 SQL> -- No outlier treatment will be performed during test and apply. The
08:24:19 SQL> -- normalization step is sufficient, since the normalization parameters
08:24:19 SQL> -- already capture the effects of outlier treatment done with build data.
08:24:19 SQL> --
08:24:19 SQL> BEGIN
08:24:19   2  	-- Xform Test data to replace missing values
08:24:19   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:24:19   4  	  miss_table_name => 'svmc_miss_num',
08:24:19   5  	  data_table_name => '&scoretable',
08:24:19   6  	  xform_view_name => 'xformed_apply_miss_num');
08:24:19   7  
08:24:19   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:24:19   9  	  miss_table_name => 'svmc_miss_cat',
08:24:19  10  	  data_table_name => '&scoretable',
08:24:19  11  	  xform_view_name => 'xformed_apply_miss_cat');
08:24:19  12  
08:24:19  13  	-- Normalize the data to be scored
08:24:19  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:24:19  15  	  norm_table_name => 'svmc_norm',
08:24:19  16  	  data_table_name => '&scoretable',
08:24:19  17  	  xform_view_name => 'svmc_apply_prep');
08:24:19  18  END;
08:24:19  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.24
08:24:20 SQL> 
08:24:20 SQL> -- Use same model_name used in score.sql
08:24:20 SQL> DEFINE model_name = 'forex14'
08:24:20 SQL> 
08:24:20 SQL> -- CREATE TABLE fxscores8hp (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
08:24:20 SQL> 
08:24:20 SQL> DELETE fxscores8hp WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
08:24:20 SQL> 
08:24:20 SQL> INSERT INTO fxscores8hp (prdate,score,rundate,pair,ydate)
08:24:20   2  SELECT
08:24:20   3  prdate
08:24:20   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
08:24:20   5  ,sysdate
08:24:20   6  ,SUBSTR(prdate,1,3)pair
08:24:20   7  ,SUBSTR(prdate,4,19)ydate
08:24:20   8  FROM svmc_apply_prep
08:24:20   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
08:24:20 SQL> @aud_score1day.sql  2010-12-17 10:00:00
08:24:20 SQL> --
08:24:20 SQL> -- aud_score1day.sql
08:24:20 SQL> --
08:24:20 SQL> 
08:24:20 SQL> CREATE OR REPLACE VIEW sme AS
08:24:20   2  SELECT
08:24:20   3  'aud'||m.ydate prdate
08:24:20   4  ,NULL gatt
08:24:20   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:24:20   6  ,eur_g00
08:24:20   7  ,eur_g01
08:24:20   8  ,eur_g02
08:24:20   9  ,eur_g03
08:24:20  10  ,eur_g04
08:24:20  11  ,eur_g05
08:24:20  12  ,eur_g06
08:24:20  13  ,eur_g07
08:24:20  14  ,eur_g08
08:24:20  15  ,eur_g09
08:24:20  16  ,eur_g10
08:24:20  17  ,eur_g11
08:24:20  18  ,eur_g12
08:24:20  19  ,eur_g13
08:24:20  20  ,eur_g14
08:24:20  21  ,eur_g15
08:24:20  22  ,eur_g16
08:24:20  23  ,eur_g17
08:24:20  24  ,eur_g18
08:24:20  25  ,eur_g19
08:24:20  26  ,eur_g20
08:24:20  27  ,eur_g21
08:24:20  28  ,eur_g22
08:24:20  29  ,eur_g23
08:24:20  30  ,eur_g24
08:24:20  31  ,eur_g25
08:24:20  32  ,eur_g26
08:24:20  33  ,eur_g27
08:24:20  34  ,eur_g28
08:24:20  35  ,eur_g29
08:24:20  36  ,eur_g30
08:24:20  37  ,eur_g31
08:24:20  38  ,eur_g32
08:24:20  39  ,eur_g33
08:24:20  40  ,eur_g34
08:24:20  41  ,eur_g35
08:24:20  42  ,eur_g36
08:24:20  43  ,eur_g37
08:24:20  44  ,eur_g38
08:24:20  45  ,eur_g39
08:24:20  46  ,eur_g40
08:24:20  47  ,aud_g00
08:24:20  48  ,aud_g01
08:24:20  49  ,aud_g02
08:24:20  50  ,aud_g03
08:24:20  51  ,aud_g04
08:24:20  52  ,aud_g05
08:24:20  53  ,aud_g06
08:24:20  54  ,aud_g07
08:24:20  55  ,aud_g08
08:24:20  56  ,aud_g09
08:24:20  57  ,aud_g10
08:24:20  58  ,aud_g11
08:24:20  59  ,aud_g12
08:24:20  60  ,aud_g13
08:24:20  61  ,aud_g14
08:24:20  62  ,aud_g15
08:24:20  63  ,aud_g16
08:24:20  64  ,aud_g17
08:24:20  65  ,aud_g18
08:24:20  66  ,aud_g19
08:24:20  67  ,aud_g20
08:24:20  68  ,aud_g21
08:24:20  69  ,aud_g22
08:24:20  70  ,aud_g23
08:24:20  71  ,aud_g24
08:24:20  72  ,aud_g25
08:24:20  73  ,aud_g26
08:24:20  74  ,aud_g27
08:24:20  75  ,aud_g28
08:24:20  76  ,aud_g29
08:24:20  77  ,aud_g30
08:24:20  78  ,aud_g31
08:24:20  79  ,aud_g32
08:24:20  80  ,aud_g33
08:24:20  81  ,aud_g34
08:24:20  82  ,aud_g35
08:24:20  83  ,aud_g36
08:24:20  84  ,aud_g37
08:24:20  85  ,aud_g38
08:24:20  86  ,aud_g39
08:24:20  87  ,aud_g40
08:24:20  88  ,gbp_g00
08:24:20  89  ,gbp_g01
08:24:20  90  ,gbp_g02
08:24:20  91  ,gbp_g03
08:24:20  92  ,gbp_g04
08:24:20  93  ,gbp_g05
08:24:20  94  ,gbp_g06
08:24:20  95  ,gbp_g07
08:24:20  96  ,gbp_g08
08:24:20  97  ,gbp_g09
08:24:20  98  ,gbp_g10
08:24:20  99  ,gbp_g11
08:24:20 100  ,gbp_g12
08:24:20 101  ,gbp_g13
08:24:20 102  ,gbp_g14
08:24:20 103  ,gbp_g15
08:24:20 104  ,gbp_g16
08:24:20 105  ,gbp_g17
08:24:20 106  ,gbp_g18
08:24:20 107  ,gbp_g19
08:24:20 108  ,gbp_g20
08:24:20 109  ,gbp_g21
08:24:20 110  ,gbp_g22
08:24:20 111  ,gbp_g23
08:24:20 112  ,gbp_g24
08:24:20 113  ,gbp_g25
08:24:20 114  ,gbp_g26
08:24:20 115  ,gbp_g27
08:24:20 116  ,gbp_g28
08:24:20 117  ,gbp_g29
08:24:20 118  ,gbp_g30
08:24:20 119  ,gbp_g31
08:24:20 120  ,gbp_g32
08:24:20 121  ,gbp_g33
08:24:20 122  ,gbp_g34
08:24:20 123  ,gbp_g35
08:24:20 124  ,gbp_g36
08:24:20 125  ,gbp_g37
08:24:20 126  ,gbp_g38
08:24:20 127  ,gbp_g39
08:24:20 128  ,gbp_g40
08:24:20 129  ,jpy_g00
08:24:20 130  ,jpy_g01
08:24:20 131  ,jpy_g02
08:24:20 132  ,jpy_g03
08:24:20 133  ,jpy_g04
08:24:20 134  ,jpy_g05
08:24:20 135  ,jpy_g06
08:24:20 136  ,jpy_g07
08:24:20 137  ,jpy_g08
08:24:20 138  ,jpy_g09
08:24:20 139  ,jpy_g10
08:24:20 140  ,jpy_g11
08:24:20 141  ,jpy_g12
08:24:20 142  ,jpy_g13
08:24:20 143  ,jpy_g14
08:24:20 144  ,jpy_g15
08:24:20 145  ,jpy_g16
08:24:20 146  ,jpy_g17
08:24:20 147  ,jpy_g18
08:24:20 148  ,jpy_g19
08:24:20 149  ,jpy_g20
08:24:20 150  ,jpy_g21
08:24:20 151  ,jpy_g22
08:24:20 152  ,jpy_g23
08:24:20 153  ,jpy_g24
08:24:20 154  ,jpy_g25
08:24:20 155  ,jpy_g26
08:24:20 156  ,jpy_g27
08:24:20 157  ,jpy_g28
08:24:20 158  ,jpy_g29
08:24:20 159  ,jpy_g30
08:24:20 160  ,jpy_g31
08:24:20 161  ,jpy_g32
08:24:20 162  ,jpy_g33
08:24:20 163  ,jpy_g34
08:24:20 164  ,jpy_g35
08:24:20 165  ,jpy_g36
08:24:20 166  ,jpy_g37
08:24:20 167  ,jpy_g38
08:24:20 168  ,jpy_g39
08:24:20 169  ,jpy_g40
08:24:20 170  ,cad_g00
08:24:20 171  ,cad_g01
08:24:20 172  ,cad_g02
08:24:20 173  ,cad_g03
08:24:20 174  ,cad_g04
08:24:20 175  ,cad_g05
08:24:20 176  ,cad_g06
08:24:20 177  ,cad_g07
08:24:20 178  ,cad_g08
08:24:20 179  ,cad_g09
08:24:20 180  ,cad_g10
08:24:20 181  ,cad_g11
08:24:20 182  ,cad_g12
08:24:20 183  ,cad_g13
08:24:20 184  ,cad_g14
08:24:20 185  ,cad_g15
08:24:20 186  ,cad_g16
08:24:20 187  ,cad_g17
08:24:20 188  ,cad_g18
08:24:20 189  ,cad_g19
08:24:20 190  ,cad_g20
08:24:20 191  ,cad_g21
08:24:20 192  ,cad_g22
08:24:20 193  ,cad_g23
08:24:20 194  ,cad_g24
08:24:20 195  ,cad_g25
08:24:20 196  ,cad_g26
08:24:20 197  ,cad_g27
08:24:20 198  ,cad_g28
08:24:20 199  ,cad_g29
08:24:20 200  ,cad_g30
08:24:20 201  ,cad_g31
08:24:20 202  ,cad_g32
08:24:20 203  ,cad_g33
08:24:20 204  ,cad_g34
08:24:20 205  ,cad_g35
08:24:20 206  ,cad_g36
08:24:20 207  ,cad_g37
08:24:20 208  ,cad_g38
08:24:20 209  ,cad_g39
08:24:20 210  ,cad_g40
08:24:20 211  ,chf_g00
08:24:20 212  ,chf_g01
08:24:20 213  ,chf_g02
08:24:20 214  ,chf_g03
08:24:20 215  ,chf_g04
08:24:20 216  ,chf_g05
08:24:20 217  ,chf_g06
08:24:20 218  ,chf_g07
08:24:20 219  ,chf_g08
08:24:20 220  ,chf_g09
08:24:20 221  ,chf_g10
08:24:20 222  ,chf_g11
08:24:20 223  ,chf_g12
08:24:20 224  ,chf_g13
08:24:20 225  ,chf_g14
08:24:20 226  ,chf_g15
08:24:20 227  ,chf_g16
08:24:20 228  ,chf_g17
08:24:20 229  ,chf_g18
08:24:20 230  ,chf_g19
08:24:20 231  ,chf_g20
08:24:20 232  ,chf_g21
08:24:20 233  ,chf_g22
08:24:20 234  ,chf_g23
08:24:20 235  ,chf_g24
08:24:20 236  ,chf_g25
08:24:20 237  ,chf_g26
08:24:20 238  ,chf_g27
08:24:20 239  ,chf_g28
08:24:20 240  ,chf_g29
08:24:20 241  ,chf_g30
08:24:20 242  ,chf_g31
08:24:20 243  ,chf_g32
08:24:20 244  ,chf_g33
08:24:20 245  ,chf_g34
08:24:20 246  ,chf_g35
08:24:20 247  ,chf_g36
08:24:20 248  ,chf_g37
08:24:20 249  ,chf_g38
08:24:20 250  ,chf_g39
08:24:20 251  ,chf_g40
08:24:20 252  FROM aud_ms14 m
08:24:20 253  WHERE m.ydate = '&1'||' '||'&2'
08:24:20 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'10:00:00'

View created.

Elapsed: 00:00:00.13
08:24:20 SQL> 
08:24:20 SQL> -- rpt
08:24:20 SQL> -- We should see just 1 row:
08:24:20 SQL> 
08:24:20 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
08:24:20 SQL> 
08:24:20 SQL> -- Build the model:
08:24:20 SQL> CREATE OR REPLACE VIEW bme AS
08:24:20   2  SELECT
08:24:20   3  'aud'||m.ydate prdate
08:24:20   4  ,gatt
08:24:20   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:24:20   6  ,eur_g00
08:24:20   7  ,eur_g01
08:24:20   8  ,eur_g02
08:24:20   9  ,eur_g03
08:24:20  10  ,eur_g04
08:24:20  11  ,eur_g05
08:24:20  12  ,eur_g06
08:24:20  13  ,eur_g07
08:24:20  14  ,eur_g08
08:24:20  15  ,eur_g09
08:24:20  16  ,eur_g10
08:24:20  17  ,eur_g11
08:24:20  18  ,eur_g12
08:24:20  19  ,eur_g13
08:24:20  20  ,eur_g14
08:24:20  21  ,eur_g15
08:24:20  22  ,eur_g16
08:24:20  23  ,eur_g17
08:24:20  24  ,eur_g18
08:24:20  25  ,eur_g19
08:24:20  26  ,eur_g20
08:24:20  27  ,eur_g21
08:24:20  28  ,eur_g22
08:24:20  29  ,eur_g23
08:24:20  30  ,eur_g24
08:24:20  31  ,eur_g25
08:24:20  32  ,eur_g26
08:24:20  33  ,eur_g27
08:24:20  34  ,eur_g28
08:24:20  35  ,eur_g29
08:24:20  36  ,eur_g30
08:24:20  37  ,eur_g31
08:24:20  38  ,eur_g32
08:24:20  39  ,eur_g33
08:24:20  40  ,eur_g34
08:24:20  41  ,eur_g35
08:24:20  42  ,eur_g36
08:24:20  43  ,eur_g37
08:24:20  44  ,eur_g38
08:24:20  45  ,eur_g39
08:24:20  46  ,eur_g40
08:24:20  47  ,aud_g00
08:24:20  48  ,aud_g01
08:24:20  49  ,aud_g02
08:24:20  50  ,aud_g03
08:24:20  51  ,aud_g04
08:24:20  52  ,aud_g05
08:24:20  53  ,aud_g06
08:24:20  54  ,aud_g07
08:24:20  55  ,aud_g08
08:24:20  56  ,aud_g09
08:24:20  57  ,aud_g10
08:24:20  58  ,aud_g11
08:24:20  59  ,aud_g12
08:24:20  60  ,aud_g13
08:24:20  61  ,aud_g14
08:24:20  62  ,aud_g15
08:24:20  63  ,aud_g16
08:24:20  64  ,aud_g17
08:24:20  65  ,aud_g18
08:24:20  66  ,aud_g19
08:24:20  67  ,aud_g20
08:24:20  68  ,aud_g21
08:24:20  69  ,aud_g22
08:24:20  70  ,aud_g23
08:24:20  71  ,aud_g24
08:24:20  72  ,aud_g25
08:24:20  73  ,aud_g26
08:24:20  74  ,aud_g27
08:24:20  75  ,aud_g28
08:24:20  76  ,aud_g29
08:24:20  77  ,aud_g30
08:24:20  78  ,aud_g31
08:24:20  79  ,aud_g32
08:24:20  80  ,aud_g33
08:24:20  81  ,aud_g34
08:24:20  82  ,aud_g35
08:24:20  83  ,aud_g36
08:24:20  84  ,aud_g37
08:24:20  85  ,aud_g38
08:24:20  86  ,aud_g39
08:24:20  87  ,aud_g40
08:24:20  88  ,gbp_g00
08:24:20  89  ,gbp_g01
08:24:20  90  ,gbp_g02
08:24:20  91  ,gbp_g03
08:24:20  92  ,gbp_g04
08:24:20  93  ,gbp_g05
08:24:20  94  ,gbp_g06
08:24:20  95  ,gbp_g07
08:24:20  96  ,gbp_g08
08:24:20  97  ,gbp_g09
08:24:20  98  ,gbp_g10
08:24:20  99  ,gbp_g11
08:24:20 100  ,gbp_g12
08:24:20 101  ,gbp_g13
08:24:20 102  ,gbp_g14
08:24:20 103  ,gbp_g15
08:24:20 104  ,gbp_g16
08:24:20 105  ,gbp_g17
08:24:20 106  ,gbp_g18
08:24:20 107  ,gbp_g19
08:24:20 108  ,gbp_g20
08:24:20 109  ,gbp_g21
08:24:20 110  ,gbp_g22
08:24:20 111  ,gbp_g23
08:24:20 112  ,gbp_g24
08:24:20 113  ,gbp_g25
08:24:20 114  ,gbp_g26
08:24:20 115  ,gbp_g27
08:24:20 116  ,gbp_g28
08:24:20 117  ,gbp_g29
08:24:20 118  ,gbp_g30
08:24:20 119  ,gbp_g31
08:24:20 120  ,gbp_g32
08:24:20 121  ,gbp_g33
08:24:20 122  ,gbp_g34
08:24:20 123  ,gbp_g35
08:24:20 124  ,gbp_g36
08:24:20 125  ,gbp_g37
08:24:20 126  ,gbp_g38
08:24:20 127  ,gbp_g39
08:24:20 128  ,gbp_g40
08:24:20 129  ,jpy_g00
08:24:20 130  ,jpy_g01
08:24:20 131  ,jpy_g02
08:24:20 132  ,jpy_g03
08:24:20 133  ,jpy_g04
08:24:20 134  ,jpy_g05
08:24:20 135  ,jpy_g06
08:24:20 136  ,jpy_g07
08:24:20 137  ,jpy_g08
08:24:20 138  ,jpy_g09
08:24:20 139  ,jpy_g10
08:24:20 140  ,jpy_g11
08:24:20 141  ,jpy_g12
08:24:20 142  ,jpy_g13
08:24:20 143  ,jpy_g14
08:24:20 144  ,jpy_g15
08:24:20 145  ,jpy_g16
08:24:20 146  ,jpy_g17
08:24:20 147  ,jpy_g18
08:24:20 148  ,jpy_g19
08:24:20 149  ,jpy_g20
08:24:20 150  ,jpy_g21
08:24:20 151  ,jpy_g22
08:24:20 152  ,jpy_g23
08:24:20 153  ,jpy_g24
08:24:20 154  ,jpy_g25
08:24:20 155  ,jpy_g26
08:24:20 156  ,jpy_g27
08:24:20 157  ,jpy_g28
08:24:20 158  ,jpy_g29
08:24:20 159  ,jpy_g30
08:24:20 160  ,jpy_g31
08:24:20 161  ,jpy_g32
08:24:20 162  ,jpy_g33
08:24:20 163  ,jpy_g34
08:24:20 164  ,jpy_g35
08:24:20 165  ,jpy_g36
08:24:20 166  ,jpy_g37
08:24:20 167  ,jpy_g38
08:24:20 168  ,jpy_g39
08:24:20 169  ,jpy_g40
08:24:20 170  ,cad_g00
08:24:20 171  ,cad_g01
08:24:20 172  ,cad_g02
08:24:20 173  ,cad_g03
08:24:20 174  ,cad_g04
08:24:20 175  ,cad_g05
08:24:20 176  ,cad_g06
08:24:20 177  ,cad_g07
08:24:20 178  ,cad_g08
08:24:20 179  ,cad_g09
08:24:20 180  ,cad_g10
08:24:20 181  ,cad_g11
08:24:20 182  ,cad_g12
08:24:20 183  ,cad_g13
08:24:20 184  ,cad_g14
08:24:20 185  ,cad_g15
08:24:20 186  ,cad_g16
08:24:20 187  ,cad_g17
08:24:20 188  ,cad_g18
08:24:20 189  ,cad_g19
08:24:20 190  ,cad_g20
08:24:20 191  ,cad_g21
08:24:20 192  ,cad_g22
08:24:20 193  ,cad_g23
08:24:20 194  ,cad_g24
08:24:20 195  ,cad_g25
08:24:20 196  ,cad_g26
08:24:20 197  ,cad_g27
08:24:20 198  ,cad_g28
08:24:20 199  ,cad_g29
08:24:20 200  ,cad_g30
08:24:20 201  ,cad_g31
08:24:20 202  ,cad_g32
08:24:20 203  ,cad_g33
08:24:20 204  ,cad_g34
08:24:20 205  ,cad_g35
08:24:20 206  ,cad_g36
08:24:20 207  ,cad_g37
08:24:20 208  ,cad_g38
08:24:20 209  ,cad_g39
08:24:20 210  ,cad_g40
08:24:20 211  ,chf_g00
08:24:20 212  ,chf_g01
08:24:20 213  ,chf_g02
08:24:20 214  ,chf_g03
08:24:20 215  ,chf_g04
08:24:20 216  ,chf_g05
08:24:20 217  ,chf_g06
08:24:20 218  ,chf_g07
08:24:20 219  ,chf_g08
08:24:20 220  ,chf_g09
08:24:20 221  ,chf_g10
08:24:20 222  ,chf_g11
08:24:20 223  ,chf_g12
08:24:20 224  ,chf_g13
08:24:20 225  ,chf_g14
08:24:20 226  ,chf_g15
08:24:20 227  ,chf_g16
08:24:20 228  ,chf_g17
08:24:20 229  ,chf_g18
08:24:20 230  ,chf_g19
08:24:20 231  ,chf_g20
08:24:20 232  ,chf_g21
08:24:20 233  ,chf_g22
08:24:20 234  ,chf_g23
08:24:20 235  ,chf_g24
08:24:20 236  ,chf_g25
08:24:20 237  ,chf_g26
08:24:20 238  ,chf_g27
08:24:20 239  ,chf_g28
08:24:20 240  ,chf_g29
08:24:20 241  ,chf_g30
08:24:20 242  ,chf_g31
08:24:20 243  ,chf_g32
08:24:20 244  ,chf_g33
08:24:20 245  ,chf_g34
08:24:20 246  ,chf_g35
08:24:20 247  ,chf_g36
08:24:20 248  ,chf_g37
08:24:20 249  ,chf_g38
08:24:20 250  ,chf_g39
08:24:20 251  ,chf_g40
08:24:20 252  FROM aud_ms14 m
08:24:20 253  WHERE gatt IN('nup','up')
08:24:20 254  AND 1+m.ydate < '&1'||' '||'&2'
08:24:20 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'10:00:00'

View created.

Elapsed: 00:00:00.12
08:24:20 SQL> 
08:24:20 SQL> -- rpt
08:24:20 SQL> 
08:24:20 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt;

GAT COUNT(PRDATE)
--- -------------
nup	    13256
up	     6627

Elapsed: 00:00:00.05
08:24:20 SQL> 
08:24:20 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-16 09:55:00

Elapsed: 00:00:00.03
08:24:20 SQL> 
08:24:20 SQL> -- Now build model from bme and score sme
08:24:20 SQL> @score1.sql
08:24:20 SQL> -- score1.sql
08:24:20 SQL> 
08:24:20 SQL> -- Does the 1st SVM score
08:24:20 SQL> 
08:24:20 SQL> -- Fill up svmc_apply_prep
08:24:20 SQL> @score.sql
08:24:20 SQL> --
08:24:20 SQL> -- score.sql
08:24:20 SQL> --
08:24:20 SQL> 
08:24:20 SQL> -- usage: score.sql
08:24:20 SQL> 
08:24:20 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
08:24:20 SQL> 
08:24:20 SQL> DEFINE target	= 'gatt'
08:24:20 SQL> DEFINE model_name = 'forex14'
08:24:20 SQL> DEFINE bldtable	= 'bme'
08:24:20 SQL> DEFINE scoretable = 'sme'
08:24:20 SQL> DEFINE case_id	= 'prdate'
08:24:20 SQL> 
08:24:20 SQL> -- Define a variable to help me exclude some columns from some data mining calls
08:24:20 SQL> DEFINE exclude1 = "'&target','&case_id'"
08:24:20 SQL> 
08:24:20 SQL> -- Builds an SVM model using pl/sql.
08:24:20 SQL> 
08:24:20 SQL> -----------------------------------------------------------------------
08:24:20 SQL> --			    BUILD THE MODEL
08:24:20 SQL> -----------------------------------------------------------------------
08:24:20 SQL> 
08:24:20 SQL> -- Cleanup old build data preparation objects for repeat runs
08:24:20 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
08:24:20 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
08:24:20 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
08:24:20 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.00
08:24:20 SQL> 
08:24:20 SQL> 
08:24:20 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
08:24:20 SQL> --
08:24:20 SQL> -- DROP	TABLE svmc_settings ;
08:24:20 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
08:24:20 SQL> -- DELETE svmc_settings;
08:24:20 SQL> 
08:24:20 SQL> -- The default classification algorithm is Naive Bayes. So override
08:24:20 SQL> -- this choice to SVM using a settings table.
08:24:20 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
08:24:20 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
08:24:20 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
08:24:20 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
08:24:20 SQL> -- models.
08:24:20 SQL> --
08:24:20 SQL> 
08:24:20 SQL> -- Do this once and then comment it out.
08:24:20 SQL> -- That makes script go faster.
08:24:20 SQL> -- BEGIN
08:24:20 SQL> -- -- Populate settings table
08:24:20 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:24:20 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
08:24:20 SQL> --
08:24:20 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:24:20 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
08:24:20 SQL> --
08:24:20 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:24:20 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
08:24:20 SQL> --   COMMIT;
08:24:20 SQL> -- END;
08:24:20 SQL> -- /
08:24:20 SQL> 
08:24:20 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
08:24:20 SQL> 
08:24:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
08:24:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:24:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
08:24:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
08:24:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:24:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
08:24:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
08:24:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:24:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
08:24:21 SQL> 
08:24:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
08:24:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:24:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:24:21 SQL> 
08:24:21 SQL> --------------------------------
08:24:21 SQL> -- PREPARE BUILD (TRAINING) DATA
08:24:21 SQL> --
08:24:21 SQL> 
08:24:21 SQL> -- 1. Missing Value treatment for all Predictors and
08:24:21 SQL> -- 2. Outlier Treatment and
08:24:21 SQL> -- 3. Normalization are performed below.
08:24:21 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
08:24:21 SQL> --    normalized here.
08:24:21 SQL> 
08:24:21 SQL> BEGIN
08:24:21   2  	-- Perform missing value treatment for all predictors
08:24:21   3  	-- create miss tables
08:24:21   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
08:24:21   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
08:24:21   6  
08:24:21   7  	-- populate miss tables
08:24:21   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
08:24:21   9  	  miss_table_name => 'svmc_miss_num',
08:24:21  10  	  data_table_name => '&bldtable',
08:24:21  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:24:21  12  
08:24:21  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
08:24:21  14  	  miss_table_name => 'svmc_miss_cat',
08:24:21  15  	  data_table_name => '&bldtable',
08:24:21  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:24:21  17  
08:24:21  18  	-- xform input data to replace missing values
08:24:21  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:24:21  20  	  miss_table_name => 'svmc_miss_num',
08:24:21  21  	  data_table_name => '&bldtable',
08:24:21  22  	  xform_view_name => 'xformed_build_miss_num');
08:24:21  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:24:21  24  	  miss_table_name => 'svmc_miss_cat',
08:24:21  25  	  data_table_name => '&bldtable',
08:24:21  26  	  xform_view_name => 'xformed_build_miss_cat');
08:24:21  27  
08:24:21  28  	-- Perform outlier treatment.
08:24:21  29  	-- create clip table
08:24:21  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
08:24:21  31  
08:24:21  32  	-- populate clip table
08:24:21  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
08:24:21  34  	  clip_table_name => 'svmc_clip',
08:24:21  35  	  data_table_name => '&bldtable',
08:24:21  36  	  tail_frac	  => 0.025,
08:24:21  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:24:21  38  
08:24:21  39  	-- xform input data to winsorized data
08:24:21  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
08:24:21  41  	  clip_table_name => 'svmc_clip',
08:24:21  42  	  data_table_name => '&bldtable',
08:24:21  43  	  xform_view_name => 'svmc_winsor');
08:24:21  44  
08:24:21  45  	-- create normalization table
08:24:21  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
08:24:21  47  
08:24:21  48  	-- populate normalization table based on winsorized data
08:24:21  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
08:24:21  50  	  norm_table_name => 'svmc_norm',
08:24:21  51  	  data_table_name => 'svmc_winsor',
08:24:21  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:24:21  53  
08:24:21  54  	-- normalize the original data
08:24:21  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:24:21  56  	  norm_table_name => 'svmc_norm',
08:24:21  57  	  data_table_name => '&bldtable',
08:24:21  58  	  xform_view_name => 'svmc_build_prep');
08:24:21  59  END;
08:24:21  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.40
08:24:39 SQL> 
08:24:39 SQL> ---------------------
08:24:39 SQL> -- CREATE A NEW MODEL
08:24:39 SQL> --
08:24:39 SQL> -- Cleanup old model with the same name for repeat runs
08:24:39 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
08:24:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:24:39   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.82
08:24:40 SQL> 
08:24:40 SQL> -- Build a new SVM Model
08:24:40 SQL> BEGIN
08:24:40   2  	DBMS_DATA_MINING.CREATE_MODEL(
08:24:40   3  	  model_name	      => '&model_name',
08:24:40   4  	  mining_function     => dbms_data_mining.classification,
08:24:40   5  	  data_table_name     => 'svmc_build_prep',
08:24:40   6  	  case_id_column_name => '&case_id',
08:24:40   7  	  target_column_name  => '&target',
08:24:40   8  	  settings_table_name => 'svmc_settings');
08:24:40   9  END;
08:24:40  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.60
08:25:09 SQL> 
08:25:09 SQL> -----------------------------------------------------------------------
08:25:09 SQL> --			       APPLY/score THE MODEL
08:25:09 SQL> -----------------------------------------------------------------------
08:25:09 SQL> 
08:25:09 SQL> -- Cleanup old scoring data preparation objects for repeat runs
08:25:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
08:25:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:25:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
08:25:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
08:25:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:25:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
08:25:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
08:25:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:25:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:25:09 SQL> -----------------------
08:25:09 SQL> -- PREPARE SCORING DATA
08:25:09 SQL> --
08:25:09 SQL> -- If the data for model creation has been prepared, then the data
08:25:09 SQL> -- to be scored using the model must be prepared in the same manner
08:25:09 SQL> -- in order to obtain meaningful results.
08:25:09 SQL> --
08:25:09 SQL> -- 1. Missing Value treatment for all Predictors and
08:25:09 SQL> -- 2. Normalization
08:25:09 SQL> -- No outlier treatment will be performed during test and apply. The
08:25:09 SQL> -- normalization step is sufficient, since the normalization parameters
08:25:09 SQL> -- already capture the effects of outlier treatment done with build data.
08:25:09 SQL> --
08:25:09 SQL> BEGIN
08:25:09   2  	-- Xform Test data to replace missing values
08:25:09   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:25:09   4  	  miss_table_name => 'svmc_miss_num',
08:25:09   5  	  data_table_name => '&scoretable',
08:25:09   6  	  xform_view_name => 'xformed_apply_miss_num');
08:25:09   7  
08:25:09   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:25:09   9  	  miss_table_name => 'svmc_miss_cat',
08:25:09  10  	  data_table_name => '&scoretable',
08:25:09  11  	  xform_view_name => 'xformed_apply_miss_cat');
08:25:09  12  
08:25:09  13  	-- Normalize the data to be scored
08:25:09  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:25:09  15  	  norm_table_name => 'svmc_norm',
08:25:09  16  	  data_table_name => '&scoretable',
08:25:09  17  	  xform_view_name => 'svmc_apply_prep');
08:25:09  18  END;
08:25:09  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
08:25:10 SQL> 
08:25:10 SQL> -- Use same model_name used in score.sql
08:25:10 SQL> DEFINE model_name = 'forex14'
08:25:10 SQL> 
08:25:10 SQL> -- CREATE TABLE fxscores8hp (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
08:25:10 SQL> 
08:25:10 SQL> DELETE fxscores8hp WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
08:25:10 SQL> 
08:25:10 SQL> INSERT INTO fxscores8hp (prdate,score,rundate,pair,ydate)
08:25:10   2  SELECT
08:25:10   3  prdate
08:25:10   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
08:25:10   5  ,sysdate
08:25:10   6  ,SUBSTR(prdate,1,3)pair
08:25:10   7  ,SUBSTR(prdate,4,19)ydate
08:25:10   8  FROM svmc_apply_prep
08:25:10   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
08:25:10 SQL> @aud_score1day.sql  2010-12-17 09:55:00
08:25:10 SQL> --
08:25:10 SQL> -- aud_score1day.sql
08:25:10 SQL> --
08:25:10 SQL> 
08:25:10 SQL> CREATE OR REPLACE VIEW sme AS
08:25:10   2  SELECT
08:25:10   3  'aud'||m.ydate prdate
08:25:10   4  ,NULL gatt
08:25:10   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:25:10   6  ,eur_g00
08:25:10   7  ,eur_g01
08:25:10   8  ,eur_g02
08:25:10   9  ,eur_g03
08:25:10  10  ,eur_g04
08:25:10  11  ,eur_g05
08:25:10  12  ,eur_g06
08:25:10  13  ,eur_g07
08:25:10  14  ,eur_g08
08:25:10  15  ,eur_g09
08:25:10  16  ,eur_g10
08:25:10  17  ,eur_g11
08:25:10  18  ,eur_g12
08:25:10  19  ,eur_g13
08:25:10  20  ,eur_g14
08:25:10  21  ,eur_g15
08:25:10  22  ,eur_g16
08:25:10  23  ,eur_g17
08:25:10  24  ,eur_g18
08:25:10  25  ,eur_g19
08:25:10  26  ,eur_g20
08:25:10  27  ,eur_g21
08:25:10  28  ,eur_g22
08:25:10  29  ,eur_g23
08:25:10  30  ,eur_g24
08:25:10  31  ,eur_g25
08:25:10  32  ,eur_g26
08:25:10  33  ,eur_g27
08:25:10  34  ,eur_g28
08:25:10  35  ,eur_g29
08:25:10  36  ,eur_g30
08:25:10  37  ,eur_g31
08:25:10  38  ,eur_g32
08:25:10  39  ,eur_g33
08:25:10  40  ,eur_g34
08:25:10  41  ,eur_g35
08:25:10  42  ,eur_g36
08:25:10  43  ,eur_g37
08:25:10  44  ,eur_g38
08:25:10  45  ,eur_g39
08:25:10  46  ,eur_g40
08:25:10  47  ,aud_g00
08:25:10  48  ,aud_g01
08:25:10  49  ,aud_g02
08:25:10  50  ,aud_g03
08:25:10  51  ,aud_g04
08:25:10  52  ,aud_g05
08:25:10  53  ,aud_g06
08:25:10  54  ,aud_g07
08:25:10  55  ,aud_g08
08:25:10  56  ,aud_g09
08:25:10  57  ,aud_g10
08:25:10  58  ,aud_g11
08:25:10  59  ,aud_g12
08:25:10  60  ,aud_g13
08:25:10  61  ,aud_g14
08:25:10  62  ,aud_g15
08:25:10  63  ,aud_g16
08:25:10  64  ,aud_g17
08:25:10  65  ,aud_g18
08:25:10  66  ,aud_g19
08:25:10  67  ,aud_g20
08:25:10  68  ,aud_g21
08:25:10  69  ,aud_g22
08:25:10  70  ,aud_g23
08:25:10  71  ,aud_g24
08:25:10  72  ,aud_g25
08:25:10  73  ,aud_g26
08:25:10  74  ,aud_g27
08:25:10  75  ,aud_g28
08:25:10  76  ,aud_g29
08:25:10  77  ,aud_g30
08:25:10  78  ,aud_g31
08:25:10  79  ,aud_g32
08:25:10  80  ,aud_g33
08:25:10  81  ,aud_g34
08:25:10  82  ,aud_g35
08:25:10  83  ,aud_g36
08:25:10  84  ,aud_g37
08:25:10  85  ,aud_g38
08:25:10  86  ,aud_g39
08:25:10  87  ,aud_g40
08:25:10  88  ,gbp_g00
08:25:10  89  ,gbp_g01
08:25:10  90  ,gbp_g02
08:25:10  91  ,gbp_g03
08:25:10  92  ,gbp_g04
08:25:10  93  ,gbp_g05
08:25:10  94  ,gbp_g06
08:25:10  95  ,gbp_g07
08:25:10  96  ,gbp_g08
08:25:10  97  ,gbp_g09
08:25:10  98  ,gbp_g10
08:25:10  99  ,gbp_g11
08:25:10 100  ,gbp_g12
08:25:10 101  ,gbp_g13
08:25:10 102  ,gbp_g14
08:25:10 103  ,gbp_g15
08:25:10 104  ,gbp_g16
08:25:10 105  ,gbp_g17
08:25:10 106  ,gbp_g18
08:25:10 107  ,gbp_g19
08:25:10 108  ,gbp_g20
08:25:10 109  ,gbp_g21
08:25:10 110  ,gbp_g22
08:25:10 111  ,gbp_g23
08:25:10 112  ,gbp_g24
08:25:10 113  ,gbp_g25
08:25:10 114  ,gbp_g26
08:25:10 115  ,gbp_g27
08:25:10 116  ,gbp_g28
08:25:10 117  ,gbp_g29
08:25:10 118  ,gbp_g30
08:25:10 119  ,gbp_g31
08:25:10 120  ,gbp_g32
08:25:10 121  ,gbp_g33
08:25:10 122  ,gbp_g34
08:25:10 123  ,gbp_g35
08:25:10 124  ,gbp_g36
08:25:10 125  ,gbp_g37
08:25:10 126  ,gbp_g38
08:25:10 127  ,gbp_g39
08:25:10 128  ,gbp_g40
08:25:10 129  ,jpy_g00
08:25:10 130  ,jpy_g01
08:25:10 131  ,jpy_g02
08:25:10 132  ,jpy_g03
08:25:10 133  ,jpy_g04
08:25:10 134  ,jpy_g05
08:25:10 135  ,jpy_g06
08:25:10 136  ,jpy_g07
08:25:10 137  ,jpy_g08
08:25:10 138  ,jpy_g09
08:25:10 139  ,jpy_g10
08:25:10 140  ,jpy_g11
08:25:10 141  ,jpy_g12
08:25:10 142  ,jpy_g13
08:25:10 143  ,jpy_g14
08:25:10 144  ,jpy_g15
08:25:10 145  ,jpy_g16
08:25:10 146  ,jpy_g17
08:25:10 147  ,jpy_g18
08:25:10 148  ,jpy_g19
08:25:10 149  ,jpy_g20
08:25:10 150  ,jpy_g21
08:25:10 151  ,jpy_g22
08:25:10 152  ,jpy_g23
08:25:10 153  ,jpy_g24
08:25:10 154  ,jpy_g25
08:25:10 155  ,jpy_g26
08:25:10 156  ,jpy_g27
08:25:10 157  ,jpy_g28
08:25:10 158  ,jpy_g29
08:25:10 159  ,jpy_g30
08:25:10 160  ,jpy_g31
08:25:10 161  ,jpy_g32
08:25:10 162  ,jpy_g33
08:25:10 163  ,jpy_g34
08:25:10 164  ,jpy_g35
08:25:10 165  ,jpy_g36
08:25:10 166  ,jpy_g37
08:25:10 167  ,jpy_g38
08:25:10 168  ,jpy_g39
08:25:10 169  ,jpy_g40
08:25:10 170  ,cad_g00
08:25:10 171  ,cad_g01
08:25:10 172  ,cad_g02
08:25:10 173  ,cad_g03
08:25:10 174  ,cad_g04
08:25:10 175  ,cad_g05
08:25:10 176  ,cad_g06
08:25:10 177  ,cad_g07
08:25:10 178  ,cad_g08
08:25:10 179  ,cad_g09
08:25:10 180  ,cad_g10
08:25:10 181  ,cad_g11
08:25:10 182  ,cad_g12
08:25:10 183  ,cad_g13
08:25:10 184  ,cad_g14
08:25:10 185  ,cad_g15
08:25:10 186  ,cad_g16
08:25:10 187  ,cad_g17
08:25:10 188  ,cad_g18
08:25:10 189  ,cad_g19
08:25:10 190  ,cad_g20
08:25:10 191  ,cad_g21
08:25:10 192  ,cad_g22
08:25:10 193  ,cad_g23
08:25:10 194  ,cad_g24
08:25:10 195  ,cad_g25
08:25:10 196  ,cad_g26
08:25:10 197  ,cad_g27
08:25:10 198  ,cad_g28
08:25:10 199  ,cad_g29
08:25:10 200  ,cad_g30
08:25:10 201  ,cad_g31
08:25:10 202  ,cad_g32
08:25:10 203  ,cad_g33
08:25:10 204  ,cad_g34
08:25:10 205  ,cad_g35
08:25:10 206  ,cad_g36
08:25:10 207  ,cad_g37
08:25:10 208  ,cad_g38
08:25:10 209  ,cad_g39
08:25:10 210  ,cad_g40
08:25:10 211  ,chf_g00
08:25:10 212  ,chf_g01
08:25:10 213  ,chf_g02
08:25:10 214  ,chf_g03
08:25:10 215  ,chf_g04
08:25:10 216  ,chf_g05
08:25:10 217  ,chf_g06
08:25:10 218  ,chf_g07
08:25:10 219  ,chf_g08
08:25:10 220  ,chf_g09
08:25:10 221  ,chf_g10
08:25:10 222  ,chf_g11
08:25:10 223  ,chf_g12
08:25:10 224  ,chf_g13
08:25:10 225  ,chf_g14
08:25:10 226  ,chf_g15
08:25:10 227  ,chf_g16
08:25:10 228  ,chf_g17
08:25:10 229  ,chf_g18
08:25:10 230  ,chf_g19
08:25:10 231  ,chf_g20
08:25:10 232  ,chf_g21
08:25:10 233  ,chf_g22
08:25:10 234  ,chf_g23
08:25:10 235  ,chf_g24
08:25:10 236  ,chf_g25
08:25:10 237  ,chf_g26
08:25:10 238  ,chf_g27
08:25:10 239  ,chf_g28
08:25:10 240  ,chf_g29
08:25:10 241  ,chf_g30
08:25:10 242  ,chf_g31
08:25:10 243  ,chf_g32
08:25:10 244  ,chf_g33
08:25:10 245  ,chf_g34
08:25:10 246  ,chf_g35
08:25:10 247  ,chf_g36
08:25:10 248  ,chf_g37
08:25:10 249  ,chf_g38
08:25:10 250  ,chf_g39
08:25:10 251  ,chf_g40
08:25:10 252  FROM aud_ms14 m
08:25:10 253  WHERE m.ydate = '&1'||' '||'&2'
08:25:10 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'09:55:00'

View created.

Elapsed: 00:00:00.12
08:25:10 SQL> 
08:25:10 SQL> -- rpt
08:25:10 SQL> -- We should see just 1 row:
08:25:10 SQL> 
08:25:10 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
08:25:10 SQL> 
08:25:10 SQL> -- Build the model:
08:25:10 SQL> CREATE OR REPLACE VIEW bme AS
08:25:10   2  SELECT
08:25:10   3  'aud'||m.ydate prdate
08:25:10   4  ,gatt
08:25:10   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:25:10   6  ,eur_g00
08:25:10   7  ,eur_g01
08:25:10   8  ,eur_g02
08:25:10   9  ,eur_g03
08:25:10  10  ,eur_g04
08:25:10  11  ,eur_g05
08:25:10  12  ,eur_g06
08:25:10  13  ,eur_g07
08:25:10  14  ,eur_g08
08:25:10  15  ,eur_g09
08:25:10  16  ,eur_g10
08:25:10  17  ,eur_g11
08:25:10  18  ,eur_g12
08:25:10  19  ,eur_g13
08:25:10  20  ,eur_g14
08:25:10  21  ,eur_g15
08:25:10  22  ,eur_g16
08:25:10  23  ,eur_g17
08:25:10  24  ,eur_g18
08:25:10  25  ,eur_g19
08:25:10  26  ,eur_g20
08:25:10  27  ,eur_g21
08:25:10  28  ,eur_g22
08:25:10  29  ,eur_g23
08:25:10  30  ,eur_g24
08:25:10  31  ,eur_g25
08:25:10  32  ,eur_g26
08:25:10  33  ,eur_g27
08:25:10  34  ,eur_g28
08:25:10  35  ,eur_g29
08:25:10  36  ,eur_g30
08:25:10  37  ,eur_g31
08:25:10  38  ,eur_g32
08:25:10  39  ,eur_g33
08:25:10  40  ,eur_g34
08:25:10  41  ,eur_g35
08:25:10  42  ,eur_g36
08:25:10  43  ,eur_g37
08:25:10  44  ,eur_g38
08:25:10  45  ,eur_g39
08:25:10  46  ,eur_g40
08:25:10  47  ,aud_g00
08:25:10  48  ,aud_g01
08:25:10  49  ,aud_g02
08:25:10  50  ,aud_g03
08:25:10  51  ,aud_g04
08:25:10  52  ,aud_g05
08:25:10  53  ,aud_g06
08:25:10  54  ,aud_g07
08:25:10  55  ,aud_g08
08:25:10  56  ,aud_g09
08:25:10  57  ,aud_g10
08:25:10  58  ,aud_g11
08:25:10  59  ,aud_g12
08:25:10  60  ,aud_g13
08:25:10  61  ,aud_g14
08:25:10  62  ,aud_g15
08:25:10  63  ,aud_g16
08:25:10  64  ,aud_g17
08:25:10  65  ,aud_g18
08:25:10  66  ,aud_g19
08:25:10  67  ,aud_g20
08:25:10  68  ,aud_g21
08:25:10  69  ,aud_g22
08:25:10  70  ,aud_g23
08:25:10  71  ,aud_g24
08:25:10  72  ,aud_g25
08:25:10  73  ,aud_g26
08:25:10  74  ,aud_g27
08:25:10  75  ,aud_g28
08:25:10  76  ,aud_g29
08:25:10  77  ,aud_g30
08:25:10  78  ,aud_g31
08:25:10  79  ,aud_g32
08:25:10  80  ,aud_g33
08:25:10  81  ,aud_g34
08:25:10  82  ,aud_g35
08:25:10  83  ,aud_g36
08:25:10  84  ,aud_g37
08:25:10  85  ,aud_g38
08:25:10  86  ,aud_g39
08:25:10  87  ,aud_g40
08:25:10  88  ,gbp_g00
08:25:10  89  ,gbp_g01
08:25:10  90  ,gbp_g02
08:25:10  91  ,gbp_g03
08:25:10  92  ,gbp_g04
08:25:10  93  ,gbp_g05
08:25:10  94  ,gbp_g06
08:25:10  95  ,gbp_g07
08:25:10  96  ,gbp_g08
08:25:10  97  ,gbp_g09
08:25:10  98  ,gbp_g10
08:25:10  99  ,gbp_g11
08:25:10 100  ,gbp_g12
08:25:10 101  ,gbp_g13
08:25:10 102  ,gbp_g14
08:25:10 103  ,gbp_g15
08:25:10 104  ,gbp_g16
08:25:10 105  ,gbp_g17
08:25:10 106  ,gbp_g18
08:25:10 107  ,gbp_g19
08:25:10 108  ,gbp_g20
08:25:10 109  ,gbp_g21
08:25:10 110  ,gbp_g22
08:25:10 111  ,gbp_g23
08:25:10 112  ,gbp_g24
08:25:10 113  ,gbp_g25
08:25:10 114  ,gbp_g26
08:25:10 115  ,gbp_g27
08:25:10 116  ,gbp_g28
08:25:10 117  ,gbp_g29
08:25:10 118  ,gbp_g30
08:25:10 119  ,gbp_g31
08:25:10 120  ,gbp_g32
08:25:10 121  ,gbp_g33
08:25:10 122  ,gbp_g34
08:25:10 123  ,gbp_g35
08:25:10 124  ,gbp_g36
08:25:10 125  ,gbp_g37
08:25:10 126  ,gbp_g38
08:25:10 127  ,gbp_g39
08:25:10 128  ,gbp_g40
08:25:10 129  ,jpy_g00
08:25:10 130  ,jpy_g01
08:25:10 131  ,jpy_g02
08:25:10 132  ,jpy_g03
08:25:10 133  ,jpy_g04
08:25:10 134  ,jpy_g05
08:25:10 135  ,jpy_g06
08:25:10 136  ,jpy_g07
08:25:10 137  ,jpy_g08
08:25:10 138  ,jpy_g09
08:25:10 139  ,jpy_g10
08:25:10 140  ,jpy_g11
08:25:10 141  ,jpy_g12
08:25:10 142  ,jpy_g13
08:25:10 143  ,jpy_g14
08:25:10 144  ,jpy_g15
08:25:10 145  ,jpy_g16
08:25:10 146  ,jpy_g17
08:25:10 147  ,jpy_g18
08:25:10 148  ,jpy_g19
08:25:10 149  ,jpy_g20
08:25:10 150  ,jpy_g21
08:25:10 151  ,jpy_g22
08:25:10 152  ,jpy_g23
08:25:10 153  ,jpy_g24
08:25:10 154  ,jpy_g25
08:25:10 155  ,jpy_g26
08:25:10 156  ,jpy_g27
08:25:10 157  ,jpy_g28
08:25:10 158  ,jpy_g29
08:25:10 159  ,jpy_g30
08:25:10 160  ,jpy_g31
08:25:10 161  ,jpy_g32
08:25:10 162  ,jpy_g33
08:25:10 163  ,jpy_g34
08:25:10 164  ,jpy_g35
08:25:10 165  ,jpy_g36
08:25:10 166  ,jpy_g37
08:25:10 167  ,jpy_g38
08:25:10 168  ,jpy_g39
08:25:10 169  ,jpy_g40
08:25:10 170  ,cad_g00
08:25:10 171  ,cad_g01
08:25:10 172  ,cad_g02
08:25:10 173  ,cad_g03
08:25:10 174  ,cad_g04
08:25:10 175  ,cad_g05
08:25:10 176  ,cad_g06
08:25:10 177  ,cad_g07
08:25:10 178  ,cad_g08
08:25:10 179  ,cad_g09
08:25:10 180  ,cad_g10
08:25:10 181  ,cad_g11
08:25:10 182  ,cad_g12
08:25:10 183  ,cad_g13
08:25:10 184  ,cad_g14
08:25:10 185  ,cad_g15
08:25:10 186  ,cad_g16
08:25:10 187  ,cad_g17
08:25:10 188  ,cad_g18
08:25:10 189  ,cad_g19
08:25:10 190  ,cad_g20
08:25:10 191  ,cad_g21
08:25:10 192  ,cad_g22
08:25:10 193  ,cad_g23
08:25:10 194  ,cad_g24
08:25:10 195  ,cad_g25
08:25:10 196  ,cad_g26
08:25:10 197  ,cad_g27
08:25:10 198  ,cad_g28
08:25:10 199  ,cad_g29
08:25:10 200  ,cad_g30
08:25:10 201  ,cad_g31
08:25:10 202  ,cad_g32
08:25:10 203  ,cad_g33
08:25:10 204  ,cad_g34
08:25:10 205  ,cad_g35
08:25:10 206  ,cad_g36
08:25:10 207  ,cad_g37
08:25:10 208  ,cad_g38
08:25:10 209  ,cad_g39
08:25:10 210  ,cad_g40
08:25:10 211  ,chf_g00
08:25:10 212  ,chf_g01
08:25:10 213  ,chf_g02
08:25:10 214  ,chf_g03
08:25:10 215  ,chf_g04
08:25:10 216  ,chf_g05
08:25:10 217  ,chf_g06
08:25:10 218  ,chf_g07
08:25:10 219  ,chf_g08
08:25:10 220  ,chf_g09
08:25:10 221  ,chf_g10
08:25:10 222  ,chf_g11
08:25:10 223  ,chf_g12
08:25:10 224  ,chf_g13
08:25:10 225  ,chf_g14
08:25:10 226  ,chf_g15
08:25:10 227  ,chf_g16
08:25:10 228  ,chf_g17
08:25:10 229  ,chf_g18
08:25:10 230  ,chf_g19
08:25:10 231  ,chf_g20
08:25:10 232  ,chf_g21
08:25:10 233  ,chf_g22
08:25:10 234  ,chf_g23
08:25:10 235  ,chf_g24
08:25:10 236  ,chf_g25
08:25:10 237  ,chf_g26
08:25:10 238  ,chf_g27
08:25:10 239  ,chf_g28
08:25:10 240  ,chf_g29
08:25:10 241  ,chf_g30
08:25:10 242  ,chf_g31
08:25:10 243  ,chf_g32
08:25:10 244  ,chf_g33
08:25:10 245  ,chf_g34
08:25:10 246  ,chf_g35
08:25:10 247  ,chf_g36
08:25:10 248  ,chf_g37
08:25:10 249  ,chf_g38
08:25:10 250  ,chf_g39
08:25:10 251  ,chf_g40
08:25:10 252  FROM aud_ms14 m
08:25:10 253  WHERE gatt IN('nup','up')
08:25:10 254  AND 1+m.ydate < '&1'||' '||'&2'
08:25:10 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'09:55:00'

View created.

Elapsed: 00:00:00.11
08:25:10 SQL> 
08:25:10 SQL> -- rpt
08:25:10 SQL> 
08:25:10 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt;

GAT COUNT(PRDATE)
--- -------------
nup	    13255
up	     6627

Elapsed: 00:00:00.04
08:25:10 SQL> 
08:25:10 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-16 09:50:00

Elapsed: 00:00:00.03
08:25:10 SQL> 
08:25:10 SQL> -- Now build model from bme and score sme
08:25:10 SQL> @score1.sql
08:25:10 SQL> -- score1.sql
08:25:10 SQL> 
08:25:10 SQL> -- Does the 1st SVM score
08:25:10 SQL> 
08:25:10 SQL> -- Fill up svmc_apply_prep
08:25:10 SQL> @score.sql
08:25:10 SQL> --
08:25:10 SQL> -- score.sql
08:25:10 SQL> --
08:25:10 SQL> 
08:25:10 SQL> -- usage: score.sql
08:25:10 SQL> 
08:25:10 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
08:25:10 SQL> 
08:25:10 SQL> DEFINE target	= 'gatt'
08:25:10 SQL> DEFINE model_name = 'forex14'
08:25:10 SQL> DEFINE bldtable	= 'bme'
08:25:10 SQL> DEFINE scoretable = 'sme'
08:25:10 SQL> DEFINE case_id	= 'prdate'
08:25:10 SQL> 
08:25:10 SQL> -- Define a variable to help me exclude some columns from some data mining calls
08:25:10 SQL> DEFINE exclude1 = "'&target','&case_id'"
08:25:10 SQL> 
08:25:10 SQL> -- Builds an SVM model using pl/sql.
08:25:10 SQL> 
08:25:10 SQL> -----------------------------------------------------------------------
08:25:10 SQL> --			    BUILD THE MODEL
08:25:10 SQL> -----------------------------------------------------------------------
08:25:10 SQL> 
08:25:10 SQL> -- Cleanup old build data preparation objects for repeat runs
08:25:10 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
08:25:10 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
08:25:10 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
08:25:10 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
08:25:10 SQL> 
08:25:10 SQL> 
08:25:10 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
08:25:10 SQL> --
08:25:10 SQL> -- DROP	TABLE svmc_settings ;
08:25:10 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
08:25:10 SQL> -- DELETE svmc_settings;
08:25:10 SQL> 
08:25:10 SQL> -- The default classification algorithm is Naive Bayes. So override
08:25:10 SQL> -- this choice to SVM using a settings table.
08:25:10 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
08:25:10 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
08:25:10 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
08:25:10 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
08:25:10 SQL> -- models.
08:25:10 SQL> --
08:25:10 SQL> 
08:25:10 SQL> -- Do this once and then comment it out.
08:25:10 SQL> -- That makes script go faster.
08:25:10 SQL> -- BEGIN
08:25:10 SQL> -- -- Populate settings table
08:25:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:25:10 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
08:25:10 SQL> --
08:25:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:25:10 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
08:25:10 SQL> --
08:25:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:25:10 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
08:25:10 SQL> --   COMMIT;
08:25:10 SQL> -- END;
08:25:10 SQL> -- /
08:25:10 SQL> 
08:25:10 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
08:25:10 SQL> 
08:25:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
08:25:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:25:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:25:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
08:25:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:25:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
08:25:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
08:25:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:25:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:25:11 SQL> 
08:25:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
08:25:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:25:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
08:25:11 SQL> 
08:25:11 SQL> --------------------------------
08:25:11 SQL> -- PREPARE BUILD (TRAINING) DATA
08:25:11 SQL> --
08:25:11 SQL> 
08:25:11 SQL> -- 1. Missing Value treatment for all Predictors and
08:25:11 SQL> -- 2. Outlier Treatment and
08:25:11 SQL> -- 3. Normalization are performed below.
08:25:11 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
08:25:11 SQL> --    normalized here.
08:25:11 SQL> 
08:25:11 SQL> BEGIN
08:25:11   2  	-- Perform missing value treatment for all predictors
08:25:11   3  	-- create miss tables
08:25:11   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
08:25:11   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
08:25:11   6  
08:25:11   7  	-- populate miss tables
08:25:11   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
08:25:11   9  	  miss_table_name => 'svmc_miss_num',
08:25:11  10  	  data_table_name => '&bldtable',
08:25:11  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:25:11  12  
08:25:11  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
08:25:11  14  	  miss_table_name => 'svmc_miss_cat',
08:25:11  15  	  data_table_name => '&bldtable',
08:25:11  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:25:11  17  
08:25:11  18  	-- xform input data to replace missing values
08:25:11  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:25:11  20  	  miss_table_name => 'svmc_miss_num',
08:25:11  21  	  data_table_name => '&bldtable',
08:25:11  22  	  xform_view_name => 'xformed_build_miss_num');
08:25:11  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:25:11  24  	  miss_table_name => 'svmc_miss_cat',
08:25:11  25  	  data_table_name => '&bldtable',
08:25:11  26  	  xform_view_name => 'xformed_build_miss_cat');
08:25:11  27  
08:25:11  28  	-- Perform outlier treatment.
08:25:11  29  	-- create clip table
08:25:11  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
08:25:11  31  
08:25:11  32  	-- populate clip table
08:25:11  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
08:25:11  34  	  clip_table_name => 'svmc_clip',
08:25:11  35  	  data_table_name => '&bldtable',
08:25:11  36  	  tail_frac	  => 0.025,
08:25:11  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:25:11  38  
08:25:11  39  	-- xform input data to winsorized data
08:25:11  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
08:25:11  41  	  clip_table_name => 'svmc_clip',
08:25:11  42  	  data_table_name => '&bldtable',
08:25:11  43  	  xform_view_name => 'svmc_winsor');
08:25:11  44  
08:25:11  45  	-- create normalization table
08:25:11  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
08:25:11  47  
08:25:11  48  	-- populate normalization table based on winsorized data
08:25:11  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
08:25:11  50  	  norm_table_name => 'svmc_norm',
08:25:11  51  	  data_table_name => 'svmc_winsor',
08:25:11  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:25:11  53  
08:25:11  54  	-- normalize the original data
08:25:11  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:25:11  56  	  norm_table_name => 'svmc_norm',
08:25:11  57  	  data_table_name => '&bldtable',
08:25:11  58  	  xform_view_name => 'svmc_build_prep');
08:25:11  59  END;
08:25:11  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.41
08:25:29 SQL> 
08:25:29 SQL> ---------------------
08:25:29 SQL> -- CREATE A NEW MODEL
08:25:29 SQL> --
08:25:29 SQL> -- Cleanup old model with the same name for repeat runs
08:25:29 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
08:25:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:25:29   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.06
08:25:30 SQL> 
08:25:30 SQL> -- Build a new SVM Model
08:25:30 SQL> BEGIN
08:25:30   2  	DBMS_DATA_MINING.CREATE_MODEL(
08:25:30   3  	  model_name	      => '&model_name',
08:25:30   4  	  mining_function     => dbms_data_mining.classification,
08:25:30   5  	  data_table_name     => 'svmc_build_prep',
08:25:30   6  	  case_id_column_name => '&case_id',
08:25:30   7  	  target_column_name  => '&target',
08:25:30   8  	  settings_table_name => 'svmc_settings');
08:25:30   9  END;
08:25:30  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:24.97
08:25:55 SQL> 
08:25:55 SQL> -----------------------------------------------------------------------
08:25:55 SQL> --			       APPLY/score THE MODEL
08:25:55 SQL> -----------------------------------------------------------------------
08:25:55 SQL> 
08:25:55 SQL> -- Cleanup old scoring data preparation objects for repeat runs
08:25:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
08:25:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:25:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
08:25:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
08:25:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:25:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:25:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
08:25:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:25:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:25:55 SQL> -----------------------
08:25:55 SQL> -- PREPARE SCORING DATA
08:25:55 SQL> --
08:25:55 SQL> -- If the data for model creation has been prepared, then the data
08:25:55 SQL> -- to be scored using the model must be prepared in the same manner
08:25:55 SQL> -- in order to obtain meaningful results.
08:25:55 SQL> --
08:25:55 SQL> -- 1. Missing Value treatment for all Predictors and
08:25:55 SQL> -- 2. Normalization
08:25:55 SQL> -- No outlier treatment will be performed during test and apply. The
08:25:55 SQL> -- normalization step is sufficient, since the normalization parameters
08:25:55 SQL> -- already capture the effects of outlier treatment done with build data.
08:25:55 SQL> --
08:25:55 SQL> BEGIN
08:25:55   2  	-- Xform Test data to replace missing values
08:25:55   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:25:55   4  	  miss_table_name => 'svmc_miss_num',
08:25:55   5  	  data_table_name => '&scoretable',
08:25:55   6  	  xform_view_name => 'xformed_apply_miss_num');
08:25:55   7  
08:25:55   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:25:55   9  	  miss_table_name => 'svmc_miss_cat',
08:25:55  10  	  data_table_name => '&scoretable',
08:25:55  11  	  xform_view_name => 'xformed_apply_miss_cat');
08:25:55  12  
08:25:55  13  	-- Normalize the data to be scored
08:25:55  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:25:55  15  	  norm_table_name => 'svmc_norm',
08:25:55  16  	  data_table_name => '&scoretable',
08:25:55  17  	  xform_view_name => 'svmc_apply_prep');
08:25:55  18  END;
08:25:55  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.15
08:25:56 SQL> 
08:25:56 SQL> -- Use same model_name used in score.sql
08:25:56 SQL> DEFINE model_name = 'forex14'
08:25:56 SQL> 
08:25:56 SQL> -- CREATE TABLE fxscores8hp (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
08:25:56 SQL> 
08:25:56 SQL> DELETE fxscores8hp WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
08:25:57 SQL> 
08:25:57 SQL> INSERT INTO fxscores8hp (prdate,score,rundate,pair,ydate)
08:25:57   2  SELECT
08:25:57   3  prdate
08:25:57   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
08:25:57   5  ,sysdate
08:25:57   6  ,SUBSTR(prdate,1,3)pair
08:25:57   7  ,SUBSTR(prdate,4,19)ydate
08:25:57   8  FROM svmc_apply_prep
08:25:57   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
08:25:57 SQL> @aud_score1day.sql  2010-12-17 09:50:00
08:25:57 SQL> --
08:25:57 SQL> -- aud_score1day.sql
08:25:57 SQL> --
08:25:57 SQL> 
08:25:57 SQL> CREATE OR REPLACE VIEW sme AS
08:25:57   2  SELECT
08:25:57   3  'aud'||m.ydate prdate
08:25:57   4  ,NULL gatt
08:25:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:25:57   6  ,eur_g00
08:25:57   7  ,eur_g01
08:25:57   8  ,eur_g02
08:25:57   9  ,eur_g03
08:25:57  10  ,eur_g04
08:25:57  11  ,eur_g05
08:25:57  12  ,eur_g06
08:25:57  13  ,eur_g07
08:25:57  14  ,eur_g08
08:25:57  15  ,eur_g09
08:25:57  16  ,eur_g10
08:25:57  17  ,eur_g11
08:25:57  18  ,eur_g12
08:25:57  19  ,eur_g13
08:25:57  20  ,eur_g14
08:25:57  21  ,eur_g15
08:25:57  22  ,eur_g16
08:25:57  23  ,eur_g17
08:25:57  24  ,eur_g18
08:25:57  25  ,eur_g19
08:25:57  26  ,eur_g20
08:25:57  27  ,eur_g21
08:25:57  28  ,eur_g22
08:25:57  29  ,eur_g23
08:25:57  30  ,eur_g24
08:25:57  31  ,eur_g25
08:25:57  32  ,eur_g26
08:25:57  33  ,eur_g27
08:25:57  34  ,eur_g28
08:25:57  35  ,eur_g29
08:25:57  36  ,eur_g30
08:25:57  37  ,eur_g31
08:25:57  38  ,eur_g32
08:25:57  39  ,eur_g33
08:25:57  40  ,eur_g34
08:25:57  41  ,eur_g35
08:25:57  42  ,eur_g36
08:25:57  43  ,eur_g37
08:25:57  44  ,eur_g38
08:25:57  45  ,eur_g39
08:25:57  46  ,eur_g40
08:25:57  47  ,aud_g00
08:25:57  48  ,aud_g01
08:25:57  49  ,aud_g02
08:25:57  50  ,aud_g03
08:25:57  51  ,aud_g04
08:25:57  52  ,aud_g05
08:25:57  53  ,aud_g06
08:25:57  54  ,aud_g07
08:25:57  55  ,aud_g08
08:25:57  56  ,aud_g09
08:25:57  57  ,aud_g10
08:25:57  58  ,aud_g11
08:25:57  59  ,aud_g12
08:25:57  60  ,aud_g13
08:25:57  61  ,aud_g14
08:25:57  62  ,aud_g15
08:25:57  63  ,aud_g16
08:25:57  64  ,aud_g17
08:25:57  65  ,aud_g18
08:25:57  66  ,aud_g19
08:25:57  67  ,aud_g20
08:25:57  68  ,aud_g21
08:25:57  69  ,aud_g22
08:25:57  70  ,aud_g23
08:25:57  71  ,aud_g24
08:25:57  72  ,aud_g25
08:25:57  73  ,aud_g26
08:25:57  74  ,aud_g27
08:25:57  75  ,aud_g28
08:25:57  76  ,aud_g29
08:25:57  77  ,aud_g30
08:25:57  78  ,aud_g31
08:25:57  79  ,aud_g32
08:25:57  80  ,aud_g33
08:25:57  81  ,aud_g34
08:25:57  82  ,aud_g35
08:25:57  83  ,aud_g36
08:25:57  84  ,aud_g37
08:25:57  85  ,aud_g38
08:25:57  86  ,aud_g39
08:25:57  87  ,aud_g40
08:25:57  88  ,gbp_g00
08:25:57  89  ,gbp_g01
08:25:57  90  ,gbp_g02
08:25:57  91  ,gbp_g03
08:25:57  92  ,gbp_g04
08:25:57  93  ,gbp_g05
08:25:57  94  ,gbp_g06
08:25:57  95  ,gbp_g07
08:25:57  96  ,gbp_g08
08:25:57  97  ,gbp_g09
08:25:57  98  ,gbp_g10
08:25:57  99  ,gbp_g11
08:25:57 100  ,gbp_g12
08:25:57 101  ,gbp_g13
08:25:57 102  ,gbp_g14
08:25:57 103  ,gbp_g15
08:25:57 104  ,gbp_g16
08:25:57 105  ,gbp_g17
08:25:57 106  ,gbp_g18
08:25:57 107  ,gbp_g19
08:25:57 108  ,gbp_g20
08:25:57 109  ,gbp_g21
08:25:57 110  ,gbp_g22
08:25:57 111  ,gbp_g23
08:25:57 112  ,gbp_g24
08:25:57 113  ,gbp_g25
08:25:57 114  ,gbp_g26
08:25:57 115  ,gbp_g27
08:25:57 116  ,gbp_g28
08:25:57 117  ,gbp_g29
08:25:57 118  ,gbp_g30
08:25:57 119  ,gbp_g31
08:25:57 120  ,gbp_g32
08:25:57 121  ,gbp_g33
08:25:57 122  ,gbp_g34
08:25:57 123  ,gbp_g35
08:25:57 124  ,gbp_g36
08:25:57 125  ,gbp_g37
08:25:57 126  ,gbp_g38
08:25:57 127  ,gbp_g39
08:25:57 128  ,gbp_g40
08:25:57 129  ,jpy_g00
08:25:57 130  ,jpy_g01
08:25:57 131  ,jpy_g02
08:25:57 132  ,jpy_g03
08:25:57 133  ,jpy_g04
08:25:57 134  ,jpy_g05
08:25:57 135  ,jpy_g06
08:25:57 136  ,jpy_g07
08:25:57 137  ,jpy_g08
08:25:57 138  ,jpy_g09
08:25:57 139  ,jpy_g10
08:25:57 140  ,jpy_g11
08:25:57 141  ,jpy_g12
08:25:57 142  ,jpy_g13
08:25:57 143  ,jpy_g14
08:25:57 144  ,jpy_g15
08:25:57 145  ,jpy_g16
08:25:57 146  ,jpy_g17
08:25:57 147  ,jpy_g18
08:25:57 148  ,jpy_g19
08:25:57 149  ,jpy_g20
08:25:57 150  ,jpy_g21
08:25:57 151  ,jpy_g22
08:25:57 152  ,jpy_g23
08:25:57 153  ,jpy_g24
08:25:57 154  ,jpy_g25
08:25:57 155  ,jpy_g26
08:25:57 156  ,jpy_g27
08:25:57 157  ,jpy_g28
08:25:57 158  ,jpy_g29
08:25:57 159  ,jpy_g30
08:25:57 160  ,jpy_g31
08:25:57 161  ,jpy_g32
08:25:57 162  ,jpy_g33
08:25:57 163  ,jpy_g34
08:25:57 164  ,jpy_g35
08:25:57 165  ,jpy_g36
08:25:57 166  ,jpy_g37
08:25:57 167  ,jpy_g38
08:25:57 168  ,jpy_g39
08:25:57 169  ,jpy_g40
08:25:57 170  ,cad_g00
08:25:57 171  ,cad_g01
08:25:57 172  ,cad_g02
08:25:57 173  ,cad_g03
08:25:57 174  ,cad_g04
08:25:57 175  ,cad_g05
08:25:57 176  ,cad_g06
08:25:57 177  ,cad_g07
08:25:57 178  ,cad_g08
08:25:57 179  ,cad_g09
08:25:57 180  ,cad_g10
08:25:57 181  ,cad_g11
08:25:57 182  ,cad_g12
08:25:57 183  ,cad_g13
08:25:57 184  ,cad_g14
08:25:57 185  ,cad_g15
08:25:57 186  ,cad_g16
08:25:57 187  ,cad_g17
08:25:57 188  ,cad_g18
08:25:57 189  ,cad_g19
08:25:57 190  ,cad_g20
08:25:57 191  ,cad_g21
08:25:57 192  ,cad_g22
08:25:57 193  ,cad_g23
08:25:57 194  ,cad_g24
08:25:57 195  ,cad_g25
08:25:57 196  ,cad_g26
08:25:57 197  ,cad_g27
08:25:57 198  ,cad_g28
08:25:57 199  ,cad_g29
08:25:57 200  ,cad_g30
08:25:57 201  ,cad_g31
08:25:57 202  ,cad_g32
08:25:57 203  ,cad_g33
08:25:57 204  ,cad_g34
08:25:57 205  ,cad_g35
08:25:57 206  ,cad_g36
08:25:57 207  ,cad_g37
08:25:57 208  ,cad_g38
08:25:57 209  ,cad_g39
08:25:57 210  ,cad_g40
08:25:57 211  ,chf_g00
08:25:57 212  ,chf_g01
08:25:57 213  ,chf_g02
08:25:57 214  ,chf_g03
08:25:57 215  ,chf_g04
08:25:57 216  ,chf_g05
08:25:57 217  ,chf_g06
08:25:57 218  ,chf_g07
08:25:57 219  ,chf_g08
08:25:57 220  ,chf_g09
08:25:57 221  ,chf_g10
08:25:57 222  ,chf_g11
08:25:57 223  ,chf_g12
08:25:57 224  ,chf_g13
08:25:57 225  ,chf_g14
08:25:57 226  ,chf_g15
08:25:57 227  ,chf_g16
08:25:57 228  ,chf_g17
08:25:57 229  ,chf_g18
08:25:57 230  ,chf_g19
08:25:57 231  ,chf_g20
08:25:57 232  ,chf_g21
08:25:57 233  ,chf_g22
08:25:57 234  ,chf_g23
08:25:57 235  ,chf_g24
08:25:57 236  ,chf_g25
08:25:57 237  ,chf_g26
08:25:57 238  ,chf_g27
08:25:57 239  ,chf_g28
08:25:57 240  ,chf_g29
08:25:57 241  ,chf_g30
08:25:57 242  ,chf_g31
08:25:57 243  ,chf_g32
08:25:57 244  ,chf_g33
08:25:57 245  ,chf_g34
08:25:57 246  ,chf_g35
08:25:57 247  ,chf_g36
08:25:57 248  ,chf_g37
08:25:57 249  ,chf_g38
08:25:57 250  ,chf_g39
08:25:57 251  ,chf_g40
08:25:57 252  FROM aud_ms14 m
08:25:57 253  WHERE m.ydate = '&1'||' '||'&2'
08:25:57 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'09:50:00'

View created.

Elapsed: 00:00:00.11
08:25:57 SQL> 
08:25:57 SQL> -- rpt
08:25:57 SQL> -- We should see just 1 row:
08:25:57 SQL> 
08:25:57 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
08:25:57 SQL> 
08:25:57 SQL> -- Build the model:
08:25:57 SQL> CREATE OR REPLACE VIEW bme AS
08:25:57   2  SELECT
08:25:57   3  'aud'||m.ydate prdate
08:25:57   4  ,gatt
08:25:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:25:57   6  ,eur_g00
08:25:57   7  ,eur_g01
08:25:57   8  ,eur_g02
08:25:57   9  ,eur_g03
08:25:57  10  ,eur_g04
08:25:57  11  ,eur_g05
08:25:57  12  ,eur_g06
08:25:57  13  ,eur_g07
08:25:57  14  ,eur_g08
08:25:57  15  ,eur_g09
08:25:57  16  ,eur_g10
08:25:57  17  ,eur_g11
08:25:57  18  ,eur_g12
08:25:57  19  ,eur_g13
08:25:57  20  ,eur_g14
08:25:57  21  ,eur_g15
08:25:57  22  ,eur_g16
08:25:57  23  ,eur_g17
08:25:57  24  ,eur_g18
08:25:57  25  ,eur_g19
08:25:57  26  ,eur_g20
08:25:57  27  ,eur_g21
08:25:57  28  ,eur_g22
08:25:57  29  ,eur_g23
08:25:57  30  ,eur_g24
08:25:57  31  ,eur_g25
08:25:57  32  ,eur_g26
08:25:57  33  ,eur_g27
08:25:57  34  ,eur_g28
08:25:57  35  ,eur_g29
08:25:57  36  ,eur_g30
08:25:57  37  ,eur_g31
08:25:57  38  ,eur_g32
08:25:57  39  ,eur_g33
08:25:57  40  ,eur_g34
08:25:57  41  ,eur_g35
08:25:57  42  ,eur_g36
08:25:57  43  ,eur_g37
08:25:57  44  ,eur_g38
08:25:57  45  ,eur_g39
08:25:57  46  ,eur_g40
08:25:57  47  ,aud_g00
08:25:57  48  ,aud_g01
08:25:57  49  ,aud_g02
08:25:57  50  ,aud_g03
08:25:57  51  ,aud_g04
08:25:57  52  ,aud_g05
08:25:57  53  ,aud_g06
08:25:57  54  ,aud_g07
08:25:57  55  ,aud_g08
08:25:57  56  ,aud_g09
08:25:57  57  ,aud_g10
08:25:57  58  ,aud_g11
08:25:57  59  ,aud_g12
08:25:57  60  ,aud_g13
08:25:57  61  ,aud_g14
08:25:57  62  ,aud_g15
08:25:57  63  ,aud_g16
08:25:57  64  ,aud_g17
08:25:57  65  ,aud_g18
08:25:57  66  ,aud_g19
08:25:57  67  ,aud_g20
08:25:57  68  ,aud_g21
08:25:57  69  ,aud_g22
08:25:57  70  ,aud_g23
08:25:57  71  ,aud_g24
08:25:57  72  ,aud_g25
08:25:57  73  ,aud_g26
08:25:57  74  ,aud_g27
08:25:57  75  ,aud_g28
08:25:57  76  ,aud_g29
08:25:57  77  ,aud_g30
08:25:57  78  ,aud_g31
08:25:57  79  ,aud_g32
08:25:57  80  ,aud_g33
08:25:57  81  ,aud_g34
08:25:57  82  ,aud_g35
08:25:57  83  ,aud_g36
08:25:57  84  ,aud_g37
08:25:57  85  ,aud_g38
08:25:57  86  ,aud_g39
08:25:57  87  ,aud_g40
08:25:57  88  ,gbp_g00
08:25:57  89  ,gbp_g01
08:25:57  90  ,gbp_g02
08:25:57  91  ,gbp_g03
08:25:57  92  ,gbp_g04
08:25:57  93  ,gbp_g05
08:25:57  94  ,gbp_g06
08:25:57  95  ,gbp_g07
08:25:57  96  ,gbp_g08
08:25:57  97  ,gbp_g09
08:25:57  98  ,gbp_g10
08:25:57  99  ,gbp_g11
08:25:57 100  ,gbp_g12
08:25:57 101  ,gbp_g13
08:25:57 102  ,gbp_g14
08:25:57 103  ,gbp_g15
08:25:57 104  ,gbp_g16
08:25:57 105  ,gbp_g17
08:25:57 106  ,gbp_g18
08:25:57 107  ,gbp_g19
08:25:57 108  ,gbp_g20
08:25:57 109  ,gbp_g21
08:25:57 110  ,gbp_g22
08:25:57 111  ,gbp_g23
08:25:57 112  ,gbp_g24
08:25:57 113  ,gbp_g25
08:25:57 114  ,gbp_g26
08:25:57 115  ,gbp_g27
08:25:57 116  ,gbp_g28
08:25:57 117  ,gbp_g29
08:25:57 118  ,gbp_g30
08:25:57 119  ,gbp_g31
08:25:57 120  ,gbp_g32
08:25:57 121  ,gbp_g33
08:25:57 122  ,gbp_g34
08:25:57 123  ,gbp_g35
08:25:57 124  ,gbp_g36
08:25:57 125  ,gbp_g37
08:25:57 126  ,gbp_g38
08:25:57 127  ,gbp_g39
08:25:57 128  ,gbp_g40
08:25:57 129  ,jpy_g00
08:25:57 130  ,jpy_g01
08:25:57 131  ,jpy_g02
08:25:57 132  ,jpy_g03
08:25:57 133  ,jpy_g04
08:25:57 134  ,jpy_g05
08:25:57 135  ,jpy_g06
08:25:57 136  ,jpy_g07
08:25:57 137  ,jpy_g08
08:25:57 138  ,jpy_g09
08:25:57 139  ,jpy_g10
08:25:57 140  ,jpy_g11
08:25:57 141  ,jpy_g12
08:25:57 142  ,jpy_g13
08:25:57 143  ,jpy_g14
08:25:57 144  ,jpy_g15
08:25:57 145  ,jpy_g16
08:25:57 146  ,jpy_g17
08:25:57 147  ,jpy_g18
08:25:57 148  ,jpy_g19
08:25:57 149  ,jpy_g20
08:25:57 150  ,jpy_g21
08:25:57 151  ,jpy_g22
08:25:57 152  ,jpy_g23
08:25:57 153  ,jpy_g24
08:25:57 154  ,jpy_g25
08:25:57 155  ,jpy_g26
08:25:57 156  ,jpy_g27
08:25:57 157  ,jpy_g28
08:25:57 158  ,jpy_g29
08:25:57 159  ,jpy_g30
08:25:57 160  ,jpy_g31
08:25:57 161  ,jpy_g32
08:25:57 162  ,jpy_g33
08:25:57 163  ,jpy_g34
08:25:57 164  ,jpy_g35
08:25:57 165  ,jpy_g36
08:25:57 166  ,jpy_g37
08:25:57 167  ,jpy_g38
08:25:57 168  ,jpy_g39
08:25:57 169  ,jpy_g40
08:25:57 170  ,cad_g00
08:25:57 171  ,cad_g01
08:25:57 172  ,cad_g02
08:25:57 173  ,cad_g03
08:25:57 174  ,cad_g04
08:25:57 175  ,cad_g05
08:25:57 176  ,cad_g06
08:25:57 177  ,cad_g07
08:25:57 178  ,cad_g08
08:25:57 179  ,cad_g09
08:25:57 180  ,cad_g10
08:25:57 181  ,cad_g11
08:25:57 182  ,cad_g12
08:25:57 183  ,cad_g13
08:25:57 184  ,cad_g14
08:25:57 185  ,cad_g15
08:25:57 186  ,cad_g16
08:25:57 187  ,cad_g17
08:25:57 188  ,cad_g18
08:25:57 189  ,cad_g19
08:25:57 190  ,cad_g20
08:25:57 191  ,cad_g21
08:25:57 192  ,cad_g22
08:25:57 193  ,cad_g23
08:25:57 194  ,cad_g24
08:25:57 195  ,cad_g25
08:25:57 196  ,cad_g26
08:25:57 197  ,cad_g27
08:25:57 198  ,cad_g28
08:25:57 199  ,cad_g29
08:25:57 200  ,cad_g30
08:25:57 201  ,cad_g31
08:25:57 202  ,cad_g32
08:25:57 203  ,cad_g33
08:25:57 204  ,cad_g34
08:25:57 205  ,cad_g35
08:25:57 206  ,cad_g36
08:25:57 207  ,cad_g37
08:25:57 208  ,cad_g38
08:25:57 209  ,cad_g39
08:25:57 210  ,cad_g40
08:25:57 211  ,chf_g00
08:25:57 212  ,chf_g01
08:25:57 213  ,chf_g02
08:25:57 214  ,chf_g03
08:25:57 215  ,chf_g04
08:25:57 216  ,chf_g05
08:25:57 217  ,chf_g06
08:25:57 218  ,chf_g07
08:25:57 219  ,chf_g08
08:25:57 220  ,chf_g09
08:25:57 221  ,chf_g10
08:25:57 222  ,chf_g11
08:25:57 223  ,chf_g12
08:25:57 224  ,chf_g13
08:25:57 225  ,chf_g14
08:25:57 226  ,chf_g15
08:25:57 227  ,chf_g16
08:25:57 228  ,chf_g17
08:25:57 229  ,chf_g18
08:25:57 230  ,chf_g19
08:25:57 231  ,chf_g20
08:25:57 232  ,chf_g21
08:25:57 233  ,chf_g22
08:25:57 234  ,chf_g23
08:25:57 235  ,chf_g24
08:25:57 236  ,chf_g25
08:25:57 237  ,chf_g26
08:25:57 238  ,chf_g27
08:25:57 239  ,chf_g28
08:25:57 240  ,chf_g29
08:25:57 241  ,chf_g30
08:25:57 242  ,chf_g31
08:25:57 243  ,chf_g32
08:25:57 244  ,chf_g33
08:25:57 245  ,chf_g34
08:25:57 246  ,chf_g35
08:25:57 247  ,chf_g36
08:25:57 248  ,chf_g37
08:25:57 249  ,chf_g38
08:25:57 250  ,chf_g39
08:25:57 251  ,chf_g40
08:25:57 252  FROM aud_ms14 m
08:25:57 253  WHERE gatt IN('nup','up')
08:25:57 254  AND 1+m.ydate < '&1'||' '||'&2'
08:25:57 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'09:50:00'

View created.

Elapsed: 00:00:00.13
08:25:57 SQL> 
08:25:57 SQL> -- rpt
08:25:57 SQL> 
08:25:57 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt;

GAT COUNT(PRDATE)
--- -------------
nup	    13254
up	     6627

Elapsed: 00:00:00.05
08:25:57 SQL> 
08:25:57 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-16 09:45:00

Elapsed: 00:00:00.03
08:25:57 SQL> 
08:25:57 SQL> -- Now build model from bme and score sme
08:25:57 SQL> @score1.sql
08:25:57 SQL> -- score1.sql
08:25:57 SQL> 
08:25:57 SQL> -- Does the 1st SVM score
08:25:57 SQL> 
08:25:57 SQL> -- Fill up svmc_apply_prep
08:25:57 SQL> @score.sql
08:25:57 SQL> --
08:25:57 SQL> -- score.sql
08:25:57 SQL> --
08:25:57 SQL> 
08:25:57 SQL> -- usage: score.sql
08:25:57 SQL> 
08:25:57 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
08:25:57 SQL> 
08:25:57 SQL> DEFINE target	= 'gatt'
08:25:57 SQL> DEFINE model_name = 'forex14'
08:25:57 SQL> DEFINE bldtable	= 'bme'
08:25:57 SQL> DEFINE scoretable = 'sme'
08:25:57 SQL> DEFINE case_id	= 'prdate'
08:25:57 SQL> 
08:25:57 SQL> -- Define a variable to help me exclude some columns from some data mining calls
08:25:57 SQL> DEFINE exclude1 = "'&target','&case_id'"
08:25:57 SQL> 
08:25:57 SQL> -- Builds an SVM model using pl/sql.
08:25:57 SQL> 
08:25:57 SQL> -----------------------------------------------------------------------
08:25:57 SQL> --			    BUILD THE MODEL
08:25:57 SQL> -----------------------------------------------------------------------
08:25:57 SQL> 
08:25:57 SQL> -- Cleanup old build data preparation objects for repeat runs
08:25:57 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.01
08:25:57 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
08:25:57 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.01
08:25:57 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
08:25:57 SQL> 
08:25:57 SQL> 
08:25:57 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
08:25:57 SQL> --
08:25:57 SQL> -- DROP	TABLE svmc_settings ;
08:25:57 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
08:25:57 SQL> -- DELETE svmc_settings;
08:25:57 SQL> 
08:25:57 SQL> -- The default classification algorithm is Naive Bayes. So override
08:25:57 SQL> -- this choice to SVM using a settings table.
08:25:57 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
08:25:57 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
08:25:57 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
08:25:57 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
08:25:57 SQL> -- models.
08:25:57 SQL> --
08:25:57 SQL> 
08:25:57 SQL> -- Do this once and then comment it out.
08:25:57 SQL> -- That makes script go faster.
08:25:57 SQL> -- BEGIN
08:25:57 SQL> -- -- Populate settings table
08:25:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:25:57 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
08:25:57 SQL> --
08:25:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:25:57 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
08:25:57 SQL> --
08:25:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:25:57 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
08:25:57 SQL> --   COMMIT;
08:25:57 SQL> -- END;
08:25:57 SQL> -- /
08:25:57 SQL> 
08:25:57 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
08:25:57 SQL> 
08:25:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
08:25:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:25:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:25:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
08:25:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:25:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:25:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
08:25:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:25:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:25:57 SQL> 
08:25:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
08:25:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:25:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:25:57 SQL> 
08:25:57 SQL> --------------------------------
08:25:57 SQL> -- PREPARE BUILD (TRAINING) DATA
08:25:57 SQL> --
08:25:57 SQL> 
08:25:57 SQL> -- 1. Missing Value treatment for all Predictors and
08:25:57 SQL> -- 2. Outlier Treatment and
08:25:57 SQL> -- 3. Normalization are performed below.
08:25:57 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
08:25:57 SQL> --    normalized here.
08:25:57 SQL> 
08:25:57 SQL> BEGIN
08:25:57   2  	-- Perform missing value treatment for all predictors
08:25:57   3  	-- create miss tables
08:25:57   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
08:25:57   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
08:25:57   6  
08:25:57   7  	-- populate miss tables
08:25:57   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
08:25:57   9  	  miss_table_name => 'svmc_miss_num',
08:25:57  10  	  data_table_name => '&bldtable',
08:25:57  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:25:57  12  
08:25:57  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
08:25:57  14  	  miss_table_name => 'svmc_miss_cat',
08:25:57  15  	  data_table_name => '&bldtable',
08:25:57  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:25:57  17  
08:25:57  18  	-- xform input data to replace missing values
08:25:57  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:25:57  20  	  miss_table_name => 'svmc_miss_num',
08:25:57  21  	  data_table_name => '&bldtable',
08:25:57  22  	  xform_view_name => 'xformed_build_miss_num');
08:25:57  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:25:57  24  	  miss_table_name => 'svmc_miss_cat',
08:25:57  25  	  data_table_name => '&bldtable',
08:25:57  26  	  xform_view_name => 'xformed_build_miss_cat');
08:25:57  27  
08:25:57  28  	-- Perform outlier treatment.
08:25:57  29  	-- create clip table
08:25:57  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
08:25:57  31  
08:25:57  32  	-- populate clip table
08:25:57  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
08:25:57  34  	  clip_table_name => 'svmc_clip',
08:25:57  35  	  data_table_name => '&bldtable',
08:25:57  36  	  tail_frac	  => 0.025,
08:25:57  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:25:57  38  
08:25:57  39  	-- xform input data to winsorized data
08:25:57  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
08:25:57  41  	  clip_table_name => 'svmc_clip',
08:25:57  42  	  data_table_name => '&bldtable',
08:25:57  43  	  xform_view_name => 'svmc_winsor');
08:25:57  44  
08:25:57  45  	-- create normalization table
08:25:57  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
08:25:57  47  
08:25:57  48  	-- populate normalization table based on winsorized data
08:25:57  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
08:25:57  50  	  norm_table_name => 'svmc_norm',
08:25:57  51  	  data_table_name => 'svmc_winsor',
08:25:57  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:25:57  53  
08:25:57  54  	-- normalize the original data
08:25:57  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:25:57  56  	  norm_table_name => 'svmc_norm',
08:25:57  57  	  data_table_name => '&bldtable',
08:25:57  58  	  xform_view_name => 'svmc_build_prep');
08:25:57  59  END;
08:25:57  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.33
08:26:16 SQL> 
08:26:16 SQL> ---------------------
08:26:16 SQL> -- CREATE A NEW MODEL
08:26:16 SQL> --
08:26:16 SQL> -- Cleanup old model with the same name for repeat runs
08:26:16 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
08:26:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:26:16   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.91
08:26:17 SQL> 
08:26:17 SQL> -- Build a new SVM Model
08:26:17 SQL> BEGIN
08:26:17   2  	DBMS_DATA_MINING.CREATE_MODEL(
08:26:17   3  	  model_name	      => '&model_name',
08:26:17   4  	  mining_function     => dbms_data_mining.classification,
08:26:17   5  	  data_table_name     => 'svmc_build_prep',
08:26:17   6  	  case_id_column_name => '&case_id',
08:26:17   7  	  target_column_name  => '&target',
08:26:17   8  	  settings_table_name => 'svmc_settings');
08:26:17   9  END;
08:26:17  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:34.24
08:26:51 SQL> 
08:26:51 SQL> -----------------------------------------------------------------------
08:26:51 SQL> --			       APPLY/score THE MODEL
08:26:51 SQL> -----------------------------------------------------------------------
08:26:51 SQL> 
08:26:51 SQL> -- Cleanup old scoring data preparation objects for repeat runs
08:26:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
08:26:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:26:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:26:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
08:26:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:26:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
08:26:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
08:26:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:26:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
08:26:51 SQL> -----------------------
08:26:51 SQL> -- PREPARE SCORING DATA
08:26:51 SQL> --
08:26:51 SQL> -- If the data for model creation has been prepared, then the data
08:26:51 SQL> -- to be scored using the model must be prepared in the same manner
08:26:51 SQL> -- in order to obtain meaningful results.
08:26:51 SQL> --
08:26:51 SQL> -- 1. Missing Value treatment for all Predictors and
08:26:51 SQL> -- 2. Normalization
08:26:51 SQL> -- No outlier treatment will be performed during test and apply. The
08:26:51 SQL> -- normalization step is sufficient, since the normalization parameters
08:26:51 SQL> -- already capture the effects of outlier treatment done with build data.
08:26:51 SQL> --
08:26:51 SQL> BEGIN
08:26:51   2  	-- Xform Test data to replace missing values
08:26:51   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:26:51   4  	  miss_table_name => 'svmc_miss_num',
08:26:51   5  	  data_table_name => '&scoretable',
08:26:51   6  	  xform_view_name => 'xformed_apply_miss_num');
08:26:51   7  
08:26:51   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:26:51   9  	  miss_table_name => 'svmc_miss_cat',
08:26:51  10  	  data_table_name => '&scoretable',
08:26:51  11  	  xform_view_name => 'xformed_apply_miss_cat');
08:26:51  12  
08:26:51  13  	-- Normalize the data to be scored
08:26:51  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:26:51  15  	  norm_table_name => 'svmc_norm',
08:26:51  16  	  data_table_name => '&scoretable',
08:26:51  17  	  xform_view_name => 'svmc_apply_prep');
08:26:51  18  END;
08:26:51  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
08:26:52 SQL> 
08:26:52 SQL> -- Use same model_name used in score.sql
08:26:52 SQL> DEFINE model_name = 'forex14'
08:26:52 SQL> 
08:26:52 SQL> -- CREATE TABLE fxscores8hp (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
08:26:52 SQL> 
08:26:52 SQL> DELETE fxscores8hp WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
08:26:52 SQL> 
08:26:52 SQL> INSERT INTO fxscores8hp (prdate,score,rundate,pair,ydate)
08:26:52   2  SELECT
08:26:52   3  prdate
08:26:52   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
08:26:52   5  ,sysdate
08:26:52   6  ,SUBSTR(prdate,1,3)pair
08:26:52   7  ,SUBSTR(prdate,4,19)ydate
08:26:52   8  FROM svmc_apply_prep
08:26:52   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
08:26:52 SQL> @aud_score1day.sql  2010-12-17 09:45:00
08:26:52 SQL> --
08:26:52 SQL> -- aud_score1day.sql
08:26:52 SQL> --
08:26:52 SQL> 
08:26:52 SQL> CREATE OR REPLACE VIEW sme AS
08:26:52   2  SELECT
08:26:52   3  'aud'||m.ydate prdate
08:26:52   4  ,NULL gatt
08:26:52   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:26:52   6  ,eur_g00
08:26:52   7  ,eur_g01
08:26:52   8  ,eur_g02
08:26:52   9  ,eur_g03
08:26:52  10  ,eur_g04
08:26:52  11  ,eur_g05
08:26:52  12  ,eur_g06
08:26:52  13  ,eur_g07
08:26:52  14  ,eur_g08
08:26:52  15  ,eur_g09
08:26:52  16  ,eur_g10
08:26:52  17  ,eur_g11
08:26:52  18  ,eur_g12
08:26:52  19  ,eur_g13
08:26:52  20  ,eur_g14
08:26:52  21  ,eur_g15
08:26:52  22  ,eur_g16
08:26:52  23  ,eur_g17
08:26:52  24  ,eur_g18
08:26:52  25  ,eur_g19
08:26:52  26  ,eur_g20
08:26:52  27  ,eur_g21
08:26:52  28  ,eur_g22
08:26:52  29  ,eur_g23
08:26:52  30  ,eur_g24
08:26:52  31  ,eur_g25
08:26:52  32  ,eur_g26
08:26:52  33  ,eur_g27
08:26:52  34  ,eur_g28
08:26:52  35  ,eur_g29
08:26:52  36  ,eur_g30
08:26:52  37  ,eur_g31
08:26:52  38  ,eur_g32
08:26:52  39  ,eur_g33
08:26:52  40  ,eur_g34
08:26:52  41  ,eur_g35
08:26:52  42  ,eur_g36
08:26:52  43  ,eur_g37
08:26:52  44  ,eur_g38
08:26:52  45  ,eur_g39
08:26:52  46  ,eur_g40
08:26:52  47  ,aud_g00
08:26:52  48  ,aud_g01
08:26:52  49  ,aud_g02
08:26:52  50  ,aud_g03
08:26:52  51  ,aud_g04
08:26:52  52  ,aud_g05
08:26:52  53  ,aud_g06
08:26:52  54  ,aud_g07
08:26:52  55  ,aud_g08
08:26:52  56  ,aud_g09
08:26:52  57  ,aud_g10
08:26:52  58  ,aud_g11
08:26:52  59  ,aud_g12
08:26:52  60  ,aud_g13
08:26:52  61  ,aud_g14
08:26:52  62  ,aud_g15
08:26:52  63  ,aud_g16
08:26:52  64  ,aud_g17
08:26:52  65  ,aud_g18
08:26:52  66  ,aud_g19
08:26:52  67  ,aud_g20
08:26:52  68  ,aud_g21
08:26:52  69  ,aud_g22
08:26:52  70  ,aud_g23
08:26:52  71  ,aud_g24
08:26:52  72  ,aud_g25
08:26:52  73  ,aud_g26
08:26:52  74  ,aud_g27
08:26:52  75  ,aud_g28
08:26:52  76  ,aud_g29
08:26:52  77  ,aud_g30
08:26:52  78  ,aud_g31
08:26:52  79  ,aud_g32
08:26:52  80  ,aud_g33
08:26:52  81  ,aud_g34
08:26:52  82  ,aud_g35
08:26:52  83  ,aud_g36
08:26:52  84  ,aud_g37
08:26:52  85  ,aud_g38
08:26:52  86  ,aud_g39
08:26:52  87  ,aud_g40
08:26:52  88  ,gbp_g00
08:26:52  89  ,gbp_g01
08:26:52  90  ,gbp_g02
08:26:52  91  ,gbp_g03
08:26:52  92  ,gbp_g04
08:26:52  93  ,gbp_g05
08:26:52  94  ,gbp_g06
08:26:52  95  ,gbp_g07
08:26:52  96  ,gbp_g08
08:26:52  97  ,gbp_g09
08:26:52  98  ,gbp_g10
08:26:52  99  ,gbp_g11
08:26:52 100  ,gbp_g12
08:26:52 101  ,gbp_g13
08:26:52 102  ,gbp_g14
08:26:52 103  ,gbp_g15
08:26:52 104  ,gbp_g16
08:26:52 105  ,gbp_g17
08:26:52 106  ,gbp_g18
08:26:52 107  ,gbp_g19
08:26:52 108  ,gbp_g20
08:26:52 109  ,gbp_g21
08:26:52 110  ,gbp_g22
08:26:52 111  ,gbp_g23
08:26:52 112  ,gbp_g24
08:26:52 113  ,gbp_g25
08:26:52 114  ,gbp_g26
08:26:52 115  ,gbp_g27
08:26:52 116  ,gbp_g28
08:26:52 117  ,gbp_g29
08:26:52 118  ,gbp_g30
08:26:52 119  ,gbp_g31
08:26:52 120  ,gbp_g32
08:26:52 121  ,gbp_g33
08:26:52 122  ,gbp_g34
08:26:52 123  ,gbp_g35
08:26:52 124  ,gbp_g36
08:26:52 125  ,gbp_g37
08:26:52 126  ,gbp_g38
08:26:52 127  ,gbp_g39
08:26:52 128  ,gbp_g40
08:26:52 129  ,jpy_g00
08:26:52 130  ,jpy_g01
08:26:52 131  ,jpy_g02
08:26:52 132  ,jpy_g03
08:26:52 133  ,jpy_g04
08:26:52 134  ,jpy_g05
08:26:52 135  ,jpy_g06
08:26:52 136  ,jpy_g07
08:26:52 137  ,jpy_g08
08:26:52 138  ,jpy_g09
08:26:52 139  ,jpy_g10
08:26:52 140  ,jpy_g11
08:26:52 141  ,jpy_g12
08:26:52 142  ,jpy_g13
08:26:52 143  ,jpy_g14
08:26:52 144  ,jpy_g15
08:26:52 145  ,jpy_g16
08:26:52 146  ,jpy_g17
08:26:52 147  ,jpy_g18
08:26:52 148  ,jpy_g19
08:26:52 149  ,jpy_g20
08:26:52 150  ,jpy_g21
08:26:52 151  ,jpy_g22
08:26:52 152  ,jpy_g23
08:26:52 153  ,jpy_g24
08:26:52 154  ,jpy_g25
08:26:52 155  ,jpy_g26
08:26:52 156  ,jpy_g27
08:26:52 157  ,jpy_g28
08:26:52 158  ,jpy_g29
08:26:52 159  ,jpy_g30
08:26:52 160  ,jpy_g31
08:26:52 161  ,jpy_g32
08:26:52 162  ,jpy_g33
08:26:52 163  ,jpy_g34
08:26:52 164  ,jpy_g35
08:26:52 165  ,jpy_g36
08:26:52 166  ,jpy_g37
08:26:52 167  ,jpy_g38
08:26:52 168  ,jpy_g39
08:26:52 169  ,jpy_g40
08:26:52 170  ,cad_g00
08:26:52 171  ,cad_g01
08:26:52 172  ,cad_g02
08:26:52 173  ,cad_g03
08:26:52 174  ,cad_g04
08:26:52 175  ,cad_g05
08:26:52 176  ,cad_g06
08:26:52 177  ,cad_g07
08:26:52 178  ,cad_g08
08:26:52 179  ,cad_g09
08:26:52 180  ,cad_g10
08:26:52 181  ,cad_g11
08:26:52 182  ,cad_g12
08:26:52 183  ,cad_g13
08:26:52 184  ,cad_g14
08:26:52 185  ,cad_g15
08:26:52 186  ,cad_g16
08:26:52 187  ,cad_g17
08:26:52 188  ,cad_g18
08:26:52 189  ,cad_g19
08:26:52 190  ,cad_g20
08:26:52 191  ,cad_g21
08:26:52 192  ,cad_g22
08:26:52 193  ,cad_g23
08:26:52 194  ,cad_g24
08:26:52 195  ,cad_g25
08:26:52 196  ,cad_g26
08:26:52 197  ,cad_g27
08:26:52 198  ,cad_g28
08:26:52 199  ,cad_g29
08:26:52 200  ,cad_g30
08:26:52 201  ,cad_g31
08:26:52 202  ,cad_g32
08:26:52 203  ,cad_g33
08:26:52 204  ,cad_g34
08:26:52 205  ,cad_g35
08:26:52 206  ,cad_g36
08:26:52 207  ,cad_g37
08:26:52 208  ,cad_g38
08:26:52 209  ,cad_g39
08:26:52 210  ,cad_g40
08:26:52 211  ,chf_g00
08:26:52 212  ,chf_g01
08:26:52 213  ,chf_g02
08:26:52 214  ,chf_g03
08:26:52 215  ,chf_g04
08:26:52 216  ,chf_g05
08:26:52 217  ,chf_g06
08:26:52 218  ,chf_g07
08:26:52 219  ,chf_g08
08:26:52 220  ,chf_g09
08:26:52 221  ,chf_g10
08:26:52 222  ,chf_g11
08:26:52 223  ,chf_g12
08:26:52 224  ,chf_g13
08:26:52 225  ,chf_g14
08:26:52 226  ,chf_g15
08:26:52 227  ,chf_g16
08:26:52 228  ,chf_g17
08:26:52 229  ,chf_g18
08:26:52 230  ,chf_g19
08:26:52 231  ,chf_g20
08:26:52 232  ,chf_g21
08:26:52 233  ,chf_g22
08:26:52 234  ,chf_g23
08:26:52 235  ,chf_g24
08:26:52 236  ,chf_g25
08:26:52 237  ,chf_g26
08:26:52 238  ,chf_g27
08:26:52 239  ,chf_g28
08:26:52 240  ,chf_g29
08:26:52 241  ,chf_g30
08:26:52 242  ,chf_g31
08:26:52 243  ,chf_g32
08:26:52 244  ,chf_g33
08:26:52 245  ,chf_g34
08:26:52 246  ,chf_g35
08:26:52 247  ,chf_g36
08:26:52 248  ,chf_g37
08:26:52 249  ,chf_g38
08:26:52 250  ,chf_g39
08:26:52 251  ,chf_g40
08:26:52 252  FROM aud_ms14 m
08:26:52 253  WHERE m.ydate = '&1'||' '||'&2'
08:26:52 254  /
old 253: WHERE m.ydate = '&1'||' '||'&2'
new 253: WHERE m.ydate = '2010-12-17'||' '||'09:45:00'

View created.

Elapsed: 00:00:00.14
08:26:53 SQL> 
08:26:53 SQL> -- rpt
08:26:53 SQL> -- We should see just 1 row:
08:26:53 SQL> 
08:26:53 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
08:26:53 SQL> 
08:26:53 SQL> -- Build the model:
08:26:53 SQL> CREATE OR REPLACE VIEW bme AS
08:26:53   2  SELECT
08:26:53   3  'aud'||m.ydate prdate
08:26:53   4  ,gatt
08:26:53   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
08:26:53   6  ,eur_g00
08:26:53   7  ,eur_g01
08:26:53   8  ,eur_g02
08:26:53   9  ,eur_g03
08:26:53  10  ,eur_g04
08:26:53  11  ,eur_g05
08:26:53  12  ,eur_g06
08:26:53  13  ,eur_g07
08:26:53  14  ,eur_g08
08:26:53  15  ,eur_g09
08:26:53  16  ,eur_g10
08:26:53  17  ,eur_g11
08:26:53  18  ,eur_g12
08:26:53  19  ,eur_g13
08:26:53  20  ,eur_g14
08:26:53  21  ,eur_g15
08:26:53  22  ,eur_g16
08:26:53  23  ,eur_g17
08:26:53  24  ,eur_g18
08:26:53  25  ,eur_g19
08:26:53  26  ,eur_g20
08:26:53  27  ,eur_g21
08:26:53  28  ,eur_g22
08:26:53  29  ,eur_g23
08:26:53  30  ,eur_g24
08:26:53  31  ,eur_g25
08:26:53  32  ,eur_g26
08:26:53  33  ,eur_g27
08:26:53  34  ,eur_g28
08:26:53  35  ,eur_g29
08:26:53  36  ,eur_g30
08:26:53  37  ,eur_g31
08:26:53  38  ,eur_g32
08:26:53  39  ,eur_g33
08:26:53  40  ,eur_g34
08:26:53  41  ,eur_g35
08:26:53  42  ,eur_g36
08:26:53  43  ,eur_g37
08:26:53  44  ,eur_g38
08:26:53  45  ,eur_g39
08:26:53  46  ,eur_g40
08:26:53  47  ,aud_g00
08:26:53  48  ,aud_g01
08:26:53  49  ,aud_g02
08:26:53  50  ,aud_g03
08:26:53  51  ,aud_g04
08:26:53  52  ,aud_g05
08:26:53  53  ,aud_g06
08:26:53  54  ,aud_g07
08:26:53  55  ,aud_g08
08:26:53  56  ,aud_g09
08:26:53  57  ,aud_g10
08:26:53  58  ,aud_g11
08:26:53  59  ,aud_g12
08:26:53  60  ,aud_g13
08:26:53  61  ,aud_g14
08:26:53  62  ,aud_g15
08:26:53  63  ,aud_g16
08:26:53  64  ,aud_g17
08:26:53  65  ,aud_g18
08:26:53  66  ,aud_g19
08:26:53  67  ,aud_g20
08:26:53  68  ,aud_g21
08:26:53  69  ,aud_g22
08:26:53  70  ,aud_g23
08:26:53  71  ,aud_g24
08:26:53  72  ,aud_g25
08:26:53  73  ,aud_g26
08:26:53  74  ,aud_g27
08:26:53  75  ,aud_g28
08:26:53  76  ,aud_g29
08:26:53  77  ,aud_g30
08:26:53  78  ,aud_g31
08:26:53  79  ,aud_g32
08:26:53  80  ,aud_g33
08:26:53  81  ,aud_g34
08:26:53  82  ,aud_g35
08:26:53  83  ,aud_g36
08:26:53  84  ,aud_g37
08:26:53  85  ,aud_g38
08:26:53  86  ,aud_g39
08:26:53  87  ,aud_g40
08:26:53  88  ,gbp_g00
08:26:53  89  ,gbp_g01
08:26:53  90  ,gbp_g02
08:26:53  91  ,gbp_g03
08:26:53  92  ,gbp_g04
08:26:53  93  ,gbp_g05
08:26:53  94  ,gbp_g06
08:26:53  95  ,gbp_g07
08:26:53  96  ,gbp_g08
08:26:53  97  ,gbp_g09
08:26:53  98  ,gbp_g10
08:26:53  99  ,gbp_g11
08:26:53 100  ,gbp_g12
08:26:53 101  ,gbp_g13
08:26:53 102  ,gbp_g14
08:26:53 103  ,gbp_g15
08:26:53 104  ,gbp_g16
08:26:53 105  ,gbp_g17
08:26:53 106  ,gbp_g18
08:26:53 107  ,gbp_g19
08:26:53 108  ,gbp_g20
08:26:53 109  ,gbp_g21
08:26:53 110  ,gbp_g22
08:26:53 111  ,gbp_g23
08:26:53 112  ,gbp_g24
08:26:53 113  ,gbp_g25
08:26:53 114  ,gbp_g26
08:26:53 115  ,gbp_g27
08:26:53 116  ,gbp_g28
08:26:53 117  ,gbp_g29
08:26:53 118  ,gbp_g30
08:26:53 119  ,gbp_g31
08:26:53 120  ,gbp_g32
08:26:53 121  ,gbp_g33
08:26:53 122  ,gbp_g34
08:26:53 123  ,gbp_g35
08:26:53 124  ,gbp_g36
08:26:53 125  ,gbp_g37
08:26:53 126  ,gbp_g38
08:26:53 127  ,gbp_g39
08:26:53 128  ,gbp_g40
08:26:53 129  ,jpy_g00
08:26:53 130  ,jpy_g01
08:26:53 131  ,jpy_g02
08:26:53 132  ,jpy_g03
08:26:53 133  ,jpy_g04
08:26:53 134  ,jpy_g05
08:26:53 135  ,jpy_g06
08:26:53 136  ,jpy_g07
08:26:53 137  ,jpy_g08
08:26:53 138  ,jpy_g09
08:26:53 139  ,jpy_g10
08:26:53 140  ,jpy_g11
08:26:53 141  ,jpy_g12
08:26:53 142  ,jpy_g13
08:26:53 143  ,jpy_g14
08:26:53 144  ,jpy_g15
08:26:53 145  ,jpy_g16
08:26:53 146  ,jpy_g17
08:26:53 147  ,jpy_g18
08:26:53 148  ,jpy_g19
08:26:53 149  ,jpy_g20
08:26:53 150  ,jpy_g21
08:26:53 151  ,jpy_g22
08:26:53 152  ,jpy_g23
08:26:53 153  ,jpy_g24
08:26:53 154  ,jpy_g25
08:26:53 155  ,jpy_g26
08:26:53 156  ,jpy_g27
08:26:53 157  ,jpy_g28
08:26:53 158  ,jpy_g29
08:26:53 159  ,jpy_g30
08:26:53 160  ,jpy_g31
08:26:53 161  ,jpy_g32
08:26:53 162  ,jpy_g33
08:26:53 163  ,jpy_g34
08:26:53 164  ,jpy_g35
08:26:53 165  ,jpy_g36
08:26:53 166  ,jpy_g37
08:26:53 167  ,jpy_g38
08:26:53 168  ,jpy_g39
08:26:53 169  ,jpy_g40
08:26:53 170  ,cad_g00
08:26:53 171  ,cad_g01
08:26:53 172  ,cad_g02
08:26:53 173  ,cad_g03
08:26:53 174  ,cad_g04
08:26:53 175  ,cad_g05
08:26:53 176  ,cad_g06
08:26:53 177  ,cad_g07
08:26:53 178  ,cad_g08
08:26:53 179  ,cad_g09
08:26:53 180  ,cad_g10
08:26:53 181  ,cad_g11
08:26:53 182  ,cad_g12
08:26:53 183  ,cad_g13
08:26:53 184  ,cad_g14
08:26:53 185  ,cad_g15
08:26:53 186  ,cad_g16
08:26:53 187  ,cad_g17
08:26:53 188  ,cad_g18
08:26:53 189  ,cad_g19
08:26:53 190  ,cad_g20
08:26:53 191  ,cad_g21
08:26:53 192  ,cad_g22
08:26:53 193  ,cad_g23
08:26:53 194  ,cad_g24
08:26:53 195  ,cad_g25
08:26:53 196  ,cad_g26
08:26:53 197  ,cad_g27
08:26:53 198  ,cad_g28
08:26:53 199  ,cad_g29
08:26:53 200  ,cad_g30
08:26:53 201  ,cad_g31
08:26:53 202  ,cad_g32
08:26:53 203  ,cad_g33
08:26:53 204  ,cad_g34
08:26:53 205  ,cad_g35
08:26:53 206  ,cad_g36
08:26:53 207  ,cad_g37
08:26:53 208  ,cad_g38
08:26:53 209  ,cad_g39
08:26:53 210  ,cad_g40
08:26:53 211  ,chf_g00
08:26:53 212  ,chf_g01
08:26:53 213  ,chf_g02
08:26:53 214  ,chf_g03
08:26:53 215  ,chf_g04
08:26:53 216  ,chf_g05
08:26:53 217  ,chf_g06
08:26:53 218  ,chf_g07
08:26:53 219  ,chf_g08
08:26:53 220  ,chf_g09
08:26:53 221  ,chf_g10
08:26:53 222  ,chf_g11
08:26:53 223  ,chf_g12
08:26:53 224  ,chf_g13
08:26:53 225  ,chf_g14
08:26:53 226  ,chf_g15
08:26:53 227  ,chf_g16
08:26:53 228  ,chf_g17
08:26:53 229  ,chf_g18
08:26:53 230  ,chf_g19
08:26:53 231  ,chf_g20
08:26:53 232  ,chf_g21
08:26:53 233  ,chf_g22
08:26:53 234  ,chf_g23
08:26:53 235  ,chf_g24
08:26:53 236  ,chf_g25
08:26:53 237  ,chf_g26
08:26:53 238  ,chf_g27
08:26:53 239  ,chf_g28
08:26:53 240  ,chf_g29
08:26:53 241  ,chf_g30
08:26:53 242  ,chf_g31
08:26:53 243  ,chf_g32
08:26:53 244  ,chf_g33
08:26:53 245  ,chf_g34
08:26:53 246  ,chf_g35
08:26:53 247  ,chf_g36
08:26:53 248  ,chf_g37
08:26:53 249  ,chf_g38
08:26:53 250  ,chf_g39
08:26:53 251  ,chf_g40
08:26:53 252  FROM aud_ms14 m
08:26:53 253  WHERE gatt IN('nup','up')
08:26:53 254  AND 1+m.ydate < '&1'||' '||'&2'
08:26:53 255  /
old 254: AND 1+m.ydate < '&1'||' '||'&2'
new 254: AND 1+m.ydate < '2010-12-17'||' '||'09:45:00'

View created.

Elapsed: 00:00:00.13
08:26:53 SQL> 
08:26:53 SQL> -- rpt
08:26:53 SQL> 
08:26:53 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt;

GAT COUNT(PRDATE)
--- -------------
nup	    13253
up	     6627

Elapsed: 00:00:00.05
08:26:53 SQL> 
08:26:53 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-16 09:40:00

Elapsed: 00:00:00.03
08:26:53 SQL> 
08:26:53 SQL> -- Now build model from bme and score sme
08:26:53 SQL> @score1.sql
08:26:53 SQL> -- score1.sql
08:26:53 SQL> 
08:26:53 SQL> -- Does the 1st SVM score
08:26:53 SQL> 
08:26:53 SQL> -- Fill up svmc_apply_prep
08:26:53 SQL> @score.sql
08:26:53 SQL> --
08:26:53 SQL> -- score.sql
08:26:53 SQL> --
08:26:53 SQL> 
08:26:53 SQL> -- usage: score.sql
08:26:53 SQL> 
08:26:53 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
08:26:53 SQL> 
08:26:53 SQL> DEFINE target	= 'gatt'
08:26:53 SQL> DEFINE model_name = 'forex14'
08:26:53 SQL> DEFINE bldtable	= 'bme'
08:26:53 SQL> DEFINE scoretable = 'sme'
08:26:53 SQL> DEFINE case_id	= 'prdate'
08:26:53 SQL> 
08:26:53 SQL> -- Define a variable to help me exclude some columns from some data mining calls
08:26:53 SQL> DEFINE exclude1 = "'&target','&case_id'"
08:26:53 SQL> 
08:26:53 SQL> -- Builds an SVM model using pl/sql.
08:26:53 SQL> 
08:26:53 SQL> -----------------------------------------------------------------------
08:26:53 SQL> --			    BUILD THE MODEL
08:26:53 SQL> -----------------------------------------------------------------------
08:26:53 SQL> 
08:26:53 SQL> -- Cleanup old build data preparation objects for repeat runs
08:26:53 SQL> DELETE svmc_miss_num;

247 rows deleted.

Elapsed: 00:00:00.00
08:26:53 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
08:26:53 SQL> DELETE svmc_clip;

247 rows deleted.

Elapsed: 00:00:00.00
08:26:53 SQL> DELETE svmc_norm;

247 rows deleted.

Elapsed: 00:00:00.01
08:26:53 SQL> 
08:26:53 SQL> 
08:26:53 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
08:26:53 SQL> --
08:26:53 SQL> -- DROP	TABLE svmc_settings ;
08:26:53 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
08:26:53 SQL> -- DELETE svmc_settings;
08:26:53 SQL> 
08:26:53 SQL> -- The default classification algorithm is Naive Bayes. So override
08:26:53 SQL> -- this choice to SVM using a settings table.
08:26:53 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
08:26:53 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
08:26:53 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
08:26:53 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
08:26:53 SQL> -- models.
08:26:53 SQL> --
08:26:53 SQL> 
08:26:53 SQL> -- Do this once and then comment it out.
08:26:53 SQL> -- That makes script go faster.
08:26:53 SQL> -- BEGIN
08:26:53 SQL> -- -- Populate settings table
08:26:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:26:53 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
08:26:53 SQL> --
08:26:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:26:53 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
08:26:53 SQL> --
08:26:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
08:26:53 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
08:26:53 SQL> --   COMMIT;
08:26:53 SQL> -- END;
08:26:53 SQL> -- /
08:26:53 SQL> 
08:26:53 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
08:26:53 SQL> 
08:26:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
08:26:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:26:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:26:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
08:26:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:26:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:26:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
08:26:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:26:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:26:53 SQL> 
08:26:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
08:26:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:26:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
08:26:53 SQL> 
08:26:53 SQL> --------------------------------
08:26:53 SQL> -- PREPARE BUILD (TRAINING) DATA
08:26:53 SQL> --
08:26:53 SQL> 
08:26:53 SQL> -- 1. Missing Value treatment for all Predictors and
08:26:53 SQL> -- 2. Outlier Treatment and
08:26:53 SQL> -- 3. Normalization are performed below.
08:26:53 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
08:26:53 SQL> --    normalized here.
08:26:53 SQL> 
08:26:53 SQL> BEGIN
08:26:53   2  	-- Perform missing value treatment for all predictors
08:26:53   3  	-- create miss tables
08:26:53   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
08:26:53   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
08:26:53   6  
08:26:53   7  	-- populate miss tables
08:26:53   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
08:26:53   9  	  miss_table_name => 'svmc_miss_num',
08:26:53  10  	  data_table_name => '&bldtable',
08:26:53  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:26:53  12  
08:26:53  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
08:26:53  14  	  miss_table_name => 'svmc_miss_cat',
08:26:53  15  	  data_table_name => '&bldtable',
08:26:53  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:26:53  17  
08:26:53  18  	-- xform input data to replace missing values
08:26:53  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
08:26:53  20  	  miss_table_name => 'svmc_miss_num',
08:26:53  21  	  data_table_name => '&bldtable',
08:26:53  22  	  xform_view_name => 'xformed_build_miss_num');
08:26:53  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
08:26:53  24  	  miss_table_name => 'svmc_miss_cat',
08:26:53  25  	  data_table_name => '&bldtable',
08:26:53  26  	  xform_view_name => 'xformed_build_miss_cat');
08:26:53  27  
08:26:53  28  	-- Perform outlier treatment.
08:26:53  29  	-- create clip table
08:26:53  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
08:26:53  31  
08:26:53  32  	-- populate clip table
08:26:53  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
08:26:53  34  	  clip_table_name => 'svmc_clip',
08:26:53  35  	  data_table_name => '&bldtable',
08:26:53  36  	  tail_frac	  => 0.025,
08:26:53  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:26:53  38  
08:26:53  39  	-- xform input data to winsorized data
08:26:53  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
08:26:53  41  	  clip_table_name => 'svmc_clip',
08:26:53  42  	  data_table_name => '&bldtable',
08:26:53  43  	  xform_view_name => 'svmc_winsor');
08:26:53  44  
08:26:53  45  	-- create normalization table
08:26:53  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
08:26:53  47  
08:26:53  48  	-- populate normalization table based on winsorized data
08:26:53  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
08:26:53  50  	  norm_table_name => 'svmc_norm',
08:26:53  51  	  data_table_name => 'svmc_winsor',
08:26:53  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
08:26:53  53  
08:26:53  54  	-- normalize the original data
08:26:53  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
08:26:53  56  	  norm_table_name => 'svmc_norm',
08:26:53  57  	  data_table_name => '&bldtable',
08:26:53  58  	  xform_view_name => 'svmc_build_prep');
08:26:53  59  END;
08:26:53  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.51
08:27:12 SQL> 
08:27:12 SQL> ---------------------
08:27:12 SQL> -- CREATE A NEW MODEL
08:27:12 SQL> --
08:27:12 SQL> -- Cleanup old model with the same name for repeat runs
08:27:12 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
08:27:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
08:27:12   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.94
08:27:13 SQL> 
08:27:13 SQL> -- Build a new SVM Model
08:27:13 SQL> BEGIN
08:27:13   2  	DBMS_DATA_MINING.CREATE_MODEL(
08:27:13   3  	  model_name	      => '&model_name',
08:27:13   4  	  mining_function     => dbms_data_mining.classification,
08:27:13   5  	  data_table_name     => 'svmc_build_prep',
08:27:13   6  	  case_id_column_name => '&case_id',
08:27:13   7  	  target_column_name  => '&target',
08:27:13   8  	  settings_table_name => 'svmc_settings');
08:27:13   9  END;
08:27:13  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',
