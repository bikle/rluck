/pt/s/rlk/trend10min/results2010_1203_t10.txt

I see Revert-To-Mean (r2m) behavior in the output from t10.sql.

It is too weak to be profitable though.

It seems strongest when the mvg-avg measurement duration matches the duration of the gain measurement.

Here is a screen dump:


oracle@z2:/pt/s/rlk/trend10min$ sqt @t10

SQL*Plus: Release 11.2.0.1.0 Production on Sat Dec 4 07:02:42 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

07:02:42 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
07:02:42 SQL> --
07:02:42 SQL> -- t10.sql
07:02:42 SQL> --
07:02:42 SQL> 
07:02:42 SQL> -- I use this script to look at Forex data which has a 10 minute duration between each datapoint.
07:02:42 SQL> 
07:02:42 SQL> SET LINES 66
07:02:42 SQL> DESC dukas10min
 Name				  Null?    Type
 -------------------------------- -------- -----------------------
 PAIR					   VARCHAR2(8)
 YDATE					   DATE
 VOL					   NUMBER
 OPN					   NUMBER
 CLSE					   NUMBER
 MN					   NUMBER
 MX					   NUMBER

07:02:42 SQL> SET LINES 166
07:02:42 SQL> 
07:02:42 SQL> SELECT
07:02:42   2  pair
07:02:42   3  ,MIN(ydate)
07:02:42   4  ,COUNT(*)
07:02:42   5  ,MAX(ydate)
07:02:42   6  FROM dukas10min
07:02:42   7  GROUP BY pair
07:02:42   8  ORDER BY pair
07:02:42   9  /

PAIR	 MIN(YDATE)	       COUNT(*) MAX(YDATE)
-------- ------------------- ---------- -------------------
aud_usd  2009-10-07 05:50:01	  43653 2010-12-03 17:50:01
eur_usd  2009-10-07 05:50:01	  43653 2010-12-03 17:50:01
gbp_usd  2009-10-07 05:50:01	  43653 2010-12-03 17:50:01
usd_cad  2009-10-26 04:50:01	  41769 2010-12-03 17:50:01
usd_chf  2009-10-26 04:50:01	  41769 2010-12-03 17:50:01
usd_jpy  2009-10-07 05:50:01	  43653 2010-12-03 17:50:01

6 rows selected.

Elapsed: 00:00:00.11
07:02:43 SQL> 
07:02:43 SQL> 
07:02:43 SQL> CREATE OR REPLACE VIEW tr10 AS
07:02:43   2  SELECT
07:02:43   3  pair
07:02:43   4  -- ydate is granular down to 10 min:
07:02:43   5  ,ydate
07:02:43   6  ,clse
07:02:43   7  -- Use analytic function to get moving average1:
07:02:43   8  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING)ma1_4
07:02:43   9  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 10 PRECEDING AND 2 PRECEDING)ma1_8
07:02:43  10  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 20 PRECEDING AND 4 PRECEDING)ma1_16
07:02:43  11  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 40 PRECEDING AND 8 PRECEDING)ma1_32
07:02:43  12  -- Use analytic function to get moving average2:
07:02:43  13  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)ma2_4
07:02:43  14  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)ma2_8
07:02:43  15  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 16 PRECEDING AND CURRENT ROW)ma2_16
07:02:43  16  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 32 PRECEDING AND CURRENT ROW)ma2_32
07:02:43  17  -- Relative to current-row, get future closing prices:
07:02:43  18  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY ydate) clse4
07:02:43  19  ,LEAD(clse,6,NULL)OVER(PARTITION BY pair ORDER BY ydate) clse6
07:02:43  20  ,LEAD(clse,8,NULL)OVER(PARTITION BY pair ORDER BY ydate) clse8
07:02:43  21  FROM dukas10min
07:02:43  22  -- Prevent divide by zero:
07:02:43  23  WHERE clse > 0
07:02:43  24  ORDER BY pair,ydate
07:02:43  25  /

View created.

Elapsed: 00:00:00.05
07:02:43 SQL> 
07:02:43 SQL> -- I derive "normalized" slope of moving-averages.
07:02:43 SQL> -- I normalize them to help me compare JPY pairs to all the other pairs:
07:02:43 SQL> 
07:02:43 SQL> CREATE OR REPLACE VIEW tr12 AS
07:02:43   2  SELECT
07:02:43   3  pair
07:02:43   4  ,ydate
07:02:43   5  ,clse
07:02:43   6  -- Derive normalized mvg-avg-slope:
07:02:43   7  ,(ma2_4 - ma1_4)/ma1_4 ma4_slope
07:02:43   8  ,(ma2_8 - ma1_8)/ma1_8 ma8_slope
07:02:43   9  ,(ma2_16 - ma1_16)/ma1_16 ma16_slope
07:02:43  10  ,(ma2_32 - ma1_32)/ma1_32 ma32_slope
07:02:43  11  -- I collect normalized gains too:
07:02:43  12  ,(clse4-clse)/clse npg4
07:02:43  13  ,(clse6-clse)/clse npg6
07:02:43  14  ,(clse8-clse)/clse npg8
07:02:43  15  FROM tr10
07:02:43  16  -- prevent divide by 0:
07:02:43  17  WHERE(ma1_4*ma1_8*ma1_16*ma1_32)!=0
07:02:43  18  ORDER BY pair,ydate
07:02:43  19  /

View created.

Elapsed: 00:00:00.06
07:02:43 SQL> 
07:02:43 SQL> -- Now that I have ma-slopes, I calculate stddev of their distributions:
07:02:43 SQL> 
07:02:43 SQL> DROP TABLE tr14;

Table dropped.

Elapsed: 00:00:00.45
07:02:43 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.11
07:02:43 SQL> CREATE TABLE tr14 COMPRESS AS
07:02:43   2  -- CREATE OR REPLACE VIEW tr14 AS
07:02:43   3  SELECT
07:02:43   4  pair
07:02:43   5  ,ydate
07:02:43   6  ,clse
07:02:43   7  ,ma4_slope
07:02:43   8  ,ma8_slope
07:02:43   9  ,ma16_slope
07:02:43  10  ,ma32_slope
07:02:43  11  ,npg4
07:02:43  12  ,npg6
07:02:43  13  ,npg8
07:02:43  14  ,STDDEV(ma4_slope)OVER(PARTITION BY pair)ma_stddev4
07:02:43  15  ,STDDEV(ma8_slope)OVER(PARTITION BY pair)ma_stddev8
07:02:43  16  ,STDDEV(ma16_slope)OVER(PARTITION BY pair)ma_stddev16
07:02:43  17  ,STDDEV(ma32_slope)OVER(PARTITION BY pair)ma_stddev32
07:02:43  18  -- Sign of slope is a useful attribute:
07:02:43  19  ,SIGN(ma4_slope)sgn4
07:02:43  20  ,SIGN(ma8_slope)sgn8
07:02:43  21  ,SIGN(ma16_slope)sgn16
07:02:43  22  ,SIGN(ma32_slope)sgn32
07:02:43  23  FROM tr12
07:02:43  24  ORDER BY pair,ydate
07:02:43  25  /

Table created.

Elapsed: 00:00:09.85
07:02:53 SQL> 
07:02:53 SQL> -- I have what I need, now I report.
07:02:53 SQL> -- Start with mellow slopes:
07:02:53 SQL> 
07:02:53 SQL> -- ma4, npg4:
07:02:53 SQL> SELECT
07:02:53   2  sgn4
07:02:53   3  ,pair
07:02:53   4  ,ROUND(AVG(npg4),6)avg_npg4
07:02:53   5  ,COUNT(pair)
07:02:53   6  FROM tr14
07:02:53   7  WHERE ABS(ma4_slope)BETWEEN 0.4*ma_stddev4 AND 1.1*ma_stddev4
07:02:53   8  GROUP BY sgn4,pair
07:02:53   9  ORDER BY sgn4,pair
07:02:53  10  /

      SGN4 PAIR       AVG_NPG4 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000055	      8157
	-1 eur_usd	.00004	      8200
	-1 gbp_usd     .000049	      8027
	-1 usd_cad     .000055	      8479
	-1 usd_chf     .000032	      7987
	-1 usd_jpy     .000007	      8514
	 1 aud_usd     -.00003	      8752
	 1 eur_usd    -.000045	      8171
	 1 gbp_usd    -.000063	      8222
	 1 usd_cad     -.00008	      7954
	 1 usd_chf    -.000072	      7748
	 1 usd_jpy    -.000033	      8824

12 rows selected.

Elapsed: 00:00:00.31
07:02:53 SQL> 
07:02:53 SQL> -- ma8, npg4:
07:02:53 SQL> SELECT
07:02:53   2  sgn8
07:02:53   3  ,pair
07:02:53   4  ,ROUND(AVG(npg4),6)avg_npg4
07:02:53   5  ,COUNT(pair)
07:02:53   6  FROM tr14
07:02:53   7  WHERE ABS(ma8_slope)BETWEEN 0.4*ma_stddev8 AND 1.1*ma_stddev8
07:02:53   8  GROUP BY sgn8,pair
07:02:53   9  ORDER BY sgn8,pair
07:02:53  10  /

      SGN8 PAIR       AVG_NPG4 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000066	      8119
	-1 eur_usd	.00003	      8118
	-1 gbp_usd     .000039	      8031
	-1 usd_cad     .000078	      8208
	-1 usd_chf     .000021	      7703
	-1 usd_jpy     .000017	      8161
	 1 aud_usd    -.000041	      8997
	 1 eur_usd    -.000035	      8012
	 1 gbp_usd    -.000061	      8135
	 1 usd_cad    -.000066	      7319
	 1 usd_chf    -.000065	      7677
	 1 usd_jpy    -.000016	      8262

12 rows selected.

Elapsed: 00:00:00.22
07:02:54 SQL> 
07:02:54 SQL> -- ma16, npg4:
07:02:54 SQL> SELECT
07:02:54   2  sgn16
07:02:54   3  ,pair
07:02:54   4  ,ROUND(AVG(npg4),6)avg_npg4
07:02:54   5  ,COUNT(pair)
07:02:54   6  FROM tr14
07:02:54   7  WHERE ABS(ma16_slope)BETWEEN 0.4*ma_stddev16 AND 1.1*ma_stddev16
07:02:54   8  GROUP BY sgn16,pair
07:02:54   9  ORDER BY sgn16,pair
07:02:54  10  /

     SGN16 PAIR       AVG_NPG4 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000016	      8056
	-1 eur_usd    -.000007	      8073
	-1 gbp_usd     .000023	      8032
	-1 usd_cad     .000026	      8306
	-1 usd_chf     .000004	      7701
	-1 usd_jpy     .000005	      8174
	 1 aud_usd    -.000005	      9119
	 1 eur_usd    -.000003	      8094
	 1 gbp_usd    -.000032	      8222
	 1 usd_cad    -.000021	      7133
	 1 usd_chf    -.000064	      7401
	 1 usd_jpy    -.000002	      8111

12 rows selected.

Elapsed: 00:00:00.22
07:02:54 SQL> 
07:02:54 SQL> -- ma32, npg4:
07:02:54 SQL> SELECT
07:02:54   2  sgn32
07:02:54   3  ,pair
07:02:54   4  ,ROUND(AVG(npg4),6)avg_npg4
07:02:54   5  ,COUNT(pair)
07:02:54   6  FROM tr14
07:02:54   7  WHERE ABS(ma32_slope)BETWEEN 0.4*ma_stddev32 AND 1.1*ma_stddev32
07:02:54   8  GROUP BY sgn32,pair
07:02:54   9  ORDER BY sgn32,pair
07:02:54  10  /

     SGN32 PAIR       AVG_NPG4 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd    -.000004	      8352
	-1 eur_usd    -.000003	      8420
	-1 gbp_usd     .000009	      8143
	-1 usd_cad    -.000003	      8893
	-1 usd_chf     .000015	      8035
	-1 usd_jpy    -.000014	      8700
	 1 aud_usd    -.000027	      8985
	 1 eur_usd     .000014	      8118
	 1 gbp_usd     .000012	      8174
	 1 usd_cad     .000006	      7221
	 1 usd_chf    -.000053	      7311
	 1 usd_jpy     .000003	      7743

12 rows selected.

Elapsed: 00:00:00.21
07:02:54 SQL> 
07:02:54 SQL> 
07:02:54 SQL> -- ma8, npg6:
07:02:54 SQL> SELECT
07:02:54   2  sgn8
07:02:54   3  ,pair
07:02:54   4  ,ROUND(AVG(npg6),6)avg_npg6
07:02:54   5  ,COUNT(pair)
07:02:54   6  FROM tr14
07:02:54   7  WHERE ABS(ma8_slope)BETWEEN 0.4*ma_stddev8 AND 1.1*ma_stddev8
07:02:54   8  GROUP BY sgn8,pair
07:02:54   9  ORDER BY sgn8,pair
07:02:54  10  /

      SGN8 PAIR       AVG_NPG6 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000076	      8119
	-1 eur_usd     .000045	      8118
	-1 gbp_usd     .000049	      8031
	-1 usd_cad     .000093	      8208
	-1 usd_chf	.00002	      7703
	-1 usd_jpy     .000021	      8161
	 1 aud_usd    -.000053	      8997
	 1 eur_usd    -.000043	      8012
	 1 gbp_usd     -.00008	      8135
	 1 usd_cad    -.000075	      7319
	 1 usd_chf    -.000075	      7677
	 1 usd_jpy    -.000032	      8262

12 rows selected.

Elapsed: 00:00:00.21
07:02:54 SQL> 
07:02:54 SQL> -- ma16, npg6:
07:02:54 SQL> SELECT
07:02:54   2  sgn16
07:02:54   3  ,pair
07:02:54   4  ,ROUND(AVG(npg6),6)avg_npg6
07:02:54   5  ,COUNT(pair)
07:02:54   6  FROM tr14
07:02:54   7  WHERE ABS(ma16_slope)BETWEEN 0.4*ma_stddev16 AND 1.1*ma_stddev16
07:02:54   8  GROUP BY sgn16,pair
07:02:54   9  ORDER BY sgn16,pair
07:02:54  10  /

     SGN16 PAIR       AVG_NPG6 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000029	      8056
	-1 eur_usd    -.000006	      8073
	-1 gbp_usd     .000036	      8032
	-1 usd_cad     .000031	      8306
	-1 usd_chf     .000006	      7701
	-1 usd_jpy     .000014	      8174
	 1 aud_usd    -.000005	      9119
	 1 eur_usd    -.000002	      8094
	 1 gbp_usd    -.000044	      8222
	 1 usd_cad    -.000039	      7133
	 1 usd_chf    -.000094	      7401
	 1 usd_jpy    -.000008	      8111

12 rows selected.

Elapsed: 00:00:00.21
07:02:55 SQL> 
07:02:55 SQL> -- ma32, npg6:
07:02:55 SQL> SELECT
07:02:55   2  sgn32
07:02:55   3  ,pair
07:02:55   4  ,ROUND(AVG(npg6),6)avg_npg6
07:02:55   5  ,COUNT(pair)
07:02:55   6  FROM tr14
07:02:55   7  WHERE ABS(ma32_slope)BETWEEN 0.4*ma_stddev32 AND 1.1*ma_stddev32
07:02:55   8  GROUP BY sgn32,pair
07:02:55   9  ORDER BY sgn32,pair
07:02:55  10  /

     SGN32 PAIR       AVG_NPG6 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000007	      8352
	-1 eur_usd    -.000004	      8420
	-1 gbp_usd     .000014	      8143
	-1 usd_cad    -.000017	      8893
	-1 usd_chf     .000034	      8035
	-1 usd_jpy     -.00002	      8700
	 1 aud_usd    -.000021	      8985
	 1 eur_usd    -.000004	      8118
	 1 gbp_usd     .000003	      8174
	 1 usd_cad	     0	      7221
	 1 usd_chf    -.000073	      7311
	 1 usd_jpy     .000011	      7743

12 rows selected.

Elapsed: 00:00:00.22
07:02:55 SQL> 
07:02:55 SQL> 
07:02:55 SQL> 
07:02:55 SQL> -- ma8, npg8:
07:02:55 SQL> SELECT
07:02:55   2  sgn8
07:02:55   3  ,pair
07:02:55   4  ,ROUND(AVG(npg8),6)avg_npg8
07:02:55   5  ,COUNT(pair)
07:02:55   6  FROM tr14
07:02:55   7  WHERE ABS(ma8_slope)BETWEEN 0.4*ma_stddev8 AND 1.1*ma_stddev8
07:02:55   8  GROUP BY sgn8,pair
07:02:55   9  ORDER BY sgn8,pair
07:02:55  10  /

      SGN8 PAIR       AVG_NPG8 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000074	      8119
	-1 eur_usd     .000051	      8118
	-1 gbp_usd     .000058	      8031
	-1 usd_cad     .000104	      8208
	-1 usd_chf     .000027	      7703
	-1 usd_jpy     .000027	      8161
	 1 aud_usd    -.000067	      8997
	 1 eur_usd    -.000049	      8012
	 1 gbp_usd    -.000086	      8135
	 1 usd_cad    -.000104	      7319
	 1 usd_chf    -.000095	      7677
	 1 usd_jpy    -.000038	      8262

12 rows selected.

Elapsed: 00:00:00.21
07:02:55 SQL> 
07:02:55 SQL> -- ma16, npg8:
07:02:55 SQL> SELECT
07:02:55   2  sgn16
07:02:55   3  ,pair
07:02:55   4  ,ROUND(AVG(npg8),6)avg_npg8
07:02:55   5  ,COUNT(pair)
07:02:55   6  FROM tr14
07:02:55   7  WHERE ABS(ma16_slope)BETWEEN 0.4*ma_stddev16 AND 1.1*ma_stddev16
07:02:55   8  GROUP BY sgn16,pair
07:02:55   9  ORDER BY sgn16,pair
07:02:55  10  /

     SGN16 PAIR       AVG_NPG8 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000067	      8056
	-1 eur_usd     -.00001	      8073
	-1 gbp_usd     .000052	      8032
	-1 usd_cad	.00004	      8306
	-1 usd_chf     .000019	      7701
	-1 usd_jpy     .000014	      8174
	 1 aud_usd    -.000015	      9119
	 1 eur_usd    -.000013	      8094
	 1 gbp_usd    -.000054	      8222
	 1 usd_cad    -.000042	      7133
	 1 usd_chf    -.000124	      7401
	 1 usd_jpy     -.00002	      8111

12 rows selected.

Elapsed: 00:00:00.21
07:02:55 SQL> 
07:02:55 SQL> -- ma32, npg8:
07:02:55 SQL> SELECT
07:02:55   2  sgn32
07:02:55   3  ,pair
07:02:55   4  ,ROUND(AVG(npg8),6)avg_npg8
07:02:55   5  ,COUNT(pair)
07:02:55   6  FROM tr14
07:02:55   7  WHERE ABS(ma32_slope)BETWEEN 0.4*ma_stddev32 AND 1.1*ma_stddev32
07:02:55   8  GROUP BY sgn32,pair
07:02:55   9  ORDER BY sgn32,pair
07:02:55  10  /

     SGN32 PAIR       AVG_NPG8 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000017	      8352
	-1 eur_usd    -.000002	      8420
	-1 gbp_usd     .000002	      8143
	-1 usd_cad    -.000026	      8893
	-1 usd_chf     .000039	      8035
	-1 usd_jpy    -.000023	      8700
	 1 aud_usd    -.000008	      8985
	 1 eur_usd    -.000012	      8118
	 1 gbp_usd     .000006	      8174
	 1 usd_cad    -.000001	      7221
	 1 usd_chf    -.000095	      7311
	 1 usd_jpy     .000015	      7743

12 rows selected.

Elapsed: 00:00:00.22
07:02:55 SQL> 
07:02:55 SQL> -- Now look at steep slopes:
07:02:55 SQL> 
07:02:55 SQL> -- ma4, npg4:
07:02:55 SQL> SELECT
07:02:55   2  sgn4
07:02:55   3  ,pair
07:02:55   4  ,ROUND(AVG(npg4),6)avg_npg4
07:02:55   5  ,COUNT(pair)
07:02:55   6  FROM tr14
07:02:55   7  WHERE ABS(ma4_slope) > 2.0*ma_stddev4
07:02:55   8  GROUP BY sgn4,pair
07:02:55   9  ORDER BY sgn4,pair
07:02:55  10  /

      SGN4 PAIR       AVG_NPG4 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000159	      1174
	-1 eur_usd     .000034	      1255
	-1 gbp_usd     .000013	      1203
	-1 usd_cad     .000137	      1071
	-1 usd_chf     .000104	      1132
	-1 usd_jpy     .000148	      1033
	 1 aud_usd    -.000071	      1046
	 1 eur_usd	.00004	      1150
	 1 gbp_usd    -.000033	      1215
	 1 usd_cad    -.000111	      1175
	 1 usd_chf     -.00005	      1118
	 1 usd_jpy    -.000065	       943

12 rows selected.

Elapsed: 00:00:00.16
07:02:56 SQL> 
07:02:56 SQL> -- ma8, npg4:
07:02:56 SQL> SELECT
07:02:56   2  sgn8
07:02:56   3  ,pair
07:02:56   4  ,ROUND(AVG(npg4),6)avg_npg4
07:02:56   5  ,COUNT(pair)
07:02:56   6  FROM tr14
07:02:56   7  WHERE ABS(ma8_slope) > 2.0*ma_stddev8
07:02:56   8  GROUP BY sgn8,pair
07:02:56   9  ORDER BY sgn8,pair
07:02:56  10  /

      SGN8 PAIR       AVG_NPG4 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd    -.000031	      1208
	-1 eur_usd    -.000043	      1381
	-1 gbp_usd     .000117	      1214
	-1 usd_cad     .000066	      1106
	-1 usd_chf     .000087	      1120
	-1 usd_jpy     .000098	      1062
	 1 aud_usd    -.000131	      1097
	 1 eur_usd	.00004	      1190
	 1 gbp_usd     .000022	      1198
	 1 usd_cad    -.000009	      1270
	 1 usd_chf     .000067	      1167
	 1 usd_jpy    -.000109	      1058

12 rows selected.

Elapsed: 00:00:00.16
07:02:56 SQL> 
07:02:56 SQL> -- ma16, npg4:
07:02:56 SQL> SELECT
07:02:56   2  sgn16
07:02:56   3  ,pair
07:02:56   4  ,ROUND(AVG(npg4),6)avg_npg4
07:02:56   5  ,COUNT(pair)
07:02:56   6  FROM tr14
07:02:56   7  WHERE ABS(ma16_slope) > 2.0*ma_stddev16
07:02:56   8  GROUP BY sgn16,pair
07:02:56   9  ORDER BY sgn16,pair
07:02:56  10  /

     SGN16 PAIR       AVG_NPG4 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000127	      1324
	-1 eur_usd    -.000043	      1371
	-1 gbp_usd     .000024	      1261
	-1 usd_cad    -.000002	      1086
	-1 usd_chf     .000131	      1169
	-1 usd_jpy     .000066	      1072
	 1 aud_usd    -.000013	      1044
	 1 eur_usd    -.000054	      1217
	 1 gbp_usd    -.000016	      1240
	 1 usd_cad    -.000033	      1358
	 1 usd_chf     .000059	      1273
	 1 usd_jpy    -.000135	       992

12 rows selected.

Elapsed: 00:00:00.16
07:02:56 SQL> 
07:02:56 SQL> -- ma32, npg4:
07:02:56 SQL> SELECT
07:02:56   2  sgn32
07:02:56   3  ,pair
07:02:56   4  ,ROUND(AVG(npg4),6)avg_npg4
07:02:56   5  ,COUNT(pair)
07:02:56   6  FROM tr14
07:02:56   7  WHERE ABS(ma32_slope) > 2.0*ma_stddev32
07:02:56   8  GROUP BY sgn32,pair
07:02:56   9  ORDER BY sgn32,pair
07:02:56  10  /

     SGN32 PAIR       AVG_NPG4 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000089	      1256
	-1 eur_usd    -.000021	      1274
	-1 gbp_usd    -.000033	      1276
	-1 usd_cad     .000171	       959
	-1 usd_chf     .000079	      1184
	-1 usd_jpy     .000124	       997
	 1 aud_usd     .000184	      1108
	 1 eur_usd	.00004	      1193
	 1 gbp_usd    -.000116	      1185
	 1 usd_cad     .000062	      1425
	 1 usd_chf    -.000111	      1375
	 1 usd_jpy     .000002	       980

12 rows selected.

Elapsed: 00:00:00.16
07:02:56 SQL> 
07:02:56 SQL> 
07:02:56 SQL> -- ma8, npg6:
07:02:56 SQL> SELECT
07:02:56   2  sgn8
07:02:56   3  ,pair
07:02:56   4  ,ROUND(AVG(npg6),6)avg_npg6
07:02:56   5  ,COUNT(pair)
07:02:56   6  FROM tr14
07:02:56   7  WHERE ABS(ma8_slope) > 2.0*ma_stddev8
07:02:56   8  GROUP BY sgn8,pair
07:02:56   9  ORDER BY sgn8,pair
07:02:56  10  /

      SGN8 PAIR       AVG_NPG6 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd    -.000045	      1208
	-1 eur_usd    -.000105	      1381
	-1 gbp_usd     .000177	      1214
	-1 usd_cad     .000074	      1106
	-1 usd_chf	.00008	      1120
	-1 usd_jpy     .000114	      1062
	 1 aud_usd    -.000082	      1097
	 1 eur_usd     .000046	      1190
	 1 gbp_usd     .000038	      1198
	 1 usd_cad    -.000001	      1270
	 1 usd_chf     .000078	      1167
	 1 usd_jpy    -.000104	      1058

12 rows selected.

Elapsed: 00:00:00.16
07:02:56 SQL> 
07:02:56 SQL> -- ma16, npg6:
07:02:56 SQL> SELECT
07:02:56   2  sgn16
07:02:56   3  ,pair
07:02:56   4  ,ROUND(AVG(npg6),6)avg_npg6
07:02:56   5  ,COUNT(pair)
07:02:56   6  FROM tr14
07:02:56   7  WHERE ABS(ma16_slope) > 2.0*ma_stddev16
07:02:56   8  GROUP BY sgn16,pair
07:02:56   9  ORDER BY sgn16,pair
07:02:56  10  /

     SGN16 PAIR       AVG_NPG6 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000169	      1324
	-1 eur_usd    -.000055	      1371
	-1 gbp_usd     .000009	      1261
	-1 usd_cad     .000037	      1086
	-1 usd_chf	.00015	      1169
	-1 usd_jpy     .000114	      1072
	 1 aud_usd    -.000052	      1044
	 1 eur_usd    -.000082	      1217
	 1 gbp_usd     .000017	      1240
	 1 usd_cad    -.000019	      1358
	 1 usd_chf     .000045	      1273
	 1 usd_jpy    -.000145	       992

12 rows selected.

Elapsed: 00:00:00.17
07:02:56 SQL> 
07:02:56 SQL> -- ma32, npg6:
07:02:56 SQL> SELECT
07:02:56   2  sgn32
07:02:56   3  ,pair
07:02:56   4  ,ROUND(AVG(npg6),6)avg_npg6
07:02:56   5  ,COUNT(pair)
07:02:56   6  FROM tr14
07:02:56   7  WHERE ABS(ma32_slope) > 2.0*ma_stddev32
07:02:56   8  GROUP BY sgn32,pair
07:02:56   9  ORDER BY sgn32,pair
07:02:56  10  /

     SGN32 PAIR       AVG_NPG6 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000131	      1256
	-1 eur_usd     -.00003	      1274
	-1 gbp_usd    -.000026	      1276
	-1 usd_cad     .000205	       959
	-1 usd_chf     .000115	      1184
	-1 usd_jpy     .000183	       997
	 1 aud_usd     .000263	      1108
	 1 eur_usd     .000057	      1193
	 1 gbp_usd    -.000165	      1185
	 1 usd_cad	 .0001	      1425
	 1 usd_chf    -.000163	      1375
	 1 usd_jpy    -.000016	       980

12 rows selected.

Elapsed: 00:00:00.16
07:02:57 SQL> 
07:02:57 SQL> 
07:02:57 SQL> 
07:02:57 SQL> -- ma8, npg8:
07:02:57 SQL> SELECT
07:02:57   2  sgn8
07:02:57   3  ,pair
07:02:57   4  ,ROUND(AVG(npg8),6)avg_npg8
07:02:57   5  ,COUNT(pair)
07:02:57   6  FROM tr14
07:02:57   7  WHERE ABS(ma8_slope) > 2.0*ma_stddev8
07:02:57   8  GROUP BY sgn8,pair
07:02:57   9  ORDER BY sgn8,pair
07:02:57  10  /

      SGN8 PAIR       AVG_NPG8 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd    -.000047	      1208
	-1 eur_usd    -.000158	      1381
	-1 gbp_usd     .000202	      1214
	-1 usd_cad     .000055	      1106
	-1 usd_chf	.00008	      1120
	-1 usd_jpy     .000098	      1062
	 1 aud_usd    -.000018	      1097
	 1 eur_usd     .000055	      1190
	 1 gbp_usd     .000103	      1198
	 1 usd_cad	.00007	      1270
	 1 usd_chf     .000117	      1167
	 1 usd_jpy    -.000134	      1058

12 rows selected.

Elapsed: 00:00:00.16
07:02:57 SQL> 
07:02:57 SQL> -- ma16, npg8:
07:02:57 SQL> SELECT
07:02:57   2  sgn16
07:02:57   3  ,pair
07:02:57   4  ,ROUND(AVG(npg8),6)avg_npg8
07:02:57   5  ,COUNT(pair)
07:02:57   6  FROM tr14
07:02:57   7  WHERE ABS(ma16_slope) > 2.0*ma_stddev16
07:02:57   8  GROUP BY sgn16,pair
07:02:57   9  ORDER BY sgn16,pair
07:02:57  10  /

     SGN16 PAIR       AVG_NPG8 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000221	      1324
	-1 eur_usd    -.000072	      1371
	-1 gbp_usd    -.000019	      1261
	-1 usd_cad	 .0001	      1086
	-1 usd_chf     .000184	      1169
	-1 usd_jpy     .000126	      1072
	 1 aud_usd    -.000023	      1044
	 1 eur_usd    -.000131	      1217
	 1 gbp_usd     .000057	      1240
	 1 usd_cad    -.000029	      1358
	 1 usd_chf     .000037	      1273
	 1 usd_jpy    -.000108	       992

12 rows selected.

Elapsed: 00:00:00.16
07:02:57 SQL> 
07:02:57 SQL> -- ma32, npg8:
07:02:57 SQL> SELECT
07:02:57   2  sgn32
07:02:57   3  ,pair
07:02:57   4  ,ROUND(AVG(npg8),6)avg_npg8
07:02:57   5  ,COUNT(pair)
07:02:57   6  FROM tr14
07:02:57   7  WHERE ABS(ma32_slope) > 2.0*ma_stddev32
07:02:57   8  GROUP BY sgn32,pair
07:02:57   9  ORDER BY sgn32,pair
07:02:57  10  /

     SGN32 PAIR       AVG_NPG8 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000178	      1256
	-1 eur_usd    -.000065	      1274
	-1 gbp_usd    -.000023	      1276
	-1 usd_cad     .000228	       959
	-1 usd_chf	.00013	      1184
	-1 usd_jpy     .000235	       997
	 1 aud_usd     .000347	      1108
	 1 eur_usd	.00004	      1193
	 1 gbp_usd    -.000218	      1185
	 1 usd_cad     .000119	      1425
	 1 usd_chf    -.000216	      1375
	 1 usd_jpy	     0	       980

12 rows selected.

Elapsed: 00:00:00.16
07:02:57 SQL> 
07:02:57 SQL> 
07:02:57 SQL> -- ma4, npg4:
07:02:57 SQL> SELECT
07:02:57   2  sgn4
07:02:57   3  ,pair
07:02:57   4  ,ROUND(AVG(npg4),6)avg_npg4
07:02:57   5  ,COUNT(pair)
07:02:57   6  FROM tr14
07:02:57   7  WHERE ABS(ma4_slope) > 3.0*ma_stddev4
07:02:57   8  GROUP BY sgn4,pair
07:02:57   9  ORDER BY sgn4,pair
07:02:57  10  /

      SGN4 PAIR       AVG_NPG4 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000207	       307
	-1 eur_usd    -.000016	       331
	-1 gbp_usd    -.000068	       323
	-1 usd_cad     .000184	       290
	-1 usd_chf     .000166	       318
	-1 usd_jpy	.00014	       352
	 1 aud_usd    -.000232	       288
	 1 eur_usd    -.000033	       359
	 1 gbp_usd     -.00007	       310
	 1 usd_cad    -.000363	       322
	 1 usd_chf    -.000113	       347
	 1 usd_jpy    -.000161	       329

12 rows selected.

Elapsed: 00:00:00.15
07:02:57 SQL> 
07:02:57 SQL> -- ma8, npg8:
07:02:57 SQL> SELECT
07:02:57   2  sgn8
07:02:57   3  ,pair
07:02:57   4  ,ROUND(AVG(npg8),6)avg_npg8
07:02:57   5  ,COUNT(pair)
07:02:57   6  FROM tr14
07:02:57   7  WHERE ABS(ma8_slope) > 3.0*ma_stddev8
07:02:57   8  GROUP BY sgn8,pair
07:02:57   9  ORDER BY sgn8,pair
07:02:57  10  /

      SGN8 PAIR       AVG_NPG8 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000016	       324
	-1 eur_usd    -.000198	       323
	-1 gbp_usd     .000261	       345
	-1 usd_cad    -.000047	       286
	-1 usd_chf    -.000008	       330
	-1 usd_jpy    -.000025	       347
	 1 aud_usd    -.000377	       286
	 1 eur_usd    -.000143	       341
	 1 gbp_usd     .000117	       314
	 1 usd_cad    -.000403	       335
	 1 usd_chf     .000213	       382
	 1 usd_jpy    -.000047	       320

12 rows selected.

Elapsed: 00:00:00.15
07:02:57 SQL> 
07:02:57 SQL> 
07:02:57 SQL> -- ma16, npg8:
07:02:57 SQL> SELECT
07:02:57   2  sgn16
07:02:57   3  ,pair
07:02:57   4  ,ROUND(AVG(npg8),6)avg_npg8
07:02:57   5  ,COUNT(pair)
07:02:57   6  FROM tr14
07:02:57   7  WHERE ABS(ma16_slope) > 3.0*ma_stddev16
07:02:57   8  GROUP BY sgn16,pair
07:02:57   9  ORDER BY sgn16,pair
07:02:57  10  /

     SGN16 PAIR       AVG_NPG8 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd     .000469	       350
	-1 eur_usd     .000021	       347
	-1 gbp_usd     .000192	       297
	-1 usd_cad    -.000157	       271
	-1 usd_chf    -.000107	       311
	-1 usd_jpy    -.000056	       307
	 1 aud_usd     .000033	       218
	 1 eur_usd    -.000376	       306
	 1 gbp_usd     .000101	       318
	 1 usd_cad    -.000199	       425
	 1 usd_chf    -.000103	       422
	 1 usd_jpy     .000096	       261

12 rows selected.

Elapsed: 00:00:00.18
07:02:57 SQL> 
07:02:57 SQL> -- ma32, npg8:
07:02:57 SQL> SELECT
07:02:57   2  sgn32
07:02:57   3  ,pair
07:02:57   4  ,ROUND(AVG(npg8),6)avg_npg8
07:02:57   5  ,COUNT(pair)
07:02:57   6  FROM tr14
07:02:57   7  WHERE ABS(ma32_slope) > 3.0*ma_stddev32
07:02:57   8  GROUP BY sgn32,pair
07:02:57   9  ORDER BY sgn32,pair
07:02:57  10  /

     SGN32 PAIR       AVG_NPG8 COUNT(PAIR)
---------- -------- ---------- -----------
	-1 aud_usd    -.000171	       292
	-1 eur_usd     -.00023	       293
	-1 gbp_usd    -.000006	       270
	-1 usd_cad     .000348	       280
	-1 usd_chf     .000101	       299
	-1 usd_jpy	-.0002	       237
	 1 aud_usd     -.00002	       189
	 1 eur_usd	.00006	       247
	 1 gbp_usd    -.000218	       160
	 1 usd_cad     .000026	       350
	 1 usd_chf    -.000154	       348
	 1 usd_jpy     .000239	       250

12 rows selected.

Elapsed: 00:00:00.16
07:02:58 SQL> 
07:02:58 SQL> 
07:02:58 SQL> 
07:02:58 SQL> EXIT
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
oracle@z2:/pt/s/rlk/trend10min$ 

