/pt/s/rluck/svmhstk/results_2011_0105_GOOG.txt

The data for GOOG is still sparse.

I'll update this later after I collect more after mkt close.

I see that positive CORR() is weak.

Negative CORR() is better.

Here is what I currently have.



oracle@hp2:/pt/s/rluck/svmhstk$ sqt @tkr_rpt.sql GOOG

SQL*Plus: Release 11.2.0.1.0 Production on Wed Jan 5 14:31:45 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

14:31:45 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
14:31:45 SQL> --
14:31:45 SQL> -- tkr_rpt.sql
14:31:45 SQL> --
14:31:45 SQL> 
14:31:45 SQL> -- I use this script to report on correlation between SVM scores_1hr and Forex gains.
14:31:45 SQL> 
14:31:45 SQL> CREATE OR REPLACE VIEW tkr_rpt10 AS
14:31:45   2  SELECT
14:31:45   3  l.score  score_long
14:31:45   4  ,s.score score_short
14:31:45   5  ,m.g4
14:31:45   6  ,m.ydate
14:31:45   7  ,ROUND(l.score,1)rscore_long
14:31:45   8  ,ROUND(s.score,1)rscore_short
14:31:45   9  FROM stkscores_1hr l, stkscores_1hr s,stk_ms m
14:31:45  10  WHERE l.ydate = s.ydate
14:31:45  11  AND   l.ydate = m.ydate
14:31:45  12  AND l.tkr = '&1'
14:31:45  13  AND l.tkr = s.tkr
14:31:45  14  AND l.targ = 'gatt'
14:31:45  15  AND s.targ = 'gattn'
14:31:45  16  /
old  12: AND l.tkr = '&1'
new  12: AND l.tkr = 'GOOG'

View created.

Elapsed: 00:00:00.04
14:31:45 SQL> 
14:31:45 SQL> -- rpt
14:31:45 SQL> 
14:31:45 SQL> SELECT COUNT(*)FROM stkscores_1hr;

  COUNT(*)
----------
      1214

Elapsed: 00:00:00.00
14:31:45 SQL> 
14:31:45 SQL> SELECT COUNT(*)FROM tkr_rpt10;

  COUNT(*)
----------
       607

Elapsed: 00:00:00.03
14:31:45 SQL> 
14:31:45 SQL> -- Look for CORR():
14:31:45 SQL> SELECT
14:31:45   2  MIN(ydate)
14:31:45   3  ,COUNT(ydate)
14:31:45   4  ,MAX(ydate)
14:31:45   5  ,CORR(score_long, g4)
14:31:45   6  ,CORR(score_short, g4)
14:31:45   7  FROM tkr_rpt10
14:31:45   8  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          CORR(SCORE_LONG,G4) CORR(SCORE_SHORT,G4)
------------------- ------------ ------------------- ------------------- --------------------
2010-10-04 13:00:01          607 2011-01-05 00:00:00          .053767417           -.12466039

Elapsed: 00:00:00.02
14:31:45 SQL> 
14:31:45 SQL> -- Look at high long scores:
14:31:45 SQL> 
14:31:45 SQL> SELECT
14:31:45   2  MIN(ydate)
14:31:45   3  ,COUNT(ydate)
14:31:45   4  ,MAX(ydate)
14:31:45   5  ,rscore_long
14:31:45   6  ,ROUND(MIN(g4),3)min_g4
14:31:45   7  ,ROUND(AVG(g4),3)avg_g4
14:31:45   8  ,ROUND(STDDEV(g4),3)stddv_g4
14:31:45   9  ,ROUND(MAX(g4),3)max_g4
14:31:45  10  FROM tkr_rpt10
14:31:45  11  GROUP BY rscore_long
14:31:45  12  ORDER BY rscore_long
14:31:45  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_LONG     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ----------- ---------- ---------- ---------- ----------
2010-12-29 12:00:00            1 2010-12-29 12:00:00           0      2.725      2.725          0      2.725
2010-12-16 19:00:00           19 2010-12-29 10:00:00          .1     -4.345       .494      2.872      6.105
2010-10-04 15:00:01           73 2011-01-04 14:00:00          .2    -296.58     -4.218     36.146      56.29
2010-10-04 18:00:01           91 2011-01-04 20:00:00          .3     -19.63      1.366      8.616      49.38
2010-10-05 13:00:01           92 2011-01-04 13:00:00          .4     -25.58      2.652     32.204     296.58
2010-10-04 17:00:01           84 2011-01-05 00:00:00          .5     -289.6       .038     34.931      71.51
2010-10-04 13:00:01           93 2011-01-04 21:00:00          .6     -26.99      2.855     10.475      53.01
2010-10-04 19:00:01           81 2011-01-04 22:00:00          .7     -27.23      5.679     36.365     296.09
2010-10-04 14:00:01           45 2011-01-04 23:00:00          .8     -26.46      3.086     17.459      75.53
2010-10-22 16:00:01           26 2011-01-04 19:00:00          .9     -5.705     -1.011      3.523       5.84
2010-12-20 09:00:00            2 2011-01-04 17:00:00           1       4.82       4.82          0       4.82

11 rows selected.

Elapsed: 00:00:00.04
14:31:45 SQL> 
14:31:45 SQL> -- Look at high long scores
14:31:45 SQL> -- and low short scores:
14:31:45 SQL> 
14:31:45 SQL> SELECT
14:31:45   2  MIN(ydate)
14:31:45   3  ,COUNT(ydate)
14:31:45   4  ,MAX(ydate)
14:31:45   5  ,rscore_long
14:31:45   6  ,ROUND(MIN(g4),3)min_g4
14:31:45   7  ,ROUND(AVG(g4),3)avg_g4
14:31:45   8  ,ROUND(STDDEV(g4),3)stddv_g4
14:31:45   9  ,ROUND(MAX(g4),3)max_g4
14:31:45  10  FROM tkr_rpt10
14:31:45  11  WHERE rscore_short < 0.3
14:31:45  12  GROUP BY rscore_long
14:31:45  13  ORDER BY rscore_long
14:31:45  14  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_LONG     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ----------- ---------- ---------- ---------- ----------
2010-12-29 12:00:00            1 2010-12-29 12:00:00           0      2.725      2.725          0      2.725
2010-12-21 12:00:00           12 2010-12-29 10:00:00          .1     -1.775      1.405       2.76      6.105
2010-10-05 19:00:01           39 2011-01-04 12:00:00          .2      -7.68      -.541      3.594       7.55
2010-10-06 14:00:01           32 2011-01-04 11:00:00          .3      -6.18       .838      4.092       9.11
2010-10-05 16:00:01           29 2011-01-04 13:00:00          .4      -9.62      -.814      4.006      11.18
2010-10-07 18:00:01           31 2011-01-05 00:00:00          .5     -29.22      1.729     15.686      71.51
2010-10-04 13:00:01           44 2011-01-04 15:00:00          .6      -5.89      3.437      9.366      49.07
2010-10-04 19:00:01           49 2011-01-04 22:00:00          .7     -27.23      9.092     45.098     296.09
2010-10-07 14:00:01           28 2011-01-04 18:00:00          .8     -26.46      3.676     21.697      75.53
2010-10-22 16:00:01           25 2011-01-04 19:00:00          .9     -5.705      -.898      3.552       5.84
2010-12-20 09:00:00            2 2011-01-04 17:00:00           1       4.82       4.82          0       4.82

11 rows selected.

Elapsed: 00:00:00.03
14:31:45 SQL> 
14:31:45 SQL> -- Look at high short scores:
14:31:45 SQL> 
14:31:45 SQL> SELECT
14:31:45   2  MIN(ydate)
14:31:45   3  ,COUNT(ydate)
14:31:45   4  ,MAX(ydate)
14:31:45   5  ,rscore_short
14:31:45   6  ,ROUND(MIN(g4),3)min_g4
14:31:45   7  ,ROUND(AVG(g4),3)avg_g4
14:31:45   8  ,ROUND(STDDEV(g4),3)stddv_g4
14:31:45   9  ,ROUND(MAX(g4),3)max_g4
14:31:45  10  FROM tkr_rpt10
14:31:45  11  GROUP BY rscore_short
14:31:45  12  ORDER BY rscore_short
14:31:45  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_SHORT     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ------------ ---------- ---------- ---------- ----------
2010-10-04 13:00:01           99 2011-01-05 00:00:00           .1     -20.13      4.021     15.518      75.53
2010-10-04 19:00:01          193 2011-01-04 22:00:00           .2     -29.22      1.785     23.088     296.09
2010-10-04 15:00:01          147 2011-01-04 21:00:00           .3     -18.95      3.897     26.742     296.58
2010-10-04 14:00:01           70 2011-01-04 23:00:00           .4     -25.58      3.405     13.703      74.32
2010-10-19 14:00:01           30 2010-12-28 14:00:00           .5     -289.6     -8.591     53.796      18.15
2010-10-04 16:00:01           28 2010-12-31 20:00:00           .6     -18.27       .664     10.308      14.88
2010-10-26 16:00:01           19 2010-12-30 15:00:00           .7     -19.63     -2.052     10.392      13.85
2010-10-29 14:00:01           16 2010-11-29 19:00:01           .8     -16.55       .516     11.601      14.22
2010-11-15 13:00:01            5 2010-12-17 12:00:00           .9    -296.58    -68.807    127.481     -1.115

9 rows selected.

Elapsed: 00:00:00.03
14:31:45 SQL> 
14:31:45 SQL> -- Look at high short scores
14:31:45 SQL> -- and low long scores.
14:31:45 SQL> 
14:31:45 SQL> SELECT
14:31:45   2  MIN(ydate)
14:31:45   3  ,COUNT(ydate)
14:31:45   4  ,MAX(ydate)
14:31:45   5  ,rscore_short
14:31:45   6  ,ROUND(MIN(g4),3)min_g4
14:31:45   7  ,ROUND(AVG(g4),3)avg_g4
14:31:45   8  ,ROUND(STDDEV(g4),3)stddv_g4
14:31:45   9  ,ROUND(MAX(g4),3)max_g4
14:31:45  10  FROM tkr_rpt10
14:31:45  11  WHERE rscore_long < 0.3
14:31:45  12  GROUP BY rscore_short
14:31:45  13  ORDER BY rscore_short
14:31:45  14  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_SHORT     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ------------ ---------- ---------- ---------- ----------
2010-10-08 14:00:01           16 2010-12-30 11:00:00           .1     -2.805      2.132      2.634       7.55
2010-10-05 19:00:01           36 2011-01-04 12:00:00           .2      -7.68      -.989      3.402       6.83
2010-10-04 15:00:01           22 2010-12-30 16:00:00           .3     -13.34       2.49     13.252      56.29
2010-10-07 19:00:01            5 2011-01-04 14:00:00           .4      -.345      5.169      5.554      12.48
2010-12-21 13:00:00            3 2010-12-28 14:00:00           .5     -3.665        -.2      5.115      5.675
2010-11-11 19:00:01            5 2010-12-23 20:00:00           .6     -18.27    -10.793      9.244       2.25
2010-10-26 16:00:01            2 2010-12-17 20:00:00           .7      -2.21       .085      3.246       2.38
2010-11-11 15:00:01            2 2010-11-23 18:00:01           .8     -14.08        .07     20.011      14.22
2010-11-15 13:00:01            2 2010-11-16 15:00:01           .9    -296.58    -155.65    199.305     -14.72

9 rows selected.

Elapsed: 00:00:00.03
14:31:45 SQL> 
14:31:45 SQL> -- This works better on sparse results:
14:31:45 SQL> 
14:31:45 SQL> 
14:31:45 SQL> CREATE OR REPLACE VIEW tkr_rpt_long AS
14:31:45   2  SELECT
14:31:45   3  l.score  score_long
14:31:45   4  ,m.g4
14:31:45   5  ,m.ydate
14:31:45   6  ,ROUND(l.score,1)rscore_long
14:31:45   7  FROM stkscores_1hr l,stk_ms m
14:31:45   8  WHERE l.ydate = m.ydate
14:31:45   9  AND l.tkr = '&1'
14:31:45  10  AND l.targ = 'gatt'
14:31:45  11  /
old   9: AND l.tkr = '&1'
new   9: AND l.tkr = 'GOOG'

View created.

Elapsed: 00:00:00.03
14:31:45 SQL> 
14:31:45 SQL> 
14:31:45 SQL> -- Look for CORR():
14:31:45 SQL> SELECT
14:31:45   2  MIN(ydate)
14:31:45   3  ,COUNT(ydate)
14:31:45   4  ,MAX(ydate)
14:31:45   5  ,CORR(score_long, g4)
14:31:45   6  FROM tkr_rpt_long
14:31:45   7  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          CORR(SCORE_LONG,G4)
------------------- ------------ ------------------- -------------------
2010-10-04 13:00:01          607 2011-01-05 00:00:00          .053767417

Elapsed: 00:00:00.02
14:31:45 SQL> 
14:31:45 SQL> 
14:31:45 SQL> -- Look at distribution of scores_1hr and resulting gains.
14:31:45 SQL> -- A hich score means SVM has high confidence that the long position will be lucrative:
14:31:45 SQL> 
14:31:45 SQL> SELECT
14:31:45   2  MIN(ydate)
14:31:45   3  ,COUNT(ydate)
14:31:45   4  ,MAX(ydate)
14:31:45   5  ,rscore_long
14:31:45   6  ,ROUND(MIN(g4),3)min_g4
14:31:45   7  ,ROUND(AVG(g4),3)avg_g4
14:31:45   8  ,ROUND(STDDEV(g4),3)stddv_g4
14:31:45   9  ,ROUND(MAX(g4),3)max_g4
14:31:45  10  FROM tkr_rpt_long
14:31:45  11  GROUP BY rscore_long
14:31:45  12  ORDER BY rscore_long
14:31:45  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_LONG     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ----------- ---------- ---------- ---------- ----------
2010-12-29 12:00:00            1 2010-12-29 12:00:00           0      2.725      2.725          0      2.725
2010-12-16 19:00:00           19 2010-12-29 10:00:00          .1     -4.345       .494      2.872      6.105
2010-10-04 15:00:01           73 2011-01-04 14:00:00          .2    -296.58     -4.218     36.146      56.29
2010-10-04 18:00:01           91 2011-01-04 20:00:00          .3     -19.63      1.366      8.616      49.38
2010-10-05 13:00:01           92 2011-01-04 13:00:00          .4     -25.58      2.652     32.204     296.58
2010-10-04 17:00:01           84 2011-01-05 00:00:00          .5     -289.6       .038     34.931      71.51
2010-10-04 13:00:01           93 2011-01-04 21:00:00          .6     -26.99      2.855     10.475      53.01
2010-10-04 19:00:01           81 2011-01-04 22:00:00          .7     -27.23      5.679     36.365     296.09
2010-10-04 14:00:01           45 2011-01-04 23:00:00          .8     -26.46      3.086     17.459      75.53
2010-10-22 16:00:01           26 2011-01-04 19:00:00          .9     -5.705     -1.011      3.523       5.84
2010-12-20 09:00:00            2 2011-01-04 17:00:00           1       4.82       4.82          0       4.82

11 rows selected.

Elapsed: 00:00:00.02
14:31:45 SQL> 
14:31:45 SQL> -- Look at shorts:
14:31:45 SQL> 
14:31:45 SQL> CREATE OR REPLACE VIEW tkr_rpt_short AS
14:31:45   2  SELECT
14:31:45   3  s.score  score_short
14:31:45   4  ,m.g4
14:31:45   5  ,m.ydate
14:31:45   6  ,ROUND(s.score,1)rscore_short
14:31:45   7  FROM stkscores_1hr s,stk_ms m
14:31:45   8  WHERE s.ydate = m.ydate
14:31:45   9  AND s.tkr = '&1'
14:31:45  10  AND s.targ = 'gattn'
14:31:45  11  /
old   9: AND s.tkr = '&1'
new   9: AND s.tkr = 'GOOG'

View created.

Elapsed: 00:00:00.03
14:31:45 SQL> 
14:31:45 SQL> 
14:31:45 SQL> -- Look for CORR():
14:31:45 SQL> SELECT
14:31:45   2  MIN(ydate)
14:31:45   3  ,COUNT(ydate)
14:31:45   4  ,MAX(ydate)
14:31:45   5  ,CORR(score_short, g4)
14:31:45   6  FROM tkr_rpt_short
14:31:45   7  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          CORR(SCORE_SHORT,G4)
------------------- ------------ ------------------- --------------------
2010-10-04 13:00:01          607 2011-01-05 00:00:00           -.12466039

Elapsed: 00:00:00.02
14:31:45 SQL> 
14:31:45 SQL> 
14:31:45 SQL> -- Look at distribution of scores_1hr and resulting gains.
14:31:45 SQL> -- A hich score means SVM has high confidence that the short position will be lucrative:
14:31:45 SQL> 
14:31:45 SQL> SELECT
14:31:45   2  MIN(ydate)
14:31:45   3  ,COUNT(ydate)
14:31:45   4  ,MAX(ydate)
14:31:45   5  ,rscore_short
14:31:45   6  ,ROUND(MIN(g4),3)min_g4
14:31:45   7  ,ROUND(AVG(g4),3)avg_g4
14:31:45   8  ,ROUND(STDDEV(g4),3)stddv_g4
14:31:45   9  ,ROUND(MAX(g4),3)max_g4
14:31:45  10  FROM tkr_rpt_short
14:31:45  11  GROUP BY rscore_short
14:31:45  12  ORDER BY rscore_short
14:31:45  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_SHORT     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ------------ ---------- ---------- ---------- ----------
2010-10-04 13:00:01           99 2011-01-05 00:00:00           .1     -20.13      4.021     15.518      75.53
2010-10-04 19:00:01          193 2011-01-04 22:00:00           .2     -29.22      1.785     23.088     296.09
2010-10-04 15:00:01          147 2011-01-04 21:00:00           .3     -18.95      3.897     26.742     296.58
2010-10-04 14:00:01           70 2011-01-04 23:00:00           .4     -25.58      3.405     13.703      74.32
2010-10-19 14:00:01           30 2010-12-28 14:00:00           .5     -289.6     -8.591     53.796      18.15
2010-10-04 16:00:01           28 2010-12-31 20:00:00           .6     -18.27       .664     10.308      14.88
2010-10-26 16:00:01           19 2010-12-30 15:00:00           .7     -19.63     -2.052     10.392      13.85
2010-10-29 14:00:01           16 2010-11-29 19:00:01           .8     -16.55       .516     11.601      14.22
2010-11-15 13:00:01            5 2010-12-17 12:00:00           .9    -296.58    -68.807    127.481     -1.115

9 rows selected.

Elapsed: 00:00:00.03
14:31:45 SQL> 
14:31:45 SQL> 







ooooooooooo
earlier rpt:


oracle@hp2:/pt/s/rluck/svmhstk$ sqt @tkr_rpt.sql GOOG

SQL*Plus: Release 11.2.0.1.0 Production on Wed Jan 5 12:33:48 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

12:33:48 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.01
12:33:48 SQL> --
12:33:48 SQL> -- tkr_rpt.sql
12:33:48 SQL> --
12:33:48 SQL> 
12:33:48 SQL> -- I use this script to report on correlation between SVM scores_1hr and Forex gains.
12:33:48 SQL> 
12:33:48 SQL> CREATE OR REPLACE VIEW tkr_rpt10 AS
12:33:48   2  SELECT
12:33:48   3  l.score  score_long
12:33:48   4  ,s.score score_short
12:33:48   5  ,m.g4
12:33:48   6  ,m.ydate
12:33:48   7  ,ROUND(l.score,1)rscore_long
12:33:48   8  ,ROUND(s.score,1)rscore_short
12:33:48   9  FROM stkscores_1hr l, stkscores_1hr s,stk_ms m
12:33:48  10  WHERE l.ydate = s.ydate
12:33:48  11  AND   l.ydate = m.ydate
12:33:48  12  AND l.tkr = '&1'
12:33:48  13  AND l.tkr = s.tkr
12:33:48  14  AND l.targ = 'gatt'
12:33:48  15  AND s.targ = 'gattn'
12:33:48  16  /
old  12: AND l.tkr = '&1'
new  12: AND l.tkr = 'GOOG'

View created.

Elapsed: 00:00:00.14
12:33:48 SQL> 
12:33:48 SQL> -- rpt
12:33:48 SQL> 
12:33:48 SQL> SELECT COUNT(*)FROM stkscores_1hr;

  COUNT(*)
----------
      1214

Elapsed: 00:00:00.01
12:33:48 SQL> 
12:33:48 SQL> SELECT COUNT(*)FROM tkr_rpt10;

  COUNT(*)
----------
       607

Elapsed: 00:00:00.04
12:33:48 SQL> 
12:33:48 SQL> -- Look for CORR():
12:33:48 SQL> SELECT
12:33:48   2  MIN(ydate)
12:33:48   3  ,COUNT(ydate)
12:33:48   4  ,MAX(ydate)
12:33:48   5  ,CORR(score_long, g4)
12:33:48   6  ,CORR(score_short, g4)
12:33:48   7  FROM tkr_rpt10
12:33:48   8  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          CORR(SCORE_LONG,G4) CORR(SCORE_SHORT,G4)
------------------- ------------ ------------------- ------------------- --------------------
2010-10-04 13:00:01          607 2011-01-05 00:00:00          .053767417           -.12466039

Elapsed: 00:00:00.06
12:33:48 SQL> 
12:33:48 SQL> -- Look at high long scores:
12:33:48 SQL> 
12:33:48 SQL> SELECT
12:33:48   2  MIN(ydate)
12:33:48   3  ,COUNT(ydate)
12:33:48   4  ,MAX(ydate)
12:33:48   5  ,rscore_long
12:33:48   6  ,ROUND(MIN(g4),3)min_g4
12:33:48   7  ,ROUND(AVG(g4),3)avg_g4
12:33:48   8  ,ROUND(STDDEV(g4),3)stddv_g4
12:33:48   9  ,ROUND(MAX(g4),3)max_g4
12:33:48  10  FROM tkr_rpt10
12:33:48  11  GROUP BY rscore_long
12:33:48  12  ORDER BY rscore_long
12:33:48  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_LONG     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ----------- ---------- ---------- ---------- ----------
2010-12-29 12:00:00            1 2010-12-29 12:00:00           0      2.725      2.725          0      2.725
2010-12-16 19:00:00           19 2010-12-29 10:00:00          .1     -4.345       .494      2.872      6.105
2010-10-04 15:00:01           73 2011-01-04 14:00:00          .2    -296.58     -4.218     36.146      56.29
2010-10-04 18:00:01           91 2011-01-04 20:00:00          .3     -19.63      1.366      8.616      49.38
2010-10-05 13:00:01           92 2011-01-04 13:00:00          .4     -25.58      2.652     32.204     296.58
2010-10-04 17:00:01           84 2011-01-05 00:00:00          .5     -289.6       .038     34.931      71.51
2010-10-04 13:00:01           93 2011-01-04 21:00:00          .6     -26.99      2.855     10.475      53.01
2010-10-04 19:00:01           81 2011-01-04 22:00:00          .7     -27.23      5.679     36.365     296.09
2010-10-04 14:00:01           45 2011-01-04 23:00:00          .8     -26.46      3.086     17.459      75.53
2010-10-22 16:00:01           26 2011-01-04 19:00:00          .9     -5.705     -1.011      3.523       5.84
2010-12-20 09:00:00            2 2011-01-04 17:00:00           1       4.82       4.82          0       4.82

11 rows selected.

Elapsed: 00:00:00.03
12:33:49 SQL> 
12:33:49 SQL> -- Look at high long scores
12:33:49 SQL> -- and low short scores:
12:33:49 SQL> 
12:33:49 SQL> SELECT
12:33:49   2  MIN(ydate)
12:33:49   3  ,COUNT(ydate)
12:33:49   4  ,MAX(ydate)
12:33:49   5  ,rscore_long
12:33:49   6  ,ROUND(MIN(g4),3)min_g4
12:33:49   7  ,ROUND(AVG(g4),3)avg_g4
12:33:49   8  ,ROUND(STDDEV(g4),3)stddv_g4
12:33:49   9  ,ROUND(MAX(g4),3)max_g4
12:33:49  10  FROM tkr_rpt10
12:33:49  11  WHERE rscore_short < 0.3
12:33:49  12  GROUP BY rscore_long
12:33:49  13  ORDER BY rscore_long
12:33:49  14  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_LONG     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ----------- ---------- ---------- ---------- ----------
2010-12-29 12:00:00            1 2010-12-29 12:00:00           0      2.725      2.725          0      2.725
2010-12-21 12:00:00           12 2010-12-29 10:00:00          .1     -1.775      1.405       2.76      6.105
2010-10-05 19:00:01           39 2011-01-04 12:00:00          .2      -7.68      -.541      3.594       7.55
2010-10-06 14:00:01           32 2011-01-04 11:00:00          .3      -6.18       .838      4.092       9.11
2010-10-05 16:00:01           29 2011-01-04 13:00:00          .4      -9.62      -.814      4.006      11.18
2010-10-07 18:00:01           31 2011-01-05 00:00:00          .5     -29.22      1.729     15.686      71.51
2010-10-04 13:00:01           44 2011-01-04 15:00:00          .6      -5.89      3.437      9.366      49.07
2010-10-04 19:00:01           49 2011-01-04 22:00:00          .7     -27.23      9.092     45.098     296.09
2010-10-07 14:00:01           28 2011-01-04 18:00:00          .8     -26.46      3.676     21.697      75.53
2010-10-22 16:00:01           25 2011-01-04 19:00:00          .9     -5.705      -.898      3.552       5.84
2010-12-20 09:00:00            2 2011-01-04 17:00:00           1       4.82       4.82          0       4.82

11 rows selected.

Elapsed: 00:00:00.04
12:33:49 SQL> 
12:33:49 SQL> -- Look at high short scores:
12:33:49 SQL> 
12:33:49 SQL> SELECT
12:33:49   2  MIN(ydate)
12:33:49   3  ,COUNT(ydate)
12:33:49   4  ,MAX(ydate)
12:33:49   5  ,rscore_short
12:33:49   6  ,ROUND(MIN(g4),3)min_g4
12:33:49   7  ,ROUND(AVG(g4),3)avg_g4
12:33:49   8  ,ROUND(STDDEV(g4),3)stddv_g4
12:33:49   9  ,ROUND(MAX(g4),3)max_g4
12:33:49  10  FROM tkr_rpt10
12:33:49  11  GROUP BY rscore_short
12:33:49  12  ORDER BY rscore_short
12:33:49  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_SHORT     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ------------ ---------- ---------- ---------- ----------
2010-10-04 13:00:01           99 2011-01-05 00:00:00           .1     -20.13      4.021     15.518      75.53
2010-10-04 19:00:01          193 2011-01-04 22:00:00           .2     -29.22      1.785     23.088     296.09
2010-10-04 15:00:01          147 2011-01-04 21:00:00           .3     -18.95      3.897     26.742     296.58
2010-10-04 14:00:01           70 2011-01-04 23:00:00           .4     -25.58      3.405     13.703      74.32
2010-10-19 14:00:01           30 2010-12-28 14:00:00           .5     -289.6     -8.591     53.796      18.15
2010-10-04 16:00:01           28 2010-12-31 20:00:00           .6     -18.27       .664     10.308      14.88
2010-10-26 16:00:01           19 2010-12-30 15:00:00           .7     -19.63     -2.052     10.392      13.85
2010-10-29 14:00:01           16 2010-11-29 19:00:01           .8     -16.55       .516     11.601      14.22
2010-11-15 13:00:01            5 2010-12-17 12:00:00           .9    -296.58    -68.807    127.481     -1.115

9 rows selected.

Elapsed: 00:00:00.02
12:33:49 SQL> 
12:33:49 SQL> -- Look at high short scores
12:33:49 SQL> -- and low long scores.
12:33:49 SQL> 
12:33:49 SQL> SELECT
12:33:49   2  MIN(ydate)
12:33:49   3  ,COUNT(ydate)
12:33:49   4  ,MAX(ydate)
12:33:49   5  ,rscore_short
12:33:49   6  ,ROUND(MIN(g4),3)min_g4
12:33:49   7  ,ROUND(AVG(g4),3)avg_g4
12:33:49   8  ,ROUND(STDDEV(g4),3)stddv_g4
12:33:49   9  ,ROUND(MAX(g4),3)max_g4
12:33:49  10  FROM tkr_rpt10
12:33:49  11  WHERE rscore_long < 0.3
12:33:49  12  GROUP BY rscore_short
12:33:49  13  ORDER BY rscore_short
12:33:49  14  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_SHORT     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ------------ ---------- ---------- ---------- ----------
2010-10-08 14:00:01           16 2010-12-30 11:00:00           .1     -2.805      2.132      2.634       7.55
2010-10-05 19:00:01           36 2011-01-04 12:00:00           .2      -7.68      -.989      3.402       6.83
2010-10-04 15:00:01           22 2010-12-30 16:00:00           .3     -13.34       2.49     13.252      56.29
2010-10-07 19:00:01            5 2011-01-04 14:00:00           .4      -.345      5.169      5.554      12.48
2010-12-21 13:00:00            3 2010-12-28 14:00:00           .5     -3.665        -.2      5.115      5.675
2010-11-11 19:00:01            5 2010-12-23 20:00:00           .6     -18.27    -10.793      9.244       2.25
2010-10-26 16:00:01            2 2010-12-17 20:00:00           .7      -2.21       .085      3.246       2.38
2010-11-11 15:00:01            2 2010-11-23 18:00:01           .8     -14.08        .07     20.011      14.22
2010-11-15 13:00:01            2 2010-11-16 15:00:01           .9    -296.58    -155.65    199.305     -14.72

9 rows selected.

Elapsed: 00:00:00.03
12:33:49 SQL> 
12:33:49 SQL> -- This works better on sparse results:
12:33:49 SQL> 
12:33:49 SQL> 
12:33:49 SQL> CREATE OR REPLACE VIEW tkr_rpt_long AS
12:33:49   2  SELECT
12:33:49   3  l.score  score_long
12:33:49   4  ,m.g4
12:33:49   5  ,m.ydate
12:33:49   6  ,ROUND(l.score,1)rscore_long
12:33:49   7  FROM stkscores_1hr l,stk_ms m
12:33:49   8  WHERE l.ydate = m.ydate
12:33:49   9  AND l.tkr = '&1'
12:33:49  10  AND l.targ = 'gatt'
12:33:49  11  /
old   9: AND l.tkr = '&1'
new   9: AND l.tkr = 'GOOG'

View created.

Elapsed: 00:00:00.03
12:33:49 SQL> 
12:33:49 SQL> 
12:33:49 SQL> -- Look for CORR():
12:33:49 SQL> SELECT
12:33:49   2  MIN(ydate)
12:33:49   3  ,COUNT(ydate)
12:33:49   4  ,MAX(ydate)
12:33:49   5  ,CORR(score_long, g4)
12:33:49   6  FROM tkr_rpt_long
12:33:49   7  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          CORR(SCORE_LONG,G4)
------------------- ------------ ------------------- -------------------
2010-10-04 13:00:01          607 2011-01-05 00:00:00          .053767417

Elapsed: 00:00:00.03
12:33:49 SQL> 
12:33:49 SQL> 
12:33:49 SQL> -- Look at distribution of scores_1hr and resulting gains.
12:33:49 SQL> -- A hich score means SVM has high confidence that the long position will be lucrative:
12:33:49 SQL> 
12:33:49 SQL> SELECT
12:33:49   2  MIN(ydate)
12:33:49   3  ,COUNT(ydate)
12:33:49   4  ,MAX(ydate)
12:33:49   5  ,rscore_long
12:33:49   6  ,ROUND(MIN(g4),3)min_g4
12:33:49   7  ,ROUND(AVG(g4),3)avg_g4
12:33:49   8  ,ROUND(STDDEV(g4),3)stddv_g4
12:33:49   9  ,ROUND(MAX(g4),3)max_g4
12:33:49  10  FROM tkr_rpt_long
12:33:49  11  GROUP BY rscore_long
12:33:49  12  ORDER BY rscore_long
12:33:49  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_LONG     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ----------- ---------- ---------- ---------- ----------
2010-12-29 12:00:00            1 2010-12-29 12:00:00           0      2.725      2.725          0      2.725
2010-12-16 19:00:00           19 2010-12-29 10:00:00          .1     -4.345       .494      2.872      6.105
2010-10-04 15:00:01           73 2011-01-04 14:00:00          .2    -296.58     -4.218     36.146      56.29
2010-10-04 18:00:01           91 2011-01-04 20:00:00          .3     -19.63      1.366      8.616      49.38
2010-10-05 13:00:01           92 2011-01-04 13:00:00          .4     -25.58      2.652     32.204     296.58
2010-10-04 17:00:01           84 2011-01-05 00:00:00          .5     -289.6       .038     34.931      71.51
2010-10-04 13:00:01           93 2011-01-04 21:00:00          .6     -26.99      2.855     10.475      53.01
2010-10-04 19:00:01           81 2011-01-04 22:00:00          .7     -27.23      5.679     36.365     296.09
2010-10-04 14:00:01           45 2011-01-04 23:00:00          .8     -26.46      3.086     17.459      75.53
2010-10-22 16:00:01           26 2011-01-04 19:00:00          .9     -5.705     -1.011      3.523       5.84
2010-12-20 09:00:00            2 2011-01-04 17:00:00           1       4.82       4.82          0       4.82

11 rows selected.

Elapsed: 00:00:00.02
12:33:49 SQL> 
12:33:49 SQL> -- Look at shorts:
12:33:49 SQL> 
12:33:49 SQL> CREATE OR REPLACE VIEW tkr_rpt_short AS
12:33:49   2  SELECT
12:33:49   3  s.score  score_short
12:33:49   4  ,m.g4
12:33:49   5  ,m.ydate
12:33:49   6  ,ROUND(s.score,1)rscore_short
12:33:49   7  FROM stkscores_1hr s,stk_ms m
12:33:49   8  WHERE s.ydate = m.ydate
12:33:49   9  AND s.tkr = '&1'
12:33:49  10  AND s.targ = 'gattn'
12:33:49  11  /
old   9: AND s.tkr = '&1'
new   9: AND s.tkr = 'GOOG'

View created.

Elapsed: 00:00:00.03
12:33:49 SQL> 
12:33:49 SQL> 
12:33:49 SQL> -- Look for CORR():
12:33:49 SQL> SELECT
12:33:49   2  MIN(ydate)
12:33:49   3  ,COUNT(ydate)
12:33:49   4  ,MAX(ydate)
12:33:49   5  ,CORR(score_short, g4)
12:33:49   6  FROM tkr_rpt_short
12:33:49   7  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          CORR(SCORE_SHORT,G4)
------------------- ------------ ------------------- --------------------
2010-10-04 13:00:01          607 2011-01-05 00:00:00           -.12466039

Elapsed: 00:00:00.04
12:33:49 SQL> 
12:33:49 SQL> 
12:33:49 SQL> -- Look at distribution of scores_1hr and resulting gains.
12:33:49 SQL> -- A hich score means SVM has high confidence that the short position will be lucrative:
12:33:49 SQL> 
12:33:49 SQL> SELECT
12:33:49   2  MIN(ydate)
12:33:49   3  ,COUNT(ydate)
12:33:49   4  ,MAX(ydate)
12:33:49   5  ,rscore_short
12:33:49   6  ,ROUND(MIN(g4),3)min_g4
12:33:49   7  ,ROUND(AVG(g4),3)avg_g4
12:33:49   8  ,ROUND(STDDEV(g4),3)stddv_g4
12:33:49   9  ,ROUND(MAX(g4),3)max_g4
12:33:49  10  FROM tkr_rpt_short
12:33:49  11  GROUP BY rscore_short
12:33:49  12  ORDER BY rscore_short
12:33:49  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_SHORT     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ------------ ---------- ---------- ---------- ----------
2010-10-04 13:00:01           99 2011-01-05 00:00:00           .1     -20.13      4.021     15.518      75.53
2010-10-04 19:00:01          193 2011-01-04 22:00:00           .2     -29.22      1.785     23.088     296.09
2010-10-04 15:00:01          147 2011-01-04 21:00:00           .3     -18.95      3.897     26.742     296.58
2010-10-04 14:00:01           70 2011-01-04 23:00:00           .4     -25.58      3.405     13.703      74.32
2010-10-19 14:00:01           30 2010-12-28 14:00:00           .5     -289.6     -8.591     53.796      18.15
2010-10-04 16:00:01           28 2010-12-31 20:00:00           .6     -18.27       .664     10.308      14.88
2010-10-26 16:00:01           19 2010-12-30 15:00:00           .7     -19.63     -2.052     10.392      13.85
2010-10-29 14:00:01           16 2010-11-29 19:00:01           .8     -16.55       .516     11.601      14.22
2010-11-15 13:00:01            5 2010-12-17 12:00:00           .9    -296.58    -68.807    127.481     -1.115

9 rows selected.

Elapsed: 00:00:00.02
12:33:49 SQL> 
12:33:49 SQL> 
