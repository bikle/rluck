
SQL*Plus: Release 11.2.0.1.0 Production on Wed Nov 10 03:12:19 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

03:12:19 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
03:12:19 SQL> 03:12:19 SQL> --
03:12:19 SQL> -- 6hp.sql
03:12:19 SQL> --
03:12:19 SQL> 
03:12:19 SQL> SET LINES 66
03:12:19 SQL> DESC hourly
 Name				  Null?    Type
 -------------------------------- -------- -----------------------
 PAIR					   VARCHAR2(15)
 YDATE					   DATE
 VOL					   NUMBER
 OPN					   NUMBER
 CLSE					   NUMBER
 MN					   NUMBER
 MX					   NUMBER

03:12:19 SQL> SET LINES 166
03:12:19 SQL> 
03:12:19 SQL> CREATE OR REPLACE VIEW hp10 AS
03:12:19   2  SELECT
03:12:19   3  pair
03:12:19   4  -- ydate is granular down to the hour:
03:12:19   5  ,ydate
03:12:19   6  ,opn
03:12:19   7  -- Derive an attribute I call "day_hour":
03:12:19   8  ,TO_CHAR(ydate,'D')||'_'||TO_CHAR(ydate,'HH24')dhr
03:12:19   9  -- Get ydate 6 hours in the future:
03:12:19  10  ,LEAD(ydate,6,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ydate6
03:12:19  11  -- Get closing price 6 hours in the future:
03:12:19  12  ,LEAD(clse,5,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) clse6
03:12:19  13  FROM hourly
03:12:19  14  WHERE ydate > '2009-01-01'
03:12:19  15  -- Prevent divide by zero:
03:12:19  16  AND opn > 0
03:12:19  17  ORDER BY pair,ydate
03:12:19  18  /

View created.

Elapsed: 00:00:00.04
03:12:19 SQL> 
03:12:19 SQL> -- I derive more attributes:
03:12:19 SQL> CREATE OR REPLACE VIEW hp12 AS
03:12:19   2  SELECT
03:12:19   3  pair
03:12:19   4  ,ydate
03:12:19   5  ,opn
03:12:19   6  ,dhr
03:12:19   7  ,ydate6
03:12:19   8  ,clse6
03:12:19   9  ,(clse6 - opn)/opn npg
03:12:19  10  FROM hp10
03:12:19  11  ORDER BY pair,ydate
03:12:19  12  /

View created.

Elapsed: 00:00:00.07
03:12:20 SQL> 
03:12:20 SQL> --rpt
03:12:20 SQL> SELECT COUNT(ydate)FROM hp10;

COUNT(YDATE)
------------
       70074

Elapsed: 00:00:00.26
03:12:20 SQL> SELECT AVG(ydate6 - ydate), MIN(ydate6 - ydate),MAX(ydate6 - ydate),COUNT(ydate)FROM hp12;

AVG(YDATE6-YDATE) MIN(YDATE6-YDATE) MAX(YDATE6-YDATE) COUNT(YDATE)
----------------- ----------------- ----------------- ------------
       .348346612		.25	   2.70833333	     70074

Elapsed: 00:00:00.36
03:12:20 SQL> -- I should see no rows WHERE the date difference is less than 6 hours:
03:12:20 SQL> SELECT COUNT(ydate)FROM hp12 WHERE (ydate6 - ydate) < 6/24;

COUNT(YDATE)
------------
	   0

Elapsed: 00:00:00.27
03:12:20 SQL> 
03:12:20 SQL> -- I should see many rows WHERE the date difference is exactly 6 hours:
03:12:20 SQL> SELECT COUNT(ydate)FROM hp12 WHERE (ydate6 - ydate) = 6/24
03:12:20   2  
03:12:20 SQL> -- I should see some rows
03:12:20 SQL> -- WHERE the date difference is greater than 6 hours due to Saturday getting sandwiched between some of the records.
03:12:20 SQL> -- Also if I am missing some rows, counts will appear here:
03:12:20 SQL> SELECT TO_CHAR(ydate,'Day'),MIN(ydate),COUNT(ydate),MAX(ydate)
03:12:20   2  FROM hp12 WHERE (ydate6 - ydate) > 6/24
03:12:20   3  GROUP BY TO_CHAR(ydate,'Day')
03:12:20   4  ORDER BY COUNT(ydate)
03:12:20   5  /

TO_CHAR(Y MIN(YDATE)	      COUNT(YDATE) MAX(YDATE)
--------- ------------------- ------------ -------------------
Sunday	  2009-05-10 21:00:00		18 2009-05-10 23:00:00
Monday	  2009-05-11 00:00:00		18 2009-05-11 02:00:00
Thursday  2009-06-25 10:00:00		36 2009-06-25 15:00:00
Wednesday 2010-06-23 13:00:00		36 2010-06-23 18:00:00
Tuesday   2009-07-14 08:00:00		72 2009-08-18 21:00:00
Friday	  2009-01-02 16:00:00	      3498 2010-11-05 21:00:00

6 rows selected.

Elapsed: 00:00:00.28
03:12:21 SQL> 
03:12:21 SQL> -- Now I can aggregate:
03:12:21 SQL> SELECT
03:12:21   2  pair,dhr
03:12:21   3  ,COUNT(npg)count_npg
03:12:21   4  ,ROUND(MIN(npg),4)min_npg
03:12:21   5  ,ROUND(AVG(npg),4)avg_npg
03:12:21   6  ,ROUND(STDDEV(npg),4)stddev_npg
03:12:21   7  ,ROUND(MAX(npg),4)max_npg
03:12:21   8  ,ROUND(SUM(npg),4)sum_npg
03:12:21   9  FROM hp12
03:12:21  10  WHERE (ydate6 - ydate) = 6/24
03:12:21  11  GROUP BY pair,dhr
03:12:21  12  -- I want more than 1.5 pip / hr which is 9 pips:
03:12:21  13  HAVING ABS(AVG(npg)) > 0.0009
03:12:21  14  ORDER BY pair,dhr
03:12:21  15  /

PAIR		DHR   COUNT_NPG    MIN_NPG    AVG_NPG STDDEV_NPG    MAX_NPG    SUM_NPG
--------------- ---- ---------- ---------- ---------- ---------- ---------- ----------
aud_usd 	4_19	     95     -.0139	.0009	   .0047      .0131	 .0875
aud_usd 	5_04	     97     -.0148	.0011	   .0051      .0149	 .1047
aud_usd 	5_05	     97     -.0166	.0011	   .0054      .0138	 .1096
aud_usd 	5_07	     97     -.0106	 .001	   .0055      .0213	 .0973
eur_usd 	6_07	     96     -.0187     -.0009	   .0045      .0104	-.0892
eur_usd 	6_09	     97     -.0176     -.0011	   .0048      .0093	-.1063
eur_usd 	6_10	     97     -.0155	-.001	   .0049      .0126	-.0935
gbp_usd 	3_10	     96      -.009	.0009	   .0045      .0127	 .0908
gbp_usd 	3_11	     96     -.0139	.0009	   .0051      .0162	 .0888
gbp_usd 	3_12	     96     -.0117	.0011	   .0053      .0232	 .1034
gbp_usd 	3_14	     96     -.0177	 .001	   .0051      .0258	 .0979
gbp_usd 	6_09	     97     -.0101     -.0009	   .0039      .0082	-.0918
usd_cad 	5_13	     96     -.0132	.0009	    .006      .0265	  .087
usd_chf 	6_07	     96     -.0093	 .001	   .0042      .0155	 .0976

14 rows selected.

Elapsed: 00:00:00.64
03:12:21 SQL> 
03:12:21 SQL> 
03:12:21 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
