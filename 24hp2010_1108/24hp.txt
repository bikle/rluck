
SQL*Plus: Release 11.2.0.1.0 Production on Wed Nov 10 02:59:31 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

02:59:31 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
02:59:31 SQL> 02:59:31 SQL> --
02:59:31 SQL> -- 24hp.sql
02:59:31 SQL> --
02:59:31 SQL> 
02:59:31 SQL> SET LINES 66
02:59:31 SQL> DESC hourly
 Name				  Null?    Type
 -------------------------------- -------- -----------------------
 PAIR					   VARCHAR2(15)
 YDATE					   DATE
 VOL					   NUMBER
 OPN					   NUMBER
 CLSE					   NUMBER
 MN					   NUMBER
 MX					   NUMBER

02:59:31 SQL> SET LINES 166
02:59:31 SQL> 
02:59:31 SQL> CREATE OR REPLACE VIEW hp10 AS
02:59:31   2  SELECT
02:59:31   3  pair
02:59:31   4  -- ydate is granular down to the hour:
02:59:31   5  ,ydate
02:59:31   6  ,opn
02:59:31   7  -- Derive an attribute I call "day_hour":
02:59:31   8  ,TO_CHAR(ydate,'D')||'_'||TO_CHAR(ydate,'HH24')dhr
02:59:31   9  -- Get ydate 24 hours in the future:
02:59:31  10  ,LEAD(ydate,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ydate24
02:59:31  11  -- Get closing price 24 hours in the future:
02:59:31  12  ,LEAD(clse,23,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) clse24
02:59:31  13  FROM hourly
02:59:31  14  WHERE ydate > '2009-01-01'
02:59:31  15  -- Prevent divide by zero:
02:59:31  16  AND opn > 0
02:59:31  17  ORDER BY pair,ydate
02:59:31  18  /

View created.

Elapsed: 00:00:00.05
02:59:31 SQL> 
02:59:31 SQL> -- I derive more attributes:
02:59:31 SQL> CREATE OR REPLACE VIEW hdp AS
02:59:31   2  SELECT
02:59:31   3  pair
02:59:31   4  ,ydate
02:59:31   5  ,opn
02:59:31   6  ,dhr
02:59:31   7  ,ydate24
02:59:31   8  ,clse24
02:59:31   9  ,(clse24 - opn)/opn npg
02:59:31  10  FROM hp10
02:59:31  11  ORDER BY pair,ydate
02:59:31  12  /

View created.

Elapsed: 00:00:00.04
02:59:31 SQL> 
02:59:31 SQL> --rpt
02:59:31 SQL> SELECT COUNT(ydate)FROM hp10;

COUNT(YDATE)
------------
       70074

Elapsed: 00:00:00.25
02:59:31 SQL> SELECT AVG(ydate24 - ydate), MIN(ydate24 - ydate),MAX(ydate24 - ydate),COUNT(ydate)FROM hp24;

AVG(YDATE24-YDATE) MIN(YDATE24-YDATE) MAX(YDATE24-YDATE) COUNT(YDATE)
------------------ ------------------ ------------------ ------------
	1.39399399		    1		   3.625	70074

Elapsed: 00:00:00.34
02:59:32 SQL> -- I should see no rows WHERE the date difference is less than 24 hours:
02:59:32 SQL> SELECT COUNT(ydate)FROM hp24 WHERE (ydate24 - ydate) < 1;

COUNT(YDATE)
------------
	   0

Elapsed: 00:00:00.28
02:59:32 SQL> 
02:59:32 SQL> -- I should see many rows WHERE the date difference is exactly 24 hours:
02:59:32 SQL> SELECT COUNT(ydate)FROM hp24 WHERE (ydate24 - ydate) = 1;

COUNT(YDATE)
------------
       55404

Elapsed: 00:00:00.26
02:59:32 SQL> 
02:59:32 SQL> -- I should see some rows
02:59:32 SQL> -- WHERE the date difference is greater than 24 hours due to Saturday getting sandwiched between some of the records.
02:59:32 SQL> -- Also if I am missing some rows, counts will appear here:
02:59:32 SQL> SELECT TO_CHAR(ydate,'Day'),MIN(ydate),COUNT(ydate),MAX(ydate)
02:59:32   2  FROM hp24 WHERE (ydate24 - ydate) > 1
02:59:32   3  GROUP BY TO_CHAR(ydate,'Day')
02:59:32   4  ORDER BY COUNT(ydate)
02:59:32   5  /

TO_CHAR(Y MIN(YDATE)	      COUNT(YDATE) MAX(YDATE)
--------- ------------------- ------------ -------------------
Sunday	  2009-05-10 21:00:00		18 2009-05-10 23:00:00
Monday	  2009-05-11 00:00:00		90 2009-08-17 23:00:00
Wednesday 2009-06-24 16:00:00	       162 2010-06-23 18:00:00
Tuesday   2009-07-14 00:00:00	       246 2010-06-22 23:00:00
Thursday  2009-01-01 22:00:00	      1262 2010-11-04 23:00:00
Friday	  2009-01-02 00:00:00	     12748 2010-11-05 21:00:00

6 rows selected.

Elapsed: 00:00:00.30
02:59:32 SQL> 
02:59:32 SQL> -- Now I can aggregate:
02:59:32 SQL> SELECT
02:59:32   2  pair,dhr
02:59:32   3  ,COUNT(npg)	   count_npg
02:59:32   4  ,ROUND(MIN(npg),4)   min_npg
02:59:32   5  ,ROUND(AVG(npg),4)   avg_npg
02:59:32   6  ,ROUND(STDDEV(npg),4)stddev_npg
02:59:32   7  ,ROUND(MAX(npg),4)   max_npg
02:59:32   8  ,ROUND(SUM(npg),4)   sum_npg
02:59:32   9  FROM hdp
02:59:32  10  WHERE (ydate24 - ydate) = 1
02:59:32  11  GROUP BY pair,dhr
02:59:32  12  -- I want more than 0.75 pip / hr
02:59:32  13  HAVING ABS(AVG(npg)) > 0.75*0.0024
02:59:32  14  ORDER BY pair,dhr
02:59:32  15  /

PAIR		DHR   COUNT_NPG    MIN_NPG    AVG_NPG STDDEV_NPG    MAX_NPG    SUM_NPG
--------------- ---- ---------- ---------- ---------- ---------- ---------- ----------
aud_usd 	4_02	     94     -.0269	.0018	   .0101      .0279	 .1719
aud_usd 	4_08	     95     -.0321	.0019	   .0115      .0326	 .1809
aud_usd 	4_09	     95     -.0291	.0019	   .0109      .0324	  .181
aud_usd 	4_10	     95      -.028	.0023	   .0106      .0345	 .2139
aud_usd 	4_11	     95     -.0266	.0022	   .0105      .0323	  .205
aud_usd 	4_12	     95     -.0286	.0021	   .0111      .0408	 .1992
aud_usd 	4_13	     95      -.028	.0024	   .0113      .0405	 .2313
aud_usd 	4_14	     95      -.022	.0022	   .0108      .0387	 .2081
aud_usd 	4_16	     94     -.0191	.0021	   .0111      .0513	 .1953
aud_usd 	4_19	     94     -.0262	.0021	   .0108      .0274	 .2013
aud_usd 	4_20	     95     -.0286	 .002	    .011      .0337	 .1897

11 rows selected.

Elapsed: 00:00:00.57
02:59:33 SQL> 
02:59:33 SQL> 
02:59:33 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
