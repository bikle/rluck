
SQL*Plus: Release 11.2.0.1.0 Production on Tue Nov 9 08:15:01 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

08:15:01 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
08:15:01 SQL> 08:15:01 SQL> --
08:15:01 SQL> -- 24hp.sql
08:15:01 SQL> --
08:15:01 SQL> 
08:15:01 SQL> SET LINES 66
08:15:01 SQL> DESC hourly
 Name                             Null?    Type
 -------------------------------- -------- -----------------------
 PAIR                                      VARCHAR2(15)
 YDATE                                     DATE
 VOL                                       NUMBER
 OPN                                       NUMBER
 CLSE                                      NUMBER
 MN                                        NUMBER
 MX                                        NUMBER

08:15:01 SQL> SET LINES 166
08:15:01 SQL> 
08:15:01 SQL> CREATE OR REPLACE VIEW hp10 AS
08:15:01   2  SELECT
08:15:01   3  pair
08:15:01   4  -- ydate is granular down to the hour:
08:15:01   5  ,ydate
08:15:01   6  ,opn
08:15:01   7  -- Derive an attribute I call "day_hour":
08:15:01   8  ,TO_CHAR(ydate,'D')||'_'||TO_CHAR(ydate,'HH24')dhr
08:15:01   9  -- Get ydate 24 hours in the future:
08:15:01  10  ,LEAD(ydate,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ydate24
08:15:01  11  -- Get closing price 24 hours in the future:
08:15:01  12  ,LEAD(clse,23,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) clse24
08:15:01  13  FROM hourly
08:15:01  14  WHERE ydate > '2009-01-01'
08:15:01  15  -- Prevent divide by zero:
08:15:01  16  AND opn > 0
08:15:01  17  ORDER BY pair,ydate
08:15:01  18  /

View created.

Elapsed: 00:00:00.03
08:15:01 SQL> 
08:15:01 SQL> -- I derive more attributes:
08:15:01 SQL> CREATE OR REPLACE VIEW hdp AS
08:15:01   2  SELECT
08:15:01   3  pair
08:15:01   4  ,ydate
08:15:01   5  ,opn
08:15:01   6  ,dhr
08:15:01   7  ,ydate24
08:15:01   8  ,clse24
08:15:01   9  ,(clse24 - opn)/opn npg
08:15:01  10  FROM hp10
08:15:01  11  ORDER BY pair,ydate
08:15:01  12  /

View created.

Elapsed: 00:00:00.05
08:15:01 SQL> 
08:15:01 SQL> --rpt
08:15:01 SQL> SELECT COUNT(ydate)FROM hp10;

COUNT(YDATE)
------------
       69918

Elapsed: 00:00:00.26
08:15:02 SQL> SELECT AVG(ydate24 - ydate), MIN(ydate24 - ydate),MAX(ydate24 - ydate),COUNT(ydate)FROM hp24;

AVG(YDATE24-YDATE) MIN(YDATE24-YDATE) MAX(YDATE24-YDATE) COUNT(YDATE)
------------------ ------------------ ------------------ ------------
        1.39487488                  1              3.625        69918

Elapsed: 00:00:00.44
08:15:02 SQL> -- I should see no rows WHERE the date difference is less than 24 hours:
08:15:02 SQL> SELECT COUNT(ydate)FROM hp24 WHERE (ydate24 - ydate) < 1;

COUNT(YDATE)
------------
           0

Elapsed: 00:00:00.27
08:15:02 SQL> 
08:15:02 SQL> -- I should see many rows WHERE the date difference is exactly 24 hours:
08:15:02 SQL> SELECT COUNT(ydate)FROM hp24 WHERE (ydate24 - ydate) = 1;

COUNT(YDATE)
------------
       55248

Elapsed: 00:00:00.30
08:15:03 SQL> 
08:15:03 SQL> -- I should see some rows
08:15:03 SQL> -- WHERE the date difference is greater than 24 hours due to Saturday getting sandwiched between some of the records.
08:15:03 SQL> -- Also if I am missing some rows, counts will appear here:
08:15:03 SQL> SELECT TO_CHAR(ydate,'Day'),MIN(ydate),COUNT(ydate),MAX(ydate)
08:15:03   2  FROM hp24 WHERE (ydate24 - ydate) > 1
08:15:03   3  GROUP BY TO_CHAR(ydate,'Day')
08:15:03   4  ORDER BY COUNT(ydate)
08:15:03   5  /

TO_CHAR(Y MIN(YDATE)          COUNT(YDATE) MAX(YDATE)
--------- ------------------- ------------ -------------------
Sunday    2009-05-10 21:00:00           18 2009-05-10 23:00:00
Monday    2009-05-11 00:00:00           90 2009-08-17 23:00:00
Wednesday 2009-06-24 16:00:00          162 2010-06-23 18:00:00
Tuesday   2009-07-14 00:00:00          246 2010-06-22 23:00:00
Thursday  2009-01-01 22:00:00         1262 2010-11-04 23:00:00
Friday    2009-01-02 00:00:00        12748 2010-11-05 21:00:00

6 rows selected.

Elapsed: 00:00:00.30
08:15:03 SQL> 
08:15:03 SQL> -- Now I can aggregate:
08:15:03 SQL> SELECT
08:15:03   2  pair,dhr
08:15:03   3  ,COUNT(npg)          count_npg
08:15:03   4  ,ROUND(MIN(npg),4)   min_npg
08:15:03   5  ,ROUND(AVG(npg),4)   avg_npg
08:15:03   6  ,ROUND(STDDEV(npg),4)stddev_npg
08:15:03   7  ,ROUND(MAX(npg),4)   max_npg
08:15:03   8  ,ROUND(SUM(npg),4)   sum_npg
08:15:03   9  FROM hdp
08:15:03  10  WHERE (ydate24 - ydate) = 1
08:15:03  11  GROUP BY pair,dhr
08:15:03  12  -- I want more than 0.75 pip / hr
08:15:03  13  HAVING ABS(AVG(npg)) > 0.75*0.0024
08:15:03  14  ORDER BY pair,dhr
08:15:03  15  /

PAIR            DHR   COUNT_NPG    MIN_NPG    AVG_NPG STDDEV_NPG    MAX_NPG    SUM_NPG
--------------- ---- ---------- ---------- ---------- ---------- ---------- ----------
aud_usd         4_02         94     -.0269      .0018      .0101      .0279      .1719
aud_usd         4_08         95     -.0321      .0019      .0115      .0326      .1809
aud_usd         4_09         95     -.0291      .0019      .0109      .0324       .181
aud_usd         4_10         95      -.028      .0023      .0106      .0345      .2139
aud_usd         4_11         95     -.0266      .0022      .0105      .0323       .205
aud_usd         4_12         95     -.0286      .0021      .0111      .0408      .1992
aud_usd         4_13         95      -.028      .0024      .0113      .0405      .2313
aud_usd         4_14         95      -.022      .0022      .0108      .0387      .2081
aud_usd         4_16         94     -.0191      .0021      .0111      .0513      .1953
aud_usd         4_19         94     -.0262      .0021      .0108      .0274      .2013
aud_usd         4_20         95     -.0286       .002       .011      .0337      .1897
usd_jpy         2_22         94     -.0147     -.0018      .0067      .0216     -.1701

12 rows selected.

Elapsed: 00:00:00.58
08:15:04 SQL> 
08:15:04 SQL> 
08:15:04 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
