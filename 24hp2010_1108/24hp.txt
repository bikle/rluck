
SQL*Plus: Release 11.2.0.1.0 Production on Tue Nov 9 06:51:50 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

06:51:50 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
06:51:50 SQL> 06:51:50 SQL> --
06:51:50 SQL> -- 24hp.sql
06:51:50 SQL> --
06:51:50 SQL> 
06:51:50 SQL> SET LINES 66
06:51:50 SQL> DESC hourly
 Name				  Null?    Type
 -------------------------------- -------- -----------------------
 PAIR					   VARCHAR2(15)
 YDATE					   DATE
 VOL					   NUMBER
 OPN					   NUMBER
 CLSE					   NUMBER
 MN					   NUMBER
 MX					   NUMBER

06:51:50 SQL> SET LINES 166
06:51:50 SQL> 
06:51:50 SQL> CREATE OR REPLACE VIEW hp10 AS
06:51:50   2  SELECT
06:51:50   3  pair
06:51:50   4  -- ydate is granular down to the hour:
06:51:50   5  ,ydate
06:51:50   6  ,opn
06:51:50   7  -- Derive an attribute I call "day_hour":
06:51:50   8  ,TO_CHAR(ydate,'D')||'_'||TO_CHAR(ydate,'HH24')dhr
06:51:50   9  -- Get ydate 24 hours in the future:
06:51:50  10  ,LEAD(ydate,24,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) ydate24
06:51:50  11  -- Get closing price 24 hours in the future:
06:51:50  12  ,LEAD(clse,11,NULL)OVER(PARTITION BY pair ORDER BY pair,ydate) clse24
06:51:50  13  FROM hourly
06:51:50  14  WHERE ydate > '2009-01-01'
06:51:50  15  -- Prevent divide by zero:
06:51:50  16  AND opn > 0
06:51:50  17  ORDER BY pair,ydate
06:51:50  18  /

View created.

Elapsed: 00:00:00.05
06:51:50 SQL> 
06:51:50 SQL> -- I derive more attributes:
06:51:50 SQL> CREATE OR REPLACE VIEW hp24 AS
06:51:50   2  SELECT
06:51:50   3  pair
06:51:50   4  ,ydate
06:51:50   5  ,opn
06:51:50   6  ,dhr
06:51:50   7  ,ydate24
06:51:50   8  ,clse24
06:51:50   9  ,(clse24 - opn)/opn npg
06:51:50  10  FROM hp10
06:51:50  11  ORDER BY pair,ydate
06:51:50  12  /

View created.

Elapsed: 00:00:00.04
06:51:50 SQL> 
06:51:50 SQL> --rpt
06:51:50 SQL> SELECT COUNT(ydate)FROM hp10;

COUNT(YDATE)
------------
       69918

Elapsed: 00:00:00.24
06:51:50 SQL> SELECT AVG(ydate24 - ydate), MIN(ydate24 - ydate),MAX(ydate24 - ydate),COUNT(ydate)FROM hp24;

AVG(YDATE24-YDATE) MIN(YDATE24-YDATE) MAX(YDATE24-YDATE) COUNT(YDATE)
------------------ ------------------ ------------------ ------------
	1.39487488		    1		   3.625	69918

Elapsed: 00:00:00.34
06:51:50 SQL> -- I should see no rows WHERE the date difference is less than 24 hours:
06:51:50 SQL> SELECT COUNT(ydate)FROM hp24 WHERE (ydate24 - ydate) < 1;

COUNT(YDATE)
------------
	   0

Elapsed: 00:00:00.27
06:51:51 SQL> 
06:51:51 SQL> -- I should see many rows WHERE the date difference is exactly 24 hours:
06:51:51 SQL> SELECT COUNT(ydate)FROM hp24 WHERE (ydate24 - ydate) = 1;

COUNT(YDATE)
------------
       55248

Elapsed: 00:00:00.26
06:51:51 SQL> 
06:51:51 SQL> -- I should see some rows
06:51:51 SQL> -- WHERE the date difference is greater than 24 hours due to Saturday getting sandwiched between some of the records.
06:51:51 SQL> -- Also if I am missing some rows, counts will appear here:
06:51:51 SQL> SELECT TO_CHAR(ydate,'Day'),MIN(ydate),COUNT(ydate),MAX(ydate)
06:51:51   2  FROM hp24 WHERE (ydate24 - ydate) > 1
06:51:51   3  GROUP BY TO_CHAR(ydate,'Day')
06:51:51   4  ORDER BY COUNT(ydate)
06:51:51   5  /

TO_CHAR(Y MIN(YDATE)	      COUNT(YDATE) MAX(YDATE)
--------- ------------------- ------------ -------------------
Sunday	  2009-05-10 21:00:00		18 2009-05-10 23:00:00
Monday	  2009-05-11 00:00:00		90 2009-08-17 23:00:00
Wednesday 2009-06-24 16:00:00	       162 2010-06-23 18:00:00
Tuesday   2009-07-14 00:00:00	       246 2010-06-22 23:00:00
Thursday  2009-01-01 22:00:00	      1262 2010-11-04 23:00:00
Friday	  2009-01-02 00:00:00	     12748 2010-11-05 21:00:00

6 rows selected.

Elapsed: 00:00:00.30
06:51:51 SQL> 
06:51:51 SQL> -- Now I can aggregate:
06:51:51 SQL> SELECT
06:51:51   2  pair,dhr
06:51:51   3  ,COUNT(npg)	   count_npg
06:51:51   4  ,ROUND(MIN(npg),4)   min_npg
06:51:51   5  ,ROUND(AVG(npg),4)   avg_npg
06:51:51   6  ,ROUND(STDDEV(npg),4)stddev_npg
06:51:51   7  ,ROUND(MAX(npg),4)   max_npg
06:51:51   8  ,ROUND(SUM(npg),4)   sum_npg
06:51:51   9  FROM hdp
06:51:51  10  WHERE (ydate24 - ydate) = 1
06:51:51  11  GROUP BY pair,dhr
06:51:51  12  -- I want more than 1/2 pip / hr which is 12 pips:
06:51:51  13  HAVING AVG(npg) > 0.0012
06:51:51  14  ORDER BY pair,dhr
06:51:51  15  /

PAIR		DHR   COUNT_NPG    MIN_NPG    AVG_NPG STDDEV_NPG    MAX_NPG    SUM_NPG
--------------- ---- ---------- ---------- ---------- ---------- ---------- ----------
aud_usd 	4_05	     95     -.0286	.0013	    .008      .0272	 .1204
aud_usd 	4_19	     94     -.0198	.0012	   .0071      .0168	 .1152
aud_usd 	4_20	     95     -.0187	.0013	   .0069      .0175	 .1254
aud_usd 	4_21	     95     -.0189	.0013	   .0074      .0151	 .1249
aud_usd 	4_22	     95     -.0224	.0017	   .0082      .0201	 .1608
aud_usd 	4_23	     95     -.0223	.0018	   .0082      .0199	  .169
aud_usd 	5_00	     95     -.0236	.0014	   .0079      .0178	 .1345
aud_usd 	5_01	     96     -.0213	.0014	   .0079	.02	 .1385
gbp_usd 	3_12	     94     -.0157	.0012	   .0056       .021	 .1128
usd_cad 	5_13	     96     -.0135	.0012	   .0057      .0182	 .1163

10 rows selected.

Elapsed: 00:00:00.58
06:51:52 SQL> 
06:51:52 SQL> 
06:51:52 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
