
SQL*Plus: Release 11.2.0.1.0 Production on Thu Jan 13 22:48:46 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

22:48:46 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
22:48:46 SQL> 22:48:46 SQL> --
22:48:46 SQL> -- stk10.sql
22:48:46 SQL> --
22:48:46 SQL> 
22:48:46 SQL> -- Creates views and tables for demonstrating SVM.
22:48:46 SQL> 
22:48:46 SQL> -- Get Mon-Thurs
22:48:46 SQL> DROP TABLE stk10p14;

Table dropped.

Elapsed: 00:00:18.85
22:49:05 SQL> 
22:49:05 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.24
22:49:05 SQL> 
22:49:05 SQL> CREATE TABLE stk10p14 COMPRESS AS
22:49:05   2  SELECT
22:49:05   3  tkr
22:49:05   4  ,ydate
22:49:05   5  ,clse
22:49:05   6  FROM di5min_stk
22:49:05   7  WHERE UPPER(tkr)='&1'
22:49:05   8  AND 0+TO_CHAR(ydate,'D')BETWEEN 1 AND 4
22:49:05   9  AND 0+TO_CHAR(ydate,'HH24')BETWEEN 13 AND 20
22:49:05  10  ORDER BY ydate
22:49:05  11  /
old   7: WHERE UPPER(tkr)='&1'
new   7: WHERE UPPER(tkr)='HPQ'

Table created.

Elapsed: 00:00:00.48
22:49:06 SQL> 
22:49:06 SQL> -- Get Fri
22:49:06 SQL> DROP TABLE stk10p5;

Table dropped.

Elapsed: 00:00:00.16
22:49:06 SQL> 
22:49:06 SQL> CREATE TABLE stk10p5 COMPRESS AS
22:49:06   2  SELECT
22:49:06   3  tkr
22:49:06   4  ,ydate
22:49:06   5  ,clse
22:49:06   6  FROM di5min_stk
22:49:06   7  WHERE UPPER(tkr)='&1'
22:49:06   8  AND 0+TO_CHAR(ydate,'D')=5
22:49:06   9  AND 0+TO_CHAR(ydate,'HH24')BETWEEN 13 AND 20
22:49:06  10  ORDER BY ydate
22:49:06  11  /
old   7: WHERE UPPER(tkr)='&1'
new   7: WHERE UPPER(tkr)='HPQ'

Table created.

Elapsed: 00:00:00.11
22:49:06 SQL> 
22:49:06 SQL> -- Get Mon
22:49:06 SQL> DROP TABLE stk10f1;

Table dropped.

Elapsed: 00:00:00.05
22:49:06 SQL> 
22:49:06 SQL> CREATE TABLE stk10f1 COMPRESS AS
22:49:06   2  SELECT
22:49:06   3  tkr
22:49:06   4  ,ydate
22:49:06   5  ,clse
22:49:06   6  FROM di5min_stk
22:49:06   7  WHERE UPPER(tkr)='&1'
22:49:06   8  AND 0+TO_CHAR(ydate,'D')=1
22:49:06   9  AND 0+TO_CHAR(ydate,'HH24')BETWEEN 13 AND 20
22:49:06  10  ORDER BY ydate
22:49:06  11  /
old   7: WHERE UPPER(tkr)='&1'
new   7: WHERE UPPER(tkr)='HPQ'

Table created.

Elapsed: 00:00:00.09
22:49:06 SQL> 
22:49:06 SQL> -- Get Tues - Fri
22:49:06 SQL> DROP TABLE stk10f25;

Table dropped.

Elapsed: 00:00:00.05
22:49:06 SQL> 
22:49:06 SQL> CREATE TABLE stk10f25 COMPRESS AS
22:49:06   2  SELECT
22:49:06   3  tkr
22:49:06   4  ,ydate
22:49:06   5  ,clse
22:49:06   6  FROM di5min_stk
22:49:06   7  WHERE UPPER(tkr)='&1'
22:49:06   8  AND 0+TO_CHAR(ydate,'D')BETWEEN 2 AND 5
22:49:06   9  AND 0+TO_CHAR(ydate,'HH24')BETWEEN 13 AND 20
22:49:06  10  ORDER BY ydate
22:49:06  11  /
old   7: WHERE UPPER(tkr)='&1'
new   7: WHERE UPPER(tkr)='HPQ'

Table created.

Elapsed: 00:00:00.16
22:49:06 SQL> 
22:49:06 SQL> -- Join em
22:49:06 SQL> DROP TABLE stk10pf;

Table dropped.

Elapsed: 00:00:00.05
22:49:06 SQL> 
22:49:06 SQL> -- Deal with m-thr 1st
22:49:06 SQL> CREATE TABLE stk10pf AS
22:49:06   2  SELECT
22:49:06   3  p.tkr
22:49:06   4  ,p.ydate
22:49:06   5  ,p.clse
22:49:06   6  ,f.clse clse2
22:49:06   7  FROM stk10p14 p, stk10f25 f
22:49:06   8  WHERE p.ydate + 1 = f.ydate
22:49:06   9  /

Table created.

Elapsed: 00:00:00.08
22:49:06 SQL> 
22:49:06 SQL> -- Deal with Fri (day 5 joined with day 1)
22:49:06 SQL> INSERT INTO stk10pf(tkr,ydate,clse,clse2)
22:49:06   2  SELECT
22:49:06   3  p.tkr
22:49:06   4  ,p.ydate
22:49:06   5  ,p.clse
22:49:06   6  ,f.clse clse2
22:49:06   7  FROM stk10p5 p, stk10f1 f
22:49:06   8  WHERE p.ydate + 3 = f.ydate
22:49:06   9  /

0 rows created.

Elapsed: 00:00:00.01
22:49:06 SQL> 
22:49:06 SQL> -- rpt
22:49:06 SQL> select count(*)from stk10pf;

  COUNT(*)
----------
     14655

Elapsed: 00:00:00.01
22:49:06 SQL> 
22:49:06 SQL> DROP VIEW stk10;
DROP VIEW stk10
*
ERROR at line 1:
ORA-00942: table or view does not exist


Elapsed: 00:00:00.09
22:49:06 SQL> 
22:49:06 SQL> DROP TABLE stk10;

Table dropped.

Elapsed: 00:00:00.16
22:49:07 SQL> 
22:49:07 SQL> CREATE TABLE stk10 COMPRESS AS
22:49:07   2  SELECT
22:49:07   3  tkr
22:49:07   4  ,ydate
22:49:07   5  ,tkr||ydate tkrdate
22:49:07   6  ,clse
22:49:07   7  ,clse2
22:49:07   8  ,rownum rnum -- acts as t in my time-series
22:49:07   9  -- Derive some attributes from clse.
22:49:07  10  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*2 PRECEDING AND CURRENT ROW)min2
22:49:07  11  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*3 PRECEDING AND CURRENT ROW)min3
22:49:07  12  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*4 PRECEDING AND CURRENT ROW)min4
22:49:07  13  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*5 PRECEDING AND CURRENT ROW)min5
22:49:07  14  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*6 PRECEDING AND CURRENT ROW)min6
22:49:07  15  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*7 PRECEDING AND CURRENT ROW)min7
22:49:07  16  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*8 PRECEDING AND CURRENT ROW)min8
22:49:07  17  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*2 PRECEDING AND CURRENT ROW)avg2
22:49:07  18  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*3 PRECEDING AND CURRENT ROW)avg3
22:49:07  19  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*4 PRECEDING AND CURRENT ROW)avg4
22:49:07  20  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*5 PRECEDING AND CURRENT ROW)avg5
22:49:07  21  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*6 PRECEDING AND CURRENT ROW)avg6
22:49:07  22  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*7 PRECEDING AND CURRENT ROW)avg7
22:49:07  23  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*8 PRECEDING AND CURRENT ROW)avg8
22:49:07  24  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*2 PRECEDING AND CURRENT ROW)max2
22:49:07  25  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*3 PRECEDING AND CURRENT ROW)max3
22:49:07  26  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*4 PRECEDING AND CURRENT ROW)max4
22:49:07  27  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*5 PRECEDING AND CURRENT ROW)max5
22:49:07  28  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*6 PRECEDING AND CURRENT ROW)max6
22:49:07  29  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*7 PRECEDING AND CURRENT ROW)max7
22:49:07  30  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*8 PRECEDING AND CURRENT ROW)max8
22:49:07  31  FROM		       stk10pf
22:49:07  32  WHERE UPPER(tkr)='&1'
22:49:07  33  AND 0+TO_CHAR(ydate,'D')BETWEEN 1 AND 5
22:49:07  34  AND 0+TO_CHAR(ydate,'HH24')BETWEEN 13 AND 20
22:49:07  35  ORDER BY ydate
22:49:07  36  /
old  32: WHERE UPPER(tkr)='&1'
new  32: WHERE UPPER(tkr)='HPQ'

Table created.

Elapsed: 00:00:00.67
22:49:07 SQL> 
22:49:07 SQL> ANALYZE TABLE stk10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:00.44
22:49:08 SQL> 
22:49:08 SQL> -- rpt
22:49:08 SQL> 
22:49:08 SQL> SELECT
22:49:08   2  tkr
22:49:08   3  ,COUNT(tkr)
22:49:08   4  ,MIN(clse),MAX(clse)
22:49:08   5  ,MIN(avg4),MAX(avg4)
22:49:08   6  ,MIN(ydate),MAX(ydate)
22:49:08   7  FROM stk10
22:49:08   8  GROUP BY tkr
22:49:08   9  /

TKR	COUNT(TKR)  MIN(CLSE)  MAX(CLSE)  MIN(AVG4)  MAX(AVG4) MIN(YDATE)	   MAX(YDATE)
------- ---------- ---------- ---------- ---------- ---------- ------------------- -------------------
HPQ	     14655	37.99	    54.6 38.1093878 54.5179592 2009-10-28 18:10:00 2011-01-12 20:55:00

Elapsed: 00:00:00.03
22:49:08 SQL> 
22:49:08 SQL> -- Derive trend, clse-relations, moving correlation of clse, and date related params:
22:49:08 SQL> DROP TABLE stk12;

Table dropped.

Elapsed: 00:00:00.10
22:49:08 SQL> CREATE TABLE stk12 COMPRESS AS
22:49:08   2  SELECT
22:49:08   3  tkr
22:49:08   4  ,ydate
22:49:08   5  ,tkrdate
22:49:08   6  ,clse
22:49:08   7  ,rnum
22:49:08   8  -- g4 is important. I want to predict g4:
22:49:08   9  ,clse2 - clse g4
22:49:08  10  ,SIGN(avg4 - LAG(avg4,2,NULL)OVER(PARTITION BY tkr ORDER BY ydate))trend
22:49:08  11  -- I want more attributes from the ones I derived above:
22:49:08  12  -- clse relation to moving-min
22:49:08  13  ,clse-min2  cm2
22:49:08  14  ,clse-min3  cm3
22:49:08  15  ,clse-min4  cm4
22:49:08  16  ,clse-min5  cm5
22:49:08  17  ,clse-min6  cm6
22:49:08  18  ,clse-min7  cm7
22:49:08  19  ,clse-min8  cm8
22:49:08  20  -- clse relation to moving-avg
22:49:08  21  ,clse-avg2  ca2
22:49:08  22  ,clse-avg3  ca3
22:49:08  23  ,clse-avg4  ca4
22:49:08  24  ,clse-avg5  ca5
22:49:08  25  ,clse-avg6  ca6
22:49:08  26  ,clse-avg7  ca7
22:49:08  27  ,clse-avg8  ca8
22:49:08  28  -- clse relation to moving-max
22:49:08  29  ,clse-max2  cx2
22:49:08  30  ,clse-max3  cx3
22:49:08  31  ,clse-max4  cx4
22:49:08  32  ,clse-max5  cx5
22:49:08  33  ,clse-max6  cx6
22:49:08  34  ,clse-max7  cx7
22:49:08  35  ,clse-max8  cx8
22:49:08  36  -- Derive date related attributes:
22:49:08  37  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:49:08  38  ,0+TO_CHAR(ydate,'D')d
22:49:08  39  ,0+TO_CHAR(ydate,'W')w
22:49:08  40  -- mpm stands for minutes-past-midnight:
22:49:08  41  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:49:08  42  -- mph stands for minutes-past-hour:
22:49:08  43  ,0+TO_CHAR(ydate,'MI')mph
22:49:08  44  FROM stk10
22:49:08  45  ORDER BY ydate
22:49:08  46  /

Table created.

Elapsed: 00:00:00.38
22:49:08 SQL> 
22:49:08 SQL> -- rpt
22:49:08 SQL> 
22:49:08 SQL> SELECT
22:49:08   2  tkr
22:49:08   3  ,COUNT(tkr)
22:49:08   4  ,MIN(clse),MAX(clse)
22:49:08   5  ,MIN(ydate),MAX(ydate)
22:49:08   6  FROM stk12
22:49:08   7  GROUP BY tkr
22:49:08   8  /

TKR	COUNT(TKR)  MIN(CLSE)  MAX(CLSE) MIN(YDATE)	     MAX(YDATE)
------- ---------- ---------- ---------- ------------------- -------------------
HPQ	     14655	37.99	    54.6 2009-10-28 18:10:00 2011-01-12 20:55:00

Elapsed: 00:00:00.03
22:49:08 SQL> 
22:49:08 SQL> -- Prepare for derivation of NTILE based parameters.
22:49:08 SQL> -- Also derive the "trend" parameter:
22:49:08 SQL> 
22:49:08 SQL> DROP TABLE stk14;

Table dropped.

Elapsed: 00:00:00.35
22:49:09 SQL> CREATE TABLE stk14 COMPRESS AS
22:49:09   2  SELECT
22:49:09   3  tkr
22:49:09   4  ,ydate
22:49:09   5  ,tkrdate
22:49:09   6  ,clse
22:49:09   7  ,g4
22:49:09   8  ,CASE WHEN g4 IS NULL THEN NULL WHEN g4/clse >	0.5/100 THEN 'up' ELSE 'nup' END gatt
22:49:09   9  ,CASE WHEN g4 IS NULL THEN NULL WHEN g4/clse < -0.5/100 THEN 'up' ELSE 'nup' END gattn
22:49:09  10  ,CASE WHEN trend IS NULL THEN 1
22:49:09  11  	    WHEN trend =0      THEN 1
22:49:09  12  	    ELSE trend END trend
22:49:09  13  ,cm2
22:49:09  14  ,cm3
22:49:09  15  ,cm4
22:49:09  16  ,cm5
22:49:09  17  ,cm6
22:49:09  18  ,cm7
22:49:09  19  ,cm8
22:49:09  20  ,ca2
22:49:09  21  ,ca3
22:49:09  22  ,ca4
22:49:09  23  ,ca5
22:49:09  24  ,ca6
22:49:09  25  ,ca7
22:49:09  26  ,ca8
22:49:09  27  ,cx2
22:49:09  28  ,cx3
22:49:09  29  ,cx4
22:49:09  30  ,cx5
22:49:09  31  ,cx6
22:49:09  32  ,cx7
22:49:09  33  ,cx8
22:49:09  34  ,hh
22:49:09  35  ,d
22:49:09  36  ,w
22:49:09  37  ,mpm
22:49:09  38  ,mph
22:49:09  39  FROM stk12
22:49:09  40  -- Guard against divide by 0:
22:49:09  41  WHERE clse > 0
22:49:09  42  ORDER BY ydate
22:49:09  43  /

Table created.

Elapsed: 00:00:00.22
22:49:09 SQL> 
22:49:09 SQL> -- rpt
22:49:09 SQL> 
22:49:09 SQL> SELECT
22:49:09   2  tkr
22:49:09   3  ,trend
22:49:09   4  ,gatt
22:49:09   5  ,COUNT(tkr)
22:49:09   6  ,AVG(g4)
22:49:09   7  FROM stk14
22:49:09   8  GROUP BY tkr,trend,gatt
22:49:09   9  ORDER BY tkr,trend,gatt
22:49:09  10  /

TKR	     TREND GAT COUNT(TKR)    AVG(G4)
------- ---------- --- ---------- ----------
HPQ		-1 nup	     4310  -.3703109
HPQ		-1 up	     2344 .626655823
HPQ		 1 nup	     5160 -.33230378
HPQ		 1 up	     2841 .601477913

Elapsed: 00:00:00.02
22:49:09 SQL> 
22:49:09 SQL> -- Derive NTILE based params:
22:49:09 SQL> 
22:49:09 SQL> DROP TABLE stk16;

Table dropped.

Elapsed: 00:00:00.24
22:49:09 SQL> CREATE TABLE stk16 COMPRESS AS
22:49:09   2  SELECT
22:49:09   3  tkr
22:49:09   4  ,ydate
22:49:09   5  ,tkrdate
22:49:09   6  ,clse
22:49:09   7  ,g4
22:49:09   8  ,gatt
22:49:09   9  ,gattn
22:49:09  10  ,trend
22:49:09  11  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm2)att00
22:49:09  12  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm3)att01
22:49:09  13  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm4)att02
22:49:09  14  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm5)att03
22:49:09  15  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm6)att04
22:49:09  16  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm7)att05
22:49:09  17  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm8)att06
22:49:09  18  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca2)att07
22:49:09  19  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca3)att08
22:49:09  20  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca4)att09
22:49:09  21  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca5)att10
22:49:09  22  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca6)att11
22:49:09  23  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca7)att12
22:49:09  24  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca8)att13
22:49:09  25  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx2)att14
22:49:09  26  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx3)att15
22:49:09  27  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx4)att16
22:49:09  28  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx5)att17
22:49:09  29  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx6)att18
22:49:09  30  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx7)att19
22:49:09  31  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx8)att20
22:49:09  32  ,hh  att21
22:49:09  33  ,d   att22
22:49:09  34  ,w   att23
22:49:09  35  ,mpm att24
22:49:09  36  ,mph att25
22:49:09  37  ,trend att26
22:49:09  38  FROM stk14
22:49:09  39  ORDER BY ydate
22:49:09  40  /

Table created.

Elapsed: 00:00:01.69
22:49:11 SQL> 
22:49:11 SQL> -- rpt
22:49:11 SQL> 
22:49:11 SQL> SELECT
22:49:11   2  tkr
22:49:11   3  ,trend
22:49:11   4  ,gatt
22:49:11   5  ,COUNT(tkr)
22:49:11   6  ,AVG(g4)
22:49:11   7  FROM stk16
22:49:11   8  GROUP BY tkr,trend,gatt
22:49:11   9  ORDER BY tkr,trend,gatt
22:49:11  10  /

TKR	     TREND GAT COUNT(TKR)    AVG(G4)
------- ---------- --- ---------- ----------
HPQ		-1 nup	     4310  -.3703109
HPQ		-1 up	     2344 .626655823
HPQ		 1 nup	     5160 -.33230378
HPQ		 1 up	     2841 .601477913

Elapsed: 00:00:00.03
22:49:11 SQL> 
22:49:11 SQL> -- Now I derive goodness attributes:
22:49:11 SQL> 
22:49:11 SQL> DROP TABLE stk_ms;

Table dropped.

Elapsed: 00:00:00.31
22:49:11 SQL> CREATE TABLE stk_ms COMPRESS AS
22:49:11   2  SELECT
22:49:11   3  tkr
22:49:11   4  ,ydate
22:49:11   5  ,tkrdate
22:49:11   6  ,trend
22:49:11   7  ,g4
22:49:11   8  ,gatt
22:49:11   9  ,gattn
22:49:11  10  ,SUM(g4)OVER(PARTITION BY trend,att00 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g00
22:49:11  11  ,SUM(g4)OVER(PARTITION BY trend,att01 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g01
22:49:11  12  ,SUM(g4)OVER(PARTITION BY trend,att02 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g02
22:49:11  13  ,SUM(g4)OVER(PARTITION BY trend,att03 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g03
22:49:11  14  ,SUM(g4)OVER(PARTITION BY trend,att04 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g04
22:49:11  15  ,SUM(g4)OVER(PARTITION BY trend,att05 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g05
22:49:11  16  ,SUM(g4)OVER(PARTITION BY trend,att06 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g06
22:49:11  17  ,SUM(g4)OVER(PARTITION BY trend,att07 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g07
22:49:11  18  ,SUM(g4)OVER(PARTITION BY trend,att08 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g08
22:49:11  19  ,SUM(g4)OVER(PARTITION BY trend,att09 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g09
22:49:11  20  ,SUM(g4)OVER(PARTITION BY trend,att10 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g10
22:49:11  21  ,SUM(g4)OVER(PARTITION BY trend,att11 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g11
22:49:11  22  ,SUM(g4)OVER(PARTITION BY trend,att12 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g12
22:49:11  23  ,SUM(g4)OVER(PARTITION BY trend,att13 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g13
22:49:11  24  ,SUM(g4)OVER(PARTITION BY trend,att14 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g14
22:49:11  25  ,SUM(g4)OVER(PARTITION BY trend,att15 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g15
22:49:11  26  ,SUM(g4)OVER(PARTITION BY trend,att16 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g16
22:49:11  27  ,SUM(g4)OVER(PARTITION BY trend,att17 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g17
22:49:11  28  ,SUM(g4)OVER(PARTITION BY trend,att18 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g18
22:49:11  29  ,SUM(g4)OVER(PARTITION BY trend,att19 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g19
22:49:11  30  ,SUM(g4)OVER(PARTITION BY trend,att20 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g20
22:49:11  31  ,SUM(g4)OVER(PARTITION BY trend,att21 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g21
22:49:11  32  ,SUM(g4)OVER(PARTITION BY trend,att22 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g22
22:49:11  33  ,SUM(g4)OVER(PARTITION BY trend,att23 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g23
22:49:11  34  ,SUM(g4)OVER(PARTITION BY trend,att24 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g24
22:49:11  35  ,SUM(g4)OVER(PARTITION BY trend,att25 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g25
22:49:11  36  ,SUM(g4)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g26
22:49:11  37  -- att26 is trend which is a powerful attribute so I derive 3 more goodness attributes from trend:
22:49:11  38  ,SUM(g4)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 12*40 PRECEDING AND CURRENT ROW)g27
22:49:11  39  ,SUM(g4)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)g28
22:49:11  40  ,SUM(g4)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)g29
22:49:11  41  FROM stk16
22:49:11  42  /

Table created.

Elapsed: 00:00:02.37
22:49:14 SQL> 
22:49:14 SQL> -- rpt
22:49:14 SQL> 
22:49:14 SQL> SELECT
22:49:14   2  tkr
22:49:14   3  ,trend
22:49:14   4  ,gatt
22:49:14   5  ,COUNT(tkr)
22:49:14   6  ,AVG(g4)
22:49:14   7  FROM stk_ms
22:49:14   8  GROUP BY tkr,trend,gatt
22:49:14   9  ORDER BY tkr,trend,gatt
22:49:14  10  /

TKR	     TREND GAT COUNT(TKR)    AVG(G4)
------- ---------- --- ---------- ----------
HPQ		-1 nup	     4310  -.3703109
HPQ		-1 up	     2344 .626655823
HPQ		 1 nup	     5160 -.33230378
HPQ		 1 up	     2841 .601477913

Elapsed: 00:00:00.03
22:49:14 SQL> 
22:49:14 SQL> SELECT
22:49:14   2  tkr
22:49:14   3  ,COUNT(tkr)
22:49:14   4  ,MIN(ydate),MAX(ydate)
22:49:14   5  FROM stk_ms
22:49:14   6  GROUP BY tkr
22:49:14   7  /

TKR	COUNT(TKR) MIN(YDATE)	       MAX(YDATE)
------- ---------- ------------------- -------------------
HPQ	     14655 2009-10-28 18:10:00 2011-01-12 20:55:00

Elapsed: 00:00:00.01
22:49:14 SQL> 
22:49:14 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
