
SQL*Plus: Release 11.2.0.1.0 Production on Fri Jan 14 03:59:40 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

03:59:40 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
03:59:40 SQL> 03:59:40 SQL> --
03:59:40 SQL> -- stk10.sql
03:59:40 SQL> --
03:59:40 SQL> 
03:59:40 SQL> -- Creates views and tables for demonstrating SVM.
03:59:40 SQL> 
03:59:40 SQL> -- Get Mon-Thurs
03:59:40 SQL> DROP TABLE stk10p25;
DROP TABLE stk10p25
           *
ERROR at line 1:
ORA-00942: table or view does not exist


Elapsed: 00:00:00.19
03:59:40 SQL> 
03:59:40 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.03
03:59:40 SQL> 
03:59:40 SQL> CREATE TABLE stk10p25 COMPRESS AS
03:59:40   2  SELECT
03:59:40   3  tkr
03:59:40   4  ,ydate
03:59:40   5  ,clse
03:59:40   6  FROM di5min_stk
03:59:40   7  WHERE UPPER(tkr)='&1'
03:59:40   8  AND 0+TO_CHAR(ydate,'D')BETWEEN 2 AND 5
03:59:40   9  AND 0+TO_CHAR(ydate,'HH24')BETWEEN 13 AND 20
03:59:40  10  ORDER BY ydate
03:59:40  11  /
old   7: WHERE UPPER(tkr)='&1'
new   7: WHERE UPPER(tkr)='IBM'

Table created.

Elapsed: 00:00:00.38
03:59:41 SQL> 
03:59:41 SQL> -- Get Fri
03:59:41 SQL> DROP TABLE stk10p6;
DROP TABLE stk10p6
           *
ERROR at line 1:
ORA-00942: table or view does not exist


Elapsed: 00:00:00.02
03:59:41 SQL> 
03:59:41 SQL> CREATE TABLE stk10p6 COMPRESS AS
03:59:41   2  SELECT
03:59:41   3  tkr
03:59:41   4  ,ydate
03:59:41   5  ,clse
03:59:41   6  FROM di5min_stk
03:59:41   7  WHERE UPPER(tkr)='&1'
03:59:41   8  AND 0+TO_CHAR(ydate,'D')=6
03:59:41   9  AND 0+TO_CHAR(ydate,'HH24')BETWEEN 13 AND 20
03:59:41  10  ORDER BY ydate
03:59:41  11  /
old   7: WHERE UPPER(tkr)='&1'
new   7: WHERE UPPER(tkr)='IBM'

Table created.

Elapsed: 00:00:00.13
03:59:41 SQL> 
03:59:41 SQL> -- Get Mon
03:59:41 SQL> DROP TABLE stk10f2;
DROP TABLE stk10f2
           *
ERROR at line 1:
ORA-00942: table or view does not exist


Elapsed: 00:00:00.02
03:59:41 SQL> 
03:59:41 SQL> CREATE TABLE stk10f2 COMPRESS AS
03:59:41   2  SELECT
03:59:41   3  tkr
03:59:41   4  ,ydate
03:59:41   5  ,clse
03:59:41   6  FROM di5min_stk
03:59:41   7  WHERE UPPER(tkr)='&1'
03:59:41   8  AND 0+TO_CHAR(ydate,'D')=2
03:59:41   9  AND 0+TO_CHAR(ydate,'HH24')BETWEEN 13 AND 20
03:59:41  10  ORDER BY ydate
03:59:41  11  /
old   7: WHERE UPPER(tkr)='&1'
new   7: WHERE UPPER(tkr)='IBM'

Table created.

Elapsed: 00:00:00.10
03:59:41 SQL> 
03:59:41 SQL> -- Get Tues - Fri
03:59:41 SQL> DROP TABLE stk10f36;
DROP TABLE stk10f36
           *
ERROR at line 1:
ORA-00942: table or view does not exist


Elapsed: 00:00:00.02
03:59:41 SQL> 
03:59:41 SQL> CREATE TABLE stk10f36 COMPRESS AS
03:59:41   2  SELECT
03:59:41   3  tkr
03:59:41   4  ,ydate
03:59:41   5  ,clse
03:59:41   6  FROM di5min_stk
03:59:41   7  WHERE UPPER(tkr)='&1'
03:59:41   8  AND 0+TO_CHAR(ydate,'D')BETWEEN 3 AND 6
03:59:41   9  AND 0+TO_CHAR(ydate,'HH24')BETWEEN 13 AND 20
03:59:41  10  ORDER BY ydate
03:59:41  11  /
old   7: WHERE UPPER(tkr)='&1'
new   7: WHERE UPPER(tkr)='IBM'

Table created.

Elapsed: 00:00:00.16
03:59:41 SQL> 
03:59:41 SQL> -- Join em
03:59:41 SQL> DROP TABLE stk10pf;

Table dropped.

Elapsed: 00:00:00.10
03:59:41 SQL> 
03:59:41 SQL> -- Deal with m-thr 1st
03:59:41 SQL> CREATE TABLE stk10pf AS
03:59:41   2  SELECT
03:59:41   3  p.tkr
03:59:41   4  ,p.ydate
03:59:41   5  ,p.clse
03:59:41   6  ,f.clse clse2
03:59:41   7  FROM stk10p25 p, stk10f36 f
03:59:41   8  WHERE p.ydate + 1 = f.ydate
03:59:41   9  /

Table created.

Elapsed: 00:00:00.09
03:59:41 SQL> 
03:59:41 SQL> -- Deal with Fri (day 5 joined with day 1)
03:59:41 SQL> INSERT INTO stk10pf(tkr,ydate,clse,clse2)
03:59:41   2  SELECT
03:59:41   3  p.tkr
03:59:41   4  ,p.ydate
03:59:41   5  ,p.clse
03:59:41   6  ,f.clse clse2
03:59:41   7  FROM stk10p6 p, stk10f2 f
03:59:41   8  WHERE p.ydate + 3 = f.ydate
03:59:41   9  /

4874 rows created.

Elapsed: 00:00:00.02
03:59:41 SQL> 
03:59:41 SQL> -- rpt
03:59:41 SQL> select
03:59:41   2  0+TO_CHAR(ydate,'D')daynum
03:59:41   3  ,count(*)
03:59:41   4  from stk10pf
03:59:41   5  GROUP BY 0+TO_CHAR(ydate,'D')
03:59:41   6  ORDER BY 0+TO_CHAR(ydate,'D')
03:59:41   7  /

    DAYNUM   COUNT(*)
---------- ----------
	 2	 4882
	 3	 4873
	 4	 4891
	 5	 4932
	 6	 4874

Elapsed: 00:00:00.02
03:59:41 SQL> 
03:59:41 SQL> DROP VIEW stk10;
DROP VIEW stk10
*
ERROR at line 1:
ORA-00942: table or view does not exist


Elapsed: 00:00:00.01
03:59:41 SQL> 
03:59:41 SQL> DROP TABLE stk10;

Table dropped.

Elapsed: 00:00:00.14
03:59:42 SQL> 
03:59:42 SQL> CREATE TABLE stk10 COMPRESS AS
03:59:42   2  SELECT
03:59:42   3  tkr
03:59:42   4  ,ydate
03:59:42   5  ,tkr||ydate tkrdate
03:59:42   6  ,clse
03:59:42   7  ,clse2
03:59:42   8  ,rownum rnum -- acts as t in my time-series
03:59:42   9  -- Derive some attributes from clse.
03:59:42  10  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*2 PRECEDING AND CURRENT ROW)min2
03:59:42  11  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*3 PRECEDING AND CURRENT ROW)min3
03:59:42  12  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*4 PRECEDING AND CURRENT ROW)min4
03:59:42  13  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*5 PRECEDING AND CURRENT ROW)min5
03:59:42  14  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*6 PRECEDING AND CURRENT ROW)min6
03:59:42  15  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*7 PRECEDING AND CURRENT ROW)min7
03:59:42  16  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*8 PRECEDING AND CURRENT ROW)min8
03:59:42  17  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*2 PRECEDING AND CURRENT ROW)avg2
03:59:42  18  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*3 PRECEDING AND CURRENT ROW)avg3
03:59:42  19  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*4 PRECEDING AND CURRENT ROW)avg4
03:59:42  20  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*5 PRECEDING AND CURRENT ROW)avg5
03:59:42  21  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*6 PRECEDING AND CURRENT ROW)avg6
03:59:42  22  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*7 PRECEDING AND CURRENT ROW)avg7
03:59:42  23  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*8 PRECEDING AND CURRENT ROW)avg8
03:59:42  24  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*2 PRECEDING AND CURRENT ROW)max2
03:59:42  25  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*3 PRECEDING AND CURRENT ROW)max3
03:59:42  26  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*4 PRECEDING AND CURRENT ROW)max4
03:59:42  27  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*5 PRECEDING AND CURRENT ROW)max5
03:59:42  28  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*6 PRECEDING AND CURRENT ROW)max6
03:59:42  29  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*7 PRECEDING AND CURRENT ROW)max7
03:59:42  30  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 12*8 PRECEDING AND CURRENT ROW)max8
03:59:42  31  FROM stk10pf
03:59:42  32  WHERE UPPER(tkr)='&1'
03:59:42  33  AND 0+TO_CHAR(ydate,'D')BETWEEN 2 AND 6
03:59:42  34  AND 0+TO_CHAR(ydate,'HH24')BETWEEN 13 AND 20
03:59:42  35  ORDER BY ydate
03:59:42  36  /
old  32: WHERE UPPER(tkr)='&1'
new  32: WHERE UPPER(tkr)='IBM'

Table created.

Elapsed: 00:00:01.07
03:59:43 SQL> 
03:59:43 SQL> ANALYZE TABLE stk10 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:01.08
03:59:44 SQL> 
03:59:44 SQL> -- rpt
03:59:44 SQL> 
03:59:44 SQL> SELECT
03:59:44   2  tkr
03:59:44   3  ,COUNT(tkr)
03:59:44   4  ,MIN(clse),MAX(clse)
03:59:44   5  ,MIN(avg4),MAX(avg4)
03:59:44   6  ,MIN(ydate),MAX(ydate)
03:59:44   7  FROM stk10
03:59:44   8  GROUP BY tkr
03:59:44   9  /

TKR	COUNT(TKR)  MIN(CLSE)  MAX(CLSE)  MIN(AVG4)  MAX(AVG4) MIN(YDATE)	   MAX(YDATE)
------- ---------- ---------- ---------- ---------- ---------- ------------------- -------------------
IBM	     24452     119.59	  149.27 120.240306 149.097245 2009-10-28 18:10:00 2011-01-12 20:55:00

Elapsed: 00:00:00.03
03:59:44 SQL> 
03:59:44 SQL> -- Derive trend, clse-relations, moving correlation of clse, and date related params:
03:59:44 SQL> DROP TABLE stk12;

Table dropped.

Elapsed: 00:00:00.07
03:59:44 SQL> CREATE TABLE stk12 COMPRESS AS
03:59:44   2  SELECT
03:59:44   3  tkr
03:59:44   4  ,ydate
03:59:44   5  ,tkrdate
03:59:44   6  ,clse
03:59:44   7  ,rnum
03:59:44   8  -- g4 is important. I want to predict g4:
03:59:44   9  ,clse2 - clse g4
03:59:44  10  ,SIGN(avg4 - LAG(avg4,2,NULL)OVER(PARTITION BY tkr ORDER BY ydate))trend
03:59:44  11  -- I want more attributes from the ones I derived above:
03:59:44  12  -- clse relation to moving-min
03:59:44  13  ,clse-min2  cm2
03:59:44  14  ,clse-min3  cm3
03:59:44  15  ,clse-min4  cm4
03:59:44  16  ,clse-min5  cm5
03:59:44  17  ,clse-min6  cm6
03:59:44  18  ,clse-min7  cm7
03:59:44  19  ,clse-min8  cm8
03:59:44  20  -- clse relation to moving-avg
03:59:44  21  ,clse-avg2  ca2
03:59:44  22  ,clse-avg3  ca3
03:59:44  23  ,clse-avg4  ca4
03:59:44  24  ,clse-avg5  ca5
03:59:44  25  ,clse-avg6  ca6
03:59:44  26  ,clse-avg7  ca7
03:59:44  27  ,clse-avg8  ca8
03:59:44  28  -- clse relation to moving-max
03:59:44  29  ,clse-max2  cx2
03:59:44  30  ,clse-max3  cx3
03:59:44  31  ,clse-max4  cx4
03:59:44  32  ,clse-max5  cx5
03:59:44  33  ,clse-max6  cx6
03:59:44  34  ,clse-max7  cx7
03:59:44  35  ,clse-max8  cx8
03:59:44  36  -- Derive date related attributes:
03:59:44  37  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
03:59:44  38  ,0+TO_CHAR(ydate,'D')d
03:59:44  39  ,0+TO_CHAR(ydate,'W')w
03:59:44  40  -- mpm stands for minutes-past-midnight:
03:59:44  41  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
03:59:44  42  -- mph stands for minutes-past-hour:
03:59:44  43  ,0+TO_CHAR(ydate,'MI')mph
03:59:44  44  FROM stk10
03:59:44  45  ORDER BY ydate
03:59:44  46  /

Table created.

Elapsed: 00:00:00.59
03:59:44 SQL> 
03:59:44 SQL> -- rpt
03:59:44 SQL> 
03:59:44 SQL> SELECT
03:59:44   2  tkr
03:59:44   3  ,COUNT(tkr)
03:59:44   4  ,MIN(clse),MAX(clse)
03:59:44   5  ,MIN(ydate),MAX(ydate)
03:59:44   6  FROM stk12
03:59:44   7  GROUP BY tkr
03:59:44   8  /

TKR	COUNT(TKR)  MIN(CLSE)  MAX(CLSE) MIN(YDATE)	     MAX(YDATE)
------- ---------- ---------- ---------- ------------------- -------------------
IBM	     24452     119.59	  149.27 2009-10-28 18:10:00 2011-01-12 20:55:00

Elapsed: 00:00:00.05
03:59:44 SQL> 
03:59:44 SQL> -- Prepare for derivation of NTILE based parameters.
03:59:44 SQL> -- Also derive the "trend" parameter:
03:59:44 SQL> 
03:59:44 SQL> DROP TABLE stk14;

Table dropped.

Elapsed: 00:00:00.32
03:59:45 SQL> CREATE TABLE stk14 COMPRESS AS
03:59:45   2  SELECT
03:59:45   3  tkr
03:59:45   4  ,ydate
03:59:45   5  ,tkrdate
03:59:45   6  ,clse
03:59:45   7  ,g4
03:59:45   8  ,CASE WHEN g4 IS NULL THEN NULL WHEN g4/clse >	0.5/100 THEN 'up' ELSE 'nup' END gatt
03:59:45   9  ,CASE WHEN g4 IS NULL THEN NULL WHEN g4/clse < -0.5/100 THEN 'up' ELSE 'nup' END gattn
03:59:45  10  ,CASE WHEN trend IS NULL THEN 1
03:59:45  11  	    WHEN trend =0      THEN 1
03:59:45  12  	    ELSE trend END trend
03:59:45  13  ,cm2
03:59:45  14  ,cm3
03:59:45  15  ,cm4
03:59:45  16  ,cm5
03:59:45  17  ,cm6
03:59:45  18  ,cm7
03:59:45  19  ,cm8
03:59:45  20  ,ca2
03:59:45  21  ,ca3
03:59:45  22  ,ca4
03:59:45  23  ,ca5
03:59:45  24  ,ca6
03:59:45  25  ,ca7
03:59:45  26  ,ca8
03:59:45  27  ,cx2
03:59:45  28  ,cx3
03:59:45  29  ,cx4
03:59:45  30  ,cx5
03:59:45  31  ,cx6
03:59:45  32  ,cx7
03:59:45  33  ,cx8
03:59:45  34  ,hh
03:59:45  35  ,d
03:59:45  36  ,w
03:59:45  37  ,mpm
03:59:45  38  ,mph
03:59:45  39  FROM stk12
03:59:45  40  -- Guard against divide by 0:
03:59:45  41  WHERE clse > 0
03:59:45  42  ORDER BY ydate
03:59:45  43  /

Table created.

Elapsed: 00:00:00.41
03:59:45 SQL> 
03:59:45 SQL> -- rpt
03:59:45 SQL> 
03:59:45 SQL> SELECT
03:59:45   2  tkr
03:59:45   3  ,trend
03:59:45   4  ,gatt
03:59:45   5  ,COUNT(tkr)
03:59:45   6  ,AVG(g4)
03:59:45   7  FROM stk14
03:59:45   8  GROUP BY tkr,trend,gatt
03:59:45   9  ORDER BY tkr,trend,gatt
03:59:45  10  /

TKR	     TREND GAT COUNT(TKR)    AVG(G4)
------- ---------- --- ---------- ----------
IBM		-1 nup	     7341 -.48593703
IBM		-1 up	     3905 1.52950448
IBM		 1 nup	     9561 -.53885015
IBM		 1 up	     3645 1.34731413

Elapsed: 00:00:00.04
03:59:45 SQL> 
03:59:45 SQL> -- Derive NTILE based params:
03:59:45 SQL> 
03:59:45 SQL> DROP TABLE stk16;

Table dropped.

Elapsed: 00:00:00.33
03:59:46 SQL> CREATE TABLE stk16 COMPRESS AS
03:59:46   2  SELECT
03:59:46   3  tkr
03:59:46   4  ,ydate
03:59:46   5  ,tkrdate
03:59:46   6  ,clse
03:59:46   7  ,g4
03:59:46   8  ,gatt
03:59:46   9  ,gattn
03:59:46  10  ,trend
03:59:46  11  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm2)att00
03:59:46  12  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm3)att01
03:59:46  13  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm4)att02
03:59:46  14  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm5)att03
03:59:46  15  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm6)att04
03:59:46  16  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm7)att05
03:59:46  17  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm8)att06
03:59:46  18  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca2)att07
03:59:46  19  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca3)att08
03:59:46  20  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca4)att09
03:59:46  21  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca5)att10
03:59:46  22  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca6)att11
03:59:46  23  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca7)att12
03:59:46  24  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca8)att13
03:59:46  25  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx2)att14
03:59:46  26  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx3)att15
03:59:46  27  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx4)att16
03:59:46  28  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx5)att17
03:59:46  29  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx6)att18
03:59:46  30  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx7)att19
03:59:46  31  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx8)att20
03:59:46  32  ,hh  att21
03:59:46  33  ,d   att22
03:59:46  34  ,w   att23
03:59:46  35  ,mpm att24
03:59:46  36  ,mph att25
03:59:46  37  ,trend att26
03:59:46  38  FROM stk14
03:59:46  39  ORDER BY ydate
03:59:46  40  /

Table created.

Elapsed: 00:00:02.76
03:59:48 SQL> 
03:59:48 SQL> -- rpt
03:59:48 SQL> 
03:59:48 SQL> SELECT
03:59:48   2  tkr
03:59:48   3  ,trend
03:59:48   4  ,gatt
03:59:48   5  ,COUNT(tkr)
03:59:48   6  ,AVG(g4)
03:59:48   7  FROM stk16
03:59:48   8  GROUP BY tkr,trend,gatt
03:59:48   9  ORDER BY tkr,trend,gatt
03:59:48  10  /

TKR	     TREND GAT COUNT(TKR)    AVG(G4)
------- ---------- --- ---------- ----------
IBM		-1 nup	     7341 -.48593703
IBM		-1 up	     3905 1.52950448
IBM		 1 nup	     9561 -.53885015
IBM		 1 up	     3645 1.34731413

Elapsed: 00:00:00.02
03:59:48 SQL> 
03:59:48 SQL> -- Now I derive goodness attributes:
03:59:48 SQL> 
03:59:48 SQL> DROP TABLE stk_ms;

Table dropped.

Elapsed: 00:00:00.14
03:59:48 SQL> CREATE TABLE stk_ms COMPRESS AS
03:59:48   2  SELECT
03:59:48   3  tkr
03:59:48   4  ,ydate
03:59:48   5  ,tkrdate
03:59:48   6  ,trend
03:59:48   7  ,g4
03:59:48   8  ,gatt
03:59:48   9  ,gattn
03:59:48  10  ,SUM(g4)OVER(PARTITION BY trend,att00 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g00
03:59:48  11  ,SUM(g4)OVER(PARTITION BY trend,att01 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g01
03:59:48  12  ,SUM(g4)OVER(PARTITION BY trend,att02 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g02
03:59:48  13  ,SUM(g4)OVER(PARTITION BY trend,att03 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g03
03:59:48  14  ,SUM(g4)OVER(PARTITION BY trend,att04 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g04
03:59:48  15  ,SUM(g4)OVER(PARTITION BY trend,att05 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g05
03:59:48  16  ,SUM(g4)OVER(PARTITION BY trend,att06 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g06
03:59:48  17  ,SUM(g4)OVER(PARTITION BY trend,att07 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g07
03:59:48  18  ,SUM(g4)OVER(PARTITION BY trend,att08 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g08
03:59:48  19  ,SUM(g4)OVER(PARTITION BY trend,att09 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g09
03:59:48  20  ,SUM(g4)OVER(PARTITION BY trend,att10 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g10
03:59:48  21  ,SUM(g4)OVER(PARTITION BY trend,att11 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g11
03:59:48  22  ,SUM(g4)OVER(PARTITION BY trend,att12 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g12
03:59:48  23  ,SUM(g4)OVER(PARTITION BY trend,att13 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g13
03:59:48  24  ,SUM(g4)OVER(PARTITION BY trend,att14 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g14
03:59:48  25  ,SUM(g4)OVER(PARTITION BY trend,att15 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g15
03:59:48  26  ,SUM(g4)OVER(PARTITION BY trend,att16 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g16
03:59:48  27  ,SUM(g4)OVER(PARTITION BY trend,att17 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g17
03:59:48  28  ,SUM(g4)OVER(PARTITION BY trend,att18 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g18
03:59:48  29  ,SUM(g4)OVER(PARTITION BY trend,att19 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g19
03:59:48  30  ,SUM(g4)OVER(PARTITION BY trend,att20 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g20
03:59:48  31  ,SUM(g4)OVER(PARTITION BY trend,att21 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g21
03:59:48  32  ,SUM(g4)OVER(PARTITION BY trend,att22 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g22
03:59:48  33  ,SUM(g4)OVER(PARTITION BY trend,att23 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g23
03:59:48  34  ,SUM(g4)OVER(PARTITION BY trend,att24 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g24
03:59:48  35  ,SUM(g4)OVER(PARTITION BY trend,att25 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g25
03:59:48  36  ,SUM(g4)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 12*22*30 PRECEDING AND CURRENT ROW)g26
03:59:48  37  -- att26 is trend which is a powerful attribute so I derive 3 more goodness attributes from trend:
03:59:48  38  ,SUM(g4)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 12*40 PRECEDING AND CURRENT ROW)g27
03:59:48  39  ,SUM(g4)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)g28
03:59:48  40  ,SUM(g4)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 12*20 PRECEDING AND CURRENT ROW)g29
03:59:48  41  FROM stk16
03:59:48  42  /

Table created.

Elapsed: 00:00:03.96
03:59:52 SQL> 
03:59:52 SQL> -- rpt
03:59:52 SQL> 
03:59:52 SQL> SELECT
03:59:52   2  tkr
03:59:52   3  ,trend
03:59:52   4  ,gatt
03:59:52   5  ,COUNT(tkr)
03:59:52   6  ,AVG(g4)
03:59:52   7  FROM stk_ms
03:59:52   8  GROUP BY tkr,trend,gatt
03:59:52   9  ORDER BY tkr,trend,gatt
03:59:52  10  /

TKR	     TREND GAT COUNT(TKR)    AVG(G4)
------- ---------- --- ---------- ----------
IBM		-1 nup	     7341 -.48593703
IBM		-1 up	     3905 1.52950448
IBM		 1 nup	     9561 -.53885015
IBM		 1 up	     3645 1.34731413

Elapsed: 00:00:00.03
03:59:52 SQL> 
03:59:52 SQL> SELECT
03:59:52   2  tkr
03:59:52   3  ,0+TO_CHAR(ydate,'D')daynum
03:59:52   4  ,COUNT(tkr)
03:59:52   5  ,MIN(ydate),MAX(ydate)
03:59:52   6  FROM stk_ms
03:59:52   7  GROUP BY tkr,0+TO_CHAR(ydate,'D')
03:59:52   8  ORDER BY tkr,0+TO_CHAR(ydate,'D')
03:59:52   9  /

TKR	    DAYNUM COUNT(TKR) MIN(YDATE)	  MAX(YDATE)
------- ---------- ---------- ------------------- -------------------
IBM		 2	 4882 2009-11-02 13:25:00 2011-01-10 20:55:00
IBM		 3	 4873 2009-11-03 13:25:00 2011-01-11 20:55:00
IBM		 4	 4891 2009-10-28 18:10:00 2011-01-12 20:55:00
IBM		 5	 4932 2009-10-29 13:25:00 2011-01-06 20:55:00
IBM		 6	 4874 2009-10-30 13:25:00 2011-01-07 20:55:00

Elapsed: 00:00:00.03
03:59:52 SQL> 
03:59:52 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
