/pt/s/rluck/svmspy/results2011_0104_IBM.txt

IBM shows very nice CORR() for both long and shorts:


oracle@linux:/pt/s/rluck/svmspy$ sqt @tkr_rpt.sql IBM

SQL*Plus: Release 11.2.0.1.0 Production on Tue Jan 4 15:43:08 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

15:43:08 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
15:43:08 SQL> --
15:43:08 SQL> -- tkr_rpt.sql
15:43:08 SQL> --
15:43:08 SQL> 
15:43:08 SQL> -- I use this script to report on correlation between SVM scores and Forex gains.
15:43:08 SQL> 
15:43:08 SQL> CREATE OR REPLACE VIEW tkr_rpt10 AS
15:43:08   2  SELECT
15:43:08   3  l.score  score_long
15:43:08   4  ,s.score score_short
15:43:08   5  ,m.g4
15:43:08   6  ,m.ydate
15:43:08   7  ,ROUND(l.score,1)rscore_long
15:43:08   8  ,ROUND(s.score,1)rscore_short
15:43:08   9  FROM stkscores l, stkscores s,stk_ms m
15:43:08  10  WHERE l.ydate = s.ydate
15:43:08  11  AND   l.ydate = m.ydate
15:43:08  12  AND l.tkr = '&1'
15:43:08  13  AND l.tkr = s.tkr
15:43:08  14  AND l.targ = 'gatt'
15:43:08  15  AND s.targ = 'gattn'
15:43:08  16  /
old  12: AND l.tkr = '&1'
new  12: AND l.tkr = 'IBM'

View created.

Elapsed: 00:00:00.11
15:43:08 SQL> 
15:43:08 SQL> -- rpt
15:43:08 SQL> 
15:43:08 SQL> SELECT COUNT(*)FROM stkscores;

  COUNT(*)
----------
     10712

Elapsed: 00:00:00.03
15:43:08 SQL> 
15:43:08 SQL> SELECT COUNT(*)FROM tkr_rpt10;

  COUNT(*)
----------
       452

Elapsed: 00:00:00.16
15:43:09 SQL> 
15:43:09 SQL> -- Look for CORR():
15:43:09 SQL> SELECT
15:43:09   2  MIN(ydate)
15:43:09   3  ,COUNT(ydate)
15:43:09   4  ,MAX(ydate)
15:43:09   5  ,CORR(score_long, g4)
15:43:09   6  ,CORR(score_short, g4)
15:43:09   7  FROM tkr_rpt10
15:43:09   8  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          CORR(SCORE_LONG,G4) CORR(SCORE_SHORT,G4)
------------------- ------------ ------------------- ------------------- --------------------
2010-10-01 14:05:01          452 2011-01-03 20:15:00          .138602186           -.15219605

Elapsed: 00:00:00.15
15:43:09 SQL> 
15:43:09 SQL> -- Look at distribution of scores and resulting gains.
15:43:09 SQL> -- A hich score means SVM has high confidence that the long position will be lucrative:
15:43:09 SQL> 
15:43:09 SQL> SELECT
15:43:09   2  MIN(ydate)
15:43:09   3  ,COUNT(ydate)
15:43:09   4  ,MAX(ydate)
15:43:09   5  ,rscore_long
15:43:09   6  ,ROUND(MIN(g4),3)min_g4
15:43:09   7  ,ROUND(AVG(g4),3)avg_g4
15:43:09   8  ,ROUND(STDDEV(g4),3)stddv_g4
15:43:09   9  ,ROUND(MAX(g4),3)max_g4
15:43:09  10  FROM tkr_rpt10
15:43:09  11  GROUP BY rscore_long
15:43:09  12  ORDER BY rscore_long
15:43:09  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_LONG     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ----------- ---------- ---------- ---------- ----------
2010-10-21 16:20:01            4 2011-01-03 14:20:00          .1       -.33        .31       .447        .71
2010-10-12 19:05:01           29 2011-01-03 14:10:00          .2      -4.46       -.28      1.566      1.808
2010-10-07 15:45:01           72 2011-01-03 19:00:00          .3      -1.97        .02       .779        2.7
2010-10-04 14:55:01           69 2011-01-03 19:30:00          .4      -4.43      -.108       .928       2.49
2010-10-05 16:50:01           57 2011-01-01 00:25:00          .5      -1.81       .099         .9       3.66
2010-10-01 15:25:01           71 2010-12-31 12:25:00          .6      -1.91       .203      1.095      3.655
2010-10-06 16:50:01           88 2011-01-03 20:15:00          .7      -2.38        .06      1.004       3.24
2010-10-01 14:05:01           50 2010-12-29 21:15:00          .8      -2.24       .448      1.289      4.233
2010-10-05 15:05:01           12 2010-12-30 16:30:00          .9       -.31        .55       .751       2.48

9 rows selected.

Elapsed: 00:00:00.14
15:43:09 SQL> 
15:43:09 SQL> -- Look at distribution of scores and resulting gains,
15:43:09 SQL> -- Where SVM has low confidence the position will be a lucrative short:
15:43:09 SQL> 
15:43:09 SQL> SELECT
15:43:09   2  MIN(ydate)
15:43:09   3  ,COUNT(ydate)
15:43:09   4  ,MAX(ydate)
15:43:09   5  ,rscore_long
15:43:09   6  ,ROUND(MIN(g4),3)min_g4
15:43:09   7  ,ROUND(AVG(g4),3)avg_g4
15:43:09   8  ,ROUND(STDDEV(g4),3)stddv_g4
15:43:09   9  ,ROUND(MAX(g4),3)max_g4
15:43:09  10  FROM tkr_rpt10
15:43:09  11  WHERE rscore_short < 0.3
15:43:09  12  GROUP BY rscore_long
15:43:09  13  ORDER BY rscore_long
15:43:09  14  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_LONG     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ----------- ---------- ---------- ---------- ----------
2010-10-13 15:30:01            1 2010-10-13 15:30:01          .2       -.25       -.25          0       -.25
2010-10-18 15:00:01            9 2011-01-01 00:05:00          .3     -1.733       .026       .773      1.095
2010-10-05 15:40:01            9 2011-01-03 19:30:00          .4      -4.43      -.715      1.685        .57
2010-10-05 16:50:01            8 2010-12-29 22:20:00          .5      -1.15       .603      1.402       3.66
2010-10-01 19:15:01           15 2010-12-31 12:25:00          .6      -1.91       .198      1.304      3.655
2010-10-11 19:25:01           18 2011-01-03 20:15:00          .7       -.81       .427       .907       2.97
2010-10-06 17:50:01           10 2010-12-20 18:00:01          .8      -.625       .397       .468          1
2010-10-05 15:05:01            5 2010-12-30 16:30:00          .9        .12        .94       .905       2.48

8 rows selected.

Elapsed: 00:00:00.14
15:43:09 SQL> 
15:43:09 SQL> -- Now go looking for high scores for shorts:
15:43:09 SQL> 
15:43:09 SQL> SELECT
15:43:09   2  MIN(ydate)
15:43:09   3  ,COUNT(ydate)
15:43:09   4  ,MAX(ydate)
15:43:09   5  ,rscore_short
15:43:09   6  ,ROUND(MIN(g4),3)min_g4
15:43:09   7  ,ROUND(AVG(g4),3)avg_g4
15:43:09   8  ,ROUND(STDDEV(g4),3)stddv_g4
15:43:09   9  ,ROUND(MAX(g4),3)max_g4
15:43:09  10  FROM tkr_rpt10
15:43:09  11  GROUP BY rscore_short
15:43:09  12  ORDER BY rscore_short
15:43:09  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_SHORT     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ------------ ---------- ---------- ---------- ----------
2010-10-05 15:05:01           12 2010-12-27 20:45:00           .1      -4.43       .011      1.439        .99
2010-10-01 19:15:01           63 2011-01-03 20:15:00           .2      -1.91        .29      1.078       3.66
2010-10-01 14:05:01          114 2011-01-03 17:35:00           .3     -2.235       .333       1.02        2.9
2010-10-01 17:30:01           92 2011-01-03 18:05:00           .4      -1.82       .102        .96      4.233
2010-10-01 15:25:01           64 2011-01-03 19:00:00           .5      -4.34      -.202      1.105       2.49
2010-10-04 15:25:01           55 2011-01-03 14:10:00           .6      -2.24      -.031       .818       2.47
2010-10-04 14:55:01           34 2010-12-31 19:30:00           .7      -4.46       -.18      1.389       3.24
2010-10-06 14:40:01           16 2010-12-30 23:05:00           .8        -.6      -.169       .351         .5
2010-10-20 13:35:01            2 2010-10-28 15:00:01           .9       -.36        .16       .735        .68

9 rows selected.

Elapsed: 00:00:00.16
15:43:09 SQL> 
15:43:09 SQL> -- Now I combine high rscore_short and low rscore_long:
15:43:09 SQL> 
15:43:09 SQL> SELECT
15:43:09   2  MIN(ydate)
15:43:09   3  ,COUNT(ydate)
15:43:09   4  ,MAX(ydate)
15:43:09   5  ,rscore_short
15:43:09   6  ,ROUND(MIN(g4),3)min_g4
15:43:09   7  ,ROUND(AVG(g4),3)avg_g4
15:43:09   8  ,ROUND(STDDEV(g4),3)stddv_g4
15:43:09   9  ,ROUND(MAX(g4),3)max_g4
15:43:09  10  FROM tkr_rpt10
15:43:09  11  WHERE rscore_long < 0.3
15:43:09  12  GROUP BY rscore_short
15:43:09  13  ORDER BY rscore_short
15:43:09  14  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_SHORT     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ------------ ---------- ---------- ---------- ----------
2010-10-13 15:30:01            1 2010-10-13 15:30:01           .2       -.25       -.25          0       -.25
2010-12-28 22:10:00            3 2010-12-30 23:40:00           .3      -.193       .591      1.068      1.808
2010-10-18 14:55:01            5 2011-01-01 00:35:00           .4      -1.82      -.232      1.109      1.075
2010-10-12 19:05:01            5 2011-01-03 14:20:00           .5      -4.34      -.659      2.183      1.205
2010-10-20 19:20:01            8 2011-01-03 14:10:00           .6       -.25       .302       .319        .71
2010-10-18 18:05:01            5 2010-11-30 19:05:01           .7      -4.46     -1.155      2.877        1.5
2010-10-21 16:20:01            5 2010-12-28 19:55:00           .8       -.54      -.045       .421        .44
2010-10-28 15:00:01            1 2010-10-28 15:00:01           .9       -.36       -.36          0       -.36

8 rows selected.

Elapsed: 00:00:00.15
15:43:09 SQL> 
15:43:09 SQL> -- This works better on sparse results:
15:43:09 SQL> 
15:43:09 SQL> 
15:43:09 SQL> CREATE OR REPLACE VIEW tkr_rpt_long AS
15:43:09   2  SELECT
15:43:09   3  l.score  score_long
15:43:09   4  ,m.g4
15:43:09   5  ,m.ydate
15:43:09   6  ,ROUND(l.score,1)rscore_long
15:43:09   7  FROM stkscores l,stk_ms m
15:43:09   8  WHERE l.ydate = m.ydate
15:43:09   9  AND l.tkr = '&1'
15:43:09  10  AND l.targ = 'gatt'
15:43:09  11  /
old   9: AND l.tkr = '&1'
new   9: AND l.tkr = 'IBM'

View created.

Elapsed: 00:00:00.08
15:43:09 SQL> 
15:43:09 SQL> 
15:43:09 SQL> -- Look for CORR():
15:43:09 SQL> SELECT
15:43:09   2  MIN(ydate)
15:43:09   3  ,COUNT(ydate)
15:43:09   4  ,MAX(ydate)
15:43:09   5  ,CORR(score_long, g4)
15:43:09   6  FROM tkr_rpt_long
15:43:09   7  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          CORR(SCORE_LONG,G4)
------------------- ------------ ------------------- -------------------
2010-10-01 13:30:01         1648 2011-01-03 20:45:00          .228260113

Elapsed: 00:00:00.11
15:43:10 SQL> 
15:43:10 SQL> 
15:43:10 SQL> -- Look at distribution of scores and resulting gains.
15:43:10 SQL> -- A hich score means SVM has high confidence that the long position will be lucrative:
15:43:10 SQL> 
15:43:10 SQL> SELECT
15:43:10   2  MIN(ydate)
15:43:10   3  ,COUNT(ydate)
15:43:10   4  ,MAX(ydate)
15:43:10   5  ,rscore_long
15:43:10   6  ,ROUND(MIN(g4),3)min_g4
15:43:10   7  ,ROUND(AVG(g4),3)avg_g4
15:43:10   8  ,ROUND(STDDEV(g4),3)stddv_g4
15:43:10   9  ,ROUND(MAX(g4),3)max_g4
15:43:10  10  FROM tkr_rpt_long
15:43:10  11  GROUP BY rscore_long
15:43:10  12  ORDER BY rscore_long
15:43:10  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_LONG     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ----------- ---------- ---------- ---------- ----------
2010-12-31 14:25:00            1 2010-12-31 14:25:00           0        .21        .21          0        .21
2010-10-21 16:20:01           21 2011-01-03 14:20:00          .1      -1.05      -.077       .647      1.718
2010-10-01 13:30:01          113 2011-01-03 20:30:00          .2      -4.46      -.455      1.353      2.375
2010-10-04 16:25:01          252 2011-01-03 20:45:00          .3      -4.58      -.206       .984        2.7
2010-10-01 15:35:01          240 2011-01-03 20:00:00          .4      -4.43       .067       .888          3
2010-10-01 13:35:01          231 2011-01-01 00:25:00          .5      -4.12       .213       .854       3.66
2010-10-01 15:20:01          237 2010-12-31 21:45:00          .6      -1.91       .233       .895      3.655
2010-10-01 16:45:01          304 2011-01-03 20:15:00          .7      -2.55       .143       .987       3.31
2010-10-01 13:45:01          211 2010-12-31 15:55:00          .8      -2.24       .452      1.064      4.233
2010-10-05 13:40:01           38 2010-12-30 16:30:00          .9       -.82       .746       .987      2.975

10 rows selected.

Elapsed: 00:00:00.10
15:43:10 SQL> 
15:43:10 SQL> -- Look at shorts:
15:43:10 SQL> 
15:43:10 SQL> CREATE OR REPLACE VIEW tkr_rpt_short AS
15:43:10   2  SELECT
15:43:10   3  s.score  score_short
15:43:10   4  ,m.g4
15:43:10   5  ,m.ydate
15:43:10   6  ,ROUND(s.score,1)rscore_short
15:43:10   7  FROM stkscores s,stk_ms m
15:43:10   8  WHERE s.ydate = m.ydate
15:43:10   9  AND s.tkr = '&1'
15:43:10  10  AND s.targ = 'gattn'
15:43:10  11  /
old   9: AND s.tkr = '&1'
new   9: AND s.tkr = 'IBM'

View created.

Elapsed: 00:00:00.20
15:43:10 SQL> 
15:43:10 SQL> 
15:43:10 SQL> -- Look for CORR():
15:43:10 SQL> SELECT
15:43:10   2  MIN(ydate)
15:43:10   3  ,COUNT(ydate)
15:43:10   4  ,MAX(ydate)
15:43:10   5  ,CORR(score_short, g4)
15:43:10   6  FROM tkr_rpt_short
15:43:10   7  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          CORR(SCORE_SHORT,G4)
------------------- ------------ ------------------- --------------------
2010-10-01 13:25:01         1634 2011-01-03 20:55:00           -.11816026

Elapsed: 00:00:00.11
15:43:10 SQL> 
15:43:10 SQL> 
15:43:10 SQL> -- Look at distribution of scores and resulting gains.
15:43:10 SQL> -- A hich score means SVM has high confidence that the short position will be lucrative:
15:43:10 SQL> 
15:43:10 SQL> SELECT
15:43:10   2  MIN(ydate)
15:43:10   3  ,COUNT(ydate)
15:43:10   4  ,MAX(ydate)
15:43:10   5  ,rscore_short
15:43:10   6  ,ROUND(MIN(g4),3)min_g4
15:43:10   7  ,ROUND(AVG(g4),3)avg_g4
15:43:10   8  ,ROUND(STDDEV(g4),3)stddv_g4
15:43:10   9  ,ROUND(MAX(g4),3)max_g4
15:43:10  10  FROM tkr_rpt_short
15:43:10  11  GROUP BY rscore_short
15:43:10  12  ORDER BY rscore_short
15:43:10  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_SHORT     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ------------ ---------- ---------- ---------- ----------
2010-10-14 13:45:01            1 2010-10-14 13:45:01            0        .16        .16          0        .16
2010-10-01 13:25:01           44 2011-01-03 18:50:00           .1      -4.55      -.148      1.339      1.575
2010-10-01 18:20:01          235 2011-01-03 20:55:00           .2      -4.26        .21       .948       3.66
2010-10-01 13:55:01          438 2011-01-03 19:55:00           .3     -2.235       .257       .901       3.66
2010-10-01 17:05:01          359 2011-01-03 18:05:00           .4     -4.675       .046       .947      4.233
2010-10-01 15:25:01          221 2011-01-03 19:00:00           .5     -4.615      -.157      1.054       3.14
2010-10-04 15:25:01          174 2011-01-03 16:10:00           .6      -4.67      -.014        .98       2.73
2010-10-04 13:45:01          113 2010-12-31 19:30:00           .7      -4.46      -.122      1.087       3.24
2010-10-04 14:40:01           40 2010-12-30 23:05:00           .8      -2.58      -.151       .767      2.235
2010-10-07 15:05:01            9 2010-12-31 12:50:00           .9       -.59       .039       .436        .68

10 rows selected.

Elapsed: 00:00:00.10
15:43:10 SQL> 
15:43:10 SQL> 
