/pt/s/rluck/svmspy/results2011_0104_WMT.txt


I need more results for WMT but I see that so far, CORR() is good for both longs and shorts:


oracle@hp2:/pt/s/rluck/svmspy$ sqt @tkr_rpt WMT

SQL*Plus: Release 11.2.0.1.0 Production on Tue Jan 4 15:13:54 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

15:13:55 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
15:13:55 SQL> --
15:13:55 SQL> -- tkr_rpt.sql
15:13:55 SQL> --
15:13:55 SQL> 
15:13:55 SQL> -- I use this script to report on correlation between SVM scores and Forex gains.
15:13:55 SQL> 
15:13:55 SQL> CREATE OR REPLACE VIEW tkr_rpt10 AS
15:13:55   2  SELECT
15:13:55   3  l.score  score_long
15:13:55   4  ,s.score score_short
15:13:55   5  ,m.g4
15:13:55   6  ,m.ydate
15:13:55   7  ,ROUND(l.score,1)rscore_long
15:13:55   8  ,ROUND(s.score,1)rscore_short
15:13:55   9  FROM stkscores l, stkscores s,stk_ms m
15:13:55  10  WHERE l.ydate = s.ydate
15:13:55  11  AND   l.ydate = m.ydate
15:13:55  12  AND l.tkr = '&1'
15:13:55  13  AND l.tkr = s.tkr
15:13:55  14  AND l.targ = 'gatt'
15:13:55  15  AND s.targ = 'gattn'
15:13:55  16  /
old  12: AND l.tkr = '&1'
new  12: AND l.tkr = 'WMT'

View created.

Elapsed: 00:00:00.11
15:13:55 SQL> 
15:13:55 SQL> -- rpt
15:13:55 SQL> 
15:13:55 SQL> SELECT COUNT(*)FROM stkscores;

  COUNT(*)
----------
     26645

Elapsed: 00:00:00.02
15:13:55 SQL> 
15:13:55 SQL> SELECT COUNT(*)FROM tkr_rpt10;

  COUNT(*)
----------
        53

Elapsed: 00:00:00.08
15:13:55 SQL> 
15:13:55 SQL> -- Look for CORR():
15:13:55 SQL> SELECT
15:13:55   2  MIN(ydate)
15:13:55   3  ,COUNT(ydate)
15:13:55   4  ,MAX(ydate)
15:13:55   5  ,CORR(score_long, g4)
15:13:55   6  ,CORR(score_short, g4)
15:13:55   7  FROM tkr_rpt10
15:13:55   8  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          CORR(SCORE_LONG,G4) CORR(SCORE_SHORT,G4)
------------------- ------------ ------------------- ------------------- --------------------
2010-10-01 17:45:01           53 2011-01-03 20:50:00          -.26991646           .192789965

Elapsed: 00:00:00.11
15:13:55 SQL> 
15:13:55 SQL> -- Look at distribution of scores and resulting gains.
15:13:55 SQL> -- A hich score means SVM has high confidence that the long position will be lucrative:
15:13:55 SQL> 
15:13:55 SQL> SELECT
15:13:55   2  MIN(ydate)
15:13:55   3  ,COUNT(ydate)
15:13:55   4  ,MAX(ydate)
15:13:55   5  ,rscore_long
15:13:55   6  ,ROUND(MIN(g4),3)min_g4
15:13:55   7  ,ROUND(AVG(g4),3)avg_g4
15:13:55   8  ,ROUND(STDDEV(g4),3)stddv_g4
15:13:55   9  ,ROUND(MAX(g4),3)max_g4
15:13:55  10  FROM tkr_rpt10
15:13:55  11  GROUP BY rscore_long
15:13:55  12  ORDER BY rscore_long
15:13:55  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_LONG     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ----------- ---------- ---------- ---------- ----------
2011-01-03 15:20:00            7 2011-01-03 20:25:00          .1        .26       .263       .004       .265
2010-10-06 15:10:01           16 2011-01-03 20:00:00          .2      -.015       .144       .137        .36
2010-12-29 12:15:00            7 2011-01-03 20:50:00          .3       .153       .201       .069        .25
2010-10-12 16:00:01            8 2011-01-03 20:45:00          .4        .09       .243       .172        .43
2010-12-09 16:50:01            2 2011-01-03 12:50:00          .5       -.17        .06       .325        .29
2011-01-03 19:05:00            2 2011-01-03 19:10:00          .6
2010-10-04 17:45:01            7 2011-01-03 19:00:00          .7       -.25       .136       .273        .59
2010-12-15 15:20:01            2 2010-12-24 18:30:01          .8       -.16      -.128       .046      -.095
2010-10-01 17:45:01            2 2010-10-07 16:20:01          .9      -.065       .128       .272        .32

9 rows selected.

Elapsed: 00:00:00.07
15:13:56 SQL> 
15:13:56 SQL> -- Look at distribution of scores and resulting gains,
15:13:56 SQL> -- Where SVM has low confidence the position will be a lucrative short:
15:13:56 SQL> 
15:13:56 SQL> SELECT
15:13:56   2  MIN(ydate)
15:13:56   3  ,COUNT(ydate)
15:13:56   4  ,MAX(ydate)
15:13:56   5  ,rscore_long
15:13:56   6  ,ROUND(MIN(g4),3)min_g4
15:13:56   7  ,ROUND(AVG(g4),3)avg_g4
15:13:56   8  ,ROUND(STDDEV(g4),3)stddv_g4
15:13:56   9  ,ROUND(MAX(g4),3)max_g4
15:13:56  10  FROM tkr_rpt10
15:13:56  11  WHERE rscore_short < 0.3
15:13:56  12  GROUP BY rscore_long
15:13:56  13  ORDER BY rscore_long
15:13:56  14  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_LONG     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ----------- ---------- ---------- ---------- ----------
2010-10-06 15:35:01            1 2010-10-06 15:35:01          .2        .08        .08          0        .08
2011-01-03 12:50:00            1 2011-01-03 12:50:00          .5        .29        .29          0        .29
2010-11-05 19:05:01            1 2010-11-05 19:05:01          .7       -.25       -.25          0       -.25
2010-12-24 18:30:01            1 2010-12-24 18:30:01          .8      -.095      -.095          0      -.095
2010-10-07 16:20:01            1 2010-10-07 16:20:01          .9        .32        .32          0        .32

Elapsed: 00:00:00.08
15:13:56 SQL> 
15:13:56 SQL> -- Now go looking for high scores for shorts:
15:13:56 SQL> 
15:13:56 SQL> SELECT
15:13:56   2  MIN(ydate)
15:13:56   3  ,COUNT(ydate)
15:13:56   4  ,MAX(ydate)
15:13:56   5  ,rscore_short
15:13:56   6  ,ROUND(MIN(g4),3)min_g4
15:13:56   7  ,ROUND(AVG(g4),3)avg_g4
15:13:56   8  ,ROUND(STDDEV(g4),3)stddv_g4
15:13:56   9  ,ROUND(MAX(g4),3)max_g4
15:13:56  10  FROM tkr_rpt10
15:13:56  11  GROUP BY rscore_short
15:13:56  12  ORDER BY rscore_short
15:13:56  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_SHORT     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ------------ ---------- ---------- ---------- ----------
2010-10-06 15:35:01            5 2011-01-03 12:50:00           .2       -.25       .069       .245        .32
2010-10-04 17:45:01            6 2011-01-03 18:10:00           .3        .03       .226       .213        .59
2010-12-15 15:20:01            2 2010-12-31 17:50:00           .4       -.16      -.035       .177        .09
2010-10-14 18:30:01            4 2011-01-03 20:45:00           .5        .09        .09          0        .09
2010-10-01 17:45:01            6 2011-01-03 20:50:00           .6       -.17      -.065       .105        .04
2010-10-12 16:00:01            9 2011-01-03 19:35:00           .7      -.015        .26       .169        .43
2011-01-03 16:35:00           16 2011-01-03 20:25:00           .8        .18         .2       .028        .22
2010-10-26 15:45:01            5 2011-01-03 20:20:00           .9        .21        .23       .028        .25

8 rows selected.

Elapsed: 00:00:00.07
15:13:56 SQL> 
15:13:56 SQL> -- Now I combine high rscore_short and low rscore_long:
15:13:56 SQL> 
15:13:56 SQL> SELECT
15:13:56   2  MIN(ydate)
15:13:56   3  ,COUNT(ydate)
15:13:56   4  ,MAX(ydate)
15:13:56   5  ,rscore_short
15:13:56   6  ,ROUND(MIN(g4),3)min_g4
15:13:56   7  ,ROUND(AVG(g4),3)avg_g4
15:13:56   8  ,ROUND(STDDEV(g4),3)stddv_g4
15:13:56   9  ,ROUND(MAX(g4),3)max_g4
15:13:56  10  FROM tkr_rpt10
15:13:56  11  WHERE rscore_long < 0.3
15:13:56  12  GROUP BY rscore_short
15:13:56  13  ORDER BY rscore_short
15:13:56  14  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_SHORT     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ------------ ---------- ---------- ---------- ----------
2010-10-06 15:35:01            1 2010-10-06 15:35:01           .2        .08        .08          0        .08
2011-01-03 18:10:00            1 2011-01-03 18:10:00           .3
2011-01-03 18:20:00            1 2011-01-03 18:20:00           .5
2010-10-06 15:10:01            3 2011-01-03 18:45:00           .6        .04        .04          0        .04
2010-11-24 14:35:01            5 2011-01-03 18:40:00           .7      -.015       .218       .162        .36
2011-01-03 16:35:00           11 2011-01-03 20:25:00           .8        .18         .2       .028        .22
2011-01-03 20:20:00            1 2011-01-03 20:20:00           .9

7 rows selected.

Elapsed: 00:00:00.08
15:13:56 SQL> 
15:13:56 SQL> -- This works better on sparse results:
15:13:56 SQL> 
15:13:56 SQL> 
15:13:56 SQL> CREATE OR REPLACE VIEW tkr_rpt_long AS
15:13:56   2  SELECT
15:13:56   3  l.score  score_long
15:13:56   4  ,m.g4
15:13:56   5  ,m.ydate
15:13:56   6  ,ROUND(l.score,1)rscore_long
15:13:56   7  FROM stkscores l,stk_ms m
15:13:56   8  WHERE l.ydate = m.ydate
15:13:56   9  AND l.tkr = '&1'
15:13:56  10  AND l.targ = 'gatt'
15:13:56  11  /
old   9: AND l.tkr = '&1'
new   9: AND l.tkr = 'WMT'

View created.

Elapsed: 00:00:00.05
15:13:56 SQL> 
15:13:56 SQL> 
15:13:56 SQL> -- Look for CORR():
15:13:56 SQL> SELECT
15:13:56   2  MIN(ydate)
15:13:56   3  ,COUNT(ydate)
15:13:56   4  ,MAX(ydate)
15:13:56   5  ,CORR(score_long, g4)
15:13:56   6  FROM tkr_rpt_long
15:13:56   7  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          CORR(SCORE_LONG,G4)
------------------- ------------ ------------------- -------------------
2010-10-01 13:40:01          343 2011-01-03 20:50:00          .119355911

Elapsed: 00:00:00.03
15:13:56 SQL> 
15:13:56 SQL> 
15:13:56 SQL> -- Look at distribution of scores and resulting gains.
15:13:56 SQL> -- A hich score means SVM has high confidence that the long position will be lucrative:
15:13:56 SQL> 
15:13:56 SQL> SELECT
15:13:56   2  MIN(ydate)
15:13:56   3  ,COUNT(ydate)
15:13:56   4  ,MAX(ydate)
15:13:56   5  ,rscore_long
15:13:56   6  ,ROUND(MIN(g4),3)min_g4
15:13:56   7  ,ROUND(AVG(g4),3)avg_g4
15:13:56   8  ,ROUND(STDDEV(g4),3)stddv_g4
15:13:56   9  ,ROUND(MAX(g4),3)max_g4
15:13:56  10  FROM tkr_rpt_long
15:13:56  11  GROUP BY rscore_long
15:13:56  12  ORDER BY rscore_long
15:13:56  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_LONG     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ----------- ---------- ---------- ---------- ----------
2010-12-30 12:55:00            1 2010-12-30 12:55:00           0      -.215      -.215          0      -.215
2010-10-07 13:35:01           17 2011-01-03 20:25:00          .1      -1.15      -.145       .407       .265
2010-10-06 15:10:01           42 2011-01-03 20:00:00          .2       -.75      -.025       .239        .36
2010-10-06 18:05:01           45 2011-01-03 20:50:00          .3       -.74       .018       .292       .445
2010-10-05 14:35:01           52 2011-01-03 20:45:00          .4       -.75      -.008        .24       .483
2010-10-04 13:55:01           41 2011-01-03 12:50:00          .5       -.89        -.1       .298         .5
2010-10-01 13:40:01           48 2011-01-03 19:10:00          .6        -.9      -.078       .315        .61
2010-10-04 17:45:01           41 2011-01-03 19:00:00          .7       -.25       .199       .315       1.04
2010-10-04 18:50:01           43 2010-12-31 16:00:00          .8       -.92       .017       .361        .59
2010-10-01 17:45:01           12 2010-12-28 23:15:00          .9       -.88      -.001       .339        .43
2010-10-07 15:55:01            1 2010-10-07 15:55:01           1         .2         .2          0         .2

11 rows selected.

Elapsed: 00:00:00.05
15:13:56 SQL> 
15:13:56 SQL> -- Look at shorts:
15:13:56 SQL> 
15:13:56 SQL> CREATE OR REPLACE VIEW tkr_rpt_short AS
15:13:56   2  SELECT
15:13:56   3  s.score  score_short
15:13:56   4  ,m.g4
15:13:56   5  ,m.ydate
15:13:56   6  ,ROUND(s.score,1)rscore_short
15:13:56   7  FROM stkscores s,stk_ms m
15:13:56   8  WHERE s.ydate = m.ydate
15:13:56   9  AND s.tkr = '&1'
15:13:56  10  AND s.targ = 'gattn'
15:13:56  11  /
old   9: AND s.tkr = '&1'
new   9: AND s.tkr = 'WMT'

View created.

Elapsed: 00:00:00.03
15:13:56 SQL> 
15:13:56 SQL> 
15:13:56 SQL> -- Look for CORR():
15:13:56 SQL> SELECT
15:13:56   2  MIN(ydate)
15:13:56   3  ,COUNT(ydate)
15:13:56   4  ,MAX(ydate)
15:13:56   5  ,CORR(score_short, g4)
15:13:56   6  FROM tkr_rpt_short
15:13:56   7  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          CORR(SCORE_SHORT,G4)
------------------- ------------ ------------------- --------------------
2010-10-01 14:45:01          346 2011-01-03 20:50:00           -.19979078

Elapsed: 00:00:00.05
15:13:56 SQL> 
15:13:56 SQL> 
15:13:56 SQL> -- Look at distribution of scores and resulting gains.
15:13:56 SQL> -- A hich score means SVM has high confidence that the short position will be lucrative:
15:13:56 SQL> 
15:13:56 SQL> SELECT
15:13:56   2  MIN(ydate)
15:13:56   3  ,COUNT(ydate)
15:13:56   4  ,MAX(ydate)
15:13:56   5  ,rscore_short
15:13:56   6  ,ROUND(MIN(g4),3)min_g4
15:13:56   7  ,ROUND(AVG(g4),3)avg_g4
15:13:56   8  ,ROUND(STDDEV(g4),3)stddv_g4
15:13:56   9  ,ROUND(MAX(g4),3)max_g4
15:13:56  10  FROM tkr_rpt_short
15:13:56  11  GROUP BY rscore_short
15:13:56  12  ORDER BY rscore_short
15:13:56  13  /

MIN(YDATE)          COUNT(YDATE) MAX(YDATE)          RSCORE_SHORT     MIN_G4     AVG_G4   STDDV_G4     MAX_G4
------------------- ------------ ------------------- ------------ ---------- ---------- ---------- ----------
2010-10-04 14:45:01           14 2011-01-03 16:15:00           .1       -.29       .174       .225        .58
2010-10-04 18:55:01           61 2011-01-03 19:40:00           .2        -.5       .127       .338       1.06
2010-10-01 18:20:01           51 2011-01-03 18:10:00           .3      -.895       .017       .346       1.11
2010-10-01 17:50:01           38 2010-12-31 18:20:00           .4       -.84      -.089       .378       .735
2010-10-04 19:20:01           42 2011-01-03 20:45:00           .5       -.45       .021       .273        .54
2010-10-01 17:45:01           46 2011-01-03 20:50:00           .6      -.895      -.131       .291        .39
2010-10-01 14:45:01           45 2011-01-03 19:35:00           .7      -.925      -.009       .337       .528
2010-10-06 13:40:01           33 2011-01-03 20:25:00           .8      -.665      -.015       .234        .39
2010-10-06 18:45:01           16 2011-01-03 20:20:00           .9      -.845      -.139       .353        .25

9 rows selected.

Elapsed: 00:00:00.05
15:13:56 SQL> 
15:13:56 SQL> 
