
SQL*Plus: Release 11.2.0.1.0 Production on Thu Jan 6 14:59:37 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

14:59:37 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
14:59:37 SQL> 14:59:37 SQL> @aud_score1day.sql  2011-01-06 14:35:00
14:59:37 SQL> --
14:59:37 SQL> -- aud_score1day.sql
14:59:37 SQL> --
14:59:37 SQL> 
14:59:37 SQL> CREATE OR REPLACE VIEW sme AS
14:59:37   2  SELECT
14:59:37   3  'aud'||m.ydate prdate
14:59:37   4  ,NULL gatt
14:59:37   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:59:37   6  ,eur_g00
14:59:37   7  ,eur_g01
14:59:37   8  ,eur_g02
14:59:37   9  ,eur_g03
14:59:37  10  ,eur_g04
14:59:37  11  ,eur_g05
14:59:37  12  ,eur_g06
14:59:37  13  ,eur_g07
14:59:37  14  ,eur_g08
14:59:37  15  ,eur_g09
14:59:37  16  ,eur_g10
14:59:37  17  ,eur_g11
14:59:37  18  ,eur_g12
14:59:37  19  ,eur_g13
14:59:37  20  ,eur_g14
14:59:37  21  ,eur_g15
14:59:37  22  ,eur_g16
14:59:37  23  ,eur_g17
14:59:37  24  ,eur_g18
14:59:37  25  ,eur_g19
14:59:37  26  ,eur_g20
14:59:37  27  ,eur_g21
14:59:37  28  ,eur_g22
14:59:37  29  ,eur_g23
14:59:37  30  ,eur_g24
14:59:37  31  ,eur_g25
14:59:37  32  ,eur_g26
14:59:37  33  ,eur_g27
14:59:37  34  ,eur_g28
14:59:37  35  ,eur_g29
14:59:37  36  ,eur_g30
14:59:37  37  ,eur_g31
14:59:37  38  ,eur_g32
14:59:37  39  ,eur_g33
14:59:37  40  ,eur_g34
14:59:37  41  ,eur_g35
14:59:37  42  ,eur_g36
14:59:37  43  ,eur_g37
14:59:37  44  ,eur_g38
14:59:37  45  ,eur_g39
14:59:37  46  ,eur_g40
14:59:37  47  ,eur_g41
14:59:37  48  ,aud_g00
14:59:37  49  ,aud_g01
14:59:37  50  ,aud_g02
14:59:37  51  ,aud_g03
14:59:37  52  ,aud_g04
14:59:37  53  ,aud_g05
14:59:37  54  ,aud_g06
14:59:37  55  ,aud_g07
14:59:37  56  ,aud_g08
14:59:37  57  ,aud_g09
14:59:37  58  ,aud_g10
14:59:37  59  ,aud_g11
14:59:37  60  ,aud_g12
14:59:37  61  ,aud_g13
14:59:37  62  ,aud_g14
14:59:37  63  ,aud_g15
14:59:37  64  ,aud_g16
14:59:37  65  ,aud_g17
14:59:37  66  ,aud_g18
14:59:37  67  ,aud_g19
14:59:37  68  ,aud_g20
14:59:37  69  ,aud_g21
14:59:37  70  ,aud_g22
14:59:37  71  ,aud_g23
14:59:37  72  ,aud_g24
14:59:37  73  ,aud_g25
14:59:37  74  ,aud_g26
14:59:37  75  ,aud_g27
14:59:37  76  ,aud_g28
14:59:37  77  ,aud_g29
14:59:37  78  ,aud_g30
14:59:37  79  ,aud_g31
14:59:37  80  ,aud_g32
14:59:37  81  ,aud_g33
14:59:37  82  ,aud_g34
14:59:37  83  ,aud_g35
14:59:37  84  ,aud_g36
14:59:37  85  ,aud_g37
14:59:37  86  ,aud_g38
14:59:37  87  ,aud_g39
14:59:37  88  ,aud_g40
14:59:37  89  ,aud_g41
14:59:37  90  ,gbp_g00
14:59:37  91  ,gbp_g01
14:59:37  92  ,gbp_g02
14:59:37  93  ,gbp_g03
14:59:37  94  ,gbp_g04
14:59:37  95  ,gbp_g05
14:59:37  96  ,gbp_g06
14:59:37  97  ,gbp_g07
14:59:37  98  ,gbp_g08
14:59:37  99  ,gbp_g09
14:59:37 100  ,gbp_g10
14:59:37 101  ,gbp_g11
14:59:37 102  ,gbp_g12
14:59:37 103  ,gbp_g13
14:59:37 104  ,gbp_g14
14:59:37 105  ,gbp_g15
14:59:37 106  ,gbp_g16
14:59:37 107  ,gbp_g17
14:59:37 108  ,gbp_g18
14:59:37 109  ,gbp_g19
14:59:37 110  ,gbp_g20
14:59:37 111  ,gbp_g21
14:59:37 112  ,gbp_g22
14:59:37 113  ,gbp_g23
14:59:37 114  ,gbp_g24
14:59:37 115  ,gbp_g25
14:59:37 116  ,gbp_g26
14:59:37 117  ,gbp_g27
14:59:37 118  ,gbp_g28
14:59:37 119  ,gbp_g29
14:59:37 120  ,gbp_g30
14:59:37 121  ,gbp_g31
14:59:37 122  ,gbp_g32
14:59:37 123  ,gbp_g33
14:59:37 124  ,gbp_g34
14:59:37 125  ,gbp_g35
14:59:37 126  ,gbp_g36
14:59:37 127  ,gbp_g37
14:59:37 128  ,gbp_g38
14:59:37 129  ,gbp_g39
14:59:37 130  ,gbp_g40
14:59:37 131  ,gbp_g41
14:59:37 132  ,jpy_g00
14:59:37 133  ,jpy_g01
14:59:37 134  ,jpy_g02
14:59:37 135  ,jpy_g03
14:59:37 136  ,jpy_g04
14:59:37 137  ,jpy_g05
14:59:37 138  ,jpy_g06
14:59:37 139  ,jpy_g07
14:59:37 140  ,jpy_g08
14:59:37 141  ,jpy_g09
14:59:37 142  ,jpy_g10
14:59:37 143  ,jpy_g11
14:59:37 144  ,jpy_g12
14:59:37 145  ,jpy_g13
14:59:37 146  ,jpy_g14
14:59:37 147  ,jpy_g15
14:59:37 148  ,jpy_g16
14:59:37 149  ,jpy_g17
14:59:37 150  ,jpy_g18
14:59:37 151  ,jpy_g19
14:59:37 152  ,jpy_g20
14:59:37 153  ,jpy_g21
14:59:37 154  ,jpy_g22
14:59:37 155  ,jpy_g23
14:59:37 156  ,jpy_g24
14:59:37 157  ,jpy_g25
14:59:37 158  ,jpy_g26
14:59:37 159  ,jpy_g27
14:59:37 160  ,jpy_g28
14:59:37 161  ,jpy_g29
14:59:37 162  ,jpy_g30
14:59:37 163  ,jpy_g31
14:59:37 164  ,jpy_g32
14:59:37 165  ,jpy_g33
14:59:37 166  ,jpy_g34
14:59:37 167  ,jpy_g35
14:59:37 168  ,jpy_g36
14:59:37 169  ,jpy_g37
14:59:37 170  ,jpy_g38
14:59:37 171  ,jpy_g39
14:59:37 172  ,jpy_g40
14:59:37 173  ,jpy_g41
14:59:37 174  ,cad_g00
14:59:37 175  ,cad_g01
14:59:37 176  ,cad_g02
14:59:37 177  ,cad_g03
14:59:37 178  ,cad_g04
14:59:37 179  ,cad_g05
14:59:37 180  ,cad_g06
14:59:37 181  ,cad_g07
14:59:37 182  ,cad_g08
14:59:37 183  ,cad_g09
14:59:37 184  ,cad_g10
14:59:37 185  ,cad_g11
14:59:37 186  ,cad_g12
14:59:37 187  ,cad_g13
14:59:37 188  ,cad_g14
14:59:37 189  ,cad_g15
14:59:37 190  ,cad_g16
14:59:37 191  ,cad_g17
14:59:37 192  ,cad_g18
14:59:37 193  ,cad_g19
14:59:37 194  ,cad_g20
14:59:37 195  ,cad_g21
14:59:37 196  ,cad_g22
14:59:37 197  ,cad_g23
14:59:37 198  ,cad_g24
14:59:37 199  ,cad_g25
14:59:37 200  ,cad_g26
14:59:37 201  ,cad_g27
14:59:37 202  ,cad_g28
14:59:37 203  ,cad_g29
14:59:37 204  ,cad_g30
14:59:37 205  ,cad_g31
14:59:37 206  ,cad_g32
14:59:37 207  ,cad_g33
14:59:37 208  ,cad_g34
14:59:37 209  ,cad_g35
14:59:37 210  ,cad_g36
14:59:37 211  ,cad_g37
14:59:37 212  ,cad_g38
14:59:37 213  ,cad_g39
14:59:37 214  ,cad_g40
14:59:37 215  ,cad_g41
14:59:37 216  ,chf_g00
14:59:37 217  ,chf_g01
14:59:37 218  ,chf_g02
14:59:37 219  ,chf_g03
14:59:37 220  ,chf_g04
14:59:37 221  ,chf_g05
14:59:37 222  ,chf_g06
14:59:37 223  ,chf_g07
14:59:37 224  ,chf_g08
14:59:37 225  ,chf_g09
14:59:37 226  ,chf_g10
14:59:37 227  ,chf_g11
14:59:37 228  ,chf_g12
14:59:37 229  ,chf_g13
14:59:37 230  ,chf_g14
14:59:37 231  ,chf_g15
14:59:37 232  ,chf_g16
14:59:37 233  ,chf_g17
14:59:37 234  ,chf_g18
14:59:37 235  ,chf_g19
14:59:37 236  ,chf_g20
14:59:37 237  ,chf_g21
14:59:37 238  ,chf_g22
14:59:37 239  ,chf_g23
14:59:37 240  ,chf_g24
14:59:37 241  ,chf_g25
14:59:37 242  ,chf_g26
14:59:37 243  ,chf_g27
14:59:37 244  ,chf_g28
14:59:37 245  ,chf_g29
14:59:37 246  ,chf_g30
14:59:37 247  ,chf_g31
14:59:37 248  ,chf_g32
14:59:37 249  ,chf_g33
14:59:37 250  ,chf_g34
14:59:37 251  ,chf_g35
14:59:37 252  ,chf_g36
14:59:37 253  ,chf_g37
14:59:37 254  ,chf_g38
14:59:37 255  ,chf_g39
14:59:37 256  ,chf_g40
14:59:37 257  ,chf_g41
14:59:37 258  FROM aud_ms6 m
14:59:37 259  WHERE m.ydate = '&1'||' '||'&2'
14:59:37 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'14:35:00'

View created.

Elapsed: 00:00:00.14
14:59:37 SQL> 
14:59:37 SQL> -- rpt
14:59:37 SQL> -- We should see just 1 row:
14:59:37 SQL> 
14:59:37 SQL> SELECT COUNT(prdate) FROM sme
14:59:37   2  
14:59:37 SQL> -- Build the model:
14:59:37 SQL> CREATE OR REPLACE VIEW bme AS
14:59:37   2  SELECT
14:59:37   3  'aud'||m.ydate prdate
14:59:37   4  ,gatt
14:59:37   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:59:37   6  ,eur_g00
14:59:37   7  ,eur_g01
14:59:37   8  ,eur_g02
14:59:37   9  ,eur_g03
14:59:37  10  ,eur_g04
14:59:37  11  ,eur_g05
14:59:37  12  ,eur_g06
14:59:37  13  ,eur_g07
14:59:37  14  ,eur_g08
14:59:37  15  ,eur_g09
14:59:37  16  ,eur_g10
14:59:37  17  ,eur_g11
14:59:37  18  ,eur_g12
14:59:37  19  ,eur_g13
14:59:37  20  ,eur_g14
14:59:37  21  ,eur_g15
14:59:37  22  ,eur_g16
14:59:37  23  ,eur_g17
14:59:37  24  ,eur_g18
14:59:37  25  ,eur_g19
14:59:37  26  ,eur_g20
14:59:37  27  ,eur_g21
14:59:37  28  ,eur_g22
14:59:37  29  ,eur_g23
14:59:37  30  ,eur_g24
14:59:37  31  ,eur_g25
14:59:37  32  ,eur_g26
14:59:37  33  ,eur_g27
14:59:37  34  ,eur_g28
14:59:37  35  ,eur_g29
14:59:37  36  ,eur_g30
14:59:37  37  ,eur_g31
14:59:37  38  ,eur_g32
14:59:37  39  ,eur_g33
14:59:37  40  ,eur_g34
14:59:37  41  ,eur_g35
14:59:37  42  ,eur_g36
14:59:37  43  ,eur_g37
14:59:37  44  ,eur_g38
14:59:37  45  ,eur_g39
14:59:37  46  ,eur_g40
14:59:37  47  ,eur_g41
14:59:37  48  ,aud_g00
14:59:37  49  ,aud_g01
14:59:37  50  ,aud_g02
14:59:37  51  ,aud_g03
14:59:37  52  ,aud_g04
14:59:37  53  ,aud_g05
14:59:37  54  ,aud_g06
14:59:37  55  ,aud_g07
14:59:37  56  ,aud_g08
14:59:37  57  ,aud_g09
14:59:37  58  ,aud_g10
14:59:37  59  ,aud_g11
14:59:37  60  ,aud_g12
14:59:37  61  ,aud_g13
14:59:37  62  ,aud_g14
14:59:37  63  ,aud_g15
14:59:37  64  ,aud_g16
14:59:37  65  ,aud_g17
14:59:37  66  ,aud_g18
14:59:37  67  ,aud_g19
14:59:37  68  ,aud_g20
14:59:37  69  ,aud_g21
14:59:37  70  ,aud_g22
14:59:37  71  ,aud_g23
14:59:37  72  ,aud_g24
14:59:37  73  ,aud_g25
14:59:37  74  ,aud_g26
14:59:37  75  ,aud_g27
14:59:37  76  ,aud_g28
14:59:37  77  ,aud_g29
14:59:37  78  ,aud_g30
14:59:37  79  ,aud_g31
14:59:37  80  ,aud_g32
14:59:37  81  ,aud_g33
14:59:37  82  ,aud_g34
14:59:37  83  ,aud_g35
14:59:37  84  ,aud_g36
14:59:37  85  ,aud_g37
14:59:37  86  ,aud_g38
14:59:37  87  ,aud_g39
14:59:37  88  ,aud_g40
14:59:37  89  ,aud_g41
14:59:37  90  ,gbp_g00
14:59:37  91  ,gbp_g01
14:59:37  92  ,gbp_g02
14:59:37  93  ,gbp_g03
14:59:37  94  ,gbp_g04
14:59:37  95  ,gbp_g05
14:59:37  96  ,gbp_g06
14:59:37  97  ,gbp_g07
14:59:37  98  ,gbp_g08
14:59:37  99  ,gbp_g09
14:59:37 100  ,gbp_g10
14:59:37 101  ,gbp_g11
14:59:37 102  ,gbp_g12
14:59:37 103  ,gbp_g13
14:59:37 104  ,gbp_g14
14:59:37 105  ,gbp_g15
14:59:37 106  ,gbp_g16
14:59:37 107  ,gbp_g17
14:59:37 108  ,gbp_g18
14:59:37 109  ,gbp_g19
14:59:37 110  ,gbp_g20
14:59:37 111  ,gbp_g21
14:59:37 112  ,gbp_g22
14:59:37 113  ,gbp_g23
14:59:37 114  ,gbp_g24
14:59:37 115  ,gbp_g25
14:59:37 116  ,gbp_g26
14:59:37 117  ,gbp_g27
14:59:37 118  ,gbp_g28
14:59:37 119  ,gbp_g29
14:59:37 120  ,gbp_g30
14:59:37 121  ,gbp_g31
14:59:37 122  ,gbp_g32
14:59:37 123  ,gbp_g33
14:59:37 124  ,gbp_g34
14:59:37 125  ,gbp_g35
14:59:37 126  ,gbp_g36
14:59:37 127  ,gbp_g37
14:59:37 128  ,gbp_g38
14:59:37 129  ,gbp_g39
14:59:37 130  ,gbp_g40
14:59:37 131  ,gbp_g41
14:59:37 132  ,jpy_g00
14:59:37 133  ,jpy_g01
14:59:37 134  ,jpy_g02
14:59:37 135  ,jpy_g03
14:59:37 136  ,jpy_g04
14:59:37 137  ,jpy_g05
14:59:37 138  ,jpy_g06
14:59:37 139  ,jpy_g07
14:59:37 140  ,jpy_g08
14:59:37 141  ,jpy_g09
14:59:37 142  ,jpy_g10
14:59:37 143  ,jpy_g11
14:59:37 144  ,jpy_g12
14:59:37 145  ,jpy_g13
14:59:37 146  ,jpy_g14
14:59:37 147  ,jpy_g15
14:59:37 148  ,jpy_g16
14:59:37 149  ,jpy_g17
14:59:37 150  ,jpy_g18
14:59:37 151  ,jpy_g19
14:59:37 152  ,jpy_g20
14:59:37 153  ,jpy_g21
14:59:37 154  ,jpy_g22
14:59:37 155  ,jpy_g23
14:59:37 156  ,jpy_g24
14:59:37 157  ,jpy_g25
14:59:37 158  ,jpy_g26
14:59:37 159  ,jpy_g27
14:59:37 160  ,jpy_g28
14:59:37 161  ,jpy_g29
14:59:37 162  ,jpy_g30
14:59:37 163  ,jpy_g31
14:59:37 164  ,jpy_g32
14:59:37 165  ,jpy_g33
14:59:37 166  ,jpy_g34
14:59:37 167  ,jpy_g35
14:59:37 168  ,jpy_g36
14:59:37 169  ,jpy_g37
14:59:37 170  ,jpy_g38
14:59:37 171  ,jpy_g39
14:59:37 172  ,jpy_g40
14:59:37 173  ,jpy_g41
14:59:37 174  ,cad_g00
14:59:37 175  ,cad_g01
14:59:37 176  ,cad_g02
14:59:37 177  ,cad_g03
14:59:37 178  ,cad_g04
14:59:37 179  ,cad_g05
14:59:37 180  ,cad_g06
14:59:37 181  ,cad_g07
14:59:37 182  ,cad_g08
14:59:37 183  ,cad_g09
14:59:37 184  ,cad_g10
14:59:37 185  ,cad_g11
14:59:37 186  ,cad_g12
14:59:37 187  ,cad_g13
14:59:37 188  ,cad_g14
14:59:37 189  ,cad_g15
14:59:37 190  ,cad_g16
14:59:37 191  ,cad_g17
14:59:37 192  ,cad_g18
14:59:37 193  ,cad_g19
14:59:37 194  ,cad_g20
14:59:37 195  ,cad_g21
14:59:37 196  ,cad_g22
14:59:37 197  ,cad_g23
14:59:37 198  ,cad_g24
14:59:37 199  ,cad_g25
14:59:37 200  ,cad_g26
14:59:37 201  ,cad_g27
14:59:37 202  ,cad_g28
14:59:37 203  ,cad_g29
14:59:37 204  ,cad_g30
14:59:37 205  ,cad_g31
14:59:37 206  ,cad_g32
14:59:37 207  ,cad_g33
14:59:37 208  ,cad_g34
14:59:37 209  ,cad_g35
14:59:37 210  ,cad_g36
14:59:37 211  ,cad_g37
14:59:37 212  ,cad_g38
14:59:37 213  ,cad_g39
14:59:37 214  ,cad_g40
14:59:37 215  ,cad_g41
14:59:37 216  ,chf_g00
14:59:37 217  ,chf_g01
14:59:37 218  ,chf_g02
14:59:37 219  ,chf_g03
14:59:37 220  ,chf_g04
14:59:37 221  ,chf_g05
14:59:37 222  ,chf_g06
14:59:37 223  ,chf_g07
14:59:37 224  ,chf_g08
14:59:37 225  ,chf_g09
14:59:37 226  ,chf_g10
14:59:37 227  ,chf_g11
14:59:37 228  ,chf_g12
14:59:37 229  ,chf_g13
14:59:37 230  ,chf_g14
14:59:37 231  ,chf_g15
14:59:37 232  ,chf_g16
14:59:37 233  ,chf_g17
14:59:37 234  ,chf_g18
14:59:37 235  ,chf_g19
14:59:37 236  ,chf_g20
14:59:37 237  ,chf_g21
14:59:37 238  ,chf_g22
14:59:37 239  ,chf_g23
14:59:37 240  ,chf_g24
14:59:37 241  ,chf_g25
14:59:37 242  ,chf_g26
14:59:37 243  ,chf_g27
14:59:37 244  ,chf_g28
14:59:37 245  ,chf_g29
14:59:37 246  ,chf_g30
14:59:37 247  ,chf_g31
14:59:37 248  ,chf_g32
14:59:37 249  ,chf_g33
14:59:37 250  ,chf_g34
14:59:37 251  ,chf_g35
14:59:37 252  ,chf_g36
14:59:37 253  ,chf_g37
14:59:37 254  ,chf_g38
14:59:37 255  ,chf_g39
14:59:37 256  ,chf_g40
14:59:37 257  ,chf_g41
14:59:37 258  FROM aud_ms6 m
14:59:37 259  WHERE gatt IN('nup','up')
14:59:37 260  AND 1+m.ydate < '&1'||' '||'&2'
14:59:37 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'14:35:00'

View created.

Elapsed: 00:00:00.13
14:59:37 SQL> 
14:59:37 SQL> -- rpt
14:59:37 SQL> 
14:59:37 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
14:59:37   2  
14:59:37 SQL> SELECT MAX(prdate) FROM bme
14:59:37   2  
14:59:37 SQL> -- Now build model from bme and score sme
14:59:37 SQL> @score1.sql
14:59:37 SQL> -- score1.sql
14:59:37 SQL> 
14:59:37 SQL> -- Does the 1st SVM score
14:59:37 SQL> 
14:59:37 SQL> -- Fill up svmc_apply_prep
14:59:37 SQL> @score.sql
14:59:37 SQL> --
14:59:37 SQL> -- score.sql
14:59:37 SQL> --
14:59:37 SQL> 
14:59:37 SQL> -- usage: score.sql
14:59:37 SQL> 
14:59:37 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
14:59:37 SQL> 
14:59:37 SQL> DEFINE target	= 'gatt'
14:59:37 SQL> DEFINE model_name = 'forex15'
14:59:37 SQL> DEFINE bldtable	= 'bme'
14:59:37 SQL> DEFINE scoretable = 'sme'
14:59:37 SQL> DEFINE case_id	= 'prdate'
14:59:37 SQL> 
14:59:37 SQL> -- Define a variable to help me exclude some columns from some data mining calls
14:59:37 SQL> DEFINE exclude1 = "'&target','&case_id'"
14:59:37 SQL> 
14:59:37 SQL> -- Builds an SVM model using pl/sql.
14:59:37 SQL> 
14:59:37 SQL> -----------------------------------------------------------------------
14:59:37 SQL> --			    BUILD THE MODEL
14:59:37 SQL> -----------------------------------------------------------------------
14:59:37 SQL> 
14:59:37 SQL> -- Cleanup old build data preparation objects for repeat runs
14:59:37 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
14:59:37 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
14:59:37 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
14:59:37 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
14:59:37 SQL> 
14:59:37 SQL> 
14:59:37 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
14:59:37 SQL> --
14:59:37 SQL> -- DROP	TABLE svmc_settings ;
14:59:37 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
14:59:37 SQL> -- DELETE svmc_settings;
14:59:37 SQL> 
14:59:37 SQL> -- The default classification algorithm is Naive Bayes. So override
14:59:37 SQL> -- this choice to SVM using a settings table.
14:59:37 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
14:59:37 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
14:59:37 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
14:59:37 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
14:59:37 SQL> -- models.
14:59:37 SQL> --
14:59:37 SQL> 
14:59:37 SQL> -- Do this once and then comment it out.
14:59:37 SQL> -- That makes script go faster.
14:59:37 SQL> -- BEGIN
14:59:37 SQL> -- -- Populate settings table
14:59:37 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:59:37 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
14:59:37 SQL> --
14:59:37 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:59:37 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
14:59:37 SQL> --
14:59:37 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:59:37 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
14:59:37 SQL> --   COMMIT;
14:59:37 SQL> -- END;
14:59:37 SQL> -- /
14:59:37 SQL> 
14:59:37 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
14:59:37 SQL> 
14:59:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
14:59:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:59:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
14:59:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
14:59:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:59:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
14:59:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
14:59:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:59:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:59:38 SQL> 
14:59:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
14:59:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:59:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:59:38 SQL> 
14:59:38 SQL> --------------------------------
14:59:38 SQL> -- PREPARE BUILD (TRAINING) DATA
14:59:38 SQL> --
14:59:38 SQL> 
14:59:38 SQL> -- 1. Missing Value treatment for all Predictors and
14:59:38 SQL> -- 2. Outlier Treatment and
14:59:38 SQL> -- 3. Normalization are performed below.
14:59:38 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
14:59:38 SQL> --    normalized here.
14:59:38 SQL> 
14:59:38 SQL> BEGIN
14:59:38   2  	-- Perform missing value treatment for all predictors
14:59:38   3  	-- create miss tables
14:59:38   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
14:59:38   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
14:59:38   6  
14:59:38   7  	-- populate miss tables
14:59:38   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
14:59:38   9  	  miss_table_name => 'svmc_miss_num',
14:59:38  10  	  data_table_name => '&bldtable',
14:59:38  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:59:38  12  
14:59:38  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
14:59:38  14  	  miss_table_name => 'svmc_miss_cat',
14:59:38  15  	  data_table_name => '&bldtable',
14:59:38  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:59:38  17  
14:59:38  18  	-- xform input data to replace missing values
14:59:38  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:59:38  20  	  miss_table_name => 'svmc_miss_num',
14:59:38  21  	  data_table_name => '&bldtable',
14:59:38  22  	  xform_view_name => 'xformed_build_miss_num');
14:59:38  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:59:38  24  	  miss_table_name => 'svmc_miss_cat',
14:59:38  25  	  data_table_name => '&bldtable',
14:59:38  26  	  xform_view_name => 'xformed_build_miss_cat');
14:59:38  27  
14:59:38  28  	-- Perform outlier treatment.
14:59:38  29  	-- create clip table
14:59:38  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
14:59:38  31  
14:59:38  32  	-- populate clip table
14:59:38  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
14:59:38  34  	  clip_table_name => 'svmc_clip',
14:59:38  35  	  data_table_name => '&bldtable',
14:59:38  36  	  tail_frac	  => 0.025,
14:59:38  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:59:38  38  
14:59:38  39  	-- xform input data to winsorized data
14:59:38  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
14:59:38  41  	  clip_table_name => 'svmc_clip',
14:59:38  42  	  data_table_name => '&bldtable',
14:59:38  43  	  xform_view_name => 'svmc_winsor');
14:59:38  44  
14:59:38  45  	-- create normalization table
14:59:38  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
14:59:38  47  
14:59:38  48  	-- populate normalization table based on winsorized data
14:59:38  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
14:59:38  50  	  norm_table_name => 'svmc_norm',
14:59:38  51  	  data_table_name => 'svmc_winsor',
14:59:38  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:59:38  53  
14:59:38  54  	-- normalize the original data
14:59:38  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:59:38  56  	  norm_table_name => 'svmc_norm',
14:59:38  57  	  data_table_name => '&bldtable',
14:59:38  58  	  xform_view_name => 'svmc_build_prep');
14:59:38  59  END;
14:59:38  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.85
14:59:56 SQL> 
14:59:56 SQL> ---------------------
14:59:56 SQL> -- CREATE A NEW MODEL
14:59:56 SQL> --
14:59:56 SQL> -- Cleanup old model with the same name for repeat runs
14:59:56 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
14:59:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:59:56   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.52
14:59:57 SQL> 
14:59:57 SQL> -- Build a new SVM Model
14:59:57 SQL> BEGIN
14:59:57   2  	DBMS_DATA_MINING.CREATE_MODEL(
14:59:57   3  	  model_name	      => '&model_name',
14:59:57   4  	  mining_function     => dbms_data_mining.classification,
14:59:57   5  	  data_table_name     => 'svmc_build_prep',
14:59:57   6  	  case_id_column_name => '&case_id',
14:59:57   7  	  target_column_name  => '&target',
14:59:57   8  	  settings_table_name => 'svmc_settings');
14:59:57   9  END;
14:59:57  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.92
15:00:27 SQL> 
15:00:27 SQL> -----------------------------------------------------------------------
15:00:27 SQL> --			       APPLY/score THE MODEL
15:00:27 SQL> -----------------------------------------------------------------------
15:00:27 SQL> 
15:00:27 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:00:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:00:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:00:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:00:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:00:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:00:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
15:00:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:00:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:00:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
15:00:27 SQL> -----------------------
15:00:27 SQL> -- PREPARE SCORING DATA
15:00:27 SQL> --
15:00:27 SQL> -- If the data for model creation has been prepared, then the data
15:00:27 SQL> -- to be scored using the model must be prepared in the same manner
15:00:27 SQL> -- in order to obtain meaningful results.
15:00:27 SQL> --
15:00:27 SQL> -- 1. Missing Value treatment for all Predictors and
15:00:27 SQL> -- 2. Normalization
15:00:27 SQL> -- No outlier treatment will be performed during test and apply. The
15:00:27 SQL> -- normalization step is sufficient, since the normalization parameters
15:00:27 SQL> -- already capture the effects of outlier treatment done with build data.
15:00:27 SQL> --
15:00:27 SQL> BEGIN
15:00:27   2  	-- Xform Test data to replace missing values
15:00:27   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:00:27   4  	  miss_table_name => 'svmc_miss_num',
15:00:27   5  	  data_table_name => '&scoretable',
15:00:27   6  	  xform_view_name => 'xformed_apply_miss_num');
15:00:27   7  
15:00:27   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:00:27   9  	  miss_table_name => 'svmc_miss_cat',
15:00:27  10  	  data_table_name => '&scoretable',
15:00:27  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:00:27  12  
15:00:27  13  	-- Normalize the data to be scored
15:00:27  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:00:27  15  	  norm_table_name => 'svmc_norm',
15:00:27  16  	  data_table_name => '&scoretable',
15:00:27  17  	  xform_view_name => 'svmc_apply_prep');
15:00:27  18  END;
15:00:27  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.25
15:00:28 SQL> 
15:00:28 SQL> -- Use same model_name used in score.sql
15:00:28 SQL> DEFINE model_name = 'forex15'
15:00:28 SQL> 
15:00:28 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
15:00:28 SQL> 
15:00:28 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
15:00:28 SQL> 
15:00:28 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
15:00:28   2  SELECT
15:00:28   3  prdate
15:00:28   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:00:28   5  ,sysdate
15:00:28   6  ,SUBSTR(prdate,1,3)pair
15:00:28   7  ,SUBSTR(prdate,4,19)ydate
15:00:28   8  FROM svmc_apply_prep
15:00:28   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:00:29 SQL> @aud_score1day.sql  2011-01-06 14:40:00
15:00:29 SQL> --
15:00:29 SQL> -- aud_score1day.sql
15:00:29 SQL> --
15:00:29 SQL> 
15:00:29 SQL> CREATE OR REPLACE VIEW sme AS
15:00:29   2  SELECT
15:00:29   3  'aud'||m.ydate prdate
15:00:29   4  ,NULL gatt
15:00:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:00:29   6  ,eur_g00
15:00:29   7  ,eur_g01
15:00:29   8  ,eur_g02
15:00:29   9  ,eur_g03
15:00:29  10  ,eur_g04
15:00:29  11  ,eur_g05
15:00:29  12  ,eur_g06
15:00:29  13  ,eur_g07
15:00:29  14  ,eur_g08
15:00:29  15  ,eur_g09
15:00:29  16  ,eur_g10
15:00:29  17  ,eur_g11
15:00:29  18  ,eur_g12
15:00:29  19  ,eur_g13
15:00:29  20  ,eur_g14
15:00:29  21  ,eur_g15
15:00:29  22  ,eur_g16
15:00:29  23  ,eur_g17
15:00:29  24  ,eur_g18
15:00:29  25  ,eur_g19
15:00:29  26  ,eur_g20
15:00:29  27  ,eur_g21
15:00:29  28  ,eur_g22
15:00:29  29  ,eur_g23
15:00:29  30  ,eur_g24
15:00:29  31  ,eur_g25
15:00:29  32  ,eur_g26
15:00:29  33  ,eur_g27
15:00:29  34  ,eur_g28
15:00:29  35  ,eur_g29
15:00:29  36  ,eur_g30
15:00:29  37  ,eur_g31
15:00:29  38  ,eur_g32
15:00:29  39  ,eur_g33
15:00:29  40  ,eur_g34
15:00:29  41  ,eur_g35
15:00:29  42  ,eur_g36
15:00:29  43  ,eur_g37
15:00:29  44  ,eur_g38
15:00:29  45  ,eur_g39
15:00:29  46  ,eur_g40
15:00:29  47  ,eur_g41
15:00:29  48  ,aud_g00
15:00:29  49  ,aud_g01
15:00:29  50  ,aud_g02
15:00:29  51  ,aud_g03
15:00:29  52  ,aud_g04
15:00:29  53  ,aud_g05
15:00:29  54  ,aud_g06
15:00:29  55  ,aud_g07
15:00:29  56  ,aud_g08
15:00:29  57  ,aud_g09
15:00:29  58  ,aud_g10
15:00:29  59  ,aud_g11
15:00:29  60  ,aud_g12
15:00:29  61  ,aud_g13
15:00:29  62  ,aud_g14
15:00:29  63  ,aud_g15
15:00:29  64  ,aud_g16
15:00:29  65  ,aud_g17
15:00:29  66  ,aud_g18
15:00:29  67  ,aud_g19
15:00:29  68  ,aud_g20
15:00:29  69  ,aud_g21
15:00:29  70  ,aud_g22
15:00:29  71  ,aud_g23
15:00:29  72  ,aud_g24
15:00:29  73  ,aud_g25
15:00:29  74  ,aud_g26
15:00:29  75  ,aud_g27
15:00:29  76  ,aud_g28
15:00:29  77  ,aud_g29
15:00:29  78  ,aud_g30
15:00:29  79  ,aud_g31
15:00:29  80  ,aud_g32
15:00:29  81  ,aud_g33
15:00:29  82  ,aud_g34
15:00:29  83  ,aud_g35
15:00:29  84  ,aud_g36
15:00:29  85  ,aud_g37
15:00:29  86  ,aud_g38
15:00:29  87  ,aud_g39
15:00:29  88  ,aud_g40
15:00:29  89  ,aud_g41
15:00:29  90  ,gbp_g00
15:00:29  91  ,gbp_g01
15:00:29  92  ,gbp_g02
15:00:29  93  ,gbp_g03
15:00:29  94  ,gbp_g04
15:00:29  95  ,gbp_g05
15:00:29  96  ,gbp_g06
15:00:29  97  ,gbp_g07
15:00:29  98  ,gbp_g08
15:00:29  99  ,gbp_g09
15:00:29 100  ,gbp_g10
15:00:29 101  ,gbp_g11
15:00:29 102  ,gbp_g12
15:00:29 103  ,gbp_g13
15:00:29 104  ,gbp_g14
15:00:29 105  ,gbp_g15
15:00:29 106  ,gbp_g16
15:00:29 107  ,gbp_g17
15:00:29 108  ,gbp_g18
15:00:29 109  ,gbp_g19
15:00:29 110  ,gbp_g20
15:00:29 111  ,gbp_g21
15:00:29 112  ,gbp_g22
15:00:29 113  ,gbp_g23
15:00:29 114  ,gbp_g24
15:00:29 115  ,gbp_g25
15:00:29 116  ,gbp_g26
15:00:29 117  ,gbp_g27
15:00:29 118  ,gbp_g28
15:00:29 119  ,gbp_g29
15:00:29 120  ,gbp_g30
15:00:29 121  ,gbp_g31
15:00:29 122  ,gbp_g32
15:00:29 123  ,gbp_g33
15:00:29 124  ,gbp_g34
15:00:29 125  ,gbp_g35
15:00:29 126  ,gbp_g36
15:00:29 127  ,gbp_g37
15:00:29 128  ,gbp_g38
15:00:29 129  ,gbp_g39
15:00:29 130  ,gbp_g40
15:00:29 131  ,gbp_g41
15:00:29 132  ,jpy_g00
15:00:29 133  ,jpy_g01
15:00:29 134  ,jpy_g02
15:00:29 135  ,jpy_g03
15:00:29 136  ,jpy_g04
15:00:29 137  ,jpy_g05
15:00:29 138  ,jpy_g06
15:00:29 139  ,jpy_g07
15:00:29 140  ,jpy_g08
15:00:29 141  ,jpy_g09
15:00:29 142  ,jpy_g10
15:00:29 143  ,jpy_g11
15:00:29 144  ,jpy_g12
15:00:29 145  ,jpy_g13
15:00:29 146  ,jpy_g14
15:00:29 147  ,jpy_g15
15:00:29 148  ,jpy_g16
15:00:29 149  ,jpy_g17
15:00:29 150  ,jpy_g18
15:00:29 151  ,jpy_g19
15:00:29 152  ,jpy_g20
15:00:29 153  ,jpy_g21
15:00:29 154  ,jpy_g22
15:00:29 155  ,jpy_g23
15:00:29 156  ,jpy_g24
15:00:29 157  ,jpy_g25
15:00:29 158  ,jpy_g26
15:00:29 159  ,jpy_g27
15:00:29 160  ,jpy_g28
15:00:29 161  ,jpy_g29
15:00:29 162  ,jpy_g30
15:00:29 163  ,jpy_g31
15:00:29 164  ,jpy_g32
15:00:29 165  ,jpy_g33
15:00:29 166  ,jpy_g34
15:00:29 167  ,jpy_g35
15:00:29 168  ,jpy_g36
15:00:29 169  ,jpy_g37
15:00:29 170  ,jpy_g38
15:00:29 171  ,jpy_g39
15:00:29 172  ,jpy_g40
15:00:29 173  ,jpy_g41
15:00:29 174  ,cad_g00
15:00:29 175  ,cad_g01
15:00:29 176  ,cad_g02
15:00:29 177  ,cad_g03
15:00:29 178  ,cad_g04
15:00:29 179  ,cad_g05
15:00:29 180  ,cad_g06
15:00:29 181  ,cad_g07
15:00:29 182  ,cad_g08
15:00:29 183  ,cad_g09
15:00:29 184  ,cad_g10
15:00:29 185  ,cad_g11
15:00:29 186  ,cad_g12
15:00:29 187  ,cad_g13
15:00:29 188  ,cad_g14
15:00:29 189  ,cad_g15
15:00:29 190  ,cad_g16
15:00:29 191  ,cad_g17
15:00:29 192  ,cad_g18
15:00:29 193  ,cad_g19
15:00:29 194  ,cad_g20
15:00:29 195  ,cad_g21
15:00:29 196  ,cad_g22
15:00:29 197  ,cad_g23
15:00:29 198  ,cad_g24
15:00:29 199  ,cad_g25
15:00:29 200  ,cad_g26
15:00:29 201  ,cad_g27
15:00:29 202  ,cad_g28
15:00:29 203  ,cad_g29
15:00:29 204  ,cad_g30
15:00:29 205  ,cad_g31
15:00:29 206  ,cad_g32
15:00:29 207  ,cad_g33
15:00:29 208  ,cad_g34
15:00:29 209  ,cad_g35
15:00:29 210  ,cad_g36
15:00:29 211  ,cad_g37
15:00:29 212  ,cad_g38
15:00:29 213  ,cad_g39
15:00:29 214  ,cad_g40
15:00:29 215  ,cad_g41
15:00:29 216  ,chf_g00
15:00:29 217  ,chf_g01
15:00:29 218  ,chf_g02
15:00:29 219  ,chf_g03
15:00:29 220  ,chf_g04
15:00:29 221  ,chf_g05
15:00:29 222  ,chf_g06
15:00:29 223  ,chf_g07
15:00:29 224  ,chf_g08
15:00:29 225  ,chf_g09
15:00:29 226  ,chf_g10
15:00:29 227  ,chf_g11
15:00:29 228  ,chf_g12
15:00:29 229  ,chf_g13
15:00:29 230  ,chf_g14
15:00:29 231  ,chf_g15
15:00:29 232  ,chf_g16
15:00:29 233  ,chf_g17
15:00:29 234  ,chf_g18
15:00:29 235  ,chf_g19
15:00:29 236  ,chf_g20
15:00:29 237  ,chf_g21
15:00:29 238  ,chf_g22
15:00:29 239  ,chf_g23
15:00:29 240  ,chf_g24
15:00:29 241  ,chf_g25
15:00:29 242  ,chf_g26
15:00:29 243  ,chf_g27
15:00:29 244  ,chf_g28
15:00:29 245  ,chf_g29
15:00:29 246  ,chf_g30
15:00:29 247  ,chf_g31
15:00:29 248  ,chf_g32
15:00:29 249  ,chf_g33
15:00:29 250  ,chf_g34
15:00:29 251  ,chf_g35
15:00:29 252  ,chf_g36
15:00:29 253  ,chf_g37
15:00:29 254  ,chf_g38
15:00:29 255  ,chf_g39
15:00:29 256  ,chf_g40
15:00:29 257  ,chf_g41
15:00:29 258  FROM aud_ms6 m
15:00:29 259  WHERE m.ydate = '&1'||' '||'&2'
15:00:29 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'14:40:00'

View created.

Elapsed: 00:00:00.13
15:00:29 SQL> 
15:00:29 SQL> -- rpt
15:00:29 SQL> -- We should see just 1 row:
15:00:29 SQL> 
15:00:29 SQL> SELECT COUNT(prdate) FROM sme
15:00:29   2  
15:00:29 SQL> -- Build the model:
15:00:29 SQL> CREATE OR REPLACE VIEW bme AS
15:00:29   2  SELECT
15:00:29   3  'aud'||m.ydate prdate
15:00:29   4  ,gatt
15:00:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:00:29   6  ,eur_g00
15:00:29   7  ,eur_g01
15:00:29   8  ,eur_g02
15:00:29   9  ,eur_g03
15:00:29  10  ,eur_g04
15:00:29  11  ,eur_g05
15:00:29  12  ,eur_g06
15:00:29  13  ,eur_g07
15:00:29  14  ,eur_g08
15:00:29  15  ,eur_g09
15:00:29  16  ,eur_g10
15:00:29  17  ,eur_g11
15:00:29  18  ,eur_g12
15:00:29  19  ,eur_g13
15:00:29  20  ,eur_g14
15:00:29  21  ,eur_g15
15:00:29  22  ,eur_g16
15:00:29  23  ,eur_g17
15:00:29  24  ,eur_g18
15:00:29  25  ,eur_g19
15:00:29  26  ,eur_g20
15:00:29  27  ,eur_g21
15:00:29  28  ,eur_g22
15:00:29  29  ,eur_g23
15:00:29  30  ,eur_g24
15:00:29  31  ,eur_g25
15:00:29  32  ,eur_g26
15:00:29  33  ,eur_g27
15:00:29  34  ,eur_g28
15:00:29  35  ,eur_g29
15:00:29  36  ,eur_g30
15:00:29  37  ,eur_g31
15:00:29  38  ,eur_g32
15:00:29  39  ,eur_g33
15:00:29  40  ,eur_g34
15:00:29  41  ,eur_g35
15:00:29  42  ,eur_g36
15:00:29  43  ,eur_g37
15:00:29  44  ,eur_g38
15:00:29  45  ,eur_g39
15:00:29  46  ,eur_g40
15:00:29  47  ,eur_g41
15:00:29  48  ,aud_g00
15:00:29  49  ,aud_g01
15:00:29  50  ,aud_g02
15:00:29  51  ,aud_g03
15:00:29  52  ,aud_g04
15:00:29  53  ,aud_g05
15:00:29  54  ,aud_g06
15:00:29  55  ,aud_g07
15:00:29  56  ,aud_g08
15:00:29  57  ,aud_g09
15:00:29  58  ,aud_g10
15:00:29  59  ,aud_g11
15:00:29  60  ,aud_g12
15:00:29  61  ,aud_g13
15:00:29  62  ,aud_g14
15:00:29  63  ,aud_g15
15:00:29  64  ,aud_g16
15:00:29  65  ,aud_g17
15:00:29  66  ,aud_g18
15:00:29  67  ,aud_g19
15:00:29  68  ,aud_g20
15:00:29  69  ,aud_g21
15:00:29  70  ,aud_g22
15:00:29  71  ,aud_g23
15:00:29  72  ,aud_g24
15:00:29  73  ,aud_g25
15:00:29  74  ,aud_g26
15:00:29  75  ,aud_g27
15:00:29  76  ,aud_g28
15:00:29  77  ,aud_g29
15:00:29  78  ,aud_g30
15:00:29  79  ,aud_g31
15:00:29  80  ,aud_g32
15:00:29  81  ,aud_g33
15:00:29  82  ,aud_g34
15:00:29  83  ,aud_g35
15:00:29  84  ,aud_g36
15:00:29  85  ,aud_g37
15:00:29  86  ,aud_g38
15:00:29  87  ,aud_g39
15:00:29  88  ,aud_g40
15:00:29  89  ,aud_g41
15:00:29  90  ,gbp_g00
15:00:29  91  ,gbp_g01
15:00:29  92  ,gbp_g02
15:00:29  93  ,gbp_g03
15:00:29  94  ,gbp_g04
15:00:29  95  ,gbp_g05
15:00:29  96  ,gbp_g06
15:00:29  97  ,gbp_g07
15:00:29  98  ,gbp_g08
15:00:29  99  ,gbp_g09
15:00:29 100  ,gbp_g10
15:00:29 101  ,gbp_g11
15:00:29 102  ,gbp_g12
15:00:29 103  ,gbp_g13
15:00:29 104  ,gbp_g14
15:00:29 105  ,gbp_g15
15:00:29 106  ,gbp_g16
15:00:29 107  ,gbp_g17
15:00:29 108  ,gbp_g18
15:00:29 109  ,gbp_g19
15:00:29 110  ,gbp_g20
15:00:29 111  ,gbp_g21
15:00:29 112  ,gbp_g22
15:00:29 113  ,gbp_g23
15:00:29 114  ,gbp_g24
15:00:29 115  ,gbp_g25
15:00:29 116  ,gbp_g26
15:00:29 117  ,gbp_g27
15:00:29 118  ,gbp_g28
15:00:29 119  ,gbp_g29
15:00:29 120  ,gbp_g30
15:00:29 121  ,gbp_g31
15:00:29 122  ,gbp_g32
15:00:29 123  ,gbp_g33
15:00:29 124  ,gbp_g34
15:00:29 125  ,gbp_g35
15:00:29 126  ,gbp_g36
15:00:29 127  ,gbp_g37
15:00:29 128  ,gbp_g38
15:00:29 129  ,gbp_g39
15:00:29 130  ,gbp_g40
15:00:29 131  ,gbp_g41
15:00:29 132  ,jpy_g00
15:00:29 133  ,jpy_g01
15:00:29 134  ,jpy_g02
15:00:29 135  ,jpy_g03
15:00:29 136  ,jpy_g04
15:00:29 137  ,jpy_g05
15:00:29 138  ,jpy_g06
15:00:29 139  ,jpy_g07
15:00:29 140  ,jpy_g08
15:00:29 141  ,jpy_g09
15:00:29 142  ,jpy_g10
15:00:29 143  ,jpy_g11
15:00:29 144  ,jpy_g12
15:00:29 145  ,jpy_g13
15:00:29 146  ,jpy_g14
15:00:29 147  ,jpy_g15
15:00:29 148  ,jpy_g16
15:00:29 149  ,jpy_g17
15:00:29 150  ,jpy_g18
15:00:29 151  ,jpy_g19
15:00:29 152  ,jpy_g20
15:00:29 153  ,jpy_g21
15:00:29 154  ,jpy_g22
15:00:29 155  ,jpy_g23
15:00:29 156  ,jpy_g24
15:00:29 157  ,jpy_g25
15:00:29 158  ,jpy_g26
15:00:29 159  ,jpy_g27
15:00:29 160  ,jpy_g28
15:00:29 161  ,jpy_g29
15:00:29 162  ,jpy_g30
15:00:29 163  ,jpy_g31
15:00:29 164  ,jpy_g32
15:00:29 165  ,jpy_g33
15:00:29 166  ,jpy_g34
15:00:29 167  ,jpy_g35
15:00:29 168  ,jpy_g36
15:00:29 169  ,jpy_g37
15:00:29 170  ,jpy_g38
15:00:29 171  ,jpy_g39
15:00:29 172  ,jpy_g40
15:00:29 173  ,jpy_g41
15:00:29 174  ,cad_g00
15:00:29 175  ,cad_g01
15:00:29 176  ,cad_g02
15:00:29 177  ,cad_g03
15:00:29 178  ,cad_g04
15:00:29 179  ,cad_g05
15:00:29 180  ,cad_g06
15:00:29 181  ,cad_g07
15:00:29 182  ,cad_g08
15:00:29 183  ,cad_g09
15:00:29 184  ,cad_g10
15:00:29 185  ,cad_g11
15:00:29 186  ,cad_g12
15:00:29 187  ,cad_g13
15:00:29 188  ,cad_g14
15:00:29 189  ,cad_g15
15:00:29 190  ,cad_g16
15:00:29 191  ,cad_g17
15:00:29 192  ,cad_g18
15:00:29 193  ,cad_g19
15:00:29 194  ,cad_g20
15:00:29 195  ,cad_g21
15:00:29 196  ,cad_g22
15:00:29 197  ,cad_g23
15:00:29 198  ,cad_g24
15:00:29 199  ,cad_g25
15:00:29 200  ,cad_g26
15:00:29 201  ,cad_g27
15:00:29 202  ,cad_g28
15:00:29 203  ,cad_g29
15:00:29 204  ,cad_g30
15:00:29 205  ,cad_g31
15:00:29 206  ,cad_g32
15:00:29 207  ,cad_g33
15:00:29 208  ,cad_g34
15:00:29 209  ,cad_g35
15:00:29 210  ,cad_g36
15:00:29 211  ,cad_g37
15:00:29 212  ,cad_g38
15:00:29 213  ,cad_g39
15:00:29 214  ,cad_g40
15:00:29 215  ,cad_g41
15:00:29 216  ,chf_g00
15:00:29 217  ,chf_g01
15:00:29 218  ,chf_g02
15:00:29 219  ,chf_g03
15:00:29 220  ,chf_g04
15:00:29 221  ,chf_g05
15:00:29 222  ,chf_g06
15:00:29 223  ,chf_g07
15:00:29 224  ,chf_g08
15:00:29 225  ,chf_g09
15:00:29 226  ,chf_g10
15:00:29 227  ,chf_g11
15:00:29 228  ,chf_g12
15:00:29 229  ,chf_g13
15:00:29 230  ,chf_g14
15:00:29 231  ,chf_g15
15:00:29 232  ,chf_g16
15:00:29 233  ,chf_g17
15:00:29 234  ,chf_g18
15:00:29 235  ,chf_g19
15:00:29 236  ,chf_g20
15:00:29 237  ,chf_g21
15:00:29 238  ,chf_g22
15:00:29 239  ,chf_g23
15:00:29 240  ,chf_g24
15:00:29 241  ,chf_g25
15:00:29 242  ,chf_g26
15:00:29 243  ,chf_g27
15:00:29 244  ,chf_g28
15:00:29 245  ,chf_g29
15:00:29 246  ,chf_g30
15:00:29 247  ,chf_g31
15:00:29 248  ,chf_g32
15:00:29 249  ,chf_g33
15:00:29 250  ,chf_g34
15:00:29 251  ,chf_g35
15:00:29 252  ,chf_g36
15:00:29 253  ,chf_g37
15:00:29 254  ,chf_g38
15:00:29 255  ,chf_g39
15:00:29 256  ,chf_g40
15:00:29 257  ,chf_g41
15:00:29 258  FROM aud_ms6 m
15:00:29 259  WHERE gatt IN('nup','up')
15:00:29 260  AND 1+m.ydate < '&1'||' '||'&2'
15:00:29 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'14:40:00'

View created.

Elapsed: 00:00:00.12
15:00:29 SQL> 
15:00:29 SQL> -- rpt
15:00:29 SQL> 
15:00:29 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
15:00:29   2  
15:00:29 SQL> SELECT MAX(prdate) FROM bme
15:00:29   2  
15:00:29 SQL> -- Now build model from bme and score sme
15:00:29 SQL> @score1.sql
15:00:29 SQL> -- score1.sql
15:00:29 SQL> 
15:00:29 SQL> -- Does the 1st SVM score
15:00:29 SQL> 
15:00:29 SQL> -- Fill up svmc_apply_prep
15:00:29 SQL> @score.sql
15:00:29 SQL> --
15:00:29 SQL> -- score.sql
15:00:29 SQL> --
15:00:29 SQL> 
15:00:29 SQL> -- usage: score.sql
15:00:29 SQL> 
15:00:29 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:00:29 SQL> 
15:00:29 SQL> DEFINE target	= 'gatt'
15:00:29 SQL> DEFINE model_name = 'forex15'
15:00:29 SQL> DEFINE bldtable	= 'bme'
15:00:29 SQL> DEFINE scoretable = 'sme'
15:00:29 SQL> DEFINE case_id	= 'prdate'
15:00:29 SQL> 
15:00:29 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:00:29 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:00:29 SQL> 
15:00:29 SQL> -- Builds an SVM model using pl/sql.
15:00:29 SQL> 
15:00:29 SQL> -----------------------------------------------------------------------
15:00:29 SQL> --			    BUILD THE MODEL
15:00:29 SQL> -----------------------------------------------------------------------
15:00:29 SQL> 
15:00:29 SQL> -- Cleanup old build data preparation objects for repeat runs
15:00:29 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
15:00:29 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:00:29 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
15:00:29 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
15:00:29 SQL> 
15:00:29 SQL> 
15:00:29 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:00:29 SQL> --
15:00:29 SQL> -- DROP	TABLE svmc_settings ;
15:00:29 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:00:29 SQL> -- DELETE svmc_settings;
15:00:29 SQL> 
15:00:29 SQL> -- The default classification algorithm is Naive Bayes. So override
15:00:29 SQL> -- this choice to SVM using a settings table.
15:00:29 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:00:29 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:00:29 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:00:29 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:00:29 SQL> -- models.
15:00:29 SQL> --
15:00:29 SQL> 
15:00:29 SQL> -- Do this once and then comment it out.
15:00:29 SQL> -- That makes script go faster.
15:00:29 SQL> -- BEGIN
15:00:29 SQL> -- -- Populate settings table
15:00:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:00:29 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:00:29 SQL> --
15:00:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:00:29 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:00:29 SQL> --
15:00:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:00:29 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:00:29 SQL> --   COMMIT;
15:00:29 SQL> -- END;
15:00:29 SQL> -- /
15:00:29 SQL> 
15:00:29 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:00:29 SQL> 
15:00:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:00:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:00:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:00:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:00:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:00:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:00:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:00:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:00:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:00:29 SQL> 
15:00:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:00:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:00:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:00:29 SQL> 
15:00:29 SQL> --------------------------------
15:00:29 SQL> -- PREPARE BUILD (TRAINING) DATA
15:00:29 SQL> --
15:00:29 SQL> 
15:00:29 SQL> -- 1. Missing Value treatment for all Predictors and
15:00:29 SQL> -- 2. Outlier Treatment and
15:00:29 SQL> -- 3. Normalization are performed below.
15:00:29 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:00:29 SQL> --    normalized here.
15:00:29 SQL> 
15:00:29 SQL> BEGIN
15:00:29   2  	-- Perform missing value treatment for all predictors
15:00:29   3  	-- create miss tables
15:00:29   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:00:29   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:00:29   6  
15:00:29   7  	-- populate miss tables
15:00:29   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:00:29   9  	  miss_table_name => 'svmc_miss_num',
15:00:29  10  	  data_table_name => '&bldtable',
15:00:29  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:00:29  12  
15:00:29  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:00:29  14  	  miss_table_name => 'svmc_miss_cat',
15:00:29  15  	  data_table_name => '&bldtable',
15:00:29  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:00:29  17  
15:00:29  18  	-- xform input data to replace missing values
15:00:29  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:00:29  20  	  miss_table_name => 'svmc_miss_num',
15:00:29  21  	  data_table_name => '&bldtable',
15:00:29  22  	  xform_view_name => 'xformed_build_miss_num');
15:00:29  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:00:29  24  	  miss_table_name => 'svmc_miss_cat',
15:00:29  25  	  data_table_name => '&bldtable',
15:00:29  26  	  xform_view_name => 'xformed_build_miss_cat');
15:00:29  27  
15:00:29  28  	-- Perform outlier treatment.
15:00:29  29  	-- create clip table
15:00:29  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:00:29  31  
15:00:29  32  	-- populate clip table
15:00:29  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:00:29  34  	  clip_table_name => 'svmc_clip',
15:00:29  35  	  data_table_name => '&bldtable',
15:00:29  36  	  tail_frac	  => 0.025,
15:00:29  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:00:29  38  
15:00:29  39  	-- xform input data to winsorized data
15:00:29  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:00:29  41  	  clip_table_name => 'svmc_clip',
15:00:29  42  	  data_table_name => '&bldtable',
15:00:29  43  	  xform_view_name => 'svmc_winsor');
15:00:29  44  
15:00:29  45  	-- create normalization table
15:00:29  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:00:29  47  
15:00:29  48  	-- populate normalization table based on winsorized data
15:00:29  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:00:29  50  	  norm_table_name => 'svmc_norm',
15:00:29  51  	  data_table_name => 'svmc_winsor',
15:00:29  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:00:29  53  
15:00:29  54  	-- normalize the original data
15:00:29  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:00:29  56  	  norm_table_name => 'svmc_norm',
15:00:29  57  	  data_table_name => '&bldtable',
15:00:29  58  	  xform_view_name => 'svmc_build_prep');
15:00:29  59  END;
15:00:29  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.35
15:00:47 SQL> 
15:00:47 SQL> ---------------------
15:00:47 SQL> -- CREATE A NEW MODEL
15:00:47 SQL> --
15:00:47 SQL> -- Cleanup old model with the same name for repeat runs
15:00:47 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:00:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:00:47   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.99
15:00:48 SQL> 
15:00:48 SQL> -- Build a new SVM Model
15:00:48 SQL> BEGIN
15:00:48   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:00:48   3  	  model_name	      => '&model_name',
15:00:48   4  	  mining_function     => dbms_data_mining.classification,
15:00:48   5  	  data_table_name     => 'svmc_build_prep',
15:00:48   6  	  case_id_column_name => '&case_id',
15:00:48   7  	  target_column_name  => '&target',
15:00:48   8  	  settings_table_name => 'svmc_settings');
15:00:48   9  END;
15:00:48  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.64
15:01:16 SQL> 
15:01:16 SQL> -----------------------------------------------------------------------
15:01:16 SQL> --			       APPLY/score THE MODEL
15:01:16 SQL> -----------------------------------------------------------------------
15:01:16 SQL> 
15:01:16 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:01:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:01:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:01:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:01:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:01:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:01:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:01:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:01:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:01:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:01:16 SQL> -----------------------
15:01:16 SQL> -- PREPARE SCORING DATA
15:01:16 SQL> --
15:01:16 SQL> -- If the data for model creation has been prepared, then the data
15:01:16 SQL> -- to be scored using the model must be prepared in the same manner
15:01:16 SQL> -- in order to obtain meaningful results.
15:01:16 SQL> --
15:01:16 SQL> -- 1. Missing Value treatment for all Predictors and
15:01:16 SQL> -- 2. Normalization
15:01:16 SQL> -- No outlier treatment will be performed during test and apply. The
15:01:16 SQL> -- normalization step is sufficient, since the normalization parameters
15:01:16 SQL> -- already capture the effects of outlier treatment done with build data.
15:01:16 SQL> --
15:01:16 SQL> BEGIN
15:01:16   2  	-- Xform Test data to replace missing values
15:01:16   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:01:16   4  	  miss_table_name => 'svmc_miss_num',
15:01:16   5  	  data_table_name => '&scoretable',
15:01:16   6  	  xform_view_name => 'xformed_apply_miss_num');
15:01:16   7  
15:01:16   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:01:16   9  	  miss_table_name => 'svmc_miss_cat',
15:01:16  10  	  data_table_name => '&scoretable',
15:01:16  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:01:16  12  
15:01:16  13  	-- Normalize the data to be scored
15:01:16  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:01:16  15  	  norm_table_name => 'svmc_norm',
15:01:16  16  	  data_table_name => '&scoretable',
15:01:16  17  	  xform_view_name => 'svmc_apply_prep');
15:01:16  18  END;
15:01:16  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.31
15:01:18 SQL> 
15:01:18 SQL> -- Use same model_name used in score.sql
15:01:18 SQL> DEFINE model_name = 'forex15'
15:01:18 SQL> 
15:01:18 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
15:01:18 SQL> 
15:01:18 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
15:01:18 SQL> 
15:01:18 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
15:01:18   2  SELECT
15:01:18   3  prdate
15:01:18   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:01:18   5  ,sysdate
15:01:18   6  ,SUBSTR(prdate,1,3)pair
15:01:18   7  ,SUBSTR(prdate,4,19)ydate
15:01:18   8  FROM svmc_apply_prep
15:01:18   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:01:18 SQL> @aud_score1day.sql  2011-01-06 14:45:00
15:01:18 SQL> --
15:01:18 SQL> -- aud_score1day.sql
15:01:18 SQL> --
15:01:18 SQL> 
15:01:18 SQL> CREATE OR REPLACE VIEW sme AS
15:01:18   2  SELECT
15:01:18   3  'aud'||m.ydate prdate
15:01:18   4  ,NULL gatt
15:01:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:01:18   6  ,eur_g00
15:01:18   7  ,eur_g01
15:01:18   8  ,eur_g02
15:01:18   9  ,eur_g03
15:01:18  10  ,eur_g04
15:01:18  11  ,eur_g05
15:01:18  12  ,eur_g06
15:01:18  13  ,eur_g07
15:01:18  14  ,eur_g08
15:01:18  15  ,eur_g09
15:01:18  16  ,eur_g10
15:01:18  17  ,eur_g11
15:01:18  18  ,eur_g12
15:01:18  19  ,eur_g13
15:01:18  20  ,eur_g14
15:01:18  21  ,eur_g15
15:01:18  22  ,eur_g16
15:01:18  23  ,eur_g17
15:01:18  24  ,eur_g18
15:01:18  25  ,eur_g19
15:01:18  26  ,eur_g20
15:01:18  27  ,eur_g21
15:01:18  28  ,eur_g22
15:01:18  29  ,eur_g23
15:01:18  30  ,eur_g24
15:01:18  31  ,eur_g25
15:01:18  32  ,eur_g26
15:01:18  33  ,eur_g27
15:01:18  34  ,eur_g28
15:01:18  35  ,eur_g29
15:01:18  36  ,eur_g30
15:01:18  37  ,eur_g31
15:01:18  38  ,eur_g32
15:01:18  39  ,eur_g33
15:01:18  40  ,eur_g34
15:01:18  41  ,eur_g35
15:01:18  42  ,eur_g36
15:01:18  43  ,eur_g37
15:01:18  44  ,eur_g38
15:01:18  45  ,eur_g39
15:01:18  46  ,eur_g40
15:01:18  47  ,eur_g41
15:01:18  48  ,aud_g00
15:01:18  49  ,aud_g01
15:01:18  50  ,aud_g02
15:01:18  51  ,aud_g03
15:01:18  52  ,aud_g04
15:01:18  53  ,aud_g05
15:01:18  54  ,aud_g06
15:01:18  55  ,aud_g07
15:01:18  56  ,aud_g08
15:01:18  57  ,aud_g09
15:01:18  58  ,aud_g10
15:01:18  59  ,aud_g11
15:01:18  60  ,aud_g12
15:01:18  61  ,aud_g13
15:01:18  62  ,aud_g14
15:01:18  63  ,aud_g15
15:01:18  64  ,aud_g16
15:01:18  65  ,aud_g17
15:01:18  66  ,aud_g18
15:01:18  67  ,aud_g19
15:01:18  68  ,aud_g20
15:01:18  69  ,aud_g21
15:01:18  70  ,aud_g22
15:01:18  71  ,aud_g23
15:01:18  72  ,aud_g24
15:01:18  73  ,aud_g25
15:01:18  74  ,aud_g26
15:01:18  75  ,aud_g27
15:01:18  76  ,aud_g28
15:01:18  77  ,aud_g29
15:01:18  78  ,aud_g30
15:01:18  79  ,aud_g31
15:01:18  80  ,aud_g32
15:01:18  81  ,aud_g33
15:01:18  82  ,aud_g34
15:01:18  83  ,aud_g35
15:01:18  84  ,aud_g36
15:01:18  85  ,aud_g37
15:01:18  86  ,aud_g38
15:01:18  87  ,aud_g39
15:01:18  88  ,aud_g40
15:01:18  89  ,aud_g41
15:01:18  90  ,gbp_g00
15:01:18  91  ,gbp_g01
15:01:18  92  ,gbp_g02
15:01:18  93  ,gbp_g03
15:01:18  94  ,gbp_g04
15:01:18  95  ,gbp_g05
15:01:18  96  ,gbp_g06
15:01:18  97  ,gbp_g07
15:01:18  98  ,gbp_g08
15:01:18  99  ,gbp_g09
15:01:18 100  ,gbp_g10
15:01:18 101  ,gbp_g11
15:01:18 102  ,gbp_g12
15:01:18 103  ,gbp_g13
15:01:18 104  ,gbp_g14
15:01:18 105  ,gbp_g15
15:01:18 106  ,gbp_g16
15:01:18 107  ,gbp_g17
15:01:18 108  ,gbp_g18
15:01:18 109  ,gbp_g19
15:01:18 110  ,gbp_g20
15:01:18 111  ,gbp_g21
15:01:18 112  ,gbp_g22
15:01:18 113  ,gbp_g23
15:01:18 114  ,gbp_g24
15:01:18 115  ,gbp_g25
15:01:18 116  ,gbp_g26
15:01:18 117  ,gbp_g27
15:01:18 118  ,gbp_g28
15:01:18 119  ,gbp_g29
15:01:18 120  ,gbp_g30
15:01:18 121  ,gbp_g31
15:01:18 122  ,gbp_g32
15:01:18 123  ,gbp_g33
15:01:18 124  ,gbp_g34
15:01:18 125  ,gbp_g35
15:01:18 126  ,gbp_g36
15:01:18 127  ,gbp_g37
15:01:18 128  ,gbp_g38
15:01:18 129  ,gbp_g39
15:01:18 130  ,gbp_g40
15:01:18 131  ,gbp_g41
15:01:18 132  ,jpy_g00
15:01:18 133  ,jpy_g01
15:01:18 134  ,jpy_g02
15:01:18 135  ,jpy_g03
15:01:18 136  ,jpy_g04
15:01:18 137  ,jpy_g05
15:01:18 138  ,jpy_g06
15:01:18 139  ,jpy_g07
15:01:18 140  ,jpy_g08
15:01:18 141  ,jpy_g09
15:01:18 142  ,jpy_g10
15:01:18 143  ,jpy_g11
15:01:18 144  ,jpy_g12
15:01:18 145  ,jpy_g13
15:01:18 146  ,jpy_g14
15:01:18 147  ,jpy_g15
15:01:18 148  ,jpy_g16
15:01:18 149  ,jpy_g17
15:01:18 150  ,jpy_g18
15:01:18 151  ,jpy_g19
15:01:18 152  ,jpy_g20
15:01:18 153  ,jpy_g21
15:01:18 154  ,jpy_g22
15:01:18 155  ,jpy_g23
15:01:18 156  ,jpy_g24
15:01:18 157  ,jpy_g25
15:01:18 158  ,jpy_g26
15:01:18 159  ,jpy_g27
15:01:18 160  ,jpy_g28
15:01:18 161  ,jpy_g29
15:01:18 162  ,jpy_g30
15:01:18 163  ,jpy_g31
15:01:18 164  ,jpy_g32
15:01:18 165  ,jpy_g33
15:01:18 166  ,jpy_g34
15:01:18 167  ,jpy_g35
15:01:18 168  ,jpy_g36
15:01:18 169  ,jpy_g37
15:01:18 170  ,jpy_g38
15:01:18 171  ,jpy_g39
15:01:18 172  ,jpy_g40
15:01:18 173  ,jpy_g41
15:01:18 174  ,cad_g00
15:01:18 175  ,cad_g01
15:01:18 176  ,cad_g02
15:01:18 177  ,cad_g03
15:01:18 178  ,cad_g04
15:01:18 179  ,cad_g05
15:01:18 180  ,cad_g06
15:01:18 181  ,cad_g07
15:01:18 182  ,cad_g08
15:01:18 183  ,cad_g09
15:01:18 184  ,cad_g10
15:01:18 185  ,cad_g11
15:01:18 186  ,cad_g12
15:01:18 187  ,cad_g13
15:01:18 188  ,cad_g14
15:01:18 189  ,cad_g15
15:01:18 190  ,cad_g16
15:01:18 191  ,cad_g17
15:01:18 192  ,cad_g18
15:01:18 193  ,cad_g19
15:01:18 194  ,cad_g20
15:01:18 195  ,cad_g21
15:01:18 196  ,cad_g22
15:01:18 197  ,cad_g23
15:01:18 198  ,cad_g24
15:01:18 199  ,cad_g25
15:01:18 200  ,cad_g26
15:01:18 201  ,cad_g27
15:01:18 202  ,cad_g28
15:01:18 203  ,cad_g29
15:01:18 204  ,cad_g30
15:01:18 205  ,cad_g31
15:01:18 206  ,cad_g32
15:01:18 207  ,cad_g33
15:01:18 208  ,cad_g34
15:01:18 209  ,cad_g35
15:01:18 210  ,cad_g36
15:01:18 211  ,cad_g37
15:01:18 212  ,cad_g38
15:01:18 213  ,cad_g39
15:01:18 214  ,cad_g40
15:01:18 215  ,cad_g41
15:01:18 216  ,chf_g00
15:01:18 217  ,chf_g01
15:01:18 218  ,chf_g02
15:01:18 219  ,chf_g03
15:01:18 220  ,chf_g04
15:01:18 221  ,chf_g05
15:01:18 222  ,chf_g06
15:01:18 223  ,chf_g07
15:01:18 224  ,chf_g08
15:01:18 225  ,chf_g09
15:01:18 226  ,chf_g10
15:01:18 227  ,chf_g11
15:01:18 228  ,chf_g12
15:01:18 229  ,chf_g13
15:01:18 230  ,chf_g14
15:01:18 231  ,chf_g15
15:01:18 232  ,chf_g16
15:01:18 233  ,chf_g17
15:01:18 234  ,chf_g18
15:01:18 235  ,chf_g19
15:01:18 236  ,chf_g20
15:01:18 237  ,chf_g21
15:01:18 238  ,chf_g22
15:01:18 239  ,chf_g23
15:01:18 240  ,chf_g24
15:01:18 241  ,chf_g25
15:01:18 242  ,chf_g26
15:01:18 243  ,chf_g27
15:01:18 244  ,chf_g28
15:01:18 245  ,chf_g29
15:01:18 246  ,chf_g30
15:01:18 247  ,chf_g31
15:01:18 248  ,chf_g32
15:01:18 249  ,chf_g33
15:01:18 250  ,chf_g34
15:01:18 251  ,chf_g35
15:01:18 252  ,chf_g36
15:01:18 253  ,chf_g37
15:01:18 254  ,chf_g38
15:01:18 255  ,chf_g39
15:01:18 256  ,chf_g40
15:01:18 257  ,chf_g41
15:01:18 258  FROM aud_ms6 m
15:01:18 259  WHERE m.ydate = '&1'||' '||'&2'
15:01:18 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'14:45:00'

View created.

Elapsed: 00:00:00.11
15:01:18 SQL> 
15:01:18 SQL> -- rpt
15:01:18 SQL> -- We should see just 1 row:
15:01:18 SQL> 
15:01:18 SQL> SELECT COUNT(prdate) FROM sme
15:01:18   2  
15:01:18 SQL> -- Build the model:
15:01:18 SQL> CREATE OR REPLACE VIEW bme AS
15:01:18   2  SELECT
15:01:18   3  'aud'||m.ydate prdate
15:01:18   4  ,gatt
15:01:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:01:18   6  ,eur_g00
15:01:18   7  ,eur_g01
15:01:18   8  ,eur_g02
15:01:18   9  ,eur_g03
15:01:18  10  ,eur_g04
15:01:18  11  ,eur_g05
15:01:18  12  ,eur_g06
15:01:18  13  ,eur_g07
15:01:18  14  ,eur_g08
15:01:18  15  ,eur_g09
15:01:18  16  ,eur_g10
15:01:18  17  ,eur_g11
15:01:18  18  ,eur_g12
15:01:18  19  ,eur_g13
15:01:18  20  ,eur_g14
15:01:18  21  ,eur_g15
15:01:18  22  ,eur_g16
15:01:18  23  ,eur_g17
15:01:18  24  ,eur_g18
15:01:18  25  ,eur_g19
15:01:18  26  ,eur_g20
15:01:18  27  ,eur_g21
15:01:18  28  ,eur_g22
15:01:18  29  ,eur_g23
15:01:18  30  ,eur_g24
15:01:18  31  ,eur_g25
15:01:18  32  ,eur_g26
15:01:18  33  ,eur_g27
15:01:18  34  ,eur_g28
15:01:18  35  ,eur_g29
15:01:18  36  ,eur_g30
15:01:18  37  ,eur_g31
15:01:18  38  ,eur_g32
15:01:18  39  ,eur_g33
15:01:18  40  ,eur_g34
15:01:18  41  ,eur_g35
15:01:18  42  ,eur_g36
15:01:18  43  ,eur_g37
15:01:18  44  ,eur_g38
15:01:18  45  ,eur_g39
15:01:18  46  ,eur_g40
15:01:18  47  ,eur_g41
15:01:18  48  ,aud_g00
15:01:18  49  ,aud_g01
15:01:18  50  ,aud_g02
15:01:18  51  ,aud_g03
15:01:18  52  ,aud_g04
15:01:18  53  ,aud_g05
15:01:18  54  ,aud_g06
15:01:18  55  ,aud_g07
15:01:18  56  ,aud_g08
15:01:18  57  ,aud_g09
15:01:18  58  ,aud_g10
15:01:18  59  ,aud_g11
15:01:18  60  ,aud_g12
15:01:18  61  ,aud_g13
15:01:18  62  ,aud_g14
15:01:18  63  ,aud_g15
15:01:18  64  ,aud_g16
15:01:18  65  ,aud_g17
15:01:18  66  ,aud_g18
15:01:18  67  ,aud_g19
15:01:18  68  ,aud_g20
15:01:18  69  ,aud_g21
15:01:18  70  ,aud_g22
15:01:18  71  ,aud_g23
15:01:18  72  ,aud_g24
15:01:18  73  ,aud_g25
15:01:18  74  ,aud_g26
15:01:18  75  ,aud_g27
15:01:18  76  ,aud_g28
15:01:18  77  ,aud_g29
15:01:18  78  ,aud_g30
15:01:18  79  ,aud_g31
15:01:18  80  ,aud_g32
15:01:18  81  ,aud_g33
15:01:18  82  ,aud_g34
15:01:18  83  ,aud_g35
15:01:18  84  ,aud_g36
15:01:18  85  ,aud_g37
15:01:18  86  ,aud_g38
15:01:18  87  ,aud_g39
15:01:18  88  ,aud_g40
15:01:18  89  ,aud_g41
15:01:18  90  ,gbp_g00
15:01:18  91  ,gbp_g01
15:01:18  92  ,gbp_g02
15:01:18  93  ,gbp_g03
15:01:18  94  ,gbp_g04
15:01:18  95  ,gbp_g05
15:01:18  96  ,gbp_g06
15:01:18  97  ,gbp_g07
15:01:18  98  ,gbp_g08
15:01:18  99  ,gbp_g09
15:01:18 100  ,gbp_g10
15:01:18 101  ,gbp_g11
15:01:18 102  ,gbp_g12
15:01:18 103  ,gbp_g13
15:01:18 104  ,gbp_g14
15:01:18 105  ,gbp_g15
15:01:18 106  ,gbp_g16
15:01:18 107  ,gbp_g17
15:01:18 108  ,gbp_g18
15:01:18 109  ,gbp_g19
15:01:18 110  ,gbp_g20
15:01:18 111  ,gbp_g21
15:01:18 112  ,gbp_g22
15:01:18 113  ,gbp_g23
15:01:18 114  ,gbp_g24
15:01:18 115  ,gbp_g25
15:01:18 116  ,gbp_g26
15:01:18 117  ,gbp_g27
15:01:18 118  ,gbp_g28
15:01:18 119  ,gbp_g29
15:01:18 120  ,gbp_g30
15:01:18 121  ,gbp_g31
15:01:18 122  ,gbp_g32
15:01:18 123  ,gbp_g33
15:01:18 124  ,gbp_g34
15:01:18 125  ,gbp_g35
15:01:18 126  ,gbp_g36
15:01:18 127  ,gbp_g37
15:01:18 128  ,gbp_g38
15:01:18 129  ,gbp_g39
15:01:18 130  ,gbp_g40
15:01:18 131  ,gbp_g41
15:01:18 132  ,jpy_g00
15:01:18 133  ,jpy_g01
15:01:18 134  ,jpy_g02
15:01:18 135  ,jpy_g03
15:01:18 136  ,jpy_g04
15:01:18 137  ,jpy_g05
15:01:18 138  ,jpy_g06
15:01:18 139  ,jpy_g07
15:01:18 140  ,jpy_g08
15:01:18 141  ,jpy_g09
15:01:18 142  ,jpy_g10
15:01:18 143  ,jpy_g11
15:01:18 144  ,jpy_g12
15:01:18 145  ,jpy_g13
15:01:18 146  ,jpy_g14
15:01:18 147  ,jpy_g15
15:01:18 148  ,jpy_g16
15:01:18 149  ,jpy_g17
15:01:18 150  ,jpy_g18
15:01:18 151  ,jpy_g19
15:01:18 152  ,jpy_g20
15:01:18 153  ,jpy_g21
15:01:18 154  ,jpy_g22
15:01:18 155  ,jpy_g23
15:01:18 156  ,jpy_g24
15:01:18 157  ,jpy_g25
15:01:18 158  ,jpy_g26
15:01:18 159  ,jpy_g27
15:01:18 160  ,jpy_g28
15:01:18 161  ,jpy_g29
15:01:18 162  ,jpy_g30
15:01:18 163  ,jpy_g31
15:01:18 164  ,jpy_g32
15:01:18 165  ,jpy_g33
15:01:18 166  ,jpy_g34
15:01:18 167  ,jpy_g35
15:01:18 168  ,jpy_g36
15:01:18 169  ,jpy_g37
15:01:18 170  ,jpy_g38
15:01:18 171  ,jpy_g39
15:01:18 172  ,jpy_g40
15:01:18 173  ,jpy_g41
15:01:18 174  ,cad_g00
15:01:18 175  ,cad_g01
15:01:18 176  ,cad_g02
15:01:18 177  ,cad_g03
15:01:18 178  ,cad_g04
15:01:18 179  ,cad_g05
15:01:18 180  ,cad_g06
15:01:18 181  ,cad_g07
15:01:18 182  ,cad_g08
15:01:18 183  ,cad_g09
15:01:18 184  ,cad_g10
15:01:18 185  ,cad_g11
15:01:18 186  ,cad_g12
15:01:18 187  ,cad_g13
15:01:18 188  ,cad_g14
15:01:18 189  ,cad_g15
15:01:18 190  ,cad_g16
15:01:18 191  ,cad_g17
15:01:18 192  ,cad_g18
15:01:18 193  ,cad_g19
15:01:18 194  ,cad_g20
15:01:18 195  ,cad_g21
15:01:18 196  ,cad_g22
15:01:18 197  ,cad_g23
15:01:18 198  ,cad_g24
15:01:18 199  ,cad_g25
15:01:18 200  ,cad_g26
15:01:18 201  ,cad_g27
15:01:18 202  ,cad_g28
15:01:18 203  ,cad_g29
15:01:18 204  ,cad_g30
15:01:18 205  ,cad_g31
15:01:18 206  ,cad_g32
15:01:18 207  ,cad_g33
15:01:18 208  ,cad_g34
15:01:18 209  ,cad_g35
15:01:18 210  ,cad_g36
15:01:18 211  ,cad_g37
15:01:18 212  ,cad_g38
15:01:18 213  ,cad_g39
15:01:18 214  ,cad_g40
15:01:18 215  ,cad_g41
15:01:18 216  ,chf_g00
15:01:18 217  ,chf_g01
15:01:18 218  ,chf_g02
15:01:18 219  ,chf_g03
15:01:18 220  ,chf_g04
15:01:18 221  ,chf_g05
15:01:18 222  ,chf_g06
15:01:18 223  ,chf_g07
15:01:18 224  ,chf_g08
15:01:18 225  ,chf_g09
15:01:18 226  ,chf_g10
15:01:18 227  ,chf_g11
15:01:18 228  ,chf_g12
15:01:18 229  ,chf_g13
15:01:18 230  ,chf_g14
15:01:18 231  ,chf_g15
15:01:18 232  ,chf_g16
15:01:18 233  ,chf_g17
15:01:18 234  ,chf_g18
15:01:18 235  ,chf_g19
15:01:18 236  ,chf_g20
15:01:18 237  ,chf_g21
15:01:18 238  ,chf_g22
15:01:18 239  ,chf_g23
15:01:18 240  ,chf_g24
15:01:18 241  ,chf_g25
15:01:18 242  ,chf_g26
15:01:18 243  ,chf_g27
15:01:18 244  ,chf_g28
15:01:18 245  ,chf_g29
15:01:18 246  ,chf_g30
15:01:18 247  ,chf_g31
15:01:18 248  ,chf_g32
15:01:18 249  ,chf_g33
15:01:18 250  ,chf_g34
15:01:18 251  ,chf_g35
15:01:18 252  ,chf_g36
15:01:18 253  ,chf_g37
15:01:18 254  ,chf_g38
15:01:18 255  ,chf_g39
15:01:18 256  ,chf_g40
15:01:18 257  ,chf_g41
15:01:18 258  FROM aud_ms6 m
15:01:18 259  WHERE gatt IN('nup','up')
15:01:18 260  AND 1+m.ydate < '&1'||' '||'&2'
15:01:18 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'14:45:00'

View created.

Elapsed: 00:00:00.11
15:01:18 SQL> 
15:01:18 SQL> -- rpt
15:01:18 SQL> 
15:01:18 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
15:01:18   2  
15:01:18 SQL> SELECT MAX(prdate) FROM bme
15:01:18   2  
15:01:18 SQL> -- Now build model from bme and score sme
15:01:18 SQL> @score1.sql
15:01:18 SQL> -- score1.sql
15:01:18 SQL> 
15:01:18 SQL> -- Does the 1st SVM score
15:01:18 SQL> 
15:01:18 SQL> -- Fill up svmc_apply_prep
15:01:18 SQL> @score.sql
15:01:18 SQL> --
15:01:18 SQL> -- score.sql
15:01:18 SQL> --
15:01:18 SQL> 
15:01:18 SQL> -- usage: score.sql
15:01:18 SQL> 
15:01:18 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:01:18 SQL> 
15:01:18 SQL> DEFINE target	= 'gatt'
15:01:18 SQL> DEFINE model_name = 'forex15'
15:01:18 SQL> DEFINE bldtable	= 'bme'
15:01:18 SQL> DEFINE scoretable = 'sme'
15:01:18 SQL> DEFINE case_id	= 'prdate'
15:01:18 SQL> 
15:01:18 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:01:18 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:01:18 SQL> 
15:01:18 SQL> -- Builds an SVM model using pl/sql.
15:01:18 SQL> 
15:01:18 SQL> -----------------------------------------------------------------------
15:01:18 SQL> --			    BUILD THE MODEL
15:01:18 SQL> -----------------------------------------------------------------------
15:01:18 SQL> 
15:01:18 SQL> -- Cleanup old build data preparation objects for repeat runs
15:01:18 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
15:01:18 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:01:18 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
15:01:18 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
15:01:18 SQL> 
15:01:18 SQL> 
15:01:18 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:01:18 SQL> --
15:01:18 SQL> -- DROP	TABLE svmc_settings ;
15:01:18 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:01:18 SQL> -- DELETE svmc_settings;
15:01:18 SQL> 
15:01:18 SQL> -- The default classification algorithm is Naive Bayes. So override
15:01:18 SQL> -- this choice to SVM using a settings table.
15:01:18 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:01:18 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:01:18 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:01:18 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:01:18 SQL> -- models.
15:01:18 SQL> --
15:01:18 SQL> 
15:01:18 SQL> -- Do this once and then comment it out.
15:01:18 SQL> -- That makes script go faster.
15:01:18 SQL> -- BEGIN
15:01:18 SQL> -- -- Populate settings table
15:01:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:01:18 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:01:18 SQL> --
15:01:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:01:18 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:01:18 SQL> --
15:01:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:01:18 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:01:18 SQL> --   COMMIT;
15:01:18 SQL> -- END;
15:01:18 SQL> -- /
15:01:18 SQL> 
15:01:18 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:01:18 SQL> 
15:01:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:01:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:01:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:01:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:01:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:01:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:01:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:01:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:01:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:01:18 SQL> 
15:01:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:01:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:01:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
15:01:18 SQL> 
15:01:18 SQL> --------------------------------
15:01:18 SQL> -- PREPARE BUILD (TRAINING) DATA
15:01:18 SQL> --
15:01:18 SQL> 
15:01:18 SQL> -- 1. Missing Value treatment for all Predictors and
15:01:18 SQL> -- 2. Outlier Treatment and
15:01:18 SQL> -- 3. Normalization are performed below.
15:01:18 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:01:18 SQL> --    normalized here.
15:01:18 SQL> 
15:01:18 SQL> BEGIN
15:01:18   2  	-- Perform missing value treatment for all predictors
15:01:18   3  	-- create miss tables
15:01:18   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:01:18   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:01:18   6  
15:01:18   7  	-- populate miss tables
15:01:18   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:01:18   9  	  miss_table_name => 'svmc_miss_num',
15:01:18  10  	  data_table_name => '&bldtable',
15:01:18  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:01:18  12  
15:01:18  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:01:18  14  	  miss_table_name => 'svmc_miss_cat',
15:01:18  15  	  data_table_name => '&bldtable',
15:01:18  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:01:18  17  
15:01:18  18  	-- xform input data to replace missing values
15:01:18  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:01:18  20  	  miss_table_name => 'svmc_miss_num',
15:01:18  21  	  data_table_name => '&bldtable',
15:01:18  22  	  xform_view_name => 'xformed_build_miss_num');
15:01:18  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:01:18  24  	  miss_table_name => 'svmc_miss_cat',
15:01:18  25  	  data_table_name => '&bldtable',
15:01:18  26  	  xform_view_name => 'xformed_build_miss_cat');
15:01:18  27  
15:01:18  28  	-- Perform outlier treatment.
15:01:18  29  	-- create clip table
15:01:18  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:01:18  31  
15:01:18  32  	-- populate clip table
15:01:18  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:01:18  34  	  clip_table_name => 'svmc_clip',
15:01:18  35  	  data_table_name => '&bldtable',
15:01:18  36  	  tail_frac	  => 0.025,
15:01:18  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:01:18  38  
15:01:18  39  	-- xform input data to winsorized data
15:01:18  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:01:18  41  	  clip_table_name => 'svmc_clip',
15:01:18  42  	  data_table_name => '&bldtable',
15:01:18  43  	  xform_view_name => 'svmc_winsor');
15:01:18  44  
15:01:18  45  	-- create normalization table
15:01:18  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:01:18  47  
15:01:18  48  	-- populate normalization table based on winsorized data
15:01:18  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:01:18  50  	  norm_table_name => 'svmc_norm',
15:01:18  51  	  data_table_name => 'svmc_winsor',
15:01:18  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:01:18  53  
15:01:18  54  	-- normalize the original data
15:01:18  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:01:18  56  	  norm_table_name => 'svmc_norm',
15:01:18  57  	  data_table_name => '&bldtable',
15:01:18  58  	  xform_view_name => 'svmc_build_prep');
15:01:18  59  END;
15:01:18  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.68
15:01:37 SQL> 
15:01:37 SQL> ---------------------
15:01:37 SQL> -- CREATE A NEW MODEL
15:01:37 SQL> --
15:01:37 SQL> -- Cleanup old model with the same name for repeat runs
15:01:37 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:01:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:01:37   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
15:01:38 SQL> 
15:01:38 SQL> -- Build a new SVM Model
15:01:38 SQL> BEGIN
15:01:38   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:01:38   3  	  model_name	      => '&model_name',
15:01:38   4  	  mining_function     => dbms_data_mining.classification,
15:01:38   5  	  data_table_name     => 'svmc_build_prep',
15:01:38   6  	  case_id_column_name => '&case_id',
15:01:38   7  	  target_column_name  => '&target',
15:01:38   8  	  settings_table_name => 'svmc_settings');
15:01:38   9  END;
15:01:38  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.92
15:02:06 SQL> 
15:02:06 SQL> -----------------------------------------------------------------------
15:02:06 SQL> --			       APPLY/score THE MODEL
15:02:06 SQL> -----------------------------------------------------------------------
15:02:06 SQL> 
15:02:06 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:02:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:02:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:02:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:02:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:02:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:02:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:02:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:02:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:02:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:02:06 SQL> -----------------------
15:02:06 SQL> -- PREPARE SCORING DATA
15:02:06 SQL> --
15:02:06 SQL> -- If the data for model creation has been prepared, then the data
15:02:06 SQL> -- to be scored using the model must be prepared in the same manner
15:02:06 SQL> -- in order to obtain meaningful results.
15:02:06 SQL> --
15:02:06 SQL> -- 1. Missing Value treatment for all Predictors and
15:02:06 SQL> -- 2. Normalization
15:02:06 SQL> -- No outlier treatment will be performed during test and apply. The
15:02:06 SQL> -- normalization step is sufficient, since the normalization parameters
15:02:06 SQL> -- already capture the effects of outlier treatment done with build data.
15:02:06 SQL> --
15:02:06 SQL> BEGIN
15:02:06   2  	-- Xform Test data to replace missing values
15:02:06   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:02:06   4  	  miss_table_name => 'svmc_miss_num',
15:02:06   5  	  data_table_name => '&scoretable',
15:02:06   6  	  xform_view_name => 'xformed_apply_miss_num');
15:02:06   7  
15:02:06   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:02:06   9  	  miss_table_name => 'svmc_miss_cat',
15:02:06  10  	  data_table_name => '&scoretable',
15:02:06  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:02:06  12  
15:02:06  13  	-- Normalize the data to be scored
15:02:06  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:02:06  15  	  norm_table_name => 'svmc_norm',
15:02:06  16  	  data_table_name => '&scoretable',
15:02:06  17  	  xform_view_name => 'svmc_apply_prep');
15:02:06  18  END;
15:02:06  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
15:02:07 SQL> 
15:02:07 SQL> -- Use same model_name used in score.sql
15:02:07 SQL> DEFINE model_name = 'forex15'
15:02:07 SQL> 
15:02:07 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
15:02:07 SQL> 
15:02:07 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
15:02:07 SQL> 
15:02:07 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
15:02:07   2  SELECT
15:02:07   3  prdate
15:02:07   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:02:07   5  ,sysdate
15:02:07   6  ,SUBSTR(prdate,1,3)pair
15:02:07   7  ,SUBSTR(prdate,4,19)ydate
15:02:07   8  FROM svmc_apply_prep
15:02:07   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:02:08 SQL> @aud_score1day.sql  2011-01-06 14:50:00
15:02:08 SQL> --
15:02:08 SQL> -- aud_score1day.sql
15:02:08 SQL> --
15:02:08 SQL> 
15:02:08 SQL> CREATE OR REPLACE VIEW sme AS
15:02:08   2  SELECT
15:02:08   3  'aud'||m.ydate prdate
15:02:08   4  ,NULL gatt
15:02:08   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:02:08   6  ,eur_g00
15:02:08   7  ,eur_g01
15:02:08   8  ,eur_g02
15:02:08   9  ,eur_g03
15:02:08  10  ,eur_g04
15:02:08  11  ,eur_g05
15:02:08  12  ,eur_g06
15:02:08  13  ,eur_g07
15:02:08  14  ,eur_g08
15:02:08  15  ,eur_g09
15:02:08  16  ,eur_g10
15:02:08  17  ,eur_g11
15:02:08  18  ,eur_g12
15:02:08  19  ,eur_g13
15:02:08  20  ,eur_g14
15:02:08  21  ,eur_g15
15:02:08  22  ,eur_g16
15:02:08  23  ,eur_g17
15:02:08  24  ,eur_g18
15:02:08  25  ,eur_g19
15:02:08  26  ,eur_g20
15:02:08  27  ,eur_g21
15:02:08  28  ,eur_g22
15:02:08  29  ,eur_g23
15:02:08  30  ,eur_g24
15:02:08  31  ,eur_g25
15:02:08  32  ,eur_g26
15:02:08  33  ,eur_g27
15:02:08  34  ,eur_g28
15:02:08  35  ,eur_g29
15:02:08  36  ,eur_g30
15:02:08  37  ,eur_g31
15:02:08  38  ,eur_g32
15:02:08  39  ,eur_g33
15:02:08  40  ,eur_g34
15:02:08  41  ,eur_g35
15:02:08  42  ,eur_g36
15:02:08  43  ,eur_g37
15:02:08  44  ,eur_g38
15:02:08  45  ,eur_g39
15:02:08  46  ,eur_g40
15:02:08  47  ,eur_g41
15:02:08  48  ,aud_g00
15:02:08  49  ,aud_g01
15:02:08  50  ,aud_g02
15:02:08  51  ,aud_g03
15:02:08  52  ,aud_g04
15:02:08  53  ,aud_g05
15:02:08  54  ,aud_g06
15:02:08  55  ,aud_g07
15:02:08  56  ,aud_g08
15:02:08  57  ,aud_g09
15:02:08  58  ,aud_g10
15:02:08  59  ,aud_g11
15:02:08  60  ,aud_g12
15:02:08  61  ,aud_g13
15:02:08  62  ,aud_g14
15:02:08  63  ,aud_g15
15:02:08  64  ,aud_g16
15:02:08  65  ,aud_g17
15:02:08  66  ,aud_g18
15:02:08  67  ,aud_g19
15:02:08  68  ,aud_g20
15:02:08  69  ,aud_g21
15:02:08  70  ,aud_g22
15:02:08  71  ,aud_g23
15:02:08  72  ,aud_g24
15:02:08  73  ,aud_g25
15:02:08  74  ,aud_g26
15:02:08  75  ,aud_g27
15:02:08  76  ,aud_g28
15:02:08  77  ,aud_g29
15:02:08  78  ,aud_g30
15:02:08  79  ,aud_g31
15:02:08  80  ,aud_g32
15:02:08  81  ,aud_g33
15:02:08  82  ,aud_g34
15:02:08  83  ,aud_g35
15:02:08  84  ,aud_g36
15:02:08  85  ,aud_g37
15:02:08  86  ,aud_g38
15:02:08  87  ,aud_g39
15:02:08  88  ,aud_g40
15:02:08  89  ,aud_g41
15:02:08  90  ,gbp_g00
15:02:08  91  ,gbp_g01
15:02:08  92  ,gbp_g02
15:02:08  93  ,gbp_g03
15:02:08  94  ,gbp_g04
15:02:08  95  ,gbp_g05
15:02:08  96  ,gbp_g06
15:02:08  97  ,gbp_g07
15:02:08  98  ,gbp_g08
15:02:08  99  ,gbp_g09
15:02:08 100  ,gbp_g10
15:02:08 101  ,gbp_g11
15:02:08 102  ,gbp_g12
15:02:08 103  ,gbp_g13
15:02:08 104  ,gbp_g14
15:02:08 105  ,gbp_g15
15:02:08 106  ,gbp_g16
15:02:08 107  ,gbp_g17
15:02:08 108  ,gbp_g18
15:02:08 109  ,gbp_g19
15:02:08 110  ,gbp_g20
15:02:08 111  ,gbp_g21
15:02:08 112  ,gbp_g22
15:02:08 113  ,gbp_g23
15:02:08 114  ,gbp_g24
15:02:08 115  ,gbp_g25
15:02:08 116  ,gbp_g26
15:02:08 117  ,gbp_g27
15:02:08 118  ,gbp_g28
15:02:08 119  ,gbp_g29
15:02:08 120  ,gbp_g30
15:02:08 121  ,gbp_g31
15:02:08 122  ,gbp_g32
15:02:08 123  ,gbp_g33
15:02:08 124  ,gbp_g34
15:02:08 125  ,gbp_g35
15:02:08 126  ,gbp_g36
15:02:08 127  ,gbp_g37
15:02:08 128  ,gbp_g38
15:02:08 129  ,gbp_g39
15:02:08 130  ,gbp_g40
15:02:08 131  ,gbp_g41
15:02:08 132  ,jpy_g00
15:02:08 133  ,jpy_g01
15:02:08 134  ,jpy_g02
15:02:08 135  ,jpy_g03
15:02:08 136  ,jpy_g04
15:02:08 137  ,jpy_g05
15:02:08 138  ,jpy_g06
15:02:08 139  ,jpy_g07
15:02:08 140  ,jpy_g08
15:02:08 141  ,jpy_g09
15:02:08 142  ,jpy_g10
15:02:08 143  ,jpy_g11
15:02:08 144  ,jpy_g12
15:02:08 145  ,jpy_g13
15:02:08 146  ,jpy_g14
15:02:08 147  ,jpy_g15
15:02:08 148  ,jpy_g16
15:02:08 149  ,jpy_g17
15:02:08 150  ,jpy_g18
15:02:08 151  ,jpy_g19
15:02:08 152  ,jpy_g20
15:02:08 153  ,jpy_g21
15:02:08 154  ,jpy_g22
15:02:08 155  ,jpy_g23
15:02:08 156  ,jpy_g24
15:02:08 157  ,jpy_g25
15:02:08 158  ,jpy_g26
15:02:08 159  ,jpy_g27
15:02:08 160  ,jpy_g28
15:02:08 161  ,jpy_g29
15:02:08 162  ,jpy_g30
15:02:08 163  ,jpy_g31
15:02:08 164  ,jpy_g32
15:02:08 165  ,jpy_g33
15:02:08 166  ,jpy_g34
15:02:08 167  ,jpy_g35
15:02:08 168  ,jpy_g36
15:02:08 169  ,jpy_g37
15:02:08 170  ,jpy_g38
15:02:08 171  ,jpy_g39
15:02:08 172  ,jpy_g40
15:02:08 173  ,jpy_g41
15:02:08 174  ,cad_g00
15:02:08 175  ,cad_g01
15:02:08 176  ,cad_g02
15:02:08 177  ,cad_g03
15:02:08 178  ,cad_g04
15:02:08 179  ,cad_g05
15:02:08 180  ,cad_g06
15:02:08 181  ,cad_g07
15:02:08 182  ,cad_g08
15:02:08 183  ,cad_g09
15:02:08 184  ,cad_g10
15:02:08 185  ,cad_g11
15:02:08 186  ,cad_g12
15:02:08 187  ,cad_g13
15:02:08 188  ,cad_g14
15:02:08 189  ,cad_g15
15:02:08 190  ,cad_g16
15:02:08 191  ,cad_g17
15:02:08 192  ,cad_g18
15:02:08 193  ,cad_g19
15:02:08 194  ,cad_g20
15:02:08 195  ,cad_g21
15:02:08 196  ,cad_g22
15:02:08 197  ,cad_g23
15:02:08 198  ,cad_g24
15:02:08 199  ,cad_g25
15:02:08 200  ,cad_g26
15:02:08 201  ,cad_g27
15:02:08 202  ,cad_g28
15:02:08 203  ,cad_g29
15:02:08 204  ,cad_g30
15:02:08 205  ,cad_g31
15:02:08 206  ,cad_g32
15:02:08 207  ,cad_g33
15:02:08 208  ,cad_g34
15:02:08 209  ,cad_g35
15:02:08 210  ,cad_g36
15:02:08 211  ,cad_g37
15:02:08 212  ,cad_g38
15:02:08 213  ,cad_g39
15:02:08 214  ,cad_g40
15:02:08 215  ,cad_g41
15:02:08 216  ,chf_g00
15:02:08 217  ,chf_g01
15:02:08 218  ,chf_g02
15:02:08 219  ,chf_g03
15:02:08 220  ,chf_g04
15:02:08 221  ,chf_g05
15:02:08 222  ,chf_g06
15:02:08 223  ,chf_g07
15:02:08 224  ,chf_g08
15:02:08 225  ,chf_g09
15:02:08 226  ,chf_g10
15:02:08 227  ,chf_g11
15:02:08 228  ,chf_g12
15:02:08 229  ,chf_g13
15:02:08 230  ,chf_g14
15:02:08 231  ,chf_g15
15:02:08 232  ,chf_g16
15:02:08 233  ,chf_g17
15:02:08 234  ,chf_g18
15:02:08 235  ,chf_g19
15:02:08 236  ,chf_g20
15:02:08 237  ,chf_g21
15:02:08 238  ,chf_g22
15:02:08 239  ,chf_g23
15:02:08 240  ,chf_g24
15:02:08 241  ,chf_g25
15:02:08 242  ,chf_g26
15:02:08 243  ,chf_g27
15:02:08 244  ,chf_g28
15:02:08 245  ,chf_g29
15:02:08 246  ,chf_g30
15:02:08 247  ,chf_g31
15:02:08 248  ,chf_g32
15:02:08 249  ,chf_g33
15:02:08 250  ,chf_g34
15:02:08 251  ,chf_g35
15:02:08 252  ,chf_g36
15:02:08 253  ,chf_g37
15:02:08 254  ,chf_g38
15:02:08 255  ,chf_g39
15:02:08 256  ,chf_g40
15:02:08 257  ,chf_g41
15:02:08 258  FROM aud_ms6 m
15:02:08 259  WHERE m.ydate = '&1'||' '||'&2'
15:02:08 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'14:50:00'

View created.

Elapsed: 00:00:00.13
15:02:08 SQL> 
15:02:08 SQL> -- rpt
15:02:08 SQL> -- We should see just 1 row:
15:02:08 SQL> 
15:02:08 SQL> SELECT COUNT(prdate) FROM sme
15:02:08   2  
15:02:08 SQL> -- Build the model:
15:02:08 SQL> CREATE OR REPLACE VIEW bme AS
15:02:08   2  SELECT
15:02:08   3  'aud'||m.ydate prdate
15:02:08   4  ,gatt
15:02:08   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:02:08   6  ,eur_g00
15:02:08   7  ,eur_g01
15:02:08   8  ,eur_g02
15:02:08   9  ,eur_g03
15:02:08  10  ,eur_g04
15:02:08  11  ,eur_g05
15:02:08  12  ,eur_g06
15:02:08  13  ,eur_g07
15:02:08  14  ,eur_g08
15:02:08  15  ,eur_g09
15:02:08  16  ,eur_g10
15:02:08  17  ,eur_g11
15:02:08  18  ,eur_g12
15:02:08  19  ,eur_g13
15:02:08  20  ,eur_g14
15:02:08  21  ,eur_g15
15:02:08  22  ,eur_g16
15:02:08  23  ,eur_g17
15:02:08  24  ,eur_g18
15:02:08  25  ,eur_g19
15:02:08  26  ,eur_g20
15:02:08  27  ,eur_g21
15:02:08  28  ,eur_g22
15:02:08  29  ,eur_g23
15:02:08  30  ,eur_g24
15:02:08  31  ,eur_g25
15:02:08  32  ,eur_g26
15:02:08  33  ,eur_g27
15:02:08  34  ,eur_g28
15:02:08  35  ,eur_g29
15:02:08  36  ,eur_g30
15:02:08  37  ,eur_g31
15:02:08  38  ,eur_g32
15:02:08  39  ,eur_g33
15:02:08  40  ,eur_g34
15:02:08  41  ,eur_g35
15:02:08  42  ,eur_g36
15:02:08  43  ,eur_g37
15:02:08  44  ,eur_g38
15:02:08  45  ,eur_g39
15:02:08  46  ,eur_g40
15:02:08  47  ,eur_g41
15:02:08  48  ,aud_g00
15:02:08  49  ,aud_g01
15:02:08  50  ,aud_g02
15:02:08  51  ,aud_g03
15:02:08  52  ,aud_g04
15:02:08  53  ,aud_g05
15:02:08  54  ,aud_g06
15:02:08  55  ,aud_g07
15:02:08  56  ,aud_g08
15:02:08  57  ,aud_g09
15:02:08  58  ,aud_g10
15:02:08  59  ,aud_g11
15:02:08  60  ,aud_g12
15:02:08  61  ,aud_g13
15:02:08  62  ,aud_g14
15:02:08  63  ,aud_g15
15:02:08  64  ,aud_g16
15:02:08  65  ,aud_g17
15:02:08  66  ,aud_g18
15:02:08  67  ,aud_g19
15:02:08  68  ,aud_g20
15:02:08  69  ,aud_g21
15:02:08  70  ,aud_g22
15:02:08  71  ,aud_g23
15:02:08  72  ,aud_g24
15:02:08  73  ,aud_g25
15:02:08  74  ,aud_g26
15:02:08  75  ,aud_g27
15:02:08  76  ,aud_g28
15:02:08  77  ,aud_g29
15:02:08  78  ,aud_g30
15:02:08  79  ,aud_g31
15:02:08  80  ,aud_g32
15:02:08  81  ,aud_g33
15:02:08  82  ,aud_g34
15:02:08  83  ,aud_g35
15:02:08  84  ,aud_g36
15:02:08  85  ,aud_g37
15:02:08  86  ,aud_g38
15:02:08  87  ,aud_g39
15:02:08  88  ,aud_g40
15:02:08  89  ,aud_g41
15:02:08  90  ,gbp_g00
15:02:08  91  ,gbp_g01
15:02:08  92  ,gbp_g02
15:02:08  93  ,gbp_g03
15:02:08  94  ,gbp_g04
15:02:08  95  ,gbp_g05
15:02:08  96  ,gbp_g06
15:02:08  97  ,gbp_g07
15:02:08  98  ,gbp_g08
15:02:08  99  ,gbp_g09
15:02:08 100  ,gbp_g10
15:02:08 101  ,gbp_g11
15:02:08 102  ,gbp_g12
15:02:08 103  ,gbp_g13
15:02:08 104  ,gbp_g14
15:02:08 105  ,gbp_g15
15:02:08 106  ,gbp_g16
15:02:08 107  ,gbp_g17
15:02:08 108  ,gbp_g18
15:02:08 109  ,gbp_g19
15:02:08 110  ,gbp_g20
15:02:08 111  ,gbp_g21
15:02:08 112  ,gbp_g22
15:02:08 113  ,gbp_g23
15:02:08 114  ,gbp_g24
15:02:08 115  ,gbp_g25
15:02:08 116  ,gbp_g26
15:02:08 117  ,gbp_g27
15:02:08 118  ,gbp_g28
15:02:08 119  ,gbp_g29
15:02:08 120  ,gbp_g30
15:02:08 121  ,gbp_g31
15:02:08 122  ,gbp_g32
15:02:08 123  ,gbp_g33
15:02:08 124  ,gbp_g34
15:02:08 125  ,gbp_g35
15:02:08 126  ,gbp_g36
15:02:08 127  ,gbp_g37
15:02:08 128  ,gbp_g38
15:02:08 129  ,gbp_g39
15:02:08 130  ,gbp_g40
15:02:08 131  ,gbp_g41
15:02:08 132  ,jpy_g00
15:02:08 133  ,jpy_g01
15:02:08 134  ,jpy_g02
15:02:08 135  ,jpy_g03
15:02:08 136  ,jpy_g04
15:02:08 137  ,jpy_g05
15:02:08 138  ,jpy_g06
15:02:08 139  ,jpy_g07
15:02:08 140  ,jpy_g08
15:02:08 141  ,jpy_g09
15:02:08 142  ,jpy_g10
15:02:08 143  ,jpy_g11
15:02:08 144  ,jpy_g12
15:02:08 145  ,jpy_g13
15:02:08 146  ,jpy_g14
15:02:08 147  ,jpy_g15
15:02:08 148  ,jpy_g16
15:02:08 149  ,jpy_g17
15:02:08 150  ,jpy_g18
15:02:08 151  ,jpy_g19
15:02:08 152  ,jpy_g20
15:02:08 153  ,jpy_g21
15:02:08 154  ,jpy_g22
15:02:08 155  ,jpy_g23
15:02:08 156  ,jpy_g24
15:02:08 157  ,jpy_g25
15:02:08 158  ,jpy_g26
15:02:08 159  ,jpy_g27
15:02:08 160  ,jpy_g28
15:02:08 161  ,jpy_g29
15:02:08 162  ,jpy_g30
15:02:08 163  ,jpy_g31
15:02:08 164  ,jpy_g32
15:02:08 165  ,jpy_g33
15:02:08 166  ,jpy_g34
15:02:08 167  ,jpy_g35
15:02:08 168  ,jpy_g36
15:02:08 169  ,jpy_g37
15:02:08 170  ,jpy_g38
15:02:08 171  ,jpy_g39
15:02:08 172  ,jpy_g40
15:02:08 173  ,jpy_g41
15:02:08 174  ,cad_g00
15:02:08 175  ,cad_g01
15:02:08 176  ,cad_g02
15:02:08 177  ,cad_g03
15:02:08 178  ,cad_g04
15:02:08 179  ,cad_g05
15:02:08 180  ,cad_g06
15:02:08 181  ,cad_g07
15:02:08 182  ,cad_g08
15:02:08 183  ,cad_g09
15:02:08 184  ,cad_g10
15:02:08 185  ,cad_g11
15:02:08 186  ,cad_g12
15:02:08 187  ,cad_g13
15:02:08 188  ,cad_g14
15:02:08 189  ,cad_g15
15:02:08 190  ,cad_g16
15:02:08 191  ,cad_g17
15:02:08 192  ,cad_g18
15:02:08 193  ,cad_g19
15:02:08 194  ,cad_g20
15:02:08 195  ,cad_g21
15:02:08 196  ,cad_g22
15:02:08 197  ,cad_g23
15:02:08 198  ,cad_g24
15:02:08 199  ,cad_g25
15:02:08 200  ,cad_g26
15:02:08 201  ,cad_g27
15:02:08 202  ,cad_g28
15:02:08 203  ,cad_g29
15:02:08 204  ,cad_g30
15:02:08 205  ,cad_g31
15:02:08 206  ,cad_g32
15:02:08 207  ,cad_g33
15:02:08 208  ,cad_g34
15:02:08 209  ,cad_g35
15:02:08 210  ,cad_g36
15:02:08 211  ,cad_g37
15:02:08 212  ,cad_g38
15:02:08 213  ,cad_g39
15:02:08 214  ,cad_g40
15:02:08 215  ,cad_g41
15:02:08 216  ,chf_g00
15:02:08 217  ,chf_g01
15:02:08 218  ,chf_g02
15:02:08 219  ,chf_g03
15:02:08 220  ,chf_g04
15:02:08 221  ,chf_g05
15:02:08 222  ,chf_g06
15:02:08 223  ,chf_g07
15:02:08 224  ,chf_g08
15:02:08 225  ,chf_g09
15:02:08 226  ,chf_g10
15:02:08 227  ,chf_g11
15:02:08 228  ,chf_g12
15:02:08 229  ,chf_g13
15:02:08 230  ,chf_g14
15:02:08 231  ,chf_g15
15:02:08 232  ,chf_g16
15:02:08 233  ,chf_g17
15:02:08 234  ,chf_g18
15:02:08 235  ,chf_g19
15:02:08 236  ,chf_g20
15:02:08 237  ,chf_g21
15:02:08 238  ,chf_g22
15:02:08 239  ,chf_g23
15:02:08 240  ,chf_g24
15:02:08 241  ,chf_g25
15:02:08 242  ,chf_g26
15:02:08 243  ,chf_g27
15:02:08 244  ,chf_g28
15:02:08 245  ,chf_g29
15:02:08 246  ,chf_g30
15:02:08 247  ,chf_g31
15:02:08 248  ,chf_g32
15:02:08 249  ,chf_g33
15:02:08 250  ,chf_g34
15:02:08 251  ,chf_g35
15:02:08 252  ,chf_g36
15:02:08 253  ,chf_g37
15:02:08 254  ,chf_g38
15:02:08 255  ,chf_g39
15:02:08 256  ,chf_g40
15:02:08 257  ,chf_g41
15:02:08 258  FROM aud_ms6 m
15:02:08 259  WHERE gatt IN('nup','up')
15:02:08 260  AND 1+m.ydate < '&1'||' '||'&2'
15:02:08 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'14:50:00'

View created.

Elapsed: 00:00:00.14
15:02:08 SQL> 
15:02:08 SQL> -- rpt
15:02:08 SQL> 
15:02:08 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
15:02:08   2  
15:02:08 SQL> SELECT MAX(prdate) FROM bme
15:02:08   2  
15:02:08 SQL> -- Now build model from bme and score sme
15:02:08 SQL> @score1.sql
15:02:08 SQL> -- score1.sql
15:02:08 SQL> 
15:02:08 SQL> -- Does the 1st SVM score
15:02:08 SQL> 
15:02:08 SQL> -- Fill up svmc_apply_prep
15:02:08 SQL> @score.sql
15:02:08 SQL> --
15:02:08 SQL> -- score.sql
15:02:08 SQL> --
15:02:08 SQL> 
15:02:08 SQL> -- usage: score.sql
15:02:08 SQL> 
15:02:08 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:02:08 SQL> 
15:02:08 SQL> DEFINE target	= 'gatt'
15:02:08 SQL> DEFINE model_name = 'forex15'
15:02:08 SQL> DEFINE bldtable	= 'bme'
15:02:08 SQL> DEFINE scoretable = 'sme'
15:02:08 SQL> DEFINE case_id	= 'prdate'
15:02:08 SQL> 
15:02:08 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:02:08 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:02:08 SQL> 
15:02:08 SQL> -- Builds an SVM model using pl/sql.
15:02:08 SQL> 
15:02:08 SQL> -----------------------------------------------------------------------
15:02:08 SQL> --			    BUILD THE MODEL
15:02:08 SQL> -----------------------------------------------------------------------
15:02:08 SQL> 
15:02:08 SQL> -- Cleanup old build data preparation objects for repeat runs
15:02:08 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
15:02:08 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:02:08 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
15:02:08 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
15:02:08 SQL> 
15:02:08 SQL> 
15:02:08 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:02:08 SQL> --
15:02:08 SQL> -- DROP	TABLE svmc_settings ;
15:02:08 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:02:08 SQL> -- DELETE svmc_settings;
15:02:08 SQL> 
15:02:08 SQL> -- The default classification algorithm is Naive Bayes. So override
15:02:08 SQL> -- this choice to SVM using a settings table.
15:02:08 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:02:08 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:02:08 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:02:08 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:02:08 SQL> -- models.
15:02:08 SQL> --
15:02:08 SQL> 
15:02:08 SQL> -- Do this once and then comment it out.
15:02:08 SQL> -- That makes script go faster.
15:02:08 SQL> -- BEGIN
15:02:08 SQL> -- -- Populate settings table
15:02:08 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:02:08 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:02:08 SQL> --
15:02:08 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:02:08 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:02:08 SQL> --
15:02:08 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:02:08 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:02:08 SQL> --   COMMIT;
15:02:08 SQL> -- END;
15:02:08 SQL> -- /
15:02:08 SQL> 
15:02:08 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:02:08 SQL> 
15:02:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:02:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:02:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:02:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:02:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:02:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:02:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:02:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:02:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:02:08 SQL> 
15:02:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:02:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:02:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:02:08 SQL> 
15:02:08 SQL> --------------------------------
15:02:08 SQL> -- PREPARE BUILD (TRAINING) DATA
15:02:08 SQL> --
15:02:08 SQL> 
15:02:08 SQL> -- 1. Missing Value treatment for all Predictors and
15:02:08 SQL> -- 2. Outlier Treatment and
15:02:08 SQL> -- 3. Normalization are performed below.
15:02:08 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:02:08 SQL> --    normalized here.
15:02:08 SQL> 
15:02:08 SQL> BEGIN
15:02:08   2  	-- Perform missing value treatment for all predictors
15:02:08   3  	-- create miss tables
15:02:08   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:02:08   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:02:08   6  
15:02:08   7  	-- populate miss tables
15:02:08   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:02:08   9  	  miss_table_name => 'svmc_miss_num',
15:02:08  10  	  data_table_name => '&bldtable',
15:02:08  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:02:08  12  
15:02:08  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:02:08  14  	  miss_table_name => 'svmc_miss_cat',
15:02:08  15  	  data_table_name => '&bldtable',
15:02:08  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:02:08  17  
15:02:08  18  	-- xform input data to replace missing values
15:02:08  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:02:08  20  	  miss_table_name => 'svmc_miss_num',
15:02:08  21  	  data_table_name => '&bldtable',
15:02:08  22  	  xform_view_name => 'xformed_build_miss_num');
15:02:08  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:02:08  24  	  miss_table_name => 'svmc_miss_cat',
15:02:08  25  	  data_table_name => '&bldtable',
15:02:08  26  	  xform_view_name => 'xformed_build_miss_cat');
15:02:08  27  
15:02:08  28  	-- Perform outlier treatment.
15:02:08  29  	-- create clip table
15:02:08  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:02:08  31  
15:02:08  32  	-- populate clip table
15:02:08  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:02:08  34  	  clip_table_name => 'svmc_clip',
15:02:08  35  	  data_table_name => '&bldtable',
15:02:08  36  	  tail_frac	  => 0.025,
15:02:08  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:02:08  38  
15:02:08  39  	-- xform input data to winsorized data
15:02:08  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:02:08  41  	  clip_table_name => 'svmc_clip',
15:02:08  42  	  data_table_name => '&bldtable',
15:02:08  43  	  xform_view_name => 'svmc_winsor');
15:02:08  44  
15:02:08  45  	-- create normalization table
15:02:08  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:02:08  47  
15:02:08  48  	-- populate normalization table based on winsorized data
15:02:08  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:02:08  50  	  norm_table_name => 'svmc_norm',
15:02:08  51  	  data_table_name => 'svmc_winsor',
15:02:08  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:02:08  53  
15:02:08  54  	-- normalize the original data
15:02:08  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:02:08  56  	  norm_table_name => 'svmc_norm',
15:02:08  57  	  data_table_name => '&bldtable',
15:02:08  58  	  xform_view_name => 'svmc_build_prep');
15:02:08  59  END;
15:02:08  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.28
15:02:26 SQL> 
15:02:26 SQL> ---------------------
15:02:26 SQL> -- CREATE A NEW MODEL
15:02:26 SQL> --
15:02:26 SQL> -- Cleanup old model with the same name for repeat runs
15:02:26 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:02:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:02:26   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.03
15:02:28 SQL> 
15:02:28 SQL> -- Build a new SVM Model
15:02:28 SQL> BEGIN
15:02:28   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:02:28   3  	  model_name	      => '&model_name',
15:02:28   4  	  mining_function     => dbms_data_mining.classification,
15:02:28   5  	  data_table_name     => 'svmc_build_prep',
15:02:28   6  	  case_id_column_name => '&case_id',
15:02:28   7  	  target_column_name  => '&target',
15:02:28   8  	  settings_table_name => 'svmc_settings');
15:02:28   9  END;
15:02:28  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.62
15:02:55 SQL> 
15:02:55 SQL> -----------------------------------------------------------------------
15:02:55 SQL> --			       APPLY/score THE MODEL
15:02:55 SQL> -----------------------------------------------------------------------
15:02:55 SQL> 
15:02:55 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:02:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:02:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:02:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:02:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:02:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:02:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
15:02:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:02:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:02:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
15:02:55 SQL> -----------------------
15:02:55 SQL> -- PREPARE SCORING DATA
15:02:55 SQL> --
15:02:55 SQL> -- If the data for model creation has been prepared, then the data
15:02:55 SQL> -- to be scored using the model must be prepared in the same manner
15:02:55 SQL> -- in order to obtain meaningful results.
15:02:55 SQL> --
15:02:55 SQL> -- 1. Missing Value treatment for all Predictors and
15:02:55 SQL> -- 2. Normalization
15:02:55 SQL> -- No outlier treatment will be performed during test and apply. The
15:02:55 SQL> -- normalization step is sufficient, since the normalization parameters
15:02:55 SQL> -- already capture the effects of outlier treatment done with build data.
15:02:55 SQL> --
15:02:55 SQL> BEGIN
15:02:55   2  	-- Xform Test data to replace missing values
15:02:55   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:02:55   4  	  miss_table_name => 'svmc_miss_num',
15:02:55   5  	  data_table_name => '&scoretable',
15:02:55   6  	  xform_view_name => 'xformed_apply_miss_num');
15:02:55   7  
15:02:55   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:02:55   9  	  miss_table_name => 'svmc_miss_cat',
15:02:55  10  	  data_table_name => '&scoretable',
15:02:55  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:02:55  12  
15:02:55  13  	-- Normalize the data to be scored
15:02:55  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:02:55  15  	  norm_table_name => 'svmc_norm',
15:02:55  16  	  data_table_name => '&scoretable',
15:02:55  17  	  xform_view_name => 'svmc_apply_prep');
15:02:55  18  END;
15:02:55  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.25
15:02:57 SQL> 
15:02:57 SQL> -- Use same model_name used in score.sql
15:02:57 SQL> DEFINE model_name = 'forex15'
15:02:57 SQL> 
15:02:57 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
15:02:57 SQL> 
15:02:57 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
15:02:57 SQL> 
15:02:57 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
15:02:57   2  SELECT
15:02:57   3  prdate
15:02:57   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:02:57   5  ,sysdate
15:02:57   6  ,SUBSTR(prdate,1,3)pair
15:02:57   7  ,SUBSTR(prdate,4,19)ydate
15:02:57   8  FROM svmc_apply_prep
15:02:57   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:02:57 SQL> @aud_score1day_gattn.sql	2011-01-06 14:35:00
15:02:57 SQL> --
15:02:57 SQL> -- aud_score1day_gattn.sql
15:02:57 SQL> --
15:02:57 SQL> 
15:02:57 SQL> CREATE OR REPLACE VIEW sme AS
15:02:57   2  SELECT
15:02:57   3  'aud'||m.ydate prdate
15:02:57   4  ,NULL gattn
15:02:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:02:57   6  ,eur_g00
15:02:57   7  ,eur_g01
15:02:57   8  ,eur_g02
15:02:57   9  ,eur_g03
15:02:57  10  ,eur_g04
15:02:57  11  ,eur_g05
15:02:57  12  ,eur_g06
15:02:57  13  ,eur_g07
15:02:57  14  ,eur_g08
15:02:57  15  ,eur_g09
15:02:57  16  ,eur_g10
15:02:57  17  ,eur_g11
15:02:57  18  ,eur_g12
15:02:57  19  ,eur_g13
15:02:57  20  ,eur_g14
15:02:57  21  ,eur_g15
15:02:57  22  ,eur_g16
15:02:57  23  ,eur_g17
15:02:57  24  ,eur_g18
15:02:57  25  ,eur_g19
15:02:57  26  ,eur_g20
15:02:57  27  ,eur_g21
15:02:57  28  ,eur_g22
15:02:57  29  ,eur_g23
15:02:57  30  ,eur_g24
15:02:57  31  ,eur_g25
15:02:57  32  ,eur_g26
15:02:57  33  ,eur_g27
15:02:57  34  ,eur_g28
15:02:57  35  ,eur_g29
15:02:57  36  ,eur_g30
15:02:57  37  ,eur_g31
15:02:57  38  ,eur_g32
15:02:57  39  ,eur_g33
15:02:57  40  ,eur_g34
15:02:57  41  ,eur_g35
15:02:57  42  ,eur_g36
15:02:57  43  ,eur_g37
15:02:57  44  ,eur_g38
15:02:57  45  ,eur_g39
15:02:57  46  ,eur_g40
15:02:57  47  ,eur_g41
15:02:57  48  ,aud_g00
15:02:57  49  ,aud_g01
15:02:57  50  ,aud_g02
15:02:57  51  ,aud_g03
15:02:57  52  ,aud_g04
15:02:57  53  ,aud_g05
15:02:57  54  ,aud_g06
15:02:57  55  ,aud_g07
15:02:57  56  ,aud_g08
15:02:57  57  ,aud_g09
15:02:57  58  ,aud_g10
15:02:57  59  ,aud_g11
15:02:57  60  ,aud_g12
15:02:57  61  ,aud_g13
15:02:57  62  ,aud_g14
15:02:57  63  ,aud_g15
15:02:57  64  ,aud_g16
15:02:57  65  ,aud_g17
15:02:57  66  ,aud_g18
15:02:57  67  ,aud_g19
15:02:57  68  ,aud_g20
15:02:57  69  ,aud_g21
15:02:57  70  ,aud_g22
15:02:57  71  ,aud_g23
15:02:57  72  ,aud_g24
15:02:57  73  ,aud_g25
15:02:57  74  ,aud_g26
15:02:57  75  ,aud_g27
15:02:57  76  ,aud_g28
15:02:57  77  ,aud_g29
15:02:57  78  ,aud_g30
15:02:57  79  ,aud_g31
15:02:57  80  ,aud_g32
15:02:57  81  ,aud_g33
15:02:57  82  ,aud_g34
15:02:57  83  ,aud_g35
15:02:57  84  ,aud_g36
15:02:57  85  ,aud_g37
15:02:57  86  ,aud_g38
15:02:57  87  ,aud_g39
15:02:57  88  ,aud_g40
15:02:57  89  ,aud_g41
15:02:57  90  ,gbp_g00
15:02:57  91  ,gbp_g01
15:02:57  92  ,gbp_g02
15:02:57  93  ,gbp_g03
15:02:57  94  ,gbp_g04
15:02:57  95  ,gbp_g05
15:02:57  96  ,gbp_g06
15:02:57  97  ,gbp_g07
15:02:57  98  ,gbp_g08
15:02:57  99  ,gbp_g09
15:02:57 100  ,gbp_g10
15:02:57 101  ,gbp_g11
15:02:57 102  ,gbp_g12
15:02:57 103  ,gbp_g13
15:02:57 104  ,gbp_g14
15:02:57 105  ,gbp_g15
15:02:57 106  ,gbp_g16
15:02:57 107  ,gbp_g17
15:02:57 108  ,gbp_g18
15:02:57 109  ,gbp_g19
15:02:57 110  ,gbp_g20
15:02:57 111  ,gbp_g21
15:02:57 112  ,gbp_g22
15:02:57 113  ,gbp_g23
15:02:57 114  ,gbp_g24
15:02:57 115  ,gbp_g25
15:02:57 116  ,gbp_g26
15:02:57 117  ,gbp_g27
15:02:57 118  ,gbp_g28
15:02:57 119  ,gbp_g29
15:02:57 120  ,gbp_g30
15:02:57 121  ,gbp_g31
15:02:57 122  ,gbp_g32
15:02:57 123  ,gbp_g33
15:02:57 124  ,gbp_g34
15:02:57 125  ,gbp_g35
15:02:57 126  ,gbp_g36
15:02:57 127  ,gbp_g37
15:02:57 128  ,gbp_g38
15:02:57 129  ,gbp_g39
15:02:57 130  ,gbp_g40
15:02:57 131  ,gbp_g41
15:02:57 132  ,jpy_g00
15:02:57 133  ,jpy_g01
15:02:57 134  ,jpy_g02
15:02:57 135  ,jpy_g03
15:02:57 136  ,jpy_g04
15:02:57 137  ,jpy_g05
15:02:57 138  ,jpy_g06
15:02:57 139  ,jpy_g07
15:02:57 140  ,jpy_g08
15:02:57 141  ,jpy_g09
15:02:57 142  ,jpy_g10
15:02:57 143  ,jpy_g11
15:02:57 144  ,jpy_g12
15:02:57 145  ,jpy_g13
15:02:57 146  ,jpy_g14
15:02:57 147  ,jpy_g15
15:02:57 148  ,jpy_g16
15:02:57 149  ,jpy_g17
15:02:57 150  ,jpy_g18
15:02:57 151  ,jpy_g19
15:02:57 152  ,jpy_g20
15:02:57 153  ,jpy_g21
15:02:57 154  ,jpy_g22
15:02:57 155  ,jpy_g23
15:02:57 156  ,jpy_g24
15:02:57 157  ,jpy_g25
15:02:57 158  ,jpy_g26
15:02:57 159  ,jpy_g27
15:02:57 160  ,jpy_g28
15:02:57 161  ,jpy_g29
15:02:57 162  ,jpy_g30
15:02:57 163  ,jpy_g31
15:02:57 164  ,jpy_g32
15:02:57 165  ,jpy_g33
15:02:57 166  ,jpy_g34
15:02:57 167  ,jpy_g35
15:02:57 168  ,jpy_g36
15:02:57 169  ,jpy_g37
15:02:57 170  ,jpy_g38
15:02:57 171  ,jpy_g39
15:02:57 172  ,jpy_g40
15:02:57 173  ,jpy_g41
15:02:57 174  ,cad_g00
15:02:57 175  ,cad_g01
15:02:57 176  ,cad_g02
15:02:57 177  ,cad_g03
15:02:57 178  ,cad_g04
15:02:57 179  ,cad_g05
15:02:57 180  ,cad_g06
15:02:57 181  ,cad_g07
15:02:57 182  ,cad_g08
15:02:57 183  ,cad_g09
15:02:57 184  ,cad_g10
15:02:57 185  ,cad_g11
15:02:57 186  ,cad_g12
15:02:57 187  ,cad_g13
15:02:57 188  ,cad_g14
15:02:57 189  ,cad_g15
15:02:57 190  ,cad_g16
15:02:57 191  ,cad_g17
15:02:57 192  ,cad_g18
15:02:57 193  ,cad_g19
15:02:57 194  ,cad_g20
15:02:57 195  ,cad_g21
15:02:57 196  ,cad_g22
15:02:57 197  ,cad_g23
15:02:57 198  ,cad_g24
15:02:57 199  ,cad_g25
15:02:57 200  ,cad_g26
15:02:57 201  ,cad_g27
15:02:57 202  ,cad_g28
15:02:57 203  ,cad_g29
15:02:57 204  ,cad_g30
15:02:57 205  ,cad_g31
15:02:57 206  ,cad_g32
15:02:57 207  ,cad_g33
15:02:57 208  ,cad_g34
15:02:57 209  ,cad_g35
15:02:57 210  ,cad_g36
15:02:57 211  ,cad_g37
15:02:57 212  ,cad_g38
15:02:57 213  ,cad_g39
15:02:57 214  ,cad_g40
15:02:57 215  ,cad_g41
15:02:57 216  ,chf_g00
15:02:57 217  ,chf_g01
15:02:57 218  ,chf_g02
15:02:57 219  ,chf_g03
15:02:57 220  ,chf_g04
15:02:57 221  ,chf_g05
15:02:57 222  ,chf_g06
15:02:57 223  ,chf_g07
15:02:57 224  ,chf_g08
15:02:57 225  ,chf_g09
15:02:57 226  ,chf_g10
15:02:57 227  ,chf_g11
15:02:57 228  ,chf_g12
15:02:57 229  ,chf_g13
15:02:57 230  ,chf_g14
15:02:57 231  ,chf_g15
15:02:57 232  ,chf_g16
15:02:57 233  ,chf_g17
15:02:57 234  ,chf_g18
15:02:57 235  ,chf_g19
15:02:57 236  ,chf_g20
15:02:57 237  ,chf_g21
15:02:57 238  ,chf_g22
15:02:57 239  ,chf_g23
15:02:57 240  ,chf_g24
15:02:57 241  ,chf_g25
15:02:57 242  ,chf_g26
15:02:57 243  ,chf_g27
15:02:57 244  ,chf_g28
15:02:57 245  ,chf_g29
15:02:57 246  ,chf_g30
15:02:57 247  ,chf_g31
15:02:57 248  ,chf_g32
15:02:57 249  ,chf_g33
15:02:57 250  ,chf_g34
15:02:57 251  ,chf_g35
15:02:57 252  ,chf_g36
15:02:57 253  ,chf_g37
15:02:57 254  ,chf_g38
15:02:57 255  ,chf_g39
15:02:57 256  ,chf_g40
15:02:57 257  ,chf_g41
15:02:57 258  FROM aud_ms6 m
15:02:57 259  WHERE m.ydate = '&1'||' '||'&2'
15:02:57 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'14:35:00'

View created.

Elapsed: 00:00:00.10
15:02:57 SQL> 
15:02:57 SQL> -- rpt
15:02:57 SQL> -- We should see just 1 row:
15:02:57 SQL> 
15:02:57 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
15:02:57 SQL> 
15:02:57 SQL> -- Build the model:
15:02:57 SQL> CREATE OR REPLACE VIEW bme AS
15:02:57   2  SELECT
15:02:57   3  'aud'||m.ydate prdate
15:02:57   4  ,gattn
15:02:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:02:57   6  ,eur_g00
15:02:57   7  ,eur_g01
15:02:57   8  ,eur_g02
15:02:57   9  ,eur_g03
15:02:57  10  ,eur_g04
15:02:57  11  ,eur_g05
15:02:57  12  ,eur_g06
15:02:57  13  ,eur_g07
15:02:57  14  ,eur_g08
15:02:57  15  ,eur_g09
15:02:57  16  ,eur_g10
15:02:57  17  ,eur_g11
15:02:57  18  ,eur_g12
15:02:57  19  ,eur_g13
15:02:57  20  ,eur_g14
15:02:57  21  ,eur_g15
15:02:57  22  ,eur_g16
15:02:57  23  ,eur_g17
15:02:57  24  ,eur_g18
15:02:57  25  ,eur_g19
15:02:57  26  ,eur_g20
15:02:57  27  ,eur_g21
15:02:57  28  ,eur_g22
15:02:57  29  ,eur_g23
15:02:57  30  ,eur_g24
15:02:57  31  ,eur_g25
15:02:57  32  ,eur_g26
15:02:57  33  ,eur_g27
15:02:57  34  ,eur_g28
15:02:57  35  ,eur_g29
15:02:57  36  ,eur_g30
15:02:57  37  ,eur_g31
15:02:57  38  ,eur_g32
15:02:57  39  ,eur_g33
15:02:57  40  ,eur_g34
15:02:57  41  ,eur_g35
15:02:57  42  ,eur_g36
15:02:57  43  ,eur_g37
15:02:57  44  ,eur_g38
15:02:57  45  ,eur_g39
15:02:57  46  ,eur_g40
15:02:57  47  ,eur_g41
15:02:57  48  ,aud_g00
15:02:57  49  ,aud_g01
15:02:57  50  ,aud_g02
15:02:57  51  ,aud_g03
15:02:57  52  ,aud_g04
15:02:57  53  ,aud_g05
15:02:57  54  ,aud_g06
15:02:57  55  ,aud_g07
15:02:57  56  ,aud_g08
15:02:57  57  ,aud_g09
15:02:57  58  ,aud_g10
15:02:57  59  ,aud_g11
15:02:57  60  ,aud_g12
15:02:57  61  ,aud_g13
15:02:57  62  ,aud_g14
15:02:57  63  ,aud_g15
15:02:57  64  ,aud_g16
15:02:57  65  ,aud_g17
15:02:57  66  ,aud_g18
15:02:57  67  ,aud_g19
15:02:57  68  ,aud_g20
15:02:57  69  ,aud_g21
15:02:57  70  ,aud_g22
15:02:57  71  ,aud_g23
15:02:57  72  ,aud_g24
15:02:57  73  ,aud_g25
15:02:57  74  ,aud_g26
15:02:57  75  ,aud_g27
15:02:57  76  ,aud_g28
15:02:57  77  ,aud_g29
15:02:57  78  ,aud_g30
15:02:57  79  ,aud_g31
15:02:57  80  ,aud_g32
15:02:57  81  ,aud_g33
15:02:57  82  ,aud_g34
15:02:57  83  ,aud_g35
15:02:57  84  ,aud_g36
15:02:57  85  ,aud_g37
15:02:57  86  ,aud_g38
15:02:57  87  ,aud_g39
15:02:57  88  ,aud_g40
15:02:57  89  ,aud_g41
15:02:57  90  ,gbp_g00
15:02:57  91  ,gbp_g01
15:02:57  92  ,gbp_g02
15:02:57  93  ,gbp_g03
15:02:57  94  ,gbp_g04
15:02:57  95  ,gbp_g05
15:02:57  96  ,gbp_g06
15:02:57  97  ,gbp_g07
15:02:57  98  ,gbp_g08
15:02:57  99  ,gbp_g09
15:02:57 100  ,gbp_g10
15:02:57 101  ,gbp_g11
15:02:57 102  ,gbp_g12
15:02:57 103  ,gbp_g13
15:02:57 104  ,gbp_g14
15:02:57 105  ,gbp_g15
15:02:57 106  ,gbp_g16
15:02:57 107  ,gbp_g17
15:02:57 108  ,gbp_g18
15:02:57 109  ,gbp_g19
15:02:57 110  ,gbp_g20
15:02:57 111  ,gbp_g21
15:02:57 112  ,gbp_g22
15:02:57 113  ,gbp_g23
15:02:57 114  ,gbp_g24
15:02:57 115  ,gbp_g25
15:02:57 116  ,gbp_g26
15:02:57 117  ,gbp_g27
15:02:57 118  ,gbp_g28
15:02:57 119  ,gbp_g29
15:02:57 120  ,gbp_g30
15:02:57 121  ,gbp_g31
15:02:57 122  ,gbp_g32
15:02:57 123  ,gbp_g33
15:02:57 124  ,gbp_g34
15:02:57 125  ,gbp_g35
15:02:57 126  ,gbp_g36
15:02:57 127  ,gbp_g37
15:02:57 128  ,gbp_g38
15:02:57 129  ,gbp_g39
15:02:57 130  ,gbp_g40
15:02:57 131  ,gbp_g41
15:02:57 132  ,jpy_g00
15:02:57 133  ,jpy_g01
15:02:57 134  ,jpy_g02
15:02:57 135  ,jpy_g03
15:02:57 136  ,jpy_g04
15:02:57 137  ,jpy_g05
15:02:57 138  ,jpy_g06
15:02:57 139  ,jpy_g07
15:02:57 140  ,jpy_g08
15:02:57 141  ,jpy_g09
15:02:57 142  ,jpy_g10
15:02:57 143  ,jpy_g11
15:02:57 144  ,jpy_g12
15:02:57 145  ,jpy_g13
15:02:57 146  ,jpy_g14
15:02:57 147  ,jpy_g15
15:02:57 148  ,jpy_g16
15:02:57 149  ,jpy_g17
15:02:57 150  ,jpy_g18
15:02:57 151  ,jpy_g19
15:02:57 152  ,jpy_g20
15:02:57 153  ,jpy_g21
15:02:57 154  ,jpy_g22
15:02:57 155  ,jpy_g23
15:02:57 156  ,jpy_g24
15:02:57 157  ,jpy_g25
15:02:57 158  ,jpy_g26
15:02:57 159  ,jpy_g27
15:02:57 160  ,jpy_g28
15:02:57 161  ,jpy_g29
15:02:57 162  ,jpy_g30
15:02:57 163  ,jpy_g31
15:02:57 164  ,jpy_g32
15:02:57 165  ,jpy_g33
15:02:57 166  ,jpy_g34
15:02:57 167  ,jpy_g35
15:02:57 168  ,jpy_g36
15:02:57 169  ,jpy_g37
15:02:57 170  ,jpy_g38
15:02:57 171  ,jpy_g39
15:02:57 172  ,jpy_g40
15:02:57 173  ,jpy_g41
15:02:57 174  ,cad_g00
15:02:57 175  ,cad_g01
15:02:57 176  ,cad_g02
15:02:57 177  ,cad_g03
15:02:57 178  ,cad_g04
15:02:57 179  ,cad_g05
15:02:57 180  ,cad_g06
15:02:57 181  ,cad_g07
15:02:57 182  ,cad_g08
15:02:57 183  ,cad_g09
15:02:57 184  ,cad_g10
15:02:57 185  ,cad_g11
15:02:57 186  ,cad_g12
15:02:57 187  ,cad_g13
15:02:57 188  ,cad_g14
15:02:57 189  ,cad_g15
15:02:57 190  ,cad_g16
15:02:57 191  ,cad_g17
15:02:57 192  ,cad_g18
15:02:57 193  ,cad_g19
15:02:57 194  ,cad_g20
15:02:57 195  ,cad_g21
15:02:57 196  ,cad_g22
15:02:57 197  ,cad_g23
15:02:57 198  ,cad_g24
15:02:57 199  ,cad_g25
15:02:57 200  ,cad_g26
15:02:57 201  ,cad_g27
15:02:57 202  ,cad_g28
15:02:57 203  ,cad_g29
15:02:57 204  ,cad_g30
15:02:57 205  ,cad_g31
15:02:57 206  ,cad_g32
15:02:57 207  ,cad_g33
15:02:57 208  ,cad_g34
15:02:57 209  ,cad_g35
15:02:57 210  ,cad_g36
15:02:57 211  ,cad_g37
15:02:57 212  ,cad_g38
15:02:57 213  ,cad_g39
15:02:57 214  ,cad_g40
15:02:57 215  ,cad_g41
15:02:57 216  ,chf_g00
15:02:57 217  ,chf_g01
15:02:57 218  ,chf_g02
15:02:57 219  ,chf_g03
15:02:57 220  ,chf_g04
15:02:57 221  ,chf_g05
15:02:57 222  ,chf_g06
15:02:57 223  ,chf_g07
15:02:57 224  ,chf_g08
15:02:57 225  ,chf_g09
15:02:57 226  ,chf_g10
15:02:57 227  ,chf_g11
15:02:57 228  ,chf_g12
15:02:57 229  ,chf_g13
15:02:57 230  ,chf_g14
15:02:57 231  ,chf_g15
15:02:57 232  ,chf_g16
15:02:57 233  ,chf_g17
15:02:57 234  ,chf_g18
15:02:57 235  ,chf_g19
15:02:57 236  ,chf_g20
15:02:57 237  ,chf_g21
15:02:57 238  ,chf_g22
15:02:57 239  ,chf_g23
15:02:57 240  ,chf_g24
15:02:57 241  ,chf_g25
15:02:57 242  ,chf_g26
15:02:57 243  ,chf_g27
15:02:57 244  ,chf_g28
15:02:57 245  ,chf_g29
15:02:57 246  ,chf_g30
15:02:57 247  ,chf_g31
15:02:57 248  ,chf_g32
15:02:57 249  ,chf_g33
15:02:57 250  ,chf_g34
15:02:57 251  ,chf_g35
15:02:57 252  ,chf_g36
15:02:57 253  ,chf_g37
15:02:57 254  ,chf_g38
15:02:57 255  ,chf_g39
15:02:57 256  ,chf_g40
15:02:57 257  ,chf_g41
15:02:57 258  FROM aud_ms6 m
15:02:57 259  WHERE gattn IN('nup','up')
15:02:57 260  AND 1+m.ydate < '&1'||' '||'&2'
15:02:57 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'14:35:00'

View created.

Elapsed: 00:00:00.12
15:02:57 SQL> 
15:02:57 SQL> -- rpt
15:02:57 SQL> 
15:02:57 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12820
up	     6620

Elapsed: 00:00:00.05
15:02:57 SQL> 
15:02:57 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 14:30:00

Elapsed: 00:00:00.03
15:02:57 SQL> 
15:02:57 SQL> -- Now build model from bme and score sme
15:02:57 SQL> @score1gattn.sql
15:02:57 SQL> -- score1gattn.sql
15:02:57 SQL> 
15:02:57 SQL> -- Does the 1st SVM score
15:02:57 SQL> 
15:02:57 SQL> -- Fill up svmc_apply_prep
15:02:57 SQL> @score_gattn.sql
15:02:57 SQL> --
15:02:57 SQL> -- score_gattn.sql
15:02:57 SQL> --
15:02:57 SQL> 
15:02:57 SQL> -- usage: score_gattn.sql
15:02:57 SQL> 
15:02:57 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:02:57 SQL> 
15:02:57 SQL> DEFINE target	= 'gattn'
15:02:57 SQL> DEFINE model_name = 'forex15'
15:02:57 SQL> DEFINE bldtable	= 'bme'
15:02:57 SQL> DEFINE scoretable = 'sme'
15:02:57 SQL> DEFINE case_id	= 'prdate'
15:02:57 SQL> 
15:02:57 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:02:57 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:02:57 SQL> 
15:02:57 SQL> -- Builds an SVM model using pl/sql.
15:02:57 SQL> 
15:02:57 SQL> -----------------------------------------------------------------------
15:02:57 SQL> --			    BUILD THE MODEL
15:02:57 SQL> -----------------------------------------------------------------------
15:02:57 SQL> 
15:02:57 SQL> -- Cleanup old build data preparation objects for repeat runs
15:02:57 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
15:02:57 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:02:57 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
15:02:57 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
15:02:57 SQL> 
15:02:57 SQL> 
15:02:57 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:02:57 SQL> --
15:02:57 SQL> -- DROP	TABLE svmc_settings ;
15:02:57 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:02:57 SQL> -- DELETE svmc_settings;
15:02:57 SQL> 
15:02:57 SQL> -- The default classification algorithm is Naive Bayes. So override
15:02:57 SQL> -- this choice to SVM using a settings table.
15:02:57 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:02:57 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:02:57 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:02:57 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:02:57 SQL> -- models.
15:02:57 SQL> --
15:02:57 SQL> 
15:02:57 SQL> -- Do this once and then comment it out.
15:02:57 SQL> -- That makes script go faster.
15:02:57 SQL> -- BEGIN
15:02:57 SQL> -- -- Populate settings table
15:02:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:02:57 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:02:57 SQL> --
15:02:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:02:57 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:02:57 SQL> --
15:02:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:02:57 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:02:57 SQL> --   COMMIT;
15:02:57 SQL> -- END;
15:02:57 SQL> -- /
15:02:57 SQL> 
15:02:57 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:02:57 SQL> 
15:02:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:02:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:02:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:02:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:02:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:02:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:02:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:02:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:02:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:02:57 SQL> 
15:02:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:02:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:02:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
15:02:57 SQL> 
15:02:57 SQL> --------------------------------
15:02:57 SQL> -- PREPARE BUILD (TRAINING) DATA
15:02:57 SQL> --
15:02:57 SQL> 
15:02:57 SQL> -- 1. Missing Value treatment for all Predictors and
15:02:57 SQL> -- 2. Outlier Treatment and
15:02:57 SQL> -- 3. Normalization are performed below.
15:02:57 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:02:57 SQL> --    normalized here.
15:02:57 SQL> 
15:02:57 SQL> BEGIN
15:02:57   2  	-- Perform missing value treatment for all predictors
15:02:57   3  	-- create miss tables
15:02:57   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:02:57   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:02:57   6  
15:02:57   7  	-- populate miss tables
15:02:57   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:02:57   9  	  miss_table_name => 'svmc_miss_num',
15:02:57  10  	  data_table_name => '&bldtable',
15:02:57  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:02:57  12  
15:02:57  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:02:57  14  	  miss_table_name => 'svmc_miss_cat',
15:02:57  15  	  data_table_name => '&bldtable',
15:02:57  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:02:57  17  
15:02:57  18  	-- xform input data to replace missing values
15:02:57  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:02:57  20  	  miss_table_name => 'svmc_miss_num',
15:02:57  21  	  data_table_name => '&bldtable',
15:02:57  22  	  xform_view_name => 'xformed_build_miss_num');
15:02:57  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:02:57  24  	  miss_table_name => 'svmc_miss_cat',
15:02:57  25  	  data_table_name => '&bldtable',
15:02:57  26  	  xform_view_name => 'xformed_build_miss_cat');
15:02:57  27  
15:02:57  28  	-- Perform outlier treatment.
15:02:57  29  	-- create clip table
15:02:57  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:02:57  31  
15:02:57  32  	-- populate clip table
15:02:57  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:02:57  34  	  clip_table_name => 'svmc_clip',
15:02:57  35  	  data_table_name => '&bldtable',
15:02:57  36  	  tail_frac	  => 0.025,
15:02:57  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:02:57  38  
15:02:57  39  	-- xform input data to winsorized data
15:02:57  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:02:57  41  	  clip_table_name => 'svmc_clip',
15:02:57  42  	  data_table_name => '&bldtable',
15:02:57  43  	  xform_view_name => 'svmc_winsor');
15:02:57  44  
15:02:57  45  	-- create normalization table
15:02:57  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:02:57  47  
15:02:57  48  	-- populate normalization table based on winsorized data
15:02:57  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:02:57  50  	  norm_table_name => 'svmc_norm',
15:02:57  51  	  data_table_name => 'svmc_winsor',
15:02:57  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:02:57  53  
15:02:57  54  	-- normalize the original data
15:02:57  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:02:57  56  	  norm_table_name => 'svmc_norm',
15:02:57  57  	  data_table_name => '&bldtable',
15:02:57  58  	  xform_view_name => 'svmc_build_prep');
15:02:57  59  END;
15:02:57  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.59
15:03:16 SQL> 
15:03:16 SQL> ---------------------
15:03:16 SQL> -- CREATE A NEW MODEL
15:03:16 SQL> --
15:03:16 SQL> -- Cleanup old model with the same name for repeat runs
15:03:16 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:03:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:03:16   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.02
15:03:17 SQL> 
15:03:17 SQL> -- Build a new SVM Model
15:03:17 SQL> BEGIN
15:03:17   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:03:17   3  	  model_name	      => '&model_name',
15:03:17   4  	  mining_function     => dbms_data_mining.classification,
15:03:17   5  	  data_table_name     => 'svmc_build_prep',
15:03:17   6  	  case_id_column_name => '&case_id',
15:03:17   7  	  target_column_name  => '&target',
15:03:17   8  	  settings_table_name => 'svmc_settings');
15:03:17   9  END;
15:03:17  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.83
15:03:45 SQL> 
15:03:45 SQL> -----------------------------------------------------------------------
15:03:45 SQL> --			       APPLY/score THE MODEL
15:03:45 SQL> -----------------------------------------------------------------------
15:03:45 SQL> 
15:03:45 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:03:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:03:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:03:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:03:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:03:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:03:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:03:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:03:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:03:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.16
15:03:45 SQL> -----------------------
15:03:45 SQL> -- PREPARE SCORING DATA
15:03:45 SQL> --
15:03:45 SQL> -- If the data for model creation has been prepared, then the data
15:03:45 SQL> -- to be scored using the model must be prepared in the same manner
15:03:45 SQL> -- in order to obtain meaningful results.
15:03:45 SQL> --
15:03:45 SQL> -- 1. Missing Value treatment for all Predictors and
15:03:45 SQL> -- 2. Normalization
15:03:45 SQL> -- No outlier treatment will be performed during test and apply. The
15:03:45 SQL> -- normalization step is sufficient, since the normalization parameters
15:03:45 SQL> -- already capture the effects of outlier treatment done with build data.
15:03:45 SQL> --
15:03:45 SQL> BEGIN
15:03:45   2  	-- Xform Test data to replace missing values
15:03:45   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:03:45   4  	  miss_table_name => 'svmc_miss_num',
15:03:45   5  	  data_table_name => '&scoretable',
15:03:45   6  	  xform_view_name => 'xformed_apply_miss_num');
15:03:45   7  
15:03:45   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:03:45   9  	  miss_table_name => 'svmc_miss_cat',
15:03:45  10  	  data_table_name => '&scoretable',
15:03:45  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:03:45  12  
15:03:45  13  	-- Normalize the data to be scored
15:03:45  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:03:45  15  	  norm_table_name => 'svmc_norm',
15:03:45  16  	  data_table_name => '&scoretable',
15:03:45  17  	  xform_view_name => 'svmc_apply_prep');
15:03:45  18  END;
15:03:45  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
15:03:46 SQL> 
15:03:46 SQL> -- Use same model_name used in score_gattn.sql
15:03:46 SQL> DEFINE model_name = 'forex15'
15:03:46 SQL> 
15:03:46 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.07
15:03:46 SQL> 
15:03:46 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
15:03:46   2  SELECT
15:03:46   3  prdate
15:03:46   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:03:46   5  ,sysdate
15:03:46   6  ,SUBSTR(prdate,1,3)pair
15:03:46   7  ,SUBSTR(prdate,4,19)ydate
15:03:46   8  FROM svmc_apply_prep
15:03:46   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
15:03:47 SQL> @aud_score1day_gattn.sql	2011-01-06 14:40:00
15:03:47 SQL> --
15:03:47 SQL> -- aud_score1day_gattn.sql
15:03:47 SQL> --
15:03:47 SQL> 
15:03:47 SQL> CREATE OR REPLACE VIEW sme AS
15:03:47   2  SELECT
15:03:47   3  'aud'||m.ydate prdate
15:03:47   4  ,NULL gattn
15:03:47   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:03:47   6  ,eur_g00
15:03:47   7  ,eur_g01
15:03:47   8  ,eur_g02
15:03:47   9  ,eur_g03
15:03:47  10  ,eur_g04
15:03:47  11  ,eur_g05
15:03:47  12  ,eur_g06
15:03:47  13  ,eur_g07
15:03:47  14  ,eur_g08
15:03:47  15  ,eur_g09
15:03:47  16  ,eur_g10
15:03:47  17  ,eur_g11
15:03:47  18  ,eur_g12
15:03:47  19  ,eur_g13
15:03:47  20  ,eur_g14
15:03:47  21  ,eur_g15
15:03:47  22  ,eur_g16
15:03:47  23  ,eur_g17
15:03:47  24  ,eur_g18
15:03:47  25  ,eur_g19
15:03:47  26  ,eur_g20
15:03:47  27  ,eur_g21
15:03:47  28  ,eur_g22
15:03:47  29  ,eur_g23
15:03:47  30  ,eur_g24
15:03:47  31  ,eur_g25
15:03:47  32  ,eur_g26
15:03:47  33  ,eur_g27
15:03:47  34  ,eur_g28
15:03:47  35  ,eur_g29
15:03:47  36  ,eur_g30
15:03:47  37  ,eur_g31
15:03:47  38  ,eur_g32
15:03:47  39  ,eur_g33
15:03:47  40  ,eur_g34
15:03:47  41  ,eur_g35
15:03:47  42  ,eur_g36
15:03:47  43  ,eur_g37
15:03:47  44  ,eur_g38
15:03:47  45  ,eur_g39
15:03:47  46  ,eur_g40
15:03:47  47  ,eur_g41
15:03:47  48  ,aud_g00
15:03:47  49  ,aud_g01
15:03:47  50  ,aud_g02
15:03:47  51  ,aud_g03
15:03:47  52  ,aud_g04
15:03:47  53  ,aud_g05
15:03:47  54  ,aud_g06
15:03:47  55  ,aud_g07
15:03:47  56  ,aud_g08
15:03:47  57  ,aud_g09
15:03:47  58  ,aud_g10
15:03:47  59  ,aud_g11
15:03:47  60  ,aud_g12
15:03:47  61  ,aud_g13
15:03:47  62  ,aud_g14
15:03:47  63  ,aud_g15
15:03:47  64  ,aud_g16
15:03:47  65  ,aud_g17
15:03:47  66  ,aud_g18
15:03:47  67  ,aud_g19
15:03:47  68  ,aud_g20
15:03:47  69  ,aud_g21
15:03:47  70  ,aud_g22
15:03:47  71  ,aud_g23
15:03:47  72  ,aud_g24
15:03:47  73  ,aud_g25
15:03:47  74  ,aud_g26
15:03:47  75  ,aud_g27
15:03:47  76  ,aud_g28
15:03:47  77  ,aud_g29
15:03:47  78  ,aud_g30
15:03:47  79  ,aud_g31
15:03:47  80  ,aud_g32
15:03:47  81  ,aud_g33
15:03:47  82  ,aud_g34
15:03:47  83  ,aud_g35
15:03:47  84  ,aud_g36
15:03:47  85  ,aud_g37
15:03:47  86  ,aud_g38
15:03:47  87  ,aud_g39
15:03:47  88  ,aud_g40
15:03:47  89  ,aud_g41
15:03:47  90  ,gbp_g00
15:03:47  91  ,gbp_g01
15:03:47  92  ,gbp_g02
15:03:47  93  ,gbp_g03
15:03:47  94  ,gbp_g04
15:03:47  95  ,gbp_g05
15:03:47  96  ,gbp_g06
15:03:47  97  ,gbp_g07
15:03:47  98  ,gbp_g08
15:03:47  99  ,gbp_g09
15:03:47 100  ,gbp_g10
15:03:47 101  ,gbp_g11
15:03:47 102  ,gbp_g12
15:03:47 103  ,gbp_g13
15:03:47 104  ,gbp_g14
15:03:47 105  ,gbp_g15
15:03:47 106  ,gbp_g16
15:03:47 107  ,gbp_g17
15:03:47 108  ,gbp_g18
15:03:47 109  ,gbp_g19
15:03:47 110  ,gbp_g20
15:03:47 111  ,gbp_g21
15:03:47 112  ,gbp_g22
15:03:47 113  ,gbp_g23
15:03:47 114  ,gbp_g24
15:03:47 115  ,gbp_g25
15:03:47 116  ,gbp_g26
15:03:47 117  ,gbp_g27
15:03:47 118  ,gbp_g28
15:03:47 119  ,gbp_g29
15:03:47 120  ,gbp_g30
15:03:47 121  ,gbp_g31
15:03:47 122  ,gbp_g32
15:03:47 123  ,gbp_g33
15:03:47 124  ,gbp_g34
15:03:47 125  ,gbp_g35
15:03:47 126  ,gbp_g36
15:03:47 127  ,gbp_g37
15:03:47 128  ,gbp_g38
15:03:47 129  ,gbp_g39
15:03:47 130  ,gbp_g40
15:03:47 131  ,gbp_g41
15:03:47 132  ,jpy_g00
15:03:47 133  ,jpy_g01
15:03:47 134  ,jpy_g02
15:03:47 135  ,jpy_g03
15:03:47 136  ,jpy_g04
15:03:47 137  ,jpy_g05
15:03:47 138  ,jpy_g06
15:03:47 139  ,jpy_g07
15:03:47 140  ,jpy_g08
15:03:47 141  ,jpy_g09
15:03:47 142  ,jpy_g10
15:03:47 143  ,jpy_g11
15:03:47 144  ,jpy_g12
15:03:47 145  ,jpy_g13
15:03:47 146  ,jpy_g14
15:03:47 147  ,jpy_g15
15:03:47 148  ,jpy_g16
15:03:47 149  ,jpy_g17
15:03:47 150  ,jpy_g18
15:03:47 151  ,jpy_g19
15:03:47 152  ,jpy_g20
15:03:47 153  ,jpy_g21
15:03:47 154  ,jpy_g22
15:03:47 155  ,jpy_g23
15:03:47 156  ,jpy_g24
15:03:47 157  ,jpy_g25
15:03:47 158  ,jpy_g26
15:03:47 159  ,jpy_g27
15:03:47 160  ,jpy_g28
15:03:47 161  ,jpy_g29
15:03:47 162  ,jpy_g30
15:03:47 163  ,jpy_g31
15:03:47 164  ,jpy_g32
15:03:47 165  ,jpy_g33
15:03:47 166  ,jpy_g34
15:03:47 167  ,jpy_g35
15:03:47 168  ,jpy_g36
15:03:47 169  ,jpy_g37
15:03:47 170  ,jpy_g38
15:03:47 171  ,jpy_g39
15:03:47 172  ,jpy_g40
15:03:47 173  ,jpy_g41
15:03:47 174  ,cad_g00
15:03:47 175  ,cad_g01
15:03:47 176  ,cad_g02
15:03:47 177  ,cad_g03
15:03:47 178  ,cad_g04
15:03:47 179  ,cad_g05
15:03:47 180  ,cad_g06
15:03:47 181  ,cad_g07
15:03:47 182  ,cad_g08
15:03:47 183  ,cad_g09
15:03:47 184  ,cad_g10
15:03:47 185  ,cad_g11
15:03:47 186  ,cad_g12
15:03:47 187  ,cad_g13
15:03:47 188  ,cad_g14
15:03:47 189  ,cad_g15
15:03:47 190  ,cad_g16
15:03:47 191  ,cad_g17
15:03:47 192  ,cad_g18
15:03:47 193  ,cad_g19
15:03:47 194  ,cad_g20
15:03:47 195  ,cad_g21
15:03:47 196  ,cad_g22
15:03:47 197  ,cad_g23
15:03:47 198  ,cad_g24
15:03:47 199  ,cad_g25
15:03:47 200  ,cad_g26
15:03:47 201  ,cad_g27
15:03:47 202  ,cad_g28
15:03:47 203  ,cad_g29
15:03:47 204  ,cad_g30
15:03:47 205  ,cad_g31
15:03:47 206  ,cad_g32
15:03:47 207  ,cad_g33
15:03:47 208  ,cad_g34
15:03:47 209  ,cad_g35
15:03:47 210  ,cad_g36
15:03:47 211  ,cad_g37
15:03:47 212  ,cad_g38
15:03:47 213  ,cad_g39
15:03:47 214  ,cad_g40
15:03:47 215  ,cad_g41
15:03:47 216  ,chf_g00
15:03:47 217  ,chf_g01
15:03:47 218  ,chf_g02
15:03:47 219  ,chf_g03
15:03:47 220  ,chf_g04
15:03:47 221  ,chf_g05
15:03:47 222  ,chf_g06
15:03:47 223  ,chf_g07
15:03:47 224  ,chf_g08
15:03:47 225  ,chf_g09
15:03:47 226  ,chf_g10
15:03:47 227  ,chf_g11
15:03:47 228  ,chf_g12
15:03:47 229  ,chf_g13
15:03:47 230  ,chf_g14
15:03:47 231  ,chf_g15
15:03:47 232  ,chf_g16
15:03:47 233  ,chf_g17
15:03:47 234  ,chf_g18
15:03:47 235  ,chf_g19
15:03:47 236  ,chf_g20
15:03:47 237  ,chf_g21
15:03:47 238  ,chf_g22
15:03:47 239  ,chf_g23
15:03:47 240  ,chf_g24
15:03:47 241  ,chf_g25
15:03:47 242  ,chf_g26
15:03:47 243  ,chf_g27
15:03:47 244  ,chf_g28
15:03:47 245  ,chf_g29
15:03:47 246  ,chf_g30
15:03:47 247  ,chf_g31
15:03:47 248  ,chf_g32
15:03:47 249  ,chf_g33
15:03:47 250  ,chf_g34
15:03:47 251  ,chf_g35
15:03:47 252  ,chf_g36
15:03:47 253  ,chf_g37
15:03:47 254  ,chf_g38
15:03:47 255  ,chf_g39
15:03:47 256  ,chf_g40
15:03:47 257  ,chf_g41
15:03:47 258  FROM aud_ms6 m
15:03:47 259  WHERE m.ydate = '&1'||' '||'&2'
15:03:47 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'14:40:00'

View created.

Elapsed: 00:00:00.13
15:03:47 SQL> 
15:03:47 SQL> -- rpt
15:03:47 SQL> -- We should see just 1 row:
15:03:47 SQL> 
15:03:47 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
15:03:47 SQL> 
15:03:47 SQL> -- Build the model:
15:03:47 SQL> CREATE OR REPLACE VIEW bme AS
15:03:47   2  SELECT
15:03:47   3  'aud'||m.ydate prdate
15:03:47   4  ,gattn
15:03:47   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:03:47   6  ,eur_g00
15:03:47   7  ,eur_g01
15:03:47   8  ,eur_g02
15:03:47   9  ,eur_g03
15:03:47  10  ,eur_g04
15:03:47  11  ,eur_g05
15:03:47  12  ,eur_g06
15:03:47  13  ,eur_g07
15:03:47  14  ,eur_g08
15:03:47  15  ,eur_g09
15:03:47  16  ,eur_g10
15:03:47  17  ,eur_g11
15:03:47  18  ,eur_g12
15:03:47  19  ,eur_g13
15:03:47  20  ,eur_g14
15:03:47  21  ,eur_g15
15:03:47  22  ,eur_g16
15:03:47  23  ,eur_g17
15:03:47  24  ,eur_g18
15:03:47  25  ,eur_g19
15:03:47  26  ,eur_g20
15:03:47  27  ,eur_g21
15:03:47  28  ,eur_g22
15:03:47  29  ,eur_g23
15:03:47  30  ,eur_g24
15:03:47  31  ,eur_g25
15:03:47  32  ,eur_g26
15:03:47  33  ,eur_g27
15:03:47  34  ,eur_g28
15:03:47  35  ,eur_g29
15:03:47  36  ,eur_g30
15:03:47  37  ,eur_g31
15:03:47  38  ,eur_g32
15:03:47  39  ,eur_g33
15:03:47  40  ,eur_g34
15:03:47  41  ,eur_g35
15:03:47  42  ,eur_g36
15:03:47  43  ,eur_g37
15:03:47  44  ,eur_g38
15:03:47  45  ,eur_g39
15:03:47  46  ,eur_g40
15:03:47  47  ,eur_g41
15:03:47  48  ,aud_g00
15:03:47  49  ,aud_g01
15:03:47  50  ,aud_g02
15:03:47  51  ,aud_g03
15:03:47  52  ,aud_g04
15:03:47  53  ,aud_g05
15:03:47  54  ,aud_g06
15:03:47  55  ,aud_g07
15:03:47  56  ,aud_g08
15:03:47  57  ,aud_g09
15:03:47  58  ,aud_g10
15:03:47  59  ,aud_g11
15:03:47  60  ,aud_g12
15:03:47  61  ,aud_g13
15:03:47  62  ,aud_g14
15:03:47  63  ,aud_g15
15:03:47  64  ,aud_g16
15:03:47  65  ,aud_g17
15:03:47  66  ,aud_g18
15:03:47  67  ,aud_g19
15:03:47  68  ,aud_g20
15:03:47  69  ,aud_g21
15:03:47  70  ,aud_g22
15:03:47  71  ,aud_g23
15:03:47  72  ,aud_g24
15:03:47  73  ,aud_g25
15:03:47  74  ,aud_g26
15:03:47  75  ,aud_g27
15:03:47  76  ,aud_g28
15:03:47  77  ,aud_g29
15:03:47  78  ,aud_g30
15:03:47  79  ,aud_g31
15:03:47  80  ,aud_g32
15:03:47  81  ,aud_g33
15:03:47  82  ,aud_g34
15:03:47  83  ,aud_g35
15:03:47  84  ,aud_g36
15:03:47  85  ,aud_g37
15:03:47  86  ,aud_g38
15:03:47  87  ,aud_g39
15:03:47  88  ,aud_g40
15:03:47  89  ,aud_g41
15:03:47  90  ,gbp_g00
15:03:47  91  ,gbp_g01
15:03:47  92  ,gbp_g02
15:03:47  93  ,gbp_g03
15:03:47  94  ,gbp_g04
15:03:47  95  ,gbp_g05
15:03:47  96  ,gbp_g06
15:03:47  97  ,gbp_g07
15:03:47  98  ,gbp_g08
15:03:47  99  ,gbp_g09
15:03:47 100  ,gbp_g10
15:03:47 101  ,gbp_g11
15:03:47 102  ,gbp_g12
15:03:47 103  ,gbp_g13
15:03:47 104  ,gbp_g14
15:03:47 105  ,gbp_g15
15:03:47 106  ,gbp_g16
15:03:47 107  ,gbp_g17
15:03:47 108  ,gbp_g18
15:03:47 109  ,gbp_g19
15:03:47 110  ,gbp_g20
15:03:47 111  ,gbp_g21
15:03:47 112  ,gbp_g22
15:03:47 113  ,gbp_g23
15:03:47 114  ,gbp_g24
15:03:47 115  ,gbp_g25
15:03:47 116  ,gbp_g26
15:03:47 117  ,gbp_g27
15:03:47 118  ,gbp_g28
15:03:47 119  ,gbp_g29
15:03:47 120  ,gbp_g30
15:03:47 121  ,gbp_g31
15:03:47 122  ,gbp_g32
15:03:47 123  ,gbp_g33
15:03:47 124  ,gbp_g34
15:03:47 125  ,gbp_g35
15:03:47 126  ,gbp_g36
15:03:47 127  ,gbp_g37
15:03:47 128  ,gbp_g38
15:03:47 129  ,gbp_g39
15:03:47 130  ,gbp_g40
15:03:47 131  ,gbp_g41
15:03:47 132  ,jpy_g00
15:03:47 133  ,jpy_g01
15:03:47 134  ,jpy_g02
15:03:47 135  ,jpy_g03
15:03:47 136  ,jpy_g04
15:03:47 137  ,jpy_g05
15:03:47 138  ,jpy_g06
15:03:47 139  ,jpy_g07
15:03:47 140  ,jpy_g08
15:03:47 141  ,jpy_g09
15:03:47 142  ,jpy_g10
15:03:47 143  ,jpy_g11
15:03:47 144  ,jpy_g12
15:03:47 145  ,jpy_g13
15:03:47 146  ,jpy_g14
15:03:47 147  ,jpy_g15
15:03:47 148  ,jpy_g16
15:03:47 149  ,jpy_g17
15:03:47 150  ,jpy_g18
15:03:47 151  ,jpy_g19
15:03:47 152  ,jpy_g20
15:03:47 153  ,jpy_g21
15:03:47 154  ,jpy_g22
15:03:47 155  ,jpy_g23
15:03:47 156  ,jpy_g24
15:03:47 157  ,jpy_g25
15:03:47 158  ,jpy_g26
15:03:47 159  ,jpy_g27
15:03:47 160  ,jpy_g28
15:03:47 161  ,jpy_g29
15:03:47 162  ,jpy_g30
15:03:47 163  ,jpy_g31
15:03:47 164  ,jpy_g32
15:03:47 165  ,jpy_g33
15:03:47 166  ,jpy_g34
15:03:47 167  ,jpy_g35
15:03:47 168  ,jpy_g36
15:03:47 169  ,jpy_g37
15:03:47 170  ,jpy_g38
15:03:47 171  ,jpy_g39
15:03:47 172  ,jpy_g40
15:03:47 173  ,jpy_g41
15:03:47 174  ,cad_g00
15:03:47 175  ,cad_g01
15:03:47 176  ,cad_g02
15:03:47 177  ,cad_g03
15:03:47 178  ,cad_g04
15:03:47 179  ,cad_g05
15:03:47 180  ,cad_g06
15:03:47 181  ,cad_g07
15:03:47 182  ,cad_g08
15:03:47 183  ,cad_g09
15:03:47 184  ,cad_g10
15:03:47 185  ,cad_g11
15:03:47 186  ,cad_g12
15:03:47 187  ,cad_g13
15:03:47 188  ,cad_g14
15:03:47 189  ,cad_g15
15:03:47 190  ,cad_g16
15:03:47 191  ,cad_g17
15:03:47 192  ,cad_g18
15:03:47 193  ,cad_g19
15:03:47 194  ,cad_g20
15:03:47 195  ,cad_g21
15:03:47 196  ,cad_g22
15:03:47 197  ,cad_g23
15:03:47 198  ,cad_g24
15:03:47 199  ,cad_g25
15:03:47 200  ,cad_g26
15:03:47 201  ,cad_g27
15:03:47 202  ,cad_g28
15:03:47 203  ,cad_g29
15:03:47 204  ,cad_g30
15:03:47 205  ,cad_g31
15:03:47 206  ,cad_g32
15:03:47 207  ,cad_g33
15:03:47 208  ,cad_g34
15:03:47 209  ,cad_g35
15:03:47 210  ,cad_g36
15:03:47 211  ,cad_g37
15:03:47 212  ,cad_g38
15:03:47 213  ,cad_g39
15:03:47 214  ,cad_g40
15:03:47 215  ,cad_g41
15:03:47 216  ,chf_g00
15:03:47 217  ,chf_g01
15:03:47 218  ,chf_g02
15:03:47 219  ,chf_g03
15:03:47 220  ,chf_g04
15:03:47 221  ,chf_g05
15:03:47 222  ,chf_g06
15:03:47 223  ,chf_g07
15:03:47 224  ,chf_g08
15:03:47 225  ,chf_g09
15:03:47 226  ,chf_g10
15:03:47 227  ,chf_g11
15:03:47 228  ,chf_g12
15:03:47 229  ,chf_g13
15:03:47 230  ,chf_g14
15:03:47 231  ,chf_g15
15:03:47 232  ,chf_g16
15:03:47 233  ,chf_g17
15:03:47 234  ,chf_g18
15:03:47 235  ,chf_g19
15:03:47 236  ,chf_g20
15:03:47 237  ,chf_g21
15:03:47 238  ,chf_g22
15:03:47 239  ,chf_g23
15:03:47 240  ,chf_g24
15:03:47 241  ,chf_g25
15:03:47 242  ,chf_g26
15:03:47 243  ,chf_g27
15:03:47 244  ,chf_g28
15:03:47 245  ,chf_g29
15:03:47 246  ,chf_g30
15:03:47 247  ,chf_g31
15:03:47 248  ,chf_g32
15:03:47 249  ,chf_g33
15:03:47 250  ,chf_g34
15:03:47 251  ,chf_g35
15:03:47 252  ,chf_g36
15:03:47 253  ,chf_g37
15:03:47 254  ,chf_g38
15:03:47 255  ,chf_g39
15:03:47 256  ,chf_g40
15:03:47 257  ,chf_g41
15:03:47 258  FROM aud_ms6 m
15:03:47 259  WHERE gattn IN('nup','up')
15:03:47 260  AND 1+m.ydate < '&1'||' '||'&2'
15:03:47 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'14:40:00'

View created.

Elapsed: 00:00:00.13
15:03:47 SQL> 
15:03:47 SQL> -- rpt
15:03:47 SQL> 
15:03:47 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12821
up	     6620

Elapsed: 00:00:00.04
15:03:47 SQL> 
15:03:47 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 14:35:00

Elapsed: 00:00:00.03
15:03:47 SQL> 
15:03:47 SQL> -- Now build model from bme and score sme
15:03:47 SQL> @score1gattn.sql
15:03:47 SQL> -- score1gattn.sql
15:03:47 SQL> 
15:03:47 SQL> -- Does the 1st SVM score
15:03:47 SQL> 
15:03:47 SQL> -- Fill up svmc_apply_prep
15:03:47 SQL> @score_gattn.sql
15:03:47 SQL> --
15:03:47 SQL> -- score_gattn.sql
15:03:47 SQL> --
15:03:47 SQL> 
15:03:47 SQL> -- usage: score_gattn.sql
15:03:47 SQL> 
15:03:47 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:03:47 SQL> 
15:03:47 SQL> DEFINE target	= 'gattn'
15:03:47 SQL> DEFINE model_name = 'forex15'
15:03:47 SQL> DEFINE bldtable	= 'bme'
15:03:47 SQL> DEFINE scoretable = 'sme'
15:03:47 SQL> DEFINE case_id	= 'prdate'
15:03:47 SQL> 
15:03:47 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:03:47 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:03:47 SQL> 
15:03:47 SQL> -- Builds an SVM model using pl/sql.
15:03:47 SQL> 
15:03:47 SQL> -----------------------------------------------------------------------
15:03:47 SQL> --			    BUILD THE MODEL
15:03:47 SQL> -----------------------------------------------------------------------
15:03:47 SQL> 
15:03:47 SQL> -- Cleanup old build data preparation objects for repeat runs
15:03:47 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
15:03:47 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:03:47 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
15:03:47 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
15:03:47 SQL> 
15:03:47 SQL> 
15:03:47 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:03:47 SQL> --
15:03:47 SQL> -- DROP	TABLE svmc_settings ;
15:03:47 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:03:47 SQL> -- DELETE svmc_settings;
15:03:47 SQL> 
15:03:47 SQL> -- The default classification algorithm is Naive Bayes. So override
15:03:47 SQL> -- this choice to SVM using a settings table.
15:03:47 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:03:47 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:03:47 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:03:47 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:03:47 SQL> -- models.
15:03:47 SQL> --
15:03:47 SQL> 
15:03:47 SQL> -- Do this once and then comment it out.
15:03:47 SQL> -- That makes script go faster.
15:03:47 SQL> -- BEGIN
15:03:47 SQL> -- -- Populate settings table
15:03:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:03:47 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:03:47 SQL> --
15:03:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:03:47 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:03:47 SQL> --
15:03:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:03:47 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:03:47 SQL> --   COMMIT;
15:03:47 SQL> -- END;
15:03:47 SQL> -- /
15:03:47 SQL> 
15:03:47 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:03:47 SQL> 
15:03:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:03:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:03:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:03:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:03:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:03:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:03:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:03:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:03:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:03:47 SQL> 
15:03:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:03:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:03:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:03:47 SQL> 
15:03:47 SQL> --------------------------------
15:03:47 SQL> -- PREPARE BUILD (TRAINING) DATA
15:03:47 SQL> --
15:03:47 SQL> 
15:03:47 SQL> -- 1. Missing Value treatment for all Predictors and
15:03:47 SQL> -- 2. Outlier Treatment and
15:03:47 SQL> -- 3. Normalization are performed below.
15:03:47 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:03:47 SQL> --    normalized here.
15:03:47 SQL> 
15:03:47 SQL> BEGIN
15:03:47   2  	-- Perform missing value treatment for all predictors
15:03:47   3  	-- create miss tables
15:03:47   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:03:47   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:03:47   6  
15:03:47   7  	-- populate miss tables
15:03:47   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:03:47   9  	  miss_table_name => 'svmc_miss_num',
15:03:47  10  	  data_table_name => '&bldtable',
15:03:47  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:03:47  12  
15:03:47  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:03:47  14  	  miss_table_name => 'svmc_miss_cat',
15:03:47  15  	  data_table_name => '&bldtable',
15:03:47  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:03:47  17  
15:03:47  18  	-- xform input data to replace missing values
15:03:47  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:03:47  20  	  miss_table_name => 'svmc_miss_num',
15:03:47  21  	  data_table_name => '&bldtable',
15:03:47  22  	  xform_view_name => 'xformed_build_miss_num');
15:03:47  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:03:47  24  	  miss_table_name => 'svmc_miss_cat',
15:03:47  25  	  data_table_name => '&bldtable',
15:03:47  26  	  xform_view_name => 'xformed_build_miss_cat');
15:03:47  27  
15:03:47  28  	-- Perform outlier treatment.
15:03:47  29  	-- create clip table
15:03:47  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:03:47  31  
15:03:47  32  	-- populate clip table
15:03:47  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:03:47  34  	  clip_table_name => 'svmc_clip',
15:03:47  35  	  data_table_name => '&bldtable',
15:03:47  36  	  tail_frac	  => 0.025,
15:03:47  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:03:47  38  
15:03:47  39  	-- xform input data to winsorized data
15:03:47  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:03:47  41  	  clip_table_name => 'svmc_clip',
15:03:47  42  	  data_table_name => '&bldtable',
15:03:47  43  	  xform_view_name => 'svmc_winsor');
15:03:47  44  
15:03:47  45  	-- create normalization table
15:03:47  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:03:47  47  
15:03:47  48  	-- populate normalization table based on winsorized data
15:03:47  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:03:47  50  	  norm_table_name => 'svmc_norm',
15:03:47  51  	  data_table_name => 'svmc_winsor',
15:03:47  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:03:47  53  
15:03:47  54  	-- normalize the original data
15:03:47  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:03:47  56  	  norm_table_name => 'svmc_norm',
15:03:47  57  	  data_table_name => '&bldtable',
15:03:47  58  	  xform_view_name => 'svmc_build_prep');
15:03:47  59  END;
15:03:47  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.55
15:04:06 SQL> 
15:04:06 SQL> ---------------------
15:04:06 SQL> -- CREATE A NEW MODEL
15:04:06 SQL> --
15:04:06 SQL> -- Cleanup old model with the same name for repeat runs
15:04:06 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:04:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:04:06   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.96
15:04:07 SQL> 
15:04:07 SQL> -- Build a new SVM Model
15:04:07 SQL> BEGIN
15:04:07   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:04:07   3  	  model_name	      => '&model_name',
15:04:07   4  	  mining_function     => dbms_data_mining.classification,
15:04:07   5  	  data_table_name     => 'svmc_build_prep',
15:04:07   6  	  case_id_column_name => '&case_id',
15:04:07   7  	  target_column_name  => '&target',
15:04:07   8  	  settings_table_name => 'svmc_settings');
15:04:07   9  END;
15:04:07  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.58
15:04:34 SQL> 
15:04:34 SQL> -----------------------------------------------------------------------
15:04:34 SQL> --			       APPLY/score THE MODEL
15:04:34 SQL> -----------------------------------------------------------------------
15:04:34 SQL> 
15:04:34 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:04:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:04:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:04:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:04:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:04:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:04:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:04:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:04:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:04:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
15:04:35 SQL> -----------------------
15:04:35 SQL> -- PREPARE SCORING DATA
15:04:35 SQL> --
15:04:35 SQL> -- If the data for model creation has been prepared, then the data
15:04:35 SQL> -- to be scored using the model must be prepared in the same manner
15:04:35 SQL> -- in order to obtain meaningful results.
15:04:35 SQL> --
15:04:35 SQL> -- 1. Missing Value treatment for all Predictors and
15:04:35 SQL> -- 2. Normalization
15:04:35 SQL> -- No outlier treatment will be performed during test and apply. The
15:04:35 SQL> -- normalization step is sufficient, since the normalization parameters
15:04:35 SQL> -- already capture the effects of outlier treatment done with build data.
15:04:35 SQL> --
15:04:35 SQL> BEGIN
15:04:35   2  	-- Xform Test data to replace missing values
15:04:35   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:04:35   4  	  miss_table_name => 'svmc_miss_num',
15:04:35   5  	  data_table_name => '&scoretable',
15:04:35   6  	  xform_view_name => 'xformed_apply_miss_num');
15:04:35   7  
15:04:35   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:04:35   9  	  miss_table_name => 'svmc_miss_cat',
15:04:35  10  	  data_table_name => '&scoretable',
15:04:35  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:04:35  12  
15:04:35  13  	-- Normalize the data to be scored
15:04:35  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:04:35  15  	  norm_table_name => 'svmc_norm',
15:04:35  16  	  data_table_name => '&scoretable',
15:04:35  17  	  xform_view_name => 'svmc_apply_prep');
15:04:35  18  END;
15:04:35  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
15:04:36 SQL> 
15:04:36 SQL> -- Use same model_name used in score_gattn.sql
15:04:36 SQL> DEFINE model_name = 'forex15'
15:04:36 SQL> 
15:04:36 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
15:04:36 SQL> 
15:04:36 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
15:04:36   2  SELECT
15:04:36   3  prdate
15:04:36   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:04:36   5  ,sysdate
15:04:36   6  ,SUBSTR(prdate,1,3)pair
15:04:36   7  ,SUBSTR(prdate,4,19)ydate
15:04:36   8  FROM svmc_apply_prep
15:04:36   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:04:36 SQL> @aud_score1day_gattn.sql	2011-01-06 14:45:00
15:04:36 SQL> --
15:04:36 SQL> -- aud_score1day_gattn.sql
15:04:36 SQL> --
15:04:36 SQL> 
15:04:36 SQL> CREATE OR REPLACE VIEW sme AS
15:04:36   2  SELECT
15:04:36   3  'aud'||m.ydate prdate
15:04:36   4  ,NULL gattn
15:04:36   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:04:36   6  ,eur_g00
15:04:36   7  ,eur_g01
15:04:36   8  ,eur_g02
15:04:36   9  ,eur_g03
15:04:36  10  ,eur_g04
15:04:36  11  ,eur_g05
15:04:36  12  ,eur_g06
15:04:36  13  ,eur_g07
15:04:36  14  ,eur_g08
15:04:36  15  ,eur_g09
15:04:36  16  ,eur_g10
15:04:36  17  ,eur_g11
15:04:36  18  ,eur_g12
15:04:36  19  ,eur_g13
15:04:36  20  ,eur_g14
15:04:36  21  ,eur_g15
15:04:36  22  ,eur_g16
15:04:36  23  ,eur_g17
15:04:36  24  ,eur_g18
15:04:36  25  ,eur_g19
15:04:36  26  ,eur_g20
15:04:36  27  ,eur_g21
15:04:36  28  ,eur_g22
15:04:36  29  ,eur_g23
15:04:36  30  ,eur_g24
15:04:36  31  ,eur_g25
15:04:36  32  ,eur_g26
15:04:36  33  ,eur_g27
15:04:36  34  ,eur_g28
15:04:36  35  ,eur_g29
15:04:36  36  ,eur_g30
15:04:36  37  ,eur_g31
15:04:36  38  ,eur_g32
15:04:36  39  ,eur_g33
15:04:36  40  ,eur_g34
15:04:36  41  ,eur_g35
15:04:36  42  ,eur_g36
15:04:36  43  ,eur_g37
15:04:36  44  ,eur_g38
15:04:36  45  ,eur_g39
15:04:36  46  ,eur_g40
15:04:36  47  ,eur_g41
15:04:36  48  ,aud_g00
15:04:36  49  ,aud_g01
15:04:36  50  ,aud_g02
15:04:36  51  ,aud_g03
15:04:36  52  ,aud_g04
15:04:36  53  ,aud_g05
15:04:36  54  ,aud_g06
15:04:36  55  ,aud_g07
15:04:36  56  ,aud_g08
15:04:36  57  ,aud_g09
15:04:36  58  ,aud_g10
15:04:36  59  ,aud_g11
15:04:36  60  ,aud_g12
15:04:36  61  ,aud_g13
15:04:36  62  ,aud_g14
15:04:36  63  ,aud_g15
15:04:36  64  ,aud_g16
15:04:36  65  ,aud_g17
15:04:36  66  ,aud_g18
15:04:36  67  ,aud_g19
15:04:36  68  ,aud_g20
15:04:36  69  ,aud_g21
15:04:36  70  ,aud_g22
15:04:36  71  ,aud_g23
15:04:36  72  ,aud_g24
15:04:36  73  ,aud_g25
15:04:36  74  ,aud_g26
15:04:36  75  ,aud_g27
15:04:36  76  ,aud_g28
15:04:36  77  ,aud_g29
15:04:36  78  ,aud_g30
15:04:36  79  ,aud_g31
15:04:36  80  ,aud_g32
15:04:36  81  ,aud_g33
15:04:36  82  ,aud_g34
15:04:36  83  ,aud_g35
15:04:36  84  ,aud_g36
15:04:36  85  ,aud_g37
15:04:36  86  ,aud_g38
15:04:36  87  ,aud_g39
15:04:36  88  ,aud_g40
15:04:36  89  ,aud_g41
15:04:36  90  ,gbp_g00
15:04:36  91  ,gbp_g01
15:04:36  92  ,gbp_g02
15:04:36  93  ,gbp_g03
15:04:36  94  ,gbp_g04
15:04:36  95  ,gbp_g05
15:04:36  96  ,gbp_g06
15:04:36  97  ,gbp_g07
15:04:36  98  ,gbp_g08
15:04:36  99  ,gbp_g09
15:04:36 100  ,gbp_g10
15:04:36 101  ,gbp_g11
15:04:36 102  ,gbp_g12
15:04:36 103  ,gbp_g13
15:04:36 104  ,gbp_g14
15:04:36 105  ,gbp_g15
15:04:36 106  ,gbp_g16
15:04:36 107  ,gbp_g17
15:04:36 108  ,gbp_g18
15:04:36 109  ,gbp_g19
15:04:36 110  ,gbp_g20
15:04:36 111  ,gbp_g21
15:04:36 112  ,gbp_g22
15:04:36 113  ,gbp_g23
15:04:36 114  ,gbp_g24
15:04:36 115  ,gbp_g25
15:04:36 116  ,gbp_g26
15:04:36 117  ,gbp_g27
15:04:36 118  ,gbp_g28
15:04:36 119  ,gbp_g29
15:04:36 120  ,gbp_g30
15:04:36 121  ,gbp_g31
15:04:36 122  ,gbp_g32
15:04:36 123  ,gbp_g33
15:04:36 124  ,gbp_g34
15:04:36 125  ,gbp_g35
15:04:36 126  ,gbp_g36
15:04:36 127  ,gbp_g37
15:04:36 128  ,gbp_g38
15:04:36 129  ,gbp_g39
15:04:36 130  ,gbp_g40
15:04:36 131  ,gbp_g41
15:04:36 132  ,jpy_g00
15:04:36 133  ,jpy_g01
15:04:36 134  ,jpy_g02
15:04:36 135  ,jpy_g03
15:04:36 136  ,jpy_g04
15:04:36 137  ,jpy_g05
15:04:36 138  ,jpy_g06
15:04:36 139  ,jpy_g07
15:04:36 140  ,jpy_g08
15:04:36 141  ,jpy_g09
15:04:36 142  ,jpy_g10
15:04:36 143  ,jpy_g11
15:04:36 144  ,jpy_g12
15:04:36 145  ,jpy_g13
15:04:36 146  ,jpy_g14
15:04:36 147  ,jpy_g15
15:04:36 148  ,jpy_g16
15:04:36 149  ,jpy_g17
15:04:36 150  ,jpy_g18
15:04:36 151  ,jpy_g19
15:04:36 152  ,jpy_g20
15:04:36 153  ,jpy_g21
15:04:36 154  ,jpy_g22
15:04:36 155  ,jpy_g23
15:04:36 156  ,jpy_g24
15:04:36 157  ,jpy_g25
15:04:36 158  ,jpy_g26
15:04:36 159  ,jpy_g27
15:04:36 160  ,jpy_g28
15:04:36 161  ,jpy_g29
15:04:36 162  ,jpy_g30
15:04:36 163  ,jpy_g31
15:04:36 164  ,jpy_g32
15:04:36 165  ,jpy_g33
15:04:36 166  ,jpy_g34
15:04:36 167  ,jpy_g35
15:04:36 168  ,jpy_g36
15:04:36 169  ,jpy_g37
15:04:36 170  ,jpy_g38
15:04:36 171  ,jpy_g39
15:04:36 172  ,jpy_g40
15:04:36 173  ,jpy_g41
15:04:36 174  ,cad_g00
15:04:36 175  ,cad_g01
15:04:36 176  ,cad_g02
15:04:36 177  ,cad_g03
15:04:36 178  ,cad_g04
15:04:36 179  ,cad_g05
15:04:36 180  ,cad_g06
15:04:36 181  ,cad_g07
15:04:36 182  ,cad_g08
15:04:36 183  ,cad_g09
15:04:36 184  ,cad_g10
15:04:36 185  ,cad_g11
15:04:36 186  ,cad_g12
15:04:36 187  ,cad_g13
15:04:36 188  ,cad_g14
15:04:36 189  ,cad_g15
15:04:36 190  ,cad_g16
15:04:36 191  ,cad_g17
15:04:36 192  ,cad_g18
15:04:36 193  ,cad_g19
15:04:36 194  ,cad_g20
15:04:36 195  ,cad_g21
15:04:36 196  ,cad_g22
15:04:36 197  ,cad_g23
15:04:36 198  ,cad_g24
15:04:36 199  ,cad_g25
15:04:36 200  ,cad_g26
15:04:36 201  ,cad_g27
15:04:36 202  ,cad_g28
15:04:36 203  ,cad_g29
15:04:36 204  ,cad_g30
15:04:36 205  ,cad_g31
15:04:36 206  ,cad_g32
15:04:36 207  ,cad_g33
15:04:36 208  ,cad_g34
15:04:36 209  ,cad_g35
15:04:36 210  ,cad_g36
15:04:36 211  ,cad_g37
15:04:36 212  ,cad_g38
15:04:36 213  ,cad_g39
15:04:36 214  ,cad_g40
15:04:36 215  ,cad_g41
15:04:36 216  ,chf_g00
15:04:36 217  ,chf_g01
15:04:36 218  ,chf_g02
15:04:36 219  ,chf_g03
15:04:36 220  ,chf_g04
15:04:36 221  ,chf_g05
15:04:36 222  ,chf_g06
15:04:36 223  ,chf_g07
15:04:36 224  ,chf_g08
15:04:36 225  ,chf_g09
15:04:36 226  ,chf_g10
15:04:36 227  ,chf_g11
15:04:36 228  ,chf_g12
15:04:36 229  ,chf_g13
15:04:36 230  ,chf_g14
15:04:36 231  ,chf_g15
15:04:36 232  ,chf_g16
15:04:36 233  ,chf_g17
15:04:36 234  ,chf_g18
15:04:36 235  ,chf_g19
15:04:36 236  ,chf_g20
15:04:36 237  ,chf_g21
15:04:36 238  ,chf_g22
15:04:36 239  ,chf_g23
15:04:36 240  ,chf_g24
15:04:36 241  ,chf_g25
15:04:36 242  ,chf_g26
15:04:36 243  ,chf_g27
15:04:36 244  ,chf_g28
15:04:36 245  ,chf_g29
15:04:36 246  ,chf_g30
15:04:36 247  ,chf_g31
15:04:36 248  ,chf_g32
15:04:36 249  ,chf_g33
15:04:36 250  ,chf_g34
15:04:36 251  ,chf_g35
15:04:36 252  ,chf_g36
15:04:36 253  ,chf_g37
15:04:36 254  ,chf_g38
15:04:36 255  ,chf_g39
15:04:36 256  ,chf_g40
15:04:36 257  ,chf_g41
15:04:36 258  FROM aud_ms6 m
15:04:36 259  WHERE m.ydate = '&1'||' '||'&2'
15:04:36 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'14:45:00'

View created.

Elapsed: 00:00:00.14
15:04:36 SQL> 
15:04:36 SQL> -- rpt
15:04:36 SQL> -- We should see just 1 row:
15:04:36 SQL> 
15:04:36 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
15:04:36 SQL> 
15:04:36 SQL> -- Build the model:
15:04:36 SQL> CREATE OR REPLACE VIEW bme AS
15:04:36   2  SELECT
15:04:36   3  'aud'||m.ydate prdate
15:04:36   4  ,gattn
15:04:36   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:04:36   6  ,eur_g00
15:04:36   7  ,eur_g01
15:04:36   8  ,eur_g02
15:04:36   9  ,eur_g03
15:04:36  10  ,eur_g04
15:04:36  11  ,eur_g05
15:04:36  12  ,eur_g06
15:04:36  13  ,eur_g07
15:04:36  14  ,eur_g08
15:04:36  15  ,eur_g09
15:04:36  16  ,eur_g10
15:04:36  17  ,eur_g11
15:04:36  18  ,eur_g12
15:04:36  19  ,eur_g13
15:04:36  20  ,eur_g14
15:04:36  21  ,eur_g15
15:04:36  22  ,eur_g16
15:04:36  23  ,eur_g17
15:04:36  24  ,eur_g18
15:04:36  25  ,eur_g19
15:04:36  26  ,eur_g20
15:04:36  27  ,eur_g21
15:04:36  28  ,eur_g22
15:04:36  29  ,eur_g23
15:04:36  30  ,eur_g24
15:04:36  31  ,eur_g25
15:04:36  32  ,eur_g26
15:04:36  33  ,eur_g27
15:04:36  34  ,eur_g28
15:04:36  35  ,eur_g29
15:04:36  36  ,eur_g30
15:04:36  37  ,eur_g31
15:04:36  38  ,eur_g32
15:04:36  39  ,eur_g33
15:04:36  40  ,eur_g34
15:04:36  41  ,eur_g35
15:04:36  42  ,eur_g36
15:04:36  43  ,eur_g37
15:04:36  44  ,eur_g38
15:04:36  45  ,eur_g39
15:04:36  46  ,eur_g40
15:04:36  47  ,eur_g41
15:04:36  48  ,aud_g00
15:04:36  49  ,aud_g01
15:04:36  50  ,aud_g02
15:04:36  51  ,aud_g03
15:04:36  52  ,aud_g04
15:04:36  53  ,aud_g05
15:04:36  54  ,aud_g06
15:04:36  55  ,aud_g07
15:04:36  56  ,aud_g08
15:04:36  57  ,aud_g09
15:04:36  58  ,aud_g10
15:04:36  59  ,aud_g11
15:04:36  60  ,aud_g12
15:04:36  61  ,aud_g13
15:04:36  62  ,aud_g14
15:04:36  63  ,aud_g15
15:04:36  64  ,aud_g16
15:04:36  65  ,aud_g17
15:04:36  66  ,aud_g18
15:04:36  67  ,aud_g19
15:04:36  68  ,aud_g20
15:04:36  69  ,aud_g21
15:04:36  70  ,aud_g22
15:04:36  71  ,aud_g23
15:04:36  72  ,aud_g24
15:04:36  73  ,aud_g25
15:04:36  74  ,aud_g26
15:04:36  75  ,aud_g27
15:04:36  76  ,aud_g28
15:04:36  77  ,aud_g29
15:04:36  78  ,aud_g30
15:04:36  79  ,aud_g31
15:04:36  80  ,aud_g32
15:04:36  81  ,aud_g33
15:04:36  82  ,aud_g34
15:04:36  83  ,aud_g35
15:04:36  84  ,aud_g36
15:04:36  85  ,aud_g37
15:04:36  86  ,aud_g38
15:04:36  87  ,aud_g39
15:04:36  88  ,aud_g40
15:04:36  89  ,aud_g41
15:04:36  90  ,gbp_g00
15:04:36  91  ,gbp_g01
15:04:36  92  ,gbp_g02
15:04:36  93  ,gbp_g03
15:04:36  94  ,gbp_g04
15:04:36  95  ,gbp_g05
15:04:36  96  ,gbp_g06
15:04:36  97  ,gbp_g07
15:04:36  98  ,gbp_g08
15:04:36  99  ,gbp_g09
15:04:36 100  ,gbp_g10
15:04:36 101  ,gbp_g11
15:04:36 102  ,gbp_g12
15:04:36 103  ,gbp_g13
15:04:36 104  ,gbp_g14
15:04:36 105  ,gbp_g15
15:04:36 106  ,gbp_g16
15:04:36 107  ,gbp_g17
15:04:36 108  ,gbp_g18
15:04:36 109  ,gbp_g19
15:04:36 110  ,gbp_g20
15:04:36 111  ,gbp_g21
15:04:36 112  ,gbp_g22
15:04:36 113  ,gbp_g23
15:04:36 114  ,gbp_g24
15:04:36 115  ,gbp_g25
15:04:36 116  ,gbp_g26
15:04:36 117  ,gbp_g27
15:04:36 118  ,gbp_g28
15:04:36 119  ,gbp_g29
15:04:36 120  ,gbp_g30
15:04:36 121  ,gbp_g31
15:04:36 122  ,gbp_g32
15:04:36 123  ,gbp_g33
15:04:36 124  ,gbp_g34
15:04:36 125  ,gbp_g35
15:04:36 126  ,gbp_g36
15:04:36 127  ,gbp_g37
15:04:36 128  ,gbp_g38
15:04:36 129  ,gbp_g39
15:04:36 130  ,gbp_g40
15:04:36 131  ,gbp_g41
15:04:36 132  ,jpy_g00
15:04:36 133  ,jpy_g01
15:04:36 134  ,jpy_g02
15:04:36 135  ,jpy_g03
15:04:36 136  ,jpy_g04
15:04:36 137  ,jpy_g05
15:04:36 138  ,jpy_g06
15:04:36 139  ,jpy_g07
15:04:36 140  ,jpy_g08
15:04:36 141  ,jpy_g09
15:04:36 142  ,jpy_g10
15:04:36 143  ,jpy_g11
15:04:36 144  ,jpy_g12
15:04:36 145  ,jpy_g13
15:04:36 146  ,jpy_g14
15:04:36 147  ,jpy_g15
15:04:36 148  ,jpy_g16
15:04:36 149  ,jpy_g17
15:04:36 150  ,jpy_g18
15:04:36 151  ,jpy_g19
15:04:36 152  ,jpy_g20
15:04:36 153  ,jpy_g21
15:04:36 154  ,jpy_g22
15:04:36 155  ,jpy_g23
15:04:36 156  ,jpy_g24
15:04:36 157  ,jpy_g25
15:04:36 158  ,jpy_g26
15:04:36 159  ,jpy_g27
15:04:36 160  ,jpy_g28
15:04:36 161  ,jpy_g29
15:04:36 162  ,jpy_g30
15:04:36 163  ,jpy_g31
15:04:36 164  ,jpy_g32
15:04:36 165  ,jpy_g33
15:04:36 166  ,jpy_g34
15:04:36 167  ,jpy_g35
15:04:36 168  ,jpy_g36
15:04:36 169  ,jpy_g37
15:04:36 170  ,jpy_g38
15:04:36 171  ,jpy_g39
15:04:36 172  ,jpy_g40
15:04:36 173  ,jpy_g41
15:04:36 174  ,cad_g00
15:04:36 175  ,cad_g01
15:04:36 176  ,cad_g02
15:04:36 177  ,cad_g03
15:04:36 178  ,cad_g04
15:04:36 179  ,cad_g05
15:04:36 180  ,cad_g06
15:04:36 181  ,cad_g07
15:04:36 182  ,cad_g08
15:04:36 183  ,cad_g09
15:04:36 184  ,cad_g10
15:04:36 185  ,cad_g11
15:04:36 186  ,cad_g12
15:04:36 187  ,cad_g13
15:04:36 188  ,cad_g14
15:04:36 189  ,cad_g15
15:04:36 190  ,cad_g16
15:04:36 191  ,cad_g17
15:04:36 192  ,cad_g18
15:04:36 193  ,cad_g19
15:04:36 194  ,cad_g20
15:04:36 195  ,cad_g21
15:04:36 196  ,cad_g22
15:04:36 197  ,cad_g23
15:04:36 198  ,cad_g24
15:04:36 199  ,cad_g25
15:04:36 200  ,cad_g26
15:04:36 201  ,cad_g27
15:04:36 202  ,cad_g28
15:04:36 203  ,cad_g29
15:04:36 204  ,cad_g30
15:04:36 205  ,cad_g31
15:04:36 206  ,cad_g32
15:04:36 207  ,cad_g33
15:04:36 208  ,cad_g34
15:04:36 209  ,cad_g35
15:04:36 210  ,cad_g36
15:04:36 211  ,cad_g37
15:04:36 212  ,cad_g38
15:04:36 213  ,cad_g39
15:04:36 214  ,cad_g40
15:04:36 215  ,cad_g41
15:04:36 216  ,chf_g00
15:04:36 217  ,chf_g01
15:04:36 218  ,chf_g02
15:04:36 219  ,chf_g03
15:04:36 220  ,chf_g04
15:04:36 221  ,chf_g05
15:04:36 222  ,chf_g06
15:04:36 223  ,chf_g07
15:04:36 224  ,chf_g08
15:04:36 225  ,chf_g09
15:04:36 226  ,chf_g10
15:04:36 227  ,chf_g11
15:04:36 228  ,chf_g12
15:04:36 229  ,chf_g13
15:04:36 230  ,chf_g14
15:04:36 231  ,chf_g15
15:04:36 232  ,chf_g16
15:04:36 233  ,chf_g17
15:04:36 234  ,chf_g18
15:04:36 235  ,chf_g19
15:04:36 236  ,chf_g20
15:04:36 237  ,chf_g21
15:04:36 238  ,chf_g22
15:04:36 239  ,chf_g23
15:04:36 240  ,chf_g24
15:04:36 241  ,chf_g25
15:04:36 242  ,chf_g26
15:04:36 243  ,chf_g27
15:04:36 244  ,chf_g28
15:04:36 245  ,chf_g29
15:04:36 246  ,chf_g30
15:04:36 247  ,chf_g31
15:04:36 248  ,chf_g32
15:04:36 249  ,chf_g33
15:04:36 250  ,chf_g34
15:04:36 251  ,chf_g35
15:04:36 252  ,chf_g36
15:04:36 253  ,chf_g37
15:04:36 254  ,chf_g38
15:04:36 255  ,chf_g39
15:04:36 256  ,chf_g40
15:04:36 257  ,chf_g41
15:04:36 258  FROM aud_ms6 m
15:04:36 259  WHERE gattn IN('nup','up')
15:04:36 260  AND 1+m.ydate < '&1'||' '||'&2'
15:04:36 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'14:45:00'

View created.

Elapsed: 00:00:00.13
15:04:36 SQL> 
15:04:36 SQL> -- rpt
15:04:36 SQL> 
15:04:36 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12822
up	     6620

Elapsed: 00:00:00.04
15:04:36 SQL> 
15:04:36 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 14:40:00

Elapsed: 00:00:00.05
15:04:36 SQL> 
15:04:36 SQL> -- Now build model from bme and score sme
15:04:36 SQL> @score1gattn.sql
15:04:36 SQL> -- score1gattn.sql
15:04:36 SQL> 
15:04:36 SQL> -- Does the 1st SVM score
15:04:36 SQL> 
15:04:36 SQL> -- Fill up svmc_apply_prep
15:04:36 SQL> @score_gattn.sql
15:04:36 SQL> --
15:04:36 SQL> -- score_gattn.sql
15:04:36 SQL> --
15:04:36 SQL> 
15:04:36 SQL> -- usage: score_gattn.sql
15:04:36 SQL> 
15:04:36 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:04:36 SQL> 
15:04:36 SQL> DEFINE target	= 'gattn'
15:04:36 SQL> DEFINE model_name = 'forex15'
15:04:36 SQL> DEFINE bldtable	= 'bme'
15:04:36 SQL> DEFINE scoretable = 'sme'
15:04:36 SQL> DEFINE case_id	= 'prdate'
15:04:36 SQL> 
15:04:36 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:04:36 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:04:36 SQL> 
15:04:36 SQL> -- Builds an SVM model using pl/sql.
15:04:36 SQL> 
15:04:36 SQL> -----------------------------------------------------------------------
15:04:36 SQL> --			    BUILD THE MODEL
15:04:36 SQL> -----------------------------------------------------------------------
15:04:36 SQL> 
15:04:36 SQL> -- Cleanup old build data preparation objects for repeat runs
15:04:36 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
15:04:36 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:04:36 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
15:04:36 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
15:04:36 SQL> 
15:04:36 SQL> 
15:04:36 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:04:36 SQL> --
15:04:36 SQL> -- DROP	TABLE svmc_settings ;
15:04:36 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:04:36 SQL> -- DELETE svmc_settings;
15:04:36 SQL> 
15:04:36 SQL> -- The default classification algorithm is Naive Bayes. So override
15:04:36 SQL> -- this choice to SVM using a settings table.
15:04:36 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:04:36 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:04:36 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:04:36 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:04:36 SQL> -- models.
15:04:36 SQL> --
15:04:36 SQL> 
15:04:36 SQL> -- Do this once and then comment it out.
15:04:36 SQL> -- That makes script go faster.
15:04:36 SQL> -- BEGIN
15:04:36 SQL> -- -- Populate settings table
15:04:36 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:04:36 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:04:36 SQL> --
15:04:36 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:04:36 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:04:36 SQL> --
15:04:36 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:04:36 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:04:36 SQL> --   COMMIT;
15:04:36 SQL> -- END;
15:04:36 SQL> -- /
15:04:36 SQL> 
15:04:36 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:04:36 SQL> 
15:04:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:04:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:04:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:04:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:04:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:04:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:04:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:04:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:04:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:04:37 SQL> 
15:04:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:04:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:04:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:04:37 SQL> 
15:04:37 SQL> --------------------------------
15:04:37 SQL> -- PREPARE BUILD (TRAINING) DATA
15:04:37 SQL> --
15:04:37 SQL> 
15:04:37 SQL> -- 1. Missing Value treatment for all Predictors and
15:04:37 SQL> -- 2. Outlier Treatment and
15:04:37 SQL> -- 3. Normalization are performed below.
15:04:37 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:04:37 SQL> --    normalized here.
15:04:37 SQL> 
15:04:37 SQL> BEGIN
15:04:37   2  	-- Perform missing value treatment for all predictors
15:04:37   3  	-- create miss tables
15:04:37   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:04:37   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:04:37   6  
15:04:37   7  	-- populate miss tables
15:04:37   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:04:37   9  	  miss_table_name => 'svmc_miss_num',
15:04:37  10  	  data_table_name => '&bldtable',
15:04:37  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:04:37  12  
15:04:37  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:04:37  14  	  miss_table_name => 'svmc_miss_cat',
15:04:37  15  	  data_table_name => '&bldtable',
15:04:37  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:04:37  17  
15:04:37  18  	-- xform input data to replace missing values
15:04:37  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:04:37  20  	  miss_table_name => 'svmc_miss_num',
15:04:37  21  	  data_table_name => '&bldtable',
15:04:37  22  	  xform_view_name => 'xformed_build_miss_num');
15:04:37  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:04:37  24  	  miss_table_name => 'svmc_miss_cat',
15:04:37  25  	  data_table_name => '&bldtable',
15:04:37  26  	  xform_view_name => 'xformed_build_miss_cat');
15:04:37  27  
15:04:37  28  	-- Perform outlier treatment.
15:04:37  29  	-- create clip table
15:04:37  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:04:37  31  
15:04:37  32  	-- populate clip table
15:04:37  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:04:37  34  	  clip_table_name => 'svmc_clip',
15:04:37  35  	  data_table_name => '&bldtable',
15:04:37  36  	  tail_frac	  => 0.025,
15:04:37  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:04:37  38  
15:04:37  39  	-- xform input data to winsorized data
15:04:37  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:04:37  41  	  clip_table_name => 'svmc_clip',
15:04:37  42  	  data_table_name => '&bldtable',
15:04:37  43  	  xform_view_name => 'svmc_winsor');
15:04:37  44  
15:04:37  45  	-- create normalization table
15:04:37  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:04:37  47  
15:04:37  48  	-- populate normalization table based on winsorized data
15:04:37  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:04:37  50  	  norm_table_name => 'svmc_norm',
15:04:37  51  	  data_table_name => 'svmc_winsor',
15:04:37  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:04:37  53  
15:04:37  54  	-- normalize the original data
15:04:37  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:04:37  56  	  norm_table_name => 'svmc_norm',
15:04:37  57  	  data_table_name => '&bldtable',
15:04:37  58  	  xform_view_name => 'svmc_build_prep');
15:04:37  59  END;
15:04:37  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.34
15:04:55 SQL> 
15:04:55 SQL> ---------------------
15:04:55 SQL> -- CREATE A NEW MODEL
15:04:55 SQL> --
15:04:55 SQL> -- Cleanup old model with the same name for repeat runs
15:04:55 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:04:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:04:55   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.90
15:04:56 SQL> 
15:04:56 SQL> -- Build a new SVM Model
15:04:56 SQL> BEGIN
15:04:56   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:04:56   3  	  model_name	      => '&model_name',
15:04:56   4  	  mining_function     => dbms_data_mining.classification,
15:04:56   5  	  data_table_name     => 'svmc_build_prep',
15:04:56   6  	  case_id_column_name => '&case_id',
15:04:56   7  	  target_column_name  => '&target',
15:04:56   8  	  settings_table_name => 'svmc_settings');
15:04:56   9  END;
15:04:56  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:34.92
15:05:31 SQL> 
15:05:31 SQL> -----------------------------------------------------------------------
15:05:31 SQL> --			       APPLY/score THE MODEL
15:05:31 SQL> -----------------------------------------------------------------------
15:05:31 SQL> 
15:05:31 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:05:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:05:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:05:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:05:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:05:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:05:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
15:05:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:05:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:05:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:05:31 SQL> -----------------------
15:05:31 SQL> -- PREPARE SCORING DATA
15:05:31 SQL> --
15:05:31 SQL> -- If the data for model creation has been prepared, then the data
15:05:31 SQL> -- to be scored using the model must be prepared in the same manner
15:05:31 SQL> -- in order to obtain meaningful results.
15:05:31 SQL> --
15:05:31 SQL> -- 1. Missing Value treatment for all Predictors and
15:05:31 SQL> -- 2. Normalization
15:05:31 SQL> -- No outlier treatment will be performed during test and apply. The
15:05:31 SQL> -- normalization step is sufficient, since the normalization parameters
15:05:31 SQL> -- already capture the effects of outlier treatment done with build data.
15:05:31 SQL> --
15:05:31 SQL> BEGIN
15:05:31   2  	-- Xform Test data to replace missing values
15:05:31   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:05:31   4  	  miss_table_name => 'svmc_miss_num',
15:05:31   5  	  data_table_name => '&scoretable',
15:05:31   6  	  xform_view_name => 'xformed_apply_miss_num');
15:05:31   7  
15:05:31   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:05:31   9  	  miss_table_name => 'svmc_miss_cat',
15:05:31  10  	  data_table_name => '&scoretable',
15:05:31  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:05:31  12  
15:05:31  13  	-- Normalize the data to be scored
15:05:31  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:05:31  15  	  norm_table_name => 'svmc_norm',
15:05:31  16  	  data_table_name => '&scoretable',
15:05:31  17  	  xform_view_name => 'svmc_apply_prep');
15:05:31  18  END;
15:05:31  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.24
15:05:32 SQL> 
15:05:32 SQL> -- Use same model_name used in score_gattn.sql
15:05:32 SQL> DEFINE model_name = 'forex15'
15:05:32 SQL> 
15:05:32 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
15:05:32 SQL> 
15:05:32 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
15:05:32   2  SELECT
15:05:32   3  prdate
15:05:32   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:05:32   5  ,sysdate
15:05:32   6  ,SUBSTR(prdate,1,3)pair
15:05:32   7  ,SUBSTR(prdate,4,19)ydate
15:05:32   8  FROM svmc_apply_prep
15:05:32   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:05:32 SQL> @aud_score1day_gattn.sql	2011-01-06 14:50:00
15:05:32 SQL> --
15:05:32 SQL> -- aud_score1day_gattn.sql
15:05:32 SQL> --
15:05:32 SQL> 
15:05:32 SQL> CREATE OR REPLACE VIEW sme AS
15:05:32   2  SELECT
15:05:32   3  'aud'||m.ydate prdate
15:05:32   4  ,NULL gattn
15:05:32   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:05:32   6  ,eur_g00
15:05:32   7  ,eur_g01
15:05:32   8  ,eur_g02
15:05:32   9  ,eur_g03
15:05:32  10  ,eur_g04
15:05:32  11  ,eur_g05
15:05:32  12  ,eur_g06
15:05:32  13  ,eur_g07
15:05:32  14  ,eur_g08
15:05:32  15  ,eur_g09
15:05:32  16  ,eur_g10
15:05:32  17  ,eur_g11
15:05:32  18  ,eur_g12
15:05:32  19  ,eur_g13
15:05:32  20  ,eur_g14
15:05:32  21  ,eur_g15
15:05:32  22  ,eur_g16
15:05:32  23  ,eur_g17
15:05:32  24  ,eur_g18
15:05:32  25  ,eur_g19
15:05:32  26  ,eur_g20
15:05:32  27  ,eur_g21
15:05:32  28  ,eur_g22
15:05:32  29  ,eur_g23
15:05:32  30  ,eur_g24
15:05:32  31  ,eur_g25
15:05:32  32  ,eur_g26
15:05:32  33  ,eur_g27
15:05:32  34  ,eur_g28
15:05:32  35  ,eur_g29
15:05:32  36  ,eur_g30
15:05:32  37  ,eur_g31
15:05:32  38  ,eur_g32
15:05:32  39  ,eur_g33
15:05:32  40  ,eur_g34
15:05:32  41  ,eur_g35
15:05:32  42  ,eur_g36
15:05:32  43  ,eur_g37
15:05:32  44  ,eur_g38
15:05:32  45  ,eur_g39
15:05:32  46  ,eur_g40
15:05:32  47  ,eur_g41
15:05:32  48  ,aud_g00
15:05:32  49  ,aud_g01
15:05:32  50  ,aud_g02
15:05:32  51  ,aud_g03
15:05:32  52  ,aud_g04
15:05:32  53  ,aud_g05
15:05:32  54  ,aud_g06
15:05:32  55  ,aud_g07
15:05:32  56  ,aud_g08
15:05:32  57  ,aud_g09
15:05:32  58  ,aud_g10
15:05:32  59  ,aud_g11
15:05:32  60  ,aud_g12
15:05:32  61  ,aud_g13
15:05:32  62  ,aud_g14
15:05:32  63  ,aud_g15
15:05:32  64  ,aud_g16
15:05:32  65  ,aud_g17
15:05:32  66  ,aud_g18
15:05:32  67  ,aud_g19
15:05:32  68  ,aud_g20
15:05:32  69  ,aud_g21
15:05:32  70  ,aud_g22
15:05:32  71  ,aud_g23
15:05:32  72  ,aud_g24
15:05:32  73  ,aud_g25
15:05:32  74  ,aud_g26
15:05:32  75  ,aud_g27
15:05:32  76  ,aud_g28
15:05:32  77  ,aud_g29
15:05:32  78  ,aud_g30
15:05:32  79  ,aud_g31
15:05:32  80  ,aud_g32
15:05:32  81  ,aud_g33
15:05:32  82  ,aud_g34
15:05:32  83  ,aud_g35
15:05:32  84  ,aud_g36
15:05:32  85  ,aud_g37
15:05:32  86  ,aud_g38
15:05:32  87  ,aud_g39
15:05:32  88  ,aud_g40
15:05:32  89  ,aud_g41
15:05:32  90  ,gbp_g00
15:05:32  91  ,gbp_g01
15:05:32  92  ,gbp_g02
15:05:32  93  ,gbp_g03
15:05:32  94  ,gbp_g04
15:05:32  95  ,gbp_g05
15:05:32  96  ,gbp_g06
15:05:32  97  ,gbp_g07
15:05:32  98  ,gbp_g08
15:05:32  99  ,gbp_g09
15:05:32 100  ,gbp_g10
15:05:32 101  ,gbp_g11
15:05:32 102  ,gbp_g12
15:05:32 103  ,gbp_g13
15:05:32 104  ,gbp_g14
15:05:32 105  ,gbp_g15
15:05:32 106  ,gbp_g16
15:05:32 107  ,gbp_g17
15:05:32 108  ,gbp_g18
15:05:32 109  ,gbp_g19
15:05:32 110  ,gbp_g20
15:05:32 111  ,gbp_g21
15:05:32 112  ,gbp_g22
15:05:32 113  ,gbp_g23
15:05:32 114  ,gbp_g24
15:05:32 115  ,gbp_g25
15:05:32 116  ,gbp_g26
15:05:32 117  ,gbp_g27
15:05:32 118  ,gbp_g28
15:05:32 119  ,gbp_g29
15:05:32 120  ,gbp_g30
15:05:32 121  ,gbp_g31
15:05:32 122  ,gbp_g32
15:05:32 123  ,gbp_g33
15:05:32 124  ,gbp_g34
15:05:32 125  ,gbp_g35
15:05:32 126  ,gbp_g36
15:05:32 127  ,gbp_g37
15:05:32 128  ,gbp_g38
15:05:32 129  ,gbp_g39
15:05:32 130  ,gbp_g40
15:05:32 131  ,gbp_g41
15:05:32 132  ,jpy_g00
15:05:32 133  ,jpy_g01
15:05:32 134  ,jpy_g02
15:05:32 135  ,jpy_g03
15:05:32 136  ,jpy_g04
15:05:32 137  ,jpy_g05
15:05:32 138  ,jpy_g06
15:05:32 139  ,jpy_g07
15:05:32 140  ,jpy_g08
15:05:32 141  ,jpy_g09
15:05:32 142  ,jpy_g10
15:05:32 143  ,jpy_g11
15:05:32 144  ,jpy_g12
15:05:32 145  ,jpy_g13
15:05:32 146  ,jpy_g14
15:05:32 147  ,jpy_g15
15:05:32 148  ,jpy_g16
15:05:32 149  ,jpy_g17
15:05:32 150  ,jpy_g18
15:05:32 151  ,jpy_g19
15:05:32 152  ,jpy_g20
15:05:32 153  ,jpy_g21
15:05:32 154  ,jpy_g22
15:05:32 155  ,jpy_g23
15:05:32 156  ,jpy_g24
15:05:32 157  ,jpy_g25
15:05:32 158  ,jpy_g26
15:05:32 159  ,jpy_g27
15:05:32 160  ,jpy_g28
15:05:32 161  ,jpy_g29
15:05:32 162  ,jpy_g30
15:05:32 163  ,jpy_g31
15:05:32 164  ,jpy_g32
15:05:32 165  ,jpy_g33
15:05:32 166  ,jpy_g34
15:05:32 167  ,jpy_g35
15:05:32 168  ,jpy_g36
15:05:32 169  ,jpy_g37
15:05:32 170  ,jpy_g38
15:05:32 171  ,jpy_g39
15:05:32 172  ,jpy_g40
15:05:32 173  ,jpy_g41
15:05:32 174  ,cad_g00
15:05:32 175  ,cad_g01
15:05:32 176  ,cad_g02
15:05:32 177  ,cad_g03
15:05:32 178  ,cad_g04
15:05:32 179  ,cad_g05
15:05:32 180  ,cad_g06
15:05:32 181  ,cad_g07
15:05:32 182  ,cad_g08
15:05:32 183  ,cad_g09
15:05:32 184  ,cad_g10
15:05:32 185  ,cad_g11
15:05:32 186  ,cad_g12
15:05:32 187  ,cad_g13
15:05:32 188  ,cad_g14
15:05:32 189  ,cad_g15
15:05:32 190  ,cad_g16
15:05:32 191  ,cad_g17
15:05:32 192  ,cad_g18
15:05:32 193  ,cad_g19
15:05:32 194  ,cad_g20
15:05:32 195  ,cad_g21
15:05:32 196  ,cad_g22
15:05:32 197  ,cad_g23
15:05:32 198  ,cad_g24
15:05:32 199  ,cad_g25
15:05:32 200  ,cad_g26
15:05:32 201  ,cad_g27
15:05:32 202  ,cad_g28
15:05:32 203  ,cad_g29
15:05:32 204  ,cad_g30
15:05:32 205  ,cad_g31
15:05:32 206  ,cad_g32
15:05:32 207  ,cad_g33
15:05:32 208  ,cad_g34
15:05:32 209  ,cad_g35
15:05:32 210  ,cad_g36
15:05:32 211  ,cad_g37
15:05:32 212  ,cad_g38
15:05:32 213  ,cad_g39
15:05:32 214  ,cad_g40
15:05:32 215  ,cad_g41
15:05:32 216  ,chf_g00
15:05:32 217  ,chf_g01
15:05:32 218  ,chf_g02
15:05:32 219  ,chf_g03
15:05:32 220  ,chf_g04
15:05:32 221  ,chf_g05
15:05:32 222  ,chf_g06
15:05:32 223  ,chf_g07
15:05:32 224  ,chf_g08
15:05:32 225  ,chf_g09
15:05:32 226  ,chf_g10
15:05:32 227  ,chf_g11
15:05:32 228  ,chf_g12
15:05:32 229  ,chf_g13
15:05:32 230  ,chf_g14
15:05:32 231  ,chf_g15
15:05:32 232  ,chf_g16
15:05:32 233  ,chf_g17
15:05:32 234  ,chf_g18
15:05:32 235  ,chf_g19
15:05:32 236  ,chf_g20
15:05:32 237  ,chf_g21
15:05:32 238  ,chf_g22
15:05:32 239  ,chf_g23
15:05:32 240  ,chf_g24
15:05:32 241  ,chf_g25
15:05:32 242  ,chf_g26
15:05:32 243  ,chf_g27
15:05:32 244  ,chf_g28
15:05:32 245  ,chf_g29
15:05:32 246  ,chf_g30
15:05:32 247  ,chf_g31
15:05:32 248  ,chf_g32
15:05:32 249  ,chf_g33
15:05:32 250  ,chf_g34
15:05:32 251  ,chf_g35
15:05:32 252  ,chf_g36
15:05:32 253  ,chf_g37
15:05:32 254  ,chf_g38
15:05:32 255  ,chf_g39
15:05:32 256  ,chf_g40
15:05:32 257  ,chf_g41
15:05:32 258  FROM aud_ms6 m
15:05:32 259  WHERE m.ydate = '&1'||' '||'&2'
15:05:32 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'14:50:00'

View created.

Elapsed: 00:00:00.15
15:05:33 SQL> 
15:05:33 SQL> -- rpt
15:05:33 SQL> -- We should see just 1 row:
15:05:33 SQL> 
15:05:33 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
15:05:33 SQL> 
15:05:33 SQL> -- Build the model:
15:05:33 SQL> CREATE OR REPLACE VIEW bme AS
15:05:33   2  SELECT
15:05:33   3  'aud'||m.ydate prdate
15:05:33   4  ,gattn
15:05:33   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:05:33   6  ,eur_g00
15:05:33   7  ,eur_g01
15:05:33   8  ,eur_g02
15:05:33   9  ,eur_g03
15:05:33  10  ,eur_g04
15:05:33  11  ,eur_g05
15:05:33  12  ,eur_g06
15:05:33  13  ,eur_g07
15:05:33  14  ,eur_g08
15:05:33  15  ,eur_g09
15:05:33  16  ,eur_g10
15:05:33  17  ,eur_g11
15:05:33  18  ,eur_g12
15:05:33  19  ,eur_g13
15:05:33  20  ,eur_g14
15:05:33  21  ,eur_g15
15:05:33  22  ,eur_g16
15:05:33  23  ,eur_g17
15:05:33  24  ,eur_g18
15:05:33  25  ,eur_g19
15:05:33  26  ,eur_g20
15:05:33  27  ,eur_g21
15:05:33  28  ,eur_g22
15:05:33  29  ,eur_g23
15:05:33  30  ,eur_g24
15:05:33  31  ,eur_g25
15:05:33  32  ,eur_g26
15:05:33  33  ,eur_g27
15:05:33  34  ,eur_g28
15:05:33  35  ,eur_g29
15:05:33  36  ,eur_g30
15:05:33  37  ,eur_g31
15:05:33  38  ,eur_g32
15:05:33  39  ,eur_g33
15:05:33  40  ,eur_g34
15:05:33  41  ,eur_g35
15:05:33  42  ,eur_g36
15:05:33  43  ,eur_g37
15:05:33  44  ,eur_g38
15:05:33  45  ,eur_g39
15:05:33  46  ,eur_g40
15:05:33  47  ,eur_g41
15:05:33  48  ,aud_g00
15:05:33  49  ,aud_g01
15:05:33  50  ,aud_g02
15:05:33  51  ,aud_g03
15:05:33  52  ,aud_g04
15:05:33  53  ,aud_g05
15:05:33  54  ,aud_g06
15:05:33  55  ,aud_g07
15:05:33  56  ,aud_g08
15:05:33  57  ,aud_g09
15:05:33  58  ,aud_g10
15:05:33  59  ,aud_g11
15:05:33  60  ,aud_g12
15:05:33  61  ,aud_g13
15:05:33  62  ,aud_g14
15:05:33  63  ,aud_g15
15:05:33  64  ,aud_g16
15:05:33  65  ,aud_g17
15:05:33  66  ,aud_g18
15:05:33  67  ,aud_g19
15:05:33  68  ,aud_g20
15:05:33  69  ,aud_g21
15:05:33  70  ,aud_g22
15:05:33  71  ,aud_g23
15:05:33  72  ,aud_g24
15:05:33  73  ,aud_g25
15:05:33  74  ,aud_g26
15:05:33  75  ,aud_g27
15:05:33  76  ,aud_g28
15:05:33  77  ,aud_g29
15:05:33  78  ,aud_g30
15:05:33  79  ,aud_g31
15:05:33  80  ,aud_g32
15:05:33  81  ,aud_g33
15:05:33  82  ,aud_g34
15:05:33  83  ,aud_g35
15:05:33  84  ,aud_g36
15:05:33  85  ,aud_g37
15:05:33  86  ,aud_g38
15:05:33  87  ,aud_g39
15:05:33  88  ,aud_g40
15:05:33  89  ,aud_g41
15:05:33  90  ,gbp_g00
15:05:33  91  ,gbp_g01
15:05:33  92  ,gbp_g02
15:05:33  93  ,gbp_g03
15:05:33  94  ,gbp_g04
15:05:33  95  ,gbp_g05
15:05:33  96  ,gbp_g06
15:05:33  97  ,gbp_g07
15:05:33  98  ,gbp_g08
15:05:33  99  ,gbp_g09
15:05:33 100  ,gbp_g10
15:05:33 101  ,gbp_g11
15:05:33 102  ,gbp_g12
15:05:33 103  ,gbp_g13
15:05:33 104  ,gbp_g14
15:05:33 105  ,gbp_g15
15:05:33 106  ,gbp_g16
15:05:33 107  ,gbp_g17
15:05:33 108  ,gbp_g18
15:05:33 109  ,gbp_g19
15:05:33 110  ,gbp_g20
15:05:33 111  ,gbp_g21
15:05:33 112  ,gbp_g22
15:05:33 113  ,gbp_g23
15:05:33 114  ,gbp_g24
15:05:33 115  ,gbp_g25
15:05:33 116  ,gbp_g26
15:05:33 117  ,gbp_g27
15:05:33 118  ,gbp_g28
15:05:33 119  ,gbp_g29
15:05:33 120  ,gbp_g30
15:05:33 121  ,gbp_g31
15:05:33 122  ,gbp_g32
15:05:33 123  ,gbp_g33
15:05:33 124  ,gbp_g34
15:05:33 125  ,gbp_g35
15:05:33 126  ,gbp_g36
15:05:33 127  ,gbp_g37
15:05:33 128  ,gbp_g38
15:05:33 129  ,gbp_g39
15:05:33 130  ,gbp_g40
15:05:33 131  ,gbp_g41
15:05:33 132  ,jpy_g00
15:05:33 133  ,jpy_g01
15:05:33 134  ,jpy_g02
15:05:33 135  ,jpy_g03
15:05:33 136  ,jpy_g04
15:05:33 137  ,jpy_g05
15:05:33 138  ,jpy_g06
15:05:33 139  ,jpy_g07
15:05:33 140  ,jpy_g08
15:05:33 141  ,jpy_g09
15:05:33 142  ,jpy_g10
15:05:33 143  ,jpy_g11
15:05:33 144  ,jpy_g12
15:05:33 145  ,jpy_g13
15:05:33 146  ,jpy_g14
15:05:33 147  ,jpy_g15
15:05:33 148  ,jpy_g16
15:05:33 149  ,jpy_g17
15:05:33 150  ,jpy_g18
15:05:33 151  ,jpy_g19
15:05:33 152  ,jpy_g20
15:05:33 153  ,jpy_g21
15:05:33 154  ,jpy_g22
15:05:33 155  ,jpy_g23
15:05:33 156  ,jpy_g24
15:05:33 157  ,jpy_g25
15:05:33 158  ,jpy_g26
15:05:33 159  ,jpy_g27
15:05:33 160  ,jpy_g28
15:05:33 161  ,jpy_g29
15:05:33 162  ,jpy_g30
15:05:33 163  ,jpy_g31
15:05:33 164  ,jpy_g32
15:05:33 165  ,jpy_g33
15:05:33 166  ,jpy_g34
15:05:33 167  ,jpy_g35
15:05:33 168  ,jpy_g36
15:05:33 169  ,jpy_g37
15:05:33 170  ,jpy_g38
15:05:33 171  ,jpy_g39
15:05:33 172  ,jpy_g40
15:05:33 173  ,jpy_g41
15:05:33 174  ,cad_g00
15:05:33 175  ,cad_g01
15:05:33 176  ,cad_g02
15:05:33 177  ,cad_g03
15:05:33 178  ,cad_g04
15:05:33 179  ,cad_g05
15:05:33 180  ,cad_g06
15:05:33 181  ,cad_g07
15:05:33 182  ,cad_g08
15:05:33 183  ,cad_g09
15:05:33 184  ,cad_g10
15:05:33 185  ,cad_g11
15:05:33 186  ,cad_g12
15:05:33 187  ,cad_g13
15:05:33 188  ,cad_g14
15:05:33 189  ,cad_g15
15:05:33 190  ,cad_g16
15:05:33 191  ,cad_g17
15:05:33 192  ,cad_g18
15:05:33 193  ,cad_g19
15:05:33 194  ,cad_g20
15:05:33 195  ,cad_g21
15:05:33 196  ,cad_g22
15:05:33 197  ,cad_g23
15:05:33 198  ,cad_g24
15:05:33 199  ,cad_g25
15:05:33 200  ,cad_g26
15:05:33 201  ,cad_g27
15:05:33 202  ,cad_g28
15:05:33 203  ,cad_g29
15:05:33 204  ,cad_g30
15:05:33 205  ,cad_g31
15:05:33 206  ,cad_g32
15:05:33 207  ,cad_g33
15:05:33 208  ,cad_g34
15:05:33 209  ,cad_g35
15:05:33 210  ,cad_g36
15:05:33 211  ,cad_g37
15:05:33 212  ,cad_g38
15:05:33 213  ,cad_g39
15:05:33 214  ,cad_g40
15:05:33 215  ,cad_g41
15:05:33 216  ,chf_g00
15:05:33 217  ,chf_g01
15:05:33 218  ,chf_g02
15:05:33 219  ,chf_g03
15:05:33 220  ,chf_g04
15:05:33 221  ,chf_g05
15:05:33 222  ,chf_g06
15:05:33 223  ,chf_g07
15:05:33 224  ,chf_g08
15:05:33 225  ,chf_g09
15:05:33 226  ,chf_g10
15:05:33 227  ,chf_g11
15:05:33 228  ,chf_g12
15:05:33 229  ,chf_g13
15:05:33 230  ,chf_g14
15:05:33 231  ,chf_g15
15:05:33 232  ,chf_g16
15:05:33 233  ,chf_g17
15:05:33 234  ,chf_g18
15:05:33 235  ,chf_g19
15:05:33 236  ,chf_g20
15:05:33 237  ,chf_g21
15:05:33 238  ,chf_g22
15:05:33 239  ,chf_g23
15:05:33 240  ,chf_g24
15:05:33 241  ,chf_g25
15:05:33 242  ,chf_g26
15:05:33 243  ,chf_g27
15:05:33 244  ,chf_g28
15:05:33 245  ,chf_g29
15:05:33 246  ,chf_g30
15:05:33 247  ,chf_g31
15:05:33 248  ,chf_g32
15:05:33 249  ,chf_g33
15:05:33 250  ,chf_g34
15:05:33 251  ,chf_g35
15:05:33 252  ,chf_g36
15:05:33 253  ,chf_g37
15:05:33 254  ,chf_g38
15:05:33 255  ,chf_g39
15:05:33 256  ,chf_g40
15:05:33 257  ,chf_g41
15:05:33 258  FROM aud_ms6 m
15:05:33 259  WHERE gattn IN('nup','up')
15:05:33 260  AND 1+m.ydate < '&1'||' '||'&2'
15:05:33 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'14:50:00'

View created.

Elapsed: 00:00:00.11
15:05:33 SQL> 
15:05:33 SQL> -- rpt
15:05:33 SQL> 
15:05:33 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12823
up	     6620

Elapsed: 00:00:00.04
15:05:33 SQL> 
15:05:33 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 14:45:00

Elapsed: 00:00:00.04
15:05:33 SQL> 
15:05:33 SQL> -- Now build model from bme and score sme
15:05:33 SQL> @score1gattn.sql
15:05:33 SQL> -- score1gattn.sql
15:05:33 SQL> 
15:05:33 SQL> -- Does the 1st SVM score
15:05:33 SQL> 
15:05:33 SQL> -- Fill up svmc_apply_prep
15:05:33 SQL> @score_gattn.sql
15:05:33 SQL> --
15:05:33 SQL> -- score_gattn.sql
15:05:33 SQL> --
15:05:33 SQL> 
15:05:33 SQL> -- usage: score_gattn.sql
15:05:33 SQL> 
15:05:33 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:05:33 SQL> 
15:05:33 SQL> DEFINE target	= 'gattn'
15:05:33 SQL> DEFINE model_name = 'forex15'
15:05:33 SQL> DEFINE bldtable	= 'bme'
15:05:33 SQL> DEFINE scoretable = 'sme'
15:05:33 SQL> DEFINE case_id	= 'prdate'
15:05:33 SQL> 
15:05:33 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:05:33 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:05:33 SQL> 
15:05:33 SQL> -- Builds an SVM model using pl/sql.
15:05:33 SQL> 
15:05:33 SQL> -----------------------------------------------------------------------
15:05:33 SQL> --			    BUILD THE MODEL
15:05:33 SQL> -----------------------------------------------------------------------
15:05:33 SQL> 
15:05:33 SQL> -- Cleanup old build data preparation objects for repeat runs
15:05:33 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
15:05:33 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:05:33 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
15:05:33 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
15:05:33 SQL> 
15:05:33 SQL> 
15:05:33 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:05:33 SQL> --
15:05:33 SQL> -- DROP	TABLE svmc_settings ;
15:05:33 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:05:33 SQL> -- DELETE svmc_settings;
15:05:33 SQL> 
15:05:33 SQL> -- The default classification algorithm is Naive Bayes. So override
15:05:33 SQL> -- this choice to SVM using a settings table.
15:05:33 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:05:33 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:05:33 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:05:33 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:05:33 SQL> -- models.
15:05:33 SQL> --
15:05:33 SQL> 
15:05:33 SQL> -- Do this once and then comment it out.
15:05:33 SQL> -- That makes script go faster.
15:05:33 SQL> -- BEGIN
15:05:33 SQL> -- -- Populate settings table
15:05:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:05:33 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:05:33 SQL> --
15:05:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:05:33 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:05:33 SQL> --
15:05:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:05:33 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:05:33 SQL> --   COMMIT;
15:05:33 SQL> -- END;
15:05:33 SQL> -- /
15:05:33 SQL> 
15:05:33 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:05:33 SQL> 
15:05:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:05:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:05:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:05:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:05:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:05:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:05:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:05:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:05:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:05:33 SQL> 
15:05:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:05:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:05:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
15:05:33 SQL> 
15:05:33 SQL> --------------------------------
15:05:33 SQL> -- PREPARE BUILD (TRAINING) DATA
15:05:33 SQL> --
15:05:33 SQL> 
15:05:33 SQL> -- 1. Missing Value treatment for all Predictors and
15:05:33 SQL> -- 2. Outlier Treatment and
15:05:33 SQL> -- 3. Normalization are performed below.
15:05:33 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:05:33 SQL> --    normalized here.
15:05:33 SQL> 
15:05:33 SQL> BEGIN
15:05:33   2  	-- Perform missing value treatment for all predictors
15:05:33   3  	-- create miss tables
15:05:33   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:05:33   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:05:33   6  
15:05:33   7  	-- populate miss tables
15:05:33   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:05:33   9  	  miss_table_name => 'svmc_miss_num',
15:05:33  10  	  data_table_name => '&bldtable',
15:05:33  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:05:33  12  
15:05:33  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:05:33  14  	  miss_table_name => 'svmc_miss_cat',
15:05:33  15  	  data_table_name => '&bldtable',
15:05:33  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:05:33  17  
15:05:33  18  	-- xform input data to replace missing values
15:05:33  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:05:33  20  	  miss_table_name => 'svmc_miss_num',
15:05:33  21  	  data_table_name => '&bldtable',
15:05:33  22  	  xform_view_name => 'xformed_build_miss_num');
15:05:33  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:05:33  24  	  miss_table_name => 'svmc_miss_cat',
15:05:33  25  	  data_table_name => '&bldtable',
15:05:33  26  	  xform_view_name => 'xformed_build_miss_cat');
15:05:33  27  
15:05:33  28  	-- Perform outlier treatment.
15:05:33  29  	-- create clip table
15:05:33  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:05:33  31  
15:05:33  32  	-- populate clip table
15:05:33  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:05:33  34  	  clip_table_name => 'svmc_clip',
15:05:33  35  	  data_table_name => '&bldtable',
15:05:33  36  	  tail_frac	  => 0.025,
15:05:33  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:05:33  38  
15:05:33  39  	-- xform input data to winsorized data
15:05:33  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:05:33  41  	  clip_table_name => 'svmc_clip',
15:05:33  42  	  data_table_name => '&bldtable',
15:05:33  43  	  xform_view_name => 'svmc_winsor');
15:05:33  44  
15:05:33  45  	-- create normalization table
15:05:33  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:05:33  47  
15:05:33  48  	-- populate normalization table based on winsorized data
15:05:33  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:05:33  50  	  norm_table_name => 'svmc_norm',
15:05:33  51  	  data_table_name => 'svmc_winsor',
15:05:33  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:05:33  53  
15:05:33  54  	-- normalize the original data
15:05:33  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:05:33  56  	  norm_table_name => 'svmc_norm',
15:05:33  57  	  data_table_name => '&bldtable',
15:05:33  58  	  xform_view_name => 'svmc_build_prep');
15:05:33  59  END;
15:05:33  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.49
15:05:52 SQL> 
15:05:52 SQL> ---------------------
15:05:52 SQL> -- CREATE A NEW MODEL
15:05:52 SQL> --
15:05:52 SQL> -- Cleanup old model with the same name for repeat runs
15:05:52 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:05:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:05:52   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.94
15:05:53 SQL> 
15:05:53 SQL> -- Build a new SVM Model
15:05:53 SQL> BEGIN
15:05:53   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:05:53   3  	  model_name	      => '&model_name',
15:05:53   4  	  mining_function     => dbms_data_mining.classification,
15:05:53   5  	  data_table_name     => 'svmc_build_prep',
15:05:53   6  	  case_id_column_name => '&case_id',
15:05:53   7  	  target_column_name  => '&target',
15:05:53   8  	  settings_table_name => 'svmc_settings');
15:05:53   9  END;
15:05:53  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:38.62
15:06:31 SQL> 
15:06:31 SQL> -----------------------------------------------------------------------
15:06:31 SQL> --			       APPLY/score THE MODEL
15:06:31 SQL> -----------------------------------------------------------------------
15:06:31 SQL> 
15:06:31 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:06:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:06:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:06:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:06:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:06:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:06:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:06:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:06:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:06:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:06:31 SQL> -----------------------
15:06:31 SQL> -- PREPARE SCORING DATA
15:06:31 SQL> --
15:06:31 SQL> -- If the data for model creation has been prepared, then the data
15:06:31 SQL> -- to be scored using the model must be prepared in the same manner
15:06:31 SQL> -- in order to obtain meaningful results.
15:06:31 SQL> --
15:06:31 SQL> -- 1. Missing Value treatment for all Predictors and
15:06:31 SQL> -- 2. Normalization
15:06:31 SQL> -- No outlier treatment will be performed during test and apply. The
15:06:31 SQL> -- normalization step is sufficient, since the normalization parameters
15:06:31 SQL> -- already capture the effects of outlier treatment done with build data.
15:06:31 SQL> --
15:06:31 SQL> BEGIN
15:06:31   2  	-- Xform Test data to replace missing values
15:06:31   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:06:31   4  	  miss_table_name => 'svmc_miss_num',
15:06:31   5  	  data_table_name => '&scoretable',
15:06:31   6  	  xform_view_name => 'xformed_apply_miss_num');
15:06:31   7  
15:06:31   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:06:31   9  	  miss_table_name => 'svmc_miss_cat',
15:06:31  10  	  data_table_name => '&scoretable',
15:06:31  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:06:31  12  
15:06:31  13  	-- Normalize the data to be scored
15:06:31  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:06:31  15  	  norm_table_name => 'svmc_norm',
15:06:31  16  	  data_table_name => '&scoretable',
15:06:31  17  	  xform_view_name => 'svmc_apply_prep');
15:06:31  18  END;
15:06:31  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
15:06:32 SQL> 
15:06:32 SQL> -- Use same model_name used in score_gattn.sql
15:06:32 SQL> DEFINE model_name = 'forex15'
15:06:32 SQL> 
15:06:32 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
15:06:33 SQL> 
15:06:33 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
15:06:33   2  SELECT
15:06:33   3  prdate
15:06:33   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:06:33   5  ,sysdate
15:06:33   6  ,SUBSTR(prdate,1,3)pair
15:06:33   7  ,SUBSTR(prdate,4,19)ydate
15:06:33   8  FROM svmc_apply_prep
15:06:33   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:06:33 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
