
SQL*Plus: Release 11.2.0.1.0 Production on Mon Dec 27 06:33:55 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

06:33:55 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
06:33:55 SQL> 06:33:55 SQL> @aud_score1day.sql  2010-12-27 05:55:00
06:33:55 SQL> --
06:33:55 SQL> -- aud_score1day.sql
06:33:55 SQL> --
06:33:55 SQL> 
06:33:55 SQL> CREATE OR REPLACE VIEW sme AS
06:33:55   2  SELECT
06:33:55   3  'aud'||m.ydate prdate
06:33:55   4  ,NULL gatt
06:33:55   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:33:55   6  ,eur_g00
06:33:55   7  ,eur_g01
06:33:55   8  ,eur_g02
06:33:55   9  ,eur_g03
06:33:55  10  ,eur_g04
06:33:55  11  ,eur_g05
06:33:55  12  ,eur_g06
06:33:55  13  ,eur_g07
06:33:55  14  ,eur_g08
06:33:55  15  ,eur_g09
06:33:55  16  ,eur_g10
06:33:55  17  ,eur_g11
06:33:55  18  ,eur_g12
06:33:55  19  ,eur_g13
06:33:55  20  ,eur_g14
06:33:55  21  ,eur_g15
06:33:55  22  ,eur_g16
06:33:55  23  ,eur_g17
06:33:55  24  ,eur_g18
06:33:55  25  ,eur_g19
06:33:55  26  ,eur_g20
06:33:55  27  ,eur_g21
06:33:55  28  ,eur_g22
06:33:55  29  ,eur_g23
06:33:55  30  ,eur_g24
06:33:55  31  ,eur_g25
06:33:55  32  ,eur_g26
06:33:55  33  ,eur_g27
06:33:55  34  ,eur_g28
06:33:55  35  ,eur_g29
06:33:55  36  ,eur_g30
06:33:55  37  ,eur_g31
06:33:55  38  ,eur_g32
06:33:55  39  ,eur_g33
06:33:55  40  ,eur_g34
06:33:55  41  ,eur_g35
06:33:55  42  ,eur_g36
06:33:55  43  ,eur_g37
06:33:55  44  ,eur_g38
06:33:55  45  ,eur_g39
06:33:55  46  ,eur_g40
06:33:55  47  ,eur_g41
06:33:55  48  ,aud_g00
06:33:55  49  ,aud_g01
06:33:55  50  ,aud_g02
06:33:55  51  ,aud_g03
06:33:55  52  ,aud_g04
06:33:55  53  ,aud_g05
06:33:55  54  ,aud_g06
06:33:55  55  ,aud_g07
06:33:55  56  ,aud_g08
06:33:55  57  ,aud_g09
06:33:55  58  ,aud_g10
06:33:55  59  ,aud_g11
06:33:55  60  ,aud_g12
06:33:55  61  ,aud_g13
06:33:55  62  ,aud_g14
06:33:55  63  ,aud_g15
06:33:55  64  ,aud_g16
06:33:55  65  ,aud_g17
06:33:55  66  ,aud_g18
06:33:55  67  ,aud_g19
06:33:55  68  ,aud_g20
06:33:55  69  ,aud_g21
06:33:55  70  ,aud_g22
06:33:55  71  ,aud_g23
06:33:55  72  ,aud_g24
06:33:55  73  ,aud_g25
06:33:55  74  ,aud_g26
06:33:55  75  ,aud_g27
06:33:55  76  ,aud_g28
06:33:55  77  ,aud_g29
06:33:55  78  ,aud_g30
06:33:55  79  ,aud_g31
06:33:55  80  ,aud_g32
06:33:55  81  ,aud_g33
06:33:55  82  ,aud_g34
06:33:55  83  ,aud_g35
06:33:55  84  ,aud_g36
06:33:55  85  ,aud_g37
06:33:55  86  ,aud_g38
06:33:55  87  ,aud_g39
06:33:55  88  ,aud_g40
06:33:55  89  ,aud_g41
06:33:55  90  ,gbp_g00
06:33:55  91  ,gbp_g01
06:33:55  92  ,gbp_g02
06:33:55  93  ,gbp_g03
06:33:55  94  ,gbp_g04
06:33:55  95  ,gbp_g05
06:33:55  96  ,gbp_g06
06:33:55  97  ,gbp_g07
06:33:55  98  ,gbp_g08
06:33:55  99  ,gbp_g09
06:33:55 100  ,gbp_g10
06:33:55 101  ,gbp_g11
06:33:55 102  ,gbp_g12
06:33:55 103  ,gbp_g13
06:33:55 104  ,gbp_g14
06:33:55 105  ,gbp_g15
06:33:55 106  ,gbp_g16
06:33:55 107  ,gbp_g17
06:33:55 108  ,gbp_g18
06:33:55 109  ,gbp_g19
06:33:55 110  ,gbp_g20
06:33:55 111  ,gbp_g21
06:33:55 112  ,gbp_g22
06:33:55 113  ,gbp_g23
06:33:55 114  ,gbp_g24
06:33:55 115  ,gbp_g25
06:33:55 116  ,gbp_g26
06:33:55 117  ,gbp_g27
06:33:55 118  ,gbp_g28
06:33:55 119  ,gbp_g29
06:33:55 120  ,gbp_g30
06:33:55 121  ,gbp_g31
06:33:55 122  ,gbp_g32
06:33:55 123  ,gbp_g33
06:33:55 124  ,gbp_g34
06:33:55 125  ,gbp_g35
06:33:55 126  ,gbp_g36
06:33:55 127  ,gbp_g37
06:33:55 128  ,gbp_g38
06:33:55 129  ,gbp_g39
06:33:55 130  ,gbp_g40
06:33:55 131  ,gbp_g41
06:33:55 132  ,jpy_g00
06:33:55 133  ,jpy_g01
06:33:55 134  ,jpy_g02
06:33:55 135  ,jpy_g03
06:33:55 136  ,jpy_g04
06:33:55 137  ,jpy_g05
06:33:55 138  ,jpy_g06
06:33:55 139  ,jpy_g07
06:33:55 140  ,jpy_g08
06:33:55 141  ,jpy_g09
06:33:55 142  ,jpy_g10
06:33:55 143  ,jpy_g11
06:33:55 144  ,jpy_g12
06:33:55 145  ,jpy_g13
06:33:55 146  ,jpy_g14
06:33:55 147  ,jpy_g15
06:33:55 148  ,jpy_g16
06:33:55 149  ,jpy_g17
06:33:55 150  ,jpy_g18
06:33:55 151  ,jpy_g19
06:33:55 152  ,jpy_g20
06:33:55 153  ,jpy_g21
06:33:55 154  ,jpy_g22
06:33:55 155  ,jpy_g23
06:33:55 156  ,jpy_g24
06:33:55 157  ,jpy_g25
06:33:55 158  ,jpy_g26
06:33:55 159  ,jpy_g27
06:33:55 160  ,jpy_g28
06:33:55 161  ,jpy_g29
06:33:55 162  ,jpy_g30
06:33:55 163  ,jpy_g31
06:33:55 164  ,jpy_g32
06:33:55 165  ,jpy_g33
06:33:55 166  ,jpy_g34
06:33:55 167  ,jpy_g35
06:33:55 168  ,jpy_g36
06:33:55 169  ,jpy_g37
06:33:55 170  ,jpy_g38
06:33:55 171  ,jpy_g39
06:33:55 172  ,jpy_g40
06:33:55 173  ,jpy_g41
06:33:55 174  ,cad_g00
06:33:55 175  ,cad_g01
06:33:55 176  ,cad_g02
06:33:55 177  ,cad_g03
06:33:55 178  ,cad_g04
06:33:55 179  ,cad_g05
06:33:55 180  ,cad_g06
06:33:55 181  ,cad_g07
06:33:55 182  ,cad_g08
06:33:55 183  ,cad_g09
06:33:55 184  ,cad_g10
06:33:55 185  ,cad_g11
06:33:55 186  ,cad_g12
06:33:55 187  ,cad_g13
06:33:55 188  ,cad_g14
06:33:55 189  ,cad_g15
06:33:55 190  ,cad_g16
06:33:55 191  ,cad_g17
06:33:55 192  ,cad_g18
06:33:55 193  ,cad_g19
06:33:55 194  ,cad_g20
06:33:55 195  ,cad_g21
06:33:55 196  ,cad_g22
06:33:55 197  ,cad_g23
06:33:55 198  ,cad_g24
06:33:55 199  ,cad_g25
06:33:55 200  ,cad_g26
06:33:55 201  ,cad_g27
06:33:55 202  ,cad_g28
06:33:55 203  ,cad_g29
06:33:55 204  ,cad_g30
06:33:55 205  ,cad_g31
06:33:55 206  ,cad_g32
06:33:55 207  ,cad_g33
06:33:55 208  ,cad_g34
06:33:55 209  ,cad_g35
06:33:55 210  ,cad_g36
06:33:55 211  ,cad_g37
06:33:55 212  ,cad_g38
06:33:55 213  ,cad_g39
06:33:55 214  ,cad_g40
06:33:55 215  ,cad_g41
06:33:55 216  ,chf_g00
06:33:55 217  ,chf_g01
06:33:55 218  ,chf_g02
06:33:55 219  ,chf_g03
06:33:55 220  ,chf_g04
06:33:55 221  ,chf_g05
06:33:55 222  ,chf_g06
06:33:55 223  ,chf_g07
06:33:55 224  ,chf_g08
06:33:55 225  ,chf_g09
06:33:55 226  ,chf_g10
06:33:55 227  ,chf_g11
06:33:55 228  ,chf_g12
06:33:55 229  ,chf_g13
06:33:55 230  ,chf_g14
06:33:55 231  ,chf_g15
06:33:55 232  ,chf_g16
06:33:55 233  ,chf_g17
06:33:55 234  ,chf_g18
06:33:55 235  ,chf_g19
06:33:55 236  ,chf_g20
06:33:55 237  ,chf_g21
06:33:55 238  ,chf_g22
06:33:55 239  ,chf_g23
06:33:55 240  ,chf_g24
06:33:55 241  ,chf_g25
06:33:55 242  ,chf_g26
06:33:55 243  ,chf_g27
06:33:55 244  ,chf_g28
06:33:55 245  ,chf_g29
06:33:55 246  ,chf_g30
06:33:55 247  ,chf_g31
06:33:55 248  ,chf_g32
06:33:55 249  ,chf_g33
06:33:55 250  ,chf_g34
06:33:55 251  ,chf_g35
06:33:55 252  ,chf_g36
06:33:55 253  ,chf_g37
06:33:55 254  ,chf_g38
06:33:55 255  ,chf_g39
06:33:55 256  ,chf_g40
06:33:55 257  ,chf_g41
06:33:55 258  FROM aud_ms6 m
06:33:55 259  WHERE m.ydate = '&1'||' '||'&2'
06:33:55 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-27'||' '||'05:55:00'

View created.

Elapsed: 00:00:00.12
06:33:55 SQL> 
06:33:55 SQL> -- rpt
06:33:55 SQL> -- We should see just 1 row:
06:33:55 SQL> 
06:33:55 SQL> SELECT COUNT(prdate) FROM sme
06:33:55   2  
06:33:55 SQL> -- Build the model:
06:33:55 SQL> CREATE OR REPLACE VIEW bme AS
06:33:55   2  SELECT
06:33:55   3  'aud'||m.ydate prdate
06:33:55   4  ,gatt
06:33:55   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:33:55   6  ,eur_g00
06:33:55   7  ,eur_g01
06:33:55   8  ,eur_g02
06:33:55   9  ,eur_g03
06:33:55  10  ,eur_g04
06:33:55  11  ,eur_g05
06:33:55  12  ,eur_g06
06:33:55  13  ,eur_g07
06:33:55  14  ,eur_g08
06:33:55  15  ,eur_g09
06:33:55  16  ,eur_g10
06:33:55  17  ,eur_g11
06:33:55  18  ,eur_g12
06:33:55  19  ,eur_g13
06:33:55  20  ,eur_g14
06:33:55  21  ,eur_g15
06:33:55  22  ,eur_g16
06:33:55  23  ,eur_g17
06:33:55  24  ,eur_g18
06:33:55  25  ,eur_g19
06:33:55  26  ,eur_g20
06:33:55  27  ,eur_g21
06:33:55  28  ,eur_g22
06:33:55  29  ,eur_g23
06:33:55  30  ,eur_g24
06:33:55  31  ,eur_g25
06:33:55  32  ,eur_g26
06:33:55  33  ,eur_g27
06:33:55  34  ,eur_g28
06:33:55  35  ,eur_g29
06:33:55  36  ,eur_g30
06:33:55  37  ,eur_g31
06:33:55  38  ,eur_g32
06:33:55  39  ,eur_g33
06:33:55  40  ,eur_g34
06:33:55  41  ,eur_g35
06:33:55  42  ,eur_g36
06:33:55  43  ,eur_g37
06:33:55  44  ,eur_g38
06:33:55  45  ,eur_g39
06:33:55  46  ,eur_g40
06:33:55  47  ,eur_g41
06:33:55  48  ,aud_g00
06:33:55  49  ,aud_g01
06:33:55  50  ,aud_g02
06:33:55  51  ,aud_g03
06:33:55  52  ,aud_g04
06:33:55  53  ,aud_g05
06:33:55  54  ,aud_g06
06:33:55  55  ,aud_g07
06:33:55  56  ,aud_g08
06:33:55  57  ,aud_g09
06:33:55  58  ,aud_g10
06:33:55  59  ,aud_g11
06:33:55  60  ,aud_g12
06:33:55  61  ,aud_g13
06:33:55  62  ,aud_g14
06:33:55  63  ,aud_g15
06:33:55  64  ,aud_g16
06:33:55  65  ,aud_g17
06:33:55  66  ,aud_g18
06:33:55  67  ,aud_g19
06:33:55  68  ,aud_g20
06:33:55  69  ,aud_g21
06:33:55  70  ,aud_g22
06:33:55  71  ,aud_g23
06:33:55  72  ,aud_g24
06:33:55  73  ,aud_g25
06:33:55  74  ,aud_g26
06:33:55  75  ,aud_g27
06:33:55  76  ,aud_g28
06:33:55  77  ,aud_g29
06:33:55  78  ,aud_g30
06:33:55  79  ,aud_g31
06:33:55  80  ,aud_g32
06:33:55  81  ,aud_g33
06:33:55  82  ,aud_g34
06:33:55  83  ,aud_g35
06:33:55  84  ,aud_g36
06:33:55  85  ,aud_g37
06:33:55  86  ,aud_g38
06:33:55  87  ,aud_g39
06:33:55  88  ,aud_g40
06:33:55  89  ,aud_g41
06:33:55  90  ,gbp_g00
06:33:55  91  ,gbp_g01
06:33:55  92  ,gbp_g02
06:33:55  93  ,gbp_g03
06:33:55  94  ,gbp_g04
06:33:55  95  ,gbp_g05
06:33:55  96  ,gbp_g06
06:33:55  97  ,gbp_g07
06:33:55  98  ,gbp_g08
06:33:55  99  ,gbp_g09
06:33:55 100  ,gbp_g10
06:33:55 101  ,gbp_g11
06:33:55 102  ,gbp_g12
06:33:55 103  ,gbp_g13
06:33:55 104  ,gbp_g14
06:33:55 105  ,gbp_g15
06:33:55 106  ,gbp_g16
06:33:55 107  ,gbp_g17
06:33:55 108  ,gbp_g18
06:33:55 109  ,gbp_g19
06:33:55 110  ,gbp_g20
06:33:55 111  ,gbp_g21
06:33:55 112  ,gbp_g22
06:33:55 113  ,gbp_g23
06:33:55 114  ,gbp_g24
06:33:55 115  ,gbp_g25
06:33:55 116  ,gbp_g26
06:33:55 117  ,gbp_g27
06:33:55 118  ,gbp_g28
06:33:55 119  ,gbp_g29
06:33:55 120  ,gbp_g30
06:33:55 121  ,gbp_g31
06:33:55 122  ,gbp_g32
06:33:55 123  ,gbp_g33
06:33:55 124  ,gbp_g34
06:33:55 125  ,gbp_g35
06:33:55 126  ,gbp_g36
06:33:55 127  ,gbp_g37
06:33:55 128  ,gbp_g38
06:33:55 129  ,gbp_g39
06:33:55 130  ,gbp_g40
06:33:55 131  ,gbp_g41
06:33:55 132  ,jpy_g00
06:33:55 133  ,jpy_g01
06:33:55 134  ,jpy_g02
06:33:55 135  ,jpy_g03
06:33:55 136  ,jpy_g04
06:33:55 137  ,jpy_g05
06:33:55 138  ,jpy_g06
06:33:55 139  ,jpy_g07
06:33:55 140  ,jpy_g08
06:33:55 141  ,jpy_g09
06:33:55 142  ,jpy_g10
06:33:55 143  ,jpy_g11
06:33:55 144  ,jpy_g12
06:33:55 145  ,jpy_g13
06:33:55 146  ,jpy_g14
06:33:55 147  ,jpy_g15
06:33:55 148  ,jpy_g16
06:33:55 149  ,jpy_g17
06:33:55 150  ,jpy_g18
06:33:55 151  ,jpy_g19
06:33:55 152  ,jpy_g20
06:33:55 153  ,jpy_g21
06:33:55 154  ,jpy_g22
06:33:55 155  ,jpy_g23
06:33:55 156  ,jpy_g24
06:33:55 157  ,jpy_g25
06:33:55 158  ,jpy_g26
06:33:55 159  ,jpy_g27
06:33:55 160  ,jpy_g28
06:33:55 161  ,jpy_g29
06:33:55 162  ,jpy_g30
06:33:55 163  ,jpy_g31
06:33:55 164  ,jpy_g32
06:33:55 165  ,jpy_g33
06:33:55 166  ,jpy_g34
06:33:55 167  ,jpy_g35
06:33:55 168  ,jpy_g36
06:33:55 169  ,jpy_g37
06:33:55 170  ,jpy_g38
06:33:55 171  ,jpy_g39
06:33:55 172  ,jpy_g40
06:33:55 173  ,jpy_g41
06:33:55 174  ,cad_g00
06:33:55 175  ,cad_g01
06:33:55 176  ,cad_g02
06:33:55 177  ,cad_g03
06:33:55 178  ,cad_g04
06:33:55 179  ,cad_g05
06:33:55 180  ,cad_g06
06:33:55 181  ,cad_g07
06:33:55 182  ,cad_g08
06:33:55 183  ,cad_g09
06:33:55 184  ,cad_g10
06:33:55 185  ,cad_g11
06:33:55 186  ,cad_g12
06:33:55 187  ,cad_g13
06:33:55 188  ,cad_g14
06:33:55 189  ,cad_g15
06:33:55 190  ,cad_g16
06:33:55 191  ,cad_g17
06:33:55 192  ,cad_g18
06:33:55 193  ,cad_g19
06:33:55 194  ,cad_g20
06:33:55 195  ,cad_g21
06:33:55 196  ,cad_g22
06:33:55 197  ,cad_g23
06:33:55 198  ,cad_g24
06:33:55 199  ,cad_g25
06:33:55 200  ,cad_g26
06:33:55 201  ,cad_g27
06:33:55 202  ,cad_g28
06:33:55 203  ,cad_g29
06:33:55 204  ,cad_g30
06:33:55 205  ,cad_g31
06:33:55 206  ,cad_g32
06:33:55 207  ,cad_g33
06:33:55 208  ,cad_g34
06:33:55 209  ,cad_g35
06:33:55 210  ,cad_g36
06:33:55 211  ,cad_g37
06:33:55 212  ,cad_g38
06:33:55 213  ,cad_g39
06:33:55 214  ,cad_g40
06:33:55 215  ,cad_g41
06:33:55 216  ,chf_g00
06:33:55 217  ,chf_g01
06:33:55 218  ,chf_g02
06:33:55 219  ,chf_g03
06:33:55 220  ,chf_g04
06:33:55 221  ,chf_g05
06:33:55 222  ,chf_g06
06:33:55 223  ,chf_g07
06:33:55 224  ,chf_g08
06:33:55 225  ,chf_g09
06:33:55 226  ,chf_g10
06:33:55 227  ,chf_g11
06:33:55 228  ,chf_g12
06:33:55 229  ,chf_g13
06:33:55 230  ,chf_g14
06:33:55 231  ,chf_g15
06:33:55 232  ,chf_g16
06:33:55 233  ,chf_g17
06:33:55 234  ,chf_g18
06:33:55 235  ,chf_g19
06:33:55 236  ,chf_g20
06:33:55 237  ,chf_g21
06:33:55 238  ,chf_g22
06:33:55 239  ,chf_g23
06:33:55 240  ,chf_g24
06:33:55 241  ,chf_g25
06:33:55 242  ,chf_g26
06:33:55 243  ,chf_g27
06:33:55 244  ,chf_g28
06:33:55 245  ,chf_g29
06:33:55 246  ,chf_g30
06:33:55 247  ,chf_g31
06:33:55 248  ,chf_g32
06:33:55 249  ,chf_g33
06:33:55 250  ,chf_g34
06:33:55 251  ,chf_g35
06:33:55 252  ,chf_g36
06:33:55 253  ,chf_g37
06:33:55 254  ,chf_g38
06:33:55 255  ,chf_g39
06:33:55 256  ,chf_g40
06:33:55 257  ,chf_g41
06:33:55 258  FROM aud_ms6 m
06:33:55 259  WHERE gatt IN('nup','up')
06:33:55 260  AND 1+m.ydate < '&1'||' '||'&2'
06:33:55 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-27'||' '||'05:55:00'

View created.

Elapsed: 00:00:00.13
06:33:55 SQL> 
06:33:55 SQL> -- rpt
06:33:55 SQL> 
06:33:55 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
06:33:55   2  
06:33:55 SQL> SELECT MAX(prdate) FROM bme
06:33:55   2  
06:33:55 SQL> -- Now build model from bme and score sme
06:33:55 SQL> @score1.sql
06:33:55 SQL> -- score1.sql
06:33:55 SQL> 
06:33:55 SQL> -- Does the 1st SVM score
06:33:55 SQL> 
06:33:55 SQL> -- Fill up svmc_apply_prep
06:33:55 SQL> @score.sql
06:33:55 SQL> --
06:33:55 SQL> -- score.sql
06:33:55 SQL> --
06:33:55 SQL> 
06:33:55 SQL> -- usage: score.sql
06:33:55 SQL> 
06:33:55 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:33:55 SQL> 
06:33:55 SQL> DEFINE target	= 'gatt'
06:33:55 SQL> DEFINE model_name = 'forex14'
06:33:55 SQL> DEFINE bldtable	= 'bme'
06:33:55 SQL> DEFINE scoretable = 'sme'
06:33:55 SQL> DEFINE case_id	= 'prdate'
06:33:55 SQL> 
06:33:55 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:33:55 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:33:55 SQL> 
06:33:55 SQL> -- Builds an SVM model using pl/sql.
06:33:55 SQL> 
06:33:55 SQL> -----------------------------------------------------------------------
06:33:55 SQL> --			    BUILD THE MODEL
06:33:55 SQL> -----------------------------------------------------------------------
06:33:55 SQL> 
06:33:55 SQL> -- Cleanup old build data preparation objects for repeat runs
06:33:55 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
06:33:55 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
06:33:55 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
06:33:55 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
06:33:55 SQL> 
06:33:55 SQL> 
06:33:55 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:33:55 SQL> --
06:33:55 SQL> -- DROP	TABLE svmc_settings ;
06:33:55 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:33:55 SQL> -- DELETE svmc_settings;
06:33:55 SQL> 
06:33:55 SQL> -- The default classification algorithm is Naive Bayes. So override
06:33:55 SQL> -- this choice to SVM using a settings table.
06:33:55 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:33:55 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:33:55 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:33:55 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:33:55 SQL> -- models.
06:33:55 SQL> --
06:33:55 SQL> 
06:33:55 SQL> -- Do this once and then comment it out.
06:33:55 SQL> -- That makes script go faster.
06:33:55 SQL> -- BEGIN
06:33:55 SQL> -- -- Populate settings table
06:33:55 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:33:55 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:33:55 SQL> --
06:33:55 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:33:55 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:33:55 SQL> --
06:33:55 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:33:55 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:33:55 SQL> --   COMMIT;
06:33:55 SQL> -- END;
06:33:55 SQL> -- /
06:33:55 SQL> 
06:33:55 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:33:55 SQL> 
06:33:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:33:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:33:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
06:33:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:33:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:33:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:33:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:33:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:33:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:33:56 SQL> 
06:33:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:33:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:33:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
06:33:56 SQL> 
06:33:56 SQL> --------------------------------
06:33:56 SQL> -- PREPARE BUILD (TRAINING) DATA
06:33:56 SQL> --
06:33:56 SQL> 
06:33:56 SQL> -- 1. Missing Value treatment for all Predictors and
06:33:56 SQL> -- 2. Outlier Treatment and
06:33:56 SQL> -- 3. Normalization are performed below.
06:33:56 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:33:56 SQL> --    normalized here.
06:33:56 SQL> 
06:33:56 SQL> BEGIN
06:33:56   2  	-- Perform missing value treatment for all predictors
06:33:56   3  	-- create miss tables
06:33:56   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:33:56   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:33:56   6  
06:33:56   7  	-- populate miss tables
06:33:56   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:33:56   9  	  miss_table_name => 'svmc_miss_num',
06:33:56  10  	  data_table_name => '&bldtable',
06:33:56  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:33:56  12  
06:33:56  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:33:56  14  	  miss_table_name => 'svmc_miss_cat',
06:33:56  15  	  data_table_name => '&bldtable',
06:33:56  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:33:56  17  
06:33:56  18  	-- xform input data to replace missing values
06:33:56  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:33:56  20  	  miss_table_name => 'svmc_miss_num',
06:33:56  21  	  data_table_name => '&bldtable',
06:33:56  22  	  xform_view_name => 'xformed_build_miss_num');
06:33:56  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:33:56  24  	  miss_table_name => 'svmc_miss_cat',
06:33:56  25  	  data_table_name => '&bldtable',
06:33:56  26  	  xform_view_name => 'xformed_build_miss_cat');
06:33:56  27  
06:33:56  28  	-- Perform outlier treatment.
06:33:56  29  	-- create clip table
06:33:56  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:33:56  31  
06:33:56  32  	-- populate clip table
06:33:56  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:33:56  34  	  clip_table_name => 'svmc_clip',
06:33:56  35  	  data_table_name => '&bldtable',
06:33:56  36  	  tail_frac	  => 0.025,
06:33:56  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:33:56  38  
06:33:56  39  	-- xform input data to winsorized data
06:33:56  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:33:56  41  	  clip_table_name => 'svmc_clip',
06:33:56  42  	  data_table_name => '&bldtable',
06:33:56  43  	  xform_view_name => 'svmc_winsor');
06:33:56  44  
06:33:56  45  	-- create normalization table
06:33:56  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:33:56  47  
06:33:56  48  	-- populate normalization table based on winsorized data
06:33:56  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:33:56  50  	  norm_table_name => 'svmc_norm',
06:33:56  51  	  data_table_name => 'svmc_winsor',
06:33:56  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:33:56  53  
06:33:56  54  	-- normalize the original data
06:33:56  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:33:56  56  	  norm_table_name => 'svmc_norm',
06:33:56  57  	  data_table_name => '&bldtable',
06:33:56  58  	  xform_view_name => 'svmc_build_prep');
06:33:56  59  END;
06:33:56  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.63
06:34:13 SQL> 
06:34:13 SQL> ---------------------
06:34:13 SQL> -- CREATE A NEW MODEL
06:34:13 SQL> --
06:34:13 SQL> -- Cleanup old model with the same name for repeat runs
06:34:13 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:34:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:34:13   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.65
06:34:14 SQL> 
06:34:14 SQL> -- Build a new SVM Model
06:34:14 SQL> BEGIN
06:34:14   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:34:14   3  	  model_name	      => '&model_name',
06:34:14   4  	  mining_function     => dbms_data_mining.classification,
06:34:14   5  	  data_table_name     => 'svmc_build_prep',
06:34:14   6  	  case_id_column_name => '&case_id',
06:34:14   7  	  target_column_name  => '&target',
06:34:14   8  	  settings_table_name => 'svmc_settings');
06:34:14   9  END;
06:34:14  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.86
06:34:41 SQL> 
06:34:41 SQL> -----------------------------------------------------------------------
06:34:41 SQL> --			       APPLY/score THE MODEL
06:34:41 SQL> -----------------------------------------------------------------------
06:34:41 SQL> 
06:34:41 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:34:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:34:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:34:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:34:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:34:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:34:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:34:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:34:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:34:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:34:41 SQL> -----------------------
06:34:41 SQL> -- PREPARE SCORING DATA
06:34:41 SQL> --
06:34:41 SQL> -- If the data for model creation has been prepared, then the data
06:34:41 SQL> -- to be scored using the model must be prepared in the same manner
06:34:41 SQL> -- in order to obtain meaningful results.
06:34:41 SQL> --
06:34:41 SQL> -- 1. Missing Value treatment for all Predictors and
06:34:41 SQL> -- 2. Normalization
06:34:41 SQL> -- No outlier treatment will be performed during test and apply. The
06:34:41 SQL> -- normalization step is sufficient, since the normalization parameters
06:34:41 SQL> -- already capture the effects of outlier treatment done with build data.
06:34:41 SQL> --
06:34:41 SQL> BEGIN
06:34:41   2  	-- Xform Test data to replace missing values
06:34:41   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:34:41   4  	  miss_table_name => 'svmc_miss_num',
06:34:41   5  	  data_table_name => '&scoretable',
06:34:41   6  	  xform_view_name => 'xformed_apply_miss_num');
06:34:41   7  
06:34:41   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:34:41   9  	  miss_table_name => 'svmc_miss_cat',
06:34:41  10  	  data_table_name => '&scoretable',
06:34:41  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:34:41  12  
06:34:41  13  	-- Normalize the data to be scored
06:34:41  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:34:41  15  	  norm_table_name => 'svmc_norm',
06:34:41  16  	  data_table_name => '&scoretable',
06:34:41  17  	  xform_view_name => 'svmc_apply_prep');
06:34:41  18  END;
06:34:41  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
06:34:42 SQL> 
06:34:42 SQL> -- Use same model_name used in score.sql
06:34:42 SQL> DEFINE model_name = 'forex14'
06:34:42 SQL> 
06:34:42 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
06:34:42 SQL> 
06:34:42 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
06:34:42 SQL> 
06:34:42 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
06:34:42   2  SELECT
06:34:42   3  prdate
06:34:42   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:34:42   5  ,sysdate
06:34:42   6  ,SUBSTR(prdate,1,3)pair
06:34:42   7  ,SUBSTR(prdate,4,19)ydate
06:34:42   8  FROM svmc_apply_prep
06:34:42   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
06:34:42 SQL> @aud_score1day.sql  2010-12-27 06:00:00
06:34:42 SQL> --
06:34:42 SQL> -- aud_score1day.sql
06:34:42 SQL> --
06:34:42 SQL> 
06:34:42 SQL> CREATE OR REPLACE VIEW sme AS
06:34:42   2  SELECT
06:34:42   3  'aud'||m.ydate prdate
06:34:42   4  ,NULL gatt
06:34:42   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:34:42   6  ,eur_g00
06:34:42   7  ,eur_g01
06:34:42   8  ,eur_g02
06:34:42   9  ,eur_g03
06:34:42  10  ,eur_g04
06:34:42  11  ,eur_g05
06:34:42  12  ,eur_g06
06:34:42  13  ,eur_g07
06:34:42  14  ,eur_g08
06:34:42  15  ,eur_g09
06:34:42  16  ,eur_g10
06:34:42  17  ,eur_g11
06:34:42  18  ,eur_g12
06:34:42  19  ,eur_g13
06:34:42  20  ,eur_g14
06:34:42  21  ,eur_g15
06:34:42  22  ,eur_g16
06:34:42  23  ,eur_g17
06:34:42  24  ,eur_g18
06:34:42  25  ,eur_g19
06:34:42  26  ,eur_g20
06:34:42  27  ,eur_g21
06:34:42  28  ,eur_g22
06:34:42  29  ,eur_g23
06:34:42  30  ,eur_g24
06:34:42  31  ,eur_g25
06:34:42  32  ,eur_g26
06:34:42  33  ,eur_g27
06:34:42  34  ,eur_g28
06:34:42  35  ,eur_g29
06:34:42  36  ,eur_g30
06:34:42  37  ,eur_g31
06:34:42  38  ,eur_g32
06:34:42  39  ,eur_g33
06:34:42  40  ,eur_g34
06:34:42  41  ,eur_g35
06:34:42  42  ,eur_g36
06:34:42  43  ,eur_g37
06:34:42  44  ,eur_g38
06:34:42  45  ,eur_g39
06:34:42  46  ,eur_g40
06:34:42  47  ,eur_g41
06:34:42  48  ,aud_g00
06:34:42  49  ,aud_g01
06:34:42  50  ,aud_g02
06:34:42  51  ,aud_g03
06:34:42  52  ,aud_g04
06:34:42  53  ,aud_g05
06:34:42  54  ,aud_g06
06:34:42  55  ,aud_g07
06:34:42  56  ,aud_g08
06:34:42  57  ,aud_g09
06:34:42  58  ,aud_g10
06:34:42  59  ,aud_g11
06:34:42  60  ,aud_g12
06:34:42  61  ,aud_g13
06:34:42  62  ,aud_g14
06:34:42  63  ,aud_g15
06:34:42  64  ,aud_g16
06:34:42  65  ,aud_g17
06:34:42  66  ,aud_g18
06:34:42  67  ,aud_g19
06:34:42  68  ,aud_g20
06:34:42  69  ,aud_g21
06:34:42  70  ,aud_g22
06:34:42  71  ,aud_g23
06:34:42  72  ,aud_g24
06:34:42  73  ,aud_g25
06:34:42  74  ,aud_g26
06:34:42  75  ,aud_g27
06:34:42  76  ,aud_g28
06:34:42  77  ,aud_g29
06:34:42  78  ,aud_g30
06:34:42  79  ,aud_g31
06:34:42  80  ,aud_g32
06:34:42  81  ,aud_g33
06:34:42  82  ,aud_g34
06:34:42  83  ,aud_g35
06:34:42  84  ,aud_g36
06:34:42  85  ,aud_g37
06:34:42  86  ,aud_g38
06:34:42  87  ,aud_g39
06:34:42  88  ,aud_g40
06:34:42  89  ,aud_g41
06:34:42  90  ,gbp_g00
06:34:42  91  ,gbp_g01
06:34:42  92  ,gbp_g02
06:34:42  93  ,gbp_g03
06:34:42  94  ,gbp_g04
06:34:42  95  ,gbp_g05
06:34:42  96  ,gbp_g06
06:34:42  97  ,gbp_g07
06:34:42  98  ,gbp_g08
06:34:42  99  ,gbp_g09
06:34:42 100  ,gbp_g10
06:34:42 101  ,gbp_g11
06:34:42 102  ,gbp_g12
06:34:42 103  ,gbp_g13
06:34:42 104  ,gbp_g14
06:34:42 105  ,gbp_g15
06:34:42 106  ,gbp_g16
06:34:42 107  ,gbp_g17
06:34:42 108  ,gbp_g18
06:34:42 109  ,gbp_g19
06:34:42 110  ,gbp_g20
06:34:42 111  ,gbp_g21
06:34:42 112  ,gbp_g22
06:34:42 113  ,gbp_g23
06:34:42 114  ,gbp_g24
06:34:42 115  ,gbp_g25
06:34:42 116  ,gbp_g26
06:34:42 117  ,gbp_g27
06:34:42 118  ,gbp_g28
06:34:42 119  ,gbp_g29
06:34:42 120  ,gbp_g30
06:34:42 121  ,gbp_g31
06:34:42 122  ,gbp_g32
06:34:42 123  ,gbp_g33
06:34:42 124  ,gbp_g34
06:34:42 125  ,gbp_g35
06:34:42 126  ,gbp_g36
06:34:42 127  ,gbp_g37
06:34:42 128  ,gbp_g38
06:34:42 129  ,gbp_g39
06:34:42 130  ,gbp_g40
06:34:42 131  ,gbp_g41
06:34:42 132  ,jpy_g00
06:34:42 133  ,jpy_g01
06:34:42 134  ,jpy_g02
06:34:42 135  ,jpy_g03
06:34:42 136  ,jpy_g04
06:34:42 137  ,jpy_g05
06:34:42 138  ,jpy_g06
06:34:42 139  ,jpy_g07
06:34:42 140  ,jpy_g08
06:34:42 141  ,jpy_g09
06:34:42 142  ,jpy_g10
06:34:42 143  ,jpy_g11
06:34:42 144  ,jpy_g12
06:34:42 145  ,jpy_g13
06:34:42 146  ,jpy_g14
06:34:42 147  ,jpy_g15
06:34:42 148  ,jpy_g16
06:34:42 149  ,jpy_g17
06:34:42 150  ,jpy_g18
06:34:42 151  ,jpy_g19
06:34:42 152  ,jpy_g20
06:34:42 153  ,jpy_g21
06:34:42 154  ,jpy_g22
06:34:42 155  ,jpy_g23
06:34:42 156  ,jpy_g24
06:34:42 157  ,jpy_g25
06:34:42 158  ,jpy_g26
06:34:42 159  ,jpy_g27
06:34:42 160  ,jpy_g28
06:34:42 161  ,jpy_g29
06:34:42 162  ,jpy_g30
06:34:42 163  ,jpy_g31
06:34:42 164  ,jpy_g32
06:34:42 165  ,jpy_g33
06:34:42 166  ,jpy_g34
06:34:42 167  ,jpy_g35
06:34:42 168  ,jpy_g36
06:34:42 169  ,jpy_g37
06:34:42 170  ,jpy_g38
06:34:42 171  ,jpy_g39
06:34:42 172  ,jpy_g40
06:34:42 173  ,jpy_g41
06:34:42 174  ,cad_g00
06:34:42 175  ,cad_g01
06:34:42 176  ,cad_g02
06:34:42 177  ,cad_g03
06:34:42 178  ,cad_g04
06:34:42 179  ,cad_g05
06:34:42 180  ,cad_g06
06:34:42 181  ,cad_g07
06:34:42 182  ,cad_g08
06:34:42 183  ,cad_g09
06:34:42 184  ,cad_g10
06:34:42 185  ,cad_g11
06:34:42 186  ,cad_g12
06:34:42 187  ,cad_g13
06:34:42 188  ,cad_g14
06:34:42 189  ,cad_g15
06:34:42 190  ,cad_g16
06:34:42 191  ,cad_g17
06:34:42 192  ,cad_g18
06:34:42 193  ,cad_g19
06:34:42 194  ,cad_g20
06:34:42 195  ,cad_g21
06:34:42 196  ,cad_g22
06:34:42 197  ,cad_g23
06:34:42 198  ,cad_g24
06:34:42 199  ,cad_g25
06:34:42 200  ,cad_g26
06:34:42 201  ,cad_g27
06:34:42 202  ,cad_g28
06:34:42 203  ,cad_g29
06:34:42 204  ,cad_g30
06:34:42 205  ,cad_g31
06:34:42 206  ,cad_g32
06:34:42 207  ,cad_g33
06:34:42 208  ,cad_g34
06:34:42 209  ,cad_g35
06:34:42 210  ,cad_g36
06:34:42 211  ,cad_g37
06:34:42 212  ,cad_g38
06:34:42 213  ,cad_g39
06:34:42 214  ,cad_g40
06:34:42 215  ,cad_g41
06:34:42 216  ,chf_g00
06:34:42 217  ,chf_g01
06:34:42 218  ,chf_g02
06:34:42 219  ,chf_g03
06:34:42 220  ,chf_g04
06:34:42 221  ,chf_g05
06:34:42 222  ,chf_g06
06:34:42 223  ,chf_g07
06:34:42 224  ,chf_g08
06:34:42 225  ,chf_g09
06:34:42 226  ,chf_g10
06:34:42 227  ,chf_g11
06:34:42 228  ,chf_g12
06:34:42 229  ,chf_g13
06:34:42 230  ,chf_g14
06:34:42 231  ,chf_g15
06:34:42 232  ,chf_g16
06:34:42 233  ,chf_g17
06:34:42 234  ,chf_g18
06:34:42 235  ,chf_g19
06:34:42 236  ,chf_g20
06:34:42 237  ,chf_g21
06:34:42 238  ,chf_g22
06:34:42 239  ,chf_g23
06:34:42 240  ,chf_g24
06:34:42 241  ,chf_g25
06:34:42 242  ,chf_g26
06:34:42 243  ,chf_g27
06:34:42 244  ,chf_g28
06:34:42 245  ,chf_g29
06:34:42 246  ,chf_g30
06:34:42 247  ,chf_g31
06:34:42 248  ,chf_g32
06:34:42 249  ,chf_g33
06:34:42 250  ,chf_g34
06:34:42 251  ,chf_g35
06:34:42 252  ,chf_g36
06:34:42 253  ,chf_g37
06:34:42 254  ,chf_g38
06:34:42 255  ,chf_g39
06:34:42 256  ,chf_g40
06:34:42 257  ,chf_g41
06:34:42 258  FROM aud_ms6 m
06:34:42 259  WHERE m.ydate = '&1'||' '||'&2'
06:34:42 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-27'||' '||'06:00:00'

View created.

Elapsed: 00:00:00.12
06:34:43 SQL> 
06:34:43 SQL> -- rpt
06:34:43 SQL> -- We should see just 1 row:
06:34:43 SQL> 
06:34:43 SQL> SELECT COUNT(prdate) FROM sme
06:34:43   2  
06:34:43 SQL> -- Build the model:
06:34:43 SQL> CREATE OR REPLACE VIEW bme AS
06:34:43   2  SELECT
06:34:43   3  'aud'||m.ydate prdate
06:34:43   4  ,gatt
06:34:43   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:34:43   6  ,eur_g00
06:34:43   7  ,eur_g01
06:34:43   8  ,eur_g02
06:34:43   9  ,eur_g03
06:34:43  10  ,eur_g04
06:34:43  11  ,eur_g05
06:34:43  12  ,eur_g06
06:34:43  13  ,eur_g07
06:34:43  14  ,eur_g08
06:34:43  15  ,eur_g09
06:34:43  16  ,eur_g10
06:34:43  17  ,eur_g11
06:34:43  18  ,eur_g12
06:34:43  19  ,eur_g13
06:34:43  20  ,eur_g14
06:34:43  21  ,eur_g15
06:34:43  22  ,eur_g16
06:34:43  23  ,eur_g17
06:34:43  24  ,eur_g18
06:34:43  25  ,eur_g19
06:34:43  26  ,eur_g20
06:34:43  27  ,eur_g21
06:34:43  28  ,eur_g22
06:34:43  29  ,eur_g23
06:34:43  30  ,eur_g24
06:34:43  31  ,eur_g25
06:34:43  32  ,eur_g26
06:34:43  33  ,eur_g27
06:34:43  34  ,eur_g28
06:34:43  35  ,eur_g29
06:34:43  36  ,eur_g30
06:34:43  37  ,eur_g31
06:34:43  38  ,eur_g32
06:34:43  39  ,eur_g33
06:34:43  40  ,eur_g34
06:34:43  41  ,eur_g35
06:34:43  42  ,eur_g36
06:34:43  43  ,eur_g37
06:34:43  44  ,eur_g38
06:34:43  45  ,eur_g39
06:34:43  46  ,eur_g40
06:34:43  47  ,eur_g41
06:34:43  48  ,aud_g00
06:34:43  49  ,aud_g01
06:34:43  50  ,aud_g02
06:34:43  51  ,aud_g03
06:34:43  52  ,aud_g04
06:34:43  53  ,aud_g05
06:34:43  54  ,aud_g06
06:34:43  55  ,aud_g07
06:34:43  56  ,aud_g08
06:34:43  57  ,aud_g09
06:34:43  58  ,aud_g10
06:34:43  59  ,aud_g11
06:34:43  60  ,aud_g12
06:34:43  61  ,aud_g13
06:34:43  62  ,aud_g14
06:34:43  63  ,aud_g15
06:34:43  64  ,aud_g16
06:34:43  65  ,aud_g17
06:34:43  66  ,aud_g18
06:34:43  67  ,aud_g19
06:34:43  68  ,aud_g20
06:34:43  69  ,aud_g21
06:34:43  70  ,aud_g22
06:34:43  71  ,aud_g23
06:34:43  72  ,aud_g24
06:34:43  73  ,aud_g25
06:34:43  74  ,aud_g26
06:34:43  75  ,aud_g27
06:34:43  76  ,aud_g28
06:34:43  77  ,aud_g29
06:34:43  78  ,aud_g30
06:34:43  79  ,aud_g31
06:34:43  80  ,aud_g32
06:34:43  81  ,aud_g33
06:34:43  82  ,aud_g34
06:34:43  83  ,aud_g35
06:34:43  84  ,aud_g36
06:34:43  85  ,aud_g37
06:34:43  86  ,aud_g38
06:34:43  87  ,aud_g39
06:34:43  88  ,aud_g40
06:34:43  89  ,aud_g41
06:34:43  90  ,gbp_g00
06:34:43  91  ,gbp_g01
06:34:43  92  ,gbp_g02
06:34:43  93  ,gbp_g03
06:34:43  94  ,gbp_g04
06:34:43  95  ,gbp_g05
06:34:43  96  ,gbp_g06
06:34:43  97  ,gbp_g07
06:34:43  98  ,gbp_g08
06:34:43  99  ,gbp_g09
06:34:43 100  ,gbp_g10
06:34:43 101  ,gbp_g11
06:34:43 102  ,gbp_g12
06:34:43 103  ,gbp_g13
06:34:43 104  ,gbp_g14
06:34:43 105  ,gbp_g15
06:34:43 106  ,gbp_g16
06:34:43 107  ,gbp_g17
06:34:43 108  ,gbp_g18
06:34:43 109  ,gbp_g19
06:34:43 110  ,gbp_g20
06:34:43 111  ,gbp_g21
06:34:43 112  ,gbp_g22
06:34:43 113  ,gbp_g23
06:34:43 114  ,gbp_g24
06:34:43 115  ,gbp_g25
06:34:43 116  ,gbp_g26
06:34:43 117  ,gbp_g27
06:34:43 118  ,gbp_g28
06:34:43 119  ,gbp_g29
06:34:43 120  ,gbp_g30
06:34:43 121  ,gbp_g31
06:34:43 122  ,gbp_g32
06:34:43 123  ,gbp_g33
06:34:43 124  ,gbp_g34
06:34:43 125  ,gbp_g35
06:34:43 126  ,gbp_g36
06:34:43 127  ,gbp_g37
06:34:43 128  ,gbp_g38
06:34:43 129  ,gbp_g39
06:34:43 130  ,gbp_g40
06:34:43 131  ,gbp_g41
06:34:43 132  ,jpy_g00
06:34:43 133  ,jpy_g01
06:34:43 134  ,jpy_g02
06:34:43 135  ,jpy_g03
06:34:43 136  ,jpy_g04
06:34:43 137  ,jpy_g05
06:34:43 138  ,jpy_g06
06:34:43 139  ,jpy_g07
06:34:43 140  ,jpy_g08
06:34:43 141  ,jpy_g09
06:34:43 142  ,jpy_g10
06:34:43 143  ,jpy_g11
06:34:43 144  ,jpy_g12
06:34:43 145  ,jpy_g13
06:34:43 146  ,jpy_g14
06:34:43 147  ,jpy_g15
06:34:43 148  ,jpy_g16
06:34:43 149  ,jpy_g17
06:34:43 150  ,jpy_g18
06:34:43 151  ,jpy_g19
06:34:43 152  ,jpy_g20
06:34:43 153  ,jpy_g21
06:34:43 154  ,jpy_g22
06:34:43 155  ,jpy_g23
06:34:43 156  ,jpy_g24
06:34:43 157  ,jpy_g25
06:34:43 158  ,jpy_g26
06:34:43 159  ,jpy_g27
06:34:43 160  ,jpy_g28
06:34:43 161  ,jpy_g29
06:34:43 162  ,jpy_g30
06:34:43 163  ,jpy_g31
06:34:43 164  ,jpy_g32
06:34:43 165  ,jpy_g33
06:34:43 166  ,jpy_g34
06:34:43 167  ,jpy_g35
06:34:43 168  ,jpy_g36
06:34:43 169  ,jpy_g37
06:34:43 170  ,jpy_g38
06:34:43 171  ,jpy_g39
06:34:43 172  ,jpy_g40
06:34:43 173  ,jpy_g41
06:34:43 174  ,cad_g00
06:34:43 175  ,cad_g01
06:34:43 176  ,cad_g02
06:34:43 177  ,cad_g03
06:34:43 178  ,cad_g04
06:34:43 179  ,cad_g05
06:34:43 180  ,cad_g06
06:34:43 181  ,cad_g07
06:34:43 182  ,cad_g08
06:34:43 183  ,cad_g09
06:34:43 184  ,cad_g10
06:34:43 185  ,cad_g11
06:34:43 186  ,cad_g12
06:34:43 187  ,cad_g13
06:34:43 188  ,cad_g14
06:34:43 189  ,cad_g15
06:34:43 190  ,cad_g16
06:34:43 191  ,cad_g17
06:34:43 192  ,cad_g18
06:34:43 193  ,cad_g19
06:34:43 194  ,cad_g20
06:34:43 195  ,cad_g21
06:34:43 196  ,cad_g22
06:34:43 197  ,cad_g23
06:34:43 198  ,cad_g24
06:34:43 199  ,cad_g25
06:34:43 200  ,cad_g26
06:34:43 201  ,cad_g27
06:34:43 202  ,cad_g28
06:34:43 203  ,cad_g29
06:34:43 204  ,cad_g30
06:34:43 205  ,cad_g31
06:34:43 206  ,cad_g32
06:34:43 207  ,cad_g33
06:34:43 208  ,cad_g34
06:34:43 209  ,cad_g35
06:34:43 210  ,cad_g36
06:34:43 211  ,cad_g37
06:34:43 212  ,cad_g38
06:34:43 213  ,cad_g39
06:34:43 214  ,cad_g40
06:34:43 215  ,cad_g41
06:34:43 216  ,chf_g00
06:34:43 217  ,chf_g01
06:34:43 218  ,chf_g02
06:34:43 219  ,chf_g03
06:34:43 220  ,chf_g04
06:34:43 221  ,chf_g05
06:34:43 222  ,chf_g06
06:34:43 223  ,chf_g07
06:34:43 224  ,chf_g08
06:34:43 225  ,chf_g09
06:34:43 226  ,chf_g10
06:34:43 227  ,chf_g11
06:34:43 228  ,chf_g12
06:34:43 229  ,chf_g13
06:34:43 230  ,chf_g14
06:34:43 231  ,chf_g15
06:34:43 232  ,chf_g16
06:34:43 233  ,chf_g17
06:34:43 234  ,chf_g18
06:34:43 235  ,chf_g19
06:34:43 236  ,chf_g20
06:34:43 237  ,chf_g21
06:34:43 238  ,chf_g22
06:34:43 239  ,chf_g23
06:34:43 240  ,chf_g24
06:34:43 241  ,chf_g25
06:34:43 242  ,chf_g26
06:34:43 243  ,chf_g27
06:34:43 244  ,chf_g28
06:34:43 245  ,chf_g29
06:34:43 246  ,chf_g30
06:34:43 247  ,chf_g31
06:34:43 248  ,chf_g32
06:34:43 249  ,chf_g33
06:34:43 250  ,chf_g34
06:34:43 251  ,chf_g35
06:34:43 252  ,chf_g36
06:34:43 253  ,chf_g37
06:34:43 254  ,chf_g38
06:34:43 255  ,chf_g39
06:34:43 256  ,chf_g40
06:34:43 257  ,chf_g41
06:34:43 258  FROM aud_ms6 m
06:34:43 259  WHERE gatt IN('nup','up')
06:34:43 260  AND 1+m.ydate < '&1'||' '||'&2'
06:34:43 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-27'||' '||'06:00:00'

View created.

Elapsed: 00:00:00.12
06:34:43 SQL> 
06:34:43 SQL> -- rpt
06:34:43 SQL> 
06:34:43 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
06:34:43   2  
06:34:43 SQL> SELECT MAX(prdate) FROM bme
06:34:43   2  
06:34:43 SQL> -- Now build model from bme and score sme
06:34:43 SQL> @score1.sql
06:34:43 SQL> -- score1.sql
06:34:43 SQL> 
06:34:43 SQL> -- Does the 1st SVM score
06:34:43 SQL> 
06:34:43 SQL> -- Fill up svmc_apply_prep
06:34:43 SQL> @score.sql
06:34:43 SQL> --
06:34:43 SQL> -- score.sql
06:34:43 SQL> --
06:34:43 SQL> 
06:34:43 SQL> -- usage: score.sql
06:34:43 SQL> 
06:34:43 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:34:43 SQL> 
06:34:43 SQL> DEFINE target	= 'gatt'
06:34:43 SQL> DEFINE model_name = 'forex14'
06:34:43 SQL> DEFINE bldtable	= 'bme'
06:34:43 SQL> DEFINE scoretable = 'sme'
06:34:43 SQL> DEFINE case_id	= 'prdate'
06:34:43 SQL> 
06:34:43 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:34:43 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:34:43 SQL> 
06:34:43 SQL> -- Builds an SVM model using pl/sql.
06:34:43 SQL> 
06:34:43 SQL> -----------------------------------------------------------------------
06:34:43 SQL> --			    BUILD THE MODEL
06:34:43 SQL> -----------------------------------------------------------------------
06:34:43 SQL> 
06:34:43 SQL> -- Cleanup old build data preparation objects for repeat runs
06:34:43 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
06:34:43 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:34:43 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
06:34:43 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
06:34:43 SQL> 
06:34:43 SQL> 
06:34:43 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:34:43 SQL> --
06:34:43 SQL> -- DROP	TABLE svmc_settings ;
06:34:43 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:34:43 SQL> -- DELETE svmc_settings;
06:34:43 SQL> 
06:34:43 SQL> -- The default classification algorithm is Naive Bayes. So override
06:34:43 SQL> -- this choice to SVM using a settings table.
06:34:43 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:34:43 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:34:43 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:34:43 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:34:43 SQL> -- models.
06:34:43 SQL> --
06:34:43 SQL> 
06:34:43 SQL> -- Do this once and then comment it out.
06:34:43 SQL> -- That makes script go faster.
06:34:43 SQL> -- BEGIN
06:34:43 SQL> -- -- Populate settings table
06:34:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:34:43 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:34:43 SQL> --
06:34:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:34:43 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:34:43 SQL> --
06:34:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:34:43 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:34:43 SQL> --   COMMIT;
06:34:43 SQL> -- END;
06:34:43 SQL> -- /
06:34:43 SQL> 
06:34:43 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:34:43 SQL> 
06:34:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:34:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:34:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:34:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:34:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:34:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:34:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:34:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:34:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:34:43 SQL> 
06:34:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:34:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:34:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:34:43 SQL> 
06:34:43 SQL> --------------------------------
06:34:43 SQL> -- PREPARE BUILD (TRAINING) DATA
06:34:43 SQL> --
06:34:43 SQL> 
06:34:43 SQL> -- 1. Missing Value treatment for all Predictors and
06:34:43 SQL> -- 2. Outlier Treatment and
06:34:43 SQL> -- 3. Normalization are performed below.
06:34:43 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:34:43 SQL> --    normalized here.
06:34:43 SQL> 
06:34:43 SQL> BEGIN
06:34:43   2  	-- Perform missing value treatment for all predictors
06:34:43   3  	-- create miss tables
06:34:43   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:34:43   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:34:43   6  
06:34:43   7  	-- populate miss tables
06:34:43   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:34:43   9  	  miss_table_name => 'svmc_miss_num',
06:34:43  10  	  data_table_name => '&bldtable',
06:34:43  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:34:43  12  
06:34:43  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:34:43  14  	  miss_table_name => 'svmc_miss_cat',
06:34:43  15  	  data_table_name => '&bldtable',
06:34:43  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:34:43  17  
06:34:43  18  	-- xform input data to replace missing values
06:34:43  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:34:43  20  	  miss_table_name => 'svmc_miss_num',
06:34:43  21  	  data_table_name => '&bldtable',
06:34:43  22  	  xform_view_name => 'xformed_build_miss_num');
06:34:43  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:34:43  24  	  miss_table_name => 'svmc_miss_cat',
06:34:43  25  	  data_table_name => '&bldtable',
06:34:43  26  	  xform_view_name => 'xformed_build_miss_cat');
06:34:43  27  
06:34:43  28  	-- Perform outlier treatment.
06:34:43  29  	-- create clip table
06:34:43  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:34:43  31  
06:34:43  32  	-- populate clip table
06:34:43  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:34:43  34  	  clip_table_name => 'svmc_clip',
06:34:43  35  	  data_table_name => '&bldtable',
06:34:43  36  	  tail_frac	  => 0.025,
06:34:43  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:34:43  38  
06:34:43  39  	-- xform input data to winsorized data
06:34:43  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:34:43  41  	  clip_table_name => 'svmc_clip',
06:34:43  42  	  data_table_name => '&bldtable',
06:34:43  43  	  xform_view_name => 'svmc_winsor');
06:34:43  44  
06:34:43  45  	-- create normalization table
06:34:43  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:34:43  47  
06:34:43  48  	-- populate normalization table based on winsorized data
06:34:43  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:34:43  50  	  norm_table_name => 'svmc_norm',
06:34:43  51  	  data_table_name => 'svmc_winsor',
06:34:43  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:34:43  53  
06:34:43  54  	-- normalize the original data
06:34:43  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:34:43  56  	  norm_table_name => 'svmc_norm',
06:34:43  57  	  data_table_name => '&bldtable',
06:34:43  58  	  xform_view_name => 'svmc_build_prep');
06:34:43  59  END;
06:34:43  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.30
06:35:00 SQL> 
06:35:00 SQL> ---------------------
06:35:00 SQL> -- CREATE A NEW MODEL
06:35:00 SQL> --
06:35:00 SQL> -- Cleanup old model with the same name for repeat runs
06:35:00 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:35:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:35:00   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.04
06:35:01 SQL> 
06:35:01 SQL> -- Build a new SVM Model
06:35:01 SQL> BEGIN
06:35:01   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:35:01   3  	  model_name	      => '&model_name',
06:35:01   4  	  mining_function     => dbms_data_mining.classification,
06:35:01   5  	  data_table_name     => 'svmc_build_prep',
06:35:01   6  	  case_id_column_name => '&case_id',
06:35:01   7  	  target_column_name  => '&target',
06:35:01   8  	  settings_table_name => 'svmc_settings');
06:35:01   9  END;
06:35:01  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.59
06:35:28 SQL> 
06:35:28 SQL> -----------------------------------------------------------------------
06:35:28 SQL> --			       APPLY/score THE MODEL
06:35:28 SQL> -----------------------------------------------------------------------
06:35:28 SQL> 
06:35:28 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:35:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:35:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:35:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:35:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:35:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:35:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:35:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:35:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:35:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:35:28 SQL> -----------------------
06:35:28 SQL> -- PREPARE SCORING DATA
06:35:28 SQL> --
06:35:28 SQL> -- If the data for model creation has been prepared, then the data
06:35:28 SQL> -- to be scored using the model must be prepared in the same manner
06:35:28 SQL> -- in order to obtain meaningful results.
06:35:28 SQL> --
06:35:28 SQL> -- 1. Missing Value treatment for all Predictors and
06:35:28 SQL> -- 2. Normalization
06:35:28 SQL> -- No outlier treatment will be performed during test and apply. The
06:35:28 SQL> -- normalization step is sufficient, since the normalization parameters
06:35:28 SQL> -- already capture the effects of outlier treatment done with build data.
06:35:28 SQL> --
06:35:28 SQL> BEGIN
06:35:28   2  	-- Xform Test data to replace missing values
06:35:28   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:35:28   4  	  miss_table_name => 'svmc_miss_num',
06:35:28   5  	  data_table_name => '&scoretable',
06:35:28   6  	  xform_view_name => 'xformed_apply_miss_num');
06:35:28   7  
06:35:28   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:35:28   9  	  miss_table_name => 'svmc_miss_cat',
06:35:28  10  	  data_table_name => '&scoretable',
06:35:28  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:35:28  12  
06:35:28  13  	-- Normalize the data to be scored
06:35:28  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:35:28  15  	  norm_table_name => 'svmc_norm',
06:35:28  16  	  data_table_name => '&scoretable',
06:35:28  17  	  xform_view_name => 'svmc_apply_prep');
06:35:28  18  END;
06:35:28  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
06:35:29 SQL> 
06:35:29 SQL> -- Use same model_name used in score.sql
06:35:29 SQL> DEFINE model_name = 'forex14'
06:35:29 SQL> 
06:35:29 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
06:35:29 SQL> 
06:35:29 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
06:35:29 SQL> 
06:35:29 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
06:35:29   2  SELECT
06:35:29   3  prdate
06:35:29   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:35:29   5  ,sysdate
06:35:29   6  ,SUBSTR(prdate,1,3)pair
06:35:29   7  ,SUBSTR(prdate,4,19)ydate
06:35:29   8  FROM svmc_apply_prep
06:35:29   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
06:35:29 SQL> @aud_score1day.sql  2010-12-27 06:05:00
06:35:29 SQL> --
06:35:29 SQL> -- aud_score1day.sql
06:35:29 SQL> --
06:35:29 SQL> 
06:35:29 SQL> CREATE OR REPLACE VIEW sme AS
06:35:29   2  SELECT
06:35:29   3  'aud'||m.ydate prdate
06:35:29   4  ,NULL gatt
06:35:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:35:29   6  ,eur_g00
06:35:29   7  ,eur_g01
06:35:29   8  ,eur_g02
06:35:29   9  ,eur_g03
06:35:29  10  ,eur_g04
06:35:29  11  ,eur_g05
06:35:29  12  ,eur_g06
06:35:29  13  ,eur_g07
06:35:29  14  ,eur_g08
06:35:29  15  ,eur_g09
06:35:29  16  ,eur_g10
06:35:29  17  ,eur_g11
06:35:29  18  ,eur_g12
06:35:29  19  ,eur_g13
06:35:29  20  ,eur_g14
06:35:29  21  ,eur_g15
06:35:29  22  ,eur_g16
06:35:29  23  ,eur_g17
06:35:29  24  ,eur_g18
06:35:29  25  ,eur_g19
06:35:29  26  ,eur_g20
06:35:29  27  ,eur_g21
06:35:29  28  ,eur_g22
06:35:29  29  ,eur_g23
06:35:29  30  ,eur_g24
06:35:29  31  ,eur_g25
06:35:29  32  ,eur_g26
06:35:29  33  ,eur_g27
06:35:29  34  ,eur_g28
06:35:29  35  ,eur_g29
06:35:29  36  ,eur_g30
06:35:29  37  ,eur_g31
06:35:29  38  ,eur_g32
06:35:29  39  ,eur_g33
06:35:29  40  ,eur_g34
06:35:29  41  ,eur_g35
06:35:29  42  ,eur_g36
06:35:29  43  ,eur_g37
06:35:29  44  ,eur_g38
06:35:29  45  ,eur_g39
06:35:29  46  ,eur_g40
06:35:29  47  ,eur_g41
06:35:29  48  ,aud_g00
06:35:29  49  ,aud_g01
06:35:29  50  ,aud_g02
06:35:29  51  ,aud_g03
06:35:29  52  ,aud_g04
06:35:29  53  ,aud_g05
06:35:29  54  ,aud_g06
06:35:29  55  ,aud_g07
06:35:29  56  ,aud_g08
06:35:29  57  ,aud_g09
06:35:29  58  ,aud_g10
06:35:29  59  ,aud_g11
06:35:29  60  ,aud_g12
06:35:29  61  ,aud_g13
06:35:29  62  ,aud_g14
06:35:29  63  ,aud_g15
06:35:29  64  ,aud_g16
06:35:29  65  ,aud_g17
06:35:29  66  ,aud_g18
06:35:29  67  ,aud_g19
06:35:29  68  ,aud_g20
06:35:29  69  ,aud_g21
06:35:29  70  ,aud_g22
06:35:29  71  ,aud_g23
06:35:29  72  ,aud_g24
06:35:29  73  ,aud_g25
06:35:29  74  ,aud_g26
06:35:29  75  ,aud_g27
06:35:29  76  ,aud_g28
06:35:29  77  ,aud_g29
06:35:29  78  ,aud_g30
06:35:29  79  ,aud_g31
06:35:29  80  ,aud_g32
06:35:29  81  ,aud_g33
06:35:29  82  ,aud_g34
06:35:29  83  ,aud_g35
06:35:29  84  ,aud_g36
06:35:29  85  ,aud_g37
06:35:29  86  ,aud_g38
06:35:29  87  ,aud_g39
06:35:29  88  ,aud_g40
06:35:29  89  ,aud_g41
06:35:29  90  ,gbp_g00
06:35:29  91  ,gbp_g01
06:35:29  92  ,gbp_g02
06:35:29  93  ,gbp_g03
06:35:29  94  ,gbp_g04
06:35:29  95  ,gbp_g05
06:35:29  96  ,gbp_g06
06:35:29  97  ,gbp_g07
06:35:29  98  ,gbp_g08
06:35:29  99  ,gbp_g09
06:35:29 100  ,gbp_g10
06:35:29 101  ,gbp_g11
06:35:29 102  ,gbp_g12
06:35:29 103  ,gbp_g13
06:35:29 104  ,gbp_g14
06:35:29 105  ,gbp_g15
06:35:29 106  ,gbp_g16
06:35:29 107  ,gbp_g17
06:35:29 108  ,gbp_g18
06:35:29 109  ,gbp_g19
06:35:29 110  ,gbp_g20
06:35:29 111  ,gbp_g21
06:35:29 112  ,gbp_g22
06:35:29 113  ,gbp_g23
06:35:29 114  ,gbp_g24
06:35:29 115  ,gbp_g25
06:35:29 116  ,gbp_g26
06:35:29 117  ,gbp_g27
06:35:29 118  ,gbp_g28
06:35:29 119  ,gbp_g29
06:35:29 120  ,gbp_g30
06:35:29 121  ,gbp_g31
06:35:29 122  ,gbp_g32
06:35:29 123  ,gbp_g33
06:35:29 124  ,gbp_g34
06:35:29 125  ,gbp_g35
06:35:29 126  ,gbp_g36
06:35:29 127  ,gbp_g37
06:35:29 128  ,gbp_g38
06:35:29 129  ,gbp_g39
06:35:29 130  ,gbp_g40
06:35:29 131  ,gbp_g41
06:35:29 132  ,jpy_g00
06:35:29 133  ,jpy_g01
06:35:29 134  ,jpy_g02
06:35:29 135  ,jpy_g03
06:35:29 136  ,jpy_g04
06:35:29 137  ,jpy_g05
06:35:29 138  ,jpy_g06
06:35:29 139  ,jpy_g07
06:35:29 140  ,jpy_g08
06:35:29 141  ,jpy_g09
06:35:29 142  ,jpy_g10
06:35:29 143  ,jpy_g11
06:35:29 144  ,jpy_g12
06:35:29 145  ,jpy_g13
06:35:29 146  ,jpy_g14
06:35:29 147  ,jpy_g15
06:35:29 148  ,jpy_g16
06:35:29 149  ,jpy_g17
06:35:29 150  ,jpy_g18
06:35:29 151  ,jpy_g19
06:35:29 152  ,jpy_g20
06:35:29 153  ,jpy_g21
06:35:29 154  ,jpy_g22
06:35:29 155  ,jpy_g23
06:35:29 156  ,jpy_g24
06:35:29 157  ,jpy_g25
06:35:29 158  ,jpy_g26
06:35:29 159  ,jpy_g27
06:35:29 160  ,jpy_g28
06:35:29 161  ,jpy_g29
06:35:29 162  ,jpy_g30
06:35:29 163  ,jpy_g31
06:35:29 164  ,jpy_g32
06:35:29 165  ,jpy_g33
06:35:29 166  ,jpy_g34
06:35:29 167  ,jpy_g35
06:35:29 168  ,jpy_g36
06:35:29 169  ,jpy_g37
06:35:29 170  ,jpy_g38
06:35:29 171  ,jpy_g39
06:35:29 172  ,jpy_g40
06:35:29 173  ,jpy_g41
06:35:29 174  ,cad_g00
06:35:29 175  ,cad_g01
06:35:29 176  ,cad_g02
06:35:29 177  ,cad_g03
06:35:29 178  ,cad_g04
06:35:29 179  ,cad_g05
06:35:29 180  ,cad_g06
06:35:29 181  ,cad_g07
06:35:29 182  ,cad_g08
06:35:29 183  ,cad_g09
06:35:29 184  ,cad_g10
06:35:29 185  ,cad_g11
06:35:29 186  ,cad_g12
06:35:29 187  ,cad_g13
06:35:29 188  ,cad_g14
06:35:29 189  ,cad_g15
06:35:29 190  ,cad_g16
06:35:29 191  ,cad_g17
06:35:29 192  ,cad_g18
06:35:29 193  ,cad_g19
06:35:29 194  ,cad_g20
06:35:29 195  ,cad_g21
06:35:29 196  ,cad_g22
06:35:29 197  ,cad_g23
06:35:29 198  ,cad_g24
06:35:29 199  ,cad_g25
06:35:29 200  ,cad_g26
06:35:29 201  ,cad_g27
06:35:29 202  ,cad_g28
06:35:29 203  ,cad_g29
06:35:29 204  ,cad_g30
06:35:29 205  ,cad_g31
06:35:29 206  ,cad_g32
06:35:29 207  ,cad_g33
06:35:29 208  ,cad_g34
06:35:29 209  ,cad_g35
06:35:29 210  ,cad_g36
06:35:29 211  ,cad_g37
06:35:29 212  ,cad_g38
06:35:29 213  ,cad_g39
06:35:29 214  ,cad_g40
06:35:29 215  ,cad_g41
06:35:29 216  ,chf_g00
06:35:29 217  ,chf_g01
06:35:29 218  ,chf_g02
06:35:29 219  ,chf_g03
06:35:29 220  ,chf_g04
06:35:29 221  ,chf_g05
06:35:29 222  ,chf_g06
06:35:29 223  ,chf_g07
06:35:29 224  ,chf_g08
06:35:29 225  ,chf_g09
06:35:29 226  ,chf_g10
06:35:29 227  ,chf_g11
06:35:29 228  ,chf_g12
06:35:29 229  ,chf_g13
06:35:29 230  ,chf_g14
06:35:29 231  ,chf_g15
06:35:29 232  ,chf_g16
06:35:29 233  ,chf_g17
06:35:29 234  ,chf_g18
06:35:29 235  ,chf_g19
06:35:29 236  ,chf_g20
06:35:29 237  ,chf_g21
06:35:29 238  ,chf_g22
06:35:29 239  ,chf_g23
06:35:29 240  ,chf_g24
06:35:29 241  ,chf_g25
06:35:29 242  ,chf_g26
06:35:29 243  ,chf_g27
06:35:29 244  ,chf_g28
06:35:29 245  ,chf_g29
06:35:29 246  ,chf_g30
06:35:29 247  ,chf_g31
06:35:29 248  ,chf_g32
06:35:29 249  ,chf_g33
06:35:29 250  ,chf_g34
06:35:29 251  ,chf_g35
06:35:29 252  ,chf_g36
06:35:29 253  ,chf_g37
06:35:29 254  ,chf_g38
06:35:29 255  ,chf_g39
06:35:29 256  ,chf_g40
06:35:29 257  ,chf_g41
06:35:29 258  FROM aud_ms6 m
06:35:29 259  WHERE m.ydate = '&1'||' '||'&2'
06:35:29 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-27'||' '||'06:05:00'

View created.

Elapsed: 00:00:00.13
06:35:30 SQL> 
06:35:30 SQL> -- rpt
06:35:30 SQL> -- We should see just 1 row:
06:35:30 SQL> 
06:35:30 SQL> SELECT COUNT(prdate) FROM sme
06:35:30   2  
06:35:30 SQL> -- Build the model:
06:35:30 SQL> CREATE OR REPLACE VIEW bme AS
06:35:30   2  SELECT
06:35:30   3  'aud'||m.ydate prdate
06:35:30   4  ,gatt
06:35:30   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:35:30   6  ,eur_g00
06:35:30   7  ,eur_g01
06:35:30   8  ,eur_g02
06:35:30   9  ,eur_g03
06:35:30  10  ,eur_g04
06:35:30  11  ,eur_g05
06:35:30  12  ,eur_g06
06:35:30  13  ,eur_g07
06:35:30  14  ,eur_g08
06:35:30  15  ,eur_g09
06:35:30  16  ,eur_g10
06:35:30  17  ,eur_g11
06:35:30  18  ,eur_g12
06:35:30  19  ,eur_g13
06:35:30  20  ,eur_g14
06:35:30  21  ,eur_g15
06:35:30  22  ,eur_g16
06:35:30  23  ,eur_g17
06:35:30  24  ,eur_g18
06:35:30  25  ,eur_g19
06:35:30  26  ,eur_g20
06:35:30  27  ,eur_g21
06:35:30  28  ,eur_g22
06:35:30  29  ,eur_g23
06:35:30  30  ,eur_g24
06:35:30  31  ,eur_g25
06:35:30  32  ,eur_g26
06:35:30  33  ,eur_g27
06:35:30  34  ,eur_g28
06:35:30  35  ,eur_g29
06:35:30  36  ,eur_g30
06:35:30  37  ,eur_g31
06:35:30  38  ,eur_g32
06:35:30  39  ,eur_g33
06:35:30  40  ,eur_g34
06:35:30  41  ,eur_g35
06:35:30  42  ,eur_g36
06:35:30  43  ,eur_g37
06:35:30  44  ,eur_g38
06:35:30  45  ,eur_g39
06:35:30  46  ,eur_g40
06:35:30  47  ,eur_g41
06:35:30  48  ,aud_g00
06:35:30  49  ,aud_g01
06:35:30  50  ,aud_g02
06:35:30  51  ,aud_g03
06:35:30  52  ,aud_g04
06:35:30  53  ,aud_g05
06:35:30  54  ,aud_g06
06:35:30  55  ,aud_g07
06:35:30  56  ,aud_g08
06:35:30  57  ,aud_g09
06:35:30  58  ,aud_g10
06:35:30  59  ,aud_g11
06:35:30  60  ,aud_g12
06:35:30  61  ,aud_g13
06:35:30  62  ,aud_g14
06:35:30  63  ,aud_g15
06:35:30  64  ,aud_g16
06:35:30  65  ,aud_g17
06:35:30  66  ,aud_g18
06:35:30  67  ,aud_g19
06:35:30  68  ,aud_g20
06:35:30  69  ,aud_g21
06:35:30  70  ,aud_g22
06:35:30  71  ,aud_g23
06:35:30  72  ,aud_g24
06:35:30  73  ,aud_g25
06:35:30  74  ,aud_g26
06:35:30  75  ,aud_g27
06:35:30  76  ,aud_g28
06:35:30  77  ,aud_g29
06:35:30  78  ,aud_g30
06:35:30  79  ,aud_g31
06:35:30  80  ,aud_g32
06:35:30  81  ,aud_g33
06:35:30  82  ,aud_g34
06:35:30  83  ,aud_g35
06:35:30  84  ,aud_g36
06:35:30  85  ,aud_g37
06:35:30  86  ,aud_g38
06:35:30  87  ,aud_g39
06:35:30  88  ,aud_g40
06:35:30  89  ,aud_g41
06:35:30  90  ,gbp_g00
06:35:30  91  ,gbp_g01
06:35:30  92  ,gbp_g02
06:35:30  93  ,gbp_g03
06:35:30  94  ,gbp_g04
06:35:30  95  ,gbp_g05
06:35:30  96  ,gbp_g06
06:35:30  97  ,gbp_g07
06:35:30  98  ,gbp_g08
06:35:30  99  ,gbp_g09
06:35:30 100  ,gbp_g10
06:35:30 101  ,gbp_g11
06:35:30 102  ,gbp_g12
06:35:30 103  ,gbp_g13
06:35:30 104  ,gbp_g14
06:35:30 105  ,gbp_g15
06:35:30 106  ,gbp_g16
06:35:30 107  ,gbp_g17
06:35:30 108  ,gbp_g18
06:35:30 109  ,gbp_g19
06:35:30 110  ,gbp_g20
06:35:30 111  ,gbp_g21
06:35:30 112  ,gbp_g22
06:35:30 113  ,gbp_g23
06:35:30 114  ,gbp_g24
06:35:30 115  ,gbp_g25
06:35:30 116  ,gbp_g26
06:35:30 117  ,gbp_g27
06:35:30 118  ,gbp_g28
06:35:30 119  ,gbp_g29
06:35:30 120  ,gbp_g30
06:35:30 121  ,gbp_g31
06:35:30 122  ,gbp_g32
06:35:30 123  ,gbp_g33
06:35:30 124  ,gbp_g34
06:35:30 125  ,gbp_g35
06:35:30 126  ,gbp_g36
06:35:30 127  ,gbp_g37
06:35:30 128  ,gbp_g38
06:35:30 129  ,gbp_g39
06:35:30 130  ,gbp_g40
06:35:30 131  ,gbp_g41
06:35:30 132  ,jpy_g00
06:35:30 133  ,jpy_g01
06:35:30 134  ,jpy_g02
06:35:30 135  ,jpy_g03
06:35:30 136  ,jpy_g04
06:35:30 137  ,jpy_g05
06:35:30 138  ,jpy_g06
06:35:30 139  ,jpy_g07
06:35:30 140  ,jpy_g08
06:35:30 141  ,jpy_g09
06:35:30 142  ,jpy_g10
06:35:30 143  ,jpy_g11
06:35:30 144  ,jpy_g12
06:35:30 145  ,jpy_g13
06:35:30 146  ,jpy_g14
06:35:30 147  ,jpy_g15
06:35:30 148  ,jpy_g16
06:35:30 149  ,jpy_g17
06:35:30 150  ,jpy_g18
06:35:30 151  ,jpy_g19
06:35:30 152  ,jpy_g20
06:35:30 153  ,jpy_g21
06:35:30 154  ,jpy_g22
06:35:30 155  ,jpy_g23
06:35:30 156  ,jpy_g24
06:35:30 157  ,jpy_g25
06:35:30 158  ,jpy_g26
06:35:30 159  ,jpy_g27
06:35:30 160  ,jpy_g28
06:35:30 161  ,jpy_g29
06:35:30 162  ,jpy_g30
06:35:30 163  ,jpy_g31
06:35:30 164  ,jpy_g32
06:35:30 165  ,jpy_g33
06:35:30 166  ,jpy_g34
06:35:30 167  ,jpy_g35
06:35:30 168  ,jpy_g36
06:35:30 169  ,jpy_g37
06:35:30 170  ,jpy_g38
06:35:30 171  ,jpy_g39
06:35:30 172  ,jpy_g40
06:35:30 173  ,jpy_g41
06:35:30 174  ,cad_g00
06:35:30 175  ,cad_g01
06:35:30 176  ,cad_g02
06:35:30 177  ,cad_g03
06:35:30 178  ,cad_g04
06:35:30 179  ,cad_g05
06:35:30 180  ,cad_g06
06:35:30 181  ,cad_g07
06:35:30 182  ,cad_g08
06:35:30 183  ,cad_g09
06:35:30 184  ,cad_g10
06:35:30 185  ,cad_g11
06:35:30 186  ,cad_g12
06:35:30 187  ,cad_g13
06:35:30 188  ,cad_g14
06:35:30 189  ,cad_g15
06:35:30 190  ,cad_g16
06:35:30 191  ,cad_g17
06:35:30 192  ,cad_g18
06:35:30 193  ,cad_g19
06:35:30 194  ,cad_g20
06:35:30 195  ,cad_g21
06:35:30 196  ,cad_g22
06:35:30 197  ,cad_g23
06:35:30 198  ,cad_g24
06:35:30 199  ,cad_g25
06:35:30 200  ,cad_g26
06:35:30 201  ,cad_g27
06:35:30 202  ,cad_g28
06:35:30 203  ,cad_g29
06:35:30 204  ,cad_g30
06:35:30 205  ,cad_g31
06:35:30 206  ,cad_g32
06:35:30 207  ,cad_g33
06:35:30 208  ,cad_g34
06:35:30 209  ,cad_g35
06:35:30 210  ,cad_g36
06:35:30 211  ,cad_g37
06:35:30 212  ,cad_g38
06:35:30 213  ,cad_g39
06:35:30 214  ,cad_g40
06:35:30 215  ,cad_g41
06:35:30 216  ,chf_g00
06:35:30 217  ,chf_g01
06:35:30 218  ,chf_g02
06:35:30 219  ,chf_g03
06:35:30 220  ,chf_g04
06:35:30 221  ,chf_g05
06:35:30 222  ,chf_g06
06:35:30 223  ,chf_g07
06:35:30 224  ,chf_g08
06:35:30 225  ,chf_g09
06:35:30 226  ,chf_g10
06:35:30 227  ,chf_g11
06:35:30 228  ,chf_g12
06:35:30 229  ,chf_g13
06:35:30 230  ,chf_g14
06:35:30 231  ,chf_g15
06:35:30 232  ,chf_g16
06:35:30 233  ,chf_g17
06:35:30 234  ,chf_g18
06:35:30 235  ,chf_g19
06:35:30 236  ,chf_g20
06:35:30 237  ,chf_g21
06:35:30 238  ,chf_g22
06:35:30 239  ,chf_g23
06:35:30 240  ,chf_g24
06:35:30 241  ,chf_g25
06:35:30 242  ,chf_g26
06:35:30 243  ,chf_g27
06:35:30 244  ,chf_g28
06:35:30 245  ,chf_g29
06:35:30 246  ,chf_g30
06:35:30 247  ,chf_g31
06:35:30 248  ,chf_g32
06:35:30 249  ,chf_g33
06:35:30 250  ,chf_g34
06:35:30 251  ,chf_g35
06:35:30 252  ,chf_g36
06:35:30 253  ,chf_g37
06:35:30 254  ,chf_g38
06:35:30 255  ,chf_g39
06:35:30 256  ,chf_g40
06:35:30 257  ,chf_g41
06:35:30 258  FROM aud_ms6 m
06:35:30 259  WHERE gatt IN('nup','up')
06:35:30 260  AND 1+m.ydate < '&1'||' '||'&2'
06:35:30 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-27'||' '||'06:05:00'

View created.

Elapsed: 00:00:00.16
06:35:30 SQL> 
06:35:30 SQL> -- rpt
06:35:30 SQL> 
06:35:30 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
06:35:30   2  
06:35:30 SQL> SELECT MAX(prdate) FROM bme
06:35:30   2  
06:35:30 SQL> -- Now build model from bme and score sme
06:35:30 SQL> @score1.sql
06:35:30 SQL> -- score1.sql
06:35:30 SQL> 
06:35:30 SQL> -- Does the 1st SVM score
06:35:30 SQL> 
06:35:30 SQL> -- Fill up svmc_apply_prep
06:35:30 SQL> @score.sql
06:35:30 SQL> --
06:35:30 SQL> -- score.sql
06:35:30 SQL> --
06:35:30 SQL> 
06:35:30 SQL> -- usage: score.sql
06:35:30 SQL> 
06:35:30 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:35:30 SQL> 
06:35:30 SQL> DEFINE target	= 'gatt'
06:35:30 SQL> DEFINE model_name = 'forex14'
06:35:30 SQL> DEFINE bldtable	= 'bme'
06:35:30 SQL> DEFINE scoretable = 'sme'
06:35:30 SQL> DEFINE case_id	= 'prdate'
06:35:30 SQL> 
06:35:30 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:35:30 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:35:30 SQL> 
06:35:30 SQL> -- Builds an SVM model using pl/sql.
06:35:30 SQL> 
06:35:30 SQL> -----------------------------------------------------------------------
06:35:30 SQL> --			    BUILD THE MODEL
06:35:30 SQL> -----------------------------------------------------------------------
06:35:30 SQL> 
06:35:30 SQL> -- Cleanup old build data preparation objects for repeat runs
06:35:30 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
06:35:30 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:35:30 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
06:35:30 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
06:35:30 SQL> 
06:35:30 SQL> 
06:35:30 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:35:30 SQL> --
06:35:30 SQL> -- DROP	TABLE svmc_settings ;
06:35:30 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:35:30 SQL> -- DELETE svmc_settings;
06:35:30 SQL> 
06:35:30 SQL> -- The default classification algorithm is Naive Bayes. So override
06:35:30 SQL> -- this choice to SVM using a settings table.
06:35:30 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:35:30 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:35:30 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:35:30 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:35:30 SQL> -- models.
06:35:30 SQL> --
06:35:30 SQL> 
06:35:30 SQL> -- Do this once and then comment it out.
06:35:30 SQL> -- That makes script go faster.
06:35:30 SQL> -- BEGIN
06:35:30 SQL> -- -- Populate settings table
06:35:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:35:30 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:35:30 SQL> --
06:35:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:35:30 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:35:30 SQL> --
06:35:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:35:30 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:35:30 SQL> --   COMMIT;
06:35:30 SQL> -- END;
06:35:30 SQL> -- /
06:35:30 SQL> 
06:35:30 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:35:30 SQL> 
06:35:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:35:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:35:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:35:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:35:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:35:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:35:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:35:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:35:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.19
06:35:30 SQL> 
06:35:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:35:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:35:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:35:30 SQL> 
06:35:30 SQL> --------------------------------
06:35:30 SQL> -- PREPARE BUILD (TRAINING) DATA
06:35:30 SQL> --
06:35:30 SQL> 
06:35:30 SQL> -- 1. Missing Value treatment for all Predictors and
06:35:30 SQL> -- 2. Outlier Treatment and
06:35:30 SQL> -- 3. Normalization are performed below.
06:35:30 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:35:30 SQL> --    normalized here.
06:35:30 SQL> 
06:35:30 SQL> BEGIN
06:35:30   2  	-- Perform missing value treatment for all predictors
06:35:30   3  	-- create miss tables
06:35:30   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:35:30   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:35:30   6  
06:35:30   7  	-- populate miss tables
06:35:30   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:35:30   9  	  miss_table_name => 'svmc_miss_num',
06:35:30  10  	  data_table_name => '&bldtable',
06:35:30  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:35:30  12  
06:35:30  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:35:30  14  	  miss_table_name => 'svmc_miss_cat',
06:35:30  15  	  data_table_name => '&bldtable',
06:35:30  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:35:30  17  
06:35:30  18  	-- xform input data to replace missing values
06:35:30  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:35:30  20  	  miss_table_name => 'svmc_miss_num',
06:35:30  21  	  data_table_name => '&bldtable',
06:35:30  22  	  xform_view_name => 'xformed_build_miss_num');
06:35:30  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:35:30  24  	  miss_table_name => 'svmc_miss_cat',
06:35:30  25  	  data_table_name => '&bldtable',
06:35:30  26  	  xform_view_name => 'xformed_build_miss_cat');
06:35:30  27  
06:35:30  28  	-- Perform outlier treatment.
06:35:30  29  	-- create clip table
06:35:30  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:35:30  31  
06:35:30  32  	-- populate clip table
06:35:30  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:35:30  34  	  clip_table_name => 'svmc_clip',
06:35:30  35  	  data_table_name => '&bldtable',
06:35:30  36  	  tail_frac	  => 0.025,
06:35:30  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:35:30  38  
06:35:30  39  	-- xform input data to winsorized data
06:35:30  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:35:30  41  	  clip_table_name => 'svmc_clip',
06:35:30  42  	  data_table_name => '&bldtable',
06:35:30  43  	  xform_view_name => 'svmc_winsor');
06:35:30  44  
06:35:30  45  	-- create normalization table
06:35:30  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:35:30  47  
06:35:30  48  	-- populate normalization table based on winsorized data
06:35:30  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:35:30  50  	  norm_table_name => 'svmc_norm',
06:35:30  51  	  data_table_name => 'svmc_winsor',
06:35:30  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:35:30  53  
06:35:30  54  	-- normalize the original data
06:35:30  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:35:30  56  	  norm_table_name => 'svmc_norm',
06:35:30  57  	  data_table_name => '&bldtable',
06:35:30  58  	  xform_view_name => 'svmc_build_prep');
06:35:30  59  END;
06:35:30  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.14
06:35:47 SQL> 
06:35:47 SQL> ---------------------
06:35:47 SQL> -- CREATE A NEW MODEL
06:35:47 SQL> --
06:35:47 SQL> -- Cleanup old model with the same name for repeat runs
06:35:47 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:35:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:35:47   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.05
06:35:48 SQL> 
06:35:48 SQL> -- Build a new SVM Model
06:35:48 SQL> BEGIN
06:35:48   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:35:48   3  	  model_name	      => '&model_name',
06:35:48   4  	  mining_function     => dbms_data_mining.classification,
06:35:48   5  	  data_table_name     => 'svmc_build_prep',
06:35:48   6  	  case_id_column_name => '&case_id',
06:35:48   7  	  target_column_name  => '&target',
06:35:48   8  	  settings_table_name => 'svmc_settings');
06:35:48   9  END;
06:35:48  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.90
06:36:16 SQL> 
06:36:16 SQL> -----------------------------------------------------------------------
06:36:16 SQL> --			       APPLY/score THE MODEL
06:36:16 SQL> -----------------------------------------------------------------------
06:36:16 SQL> 
06:36:16 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:36:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:36:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:36:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:36:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:36:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:36:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:36:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:36:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:36:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:36:16 SQL> -----------------------
06:36:16 SQL> -- PREPARE SCORING DATA
06:36:16 SQL> --
06:36:16 SQL> -- If the data for model creation has been prepared, then the data
06:36:16 SQL> -- to be scored using the model must be prepared in the same manner
06:36:16 SQL> -- in order to obtain meaningful results.
06:36:16 SQL> --
06:36:16 SQL> -- 1. Missing Value treatment for all Predictors and
06:36:16 SQL> -- 2. Normalization
06:36:16 SQL> -- No outlier treatment will be performed during test and apply. The
06:36:16 SQL> -- normalization step is sufficient, since the normalization parameters
06:36:16 SQL> -- already capture the effects of outlier treatment done with build data.
06:36:16 SQL> --
06:36:16 SQL> BEGIN
06:36:16   2  	-- Xform Test data to replace missing values
06:36:16   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:36:16   4  	  miss_table_name => 'svmc_miss_num',
06:36:16   5  	  data_table_name => '&scoretable',
06:36:16   6  	  xform_view_name => 'xformed_apply_miss_num');
06:36:16   7  
06:36:16   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:36:16   9  	  miss_table_name => 'svmc_miss_cat',
06:36:16  10  	  data_table_name => '&scoretable',
06:36:16  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:36:16  12  
06:36:16  13  	-- Normalize the data to be scored
06:36:16  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:36:16  15  	  norm_table_name => 'svmc_norm',
06:36:16  16  	  data_table_name => '&scoretable',
06:36:16  17  	  xform_view_name => 'svmc_apply_prep');
06:36:16  18  END;
06:36:16  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.24
06:36:18 SQL> 
06:36:18 SQL> -- Use same model_name used in score.sql
06:36:18 SQL> DEFINE model_name = 'forex14'
06:36:18 SQL> 
06:36:18 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
06:36:18 SQL> 
06:36:18 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
06:36:18 SQL> 
06:36:18 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
06:36:18   2  SELECT
06:36:18   3  prdate
06:36:18   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:36:18   5  ,sysdate
06:36:18   6  ,SUBSTR(prdate,1,3)pair
06:36:18   7  ,SUBSTR(prdate,4,19)ydate
06:36:18   8  FROM svmc_apply_prep
06:36:18   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
06:36:18 SQL> @aud_score1day.sql  2010-12-27 06:20:00
06:36:18 SQL> --
06:36:18 SQL> -- aud_score1day.sql
06:36:18 SQL> --
06:36:18 SQL> 
06:36:18 SQL> CREATE OR REPLACE VIEW sme AS
06:36:18   2  SELECT
06:36:18   3  'aud'||m.ydate prdate
06:36:18   4  ,NULL gatt
06:36:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:36:18   6  ,eur_g00
06:36:18   7  ,eur_g01
06:36:18   8  ,eur_g02
06:36:18   9  ,eur_g03
06:36:18  10  ,eur_g04
06:36:18  11  ,eur_g05
06:36:18  12  ,eur_g06
06:36:18  13  ,eur_g07
06:36:18  14  ,eur_g08
06:36:18  15  ,eur_g09
06:36:18  16  ,eur_g10
06:36:18  17  ,eur_g11
06:36:18  18  ,eur_g12
06:36:18  19  ,eur_g13
06:36:18  20  ,eur_g14
06:36:18  21  ,eur_g15
06:36:18  22  ,eur_g16
06:36:18  23  ,eur_g17
06:36:18  24  ,eur_g18
06:36:18  25  ,eur_g19
06:36:18  26  ,eur_g20
06:36:18  27  ,eur_g21
06:36:18  28  ,eur_g22
06:36:18  29  ,eur_g23
06:36:18  30  ,eur_g24
06:36:18  31  ,eur_g25
06:36:18  32  ,eur_g26
06:36:18  33  ,eur_g27
06:36:18  34  ,eur_g28
06:36:18  35  ,eur_g29
06:36:18  36  ,eur_g30
06:36:18  37  ,eur_g31
06:36:18  38  ,eur_g32
06:36:18  39  ,eur_g33
06:36:18  40  ,eur_g34
06:36:18  41  ,eur_g35
06:36:18  42  ,eur_g36
06:36:18  43  ,eur_g37
06:36:18  44  ,eur_g38
06:36:18  45  ,eur_g39
06:36:18  46  ,eur_g40
06:36:18  47  ,eur_g41
06:36:18  48  ,aud_g00
06:36:18  49  ,aud_g01
06:36:18  50  ,aud_g02
06:36:18  51  ,aud_g03
06:36:18  52  ,aud_g04
06:36:18  53  ,aud_g05
06:36:18  54  ,aud_g06
06:36:18  55  ,aud_g07
06:36:18  56  ,aud_g08
06:36:18  57  ,aud_g09
06:36:18  58  ,aud_g10
06:36:18  59  ,aud_g11
06:36:18  60  ,aud_g12
06:36:18  61  ,aud_g13
06:36:18  62  ,aud_g14
06:36:18  63  ,aud_g15
06:36:18  64  ,aud_g16
06:36:18  65  ,aud_g17
06:36:18  66  ,aud_g18
06:36:18  67  ,aud_g19
06:36:18  68  ,aud_g20
06:36:18  69  ,aud_g21
06:36:18  70  ,aud_g22
06:36:18  71  ,aud_g23
06:36:18  72  ,aud_g24
06:36:18  73  ,aud_g25
06:36:18  74  ,aud_g26
06:36:18  75  ,aud_g27
06:36:18  76  ,aud_g28
06:36:18  77  ,aud_g29
06:36:18  78  ,aud_g30
06:36:18  79  ,aud_g31
06:36:18  80  ,aud_g32
06:36:18  81  ,aud_g33
06:36:18  82  ,aud_g34
06:36:18  83  ,aud_g35
06:36:18  84  ,aud_g36
06:36:18  85  ,aud_g37
06:36:18  86  ,aud_g38
06:36:18  87  ,aud_g39
06:36:18  88  ,aud_g40
06:36:18  89  ,aud_g41
06:36:18  90  ,gbp_g00
06:36:18  91  ,gbp_g01
06:36:18  92  ,gbp_g02
06:36:18  93  ,gbp_g03
06:36:18  94  ,gbp_g04
06:36:18  95  ,gbp_g05
06:36:18  96  ,gbp_g06
06:36:18  97  ,gbp_g07
06:36:18  98  ,gbp_g08
06:36:18  99  ,gbp_g09
06:36:18 100  ,gbp_g10
06:36:18 101  ,gbp_g11
06:36:18 102  ,gbp_g12
06:36:18 103  ,gbp_g13
06:36:18 104  ,gbp_g14
06:36:18 105  ,gbp_g15
06:36:18 106  ,gbp_g16
06:36:18 107  ,gbp_g17
06:36:18 108  ,gbp_g18
06:36:18 109  ,gbp_g19
06:36:18 110  ,gbp_g20
06:36:18 111  ,gbp_g21
06:36:18 112  ,gbp_g22
06:36:18 113  ,gbp_g23
06:36:18 114  ,gbp_g24
06:36:18 115  ,gbp_g25
06:36:18 116  ,gbp_g26
06:36:18 117  ,gbp_g27
06:36:18 118  ,gbp_g28
06:36:18 119  ,gbp_g29
06:36:18 120  ,gbp_g30
06:36:18 121  ,gbp_g31
06:36:18 122  ,gbp_g32
06:36:18 123  ,gbp_g33
06:36:18 124  ,gbp_g34
06:36:18 125  ,gbp_g35
06:36:18 126  ,gbp_g36
06:36:18 127  ,gbp_g37
06:36:18 128  ,gbp_g38
06:36:18 129  ,gbp_g39
06:36:18 130  ,gbp_g40
06:36:18 131  ,gbp_g41
06:36:18 132  ,jpy_g00
06:36:18 133  ,jpy_g01
06:36:18 134  ,jpy_g02
06:36:18 135  ,jpy_g03
06:36:18 136  ,jpy_g04
06:36:18 137  ,jpy_g05
06:36:18 138  ,jpy_g06
06:36:18 139  ,jpy_g07
06:36:18 140  ,jpy_g08
06:36:18 141  ,jpy_g09
06:36:18 142  ,jpy_g10
06:36:18 143  ,jpy_g11
06:36:18 144  ,jpy_g12
06:36:18 145  ,jpy_g13
06:36:18 146  ,jpy_g14
06:36:18 147  ,jpy_g15
06:36:18 148  ,jpy_g16
06:36:18 149  ,jpy_g17
06:36:18 150  ,jpy_g18
06:36:18 151  ,jpy_g19
06:36:18 152  ,jpy_g20
06:36:18 153  ,jpy_g21
06:36:18 154  ,jpy_g22
06:36:18 155  ,jpy_g23
06:36:18 156  ,jpy_g24
06:36:18 157  ,jpy_g25
06:36:18 158  ,jpy_g26
06:36:18 159  ,jpy_g27
06:36:18 160  ,jpy_g28
06:36:18 161  ,jpy_g29
06:36:18 162  ,jpy_g30
06:36:18 163  ,jpy_g31
06:36:18 164  ,jpy_g32
06:36:18 165  ,jpy_g33
06:36:18 166  ,jpy_g34
06:36:18 167  ,jpy_g35
06:36:18 168  ,jpy_g36
06:36:18 169  ,jpy_g37
06:36:18 170  ,jpy_g38
06:36:18 171  ,jpy_g39
06:36:18 172  ,jpy_g40
06:36:18 173  ,jpy_g41
06:36:18 174  ,cad_g00
06:36:18 175  ,cad_g01
06:36:18 176  ,cad_g02
06:36:18 177  ,cad_g03
06:36:18 178  ,cad_g04
06:36:18 179  ,cad_g05
06:36:18 180  ,cad_g06
06:36:18 181  ,cad_g07
06:36:18 182  ,cad_g08
06:36:18 183  ,cad_g09
06:36:18 184  ,cad_g10
06:36:18 185  ,cad_g11
06:36:18 186  ,cad_g12
06:36:18 187  ,cad_g13
06:36:18 188  ,cad_g14
06:36:18 189  ,cad_g15
06:36:18 190  ,cad_g16
06:36:18 191  ,cad_g17
06:36:18 192  ,cad_g18
06:36:18 193  ,cad_g19
06:36:18 194  ,cad_g20
06:36:18 195  ,cad_g21
06:36:18 196  ,cad_g22
06:36:18 197  ,cad_g23
06:36:18 198  ,cad_g24
06:36:18 199  ,cad_g25
06:36:18 200  ,cad_g26
06:36:18 201  ,cad_g27
06:36:18 202  ,cad_g28
06:36:18 203  ,cad_g29
06:36:18 204  ,cad_g30
06:36:18 205  ,cad_g31
06:36:18 206  ,cad_g32
06:36:18 207  ,cad_g33
06:36:18 208  ,cad_g34
06:36:18 209  ,cad_g35
06:36:18 210  ,cad_g36
06:36:18 211  ,cad_g37
06:36:18 212  ,cad_g38
06:36:18 213  ,cad_g39
06:36:18 214  ,cad_g40
06:36:18 215  ,cad_g41
06:36:18 216  ,chf_g00
06:36:18 217  ,chf_g01
06:36:18 218  ,chf_g02
06:36:18 219  ,chf_g03
06:36:18 220  ,chf_g04
06:36:18 221  ,chf_g05
06:36:18 222  ,chf_g06
06:36:18 223  ,chf_g07
06:36:18 224  ,chf_g08
06:36:18 225  ,chf_g09
06:36:18 226  ,chf_g10
06:36:18 227  ,chf_g11
06:36:18 228  ,chf_g12
06:36:18 229  ,chf_g13
06:36:18 230  ,chf_g14
06:36:18 231  ,chf_g15
06:36:18 232  ,chf_g16
06:36:18 233  ,chf_g17
06:36:18 234  ,chf_g18
06:36:18 235  ,chf_g19
06:36:18 236  ,chf_g20
06:36:18 237  ,chf_g21
06:36:18 238  ,chf_g22
06:36:18 239  ,chf_g23
06:36:18 240  ,chf_g24
06:36:18 241  ,chf_g25
06:36:18 242  ,chf_g26
06:36:18 243  ,chf_g27
06:36:18 244  ,chf_g28
06:36:18 245  ,chf_g29
06:36:18 246  ,chf_g30
06:36:18 247  ,chf_g31
06:36:18 248  ,chf_g32
06:36:18 249  ,chf_g33
06:36:18 250  ,chf_g34
06:36:18 251  ,chf_g35
06:36:18 252  ,chf_g36
06:36:18 253  ,chf_g37
06:36:18 254  ,chf_g38
06:36:18 255  ,chf_g39
06:36:18 256  ,chf_g40
06:36:18 257  ,chf_g41
06:36:18 258  FROM aud_ms6 m
06:36:18 259  WHERE m.ydate = '&1'||' '||'&2'
06:36:18 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-27'||' '||'06:20:00'

View created.

Elapsed: 00:00:00.11
06:36:18 SQL> 
06:36:18 SQL> -- rpt
06:36:18 SQL> -- We should see just 1 row:
06:36:18 SQL> 
06:36:18 SQL> SELECT COUNT(prdate) FROM sme
06:36:18   2  
06:36:18 SQL> -- Build the model:
06:36:18 SQL> CREATE OR REPLACE VIEW bme AS
06:36:18   2  SELECT
06:36:18   3  'aud'||m.ydate prdate
06:36:18   4  ,gatt
06:36:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:36:18   6  ,eur_g00
06:36:18   7  ,eur_g01
06:36:18   8  ,eur_g02
06:36:18   9  ,eur_g03
06:36:18  10  ,eur_g04
06:36:18  11  ,eur_g05
06:36:18  12  ,eur_g06
06:36:18  13  ,eur_g07
06:36:18  14  ,eur_g08
06:36:18  15  ,eur_g09
06:36:18  16  ,eur_g10
06:36:18  17  ,eur_g11
06:36:18  18  ,eur_g12
06:36:18  19  ,eur_g13
06:36:18  20  ,eur_g14
06:36:18  21  ,eur_g15
06:36:18  22  ,eur_g16
06:36:18  23  ,eur_g17
06:36:18  24  ,eur_g18
06:36:18  25  ,eur_g19
06:36:18  26  ,eur_g20
06:36:18  27  ,eur_g21
06:36:18  28  ,eur_g22
06:36:18  29  ,eur_g23
06:36:18  30  ,eur_g24
06:36:18  31  ,eur_g25
06:36:18  32  ,eur_g26
06:36:18  33  ,eur_g27
06:36:18  34  ,eur_g28
06:36:18  35  ,eur_g29
06:36:18  36  ,eur_g30
06:36:18  37  ,eur_g31
06:36:18  38  ,eur_g32
06:36:18  39  ,eur_g33
06:36:18  40  ,eur_g34
06:36:18  41  ,eur_g35
06:36:18  42  ,eur_g36
06:36:18  43  ,eur_g37
06:36:18  44  ,eur_g38
06:36:18  45  ,eur_g39
06:36:18  46  ,eur_g40
06:36:18  47  ,eur_g41
06:36:18  48  ,aud_g00
06:36:18  49  ,aud_g01
06:36:18  50  ,aud_g02
06:36:18  51  ,aud_g03
06:36:18  52  ,aud_g04
06:36:18  53  ,aud_g05
06:36:18  54  ,aud_g06
06:36:18  55  ,aud_g07
06:36:18  56  ,aud_g08
06:36:18  57  ,aud_g09
06:36:18  58  ,aud_g10
06:36:18  59  ,aud_g11
06:36:18  60  ,aud_g12
06:36:18  61  ,aud_g13
06:36:18  62  ,aud_g14
06:36:18  63  ,aud_g15
06:36:18  64  ,aud_g16
06:36:18  65  ,aud_g17
06:36:18  66  ,aud_g18
06:36:18  67  ,aud_g19
06:36:18  68  ,aud_g20
06:36:18  69  ,aud_g21
06:36:18  70  ,aud_g22
06:36:18  71  ,aud_g23
06:36:18  72  ,aud_g24
06:36:18  73  ,aud_g25
06:36:18  74  ,aud_g26
06:36:18  75  ,aud_g27
06:36:18  76  ,aud_g28
06:36:18  77  ,aud_g29
06:36:18  78  ,aud_g30
06:36:18  79  ,aud_g31
06:36:18  80  ,aud_g32
06:36:18  81  ,aud_g33
06:36:18  82  ,aud_g34
06:36:18  83  ,aud_g35
06:36:18  84  ,aud_g36
06:36:18  85  ,aud_g37
06:36:18  86  ,aud_g38
06:36:18  87  ,aud_g39
06:36:18  88  ,aud_g40
06:36:18  89  ,aud_g41
06:36:18  90  ,gbp_g00
06:36:18  91  ,gbp_g01
06:36:18  92  ,gbp_g02
06:36:18  93  ,gbp_g03
06:36:18  94  ,gbp_g04
06:36:18  95  ,gbp_g05
06:36:18  96  ,gbp_g06
06:36:18  97  ,gbp_g07
06:36:18  98  ,gbp_g08
06:36:18  99  ,gbp_g09
06:36:18 100  ,gbp_g10
06:36:18 101  ,gbp_g11
06:36:18 102  ,gbp_g12
06:36:18 103  ,gbp_g13
06:36:18 104  ,gbp_g14
06:36:18 105  ,gbp_g15
06:36:18 106  ,gbp_g16
06:36:18 107  ,gbp_g17
06:36:18 108  ,gbp_g18
06:36:18 109  ,gbp_g19
06:36:18 110  ,gbp_g20
06:36:18 111  ,gbp_g21
06:36:18 112  ,gbp_g22
06:36:18 113  ,gbp_g23
06:36:18 114  ,gbp_g24
06:36:18 115  ,gbp_g25
06:36:18 116  ,gbp_g26
06:36:18 117  ,gbp_g27
06:36:18 118  ,gbp_g28
06:36:18 119  ,gbp_g29
06:36:18 120  ,gbp_g30
06:36:18 121  ,gbp_g31
06:36:18 122  ,gbp_g32
06:36:18 123  ,gbp_g33
06:36:18 124  ,gbp_g34
06:36:18 125  ,gbp_g35
06:36:18 126  ,gbp_g36
06:36:18 127  ,gbp_g37
06:36:18 128  ,gbp_g38
06:36:18 129  ,gbp_g39
06:36:18 130  ,gbp_g40
06:36:18 131  ,gbp_g41
06:36:18 132  ,jpy_g00
06:36:18 133  ,jpy_g01
06:36:18 134  ,jpy_g02
06:36:18 135  ,jpy_g03
06:36:18 136  ,jpy_g04
06:36:18 137  ,jpy_g05
06:36:18 138  ,jpy_g06
06:36:18 139  ,jpy_g07
06:36:18 140  ,jpy_g08
06:36:18 141  ,jpy_g09
06:36:18 142  ,jpy_g10
06:36:18 143  ,jpy_g11
06:36:18 144  ,jpy_g12
06:36:18 145  ,jpy_g13
06:36:18 146  ,jpy_g14
06:36:18 147  ,jpy_g15
06:36:18 148  ,jpy_g16
06:36:18 149  ,jpy_g17
06:36:18 150  ,jpy_g18
06:36:18 151  ,jpy_g19
06:36:18 152  ,jpy_g20
06:36:18 153  ,jpy_g21
06:36:18 154  ,jpy_g22
06:36:18 155  ,jpy_g23
06:36:18 156  ,jpy_g24
06:36:18 157  ,jpy_g25
06:36:18 158  ,jpy_g26
06:36:18 159  ,jpy_g27
06:36:18 160  ,jpy_g28
06:36:18 161  ,jpy_g29
06:36:18 162  ,jpy_g30
06:36:18 163  ,jpy_g31
06:36:18 164  ,jpy_g32
06:36:18 165  ,jpy_g33
06:36:18 166  ,jpy_g34
06:36:18 167  ,jpy_g35
06:36:18 168  ,jpy_g36
06:36:18 169  ,jpy_g37
06:36:18 170  ,jpy_g38
06:36:18 171  ,jpy_g39
06:36:18 172  ,jpy_g40
06:36:18 173  ,jpy_g41
06:36:18 174  ,cad_g00
06:36:18 175  ,cad_g01
06:36:18 176  ,cad_g02
06:36:18 177  ,cad_g03
06:36:18 178  ,cad_g04
06:36:18 179  ,cad_g05
06:36:18 180  ,cad_g06
06:36:18 181  ,cad_g07
06:36:18 182  ,cad_g08
06:36:18 183  ,cad_g09
06:36:18 184  ,cad_g10
06:36:18 185  ,cad_g11
06:36:18 186  ,cad_g12
06:36:18 187  ,cad_g13
06:36:18 188  ,cad_g14
06:36:18 189  ,cad_g15
06:36:18 190  ,cad_g16
06:36:18 191  ,cad_g17
06:36:18 192  ,cad_g18
06:36:18 193  ,cad_g19
06:36:18 194  ,cad_g20
06:36:18 195  ,cad_g21
06:36:18 196  ,cad_g22
06:36:18 197  ,cad_g23
06:36:18 198  ,cad_g24
06:36:18 199  ,cad_g25
06:36:18 200  ,cad_g26
06:36:18 201  ,cad_g27
06:36:18 202  ,cad_g28
06:36:18 203  ,cad_g29
06:36:18 204  ,cad_g30
06:36:18 205  ,cad_g31
06:36:18 206  ,cad_g32
06:36:18 207  ,cad_g33
06:36:18 208  ,cad_g34
06:36:18 209  ,cad_g35
06:36:18 210  ,cad_g36
06:36:18 211  ,cad_g37
06:36:18 212  ,cad_g38
06:36:18 213  ,cad_g39
06:36:18 214  ,cad_g40
06:36:18 215  ,cad_g41
06:36:18 216  ,chf_g00
06:36:18 217  ,chf_g01
06:36:18 218  ,chf_g02
06:36:18 219  ,chf_g03
06:36:18 220  ,chf_g04
06:36:18 221  ,chf_g05
06:36:18 222  ,chf_g06
06:36:18 223  ,chf_g07
06:36:18 224  ,chf_g08
06:36:18 225  ,chf_g09
06:36:18 226  ,chf_g10
06:36:18 227  ,chf_g11
06:36:18 228  ,chf_g12
06:36:18 229  ,chf_g13
06:36:18 230  ,chf_g14
06:36:18 231  ,chf_g15
06:36:18 232  ,chf_g16
06:36:18 233  ,chf_g17
06:36:18 234  ,chf_g18
06:36:18 235  ,chf_g19
06:36:18 236  ,chf_g20
06:36:18 237  ,chf_g21
06:36:18 238  ,chf_g22
06:36:18 239  ,chf_g23
06:36:18 240  ,chf_g24
06:36:18 241  ,chf_g25
06:36:18 242  ,chf_g26
06:36:18 243  ,chf_g27
06:36:18 244  ,chf_g28
06:36:18 245  ,chf_g29
06:36:18 246  ,chf_g30
06:36:18 247  ,chf_g31
06:36:18 248  ,chf_g32
06:36:18 249  ,chf_g33
06:36:18 250  ,chf_g34
06:36:18 251  ,chf_g35
06:36:18 252  ,chf_g36
06:36:18 253  ,chf_g37
06:36:18 254  ,chf_g38
06:36:18 255  ,chf_g39
06:36:18 256  ,chf_g40
06:36:18 257  ,chf_g41
06:36:18 258  FROM aud_ms6 m
06:36:18 259  WHERE gatt IN('nup','up')
06:36:18 260  AND 1+m.ydate < '&1'||' '||'&2'
06:36:18 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-27'||' '||'06:20:00'

View created.

Elapsed: 00:00:00.12
06:36:18 SQL> 
06:36:18 SQL> -- rpt
06:36:18 SQL> 
06:36:18 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
06:36:18   2  
06:36:18 SQL> SELECT MAX(prdate) FROM bme
06:36:18   2  
06:36:18 SQL> -- Now build model from bme and score sme
06:36:18 SQL> @score1.sql
06:36:18 SQL> -- score1.sql
06:36:18 SQL> 
06:36:18 SQL> -- Does the 1st SVM score
06:36:18 SQL> 
06:36:18 SQL> -- Fill up svmc_apply_prep
06:36:18 SQL> @score.sql
06:36:18 SQL> --
06:36:18 SQL> -- score.sql
06:36:18 SQL> --
06:36:18 SQL> 
06:36:18 SQL> -- usage: score.sql
06:36:18 SQL> 
06:36:18 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:36:18 SQL> 
06:36:18 SQL> DEFINE target	= 'gatt'
06:36:18 SQL> DEFINE model_name = 'forex14'
06:36:18 SQL> DEFINE bldtable	= 'bme'
06:36:18 SQL> DEFINE scoretable = 'sme'
06:36:18 SQL> DEFINE case_id	= 'prdate'
06:36:18 SQL> 
06:36:18 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:36:18 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:36:18 SQL> 
06:36:18 SQL> -- Builds an SVM model using pl/sql.
06:36:18 SQL> 
06:36:18 SQL> -----------------------------------------------------------------------
06:36:18 SQL> --			    BUILD THE MODEL
06:36:18 SQL> -----------------------------------------------------------------------
06:36:18 SQL> 
06:36:18 SQL> -- Cleanup old build data preparation objects for repeat runs
06:36:18 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
06:36:18 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:36:18 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
06:36:18 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
06:36:18 SQL> 
06:36:18 SQL> 
06:36:18 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:36:18 SQL> --
06:36:18 SQL> -- DROP	TABLE svmc_settings ;
06:36:18 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:36:18 SQL> -- DELETE svmc_settings;
06:36:18 SQL> 
06:36:18 SQL> -- The default classification algorithm is Naive Bayes. So override
06:36:18 SQL> -- this choice to SVM using a settings table.
06:36:18 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:36:18 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:36:18 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:36:18 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:36:18 SQL> -- models.
06:36:18 SQL> --
06:36:18 SQL> 
06:36:18 SQL> -- Do this once and then comment it out.
06:36:18 SQL> -- That makes script go faster.
06:36:18 SQL> -- BEGIN
06:36:18 SQL> -- -- Populate settings table
06:36:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:36:18 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:36:18 SQL> --
06:36:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:36:18 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:36:18 SQL> --
06:36:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:36:18 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:36:18 SQL> --   COMMIT;
06:36:18 SQL> -- END;
06:36:18 SQL> -- /
06:36:18 SQL> 
06:36:18 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:36:18 SQL> 
06:36:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:36:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:36:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.19
06:36:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:36:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:36:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:36:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:36:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:36:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:36:18 SQL> 
06:36:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:36:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:36:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:36:19 SQL> 
06:36:19 SQL> --------------------------------
06:36:19 SQL> -- PREPARE BUILD (TRAINING) DATA
06:36:19 SQL> --
06:36:19 SQL> 
06:36:19 SQL> -- 1. Missing Value treatment for all Predictors and
06:36:19 SQL> -- 2. Outlier Treatment and
06:36:19 SQL> -- 3. Normalization are performed below.
06:36:19 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:36:19 SQL> --    normalized here.
06:36:19 SQL> 
06:36:19 SQL> BEGIN
06:36:19   2  	-- Perform missing value treatment for all predictors
06:36:19   3  	-- create miss tables
06:36:19   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:36:19   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:36:19   6  
06:36:19   7  	-- populate miss tables
06:36:19   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:36:19   9  	  miss_table_name => 'svmc_miss_num',
06:36:19  10  	  data_table_name => '&bldtable',
06:36:19  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:36:19  12  
06:36:19  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:36:19  14  	  miss_table_name => 'svmc_miss_cat',
06:36:19  15  	  data_table_name => '&bldtable',
06:36:19  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:36:19  17  
06:36:19  18  	-- xform input data to replace missing values
06:36:19  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:36:19  20  	  miss_table_name => 'svmc_miss_num',
06:36:19  21  	  data_table_name => '&bldtable',
06:36:19  22  	  xform_view_name => 'xformed_build_miss_num');
06:36:19  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:36:19  24  	  miss_table_name => 'svmc_miss_cat',
06:36:19  25  	  data_table_name => '&bldtable',
06:36:19  26  	  xform_view_name => 'xformed_build_miss_cat');
06:36:19  27  
06:36:19  28  	-- Perform outlier treatment.
06:36:19  29  	-- create clip table
06:36:19  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:36:19  31  
06:36:19  32  	-- populate clip table
06:36:19  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:36:19  34  	  clip_table_name => 'svmc_clip',
06:36:19  35  	  data_table_name => '&bldtable',
06:36:19  36  	  tail_frac	  => 0.025,
06:36:19  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:36:19  38  
06:36:19  39  	-- xform input data to winsorized data
06:36:19  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:36:19  41  	  clip_table_name => 'svmc_clip',
06:36:19  42  	  data_table_name => '&bldtable',
06:36:19  43  	  xform_view_name => 'svmc_winsor');
06:36:19  44  
06:36:19  45  	-- create normalization table
06:36:19  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:36:19  47  
06:36:19  48  	-- populate normalization table based on winsorized data
06:36:19  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:36:19  50  	  norm_table_name => 'svmc_norm',
06:36:19  51  	  data_table_name => 'svmc_winsor',
06:36:19  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:36:19  53  
06:36:19  54  	-- normalize the original data
06:36:19  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:36:19  56  	  norm_table_name => 'svmc_norm',
06:36:19  57  	  data_table_name => '&bldtable',
06:36:19  58  	  xform_view_name => 'svmc_build_prep');
06:36:19  59  END;
06:36:19  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.41
06:36:36 SQL> 
06:36:36 SQL> ---------------------
06:36:36 SQL> -- CREATE A NEW MODEL
06:36:36 SQL> --
06:36:36 SQL> -- Cleanup old model with the same name for repeat runs
06:36:36 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:36:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:36:36   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.96
06:36:37 SQL> 
06:36:37 SQL> -- Build a new SVM Model
06:36:37 SQL> BEGIN
06:36:37   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:36:37   3  	  model_name	      => '&model_name',
06:36:37   4  	  mining_function     => dbms_data_mining.classification,
06:36:37   5  	  data_table_name     => 'svmc_build_prep',
06:36:37   6  	  case_id_column_name => '&case_id',
06:36:37   7  	  target_column_name  => '&target',
06:36:37   8  	  settings_table_name => 'svmc_settings');
06:36:37   9  END;
06:36:37  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.40
06:37:03 SQL> 
06:37:03 SQL> -----------------------------------------------------------------------
06:37:03 SQL> --			       APPLY/score THE MODEL
06:37:03 SQL> -----------------------------------------------------------------------
06:37:03 SQL> 
06:37:03 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:37:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:37:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:37:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:37:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:37:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:37:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:37:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:37:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:37:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:37:04 SQL> -----------------------
06:37:04 SQL> -- PREPARE SCORING DATA
06:37:04 SQL> --
06:37:04 SQL> -- If the data for model creation has been prepared, then the data
06:37:04 SQL> -- to be scored using the model must be prepared in the same manner
06:37:04 SQL> -- in order to obtain meaningful results.
06:37:04 SQL> --
06:37:04 SQL> -- 1. Missing Value treatment for all Predictors and
06:37:04 SQL> -- 2. Normalization
06:37:04 SQL> -- No outlier treatment will be performed during test and apply. The
06:37:04 SQL> -- normalization step is sufficient, since the normalization parameters
06:37:04 SQL> -- already capture the effects of outlier treatment done with build data.
06:37:04 SQL> --
06:37:04 SQL> BEGIN
06:37:04   2  	-- Xform Test data to replace missing values
06:37:04   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:37:04   4  	  miss_table_name => 'svmc_miss_num',
06:37:04   5  	  data_table_name => '&scoretable',
06:37:04   6  	  xform_view_name => 'xformed_apply_miss_num');
06:37:04   7  
06:37:04   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:37:04   9  	  miss_table_name => 'svmc_miss_cat',
06:37:04  10  	  data_table_name => '&scoretable',
06:37:04  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:37:04  12  
06:37:04  13  	-- Normalize the data to be scored
06:37:04  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:37:04  15  	  norm_table_name => 'svmc_norm',
06:37:04  16  	  data_table_name => '&scoretable',
06:37:04  17  	  xform_view_name => 'svmc_apply_prep');
06:37:04  18  END;
06:37:04  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.28
06:37:05 SQL> 
06:37:05 SQL> -- Use same model_name used in score.sql
06:37:05 SQL> DEFINE model_name = 'forex14'
06:37:05 SQL> 
06:37:05 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
06:37:05 SQL> 
06:37:05 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
06:37:05 SQL> 
06:37:05 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
06:37:05   2  SELECT
06:37:05   3  prdate
06:37:05   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:37:05   5  ,sysdate
06:37:05   6  ,SUBSTR(prdate,1,3)pair
06:37:05   7  ,SUBSTR(prdate,4,19)ydate
06:37:05   8  FROM svmc_apply_prep
06:37:05   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
06:37:05 SQL> @aud_score1day.sql  2010-12-27 06:10:00
06:37:05 SQL> --
06:37:05 SQL> -- aud_score1day.sql
06:37:05 SQL> --
06:37:05 SQL> 
06:37:05 SQL> CREATE OR REPLACE VIEW sme AS
06:37:05   2  SELECT
06:37:05   3  'aud'||m.ydate prdate
06:37:05   4  ,NULL gatt
06:37:05   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:37:05   6  ,eur_g00
06:37:05   7  ,eur_g01
06:37:05   8  ,eur_g02
06:37:05   9  ,eur_g03
06:37:05  10  ,eur_g04
06:37:05  11  ,eur_g05
06:37:05  12  ,eur_g06
06:37:05  13  ,eur_g07
06:37:05  14  ,eur_g08
06:37:05  15  ,eur_g09
06:37:05  16  ,eur_g10
06:37:05  17  ,eur_g11
06:37:05  18  ,eur_g12
06:37:05  19  ,eur_g13
06:37:05  20  ,eur_g14
06:37:05  21  ,eur_g15
06:37:05  22  ,eur_g16
06:37:05  23  ,eur_g17
06:37:05  24  ,eur_g18
06:37:05  25  ,eur_g19
06:37:05  26  ,eur_g20
06:37:05  27  ,eur_g21
06:37:05  28  ,eur_g22
06:37:05  29  ,eur_g23
06:37:05  30  ,eur_g24
06:37:05  31  ,eur_g25
06:37:05  32  ,eur_g26
06:37:05  33  ,eur_g27
06:37:05  34  ,eur_g28
06:37:05  35  ,eur_g29
06:37:05  36  ,eur_g30
06:37:05  37  ,eur_g31
06:37:05  38  ,eur_g32
06:37:05  39  ,eur_g33
06:37:05  40  ,eur_g34
06:37:05  41  ,eur_g35
06:37:05  42  ,eur_g36
06:37:05  43  ,eur_g37
06:37:05  44  ,eur_g38
06:37:05  45  ,eur_g39
06:37:05  46  ,eur_g40
06:37:05  47  ,eur_g41
06:37:05  48  ,aud_g00
06:37:05  49  ,aud_g01
06:37:05  50  ,aud_g02
06:37:05  51  ,aud_g03
06:37:05  52  ,aud_g04
06:37:05  53  ,aud_g05
06:37:05  54  ,aud_g06
06:37:05  55  ,aud_g07
06:37:05  56  ,aud_g08
06:37:05  57  ,aud_g09
06:37:05  58  ,aud_g10
06:37:05  59  ,aud_g11
06:37:05  60  ,aud_g12
06:37:05  61  ,aud_g13
06:37:05  62  ,aud_g14
06:37:05  63  ,aud_g15
06:37:05  64  ,aud_g16
06:37:05  65  ,aud_g17
06:37:05  66  ,aud_g18
06:37:05  67  ,aud_g19
06:37:05  68  ,aud_g20
06:37:05  69  ,aud_g21
06:37:05  70  ,aud_g22
06:37:05  71  ,aud_g23
06:37:05  72  ,aud_g24
06:37:05  73  ,aud_g25
06:37:05  74  ,aud_g26
06:37:05  75  ,aud_g27
06:37:05  76  ,aud_g28
06:37:05  77  ,aud_g29
06:37:05  78  ,aud_g30
06:37:05  79  ,aud_g31
06:37:05  80  ,aud_g32
06:37:05  81  ,aud_g33
06:37:05  82  ,aud_g34
06:37:05  83  ,aud_g35
06:37:05  84  ,aud_g36
06:37:05  85  ,aud_g37
06:37:05  86  ,aud_g38
06:37:05  87  ,aud_g39
06:37:05  88  ,aud_g40
06:37:05  89  ,aud_g41
06:37:05  90  ,gbp_g00
06:37:05  91  ,gbp_g01
06:37:05  92  ,gbp_g02
06:37:05  93  ,gbp_g03
06:37:05  94  ,gbp_g04
06:37:05  95  ,gbp_g05
06:37:05  96  ,gbp_g06
06:37:05  97  ,gbp_g07
06:37:05  98  ,gbp_g08
06:37:05  99  ,gbp_g09
06:37:05 100  ,gbp_g10
06:37:05 101  ,gbp_g11
06:37:05 102  ,gbp_g12
06:37:05 103  ,gbp_g13
06:37:05 104  ,gbp_g14
06:37:05 105  ,gbp_g15
06:37:05 106  ,gbp_g16
06:37:05 107  ,gbp_g17
06:37:05 108  ,gbp_g18
06:37:05 109  ,gbp_g19
06:37:05 110  ,gbp_g20
06:37:05 111  ,gbp_g21
06:37:05 112  ,gbp_g22
06:37:05 113  ,gbp_g23
06:37:05 114  ,gbp_g24
06:37:05 115  ,gbp_g25
06:37:05 116  ,gbp_g26
06:37:05 117  ,gbp_g27
06:37:05 118  ,gbp_g28
06:37:05 119  ,gbp_g29
06:37:05 120  ,gbp_g30
06:37:05 121  ,gbp_g31
06:37:05 122  ,gbp_g32
06:37:05 123  ,gbp_g33
06:37:05 124  ,gbp_g34
06:37:05 125  ,gbp_g35
06:37:05 126  ,gbp_g36
06:37:05 127  ,gbp_g37
06:37:05 128  ,gbp_g38
06:37:05 129  ,gbp_g39
06:37:05 130  ,gbp_g40
06:37:05 131  ,gbp_g41
06:37:05 132  ,jpy_g00
06:37:05 133  ,jpy_g01
06:37:05 134  ,jpy_g02
06:37:05 135  ,jpy_g03
06:37:05 136  ,jpy_g04
06:37:05 137  ,jpy_g05
06:37:05 138  ,jpy_g06
06:37:05 139  ,jpy_g07
06:37:05 140  ,jpy_g08
06:37:05 141  ,jpy_g09
06:37:05 142  ,jpy_g10
06:37:05 143  ,jpy_g11
06:37:05 144  ,jpy_g12
06:37:05 145  ,jpy_g13
06:37:05 146  ,jpy_g14
06:37:05 147  ,jpy_g15
06:37:05 148  ,jpy_g16
06:37:05 149  ,jpy_g17
06:37:05 150  ,jpy_g18
06:37:05 151  ,jpy_g19
06:37:05 152  ,jpy_g20
06:37:05 153  ,jpy_g21
06:37:05 154  ,jpy_g22
06:37:05 155  ,jpy_g23
06:37:05 156  ,jpy_g24
06:37:05 157  ,jpy_g25
06:37:05 158  ,jpy_g26
06:37:05 159  ,jpy_g27
06:37:05 160  ,jpy_g28
06:37:05 161  ,jpy_g29
06:37:05 162  ,jpy_g30
06:37:05 163  ,jpy_g31
06:37:05 164  ,jpy_g32
06:37:05 165  ,jpy_g33
06:37:05 166  ,jpy_g34
06:37:05 167  ,jpy_g35
06:37:05 168  ,jpy_g36
06:37:05 169  ,jpy_g37
06:37:05 170  ,jpy_g38
06:37:05 171  ,jpy_g39
06:37:05 172  ,jpy_g40
06:37:05 173  ,jpy_g41
06:37:05 174  ,cad_g00
06:37:05 175  ,cad_g01
06:37:05 176  ,cad_g02
06:37:05 177  ,cad_g03
06:37:05 178  ,cad_g04
06:37:05 179  ,cad_g05
06:37:05 180  ,cad_g06
06:37:05 181  ,cad_g07
06:37:05 182  ,cad_g08
06:37:05 183  ,cad_g09
06:37:05 184  ,cad_g10
06:37:05 185  ,cad_g11
06:37:05 186  ,cad_g12
06:37:05 187  ,cad_g13
06:37:05 188  ,cad_g14
06:37:05 189  ,cad_g15
06:37:05 190  ,cad_g16
06:37:05 191  ,cad_g17
06:37:05 192  ,cad_g18
06:37:05 193  ,cad_g19
06:37:05 194  ,cad_g20
06:37:05 195  ,cad_g21
06:37:05 196  ,cad_g22
06:37:05 197  ,cad_g23
06:37:05 198  ,cad_g24
06:37:05 199  ,cad_g25
06:37:05 200  ,cad_g26
06:37:05 201  ,cad_g27
06:37:05 202  ,cad_g28
06:37:05 203  ,cad_g29
06:37:05 204  ,cad_g30
06:37:05 205  ,cad_g31
06:37:05 206  ,cad_g32
06:37:05 207  ,cad_g33
06:37:05 208  ,cad_g34
06:37:05 209  ,cad_g35
06:37:05 210  ,cad_g36
06:37:05 211  ,cad_g37
06:37:05 212  ,cad_g38
06:37:05 213  ,cad_g39
06:37:05 214  ,cad_g40
06:37:05 215  ,cad_g41
06:37:05 216  ,chf_g00
06:37:05 217  ,chf_g01
06:37:05 218  ,chf_g02
06:37:05 219  ,chf_g03
06:37:05 220  ,chf_g04
06:37:05 221  ,chf_g05
06:37:05 222  ,chf_g06
06:37:05 223  ,chf_g07
06:37:05 224  ,chf_g08
06:37:05 225  ,chf_g09
06:37:05 226  ,chf_g10
06:37:05 227  ,chf_g11
06:37:05 228  ,chf_g12
06:37:05 229  ,chf_g13
06:37:05 230  ,chf_g14
06:37:05 231  ,chf_g15
06:37:05 232  ,chf_g16
06:37:05 233  ,chf_g17
06:37:05 234  ,chf_g18
06:37:05 235  ,chf_g19
06:37:05 236  ,chf_g20
06:37:05 237  ,chf_g21
06:37:05 238  ,chf_g22
06:37:05 239  ,chf_g23
06:37:05 240  ,chf_g24
06:37:05 241  ,chf_g25
06:37:05 242  ,chf_g26
06:37:05 243  ,chf_g27
06:37:05 244  ,chf_g28
06:37:05 245  ,chf_g29
06:37:05 246  ,chf_g30
06:37:05 247  ,chf_g31
06:37:05 248  ,chf_g32
06:37:05 249  ,chf_g33
06:37:05 250  ,chf_g34
06:37:05 251  ,chf_g35
06:37:05 252  ,chf_g36
06:37:05 253  ,chf_g37
06:37:05 254  ,chf_g38
06:37:05 255  ,chf_g39
06:37:05 256  ,chf_g40
06:37:05 257  ,chf_g41
06:37:05 258  FROM aud_ms6 m
06:37:05 259  WHERE m.ydate = '&1'||' '||'&2'
06:37:05 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-27'||' '||'06:10:00'

View created.

Elapsed: 00:00:00.13
06:37:05 SQL> 
06:37:05 SQL> -- rpt
06:37:05 SQL> -- We should see just 1 row:
06:37:05 SQL> 
06:37:05 SQL> SELECT COUNT(prdate) FROM sme
06:37:05   2  
06:37:05 SQL> -- Build the model:
06:37:05 SQL> CREATE OR REPLACE VIEW bme AS
06:37:05   2  SELECT
06:37:05   3  'aud'||m.ydate prdate
06:37:05   4  ,gatt
06:37:05   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:37:05   6  ,eur_g00
06:37:05   7  ,eur_g01
06:37:05   8  ,eur_g02
06:37:05   9  ,eur_g03
06:37:05  10  ,eur_g04
06:37:05  11  ,eur_g05
06:37:05  12  ,eur_g06
06:37:05  13  ,eur_g07
06:37:05  14  ,eur_g08
06:37:05  15  ,eur_g09
06:37:05  16  ,eur_g10
06:37:05  17  ,eur_g11
06:37:05  18  ,eur_g12
06:37:05  19  ,eur_g13
06:37:05  20  ,eur_g14
06:37:05  21  ,eur_g15
06:37:05  22  ,eur_g16
06:37:05  23  ,eur_g17
06:37:05  24  ,eur_g18
06:37:05  25  ,eur_g19
06:37:05  26  ,eur_g20
06:37:05  27  ,eur_g21
06:37:05  28  ,eur_g22
06:37:05  29  ,eur_g23
06:37:05  30  ,eur_g24
06:37:05  31  ,eur_g25
06:37:05  32  ,eur_g26
06:37:05  33  ,eur_g27
06:37:05  34  ,eur_g28
06:37:05  35  ,eur_g29
06:37:05  36  ,eur_g30
06:37:05  37  ,eur_g31
06:37:05  38  ,eur_g32
06:37:05  39  ,eur_g33
06:37:05  40  ,eur_g34
06:37:05  41  ,eur_g35
06:37:05  42  ,eur_g36
06:37:05  43  ,eur_g37
06:37:05  44  ,eur_g38
06:37:05  45  ,eur_g39
06:37:05  46  ,eur_g40
06:37:05  47  ,eur_g41
06:37:05  48  ,aud_g00
06:37:05  49  ,aud_g01
06:37:05  50  ,aud_g02
06:37:05  51  ,aud_g03
06:37:05  52  ,aud_g04
06:37:05  53  ,aud_g05
06:37:05  54  ,aud_g06
06:37:05  55  ,aud_g07
06:37:05  56  ,aud_g08
06:37:05  57  ,aud_g09
06:37:05  58  ,aud_g10
06:37:05  59  ,aud_g11
06:37:05  60  ,aud_g12
06:37:05  61  ,aud_g13
06:37:05  62  ,aud_g14
06:37:05  63  ,aud_g15
06:37:05  64  ,aud_g16
06:37:05  65  ,aud_g17
06:37:05  66  ,aud_g18
06:37:05  67  ,aud_g19
06:37:05  68  ,aud_g20
06:37:05  69  ,aud_g21
06:37:05  70  ,aud_g22
06:37:05  71  ,aud_g23
06:37:05  72  ,aud_g24
06:37:05  73  ,aud_g25
06:37:05  74  ,aud_g26
06:37:05  75  ,aud_g27
06:37:05  76  ,aud_g28
06:37:05  77  ,aud_g29
06:37:05  78  ,aud_g30
06:37:05  79  ,aud_g31
06:37:05  80  ,aud_g32
06:37:05  81  ,aud_g33
06:37:05  82  ,aud_g34
06:37:05  83  ,aud_g35
06:37:05  84  ,aud_g36
06:37:05  85  ,aud_g37
06:37:05  86  ,aud_g38
06:37:05  87  ,aud_g39
06:37:05  88  ,aud_g40
06:37:05  89  ,aud_g41
06:37:05  90  ,gbp_g00
06:37:05  91  ,gbp_g01
06:37:05  92  ,gbp_g02
06:37:05  93  ,gbp_g03
06:37:05  94  ,gbp_g04
06:37:05  95  ,gbp_g05
06:37:05  96  ,gbp_g06
06:37:05  97  ,gbp_g07
06:37:05  98  ,gbp_g08
06:37:05  99  ,gbp_g09
06:37:05 100  ,gbp_g10
06:37:05 101  ,gbp_g11
06:37:05 102  ,gbp_g12
06:37:05 103  ,gbp_g13
06:37:05 104  ,gbp_g14
06:37:05 105  ,gbp_g15
06:37:05 106  ,gbp_g16
06:37:05 107  ,gbp_g17
06:37:05 108  ,gbp_g18
06:37:05 109  ,gbp_g19
06:37:05 110  ,gbp_g20
06:37:05 111  ,gbp_g21
06:37:05 112  ,gbp_g22
06:37:05 113  ,gbp_g23
06:37:05 114  ,gbp_g24
06:37:05 115  ,gbp_g25
06:37:05 116  ,gbp_g26
06:37:05 117  ,gbp_g27
06:37:05 118  ,gbp_g28
06:37:05 119  ,gbp_g29
06:37:05 120  ,gbp_g30
06:37:05 121  ,gbp_g31
06:37:05 122  ,gbp_g32
06:37:05 123  ,gbp_g33
06:37:05 124  ,gbp_g34
06:37:05 125  ,gbp_g35
06:37:05 126  ,gbp_g36
06:37:05 127  ,gbp_g37
06:37:05 128  ,gbp_g38
06:37:05 129  ,gbp_g39
06:37:05 130  ,gbp_g40
06:37:05 131  ,gbp_g41
06:37:05 132  ,jpy_g00
06:37:05 133  ,jpy_g01
06:37:05 134  ,jpy_g02
06:37:05 135  ,jpy_g03
06:37:05 136  ,jpy_g04
06:37:05 137  ,jpy_g05
06:37:05 138  ,jpy_g06
06:37:05 139  ,jpy_g07
06:37:05 140  ,jpy_g08
06:37:05 141  ,jpy_g09
06:37:05 142  ,jpy_g10
06:37:05 143  ,jpy_g11
06:37:05 144  ,jpy_g12
06:37:05 145  ,jpy_g13
06:37:05 146  ,jpy_g14
06:37:05 147  ,jpy_g15
06:37:05 148  ,jpy_g16
06:37:05 149  ,jpy_g17
06:37:05 150  ,jpy_g18
06:37:05 151  ,jpy_g19
06:37:05 152  ,jpy_g20
06:37:05 153  ,jpy_g21
06:37:05 154  ,jpy_g22
06:37:05 155  ,jpy_g23
06:37:05 156  ,jpy_g24
06:37:05 157  ,jpy_g25
06:37:05 158  ,jpy_g26
06:37:05 159  ,jpy_g27
06:37:05 160  ,jpy_g28
06:37:05 161  ,jpy_g29
06:37:05 162  ,jpy_g30
06:37:05 163  ,jpy_g31
06:37:05 164  ,jpy_g32
06:37:05 165  ,jpy_g33
06:37:05 166  ,jpy_g34
06:37:05 167  ,jpy_g35
06:37:05 168  ,jpy_g36
06:37:05 169  ,jpy_g37
06:37:05 170  ,jpy_g38
06:37:05 171  ,jpy_g39
06:37:05 172  ,jpy_g40
06:37:05 173  ,jpy_g41
06:37:05 174  ,cad_g00
06:37:05 175  ,cad_g01
06:37:05 176  ,cad_g02
06:37:05 177  ,cad_g03
06:37:05 178  ,cad_g04
06:37:05 179  ,cad_g05
06:37:05 180  ,cad_g06
06:37:05 181  ,cad_g07
06:37:05 182  ,cad_g08
06:37:05 183  ,cad_g09
06:37:05 184  ,cad_g10
06:37:05 185  ,cad_g11
06:37:05 186  ,cad_g12
06:37:05 187  ,cad_g13
06:37:05 188  ,cad_g14
06:37:05 189  ,cad_g15
06:37:05 190  ,cad_g16
06:37:05 191  ,cad_g17
06:37:05 192  ,cad_g18
06:37:05 193  ,cad_g19
06:37:05 194  ,cad_g20
06:37:05 195  ,cad_g21
06:37:05 196  ,cad_g22
06:37:05 197  ,cad_g23
06:37:05 198  ,cad_g24
06:37:05 199  ,cad_g25
06:37:05 200  ,cad_g26
06:37:05 201  ,cad_g27
06:37:05 202  ,cad_g28
06:37:05 203  ,cad_g29
06:37:05 204  ,cad_g30
06:37:05 205  ,cad_g31
06:37:05 206  ,cad_g32
06:37:05 207  ,cad_g33
06:37:05 208  ,cad_g34
06:37:05 209  ,cad_g35
06:37:05 210  ,cad_g36
06:37:05 211  ,cad_g37
06:37:05 212  ,cad_g38
06:37:05 213  ,cad_g39
06:37:05 214  ,cad_g40
06:37:05 215  ,cad_g41
06:37:05 216  ,chf_g00
06:37:05 217  ,chf_g01
06:37:05 218  ,chf_g02
06:37:05 219  ,chf_g03
06:37:05 220  ,chf_g04
06:37:05 221  ,chf_g05
06:37:05 222  ,chf_g06
06:37:05 223  ,chf_g07
06:37:05 224  ,chf_g08
06:37:05 225  ,chf_g09
06:37:05 226  ,chf_g10
06:37:05 227  ,chf_g11
06:37:05 228  ,chf_g12
06:37:05 229  ,chf_g13
06:37:05 230  ,chf_g14
06:37:05 231  ,chf_g15
06:37:05 232  ,chf_g16
06:37:05 233  ,chf_g17
06:37:05 234  ,chf_g18
06:37:05 235  ,chf_g19
06:37:05 236  ,chf_g20
06:37:05 237  ,chf_g21
06:37:05 238  ,chf_g22
06:37:05 239  ,chf_g23
06:37:05 240  ,chf_g24
06:37:05 241  ,chf_g25
06:37:05 242  ,chf_g26
06:37:05 243  ,chf_g27
06:37:05 244  ,chf_g28
06:37:05 245  ,chf_g29
06:37:05 246  ,chf_g30
06:37:05 247  ,chf_g31
06:37:05 248  ,chf_g32
06:37:05 249  ,chf_g33
06:37:05 250  ,chf_g34
06:37:05 251  ,chf_g35
06:37:05 252  ,chf_g36
06:37:05 253  ,chf_g37
06:37:05 254  ,chf_g38
06:37:05 255  ,chf_g39
06:37:05 256  ,chf_g40
06:37:05 257  ,chf_g41
06:37:05 258  FROM aud_ms6 m
06:37:05 259  WHERE gatt IN('nup','up')
06:37:05 260  AND 1+m.ydate < '&1'||' '||'&2'
06:37:05 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-27'||' '||'06:10:00'

View created.

Elapsed: 00:00:00.13
06:37:05 SQL> 
06:37:05 SQL> -- rpt
06:37:05 SQL> 
06:37:05 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
06:37:05   2  
06:37:05 SQL> SELECT MAX(prdate) FROM bme
06:37:05   2  
06:37:05 SQL> -- Now build model from bme and score sme
06:37:05 SQL> @score1.sql
06:37:05 SQL> -- score1.sql
06:37:05 SQL> 
06:37:05 SQL> -- Does the 1st SVM score
06:37:05 SQL> 
06:37:05 SQL> -- Fill up svmc_apply_prep
06:37:05 SQL> @score.sql
06:37:05 SQL> --
06:37:05 SQL> -- score.sql
06:37:05 SQL> --
06:37:05 SQL> 
06:37:05 SQL> -- usage: score.sql
06:37:05 SQL> 
06:37:05 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:37:05 SQL> 
06:37:05 SQL> DEFINE target	= 'gatt'
06:37:05 SQL> DEFINE model_name = 'forex14'
06:37:05 SQL> DEFINE bldtable	= 'bme'
06:37:05 SQL> DEFINE scoretable = 'sme'
06:37:05 SQL> DEFINE case_id	= 'prdate'
06:37:05 SQL> 
06:37:05 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:37:05 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:37:05 SQL> 
06:37:05 SQL> -- Builds an SVM model using pl/sql.
06:37:05 SQL> 
06:37:05 SQL> -----------------------------------------------------------------------
06:37:05 SQL> --			    BUILD THE MODEL
06:37:05 SQL> -----------------------------------------------------------------------
06:37:05 SQL> 
06:37:05 SQL> -- Cleanup old build data preparation objects for repeat runs
06:37:05 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.04
06:37:05 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:37:05 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
06:37:05 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
06:37:05 SQL> 
06:37:05 SQL> 
06:37:05 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:37:05 SQL> --
06:37:05 SQL> -- DROP	TABLE svmc_settings ;
06:37:05 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:37:05 SQL> -- DELETE svmc_settings;
06:37:05 SQL> 
06:37:05 SQL> -- The default classification algorithm is Naive Bayes. So override
06:37:05 SQL> -- this choice to SVM using a settings table.
06:37:05 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:37:05 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:37:05 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:37:05 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:37:05 SQL> -- models.
06:37:05 SQL> --
06:37:05 SQL> 
06:37:05 SQL> -- Do this once and then comment it out.
06:37:05 SQL> -- That makes script go faster.
06:37:05 SQL> -- BEGIN
06:37:05 SQL> -- -- Populate settings table
06:37:05 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:37:05 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:37:05 SQL> --
06:37:05 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:37:05 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:37:05 SQL> --
06:37:05 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:37:05 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:37:05 SQL> --   COMMIT;
06:37:05 SQL> -- END;
06:37:05 SQL> -- /
06:37:05 SQL> 
06:37:05 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:37:05 SQL> 
06:37:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:37:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:37:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:37:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:37:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:37:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:37:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:37:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:37:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:37:06 SQL> 
06:37:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:37:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:37:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:37:06 SQL> 
06:37:06 SQL> --------------------------------
06:37:06 SQL> -- PREPARE BUILD (TRAINING) DATA
06:37:06 SQL> --
06:37:06 SQL> 
06:37:06 SQL> -- 1. Missing Value treatment for all Predictors and
06:37:06 SQL> -- 2. Outlier Treatment and
06:37:06 SQL> -- 3. Normalization are performed below.
06:37:06 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:37:06 SQL> --    normalized here.
06:37:06 SQL> 
06:37:06 SQL> BEGIN
06:37:06   2  	-- Perform missing value treatment for all predictors
06:37:06   3  	-- create miss tables
06:37:06   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:37:06   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:37:06   6  
06:37:06   7  	-- populate miss tables
06:37:06   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:37:06   9  	  miss_table_name => 'svmc_miss_num',
06:37:06  10  	  data_table_name => '&bldtable',
06:37:06  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:37:06  12  
06:37:06  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:37:06  14  	  miss_table_name => 'svmc_miss_cat',
06:37:06  15  	  data_table_name => '&bldtable',
06:37:06  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:37:06  17  
06:37:06  18  	-- xform input data to replace missing values
06:37:06  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:37:06  20  	  miss_table_name => 'svmc_miss_num',
06:37:06  21  	  data_table_name => '&bldtable',
06:37:06  22  	  xform_view_name => 'xformed_build_miss_num');
06:37:06  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:37:06  24  	  miss_table_name => 'svmc_miss_cat',
06:37:06  25  	  data_table_name => '&bldtable',
06:37:06  26  	  xform_view_name => 'xformed_build_miss_cat');
06:37:06  27  
06:37:06  28  	-- Perform outlier treatment.
06:37:06  29  	-- create clip table
06:37:06  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:37:06  31  
06:37:06  32  	-- populate clip table
06:37:06  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:37:06  34  	  clip_table_name => 'svmc_clip',
06:37:06  35  	  data_table_name => '&bldtable',
06:37:06  36  	  tail_frac	  => 0.025,
06:37:06  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:37:06  38  
06:37:06  39  	-- xform input data to winsorized data
06:37:06  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:37:06  41  	  clip_table_name => 'svmc_clip',
06:37:06  42  	  data_table_name => '&bldtable',
06:37:06  43  	  xform_view_name => 'svmc_winsor');
06:37:06  44  
06:37:06  45  	-- create normalization table
06:37:06  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:37:06  47  
06:37:06  48  	-- populate normalization table based on winsorized data
06:37:06  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:37:06  50  	  norm_table_name => 'svmc_norm',
06:37:06  51  	  data_table_name => 'svmc_winsor',
06:37:06  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:37:06  53  
06:37:06  54  	-- normalize the original data
06:37:06  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:37:06  56  	  norm_table_name => 'svmc_norm',
06:37:06  57  	  data_table_name => '&bldtable',
06:37:06  58  	  xform_view_name => 'svmc_build_prep');
06:37:06  59  END;
06:37:06  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.37
06:37:23 SQL> 
06:37:23 SQL> ---------------------
06:37:23 SQL> -- CREATE A NEW MODEL
06:37:23 SQL> --
06:37:23 SQL> -- Cleanup old model with the same name for repeat runs
06:37:23 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:37:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:37:23   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.09
06:37:24 SQL> 
06:37:24 SQL> -- Build a new SVM Model
06:37:24 SQL> BEGIN
06:37:24   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:37:24   3  	  model_name	      => '&model_name',
06:37:24   4  	  mining_function     => dbms_data_mining.classification,
06:37:24   5  	  data_table_name     => 'svmc_build_prep',
06:37:24   6  	  case_id_column_name => '&case_id',
06:37:24   7  	  target_column_name  => '&target',
06:37:24   8  	  settings_table_name => 'svmc_settings');
06:37:24   9  END;
06:37:24  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.78
06:37:50 SQL> 
06:37:50 SQL> -----------------------------------------------------------------------
06:37:50 SQL> --			       APPLY/score THE MODEL
06:37:50 SQL> -----------------------------------------------------------------------
06:37:50 SQL> 
06:37:50 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:37:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:37:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:37:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:37:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:37:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:37:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:37:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:37:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:37:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:37:50 SQL> -----------------------
06:37:50 SQL> -- PREPARE SCORING DATA
06:37:50 SQL> --
06:37:50 SQL> -- If the data for model creation has been prepared, then the data
06:37:50 SQL> -- to be scored using the model must be prepared in the same manner
06:37:50 SQL> -- in order to obtain meaningful results.
06:37:50 SQL> --
06:37:50 SQL> -- 1. Missing Value treatment for all Predictors and
06:37:50 SQL> -- 2. Normalization
06:37:50 SQL> -- No outlier treatment will be performed during test and apply. The
06:37:50 SQL> -- normalization step is sufficient, since the normalization parameters
06:37:50 SQL> -- already capture the effects of outlier treatment done with build data.
06:37:50 SQL> --
06:37:50 SQL> BEGIN
06:37:50   2  	-- Xform Test data to replace missing values
06:37:50   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:37:50   4  	  miss_table_name => 'svmc_miss_num',
06:37:50   5  	  data_table_name => '&scoretable',
06:37:50   6  	  xform_view_name => 'xformed_apply_miss_num');
06:37:50   7  
06:37:50   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:37:50   9  	  miss_table_name => 'svmc_miss_cat',
06:37:50  10  	  data_table_name => '&scoretable',
06:37:50  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:37:50  12  
06:37:50  13  	-- Normalize the data to be scored
06:37:50  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:37:50  15  	  norm_table_name => 'svmc_norm',
06:37:50  16  	  data_table_name => '&scoretable',
06:37:50  17  	  xform_view_name => 'svmc_apply_prep');
06:37:50  18  END;
06:37:50  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
06:37:51 SQL> 
06:37:51 SQL> -- Use same model_name used in score.sql
06:37:51 SQL> DEFINE model_name = 'forex14'
06:37:51 SQL> 
06:37:51 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
06:37:51 SQL> 
06:37:51 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
06:37:51 SQL> 
06:37:51 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
06:37:51   2  SELECT
06:37:51   3  prdate
06:37:51   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:37:51   5  ,sysdate
06:37:51   6  ,SUBSTR(prdate,1,3)pair
06:37:51   7  ,SUBSTR(prdate,4,19)ydate
06:37:51   8  FROM svmc_apply_prep
06:37:51   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
06:37:51 SQL> @aud_score1day.sql  2010-12-27 06:25:00
06:37:51 SQL> --
06:37:51 SQL> -- aud_score1day.sql
06:37:51 SQL> --
06:37:51 SQL> 
06:37:51 SQL> CREATE OR REPLACE VIEW sme AS
06:37:51   2  SELECT
06:37:51   3  'aud'||m.ydate prdate
06:37:51   4  ,NULL gatt
06:37:51   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:37:51   6  ,eur_g00
06:37:51   7  ,eur_g01
06:37:51   8  ,eur_g02
06:37:51   9  ,eur_g03
06:37:51  10  ,eur_g04
06:37:51  11  ,eur_g05
06:37:51  12  ,eur_g06
06:37:51  13  ,eur_g07
06:37:51  14  ,eur_g08
06:37:51  15  ,eur_g09
06:37:51  16  ,eur_g10
06:37:51  17  ,eur_g11
06:37:51  18  ,eur_g12
06:37:51  19  ,eur_g13
06:37:51  20  ,eur_g14
06:37:51  21  ,eur_g15
06:37:51  22  ,eur_g16
06:37:51  23  ,eur_g17
06:37:51  24  ,eur_g18
06:37:51  25  ,eur_g19
06:37:51  26  ,eur_g20
06:37:51  27  ,eur_g21
06:37:51  28  ,eur_g22
06:37:51  29  ,eur_g23
06:37:51  30  ,eur_g24
06:37:51  31  ,eur_g25
06:37:51  32  ,eur_g26
06:37:51  33  ,eur_g27
06:37:51  34  ,eur_g28
06:37:51  35  ,eur_g29
06:37:51  36  ,eur_g30
06:37:51  37  ,eur_g31
06:37:51  38  ,eur_g32
06:37:51  39  ,eur_g33
06:37:51  40  ,eur_g34
06:37:51  41  ,eur_g35
06:37:51  42  ,eur_g36
06:37:51  43  ,eur_g37
06:37:51  44  ,eur_g38
06:37:51  45  ,eur_g39
06:37:51  46  ,eur_g40
06:37:51  47  ,eur_g41
06:37:51  48  ,aud_g00
06:37:51  49  ,aud_g01
06:37:51  50  ,aud_g02
06:37:51  51  ,aud_g03
06:37:51  52  ,aud_g04
06:37:51  53  ,aud_g05
06:37:51  54  ,aud_g06
06:37:51  55  ,aud_g07
06:37:51  56  ,aud_g08
06:37:51  57  ,aud_g09
06:37:51  58  ,aud_g10
06:37:51  59  ,aud_g11
06:37:51  60  ,aud_g12
06:37:51  61  ,aud_g13
06:37:51  62  ,aud_g14
06:37:51  63  ,aud_g15
06:37:51  64  ,aud_g16
06:37:51  65  ,aud_g17
06:37:51  66  ,aud_g18
06:37:51  67  ,aud_g19
06:37:51  68  ,aud_g20
06:37:51  69  ,aud_g21
06:37:51  70  ,aud_g22
06:37:51  71  ,aud_g23
06:37:51  72  ,aud_g24
06:37:51  73  ,aud_g25
06:37:51  74  ,aud_g26
06:37:51  75  ,aud_g27
06:37:51  76  ,aud_g28
06:37:51  77  ,aud_g29
06:37:51  78  ,aud_g30
06:37:51  79  ,aud_g31
06:37:51  80  ,aud_g32
06:37:51  81  ,aud_g33
06:37:51  82  ,aud_g34
06:37:51  83  ,aud_g35
06:37:51  84  ,aud_g36
06:37:51  85  ,aud_g37
06:37:51  86  ,aud_g38
06:37:51  87  ,aud_g39
06:37:51  88  ,aud_g40
06:37:51  89  ,aud_g41
06:37:51  90  ,gbp_g00
06:37:51  91  ,gbp_g01
06:37:51  92  ,gbp_g02
06:37:51  93  ,gbp_g03
06:37:51  94  ,gbp_g04
06:37:51  95  ,gbp_g05
06:37:51  96  ,gbp_g06
06:37:51  97  ,gbp_g07
06:37:51  98  ,gbp_g08
06:37:51  99  ,gbp_g09
06:37:51 100  ,gbp_g10
06:37:51 101  ,gbp_g11
06:37:51 102  ,gbp_g12
06:37:51 103  ,gbp_g13
06:37:51 104  ,gbp_g14
06:37:51 105  ,gbp_g15
06:37:51 106  ,gbp_g16
06:37:51 107  ,gbp_g17
06:37:51 108  ,gbp_g18
06:37:51 109  ,gbp_g19
06:37:51 110  ,gbp_g20
06:37:51 111  ,gbp_g21
06:37:51 112  ,gbp_g22
06:37:51 113  ,gbp_g23
06:37:51 114  ,gbp_g24
06:37:51 115  ,gbp_g25
06:37:51 116  ,gbp_g26
06:37:51 117  ,gbp_g27
06:37:51 118  ,gbp_g28
06:37:51 119  ,gbp_g29
06:37:51 120  ,gbp_g30
06:37:51 121  ,gbp_g31
06:37:51 122  ,gbp_g32
06:37:51 123  ,gbp_g33
06:37:51 124  ,gbp_g34
06:37:51 125  ,gbp_g35
06:37:51 126  ,gbp_g36
06:37:51 127  ,gbp_g37
06:37:51 128  ,gbp_g38
06:37:51 129  ,gbp_g39
06:37:51 130  ,gbp_g40
06:37:51 131  ,gbp_g41
06:37:51 132  ,jpy_g00
06:37:51 133  ,jpy_g01
06:37:51 134  ,jpy_g02
06:37:51 135  ,jpy_g03
06:37:51 136  ,jpy_g04
06:37:51 137  ,jpy_g05
06:37:51 138  ,jpy_g06
06:37:51 139  ,jpy_g07
06:37:51 140  ,jpy_g08
06:37:51 141  ,jpy_g09
06:37:51 142  ,jpy_g10
06:37:51 143  ,jpy_g11
06:37:51 144  ,jpy_g12
06:37:51 145  ,jpy_g13
06:37:51 146  ,jpy_g14
06:37:51 147  ,jpy_g15
06:37:51 148  ,jpy_g16
06:37:51 149  ,jpy_g17
06:37:51 150  ,jpy_g18
06:37:51 151  ,jpy_g19
06:37:51 152  ,jpy_g20
06:37:51 153  ,jpy_g21
06:37:51 154  ,jpy_g22
06:37:51 155  ,jpy_g23
06:37:51 156  ,jpy_g24
06:37:51 157  ,jpy_g25
06:37:51 158  ,jpy_g26
06:37:51 159  ,jpy_g27
06:37:51 160  ,jpy_g28
06:37:51 161  ,jpy_g29
06:37:51 162  ,jpy_g30
06:37:51 163  ,jpy_g31
06:37:51 164  ,jpy_g32
06:37:51 165  ,jpy_g33
06:37:51 166  ,jpy_g34
06:37:51 167  ,jpy_g35
06:37:51 168  ,jpy_g36
06:37:51 169  ,jpy_g37
06:37:51 170  ,jpy_g38
06:37:51 171  ,jpy_g39
06:37:51 172  ,jpy_g40
06:37:51 173  ,jpy_g41
06:37:51 174  ,cad_g00
06:37:51 175  ,cad_g01
06:37:51 176  ,cad_g02
06:37:51 177  ,cad_g03
06:37:51 178  ,cad_g04
06:37:51 179  ,cad_g05
06:37:51 180  ,cad_g06
06:37:51 181  ,cad_g07
06:37:51 182  ,cad_g08
06:37:51 183  ,cad_g09
06:37:51 184  ,cad_g10
06:37:51 185  ,cad_g11
06:37:51 186  ,cad_g12
06:37:51 187  ,cad_g13
06:37:51 188  ,cad_g14
06:37:51 189  ,cad_g15
06:37:51 190  ,cad_g16
06:37:51 191  ,cad_g17
06:37:51 192  ,cad_g18
06:37:51 193  ,cad_g19
06:37:51 194  ,cad_g20
06:37:51 195  ,cad_g21
06:37:51 196  ,cad_g22
06:37:51 197  ,cad_g23
06:37:51 198  ,cad_g24
06:37:51 199  ,cad_g25
06:37:51 200  ,cad_g26
06:37:51 201  ,cad_g27
06:37:51 202  ,cad_g28
06:37:51 203  ,cad_g29
06:37:51 204  ,cad_g30
06:37:51 205  ,cad_g31
06:37:51 206  ,cad_g32
06:37:51 207  ,cad_g33
06:37:51 208  ,cad_g34
06:37:51 209  ,cad_g35
06:37:51 210  ,cad_g36
06:37:51 211  ,cad_g37
06:37:51 212  ,cad_g38
06:37:51 213  ,cad_g39
06:37:51 214  ,cad_g40
06:37:51 215  ,cad_g41
06:37:51 216  ,chf_g00
06:37:51 217  ,chf_g01
06:37:51 218  ,chf_g02
06:37:51 219  ,chf_g03
06:37:51 220  ,chf_g04
06:37:51 221  ,chf_g05
06:37:51 222  ,chf_g06
06:37:51 223  ,chf_g07
06:37:51 224  ,chf_g08
06:37:51 225  ,chf_g09
06:37:51 226  ,chf_g10
06:37:51 227  ,chf_g11
06:37:51 228  ,chf_g12
06:37:51 229  ,chf_g13
06:37:51 230  ,chf_g14
06:37:51 231  ,chf_g15
06:37:51 232  ,chf_g16
06:37:51 233  ,chf_g17
06:37:51 234  ,chf_g18
06:37:51 235  ,chf_g19
06:37:51 236  ,chf_g20
06:37:51 237  ,chf_g21
06:37:51 238  ,chf_g22
06:37:51 239  ,chf_g23
06:37:51 240  ,chf_g24
06:37:51 241  ,chf_g25
06:37:51 242  ,chf_g26
06:37:51 243  ,chf_g27
06:37:51 244  ,chf_g28
06:37:51 245  ,chf_g29
06:37:51 246  ,chf_g30
06:37:51 247  ,chf_g31
06:37:51 248  ,chf_g32
06:37:51 249  ,chf_g33
06:37:51 250  ,chf_g34
06:37:51 251  ,chf_g35
06:37:51 252  ,chf_g36
06:37:51 253  ,chf_g37
06:37:51 254  ,chf_g38
06:37:51 255  ,chf_g39
06:37:51 256  ,chf_g40
06:37:51 257  ,chf_g41
06:37:51 258  FROM aud_ms6 m
06:37:51 259  WHERE m.ydate = '&1'||' '||'&2'
06:37:51 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-27'||' '||'06:25:00'

View created.

Elapsed: 00:00:00.13
06:37:52 SQL> 
06:37:52 SQL> -- rpt
06:37:52 SQL> -- We should see just 1 row:
06:37:52 SQL> 
06:37:52 SQL> SELECT COUNT(prdate) FROM sme
06:37:52   2  
06:37:52 SQL> -- Build the model:
06:37:52 SQL> CREATE OR REPLACE VIEW bme AS
06:37:52   2  SELECT
06:37:52   3  'aud'||m.ydate prdate
06:37:52   4  ,gatt
06:37:52   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:37:52   6  ,eur_g00
06:37:52   7  ,eur_g01
06:37:52   8  ,eur_g02
06:37:52   9  ,eur_g03
06:37:52  10  ,eur_g04
06:37:52  11  ,eur_g05
06:37:52  12  ,eur_g06
06:37:52  13  ,eur_g07
06:37:52  14  ,eur_g08
06:37:52  15  ,eur_g09
06:37:52  16  ,eur_g10
06:37:52  17  ,eur_g11
06:37:52  18  ,eur_g12
06:37:52  19  ,eur_g13
06:37:52  20  ,eur_g14
06:37:52  21  ,eur_g15
06:37:52  22  ,eur_g16
06:37:52  23  ,eur_g17
06:37:52  24  ,eur_g18
06:37:52  25  ,eur_g19
06:37:52  26  ,eur_g20
06:37:52  27  ,eur_g21
06:37:52  28  ,eur_g22
06:37:52  29  ,eur_g23
06:37:52  30  ,eur_g24
06:37:52  31  ,eur_g25
06:37:52  32  ,eur_g26
06:37:52  33  ,eur_g27
06:37:52  34  ,eur_g28
06:37:52  35  ,eur_g29
06:37:52  36  ,eur_g30
06:37:52  37  ,eur_g31
06:37:52  38  ,eur_g32
06:37:52  39  ,eur_g33
06:37:52  40  ,eur_g34
06:37:52  41  ,eur_g35
06:37:52  42  ,eur_g36
06:37:52  43  ,eur_g37
06:37:52  44  ,eur_g38
06:37:52  45  ,eur_g39
06:37:52  46  ,eur_g40
06:37:52  47  ,eur_g41
06:37:52  48  ,aud_g00
06:37:52  49  ,aud_g01
06:37:52  50  ,aud_g02
06:37:52  51  ,aud_g03
06:37:52  52  ,aud_g04
06:37:52  53  ,aud_g05
06:37:52  54  ,aud_g06
06:37:52  55  ,aud_g07
06:37:52  56  ,aud_g08
06:37:52  57  ,aud_g09
06:37:52  58  ,aud_g10
06:37:52  59  ,aud_g11
06:37:52  60  ,aud_g12
06:37:52  61  ,aud_g13
06:37:52  62  ,aud_g14
06:37:52  63  ,aud_g15
06:37:52  64  ,aud_g16
06:37:52  65  ,aud_g17
06:37:52  66  ,aud_g18
06:37:52  67  ,aud_g19
06:37:52  68  ,aud_g20
06:37:52  69  ,aud_g21
06:37:52  70  ,aud_g22
06:37:52  71  ,aud_g23
06:37:52  72  ,aud_g24
06:37:52  73  ,aud_g25
06:37:52  74  ,aud_g26
06:37:52  75  ,aud_g27
06:37:52  76  ,aud_g28
06:37:52  77  ,aud_g29
06:37:52  78  ,aud_g30
06:37:52  79  ,aud_g31
06:37:52  80  ,aud_g32
06:37:52  81  ,aud_g33
06:37:52  82  ,aud_g34
06:37:52  83  ,aud_g35
06:37:52  84  ,aud_g36
06:37:52  85  ,aud_g37
06:37:52  86  ,aud_g38
06:37:52  87  ,aud_g39
06:37:52  88  ,aud_g40
06:37:52  89  ,aud_g41
06:37:52  90  ,gbp_g00
06:37:52  91  ,gbp_g01
06:37:52  92  ,gbp_g02
06:37:52  93  ,gbp_g03
06:37:52  94  ,gbp_g04
06:37:52  95  ,gbp_g05
06:37:52  96  ,gbp_g06
06:37:52  97  ,gbp_g07
06:37:52  98  ,gbp_g08
06:37:52  99  ,gbp_g09
06:37:52 100  ,gbp_g10
06:37:52 101  ,gbp_g11
06:37:52 102  ,gbp_g12
06:37:52 103  ,gbp_g13
06:37:52 104  ,gbp_g14
06:37:52 105  ,gbp_g15
06:37:52 106  ,gbp_g16
06:37:52 107  ,gbp_g17
06:37:52 108  ,gbp_g18
06:37:52 109  ,gbp_g19
06:37:52 110  ,gbp_g20
06:37:52 111  ,gbp_g21
06:37:52 112  ,gbp_g22
06:37:52 113  ,gbp_g23
06:37:52 114  ,gbp_g24
06:37:52 115  ,gbp_g25
06:37:52 116  ,gbp_g26
06:37:52 117  ,gbp_g27
06:37:52 118  ,gbp_g28
06:37:52 119  ,gbp_g29
06:37:52 120  ,gbp_g30
06:37:52 121  ,gbp_g31
06:37:52 122  ,gbp_g32
06:37:52 123  ,gbp_g33
06:37:52 124  ,gbp_g34
06:37:52 125  ,gbp_g35
06:37:52 126  ,gbp_g36
06:37:52 127  ,gbp_g37
06:37:52 128  ,gbp_g38
06:37:52 129  ,gbp_g39
06:37:52 130  ,gbp_g40
06:37:52 131  ,gbp_g41
06:37:52 132  ,jpy_g00
06:37:52 133  ,jpy_g01
06:37:52 134  ,jpy_g02
06:37:52 135  ,jpy_g03
06:37:52 136  ,jpy_g04
06:37:52 137  ,jpy_g05
06:37:52 138  ,jpy_g06
06:37:52 139  ,jpy_g07
06:37:52 140  ,jpy_g08
06:37:52 141  ,jpy_g09
06:37:52 142  ,jpy_g10
06:37:52 143  ,jpy_g11
06:37:52 144  ,jpy_g12
06:37:52 145  ,jpy_g13
06:37:52 146  ,jpy_g14
06:37:52 147  ,jpy_g15
06:37:52 148  ,jpy_g16
06:37:52 149  ,jpy_g17
06:37:52 150  ,jpy_g18
06:37:52 151  ,jpy_g19
06:37:52 152  ,jpy_g20
06:37:52 153  ,jpy_g21
06:37:52 154  ,jpy_g22
06:37:52 155  ,jpy_g23
06:37:52 156  ,jpy_g24
06:37:52 157  ,jpy_g25
06:37:52 158  ,jpy_g26
06:37:52 159  ,jpy_g27
06:37:52 160  ,jpy_g28
06:37:52 161  ,jpy_g29
06:37:52 162  ,jpy_g30
06:37:52 163  ,jpy_g31
06:37:52 164  ,jpy_g32
06:37:52 165  ,jpy_g33
06:37:52 166  ,jpy_g34
06:37:52 167  ,jpy_g35
06:37:52 168  ,jpy_g36
06:37:52 169  ,jpy_g37
06:37:52 170  ,jpy_g38
06:37:52 171  ,jpy_g39
06:37:52 172  ,jpy_g40
06:37:52 173  ,jpy_g41
06:37:52 174  ,cad_g00
06:37:52 175  ,cad_g01
06:37:52 176  ,cad_g02
06:37:52 177  ,cad_g03
06:37:52 178  ,cad_g04
06:37:52 179  ,cad_g05
06:37:52 180  ,cad_g06
06:37:52 181  ,cad_g07
06:37:52 182  ,cad_g08
06:37:52 183  ,cad_g09
06:37:52 184  ,cad_g10
06:37:52 185  ,cad_g11
06:37:52 186  ,cad_g12
06:37:52 187  ,cad_g13
06:37:52 188  ,cad_g14
06:37:52 189  ,cad_g15
06:37:52 190  ,cad_g16
06:37:52 191  ,cad_g17
06:37:52 192  ,cad_g18
06:37:52 193  ,cad_g19
06:37:52 194  ,cad_g20
06:37:52 195  ,cad_g21
06:37:52 196  ,cad_g22
06:37:52 197  ,cad_g23
06:37:52 198  ,cad_g24
06:37:52 199  ,cad_g25
06:37:52 200  ,cad_g26
06:37:52 201  ,cad_g27
06:37:52 202  ,cad_g28
06:37:52 203  ,cad_g29
06:37:52 204  ,cad_g30
06:37:52 205  ,cad_g31
06:37:52 206  ,cad_g32
06:37:52 207  ,cad_g33
06:37:52 208  ,cad_g34
06:37:52 209  ,cad_g35
06:37:52 210  ,cad_g36
06:37:52 211  ,cad_g37
06:37:52 212  ,cad_g38
06:37:52 213  ,cad_g39
06:37:52 214  ,cad_g40
06:37:52 215  ,cad_g41
06:37:52 216  ,chf_g00
06:37:52 217  ,chf_g01
06:37:52 218  ,chf_g02
06:37:52 219  ,chf_g03
06:37:52 220  ,chf_g04
06:37:52 221  ,chf_g05
06:37:52 222  ,chf_g06
06:37:52 223  ,chf_g07
06:37:52 224  ,chf_g08
06:37:52 225  ,chf_g09
06:37:52 226  ,chf_g10
06:37:52 227  ,chf_g11
06:37:52 228  ,chf_g12
06:37:52 229  ,chf_g13
06:37:52 230  ,chf_g14
06:37:52 231  ,chf_g15
06:37:52 232  ,chf_g16
06:37:52 233  ,chf_g17
06:37:52 234  ,chf_g18
06:37:52 235  ,chf_g19
06:37:52 236  ,chf_g20
06:37:52 237  ,chf_g21
06:37:52 238  ,chf_g22
06:37:52 239  ,chf_g23
06:37:52 240  ,chf_g24
06:37:52 241  ,chf_g25
06:37:52 242  ,chf_g26
06:37:52 243  ,chf_g27
06:37:52 244  ,chf_g28
06:37:52 245  ,chf_g29
06:37:52 246  ,chf_g30
06:37:52 247  ,chf_g31
06:37:52 248  ,chf_g32
06:37:52 249  ,chf_g33
06:37:52 250  ,chf_g34
06:37:52 251  ,chf_g35
06:37:52 252  ,chf_g36
06:37:52 253  ,chf_g37
06:37:52 254  ,chf_g38
06:37:52 255  ,chf_g39
06:37:52 256  ,chf_g40
06:37:52 257  ,chf_g41
06:37:52 258  FROM aud_ms6 m
06:37:52 259  WHERE gatt IN('nup','up')
06:37:52 260  AND 1+m.ydate < '&1'||' '||'&2'
06:37:52 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-27'||' '||'06:25:00'

View created.

Elapsed: 00:00:00.15
06:37:52 SQL> 
06:37:52 SQL> -- rpt
06:37:52 SQL> 
06:37:52 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
06:37:52   2  
06:37:52 SQL> SELECT MAX(prdate) FROM bme
06:37:52   2  
06:37:52 SQL> -- Now build model from bme and score sme
06:37:52 SQL> @score1.sql
06:37:52 SQL> -- score1.sql
06:37:52 SQL> 
06:37:52 SQL> -- Does the 1st SVM score
06:37:52 SQL> 
06:37:52 SQL> -- Fill up svmc_apply_prep
06:37:52 SQL> @score.sql
06:37:52 SQL> --
06:37:52 SQL> -- score.sql
06:37:52 SQL> --
06:37:52 SQL> 
06:37:52 SQL> -- usage: score.sql
06:37:52 SQL> 
06:37:52 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:37:52 SQL> 
06:37:52 SQL> DEFINE target	= 'gatt'
06:37:52 SQL> DEFINE model_name = 'forex14'
06:37:52 SQL> DEFINE bldtable	= 'bme'
06:37:52 SQL> DEFINE scoretable = 'sme'
06:37:52 SQL> DEFINE case_id	= 'prdate'
06:37:52 SQL> 
06:37:52 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:37:52 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:37:52 SQL> 
06:37:52 SQL> -- Builds an SVM model using pl/sql.
06:37:52 SQL> 
06:37:52 SQL> -----------------------------------------------------------------------
06:37:52 SQL> --			    BUILD THE MODEL
06:37:52 SQL> -----------------------------------------------------------------------
06:37:52 SQL> 
06:37:52 SQL> -- Cleanup old build data preparation objects for repeat runs
06:37:52 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
06:37:52 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:37:52 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
06:37:52 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
06:37:52 SQL> 
06:37:52 SQL> 
06:37:52 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:37:52 SQL> --
06:37:52 SQL> -- DROP	TABLE svmc_settings ;
06:37:52 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:37:52 SQL> -- DELETE svmc_settings;
06:37:52 SQL> 
06:37:52 SQL> -- The default classification algorithm is Naive Bayes. So override
06:37:52 SQL> -- this choice to SVM using a settings table.
06:37:52 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:37:52 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:37:52 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:37:52 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:37:52 SQL> -- models.
06:37:52 SQL> --
06:37:52 SQL> 
06:37:52 SQL> -- Do this once and then comment it out.
06:37:52 SQL> -- That makes script go faster.
06:37:52 SQL> -- BEGIN
06:37:52 SQL> -- -- Populate settings table
06:37:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:37:52 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:37:52 SQL> --
06:37:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:37:52 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:37:52 SQL> --
06:37:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:37:52 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:37:52 SQL> --   COMMIT;
06:37:52 SQL> -- END;
06:37:52 SQL> -- /
06:37:52 SQL> 
06:37:52 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:37:52 SQL> 
06:37:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:37:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:37:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:37:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:37:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:37:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:37:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:37:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:37:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:37:52 SQL> 
06:37:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:37:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:37:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:37:52 SQL> 
06:37:52 SQL> --------------------------------
06:37:52 SQL> -- PREPARE BUILD (TRAINING) DATA
06:37:52 SQL> --
06:37:52 SQL> 
06:37:52 SQL> -- 1. Missing Value treatment for all Predictors and
06:37:52 SQL> -- 2. Outlier Treatment and
06:37:52 SQL> -- 3. Normalization are performed below.
06:37:52 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:37:52 SQL> --    normalized here.
06:37:52 SQL> 
06:37:52 SQL> BEGIN
06:37:52   2  	-- Perform missing value treatment for all predictors
06:37:52   3  	-- create miss tables
06:37:52   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:37:52   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:37:52   6  
06:37:52   7  	-- populate miss tables
06:37:52   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:37:52   9  	  miss_table_name => 'svmc_miss_num',
06:37:52  10  	  data_table_name => '&bldtable',
06:37:52  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:37:52  12  
06:37:52  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:37:52  14  	  miss_table_name => 'svmc_miss_cat',
06:37:52  15  	  data_table_name => '&bldtable',
06:37:52  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:37:52  17  
06:37:52  18  	-- xform input data to replace missing values
06:37:52  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:37:52  20  	  miss_table_name => 'svmc_miss_num',
06:37:52  21  	  data_table_name => '&bldtable',
06:37:52  22  	  xform_view_name => 'xformed_build_miss_num');
06:37:52  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:37:52  24  	  miss_table_name => 'svmc_miss_cat',
06:37:52  25  	  data_table_name => '&bldtable',
06:37:52  26  	  xform_view_name => 'xformed_build_miss_cat');
06:37:52  27  
06:37:52  28  	-- Perform outlier treatment.
06:37:52  29  	-- create clip table
06:37:52  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:37:52  31  
06:37:52  32  	-- populate clip table
06:37:52  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:37:52  34  	  clip_table_name => 'svmc_clip',
06:37:52  35  	  data_table_name => '&bldtable',
06:37:52  36  	  tail_frac	  => 0.025,
06:37:52  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:37:52  38  
06:37:52  39  	-- xform input data to winsorized data
06:37:52  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:37:52  41  	  clip_table_name => 'svmc_clip',
06:37:52  42  	  data_table_name => '&bldtable',
06:37:52  43  	  xform_view_name => 'svmc_winsor');
06:37:52  44  
06:37:52  45  	-- create normalization table
06:37:52  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:37:52  47  
06:37:52  48  	-- populate normalization table based on winsorized data
06:37:52  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:37:52  50  	  norm_table_name => 'svmc_norm',
06:37:52  51  	  data_table_name => 'svmc_winsor',
06:37:52  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:37:52  53  
06:37:52  54  	-- normalize the original data
06:37:52  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:37:52  56  	  norm_table_name => 'svmc_norm',
06:37:52  57  	  data_table_name => '&bldtable',
06:37:52  58  	  xform_view_name => 'svmc_build_prep');
06:37:52  59  END;
06:37:52  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.41
06:38:09 SQL> 
06:38:09 SQL> ---------------------
06:38:09 SQL> -- CREATE A NEW MODEL
06:38:09 SQL> --
06:38:09 SQL> -- Cleanup old model with the same name for repeat runs
06:38:09 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:38:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:38:09   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
06:38:11 SQL> 
06:38:11 SQL> -- Build a new SVM Model
06:38:11 SQL> BEGIN
06:38:11   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:38:11   3  	  model_name	      => '&model_name',
06:38:11   4  	  mining_function     => dbms_data_mining.classification,
06:38:11   5  	  data_table_name     => 'svmc_build_prep',
06:38:11   6  	  case_id_column_name => '&case_id',
06:38:11   7  	  target_column_name  => '&target',
06:38:11   8  	  settings_table_name => 'svmc_settings');
06:38:11   9  END;
06:38:11  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.83
06:38:36 SQL> 
06:38:36 SQL> -----------------------------------------------------------------------
06:38:36 SQL> --			       APPLY/score THE MODEL
06:38:36 SQL> -----------------------------------------------------------------------
06:38:36 SQL> 
06:38:36 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:38:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:38:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:38:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:38:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:38:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:38:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:38:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:38:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:38:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:38:37 SQL> -----------------------
06:38:37 SQL> -- PREPARE SCORING DATA
06:38:37 SQL> --
06:38:37 SQL> -- If the data for model creation has been prepared, then the data
06:38:37 SQL> -- to be scored using the model must be prepared in the same manner
06:38:37 SQL> -- in order to obtain meaningful results.
06:38:37 SQL> --
06:38:37 SQL> -- 1. Missing Value treatment for all Predictors and
06:38:37 SQL> -- 2. Normalization
06:38:37 SQL> -- No outlier treatment will be performed during test and apply. The
06:38:37 SQL> -- normalization step is sufficient, since the normalization parameters
06:38:37 SQL> -- already capture the effects of outlier treatment done with build data.
06:38:37 SQL> --
06:38:37 SQL> BEGIN
06:38:37   2  	-- Xform Test data to replace missing values
06:38:37   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:38:37   4  	  miss_table_name => 'svmc_miss_num',
06:38:37   5  	  data_table_name => '&scoretable',
06:38:37   6  	  xform_view_name => 'xformed_apply_miss_num');
06:38:37   7  
06:38:37   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:38:37   9  	  miss_table_name => 'svmc_miss_cat',
06:38:37  10  	  data_table_name => '&scoretable',
06:38:37  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:38:37  12  
06:38:37  13  	-- Normalize the data to be scored
06:38:37  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:38:37  15  	  norm_table_name => 'svmc_norm',
06:38:37  16  	  data_table_name => '&scoretable',
06:38:37  17  	  xform_view_name => 'svmc_apply_prep');
06:38:37  18  END;
06:38:37  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.14
06:38:38 SQL> 
06:38:38 SQL> -- Use same model_name used in score.sql
06:38:38 SQL> DEFINE model_name = 'forex14'
06:38:38 SQL> 
06:38:38 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
06:38:38 SQL> 
06:38:38 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
06:38:38 SQL> 
06:38:38 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
06:38:38   2  SELECT
06:38:38   3  prdate
06:38:38   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:38:38   5  ,sysdate
06:38:38   6  ,SUBSTR(prdate,1,3)pair
06:38:38   7  ,SUBSTR(prdate,4,19)ydate
06:38:38   8  FROM svmc_apply_prep
06:38:38   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
06:38:38 SQL> @aud_score1day.sql  2010-12-27 06:15:00
06:38:38 SQL> --
06:38:38 SQL> -- aud_score1day.sql
06:38:38 SQL> --
06:38:38 SQL> 
06:38:38 SQL> CREATE OR REPLACE VIEW sme AS
06:38:38   2  SELECT
06:38:38   3  'aud'||m.ydate prdate
06:38:38   4  ,NULL gatt
06:38:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:38:38   6  ,eur_g00
06:38:38   7  ,eur_g01
06:38:38   8  ,eur_g02
06:38:38   9  ,eur_g03
06:38:38  10  ,eur_g04
06:38:38  11  ,eur_g05
06:38:38  12  ,eur_g06
06:38:38  13  ,eur_g07
06:38:38  14  ,eur_g08
06:38:38  15  ,eur_g09
06:38:38  16  ,eur_g10
06:38:38  17  ,eur_g11
06:38:38  18  ,eur_g12
06:38:38  19  ,eur_g13
06:38:38  20  ,eur_g14
06:38:38  21  ,eur_g15
06:38:38  22  ,eur_g16
06:38:38  23  ,eur_g17
06:38:38  24  ,eur_g18
06:38:38  25  ,eur_g19
06:38:38  26  ,eur_g20
06:38:38  27  ,eur_g21
06:38:38  28  ,eur_g22
06:38:38  29  ,eur_g23
06:38:38  30  ,eur_g24
06:38:38  31  ,eur_g25
06:38:38  32  ,eur_g26
06:38:38  33  ,eur_g27
06:38:38  34  ,eur_g28
06:38:38  35  ,eur_g29
06:38:38  36  ,eur_g30
06:38:38  37  ,eur_g31
06:38:38  38  ,eur_g32
06:38:38  39  ,eur_g33
06:38:38  40  ,eur_g34
06:38:38  41  ,eur_g35
06:38:38  42  ,eur_g36
06:38:38  43  ,eur_g37
06:38:38  44  ,eur_g38
06:38:38  45  ,eur_g39
06:38:38  46  ,eur_g40
06:38:38  47  ,eur_g41
06:38:38  48  ,aud_g00
06:38:38  49  ,aud_g01
06:38:38  50  ,aud_g02
06:38:38  51  ,aud_g03
06:38:38  52  ,aud_g04
06:38:38  53  ,aud_g05
06:38:38  54  ,aud_g06
06:38:38  55  ,aud_g07
06:38:38  56  ,aud_g08
06:38:38  57  ,aud_g09
06:38:38  58  ,aud_g10
06:38:38  59  ,aud_g11
06:38:38  60  ,aud_g12
06:38:38  61  ,aud_g13
06:38:38  62  ,aud_g14
06:38:38  63  ,aud_g15
06:38:38  64  ,aud_g16
06:38:38  65  ,aud_g17
06:38:38  66  ,aud_g18
06:38:38  67  ,aud_g19
06:38:38  68  ,aud_g20
06:38:38  69  ,aud_g21
06:38:38  70  ,aud_g22
06:38:38  71  ,aud_g23
06:38:38  72  ,aud_g24
06:38:38  73  ,aud_g25
06:38:38  74  ,aud_g26
06:38:38  75  ,aud_g27
06:38:38  76  ,aud_g28
06:38:38  77  ,aud_g29
06:38:38  78  ,aud_g30
06:38:38  79  ,aud_g31
06:38:38  80  ,aud_g32
06:38:38  81  ,aud_g33
06:38:38  82  ,aud_g34
06:38:38  83  ,aud_g35
06:38:38  84  ,aud_g36
06:38:38  85  ,aud_g37
06:38:38  86  ,aud_g38
06:38:38  87  ,aud_g39
06:38:38  88  ,aud_g40
06:38:38  89  ,aud_g41
06:38:38  90  ,gbp_g00
06:38:38  91  ,gbp_g01
06:38:38  92  ,gbp_g02
06:38:38  93  ,gbp_g03
06:38:38  94  ,gbp_g04
06:38:38  95  ,gbp_g05
06:38:38  96  ,gbp_g06
06:38:38  97  ,gbp_g07
06:38:38  98  ,gbp_g08
06:38:38  99  ,gbp_g09
06:38:38 100  ,gbp_g10
06:38:38 101  ,gbp_g11
06:38:38 102  ,gbp_g12
06:38:38 103  ,gbp_g13
06:38:38 104  ,gbp_g14
06:38:38 105  ,gbp_g15
06:38:38 106  ,gbp_g16
06:38:38 107  ,gbp_g17
06:38:38 108  ,gbp_g18
06:38:38 109  ,gbp_g19
06:38:38 110  ,gbp_g20
06:38:38 111  ,gbp_g21
06:38:38 112  ,gbp_g22
06:38:38 113  ,gbp_g23
06:38:38 114  ,gbp_g24
06:38:38 115  ,gbp_g25
06:38:38 116  ,gbp_g26
06:38:38 117  ,gbp_g27
06:38:38 118  ,gbp_g28
06:38:38 119  ,gbp_g29
06:38:38 120  ,gbp_g30
06:38:38 121  ,gbp_g31
06:38:38 122  ,gbp_g32
06:38:38 123  ,gbp_g33
06:38:38 124  ,gbp_g34
06:38:38 125  ,gbp_g35
06:38:38 126  ,gbp_g36
06:38:38 127  ,gbp_g37
06:38:38 128  ,gbp_g38
06:38:38 129  ,gbp_g39
06:38:38 130  ,gbp_g40
06:38:38 131  ,gbp_g41
06:38:38 132  ,jpy_g00
06:38:38 133  ,jpy_g01
06:38:38 134  ,jpy_g02
06:38:38 135  ,jpy_g03
06:38:38 136  ,jpy_g04
06:38:38 137  ,jpy_g05
06:38:38 138  ,jpy_g06
06:38:38 139  ,jpy_g07
06:38:38 140  ,jpy_g08
06:38:38 141  ,jpy_g09
06:38:38 142  ,jpy_g10
06:38:38 143  ,jpy_g11
06:38:38 144  ,jpy_g12
06:38:38 145  ,jpy_g13
06:38:38 146  ,jpy_g14
06:38:38 147  ,jpy_g15
06:38:38 148  ,jpy_g16
06:38:38 149  ,jpy_g17
06:38:38 150  ,jpy_g18
06:38:38 151  ,jpy_g19
06:38:38 152  ,jpy_g20
06:38:38 153  ,jpy_g21
06:38:38 154  ,jpy_g22
06:38:38 155  ,jpy_g23
06:38:38 156  ,jpy_g24
06:38:38 157  ,jpy_g25
06:38:38 158  ,jpy_g26
06:38:38 159  ,jpy_g27
06:38:38 160  ,jpy_g28
06:38:38 161  ,jpy_g29
06:38:38 162  ,jpy_g30
06:38:38 163  ,jpy_g31
06:38:38 164  ,jpy_g32
06:38:38 165  ,jpy_g33
06:38:38 166  ,jpy_g34
06:38:38 167  ,jpy_g35
06:38:38 168  ,jpy_g36
06:38:38 169  ,jpy_g37
06:38:38 170  ,jpy_g38
06:38:38 171  ,jpy_g39
06:38:38 172  ,jpy_g40
06:38:38 173  ,jpy_g41
06:38:38 174  ,cad_g00
06:38:38 175  ,cad_g01
06:38:38 176  ,cad_g02
06:38:38 177  ,cad_g03
06:38:38 178  ,cad_g04
06:38:38 179  ,cad_g05
06:38:38 180  ,cad_g06
06:38:38 181  ,cad_g07
06:38:38 182  ,cad_g08
06:38:38 183  ,cad_g09
06:38:38 184  ,cad_g10
06:38:38 185  ,cad_g11
06:38:38 186  ,cad_g12
06:38:38 187  ,cad_g13
06:38:38 188  ,cad_g14
06:38:38 189  ,cad_g15
06:38:38 190  ,cad_g16
06:38:38 191  ,cad_g17
06:38:38 192  ,cad_g18
06:38:38 193  ,cad_g19
06:38:38 194  ,cad_g20
06:38:38 195  ,cad_g21
06:38:38 196  ,cad_g22
06:38:38 197  ,cad_g23
06:38:38 198  ,cad_g24
06:38:38 199  ,cad_g25
06:38:38 200  ,cad_g26
06:38:38 201  ,cad_g27
06:38:38 202  ,cad_g28
06:38:38 203  ,cad_g29
06:38:38 204  ,cad_g30
06:38:38 205  ,cad_g31
06:38:38 206  ,cad_g32
06:38:38 207  ,cad_g33
06:38:38 208  ,cad_g34
06:38:38 209  ,cad_g35
06:38:38 210  ,cad_g36
06:38:38 211  ,cad_g37
06:38:38 212  ,cad_g38
06:38:38 213  ,cad_g39
06:38:38 214  ,cad_g40
06:38:38 215  ,cad_g41
06:38:38 216  ,chf_g00
06:38:38 217  ,chf_g01
06:38:38 218  ,chf_g02
06:38:38 219  ,chf_g03
06:38:38 220  ,chf_g04
06:38:38 221  ,chf_g05
06:38:38 222  ,chf_g06
06:38:38 223  ,chf_g07
06:38:38 224  ,chf_g08
06:38:38 225  ,chf_g09
06:38:38 226  ,chf_g10
06:38:38 227  ,chf_g11
06:38:38 228  ,chf_g12
06:38:38 229  ,chf_g13
06:38:38 230  ,chf_g14
06:38:38 231  ,chf_g15
06:38:38 232  ,chf_g16
06:38:38 233  ,chf_g17
06:38:38 234  ,chf_g18
06:38:38 235  ,chf_g19
06:38:38 236  ,chf_g20
06:38:38 237  ,chf_g21
06:38:38 238  ,chf_g22
06:38:38 239  ,chf_g23
06:38:38 240  ,chf_g24
06:38:38 241  ,chf_g25
06:38:38 242  ,chf_g26
06:38:38 243  ,chf_g27
06:38:38 244  ,chf_g28
06:38:38 245  ,chf_g29
06:38:38 246  ,chf_g30
06:38:38 247  ,chf_g31
06:38:38 248  ,chf_g32
06:38:38 249  ,chf_g33
06:38:38 250  ,chf_g34
06:38:38 251  ,chf_g35
06:38:38 252  ,chf_g36
06:38:38 253  ,chf_g37
06:38:38 254  ,chf_g38
06:38:38 255  ,chf_g39
06:38:38 256  ,chf_g40
06:38:38 257  ,chf_g41
06:38:38 258  FROM aud_ms6 m
06:38:38 259  WHERE m.ydate = '&1'||' '||'&2'
06:38:38 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-27'||' '||'06:15:00'

View created.

Elapsed: 00:00:00.12
06:38:38 SQL> 
06:38:38 SQL> -- rpt
06:38:38 SQL> -- We should see just 1 row:
06:38:38 SQL> 
06:38:38 SQL> SELECT COUNT(prdate) FROM sme
06:38:38   2  
06:38:38 SQL> -- Build the model:
06:38:38 SQL> CREATE OR REPLACE VIEW bme AS
06:38:38   2  SELECT
06:38:38   3  'aud'||m.ydate prdate
06:38:38   4  ,gatt
06:38:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:38:38   6  ,eur_g00
06:38:38   7  ,eur_g01
06:38:38   8  ,eur_g02
06:38:38   9  ,eur_g03
06:38:38  10  ,eur_g04
06:38:38  11  ,eur_g05
06:38:38  12  ,eur_g06
06:38:38  13  ,eur_g07
06:38:38  14  ,eur_g08
06:38:38  15  ,eur_g09
06:38:38  16  ,eur_g10
06:38:38  17  ,eur_g11
06:38:38  18  ,eur_g12
06:38:38  19  ,eur_g13
06:38:38  20  ,eur_g14
06:38:38  21  ,eur_g15
06:38:38  22  ,eur_g16
06:38:38  23  ,eur_g17
06:38:38  24  ,eur_g18
06:38:38  25  ,eur_g19
06:38:38  26  ,eur_g20
06:38:38  27  ,eur_g21
06:38:38  28  ,eur_g22
06:38:38  29  ,eur_g23
06:38:38  30  ,eur_g24
06:38:38  31  ,eur_g25
06:38:38  32  ,eur_g26
06:38:38  33  ,eur_g27
06:38:38  34  ,eur_g28
06:38:38  35  ,eur_g29
06:38:38  36  ,eur_g30
06:38:38  37  ,eur_g31
06:38:38  38  ,eur_g32
06:38:38  39  ,eur_g33
06:38:38  40  ,eur_g34
06:38:38  41  ,eur_g35
06:38:38  42  ,eur_g36
06:38:38  43  ,eur_g37
06:38:38  44  ,eur_g38
06:38:38  45  ,eur_g39
06:38:38  46  ,eur_g40
06:38:38  47  ,eur_g41
06:38:38  48  ,aud_g00
06:38:38  49  ,aud_g01
06:38:38  50  ,aud_g02
06:38:38  51  ,aud_g03
06:38:38  52  ,aud_g04
06:38:38  53  ,aud_g05
06:38:38  54  ,aud_g06
06:38:38  55  ,aud_g07
06:38:38  56  ,aud_g08
06:38:38  57  ,aud_g09
06:38:38  58  ,aud_g10
06:38:38  59  ,aud_g11
06:38:38  60  ,aud_g12
06:38:38  61  ,aud_g13
06:38:38  62  ,aud_g14
06:38:38  63  ,aud_g15
06:38:38  64  ,aud_g16
06:38:38  65  ,aud_g17
06:38:38  66  ,aud_g18
06:38:38  67  ,aud_g19
06:38:38  68  ,aud_g20
06:38:38  69  ,aud_g21
06:38:38  70  ,aud_g22
06:38:38  71  ,aud_g23
06:38:38  72  ,aud_g24
06:38:38  73  ,aud_g25
06:38:38  74  ,aud_g26
06:38:38  75  ,aud_g27
06:38:38  76  ,aud_g28
06:38:38  77  ,aud_g29
06:38:38  78  ,aud_g30
06:38:38  79  ,aud_g31
06:38:38  80  ,aud_g32
06:38:38  81  ,aud_g33
06:38:38  82  ,aud_g34
06:38:38  83  ,aud_g35
06:38:38  84  ,aud_g36
06:38:38  85  ,aud_g37
06:38:38  86  ,aud_g38
06:38:38  87  ,aud_g39
06:38:38  88  ,aud_g40
06:38:38  89  ,aud_g41
06:38:38  90  ,gbp_g00
06:38:38  91  ,gbp_g01
06:38:38  92  ,gbp_g02
06:38:38  93  ,gbp_g03
06:38:38  94  ,gbp_g04
06:38:38  95  ,gbp_g05
06:38:38  96  ,gbp_g06
06:38:38  97  ,gbp_g07
06:38:38  98  ,gbp_g08
06:38:38  99  ,gbp_g09
06:38:38 100  ,gbp_g10
06:38:38 101  ,gbp_g11
06:38:38 102  ,gbp_g12
06:38:38 103  ,gbp_g13
06:38:38 104  ,gbp_g14
06:38:38 105  ,gbp_g15
06:38:38 106  ,gbp_g16
06:38:38 107  ,gbp_g17
06:38:38 108  ,gbp_g18
06:38:38 109  ,gbp_g19
06:38:38 110  ,gbp_g20
06:38:38 111  ,gbp_g21
06:38:38 112  ,gbp_g22
06:38:38 113  ,gbp_g23
06:38:38 114  ,gbp_g24
06:38:38 115  ,gbp_g25
06:38:38 116  ,gbp_g26
06:38:38 117  ,gbp_g27
06:38:38 118  ,gbp_g28
06:38:38 119  ,gbp_g29
06:38:38 120  ,gbp_g30
06:38:38 121  ,gbp_g31
06:38:38 122  ,gbp_g32
06:38:38 123  ,gbp_g33
06:38:38 124  ,gbp_g34
06:38:38 125  ,gbp_g35
06:38:38 126  ,gbp_g36
06:38:38 127  ,gbp_g37
06:38:38 128  ,gbp_g38
06:38:38 129  ,gbp_g39
06:38:38 130  ,gbp_g40
06:38:38 131  ,gbp_g41
06:38:38 132  ,jpy_g00
06:38:38 133  ,jpy_g01
06:38:38 134  ,jpy_g02
06:38:38 135  ,jpy_g03
06:38:38 136  ,jpy_g04
06:38:38 137  ,jpy_g05
06:38:38 138  ,jpy_g06
06:38:38 139  ,jpy_g07
06:38:38 140  ,jpy_g08
06:38:38 141  ,jpy_g09
06:38:38 142  ,jpy_g10
06:38:38 143  ,jpy_g11
06:38:38 144  ,jpy_g12
06:38:38 145  ,jpy_g13
06:38:38 146  ,jpy_g14
06:38:38 147  ,jpy_g15
06:38:38 148  ,jpy_g16
06:38:38 149  ,jpy_g17
06:38:38 150  ,jpy_g18
06:38:38 151  ,jpy_g19
06:38:38 152  ,jpy_g20
06:38:38 153  ,jpy_g21
06:38:38 154  ,jpy_g22
06:38:38 155  ,jpy_g23
06:38:38 156  ,jpy_g24
06:38:38 157  ,jpy_g25
06:38:38 158  ,jpy_g26
06:38:38 159  ,jpy_g27
06:38:38 160  ,jpy_g28
06:38:38 161  ,jpy_g29
06:38:38 162  ,jpy_g30
06:38:38 163  ,jpy_g31
06:38:38 164  ,jpy_g32
06:38:38 165  ,jpy_g33
06:38:38 166  ,jpy_g34
06:38:38 167  ,jpy_g35
06:38:38 168  ,jpy_g36
06:38:38 169  ,jpy_g37
06:38:38 170  ,jpy_g38
06:38:38 171  ,jpy_g39
06:38:38 172  ,jpy_g40
06:38:38 173  ,jpy_g41
06:38:38 174  ,cad_g00
06:38:38 175  ,cad_g01
06:38:38 176  ,cad_g02
06:38:38 177  ,cad_g03
06:38:38 178  ,cad_g04
06:38:38 179  ,cad_g05
06:38:38 180  ,cad_g06
06:38:38 181  ,cad_g07
06:38:38 182  ,cad_g08
06:38:38 183  ,cad_g09
06:38:38 184  ,cad_g10
06:38:38 185  ,cad_g11
06:38:38 186  ,cad_g12
06:38:38 187  ,cad_g13
06:38:38 188  ,cad_g14
06:38:38 189  ,cad_g15
06:38:38 190  ,cad_g16
06:38:38 191  ,cad_g17
06:38:38 192  ,cad_g18
06:38:38 193  ,cad_g19
06:38:38 194  ,cad_g20
06:38:38 195  ,cad_g21
06:38:38 196  ,cad_g22
06:38:38 197  ,cad_g23
06:38:38 198  ,cad_g24
06:38:38 199  ,cad_g25
06:38:38 200  ,cad_g26
06:38:38 201  ,cad_g27
06:38:38 202  ,cad_g28
06:38:38 203  ,cad_g29
06:38:38 204  ,cad_g30
06:38:38 205  ,cad_g31
06:38:38 206  ,cad_g32
06:38:38 207  ,cad_g33
06:38:38 208  ,cad_g34
06:38:38 209  ,cad_g35
06:38:38 210  ,cad_g36
06:38:38 211  ,cad_g37
06:38:38 212  ,cad_g38
06:38:38 213  ,cad_g39
06:38:38 214  ,cad_g40
06:38:38 215  ,cad_g41
06:38:38 216  ,chf_g00
06:38:38 217  ,chf_g01
06:38:38 218  ,chf_g02
06:38:38 219  ,chf_g03
06:38:38 220  ,chf_g04
06:38:38 221  ,chf_g05
06:38:38 222  ,chf_g06
06:38:38 223  ,chf_g07
06:38:38 224  ,chf_g08
06:38:38 225  ,chf_g09
06:38:38 226  ,chf_g10
06:38:38 227  ,chf_g11
06:38:38 228  ,chf_g12
06:38:38 229  ,chf_g13
06:38:38 230  ,chf_g14
06:38:38 231  ,chf_g15
06:38:38 232  ,chf_g16
06:38:38 233  ,chf_g17
06:38:38 234  ,chf_g18
06:38:38 235  ,chf_g19
06:38:38 236  ,chf_g20
06:38:38 237  ,chf_g21
06:38:38 238  ,chf_g22
06:38:38 239  ,chf_g23
06:38:38 240  ,chf_g24
06:38:38 241  ,chf_g25
06:38:38 242  ,chf_g26
06:38:38 243  ,chf_g27
06:38:38 244  ,chf_g28
06:38:38 245  ,chf_g29
06:38:38 246  ,chf_g30
06:38:38 247  ,chf_g31
06:38:38 248  ,chf_g32
06:38:38 249  ,chf_g33
06:38:38 250  ,chf_g34
06:38:38 251  ,chf_g35
06:38:38 252  ,chf_g36
06:38:38 253  ,chf_g37
06:38:38 254  ,chf_g38
06:38:38 255  ,chf_g39
06:38:38 256  ,chf_g40
06:38:38 257  ,chf_g41
06:38:38 258  FROM aud_ms6 m
06:38:38 259  WHERE gatt IN('nup','up')
06:38:38 260  AND 1+m.ydate < '&1'||' '||'&2'
06:38:38 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-27'||' '||'06:15:00'

View created.

Elapsed: 00:00:00.11
06:38:38 SQL> 
06:38:38 SQL> -- rpt
06:38:38 SQL> 
06:38:38 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
06:38:38   2  
06:38:38 SQL> SELECT MAX(prdate) FROM bme
06:38:38   2  
06:38:38 SQL> -- Now build model from bme and score sme
06:38:38 SQL> @score1.sql
06:38:38 SQL> -- score1.sql
06:38:38 SQL> 
06:38:38 SQL> -- Does the 1st SVM score
06:38:38 SQL> 
06:38:38 SQL> -- Fill up svmc_apply_prep
06:38:38 SQL> @score.sql
06:38:38 SQL> --
06:38:38 SQL> -- score.sql
06:38:38 SQL> --
06:38:38 SQL> 
06:38:38 SQL> -- usage: score.sql
06:38:38 SQL> 
06:38:38 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:38:38 SQL> 
06:38:38 SQL> DEFINE target	= 'gatt'
06:38:38 SQL> DEFINE model_name = 'forex14'
06:38:38 SQL> DEFINE bldtable	= 'bme'
06:38:38 SQL> DEFINE scoretable = 'sme'
06:38:38 SQL> DEFINE case_id	= 'prdate'
06:38:38 SQL> 
06:38:38 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:38:38 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:38:38 SQL> 
06:38:38 SQL> -- Builds an SVM model using pl/sql.
06:38:38 SQL> 
06:38:38 SQL> -----------------------------------------------------------------------
06:38:38 SQL> --			    BUILD THE MODEL
06:38:38 SQL> -----------------------------------------------------------------------
06:38:38 SQL> 
06:38:38 SQL> -- Cleanup old build data preparation objects for repeat runs
06:38:38 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
06:38:38 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:38:38 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
06:38:38 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
06:38:38 SQL> 
06:38:38 SQL> 
06:38:38 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:38:38 SQL> --
06:38:38 SQL> -- DROP	TABLE svmc_settings ;
06:38:38 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:38:38 SQL> -- DELETE svmc_settings;
06:38:38 SQL> 
06:38:38 SQL> -- The default classification algorithm is Naive Bayes. So override
06:38:38 SQL> -- this choice to SVM using a settings table.
06:38:38 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:38:38 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:38:38 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:38:38 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:38:38 SQL> -- models.
06:38:38 SQL> --
06:38:38 SQL> 
06:38:38 SQL> -- Do this once and then comment it out.
06:38:38 SQL> -- That makes script go faster.
06:38:38 SQL> -- BEGIN
06:38:38 SQL> -- -- Populate settings table
06:38:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:38:38 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:38:38 SQL> --
06:38:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:38:38 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:38:38 SQL> --
06:38:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:38:38 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:38:38 SQL> --   COMMIT;
06:38:38 SQL> -- END;
06:38:38 SQL> -- /
06:38:38 SQL> 
06:38:38 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:38:38 SQL> 
06:38:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:38:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:38:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:38:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:38:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:38:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:38:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:38:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:38:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
06:38:38 SQL> 
06:38:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:38:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:38:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:38:38 SQL> 
06:38:38 SQL> --------------------------------
06:38:38 SQL> -- PREPARE BUILD (TRAINING) DATA
06:38:38 SQL> --
06:38:38 SQL> 
06:38:38 SQL> -- 1. Missing Value treatment for all Predictors and
06:38:38 SQL> -- 2. Outlier Treatment and
06:38:38 SQL> -- 3. Normalization are performed below.
06:38:38 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:38:38 SQL> --    normalized here.
06:38:38 SQL> 
06:38:38 SQL> BEGIN
06:38:38   2  	-- Perform missing value treatment for all predictors
06:38:38   3  	-- create miss tables
06:38:38   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:38:38   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:38:38   6  
06:38:38   7  	-- populate miss tables
06:38:38   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:38:38   9  	  miss_table_name => 'svmc_miss_num',
06:38:38  10  	  data_table_name => '&bldtable',
06:38:38  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:38:38  12  
06:38:38  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:38:38  14  	  miss_table_name => 'svmc_miss_cat',
06:38:38  15  	  data_table_name => '&bldtable',
06:38:38  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:38:38  17  
06:38:38  18  	-- xform input data to replace missing values
06:38:38  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:38:38  20  	  miss_table_name => 'svmc_miss_num',
06:38:38  21  	  data_table_name => '&bldtable',
06:38:38  22  	  xform_view_name => 'xformed_build_miss_num');
06:38:38  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:38:38  24  	  miss_table_name => 'svmc_miss_cat',
06:38:38  25  	  data_table_name => '&bldtable',
06:38:38  26  	  xform_view_name => 'xformed_build_miss_cat');
06:38:38  27  
06:38:38  28  	-- Perform outlier treatment.
06:38:38  29  	-- create clip table
06:38:38  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:38:38  31  
06:38:38  32  	-- populate clip table
06:38:38  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:38:38  34  	  clip_table_name => 'svmc_clip',
06:38:38  35  	  data_table_name => '&bldtable',
06:38:38  36  	  tail_frac	  => 0.025,
06:38:38  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:38:38  38  
06:38:38  39  	-- xform input data to winsorized data
06:38:38  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:38:38  41  	  clip_table_name => 'svmc_clip',
06:38:38  42  	  data_table_name => '&bldtable',
06:38:38  43  	  xform_view_name => 'svmc_winsor');
06:38:38  44  
06:38:38  45  	-- create normalization table
06:38:38  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:38:38  47  
06:38:38  48  	-- populate normalization table based on winsorized data
06:38:38  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:38:38  50  	  norm_table_name => 'svmc_norm',
06:38:38  51  	  data_table_name => 'svmc_winsor',
06:38:38  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:38:38  53  
06:38:38  54  	-- normalize the original data
06:38:38  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:38:38  56  	  norm_table_name => 'svmc_norm',
06:38:38  57  	  data_table_name => '&bldtable',
06:38:38  58  	  xform_view_name => 'svmc_build_prep');
06:38:38  59  END;
06:38:38  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.30
06:38:56 SQL> 
06:38:56 SQL> ---------------------
06:38:56 SQL> -- CREATE A NEW MODEL
06:38:56 SQL> --
06:38:56 SQL> -- Cleanup old model with the same name for repeat runs
06:38:56 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:38:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:38:56   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.98
06:38:57 SQL> 
06:38:57 SQL> -- Build a new SVM Model
06:38:57 SQL> BEGIN
06:38:57   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:38:57   3  	  model_name	      => '&model_name',
06:38:57   4  	  mining_function     => dbms_data_mining.classification,
06:38:57   5  	  data_table_name     => 'svmc_build_prep',
06:38:57   6  	  case_id_column_name => '&case_id',
06:38:57   7  	  target_column_name  => '&target',
06:38:57   8  	  settings_table_name => 'svmc_settings');
06:38:57   9  END;
06:38:57  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.20
06:39:24 SQL> 
06:39:24 SQL> -----------------------------------------------------------------------
06:39:24 SQL> --			       APPLY/score THE MODEL
06:39:24 SQL> -----------------------------------------------------------------------
06:39:24 SQL> 
06:39:24 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:39:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:39:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:39:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:39:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:39:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:39:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:39:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:39:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:39:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:39:24 SQL> -----------------------
06:39:24 SQL> -- PREPARE SCORING DATA
06:39:24 SQL> --
06:39:24 SQL> -- If the data for model creation has been prepared, then the data
06:39:24 SQL> -- to be scored using the model must be prepared in the same manner
06:39:24 SQL> -- in order to obtain meaningful results.
06:39:24 SQL> --
06:39:24 SQL> -- 1. Missing Value treatment for all Predictors and
06:39:24 SQL> -- 2. Normalization
06:39:24 SQL> -- No outlier treatment will be performed during test and apply. The
06:39:24 SQL> -- normalization step is sufficient, since the normalization parameters
06:39:24 SQL> -- already capture the effects of outlier treatment done with build data.
06:39:24 SQL> --
06:39:24 SQL> BEGIN
06:39:24   2  	-- Xform Test data to replace missing values
06:39:24   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:39:24   4  	  miss_table_name => 'svmc_miss_num',
06:39:24   5  	  data_table_name => '&scoretable',
06:39:24   6  	  xform_view_name => 'xformed_apply_miss_num');
06:39:24   7  
06:39:24   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:39:24   9  	  miss_table_name => 'svmc_miss_cat',
06:39:24  10  	  data_table_name => '&scoretable',
06:39:24  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:39:24  12  
06:39:24  13  	-- Normalize the data to be scored
06:39:24  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:39:24  15  	  norm_table_name => 'svmc_norm',
06:39:24  16  	  data_table_name => '&scoretable',
06:39:24  17  	  xform_view_name => 'svmc_apply_prep');
06:39:24  18  END;
06:39:24  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
06:39:25 SQL> 
06:39:25 SQL> -- Use same model_name used in score.sql
06:39:25 SQL> DEFINE model_name = 'forex14'
06:39:25 SQL> 
06:39:25 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
06:39:25 SQL> 
06:39:25 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
06:39:25 SQL> 
06:39:25 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
06:39:25   2  SELECT
06:39:25   3  prdate
06:39:25   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:39:25   5  ,sysdate
06:39:25   6  ,SUBSTR(prdate,1,3)pair
06:39:25   7  ,SUBSTR(prdate,4,19)ydate
06:39:25   8  FROM svmc_apply_prep
06:39:25   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
06:39:26 SQL> @aud_score1day_gattn.sql	2010-12-27 06:25:00
06:39:26 SQL> --
06:39:26 SQL> -- aud_score1day_gattn.sql
06:39:26 SQL> --
06:39:26 SQL> 
06:39:26 SQL> CREATE OR REPLACE VIEW sme AS
06:39:26   2  SELECT
06:39:26   3  'aud'||m.ydate prdate
06:39:26   4  ,NULL gattn
06:39:26   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:39:26   6  ,eur_g00
06:39:26   7  ,eur_g01
06:39:26   8  ,eur_g02
06:39:26   9  ,eur_g03
06:39:26  10  ,eur_g04
06:39:26  11  ,eur_g05
06:39:26  12  ,eur_g06
06:39:26  13  ,eur_g07
06:39:26  14  ,eur_g08
06:39:26  15  ,eur_g09
06:39:26  16  ,eur_g10
06:39:26  17  ,eur_g11
06:39:26  18  ,eur_g12
06:39:26  19  ,eur_g13
06:39:26  20  ,eur_g14
06:39:26  21  ,eur_g15
06:39:26  22  ,eur_g16
06:39:26  23  ,eur_g17
06:39:26  24  ,eur_g18
06:39:26  25  ,eur_g19
06:39:26  26  ,eur_g20
06:39:26  27  ,eur_g21
06:39:26  28  ,eur_g22
06:39:26  29  ,eur_g23
06:39:26  30  ,eur_g24
06:39:26  31  ,eur_g25
06:39:26  32  ,eur_g26
06:39:26  33  ,eur_g27
06:39:26  34  ,eur_g28
06:39:26  35  ,eur_g29
06:39:26  36  ,eur_g30
06:39:26  37  ,eur_g31
06:39:26  38  ,eur_g32
06:39:26  39  ,eur_g33
06:39:26  40  ,eur_g34
06:39:26  41  ,eur_g35
06:39:26  42  ,eur_g36
06:39:26  43  ,eur_g37
06:39:26  44  ,eur_g38
06:39:26  45  ,eur_g39
06:39:26  46  ,eur_g40
06:39:26  47  ,eur_g41
06:39:26  48  ,aud_g00
06:39:26  49  ,aud_g01
06:39:26  50  ,aud_g02
06:39:26  51  ,aud_g03
06:39:26  52  ,aud_g04
06:39:26  53  ,aud_g05
06:39:26  54  ,aud_g06
06:39:26  55  ,aud_g07
06:39:26  56  ,aud_g08
06:39:26  57  ,aud_g09
06:39:26  58  ,aud_g10
06:39:26  59  ,aud_g11
06:39:26  60  ,aud_g12
06:39:26  61  ,aud_g13
06:39:26  62  ,aud_g14
06:39:26  63  ,aud_g15
06:39:26  64  ,aud_g16
06:39:26  65  ,aud_g17
06:39:26  66  ,aud_g18
06:39:26  67  ,aud_g19
06:39:26  68  ,aud_g20
06:39:26  69  ,aud_g21
06:39:26  70  ,aud_g22
06:39:26  71  ,aud_g23
06:39:26  72  ,aud_g24
06:39:26  73  ,aud_g25
06:39:26  74  ,aud_g26
06:39:26  75  ,aud_g27
06:39:26  76  ,aud_g28
06:39:26  77  ,aud_g29
06:39:26  78  ,aud_g30
06:39:26  79  ,aud_g31
06:39:26  80  ,aud_g32
06:39:26  81  ,aud_g33
06:39:26  82  ,aud_g34
06:39:26  83  ,aud_g35
06:39:26  84  ,aud_g36
06:39:26  85  ,aud_g37
06:39:26  86  ,aud_g38
06:39:26  87  ,aud_g39
06:39:26  88  ,aud_g40
06:39:26  89  ,aud_g41
06:39:26  90  ,gbp_g00
06:39:26  91  ,gbp_g01
06:39:26  92  ,gbp_g02
06:39:26  93  ,gbp_g03
06:39:26  94  ,gbp_g04
06:39:26  95  ,gbp_g05
06:39:26  96  ,gbp_g06
06:39:26  97  ,gbp_g07
06:39:26  98  ,gbp_g08
06:39:26  99  ,gbp_g09
06:39:26 100  ,gbp_g10
06:39:26 101  ,gbp_g11
06:39:26 102  ,gbp_g12
06:39:26 103  ,gbp_g13
06:39:26 104  ,gbp_g14
06:39:26 105  ,gbp_g15
06:39:26 106  ,gbp_g16
06:39:26 107  ,gbp_g17
06:39:26 108  ,gbp_g18
06:39:26 109  ,gbp_g19
06:39:26 110  ,gbp_g20
06:39:26 111  ,gbp_g21
06:39:26 112  ,gbp_g22
06:39:26 113  ,gbp_g23
06:39:26 114  ,gbp_g24
06:39:26 115  ,gbp_g25
06:39:26 116  ,gbp_g26
06:39:26 117  ,gbp_g27
06:39:26 118  ,gbp_g28
06:39:26 119  ,gbp_g29
06:39:26 120  ,gbp_g30
06:39:26 121  ,gbp_g31
06:39:26 122  ,gbp_g32
06:39:26 123  ,gbp_g33
06:39:26 124  ,gbp_g34
06:39:26 125  ,gbp_g35
06:39:26 126  ,gbp_g36
06:39:26 127  ,gbp_g37
06:39:26 128  ,gbp_g38
06:39:26 129  ,gbp_g39
06:39:26 130  ,gbp_g40
06:39:26 131  ,gbp_g41
06:39:26 132  ,jpy_g00
06:39:26 133  ,jpy_g01
06:39:26 134  ,jpy_g02
06:39:26 135  ,jpy_g03
06:39:26 136  ,jpy_g04
06:39:26 137  ,jpy_g05
06:39:26 138  ,jpy_g06
06:39:26 139  ,jpy_g07
06:39:26 140  ,jpy_g08
06:39:26 141  ,jpy_g09
06:39:26 142  ,jpy_g10
06:39:26 143  ,jpy_g11
06:39:26 144  ,jpy_g12
06:39:26 145  ,jpy_g13
06:39:26 146  ,jpy_g14
06:39:26 147  ,jpy_g15
06:39:26 148  ,jpy_g16
06:39:26 149  ,jpy_g17
06:39:26 150  ,jpy_g18
06:39:26 151  ,jpy_g19
06:39:26 152  ,jpy_g20
06:39:26 153  ,jpy_g21
06:39:26 154  ,jpy_g22
06:39:26 155  ,jpy_g23
06:39:26 156  ,jpy_g24
06:39:26 157  ,jpy_g25
06:39:26 158  ,jpy_g26
06:39:26 159  ,jpy_g27
06:39:26 160  ,jpy_g28
06:39:26 161  ,jpy_g29
06:39:26 162  ,jpy_g30
06:39:26 163  ,jpy_g31
06:39:26 164  ,jpy_g32
06:39:26 165  ,jpy_g33
06:39:26 166  ,jpy_g34
06:39:26 167  ,jpy_g35
06:39:26 168  ,jpy_g36
06:39:26 169  ,jpy_g37
06:39:26 170  ,jpy_g38
06:39:26 171  ,jpy_g39
06:39:26 172  ,jpy_g40
06:39:26 173  ,jpy_g41
06:39:26 174  ,cad_g00
06:39:26 175  ,cad_g01
06:39:26 176  ,cad_g02
06:39:26 177  ,cad_g03
06:39:26 178  ,cad_g04
06:39:26 179  ,cad_g05
06:39:26 180  ,cad_g06
06:39:26 181  ,cad_g07
06:39:26 182  ,cad_g08
06:39:26 183  ,cad_g09
06:39:26 184  ,cad_g10
06:39:26 185  ,cad_g11
06:39:26 186  ,cad_g12
06:39:26 187  ,cad_g13
06:39:26 188  ,cad_g14
06:39:26 189  ,cad_g15
06:39:26 190  ,cad_g16
06:39:26 191  ,cad_g17
06:39:26 192  ,cad_g18
06:39:26 193  ,cad_g19
06:39:26 194  ,cad_g20
06:39:26 195  ,cad_g21
06:39:26 196  ,cad_g22
06:39:26 197  ,cad_g23
06:39:26 198  ,cad_g24
06:39:26 199  ,cad_g25
06:39:26 200  ,cad_g26
06:39:26 201  ,cad_g27
06:39:26 202  ,cad_g28
06:39:26 203  ,cad_g29
06:39:26 204  ,cad_g30
06:39:26 205  ,cad_g31
06:39:26 206  ,cad_g32
06:39:26 207  ,cad_g33
06:39:26 208  ,cad_g34
06:39:26 209  ,cad_g35
06:39:26 210  ,cad_g36
06:39:26 211  ,cad_g37
06:39:26 212  ,cad_g38
06:39:26 213  ,cad_g39
06:39:26 214  ,cad_g40
06:39:26 215  ,cad_g41
06:39:26 216  ,chf_g00
06:39:26 217  ,chf_g01
06:39:26 218  ,chf_g02
06:39:26 219  ,chf_g03
06:39:26 220  ,chf_g04
06:39:26 221  ,chf_g05
06:39:26 222  ,chf_g06
06:39:26 223  ,chf_g07
06:39:26 224  ,chf_g08
06:39:26 225  ,chf_g09
06:39:26 226  ,chf_g10
06:39:26 227  ,chf_g11
06:39:26 228  ,chf_g12
06:39:26 229  ,chf_g13
06:39:26 230  ,chf_g14
06:39:26 231  ,chf_g15
06:39:26 232  ,chf_g16
06:39:26 233  ,chf_g17
06:39:26 234  ,chf_g18
06:39:26 235  ,chf_g19
06:39:26 236  ,chf_g20
06:39:26 237  ,chf_g21
06:39:26 238  ,chf_g22
06:39:26 239  ,chf_g23
06:39:26 240  ,chf_g24
06:39:26 241  ,chf_g25
06:39:26 242  ,chf_g26
06:39:26 243  ,chf_g27
06:39:26 244  ,chf_g28
06:39:26 245  ,chf_g29
06:39:26 246  ,chf_g30
06:39:26 247  ,chf_g31
06:39:26 248  ,chf_g32
06:39:26 249  ,chf_g33
06:39:26 250  ,chf_g34
06:39:26 251  ,chf_g35
06:39:26 252  ,chf_g36
06:39:26 253  ,chf_g37
06:39:26 254  ,chf_g38
06:39:26 255  ,chf_g39
06:39:26 256  ,chf_g40
06:39:26 257  ,chf_g41
06:39:26 258  FROM aud_ms6 m
06:39:26 259  WHERE m.ydate = '&1'||' '||'&2'
06:39:26 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-27'||' '||'06:25:00'

View created.

Elapsed: 00:00:00.14
06:39:26 SQL> 
06:39:26 SQL> -- rpt
06:39:26 SQL> -- We should see just 1 row:
06:39:26 SQL> 
06:39:26 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
06:39:26 SQL> 
06:39:26 SQL> -- Build the model:
06:39:26 SQL> CREATE OR REPLACE VIEW bme AS
06:39:26   2  SELECT
06:39:26   3  'aud'||m.ydate prdate
06:39:26   4  ,gattn
06:39:26   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:39:26   6  ,eur_g00
06:39:26   7  ,eur_g01
06:39:26   8  ,eur_g02
06:39:26   9  ,eur_g03
06:39:26  10  ,eur_g04
06:39:26  11  ,eur_g05
06:39:26  12  ,eur_g06
06:39:26  13  ,eur_g07
06:39:26  14  ,eur_g08
06:39:26  15  ,eur_g09
06:39:26  16  ,eur_g10
06:39:26  17  ,eur_g11
06:39:26  18  ,eur_g12
06:39:26  19  ,eur_g13
06:39:26  20  ,eur_g14
06:39:26  21  ,eur_g15
06:39:26  22  ,eur_g16
06:39:26  23  ,eur_g17
06:39:26  24  ,eur_g18
06:39:26  25  ,eur_g19
06:39:26  26  ,eur_g20
06:39:26  27  ,eur_g21
06:39:26  28  ,eur_g22
06:39:26  29  ,eur_g23
06:39:26  30  ,eur_g24
06:39:26  31  ,eur_g25
06:39:26  32  ,eur_g26
06:39:26  33  ,eur_g27
06:39:26  34  ,eur_g28
06:39:26  35  ,eur_g29
06:39:26  36  ,eur_g30
06:39:26  37  ,eur_g31
06:39:26  38  ,eur_g32
06:39:26  39  ,eur_g33
06:39:26  40  ,eur_g34
06:39:26  41  ,eur_g35
06:39:26  42  ,eur_g36
06:39:26  43  ,eur_g37
06:39:26  44  ,eur_g38
06:39:26  45  ,eur_g39
06:39:26  46  ,eur_g40
06:39:26  47  ,eur_g41
06:39:26  48  ,aud_g00
06:39:26  49  ,aud_g01
06:39:26  50  ,aud_g02
06:39:26  51  ,aud_g03
06:39:26  52  ,aud_g04
06:39:26  53  ,aud_g05
06:39:26  54  ,aud_g06
06:39:26  55  ,aud_g07
06:39:26  56  ,aud_g08
06:39:26  57  ,aud_g09
06:39:26  58  ,aud_g10
06:39:26  59  ,aud_g11
06:39:26  60  ,aud_g12
06:39:26  61  ,aud_g13
06:39:26  62  ,aud_g14
06:39:26  63  ,aud_g15
06:39:26  64  ,aud_g16
06:39:26  65  ,aud_g17
06:39:26  66  ,aud_g18
06:39:26  67  ,aud_g19
06:39:26  68  ,aud_g20
06:39:26  69  ,aud_g21
06:39:26  70  ,aud_g22
06:39:26  71  ,aud_g23
06:39:26  72  ,aud_g24
06:39:26  73  ,aud_g25
06:39:26  74  ,aud_g26
06:39:26  75  ,aud_g27
06:39:26  76  ,aud_g28
06:39:26  77  ,aud_g29
06:39:26  78  ,aud_g30
06:39:26  79  ,aud_g31
06:39:26  80  ,aud_g32
06:39:26  81  ,aud_g33
06:39:26  82  ,aud_g34
06:39:26  83  ,aud_g35
06:39:26  84  ,aud_g36
06:39:26  85  ,aud_g37
06:39:26  86  ,aud_g38
06:39:26  87  ,aud_g39
06:39:26  88  ,aud_g40
06:39:26  89  ,aud_g41
06:39:26  90  ,gbp_g00
06:39:26  91  ,gbp_g01
06:39:26  92  ,gbp_g02
06:39:26  93  ,gbp_g03
06:39:26  94  ,gbp_g04
06:39:26  95  ,gbp_g05
06:39:26  96  ,gbp_g06
06:39:26  97  ,gbp_g07
06:39:26  98  ,gbp_g08
06:39:26  99  ,gbp_g09
06:39:26 100  ,gbp_g10
06:39:26 101  ,gbp_g11
06:39:26 102  ,gbp_g12
06:39:26 103  ,gbp_g13
06:39:26 104  ,gbp_g14
06:39:26 105  ,gbp_g15
06:39:26 106  ,gbp_g16
06:39:26 107  ,gbp_g17
06:39:26 108  ,gbp_g18
06:39:26 109  ,gbp_g19
06:39:26 110  ,gbp_g20
06:39:26 111  ,gbp_g21
06:39:26 112  ,gbp_g22
06:39:26 113  ,gbp_g23
06:39:26 114  ,gbp_g24
06:39:26 115  ,gbp_g25
06:39:26 116  ,gbp_g26
06:39:26 117  ,gbp_g27
06:39:26 118  ,gbp_g28
06:39:26 119  ,gbp_g29
06:39:26 120  ,gbp_g30
06:39:26 121  ,gbp_g31
06:39:26 122  ,gbp_g32
06:39:26 123  ,gbp_g33
06:39:26 124  ,gbp_g34
06:39:26 125  ,gbp_g35
06:39:26 126  ,gbp_g36
06:39:26 127  ,gbp_g37
06:39:26 128  ,gbp_g38
06:39:26 129  ,gbp_g39
06:39:26 130  ,gbp_g40
06:39:26 131  ,gbp_g41
06:39:26 132  ,jpy_g00
06:39:26 133  ,jpy_g01
06:39:26 134  ,jpy_g02
06:39:26 135  ,jpy_g03
06:39:26 136  ,jpy_g04
06:39:26 137  ,jpy_g05
06:39:26 138  ,jpy_g06
06:39:26 139  ,jpy_g07
06:39:26 140  ,jpy_g08
06:39:26 141  ,jpy_g09
06:39:26 142  ,jpy_g10
06:39:26 143  ,jpy_g11
06:39:26 144  ,jpy_g12
06:39:26 145  ,jpy_g13
06:39:26 146  ,jpy_g14
06:39:26 147  ,jpy_g15
06:39:26 148  ,jpy_g16
06:39:26 149  ,jpy_g17
06:39:26 150  ,jpy_g18
06:39:26 151  ,jpy_g19
06:39:26 152  ,jpy_g20
06:39:26 153  ,jpy_g21
06:39:26 154  ,jpy_g22
06:39:26 155  ,jpy_g23
06:39:26 156  ,jpy_g24
06:39:26 157  ,jpy_g25
06:39:26 158  ,jpy_g26
06:39:26 159  ,jpy_g27
06:39:26 160  ,jpy_g28
06:39:26 161  ,jpy_g29
06:39:26 162  ,jpy_g30
06:39:26 163  ,jpy_g31
06:39:26 164  ,jpy_g32
06:39:26 165  ,jpy_g33
06:39:26 166  ,jpy_g34
06:39:26 167  ,jpy_g35
06:39:26 168  ,jpy_g36
06:39:26 169  ,jpy_g37
06:39:26 170  ,jpy_g38
06:39:26 171  ,jpy_g39
06:39:26 172  ,jpy_g40
06:39:26 173  ,jpy_g41
06:39:26 174  ,cad_g00
06:39:26 175  ,cad_g01
06:39:26 176  ,cad_g02
06:39:26 177  ,cad_g03
06:39:26 178  ,cad_g04
06:39:26 179  ,cad_g05
06:39:26 180  ,cad_g06
06:39:26 181  ,cad_g07
06:39:26 182  ,cad_g08
06:39:26 183  ,cad_g09
06:39:26 184  ,cad_g10
06:39:26 185  ,cad_g11
06:39:26 186  ,cad_g12
06:39:26 187  ,cad_g13
06:39:26 188  ,cad_g14
06:39:26 189  ,cad_g15
06:39:26 190  ,cad_g16
06:39:26 191  ,cad_g17
06:39:26 192  ,cad_g18
06:39:26 193  ,cad_g19
06:39:26 194  ,cad_g20
06:39:26 195  ,cad_g21
06:39:26 196  ,cad_g22
06:39:26 197  ,cad_g23
06:39:26 198  ,cad_g24
06:39:26 199  ,cad_g25
06:39:26 200  ,cad_g26
06:39:26 201  ,cad_g27
06:39:26 202  ,cad_g28
06:39:26 203  ,cad_g29
06:39:26 204  ,cad_g30
06:39:26 205  ,cad_g31
06:39:26 206  ,cad_g32
06:39:26 207  ,cad_g33
06:39:26 208  ,cad_g34
06:39:26 209  ,cad_g35
06:39:26 210  ,cad_g36
06:39:26 211  ,cad_g37
06:39:26 212  ,cad_g38
06:39:26 213  ,cad_g39
06:39:26 214  ,cad_g40
06:39:26 215  ,cad_g41
06:39:26 216  ,chf_g00
06:39:26 217  ,chf_g01
06:39:26 218  ,chf_g02
06:39:26 219  ,chf_g03
06:39:26 220  ,chf_g04
06:39:26 221  ,chf_g05
06:39:26 222  ,chf_g06
06:39:26 223  ,chf_g07
06:39:26 224  ,chf_g08
06:39:26 225  ,chf_g09
06:39:26 226  ,chf_g10
06:39:26 227  ,chf_g11
06:39:26 228  ,chf_g12
06:39:26 229  ,chf_g13
06:39:26 230  ,chf_g14
06:39:26 231  ,chf_g15
06:39:26 232  ,chf_g16
06:39:26 233  ,chf_g17
06:39:26 234  ,chf_g18
06:39:26 235  ,chf_g19
06:39:26 236  ,chf_g20
06:39:26 237  ,chf_g21
06:39:26 238  ,chf_g22
06:39:26 239  ,chf_g23
06:39:26 240  ,chf_g24
06:39:26 241  ,chf_g25
06:39:26 242  ,chf_g26
06:39:26 243  ,chf_g27
06:39:26 244  ,chf_g28
06:39:26 245  ,chf_g29
06:39:26 246  ,chf_g30
06:39:26 247  ,chf_g31
06:39:26 248  ,chf_g32
06:39:26 249  ,chf_g33
06:39:26 250  ,chf_g34
06:39:26 251  ,chf_g35
06:39:26 252  ,chf_g36
06:39:26 253  ,chf_g37
06:39:26 254  ,chf_g38
06:39:26 255  ,chf_g39
06:39:26 256  ,chf_g40
06:39:26 257  ,chf_g41
06:39:26 258  FROM aud_ms6 m
06:39:26 259  WHERE gattn IN('nup','up')
06:39:26 260  AND 1+m.ydate < '&1'||' '||'&2'
06:39:26 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-27'||' '||'06:25:00'

View created.

Elapsed: 00:00:00.13
06:39:26 SQL> 
06:39:26 SQL> -- rpt
06:39:26 SQL> 
06:39:26 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12807
up	     6371

Elapsed: 00:00:00.05
06:39:26 SQL> 
06:39:26 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-24 21:55:00

Elapsed: 00:00:00.03
06:39:26 SQL> 
06:39:26 SQL> -- Now build model from bme and score sme
06:39:26 SQL> @score1gattn.sql
06:39:26 SQL> -- score1gattn.sql
06:39:26 SQL> 
06:39:26 SQL> -- Does the 1st SVM score
06:39:26 SQL> 
06:39:26 SQL> -- Fill up svmc_apply_prep
06:39:26 SQL> @score_gattn.sql
06:39:26 SQL> --
06:39:26 SQL> -- score_gattn.sql
06:39:26 SQL> --
06:39:26 SQL> 
06:39:26 SQL> -- usage: score_gattn.sql
06:39:26 SQL> 
06:39:26 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:39:26 SQL> 
06:39:26 SQL> DEFINE target	= 'gattn'
06:39:26 SQL> DEFINE model_name = 'forex14'
06:39:26 SQL> DEFINE bldtable	= 'bme'
06:39:26 SQL> DEFINE scoretable = 'sme'
06:39:26 SQL> DEFINE case_id	= 'prdate'
06:39:26 SQL> 
06:39:26 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:39:26 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:39:26 SQL> 
06:39:26 SQL> -- Builds an SVM model using pl/sql.
06:39:26 SQL> 
06:39:26 SQL> -----------------------------------------------------------------------
06:39:26 SQL> --			    BUILD THE MODEL
06:39:26 SQL> -----------------------------------------------------------------------
06:39:26 SQL> 
06:39:26 SQL> -- Cleanup old build data preparation objects for repeat runs
06:39:26 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
06:39:26 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:39:26 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
06:39:26 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
06:39:26 SQL> 
06:39:26 SQL> 
06:39:26 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:39:26 SQL> --
06:39:26 SQL> -- DROP	TABLE svmc_settings ;
06:39:26 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:39:26 SQL> -- DELETE svmc_settings;
06:39:26 SQL> 
06:39:26 SQL> -- The default classification algorithm is Naive Bayes. So override
06:39:26 SQL> -- this choice to SVM using a settings table.
06:39:26 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:39:26 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:39:26 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:39:26 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:39:26 SQL> -- models.
06:39:26 SQL> --
06:39:26 SQL> 
06:39:26 SQL> -- Do this once and then comment it out.
06:39:26 SQL> -- That makes script go faster.
06:39:26 SQL> -- BEGIN
06:39:26 SQL> -- -- Populate settings table
06:39:26 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:39:26 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:39:26 SQL> --
06:39:26 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:39:26 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:39:26 SQL> --
06:39:26 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:39:26 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:39:26 SQL> --   COMMIT;
06:39:26 SQL> -- END;
06:39:26 SQL> -- /
06:39:26 SQL> 
06:39:26 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
06:39:26 SQL> 
06:39:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:39:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:39:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:39:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:39:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:39:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:39:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:39:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:39:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:39:26 SQL> 
06:39:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:39:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:39:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:39:26 SQL> 
06:39:26 SQL> --------------------------------
06:39:26 SQL> -- PREPARE BUILD (TRAINING) DATA
06:39:26 SQL> --
06:39:26 SQL> 
06:39:26 SQL> -- 1. Missing Value treatment for all Predictors and
06:39:26 SQL> -- 2. Outlier Treatment and
06:39:26 SQL> -- 3. Normalization are performed below.
06:39:26 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:39:26 SQL> --    normalized here.
06:39:26 SQL> 
06:39:26 SQL> BEGIN
06:39:26   2  	-- Perform missing value treatment for all predictors
06:39:26   3  	-- create miss tables
06:39:26   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:39:26   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:39:26   6  
06:39:26   7  	-- populate miss tables
06:39:26   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:39:26   9  	  miss_table_name => 'svmc_miss_num',
06:39:26  10  	  data_table_name => '&bldtable',
06:39:26  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:39:26  12  
06:39:26  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:39:26  14  	  miss_table_name => 'svmc_miss_cat',
06:39:26  15  	  data_table_name => '&bldtable',
06:39:26  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:39:26  17  
06:39:26  18  	-- xform input data to replace missing values
06:39:26  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:39:26  20  	  miss_table_name => 'svmc_miss_num',
06:39:26  21  	  data_table_name => '&bldtable',
06:39:26  22  	  xform_view_name => 'xformed_build_miss_num');
06:39:26  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:39:26  24  	  miss_table_name => 'svmc_miss_cat',
06:39:26  25  	  data_table_name => '&bldtable',
06:39:26  26  	  xform_view_name => 'xformed_build_miss_cat');
06:39:26  27  
06:39:26  28  	-- Perform outlier treatment.
06:39:26  29  	-- create clip table
06:39:26  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:39:26  31  
06:39:26  32  	-- populate clip table
06:39:26  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:39:26  34  	  clip_table_name => 'svmc_clip',
06:39:26  35  	  data_table_name => '&bldtable',
06:39:26  36  	  tail_frac	  => 0.025,
06:39:26  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:39:26  38  
06:39:26  39  	-- xform input data to winsorized data
06:39:26  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:39:26  41  	  clip_table_name => 'svmc_clip',
06:39:26  42  	  data_table_name => '&bldtable',
06:39:26  43  	  xform_view_name => 'svmc_winsor');
06:39:26  44  
06:39:26  45  	-- create normalization table
06:39:26  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:39:26  47  
06:39:26  48  	-- populate normalization table based on winsorized data
06:39:26  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:39:26  50  	  norm_table_name => 'svmc_norm',
06:39:26  51  	  data_table_name => 'svmc_winsor',
06:39:26  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:39:26  53  
06:39:26  54  	-- normalize the original data
06:39:26  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:39:26  56  	  norm_table_name => 'svmc_norm',
06:39:26  57  	  data_table_name => '&bldtable',
06:39:26  58  	  xform_view_name => 'svmc_build_prep');
06:39:26  59  END;
06:39:26  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.61
06:39:44 SQL> 
06:39:44 SQL> ---------------------
06:39:44 SQL> -- CREATE A NEW MODEL
06:39:44 SQL> --
06:39:44 SQL> -- Cleanup old model with the same name for repeat runs
06:39:44 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:39:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:39:44   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.44
06:39:45 SQL> 
06:39:45 SQL> -- Build a new SVM Model
06:39:45 SQL> BEGIN
06:39:45   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:39:45   3  	  model_name	      => '&model_name',
06:39:45   4  	  mining_function     => dbms_data_mining.classification,
06:39:45   5  	  data_table_name     => 'svmc_build_prep',
06:39:45   6  	  case_id_column_name => '&case_id',
06:39:45   7  	  target_column_name  => '&target',
06:39:45   8  	  settings_table_name => 'svmc_settings');
06:39:45   9  END;
06:39:45  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.47
06:40:13 SQL> 
06:40:13 SQL> -----------------------------------------------------------------------
06:40:13 SQL> --			       APPLY/score THE MODEL
06:40:13 SQL> -----------------------------------------------------------------------
06:40:13 SQL> 
06:40:13 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:40:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:40:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:40:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:40:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:40:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:40:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:40:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:40:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:40:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:40:13 SQL> -----------------------
06:40:13 SQL> -- PREPARE SCORING DATA
06:40:13 SQL> --
06:40:13 SQL> -- If the data for model creation has been prepared, then the data
06:40:13 SQL> -- to be scored using the model must be prepared in the same manner
06:40:13 SQL> -- in order to obtain meaningful results.
06:40:13 SQL> --
06:40:13 SQL> -- 1. Missing Value treatment for all Predictors and
06:40:13 SQL> -- 2. Normalization
06:40:13 SQL> -- No outlier treatment will be performed during test and apply. The
06:40:13 SQL> -- normalization step is sufficient, since the normalization parameters
06:40:13 SQL> -- already capture the effects of outlier treatment done with build data.
06:40:13 SQL> --
06:40:13 SQL> BEGIN
06:40:13   2  	-- Xform Test data to replace missing values
06:40:13   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:40:13   4  	  miss_table_name => 'svmc_miss_num',
06:40:13   5  	  data_table_name => '&scoretable',
06:40:13   6  	  xform_view_name => 'xformed_apply_miss_num');
06:40:13   7  
06:40:13   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:40:13   9  	  miss_table_name => 'svmc_miss_cat',
06:40:13  10  	  data_table_name => '&scoretable',
06:40:13  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:40:13  12  
06:40:13  13  	-- Normalize the data to be scored
06:40:13  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:40:13  15  	  norm_table_name => 'svmc_norm',
06:40:13  16  	  data_table_name => '&scoretable',
06:40:13  17  	  xform_view_name => 'svmc_apply_prep');
06:40:13  18  END;
06:40:13  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.27
06:40:14 SQL> 
06:40:14 SQL> -- Use same model_name used in score_gattn.sql
06:40:14 SQL> DEFINE model_name = 'forex14'
06:40:14 SQL> 
06:40:14 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
06:40:14 SQL> 
06:40:14 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
06:40:14   2  SELECT
06:40:14   3  prdate
06:40:14   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:40:14   5  ,sysdate
06:40:14   6  ,SUBSTR(prdate,1,3)pair
06:40:14   7  ,SUBSTR(prdate,4,19)ydate
06:40:14   8  FROM svmc_apply_prep
06:40:14   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
06:40:14 SQL> @aud_score1day_gattn.sql	2010-12-27 06:05:00
06:40:14 SQL> --
06:40:14 SQL> -- aud_score1day_gattn.sql
06:40:14 SQL> --
06:40:14 SQL> 
06:40:14 SQL> CREATE OR REPLACE VIEW sme AS
06:40:14   2  SELECT
06:40:14   3  'aud'||m.ydate prdate
06:40:14   4  ,NULL gattn
06:40:14   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:40:14   6  ,eur_g00
06:40:14   7  ,eur_g01
06:40:14   8  ,eur_g02
06:40:14   9  ,eur_g03
06:40:14  10  ,eur_g04
06:40:14  11  ,eur_g05
06:40:14  12  ,eur_g06
06:40:14  13  ,eur_g07
06:40:14  14  ,eur_g08
06:40:14  15  ,eur_g09
06:40:14  16  ,eur_g10
06:40:14  17  ,eur_g11
06:40:14  18  ,eur_g12
06:40:14  19  ,eur_g13
06:40:14  20  ,eur_g14
06:40:14  21  ,eur_g15
06:40:14  22  ,eur_g16
06:40:14  23  ,eur_g17
06:40:14  24  ,eur_g18
06:40:14  25  ,eur_g19
06:40:14  26  ,eur_g20
06:40:14  27  ,eur_g21
06:40:14  28  ,eur_g22
06:40:14  29  ,eur_g23
06:40:14  30  ,eur_g24
06:40:14  31  ,eur_g25
06:40:14  32  ,eur_g26
06:40:14  33  ,eur_g27
06:40:14  34  ,eur_g28
06:40:14  35  ,eur_g29
06:40:14  36  ,eur_g30
06:40:14  37  ,eur_g31
06:40:14  38  ,eur_g32
06:40:14  39  ,eur_g33
06:40:14  40  ,eur_g34
06:40:14  41  ,eur_g35
06:40:14  42  ,eur_g36
06:40:14  43  ,eur_g37
06:40:14  44  ,eur_g38
06:40:14  45  ,eur_g39
06:40:14  46  ,eur_g40
06:40:14  47  ,eur_g41
06:40:14  48  ,aud_g00
06:40:14  49  ,aud_g01
06:40:14  50  ,aud_g02
06:40:14  51  ,aud_g03
06:40:14  52  ,aud_g04
06:40:14  53  ,aud_g05
06:40:14  54  ,aud_g06
06:40:14  55  ,aud_g07
06:40:14  56  ,aud_g08
06:40:14  57  ,aud_g09
06:40:14  58  ,aud_g10
06:40:14  59  ,aud_g11
06:40:14  60  ,aud_g12
06:40:14  61  ,aud_g13
06:40:14  62  ,aud_g14
06:40:14  63  ,aud_g15
06:40:14  64  ,aud_g16
06:40:14  65  ,aud_g17
06:40:14  66  ,aud_g18
06:40:14  67  ,aud_g19
06:40:14  68  ,aud_g20
06:40:14  69  ,aud_g21
06:40:14  70  ,aud_g22
06:40:14  71  ,aud_g23
06:40:14  72  ,aud_g24
06:40:14  73  ,aud_g25
06:40:14  74  ,aud_g26
06:40:14  75  ,aud_g27
06:40:14  76  ,aud_g28
06:40:14  77  ,aud_g29
06:40:14  78  ,aud_g30
06:40:14  79  ,aud_g31
06:40:14  80  ,aud_g32
06:40:14  81  ,aud_g33
06:40:14  82  ,aud_g34
06:40:14  83  ,aud_g35
06:40:14  84  ,aud_g36
06:40:14  85  ,aud_g37
06:40:14  86  ,aud_g38
06:40:14  87  ,aud_g39
06:40:14  88  ,aud_g40
06:40:14  89  ,aud_g41
06:40:14  90  ,gbp_g00
06:40:14  91  ,gbp_g01
06:40:14  92  ,gbp_g02
06:40:14  93  ,gbp_g03
06:40:14  94  ,gbp_g04
06:40:14  95  ,gbp_g05
06:40:14  96  ,gbp_g06
06:40:14  97  ,gbp_g07
06:40:14  98  ,gbp_g08
06:40:14  99  ,gbp_g09
06:40:14 100  ,gbp_g10
06:40:14 101  ,gbp_g11
06:40:14 102  ,gbp_g12
06:40:14 103  ,gbp_g13
06:40:14 104  ,gbp_g14
06:40:14 105  ,gbp_g15
06:40:14 106  ,gbp_g16
06:40:14 107  ,gbp_g17
06:40:14 108  ,gbp_g18
06:40:14 109  ,gbp_g19
06:40:14 110  ,gbp_g20
06:40:14 111  ,gbp_g21
06:40:14 112  ,gbp_g22
06:40:14 113  ,gbp_g23
06:40:14 114  ,gbp_g24
06:40:14 115  ,gbp_g25
06:40:14 116  ,gbp_g26
06:40:14 117  ,gbp_g27
06:40:14 118  ,gbp_g28
06:40:14 119  ,gbp_g29
06:40:14 120  ,gbp_g30
06:40:14 121  ,gbp_g31
06:40:14 122  ,gbp_g32
06:40:14 123  ,gbp_g33
06:40:14 124  ,gbp_g34
06:40:14 125  ,gbp_g35
06:40:14 126  ,gbp_g36
06:40:14 127  ,gbp_g37
06:40:14 128  ,gbp_g38
06:40:14 129  ,gbp_g39
06:40:14 130  ,gbp_g40
06:40:14 131  ,gbp_g41
06:40:14 132  ,jpy_g00
06:40:14 133  ,jpy_g01
06:40:14 134  ,jpy_g02
06:40:14 135  ,jpy_g03
06:40:14 136  ,jpy_g04
06:40:14 137  ,jpy_g05
06:40:14 138  ,jpy_g06
06:40:14 139  ,jpy_g07
06:40:14 140  ,jpy_g08
06:40:14 141  ,jpy_g09
06:40:14 142  ,jpy_g10
06:40:14 143  ,jpy_g11
06:40:14 144  ,jpy_g12
06:40:14 145  ,jpy_g13
06:40:14 146  ,jpy_g14
06:40:14 147  ,jpy_g15
06:40:14 148  ,jpy_g16
06:40:14 149  ,jpy_g17
06:40:14 150  ,jpy_g18
06:40:14 151  ,jpy_g19
06:40:14 152  ,jpy_g20
06:40:14 153  ,jpy_g21
06:40:14 154  ,jpy_g22
06:40:14 155  ,jpy_g23
06:40:14 156  ,jpy_g24
06:40:14 157  ,jpy_g25
06:40:14 158  ,jpy_g26
06:40:14 159  ,jpy_g27
06:40:14 160  ,jpy_g28
06:40:14 161  ,jpy_g29
06:40:14 162  ,jpy_g30
06:40:14 163  ,jpy_g31
06:40:14 164  ,jpy_g32
06:40:14 165  ,jpy_g33
06:40:14 166  ,jpy_g34
06:40:14 167  ,jpy_g35
06:40:14 168  ,jpy_g36
06:40:14 169  ,jpy_g37
06:40:14 170  ,jpy_g38
06:40:14 171  ,jpy_g39
06:40:14 172  ,jpy_g40
06:40:14 173  ,jpy_g41
06:40:14 174  ,cad_g00
06:40:14 175  ,cad_g01
06:40:14 176  ,cad_g02
06:40:14 177  ,cad_g03
06:40:14 178  ,cad_g04
06:40:14 179  ,cad_g05
06:40:14 180  ,cad_g06
06:40:14 181  ,cad_g07
06:40:14 182  ,cad_g08
06:40:14 183  ,cad_g09
06:40:14 184  ,cad_g10
06:40:14 185  ,cad_g11
06:40:14 186  ,cad_g12
06:40:14 187  ,cad_g13
06:40:14 188  ,cad_g14
06:40:14 189  ,cad_g15
06:40:14 190  ,cad_g16
06:40:14 191  ,cad_g17
06:40:14 192  ,cad_g18
06:40:14 193  ,cad_g19
06:40:14 194  ,cad_g20
06:40:14 195  ,cad_g21
06:40:14 196  ,cad_g22
06:40:14 197  ,cad_g23
06:40:14 198  ,cad_g24
06:40:14 199  ,cad_g25
06:40:14 200  ,cad_g26
06:40:14 201  ,cad_g27
06:40:14 202  ,cad_g28
06:40:14 203  ,cad_g29
06:40:14 204  ,cad_g30
06:40:14 205  ,cad_g31
06:40:14 206  ,cad_g32
06:40:14 207  ,cad_g33
06:40:14 208  ,cad_g34
06:40:14 209  ,cad_g35
06:40:14 210  ,cad_g36
06:40:14 211  ,cad_g37
06:40:14 212  ,cad_g38
06:40:14 213  ,cad_g39
06:40:14 214  ,cad_g40
06:40:14 215  ,cad_g41
06:40:14 216  ,chf_g00
06:40:14 217  ,chf_g01
06:40:14 218  ,chf_g02
06:40:14 219  ,chf_g03
06:40:14 220  ,chf_g04
06:40:14 221  ,chf_g05
06:40:14 222  ,chf_g06
06:40:14 223  ,chf_g07
06:40:14 224  ,chf_g08
06:40:14 225  ,chf_g09
06:40:14 226  ,chf_g10
06:40:14 227  ,chf_g11
06:40:14 228  ,chf_g12
06:40:14 229  ,chf_g13
06:40:14 230  ,chf_g14
06:40:14 231  ,chf_g15
06:40:14 232  ,chf_g16
06:40:14 233  ,chf_g17
06:40:14 234  ,chf_g18
06:40:14 235  ,chf_g19
06:40:14 236  ,chf_g20
06:40:14 237  ,chf_g21
06:40:14 238  ,chf_g22
06:40:14 239  ,chf_g23
06:40:14 240  ,chf_g24
06:40:14 241  ,chf_g25
06:40:14 242  ,chf_g26
06:40:14 243  ,chf_g27
06:40:14 244  ,chf_g28
06:40:14 245  ,chf_g29
06:40:14 246  ,chf_g30
06:40:14 247  ,chf_g31
06:40:14 248  ,chf_g32
06:40:14 249  ,chf_g33
06:40:14 250  ,chf_g34
06:40:14 251  ,chf_g35
06:40:14 252  ,chf_g36
06:40:14 253  ,chf_g37
06:40:14 254  ,chf_g38
06:40:14 255  ,chf_g39
06:40:14 256  ,chf_g40
06:40:14 257  ,chf_g41
06:40:14 258  FROM aud_ms6 m
06:40:14 259  WHERE m.ydate = '&1'||' '||'&2'
06:40:14 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-27'||' '||'06:05:00'

View created.

Elapsed: 00:00:00.11
06:40:15 SQL> 
06:40:15 SQL> -- rpt
06:40:15 SQL> -- We should see just 1 row:
06:40:15 SQL> 
06:40:15 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
06:40:15 SQL> 
06:40:15 SQL> -- Build the model:
06:40:15 SQL> CREATE OR REPLACE VIEW bme AS
06:40:15   2  SELECT
06:40:15   3  'aud'||m.ydate prdate
06:40:15   4  ,gattn
06:40:15   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:40:15   6  ,eur_g00
06:40:15   7  ,eur_g01
06:40:15   8  ,eur_g02
06:40:15   9  ,eur_g03
06:40:15  10  ,eur_g04
06:40:15  11  ,eur_g05
06:40:15  12  ,eur_g06
06:40:15  13  ,eur_g07
06:40:15  14  ,eur_g08
06:40:15  15  ,eur_g09
06:40:15  16  ,eur_g10
06:40:15  17  ,eur_g11
06:40:15  18  ,eur_g12
06:40:15  19  ,eur_g13
06:40:15  20  ,eur_g14
06:40:15  21  ,eur_g15
06:40:15  22  ,eur_g16
06:40:15  23  ,eur_g17
06:40:15  24  ,eur_g18
06:40:15  25  ,eur_g19
06:40:15  26  ,eur_g20
06:40:15  27  ,eur_g21
06:40:15  28  ,eur_g22
06:40:15  29  ,eur_g23
06:40:15  30  ,eur_g24
06:40:15  31  ,eur_g25
06:40:15  32  ,eur_g26
06:40:15  33  ,eur_g27
06:40:15  34  ,eur_g28
06:40:15  35  ,eur_g29
06:40:15  36  ,eur_g30
06:40:15  37  ,eur_g31
06:40:15  38  ,eur_g32
06:40:15  39  ,eur_g33
06:40:15  40  ,eur_g34
06:40:15  41  ,eur_g35
06:40:15  42  ,eur_g36
06:40:15  43  ,eur_g37
06:40:15  44  ,eur_g38
06:40:15  45  ,eur_g39
06:40:15  46  ,eur_g40
06:40:15  47  ,eur_g41
06:40:15  48  ,aud_g00
06:40:15  49  ,aud_g01
06:40:15  50  ,aud_g02
06:40:15  51  ,aud_g03
06:40:15  52  ,aud_g04
06:40:15  53  ,aud_g05
06:40:15  54  ,aud_g06
06:40:15  55  ,aud_g07
06:40:15  56  ,aud_g08
06:40:15  57  ,aud_g09
06:40:15  58  ,aud_g10
06:40:15  59  ,aud_g11
06:40:15  60  ,aud_g12
06:40:15  61  ,aud_g13
06:40:15  62  ,aud_g14
06:40:15  63  ,aud_g15
06:40:15  64  ,aud_g16
06:40:15  65  ,aud_g17
06:40:15  66  ,aud_g18
06:40:15  67  ,aud_g19
06:40:15  68  ,aud_g20
06:40:15  69  ,aud_g21
06:40:15  70  ,aud_g22
06:40:15  71  ,aud_g23
06:40:15  72  ,aud_g24
06:40:15  73  ,aud_g25
06:40:15  74  ,aud_g26
06:40:15  75  ,aud_g27
06:40:15  76  ,aud_g28
06:40:15  77  ,aud_g29
06:40:15  78  ,aud_g30
06:40:15  79  ,aud_g31
06:40:15  80  ,aud_g32
06:40:15  81  ,aud_g33
06:40:15  82  ,aud_g34
06:40:15  83  ,aud_g35
06:40:15  84  ,aud_g36
06:40:15  85  ,aud_g37
06:40:15  86  ,aud_g38
06:40:15  87  ,aud_g39
06:40:15  88  ,aud_g40
06:40:15  89  ,aud_g41
06:40:15  90  ,gbp_g00
06:40:15  91  ,gbp_g01
06:40:15  92  ,gbp_g02
06:40:15  93  ,gbp_g03
06:40:15  94  ,gbp_g04
06:40:15  95  ,gbp_g05
06:40:15  96  ,gbp_g06
06:40:15  97  ,gbp_g07
06:40:15  98  ,gbp_g08
06:40:15  99  ,gbp_g09
06:40:15 100  ,gbp_g10
06:40:15 101  ,gbp_g11
06:40:15 102  ,gbp_g12
06:40:15 103  ,gbp_g13
06:40:15 104  ,gbp_g14
06:40:15 105  ,gbp_g15
06:40:15 106  ,gbp_g16
06:40:15 107  ,gbp_g17
06:40:15 108  ,gbp_g18
06:40:15 109  ,gbp_g19
06:40:15 110  ,gbp_g20
06:40:15 111  ,gbp_g21
06:40:15 112  ,gbp_g22
06:40:15 113  ,gbp_g23
06:40:15 114  ,gbp_g24
06:40:15 115  ,gbp_g25
06:40:15 116  ,gbp_g26
06:40:15 117  ,gbp_g27
06:40:15 118  ,gbp_g28
06:40:15 119  ,gbp_g29
06:40:15 120  ,gbp_g30
06:40:15 121  ,gbp_g31
06:40:15 122  ,gbp_g32
06:40:15 123  ,gbp_g33
06:40:15 124  ,gbp_g34
06:40:15 125  ,gbp_g35
06:40:15 126  ,gbp_g36
06:40:15 127  ,gbp_g37
06:40:15 128  ,gbp_g38
06:40:15 129  ,gbp_g39
06:40:15 130  ,gbp_g40
06:40:15 131  ,gbp_g41
06:40:15 132  ,jpy_g00
06:40:15 133  ,jpy_g01
06:40:15 134  ,jpy_g02
06:40:15 135  ,jpy_g03
06:40:15 136  ,jpy_g04
06:40:15 137  ,jpy_g05
06:40:15 138  ,jpy_g06
06:40:15 139  ,jpy_g07
06:40:15 140  ,jpy_g08
06:40:15 141  ,jpy_g09
06:40:15 142  ,jpy_g10
06:40:15 143  ,jpy_g11
06:40:15 144  ,jpy_g12
06:40:15 145  ,jpy_g13
06:40:15 146  ,jpy_g14
06:40:15 147  ,jpy_g15
06:40:15 148  ,jpy_g16
06:40:15 149  ,jpy_g17
06:40:15 150  ,jpy_g18
06:40:15 151  ,jpy_g19
06:40:15 152  ,jpy_g20
06:40:15 153  ,jpy_g21
06:40:15 154  ,jpy_g22
06:40:15 155  ,jpy_g23
06:40:15 156  ,jpy_g24
06:40:15 157  ,jpy_g25
06:40:15 158  ,jpy_g26
06:40:15 159  ,jpy_g27
06:40:15 160  ,jpy_g28
06:40:15 161  ,jpy_g29
06:40:15 162  ,jpy_g30
06:40:15 163  ,jpy_g31
06:40:15 164  ,jpy_g32
06:40:15 165  ,jpy_g33
06:40:15 166  ,jpy_g34
06:40:15 167  ,jpy_g35
06:40:15 168  ,jpy_g36
06:40:15 169  ,jpy_g37
06:40:15 170  ,jpy_g38
06:40:15 171  ,jpy_g39
06:40:15 172  ,jpy_g40
06:40:15 173  ,jpy_g41
06:40:15 174  ,cad_g00
06:40:15 175  ,cad_g01
06:40:15 176  ,cad_g02
06:40:15 177  ,cad_g03
06:40:15 178  ,cad_g04
06:40:15 179  ,cad_g05
06:40:15 180  ,cad_g06
06:40:15 181  ,cad_g07
06:40:15 182  ,cad_g08
06:40:15 183  ,cad_g09
06:40:15 184  ,cad_g10
06:40:15 185  ,cad_g11
06:40:15 186  ,cad_g12
06:40:15 187  ,cad_g13
06:40:15 188  ,cad_g14
06:40:15 189  ,cad_g15
06:40:15 190  ,cad_g16
06:40:15 191  ,cad_g17
06:40:15 192  ,cad_g18
06:40:15 193  ,cad_g19
06:40:15 194  ,cad_g20
06:40:15 195  ,cad_g21
06:40:15 196  ,cad_g22
06:40:15 197  ,cad_g23
06:40:15 198  ,cad_g24
06:40:15 199  ,cad_g25
06:40:15 200  ,cad_g26
06:40:15 201  ,cad_g27
06:40:15 202  ,cad_g28
06:40:15 203  ,cad_g29
06:40:15 204  ,cad_g30
06:40:15 205  ,cad_g31
06:40:15 206  ,cad_g32
06:40:15 207  ,cad_g33
06:40:15 208  ,cad_g34
06:40:15 209  ,cad_g35
06:40:15 210  ,cad_g36
06:40:15 211  ,cad_g37
06:40:15 212  ,cad_g38
06:40:15 213  ,cad_g39
06:40:15 214  ,cad_g40
06:40:15 215  ,cad_g41
06:40:15 216  ,chf_g00
06:40:15 217  ,chf_g01
06:40:15 218  ,chf_g02
06:40:15 219  ,chf_g03
06:40:15 220  ,chf_g04
06:40:15 221  ,chf_g05
06:40:15 222  ,chf_g06
06:40:15 223  ,chf_g07
06:40:15 224  ,chf_g08
06:40:15 225  ,chf_g09
06:40:15 226  ,chf_g10
06:40:15 227  ,chf_g11
06:40:15 228  ,chf_g12
06:40:15 229  ,chf_g13
06:40:15 230  ,chf_g14
06:40:15 231  ,chf_g15
06:40:15 232  ,chf_g16
06:40:15 233  ,chf_g17
06:40:15 234  ,chf_g18
06:40:15 235  ,chf_g19
06:40:15 236  ,chf_g20
06:40:15 237  ,chf_g21
06:40:15 238  ,chf_g22
06:40:15 239  ,chf_g23
06:40:15 240  ,chf_g24
06:40:15 241  ,chf_g25
06:40:15 242  ,chf_g26
06:40:15 243  ,chf_g27
06:40:15 244  ,chf_g28
06:40:15 245  ,chf_g29
06:40:15 246  ,chf_g30
06:40:15 247  ,chf_g31
06:40:15 248  ,chf_g32
06:40:15 249  ,chf_g33
06:40:15 250  ,chf_g34
06:40:15 251  ,chf_g35
06:40:15 252  ,chf_g36
06:40:15 253  ,chf_g37
06:40:15 254  ,chf_g38
06:40:15 255  ,chf_g39
06:40:15 256  ,chf_g40
06:40:15 257  ,chf_g41
06:40:15 258  FROM aud_ms6 m
06:40:15 259  WHERE gattn IN('nup','up')
06:40:15 260  AND 1+m.ydate < '&1'||' '||'&2'
06:40:15 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-27'||' '||'06:05:00'

View created.

Elapsed: 00:00:00.11
06:40:15 SQL> 
06:40:15 SQL> -- rpt
06:40:15 SQL> 
06:40:15 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12807
up	     6371

Elapsed: 00:00:00.04
06:40:15 SQL> 
06:40:15 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-24 21:55:00

Elapsed: 00:00:00.03
06:40:15 SQL> 
06:40:15 SQL> -- Now build model from bme and score sme
06:40:15 SQL> @score1gattn.sql
06:40:15 SQL> -- score1gattn.sql
06:40:15 SQL> 
06:40:15 SQL> -- Does the 1st SVM score
06:40:15 SQL> 
06:40:15 SQL> -- Fill up svmc_apply_prep
06:40:15 SQL> @score_gattn.sql
06:40:15 SQL> --
06:40:15 SQL> -- score_gattn.sql
06:40:15 SQL> --
06:40:15 SQL> 
06:40:15 SQL> -- usage: score_gattn.sql
06:40:15 SQL> 
06:40:15 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:40:15 SQL> 
06:40:15 SQL> DEFINE target	= 'gattn'
06:40:15 SQL> DEFINE model_name = 'forex14'
06:40:15 SQL> DEFINE bldtable	= 'bme'
06:40:15 SQL> DEFINE scoretable = 'sme'
06:40:15 SQL> DEFINE case_id	= 'prdate'
06:40:15 SQL> 
06:40:15 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:40:15 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:40:15 SQL> 
06:40:15 SQL> -- Builds an SVM model using pl/sql.
06:40:15 SQL> 
06:40:15 SQL> -----------------------------------------------------------------------
06:40:15 SQL> --			    BUILD THE MODEL
06:40:15 SQL> -----------------------------------------------------------------------
06:40:15 SQL> 
06:40:15 SQL> -- Cleanup old build data preparation objects for repeat runs
06:40:15 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
06:40:15 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:40:15 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
06:40:15 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
06:40:15 SQL> 
06:40:15 SQL> 
06:40:15 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:40:15 SQL> --
06:40:15 SQL> -- DROP	TABLE svmc_settings ;
06:40:15 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:40:15 SQL> -- DELETE svmc_settings;
06:40:15 SQL> 
06:40:15 SQL> -- The default classification algorithm is Naive Bayes. So override
06:40:15 SQL> -- this choice to SVM using a settings table.
06:40:15 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:40:15 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:40:15 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:40:15 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:40:15 SQL> -- models.
06:40:15 SQL> --
06:40:15 SQL> 
06:40:15 SQL> -- Do this once and then comment it out.
06:40:15 SQL> -- That makes script go faster.
06:40:15 SQL> -- BEGIN
06:40:15 SQL> -- -- Populate settings table
06:40:15 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:40:15 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:40:15 SQL> --
06:40:15 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:40:15 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:40:15 SQL> --
06:40:15 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:40:15 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:40:15 SQL> --   COMMIT;
06:40:15 SQL> -- END;
06:40:15 SQL> -- /
06:40:15 SQL> 
06:40:15 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:40:15 SQL> 
06:40:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:40:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:40:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:40:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:40:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:40:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:40:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:40:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:40:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.12
06:40:15 SQL> 
06:40:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:40:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:40:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:40:15 SQL> 
06:40:15 SQL> --------------------------------
06:40:15 SQL> -- PREPARE BUILD (TRAINING) DATA
06:40:15 SQL> --
06:40:15 SQL> 
06:40:15 SQL> -- 1. Missing Value treatment for all Predictors and
06:40:15 SQL> -- 2. Outlier Treatment and
06:40:15 SQL> -- 3. Normalization are performed below.
06:40:15 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:40:15 SQL> --    normalized here.
06:40:15 SQL> 
06:40:15 SQL> BEGIN
06:40:15   2  	-- Perform missing value treatment for all predictors
06:40:15   3  	-- create miss tables
06:40:15   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:40:15   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:40:15   6  
06:40:15   7  	-- populate miss tables
06:40:15   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:40:15   9  	  miss_table_name => 'svmc_miss_num',
06:40:15  10  	  data_table_name => '&bldtable',
06:40:15  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:40:15  12  
06:40:15  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:40:15  14  	  miss_table_name => 'svmc_miss_cat',
06:40:15  15  	  data_table_name => '&bldtable',
06:40:15  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:40:15  17  
06:40:15  18  	-- xform input data to replace missing values
06:40:15  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:40:15  20  	  miss_table_name => 'svmc_miss_num',
06:40:15  21  	  data_table_name => '&bldtable',
06:40:15  22  	  xform_view_name => 'xformed_build_miss_num');
06:40:15  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:40:15  24  	  miss_table_name => 'svmc_miss_cat',
06:40:15  25  	  data_table_name => '&bldtable',
06:40:15  26  	  xform_view_name => 'xformed_build_miss_cat');
06:40:15  27  
06:40:15  28  	-- Perform outlier treatment.
06:40:15  29  	-- create clip table
06:40:15  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:40:15  31  
06:40:15  32  	-- populate clip table
06:40:15  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:40:15  34  	  clip_table_name => 'svmc_clip',
06:40:15  35  	  data_table_name => '&bldtable',
06:40:15  36  	  tail_frac	  => 0.025,
06:40:15  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:40:15  38  
06:40:15  39  	-- xform input data to winsorized data
06:40:15  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:40:15  41  	  clip_table_name => 'svmc_clip',
06:40:15  42  	  data_table_name => '&bldtable',
06:40:15  43  	  xform_view_name => 'svmc_winsor');
06:40:15  44  
06:40:15  45  	-- create normalization table
06:40:15  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:40:15  47  
06:40:15  48  	-- populate normalization table based on winsorized data
06:40:15  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:40:15  50  	  norm_table_name => 'svmc_norm',
06:40:15  51  	  data_table_name => 'svmc_winsor',
06:40:15  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:40:15  53  
06:40:15  54  	-- normalize the original data
06:40:15  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:40:15  56  	  norm_table_name => 'svmc_norm',
06:40:15  57  	  data_table_name => '&bldtable',
06:40:15  58  	  xform_view_name => 'svmc_build_prep');
06:40:15  59  END;
06:40:15  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.27
06:40:32 SQL> 
06:40:32 SQL> ---------------------
06:40:32 SQL> -- CREATE A NEW MODEL
06:40:32 SQL> --
06:40:32 SQL> -- Cleanup old model with the same name for repeat runs
06:40:32 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:40:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:40:32   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.45
06:40:34 SQL> 
06:40:34 SQL> -- Build a new SVM Model
06:40:34 SQL> BEGIN
06:40:34   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:40:34   3  	  model_name	      => '&model_name',
06:40:34   4  	  mining_function     => dbms_data_mining.classification,
06:40:34   5  	  data_table_name     => 'svmc_build_prep',
06:40:34   6  	  case_id_column_name => '&case_id',
06:40:34   7  	  target_column_name  => '&target',
06:40:34   8  	  settings_table_name => 'svmc_settings');
06:40:34   9  END;
06:40:34  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.17
06:41:02 SQL> 
06:41:02 SQL> -----------------------------------------------------------------------
06:41:02 SQL> --			       APPLY/score THE MODEL
06:41:02 SQL> -----------------------------------------------------------------------
06:41:02 SQL> 
06:41:02 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:41:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:41:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:41:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:41:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:41:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:41:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:41:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:41:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:41:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
06:41:02 SQL> -----------------------
06:41:02 SQL> -- PREPARE SCORING DATA
06:41:02 SQL> --
06:41:02 SQL> -- If the data for model creation has been prepared, then the data
06:41:02 SQL> -- to be scored using the model must be prepared in the same manner
06:41:02 SQL> -- in order to obtain meaningful results.
06:41:02 SQL> --
06:41:02 SQL> -- 1. Missing Value treatment for all Predictors and
06:41:02 SQL> -- 2. Normalization
06:41:02 SQL> -- No outlier treatment will be performed during test and apply. The
06:41:02 SQL> -- normalization step is sufficient, since the normalization parameters
06:41:02 SQL> -- already capture the effects of outlier treatment done with build data.
06:41:02 SQL> --
06:41:02 SQL> BEGIN
06:41:02   2  	-- Xform Test data to replace missing values
06:41:02   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:41:02   4  	  miss_table_name => 'svmc_miss_num',
06:41:02   5  	  data_table_name => '&scoretable',
06:41:02   6  	  xform_view_name => 'xformed_apply_miss_num');
06:41:02   7  
06:41:02   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:41:02   9  	  miss_table_name => 'svmc_miss_cat',
06:41:02  10  	  data_table_name => '&scoretable',
06:41:02  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:41:02  12  
06:41:02  13  	-- Normalize the data to be scored
06:41:02  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:41:02  15  	  norm_table_name => 'svmc_norm',
06:41:02  16  	  data_table_name => '&scoretable',
06:41:02  17  	  xform_view_name => 'svmc_apply_prep');
06:41:02  18  END;
06:41:02  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.29
06:41:03 SQL> 
06:41:03 SQL> -- Use same model_name used in score_gattn.sql
06:41:03 SQL> DEFINE model_name = 'forex14'
06:41:03 SQL> 
06:41:03 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
06:41:03 SQL> 
06:41:03 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
06:41:03   2  SELECT
06:41:03   3  prdate
06:41:03   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:41:03   5  ,sysdate
06:41:03   6  ,SUBSTR(prdate,1,3)pair
06:41:03   7  ,SUBSTR(prdate,4,19)ydate
06:41:03   8  FROM svmc_apply_prep
06:41:03   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
06:41:04 SQL> @aud_score1day_gattn.sql	2010-12-27 06:00:00
06:41:04 SQL> --
06:41:04 SQL> -- aud_score1day_gattn.sql
06:41:04 SQL> --
06:41:04 SQL> 
06:41:04 SQL> CREATE OR REPLACE VIEW sme AS
06:41:04   2  SELECT
06:41:04   3  'aud'||m.ydate prdate
06:41:04   4  ,NULL gattn
06:41:04   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:41:04   6  ,eur_g00
06:41:04   7  ,eur_g01
06:41:04   8  ,eur_g02
06:41:04   9  ,eur_g03
06:41:04  10  ,eur_g04
06:41:04  11  ,eur_g05
06:41:04  12  ,eur_g06
06:41:04  13  ,eur_g07
06:41:04  14  ,eur_g08
06:41:04  15  ,eur_g09
06:41:04  16  ,eur_g10
06:41:04  17  ,eur_g11
06:41:04  18  ,eur_g12
06:41:04  19  ,eur_g13
06:41:04  20  ,eur_g14
06:41:04  21  ,eur_g15
06:41:04  22  ,eur_g16
06:41:04  23  ,eur_g17
06:41:04  24  ,eur_g18
06:41:04  25  ,eur_g19
06:41:04  26  ,eur_g20
06:41:04  27  ,eur_g21
06:41:04  28  ,eur_g22
06:41:04  29  ,eur_g23
06:41:04  30  ,eur_g24
06:41:04  31  ,eur_g25
06:41:04  32  ,eur_g26
06:41:04  33  ,eur_g27
06:41:04  34  ,eur_g28
06:41:04  35  ,eur_g29
06:41:04  36  ,eur_g30
06:41:04  37  ,eur_g31
06:41:04  38  ,eur_g32
06:41:04  39  ,eur_g33
06:41:04  40  ,eur_g34
06:41:04  41  ,eur_g35
06:41:04  42  ,eur_g36
06:41:04  43  ,eur_g37
06:41:04  44  ,eur_g38
06:41:04  45  ,eur_g39
06:41:04  46  ,eur_g40
06:41:04  47  ,eur_g41
06:41:04  48  ,aud_g00
06:41:04  49  ,aud_g01
06:41:04  50  ,aud_g02
06:41:04  51  ,aud_g03
06:41:04  52  ,aud_g04
06:41:04  53  ,aud_g05
06:41:04  54  ,aud_g06
06:41:04  55  ,aud_g07
06:41:04  56  ,aud_g08
06:41:04  57  ,aud_g09
06:41:04  58  ,aud_g10
06:41:04  59  ,aud_g11
06:41:04  60  ,aud_g12
06:41:04  61  ,aud_g13
06:41:04  62  ,aud_g14
06:41:04  63  ,aud_g15
06:41:04  64  ,aud_g16
06:41:04  65  ,aud_g17
06:41:04  66  ,aud_g18
06:41:04  67  ,aud_g19
06:41:04  68  ,aud_g20
06:41:04  69  ,aud_g21
06:41:04  70  ,aud_g22
06:41:04  71  ,aud_g23
06:41:04  72  ,aud_g24
06:41:04  73  ,aud_g25
06:41:04  74  ,aud_g26
06:41:04  75  ,aud_g27
06:41:04  76  ,aud_g28
06:41:04  77  ,aud_g29
06:41:04  78  ,aud_g30
06:41:04  79  ,aud_g31
06:41:04  80  ,aud_g32
06:41:04  81  ,aud_g33
06:41:04  82  ,aud_g34
06:41:04  83  ,aud_g35
06:41:04  84  ,aud_g36
06:41:04  85  ,aud_g37
06:41:04  86  ,aud_g38
06:41:04  87  ,aud_g39
06:41:04  88  ,aud_g40
06:41:04  89  ,aud_g41
06:41:04  90  ,gbp_g00
06:41:04  91  ,gbp_g01
06:41:04  92  ,gbp_g02
06:41:04  93  ,gbp_g03
06:41:04  94  ,gbp_g04
06:41:04  95  ,gbp_g05
06:41:04  96  ,gbp_g06
06:41:04  97  ,gbp_g07
06:41:04  98  ,gbp_g08
06:41:04  99  ,gbp_g09
06:41:04 100  ,gbp_g10
06:41:04 101  ,gbp_g11
06:41:04 102  ,gbp_g12
06:41:04 103  ,gbp_g13
06:41:04 104  ,gbp_g14
06:41:04 105  ,gbp_g15
06:41:04 106  ,gbp_g16
06:41:04 107  ,gbp_g17
06:41:04 108  ,gbp_g18
06:41:04 109  ,gbp_g19
06:41:04 110  ,gbp_g20
06:41:04 111  ,gbp_g21
06:41:04 112  ,gbp_g22
06:41:04 113  ,gbp_g23
06:41:04 114  ,gbp_g24
06:41:04 115  ,gbp_g25
06:41:04 116  ,gbp_g26
06:41:04 117  ,gbp_g27
06:41:04 118  ,gbp_g28
06:41:04 119  ,gbp_g29
06:41:04 120  ,gbp_g30
06:41:04 121  ,gbp_g31
06:41:04 122  ,gbp_g32
06:41:04 123  ,gbp_g33
06:41:04 124  ,gbp_g34
06:41:04 125  ,gbp_g35
06:41:04 126  ,gbp_g36
06:41:04 127  ,gbp_g37
06:41:04 128  ,gbp_g38
06:41:04 129  ,gbp_g39
06:41:04 130  ,gbp_g40
06:41:04 131  ,gbp_g41
06:41:04 132  ,jpy_g00
06:41:04 133  ,jpy_g01
06:41:04 134  ,jpy_g02
06:41:04 135  ,jpy_g03
06:41:04 136  ,jpy_g04
06:41:04 137  ,jpy_g05
06:41:04 138  ,jpy_g06
06:41:04 139  ,jpy_g07
06:41:04 140  ,jpy_g08
06:41:04 141  ,jpy_g09
06:41:04 142  ,jpy_g10
06:41:04 143  ,jpy_g11
06:41:04 144  ,jpy_g12
06:41:04 145  ,jpy_g13
06:41:04 146  ,jpy_g14
06:41:04 147  ,jpy_g15
06:41:04 148  ,jpy_g16
06:41:04 149  ,jpy_g17
06:41:04 150  ,jpy_g18
06:41:04 151  ,jpy_g19
06:41:04 152  ,jpy_g20
06:41:04 153  ,jpy_g21
06:41:04 154  ,jpy_g22
06:41:04 155  ,jpy_g23
06:41:04 156  ,jpy_g24
06:41:04 157  ,jpy_g25
06:41:04 158  ,jpy_g26
06:41:04 159  ,jpy_g27
06:41:04 160  ,jpy_g28
06:41:04 161  ,jpy_g29
06:41:04 162  ,jpy_g30
06:41:04 163  ,jpy_g31
06:41:04 164  ,jpy_g32
06:41:04 165  ,jpy_g33
06:41:04 166  ,jpy_g34
06:41:04 167  ,jpy_g35
06:41:04 168  ,jpy_g36
06:41:04 169  ,jpy_g37
06:41:04 170  ,jpy_g38
06:41:04 171  ,jpy_g39
06:41:04 172  ,jpy_g40
06:41:04 173  ,jpy_g41
06:41:04 174  ,cad_g00
06:41:04 175  ,cad_g01
06:41:04 176  ,cad_g02
06:41:04 177  ,cad_g03
06:41:04 178  ,cad_g04
06:41:04 179  ,cad_g05
06:41:04 180  ,cad_g06
06:41:04 181  ,cad_g07
06:41:04 182  ,cad_g08
06:41:04 183  ,cad_g09
06:41:04 184  ,cad_g10
06:41:04 185  ,cad_g11
06:41:04 186  ,cad_g12
06:41:04 187  ,cad_g13
06:41:04 188  ,cad_g14
06:41:04 189  ,cad_g15
06:41:04 190  ,cad_g16
06:41:04 191  ,cad_g17
06:41:04 192  ,cad_g18
06:41:04 193  ,cad_g19
06:41:04 194  ,cad_g20
06:41:04 195  ,cad_g21
06:41:04 196  ,cad_g22
06:41:04 197  ,cad_g23
06:41:04 198  ,cad_g24
06:41:04 199  ,cad_g25
06:41:04 200  ,cad_g26
06:41:04 201  ,cad_g27
06:41:04 202  ,cad_g28
06:41:04 203  ,cad_g29
06:41:04 204  ,cad_g30
06:41:04 205  ,cad_g31
06:41:04 206  ,cad_g32
06:41:04 207  ,cad_g33
06:41:04 208  ,cad_g34
06:41:04 209  ,cad_g35
06:41:04 210  ,cad_g36
06:41:04 211  ,cad_g37
06:41:04 212  ,cad_g38
06:41:04 213  ,cad_g39
06:41:04 214  ,cad_g40
06:41:04 215  ,cad_g41
06:41:04 216  ,chf_g00
06:41:04 217  ,chf_g01
06:41:04 218  ,chf_g02
06:41:04 219  ,chf_g03
06:41:04 220  ,chf_g04
06:41:04 221  ,chf_g05
06:41:04 222  ,chf_g06
06:41:04 223  ,chf_g07
06:41:04 224  ,chf_g08
06:41:04 225  ,chf_g09
06:41:04 226  ,chf_g10
06:41:04 227  ,chf_g11
06:41:04 228  ,chf_g12
06:41:04 229  ,chf_g13
06:41:04 230  ,chf_g14
06:41:04 231  ,chf_g15
06:41:04 232  ,chf_g16
06:41:04 233  ,chf_g17
06:41:04 234  ,chf_g18
06:41:04 235  ,chf_g19
06:41:04 236  ,chf_g20
06:41:04 237  ,chf_g21
06:41:04 238  ,chf_g22
06:41:04 239  ,chf_g23
06:41:04 240  ,chf_g24
06:41:04 241  ,chf_g25
06:41:04 242  ,chf_g26
06:41:04 243  ,chf_g27
06:41:04 244  ,chf_g28
06:41:04 245  ,chf_g29
06:41:04 246  ,chf_g30
06:41:04 247  ,chf_g31
06:41:04 248  ,chf_g32
06:41:04 249  ,chf_g33
06:41:04 250  ,chf_g34
06:41:04 251  ,chf_g35
06:41:04 252  ,chf_g36
06:41:04 253  ,chf_g37
06:41:04 254  ,chf_g38
06:41:04 255  ,chf_g39
06:41:04 256  ,chf_g40
06:41:04 257  ,chf_g41
06:41:04 258  FROM aud_ms6 m
06:41:04 259  WHERE m.ydate = '&1'||' '||'&2'
06:41:04 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-27'||' '||'06:00:00'

View created.

Elapsed: 00:00:00.13
06:41:04 SQL> 
06:41:04 SQL> -- rpt
06:41:04 SQL> -- We should see just 1 row:
06:41:04 SQL> 
06:41:04 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
06:41:04 SQL> 
06:41:04 SQL> -- Build the model:
06:41:04 SQL> CREATE OR REPLACE VIEW bme AS
06:41:04   2  SELECT
06:41:04   3  'aud'||m.ydate prdate
06:41:04   4  ,gattn
06:41:04   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:41:04   6  ,eur_g00
06:41:04   7  ,eur_g01
06:41:04   8  ,eur_g02
06:41:04   9  ,eur_g03
06:41:04  10  ,eur_g04
06:41:04  11  ,eur_g05
06:41:04  12  ,eur_g06
06:41:04  13  ,eur_g07
06:41:04  14  ,eur_g08
06:41:04  15  ,eur_g09
06:41:04  16  ,eur_g10
06:41:04  17  ,eur_g11
06:41:04  18  ,eur_g12
06:41:04  19  ,eur_g13
06:41:04  20  ,eur_g14
06:41:04  21  ,eur_g15
06:41:04  22  ,eur_g16
06:41:04  23  ,eur_g17
06:41:04  24  ,eur_g18
06:41:04  25  ,eur_g19
06:41:04  26  ,eur_g20
06:41:04  27  ,eur_g21
06:41:04  28  ,eur_g22
06:41:04  29  ,eur_g23
06:41:04  30  ,eur_g24
06:41:04  31  ,eur_g25
06:41:04  32  ,eur_g26
06:41:04  33  ,eur_g27
06:41:04  34  ,eur_g28
06:41:04  35  ,eur_g29
06:41:04  36  ,eur_g30
06:41:04  37  ,eur_g31
06:41:04  38  ,eur_g32
06:41:04  39  ,eur_g33
06:41:04  40  ,eur_g34
06:41:04  41  ,eur_g35
06:41:04  42  ,eur_g36
06:41:04  43  ,eur_g37
06:41:04  44  ,eur_g38
06:41:04  45  ,eur_g39
06:41:04  46  ,eur_g40
06:41:04  47  ,eur_g41
06:41:04  48  ,aud_g00
06:41:04  49  ,aud_g01
06:41:04  50  ,aud_g02
06:41:04  51  ,aud_g03
06:41:04  52  ,aud_g04
06:41:04  53  ,aud_g05
06:41:04  54  ,aud_g06
06:41:04  55  ,aud_g07
06:41:04  56  ,aud_g08
06:41:04  57  ,aud_g09
06:41:04  58  ,aud_g10
06:41:04  59  ,aud_g11
06:41:04  60  ,aud_g12
06:41:04  61  ,aud_g13
06:41:04  62  ,aud_g14
06:41:04  63  ,aud_g15
06:41:04  64  ,aud_g16
06:41:04  65  ,aud_g17
06:41:04  66  ,aud_g18
06:41:04  67  ,aud_g19
06:41:04  68  ,aud_g20
06:41:04  69  ,aud_g21
06:41:04  70  ,aud_g22
06:41:04  71  ,aud_g23
06:41:04  72  ,aud_g24
06:41:04  73  ,aud_g25
06:41:04  74  ,aud_g26
06:41:04  75  ,aud_g27
06:41:04  76  ,aud_g28
06:41:04  77  ,aud_g29
06:41:04  78  ,aud_g30
06:41:04  79  ,aud_g31
06:41:04  80  ,aud_g32
06:41:04  81  ,aud_g33
06:41:04  82  ,aud_g34
06:41:04  83  ,aud_g35
06:41:04  84  ,aud_g36
06:41:04  85  ,aud_g37
06:41:04  86  ,aud_g38
06:41:04  87  ,aud_g39
06:41:04  88  ,aud_g40
06:41:04  89  ,aud_g41
06:41:04  90  ,gbp_g00
06:41:04  91  ,gbp_g01
06:41:04  92  ,gbp_g02
06:41:04  93  ,gbp_g03
06:41:04  94  ,gbp_g04
06:41:04  95  ,gbp_g05
06:41:04  96  ,gbp_g06
06:41:04  97  ,gbp_g07
06:41:04  98  ,gbp_g08
06:41:04  99  ,gbp_g09
06:41:04 100  ,gbp_g10
06:41:04 101  ,gbp_g11
06:41:04 102  ,gbp_g12
06:41:04 103  ,gbp_g13
06:41:04 104  ,gbp_g14
06:41:04 105  ,gbp_g15
06:41:04 106  ,gbp_g16
06:41:04 107  ,gbp_g17
06:41:04 108  ,gbp_g18
06:41:04 109  ,gbp_g19
06:41:04 110  ,gbp_g20
06:41:04 111  ,gbp_g21
06:41:04 112  ,gbp_g22
06:41:04 113  ,gbp_g23
06:41:04 114  ,gbp_g24
06:41:04 115  ,gbp_g25
06:41:04 116  ,gbp_g26
06:41:04 117  ,gbp_g27
06:41:04 118  ,gbp_g28
06:41:04 119  ,gbp_g29
06:41:04 120  ,gbp_g30
06:41:04 121  ,gbp_g31
06:41:04 122  ,gbp_g32
06:41:04 123  ,gbp_g33
06:41:04 124  ,gbp_g34
06:41:04 125  ,gbp_g35
06:41:04 126  ,gbp_g36
06:41:04 127  ,gbp_g37
06:41:04 128  ,gbp_g38
06:41:04 129  ,gbp_g39
06:41:04 130  ,gbp_g40
06:41:04 131  ,gbp_g41
06:41:04 132  ,jpy_g00
06:41:04 133  ,jpy_g01
06:41:04 134  ,jpy_g02
06:41:04 135  ,jpy_g03
06:41:04 136  ,jpy_g04
06:41:04 137  ,jpy_g05
06:41:04 138  ,jpy_g06
06:41:04 139  ,jpy_g07
06:41:04 140  ,jpy_g08
06:41:04 141  ,jpy_g09
06:41:04 142  ,jpy_g10
06:41:04 143  ,jpy_g11
06:41:04 144  ,jpy_g12
06:41:04 145  ,jpy_g13
06:41:04 146  ,jpy_g14
06:41:04 147  ,jpy_g15
06:41:04 148  ,jpy_g16
06:41:04 149  ,jpy_g17
06:41:04 150  ,jpy_g18
06:41:04 151  ,jpy_g19
06:41:04 152  ,jpy_g20
06:41:04 153  ,jpy_g21
06:41:04 154  ,jpy_g22
06:41:04 155  ,jpy_g23
06:41:04 156  ,jpy_g24
06:41:04 157  ,jpy_g25
06:41:04 158  ,jpy_g26
06:41:04 159  ,jpy_g27
06:41:04 160  ,jpy_g28
06:41:04 161  ,jpy_g29
06:41:04 162  ,jpy_g30
06:41:04 163  ,jpy_g31
06:41:04 164  ,jpy_g32
06:41:04 165  ,jpy_g33
06:41:04 166  ,jpy_g34
06:41:04 167  ,jpy_g35
06:41:04 168  ,jpy_g36
06:41:04 169  ,jpy_g37
06:41:04 170  ,jpy_g38
06:41:04 171  ,jpy_g39
06:41:04 172  ,jpy_g40
06:41:04 173  ,jpy_g41
06:41:04 174  ,cad_g00
06:41:04 175  ,cad_g01
06:41:04 176  ,cad_g02
06:41:04 177  ,cad_g03
06:41:04 178  ,cad_g04
06:41:04 179  ,cad_g05
06:41:04 180  ,cad_g06
06:41:04 181  ,cad_g07
06:41:04 182  ,cad_g08
06:41:04 183  ,cad_g09
06:41:04 184  ,cad_g10
06:41:04 185  ,cad_g11
06:41:04 186  ,cad_g12
06:41:04 187  ,cad_g13
06:41:04 188  ,cad_g14
06:41:04 189  ,cad_g15
06:41:04 190  ,cad_g16
06:41:04 191  ,cad_g17
06:41:04 192  ,cad_g18
06:41:04 193  ,cad_g19
06:41:04 194  ,cad_g20
06:41:04 195  ,cad_g21
06:41:04 196  ,cad_g22
06:41:04 197  ,cad_g23
06:41:04 198  ,cad_g24
06:41:04 199  ,cad_g25
06:41:04 200  ,cad_g26
06:41:04 201  ,cad_g27
06:41:04 202  ,cad_g28
06:41:04 203  ,cad_g29
06:41:04 204  ,cad_g30
06:41:04 205  ,cad_g31
06:41:04 206  ,cad_g32
06:41:04 207  ,cad_g33
06:41:04 208  ,cad_g34
06:41:04 209  ,cad_g35
06:41:04 210  ,cad_g36
06:41:04 211  ,cad_g37
06:41:04 212  ,cad_g38
06:41:04 213  ,cad_g39
06:41:04 214  ,cad_g40
06:41:04 215  ,cad_g41
06:41:04 216  ,chf_g00
06:41:04 217  ,chf_g01
06:41:04 218  ,chf_g02
06:41:04 219  ,chf_g03
06:41:04 220  ,chf_g04
06:41:04 221  ,chf_g05
06:41:04 222  ,chf_g06
06:41:04 223  ,chf_g07
06:41:04 224  ,chf_g08
06:41:04 225  ,chf_g09
06:41:04 226  ,chf_g10
06:41:04 227  ,chf_g11
06:41:04 228  ,chf_g12
06:41:04 229  ,chf_g13
06:41:04 230  ,chf_g14
06:41:04 231  ,chf_g15
06:41:04 232  ,chf_g16
06:41:04 233  ,chf_g17
06:41:04 234  ,chf_g18
06:41:04 235  ,chf_g19
06:41:04 236  ,chf_g20
06:41:04 237  ,chf_g21
06:41:04 238  ,chf_g22
06:41:04 239  ,chf_g23
06:41:04 240  ,chf_g24
06:41:04 241  ,chf_g25
06:41:04 242  ,chf_g26
06:41:04 243  ,chf_g27
06:41:04 244  ,chf_g28
06:41:04 245  ,chf_g29
06:41:04 246  ,chf_g30
06:41:04 247  ,chf_g31
06:41:04 248  ,chf_g32
06:41:04 249  ,chf_g33
06:41:04 250  ,chf_g34
06:41:04 251  ,chf_g35
06:41:04 252  ,chf_g36
06:41:04 253  ,chf_g37
06:41:04 254  ,chf_g38
06:41:04 255  ,chf_g39
06:41:04 256  ,chf_g40
06:41:04 257  ,chf_g41
06:41:04 258  FROM aud_ms6 m
06:41:04 259  WHERE gattn IN('nup','up')
06:41:04 260  AND 1+m.ydate < '&1'||' '||'&2'
06:41:04 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-27'||' '||'06:00:00'

View created.

Elapsed: 00:00:00.13
06:41:04 SQL> 
06:41:04 SQL> -- rpt
06:41:04 SQL> 
06:41:04 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12807
up	     6371

Elapsed: 00:00:00.04
06:41:04 SQL> 
06:41:04 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-24 21:55:00

Elapsed: 00:00:00.04
06:41:04 SQL> 
06:41:04 SQL> -- Now build model from bme and score sme
06:41:04 SQL> @score1gattn.sql
06:41:04 SQL> -- score1gattn.sql
06:41:04 SQL> 
06:41:04 SQL> -- Does the 1st SVM score
06:41:04 SQL> 
06:41:04 SQL> -- Fill up svmc_apply_prep
06:41:04 SQL> @score_gattn.sql
06:41:04 SQL> --
06:41:04 SQL> -- score_gattn.sql
06:41:04 SQL> --
06:41:04 SQL> 
06:41:04 SQL> -- usage: score_gattn.sql
06:41:04 SQL> 
06:41:04 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:41:04 SQL> 
06:41:04 SQL> DEFINE target	= 'gattn'
06:41:04 SQL> DEFINE model_name = 'forex14'
06:41:04 SQL> DEFINE bldtable	= 'bme'
06:41:04 SQL> DEFINE scoretable = 'sme'
06:41:04 SQL> DEFINE case_id	= 'prdate'
06:41:04 SQL> 
06:41:04 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:41:04 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:41:04 SQL> 
06:41:04 SQL> -- Builds an SVM model using pl/sql.
06:41:04 SQL> 
06:41:04 SQL> -----------------------------------------------------------------------
06:41:04 SQL> --			    BUILD THE MODEL
06:41:04 SQL> -----------------------------------------------------------------------
06:41:04 SQL> 
06:41:04 SQL> -- Cleanup old build data preparation objects for repeat runs
06:41:04 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
06:41:04 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:41:04 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
06:41:04 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
06:41:04 SQL> 
06:41:04 SQL> 
06:41:04 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:41:04 SQL> --
06:41:04 SQL> -- DROP	TABLE svmc_settings ;
06:41:04 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:41:04 SQL> -- DELETE svmc_settings;
06:41:04 SQL> 
06:41:04 SQL> -- The default classification algorithm is Naive Bayes. So override
06:41:04 SQL> -- this choice to SVM using a settings table.
06:41:04 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:41:04 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:41:04 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:41:04 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:41:04 SQL> -- models.
06:41:04 SQL> --
06:41:04 SQL> 
06:41:04 SQL> -- Do this once and then comment it out.
06:41:04 SQL> -- That makes script go faster.
06:41:04 SQL> -- BEGIN
06:41:04 SQL> -- -- Populate settings table
06:41:04 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:41:04 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:41:04 SQL> --
06:41:04 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:41:04 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:41:04 SQL> --
06:41:04 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:41:04 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:41:04 SQL> --   COMMIT;
06:41:04 SQL> -- END;
06:41:04 SQL> -- /
06:41:04 SQL> 
06:41:04 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:41:04 SQL> 
06:41:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:41:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:41:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:41:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:41:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:41:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
06:41:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:41:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:41:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:41:04 SQL> 
06:41:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:41:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:41:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:41:04 SQL> 
06:41:04 SQL> --------------------------------
06:41:04 SQL> -- PREPARE BUILD (TRAINING) DATA
06:41:04 SQL> --
06:41:04 SQL> 
06:41:04 SQL> -- 1. Missing Value treatment for all Predictors and
06:41:04 SQL> -- 2. Outlier Treatment and
06:41:04 SQL> -- 3. Normalization are performed below.
06:41:04 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:41:04 SQL> --    normalized here.
06:41:04 SQL> 
06:41:04 SQL> BEGIN
06:41:04   2  	-- Perform missing value treatment for all predictors
06:41:04   3  	-- create miss tables
06:41:04   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:41:04   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:41:04   6  
06:41:04   7  	-- populate miss tables
06:41:04   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:41:04   9  	  miss_table_name => 'svmc_miss_num',
06:41:04  10  	  data_table_name => '&bldtable',
06:41:04  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:41:04  12  
06:41:04  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:41:04  14  	  miss_table_name => 'svmc_miss_cat',
06:41:04  15  	  data_table_name => '&bldtable',
06:41:04  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:41:04  17  
06:41:04  18  	-- xform input data to replace missing values
06:41:04  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:41:04  20  	  miss_table_name => 'svmc_miss_num',
06:41:04  21  	  data_table_name => '&bldtable',
06:41:04  22  	  xform_view_name => 'xformed_build_miss_num');
06:41:04  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:41:04  24  	  miss_table_name => 'svmc_miss_cat',
06:41:04  25  	  data_table_name => '&bldtable',
06:41:04  26  	  xform_view_name => 'xformed_build_miss_cat');
06:41:04  27  
06:41:04  28  	-- Perform outlier treatment.
06:41:04  29  	-- create clip table
06:41:04  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:41:04  31  
06:41:04  32  	-- populate clip table
06:41:04  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:41:04  34  	  clip_table_name => 'svmc_clip',
06:41:04  35  	  data_table_name => '&bldtable',
06:41:04  36  	  tail_frac	  => 0.025,
06:41:04  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:41:04  38  
06:41:04  39  	-- xform input data to winsorized data
06:41:04  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:41:04  41  	  clip_table_name => 'svmc_clip',
06:41:04  42  	  data_table_name => '&bldtable',
06:41:04  43  	  xform_view_name => 'svmc_winsor');
06:41:04  44  
06:41:04  45  	-- create normalization table
06:41:04  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:41:04  47  
06:41:04  48  	-- populate normalization table based on winsorized data
06:41:04  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:41:04  50  	  norm_table_name => 'svmc_norm',
06:41:04  51  	  data_table_name => 'svmc_winsor',
06:41:04  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:41:04  53  
06:41:04  54  	-- normalize the original data
06:41:04  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:41:04  56  	  norm_table_name => 'svmc_norm',
06:41:04  57  	  data_table_name => '&bldtable',
06:41:04  58  	  xform_view_name => 'svmc_build_prep');
06:41:04  59  END;
06:41:04  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.50
06:41:22 SQL> 
06:41:22 SQL> ---------------------
06:41:22 SQL> -- CREATE A NEW MODEL
06:41:22 SQL> --
06:41:22 SQL> -- Cleanup old model with the same name for repeat runs
06:41:22 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:41:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:41:22   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.92
06:41:23 SQL> 
06:41:23 SQL> -- Build a new SVM Model
06:41:23 SQL> BEGIN
06:41:23   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:41:23   3  	  model_name	      => '&model_name',
06:41:23   4  	  mining_function     => dbms_data_mining.classification,
06:41:23   5  	  data_table_name     => 'svmc_build_prep',
06:41:23   6  	  case_id_column_name => '&case_id',
06:41:23   7  	  target_column_name  => '&target',
06:41:23   8  	  settings_table_name => 'svmc_settings');
06:41:23   9  END;
06:41:23  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.84
06:41:49 SQL> 
06:41:49 SQL> -----------------------------------------------------------------------
06:41:49 SQL> --			       APPLY/score THE MODEL
06:41:49 SQL> -----------------------------------------------------------------------
06:41:49 SQL> 
06:41:49 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:41:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:41:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:41:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:41:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:41:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:41:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:41:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:41:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:41:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:41:49 SQL> -----------------------
06:41:49 SQL> -- PREPARE SCORING DATA
06:41:49 SQL> --
06:41:49 SQL> -- If the data for model creation has been prepared, then the data
06:41:49 SQL> -- to be scored using the model must be prepared in the same manner
06:41:49 SQL> -- in order to obtain meaningful results.
06:41:49 SQL> --
06:41:49 SQL> -- 1. Missing Value treatment for all Predictors and
06:41:49 SQL> -- 2. Normalization
06:41:49 SQL> -- No outlier treatment will be performed during test and apply. The
06:41:49 SQL> -- normalization step is sufficient, since the normalization parameters
06:41:49 SQL> -- already capture the effects of outlier treatment done with build data.
06:41:49 SQL> --
06:41:49 SQL> BEGIN
06:41:49   2  	-- Xform Test data to replace missing values
06:41:49   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:41:49   4  	  miss_table_name => 'svmc_miss_num',
06:41:49   5  	  data_table_name => '&scoretable',
06:41:49   6  	  xform_view_name => 'xformed_apply_miss_num');
06:41:49   7  
06:41:49   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:41:49   9  	  miss_table_name => 'svmc_miss_cat',
06:41:49  10  	  data_table_name => '&scoretable',
06:41:49  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:41:49  12  
06:41:49  13  	-- Normalize the data to be scored
06:41:49  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:41:49  15  	  norm_table_name => 'svmc_norm',
06:41:49  16  	  data_table_name => '&scoretable',
06:41:49  17  	  xform_view_name => 'svmc_apply_prep');
06:41:49  18  END;
06:41:49  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.16
06:41:50 SQL> 
06:41:50 SQL> -- Use same model_name used in score_gattn.sql
06:41:50 SQL> DEFINE model_name = 'forex14'
06:41:50 SQL> 
06:41:50 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
06:41:50 SQL> 
06:41:50 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
06:41:50   2  SELECT
06:41:50   3  prdate
06:41:50   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:41:50   5  ,sysdate
06:41:50   6  ,SUBSTR(prdate,1,3)pair
06:41:50   7  ,SUBSTR(prdate,4,19)ydate
06:41:50   8  FROM svmc_apply_prep
06:41:50   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
06:41:50 SQL> @aud_score1day_gattn.sql	2010-12-27 06:15:00
06:41:50 SQL> --
06:41:50 SQL> -- aud_score1day_gattn.sql
06:41:50 SQL> --
06:41:50 SQL> 
06:41:50 SQL> CREATE OR REPLACE VIEW sme AS
06:41:50   2  SELECT
06:41:50   3  'aud'||m.ydate prdate
06:41:50   4  ,NULL gattn
06:41:50   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:41:50   6  ,eur_g00
06:41:50   7  ,eur_g01
06:41:50   8  ,eur_g02
06:41:50   9  ,eur_g03
06:41:50  10  ,eur_g04
06:41:50  11  ,eur_g05
06:41:50  12  ,eur_g06
06:41:50  13  ,eur_g07
06:41:50  14  ,eur_g08
06:41:50  15  ,eur_g09
06:41:50  16  ,eur_g10
06:41:50  17  ,eur_g11
06:41:50  18  ,eur_g12
06:41:50  19  ,eur_g13
06:41:50  20  ,eur_g14
06:41:50  21  ,eur_g15
06:41:50  22  ,eur_g16
06:41:50  23  ,eur_g17
06:41:50  24  ,eur_g18
06:41:50  25  ,eur_g19
06:41:50  26  ,eur_g20
06:41:50  27  ,eur_g21
06:41:50  28  ,eur_g22
06:41:50  29  ,eur_g23
06:41:50  30  ,eur_g24
06:41:50  31  ,eur_g25
06:41:50  32  ,eur_g26
06:41:50  33  ,eur_g27
06:41:50  34  ,eur_g28
06:41:50  35  ,eur_g29
06:41:50  36  ,eur_g30
06:41:50  37  ,eur_g31
06:41:50  38  ,eur_g32
06:41:50  39  ,eur_g33
06:41:50  40  ,eur_g34
06:41:50  41  ,eur_g35
06:41:50  42  ,eur_g36
06:41:50  43  ,eur_g37
06:41:50  44  ,eur_g38
06:41:50  45  ,eur_g39
06:41:50  46  ,eur_g40
06:41:50  47  ,eur_g41
06:41:50  48  ,aud_g00
06:41:50  49  ,aud_g01
06:41:50  50  ,aud_g02
06:41:50  51  ,aud_g03
06:41:50  52  ,aud_g04
06:41:50  53  ,aud_g05
06:41:50  54  ,aud_g06
06:41:50  55  ,aud_g07
06:41:50  56  ,aud_g08
06:41:50  57  ,aud_g09
06:41:50  58  ,aud_g10
06:41:50  59  ,aud_g11
06:41:50  60  ,aud_g12
06:41:50  61  ,aud_g13
06:41:50  62  ,aud_g14
06:41:50  63  ,aud_g15
06:41:50  64  ,aud_g16
06:41:50  65  ,aud_g17
06:41:50  66  ,aud_g18
06:41:50  67  ,aud_g19
06:41:50  68  ,aud_g20
06:41:50  69  ,aud_g21
06:41:50  70  ,aud_g22
06:41:50  71  ,aud_g23
06:41:50  72  ,aud_g24
06:41:50  73  ,aud_g25
06:41:50  74  ,aud_g26
06:41:50  75  ,aud_g27
06:41:50  76  ,aud_g28
06:41:50  77  ,aud_g29
06:41:50  78  ,aud_g30
06:41:50  79  ,aud_g31
06:41:50  80  ,aud_g32
06:41:50  81  ,aud_g33
06:41:50  82  ,aud_g34
06:41:50  83  ,aud_g35
06:41:50  84  ,aud_g36
06:41:50  85  ,aud_g37
06:41:50  86  ,aud_g38
06:41:50  87  ,aud_g39
06:41:50  88  ,aud_g40
06:41:50  89  ,aud_g41
06:41:50  90  ,gbp_g00
06:41:50  91  ,gbp_g01
06:41:50  92  ,gbp_g02
06:41:50  93  ,gbp_g03
06:41:50  94  ,gbp_g04
06:41:50  95  ,gbp_g05
06:41:50  96  ,gbp_g06
06:41:50  97  ,gbp_g07
06:41:50  98  ,gbp_g08
06:41:50  99  ,gbp_g09
06:41:50 100  ,gbp_g10
06:41:50 101  ,gbp_g11
06:41:50 102  ,gbp_g12
06:41:50 103  ,gbp_g13
06:41:50 104  ,gbp_g14
06:41:50 105  ,gbp_g15
06:41:50 106  ,gbp_g16
06:41:50 107  ,gbp_g17
06:41:50 108  ,gbp_g18
06:41:50 109  ,gbp_g19
06:41:50 110  ,gbp_g20
06:41:50 111  ,gbp_g21
06:41:50 112  ,gbp_g22
06:41:50 113  ,gbp_g23
06:41:50 114  ,gbp_g24
06:41:50 115  ,gbp_g25
06:41:50 116  ,gbp_g26
06:41:50 117  ,gbp_g27
06:41:50 118  ,gbp_g28
06:41:50 119  ,gbp_g29
06:41:50 120  ,gbp_g30
06:41:50 121  ,gbp_g31
06:41:50 122  ,gbp_g32
06:41:50 123  ,gbp_g33
06:41:50 124  ,gbp_g34
06:41:50 125  ,gbp_g35
06:41:50 126  ,gbp_g36
06:41:50 127  ,gbp_g37
06:41:50 128  ,gbp_g38
06:41:50 129  ,gbp_g39
06:41:50 130  ,gbp_g40
06:41:50 131  ,gbp_g41
06:41:50 132  ,jpy_g00
06:41:50 133  ,jpy_g01
06:41:50 134  ,jpy_g02
06:41:50 135  ,jpy_g03
06:41:50 136  ,jpy_g04
06:41:50 137  ,jpy_g05
06:41:50 138  ,jpy_g06
06:41:50 139  ,jpy_g07
06:41:50 140  ,jpy_g08
06:41:50 141  ,jpy_g09
06:41:50 142  ,jpy_g10
06:41:50 143  ,jpy_g11
06:41:50 144  ,jpy_g12
06:41:50 145  ,jpy_g13
06:41:50 146  ,jpy_g14
06:41:50 147  ,jpy_g15
06:41:50 148  ,jpy_g16
06:41:50 149  ,jpy_g17
06:41:50 150  ,jpy_g18
06:41:50 151  ,jpy_g19
06:41:50 152  ,jpy_g20
06:41:50 153  ,jpy_g21
06:41:50 154  ,jpy_g22
06:41:50 155  ,jpy_g23
06:41:50 156  ,jpy_g24
06:41:50 157  ,jpy_g25
06:41:50 158  ,jpy_g26
06:41:50 159  ,jpy_g27
06:41:50 160  ,jpy_g28
06:41:50 161  ,jpy_g29
06:41:50 162  ,jpy_g30
06:41:50 163  ,jpy_g31
06:41:50 164  ,jpy_g32
06:41:50 165  ,jpy_g33
06:41:50 166  ,jpy_g34
06:41:50 167  ,jpy_g35
06:41:50 168  ,jpy_g36
06:41:50 169  ,jpy_g37
06:41:50 170  ,jpy_g38
06:41:50 171  ,jpy_g39
06:41:50 172  ,jpy_g40
06:41:50 173  ,jpy_g41
06:41:50 174  ,cad_g00
06:41:50 175  ,cad_g01
06:41:50 176  ,cad_g02
06:41:50 177  ,cad_g03
06:41:50 178  ,cad_g04
06:41:50 179  ,cad_g05
06:41:50 180  ,cad_g06
06:41:50 181  ,cad_g07
06:41:50 182  ,cad_g08
06:41:50 183  ,cad_g09
06:41:50 184  ,cad_g10
06:41:50 185  ,cad_g11
06:41:50 186  ,cad_g12
06:41:50 187  ,cad_g13
06:41:50 188  ,cad_g14
06:41:50 189  ,cad_g15
06:41:50 190  ,cad_g16
06:41:50 191  ,cad_g17
06:41:50 192  ,cad_g18
06:41:50 193  ,cad_g19
06:41:50 194  ,cad_g20
06:41:50 195  ,cad_g21
06:41:50 196  ,cad_g22
06:41:50 197  ,cad_g23
06:41:50 198  ,cad_g24
06:41:50 199  ,cad_g25
06:41:50 200  ,cad_g26
06:41:50 201  ,cad_g27
06:41:50 202  ,cad_g28
06:41:50 203  ,cad_g29
06:41:50 204  ,cad_g30
06:41:50 205  ,cad_g31
06:41:50 206  ,cad_g32
06:41:50 207  ,cad_g33
06:41:50 208  ,cad_g34
06:41:50 209  ,cad_g35
06:41:50 210  ,cad_g36
06:41:50 211  ,cad_g37
06:41:50 212  ,cad_g38
06:41:50 213  ,cad_g39
06:41:50 214  ,cad_g40
06:41:50 215  ,cad_g41
06:41:50 216  ,chf_g00
06:41:50 217  ,chf_g01
06:41:50 218  ,chf_g02
06:41:50 219  ,chf_g03
06:41:50 220  ,chf_g04
06:41:50 221  ,chf_g05
06:41:50 222  ,chf_g06
06:41:50 223  ,chf_g07
06:41:50 224  ,chf_g08
06:41:50 225  ,chf_g09
06:41:50 226  ,chf_g10
06:41:50 227  ,chf_g11
06:41:50 228  ,chf_g12
06:41:50 229  ,chf_g13
06:41:50 230  ,chf_g14
06:41:50 231  ,chf_g15
06:41:50 232  ,chf_g16
06:41:50 233  ,chf_g17
06:41:50 234  ,chf_g18
06:41:50 235  ,chf_g19
06:41:50 236  ,chf_g20
06:41:50 237  ,chf_g21
06:41:50 238  ,chf_g22
06:41:50 239  ,chf_g23
06:41:50 240  ,chf_g24
06:41:50 241  ,chf_g25
06:41:50 242  ,chf_g26
06:41:50 243  ,chf_g27
06:41:50 244  ,chf_g28
06:41:50 245  ,chf_g29
06:41:50 246  ,chf_g30
06:41:50 247  ,chf_g31
06:41:50 248  ,chf_g32
06:41:50 249  ,chf_g33
06:41:50 250  ,chf_g34
06:41:50 251  ,chf_g35
06:41:50 252  ,chf_g36
06:41:50 253  ,chf_g37
06:41:50 254  ,chf_g38
06:41:50 255  ,chf_g39
06:41:50 256  ,chf_g40
06:41:50 257  ,chf_g41
06:41:50 258  FROM aud_ms6 m
06:41:50 259  WHERE m.ydate = '&1'||' '||'&2'
06:41:50 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-27'||' '||'06:15:00'

View created.

Elapsed: 00:00:00.13
06:41:50 SQL> 
06:41:50 SQL> -- rpt
06:41:50 SQL> -- We should see just 1 row:
06:41:50 SQL> 
06:41:50 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
06:41:50 SQL> 
06:41:50 SQL> -- Build the model:
06:41:50 SQL> CREATE OR REPLACE VIEW bme AS
06:41:50   2  SELECT
06:41:50   3  'aud'||m.ydate prdate
06:41:50   4  ,gattn
06:41:50   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:41:50   6  ,eur_g00
06:41:50   7  ,eur_g01
06:41:50   8  ,eur_g02
06:41:50   9  ,eur_g03
06:41:50  10  ,eur_g04
06:41:50  11  ,eur_g05
06:41:50  12  ,eur_g06
06:41:50  13  ,eur_g07
06:41:50  14  ,eur_g08
06:41:50  15  ,eur_g09
06:41:50  16  ,eur_g10
06:41:50  17  ,eur_g11
06:41:50  18  ,eur_g12
06:41:50  19  ,eur_g13
06:41:50  20  ,eur_g14
06:41:50  21  ,eur_g15
06:41:50  22  ,eur_g16
06:41:50  23  ,eur_g17
06:41:50  24  ,eur_g18
06:41:50  25  ,eur_g19
06:41:50  26  ,eur_g20
06:41:50  27  ,eur_g21
06:41:50  28  ,eur_g22
06:41:50  29  ,eur_g23
06:41:50  30  ,eur_g24
06:41:50  31  ,eur_g25
06:41:50  32  ,eur_g26
06:41:50  33  ,eur_g27
06:41:50  34  ,eur_g28
06:41:50  35  ,eur_g29
06:41:50  36  ,eur_g30
06:41:50  37  ,eur_g31
06:41:50  38  ,eur_g32
06:41:50  39  ,eur_g33
06:41:50  40  ,eur_g34
06:41:50  41  ,eur_g35
06:41:50  42  ,eur_g36
06:41:50  43  ,eur_g37
06:41:50  44  ,eur_g38
06:41:50  45  ,eur_g39
06:41:50  46  ,eur_g40
06:41:50  47  ,eur_g41
06:41:50  48  ,aud_g00
06:41:50  49  ,aud_g01
06:41:50  50  ,aud_g02
06:41:50  51  ,aud_g03
06:41:50  52  ,aud_g04
06:41:50  53  ,aud_g05
06:41:50  54  ,aud_g06
06:41:50  55  ,aud_g07
06:41:50  56  ,aud_g08
06:41:50  57  ,aud_g09
06:41:50  58  ,aud_g10
06:41:50  59  ,aud_g11
06:41:50  60  ,aud_g12
06:41:50  61  ,aud_g13
06:41:50  62  ,aud_g14
06:41:50  63  ,aud_g15
06:41:50  64  ,aud_g16
06:41:50  65  ,aud_g17
06:41:50  66  ,aud_g18
06:41:50  67  ,aud_g19
06:41:50  68  ,aud_g20
06:41:50  69  ,aud_g21
06:41:50  70  ,aud_g22
06:41:50  71  ,aud_g23
06:41:50  72  ,aud_g24
06:41:50  73  ,aud_g25
06:41:50  74  ,aud_g26
06:41:50  75  ,aud_g27
06:41:50  76  ,aud_g28
06:41:50  77  ,aud_g29
06:41:50  78  ,aud_g30
06:41:50  79  ,aud_g31
06:41:50  80  ,aud_g32
06:41:50  81  ,aud_g33
06:41:50  82  ,aud_g34
06:41:50  83  ,aud_g35
06:41:50  84  ,aud_g36
06:41:50  85  ,aud_g37
06:41:50  86  ,aud_g38
06:41:50  87  ,aud_g39
06:41:50  88  ,aud_g40
06:41:50  89  ,aud_g41
06:41:50  90  ,gbp_g00
06:41:50  91  ,gbp_g01
06:41:50  92  ,gbp_g02
06:41:50  93  ,gbp_g03
06:41:50  94  ,gbp_g04
06:41:50  95  ,gbp_g05
06:41:50  96  ,gbp_g06
06:41:50  97  ,gbp_g07
06:41:50  98  ,gbp_g08
06:41:50  99  ,gbp_g09
06:41:50 100  ,gbp_g10
06:41:50 101  ,gbp_g11
06:41:50 102  ,gbp_g12
06:41:50 103  ,gbp_g13
06:41:50 104  ,gbp_g14
06:41:50 105  ,gbp_g15
06:41:50 106  ,gbp_g16
06:41:50 107  ,gbp_g17
06:41:50 108  ,gbp_g18
06:41:50 109  ,gbp_g19
06:41:50 110  ,gbp_g20
06:41:50 111  ,gbp_g21
06:41:50 112  ,gbp_g22
06:41:50 113  ,gbp_g23
06:41:50 114  ,gbp_g24
06:41:50 115  ,gbp_g25
06:41:50 116  ,gbp_g26
06:41:50 117  ,gbp_g27
06:41:50 118  ,gbp_g28
06:41:50 119  ,gbp_g29
06:41:50 120  ,gbp_g30
06:41:50 121  ,gbp_g31
06:41:50 122  ,gbp_g32
06:41:50 123  ,gbp_g33
06:41:50 124  ,gbp_g34
06:41:50 125  ,gbp_g35
06:41:50 126  ,gbp_g36
06:41:50 127  ,gbp_g37
06:41:50 128  ,gbp_g38
06:41:50 129  ,gbp_g39
06:41:50 130  ,gbp_g40
06:41:50 131  ,gbp_g41
06:41:50 132  ,jpy_g00
06:41:50 133  ,jpy_g01
06:41:50 134  ,jpy_g02
06:41:50 135  ,jpy_g03
06:41:50 136  ,jpy_g04
06:41:50 137  ,jpy_g05
06:41:50 138  ,jpy_g06
06:41:50 139  ,jpy_g07
06:41:50 140  ,jpy_g08
06:41:50 141  ,jpy_g09
06:41:50 142  ,jpy_g10
06:41:50 143  ,jpy_g11
06:41:50 144  ,jpy_g12
06:41:50 145  ,jpy_g13
06:41:50 146  ,jpy_g14
06:41:50 147  ,jpy_g15
06:41:50 148  ,jpy_g16
06:41:50 149  ,jpy_g17
06:41:50 150  ,jpy_g18
06:41:50 151  ,jpy_g19
06:41:50 152  ,jpy_g20
06:41:50 153  ,jpy_g21
06:41:50 154  ,jpy_g22
06:41:50 155  ,jpy_g23
06:41:50 156  ,jpy_g24
06:41:50 157  ,jpy_g25
06:41:50 158  ,jpy_g26
06:41:50 159  ,jpy_g27
06:41:50 160  ,jpy_g28
06:41:50 161  ,jpy_g29
06:41:50 162  ,jpy_g30
06:41:50 163  ,jpy_g31
06:41:50 164  ,jpy_g32
06:41:50 165  ,jpy_g33
06:41:50 166  ,jpy_g34
06:41:50 167  ,jpy_g35
06:41:50 168  ,jpy_g36
06:41:50 169  ,jpy_g37
06:41:50 170  ,jpy_g38
06:41:50 171  ,jpy_g39
06:41:50 172  ,jpy_g40
06:41:50 173  ,jpy_g41
06:41:50 174  ,cad_g00
06:41:50 175  ,cad_g01
06:41:50 176  ,cad_g02
06:41:50 177  ,cad_g03
06:41:50 178  ,cad_g04
06:41:50 179  ,cad_g05
06:41:50 180  ,cad_g06
06:41:50 181  ,cad_g07
06:41:50 182  ,cad_g08
06:41:50 183  ,cad_g09
06:41:50 184  ,cad_g10
06:41:50 185  ,cad_g11
06:41:50 186  ,cad_g12
06:41:50 187  ,cad_g13
06:41:50 188  ,cad_g14
06:41:50 189  ,cad_g15
06:41:50 190  ,cad_g16
06:41:50 191  ,cad_g17
06:41:50 192  ,cad_g18
06:41:50 193  ,cad_g19
06:41:50 194  ,cad_g20
06:41:50 195  ,cad_g21
06:41:50 196  ,cad_g22
06:41:50 197  ,cad_g23
06:41:50 198  ,cad_g24
06:41:50 199  ,cad_g25
06:41:50 200  ,cad_g26
06:41:50 201  ,cad_g27
06:41:50 202  ,cad_g28
06:41:50 203  ,cad_g29
06:41:50 204  ,cad_g30
06:41:50 205  ,cad_g31
06:41:50 206  ,cad_g32
06:41:50 207  ,cad_g33
06:41:50 208  ,cad_g34
06:41:50 209  ,cad_g35
06:41:50 210  ,cad_g36
06:41:50 211  ,cad_g37
06:41:50 212  ,cad_g38
06:41:50 213  ,cad_g39
06:41:50 214  ,cad_g40
06:41:50 215  ,cad_g41
06:41:50 216  ,chf_g00
06:41:50 217  ,chf_g01
06:41:50 218  ,chf_g02
06:41:50 219  ,chf_g03
06:41:50 220  ,chf_g04
06:41:50 221  ,chf_g05
06:41:50 222  ,chf_g06
06:41:50 223  ,chf_g07
06:41:50 224  ,chf_g08
06:41:50 225  ,chf_g09
06:41:50 226  ,chf_g10
06:41:50 227  ,chf_g11
06:41:50 228  ,chf_g12
06:41:50 229  ,chf_g13
06:41:50 230  ,chf_g14
06:41:50 231  ,chf_g15
06:41:50 232  ,chf_g16
06:41:50 233  ,chf_g17
06:41:50 234  ,chf_g18
06:41:50 235  ,chf_g19
06:41:50 236  ,chf_g20
06:41:50 237  ,chf_g21
06:41:50 238  ,chf_g22
06:41:50 239  ,chf_g23
06:41:50 240  ,chf_g24
06:41:50 241  ,chf_g25
06:41:50 242  ,chf_g26
06:41:50 243  ,chf_g27
06:41:50 244  ,chf_g28
06:41:50 245  ,chf_g29
06:41:50 246  ,chf_g30
06:41:50 247  ,chf_g31
06:41:50 248  ,chf_g32
06:41:50 249  ,chf_g33
06:41:50 250  ,chf_g34
06:41:50 251  ,chf_g35
06:41:50 252  ,chf_g36
06:41:50 253  ,chf_g37
06:41:50 254  ,chf_g38
06:41:50 255  ,chf_g39
06:41:50 256  ,chf_g40
06:41:50 257  ,chf_g41
06:41:50 258  FROM aud_ms6 m
06:41:50 259  WHERE gattn IN('nup','up')
06:41:50 260  AND 1+m.ydate < '&1'||' '||'&2'
06:41:50 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-27'||' '||'06:15:00'

View created.

Elapsed: 00:00:00.12
06:41:50 SQL> 
06:41:50 SQL> -- rpt
06:41:50 SQL> 
06:41:50 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12807
up	     6371

Elapsed: 00:00:00.04
06:41:50 SQL> 
06:41:50 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-24 21:55:00

Elapsed: 00:00:00.03
06:41:50 SQL> 
06:41:50 SQL> -- Now build model from bme and score sme
06:41:50 SQL> @score1gattn.sql
06:41:50 SQL> -- score1gattn.sql
06:41:50 SQL> 
06:41:50 SQL> -- Does the 1st SVM score
06:41:50 SQL> 
06:41:50 SQL> -- Fill up svmc_apply_prep
06:41:50 SQL> @score_gattn.sql
06:41:50 SQL> --
06:41:50 SQL> -- score_gattn.sql
06:41:50 SQL> --
06:41:50 SQL> 
06:41:50 SQL> -- usage: score_gattn.sql
06:41:50 SQL> 
06:41:50 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:41:50 SQL> 
06:41:50 SQL> DEFINE target	= 'gattn'
06:41:50 SQL> DEFINE model_name = 'forex14'
06:41:50 SQL> DEFINE bldtable	= 'bme'
06:41:50 SQL> DEFINE scoretable = 'sme'
06:41:50 SQL> DEFINE case_id	= 'prdate'
06:41:50 SQL> 
06:41:50 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:41:50 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:41:50 SQL> 
06:41:50 SQL> -- Builds an SVM model using pl/sql.
06:41:50 SQL> 
06:41:50 SQL> -----------------------------------------------------------------------
06:41:50 SQL> --			    BUILD THE MODEL
06:41:50 SQL> -----------------------------------------------------------------------
06:41:50 SQL> 
06:41:50 SQL> -- Cleanup old build data preparation objects for repeat runs
06:41:50 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
06:41:50 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:41:50 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
06:41:50 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
06:41:50 SQL> 
06:41:50 SQL> 
06:41:50 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:41:50 SQL> --
06:41:50 SQL> -- DROP	TABLE svmc_settings ;
06:41:50 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:41:50 SQL> -- DELETE svmc_settings;
06:41:50 SQL> 
06:41:50 SQL> -- The default classification algorithm is Naive Bayes. So override
06:41:50 SQL> -- this choice to SVM using a settings table.
06:41:50 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:41:50 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:41:50 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:41:50 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:41:50 SQL> -- models.
06:41:50 SQL> --
06:41:50 SQL> 
06:41:50 SQL> -- Do this once and then comment it out.
06:41:50 SQL> -- That makes script go faster.
06:41:50 SQL> -- BEGIN
06:41:50 SQL> -- -- Populate settings table
06:41:50 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:41:50 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:41:50 SQL> --
06:41:50 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:41:50 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:41:50 SQL> --
06:41:50 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:41:50 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:41:50 SQL> --   COMMIT;
06:41:50 SQL> -- END;
06:41:50 SQL> -- /
06:41:50 SQL> 
06:41:50 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:41:50 SQL> 
06:41:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:41:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:41:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:41:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:41:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:41:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:41:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:41:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:41:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:41:51 SQL> 
06:41:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:41:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:41:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.29
06:41:51 SQL> 
06:41:51 SQL> --------------------------------
06:41:51 SQL> -- PREPARE BUILD (TRAINING) DATA
06:41:51 SQL> --
06:41:51 SQL> 
06:41:51 SQL> -- 1. Missing Value treatment for all Predictors and
06:41:51 SQL> -- 2. Outlier Treatment and
06:41:51 SQL> -- 3. Normalization are performed below.
06:41:51 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:41:51 SQL> --    normalized here.
06:41:51 SQL> 
06:41:51 SQL> BEGIN
06:41:51   2  	-- Perform missing value treatment for all predictors
06:41:51   3  	-- create miss tables
06:41:51   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:41:51   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:41:51   6  
06:41:51   7  	-- populate miss tables
06:41:51   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:41:51   9  	  miss_table_name => 'svmc_miss_num',
06:41:51  10  	  data_table_name => '&bldtable',
06:41:51  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:41:51  12  
06:41:51  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:41:51  14  	  miss_table_name => 'svmc_miss_cat',
06:41:51  15  	  data_table_name => '&bldtable',
06:41:51  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:41:51  17  
06:41:51  18  	-- xform input data to replace missing values
06:41:51  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:41:51  20  	  miss_table_name => 'svmc_miss_num',
06:41:51  21  	  data_table_name => '&bldtable',
06:41:51  22  	  xform_view_name => 'xformed_build_miss_num');
06:41:51  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:41:51  24  	  miss_table_name => 'svmc_miss_cat',
06:41:51  25  	  data_table_name => '&bldtable',
06:41:51  26  	  xform_view_name => 'xformed_build_miss_cat');
06:41:51  27  
06:41:51  28  	-- Perform outlier treatment.
06:41:51  29  	-- create clip table
06:41:51  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:41:51  31  
06:41:51  32  	-- populate clip table
06:41:51  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:41:51  34  	  clip_table_name => 'svmc_clip',
06:41:51  35  	  data_table_name => '&bldtable',
06:41:51  36  	  tail_frac	  => 0.025,
06:41:51  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:41:51  38  
06:41:51  39  	-- xform input data to winsorized data
06:41:51  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:41:51  41  	  clip_table_name => 'svmc_clip',
06:41:51  42  	  data_table_name => '&bldtable',
06:41:51  43  	  xform_view_name => 'svmc_winsor');
06:41:51  44  
06:41:51  45  	-- create normalization table
06:41:51  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:41:51  47  
06:41:51  48  	-- populate normalization table based on winsorized data
06:41:51  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:41:51  50  	  norm_table_name => 'svmc_norm',
06:41:51  51  	  data_table_name => 'svmc_winsor',
06:41:51  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:41:51  53  
06:41:51  54  	-- normalize the original data
06:41:51  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:41:51  56  	  norm_table_name => 'svmc_norm',
06:41:51  57  	  data_table_name => '&bldtable',
06:41:51  58  	  xform_view_name => 'svmc_build_prep');
06:41:51  59  END;
06:41:51  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.38
06:42:08 SQL> 
06:42:08 SQL> ---------------------
06:42:08 SQL> -- CREATE A NEW MODEL
06:42:08 SQL> --
06:42:08 SQL> -- Cleanup old model with the same name for repeat runs
06:42:08 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:42:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:42:08   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
06:42:09 SQL> 
06:42:09 SQL> -- Build a new SVM Model
06:42:09 SQL> BEGIN
06:42:09   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:42:09   3  	  model_name	      => '&model_name',
06:42:09   4  	  mining_function     => dbms_data_mining.classification,
06:42:09   5  	  data_table_name     => 'svmc_build_prep',
06:42:09   6  	  case_id_column_name => '&case_id',
06:42:09   7  	  target_column_name  => '&target',
06:42:09   8  	  settings_table_name => 'svmc_settings');
06:42:09   9  END;
06:42:09  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.65
06:42:36 SQL> 
06:42:36 SQL> -----------------------------------------------------------------------
06:42:36 SQL> --			       APPLY/score THE MODEL
06:42:36 SQL> -----------------------------------------------------------------------
06:42:36 SQL> 
06:42:36 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:42:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:42:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:42:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:42:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:42:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:42:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:42:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:42:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:42:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:42:36 SQL> -----------------------
06:42:36 SQL> -- PREPARE SCORING DATA
06:42:36 SQL> --
06:42:36 SQL> -- If the data for model creation has been prepared, then the data
06:42:36 SQL> -- to be scored using the model must be prepared in the same manner
06:42:36 SQL> -- in order to obtain meaningful results.
06:42:36 SQL> --
06:42:36 SQL> -- 1. Missing Value treatment for all Predictors and
06:42:36 SQL> -- 2. Normalization
06:42:36 SQL> -- No outlier treatment will be performed during test and apply. The
06:42:36 SQL> -- normalization step is sufficient, since the normalization parameters
06:42:36 SQL> -- already capture the effects of outlier treatment done with build data.
06:42:36 SQL> --
06:42:36 SQL> BEGIN
06:42:36   2  	-- Xform Test data to replace missing values
06:42:36   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:42:36   4  	  miss_table_name => 'svmc_miss_num',
06:42:36   5  	  data_table_name => '&scoretable',
06:42:36   6  	  xform_view_name => 'xformed_apply_miss_num');
06:42:36   7  
06:42:36   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:42:36   9  	  miss_table_name => 'svmc_miss_cat',
06:42:36  10  	  data_table_name => '&scoretable',
06:42:36  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:42:36  12  
06:42:36  13  	-- Normalize the data to be scored
06:42:36  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:42:36  15  	  norm_table_name => 'svmc_norm',
06:42:36  16  	  data_table_name => '&scoretable',
06:42:36  17  	  xform_view_name => 'svmc_apply_prep');
06:42:36  18  END;
06:42:36  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
06:42:38 SQL> 
06:42:38 SQL> -- Use same model_name used in score_gattn.sql
06:42:38 SQL> DEFINE model_name = 'forex14'
06:42:38 SQL> 
06:42:38 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
06:42:38 SQL> 
06:42:38 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
06:42:38   2  SELECT
06:42:38   3  prdate
06:42:38   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:42:38   5  ,sysdate
06:42:38   6  ,SUBSTR(prdate,1,3)pair
06:42:38   7  ,SUBSTR(prdate,4,19)ydate
06:42:38   8  FROM svmc_apply_prep
06:42:38   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
06:42:38 SQL> @aud_score1day_gattn.sql	2010-12-27 06:20:00
06:42:38 SQL> --
06:42:38 SQL> -- aud_score1day_gattn.sql
06:42:38 SQL> --
06:42:38 SQL> 
06:42:38 SQL> CREATE OR REPLACE VIEW sme AS
06:42:38   2  SELECT
06:42:38   3  'aud'||m.ydate prdate
06:42:38   4  ,NULL gattn
06:42:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:42:38   6  ,eur_g00
06:42:38   7  ,eur_g01
06:42:38   8  ,eur_g02
06:42:38   9  ,eur_g03
06:42:38  10  ,eur_g04
06:42:38  11  ,eur_g05
06:42:38  12  ,eur_g06
06:42:38  13  ,eur_g07
06:42:38  14  ,eur_g08
06:42:38  15  ,eur_g09
06:42:38  16  ,eur_g10
06:42:38  17  ,eur_g11
06:42:38  18  ,eur_g12
06:42:38  19  ,eur_g13
06:42:38  20  ,eur_g14
06:42:38  21  ,eur_g15
06:42:38  22  ,eur_g16
06:42:38  23  ,eur_g17
06:42:38  24  ,eur_g18
06:42:38  25  ,eur_g19
06:42:38  26  ,eur_g20
06:42:38  27  ,eur_g21
06:42:38  28  ,eur_g22
06:42:38  29  ,eur_g23
06:42:38  30  ,eur_g24
06:42:38  31  ,eur_g25
06:42:38  32  ,eur_g26
06:42:38  33  ,eur_g27
06:42:38  34  ,eur_g28
06:42:38  35  ,eur_g29
06:42:38  36  ,eur_g30
06:42:38  37  ,eur_g31
06:42:38  38  ,eur_g32
06:42:38  39  ,eur_g33
06:42:38  40  ,eur_g34
06:42:38  41  ,eur_g35
06:42:38  42  ,eur_g36
06:42:38  43  ,eur_g37
06:42:38  44  ,eur_g38
06:42:38  45  ,eur_g39
06:42:38  46  ,eur_g40
06:42:38  47  ,eur_g41
06:42:38  48  ,aud_g00
06:42:38  49  ,aud_g01
06:42:38  50  ,aud_g02
06:42:38  51  ,aud_g03
06:42:38  52  ,aud_g04
06:42:38  53  ,aud_g05
06:42:38  54  ,aud_g06
06:42:38  55  ,aud_g07
06:42:38  56  ,aud_g08
06:42:38  57  ,aud_g09
06:42:38  58  ,aud_g10
06:42:38  59  ,aud_g11
06:42:38  60  ,aud_g12
06:42:38  61  ,aud_g13
06:42:38  62  ,aud_g14
06:42:38  63  ,aud_g15
06:42:38  64  ,aud_g16
06:42:38  65  ,aud_g17
06:42:38  66  ,aud_g18
06:42:38  67  ,aud_g19
06:42:38  68  ,aud_g20
06:42:38  69  ,aud_g21
06:42:38  70  ,aud_g22
06:42:38  71  ,aud_g23
06:42:38  72  ,aud_g24
06:42:38  73  ,aud_g25
06:42:38  74  ,aud_g26
06:42:38  75  ,aud_g27
06:42:38  76  ,aud_g28
06:42:38  77  ,aud_g29
06:42:38  78  ,aud_g30
06:42:38  79  ,aud_g31
06:42:38  80  ,aud_g32
06:42:38  81  ,aud_g33
06:42:38  82  ,aud_g34
06:42:38  83  ,aud_g35
06:42:38  84  ,aud_g36
06:42:38  85  ,aud_g37
06:42:38  86  ,aud_g38
06:42:38  87  ,aud_g39
06:42:38  88  ,aud_g40
06:42:38  89  ,aud_g41
06:42:38  90  ,gbp_g00
06:42:38  91  ,gbp_g01
06:42:38  92  ,gbp_g02
06:42:38  93  ,gbp_g03
06:42:38  94  ,gbp_g04
06:42:38  95  ,gbp_g05
06:42:38  96  ,gbp_g06
06:42:38  97  ,gbp_g07
06:42:38  98  ,gbp_g08
06:42:38  99  ,gbp_g09
06:42:38 100  ,gbp_g10
06:42:38 101  ,gbp_g11
06:42:38 102  ,gbp_g12
06:42:38 103  ,gbp_g13
06:42:38 104  ,gbp_g14
06:42:38 105  ,gbp_g15
06:42:38 106  ,gbp_g16
06:42:38 107  ,gbp_g17
06:42:38 108  ,gbp_g18
06:42:38 109  ,gbp_g19
06:42:38 110  ,gbp_g20
06:42:38 111  ,gbp_g21
06:42:38 112  ,gbp_g22
06:42:38 113  ,gbp_g23
06:42:38 114  ,gbp_g24
06:42:38 115  ,gbp_g25
06:42:38 116  ,gbp_g26
06:42:38 117  ,gbp_g27
06:42:38 118  ,gbp_g28
06:42:38 119  ,gbp_g29
06:42:38 120  ,gbp_g30
06:42:38 121  ,gbp_g31
06:42:38 122  ,gbp_g32
06:42:38 123  ,gbp_g33
06:42:38 124  ,gbp_g34
06:42:38 125  ,gbp_g35
06:42:38 126  ,gbp_g36
06:42:38 127  ,gbp_g37
06:42:38 128  ,gbp_g38
06:42:38 129  ,gbp_g39
06:42:38 130  ,gbp_g40
06:42:38 131  ,gbp_g41
06:42:38 132  ,jpy_g00
06:42:38 133  ,jpy_g01
06:42:38 134  ,jpy_g02
06:42:38 135  ,jpy_g03
06:42:38 136  ,jpy_g04
06:42:38 137  ,jpy_g05
06:42:38 138  ,jpy_g06
06:42:38 139  ,jpy_g07
06:42:38 140  ,jpy_g08
06:42:38 141  ,jpy_g09
06:42:38 142  ,jpy_g10
06:42:38 143  ,jpy_g11
06:42:38 144  ,jpy_g12
06:42:38 145  ,jpy_g13
06:42:38 146  ,jpy_g14
06:42:38 147  ,jpy_g15
06:42:38 148  ,jpy_g16
06:42:38 149  ,jpy_g17
06:42:38 150  ,jpy_g18
06:42:38 151  ,jpy_g19
06:42:38 152  ,jpy_g20
06:42:38 153  ,jpy_g21
06:42:38 154  ,jpy_g22
06:42:38 155  ,jpy_g23
06:42:38 156  ,jpy_g24
06:42:38 157  ,jpy_g25
06:42:38 158  ,jpy_g26
06:42:38 159  ,jpy_g27
06:42:38 160  ,jpy_g28
06:42:38 161  ,jpy_g29
06:42:38 162  ,jpy_g30
06:42:38 163  ,jpy_g31
06:42:38 164  ,jpy_g32
06:42:38 165  ,jpy_g33
06:42:38 166  ,jpy_g34
06:42:38 167  ,jpy_g35
06:42:38 168  ,jpy_g36
06:42:38 169  ,jpy_g37
06:42:38 170  ,jpy_g38
06:42:38 171  ,jpy_g39
06:42:38 172  ,jpy_g40
06:42:38 173  ,jpy_g41
06:42:38 174  ,cad_g00
06:42:38 175  ,cad_g01
06:42:38 176  ,cad_g02
06:42:38 177  ,cad_g03
06:42:38 178  ,cad_g04
06:42:38 179  ,cad_g05
06:42:38 180  ,cad_g06
06:42:38 181  ,cad_g07
06:42:38 182  ,cad_g08
06:42:38 183  ,cad_g09
06:42:38 184  ,cad_g10
06:42:38 185  ,cad_g11
06:42:38 186  ,cad_g12
06:42:38 187  ,cad_g13
06:42:38 188  ,cad_g14
06:42:38 189  ,cad_g15
06:42:38 190  ,cad_g16
06:42:38 191  ,cad_g17
06:42:38 192  ,cad_g18
06:42:38 193  ,cad_g19
06:42:38 194  ,cad_g20
06:42:38 195  ,cad_g21
06:42:38 196  ,cad_g22
06:42:38 197  ,cad_g23
06:42:38 198  ,cad_g24
06:42:38 199  ,cad_g25
06:42:38 200  ,cad_g26
06:42:38 201  ,cad_g27
06:42:38 202  ,cad_g28
06:42:38 203  ,cad_g29
06:42:38 204  ,cad_g30
06:42:38 205  ,cad_g31
06:42:38 206  ,cad_g32
06:42:38 207  ,cad_g33
06:42:38 208  ,cad_g34
06:42:38 209  ,cad_g35
06:42:38 210  ,cad_g36
06:42:38 211  ,cad_g37
06:42:38 212  ,cad_g38
06:42:38 213  ,cad_g39
06:42:38 214  ,cad_g40
06:42:38 215  ,cad_g41
06:42:38 216  ,chf_g00
06:42:38 217  ,chf_g01
06:42:38 218  ,chf_g02
06:42:38 219  ,chf_g03
06:42:38 220  ,chf_g04
06:42:38 221  ,chf_g05
06:42:38 222  ,chf_g06
06:42:38 223  ,chf_g07
06:42:38 224  ,chf_g08
06:42:38 225  ,chf_g09
06:42:38 226  ,chf_g10
06:42:38 227  ,chf_g11
06:42:38 228  ,chf_g12
06:42:38 229  ,chf_g13
06:42:38 230  ,chf_g14
06:42:38 231  ,chf_g15
06:42:38 232  ,chf_g16
06:42:38 233  ,chf_g17
06:42:38 234  ,chf_g18
06:42:38 235  ,chf_g19
06:42:38 236  ,chf_g20
06:42:38 237  ,chf_g21
06:42:38 238  ,chf_g22
06:42:38 239  ,chf_g23
06:42:38 240  ,chf_g24
06:42:38 241  ,chf_g25
06:42:38 242  ,chf_g26
06:42:38 243  ,chf_g27
06:42:38 244  ,chf_g28
06:42:38 245  ,chf_g29
06:42:38 246  ,chf_g30
06:42:38 247  ,chf_g31
06:42:38 248  ,chf_g32
06:42:38 249  ,chf_g33
06:42:38 250  ,chf_g34
06:42:38 251  ,chf_g35
06:42:38 252  ,chf_g36
06:42:38 253  ,chf_g37
06:42:38 254  ,chf_g38
06:42:38 255  ,chf_g39
06:42:38 256  ,chf_g40
06:42:38 257  ,chf_g41
06:42:38 258  FROM aud_ms6 m
06:42:38 259  WHERE m.ydate = '&1'||' '||'&2'
06:42:38 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-27'||' '||'06:20:00'

View created.

Elapsed: 00:00:00.14
06:42:38 SQL> 
06:42:38 SQL> -- rpt
06:42:38 SQL> -- We should see just 1 row:
06:42:38 SQL> 
06:42:38 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
06:42:38 SQL> 
06:42:38 SQL> -- Build the model:
06:42:38 SQL> CREATE OR REPLACE VIEW bme AS
06:42:38   2  SELECT
06:42:38   3  'aud'||m.ydate prdate
06:42:38   4  ,gattn
06:42:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:42:38   6  ,eur_g00
06:42:38   7  ,eur_g01
06:42:38   8  ,eur_g02
06:42:38   9  ,eur_g03
06:42:38  10  ,eur_g04
06:42:38  11  ,eur_g05
06:42:38  12  ,eur_g06
06:42:38  13  ,eur_g07
06:42:38  14  ,eur_g08
06:42:38  15  ,eur_g09
06:42:38  16  ,eur_g10
06:42:38  17  ,eur_g11
06:42:38  18  ,eur_g12
06:42:38  19  ,eur_g13
06:42:38  20  ,eur_g14
06:42:38  21  ,eur_g15
06:42:38  22  ,eur_g16
06:42:38  23  ,eur_g17
06:42:38  24  ,eur_g18
06:42:38  25  ,eur_g19
06:42:38  26  ,eur_g20
06:42:38  27  ,eur_g21
06:42:38  28  ,eur_g22
06:42:38  29  ,eur_g23
06:42:38  30  ,eur_g24
06:42:38  31  ,eur_g25
06:42:38  32  ,eur_g26
06:42:38  33  ,eur_g27
06:42:38  34  ,eur_g28
06:42:38  35  ,eur_g29
06:42:38  36  ,eur_g30
06:42:38  37  ,eur_g31
06:42:38  38  ,eur_g32
06:42:38  39  ,eur_g33
06:42:38  40  ,eur_g34
06:42:38  41  ,eur_g35
06:42:38  42  ,eur_g36
06:42:38  43  ,eur_g37
06:42:38  44  ,eur_g38
06:42:38  45  ,eur_g39
06:42:38  46  ,eur_g40
06:42:38  47  ,eur_g41
06:42:38  48  ,aud_g00
06:42:38  49  ,aud_g01
06:42:38  50  ,aud_g02
06:42:38  51  ,aud_g03
06:42:38  52  ,aud_g04
06:42:38  53  ,aud_g05
06:42:38  54  ,aud_g06
06:42:38  55  ,aud_g07
06:42:38  56  ,aud_g08
06:42:38  57  ,aud_g09
06:42:38  58  ,aud_g10
06:42:38  59  ,aud_g11
06:42:38  60  ,aud_g12
06:42:38  61  ,aud_g13
06:42:38  62  ,aud_g14
06:42:38  63  ,aud_g15
06:42:38  64  ,aud_g16
06:42:38  65  ,aud_g17
06:42:38  66  ,aud_g18
06:42:38  67  ,aud_g19
06:42:38  68  ,aud_g20
06:42:38  69  ,aud_g21
06:42:38  70  ,aud_g22
06:42:38  71  ,aud_g23
06:42:38  72  ,aud_g24
06:42:38  73  ,aud_g25
06:42:38  74  ,aud_g26
06:42:38  75  ,aud_g27
06:42:38  76  ,aud_g28
06:42:38  77  ,aud_g29
06:42:38  78  ,aud_g30
06:42:38  79  ,aud_g31
06:42:38  80  ,aud_g32
06:42:38  81  ,aud_g33
06:42:38  82  ,aud_g34
06:42:38  83  ,aud_g35
06:42:38  84  ,aud_g36
06:42:38  85  ,aud_g37
06:42:38  86  ,aud_g38
06:42:38  87  ,aud_g39
06:42:38  88  ,aud_g40
06:42:38  89  ,aud_g41
06:42:38  90  ,gbp_g00
06:42:38  91  ,gbp_g01
06:42:38  92  ,gbp_g02
06:42:38  93  ,gbp_g03
06:42:38  94  ,gbp_g04
06:42:38  95  ,gbp_g05
06:42:38  96  ,gbp_g06
06:42:38  97  ,gbp_g07
06:42:38  98  ,gbp_g08
06:42:38  99  ,gbp_g09
06:42:38 100  ,gbp_g10
06:42:38 101  ,gbp_g11
06:42:38 102  ,gbp_g12
06:42:38 103  ,gbp_g13
06:42:38 104  ,gbp_g14
06:42:38 105  ,gbp_g15
06:42:38 106  ,gbp_g16
06:42:38 107  ,gbp_g17
06:42:38 108  ,gbp_g18
06:42:38 109  ,gbp_g19
06:42:38 110  ,gbp_g20
06:42:38 111  ,gbp_g21
06:42:38 112  ,gbp_g22
06:42:38 113  ,gbp_g23
06:42:38 114  ,gbp_g24
06:42:38 115  ,gbp_g25
06:42:38 116  ,gbp_g26
06:42:38 117  ,gbp_g27
06:42:38 118  ,gbp_g28
06:42:38 119  ,gbp_g29
06:42:38 120  ,gbp_g30
06:42:38 121  ,gbp_g31
06:42:38 122  ,gbp_g32
06:42:38 123  ,gbp_g33
06:42:38 124  ,gbp_g34
06:42:38 125  ,gbp_g35
06:42:38 126  ,gbp_g36
06:42:38 127  ,gbp_g37
06:42:38 128  ,gbp_g38
06:42:38 129  ,gbp_g39
06:42:38 130  ,gbp_g40
06:42:38 131  ,gbp_g41
06:42:38 132  ,jpy_g00
06:42:38 133  ,jpy_g01
06:42:38 134  ,jpy_g02
06:42:38 135  ,jpy_g03
06:42:38 136  ,jpy_g04
06:42:38 137  ,jpy_g05
06:42:38 138  ,jpy_g06
06:42:38 139  ,jpy_g07
06:42:38 140  ,jpy_g08
06:42:38 141  ,jpy_g09
06:42:38 142  ,jpy_g10
06:42:38 143  ,jpy_g11
06:42:38 144  ,jpy_g12
06:42:38 145  ,jpy_g13
06:42:38 146  ,jpy_g14
06:42:38 147  ,jpy_g15
06:42:38 148  ,jpy_g16
06:42:38 149  ,jpy_g17
06:42:38 150  ,jpy_g18
06:42:38 151  ,jpy_g19
06:42:38 152  ,jpy_g20
06:42:38 153  ,jpy_g21
06:42:38 154  ,jpy_g22
06:42:38 155  ,jpy_g23
06:42:38 156  ,jpy_g24
06:42:38 157  ,jpy_g25
06:42:38 158  ,jpy_g26
06:42:38 159  ,jpy_g27
06:42:38 160  ,jpy_g28
06:42:38 161  ,jpy_g29
06:42:38 162  ,jpy_g30
06:42:38 163  ,jpy_g31
06:42:38 164  ,jpy_g32
06:42:38 165  ,jpy_g33
06:42:38 166  ,jpy_g34
06:42:38 167  ,jpy_g35
06:42:38 168  ,jpy_g36
06:42:38 169  ,jpy_g37
06:42:38 170  ,jpy_g38
06:42:38 171  ,jpy_g39
06:42:38 172  ,jpy_g40
06:42:38 173  ,jpy_g41
06:42:38 174  ,cad_g00
06:42:38 175  ,cad_g01
06:42:38 176  ,cad_g02
06:42:38 177  ,cad_g03
06:42:38 178  ,cad_g04
06:42:38 179  ,cad_g05
06:42:38 180  ,cad_g06
06:42:38 181  ,cad_g07
06:42:38 182  ,cad_g08
06:42:38 183  ,cad_g09
06:42:38 184  ,cad_g10
06:42:38 185  ,cad_g11
06:42:38 186  ,cad_g12
06:42:38 187  ,cad_g13
06:42:38 188  ,cad_g14
06:42:38 189  ,cad_g15
06:42:38 190  ,cad_g16
06:42:38 191  ,cad_g17
06:42:38 192  ,cad_g18
06:42:38 193  ,cad_g19
06:42:38 194  ,cad_g20
06:42:38 195  ,cad_g21
06:42:38 196  ,cad_g22
06:42:38 197  ,cad_g23
06:42:38 198  ,cad_g24
06:42:38 199  ,cad_g25
06:42:38 200  ,cad_g26
06:42:38 201  ,cad_g27
06:42:38 202  ,cad_g28
06:42:38 203  ,cad_g29
06:42:38 204  ,cad_g30
06:42:38 205  ,cad_g31
06:42:38 206  ,cad_g32
06:42:38 207  ,cad_g33
06:42:38 208  ,cad_g34
06:42:38 209  ,cad_g35
06:42:38 210  ,cad_g36
06:42:38 211  ,cad_g37
06:42:38 212  ,cad_g38
06:42:38 213  ,cad_g39
06:42:38 214  ,cad_g40
06:42:38 215  ,cad_g41
06:42:38 216  ,chf_g00
06:42:38 217  ,chf_g01
06:42:38 218  ,chf_g02
06:42:38 219  ,chf_g03
06:42:38 220  ,chf_g04
06:42:38 221  ,chf_g05
06:42:38 222  ,chf_g06
06:42:38 223  ,chf_g07
06:42:38 224  ,chf_g08
06:42:38 225  ,chf_g09
06:42:38 226  ,chf_g10
06:42:38 227  ,chf_g11
06:42:38 228  ,chf_g12
06:42:38 229  ,chf_g13
06:42:38 230  ,chf_g14
06:42:38 231  ,chf_g15
06:42:38 232  ,chf_g16
06:42:38 233  ,chf_g17
06:42:38 234  ,chf_g18
06:42:38 235  ,chf_g19
06:42:38 236  ,chf_g20
06:42:38 237  ,chf_g21
06:42:38 238  ,chf_g22
06:42:38 239  ,chf_g23
06:42:38 240  ,chf_g24
06:42:38 241  ,chf_g25
06:42:38 242  ,chf_g26
06:42:38 243  ,chf_g27
06:42:38 244  ,chf_g28
06:42:38 245  ,chf_g29
06:42:38 246  ,chf_g30
06:42:38 247  ,chf_g31
06:42:38 248  ,chf_g32
06:42:38 249  ,chf_g33
06:42:38 250  ,chf_g34
06:42:38 251  ,chf_g35
06:42:38 252  ,chf_g36
06:42:38 253  ,chf_g37
06:42:38 254  ,chf_g38
06:42:38 255  ,chf_g39
06:42:38 256  ,chf_g40
06:42:38 257  ,chf_g41
06:42:38 258  FROM aud_ms6 m
06:42:38 259  WHERE gattn IN('nup','up')
06:42:38 260  AND 1+m.ydate < '&1'||' '||'&2'
06:42:38 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-27'||' '||'06:20:00'

View created.

Elapsed: 00:00:00.12
06:42:38 SQL> 
06:42:38 SQL> -- rpt
06:42:38 SQL> 
06:42:38 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12807
up	     6371

Elapsed: 00:00:00.04
06:42:38 SQL> 
06:42:38 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-24 21:55:00

Elapsed: 00:00:00.03
06:42:38 SQL> 
06:42:38 SQL> -- Now build model from bme and score sme
06:42:38 SQL> @score1gattn.sql
06:42:38 SQL> -- score1gattn.sql
06:42:38 SQL> 
06:42:38 SQL> -- Does the 1st SVM score
06:42:38 SQL> 
06:42:38 SQL> -- Fill up svmc_apply_prep
06:42:38 SQL> @score_gattn.sql
06:42:38 SQL> --
06:42:38 SQL> -- score_gattn.sql
06:42:38 SQL> --
06:42:38 SQL> 
06:42:38 SQL> -- usage: score_gattn.sql
06:42:38 SQL> 
06:42:38 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:42:38 SQL> 
06:42:38 SQL> DEFINE target	= 'gattn'
06:42:38 SQL> DEFINE model_name = 'forex14'
06:42:38 SQL> DEFINE bldtable	= 'bme'
06:42:38 SQL> DEFINE scoretable = 'sme'
06:42:38 SQL> DEFINE case_id	= 'prdate'
06:42:38 SQL> 
06:42:38 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:42:38 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:42:38 SQL> 
06:42:38 SQL> -- Builds an SVM model using pl/sql.
06:42:38 SQL> 
06:42:38 SQL> -----------------------------------------------------------------------
06:42:38 SQL> --			    BUILD THE MODEL
06:42:38 SQL> -----------------------------------------------------------------------
06:42:38 SQL> 
06:42:38 SQL> -- Cleanup old build data preparation objects for repeat runs
06:42:38 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
06:42:38 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:42:38 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
06:42:38 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
06:42:38 SQL> 
06:42:38 SQL> 
06:42:38 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:42:38 SQL> --
06:42:38 SQL> -- DROP	TABLE svmc_settings ;
06:42:38 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:42:38 SQL> -- DELETE svmc_settings;
06:42:38 SQL> 
06:42:38 SQL> -- The default classification algorithm is Naive Bayes. So override
06:42:38 SQL> -- this choice to SVM using a settings table.
06:42:38 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:42:38 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:42:38 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:42:38 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:42:38 SQL> -- models.
06:42:38 SQL> --
06:42:38 SQL> 
06:42:38 SQL> -- Do this once and then comment it out.
06:42:38 SQL> -- That makes script go faster.
06:42:38 SQL> -- BEGIN
06:42:38 SQL> -- -- Populate settings table
06:42:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:42:38 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:42:38 SQL> --
06:42:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:42:38 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:42:38 SQL> --
06:42:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:42:38 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:42:38 SQL> --   COMMIT;
06:42:38 SQL> -- END;
06:42:38 SQL> -- /
06:42:38 SQL> 
06:42:38 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:42:38 SQL> 
06:42:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:42:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:42:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:42:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:42:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:42:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:42:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:42:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:42:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
06:42:38 SQL> 
06:42:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:42:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:42:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
06:42:38 SQL> 
06:42:38 SQL> --------------------------------
06:42:38 SQL> -- PREPARE BUILD (TRAINING) DATA
06:42:38 SQL> --
06:42:38 SQL> 
06:42:38 SQL> -- 1. Missing Value treatment for all Predictors and
06:42:38 SQL> -- 2. Outlier Treatment and
06:42:38 SQL> -- 3. Normalization are performed below.
06:42:38 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:42:38 SQL> --    normalized here.
06:42:38 SQL> 
06:42:38 SQL> BEGIN
06:42:38   2  	-- Perform missing value treatment for all predictors
06:42:38   3  	-- create miss tables
06:42:38   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:42:38   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:42:38   6  
06:42:38   7  	-- populate miss tables
06:42:38   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:42:38   9  	  miss_table_name => 'svmc_miss_num',
06:42:38  10  	  data_table_name => '&bldtable',
06:42:38  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:42:38  12  
06:42:38  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:42:38  14  	  miss_table_name => 'svmc_miss_cat',
06:42:38  15  	  data_table_name => '&bldtable',
06:42:38  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:42:38  17  
06:42:38  18  	-- xform input data to replace missing values
06:42:38  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:42:38  20  	  miss_table_name => 'svmc_miss_num',
06:42:38  21  	  data_table_name => '&bldtable',
06:42:38  22  	  xform_view_name => 'xformed_build_miss_num');
06:42:38  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:42:38  24  	  miss_table_name => 'svmc_miss_cat',
06:42:38  25  	  data_table_name => '&bldtable',
06:42:38  26  	  xform_view_name => 'xformed_build_miss_cat');
06:42:38  27  
06:42:38  28  	-- Perform outlier treatment.
06:42:38  29  	-- create clip table
06:42:38  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:42:38  31  
06:42:38  32  	-- populate clip table
06:42:38  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:42:38  34  	  clip_table_name => 'svmc_clip',
06:42:38  35  	  data_table_name => '&bldtable',
06:42:38  36  	  tail_frac	  => 0.025,
06:42:38  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:42:38  38  
06:42:38  39  	-- xform input data to winsorized data
06:42:38  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:42:38  41  	  clip_table_name => 'svmc_clip',
06:42:38  42  	  data_table_name => '&bldtable',
06:42:38  43  	  xform_view_name => 'svmc_winsor');
06:42:38  44  
06:42:38  45  	-- create normalization table
06:42:38  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:42:38  47  
06:42:38  48  	-- populate normalization table based on winsorized data
06:42:38  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:42:38  50  	  norm_table_name => 'svmc_norm',
06:42:38  51  	  data_table_name => 'svmc_winsor',
06:42:38  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:42:38  53  
06:42:38  54  	-- normalize the original data
06:42:38  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:42:38  56  	  norm_table_name => 'svmc_norm',
06:42:38  57  	  data_table_name => '&bldtable',
06:42:38  58  	  xform_view_name => 'svmc_build_prep');
06:42:38  59  END;
06:42:38  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.52
06:42:56 SQL> 
06:42:56 SQL> ---------------------
06:42:56 SQL> -- CREATE A NEW MODEL
06:42:56 SQL> --
06:42:56 SQL> -- Cleanup old model with the same name for repeat runs
06:42:56 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:42:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:42:56   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.07
06:42:57 SQL> 
06:42:57 SQL> -- Build a new SVM Model
06:42:57 SQL> BEGIN
06:42:57   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:42:57   3  	  model_name	      => '&model_name',
06:42:57   4  	  mining_function     => dbms_data_mining.classification,
06:42:57   5  	  data_table_name     => 'svmc_build_prep',
06:42:57   6  	  case_id_column_name => '&case_id',
06:42:57   7  	  target_column_name  => '&target',
06:42:57   8  	  settings_table_name => 'svmc_settings');
06:42:57   9  END;
06:42:57  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.22
06:43:23 SQL> 
06:43:23 SQL> -----------------------------------------------------------------------
06:43:23 SQL> --			       APPLY/score THE MODEL
06:43:23 SQL> -----------------------------------------------------------------------
06:43:23 SQL> 
06:43:23 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:43:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:43:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:43:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:43:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:43:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:43:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:43:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:43:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:43:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:43:23 SQL> -----------------------
06:43:23 SQL> -- PREPARE SCORING DATA
06:43:23 SQL> --
06:43:23 SQL> -- If the data for model creation has been prepared, then the data
06:43:23 SQL> -- to be scored using the model must be prepared in the same manner
06:43:23 SQL> -- in order to obtain meaningful results.
06:43:23 SQL> --
06:43:23 SQL> -- 1. Missing Value treatment for all Predictors and
06:43:23 SQL> -- 2. Normalization
06:43:23 SQL> -- No outlier treatment will be performed during test and apply. The
06:43:23 SQL> -- normalization step is sufficient, since the normalization parameters
06:43:23 SQL> -- already capture the effects of outlier treatment done with build data.
06:43:23 SQL> --
06:43:23 SQL> BEGIN
06:43:23   2  	-- Xform Test data to replace missing values
06:43:23   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:43:23   4  	  miss_table_name => 'svmc_miss_num',
06:43:23   5  	  data_table_name => '&scoretable',
06:43:23   6  	  xform_view_name => 'xformed_apply_miss_num');
06:43:23   7  
06:43:23   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:43:23   9  	  miss_table_name => 'svmc_miss_cat',
06:43:23  10  	  data_table_name => '&scoretable',
06:43:23  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:43:23  12  
06:43:23  13  	-- Normalize the data to be scored
06:43:23  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:43:23  15  	  norm_table_name => 'svmc_norm',
06:43:23  16  	  data_table_name => '&scoretable',
06:43:23  17  	  xform_view_name => 'svmc_apply_prep');
06:43:23  18  END;
06:43:23  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.15
06:43:25 SQL> 
06:43:25 SQL> -- Use same model_name used in score_gattn.sql
06:43:25 SQL> DEFINE model_name = 'forex14'
06:43:25 SQL> 
06:43:25 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
06:43:25 SQL> 
06:43:25 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
06:43:25   2  SELECT
06:43:25   3  prdate
06:43:25   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:43:25   5  ,sysdate
06:43:25   6  ,SUBSTR(prdate,1,3)pair
06:43:25   7  ,SUBSTR(prdate,4,19)ydate
06:43:25   8  FROM svmc_apply_prep
06:43:25   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
06:43:25 SQL> @aud_score1day_gattn.sql	2010-12-27 05:55:00
06:43:25 SQL> --
06:43:25 SQL> -- aud_score1day_gattn.sql
06:43:25 SQL> --
06:43:25 SQL> 
06:43:25 SQL> CREATE OR REPLACE VIEW sme AS
06:43:25   2  SELECT
06:43:25   3  'aud'||m.ydate prdate
06:43:25   4  ,NULL gattn
06:43:25   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:43:25   6  ,eur_g00
06:43:25   7  ,eur_g01
06:43:25   8  ,eur_g02
06:43:25   9  ,eur_g03
06:43:25  10  ,eur_g04
06:43:25  11  ,eur_g05
06:43:25  12  ,eur_g06
06:43:25  13  ,eur_g07
06:43:25  14  ,eur_g08
06:43:25  15  ,eur_g09
06:43:25  16  ,eur_g10
06:43:25  17  ,eur_g11
06:43:25  18  ,eur_g12
06:43:25  19  ,eur_g13
06:43:25  20  ,eur_g14
06:43:25  21  ,eur_g15
06:43:25  22  ,eur_g16
06:43:25  23  ,eur_g17
06:43:25  24  ,eur_g18
06:43:25  25  ,eur_g19
06:43:25  26  ,eur_g20
06:43:25  27  ,eur_g21
06:43:25  28  ,eur_g22
06:43:25  29  ,eur_g23
06:43:25  30  ,eur_g24
06:43:25  31  ,eur_g25
06:43:25  32  ,eur_g26
06:43:25  33  ,eur_g27
06:43:25  34  ,eur_g28
06:43:25  35  ,eur_g29
06:43:25  36  ,eur_g30
06:43:25  37  ,eur_g31
06:43:25  38  ,eur_g32
06:43:25  39  ,eur_g33
06:43:25  40  ,eur_g34
06:43:25  41  ,eur_g35
06:43:25  42  ,eur_g36
06:43:25  43  ,eur_g37
06:43:25  44  ,eur_g38
06:43:25  45  ,eur_g39
06:43:25  46  ,eur_g40
06:43:25  47  ,eur_g41
06:43:25  48  ,aud_g00
06:43:25  49  ,aud_g01
06:43:25  50  ,aud_g02
06:43:25  51  ,aud_g03
06:43:25  52  ,aud_g04
06:43:25  53  ,aud_g05
06:43:25  54  ,aud_g06
06:43:25  55  ,aud_g07
06:43:25  56  ,aud_g08
06:43:25  57  ,aud_g09
06:43:25  58  ,aud_g10
06:43:25  59  ,aud_g11
06:43:25  60  ,aud_g12
06:43:25  61  ,aud_g13
06:43:25  62  ,aud_g14
06:43:25  63  ,aud_g15
06:43:25  64  ,aud_g16
06:43:25  65  ,aud_g17
06:43:25  66  ,aud_g18
06:43:25  67  ,aud_g19
06:43:25  68  ,aud_g20
06:43:25  69  ,aud_g21
06:43:25  70  ,aud_g22
06:43:25  71  ,aud_g23
06:43:25  72  ,aud_g24
06:43:25  73  ,aud_g25
06:43:25  74  ,aud_g26
06:43:25  75  ,aud_g27
06:43:25  76  ,aud_g28
06:43:25  77  ,aud_g29
06:43:25  78  ,aud_g30
06:43:25  79  ,aud_g31
06:43:25  80  ,aud_g32
06:43:25  81  ,aud_g33
06:43:25  82  ,aud_g34
06:43:25  83  ,aud_g35
06:43:25  84  ,aud_g36
06:43:25  85  ,aud_g37
06:43:25  86  ,aud_g38
06:43:25  87  ,aud_g39
06:43:25  88  ,aud_g40
06:43:25  89  ,aud_g41
06:43:25  90  ,gbp_g00
06:43:25  91  ,gbp_g01
06:43:25  92  ,gbp_g02
06:43:25  93  ,gbp_g03
06:43:25  94  ,gbp_g04
06:43:25  95  ,gbp_g05
06:43:25  96  ,gbp_g06
06:43:25  97  ,gbp_g07
06:43:25  98  ,gbp_g08
06:43:25  99  ,gbp_g09
06:43:25 100  ,gbp_g10
06:43:25 101  ,gbp_g11
06:43:25 102  ,gbp_g12
06:43:25 103  ,gbp_g13
06:43:25 104  ,gbp_g14
06:43:25 105  ,gbp_g15
06:43:25 106  ,gbp_g16
06:43:25 107  ,gbp_g17
06:43:25 108  ,gbp_g18
06:43:25 109  ,gbp_g19
06:43:25 110  ,gbp_g20
06:43:25 111  ,gbp_g21
06:43:25 112  ,gbp_g22
06:43:25 113  ,gbp_g23
06:43:25 114  ,gbp_g24
06:43:25 115  ,gbp_g25
06:43:25 116  ,gbp_g26
06:43:25 117  ,gbp_g27
06:43:25 118  ,gbp_g28
06:43:25 119  ,gbp_g29
06:43:25 120  ,gbp_g30
06:43:25 121  ,gbp_g31
06:43:25 122  ,gbp_g32
06:43:25 123  ,gbp_g33
06:43:25 124  ,gbp_g34
06:43:25 125  ,gbp_g35
06:43:25 126  ,gbp_g36
06:43:25 127  ,gbp_g37
06:43:25 128  ,gbp_g38
06:43:25 129  ,gbp_g39
06:43:25 130  ,gbp_g40
06:43:25 131  ,gbp_g41
06:43:25 132  ,jpy_g00
06:43:25 133  ,jpy_g01
06:43:25 134  ,jpy_g02
06:43:25 135  ,jpy_g03
06:43:25 136  ,jpy_g04
06:43:25 137  ,jpy_g05
06:43:25 138  ,jpy_g06
06:43:25 139  ,jpy_g07
06:43:25 140  ,jpy_g08
06:43:25 141  ,jpy_g09
06:43:25 142  ,jpy_g10
06:43:25 143  ,jpy_g11
06:43:25 144  ,jpy_g12
06:43:25 145  ,jpy_g13
06:43:25 146  ,jpy_g14
06:43:25 147  ,jpy_g15
06:43:25 148  ,jpy_g16
06:43:25 149  ,jpy_g17
06:43:25 150  ,jpy_g18
06:43:25 151  ,jpy_g19
06:43:25 152  ,jpy_g20
06:43:25 153  ,jpy_g21
06:43:25 154  ,jpy_g22
06:43:25 155  ,jpy_g23
06:43:25 156  ,jpy_g24
06:43:25 157  ,jpy_g25
06:43:25 158  ,jpy_g26
06:43:25 159  ,jpy_g27
06:43:25 160  ,jpy_g28
06:43:25 161  ,jpy_g29
06:43:25 162  ,jpy_g30
06:43:25 163  ,jpy_g31
06:43:25 164  ,jpy_g32
06:43:25 165  ,jpy_g33
06:43:25 166  ,jpy_g34
06:43:25 167  ,jpy_g35
06:43:25 168  ,jpy_g36
06:43:25 169  ,jpy_g37
06:43:25 170  ,jpy_g38
06:43:25 171  ,jpy_g39
06:43:25 172  ,jpy_g40
06:43:25 173  ,jpy_g41
06:43:25 174  ,cad_g00
06:43:25 175  ,cad_g01
06:43:25 176  ,cad_g02
06:43:25 177  ,cad_g03
06:43:25 178  ,cad_g04
06:43:25 179  ,cad_g05
06:43:25 180  ,cad_g06
06:43:25 181  ,cad_g07
06:43:25 182  ,cad_g08
06:43:25 183  ,cad_g09
06:43:25 184  ,cad_g10
06:43:25 185  ,cad_g11
06:43:25 186  ,cad_g12
06:43:25 187  ,cad_g13
06:43:25 188  ,cad_g14
06:43:25 189  ,cad_g15
06:43:25 190  ,cad_g16
06:43:25 191  ,cad_g17
06:43:25 192  ,cad_g18
06:43:25 193  ,cad_g19
06:43:25 194  ,cad_g20
06:43:25 195  ,cad_g21
06:43:25 196  ,cad_g22
06:43:25 197  ,cad_g23
06:43:25 198  ,cad_g24
06:43:25 199  ,cad_g25
06:43:25 200  ,cad_g26
06:43:25 201  ,cad_g27
06:43:25 202  ,cad_g28
06:43:25 203  ,cad_g29
06:43:25 204  ,cad_g30
06:43:25 205  ,cad_g31
06:43:25 206  ,cad_g32
06:43:25 207  ,cad_g33
06:43:25 208  ,cad_g34
06:43:25 209  ,cad_g35
06:43:25 210  ,cad_g36
06:43:25 211  ,cad_g37
06:43:25 212  ,cad_g38
06:43:25 213  ,cad_g39
06:43:25 214  ,cad_g40
06:43:25 215  ,cad_g41
06:43:25 216  ,chf_g00
06:43:25 217  ,chf_g01
06:43:25 218  ,chf_g02
06:43:25 219  ,chf_g03
06:43:25 220  ,chf_g04
06:43:25 221  ,chf_g05
06:43:25 222  ,chf_g06
06:43:25 223  ,chf_g07
06:43:25 224  ,chf_g08
06:43:25 225  ,chf_g09
06:43:25 226  ,chf_g10
06:43:25 227  ,chf_g11
06:43:25 228  ,chf_g12
06:43:25 229  ,chf_g13
06:43:25 230  ,chf_g14
06:43:25 231  ,chf_g15
06:43:25 232  ,chf_g16
06:43:25 233  ,chf_g17
06:43:25 234  ,chf_g18
06:43:25 235  ,chf_g19
06:43:25 236  ,chf_g20
06:43:25 237  ,chf_g21
06:43:25 238  ,chf_g22
06:43:25 239  ,chf_g23
06:43:25 240  ,chf_g24
06:43:25 241  ,chf_g25
06:43:25 242  ,chf_g26
06:43:25 243  ,chf_g27
06:43:25 244  ,chf_g28
06:43:25 245  ,chf_g29
06:43:25 246  ,chf_g30
06:43:25 247  ,chf_g31
06:43:25 248  ,chf_g32
06:43:25 249  ,chf_g33
06:43:25 250  ,chf_g34
06:43:25 251  ,chf_g35
06:43:25 252  ,chf_g36
06:43:25 253  ,chf_g37
06:43:25 254  ,chf_g38
06:43:25 255  ,chf_g39
06:43:25 256  ,chf_g40
06:43:25 257  ,chf_g41
06:43:25 258  FROM aud_ms6 m
06:43:25 259  WHERE m.ydate = '&1'||' '||'&2'
06:43:25 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-27'||' '||'05:55:00'

View created.

Elapsed: 00:00:00.13
06:43:25 SQL> 
06:43:25 SQL> -- rpt
06:43:25 SQL> -- We should see just 1 row:
06:43:25 SQL> 
06:43:25 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
06:43:25 SQL> 
06:43:25 SQL> -- Build the model:
06:43:25 SQL> CREATE OR REPLACE VIEW bme AS
06:43:25   2  SELECT
06:43:25   3  'aud'||m.ydate prdate
06:43:25   4  ,gattn
06:43:25   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:43:25   6  ,eur_g00
06:43:25   7  ,eur_g01
06:43:25   8  ,eur_g02
06:43:25   9  ,eur_g03
06:43:25  10  ,eur_g04
06:43:25  11  ,eur_g05
06:43:25  12  ,eur_g06
06:43:25  13  ,eur_g07
06:43:25  14  ,eur_g08
06:43:25  15  ,eur_g09
06:43:25  16  ,eur_g10
06:43:25  17  ,eur_g11
06:43:25  18  ,eur_g12
06:43:25  19  ,eur_g13
06:43:25  20  ,eur_g14
06:43:25  21  ,eur_g15
06:43:25  22  ,eur_g16
06:43:25  23  ,eur_g17
06:43:25  24  ,eur_g18
06:43:25  25  ,eur_g19
06:43:25  26  ,eur_g20
06:43:25  27  ,eur_g21
06:43:25  28  ,eur_g22
06:43:25  29  ,eur_g23
06:43:25  30  ,eur_g24
06:43:25  31  ,eur_g25
06:43:25  32  ,eur_g26
06:43:25  33  ,eur_g27
06:43:25  34  ,eur_g28
06:43:25  35  ,eur_g29
06:43:25  36  ,eur_g30
06:43:25  37  ,eur_g31
06:43:25  38  ,eur_g32
06:43:25  39  ,eur_g33
06:43:25  40  ,eur_g34
06:43:25  41  ,eur_g35
06:43:25  42  ,eur_g36
06:43:25  43  ,eur_g37
06:43:25  44  ,eur_g38
06:43:25  45  ,eur_g39
06:43:25  46  ,eur_g40
06:43:25  47  ,eur_g41
06:43:25  48  ,aud_g00
06:43:25  49  ,aud_g01
06:43:25  50  ,aud_g02
06:43:25  51  ,aud_g03
06:43:25  52  ,aud_g04
06:43:25  53  ,aud_g05
06:43:25  54  ,aud_g06
06:43:25  55  ,aud_g07
06:43:25  56  ,aud_g08
06:43:25  57  ,aud_g09
06:43:25  58  ,aud_g10
06:43:25  59  ,aud_g11
06:43:25  60  ,aud_g12
06:43:25  61  ,aud_g13
06:43:25  62  ,aud_g14
06:43:25  63  ,aud_g15
06:43:25  64  ,aud_g16
06:43:25  65  ,aud_g17
06:43:25  66  ,aud_g18
06:43:25  67  ,aud_g19
06:43:25  68  ,aud_g20
06:43:25  69  ,aud_g21
06:43:25  70  ,aud_g22
06:43:25  71  ,aud_g23
06:43:25  72  ,aud_g24
06:43:25  73  ,aud_g25
06:43:25  74  ,aud_g26
06:43:25  75  ,aud_g27
06:43:25  76  ,aud_g28
06:43:25  77  ,aud_g29
06:43:25  78  ,aud_g30
06:43:25  79  ,aud_g31
06:43:25  80  ,aud_g32
06:43:25  81  ,aud_g33
06:43:25  82  ,aud_g34
06:43:25  83  ,aud_g35
06:43:25  84  ,aud_g36
06:43:25  85  ,aud_g37
06:43:25  86  ,aud_g38
06:43:25  87  ,aud_g39
06:43:25  88  ,aud_g40
06:43:25  89  ,aud_g41
06:43:25  90  ,gbp_g00
06:43:25  91  ,gbp_g01
06:43:25  92  ,gbp_g02
06:43:25  93  ,gbp_g03
06:43:25  94  ,gbp_g04
06:43:25  95  ,gbp_g05
06:43:25  96  ,gbp_g06
06:43:25  97  ,gbp_g07
06:43:25  98  ,gbp_g08
06:43:25  99  ,gbp_g09
06:43:25 100  ,gbp_g10
06:43:25 101  ,gbp_g11
06:43:25 102  ,gbp_g12
06:43:25 103  ,gbp_g13
06:43:25 104  ,gbp_g14
06:43:25 105  ,gbp_g15
06:43:25 106  ,gbp_g16
06:43:25 107  ,gbp_g17
06:43:25 108  ,gbp_g18
06:43:25 109  ,gbp_g19
06:43:25 110  ,gbp_g20
06:43:25 111  ,gbp_g21
06:43:25 112  ,gbp_g22
06:43:25 113  ,gbp_g23
06:43:25 114  ,gbp_g24
06:43:25 115  ,gbp_g25
06:43:25 116  ,gbp_g26
06:43:25 117  ,gbp_g27
06:43:25 118  ,gbp_g28
06:43:25 119  ,gbp_g29
06:43:25 120  ,gbp_g30
06:43:25 121  ,gbp_g31
06:43:25 122  ,gbp_g32
06:43:25 123  ,gbp_g33
06:43:25 124  ,gbp_g34
06:43:25 125  ,gbp_g35
06:43:25 126  ,gbp_g36
06:43:25 127  ,gbp_g37
06:43:25 128  ,gbp_g38
06:43:25 129  ,gbp_g39
06:43:25 130  ,gbp_g40
06:43:25 131  ,gbp_g41
06:43:25 132  ,jpy_g00
06:43:25 133  ,jpy_g01
06:43:25 134  ,jpy_g02
06:43:25 135  ,jpy_g03
06:43:25 136  ,jpy_g04
06:43:25 137  ,jpy_g05
06:43:25 138  ,jpy_g06
06:43:25 139  ,jpy_g07
06:43:25 140  ,jpy_g08
06:43:25 141  ,jpy_g09
06:43:25 142  ,jpy_g10
06:43:25 143  ,jpy_g11
06:43:25 144  ,jpy_g12
06:43:25 145  ,jpy_g13
06:43:25 146  ,jpy_g14
06:43:25 147  ,jpy_g15
06:43:25 148  ,jpy_g16
06:43:25 149  ,jpy_g17
06:43:25 150  ,jpy_g18
06:43:25 151  ,jpy_g19
06:43:25 152  ,jpy_g20
06:43:25 153  ,jpy_g21
06:43:25 154  ,jpy_g22
06:43:25 155  ,jpy_g23
06:43:25 156  ,jpy_g24
06:43:25 157  ,jpy_g25
06:43:25 158  ,jpy_g26
06:43:25 159  ,jpy_g27
06:43:25 160  ,jpy_g28
06:43:25 161  ,jpy_g29
06:43:25 162  ,jpy_g30
06:43:25 163  ,jpy_g31
06:43:25 164  ,jpy_g32
06:43:25 165  ,jpy_g33
06:43:25 166  ,jpy_g34
06:43:25 167  ,jpy_g35
06:43:25 168  ,jpy_g36
06:43:25 169  ,jpy_g37
06:43:25 170  ,jpy_g38
06:43:25 171  ,jpy_g39
06:43:25 172  ,jpy_g40
06:43:25 173  ,jpy_g41
06:43:25 174  ,cad_g00
06:43:25 175  ,cad_g01
06:43:25 176  ,cad_g02
06:43:25 177  ,cad_g03
06:43:25 178  ,cad_g04
06:43:25 179  ,cad_g05
06:43:25 180  ,cad_g06
06:43:25 181  ,cad_g07
06:43:25 182  ,cad_g08
06:43:25 183  ,cad_g09
06:43:25 184  ,cad_g10
06:43:25 185  ,cad_g11
06:43:25 186  ,cad_g12
06:43:25 187  ,cad_g13
06:43:25 188  ,cad_g14
06:43:25 189  ,cad_g15
06:43:25 190  ,cad_g16
06:43:25 191  ,cad_g17
06:43:25 192  ,cad_g18
06:43:25 193  ,cad_g19
06:43:25 194  ,cad_g20
06:43:25 195  ,cad_g21
06:43:25 196  ,cad_g22
06:43:25 197  ,cad_g23
06:43:25 198  ,cad_g24
06:43:25 199  ,cad_g25
06:43:25 200  ,cad_g26
06:43:25 201  ,cad_g27
06:43:25 202  ,cad_g28
06:43:25 203  ,cad_g29
06:43:25 204  ,cad_g30
06:43:25 205  ,cad_g31
06:43:25 206  ,cad_g32
06:43:25 207  ,cad_g33
06:43:25 208  ,cad_g34
06:43:25 209  ,cad_g35
06:43:25 210  ,cad_g36
06:43:25 211  ,cad_g37
06:43:25 212  ,cad_g38
06:43:25 213  ,cad_g39
06:43:25 214  ,cad_g40
06:43:25 215  ,cad_g41
06:43:25 216  ,chf_g00
06:43:25 217  ,chf_g01
06:43:25 218  ,chf_g02
06:43:25 219  ,chf_g03
06:43:25 220  ,chf_g04
06:43:25 221  ,chf_g05
06:43:25 222  ,chf_g06
06:43:25 223  ,chf_g07
06:43:25 224  ,chf_g08
06:43:25 225  ,chf_g09
06:43:25 226  ,chf_g10
06:43:25 227  ,chf_g11
06:43:25 228  ,chf_g12
06:43:25 229  ,chf_g13
06:43:25 230  ,chf_g14
06:43:25 231  ,chf_g15
06:43:25 232  ,chf_g16
06:43:25 233  ,chf_g17
06:43:25 234  ,chf_g18
06:43:25 235  ,chf_g19
06:43:25 236  ,chf_g20
06:43:25 237  ,chf_g21
06:43:25 238  ,chf_g22
06:43:25 239  ,chf_g23
06:43:25 240  ,chf_g24
06:43:25 241  ,chf_g25
06:43:25 242  ,chf_g26
06:43:25 243  ,chf_g27
06:43:25 244  ,chf_g28
06:43:25 245  ,chf_g29
06:43:25 246  ,chf_g30
06:43:25 247  ,chf_g31
06:43:25 248  ,chf_g32
06:43:25 249  ,chf_g33
06:43:25 250  ,chf_g34
06:43:25 251  ,chf_g35
06:43:25 252  ,chf_g36
06:43:25 253  ,chf_g37
06:43:25 254  ,chf_g38
06:43:25 255  ,chf_g39
06:43:25 256  ,chf_g40
06:43:25 257  ,chf_g41
06:43:25 258  FROM aud_ms6 m
06:43:25 259  WHERE gattn IN('nup','up')
06:43:25 260  AND 1+m.ydate < '&1'||' '||'&2'
06:43:25 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-27'||' '||'05:55:00'

View created.

Elapsed: 00:00:00.12
06:43:25 SQL> 
06:43:25 SQL> -- rpt
06:43:25 SQL> 
06:43:25 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12807
up	     6371

Elapsed: 00:00:00.04
06:43:25 SQL> 
06:43:25 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-24 21:55:00

Elapsed: 00:00:00.04
06:43:25 SQL> 
06:43:25 SQL> -- Now build model from bme and score sme
06:43:25 SQL> @score1gattn.sql
06:43:25 SQL> -- score1gattn.sql
06:43:25 SQL> 
06:43:25 SQL> -- Does the 1st SVM score
06:43:25 SQL> 
06:43:25 SQL> -- Fill up svmc_apply_prep
06:43:25 SQL> @score_gattn.sql
06:43:25 SQL> --
06:43:25 SQL> -- score_gattn.sql
06:43:25 SQL> --
06:43:25 SQL> 
06:43:25 SQL> -- usage: score_gattn.sql
06:43:25 SQL> 
06:43:25 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:43:25 SQL> 
06:43:25 SQL> DEFINE target	= 'gattn'
06:43:25 SQL> DEFINE model_name = 'forex14'
06:43:25 SQL> DEFINE bldtable	= 'bme'
06:43:25 SQL> DEFINE scoretable = 'sme'
06:43:25 SQL> DEFINE case_id	= 'prdate'
06:43:25 SQL> 
06:43:25 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:43:25 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:43:25 SQL> 
06:43:25 SQL> -- Builds an SVM model using pl/sql.
06:43:25 SQL> 
06:43:25 SQL> -----------------------------------------------------------------------
06:43:25 SQL> --			    BUILD THE MODEL
06:43:25 SQL> -----------------------------------------------------------------------
06:43:25 SQL> 
06:43:25 SQL> -- Cleanup old build data preparation objects for repeat runs
06:43:25 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
06:43:25 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:43:25 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
06:43:25 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
06:43:25 SQL> 
06:43:25 SQL> 
06:43:25 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:43:25 SQL> --
06:43:25 SQL> -- DROP	TABLE svmc_settings ;
06:43:25 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:43:25 SQL> -- DELETE svmc_settings;
06:43:25 SQL> 
06:43:25 SQL> -- The default classification algorithm is Naive Bayes. So override
06:43:25 SQL> -- this choice to SVM using a settings table.
06:43:25 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:43:25 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:43:25 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:43:25 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:43:25 SQL> -- models.
06:43:25 SQL> --
06:43:25 SQL> 
06:43:25 SQL> -- Do this once and then comment it out.
06:43:25 SQL> -- That makes script go faster.
06:43:25 SQL> -- BEGIN
06:43:25 SQL> -- -- Populate settings table
06:43:25 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:43:25 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:43:25 SQL> --
06:43:25 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:43:25 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:43:25 SQL> --
06:43:25 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:43:25 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:43:25 SQL> --   COMMIT;
06:43:25 SQL> -- END;
06:43:25 SQL> -- /
06:43:25 SQL> 
06:43:25 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:43:25 SQL> 
06:43:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:43:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:43:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:43:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:43:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:43:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:43:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:43:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:43:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:43:25 SQL> 
06:43:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:43:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:43:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:43:25 SQL> 
06:43:25 SQL> --------------------------------
06:43:25 SQL> -- PREPARE BUILD (TRAINING) DATA
06:43:25 SQL> --
06:43:25 SQL> 
06:43:25 SQL> -- 1. Missing Value treatment for all Predictors and
06:43:25 SQL> -- 2. Outlier Treatment and
06:43:25 SQL> -- 3. Normalization are performed below.
06:43:25 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:43:25 SQL> --    normalized here.
06:43:25 SQL> 
06:43:25 SQL> BEGIN
06:43:25   2  	-- Perform missing value treatment for all predictors
06:43:25   3  	-- create miss tables
06:43:25   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:43:25   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:43:25   6  
06:43:25   7  	-- populate miss tables
06:43:25   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:43:25   9  	  miss_table_name => 'svmc_miss_num',
06:43:25  10  	  data_table_name => '&bldtable',
06:43:25  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:43:25  12  
06:43:25  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:43:25  14  	  miss_table_name => 'svmc_miss_cat',
06:43:25  15  	  data_table_name => '&bldtable',
06:43:25  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:43:25  17  
06:43:25  18  	-- xform input data to replace missing values
06:43:25  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:43:25  20  	  miss_table_name => 'svmc_miss_num',
06:43:25  21  	  data_table_name => '&bldtable',
06:43:25  22  	  xform_view_name => 'xformed_build_miss_num');
06:43:25  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:43:25  24  	  miss_table_name => 'svmc_miss_cat',
06:43:25  25  	  data_table_name => '&bldtable',
06:43:25  26  	  xform_view_name => 'xformed_build_miss_cat');
06:43:25  27  
06:43:25  28  	-- Perform outlier treatment.
06:43:25  29  	-- create clip table
06:43:25  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:43:25  31  
06:43:25  32  	-- populate clip table
06:43:25  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:43:25  34  	  clip_table_name => 'svmc_clip',
06:43:25  35  	  data_table_name => '&bldtable',
06:43:25  36  	  tail_frac	  => 0.025,
06:43:25  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:43:25  38  
06:43:25  39  	-- xform input data to winsorized data
06:43:25  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:43:25  41  	  clip_table_name => 'svmc_clip',
06:43:25  42  	  data_table_name => '&bldtable',
06:43:25  43  	  xform_view_name => 'svmc_winsor');
06:43:25  44  
06:43:25  45  	-- create normalization table
06:43:25  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:43:25  47  
06:43:25  48  	-- populate normalization table based on winsorized data
06:43:25  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:43:25  50  	  norm_table_name => 'svmc_norm',
06:43:25  51  	  data_table_name => 'svmc_winsor',
06:43:25  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:43:25  53  
06:43:25  54  	-- normalize the original data
06:43:25  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:43:25  56  	  norm_table_name => 'svmc_norm',
06:43:25  57  	  data_table_name => '&bldtable',
06:43:25  58  	  xform_view_name => 'svmc_build_prep');
06:43:25  59  END;
06:43:25  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.05
06:43:42 SQL> 
06:43:42 SQL> ---------------------
06:43:42 SQL> -- CREATE A NEW MODEL
06:43:42 SQL> --
06:43:42 SQL> -- Cleanup old model with the same name for repeat runs
06:43:42 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:43:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:43:42   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.02
06:43:43 SQL> 
06:43:43 SQL> -- Build a new SVM Model
06:43:43 SQL> BEGIN
06:43:43   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:43:43   3  	  model_name	      => '&model_name',
06:43:43   4  	  mining_function     => dbms_data_mining.classification,
06:43:43   5  	  data_table_name     => 'svmc_build_prep',
06:43:43   6  	  case_id_column_name => '&case_id',
06:43:43   7  	  target_column_name  => '&target',
06:43:43   8  	  settings_table_name => 'svmc_settings');
06:43:43   9  END;
06:43:43  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.95
06:44:09 SQL> 
06:44:09 SQL> -----------------------------------------------------------------------
06:44:09 SQL> --			       APPLY/score THE MODEL
06:44:09 SQL> -----------------------------------------------------------------------
06:44:09 SQL> 
06:44:09 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:44:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:44:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:44:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:44:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:44:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:44:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:44:10 SQL> -----------------------
06:44:10 SQL> -- PREPARE SCORING DATA
06:44:10 SQL> --
06:44:10 SQL> -- If the data for model creation has been prepared, then the data
06:44:10 SQL> -- to be scored using the model must be prepared in the same manner
06:44:10 SQL> -- in order to obtain meaningful results.
06:44:10 SQL> --
06:44:10 SQL> -- 1. Missing Value treatment for all Predictors and
06:44:10 SQL> -- 2. Normalization
06:44:10 SQL> -- No outlier treatment will be performed during test and apply. The
06:44:10 SQL> -- normalization step is sufficient, since the normalization parameters
06:44:10 SQL> -- already capture the effects of outlier treatment done with build data.
06:44:10 SQL> --
06:44:10 SQL> BEGIN
06:44:10   2  	-- Xform Test data to replace missing values
06:44:10   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:44:10   4  	  miss_table_name => 'svmc_miss_num',
06:44:10   5  	  data_table_name => '&scoretable',
06:44:10   6  	  xform_view_name => 'xformed_apply_miss_num');
06:44:10   7  
06:44:10   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:44:10   9  	  miss_table_name => 'svmc_miss_cat',
06:44:10  10  	  data_table_name => '&scoretable',
06:44:10  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:44:10  12  
06:44:10  13  	-- Normalize the data to be scored
06:44:10  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:44:10  15  	  norm_table_name => 'svmc_norm',
06:44:10  16  	  data_table_name => '&scoretable',
06:44:10  17  	  xform_view_name => 'svmc_apply_prep');
06:44:10  18  END;
06:44:10  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
06:44:11 SQL> 
06:44:11 SQL> -- Use same model_name used in score_gattn.sql
06:44:11 SQL> DEFINE model_name = 'forex14'
06:44:11 SQL> 
06:44:11 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.02
06:44:11 SQL> 
06:44:11 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
06:44:11   2  SELECT
06:44:11   3  prdate
06:44:11   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:44:11   5  ,sysdate
06:44:11   6  ,SUBSTR(prdate,1,3)pair
06:44:11   7  ,SUBSTR(prdate,4,19)ydate
06:44:11   8  FROM svmc_apply_prep
06:44:11   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
06:44:11 SQL> @aud_score1day_gattn.sql	2010-12-27 06:10:00
06:44:11 SQL> --
06:44:11 SQL> -- aud_score1day_gattn.sql
06:44:11 SQL> --
06:44:11 SQL> 
06:44:11 SQL> CREATE OR REPLACE VIEW sme AS
06:44:11   2  SELECT
06:44:11   3  'aud'||m.ydate prdate
06:44:11   4  ,NULL gattn
06:44:11   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:44:11   6  ,eur_g00
06:44:11   7  ,eur_g01
06:44:11   8  ,eur_g02
06:44:11   9  ,eur_g03
06:44:11  10  ,eur_g04
06:44:11  11  ,eur_g05
06:44:11  12  ,eur_g06
06:44:11  13  ,eur_g07
06:44:11  14  ,eur_g08
06:44:11  15  ,eur_g09
06:44:11  16  ,eur_g10
06:44:11  17  ,eur_g11
06:44:11  18  ,eur_g12
06:44:11  19  ,eur_g13
06:44:11  20  ,eur_g14
06:44:11  21  ,eur_g15
06:44:11  22  ,eur_g16
06:44:11  23  ,eur_g17
06:44:11  24  ,eur_g18
06:44:11  25  ,eur_g19
06:44:11  26  ,eur_g20
06:44:11  27  ,eur_g21
06:44:11  28  ,eur_g22
06:44:11  29  ,eur_g23
06:44:11  30  ,eur_g24
06:44:11  31  ,eur_g25
06:44:11  32  ,eur_g26
06:44:11  33  ,eur_g27
06:44:11  34  ,eur_g28
06:44:11  35  ,eur_g29
06:44:11  36  ,eur_g30
06:44:11  37  ,eur_g31
06:44:11  38  ,eur_g32
06:44:11  39  ,eur_g33
06:44:11  40  ,eur_g34
06:44:11  41  ,eur_g35
06:44:11  42  ,eur_g36
06:44:11  43  ,eur_g37
06:44:11  44  ,eur_g38
06:44:11  45  ,eur_g39
06:44:11  46  ,eur_g40
06:44:11  47  ,eur_g41
06:44:11  48  ,aud_g00
06:44:11  49  ,aud_g01
06:44:11  50  ,aud_g02
06:44:11  51  ,aud_g03
06:44:11  52  ,aud_g04
06:44:11  53  ,aud_g05
06:44:11  54  ,aud_g06
06:44:11  55  ,aud_g07
06:44:11  56  ,aud_g08
06:44:11  57  ,aud_g09
06:44:11  58  ,aud_g10
06:44:11  59  ,aud_g11
06:44:11  60  ,aud_g12
06:44:11  61  ,aud_g13
06:44:11  62  ,aud_g14
06:44:11  63  ,aud_g15
06:44:11  64  ,aud_g16
06:44:11  65  ,aud_g17
06:44:11  66  ,aud_g18
06:44:11  67  ,aud_g19
06:44:11  68  ,aud_g20
06:44:11  69  ,aud_g21
06:44:11  70  ,aud_g22
06:44:11  71  ,aud_g23
06:44:11  72  ,aud_g24
06:44:11  73  ,aud_g25
06:44:11  74  ,aud_g26
06:44:11  75  ,aud_g27
06:44:11  76  ,aud_g28
06:44:11  77  ,aud_g29
06:44:11  78  ,aud_g30
06:44:11  79  ,aud_g31
06:44:11  80  ,aud_g32
06:44:11  81  ,aud_g33
06:44:11  82  ,aud_g34
06:44:11  83  ,aud_g35
06:44:11  84  ,aud_g36
06:44:11  85  ,aud_g37
06:44:11  86  ,aud_g38
06:44:11  87  ,aud_g39
06:44:11  88  ,aud_g40
06:44:11  89  ,aud_g41
06:44:11  90  ,gbp_g00
06:44:11  91  ,gbp_g01
06:44:11  92  ,gbp_g02
06:44:11  93  ,gbp_g03
06:44:11  94  ,gbp_g04
06:44:11  95  ,gbp_g05
06:44:11  96  ,gbp_g06
06:44:11  97  ,gbp_g07
06:44:11  98  ,gbp_g08
06:44:11  99  ,gbp_g09
06:44:11 100  ,gbp_g10
06:44:11 101  ,gbp_g11
06:44:11 102  ,gbp_g12
06:44:11 103  ,gbp_g13
06:44:11 104  ,gbp_g14
06:44:11 105  ,gbp_g15
06:44:11 106  ,gbp_g16
06:44:11 107  ,gbp_g17
06:44:11 108  ,gbp_g18
06:44:11 109  ,gbp_g19
06:44:11 110  ,gbp_g20
06:44:11 111  ,gbp_g21
06:44:11 112  ,gbp_g22
06:44:11 113  ,gbp_g23
06:44:11 114  ,gbp_g24
06:44:11 115  ,gbp_g25
06:44:11 116  ,gbp_g26
06:44:11 117  ,gbp_g27
06:44:11 118  ,gbp_g28
06:44:11 119  ,gbp_g29
06:44:11 120  ,gbp_g30
06:44:11 121  ,gbp_g31
06:44:11 122  ,gbp_g32
06:44:11 123  ,gbp_g33
06:44:11 124  ,gbp_g34
06:44:11 125  ,gbp_g35
06:44:11 126  ,gbp_g36
06:44:11 127  ,gbp_g37
06:44:11 128  ,gbp_g38
06:44:11 129  ,gbp_g39
06:44:11 130  ,gbp_g40
06:44:11 131  ,gbp_g41
06:44:11 132  ,jpy_g00
06:44:11 133  ,jpy_g01
06:44:11 134  ,jpy_g02
06:44:11 135  ,jpy_g03
06:44:11 136  ,jpy_g04
06:44:11 137  ,jpy_g05
06:44:11 138  ,jpy_g06
06:44:11 139  ,jpy_g07
06:44:11 140  ,jpy_g08
06:44:11 141  ,jpy_g09
06:44:11 142  ,jpy_g10
06:44:11 143  ,jpy_g11
06:44:11 144  ,jpy_g12
06:44:11 145  ,jpy_g13
06:44:11 146  ,jpy_g14
06:44:11 147  ,jpy_g15
06:44:11 148  ,jpy_g16
06:44:11 149  ,jpy_g17
06:44:11 150  ,jpy_g18
06:44:11 151  ,jpy_g19
06:44:11 152  ,jpy_g20
06:44:11 153  ,jpy_g21
06:44:11 154  ,jpy_g22
06:44:11 155  ,jpy_g23
06:44:11 156  ,jpy_g24
06:44:11 157  ,jpy_g25
06:44:11 158  ,jpy_g26
06:44:11 159  ,jpy_g27
06:44:11 160  ,jpy_g28
06:44:11 161  ,jpy_g29
06:44:11 162  ,jpy_g30
06:44:11 163  ,jpy_g31
06:44:11 164  ,jpy_g32
06:44:11 165  ,jpy_g33
06:44:11 166  ,jpy_g34
06:44:11 167  ,jpy_g35
06:44:11 168  ,jpy_g36
06:44:11 169  ,jpy_g37
06:44:11 170  ,jpy_g38
06:44:11 171  ,jpy_g39
06:44:11 172  ,jpy_g40
06:44:11 173  ,jpy_g41
06:44:11 174  ,cad_g00
06:44:11 175  ,cad_g01
06:44:11 176  ,cad_g02
06:44:11 177  ,cad_g03
06:44:11 178  ,cad_g04
06:44:11 179  ,cad_g05
06:44:11 180  ,cad_g06
06:44:11 181  ,cad_g07
06:44:11 182  ,cad_g08
06:44:11 183  ,cad_g09
06:44:11 184  ,cad_g10
06:44:11 185  ,cad_g11
06:44:11 186  ,cad_g12
06:44:11 187  ,cad_g13
06:44:11 188  ,cad_g14
06:44:11 189  ,cad_g15
06:44:11 190  ,cad_g16
06:44:11 191  ,cad_g17
06:44:11 192  ,cad_g18
06:44:11 193  ,cad_g19
06:44:11 194  ,cad_g20
06:44:11 195  ,cad_g21
06:44:11 196  ,cad_g22
06:44:11 197  ,cad_g23
06:44:11 198  ,cad_g24
06:44:11 199  ,cad_g25
06:44:11 200  ,cad_g26
06:44:11 201  ,cad_g27
06:44:11 202  ,cad_g28
06:44:11 203  ,cad_g29
06:44:11 204  ,cad_g30
06:44:11 205  ,cad_g31
06:44:11 206  ,cad_g32
06:44:11 207  ,cad_g33
06:44:11 208  ,cad_g34
06:44:11 209  ,cad_g35
06:44:11 210  ,cad_g36
06:44:11 211  ,cad_g37
06:44:11 212  ,cad_g38
06:44:11 213  ,cad_g39
06:44:11 214  ,cad_g40
06:44:11 215  ,cad_g41
06:44:11 216  ,chf_g00
06:44:11 217  ,chf_g01
06:44:11 218  ,chf_g02
06:44:11 219  ,chf_g03
06:44:11 220  ,chf_g04
06:44:11 221  ,chf_g05
06:44:11 222  ,chf_g06
06:44:11 223  ,chf_g07
06:44:11 224  ,chf_g08
06:44:11 225  ,chf_g09
06:44:11 226  ,chf_g10
06:44:11 227  ,chf_g11
06:44:11 228  ,chf_g12
06:44:11 229  ,chf_g13
06:44:11 230  ,chf_g14
06:44:11 231  ,chf_g15
06:44:11 232  ,chf_g16
06:44:11 233  ,chf_g17
06:44:11 234  ,chf_g18
06:44:11 235  ,chf_g19
06:44:11 236  ,chf_g20
06:44:11 237  ,chf_g21
06:44:11 238  ,chf_g22
06:44:11 239  ,chf_g23
06:44:11 240  ,chf_g24
06:44:11 241  ,chf_g25
06:44:11 242  ,chf_g26
06:44:11 243  ,chf_g27
06:44:11 244  ,chf_g28
06:44:11 245  ,chf_g29
06:44:11 246  ,chf_g30
06:44:11 247  ,chf_g31
06:44:11 248  ,chf_g32
06:44:11 249  ,chf_g33
06:44:11 250  ,chf_g34
06:44:11 251  ,chf_g35
06:44:11 252  ,chf_g36
06:44:11 253  ,chf_g37
06:44:11 254  ,chf_g38
06:44:11 255  ,chf_g39
06:44:11 256  ,chf_g40
06:44:11 257  ,chf_g41
06:44:11 258  FROM aud_ms6 m
06:44:11 259  WHERE m.ydate = '&1'||' '||'&2'
06:44:11 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-27'||' '||'06:10:00'

View created.

Elapsed: 00:00:00.14
06:44:11 SQL> 
06:44:11 SQL> -- rpt
06:44:11 SQL> -- We should see just 1 row:
06:44:11 SQL> 
06:44:11 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
06:44:11 SQL> 
06:44:11 SQL> -- Build the model:
06:44:11 SQL> CREATE OR REPLACE VIEW bme AS
06:44:11   2  SELECT
06:44:11   3  'aud'||m.ydate prdate
06:44:11   4  ,gattn
06:44:11   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:44:11   6  ,eur_g00
06:44:11   7  ,eur_g01
06:44:11   8  ,eur_g02
06:44:11   9  ,eur_g03
06:44:11  10  ,eur_g04
06:44:11  11  ,eur_g05
06:44:11  12  ,eur_g06
06:44:11  13  ,eur_g07
06:44:11  14  ,eur_g08
06:44:11  15  ,eur_g09
06:44:11  16  ,eur_g10
06:44:11  17  ,eur_g11
06:44:11  18  ,eur_g12
06:44:11  19  ,eur_g13
06:44:11  20  ,eur_g14
06:44:11  21  ,eur_g15
06:44:11  22  ,eur_g16
06:44:11  23  ,eur_g17
06:44:11  24  ,eur_g18
06:44:11  25  ,eur_g19
06:44:11  26  ,eur_g20
06:44:11  27  ,eur_g21
06:44:11  28  ,eur_g22
06:44:11  29  ,eur_g23
06:44:11  30  ,eur_g24
06:44:11  31  ,eur_g25
06:44:11  32  ,eur_g26
06:44:11  33  ,eur_g27
06:44:11  34  ,eur_g28
06:44:11  35  ,eur_g29
06:44:11  36  ,eur_g30
06:44:11  37  ,eur_g31
06:44:11  38  ,eur_g32
06:44:11  39  ,eur_g33
06:44:11  40  ,eur_g34
06:44:11  41  ,eur_g35
06:44:11  42  ,eur_g36
06:44:11  43  ,eur_g37
06:44:11  44  ,eur_g38
06:44:11  45  ,eur_g39
06:44:11  46  ,eur_g40
06:44:11  47  ,eur_g41
06:44:11  48  ,aud_g00
06:44:11  49  ,aud_g01
06:44:11  50  ,aud_g02
06:44:11  51  ,aud_g03
06:44:11  52  ,aud_g04
06:44:11  53  ,aud_g05
06:44:11  54  ,aud_g06
06:44:11  55  ,aud_g07
06:44:11  56  ,aud_g08
06:44:11  57  ,aud_g09
06:44:11  58  ,aud_g10
06:44:11  59  ,aud_g11
06:44:11  60  ,aud_g12
06:44:11  61  ,aud_g13
06:44:11  62  ,aud_g14
06:44:11  63  ,aud_g15
06:44:11  64  ,aud_g16
06:44:11  65  ,aud_g17
06:44:11  66  ,aud_g18
06:44:11  67  ,aud_g19
06:44:11  68  ,aud_g20
06:44:11  69  ,aud_g21
06:44:11  70  ,aud_g22
06:44:11  71  ,aud_g23
06:44:11  72  ,aud_g24
06:44:11  73  ,aud_g25
06:44:11  74  ,aud_g26
06:44:11  75  ,aud_g27
06:44:11  76  ,aud_g28
06:44:11  77  ,aud_g29
06:44:11  78  ,aud_g30
06:44:11  79  ,aud_g31
06:44:11  80  ,aud_g32
06:44:11  81  ,aud_g33
06:44:11  82  ,aud_g34
06:44:11  83  ,aud_g35
06:44:11  84  ,aud_g36
06:44:11  85  ,aud_g37
06:44:11  86  ,aud_g38
06:44:11  87  ,aud_g39
06:44:11  88  ,aud_g40
06:44:11  89  ,aud_g41
06:44:11  90  ,gbp_g00
06:44:11  91  ,gbp_g01
06:44:11  92  ,gbp_g02
06:44:11  93  ,gbp_g03
06:44:11  94  ,gbp_g04
06:44:11  95  ,gbp_g05
06:44:11  96  ,gbp_g06
06:44:11  97  ,gbp_g07
06:44:11  98  ,gbp_g08
06:44:11  99  ,gbp_g09
06:44:11 100  ,gbp_g10
06:44:11 101  ,gbp_g11
06:44:11 102  ,gbp_g12
06:44:11 103  ,gbp_g13
06:44:11 104  ,gbp_g14
06:44:11 105  ,gbp_g15
06:44:11 106  ,gbp_g16
06:44:11 107  ,gbp_g17
06:44:11 108  ,gbp_g18
06:44:11 109  ,gbp_g19
06:44:11 110  ,gbp_g20
06:44:11 111  ,gbp_g21
06:44:11 112  ,gbp_g22
06:44:11 113  ,gbp_g23
06:44:11 114  ,gbp_g24
06:44:11 115  ,gbp_g25
06:44:11 116  ,gbp_g26
06:44:11 117  ,gbp_g27
06:44:11 118  ,gbp_g28
06:44:11 119  ,gbp_g29
06:44:11 120  ,gbp_g30
06:44:11 121  ,gbp_g31
06:44:11 122  ,gbp_g32
06:44:11 123  ,gbp_g33
06:44:11 124  ,gbp_g34
06:44:11 125  ,gbp_g35
06:44:11 126  ,gbp_g36
06:44:11 127  ,gbp_g37
06:44:11 128  ,gbp_g38
06:44:11 129  ,gbp_g39
06:44:11 130  ,gbp_g40
06:44:11 131  ,gbp_g41
06:44:11 132  ,jpy_g00
06:44:11 133  ,jpy_g01
06:44:11 134  ,jpy_g02
06:44:11 135  ,jpy_g03
06:44:11 136  ,jpy_g04
06:44:11 137  ,jpy_g05
06:44:11 138  ,jpy_g06
06:44:11 139  ,jpy_g07
06:44:11 140  ,jpy_g08
06:44:11 141  ,jpy_g09
06:44:11 142  ,jpy_g10
06:44:11 143  ,jpy_g11
06:44:11 144  ,jpy_g12
06:44:11 145  ,jpy_g13
06:44:11 146  ,jpy_g14
06:44:11 147  ,jpy_g15
06:44:11 148  ,jpy_g16
06:44:11 149  ,jpy_g17
06:44:11 150  ,jpy_g18
06:44:11 151  ,jpy_g19
06:44:11 152  ,jpy_g20
06:44:11 153  ,jpy_g21
06:44:11 154  ,jpy_g22
06:44:11 155  ,jpy_g23
06:44:11 156  ,jpy_g24
06:44:11 157  ,jpy_g25
06:44:11 158  ,jpy_g26
06:44:11 159  ,jpy_g27
06:44:11 160  ,jpy_g28
06:44:11 161  ,jpy_g29
06:44:11 162  ,jpy_g30
06:44:11 163  ,jpy_g31
06:44:11 164  ,jpy_g32
06:44:11 165  ,jpy_g33
06:44:11 166  ,jpy_g34
06:44:11 167  ,jpy_g35
06:44:11 168  ,jpy_g36
06:44:11 169  ,jpy_g37
06:44:11 170  ,jpy_g38
06:44:11 171  ,jpy_g39
06:44:11 172  ,jpy_g40
06:44:11 173  ,jpy_g41
06:44:11 174  ,cad_g00
06:44:11 175  ,cad_g01
06:44:11 176  ,cad_g02
06:44:11 177  ,cad_g03
06:44:11 178  ,cad_g04
06:44:11 179  ,cad_g05
06:44:11 180  ,cad_g06
06:44:11 181  ,cad_g07
06:44:11 182  ,cad_g08
06:44:11 183  ,cad_g09
06:44:11 184  ,cad_g10
06:44:11 185  ,cad_g11
06:44:11 186  ,cad_g12
06:44:11 187  ,cad_g13
06:44:11 188  ,cad_g14
06:44:11 189  ,cad_g15
06:44:11 190  ,cad_g16
06:44:11 191  ,cad_g17
06:44:11 192  ,cad_g18
06:44:11 193  ,cad_g19
06:44:11 194  ,cad_g20
06:44:11 195  ,cad_g21
06:44:11 196  ,cad_g22
06:44:11 197  ,cad_g23
06:44:11 198  ,cad_g24
06:44:11 199  ,cad_g25
06:44:11 200  ,cad_g26
06:44:11 201  ,cad_g27
06:44:11 202  ,cad_g28
06:44:11 203  ,cad_g29
06:44:11 204  ,cad_g30
06:44:11 205  ,cad_g31
06:44:11 206  ,cad_g32
06:44:11 207  ,cad_g33
06:44:11 208  ,cad_g34
06:44:11 209  ,cad_g35
06:44:11 210  ,cad_g36
06:44:11 211  ,cad_g37
06:44:11 212  ,cad_g38
06:44:11 213  ,cad_g39
06:44:11 214  ,cad_g40
06:44:11 215  ,cad_g41
06:44:11 216  ,chf_g00
06:44:11 217  ,chf_g01
06:44:11 218  ,chf_g02
06:44:11 219  ,chf_g03
06:44:11 220  ,chf_g04
06:44:11 221  ,chf_g05
06:44:11 222  ,chf_g06
06:44:11 223  ,chf_g07
06:44:11 224  ,chf_g08
06:44:11 225  ,chf_g09
06:44:11 226  ,chf_g10
06:44:11 227  ,chf_g11
06:44:11 228  ,chf_g12
06:44:11 229  ,chf_g13
06:44:11 230  ,chf_g14
06:44:11 231  ,chf_g15
06:44:11 232  ,chf_g16
06:44:11 233  ,chf_g17
06:44:11 234  ,chf_g18
06:44:11 235  ,chf_g19
06:44:11 236  ,chf_g20
06:44:11 237  ,chf_g21
06:44:11 238  ,chf_g22
06:44:11 239  ,chf_g23
06:44:11 240  ,chf_g24
06:44:11 241  ,chf_g25
06:44:11 242  ,chf_g26
06:44:11 243  ,chf_g27
06:44:11 244  ,chf_g28
06:44:11 245  ,chf_g29
06:44:11 246  ,chf_g30
06:44:11 247  ,chf_g31
06:44:11 248  ,chf_g32
06:44:11 249  ,chf_g33
06:44:11 250  ,chf_g34
06:44:11 251  ,chf_g35
06:44:11 252  ,chf_g36
06:44:11 253  ,chf_g37
06:44:11 254  ,chf_g38
06:44:11 255  ,chf_g39
06:44:11 256  ,chf_g40
06:44:11 257  ,chf_g41
06:44:11 258  FROM aud_ms6 m
06:44:11 259  WHERE gattn IN('nup','up')
06:44:11 260  AND 1+m.ydate < '&1'||' '||'&2'
06:44:11 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-27'||' '||'06:10:00'

View created.

Elapsed: 00:00:00.27
06:44:11 SQL> 
06:44:11 SQL> -- rpt
06:44:11 SQL> 
06:44:11 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12807
up	     6371

Elapsed: 00:00:00.04
06:44:11 SQL> 
06:44:11 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-24 21:55:00

Elapsed: 00:00:00.04
06:44:11 SQL> 
06:44:11 SQL> -- Now build model from bme and score sme
06:44:11 SQL> @score1gattn.sql
06:44:11 SQL> -- score1gattn.sql
06:44:11 SQL> 
06:44:11 SQL> -- Does the 1st SVM score
06:44:11 SQL> 
06:44:11 SQL> -- Fill up svmc_apply_prep
06:44:11 SQL> @score_gattn.sql
06:44:11 SQL> --
06:44:11 SQL> -- score_gattn.sql
06:44:11 SQL> --
06:44:11 SQL> 
06:44:11 SQL> -- usage: score_gattn.sql
06:44:11 SQL> 
06:44:11 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:44:11 SQL> 
06:44:11 SQL> DEFINE target	= 'gattn'
06:44:11 SQL> DEFINE model_name = 'forex14'
06:44:11 SQL> DEFINE bldtable	= 'bme'
06:44:11 SQL> DEFINE scoretable = 'sme'
06:44:11 SQL> DEFINE case_id	= 'prdate'
06:44:11 SQL> 
06:44:11 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:44:11 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:44:11 SQL> 
06:44:11 SQL> -- Builds an SVM model using pl/sql.
06:44:11 SQL> 
06:44:11 SQL> -----------------------------------------------------------------------
06:44:11 SQL> --			    BUILD THE MODEL
06:44:11 SQL> -----------------------------------------------------------------------
06:44:11 SQL> 
06:44:11 SQL> -- Cleanup old build data preparation objects for repeat runs
06:44:11 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
06:44:11 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:44:11 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
06:44:11 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
06:44:11 SQL> 
06:44:11 SQL> 
06:44:11 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:44:11 SQL> --
06:44:11 SQL> -- DROP	TABLE svmc_settings ;
06:44:11 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:44:11 SQL> -- DELETE svmc_settings;
06:44:11 SQL> 
06:44:11 SQL> -- The default classification algorithm is Naive Bayes. So override
06:44:11 SQL> -- this choice to SVM using a settings table.
06:44:11 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:44:11 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:44:11 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:44:11 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:44:11 SQL> -- models.
06:44:11 SQL> --
06:44:11 SQL> 
06:44:11 SQL> -- Do this once and then comment it out.
06:44:11 SQL> -- That makes script go faster.
06:44:11 SQL> -- BEGIN
06:44:11 SQL> -- -- Populate settings table
06:44:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:44:11 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:44:11 SQL> --
06:44:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:44:11 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:44:11 SQL> --
06:44:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:44:11 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:44:11 SQL> --   COMMIT;
06:44:11 SQL> -- END;
06:44:11 SQL> -- /
06:44:11 SQL> 
06:44:11 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:44:11 SQL> 
06:44:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:44:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.15
06:44:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:44:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:44:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:44:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:44:12 SQL> 
06:44:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:44:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
06:44:12 SQL> 
06:44:12 SQL> --------------------------------
06:44:12 SQL> -- PREPARE BUILD (TRAINING) DATA
06:44:12 SQL> --
06:44:12 SQL> 
06:44:12 SQL> -- 1. Missing Value treatment for all Predictors and
06:44:12 SQL> -- 2. Outlier Treatment and
06:44:12 SQL> -- 3. Normalization are performed below.
06:44:12 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:44:12 SQL> --    normalized here.
06:44:12 SQL> 
06:44:12 SQL> BEGIN
06:44:12   2  	-- Perform missing value treatment for all predictors
06:44:12   3  	-- create miss tables
06:44:12   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:44:12   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:44:12   6  
06:44:12   7  	-- populate miss tables
06:44:12   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:44:12   9  	  miss_table_name => 'svmc_miss_num',
06:44:12  10  	  data_table_name => '&bldtable',
06:44:12  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:44:12  12  
06:44:12  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:44:12  14  	  miss_table_name => 'svmc_miss_cat',
06:44:12  15  	  data_table_name => '&bldtable',
06:44:12  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:44:12  17  
06:44:12  18  	-- xform input data to replace missing values
06:44:12  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:44:12  20  	  miss_table_name => 'svmc_miss_num',
06:44:12  21  	  data_table_name => '&bldtable',
06:44:12  22  	  xform_view_name => 'xformed_build_miss_num');
06:44:12  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:44:12  24  	  miss_table_name => 'svmc_miss_cat',
06:44:12  25  	  data_table_name => '&bldtable',
06:44:12  26  	  xform_view_name => 'xformed_build_miss_cat');
06:44:12  27  
06:44:12  28  	-- Perform outlier treatment.
06:44:12  29  	-- create clip table
06:44:12  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:44:12  31  
06:44:12  32  	-- populate clip table
06:44:12  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:44:12  34  	  clip_table_name => 'svmc_clip',
06:44:12  35  	  data_table_name => '&bldtable',
06:44:12  36  	  tail_frac	  => 0.025,
06:44:12  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:44:12  38  
06:44:12  39  	-- xform input data to winsorized data
06:44:12  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:44:12  41  	  clip_table_name => 'svmc_clip',
06:44:12  42  	  data_table_name => '&bldtable',
06:44:12  43  	  xform_view_name => 'svmc_winsor');
06:44:12  44  
06:44:12  45  	-- create normalization table
06:44:12  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:44:12  47  
06:44:12  48  	-- populate normalization table based on winsorized data
06:44:12  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:44:12  50  	  norm_table_name => 'svmc_norm',
06:44:12  51  	  data_table_name => 'svmc_winsor',
06:44:12  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:44:12  53  
06:44:12  54  	-- normalize the original data
06:44:12  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:44:12  56  	  norm_table_name => 'svmc_norm',
06:44:12  57  	  data_table_name => '&bldtable',
06:44:12  58  	  xform_view_name => 'svmc_build_prep');
06:44:12  59  END;
06:44:12  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.43
06:44:29 SQL> 
06:44:29 SQL> ---------------------
06:44:29 SQL> -- CREATE A NEW MODEL
06:44:29 SQL> --
06:44:29 SQL> -- Cleanup old model with the same name for repeat runs
06:44:29 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:44:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:29   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.52
06:44:31 SQL> 
06:44:31 SQL> -- Build a new SVM Model
06:44:31 SQL> BEGIN
06:44:31   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:44:31   3  	  model_name	      => '&model_name',
06:44:31   4  	  mining_function     => dbms_data_mining.classification,
06:44:31   5  	  data_table_name     => 'svmc_build_prep',
06:44:31   6  	  case_id_column_name => '&case_id',
06:44:31   7  	  target_column_name  => '&target',
06:44:31   8  	  settings_table_name => 'svmc_settings');
06:44:31   9  END;
06:44:31  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.06
06:44:57 SQL> 
06:44:57 SQL> -----------------------------------------------------------------------
06:44:57 SQL> --			       APPLY/score THE MODEL
06:44:57 SQL> -----------------------------------------------------------------------
06:44:57 SQL> 
06:44:57 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:44:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:44:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:44:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:44:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:44:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:44:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
06:44:57 SQL> -----------------------
06:44:57 SQL> -- PREPARE SCORING DATA
06:44:57 SQL> --
06:44:57 SQL> -- If the data for model creation has been prepared, then the data
06:44:57 SQL> -- to be scored using the model must be prepared in the same manner
06:44:57 SQL> -- in order to obtain meaningful results.
06:44:57 SQL> --
06:44:57 SQL> -- 1. Missing Value treatment for all Predictors and
06:44:57 SQL> -- 2. Normalization
06:44:57 SQL> -- No outlier treatment will be performed during test and apply. The
06:44:57 SQL> -- normalization step is sufficient, since the normalization parameters
06:44:57 SQL> -- already capture the effects of outlier treatment done with build data.
06:44:57 SQL> --
06:44:57 SQL> BEGIN
06:44:57   2  	-- Xform Test data to replace missing values
06:44:57   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:44:57   4  	  miss_table_name => 'svmc_miss_num',
06:44:57   5  	  data_table_name => '&scoretable',
06:44:57   6  	  xform_view_name => 'xformed_apply_miss_num');
06:44:57   7  
06:44:57   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:44:57   9  	  miss_table_name => 'svmc_miss_cat',
06:44:57  10  	  data_table_name => '&scoretable',
06:44:57  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:44:57  12  
06:44:57  13  	-- Normalize the data to be scored
06:44:57  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:44:57  15  	  norm_table_name => 'svmc_norm',
06:44:57  16  	  data_table_name => '&scoretable',
06:44:57  17  	  xform_view_name => 'svmc_apply_prep');
06:44:57  18  END;
06:44:57  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.24
06:44:58 SQL> 
06:44:58 SQL> -- Use same model_name used in score_gattn.sql
06:44:58 SQL> DEFINE model_name = 'forex14'
06:44:58 SQL> 
06:44:58 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.21
06:44:59 SQL> 
06:44:59 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
06:44:59   2  SELECT
06:44:59   3  prdate
06:44:59   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:44:59   5  ,sysdate
06:44:59   6  ,SUBSTR(prdate,1,3)pair
06:44:59   7  ,SUBSTR(prdate,4,19)ydate
06:44:59   8  FROM svmc_apply_prep
06:44:59   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.20
06:44:59 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
