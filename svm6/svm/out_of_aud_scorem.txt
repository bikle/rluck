
SQL*Plus: Release 11.2.0.1.0 Production on Wed Jan 5 22:30:57 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

22:30:57 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
22:30:57 SQL> 22:30:57 SQL> @aud_score1day.sql  2011-01-05 22:15:00
22:30:57 SQL> --
22:30:57 SQL> -- aud_score1day.sql
22:30:57 SQL> --
22:30:57 SQL> 
22:30:57 SQL> CREATE OR REPLACE VIEW sme AS
22:30:57   2  SELECT
22:30:57   3  'aud'||m.ydate prdate
22:30:57   4  ,NULL gatt
22:30:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:30:57   6  ,eur_g00
22:30:57   7  ,eur_g01
22:30:57   8  ,eur_g02
22:30:57   9  ,eur_g03
22:30:57  10  ,eur_g04
22:30:57  11  ,eur_g05
22:30:57  12  ,eur_g06
22:30:57  13  ,eur_g07
22:30:57  14  ,eur_g08
22:30:57  15  ,eur_g09
22:30:57  16  ,eur_g10
22:30:57  17  ,eur_g11
22:30:57  18  ,eur_g12
22:30:57  19  ,eur_g13
22:30:57  20  ,eur_g14
22:30:57  21  ,eur_g15
22:30:57  22  ,eur_g16
22:30:57  23  ,eur_g17
22:30:57  24  ,eur_g18
22:30:57  25  ,eur_g19
22:30:57  26  ,eur_g20
22:30:57  27  ,eur_g21
22:30:57  28  ,eur_g22
22:30:57  29  ,eur_g23
22:30:57  30  ,eur_g24
22:30:57  31  ,eur_g25
22:30:57  32  ,eur_g26
22:30:57  33  ,eur_g27
22:30:57  34  ,eur_g28
22:30:57  35  ,eur_g29
22:30:57  36  ,eur_g30
22:30:57  37  ,eur_g31
22:30:57  38  ,eur_g32
22:30:57  39  ,eur_g33
22:30:57  40  ,eur_g34
22:30:57  41  ,eur_g35
22:30:57  42  ,eur_g36
22:30:57  43  ,eur_g37
22:30:57  44  ,eur_g38
22:30:57  45  ,eur_g39
22:30:57  46  ,eur_g40
22:30:57  47  ,eur_g41
22:30:57  48  ,aud_g00
22:30:57  49  ,aud_g01
22:30:57  50  ,aud_g02
22:30:57  51  ,aud_g03
22:30:57  52  ,aud_g04
22:30:57  53  ,aud_g05
22:30:57  54  ,aud_g06
22:30:57  55  ,aud_g07
22:30:57  56  ,aud_g08
22:30:57  57  ,aud_g09
22:30:57  58  ,aud_g10
22:30:57  59  ,aud_g11
22:30:57  60  ,aud_g12
22:30:57  61  ,aud_g13
22:30:57  62  ,aud_g14
22:30:57  63  ,aud_g15
22:30:57  64  ,aud_g16
22:30:57  65  ,aud_g17
22:30:57  66  ,aud_g18
22:30:57  67  ,aud_g19
22:30:57  68  ,aud_g20
22:30:57  69  ,aud_g21
22:30:57  70  ,aud_g22
22:30:57  71  ,aud_g23
22:30:57  72  ,aud_g24
22:30:57  73  ,aud_g25
22:30:57  74  ,aud_g26
22:30:57  75  ,aud_g27
22:30:57  76  ,aud_g28
22:30:57  77  ,aud_g29
22:30:57  78  ,aud_g30
22:30:57  79  ,aud_g31
22:30:57  80  ,aud_g32
22:30:57  81  ,aud_g33
22:30:57  82  ,aud_g34
22:30:57  83  ,aud_g35
22:30:57  84  ,aud_g36
22:30:57  85  ,aud_g37
22:30:57  86  ,aud_g38
22:30:57  87  ,aud_g39
22:30:57  88  ,aud_g40
22:30:57  89  ,aud_g41
22:30:57  90  ,gbp_g00
22:30:57  91  ,gbp_g01
22:30:57  92  ,gbp_g02
22:30:57  93  ,gbp_g03
22:30:57  94  ,gbp_g04
22:30:57  95  ,gbp_g05
22:30:57  96  ,gbp_g06
22:30:57  97  ,gbp_g07
22:30:57  98  ,gbp_g08
22:30:57  99  ,gbp_g09
22:30:57 100  ,gbp_g10
22:30:57 101  ,gbp_g11
22:30:57 102  ,gbp_g12
22:30:57 103  ,gbp_g13
22:30:57 104  ,gbp_g14
22:30:57 105  ,gbp_g15
22:30:57 106  ,gbp_g16
22:30:57 107  ,gbp_g17
22:30:57 108  ,gbp_g18
22:30:57 109  ,gbp_g19
22:30:57 110  ,gbp_g20
22:30:57 111  ,gbp_g21
22:30:57 112  ,gbp_g22
22:30:57 113  ,gbp_g23
22:30:57 114  ,gbp_g24
22:30:57 115  ,gbp_g25
22:30:57 116  ,gbp_g26
22:30:57 117  ,gbp_g27
22:30:57 118  ,gbp_g28
22:30:57 119  ,gbp_g29
22:30:57 120  ,gbp_g30
22:30:57 121  ,gbp_g31
22:30:57 122  ,gbp_g32
22:30:57 123  ,gbp_g33
22:30:57 124  ,gbp_g34
22:30:57 125  ,gbp_g35
22:30:57 126  ,gbp_g36
22:30:57 127  ,gbp_g37
22:30:57 128  ,gbp_g38
22:30:57 129  ,gbp_g39
22:30:57 130  ,gbp_g40
22:30:57 131  ,gbp_g41
22:30:57 132  ,jpy_g00
22:30:57 133  ,jpy_g01
22:30:57 134  ,jpy_g02
22:30:57 135  ,jpy_g03
22:30:57 136  ,jpy_g04
22:30:57 137  ,jpy_g05
22:30:57 138  ,jpy_g06
22:30:57 139  ,jpy_g07
22:30:57 140  ,jpy_g08
22:30:57 141  ,jpy_g09
22:30:57 142  ,jpy_g10
22:30:57 143  ,jpy_g11
22:30:57 144  ,jpy_g12
22:30:57 145  ,jpy_g13
22:30:57 146  ,jpy_g14
22:30:57 147  ,jpy_g15
22:30:57 148  ,jpy_g16
22:30:57 149  ,jpy_g17
22:30:57 150  ,jpy_g18
22:30:57 151  ,jpy_g19
22:30:57 152  ,jpy_g20
22:30:57 153  ,jpy_g21
22:30:57 154  ,jpy_g22
22:30:57 155  ,jpy_g23
22:30:57 156  ,jpy_g24
22:30:57 157  ,jpy_g25
22:30:57 158  ,jpy_g26
22:30:57 159  ,jpy_g27
22:30:57 160  ,jpy_g28
22:30:57 161  ,jpy_g29
22:30:57 162  ,jpy_g30
22:30:57 163  ,jpy_g31
22:30:57 164  ,jpy_g32
22:30:57 165  ,jpy_g33
22:30:57 166  ,jpy_g34
22:30:57 167  ,jpy_g35
22:30:57 168  ,jpy_g36
22:30:57 169  ,jpy_g37
22:30:57 170  ,jpy_g38
22:30:57 171  ,jpy_g39
22:30:57 172  ,jpy_g40
22:30:57 173  ,jpy_g41
22:30:57 174  ,cad_g00
22:30:57 175  ,cad_g01
22:30:57 176  ,cad_g02
22:30:57 177  ,cad_g03
22:30:57 178  ,cad_g04
22:30:57 179  ,cad_g05
22:30:57 180  ,cad_g06
22:30:57 181  ,cad_g07
22:30:57 182  ,cad_g08
22:30:57 183  ,cad_g09
22:30:57 184  ,cad_g10
22:30:57 185  ,cad_g11
22:30:57 186  ,cad_g12
22:30:57 187  ,cad_g13
22:30:57 188  ,cad_g14
22:30:57 189  ,cad_g15
22:30:57 190  ,cad_g16
22:30:57 191  ,cad_g17
22:30:57 192  ,cad_g18
22:30:57 193  ,cad_g19
22:30:57 194  ,cad_g20
22:30:57 195  ,cad_g21
22:30:57 196  ,cad_g22
22:30:57 197  ,cad_g23
22:30:57 198  ,cad_g24
22:30:57 199  ,cad_g25
22:30:57 200  ,cad_g26
22:30:57 201  ,cad_g27
22:30:57 202  ,cad_g28
22:30:57 203  ,cad_g29
22:30:57 204  ,cad_g30
22:30:57 205  ,cad_g31
22:30:57 206  ,cad_g32
22:30:57 207  ,cad_g33
22:30:57 208  ,cad_g34
22:30:57 209  ,cad_g35
22:30:57 210  ,cad_g36
22:30:57 211  ,cad_g37
22:30:57 212  ,cad_g38
22:30:57 213  ,cad_g39
22:30:57 214  ,cad_g40
22:30:57 215  ,cad_g41
22:30:57 216  ,chf_g00
22:30:57 217  ,chf_g01
22:30:57 218  ,chf_g02
22:30:57 219  ,chf_g03
22:30:57 220  ,chf_g04
22:30:57 221  ,chf_g05
22:30:57 222  ,chf_g06
22:30:57 223  ,chf_g07
22:30:57 224  ,chf_g08
22:30:57 225  ,chf_g09
22:30:57 226  ,chf_g10
22:30:57 227  ,chf_g11
22:30:57 228  ,chf_g12
22:30:57 229  ,chf_g13
22:30:57 230  ,chf_g14
22:30:57 231  ,chf_g15
22:30:57 232  ,chf_g16
22:30:57 233  ,chf_g17
22:30:57 234  ,chf_g18
22:30:57 235  ,chf_g19
22:30:57 236  ,chf_g20
22:30:57 237  ,chf_g21
22:30:57 238  ,chf_g22
22:30:57 239  ,chf_g23
22:30:57 240  ,chf_g24
22:30:57 241  ,chf_g25
22:30:57 242  ,chf_g26
22:30:57 243  ,chf_g27
22:30:57 244  ,chf_g28
22:30:57 245  ,chf_g29
22:30:57 246  ,chf_g30
22:30:57 247  ,chf_g31
22:30:57 248  ,chf_g32
22:30:57 249  ,chf_g33
22:30:57 250  ,chf_g34
22:30:57 251  ,chf_g35
22:30:57 252  ,chf_g36
22:30:57 253  ,chf_g37
22:30:57 254  ,chf_g38
22:30:57 255  ,chf_g39
22:30:57 256  ,chf_g40
22:30:57 257  ,chf_g41
22:30:57 258  FROM aud_ms6 m
22:30:57 259  WHERE m.ydate = '&1'||' '||'&2'
22:30:57 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'22:15:00'

View created.

Elapsed: 00:00:00.18
22:30:57 SQL> 
22:30:57 SQL> -- rpt
22:30:57 SQL> -- We should see just 1 row:
22:30:57 SQL> 
22:30:57 SQL> SELECT COUNT(prdate) FROM sme
22:30:57   2  
22:30:57 SQL> -- Build the model:
22:30:57 SQL> CREATE OR REPLACE VIEW bme AS
22:30:57   2  SELECT
22:30:57   3  'aud'||m.ydate prdate
22:30:57   4  ,gatt
22:30:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:30:57   6  ,eur_g00
22:30:57   7  ,eur_g01
22:30:57   8  ,eur_g02
22:30:57   9  ,eur_g03
22:30:57  10  ,eur_g04
22:30:57  11  ,eur_g05
22:30:57  12  ,eur_g06
22:30:57  13  ,eur_g07
22:30:57  14  ,eur_g08
22:30:57  15  ,eur_g09
22:30:57  16  ,eur_g10
22:30:57  17  ,eur_g11
22:30:57  18  ,eur_g12
22:30:57  19  ,eur_g13
22:30:57  20  ,eur_g14
22:30:57  21  ,eur_g15
22:30:57  22  ,eur_g16
22:30:57  23  ,eur_g17
22:30:57  24  ,eur_g18
22:30:57  25  ,eur_g19
22:30:57  26  ,eur_g20
22:30:57  27  ,eur_g21
22:30:57  28  ,eur_g22
22:30:57  29  ,eur_g23
22:30:57  30  ,eur_g24
22:30:57  31  ,eur_g25
22:30:57  32  ,eur_g26
22:30:57  33  ,eur_g27
22:30:57  34  ,eur_g28
22:30:57  35  ,eur_g29
22:30:57  36  ,eur_g30
22:30:57  37  ,eur_g31
22:30:57  38  ,eur_g32
22:30:57  39  ,eur_g33
22:30:57  40  ,eur_g34
22:30:57  41  ,eur_g35
22:30:57  42  ,eur_g36
22:30:57  43  ,eur_g37
22:30:57  44  ,eur_g38
22:30:57  45  ,eur_g39
22:30:57  46  ,eur_g40
22:30:57  47  ,eur_g41
22:30:57  48  ,aud_g00
22:30:57  49  ,aud_g01
22:30:57  50  ,aud_g02
22:30:57  51  ,aud_g03
22:30:57  52  ,aud_g04
22:30:57  53  ,aud_g05
22:30:57  54  ,aud_g06
22:30:57  55  ,aud_g07
22:30:57  56  ,aud_g08
22:30:57  57  ,aud_g09
22:30:57  58  ,aud_g10
22:30:57  59  ,aud_g11
22:30:57  60  ,aud_g12
22:30:57  61  ,aud_g13
22:30:57  62  ,aud_g14
22:30:57  63  ,aud_g15
22:30:57  64  ,aud_g16
22:30:57  65  ,aud_g17
22:30:57  66  ,aud_g18
22:30:57  67  ,aud_g19
22:30:57  68  ,aud_g20
22:30:57  69  ,aud_g21
22:30:57  70  ,aud_g22
22:30:57  71  ,aud_g23
22:30:57  72  ,aud_g24
22:30:57  73  ,aud_g25
22:30:57  74  ,aud_g26
22:30:57  75  ,aud_g27
22:30:57  76  ,aud_g28
22:30:57  77  ,aud_g29
22:30:57  78  ,aud_g30
22:30:57  79  ,aud_g31
22:30:57  80  ,aud_g32
22:30:57  81  ,aud_g33
22:30:57  82  ,aud_g34
22:30:57  83  ,aud_g35
22:30:57  84  ,aud_g36
22:30:57  85  ,aud_g37
22:30:57  86  ,aud_g38
22:30:57  87  ,aud_g39
22:30:57  88  ,aud_g40
22:30:57  89  ,aud_g41
22:30:57  90  ,gbp_g00
22:30:57  91  ,gbp_g01
22:30:57  92  ,gbp_g02
22:30:57  93  ,gbp_g03
22:30:57  94  ,gbp_g04
22:30:57  95  ,gbp_g05
22:30:57  96  ,gbp_g06
22:30:57  97  ,gbp_g07
22:30:57  98  ,gbp_g08
22:30:57  99  ,gbp_g09
22:30:57 100  ,gbp_g10
22:30:57 101  ,gbp_g11
22:30:57 102  ,gbp_g12
22:30:57 103  ,gbp_g13
22:30:57 104  ,gbp_g14
22:30:57 105  ,gbp_g15
22:30:57 106  ,gbp_g16
22:30:57 107  ,gbp_g17
22:30:57 108  ,gbp_g18
22:30:57 109  ,gbp_g19
22:30:57 110  ,gbp_g20
22:30:57 111  ,gbp_g21
22:30:57 112  ,gbp_g22
22:30:57 113  ,gbp_g23
22:30:57 114  ,gbp_g24
22:30:57 115  ,gbp_g25
22:30:57 116  ,gbp_g26
22:30:57 117  ,gbp_g27
22:30:57 118  ,gbp_g28
22:30:57 119  ,gbp_g29
22:30:57 120  ,gbp_g30
22:30:57 121  ,gbp_g31
22:30:57 122  ,gbp_g32
22:30:57 123  ,gbp_g33
22:30:57 124  ,gbp_g34
22:30:57 125  ,gbp_g35
22:30:57 126  ,gbp_g36
22:30:57 127  ,gbp_g37
22:30:57 128  ,gbp_g38
22:30:57 129  ,gbp_g39
22:30:57 130  ,gbp_g40
22:30:57 131  ,gbp_g41
22:30:57 132  ,jpy_g00
22:30:57 133  ,jpy_g01
22:30:57 134  ,jpy_g02
22:30:57 135  ,jpy_g03
22:30:57 136  ,jpy_g04
22:30:57 137  ,jpy_g05
22:30:57 138  ,jpy_g06
22:30:57 139  ,jpy_g07
22:30:57 140  ,jpy_g08
22:30:57 141  ,jpy_g09
22:30:57 142  ,jpy_g10
22:30:57 143  ,jpy_g11
22:30:57 144  ,jpy_g12
22:30:57 145  ,jpy_g13
22:30:57 146  ,jpy_g14
22:30:57 147  ,jpy_g15
22:30:57 148  ,jpy_g16
22:30:57 149  ,jpy_g17
22:30:57 150  ,jpy_g18
22:30:57 151  ,jpy_g19
22:30:57 152  ,jpy_g20
22:30:57 153  ,jpy_g21
22:30:57 154  ,jpy_g22
22:30:57 155  ,jpy_g23
22:30:57 156  ,jpy_g24
22:30:57 157  ,jpy_g25
22:30:57 158  ,jpy_g26
22:30:57 159  ,jpy_g27
22:30:57 160  ,jpy_g28
22:30:57 161  ,jpy_g29
22:30:57 162  ,jpy_g30
22:30:57 163  ,jpy_g31
22:30:57 164  ,jpy_g32
22:30:57 165  ,jpy_g33
22:30:57 166  ,jpy_g34
22:30:57 167  ,jpy_g35
22:30:57 168  ,jpy_g36
22:30:57 169  ,jpy_g37
22:30:57 170  ,jpy_g38
22:30:57 171  ,jpy_g39
22:30:57 172  ,jpy_g40
22:30:57 173  ,jpy_g41
22:30:57 174  ,cad_g00
22:30:57 175  ,cad_g01
22:30:57 176  ,cad_g02
22:30:57 177  ,cad_g03
22:30:57 178  ,cad_g04
22:30:57 179  ,cad_g05
22:30:57 180  ,cad_g06
22:30:57 181  ,cad_g07
22:30:57 182  ,cad_g08
22:30:57 183  ,cad_g09
22:30:57 184  ,cad_g10
22:30:57 185  ,cad_g11
22:30:57 186  ,cad_g12
22:30:57 187  ,cad_g13
22:30:57 188  ,cad_g14
22:30:57 189  ,cad_g15
22:30:57 190  ,cad_g16
22:30:57 191  ,cad_g17
22:30:57 192  ,cad_g18
22:30:57 193  ,cad_g19
22:30:57 194  ,cad_g20
22:30:57 195  ,cad_g21
22:30:57 196  ,cad_g22
22:30:57 197  ,cad_g23
22:30:57 198  ,cad_g24
22:30:57 199  ,cad_g25
22:30:57 200  ,cad_g26
22:30:57 201  ,cad_g27
22:30:57 202  ,cad_g28
22:30:57 203  ,cad_g29
22:30:57 204  ,cad_g30
22:30:57 205  ,cad_g31
22:30:57 206  ,cad_g32
22:30:57 207  ,cad_g33
22:30:57 208  ,cad_g34
22:30:57 209  ,cad_g35
22:30:57 210  ,cad_g36
22:30:57 211  ,cad_g37
22:30:57 212  ,cad_g38
22:30:57 213  ,cad_g39
22:30:57 214  ,cad_g40
22:30:57 215  ,cad_g41
22:30:57 216  ,chf_g00
22:30:57 217  ,chf_g01
22:30:57 218  ,chf_g02
22:30:57 219  ,chf_g03
22:30:57 220  ,chf_g04
22:30:57 221  ,chf_g05
22:30:57 222  ,chf_g06
22:30:57 223  ,chf_g07
22:30:57 224  ,chf_g08
22:30:57 225  ,chf_g09
22:30:57 226  ,chf_g10
22:30:57 227  ,chf_g11
22:30:57 228  ,chf_g12
22:30:57 229  ,chf_g13
22:30:57 230  ,chf_g14
22:30:57 231  ,chf_g15
22:30:57 232  ,chf_g16
22:30:57 233  ,chf_g17
22:30:57 234  ,chf_g18
22:30:57 235  ,chf_g19
22:30:57 236  ,chf_g20
22:30:57 237  ,chf_g21
22:30:57 238  ,chf_g22
22:30:57 239  ,chf_g23
22:30:57 240  ,chf_g24
22:30:57 241  ,chf_g25
22:30:57 242  ,chf_g26
22:30:57 243  ,chf_g27
22:30:57 244  ,chf_g28
22:30:57 245  ,chf_g29
22:30:57 246  ,chf_g30
22:30:57 247  ,chf_g31
22:30:57 248  ,chf_g32
22:30:57 249  ,chf_g33
22:30:57 250  ,chf_g34
22:30:57 251  ,chf_g35
22:30:57 252  ,chf_g36
22:30:57 253  ,chf_g37
22:30:57 254  ,chf_g38
22:30:57 255  ,chf_g39
22:30:57 256  ,chf_g40
22:30:57 257  ,chf_g41
22:30:57 258  FROM aud_ms6 m
22:30:57 259  WHERE gatt IN('nup','up')
22:30:57 260  AND 1+m.ydate < '&1'||' '||'&2'
22:30:57 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'22:15:00'

View created.

Elapsed: 00:00:00.17
22:30:58 SQL> 
22:30:58 SQL> -- rpt
22:30:58 SQL> 
22:30:58 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
22:30:58   2  
22:30:58 SQL> SELECT MAX(prdate) FROM bme
22:30:58   2  
22:30:58 SQL> -- Now build model from bme and score sme
22:30:58 SQL> @score1.sql
22:30:58 SQL> -- score1.sql
22:30:58 SQL> 
22:30:58 SQL> -- Does the 1st SVM score
22:30:58 SQL> 
22:30:58 SQL> -- Fill up svmc_apply_prep
22:30:58 SQL> @score.sql
22:30:58 SQL> --
22:30:58 SQL> -- score.sql
22:30:58 SQL> --
22:30:58 SQL> 
22:30:58 SQL> -- usage: score.sql
22:30:58 SQL> 
22:30:58 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:30:58 SQL> 
22:30:58 SQL> DEFINE target	= 'gatt'
22:30:58 SQL> DEFINE model_name = 'forex15'
22:30:58 SQL> DEFINE bldtable	= 'bme'
22:30:58 SQL> DEFINE scoretable = 'sme'
22:30:58 SQL> DEFINE case_id	= 'prdate'
22:30:58 SQL> 
22:30:58 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:30:58 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:30:58 SQL> 
22:30:58 SQL> -- Builds an SVM model using pl/sql.
22:30:58 SQL> 
22:30:58 SQL> -----------------------------------------------------------------------
22:30:58 SQL> --			    BUILD THE MODEL
22:30:58 SQL> -----------------------------------------------------------------------
22:30:58 SQL> 
22:30:58 SQL> -- Cleanup old build data preparation objects for repeat runs
22:30:58 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.05
22:30:58 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
22:30:58 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.02
22:30:58 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
22:30:58 SQL> 
22:30:58 SQL> 
22:30:58 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:30:58 SQL> --
22:30:58 SQL> -- DROP	TABLE svmc_settings ;
22:30:58 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:30:58 SQL> -- DELETE svmc_settings;
22:30:58 SQL> 
22:30:58 SQL> -- The default classification algorithm is Naive Bayes. So override
22:30:58 SQL> -- this choice to SVM using a settings table.
22:30:58 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:30:58 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:30:58 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:30:58 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:30:58 SQL> -- models.
22:30:58 SQL> --
22:30:58 SQL> 
22:30:58 SQL> -- Do this once and then comment it out.
22:30:58 SQL> -- That makes script go faster.
22:30:58 SQL> -- BEGIN
22:30:58 SQL> -- -- Populate settings table
22:30:58 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:30:58 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:30:58 SQL> --
22:30:58 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:30:58 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:30:58 SQL> --
22:30:58 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:30:58 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:30:58 SQL> --   COMMIT;
22:30:58 SQL> -- END;
22:30:58 SQL> -- /
22:30:58 SQL> 
22:30:58 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
22:30:58 SQL> 
22:30:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:30:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:30:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.12
22:30:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:30:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:30:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
22:30:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:30:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:30:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.13
22:30:58 SQL> 
22:30:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:30:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:30:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:30:58 SQL> 
22:30:58 SQL> --------------------------------
22:30:58 SQL> -- PREPARE BUILD (TRAINING) DATA
22:30:58 SQL> --
22:30:58 SQL> 
22:30:58 SQL> -- 1. Missing Value treatment for all Predictors and
22:30:58 SQL> -- 2. Outlier Treatment and
22:30:58 SQL> -- 3. Normalization are performed below.
22:30:58 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:30:58 SQL> --    normalized here.
22:30:58 SQL> 
22:30:58 SQL> BEGIN
22:30:58   2  	-- Perform missing value treatment for all predictors
22:30:58   3  	-- create miss tables
22:30:58   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:30:58   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:30:58   6  
22:30:58   7  	-- populate miss tables
22:30:58   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:30:58   9  	  miss_table_name => 'svmc_miss_num',
22:30:58  10  	  data_table_name => '&bldtable',
22:30:58  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:30:58  12  
22:30:58  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:30:58  14  	  miss_table_name => 'svmc_miss_cat',
22:30:58  15  	  data_table_name => '&bldtable',
22:30:58  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:30:58  17  
22:30:58  18  	-- xform input data to replace missing values
22:30:58  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:30:58  20  	  miss_table_name => 'svmc_miss_num',
22:30:58  21  	  data_table_name => '&bldtable',
22:30:58  22  	  xform_view_name => 'xformed_build_miss_num');
22:30:58  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:30:58  24  	  miss_table_name => 'svmc_miss_cat',
22:30:58  25  	  data_table_name => '&bldtable',
22:30:58  26  	  xform_view_name => 'xformed_build_miss_cat');
22:30:58  27  
22:30:58  28  	-- Perform outlier treatment.
22:30:58  29  	-- create clip table
22:30:58  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:30:58  31  
22:30:58  32  	-- populate clip table
22:30:58  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:30:58  34  	  clip_table_name => 'svmc_clip',
22:30:58  35  	  data_table_name => '&bldtable',
22:30:58  36  	  tail_frac	  => 0.025,
22:30:58  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:30:58  38  
22:30:58  39  	-- xform input data to winsorized data
22:30:58  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:30:58  41  	  clip_table_name => 'svmc_clip',
22:30:58  42  	  data_table_name => '&bldtable',
22:30:58  43  	  xform_view_name => 'svmc_winsor');
22:30:58  44  
22:30:58  45  	-- create normalization table
22:30:58  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:30:58  47  
22:30:58  48  	-- populate normalization table based on winsorized data
22:30:58  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:30:58  50  	  norm_table_name => 'svmc_norm',
22:30:58  51  	  data_table_name => 'svmc_winsor',
22:30:58  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:30:58  53  
22:30:58  54  	-- normalize the original data
22:30:58  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:30:58  56  	  norm_table_name => 'svmc_norm',
22:30:58  57  	  data_table_name => '&bldtable',
22:30:58  58  	  xform_view_name => 'svmc_build_prep');
22:30:58  59  END;
22:30:58  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:20.17
22:31:18 SQL> 
22:31:18 SQL> ---------------------
22:31:18 SQL> -- CREATE A NEW MODEL
22:31:18 SQL> --
22:31:18 SQL> -- Cleanup old model with the same name for repeat runs
22:31:18 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:31:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:31:18   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
22:31:20 SQL> 
22:31:20 SQL> -- Build a new SVM Model
22:31:20 SQL> BEGIN
22:31:20   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:31:20   3  	  model_name	      => '&model_name',
22:31:20   4  	  mining_function     => dbms_data_mining.classification,
22:31:20   5  	  data_table_name     => 'svmc_build_prep',
22:31:20   6  	  case_id_column_name => '&case_id',
22:31:20   7  	  target_column_name  => '&target',
22:31:20   8  	  settings_table_name => 'svmc_settings');
22:31:20   9  END;
22:31:20  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:30.10
22:31:50 SQL> 
22:31:50 SQL> -----------------------------------------------------------------------
22:31:50 SQL> --			       APPLY/score THE MODEL
22:31:50 SQL> -----------------------------------------------------------------------
22:31:50 SQL> 
22:31:50 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:31:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:31:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:31:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.21
22:31:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:31:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:31:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
22:31:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:31:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:31:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.16
22:31:50 SQL> -----------------------
22:31:50 SQL> -- PREPARE SCORING DATA
22:31:50 SQL> --
22:31:50 SQL> -- If the data for model creation has been prepared, then the data
22:31:50 SQL> -- to be scored using the model must be prepared in the same manner
22:31:50 SQL> -- in order to obtain meaningful results.
22:31:50 SQL> --
22:31:50 SQL> -- 1. Missing Value treatment for all Predictors and
22:31:50 SQL> -- 2. Normalization
22:31:50 SQL> -- No outlier treatment will be performed during test and apply. The
22:31:50 SQL> -- normalization step is sufficient, since the normalization parameters
22:31:50 SQL> -- already capture the effects of outlier treatment done with build data.
22:31:50 SQL> --
22:31:50 SQL> BEGIN
22:31:50   2  	-- Xform Test data to replace missing values
22:31:50   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:31:50   4  	  miss_table_name => 'svmc_miss_num',
22:31:50   5  	  data_table_name => '&scoretable',
22:31:50   6  	  xform_view_name => 'xformed_apply_miss_num');
22:31:50   7  
22:31:50   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:31:50   9  	  miss_table_name => 'svmc_miss_cat',
22:31:50  10  	  data_table_name => '&scoretable',
22:31:50  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:31:50  12  
22:31:50  13  	-- Normalize the data to be scored
22:31:50  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:31:50  15  	  norm_table_name => 'svmc_norm',
22:31:50  16  	  data_table_name => '&scoretable',
22:31:50  17  	  xform_view_name => 'svmc_apply_prep');
22:31:50  18  END;
22:31:50  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.43
22:31:52 SQL> 
22:31:52 SQL> -- Use same model_name used in score.sql
22:31:52 SQL> DEFINE model_name = 'forex15'
22:31:52 SQL> 
22:31:52 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
22:31:52 SQL> 
22:31:52 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
22:31:52 SQL> 
22:31:52 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
22:31:52   2  SELECT
22:31:52   3  prdate
22:31:52   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:31:52   5  ,sysdate
22:31:52   6  ,SUBSTR(prdate,1,3)pair
22:31:52   7  ,SUBSTR(prdate,4,19)ydate
22:31:52   8  FROM svmc_apply_prep
22:31:52   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.27
22:31:52 SQL> @aud_score1day.sql  2011-01-05 22:20:00
22:31:52 SQL> --
22:31:52 SQL> -- aud_score1day.sql
22:31:52 SQL> --
22:31:52 SQL> 
22:31:52 SQL> CREATE OR REPLACE VIEW sme AS
22:31:52   2  SELECT
22:31:52   3  'aud'||m.ydate prdate
22:31:52   4  ,NULL gatt
22:31:52   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:31:52   6  ,eur_g00
22:31:52   7  ,eur_g01
22:31:52   8  ,eur_g02
22:31:52   9  ,eur_g03
22:31:52  10  ,eur_g04
22:31:52  11  ,eur_g05
22:31:52  12  ,eur_g06
22:31:52  13  ,eur_g07
22:31:52  14  ,eur_g08
22:31:52  15  ,eur_g09
22:31:52  16  ,eur_g10
22:31:52  17  ,eur_g11
22:31:52  18  ,eur_g12
22:31:52  19  ,eur_g13
22:31:52  20  ,eur_g14
22:31:52  21  ,eur_g15
22:31:52  22  ,eur_g16
22:31:52  23  ,eur_g17
22:31:52  24  ,eur_g18
22:31:52  25  ,eur_g19
22:31:52  26  ,eur_g20
22:31:52  27  ,eur_g21
22:31:52  28  ,eur_g22
22:31:52  29  ,eur_g23
22:31:52  30  ,eur_g24
22:31:52  31  ,eur_g25
22:31:52  32  ,eur_g26
22:31:52  33  ,eur_g27
22:31:52  34  ,eur_g28
22:31:52  35  ,eur_g29
22:31:52  36  ,eur_g30
22:31:52  37  ,eur_g31
22:31:52  38  ,eur_g32
22:31:52  39  ,eur_g33
22:31:52  40  ,eur_g34
22:31:52  41  ,eur_g35
22:31:52  42  ,eur_g36
22:31:52  43  ,eur_g37
22:31:52  44  ,eur_g38
22:31:52  45  ,eur_g39
22:31:52  46  ,eur_g40
22:31:52  47  ,eur_g41
22:31:52  48  ,aud_g00
22:31:52  49  ,aud_g01
22:31:52  50  ,aud_g02
22:31:52  51  ,aud_g03
22:31:52  52  ,aud_g04
22:31:52  53  ,aud_g05
22:31:52  54  ,aud_g06
22:31:52  55  ,aud_g07
22:31:52  56  ,aud_g08
22:31:52  57  ,aud_g09
22:31:52  58  ,aud_g10
22:31:52  59  ,aud_g11
22:31:52  60  ,aud_g12
22:31:52  61  ,aud_g13
22:31:52  62  ,aud_g14
22:31:52  63  ,aud_g15
22:31:52  64  ,aud_g16
22:31:52  65  ,aud_g17
22:31:52  66  ,aud_g18
22:31:52  67  ,aud_g19
22:31:52  68  ,aud_g20
22:31:52  69  ,aud_g21
22:31:52  70  ,aud_g22
22:31:52  71  ,aud_g23
22:31:52  72  ,aud_g24
22:31:52  73  ,aud_g25
22:31:52  74  ,aud_g26
22:31:52  75  ,aud_g27
22:31:52  76  ,aud_g28
22:31:52  77  ,aud_g29
22:31:52  78  ,aud_g30
22:31:52  79  ,aud_g31
22:31:52  80  ,aud_g32
22:31:52  81  ,aud_g33
22:31:52  82  ,aud_g34
22:31:52  83  ,aud_g35
22:31:52  84  ,aud_g36
22:31:52  85  ,aud_g37
22:31:52  86  ,aud_g38
22:31:52  87  ,aud_g39
22:31:52  88  ,aud_g40
22:31:52  89  ,aud_g41
22:31:52  90  ,gbp_g00
22:31:52  91  ,gbp_g01
22:31:52  92  ,gbp_g02
22:31:52  93  ,gbp_g03
22:31:52  94  ,gbp_g04
22:31:52  95  ,gbp_g05
22:31:52  96  ,gbp_g06
22:31:52  97  ,gbp_g07
22:31:52  98  ,gbp_g08
22:31:52  99  ,gbp_g09
22:31:52 100  ,gbp_g10
22:31:52 101  ,gbp_g11
22:31:52 102  ,gbp_g12
22:31:52 103  ,gbp_g13
22:31:52 104  ,gbp_g14
22:31:52 105  ,gbp_g15
22:31:52 106  ,gbp_g16
22:31:52 107  ,gbp_g17
22:31:52 108  ,gbp_g18
22:31:52 109  ,gbp_g19
22:31:52 110  ,gbp_g20
22:31:52 111  ,gbp_g21
22:31:52 112  ,gbp_g22
22:31:52 113  ,gbp_g23
22:31:52 114  ,gbp_g24
22:31:52 115  ,gbp_g25
22:31:52 116  ,gbp_g26
22:31:52 117  ,gbp_g27
22:31:52 118  ,gbp_g28
22:31:52 119  ,gbp_g29
22:31:52 120  ,gbp_g30
22:31:52 121  ,gbp_g31
22:31:52 122  ,gbp_g32
22:31:52 123  ,gbp_g33
22:31:52 124  ,gbp_g34
22:31:52 125  ,gbp_g35
22:31:52 126  ,gbp_g36
22:31:52 127  ,gbp_g37
22:31:52 128  ,gbp_g38
22:31:52 129  ,gbp_g39
22:31:52 130  ,gbp_g40
22:31:52 131  ,gbp_g41
22:31:52 132  ,jpy_g00
22:31:52 133  ,jpy_g01
22:31:52 134  ,jpy_g02
22:31:52 135  ,jpy_g03
22:31:52 136  ,jpy_g04
22:31:52 137  ,jpy_g05
22:31:52 138  ,jpy_g06
22:31:52 139  ,jpy_g07
22:31:52 140  ,jpy_g08
22:31:52 141  ,jpy_g09
22:31:52 142  ,jpy_g10
22:31:52 143  ,jpy_g11
22:31:52 144  ,jpy_g12
22:31:52 145  ,jpy_g13
22:31:52 146  ,jpy_g14
22:31:52 147  ,jpy_g15
22:31:52 148  ,jpy_g16
22:31:52 149  ,jpy_g17
22:31:52 150  ,jpy_g18
22:31:52 151  ,jpy_g19
22:31:52 152  ,jpy_g20
22:31:52 153  ,jpy_g21
22:31:52 154  ,jpy_g22
22:31:52 155  ,jpy_g23
22:31:52 156  ,jpy_g24
22:31:52 157  ,jpy_g25
22:31:52 158  ,jpy_g26
22:31:52 159  ,jpy_g27
22:31:52 160  ,jpy_g28
22:31:52 161  ,jpy_g29
22:31:52 162  ,jpy_g30
22:31:52 163  ,jpy_g31
22:31:52 164  ,jpy_g32
22:31:52 165  ,jpy_g33
22:31:52 166  ,jpy_g34
22:31:52 167  ,jpy_g35
22:31:52 168  ,jpy_g36
22:31:52 169  ,jpy_g37
22:31:52 170  ,jpy_g38
22:31:52 171  ,jpy_g39
22:31:52 172  ,jpy_g40
22:31:52 173  ,jpy_g41
22:31:52 174  ,cad_g00
22:31:52 175  ,cad_g01
22:31:52 176  ,cad_g02
22:31:52 177  ,cad_g03
22:31:52 178  ,cad_g04
22:31:52 179  ,cad_g05
22:31:52 180  ,cad_g06
22:31:52 181  ,cad_g07
22:31:52 182  ,cad_g08
22:31:52 183  ,cad_g09
22:31:52 184  ,cad_g10
22:31:52 185  ,cad_g11
22:31:52 186  ,cad_g12
22:31:52 187  ,cad_g13
22:31:52 188  ,cad_g14
22:31:52 189  ,cad_g15
22:31:52 190  ,cad_g16
22:31:52 191  ,cad_g17
22:31:52 192  ,cad_g18
22:31:52 193  ,cad_g19
22:31:52 194  ,cad_g20
22:31:52 195  ,cad_g21
22:31:52 196  ,cad_g22
22:31:52 197  ,cad_g23
22:31:52 198  ,cad_g24
22:31:52 199  ,cad_g25
22:31:52 200  ,cad_g26
22:31:52 201  ,cad_g27
22:31:52 202  ,cad_g28
22:31:52 203  ,cad_g29
22:31:52 204  ,cad_g30
22:31:52 205  ,cad_g31
22:31:52 206  ,cad_g32
22:31:52 207  ,cad_g33
22:31:52 208  ,cad_g34
22:31:52 209  ,cad_g35
22:31:52 210  ,cad_g36
22:31:52 211  ,cad_g37
22:31:52 212  ,cad_g38
22:31:52 213  ,cad_g39
22:31:52 214  ,cad_g40
22:31:52 215  ,cad_g41
22:31:52 216  ,chf_g00
22:31:52 217  ,chf_g01
22:31:52 218  ,chf_g02
22:31:52 219  ,chf_g03
22:31:52 220  ,chf_g04
22:31:52 221  ,chf_g05
22:31:52 222  ,chf_g06
22:31:52 223  ,chf_g07
22:31:52 224  ,chf_g08
22:31:52 225  ,chf_g09
22:31:52 226  ,chf_g10
22:31:52 227  ,chf_g11
22:31:52 228  ,chf_g12
22:31:52 229  ,chf_g13
22:31:52 230  ,chf_g14
22:31:52 231  ,chf_g15
22:31:52 232  ,chf_g16
22:31:52 233  ,chf_g17
22:31:52 234  ,chf_g18
22:31:52 235  ,chf_g19
22:31:52 236  ,chf_g20
22:31:52 237  ,chf_g21
22:31:52 238  ,chf_g22
22:31:52 239  ,chf_g23
22:31:52 240  ,chf_g24
22:31:52 241  ,chf_g25
22:31:52 242  ,chf_g26
22:31:52 243  ,chf_g27
22:31:52 244  ,chf_g28
22:31:52 245  ,chf_g29
22:31:52 246  ,chf_g30
22:31:52 247  ,chf_g31
22:31:52 248  ,chf_g32
22:31:52 249  ,chf_g33
22:31:52 250  ,chf_g34
22:31:52 251  ,chf_g35
22:31:52 252  ,chf_g36
22:31:52 253  ,chf_g37
22:31:52 254  ,chf_g38
22:31:52 255  ,chf_g39
22:31:52 256  ,chf_g40
22:31:52 257  ,chf_g41
22:31:52 258  FROM aud_ms6 m
22:31:52 259  WHERE m.ydate = '&1'||' '||'&2'
22:31:52 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'22:20:00'

View created.

Elapsed: 00:00:00.17
22:31:52 SQL> 
22:31:52 SQL> -- rpt
22:31:52 SQL> -- We should see just 1 row:
22:31:52 SQL> 
22:31:52 SQL> SELECT COUNT(prdate) FROM sme
22:31:52   2  
22:31:52 SQL> -- Build the model:
22:31:52 SQL> CREATE OR REPLACE VIEW bme AS
22:31:52   2  SELECT
22:31:52   3  'aud'||m.ydate prdate
22:31:52   4  ,gatt
22:31:52   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:31:52   6  ,eur_g00
22:31:52   7  ,eur_g01
22:31:52   8  ,eur_g02
22:31:52   9  ,eur_g03
22:31:52  10  ,eur_g04
22:31:52  11  ,eur_g05
22:31:52  12  ,eur_g06
22:31:52  13  ,eur_g07
22:31:52  14  ,eur_g08
22:31:52  15  ,eur_g09
22:31:52  16  ,eur_g10
22:31:52  17  ,eur_g11
22:31:52  18  ,eur_g12
22:31:52  19  ,eur_g13
22:31:52  20  ,eur_g14
22:31:52  21  ,eur_g15
22:31:52  22  ,eur_g16
22:31:52  23  ,eur_g17
22:31:52  24  ,eur_g18
22:31:52  25  ,eur_g19
22:31:52  26  ,eur_g20
22:31:52  27  ,eur_g21
22:31:52  28  ,eur_g22
22:31:52  29  ,eur_g23
22:31:52  30  ,eur_g24
22:31:52  31  ,eur_g25
22:31:52  32  ,eur_g26
22:31:52  33  ,eur_g27
22:31:52  34  ,eur_g28
22:31:52  35  ,eur_g29
22:31:52  36  ,eur_g30
22:31:52  37  ,eur_g31
22:31:52  38  ,eur_g32
22:31:52  39  ,eur_g33
22:31:52  40  ,eur_g34
22:31:52  41  ,eur_g35
22:31:52  42  ,eur_g36
22:31:52  43  ,eur_g37
22:31:52  44  ,eur_g38
22:31:52  45  ,eur_g39
22:31:52  46  ,eur_g40
22:31:52  47  ,eur_g41
22:31:52  48  ,aud_g00
22:31:52  49  ,aud_g01
22:31:52  50  ,aud_g02
22:31:52  51  ,aud_g03
22:31:52  52  ,aud_g04
22:31:52  53  ,aud_g05
22:31:52  54  ,aud_g06
22:31:52  55  ,aud_g07
22:31:52  56  ,aud_g08
22:31:52  57  ,aud_g09
22:31:52  58  ,aud_g10
22:31:52  59  ,aud_g11
22:31:52  60  ,aud_g12
22:31:52  61  ,aud_g13
22:31:52  62  ,aud_g14
22:31:52  63  ,aud_g15
22:31:52  64  ,aud_g16
22:31:52  65  ,aud_g17
22:31:52  66  ,aud_g18
22:31:52  67  ,aud_g19
22:31:52  68  ,aud_g20
22:31:52  69  ,aud_g21
22:31:52  70  ,aud_g22
22:31:52  71  ,aud_g23
22:31:52  72  ,aud_g24
22:31:52  73  ,aud_g25
22:31:52  74  ,aud_g26
22:31:52  75  ,aud_g27
22:31:52  76  ,aud_g28
22:31:52  77  ,aud_g29
22:31:52  78  ,aud_g30
22:31:52  79  ,aud_g31
22:31:52  80  ,aud_g32
22:31:52  81  ,aud_g33
22:31:52  82  ,aud_g34
22:31:52  83  ,aud_g35
22:31:52  84  ,aud_g36
22:31:52  85  ,aud_g37
22:31:52  86  ,aud_g38
22:31:52  87  ,aud_g39
22:31:52  88  ,aud_g40
22:31:52  89  ,aud_g41
22:31:52  90  ,gbp_g00
22:31:52  91  ,gbp_g01
22:31:52  92  ,gbp_g02
22:31:52  93  ,gbp_g03
22:31:52  94  ,gbp_g04
22:31:52  95  ,gbp_g05
22:31:52  96  ,gbp_g06
22:31:52  97  ,gbp_g07
22:31:52  98  ,gbp_g08
22:31:52  99  ,gbp_g09
22:31:52 100  ,gbp_g10
22:31:52 101  ,gbp_g11
22:31:52 102  ,gbp_g12
22:31:52 103  ,gbp_g13
22:31:52 104  ,gbp_g14
22:31:52 105  ,gbp_g15
22:31:52 106  ,gbp_g16
22:31:52 107  ,gbp_g17
22:31:52 108  ,gbp_g18
22:31:52 109  ,gbp_g19
22:31:52 110  ,gbp_g20
22:31:52 111  ,gbp_g21
22:31:52 112  ,gbp_g22
22:31:52 113  ,gbp_g23
22:31:52 114  ,gbp_g24
22:31:52 115  ,gbp_g25
22:31:52 116  ,gbp_g26
22:31:52 117  ,gbp_g27
22:31:52 118  ,gbp_g28
22:31:52 119  ,gbp_g29
22:31:52 120  ,gbp_g30
22:31:52 121  ,gbp_g31
22:31:52 122  ,gbp_g32
22:31:52 123  ,gbp_g33
22:31:52 124  ,gbp_g34
22:31:52 125  ,gbp_g35
22:31:52 126  ,gbp_g36
22:31:52 127  ,gbp_g37
22:31:52 128  ,gbp_g38
22:31:52 129  ,gbp_g39
22:31:52 130  ,gbp_g40
22:31:52 131  ,gbp_g41
22:31:52 132  ,jpy_g00
22:31:52 133  ,jpy_g01
22:31:52 134  ,jpy_g02
22:31:52 135  ,jpy_g03
22:31:52 136  ,jpy_g04
22:31:52 137  ,jpy_g05
22:31:52 138  ,jpy_g06
22:31:52 139  ,jpy_g07
22:31:52 140  ,jpy_g08
22:31:52 141  ,jpy_g09
22:31:52 142  ,jpy_g10
22:31:52 143  ,jpy_g11
22:31:52 144  ,jpy_g12
22:31:52 145  ,jpy_g13
22:31:52 146  ,jpy_g14
22:31:52 147  ,jpy_g15
22:31:52 148  ,jpy_g16
22:31:52 149  ,jpy_g17
22:31:52 150  ,jpy_g18
22:31:52 151  ,jpy_g19
22:31:52 152  ,jpy_g20
22:31:52 153  ,jpy_g21
22:31:52 154  ,jpy_g22
22:31:52 155  ,jpy_g23
22:31:52 156  ,jpy_g24
22:31:52 157  ,jpy_g25
22:31:52 158  ,jpy_g26
22:31:52 159  ,jpy_g27
22:31:52 160  ,jpy_g28
22:31:52 161  ,jpy_g29
22:31:52 162  ,jpy_g30
22:31:52 163  ,jpy_g31
22:31:52 164  ,jpy_g32
22:31:52 165  ,jpy_g33
22:31:52 166  ,jpy_g34
22:31:52 167  ,jpy_g35
22:31:52 168  ,jpy_g36
22:31:52 169  ,jpy_g37
22:31:52 170  ,jpy_g38
22:31:52 171  ,jpy_g39
22:31:52 172  ,jpy_g40
22:31:52 173  ,jpy_g41
22:31:52 174  ,cad_g00
22:31:52 175  ,cad_g01
22:31:52 176  ,cad_g02
22:31:52 177  ,cad_g03
22:31:52 178  ,cad_g04
22:31:52 179  ,cad_g05
22:31:52 180  ,cad_g06
22:31:52 181  ,cad_g07
22:31:52 182  ,cad_g08
22:31:52 183  ,cad_g09
22:31:52 184  ,cad_g10
22:31:52 185  ,cad_g11
22:31:52 186  ,cad_g12
22:31:52 187  ,cad_g13
22:31:52 188  ,cad_g14
22:31:52 189  ,cad_g15
22:31:52 190  ,cad_g16
22:31:52 191  ,cad_g17
22:31:52 192  ,cad_g18
22:31:52 193  ,cad_g19
22:31:52 194  ,cad_g20
22:31:52 195  ,cad_g21
22:31:52 196  ,cad_g22
22:31:52 197  ,cad_g23
22:31:52 198  ,cad_g24
22:31:52 199  ,cad_g25
22:31:52 200  ,cad_g26
22:31:52 201  ,cad_g27
22:31:52 202  ,cad_g28
22:31:52 203  ,cad_g29
22:31:52 204  ,cad_g30
22:31:52 205  ,cad_g31
22:31:52 206  ,cad_g32
22:31:52 207  ,cad_g33
22:31:52 208  ,cad_g34
22:31:52 209  ,cad_g35
22:31:52 210  ,cad_g36
22:31:52 211  ,cad_g37
22:31:52 212  ,cad_g38
22:31:52 213  ,cad_g39
22:31:52 214  ,cad_g40
22:31:52 215  ,cad_g41
22:31:52 216  ,chf_g00
22:31:52 217  ,chf_g01
22:31:52 218  ,chf_g02
22:31:52 219  ,chf_g03
22:31:52 220  ,chf_g04
22:31:52 221  ,chf_g05
22:31:52 222  ,chf_g06
22:31:52 223  ,chf_g07
22:31:52 224  ,chf_g08
22:31:52 225  ,chf_g09
22:31:52 226  ,chf_g10
22:31:52 227  ,chf_g11
22:31:52 228  ,chf_g12
22:31:52 229  ,chf_g13
22:31:52 230  ,chf_g14
22:31:52 231  ,chf_g15
22:31:52 232  ,chf_g16
22:31:52 233  ,chf_g17
22:31:52 234  ,chf_g18
22:31:52 235  ,chf_g19
22:31:52 236  ,chf_g20
22:31:52 237  ,chf_g21
22:31:52 238  ,chf_g22
22:31:52 239  ,chf_g23
22:31:52 240  ,chf_g24
22:31:52 241  ,chf_g25
22:31:52 242  ,chf_g26
22:31:52 243  ,chf_g27
22:31:52 244  ,chf_g28
22:31:52 245  ,chf_g29
22:31:52 246  ,chf_g30
22:31:52 247  ,chf_g31
22:31:52 248  ,chf_g32
22:31:52 249  ,chf_g33
22:31:52 250  ,chf_g34
22:31:52 251  ,chf_g35
22:31:52 252  ,chf_g36
22:31:52 253  ,chf_g37
22:31:52 254  ,chf_g38
22:31:52 255  ,chf_g39
22:31:52 256  ,chf_g40
22:31:52 257  ,chf_g41
22:31:52 258  FROM aud_ms6 m
22:31:52 259  WHERE gatt IN('nup','up')
22:31:52 260  AND 1+m.ydate < '&1'||' '||'&2'
22:31:52 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'22:20:00'

View created.

Elapsed: 00:00:00.12
22:31:52 SQL> 
22:31:52 SQL> -- rpt
22:31:52 SQL> 
22:31:52 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
22:31:52   2  
22:31:52 SQL> SELECT MAX(prdate) FROM bme
22:31:52   2  
22:31:52 SQL> -- Now build model from bme and score sme
22:31:52 SQL> @score1.sql
22:31:52 SQL> -- score1.sql
22:31:52 SQL> 
22:31:52 SQL> -- Does the 1st SVM score
22:31:52 SQL> 
22:31:52 SQL> -- Fill up svmc_apply_prep
22:31:52 SQL> @score.sql
22:31:52 SQL> --
22:31:52 SQL> -- score.sql
22:31:52 SQL> --
22:31:52 SQL> 
22:31:52 SQL> -- usage: score.sql
22:31:52 SQL> 
22:31:52 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:31:52 SQL> 
22:31:52 SQL> DEFINE target	= 'gatt'
22:31:52 SQL> DEFINE model_name = 'forex15'
22:31:52 SQL> DEFINE bldtable	= 'bme'
22:31:52 SQL> DEFINE scoretable = 'sme'
22:31:52 SQL> DEFINE case_id	= 'prdate'
22:31:52 SQL> 
22:31:52 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:31:52 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:31:52 SQL> 
22:31:52 SQL> -- Builds an SVM model using pl/sql.
22:31:52 SQL> 
22:31:52 SQL> -----------------------------------------------------------------------
22:31:52 SQL> --			    BUILD THE MODEL
22:31:52 SQL> -----------------------------------------------------------------------
22:31:52 SQL> 
22:31:52 SQL> -- Cleanup old build data preparation objects for repeat runs
22:31:52 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
22:31:52 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
22:31:52 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
22:31:52 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
22:31:52 SQL> 
22:31:52 SQL> 
22:31:52 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:31:52 SQL> --
22:31:52 SQL> -- DROP	TABLE svmc_settings ;
22:31:52 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:31:52 SQL> -- DELETE svmc_settings;
22:31:52 SQL> 
22:31:52 SQL> -- The default classification algorithm is Naive Bayes. So override
22:31:52 SQL> -- this choice to SVM using a settings table.
22:31:52 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:31:52 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:31:52 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:31:52 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:31:52 SQL> -- models.
22:31:52 SQL> --
22:31:52 SQL> 
22:31:52 SQL> -- Do this once and then comment it out.
22:31:52 SQL> -- That makes script go faster.
22:31:52 SQL> -- BEGIN
22:31:52 SQL> -- -- Populate settings table
22:31:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:31:52 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:31:52 SQL> --
22:31:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:31:52 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:31:52 SQL> --
22:31:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:31:52 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:31:52 SQL> --   COMMIT;
22:31:52 SQL> -- END;
22:31:52 SQL> -- /
22:31:52 SQL> 
22:31:52 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:31:52 SQL> 
22:31:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:31:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:31:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:31:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:31:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:31:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:31:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:31:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:31:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:31:52 SQL> 
22:31:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:31:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:31:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:31:52 SQL> 
22:31:52 SQL> --------------------------------
22:31:52 SQL> -- PREPARE BUILD (TRAINING) DATA
22:31:52 SQL> --
22:31:52 SQL> 
22:31:52 SQL> -- 1. Missing Value treatment for all Predictors and
22:31:52 SQL> -- 2. Outlier Treatment and
22:31:52 SQL> -- 3. Normalization are performed below.
22:31:52 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:31:52 SQL> --    normalized here.
22:31:52 SQL> 
22:31:52 SQL> BEGIN
22:31:52   2  	-- Perform missing value treatment for all predictors
22:31:52   3  	-- create miss tables
22:31:52   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:31:52   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:31:52   6  
22:31:52   7  	-- populate miss tables
22:31:52   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:31:52   9  	  miss_table_name => 'svmc_miss_num',
22:31:52  10  	  data_table_name => '&bldtable',
22:31:52  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:31:52  12  
22:31:52  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:31:52  14  	  miss_table_name => 'svmc_miss_cat',
22:31:52  15  	  data_table_name => '&bldtable',
22:31:52  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:31:52  17  
22:31:52  18  	-- xform input data to replace missing values
22:31:52  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:31:52  20  	  miss_table_name => 'svmc_miss_num',
22:31:52  21  	  data_table_name => '&bldtable',
22:31:52  22  	  xform_view_name => 'xformed_build_miss_num');
22:31:52  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:31:52  24  	  miss_table_name => 'svmc_miss_cat',
22:31:52  25  	  data_table_name => '&bldtable',
22:31:52  26  	  xform_view_name => 'xformed_build_miss_cat');
22:31:52  27  
22:31:52  28  	-- Perform outlier treatment.
22:31:52  29  	-- create clip table
22:31:52  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:31:52  31  
22:31:52  32  	-- populate clip table
22:31:52  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:31:52  34  	  clip_table_name => 'svmc_clip',
22:31:52  35  	  data_table_name => '&bldtable',
22:31:52  36  	  tail_frac	  => 0.025,
22:31:52  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:31:52  38  
22:31:52  39  	-- xform input data to winsorized data
22:31:52  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:31:52  41  	  clip_table_name => 'svmc_clip',
22:31:52  42  	  data_table_name => '&bldtable',
22:31:52  43  	  xform_view_name => 'svmc_winsor');
22:31:52  44  
22:31:52  45  	-- create normalization table
22:31:52  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:31:52  47  
22:31:52  48  	-- populate normalization table based on winsorized data
22:31:52  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:31:52  50  	  norm_table_name => 'svmc_norm',
22:31:52  51  	  data_table_name => 'svmc_winsor',
22:31:52  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:31:52  53  
22:31:52  54  	-- normalize the original data
22:31:52  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:31:52  56  	  norm_table_name => 'svmc_norm',
22:31:52  57  	  data_table_name => '&bldtable',
22:31:52  58  	  xform_view_name => 'svmc_build_prep');
22:31:52  59  END;
22:31:52  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.55
22:32:11 SQL> 
22:32:11 SQL> ---------------------
22:32:11 SQL> -- CREATE A NEW MODEL
22:32:11 SQL> --
22:32:11 SQL> -- Cleanup old model with the same name for repeat runs
22:32:11 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:32:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:32:11   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
22:32:12 SQL> 
22:32:12 SQL> -- Build a new SVM Model
22:32:12 SQL> BEGIN
22:32:12   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:32:12   3  	  model_name	      => '&model_name',
22:32:12   4  	  mining_function     => dbms_data_mining.classification,
22:32:12   5  	  data_table_name     => 'svmc_build_prep',
22:32:12   6  	  case_id_column_name => '&case_id',
22:32:12   7  	  target_column_name  => '&target',
22:32:12   8  	  settings_table_name => 'svmc_settings');
22:32:12   9  END;
22:32:12  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.21
22:32:38 SQL> 
22:32:38 SQL> -----------------------------------------------------------------------
22:32:38 SQL> --			       APPLY/score THE MODEL
22:32:38 SQL> -----------------------------------------------------------------------
22:32:38 SQL> 
22:32:38 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:32:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:32:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:32:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:32:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:32:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:32:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:32:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:32:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:32:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:32:39 SQL> -----------------------
22:32:39 SQL> -- PREPARE SCORING DATA
22:32:39 SQL> --
22:32:39 SQL> -- If the data for model creation has been prepared, then the data
22:32:39 SQL> -- to be scored using the model must be prepared in the same manner
22:32:39 SQL> -- in order to obtain meaningful results.
22:32:39 SQL> --
22:32:39 SQL> -- 1. Missing Value treatment for all Predictors and
22:32:39 SQL> -- 2. Normalization
22:32:39 SQL> -- No outlier treatment will be performed during test and apply. The
22:32:39 SQL> -- normalization step is sufficient, since the normalization parameters
22:32:39 SQL> -- already capture the effects of outlier treatment done with build data.
22:32:39 SQL> --
22:32:39 SQL> BEGIN
22:32:39   2  	-- Xform Test data to replace missing values
22:32:39   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:32:39   4  	  miss_table_name => 'svmc_miss_num',
22:32:39   5  	  data_table_name => '&scoretable',
22:32:39   6  	  xform_view_name => 'xformed_apply_miss_num');
22:32:39   7  
22:32:39   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:32:39   9  	  miss_table_name => 'svmc_miss_cat',
22:32:39  10  	  data_table_name => '&scoretable',
22:32:39  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:32:39  12  
22:32:39  13  	-- Normalize the data to be scored
22:32:39  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:32:39  15  	  norm_table_name => 'svmc_norm',
22:32:39  16  	  data_table_name => '&scoretable',
22:32:39  17  	  xform_view_name => 'svmc_apply_prep');
22:32:39  18  END;
22:32:39  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.27
22:32:40 SQL> 
22:32:40 SQL> -- Use same model_name used in score.sql
22:32:40 SQL> DEFINE model_name = 'forex15'
22:32:40 SQL> 
22:32:40 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
22:32:40 SQL> 
22:32:40 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
22:32:40 SQL> 
22:32:40 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
22:32:40   2  SELECT
22:32:40   3  prdate
22:32:40   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:32:40   5  ,sysdate
22:32:40   6  ,SUBSTR(prdate,1,3)pair
22:32:40   7  ,SUBSTR(prdate,4,19)ydate
22:32:40   8  FROM svmc_apply_prep
22:32:40   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
22:32:40 SQL> @aud_score1day_gattn.sql	2011-01-05 22:15:00
22:32:40 SQL> --
22:32:40 SQL> -- aud_score1day_gattn.sql
22:32:40 SQL> --
22:32:40 SQL> 
22:32:40 SQL> CREATE OR REPLACE VIEW sme AS
22:32:40   2  SELECT
22:32:40   3  'aud'||m.ydate prdate
22:32:40   4  ,NULL gattn
22:32:40   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:32:40   6  ,eur_g00
22:32:40   7  ,eur_g01
22:32:40   8  ,eur_g02
22:32:40   9  ,eur_g03
22:32:40  10  ,eur_g04
22:32:40  11  ,eur_g05
22:32:40  12  ,eur_g06
22:32:40  13  ,eur_g07
22:32:40  14  ,eur_g08
22:32:40  15  ,eur_g09
22:32:40  16  ,eur_g10
22:32:40  17  ,eur_g11
22:32:40  18  ,eur_g12
22:32:40  19  ,eur_g13
22:32:40  20  ,eur_g14
22:32:40  21  ,eur_g15
22:32:40  22  ,eur_g16
22:32:40  23  ,eur_g17
22:32:40  24  ,eur_g18
22:32:40  25  ,eur_g19
22:32:40  26  ,eur_g20
22:32:40  27  ,eur_g21
22:32:40  28  ,eur_g22
22:32:40  29  ,eur_g23
22:32:40  30  ,eur_g24
22:32:40  31  ,eur_g25
22:32:40  32  ,eur_g26
22:32:40  33  ,eur_g27
22:32:40  34  ,eur_g28
22:32:40  35  ,eur_g29
22:32:40  36  ,eur_g30
22:32:40  37  ,eur_g31
22:32:40  38  ,eur_g32
22:32:40  39  ,eur_g33
22:32:40  40  ,eur_g34
22:32:40  41  ,eur_g35
22:32:40  42  ,eur_g36
22:32:40  43  ,eur_g37
22:32:40  44  ,eur_g38
22:32:40  45  ,eur_g39
22:32:40  46  ,eur_g40
22:32:40  47  ,eur_g41
22:32:40  48  ,aud_g00
22:32:40  49  ,aud_g01
22:32:40  50  ,aud_g02
22:32:40  51  ,aud_g03
22:32:40  52  ,aud_g04
22:32:40  53  ,aud_g05
22:32:40  54  ,aud_g06
22:32:40  55  ,aud_g07
22:32:40  56  ,aud_g08
22:32:40  57  ,aud_g09
22:32:40  58  ,aud_g10
22:32:40  59  ,aud_g11
22:32:40  60  ,aud_g12
22:32:40  61  ,aud_g13
22:32:40  62  ,aud_g14
22:32:40  63  ,aud_g15
22:32:40  64  ,aud_g16
22:32:40  65  ,aud_g17
22:32:40  66  ,aud_g18
22:32:40  67  ,aud_g19
22:32:40  68  ,aud_g20
22:32:40  69  ,aud_g21
22:32:40  70  ,aud_g22
22:32:40  71  ,aud_g23
22:32:40  72  ,aud_g24
22:32:40  73  ,aud_g25
22:32:40  74  ,aud_g26
22:32:40  75  ,aud_g27
22:32:40  76  ,aud_g28
22:32:40  77  ,aud_g29
22:32:40  78  ,aud_g30
22:32:40  79  ,aud_g31
22:32:40  80  ,aud_g32
22:32:40  81  ,aud_g33
22:32:40  82  ,aud_g34
22:32:40  83  ,aud_g35
22:32:40  84  ,aud_g36
22:32:40  85  ,aud_g37
22:32:40  86  ,aud_g38
22:32:40  87  ,aud_g39
22:32:40  88  ,aud_g40
22:32:40  89  ,aud_g41
22:32:40  90  ,gbp_g00
22:32:40  91  ,gbp_g01
22:32:40  92  ,gbp_g02
22:32:40  93  ,gbp_g03
22:32:40  94  ,gbp_g04
22:32:40  95  ,gbp_g05
22:32:40  96  ,gbp_g06
22:32:40  97  ,gbp_g07
22:32:40  98  ,gbp_g08
22:32:40  99  ,gbp_g09
22:32:40 100  ,gbp_g10
22:32:40 101  ,gbp_g11
22:32:40 102  ,gbp_g12
22:32:40 103  ,gbp_g13
22:32:40 104  ,gbp_g14
22:32:40 105  ,gbp_g15
22:32:40 106  ,gbp_g16
22:32:40 107  ,gbp_g17
22:32:40 108  ,gbp_g18
22:32:40 109  ,gbp_g19
22:32:40 110  ,gbp_g20
22:32:40 111  ,gbp_g21
22:32:40 112  ,gbp_g22
22:32:40 113  ,gbp_g23
22:32:40 114  ,gbp_g24
22:32:40 115  ,gbp_g25
22:32:40 116  ,gbp_g26
22:32:40 117  ,gbp_g27
22:32:40 118  ,gbp_g28
22:32:40 119  ,gbp_g29
22:32:40 120  ,gbp_g30
22:32:40 121  ,gbp_g31
22:32:40 122  ,gbp_g32
22:32:40 123  ,gbp_g33
22:32:40 124  ,gbp_g34
22:32:40 125  ,gbp_g35
22:32:40 126  ,gbp_g36
22:32:40 127  ,gbp_g37
22:32:40 128  ,gbp_g38
22:32:40 129  ,gbp_g39
22:32:40 130  ,gbp_g40
22:32:40 131  ,gbp_g41
22:32:40 132  ,jpy_g00
22:32:40 133  ,jpy_g01
22:32:40 134  ,jpy_g02
22:32:40 135  ,jpy_g03
22:32:40 136  ,jpy_g04
22:32:40 137  ,jpy_g05
22:32:40 138  ,jpy_g06
22:32:40 139  ,jpy_g07
22:32:40 140  ,jpy_g08
22:32:40 141  ,jpy_g09
22:32:40 142  ,jpy_g10
22:32:40 143  ,jpy_g11
22:32:40 144  ,jpy_g12
22:32:40 145  ,jpy_g13
22:32:40 146  ,jpy_g14
22:32:40 147  ,jpy_g15
22:32:40 148  ,jpy_g16
22:32:40 149  ,jpy_g17
22:32:40 150  ,jpy_g18
22:32:40 151  ,jpy_g19
22:32:40 152  ,jpy_g20
22:32:40 153  ,jpy_g21
22:32:40 154  ,jpy_g22
22:32:40 155  ,jpy_g23
22:32:40 156  ,jpy_g24
22:32:40 157  ,jpy_g25
22:32:40 158  ,jpy_g26
22:32:40 159  ,jpy_g27
22:32:40 160  ,jpy_g28
22:32:40 161  ,jpy_g29
22:32:40 162  ,jpy_g30
22:32:40 163  ,jpy_g31
22:32:40 164  ,jpy_g32
22:32:40 165  ,jpy_g33
22:32:40 166  ,jpy_g34
22:32:40 167  ,jpy_g35
22:32:40 168  ,jpy_g36
22:32:40 169  ,jpy_g37
22:32:40 170  ,jpy_g38
22:32:40 171  ,jpy_g39
22:32:40 172  ,jpy_g40
22:32:40 173  ,jpy_g41
22:32:40 174  ,cad_g00
22:32:40 175  ,cad_g01
22:32:40 176  ,cad_g02
22:32:40 177  ,cad_g03
22:32:40 178  ,cad_g04
22:32:40 179  ,cad_g05
22:32:40 180  ,cad_g06
22:32:40 181  ,cad_g07
22:32:40 182  ,cad_g08
22:32:40 183  ,cad_g09
22:32:40 184  ,cad_g10
22:32:40 185  ,cad_g11
22:32:40 186  ,cad_g12
22:32:40 187  ,cad_g13
22:32:40 188  ,cad_g14
22:32:40 189  ,cad_g15
22:32:40 190  ,cad_g16
22:32:40 191  ,cad_g17
22:32:40 192  ,cad_g18
22:32:40 193  ,cad_g19
22:32:40 194  ,cad_g20
22:32:40 195  ,cad_g21
22:32:40 196  ,cad_g22
22:32:40 197  ,cad_g23
22:32:40 198  ,cad_g24
22:32:40 199  ,cad_g25
22:32:40 200  ,cad_g26
22:32:40 201  ,cad_g27
22:32:40 202  ,cad_g28
22:32:40 203  ,cad_g29
22:32:40 204  ,cad_g30
22:32:40 205  ,cad_g31
22:32:40 206  ,cad_g32
22:32:40 207  ,cad_g33
22:32:40 208  ,cad_g34
22:32:40 209  ,cad_g35
22:32:40 210  ,cad_g36
22:32:40 211  ,cad_g37
22:32:40 212  ,cad_g38
22:32:40 213  ,cad_g39
22:32:40 214  ,cad_g40
22:32:40 215  ,cad_g41
22:32:40 216  ,chf_g00
22:32:40 217  ,chf_g01
22:32:40 218  ,chf_g02
22:32:40 219  ,chf_g03
22:32:40 220  ,chf_g04
22:32:40 221  ,chf_g05
22:32:40 222  ,chf_g06
22:32:40 223  ,chf_g07
22:32:40 224  ,chf_g08
22:32:40 225  ,chf_g09
22:32:40 226  ,chf_g10
22:32:40 227  ,chf_g11
22:32:40 228  ,chf_g12
22:32:40 229  ,chf_g13
22:32:40 230  ,chf_g14
22:32:40 231  ,chf_g15
22:32:40 232  ,chf_g16
22:32:40 233  ,chf_g17
22:32:40 234  ,chf_g18
22:32:40 235  ,chf_g19
22:32:40 236  ,chf_g20
22:32:40 237  ,chf_g21
22:32:40 238  ,chf_g22
22:32:40 239  ,chf_g23
22:32:40 240  ,chf_g24
22:32:40 241  ,chf_g25
22:32:40 242  ,chf_g26
22:32:40 243  ,chf_g27
22:32:40 244  ,chf_g28
22:32:40 245  ,chf_g29
22:32:40 246  ,chf_g30
22:32:40 247  ,chf_g31
22:32:40 248  ,chf_g32
22:32:40 249  ,chf_g33
22:32:40 250  ,chf_g34
22:32:40 251  ,chf_g35
22:32:40 252  ,chf_g36
22:32:40 253  ,chf_g37
22:32:40 254  ,chf_g38
22:32:40 255  ,chf_g39
22:32:40 256  ,chf_g40
22:32:40 257  ,chf_g41
22:32:40 258  FROM aud_ms6 m
22:32:40 259  WHERE m.ydate = '&1'||' '||'&2'
22:32:40 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'22:15:00'

View created.

Elapsed: 00:00:00.13
22:32:40 SQL> 
22:32:40 SQL> -- rpt
22:32:40 SQL> -- We should see just 1 row:
22:32:40 SQL> 
22:32:40 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
22:32:40 SQL> 
22:32:40 SQL> -- Build the model:
22:32:40 SQL> CREATE OR REPLACE VIEW bme AS
22:32:40   2  SELECT
22:32:40   3  'aud'||m.ydate prdate
22:32:40   4  ,gattn
22:32:40   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:32:40   6  ,eur_g00
22:32:40   7  ,eur_g01
22:32:40   8  ,eur_g02
22:32:40   9  ,eur_g03
22:32:40  10  ,eur_g04
22:32:40  11  ,eur_g05
22:32:40  12  ,eur_g06
22:32:40  13  ,eur_g07
22:32:40  14  ,eur_g08
22:32:40  15  ,eur_g09
22:32:40  16  ,eur_g10
22:32:40  17  ,eur_g11
22:32:40  18  ,eur_g12
22:32:40  19  ,eur_g13
22:32:40  20  ,eur_g14
22:32:40  21  ,eur_g15
22:32:40  22  ,eur_g16
22:32:40  23  ,eur_g17
22:32:40  24  ,eur_g18
22:32:40  25  ,eur_g19
22:32:40  26  ,eur_g20
22:32:40  27  ,eur_g21
22:32:40  28  ,eur_g22
22:32:40  29  ,eur_g23
22:32:40  30  ,eur_g24
22:32:40  31  ,eur_g25
22:32:40  32  ,eur_g26
22:32:40  33  ,eur_g27
22:32:40  34  ,eur_g28
22:32:40  35  ,eur_g29
22:32:40  36  ,eur_g30
22:32:40  37  ,eur_g31
22:32:40  38  ,eur_g32
22:32:40  39  ,eur_g33
22:32:40  40  ,eur_g34
22:32:40  41  ,eur_g35
22:32:40  42  ,eur_g36
22:32:40  43  ,eur_g37
22:32:40  44  ,eur_g38
22:32:40  45  ,eur_g39
22:32:40  46  ,eur_g40
22:32:40  47  ,eur_g41
22:32:40  48  ,aud_g00
22:32:40  49  ,aud_g01
22:32:40  50  ,aud_g02
22:32:40  51  ,aud_g03
22:32:40  52  ,aud_g04
22:32:40  53  ,aud_g05
22:32:40  54  ,aud_g06
22:32:40  55  ,aud_g07
22:32:40  56  ,aud_g08
22:32:40  57  ,aud_g09
22:32:40  58  ,aud_g10
22:32:40  59  ,aud_g11
22:32:40  60  ,aud_g12
22:32:40  61  ,aud_g13
22:32:40  62  ,aud_g14
22:32:40  63  ,aud_g15
22:32:40  64  ,aud_g16
22:32:40  65  ,aud_g17
22:32:40  66  ,aud_g18
22:32:40  67  ,aud_g19
22:32:40  68  ,aud_g20
22:32:40  69  ,aud_g21
22:32:40  70  ,aud_g22
22:32:40  71  ,aud_g23
22:32:40  72  ,aud_g24
22:32:40  73  ,aud_g25
22:32:40  74  ,aud_g26
22:32:40  75  ,aud_g27
22:32:40  76  ,aud_g28
22:32:40  77  ,aud_g29
22:32:40  78  ,aud_g30
22:32:40  79  ,aud_g31
22:32:40  80  ,aud_g32
22:32:40  81  ,aud_g33
22:32:40  82  ,aud_g34
22:32:40  83  ,aud_g35
22:32:40  84  ,aud_g36
22:32:40  85  ,aud_g37
22:32:40  86  ,aud_g38
22:32:40  87  ,aud_g39
22:32:40  88  ,aud_g40
22:32:40  89  ,aud_g41
22:32:40  90  ,gbp_g00
22:32:40  91  ,gbp_g01
22:32:40  92  ,gbp_g02
22:32:40  93  ,gbp_g03
22:32:40  94  ,gbp_g04
22:32:40  95  ,gbp_g05
22:32:40  96  ,gbp_g06
22:32:40  97  ,gbp_g07
22:32:40  98  ,gbp_g08
22:32:40  99  ,gbp_g09
22:32:40 100  ,gbp_g10
22:32:40 101  ,gbp_g11
22:32:40 102  ,gbp_g12
22:32:40 103  ,gbp_g13
22:32:40 104  ,gbp_g14
22:32:40 105  ,gbp_g15
22:32:40 106  ,gbp_g16
22:32:40 107  ,gbp_g17
22:32:40 108  ,gbp_g18
22:32:40 109  ,gbp_g19
22:32:40 110  ,gbp_g20
22:32:40 111  ,gbp_g21
22:32:40 112  ,gbp_g22
22:32:40 113  ,gbp_g23
22:32:40 114  ,gbp_g24
22:32:40 115  ,gbp_g25
22:32:40 116  ,gbp_g26
22:32:40 117  ,gbp_g27
22:32:40 118  ,gbp_g28
22:32:40 119  ,gbp_g29
22:32:40 120  ,gbp_g30
22:32:40 121  ,gbp_g31
22:32:40 122  ,gbp_g32
22:32:40 123  ,gbp_g33
22:32:40 124  ,gbp_g34
22:32:40 125  ,gbp_g35
22:32:40 126  ,gbp_g36
22:32:40 127  ,gbp_g37
22:32:40 128  ,gbp_g38
22:32:40 129  ,gbp_g39
22:32:40 130  ,gbp_g40
22:32:40 131  ,gbp_g41
22:32:40 132  ,jpy_g00
22:32:40 133  ,jpy_g01
22:32:40 134  ,jpy_g02
22:32:40 135  ,jpy_g03
22:32:40 136  ,jpy_g04
22:32:40 137  ,jpy_g05
22:32:40 138  ,jpy_g06
22:32:40 139  ,jpy_g07
22:32:40 140  ,jpy_g08
22:32:40 141  ,jpy_g09
22:32:40 142  ,jpy_g10
22:32:40 143  ,jpy_g11
22:32:40 144  ,jpy_g12
22:32:40 145  ,jpy_g13
22:32:40 146  ,jpy_g14
22:32:40 147  ,jpy_g15
22:32:40 148  ,jpy_g16
22:32:40 149  ,jpy_g17
22:32:40 150  ,jpy_g18
22:32:40 151  ,jpy_g19
22:32:40 152  ,jpy_g20
22:32:40 153  ,jpy_g21
22:32:40 154  ,jpy_g22
22:32:40 155  ,jpy_g23
22:32:40 156  ,jpy_g24
22:32:40 157  ,jpy_g25
22:32:40 158  ,jpy_g26
22:32:40 159  ,jpy_g27
22:32:40 160  ,jpy_g28
22:32:40 161  ,jpy_g29
22:32:40 162  ,jpy_g30
22:32:40 163  ,jpy_g31
22:32:40 164  ,jpy_g32
22:32:40 165  ,jpy_g33
22:32:40 166  ,jpy_g34
22:32:40 167  ,jpy_g35
22:32:40 168  ,jpy_g36
22:32:40 169  ,jpy_g37
22:32:40 170  ,jpy_g38
22:32:40 171  ,jpy_g39
22:32:40 172  ,jpy_g40
22:32:40 173  ,jpy_g41
22:32:40 174  ,cad_g00
22:32:40 175  ,cad_g01
22:32:40 176  ,cad_g02
22:32:40 177  ,cad_g03
22:32:40 178  ,cad_g04
22:32:40 179  ,cad_g05
22:32:40 180  ,cad_g06
22:32:40 181  ,cad_g07
22:32:40 182  ,cad_g08
22:32:40 183  ,cad_g09
22:32:40 184  ,cad_g10
22:32:40 185  ,cad_g11
22:32:40 186  ,cad_g12
22:32:40 187  ,cad_g13
22:32:40 188  ,cad_g14
22:32:40 189  ,cad_g15
22:32:40 190  ,cad_g16
22:32:40 191  ,cad_g17
22:32:40 192  ,cad_g18
22:32:40 193  ,cad_g19
22:32:40 194  ,cad_g20
22:32:40 195  ,cad_g21
22:32:40 196  ,cad_g22
22:32:40 197  ,cad_g23
22:32:40 198  ,cad_g24
22:32:40 199  ,cad_g25
22:32:40 200  ,cad_g26
22:32:40 201  ,cad_g27
22:32:40 202  ,cad_g28
22:32:40 203  ,cad_g29
22:32:40 204  ,cad_g30
22:32:40 205  ,cad_g31
22:32:40 206  ,cad_g32
22:32:40 207  ,cad_g33
22:32:40 208  ,cad_g34
22:32:40 209  ,cad_g35
22:32:40 210  ,cad_g36
22:32:40 211  ,cad_g37
22:32:40 212  ,cad_g38
22:32:40 213  ,cad_g39
22:32:40 214  ,cad_g40
22:32:40 215  ,cad_g41
22:32:40 216  ,chf_g00
22:32:40 217  ,chf_g01
22:32:40 218  ,chf_g02
22:32:40 219  ,chf_g03
22:32:40 220  ,chf_g04
22:32:40 221  ,chf_g05
22:32:40 222  ,chf_g06
22:32:40 223  ,chf_g07
22:32:40 224  ,chf_g08
22:32:40 225  ,chf_g09
22:32:40 226  ,chf_g10
22:32:40 227  ,chf_g11
22:32:40 228  ,chf_g12
22:32:40 229  ,chf_g13
22:32:40 230  ,chf_g14
22:32:40 231  ,chf_g15
22:32:40 232  ,chf_g16
22:32:40 233  ,chf_g17
22:32:40 234  ,chf_g18
22:32:40 235  ,chf_g19
22:32:40 236  ,chf_g20
22:32:40 237  ,chf_g21
22:32:40 238  ,chf_g22
22:32:40 239  ,chf_g23
22:32:40 240  ,chf_g24
22:32:40 241  ,chf_g25
22:32:40 242  ,chf_g26
22:32:40 243  ,chf_g27
22:32:40 244  ,chf_g28
22:32:40 245  ,chf_g29
22:32:40 246  ,chf_g30
22:32:40 247  ,chf_g31
22:32:40 248  ,chf_g32
22:32:40 249  ,chf_g33
22:32:40 250  ,chf_g34
22:32:40 251  ,chf_g35
22:32:40 252  ,chf_g36
22:32:40 253  ,chf_g37
22:32:40 254  ,chf_g38
22:32:40 255  ,chf_g39
22:32:40 256  ,chf_g40
22:32:40 257  ,chf_g41
22:32:40 258  FROM aud_ms6 m
22:32:40 259  WHERE gattn IN('nup','up')
22:32:40 260  AND 1+m.ydate < '&1'||' '||'&2'
22:32:40 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'22:15:00'

View created.

Elapsed: 00:00:00.14
22:32:40 SQL> 
22:32:40 SQL> -- rpt
22:32:40 SQL> 
22:32:40 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12744
up	     6500

Elapsed: 00:00:00.05
22:32:41 SQL> 
22:32:41 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-04 21:55:00

Elapsed: 00:00:00.03
22:32:41 SQL> 
22:32:41 SQL> -- Now build model from bme and score sme
22:32:41 SQL> @score1gattn.sql
22:32:41 SQL> -- score1gattn.sql
22:32:41 SQL> 
22:32:41 SQL> -- Does the 1st SVM score
22:32:41 SQL> 
22:32:41 SQL> -- Fill up svmc_apply_prep
22:32:41 SQL> @score_gattn.sql
22:32:41 SQL> --
22:32:41 SQL> -- score_gattn.sql
22:32:41 SQL> --
22:32:41 SQL> 
22:32:41 SQL> -- usage: score_gattn.sql
22:32:41 SQL> 
22:32:41 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:32:41 SQL> 
22:32:41 SQL> DEFINE target	= 'gattn'
22:32:41 SQL> DEFINE model_name = 'forex15'
22:32:41 SQL> DEFINE bldtable	= 'bme'
22:32:41 SQL> DEFINE scoretable = 'sme'
22:32:41 SQL> DEFINE case_id	= 'prdate'
22:32:41 SQL> 
22:32:41 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:32:41 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:32:41 SQL> 
22:32:41 SQL> -- Builds an SVM model using pl/sql.
22:32:41 SQL> 
22:32:41 SQL> -----------------------------------------------------------------------
22:32:41 SQL> --			    BUILD THE MODEL
22:32:41 SQL> -----------------------------------------------------------------------
22:32:41 SQL> 
22:32:41 SQL> -- Cleanup old build data preparation objects for repeat runs
22:32:41 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
22:32:41 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:32:41 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
22:32:41 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
22:32:41 SQL> 
22:32:41 SQL> 
22:32:41 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:32:41 SQL> --
22:32:41 SQL> -- DROP	TABLE svmc_settings ;
22:32:41 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:32:41 SQL> -- DELETE svmc_settings;
22:32:41 SQL> 
22:32:41 SQL> -- The default classification algorithm is Naive Bayes. So override
22:32:41 SQL> -- this choice to SVM using a settings table.
22:32:41 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:32:41 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:32:41 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:32:41 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:32:41 SQL> -- models.
22:32:41 SQL> --
22:32:41 SQL> 
22:32:41 SQL> -- Do this once and then comment it out.
22:32:41 SQL> -- That makes script go faster.
22:32:41 SQL> -- BEGIN
22:32:41 SQL> -- -- Populate settings table
22:32:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:32:41 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:32:41 SQL> --
22:32:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:32:41 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:32:41 SQL> --
22:32:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:32:41 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:32:41 SQL> --   COMMIT;
22:32:41 SQL> -- END;
22:32:41 SQL> -- /
22:32:41 SQL> 
22:32:41 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
22:32:41 SQL> 
22:32:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:32:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:32:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:32:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:32:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:32:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
22:32:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:32:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:32:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:32:41 SQL> 
22:32:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:32:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:32:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:32:41 SQL> 
22:32:41 SQL> --------------------------------
22:32:41 SQL> -- PREPARE BUILD (TRAINING) DATA
22:32:41 SQL> --
22:32:41 SQL> 
22:32:41 SQL> -- 1. Missing Value treatment for all Predictors and
22:32:41 SQL> -- 2. Outlier Treatment and
22:32:41 SQL> -- 3. Normalization are performed below.
22:32:41 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:32:41 SQL> --    normalized here.
22:32:41 SQL> 
22:32:41 SQL> BEGIN
22:32:41   2  	-- Perform missing value treatment for all predictors
22:32:41   3  	-- create miss tables
22:32:41   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:32:41   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:32:41   6  
22:32:41   7  	-- populate miss tables
22:32:41   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:32:41   9  	  miss_table_name => 'svmc_miss_num',
22:32:41  10  	  data_table_name => '&bldtable',
22:32:41  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:32:41  12  
22:32:41  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:32:41  14  	  miss_table_name => 'svmc_miss_cat',
22:32:41  15  	  data_table_name => '&bldtable',
22:32:41  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:32:41  17  
22:32:41  18  	-- xform input data to replace missing values
22:32:41  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:32:41  20  	  miss_table_name => 'svmc_miss_num',
22:32:41  21  	  data_table_name => '&bldtable',
22:32:41  22  	  xform_view_name => 'xformed_build_miss_num');
22:32:41  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:32:41  24  	  miss_table_name => 'svmc_miss_cat',
22:32:41  25  	  data_table_name => '&bldtable',
22:32:41  26  	  xform_view_name => 'xformed_build_miss_cat');
22:32:41  27  
22:32:41  28  	-- Perform outlier treatment.
22:32:41  29  	-- create clip table
22:32:41  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:32:41  31  
22:32:41  32  	-- populate clip table
22:32:41  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:32:41  34  	  clip_table_name => 'svmc_clip',
22:32:41  35  	  data_table_name => '&bldtable',
22:32:41  36  	  tail_frac	  => 0.025,
22:32:41  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:32:41  38  
22:32:41  39  	-- xform input data to winsorized data
22:32:41  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:32:41  41  	  clip_table_name => 'svmc_clip',
22:32:41  42  	  data_table_name => '&bldtable',
22:32:41  43  	  xform_view_name => 'svmc_winsor');
22:32:41  44  
22:32:41  45  	-- create normalization table
22:32:41  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:32:41  47  
22:32:41  48  	-- populate normalization table based on winsorized data
22:32:41  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:32:41  50  	  norm_table_name => 'svmc_norm',
22:32:41  51  	  data_table_name => 'svmc_winsor',
22:32:41  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:32:41  53  
22:32:41  54  	-- normalize the original data
22:32:41  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:32:41  56  	  norm_table_name => 'svmc_norm',
22:32:41  57  	  data_table_name => '&bldtable',
22:32:41  58  	  xform_view_name => 'svmc_build_prep');
22:32:41  59  END;
22:32:41  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.52
22:32:59 SQL> 
22:32:59 SQL> ---------------------
22:32:59 SQL> -- CREATE A NEW MODEL
22:32:59 SQL> --
22:32:59 SQL> -- Cleanup old model with the same name for repeat runs
22:32:59 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:32:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:32:59   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.03
22:33:00 SQL> 
22:33:00 SQL> -- Build a new SVM Model
22:33:00 SQL> BEGIN
22:33:00   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:33:00   3  	  model_name	      => '&model_name',
22:33:00   4  	  mining_function     => dbms_data_mining.classification,
22:33:00   5  	  data_table_name     => 'svmc_build_prep',
22:33:00   6  	  case_id_column_name => '&case_id',
22:33:00   7  	  target_column_name  => '&target',
22:33:00   8  	  settings_table_name => 'svmc_settings');
22:33:00   9  END;
22:33:00  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:30.73
22:33:31 SQL> 
22:33:31 SQL> -----------------------------------------------------------------------
22:33:31 SQL> --			       APPLY/score THE MODEL
22:33:31 SQL> -----------------------------------------------------------------------
22:33:31 SQL> 
22:33:31 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:33:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:33:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:33:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
22:33:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:33:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:33:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:33:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:33:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:33:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:33:31 SQL> -----------------------
22:33:31 SQL> -- PREPARE SCORING DATA
22:33:31 SQL> --
22:33:31 SQL> -- If the data for model creation has been prepared, then the data
22:33:31 SQL> -- to be scored using the model must be prepared in the same manner
22:33:31 SQL> -- in order to obtain meaningful results.
22:33:31 SQL> --
22:33:31 SQL> -- 1. Missing Value treatment for all Predictors and
22:33:31 SQL> -- 2. Normalization
22:33:31 SQL> -- No outlier treatment will be performed during test and apply. The
22:33:31 SQL> -- normalization step is sufficient, since the normalization parameters
22:33:31 SQL> -- already capture the effects of outlier treatment done with build data.
22:33:31 SQL> --
22:33:31 SQL> BEGIN
22:33:31   2  	-- Xform Test data to replace missing values
22:33:31   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:33:31   4  	  miss_table_name => 'svmc_miss_num',
22:33:31   5  	  data_table_name => '&scoretable',
22:33:31   6  	  xform_view_name => 'xformed_apply_miss_num');
22:33:31   7  
22:33:31   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:33:31   9  	  miss_table_name => 'svmc_miss_cat',
22:33:31  10  	  data_table_name => '&scoretable',
22:33:31  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:33:31  12  
22:33:31  13  	-- Normalize the data to be scored
22:33:31  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:33:31  15  	  norm_table_name => 'svmc_norm',
22:33:31  16  	  data_table_name => '&scoretable',
22:33:31  17  	  xform_view_name => 'svmc_apply_prep');
22:33:31  18  END;
22:33:31  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
22:33:33 SQL> 
22:33:33 SQL> -- Use same model_name used in score_gattn.sql
22:33:33 SQL> DEFINE model_name = 'forex15'
22:33:33 SQL> 
22:33:33 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
22:33:33 SQL> 
22:33:33 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
22:33:33   2  SELECT
22:33:33   3  prdate
22:33:33   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:33:33   5  ,sysdate
22:33:33   6  ,SUBSTR(prdate,1,3)pair
22:33:33   7  ,SUBSTR(prdate,4,19)ydate
22:33:33   8  FROM svmc_apply_prep
22:33:33   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.20
22:33:33 SQL> @aud_score1day_gattn.sql	2011-01-05 22:20:00
22:33:33 SQL> --
22:33:33 SQL> -- aud_score1day_gattn.sql
22:33:33 SQL> --
22:33:33 SQL> 
22:33:33 SQL> CREATE OR REPLACE VIEW sme AS
22:33:33   2  SELECT
22:33:33   3  'aud'||m.ydate prdate
22:33:33   4  ,NULL gattn
22:33:33   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:33:33   6  ,eur_g00
22:33:33   7  ,eur_g01
22:33:33   8  ,eur_g02
22:33:33   9  ,eur_g03
22:33:33  10  ,eur_g04
22:33:33  11  ,eur_g05
22:33:33  12  ,eur_g06
22:33:33  13  ,eur_g07
22:33:33  14  ,eur_g08
22:33:33  15  ,eur_g09
22:33:33  16  ,eur_g10
22:33:33  17  ,eur_g11
22:33:33  18  ,eur_g12
22:33:33  19  ,eur_g13
22:33:33  20  ,eur_g14
22:33:33  21  ,eur_g15
22:33:33  22  ,eur_g16
22:33:33  23  ,eur_g17
22:33:33  24  ,eur_g18
22:33:33  25  ,eur_g19
22:33:33  26  ,eur_g20
22:33:33  27  ,eur_g21
22:33:33  28  ,eur_g22
22:33:33  29  ,eur_g23
22:33:33  30  ,eur_g24
22:33:33  31  ,eur_g25
22:33:33  32  ,eur_g26
22:33:33  33  ,eur_g27
22:33:33  34  ,eur_g28
22:33:33  35  ,eur_g29
22:33:33  36  ,eur_g30
22:33:33  37  ,eur_g31
22:33:33  38  ,eur_g32
22:33:33  39  ,eur_g33
22:33:33  40  ,eur_g34
22:33:33  41  ,eur_g35
22:33:33  42  ,eur_g36
22:33:33  43  ,eur_g37
22:33:33  44  ,eur_g38
22:33:33  45  ,eur_g39
22:33:33  46  ,eur_g40
22:33:33  47  ,eur_g41
22:33:33  48  ,aud_g00
22:33:33  49  ,aud_g01
22:33:33  50  ,aud_g02
22:33:33  51  ,aud_g03
22:33:33  52  ,aud_g04
22:33:33  53  ,aud_g05
22:33:33  54  ,aud_g06
22:33:33  55  ,aud_g07
22:33:33  56  ,aud_g08
22:33:33  57  ,aud_g09
22:33:33  58  ,aud_g10
22:33:33  59  ,aud_g11
22:33:33  60  ,aud_g12
22:33:33  61  ,aud_g13
22:33:33  62  ,aud_g14
22:33:33  63  ,aud_g15
22:33:33  64  ,aud_g16
22:33:33  65  ,aud_g17
22:33:33  66  ,aud_g18
22:33:33  67  ,aud_g19
22:33:33  68  ,aud_g20
22:33:33  69  ,aud_g21
22:33:33  70  ,aud_g22
22:33:33  71  ,aud_g23
22:33:33  72  ,aud_g24
22:33:33  73  ,aud_g25
22:33:33  74  ,aud_g26
22:33:33  75  ,aud_g27
22:33:33  76  ,aud_g28
22:33:33  77  ,aud_g29
22:33:33  78  ,aud_g30
22:33:33  79  ,aud_g31
22:33:33  80  ,aud_g32
22:33:33  81  ,aud_g33
22:33:33  82  ,aud_g34
22:33:33  83  ,aud_g35
22:33:33  84  ,aud_g36
22:33:33  85  ,aud_g37
22:33:33  86  ,aud_g38
22:33:33  87  ,aud_g39
22:33:33  88  ,aud_g40
22:33:33  89  ,aud_g41
22:33:33  90  ,gbp_g00
22:33:33  91  ,gbp_g01
22:33:33  92  ,gbp_g02
22:33:33  93  ,gbp_g03
22:33:33  94  ,gbp_g04
22:33:33  95  ,gbp_g05
22:33:33  96  ,gbp_g06
22:33:33  97  ,gbp_g07
22:33:33  98  ,gbp_g08
22:33:33  99  ,gbp_g09
22:33:33 100  ,gbp_g10
22:33:33 101  ,gbp_g11
22:33:33 102  ,gbp_g12
22:33:33 103  ,gbp_g13
22:33:33 104  ,gbp_g14
22:33:33 105  ,gbp_g15
22:33:33 106  ,gbp_g16
22:33:33 107  ,gbp_g17
22:33:33 108  ,gbp_g18
22:33:33 109  ,gbp_g19
22:33:33 110  ,gbp_g20
22:33:33 111  ,gbp_g21
22:33:33 112  ,gbp_g22
22:33:33 113  ,gbp_g23
22:33:33 114  ,gbp_g24
22:33:33 115  ,gbp_g25
22:33:33 116  ,gbp_g26
22:33:33 117  ,gbp_g27
22:33:33 118  ,gbp_g28
22:33:33 119  ,gbp_g29
22:33:33 120  ,gbp_g30
22:33:33 121  ,gbp_g31
22:33:33 122  ,gbp_g32
22:33:33 123  ,gbp_g33
22:33:33 124  ,gbp_g34
22:33:33 125  ,gbp_g35
22:33:33 126  ,gbp_g36
22:33:33 127  ,gbp_g37
22:33:33 128  ,gbp_g38
22:33:33 129  ,gbp_g39
22:33:33 130  ,gbp_g40
22:33:33 131  ,gbp_g41
22:33:33 132  ,jpy_g00
22:33:33 133  ,jpy_g01
22:33:33 134  ,jpy_g02
22:33:33 135  ,jpy_g03
22:33:33 136  ,jpy_g04
22:33:33 137  ,jpy_g05
22:33:33 138  ,jpy_g06
22:33:33 139  ,jpy_g07
22:33:33 140  ,jpy_g08
22:33:33 141  ,jpy_g09
22:33:33 142  ,jpy_g10
22:33:33 143  ,jpy_g11
22:33:33 144  ,jpy_g12
22:33:33 145  ,jpy_g13
22:33:33 146  ,jpy_g14
22:33:33 147  ,jpy_g15
22:33:33 148  ,jpy_g16
22:33:33 149  ,jpy_g17
22:33:33 150  ,jpy_g18
22:33:33 151  ,jpy_g19
22:33:33 152  ,jpy_g20
22:33:33 153  ,jpy_g21
22:33:33 154  ,jpy_g22
22:33:33 155  ,jpy_g23
22:33:33 156  ,jpy_g24
22:33:33 157  ,jpy_g25
22:33:33 158  ,jpy_g26
22:33:33 159  ,jpy_g27
22:33:33 160  ,jpy_g28
22:33:33 161  ,jpy_g29
22:33:33 162  ,jpy_g30
22:33:33 163  ,jpy_g31
22:33:33 164  ,jpy_g32
22:33:33 165  ,jpy_g33
22:33:33 166  ,jpy_g34
22:33:33 167  ,jpy_g35
22:33:33 168  ,jpy_g36
22:33:33 169  ,jpy_g37
22:33:33 170  ,jpy_g38
22:33:33 171  ,jpy_g39
22:33:33 172  ,jpy_g40
22:33:33 173  ,jpy_g41
22:33:33 174  ,cad_g00
22:33:33 175  ,cad_g01
22:33:33 176  ,cad_g02
22:33:33 177  ,cad_g03
22:33:33 178  ,cad_g04
22:33:33 179  ,cad_g05
22:33:33 180  ,cad_g06
22:33:33 181  ,cad_g07
22:33:33 182  ,cad_g08
22:33:33 183  ,cad_g09
22:33:33 184  ,cad_g10
22:33:33 185  ,cad_g11
22:33:33 186  ,cad_g12
22:33:33 187  ,cad_g13
22:33:33 188  ,cad_g14
22:33:33 189  ,cad_g15
22:33:33 190  ,cad_g16
22:33:33 191  ,cad_g17
22:33:33 192  ,cad_g18
22:33:33 193  ,cad_g19
22:33:33 194  ,cad_g20
22:33:33 195  ,cad_g21
22:33:33 196  ,cad_g22
22:33:33 197  ,cad_g23
22:33:33 198  ,cad_g24
22:33:33 199  ,cad_g25
22:33:33 200  ,cad_g26
22:33:33 201  ,cad_g27
22:33:33 202  ,cad_g28
22:33:33 203  ,cad_g29
22:33:33 204  ,cad_g30
22:33:33 205  ,cad_g31
22:33:33 206  ,cad_g32
22:33:33 207  ,cad_g33
22:33:33 208  ,cad_g34
22:33:33 209  ,cad_g35
22:33:33 210  ,cad_g36
22:33:33 211  ,cad_g37
22:33:33 212  ,cad_g38
22:33:33 213  ,cad_g39
22:33:33 214  ,cad_g40
22:33:33 215  ,cad_g41
22:33:33 216  ,chf_g00
22:33:33 217  ,chf_g01
22:33:33 218  ,chf_g02
22:33:33 219  ,chf_g03
22:33:33 220  ,chf_g04
22:33:33 221  ,chf_g05
22:33:33 222  ,chf_g06
22:33:33 223  ,chf_g07
22:33:33 224  ,chf_g08
22:33:33 225  ,chf_g09
22:33:33 226  ,chf_g10
22:33:33 227  ,chf_g11
22:33:33 228  ,chf_g12
22:33:33 229  ,chf_g13
22:33:33 230  ,chf_g14
22:33:33 231  ,chf_g15
22:33:33 232  ,chf_g16
22:33:33 233  ,chf_g17
22:33:33 234  ,chf_g18
22:33:33 235  ,chf_g19
22:33:33 236  ,chf_g20
22:33:33 237  ,chf_g21
22:33:33 238  ,chf_g22
22:33:33 239  ,chf_g23
22:33:33 240  ,chf_g24
22:33:33 241  ,chf_g25
22:33:33 242  ,chf_g26
22:33:33 243  ,chf_g27
22:33:33 244  ,chf_g28
22:33:33 245  ,chf_g29
22:33:33 246  ,chf_g30
22:33:33 247  ,chf_g31
22:33:33 248  ,chf_g32
22:33:33 249  ,chf_g33
22:33:33 250  ,chf_g34
22:33:33 251  ,chf_g35
22:33:33 252  ,chf_g36
22:33:33 253  ,chf_g37
22:33:33 254  ,chf_g38
22:33:33 255  ,chf_g39
22:33:33 256  ,chf_g40
22:33:33 257  ,chf_g41
22:33:33 258  FROM aud_ms6 m
22:33:33 259  WHERE m.ydate = '&1'||' '||'&2'
22:33:33 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'22:20:00'

View created.

Elapsed: 00:00:00.12
22:33:33 SQL> 
22:33:33 SQL> -- rpt
22:33:33 SQL> -- We should see just 1 row:
22:33:33 SQL> 
22:33:33 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
22:33:33 SQL> 
22:33:33 SQL> -- Build the model:
22:33:33 SQL> CREATE OR REPLACE VIEW bme AS
22:33:33   2  SELECT
22:33:33   3  'aud'||m.ydate prdate
22:33:33   4  ,gattn
22:33:33   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:33:33   6  ,eur_g00
22:33:33   7  ,eur_g01
22:33:33   8  ,eur_g02
22:33:33   9  ,eur_g03
22:33:33  10  ,eur_g04
22:33:33  11  ,eur_g05
22:33:33  12  ,eur_g06
22:33:33  13  ,eur_g07
22:33:33  14  ,eur_g08
22:33:33  15  ,eur_g09
22:33:33  16  ,eur_g10
22:33:33  17  ,eur_g11
22:33:33  18  ,eur_g12
22:33:33  19  ,eur_g13
22:33:33  20  ,eur_g14
22:33:33  21  ,eur_g15
22:33:33  22  ,eur_g16
22:33:33  23  ,eur_g17
22:33:33  24  ,eur_g18
22:33:33  25  ,eur_g19
22:33:33  26  ,eur_g20
22:33:33  27  ,eur_g21
22:33:33  28  ,eur_g22
22:33:33  29  ,eur_g23
22:33:33  30  ,eur_g24
22:33:33  31  ,eur_g25
22:33:33  32  ,eur_g26
22:33:33  33  ,eur_g27
22:33:33  34  ,eur_g28
22:33:33  35  ,eur_g29
22:33:33  36  ,eur_g30
22:33:33  37  ,eur_g31
22:33:33  38  ,eur_g32
22:33:33  39  ,eur_g33
22:33:33  40  ,eur_g34
22:33:33  41  ,eur_g35
22:33:33  42  ,eur_g36
22:33:33  43  ,eur_g37
22:33:33  44  ,eur_g38
22:33:33  45  ,eur_g39
22:33:33  46  ,eur_g40
22:33:33  47  ,eur_g41
22:33:33  48  ,aud_g00
22:33:33  49  ,aud_g01
22:33:33  50  ,aud_g02
22:33:33  51  ,aud_g03
22:33:33  52  ,aud_g04
22:33:33  53  ,aud_g05
22:33:33  54  ,aud_g06
22:33:33  55  ,aud_g07
22:33:33  56  ,aud_g08
22:33:33  57  ,aud_g09
22:33:33  58  ,aud_g10
22:33:33  59  ,aud_g11
22:33:33  60  ,aud_g12
22:33:33  61  ,aud_g13
22:33:33  62  ,aud_g14
22:33:33  63  ,aud_g15
22:33:33  64  ,aud_g16
22:33:33  65  ,aud_g17
22:33:33  66  ,aud_g18
22:33:33  67  ,aud_g19
22:33:33  68  ,aud_g20
22:33:33  69  ,aud_g21
22:33:33  70  ,aud_g22
22:33:33  71  ,aud_g23
22:33:33  72  ,aud_g24
22:33:33  73  ,aud_g25
22:33:33  74  ,aud_g26
22:33:33  75  ,aud_g27
22:33:33  76  ,aud_g28
22:33:33  77  ,aud_g29
22:33:33  78  ,aud_g30
22:33:33  79  ,aud_g31
22:33:33  80  ,aud_g32
22:33:33  81  ,aud_g33
22:33:33  82  ,aud_g34
22:33:33  83  ,aud_g35
22:33:33  84  ,aud_g36
22:33:33  85  ,aud_g37
22:33:33  86  ,aud_g38
22:33:33  87  ,aud_g39
22:33:33  88  ,aud_g40
22:33:33  89  ,aud_g41
22:33:33  90  ,gbp_g00
22:33:33  91  ,gbp_g01
22:33:33  92  ,gbp_g02
22:33:33  93  ,gbp_g03
22:33:33  94  ,gbp_g04
22:33:33  95  ,gbp_g05
22:33:33  96  ,gbp_g06
22:33:33  97  ,gbp_g07
22:33:33  98  ,gbp_g08
22:33:33  99  ,gbp_g09
22:33:33 100  ,gbp_g10
22:33:33 101  ,gbp_g11
22:33:33 102  ,gbp_g12
22:33:33 103  ,gbp_g13
22:33:33 104  ,gbp_g14
22:33:33 105  ,gbp_g15
22:33:33 106  ,gbp_g16
22:33:33 107  ,gbp_g17
22:33:33 108  ,gbp_g18
22:33:33 109  ,gbp_g19
22:33:33 110  ,gbp_g20
22:33:33 111  ,gbp_g21
22:33:33 112  ,gbp_g22
22:33:33 113  ,gbp_g23
22:33:33 114  ,gbp_g24
22:33:33 115  ,gbp_g25
22:33:33 116  ,gbp_g26
22:33:33 117  ,gbp_g27
22:33:33 118  ,gbp_g28
22:33:33 119  ,gbp_g29
22:33:33 120  ,gbp_g30
22:33:33 121  ,gbp_g31
22:33:33 122  ,gbp_g32
22:33:33 123  ,gbp_g33
22:33:33 124  ,gbp_g34
22:33:33 125  ,gbp_g35
22:33:33 126  ,gbp_g36
22:33:33 127  ,gbp_g37
22:33:33 128  ,gbp_g38
22:33:33 129  ,gbp_g39
22:33:33 130  ,gbp_g40
22:33:33 131  ,gbp_g41
22:33:33 132  ,jpy_g00
22:33:33 133  ,jpy_g01
22:33:33 134  ,jpy_g02
22:33:33 135  ,jpy_g03
22:33:33 136  ,jpy_g04
22:33:33 137  ,jpy_g05
22:33:33 138  ,jpy_g06
22:33:33 139  ,jpy_g07
22:33:33 140  ,jpy_g08
22:33:33 141  ,jpy_g09
22:33:33 142  ,jpy_g10
22:33:33 143  ,jpy_g11
22:33:33 144  ,jpy_g12
22:33:33 145  ,jpy_g13
22:33:33 146  ,jpy_g14
22:33:33 147  ,jpy_g15
22:33:33 148  ,jpy_g16
22:33:33 149  ,jpy_g17
22:33:33 150  ,jpy_g18
22:33:33 151  ,jpy_g19
22:33:33 152  ,jpy_g20
22:33:33 153  ,jpy_g21
22:33:33 154  ,jpy_g22
22:33:33 155  ,jpy_g23
22:33:33 156  ,jpy_g24
22:33:33 157  ,jpy_g25
22:33:33 158  ,jpy_g26
22:33:33 159  ,jpy_g27
22:33:33 160  ,jpy_g28
22:33:33 161  ,jpy_g29
22:33:33 162  ,jpy_g30
22:33:33 163  ,jpy_g31
22:33:33 164  ,jpy_g32
22:33:33 165  ,jpy_g33
22:33:33 166  ,jpy_g34
22:33:33 167  ,jpy_g35
22:33:33 168  ,jpy_g36
22:33:33 169  ,jpy_g37
22:33:33 170  ,jpy_g38
22:33:33 171  ,jpy_g39
22:33:33 172  ,jpy_g40
22:33:33 173  ,jpy_g41
22:33:33 174  ,cad_g00
22:33:33 175  ,cad_g01
22:33:33 176  ,cad_g02
22:33:33 177  ,cad_g03
22:33:33 178  ,cad_g04
22:33:33 179  ,cad_g05
22:33:33 180  ,cad_g06
22:33:33 181  ,cad_g07
22:33:33 182  ,cad_g08
22:33:33 183  ,cad_g09
22:33:33 184  ,cad_g10
22:33:33 185  ,cad_g11
22:33:33 186  ,cad_g12
22:33:33 187  ,cad_g13
22:33:33 188  ,cad_g14
22:33:33 189  ,cad_g15
22:33:33 190  ,cad_g16
22:33:33 191  ,cad_g17
22:33:33 192  ,cad_g18
22:33:33 193  ,cad_g19
22:33:33 194  ,cad_g20
22:33:33 195  ,cad_g21
22:33:33 196  ,cad_g22
22:33:33 197  ,cad_g23
22:33:33 198  ,cad_g24
22:33:33 199  ,cad_g25
22:33:33 200  ,cad_g26
22:33:33 201  ,cad_g27
22:33:33 202  ,cad_g28
22:33:33 203  ,cad_g29
22:33:33 204  ,cad_g30
22:33:33 205  ,cad_g31
22:33:33 206  ,cad_g32
22:33:33 207  ,cad_g33
22:33:33 208  ,cad_g34
22:33:33 209  ,cad_g35
22:33:33 210  ,cad_g36
22:33:33 211  ,cad_g37
22:33:33 212  ,cad_g38
22:33:33 213  ,cad_g39
22:33:33 214  ,cad_g40
22:33:33 215  ,cad_g41
22:33:33 216  ,chf_g00
22:33:33 217  ,chf_g01
22:33:33 218  ,chf_g02
22:33:33 219  ,chf_g03
22:33:33 220  ,chf_g04
22:33:33 221  ,chf_g05
22:33:33 222  ,chf_g06
22:33:33 223  ,chf_g07
22:33:33 224  ,chf_g08
22:33:33 225  ,chf_g09
22:33:33 226  ,chf_g10
22:33:33 227  ,chf_g11
22:33:33 228  ,chf_g12
22:33:33 229  ,chf_g13
22:33:33 230  ,chf_g14
22:33:33 231  ,chf_g15
22:33:33 232  ,chf_g16
22:33:33 233  ,chf_g17
22:33:33 234  ,chf_g18
22:33:33 235  ,chf_g19
22:33:33 236  ,chf_g20
22:33:33 237  ,chf_g21
22:33:33 238  ,chf_g22
22:33:33 239  ,chf_g23
22:33:33 240  ,chf_g24
22:33:33 241  ,chf_g25
22:33:33 242  ,chf_g26
22:33:33 243  ,chf_g27
22:33:33 244  ,chf_g28
22:33:33 245  ,chf_g29
22:33:33 246  ,chf_g30
22:33:33 247  ,chf_g31
22:33:33 248  ,chf_g32
22:33:33 249  ,chf_g33
22:33:33 250  ,chf_g34
22:33:33 251  ,chf_g35
22:33:33 252  ,chf_g36
22:33:33 253  ,chf_g37
22:33:33 254  ,chf_g38
22:33:33 255  ,chf_g39
22:33:33 256  ,chf_g40
22:33:33 257  ,chf_g41
22:33:33 258  FROM aud_ms6 m
22:33:33 259  WHERE gattn IN('nup','up')
22:33:33 260  AND 1+m.ydate < '&1'||' '||'&2'
22:33:33 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'22:20:00'

View created.

Elapsed: 00:00:00.11
22:33:33 SQL> 
22:33:33 SQL> -- rpt
22:33:33 SQL> 
22:33:33 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12744
up	     6501

Elapsed: 00:00:00.05
22:33:33 SQL> 
22:33:33 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-04 22:15:00

Elapsed: 00:00:00.03
22:33:33 SQL> 
22:33:33 SQL> -- Now build model from bme and score sme
22:33:33 SQL> @score1gattn.sql
22:33:33 SQL> -- score1gattn.sql
22:33:33 SQL> 
22:33:33 SQL> -- Does the 1st SVM score
22:33:33 SQL> 
22:33:33 SQL> -- Fill up svmc_apply_prep
22:33:33 SQL> @score_gattn.sql
22:33:33 SQL> --
22:33:33 SQL> -- score_gattn.sql
22:33:33 SQL> --
22:33:33 SQL> 
22:33:33 SQL> -- usage: score_gattn.sql
22:33:33 SQL> 
22:33:33 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:33:33 SQL> 
22:33:33 SQL> DEFINE target	= 'gattn'
22:33:33 SQL> DEFINE model_name = 'forex15'
22:33:33 SQL> DEFINE bldtable	= 'bme'
22:33:33 SQL> DEFINE scoretable = 'sme'
22:33:33 SQL> DEFINE case_id	= 'prdate'
22:33:33 SQL> 
22:33:33 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:33:33 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:33:33 SQL> 
22:33:33 SQL> -- Builds an SVM model using pl/sql.
22:33:33 SQL> 
22:33:33 SQL> -----------------------------------------------------------------------
22:33:33 SQL> --			    BUILD THE MODEL
22:33:33 SQL> -----------------------------------------------------------------------
22:33:33 SQL> 
22:33:33 SQL> -- Cleanup old build data preparation objects for repeat runs
22:33:33 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
22:33:33 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:33:33 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
22:33:33 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
22:33:33 SQL> 
22:33:33 SQL> 
22:33:33 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:33:33 SQL> --
22:33:33 SQL> -- DROP	TABLE svmc_settings ;
22:33:33 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:33:33 SQL> -- DELETE svmc_settings;
22:33:33 SQL> 
22:33:33 SQL> -- The default classification algorithm is Naive Bayes. So override
22:33:33 SQL> -- this choice to SVM using a settings table.
22:33:33 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:33:33 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:33:33 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:33:33 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:33:33 SQL> -- models.
22:33:33 SQL> --
22:33:33 SQL> 
22:33:33 SQL> -- Do this once and then comment it out.
22:33:33 SQL> -- That makes script go faster.
22:33:33 SQL> -- BEGIN
22:33:33 SQL> -- -- Populate settings table
22:33:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:33:33 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:33:33 SQL> --
22:33:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:33:33 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:33:33 SQL> --
22:33:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:33:33 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:33:33 SQL> --   COMMIT;
22:33:33 SQL> -- END;
22:33:33 SQL> -- /
22:33:33 SQL> 
22:33:33 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:33:33 SQL> 
22:33:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:33:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:33:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:33:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:33:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:33:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:33:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:33:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:33:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:33:33 SQL> 
22:33:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:33:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:33:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:33:33 SQL> 
22:33:33 SQL> --------------------------------
22:33:33 SQL> -- PREPARE BUILD (TRAINING) DATA
22:33:33 SQL> --
22:33:33 SQL> 
22:33:33 SQL> -- 1. Missing Value treatment for all Predictors and
22:33:33 SQL> -- 2. Outlier Treatment and
22:33:33 SQL> -- 3. Normalization are performed below.
22:33:33 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:33:33 SQL> --    normalized here.
22:33:33 SQL> 
22:33:33 SQL> BEGIN
22:33:33   2  	-- Perform missing value treatment for all predictors
22:33:33   3  	-- create miss tables
22:33:33   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:33:33   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:33:33   6  
22:33:33   7  	-- populate miss tables
22:33:33   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:33:33   9  	  miss_table_name => 'svmc_miss_num',
22:33:33  10  	  data_table_name => '&bldtable',
22:33:33  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:33:33  12  
22:33:33  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:33:33  14  	  miss_table_name => 'svmc_miss_cat',
22:33:33  15  	  data_table_name => '&bldtable',
22:33:33  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:33:33  17  
22:33:33  18  	-- xform input data to replace missing values
22:33:33  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:33:33  20  	  miss_table_name => 'svmc_miss_num',
22:33:33  21  	  data_table_name => '&bldtable',
22:33:33  22  	  xform_view_name => 'xformed_build_miss_num');
22:33:33  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:33:33  24  	  miss_table_name => 'svmc_miss_cat',
22:33:33  25  	  data_table_name => '&bldtable',
22:33:33  26  	  xform_view_name => 'xformed_build_miss_cat');
22:33:33  27  
22:33:33  28  	-- Perform outlier treatment.
22:33:33  29  	-- create clip table
22:33:33  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:33:33  31  
22:33:33  32  	-- populate clip table
22:33:33  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:33:33  34  	  clip_table_name => 'svmc_clip',
22:33:33  35  	  data_table_name => '&bldtable',
22:33:33  36  	  tail_frac	  => 0.025,
22:33:33  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:33:33  38  
22:33:33  39  	-- xform input data to winsorized data
22:33:33  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:33:33  41  	  clip_table_name => 'svmc_clip',
22:33:33  42  	  data_table_name => '&bldtable',
22:33:33  43  	  xform_view_name => 'svmc_winsor');
22:33:33  44  
22:33:33  45  	-- create normalization table
22:33:33  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:33:33  47  
22:33:33  48  	-- populate normalization table based on winsorized data
22:33:33  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:33:33  50  	  norm_table_name => 'svmc_norm',
22:33:33  51  	  data_table_name => 'svmc_winsor',
22:33:33  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:33:33  53  
22:33:33  54  	-- normalize the original data
22:33:33  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:33:33  56  	  norm_table_name => 'svmc_norm',
22:33:33  57  	  data_table_name => '&bldtable',
22:33:33  58  	  xform_view_name => 'svmc_build_prep');
22:33:33  59  END;
22:33:33  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.56
22:33:52 SQL> 
22:33:52 SQL> ---------------------
22:33:52 SQL> -- CREATE A NEW MODEL
22:33:52 SQL> --
22:33:52 SQL> -- Cleanup old model with the same name for repeat runs
22:33:52 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:33:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:33:52   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
22:33:53 SQL> 
22:33:53 SQL> -- Build a new SVM Model
22:33:53 SQL> BEGIN
22:33:53   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:33:53   3  	  model_name	      => '&model_name',
22:33:53   4  	  mining_function     => dbms_data_mining.classification,
22:33:53   5  	  data_table_name     => 'svmc_build_prep',
22:33:53   6  	  case_id_column_name => '&case_id',
22:33:53   7  	  target_column_name  => '&target',
22:33:53   8  	  settings_table_name => 'svmc_settings');
22:33:53   9  END;
22:33:53  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.94
22:34:21 SQL> 
22:34:21 SQL> -----------------------------------------------------------------------
22:34:21 SQL> --			       APPLY/score THE MODEL
22:34:21 SQL> -----------------------------------------------------------------------
22:34:21 SQL> 
22:34:21 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:34:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:34:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:34:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
22:34:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:34:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:34:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
22:34:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:34:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:34:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:34:21 SQL> -----------------------
22:34:21 SQL> -- PREPARE SCORING DATA
22:34:21 SQL> --
22:34:21 SQL> -- If the data for model creation has been prepared, then the data
22:34:21 SQL> -- to be scored using the model must be prepared in the same manner
22:34:21 SQL> -- in order to obtain meaningful results.
22:34:21 SQL> --
22:34:21 SQL> -- 1. Missing Value treatment for all Predictors and
22:34:21 SQL> -- 2. Normalization
22:34:21 SQL> -- No outlier treatment will be performed during test and apply. The
22:34:21 SQL> -- normalization step is sufficient, since the normalization parameters
22:34:21 SQL> -- already capture the effects of outlier treatment done with build data.
22:34:21 SQL> --
22:34:21 SQL> BEGIN
22:34:21   2  	-- Xform Test data to replace missing values
22:34:21   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:34:21   4  	  miss_table_name => 'svmc_miss_num',
22:34:21   5  	  data_table_name => '&scoretable',
22:34:21   6  	  xform_view_name => 'xformed_apply_miss_num');
22:34:21   7  
22:34:21   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:34:21   9  	  miss_table_name => 'svmc_miss_cat',
22:34:21  10  	  data_table_name => '&scoretable',
22:34:21  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:34:21  12  
22:34:21  13  	-- Normalize the data to be scored
22:34:21  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:34:21  15  	  norm_table_name => 'svmc_norm',
22:34:21  16  	  data_table_name => '&scoretable',
22:34:21  17  	  xform_view_name => 'svmc_apply_prep');
22:34:21  18  END;
22:34:21  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.29
22:34:22 SQL> 
22:34:22 SQL> -- Use same model_name used in score_gattn.sql
22:34:22 SQL> DEFINE model_name = 'forex15'
22:34:22 SQL> 
22:34:22 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
22:34:23 SQL> 
22:34:23 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
22:34:23   2  SELECT
22:34:23   3  prdate
22:34:23   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:34:23   5  ,sysdate
22:34:23   6  ,SUBSTR(prdate,1,3)pair
22:34:23   7  ,SUBSTR(prdate,4,19)ydate
22:34:23   8  FROM svmc_apply_prep
22:34:23   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
22:34:23 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
