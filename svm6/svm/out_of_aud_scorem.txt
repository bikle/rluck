
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 30 20:55:43 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

20:55:43 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
20:55:43 SQL> 20:55:43 SQL> @aud_score1day.sql  2010-12-30 20:35:00
20:55:43 SQL> --
20:55:43 SQL> -- aud_score1day.sql
20:55:43 SQL> --
20:55:43 SQL> 
20:55:43 SQL> CREATE OR REPLACE VIEW sme AS
20:55:43   2  SELECT
20:55:43   3  'aud'||m.ydate prdate
20:55:43   4  ,NULL gatt
20:55:43   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:55:43   6  ,eur_g00
20:55:43   7  ,eur_g01
20:55:43   8  ,eur_g02
20:55:43   9  ,eur_g03
20:55:43  10  ,eur_g04
20:55:43  11  ,eur_g05
20:55:43  12  ,eur_g06
20:55:43  13  ,eur_g07
20:55:43  14  ,eur_g08
20:55:43  15  ,eur_g09
20:55:43  16  ,eur_g10
20:55:43  17  ,eur_g11
20:55:43  18  ,eur_g12
20:55:43  19  ,eur_g13
20:55:43  20  ,eur_g14
20:55:43  21  ,eur_g15
20:55:43  22  ,eur_g16
20:55:43  23  ,eur_g17
20:55:43  24  ,eur_g18
20:55:43  25  ,eur_g19
20:55:43  26  ,eur_g20
20:55:43  27  ,eur_g21
20:55:43  28  ,eur_g22
20:55:43  29  ,eur_g23
20:55:43  30  ,eur_g24
20:55:43  31  ,eur_g25
20:55:43  32  ,eur_g26
20:55:43  33  ,eur_g27
20:55:43  34  ,eur_g28
20:55:43  35  ,eur_g29
20:55:43  36  ,eur_g30
20:55:43  37  ,eur_g31
20:55:43  38  ,eur_g32
20:55:43  39  ,eur_g33
20:55:43  40  ,eur_g34
20:55:43  41  ,eur_g35
20:55:43  42  ,eur_g36
20:55:43  43  ,eur_g37
20:55:43  44  ,eur_g38
20:55:43  45  ,eur_g39
20:55:43  46  ,eur_g40
20:55:43  47  ,eur_g41
20:55:43  48  ,aud_g00
20:55:43  49  ,aud_g01
20:55:43  50  ,aud_g02
20:55:43  51  ,aud_g03
20:55:43  52  ,aud_g04
20:55:43  53  ,aud_g05
20:55:43  54  ,aud_g06
20:55:43  55  ,aud_g07
20:55:43  56  ,aud_g08
20:55:43  57  ,aud_g09
20:55:43  58  ,aud_g10
20:55:43  59  ,aud_g11
20:55:43  60  ,aud_g12
20:55:43  61  ,aud_g13
20:55:43  62  ,aud_g14
20:55:43  63  ,aud_g15
20:55:43  64  ,aud_g16
20:55:43  65  ,aud_g17
20:55:43  66  ,aud_g18
20:55:43  67  ,aud_g19
20:55:43  68  ,aud_g20
20:55:43  69  ,aud_g21
20:55:43  70  ,aud_g22
20:55:43  71  ,aud_g23
20:55:43  72  ,aud_g24
20:55:43  73  ,aud_g25
20:55:43  74  ,aud_g26
20:55:43  75  ,aud_g27
20:55:43  76  ,aud_g28
20:55:43  77  ,aud_g29
20:55:43  78  ,aud_g30
20:55:43  79  ,aud_g31
20:55:43  80  ,aud_g32
20:55:43  81  ,aud_g33
20:55:43  82  ,aud_g34
20:55:43  83  ,aud_g35
20:55:43  84  ,aud_g36
20:55:43  85  ,aud_g37
20:55:43  86  ,aud_g38
20:55:43  87  ,aud_g39
20:55:43  88  ,aud_g40
20:55:43  89  ,aud_g41
20:55:43  90  ,gbp_g00
20:55:43  91  ,gbp_g01
20:55:43  92  ,gbp_g02
20:55:43  93  ,gbp_g03
20:55:43  94  ,gbp_g04
20:55:43  95  ,gbp_g05
20:55:43  96  ,gbp_g06
20:55:43  97  ,gbp_g07
20:55:43  98  ,gbp_g08
20:55:43  99  ,gbp_g09
20:55:43 100  ,gbp_g10
20:55:43 101  ,gbp_g11
20:55:43 102  ,gbp_g12
20:55:43 103  ,gbp_g13
20:55:43 104  ,gbp_g14
20:55:43 105  ,gbp_g15
20:55:43 106  ,gbp_g16
20:55:43 107  ,gbp_g17
20:55:43 108  ,gbp_g18
20:55:43 109  ,gbp_g19
20:55:43 110  ,gbp_g20
20:55:43 111  ,gbp_g21
20:55:43 112  ,gbp_g22
20:55:43 113  ,gbp_g23
20:55:43 114  ,gbp_g24
20:55:43 115  ,gbp_g25
20:55:43 116  ,gbp_g26
20:55:43 117  ,gbp_g27
20:55:43 118  ,gbp_g28
20:55:43 119  ,gbp_g29
20:55:43 120  ,gbp_g30
20:55:43 121  ,gbp_g31
20:55:43 122  ,gbp_g32
20:55:43 123  ,gbp_g33
20:55:43 124  ,gbp_g34
20:55:43 125  ,gbp_g35
20:55:43 126  ,gbp_g36
20:55:43 127  ,gbp_g37
20:55:43 128  ,gbp_g38
20:55:43 129  ,gbp_g39
20:55:43 130  ,gbp_g40
20:55:43 131  ,gbp_g41
20:55:43 132  ,jpy_g00
20:55:43 133  ,jpy_g01
20:55:43 134  ,jpy_g02
20:55:43 135  ,jpy_g03
20:55:43 136  ,jpy_g04
20:55:43 137  ,jpy_g05
20:55:43 138  ,jpy_g06
20:55:43 139  ,jpy_g07
20:55:43 140  ,jpy_g08
20:55:43 141  ,jpy_g09
20:55:43 142  ,jpy_g10
20:55:43 143  ,jpy_g11
20:55:43 144  ,jpy_g12
20:55:43 145  ,jpy_g13
20:55:43 146  ,jpy_g14
20:55:43 147  ,jpy_g15
20:55:43 148  ,jpy_g16
20:55:43 149  ,jpy_g17
20:55:43 150  ,jpy_g18
20:55:43 151  ,jpy_g19
20:55:43 152  ,jpy_g20
20:55:43 153  ,jpy_g21
20:55:43 154  ,jpy_g22
20:55:43 155  ,jpy_g23
20:55:43 156  ,jpy_g24
20:55:43 157  ,jpy_g25
20:55:43 158  ,jpy_g26
20:55:43 159  ,jpy_g27
20:55:43 160  ,jpy_g28
20:55:43 161  ,jpy_g29
20:55:43 162  ,jpy_g30
20:55:43 163  ,jpy_g31
20:55:43 164  ,jpy_g32
20:55:43 165  ,jpy_g33
20:55:43 166  ,jpy_g34
20:55:43 167  ,jpy_g35
20:55:43 168  ,jpy_g36
20:55:43 169  ,jpy_g37
20:55:43 170  ,jpy_g38
20:55:43 171  ,jpy_g39
20:55:43 172  ,jpy_g40
20:55:43 173  ,jpy_g41
20:55:43 174  ,cad_g00
20:55:43 175  ,cad_g01
20:55:43 176  ,cad_g02
20:55:43 177  ,cad_g03
20:55:43 178  ,cad_g04
20:55:43 179  ,cad_g05
20:55:43 180  ,cad_g06
20:55:43 181  ,cad_g07
20:55:43 182  ,cad_g08
20:55:43 183  ,cad_g09
20:55:43 184  ,cad_g10
20:55:43 185  ,cad_g11
20:55:43 186  ,cad_g12
20:55:43 187  ,cad_g13
20:55:43 188  ,cad_g14
20:55:43 189  ,cad_g15
20:55:43 190  ,cad_g16
20:55:43 191  ,cad_g17
20:55:43 192  ,cad_g18
20:55:43 193  ,cad_g19
20:55:43 194  ,cad_g20
20:55:43 195  ,cad_g21
20:55:43 196  ,cad_g22
20:55:43 197  ,cad_g23
20:55:43 198  ,cad_g24
20:55:43 199  ,cad_g25
20:55:43 200  ,cad_g26
20:55:43 201  ,cad_g27
20:55:43 202  ,cad_g28
20:55:43 203  ,cad_g29
20:55:43 204  ,cad_g30
20:55:43 205  ,cad_g31
20:55:43 206  ,cad_g32
20:55:43 207  ,cad_g33
20:55:43 208  ,cad_g34
20:55:43 209  ,cad_g35
20:55:43 210  ,cad_g36
20:55:43 211  ,cad_g37
20:55:43 212  ,cad_g38
20:55:43 213  ,cad_g39
20:55:43 214  ,cad_g40
20:55:43 215  ,cad_g41
20:55:43 216  ,chf_g00
20:55:43 217  ,chf_g01
20:55:43 218  ,chf_g02
20:55:43 219  ,chf_g03
20:55:43 220  ,chf_g04
20:55:43 221  ,chf_g05
20:55:43 222  ,chf_g06
20:55:43 223  ,chf_g07
20:55:43 224  ,chf_g08
20:55:43 225  ,chf_g09
20:55:43 226  ,chf_g10
20:55:43 227  ,chf_g11
20:55:43 228  ,chf_g12
20:55:43 229  ,chf_g13
20:55:43 230  ,chf_g14
20:55:43 231  ,chf_g15
20:55:43 232  ,chf_g16
20:55:43 233  ,chf_g17
20:55:43 234  ,chf_g18
20:55:43 235  ,chf_g19
20:55:43 236  ,chf_g20
20:55:43 237  ,chf_g21
20:55:43 238  ,chf_g22
20:55:43 239  ,chf_g23
20:55:43 240  ,chf_g24
20:55:43 241  ,chf_g25
20:55:43 242  ,chf_g26
20:55:43 243  ,chf_g27
20:55:43 244  ,chf_g28
20:55:43 245  ,chf_g29
20:55:43 246  ,chf_g30
20:55:43 247  ,chf_g31
20:55:43 248  ,chf_g32
20:55:43 249  ,chf_g33
20:55:43 250  ,chf_g34
20:55:43 251  ,chf_g35
20:55:43 252  ,chf_g36
20:55:43 253  ,chf_g37
20:55:43 254  ,chf_g38
20:55:43 255  ,chf_g39
20:55:43 256  ,chf_g40
20:55:43 257  ,chf_g41
20:55:43 258  FROM aud_ms6 m
20:55:43 259  WHERE m.ydate = '&1'||' '||'&2'
20:55:43 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'20:35:00'

View created.

Elapsed: 00:00:00.12
20:55:43 SQL> 
20:55:43 SQL> -- rpt
20:55:43 SQL> -- We should see just 1 row:
20:55:43 SQL> 
20:55:43 SQL> SELECT COUNT(prdate) FROM sme
20:55:43   2  
20:55:43 SQL> -- Build the model:
20:55:43 SQL> CREATE OR REPLACE VIEW bme AS
20:55:43   2  SELECT
20:55:43   3  'aud'||m.ydate prdate
20:55:43   4  ,gatt
20:55:43   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:55:43   6  ,eur_g00
20:55:43   7  ,eur_g01
20:55:43   8  ,eur_g02
20:55:43   9  ,eur_g03
20:55:43  10  ,eur_g04
20:55:43  11  ,eur_g05
20:55:43  12  ,eur_g06
20:55:43  13  ,eur_g07
20:55:43  14  ,eur_g08
20:55:43  15  ,eur_g09
20:55:43  16  ,eur_g10
20:55:43  17  ,eur_g11
20:55:43  18  ,eur_g12
20:55:43  19  ,eur_g13
20:55:43  20  ,eur_g14
20:55:43  21  ,eur_g15
20:55:43  22  ,eur_g16
20:55:43  23  ,eur_g17
20:55:43  24  ,eur_g18
20:55:43  25  ,eur_g19
20:55:43  26  ,eur_g20
20:55:43  27  ,eur_g21
20:55:43  28  ,eur_g22
20:55:43  29  ,eur_g23
20:55:43  30  ,eur_g24
20:55:43  31  ,eur_g25
20:55:43  32  ,eur_g26
20:55:43  33  ,eur_g27
20:55:43  34  ,eur_g28
20:55:43  35  ,eur_g29
20:55:43  36  ,eur_g30
20:55:43  37  ,eur_g31
20:55:43  38  ,eur_g32
20:55:43  39  ,eur_g33
20:55:43  40  ,eur_g34
20:55:43  41  ,eur_g35
20:55:43  42  ,eur_g36
20:55:43  43  ,eur_g37
20:55:43  44  ,eur_g38
20:55:43  45  ,eur_g39
20:55:43  46  ,eur_g40
20:55:43  47  ,eur_g41
20:55:43  48  ,aud_g00
20:55:43  49  ,aud_g01
20:55:43  50  ,aud_g02
20:55:43  51  ,aud_g03
20:55:43  52  ,aud_g04
20:55:43  53  ,aud_g05
20:55:43  54  ,aud_g06
20:55:43  55  ,aud_g07
20:55:43  56  ,aud_g08
20:55:43  57  ,aud_g09
20:55:43  58  ,aud_g10
20:55:43  59  ,aud_g11
20:55:43  60  ,aud_g12
20:55:43  61  ,aud_g13
20:55:43  62  ,aud_g14
20:55:43  63  ,aud_g15
20:55:43  64  ,aud_g16
20:55:43  65  ,aud_g17
20:55:43  66  ,aud_g18
20:55:43  67  ,aud_g19
20:55:43  68  ,aud_g20
20:55:43  69  ,aud_g21
20:55:43  70  ,aud_g22
20:55:43  71  ,aud_g23
20:55:43  72  ,aud_g24
20:55:43  73  ,aud_g25
20:55:43  74  ,aud_g26
20:55:43  75  ,aud_g27
20:55:43  76  ,aud_g28
20:55:43  77  ,aud_g29
20:55:43  78  ,aud_g30
20:55:43  79  ,aud_g31
20:55:43  80  ,aud_g32
20:55:43  81  ,aud_g33
20:55:43  82  ,aud_g34
20:55:43  83  ,aud_g35
20:55:43  84  ,aud_g36
20:55:43  85  ,aud_g37
20:55:43  86  ,aud_g38
20:55:43  87  ,aud_g39
20:55:43  88  ,aud_g40
20:55:43  89  ,aud_g41
20:55:43  90  ,gbp_g00
20:55:43  91  ,gbp_g01
20:55:43  92  ,gbp_g02
20:55:43  93  ,gbp_g03
20:55:43  94  ,gbp_g04
20:55:43  95  ,gbp_g05
20:55:43  96  ,gbp_g06
20:55:43  97  ,gbp_g07
20:55:43  98  ,gbp_g08
20:55:43  99  ,gbp_g09
20:55:43 100  ,gbp_g10
20:55:43 101  ,gbp_g11
20:55:43 102  ,gbp_g12
20:55:43 103  ,gbp_g13
20:55:43 104  ,gbp_g14
20:55:43 105  ,gbp_g15
20:55:43 106  ,gbp_g16
20:55:43 107  ,gbp_g17
20:55:43 108  ,gbp_g18
20:55:43 109  ,gbp_g19
20:55:43 110  ,gbp_g20
20:55:43 111  ,gbp_g21
20:55:43 112  ,gbp_g22
20:55:43 113  ,gbp_g23
20:55:43 114  ,gbp_g24
20:55:43 115  ,gbp_g25
20:55:43 116  ,gbp_g26
20:55:43 117  ,gbp_g27
20:55:43 118  ,gbp_g28
20:55:43 119  ,gbp_g29
20:55:43 120  ,gbp_g30
20:55:43 121  ,gbp_g31
20:55:43 122  ,gbp_g32
20:55:43 123  ,gbp_g33
20:55:43 124  ,gbp_g34
20:55:43 125  ,gbp_g35
20:55:43 126  ,gbp_g36
20:55:43 127  ,gbp_g37
20:55:43 128  ,gbp_g38
20:55:43 129  ,gbp_g39
20:55:43 130  ,gbp_g40
20:55:43 131  ,gbp_g41
20:55:43 132  ,jpy_g00
20:55:43 133  ,jpy_g01
20:55:43 134  ,jpy_g02
20:55:43 135  ,jpy_g03
20:55:43 136  ,jpy_g04
20:55:43 137  ,jpy_g05
20:55:43 138  ,jpy_g06
20:55:43 139  ,jpy_g07
20:55:43 140  ,jpy_g08
20:55:43 141  ,jpy_g09
20:55:43 142  ,jpy_g10
20:55:43 143  ,jpy_g11
20:55:43 144  ,jpy_g12
20:55:43 145  ,jpy_g13
20:55:43 146  ,jpy_g14
20:55:43 147  ,jpy_g15
20:55:43 148  ,jpy_g16
20:55:43 149  ,jpy_g17
20:55:43 150  ,jpy_g18
20:55:43 151  ,jpy_g19
20:55:43 152  ,jpy_g20
20:55:43 153  ,jpy_g21
20:55:43 154  ,jpy_g22
20:55:43 155  ,jpy_g23
20:55:43 156  ,jpy_g24
20:55:43 157  ,jpy_g25
20:55:43 158  ,jpy_g26
20:55:43 159  ,jpy_g27
20:55:43 160  ,jpy_g28
20:55:43 161  ,jpy_g29
20:55:43 162  ,jpy_g30
20:55:43 163  ,jpy_g31
20:55:43 164  ,jpy_g32
20:55:43 165  ,jpy_g33
20:55:43 166  ,jpy_g34
20:55:43 167  ,jpy_g35
20:55:43 168  ,jpy_g36
20:55:43 169  ,jpy_g37
20:55:43 170  ,jpy_g38
20:55:43 171  ,jpy_g39
20:55:43 172  ,jpy_g40
20:55:43 173  ,jpy_g41
20:55:43 174  ,cad_g00
20:55:43 175  ,cad_g01
20:55:43 176  ,cad_g02
20:55:43 177  ,cad_g03
20:55:43 178  ,cad_g04
20:55:43 179  ,cad_g05
20:55:43 180  ,cad_g06
20:55:43 181  ,cad_g07
20:55:43 182  ,cad_g08
20:55:43 183  ,cad_g09
20:55:43 184  ,cad_g10
20:55:43 185  ,cad_g11
20:55:43 186  ,cad_g12
20:55:43 187  ,cad_g13
20:55:43 188  ,cad_g14
20:55:43 189  ,cad_g15
20:55:43 190  ,cad_g16
20:55:43 191  ,cad_g17
20:55:43 192  ,cad_g18
20:55:43 193  ,cad_g19
20:55:43 194  ,cad_g20
20:55:43 195  ,cad_g21
20:55:43 196  ,cad_g22
20:55:43 197  ,cad_g23
20:55:43 198  ,cad_g24
20:55:43 199  ,cad_g25
20:55:43 200  ,cad_g26
20:55:43 201  ,cad_g27
20:55:43 202  ,cad_g28
20:55:43 203  ,cad_g29
20:55:43 204  ,cad_g30
20:55:43 205  ,cad_g31
20:55:43 206  ,cad_g32
20:55:43 207  ,cad_g33
20:55:43 208  ,cad_g34
20:55:43 209  ,cad_g35
20:55:43 210  ,cad_g36
20:55:43 211  ,cad_g37
20:55:43 212  ,cad_g38
20:55:43 213  ,cad_g39
20:55:43 214  ,cad_g40
20:55:43 215  ,cad_g41
20:55:43 216  ,chf_g00
20:55:43 217  ,chf_g01
20:55:43 218  ,chf_g02
20:55:43 219  ,chf_g03
20:55:43 220  ,chf_g04
20:55:43 221  ,chf_g05
20:55:43 222  ,chf_g06
20:55:43 223  ,chf_g07
20:55:43 224  ,chf_g08
20:55:43 225  ,chf_g09
20:55:43 226  ,chf_g10
20:55:43 227  ,chf_g11
20:55:43 228  ,chf_g12
20:55:43 229  ,chf_g13
20:55:43 230  ,chf_g14
20:55:43 231  ,chf_g15
20:55:43 232  ,chf_g16
20:55:43 233  ,chf_g17
20:55:43 234  ,chf_g18
20:55:43 235  ,chf_g19
20:55:43 236  ,chf_g20
20:55:43 237  ,chf_g21
20:55:43 238  ,chf_g22
20:55:43 239  ,chf_g23
20:55:43 240  ,chf_g24
20:55:43 241  ,chf_g25
20:55:43 242  ,chf_g26
20:55:43 243  ,chf_g27
20:55:43 244  ,chf_g28
20:55:43 245  ,chf_g29
20:55:43 246  ,chf_g30
20:55:43 247  ,chf_g31
20:55:43 248  ,chf_g32
20:55:43 249  ,chf_g33
20:55:43 250  ,chf_g34
20:55:43 251  ,chf_g35
20:55:43 252  ,chf_g36
20:55:43 253  ,chf_g37
20:55:43 254  ,chf_g38
20:55:43 255  ,chf_g39
20:55:43 256  ,chf_g40
20:55:43 257  ,chf_g41
20:55:43 258  FROM aud_ms6 m
20:55:43 259  WHERE gatt IN('nup','up')
20:55:43 260  AND 1+m.ydate < '&1'||' '||'&2'
20:55:43 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'20:35:00'

View created.

Elapsed: 00:00:00.12
20:55:43 SQL> 
20:55:43 SQL> -- rpt
20:55:43 SQL> 
20:55:43 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
20:55:43   2  
20:55:43 SQL> SELECT MAX(prdate) FROM bme
20:55:43   2  
20:55:43 SQL> -- Now build model from bme and score sme
20:55:43 SQL> @score1.sql
20:55:43 SQL> -- score1.sql
20:55:43 SQL> 
20:55:43 SQL> -- Does the 1st SVM score
20:55:43 SQL> 
20:55:43 SQL> -- Fill up svmc_apply_prep
20:55:43 SQL> @score.sql
20:55:43 SQL> --
20:55:43 SQL> -- score.sql
20:55:43 SQL> --
20:55:43 SQL> 
20:55:43 SQL> -- usage: score.sql
20:55:43 SQL> 
20:55:43 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:55:43 SQL> 
20:55:43 SQL> DEFINE target	= 'gatt'
20:55:43 SQL> DEFINE model_name = 'forex14'
20:55:43 SQL> DEFINE bldtable	= 'bme'
20:55:43 SQL> DEFINE scoretable = 'sme'
20:55:43 SQL> DEFINE case_id	= 'prdate'
20:55:43 SQL> 
20:55:43 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:55:43 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:55:43 SQL> 
20:55:43 SQL> -- Builds an SVM model using pl/sql.
20:55:43 SQL> 
20:55:43 SQL> -----------------------------------------------------------------------
20:55:43 SQL> --			    BUILD THE MODEL
20:55:43 SQL> -----------------------------------------------------------------------
20:55:43 SQL> 
20:55:43 SQL> -- Cleanup old build data preparation objects for repeat runs
20:55:43 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
20:55:43 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:55:43 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
20:55:43 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
20:55:43 SQL> 
20:55:43 SQL> 
20:55:43 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:55:43 SQL> --
20:55:43 SQL> -- DROP	TABLE svmc_settings ;
20:55:43 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:55:43 SQL> -- DELETE svmc_settings;
20:55:43 SQL> 
20:55:43 SQL> -- The default classification algorithm is Naive Bayes. So override
20:55:43 SQL> -- this choice to SVM using a settings table.
20:55:43 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:55:43 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:55:43 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:55:43 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:55:43 SQL> -- models.
20:55:43 SQL> --
20:55:43 SQL> 
20:55:43 SQL> -- Do this once and then comment it out.
20:55:43 SQL> -- That makes script go faster.
20:55:43 SQL> -- BEGIN
20:55:43 SQL> -- -- Populate settings table
20:55:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:55:43 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:55:43 SQL> --
20:55:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:55:43 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:55:43 SQL> --
20:55:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:55:43 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:55:43 SQL> --   COMMIT;
20:55:43 SQL> -- END;
20:55:43 SQL> -- /
20:55:43 SQL> 
20:55:43 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:55:43 SQL> 
20:55:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:55:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:55:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:55:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:55:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:55:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:55:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:55:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:55:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:55:44 SQL> 
20:55:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:55:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:55:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:55:44 SQL> 
20:55:44 SQL> --------------------------------
20:55:44 SQL> -- PREPARE BUILD (TRAINING) DATA
20:55:44 SQL> --
20:55:44 SQL> 
20:55:44 SQL> -- 1. Missing Value treatment for all Predictors and
20:55:44 SQL> -- 2. Outlier Treatment and
20:55:44 SQL> -- 3. Normalization are performed below.
20:55:44 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:55:44 SQL> --    normalized here.
20:55:44 SQL> 
20:55:44 SQL> BEGIN
20:55:44   2  	-- Perform missing value treatment for all predictors
20:55:44   3  	-- create miss tables
20:55:44   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:55:44   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:55:44   6  
20:55:44   7  	-- populate miss tables
20:55:44   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:55:44   9  	  miss_table_name => 'svmc_miss_num',
20:55:44  10  	  data_table_name => '&bldtable',
20:55:44  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:55:44  12  
20:55:44  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:55:44  14  	  miss_table_name => 'svmc_miss_cat',
20:55:44  15  	  data_table_name => '&bldtable',
20:55:44  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:55:44  17  
20:55:44  18  	-- xform input data to replace missing values
20:55:44  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:55:44  20  	  miss_table_name => 'svmc_miss_num',
20:55:44  21  	  data_table_name => '&bldtable',
20:55:44  22  	  xform_view_name => 'xformed_build_miss_num');
20:55:44  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:55:44  24  	  miss_table_name => 'svmc_miss_cat',
20:55:44  25  	  data_table_name => '&bldtable',
20:55:44  26  	  xform_view_name => 'xformed_build_miss_cat');
20:55:44  27  
20:55:44  28  	-- Perform outlier treatment.
20:55:44  29  	-- create clip table
20:55:44  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:55:44  31  
20:55:44  32  	-- populate clip table
20:55:44  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:55:44  34  	  clip_table_name => 'svmc_clip',
20:55:44  35  	  data_table_name => '&bldtable',
20:55:44  36  	  tail_frac	  => 0.025,
20:55:44  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:55:44  38  
20:55:44  39  	-- xform input data to winsorized data
20:55:44  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:55:44  41  	  clip_table_name => 'svmc_clip',
20:55:44  42  	  data_table_name => '&bldtable',
20:55:44  43  	  xform_view_name => 'svmc_winsor');
20:55:44  44  
20:55:44  45  	-- create normalization table
20:55:44  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:55:44  47  
20:55:44  48  	-- populate normalization table based on winsorized data
20:55:44  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:55:44  50  	  norm_table_name => 'svmc_norm',
20:55:44  51  	  data_table_name => 'svmc_winsor',
20:55:44  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:55:44  53  
20:55:44  54  	-- normalize the original data
20:55:44  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:55:44  56  	  norm_table_name => 'svmc_norm',
20:55:44  57  	  data_table_name => '&bldtable',
20:55:44  58  	  xform_view_name => 'svmc_build_prep');
20:55:44  59  END;
20:55:44  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.62
20:56:02 SQL> 
20:56:02 SQL> ---------------------
20:56:02 SQL> -- CREATE A NEW MODEL
20:56:02 SQL> --
20:56:02 SQL> -- Cleanup old model with the same name for repeat runs
20:56:02 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:56:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:56:02   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.53
20:56:03 SQL> 
20:56:03 SQL> -- Build a new SVM Model
20:56:03 SQL> BEGIN
20:56:03   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:56:03   3  	  model_name	      => '&model_name',
20:56:03   4  	  mining_function     => dbms_data_mining.classification,
20:56:03   5  	  data_table_name     => 'svmc_build_prep',
20:56:03   6  	  case_id_column_name => '&case_id',
20:56:03   7  	  target_column_name  => '&target',
20:56:03   8  	  settings_table_name => 'svmc_settings');
20:56:03   9  END;
20:56:03  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.56
20:56:31 SQL> 
20:56:31 SQL> -----------------------------------------------------------------------
20:56:31 SQL> --			       APPLY/score THE MODEL
20:56:31 SQL> -----------------------------------------------------------------------
20:56:31 SQL> 
20:56:31 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:56:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:56:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:56:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:56:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:56:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:56:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
20:56:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:56:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:56:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:56:32 SQL> -----------------------
20:56:32 SQL> -- PREPARE SCORING DATA
20:56:32 SQL> --
20:56:32 SQL> -- If the data for model creation has been prepared, then the data
20:56:32 SQL> -- to be scored using the model must be prepared in the same manner
20:56:32 SQL> -- in order to obtain meaningful results.
20:56:32 SQL> --
20:56:32 SQL> -- 1. Missing Value treatment for all Predictors and
20:56:32 SQL> -- 2. Normalization
20:56:32 SQL> -- No outlier treatment will be performed during test and apply. The
20:56:32 SQL> -- normalization step is sufficient, since the normalization parameters
20:56:32 SQL> -- already capture the effects of outlier treatment done with build data.
20:56:32 SQL> --
20:56:32 SQL> BEGIN
20:56:32   2  	-- Xform Test data to replace missing values
20:56:32   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:56:32   4  	  miss_table_name => 'svmc_miss_num',
20:56:32   5  	  data_table_name => '&scoretable',
20:56:32   6  	  xform_view_name => 'xformed_apply_miss_num');
20:56:32   7  
20:56:32   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:56:32   9  	  miss_table_name => 'svmc_miss_cat',
20:56:32  10  	  data_table_name => '&scoretable',
20:56:32  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:56:32  12  
20:56:32  13  	-- Normalize the data to be scored
20:56:32  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:56:32  15  	  norm_table_name => 'svmc_norm',
20:56:32  16  	  data_table_name => '&scoretable',
20:56:32  17  	  xform_view_name => 'svmc_apply_prep');
20:56:32  18  END;
20:56:32  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
20:56:33 SQL> 
20:56:33 SQL> -- Use same model_name used in score.sql
20:56:33 SQL> DEFINE model_name = 'forex14'
20:56:33 SQL> 
20:56:33 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
20:56:33 SQL> 
20:56:33 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
20:56:33 SQL> 
20:56:33 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
20:56:33   2  SELECT
20:56:33   3  prdate
20:56:33   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:56:33   5  ,sysdate
20:56:33   6  ,SUBSTR(prdate,1,3)pair
20:56:33   7  ,SUBSTR(prdate,4,19)ydate
20:56:33   8  FROM svmc_apply_prep
20:56:33   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
20:56:33 SQL> @aud_score1day.sql  2010-12-30 20:40:00
20:56:33 SQL> --
20:56:33 SQL> -- aud_score1day.sql
20:56:33 SQL> --
20:56:33 SQL> 
20:56:33 SQL> CREATE OR REPLACE VIEW sme AS
20:56:33   2  SELECT
20:56:33   3  'aud'||m.ydate prdate
20:56:33   4  ,NULL gatt
20:56:33   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:56:33   6  ,eur_g00
20:56:33   7  ,eur_g01
20:56:33   8  ,eur_g02
20:56:33   9  ,eur_g03
20:56:33  10  ,eur_g04
20:56:33  11  ,eur_g05
20:56:33  12  ,eur_g06
20:56:33  13  ,eur_g07
20:56:33  14  ,eur_g08
20:56:33  15  ,eur_g09
20:56:33  16  ,eur_g10
20:56:33  17  ,eur_g11
20:56:33  18  ,eur_g12
20:56:33  19  ,eur_g13
20:56:33  20  ,eur_g14
20:56:33  21  ,eur_g15
20:56:33  22  ,eur_g16
20:56:33  23  ,eur_g17
20:56:33  24  ,eur_g18
20:56:33  25  ,eur_g19
20:56:33  26  ,eur_g20
20:56:33  27  ,eur_g21
20:56:33  28  ,eur_g22
20:56:33  29  ,eur_g23
20:56:33  30  ,eur_g24
20:56:33  31  ,eur_g25
20:56:33  32  ,eur_g26
20:56:33  33  ,eur_g27
20:56:33  34  ,eur_g28
20:56:33  35  ,eur_g29
20:56:33  36  ,eur_g30
20:56:33  37  ,eur_g31
20:56:33  38  ,eur_g32
20:56:33  39  ,eur_g33
20:56:33  40  ,eur_g34
20:56:33  41  ,eur_g35
20:56:33  42  ,eur_g36
20:56:33  43  ,eur_g37
20:56:33  44  ,eur_g38
20:56:33  45  ,eur_g39
20:56:33  46  ,eur_g40
20:56:33  47  ,eur_g41
20:56:33  48  ,aud_g00
20:56:33  49  ,aud_g01
20:56:33  50  ,aud_g02
20:56:33  51  ,aud_g03
20:56:33  52  ,aud_g04
20:56:33  53  ,aud_g05
20:56:33  54  ,aud_g06
20:56:33  55  ,aud_g07
20:56:33  56  ,aud_g08
20:56:33  57  ,aud_g09
20:56:33  58  ,aud_g10
20:56:33  59  ,aud_g11
20:56:33  60  ,aud_g12
20:56:33  61  ,aud_g13
20:56:33  62  ,aud_g14
20:56:33  63  ,aud_g15
20:56:33  64  ,aud_g16
20:56:33  65  ,aud_g17
20:56:33  66  ,aud_g18
20:56:33  67  ,aud_g19
20:56:33  68  ,aud_g20
20:56:33  69  ,aud_g21
20:56:33  70  ,aud_g22
20:56:33  71  ,aud_g23
20:56:33  72  ,aud_g24
20:56:33  73  ,aud_g25
20:56:33  74  ,aud_g26
20:56:33  75  ,aud_g27
20:56:33  76  ,aud_g28
20:56:33  77  ,aud_g29
20:56:33  78  ,aud_g30
20:56:33  79  ,aud_g31
20:56:33  80  ,aud_g32
20:56:33  81  ,aud_g33
20:56:33  82  ,aud_g34
20:56:33  83  ,aud_g35
20:56:33  84  ,aud_g36
20:56:33  85  ,aud_g37
20:56:33  86  ,aud_g38
20:56:33  87  ,aud_g39
20:56:33  88  ,aud_g40
20:56:33  89  ,aud_g41
20:56:33  90  ,gbp_g00
20:56:33  91  ,gbp_g01
20:56:33  92  ,gbp_g02
20:56:33  93  ,gbp_g03
20:56:33  94  ,gbp_g04
20:56:33  95  ,gbp_g05
20:56:33  96  ,gbp_g06
20:56:33  97  ,gbp_g07
20:56:33  98  ,gbp_g08
20:56:33  99  ,gbp_g09
20:56:33 100  ,gbp_g10
20:56:33 101  ,gbp_g11
20:56:33 102  ,gbp_g12
20:56:33 103  ,gbp_g13
20:56:33 104  ,gbp_g14
20:56:33 105  ,gbp_g15
20:56:33 106  ,gbp_g16
20:56:33 107  ,gbp_g17
20:56:33 108  ,gbp_g18
20:56:33 109  ,gbp_g19
20:56:33 110  ,gbp_g20
20:56:33 111  ,gbp_g21
20:56:33 112  ,gbp_g22
20:56:33 113  ,gbp_g23
20:56:33 114  ,gbp_g24
20:56:33 115  ,gbp_g25
20:56:33 116  ,gbp_g26
20:56:33 117  ,gbp_g27
20:56:33 118  ,gbp_g28
20:56:33 119  ,gbp_g29
20:56:33 120  ,gbp_g30
20:56:33 121  ,gbp_g31
20:56:33 122  ,gbp_g32
20:56:33 123  ,gbp_g33
20:56:33 124  ,gbp_g34
20:56:33 125  ,gbp_g35
20:56:33 126  ,gbp_g36
20:56:33 127  ,gbp_g37
20:56:33 128  ,gbp_g38
20:56:33 129  ,gbp_g39
20:56:33 130  ,gbp_g40
20:56:33 131  ,gbp_g41
20:56:33 132  ,jpy_g00
20:56:33 133  ,jpy_g01
20:56:33 134  ,jpy_g02
20:56:33 135  ,jpy_g03
20:56:33 136  ,jpy_g04
20:56:33 137  ,jpy_g05
20:56:33 138  ,jpy_g06
20:56:33 139  ,jpy_g07
20:56:33 140  ,jpy_g08
20:56:33 141  ,jpy_g09
20:56:33 142  ,jpy_g10
20:56:33 143  ,jpy_g11
20:56:33 144  ,jpy_g12
20:56:33 145  ,jpy_g13
20:56:33 146  ,jpy_g14
20:56:33 147  ,jpy_g15
20:56:33 148  ,jpy_g16
20:56:33 149  ,jpy_g17
20:56:33 150  ,jpy_g18
20:56:33 151  ,jpy_g19
20:56:33 152  ,jpy_g20
20:56:33 153  ,jpy_g21
20:56:33 154  ,jpy_g22
20:56:33 155  ,jpy_g23
20:56:33 156  ,jpy_g24
20:56:33 157  ,jpy_g25
20:56:33 158  ,jpy_g26
20:56:33 159  ,jpy_g27
20:56:33 160  ,jpy_g28
20:56:33 161  ,jpy_g29
20:56:33 162  ,jpy_g30
20:56:33 163  ,jpy_g31
20:56:33 164  ,jpy_g32
20:56:33 165  ,jpy_g33
20:56:33 166  ,jpy_g34
20:56:33 167  ,jpy_g35
20:56:33 168  ,jpy_g36
20:56:33 169  ,jpy_g37
20:56:33 170  ,jpy_g38
20:56:33 171  ,jpy_g39
20:56:33 172  ,jpy_g40
20:56:33 173  ,jpy_g41
20:56:33 174  ,cad_g00
20:56:33 175  ,cad_g01
20:56:33 176  ,cad_g02
20:56:33 177  ,cad_g03
20:56:33 178  ,cad_g04
20:56:33 179  ,cad_g05
20:56:33 180  ,cad_g06
20:56:33 181  ,cad_g07
20:56:33 182  ,cad_g08
20:56:33 183  ,cad_g09
20:56:33 184  ,cad_g10
20:56:33 185  ,cad_g11
20:56:33 186  ,cad_g12
20:56:33 187  ,cad_g13
20:56:33 188  ,cad_g14
20:56:33 189  ,cad_g15
20:56:33 190  ,cad_g16
20:56:33 191  ,cad_g17
20:56:33 192  ,cad_g18
20:56:33 193  ,cad_g19
20:56:33 194  ,cad_g20
20:56:33 195  ,cad_g21
20:56:33 196  ,cad_g22
20:56:33 197  ,cad_g23
20:56:33 198  ,cad_g24
20:56:33 199  ,cad_g25
20:56:33 200  ,cad_g26
20:56:33 201  ,cad_g27
20:56:33 202  ,cad_g28
20:56:33 203  ,cad_g29
20:56:33 204  ,cad_g30
20:56:33 205  ,cad_g31
20:56:33 206  ,cad_g32
20:56:33 207  ,cad_g33
20:56:33 208  ,cad_g34
20:56:33 209  ,cad_g35
20:56:33 210  ,cad_g36
20:56:33 211  ,cad_g37
20:56:33 212  ,cad_g38
20:56:33 213  ,cad_g39
20:56:33 214  ,cad_g40
20:56:33 215  ,cad_g41
20:56:33 216  ,chf_g00
20:56:33 217  ,chf_g01
20:56:33 218  ,chf_g02
20:56:33 219  ,chf_g03
20:56:33 220  ,chf_g04
20:56:33 221  ,chf_g05
20:56:33 222  ,chf_g06
20:56:33 223  ,chf_g07
20:56:33 224  ,chf_g08
20:56:33 225  ,chf_g09
20:56:33 226  ,chf_g10
20:56:33 227  ,chf_g11
20:56:33 228  ,chf_g12
20:56:33 229  ,chf_g13
20:56:33 230  ,chf_g14
20:56:33 231  ,chf_g15
20:56:33 232  ,chf_g16
20:56:33 233  ,chf_g17
20:56:33 234  ,chf_g18
20:56:33 235  ,chf_g19
20:56:33 236  ,chf_g20
20:56:33 237  ,chf_g21
20:56:33 238  ,chf_g22
20:56:33 239  ,chf_g23
20:56:33 240  ,chf_g24
20:56:33 241  ,chf_g25
20:56:33 242  ,chf_g26
20:56:33 243  ,chf_g27
20:56:33 244  ,chf_g28
20:56:33 245  ,chf_g29
20:56:33 246  ,chf_g30
20:56:33 247  ,chf_g31
20:56:33 248  ,chf_g32
20:56:33 249  ,chf_g33
20:56:33 250  ,chf_g34
20:56:33 251  ,chf_g35
20:56:33 252  ,chf_g36
20:56:33 253  ,chf_g37
20:56:33 254  ,chf_g38
20:56:33 255  ,chf_g39
20:56:33 256  ,chf_g40
20:56:33 257  ,chf_g41
20:56:33 258  FROM aud_ms6 m
20:56:33 259  WHERE m.ydate = '&1'||' '||'&2'
20:56:33 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'20:40:00'

View created.

Elapsed: 00:00:00.11
20:56:33 SQL> 
20:56:33 SQL> -- rpt
20:56:33 SQL> -- We should see just 1 row:
20:56:33 SQL> 
20:56:33 SQL> SELECT COUNT(prdate) FROM sme
20:56:33   2  
20:56:33 SQL> -- Build the model:
20:56:33 SQL> CREATE OR REPLACE VIEW bme AS
20:56:33   2  SELECT
20:56:33   3  'aud'||m.ydate prdate
20:56:33   4  ,gatt
20:56:33   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:56:33   6  ,eur_g00
20:56:33   7  ,eur_g01
20:56:33   8  ,eur_g02
20:56:33   9  ,eur_g03
20:56:33  10  ,eur_g04
20:56:33  11  ,eur_g05
20:56:33  12  ,eur_g06
20:56:33  13  ,eur_g07
20:56:33  14  ,eur_g08
20:56:33  15  ,eur_g09
20:56:33  16  ,eur_g10
20:56:33  17  ,eur_g11
20:56:33  18  ,eur_g12
20:56:33  19  ,eur_g13
20:56:33  20  ,eur_g14
20:56:33  21  ,eur_g15
20:56:33  22  ,eur_g16
20:56:33  23  ,eur_g17
20:56:33  24  ,eur_g18
20:56:33  25  ,eur_g19
20:56:33  26  ,eur_g20
20:56:33  27  ,eur_g21
20:56:33  28  ,eur_g22
20:56:33  29  ,eur_g23
20:56:33  30  ,eur_g24
20:56:33  31  ,eur_g25
20:56:33  32  ,eur_g26
20:56:33  33  ,eur_g27
20:56:33  34  ,eur_g28
20:56:33  35  ,eur_g29
20:56:33  36  ,eur_g30
20:56:33  37  ,eur_g31
20:56:33  38  ,eur_g32
20:56:33  39  ,eur_g33
20:56:33  40  ,eur_g34
20:56:33  41  ,eur_g35
20:56:33  42  ,eur_g36
20:56:33  43  ,eur_g37
20:56:33  44  ,eur_g38
20:56:33  45  ,eur_g39
20:56:33  46  ,eur_g40
20:56:33  47  ,eur_g41
20:56:33  48  ,aud_g00
20:56:33  49  ,aud_g01
20:56:33  50  ,aud_g02
20:56:33  51  ,aud_g03
20:56:33  52  ,aud_g04
20:56:33  53  ,aud_g05
20:56:33  54  ,aud_g06
20:56:33  55  ,aud_g07
20:56:33  56  ,aud_g08
20:56:33  57  ,aud_g09
20:56:33  58  ,aud_g10
20:56:33  59  ,aud_g11
20:56:33  60  ,aud_g12
20:56:33  61  ,aud_g13
20:56:33  62  ,aud_g14
20:56:33  63  ,aud_g15
20:56:33  64  ,aud_g16
20:56:33  65  ,aud_g17
20:56:33  66  ,aud_g18
20:56:33  67  ,aud_g19
20:56:33  68  ,aud_g20
20:56:33  69  ,aud_g21
20:56:33  70  ,aud_g22
20:56:33  71  ,aud_g23
20:56:33  72  ,aud_g24
20:56:33  73  ,aud_g25
20:56:33  74  ,aud_g26
20:56:33  75  ,aud_g27
20:56:33  76  ,aud_g28
20:56:33  77  ,aud_g29
20:56:33  78  ,aud_g30
20:56:33  79  ,aud_g31
20:56:33  80  ,aud_g32
20:56:33  81  ,aud_g33
20:56:33  82  ,aud_g34
20:56:33  83  ,aud_g35
20:56:33  84  ,aud_g36
20:56:33  85  ,aud_g37
20:56:33  86  ,aud_g38
20:56:33  87  ,aud_g39
20:56:33  88  ,aud_g40
20:56:33  89  ,aud_g41
20:56:33  90  ,gbp_g00
20:56:33  91  ,gbp_g01
20:56:33  92  ,gbp_g02
20:56:33  93  ,gbp_g03
20:56:33  94  ,gbp_g04
20:56:33  95  ,gbp_g05
20:56:33  96  ,gbp_g06
20:56:33  97  ,gbp_g07
20:56:33  98  ,gbp_g08
20:56:33  99  ,gbp_g09
20:56:33 100  ,gbp_g10
20:56:33 101  ,gbp_g11
20:56:33 102  ,gbp_g12
20:56:33 103  ,gbp_g13
20:56:33 104  ,gbp_g14
20:56:33 105  ,gbp_g15
20:56:33 106  ,gbp_g16
20:56:33 107  ,gbp_g17
20:56:33 108  ,gbp_g18
20:56:33 109  ,gbp_g19
20:56:33 110  ,gbp_g20
20:56:33 111  ,gbp_g21
20:56:33 112  ,gbp_g22
20:56:33 113  ,gbp_g23
20:56:33 114  ,gbp_g24
20:56:33 115  ,gbp_g25
20:56:33 116  ,gbp_g26
20:56:33 117  ,gbp_g27
20:56:33 118  ,gbp_g28
20:56:33 119  ,gbp_g29
20:56:33 120  ,gbp_g30
20:56:33 121  ,gbp_g31
20:56:33 122  ,gbp_g32
20:56:33 123  ,gbp_g33
20:56:33 124  ,gbp_g34
20:56:33 125  ,gbp_g35
20:56:33 126  ,gbp_g36
20:56:33 127  ,gbp_g37
20:56:33 128  ,gbp_g38
20:56:33 129  ,gbp_g39
20:56:33 130  ,gbp_g40
20:56:33 131  ,gbp_g41
20:56:33 132  ,jpy_g00
20:56:33 133  ,jpy_g01
20:56:33 134  ,jpy_g02
20:56:33 135  ,jpy_g03
20:56:33 136  ,jpy_g04
20:56:33 137  ,jpy_g05
20:56:33 138  ,jpy_g06
20:56:33 139  ,jpy_g07
20:56:33 140  ,jpy_g08
20:56:33 141  ,jpy_g09
20:56:33 142  ,jpy_g10
20:56:33 143  ,jpy_g11
20:56:33 144  ,jpy_g12
20:56:33 145  ,jpy_g13
20:56:33 146  ,jpy_g14
20:56:33 147  ,jpy_g15
20:56:33 148  ,jpy_g16
20:56:33 149  ,jpy_g17
20:56:33 150  ,jpy_g18
20:56:33 151  ,jpy_g19
20:56:33 152  ,jpy_g20
20:56:33 153  ,jpy_g21
20:56:33 154  ,jpy_g22
20:56:33 155  ,jpy_g23
20:56:33 156  ,jpy_g24
20:56:33 157  ,jpy_g25
20:56:33 158  ,jpy_g26
20:56:33 159  ,jpy_g27
20:56:33 160  ,jpy_g28
20:56:33 161  ,jpy_g29
20:56:33 162  ,jpy_g30
20:56:33 163  ,jpy_g31
20:56:33 164  ,jpy_g32
20:56:33 165  ,jpy_g33
20:56:33 166  ,jpy_g34
20:56:33 167  ,jpy_g35
20:56:33 168  ,jpy_g36
20:56:33 169  ,jpy_g37
20:56:33 170  ,jpy_g38
20:56:33 171  ,jpy_g39
20:56:33 172  ,jpy_g40
20:56:33 173  ,jpy_g41
20:56:33 174  ,cad_g00
20:56:33 175  ,cad_g01
20:56:33 176  ,cad_g02
20:56:33 177  ,cad_g03
20:56:33 178  ,cad_g04
20:56:33 179  ,cad_g05
20:56:33 180  ,cad_g06
20:56:33 181  ,cad_g07
20:56:33 182  ,cad_g08
20:56:33 183  ,cad_g09
20:56:33 184  ,cad_g10
20:56:33 185  ,cad_g11
20:56:33 186  ,cad_g12
20:56:33 187  ,cad_g13
20:56:33 188  ,cad_g14
20:56:33 189  ,cad_g15
20:56:33 190  ,cad_g16
20:56:33 191  ,cad_g17
20:56:33 192  ,cad_g18
20:56:33 193  ,cad_g19
20:56:33 194  ,cad_g20
20:56:33 195  ,cad_g21
20:56:33 196  ,cad_g22
20:56:33 197  ,cad_g23
20:56:33 198  ,cad_g24
20:56:33 199  ,cad_g25
20:56:33 200  ,cad_g26
20:56:33 201  ,cad_g27
20:56:33 202  ,cad_g28
20:56:33 203  ,cad_g29
20:56:33 204  ,cad_g30
20:56:33 205  ,cad_g31
20:56:33 206  ,cad_g32
20:56:33 207  ,cad_g33
20:56:33 208  ,cad_g34
20:56:33 209  ,cad_g35
20:56:33 210  ,cad_g36
20:56:33 211  ,cad_g37
20:56:33 212  ,cad_g38
20:56:33 213  ,cad_g39
20:56:33 214  ,cad_g40
20:56:33 215  ,cad_g41
20:56:33 216  ,chf_g00
20:56:33 217  ,chf_g01
20:56:33 218  ,chf_g02
20:56:33 219  ,chf_g03
20:56:33 220  ,chf_g04
20:56:33 221  ,chf_g05
20:56:33 222  ,chf_g06
20:56:33 223  ,chf_g07
20:56:33 224  ,chf_g08
20:56:33 225  ,chf_g09
20:56:33 226  ,chf_g10
20:56:33 227  ,chf_g11
20:56:33 228  ,chf_g12
20:56:33 229  ,chf_g13
20:56:33 230  ,chf_g14
20:56:33 231  ,chf_g15
20:56:33 232  ,chf_g16
20:56:33 233  ,chf_g17
20:56:33 234  ,chf_g18
20:56:33 235  ,chf_g19
20:56:33 236  ,chf_g20
20:56:33 237  ,chf_g21
20:56:33 238  ,chf_g22
20:56:33 239  ,chf_g23
20:56:33 240  ,chf_g24
20:56:33 241  ,chf_g25
20:56:33 242  ,chf_g26
20:56:33 243  ,chf_g27
20:56:33 244  ,chf_g28
20:56:33 245  ,chf_g29
20:56:33 246  ,chf_g30
20:56:33 247  ,chf_g31
20:56:33 248  ,chf_g32
20:56:33 249  ,chf_g33
20:56:33 250  ,chf_g34
20:56:33 251  ,chf_g35
20:56:33 252  ,chf_g36
20:56:33 253  ,chf_g37
20:56:33 254  ,chf_g38
20:56:33 255  ,chf_g39
20:56:33 256  ,chf_g40
20:56:33 257  ,chf_g41
20:56:33 258  FROM aud_ms6 m
20:56:33 259  WHERE gatt IN('nup','up')
20:56:33 260  AND 1+m.ydate < '&1'||' '||'&2'
20:56:33 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'20:40:00'

View created.

Elapsed: 00:00:00.13
20:56:33 SQL> 
20:56:33 SQL> -- rpt
20:56:33 SQL> 
20:56:33 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
20:56:33   2  
20:56:33 SQL> SELECT MAX(prdate) FROM bme
20:56:33   2  
20:56:33 SQL> -- Now build model from bme and score sme
20:56:33 SQL> @score1.sql
20:56:33 SQL> -- score1.sql
20:56:33 SQL> 
20:56:33 SQL> -- Does the 1st SVM score
20:56:33 SQL> 
20:56:33 SQL> -- Fill up svmc_apply_prep
20:56:33 SQL> @score.sql
20:56:33 SQL> --
20:56:33 SQL> -- score.sql
20:56:33 SQL> --
20:56:33 SQL> 
20:56:33 SQL> -- usage: score.sql
20:56:33 SQL> 
20:56:33 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:56:33 SQL> 
20:56:33 SQL> DEFINE target	= 'gatt'
20:56:33 SQL> DEFINE model_name = 'forex14'
20:56:33 SQL> DEFINE bldtable	= 'bme'
20:56:33 SQL> DEFINE scoretable = 'sme'
20:56:33 SQL> DEFINE case_id	= 'prdate'
20:56:33 SQL> 
20:56:33 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:56:33 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:56:33 SQL> 
20:56:33 SQL> -- Builds an SVM model using pl/sql.
20:56:33 SQL> 
20:56:33 SQL> -----------------------------------------------------------------------
20:56:33 SQL> --			    BUILD THE MODEL
20:56:33 SQL> -----------------------------------------------------------------------
20:56:33 SQL> 
20:56:33 SQL> -- Cleanup old build data preparation objects for repeat runs
20:56:33 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
20:56:33 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:56:33 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
20:56:33 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
20:56:33 SQL> 
20:56:33 SQL> 
20:56:33 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:56:33 SQL> --
20:56:33 SQL> -- DROP	TABLE svmc_settings ;
20:56:33 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:56:33 SQL> -- DELETE svmc_settings;
20:56:33 SQL> 
20:56:33 SQL> -- The default classification algorithm is Naive Bayes. So override
20:56:33 SQL> -- this choice to SVM using a settings table.
20:56:33 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:56:33 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:56:33 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:56:33 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:56:33 SQL> -- models.
20:56:33 SQL> --
20:56:33 SQL> 
20:56:33 SQL> -- Do this once and then comment it out.
20:56:33 SQL> -- That makes script go faster.
20:56:33 SQL> -- BEGIN
20:56:33 SQL> -- -- Populate settings table
20:56:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:56:33 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:56:33 SQL> --
20:56:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:56:33 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:56:33 SQL> --
20:56:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:56:33 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:56:33 SQL> --   COMMIT;
20:56:33 SQL> -- END;
20:56:33 SQL> -- /
20:56:33 SQL> 
20:56:33 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:56:33 SQL> 
20:56:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:56:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:56:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:56:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:56:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:56:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:56:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:56:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:56:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:56:34 SQL> 
20:56:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:56:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:56:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:56:34 SQL> 
20:56:34 SQL> --------------------------------
20:56:34 SQL> -- PREPARE BUILD (TRAINING) DATA
20:56:34 SQL> --
20:56:34 SQL> 
20:56:34 SQL> -- 1. Missing Value treatment for all Predictors and
20:56:34 SQL> -- 2. Outlier Treatment and
20:56:34 SQL> -- 3. Normalization are performed below.
20:56:34 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:56:34 SQL> --    normalized here.
20:56:34 SQL> 
20:56:34 SQL> BEGIN
20:56:34   2  	-- Perform missing value treatment for all predictors
20:56:34   3  	-- create miss tables
20:56:34   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:56:34   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:56:34   6  
20:56:34   7  	-- populate miss tables
20:56:34   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:56:34   9  	  miss_table_name => 'svmc_miss_num',
20:56:34  10  	  data_table_name => '&bldtable',
20:56:34  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:56:34  12  
20:56:34  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:56:34  14  	  miss_table_name => 'svmc_miss_cat',
20:56:34  15  	  data_table_name => '&bldtable',
20:56:34  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:56:34  17  
20:56:34  18  	-- xform input data to replace missing values
20:56:34  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:56:34  20  	  miss_table_name => 'svmc_miss_num',
20:56:34  21  	  data_table_name => '&bldtable',
20:56:34  22  	  xform_view_name => 'xformed_build_miss_num');
20:56:34  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:56:34  24  	  miss_table_name => 'svmc_miss_cat',
20:56:34  25  	  data_table_name => '&bldtable',
20:56:34  26  	  xform_view_name => 'xformed_build_miss_cat');
20:56:34  27  
20:56:34  28  	-- Perform outlier treatment.
20:56:34  29  	-- create clip table
20:56:34  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:56:34  31  
20:56:34  32  	-- populate clip table
20:56:34  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:56:34  34  	  clip_table_name => 'svmc_clip',
20:56:34  35  	  data_table_name => '&bldtable',
20:56:34  36  	  tail_frac	  => 0.025,
20:56:34  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:56:34  38  
20:56:34  39  	-- xform input data to winsorized data
20:56:34  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:56:34  41  	  clip_table_name => 'svmc_clip',
20:56:34  42  	  data_table_name => '&bldtable',
20:56:34  43  	  xform_view_name => 'svmc_winsor');
20:56:34  44  
20:56:34  45  	-- create normalization table
20:56:34  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:56:34  47  
20:56:34  48  	-- populate normalization table based on winsorized data
20:56:34  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:56:34  50  	  norm_table_name => 'svmc_norm',
20:56:34  51  	  data_table_name => 'svmc_winsor',
20:56:34  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:56:34  53  
20:56:34  54  	-- normalize the original data
20:56:34  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:56:34  56  	  norm_table_name => 'svmc_norm',
20:56:34  57  	  data_table_name => '&bldtable',
20:56:34  58  	  xform_view_name => 'svmc_build_prep');
20:56:34  59  END;
20:56:34  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:21.56
20:56:55 SQL> 
20:56:55 SQL> ---------------------
20:56:55 SQL> -- CREATE A NEW MODEL
20:56:55 SQL> --
20:56:55 SQL> -- Cleanup old model with the same name for repeat runs
20:56:55 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:56:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:56:55   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.08
20:56:56 SQL> 
20:56:56 SQL> -- Build a new SVM Model
20:56:56 SQL> BEGIN
20:56:56   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:56:56   3  	  model_name	      => '&model_name',
20:56:56   4  	  mining_function     => dbms_data_mining.classification,
20:56:56   5  	  data_table_name     => 'svmc_build_prep',
20:56:56   6  	  case_id_column_name => '&case_id',
20:56:56   7  	  target_column_name  => '&target',
20:56:56   8  	  settings_table_name => 'svmc_settings');
20:56:56   9  END;
20:56:56  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.37
20:57:26 SQL> 
20:57:26 SQL> -----------------------------------------------------------------------
20:57:26 SQL> --			       APPLY/score THE MODEL
20:57:26 SQL> -----------------------------------------------------------------------
20:57:26 SQL> 
20:57:26 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:57:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:57:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:57:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:57:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:57:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:57:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:57:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:57:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:57:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:57:26 SQL> -----------------------
20:57:26 SQL> -- PREPARE SCORING DATA
20:57:26 SQL> --
20:57:26 SQL> -- If the data for model creation has been prepared, then the data
20:57:26 SQL> -- to be scored using the model must be prepared in the same manner
20:57:26 SQL> -- in order to obtain meaningful results.
20:57:26 SQL> --
20:57:26 SQL> -- 1. Missing Value treatment for all Predictors and
20:57:26 SQL> -- 2. Normalization
20:57:26 SQL> -- No outlier treatment will be performed during test and apply. The
20:57:26 SQL> -- normalization step is sufficient, since the normalization parameters
20:57:26 SQL> -- already capture the effects of outlier treatment done with build data.
20:57:26 SQL> --
20:57:26 SQL> BEGIN
20:57:26   2  	-- Xform Test data to replace missing values
20:57:26   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:57:26   4  	  miss_table_name => 'svmc_miss_num',
20:57:26   5  	  data_table_name => '&scoretable',
20:57:26   6  	  xform_view_name => 'xformed_apply_miss_num');
20:57:26   7  
20:57:26   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:57:26   9  	  miss_table_name => 'svmc_miss_cat',
20:57:26  10  	  data_table_name => '&scoretable',
20:57:26  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:57:26  12  
20:57:26  13  	-- Normalize the data to be scored
20:57:26  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:57:26  15  	  norm_table_name => 'svmc_norm',
20:57:26  16  	  data_table_name => '&scoretable',
20:57:26  17  	  xform_view_name => 'svmc_apply_prep');
20:57:26  18  END;
20:57:26  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.25
20:57:27 SQL> 
20:57:27 SQL> -- Use same model_name used in score.sql
20:57:27 SQL> DEFINE model_name = 'forex14'
20:57:27 SQL> 
20:57:27 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
20:57:27 SQL> 
20:57:27 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
20:57:27 SQL> 
20:57:27 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
20:57:27   2  SELECT
20:57:27   3  prdate
20:57:27   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:57:27   5  ,sysdate
20:57:27   6  ,SUBSTR(prdate,1,3)pair
20:57:27   7  ,SUBSTR(prdate,4,19)ydate
20:57:27   8  FROM svmc_apply_prep
20:57:27   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
20:57:27 SQL> @aud_score1day.sql  2010-12-30 20:45:00
20:57:27 SQL> --
20:57:27 SQL> -- aud_score1day.sql
20:57:27 SQL> --
20:57:27 SQL> 
20:57:27 SQL> CREATE OR REPLACE VIEW sme AS
20:57:27   2  SELECT
20:57:27   3  'aud'||m.ydate prdate
20:57:27   4  ,NULL gatt
20:57:27   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:57:27   6  ,eur_g00
20:57:27   7  ,eur_g01
20:57:27   8  ,eur_g02
20:57:27   9  ,eur_g03
20:57:27  10  ,eur_g04
20:57:27  11  ,eur_g05
20:57:27  12  ,eur_g06
20:57:27  13  ,eur_g07
20:57:27  14  ,eur_g08
20:57:27  15  ,eur_g09
20:57:27  16  ,eur_g10
20:57:27  17  ,eur_g11
20:57:27  18  ,eur_g12
20:57:27  19  ,eur_g13
20:57:27  20  ,eur_g14
20:57:27  21  ,eur_g15
20:57:27  22  ,eur_g16
20:57:27  23  ,eur_g17
20:57:27  24  ,eur_g18
20:57:27  25  ,eur_g19
20:57:27  26  ,eur_g20
20:57:27  27  ,eur_g21
20:57:27  28  ,eur_g22
20:57:27  29  ,eur_g23
20:57:27  30  ,eur_g24
20:57:27  31  ,eur_g25
20:57:27  32  ,eur_g26
20:57:27  33  ,eur_g27
20:57:27  34  ,eur_g28
20:57:27  35  ,eur_g29
20:57:27  36  ,eur_g30
20:57:27  37  ,eur_g31
20:57:27  38  ,eur_g32
20:57:27  39  ,eur_g33
20:57:27  40  ,eur_g34
20:57:27  41  ,eur_g35
20:57:27  42  ,eur_g36
20:57:27  43  ,eur_g37
20:57:27  44  ,eur_g38
20:57:27  45  ,eur_g39
20:57:27  46  ,eur_g40
20:57:27  47  ,eur_g41
20:57:27  48  ,aud_g00
20:57:27  49  ,aud_g01
20:57:27  50  ,aud_g02
20:57:27  51  ,aud_g03
20:57:27  52  ,aud_g04
20:57:27  53  ,aud_g05
20:57:27  54  ,aud_g06
20:57:27  55  ,aud_g07
20:57:27  56  ,aud_g08
20:57:27  57  ,aud_g09
20:57:27  58  ,aud_g10
20:57:27  59  ,aud_g11
20:57:27  60  ,aud_g12
20:57:27  61  ,aud_g13
20:57:27  62  ,aud_g14
20:57:27  63  ,aud_g15
20:57:27  64  ,aud_g16
20:57:27  65  ,aud_g17
20:57:27  66  ,aud_g18
20:57:27  67  ,aud_g19
20:57:27  68  ,aud_g20
20:57:27  69  ,aud_g21
20:57:27  70  ,aud_g22
20:57:27  71  ,aud_g23
20:57:27  72  ,aud_g24
20:57:27  73  ,aud_g25
20:57:27  74  ,aud_g26
20:57:27  75  ,aud_g27
20:57:27  76  ,aud_g28
20:57:27  77  ,aud_g29
20:57:27  78  ,aud_g30
20:57:27  79  ,aud_g31
20:57:27  80  ,aud_g32
20:57:27  81  ,aud_g33
20:57:27  82  ,aud_g34
20:57:27  83  ,aud_g35
20:57:27  84  ,aud_g36
20:57:27  85  ,aud_g37
20:57:27  86  ,aud_g38
20:57:27  87  ,aud_g39
20:57:27  88  ,aud_g40
20:57:27  89  ,aud_g41
20:57:27  90  ,gbp_g00
20:57:27  91  ,gbp_g01
20:57:27  92  ,gbp_g02
20:57:27  93  ,gbp_g03
20:57:27  94  ,gbp_g04
20:57:27  95  ,gbp_g05
20:57:27  96  ,gbp_g06
20:57:27  97  ,gbp_g07
20:57:27  98  ,gbp_g08
20:57:27  99  ,gbp_g09
20:57:27 100  ,gbp_g10
20:57:27 101  ,gbp_g11
20:57:27 102  ,gbp_g12
20:57:27 103  ,gbp_g13
20:57:27 104  ,gbp_g14
20:57:27 105  ,gbp_g15
20:57:27 106  ,gbp_g16
20:57:27 107  ,gbp_g17
20:57:27 108  ,gbp_g18
20:57:27 109  ,gbp_g19
20:57:27 110  ,gbp_g20
20:57:27 111  ,gbp_g21
20:57:27 112  ,gbp_g22
20:57:27 113  ,gbp_g23
20:57:27 114  ,gbp_g24
20:57:27 115  ,gbp_g25
20:57:27 116  ,gbp_g26
20:57:27 117  ,gbp_g27
20:57:27 118  ,gbp_g28
20:57:27 119  ,gbp_g29
20:57:27 120  ,gbp_g30
20:57:27 121  ,gbp_g31
20:57:27 122  ,gbp_g32
20:57:27 123  ,gbp_g33
20:57:27 124  ,gbp_g34
20:57:27 125  ,gbp_g35
20:57:27 126  ,gbp_g36
20:57:27 127  ,gbp_g37
20:57:27 128  ,gbp_g38
20:57:27 129  ,gbp_g39
20:57:27 130  ,gbp_g40
20:57:27 131  ,gbp_g41
20:57:27 132  ,jpy_g00
20:57:27 133  ,jpy_g01
20:57:27 134  ,jpy_g02
20:57:27 135  ,jpy_g03
20:57:27 136  ,jpy_g04
20:57:27 137  ,jpy_g05
20:57:27 138  ,jpy_g06
20:57:27 139  ,jpy_g07
20:57:27 140  ,jpy_g08
20:57:27 141  ,jpy_g09
20:57:27 142  ,jpy_g10
20:57:27 143  ,jpy_g11
20:57:27 144  ,jpy_g12
20:57:27 145  ,jpy_g13
20:57:27 146  ,jpy_g14
20:57:27 147  ,jpy_g15
20:57:27 148  ,jpy_g16
20:57:27 149  ,jpy_g17
20:57:27 150  ,jpy_g18
20:57:27 151  ,jpy_g19
20:57:27 152  ,jpy_g20
20:57:27 153  ,jpy_g21
20:57:27 154  ,jpy_g22
20:57:27 155  ,jpy_g23
20:57:27 156  ,jpy_g24
20:57:27 157  ,jpy_g25
20:57:27 158  ,jpy_g26
20:57:27 159  ,jpy_g27
20:57:27 160  ,jpy_g28
20:57:27 161  ,jpy_g29
20:57:27 162  ,jpy_g30
20:57:27 163  ,jpy_g31
20:57:27 164  ,jpy_g32
20:57:27 165  ,jpy_g33
20:57:27 166  ,jpy_g34
20:57:27 167  ,jpy_g35
20:57:27 168  ,jpy_g36
20:57:27 169  ,jpy_g37
20:57:27 170  ,jpy_g38
20:57:27 171  ,jpy_g39
20:57:27 172  ,jpy_g40
20:57:27 173  ,jpy_g41
20:57:27 174  ,cad_g00
20:57:27 175  ,cad_g01
20:57:27 176  ,cad_g02
20:57:27 177  ,cad_g03
20:57:27 178  ,cad_g04
20:57:27 179  ,cad_g05
20:57:27 180  ,cad_g06
20:57:27 181  ,cad_g07
20:57:27 182  ,cad_g08
20:57:27 183  ,cad_g09
20:57:27 184  ,cad_g10
20:57:27 185  ,cad_g11
20:57:27 186  ,cad_g12
20:57:27 187  ,cad_g13
20:57:27 188  ,cad_g14
20:57:27 189  ,cad_g15
20:57:27 190  ,cad_g16
20:57:27 191  ,cad_g17
20:57:27 192  ,cad_g18
20:57:27 193  ,cad_g19
20:57:27 194  ,cad_g20
20:57:27 195  ,cad_g21
20:57:27 196  ,cad_g22
20:57:27 197  ,cad_g23
20:57:27 198  ,cad_g24
20:57:27 199  ,cad_g25
20:57:27 200  ,cad_g26
20:57:27 201  ,cad_g27
20:57:27 202  ,cad_g28
20:57:27 203  ,cad_g29
20:57:27 204  ,cad_g30
20:57:27 205  ,cad_g31
20:57:27 206  ,cad_g32
20:57:27 207  ,cad_g33
20:57:27 208  ,cad_g34
20:57:27 209  ,cad_g35
20:57:27 210  ,cad_g36
20:57:27 211  ,cad_g37
20:57:27 212  ,cad_g38
20:57:27 213  ,cad_g39
20:57:27 214  ,cad_g40
20:57:27 215  ,cad_g41
20:57:27 216  ,chf_g00
20:57:27 217  ,chf_g01
20:57:27 218  ,chf_g02
20:57:27 219  ,chf_g03
20:57:27 220  ,chf_g04
20:57:27 221  ,chf_g05
20:57:27 222  ,chf_g06
20:57:27 223  ,chf_g07
20:57:27 224  ,chf_g08
20:57:27 225  ,chf_g09
20:57:27 226  ,chf_g10
20:57:27 227  ,chf_g11
20:57:27 228  ,chf_g12
20:57:27 229  ,chf_g13
20:57:27 230  ,chf_g14
20:57:27 231  ,chf_g15
20:57:27 232  ,chf_g16
20:57:27 233  ,chf_g17
20:57:27 234  ,chf_g18
20:57:27 235  ,chf_g19
20:57:27 236  ,chf_g20
20:57:27 237  ,chf_g21
20:57:27 238  ,chf_g22
20:57:27 239  ,chf_g23
20:57:27 240  ,chf_g24
20:57:27 241  ,chf_g25
20:57:27 242  ,chf_g26
20:57:27 243  ,chf_g27
20:57:27 244  ,chf_g28
20:57:27 245  ,chf_g29
20:57:27 246  ,chf_g30
20:57:27 247  ,chf_g31
20:57:27 248  ,chf_g32
20:57:27 249  ,chf_g33
20:57:27 250  ,chf_g34
20:57:27 251  ,chf_g35
20:57:27 252  ,chf_g36
20:57:27 253  ,chf_g37
20:57:27 254  ,chf_g38
20:57:27 255  ,chf_g39
20:57:27 256  ,chf_g40
20:57:27 257  ,chf_g41
20:57:27 258  FROM aud_ms6 m
20:57:27 259  WHERE m.ydate = '&1'||' '||'&2'
20:57:27 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'20:45:00'

View created.

Elapsed: 00:00:00.13
20:57:27 SQL> 
20:57:27 SQL> -- rpt
20:57:27 SQL> -- We should see just 1 row:
20:57:27 SQL> 
20:57:27 SQL> SELECT COUNT(prdate) FROM sme
20:57:27   2  
20:57:27 SQL> -- Build the model:
20:57:27 SQL> CREATE OR REPLACE VIEW bme AS
20:57:27   2  SELECT
20:57:27   3  'aud'||m.ydate prdate
20:57:27   4  ,gatt
20:57:27   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:57:27   6  ,eur_g00
20:57:27   7  ,eur_g01
20:57:27   8  ,eur_g02
20:57:27   9  ,eur_g03
20:57:27  10  ,eur_g04
20:57:27  11  ,eur_g05
20:57:27  12  ,eur_g06
20:57:27  13  ,eur_g07
20:57:27  14  ,eur_g08
20:57:27  15  ,eur_g09
20:57:27  16  ,eur_g10
20:57:27  17  ,eur_g11
20:57:27  18  ,eur_g12
20:57:27  19  ,eur_g13
20:57:27  20  ,eur_g14
20:57:27  21  ,eur_g15
20:57:27  22  ,eur_g16
20:57:27  23  ,eur_g17
20:57:27  24  ,eur_g18
20:57:27  25  ,eur_g19
20:57:27  26  ,eur_g20
20:57:27  27  ,eur_g21
20:57:27  28  ,eur_g22
20:57:27  29  ,eur_g23
20:57:27  30  ,eur_g24
20:57:27  31  ,eur_g25
20:57:27  32  ,eur_g26
20:57:27  33  ,eur_g27
20:57:27  34  ,eur_g28
20:57:27  35  ,eur_g29
20:57:27  36  ,eur_g30
20:57:27  37  ,eur_g31
20:57:27  38  ,eur_g32
20:57:27  39  ,eur_g33
20:57:27  40  ,eur_g34
20:57:27  41  ,eur_g35
20:57:27  42  ,eur_g36
20:57:27  43  ,eur_g37
20:57:27  44  ,eur_g38
20:57:27  45  ,eur_g39
20:57:27  46  ,eur_g40
20:57:27  47  ,eur_g41
20:57:27  48  ,aud_g00
20:57:27  49  ,aud_g01
20:57:27  50  ,aud_g02
20:57:27  51  ,aud_g03
20:57:27  52  ,aud_g04
20:57:27  53  ,aud_g05
20:57:27  54  ,aud_g06
20:57:27  55  ,aud_g07
20:57:27  56  ,aud_g08
20:57:27  57  ,aud_g09
20:57:27  58  ,aud_g10
20:57:27  59  ,aud_g11
20:57:27  60  ,aud_g12
20:57:27  61  ,aud_g13
20:57:27  62  ,aud_g14
20:57:27  63  ,aud_g15
20:57:27  64  ,aud_g16
20:57:27  65  ,aud_g17
20:57:27  66  ,aud_g18
20:57:27  67  ,aud_g19
20:57:27  68  ,aud_g20
20:57:27  69  ,aud_g21
20:57:27  70  ,aud_g22
20:57:27  71  ,aud_g23
20:57:27  72  ,aud_g24
20:57:27  73  ,aud_g25
20:57:27  74  ,aud_g26
20:57:27  75  ,aud_g27
20:57:27  76  ,aud_g28
20:57:27  77  ,aud_g29
20:57:27  78  ,aud_g30
20:57:27  79  ,aud_g31
20:57:27  80  ,aud_g32
20:57:27  81  ,aud_g33
20:57:27  82  ,aud_g34
20:57:27  83  ,aud_g35
20:57:27  84  ,aud_g36
20:57:27  85  ,aud_g37
20:57:27  86  ,aud_g38
20:57:27  87  ,aud_g39
20:57:27  88  ,aud_g40
20:57:27  89  ,aud_g41
20:57:27  90  ,gbp_g00
20:57:27  91  ,gbp_g01
20:57:27  92  ,gbp_g02
20:57:27  93  ,gbp_g03
20:57:27  94  ,gbp_g04
20:57:27  95  ,gbp_g05
20:57:27  96  ,gbp_g06
20:57:27  97  ,gbp_g07
20:57:27  98  ,gbp_g08
20:57:27  99  ,gbp_g09
20:57:27 100  ,gbp_g10
20:57:27 101  ,gbp_g11
20:57:27 102  ,gbp_g12
20:57:27 103  ,gbp_g13
20:57:27 104  ,gbp_g14
20:57:27 105  ,gbp_g15
20:57:27 106  ,gbp_g16
20:57:27 107  ,gbp_g17
20:57:27 108  ,gbp_g18
20:57:27 109  ,gbp_g19
20:57:27 110  ,gbp_g20
20:57:27 111  ,gbp_g21
20:57:27 112  ,gbp_g22
20:57:27 113  ,gbp_g23
20:57:27 114  ,gbp_g24
20:57:27 115  ,gbp_g25
20:57:27 116  ,gbp_g26
20:57:27 117  ,gbp_g27
20:57:27 118  ,gbp_g28
20:57:27 119  ,gbp_g29
20:57:27 120  ,gbp_g30
20:57:27 121  ,gbp_g31
20:57:27 122  ,gbp_g32
20:57:27 123  ,gbp_g33
20:57:27 124  ,gbp_g34
20:57:27 125  ,gbp_g35
20:57:27 126  ,gbp_g36
20:57:27 127  ,gbp_g37
20:57:27 128  ,gbp_g38
20:57:27 129  ,gbp_g39
20:57:27 130  ,gbp_g40
20:57:27 131  ,gbp_g41
20:57:27 132  ,jpy_g00
20:57:27 133  ,jpy_g01
20:57:27 134  ,jpy_g02
20:57:27 135  ,jpy_g03
20:57:27 136  ,jpy_g04
20:57:27 137  ,jpy_g05
20:57:27 138  ,jpy_g06
20:57:27 139  ,jpy_g07
20:57:27 140  ,jpy_g08
20:57:27 141  ,jpy_g09
20:57:27 142  ,jpy_g10
20:57:27 143  ,jpy_g11
20:57:27 144  ,jpy_g12
20:57:27 145  ,jpy_g13
20:57:27 146  ,jpy_g14
20:57:27 147  ,jpy_g15
20:57:27 148  ,jpy_g16
20:57:27 149  ,jpy_g17
20:57:27 150  ,jpy_g18
20:57:27 151  ,jpy_g19
20:57:27 152  ,jpy_g20
20:57:27 153  ,jpy_g21
20:57:27 154  ,jpy_g22
20:57:27 155  ,jpy_g23
20:57:27 156  ,jpy_g24
20:57:27 157  ,jpy_g25
20:57:27 158  ,jpy_g26
20:57:27 159  ,jpy_g27
20:57:27 160  ,jpy_g28
20:57:27 161  ,jpy_g29
20:57:27 162  ,jpy_g30
20:57:27 163  ,jpy_g31
20:57:27 164  ,jpy_g32
20:57:27 165  ,jpy_g33
20:57:27 166  ,jpy_g34
20:57:27 167  ,jpy_g35
20:57:27 168  ,jpy_g36
20:57:27 169  ,jpy_g37
20:57:27 170  ,jpy_g38
20:57:27 171  ,jpy_g39
20:57:27 172  ,jpy_g40
20:57:27 173  ,jpy_g41
20:57:27 174  ,cad_g00
20:57:27 175  ,cad_g01
20:57:27 176  ,cad_g02
20:57:27 177  ,cad_g03
20:57:27 178  ,cad_g04
20:57:27 179  ,cad_g05
20:57:27 180  ,cad_g06
20:57:27 181  ,cad_g07
20:57:27 182  ,cad_g08
20:57:27 183  ,cad_g09
20:57:27 184  ,cad_g10
20:57:27 185  ,cad_g11
20:57:27 186  ,cad_g12
20:57:27 187  ,cad_g13
20:57:27 188  ,cad_g14
20:57:27 189  ,cad_g15
20:57:27 190  ,cad_g16
20:57:27 191  ,cad_g17
20:57:27 192  ,cad_g18
20:57:27 193  ,cad_g19
20:57:27 194  ,cad_g20
20:57:27 195  ,cad_g21
20:57:27 196  ,cad_g22
20:57:27 197  ,cad_g23
20:57:27 198  ,cad_g24
20:57:27 199  ,cad_g25
20:57:27 200  ,cad_g26
20:57:27 201  ,cad_g27
20:57:27 202  ,cad_g28
20:57:27 203  ,cad_g29
20:57:27 204  ,cad_g30
20:57:27 205  ,cad_g31
20:57:27 206  ,cad_g32
20:57:27 207  ,cad_g33
20:57:27 208  ,cad_g34
20:57:27 209  ,cad_g35
20:57:27 210  ,cad_g36
20:57:27 211  ,cad_g37
20:57:27 212  ,cad_g38
20:57:27 213  ,cad_g39
20:57:27 214  ,cad_g40
20:57:27 215  ,cad_g41
20:57:27 216  ,chf_g00
20:57:27 217  ,chf_g01
20:57:27 218  ,chf_g02
20:57:27 219  ,chf_g03
20:57:27 220  ,chf_g04
20:57:27 221  ,chf_g05
20:57:27 222  ,chf_g06
20:57:27 223  ,chf_g07
20:57:27 224  ,chf_g08
20:57:27 225  ,chf_g09
20:57:27 226  ,chf_g10
20:57:27 227  ,chf_g11
20:57:27 228  ,chf_g12
20:57:27 229  ,chf_g13
20:57:27 230  ,chf_g14
20:57:27 231  ,chf_g15
20:57:27 232  ,chf_g16
20:57:27 233  ,chf_g17
20:57:27 234  ,chf_g18
20:57:27 235  ,chf_g19
20:57:27 236  ,chf_g20
20:57:27 237  ,chf_g21
20:57:27 238  ,chf_g22
20:57:27 239  ,chf_g23
20:57:27 240  ,chf_g24
20:57:27 241  ,chf_g25
20:57:27 242  ,chf_g26
20:57:27 243  ,chf_g27
20:57:27 244  ,chf_g28
20:57:27 245  ,chf_g29
20:57:27 246  ,chf_g30
20:57:27 247  ,chf_g31
20:57:27 248  ,chf_g32
20:57:27 249  ,chf_g33
20:57:27 250  ,chf_g34
20:57:27 251  ,chf_g35
20:57:27 252  ,chf_g36
20:57:27 253  ,chf_g37
20:57:27 254  ,chf_g38
20:57:27 255  ,chf_g39
20:57:27 256  ,chf_g40
20:57:27 257  ,chf_g41
20:57:27 258  FROM aud_ms6 m
20:57:27 259  WHERE gatt IN('nup','up')
20:57:27 260  AND 1+m.ydate < '&1'||' '||'&2'
20:57:27 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'20:45:00'

View created.

Elapsed: 00:00:00.12
20:57:28 SQL> 
20:57:28 SQL> -- rpt
20:57:28 SQL> 
20:57:28 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
20:57:28   2  
20:57:28 SQL> SELECT MAX(prdate) FROM bme
20:57:28   2  
20:57:28 SQL> -- Now build model from bme and score sme
20:57:28 SQL> @score1.sql
20:57:28 SQL> -- score1.sql
20:57:28 SQL> 
20:57:28 SQL> -- Does the 1st SVM score
20:57:28 SQL> 
20:57:28 SQL> -- Fill up svmc_apply_prep
20:57:28 SQL> @score.sql
20:57:28 SQL> --
20:57:28 SQL> -- score.sql
20:57:28 SQL> --
20:57:28 SQL> 
20:57:28 SQL> -- usage: score.sql
20:57:28 SQL> 
20:57:28 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:57:28 SQL> 
20:57:28 SQL> DEFINE target	= 'gatt'
20:57:28 SQL> DEFINE model_name = 'forex14'
20:57:28 SQL> DEFINE bldtable	= 'bme'
20:57:28 SQL> DEFINE scoretable = 'sme'
20:57:28 SQL> DEFINE case_id	= 'prdate'
20:57:28 SQL> 
20:57:28 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:57:28 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:57:28 SQL> 
20:57:28 SQL> -- Builds an SVM model using pl/sql.
20:57:28 SQL> 
20:57:28 SQL> -----------------------------------------------------------------------
20:57:28 SQL> --			    BUILD THE MODEL
20:57:28 SQL> -----------------------------------------------------------------------
20:57:28 SQL> 
20:57:28 SQL> -- Cleanup old build data preparation objects for repeat runs
20:57:28 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
20:57:28 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:57:28 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
20:57:28 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
20:57:28 SQL> 
20:57:28 SQL> 
20:57:28 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:57:28 SQL> --
20:57:28 SQL> -- DROP	TABLE svmc_settings ;
20:57:28 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:57:28 SQL> -- DELETE svmc_settings;
20:57:28 SQL> 
20:57:28 SQL> -- The default classification algorithm is Naive Bayes. So override
20:57:28 SQL> -- this choice to SVM using a settings table.
20:57:28 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:57:28 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:57:28 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:57:28 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:57:28 SQL> -- models.
20:57:28 SQL> --
20:57:28 SQL> 
20:57:28 SQL> -- Do this once and then comment it out.
20:57:28 SQL> -- That makes script go faster.
20:57:28 SQL> -- BEGIN
20:57:28 SQL> -- -- Populate settings table
20:57:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:57:28 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:57:28 SQL> --
20:57:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:57:28 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:57:28 SQL> --
20:57:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:57:28 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:57:28 SQL> --   COMMIT;
20:57:28 SQL> -- END;
20:57:28 SQL> -- /
20:57:28 SQL> 
20:57:28 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:57:28 SQL> 
20:57:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:57:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:57:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:57:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:57:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:57:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:57:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:57:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:57:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:57:28 SQL> 
20:57:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:57:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:57:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:57:28 SQL> 
20:57:28 SQL> --------------------------------
20:57:28 SQL> -- PREPARE BUILD (TRAINING) DATA
20:57:28 SQL> --
20:57:28 SQL> 
20:57:28 SQL> -- 1. Missing Value treatment for all Predictors and
20:57:28 SQL> -- 2. Outlier Treatment and
20:57:28 SQL> -- 3. Normalization are performed below.
20:57:28 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:57:28 SQL> --    normalized here.
20:57:28 SQL> 
20:57:28 SQL> BEGIN
20:57:28   2  	-- Perform missing value treatment for all predictors
20:57:28   3  	-- create miss tables
20:57:28   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:57:28   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:57:28   6  
20:57:28   7  	-- populate miss tables
20:57:28   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:57:28   9  	  miss_table_name => 'svmc_miss_num',
20:57:28  10  	  data_table_name => '&bldtable',
20:57:28  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:57:28  12  
20:57:28  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:57:28  14  	  miss_table_name => 'svmc_miss_cat',
20:57:28  15  	  data_table_name => '&bldtable',
20:57:28  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:57:28  17  
20:57:28  18  	-- xform input data to replace missing values
20:57:28  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:57:28  20  	  miss_table_name => 'svmc_miss_num',
20:57:28  21  	  data_table_name => '&bldtable',
20:57:28  22  	  xform_view_name => 'xformed_build_miss_num');
20:57:28  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:57:28  24  	  miss_table_name => 'svmc_miss_cat',
20:57:28  25  	  data_table_name => '&bldtable',
20:57:28  26  	  xform_view_name => 'xformed_build_miss_cat');
20:57:28  27  
20:57:28  28  	-- Perform outlier treatment.
20:57:28  29  	-- create clip table
20:57:28  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:57:28  31  
20:57:28  32  	-- populate clip table
20:57:28  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:57:28  34  	  clip_table_name => 'svmc_clip',
20:57:28  35  	  data_table_name => '&bldtable',
20:57:28  36  	  tail_frac	  => 0.025,
20:57:28  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:57:28  38  
20:57:28  39  	-- xform input data to winsorized data
20:57:28  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:57:28  41  	  clip_table_name => 'svmc_clip',
20:57:28  42  	  data_table_name => '&bldtable',
20:57:28  43  	  xform_view_name => 'svmc_winsor');
20:57:28  44  
20:57:28  45  	-- create normalization table
20:57:28  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:57:28  47  
20:57:28  48  	-- populate normalization table based on winsorized data
20:57:28  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:57:28  50  	  norm_table_name => 'svmc_norm',
20:57:28  51  	  data_table_name => 'svmc_winsor',
20:57:28  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:57:28  53  
20:57:28  54  	-- normalize the original data
20:57:28  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:57:28  56  	  norm_table_name => 'svmc_norm',
20:57:28  57  	  data_table_name => '&bldtable',
20:57:28  58  	  xform_view_name => 'svmc_build_prep');
20:57:28  59  END;
20:57:28  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.14
20:57:46 SQL> 
20:57:46 SQL> ---------------------
20:57:46 SQL> -- CREATE A NEW MODEL
20:57:46 SQL> --
20:57:46 SQL> -- Cleanup old model with the same name for repeat runs
20:57:46 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:57:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:57:46   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.92
20:57:47 SQL> 
20:57:47 SQL> -- Build a new SVM Model
20:57:47 SQL> BEGIN
20:57:47   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:57:47   3  	  model_name	      => '&model_name',
20:57:47   4  	  mining_function     => dbms_data_mining.classification,
20:57:47   5  	  data_table_name     => 'svmc_build_prep',
20:57:47   6  	  case_id_column_name => '&case_id',
20:57:47   7  	  target_column_name  => '&target',
20:57:47   8  	  settings_table_name => 'svmc_settings');
20:57:47   9  END;
20:57:47  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.42
20:58:14 SQL> 
20:58:14 SQL> -----------------------------------------------------------------------
20:58:14 SQL> --			       APPLY/score THE MODEL
20:58:14 SQL> -----------------------------------------------------------------------
20:58:14 SQL> 
20:58:14 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:58:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:58:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:58:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
20:58:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:58:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:58:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:58:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:58:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:58:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:58:14 SQL> -----------------------
20:58:14 SQL> -- PREPARE SCORING DATA
20:58:14 SQL> --
20:58:14 SQL> -- If the data for model creation has been prepared, then the data
20:58:14 SQL> -- to be scored using the model must be prepared in the same manner
20:58:14 SQL> -- in order to obtain meaningful results.
20:58:14 SQL> --
20:58:14 SQL> -- 1. Missing Value treatment for all Predictors and
20:58:14 SQL> -- 2. Normalization
20:58:14 SQL> -- No outlier treatment will be performed during test and apply. The
20:58:14 SQL> -- normalization step is sufficient, since the normalization parameters
20:58:14 SQL> -- already capture the effects of outlier treatment done with build data.
20:58:14 SQL> --
20:58:14 SQL> BEGIN
20:58:14   2  	-- Xform Test data to replace missing values
20:58:14   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:58:14   4  	  miss_table_name => 'svmc_miss_num',
20:58:14   5  	  data_table_name => '&scoretable',
20:58:14   6  	  xform_view_name => 'xformed_apply_miss_num');
20:58:14   7  
20:58:14   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:58:14   9  	  miss_table_name => 'svmc_miss_cat',
20:58:14  10  	  data_table_name => '&scoretable',
20:58:14  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:58:14  12  
20:58:14  13  	-- Normalize the data to be scored
20:58:14  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:58:14  15  	  norm_table_name => 'svmc_norm',
20:58:14  16  	  data_table_name => '&scoretable',
20:58:14  17  	  xform_view_name => 'svmc_apply_prep');
20:58:14  18  END;
20:58:14  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.25
20:58:16 SQL> 
20:58:16 SQL> -- Use same model_name used in score.sql
20:58:16 SQL> DEFINE model_name = 'forex14'
20:58:16 SQL> 
20:58:16 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
20:58:16 SQL> 
20:58:16 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
20:58:16 SQL> 
20:58:16 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
20:58:16   2  SELECT
20:58:16   3  prdate
20:58:16   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:58:16   5  ,sysdate
20:58:16   6  ,SUBSTR(prdate,1,3)pair
20:58:16   7  ,SUBSTR(prdate,4,19)ydate
20:58:16   8  FROM svmc_apply_prep
20:58:16   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
20:58:16 SQL> @aud_score1day_gattn.sql	2010-12-30 20:35:00
20:58:16 SQL> --
20:58:16 SQL> -- aud_score1day_gattn.sql
20:58:16 SQL> --
20:58:16 SQL> 
20:58:16 SQL> CREATE OR REPLACE VIEW sme AS
20:58:16   2  SELECT
20:58:16   3  'aud'||m.ydate prdate
20:58:16   4  ,NULL gattn
20:58:16   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:58:16   6  ,eur_g00
20:58:16   7  ,eur_g01
20:58:16   8  ,eur_g02
20:58:16   9  ,eur_g03
20:58:16  10  ,eur_g04
20:58:16  11  ,eur_g05
20:58:16  12  ,eur_g06
20:58:16  13  ,eur_g07
20:58:16  14  ,eur_g08
20:58:16  15  ,eur_g09
20:58:16  16  ,eur_g10
20:58:16  17  ,eur_g11
20:58:16  18  ,eur_g12
20:58:16  19  ,eur_g13
20:58:16  20  ,eur_g14
20:58:16  21  ,eur_g15
20:58:16  22  ,eur_g16
20:58:16  23  ,eur_g17
20:58:16  24  ,eur_g18
20:58:16  25  ,eur_g19
20:58:16  26  ,eur_g20
20:58:16  27  ,eur_g21
20:58:16  28  ,eur_g22
20:58:16  29  ,eur_g23
20:58:16  30  ,eur_g24
20:58:16  31  ,eur_g25
20:58:16  32  ,eur_g26
20:58:16  33  ,eur_g27
20:58:16  34  ,eur_g28
20:58:16  35  ,eur_g29
20:58:16  36  ,eur_g30
20:58:16  37  ,eur_g31
20:58:16  38  ,eur_g32
20:58:16  39  ,eur_g33
20:58:16  40  ,eur_g34
20:58:16  41  ,eur_g35
20:58:16  42  ,eur_g36
20:58:16  43  ,eur_g37
20:58:16  44  ,eur_g38
20:58:16  45  ,eur_g39
20:58:16  46  ,eur_g40
20:58:16  47  ,eur_g41
20:58:16  48  ,aud_g00
20:58:16  49  ,aud_g01
20:58:16  50  ,aud_g02
20:58:16  51  ,aud_g03
20:58:16  52  ,aud_g04
20:58:16  53  ,aud_g05
20:58:16  54  ,aud_g06
20:58:16  55  ,aud_g07
20:58:16  56  ,aud_g08
20:58:16  57  ,aud_g09
20:58:16  58  ,aud_g10
20:58:16  59  ,aud_g11
20:58:16  60  ,aud_g12
20:58:16  61  ,aud_g13
20:58:16  62  ,aud_g14
20:58:16  63  ,aud_g15
20:58:16  64  ,aud_g16
20:58:16  65  ,aud_g17
20:58:16  66  ,aud_g18
20:58:16  67  ,aud_g19
20:58:16  68  ,aud_g20
20:58:16  69  ,aud_g21
20:58:16  70  ,aud_g22
20:58:16  71  ,aud_g23
20:58:16  72  ,aud_g24
20:58:16  73  ,aud_g25
20:58:16  74  ,aud_g26
20:58:16  75  ,aud_g27
20:58:16  76  ,aud_g28
20:58:16  77  ,aud_g29
20:58:16  78  ,aud_g30
20:58:16  79  ,aud_g31
20:58:16  80  ,aud_g32
20:58:16  81  ,aud_g33
20:58:16  82  ,aud_g34
20:58:16  83  ,aud_g35
20:58:16  84  ,aud_g36
20:58:16  85  ,aud_g37
20:58:16  86  ,aud_g38
20:58:16  87  ,aud_g39
20:58:16  88  ,aud_g40
20:58:16  89  ,aud_g41
20:58:16  90  ,gbp_g00
20:58:16  91  ,gbp_g01
20:58:16  92  ,gbp_g02
20:58:16  93  ,gbp_g03
20:58:16  94  ,gbp_g04
20:58:16  95  ,gbp_g05
20:58:16  96  ,gbp_g06
20:58:16  97  ,gbp_g07
20:58:16  98  ,gbp_g08
20:58:16  99  ,gbp_g09
20:58:16 100  ,gbp_g10
20:58:16 101  ,gbp_g11
20:58:16 102  ,gbp_g12
20:58:16 103  ,gbp_g13
20:58:16 104  ,gbp_g14
20:58:16 105  ,gbp_g15
20:58:16 106  ,gbp_g16
20:58:16 107  ,gbp_g17
20:58:16 108  ,gbp_g18
20:58:16 109  ,gbp_g19
20:58:16 110  ,gbp_g20
20:58:16 111  ,gbp_g21
20:58:16 112  ,gbp_g22
20:58:16 113  ,gbp_g23
20:58:16 114  ,gbp_g24
20:58:16 115  ,gbp_g25
20:58:16 116  ,gbp_g26
20:58:16 117  ,gbp_g27
20:58:16 118  ,gbp_g28
20:58:16 119  ,gbp_g29
20:58:16 120  ,gbp_g30
20:58:16 121  ,gbp_g31
20:58:16 122  ,gbp_g32
20:58:16 123  ,gbp_g33
20:58:16 124  ,gbp_g34
20:58:16 125  ,gbp_g35
20:58:16 126  ,gbp_g36
20:58:16 127  ,gbp_g37
20:58:16 128  ,gbp_g38
20:58:16 129  ,gbp_g39
20:58:16 130  ,gbp_g40
20:58:16 131  ,gbp_g41
20:58:16 132  ,jpy_g00
20:58:16 133  ,jpy_g01
20:58:16 134  ,jpy_g02
20:58:16 135  ,jpy_g03
20:58:16 136  ,jpy_g04
20:58:16 137  ,jpy_g05
20:58:16 138  ,jpy_g06
20:58:16 139  ,jpy_g07
20:58:16 140  ,jpy_g08
20:58:16 141  ,jpy_g09
20:58:16 142  ,jpy_g10
20:58:16 143  ,jpy_g11
20:58:16 144  ,jpy_g12
20:58:16 145  ,jpy_g13
20:58:16 146  ,jpy_g14
20:58:16 147  ,jpy_g15
20:58:16 148  ,jpy_g16
20:58:16 149  ,jpy_g17
20:58:16 150  ,jpy_g18
20:58:16 151  ,jpy_g19
20:58:16 152  ,jpy_g20
20:58:16 153  ,jpy_g21
20:58:16 154  ,jpy_g22
20:58:16 155  ,jpy_g23
20:58:16 156  ,jpy_g24
20:58:16 157  ,jpy_g25
20:58:16 158  ,jpy_g26
20:58:16 159  ,jpy_g27
20:58:16 160  ,jpy_g28
20:58:16 161  ,jpy_g29
20:58:16 162  ,jpy_g30
20:58:16 163  ,jpy_g31
20:58:16 164  ,jpy_g32
20:58:16 165  ,jpy_g33
20:58:16 166  ,jpy_g34
20:58:16 167  ,jpy_g35
20:58:16 168  ,jpy_g36
20:58:16 169  ,jpy_g37
20:58:16 170  ,jpy_g38
20:58:16 171  ,jpy_g39
20:58:16 172  ,jpy_g40
20:58:16 173  ,jpy_g41
20:58:16 174  ,cad_g00
20:58:16 175  ,cad_g01
20:58:16 176  ,cad_g02
20:58:16 177  ,cad_g03
20:58:16 178  ,cad_g04
20:58:16 179  ,cad_g05
20:58:16 180  ,cad_g06
20:58:16 181  ,cad_g07
20:58:16 182  ,cad_g08
20:58:16 183  ,cad_g09
20:58:16 184  ,cad_g10
20:58:16 185  ,cad_g11
20:58:16 186  ,cad_g12
20:58:16 187  ,cad_g13
20:58:16 188  ,cad_g14
20:58:16 189  ,cad_g15
20:58:16 190  ,cad_g16
20:58:16 191  ,cad_g17
20:58:16 192  ,cad_g18
20:58:16 193  ,cad_g19
20:58:16 194  ,cad_g20
20:58:16 195  ,cad_g21
20:58:16 196  ,cad_g22
20:58:16 197  ,cad_g23
20:58:16 198  ,cad_g24
20:58:16 199  ,cad_g25
20:58:16 200  ,cad_g26
20:58:16 201  ,cad_g27
20:58:16 202  ,cad_g28
20:58:16 203  ,cad_g29
20:58:16 204  ,cad_g30
20:58:16 205  ,cad_g31
20:58:16 206  ,cad_g32
20:58:16 207  ,cad_g33
20:58:16 208  ,cad_g34
20:58:16 209  ,cad_g35
20:58:16 210  ,cad_g36
20:58:16 211  ,cad_g37
20:58:16 212  ,cad_g38
20:58:16 213  ,cad_g39
20:58:16 214  ,cad_g40
20:58:16 215  ,cad_g41
20:58:16 216  ,chf_g00
20:58:16 217  ,chf_g01
20:58:16 218  ,chf_g02
20:58:16 219  ,chf_g03
20:58:16 220  ,chf_g04
20:58:16 221  ,chf_g05
20:58:16 222  ,chf_g06
20:58:16 223  ,chf_g07
20:58:16 224  ,chf_g08
20:58:16 225  ,chf_g09
20:58:16 226  ,chf_g10
20:58:16 227  ,chf_g11
20:58:16 228  ,chf_g12
20:58:16 229  ,chf_g13
20:58:16 230  ,chf_g14
20:58:16 231  ,chf_g15
20:58:16 232  ,chf_g16
20:58:16 233  ,chf_g17
20:58:16 234  ,chf_g18
20:58:16 235  ,chf_g19
20:58:16 236  ,chf_g20
20:58:16 237  ,chf_g21
20:58:16 238  ,chf_g22
20:58:16 239  ,chf_g23
20:58:16 240  ,chf_g24
20:58:16 241  ,chf_g25
20:58:16 242  ,chf_g26
20:58:16 243  ,chf_g27
20:58:16 244  ,chf_g28
20:58:16 245  ,chf_g29
20:58:16 246  ,chf_g30
20:58:16 247  ,chf_g31
20:58:16 248  ,chf_g32
20:58:16 249  ,chf_g33
20:58:16 250  ,chf_g34
20:58:16 251  ,chf_g35
20:58:16 252  ,chf_g36
20:58:16 253  ,chf_g37
20:58:16 254  ,chf_g38
20:58:16 255  ,chf_g39
20:58:16 256  ,chf_g40
20:58:16 257  ,chf_g41
20:58:16 258  FROM aud_ms6 m
20:58:16 259  WHERE m.ydate = '&1'||' '||'&2'
20:58:16 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'20:35:00'

View created.

Elapsed: 00:00:00.14
20:58:16 SQL> 
20:58:16 SQL> -- rpt
20:58:16 SQL> -- We should see just 1 row:
20:58:16 SQL> 
20:58:16 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
20:58:16 SQL> 
20:58:16 SQL> -- Build the model:
20:58:16 SQL> CREATE OR REPLACE VIEW bme AS
20:58:16   2  SELECT
20:58:16   3  'aud'||m.ydate prdate
20:58:16   4  ,gattn
20:58:16   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:58:16   6  ,eur_g00
20:58:16   7  ,eur_g01
20:58:16   8  ,eur_g02
20:58:16   9  ,eur_g03
20:58:16  10  ,eur_g04
20:58:16  11  ,eur_g05
20:58:16  12  ,eur_g06
20:58:16  13  ,eur_g07
20:58:16  14  ,eur_g08
20:58:16  15  ,eur_g09
20:58:16  16  ,eur_g10
20:58:16  17  ,eur_g11
20:58:16  18  ,eur_g12
20:58:16  19  ,eur_g13
20:58:16  20  ,eur_g14
20:58:16  21  ,eur_g15
20:58:16  22  ,eur_g16
20:58:16  23  ,eur_g17
20:58:16  24  ,eur_g18
20:58:16  25  ,eur_g19
20:58:16  26  ,eur_g20
20:58:16  27  ,eur_g21
20:58:16  28  ,eur_g22
20:58:16  29  ,eur_g23
20:58:16  30  ,eur_g24
20:58:16  31  ,eur_g25
20:58:16  32  ,eur_g26
20:58:16  33  ,eur_g27
20:58:16  34  ,eur_g28
20:58:16  35  ,eur_g29
20:58:16  36  ,eur_g30
20:58:16  37  ,eur_g31
20:58:16  38  ,eur_g32
20:58:16  39  ,eur_g33
20:58:16  40  ,eur_g34
20:58:16  41  ,eur_g35
20:58:16  42  ,eur_g36
20:58:16  43  ,eur_g37
20:58:16  44  ,eur_g38
20:58:16  45  ,eur_g39
20:58:16  46  ,eur_g40
20:58:16  47  ,eur_g41
20:58:16  48  ,aud_g00
20:58:16  49  ,aud_g01
20:58:16  50  ,aud_g02
20:58:16  51  ,aud_g03
20:58:16  52  ,aud_g04
20:58:16  53  ,aud_g05
20:58:16  54  ,aud_g06
20:58:16  55  ,aud_g07
20:58:16  56  ,aud_g08
20:58:16  57  ,aud_g09
20:58:16  58  ,aud_g10
20:58:16  59  ,aud_g11
20:58:16  60  ,aud_g12
20:58:16  61  ,aud_g13
20:58:16  62  ,aud_g14
20:58:16  63  ,aud_g15
20:58:16  64  ,aud_g16
20:58:16  65  ,aud_g17
20:58:16  66  ,aud_g18
20:58:16  67  ,aud_g19
20:58:16  68  ,aud_g20
20:58:16  69  ,aud_g21
20:58:16  70  ,aud_g22
20:58:16  71  ,aud_g23
20:58:16  72  ,aud_g24
20:58:16  73  ,aud_g25
20:58:16  74  ,aud_g26
20:58:16  75  ,aud_g27
20:58:16  76  ,aud_g28
20:58:16  77  ,aud_g29
20:58:16  78  ,aud_g30
20:58:16  79  ,aud_g31
20:58:16  80  ,aud_g32
20:58:16  81  ,aud_g33
20:58:16  82  ,aud_g34
20:58:16  83  ,aud_g35
20:58:16  84  ,aud_g36
20:58:16  85  ,aud_g37
20:58:16  86  ,aud_g38
20:58:16  87  ,aud_g39
20:58:16  88  ,aud_g40
20:58:16  89  ,aud_g41
20:58:16  90  ,gbp_g00
20:58:16  91  ,gbp_g01
20:58:16  92  ,gbp_g02
20:58:16  93  ,gbp_g03
20:58:16  94  ,gbp_g04
20:58:16  95  ,gbp_g05
20:58:16  96  ,gbp_g06
20:58:16  97  ,gbp_g07
20:58:16  98  ,gbp_g08
20:58:16  99  ,gbp_g09
20:58:16 100  ,gbp_g10
20:58:16 101  ,gbp_g11
20:58:16 102  ,gbp_g12
20:58:16 103  ,gbp_g13
20:58:16 104  ,gbp_g14
20:58:16 105  ,gbp_g15
20:58:16 106  ,gbp_g16
20:58:16 107  ,gbp_g17
20:58:16 108  ,gbp_g18
20:58:16 109  ,gbp_g19
20:58:16 110  ,gbp_g20
20:58:16 111  ,gbp_g21
20:58:16 112  ,gbp_g22
20:58:16 113  ,gbp_g23
20:58:16 114  ,gbp_g24
20:58:16 115  ,gbp_g25
20:58:16 116  ,gbp_g26
20:58:16 117  ,gbp_g27
20:58:16 118  ,gbp_g28
20:58:16 119  ,gbp_g29
20:58:16 120  ,gbp_g30
20:58:16 121  ,gbp_g31
20:58:16 122  ,gbp_g32
20:58:16 123  ,gbp_g33
20:58:16 124  ,gbp_g34
20:58:16 125  ,gbp_g35
20:58:16 126  ,gbp_g36
20:58:16 127  ,gbp_g37
20:58:16 128  ,gbp_g38
20:58:16 129  ,gbp_g39
20:58:16 130  ,gbp_g40
20:58:16 131  ,gbp_g41
20:58:16 132  ,jpy_g00
20:58:16 133  ,jpy_g01
20:58:16 134  ,jpy_g02
20:58:16 135  ,jpy_g03
20:58:16 136  ,jpy_g04
20:58:16 137  ,jpy_g05
20:58:16 138  ,jpy_g06
20:58:16 139  ,jpy_g07
20:58:16 140  ,jpy_g08
20:58:16 141  ,jpy_g09
20:58:16 142  ,jpy_g10
20:58:16 143  ,jpy_g11
20:58:16 144  ,jpy_g12
20:58:16 145  ,jpy_g13
20:58:16 146  ,jpy_g14
20:58:16 147  ,jpy_g15
20:58:16 148  ,jpy_g16
20:58:16 149  ,jpy_g17
20:58:16 150  ,jpy_g18
20:58:16 151  ,jpy_g19
20:58:16 152  ,jpy_g20
20:58:16 153  ,jpy_g21
20:58:16 154  ,jpy_g22
20:58:16 155  ,jpy_g23
20:58:16 156  ,jpy_g24
20:58:16 157  ,jpy_g25
20:58:16 158  ,jpy_g26
20:58:16 159  ,jpy_g27
20:58:16 160  ,jpy_g28
20:58:16 161  ,jpy_g29
20:58:16 162  ,jpy_g30
20:58:16 163  ,jpy_g31
20:58:16 164  ,jpy_g32
20:58:16 165  ,jpy_g33
20:58:16 166  ,jpy_g34
20:58:16 167  ,jpy_g35
20:58:16 168  ,jpy_g36
20:58:16 169  ,jpy_g37
20:58:16 170  ,jpy_g38
20:58:16 171  ,jpy_g39
20:58:16 172  ,jpy_g40
20:58:16 173  ,jpy_g41
20:58:16 174  ,cad_g00
20:58:16 175  ,cad_g01
20:58:16 176  ,cad_g02
20:58:16 177  ,cad_g03
20:58:16 178  ,cad_g04
20:58:16 179  ,cad_g05
20:58:16 180  ,cad_g06
20:58:16 181  ,cad_g07
20:58:16 182  ,cad_g08
20:58:16 183  ,cad_g09
20:58:16 184  ,cad_g10
20:58:16 185  ,cad_g11
20:58:16 186  ,cad_g12
20:58:16 187  ,cad_g13
20:58:16 188  ,cad_g14
20:58:16 189  ,cad_g15
20:58:16 190  ,cad_g16
20:58:16 191  ,cad_g17
20:58:16 192  ,cad_g18
20:58:16 193  ,cad_g19
20:58:16 194  ,cad_g20
20:58:16 195  ,cad_g21
20:58:16 196  ,cad_g22
20:58:16 197  ,cad_g23
20:58:16 198  ,cad_g24
20:58:16 199  ,cad_g25
20:58:16 200  ,cad_g26
20:58:16 201  ,cad_g27
20:58:16 202  ,cad_g28
20:58:16 203  ,cad_g29
20:58:16 204  ,cad_g30
20:58:16 205  ,cad_g31
20:58:16 206  ,cad_g32
20:58:16 207  ,cad_g33
20:58:16 208  ,cad_g34
20:58:16 209  ,cad_g35
20:58:16 210  ,cad_g36
20:58:16 211  ,cad_g37
20:58:16 212  ,cad_g38
20:58:16 213  ,cad_g39
20:58:16 214  ,cad_g40
20:58:16 215  ,cad_g41
20:58:16 216  ,chf_g00
20:58:16 217  ,chf_g01
20:58:16 218  ,chf_g02
20:58:16 219  ,chf_g03
20:58:16 220  ,chf_g04
20:58:16 221  ,chf_g05
20:58:16 222  ,chf_g06
20:58:16 223  ,chf_g07
20:58:16 224  ,chf_g08
20:58:16 225  ,chf_g09
20:58:16 226  ,chf_g10
20:58:16 227  ,chf_g11
20:58:16 228  ,chf_g12
20:58:16 229  ,chf_g13
20:58:16 230  ,chf_g14
20:58:16 231  ,chf_g15
20:58:16 232  ,chf_g16
20:58:16 233  ,chf_g17
20:58:16 234  ,chf_g18
20:58:16 235  ,chf_g19
20:58:16 236  ,chf_g20
20:58:16 237  ,chf_g21
20:58:16 238  ,chf_g22
20:58:16 239  ,chf_g23
20:58:16 240  ,chf_g24
20:58:16 241  ,chf_g25
20:58:16 242  ,chf_g26
20:58:16 243  ,chf_g27
20:58:16 244  ,chf_g28
20:58:16 245  ,chf_g29
20:58:16 246  ,chf_g30
20:58:16 247  ,chf_g31
20:58:16 248  ,chf_g32
20:58:16 249  ,chf_g33
20:58:16 250  ,chf_g34
20:58:16 251  ,chf_g35
20:58:16 252  ,chf_g36
20:58:16 253  ,chf_g37
20:58:16 254  ,chf_g38
20:58:16 255  ,chf_g39
20:58:16 256  ,chf_g40
20:58:16 257  ,chf_g41
20:58:16 258  FROM aud_ms6 m
20:58:16 259  WHERE gattn IN('nup','up')
20:58:16 260  AND 1+m.ydate < '&1'||' '||'&2'
20:58:16 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'20:35:00'

View created.

Elapsed: 00:00:00.12
20:58:16 SQL> 
20:58:16 SQL> -- rpt
20:58:16 SQL> 
20:58:16 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13145
up	     6397

Elapsed: 00:00:00.04
20:58:16 SQL> 
20:58:16 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-29 20:30:00

Elapsed: 00:00:00.04
20:58:16 SQL> 
20:58:16 SQL> -- Now build model from bme and score sme
20:58:16 SQL> @score1gattn.sql
20:58:16 SQL> -- score1gattn.sql
20:58:16 SQL> 
20:58:16 SQL> -- Does the 1st SVM score
20:58:16 SQL> 
20:58:16 SQL> -- Fill up svmc_apply_prep
20:58:16 SQL> @score_gattn.sql
20:58:16 SQL> --
20:58:16 SQL> -- score_gattn.sql
20:58:16 SQL> --
20:58:16 SQL> 
20:58:16 SQL> -- usage: score_gattn.sql
20:58:16 SQL> 
20:58:16 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:58:16 SQL> 
20:58:16 SQL> DEFINE target	= 'gattn'
20:58:16 SQL> DEFINE model_name = 'forex14'
20:58:16 SQL> DEFINE bldtable	= 'bme'
20:58:16 SQL> DEFINE scoretable = 'sme'
20:58:16 SQL> DEFINE case_id	= 'prdate'
20:58:16 SQL> 
20:58:16 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:58:16 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:58:16 SQL> 
20:58:16 SQL> -- Builds an SVM model using pl/sql.
20:58:16 SQL> 
20:58:16 SQL> -----------------------------------------------------------------------
20:58:16 SQL> --			    BUILD THE MODEL
20:58:16 SQL> -----------------------------------------------------------------------
20:58:16 SQL> 
20:58:16 SQL> -- Cleanup old build data preparation objects for repeat runs
20:58:16 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
20:58:16 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:58:16 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
20:58:16 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
20:58:16 SQL> 
20:58:16 SQL> 
20:58:16 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:58:16 SQL> --
20:58:16 SQL> -- DROP	TABLE svmc_settings ;
20:58:16 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:58:16 SQL> -- DELETE svmc_settings;
20:58:16 SQL> 
20:58:16 SQL> -- The default classification algorithm is Naive Bayes. So override
20:58:16 SQL> -- this choice to SVM using a settings table.
20:58:16 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:58:16 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:58:16 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:58:16 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:58:16 SQL> -- models.
20:58:16 SQL> --
20:58:16 SQL> 
20:58:16 SQL> -- Do this once and then comment it out.
20:58:16 SQL> -- That makes script go faster.
20:58:16 SQL> -- BEGIN
20:58:16 SQL> -- -- Populate settings table
20:58:16 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:58:16 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:58:16 SQL> --
20:58:16 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:58:16 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:58:16 SQL> --
20:58:16 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:58:16 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:58:16 SQL> --   COMMIT;
20:58:16 SQL> -- END;
20:58:16 SQL> -- /
20:58:16 SQL> 
20:58:16 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:58:16 SQL> 
20:58:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:58:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:58:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:58:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:58:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:58:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:58:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:58:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:58:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
20:58:17 SQL> 
20:58:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:58:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:58:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:58:17 SQL> 
20:58:17 SQL> --------------------------------
20:58:17 SQL> -- PREPARE BUILD (TRAINING) DATA
20:58:17 SQL> --
20:58:17 SQL> 
20:58:17 SQL> -- 1. Missing Value treatment for all Predictors and
20:58:17 SQL> -- 2. Outlier Treatment and
20:58:17 SQL> -- 3. Normalization are performed below.
20:58:17 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:58:17 SQL> --    normalized here.
20:58:17 SQL> 
20:58:17 SQL> BEGIN
20:58:17   2  	-- Perform missing value treatment for all predictors
20:58:17   3  	-- create miss tables
20:58:17   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:58:17   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:58:17   6  
20:58:17   7  	-- populate miss tables
20:58:17   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:58:17   9  	  miss_table_name => 'svmc_miss_num',
20:58:17  10  	  data_table_name => '&bldtable',
20:58:17  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:58:17  12  
20:58:17  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:58:17  14  	  miss_table_name => 'svmc_miss_cat',
20:58:17  15  	  data_table_name => '&bldtable',
20:58:17  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:58:17  17  
20:58:17  18  	-- xform input data to replace missing values
20:58:17  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:58:17  20  	  miss_table_name => 'svmc_miss_num',
20:58:17  21  	  data_table_name => '&bldtable',
20:58:17  22  	  xform_view_name => 'xformed_build_miss_num');
20:58:17  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:58:17  24  	  miss_table_name => 'svmc_miss_cat',
20:58:17  25  	  data_table_name => '&bldtable',
20:58:17  26  	  xform_view_name => 'xformed_build_miss_cat');
20:58:17  27  
20:58:17  28  	-- Perform outlier treatment.
20:58:17  29  	-- create clip table
20:58:17  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:58:17  31  
20:58:17  32  	-- populate clip table
20:58:17  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:58:17  34  	  clip_table_name => 'svmc_clip',
20:58:17  35  	  data_table_name => '&bldtable',
20:58:17  36  	  tail_frac	  => 0.025,
20:58:17  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:58:17  38  
20:58:17  39  	-- xform input data to winsorized data
20:58:17  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:58:17  41  	  clip_table_name => 'svmc_clip',
20:58:17  42  	  data_table_name => '&bldtable',
20:58:17  43  	  xform_view_name => 'svmc_winsor');
20:58:17  44  
20:58:17  45  	-- create normalization table
20:58:17  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:58:17  47  
20:58:17  48  	-- populate normalization table based on winsorized data
20:58:17  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:58:17  50  	  norm_table_name => 'svmc_norm',
20:58:17  51  	  data_table_name => 'svmc_winsor',
20:58:17  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:58:17  53  
20:58:17  54  	-- normalize the original data
20:58:17  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:58:17  56  	  norm_table_name => 'svmc_norm',
20:58:17  57  	  data_table_name => '&bldtable',
20:58:17  58  	  xform_view_name => 'svmc_build_prep');
20:58:17  59  END;
20:58:17  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.43
20:58:35 SQL> 
20:58:35 SQL> ---------------------
20:58:35 SQL> -- CREATE A NEW MODEL
20:58:35 SQL> --
20:58:35 SQL> -- Cleanup old model with the same name for repeat runs
20:58:35 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:58:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:58:35   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.86
20:58:36 SQL> 
20:58:36 SQL> -- Build a new SVM Model
20:58:36 SQL> BEGIN
20:58:36   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:58:36   3  	  model_name	      => '&model_name',
20:58:36   4  	  mining_function     => dbms_data_mining.classification,
20:58:36   5  	  data_table_name     => 'svmc_build_prep',
20:58:36   6  	  case_id_column_name => '&case_id',
20:58:36   7  	  target_column_name  => '&target',
20:58:36   8  	  settings_table_name => 'svmc_settings');
20:58:36   9  END;
20:58:36  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.05
20:59:03 SQL> 
20:59:03 SQL> -----------------------------------------------------------------------
20:59:03 SQL> --			       APPLY/score THE MODEL
20:59:03 SQL> -----------------------------------------------------------------------
20:59:03 SQL> 
20:59:03 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:59:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:59:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:59:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:59:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:59:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:59:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:59:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:59:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:59:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:59:03 SQL> -----------------------
20:59:03 SQL> -- PREPARE SCORING DATA
20:59:03 SQL> --
20:59:03 SQL> -- If the data for model creation has been prepared, then the data
20:59:03 SQL> -- to be scored using the model must be prepared in the same manner
20:59:03 SQL> -- in order to obtain meaningful results.
20:59:03 SQL> --
20:59:03 SQL> -- 1. Missing Value treatment for all Predictors and
20:59:03 SQL> -- 2. Normalization
20:59:03 SQL> -- No outlier treatment will be performed during test and apply. The
20:59:03 SQL> -- normalization step is sufficient, since the normalization parameters
20:59:03 SQL> -- already capture the effects of outlier treatment done with build data.
20:59:03 SQL> --
20:59:03 SQL> BEGIN
20:59:03   2  	-- Xform Test data to replace missing values
20:59:03   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:59:03   4  	  miss_table_name => 'svmc_miss_num',
20:59:03   5  	  data_table_name => '&scoretable',
20:59:03   6  	  xform_view_name => 'xformed_apply_miss_num');
20:59:03   7  
20:59:03   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:59:03   9  	  miss_table_name => 'svmc_miss_cat',
20:59:03  10  	  data_table_name => '&scoretable',
20:59:03  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:59:03  12  
20:59:03  13  	-- Normalize the data to be scored
20:59:03  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:59:03  15  	  norm_table_name => 'svmc_norm',
20:59:03  16  	  data_table_name => '&scoretable',
20:59:03  17  	  xform_view_name => 'svmc_apply_prep');
20:59:03  18  END;
20:59:03  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.25
20:59:04 SQL> 
20:59:04 SQL> -- Use same model_name used in score_gattn.sql
20:59:04 SQL> DEFINE model_name = 'forex14'
20:59:04 SQL> 
20:59:04 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
20:59:04 SQL> 
20:59:04 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
20:59:04   2  SELECT
20:59:04   3  prdate
20:59:04   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:59:04   5  ,sysdate
20:59:04   6  ,SUBSTR(prdate,1,3)pair
20:59:04   7  ,SUBSTR(prdate,4,19)ydate
20:59:04   8  FROM svmc_apply_prep
20:59:04   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.19
20:59:05 SQL> @aud_score1day_gattn.sql	2010-12-30 20:40:00
20:59:05 SQL> --
20:59:05 SQL> -- aud_score1day_gattn.sql
20:59:05 SQL> --
20:59:05 SQL> 
20:59:05 SQL> CREATE OR REPLACE VIEW sme AS
20:59:05   2  SELECT
20:59:05   3  'aud'||m.ydate prdate
20:59:05   4  ,NULL gattn
20:59:05   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:59:05   6  ,eur_g00
20:59:05   7  ,eur_g01
20:59:05   8  ,eur_g02
20:59:05   9  ,eur_g03
20:59:05  10  ,eur_g04
20:59:05  11  ,eur_g05
20:59:05  12  ,eur_g06
20:59:05  13  ,eur_g07
20:59:05  14  ,eur_g08
20:59:05  15  ,eur_g09
20:59:05  16  ,eur_g10
20:59:05  17  ,eur_g11
20:59:05  18  ,eur_g12
20:59:05  19  ,eur_g13
20:59:05  20  ,eur_g14
20:59:05  21  ,eur_g15
20:59:05  22  ,eur_g16
20:59:05  23  ,eur_g17
20:59:05  24  ,eur_g18
20:59:05  25  ,eur_g19
20:59:05  26  ,eur_g20
20:59:05  27  ,eur_g21
20:59:05  28  ,eur_g22
20:59:05  29  ,eur_g23
20:59:05  30  ,eur_g24
20:59:05  31  ,eur_g25
20:59:05  32  ,eur_g26
20:59:05  33  ,eur_g27
20:59:05  34  ,eur_g28
20:59:05  35  ,eur_g29
20:59:05  36  ,eur_g30
20:59:05  37  ,eur_g31
20:59:05  38  ,eur_g32
20:59:05  39  ,eur_g33
20:59:05  40  ,eur_g34
20:59:05  41  ,eur_g35
20:59:05  42  ,eur_g36
20:59:05  43  ,eur_g37
20:59:05  44  ,eur_g38
20:59:05  45  ,eur_g39
20:59:05  46  ,eur_g40
20:59:05  47  ,eur_g41
20:59:05  48  ,aud_g00
20:59:05  49  ,aud_g01
20:59:05  50  ,aud_g02
20:59:05  51  ,aud_g03
20:59:05  52  ,aud_g04
20:59:05  53  ,aud_g05
20:59:05  54  ,aud_g06
20:59:05  55  ,aud_g07
20:59:05  56  ,aud_g08
20:59:05  57  ,aud_g09
20:59:05  58  ,aud_g10
20:59:05  59  ,aud_g11
20:59:05  60  ,aud_g12
20:59:05  61  ,aud_g13
20:59:05  62  ,aud_g14
20:59:05  63  ,aud_g15
20:59:05  64  ,aud_g16
20:59:05  65  ,aud_g17
20:59:05  66  ,aud_g18
20:59:05  67  ,aud_g19
20:59:05  68  ,aud_g20
20:59:05  69  ,aud_g21
20:59:05  70  ,aud_g22
20:59:05  71  ,aud_g23
20:59:05  72  ,aud_g24
20:59:05  73  ,aud_g25
20:59:05  74  ,aud_g26
20:59:05  75  ,aud_g27
20:59:05  76  ,aud_g28
20:59:05  77  ,aud_g29
20:59:05  78  ,aud_g30
20:59:05  79  ,aud_g31
20:59:05  80  ,aud_g32
20:59:05  81  ,aud_g33
20:59:05  82  ,aud_g34
20:59:05  83  ,aud_g35
20:59:05  84  ,aud_g36
20:59:05  85  ,aud_g37
20:59:05  86  ,aud_g38
20:59:05  87  ,aud_g39
20:59:05  88  ,aud_g40
20:59:05  89  ,aud_g41
20:59:05  90  ,gbp_g00
20:59:05  91  ,gbp_g01
20:59:05  92  ,gbp_g02
20:59:05  93  ,gbp_g03
20:59:05  94  ,gbp_g04
20:59:05  95  ,gbp_g05
20:59:05  96  ,gbp_g06
20:59:05  97  ,gbp_g07
20:59:05  98  ,gbp_g08
20:59:05  99  ,gbp_g09
20:59:05 100  ,gbp_g10
20:59:05 101  ,gbp_g11
20:59:05 102  ,gbp_g12
20:59:05 103  ,gbp_g13
20:59:05 104  ,gbp_g14
20:59:05 105  ,gbp_g15
20:59:05 106  ,gbp_g16
20:59:05 107  ,gbp_g17
20:59:05 108  ,gbp_g18
20:59:05 109  ,gbp_g19
20:59:05 110  ,gbp_g20
20:59:05 111  ,gbp_g21
20:59:05 112  ,gbp_g22
20:59:05 113  ,gbp_g23
20:59:05 114  ,gbp_g24
20:59:05 115  ,gbp_g25
20:59:05 116  ,gbp_g26
20:59:05 117  ,gbp_g27
20:59:05 118  ,gbp_g28
20:59:05 119  ,gbp_g29
20:59:05 120  ,gbp_g30
20:59:05 121  ,gbp_g31
20:59:05 122  ,gbp_g32
20:59:05 123  ,gbp_g33
20:59:05 124  ,gbp_g34
20:59:05 125  ,gbp_g35
20:59:05 126  ,gbp_g36
20:59:05 127  ,gbp_g37
20:59:05 128  ,gbp_g38
20:59:05 129  ,gbp_g39
20:59:05 130  ,gbp_g40
20:59:05 131  ,gbp_g41
20:59:05 132  ,jpy_g00
20:59:05 133  ,jpy_g01
20:59:05 134  ,jpy_g02
20:59:05 135  ,jpy_g03
20:59:05 136  ,jpy_g04
20:59:05 137  ,jpy_g05
20:59:05 138  ,jpy_g06
20:59:05 139  ,jpy_g07
20:59:05 140  ,jpy_g08
20:59:05 141  ,jpy_g09
20:59:05 142  ,jpy_g10
20:59:05 143  ,jpy_g11
20:59:05 144  ,jpy_g12
20:59:05 145  ,jpy_g13
20:59:05 146  ,jpy_g14
20:59:05 147  ,jpy_g15
20:59:05 148  ,jpy_g16
20:59:05 149  ,jpy_g17
20:59:05 150  ,jpy_g18
20:59:05 151  ,jpy_g19
20:59:05 152  ,jpy_g20
20:59:05 153  ,jpy_g21
20:59:05 154  ,jpy_g22
20:59:05 155  ,jpy_g23
20:59:05 156  ,jpy_g24
20:59:05 157  ,jpy_g25
20:59:05 158  ,jpy_g26
20:59:05 159  ,jpy_g27
20:59:05 160  ,jpy_g28
20:59:05 161  ,jpy_g29
20:59:05 162  ,jpy_g30
20:59:05 163  ,jpy_g31
20:59:05 164  ,jpy_g32
20:59:05 165  ,jpy_g33
20:59:05 166  ,jpy_g34
20:59:05 167  ,jpy_g35
20:59:05 168  ,jpy_g36
20:59:05 169  ,jpy_g37
20:59:05 170  ,jpy_g38
20:59:05 171  ,jpy_g39
20:59:05 172  ,jpy_g40
20:59:05 173  ,jpy_g41
20:59:05 174  ,cad_g00
20:59:05 175  ,cad_g01
20:59:05 176  ,cad_g02
20:59:05 177  ,cad_g03
20:59:05 178  ,cad_g04
20:59:05 179  ,cad_g05
20:59:05 180  ,cad_g06
20:59:05 181  ,cad_g07
20:59:05 182  ,cad_g08
20:59:05 183  ,cad_g09
20:59:05 184  ,cad_g10
20:59:05 185  ,cad_g11
20:59:05 186  ,cad_g12
20:59:05 187  ,cad_g13
20:59:05 188  ,cad_g14
20:59:05 189  ,cad_g15
20:59:05 190  ,cad_g16
20:59:05 191  ,cad_g17
20:59:05 192  ,cad_g18
20:59:05 193  ,cad_g19
20:59:05 194  ,cad_g20
20:59:05 195  ,cad_g21
20:59:05 196  ,cad_g22
20:59:05 197  ,cad_g23
20:59:05 198  ,cad_g24
20:59:05 199  ,cad_g25
20:59:05 200  ,cad_g26
20:59:05 201  ,cad_g27
20:59:05 202  ,cad_g28
20:59:05 203  ,cad_g29
20:59:05 204  ,cad_g30
20:59:05 205  ,cad_g31
20:59:05 206  ,cad_g32
20:59:05 207  ,cad_g33
20:59:05 208  ,cad_g34
20:59:05 209  ,cad_g35
20:59:05 210  ,cad_g36
20:59:05 211  ,cad_g37
20:59:05 212  ,cad_g38
20:59:05 213  ,cad_g39
20:59:05 214  ,cad_g40
20:59:05 215  ,cad_g41
20:59:05 216  ,chf_g00
20:59:05 217  ,chf_g01
20:59:05 218  ,chf_g02
20:59:05 219  ,chf_g03
20:59:05 220  ,chf_g04
20:59:05 221  ,chf_g05
20:59:05 222  ,chf_g06
20:59:05 223  ,chf_g07
20:59:05 224  ,chf_g08
20:59:05 225  ,chf_g09
20:59:05 226  ,chf_g10
20:59:05 227  ,chf_g11
20:59:05 228  ,chf_g12
20:59:05 229  ,chf_g13
20:59:05 230  ,chf_g14
20:59:05 231  ,chf_g15
20:59:05 232  ,chf_g16
20:59:05 233  ,chf_g17
20:59:05 234  ,chf_g18
20:59:05 235  ,chf_g19
20:59:05 236  ,chf_g20
20:59:05 237  ,chf_g21
20:59:05 238  ,chf_g22
20:59:05 239  ,chf_g23
20:59:05 240  ,chf_g24
20:59:05 241  ,chf_g25
20:59:05 242  ,chf_g26
20:59:05 243  ,chf_g27
20:59:05 244  ,chf_g28
20:59:05 245  ,chf_g29
20:59:05 246  ,chf_g30
20:59:05 247  ,chf_g31
20:59:05 248  ,chf_g32
20:59:05 249  ,chf_g33
20:59:05 250  ,chf_g34
20:59:05 251  ,chf_g35
20:59:05 252  ,chf_g36
20:59:05 253  ,chf_g37
20:59:05 254  ,chf_g38
20:59:05 255  ,chf_g39
20:59:05 256  ,chf_g40
20:59:05 257  ,chf_g41
20:59:05 258  FROM aud_ms6 m
20:59:05 259  WHERE m.ydate = '&1'||' '||'&2'
20:59:05 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'20:40:00'

View created.

Elapsed: 00:00:00.15
20:59:05 SQL> 
20:59:05 SQL> -- rpt
20:59:05 SQL> -- We should see just 1 row:
20:59:05 SQL> 
20:59:05 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
20:59:05 SQL> 
20:59:05 SQL> -- Build the model:
20:59:05 SQL> CREATE OR REPLACE VIEW bme AS
20:59:05   2  SELECT
20:59:05   3  'aud'||m.ydate prdate
20:59:05   4  ,gattn
20:59:05   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:59:05   6  ,eur_g00
20:59:05   7  ,eur_g01
20:59:05   8  ,eur_g02
20:59:05   9  ,eur_g03
20:59:05  10  ,eur_g04
20:59:05  11  ,eur_g05
20:59:05  12  ,eur_g06
20:59:05  13  ,eur_g07
20:59:05  14  ,eur_g08
20:59:05  15  ,eur_g09
20:59:05  16  ,eur_g10
20:59:05  17  ,eur_g11
20:59:05  18  ,eur_g12
20:59:05  19  ,eur_g13
20:59:05  20  ,eur_g14
20:59:05  21  ,eur_g15
20:59:05  22  ,eur_g16
20:59:05  23  ,eur_g17
20:59:05  24  ,eur_g18
20:59:05  25  ,eur_g19
20:59:05  26  ,eur_g20
20:59:05  27  ,eur_g21
20:59:05  28  ,eur_g22
20:59:05  29  ,eur_g23
20:59:05  30  ,eur_g24
20:59:05  31  ,eur_g25
20:59:05  32  ,eur_g26
20:59:05  33  ,eur_g27
20:59:05  34  ,eur_g28
20:59:05  35  ,eur_g29
20:59:05  36  ,eur_g30
20:59:05  37  ,eur_g31
20:59:05  38  ,eur_g32
20:59:05  39  ,eur_g33
20:59:05  40  ,eur_g34
20:59:05  41  ,eur_g35
20:59:05  42  ,eur_g36
20:59:05  43  ,eur_g37
20:59:05  44  ,eur_g38
20:59:05  45  ,eur_g39
20:59:05  46  ,eur_g40
20:59:05  47  ,eur_g41
20:59:05  48  ,aud_g00
20:59:05  49  ,aud_g01
20:59:05  50  ,aud_g02
20:59:05  51  ,aud_g03
20:59:05  52  ,aud_g04
20:59:05  53  ,aud_g05
20:59:05  54  ,aud_g06
20:59:05  55  ,aud_g07
20:59:05  56  ,aud_g08
20:59:05  57  ,aud_g09
20:59:05  58  ,aud_g10
20:59:05  59  ,aud_g11
20:59:05  60  ,aud_g12
20:59:05  61  ,aud_g13
20:59:05  62  ,aud_g14
20:59:05  63  ,aud_g15
20:59:05  64  ,aud_g16
20:59:05  65  ,aud_g17
20:59:05  66  ,aud_g18
20:59:05  67  ,aud_g19
20:59:05  68  ,aud_g20
20:59:05  69  ,aud_g21
20:59:05  70  ,aud_g22
20:59:05  71  ,aud_g23
20:59:05  72  ,aud_g24
20:59:05  73  ,aud_g25
20:59:05  74  ,aud_g26
20:59:05  75  ,aud_g27
20:59:05  76  ,aud_g28
20:59:05  77  ,aud_g29
20:59:05  78  ,aud_g30
20:59:05  79  ,aud_g31
20:59:05  80  ,aud_g32
20:59:05  81  ,aud_g33
20:59:05  82  ,aud_g34
20:59:05  83  ,aud_g35
20:59:05  84  ,aud_g36
20:59:05  85  ,aud_g37
20:59:05  86  ,aud_g38
20:59:05  87  ,aud_g39
20:59:05  88  ,aud_g40
20:59:05  89  ,aud_g41
20:59:05  90  ,gbp_g00
20:59:05  91  ,gbp_g01
20:59:05  92  ,gbp_g02
20:59:05  93  ,gbp_g03
20:59:05  94  ,gbp_g04
20:59:05  95  ,gbp_g05
20:59:05  96  ,gbp_g06
20:59:05  97  ,gbp_g07
20:59:05  98  ,gbp_g08
20:59:05  99  ,gbp_g09
20:59:05 100  ,gbp_g10
20:59:05 101  ,gbp_g11
20:59:05 102  ,gbp_g12
20:59:05 103  ,gbp_g13
20:59:05 104  ,gbp_g14
20:59:05 105  ,gbp_g15
20:59:05 106  ,gbp_g16
20:59:05 107  ,gbp_g17
20:59:05 108  ,gbp_g18
20:59:05 109  ,gbp_g19
20:59:05 110  ,gbp_g20
20:59:05 111  ,gbp_g21
20:59:05 112  ,gbp_g22
20:59:05 113  ,gbp_g23
20:59:05 114  ,gbp_g24
20:59:05 115  ,gbp_g25
20:59:05 116  ,gbp_g26
20:59:05 117  ,gbp_g27
20:59:05 118  ,gbp_g28
20:59:05 119  ,gbp_g29
20:59:05 120  ,gbp_g30
20:59:05 121  ,gbp_g31
20:59:05 122  ,gbp_g32
20:59:05 123  ,gbp_g33
20:59:05 124  ,gbp_g34
20:59:05 125  ,gbp_g35
20:59:05 126  ,gbp_g36
20:59:05 127  ,gbp_g37
20:59:05 128  ,gbp_g38
20:59:05 129  ,gbp_g39
20:59:05 130  ,gbp_g40
20:59:05 131  ,gbp_g41
20:59:05 132  ,jpy_g00
20:59:05 133  ,jpy_g01
20:59:05 134  ,jpy_g02
20:59:05 135  ,jpy_g03
20:59:05 136  ,jpy_g04
20:59:05 137  ,jpy_g05
20:59:05 138  ,jpy_g06
20:59:05 139  ,jpy_g07
20:59:05 140  ,jpy_g08
20:59:05 141  ,jpy_g09
20:59:05 142  ,jpy_g10
20:59:05 143  ,jpy_g11
20:59:05 144  ,jpy_g12
20:59:05 145  ,jpy_g13
20:59:05 146  ,jpy_g14
20:59:05 147  ,jpy_g15
20:59:05 148  ,jpy_g16
20:59:05 149  ,jpy_g17
20:59:05 150  ,jpy_g18
20:59:05 151  ,jpy_g19
20:59:05 152  ,jpy_g20
20:59:05 153  ,jpy_g21
20:59:05 154  ,jpy_g22
20:59:05 155  ,jpy_g23
20:59:05 156  ,jpy_g24
20:59:05 157  ,jpy_g25
20:59:05 158  ,jpy_g26
20:59:05 159  ,jpy_g27
20:59:05 160  ,jpy_g28
20:59:05 161  ,jpy_g29
20:59:05 162  ,jpy_g30
20:59:05 163  ,jpy_g31
20:59:05 164  ,jpy_g32
20:59:05 165  ,jpy_g33
20:59:05 166  ,jpy_g34
20:59:05 167  ,jpy_g35
20:59:05 168  ,jpy_g36
20:59:05 169  ,jpy_g37
20:59:05 170  ,jpy_g38
20:59:05 171  ,jpy_g39
20:59:05 172  ,jpy_g40
20:59:05 173  ,jpy_g41
20:59:05 174  ,cad_g00
20:59:05 175  ,cad_g01
20:59:05 176  ,cad_g02
20:59:05 177  ,cad_g03
20:59:05 178  ,cad_g04
20:59:05 179  ,cad_g05
20:59:05 180  ,cad_g06
20:59:05 181  ,cad_g07
20:59:05 182  ,cad_g08
20:59:05 183  ,cad_g09
20:59:05 184  ,cad_g10
20:59:05 185  ,cad_g11
20:59:05 186  ,cad_g12
20:59:05 187  ,cad_g13
20:59:05 188  ,cad_g14
20:59:05 189  ,cad_g15
20:59:05 190  ,cad_g16
20:59:05 191  ,cad_g17
20:59:05 192  ,cad_g18
20:59:05 193  ,cad_g19
20:59:05 194  ,cad_g20
20:59:05 195  ,cad_g21
20:59:05 196  ,cad_g22
20:59:05 197  ,cad_g23
20:59:05 198  ,cad_g24
20:59:05 199  ,cad_g25
20:59:05 200  ,cad_g26
20:59:05 201  ,cad_g27
20:59:05 202  ,cad_g28
20:59:05 203  ,cad_g29
20:59:05 204  ,cad_g30
20:59:05 205  ,cad_g31
20:59:05 206  ,cad_g32
20:59:05 207  ,cad_g33
20:59:05 208  ,cad_g34
20:59:05 209  ,cad_g35
20:59:05 210  ,cad_g36
20:59:05 211  ,cad_g37
20:59:05 212  ,cad_g38
20:59:05 213  ,cad_g39
20:59:05 214  ,cad_g40
20:59:05 215  ,cad_g41
20:59:05 216  ,chf_g00
20:59:05 217  ,chf_g01
20:59:05 218  ,chf_g02
20:59:05 219  ,chf_g03
20:59:05 220  ,chf_g04
20:59:05 221  ,chf_g05
20:59:05 222  ,chf_g06
20:59:05 223  ,chf_g07
20:59:05 224  ,chf_g08
20:59:05 225  ,chf_g09
20:59:05 226  ,chf_g10
20:59:05 227  ,chf_g11
20:59:05 228  ,chf_g12
20:59:05 229  ,chf_g13
20:59:05 230  ,chf_g14
20:59:05 231  ,chf_g15
20:59:05 232  ,chf_g16
20:59:05 233  ,chf_g17
20:59:05 234  ,chf_g18
20:59:05 235  ,chf_g19
20:59:05 236  ,chf_g20
20:59:05 237  ,chf_g21
20:59:05 238  ,chf_g22
20:59:05 239  ,chf_g23
20:59:05 240  ,chf_g24
20:59:05 241  ,chf_g25
20:59:05 242  ,chf_g26
20:59:05 243  ,chf_g27
20:59:05 244  ,chf_g28
20:59:05 245  ,chf_g29
20:59:05 246  ,chf_g30
20:59:05 247  ,chf_g31
20:59:05 248  ,chf_g32
20:59:05 249  ,chf_g33
20:59:05 250  ,chf_g34
20:59:05 251  ,chf_g35
20:59:05 252  ,chf_g36
20:59:05 253  ,chf_g37
20:59:05 254  ,chf_g38
20:59:05 255  ,chf_g39
20:59:05 256  ,chf_g40
20:59:05 257  ,chf_g41
20:59:05 258  FROM aud_ms6 m
20:59:05 259  WHERE gattn IN('nup','up')
20:59:05 260  AND 1+m.ydate < '&1'||' '||'&2'
20:59:05 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'20:40:00'

View created.

Elapsed: 00:00:00.11
20:59:05 SQL> 
20:59:05 SQL> -- rpt
20:59:05 SQL> 
20:59:05 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13146
up	     6397

Elapsed: 00:00:00.04
20:59:05 SQL> 
20:59:05 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-29 20:35:00

Elapsed: 00:00:00.03
20:59:05 SQL> 
20:59:05 SQL> -- Now build model from bme and score sme
20:59:05 SQL> @score1gattn.sql
20:59:05 SQL> -- score1gattn.sql
20:59:05 SQL> 
20:59:05 SQL> -- Does the 1st SVM score
20:59:05 SQL> 
20:59:05 SQL> -- Fill up svmc_apply_prep
20:59:05 SQL> @score_gattn.sql
20:59:05 SQL> --
20:59:05 SQL> -- score_gattn.sql
20:59:05 SQL> --
20:59:05 SQL> 
20:59:05 SQL> -- usage: score_gattn.sql
20:59:05 SQL> 
20:59:05 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:59:05 SQL> 
20:59:05 SQL> DEFINE target	= 'gattn'
20:59:05 SQL> DEFINE model_name = 'forex14'
20:59:05 SQL> DEFINE bldtable	= 'bme'
20:59:05 SQL> DEFINE scoretable = 'sme'
20:59:05 SQL> DEFINE case_id	= 'prdate'
20:59:05 SQL> 
20:59:05 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:59:05 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:59:05 SQL> 
20:59:05 SQL> -- Builds an SVM model using pl/sql.
20:59:05 SQL> 
20:59:05 SQL> -----------------------------------------------------------------------
20:59:05 SQL> --			    BUILD THE MODEL
20:59:05 SQL> -----------------------------------------------------------------------
20:59:05 SQL> 
20:59:05 SQL> -- Cleanup old build data preparation objects for repeat runs
20:59:05 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
20:59:05 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:59:05 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
20:59:05 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
20:59:05 SQL> 
20:59:05 SQL> 
20:59:05 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:59:05 SQL> --
20:59:05 SQL> -- DROP	TABLE svmc_settings ;
20:59:05 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:59:05 SQL> -- DELETE svmc_settings;
20:59:05 SQL> 
20:59:05 SQL> -- The default classification algorithm is Naive Bayes. So override
20:59:05 SQL> -- this choice to SVM using a settings table.
20:59:05 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:59:05 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:59:05 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:59:05 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:59:05 SQL> -- models.
20:59:05 SQL> --
20:59:05 SQL> 
20:59:05 SQL> -- Do this once and then comment it out.
20:59:05 SQL> -- That makes script go faster.
20:59:05 SQL> -- BEGIN
20:59:05 SQL> -- -- Populate settings table
20:59:05 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:59:05 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:59:05 SQL> --
20:59:05 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:59:05 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:59:05 SQL> --
20:59:05 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:59:05 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:59:05 SQL> --   COMMIT;
20:59:05 SQL> -- END;
20:59:05 SQL> -- /
20:59:05 SQL> 
20:59:05 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:59:05 SQL> 
20:59:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:59:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:59:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:59:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:59:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:59:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
20:59:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:59:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:59:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:59:05 SQL> 
20:59:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:59:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:59:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:59:05 SQL> 
20:59:05 SQL> --------------------------------
20:59:05 SQL> -- PREPARE BUILD (TRAINING) DATA
20:59:05 SQL> --
20:59:05 SQL> 
20:59:05 SQL> -- 1. Missing Value treatment for all Predictors and
20:59:05 SQL> -- 2. Outlier Treatment and
20:59:05 SQL> -- 3. Normalization are performed below.
20:59:05 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:59:05 SQL> --    normalized here.
20:59:05 SQL> 
20:59:05 SQL> BEGIN
20:59:05   2  	-- Perform missing value treatment for all predictors
20:59:05   3  	-- create miss tables
20:59:05   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:59:05   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:59:05   6  
20:59:05   7  	-- populate miss tables
20:59:05   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:59:05   9  	  miss_table_name => 'svmc_miss_num',
20:59:05  10  	  data_table_name => '&bldtable',
20:59:05  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:59:05  12  
20:59:05  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:59:05  14  	  miss_table_name => 'svmc_miss_cat',
20:59:05  15  	  data_table_name => '&bldtable',
20:59:05  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:59:05  17  
20:59:05  18  	-- xform input data to replace missing values
20:59:05  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:59:05  20  	  miss_table_name => 'svmc_miss_num',
20:59:05  21  	  data_table_name => '&bldtable',
20:59:05  22  	  xform_view_name => 'xformed_build_miss_num');
20:59:05  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:59:05  24  	  miss_table_name => 'svmc_miss_cat',
20:59:05  25  	  data_table_name => '&bldtable',
20:59:05  26  	  xform_view_name => 'xformed_build_miss_cat');
20:59:05  27  
20:59:05  28  	-- Perform outlier treatment.
20:59:05  29  	-- create clip table
20:59:05  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:59:05  31  
20:59:05  32  	-- populate clip table
20:59:05  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:59:05  34  	  clip_table_name => 'svmc_clip',
20:59:05  35  	  data_table_name => '&bldtable',
20:59:05  36  	  tail_frac	  => 0.025,
20:59:05  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:59:05  38  
20:59:05  39  	-- xform input data to winsorized data
20:59:05  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:59:05  41  	  clip_table_name => 'svmc_clip',
20:59:05  42  	  data_table_name => '&bldtable',
20:59:05  43  	  xform_view_name => 'svmc_winsor');
20:59:05  44  
20:59:05  45  	-- create normalization table
20:59:05  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:59:05  47  
20:59:05  48  	-- populate normalization table based on winsorized data
20:59:05  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:59:05  50  	  norm_table_name => 'svmc_norm',
20:59:05  51  	  data_table_name => 'svmc_winsor',
20:59:05  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:59:05  53  
20:59:05  54  	-- normalize the original data
20:59:05  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:59:05  56  	  norm_table_name => 'svmc_norm',
20:59:05  57  	  data_table_name => '&bldtable',
20:59:05  58  	  xform_view_name => 'svmc_build_prep');
20:59:05  59  END;
20:59:05  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.97
20:59:23 SQL> 
20:59:23 SQL> ---------------------
20:59:23 SQL> -- CREATE A NEW MODEL
20:59:23 SQL> --
20:59:23 SQL> -- Cleanup old model with the same name for repeat runs
20:59:23 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:59:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:59:23   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
20:59:24 SQL> 
20:59:24 SQL> -- Build a new SVM Model
20:59:24 SQL> BEGIN
20:59:24   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:59:24   3  	  model_name	      => '&model_name',
20:59:24   4  	  mining_function     => dbms_data_mining.classification,
20:59:24   5  	  data_table_name     => 'svmc_build_prep',
20:59:24   6  	  case_id_column_name => '&case_id',
20:59:24   7  	  target_column_name  => '&target',
20:59:24   8  	  settings_table_name => 'svmc_settings');
20:59:24   9  END;
20:59:24  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.74
20:59:52 SQL> 
20:59:52 SQL> -----------------------------------------------------------------------
20:59:52 SQL> --			       APPLY/score THE MODEL
20:59:52 SQL> -----------------------------------------------------------------------
20:59:52 SQL> 
20:59:52 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:59:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:59:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:59:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:59:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:59:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:59:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:59:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:59:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:59:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:59:52 SQL> -----------------------
20:59:52 SQL> -- PREPARE SCORING DATA
20:59:52 SQL> --
20:59:52 SQL> -- If the data for model creation has been prepared, then the data
20:59:52 SQL> -- to be scored using the model must be prepared in the same manner
20:59:52 SQL> -- in order to obtain meaningful results.
20:59:52 SQL> --
20:59:52 SQL> -- 1. Missing Value treatment for all Predictors and
20:59:52 SQL> -- 2. Normalization
20:59:52 SQL> -- No outlier treatment will be performed during test and apply. The
20:59:52 SQL> -- normalization step is sufficient, since the normalization parameters
20:59:52 SQL> -- already capture the effects of outlier treatment done with build data.
20:59:52 SQL> --
20:59:52 SQL> BEGIN
20:59:52   2  	-- Xform Test data to replace missing values
20:59:52   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:59:52   4  	  miss_table_name => 'svmc_miss_num',
20:59:52   5  	  data_table_name => '&scoretable',
20:59:52   6  	  xform_view_name => 'xformed_apply_miss_num');
20:59:52   7  
20:59:52   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:59:52   9  	  miss_table_name => 'svmc_miss_cat',
20:59:52  10  	  data_table_name => '&scoretable',
20:59:52  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:59:52  12  
20:59:52  13  	-- Normalize the data to be scored
20:59:52  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:59:52  15  	  norm_table_name => 'svmc_norm',
20:59:52  16  	  data_table_name => '&scoretable',
20:59:52  17  	  xform_view_name => 'svmc_apply_prep');
20:59:52  18  END;
20:59:52  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
20:59:54 SQL> 
20:59:54 SQL> -- Use same model_name used in score_gattn.sql
20:59:54 SQL> DEFINE model_name = 'forex14'
20:59:54 SQL> 
20:59:54 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
20:59:54 SQL> 
20:59:54 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
20:59:54   2  SELECT
20:59:54   3  prdate
20:59:54   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:59:54   5  ,sysdate
20:59:54   6  ,SUBSTR(prdate,1,3)pair
20:59:54   7  ,SUBSTR(prdate,4,19)ydate
20:59:54   8  FROM svmc_apply_prep
20:59:54   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
20:59:54 SQL> @aud_score1day_gattn.sql	2010-12-30 20:45:00
20:59:54 SQL> --
20:59:54 SQL> -- aud_score1day_gattn.sql
20:59:54 SQL> --
20:59:54 SQL> 
20:59:54 SQL> CREATE OR REPLACE VIEW sme AS
20:59:54   2  SELECT
20:59:54   3  'aud'||m.ydate prdate
20:59:54   4  ,NULL gattn
20:59:54   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:59:54   6  ,eur_g00
20:59:54   7  ,eur_g01
20:59:54   8  ,eur_g02
20:59:54   9  ,eur_g03
20:59:54  10  ,eur_g04
20:59:54  11  ,eur_g05
20:59:54  12  ,eur_g06
20:59:54  13  ,eur_g07
20:59:54  14  ,eur_g08
20:59:54  15  ,eur_g09
20:59:54  16  ,eur_g10
20:59:54  17  ,eur_g11
20:59:54  18  ,eur_g12
20:59:54  19  ,eur_g13
20:59:54  20  ,eur_g14
20:59:54  21  ,eur_g15
20:59:54  22  ,eur_g16
20:59:54  23  ,eur_g17
20:59:54  24  ,eur_g18
20:59:54  25  ,eur_g19
20:59:54  26  ,eur_g20
20:59:54  27  ,eur_g21
20:59:54  28  ,eur_g22
20:59:54  29  ,eur_g23
20:59:54  30  ,eur_g24
20:59:54  31  ,eur_g25
20:59:54  32  ,eur_g26
20:59:54  33  ,eur_g27
20:59:54  34  ,eur_g28
20:59:54  35  ,eur_g29
20:59:54  36  ,eur_g30
20:59:54  37  ,eur_g31
20:59:54  38  ,eur_g32
20:59:54  39  ,eur_g33
20:59:54  40  ,eur_g34
20:59:54  41  ,eur_g35
20:59:54  42  ,eur_g36
20:59:54  43  ,eur_g37
20:59:54  44  ,eur_g38
20:59:54  45  ,eur_g39
20:59:54  46  ,eur_g40
20:59:54  47  ,eur_g41
20:59:54  48  ,aud_g00
20:59:54  49  ,aud_g01
20:59:54  50  ,aud_g02
20:59:54  51  ,aud_g03
20:59:54  52  ,aud_g04
20:59:54  53  ,aud_g05
20:59:54  54  ,aud_g06
20:59:54  55  ,aud_g07
20:59:54  56  ,aud_g08
20:59:54  57  ,aud_g09
20:59:54  58  ,aud_g10
20:59:54  59  ,aud_g11
20:59:54  60  ,aud_g12
20:59:54  61  ,aud_g13
20:59:54  62  ,aud_g14
20:59:54  63  ,aud_g15
20:59:54  64  ,aud_g16
20:59:54  65  ,aud_g17
20:59:54  66  ,aud_g18
20:59:54  67  ,aud_g19
20:59:54  68  ,aud_g20
20:59:54  69  ,aud_g21
20:59:54  70  ,aud_g22
20:59:54  71  ,aud_g23
20:59:54  72  ,aud_g24
20:59:54  73  ,aud_g25
20:59:54  74  ,aud_g26
20:59:54  75  ,aud_g27
20:59:54  76  ,aud_g28
20:59:54  77  ,aud_g29
20:59:54  78  ,aud_g30
20:59:54  79  ,aud_g31
20:59:54  80  ,aud_g32
20:59:54  81  ,aud_g33
20:59:54  82  ,aud_g34
20:59:54  83  ,aud_g35
20:59:54  84  ,aud_g36
20:59:54  85  ,aud_g37
20:59:54  86  ,aud_g38
20:59:54  87  ,aud_g39
20:59:54  88  ,aud_g40
20:59:54  89  ,aud_g41
20:59:54  90  ,gbp_g00
20:59:54  91  ,gbp_g01
20:59:54  92  ,gbp_g02
20:59:54  93  ,gbp_g03
20:59:54  94  ,gbp_g04
20:59:54  95  ,gbp_g05
20:59:54  96  ,gbp_g06
20:59:54  97  ,gbp_g07
20:59:54  98  ,gbp_g08
20:59:54  99  ,gbp_g09
20:59:54 100  ,gbp_g10
20:59:54 101  ,gbp_g11
20:59:54 102  ,gbp_g12
20:59:54 103  ,gbp_g13
20:59:54 104  ,gbp_g14
20:59:54 105  ,gbp_g15
20:59:54 106  ,gbp_g16
20:59:54 107  ,gbp_g17
20:59:54 108  ,gbp_g18
20:59:54 109  ,gbp_g19
20:59:54 110  ,gbp_g20
20:59:54 111  ,gbp_g21
20:59:54 112  ,gbp_g22
20:59:54 113  ,gbp_g23
20:59:54 114  ,gbp_g24
20:59:54 115  ,gbp_g25
20:59:54 116  ,gbp_g26
20:59:54 117  ,gbp_g27
20:59:54 118  ,gbp_g28
20:59:54 119  ,gbp_g29
20:59:54 120  ,gbp_g30
20:59:54 121  ,gbp_g31
20:59:54 122  ,gbp_g32
20:59:54 123  ,gbp_g33
20:59:54 124  ,gbp_g34
20:59:54 125  ,gbp_g35
20:59:54 126  ,gbp_g36
20:59:54 127  ,gbp_g37
20:59:54 128  ,gbp_g38
20:59:54 129  ,gbp_g39
20:59:54 130  ,gbp_g40
20:59:54 131  ,gbp_g41
20:59:54 132  ,jpy_g00
20:59:54 133  ,jpy_g01
20:59:54 134  ,jpy_g02
20:59:54 135  ,jpy_g03
20:59:54 136  ,jpy_g04
20:59:54 137  ,jpy_g05
20:59:54 138  ,jpy_g06
20:59:54 139  ,jpy_g07
20:59:54 140  ,jpy_g08
20:59:54 141  ,jpy_g09
20:59:54 142  ,jpy_g10
20:59:54 143  ,jpy_g11
20:59:54 144  ,jpy_g12
20:59:54 145  ,jpy_g13
20:59:54 146  ,jpy_g14
20:59:54 147  ,jpy_g15
20:59:54 148  ,jpy_g16
20:59:54 149  ,jpy_g17
20:59:54 150  ,jpy_g18
20:59:54 151  ,jpy_g19
20:59:54 152  ,jpy_g20
20:59:54 153  ,jpy_g21
20:59:54 154  ,jpy_g22
20:59:54 155  ,jpy_g23
20:59:54 156  ,jpy_g24
20:59:54 157  ,jpy_g25
20:59:54 158  ,jpy_g26
20:59:54 159  ,jpy_g27
20:59:54 160  ,jpy_g28
20:59:54 161  ,jpy_g29
20:59:54 162  ,jpy_g30
20:59:54 163  ,jpy_g31
20:59:54 164  ,jpy_g32
20:59:54 165  ,jpy_g33
20:59:54 166  ,jpy_g34
20:59:54 167  ,jpy_g35
20:59:54 168  ,jpy_g36
20:59:54 169  ,jpy_g37
20:59:54 170  ,jpy_g38
20:59:54 171  ,jpy_g39
20:59:54 172  ,jpy_g40
20:59:54 173  ,jpy_g41
20:59:54 174  ,cad_g00
20:59:54 175  ,cad_g01
20:59:54 176  ,cad_g02
20:59:54 177  ,cad_g03
20:59:54 178  ,cad_g04
20:59:54 179  ,cad_g05
20:59:54 180  ,cad_g06
20:59:54 181  ,cad_g07
20:59:54 182  ,cad_g08
20:59:54 183  ,cad_g09
20:59:54 184  ,cad_g10
20:59:54 185  ,cad_g11
20:59:54 186  ,cad_g12
20:59:54 187  ,cad_g13
20:59:54 188  ,cad_g14
20:59:54 189  ,cad_g15
20:59:54 190  ,cad_g16
20:59:54 191  ,cad_g17
20:59:54 192  ,cad_g18
20:59:54 193  ,cad_g19
20:59:54 194  ,cad_g20
20:59:54 195  ,cad_g21
20:59:54 196  ,cad_g22
20:59:54 197  ,cad_g23
20:59:54 198  ,cad_g24
20:59:54 199  ,cad_g25
20:59:54 200  ,cad_g26
20:59:54 201  ,cad_g27
20:59:54 202  ,cad_g28
20:59:54 203  ,cad_g29
20:59:54 204  ,cad_g30
20:59:54 205  ,cad_g31
20:59:54 206  ,cad_g32
20:59:54 207  ,cad_g33
20:59:54 208  ,cad_g34
20:59:54 209  ,cad_g35
20:59:54 210  ,cad_g36
20:59:54 211  ,cad_g37
20:59:54 212  ,cad_g38
20:59:54 213  ,cad_g39
20:59:54 214  ,cad_g40
20:59:54 215  ,cad_g41
20:59:54 216  ,chf_g00
20:59:54 217  ,chf_g01
20:59:54 218  ,chf_g02
20:59:54 219  ,chf_g03
20:59:54 220  ,chf_g04
20:59:54 221  ,chf_g05
20:59:54 222  ,chf_g06
20:59:54 223  ,chf_g07
20:59:54 224  ,chf_g08
20:59:54 225  ,chf_g09
20:59:54 226  ,chf_g10
20:59:54 227  ,chf_g11
20:59:54 228  ,chf_g12
20:59:54 229  ,chf_g13
20:59:54 230  ,chf_g14
20:59:54 231  ,chf_g15
20:59:54 232  ,chf_g16
20:59:54 233  ,chf_g17
20:59:54 234  ,chf_g18
20:59:54 235  ,chf_g19
20:59:54 236  ,chf_g20
20:59:54 237  ,chf_g21
20:59:54 238  ,chf_g22
20:59:54 239  ,chf_g23
20:59:54 240  ,chf_g24
20:59:54 241  ,chf_g25
20:59:54 242  ,chf_g26
20:59:54 243  ,chf_g27
20:59:54 244  ,chf_g28
20:59:54 245  ,chf_g29
20:59:54 246  ,chf_g30
20:59:54 247  ,chf_g31
20:59:54 248  ,chf_g32
20:59:54 249  ,chf_g33
20:59:54 250  ,chf_g34
20:59:54 251  ,chf_g35
20:59:54 252  ,chf_g36
20:59:54 253  ,chf_g37
20:59:54 254  ,chf_g38
20:59:54 255  ,chf_g39
20:59:54 256  ,chf_g40
20:59:54 257  ,chf_g41
20:59:54 258  FROM aud_ms6 m
20:59:54 259  WHERE m.ydate = '&1'||' '||'&2'
20:59:54 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'20:45:00'

View created.

Elapsed: 00:00:00.14
20:59:54 SQL> 
20:59:54 SQL> -- rpt
20:59:54 SQL> -- We should see just 1 row:
20:59:54 SQL> 
20:59:54 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
20:59:54 SQL> 
20:59:54 SQL> -- Build the model:
20:59:54 SQL> CREATE OR REPLACE VIEW bme AS
20:59:54   2  SELECT
20:59:54   3  'aud'||m.ydate prdate
20:59:54   4  ,gattn
20:59:54   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:59:54   6  ,eur_g00
20:59:54   7  ,eur_g01
20:59:54   8  ,eur_g02
20:59:54   9  ,eur_g03
20:59:54  10  ,eur_g04
20:59:54  11  ,eur_g05
20:59:54  12  ,eur_g06
20:59:54  13  ,eur_g07
20:59:54  14  ,eur_g08
20:59:54  15  ,eur_g09
20:59:54  16  ,eur_g10
20:59:54  17  ,eur_g11
20:59:54  18  ,eur_g12
20:59:54  19  ,eur_g13
20:59:54  20  ,eur_g14
20:59:54  21  ,eur_g15
20:59:54  22  ,eur_g16
20:59:54  23  ,eur_g17
20:59:54  24  ,eur_g18
20:59:54  25  ,eur_g19
20:59:54  26  ,eur_g20
20:59:54  27  ,eur_g21
20:59:54  28  ,eur_g22
20:59:54  29  ,eur_g23
20:59:54  30  ,eur_g24
20:59:54  31  ,eur_g25
20:59:54  32  ,eur_g26
20:59:54  33  ,eur_g27
20:59:54  34  ,eur_g28
20:59:54  35  ,eur_g29
20:59:54  36  ,eur_g30
20:59:54  37  ,eur_g31
20:59:54  38  ,eur_g32
20:59:54  39  ,eur_g33
20:59:54  40  ,eur_g34
20:59:54  41  ,eur_g35
20:59:54  42  ,eur_g36
20:59:54  43  ,eur_g37
20:59:54  44  ,eur_g38
20:59:54  45  ,eur_g39
20:59:54  46  ,eur_g40
20:59:54  47  ,eur_g41
20:59:54  48  ,aud_g00
20:59:54  49  ,aud_g01
20:59:54  50  ,aud_g02
20:59:54  51  ,aud_g03
20:59:54  52  ,aud_g04
20:59:54  53  ,aud_g05
20:59:54  54  ,aud_g06
20:59:54  55  ,aud_g07
20:59:54  56  ,aud_g08
20:59:54  57  ,aud_g09
20:59:54  58  ,aud_g10
20:59:54  59  ,aud_g11
20:59:54  60  ,aud_g12
20:59:54  61  ,aud_g13
20:59:54  62  ,aud_g14
20:59:54  63  ,aud_g15
20:59:54  64  ,aud_g16
20:59:54  65  ,aud_g17
20:59:54  66  ,aud_g18
20:59:54  67  ,aud_g19
20:59:54  68  ,aud_g20
20:59:54  69  ,aud_g21
20:59:54  70  ,aud_g22
20:59:54  71  ,aud_g23
20:59:54  72  ,aud_g24
20:59:54  73  ,aud_g25
20:59:54  74  ,aud_g26
20:59:54  75  ,aud_g27
20:59:54  76  ,aud_g28
20:59:54  77  ,aud_g29
20:59:54  78  ,aud_g30
20:59:54  79  ,aud_g31
20:59:54  80  ,aud_g32
20:59:54  81  ,aud_g33
20:59:54  82  ,aud_g34
20:59:54  83  ,aud_g35
20:59:54  84  ,aud_g36
20:59:54  85  ,aud_g37
20:59:54  86  ,aud_g38
20:59:54  87  ,aud_g39
20:59:54  88  ,aud_g40
20:59:54  89  ,aud_g41
20:59:54  90  ,gbp_g00
20:59:54  91  ,gbp_g01
20:59:54  92  ,gbp_g02
20:59:54  93  ,gbp_g03
20:59:54  94  ,gbp_g04
20:59:54  95  ,gbp_g05
20:59:54  96  ,gbp_g06
20:59:54  97  ,gbp_g07
20:59:54  98  ,gbp_g08
20:59:54  99  ,gbp_g09
20:59:54 100  ,gbp_g10
20:59:54 101  ,gbp_g11
20:59:54 102  ,gbp_g12
20:59:54 103  ,gbp_g13
20:59:54 104  ,gbp_g14
20:59:54 105  ,gbp_g15
20:59:54 106  ,gbp_g16
20:59:54 107  ,gbp_g17
20:59:54 108  ,gbp_g18
20:59:54 109  ,gbp_g19
20:59:54 110  ,gbp_g20
20:59:54 111  ,gbp_g21
20:59:54 112  ,gbp_g22
20:59:54 113  ,gbp_g23
20:59:54 114  ,gbp_g24
20:59:54 115  ,gbp_g25
20:59:54 116  ,gbp_g26
20:59:54 117  ,gbp_g27
20:59:54 118  ,gbp_g28
20:59:54 119  ,gbp_g29
20:59:54 120  ,gbp_g30
20:59:54 121  ,gbp_g31
20:59:54 122  ,gbp_g32
20:59:54 123  ,gbp_g33
20:59:54 124  ,gbp_g34
20:59:54 125  ,gbp_g35
20:59:54 126  ,gbp_g36
20:59:54 127  ,gbp_g37
20:59:54 128  ,gbp_g38
20:59:54 129  ,gbp_g39
20:59:54 130  ,gbp_g40
20:59:54 131  ,gbp_g41
20:59:54 132  ,jpy_g00
20:59:54 133  ,jpy_g01
20:59:54 134  ,jpy_g02
20:59:54 135  ,jpy_g03
20:59:54 136  ,jpy_g04
20:59:54 137  ,jpy_g05
20:59:54 138  ,jpy_g06
20:59:54 139  ,jpy_g07
20:59:54 140  ,jpy_g08
20:59:54 141  ,jpy_g09
20:59:54 142  ,jpy_g10
20:59:54 143  ,jpy_g11
20:59:54 144  ,jpy_g12
20:59:54 145  ,jpy_g13
20:59:54 146  ,jpy_g14
20:59:54 147  ,jpy_g15
20:59:54 148  ,jpy_g16
20:59:54 149  ,jpy_g17
20:59:54 150  ,jpy_g18
20:59:54 151  ,jpy_g19
20:59:54 152  ,jpy_g20
20:59:54 153  ,jpy_g21
20:59:54 154  ,jpy_g22
20:59:54 155  ,jpy_g23
20:59:54 156  ,jpy_g24
20:59:54 157  ,jpy_g25
20:59:54 158  ,jpy_g26
20:59:54 159  ,jpy_g27
20:59:54 160  ,jpy_g28
20:59:54 161  ,jpy_g29
20:59:54 162  ,jpy_g30
20:59:54 163  ,jpy_g31
20:59:54 164  ,jpy_g32
20:59:54 165  ,jpy_g33
20:59:54 166  ,jpy_g34
20:59:54 167  ,jpy_g35
20:59:54 168  ,jpy_g36
20:59:54 169  ,jpy_g37
20:59:54 170  ,jpy_g38
20:59:54 171  ,jpy_g39
20:59:54 172  ,jpy_g40
20:59:54 173  ,jpy_g41
20:59:54 174  ,cad_g00
20:59:54 175  ,cad_g01
20:59:54 176  ,cad_g02
20:59:54 177  ,cad_g03
20:59:54 178  ,cad_g04
20:59:54 179  ,cad_g05
20:59:54 180  ,cad_g06
20:59:54 181  ,cad_g07
20:59:54 182  ,cad_g08
20:59:54 183  ,cad_g09
20:59:54 184  ,cad_g10
20:59:54 185  ,cad_g11
20:59:54 186  ,cad_g12
20:59:54 187  ,cad_g13
20:59:54 188  ,cad_g14
20:59:54 189  ,cad_g15
20:59:54 190  ,cad_g16
20:59:54 191  ,cad_g17
20:59:54 192  ,cad_g18
20:59:54 193  ,cad_g19
20:59:54 194  ,cad_g20
20:59:54 195  ,cad_g21
20:59:54 196  ,cad_g22
20:59:54 197  ,cad_g23
20:59:54 198  ,cad_g24
20:59:54 199  ,cad_g25
20:59:54 200  ,cad_g26
20:59:54 201  ,cad_g27
20:59:54 202  ,cad_g28
20:59:54 203  ,cad_g29
20:59:54 204  ,cad_g30
20:59:54 205  ,cad_g31
20:59:54 206  ,cad_g32
20:59:54 207  ,cad_g33
20:59:54 208  ,cad_g34
20:59:54 209  ,cad_g35
20:59:54 210  ,cad_g36
20:59:54 211  ,cad_g37
20:59:54 212  ,cad_g38
20:59:54 213  ,cad_g39
20:59:54 214  ,cad_g40
20:59:54 215  ,cad_g41
20:59:54 216  ,chf_g00
20:59:54 217  ,chf_g01
20:59:54 218  ,chf_g02
20:59:54 219  ,chf_g03
20:59:54 220  ,chf_g04
20:59:54 221  ,chf_g05
20:59:54 222  ,chf_g06
20:59:54 223  ,chf_g07
20:59:54 224  ,chf_g08
20:59:54 225  ,chf_g09
20:59:54 226  ,chf_g10
20:59:54 227  ,chf_g11
20:59:54 228  ,chf_g12
20:59:54 229  ,chf_g13
20:59:54 230  ,chf_g14
20:59:54 231  ,chf_g15
20:59:54 232  ,chf_g16
20:59:54 233  ,chf_g17
20:59:54 234  ,chf_g18
20:59:54 235  ,chf_g19
20:59:54 236  ,chf_g20
20:59:54 237  ,chf_g21
20:59:54 238  ,chf_g22
20:59:54 239  ,chf_g23
20:59:54 240  ,chf_g24
20:59:54 241  ,chf_g25
20:59:54 242  ,chf_g26
20:59:54 243  ,chf_g27
20:59:54 244  ,chf_g28
20:59:54 245  ,chf_g29
20:59:54 246  ,chf_g30
20:59:54 247  ,chf_g31
20:59:54 248  ,chf_g32
20:59:54 249  ,chf_g33
20:59:54 250  ,chf_g34
20:59:54 251  ,chf_g35
20:59:54 252  ,chf_g36
20:59:54 253  ,chf_g37
20:59:54 254  ,chf_g38
20:59:54 255  ,chf_g39
20:59:54 256  ,chf_g40
20:59:54 257  ,chf_g41
20:59:54 258  FROM aud_ms6 m
20:59:54 259  WHERE gattn IN('nup','up')
20:59:54 260  AND 1+m.ydate < '&1'||' '||'&2'
20:59:54 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'20:45:00'

View created.

Elapsed: 00:00:00.12
20:59:54 SQL> 
20:59:54 SQL> -- rpt
20:59:54 SQL> 
20:59:54 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13146
up	     6398

Elapsed: 00:00:00.04
20:59:54 SQL> 
20:59:54 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-29 20:40:00

Elapsed: 00:00:00.03
20:59:54 SQL> 
20:59:54 SQL> -- Now build model from bme and score sme
20:59:54 SQL> @score1gattn.sql
20:59:54 SQL> -- score1gattn.sql
20:59:54 SQL> 
20:59:54 SQL> -- Does the 1st SVM score
20:59:54 SQL> 
20:59:54 SQL> -- Fill up svmc_apply_prep
20:59:54 SQL> @score_gattn.sql
20:59:54 SQL> --
20:59:54 SQL> -- score_gattn.sql
20:59:54 SQL> --
20:59:54 SQL> 
20:59:54 SQL> -- usage: score_gattn.sql
20:59:54 SQL> 
20:59:54 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:59:54 SQL> 
20:59:54 SQL> DEFINE target	= 'gattn'
20:59:54 SQL> DEFINE model_name = 'forex14'
20:59:54 SQL> DEFINE bldtable	= 'bme'
20:59:54 SQL> DEFINE scoretable = 'sme'
20:59:54 SQL> DEFINE case_id	= 'prdate'
20:59:54 SQL> 
20:59:54 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:59:54 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:59:54 SQL> 
20:59:54 SQL> -- Builds an SVM model using pl/sql.
20:59:54 SQL> 
20:59:54 SQL> -----------------------------------------------------------------------
20:59:54 SQL> --			    BUILD THE MODEL
20:59:54 SQL> -----------------------------------------------------------------------
20:59:54 SQL> 
20:59:54 SQL> -- Cleanup old build data preparation objects for repeat runs
20:59:54 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
20:59:54 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:59:54 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
20:59:54 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
20:59:54 SQL> 
20:59:54 SQL> 
20:59:54 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:59:54 SQL> --
20:59:54 SQL> -- DROP	TABLE svmc_settings ;
20:59:54 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:59:54 SQL> -- DELETE svmc_settings;
20:59:54 SQL> 
20:59:54 SQL> -- The default classification algorithm is Naive Bayes. So override
20:59:54 SQL> -- this choice to SVM using a settings table.
20:59:54 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:59:54 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:59:54 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:59:54 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:59:54 SQL> -- models.
20:59:54 SQL> --
20:59:54 SQL> 
20:59:54 SQL> -- Do this once and then comment it out.
20:59:54 SQL> -- That makes script go faster.
20:59:54 SQL> -- BEGIN
20:59:54 SQL> -- -- Populate settings table
20:59:54 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:59:54 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:59:54 SQL> --
20:59:54 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:59:54 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:59:54 SQL> --
20:59:54 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:59:54 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:59:54 SQL> --   COMMIT;
20:59:54 SQL> -- END;
20:59:54 SQL> -- /
20:59:54 SQL> 
20:59:54 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:59:54 SQL> 
20:59:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:59:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:59:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:59:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:59:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:59:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:59:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:59:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:59:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:59:54 SQL> 
20:59:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:59:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:59:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:59:54 SQL> 
20:59:54 SQL> --------------------------------
20:59:54 SQL> -- PREPARE BUILD (TRAINING) DATA
20:59:54 SQL> --
20:59:54 SQL> 
20:59:54 SQL> -- 1. Missing Value treatment for all Predictors and
20:59:54 SQL> -- 2. Outlier Treatment and
20:59:54 SQL> -- 3. Normalization are performed below.
20:59:54 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:59:54 SQL> --    normalized here.
20:59:54 SQL> 
20:59:54 SQL> BEGIN
20:59:54   2  	-- Perform missing value treatment for all predictors
20:59:54   3  	-- create miss tables
20:59:54   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:59:54   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:59:54   6  
20:59:54   7  	-- populate miss tables
20:59:54   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:59:54   9  	  miss_table_name => 'svmc_miss_num',
20:59:54  10  	  data_table_name => '&bldtable',
20:59:54  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:59:54  12  
20:59:54  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:59:54  14  	  miss_table_name => 'svmc_miss_cat',
20:59:54  15  	  data_table_name => '&bldtable',
20:59:54  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:59:54  17  
20:59:54  18  	-- xform input data to replace missing values
20:59:54  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:59:54  20  	  miss_table_name => 'svmc_miss_num',
20:59:54  21  	  data_table_name => '&bldtable',
20:59:54  22  	  xform_view_name => 'xformed_build_miss_num');
20:59:54  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:59:54  24  	  miss_table_name => 'svmc_miss_cat',
20:59:54  25  	  data_table_name => '&bldtable',
20:59:54  26  	  xform_view_name => 'xformed_build_miss_cat');
20:59:54  27  
20:59:54  28  	-- Perform outlier treatment.
20:59:54  29  	-- create clip table
20:59:54  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:59:54  31  
20:59:54  32  	-- populate clip table
20:59:54  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:59:54  34  	  clip_table_name => 'svmc_clip',
20:59:54  35  	  data_table_name => '&bldtable',
20:59:54  36  	  tail_frac	  => 0.025,
20:59:54  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:59:54  38  
20:59:54  39  	-- xform input data to winsorized data
20:59:54  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:59:54  41  	  clip_table_name => 'svmc_clip',
20:59:54  42  	  data_table_name => '&bldtable',
20:59:54  43  	  xform_view_name => 'svmc_winsor');
20:59:54  44  
20:59:54  45  	-- create normalization table
20:59:54  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:59:54  47  
20:59:54  48  	-- populate normalization table based on winsorized data
20:59:54  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:59:54  50  	  norm_table_name => 'svmc_norm',
20:59:54  51  	  data_table_name => 'svmc_winsor',
20:59:54  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:59:54  53  
20:59:54  54  	-- normalize the original data
20:59:54  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:59:54  56  	  norm_table_name => 'svmc_norm',
20:59:54  57  	  data_table_name => '&bldtable',
20:59:54  58  	  xform_view_name => 'svmc_build_prep');
20:59:54  59  END;
20:59:54  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.03
21:00:12 SQL> 
21:00:12 SQL> ---------------------
21:00:12 SQL> -- CREATE A NEW MODEL
21:00:12 SQL> --
21:00:12 SQL> -- Cleanup old model with the same name for repeat runs
21:00:12 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:00:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:00:12   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.91
21:00:13 SQL> 
21:00:13 SQL> -- Build a new SVM Model
21:00:13 SQL> BEGIN
21:00:13   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:00:13   3  	  model_name	      => '&model_name',
21:00:13   4  	  mining_function     => dbms_data_mining.classification,
21:00:13   5  	  data_table_name     => 'svmc_build_prep',
21:00:13   6  	  case_id_column_name => '&case_id',
21:00:13   7  	  target_column_name  => '&target',
21:00:13   8  	  settings_table_name => 'svmc_settings');
21:00:13   9  END;
21:00:13  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.28
21:00:41 SQL> 
21:00:41 SQL> -----------------------------------------------------------------------
21:00:41 SQL> --			       APPLY/score THE MODEL
21:00:41 SQL> -----------------------------------------------------------------------
21:00:41 SQL> 
21:00:41 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:00:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:00:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:00:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.19
21:00:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:00:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:00:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:00:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:00:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:00:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:00:41 SQL> -----------------------
21:00:41 SQL> -- PREPARE SCORING DATA
21:00:41 SQL> --
21:00:41 SQL> -- If the data for model creation has been prepared, then the data
21:00:41 SQL> -- to be scored using the model must be prepared in the same manner
21:00:41 SQL> -- in order to obtain meaningful results.
21:00:41 SQL> --
21:00:41 SQL> -- 1. Missing Value treatment for all Predictors and
21:00:41 SQL> -- 2. Normalization
21:00:41 SQL> -- No outlier treatment will be performed during test and apply. The
21:00:41 SQL> -- normalization step is sufficient, since the normalization parameters
21:00:41 SQL> -- already capture the effects of outlier treatment done with build data.
21:00:41 SQL> --
21:00:41 SQL> BEGIN
21:00:41   2  	-- Xform Test data to replace missing values
21:00:41   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:00:41   4  	  miss_table_name => 'svmc_miss_num',
21:00:41   5  	  data_table_name => '&scoretable',
21:00:41   6  	  xform_view_name => 'xformed_apply_miss_num');
21:00:41   7  
21:00:41   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:00:41   9  	  miss_table_name => 'svmc_miss_cat',
21:00:41  10  	  data_table_name => '&scoretable',
21:00:41  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:00:41  12  
21:00:41  13  	-- Normalize the data to be scored
21:00:41  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:00:41  15  	  norm_table_name => 'svmc_norm',
21:00:41  16  	  data_table_name => '&scoretable',
21:00:41  17  	  xform_view_name => 'svmc_apply_prep');
21:00:41  18  END;
21:00:41  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.36
21:00:42 SQL> 
21:00:42 SQL> -- Use same model_name used in score_gattn.sql
21:00:42 SQL> DEFINE model_name = 'forex14'
21:00:42 SQL> 
21:00:42 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
21:00:42 SQL> 
21:00:42 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
21:00:42   2  SELECT
21:00:42   3  prdate
21:00:42   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:00:42   5  ,sysdate
21:00:42   6  ,SUBSTR(prdate,1,3)pair
21:00:42   7  ,SUBSTR(prdate,4,19)ydate
21:00:42   8  FROM svmc_apply_prep
21:00:42   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:00:43 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
