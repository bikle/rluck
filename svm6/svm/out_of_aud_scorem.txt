
SQL*Plus: Release 11.2.0.1.0 Production on Wed Dec 29 21:27:30 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

21:27:30 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
21:27:30 SQL> 21:27:30 SQL> @aud_score1day.sql  2010-12-29 21:05:00
21:27:30 SQL> --
21:27:30 SQL> -- aud_score1day.sql
21:27:30 SQL> --
21:27:30 SQL> 
21:27:30 SQL> CREATE OR REPLACE VIEW sme AS
21:27:30   2  SELECT
21:27:30   3  'aud'||m.ydate prdate
21:27:30   4  ,NULL gatt
21:27:30   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:27:30   6  ,eur_g00
21:27:30   7  ,eur_g01
21:27:30   8  ,eur_g02
21:27:30   9  ,eur_g03
21:27:30  10  ,eur_g04
21:27:30  11  ,eur_g05
21:27:30  12  ,eur_g06
21:27:30  13  ,eur_g07
21:27:30  14  ,eur_g08
21:27:30  15  ,eur_g09
21:27:30  16  ,eur_g10
21:27:30  17  ,eur_g11
21:27:30  18  ,eur_g12
21:27:30  19  ,eur_g13
21:27:30  20  ,eur_g14
21:27:30  21  ,eur_g15
21:27:30  22  ,eur_g16
21:27:30  23  ,eur_g17
21:27:30  24  ,eur_g18
21:27:30  25  ,eur_g19
21:27:30  26  ,eur_g20
21:27:30  27  ,eur_g21
21:27:30  28  ,eur_g22
21:27:30  29  ,eur_g23
21:27:30  30  ,eur_g24
21:27:30  31  ,eur_g25
21:27:30  32  ,eur_g26
21:27:30  33  ,eur_g27
21:27:30  34  ,eur_g28
21:27:30  35  ,eur_g29
21:27:30  36  ,eur_g30
21:27:30  37  ,eur_g31
21:27:30  38  ,eur_g32
21:27:30  39  ,eur_g33
21:27:30  40  ,eur_g34
21:27:30  41  ,eur_g35
21:27:30  42  ,eur_g36
21:27:30  43  ,eur_g37
21:27:30  44  ,eur_g38
21:27:30  45  ,eur_g39
21:27:30  46  ,eur_g40
21:27:30  47  ,eur_g41
21:27:30  48  ,aud_g00
21:27:30  49  ,aud_g01
21:27:30  50  ,aud_g02
21:27:30  51  ,aud_g03
21:27:30  52  ,aud_g04
21:27:30  53  ,aud_g05
21:27:30  54  ,aud_g06
21:27:30  55  ,aud_g07
21:27:30  56  ,aud_g08
21:27:30  57  ,aud_g09
21:27:30  58  ,aud_g10
21:27:30  59  ,aud_g11
21:27:30  60  ,aud_g12
21:27:30  61  ,aud_g13
21:27:30  62  ,aud_g14
21:27:30  63  ,aud_g15
21:27:30  64  ,aud_g16
21:27:30  65  ,aud_g17
21:27:30  66  ,aud_g18
21:27:30  67  ,aud_g19
21:27:30  68  ,aud_g20
21:27:30  69  ,aud_g21
21:27:30  70  ,aud_g22
21:27:30  71  ,aud_g23
21:27:30  72  ,aud_g24
21:27:30  73  ,aud_g25
21:27:30  74  ,aud_g26
21:27:30  75  ,aud_g27
21:27:30  76  ,aud_g28
21:27:30  77  ,aud_g29
21:27:30  78  ,aud_g30
21:27:30  79  ,aud_g31
21:27:30  80  ,aud_g32
21:27:30  81  ,aud_g33
21:27:30  82  ,aud_g34
21:27:30  83  ,aud_g35
21:27:30  84  ,aud_g36
21:27:30  85  ,aud_g37
21:27:30  86  ,aud_g38
21:27:30  87  ,aud_g39
21:27:30  88  ,aud_g40
21:27:30  89  ,aud_g41
21:27:30  90  ,gbp_g00
21:27:30  91  ,gbp_g01
21:27:30  92  ,gbp_g02
21:27:30  93  ,gbp_g03
21:27:30  94  ,gbp_g04
21:27:30  95  ,gbp_g05
21:27:30  96  ,gbp_g06
21:27:30  97  ,gbp_g07
21:27:30  98  ,gbp_g08
21:27:30  99  ,gbp_g09
21:27:30 100  ,gbp_g10
21:27:30 101  ,gbp_g11
21:27:30 102  ,gbp_g12
21:27:30 103  ,gbp_g13
21:27:30 104  ,gbp_g14
21:27:30 105  ,gbp_g15
21:27:30 106  ,gbp_g16
21:27:30 107  ,gbp_g17
21:27:30 108  ,gbp_g18
21:27:30 109  ,gbp_g19
21:27:30 110  ,gbp_g20
21:27:30 111  ,gbp_g21
21:27:30 112  ,gbp_g22
21:27:30 113  ,gbp_g23
21:27:30 114  ,gbp_g24
21:27:30 115  ,gbp_g25
21:27:30 116  ,gbp_g26
21:27:30 117  ,gbp_g27
21:27:30 118  ,gbp_g28
21:27:30 119  ,gbp_g29
21:27:30 120  ,gbp_g30
21:27:30 121  ,gbp_g31
21:27:30 122  ,gbp_g32
21:27:30 123  ,gbp_g33
21:27:30 124  ,gbp_g34
21:27:30 125  ,gbp_g35
21:27:30 126  ,gbp_g36
21:27:30 127  ,gbp_g37
21:27:30 128  ,gbp_g38
21:27:30 129  ,gbp_g39
21:27:30 130  ,gbp_g40
21:27:30 131  ,gbp_g41
21:27:30 132  ,jpy_g00
21:27:30 133  ,jpy_g01
21:27:30 134  ,jpy_g02
21:27:30 135  ,jpy_g03
21:27:30 136  ,jpy_g04
21:27:30 137  ,jpy_g05
21:27:30 138  ,jpy_g06
21:27:30 139  ,jpy_g07
21:27:30 140  ,jpy_g08
21:27:30 141  ,jpy_g09
21:27:30 142  ,jpy_g10
21:27:30 143  ,jpy_g11
21:27:30 144  ,jpy_g12
21:27:30 145  ,jpy_g13
21:27:30 146  ,jpy_g14
21:27:30 147  ,jpy_g15
21:27:30 148  ,jpy_g16
21:27:30 149  ,jpy_g17
21:27:30 150  ,jpy_g18
21:27:30 151  ,jpy_g19
21:27:30 152  ,jpy_g20
21:27:30 153  ,jpy_g21
21:27:30 154  ,jpy_g22
21:27:30 155  ,jpy_g23
21:27:30 156  ,jpy_g24
21:27:30 157  ,jpy_g25
21:27:30 158  ,jpy_g26
21:27:30 159  ,jpy_g27
21:27:30 160  ,jpy_g28
21:27:30 161  ,jpy_g29
21:27:30 162  ,jpy_g30
21:27:30 163  ,jpy_g31
21:27:30 164  ,jpy_g32
21:27:30 165  ,jpy_g33
21:27:30 166  ,jpy_g34
21:27:30 167  ,jpy_g35
21:27:30 168  ,jpy_g36
21:27:30 169  ,jpy_g37
21:27:30 170  ,jpy_g38
21:27:30 171  ,jpy_g39
21:27:30 172  ,jpy_g40
21:27:30 173  ,jpy_g41
21:27:30 174  ,cad_g00
21:27:30 175  ,cad_g01
21:27:30 176  ,cad_g02
21:27:30 177  ,cad_g03
21:27:30 178  ,cad_g04
21:27:30 179  ,cad_g05
21:27:30 180  ,cad_g06
21:27:30 181  ,cad_g07
21:27:30 182  ,cad_g08
21:27:30 183  ,cad_g09
21:27:30 184  ,cad_g10
21:27:30 185  ,cad_g11
21:27:30 186  ,cad_g12
21:27:30 187  ,cad_g13
21:27:30 188  ,cad_g14
21:27:30 189  ,cad_g15
21:27:30 190  ,cad_g16
21:27:30 191  ,cad_g17
21:27:30 192  ,cad_g18
21:27:30 193  ,cad_g19
21:27:30 194  ,cad_g20
21:27:30 195  ,cad_g21
21:27:30 196  ,cad_g22
21:27:30 197  ,cad_g23
21:27:30 198  ,cad_g24
21:27:30 199  ,cad_g25
21:27:30 200  ,cad_g26
21:27:30 201  ,cad_g27
21:27:30 202  ,cad_g28
21:27:30 203  ,cad_g29
21:27:30 204  ,cad_g30
21:27:30 205  ,cad_g31
21:27:30 206  ,cad_g32
21:27:30 207  ,cad_g33
21:27:30 208  ,cad_g34
21:27:30 209  ,cad_g35
21:27:30 210  ,cad_g36
21:27:30 211  ,cad_g37
21:27:30 212  ,cad_g38
21:27:30 213  ,cad_g39
21:27:30 214  ,cad_g40
21:27:30 215  ,cad_g41
21:27:30 216  ,chf_g00
21:27:30 217  ,chf_g01
21:27:30 218  ,chf_g02
21:27:30 219  ,chf_g03
21:27:30 220  ,chf_g04
21:27:30 221  ,chf_g05
21:27:30 222  ,chf_g06
21:27:30 223  ,chf_g07
21:27:30 224  ,chf_g08
21:27:30 225  ,chf_g09
21:27:30 226  ,chf_g10
21:27:30 227  ,chf_g11
21:27:30 228  ,chf_g12
21:27:30 229  ,chf_g13
21:27:30 230  ,chf_g14
21:27:30 231  ,chf_g15
21:27:30 232  ,chf_g16
21:27:30 233  ,chf_g17
21:27:30 234  ,chf_g18
21:27:30 235  ,chf_g19
21:27:30 236  ,chf_g20
21:27:30 237  ,chf_g21
21:27:30 238  ,chf_g22
21:27:30 239  ,chf_g23
21:27:30 240  ,chf_g24
21:27:30 241  ,chf_g25
21:27:30 242  ,chf_g26
21:27:30 243  ,chf_g27
21:27:30 244  ,chf_g28
21:27:30 245  ,chf_g29
21:27:30 246  ,chf_g30
21:27:30 247  ,chf_g31
21:27:30 248  ,chf_g32
21:27:30 249  ,chf_g33
21:27:30 250  ,chf_g34
21:27:30 251  ,chf_g35
21:27:30 252  ,chf_g36
21:27:30 253  ,chf_g37
21:27:30 254  ,chf_g38
21:27:30 255  ,chf_g39
21:27:30 256  ,chf_g40
21:27:30 257  ,chf_g41
21:27:30 258  FROM aud_ms6 m
21:27:30 259  WHERE m.ydate = '&1'||' '||'&2'
21:27:30 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'21:05:00'

View created.

Elapsed: 00:00:00.14
21:27:30 SQL> 
21:27:30 SQL> -- rpt
21:27:30 SQL> -- We should see just 1 row:
21:27:30 SQL> 
21:27:30 SQL> SELECT COUNT(prdate) FROM sme
21:27:30   2  
21:27:30 SQL> -- Build the model:
21:27:30 SQL> CREATE OR REPLACE VIEW bme AS
21:27:30   2  SELECT
21:27:30   3  'aud'||m.ydate prdate
21:27:30   4  ,gatt
21:27:30   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:27:30   6  ,eur_g00
21:27:30   7  ,eur_g01
21:27:30   8  ,eur_g02
21:27:30   9  ,eur_g03
21:27:30  10  ,eur_g04
21:27:30  11  ,eur_g05
21:27:30  12  ,eur_g06
21:27:30  13  ,eur_g07
21:27:30  14  ,eur_g08
21:27:30  15  ,eur_g09
21:27:30  16  ,eur_g10
21:27:30  17  ,eur_g11
21:27:30  18  ,eur_g12
21:27:30  19  ,eur_g13
21:27:30  20  ,eur_g14
21:27:30  21  ,eur_g15
21:27:30  22  ,eur_g16
21:27:30  23  ,eur_g17
21:27:30  24  ,eur_g18
21:27:30  25  ,eur_g19
21:27:30  26  ,eur_g20
21:27:30  27  ,eur_g21
21:27:30  28  ,eur_g22
21:27:30  29  ,eur_g23
21:27:30  30  ,eur_g24
21:27:30  31  ,eur_g25
21:27:30  32  ,eur_g26
21:27:30  33  ,eur_g27
21:27:30  34  ,eur_g28
21:27:30  35  ,eur_g29
21:27:30  36  ,eur_g30
21:27:30  37  ,eur_g31
21:27:30  38  ,eur_g32
21:27:30  39  ,eur_g33
21:27:30  40  ,eur_g34
21:27:30  41  ,eur_g35
21:27:30  42  ,eur_g36
21:27:30  43  ,eur_g37
21:27:30  44  ,eur_g38
21:27:30  45  ,eur_g39
21:27:30  46  ,eur_g40
21:27:30  47  ,eur_g41
21:27:30  48  ,aud_g00
21:27:30  49  ,aud_g01
21:27:30  50  ,aud_g02
21:27:30  51  ,aud_g03
21:27:30  52  ,aud_g04
21:27:30  53  ,aud_g05
21:27:30  54  ,aud_g06
21:27:30  55  ,aud_g07
21:27:30  56  ,aud_g08
21:27:30  57  ,aud_g09
21:27:30  58  ,aud_g10
21:27:30  59  ,aud_g11
21:27:30  60  ,aud_g12
21:27:30  61  ,aud_g13
21:27:30  62  ,aud_g14
21:27:30  63  ,aud_g15
21:27:30  64  ,aud_g16
21:27:30  65  ,aud_g17
21:27:30  66  ,aud_g18
21:27:30  67  ,aud_g19
21:27:30  68  ,aud_g20
21:27:30  69  ,aud_g21
21:27:30  70  ,aud_g22
21:27:30  71  ,aud_g23
21:27:30  72  ,aud_g24
21:27:30  73  ,aud_g25
21:27:30  74  ,aud_g26
21:27:30  75  ,aud_g27
21:27:30  76  ,aud_g28
21:27:30  77  ,aud_g29
21:27:30  78  ,aud_g30
21:27:30  79  ,aud_g31
21:27:30  80  ,aud_g32
21:27:30  81  ,aud_g33
21:27:30  82  ,aud_g34
21:27:30  83  ,aud_g35
21:27:30  84  ,aud_g36
21:27:30  85  ,aud_g37
21:27:30  86  ,aud_g38
21:27:30  87  ,aud_g39
21:27:30  88  ,aud_g40
21:27:30  89  ,aud_g41
21:27:30  90  ,gbp_g00
21:27:30  91  ,gbp_g01
21:27:30  92  ,gbp_g02
21:27:30  93  ,gbp_g03
21:27:30  94  ,gbp_g04
21:27:30  95  ,gbp_g05
21:27:30  96  ,gbp_g06
21:27:30  97  ,gbp_g07
21:27:30  98  ,gbp_g08
21:27:30  99  ,gbp_g09
21:27:30 100  ,gbp_g10
21:27:30 101  ,gbp_g11
21:27:30 102  ,gbp_g12
21:27:30 103  ,gbp_g13
21:27:30 104  ,gbp_g14
21:27:30 105  ,gbp_g15
21:27:30 106  ,gbp_g16
21:27:30 107  ,gbp_g17
21:27:30 108  ,gbp_g18
21:27:30 109  ,gbp_g19
21:27:30 110  ,gbp_g20
21:27:30 111  ,gbp_g21
21:27:30 112  ,gbp_g22
21:27:30 113  ,gbp_g23
21:27:30 114  ,gbp_g24
21:27:30 115  ,gbp_g25
21:27:30 116  ,gbp_g26
21:27:30 117  ,gbp_g27
21:27:30 118  ,gbp_g28
21:27:30 119  ,gbp_g29
21:27:30 120  ,gbp_g30
21:27:30 121  ,gbp_g31
21:27:30 122  ,gbp_g32
21:27:30 123  ,gbp_g33
21:27:30 124  ,gbp_g34
21:27:30 125  ,gbp_g35
21:27:30 126  ,gbp_g36
21:27:30 127  ,gbp_g37
21:27:30 128  ,gbp_g38
21:27:30 129  ,gbp_g39
21:27:30 130  ,gbp_g40
21:27:30 131  ,gbp_g41
21:27:30 132  ,jpy_g00
21:27:30 133  ,jpy_g01
21:27:30 134  ,jpy_g02
21:27:30 135  ,jpy_g03
21:27:30 136  ,jpy_g04
21:27:30 137  ,jpy_g05
21:27:30 138  ,jpy_g06
21:27:30 139  ,jpy_g07
21:27:30 140  ,jpy_g08
21:27:30 141  ,jpy_g09
21:27:30 142  ,jpy_g10
21:27:30 143  ,jpy_g11
21:27:30 144  ,jpy_g12
21:27:30 145  ,jpy_g13
21:27:30 146  ,jpy_g14
21:27:30 147  ,jpy_g15
21:27:30 148  ,jpy_g16
21:27:30 149  ,jpy_g17
21:27:30 150  ,jpy_g18
21:27:30 151  ,jpy_g19
21:27:30 152  ,jpy_g20
21:27:30 153  ,jpy_g21
21:27:30 154  ,jpy_g22
21:27:30 155  ,jpy_g23
21:27:30 156  ,jpy_g24
21:27:30 157  ,jpy_g25
21:27:30 158  ,jpy_g26
21:27:30 159  ,jpy_g27
21:27:30 160  ,jpy_g28
21:27:30 161  ,jpy_g29
21:27:30 162  ,jpy_g30
21:27:30 163  ,jpy_g31
21:27:30 164  ,jpy_g32
21:27:30 165  ,jpy_g33
21:27:30 166  ,jpy_g34
21:27:30 167  ,jpy_g35
21:27:30 168  ,jpy_g36
21:27:30 169  ,jpy_g37
21:27:30 170  ,jpy_g38
21:27:30 171  ,jpy_g39
21:27:30 172  ,jpy_g40
21:27:30 173  ,jpy_g41
21:27:30 174  ,cad_g00
21:27:30 175  ,cad_g01
21:27:30 176  ,cad_g02
21:27:30 177  ,cad_g03
21:27:30 178  ,cad_g04
21:27:30 179  ,cad_g05
21:27:30 180  ,cad_g06
21:27:30 181  ,cad_g07
21:27:30 182  ,cad_g08
21:27:30 183  ,cad_g09
21:27:30 184  ,cad_g10
21:27:30 185  ,cad_g11
21:27:30 186  ,cad_g12
21:27:30 187  ,cad_g13
21:27:30 188  ,cad_g14
21:27:30 189  ,cad_g15
21:27:30 190  ,cad_g16
21:27:30 191  ,cad_g17
21:27:30 192  ,cad_g18
21:27:30 193  ,cad_g19
21:27:30 194  ,cad_g20
21:27:30 195  ,cad_g21
21:27:30 196  ,cad_g22
21:27:30 197  ,cad_g23
21:27:30 198  ,cad_g24
21:27:30 199  ,cad_g25
21:27:30 200  ,cad_g26
21:27:30 201  ,cad_g27
21:27:30 202  ,cad_g28
21:27:30 203  ,cad_g29
21:27:30 204  ,cad_g30
21:27:30 205  ,cad_g31
21:27:30 206  ,cad_g32
21:27:30 207  ,cad_g33
21:27:30 208  ,cad_g34
21:27:30 209  ,cad_g35
21:27:30 210  ,cad_g36
21:27:30 211  ,cad_g37
21:27:30 212  ,cad_g38
21:27:30 213  ,cad_g39
21:27:30 214  ,cad_g40
21:27:30 215  ,cad_g41
21:27:30 216  ,chf_g00
21:27:30 217  ,chf_g01
21:27:30 218  ,chf_g02
21:27:30 219  ,chf_g03
21:27:30 220  ,chf_g04
21:27:30 221  ,chf_g05
21:27:30 222  ,chf_g06
21:27:30 223  ,chf_g07
21:27:30 224  ,chf_g08
21:27:30 225  ,chf_g09
21:27:30 226  ,chf_g10
21:27:30 227  ,chf_g11
21:27:30 228  ,chf_g12
21:27:30 229  ,chf_g13
21:27:30 230  ,chf_g14
21:27:30 231  ,chf_g15
21:27:30 232  ,chf_g16
21:27:30 233  ,chf_g17
21:27:30 234  ,chf_g18
21:27:30 235  ,chf_g19
21:27:30 236  ,chf_g20
21:27:30 237  ,chf_g21
21:27:30 238  ,chf_g22
21:27:30 239  ,chf_g23
21:27:30 240  ,chf_g24
21:27:30 241  ,chf_g25
21:27:30 242  ,chf_g26
21:27:30 243  ,chf_g27
21:27:30 244  ,chf_g28
21:27:30 245  ,chf_g29
21:27:30 246  ,chf_g30
21:27:30 247  ,chf_g31
21:27:30 248  ,chf_g32
21:27:30 249  ,chf_g33
21:27:30 250  ,chf_g34
21:27:30 251  ,chf_g35
21:27:30 252  ,chf_g36
21:27:30 253  ,chf_g37
21:27:30 254  ,chf_g38
21:27:30 255  ,chf_g39
21:27:30 256  ,chf_g40
21:27:30 257  ,chf_g41
21:27:30 258  FROM aud_ms6 m
21:27:30 259  WHERE gatt IN('nup','up')
21:27:30 260  AND 1+m.ydate < '&1'||' '||'&2'
21:27:30 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'21:05:00'

View created.

Elapsed: 00:00:00.12
21:27:30 SQL> 
21:27:30 SQL> -- rpt
21:27:30 SQL> 
21:27:30 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
21:27:30   2  
21:27:30 SQL> SELECT MAX(prdate) FROM bme
21:27:30   2  
21:27:30 SQL> -- Now build model from bme and score sme
21:27:30 SQL> @score1.sql
21:27:30 SQL> -- score1.sql
21:27:30 SQL> 
21:27:30 SQL> -- Does the 1st SVM score
21:27:30 SQL> 
21:27:30 SQL> -- Fill up svmc_apply_prep
21:27:30 SQL> @score.sql
21:27:30 SQL> --
21:27:30 SQL> -- score.sql
21:27:30 SQL> --
21:27:30 SQL> 
21:27:30 SQL> -- usage: score.sql
21:27:30 SQL> 
21:27:30 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:27:30 SQL> 
21:27:30 SQL> DEFINE target	= 'gatt'
21:27:30 SQL> DEFINE model_name = 'forex14'
21:27:30 SQL> DEFINE bldtable	= 'bme'
21:27:30 SQL> DEFINE scoretable = 'sme'
21:27:30 SQL> DEFINE case_id	= 'prdate'
21:27:30 SQL> 
21:27:30 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:27:30 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:27:30 SQL> 
21:27:30 SQL> -- Builds an SVM model using pl/sql.
21:27:30 SQL> 
21:27:30 SQL> -----------------------------------------------------------------------
21:27:30 SQL> --			    BUILD THE MODEL
21:27:30 SQL> -----------------------------------------------------------------------
21:27:30 SQL> 
21:27:30 SQL> -- Cleanup old build data preparation objects for repeat runs
21:27:30 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
21:27:30 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:27:30 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
21:27:30 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
21:27:30 SQL> 
21:27:30 SQL> 
21:27:30 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:27:30 SQL> --
21:27:30 SQL> -- DROP	TABLE svmc_settings ;
21:27:30 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:27:30 SQL> -- DELETE svmc_settings;
21:27:30 SQL> 
21:27:30 SQL> -- The default classification algorithm is Naive Bayes. So override
21:27:30 SQL> -- this choice to SVM using a settings table.
21:27:30 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:27:30 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:27:30 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:27:30 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:27:30 SQL> -- models.
21:27:30 SQL> --
21:27:30 SQL> 
21:27:30 SQL> -- Do this once and then comment it out.
21:27:30 SQL> -- That makes script go faster.
21:27:30 SQL> -- BEGIN
21:27:30 SQL> -- -- Populate settings table
21:27:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:27:30 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:27:30 SQL> --
21:27:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:27:30 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:27:30 SQL> --
21:27:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:27:30 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:27:30 SQL> --   COMMIT;
21:27:30 SQL> -- END;
21:27:30 SQL> -- /
21:27:30 SQL> 
21:27:30 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:27:30 SQL> 
21:27:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:27:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:27:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:27:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:27:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:27:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:27:31 SQL> 
21:27:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:27:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:27:31 SQL> 
21:27:31 SQL> --------------------------------
21:27:31 SQL> -- PREPARE BUILD (TRAINING) DATA
21:27:31 SQL> --
21:27:31 SQL> 
21:27:31 SQL> -- 1. Missing Value treatment for all Predictors and
21:27:31 SQL> -- 2. Outlier Treatment and
21:27:31 SQL> -- 3. Normalization are performed below.
21:27:31 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:27:31 SQL> --    normalized here.
21:27:31 SQL> 
21:27:31 SQL> BEGIN
21:27:31   2  	-- Perform missing value treatment for all predictors
21:27:31   3  	-- create miss tables
21:27:31   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:27:31   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:27:31   6  
21:27:31   7  	-- populate miss tables
21:27:31   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:27:31   9  	  miss_table_name => 'svmc_miss_num',
21:27:31  10  	  data_table_name => '&bldtable',
21:27:31  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:27:31  12  
21:27:31  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:27:31  14  	  miss_table_name => 'svmc_miss_cat',
21:27:31  15  	  data_table_name => '&bldtable',
21:27:31  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:27:31  17  
21:27:31  18  	-- xform input data to replace missing values
21:27:31  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:27:31  20  	  miss_table_name => 'svmc_miss_num',
21:27:31  21  	  data_table_name => '&bldtable',
21:27:31  22  	  xform_view_name => 'xformed_build_miss_num');
21:27:31  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:27:31  24  	  miss_table_name => 'svmc_miss_cat',
21:27:31  25  	  data_table_name => '&bldtable',
21:27:31  26  	  xform_view_name => 'xformed_build_miss_cat');
21:27:31  27  
21:27:31  28  	-- Perform outlier treatment.
21:27:31  29  	-- create clip table
21:27:31  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:27:31  31  
21:27:31  32  	-- populate clip table
21:27:31  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:27:31  34  	  clip_table_name => 'svmc_clip',
21:27:31  35  	  data_table_name => '&bldtable',
21:27:31  36  	  tail_frac	  => 0.025,
21:27:31  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:27:31  38  
21:27:31  39  	-- xform input data to winsorized data
21:27:31  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:27:31  41  	  clip_table_name => 'svmc_clip',
21:27:31  42  	  data_table_name => '&bldtable',
21:27:31  43  	  xform_view_name => 'svmc_winsor');
21:27:31  44  
21:27:31  45  	-- create normalization table
21:27:31  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:27:31  47  
21:27:31  48  	-- populate normalization table based on winsorized data
21:27:31  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:27:31  50  	  norm_table_name => 'svmc_norm',
21:27:31  51  	  data_table_name => 'svmc_winsor',
21:27:31  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:27:31  53  
21:27:31  54  	-- normalize the original data
21:27:31  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:27:31  56  	  norm_table_name => 'svmc_norm',
21:27:31  57  	  data_table_name => '&bldtable',
21:27:31  58  	  xform_view_name => 'svmc_build_prep');
21:27:31  59  END;
21:27:31  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.22
21:27:49 SQL> 
21:27:49 SQL> ---------------------
21:27:49 SQL> -- CREATE A NEW MODEL
21:27:49 SQL> --
21:27:49 SQL> -- Cleanup old model with the same name for repeat runs
21:27:49 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:27:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:27:49   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.57
21:27:49 SQL> 
21:27:49 SQL> -- Build a new SVM Model
21:27:49 SQL> BEGIN
21:27:49   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:27:49   3  	  model_name	      => '&model_name',
21:27:49   4  	  mining_function     => dbms_data_mining.classification,
21:27:49   5  	  data_table_name     => 'svmc_build_prep',
21:27:49   6  	  case_id_column_name => '&case_id',
21:27:49   7  	  target_column_name  => '&target',
21:27:49   8  	  settings_table_name => 'svmc_settings');
21:27:49   9  END;
21:27:49  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:30.82
21:28:20 SQL> 
21:28:20 SQL> -----------------------------------------------------------------------
21:28:20 SQL> --			       APPLY/score THE MODEL
21:28:20 SQL> -----------------------------------------------------------------------
21:28:20 SQL> 
21:28:20 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:28:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:28:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:28:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:28:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:28:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:28:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:28:21 SQL> -----------------------
21:28:21 SQL> -- PREPARE SCORING DATA
21:28:21 SQL> --
21:28:21 SQL> -- If the data for model creation has been prepared, then the data
21:28:21 SQL> -- to be scored using the model must be prepared in the same manner
21:28:21 SQL> -- in order to obtain meaningful results.
21:28:21 SQL> --
21:28:21 SQL> -- 1. Missing Value treatment for all Predictors and
21:28:21 SQL> -- 2. Normalization
21:28:21 SQL> -- No outlier treatment will be performed during test and apply. The
21:28:21 SQL> -- normalization step is sufficient, since the normalization parameters
21:28:21 SQL> -- already capture the effects of outlier treatment done with build data.
21:28:21 SQL> --
21:28:21 SQL> BEGIN
21:28:21   2  	-- Xform Test data to replace missing values
21:28:21   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:28:21   4  	  miss_table_name => 'svmc_miss_num',
21:28:21   5  	  data_table_name => '&scoretable',
21:28:21   6  	  xform_view_name => 'xformed_apply_miss_num');
21:28:21   7  
21:28:21   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:28:21   9  	  miss_table_name => 'svmc_miss_cat',
21:28:21  10  	  data_table_name => '&scoretable',
21:28:21  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:28:21  12  
21:28:21  13  	-- Normalize the data to be scored
21:28:21  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:28:21  15  	  norm_table_name => 'svmc_norm',
21:28:21  16  	  data_table_name => '&scoretable',
21:28:21  17  	  xform_view_name => 'svmc_apply_prep');
21:28:21  18  END;
21:28:21  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
21:28:22 SQL> 
21:28:22 SQL> -- Use same model_name used in score.sql
21:28:22 SQL> DEFINE model_name = 'forex14'
21:28:22 SQL> 
21:28:22 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
21:28:22 SQL> 
21:28:22 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
21:28:22 SQL> 
21:28:22 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
21:28:22   2  SELECT
21:28:22   3  prdate
21:28:22   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:28:22   5  ,sysdate
21:28:22   6  ,SUBSTR(prdate,1,3)pair
21:28:22   7  ,SUBSTR(prdate,4,19)ydate
21:28:22   8  FROM svmc_apply_prep
21:28:22   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.28
21:28:22 SQL> @aud_score1day.sql  2010-12-29 21:10:00
21:28:22 SQL> --
21:28:22 SQL> -- aud_score1day.sql
21:28:22 SQL> --
21:28:22 SQL> 
21:28:22 SQL> CREATE OR REPLACE VIEW sme AS
21:28:22   2  SELECT
21:28:22   3  'aud'||m.ydate prdate
21:28:22   4  ,NULL gatt
21:28:22   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:28:22   6  ,eur_g00
21:28:22   7  ,eur_g01
21:28:22   8  ,eur_g02
21:28:22   9  ,eur_g03
21:28:22  10  ,eur_g04
21:28:22  11  ,eur_g05
21:28:22  12  ,eur_g06
21:28:22  13  ,eur_g07
21:28:22  14  ,eur_g08
21:28:22  15  ,eur_g09
21:28:22  16  ,eur_g10
21:28:22  17  ,eur_g11
21:28:22  18  ,eur_g12
21:28:22  19  ,eur_g13
21:28:22  20  ,eur_g14
21:28:22  21  ,eur_g15
21:28:22  22  ,eur_g16
21:28:22  23  ,eur_g17
21:28:22  24  ,eur_g18
21:28:22  25  ,eur_g19
21:28:22  26  ,eur_g20
21:28:22  27  ,eur_g21
21:28:22  28  ,eur_g22
21:28:22  29  ,eur_g23
21:28:22  30  ,eur_g24
21:28:22  31  ,eur_g25
21:28:22  32  ,eur_g26
21:28:22  33  ,eur_g27
21:28:22  34  ,eur_g28
21:28:22  35  ,eur_g29
21:28:22  36  ,eur_g30
21:28:22  37  ,eur_g31
21:28:22  38  ,eur_g32
21:28:22  39  ,eur_g33
21:28:22  40  ,eur_g34
21:28:22  41  ,eur_g35
21:28:22  42  ,eur_g36
21:28:22  43  ,eur_g37
21:28:22  44  ,eur_g38
21:28:22  45  ,eur_g39
21:28:22  46  ,eur_g40
21:28:22  47  ,eur_g41
21:28:22  48  ,aud_g00
21:28:22  49  ,aud_g01
21:28:22  50  ,aud_g02
21:28:22  51  ,aud_g03
21:28:22  52  ,aud_g04
21:28:22  53  ,aud_g05
21:28:22  54  ,aud_g06
21:28:22  55  ,aud_g07
21:28:22  56  ,aud_g08
21:28:22  57  ,aud_g09
21:28:22  58  ,aud_g10
21:28:22  59  ,aud_g11
21:28:22  60  ,aud_g12
21:28:22  61  ,aud_g13
21:28:22  62  ,aud_g14
21:28:22  63  ,aud_g15
21:28:22  64  ,aud_g16
21:28:22  65  ,aud_g17
21:28:22  66  ,aud_g18
21:28:22  67  ,aud_g19
21:28:22  68  ,aud_g20
21:28:22  69  ,aud_g21
21:28:22  70  ,aud_g22
21:28:22  71  ,aud_g23
21:28:22  72  ,aud_g24
21:28:22  73  ,aud_g25
21:28:22  74  ,aud_g26
21:28:22  75  ,aud_g27
21:28:22  76  ,aud_g28
21:28:22  77  ,aud_g29
21:28:22  78  ,aud_g30
21:28:22  79  ,aud_g31
21:28:22  80  ,aud_g32
21:28:22  81  ,aud_g33
21:28:22  82  ,aud_g34
21:28:22  83  ,aud_g35
21:28:22  84  ,aud_g36
21:28:22  85  ,aud_g37
21:28:22  86  ,aud_g38
21:28:22  87  ,aud_g39
21:28:22  88  ,aud_g40
21:28:22  89  ,aud_g41
21:28:22  90  ,gbp_g00
21:28:22  91  ,gbp_g01
21:28:22  92  ,gbp_g02
21:28:22  93  ,gbp_g03
21:28:22  94  ,gbp_g04
21:28:22  95  ,gbp_g05
21:28:22  96  ,gbp_g06
21:28:22  97  ,gbp_g07
21:28:22  98  ,gbp_g08
21:28:22  99  ,gbp_g09
21:28:22 100  ,gbp_g10
21:28:22 101  ,gbp_g11
21:28:22 102  ,gbp_g12
21:28:22 103  ,gbp_g13
21:28:22 104  ,gbp_g14
21:28:22 105  ,gbp_g15
21:28:22 106  ,gbp_g16
21:28:22 107  ,gbp_g17
21:28:22 108  ,gbp_g18
21:28:22 109  ,gbp_g19
21:28:22 110  ,gbp_g20
21:28:22 111  ,gbp_g21
21:28:22 112  ,gbp_g22
21:28:22 113  ,gbp_g23
21:28:22 114  ,gbp_g24
21:28:22 115  ,gbp_g25
21:28:22 116  ,gbp_g26
21:28:22 117  ,gbp_g27
21:28:22 118  ,gbp_g28
21:28:22 119  ,gbp_g29
21:28:22 120  ,gbp_g30
21:28:22 121  ,gbp_g31
21:28:22 122  ,gbp_g32
21:28:22 123  ,gbp_g33
21:28:22 124  ,gbp_g34
21:28:22 125  ,gbp_g35
21:28:22 126  ,gbp_g36
21:28:22 127  ,gbp_g37
21:28:22 128  ,gbp_g38
21:28:22 129  ,gbp_g39
21:28:22 130  ,gbp_g40
21:28:22 131  ,gbp_g41
21:28:22 132  ,jpy_g00
21:28:22 133  ,jpy_g01
21:28:22 134  ,jpy_g02
21:28:22 135  ,jpy_g03
21:28:22 136  ,jpy_g04
21:28:22 137  ,jpy_g05
21:28:22 138  ,jpy_g06
21:28:22 139  ,jpy_g07
21:28:22 140  ,jpy_g08
21:28:22 141  ,jpy_g09
21:28:22 142  ,jpy_g10
21:28:22 143  ,jpy_g11
21:28:22 144  ,jpy_g12
21:28:22 145  ,jpy_g13
21:28:22 146  ,jpy_g14
21:28:22 147  ,jpy_g15
21:28:22 148  ,jpy_g16
21:28:22 149  ,jpy_g17
21:28:22 150  ,jpy_g18
21:28:22 151  ,jpy_g19
21:28:22 152  ,jpy_g20
21:28:22 153  ,jpy_g21
21:28:22 154  ,jpy_g22
21:28:22 155  ,jpy_g23
21:28:22 156  ,jpy_g24
21:28:22 157  ,jpy_g25
21:28:22 158  ,jpy_g26
21:28:22 159  ,jpy_g27
21:28:22 160  ,jpy_g28
21:28:22 161  ,jpy_g29
21:28:22 162  ,jpy_g30
21:28:22 163  ,jpy_g31
21:28:22 164  ,jpy_g32
21:28:22 165  ,jpy_g33
21:28:22 166  ,jpy_g34
21:28:22 167  ,jpy_g35
21:28:22 168  ,jpy_g36
21:28:22 169  ,jpy_g37
21:28:22 170  ,jpy_g38
21:28:22 171  ,jpy_g39
21:28:22 172  ,jpy_g40
21:28:22 173  ,jpy_g41
21:28:22 174  ,cad_g00
21:28:22 175  ,cad_g01
21:28:22 176  ,cad_g02
21:28:22 177  ,cad_g03
21:28:22 178  ,cad_g04
21:28:22 179  ,cad_g05
21:28:22 180  ,cad_g06
21:28:22 181  ,cad_g07
21:28:22 182  ,cad_g08
21:28:22 183  ,cad_g09
21:28:22 184  ,cad_g10
21:28:22 185  ,cad_g11
21:28:22 186  ,cad_g12
21:28:22 187  ,cad_g13
21:28:22 188  ,cad_g14
21:28:22 189  ,cad_g15
21:28:22 190  ,cad_g16
21:28:22 191  ,cad_g17
21:28:22 192  ,cad_g18
21:28:22 193  ,cad_g19
21:28:22 194  ,cad_g20
21:28:22 195  ,cad_g21
21:28:22 196  ,cad_g22
21:28:22 197  ,cad_g23
21:28:22 198  ,cad_g24
21:28:22 199  ,cad_g25
21:28:22 200  ,cad_g26
21:28:22 201  ,cad_g27
21:28:22 202  ,cad_g28
21:28:22 203  ,cad_g29
21:28:22 204  ,cad_g30
21:28:22 205  ,cad_g31
21:28:22 206  ,cad_g32
21:28:22 207  ,cad_g33
21:28:22 208  ,cad_g34
21:28:22 209  ,cad_g35
21:28:22 210  ,cad_g36
21:28:22 211  ,cad_g37
21:28:22 212  ,cad_g38
21:28:22 213  ,cad_g39
21:28:22 214  ,cad_g40
21:28:22 215  ,cad_g41
21:28:22 216  ,chf_g00
21:28:22 217  ,chf_g01
21:28:22 218  ,chf_g02
21:28:22 219  ,chf_g03
21:28:22 220  ,chf_g04
21:28:22 221  ,chf_g05
21:28:22 222  ,chf_g06
21:28:22 223  ,chf_g07
21:28:22 224  ,chf_g08
21:28:22 225  ,chf_g09
21:28:22 226  ,chf_g10
21:28:22 227  ,chf_g11
21:28:22 228  ,chf_g12
21:28:22 229  ,chf_g13
21:28:22 230  ,chf_g14
21:28:22 231  ,chf_g15
21:28:22 232  ,chf_g16
21:28:22 233  ,chf_g17
21:28:22 234  ,chf_g18
21:28:22 235  ,chf_g19
21:28:22 236  ,chf_g20
21:28:22 237  ,chf_g21
21:28:22 238  ,chf_g22
21:28:22 239  ,chf_g23
21:28:22 240  ,chf_g24
21:28:22 241  ,chf_g25
21:28:22 242  ,chf_g26
21:28:22 243  ,chf_g27
21:28:22 244  ,chf_g28
21:28:22 245  ,chf_g29
21:28:22 246  ,chf_g30
21:28:22 247  ,chf_g31
21:28:22 248  ,chf_g32
21:28:22 249  ,chf_g33
21:28:22 250  ,chf_g34
21:28:22 251  ,chf_g35
21:28:22 252  ,chf_g36
21:28:22 253  ,chf_g37
21:28:22 254  ,chf_g38
21:28:22 255  ,chf_g39
21:28:22 256  ,chf_g40
21:28:22 257  ,chf_g41
21:28:22 258  FROM aud_ms6 m
21:28:22 259  WHERE m.ydate = '&1'||' '||'&2'
21:28:22 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'21:10:00'

View created.

Elapsed: 00:00:00.13
21:28:22 SQL> 
21:28:22 SQL> -- rpt
21:28:22 SQL> -- We should see just 1 row:
21:28:22 SQL> 
21:28:22 SQL> SELECT COUNT(prdate) FROM sme
21:28:22   2  
21:28:22 SQL> -- Build the model:
21:28:22 SQL> CREATE OR REPLACE VIEW bme AS
21:28:22   2  SELECT
21:28:22   3  'aud'||m.ydate prdate
21:28:22   4  ,gatt
21:28:22   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:28:22   6  ,eur_g00
21:28:22   7  ,eur_g01
21:28:22   8  ,eur_g02
21:28:22   9  ,eur_g03
21:28:22  10  ,eur_g04
21:28:22  11  ,eur_g05
21:28:22  12  ,eur_g06
21:28:22  13  ,eur_g07
21:28:22  14  ,eur_g08
21:28:22  15  ,eur_g09
21:28:22  16  ,eur_g10
21:28:22  17  ,eur_g11
21:28:22  18  ,eur_g12
21:28:22  19  ,eur_g13
21:28:22  20  ,eur_g14
21:28:22  21  ,eur_g15
21:28:22  22  ,eur_g16
21:28:22  23  ,eur_g17
21:28:22  24  ,eur_g18
21:28:22  25  ,eur_g19
21:28:22  26  ,eur_g20
21:28:22  27  ,eur_g21
21:28:22  28  ,eur_g22
21:28:22  29  ,eur_g23
21:28:22  30  ,eur_g24
21:28:22  31  ,eur_g25
21:28:22  32  ,eur_g26
21:28:22  33  ,eur_g27
21:28:22  34  ,eur_g28
21:28:22  35  ,eur_g29
21:28:22  36  ,eur_g30
21:28:22  37  ,eur_g31
21:28:22  38  ,eur_g32
21:28:22  39  ,eur_g33
21:28:22  40  ,eur_g34
21:28:22  41  ,eur_g35
21:28:22  42  ,eur_g36
21:28:22  43  ,eur_g37
21:28:22  44  ,eur_g38
21:28:22  45  ,eur_g39
21:28:22  46  ,eur_g40
21:28:22  47  ,eur_g41
21:28:22  48  ,aud_g00
21:28:22  49  ,aud_g01
21:28:22  50  ,aud_g02
21:28:22  51  ,aud_g03
21:28:22  52  ,aud_g04
21:28:22  53  ,aud_g05
21:28:22  54  ,aud_g06
21:28:22  55  ,aud_g07
21:28:22  56  ,aud_g08
21:28:22  57  ,aud_g09
21:28:22  58  ,aud_g10
21:28:22  59  ,aud_g11
21:28:22  60  ,aud_g12
21:28:22  61  ,aud_g13
21:28:22  62  ,aud_g14
21:28:22  63  ,aud_g15
21:28:22  64  ,aud_g16
21:28:22  65  ,aud_g17
21:28:22  66  ,aud_g18
21:28:22  67  ,aud_g19
21:28:22  68  ,aud_g20
21:28:22  69  ,aud_g21
21:28:22  70  ,aud_g22
21:28:22  71  ,aud_g23
21:28:22  72  ,aud_g24
21:28:22  73  ,aud_g25
21:28:22  74  ,aud_g26
21:28:22  75  ,aud_g27
21:28:22  76  ,aud_g28
21:28:22  77  ,aud_g29
21:28:22  78  ,aud_g30
21:28:22  79  ,aud_g31
21:28:22  80  ,aud_g32
21:28:22  81  ,aud_g33
21:28:22  82  ,aud_g34
21:28:22  83  ,aud_g35
21:28:22  84  ,aud_g36
21:28:22  85  ,aud_g37
21:28:22  86  ,aud_g38
21:28:22  87  ,aud_g39
21:28:22  88  ,aud_g40
21:28:22  89  ,aud_g41
21:28:22  90  ,gbp_g00
21:28:22  91  ,gbp_g01
21:28:22  92  ,gbp_g02
21:28:22  93  ,gbp_g03
21:28:22  94  ,gbp_g04
21:28:22  95  ,gbp_g05
21:28:22  96  ,gbp_g06
21:28:22  97  ,gbp_g07
21:28:22  98  ,gbp_g08
21:28:22  99  ,gbp_g09
21:28:22 100  ,gbp_g10
21:28:22 101  ,gbp_g11
21:28:22 102  ,gbp_g12
21:28:22 103  ,gbp_g13
21:28:22 104  ,gbp_g14
21:28:22 105  ,gbp_g15
21:28:22 106  ,gbp_g16
21:28:22 107  ,gbp_g17
21:28:22 108  ,gbp_g18
21:28:22 109  ,gbp_g19
21:28:22 110  ,gbp_g20
21:28:22 111  ,gbp_g21
21:28:22 112  ,gbp_g22
21:28:22 113  ,gbp_g23
21:28:22 114  ,gbp_g24
21:28:22 115  ,gbp_g25
21:28:22 116  ,gbp_g26
21:28:22 117  ,gbp_g27
21:28:22 118  ,gbp_g28
21:28:22 119  ,gbp_g29
21:28:22 120  ,gbp_g30
21:28:22 121  ,gbp_g31
21:28:22 122  ,gbp_g32
21:28:22 123  ,gbp_g33
21:28:22 124  ,gbp_g34
21:28:22 125  ,gbp_g35
21:28:22 126  ,gbp_g36
21:28:22 127  ,gbp_g37
21:28:22 128  ,gbp_g38
21:28:22 129  ,gbp_g39
21:28:22 130  ,gbp_g40
21:28:22 131  ,gbp_g41
21:28:22 132  ,jpy_g00
21:28:22 133  ,jpy_g01
21:28:22 134  ,jpy_g02
21:28:22 135  ,jpy_g03
21:28:22 136  ,jpy_g04
21:28:22 137  ,jpy_g05
21:28:22 138  ,jpy_g06
21:28:22 139  ,jpy_g07
21:28:22 140  ,jpy_g08
21:28:22 141  ,jpy_g09
21:28:22 142  ,jpy_g10
21:28:22 143  ,jpy_g11
21:28:22 144  ,jpy_g12
21:28:22 145  ,jpy_g13
21:28:22 146  ,jpy_g14
21:28:22 147  ,jpy_g15
21:28:22 148  ,jpy_g16
21:28:22 149  ,jpy_g17
21:28:22 150  ,jpy_g18
21:28:22 151  ,jpy_g19
21:28:22 152  ,jpy_g20
21:28:22 153  ,jpy_g21
21:28:22 154  ,jpy_g22
21:28:22 155  ,jpy_g23
21:28:22 156  ,jpy_g24
21:28:22 157  ,jpy_g25
21:28:22 158  ,jpy_g26
21:28:22 159  ,jpy_g27
21:28:22 160  ,jpy_g28
21:28:22 161  ,jpy_g29
21:28:22 162  ,jpy_g30
21:28:22 163  ,jpy_g31
21:28:22 164  ,jpy_g32
21:28:22 165  ,jpy_g33
21:28:22 166  ,jpy_g34
21:28:22 167  ,jpy_g35
21:28:22 168  ,jpy_g36
21:28:22 169  ,jpy_g37
21:28:22 170  ,jpy_g38
21:28:22 171  ,jpy_g39
21:28:22 172  ,jpy_g40
21:28:22 173  ,jpy_g41
21:28:22 174  ,cad_g00
21:28:22 175  ,cad_g01
21:28:22 176  ,cad_g02
21:28:22 177  ,cad_g03
21:28:22 178  ,cad_g04
21:28:22 179  ,cad_g05
21:28:22 180  ,cad_g06
21:28:22 181  ,cad_g07
21:28:22 182  ,cad_g08
21:28:22 183  ,cad_g09
21:28:22 184  ,cad_g10
21:28:22 185  ,cad_g11
21:28:22 186  ,cad_g12
21:28:22 187  ,cad_g13
21:28:22 188  ,cad_g14
21:28:22 189  ,cad_g15
21:28:22 190  ,cad_g16
21:28:22 191  ,cad_g17
21:28:22 192  ,cad_g18
21:28:22 193  ,cad_g19
21:28:22 194  ,cad_g20
21:28:22 195  ,cad_g21
21:28:22 196  ,cad_g22
21:28:22 197  ,cad_g23
21:28:22 198  ,cad_g24
21:28:22 199  ,cad_g25
21:28:22 200  ,cad_g26
21:28:22 201  ,cad_g27
21:28:22 202  ,cad_g28
21:28:22 203  ,cad_g29
21:28:22 204  ,cad_g30
21:28:22 205  ,cad_g31
21:28:22 206  ,cad_g32
21:28:22 207  ,cad_g33
21:28:22 208  ,cad_g34
21:28:22 209  ,cad_g35
21:28:22 210  ,cad_g36
21:28:22 211  ,cad_g37
21:28:22 212  ,cad_g38
21:28:22 213  ,cad_g39
21:28:22 214  ,cad_g40
21:28:22 215  ,cad_g41
21:28:22 216  ,chf_g00
21:28:22 217  ,chf_g01
21:28:22 218  ,chf_g02
21:28:22 219  ,chf_g03
21:28:22 220  ,chf_g04
21:28:22 221  ,chf_g05
21:28:22 222  ,chf_g06
21:28:22 223  ,chf_g07
21:28:22 224  ,chf_g08
21:28:22 225  ,chf_g09
21:28:22 226  ,chf_g10
21:28:22 227  ,chf_g11
21:28:22 228  ,chf_g12
21:28:22 229  ,chf_g13
21:28:22 230  ,chf_g14
21:28:22 231  ,chf_g15
21:28:22 232  ,chf_g16
21:28:22 233  ,chf_g17
21:28:22 234  ,chf_g18
21:28:22 235  ,chf_g19
21:28:22 236  ,chf_g20
21:28:22 237  ,chf_g21
21:28:22 238  ,chf_g22
21:28:22 239  ,chf_g23
21:28:22 240  ,chf_g24
21:28:22 241  ,chf_g25
21:28:22 242  ,chf_g26
21:28:22 243  ,chf_g27
21:28:22 244  ,chf_g28
21:28:22 245  ,chf_g29
21:28:22 246  ,chf_g30
21:28:22 247  ,chf_g31
21:28:22 248  ,chf_g32
21:28:22 249  ,chf_g33
21:28:22 250  ,chf_g34
21:28:22 251  ,chf_g35
21:28:22 252  ,chf_g36
21:28:22 253  ,chf_g37
21:28:22 254  ,chf_g38
21:28:22 255  ,chf_g39
21:28:22 256  ,chf_g40
21:28:22 257  ,chf_g41
21:28:22 258  FROM aud_ms6 m
21:28:22 259  WHERE gatt IN('nup','up')
21:28:22 260  AND 1+m.ydate < '&1'||' '||'&2'
21:28:22 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'21:10:00'

View created.

Elapsed: 00:00:00.12
21:28:22 SQL> 
21:28:22 SQL> -- rpt
21:28:22 SQL> 
21:28:22 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
21:28:22   2  
21:28:22 SQL> SELECT MAX(prdate) FROM bme
21:28:22   2  
21:28:22 SQL> -- Now build model from bme and score sme
21:28:22 SQL> @score1.sql
21:28:22 SQL> -- score1.sql
21:28:22 SQL> 
21:28:22 SQL> -- Does the 1st SVM score
21:28:22 SQL> 
21:28:22 SQL> -- Fill up svmc_apply_prep
21:28:22 SQL> @score.sql
21:28:22 SQL> --
21:28:22 SQL> -- score.sql
21:28:22 SQL> --
21:28:22 SQL> 
21:28:22 SQL> -- usage: score.sql
21:28:22 SQL> 
21:28:22 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:28:22 SQL> 
21:28:22 SQL> DEFINE target	= 'gatt'
21:28:22 SQL> DEFINE model_name = 'forex14'
21:28:22 SQL> DEFINE bldtable	= 'bme'
21:28:22 SQL> DEFINE scoretable = 'sme'
21:28:22 SQL> DEFINE case_id	= 'prdate'
21:28:22 SQL> 
21:28:22 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:28:22 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:28:22 SQL> 
21:28:22 SQL> -- Builds an SVM model using pl/sql.
21:28:22 SQL> 
21:28:22 SQL> -----------------------------------------------------------------------
21:28:22 SQL> --			    BUILD THE MODEL
21:28:22 SQL> -----------------------------------------------------------------------
21:28:22 SQL> 
21:28:22 SQL> -- Cleanup old build data preparation objects for repeat runs
21:28:22 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
21:28:22 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:28:22 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
21:28:22 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
21:28:22 SQL> 
21:28:22 SQL> 
21:28:22 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:28:22 SQL> --
21:28:22 SQL> -- DROP	TABLE svmc_settings ;
21:28:22 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:28:22 SQL> -- DELETE svmc_settings;
21:28:22 SQL> 
21:28:22 SQL> -- The default classification algorithm is Naive Bayes. So override
21:28:22 SQL> -- this choice to SVM using a settings table.
21:28:22 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:28:22 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:28:22 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:28:22 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:28:22 SQL> -- models.
21:28:22 SQL> --
21:28:22 SQL> 
21:28:22 SQL> -- Do this once and then comment it out.
21:28:22 SQL> -- That makes script go faster.
21:28:22 SQL> -- BEGIN
21:28:22 SQL> -- -- Populate settings table
21:28:22 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:28:22 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:28:22 SQL> --
21:28:22 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:28:22 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:28:22 SQL> --
21:28:22 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:28:22 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:28:22 SQL> --   COMMIT;
21:28:22 SQL> -- END;
21:28:22 SQL> -- /
21:28:22 SQL> 
21:28:22 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:28:22 SQL> 
21:28:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:28:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:28:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:28:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:28:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:28:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:28:23 SQL> 
21:28:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:28:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:28:23 SQL> 
21:28:23 SQL> --------------------------------
21:28:23 SQL> -- PREPARE BUILD (TRAINING) DATA
21:28:23 SQL> --
21:28:23 SQL> 
21:28:23 SQL> -- 1. Missing Value treatment for all Predictors and
21:28:23 SQL> -- 2. Outlier Treatment and
21:28:23 SQL> -- 3. Normalization are performed below.
21:28:23 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:28:23 SQL> --    normalized here.
21:28:23 SQL> 
21:28:23 SQL> BEGIN
21:28:23   2  	-- Perform missing value treatment for all predictors
21:28:23   3  	-- create miss tables
21:28:23   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:28:23   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:28:23   6  
21:28:23   7  	-- populate miss tables
21:28:23   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:28:23   9  	  miss_table_name => 'svmc_miss_num',
21:28:23  10  	  data_table_name => '&bldtable',
21:28:23  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:28:23  12  
21:28:23  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:28:23  14  	  miss_table_name => 'svmc_miss_cat',
21:28:23  15  	  data_table_name => '&bldtable',
21:28:23  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:28:23  17  
21:28:23  18  	-- xform input data to replace missing values
21:28:23  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:28:23  20  	  miss_table_name => 'svmc_miss_num',
21:28:23  21  	  data_table_name => '&bldtable',
21:28:23  22  	  xform_view_name => 'xformed_build_miss_num');
21:28:23  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:28:23  24  	  miss_table_name => 'svmc_miss_cat',
21:28:23  25  	  data_table_name => '&bldtable',
21:28:23  26  	  xform_view_name => 'xformed_build_miss_cat');
21:28:23  27  
21:28:23  28  	-- Perform outlier treatment.
21:28:23  29  	-- create clip table
21:28:23  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:28:23  31  
21:28:23  32  	-- populate clip table
21:28:23  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:28:23  34  	  clip_table_name => 'svmc_clip',
21:28:23  35  	  data_table_name => '&bldtable',
21:28:23  36  	  tail_frac	  => 0.025,
21:28:23  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:28:23  38  
21:28:23  39  	-- xform input data to winsorized data
21:28:23  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:28:23  41  	  clip_table_name => 'svmc_clip',
21:28:23  42  	  data_table_name => '&bldtable',
21:28:23  43  	  xform_view_name => 'svmc_winsor');
21:28:23  44  
21:28:23  45  	-- create normalization table
21:28:23  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:28:23  47  
21:28:23  48  	-- populate normalization table based on winsorized data
21:28:23  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:28:23  50  	  norm_table_name => 'svmc_norm',
21:28:23  51  	  data_table_name => 'svmc_winsor',
21:28:23  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:28:23  53  
21:28:23  54  	-- normalize the original data
21:28:23  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:28:23  56  	  norm_table_name => 'svmc_norm',
21:28:23  57  	  data_table_name => '&bldtable',
21:28:23  58  	  xform_view_name => 'svmc_build_prep');
21:28:23  59  END;
21:28:23  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.95
21:28:41 SQL> 
21:28:41 SQL> ---------------------
21:28:41 SQL> -- CREATE A NEW MODEL
21:28:41 SQL> --
21:28:41 SQL> -- Cleanup old model with the same name for repeat runs
21:28:41 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:28:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:28:41   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.02
21:28:42 SQL> 
21:28:42 SQL> -- Build a new SVM Model
21:28:42 SQL> BEGIN
21:28:42   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:28:42   3  	  model_name	      => '&model_name',
21:28:42   4  	  mining_function     => dbms_data_mining.classification,
21:28:42   5  	  data_table_name     => 'svmc_build_prep',
21:28:42   6  	  case_id_column_name => '&case_id',
21:28:42   7  	  target_column_name  => '&target',
21:28:42   8  	  settings_table_name => 'svmc_settings');
21:28:42   9  END;
21:28:42  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.77
21:29:09 SQL> 
21:29:09 SQL> -----------------------------------------------------------------------
21:29:09 SQL> --			       APPLY/score THE MODEL
21:29:09 SQL> -----------------------------------------------------------------------
21:29:09 SQL> 
21:29:09 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:29:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:29:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
21:29:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:29:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:29:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:29:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:29:10 SQL> -----------------------
21:29:10 SQL> -- PREPARE SCORING DATA
21:29:10 SQL> --
21:29:10 SQL> -- If the data for model creation has been prepared, then the data
21:29:10 SQL> -- to be scored using the model must be prepared in the same manner
21:29:10 SQL> -- in order to obtain meaningful results.
21:29:10 SQL> --
21:29:10 SQL> -- 1. Missing Value treatment for all Predictors and
21:29:10 SQL> -- 2. Normalization
21:29:10 SQL> -- No outlier treatment will be performed during test and apply. The
21:29:10 SQL> -- normalization step is sufficient, since the normalization parameters
21:29:10 SQL> -- already capture the effects of outlier treatment done with build data.
21:29:10 SQL> --
21:29:10 SQL> BEGIN
21:29:10   2  	-- Xform Test data to replace missing values
21:29:10   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:29:10   4  	  miss_table_name => 'svmc_miss_num',
21:29:10   5  	  data_table_name => '&scoretable',
21:29:10   6  	  xform_view_name => 'xformed_apply_miss_num');
21:29:10   7  
21:29:10   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:29:10   9  	  miss_table_name => 'svmc_miss_cat',
21:29:10  10  	  data_table_name => '&scoretable',
21:29:10  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:29:10  12  
21:29:10  13  	-- Normalize the data to be scored
21:29:10  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:29:10  15  	  norm_table_name => 'svmc_norm',
21:29:10  16  	  data_table_name => '&scoretable',
21:29:10  17  	  xform_view_name => 'svmc_apply_prep');
21:29:10  18  END;
21:29:10  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.28
21:29:11 SQL> 
21:29:11 SQL> -- Use same model_name used in score.sql
21:29:11 SQL> DEFINE model_name = 'forex14'
21:29:11 SQL> 
21:29:11 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
21:29:11 SQL> 
21:29:11 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
21:29:11 SQL> 
21:29:11 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
21:29:11   2  SELECT
21:29:11   3  prdate
21:29:11   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:29:11   5  ,sysdate
21:29:11   6  ,SUBSTR(prdate,1,3)pair
21:29:11   7  ,SUBSTR(prdate,4,19)ydate
21:29:11   8  FROM svmc_apply_prep
21:29:11   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:29:11 SQL> @aud_score1day.sql  2010-12-29 21:15:00
21:29:11 SQL> --
21:29:11 SQL> -- aud_score1day.sql
21:29:11 SQL> --
21:29:11 SQL> 
21:29:11 SQL> CREATE OR REPLACE VIEW sme AS
21:29:11   2  SELECT
21:29:11   3  'aud'||m.ydate prdate
21:29:11   4  ,NULL gatt
21:29:11   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:29:11   6  ,eur_g00
21:29:11   7  ,eur_g01
21:29:11   8  ,eur_g02
21:29:11   9  ,eur_g03
21:29:11  10  ,eur_g04
21:29:11  11  ,eur_g05
21:29:11  12  ,eur_g06
21:29:11  13  ,eur_g07
21:29:11  14  ,eur_g08
21:29:11  15  ,eur_g09
21:29:11  16  ,eur_g10
21:29:11  17  ,eur_g11
21:29:11  18  ,eur_g12
21:29:11  19  ,eur_g13
21:29:11  20  ,eur_g14
21:29:11  21  ,eur_g15
21:29:11  22  ,eur_g16
21:29:11  23  ,eur_g17
21:29:11  24  ,eur_g18
21:29:11  25  ,eur_g19
21:29:11  26  ,eur_g20
21:29:11  27  ,eur_g21
21:29:11  28  ,eur_g22
21:29:11  29  ,eur_g23
21:29:11  30  ,eur_g24
21:29:11  31  ,eur_g25
21:29:11  32  ,eur_g26
21:29:11  33  ,eur_g27
21:29:11  34  ,eur_g28
21:29:11  35  ,eur_g29
21:29:11  36  ,eur_g30
21:29:11  37  ,eur_g31
21:29:11  38  ,eur_g32
21:29:11  39  ,eur_g33
21:29:11  40  ,eur_g34
21:29:11  41  ,eur_g35
21:29:11  42  ,eur_g36
21:29:11  43  ,eur_g37
21:29:11  44  ,eur_g38
21:29:11  45  ,eur_g39
21:29:11  46  ,eur_g40
21:29:11  47  ,eur_g41
21:29:11  48  ,aud_g00
21:29:11  49  ,aud_g01
21:29:11  50  ,aud_g02
21:29:11  51  ,aud_g03
21:29:11  52  ,aud_g04
21:29:11  53  ,aud_g05
21:29:11  54  ,aud_g06
21:29:11  55  ,aud_g07
21:29:11  56  ,aud_g08
21:29:11  57  ,aud_g09
21:29:11  58  ,aud_g10
21:29:11  59  ,aud_g11
21:29:11  60  ,aud_g12
21:29:11  61  ,aud_g13
21:29:11  62  ,aud_g14
21:29:11  63  ,aud_g15
21:29:11  64  ,aud_g16
21:29:11  65  ,aud_g17
21:29:11  66  ,aud_g18
21:29:11  67  ,aud_g19
21:29:11  68  ,aud_g20
21:29:11  69  ,aud_g21
21:29:11  70  ,aud_g22
21:29:11  71  ,aud_g23
21:29:11  72  ,aud_g24
21:29:11  73  ,aud_g25
21:29:11  74  ,aud_g26
21:29:11  75  ,aud_g27
21:29:11  76  ,aud_g28
21:29:11  77  ,aud_g29
21:29:11  78  ,aud_g30
21:29:11  79  ,aud_g31
21:29:11  80  ,aud_g32
21:29:11  81  ,aud_g33
21:29:11  82  ,aud_g34
21:29:11  83  ,aud_g35
21:29:11  84  ,aud_g36
21:29:11  85  ,aud_g37
21:29:11  86  ,aud_g38
21:29:11  87  ,aud_g39
21:29:11  88  ,aud_g40
21:29:11  89  ,aud_g41
21:29:11  90  ,gbp_g00
21:29:11  91  ,gbp_g01
21:29:11  92  ,gbp_g02
21:29:11  93  ,gbp_g03
21:29:11  94  ,gbp_g04
21:29:11  95  ,gbp_g05
21:29:11  96  ,gbp_g06
21:29:11  97  ,gbp_g07
21:29:11  98  ,gbp_g08
21:29:11  99  ,gbp_g09
21:29:11 100  ,gbp_g10
21:29:11 101  ,gbp_g11
21:29:11 102  ,gbp_g12
21:29:11 103  ,gbp_g13
21:29:11 104  ,gbp_g14
21:29:11 105  ,gbp_g15
21:29:11 106  ,gbp_g16
21:29:11 107  ,gbp_g17
21:29:11 108  ,gbp_g18
21:29:11 109  ,gbp_g19
21:29:11 110  ,gbp_g20
21:29:11 111  ,gbp_g21
21:29:11 112  ,gbp_g22
21:29:11 113  ,gbp_g23
21:29:11 114  ,gbp_g24
21:29:11 115  ,gbp_g25
21:29:11 116  ,gbp_g26
21:29:11 117  ,gbp_g27
21:29:11 118  ,gbp_g28
21:29:11 119  ,gbp_g29
21:29:11 120  ,gbp_g30
21:29:11 121  ,gbp_g31
21:29:11 122  ,gbp_g32
21:29:11 123  ,gbp_g33
21:29:11 124  ,gbp_g34
21:29:11 125  ,gbp_g35
21:29:11 126  ,gbp_g36
21:29:11 127  ,gbp_g37
21:29:11 128  ,gbp_g38
21:29:11 129  ,gbp_g39
21:29:11 130  ,gbp_g40
21:29:11 131  ,gbp_g41
21:29:11 132  ,jpy_g00
21:29:11 133  ,jpy_g01
21:29:11 134  ,jpy_g02
21:29:11 135  ,jpy_g03
21:29:11 136  ,jpy_g04
21:29:11 137  ,jpy_g05
21:29:11 138  ,jpy_g06
21:29:11 139  ,jpy_g07
21:29:11 140  ,jpy_g08
21:29:11 141  ,jpy_g09
21:29:11 142  ,jpy_g10
21:29:11 143  ,jpy_g11
21:29:11 144  ,jpy_g12
21:29:11 145  ,jpy_g13
21:29:11 146  ,jpy_g14
21:29:11 147  ,jpy_g15
21:29:11 148  ,jpy_g16
21:29:11 149  ,jpy_g17
21:29:11 150  ,jpy_g18
21:29:11 151  ,jpy_g19
21:29:11 152  ,jpy_g20
21:29:11 153  ,jpy_g21
21:29:11 154  ,jpy_g22
21:29:11 155  ,jpy_g23
21:29:11 156  ,jpy_g24
21:29:11 157  ,jpy_g25
21:29:11 158  ,jpy_g26
21:29:11 159  ,jpy_g27
21:29:11 160  ,jpy_g28
21:29:11 161  ,jpy_g29
21:29:11 162  ,jpy_g30
21:29:11 163  ,jpy_g31
21:29:11 164  ,jpy_g32
21:29:11 165  ,jpy_g33
21:29:11 166  ,jpy_g34
21:29:11 167  ,jpy_g35
21:29:11 168  ,jpy_g36
21:29:11 169  ,jpy_g37
21:29:11 170  ,jpy_g38
21:29:11 171  ,jpy_g39
21:29:11 172  ,jpy_g40
21:29:11 173  ,jpy_g41
21:29:11 174  ,cad_g00
21:29:11 175  ,cad_g01
21:29:11 176  ,cad_g02
21:29:11 177  ,cad_g03
21:29:11 178  ,cad_g04
21:29:11 179  ,cad_g05
21:29:11 180  ,cad_g06
21:29:11 181  ,cad_g07
21:29:11 182  ,cad_g08
21:29:11 183  ,cad_g09
21:29:11 184  ,cad_g10
21:29:11 185  ,cad_g11
21:29:11 186  ,cad_g12
21:29:11 187  ,cad_g13
21:29:11 188  ,cad_g14
21:29:11 189  ,cad_g15
21:29:11 190  ,cad_g16
21:29:11 191  ,cad_g17
21:29:11 192  ,cad_g18
21:29:11 193  ,cad_g19
21:29:11 194  ,cad_g20
21:29:11 195  ,cad_g21
21:29:11 196  ,cad_g22
21:29:11 197  ,cad_g23
21:29:11 198  ,cad_g24
21:29:11 199  ,cad_g25
21:29:11 200  ,cad_g26
21:29:11 201  ,cad_g27
21:29:11 202  ,cad_g28
21:29:11 203  ,cad_g29
21:29:11 204  ,cad_g30
21:29:11 205  ,cad_g31
21:29:11 206  ,cad_g32
21:29:11 207  ,cad_g33
21:29:11 208  ,cad_g34
21:29:11 209  ,cad_g35
21:29:11 210  ,cad_g36
21:29:11 211  ,cad_g37
21:29:11 212  ,cad_g38
21:29:11 213  ,cad_g39
21:29:11 214  ,cad_g40
21:29:11 215  ,cad_g41
21:29:11 216  ,chf_g00
21:29:11 217  ,chf_g01
21:29:11 218  ,chf_g02
21:29:11 219  ,chf_g03
21:29:11 220  ,chf_g04
21:29:11 221  ,chf_g05
21:29:11 222  ,chf_g06
21:29:11 223  ,chf_g07
21:29:11 224  ,chf_g08
21:29:11 225  ,chf_g09
21:29:11 226  ,chf_g10
21:29:11 227  ,chf_g11
21:29:11 228  ,chf_g12
21:29:11 229  ,chf_g13
21:29:11 230  ,chf_g14
21:29:11 231  ,chf_g15
21:29:11 232  ,chf_g16
21:29:11 233  ,chf_g17
21:29:11 234  ,chf_g18
21:29:11 235  ,chf_g19
21:29:11 236  ,chf_g20
21:29:11 237  ,chf_g21
21:29:11 238  ,chf_g22
21:29:11 239  ,chf_g23
21:29:11 240  ,chf_g24
21:29:11 241  ,chf_g25
21:29:11 242  ,chf_g26
21:29:11 243  ,chf_g27
21:29:11 244  ,chf_g28
21:29:11 245  ,chf_g29
21:29:11 246  ,chf_g30
21:29:11 247  ,chf_g31
21:29:11 248  ,chf_g32
21:29:11 249  ,chf_g33
21:29:11 250  ,chf_g34
21:29:11 251  ,chf_g35
21:29:11 252  ,chf_g36
21:29:11 253  ,chf_g37
21:29:11 254  ,chf_g38
21:29:11 255  ,chf_g39
21:29:11 256  ,chf_g40
21:29:11 257  ,chf_g41
21:29:11 258  FROM aud_ms6 m
21:29:11 259  WHERE m.ydate = '&1'||' '||'&2'
21:29:11 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'21:15:00'

View created.

Elapsed: 00:00:00.12
21:29:11 SQL> 
21:29:11 SQL> -- rpt
21:29:11 SQL> -- We should see just 1 row:
21:29:11 SQL> 
21:29:11 SQL> SELECT COUNT(prdate) FROM sme
21:29:11   2  
21:29:11 SQL> -- Build the model:
21:29:11 SQL> CREATE OR REPLACE VIEW bme AS
21:29:11   2  SELECT
21:29:11   3  'aud'||m.ydate prdate
21:29:11   4  ,gatt
21:29:11   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:29:11   6  ,eur_g00
21:29:11   7  ,eur_g01
21:29:11   8  ,eur_g02
21:29:11   9  ,eur_g03
21:29:11  10  ,eur_g04
21:29:11  11  ,eur_g05
21:29:11  12  ,eur_g06
21:29:11  13  ,eur_g07
21:29:11  14  ,eur_g08
21:29:11  15  ,eur_g09
21:29:11  16  ,eur_g10
21:29:11  17  ,eur_g11
21:29:11  18  ,eur_g12
21:29:11  19  ,eur_g13
21:29:11  20  ,eur_g14
21:29:11  21  ,eur_g15
21:29:11  22  ,eur_g16
21:29:11  23  ,eur_g17
21:29:11  24  ,eur_g18
21:29:11  25  ,eur_g19
21:29:11  26  ,eur_g20
21:29:11  27  ,eur_g21
21:29:11  28  ,eur_g22
21:29:11  29  ,eur_g23
21:29:11  30  ,eur_g24
21:29:11  31  ,eur_g25
21:29:11  32  ,eur_g26
21:29:11  33  ,eur_g27
21:29:11  34  ,eur_g28
21:29:11  35  ,eur_g29
21:29:11  36  ,eur_g30
21:29:11  37  ,eur_g31
21:29:11  38  ,eur_g32
21:29:11  39  ,eur_g33
21:29:11  40  ,eur_g34
21:29:11  41  ,eur_g35
21:29:11  42  ,eur_g36
21:29:11  43  ,eur_g37
21:29:11  44  ,eur_g38
21:29:11  45  ,eur_g39
21:29:11  46  ,eur_g40
21:29:11  47  ,eur_g41
21:29:11  48  ,aud_g00
21:29:11  49  ,aud_g01
21:29:11  50  ,aud_g02
21:29:11  51  ,aud_g03
21:29:11  52  ,aud_g04
21:29:11  53  ,aud_g05
21:29:11  54  ,aud_g06
21:29:11  55  ,aud_g07
21:29:11  56  ,aud_g08
21:29:11  57  ,aud_g09
21:29:11  58  ,aud_g10
21:29:11  59  ,aud_g11
21:29:11  60  ,aud_g12
21:29:11  61  ,aud_g13
21:29:11  62  ,aud_g14
21:29:11  63  ,aud_g15
21:29:11  64  ,aud_g16
21:29:11  65  ,aud_g17
21:29:11  66  ,aud_g18
21:29:11  67  ,aud_g19
21:29:11  68  ,aud_g20
21:29:11  69  ,aud_g21
21:29:11  70  ,aud_g22
21:29:11  71  ,aud_g23
21:29:11  72  ,aud_g24
21:29:11  73  ,aud_g25
21:29:11  74  ,aud_g26
21:29:11  75  ,aud_g27
21:29:11  76  ,aud_g28
21:29:11  77  ,aud_g29
21:29:11  78  ,aud_g30
21:29:11  79  ,aud_g31
21:29:11  80  ,aud_g32
21:29:11  81  ,aud_g33
21:29:11  82  ,aud_g34
21:29:11  83  ,aud_g35
21:29:11  84  ,aud_g36
21:29:11  85  ,aud_g37
21:29:11  86  ,aud_g38
21:29:11  87  ,aud_g39
21:29:11  88  ,aud_g40
21:29:11  89  ,aud_g41
21:29:11  90  ,gbp_g00
21:29:11  91  ,gbp_g01
21:29:11  92  ,gbp_g02
21:29:11  93  ,gbp_g03
21:29:11  94  ,gbp_g04
21:29:11  95  ,gbp_g05
21:29:11  96  ,gbp_g06
21:29:11  97  ,gbp_g07
21:29:11  98  ,gbp_g08
21:29:11  99  ,gbp_g09
21:29:11 100  ,gbp_g10
21:29:11 101  ,gbp_g11
21:29:11 102  ,gbp_g12
21:29:11 103  ,gbp_g13
21:29:11 104  ,gbp_g14
21:29:11 105  ,gbp_g15
21:29:11 106  ,gbp_g16
21:29:11 107  ,gbp_g17
21:29:11 108  ,gbp_g18
21:29:11 109  ,gbp_g19
21:29:11 110  ,gbp_g20
21:29:11 111  ,gbp_g21
21:29:11 112  ,gbp_g22
21:29:11 113  ,gbp_g23
21:29:11 114  ,gbp_g24
21:29:11 115  ,gbp_g25
21:29:11 116  ,gbp_g26
21:29:11 117  ,gbp_g27
21:29:11 118  ,gbp_g28
21:29:11 119  ,gbp_g29
21:29:11 120  ,gbp_g30
21:29:11 121  ,gbp_g31
21:29:11 122  ,gbp_g32
21:29:11 123  ,gbp_g33
21:29:11 124  ,gbp_g34
21:29:11 125  ,gbp_g35
21:29:11 126  ,gbp_g36
21:29:11 127  ,gbp_g37
21:29:11 128  ,gbp_g38
21:29:11 129  ,gbp_g39
21:29:11 130  ,gbp_g40
21:29:11 131  ,gbp_g41
21:29:11 132  ,jpy_g00
21:29:11 133  ,jpy_g01
21:29:11 134  ,jpy_g02
21:29:11 135  ,jpy_g03
21:29:11 136  ,jpy_g04
21:29:11 137  ,jpy_g05
21:29:11 138  ,jpy_g06
21:29:11 139  ,jpy_g07
21:29:11 140  ,jpy_g08
21:29:11 141  ,jpy_g09
21:29:11 142  ,jpy_g10
21:29:11 143  ,jpy_g11
21:29:11 144  ,jpy_g12
21:29:11 145  ,jpy_g13
21:29:11 146  ,jpy_g14
21:29:11 147  ,jpy_g15
21:29:11 148  ,jpy_g16
21:29:11 149  ,jpy_g17
21:29:11 150  ,jpy_g18
21:29:11 151  ,jpy_g19
21:29:11 152  ,jpy_g20
21:29:11 153  ,jpy_g21
21:29:11 154  ,jpy_g22
21:29:11 155  ,jpy_g23
21:29:11 156  ,jpy_g24
21:29:11 157  ,jpy_g25
21:29:11 158  ,jpy_g26
21:29:11 159  ,jpy_g27
21:29:11 160  ,jpy_g28
21:29:11 161  ,jpy_g29
21:29:11 162  ,jpy_g30
21:29:11 163  ,jpy_g31
21:29:11 164  ,jpy_g32
21:29:11 165  ,jpy_g33
21:29:11 166  ,jpy_g34
21:29:11 167  ,jpy_g35
21:29:11 168  ,jpy_g36
21:29:11 169  ,jpy_g37
21:29:11 170  ,jpy_g38
21:29:11 171  ,jpy_g39
21:29:11 172  ,jpy_g40
21:29:11 173  ,jpy_g41
21:29:11 174  ,cad_g00
21:29:11 175  ,cad_g01
21:29:11 176  ,cad_g02
21:29:11 177  ,cad_g03
21:29:11 178  ,cad_g04
21:29:11 179  ,cad_g05
21:29:11 180  ,cad_g06
21:29:11 181  ,cad_g07
21:29:11 182  ,cad_g08
21:29:11 183  ,cad_g09
21:29:11 184  ,cad_g10
21:29:11 185  ,cad_g11
21:29:11 186  ,cad_g12
21:29:11 187  ,cad_g13
21:29:11 188  ,cad_g14
21:29:11 189  ,cad_g15
21:29:11 190  ,cad_g16
21:29:11 191  ,cad_g17
21:29:11 192  ,cad_g18
21:29:11 193  ,cad_g19
21:29:11 194  ,cad_g20
21:29:11 195  ,cad_g21
21:29:11 196  ,cad_g22
21:29:11 197  ,cad_g23
21:29:11 198  ,cad_g24
21:29:11 199  ,cad_g25
21:29:11 200  ,cad_g26
21:29:11 201  ,cad_g27
21:29:11 202  ,cad_g28
21:29:11 203  ,cad_g29
21:29:11 204  ,cad_g30
21:29:11 205  ,cad_g31
21:29:11 206  ,cad_g32
21:29:11 207  ,cad_g33
21:29:11 208  ,cad_g34
21:29:11 209  ,cad_g35
21:29:11 210  ,cad_g36
21:29:11 211  ,cad_g37
21:29:11 212  ,cad_g38
21:29:11 213  ,cad_g39
21:29:11 214  ,cad_g40
21:29:11 215  ,cad_g41
21:29:11 216  ,chf_g00
21:29:11 217  ,chf_g01
21:29:11 218  ,chf_g02
21:29:11 219  ,chf_g03
21:29:11 220  ,chf_g04
21:29:11 221  ,chf_g05
21:29:11 222  ,chf_g06
21:29:11 223  ,chf_g07
21:29:11 224  ,chf_g08
21:29:11 225  ,chf_g09
21:29:11 226  ,chf_g10
21:29:11 227  ,chf_g11
21:29:11 228  ,chf_g12
21:29:11 229  ,chf_g13
21:29:11 230  ,chf_g14
21:29:11 231  ,chf_g15
21:29:11 232  ,chf_g16
21:29:11 233  ,chf_g17
21:29:11 234  ,chf_g18
21:29:11 235  ,chf_g19
21:29:11 236  ,chf_g20
21:29:11 237  ,chf_g21
21:29:11 238  ,chf_g22
21:29:11 239  ,chf_g23
21:29:11 240  ,chf_g24
21:29:11 241  ,chf_g25
21:29:11 242  ,chf_g26
21:29:11 243  ,chf_g27
21:29:11 244  ,chf_g28
21:29:11 245  ,chf_g29
21:29:11 246  ,chf_g30
21:29:11 247  ,chf_g31
21:29:11 248  ,chf_g32
21:29:11 249  ,chf_g33
21:29:11 250  ,chf_g34
21:29:11 251  ,chf_g35
21:29:11 252  ,chf_g36
21:29:11 253  ,chf_g37
21:29:11 254  ,chf_g38
21:29:11 255  ,chf_g39
21:29:11 256  ,chf_g40
21:29:11 257  ,chf_g41
21:29:11 258  FROM aud_ms6 m
21:29:11 259  WHERE gatt IN('nup','up')
21:29:11 260  AND 1+m.ydate < '&1'||' '||'&2'
21:29:11 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'21:15:00'

View created.

Elapsed: 00:00:00.12
21:29:11 SQL> 
21:29:11 SQL> -- rpt
21:29:11 SQL> 
21:29:11 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
21:29:11   2  
21:29:11 SQL> SELECT MAX(prdate) FROM bme
21:29:11   2  
21:29:11 SQL> -- Now build model from bme and score sme
21:29:11 SQL> @score1.sql
21:29:11 SQL> -- score1.sql
21:29:11 SQL> 
21:29:11 SQL> -- Does the 1st SVM score
21:29:11 SQL> 
21:29:11 SQL> -- Fill up svmc_apply_prep
21:29:11 SQL> @score.sql
21:29:11 SQL> --
21:29:11 SQL> -- score.sql
21:29:11 SQL> --
21:29:11 SQL> 
21:29:11 SQL> -- usage: score.sql
21:29:11 SQL> 
21:29:11 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:29:11 SQL> 
21:29:11 SQL> DEFINE target	= 'gatt'
21:29:11 SQL> DEFINE model_name = 'forex14'
21:29:11 SQL> DEFINE bldtable	= 'bme'
21:29:11 SQL> DEFINE scoretable = 'sme'
21:29:11 SQL> DEFINE case_id	= 'prdate'
21:29:11 SQL> 
21:29:11 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:29:11 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:29:11 SQL> 
21:29:11 SQL> -- Builds an SVM model using pl/sql.
21:29:11 SQL> 
21:29:11 SQL> -----------------------------------------------------------------------
21:29:11 SQL> --			    BUILD THE MODEL
21:29:11 SQL> -----------------------------------------------------------------------
21:29:11 SQL> 
21:29:11 SQL> -- Cleanup old build data preparation objects for repeat runs
21:29:11 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
21:29:11 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:29:11 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
21:29:11 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
21:29:11 SQL> 
21:29:11 SQL> 
21:29:11 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:29:11 SQL> --
21:29:11 SQL> -- DROP	TABLE svmc_settings ;
21:29:11 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:29:11 SQL> -- DELETE svmc_settings;
21:29:11 SQL> 
21:29:11 SQL> -- The default classification algorithm is Naive Bayes. So override
21:29:11 SQL> -- this choice to SVM using a settings table.
21:29:11 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:29:11 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:29:11 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:29:11 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:29:11 SQL> -- models.
21:29:11 SQL> --
21:29:11 SQL> 
21:29:11 SQL> -- Do this once and then comment it out.
21:29:11 SQL> -- That makes script go faster.
21:29:11 SQL> -- BEGIN
21:29:11 SQL> -- -- Populate settings table
21:29:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:29:11 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:29:11 SQL> --
21:29:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:29:11 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:29:11 SQL> --
21:29:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:29:11 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:29:11 SQL> --   COMMIT;
21:29:11 SQL> -- END;
21:29:11 SQL> -- /
21:29:11 SQL> 
21:29:11 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:29:11 SQL> 
21:29:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:29:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:29:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:29:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:29:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:29:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:29:11 SQL> 
21:29:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:29:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:29:12 SQL> 
21:29:12 SQL> --------------------------------
21:29:12 SQL> -- PREPARE BUILD (TRAINING) DATA
21:29:12 SQL> --
21:29:12 SQL> 
21:29:12 SQL> -- 1. Missing Value treatment for all Predictors and
21:29:12 SQL> -- 2. Outlier Treatment and
21:29:12 SQL> -- 3. Normalization are performed below.
21:29:12 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:29:12 SQL> --    normalized here.
21:29:12 SQL> 
21:29:12 SQL> BEGIN
21:29:12   2  	-- Perform missing value treatment for all predictors
21:29:12   3  	-- create miss tables
21:29:12   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:29:12   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:29:12   6  
21:29:12   7  	-- populate miss tables
21:29:12   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:29:12   9  	  miss_table_name => 'svmc_miss_num',
21:29:12  10  	  data_table_name => '&bldtable',
21:29:12  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:29:12  12  
21:29:12  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:29:12  14  	  miss_table_name => 'svmc_miss_cat',
21:29:12  15  	  data_table_name => '&bldtable',
21:29:12  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:29:12  17  
21:29:12  18  	-- xform input data to replace missing values
21:29:12  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:29:12  20  	  miss_table_name => 'svmc_miss_num',
21:29:12  21  	  data_table_name => '&bldtable',
21:29:12  22  	  xform_view_name => 'xformed_build_miss_num');
21:29:12  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:29:12  24  	  miss_table_name => 'svmc_miss_cat',
21:29:12  25  	  data_table_name => '&bldtable',
21:29:12  26  	  xform_view_name => 'xformed_build_miss_cat');
21:29:12  27  
21:29:12  28  	-- Perform outlier treatment.
21:29:12  29  	-- create clip table
21:29:12  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:29:12  31  
21:29:12  32  	-- populate clip table
21:29:12  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:29:12  34  	  clip_table_name => 'svmc_clip',
21:29:12  35  	  data_table_name => '&bldtable',
21:29:12  36  	  tail_frac	  => 0.025,
21:29:12  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:29:12  38  
21:29:12  39  	-- xform input data to winsorized data
21:29:12  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:29:12  41  	  clip_table_name => 'svmc_clip',
21:29:12  42  	  data_table_name => '&bldtable',
21:29:12  43  	  xform_view_name => 'svmc_winsor');
21:29:12  44  
21:29:12  45  	-- create normalization table
21:29:12  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:29:12  47  
21:29:12  48  	-- populate normalization table based on winsorized data
21:29:12  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:29:12  50  	  norm_table_name => 'svmc_norm',
21:29:12  51  	  data_table_name => 'svmc_winsor',
21:29:12  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:29:12  53  
21:29:12  54  	-- normalize the original data
21:29:12  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:29:12  56  	  norm_table_name => 'svmc_norm',
21:29:12  57  	  data_table_name => '&bldtable',
21:29:12  58  	  xform_view_name => 'svmc_build_prep');
21:29:12  59  END;
21:29:12  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.94
21:29:30 SQL> 
21:29:30 SQL> ---------------------
21:29:30 SQL> -- CREATE A NEW MODEL
21:29:30 SQL> --
21:29:30 SQL> -- Cleanup old model with the same name for repeat runs
21:29:30 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:29:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:30   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.93
21:29:30 SQL> 
21:29:30 SQL> -- Build a new SVM Model
21:29:30 SQL> BEGIN
21:29:30   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:29:30   3  	  model_name	      => '&model_name',
21:29:30   4  	  mining_function     => dbms_data_mining.classification,
21:29:30   5  	  data_table_name     => 'svmc_build_prep',
21:29:30   6  	  case_id_column_name => '&case_id',
21:29:30   7  	  target_column_name  => '&target',
21:29:30   8  	  settings_table_name => 'svmc_settings');
21:29:30   9  END;
21:29:30  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.27
21:29:58 SQL> 
21:29:58 SQL> -----------------------------------------------------------------------
21:29:58 SQL> --			       APPLY/score THE MODEL
21:29:58 SQL> -----------------------------------------------------------------------
21:29:58 SQL> 
21:29:58 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:29:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:29:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:29:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:29:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
21:29:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:29:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:29:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:29:58 SQL> -----------------------
21:29:58 SQL> -- PREPARE SCORING DATA
21:29:58 SQL> --
21:29:58 SQL> -- If the data for model creation has been prepared, then the data
21:29:58 SQL> -- to be scored using the model must be prepared in the same manner
21:29:58 SQL> -- in order to obtain meaningful results.
21:29:58 SQL> --
21:29:58 SQL> -- 1. Missing Value treatment for all Predictors and
21:29:58 SQL> -- 2. Normalization
21:29:58 SQL> -- No outlier treatment will be performed during test and apply. The
21:29:58 SQL> -- normalization step is sufficient, since the normalization parameters
21:29:58 SQL> -- already capture the effects of outlier treatment done with build data.
21:29:58 SQL> --
21:29:58 SQL> BEGIN
21:29:58   2  	-- Xform Test data to replace missing values
21:29:58   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:29:58   4  	  miss_table_name => 'svmc_miss_num',
21:29:58   5  	  data_table_name => '&scoretable',
21:29:58   6  	  xform_view_name => 'xformed_apply_miss_num');
21:29:58   7  
21:29:58   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:29:58   9  	  miss_table_name => 'svmc_miss_cat',
21:29:58  10  	  data_table_name => '&scoretable',
21:29:58  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:29:58  12  
21:29:58  13  	-- Normalize the data to be scored
21:29:58  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:29:58  15  	  norm_table_name => 'svmc_norm',
21:29:58  16  	  data_table_name => '&scoretable',
21:29:58  17  	  xform_view_name => 'svmc_apply_prep');
21:29:58  18  END;
21:29:58  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
21:29:59 SQL> 
21:29:59 SQL> -- Use same model_name used in score.sql
21:29:59 SQL> DEFINE model_name = 'forex14'
21:29:59 SQL> 
21:29:59 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
21:29:59 SQL> 
21:29:59 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:29:59 SQL> 
21:29:59 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
21:29:59   2  SELECT
21:29:59   3  prdate
21:29:59   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:29:59   5  ,sysdate
21:29:59   6  ,SUBSTR(prdate,1,3)pair
21:29:59   7  ,SUBSTR(prdate,4,19)ydate
21:29:59   8  FROM svmc_apply_prep
21:29:59   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:29:59 SQL> @aud_score1day_gattn.sql	2010-12-29 21:05:00
21:29:59 SQL> --
21:29:59 SQL> -- aud_score1day_gattn.sql
21:29:59 SQL> --
21:29:59 SQL> 
21:29:59 SQL> CREATE OR REPLACE VIEW sme AS
21:29:59   2  SELECT
21:29:59   3  'aud'||m.ydate prdate
21:29:59   4  ,NULL gattn
21:29:59   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:29:59   6  ,eur_g00
21:29:59   7  ,eur_g01
21:29:59   8  ,eur_g02
21:29:59   9  ,eur_g03
21:29:59  10  ,eur_g04
21:29:59  11  ,eur_g05
21:29:59  12  ,eur_g06
21:29:59  13  ,eur_g07
21:29:59  14  ,eur_g08
21:29:59  15  ,eur_g09
21:29:59  16  ,eur_g10
21:29:59  17  ,eur_g11
21:29:59  18  ,eur_g12
21:29:59  19  ,eur_g13
21:29:59  20  ,eur_g14
21:29:59  21  ,eur_g15
21:29:59  22  ,eur_g16
21:29:59  23  ,eur_g17
21:29:59  24  ,eur_g18
21:29:59  25  ,eur_g19
21:29:59  26  ,eur_g20
21:29:59  27  ,eur_g21
21:29:59  28  ,eur_g22
21:29:59  29  ,eur_g23
21:29:59  30  ,eur_g24
21:29:59  31  ,eur_g25
21:29:59  32  ,eur_g26
21:29:59  33  ,eur_g27
21:29:59  34  ,eur_g28
21:29:59  35  ,eur_g29
21:29:59  36  ,eur_g30
21:29:59  37  ,eur_g31
21:29:59  38  ,eur_g32
21:29:59  39  ,eur_g33
21:29:59  40  ,eur_g34
21:29:59  41  ,eur_g35
21:29:59  42  ,eur_g36
21:29:59  43  ,eur_g37
21:29:59  44  ,eur_g38
21:29:59  45  ,eur_g39
21:29:59  46  ,eur_g40
21:29:59  47  ,eur_g41
21:29:59  48  ,aud_g00
21:29:59  49  ,aud_g01
21:29:59  50  ,aud_g02
21:29:59  51  ,aud_g03
21:29:59  52  ,aud_g04
21:29:59  53  ,aud_g05
21:29:59  54  ,aud_g06
21:29:59  55  ,aud_g07
21:29:59  56  ,aud_g08
21:29:59  57  ,aud_g09
21:29:59  58  ,aud_g10
21:29:59  59  ,aud_g11
21:29:59  60  ,aud_g12
21:29:59  61  ,aud_g13
21:29:59  62  ,aud_g14
21:29:59  63  ,aud_g15
21:29:59  64  ,aud_g16
21:29:59  65  ,aud_g17
21:29:59  66  ,aud_g18
21:29:59  67  ,aud_g19
21:29:59  68  ,aud_g20
21:29:59  69  ,aud_g21
21:29:59  70  ,aud_g22
21:29:59  71  ,aud_g23
21:29:59  72  ,aud_g24
21:29:59  73  ,aud_g25
21:29:59  74  ,aud_g26
21:29:59  75  ,aud_g27
21:29:59  76  ,aud_g28
21:29:59  77  ,aud_g29
21:29:59  78  ,aud_g30
21:29:59  79  ,aud_g31
21:29:59  80  ,aud_g32
21:29:59  81  ,aud_g33
21:29:59  82  ,aud_g34
21:29:59  83  ,aud_g35
21:29:59  84  ,aud_g36
21:29:59  85  ,aud_g37
21:29:59  86  ,aud_g38
21:29:59  87  ,aud_g39
21:29:59  88  ,aud_g40
21:29:59  89  ,aud_g41
21:29:59  90  ,gbp_g00
21:29:59  91  ,gbp_g01
21:29:59  92  ,gbp_g02
21:29:59  93  ,gbp_g03
21:29:59  94  ,gbp_g04
21:29:59  95  ,gbp_g05
21:29:59  96  ,gbp_g06
21:29:59  97  ,gbp_g07
21:29:59  98  ,gbp_g08
21:29:59  99  ,gbp_g09
21:29:59 100  ,gbp_g10
21:29:59 101  ,gbp_g11
21:29:59 102  ,gbp_g12
21:29:59 103  ,gbp_g13
21:29:59 104  ,gbp_g14
21:29:59 105  ,gbp_g15
21:29:59 106  ,gbp_g16
21:29:59 107  ,gbp_g17
21:29:59 108  ,gbp_g18
21:29:59 109  ,gbp_g19
21:29:59 110  ,gbp_g20
21:29:59 111  ,gbp_g21
21:29:59 112  ,gbp_g22
21:29:59 113  ,gbp_g23
21:29:59 114  ,gbp_g24
21:29:59 115  ,gbp_g25
21:29:59 116  ,gbp_g26
21:29:59 117  ,gbp_g27
21:29:59 118  ,gbp_g28
21:29:59 119  ,gbp_g29
21:29:59 120  ,gbp_g30
21:29:59 121  ,gbp_g31
21:29:59 122  ,gbp_g32
21:29:59 123  ,gbp_g33
21:29:59 124  ,gbp_g34
21:29:59 125  ,gbp_g35
21:29:59 126  ,gbp_g36
21:29:59 127  ,gbp_g37
21:29:59 128  ,gbp_g38
21:29:59 129  ,gbp_g39
21:29:59 130  ,gbp_g40
21:29:59 131  ,gbp_g41
21:29:59 132  ,jpy_g00
21:29:59 133  ,jpy_g01
21:29:59 134  ,jpy_g02
21:29:59 135  ,jpy_g03
21:29:59 136  ,jpy_g04
21:29:59 137  ,jpy_g05
21:29:59 138  ,jpy_g06
21:29:59 139  ,jpy_g07
21:29:59 140  ,jpy_g08
21:29:59 141  ,jpy_g09
21:29:59 142  ,jpy_g10
21:29:59 143  ,jpy_g11
21:29:59 144  ,jpy_g12
21:29:59 145  ,jpy_g13
21:29:59 146  ,jpy_g14
21:29:59 147  ,jpy_g15
21:29:59 148  ,jpy_g16
21:29:59 149  ,jpy_g17
21:29:59 150  ,jpy_g18
21:29:59 151  ,jpy_g19
21:29:59 152  ,jpy_g20
21:29:59 153  ,jpy_g21
21:29:59 154  ,jpy_g22
21:29:59 155  ,jpy_g23
21:29:59 156  ,jpy_g24
21:29:59 157  ,jpy_g25
21:29:59 158  ,jpy_g26
21:29:59 159  ,jpy_g27
21:29:59 160  ,jpy_g28
21:29:59 161  ,jpy_g29
21:29:59 162  ,jpy_g30
21:29:59 163  ,jpy_g31
21:29:59 164  ,jpy_g32
21:29:59 165  ,jpy_g33
21:29:59 166  ,jpy_g34
21:29:59 167  ,jpy_g35
21:29:59 168  ,jpy_g36
21:29:59 169  ,jpy_g37
21:29:59 170  ,jpy_g38
21:29:59 171  ,jpy_g39
21:29:59 172  ,jpy_g40
21:29:59 173  ,jpy_g41
21:29:59 174  ,cad_g00
21:29:59 175  ,cad_g01
21:29:59 176  ,cad_g02
21:29:59 177  ,cad_g03
21:29:59 178  ,cad_g04
21:29:59 179  ,cad_g05
21:29:59 180  ,cad_g06
21:29:59 181  ,cad_g07
21:29:59 182  ,cad_g08
21:29:59 183  ,cad_g09
21:29:59 184  ,cad_g10
21:29:59 185  ,cad_g11
21:29:59 186  ,cad_g12
21:29:59 187  ,cad_g13
21:29:59 188  ,cad_g14
21:29:59 189  ,cad_g15
21:29:59 190  ,cad_g16
21:29:59 191  ,cad_g17
21:29:59 192  ,cad_g18
21:29:59 193  ,cad_g19
21:29:59 194  ,cad_g20
21:29:59 195  ,cad_g21
21:29:59 196  ,cad_g22
21:29:59 197  ,cad_g23
21:29:59 198  ,cad_g24
21:29:59 199  ,cad_g25
21:29:59 200  ,cad_g26
21:29:59 201  ,cad_g27
21:29:59 202  ,cad_g28
21:29:59 203  ,cad_g29
21:29:59 204  ,cad_g30
21:29:59 205  ,cad_g31
21:29:59 206  ,cad_g32
21:29:59 207  ,cad_g33
21:29:59 208  ,cad_g34
21:29:59 209  ,cad_g35
21:29:59 210  ,cad_g36
21:29:59 211  ,cad_g37
21:29:59 212  ,cad_g38
21:29:59 213  ,cad_g39
21:29:59 214  ,cad_g40
21:29:59 215  ,cad_g41
21:29:59 216  ,chf_g00
21:29:59 217  ,chf_g01
21:29:59 218  ,chf_g02
21:29:59 219  ,chf_g03
21:29:59 220  ,chf_g04
21:29:59 221  ,chf_g05
21:29:59 222  ,chf_g06
21:29:59 223  ,chf_g07
21:29:59 224  ,chf_g08
21:29:59 225  ,chf_g09
21:29:59 226  ,chf_g10
21:29:59 227  ,chf_g11
21:29:59 228  ,chf_g12
21:29:59 229  ,chf_g13
21:29:59 230  ,chf_g14
21:29:59 231  ,chf_g15
21:29:59 232  ,chf_g16
21:29:59 233  ,chf_g17
21:29:59 234  ,chf_g18
21:29:59 235  ,chf_g19
21:29:59 236  ,chf_g20
21:29:59 237  ,chf_g21
21:29:59 238  ,chf_g22
21:29:59 239  ,chf_g23
21:29:59 240  ,chf_g24
21:29:59 241  ,chf_g25
21:29:59 242  ,chf_g26
21:29:59 243  ,chf_g27
21:29:59 244  ,chf_g28
21:29:59 245  ,chf_g29
21:29:59 246  ,chf_g30
21:29:59 247  ,chf_g31
21:29:59 248  ,chf_g32
21:29:59 249  ,chf_g33
21:29:59 250  ,chf_g34
21:29:59 251  ,chf_g35
21:29:59 252  ,chf_g36
21:29:59 253  ,chf_g37
21:29:59 254  ,chf_g38
21:29:59 255  ,chf_g39
21:29:59 256  ,chf_g40
21:29:59 257  ,chf_g41
21:29:59 258  FROM aud_ms6 m
21:29:59 259  WHERE m.ydate = '&1'||' '||'&2'
21:29:59 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'21:05:00'

View created.

Elapsed: 00:00:00.13
21:30:00 SQL> 
21:30:00 SQL> -- rpt
21:30:00 SQL> -- We should see just 1 row:
21:30:00 SQL> 
21:30:00 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
21:30:00 SQL> 
21:30:00 SQL> -- Build the model:
21:30:00 SQL> CREATE OR REPLACE VIEW bme AS
21:30:00   2  SELECT
21:30:00   3  'aud'||m.ydate prdate
21:30:00   4  ,gattn
21:30:00   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:30:00   6  ,eur_g00
21:30:00   7  ,eur_g01
21:30:00   8  ,eur_g02
21:30:00   9  ,eur_g03
21:30:00  10  ,eur_g04
21:30:00  11  ,eur_g05
21:30:00  12  ,eur_g06
21:30:00  13  ,eur_g07
21:30:00  14  ,eur_g08
21:30:00  15  ,eur_g09
21:30:00  16  ,eur_g10
21:30:00  17  ,eur_g11
21:30:00  18  ,eur_g12
21:30:00  19  ,eur_g13
21:30:00  20  ,eur_g14
21:30:00  21  ,eur_g15
21:30:00  22  ,eur_g16
21:30:00  23  ,eur_g17
21:30:00  24  ,eur_g18
21:30:00  25  ,eur_g19
21:30:00  26  ,eur_g20
21:30:00  27  ,eur_g21
21:30:00  28  ,eur_g22
21:30:00  29  ,eur_g23
21:30:00  30  ,eur_g24
21:30:00  31  ,eur_g25
21:30:00  32  ,eur_g26
21:30:00  33  ,eur_g27
21:30:00  34  ,eur_g28
21:30:00  35  ,eur_g29
21:30:00  36  ,eur_g30
21:30:00  37  ,eur_g31
21:30:00  38  ,eur_g32
21:30:00  39  ,eur_g33
21:30:00  40  ,eur_g34
21:30:00  41  ,eur_g35
21:30:00  42  ,eur_g36
21:30:00  43  ,eur_g37
21:30:00  44  ,eur_g38
21:30:00  45  ,eur_g39
21:30:00  46  ,eur_g40
21:30:00  47  ,eur_g41
21:30:00  48  ,aud_g00
21:30:00  49  ,aud_g01
21:30:00  50  ,aud_g02
21:30:00  51  ,aud_g03
21:30:00  52  ,aud_g04
21:30:00  53  ,aud_g05
21:30:00  54  ,aud_g06
21:30:00  55  ,aud_g07
21:30:00  56  ,aud_g08
21:30:00  57  ,aud_g09
21:30:00  58  ,aud_g10
21:30:00  59  ,aud_g11
21:30:00  60  ,aud_g12
21:30:00  61  ,aud_g13
21:30:00  62  ,aud_g14
21:30:00  63  ,aud_g15
21:30:00  64  ,aud_g16
21:30:00  65  ,aud_g17
21:30:00  66  ,aud_g18
21:30:00  67  ,aud_g19
21:30:00  68  ,aud_g20
21:30:00  69  ,aud_g21
21:30:00  70  ,aud_g22
21:30:00  71  ,aud_g23
21:30:00  72  ,aud_g24
21:30:00  73  ,aud_g25
21:30:00  74  ,aud_g26
21:30:00  75  ,aud_g27
21:30:00  76  ,aud_g28
21:30:00  77  ,aud_g29
21:30:00  78  ,aud_g30
21:30:00  79  ,aud_g31
21:30:00  80  ,aud_g32
21:30:00  81  ,aud_g33
21:30:00  82  ,aud_g34
21:30:00  83  ,aud_g35
21:30:00  84  ,aud_g36
21:30:00  85  ,aud_g37
21:30:00  86  ,aud_g38
21:30:00  87  ,aud_g39
21:30:00  88  ,aud_g40
21:30:00  89  ,aud_g41
21:30:00  90  ,gbp_g00
21:30:00  91  ,gbp_g01
21:30:00  92  ,gbp_g02
21:30:00  93  ,gbp_g03
21:30:00  94  ,gbp_g04
21:30:00  95  ,gbp_g05
21:30:00  96  ,gbp_g06
21:30:00  97  ,gbp_g07
21:30:00  98  ,gbp_g08
21:30:00  99  ,gbp_g09
21:30:00 100  ,gbp_g10
21:30:00 101  ,gbp_g11
21:30:00 102  ,gbp_g12
21:30:00 103  ,gbp_g13
21:30:00 104  ,gbp_g14
21:30:00 105  ,gbp_g15
21:30:00 106  ,gbp_g16
21:30:00 107  ,gbp_g17
21:30:00 108  ,gbp_g18
21:30:00 109  ,gbp_g19
21:30:00 110  ,gbp_g20
21:30:00 111  ,gbp_g21
21:30:00 112  ,gbp_g22
21:30:00 113  ,gbp_g23
21:30:00 114  ,gbp_g24
21:30:00 115  ,gbp_g25
21:30:00 116  ,gbp_g26
21:30:00 117  ,gbp_g27
21:30:00 118  ,gbp_g28
21:30:00 119  ,gbp_g29
21:30:00 120  ,gbp_g30
21:30:00 121  ,gbp_g31
21:30:00 122  ,gbp_g32
21:30:00 123  ,gbp_g33
21:30:00 124  ,gbp_g34
21:30:00 125  ,gbp_g35
21:30:00 126  ,gbp_g36
21:30:00 127  ,gbp_g37
21:30:00 128  ,gbp_g38
21:30:00 129  ,gbp_g39
21:30:00 130  ,gbp_g40
21:30:00 131  ,gbp_g41
21:30:00 132  ,jpy_g00
21:30:00 133  ,jpy_g01
21:30:00 134  ,jpy_g02
21:30:00 135  ,jpy_g03
21:30:00 136  ,jpy_g04
21:30:00 137  ,jpy_g05
21:30:00 138  ,jpy_g06
21:30:00 139  ,jpy_g07
21:30:00 140  ,jpy_g08
21:30:00 141  ,jpy_g09
21:30:00 142  ,jpy_g10
21:30:00 143  ,jpy_g11
21:30:00 144  ,jpy_g12
21:30:00 145  ,jpy_g13
21:30:00 146  ,jpy_g14
21:30:00 147  ,jpy_g15
21:30:00 148  ,jpy_g16
21:30:00 149  ,jpy_g17
21:30:00 150  ,jpy_g18
21:30:00 151  ,jpy_g19
21:30:00 152  ,jpy_g20
21:30:00 153  ,jpy_g21
21:30:00 154  ,jpy_g22
21:30:00 155  ,jpy_g23
21:30:00 156  ,jpy_g24
21:30:00 157  ,jpy_g25
21:30:00 158  ,jpy_g26
21:30:00 159  ,jpy_g27
21:30:00 160  ,jpy_g28
21:30:00 161  ,jpy_g29
21:30:00 162  ,jpy_g30
21:30:00 163  ,jpy_g31
21:30:00 164  ,jpy_g32
21:30:00 165  ,jpy_g33
21:30:00 166  ,jpy_g34
21:30:00 167  ,jpy_g35
21:30:00 168  ,jpy_g36
21:30:00 169  ,jpy_g37
21:30:00 170  ,jpy_g38
21:30:00 171  ,jpy_g39
21:30:00 172  ,jpy_g40
21:30:00 173  ,jpy_g41
21:30:00 174  ,cad_g00
21:30:00 175  ,cad_g01
21:30:00 176  ,cad_g02
21:30:00 177  ,cad_g03
21:30:00 178  ,cad_g04
21:30:00 179  ,cad_g05
21:30:00 180  ,cad_g06
21:30:00 181  ,cad_g07
21:30:00 182  ,cad_g08
21:30:00 183  ,cad_g09
21:30:00 184  ,cad_g10
21:30:00 185  ,cad_g11
21:30:00 186  ,cad_g12
21:30:00 187  ,cad_g13
21:30:00 188  ,cad_g14
21:30:00 189  ,cad_g15
21:30:00 190  ,cad_g16
21:30:00 191  ,cad_g17
21:30:00 192  ,cad_g18
21:30:00 193  ,cad_g19
21:30:00 194  ,cad_g20
21:30:00 195  ,cad_g21
21:30:00 196  ,cad_g22
21:30:00 197  ,cad_g23
21:30:00 198  ,cad_g24
21:30:00 199  ,cad_g25
21:30:00 200  ,cad_g26
21:30:00 201  ,cad_g27
21:30:00 202  ,cad_g28
21:30:00 203  ,cad_g29
21:30:00 204  ,cad_g30
21:30:00 205  ,cad_g31
21:30:00 206  ,cad_g32
21:30:00 207  ,cad_g33
21:30:00 208  ,cad_g34
21:30:00 209  ,cad_g35
21:30:00 210  ,cad_g36
21:30:00 211  ,cad_g37
21:30:00 212  ,cad_g38
21:30:00 213  ,cad_g39
21:30:00 214  ,cad_g40
21:30:00 215  ,cad_g41
21:30:00 216  ,chf_g00
21:30:00 217  ,chf_g01
21:30:00 218  ,chf_g02
21:30:00 219  ,chf_g03
21:30:00 220  ,chf_g04
21:30:00 221  ,chf_g05
21:30:00 222  ,chf_g06
21:30:00 223  ,chf_g07
21:30:00 224  ,chf_g08
21:30:00 225  ,chf_g09
21:30:00 226  ,chf_g10
21:30:00 227  ,chf_g11
21:30:00 228  ,chf_g12
21:30:00 229  ,chf_g13
21:30:00 230  ,chf_g14
21:30:00 231  ,chf_g15
21:30:00 232  ,chf_g16
21:30:00 233  ,chf_g17
21:30:00 234  ,chf_g18
21:30:00 235  ,chf_g19
21:30:00 236  ,chf_g20
21:30:00 237  ,chf_g21
21:30:00 238  ,chf_g22
21:30:00 239  ,chf_g23
21:30:00 240  ,chf_g24
21:30:00 241  ,chf_g25
21:30:00 242  ,chf_g26
21:30:00 243  ,chf_g27
21:30:00 244  ,chf_g28
21:30:00 245  ,chf_g29
21:30:00 246  ,chf_g30
21:30:00 247  ,chf_g31
21:30:00 248  ,chf_g32
21:30:00 249  ,chf_g33
21:30:00 250  ,chf_g34
21:30:00 251  ,chf_g35
21:30:00 252  ,chf_g36
21:30:00 253  ,chf_g37
21:30:00 254  ,chf_g38
21:30:00 255  ,chf_g39
21:30:00 256  ,chf_g40
21:30:00 257  ,chf_g41
21:30:00 258  FROM aud_ms6 m
21:30:00 259  WHERE gattn IN('nup','up')
21:30:00 260  AND 1+m.ydate < '&1'||' '||'&2'
21:30:00 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'21:05:00'

View created.

Elapsed: 00:00:00.12
21:30:00 SQL> 
21:30:00 SQL> -- rpt
21:30:00 SQL> 
21:30:00 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12866
up	     6397

Elapsed: 00:00:00.04
21:30:00 SQL> 
21:30:00 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-28 21:00:00

Elapsed: 00:00:00.03
21:30:00 SQL> 
21:30:00 SQL> -- Now build model from bme and score sme
21:30:00 SQL> @score1gattn.sql
21:30:00 SQL> -- score1gattn.sql
21:30:00 SQL> 
21:30:00 SQL> -- Does the 1st SVM score
21:30:00 SQL> 
21:30:00 SQL> -- Fill up svmc_apply_prep
21:30:00 SQL> @score_gattn.sql
21:30:00 SQL> --
21:30:00 SQL> -- score_gattn.sql
21:30:00 SQL> --
21:30:00 SQL> 
21:30:00 SQL> -- usage: score_gattn.sql
21:30:00 SQL> 
21:30:00 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:30:00 SQL> 
21:30:00 SQL> DEFINE target	= 'gattn'
21:30:00 SQL> DEFINE model_name = 'forex14'
21:30:00 SQL> DEFINE bldtable	= 'bme'
21:30:00 SQL> DEFINE scoretable = 'sme'
21:30:00 SQL> DEFINE case_id	= 'prdate'
21:30:00 SQL> 
21:30:00 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:30:00 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:30:00 SQL> 
21:30:00 SQL> -- Builds an SVM model using pl/sql.
21:30:00 SQL> 
21:30:00 SQL> -----------------------------------------------------------------------
21:30:00 SQL> --			    BUILD THE MODEL
21:30:00 SQL> -----------------------------------------------------------------------
21:30:00 SQL> 
21:30:00 SQL> -- Cleanup old build data preparation objects for repeat runs
21:30:00 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
21:30:00 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:30:00 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
21:30:00 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
21:30:00 SQL> 
21:30:00 SQL> 
21:30:00 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:30:00 SQL> --
21:30:00 SQL> -- DROP	TABLE svmc_settings ;
21:30:00 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:30:00 SQL> -- DELETE svmc_settings;
21:30:00 SQL> 
21:30:00 SQL> -- The default classification algorithm is Naive Bayes. So override
21:30:00 SQL> -- this choice to SVM using a settings table.
21:30:00 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:30:00 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:30:00 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:30:00 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:30:00 SQL> -- models.
21:30:00 SQL> --
21:30:00 SQL> 
21:30:00 SQL> -- Do this once and then comment it out.
21:30:00 SQL> -- That makes script go faster.
21:30:00 SQL> -- BEGIN
21:30:00 SQL> -- -- Populate settings table
21:30:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:30:00 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:30:00 SQL> --
21:30:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:30:00 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:30:00 SQL> --
21:30:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:30:00 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:30:00 SQL> --   COMMIT;
21:30:00 SQL> -- END;
21:30:00 SQL> -- /
21:30:00 SQL> 
21:30:00 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:30:00 SQL> 
21:30:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:30:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:30:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:30:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:30:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:30:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
21:30:00 SQL> 
21:30:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:30:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:30:00 SQL> 
21:30:00 SQL> --------------------------------
21:30:00 SQL> -- PREPARE BUILD (TRAINING) DATA
21:30:00 SQL> --
21:30:00 SQL> 
21:30:00 SQL> -- 1. Missing Value treatment for all Predictors and
21:30:00 SQL> -- 2. Outlier Treatment and
21:30:00 SQL> -- 3. Normalization are performed below.
21:30:00 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:30:00 SQL> --    normalized here.
21:30:00 SQL> 
21:30:00 SQL> BEGIN
21:30:00   2  	-- Perform missing value treatment for all predictors
21:30:00   3  	-- create miss tables
21:30:00   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:30:00   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:30:00   6  
21:30:00   7  	-- populate miss tables
21:30:00   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:30:00   9  	  miss_table_name => 'svmc_miss_num',
21:30:00  10  	  data_table_name => '&bldtable',
21:30:00  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:30:00  12  
21:30:00  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:30:00  14  	  miss_table_name => 'svmc_miss_cat',
21:30:00  15  	  data_table_name => '&bldtable',
21:30:00  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:30:00  17  
21:30:00  18  	-- xform input data to replace missing values
21:30:00  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:30:00  20  	  miss_table_name => 'svmc_miss_num',
21:30:00  21  	  data_table_name => '&bldtable',
21:30:00  22  	  xform_view_name => 'xformed_build_miss_num');
21:30:00  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:30:00  24  	  miss_table_name => 'svmc_miss_cat',
21:30:00  25  	  data_table_name => '&bldtable',
21:30:00  26  	  xform_view_name => 'xformed_build_miss_cat');
21:30:00  27  
21:30:00  28  	-- Perform outlier treatment.
21:30:00  29  	-- create clip table
21:30:00  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:30:00  31  
21:30:00  32  	-- populate clip table
21:30:00  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:30:00  34  	  clip_table_name => 'svmc_clip',
21:30:00  35  	  data_table_name => '&bldtable',
21:30:00  36  	  tail_frac	  => 0.025,
21:30:00  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:30:00  38  
21:30:00  39  	-- xform input data to winsorized data
21:30:00  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:30:00  41  	  clip_table_name => 'svmc_clip',
21:30:00  42  	  data_table_name => '&bldtable',
21:30:00  43  	  xform_view_name => 'svmc_winsor');
21:30:00  44  
21:30:00  45  	-- create normalization table
21:30:00  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:30:00  47  
21:30:00  48  	-- populate normalization table based on winsorized data
21:30:00  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:30:00  50  	  norm_table_name => 'svmc_norm',
21:30:00  51  	  data_table_name => 'svmc_winsor',
21:30:00  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:30:00  53  
21:30:00  54  	-- normalize the original data
21:30:00  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:30:00  56  	  norm_table_name => 'svmc_norm',
21:30:00  57  	  data_table_name => '&bldtable',
21:30:00  58  	  xform_view_name => 'svmc_build_prep');
21:30:00  59  END;
21:30:00  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.91
21:30:18 SQL> 
21:30:18 SQL> ---------------------
21:30:18 SQL> -- CREATE A NEW MODEL
21:30:18 SQL> --
21:30:18 SQL> -- Cleanup old model with the same name for repeat runs
21:30:18 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:30:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:18   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.06
21:30:19 SQL> 
21:30:19 SQL> -- Build a new SVM Model
21:30:19 SQL> BEGIN
21:30:19   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:30:19   3  	  model_name	      => '&model_name',
21:30:19   4  	  mining_function     => dbms_data_mining.classification,
21:30:19   5  	  data_table_name     => 'svmc_build_prep',
21:30:19   6  	  case_id_column_name => '&case_id',
21:30:19   7  	  target_column_name  => '&target',
21:30:19   8  	  settings_table_name => 'svmc_settings');
21:30:19   9  END;
21:30:19  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.89
21:30:47 SQL> 
21:30:47 SQL> -----------------------------------------------------------------------
21:30:47 SQL> --			       APPLY/score THE MODEL
21:30:47 SQL> -----------------------------------------------------------------------
21:30:47 SQL> 
21:30:47 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:30:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:30:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:30:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:30:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:30:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:30:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:30:47 SQL> -----------------------
21:30:47 SQL> -- PREPARE SCORING DATA
21:30:47 SQL> --
21:30:47 SQL> -- If the data for model creation has been prepared, then the data
21:30:47 SQL> -- to be scored using the model must be prepared in the same manner
21:30:47 SQL> -- in order to obtain meaningful results.
21:30:47 SQL> --
21:30:47 SQL> -- 1. Missing Value treatment for all Predictors and
21:30:47 SQL> -- 2. Normalization
21:30:47 SQL> -- No outlier treatment will be performed during test and apply. The
21:30:47 SQL> -- normalization step is sufficient, since the normalization parameters
21:30:47 SQL> -- already capture the effects of outlier treatment done with build data.
21:30:47 SQL> --
21:30:47 SQL> BEGIN
21:30:47   2  	-- Xform Test data to replace missing values
21:30:47   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:30:47   4  	  miss_table_name => 'svmc_miss_num',
21:30:47   5  	  data_table_name => '&scoretable',
21:30:47   6  	  xform_view_name => 'xformed_apply_miss_num');
21:30:47   7  
21:30:47   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:30:47   9  	  miss_table_name => 'svmc_miss_cat',
21:30:47  10  	  data_table_name => '&scoretable',
21:30:47  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:30:47  12  
21:30:47  13  	-- Normalize the data to be scored
21:30:47  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:30:47  15  	  norm_table_name => 'svmc_norm',
21:30:47  16  	  data_table_name => '&scoretable',
21:30:47  17  	  xform_view_name => 'svmc_apply_prep');
21:30:47  18  END;
21:30:47  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.33
21:30:48 SQL> 
21:30:48 SQL> -- Use same model_name used in score_gattn.sql
21:30:48 SQL> DEFINE model_name = 'forex14'
21:30:48 SQL> 
21:30:48 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
21:30:48 SQL> 
21:30:48 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
21:30:48   2  SELECT
21:30:48   3  prdate
21:30:48   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:30:48   5  ,sysdate
21:30:48   6  ,SUBSTR(prdate,1,3)pair
21:30:48   7  ,SUBSTR(prdate,4,19)ydate
21:30:48   8  FROM svmc_apply_prep
21:30:48   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:30:49 SQL> @aud_score1day_gattn.sql	2010-12-29 21:10:00
21:30:49 SQL> --
21:30:49 SQL> -- aud_score1day_gattn.sql
21:30:49 SQL> --
21:30:49 SQL> 
21:30:49 SQL> CREATE OR REPLACE VIEW sme AS
21:30:49   2  SELECT
21:30:49   3  'aud'||m.ydate prdate
21:30:49   4  ,NULL gattn
21:30:49   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:30:49   6  ,eur_g00
21:30:49   7  ,eur_g01
21:30:49   8  ,eur_g02
21:30:49   9  ,eur_g03
21:30:49  10  ,eur_g04
21:30:49  11  ,eur_g05
21:30:49  12  ,eur_g06
21:30:49  13  ,eur_g07
21:30:49  14  ,eur_g08
21:30:49  15  ,eur_g09
21:30:49  16  ,eur_g10
21:30:49  17  ,eur_g11
21:30:49  18  ,eur_g12
21:30:49  19  ,eur_g13
21:30:49  20  ,eur_g14
21:30:49  21  ,eur_g15
21:30:49  22  ,eur_g16
21:30:49  23  ,eur_g17
21:30:49  24  ,eur_g18
21:30:49  25  ,eur_g19
21:30:49  26  ,eur_g20
21:30:49  27  ,eur_g21
21:30:49  28  ,eur_g22
21:30:49  29  ,eur_g23
21:30:49  30  ,eur_g24
21:30:49  31  ,eur_g25
21:30:49  32  ,eur_g26
21:30:49  33  ,eur_g27
21:30:49  34  ,eur_g28
21:30:49  35  ,eur_g29
21:30:49  36  ,eur_g30
21:30:49  37  ,eur_g31
21:30:49  38  ,eur_g32
21:30:49  39  ,eur_g33
21:30:49  40  ,eur_g34
21:30:49  41  ,eur_g35
21:30:49  42  ,eur_g36
21:30:49  43  ,eur_g37
21:30:49  44  ,eur_g38
21:30:49  45  ,eur_g39
21:30:49  46  ,eur_g40
21:30:49  47  ,eur_g41
21:30:49  48  ,aud_g00
21:30:49  49  ,aud_g01
21:30:49  50  ,aud_g02
21:30:49  51  ,aud_g03
21:30:49  52  ,aud_g04
21:30:49  53  ,aud_g05
21:30:49  54  ,aud_g06
21:30:49  55  ,aud_g07
21:30:49  56  ,aud_g08
21:30:49  57  ,aud_g09
21:30:49  58  ,aud_g10
21:30:49  59  ,aud_g11
21:30:49  60  ,aud_g12
21:30:49  61  ,aud_g13
21:30:49  62  ,aud_g14
21:30:49  63  ,aud_g15
21:30:49  64  ,aud_g16
21:30:49  65  ,aud_g17
21:30:49  66  ,aud_g18
21:30:49  67  ,aud_g19
21:30:49  68  ,aud_g20
21:30:49  69  ,aud_g21
21:30:49  70  ,aud_g22
21:30:49  71  ,aud_g23
21:30:49  72  ,aud_g24
21:30:49  73  ,aud_g25
21:30:49  74  ,aud_g26
21:30:49  75  ,aud_g27
21:30:49  76  ,aud_g28
21:30:49  77  ,aud_g29
21:30:49  78  ,aud_g30
21:30:49  79  ,aud_g31
21:30:49  80  ,aud_g32
21:30:49  81  ,aud_g33
21:30:49  82  ,aud_g34
21:30:49  83  ,aud_g35
21:30:49  84  ,aud_g36
21:30:49  85  ,aud_g37
21:30:49  86  ,aud_g38
21:30:49  87  ,aud_g39
21:30:49  88  ,aud_g40
21:30:49  89  ,aud_g41
21:30:49  90  ,gbp_g00
21:30:49  91  ,gbp_g01
21:30:49  92  ,gbp_g02
21:30:49  93  ,gbp_g03
21:30:49  94  ,gbp_g04
21:30:49  95  ,gbp_g05
21:30:49  96  ,gbp_g06
21:30:49  97  ,gbp_g07
21:30:49  98  ,gbp_g08
21:30:49  99  ,gbp_g09
21:30:49 100  ,gbp_g10
21:30:49 101  ,gbp_g11
21:30:49 102  ,gbp_g12
21:30:49 103  ,gbp_g13
21:30:49 104  ,gbp_g14
21:30:49 105  ,gbp_g15
21:30:49 106  ,gbp_g16
21:30:49 107  ,gbp_g17
21:30:49 108  ,gbp_g18
21:30:49 109  ,gbp_g19
21:30:49 110  ,gbp_g20
21:30:49 111  ,gbp_g21
21:30:49 112  ,gbp_g22
21:30:49 113  ,gbp_g23
21:30:49 114  ,gbp_g24
21:30:49 115  ,gbp_g25
21:30:49 116  ,gbp_g26
21:30:49 117  ,gbp_g27
21:30:49 118  ,gbp_g28
21:30:49 119  ,gbp_g29
21:30:49 120  ,gbp_g30
21:30:49 121  ,gbp_g31
21:30:49 122  ,gbp_g32
21:30:49 123  ,gbp_g33
21:30:49 124  ,gbp_g34
21:30:49 125  ,gbp_g35
21:30:49 126  ,gbp_g36
21:30:49 127  ,gbp_g37
21:30:49 128  ,gbp_g38
21:30:49 129  ,gbp_g39
21:30:49 130  ,gbp_g40
21:30:49 131  ,gbp_g41
21:30:49 132  ,jpy_g00
21:30:49 133  ,jpy_g01
21:30:49 134  ,jpy_g02
21:30:49 135  ,jpy_g03
21:30:49 136  ,jpy_g04
21:30:49 137  ,jpy_g05
21:30:49 138  ,jpy_g06
21:30:49 139  ,jpy_g07
21:30:49 140  ,jpy_g08
21:30:49 141  ,jpy_g09
21:30:49 142  ,jpy_g10
21:30:49 143  ,jpy_g11
21:30:49 144  ,jpy_g12
21:30:49 145  ,jpy_g13
21:30:49 146  ,jpy_g14
21:30:49 147  ,jpy_g15
21:30:49 148  ,jpy_g16
21:30:49 149  ,jpy_g17
21:30:49 150  ,jpy_g18
21:30:49 151  ,jpy_g19
21:30:49 152  ,jpy_g20
21:30:49 153  ,jpy_g21
21:30:49 154  ,jpy_g22
21:30:49 155  ,jpy_g23
21:30:49 156  ,jpy_g24
21:30:49 157  ,jpy_g25
21:30:49 158  ,jpy_g26
21:30:49 159  ,jpy_g27
21:30:49 160  ,jpy_g28
21:30:49 161  ,jpy_g29
21:30:49 162  ,jpy_g30
21:30:49 163  ,jpy_g31
21:30:49 164  ,jpy_g32
21:30:49 165  ,jpy_g33
21:30:49 166  ,jpy_g34
21:30:49 167  ,jpy_g35
21:30:49 168  ,jpy_g36
21:30:49 169  ,jpy_g37
21:30:49 170  ,jpy_g38
21:30:49 171  ,jpy_g39
21:30:49 172  ,jpy_g40
21:30:49 173  ,jpy_g41
21:30:49 174  ,cad_g00
21:30:49 175  ,cad_g01
21:30:49 176  ,cad_g02
21:30:49 177  ,cad_g03
21:30:49 178  ,cad_g04
21:30:49 179  ,cad_g05
21:30:49 180  ,cad_g06
21:30:49 181  ,cad_g07
21:30:49 182  ,cad_g08
21:30:49 183  ,cad_g09
21:30:49 184  ,cad_g10
21:30:49 185  ,cad_g11
21:30:49 186  ,cad_g12
21:30:49 187  ,cad_g13
21:30:49 188  ,cad_g14
21:30:49 189  ,cad_g15
21:30:49 190  ,cad_g16
21:30:49 191  ,cad_g17
21:30:49 192  ,cad_g18
21:30:49 193  ,cad_g19
21:30:49 194  ,cad_g20
21:30:49 195  ,cad_g21
21:30:49 196  ,cad_g22
21:30:49 197  ,cad_g23
21:30:49 198  ,cad_g24
21:30:49 199  ,cad_g25
21:30:49 200  ,cad_g26
21:30:49 201  ,cad_g27
21:30:49 202  ,cad_g28
21:30:49 203  ,cad_g29
21:30:49 204  ,cad_g30
21:30:49 205  ,cad_g31
21:30:49 206  ,cad_g32
21:30:49 207  ,cad_g33
21:30:49 208  ,cad_g34
21:30:49 209  ,cad_g35
21:30:49 210  ,cad_g36
21:30:49 211  ,cad_g37
21:30:49 212  ,cad_g38
21:30:49 213  ,cad_g39
21:30:49 214  ,cad_g40
21:30:49 215  ,cad_g41
21:30:49 216  ,chf_g00
21:30:49 217  ,chf_g01
21:30:49 218  ,chf_g02
21:30:49 219  ,chf_g03
21:30:49 220  ,chf_g04
21:30:49 221  ,chf_g05
21:30:49 222  ,chf_g06
21:30:49 223  ,chf_g07
21:30:49 224  ,chf_g08
21:30:49 225  ,chf_g09
21:30:49 226  ,chf_g10
21:30:49 227  ,chf_g11
21:30:49 228  ,chf_g12
21:30:49 229  ,chf_g13
21:30:49 230  ,chf_g14
21:30:49 231  ,chf_g15
21:30:49 232  ,chf_g16
21:30:49 233  ,chf_g17
21:30:49 234  ,chf_g18
21:30:49 235  ,chf_g19
21:30:49 236  ,chf_g20
21:30:49 237  ,chf_g21
21:30:49 238  ,chf_g22
21:30:49 239  ,chf_g23
21:30:49 240  ,chf_g24
21:30:49 241  ,chf_g25
21:30:49 242  ,chf_g26
21:30:49 243  ,chf_g27
21:30:49 244  ,chf_g28
21:30:49 245  ,chf_g29
21:30:49 246  ,chf_g30
21:30:49 247  ,chf_g31
21:30:49 248  ,chf_g32
21:30:49 249  ,chf_g33
21:30:49 250  ,chf_g34
21:30:49 251  ,chf_g35
21:30:49 252  ,chf_g36
21:30:49 253  ,chf_g37
21:30:49 254  ,chf_g38
21:30:49 255  ,chf_g39
21:30:49 256  ,chf_g40
21:30:49 257  ,chf_g41
21:30:49 258  FROM aud_ms6 m
21:30:49 259  WHERE m.ydate = '&1'||' '||'&2'
21:30:49 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'21:10:00'

View created.

Elapsed: 00:00:00.12
21:30:49 SQL> 
21:30:49 SQL> -- rpt
21:30:49 SQL> -- We should see just 1 row:
21:30:49 SQL> 
21:30:49 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
21:30:49 SQL> 
21:30:49 SQL> -- Build the model:
21:30:49 SQL> CREATE OR REPLACE VIEW bme AS
21:30:49   2  SELECT
21:30:49   3  'aud'||m.ydate prdate
21:30:49   4  ,gattn
21:30:49   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:30:49   6  ,eur_g00
21:30:49   7  ,eur_g01
21:30:49   8  ,eur_g02
21:30:49   9  ,eur_g03
21:30:49  10  ,eur_g04
21:30:49  11  ,eur_g05
21:30:49  12  ,eur_g06
21:30:49  13  ,eur_g07
21:30:49  14  ,eur_g08
21:30:49  15  ,eur_g09
21:30:49  16  ,eur_g10
21:30:49  17  ,eur_g11
21:30:49  18  ,eur_g12
21:30:49  19  ,eur_g13
21:30:49  20  ,eur_g14
21:30:49  21  ,eur_g15
21:30:49  22  ,eur_g16
21:30:49  23  ,eur_g17
21:30:49  24  ,eur_g18
21:30:49  25  ,eur_g19
21:30:49  26  ,eur_g20
21:30:49  27  ,eur_g21
21:30:49  28  ,eur_g22
21:30:49  29  ,eur_g23
21:30:49  30  ,eur_g24
21:30:49  31  ,eur_g25
21:30:49  32  ,eur_g26
21:30:49  33  ,eur_g27
21:30:49  34  ,eur_g28
21:30:49  35  ,eur_g29
21:30:49  36  ,eur_g30
21:30:49  37  ,eur_g31
21:30:49  38  ,eur_g32
21:30:49  39  ,eur_g33
21:30:49  40  ,eur_g34
21:30:49  41  ,eur_g35
21:30:49  42  ,eur_g36
21:30:49  43  ,eur_g37
21:30:49  44  ,eur_g38
21:30:49  45  ,eur_g39
21:30:49  46  ,eur_g40
21:30:49  47  ,eur_g41
21:30:49  48  ,aud_g00
21:30:49  49  ,aud_g01
21:30:49  50  ,aud_g02
21:30:49  51  ,aud_g03
21:30:49  52  ,aud_g04
21:30:49  53  ,aud_g05
21:30:49  54  ,aud_g06
21:30:49  55  ,aud_g07
21:30:49  56  ,aud_g08
21:30:49  57  ,aud_g09
21:30:49  58  ,aud_g10
21:30:49  59  ,aud_g11
21:30:49  60  ,aud_g12
21:30:49  61  ,aud_g13
21:30:49  62  ,aud_g14
21:30:49  63  ,aud_g15
21:30:49  64  ,aud_g16
21:30:49  65  ,aud_g17
21:30:49  66  ,aud_g18
21:30:49  67  ,aud_g19
21:30:49  68  ,aud_g20
21:30:49  69  ,aud_g21
21:30:49  70  ,aud_g22
21:30:49  71  ,aud_g23
21:30:49  72  ,aud_g24
21:30:49  73  ,aud_g25
21:30:49  74  ,aud_g26
21:30:49  75  ,aud_g27
21:30:49  76  ,aud_g28
21:30:49  77  ,aud_g29
21:30:49  78  ,aud_g30
21:30:49  79  ,aud_g31
21:30:49  80  ,aud_g32
21:30:49  81  ,aud_g33
21:30:49  82  ,aud_g34
21:30:49  83  ,aud_g35
21:30:49  84  ,aud_g36
21:30:49  85  ,aud_g37
21:30:49  86  ,aud_g38
21:30:49  87  ,aud_g39
21:30:49  88  ,aud_g40
21:30:49  89  ,aud_g41
21:30:49  90  ,gbp_g00
21:30:49  91  ,gbp_g01
21:30:49  92  ,gbp_g02
21:30:49  93  ,gbp_g03
21:30:49  94  ,gbp_g04
21:30:49  95  ,gbp_g05
21:30:49  96  ,gbp_g06
21:30:49  97  ,gbp_g07
21:30:49  98  ,gbp_g08
21:30:49  99  ,gbp_g09
21:30:49 100  ,gbp_g10
21:30:49 101  ,gbp_g11
21:30:49 102  ,gbp_g12
21:30:49 103  ,gbp_g13
21:30:49 104  ,gbp_g14
21:30:49 105  ,gbp_g15
21:30:49 106  ,gbp_g16
21:30:49 107  ,gbp_g17
21:30:49 108  ,gbp_g18
21:30:49 109  ,gbp_g19
21:30:49 110  ,gbp_g20
21:30:49 111  ,gbp_g21
21:30:49 112  ,gbp_g22
21:30:49 113  ,gbp_g23
21:30:49 114  ,gbp_g24
21:30:49 115  ,gbp_g25
21:30:49 116  ,gbp_g26
21:30:49 117  ,gbp_g27
21:30:49 118  ,gbp_g28
21:30:49 119  ,gbp_g29
21:30:49 120  ,gbp_g30
21:30:49 121  ,gbp_g31
21:30:49 122  ,gbp_g32
21:30:49 123  ,gbp_g33
21:30:49 124  ,gbp_g34
21:30:49 125  ,gbp_g35
21:30:49 126  ,gbp_g36
21:30:49 127  ,gbp_g37
21:30:49 128  ,gbp_g38
21:30:49 129  ,gbp_g39
21:30:49 130  ,gbp_g40
21:30:49 131  ,gbp_g41
21:30:49 132  ,jpy_g00
21:30:49 133  ,jpy_g01
21:30:49 134  ,jpy_g02
21:30:49 135  ,jpy_g03
21:30:49 136  ,jpy_g04
21:30:49 137  ,jpy_g05
21:30:49 138  ,jpy_g06
21:30:49 139  ,jpy_g07
21:30:49 140  ,jpy_g08
21:30:49 141  ,jpy_g09
21:30:49 142  ,jpy_g10
21:30:49 143  ,jpy_g11
21:30:49 144  ,jpy_g12
21:30:49 145  ,jpy_g13
21:30:49 146  ,jpy_g14
21:30:49 147  ,jpy_g15
21:30:49 148  ,jpy_g16
21:30:49 149  ,jpy_g17
21:30:49 150  ,jpy_g18
21:30:49 151  ,jpy_g19
21:30:49 152  ,jpy_g20
21:30:49 153  ,jpy_g21
21:30:49 154  ,jpy_g22
21:30:49 155  ,jpy_g23
21:30:49 156  ,jpy_g24
21:30:49 157  ,jpy_g25
21:30:49 158  ,jpy_g26
21:30:49 159  ,jpy_g27
21:30:49 160  ,jpy_g28
21:30:49 161  ,jpy_g29
21:30:49 162  ,jpy_g30
21:30:49 163  ,jpy_g31
21:30:49 164  ,jpy_g32
21:30:49 165  ,jpy_g33
21:30:49 166  ,jpy_g34
21:30:49 167  ,jpy_g35
21:30:49 168  ,jpy_g36
21:30:49 169  ,jpy_g37
21:30:49 170  ,jpy_g38
21:30:49 171  ,jpy_g39
21:30:49 172  ,jpy_g40
21:30:49 173  ,jpy_g41
21:30:49 174  ,cad_g00
21:30:49 175  ,cad_g01
21:30:49 176  ,cad_g02
21:30:49 177  ,cad_g03
21:30:49 178  ,cad_g04
21:30:49 179  ,cad_g05
21:30:49 180  ,cad_g06
21:30:49 181  ,cad_g07
21:30:49 182  ,cad_g08
21:30:49 183  ,cad_g09
21:30:49 184  ,cad_g10
21:30:49 185  ,cad_g11
21:30:49 186  ,cad_g12
21:30:49 187  ,cad_g13
21:30:49 188  ,cad_g14
21:30:49 189  ,cad_g15
21:30:49 190  ,cad_g16
21:30:49 191  ,cad_g17
21:30:49 192  ,cad_g18
21:30:49 193  ,cad_g19
21:30:49 194  ,cad_g20
21:30:49 195  ,cad_g21
21:30:49 196  ,cad_g22
21:30:49 197  ,cad_g23
21:30:49 198  ,cad_g24
21:30:49 199  ,cad_g25
21:30:49 200  ,cad_g26
21:30:49 201  ,cad_g27
21:30:49 202  ,cad_g28
21:30:49 203  ,cad_g29
21:30:49 204  ,cad_g30
21:30:49 205  ,cad_g31
21:30:49 206  ,cad_g32
21:30:49 207  ,cad_g33
21:30:49 208  ,cad_g34
21:30:49 209  ,cad_g35
21:30:49 210  ,cad_g36
21:30:49 211  ,cad_g37
21:30:49 212  ,cad_g38
21:30:49 213  ,cad_g39
21:30:49 214  ,cad_g40
21:30:49 215  ,cad_g41
21:30:49 216  ,chf_g00
21:30:49 217  ,chf_g01
21:30:49 218  ,chf_g02
21:30:49 219  ,chf_g03
21:30:49 220  ,chf_g04
21:30:49 221  ,chf_g05
21:30:49 222  ,chf_g06
21:30:49 223  ,chf_g07
21:30:49 224  ,chf_g08
21:30:49 225  ,chf_g09
21:30:49 226  ,chf_g10
21:30:49 227  ,chf_g11
21:30:49 228  ,chf_g12
21:30:49 229  ,chf_g13
21:30:49 230  ,chf_g14
21:30:49 231  ,chf_g15
21:30:49 232  ,chf_g16
21:30:49 233  ,chf_g17
21:30:49 234  ,chf_g18
21:30:49 235  ,chf_g19
21:30:49 236  ,chf_g20
21:30:49 237  ,chf_g21
21:30:49 238  ,chf_g22
21:30:49 239  ,chf_g23
21:30:49 240  ,chf_g24
21:30:49 241  ,chf_g25
21:30:49 242  ,chf_g26
21:30:49 243  ,chf_g27
21:30:49 244  ,chf_g28
21:30:49 245  ,chf_g29
21:30:49 246  ,chf_g30
21:30:49 247  ,chf_g31
21:30:49 248  ,chf_g32
21:30:49 249  ,chf_g33
21:30:49 250  ,chf_g34
21:30:49 251  ,chf_g35
21:30:49 252  ,chf_g36
21:30:49 253  ,chf_g37
21:30:49 254  ,chf_g38
21:30:49 255  ,chf_g39
21:30:49 256  ,chf_g40
21:30:49 257  ,chf_g41
21:30:49 258  FROM aud_ms6 m
21:30:49 259  WHERE gattn IN('nup','up')
21:30:49 260  AND 1+m.ydate < '&1'||' '||'&2'
21:30:49 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'21:10:00'

View created.

Elapsed: 00:00:00.13
21:30:49 SQL> 
21:30:49 SQL> -- rpt
21:30:49 SQL> 
21:30:49 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12867
up	     6397

Elapsed: 00:00:00.04
21:30:49 SQL> 
21:30:49 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-28 21:05:00

Elapsed: 00:00:00.03
21:30:49 SQL> 
21:30:49 SQL> -- Now build model from bme and score sme
21:30:49 SQL> @score1gattn.sql
21:30:49 SQL> -- score1gattn.sql
21:30:49 SQL> 
21:30:49 SQL> -- Does the 1st SVM score
21:30:49 SQL> 
21:30:49 SQL> -- Fill up svmc_apply_prep
21:30:49 SQL> @score_gattn.sql
21:30:49 SQL> --
21:30:49 SQL> -- score_gattn.sql
21:30:49 SQL> --
21:30:49 SQL> 
21:30:49 SQL> -- usage: score_gattn.sql
21:30:49 SQL> 
21:30:49 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:30:49 SQL> 
21:30:49 SQL> DEFINE target	= 'gattn'
21:30:49 SQL> DEFINE model_name = 'forex14'
21:30:49 SQL> DEFINE bldtable	= 'bme'
21:30:49 SQL> DEFINE scoretable = 'sme'
21:30:49 SQL> DEFINE case_id	= 'prdate'
21:30:49 SQL> 
21:30:49 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:30:49 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:30:49 SQL> 
21:30:49 SQL> -- Builds an SVM model using pl/sql.
21:30:49 SQL> 
21:30:49 SQL> -----------------------------------------------------------------------
21:30:49 SQL> --			    BUILD THE MODEL
21:30:49 SQL> -----------------------------------------------------------------------
21:30:49 SQL> 
21:30:49 SQL> -- Cleanup old build data preparation objects for repeat runs
21:30:49 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
21:30:49 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:30:49 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
21:30:49 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
21:30:49 SQL> 
21:30:49 SQL> 
21:30:49 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:30:49 SQL> --
21:30:49 SQL> -- DROP	TABLE svmc_settings ;
21:30:49 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:30:49 SQL> -- DELETE svmc_settings;
21:30:49 SQL> 
21:30:49 SQL> -- The default classification algorithm is Naive Bayes. So override
21:30:49 SQL> -- this choice to SVM using a settings table.
21:30:49 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:30:49 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:30:49 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:30:49 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:30:49 SQL> -- models.
21:30:49 SQL> --
21:30:49 SQL> 
21:30:49 SQL> -- Do this once and then comment it out.
21:30:49 SQL> -- That makes script go faster.
21:30:49 SQL> -- BEGIN
21:30:49 SQL> -- -- Populate settings table
21:30:49 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:30:49 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:30:49 SQL> --
21:30:49 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:30:49 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:30:49 SQL> --
21:30:49 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:30:49 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:30:49 SQL> --   COMMIT;
21:30:49 SQL> -- END;
21:30:49 SQL> -- /
21:30:49 SQL> 
21:30:49 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:30:49 SQL> 
21:30:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:30:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.16
21:30:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:30:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:30:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:30:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.22
21:30:49 SQL> 
21:30:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:30:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:30:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:30:50 SQL> 
21:30:50 SQL> --------------------------------
21:30:50 SQL> -- PREPARE BUILD (TRAINING) DATA
21:30:50 SQL> --
21:30:50 SQL> 
21:30:50 SQL> -- 1. Missing Value treatment for all Predictors and
21:30:50 SQL> -- 2. Outlier Treatment and
21:30:50 SQL> -- 3. Normalization are performed below.
21:30:50 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:30:50 SQL> --    normalized here.
21:30:50 SQL> 
21:30:50 SQL> BEGIN
21:30:50   2  	-- Perform missing value treatment for all predictors
21:30:50   3  	-- create miss tables
21:30:50   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:30:50   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:30:50   6  
21:30:50   7  	-- populate miss tables
21:30:50   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:30:50   9  	  miss_table_name => 'svmc_miss_num',
21:30:50  10  	  data_table_name => '&bldtable',
21:30:50  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:30:50  12  
21:30:50  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:30:50  14  	  miss_table_name => 'svmc_miss_cat',
21:30:50  15  	  data_table_name => '&bldtable',
21:30:50  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:30:50  17  
21:30:50  18  	-- xform input data to replace missing values
21:30:50  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:30:50  20  	  miss_table_name => 'svmc_miss_num',
21:30:50  21  	  data_table_name => '&bldtable',
21:30:50  22  	  xform_view_name => 'xformed_build_miss_num');
21:30:50  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:30:50  24  	  miss_table_name => 'svmc_miss_cat',
21:30:50  25  	  data_table_name => '&bldtable',
21:30:50  26  	  xform_view_name => 'xformed_build_miss_cat');
21:30:50  27  
21:30:50  28  	-- Perform outlier treatment.
21:30:50  29  	-- create clip table
21:30:50  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:30:50  31  
21:30:50  32  	-- populate clip table
21:30:50  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:30:50  34  	  clip_table_name => 'svmc_clip',
21:30:50  35  	  data_table_name => '&bldtable',
21:30:50  36  	  tail_frac	  => 0.025,
21:30:50  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:30:50  38  
21:30:50  39  	-- xform input data to winsorized data
21:30:50  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:30:50  41  	  clip_table_name => 'svmc_clip',
21:30:50  42  	  data_table_name => '&bldtable',
21:30:50  43  	  xform_view_name => 'svmc_winsor');
21:30:50  44  
21:30:50  45  	-- create normalization table
21:30:50  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:30:50  47  
21:30:50  48  	-- populate normalization table based on winsorized data
21:30:50  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:30:50  50  	  norm_table_name => 'svmc_norm',
21:30:50  51  	  data_table_name => 'svmc_winsor',
21:30:50  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:30:50  53  
21:30:50  54  	-- normalize the original data
21:30:50  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:30:50  56  	  norm_table_name => 'svmc_norm',
21:30:50  57  	  data_table_name => '&bldtable',
21:30:50  58  	  xform_view_name => 'svmc_build_prep');
21:30:50  59  END;
21:30:50  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.89
21:31:07 SQL> 
21:31:07 SQL> ---------------------
21:31:07 SQL> -- CREATE A NEW MODEL
21:31:07 SQL> --
21:31:07 SQL> -- Cleanup old model with the same name for repeat runs
21:31:07 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:31:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:07   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.04
21:31:08 SQL> 
21:31:08 SQL> -- Build a new SVM Model
21:31:08 SQL> BEGIN
21:31:08   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:31:08   3  	  model_name	      => '&model_name',
21:31:08   4  	  mining_function     => dbms_data_mining.classification,
21:31:08   5  	  data_table_name     => 'svmc_build_prep',
21:31:08   6  	  case_id_column_name => '&case_id',
21:31:08   7  	  target_column_name  => '&target',
21:31:08   8  	  settings_table_name => 'svmc_settings');
21:31:08   9  END;
21:31:08  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.54
21:31:36 SQL> 
21:31:36 SQL> -----------------------------------------------------------------------
21:31:36 SQL> --			       APPLY/score THE MODEL
21:31:36 SQL> -----------------------------------------------------------------------
21:31:36 SQL> 
21:31:36 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:31:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:31:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:31:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:31:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:31:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:31:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:31:36 SQL> -----------------------
21:31:36 SQL> -- PREPARE SCORING DATA
21:31:36 SQL> --
21:31:36 SQL> -- If the data for model creation has been prepared, then the data
21:31:36 SQL> -- to be scored using the model must be prepared in the same manner
21:31:36 SQL> -- in order to obtain meaningful results.
21:31:36 SQL> --
21:31:36 SQL> -- 1. Missing Value treatment for all Predictors and
21:31:36 SQL> -- 2. Normalization
21:31:36 SQL> -- No outlier treatment will be performed during test and apply. The
21:31:36 SQL> -- normalization step is sufficient, since the normalization parameters
21:31:36 SQL> -- already capture the effects of outlier treatment done with build data.
21:31:36 SQL> --
21:31:36 SQL> BEGIN
21:31:36   2  	-- Xform Test data to replace missing values
21:31:36   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:31:36   4  	  miss_table_name => 'svmc_miss_num',
21:31:36   5  	  data_table_name => '&scoretable',
21:31:36   6  	  xform_view_name => 'xformed_apply_miss_num');
21:31:36   7  
21:31:36   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:31:36   9  	  miss_table_name => 'svmc_miss_cat',
21:31:36  10  	  data_table_name => '&scoretable',
21:31:36  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:31:36  12  
21:31:36  13  	-- Normalize the data to be scored
21:31:36  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:31:36  15  	  norm_table_name => 'svmc_norm',
21:31:36  16  	  data_table_name => '&scoretable',
21:31:36  17  	  xform_view_name => 'svmc_apply_prep');
21:31:36  18  END;
21:31:36  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
21:31:37 SQL> 
21:31:37 SQL> -- Use same model_name used in score_gattn.sql
21:31:37 SQL> DEFINE model_name = 'forex14'
21:31:37 SQL> 
21:31:37 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:31:37 SQL> 
21:31:37 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
21:31:37   2  SELECT
21:31:37   3  prdate
21:31:37   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:31:37   5  ,sysdate
21:31:37   6  ,SUBSTR(prdate,1,3)pair
21:31:37   7  ,SUBSTR(prdate,4,19)ydate
21:31:37   8  FROM svmc_apply_prep
21:31:37   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:31:38 SQL> @aud_score1day_gattn.sql	2010-12-29 21:15:00
21:31:38 SQL> --
21:31:38 SQL> -- aud_score1day_gattn.sql
21:31:38 SQL> --
21:31:38 SQL> 
21:31:38 SQL> CREATE OR REPLACE VIEW sme AS
21:31:38   2  SELECT
21:31:38   3  'aud'||m.ydate prdate
21:31:38   4  ,NULL gattn
21:31:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:31:38   6  ,eur_g00
21:31:38   7  ,eur_g01
21:31:38   8  ,eur_g02
21:31:38   9  ,eur_g03
21:31:38  10  ,eur_g04
21:31:38  11  ,eur_g05
21:31:38  12  ,eur_g06
21:31:38  13  ,eur_g07
21:31:38  14  ,eur_g08
21:31:38  15  ,eur_g09
21:31:38  16  ,eur_g10
21:31:38  17  ,eur_g11
21:31:38  18  ,eur_g12
21:31:38  19  ,eur_g13
21:31:38  20  ,eur_g14
21:31:38  21  ,eur_g15
21:31:38  22  ,eur_g16
21:31:38  23  ,eur_g17
21:31:38  24  ,eur_g18
21:31:38  25  ,eur_g19
21:31:38  26  ,eur_g20
21:31:38  27  ,eur_g21
21:31:38  28  ,eur_g22
21:31:38  29  ,eur_g23
21:31:38  30  ,eur_g24
21:31:38  31  ,eur_g25
21:31:38  32  ,eur_g26
21:31:38  33  ,eur_g27
21:31:38  34  ,eur_g28
21:31:38  35  ,eur_g29
21:31:38  36  ,eur_g30
21:31:38  37  ,eur_g31
21:31:38  38  ,eur_g32
21:31:38  39  ,eur_g33
21:31:38  40  ,eur_g34
21:31:38  41  ,eur_g35
21:31:38  42  ,eur_g36
21:31:38  43  ,eur_g37
21:31:38  44  ,eur_g38
21:31:38  45  ,eur_g39
21:31:38  46  ,eur_g40
21:31:38  47  ,eur_g41
21:31:38  48  ,aud_g00
21:31:38  49  ,aud_g01
21:31:38  50  ,aud_g02
21:31:38  51  ,aud_g03
21:31:38  52  ,aud_g04
21:31:38  53  ,aud_g05
21:31:38  54  ,aud_g06
21:31:38  55  ,aud_g07
21:31:38  56  ,aud_g08
21:31:38  57  ,aud_g09
21:31:38  58  ,aud_g10
21:31:38  59  ,aud_g11
21:31:38  60  ,aud_g12
21:31:38  61  ,aud_g13
21:31:38  62  ,aud_g14
21:31:38  63  ,aud_g15
21:31:38  64  ,aud_g16
21:31:38  65  ,aud_g17
21:31:38  66  ,aud_g18
21:31:38  67  ,aud_g19
21:31:38  68  ,aud_g20
21:31:38  69  ,aud_g21
21:31:38  70  ,aud_g22
21:31:38  71  ,aud_g23
21:31:38  72  ,aud_g24
21:31:38  73  ,aud_g25
21:31:38  74  ,aud_g26
21:31:38  75  ,aud_g27
21:31:38  76  ,aud_g28
21:31:38  77  ,aud_g29
21:31:38  78  ,aud_g30
21:31:38  79  ,aud_g31
21:31:38  80  ,aud_g32
21:31:38  81  ,aud_g33
21:31:38  82  ,aud_g34
21:31:38  83  ,aud_g35
21:31:38  84  ,aud_g36
21:31:38  85  ,aud_g37
21:31:38  86  ,aud_g38
21:31:38  87  ,aud_g39
21:31:38  88  ,aud_g40
21:31:38  89  ,aud_g41
21:31:38  90  ,gbp_g00
21:31:38  91  ,gbp_g01
21:31:38  92  ,gbp_g02
21:31:38  93  ,gbp_g03
21:31:38  94  ,gbp_g04
21:31:38  95  ,gbp_g05
21:31:38  96  ,gbp_g06
21:31:38  97  ,gbp_g07
21:31:38  98  ,gbp_g08
21:31:38  99  ,gbp_g09
21:31:38 100  ,gbp_g10
21:31:38 101  ,gbp_g11
21:31:38 102  ,gbp_g12
21:31:38 103  ,gbp_g13
21:31:38 104  ,gbp_g14
21:31:38 105  ,gbp_g15
21:31:38 106  ,gbp_g16
21:31:38 107  ,gbp_g17
21:31:38 108  ,gbp_g18
21:31:38 109  ,gbp_g19
21:31:38 110  ,gbp_g20
21:31:38 111  ,gbp_g21
21:31:38 112  ,gbp_g22
21:31:38 113  ,gbp_g23
21:31:38 114  ,gbp_g24
21:31:38 115  ,gbp_g25
21:31:38 116  ,gbp_g26
21:31:38 117  ,gbp_g27
21:31:38 118  ,gbp_g28
21:31:38 119  ,gbp_g29
21:31:38 120  ,gbp_g30
21:31:38 121  ,gbp_g31
21:31:38 122  ,gbp_g32
21:31:38 123  ,gbp_g33
21:31:38 124  ,gbp_g34
21:31:38 125  ,gbp_g35
21:31:38 126  ,gbp_g36
21:31:38 127  ,gbp_g37
21:31:38 128  ,gbp_g38
21:31:38 129  ,gbp_g39
21:31:38 130  ,gbp_g40
21:31:38 131  ,gbp_g41
21:31:38 132  ,jpy_g00
21:31:38 133  ,jpy_g01
21:31:38 134  ,jpy_g02
21:31:38 135  ,jpy_g03
21:31:38 136  ,jpy_g04
21:31:38 137  ,jpy_g05
21:31:38 138  ,jpy_g06
21:31:38 139  ,jpy_g07
21:31:38 140  ,jpy_g08
21:31:38 141  ,jpy_g09
21:31:38 142  ,jpy_g10
21:31:38 143  ,jpy_g11
21:31:38 144  ,jpy_g12
21:31:38 145  ,jpy_g13
21:31:38 146  ,jpy_g14
21:31:38 147  ,jpy_g15
21:31:38 148  ,jpy_g16
21:31:38 149  ,jpy_g17
21:31:38 150  ,jpy_g18
21:31:38 151  ,jpy_g19
21:31:38 152  ,jpy_g20
21:31:38 153  ,jpy_g21
21:31:38 154  ,jpy_g22
21:31:38 155  ,jpy_g23
21:31:38 156  ,jpy_g24
21:31:38 157  ,jpy_g25
21:31:38 158  ,jpy_g26
21:31:38 159  ,jpy_g27
21:31:38 160  ,jpy_g28
21:31:38 161  ,jpy_g29
21:31:38 162  ,jpy_g30
21:31:38 163  ,jpy_g31
21:31:38 164  ,jpy_g32
21:31:38 165  ,jpy_g33
21:31:38 166  ,jpy_g34
21:31:38 167  ,jpy_g35
21:31:38 168  ,jpy_g36
21:31:38 169  ,jpy_g37
21:31:38 170  ,jpy_g38
21:31:38 171  ,jpy_g39
21:31:38 172  ,jpy_g40
21:31:38 173  ,jpy_g41
21:31:38 174  ,cad_g00
21:31:38 175  ,cad_g01
21:31:38 176  ,cad_g02
21:31:38 177  ,cad_g03
21:31:38 178  ,cad_g04
21:31:38 179  ,cad_g05
21:31:38 180  ,cad_g06
21:31:38 181  ,cad_g07
21:31:38 182  ,cad_g08
21:31:38 183  ,cad_g09
21:31:38 184  ,cad_g10
21:31:38 185  ,cad_g11
21:31:38 186  ,cad_g12
21:31:38 187  ,cad_g13
21:31:38 188  ,cad_g14
21:31:38 189  ,cad_g15
21:31:38 190  ,cad_g16
21:31:38 191  ,cad_g17
21:31:38 192  ,cad_g18
21:31:38 193  ,cad_g19
21:31:38 194  ,cad_g20
21:31:38 195  ,cad_g21
21:31:38 196  ,cad_g22
21:31:38 197  ,cad_g23
21:31:38 198  ,cad_g24
21:31:38 199  ,cad_g25
21:31:38 200  ,cad_g26
21:31:38 201  ,cad_g27
21:31:38 202  ,cad_g28
21:31:38 203  ,cad_g29
21:31:38 204  ,cad_g30
21:31:38 205  ,cad_g31
21:31:38 206  ,cad_g32
21:31:38 207  ,cad_g33
21:31:38 208  ,cad_g34
21:31:38 209  ,cad_g35
21:31:38 210  ,cad_g36
21:31:38 211  ,cad_g37
21:31:38 212  ,cad_g38
21:31:38 213  ,cad_g39
21:31:38 214  ,cad_g40
21:31:38 215  ,cad_g41
21:31:38 216  ,chf_g00
21:31:38 217  ,chf_g01
21:31:38 218  ,chf_g02
21:31:38 219  ,chf_g03
21:31:38 220  ,chf_g04
21:31:38 221  ,chf_g05
21:31:38 222  ,chf_g06
21:31:38 223  ,chf_g07
21:31:38 224  ,chf_g08
21:31:38 225  ,chf_g09
21:31:38 226  ,chf_g10
21:31:38 227  ,chf_g11
21:31:38 228  ,chf_g12
21:31:38 229  ,chf_g13
21:31:38 230  ,chf_g14
21:31:38 231  ,chf_g15
21:31:38 232  ,chf_g16
21:31:38 233  ,chf_g17
21:31:38 234  ,chf_g18
21:31:38 235  ,chf_g19
21:31:38 236  ,chf_g20
21:31:38 237  ,chf_g21
21:31:38 238  ,chf_g22
21:31:38 239  ,chf_g23
21:31:38 240  ,chf_g24
21:31:38 241  ,chf_g25
21:31:38 242  ,chf_g26
21:31:38 243  ,chf_g27
21:31:38 244  ,chf_g28
21:31:38 245  ,chf_g29
21:31:38 246  ,chf_g30
21:31:38 247  ,chf_g31
21:31:38 248  ,chf_g32
21:31:38 249  ,chf_g33
21:31:38 250  ,chf_g34
21:31:38 251  ,chf_g35
21:31:38 252  ,chf_g36
21:31:38 253  ,chf_g37
21:31:38 254  ,chf_g38
21:31:38 255  ,chf_g39
21:31:38 256  ,chf_g40
21:31:38 257  ,chf_g41
21:31:38 258  FROM aud_ms6 m
21:31:38 259  WHERE m.ydate = '&1'||' '||'&2'
21:31:38 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'21:15:00'

View created.

Elapsed: 00:00:00.14
21:31:38 SQL> 
21:31:38 SQL> -- rpt
21:31:38 SQL> -- We should see just 1 row:
21:31:38 SQL> 
21:31:38 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
21:31:38 SQL> 
21:31:38 SQL> -- Build the model:
21:31:38 SQL> CREATE OR REPLACE VIEW bme AS
21:31:38   2  SELECT
21:31:38   3  'aud'||m.ydate prdate
21:31:38   4  ,gattn
21:31:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:31:38   6  ,eur_g00
21:31:38   7  ,eur_g01
21:31:38   8  ,eur_g02
21:31:38   9  ,eur_g03
21:31:38  10  ,eur_g04
21:31:38  11  ,eur_g05
21:31:38  12  ,eur_g06
21:31:38  13  ,eur_g07
21:31:38  14  ,eur_g08
21:31:38  15  ,eur_g09
21:31:38  16  ,eur_g10
21:31:38  17  ,eur_g11
21:31:38  18  ,eur_g12
21:31:38  19  ,eur_g13
21:31:38  20  ,eur_g14
21:31:38  21  ,eur_g15
21:31:38  22  ,eur_g16
21:31:38  23  ,eur_g17
21:31:38  24  ,eur_g18
21:31:38  25  ,eur_g19
21:31:38  26  ,eur_g20
21:31:38  27  ,eur_g21
21:31:38  28  ,eur_g22
21:31:38  29  ,eur_g23
21:31:38  30  ,eur_g24
21:31:38  31  ,eur_g25
21:31:38  32  ,eur_g26
21:31:38  33  ,eur_g27
21:31:38  34  ,eur_g28
21:31:38  35  ,eur_g29
21:31:38  36  ,eur_g30
21:31:38  37  ,eur_g31
21:31:38  38  ,eur_g32
21:31:38  39  ,eur_g33
21:31:38  40  ,eur_g34
21:31:38  41  ,eur_g35
21:31:38  42  ,eur_g36
21:31:38  43  ,eur_g37
21:31:38  44  ,eur_g38
21:31:38  45  ,eur_g39
21:31:38  46  ,eur_g40
21:31:38  47  ,eur_g41
21:31:38  48  ,aud_g00
21:31:38  49  ,aud_g01
21:31:38  50  ,aud_g02
21:31:38  51  ,aud_g03
21:31:38  52  ,aud_g04
21:31:38  53  ,aud_g05
21:31:38  54  ,aud_g06
21:31:38  55  ,aud_g07
21:31:38  56  ,aud_g08
21:31:38  57  ,aud_g09
21:31:38  58  ,aud_g10
21:31:38  59  ,aud_g11
21:31:38  60  ,aud_g12
21:31:38  61  ,aud_g13
21:31:38  62  ,aud_g14
21:31:38  63  ,aud_g15
21:31:38  64  ,aud_g16
21:31:38  65  ,aud_g17
21:31:38  66  ,aud_g18
21:31:38  67  ,aud_g19
21:31:38  68  ,aud_g20
21:31:38  69  ,aud_g21
21:31:38  70  ,aud_g22
21:31:38  71  ,aud_g23
21:31:38  72  ,aud_g24
21:31:38  73  ,aud_g25
21:31:38  74  ,aud_g26
21:31:38  75  ,aud_g27
21:31:38  76  ,aud_g28
21:31:38  77  ,aud_g29
21:31:38  78  ,aud_g30
21:31:38  79  ,aud_g31
21:31:38  80  ,aud_g32
21:31:38  81  ,aud_g33
21:31:38  82  ,aud_g34
21:31:38  83  ,aud_g35
21:31:38  84  ,aud_g36
21:31:38  85  ,aud_g37
21:31:38  86  ,aud_g38
21:31:38  87  ,aud_g39
21:31:38  88  ,aud_g40
21:31:38  89  ,aud_g41
21:31:38  90  ,gbp_g00
21:31:38  91  ,gbp_g01
21:31:38  92  ,gbp_g02
21:31:38  93  ,gbp_g03
21:31:38  94  ,gbp_g04
21:31:38  95  ,gbp_g05
21:31:38  96  ,gbp_g06
21:31:38  97  ,gbp_g07
21:31:38  98  ,gbp_g08
21:31:38  99  ,gbp_g09
21:31:38 100  ,gbp_g10
21:31:38 101  ,gbp_g11
21:31:38 102  ,gbp_g12
21:31:38 103  ,gbp_g13
21:31:38 104  ,gbp_g14
21:31:38 105  ,gbp_g15
21:31:38 106  ,gbp_g16
21:31:38 107  ,gbp_g17
21:31:38 108  ,gbp_g18
21:31:38 109  ,gbp_g19
21:31:38 110  ,gbp_g20
21:31:38 111  ,gbp_g21
21:31:38 112  ,gbp_g22
21:31:38 113  ,gbp_g23
21:31:38 114  ,gbp_g24
21:31:38 115  ,gbp_g25
21:31:38 116  ,gbp_g26
21:31:38 117  ,gbp_g27
21:31:38 118  ,gbp_g28
21:31:38 119  ,gbp_g29
21:31:38 120  ,gbp_g30
21:31:38 121  ,gbp_g31
21:31:38 122  ,gbp_g32
21:31:38 123  ,gbp_g33
21:31:38 124  ,gbp_g34
21:31:38 125  ,gbp_g35
21:31:38 126  ,gbp_g36
21:31:38 127  ,gbp_g37
21:31:38 128  ,gbp_g38
21:31:38 129  ,gbp_g39
21:31:38 130  ,gbp_g40
21:31:38 131  ,gbp_g41
21:31:38 132  ,jpy_g00
21:31:38 133  ,jpy_g01
21:31:38 134  ,jpy_g02
21:31:38 135  ,jpy_g03
21:31:38 136  ,jpy_g04
21:31:38 137  ,jpy_g05
21:31:38 138  ,jpy_g06
21:31:38 139  ,jpy_g07
21:31:38 140  ,jpy_g08
21:31:38 141  ,jpy_g09
21:31:38 142  ,jpy_g10
21:31:38 143  ,jpy_g11
21:31:38 144  ,jpy_g12
21:31:38 145  ,jpy_g13
21:31:38 146  ,jpy_g14
21:31:38 147  ,jpy_g15
21:31:38 148  ,jpy_g16
21:31:38 149  ,jpy_g17
21:31:38 150  ,jpy_g18
21:31:38 151  ,jpy_g19
21:31:38 152  ,jpy_g20
21:31:38 153  ,jpy_g21
21:31:38 154  ,jpy_g22
21:31:38 155  ,jpy_g23
21:31:38 156  ,jpy_g24
21:31:38 157  ,jpy_g25
21:31:38 158  ,jpy_g26
21:31:38 159  ,jpy_g27
21:31:38 160  ,jpy_g28
21:31:38 161  ,jpy_g29
21:31:38 162  ,jpy_g30
21:31:38 163  ,jpy_g31
21:31:38 164  ,jpy_g32
21:31:38 165  ,jpy_g33
21:31:38 166  ,jpy_g34
21:31:38 167  ,jpy_g35
21:31:38 168  ,jpy_g36
21:31:38 169  ,jpy_g37
21:31:38 170  ,jpy_g38
21:31:38 171  ,jpy_g39
21:31:38 172  ,jpy_g40
21:31:38 173  ,jpy_g41
21:31:38 174  ,cad_g00
21:31:38 175  ,cad_g01
21:31:38 176  ,cad_g02
21:31:38 177  ,cad_g03
21:31:38 178  ,cad_g04
21:31:38 179  ,cad_g05
21:31:38 180  ,cad_g06
21:31:38 181  ,cad_g07
21:31:38 182  ,cad_g08
21:31:38 183  ,cad_g09
21:31:38 184  ,cad_g10
21:31:38 185  ,cad_g11
21:31:38 186  ,cad_g12
21:31:38 187  ,cad_g13
21:31:38 188  ,cad_g14
21:31:38 189  ,cad_g15
21:31:38 190  ,cad_g16
21:31:38 191  ,cad_g17
21:31:38 192  ,cad_g18
21:31:38 193  ,cad_g19
21:31:38 194  ,cad_g20
21:31:38 195  ,cad_g21
21:31:38 196  ,cad_g22
21:31:38 197  ,cad_g23
21:31:38 198  ,cad_g24
21:31:38 199  ,cad_g25
21:31:38 200  ,cad_g26
21:31:38 201  ,cad_g27
21:31:38 202  ,cad_g28
21:31:38 203  ,cad_g29
21:31:38 204  ,cad_g30
21:31:38 205  ,cad_g31
21:31:38 206  ,cad_g32
21:31:38 207  ,cad_g33
21:31:38 208  ,cad_g34
21:31:38 209  ,cad_g35
21:31:38 210  ,cad_g36
21:31:38 211  ,cad_g37
21:31:38 212  ,cad_g38
21:31:38 213  ,cad_g39
21:31:38 214  ,cad_g40
21:31:38 215  ,cad_g41
21:31:38 216  ,chf_g00
21:31:38 217  ,chf_g01
21:31:38 218  ,chf_g02
21:31:38 219  ,chf_g03
21:31:38 220  ,chf_g04
21:31:38 221  ,chf_g05
21:31:38 222  ,chf_g06
21:31:38 223  ,chf_g07
21:31:38 224  ,chf_g08
21:31:38 225  ,chf_g09
21:31:38 226  ,chf_g10
21:31:38 227  ,chf_g11
21:31:38 228  ,chf_g12
21:31:38 229  ,chf_g13
21:31:38 230  ,chf_g14
21:31:38 231  ,chf_g15
21:31:38 232  ,chf_g16
21:31:38 233  ,chf_g17
21:31:38 234  ,chf_g18
21:31:38 235  ,chf_g19
21:31:38 236  ,chf_g20
21:31:38 237  ,chf_g21
21:31:38 238  ,chf_g22
21:31:38 239  ,chf_g23
21:31:38 240  ,chf_g24
21:31:38 241  ,chf_g25
21:31:38 242  ,chf_g26
21:31:38 243  ,chf_g27
21:31:38 244  ,chf_g28
21:31:38 245  ,chf_g29
21:31:38 246  ,chf_g30
21:31:38 247  ,chf_g31
21:31:38 248  ,chf_g32
21:31:38 249  ,chf_g33
21:31:38 250  ,chf_g34
21:31:38 251  ,chf_g35
21:31:38 252  ,chf_g36
21:31:38 253  ,chf_g37
21:31:38 254  ,chf_g38
21:31:38 255  ,chf_g39
21:31:38 256  ,chf_g40
21:31:38 257  ,chf_g41
21:31:38 258  FROM aud_ms6 m
21:31:38 259  WHERE gattn IN('nup','up')
21:31:38 260  AND 1+m.ydate < '&1'||' '||'&2'
21:31:38 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'21:15:00'

View created.

Elapsed: 00:00:00.12
21:31:38 SQL> 
21:31:38 SQL> -- rpt
21:31:38 SQL> 
21:31:38 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12868
up	     6397

Elapsed: 00:00:00.04
21:31:38 SQL> 
21:31:38 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-28 21:10:00

Elapsed: 00:00:00.04
21:31:38 SQL> 
21:31:38 SQL> -- Now build model from bme and score sme
21:31:38 SQL> @score1gattn.sql
21:31:38 SQL> -- score1gattn.sql
21:31:38 SQL> 
21:31:38 SQL> -- Does the 1st SVM score
21:31:38 SQL> 
21:31:38 SQL> -- Fill up svmc_apply_prep
21:31:38 SQL> @score_gattn.sql
21:31:38 SQL> --
21:31:38 SQL> -- score_gattn.sql
21:31:38 SQL> --
21:31:38 SQL> 
21:31:38 SQL> -- usage: score_gattn.sql
21:31:38 SQL> 
21:31:38 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:31:38 SQL> 
21:31:38 SQL> DEFINE target	= 'gattn'
21:31:38 SQL> DEFINE model_name = 'forex14'
21:31:38 SQL> DEFINE bldtable	= 'bme'
21:31:38 SQL> DEFINE scoretable = 'sme'
21:31:38 SQL> DEFINE case_id	= 'prdate'
21:31:38 SQL> 
21:31:38 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:31:38 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:31:38 SQL> 
21:31:38 SQL> -- Builds an SVM model using pl/sql.
21:31:38 SQL> 
21:31:38 SQL> -----------------------------------------------------------------------
21:31:38 SQL> --			    BUILD THE MODEL
21:31:38 SQL> -----------------------------------------------------------------------
21:31:38 SQL> 
21:31:38 SQL> -- Cleanup old build data preparation objects for repeat runs
21:31:38 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
21:31:38 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:31:38 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
21:31:38 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
21:31:38 SQL> 
21:31:38 SQL> 
21:31:38 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:31:38 SQL> --
21:31:38 SQL> -- DROP	TABLE svmc_settings ;
21:31:38 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:31:38 SQL> -- DELETE svmc_settings;
21:31:38 SQL> 
21:31:38 SQL> -- The default classification algorithm is Naive Bayes. So override
21:31:38 SQL> -- this choice to SVM using a settings table.
21:31:38 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:31:38 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:31:38 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:31:38 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:31:38 SQL> -- models.
21:31:38 SQL> --
21:31:38 SQL> 
21:31:38 SQL> -- Do this once and then comment it out.
21:31:38 SQL> -- That makes script go faster.
21:31:38 SQL> -- BEGIN
21:31:38 SQL> -- -- Populate settings table
21:31:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:31:38 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:31:38 SQL> --
21:31:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:31:38 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:31:38 SQL> --
21:31:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:31:38 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:31:38 SQL> --   COMMIT;
21:31:38 SQL> -- END;
21:31:38 SQL> -- /
21:31:38 SQL> 
21:31:38 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:31:38 SQL> 
21:31:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:31:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:31:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:31:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:31:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:31:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:31:38 SQL> 
21:31:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:31:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:31:38 SQL> 
21:31:38 SQL> --------------------------------
21:31:38 SQL> -- PREPARE BUILD (TRAINING) DATA
21:31:38 SQL> --
21:31:38 SQL> 
21:31:38 SQL> -- 1. Missing Value treatment for all Predictors and
21:31:38 SQL> -- 2. Outlier Treatment and
21:31:38 SQL> -- 3. Normalization are performed below.
21:31:38 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:31:38 SQL> --    normalized here.
21:31:38 SQL> 
21:31:38 SQL> BEGIN
21:31:38   2  	-- Perform missing value treatment for all predictors
21:31:38   3  	-- create miss tables
21:31:38   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:31:38   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:31:38   6  
21:31:38   7  	-- populate miss tables
21:31:38   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:31:38   9  	  miss_table_name => 'svmc_miss_num',
21:31:38  10  	  data_table_name => '&bldtable',
21:31:38  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:31:38  12  
21:31:38  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:31:38  14  	  miss_table_name => 'svmc_miss_cat',
21:31:38  15  	  data_table_name => '&bldtable',
21:31:38  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:31:38  17  
21:31:38  18  	-- xform input data to replace missing values
21:31:38  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:31:38  20  	  miss_table_name => 'svmc_miss_num',
21:31:38  21  	  data_table_name => '&bldtable',
21:31:38  22  	  xform_view_name => 'xformed_build_miss_num');
21:31:38  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:31:38  24  	  miss_table_name => 'svmc_miss_cat',
21:31:38  25  	  data_table_name => '&bldtable',
21:31:38  26  	  xform_view_name => 'xformed_build_miss_cat');
21:31:38  27  
21:31:38  28  	-- Perform outlier treatment.
21:31:38  29  	-- create clip table
21:31:38  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:31:38  31  
21:31:38  32  	-- populate clip table
21:31:38  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:31:38  34  	  clip_table_name => 'svmc_clip',
21:31:38  35  	  data_table_name => '&bldtable',
21:31:38  36  	  tail_frac	  => 0.025,
21:31:38  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:31:38  38  
21:31:38  39  	-- xform input data to winsorized data
21:31:38  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:31:38  41  	  clip_table_name => 'svmc_clip',
21:31:38  42  	  data_table_name => '&bldtable',
21:31:38  43  	  xform_view_name => 'svmc_winsor');
21:31:38  44  
21:31:38  45  	-- create normalization table
21:31:38  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:31:38  47  
21:31:38  48  	-- populate normalization table based on winsorized data
21:31:38  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:31:38  50  	  norm_table_name => 'svmc_norm',
21:31:38  51  	  data_table_name => 'svmc_winsor',
21:31:38  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:31:38  53  
21:31:38  54  	-- normalize the original data
21:31:38  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:31:38  56  	  norm_table_name => 'svmc_norm',
21:31:38  57  	  data_table_name => '&bldtable',
21:31:38  58  	  xform_view_name => 'svmc_build_prep');
21:31:38  59  END;
21:31:38  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.91
21:31:56 SQL> 
21:31:56 SQL> ---------------------
21:31:56 SQL> -- CREATE A NEW MODEL
21:31:56 SQL> --
21:31:56 SQL> -- Cleanup old model with the same name for repeat runs
21:31:56 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:31:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:31:56   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.83
21:31:57 SQL> 
21:31:57 SQL> -- Build a new SVM Model
21:31:57 SQL> BEGIN
21:31:57   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:31:57   3  	  model_name	      => '&model_name',
21:31:57   4  	  mining_function     => dbms_data_mining.classification,
21:31:57   5  	  data_table_name     => 'svmc_build_prep',
21:31:57   6  	  case_id_column_name => '&case_id',
21:31:57   7  	  target_column_name  => '&target',
21:31:57   8  	  settings_table_name => 'svmc_settings');
21:31:57   9  END;
21:31:57  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.86
21:32:24 SQL> 
21:32:24 SQL> -----------------------------------------------------------------------
21:32:24 SQL> --			       APPLY/score THE MODEL
21:32:24 SQL> -----------------------------------------------------------------------
21:32:24 SQL> 
21:32:24 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:32:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:32:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:32:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:32:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:32:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:32:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.12
21:32:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:32:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:32:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:32:24 SQL> -----------------------
21:32:24 SQL> -- PREPARE SCORING DATA
21:32:24 SQL> --
21:32:24 SQL> -- If the data for model creation has been prepared, then the data
21:32:24 SQL> -- to be scored using the model must be prepared in the same manner
21:32:24 SQL> -- in order to obtain meaningful results.
21:32:24 SQL> --
21:32:24 SQL> -- 1. Missing Value treatment for all Predictors and
21:32:24 SQL> -- 2. Normalization
21:32:24 SQL> -- No outlier treatment will be performed during test and apply. The
21:32:24 SQL> -- normalization step is sufficient, since the normalization parameters
21:32:24 SQL> -- already capture the effects of outlier treatment done with build data.
21:32:24 SQL> --
21:32:24 SQL> BEGIN
21:32:24   2  	-- Xform Test data to replace missing values
21:32:24   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:32:24   4  	  miss_table_name => 'svmc_miss_num',
21:32:24   5  	  data_table_name => '&scoretable',
21:32:24   6  	  xform_view_name => 'xformed_apply_miss_num');
21:32:24   7  
21:32:24   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:32:24   9  	  miss_table_name => 'svmc_miss_cat',
21:32:24  10  	  data_table_name => '&scoretable',
21:32:24  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:32:24  12  
21:32:24  13  	-- Normalize the data to be scored
21:32:24  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:32:24  15  	  norm_table_name => 'svmc_norm',
21:32:24  16  	  data_table_name => '&scoretable',
21:32:24  17  	  xform_view_name => 'svmc_apply_prep');
21:32:24  18  END;
21:32:24  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
21:32:25 SQL> 
21:32:25 SQL> -- Use same model_name used in score_gattn.sql
21:32:25 SQL> DEFINE model_name = 'forex14'
21:32:25 SQL> 
21:32:25 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:32:25 SQL> 
21:32:25 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
21:32:25   2  SELECT
21:32:25   3  prdate
21:32:25   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:32:25   5  ,sysdate
21:32:25   6  ,SUBSTR(prdate,1,3)pair
21:32:25   7  ,SUBSTR(prdate,4,19)ydate
21:32:25   8  FROM svmc_apply_prep
21:32:25   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:32:26 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
