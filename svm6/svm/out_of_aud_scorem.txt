
SQL*Plus: Release 11.2.0.1.0 Production on Tue Dec 28 20:40:14 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

20:40:14 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
20:40:14 SQL> 20:40:14 SQL> @aud_score1day.sql  2010-12-28 20:20:00
20:40:14 SQL> --
20:40:14 SQL> -- aud_score1day.sql
20:40:14 SQL> --
20:40:14 SQL> 
20:40:14 SQL> CREATE OR REPLACE VIEW sme AS
20:40:14   2  SELECT
20:40:14   3  'aud'||m.ydate prdate
20:40:14   4  ,NULL gatt
20:40:14   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:40:14   6  ,eur_g00
20:40:14   7  ,eur_g01
20:40:14   8  ,eur_g02
20:40:14   9  ,eur_g03
20:40:14  10  ,eur_g04
20:40:14  11  ,eur_g05
20:40:14  12  ,eur_g06
20:40:14  13  ,eur_g07
20:40:14  14  ,eur_g08
20:40:14  15  ,eur_g09
20:40:14  16  ,eur_g10
20:40:14  17  ,eur_g11
20:40:14  18  ,eur_g12
20:40:14  19  ,eur_g13
20:40:14  20  ,eur_g14
20:40:14  21  ,eur_g15
20:40:14  22  ,eur_g16
20:40:14  23  ,eur_g17
20:40:14  24  ,eur_g18
20:40:14  25  ,eur_g19
20:40:14  26  ,eur_g20
20:40:14  27  ,eur_g21
20:40:14  28  ,eur_g22
20:40:14  29  ,eur_g23
20:40:14  30  ,eur_g24
20:40:14  31  ,eur_g25
20:40:14  32  ,eur_g26
20:40:14  33  ,eur_g27
20:40:14  34  ,eur_g28
20:40:14  35  ,eur_g29
20:40:14  36  ,eur_g30
20:40:14  37  ,eur_g31
20:40:14  38  ,eur_g32
20:40:14  39  ,eur_g33
20:40:14  40  ,eur_g34
20:40:14  41  ,eur_g35
20:40:14  42  ,eur_g36
20:40:14  43  ,eur_g37
20:40:14  44  ,eur_g38
20:40:14  45  ,eur_g39
20:40:14  46  ,eur_g40
20:40:14  47  ,eur_g41
20:40:14  48  ,aud_g00
20:40:14  49  ,aud_g01
20:40:14  50  ,aud_g02
20:40:14  51  ,aud_g03
20:40:14  52  ,aud_g04
20:40:14  53  ,aud_g05
20:40:14  54  ,aud_g06
20:40:14  55  ,aud_g07
20:40:14  56  ,aud_g08
20:40:14  57  ,aud_g09
20:40:14  58  ,aud_g10
20:40:14  59  ,aud_g11
20:40:14  60  ,aud_g12
20:40:14  61  ,aud_g13
20:40:14  62  ,aud_g14
20:40:14  63  ,aud_g15
20:40:14  64  ,aud_g16
20:40:14  65  ,aud_g17
20:40:14  66  ,aud_g18
20:40:14  67  ,aud_g19
20:40:14  68  ,aud_g20
20:40:14  69  ,aud_g21
20:40:14  70  ,aud_g22
20:40:14  71  ,aud_g23
20:40:14  72  ,aud_g24
20:40:14  73  ,aud_g25
20:40:14  74  ,aud_g26
20:40:14  75  ,aud_g27
20:40:14  76  ,aud_g28
20:40:14  77  ,aud_g29
20:40:14  78  ,aud_g30
20:40:14  79  ,aud_g31
20:40:14  80  ,aud_g32
20:40:14  81  ,aud_g33
20:40:14  82  ,aud_g34
20:40:14  83  ,aud_g35
20:40:14  84  ,aud_g36
20:40:14  85  ,aud_g37
20:40:14  86  ,aud_g38
20:40:14  87  ,aud_g39
20:40:14  88  ,aud_g40
20:40:14  89  ,aud_g41
20:40:14  90  ,gbp_g00
20:40:14  91  ,gbp_g01
20:40:14  92  ,gbp_g02
20:40:14  93  ,gbp_g03
20:40:14  94  ,gbp_g04
20:40:14  95  ,gbp_g05
20:40:14  96  ,gbp_g06
20:40:14  97  ,gbp_g07
20:40:14  98  ,gbp_g08
20:40:14  99  ,gbp_g09
20:40:14 100  ,gbp_g10
20:40:14 101  ,gbp_g11
20:40:14 102  ,gbp_g12
20:40:14 103  ,gbp_g13
20:40:14 104  ,gbp_g14
20:40:14 105  ,gbp_g15
20:40:14 106  ,gbp_g16
20:40:14 107  ,gbp_g17
20:40:14 108  ,gbp_g18
20:40:14 109  ,gbp_g19
20:40:14 110  ,gbp_g20
20:40:14 111  ,gbp_g21
20:40:14 112  ,gbp_g22
20:40:14 113  ,gbp_g23
20:40:14 114  ,gbp_g24
20:40:14 115  ,gbp_g25
20:40:14 116  ,gbp_g26
20:40:14 117  ,gbp_g27
20:40:14 118  ,gbp_g28
20:40:14 119  ,gbp_g29
20:40:14 120  ,gbp_g30
20:40:14 121  ,gbp_g31
20:40:14 122  ,gbp_g32
20:40:14 123  ,gbp_g33
20:40:14 124  ,gbp_g34
20:40:14 125  ,gbp_g35
20:40:14 126  ,gbp_g36
20:40:14 127  ,gbp_g37
20:40:14 128  ,gbp_g38
20:40:14 129  ,gbp_g39
20:40:14 130  ,gbp_g40
20:40:14 131  ,gbp_g41
20:40:14 132  ,jpy_g00
20:40:14 133  ,jpy_g01
20:40:14 134  ,jpy_g02
20:40:14 135  ,jpy_g03
20:40:14 136  ,jpy_g04
20:40:14 137  ,jpy_g05
20:40:14 138  ,jpy_g06
20:40:14 139  ,jpy_g07
20:40:14 140  ,jpy_g08
20:40:14 141  ,jpy_g09
20:40:14 142  ,jpy_g10
20:40:14 143  ,jpy_g11
20:40:14 144  ,jpy_g12
20:40:14 145  ,jpy_g13
20:40:14 146  ,jpy_g14
20:40:14 147  ,jpy_g15
20:40:14 148  ,jpy_g16
20:40:14 149  ,jpy_g17
20:40:14 150  ,jpy_g18
20:40:14 151  ,jpy_g19
20:40:14 152  ,jpy_g20
20:40:14 153  ,jpy_g21
20:40:14 154  ,jpy_g22
20:40:14 155  ,jpy_g23
20:40:14 156  ,jpy_g24
20:40:14 157  ,jpy_g25
20:40:14 158  ,jpy_g26
20:40:14 159  ,jpy_g27
20:40:14 160  ,jpy_g28
20:40:14 161  ,jpy_g29
20:40:14 162  ,jpy_g30
20:40:14 163  ,jpy_g31
20:40:14 164  ,jpy_g32
20:40:14 165  ,jpy_g33
20:40:14 166  ,jpy_g34
20:40:14 167  ,jpy_g35
20:40:14 168  ,jpy_g36
20:40:14 169  ,jpy_g37
20:40:14 170  ,jpy_g38
20:40:14 171  ,jpy_g39
20:40:14 172  ,jpy_g40
20:40:14 173  ,jpy_g41
20:40:14 174  ,cad_g00
20:40:14 175  ,cad_g01
20:40:14 176  ,cad_g02
20:40:14 177  ,cad_g03
20:40:14 178  ,cad_g04
20:40:14 179  ,cad_g05
20:40:14 180  ,cad_g06
20:40:14 181  ,cad_g07
20:40:14 182  ,cad_g08
20:40:14 183  ,cad_g09
20:40:14 184  ,cad_g10
20:40:14 185  ,cad_g11
20:40:14 186  ,cad_g12
20:40:14 187  ,cad_g13
20:40:14 188  ,cad_g14
20:40:14 189  ,cad_g15
20:40:14 190  ,cad_g16
20:40:14 191  ,cad_g17
20:40:14 192  ,cad_g18
20:40:14 193  ,cad_g19
20:40:14 194  ,cad_g20
20:40:14 195  ,cad_g21
20:40:14 196  ,cad_g22
20:40:14 197  ,cad_g23
20:40:14 198  ,cad_g24
20:40:14 199  ,cad_g25
20:40:14 200  ,cad_g26
20:40:14 201  ,cad_g27
20:40:14 202  ,cad_g28
20:40:14 203  ,cad_g29
20:40:14 204  ,cad_g30
20:40:14 205  ,cad_g31
20:40:14 206  ,cad_g32
20:40:14 207  ,cad_g33
20:40:14 208  ,cad_g34
20:40:14 209  ,cad_g35
20:40:14 210  ,cad_g36
20:40:14 211  ,cad_g37
20:40:14 212  ,cad_g38
20:40:14 213  ,cad_g39
20:40:14 214  ,cad_g40
20:40:14 215  ,cad_g41
20:40:14 216  ,chf_g00
20:40:14 217  ,chf_g01
20:40:14 218  ,chf_g02
20:40:14 219  ,chf_g03
20:40:14 220  ,chf_g04
20:40:14 221  ,chf_g05
20:40:14 222  ,chf_g06
20:40:14 223  ,chf_g07
20:40:14 224  ,chf_g08
20:40:14 225  ,chf_g09
20:40:14 226  ,chf_g10
20:40:14 227  ,chf_g11
20:40:14 228  ,chf_g12
20:40:14 229  ,chf_g13
20:40:14 230  ,chf_g14
20:40:14 231  ,chf_g15
20:40:14 232  ,chf_g16
20:40:14 233  ,chf_g17
20:40:14 234  ,chf_g18
20:40:14 235  ,chf_g19
20:40:14 236  ,chf_g20
20:40:14 237  ,chf_g21
20:40:14 238  ,chf_g22
20:40:14 239  ,chf_g23
20:40:14 240  ,chf_g24
20:40:14 241  ,chf_g25
20:40:14 242  ,chf_g26
20:40:14 243  ,chf_g27
20:40:14 244  ,chf_g28
20:40:14 245  ,chf_g29
20:40:14 246  ,chf_g30
20:40:14 247  ,chf_g31
20:40:14 248  ,chf_g32
20:40:14 249  ,chf_g33
20:40:14 250  ,chf_g34
20:40:14 251  ,chf_g35
20:40:14 252  ,chf_g36
20:40:14 253  ,chf_g37
20:40:14 254  ,chf_g38
20:40:14 255  ,chf_g39
20:40:14 256  ,chf_g40
20:40:14 257  ,chf_g41
20:40:14 258  FROM aud_ms6 m
20:40:14 259  WHERE m.ydate = '&1'||' '||'&2'
20:40:14 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-28'||' '||'20:20:00'

View created.

Elapsed: 00:00:00.12
20:40:14 SQL> 
20:40:14 SQL> -- rpt
20:40:14 SQL> -- We should see just 1 row:
20:40:14 SQL> 
20:40:14 SQL> SELECT COUNT(prdate) FROM sme
20:40:14   2  
20:40:14 SQL> -- Build the model:
20:40:14 SQL> CREATE OR REPLACE VIEW bme AS
20:40:14   2  SELECT
20:40:14   3  'aud'||m.ydate prdate
20:40:14   4  ,gatt
20:40:14   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:40:14   6  ,eur_g00
20:40:14   7  ,eur_g01
20:40:14   8  ,eur_g02
20:40:14   9  ,eur_g03
20:40:14  10  ,eur_g04
20:40:14  11  ,eur_g05
20:40:14  12  ,eur_g06
20:40:14  13  ,eur_g07
20:40:14  14  ,eur_g08
20:40:14  15  ,eur_g09
20:40:14  16  ,eur_g10
20:40:14  17  ,eur_g11
20:40:14  18  ,eur_g12
20:40:14  19  ,eur_g13
20:40:14  20  ,eur_g14
20:40:14  21  ,eur_g15
20:40:14  22  ,eur_g16
20:40:14  23  ,eur_g17
20:40:14  24  ,eur_g18
20:40:14  25  ,eur_g19
20:40:14  26  ,eur_g20
20:40:14  27  ,eur_g21
20:40:14  28  ,eur_g22
20:40:14  29  ,eur_g23
20:40:14  30  ,eur_g24
20:40:14  31  ,eur_g25
20:40:14  32  ,eur_g26
20:40:14  33  ,eur_g27
20:40:14  34  ,eur_g28
20:40:14  35  ,eur_g29
20:40:14  36  ,eur_g30
20:40:14  37  ,eur_g31
20:40:14  38  ,eur_g32
20:40:14  39  ,eur_g33
20:40:14  40  ,eur_g34
20:40:14  41  ,eur_g35
20:40:14  42  ,eur_g36
20:40:14  43  ,eur_g37
20:40:14  44  ,eur_g38
20:40:14  45  ,eur_g39
20:40:14  46  ,eur_g40
20:40:14  47  ,eur_g41
20:40:14  48  ,aud_g00
20:40:14  49  ,aud_g01
20:40:14  50  ,aud_g02
20:40:14  51  ,aud_g03
20:40:14  52  ,aud_g04
20:40:14  53  ,aud_g05
20:40:14  54  ,aud_g06
20:40:14  55  ,aud_g07
20:40:14  56  ,aud_g08
20:40:14  57  ,aud_g09
20:40:14  58  ,aud_g10
20:40:14  59  ,aud_g11
20:40:14  60  ,aud_g12
20:40:14  61  ,aud_g13
20:40:14  62  ,aud_g14
20:40:14  63  ,aud_g15
20:40:14  64  ,aud_g16
20:40:14  65  ,aud_g17
20:40:14  66  ,aud_g18
20:40:14  67  ,aud_g19
20:40:14  68  ,aud_g20
20:40:14  69  ,aud_g21
20:40:14  70  ,aud_g22
20:40:14  71  ,aud_g23
20:40:14  72  ,aud_g24
20:40:14  73  ,aud_g25
20:40:14  74  ,aud_g26
20:40:14  75  ,aud_g27
20:40:14  76  ,aud_g28
20:40:14  77  ,aud_g29
20:40:14  78  ,aud_g30
20:40:14  79  ,aud_g31
20:40:14  80  ,aud_g32
20:40:14  81  ,aud_g33
20:40:14  82  ,aud_g34
20:40:14  83  ,aud_g35
20:40:14  84  ,aud_g36
20:40:14  85  ,aud_g37
20:40:14  86  ,aud_g38
20:40:14  87  ,aud_g39
20:40:14  88  ,aud_g40
20:40:14  89  ,aud_g41
20:40:14  90  ,gbp_g00
20:40:14  91  ,gbp_g01
20:40:14  92  ,gbp_g02
20:40:14  93  ,gbp_g03
20:40:14  94  ,gbp_g04
20:40:14  95  ,gbp_g05
20:40:14  96  ,gbp_g06
20:40:14  97  ,gbp_g07
20:40:14  98  ,gbp_g08
20:40:14  99  ,gbp_g09
20:40:14 100  ,gbp_g10
20:40:14 101  ,gbp_g11
20:40:14 102  ,gbp_g12
20:40:14 103  ,gbp_g13
20:40:14 104  ,gbp_g14
20:40:14 105  ,gbp_g15
20:40:14 106  ,gbp_g16
20:40:14 107  ,gbp_g17
20:40:14 108  ,gbp_g18
20:40:14 109  ,gbp_g19
20:40:14 110  ,gbp_g20
20:40:14 111  ,gbp_g21
20:40:14 112  ,gbp_g22
20:40:14 113  ,gbp_g23
20:40:14 114  ,gbp_g24
20:40:14 115  ,gbp_g25
20:40:14 116  ,gbp_g26
20:40:14 117  ,gbp_g27
20:40:14 118  ,gbp_g28
20:40:14 119  ,gbp_g29
20:40:14 120  ,gbp_g30
20:40:14 121  ,gbp_g31
20:40:14 122  ,gbp_g32
20:40:14 123  ,gbp_g33
20:40:14 124  ,gbp_g34
20:40:14 125  ,gbp_g35
20:40:14 126  ,gbp_g36
20:40:14 127  ,gbp_g37
20:40:14 128  ,gbp_g38
20:40:14 129  ,gbp_g39
20:40:14 130  ,gbp_g40
20:40:14 131  ,gbp_g41
20:40:14 132  ,jpy_g00
20:40:14 133  ,jpy_g01
20:40:14 134  ,jpy_g02
20:40:14 135  ,jpy_g03
20:40:14 136  ,jpy_g04
20:40:14 137  ,jpy_g05
20:40:14 138  ,jpy_g06
20:40:14 139  ,jpy_g07
20:40:14 140  ,jpy_g08
20:40:14 141  ,jpy_g09
20:40:14 142  ,jpy_g10
20:40:14 143  ,jpy_g11
20:40:14 144  ,jpy_g12
20:40:14 145  ,jpy_g13
20:40:14 146  ,jpy_g14
20:40:14 147  ,jpy_g15
20:40:14 148  ,jpy_g16
20:40:14 149  ,jpy_g17
20:40:14 150  ,jpy_g18
20:40:14 151  ,jpy_g19
20:40:14 152  ,jpy_g20
20:40:14 153  ,jpy_g21
20:40:14 154  ,jpy_g22
20:40:14 155  ,jpy_g23
20:40:14 156  ,jpy_g24
20:40:14 157  ,jpy_g25
20:40:14 158  ,jpy_g26
20:40:14 159  ,jpy_g27
20:40:14 160  ,jpy_g28
20:40:14 161  ,jpy_g29
20:40:14 162  ,jpy_g30
20:40:14 163  ,jpy_g31
20:40:14 164  ,jpy_g32
20:40:14 165  ,jpy_g33
20:40:14 166  ,jpy_g34
20:40:14 167  ,jpy_g35
20:40:14 168  ,jpy_g36
20:40:14 169  ,jpy_g37
20:40:14 170  ,jpy_g38
20:40:14 171  ,jpy_g39
20:40:14 172  ,jpy_g40
20:40:14 173  ,jpy_g41
20:40:14 174  ,cad_g00
20:40:14 175  ,cad_g01
20:40:14 176  ,cad_g02
20:40:14 177  ,cad_g03
20:40:14 178  ,cad_g04
20:40:14 179  ,cad_g05
20:40:14 180  ,cad_g06
20:40:14 181  ,cad_g07
20:40:14 182  ,cad_g08
20:40:14 183  ,cad_g09
20:40:14 184  ,cad_g10
20:40:14 185  ,cad_g11
20:40:14 186  ,cad_g12
20:40:14 187  ,cad_g13
20:40:14 188  ,cad_g14
20:40:14 189  ,cad_g15
20:40:14 190  ,cad_g16
20:40:14 191  ,cad_g17
20:40:14 192  ,cad_g18
20:40:14 193  ,cad_g19
20:40:14 194  ,cad_g20
20:40:14 195  ,cad_g21
20:40:14 196  ,cad_g22
20:40:14 197  ,cad_g23
20:40:14 198  ,cad_g24
20:40:14 199  ,cad_g25
20:40:14 200  ,cad_g26
20:40:14 201  ,cad_g27
20:40:14 202  ,cad_g28
20:40:14 203  ,cad_g29
20:40:14 204  ,cad_g30
20:40:14 205  ,cad_g31
20:40:14 206  ,cad_g32
20:40:14 207  ,cad_g33
20:40:14 208  ,cad_g34
20:40:14 209  ,cad_g35
20:40:14 210  ,cad_g36
20:40:14 211  ,cad_g37
20:40:14 212  ,cad_g38
20:40:14 213  ,cad_g39
20:40:14 214  ,cad_g40
20:40:14 215  ,cad_g41
20:40:14 216  ,chf_g00
20:40:14 217  ,chf_g01
20:40:14 218  ,chf_g02
20:40:14 219  ,chf_g03
20:40:14 220  ,chf_g04
20:40:14 221  ,chf_g05
20:40:14 222  ,chf_g06
20:40:14 223  ,chf_g07
20:40:14 224  ,chf_g08
20:40:14 225  ,chf_g09
20:40:14 226  ,chf_g10
20:40:14 227  ,chf_g11
20:40:14 228  ,chf_g12
20:40:14 229  ,chf_g13
20:40:14 230  ,chf_g14
20:40:14 231  ,chf_g15
20:40:14 232  ,chf_g16
20:40:14 233  ,chf_g17
20:40:14 234  ,chf_g18
20:40:14 235  ,chf_g19
20:40:14 236  ,chf_g20
20:40:14 237  ,chf_g21
20:40:14 238  ,chf_g22
20:40:14 239  ,chf_g23
20:40:14 240  ,chf_g24
20:40:14 241  ,chf_g25
20:40:14 242  ,chf_g26
20:40:14 243  ,chf_g27
20:40:14 244  ,chf_g28
20:40:14 245  ,chf_g29
20:40:14 246  ,chf_g30
20:40:14 247  ,chf_g31
20:40:14 248  ,chf_g32
20:40:14 249  ,chf_g33
20:40:14 250  ,chf_g34
20:40:14 251  ,chf_g35
20:40:14 252  ,chf_g36
20:40:14 253  ,chf_g37
20:40:14 254  ,chf_g38
20:40:14 255  ,chf_g39
20:40:14 256  ,chf_g40
20:40:14 257  ,chf_g41
20:40:14 258  FROM aud_ms6 m
20:40:14 259  WHERE gatt IN('nup','up')
20:40:14 260  AND 1+m.ydate < '&1'||' '||'&2'
20:40:14 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-28'||' '||'20:20:00'

View created.

Elapsed: 00:00:00.13
20:40:14 SQL> 
20:40:14 SQL> -- rpt
20:40:14 SQL> 
20:40:14 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
20:40:14   2  
20:40:14 SQL> SELECT MAX(prdate) FROM bme
20:40:14   2  
20:40:14 SQL> -- Now build model from bme and score sme
20:40:14 SQL> @score1.sql
20:40:14 SQL> -- score1.sql
20:40:14 SQL> 
20:40:14 SQL> -- Does the 1st SVM score
20:40:14 SQL> 
20:40:14 SQL> -- Fill up svmc_apply_prep
20:40:14 SQL> @score.sql
20:40:14 SQL> --
20:40:14 SQL> -- score.sql
20:40:14 SQL> --
20:40:14 SQL> 
20:40:14 SQL> -- usage: score.sql
20:40:14 SQL> 
20:40:14 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:40:14 SQL> 
20:40:14 SQL> DEFINE target	= 'gatt'
20:40:14 SQL> DEFINE model_name = 'forex14'
20:40:14 SQL> DEFINE bldtable	= 'bme'
20:40:14 SQL> DEFINE scoretable = 'sme'
20:40:14 SQL> DEFINE case_id	= 'prdate'
20:40:14 SQL> 
20:40:14 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:40:14 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:40:14 SQL> 
20:40:14 SQL> -- Builds an SVM model using pl/sql.
20:40:14 SQL> 
20:40:14 SQL> -----------------------------------------------------------------------
20:40:14 SQL> --			    BUILD THE MODEL
20:40:14 SQL> -----------------------------------------------------------------------
20:40:14 SQL> 
20:40:14 SQL> -- Cleanup old build data preparation objects for repeat runs
20:40:14 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
20:40:14 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:40:14 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
20:40:14 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
20:40:14 SQL> 
20:40:14 SQL> 
20:40:14 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:40:14 SQL> --
20:40:14 SQL> -- DROP	TABLE svmc_settings ;
20:40:14 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:40:14 SQL> -- DELETE svmc_settings;
20:40:14 SQL> 
20:40:14 SQL> -- The default classification algorithm is Naive Bayes. So override
20:40:14 SQL> -- this choice to SVM using a settings table.
20:40:14 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:40:14 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:40:14 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:40:14 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:40:14 SQL> -- models.
20:40:14 SQL> --
20:40:14 SQL> 
20:40:14 SQL> -- Do this once and then comment it out.
20:40:14 SQL> -- That makes script go faster.
20:40:14 SQL> -- BEGIN
20:40:14 SQL> -- -- Populate settings table
20:40:14 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:40:14 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:40:14 SQL> --
20:40:14 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:40:14 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:40:14 SQL> --
20:40:14 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:40:14 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:40:14 SQL> --   COMMIT;
20:40:14 SQL> -- END;
20:40:14 SQL> -- /
20:40:14 SQL> 
20:40:14 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
20:40:14 SQL> 
20:40:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:40:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:40:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:40:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:40:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:40:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:40:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:40:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:40:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:40:15 SQL> 
20:40:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:40:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:40:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
20:40:15 SQL> 
20:40:15 SQL> --------------------------------
20:40:15 SQL> -- PREPARE BUILD (TRAINING) DATA
20:40:15 SQL> --
20:40:15 SQL> 
20:40:15 SQL> -- 1. Missing Value treatment for all Predictors and
20:40:15 SQL> -- 2. Outlier Treatment and
20:40:15 SQL> -- 3. Normalization are performed below.
20:40:15 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:40:15 SQL> --    normalized here.
20:40:15 SQL> 
20:40:15 SQL> BEGIN
20:40:15   2  	-- Perform missing value treatment for all predictors
20:40:15   3  	-- create miss tables
20:40:15   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:40:15   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:40:15   6  
20:40:15   7  	-- populate miss tables
20:40:15   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:40:15   9  	  miss_table_name => 'svmc_miss_num',
20:40:15  10  	  data_table_name => '&bldtable',
20:40:15  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:40:15  12  
20:40:15  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:40:15  14  	  miss_table_name => 'svmc_miss_cat',
20:40:15  15  	  data_table_name => '&bldtable',
20:40:15  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:40:15  17  
20:40:15  18  	-- xform input data to replace missing values
20:40:15  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:40:15  20  	  miss_table_name => 'svmc_miss_num',
20:40:15  21  	  data_table_name => '&bldtable',
20:40:15  22  	  xform_view_name => 'xformed_build_miss_num');
20:40:15  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:40:15  24  	  miss_table_name => 'svmc_miss_cat',
20:40:15  25  	  data_table_name => '&bldtable',
20:40:15  26  	  xform_view_name => 'xformed_build_miss_cat');
20:40:15  27  
20:40:15  28  	-- Perform outlier treatment.
20:40:15  29  	-- create clip table
20:40:15  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:40:15  31  
20:40:15  32  	-- populate clip table
20:40:15  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:40:15  34  	  clip_table_name => 'svmc_clip',
20:40:15  35  	  data_table_name => '&bldtable',
20:40:15  36  	  tail_frac	  => 0.025,
20:40:15  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:40:15  38  
20:40:15  39  	-- xform input data to winsorized data
20:40:15  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:40:15  41  	  clip_table_name => 'svmc_clip',
20:40:15  42  	  data_table_name => '&bldtable',
20:40:15  43  	  xform_view_name => 'svmc_winsor');
20:40:15  44  
20:40:15  45  	-- create normalization table
20:40:15  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:40:15  47  
20:40:15  48  	-- populate normalization table based on winsorized data
20:40:15  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:40:15  50  	  norm_table_name => 'svmc_norm',
20:40:15  51  	  data_table_name => 'svmc_winsor',
20:40:15  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:40:15  53  
20:40:15  54  	-- normalize the original data
20:40:15  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:40:15  56  	  norm_table_name => 'svmc_norm',
20:40:15  57  	  data_table_name => '&bldtable',
20:40:15  58  	  xform_view_name => 'svmc_build_prep');
20:40:15  59  END;
20:40:15  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.95
20:40:33 SQL> 
20:40:33 SQL> ---------------------
20:40:33 SQL> -- CREATE A NEW MODEL
20:40:33 SQL> --
20:40:33 SQL> -- Cleanup old model with the same name for repeat runs
20:40:33 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:40:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:40:33   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.56
20:40:33 SQL> 
20:40:33 SQL> -- Build a new SVM Model
20:40:33 SQL> BEGIN
20:40:33   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:40:33   3  	  model_name	      => '&model_name',
20:40:33   4  	  mining_function     => dbms_data_mining.classification,
20:40:33   5  	  data_table_name     => 'svmc_build_prep',
20:40:33   6  	  case_id_column_name => '&case_id',
20:40:33   7  	  target_column_name  => '&target',
20:40:33   8  	  settings_table_name => 'svmc_settings');
20:40:33   9  END;
20:40:33  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.01
20:41:00 SQL> 
20:41:00 SQL> -----------------------------------------------------------------------
20:41:00 SQL> --			       APPLY/score THE MODEL
20:41:00 SQL> -----------------------------------------------------------------------
20:41:00 SQL> 
20:41:00 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:41:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:41:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
20:41:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:41:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:41:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:41:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:41:00 SQL> -----------------------
20:41:00 SQL> -- PREPARE SCORING DATA
20:41:00 SQL> --
20:41:00 SQL> -- If the data for model creation has been prepared, then the data
20:41:00 SQL> -- to be scored using the model must be prepared in the same manner
20:41:00 SQL> -- in order to obtain meaningful results.
20:41:00 SQL> --
20:41:00 SQL> -- 1. Missing Value treatment for all Predictors and
20:41:00 SQL> -- 2. Normalization
20:41:00 SQL> -- No outlier treatment will be performed during test and apply. The
20:41:00 SQL> -- normalization step is sufficient, since the normalization parameters
20:41:00 SQL> -- already capture the effects of outlier treatment done with build data.
20:41:00 SQL> --
20:41:00 SQL> BEGIN
20:41:00   2  	-- Xform Test data to replace missing values
20:41:00   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:41:00   4  	  miss_table_name => 'svmc_miss_num',
20:41:00   5  	  data_table_name => '&scoretable',
20:41:00   6  	  xform_view_name => 'xformed_apply_miss_num');
20:41:00   7  
20:41:00   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:41:00   9  	  miss_table_name => 'svmc_miss_cat',
20:41:00  10  	  data_table_name => '&scoretable',
20:41:00  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:41:00  12  
20:41:00  13  	-- Normalize the data to be scored
20:41:00  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:41:00  15  	  norm_table_name => 'svmc_norm',
20:41:00  16  	  data_table_name => '&scoretable',
20:41:00  17  	  xform_view_name => 'svmc_apply_prep');
20:41:00  18  END;
20:41:00  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.25
20:41:02 SQL> 
20:41:02 SQL> -- Use same model_name used in score.sql
20:41:02 SQL> DEFINE model_name = 'forex14'
20:41:02 SQL> 
20:41:02 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
20:41:02 SQL> 
20:41:02 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
20:41:02 SQL> 
20:41:02 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
20:41:02   2  SELECT
20:41:02   3  prdate
20:41:02   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:41:02   5  ,sysdate
20:41:02   6  ,SUBSTR(prdate,1,3)pair
20:41:02   7  ,SUBSTR(prdate,4,19)ydate
20:41:02   8  FROM svmc_apply_prep
20:41:02   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
20:41:02 SQL> @aud_score1day.sql  2010-12-28 20:25:00
20:41:02 SQL> --
20:41:02 SQL> -- aud_score1day.sql
20:41:02 SQL> --
20:41:02 SQL> 
20:41:02 SQL> CREATE OR REPLACE VIEW sme AS
20:41:02   2  SELECT
20:41:02   3  'aud'||m.ydate prdate
20:41:02   4  ,NULL gatt
20:41:02   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:41:02   6  ,eur_g00
20:41:02   7  ,eur_g01
20:41:02   8  ,eur_g02
20:41:02   9  ,eur_g03
20:41:02  10  ,eur_g04
20:41:02  11  ,eur_g05
20:41:02  12  ,eur_g06
20:41:02  13  ,eur_g07
20:41:02  14  ,eur_g08
20:41:02  15  ,eur_g09
20:41:02  16  ,eur_g10
20:41:02  17  ,eur_g11
20:41:02  18  ,eur_g12
20:41:02  19  ,eur_g13
20:41:02  20  ,eur_g14
20:41:02  21  ,eur_g15
20:41:02  22  ,eur_g16
20:41:02  23  ,eur_g17
20:41:02  24  ,eur_g18
20:41:02  25  ,eur_g19
20:41:02  26  ,eur_g20
20:41:02  27  ,eur_g21
20:41:02  28  ,eur_g22
20:41:02  29  ,eur_g23
20:41:02  30  ,eur_g24
20:41:02  31  ,eur_g25
20:41:02  32  ,eur_g26
20:41:02  33  ,eur_g27
20:41:02  34  ,eur_g28
20:41:02  35  ,eur_g29
20:41:02  36  ,eur_g30
20:41:02  37  ,eur_g31
20:41:02  38  ,eur_g32
20:41:02  39  ,eur_g33
20:41:02  40  ,eur_g34
20:41:02  41  ,eur_g35
20:41:02  42  ,eur_g36
20:41:02  43  ,eur_g37
20:41:02  44  ,eur_g38
20:41:02  45  ,eur_g39
20:41:02  46  ,eur_g40
20:41:02  47  ,eur_g41
20:41:02  48  ,aud_g00
20:41:02  49  ,aud_g01
20:41:02  50  ,aud_g02
20:41:02  51  ,aud_g03
20:41:02  52  ,aud_g04
20:41:02  53  ,aud_g05
20:41:02  54  ,aud_g06
20:41:02  55  ,aud_g07
20:41:02  56  ,aud_g08
20:41:02  57  ,aud_g09
20:41:02  58  ,aud_g10
20:41:02  59  ,aud_g11
20:41:02  60  ,aud_g12
20:41:02  61  ,aud_g13
20:41:02  62  ,aud_g14
20:41:02  63  ,aud_g15
20:41:02  64  ,aud_g16
20:41:02  65  ,aud_g17
20:41:02  66  ,aud_g18
20:41:02  67  ,aud_g19
20:41:02  68  ,aud_g20
20:41:02  69  ,aud_g21
20:41:02  70  ,aud_g22
20:41:02  71  ,aud_g23
20:41:02  72  ,aud_g24
20:41:02  73  ,aud_g25
20:41:02  74  ,aud_g26
20:41:02  75  ,aud_g27
20:41:02  76  ,aud_g28
20:41:02  77  ,aud_g29
20:41:02  78  ,aud_g30
20:41:02  79  ,aud_g31
20:41:02  80  ,aud_g32
20:41:02  81  ,aud_g33
20:41:02  82  ,aud_g34
20:41:02  83  ,aud_g35
20:41:02  84  ,aud_g36
20:41:02  85  ,aud_g37
20:41:02  86  ,aud_g38
20:41:02  87  ,aud_g39
20:41:02  88  ,aud_g40
20:41:02  89  ,aud_g41
20:41:02  90  ,gbp_g00
20:41:02  91  ,gbp_g01
20:41:02  92  ,gbp_g02
20:41:02  93  ,gbp_g03
20:41:02  94  ,gbp_g04
20:41:02  95  ,gbp_g05
20:41:02  96  ,gbp_g06
20:41:02  97  ,gbp_g07
20:41:02  98  ,gbp_g08
20:41:02  99  ,gbp_g09
20:41:02 100  ,gbp_g10
20:41:02 101  ,gbp_g11
20:41:02 102  ,gbp_g12
20:41:02 103  ,gbp_g13
20:41:02 104  ,gbp_g14
20:41:02 105  ,gbp_g15
20:41:02 106  ,gbp_g16
20:41:02 107  ,gbp_g17
20:41:02 108  ,gbp_g18
20:41:02 109  ,gbp_g19
20:41:02 110  ,gbp_g20
20:41:02 111  ,gbp_g21
20:41:02 112  ,gbp_g22
20:41:02 113  ,gbp_g23
20:41:02 114  ,gbp_g24
20:41:02 115  ,gbp_g25
20:41:02 116  ,gbp_g26
20:41:02 117  ,gbp_g27
20:41:02 118  ,gbp_g28
20:41:02 119  ,gbp_g29
20:41:02 120  ,gbp_g30
20:41:02 121  ,gbp_g31
20:41:02 122  ,gbp_g32
20:41:02 123  ,gbp_g33
20:41:02 124  ,gbp_g34
20:41:02 125  ,gbp_g35
20:41:02 126  ,gbp_g36
20:41:02 127  ,gbp_g37
20:41:02 128  ,gbp_g38
20:41:02 129  ,gbp_g39
20:41:02 130  ,gbp_g40
20:41:02 131  ,gbp_g41
20:41:02 132  ,jpy_g00
20:41:02 133  ,jpy_g01
20:41:02 134  ,jpy_g02
20:41:02 135  ,jpy_g03
20:41:02 136  ,jpy_g04
20:41:02 137  ,jpy_g05
20:41:02 138  ,jpy_g06
20:41:02 139  ,jpy_g07
20:41:02 140  ,jpy_g08
20:41:02 141  ,jpy_g09
20:41:02 142  ,jpy_g10
20:41:02 143  ,jpy_g11
20:41:02 144  ,jpy_g12
20:41:02 145  ,jpy_g13
20:41:02 146  ,jpy_g14
20:41:02 147  ,jpy_g15
20:41:02 148  ,jpy_g16
20:41:02 149  ,jpy_g17
20:41:02 150  ,jpy_g18
20:41:02 151  ,jpy_g19
20:41:02 152  ,jpy_g20
20:41:02 153  ,jpy_g21
20:41:02 154  ,jpy_g22
20:41:02 155  ,jpy_g23
20:41:02 156  ,jpy_g24
20:41:02 157  ,jpy_g25
20:41:02 158  ,jpy_g26
20:41:02 159  ,jpy_g27
20:41:02 160  ,jpy_g28
20:41:02 161  ,jpy_g29
20:41:02 162  ,jpy_g30
20:41:02 163  ,jpy_g31
20:41:02 164  ,jpy_g32
20:41:02 165  ,jpy_g33
20:41:02 166  ,jpy_g34
20:41:02 167  ,jpy_g35
20:41:02 168  ,jpy_g36
20:41:02 169  ,jpy_g37
20:41:02 170  ,jpy_g38
20:41:02 171  ,jpy_g39
20:41:02 172  ,jpy_g40
20:41:02 173  ,jpy_g41
20:41:02 174  ,cad_g00
20:41:02 175  ,cad_g01
20:41:02 176  ,cad_g02
20:41:02 177  ,cad_g03
20:41:02 178  ,cad_g04
20:41:02 179  ,cad_g05
20:41:02 180  ,cad_g06
20:41:02 181  ,cad_g07
20:41:02 182  ,cad_g08
20:41:02 183  ,cad_g09
20:41:02 184  ,cad_g10
20:41:02 185  ,cad_g11
20:41:02 186  ,cad_g12
20:41:02 187  ,cad_g13
20:41:02 188  ,cad_g14
20:41:02 189  ,cad_g15
20:41:02 190  ,cad_g16
20:41:02 191  ,cad_g17
20:41:02 192  ,cad_g18
20:41:02 193  ,cad_g19
20:41:02 194  ,cad_g20
20:41:02 195  ,cad_g21
20:41:02 196  ,cad_g22
20:41:02 197  ,cad_g23
20:41:02 198  ,cad_g24
20:41:02 199  ,cad_g25
20:41:02 200  ,cad_g26
20:41:02 201  ,cad_g27
20:41:02 202  ,cad_g28
20:41:02 203  ,cad_g29
20:41:02 204  ,cad_g30
20:41:02 205  ,cad_g31
20:41:02 206  ,cad_g32
20:41:02 207  ,cad_g33
20:41:02 208  ,cad_g34
20:41:02 209  ,cad_g35
20:41:02 210  ,cad_g36
20:41:02 211  ,cad_g37
20:41:02 212  ,cad_g38
20:41:02 213  ,cad_g39
20:41:02 214  ,cad_g40
20:41:02 215  ,cad_g41
20:41:02 216  ,chf_g00
20:41:02 217  ,chf_g01
20:41:02 218  ,chf_g02
20:41:02 219  ,chf_g03
20:41:02 220  ,chf_g04
20:41:02 221  ,chf_g05
20:41:02 222  ,chf_g06
20:41:02 223  ,chf_g07
20:41:02 224  ,chf_g08
20:41:02 225  ,chf_g09
20:41:02 226  ,chf_g10
20:41:02 227  ,chf_g11
20:41:02 228  ,chf_g12
20:41:02 229  ,chf_g13
20:41:02 230  ,chf_g14
20:41:02 231  ,chf_g15
20:41:02 232  ,chf_g16
20:41:02 233  ,chf_g17
20:41:02 234  ,chf_g18
20:41:02 235  ,chf_g19
20:41:02 236  ,chf_g20
20:41:02 237  ,chf_g21
20:41:02 238  ,chf_g22
20:41:02 239  ,chf_g23
20:41:02 240  ,chf_g24
20:41:02 241  ,chf_g25
20:41:02 242  ,chf_g26
20:41:02 243  ,chf_g27
20:41:02 244  ,chf_g28
20:41:02 245  ,chf_g29
20:41:02 246  ,chf_g30
20:41:02 247  ,chf_g31
20:41:02 248  ,chf_g32
20:41:02 249  ,chf_g33
20:41:02 250  ,chf_g34
20:41:02 251  ,chf_g35
20:41:02 252  ,chf_g36
20:41:02 253  ,chf_g37
20:41:02 254  ,chf_g38
20:41:02 255  ,chf_g39
20:41:02 256  ,chf_g40
20:41:02 257  ,chf_g41
20:41:02 258  FROM aud_ms6 m
20:41:02 259  WHERE m.ydate = '&1'||' '||'&2'
20:41:02 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-28'||' '||'20:25:00'

View created.

Elapsed: 00:00:00.12
20:41:02 SQL> 
20:41:02 SQL> -- rpt
20:41:02 SQL> -- We should see just 1 row:
20:41:02 SQL> 
20:41:02 SQL> SELECT COUNT(prdate) FROM sme
20:41:02   2  
20:41:02 SQL> -- Build the model:
20:41:02 SQL> CREATE OR REPLACE VIEW bme AS
20:41:02   2  SELECT
20:41:02   3  'aud'||m.ydate prdate
20:41:02   4  ,gatt
20:41:02   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:41:02   6  ,eur_g00
20:41:02   7  ,eur_g01
20:41:02   8  ,eur_g02
20:41:02   9  ,eur_g03
20:41:02  10  ,eur_g04
20:41:02  11  ,eur_g05
20:41:02  12  ,eur_g06
20:41:02  13  ,eur_g07
20:41:02  14  ,eur_g08
20:41:02  15  ,eur_g09
20:41:02  16  ,eur_g10
20:41:02  17  ,eur_g11
20:41:02  18  ,eur_g12
20:41:02  19  ,eur_g13
20:41:02  20  ,eur_g14
20:41:02  21  ,eur_g15
20:41:02  22  ,eur_g16
20:41:02  23  ,eur_g17
20:41:02  24  ,eur_g18
20:41:02  25  ,eur_g19
20:41:02  26  ,eur_g20
20:41:02  27  ,eur_g21
20:41:02  28  ,eur_g22
20:41:02  29  ,eur_g23
20:41:02  30  ,eur_g24
20:41:02  31  ,eur_g25
20:41:02  32  ,eur_g26
20:41:02  33  ,eur_g27
20:41:02  34  ,eur_g28
20:41:02  35  ,eur_g29
20:41:02  36  ,eur_g30
20:41:02  37  ,eur_g31
20:41:02  38  ,eur_g32
20:41:02  39  ,eur_g33
20:41:02  40  ,eur_g34
20:41:02  41  ,eur_g35
20:41:02  42  ,eur_g36
20:41:02  43  ,eur_g37
20:41:02  44  ,eur_g38
20:41:02  45  ,eur_g39
20:41:02  46  ,eur_g40
20:41:02  47  ,eur_g41
20:41:02  48  ,aud_g00
20:41:02  49  ,aud_g01
20:41:02  50  ,aud_g02
20:41:02  51  ,aud_g03
20:41:02  52  ,aud_g04
20:41:02  53  ,aud_g05
20:41:02  54  ,aud_g06
20:41:02  55  ,aud_g07
20:41:02  56  ,aud_g08
20:41:02  57  ,aud_g09
20:41:02  58  ,aud_g10
20:41:02  59  ,aud_g11
20:41:02  60  ,aud_g12
20:41:02  61  ,aud_g13
20:41:02  62  ,aud_g14
20:41:02  63  ,aud_g15
20:41:02  64  ,aud_g16
20:41:02  65  ,aud_g17
20:41:02  66  ,aud_g18
20:41:02  67  ,aud_g19
20:41:02  68  ,aud_g20
20:41:02  69  ,aud_g21
20:41:02  70  ,aud_g22
20:41:02  71  ,aud_g23
20:41:02  72  ,aud_g24
20:41:02  73  ,aud_g25
20:41:02  74  ,aud_g26
20:41:02  75  ,aud_g27
20:41:02  76  ,aud_g28
20:41:02  77  ,aud_g29
20:41:02  78  ,aud_g30
20:41:02  79  ,aud_g31
20:41:02  80  ,aud_g32
20:41:02  81  ,aud_g33
20:41:02  82  ,aud_g34
20:41:02  83  ,aud_g35
20:41:02  84  ,aud_g36
20:41:02  85  ,aud_g37
20:41:02  86  ,aud_g38
20:41:02  87  ,aud_g39
20:41:02  88  ,aud_g40
20:41:02  89  ,aud_g41
20:41:02  90  ,gbp_g00
20:41:02  91  ,gbp_g01
20:41:02  92  ,gbp_g02
20:41:02  93  ,gbp_g03
20:41:02  94  ,gbp_g04
20:41:02  95  ,gbp_g05
20:41:02  96  ,gbp_g06
20:41:02  97  ,gbp_g07
20:41:02  98  ,gbp_g08
20:41:02  99  ,gbp_g09
20:41:02 100  ,gbp_g10
20:41:02 101  ,gbp_g11
20:41:02 102  ,gbp_g12
20:41:02 103  ,gbp_g13
20:41:02 104  ,gbp_g14
20:41:02 105  ,gbp_g15
20:41:02 106  ,gbp_g16
20:41:02 107  ,gbp_g17
20:41:02 108  ,gbp_g18
20:41:02 109  ,gbp_g19
20:41:02 110  ,gbp_g20
20:41:02 111  ,gbp_g21
20:41:02 112  ,gbp_g22
20:41:02 113  ,gbp_g23
20:41:02 114  ,gbp_g24
20:41:02 115  ,gbp_g25
20:41:02 116  ,gbp_g26
20:41:02 117  ,gbp_g27
20:41:02 118  ,gbp_g28
20:41:02 119  ,gbp_g29
20:41:02 120  ,gbp_g30
20:41:02 121  ,gbp_g31
20:41:02 122  ,gbp_g32
20:41:02 123  ,gbp_g33
20:41:02 124  ,gbp_g34
20:41:02 125  ,gbp_g35
20:41:02 126  ,gbp_g36
20:41:02 127  ,gbp_g37
20:41:02 128  ,gbp_g38
20:41:02 129  ,gbp_g39
20:41:02 130  ,gbp_g40
20:41:02 131  ,gbp_g41
20:41:02 132  ,jpy_g00
20:41:02 133  ,jpy_g01
20:41:02 134  ,jpy_g02
20:41:02 135  ,jpy_g03
20:41:02 136  ,jpy_g04
20:41:02 137  ,jpy_g05
20:41:02 138  ,jpy_g06
20:41:02 139  ,jpy_g07
20:41:02 140  ,jpy_g08
20:41:02 141  ,jpy_g09
20:41:02 142  ,jpy_g10
20:41:02 143  ,jpy_g11
20:41:02 144  ,jpy_g12
20:41:02 145  ,jpy_g13
20:41:02 146  ,jpy_g14
20:41:02 147  ,jpy_g15
20:41:02 148  ,jpy_g16
20:41:02 149  ,jpy_g17
20:41:02 150  ,jpy_g18
20:41:02 151  ,jpy_g19
20:41:02 152  ,jpy_g20
20:41:02 153  ,jpy_g21
20:41:02 154  ,jpy_g22
20:41:02 155  ,jpy_g23
20:41:02 156  ,jpy_g24
20:41:02 157  ,jpy_g25
20:41:02 158  ,jpy_g26
20:41:02 159  ,jpy_g27
20:41:02 160  ,jpy_g28
20:41:02 161  ,jpy_g29
20:41:02 162  ,jpy_g30
20:41:02 163  ,jpy_g31
20:41:02 164  ,jpy_g32
20:41:02 165  ,jpy_g33
20:41:02 166  ,jpy_g34
20:41:02 167  ,jpy_g35
20:41:02 168  ,jpy_g36
20:41:02 169  ,jpy_g37
20:41:02 170  ,jpy_g38
20:41:02 171  ,jpy_g39
20:41:02 172  ,jpy_g40
20:41:02 173  ,jpy_g41
20:41:02 174  ,cad_g00
20:41:02 175  ,cad_g01
20:41:02 176  ,cad_g02
20:41:02 177  ,cad_g03
20:41:02 178  ,cad_g04
20:41:02 179  ,cad_g05
20:41:02 180  ,cad_g06
20:41:02 181  ,cad_g07
20:41:02 182  ,cad_g08
20:41:02 183  ,cad_g09
20:41:02 184  ,cad_g10
20:41:02 185  ,cad_g11
20:41:02 186  ,cad_g12
20:41:02 187  ,cad_g13
20:41:02 188  ,cad_g14
20:41:02 189  ,cad_g15
20:41:02 190  ,cad_g16
20:41:02 191  ,cad_g17
20:41:02 192  ,cad_g18
20:41:02 193  ,cad_g19
20:41:02 194  ,cad_g20
20:41:02 195  ,cad_g21
20:41:02 196  ,cad_g22
20:41:02 197  ,cad_g23
20:41:02 198  ,cad_g24
20:41:02 199  ,cad_g25
20:41:02 200  ,cad_g26
20:41:02 201  ,cad_g27
20:41:02 202  ,cad_g28
20:41:02 203  ,cad_g29
20:41:02 204  ,cad_g30
20:41:02 205  ,cad_g31
20:41:02 206  ,cad_g32
20:41:02 207  ,cad_g33
20:41:02 208  ,cad_g34
20:41:02 209  ,cad_g35
20:41:02 210  ,cad_g36
20:41:02 211  ,cad_g37
20:41:02 212  ,cad_g38
20:41:02 213  ,cad_g39
20:41:02 214  ,cad_g40
20:41:02 215  ,cad_g41
20:41:02 216  ,chf_g00
20:41:02 217  ,chf_g01
20:41:02 218  ,chf_g02
20:41:02 219  ,chf_g03
20:41:02 220  ,chf_g04
20:41:02 221  ,chf_g05
20:41:02 222  ,chf_g06
20:41:02 223  ,chf_g07
20:41:02 224  ,chf_g08
20:41:02 225  ,chf_g09
20:41:02 226  ,chf_g10
20:41:02 227  ,chf_g11
20:41:02 228  ,chf_g12
20:41:02 229  ,chf_g13
20:41:02 230  ,chf_g14
20:41:02 231  ,chf_g15
20:41:02 232  ,chf_g16
20:41:02 233  ,chf_g17
20:41:02 234  ,chf_g18
20:41:02 235  ,chf_g19
20:41:02 236  ,chf_g20
20:41:02 237  ,chf_g21
20:41:02 238  ,chf_g22
20:41:02 239  ,chf_g23
20:41:02 240  ,chf_g24
20:41:02 241  ,chf_g25
20:41:02 242  ,chf_g26
20:41:02 243  ,chf_g27
20:41:02 244  ,chf_g28
20:41:02 245  ,chf_g29
20:41:02 246  ,chf_g30
20:41:02 247  ,chf_g31
20:41:02 248  ,chf_g32
20:41:02 249  ,chf_g33
20:41:02 250  ,chf_g34
20:41:02 251  ,chf_g35
20:41:02 252  ,chf_g36
20:41:02 253  ,chf_g37
20:41:02 254  ,chf_g38
20:41:02 255  ,chf_g39
20:41:02 256  ,chf_g40
20:41:02 257  ,chf_g41
20:41:02 258  FROM aud_ms6 m
20:41:02 259  WHERE gatt IN('nup','up')
20:41:02 260  AND 1+m.ydate < '&1'||' '||'&2'
20:41:02 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-28'||' '||'20:25:00'

View created.

Elapsed: 00:00:00.12
20:41:02 SQL> 
20:41:02 SQL> -- rpt
20:41:02 SQL> 
20:41:02 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
20:41:02   2  
20:41:02 SQL> SELECT MAX(prdate) FROM bme
20:41:02   2  
20:41:02 SQL> -- Now build model from bme and score sme
20:41:02 SQL> @score1.sql
20:41:02 SQL> -- score1.sql
20:41:02 SQL> 
20:41:02 SQL> -- Does the 1st SVM score
20:41:02 SQL> 
20:41:02 SQL> -- Fill up svmc_apply_prep
20:41:02 SQL> @score.sql
20:41:02 SQL> --
20:41:02 SQL> -- score.sql
20:41:02 SQL> --
20:41:02 SQL> 
20:41:02 SQL> -- usage: score.sql
20:41:02 SQL> 
20:41:02 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:41:02 SQL> 
20:41:02 SQL> DEFINE target	= 'gatt'
20:41:02 SQL> DEFINE model_name = 'forex14'
20:41:02 SQL> DEFINE bldtable	= 'bme'
20:41:02 SQL> DEFINE scoretable = 'sme'
20:41:02 SQL> DEFINE case_id	= 'prdate'
20:41:02 SQL> 
20:41:02 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:41:02 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:41:02 SQL> 
20:41:02 SQL> -- Builds an SVM model using pl/sql.
20:41:02 SQL> 
20:41:02 SQL> -----------------------------------------------------------------------
20:41:02 SQL> --			    BUILD THE MODEL
20:41:02 SQL> -----------------------------------------------------------------------
20:41:02 SQL> 
20:41:02 SQL> -- Cleanup old build data preparation objects for repeat runs
20:41:02 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
20:41:02 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:41:02 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
20:41:02 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
20:41:02 SQL> 
20:41:02 SQL> 
20:41:02 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:41:02 SQL> --
20:41:02 SQL> -- DROP	TABLE svmc_settings ;
20:41:02 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:41:02 SQL> -- DELETE svmc_settings;
20:41:02 SQL> 
20:41:02 SQL> -- The default classification algorithm is Naive Bayes. So override
20:41:02 SQL> -- this choice to SVM using a settings table.
20:41:02 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:41:02 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:41:02 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:41:02 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:41:02 SQL> -- models.
20:41:02 SQL> --
20:41:02 SQL> 
20:41:02 SQL> -- Do this once and then comment it out.
20:41:02 SQL> -- That makes script go faster.
20:41:02 SQL> -- BEGIN
20:41:02 SQL> -- -- Populate settings table
20:41:02 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:41:02 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:41:02 SQL> --
20:41:02 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:41:02 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:41:02 SQL> --
20:41:02 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:41:02 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:41:02 SQL> --   COMMIT;
20:41:02 SQL> -- END;
20:41:02 SQL> -- /
20:41:02 SQL> 
20:41:02 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:41:02 SQL> 
20:41:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:41:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:41:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:41:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:41:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:41:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:41:02 SQL> 
20:41:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:41:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:41:02 SQL> 
20:41:02 SQL> --------------------------------
20:41:02 SQL> -- PREPARE BUILD (TRAINING) DATA
20:41:02 SQL> --
20:41:02 SQL> 
20:41:02 SQL> -- 1. Missing Value treatment for all Predictors and
20:41:02 SQL> -- 2. Outlier Treatment and
20:41:02 SQL> -- 3. Normalization are performed below.
20:41:02 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:41:02 SQL> --    normalized here.
20:41:02 SQL> 
20:41:02 SQL> BEGIN
20:41:02   2  	-- Perform missing value treatment for all predictors
20:41:02   3  	-- create miss tables
20:41:02   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:41:02   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:41:02   6  
20:41:02   7  	-- populate miss tables
20:41:02   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:41:02   9  	  miss_table_name => 'svmc_miss_num',
20:41:02  10  	  data_table_name => '&bldtable',
20:41:02  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:41:02  12  
20:41:02  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:41:02  14  	  miss_table_name => 'svmc_miss_cat',
20:41:02  15  	  data_table_name => '&bldtable',
20:41:02  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:41:02  17  
20:41:02  18  	-- xform input data to replace missing values
20:41:02  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:41:02  20  	  miss_table_name => 'svmc_miss_num',
20:41:02  21  	  data_table_name => '&bldtable',
20:41:02  22  	  xform_view_name => 'xformed_build_miss_num');
20:41:02  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:41:02  24  	  miss_table_name => 'svmc_miss_cat',
20:41:02  25  	  data_table_name => '&bldtable',
20:41:02  26  	  xform_view_name => 'xformed_build_miss_cat');
20:41:02  27  
20:41:02  28  	-- Perform outlier treatment.
20:41:02  29  	-- create clip table
20:41:02  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:41:02  31  
20:41:02  32  	-- populate clip table
20:41:02  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:41:02  34  	  clip_table_name => 'svmc_clip',
20:41:02  35  	  data_table_name => '&bldtable',
20:41:02  36  	  tail_frac	  => 0.025,
20:41:02  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:41:02  38  
20:41:02  39  	-- xform input data to winsorized data
20:41:02  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:41:02  41  	  clip_table_name => 'svmc_clip',
20:41:02  42  	  data_table_name => '&bldtable',
20:41:02  43  	  xform_view_name => 'svmc_winsor');
20:41:02  44  
20:41:02  45  	-- create normalization table
20:41:02  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:41:02  47  
20:41:02  48  	-- populate normalization table based on winsorized data
20:41:02  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:41:02  50  	  norm_table_name => 'svmc_norm',
20:41:02  51  	  data_table_name => 'svmc_winsor',
20:41:02  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:41:02  53  
20:41:02  54  	-- normalize the original data
20:41:02  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:41:02  56  	  norm_table_name => 'svmc_norm',
20:41:02  57  	  data_table_name => '&bldtable',
20:41:02  58  	  xform_view_name => 'svmc_build_prep');
20:41:02  59  END;
20:41:02  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.25
20:41:20 SQL> 
20:41:20 SQL> ---------------------
20:41:20 SQL> -- CREATE A NEW MODEL
20:41:20 SQL> --
20:41:20 SQL> -- Cleanup old model with the same name for repeat runs
20:41:20 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:41:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:20   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
20:41:21 SQL> 
20:41:21 SQL> -- Build a new SVM Model
20:41:21 SQL> BEGIN
20:41:21   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:41:21   3  	  model_name	      => '&model_name',
20:41:21   4  	  mining_function     => dbms_data_mining.classification,
20:41:21   5  	  data_table_name     => 'svmc_build_prep',
20:41:21   6  	  case_id_column_name => '&case_id',
20:41:21   7  	  target_column_name  => '&target',
20:41:21   8  	  settings_table_name => 'svmc_settings');
20:41:21   9  END;
20:41:21  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.35
20:41:47 SQL> 
20:41:47 SQL> -----------------------------------------------------------------------
20:41:47 SQL> --			       APPLY/score THE MODEL
20:41:47 SQL> -----------------------------------------------------------------------
20:41:47 SQL> 
20:41:47 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:41:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:41:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:41:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:41:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:41:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:41:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:41:47 SQL> -----------------------
20:41:47 SQL> -- PREPARE SCORING DATA
20:41:47 SQL> --
20:41:47 SQL> -- If the data for model creation has been prepared, then the data
20:41:47 SQL> -- to be scored using the model must be prepared in the same manner
20:41:47 SQL> -- in order to obtain meaningful results.
20:41:47 SQL> --
20:41:47 SQL> -- 1. Missing Value treatment for all Predictors and
20:41:47 SQL> -- 2. Normalization
20:41:47 SQL> -- No outlier treatment will be performed during test and apply. The
20:41:47 SQL> -- normalization step is sufficient, since the normalization parameters
20:41:47 SQL> -- already capture the effects of outlier treatment done with build data.
20:41:47 SQL> --
20:41:47 SQL> BEGIN
20:41:47   2  	-- Xform Test data to replace missing values
20:41:47   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:41:47   4  	  miss_table_name => 'svmc_miss_num',
20:41:47   5  	  data_table_name => '&scoretable',
20:41:47   6  	  xform_view_name => 'xformed_apply_miss_num');
20:41:47   7  
20:41:47   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:41:47   9  	  miss_table_name => 'svmc_miss_cat',
20:41:47  10  	  data_table_name => '&scoretable',
20:41:47  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:41:47  12  
20:41:47  13  	-- Normalize the data to be scored
20:41:47  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:41:47  15  	  norm_table_name => 'svmc_norm',
20:41:47  16  	  data_table_name => '&scoretable',
20:41:47  17  	  xform_view_name => 'svmc_apply_prep');
20:41:47  18  END;
20:41:47  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.30
20:41:49 SQL> 
20:41:49 SQL> -- Use same model_name used in score.sql
20:41:49 SQL> DEFINE model_name = 'forex14'
20:41:49 SQL> 
20:41:49 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
20:41:49 SQL> 
20:41:49 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
20:41:49 SQL> 
20:41:49 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
20:41:49   2  SELECT
20:41:49   3  prdate
20:41:49   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:41:49   5  ,sysdate
20:41:49   6  ,SUBSTR(prdate,1,3)pair
20:41:49   7  ,SUBSTR(prdate,4,19)ydate
20:41:49   8  FROM svmc_apply_prep
20:41:49   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
20:41:49 SQL> @aud_score1day.sql  2010-12-28 20:30:00
20:41:49 SQL> --
20:41:49 SQL> -- aud_score1day.sql
20:41:49 SQL> --
20:41:49 SQL> 
20:41:49 SQL> CREATE OR REPLACE VIEW sme AS
20:41:49   2  SELECT
20:41:49   3  'aud'||m.ydate prdate
20:41:49   4  ,NULL gatt
20:41:49   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:41:49   6  ,eur_g00
20:41:49   7  ,eur_g01
20:41:49   8  ,eur_g02
20:41:49   9  ,eur_g03
20:41:49  10  ,eur_g04
20:41:49  11  ,eur_g05
20:41:49  12  ,eur_g06
20:41:49  13  ,eur_g07
20:41:49  14  ,eur_g08
20:41:49  15  ,eur_g09
20:41:49  16  ,eur_g10
20:41:49  17  ,eur_g11
20:41:49  18  ,eur_g12
20:41:49  19  ,eur_g13
20:41:49  20  ,eur_g14
20:41:49  21  ,eur_g15
20:41:49  22  ,eur_g16
20:41:49  23  ,eur_g17
20:41:49  24  ,eur_g18
20:41:49  25  ,eur_g19
20:41:49  26  ,eur_g20
20:41:49  27  ,eur_g21
20:41:49  28  ,eur_g22
20:41:49  29  ,eur_g23
20:41:49  30  ,eur_g24
20:41:49  31  ,eur_g25
20:41:49  32  ,eur_g26
20:41:49  33  ,eur_g27
20:41:49  34  ,eur_g28
20:41:49  35  ,eur_g29
20:41:49  36  ,eur_g30
20:41:49  37  ,eur_g31
20:41:49  38  ,eur_g32
20:41:49  39  ,eur_g33
20:41:49  40  ,eur_g34
20:41:49  41  ,eur_g35
20:41:49  42  ,eur_g36
20:41:49  43  ,eur_g37
20:41:49  44  ,eur_g38
20:41:49  45  ,eur_g39
20:41:49  46  ,eur_g40
20:41:49  47  ,eur_g41
20:41:49  48  ,aud_g00
20:41:49  49  ,aud_g01
20:41:49  50  ,aud_g02
20:41:49  51  ,aud_g03
20:41:49  52  ,aud_g04
20:41:49  53  ,aud_g05
20:41:49  54  ,aud_g06
20:41:49  55  ,aud_g07
20:41:49  56  ,aud_g08
20:41:49  57  ,aud_g09
20:41:49  58  ,aud_g10
20:41:49  59  ,aud_g11
20:41:49  60  ,aud_g12
20:41:49  61  ,aud_g13
20:41:49  62  ,aud_g14
20:41:49  63  ,aud_g15
20:41:49  64  ,aud_g16
20:41:49  65  ,aud_g17
20:41:49  66  ,aud_g18
20:41:49  67  ,aud_g19
20:41:49  68  ,aud_g20
20:41:49  69  ,aud_g21
20:41:49  70  ,aud_g22
20:41:49  71  ,aud_g23
20:41:49  72  ,aud_g24
20:41:49  73  ,aud_g25
20:41:49  74  ,aud_g26
20:41:49  75  ,aud_g27
20:41:49  76  ,aud_g28
20:41:49  77  ,aud_g29
20:41:49  78  ,aud_g30
20:41:49  79  ,aud_g31
20:41:49  80  ,aud_g32
20:41:49  81  ,aud_g33
20:41:49  82  ,aud_g34
20:41:49  83  ,aud_g35
20:41:49  84  ,aud_g36
20:41:49  85  ,aud_g37
20:41:49  86  ,aud_g38
20:41:49  87  ,aud_g39
20:41:49  88  ,aud_g40
20:41:49  89  ,aud_g41
20:41:49  90  ,gbp_g00
20:41:49  91  ,gbp_g01
20:41:49  92  ,gbp_g02
20:41:49  93  ,gbp_g03
20:41:49  94  ,gbp_g04
20:41:49  95  ,gbp_g05
20:41:49  96  ,gbp_g06
20:41:49  97  ,gbp_g07
20:41:49  98  ,gbp_g08
20:41:49  99  ,gbp_g09
20:41:49 100  ,gbp_g10
20:41:49 101  ,gbp_g11
20:41:49 102  ,gbp_g12
20:41:49 103  ,gbp_g13
20:41:49 104  ,gbp_g14
20:41:49 105  ,gbp_g15
20:41:49 106  ,gbp_g16
20:41:49 107  ,gbp_g17
20:41:49 108  ,gbp_g18
20:41:49 109  ,gbp_g19
20:41:49 110  ,gbp_g20
20:41:49 111  ,gbp_g21
20:41:49 112  ,gbp_g22
20:41:49 113  ,gbp_g23
20:41:49 114  ,gbp_g24
20:41:49 115  ,gbp_g25
20:41:49 116  ,gbp_g26
20:41:49 117  ,gbp_g27
20:41:49 118  ,gbp_g28
20:41:49 119  ,gbp_g29
20:41:49 120  ,gbp_g30
20:41:49 121  ,gbp_g31
20:41:49 122  ,gbp_g32
20:41:49 123  ,gbp_g33
20:41:49 124  ,gbp_g34
20:41:49 125  ,gbp_g35
20:41:49 126  ,gbp_g36
20:41:49 127  ,gbp_g37
20:41:49 128  ,gbp_g38
20:41:49 129  ,gbp_g39
20:41:49 130  ,gbp_g40
20:41:49 131  ,gbp_g41
20:41:49 132  ,jpy_g00
20:41:49 133  ,jpy_g01
20:41:49 134  ,jpy_g02
20:41:49 135  ,jpy_g03
20:41:49 136  ,jpy_g04
20:41:49 137  ,jpy_g05
20:41:49 138  ,jpy_g06
20:41:49 139  ,jpy_g07
20:41:49 140  ,jpy_g08
20:41:49 141  ,jpy_g09
20:41:49 142  ,jpy_g10
20:41:49 143  ,jpy_g11
20:41:49 144  ,jpy_g12
20:41:49 145  ,jpy_g13
20:41:49 146  ,jpy_g14
20:41:49 147  ,jpy_g15
20:41:49 148  ,jpy_g16
20:41:49 149  ,jpy_g17
20:41:49 150  ,jpy_g18
20:41:49 151  ,jpy_g19
20:41:49 152  ,jpy_g20
20:41:49 153  ,jpy_g21
20:41:49 154  ,jpy_g22
20:41:49 155  ,jpy_g23
20:41:49 156  ,jpy_g24
20:41:49 157  ,jpy_g25
20:41:49 158  ,jpy_g26
20:41:49 159  ,jpy_g27
20:41:49 160  ,jpy_g28
20:41:49 161  ,jpy_g29
20:41:49 162  ,jpy_g30
20:41:49 163  ,jpy_g31
20:41:49 164  ,jpy_g32
20:41:49 165  ,jpy_g33
20:41:49 166  ,jpy_g34
20:41:49 167  ,jpy_g35
20:41:49 168  ,jpy_g36
20:41:49 169  ,jpy_g37
20:41:49 170  ,jpy_g38
20:41:49 171  ,jpy_g39
20:41:49 172  ,jpy_g40
20:41:49 173  ,jpy_g41
20:41:49 174  ,cad_g00
20:41:49 175  ,cad_g01
20:41:49 176  ,cad_g02
20:41:49 177  ,cad_g03
20:41:49 178  ,cad_g04
20:41:49 179  ,cad_g05
20:41:49 180  ,cad_g06
20:41:49 181  ,cad_g07
20:41:49 182  ,cad_g08
20:41:49 183  ,cad_g09
20:41:49 184  ,cad_g10
20:41:49 185  ,cad_g11
20:41:49 186  ,cad_g12
20:41:49 187  ,cad_g13
20:41:49 188  ,cad_g14
20:41:49 189  ,cad_g15
20:41:49 190  ,cad_g16
20:41:49 191  ,cad_g17
20:41:49 192  ,cad_g18
20:41:49 193  ,cad_g19
20:41:49 194  ,cad_g20
20:41:49 195  ,cad_g21
20:41:49 196  ,cad_g22
20:41:49 197  ,cad_g23
20:41:49 198  ,cad_g24
20:41:49 199  ,cad_g25
20:41:49 200  ,cad_g26
20:41:49 201  ,cad_g27
20:41:49 202  ,cad_g28
20:41:49 203  ,cad_g29
20:41:49 204  ,cad_g30
20:41:49 205  ,cad_g31
20:41:49 206  ,cad_g32
20:41:49 207  ,cad_g33
20:41:49 208  ,cad_g34
20:41:49 209  ,cad_g35
20:41:49 210  ,cad_g36
20:41:49 211  ,cad_g37
20:41:49 212  ,cad_g38
20:41:49 213  ,cad_g39
20:41:49 214  ,cad_g40
20:41:49 215  ,cad_g41
20:41:49 216  ,chf_g00
20:41:49 217  ,chf_g01
20:41:49 218  ,chf_g02
20:41:49 219  ,chf_g03
20:41:49 220  ,chf_g04
20:41:49 221  ,chf_g05
20:41:49 222  ,chf_g06
20:41:49 223  ,chf_g07
20:41:49 224  ,chf_g08
20:41:49 225  ,chf_g09
20:41:49 226  ,chf_g10
20:41:49 227  ,chf_g11
20:41:49 228  ,chf_g12
20:41:49 229  ,chf_g13
20:41:49 230  ,chf_g14
20:41:49 231  ,chf_g15
20:41:49 232  ,chf_g16
20:41:49 233  ,chf_g17
20:41:49 234  ,chf_g18
20:41:49 235  ,chf_g19
20:41:49 236  ,chf_g20
20:41:49 237  ,chf_g21
20:41:49 238  ,chf_g22
20:41:49 239  ,chf_g23
20:41:49 240  ,chf_g24
20:41:49 241  ,chf_g25
20:41:49 242  ,chf_g26
20:41:49 243  ,chf_g27
20:41:49 244  ,chf_g28
20:41:49 245  ,chf_g29
20:41:49 246  ,chf_g30
20:41:49 247  ,chf_g31
20:41:49 248  ,chf_g32
20:41:49 249  ,chf_g33
20:41:49 250  ,chf_g34
20:41:49 251  ,chf_g35
20:41:49 252  ,chf_g36
20:41:49 253  ,chf_g37
20:41:49 254  ,chf_g38
20:41:49 255  ,chf_g39
20:41:49 256  ,chf_g40
20:41:49 257  ,chf_g41
20:41:49 258  FROM aud_ms6 m
20:41:49 259  WHERE m.ydate = '&1'||' '||'&2'
20:41:49 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-28'||' '||'20:30:00'

View created.

Elapsed: 00:00:00.12
20:41:49 SQL> 
20:41:49 SQL> -- rpt
20:41:49 SQL> -- We should see just 1 row:
20:41:49 SQL> 
20:41:49 SQL> SELECT COUNT(prdate) FROM sme
20:41:49   2  
20:41:49 SQL> -- Build the model:
20:41:49 SQL> CREATE OR REPLACE VIEW bme AS
20:41:49   2  SELECT
20:41:49   3  'aud'||m.ydate prdate
20:41:49   4  ,gatt
20:41:49   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:41:49   6  ,eur_g00
20:41:49   7  ,eur_g01
20:41:49   8  ,eur_g02
20:41:49   9  ,eur_g03
20:41:49  10  ,eur_g04
20:41:49  11  ,eur_g05
20:41:49  12  ,eur_g06
20:41:49  13  ,eur_g07
20:41:49  14  ,eur_g08
20:41:49  15  ,eur_g09
20:41:49  16  ,eur_g10
20:41:49  17  ,eur_g11
20:41:49  18  ,eur_g12
20:41:49  19  ,eur_g13
20:41:49  20  ,eur_g14
20:41:49  21  ,eur_g15
20:41:49  22  ,eur_g16
20:41:49  23  ,eur_g17
20:41:49  24  ,eur_g18
20:41:49  25  ,eur_g19
20:41:49  26  ,eur_g20
20:41:49  27  ,eur_g21
20:41:49  28  ,eur_g22
20:41:49  29  ,eur_g23
20:41:49  30  ,eur_g24
20:41:49  31  ,eur_g25
20:41:49  32  ,eur_g26
20:41:49  33  ,eur_g27
20:41:49  34  ,eur_g28
20:41:49  35  ,eur_g29
20:41:49  36  ,eur_g30
20:41:49  37  ,eur_g31
20:41:49  38  ,eur_g32
20:41:49  39  ,eur_g33
20:41:49  40  ,eur_g34
20:41:49  41  ,eur_g35
20:41:49  42  ,eur_g36
20:41:49  43  ,eur_g37
20:41:49  44  ,eur_g38
20:41:49  45  ,eur_g39
20:41:49  46  ,eur_g40
20:41:49  47  ,eur_g41
20:41:49  48  ,aud_g00
20:41:49  49  ,aud_g01
20:41:49  50  ,aud_g02
20:41:49  51  ,aud_g03
20:41:49  52  ,aud_g04
20:41:49  53  ,aud_g05
20:41:49  54  ,aud_g06
20:41:49  55  ,aud_g07
20:41:49  56  ,aud_g08
20:41:49  57  ,aud_g09
20:41:49  58  ,aud_g10
20:41:49  59  ,aud_g11
20:41:49  60  ,aud_g12
20:41:49  61  ,aud_g13
20:41:49  62  ,aud_g14
20:41:49  63  ,aud_g15
20:41:49  64  ,aud_g16
20:41:49  65  ,aud_g17
20:41:49  66  ,aud_g18
20:41:49  67  ,aud_g19
20:41:49  68  ,aud_g20
20:41:49  69  ,aud_g21
20:41:49  70  ,aud_g22
20:41:49  71  ,aud_g23
20:41:49  72  ,aud_g24
20:41:49  73  ,aud_g25
20:41:49  74  ,aud_g26
20:41:49  75  ,aud_g27
20:41:49  76  ,aud_g28
20:41:49  77  ,aud_g29
20:41:49  78  ,aud_g30
20:41:49  79  ,aud_g31
20:41:49  80  ,aud_g32
20:41:49  81  ,aud_g33
20:41:49  82  ,aud_g34
20:41:49  83  ,aud_g35
20:41:49  84  ,aud_g36
20:41:49  85  ,aud_g37
20:41:49  86  ,aud_g38
20:41:49  87  ,aud_g39
20:41:49  88  ,aud_g40
20:41:49  89  ,aud_g41
20:41:49  90  ,gbp_g00
20:41:49  91  ,gbp_g01
20:41:49  92  ,gbp_g02
20:41:49  93  ,gbp_g03
20:41:49  94  ,gbp_g04
20:41:49  95  ,gbp_g05
20:41:49  96  ,gbp_g06
20:41:49  97  ,gbp_g07
20:41:49  98  ,gbp_g08
20:41:49  99  ,gbp_g09
20:41:49 100  ,gbp_g10
20:41:49 101  ,gbp_g11
20:41:49 102  ,gbp_g12
20:41:49 103  ,gbp_g13
20:41:49 104  ,gbp_g14
20:41:49 105  ,gbp_g15
20:41:49 106  ,gbp_g16
20:41:49 107  ,gbp_g17
20:41:49 108  ,gbp_g18
20:41:49 109  ,gbp_g19
20:41:49 110  ,gbp_g20
20:41:49 111  ,gbp_g21
20:41:49 112  ,gbp_g22
20:41:49 113  ,gbp_g23
20:41:49 114  ,gbp_g24
20:41:49 115  ,gbp_g25
20:41:49 116  ,gbp_g26
20:41:49 117  ,gbp_g27
20:41:49 118  ,gbp_g28
20:41:49 119  ,gbp_g29
20:41:49 120  ,gbp_g30
20:41:49 121  ,gbp_g31
20:41:49 122  ,gbp_g32
20:41:49 123  ,gbp_g33
20:41:49 124  ,gbp_g34
20:41:49 125  ,gbp_g35
20:41:49 126  ,gbp_g36
20:41:49 127  ,gbp_g37
20:41:49 128  ,gbp_g38
20:41:49 129  ,gbp_g39
20:41:49 130  ,gbp_g40
20:41:49 131  ,gbp_g41
20:41:49 132  ,jpy_g00
20:41:49 133  ,jpy_g01
20:41:49 134  ,jpy_g02
20:41:49 135  ,jpy_g03
20:41:49 136  ,jpy_g04
20:41:49 137  ,jpy_g05
20:41:49 138  ,jpy_g06
20:41:49 139  ,jpy_g07
20:41:49 140  ,jpy_g08
20:41:49 141  ,jpy_g09
20:41:49 142  ,jpy_g10
20:41:49 143  ,jpy_g11
20:41:49 144  ,jpy_g12
20:41:49 145  ,jpy_g13
20:41:49 146  ,jpy_g14
20:41:49 147  ,jpy_g15
20:41:49 148  ,jpy_g16
20:41:49 149  ,jpy_g17
20:41:49 150  ,jpy_g18
20:41:49 151  ,jpy_g19
20:41:49 152  ,jpy_g20
20:41:49 153  ,jpy_g21
20:41:49 154  ,jpy_g22
20:41:49 155  ,jpy_g23
20:41:49 156  ,jpy_g24
20:41:49 157  ,jpy_g25
20:41:49 158  ,jpy_g26
20:41:49 159  ,jpy_g27
20:41:49 160  ,jpy_g28
20:41:49 161  ,jpy_g29
20:41:49 162  ,jpy_g30
20:41:49 163  ,jpy_g31
20:41:49 164  ,jpy_g32
20:41:49 165  ,jpy_g33
20:41:49 166  ,jpy_g34
20:41:49 167  ,jpy_g35
20:41:49 168  ,jpy_g36
20:41:49 169  ,jpy_g37
20:41:49 170  ,jpy_g38
20:41:49 171  ,jpy_g39
20:41:49 172  ,jpy_g40
20:41:49 173  ,jpy_g41
20:41:49 174  ,cad_g00
20:41:49 175  ,cad_g01
20:41:49 176  ,cad_g02
20:41:49 177  ,cad_g03
20:41:49 178  ,cad_g04
20:41:49 179  ,cad_g05
20:41:49 180  ,cad_g06
20:41:49 181  ,cad_g07
20:41:49 182  ,cad_g08
20:41:49 183  ,cad_g09
20:41:49 184  ,cad_g10
20:41:49 185  ,cad_g11
20:41:49 186  ,cad_g12
20:41:49 187  ,cad_g13
20:41:49 188  ,cad_g14
20:41:49 189  ,cad_g15
20:41:49 190  ,cad_g16
20:41:49 191  ,cad_g17
20:41:49 192  ,cad_g18
20:41:49 193  ,cad_g19
20:41:49 194  ,cad_g20
20:41:49 195  ,cad_g21
20:41:49 196  ,cad_g22
20:41:49 197  ,cad_g23
20:41:49 198  ,cad_g24
20:41:49 199  ,cad_g25
20:41:49 200  ,cad_g26
20:41:49 201  ,cad_g27
20:41:49 202  ,cad_g28
20:41:49 203  ,cad_g29
20:41:49 204  ,cad_g30
20:41:49 205  ,cad_g31
20:41:49 206  ,cad_g32
20:41:49 207  ,cad_g33
20:41:49 208  ,cad_g34
20:41:49 209  ,cad_g35
20:41:49 210  ,cad_g36
20:41:49 211  ,cad_g37
20:41:49 212  ,cad_g38
20:41:49 213  ,cad_g39
20:41:49 214  ,cad_g40
20:41:49 215  ,cad_g41
20:41:49 216  ,chf_g00
20:41:49 217  ,chf_g01
20:41:49 218  ,chf_g02
20:41:49 219  ,chf_g03
20:41:49 220  ,chf_g04
20:41:49 221  ,chf_g05
20:41:49 222  ,chf_g06
20:41:49 223  ,chf_g07
20:41:49 224  ,chf_g08
20:41:49 225  ,chf_g09
20:41:49 226  ,chf_g10
20:41:49 227  ,chf_g11
20:41:49 228  ,chf_g12
20:41:49 229  ,chf_g13
20:41:49 230  ,chf_g14
20:41:49 231  ,chf_g15
20:41:49 232  ,chf_g16
20:41:49 233  ,chf_g17
20:41:49 234  ,chf_g18
20:41:49 235  ,chf_g19
20:41:49 236  ,chf_g20
20:41:49 237  ,chf_g21
20:41:49 238  ,chf_g22
20:41:49 239  ,chf_g23
20:41:49 240  ,chf_g24
20:41:49 241  ,chf_g25
20:41:49 242  ,chf_g26
20:41:49 243  ,chf_g27
20:41:49 244  ,chf_g28
20:41:49 245  ,chf_g29
20:41:49 246  ,chf_g30
20:41:49 247  ,chf_g31
20:41:49 248  ,chf_g32
20:41:49 249  ,chf_g33
20:41:49 250  ,chf_g34
20:41:49 251  ,chf_g35
20:41:49 252  ,chf_g36
20:41:49 253  ,chf_g37
20:41:49 254  ,chf_g38
20:41:49 255  ,chf_g39
20:41:49 256  ,chf_g40
20:41:49 257  ,chf_g41
20:41:49 258  FROM aud_ms6 m
20:41:49 259  WHERE gatt IN('nup','up')
20:41:49 260  AND 1+m.ydate < '&1'||' '||'&2'
20:41:49 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-28'||' '||'20:30:00'

View created.

Elapsed: 00:00:00.11
20:41:49 SQL> 
20:41:49 SQL> -- rpt
20:41:49 SQL> 
20:41:49 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
20:41:49   2  
20:41:49 SQL> SELECT MAX(prdate) FROM bme
20:41:49   2  
20:41:49 SQL> -- Now build model from bme and score sme
20:41:49 SQL> @score1.sql
20:41:49 SQL> -- score1.sql
20:41:49 SQL> 
20:41:49 SQL> -- Does the 1st SVM score
20:41:49 SQL> 
20:41:49 SQL> -- Fill up svmc_apply_prep
20:41:49 SQL> @score.sql
20:41:49 SQL> --
20:41:49 SQL> -- score.sql
20:41:49 SQL> --
20:41:49 SQL> 
20:41:49 SQL> -- usage: score.sql
20:41:49 SQL> 
20:41:49 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:41:49 SQL> 
20:41:49 SQL> DEFINE target	= 'gatt'
20:41:49 SQL> DEFINE model_name = 'forex14'
20:41:49 SQL> DEFINE bldtable	= 'bme'
20:41:49 SQL> DEFINE scoretable = 'sme'
20:41:49 SQL> DEFINE case_id	= 'prdate'
20:41:49 SQL> 
20:41:49 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:41:49 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:41:49 SQL> 
20:41:49 SQL> -- Builds an SVM model using pl/sql.
20:41:49 SQL> 
20:41:49 SQL> -----------------------------------------------------------------------
20:41:49 SQL> --			    BUILD THE MODEL
20:41:49 SQL> -----------------------------------------------------------------------
20:41:49 SQL> 
20:41:49 SQL> -- Cleanup old build data preparation objects for repeat runs
20:41:49 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
20:41:49 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:41:49 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
20:41:49 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
20:41:49 SQL> 
20:41:49 SQL> 
20:41:49 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:41:49 SQL> --
20:41:49 SQL> -- DROP	TABLE svmc_settings ;
20:41:49 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:41:49 SQL> -- DELETE svmc_settings;
20:41:49 SQL> 
20:41:49 SQL> -- The default classification algorithm is Naive Bayes. So override
20:41:49 SQL> -- this choice to SVM using a settings table.
20:41:49 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:41:49 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:41:49 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:41:49 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:41:49 SQL> -- models.
20:41:49 SQL> --
20:41:49 SQL> 
20:41:49 SQL> -- Do this once and then comment it out.
20:41:49 SQL> -- That makes script go faster.
20:41:49 SQL> -- BEGIN
20:41:49 SQL> -- -- Populate settings table
20:41:49 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:41:49 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:41:49 SQL> --
20:41:49 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:41:49 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:41:49 SQL> --
20:41:49 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:41:49 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:41:49 SQL> --   COMMIT;
20:41:49 SQL> -- END;
20:41:49 SQL> -- /
20:41:49 SQL> 
20:41:49 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:41:49 SQL> 
20:41:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:41:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:41:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:41:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:41:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:41:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:41:49 SQL> 
20:41:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:41:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:41:49 SQL> 
20:41:49 SQL> --------------------------------
20:41:49 SQL> -- PREPARE BUILD (TRAINING) DATA
20:41:49 SQL> --
20:41:49 SQL> 
20:41:49 SQL> -- 1. Missing Value treatment for all Predictors and
20:41:49 SQL> -- 2. Outlier Treatment and
20:41:49 SQL> -- 3. Normalization are performed below.
20:41:49 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:41:49 SQL> --    normalized here.
20:41:49 SQL> 
20:41:49 SQL> BEGIN
20:41:49   2  	-- Perform missing value treatment for all predictors
20:41:49   3  	-- create miss tables
20:41:49   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:41:49   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:41:49   6  
20:41:49   7  	-- populate miss tables
20:41:49   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:41:49   9  	  miss_table_name => 'svmc_miss_num',
20:41:49  10  	  data_table_name => '&bldtable',
20:41:49  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:41:49  12  
20:41:49  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:41:49  14  	  miss_table_name => 'svmc_miss_cat',
20:41:49  15  	  data_table_name => '&bldtable',
20:41:49  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:41:49  17  
20:41:49  18  	-- xform input data to replace missing values
20:41:49  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:41:49  20  	  miss_table_name => 'svmc_miss_num',
20:41:49  21  	  data_table_name => '&bldtable',
20:41:49  22  	  xform_view_name => 'xformed_build_miss_num');
20:41:49  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:41:49  24  	  miss_table_name => 'svmc_miss_cat',
20:41:49  25  	  data_table_name => '&bldtable',
20:41:49  26  	  xform_view_name => 'xformed_build_miss_cat');
20:41:49  27  
20:41:49  28  	-- Perform outlier treatment.
20:41:49  29  	-- create clip table
20:41:49  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:41:49  31  
20:41:49  32  	-- populate clip table
20:41:49  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:41:49  34  	  clip_table_name => 'svmc_clip',
20:41:49  35  	  data_table_name => '&bldtable',
20:41:49  36  	  tail_frac	  => 0.025,
20:41:49  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:41:49  38  
20:41:49  39  	-- xform input data to winsorized data
20:41:49  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:41:49  41  	  clip_table_name => 'svmc_clip',
20:41:49  42  	  data_table_name => '&bldtable',
20:41:49  43  	  xform_view_name => 'svmc_winsor');
20:41:49  44  
20:41:49  45  	-- create normalization table
20:41:49  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:41:49  47  
20:41:49  48  	-- populate normalization table based on winsorized data
20:41:49  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:41:49  50  	  norm_table_name => 'svmc_norm',
20:41:49  51  	  data_table_name => 'svmc_winsor',
20:41:49  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:41:49  53  
20:41:49  54  	-- normalize the original data
20:41:49  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:41:49  56  	  norm_table_name => 'svmc_norm',
20:41:49  57  	  data_table_name => '&bldtable',
20:41:49  58  	  xform_view_name => 'svmc_build_prep');
20:41:49  59  END;
20:41:49  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.84
20:42:07 SQL> 
20:42:07 SQL> ---------------------
20:42:07 SQL> -- CREATE A NEW MODEL
20:42:07 SQL> --
20:42:07 SQL> -- Cleanup old model with the same name for repeat runs
20:42:07 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:42:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:07   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
20:42:08 SQL> 
20:42:08 SQL> -- Build a new SVM Model
20:42:08 SQL> BEGIN
20:42:08   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:42:08   3  	  model_name	      => '&model_name',
20:42:08   4  	  mining_function     => dbms_data_mining.classification,
20:42:08   5  	  data_table_name     => 'svmc_build_prep',
20:42:08   6  	  case_id_column_name => '&case_id',
20:42:08   7  	  target_column_name  => '&target',
20:42:08   8  	  settings_table_name => 'svmc_settings');
20:42:08   9  END;
20:42:08  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.73
20:42:35 SQL> 
20:42:35 SQL> -----------------------------------------------------------------------
20:42:35 SQL> --			       APPLY/score THE MODEL
20:42:35 SQL> -----------------------------------------------------------------------
20:42:35 SQL> 
20:42:35 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:42:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:42:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:42:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:42:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:42:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:42:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:42:35 SQL> -----------------------
20:42:35 SQL> -- PREPARE SCORING DATA
20:42:35 SQL> --
20:42:35 SQL> -- If the data for model creation has been prepared, then the data
20:42:35 SQL> -- to be scored using the model must be prepared in the same manner
20:42:35 SQL> -- in order to obtain meaningful results.
20:42:35 SQL> --
20:42:35 SQL> -- 1. Missing Value treatment for all Predictors and
20:42:35 SQL> -- 2. Normalization
20:42:35 SQL> -- No outlier treatment will be performed during test and apply. The
20:42:35 SQL> -- normalization step is sufficient, since the normalization parameters
20:42:35 SQL> -- already capture the effects of outlier treatment done with build data.
20:42:35 SQL> --
20:42:35 SQL> BEGIN
20:42:35   2  	-- Xform Test data to replace missing values
20:42:35   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:42:35   4  	  miss_table_name => 'svmc_miss_num',
20:42:35   5  	  data_table_name => '&scoretable',
20:42:35   6  	  xform_view_name => 'xformed_apply_miss_num');
20:42:35   7  
20:42:35   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:42:35   9  	  miss_table_name => 'svmc_miss_cat',
20:42:35  10  	  data_table_name => '&scoretable',
20:42:35  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:42:35  12  
20:42:35  13  	-- Normalize the data to be scored
20:42:35  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:42:35  15  	  norm_table_name => 'svmc_norm',
20:42:35  16  	  data_table_name => '&scoretable',
20:42:35  17  	  xform_view_name => 'svmc_apply_prep');
20:42:35  18  END;
20:42:35  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
20:42:37 SQL> 
20:42:37 SQL> -- Use same model_name used in score.sql
20:42:37 SQL> DEFINE model_name = 'forex14'
20:42:37 SQL> 
20:42:37 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
20:42:37 SQL> 
20:42:37 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
20:42:37 SQL> 
20:42:37 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
20:42:37   2  SELECT
20:42:37   3  prdate
20:42:37   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:42:37   5  ,sysdate
20:42:37   6  ,SUBSTR(prdate,1,3)pair
20:42:37   7  ,SUBSTR(prdate,4,19)ydate
20:42:37   8  FROM svmc_apply_prep
20:42:37   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
20:42:37 SQL> @aud_score1day_gattn.sql	2010-12-28 20:20:00
20:42:37 SQL> --
20:42:37 SQL> -- aud_score1day_gattn.sql
20:42:37 SQL> --
20:42:37 SQL> 
20:42:37 SQL> CREATE OR REPLACE VIEW sme AS
20:42:37   2  SELECT
20:42:37   3  'aud'||m.ydate prdate
20:42:37   4  ,NULL gattn
20:42:37   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:42:37   6  ,eur_g00
20:42:37   7  ,eur_g01
20:42:37   8  ,eur_g02
20:42:37   9  ,eur_g03
20:42:37  10  ,eur_g04
20:42:37  11  ,eur_g05
20:42:37  12  ,eur_g06
20:42:37  13  ,eur_g07
20:42:37  14  ,eur_g08
20:42:37  15  ,eur_g09
20:42:37  16  ,eur_g10
20:42:37  17  ,eur_g11
20:42:37  18  ,eur_g12
20:42:37  19  ,eur_g13
20:42:37  20  ,eur_g14
20:42:37  21  ,eur_g15
20:42:37  22  ,eur_g16
20:42:37  23  ,eur_g17
20:42:37  24  ,eur_g18
20:42:37  25  ,eur_g19
20:42:37  26  ,eur_g20
20:42:37  27  ,eur_g21
20:42:37  28  ,eur_g22
20:42:37  29  ,eur_g23
20:42:37  30  ,eur_g24
20:42:37  31  ,eur_g25
20:42:37  32  ,eur_g26
20:42:37  33  ,eur_g27
20:42:37  34  ,eur_g28
20:42:37  35  ,eur_g29
20:42:37  36  ,eur_g30
20:42:37  37  ,eur_g31
20:42:37  38  ,eur_g32
20:42:37  39  ,eur_g33
20:42:37  40  ,eur_g34
20:42:37  41  ,eur_g35
20:42:37  42  ,eur_g36
20:42:37  43  ,eur_g37
20:42:37  44  ,eur_g38
20:42:37  45  ,eur_g39
20:42:37  46  ,eur_g40
20:42:37  47  ,eur_g41
20:42:37  48  ,aud_g00
20:42:37  49  ,aud_g01
20:42:37  50  ,aud_g02
20:42:37  51  ,aud_g03
20:42:37  52  ,aud_g04
20:42:37  53  ,aud_g05
20:42:37  54  ,aud_g06
20:42:37  55  ,aud_g07
20:42:37  56  ,aud_g08
20:42:37  57  ,aud_g09
20:42:37  58  ,aud_g10
20:42:37  59  ,aud_g11
20:42:37  60  ,aud_g12
20:42:37  61  ,aud_g13
20:42:37  62  ,aud_g14
20:42:37  63  ,aud_g15
20:42:37  64  ,aud_g16
20:42:37  65  ,aud_g17
20:42:37  66  ,aud_g18
20:42:37  67  ,aud_g19
20:42:37  68  ,aud_g20
20:42:37  69  ,aud_g21
20:42:37  70  ,aud_g22
20:42:37  71  ,aud_g23
20:42:37  72  ,aud_g24
20:42:37  73  ,aud_g25
20:42:37  74  ,aud_g26
20:42:37  75  ,aud_g27
20:42:37  76  ,aud_g28
20:42:37  77  ,aud_g29
20:42:37  78  ,aud_g30
20:42:37  79  ,aud_g31
20:42:37  80  ,aud_g32
20:42:37  81  ,aud_g33
20:42:37  82  ,aud_g34
20:42:37  83  ,aud_g35
20:42:37  84  ,aud_g36
20:42:37  85  ,aud_g37
20:42:37  86  ,aud_g38
20:42:37  87  ,aud_g39
20:42:37  88  ,aud_g40
20:42:37  89  ,aud_g41
20:42:37  90  ,gbp_g00
20:42:37  91  ,gbp_g01
20:42:37  92  ,gbp_g02
20:42:37  93  ,gbp_g03
20:42:37  94  ,gbp_g04
20:42:37  95  ,gbp_g05
20:42:37  96  ,gbp_g06
20:42:37  97  ,gbp_g07
20:42:37  98  ,gbp_g08
20:42:37  99  ,gbp_g09
20:42:37 100  ,gbp_g10
20:42:37 101  ,gbp_g11
20:42:37 102  ,gbp_g12
20:42:37 103  ,gbp_g13
20:42:37 104  ,gbp_g14
20:42:37 105  ,gbp_g15
20:42:37 106  ,gbp_g16
20:42:37 107  ,gbp_g17
20:42:37 108  ,gbp_g18
20:42:37 109  ,gbp_g19
20:42:37 110  ,gbp_g20
20:42:37 111  ,gbp_g21
20:42:37 112  ,gbp_g22
20:42:37 113  ,gbp_g23
20:42:37 114  ,gbp_g24
20:42:37 115  ,gbp_g25
20:42:37 116  ,gbp_g26
20:42:37 117  ,gbp_g27
20:42:37 118  ,gbp_g28
20:42:37 119  ,gbp_g29
20:42:37 120  ,gbp_g30
20:42:37 121  ,gbp_g31
20:42:37 122  ,gbp_g32
20:42:37 123  ,gbp_g33
20:42:37 124  ,gbp_g34
20:42:37 125  ,gbp_g35
20:42:37 126  ,gbp_g36
20:42:37 127  ,gbp_g37
20:42:37 128  ,gbp_g38
20:42:37 129  ,gbp_g39
20:42:37 130  ,gbp_g40
20:42:37 131  ,gbp_g41
20:42:37 132  ,jpy_g00
20:42:37 133  ,jpy_g01
20:42:37 134  ,jpy_g02
20:42:37 135  ,jpy_g03
20:42:37 136  ,jpy_g04
20:42:37 137  ,jpy_g05
20:42:37 138  ,jpy_g06
20:42:37 139  ,jpy_g07
20:42:37 140  ,jpy_g08
20:42:37 141  ,jpy_g09
20:42:37 142  ,jpy_g10
20:42:37 143  ,jpy_g11
20:42:37 144  ,jpy_g12
20:42:37 145  ,jpy_g13
20:42:37 146  ,jpy_g14
20:42:37 147  ,jpy_g15
20:42:37 148  ,jpy_g16
20:42:37 149  ,jpy_g17
20:42:37 150  ,jpy_g18
20:42:37 151  ,jpy_g19
20:42:37 152  ,jpy_g20
20:42:37 153  ,jpy_g21
20:42:37 154  ,jpy_g22
20:42:37 155  ,jpy_g23
20:42:37 156  ,jpy_g24
20:42:37 157  ,jpy_g25
20:42:37 158  ,jpy_g26
20:42:37 159  ,jpy_g27
20:42:37 160  ,jpy_g28
20:42:37 161  ,jpy_g29
20:42:37 162  ,jpy_g30
20:42:37 163  ,jpy_g31
20:42:37 164  ,jpy_g32
20:42:37 165  ,jpy_g33
20:42:37 166  ,jpy_g34
20:42:37 167  ,jpy_g35
20:42:37 168  ,jpy_g36
20:42:37 169  ,jpy_g37
20:42:37 170  ,jpy_g38
20:42:37 171  ,jpy_g39
20:42:37 172  ,jpy_g40
20:42:37 173  ,jpy_g41
20:42:37 174  ,cad_g00
20:42:37 175  ,cad_g01
20:42:37 176  ,cad_g02
20:42:37 177  ,cad_g03
20:42:37 178  ,cad_g04
20:42:37 179  ,cad_g05
20:42:37 180  ,cad_g06
20:42:37 181  ,cad_g07
20:42:37 182  ,cad_g08
20:42:37 183  ,cad_g09
20:42:37 184  ,cad_g10
20:42:37 185  ,cad_g11
20:42:37 186  ,cad_g12
20:42:37 187  ,cad_g13
20:42:37 188  ,cad_g14
20:42:37 189  ,cad_g15
20:42:37 190  ,cad_g16
20:42:37 191  ,cad_g17
20:42:37 192  ,cad_g18
20:42:37 193  ,cad_g19
20:42:37 194  ,cad_g20
20:42:37 195  ,cad_g21
20:42:37 196  ,cad_g22
20:42:37 197  ,cad_g23
20:42:37 198  ,cad_g24
20:42:37 199  ,cad_g25
20:42:37 200  ,cad_g26
20:42:37 201  ,cad_g27
20:42:37 202  ,cad_g28
20:42:37 203  ,cad_g29
20:42:37 204  ,cad_g30
20:42:37 205  ,cad_g31
20:42:37 206  ,cad_g32
20:42:37 207  ,cad_g33
20:42:37 208  ,cad_g34
20:42:37 209  ,cad_g35
20:42:37 210  ,cad_g36
20:42:37 211  ,cad_g37
20:42:37 212  ,cad_g38
20:42:37 213  ,cad_g39
20:42:37 214  ,cad_g40
20:42:37 215  ,cad_g41
20:42:37 216  ,chf_g00
20:42:37 217  ,chf_g01
20:42:37 218  ,chf_g02
20:42:37 219  ,chf_g03
20:42:37 220  ,chf_g04
20:42:37 221  ,chf_g05
20:42:37 222  ,chf_g06
20:42:37 223  ,chf_g07
20:42:37 224  ,chf_g08
20:42:37 225  ,chf_g09
20:42:37 226  ,chf_g10
20:42:37 227  ,chf_g11
20:42:37 228  ,chf_g12
20:42:37 229  ,chf_g13
20:42:37 230  ,chf_g14
20:42:37 231  ,chf_g15
20:42:37 232  ,chf_g16
20:42:37 233  ,chf_g17
20:42:37 234  ,chf_g18
20:42:37 235  ,chf_g19
20:42:37 236  ,chf_g20
20:42:37 237  ,chf_g21
20:42:37 238  ,chf_g22
20:42:37 239  ,chf_g23
20:42:37 240  ,chf_g24
20:42:37 241  ,chf_g25
20:42:37 242  ,chf_g26
20:42:37 243  ,chf_g27
20:42:37 244  ,chf_g28
20:42:37 245  ,chf_g29
20:42:37 246  ,chf_g30
20:42:37 247  ,chf_g31
20:42:37 248  ,chf_g32
20:42:37 249  ,chf_g33
20:42:37 250  ,chf_g34
20:42:37 251  ,chf_g35
20:42:37 252  ,chf_g36
20:42:37 253  ,chf_g37
20:42:37 254  ,chf_g38
20:42:37 255  ,chf_g39
20:42:37 256  ,chf_g40
20:42:37 257  ,chf_g41
20:42:37 258  FROM aud_ms6 m
20:42:37 259  WHERE m.ydate = '&1'||' '||'&2'
20:42:37 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-28'||' '||'20:20:00'

View created.

Elapsed: 00:00:00.14
20:42:37 SQL> 
20:42:37 SQL> -- rpt
20:42:37 SQL> -- We should see just 1 row:
20:42:37 SQL> 
20:42:37 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
20:42:37 SQL> 
20:42:37 SQL> -- Build the model:
20:42:37 SQL> CREATE OR REPLACE VIEW bme AS
20:42:37   2  SELECT
20:42:37   3  'aud'||m.ydate prdate
20:42:37   4  ,gattn
20:42:37   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:42:37   6  ,eur_g00
20:42:37   7  ,eur_g01
20:42:37   8  ,eur_g02
20:42:37   9  ,eur_g03
20:42:37  10  ,eur_g04
20:42:37  11  ,eur_g05
20:42:37  12  ,eur_g06
20:42:37  13  ,eur_g07
20:42:37  14  ,eur_g08
20:42:37  15  ,eur_g09
20:42:37  16  ,eur_g10
20:42:37  17  ,eur_g11
20:42:37  18  ,eur_g12
20:42:37  19  ,eur_g13
20:42:37  20  ,eur_g14
20:42:37  21  ,eur_g15
20:42:37  22  ,eur_g16
20:42:37  23  ,eur_g17
20:42:37  24  ,eur_g18
20:42:37  25  ,eur_g19
20:42:37  26  ,eur_g20
20:42:37  27  ,eur_g21
20:42:37  28  ,eur_g22
20:42:37  29  ,eur_g23
20:42:37  30  ,eur_g24
20:42:37  31  ,eur_g25
20:42:37  32  ,eur_g26
20:42:37  33  ,eur_g27
20:42:37  34  ,eur_g28
20:42:37  35  ,eur_g29
20:42:37  36  ,eur_g30
20:42:37  37  ,eur_g31
20:42:37  38  ,eur_g32
20:42:37  39  ,eur_g33
20:42:37  40  ,eur_g34
20:42:37  41  ,eur_g35
20:42:37  42  ,eur_g36
20:42:37  43  ,eur_g37
20:42:37  44  ,eur_g38
20:42:37  45  ,eur_g39
20:42:37  46  ,eur_g40
20:42:37  47  ,eur_g41
20:42:37  48  ,aud_g00
20:42:37  49  ,aud_g01
20:42:37  50  ,aud_g02
20:42:37  51  ,aud_g03
20:42:37  52  ,aud_g04
20:42:37  53  ,aud_g05
20:42:37  54  ,aud_g06
20:42:37  55  ,aud_g07
20:42:37  56  ,aud_g08
20:42:37  57  ,aud_g09
20:42:37  58  ,aud_g10
20:42:37  59  ,aud_g11
20:42:37  60  ,aud_g12
20:42:37  61  ,aud_g13
20:42:37  62  ,aud_g14
20:42:37  63  ,aud_g15
20:42:37  64  ,aud_g16
20:42:37  65  ,aud_g17
20:42:37  66  ,aud_g18
20:42:37  67  ,aud_g19
20:42:37  68  ,aud_g20
20:42:37  69  ,aud_g21
20:42:37  70  ,aud_g22
20:42:37  71  ,aud_g23
20:42:37  72  ,aud_g24
20:42:37  73  ,aud_g25
20:42:37  74  ,aud_g26
20:42:37  75  ,aud_g27
20:42:37  76  ,aud_g28
20:42:37  77  ,aud_g29
20:42:37  78  ,aud_g30
20:42:37  79  ,aud_g31
20:42:37  80  ,aud_g32
20:42:37  81  ,aud_g33
20:42:37  82  ,aud_g34
20:42:37  83  ,aud_g35
20:42:37  84  ,aud_g36
20:42:37  85  ,aud_g37
20:42:37  86  ,aud_g38
20:42:37  87  ,aud_g39
20:42:37  88  ,aud_g40
20:42:37  89  ,aud_g41
20:42:37  90  ,gbp_g00
20:42:37  91  ,gbp_g01
20:42:37  92  ,gbp_g02
20:42:37  93  ,gbp_g03
20:42:37  94  ,gbp_g04
20:42:37  95  ,gbp_g05
20:42:37  96  ,gbp_g06
20:42:37  97  ,gbp_g07
20:42:37  98  ,gbp_g08
20:42:37  99  ,gbp_g09
20:42:37 100  ,gbp_g10
20:42:37 101  ,gbp_g11
20:42:37 102  ,gbp_g12
20:42:37 103  ,gbp_g13
20:42:37 104  ,gbp_g14
20:42:37 105  ,gbp_g15
20:42:37 106  ,gbp_g16
20:42:37 107  ,gbp_g17
20:42:37 108  ,gbp_g18
20:42:37 109  ,gbp_g19
20:42:37 110  ,gbp_g20
20:42:37 111  ,gbp_g21
20:42:37 112  ,gbp_g22
20:42:37 113  ,gbp_g23
20:42:37 114  ,gbp_g24
20:42:37 115  ,gbp_g25
20:42:37 116  ,gbp_g26
20:42:37 117  ,gbp_g27
20:42:37 118  ,gbp_g28
20:42:37 119  ,gbp_g29
20:42:37 120  ,gbp_g30
20:42:37 121  ,gbp_g31
20:42:37 122  ,gbp_g32
20:42:37 123  ,gbp_g33
20:42:37 124  ,gbp_g34
20:42:37 125  ,gbp_g35
20:42:37 126  ,gbp_g36
20:42:37 127  ,gbp_g37
20:42:37 128  ,gbp_g38
20:42:37 129  ,gbp_g39
20:42:37 130  ,gbp_g40
20:42:37 131  ,gbp_g41
20:42:37 132  ,jpy_g00
20:42:37 133  ,jpy_g01
20:42:37 134  ,jpy_g02
20:42:37 135  ,jpy_g03
20:42:37 136  ,jpy_g04
20:42:37 137  ,jpy_g05
20:42:37 138  ,jpy_g06
20:42:37 139  ,jpy_g07
20:42:37 140  ,jpy_g08
20:42:37 141  ,jpy_g09
20:42:37 142  ,jpy_g10
20:42:37 143  ,jpy_g11
20:42:37 144  ,jpy_g12
20:42:37 145  ,jpy_g13
20:42:37 146  ,jpy_g14
20:42:37 147  ,jpy_g15
20:42:37 148  ,jpy_g16
20:42:37 149  ,jpy_g17
20:42:37 150  ,jpy_g18
20:42:37 151  ,jpy_g19
20:42:37 152  ,jpy_g20
20:42:37 153  ,jpy_g21
20:42:37 154  ,jpy_g22
20:42:37 155  ,jpy_g23
20:42:37 156  ,jpy_g24
20:42:37 157  ,jpy_g25
20:42:37 158  ,jpy_g26
20:42:37 159  ,jpy_g27
20:42:37 160  ,jpy_g28
20:42:37 161  ,jpy_g29
20:42:37 162  ,jpy_g30
20:42:37 163  ,jpy_g31
20:42:37 164  ,jpy_g32
20:42:37 165  ,jpy_g33
20:42:37 166  ,jpy_g34
20:42:37 167  ,jpy_g35
20:42:37 168  ,jpy_g36
20:42:37 169  ,jpy_g37
20:42:37 170  ,jpy_g38
20:42:37 171  ,jpy_g39
20:42:37 172  ,jpy_g40
20:42:37 173  ,jpy_g41
20:42:37 174  ,cad_g00
20:42:37 175  ,cad_g01
20:42:37 176  ,cad_g02
20:42:37 177  ,cad_g03
20:42:37 178  ,cad_g04
20:42:37 179  ,cad_g05
20:42:37 180  ,cad_g06
20:42:37 181  ,cad_g07
20:42:37 182  ,cad_g08
20:42:37 183  ,cad_g09
20:42:37 184  ,cad_g10
20:42:37 185  ,cad_g11
20:42:37 186  ,cad_g12
20:42:37 187  ,cad_g13
20:42:37 188  ,cad_g14
20:42:37 189  ,cad_g15
20:42:37 190  ,cad_g16
20:42:37 191  ,cad_g17
20:42:37 192  ,cad_g18
20:42:37 193  ,cad_g19
20:42:37 194  ,cad_g20
20:42:37 195  ,cad_g21
20:42:37 196  ,cad_g22
20:42:37 197  ,cad_g23
20:42:37 198  ,cad_g24
20:42:37 199  ,cad_g25
20:42:37 200  ,cad_g26
20:42:37 201  ,cad_g27
20:42:37 202  ,cad_g28
20:42:37 203  ,cad_g29
20:42:37 204  ,cad_g30
20:42:37 205  ,cad_g31
20:42:37 206  ,cad_g32
20:42:37 207  ,cad_g33
20:42:37 208  ,cad_g34
20:42:37 209  ,cad_g35
20:42:37 210  ,cad_g36
20:42:37 211  ,cad_g37
20:42:37 212  ,cad_g38
20:42:37 213  ,cad_g39
20:42:37 214  ,cad_g40
20:42:37 215  ,cad_g41
20:42:37 216  ,chf_g00
20:42:37 217  ,chf_g01
20:42:37 218  ,chf_g02
20:42:37 219  ,chf_g03
20:42:37 220  ,chf_g04
20:42:37 221  ,chf_g05
20:42:37 222  ,chf_g06
20:42:37 223  ,chf_g07
20:42:37 224  ,chf_g08
20:42:37 225  ,chf_g09
20:42:37 226  ,chf_g10
20:42:37 227  ,chf_g11
20:42:37 228  ,chf_g12
20:42:37 229  ,chf_g13
20:42:37 230  ,chf_g14
20:42:37 231  ,chf_g15
20:42:37 232  ,chf_g16
20:42:37 233  ,chf_g17
20:42:37 234  ,chf_g18
20:42:37 235  ,chf_g19
20:42:37 236  ,chf_g20
20:42:37 237  ,chf_g21
20:42:37 238  ,chf_g22
20:42:37 239  ,chf_g23
20:42:37 240  ,chf_g24
20:42:37 241  ,chf_g25
20:42:37 242  ,chf_g26
20:42:37 243  ,chf_g27
20:42:37 244  ,chf_g28
20:42:37 245  ,chf_g29
20:42:37 246  ,chf_g30
20:42:37 247  ,chf_g31
20:42:37 248  ,chf_g32
20:42:37 249  ,chf_g33
20:42:37 250  ,chf_g34
20:42:37 251  ,chf_g35
20:42:37 252  ,chf_g36
20:42:37 253  ,chf_g37
20:42:37 254  ,chf_g38
20:42:37 255  ,chf_g39
20:42:37 256  ,chf_g40
20:42:37 257  ,chf_g41
20:42:37 258  FROM aud_ms6 m
20:42:37 259  WHERE gattn IN('nup','up')
20:42:37 260  AND 1+m.ydate < '&1'||' '||'&2'
20:42:37 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-28'||' '||'20:20:00'

View created.

Elapsed: 00:00:00.12
20:42:37 SQL> 
20:42:37 SQL> -- rpt
20:42:37 SQL> 
20:42:37 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12664
up	     6322

Elapsed: 00:00:00.05
20:42:37 SQL> 
20:42:37 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-27 20:15:00

Elapsed: 00:00:00.03
20:42:37 SQL> 
20:42:37 SQL> -- Now build model from bme and score sme
20:42:37 SQL> @score1gattn.sql
20:42:37 SQL> -- score1gattn.sql
20:42:37 SQL> 
20:42:37 SQL> -- Does the 1st SVM score
20:42:37 SQL> 
20:42:37 SQL> -- Fill up svmc_apply_prep
20:42:37 SQL> @score_gattn.sql
20:42:37 SQL> --
20:42:37 SQL> -- score_gattn.sql
20:42:37 SQL> --
20:42:37 SQL> 
20:42:37 SQL> -- usage: score_gattn.sql
20:42:37 SQL> 
20:42:37 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:42:37 SQL> 
20:42:37 SQL> DEFINE target	= 'gattn'
20:42:37 SQL> DEFINE model_name = 'forex14'
20:42:37 SQL> DEFINE bldtable	= 'bme'
20:42:37 SQL> DEFINE scoretable = 'sme'
20:42:37 SQL> DEFINE case_id	= 'prdate'
20:42:37 SQL> 
20:42:37 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:42:37 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:42:37 SQL> 
20:42:37 SQL> -- Builds an SVM model using pl/sql.
20:42:37 SQL> 
20:42:37 SQL> -----------------------------------------------------------------------
20:42:37 SQL> --			    BUILD THE MODEL
20:42:37 SQL> -----------------------------------------------------------------------
20:42:37 SQL> 
20:42:37 SQL> -- Cleanup old build data preparation objects for repeat runs
20:42:37 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
20:42:37 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:42:37 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
20:42:37 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
20:42:37 SQL> 
20:42:37 SQL> 
20:42:37 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:42:37 SQL> --
20:42:37 SQL> -- DROP	TABLE svmc_settings ;
20:42:37 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:42:37 SQL> -- DELETE svmc_settings;
20:42:37 SQL> 
20:42:37 SQL> -- The default classification algorithm is Naive Bayes. So override
20:42:37 SQL> -- this choice to SVM using a settings table.
20:42:37 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:42:37 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:42:37 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:42:37 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:42:37 SQL> -- models.
20:42:37 SQL> --
20:42:37 SQL> 
20:42:37 SQL> -- Do this once and then comment it out.
20:42:37 SQL> -- That makes script go faster.
20:42:37 SQL> -- BEGIN
20:42:37 SQL> -- -- Populate settings table
20:42:37 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:42:37 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:42:37 SQL> --
20:42:37 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:42:37 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:42:37 SQL> --
20:42:37 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:42:37 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:42:37 SQL> --   COMMIT;
20:42:37 SQL> -- END;
20:42:37 SQL> -- /
20:42:37 SQL> 
20:42:37 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:42:37 SQL> 
20:42:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:42:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:42:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:42:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:42:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:42:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:42:37 SQL> 
20:42:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:42:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:42:37 SQL> 
20:42:37 SQL> --------------------------------
20:42:37 SQL> -- PREPARE BUILD (TRAINING) DATA
20:42:37 SQL> --
20:42:37 SQL> 
20:42:37 SQL> -- 1. Missing Value treatment for all Predictors and
20:42:37 SQL> -- 2. Outlier Treatment and
20:42:37 SQL> -- 3. Normalization are performed below.
20:42:37 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:42:37 SQL> --    normalized here.
20:42:37 SQL> 
20:42:37 SQL> BEGIN
20:42:37   2  	-- Perform missing value treatment for all predictors
20:42:37   3  	-- create miss tables
20:42:37   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:42:37   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:42:37   6  
20:42:37   7  	-- populate miss tables
20:42:37   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:42:37   9  	  miss_table_name => 'svmc_miss_num',
20:42:37  10  	  data_table_name => '&bldtable',
20:42:37  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:42:37  12  
20:42:37  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:42:37  14  	  miss_table_name => 'svmc_miss_cat',
20:42:37  15  	  data_table_name => '&bldtable',
20:42:37  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:42:37  17  
20:42:37  18  	-- xform input data to replace missing values
20:42:37  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:42:37  20  	  miss_table_name => 'svmc_miss_num',
20:42:37  21  	  data_table_name => '&bldtable',
20:42:37  22  	  xform_view_name => 'xformed_build_miss_num');
20:42:37  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:42:37  24  	  miss_table_name => 'svmc_miss_cat',
20:42:37  25  	  data_table_name => '&bldtable',
20:42:37  26  	  xform_view_name => 'xformed_build_miss_cat');
20:42:37  27  
20:42:37  28  	-- Perform outlier treatment.
20:42:37  29  	-- create clip table
20:42:37  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:42:37  31  
20:42:37  32  	-- populate clip table
20:42:37  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:42:37  34  	  clip_table_name => 'svmc_clip',
20:42:37  35  	  data_table_name => '&bldtable',
20:42:37  36  	  tail_frac	  => 0.025,
20:42:37  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:42:37  38  
20:42:37  39  	-- xform input data to winsorized data
20:42:37  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:42:37  41  	  clip_table_name => 'svmc_clip',
20:42:37  42  	  data_table_name => '&bldtable',
20:42:37  43  	  xform_view_name => 'svmc_winsor');
20:42:37  44  
20:42:37  45  	-- create normalization table
20:42:37  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:42:37  47  
20:42:37  48  	-- populate normalization table based on winsorized data
20:42:37  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:42:37  50  	  norm_table_name => 'svmc_norm',
20:42:37  51  	  data_table_name => 'svmc_winsor',
20:42:37  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:42:37  53  
20:42:37  54  	-- normalize the original data
20:42:37  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:42:37  56  	  norm_table_name => 'svmc_norm',
20:42:37  57  	  data_table_name => '&bldtable',
20:42:37  58  	  xform_view_name => 'svmc_build_prep');
20:42:37  59  END;
20:42:37  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.79
20:42:55 SQL> 
20:42:55 SQL> ---------------------
20:42:55 SQL> -- CREATE A NEW MODEL
20:42:55 SQL> --
20:42:55 SQL> -- Cleanup old model with the same name for repeat runs
20:42:55 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:42:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:55   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.97
20:42:56 SQL> 
20:42:56 SQL> -- Build a new SVM Model
20:42:56 SQL> BEGIN
20:42:56   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:42:56   3  	  model_name	      => '&model_name',
20:42:56   4  	  mining_function     => dbms_data_mining.classification,
20:42:56   5  	  data_table_name     => 'svmc_build_prep',
20:42:56   6  	  case_id_column_name => '&case_id',
20:42:56   7  	  target_column_name  => '&target',
20:42:56   8  	  settings_table_name => 'svmc_settings');
20:42:56   9  END;
20:42:56  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.80
20:43:22 SQL> 
20:43:22 SQL> -----------------------------------------------------------------------
20:43:22 SQL> --			       APPLY/score THE MODEL
20:43:22 SQL> -----------------------------------------------------------------------
20:43:22 SQL> 
20:43:22 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:43:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:43:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:43:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:43:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:43:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:43:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:43:22 SQL> -----------------------
20:43:22 SQL> -- PREPARE SCORING DATA
20:43:22 SQL> --
20:43:22 SQL> -- If the data for model creation has been prepared, then the data
20:43:22 SQL> -- to be scored using the model must be prepared in the same manner
20:43:22 SQL> -- in order to obtain meaningful results.
20:43:22 SQL> --
20:43:22 SQL> -- 1. Missing Value treatment for all Predictors and
20:43:22 SQL> -- 2. Normalization
20:43:22 SQL> -- No outlier treatment will be performed during test and apply. The
20:43:22 SQL> -- normalization step is sufficient, since the normalization parameters
20:43:22 SQL> -- already capture the effects of outlier treatment done with build data.
20:43:22 SQL> --
20:43:22 SQL> BEGIN
20:43:22   2  	-- Xform Test data to replace missing values
20:43:22   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:43:22   4  	  miss_table_name => 'svmc_miss_num',
20:43:22   5  	  data_table_name => '&scoretable',
20:43:22   6  	  xform_view_name => 'xformed_apply_miss_num');
20:43:22   7  
20:43:22   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:43:22   9  	  miss_table_name => 'svmc_miss_cat',
20:43:22  10  	  data_table_name => '&scoretable',
20:43:22  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:43:22  12  
20:43:22  13  	-- Normalize the data to be scored
20:43:22  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:43:22  15  	  norm_table_name => 'svmc_norm',
20:43:22  16  	  data_table_name => '&scoretable',
20:43:22  17  	  xform_view_name => 'svmc_apply_prep');
20:43:22  18  END;
20:43:22  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.16
20:43:23 SQL> 
20:43:23 SQL> -- Use same model_name used in score_gattn.sql
20:43:23 SQL> DEFINE model_name = 'forex14'
20:43:23 SQL> 
20:43:23 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
20:43:23 SQL> 
20:43:23 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
20:43:23   2  SELECT
20:43:23   3  prdate
20:43:23   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:43:23   5  ,sysdate
20:43:23   6  ,SUBSTR(prdate,1,3)pair
20:43:23   7  ,SUBSTR(prdate,4,19)ydate
20:43:23   8  FROM svmc_apply_prep
20:43:23   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
20:43:24 SQL> @aud_score1day_gattn.sql	2010-12-28 20:25:00
20:43:24 SQL> --
20:43:24 SQL> -- aud_score1day_gattn.sql
20:43:24 SQL> --
20:43:24 SQL> 
20:43:24 SQL> CREATE OR REPLACE VIEW sme AS
20:43:24   2  SELECT
20:43:24   3  'aud'||m.ydate prdate
20:43:24   4  ,NULL gattn
20:43:24   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:43:24   6  ,eur_g00
20:43:24   7  ,eur_g01
20:43:24   8  ,eur_g02
20:43:24   9  ,eur_g03
20:43:24  10  ,eur_g04
20:43:24  11  ,eur_g05
20:43:24  12  ,eur_g06
20:43:24  13  ,eur_g07
20:43:24  14  ,eur_g08
20:43:24  15  ,eur_g09
20:43:24  16  ,eur_g10
20:43:24  17  ,eur_g11
20:43:24  18  ,eur_g12
20:43:24  19  ,eur_g13
20:43:24  20  ,eur_g14
20:43:24  21  ,eur_g15
20:43:24  22  ,eur_g16
20:43:24  23  ,eur_g17
20:43:24  24  ,eur_g18
20:43:24  25  ,eur_g19
20:43:24  26  ,eur_g20
20:43:24  27  ,eur_g21
20:43:24  28  ,eur_g22
20:43:24  29  ,eur_g23
20:43:24  30  ,eur_g24
20:43:24  31  ,eur_g25
20:43:24  32  ,eur_g26
20:43:24  33  ,eur_g27
20:43:24  34  ,eur_g28
20:43:24  35  ,eur_g29
20:43:24  36  ,eur_g30
20:43:24  37  ,eur_g31
20:43:24  38  ,eur_g32
20:43:24  39  ,eur_g33
20:43:24  40  ,eur_g34
20:43:24  41  ,eur_g35
20:43:24  42  ,eur_g36
20:43:24  43  ,eur_g37
20:43:24  44  ,eur_g38
20:43:24  45  ,eur_g39
20:43:24  46  ,eur_g40
20:43:24  47  ,eur_g41
20:43:24  48  ,aud_g00
20:43:24  49  ,aud_g01
20:43:24  50  ,aud_g02
20:43:24  51  ,aud_g03
20:43:24  52  ,aud_g04
20:43:24  53  ,aud_g05
20:43:24  54  ,aud_g06
20:43:24  55  ,aud_g07
20:43:24  56  ,aud_g08
20:43:24  57  ,aud_g09
20:43:24  58  ,aud_g10
20:43:24  59  ,aud_g11
20:43:24  60  ,aud_g12
20:43:24  61  ,aud_g13
20:43:24  62  ,aud_g14
20:43:24  63  ,aud_g15
20:43:24  64  ,aud_g16
20:43:24  65  ,aud_g17
20:43:24  66  ,aud_g18
20:43:24  67  ,aud_g19
20:43:24  68  ,aud_g20
20:43:24  69  ,aud_g21
20:43:24  70  ,aud_g22
20:43:24  71  ,aud_g23
20:43:24  72  ,aud_g24
20:43:24  73  ,aud_g25
20:43:24  74  ,aud_g26
20:43:24  75  ,aud_g27
20:43:24  76  ,aud_g28
20:43:24  77  ,aud_g29
20:43:24  78  ,aud_g30
20:43:24  79  ,aud_g31
20:43:24  80  ,aud_g32
20:43:24  81  ,aud_g33
20:43:24  82  ,aud_g34
20:43:24  83  ,aud_g35
20:43:24  84  ,aud_g36
20:43:24  85  ,aud_g37
20:43:24  86  ,aud_g38
20:43:24  87  ,aud_g39
20:43:24  88  ,aud_g40
20:43:24  89  ,aud_g41
20:43:24  90  ,gbp_g00
20:43:24  91  ,gbp_g01
20:43:24  92  ,gbp_g02
20:43:24  93  ,gbp_g03
20:43:24  94  ,gbp_g04
20:43:24  95  ,gbp_g05
20:43:24  96  ,gbp_g06
20:43:24  97  ,gbp_g07
20:43:24  98  ,gbp_g08
20:43:24  99  ,gbp_g09
20:43:24 100  ,gbp_g10
20:43:24 101  ,gbp_g11
20:43:24 102  ,gbp_g12
20:43:24 103  ,gbp_g13
20:43:24 104  ,gbp_g14
20:43:24 105  ,gbp_g15
20:43:24 106  ,gbp_g16
20:43:24 107  ,gbp_g17
20:43:24 108  ,gbp_g18
20:43:24 109  ,gbp_g19
20:43:24 110  ,gbp_g20
20:43:24 111  ,gbp_g21
20:43:24 112  ,gbp_g22
20:43:24 113  ,gbp_g23
20:43:24 114  ,gbp_g24
20:43:24 115  ,gbp_g25
20:43:24 116  ,gbp_g26
20:43:24 117  ,gbp_g27
20:43:24 118  ,gbp_g28
20:43:24 119  ,gbp_g29
20:43:24 120  ,gbp_g30
20:43:24 121  ,gbp_g31
20:43:24 122  ,gbp_g32
20:43:24 123  ,gbp_g33
20:43:24 124  ,gbp_g34
20:43:24 125  ,gbp_g35
20:43:24 126  ,gbp_g36
20:43:24 127  ,gbp_g37
20:43:24 128  ,gbp_g38
20:43:24 129  ,gbp_g39
20:43:24 130  ,gbp_g40
20:43:24 131  ,gbp_g41
20:43:24 132  ,jpy_g00
20:43:24 133  ,jpy_g01
20:43:24 134  ,jpy_g02
20:43:24 135  ,jpy_g03
20:43:24 136  ,jpy_g04
20:43:24 137  ,jpy_g05
20:43:24 138  ,jpy_g06
20:43:24 139  ,jpy_g07
20:43:24 140  ,jpy_g08
20:43:24 141  ,jpy_g09
20:43:24 142  ,jpy_g10
20:43:24 143  ,jpy_g11
20:43:24 144  ,jpy_g12
20:43:24 145  ,jpy_g13
20:43:24 146  ,jpy_g14
20:43:24 147  ,jpy_g15
20:43:24 148  ,jpy_g16
20:43:24 149  ,jpy_g17
20:43:24 150  ,jpy_g18
20:43:24 151  ,jpy_g19
20:43:24 152  ,jpy_g20
20:43:24 153  ,jpy_g21
20:43:24 154  ,jpy_g22
20:43:24 155  ,jpy_g23
20:43:24 156  ,jpy_g24
20:43:24 157  ,jpy_g25
20:43:24 158  ,jpy_g26
20:43:24 159  ,jpy_g27
20:43:24 160  ,jpy_g28
20:43:24 161  ,jpy_g29
20:43:24 162  ,jpy_g30
20:43:24 163  ,jpy_g31
20:43:24 164  ,jpy_g32
20:43:24 165  ,jpy_g33
20:43:24 166  ,jpy_g34
20:43:24 167  ,jpy_g35
20:43:24 168  ,jpy_g36
20:43:24 169  ,jpy_g37
20:43:24 170  ,jpy_g38
20:43:24 171  ,jpy_g39
20:43:24 172  ,jpy_g40
20:43:24 173  ,jpy_g41
20:43:24 174  ,cad_g00
20:43:24 175  ,cad_g01
20:43:24 176  ,cad_g02
20:43:24 177  ,cad_g03
20:43:24 178  ,cad_g04
20:43:24 179  ,cad_g05
20:43:24 180  ,cad_g06
20:43:24 181  ,cad_g07
20:43:24 182  ,cad_g08
20:43:24 183  ,cad_g09
20:43:24 184  ,cad_g10
20:43:24 185  ,cad_g11
20:43:24 186  ,cad_g12
20:43:24 187  ,cad_g13
20:43:24 188  ,cad_g14
20:43:24 189  ,cad_g15
20:43:24 190  ,cad_g16
20:43:24 191  ,cad_g17
20:43:24 192  ,cad_g18
20:43:24 193  ,cad_g19
20:43:24 194  ,cad_g20
20:43:24 195  ,cad_g21
20:43:24 196  ,cad_g22
20:43:24 197  ,cad_g23
20:43:24 198  ,cad_g24
20:43:24 199  ,cad_g25
20:43:24 200  ,cad_g26
20:43:24 201  ,cad_g27
20:43:24 202  ,cad_g28
20:43:24 203  ,cad_g29
20:43:24 204  ,cad_g30
20:43:24 205  ,cad_g31
20:43:24 206  ,cad_g32
20:43:24 207  ,cad_g33
20:43:24 208  ,cad_g34
20:43:24 209  ,cad_g35
20:43:24 210  ,cad_g36
20:43:24 211  ,cad_g37
20:43:24 212  ,cad_g38
20:43:24 213  ,cad_g39
20:43:24 214  ,cad_g40
20:43:24 215  ,cad_g41
20:43:24 216  ,chf_g00
20:43:24 217  ,chf_g01
20:43:24 218  ,chf_g02
20:43:24 219  ,chf_g03
20:43:24 220  ,chf_g04
20:43:24 221  ,chf_g05
20:43:24 222  ,chf_g06
20:43:24 223  ,chf_g07
20:43:24 224  ,chf_g08
20:43:24 225  ,chf_g09
20:43:24 226  ,chf_g10
20:43:24 227  ,chf_g11
20:43:24 228  ,chf_g12
20:43:24 229  ,chf_g13
20:43:24 230  ,chf_g14
20:43:24 231  ,chf_g15
20:43:24 232  ,chf_g16
20:43:24 233  ,chf_g17
20:43:24 234  ,chf_g18
20:43:24 235  ,chf_g19
20:43:24 236  ,chf_g20
20:43:24 237  ,chf_g21
20:43:24 238  ,chf_g22
20:43:24 239  ,chf_g23
20:43:24 240  ,chf_g24
20:43:24 241  ,chf_g25
20:43:24 242  ,chf_g26
20:43:24 243  ,chf_g27
20:43:24 244  ,chf_g28
20:43:24 245  ,chf_g29
20:43:24 246  ,chf_g30
20:43:24 247  ,chf_g31
20:43:24 248  ,chf_g32
20:43:24 249  ,chf_g33
20:43:24 250  ,chf_g34
20:43:24 251  ,chf_g35
20:43:24 252  ,chf_g36
20:43:24 253  ,chf_g37
20:43:24 254  ,chf_g38
20:43:24 255  ,chf_g39
20:43:24 256  ,chf_g40
20:43:24 257  ,chf_g41
20:43:24 258  FROM aud_ms6 m
20:43:24 259  WHERE m.ydate = '&1'||' '||'&2'
20:43:24 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-28'||' '||'20:25:00'

View created.

Elapsed: 00:00:00.13
20:43:24 SQL> 
20:43:24 SQL> -- rpt
20:43:24 SQL> -- We should see just 1 row:
20:43:24 SQL> 
20:43:24 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
20:43:24 SQL> 
20:43:24 SQL> -- Build the model:
20:43:24 SQL> CREATE OR REPLACE VIEW bme AS
20:43:24   2  SELECT
20:43:24   3  'aud'||m.ydate prdate
20:43:24   4  ,gattn
20:43:24   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:43:24   6  ,eur_g00
20:43:24   7  ,eur_g01
20:43:24   8  ,eur_g02
20:43:24   9  ,eur_g03
20:43:24  10  ,eur_g04
20:43:24  11  ,eur_g05
20:43:24  12  ,eur_g06
20:43:24  13  ,eur_g07
20:43:24  14  ,eur_g08
20:43:24  15  ,eur_g09
20:43:24  16  ,eur_g10
20:43:24  17  ,eur_g11
20:43:24  18  ,eur_g12
20:43:24  19  ,eur_g13
20:43:24  20  ,eur_g14
20:43:24  21  ,eur_g15
20:43:24  22  ,eur_g16
20:43:24  23  ,eur_g17
20:43:24  24  ,eur_g18
20:43:24  25  ,eur_g19
20:43:24  26  ,eur_g20
20:43:24  27  ,eur_g21
20:43:24  28  ,eur_g22
20:43:24  29  ,eur_g23
20:43:24  30  ,eur_g24
20:43:24  31  ,eur_g25
20:43:24  32  ,eur_g26
20:43:24  33  ,eur_g27
20:43:24  34  ,eur_g28
20:43:24  35  ,eur_g29
20:43:24  36  ,eur_g30
20:43:24  37  ,eur_g31
20:43:24  38  ,eur_g32
20:43:24  39  ,eur_g33
20:43:24  40  ,eur_g34
20:43:24  41  ,eur_g35
20:43:24  42  ,eur_g36
20:43:24  43  ,eur_g37
20:43:24  44  ,eur_g38
20:43:24  45  ,eur_g39
20:43:24  46  ,eur_g40
20:43:24  47  ,eur_g41
20:43:24  48  ,aud_g00
20:43:24  49  ,aud_g01
20:43:24  50  ,aud_g02
20:43:24  51  ,aud_g03
20:43:24  52  ,aud_g04
20:43:24  53  ,aud_g05
20:43:24  54  ,aud_g06
20:43:24  55  ,aud_g07
20:43:24  56  ,aud_g08
20:43:24  57  ,aud_g09
20:43:24  58  ,aud_g10
20:43:24  59  ,aud_g11
20:43:24  60  ,aud_g12
20:43:24  61  ,aud_g13
20:43:24  62  ,aud_g14
20:43:24  63  ,aud_g15
20:43:24  64  ,aud_g16
20:43:24  65  ,aud_g17
20:43:24  66  ,aud_g18
20:43:24  67  ,aud_g19
20:43:24  68  ,aud_g20
20:43:24  69  ,aud_g21
20:43:24  70  ,aud_g22
20:43:24  71  ,aud_g23
20:43:24  72  ,aud_g24
20:43:24  73  ,aud_g25
20:43:24  74  ,aud_g26
20:43:24  75  ,aud_g27
20:43:24  76  ,aud_g28
20:43:24  77  ,aud_g29
20:43:24  78  ,aud_g30
20:43:24  79  ,aud_g31
20:43:24  80  ,aud_g32
20:43:24  81  ,aud_g33
20:43:24  82  ,aud_g34
20:43:24  83  ,aud_g35
20:43:24  84  ,aud_g36
20:43:24  85  ,aud_g37
20:43:24  86  ,aud_g38
20:43:24  87  ,aud_g39
20:43:24  88  ,aud_g40
20:43:24  89  ,aud_g41
20:43:24  90  ,gbp_g00
20:43:24  91  ,gbp_g01
20:43:24  92  ,gbp_g02
20:43:24  93  ,gbp_g03
20:43:24  94  ,gbp_g04
20:43:24  95  ,gbp_g05
20:43:24  96  ,gbp_g06
20:43:24  97  ,gbp_g07
20:43:24  98  ,gbp_g08
20:43:24  99  ,gbp_g09
20:43:24 100  ,gbp_g10
20:43:24 101  ,gbp_g11
20:43:24 102  ,gbp_g12
20:43:24 103  ,gbp_g13
20:43:24 104  ,gbp_g14
20:43:24 105  ,gbp_g15
20:43:24 106  ,gbp_g16
20:43:24 107  ,gbp_g17
20:43:24 108  ,gbp_g18
20:43:24 109  ,gbp_g19
20:43:24 110  ,gbp_g20
20:43:24 111  ,gbp_g21
20:43:24 112  ,gbp_g22
20:43:24 113  ,gbp_g23
20:43:24 114  ,gbp_g24
20:43:24 115  ,gbp_g25
20:43:24 116  ,gbp_g26
20:43:24 117  ,gbp_g27
20:43:24 118  ,gbp_g28
20:43:24 119  ,gbp_g29
20:43:24 120  ,gbp_g30
20:43:24 121  ,gbp_g31
20:43:24 122  ,gbp_g32
20:43:24 123  ,gbp_g33
20:43:24 124  ,gbp_g34
20:43:24 125  ,gbp_g35
20:43:24 126  ,gbp_g36
20:43:24 127  ,gbp_g37
20:43:24 128  ,gbp_g38
20:43:24 129  ,gbp_g39
20:43:24 130  ,gbp_g40
20:43:24 131  ,gbp_g41
20:43:24 132  ,jpy_g00
20:43:24 133  ,jpy_g01
20:43:24 134  ,jpy_g02
20:43:24 135  ,jpy_g03
20:43:24 136  ,jpy_g04
20:43:24 137  ,jpy_g05
20:43:24 138  ,jpy_g06
20:43:24 139  ,jpy_g07
20:43:24 140  ,jpy_g08
20:43:24 141  ,jpy_g09
20:43:24 142  ,jpy_g10
20:43:24 143  ,jpy_g11
20:43:24 144  ,jpy_g12
20:43:24 145  ,jpy_g13
20:43:24 146  ,jpy_g14
20:43:24 147  ,jpy_g15
20:43:24 148  ,jpy_g16
20:43:24 149  ,jpy_g17
20:43:24 150  ,jpy_g18
20:43:24 151  ,jpy_g19
20:43:24 152  ,jpy_g20
20:43:24 153  ,jpy_g21
20:43:24 154  ,jpy_g22
20:43:24 155  ,jpy_g23
20:43:24 156  ,jpy_g24
20:43:24 157  ,jpy_g25
20:43:24 158  ,jpy_g26
20:43:24 159  ,jpy_g27
20:43:24 160  ,jpy_g28
20:43:24 161  ,jpy_g29
20:43:24 162  ,jpy_g30
20:43:24 163  ,jpy_g31
20:43:24 164  ,jpy_g32
20:43:24 165  ,jpy_g33
20:43:24 166  ,jpy_g34
20:43:24 167  ,jpy_g35
20:43:24 168  ,jpy_g36
20:43:24 169  ,jpy_g37
20:43:24 170  ,jpy_g38
20:43:24 171  ,jpy_g39
20:43:24 172  ,jpy_g40
20:43:24 173  ,jpy_g41
20:43:24 174  ,cad_g00
20:43:24 175  ,cad_g01
20:43:24 176  ,cad_g02
20:43:24 177  ,cad_g03
20:43:24 178  ,cad_g04
20:43:24 179  ,cad_g05
20:43:24 180  ,cad_g06
20:43:24 181  ,cad_g07
20:43:24 182  ,cad_g08
20:43:24 183  ,cad_g09
20:43:24 184  ,cad_g10
20:43:24 185  ,cad_g11
20:43:24 186  ,cad_g12
20:43:24 187  ,cad_g13
20:43:24 188  ,cad_g14
20:43:24 189  ,cad_g15
20:43:24 190  ,cad_g16
20:43:24 191  ,cad_g17
20:43:24 192  ,cad_g18
20:43:24 193  ,cad_g19
20:43:24 194  ,cad_g20
20:43:24 195  ,cad_g21
20:43:24 196  ,cad_g22
20:43:24 197  ,cad_g23
20:43:24 198  ,cad_g24
20:43:24 199  ,cad_g25
20:43:24 200  ,cad_g26
20:43:24 201  ,cad_g27
20:43:24 202  ,cad_g28
20:43:24 203  ,cad_g29
20:43:24 204  ,cad_g30
20:43:24 205  ,cad_g31
20:43:24 206  ,cad_g32
20:43:24 207  ,cad_g33
20:43:24 208  ,cad_g34
20:43:24 209  ,cad_g35
20:43:24 210  ,cad_g36
20:43:24 211  ,cad_g37
20:43:24 212  ,cad_g38
20:43:24 213  ,cad_g39
20:43:24 214  ,cad_g40
20:43:24 215  ,cad_g41
20:43:24 216  ,chf_g00
20:43:24 217  ,chf_g01
20:43:24 218  ,chf_g02
20:43:24 219  ,chf_g03
20:43:24 220  ,chf_g04
20:43:24 221  ,chf_g05
20:43:24 222  ,chf_g06
20:43:24 223  ,chf_g07
20:43:24 224  ,chf_g08
20:43:24 225  ,chf_g09
20:43:24 226  ,chf_g10
20:43:24 227  ,chf_g11
20:43:24 228  ,chf_g12
20:43:24 229  ,chf_g13
20:43:24 230  ,chf_g14
20:43:24 231  ,chf_g15
20:43:24 232  ,chf_g16
20:43:24 233  ,chf_g17
20:43:24 234  ,chf_g18
20:43:24 235  ,chf_g19
20:43:24 236  ,chf_g20
20:43:24 237  ,chf_g21
20:43:24 238  ,chf_g22
20:43:24 239  ,chf_g23
20:43:24 240  ,chf_g24
20:43:24 241  ,chf_g25
20:43:24 242  ,chf_g26
20:43:24 243  ,chf_g27
20:43:24 244  ,chf_g28
20:43:24 245  ,chf_g29
20:43:24 246  ,chf_g30
20:43:24 247  ,chf_g31
20:43:24 248  ,chf_g32
20:43:24 249  ,chf_g33
20:43:24 250  ,chf_g34
20:43:24 251  ,chf_g35
20:43:24 252  ,chf_g36
20:43:24 253  ,chf_g37
20:43:24 254  ,chf_g38
20:43:24 255  ,chf_g39
20:43:24 256  ,chf_g40
20:43:24 257  ,chf_g41
20:43:24 258  FROM aud_ms6 m
20:43:24 259  WHERE gattn IN('nup','up')
20:43:24 260  AND 1+m.ydate < '&1'||' '||'&2'
20:43:24 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-28'||' '||'20:25:00'

View created.

Elapsed: 00:00:00.12
20:43:24 SQL> 
20:43:24 SQL> -- rpt
20:43:24 SQL> 
20:43:24 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12665
up	     6322

Elapsed: 00:00:00.04
20:43:24 SQL> 
20:43:24 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-27 20:20:00

Elapsed: 00:00:00.03
20:43:24 SQL> 
20:43:24 SQL> -- Now build model from bme and score sme
20:43:24 SQL> @score1gattn.sql
20:43:24 SQL> -- score1gattn.sql
20:43:24 SQL> 
20:43:24 SQL> -- Does the 1st SVM score
20:43:24 SQL> 
20:43:24 SQL> -- Fill up svmc_apply_prep
20:43:24 SQL> @score_gattn.sql
20:43:24 SQL> --
20:43:24 SQL> -- score_gattn.sql
20:43:24 SQL> --
20:43:24 SQL> 
20:43:24 SQL> -- usage: score_gattn.sql
20:43:24 SQL> 
20:43:24 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:43:24 SQL> 
20:43:24 SQL> DEFINE target	= 'gattn'
20:43:24 SQL> DEFINE model_name = 'forex14'
20:43:24 SQL> DEFINE bldtable	= 'bme'
20:43:24 SQL> DEFINE scoretable = 'sme'
20:43:24 SQL> DEFINE case_id	= 'prdate'
20:43:24 SQL> 
20:43:24 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:43:24 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:43:24 SQL> 
20:43:24 SQL> -- Builds an SVM model using pl/sql.
20:43:24 SQL> 
20:43:24 SQL> -----------------------------------------------------------------------
20:43:24 SQL> --			    BUILD THE MODEL
20:43:24 SQL> -----------------------------------------------------------------------
20:43:24 SQL> 
20:43:24 SQL> -- Cleanup old build data preparation objects for repeat runs
20:43:24 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
20:43:24 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:43:24 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
20:43:24 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
20:43:24 SQL> 
20:43:24 SQL> 
20:43:24 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:43:24 SQL> --
20:43:24 SQL> -- DROP	TABLE svmc_settings ;
20:43:24 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:43:24 SQL> -- DELETE svmc_settings;
20:43:24 SQL> 
20:43:24 SQL> -- The default classification algorithm is Naive Bayes. So override
20:43:24 SQL> -- this choice to SVM using a settings table.
20:43:24 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:43:24 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:43:24 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:43:24 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:43:24 SQL> -- models.
20:43:24 SQL> --
20:43:24 SQL> 
20:43:24 SQL> -- Do this once and then comment it out.
20:43:24 SQL> -- That makes script go faster.
20:43:24 SQL> -- BEGIN
20:43:24 SQL> -- -- Populate settings table
20:43:24 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:43:24 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:43:24 SQL> --
20:43:24 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:43:24 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:43:24 SQL> --
20:43:24 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:43:24 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:43:24 SQL> --   COMMIT;
20:43:24 SQL> -- END;
20:43:24 SQL> -- /
20:43:24 SQL> 
20:43:24 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:43:24 SQL> 
20:43:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:43:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:43:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:43:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:43:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:43:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:43:24 SQL> 
20:43:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:43:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:43:24 SQL> 
20:43:24 SQL> --------------------------------
20:43:24 SQL> -- PREPARE BUILD (TRAINING) DATA
20:43:24 SQL> --
20:43:24 SQL> 
20:43:24 SQL> -- 1. Missing Value treatment for all Predictors and
20:43:24 SQL> -- 2. Outlier Treatment and
20:43:24 SQL> -- 3. Normalization are performed below.
20:43:24 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:43:24 SQL> --    normalized here.
20:43:24 SQL> 
20:43:24 SQL> BEGIN
20:43:24   2  	-- Perform missing value treatment for all predictors
20:43:24   3  	-- create miss tables
20:43:24   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:43:24   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:43:24   6  
20:43:24   7  	-- populate miss tables
20:43:24   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:43:24   9  	  miss_table_name => 'svmc_miss_num',
20:43:24  10  	  data_table_name => '&bldtable',
20:43:24  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:43:24  12  
20:43:24  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:43:24  14  	  miss_table_name => 'svmc_miss_cat',
20:43:24  15  	  data_table_name => '&bldtable',
20:43:24  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:43:24  17  
20:43:24  18  	-- xform input data to replace missing values
20:43:24  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:43:24  20  	  miss_table_name => 'svmc_miss_num',
20:43:24  21  	  data_table_name => '&bldtable',
20:43:24  22  	  xform_view_name => 'xformed_build_miss_num');
20:43:24  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:43:24  24  	  miss_table_name => 'svmc_miss_cat',
20:43:24  25  	  data_table_name => '&bldtable',
20:43:24  26  	  xform_view_name => 'xformed_build_miss_cat');
20:43:24  27  
20:43:24  28  	-- Perform outlier treatment.
20:43:24  29  	-- create clip table
20:43:24  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:43:24  31  
20:43:24  32  	-- populate clip table
20:43:24  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:43:24  34  	  clip_table_name => 'svmc_clip',
20:43:24  35  	  data_table_name => '&bldtable',
20:43:24  36  	  tail_frac	  => 0.025,
20:43:24  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:43:24  38  
20:43:24  39  	-- xform input data to winsorized data
20:43:24  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:43:24  41  	  clip_table_name => 'svmc_clip',
20:43:24  42  	  data_table_name => '&bldtable',
20:43:24  43  	  xform_view_name => 'svmc_winsor');
20:43:24  44  
20:43:24  45  	-- create normalization table
20:43:24  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:43:24  47  
20:43:24  48  	-- populate normalization table based on winsorized data
20:43:24  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:43:24  50  	  norm_table_name => 'svmc_norm',
20:43:24  51  	  data_table_name => 'svmc_winsor',
20:43:24  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:43:24  53  
20:43:24  54  	-- normalize the original data
20:43:24  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:43:24  56  	  norm_table_name => 'svmc_norm',
20:43:24  57  	  data_table_name => '&bldtable',
20:43:24  58  	  xform_view_name => 'svmc_build_prep');
20:43:24  59  END;
20:43:24  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.29
20:43:41 SQL> 
20:43:41 SQL> ---------------------
20:43:41 SQL> -- CREATE A NEW MODEL
20:43:41 SQL> --
20:43:41 SQL> -- Cleanup old model with the same name for repeat runs
20:43:41 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:43:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:41   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.95
20:43:42 SQL> 
20:43:42 SQL> -- Build a new SVM Model
20:43:42 SQL> BEGIN
20:43:42   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:43:42   3  	  model_name	      => '&model_name',
20:43:42   4  	  mining_function     => dbms_data_mining.classification,
20:43:42   5  	  data_table_name     => 'svmc_build_prep',
20:43:42   6  	  case_id_column_name => '&case_id',
20:43:42   7  	  target_column_name  => '&target',
20:43:42   8  	  settings_table_name => 'svmc_settings');
20:43:42   9  END;
20:43:42  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.72
20:44:09 SQL> 
20:44:09 SQL> -----------------------------------------------------------------------
20:44:09 SQL> --			       APPLY/score THE MODEL
20:44:09 SQL> -----------------------------------------------------------------------
20:44:09 SQL> 
20:44:09 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:44:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:44:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:44:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:44:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:44:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:44:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:44:09 SQL> -----------------------
20:44:09 SQL> -- PREPARE SCORING DATA
20:44:09 SQL> --
20:44:09 SQL> -- If the data for model creation has been prepared, then the data
20:44:09 SQL> -- to be scored using the model must be prepared in the same manner
20:44:09 SQL> -- in order to obtain meaningful results.
20:44:09 SQL> --
20:44:09 SQL> -- 1. Missing Value treatment for all Predictors and
20:44:09 SQL> -- 2. Normalization
20:44:09 SQL> -- No outlier treatment will be performed during test and apply. The
20:44:09 SQL> -- normalization step is sufficient, since the normalization parameters
20:44:09 SQL> -- already capture the effects of outlier treatment done with build data.
20:44:09 SQL> --
20:44:09 SQL> BEGIN
20:44:09   2  	-- Xform Test data to replace missing values
20:44:09   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:44:09   4  	  miss_table_name => 'svmc_miss_num',
20:44:09   5  	  data_table_name => '&scoretable',
20:44:09   6  	  xform_view_name => 'xformed_apply_miss_num');
20:44:09   7  
20:44:09   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:44:09   9  	  miss_table_name => 'svmc_miss_cat',
20:44:09  10  	  data_table_name => '&scoretable',
20:44:09  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:44:09  12  
20:44:09  13  	-- Normalize the data to be scored
20:44:09  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:44:09  15  	  norm_table_name => 'svmc_norm',
20:44:09  16  	  data_table_name => '&scoretable',
20:44:09  17  	  xform_view_name => 'svmc_apply_prep');
20:44:09  18  END;
20:44:09  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.38
20:44:11 SQL> 
20:44:11 SQL> -- Use same model_name used in score_gattn.sql
20:44:11 SQL> DEFINE model_name = 'forex14'
20:44:11 SQL> 
20:44:11 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
20:44:11 SQL> 
20:44:11 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
20:44:11   2  SELECT
20:44:11   3  prdate
20:44:11   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:44:11   5  ,sysdate
20:44:11   6  ,SUBSTR(prdate,1,3)pair
20:44:11   7  ,SUBSTR(prdate,4,19)ydate
20:44:11   8  FROM svmc_apply_prep
20:44:11   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
20:44:11 SQL> @aud_score1day_gattn.sql	2010-12-28 20:30:00
20:44:11 SQL> --
20:44:11 SQL> -- aud_score1day_gattn.sql
20:44:11 SQL> --
20:44:11 SQL> 
20:44:11 SQL> CREATE OR REPLACE VIEW sme AS
20:44:11   2  SELECT
20:44:11   3  'aud'||m.ydate prdate
20:44:11   4  ,NULL gattn
20:44:11   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:44:11   6  ,eur_g00
20:44:11   7  ,eur_g01
20:44:11   8  ,eur_g02
20:44:11   9  ,eur_g03
20:44:11  10  ,eur_g04
20:44:11  11  ,eur_g05
20:44:11  12  ,eur_g06
20:44:11  13  ,eur_g07
20:44:11  14  ,eur_g08
20:44:11  15  ,eur_g09
20:44:11  16  ,eur_g10
20:44:11  17  ,eur_g11
20:44:11  18  ,eur_g12
20:44:11  19  ,eur_g13
20:44:11  20  ,eur_g14
20:44:11  21  ,eur_g15
20:44:11  22  ,eur_g16
20:44:11  23  ,eur_g17
20:44:11  24  ,eur_g18
20:44:11  25  ,eur_g19
20:44:11  26  ,eur_g20
20:44:11  27  ,eur_g21
20:44:11  28  ,eur_g22
20:44:11  29  ,eur_g23
20:44:11  30  ,eur_g24
20:44:11  31  ,eur_g25
20:44:11  32  ,eur_g26
20:44:11  33  ,eur_g27
20:44:11  34  ,eur_g28
20:44:11  35  ,eur_g29
20:44:11  36  ,eur_g30
20:44:11  37  ,eur_g31
20:44:11  38  ,eur_g32
20:44:11  39  ,eur_g33
20:44:11  40  ,eur_g34
20:44:11  41  ,eur_g35
20:44:11  42  ,eur_g36
20:44:11  43  ,eur_g37
20:44:11  44  ,eur_g38
20:44:11  45  ,eur_g39
20:44:11  46  ,eur_g40
20:44:11  47  ,eur_g41
20:44:11  48  ,aud_g00
20:44:11  49  ,aud_g01
20:44:11  50  ,aud_g02
20:44:11  51  ,aud_g03
20:44:11  52  ,aud_g04
20:44:11  53  ,aud_g05
20:44:11  54  ,aud_g06
20:44:11  55  ,aud_g07
20:44:11  56  ,aud_g08
20:44:11  57  ,aud_g09
20:44:11  58  ,aud_g10
20:44:11  59  ,aud_g11
20:44:11  60  ,aud_g12
20:44:11  61  ,aud_g13
20:44:11  62  ,aud_g14
20:44:11  63  ,aud_g15
20:44:11  64  ,aud_g16
20:44:11  65  ,aud_g17
20:44:11  66  ,aud_g18
20:44:11  67  ,aud_g19
20:44:11  68  ,aud_g20
20:44:11  69  ,aud_g21
20:44:11  70  ,aud_g22
20:44:11  71  ,aud_g23
20:44:11  72  ,aud_g24
20:44:11  73  ,aud_g25
20:44:11  74  ,aud_g26
20:44:11  75  ,aud_g27
20:44:11  76  ,aud_g28
20:44:11  77  ,aud_g29
20:44:11  78  ,aud_g30
20:44:11  79  ,aud_g31
20:44:11  80  ,aud_g32
20:44:11  81  ,aud_g33
20:44:11  82  ,aud_g34
20:44:11  83  ,aud_g35
20:44:11  84  ,aud_g36
20:44:11  85  ,aud_g37
20:44:11  86  ,aud_g38
20:44:11  87  ,aud_g39
20:44:11  88  ,aud_g40
20:44:11  89  ,aud_g41
20:44:11  90  ,gbp_g00
20:44:11  91  ,gbp_g01
20:44:11  92  ,gbp_g02
20:44:11  93  ,gbp_g03
20:44:11  94  ,gbp_g04
20:44:11  95  ,gbp_g05
20:44:11  96  ,gbp_g06
20:44:11  97  ,gbp_g07
20:44:11  98  ,gbp_g08
20:44:11  99  ,gbp_g09
20:44:11 100  ,gbp_g10
20:44:11 101  ,gbp_g11
20:44:11 102  ,gbp_g12
20:44:11 103  ,gbp_g13
20:44:11 104  ,gbp_g14
20:44:11 105  ,gbp_g15
20:44:11 106  ,gbp_g16
20:44:11 107  ,gbp_g17
20:44:11 108  ,gbp_g18
20:44:11 109  ,gbp_g19
20:44:11 110  ,gbp_g20
20:44:11 111  ,gbp_g21
20:44:11 112  ,gbp_g22
20:44:11 113  ,gbp_g23
20:44:11 114  ,gbp_g24
20:44:11 115  ,gbp_g25
20:44:11 116  ,gbp_g26
20:44:11 117  ,gbp_g27
20:44:11 118  ,gbp_g28
20:44:11 119  ,gbp_g29
20:44:11 120  ,gbp_g30
20:44:11 121  ,gbp_g31
20:44:11 122  ,gbp_g32
20:44:11 123  ,gbp_g33
20:44:11 124  ,gbp_g34
20:44:11 125  ,gbp_g35
20:44:11 126  ,gbp_g36
20:44:11 127  ,gbp_g37
20:44:11 128  ,gbp_g38
20:44:11 129  ,gbp_g39
20:44:11 130  ,gbp_g40
20:44:11 131  ,gbp_g41
20:44:11 132  ,jpy_g00
20:44:11 133  ,jpy_g01
20:44:11 134  ,jpy_g02
20:44:11 135  ,jpy_g03
20:44:11 136  ,jpy_g04
20:44:11 137  ,jpy_g05
20:44:11 138  ,jpy_g06
20:44:11 139  ,jpy_g07
20:44:11 140  ,jpy_g08
20:44:11 141  ,jpy_g09
20:44:11 142  ,jpy_g10
20:44:11 143  ,jpy_g11
20:44:11 144  ,jpy_g12
20:44:11 145  ,jpy_g13
20:44:11 146  ,jpy_g14
20:44:11 147  ,jpy_g15
20:44:11 148  ,jpy_g16
20:44:11 149  ,jpy_g17
20:44:11 150  ,jpy_g18
20:44:11 151  ,jpy_g19
20:44:11 152  ,jpy_g20
20:44:11 153  ,jpy_g21
20:44:11 154  ,jpy_g22
20:44:11 155  ,jpy_g23
20:44:11 156  ,jpy_g24
20:44:11 157  ,jpy_g25
20:44:11 158  ,jpy_g26
20:44:11 159  ,jpy_g27
20:44:11 160  ,jpy_g28
20:44:11 161  ,jpy_g29
20:44:11 162  ,jpy_g30
20:44:11 163  ,jpy_g31
20:44:11 164  ,jpy_g32
20:44:11 165  ,jpy_g33
20:44:11 166  ,jpy_g34
20:44:11 167  ,jpy_g35
20:44:11 168  ,jpy_g36
20:44:11 169  ,jpy_g37
20:44:11 170  ,jpy_g38
20:44:11 171  ,jpy_g39
20:44:11 172  ,jpy_g40
20:44:11 173  ,jpy_g41
20:44:11 174  ,cad_g00
20:44:11 175  ,cad_g01
20:44:11 176  ,cad_g02
20:44:11 177  ,cad_g03
20:44:11 178  ,cad_g04
20:44:11 179  ,cad_g05
20:44:11 180  ,cad_g06
20:44:11 181  ,cad_g07
20:44:11 182  ,cad_g08
20:44:11 183  ,cad_g09
20:44:11 184  ,cad_g10
20:44:11 185  ,cad_g11
20:44:11 186  ,cad_g12
20:44:11 187  ,cad_g13
20:44:11 188  ,cad_g14
20:44:11 189  ,cad_g15
20:44:11 190  ,cad_g16
20:44:11 191  ,cad_g17
20:44:11 192  ,cad_g18
20:44:11 193  ,cad_g19
20:44:11 194  ,cad_g20
20:44:11 195  ,cad_g21
20:44:11 196  ,cad_g22
20:44:11 197  ,cad_g23
20:44:11 198  ,cad_g24
20:44:11 199  ,cad_g25
20:44:11 200  ,cad_g26
20:44:11 201  ,cad_g27
20:44:11 202  ,cad_g28
20:44:11 203  ,cad_g29
20:44:11 204  ,cad_g30
20:44:11 205  ,cad_g31
20:44:11 206  ,cad_g32
20:44:11 207  ,cad_g33
20:44:11 208  ,cad_g34
20:44:11 209  ,cad_g35
20:44:11 210  ,cad_g36
20:44:11 211  ,cad_g37
20:44:11 212  ,cad_g38
20:44:11 213  ,cad_g39
20:44:11 214  ,cad_g40
20:44:11 215  ,cad_g41
20:44:11 216  ,chf_g00
20:44:11 217  ,chf_g01
20:44:11 218  ,chf_g02
20:44:11 219  ,chf_g03
20:44:11 220  ,chf_g04
20:44:11 221  ,chf_g05
20:44:11 222  ,chf_g06
20:44:11 223  ,chf_g07
20:44:11 224  ,chf_g08
20:44:11 225  ,chf_g09
20:44:11 226  ,chf_g10
20:44:11 227  ,chf_g11
20:44:11 228  ,chf_g12
20:44:11 229  ,chf_g13
20:44:11 230  ,chf_g14
20:44:11 231  ,chf_g15
20:44:11 232  ,chf_g16
20:44:11 233  ,chf_g17
20:44:11 234  ,chf_g18
20:44:11 235  ,chf_g19
20:44:11 236  ,chf_g20
20:44:11 237  ,chf_g21
20:44:11 238  ,chf_g22
20:44:11 239  ,chf_g23
20:44:11 240  ,chf_g24
20:44:11 241  ,chf_g25
20:44:11 242  ,chf_g26
20:44:11 243  ,chf_g27
20:44:11 244  ,chf_g28
20:44:11 245  ,chf_g29
20:44:11 246  ,chf_g30
20:44:11 247  ,chf_g31
20:44:11 248  ,chf_g32
20:44:11 249  ,chf_g33
20:44:11 250  ,chf_g34
20:44:11 251  ,chf_g35
20:44:11 252  ,chf_g36
20:44:11 253  ,chf_g37
20:44:11 254  ,chf_g38
20:44:11 255  ,chf_g39
20:44:11 256  ,chf_g40
20:44:11 257  ,chf_g41
20:44:11 258  FROM aud_ms6 m
20:44:11 259  WHERE m.ydate = '&1'||' '||'&2'
20:44:11 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-28'||' '||'20:30:00'

View created.

Elapsed: 00:00:00.14
20:44:11 SQL> 
20:44:11 SQL> -- rpt
20:44:11 SQL> -- We should see just 1 row:
20:44:11 SQL> 
20:44:11 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
20:44:11 SQL> 
20:44:11 SQL> -- Build the model:
20:44:11 SQL> CREATE OR REPLACE VIEW bme AS
20:44:11   2  SELECT
20:44:11   3  'aud'||m.ydate prdate
20:44:11   4  ,gattn
20:44:11   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:44:11   6  ,eur_g00
20:44:11   7  ,eur_g01
20:44:11   8  ,eur_g02
20:44:11   9  ,eur_g03
20:44:11  10  ,eur_g04
20:44:11  11  ,eur_g05
20:44:11  12  ,eur_g06
20:44:11  13  ,eur_g07
20:44:11  14  ,eur_g08
20:44:11  15  ,eur_g09
20:44:11  16  ,eur_g10
20:44:11  17  ,eur_g11
20:44:11  18  ,eur_g12
20:44:11  19  ,eur_g13
20:44:11  20  ,eur_g14
20:44:11  21  ,eur_g15
20:44:11  22  ,eur_g16
20:44:11  23  ,eur_g17
20:44:11  24  ,eur_g18
20:44:11  25  ,eur_g19
20:44:11  26  ,eur_g20
20:44:11  27  ,eur_g21
20:44:11  28  ,eur_g22
20:44:11  29  ,eur_g23
20:44:11  30  ,eur_g24
20:44:11  31  ,eur_g25
20:44:11  32  ,eur_g26
20:44:11  33  ,eur_g27
20:44:11  34  ,eur_g28
20:44:11  35  ,eur_g29
20:44:11  36  ,eur_g30
20:44:11  37  ,eur_g31
20:44:11  38  ,eur_g32
20:44:11  39  ,eur_g33
20:44:11  40  ,eur_g34
20:44:11  41  ,eur_g35
20:44:11  42  ,eur_g36
20:44:11  43  ,eur_g37
20:44:11  44  ,eur_g38
20:44:11  45  ,eur_g39
20:44:11  46  ,eur_g40
20:44:11  47  ,eur_g41
20:44:11  48  ,aud_g00
20:44:11  49  ,aud_g01
20:44:11  50  ,aud_g02
20:44:11  51  ,aud_g03
20:44:11  52  ,aud_g04
20:44:11  53  ,aud_g05
20:44:11  54  ,aud_g06
20:44:11  55  ,aud_g07
20:44:11  56  ,aud_g08
20:44:11  57  ,aud_g09
20:44:11  58  ,aud_g10
20:44:11  59  ,aud_g11
20:44:11  60  ,aud_g12
20:44:11  61  ,aud_g13
20:44:11  62  ,aud_g14
20:44:11  63  ,aud_g15
20:44:11  64  ,aud_g16
20:44:11  65  ,aud_g17
20:44:11  66  ,aud_g18
20:44:11  67  ,aud_g19
20:44:11  68  ,aud_g20
20:44:11  69  ,aud_g21
20:44:11  70  ,aud_g22
20:44:11  71  ,aud_g23
20:44:11  72  ,aud_g24
20:44:11  73  ,aud_g25
20:44:11  74  ,aud_g26
20:44:11  75  ,aud_g27
20:44:11  76  ,aud_g28
20:44:11  77  ,aud_g29
20:44:11  78  ,aud_g30
20:44:11  79  ,aud_g31
20:44:11  80  ,aud_g32
20:44:11  81  ,aud_g33
20:44:11  82  ,aud_g34
20:44:11  83  ,aud_g35
20:44:11  84  ,aud_g36
20:44:11  85  ,aud_g37
20:44:11  86  ,aud_g38
20:44:11  87  ,aud_g39
20:44:11  88  ,aud_g40
20:44:11  89  ,aud_g41
20:44:11  90  ,gbp_g00
20:44:11  91  ,gbp_g01
20:44:11  92  ,gbp_g02
20:44:11  93  ,gbp_g03
20:44:11  94  ,gbp_g04
20:44:11  95  ,gbp_g05
20:44:11  96  ,gbp_g06
20:44:11  97  ,gbp_g07
20:44:11  98  ,gbp_g08
20:44:11  99  ,gbp_g09
20:44:11 100  ,gbp_g10
20:44:11 101  ,gbp_g11
20:44:11 102  ,gbp_g12
20:44:11 103  ,gbp_g13
20:44:11 104  ,gbp_g14
20:44:11 105  ,gbp_g15
20:44:11 106  ,gbp_g16
20:44:11 107  ,gbp_g17
20:44:11 108  ,gbp_g18
20:44:11 109  ,gbp_g19
20:44:11 110  ,gbp_g20
20:44:11 111  ,gbp_g21
20:44:11 112  ,gbp_g22
20:44:11 113  ,gbp_g23
20:44:11 114  ,gbp_g24
20:44:11 115  ,gbp_g25
20:44:11 116  ,gbp_g26
20:44:11 117  ,gbp_g27
20:44:11 118  ,gbp_g28
20:44:11 119  ,gbp_g29
20:44:11 120  ,gbp_g30
20:44:11 121  ,gbp_g31
20:44:11 122  ,gbp_g32
20:44:11 123  ,gbp_g33
20:44:11 124  ,gbp_g34
20:44:11 125  ,gbp_g35
20:44:11 126  ,gbp_g36
20:44:11 127  ,gbp_g37
20:44:11 128  ,gbp_g38
20:44:11 129  ,gbp_g39
20:44:11 130  ,gbp_g40
20:44:11 131  ,gbp_g41
20:44:11 132  ,jpy_g00
20:44:11 133  ,jpy_g01
20:44:11 134  ,jpy_g02
20:44:11 135  ,jpy_g03
20:44:11 136  ,jpy_g04
20:44:11 137  ,jpy_g05
20:44:11 138  ,jpy_g06
20:44:11 139  ,jpy_g07
20:44:11 140  ,jpy_g08
20:44:11 141  ,jpy_g09
20:44:11 142  ,jpy_g10
20:44:11 143  ,jpy_g11
20:44:11 144  ,jpy_g12
20:44:11 145  ,jpy_g13
20:44:11 146  ,jpy_g14
20:44:11 147  ,jpy_g15
20:44:11 148  ,jpy_g16
20:44:11 149  ,jpy_g17
20:44:11 150  ,jpy_g18
20:44:11 151  ,jpy_g19
20:44:11 152  ,jpy_g20
20:44:11 153  ,jpy_g21
20:44:11 154  ,jpy_g22
20:44:11 155  ,jpy_g23
20:44:11 156  ,jpy_g24
20:44:11 157  ,jpy_g25
20:44:11 158  ,jpy_g26
20:44:11 159  ,jpy_g27
20:44:11 160  ,jpy_g28
20:44:11 161  ,jpy_g29
20:44:11 162  ,jpy_g30
20:44:11 163  ,jpy_g31
20:44:11 164  ,jpy_g32
20:44:11 165  ,jpy_g33
20:44:11 166  ,jpy_g34
20:44:11 167  ,jpy_g35
20:44:11 168  ,jpy_g36
20:44:11 169  ,jpy_g37
20:44:11 170  ,jpy_g38
20:44:11 171  ,jpy_g39
20:44:11 172  ,jpy_g40
20:44:11 173  ,jpy_g41
20:44:11 174  ,cad_g00
20:44:11 175  ,cad_g01
20:44:11 176  ,cad_g02
20:44:11 177  ,cad_g03
20:44:11 178  ,cad_g04
20:44:11 179  ,cad_g05
20:44:11 180  ,cad_g06
20:44:11 181  ,cad_g07
20:44:11 182  ,cad_g08
20:44:11 183  ,cad_g09
20:44:11 184  ,cad_g10
20:44:11 185  ,cad_g11
20:44:11 186  ,cad_g12
20:44:11 187  ,cad_g13
20:44:11 188  ,cad_g14
20:44:11 189  ,cad_g15
20:44:11 190  ,cad_g16
20:44:11 191  ,cad_g17
20:44:11 192  ,cad_g18
20:44:11 193  ,cad_g19
20:44:11 194  ,cad_g20
20:44:11 195  ,cad_g21
20:44:11 196  ,cad_g22
20:44:11 197  ,cad_g23
20:44:11 198  ,cad_g24
20:44:11 199  ,cad_g25
20:44:11 200  ,cad_g26
20:44:11 201  ,cad_g27
20:44:11 202  ,cad_g28
20:44:11 203  ,cad_g29
20:44:11 204  ,cad_g30
20:44:11 205  ,cad_g31
20:44:11 206  ,cad_g32
20:44:11 207  ,cad_g33
20:44:11 208  ,cad_g34
20:44:11 209  ,cad_g35
20:44:11 210  ,cad_g36
20:44:11 211  ,cad_g37
20:44:11 212  ,cad_g38
20:44:11 213  ,cad_g39
20:44:11 214  ,cad_g40
20:44:11 215  ,cad_g41
20:44:11 216  ,chf_g00
20:44:11 217  ,chf_g01
20:44:11 218  ,chf_g02
20:44:11 219  ,chf_g03
20:44:11 220  ,chf_g04
20:44:11 221  ,chf_g05
20:44:11 222  ,chf_g06
20:44:11 223  ,chf_g07
20:44:11 224  ,chf_g08
20:44:11 225  ,chf_g09
20:44:11 226  ,chf_g10
20:44:11 227  ,chf_g11
20:44:11 228  ,chf_g12
20:44:11 229  ,chf_g13
20:44:11 230  ,chf_g14
20:44:11 231  ,chf_g15
20:44:11 232  ,chf_g16
20:44:11 233  ,chf_g17
20:44:11 234  ,chf_g18
20:44:11 235  ,chf_g19
20:44:11 236  ,chf_g20
20:44:11 237  ,chf_g21
20:44:11 238  ,chf_g22
20:44:11 239  ,chf_g23
20:44:11 240  ,chf_g24
20:44:11 241  ,chf_g25
20:44:11 242  ,chf_g26
20:44:11 243  ,chf_g27
20:44:11 244  ,chf_g28
20:44:11 245  ,chf_g29
20:44:11 246  ,chf_g30
20:44:11 247  ,chf_g31
20:44:11 248  ,chf_g32
20:44:11 249  ,chf_g33
20:44:11 250  ,chf_g34
20:44:11 251  ,chf_g35
20:44:11 252  ,chf_g36
20:44:11 253  ,chf_g37
20:44:11 254  ,chf_g38
20:44:11 255  ,chf_g39
20:44:11 256  ,chf_g40
20:44:11 257  ,chf_g41
20:44:11 258  FROM aud_ms6 m
20:44:11 259  WHERE gattn IN('nup','up')
20:44:11 260  AND 1+m.ydate < '&1'||' '||'&2'
20:44:11 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-28'||' '||'20:30:00'

View created.

Elapsed: 00:00:00.12
20:44:11 SQL> 
20:44:11 SQL> -- rpt
20:44:11 SQL> 
20:44:11 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12666
up	     6322

Elapsed: 00:00:00.04
20:44:11 SQL> 
20:44:11 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-27 20:25:00

Elapsed: 00:00:00.03
20:44:11 SQL> 
20:44:11 SQL> -- Now build model from bme and score sme
20:44:11 SQL> @score1gattn.sql
20:44:11 SQL> -- score1gattn.sql
20:44:11 SQL> 
20:44:11 SQL> -- Does the 1st SVM score
20:44:11 SQL> 
20:44:11 SQL> -- Fill up svmc_apply_prep
20:44:11 SQL> @score_gattn.sql
20:44:11 SQL> --
20:44:11 SQL> -- score_gattn.sql
20:44:11 SQL> --
20:44:11 SQL> 
20:44:11 SQL> -- usage: score_gattn.sql
20:44:11 SQL> 
20:44:11 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:44:11 SQL> 
20:44:11 SQL> DEFINE target	= 'gattn'
20:44:11 SQL> DEFINE model_name = 'forex14'
20:44:11 SQL> DEFINE bldtable	= 'bme'
20:44:11 SQL> DEFINE scoretable = 'sme'
20:44:11 SQL> DEFINE case_id	= 'prdate'
20:44:11 SQL> 
20:44:11 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:44:11 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:44:11 SQL> 
20:44:11 SQL> -- Builds an SVM model using pl/sql.
20:44:11 SQL> 
20:44:11 SQL> -----------------------------------------------------------------------
20:44:11 SQL> --			    BUILD THE MODEL
20:44:11 SQL> -----------------------------------------------------------------------
20:44:11 SQL> 
20:44:11 SQL> -- Cleanup old build data preparation objects for repeat runs
20:44:11 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
20:44:11 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
20:44:11 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
20:44:11 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
20:44:11 SQL> 
20:44:11 SQL> 
20:44:11 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:44:11 SQL> --
20:44:11 SQL> -- DROP	TABLE svmc_settings ;
20:44:11 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:44:11 SQL> -- DELETE svmc_settings;
20:44:11 SQL> 
20:44:11 SQL> -- The default classification algorithm is Naive Bayes. So override
20:44:11 SQL> -- this choice to SVM using a settings table.
20:44:11 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:44:11 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:44:11 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:44:11 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:44:11 SQL> -- models.
20:44:11 SQL> --
20:44:11 SQL> 
20:44:11 SQL> -- Do this once and then comment it out.
20:44:11 SQL> -- That makes script go faster.
20:44:11 SQL> -- BEGIN
20:44:11 SQL> -- -- Populate settings table
20:44:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:44:11 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:44:11 SQL> --
20:44:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:44:11 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:44:11 SQL> --
20:44:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:44:11 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:44:11 SQL> --   COMMIT;
20:44:11 SQL> -- END;
20:44:11 SQL> -- /
20:44:11 SQL> 
20:44:11 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:44:11 SQL> 
20:44:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:44:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:44:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:44:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:44:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:44:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:44:11 SQL> 
20:44:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:44:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:44:12 SQL> 
20:44:12 SQL> --------------------------------
20:44:12 SQL> -- PREPARE BUILD (TRAINING) DATA
20:44:12 SQL> --
20:44:12 SQL> 
20:44:12 SQL> -- 1. Missing Value treatment for all Predictors and
20:44:12 SQL> -- 2. Outlier Treatment and
20:44:12 SQL> -- 3. Normalization are performed below.
20:44:12 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:44:12 SQL> --    normalized here.
20:44:12 SQL> 
20:44:12 SQL> BEGIN
20:44:12   2  	-- Perform missing value treatment for all predictors
20:44:12   3  	-- create miss tables
20:44:12   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:44:12   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:44:12   6  
20:44:12   7  	-- populate miss tables
20:44:12   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:44:12   9  	  miss_table_name => 'svmc_miss_num',
20:44:12  10  	  data_table_name => '&bldtable',
20:44:12  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:44:12  12  
20:44:12  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:44:12  14  	  miss_table_name => 'svmc_miss_cat',
20:44:12  15  	  data_table_name => '&bldtable',
20:44:12  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:44:12  17  
20:44:12  18  	-- xform input data to replace missing values
20:44:12  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:44:12  20  	  miss_table_name => 'svmc_miss_num',
20:44:12  21  	  data_table_name => '&bldtable',
20:44:12  22  	  xform_view_name => 'xformed_build_miss_num');
20:44:12  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:44:12  24  	  miss_table_name => 'svmc_miss_cat',
20:44:12  25  	  data_table_name => '&bldtable',
20:44:12  26  	  xform_view_name => 'xformed_build_miss_cat');
20:44:12  27  
20:44:12  28  	-- Perform outlier treatment.
20:44:12  29  	-- create clip table
20:44:12  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:44:12  31  
20:44:12  32  	-- populate clip table
20:44:12  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:44:12  34  	  clip_table_name => 'svmc_clip',
20:44:12  35  	  data_table_name => '&bldtable',
20:44:12  36  	  tail_frac	  => 0.025,
20:44:12  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:44:12  38  
20:44:12  39  	-- xform input data to winsorized data
20:44:12  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:44:12  41  	  clip_table_name => 'svmc_clip',
20:44:12  42  	  data_table_name => '&bldtable',
20:44:12  43  	  xform_view_name => 'svmc_winsor');
20:44:12  44  
20:44:12  45  	-- create normalization table
20:44:12  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:44:12  47  
20:44:12  48  	-- populate normalization table based on winsorized data
20:44:12  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:44:12  50  	  norm_table_name => 'svmc_norm',
20:44:12  51  	  data_table_name => 'svmc_winsor',
20:44:12  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:44:12  53  
20:44:12  54  	-- normalize the original data
20:44:12  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:44:12  56  	  norm_table_name => 'svmc_norm',
20:44:12  57  	  data_table_name => '&bldtable',
20:44:12  58  	  xform_view_name => 'svmc_build_prep');
20:44:12  59  END;
20:44:12  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.80
20:44:29 SQL> 
20:44:29 SQL> ---------------------
20:44:29 SQL> -- CREATE A NEW MODEL
20:44:29 SQL> --
20:44:29 SQL> -- Cleanup old model with the same name for repeat runs
20:44:29 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:44:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:29   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.92
20:44:31 SQL> 
20:44:31 SQL> -- Build a new SVM Model
20:44:31 SQL> BEGIN
20:44:31   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:44:31   3  	  model_name	      => '&model_name',
20:44:31   4  	  mining_function     => dbms_data_mining.classification,
20:44:31   5  	  data_table_name     => 'svmc_build_prep',
20:44:31   6  	  case_id_column_name => '&case_id',
20:44:31   7  	  target_column_name  => '&target',
20:44:31   8  	  settings_table_name => 'svmc_settings');
20:44:31   9  END;
20:44:31  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.81
20:44:59 SQL> 
20:44:59 SQL> -----------------------------------------------------------------------
20:44:59 SQL> --			       APPLY/score THE MODEL
20:44:59 SQL> -----------------------------------------------------------------------
20:44:59 SQL> 
20:44:59 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:44:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:44:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:44:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:44:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:44:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:44:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:44:59 SQL> -----------------------
20:44:59 SQL> -- PREPARE SCORING DATA
20:44:59 SQL> --
20:44:59 SQL> -- If the data for model creation has been prepared, then the data
20:44:59 SQL> -- to be scored using the model must be prepared in the same manner
20:44:59 SQL> -- in order to obtain meaningful results.
20:44:59 SQL> --
20:44:59 SQL> -- 1. Missing Value treatment for all Predictors and
20:44:59 SQL> -- 2. Normalization
20:44:59 SQL> -- No outlier treatment will be performed during test and apply. The
20:44:59 SQL> -- normalization step is sufficient, since the normalization parameters
20:44:59 SQL> -- already capture the effects of outlier treatment done with build data.
20:44:59 SQL> --
20:44:59 SQL> BEGIN
20:44:59   2  	-- Xform Test data to replace missing values
20:44:59   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:44:59   4  	  miss_table_name => 'svmc_miss_num',
20:44:59   5  	  data_table_name => '&scoretable',
20:44:59   6  	  xform_view_name => 'xformed_apply_miss_num');
20:44:59   7  
20:44:59   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:44:59   9  	  miss_table_name => 'svmc_miss_cat',
20:44:59  10  	  data_table_name => '&scoretable',
20:44:59  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:44:59  12  
20:44:59  13  	-- Normalize the data to be scored
20:44:59  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:44:59  15  	  norm_table_name => 'svmc_norm',
20:44:59  16  	  data_table_name => '&scoretable',
20:44:59  17  	  xform_view_name => 'svmc_apply_prep');
20:44:59  18  END;
20:44:59  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.16
20:45:00 SQL> 
20:45:00 SQL> -- Use same model_name used in score_gattn.sql
20:45:00 SQL> DEFINE model_name = 'forex14'
20:45:00 SQL> 
20:45:00 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
20:45:00 SQL> 
20:45:00 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
20:45:00   2  SELECT
20:45:00   3  prdate
20:45:00   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:45:00   5  ,sysdate
20:45:00   6  ,SUBSTR(prdate,1,3)pair
20:45:00   7  ,SUBSTR(prdate,4,19)ydate
20:45:00   8  FROM svmc_apply_prep
20:45:00   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
20:45:01 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
