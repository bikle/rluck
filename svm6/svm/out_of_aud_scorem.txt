
SQL*Plus: Release 11.2.0.1.0 Production on Wed Dec 29 23:28:44 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

23:28:44 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.01
23:28:44 SQL> 23:28:44 SQL> @aud_score1day.sql  2010-12-29 23:05:00
23:28:44 SQL> --
23:28:44 SQL> -- aud_score1day.sql
23:28:44 SQL> --
23:28:44 SQL> 
23:28:44 SQL> CREATE OR REPLACE VIEW sme AS
23:28:44   2  SELECT
23:28:44   3  'aud'||m.ydate prdate
23:28:44   4  ,NULL gatt
23:28:44   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:28:44   6  ,eur_g00
23:28:44   7  ,eur_g01
23:28:44   8  ,eur_g02
23:28:44   9  ,eur_g03
23:28:44  10  ,eur_g04
23:28:44  11  ,eur_g05
23:28:44  12  ,eur_g06
23:28:44  13  ,eur_g07
23:28:44  14  ,eur_g08
23:28:44  15  ,eur_g09
23:28:44  16  ,eur_g10
23:28:44  17  ,eur_g11
23:28:44  18  ,eur_g12
23:28:44  19  ,eur_g13
23:28:44  20  ,eur_g14
23:28:44  21  ,eur_g15
23:28:44  22  ,eur_g16
23:28:44  23  ,eur_g17
23:28:44  24  ,eur_g18
23:28:44  25  ,eur_g19
23:28:44  26  ,eur_g20
23:28:44  27  ,eur_g21
23:28:44  28  ,eur_g22
23:28:44  29  ,eur_g23
23:28:44  30  ,eur_g24
23:28:44  31  ,eur_g25
23:28:44  32  ,eur_g26
23:28:44  33  ,eur_g27
23:28:44  34  ,eur_g28
23:28:44  35  ,eur_g29
23:28:44  36  ,eur_g30
23:28:44  37  ,eur_g31
23:28:44  38  ,eur_g32
23:28:44  39  ,eur_g33
23:28:44  40  ,eur_g34
23:28:44  41  ,eur_g35
23:28:44  42  ,eur_g36
23:28:44  43  ,eur_g37
23:28:44  44  ,eur_g38
23:28:44  45  ,eur_g39
23:28:44  46  ,eur_g40
23:28:44  47  ,eur_g41
23:28:44  48  ,aud_g00
23:28:44  49  ,aud_g01
23:28:44  50  ,aud_g02
23:28:44  51  ,aud_g03
23:28:44  52  ,aud_g04
23:28:44  53  ,aud_g05
23:28:44  54  ,aud_g06
23:28:44  55  ,aud_g07
23:28:44  56  ,aud_g08
23:28:44  57  ,aud_g09
23:28:44  58  ,aud_g10
23:28:44  59  ,aud_g11
23:28:44  60  ,aud_g12
23:28:44  61  ,aud_g13
23:28:44  62  ,aud_g14
23:28:44  63  ,aud_g15
23:28:44  64  ,aud_g16
23:28:44  65  ,aud_g17
23:28:44  66  ,aud_g18
23:28:44  67  ,aud_g19
23:28:44  68  ,aud_g20
23:28:44  69  ,aud_g21
23:28:44  70  ,aud_g22
23:28:44  71  ,aud_g23
23:28:44  72  ,aud_g24
23:28:44  73  ,aud_g25
23:28:44  74  ,aud_g26
23:28:44  75  ,aud_g27
23:28:44  76  ,aud_g28
23:28:44  77  ,aud_g29
23:28:44  78  ,aud_g30
23:28:44  79  ,aud_g31
23:28:44  80  ,aud_g32
23:28:44  81  ,aud_g33
23:28:44  82  ,aud_g34
23:28:44  83  ,aud_g35
23:28:44  84  ,aud_g36
23:28:44  85  ,aud_g37
23:28:44  86  ,aud_g38
23:28:44  87  ,aud_g39
23:28:44  88  ,aud_g40
23:28:44  89  ,aud_g41
23:28:44  90  ,gbp_g00
23:28:44  91  ,gbp_g01
23:28:44  92  ,gbp_g02
23:28:44  93  ,gbp_g03
23:28:44  94  ,gbp_g04
23:28:44  95  ,gbp_g05
23:28:44  96  ,gbp_g06
23:28:44  97  ,gbp_g07
23:28:44  98  ,gbp_g08
23:28:44  99  ,gbp_g09
23:28:44 100  ,gbp_g10
23:28:44 101  ,gbp_g11
23:28:44 102  ,gbp_g12
23:28:44 103  ,gbp_g13
23:28:44 104  ,gbp_g14
23:28:44 105  ,gbp_g15
23:28:44 106  ,gbp_g16
23:28:44 107  ,gbp_g17
23:28:44 108  ,gbp_g18
23:28:44 109  ,gbp_g19
23:28:44 110  ,gbp_g20
23:28:44 111  ,gbp_g21
23:28:44 112  ,gbp_g22
23:28:44 113  ,gbp_g23
23:28:44 114  ,gbp_g24
23:28:44 115  ,gbp_g25
23:28:44 116  ,gbp_g26
23:28:44 117  ,gbp_g27
23:28:44 118  ,gbp_g28
23:28:44 119  ,gbp_g29
23:28:44 120  ,gbp_g30
23:28:44 121  ,gbp_g31
23:28:44 122  ,gbp_g32
23:28:44 123  ,gbp_g33
23:28:44 124  ,gbp_g34
23:28:44 125  ,gbp_g35
23:28:44 126  ,gbp_g36
23:28:44 127  ,gbp_g37
23:28:44 128  ,gbp_g38
23:28:44 129  ,gbp_g39
23:28:44 130  ,gbp_g40
23:28:44 131  ,gbp_g41
23:28:44 132  ,jpy_g00
23:28:44 133  ,jpy_g01
23:28:44 134  ,jpy_g02
23:28:44 135  ,jpy_g03
23:28:44 136  ,jpy_g04
23:28:44 137  ,jpy_g05
23:28:44 138  ,jpy_g06
23:28:44 139  ,jpy_g07
23:28:44 140  ,jpy_g08
23:28:44 141  ,jpy_g09
23:28:44 142  ,jpy_g10
23:28:44 143  ,jpy_g11
23:28:44 144  ,jpy_g12
23:28:44 145  ,jpy_g13
23:28:44 146  ,jpy_g14
23:28:44 147  ,jpy_g15
23:28:44 148  ,jpy_g16
23:28:44 149  ,jpy_g17
23:28:44 150  ,jpy_g18
23:28:44 151  ,jpy_g19
23:28:44 152  ,jpy_g20
23:28:44 153  ,jpy_g21
23:28:44 154  ,jpy_g22
23:28:44 155  ,jpy_g23
23:28:44 156  ,jpy_g24
23:28:44 157  ,jpy_g25
23:28:44 158  ,jpy_g26
23:28:44 159  ,jpy_g27
23:28:44 160  ,jpy_g28
23:28:44 161  ,jpy_g29
23:28:44 162  ,jpy_g30
23:28:44 163  ,jpy_g31
23:28:44 164  ,jpy_g32
23:28:44 165  ,jpy_g33
23:28:44 166  ,jpy_g34
23:28:44 167  ,jpy_g35
23:28:44 168  ,jpy_g36
23:28:44 169  ,jpy_g37
23:28:44 170  ,jpy_g38
23:28:44 171  ,jpy_g39
23:28:44 172  ,jpy_g40
23:28:44 173  ,jpy_g41
23:28:44 174  ,cad_g00
23:28:44 175  ,cad_g01
23:28:44 176  ,cad_g02
23:28:44 177  ,cad_g03
23:28:44 178  ,cad_g04
23:28:44 179  ,cad_g05
23:28:44 180  ,cad_g06
23:28:44 181  ,cad_g07
23:28:44 182  ,cad_g08
23:28:44 183  ,cad_g09
23:28:44 184  ,cad_g10
23:28:44 185  ,cad_g11
23:28:44 186  ,cad_g12
23:28:44 187  ,cad_g13
23:28:44 188  ,cad_g14
23:28:44 189  ,cad_g15
23:28:44 190  ,cad_g16
23:28:44 191  ,cad_g17
23:28:44 192  ,cad_g18
23:28:44 193  ,cad_g19
23:28:44 194  ,cad_g20
23:28:44 195  ,cad_g21
23:28:44 196  ,cad_g22
23:28:44 197  ,cad_g23
23:28:44 198  ,cad_g24
23:28:44 199  ,cad_g25
23:28:44 200  ,cad_g26
23:28:44 201  ,cad_g27
23:28:44 202  ,cad_g28
23:28:44 203  ,cad_g29
23:28:44 204  ,cad_g30
23:28:44 205  ,cad_g31
23:28:44 206  ,cad_g32
23:28:44 207  ,cad_g33
23:28:44 208  ,cad_g34
23:28:44 209  ,cad_g35
23:28:44 210  ,cad_g36
23:28:44 211  ,cad_g37
23:28:44 212  ,cad_g38
23:28:44 213  ,cad_g39
23:28:44 214  ,cad_g40
23:28:44 215  ,cad_g41
23:28:44 216  ,chf_g00
23:28:44 217  ,chf_g01
23:28:44 218  ,chf_g02
23:28:44 219  ,chf_g03
23:28:44 220  ,chf_g04
23:28:44 221  ,chf_g05
23:28:44 222  ,chf_g06
23:28:44 223  ,chf_g07
23:28:44 224  ,chf_g08
23:28:44 225  ,chf_g09
23:28:44 226  ,chf_g10
23:28:44 227  ,chf_g11
23:28:44 228  ,chf_g12
23:28:44 229  ,chf_g13
23:28:44 230  ,chf_g14
23:28:44 231  ,chf_g15
23:28:44 232  ,chf_g16
23:28:44 233  ,chf_g17
23:28:44 234  ,chf_g18
23:28:44 235  ,chf_g19
23:28:44 236  ,chf_g20
23:28:44 237  ,chf_g21
23:28:44 238  ,chf_g22
23:28:44 239  ,chf_g23
23:28:44 240  ,chf_g24
23:28:44 241  ,chf_g25
23:28:44 242  ,chf_g26
23:28:44 243  ,chf_g27
23:28:44 244  ,chf_g28
23:28:44 245  ,chf_g29
23:28:44 246  ,chf_g30
23:28:44 247  ,chf_g31
23:28:44 248  ,chf_g32
23:28:44 249  ,chf_g33
23:28:44 250  ,chf_g34
23:28:44 251  ,chf_g35
23:28:44 252  ,chf_g36
23:28:44 253  ,chf_g37
23:28:44 254  ,chf_g38
23:28:44 255  ,chf_g39
23:28:44 256  ,chf_g40
23:28:44 257  ,chf_g41
23:28:44 258  FROM aud_ms6 m
23:28:44 259  WHERE m.ydate = '&1'||' '||'&2'
23:28:44 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'23:05:00'

View created.

Elapsed: 00:00:00.11
23:28:44 SQL> 
23:28:44 SQL> -- rpt
23:28:44 SQL> -- We should see just 1 row:
23:28:44 SQL> 
23:28:44 SQL> SELECT COUNT(prdate) FROM sme
23:28:44   2  
23:28:44 SQL> -- Build the model:
23:28:44 SQL> CREATE OR REPLACE VIEW bme AS
23:28:44   2  SELECT
23:28:44   3  'aud'||m.ydate prdate
23:28:44   4  ,gatt
23:28:44   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:28:44   6  ,eur_g00
23:28:44   7  ,eur_g01
23:28:44   8  ,eur_g02
23:28:44   9  ,eur_g03
23:28:44  10  ,eur_g04
23:28:44  11  ,eur_g05
23:28:44  12  ,eur_g06
23:28:44  13  ,eur_g07
23:28:44  14  ,eur_g08
23:28:44  15  ,eur_g09
23:28:44  16  ,eur_g10
23:28:44  17  ,eur_g11
23:28:44  18  ,eur_g12
23:28:44  19  ,eur_g13
23:28:44  20  ,eur_g14
23:28:44  21  ,eur_g15
23:28:44  22  ,eur_g16
23:28:44  23  ,eur_g17
23:28:44  24  ,eur_g18
23:28:44  25  ,eur_g19
23:28:44  26  ,eur_g20
23:28:44  27  ,eur_g21
23:28:44  28  ,eur_g22
23:28:44  29  ,eur_g23
23:28:44  30  ,eur_g24
23:28:44  31  ,eur_g25
23:28:44  32  ,eur_g26
23:28:44  33  ,eur_g27
23:28:44  34  ,eur_g28
23:28:44  35  ,eur_g29
23:28:44  36  ,eur_g30
23:28:44  37  ,eur_g31
23:28:44  38  ,eur_g32
23:28:44  39  ,eur_g33
23:28:44  40  ,eur_g34
23:28:44  41  ,eur_g35
23:28:44  42  ,eur_g36
23:28:44  43  ,eur_g37
23:28:44  44  ,eur_g38
23:28:44  45  ,eur_g39
23:28:44  46  ,eur_g40
23:28:44  47  ,eur_g41
23:28:44  48  ,aud_g00
23:28:44  49  ,aud_g01
23:28:44  50  ,aud_g02
23:28:44  51  ,aud_g03
23:28:44  52  ,aud_g04
23:28:44  53  ,aud_g05
23:28:44  54  ,aud_g06
23:28:44  55  ,aud_g07
23:28:44  56  ,aud_g08
23:28:44  57  ,aud_g09
23:28:44  58  ,aud_g10
23:28:44  59  ,aud_g11
23:28:44  60  ,aud_g12
23:28:44  61  ,aud_g13
23:28:44  62  ,aud_g14
23:28:44  63  ,aud_g15
23:28:44  64  ,aud_g16
23:28:44  65  ,aud_g17
23:28:44  66  ,aud_g18
23:28:44  67  ,aud_g19
23:28:44  68  ,aud_g20
23:28:44  69  ,aud_g21
23:28:44  70  ,aud_g22
23:28:44  71  ,aud_g23
23:28:44  72  ,aud_g24
23:28:44  73  ,aud_g25
23:28:44  74  ,aud_g26
23:28:44  75  ,aud_g27
23:28:44  76  ,aud_g28
23:28:44  77  ,aud_g29
23:28:44  78  ,aud_g30
23:28:44  79  ,aud_g31
23:28:44  80  ,aud_g32
23:28:44  81  ,aud_g33
23:28:44  82  ,aud_g34
23:28:44  83  ,aud_g35
23:28:44  84  ,aud_g36
23:28:44  85  ,aud_g37
23:28:44  86  ,aud_g38
23:28:44  87  ,aud_g39
23:28:44  88  ,aud_g40
23:28:44  89  ,aud_g41
23:28:44  90  ,gbp_g00
23:28:44  91  ,gbp_g01
23:28:44  92  ,gbp_g02
23:28:44  93  ,gbp_g03
23:28:44  94  ,gbp_g04
23:28:44  95  ,gbp_g05
23:28:44  96  ,gbp_g06
23:28:44  97  ,gbp_g07
23:28:44  98  ,gbp_g08
23:28:44  99  ,gbp_g09
23:28:44 100  ,gbp_g10
23:28:44 101  ,gbp_g11
23:28:44 102  ,gbp_g12
23:28:44 103  ,gbp_g13
23:28:44 104  ,gbp_g14
23:28:44 105  ,gbp_g15
23:28:44 106  ,gbp_g16
23:28:44 107  ,gbp_g17
23:28:44 108  ,gbp_g18
23:28:44 109  ,gbp_g19
23:28:44 110  ,gbp_g20
23:28:44 111  ,gbp_g21
23:28:44 112  ,gbp_g22
23:28:44 113  ,gbp_g23
23:28:44 114  ,gbp_g24
23:28:44 115  ,gbp_g25
23:28:44 116  ,gbp_g26
23:28:44 117  ,gbp_g27
23:28:44 118  ,gbp_g28
23:28:44 119  ,gbp_g29
23:28:44 120  ,gbp_g30
23:28:44 121  ,gbp_g31
23:28:44 122  ,gbp_g32
23:28:44 123  ,gbp_g33
23:28:44 124  ,gbp_g34
23:28:44 125  ,gbp_g35
23:28:44 126  ,gbp_g36
23:28:44 127  ,gbp_g37
23:28:44 128  ,gbp_g38
23:28:44 129  ,gbp_g39
23:28:44 130  ,gbp_g40
23:28:44 131  ,gbp_g41
23:28:44 132  ,jpy_g00
23:28:44 133  ,jpy_g01
23:28:44 134  ,jpy_g02
23:28:44 135  ,jpy_g03
23:28:44 136  ,jpy_g04
23:28:44 137  ,jpy_g05
23:28:44 138  ,jpy_g06
23:28:44 139  ,jpy_g07
23:28:44 140  ,jpy_g08
23:28:44 141  ,jpy_g09
23:28:44 142  ,jpy_g10
23:28:44 143  ,jpy_g11
23:28:44 144  ,jpy_g12
23:28:44 145  ,jpy_g13
23:28:44 146  ,jpy_g14
23:28:44 147  ,jpy_g15
23:28:44 148  ,jpy_g16
23:28:44 149  ,jpy_g17
23:28:44 150  ,jpy_g18
23:28:44 151  ,jpy_g19
23:28:44 152  ,jpy_g20
23:28:44 153  ,jpy_g21
23:28:44 154  ,jpy_g22
23:28:44 155  ,jpy_g23
23:28:44 156  ,jpy_g24
23:28:44 157  ,jpy_g25
23:28:44 158  ,jpy_g26
23:28:44 159  ,jpy_g27
23:28:44 160  ,jpy_g28
23:28:44 161  ,jpy_g29
23:28:44 162  ,jpy_g30
23:28:44 163  ,jpy_g31
23:28:44 164  ,jpy_g32
23:28:44 165  ,jpy_g33
23:28:44 166  ,jpy_g34
23:28:44 167  ,jpy_g35
23:28:44 168  ,jpy_g36
23:28:44 169  ,jpy_g37
23:28:44 170  ,jpy_g38
23:28:44 171  ,jpy_g39
23:28:44 172  ,jpy_g40
23:28:44 173  ,jpy_g41
23:28:44 174  ,cad_g00
23:28:44 175  ,cad_g01
23:28:44 176  ,cad_g02
23:28:44 177  ,cad_g03
23:28:44 178  ,cad_g04
23:28:44 179  ,cad_g05
23:28:44 180  ,cad_g06
23:28:44 181  ,cad_g07
23:28:44 182  ,cad_g08
23:28:44 183  ,cad_g09
23:28:44 184  ,cad_g10
23:28:44 185  ,cad_g11
23:28:44 186  ,cad_g12
23:28:44 187  ,cad_g13
23:28:44 188  ,cad_g14
23:28:44 189  ,cad_g15
23:28:44 190  ,cad_g16
23:28:44 191  ,cad_g17
23:28:44 192  ,cad_g18
23:28:44 193  ,cad_g19
23:28:44 194  ,cad_g20
23:28:44 195  ,cad_g21
23:28:44 196  ,cad_g22
23:28:44 197  ,cad_g23
23:28:44 198  ,cad_g24
23:28:44 199  ,cad_g25
23:28:44 200  ,cad_g26
23:28:44 201  ,cad_g27
23:28:44 202  ,cad_g28
23:28:44 203  ,cad_g29
23:28:44 204  ,cad_g30
23:28:44 205  ,cad_g31
23:28:44 206  ,cad_g32
23:28:44 207  ,cad_g33
23:28:44 208  ,cad_g34
23:28:44 209  ,cad_g35
23:28:44 210  ,cad_g36
23:28:44 211  ,cad_g37
23:28:44 212  ,cad_g38
23:28:44 213  ,cad_g39
23:28:44 214  ,cad_g40
23:28:44 215  ,cad_g41
23:28:44 216  ,chf_g00
23:28:44 217  ,chf_g01
23:28:44 218  ,chf_g02
23:28:44 219  ,chf_g03
23:28:44 220  ,chf_g04
23:28:44 221  ,chf_g05
23:28:44 222  ,chf_g06
23:28:44 223  ,chf_g07
23:28:44 224  ,chf_g08
23:28:44 225  ,chf_g09
23:28:44 226  ,chf_g10
23:28:44 227  ,chf_g11
23:28:44 228  ,chf_g12
23:28:44 229  ,chf_g13
23:28:44 230  ,chf_g14
23:28:44 231  ,chf_g15
23:28:44 232  ,chf_g16
23:28:44 233  ,chf_g17
23:28:44 234  ,chf_g18
23:28:44 235  ,chf_g19
23:28:44 236  ,chf_g20
23:28:44 237  ,chf_g21
23:28:44 238  ,chf_g22
23:28:44 239  ,chf_g23
23:28:44 240  ,chf_g24
23:28:44 241  ,chf_g25
23:28:44 242  ,chf_g26
23:28:44 243  ,chf_g27
23:28:44 244  ,chf_g28
23:28:44 245  ,chf_g29
23:28:44 246  ,chf_g30
23:28:44 247  ,chf_g31
23:28:44 248  ,chf_g32
23:28:44 249  ,chf_g33
23:28:44 250  ,chf_g34
23:28:44 251  ,chf_g35
23:28:44 252  ,chf_g36
23:28:44 253  ,chf_g37
23:28:44 254  ,chf_g38
23:28:44 255  ,chf_g39
23:28:44 256  ,chf_g40
23:28:44 257  ,chf_g41
23:28:44 258  FROM aud_ms6 m
23:28:44 259  WHERE gatt IN('nup','up')
23:28:44 260  AND 1+m.ydate < '&1'||' '||'&2'
23:28:44 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'23:05:00'

View created.

Elapsed: 00:00:00.12
23:28:44 SQL> 
23:28:44 SQL> -- rpt
23:28:44 SQL> 
23:28:44 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
23:28:44   2  
23:28:44 SQL> SELECT MAX(prdate) FROM bme
23:28:44   2  
23:28:44 SQL> -- Now build model from bme and score sme
23:28:44 SQL> @score1.sql
23:28:44 SQL> -- score1.sql
23:28:44 SQL> 
23:28:44 SQL> -- Does the 1st SVM score
23:28:44 SQL> 
23:28:44 SQL> -- Fill up svmc_apply_prep
23:28:44 SQL> @score.sql
23:28:44 SQL> --
23:28:44 SQL> -- score.sql
23:28:44 SQL> --
23:28:44 SQL> 
23:28:44 SQL> -- usage: score.sql
23:28:44 SQL> 
23:28:44 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
23:28:44 SQL> 
23:28:44 SQL> DEFINE target	= 'gatt'
23:28:44 SQL> DEFINE model_name = 'forex14'
23:28:44 SQL> DEFINE bldtable	= 'bme'
23:28:44 SQL> DEFINE scoretable = 'sme'
23:28:44 SQL> DEFINE case_id	= 'prdate'
23:28:44 SQL> 
23:28:44 SQL> -- Define a variable to help me exclude some columns from some data mining calls
23:28:44 SQL> DEFINE exclude1 = "'&target','&case_id'"
23:28:44 SQL> 
23:28:44 SQL> -- Builds an SVM model using pl/sql.
23:28:44 SQL> 
23:28:44 SQL> -----------------------------------------------------------------------
23:28:44 SQL> --			    BUILD THE MODEL
23:28:44 SQL> -----------------------------------------------------------------------
23:28:44 SQL> 
23:28:44 SQL> -- Cleanup old build data preparation objects for repeat runs
23:28:44 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
23:28:44 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
23:28:44 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
23:28:44 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
23:28:44 SQL> 
23:28:44 SQL> 
23:28:44 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
23:28:44 SQL> --
23:28:44 SQL> -- DROP	TABLE svmc_settings ;
23:28:44 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
23:28:44 SQL> -- DELETE svmc_settings;
23:28:44 SQL> 
23:28:44 SQL> -- The default classification algorithm is Naive Bayes. So override
23:28:44 SQL> -- this choice to SVM using a settings table.
23:28:44 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
23:28:44 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
23:28:44 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
23:28:44 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
23:28:44 SQL> -- models.
23:28:44 SQL> --
23:28:44 SQL> 
23:28:44 SQL> -- Do this once and then comment it out.
23:28:44 SQL> -- That makes script go faster.
23:28:44 SQL> -- BEGIN
23:28:44 SQL> -- -- Populate settings table
23:28:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:28:44 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
23:28:44 SQL> --
23:28:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:28:44 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
23:28:44 SQL> --
23:28:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:28:44 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
23:28:44 SQL> --   COMMIT;
23:28:44 SQL> -- END;
23:28:44 SQL> -- /
23:28:44 SQL> 
23:28:44 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
23:28:44 SQL> 
23:28:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
23:28:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:28:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
23:28:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
23:28:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:28:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:28:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
23:28:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:28:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:28:44 SQL> 
23:28:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
23:28:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:28:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:28:44 SQL> 
23:28:44 SQL> --------------------------------
23:28:44 SQL> -- PREPARE BUILD (TRAINING) DATA
23:28:44 SQL> --
23:28:44 SQL> 
23:28:44 SQL> -- 1. Missing Value treatment for all Predictors and
23:28:44 SQL> -- 2. Outlier Treatment and
23:28:44 SQL> -- 3. Normalization are performed below.
23:28:44 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
23:28:44 SQL> --    normalized here.
23:28:44 SQL> 
23:28:44 SQL> BEGIN
23:28:44   2  	-- Perform missing value treatment for all predictors
23:28:44   3  	-- create miss tables
23:28:44   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
23:28:44   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
23:28:44   6  
23:28:44   7  	-- populate miss tables
23:28:44   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
23:28:44   9  	  miss_table_name => 'svmc_miss_num',
23:28:44  10  	  data_table_name => '&bldtable',
23:28:44  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:28:44  12  
23:28:44  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
23:28:44  14  	  miss_table_name => 'svmc_miss_cat',
23:28:44  15  	  data_table_name => '&bldtable',
23:28:44  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:28:44  17  
23:28:44  18  	-- xform input data to replace missing values
23:28:44  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:28:44  20  	  miss_table_name => 'svmc_miss_num',
23:28:44  21  	  data_table_name => '&bldtable',
23:28:44  22  	  xform_view_name => 'xformed_build_miss_num');
23:28:44  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:28:44  24  	  miss_table_name => 'svmc_miss_cat',
23:28:44  25  	  data_table_name => '&bldtable',
23:28:44  26  	  xform_view_name => 'xformed_build_miss_cat');
23:28:44  27  
23:28:44  28  	-- Perform outlier treatment.
23:28:44  29  	-- create clip table
23:28:44  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
23:28:44  31  
23:28:44  32  	-- populate clip table
23:28:44  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
23:28:44  34  	  clip_table_name => 'svmc_clip',
23:28:44  35  	  data_table_name => '&bldtable',
23:28:44  36  	  tail_frac	  => 0.025,
23:28:44  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:28:44  38  
23:28:44  39  	-- xform input data to winsorized data
23:28:44  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
23:28:44  41  	  clip_table_name => 'svmc_clip',
23:28:44  42  	  data_table_name => '&bldtable',
23:28:44  43  	  xform_view_name => 'svmc_winsor');
23:28:44  44  
23:28:44  45  	-- create normalization table
23:28:44  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
23:28:44  47  
23:28:44  48  	-- populate normalization table based on winsorized data
23:28:44  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
23:28:44  50  	  norm_table_name => 'svmc_norm',
23:28:44  51  	  data_table_name => 'svmc_winsor',
23:28:44  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:28:44  53  
23:28:44  54  	-- normalize the original data
23:28:44  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:28:44  56  	  norm_table_name => 'svmc_norm',
23:28:44  57  	  data_table_name => '&bldtable',
23:28:44  58  	  xform_view_name => 'svmc_build_prep');
23:28:44  59  END;
23:28:44  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.00
23:29:02 SQL> 
23:29:02 SQL> ---------------------
23:29:02 SQL> -- CREATE A NEW MODEL
23:29:02 SQL> --
23:29:02 SQL> -- Cleanup old model with the same name for repeat runs
23:29:02 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
23:29:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:29:02   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.57
23:29:03 SQL> 
23:29:03 SQL> -- Build a new SVM Model
23:29:03 SQL> BEGIN
23:29:03   2  	DBMS_DATA_MINING.CREATE_MODEL(
23:29:03   3  	  model_name	      => '&model_name',
23:29:03   4  	  mining_function     => dbms_data_mining.classification,
23:29:03   5  	  data_table_name     => 'svmc_build_prep',
23:29:03   6  	  case_id_column_name => '&case_id',
23:29:03   7  	  target_column_name  => '&target',
23:29:03   8  	  settings_table_name => 'svmc_settings');
23:29:03   9  END;
23:29:03  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.48
23:29:31 SQL> 
23:29:31 SQL> -----------------------------------------------------------------------
23:29:31 SQL> --			       APPLY/score THE MODEL
23:29:31 SQL> -----------------------------------------------------------------------
23:29:31 SQL> 
23:29:31 SQL> -- Cleanup old scoring data preparation objects for repeat runs
23:29:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
23:29:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:29:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:29:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
23:29:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:29:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
23:29:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
23:29:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:29:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:29:31 SQL> -----------------------
23:29:31 SQL> -- PREPARE SCORING DATA
23:29:31 SQL> --
23:29:31 SQL> -- If the data for model creation has been prepared, then the data
23:29:31 SQL> -- to be scored using the model must be prepared in the same manner
23:29:31 SQL> -- in order to obtain meaningful results.
23:29:31 SQL> --
23:29:31 SQL> -- 1. Missing Value treatment for all Predictors and
23:29:31 SQL> -- 2. Normalization
23:29:31 SQL> -- No outlier treatment will be performed during test and apply. The
23:29:31 SQL> -- normalization step is sufficient, since the normalization parameters
23:29:31 SQL> -- already capture the effects of outlier treatment done with build data.
23:29:31 SQL> --
23:29:31 SQL> BEGIN
23:29:31   2  	-- Xform Test data to replace missing values
23:29:31   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:29:31   4  	  miss_table_name => 'svmc_miss_num',
23:29:31   5  	  data_table_name => '&scoretable',
23:29:31   6  	  xform_view_name => 'xformed_apply_miss_num');
23:29:31   7  
23:29:31   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:29:31   9  	  miss_table_name => 'svmc_miss_cat',
23:29:31  10  	  data_table_name => '&scoretable',
23:29:31  11  	  xform_view_name => 'xformed_apply_miss_cat');
23:29:31  12  
23:29:31  13  	-- Normalize the data to be scored
23:29:31  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:29:31  15  	  norm_table_name => 'svmc_norm',
23:29:31  16  	  data_table_name => '&scoretable',
23:29:31  17  	  xform_view_name => 'svmc_apply_prep');
23:29:31  18  END;
23:29:31  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
23:29:33 SQL> 
23:29:33 SQL> -- Use same model_name used in score.sql
23:29:33 SQL> DEFINE model_name = 'forex14'
23:29:33 SQL> 
23:29:33 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
23:29:33 SQL> 
23:29:33 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
23:29:33 SQL> 
23:29:33 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
23:29:33   2  SELECT
23:29:33   3  prdate
23:29:33   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
23:29:33   5  ,sysdate
23:29:33   6  ,SUBSTR(prdate,1,3)pair
23:29:33   7  ,SUBSTR(prdate,4,19)ydate
23:29:33   8  FROM svmc_apply_prep
23:29:33   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
23:29:33 SQL> @aud_score1day.sql  2010-12-29 23:10:00
23:29:33 SQL> --
23:29:33 SQL> -- aud_score1day.sql
23:29:33 SQL> --
23:29:33 SQL> 
23:29:33 SQL> CREATE OR REPLACE VIEW sme AS
23:29:33   2  SELECT
23:29:33   3  'aud'||m.ydate prdate
23:29:33   4  ,NULL gatt
23:29:33   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:29:33   6  ,eur_g00
23:29:33   7  ,eur_g01
23:29:33   8  ,eur_g02
23:29:33   9  ,eur_g03
23:29:33  10  ,eur_g04
23:29:33  11  ,eur_g05
23:29:33  12  ,eur_g06
23:29:33  13  ,eur_g07
23:29:33  14  ,eur_g08
23:29:33  15  ,eur_g09
23:29:33  16  ,eur_g10
23:29:33  17  ,eur_g11
23:29:33  18  ,eur_g12
23:29:33  19  ,eur_g13
23:29:33  20  ,eur_g14
23:29:33  21  ,eur_g15
23:29:33  22  ,eur_g16
23:29:33  23  ,eur_g17
23:29:33  24  ,eur_g18
23:29:33  25  ,eur_g19
23:29:33  26  ,eur_g20
23:29:33  27  ,eur_g21
23:29:33  28  ,eur_g22
23:29:33  29  ,eur_g23
23:29:33  30  ,eur_g24
23:29:33  31  ,eur_g25
23:29:33  32  ,eur_g26
23:29:33  33  ,eur_g27
23:29:33  34  ,eur_g28
23:29:33  35  ,eur_g29
23:29:33  36  ,eur_g30
23:29:33  37  ,eur_g31
23:29:33  38  ,eur_g32
23:29:33  39  ,eur_g33
23:29:33  40  ,eur_g34
23:29:33  41  ,eur_g35
23:29:33  42  ,eur_g36
23:29:33  43  ,eur_g37
23:29:33  44  ,eur_g38
23:29:33  45  ,eur_g39
23:29:33  46  ,eur_g40
23:29:33  47  ,eur_g41
23:29:33  48  ,aud_g00
23:29:33  49  ,aud_g01
23:29:33  50  ,aud_g02
23:29:33  51  ,aud_g03
23:29:33  52  ,aud_g04
23:29:33  53  ,aud_g05
23:29:33  54  ,aud_g06
23:29:33  55  ,aud_g07
23:29:33  56  ,aud_g08
23:29:33  57  ,aud_g09
23:29:33  58  ,aud_g10
23:29:33  59  ,aud_g11
23:29:33  60  ,aud_g12
23:29:33  61  ,aud_g13
23:29:33  62  ,aud_g14
23:29:33  63  ,aud_g15
23:29:33  64  ,aud_g16
23:29:33  65  ,aud_g17
23:29:33  66  ,aud_g18
23:29:33  67  ,aud_g19
23:29:33  68  ,aud_g20
23:29:33  69  ,aud_g21
23:29:33  70  ,aud_g22
23:29:33  71  ,aud_g23
23:29:33  72  ,aud_g24
23:29:33  73  ,aud_g25
23:29:33  74  ,aud_g26
23:29:33  75  ,aud_g27
23:29:33  76  ,aud_g28
23:29:33  77  ,aud_g29
23:29:33  78  ,aud_g30
23:29:33  79  ,aud_g31
23:29:33  80  ,aud_g32
23:29:33  81  ,aud_g33
23:29:33  82  ,aud_g34
23:29:33  83  ,aud_g35
23:29:33  84  ,aud_g36
23:29:33  85  ,aud_g37
23:29:33  86  ,aud_g38
23:29:33  87  ,aud_g39
23:29:33  88  ,aud_g40
23:29:33  89  ,aud_g41
23:29:33  90  ,gbp_g00
23:29:33  91  ,gbp_g01
23:29:33  92  ,gbp_g02
23:29:33  93  ,gbp_g03
23:29:33  94  ,gbp_g04
23:29:33  95  ,gbp_g05
23:29:33  96  ,gbp_g06
23:29:33  97  ,gbp_g07
23:29:33  98  ,gbp_g08
23:29:33  99  ,gbp_g09
23:29:33 100  ,gbp_g10
23:29:33 101  ,gbp_g11
23:29:33 102  ,gbp_g12
23:29:33 103  ,gbp_g13
23:29:33 104  ,gbp_g14
23:29:33 105  ,gbp_g15
23:29:33 106  ,gbp_g16
23:29:33 107  ,gbp_g17
23:29:33 108  ,gbp_g18
23:29:33 109  ,gbp_g19
23:29:33 110  ,gbp_g20
23:29:33 111  ,gbp_g21
23:29:33 112  ,gbp_g22
23:29:33 113  ,gbp_g23
23:29:33 114  ,gbp_g24
23:29:33 115  ,gbp_g25
23:29:33 116  ,gbp_g26
23:29:33 117  ,gbp_g27
23:29:33 118  ,gbp_g28
23:29:33 119  ,gbp_g29
23:29:33 120  ,gbp_g30
23:29:33 121  ,gbp_g31
23:29:33 122  ,gbp_g32
23:29:33 123  ,gbp_g33
23:29:33 124  ,gbp_g34
23:29:33 125  ,gbp_g35
23:29:33 126  ,gbp_g36
23:29:33 127  ,gbp_g37
23:29:33 128  ,gbp_g38
23:29:33 129  ,gbp_g39
23:29:33 130  ,gbp_g40
23:29:33 131  ,gbp_g41
23:29:33 132  ,jpy_g00
23:29:33 133  ,jpy_g01
23:29:33 134  ,jpy_g02
23:29:33 135  ,jpy_g03
23:29:33 136  ,jpy_g04
23:29:33 137  ,jpy_g05
23:29:33 138  ,jpy_g06
23:29:33 139  ,jpy_g07
23:29:33 140  ,jpy_g08
23:29:33 141  ,jpy_g09
23:29:33 142  ,jpy_g10
23:29:33 143  ,jpy_g11
23:29:33 144  ,jpy_g12
23:29:33 145  ,jpy_g13
23:29:33 146  ,jpy_g14
23:29:33 147  ,jpy_g15
23:29:33 148  ,jpy_g16
23:29:33 149  ,jpy_g17
23:29:33 150  ,jpy_g18
23:29:33 151  ,jpy_g19
23:29:33 152  ,jpy_g20
23:29:33 153  ,jpy_g21
23:29:33 154  ,jpy_g22
23:29:33 155  ,jpy_g23
23:29:33 156  ,jpy_g24
23:29:33 157  ,jpy_g25
23:29:33 158  ,jpy_g26
23:29:33 159  ,jpy_g27
23:29:33 160  ,jpy_g28
23:29:33 161  ,jpy_g29
23:29:33 162  ,jpy_g30
23:29:33 163  ,jpy_g31
23:29:33 164  ,jpy_g32
23:29:33 165  ,jpy_g33
23:29:33 166  ,jpy_g34
23:29:33 167  ,jpy_g35
23:29:33 168  ,jpy_g36
23:29:33 169  ,jpy_g37
23:29:33 170  ,jpy_g38
23:29:33 171  ,jpy_g39
23:29:33 172  ,jpy_g40
23:29:33 173  ,jpy_g41
23:29:33 174  ,cad_g00
23:29:33 175  ,cad_g01
23:29:33 176  ,cad_g02
23:29:33 177  ,cad_g03
23:29:33 178  ,cad_g04
23:29:33 179  ,cad_g05
23:29:33 180  ,cad_g06
23:29:33 181  ,cad_g07
23:29:33 182  ,cad_g08
23:29:33 183  ,cad_g09
23:29:33 184  ,cad_g10
23:29:33 185  ,cad_g11
23:29:33 186  ,cad_g12
23:29:33 187  ,cad_g13
23:29:33 188  ,cad_g14
23:29:33 189  ,cad_g15
23:29:33 190  ,cad_g16
23:29:33 191  ,cad_g17
23:29:33 192  ,cad_g18
23:29:33 193  ,cad_g19
23:29:33 194  ,cad_g20
23:29:33 195  ,cad_g21
23:29:33 196  ,cad_g22
23:29:33 197  ,cad_g23
23:29:33 198  ,cad_g24
23:29:33 199  ,cad_g25
23:29:33 200  ,cad_g26
23:29:33 201  ,cad_g27
23:29:33 202  ,cad_g28
23:29:33 203  ,cad_g29
23:29:33 204  ,cad_g30
23:29:33 205  ,cad_g31
23:29:33 206  ,cad_g32
23:29:33 207  ,cad_g33
23:29:33 208  ,cad_g34
23:29:33 209  ,cad_g35
23:29:33 210  ,cad_g36
23:29:33 211  ,cad_g37
23:29:33 212  ,cad_g38
23:29:33 213  ,cad_g39
23:29:33 214  ,cad_g40
23:29:33 215  ,cad_g41
23:29:33 216  ,chf_g00
23:29:33 217  ,chf_g01
23:29:33 218  ,chf_g02
23:29:33 219  ,chf_g03
23:29:33 220  ,chf_g04
23:29:33 221  ,chf_g05
23:29:33 222  ,chf_g06
23:29:33 223  ,chf_g07
23:29:33 224  ,chf_g08
23:29:33 225  ,chf_g09
23:29:33 226  ,chf_g10
23:29:33 227  ,chf_g11
23:29:33 228  ,chf_g12
23:29:33 229  ,chf_g13
23:29:33 230  ,chf_g14
23:29:33 231  ,chf_g15
23:29:33 232  ,chf_g16
23:29:33 233  ,chf_g17
23:29:33 234  ,chf_g18
23:29:33 235  ,chf_g19
23:29:33 236  ,chf_g20
23:29:33 237  ,chf_g21
23:29:33 238  ,chf_g22
23:29:33 239  ,chf_g23
23:29:33 240  ,chf_g24
23:29:33 241  ,chf_g25
23:29:33 242  ,chf_g26
23:29:33 243  ,chf_g27
23:29:33 244  ,chf_g28
23:29:33 245  ,chf_g29
23:29:33 246  ,chf_g30
23:29:33 247  ,chf_g31
23:29:33 248  ,chf_g32
23:29:33 249  ,chf_g33
23:29:33 250  ,chf_g34
23:29:33 251  ,chf_g35
23:29:33 252  ,chf_g36
23:29:33 253  ,chf_g37
23:29:33 254  ,chf_g38
23:29:33 255  ,chf_g39
23:29:33 256  ,chf_g40
23:29:33 257  ,chf_g41
23:29:33 258  FROM aud_ms6 m
23:29:33 259  WHERE m.ydate = '&1'||' '||'&2'
23:29:33 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'23:10:00'

View created.

Elapsed: 00:00:00.12
23:29:33 SQL> 
23:29:33 SQL> -- rpt
23:29:33 SQL> -- We should see just 1 row:
23:29:33 SQL> 
23:29:33 SQL> SELECT COUNT(prdate) FROM sme
23:29:33   2  
23:29:33 SQL> -- Build the model:
23:29:33 SQL> CREATE OR REPLACE VIEW bme AS
23:29:33   2  SELECT
23:29:33   3  'aud'||m.ydate prdate
23:29:33   4  ,gatt
23:29:33   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:29:33   6  ,eur_g00
23:29:33   7  ,eur_g01
23:29:33   8  ,eur_g02
23:29:33   9  ,eur_g03
23:29:33  10  ,eur_g04
23:29:33  11  ,eur_g05
23:29:33  12  ,eur_g06
23:29:33  13  ,eur_g07
23:29:33  14  ,eur_g08
23:29:33  15  ,eur_g09
23:29:33  16  ,eur_g10
23:29:33  17  ,eur_g11
23:29:33  18  ,eur_g12
23:29:33  19  ,eur_g13
23:29:33  20  ,eur_g14
23:29:33  21  ,eur_g15
23:29:33  22  ,eur_g16
23:29:33  23  ,eur_g17
23:29:33  24  ,eur_g18
23:29:33  25  ,eur_g19
23:29:33  26  ,eur_g20
23:29:33  27  ,eur_g21
23:29:33  28  ,eur_g22
23:29:33  29  ,eur_g23
23:29:33  30  ,eur_g24
23:29:33  31  ,eur_g25
23:29:33  32  ,eur_g26
23:29:33  33  ,eur_g27
23:29:33  34  ,eur_g28
23:29:33  35  ,eur_g29
23:29:33  36  ,eur_g30
23:29:33  37  ,eur_g31
23:29:33  38  ,eur_g32
23:29:33  39  ,eur_g33
23:29:33  40  ,eur_g34
23:29:33  41  ,eur_g35
23:29:33  42  ,eur_g36
23:29:33  43  ,eur_g37
23:29:33  44  ,eur_g38
23:29:33  45  ,eur_g39
23:29:33  46  ,eur_g40
23:29:33  47  ,eur_g41
23:29:33  48  ,aud_g00
23:29:33  49  ,aud_g01
23:29:33  50  ,aud_g02
23:29:33  51  ,aud_g03
23:29:33  52  ,aud_g04
23:29:33  53  ,aud_g05
23:29:33  54  ,aud_g06
23:29:33  55  ,aud_g07
23:29:33  56  ,aud_g08
23:29:33  57  ,aud_g09
23:29:33  58  ,aud_g10
23:29:33  59  ,aud_g11
23:29:33  60  ,aud_g12
23:29:33  61  ,aud_g13
23:29:33  62  ,aud_g14
23:29:33  63  ,aud_g15
23:29:33  64  ,aud_g16
23:29:33  65  ,aud_g17
23:29:33  66  ,aud_g18
23:29:33  67  ,aud_g19
23:29:33  68  ,aud_g20
23:29:33  69  ,aud_g21
23:29:33  70  ,aud_g22
23:29:33  71  ,aud_g23
23:29:33  72  ,aud_g24
23:29:33  73  ,aud_g25
23:29:33  74  ,aud_g26
23:29:33  75  ,aud_g27
23:29:33  76  ,aud_g28
23:29:33  77  ,aud_g29
23:29:33  78  ,aud_g30
23:29:33  79  ,aud_g31
23:29:33  80  ,aud_g32
23:29:33  81  ,aud_g33
23:29:33  82  ,aud_g34
23:29:33  83  ,aud_g35
23:29:33  84  ,aud_g36
23:29:33  85  ,aud_g37
23:29:33  86  ,aud_g38
23:29:33  87  ,aud_g39
23:29:33  88  ,aud_g40
23:29:33  89  ,aud_g41
23:29:33  90  ,gbp_g00
23:29:33  91  ,gbp_g01
23:29:33  92  ,gbp_g02
23:29:33  93  ,gbp_g03
23:29:33  94  ,gbp_g04
23:29:33  95  ,gbp_g05
23:29:33  96  ,gbp_g06
23:29:33  97  ,gbp_g07
23:29:33  98  ,gbp_g08
23:29:33  99  ,gbp_g09
23:29:33 100  ,gbp_g10
23:29:33 101  ,gbp_g11
23:29:33 102  ,gbp_g12
23:29:33 103  ,gbp_g13
23:29:33 104  ,gbp_g14
23:29:33 105  ,gbp_g15
23:29:33 106  ,gbp_g16
23:29:33 107  ,gbp_g17
23:29:33 108  ,gbp_g18
23:29:33 109  ,gbp_g19
23:29:33 110  ,gbp_g20
23:29:33 111  ,gbp_g21
23:29:33 112  ,gbp_g22
23:29:33 113  ,gbp_g23
23:29:33 114  ,gbp_g24
23:29:33 115  ,gbp_g25
23:29:33 116  ,gbp_g26
23:29:33 117  ,gbp_g27
23:29:33 118  ,gbp_g28
23:29:33 119  ,gbp_g29
23:29:33 120  ,gbp_g30
23:29:33 121  ,gbp_g31
23:29:33 122  ,gbp_g32
23:29:33 123  ,gbp_g33
23:29:33 124  ,gbp_g34
23:29:33 125  ,gbp_g35
23:29:33 126  ,gbp_g36
23:29:33 127  ,gbp_g37
23:29:33 128  ,gbp_g38
23:29:33 129  ,gbp_g39
23:29:33 130  ,gbp_g40
23:29:33 131  ,gbp_g41
23:29:33 132  ,jpy_g00
23:29:33 133  ,jpy_g01
23:29:33 134  ,jpy_g02
23:29:33 135  ,jpy_g03
23:29:33 136  ,jpy_g04
23:29:33 137  ,jpy_g05
23:29:33 138  ,jpy_g06
23:29:33 139  ,jpy_g07
23:29:33 140  ,jpy_g08
23:29:33 141  ,jpy_g09
23:29:33 142  ,jpy_g10
23:29:33 143  ,jpy_g11
23:29:33 144  ,jpy_g12
23:29:33 145  ,jpy_g13
23:29:33 146  ,jpy_g14
23:29:33 147  ,jpy_g15
23:29:33 148  ,jpy_g16
23:29:33 149  ,jpy_g17
23:29:33 150  ,jpy_g18
23:29:33 151  ,jpy_g19
23:29:33 152  ,jpy_g20
23:29:33 153  ,jpy_g21
23:29:33 154  ,jpy_g22
23:29:33 155  ,jpy_g23
23:29:33 156  ,jpy_g24
23:29:33 157  ,jpy_g25
23:29:33 158  ,jpy_g26
23:29:33 159  ,jpy_g27
23:29:33 160  ,jpy_g28
23:29:33 161  ,jpy_g29
23:29:33 162  ,jpy_g30
23:29:33 163  ,jpy_g31
23:29:33 164  ,jpy_g32
23:29:33 165  ,jpy_g33
23:29:33 166  ,jpy_g34
23:29:33 167  ,jpy_g35
23:29:33 168  ,jpy_g36
23:29:33 169  ,jpy_g37
23:29:33 170  ,jpy_g38
23:29:33 171  ,jpy_g39
23:29:33 172  ,jpy_g40
23:29:33 173  ,jpy_g41
23:29:33 174  ,cad_g00
23:29:33 175  ,cad_g01
23:29:33 176  ,cad_g02
23:29:33 177  ,cad_g03
23:29:33 178  ,cad_g04
23:29:33 179  ,cad_g05
23:29:33 180  ,cad_g06
23:29:33 181  ,cad_g07
23:29:33 182  ,cad_g08
23:29:33 183  ,cad_g09
23:29:33 184  ,cad_g10
23:29:33 185  ,cad_g11
23:29:33 186  ,cad_g12
23:29:33 187  ,cad_g13
23:29:33 188  ,cad_g14
23:29:33 189  ,cad_g15
23:29:33 190  ,cad_g16
23:29:33 191  ,cad_g17
23:29:33 192  ,cad_g18
23:29:33 193  ,cad_g19
23:29:33 194  ,cad_g20
23:29:33 195  ,cad_g21
23:29:33 196  ,cad_g22
23:29:33 197  ,cad_g23
23:29:33 198  ,cad_g24
23:29:33 199  ,cad_g25
23:29:33 200  ,cad_g26
23:29:33 201  ,cad_g27
23:29:33 202  ,cad_g28
23:29:33 203  ,cad_g29
23:29:33 204  ,cad_g30
23:29:33 205  ,cad_g31
23:29:33 206  ,cad_g32
23:29:33 207  ,cad_g33
23:29:33 208  ,cad_g34
23:29:33 209  ,cad_g35
23:29:33 210  ,cad_g36
23:29:33 211  ,cad_g37
23:29:33 212  ,cad_g38
23:29:33 213  ,cad_g39
23:29:33 214  ,cad_g40
23:29:33 215  ,cad_g41
23:29:33 216  ,chf_g00
23:29:33 217  ,chf_g01
23:29:33 218  ,chf_g02
23:29:33 219  ,chf_g03
23:29:33 220  ,chf_g04
23:29:33 221  ,chf_g05
23:29:33 222  ,chf_g06
23:29:33 223  ,chf_g07
23:29:33 224  ,chf_g08
23:29:33 225  ,chf_g09
23:29:33 226  ,chf_g10
23:29:33 227  ,chf_g11
23:29:33 228  ,chf_g12
23:29:33 229  ,chf_g13
23:29:33 230  ,chf_g14
23:29:33 231  ,chf_g15
23:29:33 232  ,chf_g16
23:29:33 233  ,chf_g17
23:29:33 234  ,chf_g18
23:29:33 235  ,chf_g19
23:29:33 236  ,chf_g20
23:29:33 237  ,chf_g21
23:29:33 238  ,chf_g22
23:29:33 239  ,chf_g23
23:29:33 240  ,chf_g24
23:29:33 241  ,chf_g25
23:29:33 242  ,chf_g26
23:29:33 243  ,chf_g27
23:29:33 244  ,chf_g28
23:29:33 245  ,chf_g29
23:29:33 246  ,chf_g30
23:29:33 247  ,chf_g31
23:29:33 248  ,chf_g32
23:29:33 249  ,chf_g33
23:29:33 250  ,chf_g34
23:29:33 251  ,chf_g35
23:29:33 252  ,chf_g36
23:29:33 253  ,chf_g37
23:29:33 254  ,chf_g38
23:29:33 255  ,chf_g39
23:29:33 256  ,chf_g40
23:29:33 257  ,chf_g41
23:29:33 258  FROM aud_ms6 m
23:29:33 259  WHERE gatt IN('nup','up')
23:29:33 260  AND 1+m.ydate < '&1'||' '||'&2'
23:29:33 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'23:10:00'

View created.

Elapsed: 00:00:00.12
23:29:33 SQL> 
23:29:33 SQL> -- rpt
23:29:33 SQL> 
23:29:33 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
23:29:33   2  
23:29:33 SQL> SELECT MAX(prdate) FROM bme
23:29:33   2  
23:29:33 SQL> -- Now build model from bme and score sme
23:29:33 SQL> @score1.sql
23:29:33 SQL> -- score1.sql
23:29:33 SQL> 
23:29:33 SQL> -- Does the 1st SVM score
23:29:33 SQL> 
23:29:33 SQL> -- Fill up svmc_apply_prep
23:29:33 SQL> @score.sql
23:29:33 SQL> --
23:29:33 SQL> -- score.sql
23:29:33 SQL> --
23:29:33 SQL> 
23:29:33 SQL> -- usage: score.sql
23:29:33 SQL> 
23:29:33 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
23:29:33 SQL> 
23:29:33 SQL> DEFINE target	= 'gatt'
23:29:33 SQL> DEFINE model_name = 'forex14'
23:29:33 SQL> DEFINE bldtable	= 'bme'
23:29:33 SQL> DEFINE scoretable = 'sme'
23:29:33 SQL> DEFINE case_id	= 'prdate'
23:29:33 SQL> 
23:29:33 SQL> -- Define a variable to help me exclude some columns from some data mining calls
23:29:33 SQL> DEFINE exclude1 = "'&target','&case_id'"
23:29:33 SQL> 
23:29:33 SQL> -- Builds an SVM model using pl/sql.
23:29:33 SQL> 
23:29:33 SQL> -----------------------------------------------------------------------
23:29:33 SQL> --			    BUILD THE MODEL
23:29:33 SQL> -----------------------------------------------------------------------
23:29:33 SQL> 
23:29:33 SQL> -- Cleanup old build data preparation objects for repeat runs
23:29:33 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
23:29:33 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
23:29:33 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
23:29:33 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
23:29:33 SQL> 
23:29:33 SQL> 
23:29:33 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
23:29:33 SQL> --
23:29:33 SQL> -- DROP	TABLE svmc_settings ;
23:29:33 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
23:29:33 SQL> -- DELETE svmc_settings;
23:29:33 SQL> 
23:29:33 SQL> -- The default classification algorithm is Naive Bayes. So override
23:29:33 SQL> -- this choice to SVM using a settings table.
23:29:33 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
23:29:33 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
23:29:33 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
23:29:33 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
23:29:33 SQL> -- models.
23:29:33 SQL> --
23:29:33 SQL> 
23:29:33 SQL> -- Do this once and then comment it out.
23:29:33 SQL> -- That makes script go faster.
23:29:33 SQL> -- BEGIN
23:29:33 SQL> -- -- Populate settings table
23:29:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:29:33 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
23:29:33 SQL> --
23:29:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:29:33 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
23:29:33 SQL> --
23:29:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:29:33 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
23:29:33 SQL> --   COMMIT;
23:29:33 SQL> -- END;
23:29:33 SQL> -- /
23:29:33 SQL> 
23:29:33 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
23:29:33 SQL> 
23:29:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
23:29:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:29:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:29:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
23:29:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:29:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
23:29:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
23:29:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:29:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:29:33 SQL> 
23:29:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
23:29:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:29:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:29:33 SQL> 
23:29:33 SQL> --------------------------------
23:29:33 SQL> -- PREPARE BUILD (TRAINING) DATA
23:29:33 SQL> --
23:29:33 SQL> 
23:29:33 SQL> -- 1. Missing Value treatment for all Predictors and
23:29:33 SQL> -- 2. Outlier Treatment and
23:29:33 SQL> -- 3. Normalization are performed below.
23:29:33 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
23:29:33 SQL> --    normalized here.
23:29:33 SQL> 
23:29:33 SQL> BEGIN
23:29:33   2  	-- Perform missing value treatment for all predictors
23:29:33   3  	-- create miss tables
23:29:33   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
23:29:33   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
23:29:33   6  
23:29:33   7  	-- populate miss tables
23:29:33   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
23:29:33   9  	  miss_table_name => 'svmc_miss_num',
23:29:33  10  	  data_table_name => '&bldtable',
23:29:33  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:29:33  12  
23:29:33  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
23:29:33  14  	  miss_table_name => 'svmc_miss_cat',
23:29:33  15  	  data_table_name => '&bldtable',
23:29:33  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:29:33  17  
23:29:33  18  	-- xform input data to replace missing values
23:29:33  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:29:33  20  	  miss_table_name => 'svmc_miss_num',
23:29:33  21  	  data_table_name => '&bldtable',
23:29:33  22  	  xform_view_name => 'xformed_build_miss_num');
23:29:33  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:29:33  24  	  miss_table_name => 'svmc_miss_cat',
23:29:33  25  	  data_table_name => '&bldtable',
23:29:33  26  	  xform_view_name => 'xformed_build_miss_cat');
23:29:33  27  
23:29:33  28  	-- Perform outlier treatment.
23:29:33  29  	-- create clip table
23:29:33  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
23:29:33  31  
23:29:33  32  	-- populate clip table
23:29:33  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
23:29:33  34  	  clip_table_name => 'svmc_clip',
23:29:33  35  	  data_table_name => '&bldtable',
23:29:33  36  	  tail_frac	  => 0.025,
23:29:33  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:29:33  38  
23:29:33  39  	-- xform input data to winsorized data
23:29:33  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
23:29:33  41  	  clip_table_name => 'svmc_clip',
23:29:33  42  	  data_table_name => '&bldtable',
23:29:33  43  	  xform_view_name => 'svmc_winsor');
23:29:33  44  
23:29:33  45  	-- create normalization table
23:29:33  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
23:29:33  47  
23:29:33  48  	-- populate normalization table based on winsorized data
23:29:33  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
23:29:33  50  	  norm_table_name => 'svmc_norm',
23:29:33  51  	  data_table_name => 'svmc_winsor',
23:29:33  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:29:33  53  
23:29:33  54  	-- normalize the original data
23:29:33  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:29:33  56  	  norm_table_name => 'svmc_norm',
23:29:33  57  	  data_table_name => '&bldtable',
23:29:33  58  	  xform_view_name => 'svmc_build_prep');
23:29:33  59  END;
23:29:33  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.78
23:29:51 SQL> 
23:29:51 SQL> ---------------------
23:29:51 SQL> -- CREATE A NEW MODEL
23:29:51 SQL> --
23:29:51 SQL> -- Cleanup old model with the same name for repeat runs
23:29:51 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
23:29:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:29:51   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.93
23:29:52 SQL> 
23:29:52 SQL> -- Build a new SVM Model
23:29:52 SQL> BEGIN
23:29:52   2  	DBMS_DATA_MINING.CREATE_MODEL(
23:29:52   3  	  model_name	      => '&model_name',
23:29:52   4  	  mining_function     => dbms_data_mining.classification,
23:29:52   5  	  data_table_name     => 'svmc_build_prep',
23:29:52   6  	  case_id_column_name => '&case_id',
23:29:52   7  	  target_column_name  => '&target',
23:29:52   8  	  settings_table_name => 'svmc_settings');
23:29:52   9  END;
23:29:52  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.08
23:30:19 SQL> 
23:30:19 SQL> -----------------------------------------------------------------------
23:30:19 SQL> --			       APPLY/score THE MODEL
23:30:19 SQL> -----------------------------------------------------------------------
23:30:19 SQL> 
23:30:19 SQL> -- Cleanup old scoring data preparation objects for repeat runs
23:30:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
23:30:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:30:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:30:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
23:30:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:30:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:30:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
23:30:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:30:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:30:19 SQL> -----------------------
23:30:19 SQL> -- PREPARE SCORING DATA
23:30:19 SQL> --
23:30:19 SQL> -- If the data for model creation has been prepared, then the data
23:30:19 SQL> -- to be scored using the model must be prepared in the same manner
23:30:19 SQL> -- in order to obtain meaningful results.
23:30:19 SQL> --
23:30:19 SQL> -- 1. Missing Value treatment for all Predictors and
23:30:19 SQL> -- 2. Normalization
23:30:19 SQL> -- No outlier treatment will be performed during test and apply. The
23:30:19 SQL> -- normalization step is sufficient, since the normalization parameters
23:30:19 SQL> -- already capture the effects of outlier treatment done with build data.
23:30:19 SQL> --
23:30:19 SQL> BEGIN
23:30:19   2  	-- Xform Test data to replace missing values
23:30:19   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:30:19   4  	  miss_table_name => 'svmc_miss_num',
23:30:19   5  	  data_table_name => '&scoretable',
23:30:19   6  	  xform_view_name => 'xformed_apply_miss_num');
23:30:19   7  
23:30:19   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:30:19   9  	  miss_table_name => 'svmc_miss_cat',
23:30:19  10  	  data_table_name => '&scoretable',
23:30:19  11  	  xform_view_name => 'xformed_apply_miss_cat');
23:30:19  12  
23:30:19  13  	-- Normalize the data to be scored
23:30:19  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:30:19  15  	  norm_table_name => 'svmc_norm',
23:30:19  16  	  data_table_name => '&scoretable',
23:30:19  17  	  xform_view_name => 'svmc_apply_prep');
23:30:19  18  END;
23:30:19  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
23:30:21 SQL> 
23:30:21 SQL> -- Use same model_name used in score.sql
23:30:21 SQL> DEFINE model_name = 'forex14'
23:30:21 SQL> 
23:30:21 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
23:30:21 SQL> 
23:30:21 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
23:30:21 SQL> 
23:30:21 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
23:30:21   2  SELECT
23:30:21   3  prdate
23:30:21   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
23:30:21   5  ,sysdate
23:30:21   6  ,SUBSTR(prdate,1,3)pair
23:30:21   7  ,SUBSTR(prdate,4,19)ydate
23:30:21   8  FROM svmc_apply_prep
23:30:21   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
23:30:21 SQL> @aud_score1day.sql  2010-12-29 23:15:00
23:30:21 SQL> --
23:30:21 SQL> -- aud_score1day.sql
23:30:21 SQL> --
23:30:21 SQL> 
23:30:21 SQL> CREATE OR REPLACE VIEW sme AS
23:30:21   2  SELECT
23:30:21   3  'aud'||m.ydate prdate
23:30:21   4  ,NULL gatt
23:30:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:30:21   6  ,eur_g00
23:30:21   7  ,eur_g01
23:30:21   8  ,eur_g02
23:30:21   9  ,eur_g03
23:30:21  10  ,eur_g04
23:30:21  11  ,eur_g05
23:30:21  12  ,eur_g06
23:30:21  13  ,eur_g07
23:30:21  14  ,eur_g08
23:30:21  15  ,eur_g09
23:30:21  16  ,eur_g10
23:30:21  17  ,eur_g11
23:30:21  18  ,eur_g12
23:30:21  19  ,eur_g13
23:30:21  20  ,eur_g14
23:30:21  21  ,eur_g15
23:30:21  22  ,eur_g16
23:30:21  23  ,eur_g17
23:30:21  24  ,eur_g18
23:30:21  25  ,eur_g19
23:30:21  26  ,eur_g20
23:30:21  27  ,eur_g21
23:30:21  28  ,eur_g22
23:30:21  29  ,eur_g23
23:30:21  30  ,eur_g24
23:30:21  31  ,eur_g25
23:30:21  32  ,eur_g26
23:30:21  33  ,eur_g27
23:30:21  34  ,eur_g28
23:30:21  35  ,eur_g29
23:30:21  36  ,eur_g30
23:30:21  37  ,eur_g31
23:30:21  38  ,eur_g32
23:30:21  39  ,eur_g33
23:30:21  40  ,eur_g34
23:30:21  41  ,eur_g35
23:30:21  42  ,eur_g36
23:30:21  43  ,eur_g37
23:30:21  44  ,eur_g38
23:30:21  45  ,eur_g39
23:30:21  46  ,eur_g40
23:30:21  47  ,eur_g41
23:30:21  48  ,aud_g00
23:30:21  49  ,aud_g01
23:30:21  50  ,aud_g02
23:30:21  51  ,aud_g03
23:30:21  52  ,aud_g04
23:30:21  53  ,aud_g05
23:30:21  54  ,aud_g06
23:30:21  55  ,aud_g07
23:30:21  56  ,aud_g08
23:30:21  57  ,aud_g09
23:30:21  58  ,aud_g10
23:30:21  59  ,aud_g11
23:30:21  60  ,aud_g12
23:30:21  61  ,aud_g13
23:30:21  62  ,aud_g14
23:30:21  63  ,aud_g15
23:30:21  64  ,aud_g16
23:30:21  65  ,aud_g17
23:30:21  66  ,aud_g18
23:30:21  67  ,aud_g19
23:30:21  68  ,aud_g20
23:30:21  69  ,aud_g21
23:30:21  70  ,aud_g22
23:30:21  71  ,aud_g23
23:30:21  72  ,aud_g24
23:30:21  73  ,aud_g25
23:30:21  74  ,aud_g26
23:30:21  75  ,aud_g27
23:30:21  76  ,aud_g28
23:30:21  77  ,aud_g29
23:30:21  78  ,aud_g30
23:30:21  79  ,aud_g31
23:30:21  80  ,aud_g32
23:30:21  81  ,aud_g33
23:30:21  82  ,aud_g34
23:30:21  83  ,aud_g35
23:30:21  84  ,aud_g36
23:30:21  85  ,aud_g37
23:30:21  86  ,aud_g38
23:30:21  87  ,aud_g39
23:30:21  88  ,aud_g40
23:30:21  89  ,aud_g41
23:30:21  90  ,gbp_g00
23:30:21  91  ,gbp_g01
23:30:21  92  ,gbp_g02
23:30:21  93  ,gbp_g03
23:30:21  94  ,gbp_g04
23:30:21  95  ,gbp_g05
23:30:21  96  ,gbp_g06
23:30:21  97  ,gbp_g07
23:30:21  98  ,gbp_g08
23:30:21  99  ,gbp_g09
23:30:21 100  ,gbp_g10
23:30:21 101  ,gbp_g11
23:30:21 102  ,gbp_g12
23:30:21 103  ,gbp_g13
23:30:21 104  ,gbp_g14
23:30:21 105  ,gbp_g15
23:30:21 106  ,gbp_g16
23:30:21 107  ,gbp_g17
23:30:21 108  ,gbp_g18
23:30:21 109  ,gbp_g19
23:30:21 110  ,gbp_g20
23:30:21 111  ,gbp_g21
23:30:21 112  ,gbp_g22
23:30:21 113  ,gbp_g23
23:30:21 114  ,gbp_g24
23:30:21 115  ,gbp_g25
23:30:21 116  ,gbp_g26
23:30:21 117  ,gbp_g27
23:30:21 118  ,gbp_g28
23:30:21 119  ,gbp_g29
23:30:21 120  ,gbp_g30
23:30:21 121  ,gbp_g31
23:30:21 122  ,gbp_g32
23:30:21 123  ,gbp_g33
23:30:21 124  ,gbp_g34
23:30:21 125  ,gbp_g35
23:30:21 126  ,gbp_g36
23:30:21 127  ,gbp_g37
23:30:21 128  ,gbp_g38
23:30:21 129  ,gbp_g39
23:30:21 130  ,gbp_g40
23:30:21 131  ,gbp_g41
23:30:21 132  ,jpy_g00
23:30:21 133  ,jpy_g01
23:30:21 134  ,jpy_g02
23:30:21 135  ,jpy_g03
23:30:21 136  ,jpy_g04
23:30:21 137  ,jpy_g05
23:30:21 138  ,jpy_g06
23:30:21 139  ,jpy_g07
23:30:21 140  ,jpy_g08
23:30:21 141  ,jpy_g09
23:30:21 142  ,jpy_g10
23:30:21 143  ,jpy_g11
23:30:21 144  ,jpy_g12
23:30:21 145  ,jpy_g13
23:30:21 146  ,jpy_g14
23:30:21 147  ,jpy_g15
23:30:21 148  ,jpy_g16
23:30:21 149  ,jpy_g17
23:30:21 150  ,jpy_g18
23:30:21 151  ,jpy_g19
23:30:21 152  ,jpy_g20
23:30:21 153  ,jpy_g21
23:30:21 154  ,jpy_g22
23:30:21 155  ,jpy_g23
23:30:21 156  ,jpy_g24
23:30:21 157  ,jpy_g25
23:30:21 158  ,jpy_g26
23:30:21 159  ,jpy_g27
23:30:21 160  ,jpy_g28
23:30:21 161  ,jpy_g29
23:30:21 162  ,jpy_g30
23:30:21 163  ,jpy_g31
23:30:21 164  ,jpy_g32
23:30:21 165  ,jpy_g33
23:30:21 166  ,jpy_g34
23:30:21 167  ,jpy_g35
23:30:21 168  ,jpy_g36
23:30:21 169  ,jpy_g37
23:30:21 170  ,jpy_g38
23:30:21 171  ,jpy_g39
23:30:21 172  ,jpy_g40
23:30:21 173  ,jpy_g41
23:30:21 174  ,cad_g00
23:30:21 175  ,cad_g01
23:30:21 176  ,cad_g02
23:30:21 177  ,cad_g03
23:30:21 178  ,cad_g04
23:30:21 179  ,cad_g05
23:30:21 180  ,cad_g06
23:30:21 181  ,cad_g07
23:30:21 182  ,cad_g08
23:30:21 183  ,cad_g09
23:30:21 184  ,cad_g10
23:30:21 185  ,cad_g11
23:30:21 186  ,cad_g12
23:30:21 187  ,cad_g13
23:30:21 188  ,cad_g14
23:30:21 189  ,cad_g15
23:30:21 190  ,cad_g16
23:30:21 191  ,cad_g17
23:30:21 192  ,cad_g18
23:30:21 193  ,cad_g19
23:30:21 194  ,cad_g20
23:30:21 195  ,cad_g21
23:30:21 196  ,cad_g22
23:30:21 197  ,cad_g23
23:30:21 198  ,cad_g24
23:30:21 199  ,cad_g25
23:30:21 200  ,cad_g26
23:30:21 201  ,cad_g27
23:30:21 202  ,cad_g28
23:30:21 203  ,cad_g29
23:30:21 204  ,cad_g30
23:30:21 205  ,cad_g31
23:30:21 206  ,cad_g32
23:30:21 207  ,cad_g33
23:30:21 208  ,cad_g34
23:30:21 209  ,cad_g35
23:30:21 210  ,cad_g36
23:30:21 211  ,cad_g37
23:30:21 212  ,cad_g38
23:30:21 213  ,cad_g39
23:30:21 214  ,cad_g40
23:30:21 215  ,cad_g41
23:30:21 216  ,chf_g00
23:30:21 217  ,chf_g01
23:30:21 218  ,chf_g02
23:30:21 219  ,chf_g03
23:30:21 220  ,chf_g04
23:30:21 221  ,chf_g05
23:30:21 222  ,chf_g06
23:30:21 223  ,chf_g07
23:30:21 224  ,chf_g08
23:30:21 225  ,chf_g09
23:30:21 226  ,chf_g10
23:30:21 227  ,chf_g11
23:30:21 228  ,chf_g12
23:30:21 229  ,chf_g13
23:30:21 230  ,chf_g14
23:30:21 231  ,chf_g15
23:30:21 232  ,chf_g16
23:30:21 233  ,chf_g17
23:30:21 234  ,chf_g18
23:30:21 235  ,chf_g19
23:30:21 236  ,chf_g20
23:30:21 237  ,chf_g21
23:30:21 238  ,chf_g22
23:30:21 239  ,chf_g23
23:30:21 240  ,chf_g24
23:30:21 241  ,chf_g25
23:30:21 242  ,chf_g26
23:30:21 243  ,chf_g27
23:30:21 244  ,chf_g28
23:30:21 245  ,chf_g29
23:30:21 246  ,chf_g30
23:30:21 247  ,chf_g31
23:30:21 248  ,chf_g32
23:30:21 249  ,chf_g33
23:30:21 250  ,chf_g34
23:30:21 251  ,chf_g35
23:30:21 252  ,chf_g36
23:30:21 253  ,chf_g37
23:30:21 254  ,chf_g38
23:30:21 255  ,chf_g39
23:30:21 256  ,chf_g40
23:30:21 257  ,chf_g41
23:30:21 258  FROM aud_ms6 m
23:30:21 259  WHERE m.ydate = '&1'||' '||'&2'
23:30:21 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'23:15:00'

View created.

Elapsed: 00:00:00.13
23:30:21 SQL> 
23:30:21 SQL> -- rpt
23:30:21 SQL> -- We should see just 1 row:
23:30:21 SQL> 
23:30:21 SQL> SELECT COUNT(prdate) FROM sme
23:30:21   2  
23:30:21 SQL> -- Build the model:
23:30:21 SQL> CREATE OR REPLACE VIEW bme AS
23:30:21   2  SELECT
23:30:21   3  'aud'||m.ydate prdate
23:30:21   4  ,gatt
23:30:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:30:21   6  ,eur_g00
23:30:21   7  ,eur_g01
23:30:21   8  ,eur_g02
23:30:21   9  ,eur_g03
23:30:21  10  ,eur_g04
23:30:21  11  ,eur_g05
23:30:21  12  ,eur_g06
23:30:21  13  ,eur_g07
23:30:21  14  ,eur_g08
23:30:21  15  ,eur_g09
23:30:21  16  ,eur_g10
23:30:21  17  ,eur_g11
23:30:21  18  ,eur_g12
23:30:21  19  ,eur_g13
23:30:21  20  ,eur_g14
23:30:21  21  ,eur_g15
23:30:21  22  ,eur_g16
23:30:21  23  ,eur_g17
23:30:21  24  ,eur_g18
23:30:21  25  ,eur_g19
23:30:21  26  ,eur_g20
23:30:21  27  ,eur_g21
23:30:21  28  ,eur_g22
23:30:21  29  ,eur_g23
23:30:21  30  ,eur_g24
23:30:21  31  ,eur_g25
23:30:21  32  ,eur_g26
23:30:21  33  ,eur_g27
23:30:21  34  ,eur_g28
23:30:21  35  ,eur_g29
23:30:21  36  ,eur_g30
23:30:21  37  ,eur_g31
23:30:21  38  ,eur_g32
23:30:21  39  ,eur_g33
23:30:21  40  ,eur_g34
23:30:21  41  ,eur_g35
23:30:21  42  ,eur_g36
23:30:21  43  ,eur_g37
23:30:21  44  ,eur_g38
23:30:21  45  ,eur_g39
23:30:21  46  ,eur_g40
23:30:21  47  ,eur_g41
23:30:21  48  ,aud_g00
23:30:21  49  ,aud_g01
23:30:21  50  ,aud_g02
23:30:21  51  ,aud_g03
23:30:21  52  ,aud_g04
23:30:21  53  ,aud_g05
23:30:21  54  ,aud_g06
23:30:21  55  ,aud_g07
23:30:21  56  ,aud_g08
23:30:21  57  ,aud_g09
23:30:21  58  ,aud_g10
23:30:21  59  ,aud_g11
23:30:21  60  ,aud_g12
23:30:21  61  ,aud_g13
23:30:21  62  ,aud_g14
23:30:21  63  ,aud_g15
23:30:21  64  ,aud_g16
23:30:21  65  ,aud_g17
23:30:21  66  ,aud_g18
23:30:21  67  ,aud_g19
23:30:21  68  ,aud_g20
23:30:21  69  ,aud_g21
23:30:21  70  ,aud_g22
23:30:21  71  ,aud_g23
23:30:21  72  ,aud_g24
23:30:21  73  ,aud_g25
23:30:21  74  ,aud_g26
23:30:21  75  ,aud_g27
23:30:21  76  ,aud_g28
23:30:21  77  ,aud_g29
23:30:21  78  ,aud_g30
23:30:21  79  ,aud_g31
23:30:21  80  ,aud_g32
23:30:21  81  ,aud_g33
23:30:21  82  ,aud_g34
23:30:21  83  ,aud_g35
23:30:21  84  ,aud_g36
23:30:21  85  ,aud_g37
23:30:21  86  ,aud_g38
23:30:21  87  ,aud_g39
23:30:21  88  ,aud_g40
23:30:21  89  ,aud_g41
23:30:21  90  ,gbp_g00
23:30:21  91  ,gbp_g01
23:30:21  92  ,gbp_g02
23:30:21  93  ,gbp_g03
23:30:21  94  ,gbp_g04
23:30:21  95  ,gbp_g05
23:30:21  96  ,gbp_g06
23:30:21  97  ,gbp_g07
23:30:21  98  ,gbp_g08
23:30:21  99  ,gbp_g09
23:30:21 100  ,gbp_g10
23:30:21 101  ,gbp_g11
23:30:21 102  ,gbp_g12
23:30:21 103  ,gbp_g13
23:30:21 104  ,gbp_g14
23:30:21 105  ,gbp_g15
23:30:21 106  ,gbp_g16
23:30:21 107  ,gbp_g17
23:30:21 108  ,gbp_g18
23:30:21 109  ,gbp_g19
23:30:21 110  ,gbp_g20
23:30:21 111  ,gbp_g21
23:30:21 112  ,gbp_g22
23:30:21 113  ,gbp_g23
23:30:21 114  ,gbp_g24
23:30:21 115  ,gbp_g25
23:30:21 116  ,gbp_g26
23:30:21 117  ,gbp_g27
23:30:21 118  ,gbp_g28
23:30:21 119  ,gbp_g29
23:30:21 120  ,gbp_g30
23:30:21 121  ,gbp_g31
23:30:21 122  ,gbp_g32
23:30:21 123  ,gbp_g33
23:30:21 124  ,gbp_g34
23:30:21 125  ,gbp_g35
23:30:21 126  ,gbp_g36
23:30:21 127  ,gbp_g37
23:30:21 128  ,gbp_g38
23:30:21 129  ,gbp_g39
23:30:21 130  ,gbp_g40
23:30:21 131  ,gbp_g41
23:30:21 132  ,jpy_g00
23:30:21 133  ,jpy_g01
23:30:21 134  ,jpy_g02
23:30:21 135  ,jpy_g03
23:30:21 136  ,jpy_g04
23:30:21 137  ,jpy_g05
23:30:21 138  ,jpy_g06
23:30:21 139  ,jpy_g07
23:30:21 140  ,jpy_g08
23:30:21 141  ,jpy_g09
23:30:21 142  ,jpy_g10
23:30:21 143  ,jpy_g11
23:30:21 144  ,jpy_g12
23:30:21 145  ,jpy_g13
23:30:21 146  ,jpy_g14
23:30:21 147  ,jpy_g15
23:30:21 148  ,jpy_g16
23:30:21 149  ,jpy_g17
23:30:21 150  ,jpy_g18
23:30:21 151  ,jpy_g19
23:30:21 152  ,jpy_g20
23:30:21 153  ,jpy_g21
23:30:21 154  ,jpy_g22
23:30:21 155  ,jpy_g23
23:30:21 156  ,jpy_g24
23:30:21 157  ,jpy_g25
23:30:21 158  ,jpy_g26
23:30:21 159  ,jpy_g27
23:30:21 160  ,jpy_g28
23:30:21 161  ,jpy_g29
23:30:21 162  ,jpy_g30
23:30:21 163  ,jpy_g31
23:30:21 164  ,jpy_g32
23:30:21 165  ,jpy_g33
23:30:21 166  ,jpy_g34
23:30:21 167  ,jpy_g35
23:30:21 168  ,jpy_g36
23:30:21 169  ,jpy_g37
23:30:21 170  ,jpy_g38
23:30:21 171  ,jpy_g39
23:30:21 172  ,jpy_g40
23:30:21 173  ,jpy_g41
23:30:21 174  ,cad_g00
23:30:21 175  ,cad_g01
23:30:21 176  ,cad_g02
23:30:21 177  ,cad_g03
23:30:21 178  ,cad_g04
23:30:21 179  ,cad_g05
23:30:21 180  ,cad_g06
23:30:21 181  ,cad_g07
23:30:21 182  ,cad_g08
23:30:21 183  ,cad_g09
23:30:21 184  ,cad_g10
23:30:21 185  ,cad_g11
23:30:21 186  ,cad_g12
23:30:21 187  ,cad_g13
23:30:21 188  ,cad_g14
23:30:21 189  ,cad_g15
23:30:21 190  ,cad_g16
23:30:21 191  ,cad_g17
23:30:21 192  ,cad_g18
23:30:21 193  ,cad_g19
23:30:21 194  ,cad_g20
23:30:21 195  ,cad_g21
23:30:21 196  ,cad_g22
23:30:21 197  ,cad_g23
23:30:21 198  ,cad_g24
23:30:21 199  ,cad_g25
23:30:21 200  ,cad_g26
23:30:21 201  ,cad_g27
23:30:21 202  ,cad_g28
23:30:21 203  ,cad_g29
23:30:21 204  ,cad_g30
23:30:21 205  ,cad_g31
23:30:21 206  ,cad_g32
23:30:21 207  ,cad_g33
23:30:21 208  ,cad_g34
23:30:21 209  ,cad_g35
23:30:21 210  ,cad_g36
23:30:21 211  ,cad_g37
23:30:21 212  ,cad_g38
23:30:21 213  ,cad_g39
23:30:21 214  ,cad_g40
23:30:21 215  ,cad_g41
23:30:21 216  ,chf_g00
23:30:21 217  ,chf_g01
23:30:21 218  ,chf_g02
23:30:21 219  ,chf_g03
23:30:21 220  ,chf_g04
23:30:21 221  ,chf_g05
23:30:21 222  ,chf_g06
23:30:21 223  ,chf_g07
23:30:21 224  ,chf_g08
23:30:21 225  ,chf_g09
23:30:21 226  ,chf_g10
23:30:21 227  ,chf_g11
23:30:21 228  ,chf_g12
23:30:21 229  ,chf_g13
23:30:21 230  ,chf_g14
23:30:21 231  ,chf_g15
23:30:21 232  ,chf_g16
23:30:21 233  ,chf_g17
23:30:21 234  ,chf_g18
23:30:21 235  ,chf_g19
23:30:21 236  ,chf_g20
23:30:21 237  ,chf_g21
23:30:21 238  ,chf_g22
23:30:21 239  ,chf_g23
23:30:21 240  ,chf_g24
23:30:21 241  ,chf_g25
23:30:21 242  ,chf_g26
23:30:21 243  ,chf_g27
23:30:21 244  ,chf_g28
23:30:21 245  ,chf_g29
23:30:21 246  ,chf_g30
23:30:21 247  ,chf_g31
23:30:21 248  ,chf_g32
23:30:21 249  ,chf_g33
23:30:21 250  ,chf_g34
23:30:21 251  ,chf_g35
23:30:21 252  ,chf_g36
23:30:21 253  ,chf_g37
23:30:21 254  ,chf_g38
23:30:21 255  ,chf_g39
23:30:21 256  ,chf_g40
23:30:21 257  ,chf_g41
23:30:21 258  FROM aud_ms6 m
23:30:21 259  WHERE gatt IN('nup','up')
23:30:21 260  AND 1+m.ydate < '&1'||' '||'&2'
23:30:21 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'23:15:00'

View created.

Elapsed: 00:00:00.13
23:30:21 SQL> 
23:30:21 SQL> -- rpt
23:30:21 SQL> 
23:30:21 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
23:30:21   2  
23:30:21 SQL> SELECT MAX(prdate) FROM bme
23:30:21   2  
23:30:21 SQL> -- Now build model from bme and score sme
23:30:21 SQL> @score1.sql
23:30:21 SQL> -- score1.sql
23:30:21 SQL> 
23:30:21 SQL> -- Does the 1st SVM score
23:30:21 SQL> 
23:30:21 SQL> -- Fill up svmc_apply_prep
23:30:21 SQL> @score.sql
23:30:21 SQL> --
23:30:21 SQL> -- score.sql
23:30:21 SQL> --
23:30:21 SQL> 
23:30:21 SQL> -- usage: score.sql
23:30:21 SQL> 
23:30:21 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
23:30:21 SQL> 
23:30:21 SQL> DEFINE target	= 'gatt'
23:30:21 SQL> DEFINE model_name = 'forex14'
23:30:21 SQL> DEFINE bldtable	= 'bme'
23:30:21 SQL> DEFINE scoretable = 'sme'
23:30:21 SQL> DEFINE case_id	= 'prdate'
23:30:21 SQL> 
23:30:21 SQL> -- Define a variable to help me exclude some columns from some data mining calls
23:30:21 SQL> DEFINE exclude1 = "'&target','&case_id'"
23:30:21 SQL> 
23:30:21 SQL> -- Builds an SVM model using pl/sql.
23:30:21 SQL> 
23:30:21 SQL> -----------------------------------------------------------------------
23:30:21 SQL> --			    BUILD THE MODEL
23:30:21 SQL> -----------------------------------------------------------------------
23:30:21 SQL> 
23:30:21 SQL> -- Cleanup old build data preparation objects for repeat runs
23:30:21 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
23:30:21 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
23:30:21 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
23:30:21 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
23:30:21 SQL> 
23:30:21 SQL> 
23:30:21 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
23:30:21 SQL> --
23:30:21 SQL> -- DROP	TABLE svmc_settings ;
23:30:21 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
23:30:21 SQL> -- DELETE svmc_settings;
23:30:21 SQL> 
23:30:21 SQL> -- The default classification algorithm is Naive Bayes. So override
23:30:21 SQL> -- this choice to SVM using a settings table.
23:30:21 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
23:30:21 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
23:30:21 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
23:30:21 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
23:30:21 SQL> -- models.
23:30:21 SQL> --
23:30:21 SQL> 
23:30:21 SQL> -- Do this once and then comment it out.
23:30:21 SQL> -- That makes script go faster.
23:30:21 SQL> -- BEGIN
23:30:21 SQL> -- -- Populate settings table
23:30:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:30:21 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
23:30:21 SQL> --
23:30:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:30:21 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
23:30:21 SQL> --
23:30:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:30:21 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
23:30:21 SQL> --   COMMIT;
23:30:21 SQL> -- END;
23:30:21 SQL> -- /
23:30:21 SQL> 
23:30:21 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
23:30:21 SQL> 
23:30:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
23:30:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:30:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:30:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
23:30:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:30:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
23:30:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
23:30:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:30:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:30:21 SQL> 
23:30:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
23:30:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:30:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:30:21 SQL> 
23:30:21 SQL> --------------------------------
23:30:21 SQL> -- PREPARE BUILD (TRAINING) DATA
23:30:21 SQL> --
23:30:21 SQL> 
23:30:21 SQL> -- 1. Missing Value treatment for all Predictors and
23:30:21 SQL> -- 2. Outlier Treatment and
23:30:21 SQL> -- 3. Normalization are performed below.
23:30:21 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
23:30:21 SQL> --    normalized here.
23:30:21 SQL> 
23:30:21 SQL> BEGIN
23:30:21   2  	-- Perform missing value treatment for all predictors
23:30:21   3  	-- create miss tables
23:30:21   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
23:30:21   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
23:30:21   6  
23:30:21   7  	-- populate miss tables
23:30:21   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
23:30:21   9  	  miss_table_name => 'svmc_miss_num',
23:30:21  10  	  data_table_name => '&bldtable',
23:30:21  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:30:21  12  
23:30:21  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
23:30:21  14  	  miss_table_name => 'svmc_miss_cat',
23:30:21  15  	  data_table_name => '&bldtable',
23:30:21  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:30:21  17  
23:30:21  18  	-- xform input data to replace missing values
23:30:21  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:30:21  20  	  miss_table_name => 'svmc_miss_num',
23:30:21  21  	  data_table_name => '&bldtable',
23:30:21  22  	  xform_view_name => 'xformed_build_miss_num');
23:30:21  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:30:21  24  	  miss_table_name => 'svmc_miss_cat',
23:30:21  25  	  data_table_name => '&bldtable',
23:30:21  26  	  xform_view_name => 'xformed_build_miss_cat');
23:30:21  27  
23:30:21  28  	-- Perform outlier treatment.
23:30:21  29  	-- create clip table
23:30:21  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
23:30:21  31  
23:30:21  32  	-- populate clip table
23:30:21  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
23:30:21  34  	  clip_table_name => 'svmc_clip',
23:30:21  35  	  data_table_name => '&bldtable',
23:30:21  36  	  tail_frac	  => 0.025,
23:30:21  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:30:21  38  
23:30:21  39  	-- xform input data to winsorized data
23:30:21  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
23:30:21  41  	  clip_table_name => 'svmc_clip',
23:30:21  42  	  data_table_name => '&bldtable',
23:30:21  43  	  xform_view_name => 'svmc_winsor');
23:30:21  44  
23:30:21  45  	-- create normalization table
23:30:21  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
23:30:21  47  
23:30:21  48  	-- populate normalization table based on winsorized data
23:30:21  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
23:30:21  50  	  norm_table_name => 'svmc_norm',
23:30:21  51  	  data_table_name => 'svmc_winsor',
23:30:21  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:30:21  53  
23:30:21  54  	-- normalize the original data
23:30:21  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:30:21  56  	  norm_table_name => 'svmc_norm',
23:30:21  57  	  data_table_name => '&bldtable',
23:30:21  58  	  xform_view_name => 'svmc_build_prep');
23:30:21  59  END;
23:30:21  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.87
23:30:39 SQL> 
23:30:39 SQL> ---------------------
23:30:39 SQL> -- CREATE A NEW MODEL
23:30:39 SQL> --
23:30:39 SQL> -- Cleanup old model with the same name for repeat runs
23:30:39 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
23:30:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:30:39   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.01
23:30:40 SQL> 
23:30:40 SQL> -- Build a new SVM Model
23:30:40 SQL> BEGIN
23:30:40   2  	DBMS_DATA_MINING.CREATE_MODEL(
23:30:40   3  	  model_name	      => '&model_name',
23:30:40   4  	  mining_function     => dbms_data_mining.classification,
23:30:40   5  	  data_table_name     => 'svmc_build_prep',
23:30:40   6  	  case_id_column_name => '&case_id',
23:30:40   7  	  target_column_name  => '&target',
23:30:40   8  	  settings_table_name => 'svmc_settings');
23:30:40   9  END;
23:30:40  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.38
23:31:09 SQL> 
23:31:09 SQL> -----------------------------------------------------------------------
23:31:09 SQL> --			       APPLY/score THE MODEL
23:31:09 SQL> -----------------------------------------------------------------------
23:31:09 SQL> 
23:31:09 SQL> -- Cleanup old scoring data preparation objects for repeat runs
23:31:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
23:31:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:31:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:31:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
23:31:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:31:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:31:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
23:31:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:31:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:31:09 SQL> -----------------------
23:31:09 SQL> -- PREPARE SCORING DATA
23:31:09 SQL> --
23:31:09 SQL> -- If the data for model creation has been prepared, then the data
23:31:09 SQL> -- to be scored using the model must be prepared in the same manner
23:31:09 SQL> -- in order to obtain meaningful results.
23:31:09 SQL> --
23:31:09 SQL> -- 1. Missing Value treatment for all Predictors and
23:31:09 SQL> -- 2. Normalization
23:31:09 SQL> -- No outlier treatment will be performed during test and apply. The
23:31:09 SQL> -- normalization step is sufficient, since the normalization parameters
23:31:09 SQL> -- already capture the effects of outlier treatment done with build data.
23:31:09 SQL> --
23:31:09 SQL> BEGIN
23:31:09   2  	-- Xform Test data to replace missing values
23:31:09   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:31:09   4  	  miss_table_name => 'svmc_miss_num',
23:31:09   5  	  data_table_name => '&scoretable',
23:31:09   6  	  xform_view_name => 'xformed_apply_miss_num');
23:31:09   7  
23:31:09   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:31:09   9  	  miss_table_name => 'svmc_miss_cat',
23:31:09  10  	  data_table_name => '&scoretable',
23:31:09  11  	  xform_view_name => 'xformed_apply_miss_cat');
23:31:09  12  
23:31:09  13  	-- Normalize the data to be scored
23:31:09  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:31:09  15  	  norm_table_name => 'svmc_norm',
23:31:09  16  	  data_table_name => '&scoretable',
23:31:09  17  	  xform_view_name => 'svmc_apply_prep');
23:31:09  18  END;
23:31:09  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
23:31:10 SQL> 
23:31:10 SQL> -- Use same model_name used in score.sql
23:31:10 SQL> DEFINE model_name = 'forex14'
23:31:10 SQL> 
23:31:10 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
23:31:10 SQL> 
23:31:10 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
23:31:10 SQL> 
23:31:10 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
23:31:10   2  SELECT
23:31:10   3  prdate
23:31:10   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
23:31:10   5  ,sysdate
23:31:10   6  ,SUBSTR(prdate,1,3)pair
23:31:10   7  ,SUBSTR(prdate,4,19)ydate
23:31:10   8  FROM svmc_apply_prep
23:31:10   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
23:31:10 SQL> @aud_score1day.sql  2010-12-29 23:20:00
23:31:10 SQL> --
23:31:10 SQL> -- aud_score1day.sql
23:31:10 SQL> --
23:31:10 SQL> 
23:31:10 SQL> CREATE OR REPLACE VIEW sme AS
23:31:10   2  SELECT
23:31:10   3  'aud'||m.ydate prdate
23:31:10   4  ,NULL gatt
23:31:10   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:31:10   6  ,eur_g00
23:31:10   7  ,eur_g01
23:31:10   8  ,eur_g02
23:31:10   9  ,eur_g03
23:31:10  10  ,eur_g04
23:31:10  11  ,eur_g05
23:31:10  12  ,eur_g06
23:31:10  13  ,eur_g07
23:31:10  14  ,eur_g08
23:31:10  15  ,eur_g09
23:31:10  16  ,eur_g10
23:31:10  17  ,eur_g11
23:31:10  18  ,eur_g12
23:31:10  19  ,eur_g13
23:31:10  20  ,eur_g14
23:31:10  21  ,eur_g15
23:31:10  22  ,eur_g16
23:31:10  23  ,eur_g17
23:31:10  24  ,eur_g18
23:31:10  25  ,eur_g19
23:31:10  26  ,eur_g20
23:31:10  27  ,eur_g21
23:31:10  28  ,eur_g22
23:31:10  29  ,eur_g23
23:31:10  30  ,eur_g24
23:31:10  31  ,eur_g25
23:31:10  32  ,eur_g26
23:31:10  33  ,eur_g27
23:31:10  34  ,eur_g28
23:31:10  35  ,eur_g29
23:31:10  36  ,eur_g30
23:31:10  37  ,eur_g31
23:31:10  38  ,eur_g32
23:31:10  39  ,eur_g33
23:31:10  40  ,eur_g34
23:31:10  41  ,eur_g35
23:31:10  42  ,eur_g36
23:31:10  43  ,eur_g37
23:31:10  44  ,eur_g38
23:31:10  45  ,eur_g39
23:31:10  46  ,eur_g40
23:31:10  47  ,eur_g41
23:31:10  48  ,aud_g00
23:31:10  49  ,aud_g01
23:31:10  50  ,aud_g02
23:31:10  51  ,aud_g03
23:31:10  52  ,aud_g04
23:31:10  53  ,aud_g05
23:31:10  54  ,aud_g06
23:31:10  55  ,aud_g07
23:31:10  56  ,aud_g08
23:31:10  57  ,aud_g09
23:31:10  58  ,aud_g10
23:31:10  59  ,aud_g11
23:31:10  60  ,aud_g12
23:31:10  61  ,aud_g13
23:31:10  62  ,aud_g14
23:31:10  63  ,aud_g15
23:31:10  64  ,aud_g16
23:31:10  65  ,aud_g17
23:31:10  66  ,aud_g18
23:31:10  67  ,aud_g19
23:31:10  68  ,aud_g20
23:31:10  69  ,aud_g21
23:31:10  70  ,aud_g22
23:31:10  71  ,aud_g23
23:31:10  72  ,aud_g24
23:31:10  73  ,aud_g25
23:31:10  74  ,aud_g26
23:31:10  75  ,aud_g27
23:31:10  76  ,aud_g28
23:31:10  77  ,aud_g29
23:31:10  78  ,aud_g30
23:31:10  79  ,aud_g31
23:31:10  80  ,aud_g32
23:31:10  81  ,aud_g33
23:31:10  82  ,aud_g34
23:31:10  83  ,aud_g35
23:31:10  84  ,aud_g36
23:31:10  85  ,aud_g37
23:31:10  86  ,aud_g38
23:31:10  87  ,aud_g39
23:31:10  88  ,aud_g40
23:31:10  89  ,aud_g41
23:31:10  90  ,gbp_g00
23:31:10  91  ,gbp_g01
23:31:10  92  ,gbp_g02
23:31:10  93  ,gbp_g03
23:31:10  94  ,gbp_g04
23:31:10  95  ,gbp_g05
23:31:10  96  ,gbp_g06
23:31:10  97  ,gbp_g07
23:31:10  98  ,gbp_g08
23:31:10  99  ,gbp_g09
23:31:10 100  ,gbp_g10
23:31:10 101  ,gbp_g11
23:31:10 102  ,gbp_g12
23:31:10 103  ,gbp_g13
23:31:10 104  ,gbp_g14
23:31:10 105  ,gbp_g15
23:31:10 106  ,gbp_g16
23:31:10 107  ,gbp_g17
23:31:10 108  ,gbp_g18
23:31:10 109  ,gbp_g19
23:31:10 110  ,gbp_g20
23:31:10 111  ,gbp_g21
23:31:10 112  ,gbp_g22
23:31:10 113  ,gbp_g23
23:31:10 114  ,gbp_g24
23:31:10 115  ,gbp_g25
23:31:10 116  ,gbp_g26
23:31:10 117  ,gbp_g27
23:31:10 118  ,gbp_g28
23:31:10 119  ,gbp_g29
23:31:10 120  ,gbp_g30
23:31:10 121  ,gbp_g31
23:31:10 122  ,gbp_g32
23:31:10 123  ,gbp_g33
23:31:10 124  ,gbp_g34
23:31:10 125  ,gbp_g35
23:31:10 126  ,gbp_g36
23:31:10 127  ,gbp_g37
23:31:10 128  ,gbp_g38
23:31:10 129  ,gbp_g39
23:31:10 130  ,gbp_g40
23:31:10 131  ,gbp_g41
23:31:10 132  ,jpy_g00
23:31:10 133  ,jpy_g01
23:31:10 134  ,jpy_g02
23:31:10 135  ,jpy_g03
23:31:10 136  ,jpy_g04
23:31:10 137  ,jpy_g05
23:31:10 138  ,jpy_g06
23:31:10 139  ,jpy_g07
23:31:10 140  ,jpy_g08
23:31:10 141  ,jpy_g09
23:31:10 142  ,jpy_g10
23:31:10 143  ,jpy_g11
23:31:10 144  ,jpy_g12
23:31:10 145  ,jpy_g13
23:31:10 146  ,jpy_g14
23:31:10 147  ,jpy_g15
23:31:10 148  ,jpy_g16
23:31:10 149  ,jpy_g17
23:31:10 150  ,jpy_g18
23:31:10 151  ,jpy_g19
23:31:10 152  ,jpy_g20
23:31:10 153  ,jpy_g21
23:31:10 154  ,jpy_g22
23:31:10 155  ,jpy_g23
23:31:10 156  ,jpy_g24
23:31:10 157  ,jpy_g25
23:31:10 158  ,jpy_g26
23:31:10 159  ,jpy_g27
23:31:10 160  ,jpy_g28
23:31:10 161  ,jpy_g29
23:31:10 162  ,jpy_g30
23:31:10 163  ,jpy_g31
23:31:10 164  ,jpy_g32
23:31:10 165  ,jpy_g33
23:31:10 166  ,jpy_g34
23:31:10 167  ,jpy_g35
23:31:10 168  ,jpy_g36
23:31:10 169  ,jpy_g37
23:31:10 170  ,jpy_g38
23:31:10 171  ,jpy_g39
23:31:10 172  ,jpy_g40
23:31:10 173  ,jpy_g41
23:31:10 174  ,cad_g00
23:31:10 175  ,cad_g01
23:31:10 176  ,cad_g02
23:31:10 177  ,cad_g03
23:31:10 178  ,cad_g04
23:31:10 179  ,cad_g05
23:31:10 180  ,cad_g06
23:31:10 181  ,cad_g07
23:31:10 182  ,cad_g08
23:31:10 183  ,cad_g09
23:31:10 184  ,cad_g10
23:31:10 185  ,cad_g11
23:31:10 186  ,cad_g12
23:31:10 187  ,cad_g13
23:31:10 188  ,cad_g14
23:31:10 189  ,cad_g15
23:31:10 190  ,cad_g16
23:31:10 191  ,cad_g17
23:31:10 192  ,cad_g18
23:31:10 193  ,cad_g19
23:31:10 194  ,cad_g20
23:31:10 195  ,cad_g21
23:31:10 196  ,cad_g22
23:31:10 197  ,cad_g23
23:31:10 198  ,cad_g24
23:31:10 199  ,cad_g25
23:31:10 200  ,cad_g26
23:31:10 201  ,cad_g27
23:31:10 202  ,cad_g28
23:31:10 203  ,cad_g29
23:31:10 204  ,cad_g30
23:31:10 205  ,cad_g31
23:31:10 206  ,cad_g32
23:31:10 207  ,cad_g33
23:31:10 208  ,cad_g34
23:31:10 209  ,cad_g35
23:31:10 210  ,cad_g36
23:31:10 211  ,cad_g37
23:31:10 212  ,cad_g38
23:31:10 213  ,cad_g39
23:31:10 214  ,cad_g40
23:31:10 215  ,cad_g41
23:31:10 216  ,chf_g00
23:31:10 217  ,chf_g01
23:31:10 218  ,chf_g02
23:31:10 219  ,chf_g03
23:31:10 220  ,chf_g04
23:31:10 221  ,chf_g05
23:31:10 222  ,chf_g06
23:31:10 223  ,chf_g07
23:31:10 224  ,chf_g08
23:31:10 225  ,chf_g09
23:31:10 226  ,chf_g10
23:31:10 227  ,chf_g11
23:31:10 228  ,chf_g12
23:31:10 229  ,chf_g13
23:31:10 230  ,chf_g14
23:31:10 231  ,chf_g15
23:31:10 232  ,chf_g16
23:31:10 233  ,chf_g17
23:31:10 234  ,chf_g18
23:31:10 235  ,chf_g19
23:31:10 236  ,chf_g20
23:31:10 237  ,chf_g21
23:31:10 238  ,chf_g22
23:31:10 239  ,chf_g23
23:31:10 240  ,chf_g24
23:31:10 241  ,chf_g25
23:31:10 242  ,chf_g26
23:31:10 243  ,chf_g27
23:31:10 244  ,chf_g28
23:31:10 245  ,chf_g29
23:31:10 246  ,chf_g30
23:31:10 247  ,chf_g31
23:31:10 248  ,chf_g32
23:31:10 249  ,chf_g33
23:31:10 250  ,chf_g34
23:31:10 251  ,chf_g35
23:31:10 252  ,chf_g36
23:31:10 253  ,chf_g37
23:31:10 254  ,chf_g38
23:31:10 255  ,chf_g39
23:31:10 256  ,chf_g40
23:31:10 257  ,chf_g41
23:31:10 258  FROM aud_ms6 m
23:31:10 259  WHERE m.ydate = '&1'||' '||'&2'
23:31:10 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'23:20:00'

View created.

Elapsed: 00:00:00.13
23:31:10 SQL> 
23:31:10 SQL> -- rpt
23:31:10 SQL> -- We should see just 1 row:
23:31:10 SQL> 
23:31:10 SQL> SELECT COUNT(prdate) FROM sme
23:31:10   2  
23:31:10 SQL> -- Build the model:
23:31:10 SQL> CREATE OR REPLACE VIEW bme AS
23:31:10   2  SELECT
23:31:10   3  'aud'||m.ydate prdate
23:31:10   4  ,gatt
23:31:10   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:31:10   6  ,eur_g00
23:31:10   7  ,eur_g01
23:31:10   8  ,eur_g02
23:31:10   9  ,eur_g03
23:31:10  10  ,eur_g04
23:31:10  11  ,eur_g05
23:31:10  12  ,eur_g06
23:31:10  13  ,eur_g07
23:31:10  14  ,eur_g08
23:31:10  15  ,eur_g09
23:31:10  16  ,eur_g10
23:31:10  17  ,eur_g11
23:31:10  18  ,eur_g12
23:31:10  19  ,eur_g13
23:31:10  20  ,eur_g14
23:31:10  21  ,eur_g15
23:31:10  22  ,eur_g16
23:31:10  23  ,eur_g17
23:31:10  24  ,eur_g18
23:31:10  25  ,eur_g19
23:31:10  26  ,eur_g20
23:31:10  27  ,eur_g21
23:31:10  28  ,eur_g22
23:31:10  29  ,eur_g23
23:31:10  30  ,eur_g24
23:31:10  31  ,eur_g25
23:31:10  32  ,eur_g26
23:31:10  33  ,eur_g27
23:31:10  34  ,eur_g28
23:31:10  35  ,eur_g29
23:31:10  36  ,eur_g30
23:31:10  37  ,eur_g31
23:31:10  38  ,eur_g32
23:31:10  39  ,eur_g33
23:31:10  40  ,eur_g34
23:31:10  41  ,eur_g35
23:31:10  42  ,eur_g36
23:31:10  43  ,eur_g37
23:31:10  44  ,eur_g38
23:31:10  45  ,eur_g39
23:31:10  46  ,eur_g40
23:31:10  47  ,eur_g41
23:31:10  48  ,aud_g00
23:31:10  49  ,aud_g01
23:31:10  50  ,aud_g02
23:31:10  51  ,aud_g03
23:31:10  52  ,aud_g04
23:31:10  53  ,aud_g05
23:31:10  54  ,aud_g06
23:31:10  55  ,aud_g07
23:31:10  56  ,aud_g08
23:31:10  57  ,aud_g09
23:31:10  58  ,aud_g10
23:31:10  59  ,aud_g11
23:31:10  60  ,aud_g12
23:31:10  61  ,aud_g13
23:31:10  62  ,aud_g14
23:31:10  63  ,aud_g15
23:31:10  64  ,aud_g16
23:31:10  65  ,aud_g17
23:31:10  66  ,aud_g18
23:31:10  67  ,aud_g19
23:31:10  68  ,aud_g20
23:31:10  69  ,aud_g21
23:31:10  70  ,aud_g22
23:31:10  71  ,aud_g23
23:31:10  72  ,aud_g24
23:31:10  73  ,aud_g25
23:31:10  74  ,aud_g26
23:31:10  75  ,aud_g27
23:31:10  76  ,aud_g28
23:31:10  77  ,aud_g29
23:31:10  78  ,aud_g30
23:31:10  79  ,aud_g31
23:31:10  80  ,aud_g32
23:31:10  81  ,aud_g33
23:31:10  82  ,aud_g34
23:31:10  83  ,aud_g35
23:31:10  84  ,aud_g36
23:31:10  85  ,aud_g37
23:31:10  86  ,aud_g38
23:31:10  87  ,aud_g39
23:31:10  88  ,aud_g40
23:31:10  89  ,aud_g41
23:31:10  90  ,gbp_g00
23:31:10  91  ,gbp_g01
23:31:10  92  ,gbp_g02
23:31:10  93  ,gbp_g03
23:31:10  94  ,gbp_g04
23:31:10  95  ,gbp_g05
23:31:10  96  ,gbp_g06
23:31:10  97  ,gbp_g07
23:31:10  98  ,gbp_g08
23:31:10  99  ,gbp_g09
23:31:10 100  ,gbp_g10
23:31:10 101  ,gbp_g11
23:31:10 102  ,gbp_g12
23:31:10 103  ,gbp_g13
23:31:10 104  ,gbp_g14
23:31:10 105  ,gbp_g15
23:31:10 106  ,gbp_g16
23:31:10 107  ,gbp_g17
23:31:10 108  ,gbp_g18
23:31:10 109  ,gbp_g19
23:31:10 110  ,gbp_g20
23:31:10 111  ,gbp_g21
23:31:10 112  ,gbp_g22
23:31:10 113  ,gbp_g23
23:31:10 114  ,gbp_g24
23:31:10 115  ,gbp_g25
23:31:10 116  ,gbp_g26
23:31:10 117  ,gbp_g27
23:31:10 118  ,gbp_g28
23:31:10 119  ,gbp_g29
23:31:10 120  ,gbp_g30
23:31:10 121  ,gbp_g31
23:31:10 122  ,gbp_g32
23:31:10 123  ,gbp_g33
23:31:10 124  ,gbp_g34
23:31:10 125  ,gbp_g35
23:31:10 126  ,gbp_g36
23:31:10 127  ,gbp_g37
23:31:10 128  ,gbp_g38
23:31:10 129  ,gbp_g39
23:31:10 130  ,gbp_g40
23:31:10 131  ,gbp_g41
23:31:10 132  ,jpy_g00
23:31:10 133  ,jpy_g01
23:31:10 134  ,jpy_g02
23:31:10 135  ,jpy_g03
23:31:10 136  ,jpy_g04
23:31:10 137  ,jpy_g05
23:31:10 138  ,jpy_g06
23:31:10 139  ,jpy_g07
23:31:10 140  ,jpy_g08
23:31:10 141  ,jpy_g09
23:31:10 142  ,jpy_g10
23:31:10 143  ,jpy_g11
23:31:10 144  ,jpy_g12
23:31:10 145  ,jpy_g13
23:31:10 146  ,jpy_g14
23:31:10 147  ,jpy_g15
23:31:10 148  ,jpy_g16
23:31:10 149  ,jpy_g17
23:31:10 150  ,jpy_g18
23:31:10 151  ,jpy_g19
23:31:10 152  ,jpy_g20
23:31:10 153  ,jpy_g21
23:31:10 154  ,jpy_g22
23:31:10 155  ,jpy_g23
23:31:10 156  ,jpy_g24
23:31:10 157  ,jpy_g25
23:31:10 158  ,jpy_g26
23:31:10 159  ,jpy_g27
23:31:10 160  ,jpy_g28
23:31:10 161  ,jpy_g29
23:31:10 162  ,jpy_g30
23:31:10 163  ,jpy_g31
23:31:10 164  ,jpy_g32
23:31:10 165  ,jpy_g33
23:31:10 166  ,jpy_g34
23:31:10 167  ,jpy_g35
23:31:10 168  ,jpy_g36
23:31:10 169  ,jpy_g37
23:31:10 170  ,jpy_g38
23:31:10 171  ,jpy_g39
23:31:10 172  ,jpy_g40
23:31:10 173  ,jpy_g41
23:31:10 174  ,cad_g00
23:31:10 175  ,cad_g01
23:31:10 176  ,cad_g02
23:31:10 177  ,cad_g03
23:31:10 178  ,cad_g04
23:31:10 179  ,cad_g05
23:31:10 180  ,cad_g06
23:31:10 181  ,cad_g07
23:31:10 182  ,cad_g08
23:31:10 183  ,cad_g09
23:31:10 184  ,cad_g10
23:31:10 185  ,cad_g11
23:31:10 186  ,cad_g12
23:31:10 187  ,cad_g13
23:31:10 188  ,cad_g14
23:31:10 189  ,cad_g15
23:31:10 190  ,cad_g16
23:31:10 191  ,cad_g17
23:31:10 192  ,cad_g18
23:31:10 193  ,cad_g19
23:31:10 194  ,cad_g20
23:31:10 195  ,cad_g21
23:31:10 196  ,cad_g22
23:31:10 197  ,cad_g23
23:31:10 198  ,cad_g24
23:31:10 199  ,cad_g25
23:31:10 200  ,cad_g26
23:31:10 201  ,cad_g27
23:31:10 202  ,cad_g28
23:31:10 203  ,cad_g29
23:31:10 204  ,cad_g30
23:31:10 205  ,cad_g31
23:31:10 206  ,cad_g32
23:31:10 207  ,cad_g33
23:31:10 208  ,cad_g34
23:31:10 209  ,cad_g35
23:31:10 210  ,cad_g36
23:31:10 211  ,cad_g37
23:31:10 212  ,cad_g38
23:31:10 213  ,cad_g39
23:31:10 214  ,cad_g40
23:31:10 215  ,cad_g41
23:31:10 216  ,chf_g00
23:31:10 217  ,chf_g01
23:31:10 218  ,chf_g02
23:31:10 219  ,chf_g03
23:31:10 220  ,chf_g04
23:31:10 221  ,chf_g05
23:31:10 222  ,chf_g06
23:31:10 223  ,chf_g07
23:31:10 224  ,chf_g08
23:31:10 225  ,chf_g09
23:31:10 226  ,chf_g10
23:31:10 227  ,chf_g11
23:31:10 228  ,chf_g12
23:31:10 229  ,chf_g13
23:31:10 230  ,chf_g14
23:31:10 231  ,chf_g15
23:31:10 232  ,chf_g16
23:31:10 233  ,chf_g17
23:31:10 234  ,chf_g18
23:31:10 235  ,chf_g19
23:31:10 236  ,chf_g20
23:31:10 237  ,chf_g21
23:31:10 238  ,chf_g22
23:31:10 239  ,chf_g23
23:31:10 240  ,chf_g24
23:31:10 241  ,chf_g25
23:31:10 242  ,chf_g26
23:31:10 243  ,chf_g27
23:31:10 244  ,chf_g28
23:31:10 245  ,chf_g29
23:31:10 246  ,chf_g30
23:31:10 247  ,chf_g31
23:31:10 248  ,chf_g32
23:31:10 249  ,chf_g33
23:31:10 250  ,chf_g34
23:31:10 251  ,chf_g35
23:31:10 252  ,chf_g36
23:31:10 253  ,chf_g37
23:31:10 254  ,chf_g38
23:31:10 255  ,chf_g39
23:31:10 256  ,chf_g40
23:31:10 257  ,chf_g41
23:31:10 258  FROM aud_ms6 m
23:31:10 259  WHERE gatt IN('nup','up')
23:31:10 260  AND 1+m.ydate < '&1'||' '||'&2'
23:31:10 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'23:20:00'

View created.

Elapsed: 00:00:00.12
23:31:11 SQL> 
23:31:11 SQL> -- rpt
23:31:11 SQL> 
23:31:11 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
23:31:11   2  
23:31:11 SQL> SELECT MAX(prdate) FROM bme
23:31:11   2  
23:31:11 SQL> -- Now build model from bme and score sme
23:31:11 SQL> @score1.sql
23:31:11 SQL> -- score1.sql
23:31:11 SQL> 
23:31:11 SQL> -- Does the 1st SVM score
23:31:11 SQL> 
23:31:11 SQL> -- Fill up svmc_apply_prep
23:31:11 SQL> @score.sql
23:31:11 SQL> --
23:31:11 SQL> -- score.sql
23:31:11 SQL> --
23:31:11 SQL> 
23:31:11 SQL> -- usage: score.sql
23:31:11 SQL> 
23:31:11 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
23:31:11 SQL> 
23:31:11 SQL> DEFINE target	= 'gatt'
23:31:11 SQL> DEFINE model_name = 'forex14'
23:31:11 SQL> DEFINE bldtable	= 'bme'
23:31:11 SQL> DEFINE scoretable = 'sme'
23:31:11 SQL> DEFINE case_id	= 'prdate'
23:31:11 SQL> 
23:31:11 SQL> -- Define a variable to help me exclude some columns from some data mining calls
23:31:11 SQL> DEFINE exclude1 = "'&target','&case_id'"
23:31:11 SQL> 
23:31:11 SQL> -- Builds an SVM model using pl/sql.
23:31:11 SQL> 
23:31:11 SQL> -----------------------------------------------------------------------
23:31:11 SQL> --			    BUILD THE MODEL
23:31:11 SQL> -----------------------------------------------------------------------
23:31:11 SQL> 
23:31:11 SQL> -- Cleanup old build data preparation objects for repeat runs
23:31:11 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
23:31:11 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
23:31:11 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
23:31:11 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
23:31:11 SQL> 
23:31:11 SQL> 
23:31:11 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
23:31:11 SQL> --
23:31:11 SQL> -- DROP	TABLE svmc_settings ;
23:31:11 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
23:31:11 SQL> -- DELETE svmc_settings;
23:31:11 SQL> 
23:31:11 SQL> -- The default classification algorithm is Naive Bayes. So override
23:31:11 SQL> -- this choice to SVM using a settings table.
23:31:11 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
23:31:11 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
23:31:11 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
23:31:11 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
23:31:11 SQL> -- models.
23:31:11 SQL> --
23:31:11 SQL> 
23:31:11 SQL> -- Do this once and then comment it out.
23:31:11 SQL> -- That makes script go faster.
23:31:11 SQL> -- BEGIN
23:31:11 SQL> -- -- Populate settings table
23:31:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:31:11 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
23:31:11 SQL> --
23:31:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:31:11 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
23:31:11 SQL> --
23:31:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:31:11 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
23:31:11 SQL> --   COMMIT;
23:31:11 SQL> -- END;
23:31:11 SQL> -- /
23:31:11 SQL> 
23:31:11 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
23:31:11 SQL> 
23:31:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
23:31:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:31:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
23:31:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
23:31:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:31:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:31:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
23:31:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:31:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:31:11 SQL> 
23:31:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
23:31:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:31:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:31:11 SQL> 
23:31:11 SQL> --------------------------------
23:31:11 SQL> -- PREPARE BUILD (TRAINING) DATA
23:31:11 SQL> --
23:31:11 SQL> 
23:31:11 SQL> -- 1. Missing Value treatment for all Predictors and
23:31:11 SQL> -- 2. Outlier Treatment and
23:31:11 SQL> -- 3. Normalization are performed below.
23:31:11 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
23:31:11 SQL> --    normalized here.
23:31:11 SQL> 
23:31:11 SQL> BEGIN
23:31:11   2  	-- Perform missing value treatment for all predictors
23:31:11   3  	-- create miss tables
23:31:11   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
23:31:11   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
23:31:11   6  
23:31:11   7  	-- populate miss tables
23:31:11   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
23:31:11   9  	  miss_table_name => 'svmc_miss_num',
23:31:11  10  	  data_table_name => '&bldtable',
23:31:11  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:31:11  12  
23:31:11  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
23:31:11  14  	  miss_table_name => 'svmc_miss_cat',
23:31:11  15  	  data_table_name => '&bldtable',
23:31:11  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:31:11  17  
23:31:11  18  	-- xform input data to replace missing values
23:31:11  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:31:11  20  	  miss_table_name => 'svmc_miss_num',
23:31:11  21  	  data_table_name => '&bldtable',
23:31:11  22  	  xform_view_name => 'xformed_build_miss_num');
23:31:11  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:31:11  24  	  miss_table_name => 'svmc_miss_cat',
23:31:11  25  	  data_table_name => '&bldtable',
23:31:11  26  	  xform_view_name => 'xformed_build_miss_cat');
23:31:11  27  
23:31:11  28  	-- Perform outlier treatment.
23:31:11  29  	-- create clip table
23:31:11  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
23:31:11  31  
23:31:11  32  	-- populate clip table
23:31:11  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
23:31:11  34  	  clip_table_name => 'svmc_clip',
23:31:11  35  	  data_table_name => '&bldtable',
23:31:11  36  	  tail_frac	  => 0.025,
23:31:11  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:31:11  38  
23:31:11  39  	-- xform input data to winsorized data
23:31:11  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
23:31:11  41  	  clip_table_name => 'svmc_clip',
23:31:11  42  	  data_table_name => '&bldtable',
23:31:11  43  	  xform_view_name => 'svmc_winsor');
23:31:11  44  
23:31:11  45  	-- create normalization table
23:31:11  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
23:31:11  47  
23:31:11  48  	-- populate normalization table based on winsorized data
23:31:11  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
23:31:11  50  	  norm_table_name => 'svmc_norm',
23:31:11  51  	  data_table_name => 'svmc_winsor',
23:31:11  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:31:11  53  
23:31:11  54  	-- normalize the original data
23:31:11  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:31:11  56  	  norm_table_name => 'svmc_norm',
23:31:11  57  	  data_table_name => '&bldtable',
23:31:11  58  	  xform_view_name => 'svmc_build_prep');
23:31:11  59  END;
23:31:11  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.50
23:31:28 SQL> 
23:31:28 SQL> ---------------------
23:31:28 SQL> -- CREATE A NEW MODEL
23:31:28 SQL> --
23:31:28 SQL> -- Cleanup old model with the same name for repeat runs
23:31:28 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
23:31:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:31:28   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.99
23:31:29 SQL> 
23:31:29 SQL> -- Build a new SVM Model
23:31:29 SQL> BEGIN
23:31:29   2  	DBMS_DATA_MINING.CREATE_MODEL(
23:31:29   3  	  model_name	      => '&model_name',
23:31:29   4  	  mining_function     => dbms_data_mining.classification,
23:31:29   5  	  data_table_name     => 'svmc_build_prep',
23:31:29   6  	  case_id_column_name => '&case_id',
23:31:29   7  	  target_column_name  => '&target',
23:31:29   8  	  settings_table_name => 'svmc_settings');
23:31:29   9  END;
23:31:29  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.36
23:31:56 SQL> 
23:31:56 SQL> -----------------------------------------------------------------------
23:31:56 SQL> --			       APPLY/score THE MODEL
23:31:56 SQL> -----------------------------------------------------------------------
23:31:56 SQL> 
23:31:56 SQL> -- Cleanup old scoring data preparation objects for repeat runs
23:31:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
23:31:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:31:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:31:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
23:31:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:31:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:31:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
23:31:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:31:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:31:56 SQL> -----------------------
23:31:56 SQL> -- PREPARE SCORING DATA
23:31:56 SQL> --
23:31:56 SQL> -- If the data for model creation has been prepared, then the data
23:31:56 SQL> -- to be scored using the model must be prepared in the same manner
23:31:56 SQL> -- in order to obtain meaningful results.
23:31:56 SQL> --
23:31:56 SQL> -- 1. Missing Value treatment for all Predictors and
23:31:56 SQL> -- 2. Normalization
23:31:56 SQL> -- No outlier treatment will be performed during test and apply. The
23:31:56 SQL> -- normalization step is sufficient, since the normalization parameters
23:31:56 SQL> -- already capture the effects of outlier treatment done with build data.
23:31:56 SQL> --
23:31:56 SQL> BEGIN
23:31:56   2  	-- Xform Test data to replace missing values
23:31:56   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:31:56   4  	  miss_table_name => 'svmc_miss_num',
23:31:56   5  	  data_table_name => '&scoretable',
23:31:56   6  	  xform_view_name => 'xformed_apply_miss_num');
23:31:56   7  
23:31:56   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:31:56   9  	  miss_table_name => 'svmc_miss_cat',
23:31:56  10  	  data_table_name => '&scoretable',
23:31:56  11  	  xform_view_name => 'xformed_apply_miss_cat');
23:31:56  12  
23:31:56  13  	-- Normalize the data to be scored
23:31:56  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:31:56  15  	  norm_table_name => 'svmc_norm',
23:31:56  16  	  data_table_name => '&scoretable',
23:31:56  17  	  xform_view_name => 'svmc_apply_prep');
23:31:56  18  END;
23:31:56  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
23:31:57 SQL> 
23:31:57 SQL> -- Use same model_name used in score.sql
23:31:57 SQL> DEFINE model_name = 'forex14'
23:31:57 SQL> 
23:31:57 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
23:31:57 SQL> 
23:31:57 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
23:31:57 SQL> 
23:31:57 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
23:31:57   2  SELECT
23:31:57   3  prdate
23:31:57   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
23:31:57   5  ,sysdate
23:31:57   6  ,SUBSTR(prdate,1,3)pair
23:31:57   7  ,SUBSTR(prdate,4,19)ydate
23:31:57   8  FROM svmc_apply_prep
23:31:57   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
23:31:57 SQL> @aud_score1day_gattn.sql	2010-12-29 23:05:00
23:31:57 SQL> --
23:31:57 SQL> -- aud_score1day_gattn.sql
23:31:57 SQL> --
23:31:57 SQL> 
23:31:57 SQL> CREATE OR REPLACE VIEW sme AS
23:31:57   2  SELECT
23:31:57   3  'aud'||m.ydate prdate
23:31:57   4  ,NULL gattn
23:31:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:31:57   6  ,eur_g00
23:31:57   7  ,eur_g01
23:31:57   8  ,eur_g02
23:31:57   9  ,eur_g03
23:31:57  10  ,eur_g04
23:31:57  11  ,eur_g05
23:31:57  12  ,eur_g06
23:31:57  13  ,eur_g07
23:31:57  14  ,eur_g08
23:31:57  15  ,eur_g09
23:31:57  16  ,eur_g10
23:31:57  17  ,eur_g11
23:31:57  18  ,eur_g12
23:31:57  19  ,eur_g13
23:31:57  20  ,eur_g14
23:31:57  21  ,eur_g15
23:31:57  22  ,eur_g16
23:31:57  23  ,eur_g17
23:31:57  24  ,eur_g18
23:31:57  25  ,eur_g19
23:31:57  26  ,eur_g20
23:31:57  27  ,eur_g21
23:31:57  28  ,eur_g22
23:31:57  29  ,eur_g23
23:31:57  30  ,eur_g24
23:31:57  31  ,eur_g25
23:31:57  32  ,eur_g26
23:31:57  33  ,eur_g27
23:31:57  34  ,eur_g28
23:31:57  35  ,eur_g29
23:31:57  36  ,eur_g30
23:31:57  37  ,eur_g31
23:31:57  38  ,eur_g32
23:31:57  39  ,eur_g33
23:31:57  40  ,eur_g34
23:31:57  41  ,eur_g35
23:31:57  42  ,eur_g36
23:31:57  43  ,eur_g37
23:31:57  44  ,eur_g38
23:31:57  45  ,eur_g39
23:31:57  46  ,eur_g40
23:31:57  47  ,eur_g41
23:31:57  48  ,aud_g00
23:31:57  49  ,aud_g01
23:31:57  50  ,aud_g02
23:31:57  51  ,aud_g03
23:31:57  52  ,aud_g04
23:31:57  53  ,aud_g05
23:31:57  54  ,aud_g06
23:31:57  55  ,aud_g07
23:31:57  56  ,aud_g08
23:31:57  57  ,aud_g09
23:31:57  58  ,aud_g10
23:31:57  59  ,aud_g11
23:31:57  60  ,aud_g12
23:31:57  61  ,aud_g13
23:31:57  62  ,aud_g14
23:31:57  63  ,aud_g15
23:31:57  64  ,aud_g16
23:31:57  65  ,aud_g17
23:31:57  66  ,aud_g18
23:31:57  67  ,aud_g19
23:31:57  68  ,aud_g20
23:31:57  69  ,aud_g21
23:31:57  70  ,aud_g22
23:31:57  71  ,aud_g23
23:31:57  72  ,aud_g24
23:31:57  73  ,aud_g25
23:31:57  74  ,aud_g26
23:31:57  75  ,aud_g27
23:31:57  76  ,aud_g28
23:31:57  77  ,aud_g29
23:31:57  78  ,aud_g30
23:31:57  79  ,aud_g31
23:31:57  80  ,aud_g32
23:31:57  81  ,aud_g33
23:31:57  82  ,aud_g34
23:31:57  83  ,aud_g35
23:31:57  84  ,aud_g36
23:31:57  85  ,aud_g37
23:31:57  86  ,aud_g38
23:31:57  87  ,aud_g39
23:31:57  88  ,aud_g40
23:31:57  89  ,aud_g41
23:31:57  90  ,gbp_g00
23:31:57  91  ,gbp_g01
23:31:57  92  ,gbp_g02
23:31:57  93  ,gbp_g03
23:31:57  94  ,gbp_g04
23:31:57  95  ,gbp_g05
23:31:57  96  ,gbp_g06
23:31:57  97  ,gbp_g07
23:31:57  98  ,gbp_g08
23:31:57  99  ,gbp_g09
23:31:57 100  ,gbp_g10
23:31:57 101  ,gbp_g11
23:31:57 102  ,gbp_g12
23:31:57 103  ,gbp_g13
23:31:57 104  ,gbp_g14
23:31:57 105  ,gbp_g15
23:31:57 106  ,gbp_g16
23:31:57 107  ,gbp_g17
23:31:57 108  ,gbp_g18
23:31:57 109  ,gbp_g19
23:31:57 110  ,gbp_g20
23:31:57 111  ,gbp_g21
23:31:57 112  ,gbp_g22
23:31:57 113  ,gbp_g23
23:31:57 114  ,gbp_g24
23:31:57 115  ,gbp_g25
23:31:57 116  ,gbp_g26
23:31:57 117  ,gbp_g27
23:31:57 118  ,gbp_g28
23:31:57 119  ,gbp_g29
23:31:57 120  ,gbp_g30
23:31:57 121  ,gbp_g31
23:31:57 122  ,gbp_g32
23:31:57 123  ,gbp_g33
23:31:57 124  ,gbp_g34
23:31:57 125  ,gbp_g35
23:31:57 126  ,gbp_g36
23:31:57 127  ,gbp_g37
23:31:57 128  ,gbp_g38
23:31:57 129  ,gbp_g39
23:31:57 130  ,gbp_g40
23:31:57 131  ,gbp_g41
23:31:57 132  ,jpy_g00
23:31:57 133  ,jpy_g01
23:31:57 134  ,jpy_g02
23:31:57 135  ,jpy_g03
23:31:57 136  ,jpy_g04
23:31:57 137  ,jpy_g05
23:31:57 138  ,jpy_g06
23:31:57 139  ,jpy_g07
23:31:57 140  ,jpy_g08
23:31:57 141  ,jpy_g09
23:31:57 142  ,jpy_g10
23:31:57 143  ,jpy_g11
23:31:57 144  ,jpy_g12
23:31:57 145  ,jpy_g13
23:31:57 146  ,jpy_g14
23:31:57 147  ,jpy_g15
23:31:57 148  ,jpy_g16
23:31:57 149  ,jpy_g17
23:31:57 150  ,jpy_g18
23:31:57 151  ,jpy_g19
23:31:57 152  ,jpy_g20
23:31:57 153  ,jpy_g21
23:31:57 154  ,jpy_g22
23:31:57 155  ,jpy_g23
23:31:57 156  ,jpy_g24
23:31:57 157  ,jpy_g25
23:31:57 158  ,jpy_g26
23:31:57 159  ,jpy_g27
23:31:57 160  ,jpy_g28
23:31:57 161  ,jpy_g29
23:31:57 162  ,jpy_g30
23:31:57 163  ,jpy_g31
23:31:57 164  ,jpy_g32
23:31:57 165  ,jpy_g33
23:31:57 166  ,jpy_g34
23:31:57 167  ,jpy_g35
23:31:57 168  ,jpy_g36
23:31:57 169  ,jpy_g37
23:31:57 170  ,jpy_g38
23:31:57 171  ,jpy_g39
23:31:57 172  ,jpy_g40
23:31:57 173  ,jpy_g41
23:31:57 174  ,cad_g00
23:31:57 175  ,cad_g01
23:31:57 176  ,cad_g02
23:31:57 177  ,cad_g03
23:31:57 178  ,cad_g04
23:31:57 179  ,cad_g05
23:31:57 180  ,cad_g06
23:31:57 181  ,cad_g07
23:31:57 182  ,cad_g08
23:31:57 183  ,cad_g09
23:31:57 184  ,cad_g10
23:31:57 185  ,cad_g11
23:31:57 186  ,cad_g12
23:31:57 187  ,cad_g13
23:31:57 188  ,cad_g14
23:31:57 189  ,cad_g15
23:31:57 190  ,cad_g16
23:31:57 191  ,cad_g17
23:31:57 192  ,cad_g18
23:31:57 193  ,cad_g19
23:31:57 194  ,cad_g20
23:31:57 195  ,cad_g21
23:31:57 196  ,cad_g22
23:31:57 197  ,cad_g23
23:31:57 198  ,cad_g24
23:31:57 199  ,cad_g25
23:31:57 200  ,cad_g26
23:31:57 201  ,cad_g27
23:31:57 202  ,cad_g28
23:31:57 203  ,cad_g29
23:31:57 204  ,cad_g30
23:31:57 205  ,cad_g31
23:31:57 206  ,cad_g32
23:31:57 207  ,cad_g33
23:31:57 208  ,cad_g34
23:31:57 209  ,cad_g35
23:31:57 210  ,cad_g36
23:31:57 211  ,cad_g37
23:31:57 212  ,cad_g38
23:31:57 213  ,cad_g39
23:31:57 214  ,cad_g40
23:31:57 215  ,cad_g41
23:31:57 216  ,chf_g00
23:31:57 217  ,chf_g01
23:31:57 218  ,chf_g02
23:31:57 219  ,chf_g03
23:31:57 220  ,chf_g04
23:31:57 221  ,chf_g05
23:31:57 222  ,chf_g06
23:31:57 223  ,chf_g07
23:31:57 224  ,chf_g08
23:31:57 225  ,chf_g09
23:31:57 226  ,chf_g10
23:31:57 227  ,chf_g11
23:31:57 228  ,chf_g12
23:31:57 229  ,chf_g13
23:31:57 230  ,chf_g14
23:31:57 231  ,chf_g15
23:31:57 232  ,chf_g16
23:31:57 233  ,chf_g17
23:31:57 234  ,chf_g18
23:31:57 235  ,chf_g19
23:31:57 236  ,chf_g20
23:31:57 237  ,chf_g21
23:31:57 238  ,chf_g22
23:31:57 239  ,chf_g23
23:31:57 240  ,chf_g24
23:31:57 241  ,chf_g25
23:31:57 242  ,chf_g26
23:31:57 243  ,chf_g27
23:31:57 244  ,chf_g28
23:31:57 245  ,chf_g29
23:31:57 246  ,chf_g30
23:31:57 247  ,chf_g31
23:31:57 248  ,chf_g32
23:31:57 249  ,chf_g33
23:31:57 250  ,chf_g34
23:31:57 251  ,chf_g35
23:31:57 252  ,chf_g36
23:31:57 253  ,chf_g37
23:31:57 254  ,chf_g38
23:31:57 255  ,chf_g39
23:31:57 256  ,chf_g40
23:31:57 257  ,chf_g41
23:31:57 258  FROM aud_ms6 m
23:31:57 259  WHERE m.ydate = '&1'||' '||'&2'
23:31:57 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'23:05:00'

View created.

Elapsed: 00:00:00.13
23:31:57 SQL> 
23:31:57 SQL> -- rpt
23:31:57 SQL> -- We should see just 1 row:
23:31:57 SQL> 
23:31:57 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
23:31:57 SQL> 
23:31:57 SQL> -- Build the model:
23:31:57 SQL> CREATE OR REPLACE VIEW bme AS
23:31:57   2  SELECT
23:31:57   3  'aud'||m.ydate prdate
23:31:57   4  ,gattn
23:31:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:31:57   6  ,eur_g00
23:31:57   7  ,eur_g01
23:31:57   8  ,eur_g02
23:31:57   9  ,eur_g03
23:31:57  10  ,eur_g04
23:31:57  11  ,eur_g05
23:31:57  12  ,eur_g06
23:31:57  13  ,eur_g07
23:31:57  14  ,eur_g08
23:31:57  15  ,eur_g09
23:31:57  16  ,eur_g10
23:31:57  17  ,eur_g11
23:31:57  18  ,eur_g12
23:31:57  19  ,eur_g13
23:31:57  20  ,eur_g14
23:31:57  21  ,eur_g15
23:31:57  22  ,eur_g16
23:31:57  23  ,eur_g17
23:31:57  24  ,eur_g18
23:31:57  25  ,eur_g19
23:31:57  26  ,eur_g20
23:31:57  27  ,eur_g21
23:31:57  28  ,eur_g22
23:31:57  29  ,eur_g23
23:31:57  30  ,eur_g24
23:31:57  31  ,eur_g25
23:31:57  32  ,eur_g26
23:31:57  33  ,eur_g27
23:31:57  34  ,eur_g28
23:31:57  35  ,eur_g29
23:31:57  36  ,eur_g30
23:31:57  37  ,eur_g31
23:31:57  38  ,eur_g32
23:31:57  39  ,eur_g33
23:31:57  40  ,eur_g34
23:31:57  41  ,eur_g35
23:31:57  42  ,eur_g36
23:31:57  43  ,eur_g37
23:31:57  44  ,eur_g38
23:31:57  45  ,eur_g39
23:31:57  46  ,eur_g40
23:31:57  47  ,eur_g41
23:31:57  48  ,aud_g00
23:31:57  49  ,aud_g01
23:31:57  50  ,aud_g02
23:31:57  51  ,aud_g03
23:31:57  52  ,aud_g04
23:31:57  53  ,aud_g05
23:31:57  54  ,aud_g06
23:31:57  55  ,aud_g07
23:31:57  56  ,aud_g08
23:31:57  57  ,aud_g09
23:31:57  58  ,aud_g10
23:31:57  59  ,aud_g11
23:31:57  60  ,aud_g12
23:31:57  61  ,aud_g13
23:31:57  62  ,aud_g14
23:31:57  63  ,aud_g15
23:31:57  64  ,aud_g16
23:31:57  65  ,aud_g17
23:31:57  66  ,aud_g18
23:31:57  67  ,aud_g19
23:31:57  68  ,aud_g20
23:31:57  69  ,aud_g21
23:31:57  70  ,aud_g22
23:31:57  71  ,aud_g23
23:31:57  72  ,aud_g24
23:31:57  73  ,aud_g25
23:31:57  74  ,aud_g26
23:31:57  75  ,aud_g27
23:31:57  76  ,aud_g28
23:31:57  77  ,aud_g29
23:31:57  78  ,aud_g30
23:31:57  79  ,aud_g31
23:31:57  80  ,aud_g32
23:31:57  81  ,aud_g33
23:31:57  82  ,aud_g34
23:31:57  83  ,aud_g35
23:31:57  84  ,aud_g36
23:31:57  85  ,aud_g37
23:31:57  86  ,aud_g38
23:31:57  87  ,aud_g39
23:31:57  88  ,aud_g40
23:31:57  89  ,aud_g41
23:31:57  90  ,gbp_g00
23:31:57  91  ,gbp_g01
23:31:57  92  ,gbp_g02
23:31:57  93  ,gbp_g03
23:31:57  94  ,gbp_g04
23:31:57  95  ,gbp_g05
23:31:57  96  ,gbp_g06
23:31:57  97  ,gbp_g07
23:31:57  98  ,gbp_g08
23:31:57  99  ,gbp_g09
23:31:57 100  ,gbp_g10
23:31:57 101  ,gbp_g11
23:31:57 102  ,gbp_g12
23:31:57 103  ,gbp_g13
23:31:57 104  ,gbp_g14
23:31:57 105  ,gbp_g15
23:31:57 106  ,gbp_g16
23:31:57 107  ,gbp_g17
23:31:57 108  ,gbp_g18
23:31:57 109  ,gbp_g19
23:31:57 110  ,gbp_g20
23:31:57 111  ,gbp_g21
23:31:57 112  ,gbp_g22
23:31:57 113  ,gbp_g23
23:31:57 114  ,gbp_g24
23:31:57 115  ,gbp_g25
23:31:57 116  ,gbp_g26
23:31:57 117  ,gbp_g27
23:31:57 118  ,gbp_g28
23:31:57 119  ,gbp_g29
23:31:57 120  ,gbp_g30
23:31:57 121  ,gbp_g31
23:31:57 122  ,gbp_g32
23:31:57 123  ,gbp_g33
23:31:57 124  ,gbp_g34
23:31:57 125  ,gbp_g35
23:31:57 126  ,gbp_g36
23:31:57 127  ,gbp_g37
23:31:57 128  ,gbp_g38
23:31:57 129  ,gbp_g39
23:31:57 130  ,gbp_g40
23:31:57 131  ,gbp_g41
23:31:57 132  ,jpy_g00
23:31:57 133  ,jpy_g01
23:31:57 134  ,jpy_g02
23:31:57 135  ,jpy_g03
23:31:57 136  ,jpy_g04
23:31:57 137  ,jpy_g05
23:31:57 138  ,jpy_g06
23:31:57 139  ,jpy_g07
23:31:57 140  ,jpy_g08
23:31:57 141  ,jpy_g09
23:31:57 142  ,jpy_g10
23:31:57 143  ,jpy_g11
23:31:57 144  ,jpy_g12
23:31:57 145  ,jpy_g13
23:31:57 146  ,jpy_g14
23:31:57 147  ,jpy_g15
23:31:57 148  ,jpy_g16
23:31:57 149  ,jpy_g17
23:31:57 150  ,jpy_g18
23:31:57 151  ,jpy_g19
23:31:57 152  ,jpy_g20
23:31:57 153  ,jpy_g21
23:31:57 154  ,jpy_g22
23:31:57 155  ,jpy_g23
23:31:57 156  ,jpy_g24
23:31:57 157  ,jpy_g25
23:31:57 158  ,jpy_g26
23:31:57 159  ,jpy_g27
23:31:57 160  ,jpy_g28
23:31:57 161  ,jpy_g29
23:31:57 162  ,jpy_g30
23:31:57 163  ,jpy_g31
23:31:57 164  ,jpy_g32
23:31:57 165  ,jpy_g33
23:31:57 166  ,jpy_g34
23:31:57 167  ,jpy_g35
23:31:57 168  ,jpy_g36
23:31:57 169  ,jpy_g37
23:31:57 170  ,jpy_g38
23:31:57 171  ,jpy_g39
23:31:57 172  ,jpy_g40
23:31:57 173  ,jpy_g41
23:31:57 174  ,cad_g00
23:31:57 175  ,cad_g01
23:31:57 176  ,cad_g02
23:31:57 177  ,cad_g03
23:31:57 178  ,cad_g04
23:31:57 179  ,cad_g05
23:31:57 180  ,cad_g06
23:31:57 181  ,cad_g07
23:31:57 182  ,cad_g08
23:31:57 183  ,cad_g09
23:31:57 184  ,cad_g10
23:31:57 185  ,cad_g11
23:31:57 186  ,cad_g12
23:31:57 187  ,cad_g13
23:31:57 188  ,cad_g14
23:31:57 189  ,cad_g15
23:31:57 190  ,cad_g16
23:31:57 191  ,cad_g17
23:31:57 192  ,cad_g18
23:31:57 193  ,cad_g19
23:31:57 194  ,cad_g20
23:31:57 195  ,cad_g21
23:31:57 196  ,cad_g22
23:31:57 197  ,cad_g23
23:31:57 198  ,cad_g24
23:31:57 199  ,cad_g25
23:31:57 200  ,cad_g26
23:31:57 201  ,cad_g27
23:31:57 202  ,cad_g28
23:31:57 203  ,cad_g29
23:31:57 204  ,cad_g30
23:31:57 205  ,cad_g31
23:31:57 206  ,cad_g32
23:31:57 207  ,cad_g33
23:31:57 208  ,cad_g34
23:31:57 209  ,cad_g35
23:31:57 210  ,cad_g36
23:31:57 211  ,cad_g37
23:31:57 212  ,cad_g38
23:31:57 213  ,cad_g39
23:31:57 214  ,cad_g40
23:31:57 215  ,cad_g41
23:31:57 216  ,chf_g00
23:31:57 217  ,chf_g01
23:31:57 218  ,chf_g02
23:31:57 219  ,chf_g03
23:31:57 220  ,chf_g04
23:31:57 221  ,chf_g05
23:31:57 222  ,chf_g06
23:31:57 223  ,chf_g07
23:31:57 224  ,chf_g08
23:31:57 225  ,chf_g09
23:31:57 226  ,chf_g10
23:31:57 227  ,chf_g11
23:31:57 228  ,chf_g12
23:31:57 229  ,chf_g13
23:31:57 230  ,chf_g14
23:31:57 231  ,chf_g15
23:31:57 232  ,chf_g16
23:31:57 233  ,chf_g17
23:31:57 234  ,chf_g18
23:31:57 235  ,chf_g19
23:31:57 236  ,chf_g20
23:31:57 237  ,chf_g21
23:31:57 238  ,chf_g22
23:31:57 239  ,chf_g23
23:31:57 240  ,chf_g24
23:31:57 241  ,chf_g25
23:31:57 242  ,chf_g26
23:31:57 243  ,chf_g27
23:31:57 244  ,chf_g28
23:31:57 245  ,chf_g29
23:31:57 246  ,chf_g30
23:31:57 247  ,chf_g31
23:31:57 248  ,chf_g32
23:31:57 249  ,chf_g33
23:31:57 250  ,chf_g34
23:31:57 251  ,chf_g35
23:31:57 252  ,chf_g36
23:31:57 253  ,chf_g37
23:31:57 254  ,chf_g38
23:31:57 255  ,chf_g39
23:31:57 256  ,chf_g40
23:31:57 257  ,chf_g41
23:31:57 258  FROM aud_ms6 m
23:31:57 259  WHERE gattn IN('nup','up')
23:31:57 260  AND 1+m.ydate < '&1'||' '||'&2'
23:31:57 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'23:05:00'

View created.

Elapsed: 00:00:00.12
23:31:58 SQL> 
23:31:58 SQL> -- rpt
23:31:58 SQL> 
23:31:58 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12887
up	     6397

Elapsed: 00:00:00.04
23:31:58 SQL> 
23:31:58 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-28 23:00:00

Elapsed: 00:00:00.03
23:31:58 SQL> 
23:31:58 SQL> -- Now build model from bme and score sme
23:31:58 SQL> @score1gattn.sql
23:31:58 SQL> -- score1gattn.sql
23:31:58 SQL> 
23:31:58 SQL> -- Does the 1st SVM score
23:31:58 SQL> 
23:31:58 SQL> -- Fill up svmc_apply_prep
23:31:58 SQL> @score_gattn.sql
23:31:58 SQL> --
23:31:58 SQL> -- score_gattn.sql
23:31:58 SQL> --
23:31:58 SQL> 
23:31:58 SQL> -- usage: score_gattn.sql
23:31:58 SQL> 
23:31:58 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
23:31:58 SQL> 
23:31:58 SQL> DEFINE target	= 'gattn'
23:31:58 SQL> DEFINE model_name = 'forex14'
23:31:58 SQL> DEFINE bldtable	= 'bme'
23:31:58 SQL> DEFINE scoretable = 'sme'
23:31:58 SQL> DEFINE case_id	= 'prdate'
23:31:58 SQL> 
23:31:58 SQL> -- Define a variable to help me exclude some columns from some data mining calls
23:31:58 SQL> DEFINE exclude1 = "'&target','&case_id'"
23:31:58 SQL> 
23:31:58 SQL> -- Builds an SVM model using pl/sql.
23:31:58 SQL> 
23:31:58 SQL> -----------------------------------------------------------------------
23:31:58 SQL> --			    BUILD THE MODEL
23:31:58 SQL> -----------------------------------------------------------------------
23:31:58 SQL> 
23:31:58 SQL> -- Cleanup old build data preparation objects for repeat runs
23:31:58 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
23:31:58 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
23:31:58 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
23:31:58 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
23:31:58 SQL> 
23:31:58 SQL> 
23:31:58 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
23:31:58 SQL> --
23:31:58 SQL> -- DROP	TABLE svmc_settings ;
23:31:58 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
23:31:58 SQL> -- DELETE svmc_settings;
23:31:58 SQL> 
23:31:58 SQL> -- The default classification algorithm is Naive Bayes. So override
23:31:58 SQL> -- this choice to SVM using a settings table.
23:31:58 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
23:31:58 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
23:31:58 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
23:31:58 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
23:31:58 SQL> -- models.
23:31:58 SQL> --
23:31:58 SQL> 
23:31:58 SQL> -- Do this once and then comment it out.
23:31:58 SQL> -- That makes script go faster.
23:31:58 SQL> -- BEGIN
23:31:58 SQL> -- -- Populate settings table
23:31:58 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:31:58 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
23:31:58 SQL> --
23:31:58 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:31:58 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
23:31:58 SQL> --
23:31:58 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:31:58 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
23:31:58 SQL> --   COMMIT;
23:31:58 SQL> -- END;
23:31:58 SQL> -- /
23:31:58 SQL> 
23:31:58 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
23:31:58 SQL> 
23:31:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
23:31:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:31:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:31:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
23:31:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:31:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
23:31:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
23:31:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:31:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
23:31:58 SQL> 
23:31:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
23:31:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:31:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:31:58 SQL> 
23:31:58 SQL> --------------------------------
23:31:58 SQL> -- PREPARE BUILD (TRAINING) DATA
23:31:58 SQL> --
23:31:58 SQL> 
23:31:58 SQL> -- 1. Missing Value treatment for all Predictors and
23:31:58 SQL> -- 2. Outlier Treatment and
23:31:58 SQL> -- 3. Normalization are performed below.
23:31:58 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
23:31:58 SQL> --    normalized here.
23:31:58 SQL> 
23:31:58 SQL> BEGIN
23:31:58   2  	-- Perform missing value treatment for all predictors
23:31:58   3  	-- create miss tables
23:31:58   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
23:31:58   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
23:31:58   6  
23:31:58   7  	-- populate miss tables
23:31:58   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
23:31:58   9  	  miss_table_name => 'svmc_miss_num',
23:31:58  10  	  data_table_name => '&bldtable',
23:31:58  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:31:58  12  
23:31:58  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
23:31:58  14  	  miss_table_name => 'svmc_miss_cat',
23:31:58  15  	  data_table_name => '&bldtable',
23:31:58  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:31:58  17  
23:31:58  18  	-- xform input data to replace missing values
23:31:58  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:31:58  20  	  miss_table_name => 'svmc_miss_num',
23:31:58  21  	  data_table_name => '&bldtable',
23:31:58  22  	  xform_view_name => 'xformed_build_miss_num');
23:31:58  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:31:58  24  	  miss_table_name => 'svmc_miss_cat',
23:31:58  25  	  data_table_name => '&bldtable',
23:31:58  26  	  xform_view_name => 'xformed_build_miss_cat');
23:31:58  27  
23:31:58  28  	-- Perform outlier treatment.
23:31:58  29  	-- create clip table
23:31:58  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
23:31:58  31  
23:31:58  32  	-- populate clip table
23:31:58  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
23:31:58  34  	  clip_table_name => 'svmc_clip',
23:31:58  35  	  data_table_name => '&bldtable',
23:31:58  36  	  tail_frac	  => 0.025,
23:31:58  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:31:58  38  
23:31:58  39  	-- xform input data to winsorized data
23:31:58  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
23:31:58  41  	  clip_table_name => 'svmc_clip',
23:31:58  42  	  data_table_name => '&bldtable',
23:31:58  43  	  xform_view_name => 'svmc_winsor');
23:31:58  44  
23:31:58  45  	-- create normalization table
23:31:58  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
23:31:58  47  
23:31:58  48  	-- populate normalization table based on winsorized data
23:31:58  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
23:31:58  50  	  norm_table_name => 'svmc_norm',
23:31:58  51  	  data_table_name => 'svmc_winsor',
23:31:58  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:31:58  53  
23:31:58  54  	-- normalize the original data
23:31:58  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:31:58  56  	  norm_table_name => 'svmc_norm',
23:31:58  57  	  data_table_name => '&bldtable',
23:31:58  58  	  xform_view_name => 'svmc_build_prep');
23:31:58  59  END;
23:31:58  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.19
23:32:16 SQL> 
23:32:16 SQL> ---------------------
23:32:16 SQL> -- CREATE A NEW MODEL
23:32:16 SQL> --
23:32:16 SQL> -- Cleanup old model with the same name for repeat runs
23:32:16 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
23:32:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:32:16   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.95
23:32:17 SQL> 
23:32:17 SQL> -- Build a new SVM Model
23:32:17 SQL> BEGIN
23:32:17   2  	DBMS_DATA_MINING.CREATE_MODEL(
23:32:17   3  	  model_name	      => '&model_name',
23:32:17   4  	  mining_function     => dbms_data_mining.classification,
23:32:17   5  	  data_table_name     => 'svmc_build_prep',
23:32:17   6  	  case_id_column_name => '&case_id',
23:32:17   7  	  target_column_name  => '&target',
23:32:17   8  	  settings_table_name => 'svmc_settings');
23:32:17   9  END;
23:32:17  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.25
23:32:43 SQL> 
23:32:43 SQL> -----------------------------------------------------------------------
23:32:43 SQL> --			       APPLY/score THE MODEL
23:32:43 SQL> -----------------------------------------------------------------------
23:32:43 SQL> 
23:32:43 SQL> -- Cleanup old scoring data preparation objects for repeat runs
23:32:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
23:32:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:32:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:32:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
23:32:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:32:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:32:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
23:32:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:32:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:32:43 SQL> -----------------------
23:32:43 SQL> -- PREPARE SCORING DATA
23:32:43 SQL> --
23:32:43 SQL> -- If the data for model creation has been prepared, then the data
23:32:43 SQL> -- to be scored using the model must be prepared in the same manner
23:32:43 SQL> -- in order to obtain meaningful results.
23:32:43 SQL> --
23:32:43 SQL> -- 1. Missing Value treatment for all Predictors and
23:32:43 SQL> -- 2. Normalization
23:32:43 SQL> -- No outlier treatment will be performed during test and apply. The
23:32:43 SQL> -- normalization step is sufficient, since the normalization parameters
23:32:43 SQL> -- already capture the effects of outlier treatment done with build data.
23:32:43 SQL> --
23:32:43 SQL> BEGIN
23:32:43   2  	-- Xform Test data to replace missing values
23:32:43   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:32:43   4  	  miss_table_name => 'svmc_miss_num',
23:32:43   5  	  data_table_name => '&scoretable',
23:32:43   6  	  xform_view_name => 'xformed_apply_miss_num');
23:32:43   7  
23:32:43   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:32:43   9  	  miss_table_name => 'svmc_miss_cat',
23:32:43  10  	  data_table_name => '&scoretable',
23:32:43  11  	  xform_view_name => 'xformed_apply_miss_cat');
23:32:43  12  
23:32:43  13  	-- Normalize the data to be scored
23:32:43  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:32:43  15  	  norm_table_name => 'svmc_norm',
23:32:43  16  	  data_table_name => '&scoretable',
23:32:43  17  	  xform_view_name => 'svmc_apply_prep');
23:32:43  18  END;
23:32:43  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
23:32:45 SQL> 
23:32:45 SQL> -- Use same model_name used in score_gattn.sql
23:32:45 SQL> DEFINE model_name = 'forex14'
23:32:45 SQL> 
23:32:45 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
23:32:45 SQL> 
23:32:45 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
23:32:45   2  SELECT
23:32:45   3  prdate
23:32:45   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
23:32:45   5  ,sysdate
23:32:45   6  ,SUBSTR(prdate,1,3)pair
23:32:45   7  ,SUBSTR(prdate,4,19)ydate
23:32:45   8  FROM svmc_apply_prep
23:32:45   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
23:32:45 SQL> @aud_score1day_gattn.sql	2010-12-29 23:10:00
23:32:45 SQL> --
23:32:45 SQL> -- aud_score1day_gattn.sql
23:32:45 SQL> --
23:32:45 SQL> 
23:32:45 SQL> CREATE OR REPLACE VIEW sme AS
23:32:45   2  SELECT
23:32:45   3  'aud'||m.ydate prdate
23:32:45   4  ,NULL gattn
23:32:45   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:32:45   6  ,eur_g00
23:32:45   7  ,eur_g01
23:32:45   8  ,eur_g02
23:32:45   9  ,eur_g03
23:32:45  10  ,eur_g04
23:32:45  11  ,eur_g05
23:32:45  12  ,eur_g06
23:32:45  13  ,eur_g07
23:32:45  14  ,eur_g08
23:32:45  15  ,eur_g09
23:32:45  16  ,eur_g10
23:32:45  17  ,eur_g11
23:32:45  18  ,eur_g12
23:32:45  19  ,eur_g13
23:32:45  20  ,eur_g14
23:32:45  21  ,eur_g15
23:32:45  22  ,eur_g16
23:32:45  23  ,eur_g17
23:32:45  24  ,eur_g18
23:32:45  25  ,eur_g19
23:32:45  26  ,eur_g20
23:32:45  27  ,eur_g21
23:32:45  28  ,eur_g22
23:32:45  29  ,eur_g23
23:32:45  30  ,eur_g24
23:32:45  31  ,eur_g25
23:32:45  32  ,eur_g26
23:32:45  33  ,eur_g27
23:32:45  34  ,eur_g28
23:32:45  35  ,eur_g29
23:32:45  36  ,eur_g30
23:32:45  37  ,eur_g31
23:32:45  38  ,eur_g32
23:32:45  39  ,eur_g33
23:32:45  40  ,eur_g34
23:32:45  41  ,eur_g35
23:32:45  42  ,eur_g36
23:32:45  43  ,eur_g37
23:32:45  44  ,eur_g38
23:32:45  45  ,eur_g39
23:32:45  46  ,eur_g40
23:32:45  47  ,eur_g41
23:32:45  48  ,aud_g00
23:32:45  49  ,aud_g01
23:32:45  50  ,aud_g02
23:32:45  51  ,aud_g03
23:32:45  52  ,aud_g04
23:32:45  53  ,aud_g05
23:32:45  54  ,aud_g06
23:32:45  55  ,aud_g07
23:32:45  56  ,aud_g08
23:32:45  57  ,aud_g09
23:32:45  58  ,aud_g10
23:32:45  59  ,aud_g11
23:32:45  60  ,aud_g12
23:32:45  61  ,aud_g13
23:32:45  62  ,aud_g14
23:32:45  63  ,aud_g15
23:32:45  64  ,aud_g16
23:32:45  65  ,aud_g17
23:32:45  66  ,aud_g18
23:32:45  67  ,aud_g19
23:32:45  68  ,aud_g20
23:32:45  69  ,aud_g21
23:32:45  70  ,aud_g22
23:32:45  71  ,aud_g23
23:32:45  72  ,aud_g24
23:32:45  73  ,aud_g25
23:32:45  74  ,aud_g26
23:32:45  75  ,aud_g27
23:32:45  76  ,aud_g28
23:32:45  77  ,aud_g29
23:32:45  78  ,aud_g30
23:32:45  79  ,aud_g31
23:32:45  80  ,aud_g32
23:32:45  81  ,aud_g33
23:32:45  82  ,aud_g34
23:32:45  83  ,aud_g35
23:32:45  84  ,aud_g36
23:32:45  85  ,aud_g37
23:32:45  86  ,aud_g38
23:32:45  87  ,aud_g39
23:32:45  88  ,aud_g40
23:32:45  89  ,aud_g41
23:32:45  90  ,gbp_g00
23:32:45  91  ,gbp_g01
23:32:45  92  ,gbp_g02
23:32:45  93  ,gbp_g03
23:32:45  94  ,gbp_g04
23:32:45  95  ,gbp_g05
23:32:45  96  ,gbp_g06
23:32:45  97  ,gbp_g07
23:32:45  98  ,gbp_g08
23:32:45  99  ,gbp_g09
23:32:45 100  ,gbp_g10
23:32:45 101  ,gbp_g11
23:32:45 102  ,gbp_g12
23:32:45 103  ,gbp_g13
23:32:45 104  ,gbp_g14
23:32:45 105  ,gbp_g15
23:32:45 106  ,gbp_g16
23:32:45 107  ,gbp_g17
23:32:45 108  ,gbp_g18
23:32:45 109  ,gbp_g19
23:32:45 110  ,gbp_g20
23:32:45 111  ,gbp_g21
23:32:45 112  ,gbp_g22
23:32:45 113  ,gbp_g23
23:32:45 114  ,gbp_g24
23:32:45 115  ,gbp_g25
23:32:45 116  ,gbp_g26
23:32:45 117  ,gbp_g27
23:32:45 118  ,gbp_g28
23:32:45 119  ,gbp_g29
23:32:45 120  ,gbp_g30
23:32:45 121  ,gbp_g31
23:32:45 122  ,gbp_g32
23:32:45 123  ,gbp_g33
23:32:45 124  ,gbp_g34
23:32:45 125  ,gbp_g35
23:32:45 126  ,gbp_g36
23:32:45 127  ,gbp_g37
23:32:45 128  ,gbp_g38
23:32:45 129  ,gbp_g39
23:32:45 130  ,gbp_g40
23:32:45 131  ,gbp_g41
23:32:45 132  ,jpy_g00
23:32:45 133  ,jpy_g01
23:32:45 134  ,jpy_g02
23:32:45 135  ,jpy_g03
23:32:45 136  ,jpy_g04
23:32:45 137  ,jpy_g05
23:32:45 138  ,jpy_g06
23:32:45 139  ,jpy_g07
23:32:45 140  ,jpy_g08
23:32:45 141  ,jpy_g09
23:32:45 142  ,jpy_g10
23:32:45 143  ,jpy_g11
23:32:45 144  ,jpy_g12
23:32:45 145  ,jpy_g13
23:32:45 146  ,jpy_g14
23:32:45 147  ,jpy_g15
23:32:45 148  ,jpy_g16
23:32:45 149  ,jpy_g17
23:32:45 150  ,jpy_g18
23:32:45 151  ,jpy_g19
23:32:45 152  ,jpy_g20
23:32:45 153  ,jpy_g21
23:32:45 154  ,jpy_g22
23:32:45 155  ,jpy_g23
23:32:45 156  ,jpy_g24
23:32:45 157  ,jpy_g25
23:32:45 158  ,jpy_g26
23:32:45 159  ,jpy_g27
23:32:45 160  ,jpy_g28
23:32:45 161  ,jpy_g29
23:32:45 162  ,jpy_g30
23:32:45 163  ,jpy_g31
23:32:45 164  ,jpy_g32
23:32:45 165  ,jpy_g33
23:32:45 166  ,jpy_g34
23:32:45 167  ,jpy_g35
23:32:45 168  ,jpy_g36
23:32:45 169  ,jpy_g37
23:32:45 170  ,jpy_g38
23:32:45 171  ,jpy_g39
23:32:45 172  ,jpy_g40
23:32:45 173  ,jpy_g41
23:32:45 174  ,cad_g00
23:32:45 175  ,cad_g01
23:32:45 176  ,cad_g02
23:32:45 177  ,cad_g03
23:32:45 178  ,cad_g04
23:32:45 179  ,cad_g05
23:32:45 180  ,cad_g06
23:32:45 181  ,cad_g07
23:32:45 182  ,cad_g08
23:32:45 183  ,cad_g09
23:32:45 184  ,cad_g10
23:32:45 185  ,cad_g11
23:32:45 186  ,cad_g12
23:32:45 187  ,cad_g13
23:32:45 188  ,cad_g14
23:32:45 189  ,cad_g15
23:32:45 190  ,cad_g16
23:32:45 191  ,cad_g17
23:32:45 192  ,cad_g18
23:32:45 193  ,cad_g19
23:32:45 194  ,cad_g20
23:32:45 195  ,cad_g21
23:32:45 196  ,cad_g22
23:32:45 197  ,cad_g23
23:32:45 198  ,cad_g24
23:32:45 199  ,cad_g25
23:32:45 200  ,cad_g26
23:32:45 201  ,cad_g27
23:32:45 202  ,cad_g28
23:32:45 203  ,cad_g29
23:32:45 204  ,cad_g30
23:32:45 205  ,cad_g31
23:32:45 206  ,cad_g32
23:32:45 207  ,cad_g33
23:32:45 208  ,cad_g34
23:32:45 209  ,cad_g35
23:32:45 210  ,cad_g36
23:32:45 211  ,cad_g37
23:32:45 212  ,cad_g38
23:32:45 213  ,cad_g39
23:32:45 214  ,cad_g40
23:32:45 215  ,cad_g41
23:32:45 216  ,chf_g00
23:32:45 217  ,chf_g01
23:32:45 218  ,chf_g02
23:32:45 219  ,chf_g03
23:32:45 220  ,chf_g04
23:32:45 221  ,chf_g05
23:32:45 222  ,chf_g06
23:32:45 223  ,chf_g07
23:32:45 224  ,chf_g08
23:32:45 225  ,chf_g09
23:32:45 226  ,chf_g10
23:32:45 227  ,chf_g11
23:32:45 228  ,chf_g12
23:32:45 229  ,chf_g13
23:32:45 230  ,chf_g14
23:32:45 231  ,chf_g15
23:32:45 232  ,chf_g16
23:32:45 233  ,chf_g17
23:32:45 234  ,chf_g18
23:32:45 235  ,chf_g19
23:32:45 236  ,chf_g20
23:32:45 237  ,chf_g21
23:32:45 238  ,chf_g22
23:32:45 239  ,chf_g23
23:32:45 240  ,chf_g24
23:32:45 241  ,chf_g25
23:32:45 242  ,chf_g26
23:32:45 243  ,chf_g27
23:32:45 244  ,chf_g28
23:32:45 245  ,chf_g29
23:32:45 246  ,chf_g30
23:32:45 247  ,chf_g31
23:32:45 248  ,chf_g32
23:32:45 249  ,chf_g33
23:32:45 250  ,chf_g34
23:32:45 251  ,chf_g35
23:32:45 252  ,chf_g36
23:32:45 253  ,chf_g37
23:32:45 254  ,chf_g38
23:32:45 255  ,chf_g39
23:32:45 256  ,chf_g40
23:32:45 257  ,chf_g41
23:32:45 258  FROM aud_ms6 m
23:32:45 259  WHERE m.ydate = '&1'||' '||'&2'
23:32:45 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'23:10:00'

View created.

Elapsed: 00:00:00.12
23:32:45 SQL> 
23:32:45 SQL> -- rpt
23:32:45 SQL> -- We should see just 1 row:
23:32:45 SQL> 
23:32:45 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
23:32:45 SQL> 
23:32:45 SQL> -- Build the model:
23:32:45 SQL> CREATE OR REPLACE VIEW bme AS
23:32:45   2  SELECT
23:32:45   3  'aud'||m.ydate prdate
23:32:45   4  ,gattn
23:32:45   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:32:45   6  ,eur_g00
23:32:45   7  ,eur_g01
23:32:45   8  ,eur_g02
23:32:45   9  ,eur_g03
23:32:45  10  ,eur_g04
23:32:45  11  ,eur_g05
23:32:45  12  ,eur_g06
23:32:45  13  ,eur_g07
23:32:45  14  ,eur_g08
23:32:45  15  ,eur_g09
23:32:45  16  ,eur_g10
23:32:45  17  ,eur_g11
23:32:45  18  ,eur_g12
23:32:45  19  ,eur_g13
23:32:45  20  ,eur_g14
23:32:45  21  ,eur_g15
23:32:45  22  ,eur_g16
23:32:45  23  ,eur_g17
23:32:45  24  ,eur_g18
23:32:45  25  ,eur_g19
23:32:45  26  ,eur_g20
23:32:45  27  ,eur_g21
23:32:45  28  ,eur_g22
23:32:45  29  ,eur_g23
23:32:45  30  ,eur_g24
23:32:45  31  ,eur_g25
23:32:45  32  ,eur_g26
23:32:45  33  ,eur_g27
23:32:45  34  ,eur_g28
23:32:45  35  ,eur_g29
23:32:45  36  ,eur_g30
23:32:45  37  ,eur_g31
23:32:45  38  ,eur_g32
23:32:45  39  ,eur_g33
23:32:45  40  ,eur_g34
23:32:45  41  ,eur_g35
23:32:45  42  ,eur_g36
23:32:45  43  ,eur_g37
23:32:45  44  ,eur_g38
23:32:45  45  ,eur_g39
23:32:45  46  ,eur_g40
23:32:45  47  ,eur_g41
23:32:45  48  ,aud_g00
23:32:45  49  ,aud_g01
23:32:45  50  ,aud_g02
23:32:45  51  ,aud_g03
23:32:45  52  ,aud_g04
23:32:45  53  ,aud_g05
23:32:45  54  ,aud_g06
23:32:45  55  ,aud_g07
23:32:45  56  ,aud_g08
23:32:45  57  ,aud_g09
23:32:45  58  ,aud_g10
23:32:45  59  ,aud_g11
23:32:45  60  ,aud_g12
23:32:45  61  ,aud_g13
23:32:45  62  ,aud_g14
23:32:45  63  ,aud_g15
23:32:45  64  ,aud_g16
23:32:45  65  ,aud_g17
23:32:45  66  ,aud_g18
23:32:45  67  ,aud_g19
23:32:45  68  ,aud_g20
23:32:45  69  ,aud_g21
23:32:45  70  ,aud_g22
23:32:45  71  ,aud_g23
23:32:45  72  ,aud_g24
23:32:45  73  ,aud_g25
23:32:45  74  ,aud_g26
23:32:45  75  ,aud_g27
23:32:45  76  ,aud_g28
23:32:45  77  ,aud_g29
23:32:45  78  ,aud_g30
23:32:45  79  ,aud_g31
23:32:45  80  ,aud_g32
23:32:45  81  ,aud_g33
23:32:45  82  ,aud_g34
23:32:45  83  ,aud_g35
23:32:45  84  ,aud_g36
23:32:45  85  ,aud_g37
23:32:45  86  ,aud_g38
23:32:45  87  ,aud_g39
23:32:45  88  ,aud_g40
23:32:45  89  ,aud_g41
23:32:45  90  ,gbp_g00
23:32:45  91  ,gbp_g01
23:32:45  92  ,gbp_g02
23:32:45  93  ,gbp_g03
23:32:45  94  ,gbp_g04
23:32:45  95  ,gbp_g05
23:32:45  96  ,gbp_g06
23:32:45  97  ,gbp_g07
23:32:45  98  ,gbp_g08
23:32:45  99  ,gbp_g09
23:32:45 100  ,gbp_g10
23:32:45 101  ,gbp_g11
23:32:45 102  ,gbp_g12
23:32:45 103  ,gbp_g13
23:32:45 104  ,gbp_g14
23:32:45 105  ,gbp_g15
23:32:45 106  ,gbp_g16
23:32:45 107  ,gbp_g17
23:32:45 108  ,gbp_g18
23:32:45 109  ,gbp_g19
23:32:45 110  ,gbp_g20
23:32:45 111  ,gbp_g21
23:32:45 112  ,gbp_g22
23:32:45 113  ,gbp_g23
23:32:45 114  ,gbp_g24
23:32:45 115  ,gbp_g25
23:32:45 116  ,gbp_g26
23:32:45 117  ,gbp_g27
23:32:45 118  ,gbp_g28
23:32:45 119  ,gbp_g29
23:32:45 120  ,gbp_g30
23:32:45 121  ,gbp_g31
23:32:45 122  ,gbp_g32
23:32:45 123  ,gbp_g33
23:32:45 124  ,gbp_g34
23:32:45 125  ,gbp_g35
23:32:45 126  ,gbp_g36
23:32:45 127  ,gbp_g37
23:32:45 128  ,gbp_g38
23:32:45 129  ,gbp_g39
23:32:45 130  ,gbp_g40
23:32:45 131  ,gbp_g41
23:32:45 132  ,jpy_g00
23:32:45 133  ,jpy_g01
23:32:45 134  ,jpy_g02
23:32:45 135  ,jpy_g03
23:32:45 136  ,jpy_g04
23:32:45 137  ,jpy_g05
23:32:45 138  ,jpy_g06
23:32:45 139  ,jpy_g07
23:32:45 140  ,jpy_g08
23:32:45 141  ,jpy_g09
23:32:45 142  ,jpy_g10
23:32:45 143  ,jpy_g11
23:32:45 144  ,jpy_g12
23:32:45 145  ,jpy_g13
23:32:45 146  ,jpy_g14
23:32:45 147  ,jpy_g15
23:32:45 148  ,jpy_g16
23:32:45 149  ,jpy_g17
23:32:45 150  ,jpy_g18
23:32:45 151  ,jpy_g19
23:32:45 152  ,jpy_g20
23:32:45 153  ,jpy_g21
23:32:45 154  ,jpy_g22
23:32:45 155  ,jpy_g23
23:32:45 156  ,jpy_g24
23:32:45 157  ,jpy_g25
23:32:45 158  ,jpy_g26
23:32:45 159  ,jpy_g27
23:32:45 160  ,jpy_g28
23:32:45 161  ,jpy_g29
23:32:45 162  ,jpy_g30
23:32:45 163  ,jpy_g31
23:32:45 164  ,jpy_g32
23:32:45 165  ,jpy_g33
23:32:45 166  ,jpy_g34
23:32:45 167  ,jpy_g35
23:32:45 168  ,jpy_g36
23:32:45 169  ,jpy_g37
23:32:45 170  ,jpy_g38
23:32:45 171  ,jpy_g39
23:32:45 172  ,jpy_g40
23:32:45 173  ,jpy_g41
23:32:45 174  ,cad_g00
23:32:45 175  ,cad_g01
23:32:45 176  ,cad_g02
23:32:45 177  ,cad_g03
23:32:45 178  ,cad_g04
23:32:45 179  ,cad_g05
23:32:45 180  ,cad_g06
23:32:45 181  ,cad_g07
23:32:45 182  ,cad_g08
23:32:45 183  ,cad_g09
23:32:45 184  ,cad_g10
23:32:45 185  ,cad_g11
23:32:45 186  ,cad_g12
23:32:45 187  ,cad_g13
23:32:45 188  ,cad_g14
23:32:45 189  ,cad_g15
23:32:45 190  ,cad_g16
23:32:45 191  ,cad_g17
23:32:45 192  ,cad_g18
23:32:45 193  ,cad_g19
23:32:45 194  ,cad_g20
23:32:45 195  ,cad_g21
23:32:45 196  ,cad_g22
23:32:45 197  ,cad_g23
23:32:45 198  ,cad_g24
23:32:45 199  ,cad_g25
23:32:45 200  ,cad_g26
23:32:45 201  ,cad_g27
23:32:45 202  ,cad_g28
23:32:45 203  ,cad_g29
23:32:45 204  ,cad_g30
23:32:45 205  ,cad_g31
23:32:45 206  ,cad_g32
23:32:45 207  ,cad_g33
23:32:45 208  ,cad_g34
23:32:45 209  ,cad_g35
23:32:45 210  ,cad_g36
23:32:45 211  ,cad_g37
23:32:45 212  ,cad_g38
23:32:45 213  ,cad_g39
23:32:45 214  ,cad_g40
23:32:45 215  ,cad_g41
23:32:45 216  ,chf_g00
23:32:45 217  ,chf_g01
23:32:45 218  ,chf_g02
23:32:45 219  ,chf_g03
23:32:45 220  ,chf_g04
23:32:45 221  ,chf_g05
23:32:45 222  ,chf_g06
23:32:45 223  ,chf_g07
23:32:45 224  ,chf_g08
23:32:45 225  ,chf_g09
23:32:45 226  ,chf_g10
23:32:45 227  ,chf_g11
23:32:45 228  ,chf_g12
23:32:45 229  ,chf_g13
23:32:45 230  ,chf_g14
23:32:45 231  ,chf_g15
23:32:45 232  ,chf_g16
23:32:45 233  ,chf_g17
23:32:45 234  ,chf_g18
23:32:45 235  ,chf_g19
23:32:45 236  ,chf_g20
23:32:45 237  ,chf_g21
23:32:45 238  ,chf_g22
23:32:45 239  ,chf_g23
23:32:45 240  ,chf_g24
23:32:45 241  ,chf_g25
23:32:45 242  ,chf_g26
23:32:45 243  ,chf_g27
23:32:45 244  ,chf_g28
23:32:45 245  ,chf_g29
23:32:45 246  ,chf_g30
23:32:45 247  ,chf_g31
23:32:45 248  ,chf_g32
23:32:45 249  ,chf_g33
23:32:45 250  ,chf_g34
23:32:45 251  ,chf_g35
23:32:45 252  ,chf_g36
23:32:45 253  ,chf_g37
23:32:45 254  ,chf_g38
23:32:45 255  ,chf_g39
23:32:45 256  ,chf_g40
23:32:45 257  ,chf_g41
23:32:45 258  FROM aud_ms6 m
23:32:45 259  WHERE gattn IN('nup','up')
23:32:45 260  AND 1+m.ydate < '&1'||' '||'&2'
23:32:45 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'23:10:00'

View created.

Elapsed: 00:00:00.13
23:32:45 SQL> 
23:32:45 SQL> -- rpt
23:32:45 SQL> 
23:32:45 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12888
up	     6397

Elapsed: 00:00:00.03
23:32:45 SQL> 
23:32:45 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-28 23:05:00

Elapsed: 00:00:00.03
23:32:45 SQL> 
23:32:45 SQL> -- Now build model from bme and score sme
23:32:45 SQL> @score1gattn.sql
23:32:45 SQL> -- score1gattn.sql
23:32:45 SQL> 
23:32:45 SQL> -- Does the 1st SVM score
23:32:45 SQL> 
23:32:45 SQL> -- Fill up svmc_apply_prep
23:32:45 SQL> @score_gattn.sql
23:32:45 SQL> --
23:32:45 SQL> -- score_gattn.sql
23:32:45 SQL> --
23:32:45 SQL> 
23:32:45 SQL> -- usage: score_gattn.sql
23:32:45 SQL> 
23:32:45 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
23:32:45 SQL> 
23:32:45 SQL> DEFINE target	= 'gattn'
23:32:45 SQL> DEFINE model_name = 'forex14'
23:32:45 SQL> DEFINE bldtable	= 'bme'
23:32:45 SQL> DEFINE scoretable = 'sme'
23:32:45 SQL> DEFINE case_id	= 'prdate'
23:32:45 SQL> 
23:32:45 SQL> -- Define a variable to help me exclude some columns from some data mining calls
23:32:45 SQL> DEFINE exclude1 = "'&target','&case_id'"
23:32:45 SQL> 
23:32:45 SQL> -- Builds an SVM model using pl/sql.
23:32:45 SQL> 
23:32:45 SQL> -----------------------------------------------------------------------
23:32:45 SQL> --			    BUILD THE MODEL
23:32:45 SQL> -----------------------------------------------------------------------
23:32:45 SQL> 
23:32:45 SQL> -- Cleanup old build data preparation objects for repeat runs
23:32:45 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
23:32:45 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
23:32:45 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
23:32:45 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
23:32:45 SQL> 
23:32:45 SQL> 
23:32:45 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
23:32:45 SQL> --
23:32:45 SQL> -- DROP	TABLE svmc_settings ;
23:32:45 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
23:32:45 SQL> -- DELETE svmc_settings;
23:32:45 SQL> 
23:32:45 SQL> -- The default classification algorithm is Naive Bayes. So override
23:32:45 SQL> -- this choice to SVM using a settings table.
23:32:45 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
23:32:45 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
23:32:45 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
23:32:45 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
23:32:45 SQL> -- models.
23:32:45 SQL> --
23:32:45 SQL> 
23:32:45 SQL> -- Do this once and then comment it out.
23:32:45 SQL> -- That makes script go faster.
23:32:45 SQL> -- BEGIN
23:32:45 SQL> -- -- Populate settings table
23:32:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:32:45 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
23:32:45 SQL> --
23:32:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:32:45 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
23:32:45 SQL> --
23:32:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:32:45 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
23:32:45 SQL> --   COMMIT;
23:32:45 SQL> -- END;
23:32:45 SQL> -- /
23:32:45 SQL> 
23:32:45 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
23:32:45 SQL> 
23:32:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
23:32:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:32:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:32:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
23:32:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:32:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:32:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
23:32:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:32:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:32:45 SQL> 
23:32:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
23:32:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:32:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:32:45 SQL> 
23:32:45 SQL> --------------------------------
23:32:45 SQL> -- PREPARE BUILD (TRAINING) DATA
23:32:45 SQL> --
23:32:45 SQL> 
23:32:45 SQL> -- 1. Missing Value treatment for all Predictors and
23:32:45 SQL> -- 2. Outlier Treatment and
23:32:45 SQL> -- 3. Normalization are performed below.
23:32:45 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
23:32:45 SQL> --    normalized here.
23:32:45 SQL> 
23:32:45 SQL> BEGIN
23:32:45   2  	-- Perform missing value treatment for all predictors
23:32:45   3  	-- create miss tables
23:32:45   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
23:32:45   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
23:32:45   6  
23:32:45   7  	-- populate miss tables
23:32:45   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
23:32:45   9  	  miss_table_name => 'svmc_miss_num',
23:32:45  10  	  data_table_name => '&bldtable',
23:32:45  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:32:45  12  
23:32:45  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
23:32:45  14  	  miss_table_name => 'svmc_miss_cat',
23:32:45  15  	  data_table_name => '&bldtable',
23:32:45  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:32:45  17  
23:32:45  18  	-- xform input data to replace missing values
23:32:45  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:32:45  20  	  miss_table_name => 'svmc_miss_num',
23:32:45  21  	  data_table_name => '&bldtable',
23:32:45  22  	  xform_view_name => 'xformed_build_miss_num');
23:32:45  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:32:45  24  	  miss_table_name => 'svmc_miss_cat',
23:32:45  25  	  data_table_name => '&bldtable',
23:32:45  26  	  xform_view_name => 'xformed_build_miss_cat');
23:32:45  27  
23:32:45  28  	-- Perform outlier treatment.
23:32:45  29  	-- create clip table
23:32:45  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
23:32:45  31  
23:32:45  32  	-- populate clip table
23:32:45  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
23:32:45  34  	  clip_table_name => 'svmc_clip',
23:32:45  35  	  data_table_name => '&bldtable',
23:32:45  36  	  tail_frac	  => 0.025,
23:32:45  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:32:45  38  
23:32:45  39  	-- xform input data to winsorized data
23:32:45  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
23:32:45  41  	  clip_table_name => 'svmc_clip',
23:32:45  42  	  data_table_name => '&bldtable',
23:32:45  43  	  xform_view_name => 'svmc_winsor');
23:32:45  44  
23:32:45  45  	-- create normalization table
23:32:45  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
23:32:45  47  
23:32:45  48  	-- populate normalization table based on winsorized data
23:32:45  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
23:32:45  50  	  norm_table_name => 'svmc_norm',
23:32:45  51  	  data_table_name => 'svmc_winsor',
23:32:45  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:32:45  53  
23:32:45  54  	-- normalize the original data
23:32:45  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:32:45  56  	  norm_table_name => 'svmc_norm',
23:32:45  57  	  data_table_name => '&bldtable',
23:32:45  58  	  xform_view_name => 'svmc_build_prep');
23:32:45  59  END;
23:32:45  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.83
23:33:03 SQL> 
23:33:03 SQL> ---------------------
23:33:03 SQL> -- CREATE A NEW MODEL
23:33:03 SQL> --
23:33:03 SQL> -- Cleanup old model with the same name for repeat runs
23:33:03 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
23:33:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:33:03   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.96
23:33:04 SQL> 
23:33:04 SQL> -- Build a new SVM Model
23:33:04 SQL> BEGIN
23:33:04   2  	DBMS_DATA_MINING.CREATE_MODEL(
23:33:04   3  	  model_name	      => '&model_name',
23:33:04   4  	  mining_function     => dbms_data_mining.classification,
23:33:04   5  	  data_table_name     => 'svmc_build_prep',
23:33:04   6  	  case_id_column_name => '&case_id',
23:33:04   7  	  target_column_name  => '&target',
23:33:04   8  	  settings_table_name => 'svmc_settings');
23:33:04   9  END;
23:33:04  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.27
23:33:31 SQL> 
23:33:31 SQL> -----------------------------------------------------------------------
23:33:31 SQL> --			       APPLY/score THE MODEL
23:33:31 SQL> -----------------------------------------------------------------------
23:33:31 SQL> 
23:33:31 SQL> -- Cleanup old scoring data preparation objects for repeat runs
23:33:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
23:33:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:33:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:33:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
23:33:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:33:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:33:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
23:33:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:33:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:33:31 SQL> -----------------------
23:33:31 SQL> -- PREPARE SCORING DATA
23:33:31 SQL> --
23:33:31 SQL> -- If the data for model creation has been prepared, then the data
23:33:31 SQL> -- to be scored using the model must be prepared in the same manner
23:33:31 SQL> -- in order to obtain meaningful results.
23:33:31 SQL> --
23:33:31 SQL> -- 1. Missing Value treatment for all Predictors and
23:33:31 SQL> -- 2. Normalization
23:33:31 SQL> -- No outlier treatment will be performed during test and apply. The
23:33:31 SQL> -- normalization step is sufficient, since the normalization parameters
23:33:31 SQL> -- already capture the effects of outlier treatment done with build data.
23:33:31 SQL> --
23:33:31 SQL> BEGIN
23:33:31   2  	-- Xform Test data to replace missing values
23:33:31   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:33:31   4  	  miss_table_name => 'svmc_miss_num',
23:33:31   5  	  data_table_name => '&scoretable',
23:33:31   6  	  xform_view_name => 'xformed_apply_miss_num');
23:33:31   7  
23:33:31   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:33:31   9  	  miss_table_name => 'svmc_miss_cat',
23:33:31  10  	  data_table_name => '&scoretable',
23:33:31  11  	  xform_view_name => 'xformed_apply_miss_cat');
23:33:31  12  
23:33:31  13  	-- Normalize the data to be scored
23:33:31  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:33:31  15  	  norm_table_name => 'svmc_norm',
23:33:31  16  	  data_table_name => '&scoretable',
23:33:31  17  	  xform_view_name => 'svmc_apply_prep');
23:33:31  18  END;
23:33:31  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
23:33:32 SQL> 
23:33:32 SQL> -- Use same model_name used in score_gattn.sql
23:33:32 SQL> DEFINE model_name = 'forex14'
23:33:32 SQL> 
23:33:32 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
23:33:32 SQL> 
23:33:32 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
23:33:32   2  SELECT
23:33:32   3  prdate
23:33:32   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
23:33:32   5  ,sysdate
23:33:32   6  ,SUBSTR(prdate,1,3)pair
23:33:32   7  ,SUBSTR(prdate,4,19)ydate
23:33:32   8  FROM svmc_apply_prep
23:33:32   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
23:33:32 SQL> @aud_score1day_gattn.sql	2010-12-29 23:15:00
23:33:32 SQL> --
23:33:32 SQL> -- aud_score1day_gattn.sql
23:33:32 SQL> --
23:33:32 SQL> 
23:33:32 SQL> CREATE OR REPLACE VIEW sme AS
23:33:32   2  SELECT
23:33:32   3  'aud'||m.ydate prdate
23:33:32   4  ,NULL gattn
23:33:32   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:33:32   6  ,eur_g00
23:33:32   7  ,eur_g01
23:33:32   8  ,eur_g02
23:33:32   9  ,eur_g03
23:33:32  10  ,eur_g04
23:33:32  11  ,eur_g05
23:33:32  12  ,eur_g06
23:33:32  13  ,eur_g07
23:33:32  14  ,eur_g08
23:33:32  15  ,eur_g09
23:33:32  16  ,eur_g10
23:33:32  17  ,eur_g11
23:33:32  18  ,eur_g12
23:33:32  19  ,eur_g13
23:33:32  20  ,eur_g14
23:33:32  21  ,eur_g15
23:33:32  22  ,eur_g16
23:33:32  23  ,eur_g17
23:33:32  24  ,eur_g18
23:33:32  25  ,eur_g19
23:33:32  26  ,eur_g20
23:33:32  27  ,eur_g21
23:33:32  28  ,eur_g22
23:33:32  29  ,eur_g23
23:33:32  30  ,eur_g24
23:33:32  31  ,eur_g25
23:33:32  32  ,eur_g26
23:33:32  33  ,eur_g27
23:33:32  34  ,eur_g28
23:33:32  35  ,eur_g29
23:33:32  36  ,eur_g30
23:33:32  37  ,eur_g31
23:33:32  38  ,eur_g32
23:33:32  39  ,eur_g33
23:33:32  40  ,eur_g34
23:33:32  41  ,eur_g35
23:33:32  42  ,eur_g36
23:33:32  43  ,eur_g37
23:33:32  44  ,eur_g38
23:33:32  45  ,eur_g39
23:33:32  46  ,eur_g40
23:33:32  47  ,eur_g41
23:33:32  48  ,aud_g00
23:33:32  49  ,aud_g01
23:33:32  50  ,aud_g02
23:33:32  51  ,aud_g03
23:33:32  52  ,aud_g04
23:33:32  53  ,aud_g05
23:33:32  54  ,aud_g06
23:33:32  55  ,aud_g07
23:33:32  56  ,aud_g08
23:33:32  57  ,aud_g09
23:33:32  58  ,aud_g10
23:33:32  59  ,aud_g11
23:33:32  60  ,aud_g12
23:33:32  61  ,aud_g13
23:33:32  62  ,aud_g14
23:33:32  63  ,aud_g15
23:33:32  64  ,aud_g16
23:33:32  65  ,aud_g17
23:33:32  66  ,aud_g18
23:33:32  67  ,aud_g19
23:33:32  68  ,aud_g20
23:33:32  69  ,aud_g21
23:33:32  70  ,aud_g22
23:33:32  71  ,aud_g23
23:33:32  72  ,aud_g24
23:33:32  73  ,aud_g25
23:33:32  74  ,aud_g26
23:33:32  75  ,aud_g27
23:33:32  76  ,aud_g28
23:33:32  77  ,aud_g29
23:33:32  78  ,aud_g30
23:33:32  79  ,aud_g31
23:33:32  80  ,aud_g32
23:33:32  81  ,aud_g33
23:33:32  82  ,aud_g34
23:33:32  83  ,aud_g35
23:33:32  84  ,aud_g36
23:33:32  85  ,aud_g37
23:33:32  86  ,aud_g38
23:33:32  87  ,aud_g39
23:33:32  88  ,aud_g40
23:33:32  89  ,aud_g41
23:33:32  90  ,gbp_g00
23:33:32  91  ,gbp_g01
23:33:32  92  ,gbp_g02
23:33:32  93  ,gbp_g03
23:33:32  94  ,gbp_g04
23:33:32  95  ,gbp_g05
23:33:32  96  ,gbp_g06
23:33:32  97  ,gbp_g07
23:33:32  98  ,gbp_g08
23:33:32  99  ,gbp_g09
23:33:32 100  ,gbp_g10
23:33:32 101  ,gbp_g11
23:33:32 102  ,gbp_g12
23:33:32 103  ,gbp_g13
23:33:32 104  ,gbp_g14
23:33:32 105  ,gbp_g15
23:33:32 106  ,gbp_g16
23:33:32 107  ,gbp_g17
23:33:32 108  ,gbp_g18
23:33:32 109  ,gbp_g19
23:33:32 110  ,gbp_g20
23:33:32 111  ,gbp_g21
23:33:32 112  ,gbp_g22
23:33:32 113  ,gbp_g23
23:33:32 114  ,gbp_g24
23:33:32 115  ,gbp_g25
23:33:32 116  ,gbp_g26
23:33:32 117  ,gbp_g27
23:33:32 118  ,gbp_g28
23:33:32 119  ,gbp_g29
23:33:32 120  ,gbp_g30
23:33:32 121  ,gbp_g31
23:33:32 122  ,gbp_g32
23:33:32 123  ,gbp_g33
23:33:32 124  ,gbp_g34
23:33:32 125  ,gbp_g35
23:33:32 126  ,gbp_g36
23:33:32 127  ,gbp_g37
23:33:32 128  ,gbp_g38
23:33:32 129  ,gbp_g39
23:33:32 130  ,gbp_g40
23:33:32 131  ,gbp_g41
23:33:32 132  ,jpy_g00
23:33:32 133  ,jpy_g01
23:33:32 134  ,jpy_g02
23:33:32 135  ,jpy_g03
23:33:32 136  ,jpy_g04
23:33:32 137  ,jpy_g05
23:33:32 138  ,jpy_g06
23:33:32 139  ,jpy_g07
23:33:32 140  ,jpy_g08
23:33:32 141  ,jpy_g09
23:33:32 142  ,jpy_g10
23:33:32 143  ,jpy_g11
23:33:32 144  ,jpy_g12
23:33:32 145  ,jpy_g13
23:33:32 146  ,jpy_g14
23:33:32 147  ,jpy_g15
23:33:32 148  ,jpy_g16
23:33:32 149  ,jpy_g17
23:33:32 150  ,jpy_g18
23:33:32 151  ,jpy_g19
23:33:32 152  ,jpy_g20
23:33:32 153  ,jpy_g21
23:33:32 154  ,jpy_g22
23:33:32 155  ,jpy_g23
23:33:32 156  ,jpy_g24
23:33:32 157  ,jpy_g25
23:33:32 158  ,jpy_g26
23:33:32 159  ,jpy_g27
23:33:32 160  ,jpy_g28
23:33:32 161  ,jpy_g29
23:33:32 162  ,jpy_g30
23:33:32 163  ,jpy_g31
23:33:32 164  ,jpy_g32
23:33:32 165  ,jpy_g33
23:33:32 166  ,jpy_g34
23:33:32 167  ,jpy_g35
23:33:32 168  ,jpy_g36
23:33:32 169  ,jpy_g37
23:33:32 170  ,jpy_g38
23:33:32 171  ,jpy_g39
23:33:32 172  ,jpy_g40
23:33:32 173  ,jpy_g41
23:33:32 174  ,cad_g00
23:33:32 175  ,cad_g01
23:33:32 176  ,cad_g02
23:33:32 177  ,cad_g03
23:33:32 178  ,cad_g04
23:33:32 179  ,cad_g05
23:33:32 180  ,cad_g06
23:33:32 181  ,cad_g07
23:33:32 182  ,cad_g08
23:33:32 183  ,cad_g09
23:33:32 184  ,cad_g10
23:33:32 185  ,cad_g11
23:33:32 186  ,cad_g12
23:33:32 187  ,cad_g13
23:33:32 188  ,cad_g14
23:33:32 189  ,cad_g15
23:33:32 190  ,cad_g16
23:33:32 191  ,cad_g17
23:33:32 192  ,cad_g18
23:33:32 193  ,cad_g19
23:33:32 194  ,cad_g20
23:33:32 195  ,cad_g21
23:33:32 196  ,cad_g22
23:33:32 197  ,cad_g23
23:33:32 198  ,cad_g24
23:33:32 199  ,cad_g25
23:33:32 200  ,cad_g26
23:33:32 201  ,cad_g27
23:33:32 202  ,cad_g28
23:33:32 203  ,cad_g29
23:33:32 204  ,cad_g30
23:33:32 205  ,cad_g31
23:33:32 206  ,cad_g32
23:33:32 207  ,cad_g33
23:33:32 208  ,cad_g34
23:33:32 209  ,cad_g35
23:33:32 210  ,cad_g36
23:33:32 211  ,cad_g37
23:33:32 212  ,cad_g38
23:33:32 213  ,cad_g39
23:33:32 214  ,cad_g40
23:33:32 215  ,cad_g41
23:33:32 216  ,chf_g00
23:33:32 217  ,chf_g01
23:33:32 218  ,chf_g02
23:33:32 219  ,chf_g03
23:33:32 220  ,chf_g04
23:33:32 221  ,chf_g05
23:33:32 222  ,chf_g06
23:33:32 223  ,chf_g07
23:33:32 224  ,chf_g08
23:33:32 225  ,chf_g09
23:33:32 226  ,chf_g10
23:33:32 227  ,chf_g11
23:33:32 228  ,chf_g12
23:33:32 229  ,chf_g13
23:33:32 230  ,chf_g14
23:33:32 231  ,chf_g15
23:33:32 232  ,chf_g16
23:33:32 233  ,chf_g17
23:33:32 234  ,chf_g18
23:33:32 235  ,chf_g19
23:33:32 236  ,chf_g20
23:33:32 237  ,chf_g21
23:33:32 238  ,chf_g22
23:33:32 239  ,chf_g23
23:33:32 240  ,chf_g24
23:33:32 241  ,chf_g25
23:33:32 242  ,chf_g26
23:33:32 243  ,chf_g27
23:33:32 244  ,chf_g28
23:33:32 245  ,chf_g29
23:33:32 246  ,chf_g30
23:33:32 247  ,chf_g31
23:33:32 248  ,chf_g32
23:33:32 249  ,chf_g33
23:33:32 250  ,chf_g34
23:33:32 251  ,chf_g35
23:33:32 252  ,chf_g36
23:33:32 253  ,chf_g37
23:33:32 254  ,chf_g38
23:33:32 255  ,chf_g39
23:33:32 256  ,chf_g40
23:33:32 257  ,chf_g41
23:33:32 258  FROM aud_ms6 m
23:33:32 259  WHERE m.ydate = '&1'||' '||'&2'
23:33:32 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'23:15:00'

View created.

Elapsed: 00:00:00.13
23:33:32 SQL> 
23:33:32 SQL> -- rpt
23:33:32 SQL> -- We should see just 1 row:
23:33:32 SQL> 
23:33:32 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
23:33:32 SQL> 
23:33:32 SQL> -- Build the model:
23:33:32 SQL> CREATE OR REPLACE VIEW bme AS
23:33:32   2  SELECT
23:33:32   3  'aud'||m.ydate prdate
23:33:32   4  ,gattn
23:33:32   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:33:32   6  ,eur_g00
23:33:32   7  ,eur_g01
23:33:32   8  ,eur_g02
23:33:32   9  ,eur_g03
23:33:32  10  ,eur_g04
23:33:32  11  ,eur_g05
23:33:32  12  ,eur_g06
23:33:32  13  ,eur_g07
23:33:32  14  ,eur_g08
23:33:32  15  ,eur_g09
23:33:32  16  ,eur_g10
23:33:32  17  ,eur_g11
23:33:32  18  ,eur_g12
23:33:32  19  ,eur_g13
23:33:32  20  ,eur_g14
23:33:32  21  ,eur_g15
23:33:32  22  ,eur_g16
23:33:32  23  ,eur_g17
23:33:32  24  ,eur_g18
23:33:32  25  ,eur_g19
23:33:32  26  ,eur_g20
23:33:32  27  ,eur_g21
23:33:32  28  ,eur_g22
23:33:32  29  ,eur_g23
23:33:32  30  ,eur_g24
23:33:32  31  ,eur_g25
23:33:32  32  ,eur_g26
23:33:32  33  ,eur_g27
23:33:32  34  ,eur_g28
23:33:32  35  ,eur_g29
23:33:32  36  ,eur_g30
23:33:32  37  ,eur_g31
23:33:32  38  ,eur_g32
23:33:32  39  ,eur_g33
23:33:32  40  ,eur_g34
23:33:32  41  ,eur_g35
23:33:32  42  ,eur_g36
23:33:32  43  ,eur_g37
23:33:32  44  ,eur_g38
23:33:32  45  ,eur_g39
23:33:32  46  ,eur_g40
23:33:32  47  ,eur_g41
23:33:32  48  ,aud_g00
23:33:32  49  ,aud_g01
23:33:32  50  ,aud_g02
23:33:32  51  ,aud_g03
23:33:32  52  ,aud_g04
23:33:32  53  ,aud_g05
23:33:32  54  ,aud_g06
23:33:32  55  ,aud_g07
23:33:32  56  ,aud_g08
23:33:32  57  ,aud_g09
23:33:32  58  ,aud_g10
23:33:32  59  ,aud_g11
23:33:32  60  ,aud_g12
23:33:32  61  ,aud_g13
23:33:32  62  ,aud_g14
23:33:32  63  ,aud_g15
23:33:32  64  ,aud_g16
23:33:32  65  ,aud_g17
23:33:32  66  ,aud_g18
23:33:32  67  ,aud_g19
23:33:32  68  ,aud_g20
23:33:32  69  ,aud_g21
23:33:32  70  ,aud_g22
23:33:32  71  ,aud_g23
23:33:32  72  ,aud_g24
23:33:32  73  ,aud_g25
23:33:32  74  ,aud_g26
23:33:32  75  ,aud_g27
23:33:32  76  ,aud_g28
23:33:32  77  ,aud_g29
23:33:32  78  ,aud_g30
23:33:32  79  ,aud_g31
23:33:32  80  ,aud_g32
23:33:32  81  ,aud_g33
23:33:32  82  ,aud_g34
23:33:32  83  ,aud_g35
23:33:32  84  ,aud_g36
23:33:32  85  ,aud_g37
23:33:32  86  ,aud_g38
23:33:32  87  ,aud_g39
23:33:32  88  ,aud_g40
23:33:32  89  ,aud_g41
23:33:32  90  ,gbp_g00
23:33:32  91  ,gbp_g01
23:33:32  92  ,gbp_g02
23:33:32  93  ,gbp_g03
23:33:32  94  ,gbp_g04
23:33:32  95  ,gbp_g05
23:33:32  96  ,gbp_g06
23:33:32  97  ,gbp_g07
23:33:32  98  ,gbp_g08
23:33:32  99  ,gbp_g09
23:33:32 100  ,gbp_g10
23:33:32 101  ,gbp_g11
23:33:32 102  ,gbp_g12
23:33:32 103  ,gbp_g13
23:33:32 104  ,gbp_g14
23:33:32 105  ,gbp_g15
23:33:32 106  ,gbp_g16
23:33:32 107  ,gbp_g17
23:33:32 108  ,gbp_g18
23:33:32 109  ,gbp_g19
23:33:32 110  ,gbp_g20
23:33:32 111  ,gbp_g21
23:33:32 112  ,gbp_g22
23:33:32 113  ,gbp_g23
23:33:32 114  ,gbp_g24
23:33:32 115  ,gbp_g25
23:33:32 116  ,gbp_g26
23:33:32 117  ,gbp_g27
23:33:32 118  ,gbp_g28
23:33:32 119  ,gbp_g29
23:33:32 120  ,gbp_g30
23:33:32 121  ,gbp_g31
23:33:32 122  ,gbp_g32
23:33:32 123  ,gbp_g33
23:33:32 124  ,gbp_g34
23:33:32 125  ,gbp_g35
23:33:32 126  ,gbp_g36
23:33:32 127  ,gbp_g37
23:33:32 128  ,gbp_g38
23:33:32 129  ,gbp_g39
23:33:32 130  ,gbp_g40
23:33:32 131  ,gbp_g41
23:33:32 132  ,jpy_g00
23:33:32 133  ,jpy_g01
23:33:32 134  ,jpy_g02
23:33:32 135  ,jpy_g03
23:33:32 136  ,jpy_g04
23:33:32 137  ,jpy_g05
23:33:32 138  ,jpy_g06
23:33:32 139  ,jpy_g07
23:33:32 140  ,jpy_g08
23:33:32 141  ,jpy_g09
23:33:32 142  ,jpy_g10
23:33:32 143  ,jpy_g11
23:33:32 144  ,jpy_g12
23:33:32 145  ,jpy_g13
23:33:32 146  ,jpy_g14
23:33:32 147  ,jpy_g15
23:33:32 148  ,jpy_g16
23:33:32 149  ,jpy_g17
23:33:32 150  ,jpy_g18
23:33:32 151  ,jpy_g19
23:33:32 152  ,jpy_g20
23:33:32 153  ,jpy_g21
23:33:32 154  ,jpy_g22
23:33:32 155  ,jpy_g23
23:33:32 156  ,jpy_g24
23:33:32 157  ,jpy_g25
23:33:32 158  ,jpy_g26
23:33:32 159  ,jpy_g27
23:33:32 160  ,jpy_g28
23:33:32 161  ,jpy_g29
23:33:32 162  ,jpy_g30
23:33:32 163  ,jpy_g31
23:33:32 164  ,jpy_g32
23:33:32 165  ,jpy_g33
23:33:32 166  ,jpy_g34
23:33:32 167  ,jpy_g35
23:33:32 168  ,jpy_g36
23:33:32 169  ,jpy_g37
23:33:32 170  ,jpy_g38
23:33:32 171  ,jpy_g39
23:33:32 172  ,jpy_g40
23:33:32 173  ,jpy_g41
23:33:32 174  ,cad_g00
23:33:32 175  ,cad_g01
23:33:32 176  ,cad_g02
23:33:32 177  ,cad_g03
23:33:32 178  ,cad_g04
23:33:32 179  ,cad_g05
23:33:32 180  ,cad_g06
23:33:32 181  ,cad_g07
23:33:32 182  ,cad_g08
23:33:32 183  ,cad_g09
23:33:32 184  ,cad_g10
23:33:32 185  ,cad_g11
23:33:32 186  ,cad_g12
23:33:32 187  ,cad_g13
23:33:32 188  ,cad_g14
23:33:32 189  ,cad_g15
23:33:32 190  ,cad_g16
23:33:32 191  ,cad_g17
23:33:32 192  ,cad_g18
23:33:32 193  ,cad_g19
23:33:32 194  ,cad_g20
23:33:32 195  ,cad_g21
23:33:32 196  ,cad_g22
23:33:32 197  ,cad_g23
23:33:32 198  ,cad_g24
23:33:32 199  ,cad_g25
23:33:32 200  ,cad_g26
23:33:32 201  ,cad_g27
23:33:32 202  ,cad_g28
23:33:32 203  ,cad_g29
23:33:32 204  ,cad_g30
23:33:32 205  ,cad_g31
23:33:32 206  ,cad_g32
23:33:32 207  ,cad_g33
23:33:32 208  ,cad_g34
23:33:32 209  ,cad_g35
23:33:32 210  ,cad_g36
23:33:32 211  ,cad_g37
23:33:32 212  ,cad_g38
23:33:32 213  ,cad_g39
23:33:32 214  ,cad_g40
23:33:32 215  ,cad_g41
23:33:32 216  ,chf_g00
23:33:32 217  ,chf_g01
23:33:32 218  ,chf_g02
23:33:32 219  ,chf_g03
23:33:32 220  ,chf_g04
23:33:32 221  ,chf_g05
23:33:32 222  ,chf_g06
23:33:32 223  ,chf_g07
23:33:32 224  ,chf_g08
23:33:32 225  ,chf_g09
23:33:32 226  ,chf_g10
23:33:32 227  ,chf_g11
23:33:32 228  ,chf_g12
23:33:32 229  ,chf_g13
23:33:32 230  ,chf_g14
23:33:32 231  ,chf_g15
23:33:32 232  ,chf_g16
23:33:32 233  ,chf_g17
23:33:32 234  ,chf_g18
23:33:32 235  ,chf_g19
23:33:32 236  ,chf_g20
23:33:32 237  ,chf_g21
23:33:32 238  ,chf_g22
23:33:32 239  ,chf_g23
23:33:32 240  ,chf_g24
23:33:32 241  ,chf_g25
23:33:32 242  ,chf_g26
23:33:32 243  ,chf_g27
23:33:32 244  ,chf_g28
23:33:32 245  ,chf_g29
23:33:32 246  ,chf_g30
23:33:32 247  ,chf_g31
23:33:32 248  ,chf_g32
23:33:32 249  ,chf_g33
23:33:32 250  ,chf_g34
23:33:32 251  ,chf_g35
23:33:32 252  ,chf_g36
23:33:32 253  ,chf_g37
23:33:32 254  ,chf_g38
23:33:32 255  ,chf_g39
23:33:32 256  ,chf_g40
23:33:32 257  ,chf_g41
23:33:32 258  FROM aud_ms6 m
23:33:32 259  WHERE gattn IN('nup','up')
23:33:32 260  AND 1+m.ydate < '&1'||' '||'&2'
23:33:32 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'23:15:00'

View created.

Elapsed: 00:00:00.13
23:33:32 SQL> 
23:33:32 SQL> -- rpt
23:33:32 SQL> 
23:33:32 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12889
up	     6397

Elapsed: 00:00:00.04
23:33:32 SQL> 
23:33:32 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-28 23:10:00

Elapsed: 00:00:00.04
23:33:32 SQL> 
23:33:32 SQL> -- Now build model from bme and score sme
23:33:32 SQL> @score1gattn.sql
23:33:32 SQL> -- score1gattn.sql
23:33:32 SQL> 
23:33:32 SQL> -- Does the 1st SVM score
23:33:32 SQL> 
23:33:32 SQL> -- Fill up svmc_apply_prep
23:33:32 SQL> @score_gattn.sql
23:33:32 SQL> --
23:33:32 SQL> -- score_gattn.sql
23:33:32 SQL> --
23:33:32 SQL> 
23:33:32 SQL> -- usage: score_gattn.sql
23:33:32 SQL> 
23:33:32 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
23:33:32 SQL> 
23:33:32 SQL> DEFINE target	= 'gattn'
23:33:32 SQL> DEFINE model_name = 'forex14'
23:33:32 SQL> DEFINE bldtable	= 'bme'
23:33:32 SQL> DEFINE scoretable = 'sme'
23:33:32 SQL> DEFINE case_id	= 'prdate'
23:33:32 SQL> 
23:33:32 SQL> -- Define a variable to help me exclude some columns from some data mining calls
23:33:32 SQL> DEFINE exclude1 = "'&target','&case_id'"
23:33:32 SQL> 
23:33:32 SQL> -- Builds an SVM model using pl/sql.
23:33:32 SQL> 
23:33:32 SQL> -----------------------------------------------------------------------
23:33:32 SQL> --			    BUILD THE MODEL
23:33:32 SQL> -----------------------------------------------------------------------
23:33:32 SQL> 
23:33:32 SQL> -- Cleanup old build data preparation objects for repeat runs
23:33:32 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
23:33:32 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
23:33:32 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
23:33:32 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
23:33:32 SQL> 
23:33:32 SQL> 
23:33:32 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
23:33:32 SQL> --
23:33:32 SQL> -- DROP	TABLE svmc_settings ;
23:33:32 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
23:33:32 SQL> -- DELETE svmc_settings;
23:33:32 SQL> 
23:33:32 SQL> -- The default classification algorithm is Naive Bayes. So override
23:33:32 SQL> -- this choice to SVM using a settings table.
23:33:32 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
23:33:32 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
23:33:32 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
23:33:32 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
23:33:32 SQL> -- models.
23:33:32 SQL> --
23:33:32 SQL> 
23:33:32 SQL> -- Do this once and then comment it out.
23:33:32 SQL> -- That makes script go faster.
23:33:32 SQL> -- BEGIN
23:33:32 SQL> -- -- Populate settings table
23:33:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:33:32 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
23:33:32 SQL> --
23:33:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:33:32 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
23:33:32 SQL> --
23:33:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:33:32 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
23:33:32 SQL> --   COMMIT;
23:33:32 SQL> -- END;
23:33:32 SQL> -- /
23:33:32 SQL> 
23:33:32 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
23:33:32 SQL> 
23:33:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
23:33:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:33:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:33:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
23:33:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:33:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:33:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
23:33:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:33:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:33:33 SQL> 
23:33:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
23:33:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:33:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:33:33 SQL> 
23:33:33 SQL> --------------------------------
23:33:33 SQL> -- PREPARE BUILD (TRAINING) DATA
23:33:33 SQL> --
23:33:33 SQL> 
23:33:33 SQL> -- 1. Missing Value treatment for all Predictors and
23:33:33 SQL> -- 2. Outlier Treatment and
23:33:33 SQL> -- 3. Normalization are performed below.
23:33:33 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
23:33:33 SQL> --    normalized here.
23:33:33 SQL> 
23:33:33 SQL> BEGIN
23:33:33   2  	-- Perform missing value treatment for all predictors
23:33:33   3  	-- create miss tables
23:33:33   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
23:33:33   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
23:33:33   6  
23:33:33   7  	-- populate miss tables
23:33:33   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
23:33:33   9  	  miss_table_name => 'svmc_miss_num',
23:33:33  10  	  data_table_name => '&bldtable',
23:33:33  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:33:33  12  
23:33:33  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
23:33:33  14  	  miss_table_name => 'svmc_miss_cat',
23:33:33  15  	  data_table_name => '&bldtable',
23:33:33  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:33:33  17  
23:33:33  18  	-- xform input data to replace missing values
23:33:33  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:33:33  20  	  miss_table_name => 'svmc_miss_num',
23:33:33  21  	  data_table_name => '&bldtable',
23:33:33  22  	  xform_view_name => 'xformed_build_miss_num');
23:33:33  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:33:33  24  	  miss_table_name => 'svmc_miss_cat',
23:33:33  25  	  data_table_name => '&bldtable',
23:33:33  26  	  xform_view_name => 'xformed_build_miss_cat');
23:33:33  27  
23:33:33  28  	-- Perform outlier treatment.
23:33:33  29  	-- create clip table
23:33:33  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
23:33:33  31  
23:33:33  32  	-- populate clip table
23:33:33  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
23:33:33  34  	  clip_table_name => 'svmc_clip',
23:33:33  35  	  data_table_name => '&bldtable',
23:33:33  36  	  tail_frac	  => 0.025,
23:33:33  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:33:33  38  
23:33:33  39  	-- xform input data to winsorized data
23:33:33  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
23:33:33  41  	  clip_table_name => 'svmc_clip',
23:33:33  42  	  data_table_name => '&bldtable',
23:33:33  43  	  xform_view_name => 'svmc_winsor');
23:33:33  44  
23:33:33  45  	-- create normalization table
23:33:33  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
23:33:33  47  
23:33:33  48  	-- populate normalization table based on winsorized data
23:33:33  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
23:33:33  50  	  norm_table_name => 'svmc_norm',
23:33:33  51  	  data_table_name => 'svmc_winsor',
23:33:33  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:33:33  53  
23:33:33  54  	-- normalize the original data
23:33:33  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:33:33  56  	  norm_table_name => 'svmc_norm',
23:33:33  57  	  data_table_name => '&bldtable',
23:33:33  58  	  xform_view_name => 'svmc_build_prep');
23:33:33  59  END;
23:33:33  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.91
23:33:51 SQL> 
23:33:51 SQL> ---------------------
23:33:51 SQL> -- CREATE A NEW MODEL
23:33:51 SQL> --
23:33:51 SQL> -- Cleanup old model with the same name for repeat runs
23:33:51 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
23:33:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:33:51   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.29
23:33:52 SQL> 
23:33:52 SQL> -- Build a new SVM Model
23:33:52 SQL> BEGIN
23:33:52   2  	DBMS_DATA_MINING.CREATE_MODEL(
23:33:52   3  	  model_name	      => '&model_name',
23:33:52   4  	  mining_function     => dbms_data_mining.classification,
23:33:52   5  	  data_table_name     => 'svmc_build_prep',
23:33:52   6  	  case_id_column_name => '&case_id',
23:33:52   7  	  target_column_name  => '&target',
23:33:52   8  	  settings_table_name => 'svmc_settings');
23:33:52   9  END;
23:33:52  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.17
23:34:19 SQL> 
23:34:19 SQL> -----------------------------------------------------------------------
23:34:19 SQL> --			       APPLY/score THE MODEL
23:34:19 SQL> -----------------------------------------------------------------------
23:34:19 SQL> 
23:34:19 SQL> -- Cleanup old scoring data preparation objects for repeat runs
23:34:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
23:34:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:34:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
23:34:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
23:34:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:34:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:34:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
23:34:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:34:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:34:19 SQL> -----------------------
23:34:19 SQL> -- PREPARE SCORING DATA
23:34:19 SQL> --
23:34:19 SQL> -- If the data for model creation has been prepared, then the data
23:34:19 SQL> -- to be scored using the model must be prepared in the same manner
23:34:19 SQL> -- in order to obtain meaningful results.
23:34:19 SQL> --
23:34:19 SQL> -- 1. Missing Value treatment for all Predictors and
23:34:19 SQL> -- 2. Normalization
23:34:19 SQL> -- No outlier treatment will be performed during test and apply. The
23:34:19 SQL> -- normalization step is sufficient, since the normalization parameters
23:34:19 SQL> -- already capture the effects of outlier treatment done with build data.
23:34:19 SQL> --
23:34:19 SQL> BEGIN
23:34:19   2  	-- Xform Test data to replace missing values
23:34:19   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:34:19   4  	  miss_table_name => 'svmc_miss_num',
23:34:19   5  	  data_table_name => '&scoretable',
23:34:19   6  	  xform_view_name => 'xformed_apply_miss_num');
23:34:19   7  
23:34:19   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:34:19   9  	  miss_table_name => 'svmc_miss_cat',
23:34:19  10  	  data_table_name => '&scoretable',
23:34:19  11  	  xform_view_name => 'xformed_apply_miss_cat');
23:34:19  12  
23:34:19  13  	-- Normalize the data to be scored
23:34:19  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:34:19  15  	  norm_table_name => 'svmc_norm',
23:34:19  16  	  data_table_name => '&scoretable',
23:34:19  17  	  xform_view_name => 'svmc_apply_prep');
23:34:19  18  END;
23:34:19  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
23:34:20 SQL> 
23:34:20 SQL> -- Use same model_name used in score_gattn.sql
23:34:20 SQL> DEFINE model_name = 'forex14'
23:34:20 SQL> 
23:34:20 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
23:34:20 SQL> 
23:34:20 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
23:34:20   2  SELECT
23:34:20   3  prdate
23:34:20   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
23:34:20   5  ,sysdate
23:34:20   6  ,SUBSTR(prdate,1,3)pair
23:34:20   7  ,SUBSTR(prdate,4,19)ydate
23:34:20   8  FROM svmc_apply_prep
23:34:20   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
23:34:21 SQL> @aud_score1day_gattn.sql	2010-12-29 23:20:00
23:34:21 SQL> --
23:34:21 SQL> -- aud_score1day_gattn.sql
23:34:21 SQL> --
23:34:21 SQL> 
23:34:21 SQL> CREATE OR REPLACE VIEW sme AS
23:34:21   2  SELECT
23:34:21   3  'aud'||m.ydate prdate
23:34:21   4  ,NULL gattn
23:34:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:34:21   6  ,eur_g00
23:34:21   7  ,eur_g01
23:34:21   8  ,eur_g02
23:34:21   9  ,eur_g03
23:34:21  10  ,eur_g04
23:34:21  11  ,eur_g05
23:34:21  12  ,eur_g06
23:34:21  13  ,eur_g07
23:34:21  14  ,eur_g08
23:34:21  15  ,eur_g09
23:34:21  16  ,eur_g10
23:34:21  17  ,eur_g11
23:34:21  18  ,eur_g12
23:34:21  19  ,eur_g13
23:34:21  20  ,eur_g14
23:34:21  21  ,eur_g15
23:34:21  22  ,eur_g16
23:34:21  23  ,eur_g17
23:34:21  24  ,eur_g18
23:34:21  25  ,eur_g19
23:34:21  26  ,eur_g20
23:34:21  27  ,eur_g21
23:34:21  28  ,eur_g22
23:34:21  29  ,eur_g23
23:34:21  30  ,eur_g24
23:34:21  31  ,eur_g25
23:34:21  32  ,eur_g26
23:34:21  33  ,eur_g27
23:34:21  34  ,eur_g28
23:34:21  35  ,eur_g29
23:34:21  36  ,eur_g30
23:34:21  37  ,eur_g31
23:34:21  38  ,eur_g32
23:34:21  39  ,eur_g33
23:34:21  40  ,eur_g34
23:34:21  41  ,eur_g35
23:34:21  42  ,eur_g36
23:34:21  43  ,eur_g37
23:34:21  44  ,eur_g38
23:34:21  45  ,eur_g39
23:34:21  46  ,eur_g40
23:34:21  47  ,eur_g41
23:34:21  48  ,aud_g00
23:34:21  49  ,aud_g01
23:34:21  50  ,aud_g02
23:34:21  51  ,aud_g03
23:34:21  52  ,aud_g04
23:34:21  53  ,aud_g05
23:34:21  54  ,aud_g06
23:34:21  55  ,aud_g07
23:34:21  56  ,aud_g08
23:34:21  57  ,aud_g09
23:34:21  58  ,aud_g10
23:34:21  59  ,aud_g11
23:34:21  60  ,aud_g12
23:34:21  61  ,aud_g13
23:34:21  62  ,aud_g14
23:34:21  63  ,aud_g15
23:34:21  64  ,aud_g16
23:34:21  65  ,aud_g17
23:34:21  66  ,aud_g18
23:34:21  67  ,aud_g19
23:34:21  68  ,aud_g20
23:34:21  69  ,aud_g21
23:34:21  70  ,aud_g22
23:34:21  71  ,aud_g23
23:34:21  72  ,aud_g24
23:34:21  73  ,aud_g25
23:34:21  74  ,aud_g26
23:34:21  75  ,aud_g27
23:34:21  76  ,aud_g28
23:34:21  77  ,aud_g29
23:34:21  78  ,aud_g30
23:34:21  79  ,aud_g31
23:34:21  80  ,aud_g32
23:34:21  81  ,aud_g33
23:34:21  82  ,aud_g34
23:34:21  83  ,aud_g35
23:34:21  84  ,aud_g36
23:34:21  85  ,aud_g37
23:34:21  86  ,aud_g38
23:34:21  87  ,aud_g39
23:34:21  88  ,aud_g40
23:34:21  89  ,aud_g41
23:34:21  90  ,gbp_g00
23:34:21  91  ,gbp_g01
23:34:21  92  ,gbp_g02
23:34:21  93  ,gbp_g03
23:34:21  94  ,gbp_g04
23:34:21  95  ,gbp_g05
23:34:21  96  ,gbp_g06
23:34:21  97  ,gbp_g07
23:34:21  98  ,gbp_g08
23:34:21  99  ,gbp_g09
23:34:21 100  ,gbp_g10
23:34:21 101  ,gbp_g11
23:34:21 102  ,gbp_g12
23:34:21 103  ,gbp_g13
23:34:21 104  ,gbp_g14
23:34:21 105  ,gbp_g15
23:34:21 106  ,gbp_g16
23:34:21 107  ,gbp_g17
23:34:21 108  ,gbp_g18
23:34:21 109  ,gbp_g19
23:34:21 110  ,gbp_g20
23:34:21 111  ,gbp_g21
23:34:21 112  ,gbp_g22
23:34:21 113  ,gbp_g23
23:34:21 114  ,gbp_g24
23:34:21 115  ,gbp_g25
23:34:21 116  ,gbp_g26
23:34:21 117  ,gbp_g27
23:34:21 118  ,gbp_g28
23:34:21 119  ,gbp_g29
23:34:21 120  ,gbp_g30
23:34:21 121  ,gbp_g31
23:34:21 122  ,gbp_g32
23:34:21 123  ,gbp_g33
23:34:21 124  ,gbp_g34
23:34:21 125  ,gbp_g35
23:34:21 126  ,gbp_g36
23:34:21 127  ,gbp_g37
23:34:21 128  ,gbp_g38
23:34:21 129  ,gbp_g39
23:34:21 130  ,gbp_g40
23:34:21 131  ,gbp_g41
23:34:21 132  ,jpy_g00
23:34:21 133  ,jpy_g01
23:34:21 134  ,jpy_g02
23:34:21 135  ,jpy_g03
23:34:21 136  ,jpy_g04
23:34:21 137  ,jpy_g05
23:34:21 138  ,jpy_g06
23:34:21 139  ,jpy_g07
23:34:21 140  ,jpy_g08
23:34:21 141  ,jpy_g09
23:34:21 142  ,jpy_g10
23:34:21 143  ,jpy_g11
23:34:21 144  ,jpy_g12
23:34:21 145  ,jpy_g13
23:34:21 146  ,jpy_g14
23:34:21 147  ,jpy_g15
23:34:21 148  ,jpy_g16
23:34:21 149  ,jpy_g17
23:34:21 150  ,jpy_g18
23:34:21 151  ,jpy_g19
23:34:21 152  ,jpy_g20
23:34:21 153  ,jpy_g21
23:34:21 154  ,jpy_g22
23:34:21 155  ,jpy_g23
23:34:21 156  ,jpy_g24
23:34:21 157  ,jpy_g25
23:34:21 158  ,jpy_g26
23:34:21 159  ,jpy_g27
23:34:21 160  ,jpy_g28
23:34:21 161  ,jpy_g29
23:34:21 162  ,jpy_g30
23:34:21 163  ,jpy_g31
23:34:21 164  ,jpy_g32
23:34:21 165  ,jpy_g33
23:34:21 166  ,jpy_g34
23:34:21 167  ,jpy_g35
23:34:21 168  ,jpy_g36
23:34:21 169  ,jpy_g37
23:34:21 170  ,jpy_g38
23:34:21 171  ,jpy_g39
23:34:21 172  ,jpy_g40
23:34:21 173  ,jpy_g41
23:34:21 174  ,cad_g00
23:34:21 175  ,cad_g01
23:34:21 176  ,cad_g02
23:34:21 177  ,cad_g03
23:34:21 178  ,cad_g04
23:34:21 179  ,cad_g05
23:34:21 180  ,cad_g06
23:34:21 181  ,cad_g07
23:34:21 182  ,cad_g08
23:34:21 183  ,cad_g09
23:34:21 184  ,cad_g10
23:34:21 185  ,cad_g11
23:34:21 186  ,cad_g12
23:34:21 187  ,cad_g13
23:34:21 188  ,cad_g14
23:34:21 189  ,cad_g15
23:34:21 190  ,cad_g16
23:34:21 191  ,cad_g17
23:34:21 192  ,cad_g18
23:34:21 193  ,cad_g19
23:34:21 194  ,cad_g20
23:34:21 195  ,cad_g21
23:34:21 196  ,cad_g22
23:34:21 197  ,cad_g23
23:34:21 198  ,cad_g24
23:34:21 199  ,cad_g25
23:34:21 200  ,cad_g26
23:34:21 201  ,cad_g27
23:34:21 202  ,cad_g28
23:34:21 203  ,cad_g29
23:34:21 204  ,cad_g30
23:34:21 205  ,cad_g31
23:34:21 206  ,cad_g32
23:34:21 207  ,cad_g33
23:34:21 208  ,cad_g34
23:34:21 209  ,cad_g35
23:34:21 210  ,cad_g36
23:34:21 211  ,cad_g37
23:34:21 212  ,cad_g38
23:34:21 213  ,cad_g39
23:34:21 214  ,cad_g40
23:34:21 215  ,cad_g41
23:34:21 216  ,chf_g00
23:34:21 217  ,chf_g01
23:34:21 218  ,chf_g02
23:34:21 219  ,chf_g03
23:34:21 220  ,chf_g04
23:34:21 221  ,chf_g05
23:34:21 222  ,chf_g06
23:34:21 223  ,chf_g07
23:34:21 224  ,chf_g08
23:34:21 225  ,chf_g09
23:34:21 226  ,chf_g10
23:34:21 227  ,chf_g11
23:34:21 228  ,chf_g12
23:34:21 229  ,chf_g13
23:34:21 230  ,chf_g14
23:34:21 231  ,chf_g15
23:34:21 232  ,chf_g16
23:34:21 233  ,chf_g17
23:34:21 234  ,chf_g18
23:34:21 235  ,chf_g19
23:34:21 236  ,chf_g20
23:34:21 237  ,chf_g21
23:34:21 238  ,chf_g22
23:34:21 239  ,chf_g23
23:34:21 240  ,chf_g24
23:34:21 241  ,chf_g25
23:34:21 242  ,chf_g26
23:34:21 243  ,chf_g27
23:34:21 244  ,chf_g28
23:34:21 245  ,chf_g29
23:34:21 246  ,chf_g30
23:34:21 247  ,chf_g31
23:34:21 248  ,chf_g32
23:34:21 249  ,chf_g33
23:34:21 250  ,chf_g34
23:34:21 251  ,chf_g35
23:34:21 252  ,chf_g36
23:34:21 253  ,chf_g37
23:34:21 254  ,chf_g38
23:34:21 255  ,chf_g39
23:34:21 256  ,chf_g40
23:34:21 257  ,chf_g41
23:34:21 258  FROM aud_ms6 m
23:34:21 259  WHERE m.ydate = '&1'||' '||'&2'
23:34:21 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'23:20:00'

View created.

Elapsed: 00:00:00.12
23:34:21 SQL> 
23:34:21 SQL> -- rpt
23:34:21 SQL> -- We should see just 1 row:
23:34:21 SQL> 
23:34:21 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
23:34:21 SQL> 
23:34:21 SQL> -- Build the model:
23:34:21 SQL> CREATE OR REPLACE VIEW bme AS
23:34:21   2  SELECT
23:34:21   3  'aud'||m.ydate prdate
23:34:21   4  ,gattn
23:34:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:34:21   6  ,eur_g00
23:34:21   7  ,eur_g01
23:34:21   8  ,eur_g02
23:34:21   9  ,eur_g03
23:34:21  10  ,eur_g04
23:34:21  11  ,eur_g05
23:34:21  12  ,eur_g06
23:34:21  13  ,eur_g07
23:34:21  14  ,eur_g08
23:34:21  15  ,eur_g09
23:34:21  16  ,eur_g10
23:34:21  17  ,eur_g11
23:34:21  18  ,eur_g12
23:34:21  19  ,eur_g13
23:34:21  20  ,eur_g14
23:34:21  21  ,eur_g15
23:34:21  22  ,eur_g16
23:34:21  23  ,eur_g17
23:34:21  24  ,eur_g18
23:34:21  25  ,eur_g19
23:34:21  26  ,eur_g20
23:34:21  27  ,eur_g21
23:34:21  28  ,eur_g22
23:34:21  29  ,eur_g23
23:34:21  30  ,eur_g24
23:34:21  31  ,eur_g25
23:34:21  32  ,eur_g26
23:34:21  33  ,eur_g27
23:34:21  34  ,eur_g28
23:34:21  35  ,eur_g29
23:34:21  36  ,eur_g30
23:34:21  37  ,eur_g31
23:34:21  38  ,eur_g32
23:34:21  39  ,eur_g33
23:34:21  40  ,eur_g34
23:34:21  41  ,eur_g35
23:34:21  42  ,eur_g36
23:34:21  43  ,eur_g37
23:34:21  44  ,eur_g38
23:34:21  45  ,eur_g39
23:34:21  46  ,eur_g40
23:34:21  47  ,eur_g41
23:34:21  48  ,aud_g00
23:34:21  49  ,aud_g01
23:34:21  50  ,aud_g02
23:34:21  51  ,aud_g03
23:34:21  52  ,aud_g04
23:34:21  53  ,aud_g05
23:34:21  54  ,aud_g06
23:34:21  55  ,aud_g07
23:34:21  56  ,aud_g08
23:34:21  57  ,aud_g09
23:34:21  58  ,aud_g10
23:34:21  59  ,aud_g11
23:34:21  60  ,aud_g12
23:34:21  61  ,aud_g13
23:34:21  62  ,aud_g14
23:34:21  63  ,aud_g15
23:34:21  64  ,aud_g16
23:34:21  65  ,aud_g17
23:34:21  66  ,aud_g18
23:34:21  67  ,aud_g19
23:34:21  68  ,aud_g20
23:34:21  69  ,aud_g21
23:34:21  70  ,aud_g22
23:34:21  71  ,aud_g23
23:34:21  72  ,aud_g24
23:34:21  73  ,aud_g25
23:34:21  74  ,aud_g26
23:34:21  75  ,aud_g27
23:34:21  76  ,aud_g28
23:34:21  77  ,aud_g29
23:34:21  78  ,aud_g30
23:34:21  79  ,aud_g31
23:34:21  80  ,aud_g32
23:34:21  81  ,aud_g33
23:34:21  82  ,aud_g34
23:34:21  83  ,aud_g35
23:34:21  84  ,aud_g36
23:34:21  85  ,aud_g37
23:34:21  86  ,aud_g38
23:34:21  87  ,aud_g39
23:34:21  88  ,aud_g40
23:34:21  89  ,aud_g41
23:34:21  90  ,gbp_g00
23:34:21  91  ,gbp_g01
23:34:21  92  ,gbp_g02
23:34:21  93  ,gbp_g03
23:34:21  94  ,gbp_g04
23:34:21  95  ,gbp_g05
23:34:21  96  ,gbp_g06
23:34:21  97  ,gbp_g07
23:34:21  98  ,gbp_g08
23:34:21  99  ,gbp_g09
23:34:21 100  ,gbp_g10
23:34:21 101  ,gbp_g11
23:34:21 102  ,gbp_g12
23:34:21 103  ,gbp_g13
23:34:21 104  ,gbp_g14
23:34:21 105  ,gbp_g15
23:34:21 106  ,gbp_g16
23:34:21 107  ,gbp_g17
23:34:21 108  ,gbp_g18
23:34:21 109  ,gbp_g19
23:34:21 110  ,gbp_g20
23:34:21 111  ,gbp_g21
23:34:21 112  ,gbp_g22
23:34:21 113  ,gbp_g23
23:34:21 114  ,gbp_g24
23:34:21 115  ,gbp_g25
23:34:21 116  ,gbp_g26
23:34:21 117  ,gbp_g27
23:34:21 118  ,gbp_g28
23:34:21 119  ,gbp_g29
23:34:21 120  ,gbp_g30
23:34:21 121  ,gbp_g31
23:34:21 122  ,gbp_g32
23:34:21 123  ,gbp_g33
23:34:21 124  ,gbp_g34
23:34:21 125  ,gbp_g35
23:34:21 126  ,gbp_g36
23:34:21 127  ,gbp_g37
23:34:21 128  ,gbp_g38
23:34:21 129  ,gbp_g39
23:34:21 130  ,gbp_g40
23:34:21 131  ,gbp_g41
23:34:21 132  ,jpy_g00
23:34:21 133  ,jpy_g01
23:34:21 134  ,jpy_g02
23:34:21 135  ,jpy_g03
23:34:21 136  ,jpy_g04
23:34:21 137  ,jpy_g05
23:34:21 138  ,jpy_g06
23:34:21 139  ,jpy_g07
23:34:21 140  ,jpy_g08
23:34:21 141  ,jpy_g09
23:34:21 142  ,jpy_g10
23:34:21 143  ,jpy_g11
23:34:21 144  ,jpy_g12
23:34:21 145  ,jpy_g13
23:34:21 146  ,jpy_g14
23:34:21 147  ,jpy_g15
23:34:21 148  ,jpy_g16
23:34:21 149  ,jpy_g17
23:34:21 150  ,jpy_g18
23:34:21 151  ,jpy_g19
23:34:21 152  ,jpy_g20
23:34:21 153  ,jpy_g21
23:34:21 154  ,jpy_g22
23:34:21 155  ,jpy_g23
23:34:21 156  ,jpy_g24
23:34:21 157  ,jpy_g25
23:34:21 158  ,jpy_g26
23:34:21 159  ,jpy_g27
23:34:21 160  ,jpy_g28
23:34:21 161  ,jpy_g29
23:34:21 162  ,jpy_g30
23:34:21 163  ,jpy_g31
23:34:21 164  ,jpy_g32
23:34:21 165  ,jpy_g33
23:34:21 166  ,jpy_g34
23:34:21 167  ,jpy_g35
23:34:21 168  ,jpy_g36
23:34:21 169  ,jpy_g37
23:34:21 170  ,jpy_g38
23:34:21 171  ,jpy_g39
23:34:21 172  ,jpy_g40
23:34:21 173  ,jpy_g41
23:34:21 174  ,cad_g00
23:34:21 175  ,cad_g01
23:34:21 176  ,cad_g02
23:34:21 177  ,cad_g03
23:34:21 178  ,cad_g04
23:34:21 179  ,cad_g05
23:34:21 180  ,cad_g06
23:34:21 181  ,cad_g07
23:34:21 182  ,cad_g08
23:34:21 183  ,cad_g09
23:34:21 184  ,cad_g10
23:34:21 185  ,cad_g11
23:34:21 186  ,cad_g12
23:34:21 187  ,cad_g13
23:34:21 188  ,cad_g14
23:34:21 189  ,cad_g15
23:34:21 190  ,cad_g16
23:34:21 191  ,cad_g17
23:34:21 192  ,cad_g18
23:34:21 193  ,cad_g19
23:34:21 194  ,cad_g20
23:34:21 195  ,cad_g21
23:34:21 196  ,cad_g22
23:34:21 197  ,cad_g23
23:34:21 198  ,cad_g24
23:34:21 199  ,cad_g25
23:34:21 200  ,cad_g26
23:34:21 201  ,cad_g27
23:34:21 202  ,cad_g28
23:34:21 203  ,cad_g29
23:34:21 204  ,cad_g30
23:34:21 205  ,cad_g31
23:34:21 206  ,cad_g32
23:34:21 207  ,cad_g33
23:34:21 208  ,cad_g34
23:34:21 209  ,cad_g35
23:34:21 210  ,cad_g36
23:34:21 211  ,cad_g37
23:34:21 212  ,cad_g38
23:34:21 213  ,cad_g39
23:34:21 214  ,cad_g40
23:34:21 215  ,cad_g41
23:34:21 216  ,chf_g00
23:34:21 217  ,chf_g01
23:34:21 218  ,chf_g02
23:34:21 219  ,chf_g03
23:34:21 220  ,chf_g04
23:34:21 221  ,chf_g05
23:34:21 222  ,chf_g06
23:34:21 223  ,chf_g07
23:34:21 224  ,chf_g08
23:34:21 225  ,chf_g09
23:34:21 226  ,chf_g10
23:34:21 227  ,chf_g11
23:34:21 228  ,chf_g12
23:34:21 229  ,chf_g13
23:34:21 230  ,chf_g14
23:34:21 231  ,chf_g15
23:34:21 232  ,chf_g16
23:34:21 233  ,chf_g17
23:34:21 234  ,chf_g18
23:34:21 235  ,chf_g19
23:34:21 236  ,chf_g20
23:34:21 237  ,chf_g21
23:34:21 238  ,chf_g22
23:34:21 239  ,chf_g23
23:34:21 240  ,chf_g24
23:34:21 241  ,chf_g25
23:34:21 242  ,chf_g26
23:34:21 243  ,chf_g27
23:34:21 244  ,chf_g28
23:34:21 245  ,chf_g29
23:34:21 246  ,chf_g30
23:34:21 247  ,chf_g31
23:34:21 248  ,chf_g32
23:34:21 249  ,chf_g33
23:34:21 250  ,chf_g34
23:34:21 251  ,chf_g35
23:34:21 252  ,chf_g36
23:34:21 253  ,chf_g37
23:34:21 254  ,chf_g38
23:34:21 255  ,chf_g39
23:34:21 256  ,chf_g40
23:34:21 257  ,chf_g41
23:34:21 258  FROM aud_ms6 m
23:34:21 259  WHERE gattn IN('nup','up')
23:34:21 260  AND 1+m.ydate < '&1'||' '||'&2'
23:34:21 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'23:20:00'

View created.

Elapsed: 00:00:00.13
23:34:21 SQL> 
23:34:21 SQL> -- rpt
23:34:21 SQL> 
23:34:21 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12890
up	     6397

Elapsed: 00:00:00.04
23:34:21 SQL> 
23:34:21 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-28 23:15:00

Elapsed: 00:00:00.04
23:34:21 SQL> 
23:34:21 SQL> -- Now build model from bme and score sme
23:34:21 SQL> @score1gattn.sql
23:34:21 SQL> -- score1gattn.sql
23:34:21 SQL> 
23:34:21 SQL> -- Does the 1st SVM score
23:34:21 SQL> 
23:34:21 SQL> -- Fill up svmc_apply_prep
23:34:21 SQL> @score_gattn.sql
23:34:21 SQL> --
23:34:21 SQL> -- score_gattn.sql
23:34:21 SQL> --
23:34:21 SQL> 
23:34:21 SQL> -- usage: score_gattn.sql
23:34:21 SQL> 
23:34:21 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
23:34:21 SQL> 
23:34:21 SQL> DEFINE target	= 'gattn'
23:34:21 SQL> DEFINE model_name = 'forex14'
23:34:21 SQL> DEFINE bldtable	= 'bme'
23:34:21 SQL> DEFINE scoretable = 'sme'
23:34:21 SQL> DEFINE case_id	= 'prdate'
23:34:21 SQL> 
23:34:21 SQL> -- Define a variable to help me exclude some columns from some data mining calls
23:34:21 SQL> DEFINE exclude1 = "'&target','&case_id'"
23:34:21 SQL> 
23:34:21 SQL> -- Builds an SVM model using pl/sql.
23:34:21 SQL> 
23:34:21 SQL> -----------------------------------------------------------------------
23:34:21 SQL> --			    BUILD THE MODEL
23:34:21 SQL> -----------------------------------------------------------------------
23:34:21 SQL> 
23:34:21 SQL> -- Cleanup old build data preparation objects for repeat runs
23:34:21 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
23:34:21 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
23:34:21 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
23:34:21 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
23:34:21 SQL> 
23:34:21 SQL> 
23:34:21 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
23:34:21 SQL> --
23:34:21 SQL> -- DROP	TABLE svmc_settings ;
23:34:21 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
23:34:21 SQL> -- DELETE svmc_settings;
23:34:21 SQL> 
23:34:21 SQL> -- The default classification algorithm is Naive Bayes. So override
23:34:21 SQL> -- this choice to SVM using a settings table.
23:34:21 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
23:34:21 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
23:34:21 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
23:34:21 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
23:34:21 SQL> -- models.
23:34:21 SQL> --
23:34:21 SQL> 
23:34:21 SQL> -- Do this once and then comment it out.
23:34:21 SQL> -- That makes script go faster.
23:34:21 SQL> -- BEGIN
23:34:21 SQL> -- -- Populate settings table
23:34:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:34:21 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
23:34:21 SQL> --
23:34:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:34:21 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
23:34:21 SQL> --
23:34:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:34:21 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
23:34:21 SQL> --   COMMIT;
23:34:21 SQL> -- END;
23:34:21 SQL> -- /
23:34:21 SQL> 
23:34:21 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
23:34:21 SQL> 
23:34:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
23:34:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:34:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
23:34:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
23:34:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:34:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:34:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
23:34:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:34:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:34:21 SQL> 
23:34:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
23:34:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:34:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:34:21 SQL> 
23:34:21 SQL> --------------------------------
23:34:21 SQL> -- PREPARE BUILD (TRAINING) DATA
23:34:21 SQL> --
23:34:21 SQL> 
23:34:21 SQL> -- 1. Missing Value treatment for all Predictors and
23:34:21 SQL> -- 2. Outlier Treatment and
23:34:21 SQL> -- 3. Normalization are performed below.
23:34:21 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
23:34:21 SQL> --    normalized here.
23:34:21 SQL> 
23:34:21 SQL> BEGIN
23:34:21   2  	-- Perform missing value treatment for all predictors
23:34:21   3  	-- create miss tables
23:34:21   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
23:34:21   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
23:34:21   6  
23:34:21   7  	-- populate miss tables
23:34:21   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
23:34:21   9  	  miss_table_name => 'svmc_miss_num',
23:34:21  10  	  data_table_name => '&bldtable',
23:34:21  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:34:21  12  
23:34:21  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
23:34:21  14  	  miss_table_name => 'svmc_miss_cat',
23:34:21  15  	  data_table_name => '&bldtable',
23:34:21  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:34:21  17  
23:34:21  18  	-- xform input data to replace missing values
23:34:21  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:34:21  20  	  miss_table_name => 'svmc_miss_num',
23:34:21  21  	  data_table_name => '&bldtable',
23:34:21  22  	  xform_view_name => 'xformed_build_miss_num');
23:34:21  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:34:21  24  	  miss_table_name => 'svmc_miss_cat',
23:34:21  25  	  data_table_name => '&bldtable',
23:34:21  26  	  xform_view_name => 'xformed_build_miss_cat');
23:34:21  27  
23:34:21  28  	-- Perform outlier treatment.
23:34:21  29  	-- create clip table
23:34:21  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
23:34:21  31  
23:34:21  32  	-- populate clip table
23:34:21  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
23:34:21  34  	  clip_table_name => 'svmc_clip',
23:34:21  35  	  data_table_name => '&bldtable',
23:34:21  36  	  tail_frac	  => 0.025,
23:34:21  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:34:21  38  
23:34:21  39  	-- xform input data to winsorized data
23:34:21  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
23:34:21  41  	  clip_table_name => 'svmc_clip',
23:34:21  42  	  data_table_name => '&bldtable',
23:34:21  43  	  xform_view_name => 'svmc_winsor');
23:34:21  44  
23:34:21  45  	-- create normalization table
23:34:21  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
23:34:21  47  
23:34:21  48  	-- populate normalization table based on winsorized data
23:34:21  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
23:34:21  50  	  norm_table_name => 'svmc_norm',
23:34:21  51  	  data_table_name => 'svmc_winsor',
23:34:21  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:34:21  53  
23:34:21  54  	-- normalize the original data
23:34:21  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:34:21  56  	  norm_table_name => 'svmc_norm',
23:34:21  57  	  data_table_name => '&bldtable',
23:34:21  58  	  xform_view_name => 'svmc_build_prep');
23:34:21  59  END;
23:34:21  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.15
23:34:39 SQL> 
23:34:39 SQL> ---------------------
23:34:39 SQL> -- CREATE A NEW MODEL
23:34:39 SQL> --
23:34:39 SQL> -- Cleanup old model with the same name for repeat runs
23:34:39 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
23:34:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:34:39   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.98
23:34:40 SQL> 
23:34:40 SQL> -- Build a new SVM Model
23:34:40 SQL> BEGIN
23:34:40   2  	DBMS_DATA_MINING.CREATE_MODEL(
23:34:40   3  	  model_name	      => '&model_name',
23:34:40   4  	  mining_function     => dbms_data_mining.classification,
23:34:40   5  	  data_table_name     => 'svmc_build_prep',
23:34:40   6  	  case_id_column_name => '&case_id',
23:34:40   7  	  target_column_name  => '&target',
23:34:40   8  	  settings_table_name => 'svmc_settings');
23:34:40   9  END;
23:34:40  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.19
23:35:07 SQL> 
23:35:07 SQL> -----------------------------------------------------------------------
23:35:07 SQL> --			       APPLY/score THE MODEL
23:35:07 SQL> -----------------------------------------------------------------------
23:35:07 SQL> 
23:35:07 SQL> -- Cleanup old scoring data preparation objects for repeat runs
23:35:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
23:35:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:35:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:35:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
23:35:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:35:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:35:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
23:35:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:35:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:35:07 SQL> -----------------------
23:35:07 SQL> -- PREPARE SCORING DATA
23:35:07 SQL> --
23:35:07 SQL> -- If the data for model creation has been prepared, then the data
23:35:07 SQL> -- to be scored using the model must be prepared in the same manner
23:35:07 SQL> -- in order to obtain meaningful results.
23:35:07 SQL> --
23:35:07 SQL> -- 1. Missing Value treatment for all Predictors and
23:35:07 SQL> -- 2. Normalization
23:35:07 SQL> -- No outlier treatment will be performed during test and apply. The
23:35:07 SQL> -- normalization step is sufficient, since the normalization parameters
23:35:07 SQL> -- already capture the effects of outlier treatment done with build data.
23:35:07 SQL> --
23:35:07 SQL> BEGIN
23:35:07   2  	-- Xform Test data to replace missing values
23:35:07   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:35:07   4  	  miss_table_name => 'svmc_miss_num',
23:35:07   5  	  data_table_name => '&scoretable',
23:35:07   6  	  xform_view_name => 'xformed_apply_miss_num');
23:35:07   7  
23:35:07   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:35:07   9  	  miss_table_name => 'svmc_miss_cat',
23:35:07  10  	  data_table_name => '&scoretable',
23:35:07  11  	  xform_view_name => 'xformed_apply_miss_cat');
23:35:07  12  
23:35:07  13  	-- Normalize the data to be scored
23:35:07  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:35:07  15  	  norm_table_name => 'svmc_norm',
23:35:07  16  	  data_table_name => '&scoretable',
23:35:07  17  	  xform_view_name => 'svmc_apply_prep');
23:35:07  18  END;
23:35:07  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
23:35:08 SQL> 
23:35:08 SQL> -- Use same model_name used in score_gattn.sql
23:35:08 SQL> DEFINE model_name = 'forex14'
23:35:08 SQL> 
23:35:08 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
23:35:08 SQL> 
23:35:08 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
23:35:08   2  SELECT
23:35:08   3  prdate
23:35:08   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
23:35:08   5  ,sysdate
23:35:08   6  ,SUBSTR(prdate,1,3)pair
23:35:08   7  ,SUBSTR(prdate,4,19)ydate
23:35:08   8  FROM svmc_apply_prep
23:35:08   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
23:35:08 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
