
SQL*Plus: Release 11.2.0.1.0 Production on Fri Dec 31 21:49:18 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

21:49:18 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
21:49:18 SQL> 21:49:18 SQL> @aud_score1day.sql  2010-12-31 21:25:00
21:49:18 SQL> --
21:49:18 SQL> -- aud_score1day.sql
21:49:18 SQL> --
21:49:18 SQL> 
21:49:18 SQL> CREATE OR REPLACE VIEW sme AS
21:49:18   2  SELECT
21:49:18   3  'aud'||m.ydate prdate
21:49:18   4  ,NULL gatt
21:49:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:49:18   6  ,eur_g00
21:49:18   7  ,eur_g01
21:49:18   8  ,eur_g02
21:49:18   9  ,eur_g03
21:49:18  10  ,eur_g04
21:49:18  11  ,eur_g05
21:49:18  12  ,eur_g06
21:49:18  13  ,eur_g07
21:49:18  14  ,eur_g08
21:49:18  15  ,eur_g09
21:49:18  16  ,eur_g10
21:49:18  17  ,eur_g11
21:49:18  18  ,eur_g12
21:49:18  19  ,eur_g13
21:49:18  20  ,eur_g14
21:49:18  21  ,eur_g15
21:49:18  22  ,eur_g16
21:49:18  23  ,eur_g17
21:49:18  24  ,eur_g18
21:49:18  25  ,eur_g19
21:49:18  26  ,eur_g20
21:49:18  27  ,eur_g21
21:49:18  28  ,eur_g22
21:49:18  29  ,eur_g23
21:49:18  30  ,eur_g24
21:49:18  31  ,eur_g25
21:49:18  32  ,eur_g26
21:49:18  33  ,eur_g27
21:49:18  34  ,eur_g28
21:49:18  35  ,eur_g29
21:49:18  36  ,eur_g30
21:49:18  37  ,eur_g31
21:49:18  38  ,eur_g32
21:49:18  39  ,eur_g33
21:49:18  40  ,eur_g34
21:49:18  41  ,eur_g35
21:49:18  42  ,eur_g36
21:49:18  43  ,eur_g37
21:49:18  44  ,eur_g38
21:49:18  45  ,eur_g39
21:49:18  46  ,eur_g40
21:49:18  47  ,eur_g41
21:49:18  48  ,aud_g00
21:49:18  49  ,aud_g01
21:49:18  50  ,aud_g02
21:49:18  51  ,aud_g03
21:49:18  52  ,aud_g04
21:49:18  53  ,aud_g05
21:49:18  54  ,aud_g06
21:49:18  55  ,aud_g07
21:49:18  56  ,aud_g08
21:49:18  57  ,aud_g09
21:49:18  58  ,aud_g10
21:49:18  59  ,aud_g11
21:49:18  60  ,aud_g12
21:49:18  61  ,aud_g13
21:49:18  62  ,aud_g14
21:49:18  63  ,aud_g15
21:49:18  64  ,aud_g16
21:49:18  65  ,aud_g17
21:49:18  66  ,aud_g18
21:49:18  67  ,aud_g19
21:49:18  68  ,aud_g20
21:49:18  69  ,aud_g21
21:49:18  70  ,aud_g22
21:49:18  71  ,aud_g23
21:49:18  72  ,aud_g24
21:49:18  73  ,aud_g25
21:49:18  74  ,aud_g26
21:49:18  75  ,aud_g27
21:49:18  76  ,aud_g28
21:49:18  77  ,aud_g29
21:49:18  78  ,aud_g30
21:49:18  79  ,aud_g31
21:49:18  80  ,aud_g32
21:49:18  81  ,aud_g33
21:49:18  82  ,aud_g34
21:49:18  83  ,aud_g35
21:49:18  84  ,aud_g36
21:49:18  85  ,aud_g37
21:49:18  86  ,aud_g38
21:49:18  87  ,aud_g39
21:49:18  88  ,aud_g40
21:49:18  89  ,aud_g41
21:49:18  90  ,gbp_g00
21:49:18  91  ,gbp_g01
21:49:18  92  ,gbp_g02
21:49:18  93  ,gbp_g03
21:49:18  94  ,gbp_g04
21:49:18  95  ,gbp_g05
21:49:18  96  ,gbp_g06
21:49:18  97  ,gbp_g07
21:49:18  98  ,gbp_g08
21:49:18  99  ,gbp_g09
21:49:18 100  ,gbp_g10
21:49:18 101  ,gbp_g11
21:49:18 102  ,gbp_g12
21:49:18 103  ,gbp_g13
21:49:18 104  ,gbp_g14
21:49:18 105  ,gbp_g15
21:49:18 106  ,gbp_g16
21:49:18 107  ,gbp_g17
21:49:18 108  ,gbp_g18
21:49:18 109  ,gbp_g19
21:49:18 110  ,gbp_g20
21:49:18 111  ,gbp_g21
21:49:18 112  ,gbp_g22
21:49:18 113  ,gbp_g23
21:49:18 114  ,gbp_g24
21:49:18 115  ,gbp_g25
21:49:18 116  ,gbp_g26
21:49:18 117  ,gbp_g27
21:49:18 118  ,gbp_g28
21:49:18 119  ,gbp_g29
21:49:18 120  ,gbp_g30
21:49:18 121  ,gbp_g31
21:49:18 122  ,gbp_g32
21:49:18 123  ,gbp_g33
21:49:18 124  ,gbp_g34
21:49:18 125  ,gbp_g35
21:49:18 126  ,gbp_g36
21:49:18 127  ,gbp_g37
21:49:18 128  ,gbp_g38
21:49:18 129  ,gbp_g39
21:49:18 130  ,gbp_g40
21:49:18 131  ,gbp_g41
21:49:18 132  ,jpy_g00
21:49:18 133  ,jpy_g01
21:49:18 134  ,jpy_g02
21:49:18 135  ,jpy_g03
21:49:18 136  ,jpy_g04
21:49:18 137  ,jpy_g05
21:49:18 138  ,jpy_g06
21:49:18 139  ,jpy_g07
21:49:18 140  ,jpy_g08
21:49:18 141  ,jpy_g09
21:49:18 142  ,jpy_g10
21:49:18 143  ,jpy_g11
21:49:18 144  ,jpy_g12
21:49:18 145  ,jpy_g13
21:49:18 146  ,jpy_g14
21:49:18 147  ,jpy_g15
21:49:18 148  ,jpy_g16
21:49:18 149  ,jpy_g17
21:49:18 150  ,jpy_g18
21:49:18 151  ,jpy_g19
21:49:18 152  ,jpy_g20
21:49:18 153  ,jpy_g21
21:49:18 154  ,jpy_g22
21:49:18 155  ,jpy_g23
21:49:18 156  ,jpy_g24
21:49:18 157  ,jpy_g25
21:49:18 158  ,jpy_g26
21:49:18 159  ,jpy_g27
21:49:18 160  ,jpy_g28
21:49:18 161  ,jpy_g29
21:49:18 162  ,jpy_g30
21:49:18 163  ,jpy_g31
21:49:18 164  ,jpy_g32
21:49:18 165  ,jpy_g33
21:49:18 166  ,jpy_g34
21:49:18 167  ,jpy_g35
21:49:18 168  ,jpy_g36
21:49:18 169  ,jpy_g37
21:49:18 170  ,jpy_g38
21:49:18 171  ,jpy_g39
21:49:18 172  ,jpy_g40
21:49:18 173  ,jpy_g41
21:49:18 174  ,cad_g00
21:49:18 175  ,cad_g01
21:49:18 176  ,cad_g02
21:49:18 177  ,cad_g03
21:49:18 178  ,cad_g04
21:49:18 179  ,cad_g05
21:49:18 180  ,cad_g06
21:49:18 181  ,cad_g07
21:49:18 182  ,cad_g08
21:49:18 183  ,cad_g09
21:49:18 184  ,cad_g10
21:49:18 185  ,cad_g11
21:49:18 186  ,cad_g12
21:49:18 187  ,cad_g13
21:49:18 188  ,cad_g14
21:49:18 189  ,cad_g15
21:49:18 190  ,cad_g16
21:49:18 191  ,cad_g17
21:49:18 192  ,cad_g18
21:49:18 193  ,cad_g19
21:49:18 194  ,cad_g20
21:49:18 195  ,cad_g21
21:49:18 196  ,cad_g22
21:49:18 197  ,cad_g23
21:49:18 198  ,cad_g24
21:49:18 199  ,cad_g25
21:49:18 200  ,cad_g26
21:49:18 201  ,cad_g27
21:49:18 202  ,cad_g28
21:49:18 203  ,cad_g29
21:49:18 204  ,cad_g30
21:49:18 205  ,cad_g31
21:49:18 206  ,cad_g32
21:49:18 207  ,cad_g33
21:49:18 208  ,cad_g34
21:49:18 209  ,cad_g35
21:49:18 210  ,cad_g36
21:49:18 211  ,cad_g37
21:49:18 212  ,cad_g38
21:49:18 213  ,cad_g39
21:49:18 214  ,cad_g40
21:49:18 215  ,cad_g41
21:49:18 216  ,chf_g00
21:49:18 217  ,chf_g01
21:49:18 218  ,chf_g02
21:49:18 219  ,chf_g03
21:49:18 220  ,chf_g04
21:49:18 221  ,chf_g05
21:49:18 222  ,chf_g06
21:49:18 223  ,chf_g07
21:49:18 224  ,chf_g08
21:49:18 225  ,chf_g09
21:49:18 226  ,chf_g10
21:49:18 227  ,chf_g11
21:49:18 228  ,chf_g12
21:49:18 229  ,chf_g13
21:49:18 230  ,chf_g14
21:49:18 231  ,chf_g15
21:49:18 232  ,chf_g16
21:49:18 233  ,chf_g17
21:49:18 234  ,chf_g18
21:49:18 235  ,chf_g19
21:49:18 236  ,chf_g20
21:49:18 237  ,chf_g21
21:49:18 238  ,chf_g22
21:49:18 239  ,chf_g23
21:49:18 240  ,chf_g24
21:49:18 241  ,chf_g25
21:49:18 242  ,chf_g26
21:49:18 243  ,chf_g27
21:49:18 244  ,chf_g28
21:49:18 245  ,chf_g29
21:49:18 246  ,chf_g30
21:49:18 247  ,chf_g31
21:49:18 248  ,chf_g32
21:49:18 249  ,chf_g33
21:49:18 250  ,chf_g34
21:49:18 251  ,chf_g35
21:49:18 252  ,chf_g36
21:49:18 253  ,chf_g37
21:49:18 254  ,chf_g38
21:49:18 255  ,chf_g39
21:49:18 256  ,chf_g40
21:49:18 257  ,chf_g41
21:49:18 258  FROM aud_ms6 m
21:49:18 259  WHERE m.ydate = '&1'||' '||'&2'
21:49:18 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'21:25:00'

View created.

Elapsed: 00:00:00.14
21:49:18 SQL> 
21:49:18 SQL> -- rpt
21:49:18 SQL> -- We should see just 1 row:
21:49:18 SQL> 
21:49:18 SQL> SELECT COUNT(prdate) FROM sme
21:49:18   2  
21:49:18 SQL> -- Build the model:
21:49:18 SQL> CREATE OR REPLACE VIEW bme AS
21:49:18   2  SELECT
21:49:18   3  'aud'||m.ydate prdate
21:49:18   4  ,gatt
21:49:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:49:18   6  ,eur_g00
21:49:18   7  ,eur_g01
21:49:18   8  ,eur_g02
21:49:18   9  ,eur_g03
21:49:18  10  ,eur_g04
21:49:18  11  ,eur_g05
21:49:18  12  ,eur_g06
21:49:18  13  ,eur_g07
21:49:18  14  ,eur_g08
21:49:18  15  ,eur_g09
21:49:18  16  ,eur_g10
21:49:18  17  ,eur_g11
21:49:18  18  ,eur_g12
21:49:18  19  ,eur_g13
21:49:18  20  ,eur_g14
21:49:18  21  ,eur_g15
21:49:18  22  ,eur_g16
21:49:18  23  ,eur_g17
21:49:18  24  ,eur_g18
21:49:18  25  ,eur_g19
21:49:18  26  ,eur_g20
21:49:18  27  ,eur_g21
21:49:18  28  ,eur_g22
21:49:18  29  ,eur_g23
21:49:18  30  ,eur_g24
21:49:18  31  ,eur_g25
21:49:18  32  ,eur_g26
21:49:18  33  ,eur_g27
21:49:18  34  ,eur_g28
21:49:18  35  ,eur_g29
21:49:18  36  ,eur_g30
21:49:18  37  ,eur_g31
21:49:18  38  ,eur_g32
21:49:18  39  ,eur_g33
21:49:18  40  ,eur_g34
21:49:18  41  ,eur_g35
21:49:18  42  ,eur_g36
21:49:18  43  ,eur_g37
21:49:18  44  ,eur_g38
21:49:18  45  ,eur_g39
21:49:18  46  ,eur_g40
21:49:18  47  ,eur_g41
21:49:18  48  ,aud_g00
21:49:18  49  ,aud_g01
21:49:18  50  ,aud_g02
21:49:18  51  ,aud_g03
21:49:18  52  ,aud_g04
21:49:18  53  ,aud_g05
21:49:18  54  ,aud_g06
21:49:18  55  ,aud_g07
21:49:18  56  ,aud_g08
21:49:18  57  ,aud_g09
21:49:18  58  ,aud_g10
21:49:18  59  ,aud_g11
21:49:18  60  ,aud_g12
21:49:18  61  ,aud_g13
21:49:18  62  ,aud_g14
21:49:18  63  ,aud_g15
21:49:18  64  ,aud_g16
21:49:18  65  ,aud_g17
21:49:18  66  ,aud_g18
21:49:18  67  ,aud_g19
21:49:18  68  ,aud_g20
21:49:18  69  ,aud_g21
21:49:18  70  ,aud_g22
21:49:18  71  ,aud_g23
21:49:18  72  ,aud_g24
21:49:18  73  ,aud_g25
21:49:18  74  ,aud_g26
21:49:18  75  ,aud_g27
21:49:18  76  ,aud_g28
21:49:18  77  ,aud_g29
21:49:18  78  ,aud_g30
21:49:18  79  ,aud_g31
21:49:18  80  ,aud_g32
21:49:18  81  ,aud_g33
21:49:18  82  ,aud_g34
21:49:18  83  ,aud_g35
21:49:18  84  ,aud_g36
21:49:18  85  ,aud_g37
21:49:18  86  ,aud_g38
21:49:18  87  ,aud_g39
21:49:18  88  ,aud_g40
21:49:18  89  ,aud_g41
21:49:18  90  ,gbp_g00
21:49:18  91  ,gbp_g01
21:49:18  92  ,gbp_g02
21:49:18  93  ,gbp_g03
21:49:18  94  ,gbp_g04
21:49:18  95  ,gbp_g05
21:49:18  96  ,gbp_g06
21:49:18  97  ,gbp_g07
21:49:18  98  ,gbp_g08
21:49:18  99  ,gbp_g09
21:49:18 100  ,gbp_g10
21:49:18 101  ,gbp_g11
21:49:18 102  ,gbp_g12
21:49:18 103  ,gbp_g13
21:49:18 104  ,gbp_g14
21:49:18 105  ,gbp_g15
21:49:18 106  ,gbp_g16
21:49:18 107  ,gbp_g17
21:49:18 108  ,gbp_g18
21:49:18 109  ,gbp_g19
21:49:18 110  ,gbp_g20
21:49:18 111  ,gbp_g21
21:49:18 112  ,gbp_g22
21:49:18 113  ,gbp_g23
21:49:18 114  ,gbp_g24
21:49:18 115  ,gbp_g25
21:49:18 116  ,gbp_g26
21:49:18 117  ,gbp_g27
21:49:18 118  ,gbp_g28
21:49:18 119  ,gbp_g29
21:49:18 120  ,gbp_g30
21:49:18 121  ,gbp_g31
21:49:18 122  ,gbp_g32
21:49:18 123  ,gbp_g33
21:49:18 124  ,gbp_g34
21:49:18 125  ,gbp_g35
21:49:18 126  ,gbp_g36
21:49:18 127  ,gbp_g37
21:49:18 128  ,gbp_g38
21:49:18 129  ,gbp_g39
21:49:18 130  ,gbp_g40
21:49:18 131  ,gbp_g41
21:49:18 132  ,jpy_g00
21:49:18 133  ,jpy_g01
21:49:18 134  ,jpy_g02
21:49:18 135  ,jpy_g03
21:49:18 136  ,jpy_g04
21:49:18 137  ,jpy_g05
21:49:18 138  ,jpy_g06
21:49:18 139  ,jpy_g07
21:49:18 140  ,jpy_g08
21:49:18 141  ,jpy_g09
21:49:18 142  ,jpy_g10
21:49:18 143  ,jpy_g11
21:49:18 144  ,jpy_g12
21:49:18 145  ,jpy_g13
21:49:18 146  ,jpy_g14
21:49:18 147  ,jpy_g15
21:49:18 148  ,jpy_g16
21:49:18 149  ,jpy_g17
21:49:18 150  ,jpy_g18
21:49:18 151  ,jpy_g19
21:49:18 152  ,jpy_g20
21:49:18 153  ,jpy_g21
21:49:18 154  ,jpy_g22
21:49:18 155  ,jpy_g23
21:49:18 156  ,jpy_g24
21:49:18 157  ,jpy_g25
21:49:18 158  ,jpy_g26
21:49:18 159  ,jpy_g27
21:49:18 160  ,jpy_g28
21:49:18 161  ,jpy_g29
21:49:18 162  ,jpy_g30
21:49:18 163  ,jpy_g31
21:49:18 164  ,jpy_g32
21:49:18 165  ,jpy_g33
21:49:18 166  ,jpy_g34
21:49:18 167  ,jpy_g35
21:49:18 168  ,jpy_g36
21:49:18 169  ,jpy_g37
21:49:18 170  ,jpy_g38
21:49:18 171  ,jpy_g39
21:49:18 172  ,jpy_g40
21:49:18 173  ,jpy_g41
21:49:18 174  ,cad_g00
21:49:18 175  ,cad_g01
21:49:18 176  ,cad_g02
21:49:18 177  ,cad_g03
21:49:18 178  ,cad_g04
21:49:18 179  ,cad_g05
21:49:18 180  ,cad_g06
21:49:18 181  ,cad_g07
21:49:18 182  ,cad_g08
21:49:18 183  ,cad_g09
21:49:18 184  ,cad_g10
21:49:18 185  ,cad_g11
21:49:18 186  ,cad_g12
21:49:18 187  ,cad_g13
21:49:18 188  ,cad_g14
21:49:18 189  ,cad_g15
21:49:18 190  ,cad_g16
21:49:18 191  ,cad_g17
21:49:18 192  ,cad_g18
21:49:18 193  ,cad_g19
21:49:18 194  ,cad_g20
21:49:18 195  ,cad_g21
21:49:18 196  ,cad_g22
21:49:18 197  ,cad_g23
21:49:18 198  ,cad_g24
21:49:18 199  ,cad_g25
21:49:18 200  ,cad_g26
21:49:18 201  ,cad_g27
21:49:18 202  ,cad_g28
21:49:18 203  ,cad_g29
21:49:18 204  ,cad_g30
21:49:18 205  ,cad_g31
21:49:18 206  ,cad_g32
21:49:18 207  ,cad_g33
21:49:18 208  ,cad_g34
21:49:18 209  ,cad_g35
21:49:18 210  ,cad_g36
21:49:18 211  ,cad_g37
21:49:18 212  ,cad_g38
21:49:18 213  ,cad_g39
21:49:18 214  ,cad_g40
21:49:18 215  ,cad_g41
21:49:18 216  ,chf_g00
21:49:18 217  ,chf_g01
21:49:18 218  ,chf_g02
21:49:18 219  ,chf_g03
21:49:18 220  ,chf_g04
21:49:18 221  ,chf_g05
21:49:18 222  ,chf_g06
21:49:18 223  ,chf_g07
21:49:18 224  ,chf_g08
21:49:18 225  ,chf_g09
21:49:18 226  ,chf_g10
21:49:18 227  ,chf_g11
21:49:18 228  ,chf_g12
21:49:18 229  ,chf_g13
21:49:18 230  ,chf_g14
21:49:18 231  ,chf_g15
21:49:18 232  ,chf_g16
21:49:18 233  ,chf_g17
21:49:18 234  ,chf_g18
21:49:18 235  ,chf_g19
21:49:18 236  ,chf_g20
21:49:18 237  ,chf_g21
21:49:18 238  ,chf_g22
21:49:18 239  ,chf_g23
21:49:18 240  ,chf_g24
21:49:18 241  ,chf_g25
21:49:18 242  ,chf_g26
21:49:18 243  ,chf_g27
21:49:18 244  ,chf_g28
21:49:18 245  ,chf_g29
21:49:18 246  ,chf_g30
21:49:18 247  ,chf_g31
21:49:18 248  ,chf_g32
21:49:18 249  ,chf_g33
21:49:18 250  ,chf_g34
21:49:18 251  ,chf_g35
21:49:18 252  ,chf_g36
21:49:18 253  ,chf_g37
21:49:18 254  ,chf_g38
21:49:18 255  ,chf_g39
21:49:18 256  ,chf_g40
21:49:18 257  ,chf_g41
21:49:18 258  FROM aud_ms6 m
21:49:18 259  WHERE gatt IN('nup','up')
21:49:18 260  AND 1+m.ydate < '&1'||' '||'&2'
21:49:18 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'21:25:00'

View created.

Elapsed: 00:00:00.27
21:49:19 SQL> 
21:49:19 SQL> -- rpt
21:49:19 SQL> 
21:49:19 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
21:49:19   2  
21:49:19 SQL> SELECT MAX(prdate) FROM bme
21:49:19   2  
21:49:19 SQL> -- Now build model from bme and score sme
21:49:19 SQL> @score1.sql
21:49:19 SQL> -- score1.sql
21:49:19 SQL> 
21:49:19 SQL> -- Does the 1st SVM score
21:49:19 SQL> 
21:49:19 SQL> -- Fill up svmc_apply_prep
21:49:19 SQL> @score.sql
21:49:19 SQL> --
21:49:19 SQL> -- score.sql
21:49:19 SQL> --
21:49:19 SQL> 
21:49:19 SQL> -- usage: score.sql
21:49:19 SQL> 
21:49:19 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:49:19 SQL> 
21:49:19 SQL> DEFINE target	= 'gatt'
21:49:19 SQL> DEFINE model_name = 'forex14'
21:49:19 SQL> DEFINE bldtable	= 'bme'
21:49:19 SQL> DEFINE scoretable = 'sme'
21:49:19 SQL> DEFINE case_id	= 'prdate'
21:49:19 SQL> 
21:49:19 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:49:19 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:49:19 SQL> 
21:49:19 SQL> -- Builds an SVM model using pl/sql.
21:49:19 SQL> 
21:49:19 SQL> -----------------------------------------------------------------------
21:49:19 SQL> --			    BUILD THE MODEL
21:49:19 SQL> -----------------------------------------------------------------------
21:49:19 SQL> 
21:49:19 SQL> -- Cleanup old build data preparation objects for repeat runs
21:49:19 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
21:49:19 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:49:19 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
21:49:19 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
21:49:19 SQL> 
21:49:19 SQL> 
21:49:19 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:49:19 SQL> --
21:49:19 SQL> -- DROP	TABLE svmc_settings ;
21:49:19 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:49:19 SQL> -- DELETE svmc_settings;
21:49:19 SQL> 
21:49:19 SQL> -- The default classification algorithm is Naive Bayes. So override
21:49:19 SQL> -- this choice to SVM using a settings table.
21:49:19 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:49:19 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:49:19 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:49:19 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:49:19 SQL> -- models.
21:49:19 SQL> --
21:49:19 SQL> 
21:49:19 SQL> -- Do this once and then comment it out.
21:49:19 SQL> -- That makes script go faster.
21:49:19 SQL> -- BEGIN
21:49:19 SQL> -- -- Populate settings table
21:49:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:49:19 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:49:19 SQL> --
21:49:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:49:19 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:49:19 SQL> --
21:49:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:49:19 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:49:19 SQL> --   COMMIT;
21:49:19 SQL> -- END;
21:49:19 SQL> -- /
21:49:19 SQL> 
21:49:19 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:49:19 SQL> 
21:49:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:49:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:49:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:49:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:49:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:49:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:49:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:49:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:49:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:49:19 SQL> 
21:49:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:49:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:49:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:49:19 SQL> 
21:49:19 SQL> --------------------------------
21:49:19 SQL> -- PREPARE BUILD (TRAINING) DATA
21:49:19 SQL> --
21:49:19 SQL> 
21:49:19 SQL> -- 1. Missing Value treatment for all Predictors and
21:49:19 SQL> -- 2. Outlier Treatment and
21:49:19 SQL> -- 3. Normalization are performed below.
21:49:19 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:49:19 SQL> --    normalized here.
21:49:19 SQL> 
21:49:19 SQL> BEGIN
21:49:19   2  	-- Perform missing value treatment for all predictors
21:49:19   3  	-- create miss tables
21:49:19   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:49:19   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:49:19   6  
21:49:19   7  	-- populate miss tables
21:49:19   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:49:19   9  	  miss_table_name => 'svmc_miss_num',
21:49:19  10  	  data_table_name => '&bldtable',
21:49:19  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:49:19  12  
21:49:19  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:49:19  14  	  miss_table_name => 'svmc_miss_cat',
21:49:19  15  	  data_table_name => '&bldtable',
21:49:19  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:49:19  17  
21:49:19  18  	-- xform input data to replace missing values
21:49:19  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:49:19  20  	  miss_table_name => 'svmc_miss_num',
21:49:19  21  	  data_table_name => '&bldtable',
21:49:19  22  	  xform_view_name => 'xformed_build_miss_num');
21:49:19  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:49:19  24  	  miss_table_name => 'svmc_miss_cat',
21:49:19  25  	  data_table_name => '&bldtable',
21:49:19  26  	  xform_view_name => 'xformed_build_miss_cat');
21:49:19  27  
21:49:19  28  	-- Perform outlier treatment.
21:49:19  29  	-- create clip table
21:49:19  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:49:19  31  
21:49:19  32  	-- populate clip table
21:49:19  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:49:19  34  	  clip_table_name => 'svmc_clip',
21:49:19  35  	  data_table_name => '&bldtable',
21:49:19  36  	  tail_frac	  => 0.025,
21:49:19  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:49:19  38  
21:49:19  39  	-- xform input data to winsorized data
21:49:19  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:49:19  41  	  clip_table_name => 'svmc_clip',
21:49:19  42  	  data_table_name => '&bldtable',
21:49:19  43  	  xform_view_name => 'svmc_winsor');
21:49:19  44  
21:49:19  45  	-- create normalization table
21:49:19  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:49:19  47  
21:49:19  48  	-- populate normalization table based on winsorized data
21:49:19  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:49:19  50  	  norm_table_name => 'svmc_norm',
21:49:19  51  	  data_table_name => 'svmc_winsor',
21:49:19  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:49:19  53  
21:49:19  54  	-- normalize the original data
21:49:19  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:49:19  56  	  norm_table_name => 'svmc_norm',
21:49:19  57  	  data_table_name => '&bldtable',
21:49:19  58  	  xform_view_name => 'svmc_build_prep');
21:49:19  59  END;
21:49:19  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.30
21:49:37 SQL> 
21:49:37 SQL> ---------------------
21:49:37 SQL> -- CREATE A NEW MODEL
21:49:37 SQL> --
21:49:37 SQL> -- Cleanup old model with the same name for repeat runs
21:49:37 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:49:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:49:37   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.61
21:49:38 SQL> 
21:49:38 SQL> -- Build a new SVM Model
21:49:38 SQL> BEGIN
21:49:38   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:49:38   3  	  model_name	      => '&model_name',
21:49:38   4  	  mining_function     => dbms_data_mining.classification,
21:49:38   5  	  data_table_name     => 'svmc_build_prep',
21:49:38   6  	  case_id_column_name => '&case_id',
21:49:38   7  	  target_column_name  => '&target',
21:49:38   8  	  settings_table_name => 'svmc_settings');
21:49:38   9  END;
21:49:38  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.10
21:50:07 SQL> 
21:50:07 SQL> -----------------------------------------------------------------------
21:50:07 SQL> --			       APPLY/score THE MODEL
21:50:07 SQL> -----------------------------------------------------------------------
21:50:07 SQL> 
21:50:07 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:50:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:50:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:50:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:50:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:50:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:50:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:50:07 SQL> -----------------------
21:50:07 SQL> -- PREPARE SCORING DATA
21:50:07 SQL> --
21:50:07 SQL> -- If the data for model creation has been prepared, then the data
21:50:07 SQL> -- to be scored using the model must be prepared in the same manner
21:50:07 SQL> -- in order to obtain meaningful results.
21:50:07 SQL> --
21:50:07 SQL> -- 1. Missing Value treatment for all Predictors and
21:50:07 SQL> -- 2. Normalization
21:50:07 SQL> -- No outlier treatment will be performed during test and apply. The
21:50:07 SQL> -- normalization step is sufficient, since the normalization parameters
21:50:07 SQL> -- already capture the effects of outlier treatment done with build data.
21:50:07 SQL> --
21:50:07 SQL> BEGIN
21:50:07   2  	-- Xform Test data to replace missing values
21:50:07   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:50:07   4  	  miss_table_name => 'svmc_miss_num',
21:50:07   5  	  data_table_name => '&scoretable',
21:50:07   6  	  xform_view_name => 'xformed_apply_miss_num');
21:50:07   7  
21:50:07   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:50:07   9  	  miss_table_name => 'svmc_miss_cat',
21:50:07  10  	  data_table_name => '&scoretable',
21:50:07  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:50:07  12  
21:50:07  13  	-- Normalize the data to be scored
21:50:07  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:50:07  15  	  norm_table_name => 'svmc_norm',
21:50:07  16  	  data_table_name => '&scoretable',
21:50:07  17  	  xform_view_name => 'svmc_apply_prep');
21:50:07  18  END;
21:50:07  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
21:50:08 SQL> 
21:50:08 SQL> -- Use same model_name used in score.sql
21:50:08 SQL> DEFINE model_name = 'forex14'
21:50:08 SQL> 
21:50:08 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
21:50:08 SQL> 
21:50:08 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
21:50:08 SQL> 
21:50:08 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
21:50:08   2  SELECT
21:50:08   3  prdate
21:50:08   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:50:08   5  ,sysdate
21:50:08   6  ,SUBSTR(prdate,1,3)pair
21:50:08   7  ,SUBSTR(prdate,4,19)ydate
21:50:08   8  FROM svmc_apply_prep
21:50:08   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.19
21:50:09 SQL> @aud_score1day.sql  2010-12-31 21:30:00
21:50:09 SQL> --
21:50:09 SQL> -- aud_score1day.sql
21:50:09 SQL> --
21:50:09 SQL> 
21:50:09 SQL> CREATE OR REPLACE VIEW sme AS
21:50:09   2  SELECT
21:50:09   3  'aud'||m.ydate prdate
21:50:09   4  ,NULL gatt
21:50:09   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:50:09   6  ,eur_g00
21:50:09   7  ,eur_g01
21:50:09   8  ,eur_g02
21:50:09   9  ,eur_g03
21:50:09  10  ,eur_g04
21:50:09  11  ,eur_g05
21:50:09  12  ,eur_g06
21:50:09  13  ,eur_g07
21:50:09  14  ,eur_g08
21:50:09  15  ,eur_g09
21:50:09  16  ,eur_g10
21:50:09  17  ,eur_g11
21:50:09  18  ,eur_g12
21:50:09  19  ,eur_g13
21:50:09  20  ,eur_g14
21:50:09  21  ,eur_g15
21:50:09  22  ,eur_g16
21:50:09  23  ,eur_g17
21:50:09  24  ,eur_g18
21:50:09  25  ,eur_g19
21:50:09  26  ,eur_g20
21:50:09  27  ,eur_g21
21:50:09  28  ,eur_g22
21:50:09  29  ,eur_g23
21:50:09  30  ,eur_g24
21:50:09  31  ,eur_g25
21:50:09  32  ,eur_g26
21:50:09  33  ,eur_g27
21:50:09  34  ,eur_g28
21:50:09  35  ,eur_g29
21:50:09  36  ,eur_g30
21:50:09  37  ,eur_g31
21:50:09  38  ,eur_g32
21:50:09  39  ,eur_g33
21:50:09  40  ,eur_g34
21:50:09  41  ,eur_g35
21:50:09  42  ,eur_g36
21:50:09  43  ,eur_g37
21:50:09  44  ,eur_g38
21:50:09  45  ,eur_g39
21:50:09  46  ,eur_g40
21:50:09  47  ,eur_g41
21:50:09  48  ,aud_g00
21:50:09  49  ,aud_g01
21:50:09  50  ,aud_g02
21:50:09  51  ,aud_g03
21:50:09  52  ,aud_g04
21:50:09  53  ,aud_g05
21:50:09  54  ,aud_g06
21:50:09  55  ,aud_g07
21:50:09  56  ,aud_g08
21:50:09  57  ,aud_g09
21:50:09  58  ,aud_g10
21:50:09  59  ,aud_g11
21:50:09  60  ,aud_g12
21:50:09  61  ,aud_g13
21:50:09  62  ,aud_g14
21:50:09  63  ,aud_g15
21:50:09  64  ,aud_g16
21:50:09  65  ,aud_g17
21:50:09  66  ,aud_g18
21:50:09  67  ,aud_g19
21:50:09  68  ,aud_g20
21:50:09  69  ,aud_g21
21:50:09  70  ,aud_g22
21:50:09  71  ,aud_g23
21:50:09  72  ,aud_g24
21:50:09  73  ,aud_g25
21:50:09  74  ,aud_g26
21:50:09  75  ,aud_g27
21:50:09  76  ,aud_g28
21:50:09  77  ,aud_g29
21:50:09  78  ,aud_g30
21:50:09  79  ,aud_g31
21:50:09  80  ,aud_g32
21:50:09  81  ,aud_g33
21:50:09  82  ,aud_g34
21:50:09  83  ,aud_g35
21:50:09  84  ,aud_g36
21:50:09  85  ,aud_g37
21:50:09  86  ,aud_g38
21:50:09  87  ,aud_g39
21:50:09  88  ,aud_g40
21:50:09  89  ,aud_g41
21:50:09  90  ,gbp_g00
21:50:09  91  ,gbp_g01
21:50:09  92  ,gbp_g02
21:50:09  93  ,gbp_g03
21:50:09  94  ,gbp_g04
21:50:09  95  ,gbp_g05
21:50:09  96  ,gbp_g06
21:50:09  97  ,gbp_g07
21:50:09  98  ,gbp_g08
21:50:09  99  ,gbp_g09
21:50:09 100  ,gbp_g10
21:50:09 101  ,gbp_g11
21:50:09 102  ,gbp_g12
21:50:09 103  ,gbp_g13
21:50:09 104  ,gbp_g14
21:50:09 105  ,gbp_g15
21:50:09 106  ,gbp_g16
21:50:09 107  ,gbp_g17
21:50:09 108  ,gbp_g18
21:50:09 109  ,gbp_g19
21:50:09 110  ,gbp_g20
21:50:09 111  ,gbp_g21
21:50:09 112  ,gbp_g22
21:50:09 113  ,gbp_g23
21:50:09 114  ,gbp_g24
21:50:09 115  ,gbp_g25
21:50:09 116  ,gbp_g26
21:50:09 117  ,gbp_g27
21:50:09 118  ,gbp_g28
21:50:09 119  ,gbp_g29
21:50:09 120  ,gbp_g30
21:50:09 121  ,gbp_g31
21:50:09 122  ,gbp_g32
21:50:09 123  ,gbp_g33
21:50:09 124  ,gbp_g34
21:50:09 125  ,gbp_g35
21:50:09 126  ,gbp_g36
21:50:09 127  ,gbp_g37
21:50:09 128  ,gbp_g38
21:50:09 129  ,gbp_g39
21:50:09 130  ,gbp_g40
21:50:09 131  ,gbp_g41
21:50:09 132  ,jpy_g00
21:50:09 133  ,jpy_g01
21:50:09 134  ,jpy_g02
21:50:09 135  ,jpy_g03
21:50:09 136  ,jpy_g04
21:50:09 137  ,jpy_g05
21:50:09 138  ,jpy_g06
21:50:09 139  ,jpy_g07
21:50:09 140  ,jpy_g08
21:50:09 141  ,jpy_g09
21:50:09 142  ,jpy_g10
21:50:09 143  ,jpy_g11
21:50:09 144  ,jpy_g12
21:50:09 145  ,jpy_g13
21:50:09 146  ,jpy_g14
21:50:09 147  ,jpy_g15
21:50:09 148  ,jpy_g16
21:50:09 149  ,jpy_g17
21:50:09 150  ,jpy_g18
21:50:09 151  ,jpy_g19
21:50:09 152  ,jpy_g20
21:50:09 153  ,jpy_g21
21:50:09 154  ,jpy_g22
21:50:09 155  ,jpy_g23
21:50:09 156  ,jpy_g24
21:50:09 157  ,jpy_g25
21:50:09 158  ,jpy_g26
21:50:09 159  ,jpy_g27
21:50:09 160  ,jpy_g28
21:50:09 161  ,jpy_g29
21:50:09 162  ,jpy_g30
21:50:09 163  ,jpy_g31
21:50:09 164  ,jpy_g32
21:50:09 165  ,jpy_g33
21:50:09 166  ,jpy_g34
21:50:09 167  ,jpy_g35
21:50:09 168  ,jpy_g36
21:50:09 169  ,jpy_g37
21:50:09 170  ,jpy_g38
21:50:09 171  ,jpy_g39
21:50:09 172  ,jpy_g40
21:50:09 173  ,jpy_g41
21:50:09 174  ,cad_g00
21:50:09 175  ,cad_g01
21:50:09 176  ,cad_g02
21:50:09 177  ,cad_g03
21:50:09 178  ,cad_g04
21:50:09 179  ,cad_g05
21:50:09 180  ,cad_g06
21:50:09 181  ,cad_g07
21:50:09 182  ,cad_g08
21:50:09 183  ,cad_g09
21:50:09 184  ,cad_g10
21:50:09 185  ,cad_g11
21:50:09 186  ,cad_g12
21:50:09 187  ,cad_g13
21:50:09 188  ,cad_g14
21:50:09 189  ,cad_g15
21:50:09 190  ,cad_g16
21:50:09 191  ,cad_g17
21:50:09 192  ,cad_g18
21:50:09 193  ,cad_g19
21:50:09 194  ,cad_g20
21:50:09 195  ,cad_g21
21:50:09 196  ,cad_g22
21:50:09 197  ,cad_g23
21:50:09 198  ,cad_g24
21:50:09 199  ,cad_g25
21:50:09 200  ,cad_g26
21:50:09 201  ,cad_g27
21:50:09 202  ,cad_g28
21:50:09 203  ,cad_g29
21:50:09 204  ,cad_g30
21:50:09 205  ,cad_g31
21:50:09 206  ,cad_g32
21:50:09 207  ,cad_g33
21:50:09 208  ,cad_g34
21:50:09 209  ,cad_g35
21:50:09 210  ,cad_g36
21:50:09 211  ,cad_g37
21:50:09 212  ,cad_g38
21:50:09 213  ,cad_g39
21:50:09 214  ,cad_g40
21:50:09 215  ,cad_g41
21:50:09 216  ,chf_g00
21:50:09 217  ,chf_g01
21:50:09 218  ,chf_g02
21:50:09 219  ,chf_g03
21:50:09 220  ,chf_g04
21:50:09 221  ,chf_g05
21:50:09 222  ,chf_g06
21:50:09 223  ,chf_g07
21:50:09 224  ,chf_g08
21:50:09 225  ,chf_g09
21:50:09 226  ,chf_g10
21:50:09 227  ,chf_g11
21:50:09 228  ,chf_g12
21:50:09 229  ,chf_g13
21:50:09 230  ,chf_g14
21:50:09 231  ,chf_g15
21:50:09 232  ,chf_g16
21:50:09 233  ,chf_g17
21:50:09 234  ,chf_g18
21:50:09 235  ,chf_g19
21:50:09 236  ,chf_g20
21:50:09 237  ,chf_g21
21:50:09 238  ,chf_g22
21:50:09 239  ,chf_g23
21:50:09 240  ,chf_g24
21:50:09 241  ,chf_g25
21:50:09 242  ,chf_g26
21:50:09 243  ,chf_g27
21:50:09 244  ,chf_g28
21:50:09 245  ,chf_g29
21:50:09 246  ,chf_g30
21:50:09 247  ,chf_g31
21:50:09 248  ,chf_g32
21:50:09 249  ,chf_g33
21:50:09 250  ,chf_g34
21:50:09 251  ,chf_g35
21:50:09 252  ,chf_g36
21:50:09 253  ,chf_g37
21:50:09 254  ,chf_g38
21:50:09 255  ,chf_g39
21:50:09 256  ,chf_g40
21:50:09 257  ,chf_g41
21:50:09 258  FROM aud_ms6 m
21:50:09 259  WHERE m.ydate = '&1'||' '||'&2'
21:50:09 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'21:30:00'

View created.

Elapsed: 00:00:00.13
21:50:09 SQL> 
21:50:09 SQL> -- rpt
21:50:09 SQL> -- We should see just 1 row:
21:50:09 SQL> 
21:50:09 SQL> SELECT COUNT(prdate) FROM sme
21:50:09   2  
21:50:09 SQL> -- Build the model:
21:50:09 SQL> CREATE OR REPLACE VIEW bme AS
21:50:09   2  SELECT
21:50:09   3  'aud'||m.ydate prdate
21:50:09   4  ,gatt
21:50:09   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:50:09   6  ,eur_g00
21:50:09   7  ,eur_g01
21:50:09   8  ,eur_g02
21:50:09   9  ,eur_g03
21:50:09  10  ,eur_g04
21:50:09  11  ,eur_g05
21:50:09  12  ,eur_g06
21:50:09  13  ,eur_g07
21:50:09  14  ,eur_g08
21:50:09  15  ,eur_g09
21:50:09  16  ,eur_g10
21:50:09  17  ,eur_g11
21:50:09  18  ,eur_g12
21:50:09  19  ,eur_g13
21:50:09  20  ,eur_g14
21:50:09  21  ,eur_g15
21:50:09  22  ,eur_g16
21:50:09  23  ,eur_g17
21:50:09  24  ,eur_g18
21:50:09  25  ,eur_g19
21:50:09  26  ,eur_g20
21:50:09  27  ,eur_g21
21:50:09  28  ,eur_g22
21:50:09  29  ,eur_g23
21:50:09  30  ,eur_g24
21:50:09  31  ,eur_g25
21:50:09  32  ,eur_g26
21:50:09  33  ,eur_g27
21:50:09  34  ,eur_g28
21:50:09  35  ,eur_g29
21:50:09  36  ,eur_g30
21:50:09  37  ,eur_g31
21:50:09  38  ,eur_g32
21:50:09  39  ,eur_g33
21:50:09  40  ,eur_g34
21:50:09  41  ,eur_g35
21:50:09  42  ,eur_g36
21:50:09  43  ,eur_g37
21:50:09  44  ,eur_g38
21:50:09  45  ,eur_g39
21:50:09  46  ,eur_g40
21:50:09  47  ,eur_g41
21:50:09  48  ,aud_g00
21:50:09  49  ,aud_g01
21:50:09  50  ,aud_g02
21:50:09  51  ,aud_g03
21:50:09  52  ,aud_g04
21:50:09  53  ,aud_g05
21:50:09  54  ,aud_g06
21:50:09  55  ,aud_g07
21:50:09  56  ,aud_g08
21:50:09  57  ,aud_g09
21:50:09  58  ,aud_g10
21:50:09  59  ,aud_g11
21:50:09  60  ,aud_g12
21:50:09  61  ,aud_g13
21:50:09  62  ,aud_g14
21:50:09  63  ,aud_g15
21:50:09  64  ,aud_g16
21:50:09  65  ,aud_g17
21:50:09  66  ,aud_g18
21:50:09  67  ,aud_g19
21:50:09  68  ,aud_g20
21:50:09  69  ,aud_g21
21:50:09  70  ,aud_g22
21:50:09  71  ,aud_g23
21:50:09  72  ,aud_g24
21:50:09  73  ,aud_g25
21:50:09  74  ,aud_g26
21:50:09  75  ,aud_g27
21:50:09  76  ,aud_g28
21:50:09  77  ,aud_g29
21:50:09  78  ,aud_g30
21:50:09  79  ,aud_g31
21:50:09  80  ,aud_g32
21:50:09  81  ,aud_g33
21:50:09  82  ,aud_g34
21:50:09  83  ,aud_g35
21:50:09  84  ,aud_g36
21:50:09  85  ,aud_g37
21:50:09  86  ,aud_g38
21:50:09  87  ,aud_g39
21:50:09  88  ,aud_g40
21:50:09  89  ,aud_g41
21:50:09  90  ,gbp_g00
21:50:09  91  ,gbp_g01
21:50:09  92  ,gbp_g02
21:50:09  93  ,gbp_g03
21:50:09  94  ,gbp_g04
21:50:09  95  ,gbp_g05
21:50:09  96  ,gbp_g06
21:50:09  97  ,gbp_g07
21:50:09  98  ,gbp_g08
21:50:09  99  ,gbp_g09
21:50:09 100  ,gbp_g10
21:50:09 101  ,gbp_g11
21:50:09 102  ,gbp_g12
21:50:09 103  ,gbp_g13
21:50:09 104  ,gbp_g14
21:50:09 105  ,gbp_g15
21:50:09 106  ,gbp_g16
21:50:09 107  ,gbp_g17
21:50:09 108  ,gbp_g18
21:50:09 109  ,gbp_g19
21:50:09 110  ,gbp_g20
21:50:09 111  ,gbp_g21
21:50:09 112  ,gbp_g22
21:50:09 113  ,gbp_g23
21:50:09 114  ,gbp_g24
21:50:09 115  ,gbp_g25
21:50:09 116  ,gbp_g26
21:50:09 117  ,gbp_g27
21:50:09 118  ,gbp_g28
21:50:09 119  ,gbp_g29
21:50:09 120  ,gbp_g30
21:50:09 121  ,gbp_g31
21:50:09 122  ,gbp_g32
21:50:09 123  ,gbp_g33
21:50:09 124  ,gbp_g34
21:50:09 125  ,gbp_g35
21:50:09 126  ,gbp_g36
21:50:09 127  ,gbp_g37
21:50:09 128  ,gbp_g38
21:50:09 129  ,gbp_g39
21:50:09 130  ,gbp_g40
21:50:09 131  ,gbp_g41
21:50:09 132  ,jpy_g00
21:50:09 133  ,jpy_g01
21:50:09 134  ,jpy_g02
21:50:09 135  ,jpy_g03
21:50:09 136  ,jpy_g04
21:50:09 137  ,jpy_g05
21:50:09 138  ,jpy_g06
21:50:09 139  ,jpy_g07
21:50:09 140  ,jpy_g08
21:50:09 141  ,jpy_g09
21:50:09 142  ,jpy_g10
21:50:09 143  ,jpy_g11
21:50:09 144  ,jpy_g12
21:50:09 145  ,jpy_g13
21:50:09 146  ,jpy_g14
21:50:09 147  ,jpy_g15
21:50:09 148  ,jpy_g16
21:50:09 149  ,jpy_g17
21:50:09 150  ,jpy_g18
21:50:09 151  ,jpy_g19
21:50:09 152  ,jpy_g20
21:50:09 153  ,jpy_g21
21:50:09 154  ,jpy_g22
21:50:09 155  ,jpy_g23
21:50:09 156  ,jpy_g24
21:50:09 157  ,jpy_g25
21:50:09 158  ,jpy_g26
21:50:09 159  ,jpy_g27
21:50:09 160  ,jpy_g28
21:50:09 161  ,jpy_g29
21:50:09 162  ,jpy_g30
21:50:09 163  ,jpy_g31
21:50:09 164  ,jpy_g32
21:50:09 165  ,jpy_g33
21:50:09 166  ,jpy_g34
21:50:09 167  ,jpy_g35
21:50:09 168  ,jpy_g36
21:50:09 169  ,jpy_g37
21:50:09 170  ,jpy_g38
21:50:09 171  ,jpy_g39
21:50:09 172  ,jpy_g40
21:50:09 173  ,jpy_g41
21:50:09 174  ,cad_g00
21:50:09 175  ,cad_g01
21:50:09 176  ,cad_g02
21:50:09 177  ,cad_g03
21:50:09 178  ,cad_g04
21:50:09 179  ,cad_g05
21:50:09 180  ,cad_g06
21:50:09 181  ,cad_g07
21:50:09 182  ,cad_g08
21:50:09 183  ,cad_g09
21:50:09 184  ,cad_g10
21:50:09 185  ,cad_g11
21:50:09 186  ,cad_g12
21:50:09 187  ,cad_g13
21:50:09 188  ,cad_g14
21:50:09 189  ,cad_g15
21:50:09 190  ,cad_g16
21:50:09 191  ,cad_g17
21:50:09 192  ,cad_g18
21:50:09 193  ,cad_g19
21:50:09 194  ,cad_g20
21:50:09 195  ,cad_g21
21:50:09 196  ,cad_g22
21:50:09 197  ,cad_g23
21:50:09 198  ,cad_g24
21:50:09 199  ,cad_g25
21:50:09 200  ,cad_g26
21:50:09 201  ,cad_g27
21:50:09 202  ,cad_g28
21:50:09 203  ,cad_g29
21:50:09 204  ,cad_g30
21:50:09 205  ,cad_g31
21:50:09 206  ,cad_g32
21:50:09 207  ,cad_g33
21:50:09 208  ,cad_g34
21:50:09 209  ,cad_g35
21:50:09 210  ,cad_g36
21:50:09 211  ,cad_g37
21:50:09 212  ,cad_g38
21:50:09 213  ,cad_g39
21:50:09 214  ,cad_g40
21:50:09 215  ,cad_g41
21:50:09 216  ,chf_g00
21:50:09 217  ,chf_g01
21:50:09 218  ,chf_g02
21:50:09 219  ,chf_g03
21:50:09 220  ,chf_g04
21:50:09 221  ,chf_g05
21:50:09 222  ,chf_g06
21:50:09 223  ,chf_g07
21:50:09 224  ,chf_g08
21:50:09 225  ,chf_g09
21:50:09 226  ,chf_g10
21:50:09 227  ,chf_g11
21:50:09 228  ,chf_g12
21:50:09 229  ,chf_g13
21:50:09 230  ,chf_g14
21:50:09 231  ,chf_g15
21:50:09 232  ,chf_g16
21:50:09 233  ,chf_g17
21:50:09 234  ,chf_g18
21:50:09 235  ,chf_g19
21:50:09 236  ,chf_g20
21:50:09 237  ,chf_g21
21:50:09 238  ,chf_g22
21:50:09 239  ,chf_g23
21:50:09 240  ,chf_g24
21:50:09 241  ,chf_g25
21:50:09 242  ,chf_g26
21:50:09 243  ,chf_g27
21:50:09 244  ,chf_g28
21:50:09 245  ,chf_g29
21:50:09 246  ,chf_g30
21:50:09 247  ,chf_g31
21:50:09 248  ,chf_g32
21:50:09 249  ,chf_g33
21:50:09 250  ,chf_g34
21:50:09 251  ,chf_g35
21:50:09 252  ,chf_g36
21:50:09 253  ,chf_g37
21:50:09 254  ,chf_g38
21:50:09 255  ,chf_g39
21:50:09 256  ,chf_g40
21:50:09 257  ,chf_g41
21:50:09 258  FROM aud_ms6 m
21:50:09 259  WHERE gatt IN('nup','up')
21:50:09 260  AND 1+m.ydate < '&1'||' '||'&2'
21:50:09 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'21:30:00'

View created.

Elapsed: 00:00:00.12
21:50:09 SQL> 
21:50:09 SQL> -- rpt
21:50:09 SQL> 
21:50:09 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
21:50:09   2  
21:50:09 SQL> SELECT MAX(prdate) FROM bme
21:50:09   2  
21:50:09 SQL> -- Now build model from bme and score sme
21:50:09 SQL> @score1.sql
21:50:09 SQL> -- score1.sql
21:50:09 SQL> 
21:50:09 SQL> -- Does the 1st SVM score
21:50:09 SQL> 
21:50:09 SQL> -- Fill up svmc_apply_prep
21:50:09 SQL> @score.sql
21:50:09 SQL> --
21:50:09 SQL> -- score.sql
21:50:09 SQL> --
21:50:09 SQL> 
21:50:09 SQL> -- usage: score.sql
21:50:09 SQL> 
21:50:09 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:50:09 SQL> 
21:50:09 SQL> DEFINE target	= 'gatt'
21:50:09 SQL> DEFINE model_name = 'forex14'
21:50:09 SQL> DEFINE bldtable	= 'bme'
21:50:09 SQL> DEFINE scoretable = 'sme'
21:50:09 SQL> DEFINE case_id	= 'prdate'
21:50:09 SQL> 
21:50:09 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:50:09 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:50:09 SQL> 
21:50:09 SQL> -- Builds an SVM model using pl/sql.
21:50:09 SQL> 
21:50:09 SQL> -----------------------------------------------------------------------
21:50:09 SQL> --			    BUILD THE MODEL
21:50:09 SQL> -----------------------------------------------------------------------
21:50:09 SQL> 
21:50:09 SQL> -- Cleanup old build data preparation objects for repeat runs
21:50:09 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
21:50:09 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:50:09 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
21:50:09 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
21:50:09 SQL> 
21:50:09 SQL> 
21:50:09 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:50:09 SQL> --
21:50:09 SQL> -- DROP	TABLE svmc_settings ;
21:50:09 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:50:09 SQL> -- DELETE svmc_settings;
21:50:09 SQL> 
21:50:09 SQL> -- The default classification algorithm is Naive Bayes. So override
21:50:09 SQL> -- this choice to SVM using a settings table.
21:50:09 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:50:09 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:50:09 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:50:09 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:50:09 SQL> -- models.
21:50:09 SQL> --
21:50:09 SQL> 
21:50:09 SQL> -- Do this once and then comment it out.
21:50:09 SQL> -- That makes script go faster.
21:50:09 SQL> -- BEGIN
21:50:09 SQL> -- -- Populate settings table
21:50:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:50:09 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:50:09 SQL> --
21:50:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:50:09 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:50:09 SQL> --
21:50:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:50:09 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:50:09 SQL> --   COMMIT;
21:50:09 SQL> -- END;
21:50:09 SQL> -- /
21:50:09 SQL> 
21:50:09 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:50:09 SQL> 
21:50:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:50:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:50:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:50:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:50:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:50:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:50:09 SQL> 
21:50:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:50:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:50:09 SQL> 
21:50:09 SQL> --------------------------------
21:50:09 SQL> -- PREPARE BUILD (TRAINING) DATA
21:50:09 SQL> --
21:50:09 SQL> 
21:50:09 SQL> -- 1. Missing Value treatment for all Predictors and
21:50:09 SQL> -- 2. Outlier Treatment and
21:50:09 SQL> -- 3. Normalization are performed below.
21:50:09 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:50:09 SQL> --    normalized here.
21:50:09 SQL> 
21:50:09 SQL> BEGIN
21:50:09   2  	-- Perform missing value treatment for all predictors
21:50:09   3  	-- create miss tables
21:50:09   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:50:09   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:50:09   6  
21:50:09   7  	-- populate miss tables
21:50:09   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:50:09   9  	  miss_table_name => 'svmc_miss_num',
21:50:09  10  	  data_table_name => '&bldtable',
21:50:09  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:50:09  12  
21:50:09  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:50:09  14  	  miss_table_name => 'svmc_miss_cat',
21:50:09  15  	  data_table_name => '&bldtable',
21:50:09  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:50:09  17  
21:50:09  18  	-- xform input data to replace missing values
21:50:09  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:50:09  20  	  miss_table_name => 'svmc_miss_num',
21:50:09  21  	  data_table_name => '&bldtable',
21:50:09  22  	  xform_view_name => 'xformed_build_miss_num');
21:50:09  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:50:09  24  	  miss_table_name => 'svmc_miss_cat',
21:50:09  25  	  data_table_name => '&bldtable',
21:50:09  26  	  xform_view_name => 'xformed_build_miss_cat');
21:50:09  27  
21:50:09  28  	-- Perform outlier treatment.
21:50:09  29  	-- create clip table
21:50:09  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:50:09  31  
21:50:09  32  	-- populate clip table
21:50:09  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:50:09  34  	  clip_table_name => 'svmc_clip',
21:50:09  35  	  data_table_name => '&bldtable',
21:50:09  36  	  tail_frac	  => 0.025,
21:50:09  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:50:09  38  
21:50:09  39  	-- xform input data to winsorized data
21:50:09  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:50:09  41  	  clip_table_name => 'svmc_clip',
21:50:09  42  	  data_table_name => '&bldtable',
21:50:09  43  	  xform_view_name => 'svmc_winsor');
21:50:09  44  
21:50:09  45  	-- create normalization table
21:50:09  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:50:09  47  
21:50:09  48  	-- populate normalization table based on winsorized data
21:50:09  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:50:09  50  	  norm_table_name => 'svmc_norm',
21:50:09  51  	  data_table_name => 'svmc_winsor',
21:50:09  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:50:09  53  
21:50:09  54  	-- normalize the original data
21:50:09  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:50:09  56  	  norm_table_name => 'svmc_norm',
21:50:09  57  	  data_table_name => '&bldtable',
21:50:09  58  	  xform_view_name => 'svmc_build_prep');
21:50:09  59  END;
21:50:09  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.24
21:50:27 SQL> 
21:50:27 SQL> ---------------------
21:50:27 SQL> -- CREATE A NEW MODEL
21:50:27 SQL> --
21:50:27 SQL> -- Cleanup old model with the same name for repeat runs
21:50:27 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:50:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:27   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.95
21:50:28 SQL> 
21:50:28 SQL> -- Build a new SVM Model
21:50:28 SQL> BEGIN
21:50:28   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:50:28   3  	  model_name	      => '&model_name',
21:50:28   4  	  mining_function     => dbms_data_mining.classification,
21:50:28   5  	  data_table_name     => 'svmc_build_prep',
21:50:28   6  	  case_id_column_name => '&case_id',
21:50:28   7  	  target_column_name  => '&target',
21:50:28   8  	  settings_table_name => 'svmc_settings');
21:50:28   9  END;
21:50:28  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.01
21:50:57 SQL> 
21:50:57 SQL> -----------------------------------------------------------------------
21:50:57 SQL> --			       APPLY/score THE MODEL
21:50:57 SQL> -----------------------------------------------------------------------
21:50:57 SQL> 
21:50:57 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:50:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:50:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:50:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:50:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:50:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:50:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:50:58 SQL> -----------------------
21:50:58 SQL> -- PREPARE SCORING DATA
21:50:58 SQL> --
21:50:58 SQL> -- If the data for model creation has been prepared, then the data
21:50:58 SQL> -- to be scored using the model must be prepared in the same manner
21:50:58 SQL> -- in order to obtain meaningful results.
21:50:58 SQL> --
21:50:58 SQL> -- 1. Missing Value treatment for all Predictors and
21:50:58 SQL> -- 2. Normalization
21:50:58 SQL> -- No outlier treatment will be performed during test and apply. The
21:50:58 SQL> -- normalization step is sufficient, since the normalization parameters
21:50:58 SQL> -- already capture the effects of outlier treatment done with build data.
21:50:58 SQL> --
21:50:58 SQL> BEGIN
21:50:58   2  	-- Xform Test data to replace missing values
21:50:58   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:50:58   4  	  miss_table_name => 'svmc_miss_num',
21:50:58   5  	  data_table_name => '&scoretable',
21:50:58   6  	  xform_view_name => 'xformed_apply_miss_num');
21:50:58   7  
21:50:58   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:50:58   9  	  miss_table_name => 'svmc_miss_cat',
21:50:58  10  	  data_table_name => '&scoretable',
21:50:58  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:50:58  12  
21:50:58  13  	-- Normalize the data to be scored
21:50:58  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:50:58  15  	  norm_table_name => 'svmc_norm',
21:50:58  16  	  data_table_name => '&scoretable',
21:50:58  17  	  xform_view_name => 'svmc_apply_prep');
21:50:58  18  END;
21:50:58  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
21:50:59 SQL> 
21:50:59 SQL> -- Use same model_name used in score.sql
21:50:59 SQL> DEFINE model_name = 'forex14'
21:50:59 SQL> 
21:50:59 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
21:50:59 SQL> 
21:50:59 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:50:59 SQL> 
21:50:59 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
21:50:59   2  SELECT
21:50:59   3  prdate
21:50:59   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:50:59   5  ,sysdate
21:50:59   6  ,SUBSTR(prdate,1,3)pair
21:50:59   7  ,SUBSTR(prdate,4,19)ydate
21:50:59   8  FROM svmc_apply_prep
21:50:59   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:50:59 SQL> @aud_score1day.sql  2010-12-31 21:35:00
21:50:59 SQL> --
21:50:59 SQL> -- aud_score1day.sql
21:50:59 SQL> --
21:50:59 SQL> 
21:50:59 SQL> CREATE OR REPLACE VIEW sme AS
21:50:59   2  SELECT
21:50:59   3  'aud'||m.ydate prdate
21:50:59   4  ,NULL gatt
21:50:59   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:50:59   6  ,eur_g00
21:50:59   7  ,eur_g01
21:50:59   8  ,eur_g02
21:50:59   9  ,eur_g03
21:50:59  10  ,eur_g04
21:50:59  11  ,eur_g05
21:50:59  12  ,eur_g06
21:50:59  13  ,eur_g07
21:50:59  14  ,eur_g08
21:50:59  15  ,eur_g09
21:50:59  16  ,eur_g10
21:50:59  17  ,eur_g11
21:50:59  18  ,eur_g12
21:50:59  19  ,eur_g13
21:50:59  20  ,eur_g14
21:50:59  21  ,eur_g15
21:50:59  22  ,eur_g16
21:50:59  23  ,eur_g17
21:50:59  24  ,eur_g18
21:50:59  25  ,eur_g19
21:50:59  26  ,eur_g20
21:50:59  27  ,eur_g21
21:50:59  28  ,eur_g22
21:50:59  29  ,eur_g23
21:50:59  30  ,eur_g24
21:50:59  31  ,eur_g25
21:50:59  32  ,eur_g26
21:50:59  33  ,eur_g27
21:50:59  34  ,eur_g28
21:50:59  35  ,eur_g29
21:50:59  36  ,eur_g30
21:50:59  37  ,eur_g31
21:50:59  38  ,eur_g32
21:50:59  39  ,eur_g33
21:50:59  40  ,eur_g34
21:50:59  41  ,eur_g35
21:50:59  42  ,eur_g36
21:50:59  43  ,eur_g37
21:50:59  44  ,eur_g38
21:50:59  45  ,eur_g39
21:50:59  46  ,eur_g40
21:50:59  47  ,eur_g41
21:50:59  48  ,aud_g00
21:50:59  49  ,aud_g01
21:50:59  50  ,aud_g02
21:50:59  51  ,aud_g03
21:50:59  52  ,aud_g04
21:50:59  53  ,aud_g05
21:50:59  54  ,aud_g06
21:50:59  55  ,aud_g07
21:50:59  56  ,aud_g08
21:50:59  57  ,aud_g09
21:50:59  58  ,aud_g10
21:50:59  59  ,aud_g11
21:50:59  60  ,aud_g12
21:50:59  61  ,aud_g13
21:50:59  62  ,aud_g14
21:50:59  63  ,aud_g15
21:50:59  64  ,aud_g16
21:50:59  65  ,aud_g17
21:50:59  66  ,aud_g18
21:50:59  67  ,aud_g19
21:50:59  68  ,aud_g20
21:50:59  69  ,aud_g21
21:50:59  70  ,aud_g22
21:50:59  71  ,aud_g23
21:50:59  72  ,aud_g24
21:50:59  73  ,aud_g25
21:50:59  74  ,aud_g26
21:50:59  75  ,aud_g27
21:50:59  76  ,aud_g28
21:50:59  77  ,aud_g29
21:50:59  78  ,aud_g30
21:50:59  79  ,aud_g31
21:50:59  80  ,aud_g32
21:50:59  81  ,aud_g33
21:50:59  82  ,aud_g34
21:50:59  83  ,aud_g35
21:50:59  84  ,aud_g36
21:50:59  85  ,aud_g37
21:50:59  86  ,aud_g38
21:50:59  87  ,aud_g39
21:50:59  88  ,aud_g40
21:50:59  89  ,aud_g41
21:50:59  90  ,gbp_g00
21:50:59  91  ,gbp_g01
21:50:59  92  ,gbp_g02
21:50:59  93  ,gbp_g03
21:50:59  94  ,gbp_g04
21:50:59  95  ,gbp_g05
21:50:59  96  ,gbp_g06
21:50:59  97  ,gbp_g07
21:50:59  98  ,gbp_g08
21:50:59  99  ,gbp_g09
21:50:59 100  ,gbp_g10
21:50:59 101  ,gbp_g11
21:50:59 102  ,gbp_g12
21:50:59 103  ,gbp_g13
21:50:59 104  ,gbp_g14
21:50:59 105  ,gbp_g15
21:50:59 106  ,gbp_g16
21:50:59 107  ,gbp_g17
21:50:59 108  ,gbp_g18
21:50:59 109  ,gbp_g19
21:50:59 110  ,gbp_g20
21:50:59 111  ,gbp_g21
21:50:59 112  ,gbp_g22
21:50:59 113  ,gbp_g23
21:50:59 114  ,gbp_g24
21:50:59 115  ,gbp_g25
21:50:59 116  ,gbp_g26
21:50:59 117  ,gbp_g27
21:50:59 118  ,gbp_g28
21:50:59 119  ,gbp_g29
21:50:59 120  ,gbp_g30
21:50:59 121  ,gbp_g31
21:50:59 122  ,gbp_g32
21:50:59 123  ,gbp_g33
21:50:59 124  ,gbp_g34
21:50:59 125  ,gbp_g35
21:50:59 126  ,gbp_g36
21:50:59 127  ,gbp_g37
21:50:59 128  ,gbp_g38
21:50:59 129  ,gbp_g39
21:50:59 130  ,gbp_g40
21:50:59 131  ,gbp_g41
21:50:59 132  ,jpy_g00
21:50:59 133  ,jpy_g01
21:50:59 134  ,jpy_g02
21:50:59 135  ,jpy_g03
21:50:59 136  ,jpy_g04
21:50:59 137  ,jpy_g05
21:50:59 138  ,jpy_g06
21:50:59 139  ,jpy_g07
21:50:59 140  ,jpy_g08
21:50:59 141  ,jpy_g09
21:50:59 142  ,jpy_g10
21:50:59 143  ,jpy_g11
21:50:59 144  ,jpy_g12
21:50:59 145  ,jpy_g13
21:50:59 146  ,jpy_g14
21:50:59 147  ,jpy_g15
21:50:59 148  ,jpy_g16
21:50:59 149  ,jpy_g17
21:50:59 150  ,jpy_g18
21:50:59 151  ,jpy_g19
21:50:59 152  ,jpy_g20
21:50:59 153  ,jpy_g21
21:50:59 154  ,jpy_g22
21:50:59 155  ,jpy_g23
21:50:59 156  ,jpy_g24
21:50:59 157  ,jpy_g25
21:50:59 158  ,jpy_g26
21:50:59 159  ,jpy_g27
21:50:59 160  ,jpy_g28
21:50:59 161  ,jpy_g29
21:50:59 162  ,jpy_g30
21:50:59 163  ,jpy_g31
21:50:59 164  ,jpy_g32
21:50:59 165  ,jpy_g33
21:50:59 166  ,jpy_g34
21:50:59 167  ,jpy_g35
21:50:59 168  ,jpy_g36
21:50:59 169  ,jpy_g37
21:50:59 170  ,jpy_g38
21:50:59 171  ,jpy_g39
21:50:59 172  ,jpy_g40
21:50:59 173  ,jpy_g41
21:50:59 174  ,cad_g00
21:50:59 175  ,cad_g01
21:50:59 176  ,cad_g02
21:50:59 177  ,cad_g03
21:50:59 178  ,cad_g04
21:50:59 179  ,cad_g05
21:50:59 180  ,cad_g06
21:50:59 181  ,cad_g07
21:50:59 182  ,cad_g08
21:50:59 183  ,cad_g09
21:50:59 184  ,cad_g10
21:50:59 185  ,cad_g11
21:50:59 186  ,cad_g12
21:50:59 187  ,cad_g13
21:50:59 188  ,cad_g14
21:50:59 189  ,cad_g15
21:50:59 190  ,cad_g16
21:50:59 191  ,cad_g17
21:50:59 192  ,cad_g18
21:50:59 193  ,cad_g19
21:50:59 194  ,cad_g20
21:50:59 195  ,cad_g21
21:50:59 196  ,cad_g22
21:50:59 197  ,cad_g23
21:50:59 198  ,cad_g24
21:50:59 199  ,cad_g25
21:50:59 200  ,cad_g26
21:50:59 201  ,cad_g27
21:50:59 202  ,cad_g28
21:50:59 203  ,cad_g29
21:50:59 204  ,cad_g30
21:50:59 205  ,cad_g31
21:50:59 206  ,cad_g32
21:50:59 207  ,cad_g33
21:50:59 208  ,cad_g34
21:50:59 209  ,cad_g35
21:50:59 210  ,cad_g36
21:50:59 211  ,cad_g37
21:50:59 212  ,cad_g38
21:50:59 213  ,cad_g39
21:50:59 214  ,cad_g40
21:50:59 215  ,cad_g41
21:50:59 216  ,chf_g00
21:50:59 217  ,chf_g01
21:50:59 218  ,chf_g02
21:50:59 219  ,chf_g03
21:50:59 220  ,chf_g04
21:50:59 221  ,chf_g05
21:50:59 222  ,chf_g06
21:50:59 223  ,chf_g07
21:50:59 224  ,chf_g08
21:50:59 225  ,chf_g09
21:50:59 226  ,chf_g10
21:50:59 227  ,chf_g11
21:50:59 228  ,chf_g12
21:50:59 229  ,chf_g13
21:50:59 230  ,chf_g14
21:50:59 231  ,chf_g15
21:50:59 232  ,chf_g16
21:50:59 233  ,chf_g17
21:50:59 234  ,chf_g18
21:50:59 235  ,chf_g19
21:50:59 236  ,chf_g20
21:50:59 237  ,chf_g21
21:50:59 238  ,chf_g22
21:50:59 239  ,chf_g23
21:50:59 240  ,chf_g24
21:50:59 241  ,chf_g25
21:50:59 242  ,chf_g26
21:50:59 243  ,chf_g27
21:50:59 244  ,chf_g28
21:50:59 245  ,chf_g29
21:50:59 246  ,chf_g30
21:50:59 247  ,chf_g31
21:50:59 248  ,chf_g32
21:50:59 249  ,chf_g33
21:50:59 250  ,chf_g34
21:50:59 251  ,chf_g35
21:50:59 252  ,chf_g36
21:50:59 253  ,chf_g37
21:50:59 254  ,chf_g38
21:50:59 255  ,chf_g39
21:50:59 256  ,chf_g40
21:50:59 257  ,chf_g41
21:50:59 258  FROM aud_ms6 m
21:50:59 259  WHERE m.ydate = '&1'||' '||'&2'
21:50:59 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'21:35:00'

View created.

Elapsed: 00:00:00.12
21:50:59 SQL> 
21:50:59 SQL> -- rpt
21:50:59 SQL> -- We should see just 1 row:
21:50:59 SQL> 
21:50:59 SQL> SELECT COUNT(prdate) FROM sme
21:50:59   2  
21:50:59 SQL> -- Build the model:
21:50:59 SQL> CREATE OR REPLACE VIEW bme AS
21:50:59   2  SELECT
21:50:59   3  'aud'||m.ydate prdate
21:50:59   4  ,gatt
21:50:59   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:50:59   6  ,eur_g00
21:50:59   7  ,eur_g01
21:50:59   8  ,eur_g02
21:50:59   9  ,eur_g03
21:50:59  10  ,eur_g04
21:50:59  11  ,eur_g05
21:50:59  12  ,eur_g06
21:50:59  13  ,eur_g07
21:50:59  14  ,eur_g08
21:50:59  15  ,eur_g09
21:50:59  16  ,eur_g10
21:50:59  17  ,eur_g11
21:50:59  18  ,eur_g12
21:50:59  19  ,eur_g13
21:50:59  20  ,eur_g14
21:50:59  21  ,eur_g15
21:50:59  22  ,eur_g16
21:50:59  23  ,eur_g17
21:50:59  24  ,eur_g18
21:50:59  25  ,eur_g19
21:50:59  26  ,eur_g20
21:50:59  27  ,eur_g21
21:50:59  28  ,eur_g22
21:50:59  29  ,eur_g23
21:50:59  30  ,eur_g24
21:50:59  31  ,eur_g25
21:50:59  32  ,eur_g26
21:50:59  33  ,eur_g27
21:50:59  34  ,eur_g28
21:50:59  35  ,eur_g29
21:50:59  36  ,eur_g30
21:50:59  37  ,eur_g31
21:50:59  38  ,eur_g32
21:50:59  39  ,eur_g33
21:50:59  40  ,eur_g34
21:50:59  41  ,eur_g35
21:50:59  42  ,eur_g36
21:50:59  43  ,eur_g37
21:50:59  44  ,eur_g38
21:50:59  45  ,eur_g39
21:50:59  46  ,eur_g40
21:50:59  47  ,eur_g41
21:50:59  48  ,aud_g00
21:50:59  49  ,aud_g01
21:50:59  50  ,aud_g02
21:50:59  51  ,aud_g03
21:50:59  52  ,aud_g04
21:50:59  53  ,aud_g05
21:50:59  54  ,aud_g06
21:50:59  55  ,aud_g07
21:50:59  56  ,aud_g08
21:50:59  57  ,aud_g09
21:50:59  58  ,aud_g10
21:50:59  59  ,aud_g11
21:50:59  60  ,aud_g12
21:50:59  61  ,aud_g13
21:50:59  62  ,aud_g14
21:50:59  63  ,aud_g15
21:50:59  64  ,aud_g16
21:50:59  65  ,aud_g17
21:50:59  66  ,aud_g18
21:50:59  67  ,aud_g19
21:50:59  68  ,aud_g20
21:50:59  69  ,aud_g21
21:50:59  70  ,aud_g22
21:50:59  71  ,aud_g23
21:50:59  72  ,aud_g24
21:50:59  73  ,aud_g25
21:50:59  74  ,aud_g26
21:50:59  75  ,aud_g27
21:50:59  76  ,aud_g28
21:50:59  77  ,aud_g29
21:50:59  78  ,aud_g30
21:50:59  79  ,aud_g31
21:50:59  80  ,aud_g32
21:50:59  81  ,aud_g33
21:50:59  82  ,aud_g34
21:50:59  83  ,aud_g35
21:50:59  84  ,aud_g36
21:50:59  85  ,aud_g37
21:50:59  86  ,aud_g38
21:50:59  87  ,aud_g39
21:50:59  88  ,aud_g40
21:50:59  89  ,aud_g41
21:50:59  90  ,gbp_g00
21:50:59  91  ,gbp_g01
21:50:59  92  ,gbp_g02
21:50:59  93  ,gbp_g03
21:50:59  94  ,gbp_g04
21:50:59  95  ,gbp_g05
21:50:59  96  ,gbp_g06
21:50:59  97  ,gbp_g07
21:50:59  98  ,gbp_g08
21:50:59  99  ,gbp_g09
21:50:59 100  ,gbp_g10
21:50:59 101  ,gbp_g11
21:50:59 102  ,gbp_g12
21:50:59 103  ,gbp_g13
21:50:59 104  ,gbp_g14
21:50:59 105  ,gbp_g15
21:50:59 106  ,gbp_g16
21:50:59 107  ,gbp_g17
21:50:59 108  ,gbp_g18
21:50:59 109  ,gbp_g19
21:50:59 110  ,gbp_g20
21:50:59 111  ,gbp_g21
21:50:59 112  ,gbp_g22
21:50:59 113  ,gbp_g23
21:50:59 114  ,gbp_g24
21:50:59 115  ,gbp_g25
21:50:59 116  ,gbp_g26
21:50:59 117  ,gbp_g27
21:50:59 118  ,gbp_g28
21:50:59 119  ,gbp_g29
21:50:59 120  ,gbp_g30
21:50:59 121  ,gbp_g31
21:50:59 122  ,gbp_g32
21:50:59 123  ,gbp_g33
21:50:59 124  ,gbp_g34
21:50:59 125  ,gbp_g35
21:50:59 126  ,gbp_g36
21:50:59 127  ,gbp_g37
21:50:59 128  ,gbp_g38
21:50:59 129  ,gbp_g39
21:50:59 130  ,gbp_g40
21:50:59 131  ,gbp_g41
21:50:59 132  ,jpy_g00
21:50:59 133  ,jpy_g01
21:50:59 134  ,jpy_g02
21:50:59 135  ,jpy_g03
21:50:59 136  ,jpy_g04
21:50:59 137  ,jpy_g05
21:50:59 138  ,jpy_g06
21:50:59 139  ,jpy_g07
21:50:59 140  ,jpy_g08
21:50:59 141  ,jpy_g09
21:50:59 142  ,jpy_g10
21:50:59 143  ,jpy_g11
21:50:59 144  ,jpy_g12
21:50:59 145  ,jpy_g13
21:50:59 146  ,jpy_g14
21:50:59 147  ,jpy_g15
21:50:59 148  ,jpy_g16
21:50:59 149  ,jpy_g17
21:50:59 150  ,jpy_g18
21:50:59 151  ,jpy_g19
21:50:59 152  ,jpy_g20
21:50:59 153  ,jpy_g21
21:50:59 154  ,jpy_g22
21:50:59 155  ,jpy_g23
21:50:59 156  ,jpy_g24
21:50:59 157  ,jpy_g25
21:50:59 158  ,jpy_g26
21:50:59 159  ,jpy_g27
21:50:59 160  ,jpy_g28
21:50:59 161  ,jpy_g29
21:50:59 162  ,jpy_g30
21:50:59 163  ,jpy_g31
21:50:59 164  ,jpy_g32
21:50:59 165  ,jpy_g33
21:50:59 166  ,jpy_g34
21:50:59 167  ,jpy_g35
21:50:59 168  ,jpy_g36
21:50:59 169  ,jpy_g37
21:50:59 170  ,jpy_g38
21:50:59 171  ,jpy_g39
21:50:59 172  ,jpy_g40
21:50:59 173  ,jpy_g41
21:50:59 174  ,cad_g00
21:50:59 175  ,cad_g01
21:50:59 176  ,cad_g02
21:50:59 177  ,cad_g03
21:50:59 178  ,cad_g04
21:50:59 179  ,cad_g05
21:50:59 180  ,cad_g06
21:50:59 181  ,cad_g07
21:50:59 182  ,cad_g08
21:50:59 183  ,cad_g09
21:50:59 184  ,cad_g10
21:50:59 185  ,cad_g11
21:50:59 186  ,cad_g12
21:50:59 187  ,cad_g13
21:50:59 188  ,cad_g14
21:50:59 189  ,cad_g15
21:50:59 190  ,cad_g16
21:50:59 191  ,cad_g17
21:50:59 192  ,cad_g18
21:50:59 193  ,cad_g19
21:50:59 194  ,cad_g20
21:50:59 195  ,cad_g21
21:50:59 196  ,cad_g22
21:50:59 197  ,cad_g23
21:50:59 198  ,cad_g24
21:50:59 199  ,cad_g25
21:50:59 200  ,cad_g26
21:50:59 201  ,cad_g27
21:50:59 202  ,cad_g28
21:50:59 203  ,cad_g29
21:50:59 204  ,cad_g30
21:50:59 205  ,cad_g31
21:50:59 206  ,cad_g32
21:50:59 207  ,cad_g33
21:50:59 208  ,cad_g34
21:50:59 209  ,cad_g35
21:50:59 210  ,cad_g36
21:50:59 211  ,cad_g37
21:50:59 212  ,cad_g38
21:50:59 213  ,cad_g39
21:50:59 214  ,cad_g40
21:50:59 215  ,cad_g41
21:50:59 216  ,chf_g00
21:50:59 217  ,chf_g01
21:50:59 218  ,chf_g02
21:50:59 219  ,chf_g03
21:50:59 220  ,chf_g04
21:50:59 221  ,chf_g05
21:50:59 222  ,chf_g06
21:50:59 223  ,chf_g07
21:50:59 224  ,chf_g08
21:50:59 225  ,chf_g09
21:50:59 226  ,chf_g10
21:50:59 227  ,chf_g11
21:50:59 228  ,chf_g12
21:50:59 229  ,chf_g13
21:50:59 230  ,chf_g14
21:50:59 231  ,chf_g15
21:50:59 232  ,chf_g16
21:50:59 233  ,chf_g17
21:50:59 234  ,chf_g18
21:50:59 235  ,chf_g19
21:50:59 236  ,chf_g20
21:50:59 237  ,chf_g21
21:50:59 238  ,chf_g22
21:50:59 239  ,chf_g23
21:50:59 240  ,chf_g24
21:50:59 241  ,chf_g25
21:50:59 242  ,chf_g26
21:50:59 243  ,chf_g27
21:50:59 244  ,chf_g28
21:50:59 245  ,chf_g29
21:50:59 246  ,chf_g30
21:50:59 247  ,chf_g31
21:50:59 248  ,chf_g32
21:50:59 249  ,chf_g33
21:50:59 250  ,chf_g34
21:50:59 251  ,chf_g35
21:50:59 252  ,chf_g36
21:50:59 253  ,chf_g37
21:50:59 254  ,chf_g38
21:50:59 255  ,chf_g39
21:50:59 256  ,chf_g40
21:50:59 257  ,chf_g41
21:50:59 258  FROM aud_ms6 m
21:50:59 259  WHERE gatt IN('nup','up')
21:50:59 260  AND 1+m.ydate < '&1'||' '||'&2'
21:50:59 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'21:35:00'

View created.

Elapsed: 00:00:00.13
21:50:59 SQL> 
21:50:59 SQL> -- rpt
21:50:59 SQL> 
21:50:59 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
21:50:59   2  
21:50:59 SQL> SELECT MAX(prdate) FROM bme
21:50:59   2  
21:50:59 SQL> -- Now build model from bme and score sme
21:50:59 SQL> @score1.sql
21:50:59 SQL> -- score1.sql
21:50:59 SQL> 
21:50:59 SQL> -- Does the 1st SVM score
21:50:59 SQL> 
21:50:59 SQL> -- Fill up svmc_apply_prep
21:50:59 SQL> @score.sql
21:50:59 SQL> --
21:50:59 SQL> -- score.sql
21:50:59 SQL> --
21:50:59 SQL> 
21:50:59 SQL> -- usage: score.sql
21:50:59 SQL> 
21:50:59 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:50:59 SQL> 
21:50:59 SQL> DEFINE target	= 'gatt'
21:50:59 SQL> DEFINE model_name = 'forex14'
21:50:59 SQL> DEFINE bldtable	= 'bme'
21:50:59 SQL> DEFINE scoretable = 'sme'
21:50:59 SQL> DEFINE case_id	= 'prdate'
21:50:59 SQL> 
21:50:59 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:50:59 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:50:59 SQL> 
21:50:59 SQL> -- Builds an SVM model using pl/sql.
21:50:59 SQL> 
21:50:59 SQL> -----------------------------------------------------------------------
21:50:59 SQL> --			    BUILD THE MODEL
21:50:59 SQL> -----------------------------------------------------------------------
21:50:59 SQL> 
21:50:59 SQL> -- Cleanup old build data preparation objects for repeat runs
21:50:59 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
21:50:59 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:50:59 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
21:50:59 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
21:50:59 SQL> 
21:50:59 SQL> 
21:50:59 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:50:59 SQL> --
21:50:59 SQL> -- DROP	TABLE svmc_settings ;
21:50:59 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:50:59 SQL> -- DELETE svmc_settings;
21:50:59 SQL> 
21:50:59 SQL> -- The default classification algorithm is Naive Bayes. So override
21:50:59 SQL> -- this choice to SVM using a settings table.
21:50:59 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:50:59 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:50:59 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:50:59 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:50:59 SQL> -- models.
21:50:59 SQL> --
21:50:59 SQL> 
21:50:59 SQL> -- Do this once and then comment it out.
21:50:59 SQL> -- That makes script go faster.
21:50:59 SQL> -- BEGIN
21:50:59 SQL> -- -- Populate settings table
21:50:59 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:50:59 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:50:59 SQL> --
21:50:59 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:50:59 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:50:59 SQL> --
21:50:59 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:50:59 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:50:59 SQL> --   COMMIT;
21:50:59 SQL> -- END;
21:50:59 SQL> -- /
21:50:59 SQL> 
21:50:59 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:50:59 SQL> 
21:50:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:50:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:50:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:50:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:50:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:50:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:50:59 SQL> 
21:50:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:50:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:50:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
21:51:00 SQL> 
21:51:00 SQL> --------------------------------
21:51:00 SQL> -- PREPARE BUILD (TRAINING) DATA
21:51:00 SQL> --
21:51:00 SQL> 
21:51:00 SQL> -- 1. Missing Value treatment for all Predictors and
21:51:00 SQL> -- 2. Outlier Treatment and
21:51:00 SQL> -- 3. Normalization are performed below.
21:51:00 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:51:00 SQL> --    normalized here.
21:51:00 SQL> 
21:51:00 SQL> BEGIN
21:51:00   2  	-- Perform missing value treatment for all predictors
21:51:00   3  	-- create miss tables
21:51:00   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:51:00   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:51:00   6  
21:51:00   7  	-- populate miss tables
21:51:00   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:51:00   9  	  miss_table_name => 'svmc_miss_num',
21:51:00  10  	  data_table_name => '&bldtable',
21:51:00  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:51:00  12  
21:51:00  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:51:00  14  	  miss_table_name => 'svmc_miss_cat',
21:51:00  15  	  data_table_name => '&bldtable',
21:51:00  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:51:00  17  
21:51:00  18  	-- xform input data to replace missing values
21:51:00  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:51:00  20  	  miss_table_name => 'svmc_miss_num',
21:51:00  21  	  data_table_name => '&bldtable',
21:51:00  22  	  xform_view_name => 'xformed_build_miss_num');
21:51:00  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:51:00  24  	  miss_table_name => 'svmc_miss_cat',
21:51:00  25  	  data_table_name => '&bldtable',
21:51:00  26  	  xform_view_name => 'xformed_build_miss_cat');
21:51:00  27  
21:51:00  28  	-- Perform outlier treatment.
21:51:00  29  	-- create clip table
21:51:00  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:51:00  31  
21:51:00  32  	-- populate clip table
21:51:00  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:51:00  34  	  clip_table_name => 'svmc_clip',
21:51:00  35  	  data_table_name => '&bldtable',
21:51:00  36  	  tail_frac	  => 0.025,
21:51:00  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:51:00  38  
21:51:00  39  	-- xform input data to winsorized data
21:51:00  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:51:00  41  	  clip_table_name => 'svmc_clip',
21:51:00  42  	  data_table_name => '&bldtable',
21:51:00  43  	  xform_view_name => 'svmc_winsor');
21:51:00  44  
21:51:00  45  	-- create normalization table
21:51:00  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:51:00  47  
21:51:00  48  	-- populate normalization table based on winsorized data
21:51:00  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:51:00  50  	  norm_table_name => 'svmc_norm',
21:51:00  51  	  data_table_name => 'svmc_winsor',
21:51:00  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:51:00  53  
21:51:00  54  	-- normalize the original data
21:51:00  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:51:00  56  	  norm_table_name => 'svmc_norm',
21:51:00  57  	  data_table_name => '&bldtable',
21:51:00  58  	  xform_view_name => 'svmc_build_prep');
21:51:00  59  END;
21:51:00  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.90
21:51:17 SQL> 
21:51:17 SQL> ---------------------
21:51:17 SQL> -- CREATE A NEW MODEL
21:51:17 SQL> --
21:51:17 SQL> -- Cleanup old model with the same name for repeat runs
21:51:17 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:51:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:17   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.35
21:51:19 SQL> 
21:51:19 SQL> -- Build a new SVM Model
21:51:19 SQL> BEGIN
21:51:19   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:51:19   3  	  model_name	      => '&model_name',
21:51:19   4  	  mining_function     => dbms_data_mining.classification,
21:51:19   5  	  data_table_name     => 'svmc_build_prep',
21:51:19   6  	  case_id_column_name => '&case_id',
21:51:19   7  	  target_column_name  => '&target',
21:51:19   8  	  settings_table_name => 'svmc_settings');
21:51:19   9  END;
21:51:19  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.83
21:51:48 SQL> 
21:51:48 SQL> -----------------------------------------------------------------------
21:51:48 SQL> --			       APPLY/score THE MODEL
21:51:48 SQL> -----------------------------------------------------------------------
21:51:48 SQL> 
21:51:48 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:51:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:51:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
21:51:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:51:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:51:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:51:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:51:48 SQL> -----------------------
21:51:48 SQL> -- PREPARE SCORING DATA
21:51:48 SQL> --
21:51:48 SQL> -- If the data for model creation has been prepared, then the data
21:51:48 SQL> -- to be scored using the model must be prepared in the same manner
21:51:48 SQL> -- in order to obtain meaningful results.
21:51:48 SQL> --
21:51:48 SQL> -- 1. Missing Value treatment for all Predictors and
21:51:48 SQL> -- 2. Normalization
21:51:48 SQL> -- No outlier treatment will be performed during test and apply. The
21:51:48 SQL> -- normalization step is sufficient, since the normalization parameters
21:51:48 SQL> -- already capture the effects of outlier treatment done with build data.
21:51:48 SQL> --
21:51:48 SQL> BEGIN
21:51:48   2  	-- Xform Test data to replace missing values
21:51:48   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:51:48   4  	  miss_table_name => 'svmc_miss_num',
21:51:48   5  	  data_table_name => '&scoretable',
21:51:48   6  	  xform_view_name => 'xformed_apply_miss_num');
21:51:48   7  
21:51:48   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:51:48   9  	  miss_table_name => 'svmc_miss_cat',
21:51:48  10  	  data_table_name => '&scoretable',
21:51:48  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:51:48  12  
21:51:48  13  	-- Normalize the data to be scored
21:51:48  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:51:48  15  	  norm_table_name => 'svmc_norm',
21:51:48  16  	  data_table_name => '&scoretable',
21:51:48  17  	  xform_view_name => 'svmc_apply_prep');
21:51:48  18  END;
21:51:48  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.30
21:51:49 SQL> 
21:51:49 SQL> -- Use same model_name used in score.sql
21:51:49 SQL> DEFINE model_name = 'forex14'
21:51:49 SQL> 
21:51:49 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
21:51:49 SQL> 
21:51:49 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
21:51:49 SQL> 
21:51:49 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
21:51:49   2  SELECT
21:51:49   3  prdate
21:51:49   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:51:49   5  ,sysdate
21:51:49   6  ,SUBSTR(prdate,1,3)pair
21:51:49   7  ,SUBSTR(prdate,4,19)ydate
21:51:49   8  FROM svmc_apply_prep
21:51:49   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
21:51:49 SQL> @aud_score1day.sql  2010-12-31 21:40:00
21:51:49 SQL> --
21:51:49 SQL> -- aud_score1day.sql
21:51:49 SQL> --
21:51:49 SQL> 
21:51:49 SQL> CREATE OR REPLACE VIEW sme AS
21:51:49   2  SELECT
21:51:49   3  'aud'||m.ydate prdate
21:51:49   4  ,NULL gatt
21:51:49   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:51:49   6  ,eur_g00
21:51:49   7  ,eur_g01
21:51:49   8  ,eur_g02
21:51:49   9  ,eur_g03
21:51:49  10  ,eur_g04
21:51:49  11  ,eur_g05
21:51:49  12  ,eur_g06
21:51:49  13  ,eur_g07
21:51:49  14  ,eur_g08
21:51:49  15  ,eur_g09
21:51:49  16  ,eur_g10
21:51:49  17  ,eur_g11
21:51:49  18  ,eur_g12
21:51:49  19  ,eur_g13
21:51:49  20  ,eur_g14
21:51:49  21  ,eur_g15
21:51:49  22  ,eur_g16
21:51:49  23  ,eur_g17
21:51:49  24  ,eur_g18
21:51:49  25  ,eur_g19
21:51:49  26  ,eur_g20
21:51:49  27  ,eur_g21
21:51:49  28  ,eur_g22
21:51:49  29  ,eur_g23
21:51:49  30  ,eur_g24
21:51:49  31  ,eur_g25
21:51:49  32  ,eur_g26
21:51:49  33  ,eur_g27
21:51:49  34  ,eur_g28
21:51:49  35  ,eur_g29
21:51:49  36  ,eur_g30
21:51:49  37  ,eur_g31
21:51:49  38  ,eur_g32
21:51:49  39  ,eur_g33
21:51:49  40  ,eur_g34
21:51:49  41  ,eur_g35
21:51:49  42  ,eur_g36
21:51:49  43  ,eur_g37
21:51:49  44  ,eur_g38
21:51:49  45  ,eur_g39
21:51:49  46  ,eur_g40
21:51:49  47  ,eur_g41
21:51:49  48  ,aud_g00
21:51:49  49  ,aud_g01
21:51:49  50  ,aud_g02
21:51:49  51  ,aud_g03
21:51:49  52  ,aud_g04
21:51:49  53  ,aud_g05
21:51:49  54  ,aud_g06
21:51:49  55  ,aud_g07
21:51:49  56  ,aud_g08
21:51:49  57  ,aud_g09
21:51:49  58  ,aud_g10
21:51:49  59  ,aud_g11
21:51:49  60  ,aud_g12
21:51:49  61  ,aud_g13
21:51:49  62  ,aud_g14
21:51:49  63  ,aud_g15
21:51:49  64  ,aud_g16
21:51:49  65  ,aud_g17
21:51:49  66  ,aud_g18
21:51:49  67  ,aud_g19
21:51:49  68  ,aud_g20
21:51:49  69  ,aud_g21
21:51:49  70  ,aud_g22
21:51:49  71  ,aud_g23
21:51:49  72  ,aud_g24
21:51:49  73  ,aud_g25
21:51:49  74  ,aud_g26
21:51:49  75  ,aud_g27
21:51:49  76  ,aud_g28
21:51:49  77  ,aud_g29
21:51:49  78  ,aud_g30
21:51:49  79  ,aud_g31
21:51:49  80  ,aud_g32
21:51:49  81  ,aud_g33
21:51:49  82  ,aud_g34
21:51:49  83  ,aud_g35
21:51:49  84  ,aud_g36
21:51:49  85  ,aud_g37
21:51:49  86  ,aud_g38
21:51:49  87  ,aud_g39
21:51:49  88  ,aud_g40
21:51:49  89  ,aud_g41
21:51:49  90  ,gbp_g00
21:51:49  91  ,gbp_g01
21:51:49  92  ,gbp_g02
21:51:49  93  ,gbp_g03
21:51:49  94  ,gbp_g04
21:51:49  95  ,gbp_g05
21:51:49  96  ,gbp_g06
21:51:49  97  ,gbp_g07
21:51:49  98  ,gbp_g08
21:51:49  99  ,gbp_g09
21:51:49 100  ,gbp_g10
21:51:49 101  ,gbp_g11
21:51:49 102  ,gbp_g12
21:51:49 103  ,gbp_g13
21:51:49 104  ,gbp_g14
21:51:49 105  ,gbp_g15
21:51:49 106  ,gbp_g16
21:51:49 107  ,gbp_g17
21:51:49 108  ,gbp_g18
21:51:49 109  ,gbp_g19
21:51:49 110  ,gbp_g20
21:51:49 111  ,gbp_g21
21:51:49 112  ,gbp_g22
21:51:49 113  ,gbp_g23
21:51:49 114  ,gbp_g24
21:51:49 115  ,gbp_g25
21:51:49 116  ,gbp_g26
21:51:49 117  ,gbp_g27
21:51:49 118  ,gbp_g28
21:51:49 119  ,gbp_g29
21:51:49 120  ,gbp_g30
21:51:49 121  ,gbp_g31
21:51:49 122  ,gbp_g32
21:51:49 123  ,gbp_g33
21:51:49 124  ,gbp_g34
21:51:49 125  ,gbp_g35
21:51:49 126  ,gbp_g36
21:51:49 127  ,gbp_g37
21:51:49 128  ,gbp_g38
21:51:49 129  ,gbp_g39
21:51:49 130  ,gbp_g40
21:51:49 131  ,gbp_g41
21:51:49 132  ,jpy_g00
21:51:49 133  ,jpy_g01
21:51:49 134  ,jpy_g02
21:51:49 135  ,jpy_g03
21:51:49 136  ,jpy_g04
21:51:49 137  ,jpy_g05
21:51:49 138  ,jpy_g06
21:51:49 139  ,jpy_g07
21:51:49 140  ,jpy_g08
21:51:49 141  ,jpy_g09
21:51:49 142  ,jpy_g10
21:51:49 143  ,jpy_g11
21:51:49 144  ,jpy_g12
21:51:49 145  ,jpy_g13
21:51:49 146  ,jpy_g14
21:51:49 147  ,jpy_g15
21:51:49 148  ,jpy_g16
21:51:49 149  ,jpy_g17
21:51:49 150  ,jpy_g18
21:51:49 151  ,jpy_g19
21:51:49 152  ,jpy_g20
21:51:49 153  ,jpy_g21
21:51:49 154  ,jpy_g22
21:51:49 155  ,jpy_g23
21:51:49 156  ,jpy_g24
21:51:49 157  ,jpy_g25
21:51:49 158  ,jpy_g26
21:51:49 159  ,jpy_g27
21:51:49 160  ,jpy_g28
21:51:49 161  ,jpy_g29
21:51:49 162  ,jpy_g30
21:51:49 163  ,jpy_g31
21:51:49 164  ,jpy_g32
21:51:49 165  ,jpy_g33
21:51:49 166  ,jpy_g34
21:51:49 167  ,jpy_g35
21:51:49 168  ,jpy_g36
21:51:49 169  ,jpy_g37
21:51:49 170  ,jpy_g38
21:51:49 171  ,jpy_g39
21:51:49 172  ,jpy_g40
21:51:49 173  ,jpy_g41
21:51:49 174  ,cad_g00
21:51:49 175  ,cad_g01
21:51:49 176  ,cad_g02
21:51:49 177  ,cad_g03
21:51:49 178  ,cad_g04
21:51:49 179  ,cad_g05
21:51:49 180  ,cad_g06
21:51:49 181  ,cad_g07
21:51:49 182  ,cad_g08
21:51:49 183  ,cad_g09
21:51:49 184  ,cad_g10
21:51:49 185  ,cad_g11
21:51:49 186  ,cad_g12
21:51:49 187  ,cad_g13
21:51:49 188  ,cad_g14
21:51:49 189  ,cad_g15
21:51:49 190  ,cad_g16
21:51:49 191  ,cad_g17
21:51:49 192  ,cad_g18
21:51:49 193  ,cad_g19
21:51:49 194  ,cad_g20
21:51:49 195  ,cad_g21
21:51:49 196  ,cad_g22
21:51:49 197  ,cad_g23
21:51:49 198  ,cad_g24
21:51:49 199  ,cad_g25
21:51:49 200  ,cad_g26
21:51:49 201  ,cad_g27
21:51:49 202  ,cad_g28
21:51:49 203  ,cad_g29
21:51:49 204  ,cad_g30
21:51:49 205  ,cad_g31
21:51:49 206  ,cad_g32
21:51:49 207  ,cad_g33
21:51:49 208  ,cad_g34
21:51:49 209  ,cad_g35
21:51:49 210  ,cad_g36
21:51:49 211  ,cad_g37
21:51:49 212  ,cad_g38
21:51:49 213  ,cad_g39
21:51:49 214  ,cad_g40
21:51:49 215  ,cad_g41
21:51:49 216  ,chf_g00
21:51:49 217  ,chf_g01
21:51:49 218  ,chf_g02
21:51:49 219  ,chf_g03
21:51:49 220  ,chf_g04
21:51:49 221  ,chf_g05
21:51:49 222  ,chf_g06
21:51:49 223  ,chf_g07
21:51:49 224  ,chf_g08
21:51:49 225  ,chf_g09
21:51:49 226  ,chf_g10
21:51:49 227  ,chf_g11
21:51:49 228  ,chf_g12
21:51:49 229  ,chf_g13
21:51:49 230  ,chf_g14
21:51:49 231  ,chf_g15
21:51:49 232  ,chf_g16
21:51:49 233  ,chf_g17
21:51:49 234  ,chf_g18
21:51:49 235  ,chf_g19
21:51:49 236  ,chf_g20
21:51:49 237  ,chf_g21
21:51:49 238  ,chf_g22
21:51:49 239  ,chf_g23
21:51:49 240  ,chf_g24
21:51:49 241  ,chf_g25
21:51:49 242  ,chf_g26
21:51:49 243  ,chf_g27
21:51:49 244  ,chf_g28
21:51:49 245  ,chf_g29
21:51:49 246  ,chf_g30
21:51:49 247  ,chf_g31
21:51:49 248  ,chf_g32
21:51:49 249  ,chf_g33
21:51:49 250  ,chf_g34
21:51:49 251  ,chf_g35
21:51:49 252  ,chf_g36
21:51:49 253  ,chf_g37
21:51:49 254  ,chf_g38
21:51:49 255  ,chf_g39
21:51:49 256  ,chf_g40
21:51:49 257  ,chf_g41
21:51:49 258  FROM aud_ms6 m
21:51:49 259  WHERE m.ydate = '&1'||' '||'&2'
21:51:49 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'21:40:00'

View created.

Elapsed: 00:00:00.13
21:51:49 SQL> 
21:51:49 SQL> -- rpt
21:51:49 SQL> -- We should see just 1 row:
21:51:49 SQL> 
21:51:49 SQL> SELECT COUNT(prdate) FROM sme
21:51:49   2  
21:51:49 SQL> -- Build the model:
21:51:49 SQL> CREATE OR REPLACE VIEW bme AS
21:51:49   2  SELECT
21:51:49   3  'aud'||m.ydate prdate
21:51:49   4  ,gatt
21:51:49   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:51:49   6  ,eur_g00
21:51:49   7  ,eur_g01
21:51:49   8  ,eur_g02
21:51:49   9  ,eur_g03
21:51:49  10  ,eur_g04
21:51:49  11  ,eur_g05
21:51:49  12  ,eur_g06
21:51:49  13  ,eur_g07
21:51:49  14  ,eur_g08
21:51:49  15  ,eur_g09
21:51:49  16  ,eur_g10
21:51:49  17  ,eur_g11
21:51:49  18  ,eur_g12
21:51:49  19  ,eur_g13
21:51:49  20  ,eur_g14
21:51:49  21  ,eur_g15
21:51:49  22  ,eur_g16
21:51:49  23  ,eur_g17
21:51:49  24  ,eur_g18
21:51:49  25  ,eur_g19
21:51:49  26  ,eur_g20
21:51:49  27  ,eur_g21
21:51:49  28  ,eur_g22
21:51:49  29  ,eur_g23
21:51:49  30  ,eur_g24
21:51:49  31  ,eur_g25
21:51:49  32  ,eur_g26
21:51:49  33  ,eur_g27
21:51:49  34  ,eur_g28
21:51:49  35  ,eur_g29
21:51:49  36  ,eur_g30
21:51:49  37  ,eur_g31
21:51:49  38  ,eur_g32
21:51:49  39  ,eur_g33
21:51:49  40  ,eur_g34
21:51:49  41  ,eur_g35
21:51:49  42  ,eur_g36
21:51:49  43  ,eur_g37
21:51:49  44  ,eur_g38
21:51:49  45  ,eur_g39
21:51:49  46  ,eur_g40
21:51:49  47  ,eur_g41
21:51:49  48  ,aud_g00
21:51:49  49  ,aud_g01
21:51:49  50  ,aud_g02
21:51:49  51  ,aud_g03
21:51:49  52  ,aud_g04
21:51:49  53  ,aud_g05
21:51:49  54  ,aud_g06
21:51:49  55  ,aud_g07
21:51:49  56  ,aud_g08
21:51:49  57  ,aud_g09
21:51:49  58  ,aud_g10
21:51:49  59  ,aud_g11
21:51:49  60  ,aud_g12
21:51:49  61  ,aud_g13
21:51:49  62  ,aud_g14
21:51:49  63  ,aud_g15
21:51:49  64  ,aud_g16
21:51:49  65  ,aud_g17
21:51:49  66  ,aud_g18
21:51:49  67  ,aud_g19
21:51:49  68  ,aud_g20
21:51:49  69  ,aud_g21
21:51:49  70  ,aud_g22
21:51:49  71  ,aud_g23
21:51:49  72  ,aud_g24
21:51:49  73  ,aud_g25
21:51:49  74  ,aud_g26
21:51:49  75  ,aud_g27
21:51:49  76  ,aud_g28
21:51:49  77  ,aud_g29
21:51:49  78  ,aud_g30
21:51:49  79  ,aud_g31
21:51:49  80  ,aud_g32
21:51:49  81  ,aud_g33
21:51:49  82  ,aud_g34
21:51:49  83  ,aud_g35
21:51:49  84  ,aud_g36
21:51:49  85  ,aud_g37
21:51:49  86  ,aud_g38
21:51:49  87  ,aud_g39
21:51:49  88  ,aud_g40
21:51:49  89  ,aud_g41
21:51:49  90  ,gbp_g00
21:51:49  91  ,gbp_g01
21:51:49  92  ,gbp_g02
21:51:49  93  ,gbp_g03
21:51:49  94  ,gbp_g04
21:51:49  95  ,gbp_g05
21:51:49  96  ,gbp_g06
21:51:49  97  ,gbp_g07
21:51:49  98  ,gbp_g08
21:51:49  99  ,gbp_g09
21:51:49 100  ,gbp_g10
21:51:49 101  ,gbp_g11
21:51:49 102  ,gbp_g12
21:51:49 103  ,gbp_g13
21:51:49 104  ,gbp_g14
21:51:49 105  ,gbp_g15
21:51:49 106  ,gbp_g16
21:51:49 107  ,gbp_g17
21:51:49 108  ,gbp_g18
21:51:49 109  ,gbp_g19
21:51:49 110  ,gbp_g20
21:51:49 111  ,gbp_g21
21:51:49 112  ,gbp_g22
21:51:49 113  ,gbp_g23
21:51:49 114  ,gbp_g24
21:51:49 115  ,gbp_g25
21:51:49 116  ,gbp_g26
21:51:49 117  ,gbp_g27
21:51:49 118  ,gbp_g28
21:51:49 119  ,gbp_g29
21:51:49 120  ,gbp_g30
21:51:49 121  ,gbp_g31
21:51:49 122  ,gbp_g32
21:51:49 123  ,gbp_g33
21:51:49 124  ,gbp_g34
21:51:49 125  ,gbp_g35
21:51:49 126  ,gbp_g36
21:51:49 127  ,gbp_g37
21:51:49 128  ,gbp_g38
21:51:49 129  ,gbp_g39
21:51:49 130  ,gbp_g40
21:51:49 131  ,gbp_g41
21:51:49 132  ,jpy_g00
21:51:49 133  ,jpy_g01
21:51:49 134  ,jpy_g02
21:51:49 135  ,jpy_g03
21:51:49 136  ,jpy_g04
21:51:49 137  ,jpy_g05
21:51:49 138  ,jpy_g06
21:51:49 139  ,jpy_g07
21:51:49 140  ,jpy_g08
21:51:49 141  ,jpy_g09
21:51:49 142  ,jpy_g10
21:51:49 143  ,jpy_g11
21:51:49 144  ,jpy_g12
21:51:49 145  ,jpy_g13
21:51:49 146  ,jpy_g14
21:51:49 147  ,jpy_g15
21:51:49 148  ,jpy_g16
21:51:49 149  ,jpy_g17
21:51:49 150  ,jpy_g18
21:51:49 151  ,jpy_g19
21:51:49 152  ,jpy_g20
21:51:49 153  ,jpy_g21
21:51:49 154  ,jpy_g22
21:51:49 155  ,jpy_g23
21:51:49 156  ,jpy_g24
21:51:49 157  ,jpy_g25
21:51:49 158  ,jpy_g26
21:51:49 159  ,jpy_g27
21:51:49 160  ,jpy_g28
21:51:49 161  ,jpy_g29
21:51:49 162  ,jpy_g30
21:51:49 163  ,jpy_g31
21:51:49 164  ,jpy_g32
21:51:49 165  ,jpy_g33
21:51:49 166  ,jpy_g34
21:51:49 167  ,jpy_g35
21:51:49 168  ,jpy_g36
21:51:49 169  ,jpy_g37
21:51:49 170  ,jpy_g38
21:51:49 171  ,jpy_g39
21:51:49 172  ,jpy_g40
21:51:49 173  ,jpy_g41
21:51:49 174  ,cad_g00
21:51:49 175  ,cad_g01
21:51:49 176  ,cad_g02
21:51:49 177  ,cad_g03
21:51:49 178  ,cad_g04
21:51:49 179  ,cad_g05
21:51:49 180  ,cad_g06
21:51:49 181  ,cad_g07
21:51:49 182  ,cad_g08
21:51:49 183  ,cad_g09
21:51:49 184  ,cad_g10
21:51:49 185  ,cad_g11
21:51:49 186  ,cad_g12
21:51:49 187  ,cad_g13
21:51:49 188  ,cad_g14
21:51:49 189  ,cad_g15
21:51:49 190  ,cad_g16
21:51:49 191  ,cad_g17
21:51:49 192  ,cad_g18
21:51:49 193  ,cad_g19
21:51:49 194  ,cad_g20
21:51:49 195  ,cad_g21
21:51:49 196  ,cad_g22
21:51:49 197  ,cad_g23
21:51:49 198  ,cad_g24
21:51:49 199  ,cad_g25
21:51:49 200  ,cad_g26
21:51:49 201  ,cad_g27
21:51:49 202  ,cad_g28
21:51:49 203  ,cad_g29
21:51:49 204  ,cad_g30
21:51:49 205  ,cad_g31
21:51:49 206  ,cad_g32
21:51:49 207  ,cad_g33
21:51:49 208  ,cad_g34
21:51:49 209  ,cad_g35
21:51:49 210  ,cad_g36
21:51:49 211  ,cad_g37
21:51:49 212  ,cad_g38
21:51:49 213  ,cad_g39
21:51:49 214  ,cad_g40
21:51:49 215  ,cad_g41
21:51:49 216  ,chf_g00
21:51:49 217  ,chf_g01
21:51:49 218  ,chf_g02
21:51:49 219  ,chf_g03
21:51:49 220  ,chf_g04
21:51:49 221  ,chf_g05
21:51:49 222  ,chf_g06
21:51:49 223  ,chf_g07
21:51:49 224  ,chf_g08
21:51:49 225  ,chf_g09
21:51:49 226  ,chf_g10
21:51:49 227  ,chf_g11
21:51:49 228  ,chf_g12
21:51:49 229  ,chf_g13
21:51:49 230  ,chf_g14
21:51:49 231  ,chf_g15
21:51:49 232  ,chf_g16
21:51:49 233  ,chf_g17
21:51:49 234  ,chf_g18
21:51:49 235  ,chf_g19
21:51:49 236  ,chf_g20
21:51:49 237  ,chf_g21
21:51:49 238  ,chf_g22
21:51:49 239  ,chf_g23
21:51:49 240  ,chf_g24
21:51:49 241  ,chf_g25
21:51:49 242  ,chf_g26
21:51:49 243  ,chf_g27
21:51:49 244  ,chf_g28
21:51:49 245  ,chf_g29
21:51:49 246  ,chf_g30
21:51:49 247  ,chf_g31
21:51:49 248  ,chf_g32
21:51:49 249  ,chf_g33
21:51:49 250  ,chf_g34
21:51:49 251  ,chf_g35
21:51:49 252  ,chf_g36
21:51:49 253  ,chf_g37
21:51:49 254  ,chf_g38
21:51:49 255  ,chf_g39
21:51:49 256  ,chf_g40
21:51:49 257  ,chf_g41
21:51:49 258  FROM aud_ms6 m
21:51:49 259  WHERE gatt IN('nup','up')
21:51:49 260  AND 1+m.ydate < '&1'||' '||'&2'
21:51:49 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'21:40:00'

View created.

Elapsed: 00:00:00.13
21:51:50 SQL> 
21:51:50 SQL> -- rpt
21:51:50 SQL> 
21:51:50 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
21:51:50   2  
21:51:50 SQL> SELECT MAX(prdate) FROM bme
21:51:50   2  
21:51:50 SQL> -- Now build model from bme and score sme
21:51:50 SQL> @score1.sql
21:51:50 SQL> -- score1.sql
21:51:50 SQL> 
21:51:50 SQL> -- Does the 1st SVM score
21:51:50 SQL> 
21:51:50 SQL> -- Fill up svmc_apply_prep
21:51:50 SQL> @score.sql
21:51:50 SQL> --
21:51:50 SQL> -- score.sql
21:51:50 SQL> --
21:51:50 SQL> 
21:51:50 SQL> -- usage: score.sql
21:51:50 SQL> 
21:51:50 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:51:50 SQL> 
21:51:50 SQL> DEFINE target	= 'gatt'
21:51:50 SQL> DEFINE model_name = 'forex14'
21:51:50 SQL> DEFINE bldtable	= 'bme'
21:51:50 SQL> DEFINE scoretable = 'sme'
21:51:50 SQL> DEFINE case_id	= 'prdate'
21:51:50 SQL> 
21:51:50 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:51:50 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:51:50 SQL> 
21:51:50 SQL> -- Builds an SVM model using pl/sql.
21:51:50 SQL> 
21:51:50 SQL> -----------------------------------------------------------------------
21:51:50 SQL> --			    BUILD THE MODEL
21:51:50 SQL> -----------------------------------------------------------------------
21:51:50 SQL> 
21:51:50 SQL> -- Cleanup old build data preparation objects for repeat runs
21:51:50 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
21:51:50 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:51:50 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
21:51:50 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
21:51:50 SQL> 
21:51:50 SQL> 
21:51:50 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:51:50 SQL> --
21:51:50 SQL> -- DROP	TABLE svmc_settings ;
21:51:50 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:51:50 SQL> -- DELETE svmc_settings;
21:51:50 SQL> 
21:51:50 SQL> -- The default classification algorithm is Naive Bayes. So override
21:51:50 SQL> -- this choice to SVM using a settings table.
21:51:50 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:51:50 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:51:50 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:51:50 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:51:50 SQL> -- models.
21:51:50 SQL> --
21:51:50 SQL> 
21:51:50 SQL> -- Do this once and then comment it out.
21:51:50 SQL> -- That makes script go faster.
21:51:50 SQL> -- BEGIN
21:51:50 SQL> -- -- Populate settings table
21:51:50 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:51:50 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:51:50 SQL> --
21:51:50 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:51:50 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:51:50 SQL> --
21:51:50 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:51:50 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:51:50 SQL> --   COMMIT;
21:51:50 SQL> -- END;
21:51:50 SQL> -- /
21:51:50 SQL> 
21:51:50 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
21:51:50 SQL> 
21:51:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:51:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:51:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:51:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:51:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:51:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:51:50 SQL> 
21:51:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:51:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:51:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:51:50 SQL> 
21:51:50 SQL> --------------------------------
21:51:50 SQL> -- PREPARE BUILD (TRAINING) DATA
21:51:50 SQL> --
21:51:50 SQL> 
21:51:50 SQL> -- 1. Missing Value treatment for all Predictors and
21:51:50 SQL> -- 2. Outlier Treatment and
21:51:50 SQL> -- 3. Normalization are performed below.
21:51:50 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:51:50 SQL> --    normalized here.
21:51:50 SQL> 
21:51:50 SQL> BEGIN
21:51:50   2  	-- Perform missing value treatment for all predictors
21:51:50   3  	-- create miss tables
21:51:50   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:51:50   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:51:50   6  
21:51:50   7  	-- populate miss tables
21:51:50   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:51:50   9  	  miss_table_name => 'svmc_miss_num',
21:51:50  10  	  data_table_name => '&bldtable',
21:51:50  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:51:50  12  
21:51:50  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:51:50  14  	  miss_table_name => 'svmc_miss_cat',
21:51:50  15  	  data_table_name => '&bldtable',
21:51:50  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:51:50  17  
21:51:50  18  	-- xform input data to replace missing values
21:51:50  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:51:50  20  	  miss_table_name => 'svmc_miss_num',
21:51:50  21  	  data_table_name => '&bldtable',
21:51:50  22  	  xform_view_name => 'xformed_build_miss_num');
21:51:50  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:51:50  24  	  miss_table_name => 'svmc_miss_cat',
21:51:50  25  	  data_table_name => '&bldtable',
21:51:50  26  	  xform_view_name => 'xformed_build_miss_cat');
21:51:50  27  
21:51:50  28  	-- Perform outlier treatment.
21:51:50  29  	-- create clip table
21:51:50  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:51:50  31  
21:51:50  32  	-- populate clip table
21:51:50  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:51:50  34  	  clip_table_name => 'svmc_clip',
21:51:50  35  	  data_table_name => '&bldtable',
21:51:50  36  	  tail_frac	  => 0.025,
21:51:50  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:51:50  38  
21:51:50  39  	-- xform input data to winsorized data
21:51:50  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:51:50  41  	  clip_table_name => 'svmc_clip',
21:51:50  42  	  data_table_name => '&bldtable',
21:51:50  43  	  xform_view_name => 'svmc_winsor');
21:51:50  44  
21:51:50  45  	-- create normalization table
21:51:50  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:51:50  47  
21:51:50  48  	-- populate normalization table based on winsorized data
21:51:50  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:51:50  50  	  norm_table_name => 'svmc_norm',
21:51:50  51  	  data_table_name => 'svmc_winsor',
21:51:50  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:51:50  53  
21:51:50  54  	-- normalize the original data
21:51:50  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:51:50  56  	  norm_table_name => 'svmc_norm',
21:51:50  57  	  data_table_name => '&bldtable',
21:51:50  58  	  xform_view_name => 'svmc_build_prep');
21:51:50  59  END;
21:51:50  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.09
21:52:08 SQL> 
21:52:08 SQL> ---------------------
21:52:08 SQL> -- CREATE A NEW MODEL
21:52:08 SQL> --
21:52:08 SQL> -- Cleanup old model with the same name for repeat runs
21:52:08 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:52:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:08   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.00
21:52:09 SQL> 
21:52:09 SQL> -- Build a new SVM Model
21:52:09 SQL> BEGIN
21:52:09   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:52:09   3  	  model_name	      => '&model_name',
21:52:09   4  	  mining_function     => dbms_data_mining.classification,
21:52:09   5  	  data_table_name     => 'svmc_build_prep',
21:52:09   6  	  case_id_column_name => '&case_id',
21:52:09   7  	  target_column_name  => '&target',
21:52:09   8  	  settings_table_name => 'svmc_settings');
21:52:09   9  END;
21:52:09  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.33
21:52:37 SQL> 
21:52:37 SQL> -----------------------------------------------------------------------
21:52:37 SQL> --			       APPLY/score THE MODEL
21:52:37 SQL> -----------------------------------------------------------------------
21:52:37 SQL> 
21:52:37 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:52:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:52:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:52:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:52:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:52:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:52:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:52:37 SQL> -----------------------
21:52:37 SQL> -- PREPARE SCORING DATA
21:52:37 SQL> --
21:52:37 SQL> -- If the data for model creation has been prepared, then the data
21:52:37 SQL> -- to be scored using the model must be prepared in the same manner
21:52:37 SQL> -- in order to obtain meaningful results.
21:52:37 SQL> --
21:52:37 SQL> -- 1. Missing Value treatment for all Predictors and
21:52:37 SQL> -- 2. Normalization
21:52:37 SQL> -- No outlier treatment will be performed during test and apply. The
21:52:37 SQL> -- normalization step is sufficient, since the normalization parameters
21:52:37 SQL> -- already capture the effects of outlier treatment done with build data.
21:52:37 SQL> --
21:52:37 SQL> BEGIN
21:52:37   2  	-- Xform Test data to replace missing values
21:52:37   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:52:37   4  	  miss_table_name => 'svmc_miss_num',
21:52:37   5  	  data_table_name => '&scoretable',
21:52:37   6  	  xform_view_name => 'xformed_apply_miss_num');
21:52:37   7  
21:52:37   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:52:37   9  	  miss_table_name => 'svmc_miss_cat',
21:52:37  10  	  data_table_name => '&scoretable',
21:52:37  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:52:37  12  
21:52:37  13  	-- Normalize the data to be scored
21:52:37  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:52:37  15  	  norm_table_name => 'svmc_norm',
21:52:37  16  	  data_table_name => '&scoretable',
21:52:37  17  	  xform_view_name => 'svmc_apply_prep');
21:52:37  18  END;
21:52:37  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.30
21:52:39 SQL> 
21:52:39 SQL> -- Use same model_name used in score.sql
21:52:39 SQL> DEFINE model_name = 'forex14'
21:52:39 SQL> 
21:52:39 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
21:52:39 SQL> 
21:52:39 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:52:39 SQL> 
21:52:39 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
21:52:39   2  SELECT
21:52:39   3  prdate
21:52:39   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:52:39   5  ,sysdate
21:52:39   6  ,SUBSTR(prdate,1,3)pair
21:52:39   7  ,SUBSTR(prdate,4,19)ydate
21:52:39   8  FROM svmc_apply_prep
21:52:39   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:52:39 SQL> @aud_score1day_gattn.sql	2010-12-31 21:25:00
21:52:39 SQL> --
21:52:39 SQL> -- aud_score1day_gattn.sql
21:52:39 SQL> --
21:52:39 SQL> 
21:52:39 SQL> CREATE OR REPLACE VIEW sme AS
21:52:39   2  SELECT
21:52:39   3  'aud'||m.ydate prdate
21:52:39   4  ,NULL gattn
21:52:39   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:52:39   6  ,eur_g00
21:52:39   7  ,eur_g01
21:52:39   8  ,eur_g02
21:52:39   9  ,eur_g03
21:52:39  10  ,eur_g04
21:52:39  11  ,eur_g05
21:52:39  12  ,eur_g06
21:52:39  13  ,eur_g07
21:52:39  14  ,eur_g08
21:52:39  15  ,eur_g09
21:52:39  16  ,eur_g10
21:52:39  17  ,eur_g11
21:52:39  18  ,eur_g12
21:52:39  19  ,eur_g13
21:52:39  20  ,eur_g14
21:52:39  21  ,eur_g15
21:52:39  22  ,eur_g16
21:52:39  23  ,eur_g17
21:52:39  24  ,eur_g18
21:52:39  25  ,eur_g19
21:52:39  26  ,eur_g20
21:52:39  27  ,eur_g21
21:52:39  28  ,eur_g22
21:52:39  29  ,eur_g23
21:52:39  30  ,eur_g24
21:52:39  31  ,eur_g25
21:52:39  32  ,eur_g26
21:52:39  33  ,eur_g27
21:52:39  34  ,eur_g28
21:52:39  35  ,eur_g29
21:52:39  36  ,eur_g30
21:52:39  37  ,eur_g31
21:52:39  38  ,eur_g32
21:52:39  39  ,eur_g33
21:52:39  40  ,eur_g34
21:52:39  41  ,eur_g35
21:52:39  42  ,eur_g36
21:52:39  43  ,eur_g37
21:52:39  44  ,eur_g38
21:52:39  45  ,eur_g39
21:52:39  46  ,eur_g40
21:52:39  47  ,eur_g41
21:52:39  48  ,aud_g00
21:52:39  49  ,aud_g01
21:52:39  50  ,aud_g02
21:52:39  51  ,aud_g03
21:52:39  52  ,aud_g04
21:52:39  53  ,aud_g05
21:52:39  54  ,aud_g06
21:52:39  55  ,aud_g07
21:52:39  56  ,aud_g08
21:52:39  57  ,aud_g09
21:52:39  58  ,aud_g10
21:52:39  59  ,aud_g11
21:52:39  60  ,aud_g12
21:52:39  61  ,aud_g13
21:52:39  62  ,aud_g14
21:52:39  63  ,aud_g15
21:52:39  64  ,aud_g16
21:52:39  65  ,aud_g17
21:52:39  66  ,aud_g18
21:52:39  67  ,aud_g19
21:52:39  68  ,aud_g20
21:52:39  69  ,aud_g21
21:52:39  70  ,aud_g22
21:52:39  71  ,aud_g23
21:52:39  72  ,aud_g24
21:52:39  73  ,aud_g25
21:52:39  74  ,aud_g26
21:52:39  75  ,aud_g27
21:52:39  76  ,aud_g28
21:52:39  77  ,aud_g29
21:52:39  78  ,aud_g30
21:52:39  79  ,aud_g31
21:52:39  80  ,aud_g32
21:52:39  81  ,aud_g33
21:52:39  82  ,aud_g34
21:52:39  83  ,aud_g35
21:52:39  84  ,aud_g36
21:52:39  85  ,aud_g37
21:52:39  86  ,aud_g38
21:52:39  87  ,aud_g39
21:52:39  88  ,aud_g40
21:52:39  89  ,aud_g41
21:52:39  90  ,gbp_g00
21:52:39  91  ,gbp_g01
21:52:39  92  ,gbp_g02
21:52:39  93  ,gbp_g03
21:52:39  94  ,gbp_g04
21:52:39  95  ,gbp_g05
21:52:39  96  ,gbp_g06
21:52:39  97  ,gbp_g07
21:52:39  98  ,gbp_g08
21:52:39  99  ,gbp_g09
21:52:39 100  ,gbp_g10
21:52:39 101  ,gbp_g11
21:52:39 102  ,gbp_g12
21:52:39 103  ,gbp_g13
21:52:39 104  ,gbp_g14
21:52:39 105  ,gbp_g15
21:52:39 106  ,gbp_g16
21:52:39 107  ,gbp_g17
21:52:39 108  ,gbp_g18
21:52:39 109  ,gbp_g19
21:52:39 110  ,gbp_g20
21:52:39 111  ,gbp_g21
21:52:39 112  ,gbp_g22
21:52:39 113  ,gbp_g23
21:52:39 114  ,gbp_g24
21:52:39 115  ,gbp_g25
21:52:39 116  ,gbp_g26
21:52:39 117  ,gbp_g27
21:52:39 118  ,gbp_g28
21:52:39 119  ,gbp_g29
21:52:39 120  ,gbp_g30
21:52:39 121  ,gbp_g31
21:52:39 122  ,gbp_g32
21:52:39 123  ,gbp_g33
21:52:39 124  ,gbp_g34
21:52:39 125  ,gbp_g35
21:52:39 126  ,gbp_g36
21:52:39 127  ,gbp_g37
21:52:39 128  ,gbp_g38
21:52:39 129  ,gbp_g39
21:52:39 130  ,gbp_g40
21:52:39 131  ,gbp_g41
21:52:39 132  ,jpy_g00
21:52:39 133  ,jpy_g01
21:52:39 134  ,jpy_g02
21:52:39 135  ,jpy_g03
21:52:39 136  ,jpy_g04
21:52:39 137  ,jpy_g05
21:52:39 138  ,jpy_g06
21:52:39 139  ,jpy_g07
21:52:39 140  ,jpy_g08
21:52:39 141  ,jpy_g09
21:52:39 142  ,jpy_g10
21:52:39 143  ,jpy_g11
21:52:39 144  ,jpy_g12
21:52:39 145  ,jpy_g13
21:52:39 146  ,jpy_g14
21:52:39 147  ,jpy_g15
21:52:39 148  ,jpy_g16
21:52:39 149  ,jpy_g17
21:52:39 150  ,jpy_g18
21:52:39 151  ,jpy_g19
21:52:39 152  ,jpy_g20
21:52:39 153  ,jpy_g21
21:52:39 154  ,jpy_g22
21:52:39 155  ,jpy_g23
21:52:39 156  ,jpy_g24
21:52:39 157  ,jpy_g25
21:52:39 158  ,jpy_g26
21:52:39 159  ,jpy_g27
21:52:39 160  ,jpy_g28
21:52:39 161  ,jpy_g29
21:52:39 162  ,jpy_g30
21:52:39 163  ,jpy_g31
21:52:39 164  ,jpy_g32
21:52:39 165  ,jpy_g33
21:52:39 166  ,jpy_g34
21:52:39 167  ,jpy_g35
21:52:39 168  ,jpy_g36
21:52:39 169  ,jpy_g37
21:52:39 170  ,jpy_g38
21:52:39 171  ,jpy_g39
21:52:39 172  ,jpy_g40
21:52:39 173  ,jpy_g41
21:52:39 174  ,cad_g00
21:52:39 175  ,cad_g01
21:52:39 176  ,cad_g02
21:52:39 177  ,cad_g03
21:52:39 178  ,cad_g04
21:52:39 179  ,cad_g05
21:52:39 180  ,cad_g06
21:52:39 181  ,cad_g07
21:52:39 182  ,cad_g08
21:52:39 183  ,cad_g09
21:52:39 184  ,cad_g10
21:52:39 185  ,cad_g11
21:52:39 186  ,cad_g12
21:52:39 187  ,cad_g13
21:52:39 188  ,cad_g14
21:52:39 189  ,cad_g15
21:52:39 190  ,cad_g16
21:52:39 191  ,cad_g17
21:52:39 192  ,cad_g18
21:52:39 193  ,cad_g19
21:52:39 194  ,cad_g20
21:52:39 195  ,cad_g21
21:52:39 196  ,cad_g22
21:52:39 197  ,cad_g23
21:52:39 198  ,cad_g24
21:52:39 199  ,cad_g25
21:52:39 200  ,cad_g26
21:52:39 201  ,cad_g27
21:52:39 202  ,cad_g28
21:52:39 203  ,cad_g29
21:52:39 204  ,cad_g30
21:52:39 205  ,cad_g31
21:52:39 206  ,cad_g32
21:52:39 207  ,cad_g33
21:52:39 208  ,cad_g34
21:52:39 209  ,cad_g35
21:52:39 210  ,cad_g36
21:52:39 211  ,cad_g37
21:52:39 212  ,cad_g38
21:52:39 213  ,cad_g39
21:52:39 214  ,cad_g40
21:52:39 215  ,cad_g41
21:52:39 216  ,chf_g00
21:52:39 217  ,chf_g01
21:52:39 218  ,chf_g02
21:52:39 219  ,chf_g03
21:52:39 220  ,chf_g04
21:52:39 221  ,chf_g05
21:52:39 222  ,chf_g06
21:52:39 223  ,chf_g07
21:52:39 224  ,chf_g08
21:52:39 225  ,chf_g09
21:52:39 226  ,chf_g10
21:52:39 227  ,chf_g11
21:52:39 228  ,chf_g12
21:52:39 229  ,chf_g13
21:52:39 230  ,chf_g14
21:52:39 231  ,chf_g15
21:52:39 232  ,chf_g16
21:52:39 233  ,chf_g17
21:52:39 234  ,chf_g18
21:52:39 235  ,chf_g19
21:52:39 236  ,chf_g20
21:52:39 237  ,chf_g21
21:52:39 238  ,chf_g22
21:52:39 239  ,chf_g23
21:52:39 240  ,chf_g24
21:52:39 241  ,chf_g25
21:52:39 242  ,chf_g26
21:52:39 243  ,chf_g27
21:52:39 244  ,chf_g28
21:52:39 245  ,chf_g29
21:52:39 246  ,chf_g30
21:52:39 247  ,chf_g31
21:52:39 248  ,chf_g32
21:52:39 249  ,chf_g33
21:52:39 250  ,chf_g34
21:52:39 251  ,chf_g35
21:52:39 252  ,chf_g36
21:52:39 253  ,chf_g37
21:52:39 254  ,chf_g38
21:52:39 255  ,chf_g39
21:52:39 256  ,chf_g40
21:52:39 257  ,chf_g41
21:52:39 258  FROM aud_ms6 m
21:52:39 259  WHERE m.ydate = '&1'||' '||'&2'
21:52:39 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'21:25:00'

View created.

Elapsed: 00:00:00.13
21:52:39 SQL> 
21:52:39 SQL> -- rpt
21:52:39 SQL> -- We should see just 1 row:
21:52:39 SQL> 
21:52:39 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
21:52:39 SQL> 
21:52:39 SQL> -- Build the model:
21:52:39 SQL> CREATE OR REPLACE VIEW bme AS
21:52:39   2  SELECT
21:52:39   3  'aud'||m.ydate prdate
21:52:39   4  ,gattn
21:52:39   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:52:39   6  ,eur_g00
21:52:39   7  ,eur_g01
21:52:39   8  ,eur_g02
21:52:39   9  ,eur_g03
21:52:39  10  ,eur_g04
21:52:39  11  ,eur_g05
21:52:39  12  ,eur_g06
21:52:39  13  ,eur_g07
21:52:39  14  ,eur_g08
21:52:39  15  ,eur_g09
21:52:39  16  ,eur_g10
21:52:39  17  ,eur_g11
21:52:39  18  ,eur_g12
21:52:39  19  ,eur_g13
21:52:39  20  ,eur_g14
21:52:39  21  ,eur_g15
21:52:39  22  ,eur_g16
21:52:39  23  ,eur_g17
21:52:39  24  ,eur_g18
21:52:39  25  ,eur_g19
21:52:39  26  ,eur_g20
21:52:39  27  ,eur_g21
21:52:39  28  ,eur_g22
21:52:39  29  ,eur_g23
21:52:39  30  ,eur_g24
21:52:39  31  ,eur_g25
21:52:39  32  ,eur_g26
21:52:39  33  ,eur_g27
21:52:39  34  ,eur_g28
21:52:39  35  ,eur_g29
21:52:39  36  ,eur_g30
21:52:39  37  ,eur_g31
21:52:39  38  ,eur_g32
21:52:39  39  ,eur_g33
21:52:39  40  ,eur_g34
21:52:39  41  ,eur_g35
21:52:39  42  ,eur_g36
21:52:39  43  ,eur_g37
21:52:39  44  ,eur_g38
21:52:39  45  ,eur_g39
21:52:39  46  ,eur_g40
21:52:39  47  ,eur_g41
21:52:39  48  ,aud_g00
21:52:39  49  ,aud_g01
21:52:39  50  ,aud_g02
21:52:39  51  ,aud_g03
21:52:39  52  ,aud_g04
21:52:39  53  ,aud_g05
21:52:39  54  ,aud_g06
21:52:39  55  ,aud_g07
21:52:39  56  ,aud_g08
21:52:39  57  ,aud_g09
21:52:39  58  ,aud_g10
21:52:39  59  ,aud_g11
21:52:39  60  ,aud_g12
21:52:39  61  ,aud_g13
21:52:39  62  ,aud_g14
21:52:39  63  ,aud_g15
21:52:39  64  ,aud_g16
21:52:39  65  ,aud_g17
21:52:39  66  ,aud_g18
21:52:39  67  ,aud_g19
21:52:39  68  ,aud_g20
21:52:39  69  ,aud_g21
21:52:39  70  ,aud_g22
21:52:39  71  ,aud_g23
21:52:39  72  ,aud_g24
21:52:39  73  ,aud_g25
21:52:39  74  ,aud_g26
21:52:39  75  ,aud_g27
21:52:39  76  ,aud_g28
21:52:39  77  ,aud_g29
21:52:39  78  ,aud_g30
21:52:39  79  ,aud_g31
21:52:39  80  ,aud_g32
21:52:39  81  ,aud_g33
21:52:39  82  ,aud_g34
21:52:39  83  ,aud_g35
21:52:39  84  ,aud_g36
21:52:39  85  ,aud_g37
21:52:39  86  ,aud_g38
21:52:39  87  ,aud_g39
21:52:39  88  ,aud_g40
21:52:39  89  ,aud_g41
21:52:39  90  ,gbp_g00
21:52:39  91  ,gbp_g01
21:52:39  92  ,gbp_g02
21:52:39  93  ,gbp_g03
21:52:39  94  ,gbp_g04
21:52:39  95  ,gbp_g05
21:52:39  96  ,gbp_g06
21:52:39  97  ,gbp_g07
21:52:39  98  ,gbp_g08
21:52:39  99  ,gbp_g09
21:52:39 100  ,gbp_g10
21:52:39 101  ,gbp_g11
21:52:39 102  ,gbp_g12
21:52:39 103  ,gbp_g13
21:52:39 104  ,gbp_g14
21:52:39 105  ,gbp_g15
21:52:39 106  ,gbp_g16
21:52:39 107  ,gbp_g17
21:52:39 108  ,gbp_g18
21:52:39 109  ,gbp_g19
21:52:39 110  ,gbp_g20
21:52:39 111  ,gbp_g21
21:52:39 112  ,gbp_g22
21:52:39 113  ,gbp_g23
21:52:39 114  ,gbp_g24
21:52:39 115  ,gbp_g25
21:52:39 116  ,gbp_g26
21:52:39 117  ,gbp_g27
21:52:39 118  ,gbp_g28
21:52:39 119  ,gbp_g29
21:52:39 120  ,gbp_g30
21:52:39 121  ,gbp_g31
21:52:39 122  ,gbp_g32
21:52:39 123  ,gbp_g33
21:52:39 124  ,gbp_g34
21:52:39 125  ,gbp_g35
21:52:39 126  ,gbp_g36
21:52:39 127  ,gbp_g37
21:52:39 128  ,gbp_g38
21:52:39 129  ,gbp_g39
21:52:39 130  ,gbp_g40
21:52:39 131  ,gbp_g41
21:52:39 132  ,jpy_g00
21:52:39 133  ,jpy_g01
21:52:39 134  ,jpy_g02
21:52:39 135  ,jpy_g03
21:52:39 136  ,jpy_g04
21:52:39 137  ,jpy_g05
21:52:39 138  ,jpy_g06
21:52:39 139  ,jpy_g07
21:52:39 140  ,jpy_g08
21:52:39 141  ,jpy_g09
21:52:39 142  ,jpy_g10
21:52:39 143  ,jpy_g11
21:52:39 144  ,jpy_g12
21:52:39 145  ,jpy_g13
21:52:39 146  ,jpy_g14
21:52:39 147  ,jpy_g15
21:52:39 148  ,jpy_g16
21:52:39 149  ,jpy_g17
21:52:39 150  ,jpy_g18
21:52:39 151  ,jpy_g19
21:52:39 152  ,jpy_g20
21:52:39 153  ,jpy_g21
21:52:39 154  ,jpy_g22
21:52:39 155  ,jpy_g23
21:52:39 156  ,jpy_g24
21:52:39 157  ,jpy_g25
21:52:39 158  ,jpy_g26
21:52:39 159  ,jpy_g27
21:52:39 160  ,jpy_g28
21:52:39 161  ,jpy_g29
21:52:39 162  ,jpy_g30
21:52:39 163  ,jpy_g31
21:52:39 164  ,jpy_g32
21:52:39 165  ,jpy_g33
21:52:39 166  ,jpy_g34
21:52:39 167  ,jpy_g35
21:52:39 168  ,jpy_g36
21:52:39 169  ,jpy_g37
21:52:39 170  ,jpy_g38
21:52:39 171  ,jpy_g39
21:52:39 172  ,jpy_g40
21:52:39 173  ,jpy_g41
21:52:39 174  ,cad_g00
21:52:39 175  ,cad_g01
21:52:39 176  ,cad_g02
21:52:39 177  ,cad_g03
21:52:39 178  ,cad_g04
21:52:39 179  ,cad_g05
21:52:39 180  ,cad_g06
21:52:39 181  ,cad_g07
21:52:39 182  ,cad_g08
21:52:39 183  ,cad_g09
21:52:39 184  ,cad_g10
21:52:39 185  ,cad_g11
21:52:39 186  ,cad_g12
21:52:39 187  ,cad_g13
21:52:39 188  ,cad_g14
21:52:39 189  ,cad_g15
21:52:39 190  ,cad_g16
21:52:39 191  ,cad_g17
21:52:39 192  ,cad_g18
21:52:39 193  ,cad_g19
21:52:39 194  ,cad_g20
21:52:39 195  ,cad_g21
21:52:39 196  ,cad_g22
21:52:39 197  ,cad_g23
21:52:39 198  ,cad_g24
21:52:39 199  ,cad_g25
21:52:39 200  ,cad_g26
21:52:39 201  ,cad_g27
21:52:39 202  ,cad_g28
21:52:39 203  ,cad_g29
21:52:39 204  ,cad_g30
21:52:39 205  ,cad_g31
21:52:39 206  ,cad_g32
21:52:39 207  ,cad_g33
21:52:39 208  ,cad_g34
21:52:39 209  ,cad_g35
21:52:39 210  ,cad_g36
21:52:39 211  ,cad_g37
21:52:39 212  ,cad_g38
21:52:39 213  ,cad_g39
21:52:39 214  ,cad_g40
21:52:39 215  ,cad_g41
21:52:39 216  ,chf_g00
21:52:39 217  ,chf_g01
21:52:39 218  ,chf_g02
21:52:39 219  ,chf_g03
21:52:39 220  ,chf_g04
21:52:39 221  ,chf_g05
21:52:39 222  ,chf_g06
21:52:39 223  ,chf_g07
21:52:39 224  ,chf_g08
21:52:39 225  ,chf_g09
21:52:39 226  ,chf_g10
21:52:39 227  ,chf_g11
21:52:39 228  ,chf_g12
21:52:39 229  ,chf_g13
21:52:39 230  ,chf_g14
21:52:39 231  ,chf_g15
21:52:39 232  ,chf_g16
21:52:39 233  ,chf_g17
21:52:39 234  ,chf_g18
21:52:39 235  ,chf_g19
21:52:39 236  ,chf_g20
21:52:39 237  ,chf_g21
21:52:39 238  ,chf_g22
21:52:39 239  ,chf_g23
21:52:39 240  ,chf_g24
21:52:39 241  ,chf_g25
21:52:39 242  ,chf_g26
21:52:39 243  ,chf_g27
21:52:39 244  ,chf_g28
21:52:39 245  ,chf_g29
21:52:39 246  ,chf_g30
21:52:39 247  ,chf_g31
21:52:39 248  ,chf_g32
21:52:39 249  ,chf_g33
21:52:39 250  ,chf_g34
21:52:39 251  ,chf_g35
21:52:39 252  ,chf_g36
21:52:39 253  ,chf_g37
21:52:39 254  ,chf_g38
21:52:39 255  ,chf_g39
21:52:39 256  ,chf_g40
21:52:39 257  ,chf_g41
21:52:39 258  FROM aud_ms6 m
21:52:39 259  WHERE gattn IN('nup','up')
21:52:39 260  AND 1+m.ydate < '&1'||' '||'&2'
21:52:39 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'21:25:00'

View created.

Elapsed: 00:00:00.13
21:52:39 SQL> 
21:52:39 SQL> -- rpt
21:52:39 SQL> 
21:52:39 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13123
up	     6413

Elapsed: 00:00:00.04
21:52:39 SQL> 
21:52:39 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 21:20:00

Elapsed: 00:00:00.03
21:52:39 SQL> 
21:52:39 SQL> -- Now build model from bme and score sme
21:52:39 SQL> @score1gattn.sql
21:52:39 SQL> -- score1gattn.sql
21:52:39 SQL> 
21:52:39 SQL> -- Does the 1st SVM score
21:52:39 SQL> 
21:52:39 SQL> -- Fill up svmc_apply_prep
21:52:39 SQL> @score_gattn.sql
21:52:39 SQL> --
21:52:39 SQL> -- score_gattn.sql
21:52:39 SQL> --
21:52:39 SQL> 
21:52:39 SQL> -- usage: score_gattn.sql
21:52:39 SQL> 
21:52:39 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:52:39 SQL> 
21:52:39 SQL> DEFINE target	= 'gattn'
21:52:39 SQL> DEFINE model_name = 'forex14'
21:52:39 SQL> DEFINE bldtable	= 'bme'
21:52:39 SQL> DEFINE scoretable = 'sme'
21:52:39 SQL> DEFINE case_id	= 'prdate'
21:52:39 SQL> 
21:52:39 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:52:39 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:52:39 SQL> 
21:52:39 SQL> -- Builds an SVM model using pl/sql.
21:52:39 SQL> 
21:52:39 SQL> -----------------------------------------------------------------------
21:52:39 SQL> --			    BUILD THE MODEL
21:52:39 SQL> -----------------------------------------------------------------------
21:52:39 SQL> 
21:52:39 SQL> -- Cleanup old build data preparation objects for repeat runs
21:52:39 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
21:52:39 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:52:39 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
21:52:39 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
21:52:39 SQL> 
21:52:39 SQL> 
21:52:39 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:52:39 SQL> --
21:52:39 SQL> -- DROP	TABLE svmc_settings ;
21:52:39 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:52:39 SQL> -- DELETE svmc_settings;
21:52:39 SQL> 
21:52:39 SQL> -- The default classification algorithm is Naive Bayes. So override
21:52:39 SQL> -- this choice to SVM using a settings table.
21:52:39 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:52:39 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:52:39 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:52:39 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:52:39 SQL> -- models.
21:52:39 SQL> --
21:52:39 SQL> 
21:52:39 SQL> -- Do this once and then comment it out.
21:52:39 SQL> -- That makes script go faster.
21:52:39 SQL> -- BEGIN
21:52:39 SQL> -- -- Populate settings table
21:52:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:52:39 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:52:39 SQL> --
21:52:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:52:39 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:52:39 SQL> --
21:52:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:52:39 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:52:39 SQL> --   COMMIT;
21:52:39 SQL> -- END;
21:52:39 SQL> -- /
21:52:39 SQL> 
21:52:39 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:52:39 SQL> 
21:52:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:52:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:52:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:52:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:52:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:52:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:52:40 SQL> 
21:52:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:52:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:52:40 SQL> 
21:52:40 SQL> --------------------------------
21:52:40 SQL> -- PREPARE BUILD (TRAINING) DATA
21:52:40 SQL> --
21:52:40 SQL> 
21:52:40 SQL> -- 1. Missing Value treatment for all Predictors and
21:52:40 SQL> -- 2. Outlier Treatment and
21:52:40 SQL> -- 3. Normalization are performed below.
21:52:40 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:52:40 SQL> --    normalized here.
21:52:40 SQL> 
21:52:40 SQL> BEGIN
21:52:40   2  	-- Perform missing value treatment for all predictors
21:52:40   3  	-- create miss tables
21:52:40   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:52:40   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:52:40   6  
21:52:40   7  	-- populate miss tables
21:52:40   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:52:40   9  	  miss_table_name => 'svmc_miss_num',
21:52:40  10  	  data_table_name => '&bldtable',
21:52:40  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:52:40  12  
21:52:40  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:52:40  14  	  miss_table_name => 'svmc_miss_cat',
21:52:40  15  	  data_table_name => '&bldtable',
21:52:40  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:52:40  17  
21:52:40  18  	-- xform input data to replace missing values
21:52:40  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:52:40  20  	  miss_table_name => 'svmc_miss_num',
21:52:40  21  	  data_table_name => '&bldtable',
21:52:40  22  	  xform_view_name => 'xformed_build_miss_num');
21:52:40  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:52:40  24  	  miss_table_name => 'svmc_miss_cat',
21:52:40  25  	  data_table_name => '&bldtable',
21:52:40  26  	  xform_view_name => 'xformed_build_miss_cat');
21:52:40  27  
21:52:40  28  	-- Perform outlier treatment.
21:52:40  29  	-- create clip table
21:52:40  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:52:40  31  
21:52:40  32  	-- populate clip table
21:52:40  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:52:40  34  	  clip_table_name => 'svmc_clip',
21:52:40  35  	  data_table_name => '&bldtable',
21:52:40  36  	  tail_frac	  => 0.025,
21:52:40  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:52:40  38  
21:52:40  39  	-- xform input data to winsorized data
21:52:40  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:52:40  41  	  clip_table_name => 'svmc_clip',
21:52:40  42  	  data_table_name => '&bldtable',
21:52:40  43  	  xform_view_name => 'svmc_winsor');
21:52:40  44  
21:52:40  45  	-- create normalization table
21:52:40  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:52:40  47  
21:52:40  48  	-- populate normalization table based on winsorized data
21:52:40  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:52:40  50  	  norm_table_name => 'svmc_norm',
21:52:40  51  	  data_table_name => 'svmc_winsor',
21:52:40  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:52:40  53  
21:52:40  54  	-- normalize the original data
21:52:40  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:52:40  56  	  norm_table_name => 'svmc_norm',
21:52:40  57  	  data_table_name => '&bldtable',
21:52:40  58  	  xform_view_name => 'svmc_build_prep');
21:52:40  59  END;
21:52:40  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.38
21:52:58 SQL> 
21:52:58 SQL> ---------------------
21:52:58 SQL> -- CREATE A NEW MODEL
21:52:58 SQL> --
21:52:58 SQL> -- Cleanup old model with the same name for repeat runs
21:52:58 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:52:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:52:58   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.95
21:52:59 SQL> 
21:52:59 SQL> -- Build a new SVM Model
21:52:59 SQL> BEGIN
21:52:59   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:52:59   3  	  model_name	      => '&model_name',
21:52:59   4  	  mining_function     => dbms_data_mining.classification,
21:52:59   5  	  data_table_name     => 'svmc_build_prep',
21:52:59   6  	  case_id_column_name => '&case_id',
21:52:59   7  	  target_column_name  => '&target',
21:52:59   8  	  settings_table_name => 'svmc_settings');
21:52:59   9  END;
21:52:59  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.91
21:53:26 SQL> 
21:53:26 SQL> -----------------------------------------------------------------------
21:53:26 SQL> --			       APPLY/score THE MODEL
21:53:26 SQL> -----------------------------------------------------------------------
21:53:26 SQL> 
21:53:26 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:53:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:53:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:53:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:53:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:53:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:53:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:53:26 SQL> -----------------------
21:53:26 SQL> -- PREPARE SCORING DATA
21:53:26 SQL> --
21:53:26 SQL> -- If the data for model creation has been prepared, then the data
21:53:26 SQL> -- to be scored using the model must be prepared in the same manner
21:53:26 SQL> -- in order to obtain meaningful results.
21:53:26 SQL> --
21:53:26 SQL> -- 1. Missing Value treatment for all Predictors and
21:53:26 SQL> -- 2. Normalization
21:53:26 SQL> -- No outlier treatment will be performed during test and apply. The
21:53:26 SQL> -- normalization step is sufficient, since the normalization parameters
21:53:26 SQL> -- already capture the effects of outlier treatment done with build data.
21:53:26 SQL> --
21:53:26 SQL> BEGIN
21:53:26   2  	-- Xform Test data to replace missing values
21:53:26   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:53:26   4  	  miss_table_name => 'svmc_miss_num',
21:53:26   5  	  data_table_name => '&scoretable',
21:53:26   6  	  xform_view_name => 'xformed_apply_miss_num');
21:53:26   7  
21:53:26   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:53:26   9  	  miss_table_name => 'svmc_miss_cat',
21:53:26  10  	  data_table_name => '&scoretable',
21:53:26  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:53:26  12  
21:53:26  13  	-- Normalize the data to be scored
21:53:26  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:53:26  15  	  norm_table_name => 'svmc_norm',
21:53:26  16  	  data_table_name => '&scoretable',
21:53:26  17  	  xform_view_name => 'svmc_apply_prep');
21:53:26  18  END;
21:53:26  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
21:53:27 SQL> 
21:53:27 SQL> -- Use same model_name used in score_gattn.sql
21:53:27 SQL> DEFINE model_name = 'forex14'
21:53:27 SQL> 
21:53:27 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
21:53:27 SQL> 
21:53:27 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
21:53:27   2  SELECT
21:53:27   3  prdate
21:53:27   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:53:27   5  ,sysdate
21:53:27   6  ,SUBSTR(prdate,1,3)pair
21:53:27   7  ,SUBSTR(prdate,4,19)ydate
21:53:27   8  FROM svmc_apply_prep
21:53:27   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
21:53:27 SQL> @aud_score1day_gattn.sql	2010-12-31 21:30:00
21:53:27 SQL> --
21:53:27 SQL> -- aud_score1day_gattn.sql
21:53:27 SQL> --
21:53:27 SQL> 
21:53:27 SQL> CREATE OR REPLACE VIEW sme AS
21:53:27   2  SELECT
21:53:27   3  'aud'||m.ydate prdate
21:53:27   4  ,NULL gattn
21:53:27   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:53:27   6  ,eur_g00
21:53:27   7  ,eur_g01
21:53:27   8  ,eur_g02
21:53:27   9  ,eur_g03
21:53:27  10  ,eur_g04
21:53:27  11  ,eur_g05
21:53:27  12  ,eur_g06
21:53:27  13  ,eur_g07
21:53:27  14  ,eur_g08
21:53:27  15  ,eur_g09
21:53:27  16  ,eur_g10
21:53:27  17  ,eur_g11
21:53:27  18  ,eur_g12
21:53:27  19  ,eur_g13
21:53:27  20  ,eur_g14
21:53:27  21  ,eur_g15
21:53:27  22  ,eur_g16
21:53:27  23  ,eur_g17
21:53:27  24  ,eur_g18
21:53:27  25  ,eur_g19
21:53:27  26  ,eur_g20
21:53:27  27  ,eur_g21
21:53:27  28  ,eur_g22
21:53:27  29  ,eur_g23
21:53:27  30  ,eur_g24
21:53:27  31  ,eur_g25
21:53:27  32  ,eur_g26
21:53:27  33  ,eur_g27
21:53:27  34  ,eur_g28
21:53:27  35  ,eur_g29
21:53:27  36  ,eur_g30
21:53:27  37  ,eur_g31
21:53:27  38  ,eur_g32
21:53:27  39  ,eur_g33
21:53:27  40  ,eur_g34
21:53:27  41  ,eur_g35
21:53:27  42  ,eur_g36
21:53:27  43  ,eur_g37
21:53:27  44  ,eur_g38
21:53:27  45  ,eur_g39
21:53:27  46  ,eur_g40
21:53:27  47  ,eur_g41
21:53:27  48  ,aud_g00
21:53:27  49  ,aud_g01
21:53:27  50  ,aud_g02
21:53:27  51  ,aud_g03
21:53:27  52  ,aud_g04
21:53:27  53  ,aud_g05
21:53:27  54  ,aud_g06
21:53:27  55  ,aud_g07
21:53:27  56  ,aud_g08
21:53:27  57  ,aud_g09
21:53:27  58  ,aud_g10
21:53:27  59  ,aud_g11
21:53:27  60  ,aud_g12
21:53:27  61  ,aud_g13
21:53:27  62  ,aud_g14
21:53:27  63  ,aud_g15
21:53:27  64  ,aud_g16
21:53:27  65  ,aud_g17
21:53:27  66  ,aud_g18
21:53:27  67  ,aud_g19
21:53:27  68  ,aud_g20
21:53:27  69  ,aud_g21
21:53:27  70  ,aud_g22
21:53:27  71  ,aud_g23
21:53:27  72  ,aud_g24
21:53:27  73  ,aud_g25
21:53:27  74  ,aud_g26
21:53:27  75  ,aud_g27
21:53:27  76  ,aud_g28
21:53:27  77  ,aud_g29
21:53:27  78  ,aud_g30
21:53:27  79  ,aud_g31
21:53:27  80  ,aud_g32
21:53:27  81  ,aud_g33
21:53:27  82  ,aud_g34
21:53:27  83  ,aud_g35
21:53:27  84  ,aud_g36
21:53:27  85  ,aud_g37
21:53:27  86  ,aud_g38
21:53:27  87  ,aud_g39
21:53:27  88  ,aud_g40
21:53:27  89  ,aud_g41
21:53:27  90  ,gbp_g00
21:53:27  91  ,gbp_g01
21:53:27  92  ,gbp_g02
21:53:27  93  ,gbp_g03
21:53:27  94  ,gbp_g04
21:53:27  95  ,gbp_g05
21:53:27  96  ,gbp_g06
21:53:27  97  ,gbp_g07
21:53:27  98  ,gbp_g08
21:53:27  99  ,gbp_g09
21:53:27 100  ,gbp_g10
21:53:27 101  ,gbp_g11
21:53:27 102  ,gbp_g12
21:53:27 103  ,gbp_g13
21:53:27 104  ,gbp_g14
21:53:27 105  ,gbp_g15
21:53:27 106  ,gbp_g16
21:53:27 107  ,gbp_g17
21:53:27 108  ,gbp_g18
21:53:27 109  ,gbp_g19
21:53:27 110  ,gbp_g20
21:53:27 111  ,gbp_g21
21:53:27 112  ,gbp_g22
21:53:27 113  ,gbp_g23
21:53:27 114  ,gbp_g24
21:53:27 115  ,gbp_g25
21:53:27 116  ,gbp_g26
21:53:27 117  ,gbp_g27
21:53:27 118  ,gbp_g28
21:53:27 119  ,gbp_g29
21:53:27 120  ,gbp_g30
21:53:27 121  ,gbp_g31
21:53:27 122  ,gbp_g32
21:53:27 123  ,gbp_g33
21:53:27 124  ,gbp_g34
21:53:27 125  ,gbp_g35
21:53:27 126  ,gbp_g36
21:53:27 127  ,gbp_g37
21:53:27 128  ,gbp_g38
21:53:27 129  ,gbp_g39
21:53:27 130  ,gbp_g40
21:53:27 131  ,gbp_g41
21:53:27 132  ,jpy_g00
21:53:27 133  ,jpy_g01
21:53:27 134  ,jpy_g02
21:53:27 135  ,jpy_g03
21:53:27 136  ,jpy_g04
21:53:27 137  ,jpy_g05
21:53:27 138  ,jpy_g06
21:53:27 139  ,jpy_g07
21:53:27 140  ,jpy_g08
21:53:27 141  ,jpy_g09
21:53:27 142  ,jpy_g10
21:53:27 143  ,jpy_g11
21:53:27 144  ,jpy_g12
21:53:27 145  ,jpy_g13
21:53:27 146  ,jpy_g14
21:53:27 147  ,jpy_g15
21:53:27 148  ,jpy_g16
21:53:27 149  ,jpy_g17
21:53:27 150  ,jpy_g18
21:53:27 151  ,jpy_g19
21:53:27 152  ,jpy_g20
21:53:27 153  ,jpy_g21
21:53:27 154  ,jpy_g22
21:53:27 155  ,jpy_g23
21:53:27 156  ,jpy_g24
21:53:27 157  ,jpy_g25
21:53:27 158  ,jpy_g26
21:53:27 159  ,jpy_g27
21:53:27 160  ,jpy_g28
21:53:27 161  ,jpy_g29
21:53:27 162  ,jpy_g30
21:53:27 163  ,jpy_g31
21:53:27 164  ,jpy_g32
21:53:27 165  ,jpy_g33
21:53:27 166  ,jpy_g34
21:53:27 167  ,jpy_g35
21:53:27 168  ,jpy_g36
21:53:27 169  ,jpy_g37
21:53:27 170  ,jpy_g38
21:53:27 171  ,jpy_g39
21:53:27 172  ,jpy_g40
21:53:27 173  ,jpy_g41
21:53:27 174  ,cad_g00
21:53:27 175  ,cad_g01
21:53:27 176  ,cad_g02
21:53:27 177  ,cad_g03
21:53:27 178  ,cad_g04
21:53:27 179  ,cad_g05
21:53:27 180  ,cad_g06
21:53:27 181  ,cad_g07
21:53:27 182  ,cad_g08
21:53:27 183  ,cad_g09
21:53:27 184  ,cad_g10
21:53:27 185  ,cad_g11
21:53:27 186  ,cad_g12
21:53:27 187  ,cad_g13
21:53:27 188  ,cad_g14
21:53:27 189  ,cad_g15
21:53:27 190  ,cad_g16
21:53:27 191  ,cad_g17
21:53:27 192  ,cad_g18
21:53:27 193  ,cad_g19
21:53:27 194  ,cad_g20
21:53:27 195  ,cad_g21
21:53:27 196  ,cad_g22
21:53:27 197  ,cad_g23
21:53:27 198  ,cad_g24
21:53:27 199  ,cad_g25
21:53:27 200  ,cad_g26
21:53:27 201  ,cad_g27
21:53:27 202  ,cad_g28
21:53:27 203  ,cad_g29
21:53:27 204  ,cad_g30
21:53:27 205  ,cad_g31
21:53:27 206  ,cad_g32
21:53:27 207  ,cad_g33
21:53:27 208  ,cad_g34
21:53:27 209  ,cad_g35
21:53:27 210  ,cad_g36
21:53:27 211  ,cad_g37
21:53:27 212  ,cad_g38
21:53:27 213  ,cad_g39
21:53:27 214  ,cad_g40
21:53:27 215  ,cad_g41
21:53:27 216  ,chf_g00
21:53:27 217  ,chf_g01
21:53:27 218  ,chf_g02
21:53:27 219  ,chf_g03
21:53:27 220  ,chf_g04
21:53:27 221  ,chf_g05
21:53:27 222  ,chf_g06
21:53:27 223  ,chf_g07
21:53:27 224  ,chf_g08
21:53:27 225  ,chf_g09
21:53:27 226  ,chf_g10
21:53:27 227  ,chf_g11
21:53:27 228  ,chf_g12
21:53:27 229  ,chf_g13
21:53:27 230  ,chf_g14
21:53:27 231  ,chf_g15
21:53:27 232  ,chf_g16
21:53:27 233  ,chf_g17
21:53:27 234  ,chf_g18
21:53:27 235  ,chf_g19
21:53:27 236  ,chf_g20
21:53:27 237  ,chf_g21
21:53:27 238  ,chf_g22
21:53:27 239  ,chf_g23
21:53:27 240  ,chf_g24
21:53:27 241  ,chf_g25
21:53:27 242  ,chf_g26
21:53:27 243  ,chf_g27
21:53:27 244  ,chf_g28
21:53:27 245  ,chf_g29
21:53:27 246  ,chf_g30
21:53:27 247  ,chf_g31
21:53:27 248  ,chf_g32
21:53:27 249  ,chf_g33
21:53:27 250  ,chf_g34
21:53:27 251  ,chf_g35
21:53:27 252  ,chf_g36
21:53:27 253  ,chf_g37
21:53:27 254  ,chf_g38
21:53:27 255  ,chf_g39
21:53:27 256  ,chf_g40
21:53:27 257  ,chf_g41
21:53:27 258  FROM aud_ms6 m
21:53:27 259  WHERE m.ydate = '&1'||' '||'&2'
21:53:27 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'21:30:00'

View created.

Elapsed: 00:00:00.13
21:53:28 SQL> 
21:53:28 SQL> -- rpt
21:53:28 SQL> -- We should see just 1 row:
21:53:28 SQL> 
21:53:28 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
21:53:28 SQL> 
21:53:28 SQL> -- Build the model:
21:53:28 SQL> CREATE OR REPLACE VIEW bme AS
21:53:28   2  SELECT
21:53:28   3  'aud'||m.ydate prdate
21:53:28   4  ,gattn
21:53:28   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:53:28   6  ,eur_g00
21:53:28   7  ,eur_g01
21:53:28   8  ,eur_g02
21:53:28   9  ,eur_g03
21:53:28  10  ,eur_g04
21:53:28  11  ,eur_g05
21:53:28  12  ,eur_g06
21:53:28  13  ,eur_g07
21:53:28  14  ,eur_g08
21:53:28  15  ,eur_g09
21:53:28  16  ,eur_g10
21:53:28  17  ,eur_g11
21:53:28  18  ,eur_g12
21:53:28  19  ,eur_g13
21:53:28  20  ,eur_g14
21:53:28  21  ,eur_g15
21:53:28  22  ,eur_g16
21:53:28  23  ,eur_g17
21:53:28  24  ,eur_g18
21:53:28  25  ,eur_g19
21:53:28  26  ,eur_g20
21:53:28  27  ,eur_g21
21:53:28  28  ,eur_g22
21:53:28  29  ,eur_g23
21:53:28  30  ,eur_g24
21:53:28  31  ,eur_g25
21:53:28  32  ,eur_g26
21:53:28  33  ,eur_g27
21:53:28  34  ,eur_g28
21:53:28  35  ,eur_g29
21:53:28  36  ,eur_g30
21:53:28  37  ,eur_g31
21:53:28  38  ,eur_g32
21:53:28  39  ,eur_g33
21:53:28  40  ,eur_g34
21:53:28  41  ,eur_g35
21:53:28  42  ,eur_g36
21:53:28  43  ,eur_g37
21:53:28  44  ,eur_g38
21:53:28  45  ,eur_g39
21:53:28  46  ,eur_g40
21:53:28  47  ,eur_g41
21:53:28  48  ,aud_g00
21:53:28  49  ,aud_g01
21:53:28  50  ,aud_g02
21:53:28  51  ,aud_g03
21:53:28  52  ,aud_g04
21:53:28  53  ,aud_g05
21:53:28  54  ,aud_g06
21:53:28  55  ,aud_g07
21:53:28  56  ,aud_g08
21:53:28  57  ,aud_g09
21:53:28  58  ,aud_g10
21:53:28  59  ,aud_g11
21:53:28  60  ,aud_g12
21:53:28  61  ,aud_g13
21:53:28  62  ,aud_g14
21:53:28  63  ,aud_g15
21:53:28  64  ,aud_g16
21:53:28  65  ,aud_g17
21:53:28  66  ,aud_g18
21:53:28  67  ,aud_g19
21:53:28  68  ,aud_g20
21:53:28  69  ,aud_g21
21:53:28  70  ,aud_g22
21:53:28  71  ,aud_g23
21:53:28  72  ,aud_g24
21:53:28  73  ,aud_g25
21:53:28  74  ,aud_g26
21:53:28  75  ,aud_g27
21:53:28  76  ,aud_g28
21:53:28  77  ,aud_g29
21:53:28  78  ,aud_g30
21:53:28  79  ,aud_g31
21:53:28  80  ,aud_g32
21:53:28  81  ,aud_g33
21:53:28  82  ,aud_g34
21:53:28  83  ,aud_g35
21:53:28  84  ,aud_g36
21:53:28  85  ,aud_g37
21:53:28  86  ,aud_g38
21:53:28  87  ,aud_g39
21:53:28  88  ,aud_g40
21:53:28  89  ,aud_g41
21:53:28  90  ,gbp_g00
21:53:28  91  ,gbp_g01
21:53:28  92  ,gbp_g02
21:53:28  93  ,gbp_g03
21:53:28  94  ,gbp_g04
21:53:28  95  ,gbp_g05
21:53:28  96  ,gbp_g06
21:53:28  97  ,gbp_g07
21:53:28  98  ,gbp_g08
21:53:28  99  ,gbp_g09
21:53:28 100  ,gbp_g10
21:53:28 101  ,gbp_g11
21:53:28 102  ,gbp_g12
21:53:28 103  ,gbp_g13
21:53:28 104  ,gbp_g14
21:53:28 105  ,gbp_g15
21:53:28 106  ,gbp_g16
21:53:28 107  ,gbp_g17
21:53:28 108  ,gbp_g18
21:53:28 109  ,gbp_g19
21:53:28 110  ,gbp_g20
21:53:28 111  ,gbp_g21
21:53:28 112  ,gbp_g22
21:53:28 113  ,gbp_g23
21:53:28 114  ,gbp_g24
21:53:28 115  ,gbp_g25
21:53:28 116  ,gbp_g26
21:53:28 117  ,gbp_g27
21:53:28 118  ,gbp_g28
21:53:28 119  ,gbp_g29
21:53:28 120  ,gbp_g30
21:53:28 121  ,gbp_g31
21:53:28 122  ,gbp_g32
21:53:28 123  ,gbp_g33
21:53:28 124  ,gbp_g34
21:53:28 125  ,gbp_g35
21:53:28 126  ,gbp_g36
21:53:28 127  ,gbp_g37
21:53:28 128  ,gbp_g38
21:53:28 129  ,gbp_g39
21:53:28 130  ,gbp_g40
21:53:28 131  ,gbp_g41
21:53:28 132  ,jpy_g00
21:53:28 133  ,jpy_g01
21:53:28 134  ,jpy_g02
21:53:28 135  ,jpy_g03
21:53:28 136  ,jpy_g04
21:53:28 137  ,jpy_g05
21:53:28 138  ,jpy_g06
21:53:28 139  ,jpy_g07
21:53:28 140  ,jpy_g08
21:53:28 141  ,jpy_g09
21:53:28 142  ,jpy_g10
21:53:28 143  ,jpy_g11
21:53:28 144  ,jpy_g12
21:53:28 145  ,jpy_g13
21:53:28 146  ,jpy_g14
21:53:28 147  ,jpy_g15
21:53:28 148  ,jpy_g16
21:53:28 149  ,jpy_g17
21:53:28 150  ,jpy_g18
21:53:28 151  ,jpy_g19
21:53:28 152  ,jpy_g20
21:53:28 153  ,jpy_g21
21:53:28 154  ,jpy_g22
21:53:28 155  ,jpy_g23
21:53:28 156  ,jpy_g24
21:53:28 157  ,jpy_g25
21:53:28 158  ,jpy_g26
21:53:28 159  ,jpy_g27
21:53:28 160  ,jpy_g28
21:53:28 161  ,jpy_g29
21:53:28 162  ,jpy_g30
21:53:28 163  ,jpy_g31
21:53:28 164  ,jpy_g32
21:53:28 165  ,jpy_g33
21:53:28 166  ,jpy_g34
21:53:28 167  ,jpy_g35
21:53:28 168  ,jpy_g36
21:53:28 169  ,jpy_g37
21:53:28 170  ,jpy_g38
21:53:28 171  ,jpy_g39
21:53:28 172  ,jpy_g40
21:53:28 173  ,jpy_g41
21:53:28 174  ,cad_g00
21:53:28 175  ,cad_g01
21:53:28 176  ,cad_g02
21:53:28 177  ,cad_g03
21:53:28 178  ,cad_g04
21:53:28 179  ,cad_g05
21:53:28 180  ,cad_g06
21:53:28 181  ,cad_g07
21:53:28 182  ,cad_g08
21:53:28 183  ,cad_g09
21:53:28 184  ,cad_g10
21:53:28 185  ,cad_g11
21:53:28 186  ,cad_g12
21:53:28 187  ,cad_g13
21:53:28 188  ,cad_g14
21:53:28 189  ,cad_g15
21:53:28 190  ,cad_g16
21:53:28 191  ,cad_g17
21:53:28 192  ,cad_g18
21:53:28 193  ,cad_g19
21:53:28 194  ,cad_g20
21:53:28 195  ,cad_g21
21:53:28 196  ,cad_g22
21:53:28 197  ,cad_g23
21:53:28 198  ,cad_g24
21:53:28 199  ,cad_g25
21:53:28 200  ,cad_g26
21:53:28 201  ,cad_g27
21:53:28 202  ,cad_g28
21:53:28 203  ,cad_g29
21:53:28 204  ,cad_g30
21:53:28 205  ,cad_g31
21:53:28 206  ,cad_g32
21:53:28 207  ,cad_g33
21:53:28 208  ,cad_g34
21:53:28 209  ,cad_g35
21:53:28 210  ,cad_g36
21:53:28 211  ,cad_g37
21:53:28 212  ,cad_g38
21:53:28 213  ,cad_g39
21:53:28 214  ,cad_g40
21:53:28 215  ,cad_g41
21:53:28 216  ,chf_g00
21:53:28 217  ,chf_g01
21:53:28 218  ,chf_g02
21:53:28 219  ,chf_g03
21:53:28 220  ,chf_g04
21:53:28 221  ,chf_g05
21:53:28 222  ,chf_g06
21:53:28 223  ,chf_g07
21:53:28 224  ,chf_g08
21:53:28 225  ,chf_g09
21:53:28 226  ,chf_g10
21:53:28 227  ,chf_g11
21:53:28 228  ,chf_g12
21:53:28 229  ,chf_g13
21:53:28 230  ,chf_g14
21:53:28 231  ,chf_g15
21:53:28 232  ,chf_g16
21:53:28 233  ,chf_g17
21:53:28 234  ,chf_g18
21:53:28 235  ,chf_g19
21:53:28 236  ,chf_g20
21:53:28 237  ,chf_g21
21:53:28 238  ,chf_g22
21:53:28 239  ,chf_g23
21:53:28 240  ,chf_g24
21:53:28 241  ,chf_g25
21:53:28 242  ,chf_g26
21:53:28 243  ,chf_g27
21:53:28 244  ,chf_g28
21:53:28 245  ,chf_g29
21:53:28 246  ,chf_g30
21:53:28 247  ,chf_g31
21:53:28 248  ,chf_g32
21:53:28 249  ,chf_g33
21:53:28 250  ,chf_g34
21:53:28 251  ,chf_g35
21:53:28 252  ,chf_g36
21:53:28 253  ,chf_g37
21:53:28 254  ,chf_g38
21:53:28 255  ,chf_g39
21:53:28 256  ,chf_g40
21:53:28 257  ,chf_g41
21:53:28 258  FROM aud_ms6 m
21:53:28 259  WHERE gattn IN('nup','up')
21:53:28 260  AND 1+m.ydate < '&1'||' '||'&2'
21:53:28 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'21:30:00'

View created.

Elapsed: 00:00:00.13
21:53:28 SQL> 
21:53:28 SQL> -- rpt
21:53:28 SQL> 
21:53:28 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13123
up	     6414

Elapsed: 00:00:00.05
21:53:28 SQL> 
21:53:28 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 21:25:00

Elapsed: 00:00:00.03
21:53:28 SQL> 
21:53:28 SQL> -- Now build model from bme and score sme
21:53:28 SQL> @score1gattn.sql
21:53:28 SQL> -- score1gattn.sql
21:53:28 SQL> 
21:53:28 SQL> -- Does the 1st SVM score
21:53:28 SQL> 
21:53:28 SQL> -- Fill up svmc_apply_prep
21:53:28 SQL> @score_gattn.sql
21:53:28 SQL> --
21:53:28 SQL> -- score_gattn.sql
21:53:28 SQL> --
21:53:28 SQL> 
21:53:28 SQL> -- usage: score_gattn.sql
21:53:28 SQL> 
21:53:28 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:53:28 SQL> 
21:53:28 SQL> DEFINE target	= 'gattn'
21:53:28 SQL> DEFINE model_name = 'forex14'
21:53:28 SQL> DEFINE bldtable	= 'bme'
21:53:28 SQL> DEFINE scoretable = 'sme'
21:53:28 SQL> DEFINE case_id	= 'prdate'
21:53:28 SQL> 
21:53:28 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:53:28 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:53:28 SQL> 
21:53:28 SQL> -- Builds an SVM model using pl/sql.
21:53:28 SQL> 
21:53:28 SQL> -----------------------------------------------------------------------
21:53:28 SQL> --			    BUILD THE MODEL
21:53:28 SQL> -----------------------------------------------------------------------
21:53:28 SQL> 
21:53:28 SQL> -- Cleanup old build data preparation objects for repeat runs
21:53:28 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
21:53:28 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:53:28 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
21:53:28 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
21:53:28 SQL> 
21:53:28 SQL> 
21:53:28 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:53:28 SQL> --
21:53:28 SQL> -- DROP	TABLE svmc_settings ;
21:53:28 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:53:28 SQL> -- DELETE svmc_settings;
21:53:28 SQL> 
21:53:28 SQL> -- The default classification algorithm is Naive Bayes. So override
21:53:28 SQL> -- this choice to SVM using a settings table.
21:53:28 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:53:28 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:53:28 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:53:28 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:53:28 SQL> -- models.
21:53:28 SQL> --
21:53:28 SQL> 
21:53:28 SQL> -- Do this once and then comment it out.
21:53:28 SQL> -- That makes script go faster.
21:53:28 SQL> -- BEGIN
21:53:28 SQL> -- -- Populate settings table
21:53:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:53:28 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:53:28 SQL> --
21:53:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:53:28 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:53:28 SQL> --
21:53:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:53:28 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:53:28 SQL> --   COMMIT;
21:53:28 SQL> -- END;
21:53:28 SQL> -- /
21:53:28 SQL> 
21:53:28 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:53:28 SQL> 
21:53:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:53:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:53:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:53:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:53:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:53:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:53:28 SQL> 
21:53:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:53:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.17
21:53:28 SQL> 
21:53:28 SQL> --------------------------------
21:53:28 SQL> -- PREPARE BUILD (TRAINING) DATA
21:53:28 SQL> --
21:53:28 SQL> 
21:53:28 SQL> -- 1. Missing Value treatment for all Predictors and
21:53:28 SQL> -- 2. Outlier Treatment and
21:53:28 SQL> -- 3. Normalization are performed below.
21:53:28 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:53:28 SQL> --    normalized here.
21:53:28 SQL> 
21:53:28 SQL> BEGIN
21:53:28   2  	-- Perform missing value treatment for all predictors
21:53:28   3  	-- create miss tables
21:53:28   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:53:28   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:53:28   6  
21:53:28   7  	-- populate miss tables
21:53:28   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:53:28   9  	  miss_table_name => 'svmc_miss_num',
21:53:28  10  	  data_table_name => '&bldtable',
21:53:28  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:53:28  12  
21:53:28  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:53:28  14  	  miss_table_name => 'svmc_miss_cat',
21:53:28  15  	  data_table_name => '&bldtable',
21:53:28  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:53:28  17  
21:53:28  18  	-- xform input data to replace missing values
21:53:28  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:53:28  20  	  miss_table_name => 'svmc_miss_num',
21:53:28  21  	  data_table_name => '&bldtable',
21:53:28  22  	  xform_view_name => 'xformed_build_miss_num');
21:53:28  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:53:28  24  	  miss_table_name => 'svmc_miss_cat',
21:53:28  25  	  data_table_name => '&bldtable',
21:53:28  26  	  xform_view_name => 'xformed_build_miss_cat');
21:53:28  27  
21:53:28  28  	-- Perform outlier treatment.
21:53:28  29  	-- create clip table
21:53:28  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:53:28  31  
21:53:28  32  	-- populate clip table
21:53:28  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:53:28  34  	  clip_table_name => 'svmc_clip',
21:53:28  35  	  data_table_name => '&bldtable',
21:53:28  36  	  tail_frac	  => 0.025,
21:53:28  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:53:28  38  
21:53:28  39  	-- xform input data to winsorized data
21:53:28  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:53:28  41  	  clip_table_name => 'svmc_clip',
21:53:28  42  	  data_table_name => '&bldtable',
21:53:28  43  	  xform_view_name => 'svmc_winsor');
21:53:28  44  
21:53:28  45  	-- create normalization table
21:53:28  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:53:28  47  
21:53:28  48  	-- populate normalization table based on winsorized data
21:53:28  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:53:28  50  	  norm_table_name => 'svmc_norm',
21:53:28  51  	  data_table_name => 'svmc_winsor',
21:53:28  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:53:28  53  
21:53:28  54  	-- normalize the original data
21:53:28  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:53:28  56  	  norm_table_name => 'svmc_norm',
21:53:28  57  	  data_table_name => '&bldtable',
21:53:28  58  	  xform_view_name => 'svmc_build_prep');
21:53:28  59  END;
21:53:28  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.01
21:53:46 SQL> 
21:53:46 SQL> ---------------------
21:53:46 SQL> -- CREATE A NEW MODEL
21:53:46 SQL> --
21:53:46 SQL> -- Cleanup old model with the same name for repeat runs
21:53:46 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:53:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:53:46   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.10
21:53:47 SQL> 
21:53:47 SQL> -- Build a new SVM Model
21:53:47 SQL> BEGIN
21:53:47   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:53:47   3  	  model_name	      => '&model_name',
21:53:47   4  	  mining_function     => dbms_data_mining.classification,
21:53:47   5  	  data_table_name     => 'svmc_build_prep',
21:53:47   6  	  case_id_column_name => '&case_id',
21:53:47   7  	  target_column_name  => '&target',
21:53:47   8  	  settings_table_name => 'svmc_settings');
21:53:47   9  END;
21:53:47  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.69
21:54:15 SQL> 
21:54:15 SQL> -----------------------------------------------------------------------
21:54:15 SQL> --			       APPLY/score THE MODEL
21:54:15 SQL> -----------------------------------------------------------------------
21:54:15 SQL> 
21:54:15 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:54:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:54:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:54:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:54:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:54:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:54:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:54:15 SQL> -----------------------
21:54:15 SQL> -- PREPARE SCORING DATA
21:54:15 SQL> --
21:54:15 SQL> -- If the data for model creation has been prepared, then the data
21:54:15 SQL> -- to be scored using the model must be prepared in the same manner
21:54:15 SQL> -- in order to obtain meaningful results.
21:54:15 SQL> --
21:54:15 SQL> -- 1. Missing Value treatment for all Predictors and
21:54:15 SQL> -- 2. Normalization
21:54:15 SQL> -- No outlier treatment will be performed during test and apply. The
21:54:15 SQL> -- normalization step is sufficient, since the normalization parameters
21:54:15 SQL> -- already capture the effects of outlier treatment done with build data.
21:54:15 SQL> --
21:54:15 SQL> BEGIN
21:54:15   2  	-- Xform Test data to replace missing values
21:54:15   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:54:15   4  	  miss_table_name => 'svmc_miss_num',
21:54:15   5  	  data_table_name => '&scoretable',
21:54:15   6  	  xform_view_name => 'xformed_apply_miss_num');
21:54:15   7  
21:54:15   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:54:15   9  	  miss_table_name => 'svmc_miss_cat',
21:54:15  10  	  data_table_name => '&scoretable',
21:54:15  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:54:15  12  
21:54:15  13  	-- Normalize the data to be scored
21:54:15  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:54:15  15  	  norm_table_name => 'svmc_norm',
21:54:15  16  	  data_table_name => '&scoretable',
21:54:15  17  	  xform_view_name => 'svmc_apply_prep');
21:54:15  18  END;
21:54:15  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.24
21:54:16 SQL> 
21:54:16 SQL> -- Use same model_name used in score_gattn.sql
21:54:16 SQL> DEFINE model_name = 'forex14'
21:54:16 SQL> 
21:54:16 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
21:54:16 SQL> 
21:54:16 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
21:54:16   2  SELECT
21:54:16   3  prdate
21:54:16   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:54:16   5  ,sysdate
21:54:16   6  ,SUBSTR(prdate,1,3)pair
21:54:16   7  ,SUBSTR(prdate,4,19)ydate
21:54:16   8  FROM svmc_apply_prep
21:54:16   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:54:17 SQL> @aud_score1day_gattn.sql	2010-12-31 21:35:00
21:54:17 SQL> --
21:54:17 SQL> -- aud_score1day_gattn.sql
21:54:17 SQL> --
21:54:17 SQL> 
21:54:17 SQL> CREATE OR REPLACE VIEW sme AS
21:54:17   2  SELECT
21:54:17   3  'aud'||m.ydate prdate
21:54:17   4  ,NULL gattn
21:54:17   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:54:17   6  ,eur_g00
21:54:17   7  ,eur_g01
21:54:17   8  ,eur_g02
21:54:17   9  ,eur_g03
21:54:17  10  ,eur_g04
21:54:17  11  ,eur_g05
21:54:17  12  ,eur_g06
21:54:17  13  ,eur_g07
21:54:17  14  ,eur_g08
21:54:17  15  ,eur_g09
21:54:17  16  ,eur_g10
21:54:17  17  ,eur_g11
21:54:17  18  ,eur_g12
21:54:17  19  ,eur_g13
21:54:17  20  ,eur_g14
21:54:17  21  ,eur_g15
21:54:17  22  ,eur_g16
21:54:17  23  ,eur_g17
21:54:17  24  ,eur_g18
21:54:17  25  ,eur_g19
21:54:17  26  ,eur_g20
21:54:17  27  ,eur_g21
21:54:17  28  ,eur_g22
21:54:17  29  ,eur_g23
21:54:17  30  ,eur_g24
21:54:17  31  ,eur_g25
21:54:17  32  ,eur_g26
21:54:17  33  ,eur_g27
21:54:17  34  ,eur_g28
21:54:17  35  ,eur_g29
21:54:17  36  ,eur_g30
21:54:17  37  ,eur_g31
21:54:17  38  ,eur_g32
21:54:17  39  ,eur_g33
21:54:17  40  ,eur_g34
21:54:17  41  ,eur_g35
21:54:17  42  ,eur_g36
21:54:17  43  ,eur_g37
21:54:17  44  ,eur_g38
21:54:17  45  ,eur_g39
21:54:17  46  ,eur_g40
21:54:17  47  ,eur_g41
21:54:17  48  ,aud_g00
21:54:17  49  ,aud_g01
21:54:17  50  ,aud_g02
21:54:17  51  ,aud_g03
21:54:17  52  ,aud_g04
21:54:17  53  ,aud_g05
21:54:17  54  ,aud_g06
21:54:17  55  ,aud_g07
21:54:17  56  ,aud_g08
21:54:17  57  ,aud_g09
21:54:17  58  ,aud_g10
21:54:17  59  ,aud_g11
21:54:17  60  ,aud_g12
21:54:17  61  ,aud_g13
21:54:17  62  ,aud_g14
21:54:17  63  ,aud_g15
21:54:17  64  ,aud_g16
21:54:17  65  ,aud_g17
21:54:17  66  ,aud_g18
21:54:17  67  ,aud_g19
21:54:17  68  ,aud_g20
21:54:17  69  ,aud_g21
21:54:17  70  ,aud_g22
21:54:17  71  ,aud_g23
21:54:17  72  ,aud_g24
21:54:17  73  ,aud_g25
21:54:17  74  ,aud_g26
21:54:17  75  ,aud_g27
21:54:17  76  ,aud_g28
21:54:17  77  ,aud_g29
21:54:17  78  ,aud_g30
21:54:17  79  ,aud_g31
21:54:17  80  ,aud_g32
21:54:17  81  ,aud_g33
21:54:17  82  ,aud_g34
21:54:17  83  ,aud_g35
21:54:17  84  ,aud_g36
21:54:17  85  ,aud_g37
21:54:17  86  ,aud_g38
21:54:17  87  ,aud_g39
21:54:17  88  ,aud_g40
21:54:17  89  ,aud_g41
21:54:17  90  ,gbp_g00
21:54:17  91  ,gbp_g01
21:54:17  92  ,gbp_g02
21:54:17  93  ,gbp_g03
21:54:17  94  ,gbp_g04
21:54:17  95  ,gbp_g05
21:54:17  96  ,gbp_g06
21:54:17  97  ,gbp_g07
21:54:17  98  ,gbp_g08
21:54:17  99  ,gbp_g09
21:54:17 100  ,gbp_g10
21:54:17 101  ,gbp_g11
21:54:17 102  ,gbp_g12
21:54:17 103  ,gbp_g13
21:54:17 104  ,gbp_g14
21:54:17 105  ,gbp_g15
21:54:17 106  ,gbp_g16
21:54:17 107  ,gbp_g17
21:54:17 108  ,gbp_g18
21:54:17 109  ,gbp_g19
21:54:17 110  ,gbp_g20
21:54:17 111  ,gbp_g21
21:54:17 112  ,gbp_g22
21:54:17 113  ,gbp_g23
21:54:17 114  ,gbp_g24
21:54:17 115  ,gbp_g25
21:54:17 116  ,gbp_g26
21:54:17 117  ,gbp_g27
21:54:17 118  ,gbp_g28
21:54:17 119  ,gbp_g29
21:54:17 120  ,gbp_g30
21:54:17 121  ,gbp_g31
21:54:17 122  ,gbp_g32
21:54:17 123  ,gbp_g33
21:54:17 124  ,gbp_g34
21:54:17 125  ,gbp_g35
21:54:17 126  ,gbp_g36
21:54:17 127  ,gbp_g37
21:54:17 128  ,gbp_g38
21:54:17 129  ,gbp_g39
21:54:17 130  ,gbp_g40
21:54:17 131  ,gbp_g41
21:54:17 132  ,jpy_g00
21:54:17 133  ,jpy_g01
21:54:17 134  ,jpy_g02
21:54:17 135  ,jpy_g03
21:54:17 136  ,jpy_g04
21:54:17 137  ,jpy_g05
21:54:17 138  ,jpy_g06
21:54:17 139  ,jpy_g07
21:54:17 140  ,jpy_g08
21:54:17 141  ,jpy_g09
21:54:17 142  ,jpy_g10
21:54:17 143  ,jpy_g11
21:54:17 144  ,jpy_g12
21:54:17 145  ,jpy_g13
21:54:17 146  ,jpy_g14
21:54:17 147  ,jpy_g15
21:54:17 148  ,jpy_g16
21:54:17 149  ,jpy_g17
21:54:17 150  ,jpy_g18
21:54:17 151  ,jpy_g19
21:54:17 152  ,jpy_g20
21:54:17 153  ,jpy_g21
21:54:17 154  ,jpy_g22
21:54:17 155  ,jpy_g23
21:54:17 156  ,jpy_g24
21:54:17 157  ,jpy_g25
21:54:17 158  ,jpy_g26
21:54:17 159  ,jpy_g27
21:54:17 160  ,jpy_g28
21:54:17 161  ,jpy_g29
21:54:17 162  ,jpy_g30
21:54:17 163  ,jpy_g31
21:54:17 164  ,jpy_g32
21:54:17 165  ,jpy_g33
21:54:17 166  ,jpy_g34
21:54:17 167  ,jpy_g35
21:54:17 168  ,jpy_g36
21:54:17 169  ,jpy_g37
21:54:17 170  ,jpy_g38
21:54:17 171  ,jpy_g39
21:54:17 172  ,jpy_g40
21:54:17 173  ,jpy_g41
21:54:17 174  ,cad_g00
21:54:17 175  ,cad_g01
21:54:17 176  ,cad_g02
21:54:17 177  ,cad_g03
21:54:17 178  ,cad_g04
21:54:17 179  ,cad_g05
21:54:17 180  ,cad_g06
21:54:17 181  ,cad_g07
21:54:17 182  ,cad_g08
21:54:17 183  ,cad_g09
21:54:17 184  ,cad_g10
21:54:17 185  ,cad_g11
21:54:17 186  ,cad_g12
21:54:17 187  ,cad_g13
21:54:17 188  ,cad_g14
21:54:17 189  ,cad_g15
21:54:17 190  ,cad_g16
21:54:17 191  ,cad_g17
21:54:17 192  ,cad_g18
21:54:17 193  ,cad_g19
21:54:17 194  ,cad_g20
21:54:17 195  ,cad_g21
21:54:17 196  ,cad_g22
21:54:17 197  ,cad_g23
21:54:17 198  ,cad_g24
21:54:17 199  ,cad_g25
21:54:17 200  ,cad_g26
21:54:17 201  ,cad_g27
21:54:17 202  ,cad_g28
21:54:17 203  ,cad_g29
21:54:17 204  ,cad_g30
21:54:17 205  ,cad_g31
21:54:17 206  ,cad_g32
21:54:17 207  ,cad_g33
21:54:17 208  ,cad_g34
21:54:17 209  ,cad_g35
21:54:17 210  ,cad_g36
21:54:17 211  ,cad_g37
21:54:17 212  ,cad_g38
21:54:17 213  ,cad_g39
21:54:17 214  ,cad_g40
21:54:17 215  ,cad_g41
21:54:17 216  ,chf_g00
21:54:17 217  ,chf_g01
21:54:17 218  ,chf_g02
21:54:17 219  ,chf_g03
21:54:17 220  ,chf_g04
21:54:17 221  ,chf_g05
21:54:17 222  ,chf_g06
21:54:17 223  ,chf_g07
21:54:17 224  ,chf_g08
21:54:17 225  ,chf_g09
21:54:17 226  ,chf_g10
21:54:17 227  ,chf_g11
21:54:17 228  ,chf_g12
21:54:17 229  ,chf_g13
21:54:17 230  ,chf_g14
21:54:17 231  ,chf_g15
21:54:17 232  ,chf_g16
21:54:17 233  ,chf_g17
21:54:17 234  ,chf_g18
21:54:17 235  ,chf_g19
21:54:17 236  ,chf_g20
21:54:17 237  ,chf_g21
21:54:17 238  ,chf_g22
21:54:17 239  ,chf_g23
21:54:17 240  ,chf_g24
21:54:17 241  ,chf_g25
21:54:17 242  ,chf_g26
21:54:17 243  ,chf_g27
21:54:17 244  ,chf_g28
21:54:17 245  ,chf_g29
21:54:17 246  ,chf_g30
21:54:17 247  ,chf_g31
21:54:17 248  ,chf_g32
21:54:17 249  ,chf_g33
21:54:17 250  ,chf_g34
21:54:17 251  ,chf_g35
21:54:17 252  ,chf_g36
21:54:17 253  ,chf_g37
21:54:17 254  ,chf_g38
21:54:17 255  ,chf_g39
21:54:17 256  ,chf_g40
21:54:17 257  ,chf_g41
21:54:17 258  FROM aud_ms6 m
21:54:17 259  WHERE m.ydate = '&1'||' '||'&2'
21:54:17 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'21:35:00'

View created.

Elapsed: 00:00:00.13
21:54:17 SQL> 
21:54:17 SQL> -- rpt
21:54:17 SQL> -- We should see just 1 row:
21:54:17 SQL> 
21:54:17 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
21:54:17 SQL> 
21:54:17 SQL> -- Build the model:
21:54:17 SQL> CREATE OR REPLACE VIEW bme AS
21:54:17   2  SELECT
21:54:17   3  'aud'||m.ydate prdate
21:54:17   4  ,gattn
21:54:17   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:54:17   6  ,eur_g00
21:54:17   7  ,eur_g01
21:54:17   8  ,eur_g02
21:54:17   9  ,eur_g03
21:54:17  10  ,eur_g04
21:54:17  11  ,eur_g05
21:54:17  12  ,eur_g06
21:54:17  13  ,eur_g07
21:54:17  14  ,eur_g08
21:54:17  15  ,eur_g09
21:54:17  16  ,eur_g10
21:54:17  17  ,eur_g11
21:54:17  18  ,eur_g12
21:54:17  19  ,eur_g13
21:54:17  20  ,eur_g14
21:54:17  21  ,eur_g15
21:54:17  22  ,eur_g16
21:54:17  23  ,eur_g17
21:54:17  24  ,eur_g18
21:54:17  25  ,eur_g19
21:54:17  26  ,eur_g20
21:54:17  27  ,eur_g21
21:54:17  28  ,eur_g22
21:54:17  29  ,eur_g23
21:54:17  30  ,eur_g24
21:54:17  31  ,eur_g25
21:54:17  32  ,eur_g26
21:54:17  33  ,eur_g27
21:54:17  34  ,eur_g28
21:54:17  35  ,eur_g29
21:54:17  36  ,eur_g30
21:54:17  37  ,eur_g31
21:54:17  38  ,eur_g32
21:54:17  39  ,eur_g33
21:54:17  40  ,eur_g34
21:54:17  41  ,eur_g35
21:54:17  42  ,eur_g36
21:54:17  43  ,eur_g37
21:54:17  44  ,eur_g38
21:54:17  45  ,eur_g39
21:54:17  46  ,eur_g40
21:54:17  47  ,eur_g41
21:54:17  48  ,aud_g00
21:54:17  49  ,aud_g01
21:54:17  50  ,aud_g02
21:54:17  51  ,aud_g03
21:54:17  52  ,aud_g04
21:54:17  53  ,aud_g05
21:54:17  54  ,aud_g06
21:54:17  55  ,aud_g07
21:54:17  56  ,aud_g08
21:54:17  57  ,aud_g09
21:54:17  58  ,aud_g10
21:54:17  59  ,aud_g11
21:54:17  60  ,aud_g12
21:54:17  61  ,aud_g13
21:54:17  62  ,aud_g14
21:54:17  63  ,aud_g15
21:54:17  64  ,aud_g16
21:54:17  65  ,aud_g17
21:54:17  66  ,aud_g18
21:54:17  67  ,aud_g19
21:54:17  68  ,aud_g20
21:54:17  69  ,aud_g21
21:54:17  70  ,aud_g22
21:54:17  71  ,aud_g23
21:54:17  72  ,aud_g24
21:54:17  73  ,aud_g25
21:54:17  74  ,aud_g26
21:54:17  75  ,aud_g27
21:54:17  76  ,aud_g28
21:54:17  77  ,aud_g29
21:54:17  78  ,aud_g30
21:54:17  79  ,aud_g31
21:54:17  80  ,aud_g32
21:54:17  81  ,aud_g33
21:54:17  82  ,aud_g34
21:54:17  83  ,aud_g35
21:54:17  84  ,aud_g36
21:54:17  85  ,aud_g37
21:54:17  86  ,aud_g38
21:54:17  87  ,aud_g39
21:54:17  88  ,aud_g40
21:54:17  89  ,aud_g41
21:54:17  90  ,gbp_g00
21:54:17  91  ,gbp_g01
21:54:17  92  ,gbp_g02
21:54:17  93  ,gbp_g03
21:54:17  94  ,gbp_g04
21:54:17  95  ,gbp_g05
21:54:17  96  ,gbp_g06
21:54:17  97  ,gbp_g07
21:54:17  98  ,gbp_g08
21:54:17  99  ,gbp_g09
21:54:17 100  ,gbp_g10
21:54:17 101  ,gbp_g11
21:54:17 102  ,gbp_g12
21:54:17 103  ,gbp_g13
21:54:17 104  ,gbp_g14
21:54:17 105  ,gbp_g15
21:54:17 106  ,gbp_g16
21:54:17 107  ,gbp_g17
21:54:17 108  ,gbp_g18
21:54:17 109  ,gbp_g19
21:54:17 110  ,gbp_g20
21:54:17 111  ,gbp_g21
21:54:17 112  ,gbp_g22
21:54:17 113  ,gbp_g23
21:54:17 114  ,gbp_g24
21:54:17 115  ,gbp_g25
21:54:17 116  ,gbp_g26
21:54:17 117  ,gbp_g27
21:54:17 118  ,gbp_g28
21:54:17 119  ,gbp_g29
21:54:17 120  ,gbp_g30
21:54:17 121  ,gbp_g31
21:54:17 122  ,gbp_g32
21:54:17 123  ,gbp_g33
21:54:17 124  ,gbp_g34
21:54:17 125  ,gbp_g35
21:54:17 126  ,gbp_g36
21:54:17 127  ,gbp_g37
21:54:17 128  ,gbp_g38
21:54:17 129  ,gbp_g39
21:54:17 130  ,gbp_g40
21:54:17 131  ,gbp_g41
21:54:17 132  ,jpy_g00
21:54:17 133  ,jpy_g01
21:54:17 134  ,jpy_g02
21:54:17 135  ,jpy_g03
21:54:17 136  ,jpy_g04
21:54:17 137  ,jpy_g05
21:54:17 138  ,jpy_g06
21:54:17 139  ,jpy_g07
21:54:17 140  ,jpy_g08
21:54:17 141  ,jpy_g09
21:54:17 142  ,jpy_g10
21:54:17 143  ,jpy_g11
21:54:17 144  ,jpy_g12
21:54:17 145  ,jpy_g13
21:54:17 146  ,jpy_g14
21:54:17 147  ,jpy_g15
21:54:17 148  ,jpy_g16
21:54:17 149  ,jpy_g17
21:54:17 150  ,jpy_g18
21:54:17 151  ,jpy_g19
21:54:17 152  ,jpy_g20
21:54:17 153  ,jpy_g21
21:54:17 154  ,jpy_g22
21:54:17 155  ,jpy_g23
21:54:17 156  ,jpy_g24
21:54:17 157  ,jpy_g25
21:54:17 158  ,jpy_g26
21:54:17 159  ,jpy_g27
21:54:17 160  ,jpy_g28
21:54:17 161  ,jpy_g29
21:54:17 162  ,jpy_g30
21:54:17 163  ,jpy_g31
21:54:17 164  ,jpy_g32
21:54:17 165  ,jpy_g33
21:54:17 166  ,jpy_g34
21:54:17 167  ,jpy_g35
21:54:17 168  ,jpy_g36
21:54:17 169  ,jpy_g37
21:54:17 170  ,jpy_g38
21:54:17 171  ,jpy_g39
21:54:17 172  ,jpy_g40
21:54:17 173  ,jpy_g41
21:54:17 174  ,cad_g00
21:54:17 175  ,cad_g01
21:54:17 176  ,cad_g02
21:54:17 177  ,cad_g03
21:54:17 178  ,cad_g04
21:54:17 179  ,cad_g05
21:54:17 180  ,cad_g06
21:54:17 181  ,cad_g07
21:54:17 182  ,cad_g08
21:54:17 183  ,cad_g09
21:54:17 184  ,cad_g10
21:54:17 185  ,cad_g11
21:54:17 186  ,cad_g12
21:54:17 187  ,cad_g13
21:54:17 188  ,cad_g14
21:54:17 189  ,cad_g15
21:54:17 190  ,cad_g16
21:54:17 191  ,cad_g17
21:54:17 192  ,cad_g18
21:54:17 193  ,cad_g19
21:54:17 194  ,cad_g20
21:54:17 195  ,cad_g21
21:54:17 196  ,cad_g22
21:54:17 197  ,cad_g23
21:54:17 198  ,cad_g24
21:54:17 199  ,cad_g25
21:54:17 200  ,cad_g26
21:54:17 201  ,cad_g27
21:54:17 202  ,cad_g28
21:54:17 203  ,cad_g29
21:54:17 204  ,cad_g30
21:54:17 205  ,cad_g31
21:54:17 206  ,cad_g32
21:54:17 207  ,cad_g33
21:54:17 208  ,cad_g34
21:54:17 209  ,cad_g35
21:54:17 210  ,cad_g36
21:54:17 211  ,cad_g37
21:54:17 212  ,cad_g38
21:54:17 213  ,cad_g39
21:54:17 214  ,cad_g40
21:54:17 215  ,cad_g41
21:54:17 216  ,chf_g00
21:54:17 217  ,chf_g01
21:54:17 218  ,chf_g02
21:54:17 219  ,chf_g03
21:54:17 220  ,chf_g04
21:54:17 221  ,chf_g05
21:54:17 222  ,chf_g06
21:54:17 223  ,chf_g07
21:54:17 224  ,chf_g08
21:54:17 225  ,chf_g09
21:54:17 226  ,chf_g10
21:54:17 227  ,chf_g11
21:54:17 228  ,chf_g12
21:54:17 229  ,chf_g13
21:54:17 230  ,chf_g14
21:54:17 231  ,chf_g15
21:54:17 232  ,chf_g16
21:54:17 233  ,chf_g17
21:54:17 234  ,chf_g18
21:54:17 235  ,chf_g19
21:54:17 236  ,chf_g20
21:54:17 237  ,chf_g21
21:54:17 238  ,chf_g22
21:54:17 239  ,chf_g23
21:54:17 240  ,chf_g24
21:54:17 241  ,chf_g25
21:54:17 242  ,chf_g26
21:54:17 243  ,chf_g27
21:54:17 244  ,chf_g28
21:54:17 245  ,chf_g29
21:54:17 246  ,chf_g30
21:54:17 247  ,chf_g31
21:54:17 248  ,chf_g32
21:54:17 249  ,chf_g33
21:54:17 250  ,chf_g34
21:54:17 251  ,chf_g35
21:54:17 252  ,chf_g36
21:54:17 253  ,chf_g37
21:54:17 254  ,chf_g38
21:54:17 255  ,chf_g39
21:54:17 256  ,chf_g40
21:54:17 257  ,chf_g41
21:54:17 258  FROM aud_ms6 m
21:54:17 259  WHERE gattn IN('nup','up')
21:54:17 260  AND 1+m.ydate < '&1'||' '||'&2'
21:54:17 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'21:35:00'

View created.

Elapsed: 00:00:00.12
21:54:17 SQL> 
21:54:17 SQL> -- rpt
21:54:17 SQL> 
21:54:17 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13123
up	     6415

Elapsed: 00:00:00.05
21:54:17 SQL> 
21:54:17 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 21:30:00

Elapsed: 00:00:00.03
21:54:17 SQL> 
21:54:17 SQL> -- Now build model from bme and score sme
21:54:17 SQL> @score1gattn.sql
21:54:17 SQL> -- score1gattn.sql
21:54:17 SQL> 
21:54:17 SQL> -- Does the 1st SVM score
21:54:17 SQL> 
21:54:17 SQL> -- Fill up svmc_apply_prep
21:54:17 SQL> @score_gattn.sql
21:54:17 SQL> --
21:54:17 SQL> -- score_gattn.sql
21:54:17 SQL> --
21:54:17 SQL> 
21:54:17 SQL> -- usage: score_gattn.sql
21:54:17 SQL> 
21:54:17 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:54:17 SQL> 
21:54:17 SQL> DEFINE target	= 'gattn'
21:54:17 SQL> DEFINE model_name = 'forex14'
21:54:17 SQL> DEFINE bldtable	= 'bme'
21:54:17 SQL> DEFINE scoretable = 'sme'
21:54:17 SQL> DEFINE case_id	= 'prdate'
21:54:17 SQL> 
21:54:17 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:54:17 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:54:17 SQL> 
21:54:17 SQL> -- Builds an SVM model using pl/sql.
21:54:17 SQL> 
21:54:17 SQL> -----------------------------------------------------------------------
21:54:17 SQL> --			    BUILD THE MODEL
21:54:17 SQL> -----------------------------------------------------------------------
21:54:17 SQL> 
21:54:17 SQL> -- Cleanup old build data preparation objects for repeat runs
21:54:17 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
21:54:17 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
21:54:17 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
21:54:17 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
21:54:17 SQL> 
21:54:17 SQL> 
21:54:17 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:54:17 SQL> --
21:54:17 SQL> -- DROP	TABLE svmc_settings ;
21:54:17 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:54:17 SQL> -- DELETE svmc_settings;
21:54:17 SQL> 
21:54:17 SQL> -- The default classification algorithm is Naive Bayes. So override
21:54:17 SQL> -- this choice to SVM using a settings table.
21:54:17 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:54:17 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:54:17 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:54:17 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:54:17 SQL> -- models.
21:54:17 SQL> --
21:54:17 SQL> 
21:54:17 SQL> -- Do this once and then comment it out.
21:54:17 SQL> -- That makes script go faster.
21:54:17 SQL> -- BEGIN
21:54:17 SQL> -- -- Populate settings table
21:54:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:54:17 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:54:17 SQL> --
21:54:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:54:17 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:54:17 SQL> --
21:54:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:54:17 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:54:17 SQL> --   COMMIT;
21:54:17 SQL> -- END;
21:54:17 SQL> -- /
21:54:17 SQL> 
21:54:17 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
21:54:17 SQL> 
21:54:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:54:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:54:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:54:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:54:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:54:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:54:17 SQL> 
21:54:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:54:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:54:17 SQL> 
21:54:17 SQL> --------------------------------
21:54:17 SQL> -- PREPARE BUILD (TRAINING) DATA
21:54:17 SQL> --
21:54:17 SQL> 
21:54:17 SQL> -- 1. Missing Value treatment for all Predictors and
21:54:17 SQL> -- 2. Outlier Treatment and
21:54:17 SQL> -- 3. Normalization are performed below.
21:54:17 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:54:17 SQL> --    normalized here.
21:54:17 SQL> 
21:54:17 SQL> BEGIN
21:54:17   2  	-- Perform missing value treatment for all predictors
21:54:17   3  	-- create miss tables
21:54:17   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:54:17   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:54:17   6  
21:54:17   7  	-- populate miss tables
21:54:17   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:54:17   9  	  miss_table_name => 'svmc_miss_num',
21:54:17  10  	  data_table_name => '&bldtable',
21:54:17  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:54:17  12  
21:54:17  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:54:17  14  	  miss_table_name => 'svmc_miss_cat',
21:54:17  15  	  data_table_name => '&bldtable',
21:54:17  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:54:17  17  
21:54:17  18  	-- xform input data to replace missing values
21:54:17  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:54:17  20  	  miss_table_name => 'svmc_miss_num',
21:54:17  21  	  data_table_name => '&bldtable',
21:54:17  22  	  xform_view_name => 'xformed_build_miss_num');
21:54:17  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:54:17  24  	  miss_table_name => 'svmc_miss_cat',
21:54:17  25  	  data_table_name => '&bldtable',
21:54:17  26  	  xform_view_name => 'xformed_build_miss_cat');
21:54:17  27  
21:54:17  28  	-- Perform outlier treatment.
21:54:17  29  	-- create clip table
21:54:17  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:54:17  31  
21:54:17  32  	-- populate clip table
21:54:17  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:54:17  34  	  clip_table_name => 'svmc_clip',
21:54:17  35  	  data_table_name => '&bldtable',
21:54:17  36  	  tail_frac	  => 0.025,
21:54:17  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:54:17  38  
21:54:17  39  	-- xform input data to winsorized data
21:54:17  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:54:17  41  	  clip_table_name => 'svmc_clip',
21:54:17  42  	  data_table_name => '&bldtable',
21:54:17  43  	  xform_view_name => 'svmc_winsor');
21:54:17  44  
21:54:17  45  	-- create normalization table
21:54:17  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:54:17  47  
21:54:17  48  	-- populate normalization table based on winsorized data
21:54:17  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:54:17  50  	  norm_table_name => 'svmc_norm',
21:54:17  51  	  data_table_name => 'svmc_winsor',
21:54:17  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:54:17  53  
21:54:17  54  	-- normalize the original data
21:54:17  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:54:17  56  	  norm_table_name => 'svmc_norm',
21:54:17  57  	  data_table_name => '&bldtable',
21:54:17  58  	  xform_view_name => 'svmc_build_prep');
21:54:17  59  END;
21:54:17  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.15
21:54:35 SQL> 
21:54:35 SQL> ---------------------
21:54:35 SQL> -- CREATE A NEW MODEL
21:54:35 SQL> --
21:54:35 SQL> -- Cleanup old model with the same name for repeat runs
21:54:35 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:54:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:54:35   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.07
21:54:36 SQL> 
21:54:36 SQL> -- Build a new SVM Model
21:54:36 SQL> BEGIN
21:54:36   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:54:36   3  	  model_name	      => '&model_name',
21:54:36   4  	  mining_function     => dbms_data_mining.classification,
21:54:36   5  	  data_table_name     => 'svmc_build_prep',
21:54:36   6  	  case_id_column_name => '&case_id',
21:54:36   7  	  target_column_name  => '&target',
21:54:36   8  	  settings_table_name => 'svmc_settings');
21:54:36   9  END;
21:54:36  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.52
21:55:04 SQL> 
21:55:04 SQL> -----------------------------------------------------------------------
21:55:04 SQL> --			       APPLY/score THE MODEL
21:55:04 SQL> -----------------------------------------------------------------------
21:55:04 SQL> 
21:55:04 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:55:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:55:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:55:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:55:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:55:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:55:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:55:04 SQL> -----------------------
21:55:04 SQL> -- PREPARE SCORING DATA
21:55:04 SQL> --
21:55:04 SQL> -- If the data for model creation has been prepared, then the data
21:55:04 SQL> -- to be scored using the model must be prepared in the same manner
21:55:04 SQL> -- in order to obtain meaningful results.
21:55:04 SQL> --
21:55:04 SQL> -- 1. Missing Value treatment for all Predictors and
21:55:04 SQL> -- 2. Normalization
21:55:04 SQL> -- No outlier treatment will be performed during test and apply. The
21:55:04 SQL> -- normalization step is sufficient, since the normalization parameters
21:55:04 SQL> -- already capture the effects of outlier treatment done with build data.
21:55:04 SQL> --
21:55:04 SQL> BEGIN
21:55:04   2  	-- Xform Test data to replace missing values
21:55:04   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:55:04   4  	  miss_table_name => 'svmc_miss_num',
21:55:04   5  	  data_table_name => '&scoretable',
21:55:04   6  	  xform_view_name => 'xformed_apply_miss_num');
21:55:04   7  
21:55:04   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:55:04   9  	  miss_table_name => 'svmc_miss_cat',
21:55:04  10  	  data_table_name => '&scoretable',
21:55:04  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:55:04  12  
21:55:04  13  	-- Normalize the data to be scored
21:55:04  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:55:04  15  	  norm_table_name => 'svmc_norm',
21:55:04  16  	  data_table_name => '&scoretable',
21:55:04  17  	  xform_view_name => 'svmc_apply_prep');
21:55:04  18  END;
21:55:04  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
21:55:05 SQL> 
21:55:05 SQL> -- Use same model_name used in score_gattn.sql
21:55:05 SQL> DEFINE model_name = 'forex14'
21:55:05 SQL> 
21:55:05 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
21:55:05 SQL> 
21:55:05 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
21:55:05   2  SELECT
21:55:05   3  prdate
21:55:05   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:55:05   5  ,sysdate
21:55:05   6  ,SUBSTR(prdate,1,3)pair
21:55:05   7  ,SUBSTR(prdate,4,19)ydate
21:55:05   8  FROM svmc_apply_prep
21:55:05   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
21:55:06 SQL> @aud_score1day_gattn.sql	2010-12-31 21:40:00
21:55:06 SQL> --
21:55:06 SQL> -- aud_score1day_gattn.sql
21:55:06 SQL> --
21:55:06 SQL> 
21:55:06 SQL> CREATE OR REPLACE VIEW sme AS
21:55:06   2  SELECT
21:55:06   3  'aud'||m.ydate prdate
21:55:06   4  ,NULL gattn
21:55:06   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:55:06   6  ,eur_g00
21:55:06   7  ,eur_g01
21:55:06   8  ,eur_g02
21:55:06   9  ,eur_g03
21:55:06  10  ,eur_g04
21:55:06  11  ,eur_g05
21:55:06  12  ,eur_g06
21:55:06  13  ,eur_g07
21:55:06  14  ,eur_g08
21:55:06  15  ,eur_g09
21:55:06  16  ,eur_g10
21:55:06  17  ,eur_g11
21:55:06  18  ,eur_g12
21:55:06  19  ,eur_g13
21:55:06  20  ,eur_g14
21:55:06  21  ,eur_g15
21:55:06  22  ,eur_g16
21:55:06  23  ,eur_g17
21:55:06  24  ,eur_g18
21:55:06  25  ,eur_g19
21:55:06  26  ,eur_g20
21:55:06  27  ,eur_g21
21:55:06  28  ,eur_g22
21:55:06  29  ,eur_g23
21:55:06  30  ,eur_g24
21:55:06  31  ,eur_g25
21:55:06  32  ,eur_g26
21:55:06  33  ,eur_g27
21:55:06  34  ,eur_g28
21:55:06  35  ,eur_g29
21:55:06  36  ,eur_g30
21:55:06  37  ,eur_g31
21:55:06  38  ,eur_g32
21:55:06  39  ,eur_g33
21:55:06  40  ,eur_g34
21:55:06  41  ,eur_g35
21:55:06  42  ,eur_g36
21:55:06  43  ,eur_g37
21:55:06  44  ,eur_g38
21:55:06  45  ,eur_g39
21:55:06  46  ,eur_g40
21:55:06  47  ,eur_g41
21:55:06  48  ,aud_g00
21:55:06  49  ,aud_g01
21:55:06  50  ,aud_g02
21:55:06  51  ,aud_g03
21:55:06  52  ,aud_g04
21:55:06  53  ,aud_g05
21:55:06  54  ,aud_g06
21:55:06  55  ,aud_g07
21:55:06  56  ,aud_g08
21:55:06  57  ,aud_g09
21:55:06  58  ,aud_g10
21:55:06  59  ,aud_g11
21:55:06  60  ,aud_g12
21:55:06  61  ,aud_g13
21:55:06  62  ,aud_g14
21:55:06  63  ,aud_g15
21:55:06  64  ,aud_g16
21:55:06  65  ,aud_g17
21:55:06  66  ,aud_g18
21:55:06  67  ,aud_g19
21:55:06  68  ,aud_g20
21:55:06  69  ,aud_g21
21:55:06  70  ,aud_g22
21:55:06  71  ,aud_g23
21:55:06  72  ,aud_g24
21:55:06  73  ,aud_g25
21:55:06  74  ,aud_g26
21:55:06  75  ,aud_g27
21:55:06  76  ,aud_g28
21:55:06  77  ,aud_g29
21:55:06  78  ,aud_g30
21:55:06  79  ,aud_g31
21:55:06  80  ,aud_g32
21:55:06  81  ,aud_g33
21:55:06  82  ,aud_g34
21:55:06  83  ,aud_g35
21:55:06  84  ,aud_g36
21:55:06  85  ,aud_g37
21:55:06  86  ,aud_g38
21:55:06  87  ,aud_g39
21:55:06  88  ,aud_g40
21:55:06  89  ,aud_g41
21:55:06  90  ,gbp_g00
21:55:06  91  ,gbp_g01
21:55:06  92  ,gbp_g02
21:55:06  93  ,gbp_g03
21:55:06  94  ,gbp_g04
21:55:06  95  ,gbp_g05
21:55:06  96  ,gbp_g06
21:55:06  97  ,gbp_g07
21:55:06  98  ,gbp_g08
21:55:06  99  ,gbp_g09
21:55:06 100  ,gbp_g10
21:55:06 101  ,gbp_g11
21:55:06 102  ,gbp_g12
21:55:06 103  ,gbp_g13
21:55:06 104  ,gbp_g14
21:55:06 105  ,gbp_g15
21:55:06 106  ,gbp_g16
21:55:06 107  ,gbp_g17
21:55:06 108  ,gbp_g18
21:55:06 109  ,gbp_g19
21:55:06 110  ,gbp_g20
21:55:06 111  ,gbp_g21
21:55:06 112  ,gbp_g22
21:55:06 113  ,gbp_g23
21:55:06 114  ,gbp_g24
21:55:06 115  ,gbp_g25
21:55:06 116  ,gbp_g26
21:55:06 117  ,gbp_g27
21:55:06 118  ,gbp_g28
21:55:06 119  ,gbp_g29
21:55:06 120  ,gbp_g30
21:55:06 121  ,gbp_g31
21:55:06 122  ,gbp_g32
21:55:06 123  ,gbp_g33
21:55:06 124  ,gbp_g34
21:55:06 125  ,gbp_g35
21:55:06 126  ,gbp_g36
21:55:06 127  ,gbp_g37
21:55:06 128  ,gbp_g38
21:55:06 129  ,gbp_g39
21:55:06 130  ,gbp_g40
21:55:06 131  ,gbp_g41
21:55:06 132  ,jpy_g00
21:55:06 133  ,jpy_g01
21:55:06 134  ,jpy_g02
21:55:06 135  ,jpy_g03
21:55:06 136  ,jpy_g04
21:55:06 137  ,jpy_g05
21:55:06 138  ,jpy_g06
21:55:06 139  ,jpy_g07
21:55:06 140  ,jpy_g08
21:55:06 141  ,jpy_g09
21:55:06 142  ,jpy_g10
21:55:06 143  ,jpy_g11
21:55:06 144  ,jpy_g12
21:55:06 145  ,jpy_g13
21:55:06 146  ,jpy_g14
21:55:06 147  ,jpy_g15
21:55:06 148  ,jpy_g16
21:55:06 149  ,jpy_g17
21:55:06 150  ,jpy_g18
21:55:06 151  ,jpy_g19
21:55:06 152  ,jpy_g20
21:55:06 153  ,jpy_g21
21:55:06 154  ,jpy_g22
21:55:06 155  ,jpy_g23
21:55:06 156  ,jpy_g24
21:55:06 157  ,jpy_g25
21:55:06 158  ,jpy_g26
21:55:06 159  ,jpy_g27
21:55:06 160  ,jpy_g28
21:55:06 161  ,jpy_g29
21:55:06 162  ,jpy_g30
21:55:06 163  ,jpy_g31
21:55:06 164  ,jpy_g32
21:55:06 165  ,jpy_g33
21:55:06 166  ,jpy_g34
21:55:06 167  ,jpy_g35
21:55:06 168  ,jpy_g36
21:55:06 169  ,jpy_g37
21:55:06 170  ,jpy_g38
21:55:06 171  ,jpy_g39
21:55:06 172  ,jpy_g40
21:55:06 173  ,jpy_g41
21:55:06 174  ,cad_g00
21:55:06 175  ,cad_g01
21:55:06 176  ,cad_g02
21:55:06 177  ,cad_g03
21:55:06 178  ,cad_g04
21:55:06 179  ,cad_g05
21:55:06 180  ,cad_g06
21:55:06 181  ,cad_g07
21:55:06 182  ,cad_g08
21:55:06 183  ,cad_g09
21:55:06 184  ,cad_g10
21:55:06 185  ,cad_g11
21:55:06 186  ,cad_g12
21:55:06 187  ,cad_g13
21:55:06 188  ,cad_g14
21:55:06 189  ,cad_g15
21:55:06 190  ,cad_g16
21:55:06 191  ,cad_g17
21:55:06 192  ,cad_g18
21:55:06 193  ,cad_g19
21:55:06 194  ,cad_g20
21:55:06 195  ,cad_g21
21:55:06 196  ,cad_g22
21:55:06 197  ,cad_g23
21:55:06 198  ,cad_g24
21:55:06 199  ,cad_g25
21:55:06 200  ,cad_g26
21:55:06 201  ,cad_g27
21:55:06 202  ,cad_g28
21:55:06 203  ,cad_g29
21:55:06 204  ,cad_g30
21:55:06 205  ,cad_g31
21:55:06 206  ,cad_g32
21:55:06 207  ,cad_g33
21:55:06 208  ,cad_g34
21:55:06 209  ,cad_g35
21:55:06 210  ,cad_g36
21:55:06 211  ,cad_g37
21:55:06 212  ,cad_g38
21:55:06 213  ,cad_g39
21:55:06 214  ,cad_g40
21:55:06 215  ,cad_g41
21:55:06 216  ,chf_g00
21:55:06 217  ,chf_g01
21:55:06 218  ,chf_g02
21:55:06 219  ,chf_g03
21:55:06 220  ,chf_g04
21:55:06 221  ,chf_g05
21:55:06 222  ,chf_g06
21:55:06 223  ,chf_g07
21:55:06 224  ,chf_g08
21:55:06 225  ,chf_g09
21:55:06 226  ,chf_g10
21:55:06 227  ,chf_g11
21:55:06 228  ,chf_g12
21:55:06 229  ,chf_g13
21:55:06 230  ,chf_g14
21:55:06 231  ,chf_g15
21:55:06 232  ,chf_g16
21:55:06 233  ,chf_g17
21:55:06 234  ,chf_g18
21:55:06 235  ,chf_g19
21:55:06 236  ,chf_g20
21:55:06 237  ,chf_g21
21:55:06 238  ,chf_g22
21:55:06 239  ,chf_g23
21:55:06 240  ,chf_g24
21:55:06 241  ,chf_g25
21:55:06 242  ,chf_g26
21:55:06 243  ,chf_g27
21:55:06 244  ,chf_g28
21:55:06 245  ,chf_g29
21:55:06 246  ,chf_g30
21:55:06 247  ,chf_g31
21:55:06 248  ,chf_g32
21:55:06 249  ,chf_g33
21:55:06 250  ,chf_g34
21:55:06 251  ,chf_g35
21:55:06 252  ,chf_g36
21:55:06 253  ,chf_g37
21:55:06 254  ,chf_g38
21:55:06 255  ,chf_g39
21:55:06 256  ,chf_g40
21:55:06 257  ,chf_g41
21:55:06 258  FROM aud_ms6 m
21:55:06 259  WHERE m.ydate = '&1'||' '||'&2'
21:55:06 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'21:40:00'

View created.

Elapsed: 00:00:00.13
21:55:06 SQL> 
21:55:06 SQL> -- rpt
21:55:06 SQL> -- We should see just 1 row:
21:55:06 SQL> 
21:55:06 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
21:55:06 SQL> 
21:55:06 SQL> -- Build the model:
21:55:06 SQL> CREATE OR REPLACE VIEW bme AS
21:55:06   2  SELECT
21:55:06   3  'aud'||m.ydate prdate
21:55:06   4  ,gattn
21:55:06   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:55:06   6  ,eur_g00
21:55:06   7  ,eur_g01
21:55:06   8  ,eur_g02
21:55:06   9  ,eur_g03
21:55:06  10  ,eur_g04
21:55:06  11  ,eur_g05
21:55:06  12  ,eur_g06
21:55:06  13  ,eur_g07
21:55:06  14  ,eur_g08
21:55:06  15  ,eur_g09
21:55:06  16  ,eur_g10
21:55:06  17  ,eur_g11
21:55:06  18  ,eur_g12
21:55:06  19  ,eur_g13
21:55:06  20  ,eur_g14
21:55:06  21  ,eur_g15
21:55:06  22  ,eur_g16
21:55:06  23  ,eur_g17
21:55:06  24  ,eur_g18
21:55:06  25  ,eur_g19
21:55:06  26  ,eur_g20
21:55:06  27  ,eur_g21
21:55:06  28  ,eur_g22
21:55:06  29  ,eur_g23
21:55:06  30  ,eur_g24
21:55:06  31  ,eur_g25
21:55:06  32  ,eur_g26
21:55:06  33  ,eur_g27
21:55:06  34  ,eur_g28
21:55:06  35  ,eur_g29
21:55:06  36  ,eur_g30
21:55:06  37  ,eur_g31
21:55:06  38  ,eur_g32
21:55:06  39  ,eur_g33
21:55:06  40  ,eur_g34
21:55:06  41  ,eur_g35
21:55:06  42  ,eur_g36
21:55:06  43  ,eur_g37
21:55:06  44  ,eur_g38
21:55:06  45  ,eur_g39
21:55:06  46  ,eur_g40
21:55:06  47  ,eur_g41
21:55:06  48  ,aud_g00
21:55:06  49  ,aud_g01
21:55:06  50  ,aud_g02
21:55:06  51  ,aud_g03
21:55:06  52  ,aud_g04
21:55:06  53  ,aud_g05
21:55:06  54  ,aud_g06
21:55:06  55  ,aud_g07
21:55:06  56  ,aud_g08
21:55:06  57  ,aud_g09
21:55:06  58  ,aud_g10
21:55:06  59  ,aud_g11
21:55:06  60  ,aud_g12
21:55:06  61  ,aud_g13
21:55:06  62  ,aud_g14
21:55:06  63  ,aud_g15
21:55:06  64  ,aud_g16
21:55:06  65  ,aud_g17
21:55:06  66  ,aud_g18
21:55:06  67  ,aud_g19
21:55:06  68  ,aud_g20
21:55:06  69  ,aud_g21
21:55:06  70  ,aud_g22
21:55:06  71  ,aud_g23
21:55:06  72  ,aud_g24
21:55:06  73  ,aud_g25
21:55:06  74  ,aud_g26
21:55:06  75  ,aud_g27
21:55:06  76  ,aud_g28
21:55:06  77  ,aud_g29
21:55:06  78  ,aud_g30
21:55:06  79  ,aud_g31
21:55:06  80  ,aud_g32
21:55:06  81  ,aud_g33
21:55:06  82  ,aud_g34
21:55:06  83  ,aud_g35
21:55:06  84  ,aud_g36
21:55:06  85  ,aud_g37
21:55:06  86  ,aud_g38
21:55:06  87  ,aud_g39
21:55:06  88  ,aud_g40
21:55:06  89  ,aud_g41
21:55:06  90  ,gbp_g00
21:55:06  91  ,gbp_g01
21:55:06  92  ,gbp_g02
21:55:06  93  ,gbp_g03
21:55:06  94  ,gbp_g04
21:55:06  95  ,gbp_g05
21:55:06  96  ,gbp_g06
21:55:06  97  ,gbp_g07
21:55:06  98  ,gbp_g08
21:55:06  99  ,gbp_g09
21:55:06 100  ,gbp_g10
21:55:06 101  ,gbp_g11
21:55:06 102  ,gbp_g12
21:55:06 103  ,gbp_g13
21:55:06 104  ,gbp_g14
21:55:06 105  ,gbp_g15
21:55:06 106  ,gbp_g16
21:55:06 107  ,gbp_g17
21:55:06 108  ,gbp_g18
21:55:06 109  ,gbp_g19
21:55:06 110  ,gbp_g20
21:55:06 111  ,gbp_g21
21:55:06 112  ,gbp_g22
21:55:06 113  ,gbp_g23
21:55:06 114  ,gbp_g24
21:55:06 115  ,gbp_g25
21:55:06 116  ,gbp_g26
21:55:06 117  ,gbp_g27
21:55:06 118  ,gbp_g28
21:55:06 119  ,gbp_g29
21:55:06 120  ,gbp_g30
21:55:06 121  ,gbp_g31
21:55:06 122  ,gbp_g32
21:55:06 123  ,gbp_g33
21:55:06 124  ,gbp_g34
21:55:06 125  ,gbp_g35
21:55:06 126  ,gbp_g36
21:55:06 127  ,gbp_g37
21:55:06 128  ,gbp_g38
21:55:06 129  ,gbp_g39
21:55:06 130  ,gbp_g40
21:55:06 131  ,gbp_g41
21:55:06 132  ,jpy_g00
21:55:06 133  ,jpy_g01
21:55:06 134  ,jpy_g02
21:55:06 135  ,jpy_g03
21:55:06 136  ,jpy_g04
21:55:06 137  ,jpy_g05
21:55:06 138  ,jpy_g06
21:55:06 139  ,jpy_g07
21:55:06 140  ,jpy_g08
21:55:06 141  ,jpy_g09
21:55:06 142  ,jpy_g10
21:55:06 143  ,jpy_g11
21:55:06 144  ,jpy_g12
21:55:06 145  ,jpy_g13
21:55:06 146  ,jpy_g14
21:55:06 147  ,jpy_g15
21:55:06 148  ,jpy_g16
21:55:06 149  ,jpy_g17
21:55:06 150  ,jpy_g18
21:55:06 151  ,jpy_g19
21:55:06 152  ,jpy_g20
21:55:06 153  ,jpy_g21
21:55:06 154  ,jpy_g22
21:55:06 155  ,jpy_g23
21:55:06 156  ,jpy_g24
21:55:06 157  ,jpy_g25
21:55:06 158  ,jpy_g26
21:55:06 159  ,jpy_g27
21:55:06 160  ,jpy_g28
21:55:06 161  ,jpy_g29
21:55:06 162  ,jpy_g30
21:55:06 163  ,jpy_g31
21:55:06 164  ,jpy_g32
21:55:06 165  ,jpy_g33
21:55:06 166  ,jpy_g34
21:55:06 167  ,jpy_g35
21:55:06 168  ,jpy_g36
21:55:06 169  ,jpy_g37
21:55:06 170  ,jpy_g38
21:55:06 171  ,jpy_g39
21:55:06 172  ,jpy_g40
21:55:06 173  ,jpy_g41
21:55:06 174  ,cad_g00
21:55:06 175  ,cad_g01
21:55:06 176  ,cad_g02
21:55:06 177  ,cad_g03
21:55:06 178  ,cad_g04
21:55:06 179  ,cad_g05
21:55:06 180  ,cad_g06
21:55:06 181  ,cad_g07
21:55:06 182  ,cad_g08
21:55:06 183  ,cad_g09
21:55:06 184  ,cad_g10
21:55:06 185  ,cad_g11
21:55:06 186  ,cad_g12
21:55:06 187  ,cad_g13
21:55:06 188  ,cad_g14
21:55:06 189  ,cad_g15
21:55:06 190  ,cad_g16
21:55:06 191  ,cad_g17
21:55:06 192  ,cad_g18
21:55:06 193  ,cad_g19
21:55:06 194  ,cad_g20
21:55:06 195  ,cad_g21
21:55:06 196  ,cad_g22
21:55:06 197  ,cad_g23
21:55:06 198  ,cad_g24
21:55:06 199  ,cad_g25
21:55:06 200  ,cad_g26
21:55:06 201  ,cad_g27
21:55:06 202  ,cad_g28
21:55:06 203  ,cad_g29
21:55:06 204  ,cad_g30
21:55:06 205  ,cad_g31
21:55:06 206  ,cad_g32
21:55:06 207  ,cad_g33
21:55:06 208  ,cad_g34
21:55:06 209  ,cad_g35
21:55:06 210  ,cad_g36
21:55:06 211  ,cad_g37
21:55:06 212  ,cad_g38
21:55:06 213  ,cad_g39
21:55:06 214  ,cad_g40
21:55:06 215  ,cad_g41
21:55:06 216  ,chf_g00
21:55:06 217  ,chf_g01
21:55:06 218  ,chf_g02
21:55:06 219  ,chf_g03
21:55:06 220  ,chf_g04
21:55:06 221  ,chf_g05
21:55:06 222  ,chf_g06
21:55:06 223  ,chf_g07
21:55:06 224  ,chf_g08
21:55:06 225  ,chf_g09
21:55:06 226  ,chf_g10
21:55:06 227  ,chf_g11
21:55:06 228  ,chf_g12
21:55:06 229  ,chf_g13
21:55:06 230  ,chf_g14
21:55:06 231  ,chf_g15
21:55:06 232  ,chf_g16
21:55:06 233  ,chf_g17
21:55:06 234  ,chf_g18
21:55:06 235  ,chf_g19
21:55:06 236  ,chf_g20
21:55:06 237  ,chf_g21
21:55:06 238  ,chf_g22
21:55:06 239  ,chf_g23
21:55:06 240  ,chf_g24
21:55:06 241  ,chf_g25
21:55:06 242  ,chf_g26
21:55:06 243  ,chf_g27
21:55:06 244  ,chf_g28
21:55:06 245  ,chf_g29
21:55:06 246  ,chf_g30
21:55:06 247  ,chf_g31
21:55:06 248  ,chf_g32
21:55:06 249  ,chf_g33
21:55:06 250  ,chf_g34
21:55:06 251  ,chf_g35
21:55:06 252  ,chf_g36
21:55:06 253  ,chf_g37
21:55:06 254  ,chf_g38
21:55:06 255  ,chf_g39
21:55:06 256  ,chf_g40
21:55:06 257  ,chf_g41
21:55:06 258  FROM aud_ms6 m
21:55:06 259  WHERE gattn IN('nup','up')
21:55:06 260  AND 1+m.ydate < '&1'||' '||'&2'
21:55:06 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'21:40:00'

View created.

Elapsed: 00:00:00.13
21:55:06 SQL> 
21:55:06 SQL> -- rpt
21:55:06 SQL> 
21:55:06 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13124
up	     6415

Elapsed: 00:00:00.05
21:55:06 SQL> 
21:55:06 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 21:35:00

Elapsed: 00:00:00.03
21:55:06 SQL> 
21:55:06 SQL> -- Now build model from bme and score sme
21:55:06 SQL> @score1gattn.sql
21:55:06 SQL> -- score1gattn.sql
21:55:06 SQL> 
21:55:06 SQL> -- Does the 1st SVM score
21:55:06 SQL> 
21:55:06 SQL> -- Fill up svmc_apply_prep
21:55:06 SQL> @score_gattn.sql
21:55:06 SQL> --
21:55:06 SQL> -- score_gattn.sql
21:55:06 SQL> --
21:55:06 SQL> 
21:55:06 SQL> -- usage: score_gattn.sql
21:55:06 SQL> 
21:55:06 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:55:06 SQL> 
21:55:06 SQL> DEFINE target	= 'gattn'
21:55:06 SQL> DEFINE model_name = 'forex14'
21:55:06 SQL> DEFINE bldtable	= 'bme'
21:55:06 SQL> DEFINE scoretable = 'sme'
21:55:06 SQL> DEFINE case_id	= 'prdate'
21:55:06 SQL> 
21:55:06 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:55:06 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:55:06 SQL> 
21:55:06 SQL> -- Builds an SVM model using pl/sql.
21:55:06 SQL> 
21:55:06 SQL> -----------------------------------------------------------------------
21:55:06 SQL> --			    BUILD THE MODEL
21:55:06 SQL> -----------------------------------------------------------------------
21:55:06 SQL> 
21:55:06 SQL> -- Cleanup old build data preparation objects for repeat runs
21:55:06 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
21:55:06 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:55:06 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
21:55:06 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
21:55:06 SQL> 
21:55:06 SQL> 
21:55:06 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:55:06 SQL> --
21:55:06 SQL> -- DROP	TABLE svmc_settings ;
21:55:06 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:55:06 SQL> -- DELETE svmc_settings;
21:55:06 SQL> 
21:55:06 SQL> -- The default classification algorithm is Naive Bayes. So override
21:55:06 SQL> -- this choice to SVM using a settings table.
21:55:06 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:55:06 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:55:06 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:55:06 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:55:06 SQL> -- models.
21:55:06 SQL> --
21:55:06 SQL> 
21:55:06 SQL> -- Do this once and then comment it out.
21:55:06 SQL> -- That makes script go faster.
21:55:06 SQL> -- BEGIN
21:55:06 SQL> -- -- Populate settings table
21:55:06 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:55:06 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:55:06 SQL> --
21:55:06 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:55:06 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:55:06 SQL> --
21:55:06 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:55:06 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:55:06 SQL> --   COMMIT;
21:55:06 SQL> -- END;
21:55:06 SQL> -- /
21:55:06 SQL> 
21:55:06 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:55:06 SQL> 
21:55:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:55:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:55:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:55:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:55:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:55:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:55:06 SQL> 
21:55:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:55:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:55:06 SQL> 
21:55:06 SQL> --------------------------------
21:55:06 SQL> -- PREPARE BUILD (TRAINING) DATA
21:55:06 SQL> --
21:55:06 SQL> 
21:55:06 SQL> -- 1. Missing Value treatment for all Predictors and
21:55:06 SQL> -- 2. Outlier Treatment and
21:55:06 SQL> -- 3. Normalization are performed below.
21:55:06 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:55:06 SQL> --    normalized here.
21:55:06 SQL> 
21:55:06 SQL> BEGIN
21:55:06   2  	-- Perform missing value treatment for all predictors
21:55:06   3  	-- create miss tables
21:55:06   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:55:06   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:55:06   6  
21:55:06   7  	-- populate miss tables
21:55:06   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:55:06   9  	  miss_table_name => 'svmc_miss_num',
21:55:06  10  	  data_table_name => '&bldtable',
21:55:06  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:55:06  12  
21:55:06  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:55:06  14  	  miss_table_name => 'svmc_miss_cat',
21:55:06  15  	  data_table_name => '&bldtable',
21:55:06  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:55:06  17  
21:55:06  18  	-- xform input data to replace missing values
21:55:06  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:55:06  20  	  miss_table_name => 'svmc_miss_num',
21:55:06  21  	  data_table_name => '&bldtable',
21:55:06  22  	  xform_view_name => 'xformed_build_miss_num');
21:55:06  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:55:06  24  	  miss_table_name => 'svmc_miss_cat',
21:55:06  25  	  data_table_name => '&bldtable',
21:55:06  26  	  xform_view_name => 'xformed_build_miss_cat');
21:55:06  27  
21:55:06  28  	-- Perform outlier treatment.
21:55:06  29  	-- create clip table
21:55:06  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:55:06  31  
21:55:06  32  	-- populate clip table
21:55:06  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:55:06  34  	  clip_table_name => 'svmc_clip',
21:55:06  35  	  data_table_name => '&bldtable',
21:55:06  36  	  tail_frac	  => 0.025,
21:55:06  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:55:06  38  
21:55:06  39  	-- xform input data to winsorized data
21:55:06  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:55:06  41  	  clip_table_name => 'svmc_clip',
21:55:06  42  	  data_table_name => '&bldtable',
21:55:06  43  	  xform_view_name => 'svmc_winsor');
21:55:06  44  
21:55:06  45  	-- create normalization table
21:55:06  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:55:06  47  
21:55:06  48  	-- populate normalization table based on winsorized data
21:55:06  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:55:06  50  	  norm_table_name => 'svmc_norm',
21:55:06  51  	  data_table_name => 'svmc_winsor',
21:55:06  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:55:06  53  
21:55:06  54  	-- normalize the original data
21:55:06  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:55:06  56  	  norm_table_name => 'svmc_norm',
21:55:06  57  	  data_table_name => '&bldtable',
21:55:06  58  	  xform_view_name => 'svmc_build_prep');
21:55:06  59  END;
21:55:06  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.08
21:55:24 SQL> 
21:55:24 SQL> ---------------------
21:55:24 SQL> -- CREATE A NEW MODEL
21:55:24 SQL> --
21:55:24 SQL> -- Cleanup old model with the same name for repeat runs
21:55:24 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:55:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:24   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.04
21:55:25 SQL> 
21:55:25 SQL> -- Build a new SVM Model
21:55:25 SQL> BEGIN
21:55:25   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:55:25   3  	  model_name	      => '&model_name',
21:55:25   4  	  mining_function     => dbms_data_mining.classification,
21:55:25   5  	  data_table_name     => 'svmc_build_prep',
21:55:25   6  	  case_id_column_name => '&case_id',
21:55:25   7  	  target_column_name  => '&target',
21:55:25   8  	  settings_table_name => 'svmc_settings');
21:55:25   9  END;
21:55:25  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.83
21:55:53 SQL> 
21:55:53 SQL> -----------------------------------------------------------------------
21:55:53 SQL> --			       APPLY/score THE MODEL
21:55:53 SQL> -----------------------------------------------------------------------
21:55:53 SQL> 
21:55:53 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:55:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:55:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:55:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:55:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
21:55:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:55:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:55:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:55:53 SQL> -----------------------
21:55:53 SQL> -- PREPARE SCORING DATA
21:55:53 SQL> --
21:55:53 SQL> -- If the data for model creation has been prepared, then the data
21:55:53 SQL> -- to be scored using the model must be prepared in the same manner
21:55:53 SQL> -- in order to obtain meaningful results.
21:55:53 SQL> --
21:55:53 SQL> -- 1. Missing Value treatment for all Predictors and
21:55:53 SQL> -- 2. Normalization
21:55:53 SQL> -- No outlier treatment will be performed during test and apply. The
21:55:53 SQL> -- normalization step is sufficient, since the normalization parameters
21:55:53 SQL> -- already capture the effects of outlier treatment done with build data.
21:55:53 SQL> --
21:55:53 SQL> BEGIN
21:55:53   2  	-- Xform Test data to replace missing values
21:55:53   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:55:53   4  	  miss_table_name => 'svmc_miss_num',
21:55:53   5  	  data_table_name => '&scoretable',
21:55:53   6  	  xform_view_name => 'xformed_apply_miss_num');
21:55:53   7  
21:55:53   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:55:53   9  	  miss_table_name => 'svmc_miss_cat',
21:55:53  10  	  data_table_name => '&scoretable',
21:55:53  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:55:53  12  
21:55:53  13  	-- Normalize the data to be scored
21:55:53  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:55:53  15  	  norm_table_name => 'svmc_norm',
21:55:53  16  	  data_table_name => '&scoretable',
21:55:53  17  	  xform_view_name => 'svmc_apply_prep');
21:55:53  18  END;
21:55:53  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
21:55:55 SQL> 
21:55:55 SQL> -- Use same model_name used in score_gattn.sql
21:55:55 SQL> DEFINE model_name = 'forex14'
21:55:55 SQL> 
21:55:55 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
21:55:55 SQL> 
21:55:55 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
21:55:55   2  SELECT
21:55:55   3  prdate
21:55:55   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:55:55   5  ,sysdate
21:55:55   6  ,SUBSTR(prdate,1,3)pair
21:55:55   7  ,SUBSTR(prdate,4,19)ydate
21:55:55   8  FROM svmc_apply_prep
21:55:55   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
21:55:55 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
