
SQL*Plus: Release 11.2.0.1.0 Production on Wed Dec 29 07:41:35 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

07:41:35 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
07:41:35 SQL> 07:41:35 SQL> @aud_score1day.sql  2010-12-29 07:20:00
07:41:35 SQL> --
07:41:35 SQL> -- aud_score1day.sql
07:41:35 SQL> --
07:41:35 SQL> 
07:41:35 SQL> CREATE OR REPLACE VIEW sme AS
07:41:35   2  SELECT
07:41:35   3  'aud'||m.ydate prdate
07:41:35   4  ,NULL gatt
07:41:35   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
07:41:35   6  ,eur_g00
07:41:35   7  ,eur_g01
07:41:35   8  ,eur_g02
07:41:35   9  ,eur_g03
07:41:35  10  ,eur_g04
07:41:35  11  ,eur_g05
07:41:35  12  ,eur_g06
07:41:35  13  ,eur_g07
07:41:35  14  ,eur_g08
07:41:35  15  ,eur_g09
07:41:35  16  ,eur_g10
07:41:35  17  ,eur_g11
07:41:35  18  ,eur_g12
07:41:35  19  ,eur_g13
07:41:35  20  ,eur_g14
07:41:35  21  ,eur_g15
07:41:35  22  ,eur_g16
07:41:35  23  ,eur_g17
07:41:35  24  ,eur_g18
07:41:35  25  ,eur_g19
07:41:35  26  ,eur_g20
07:41:35  27  ,eur_g21
07:41:35  28  ,eur_g22
07:41:35  29  ,eur_g23
07:41:35  30  ,eur_g24
07:41:35  31  ,eur_g25
07:41:35  32  ,eur_g26
07:41:35  33  ,eur_g27
07:41:35  34  ,eur_g28
07:41:35  35  ,eur_g29
07:41:35  36  ,eur_g30
07:41:35  37  ,eur_g31
07:41:35  38  ,eur_g32
07:41:35  39  ,eur_g33
07:41:35  40  ,eur_g34
07:41:35  41  ,eur_g35
07:41:35  42  ,eur_g36
07:41:35  43  ,eur_g37
07:41:35  44  ,eur_g38
07:41:35  45  ,eur_g39
07:41:35  46  ,eur_g40
07:41:35  47  ,eur_g41
07:41:35  48  ,aud_g00
07:41:35  49  ,aud_g01
07:41:35  50  ,aud_g02
07:41:35  51  ,aud_g03
07:41:35  52  ,aud_g04
07:41:35  53  ,aud_g05
07:41:35  54  ,aud_g06
07:41:35  55  ,aud_g07
07:41:35  56  ,aud_g08
07:41:35  57  ,aud_g09
07:41:35  58  ,aud_g10
07:41:35  59  ,aud_g11
07:41:35  60  ,aud_g12
07:41:35  61  ,aud_g13
07:41:35  62  ,aud_g14
07:41:35  63  ,aud_g15
07:41:35  64  ,aud_g16
07:41:35  65  ,aud_g17
07:41:35  66  ,aud_g18
07:41:35  67  ,aud_g19
07:41:35  68  ,aud_g20
07:41:35  69  ,aud_g21
07:41:35  70  ,aud_g22
07:41:35  71  ,aud_g23
07:41:35  72  ,aud_g24
07:41:35  73  ,aud_g25
07:41:35  74  ,aud_g26
07:41:35  75  ,aud_g27
07:41:35  76  ,aud_g28
07:41:35  77  ,aud_g29
07:41:35  78  ,aud_g30
07:41:35  79  ,aud_g31
07:41:35  80  ,aud_g32
07:41:35  81  ,aud_g33
07:41:35  82  ,aud_g34
07:41:35  83  ,aud_g35
07:41:35  84  ,aud_g36
07:41:35  85  ,aud_g37
07:41:35  86  ,aud_g38
07:41:35  87  ,aud_g39
07:41:35  88  ,aud_g40
07:41:35  89  ,aud_g41
07:41:35  90  ,gbp_g00
07:41:35  91  ,gbp_g01
07:41:35  92  ,gbp_g02
07:41:35  93  ,gbp_g03
07:41:35  94  ,gbp_g04
07:41:35  95  ,gbp_g05
07:41:35  96  ,gbp_g06
07:41:35  97  ,gbp_g07
07:41:35  98  ,gbp_g08
07:41:35  99  ,gbp_g09
07:41:35 100  ,gbp_g10
07:41:35 101  ,gbp_g11
07:41:35 102  ,gbp_g12
07:41:35 103  ,gbp_g13
07:41:35 104  ,gbp_g14
07:41:35 105  ,gbp_g15
07:41:35 106  ,gbp_g16
07:41:35 107  ,gbp_g17
07:41:35 108  ,gbp_g18
07:41:35 109  ,gbp_g19
07:41:35 110  ,gbp_g20
07:41:35 111  ,gbp_g21
07:41:35 112  ,gbp_g22
07:41:35 113  ,gbp_g23
07:41:35 114  ,gbp_g24
07:41:35 115  ,gbp_g25
07:41:35 116  ,gbp_g26
07:41:35 117  ,gbp_g27
07:41:35 118  ,gbp_g28
07:41:35 119  ,gbp_g29
07:41:35 120  ,gbp_g30
07:41:35 121  ,gbp_g31
07:41:35 122  ,gbp_g32
07:41:35 123  ,gbp_g33
07:41:35 124  ,gbp_g34
07:41:35 125  ,gbp_g35
07:41:35 126  ,gbp_g36
07:41:35 127  ,gbp_g37
07:41:35 128  ,gbp_g38
07:41:35 129  ,gbp_g39
07:41:35 130  ,gbp_g40
07:41:35 131  ,gbp_g41
07:41:35 132  ,jpy_g00
07:41:35 133  ,jpy_g01
07:41:35 134  ,jpy_g02
07:41:35 135  ,jpy_g03
07:41:35 136  ,jpy_g04
07:41:35 137  ,jpy_g05
07:41:35 138  ,jpy_g06
07:41:35 139  ,jpy_g07
07:41:35 140  ,jpy_g08
07:41:35 141  ,jpy_g09
07:41:35 142  ,jpy_g10
07:41:35 143  ,jpy_g11
07:41:35 144  ,jpy_g12
07:41:35 145  ,jpy_g13
07:41:35 146  ,jpy_g14
07:41:35 147  ,jpy_g15
07:41:35 148  ,jpy_g16
07:41:35 149  ,jpy_g17
07:41:35 150  ,jpy_g18
07:41:35 151  ,jpy_g19
07:41:35 152  ,jpy_g20
07:41:35 153  ,jpy_g21
07:41:35 154  ,jpy_g22
07:41:35 155  ,jpy_g23
07:41:35 156  ,jpy_g24
07:41:35 157  ,jpy_g25
07:41:35 158  ,jpy_g26
07:41:35 159  ,jpy_g27
07:41:35 160  ,jpy_g28
07:41:35 161  ,jpy_g29
07:41:35 162  ,jpy_g30
07:41:35 163  ,jpy_g31
07:41:35 164  ,jpy_g32
07:41:35 165  ,jpy_g33
07:41:35 166  ,jpy_g34
07:41:35 167  ,jpy_g35
07:41:35 168  ,jpy_g36
07:41:35 169  ,jpy_g37
07:41:35 170  ,jpy_g38
07:41:35 171  ,jpy_g39
07:41:35 172  ,jpy_g40
07:41:35 173  ,jpy_g41
07:41:35 174  ,cad_g00
07:41:35 175  ,cad_g01
07:41:35 176  ,cad_g02
07:41:35 177  ,cad_g03
07:41:35 178  ,cad_g04
07:41:35 179  ,cad_g05
07:41:35 180  ,cad_g06
07:41:35 181  ,cad_g07
07:41:35 182  ,cad_g08
07:41:35 183  ,cad_g09
07:41:35 184  ,cad_g10
07:41:35 185  ,cad_g11
07:41:35 186  ,cad_g12
07:41:35 187  ,cad_g13
07:41:35 188  ,cad_g14
07:41:35 189  ,cad_g15
07:41:35 190  ,cad_g16
07:41:35 191  ,cad_g17
07:41:35 192  ,cad_g18
07:41:35 193  ,cad_g19
07:41:35 194  ,cad_g20
07:41:35 195  ,cad_g21
07:41:35 196  ,cad_g22
07:41:35 197  ,cad_g23
07:41:35 198  ,cad_g24
07:41:35 199  ,cad_g25
07:41:35 200  ,cad_g26
07:41:35 201  ,cad_g27
07:41:35 202  ,cad_g28
07:41:35 203  ,cad_g29
07:41:35 204  ,cad_g30
07:41:35 205  ,cad_g31
07:41:35 206  ,cad_g32
07:41:35 207  ,cad_g33
07:41:35 208  ,cad_g34
07:41:35 209  ,cad_g35
07:41:35 210  ,cad_g36
07:41:35 211  ,cad_g37
07:41:35 212  ,cad_g38
07:41:35 213  ,cad_g39
07:41:35 214  ,cad_g40
07:41:35 215  ,cad_g41
07:41:35 216  ,chf_g00
07:41:35 217  ,chf_g01
07:41:35 218  ,chf_g02
07:41:35 219  ,chf_g03
07:41:35 220  ,chf_g04
07:41:35 221  ,chf_g05
07:41:35 222  ,chf_g06
07:41:35 223  ,chf_g07
07:41:35 224  ,chf_g08
07:41:35 225  ,chf_g09
07:41:35 226  ,chf_g10
07:41:35 227  ,chf_g11
07:41:35 228  ,chf_g12
07:41:35 229  ,chf_g13
07:41:35 230  ,chf_g14
07:41:35 231  ,chf_g15
07:41:35 232  ,chf_g16
07:41:35 233  ,chf_g17
07:41:35 234  ,chf_g18
07:41:35 235  ,chf_g19
07:41:35 236  ,chf_g20
07:41:35 237  ,chf_g21
07:41:35 238  ,chf_g22
07:41:35 239  ,chf_g23
07:41:35 240  ,chf_g24
07:41:35 241  ,chf_g25
07:41:35 242  ,chf_g26
07:41:35 243  ,chf_g27
07:41:35 244  ,chf_g28
07:41:35 245  ,chf_g29
07:41:35 246  ,chf_g30
07:41:35 247  ,chf_g31
07:41:35 248  ,chf_g32
07:41:35 249  ,chf_g33
07:41:35 250  ,chf_g34
07:41:35 251  ,chf_g35
07:41:35 252  ,chf_g36
07:41:35 253  ,chf_g37
07:41:35 254  ,chf_g38
07:41:35 255  ,chf_g39
07:41:35 256  ,chf_g40
07:41:35 257  ,chf_g41
07:41:35 258  FROM aud_ms6 m
07:41:35 259  WHERE m.ydate = '&1'||' '||'&2'
07:41:35 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'07:20:00'

View created.

Elapsed: 00:00:00.18
07:41:35 SQL> 
07:41:35 SQL> -- rpt
07:41:35 SQL> -- We should see just 1 row:
07:41:35 SQL> 
07:41:35 SQL> SELECT COUNT(prdate) FROM sme
07:41:35   2  
07:41:35 SQL> -- Build the model:
07:41:35 SQL> CREATE OR REPLACE VIEW bme AS
07:41:35   2  SELECT
07:41:35   3  'aud'||m.ydate prdate
07:41:35   4  ,gatt
07:41:35   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
07:41:35   6  ,eur_g00
07:41:35   7  ,eur_g01
07:41:35   8  ,eur_g02
07:41:35   9  ,eur_g03
07:41:35  10  ,eur_g04
07:41:35  11  ,eur_g05
07:41:35  12  ,eur_g06
07:41:35  13  ,eur_g07
07:41:35  14  ,eur_g08
07:41:35  15  ,eur_g09
07:41:35  16  ,eur_g10
07:41:35  17  ,eur_g11
07:41:35  18  ,eur_g12
07:41:35  19  ,eur_g13
07:41:35  20  ,eur_g14
07:41:35  21  ,eur_g15
07:41:35  22  ,eur_g16
07:41:35  23  ,eur_g17
07:41:35  24  ,eur_g18
07:41:35  25  ,eur_g19
07:41:35  26  ,eur_g20
07:41:35  27  ,eur_g21
07:41:35  28  ,eur_g22
07:41:35  29  ,eur_g23
07:41:35  30  ,eur_g24
07:41:35  31  ,eur_g25
07:41:35  32  ,eur_g26
07:41:35  33  ,eur_g27
07:41:35  34  ,eur_g28
07:41:35  35  ,eur_g29
07:41:35  36  ,eur_g30
07:41:35  37  ,eur_g31
07:41:35  38  ,eur_g32
07:41:35  39  ,eur_g33
07:41:35  40  ,eur_g34
07:41:35  41  ,eur_g35
07:41:35  42  ,eur_g36
07:41:35  43  ,eur_g37
07:41:35  44  ,eur_g38
07:41:35  45  ,eur_g39
07:41:35  46  ,eur_g40
07:41:35  47  ,eur_g41
07:41:35  48  ,aud_g00
07:41:35  49  ,aud_g01
07:41:35  50  ,aud_g02
07:41:35  51  ,aud_g03
07:41:35  52  ,aud_g04
07:41:35  53  ,aud_g05
07:41:35  54  ,aud_g06
07:41:35  55  ,aud_g07
07:41:35  56  ,aud_g08
07:41:35  57  ,aud_g09
07:41:35  58  ,aud_g10
07:41:35  59  ,aud_g11
07:41:35  60  ,aud_g12
07:41:35  61  ,aud_g13
07:41:35  62  ,aud_g14
07:41:35  63  ,aud_g15
07:41:35  64  ,aud_g16
07:41:35  65  ,aud_g17
07:41:35  66  ,aud_g18
07:41:35  67  ,aud_g19
07:41:35  68  ,aud_g20
07:41:35  69  ,aud_g21
07:41:35  70  ,aud_g22
07:41:35  71  ,aud_g23
07:41:35  72  ,aud_g24
07:41:35  73  ,aud_g25
07:41:35  74  ,aud_g26
07:41:35  75  ,aud_g27
07:41:35  76  ,aud_g28
07:41:35  77  ,aud_g29
07:41:35  78  ,aud_g30
07:41:35  79  ,aud_g31
07:41:35  80  ,aud_g32
07:41:35  81  ,aud_g33
07:41:35  82  ,aud_g34
07:41:35  83  ,aud_g35
07:41:35  84  ,aud_g36
07:41:35  85  ,aud_g37
07:41:35  86  ,aud_g38
07:41:35  87  ,aud_g39
07:41:35  88  ,aud_g40
07:41:35  89  ,aud_g41
07:41:35  90  ,gbp_g00
07:41:35  91  ,gbp_g01
07:41:35  92  ,gbp_g02
07:41:35  93  ,gbp_g03
07:41:35  94  ,gbp_g04
07:41:35  95  ,gbp_g05
07:41:35  96  ,gbp_g06
07:41:35  97  ,gbp_g07
07:41:35  98  ,gbp_g08
07:41:35  99  ,gbp_g09
07:41:35 100  ,gbp_g10
07:41:35 101  ,gbp_g11
07:41:35 102  ,gbp_g12
07:41:35 103  ,gbp_g13
07:41:35 104  ,gbp_g14
07:41:35 105  ,gbp_g15
07:41:35 106  ,gbp_g16
07:41:35 107  ,gbp_g17
07:41:35 108  ,gbp_g18
07:41:35 109  ,gbp_g19
07:41:35 110  ,gbp_g20
07:41:35 111  ,gbp_g21
07:41:35 112  ,gbp_g22
07:41:35 113  ,gbp_g23
07:41:35 114  ,gbp_g24
07:41:35 115  ,gbp_g25
07:41:35 116  ,gbp_g26
07:41:35 117  ,gbp_g27
07:41:35 118  ,gbp_g28
07:41:35 119  ,gbp_g29
07:41:35 120  ,gbp_g30
07:41:35 121  ,gbp_g31
07:41:35 122  ,gbp_g32
07:41:35 123  ,gbp_g33
07:41:35 124  ,gbp_g34
07:41:35 125  ,gbp_g35
07:41:35 126  ,gbp_g36
07:41:35 127  ,gbp_g37
07:41:35 128  ,gbp_g38
07:41:35 129  ,gbp_g39
07:41:35 130  ,gbp_g40
07:41:35 131  ,gbp_g41
07:41:35 132  ,jpy_g00
07:41:35 133  ,jpy_g01
07:41:35 134  ,jpy_g02
07:41:35 135  ,jpy_g03
07:41:35 136  ,jpy_g04
07:41:35 137  ,jpy_g05
07:41:35 138  ,jpy_g06
07:41:35 139  ,jpy_g07
07:41:35 140  ,jpy_g08
07:41:35 141  ,jpy_g09
07:41:35 142  ,jpy_g10
07:41:35 143  ,jpy_g11
07:41:35 144  ,jpy_g12
07:41:35 145  ,jpy_g13
07:41:35 146  ,jpy_g14
07:41:35 147  ,jpy_g15
07:41:35 148  ,jpy_g16
07:41:35 149  ,jpy_g17
07:41:35 150  ,jpy_g18
07:41:35 151  ,jpy_g19
07:41:35 152  ,jpy_g20
07:41:35 153  ,jpy_g21
07:41:35 154  ,jpy_g22
07:41:35 155  ,jpy_g23
07:41:35 156  ,jpy_g24
07:41:35 157  ,jpy_g25
07:41:35 158  ,jpy_g26
07:41:35 159  ,jpy_g27
07:41:35 160  ,jpy_g28
07:41:35 161  ,jpy_g29
07:41:35 162  ,jpy_g30
07:41:35 163  ,jpy_g31
07:41:35 164  ,jpy_g32
07:41:35 165  ,jpy_g33
07:41:35 166  ,jpy_g34
07:41:35 167  ,jpy_g35
07:41:35 168  ,jpy_g36
07:41:35 169  ,jpy_g37
07:41:35 170  ,jpy_g38
07:41:35 171  ,jpy_g39
07:41:35 172  ,jpy_g40
07:41:35 173  ,jpy_g41
07:41:35 174  ,cad_g00
07:41:35 175  ,cad_g01
07:41:35 176  ,cad_g02
07:41:35 177  ,cad_g03
07:41:35 178  ,cad_g04
07:41:35 179  ,cad_g05
07:41:35 180  ,cad_g06
07:41:35 181  ,cad_g07
07:41:35 182  ,cad_g08
07:41:35 183  ,cad_g09
07:41:35 184  ,cad_g10
07:41:35 185  ,cad_g11
07:41:35 186  ,cad_g12
07:41:35 187  ,cad_g13
07:41:35 188  ,cad_g14
07:41:35 189  ,cad_g15
07:41:35 190  ,cad_g16
07:41:35 191  ,cad_g17
07:41:35 192  ,cad_g18
07:41:35 193  ,cad_g19
07:41:35 194  ,cad_g20
07:41:35 195  ,cad_g21
07:41:35 196  ,cad_g22
07:41:35 197  ,cad_g23
07:41:35 198  ,cad_g24
07:41:35 199  ,cad_g25
07:41:35 200  ,cad_g26
07:41:35 201  ,cad_g27
07:41:35 202  ,cad_g28
07:41:35 203  ,cad_g29
07:41:35 204  ,cad_g30
07:41:35 205  ,cad_g31
07:41:35 206  ,cad_g32
07:41:35 207  ,cad_g33
07:41:35 208  ,cad_g34
07:41:35 209  ,cad_g35
07:41:35 210  ,cad_g36
07:41:35 211  ,cad_g37
07:41:35 212  ,cad_g38
07:41:35 213  ,cad_g39
07:41:35 214  ,cad_g40
07:41:35 215  ,cad_g41
07:41:35 216  ,chf_g00
07:41:35 217  ,chf_g01
07:41:35 218  ,chf_g02
07:41:35 219  ,chf_g03
07:41:35 220  ,chf_g04
07:41:35 221  ,chf_g05
07:41:35 222  ,chf_g06
07:41:35 223  ,chf_g07
07:41:35 224  ,chf_g08
07:41:35 225  ,chf_g09
07:41:35 226  ,chf_g10
07:41:35 227  ,chf_g11
07:41:35 228  ,chf_g12
07:41:35 229  ,chf_g13
07:41:35 230  ,chf_g14
07:41:35 231  ,chf_g15
07:41:35 232  ,chf_g16
07:41:35 233  ,chf_g17
07:41:35 234  ,chf_g18
07:41:35 235  ,chf_g19
07:41:35 236  ,chf_g20
07:41:35 237  ,chf_g21
07:41:35 238  ,chf_g22
07:41:35 239  ,chf_g23
07:41:35 240  ,chf_g24
07:41:35 241  ,chf_g25
07:41:35 242  ,chf_g26
07:41:35 243  ,chf_g27
07:41:35 244  ,chf_g28
07:41:35 245  ,chf_g29
07:41:35 246  ,chf_g30
07:41:35 247  ,chf_g31
07:41:35 248  ,chf_g32
07:41:35 249  ,chf_g33
07:41:35 250  ,chf_g34
07:41:35 251  ,chf_g35
07:41:35 252  ,chf_g36
07:41:35 253  ,chf_g37
07:41:35 254  ,chf_g38
07:41:35 255  ,chf_g39
07:41:35 256  ,chf_g40
07:41:35 257  ,chf_g41
07:41:35 258  FROM aud_ms6 m
07:41:35 259  WHERE gatt IN('nup','up')
07:41:35 260  AND 1+m.ydate < '&1'||' '||'&2'
07:41:35 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'07:20:00'

View created.

Elapsed: 00:00:00.11
07:41:35 SQL> 
07:41:35 SQL> -- rpt
07:41:35 SQL> 
07:41:35 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
07:41:35   2  
07:41:35 SQL> SELECT MAX(prdate) FROM bme
07:41:35   2  
07:41:35 SQL> -- Now build model from bme and score sme
07:41:35 SQL> @score1.sql
07:41:35 SQL> -- score1.sql
07:41:35 SQL> 
07:41:35 SQL> -- Does the 1st SVM score
07:41:35 SQL> 
07:41:35 SQL> -- Fill up svmc_apply_prep
07:41:35 SQL> @score.sql
07:41:35 SQL> --
07:41:35 SQL> -- score.sql
07:41:35 SQL> --
07:41:35 SQL> 
07:41:35 SQL> -- usage: score.sql
07:41:35 SQL> 
07:41:35 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
07:41:35 SQL> 
07:41:35 SQL> DEFINE target	= 'gatt'
07:41:35 SQL> DEFINE model_name = 'forex14'
07:41:35 SQL> DEFINE bldtable	= 'bme'
07:41:35 SQL> DEFINE scoretable = 'sme'
07:41:35 SQL> DEFINE case_id	= 'prdate'
07:41:35 SQL> 
07:41:35 SQL> -- Define a variable to help me exclude some columns from some data mining calls
07:41:35 SQL> DEFINE exclude1 = "'&target','&case_id'"
07:41:35 SQL> 
07:41:35 SQL> -- Builds an SVM model using pl/sql.
07:41:35 SQL> 
07:41:35 SQL> -----------------------------------------------------------------------
07:41:35 SQL> --			    BUILD THE MODEL
07:41:35 SQL> -----------------------------------------------------------------------
07:41:35 SQL> 
07:41:35 SQL> -- Cleanup old build data preparation objects for repeat runs
07:41:35 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
07:41:35 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
07:41:35 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
07:41:35 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
07:41:35 SQL> 
07:41:35 SQL> 
07:41:35 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
07:41:35 SQL> --
07:41:35 SQL> -- DROP	TABLE svmc_settings ;
07:41:35 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
07:41:35 SQL> -- DELETE svmc_settings;
07:41:35 SQL> 
07:41:35 SQL> -- The default classification algorithm is Naive Bayes. So override
07:41:35 SQL> -- this choice to SVM using a settings table.
07:41:35 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
07:41:35 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
07:41:35 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
07:41:35 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
07:41:35 SQL> -- models.
07:41:35 SQL> --
07:41:35 SQL> 
07:41:35 SQL> -- Do this once and then comment it out.
07:41:35 SQL> -- That makes script go faster.
07:41:35 SQL> -- BEGIN
07:41:35 SQL> -- -- Populate settings table
07:41:35 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
07:41:35 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
07:41:35 SQL> --
07:41:35 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
07:41:35 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
07:41:35 SQL> --
07:41:35 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
07:41:35 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
07:41:35 SQL> --   COMMIT;
07:41:35 SQL> -- END;
07:41:35 SQL> -- /
07:41:35 SQL> 
07:41:35 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
07:41:35 SQL> 
07:41:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
07:41:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:41:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:41:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
07:41:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:41:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:41:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
07:41:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:41:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.14
07:41:35 SQL> 
07:41:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
07:41:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:41:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
07:41:35 SQL> 
07:41:35 SQL> --------------------------------
07:41:35 SQL> -- PREPARE BUILD (TRAINING) DATA
07:41:35 SQL> --
07:41:35 SQL> 
07:41:35 SQL> -- 1. Missing Value treatment for all Predictors and
07:41:35 SQL> -- 2. Outlier Treatment and
07:41:35 SQL> -- 3. Normalization are performed below.
07:41:35 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
07:41:35 SQL> --    normalized here.
07:41:35 SQL> 
07:41:35 SQL> BEGIN
07:41:35   2  	-- Perform missing value treatment for all predictors
07:41:35   3  	-- create miss tables
07:41:35   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
07:41:35   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
07:41:35   6  
07:41:35   7  	-- populate miss tables
07:41:35   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
07:41:35   9  	  miss_table_name => 'svmc_miss_num',
07:41:35  10  	  data_table_name => '&bldtable',
07:41:35  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:41:35  12  
07:41:35  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
07:41:35  14  	  miss_table_name => 'svmc_miss_cat',
07:41:35  15  	  data_table_name => '&bldtable',
07:41:35  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:41:35  17  
07:41:35  18  	-- xform input data to replace missing values
07:41:35  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
07:41:35  20  	  miss_table_name => 'svmc_miss_num',
07:41:35  21  	  data_table_name => '&bldtable',
07:41:35  22  	  xform_view_name => 'xformed_build_miss_num');
07:41:35  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
07:41:35  24  	  miss_table_name => 'svmc_miss_cat',
07:41:35  25  	  data_table_name => '&bldtable',
07:41:35  26  	  xform_view_name => 'xformed_build_miss_cat');
07:41:35  27  
07:41:35  28  	-- Perform outlier treatment.
07:41:35  29  	-- create clip table
07:41:35  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
07:41:35  31  
07:41:35  32  	-- populate clip table
07:41:35  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
07:41:35  34  	  clip_table_name => 'svmc_clip',
07:41:35  35  	  data_table_name => '&bldtable',
07:41:35  36  	  tail_frac	  => 0.025,
07:41:35  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:41:35  38  
07:41:35  39  	-- xform input data to winsorized data
07:41:35  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
07:41:35  41  	  clip_table_name => 'svmc_clip',
07:41:35  42  	  data_table_name => '&bldtable',
07:41:35  43  	  xform_view_name => 'svmc_winsor');
07:41:35  44  
07:41:35  45  	-- create normalization table
07:41:35  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
07:41:35  47  
07:41:35  48  	-- populate normalization table based on winsorized data
07:41:35  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
07:41:35  50  	  norm_table_name => 'svmc_norm',
07:41:35  51  	  data_table_name => 'svmc_winsor',
07:41:35  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:41:35  53  
07:41:35  54  	-- normalize the original data
07:41:35  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
07:41:35  56  	  norm_table_name => 'svmc_norm',
07:41:35  57  	  data_table_name => '&bldtable',
07:41:35  58  	  xform_view_name => 'svmc_build_prep');
07:41:35  59  END;
07:41:35  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',
