
SQL*Plus: Release 11.2.0.1.0 Production on Fri Dec 31 04:14:47 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

04:14:47 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
04:14:47 SQL> 04:14:47 SQL> @aud_score1day.sql  2010-12-31 03:50:00
04:14:47 SQL> --
04:14:47 SQL> -- aud_score1day.sql
04:14:47 SQL> --
04:14:47 SQL> 
04:14:47 SQL> CREATE OR REPLACE VIEW sme AS
04:14:47   2  SELECT
04:14:47   3  'aud'||m.ydate prdate
04:14:47   4  ,NULL gatt
04:14:47   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:14:47   6  ,eur_g00
04:14:47   7  ,eur_g01
04:14:47   8  ,eur_g02
04:14:47   9  ,eur_g03
04:14:47  10  ,eur_g04
04:14:47  11  ,eur_g05
04:14:47  12  ,eur_g06
04:14:47  13  ,eur_g07
04:14:47  14  ,eur_g08
04:14:47  15  ,eur_g09
04:14:47  16  ,eur_g10
04:14:47  17  ,eur_g11
04:14:47  18  ,eur_g12
04:14:47  19  ,eur_g13
04:14:47  20  ,eur_g14
04:14:47  21  ,eur_g15
04:14:47  22  ,eur_g16
04:14:47  23  ,eur_g17
04:14:47  24  ,eur_g18
04:14:47  25  ,eur_g19
04:14:47  26  ,eur_g20
04:14:47  27  ,eur_g21
04:14:47  28  ,eur_g22
04:14:47  29  ,eur_g23
04:14:47  30  ,eur_g24
04:14:47  31  ,eur_g25
04:14:47  32  ,eur_g26
04:14:47  33  ,eur_g27
04:14:47  34  ,eur_g28
04:14:47  35  ,eur_g29
04:14:47  36  ,eur_g30
04:14:47  37  ,eur_g31
04:14:47  38  ,eur_g32
04:14:47  39  ,eur_g33
04:14:47  40  ,eur_g34
04:14:47  41  ,eur_g35
04:14:47  42  ,eur_g36
04:14:47  43  ,eur_g37
04:14:47  44  ,eur_g38
04:14:47  45  ,eur_g39
04:14:47  46  ,eur_g40
04:14:47  47  ,eur_g41
04:14:47  48  ,aud_g00
04:14:47  49  ,aud_g01
04:14:47  50  ,aud_g02
04:14:47  51  ,aud_g03
04:14:47  52  ,aud_g04
04:14:47  53  ,aud_g05
04:14:47  54  ,aud_g06
04:14:47  55  ,aud_g07
04:14:47  56  ,aud_g08
04:14:47  57  ,aud_g09
04:14:47  58  ,aud_g10
04:14:47  59  ,aud_g11
04:14:47  60  ,aud_g12
04:14:47  61  ,aud_g13
04:14:47  62  ,aud_g14
04:14:47  63  ,aud_g15
04:14:47  64  ,aud_g16
04:14:47  65  ,aud_g17
04:14:47  66  ,aud_g18
04:14:47  67  ,aud_g19
04:14:47  68  ,aud_g20
04:14:47  69  ,aud_g21
04:14:47  70  ,aud_g22
04:14:47  71  ,aud_g23
04:14:47  72  ,aud_g24
04:14:47  73  ,aud_g25
04:14:47  74  ,aud_g26
04:14:47  75  ,aud_g27
04:14:47  76  ,aud_g28
04:14:47  77  ,aud_g29
04:14:47  78  ,aud_g30
04:14:47  79  ,aud_g31
04:14:47  80  ,aud_g32
04:14:47  81  ,aud_g33
04:14:47  82  ,aud_g34
04:14:47  83  ,aud_g35
04:14:47  84  ,aud_g36
04:14:47  85  ,aud_g37
04:14:47  86  ,aud_g38
04:14:47  87  ,aud_g39
04:14:47  88  ,aud_g40
04:14:47  89  ,aud_g41
04:14:47  90  ,gbp_g00
04:14:47  91  ,gbp_g01
04:14:47  92  ,gbp_g02
04:14:47  93  ,gbp_g03
04:14:47  94  ,gbp_g04
04:14:47  95  ,gbp_g05
04:14:47  96  ,gbp_g06
04:14:47  97  ,gbp_g07
04:14:47  98  ,gbp_g08
04:14:47  99  ,gbp_g09
04:14:47 100  ,gbp_g10
04:14:47 101  ,gbp_g11
04:14:47 102  ,gbp_g12
04:14:47 103  ,gbp_g13
04:14:47 104  ,gbp_g14
04:14:47 105  ,gbp_g15
04:14:47 106  ,gbp_g16
04:14:47 107  ,gbp_g17
04:14:47 108  ,gbp_g18
04:14:47 109  ,gbp_g19
04:14:47 110  ,gbp_g20
04:14:47 111  ,gbp_g21
04:14:47 112  ,gbp_g22
04:14:47 113  ,gbp_g23
04:14:47 114  ,gbp_g24
04:14:47 115  ,gbp_g25
04:14:47 116  ,gbp_g26
04:14:47 117  ,gbp_g27
04:14:47 118  ,gbp_g28
04:14:47 119  ,gbp_g29
04:14:47 120  ,gbp_g30
04:14:47 121  ,gbp_g31
04:14:47 122  ,gbp_g32
04:14:47 123  ,gbp_g33
04:14:47 124  ,gbp_g34
04:14:47 125  ,gbp_g35
04:14:47 126  ,gbp_g36
04:14:47 127  ,gbp_g37
04:14:47 128  ,gbp_g38
04:14:47 129  ,gbp_g39
04:14:47 130  ,gbp_g40
04:14:47 131  ,gbp_g41
04:14:47 132  ,jpy_g00
04:14:47 133  ,jpy_g01
04:14:47 134  ,jpy_g02
04:14:47 135  ,jpy_g03
04:14:47 136  ,jpy_g04
04:14:47 137  ,jpy_g05
04:14:47 138  ,jpy_g06
04:14:47 139  ,jpy_g07
04:14:47 140  ,jpy_g08
04:14:47 141  ,jpy_g09
04:14:47 142  ,jpy_g10
04:14:47 143  ,jpy_g11
04:14:47 144  ,jpy_g12
04:14:47 145  ,jpy_g13
04:14:47 146  ,jpy_g14
04:14:47 147  ,jpy_g15
04:14:47 148  ,jpy_g16
04:14:47 149  ,jpy_g17
04:14:47 150  ,jpy_g18
04:14:47 151  ,jpy_g19
04:14:47 152  ,jpy_g20
04:14:47 153  ,jpy_g21
04:14:47 154  ,jpy_g22
04:14:47 155  ,jpy_g23
04:14:47 156  ,jpy_g24
04:14:47 157  ,jpy_g25
04:14:47 158  ,jpy_g26
04:14:47 159  ,jpy_g27
04:14:47 160  ,jpy_g28
04:14:47 161  ,jpy_g29
04:14:47 162  ,jpy_g30
04:14:47 163  ,jpy_g31
04:14:47 164  ,jpy_g32
04:14:47 165  ,jpy_g33
04:14:47 166  ,jpy_g34
04:14:47 167  ,jpy_g35
04:14:47 168  ,jpy_g36
04:14:47 169  ,jpy_g37
04:14:47 170  ,jpy_g38
04:14:47 171  ,jpy_g39
04:14:47 172  ,jpy_g40
04:14:47 173  ,jpy_g41
04:14:47 174  ,cad_g00
04:14:47 175  ,cad_g01
04:14:47 176  ,cad_g02
04:14:47 177  ,cad_g03
04:14:47 178  ,cad_g04
04:14:47 179  ,cad_g05
04:14:47 180  ,cad_g06
04:14:47 181  ,cad_g07
04:14:47 182  ,cad_g08
04:14:47 183  ,cad_g09
04:14:47 184  ,cad_g10
04:14:47 185  ,cad_g11
04:14:47 186  ,cad_g12
04:14:47 187  ,cad_g13
04:14:47 188  ,cad_g14
04:14:47 189  ,cad_g15
04:14:47 190  ,cad_g16
04:14:47 191  ,cad_g17
04:14:47 192  ,cad_g18
04:14:47 193  ,cad_g19
04:14:47 194  ,cad_g20
04:14:47 195  ,cad_g21
04:14:47 196  ,cad_g22
04:14:47 197  ,cad_g23
04:14:47 198  ,cad_g24
04:14:47 199  ,cad_g25
04:14:47 200  ,cad_g26
04:14:47 201  ,cad_g27
04:14:47 202  ,cad_g28
04:14:47 203  ,cad_g29
04:14:47 204  ,cad_g30
04:14:47 205  ,cad_g31
04:14:47 206  ,cad_g32
04:14:47 207  ,cad_g33
04:14:47 208  ,cad_g34
04:14:47 209  ,cad_g35
04:14:47 210  ,cad_g36
04:14:47 211  ,cad_g37
04:14:47 212  ,cad_g38
04:14:47 213  ,cad_g39
04:14:47 214  ,cad_g40
04:14:47 215  ,cad_g41
04:14:47 216  ,chf_g00
04:14:47 217  ,chf_g01
04:14:47 218  ,chf_g02
04:14:47 219  ,chf_g03
04:14:47 220  ,chf_g04
04:14:47 221  ,chf_g05
04:14:47 222  ,chf_g06
04:14:47 223  ,chf_g07
04:14:47 224  ,chf_g08
04:14:47 225  ,chf_g09
04:14:47 226  ,chf_g10
04:14:47 227  ,chf_g11
04:14:47 228  ,chf_g12
04:14:47 229  ,chf_g13
04:14:47 230  ,chf_g14
04:14:47 231  ,chf_g15
04:14:47 232  ,chf_g16
04:14:47 233  ,chf_g17
04:14:47 234  ,chf_g18
04:14:47 235  ,chf_g19
04:14:47 236  ,chf_g20
04:14:47 237  ,chf_g21
04:14:47 238  ,chf_g22
04:14:47 239  ,chf_g23
04:14:47 240  ,chf_g24
04:14:47 241  ,chf_g25
04:14:47 242  ,chf_g26
04:14:47 243  ,chf_g27
04:14:47 244  ,chf_g28
04:14:47 245  ,chf_g29
04:14:47 246  ,chf_g30
04:14:47 247  ,chf_g31
04:14:47 248  ,chf_g32
04:14:47 249  ,chf_g33
04:14:47 250  ,chf_g34
04:14:47 251  ,chf_g35
04:14:47 252  ,chf_g36
04:14:47 253  ,chf_g37
04:14:47 254  ,chf_g38
04:14:47 255  ,chf_g39
04:14:47 256  ,chf_g40
04:14:47 257  ,chf_g41
04:14:47 258  FROM aud_ms6 m
04:14:47 259  WHERE m.ydate = '&1'||' '||'&2'
04:14:47 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'03:50:00'

View created.

Elapsed: 00:00:00.14
04:14:48 SQL> 
04:14:48 SQL> -- rpt
04:14:48 SQL> -- We should see just 1 row:
04:14:48 SQL> 
04:14:48 SQL> SELECT COUNT(prdate) FROM sme
04:14:48   2  
04:14:48 SQL> -- Build the model:
04:14:48 SQL> CREATE OR REPLACE VIEW bme AS
04:14:48   2  SELECT
04:14:48   3  'aud'||m.ydate prdate
04:14:48   4  ,gatt
04:14:48   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:14:48   6  ,eur_g00
04:14:48   7  ,eur_g01
04:14:48   8  ,eur_g02
04:14:48   9  ,eur_g03
04:14:48  10  ,eur_g04
04:14:48  11  ,eur_g05
04:14:48  12  ,eur_g06
04:14:48  13  ,eur_g07
04:14:48  14  ,eur_g08
04:14:48  15  ,eur_g09
04:14:48  16  ,eur_g10
04:14:48  17  ,eur_g11
04:14:48  18  ,eur_g12
04:14:48  19  ,eur_g13
04:14:48  20  ,eur_g14
04:14:48  21  ,eur_g15
04:14:48  22  ,eur_g16
04:14:48  23  ,eur_g17
04:14:48  24  ,eur_g18
04:14:48  25  ,eur_g19
04:14:48  26  ,eur_g20
04:14:48  27  ,eur_g21
04:14:48  28  ,eur_g22
04:14:48  29  ,eur_g23
04:14:48  30  ,eur_g24
04:14:48  31  ,eur_g25
04:14:48  32  ,eur_g26
04:14:48  33  ,eur_g27
04:14:48  34  ,eur_g28
04:14:48  35  ,eur_g29
04:14:48  36  ,eur_g30
04:14:48  37  ,eur_g31
04:14:48  38  ,eur_g32
04:14:48  39  ,eur_g33
04:14:48  40  ,eur_g34
04:14:48  41  ,eur_g35
04:14:48  42  ,eur_g36
04:14:48  43  ,eur_g37
04:14:48  44  ,eur_g38
04:14:48  45  ,eur_g39
04:14:48  46  ,eur_g40
04:14:48  47  ,eur_g41
04:14:48  48  ,aud_g00
04:14:48  49  ,aud_g01
04:14:48  50  ,aud_g02
04:14:48  51  ,aud_g03
04:14:48  52  ,aud_g04
04:14:48  53  ,aud_g05
04:14:48  54  ,aud_g06
04:14:48  55  ,aud_g07
04:14:48  56  ,aud_g08
04:14:48  57  ,aud_g09
04:14:48  58  ,aud_g10
04:14:48  59  ,aud_g11
04:14:48  60  ,aud_g12
04:14:48  61  ,aud_g13
04:14:48  62  ,aud_g14
04:14:48  63  ,aud_g15
04:14:48  64  ,aud_g16
04:14:48  65  ,aud_g17
04:14:48  66  ,aud_g18
04:14:48  67  ,aud_g19
04:14:48  68  ,aud_g20
04:14:48  69  ,aud_g21
04:14:48  70  ,aud_g22
04:14:48  71  ,aud_g23
04:14:48  72  ,aud_g24
04:14:48  73  ,aud_g25
04:14:48  74  ,aud_g26
04:14:48  75  ,aud_g27
04:14:48  76  ,aud_g28
04:14:48  77  ,aud_g29
04:14:48  78  ,aud_g30
04:14:48  79  ,aud_g31
04:14:48  80  ,aud_g32
04:14:48  81  ,aud_g33
04:14:48  82  ,aud_g34
04:14:48  83  ,aud_g35
04:14:48  84  ,aud_g36
04:14:48  85  ,aud_g37
04:14:48  86  ,aud_g38
04:14:48  87  ,aud_g39
04:14:48  88  ,aud_g40
04:14:48  89  ,aud_g41
04:14:48  90  ,gbp_g00
04:14:48  91  ,gbp_g01
04:14:48  92  ,gbp_g02
04:14:48  93  ,gbp_g03
04:14:48  94  ,gbp_g04
04:14:48  95  ,gbp_g05
04:14:48  96  ,gbp_g06
04:14:48  97  ,gbp_g07
04:14:48  98  ,gbp_g08
04:14:48  99  ,gbp_g09
04:14:48 100  ,gbp_g10
04:14:48 101  ,gbp_g11
04:14:48 102  ,gbp_g12
04:14:48 103  ,gbp_g13
04:14:48 104  ,gbp_g14
04:14:48 105  ,gbp_g15
04:14:48 106  ,gbp_g16
04:14:48 107  ,gbp_g17
04:14:48 108  ,gbp_g18
04:14:48 109  ,gbp_g19
04:14:48 110  ,gbp_g20
04:14:48 111  ,gbp_g21
04:14:48 112  ,gbp_g22
04:14:48 113  ,gbp_g23
04:14:48 114  ,gbp_g24
04:14:48 115  ,gbp_g25
04:14:48 116  ,gbp_g26
04:14:48 117  ,gbp_g27
04:14:48 118  ,gbp_g28
04:14:48 119  ,gbp_g29
04:14:48 120  ,gbp_g30
04:14:48 121  ,gbp_g31
04:14:48 122  ,gbp_g32
04:14:48 123  ,gbp_g33
04:14:48 124  ,gbp_g34
04:14:48 125  ,gbp_g35
04:14:48 126  ,gbp_g36
04:14:48 127  ,gbp_g37
04:14:48 128  ,gbp_g38
04:14:48 129  ,gbp_g39
04:14:48 130  ,gbp_g40
04:14:48 131  ,gbp_g41
04:14:48 132  ,jpy_g00
04:14:48 133  ,jpy_g01
04:14:48 134  ,jpy_g02
04:14:48 135  ,jpy_g03
04:14:48 136  ,jpy_g04
04:14:48 137  ,jpy_g05
04:14:48 138  ,jpy_g06
04:14:48 139  ,jpy_g07
04:14:48 140  ,jpy_g08
04:14:48 141  ,jpy_g09
04:14:48 142  ,jpy_g10
04:14:48 143  ,jpy_g11
04:14:48 144  ,jpy_g12
04:14:48 145  ,jpy_g13
04:14:48 146  ,jpy_g14
04:14:48 147  ,jpy_g15
04:14:48 148  ,jpy_g16
04:14:48 149  ,jpy_g17
04:14:48 150  ,jpy_g18
04:14:48 151  ,jpy_g19
04:14:48 152  ,jpy_g20
04:14:48 153  ,jpy_g21
04:14:48 154  ,jpy_g22
04:14:48 155  ,jpy_g23
04:14:48 156  ,jpy_g24
04:14:48 157  ,jpy_g25
04:14:48 158  ,jpy_g26
04:14:48 159  ,jpy_g27
04:14:48 160  ,jpy_g28
04:14:48 161  ,jpy_g29
04:14:48 162  ,jpy_g30
04:14:48 163  ,jpy_g31
04:14:48 164  ,jpy_g32
04:14:48 165  ,jpy_g33
04:14:48 166  ,jpy_g34
04:14:48 167  ,jpy_g35
04:14:48 168  ,jpy_g36
04:14:48 169  ,jpy_g37
04:14:48 170  ,jpy_g38
04:14:48 171  ,jpy_g39
04:14:48 172  ,jpy_g40
04:14:48 173  ,jpy_g41
04:14:48 174  ,cad_g00
04:14:48 175  ,cad_g01
04:14:48 176  ,cad_g02
04:14:48 177  ,cad_g03
04:14:48 178  ,cad_g04
04:14:48 179  ,cad_g05
04:14:48 180  ,cad_g06
04:14:48 181  ,cad_g07
04:14:48 182  ,cad_g08
04:14:48 183  ,cad_g09
04:14:48 184  ,cad_g10
04:14:48 185  ,cad_g11
04:14:48 186  ,cad_g12
04:14:48 187  ,cad_g13
04:14:48 188  ,cad_g14
04:14:48 189  ,cad_g15
04:14:48 190  ,cad_g16
04:14:48 191  ,cad_g17
04:14:48 192  ,cad_g18
04:14:48 193  ,cad_g19
04:14:48 194  ,cad_g20
04:14:48 195  ,cad_g21
04:14:48 196  ,cad_g22
04:14:48 197  ,cad_g23
04:14:48 198  ,cad_g24
04:14:48 199  ,cad_g25
04:14:48 200  ,cad_g26
04:14:48 201  ,cad_g27
04:14:48 202  ,cad_g28
04:14:48 203  ,cad_g29
04:14:48 204  ,cad_g30
04:14:48 205  ,cad_g31
04:14:48 206  ,cad_g32
04:14:48 207  ,cad_g33
04:14:48 208  ,cad_g34
04:14:48 209  ,cad_g35
04:14:48 210  ,cad_g36
04:14:48 211  ,cad_g37
04:14:48 212  ,cad_g38
04:14:48 213  ,cad_g39
04:14:48 214  ,cad_g40
04:14:48 215  ,cad_g41
04:14:48 216  ,chf_g00
04:14:48 217  ,chf_g01
04:14:48 218  ,chf_g02
04:14:48 219  ,chf_g03
04:14:48 220  ,chf_g04
04:14:48 221  ,chf_g05
04:14:48 222  ,chf_g06
04:14:48 223  ,chf_g07
04:14:48 224  ,chf_g08
04:14:48 225  ,chf_g09
04:14:48 226  ,chf_g10
04:14:48 227  ,chf_g11
04:14:48 228  ,chf_g12
04:14:48 229  ,chf_g13
04:14:48 230  ,chf_g14
04:14:48 231  ,chf_g15
04:14:48 232  ,chf_g16
04:14:48 233  ,chf_g17
04:14:48 234  ,chf_g18
04:14:48 235  ,chf_g19
04:14:48 236  ,chf_g20
04:14:48 237  ,chf_g21
04:14:48 238  ,chf_g22
04:14:48 239  ,chf_g23
04:14:48 240  ,chf_g24
04:14:48 241  ,chf_g25
04:14:48 242  ,chf_g26
04:14:48 243  ,chf_g27
04:14:48 244  ,chf_g28
04:14:48 245  ,chf_g29
04:14:48 246  ,chf_g30
04:14:48 247  ,chf_g31
04:14:48 248  ,chf_g32
04:14:48 249  ,chf_g33
04:14:48 250  ,chf_g34
04:14:48 251  ,chf_g35
04:14:48 252  ,chf_g36
04:14:48 253  ,chf_g37
04:14:48 254  ,chf_g38
04:14:48 255  ,chf_g39
04:14:48 256  ,chf_g40
04:14:48 257  ,chf_g41
04:14:48 258  FROM aud_ms6 m
04:14:48 259  WHERE gatt IN('nup','up')
04:14:48 260  AND 1+m.ydate < '&1'||' '||'&2'
04:14:48 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'03:50:00'

View created.

Elapsed: 00:00:00.14
04:14:48 SQL> 
04:14:48 SQL> -- rpt
04:14:48 SQL> 
04:14:48 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
04:14:48   2  
04:14:48 SQL> SELECT MAX(prdate) FROM bme
04:14:48   2  
04:14:48 SQL> -- Now build model from bme and score sme
04:14:48 SQL> @score1.sql
04:14:48 SQL> -- score1.sql
04:14:48 SQL> 
04:14:48 SQL> -- Does the 1st SVM score
04:14:48 SQL> 
04:14:48 SQL> -- Fill up svmc_apply_prep
04:14:48 SQL> @score.sql
04:14:48 SQL> --
04:14:48 SQL> -- score.sql
04:14:48 SQL> --
04:14:48 SQL> 
04:14:48 SQL> -- usage: score.sql
04:14:48 SQL> 
04:14:48 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
04:14:48 SQL> 
04:14:48 SQL> DEFINE target	= 'gatt'
04:14:48 SQL> DEFINE model_name = 'forex14'
04:14:48 SQL> DEFINE bldtable	= 'bme'
04:14:48 SQL> DEFINE scoretable = 'sme'
04:14:48 SQL> DEFINE case_id	= 'prdate'
04:14:48 SQL> 
04:14:48 SQL> -- Define a variable to help me exclude some columns from some data mining calls
04:14:48 SQL> DEFINE exclude1 = "'&target','&case_id'"
04:14:48 SQL> 
04:14:48 SQL> -- Builds an SVM model using pl/sql.
04:14:48 SQL> 
04:14:48 SQL> -----------------------------------------------------------------------
04:14:48 SQL> --			    BUILD THE MODEL
04:14:48 SQL> -----------------------------------------------------------------------
04:14:48 SQL> 
04:14:48 SQL> -- Cleanup old build data preparation objects for repeat runs
04:14:48 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
04:14:48 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
04:14:48 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
04:14:48 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
04:14:48 SQL> 
04:14:48 SQL> 
04:14:48 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
04:14:48 SQL> --
04:14:48 SQL> -- DROP	TABLE svmc_settings ;
04:14:48 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
04:14:48 SQL> -- DELETE svmc_settings;
04:14:48 SQL> 
04:14:48 SQL> -- The default classification algorithm is Naive Bayes. So override
04:14:48 SQL> -- this choice to SVM using a settings table.
04:14:48 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
04:14:48 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
04:14:48 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
04:14:48 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
04:14:48 SQL> -- models.
04:14:48 SQL> --
04:14:48 SQL> 
04:14:48 SQL> -- Do this once and then comment it out.
04:14:48 SQL> -- That makes script go faster.
04:14:48 SQL> -- BEGIN
04:14:48 SQL> -- -- Populate settings table
04:14:48 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:14:48 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
04:14:48 SQL> --
04:14:48 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:14:48 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
04:14:48 SQL> --
04:14:48 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:14:48 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
04:14:48 SQL> --   COMMIT;
04:14:48 SQL> -- END;
04:14:48 SQL> -- /
04:14:48 SQL> 
04:14:48 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
04:14:48 SQL> 
04:14:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
04:14:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:14:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
04:14:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
04:14:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:14:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:14:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
04:14:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:14:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:14:48 SQL> 
04:14:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
04:14:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:14:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:14:48 SQL> 
04:14:48 SQL> --------------------------------
04:14:48 SQL> -- PREPARE BUILD (TRAINING) DATA
04:14:48 SQL> --
04:14:48 SQL> 
04:14:48 SQL> -- 1. Missing Value treatment for all Predictors and
04:14:48 SQL> -- 2. Outlier Treatment and
04:14:48 SQL> -- 3. Normalization are performed below.
04:14:48 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
04:14:48 SQL> --    normalized here.
04:14:48 SQL> 
04:14:48 SQL> BEGIN
04:14:48   2  	-- Perform missing value treatment for all predictors
04:14:48   3  	-- create miss tables
04:14:48   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
04:14:48   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
04:14:48   6  
04:14:48   7  	-- populate miss tables
04:14:48   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
04:14:48   9  	  miss_table_name => 'svmc_miss_num',
04:14:48  10  	  data_table_name => '&bldtable',
04:14:48  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:14:48  12  
04:14:48  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
04:14:48  14  	  miss_table_name => 'svmc_miss_cat',
04:14:48  15  	  data_table_name => '&bldtable',
04:14:48  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:14:48  17  
04:14:48  18  	-- xform input data to replace missing values
04:14:48  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:14:48  20  	  miss_table_name => 'svmc_miss_num',
04:14:48  21  	  data_table_name => '&bldtable',
04:14:48  22  	  xform_view_name => 'xformed_build_miss_num');
04:14:48  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:14:48  24  	  miss_table_name => 'svmc_miss_cat',
04:14:48  25  	  data_table_name => '&bldtable',
04:14:48  26  	  xform_view_name => 'xformed_build_miss_cat');
04:14:48  27  
04:14:48  28  	-- Perform outlier treatment.
04:14:48  29  	-- create clip table
04:14:48  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
04:14:48  31  
04:14:48  32  	-- populate clip table
04:14:48  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
04:14:48  34  	  clip_table_name => 'svmc_clip',
04:14:48  35  	  data_table_name => '&bldtable',
04:14:48  36  	  tail_frac	  => 0.025,
04:14:48  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:14:48  38  
04:14:48  39  	-- xform input data to winsorized data
04:14:48  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
04:14:48  41  	  clip_table_name => 'svmc_clip',
04:14:48  42  	  data_table_name => '&bldtable',
04:14:48  43  	  xform_view_name => 'svmc_winsor');
04:14:48  44  
04:14:48  45  	-- create normalization table
04:14:48  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
04:14:48  47  
04:14:48  48  	-- populate normalization table based on winsorized data
04:14:48  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
04:14:48  50  	  norm_table_name => 'svmc_norm',
04:14:48  51  	  data_table_name => 'svmc_winsor',
04:14:48  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:14:48  53  
04:14:48  54  	-- normalize the original data
04:14:48  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:14:48  56  	  norm_table_name => 'svmc_norm',
04:14:48  57  	  data_table_name => '&bldtable',
04:14:48  58  	  xform_view_name => 'svmc_build_prep');
04:14:48  59  END;
04:14:48  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:24.29
04:15:12 SQL> 
04:15:12 SQL> ---------------------
04:15:12 SQL> -- CREATE A NEW MODEL
04:15:12 SQL> --
04:15:12 SQL> -- Cleanup old model with the same name for repeat runs
04:15:12 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
04:15:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:15:12   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.72
04:15:13 SQL> 
04:15:13 SQL> -- Build a new SVM Model
04:15:13 SQL> BEGIN
04:15:13   2  	DBMS_DATA_MINING.CREATE_MODEL(
04:15:13   3  	  model_name	      => '&model_name',
04:15:13   4  	  mining_function     => dbms_data_mining.classification,
04:15:13   5  	  data_table_name     => 'svmc_build_prep',
04:15:13   6  	  case_id_column_name => '&case_id',
04:15:13   7  	  target_column_name  => '&target',
04:15:13   8  	  settings_table_name => 'svmc_settings');
04:15:13   9  END;
04:15:13  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.20
04:15:42 SQL> 
04:15:42 SQL> -----------------------------------------------------------------------
04:15:42 SQL> --			       APPLY/score THE MODEL
04:15:42 SQL> -----------------------------------------------------------------------
04:15:42 SQL> 
04:15:42 SQL> -- Cleanup old scoring data preparation objects for repeat runs
04:15:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
04:15:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:15:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:15:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
04:15:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:15:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:15:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
04:15:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:15:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:15:42 SQL> -----------------------
04:15:42 SQL> -- PREPARE SCORING DATA
04:15:42 SQL> --
04:15:42 SQL> -- If the data for model creation has been prepared, then the data
04:15:42 SQL> -- to be scored using the model must be prepared in the same manner
04:15:42 SQL> -- in order to obtain meaningful results.
04:15:42 SQL> --
04:15:42 SQL> -- 1. Missing Value treatment for all Predictors and
04:15:42 SQL> -- 2. Normalization
04:15:42 SQL> -- No outlier treatment will be performed during test and apply. The
04:15:42 SQL> -- normalization step is sufficient, since the normalization parameters
04:15:42 SQL> -- already capture the effects of outlier treatment done with build data.
04:15:42 SQL> --
04:15:42 SQL> BEGIN
04:15:42   2  	-- Xform Test data to replace missing values
04:15:42   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:15:42   4  	  miss_table_name => 'svmc_miss_num',
04:15:42   5  	  data_table_name => '&scoretable',
04:15:42   6  	  xform_view_name => 'xformed_apply_miss_num');
04:15:42   7  
04:15:42   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:15:42   9  	  miss_table_name => 'svmc_miss_cat',
04:15:42  10  	  data_table_name => '&scoretable',
04:15:42  11  	  xform_view_name => 'xformed_apply_miss_cat');
04:15:42  12  
04:15:42  13  	-- Normalize the data to be scored
04:15:42  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:15:42  15  	  norm_table_name => 'svmc_norm',
04:15:42  16  	  data_table_name => '&scoretable',
04:15:42  17  	  xform_view_name => 'svmc_apply_prep');
04:15:42  18  END;
04:15:42  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.34
04:15:44 SQL> 
04:15:44 SQL> -- Use same model_name used in score.sql
04:15:44 SQL> DEFINE model_name = 'forex14'
04:15:44 SQL> 
04:15:44 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
04:15:44 SQL> 
04:15:44 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
04:15:44 SQL> 
04:15:44 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
04:15:44   2  SELECT
04:15:44   3  prdate
04:15:44   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
04:15:44   5  ,sysdate
04:15:44   6  ,SUBSTR(prdate,1,3)pair
04:15:44   7  ,SUBSTR(prdate,4,19)ydate
04:15:44   8  FROM svmc_apply_prep
04:15:44   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
04:15:44 SQL> @aud_score1day.sql  2010-12-31 03:55:00
04:15:44 SQL> --
04:15:44 SQL> -- aud_score1day.sql
04:15:44 SQL> --
04:15:44 SQL> 
04:15:44 SQL> CREATE OR REPLACE VIEW sme AS
04:15:44   2  SELECT
04:15:44   3  'aud'||m.ydate prdate
04:15:44   4  ,NULL gatt
04:15:44   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:15:44   6  ,eur_g00
04:15:44   7  ,eur_g01
04:15:44   8  ,eur_g02
04:15:44   9  ,eur_g03
04:15:44  10  ,eur_g04
04:15:44  11  ,eur_g05
04:15:44  12  ,eur_g06
04:15:44  13  ,eur_g07
04:15:44  14  ,eur_g08
04:15:44  15  ,eur_g09
04:15:44  16  ,eur_g10
04:15:44  17  ,eur_g11
04:15:44  18  ,eur_g12
04:15:44  19  ,eur_g13
04:15:44  20  ,eur_g14
04:15:44  21  ,eur_g15
04:15:44  22  ,eur_g16
04:15:44  23  ,eur_g17
04:15:44  24  ,eur_g18
04:15:44  25  ,eur_g19
04:15:44  26  ,eur_g20
04:15:44  27  ,eur_g21
04:15:44  28  ,eur_g22
04:15:44  29  ,eur_g23
04:15:44  30  ,eur_g24
04:15:44  31  ,eur_g25
04:15:44  32  ,eur_g26
04:15:44  33  ,eur_g27
04:15:44  34  ,eur_g28
04:15:44  35  ,eur_g29
04:15:44  36  ,eur_g30
04:15:44  37  ,eur_g31
04:15:44  38  ,eur_g32
04:15:44  39  ,eur_g33
04:15:44  40  ,eur_g34
04:15:44  41  ,eur_g35
04:15:44  42  ,eur_g36
04:15:44  43  ,eur_g37
04:15:44  44  ,eur_g38
04:15:44  45  ,eur_g39
04:15:44  46  ,eur_g40
04:15:44  47  ,eur_g41
04:15:44  48  ,aud_g00
04:15:44  49  ,aud_g01
04:15:44  50  ,aud_g02
04:15:44  51  ,aud_g03
04:15:44  52  ,aud_g04
04:15:44  53  ,aud_g05
04:15:44  54  ,aud_g06
04:15:44  55  ,aud_g07
04:15:44  56  ,aud_g08
04:15:44  57  ,aud_g09
04:15:44  58  ,aud_g10
04:15:44  59  ,aud_g11
04:15:44  60  ,aud_g12
04:15:44  61  ,aud_g13
04:15:44  62  ,aud_g14
04:15:44  63  ,aud_g15
04:15:44  64  ,aud_g16
04:15:44  65  ,aud_g17
04:15:44  66  ,aud_g18
04:15:44  67  ,aud_g19
04:15:44  68  ,aud_g20
04:15:44  69  ,aud_g21
04:15:44  70  ,aud_g22
04:15:44  71  ,aud_g23
04:15:44  72  ,aud_g24
04:15:44  73  ,aud_g25
04:15:44  74  ,aud_g26
04:15:44  75  ,aud_g27
04:15:44  76  ,aud_g28
04:15:44  77  ,aud_g29
04:15:44  78  ,aud_g30
04:15:44  79  ,aud_g31
04:15:44  80  ,aud_g32
04:15:44  81  ,aud_g33
04:15:44  82  ,aud_g34
04:15:44  83  ,aud_g35
04:15:44  84  ,aud_g36
04:15:44  85  ,aud_g37
04:15:44  86  ,aud_g38
04:15:44  87  ,aud_g39
04:15:44  88  ,aud_g40
04:15:44  89  ,aud_g41
04:15:44  90  ,gbp_g00
04:15:44  91  ,gbp_g01
04:15:44  92  ,gbp_g02
04:15:44  93  ,gbp_g03
04:15:44  94  ,gbp_g04
04:15:44  95  ,gbp_g05
04:15:44  96  ,gbp_g06
04:15:44  97  ,gbp_g07
04:15:44  98  ,gbp_g08
04:15:44  99  ,gbp_g09
04:15:44 100  ,gbp_g10
04:15:44 101  ,gbp_g11
04:15:44 102  ,gbp_g12
04:15:44 103  ,gbp_g13
04:15:44 104  ,gbp_g14
04:15:44 105  ,gbp_g15
04:15:44 106  ,gbp_g16
04:15:44 107  ,gbp_g17
04:15:44 108  ,gbp_g18
04:15:44 109  ,gbp_g19
04:15:44 110  ,gbp_g20
04:15:44 111  ,gbp_g21
04:15:44 112  ,gbp_g22
04:15:44 113  ,gbp_g23
04:15:44 114  ,gbp_g24
04:15:44 115  ,gbp_g25
04:15:44 116  ,gbp_g26
04:15:44 117  ,gbp_g27
04:15:44 118  ,gbp_g28
04:15:44 119  ,gbp_g29
04:15:44 120  ,gbp_g30
04:15:44 121  ,gbp_g31
04:15:44 122  ,gbp_g32
04:15:44 123  ,gbp_g33
04:15:44 124  ,gbp_g34
04:15:44 125  ,gbp_g35
04:15:44 126  ,gbp_g36
04:15:44 127  ,gbp_g37
04:15:44 128  ,gbp_g38
04:15:44 129  ,gbp_g39
04:15:44 130  ,gbp_g40
04:15:44 131  ,gbp_g41
04:15:44 132  ,jpy_g00
04:15:44 133  ,jpy_g01
04:15:44 134  ,jpy_g02
04:15:44 135  ,jpy_g03
04:15:44 136  ,jpy_g04
04:15:44 137  ,jpy_g05
04:15:44 138  ,jpy_g06
04:15:44 139  ,jpy_g07
04:15:44 140  ,jpy_g08
04:15:44 141  ,jpy_g09
04:15:44 142  ,jpy_g10
04:15:44 143  ,jpy_g11
04:15:44 144  ,jpy_g12
04:15:44 145  ,jpy_g13
04:15:44 146  ,jpy_g14
04:15:44 147  ,jpy_g15
04:15:44 148  ,jpy_g16
04:15:44 149  ,jpy_g17
04:15:44 150  ,jpy_g18
04:15:44 151  ,jpy_g19
04:15:44 152  ,jpy_g20
04:15:44 153  ,jpy_g21
04:15:44 154  ,jpy_g22
04:15:44 155  ,jpy_g23
04:15:44 156  ,jpy_g24
04:15:44 157  ,jpy_g25
04:15:44 158  ,jpy_g26
04:15:44 159  ,jpy_g27
04:15:44 160  ,jpy_g28
04:15:44 161  ,jpy_g29
04:15:44 162  ,jpy_g30
04:15:44 163  ,jpy_g31
04:15:44 164  ,jpy_g32
04:15:44 165  ,jpy_g33
04:15:44 166  ,jpy_g34
04:15:44 167  ,jpy_g35
04:15:44 168  ,jpy_g36
04:15:44 169  ,jpy_g37
04:15:44 170  ,jpy_g38
04:15:44 171  ,jpy_g39
04:15:44 172  ,jpy_g40
04:15:44 173  ,jpy_g41
04:15:44 174  ,cad_g00
04:15:44 175  ,cad_g01
04:15:44 176  ,cad_g02
04:15:44 177  ,cad_g03
04:15:44 178  ,cad_g04
04:15:44 179  ,cad_g05
04:15:44 180  ,cad_g06
04:15:44 181  ,cad_g07
04:15:44 182  ,cad_g08
04:15:44 183  ,cad_g09
04:15:44 184  ,cad_g10
04:15:44 185  ,cad_g11
04:15:44 186  ,cad_g12
04:15:44 187  ,cad_g13
04:15:44 188  ,cad_g14
04:15:44 189  ,cad_g15
04:15:44 190  ,cad_g16
04:15:44 191  ,cad_g17
04:15:44 192  ,cad_g18
04:15:44 193  ,cad_g19
04:15:44 194  ,cad_g20
04:15:44 195  ,cad_g21
04:15:44 196  ,cad_g22
04:15:44 197  ,cad_g23
04:15:44 198  ,cad_g24
04:15:44 199  ,cad_g25
04:15:44 200  ,cad_g26
04:15:44 201  ,cad_g27
04:15:44 202  ,cad_g28
04:15:44 203  ,cad_g29
04:15:44 204  ,cad_g30
04:15:44 205  ,cad_g31
04:15:44 206  ,cad_g32
04:15:44 207  ,cad_g33
04:15:44 208  ,cad_g34
04:15:44 209  ,cad_g35
04:15:44 210  ,cad_g36
04:15:44 211  ,cad_g37
04:15:44 212  ,cad_g38
04:15:44 213  ,cad_g39
04:15:44 214  ,cad_g40
04:15:44 215  ,cad_g41
04:15:44 216  ,chf_g00
04:15:44 217  ,chf_g01
04:15:44 218  ,chf_g02
04:15:44 219  ,chf_g03
04:15:44 220  ,chf_g04
04:15:44 221  ,chf_g05
04:15:44 222  ,chf_g06
04:15:44 223  ,chf_g07
04:15:44 224  ,chf_g08
04:15:44 225  ,chf_g09
04:15:44 226  ,chf_g10
04:15:44 227  ,chf_g11
04:15:44 228  ,chf_g12
04:15:44 229  ,chf_g13
04:15:44 230  ,chf_g14
04:15:44 231  ,chf_g15
04:15:44 232  ,chf_g16
04:15:44 233  ,chf_g17
04:15:44 234  ,chf_g18
04:15:44 235  ,chf_g19
04:15:44 236  ,chf_g20
04:15:44 237  ,chf_g21
04:15:44 238  ,chf_g22
04:15:44 239  ,chf_g23
04:15:44 240  ,chf_g24
04:15:44 241  ,chf_g25
04:15:44 242  ,chf_g26
04:15:44 243  ,chf_g27
04:15:44 244  ,chf_g28
04:15:44 245  ,chf_g29
04:15:44 246  ,chf_g30
04:15:44 247  ,chf_g31
04:15:44 248  ,chf_g32
04:15:44 249  ,chf_g33
04:15:44 250  ,chf_g34
04:15:44 251  ,chf_g35
04:15:44 252  ,chf_g36
04:15:44 253  ,chf_g37
04:15:44 254  ,chf_g38
04:15:44 255  ,chf_g39
04:15:44 256  ,chf_g40
04:15:44 257  ,chf_g41
04:15:44 258  FROM aud_ms6 m
04:15:44 259  WHERE m.ydate = '&1'||' '||'&2'
04:15:44 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'03:55:00'

View created.

Elapsed: 00:00:00.20
04:15:44 SQL> 
04:15:44 SQL> -- rpt
04:15:44 SQL> -- We should see just 1 row:
04:15:44 SQL> 
04:15:44 SQL> SELECT COUNT(prdate) FROM sme
04:15:44   2  
04:15:44 SQL> -- Build the model:
04:15:44 SQL> CREATE OR REPLACE VIEW bme AS
04:15:44   2  SELECT
04:15:44   3  'aud'||m.ydate prdate
04:15:44   4  ,gatt
04:15:44   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:15:44   6  ,eur_g00
04:15:44   7  ,eur_g01
04:15:44   8  ,eur_g02
04:15:44   9  ,eur_g03
04:15:44  10  ,eur_g04
04:15:44  11  ,eur_g05
04:15:44  12  ,eur_g06
04:15:44  13  ,eur_g07
04:15:44  14  ,eur_g08
04:15:44  15  ,eur_g09
04:15:44  16  ,eur_g10
04:15:44  17  ,eur_g11
04:15:44  18  ,eur_g12
04:15:44  19  ,eur_g13
04:15:44  20  ,eur_g14
04:15:44  21  ,eur_g15
04:15:44  22  ,eur_g16
04:15:44  23  ,eur_g17
04:15:44  24  ,eur_g18
04:15:44  25  ,eur_g19
04:15:44  26  ,eur_g20
04:15:44  27  ,eur_g21
04:15:44  28  ,eur_g22
04:15:44  29  ,eur_g23
04:15:44  30  ,eur_g24
04:15:44  31  ,eur_g25
04:15:44  32  ,eur_g26
04:15:44  33  ,eur_g27
04:15:44  34  ,eur_g28
04:15:44  35  ,eur_g29
04:15:44  36  ,eur_g30
04:15:44  37  ,eur_g31
04:15:44  38  ,eur_g32
04:15:44  39  ,eur_g33
04:15:44  40  ,eur_g34
04:15:44  41  ,eur_g35
04:15:44  42  ,eur_g36
04:15:44  43  ,eur_g37
04:15:44  44  ,eur_g38
04:15:44  45  ,eur_g39
04:15:44  46  ,eur_g40
04:15:44  47  ,eur_g41
04:15:44  48  ,aud_g00
04:15:44  49  ,aud_g01
04:15:44  50  ,aud_g02
04:15:44  51  ,aud_g03
04:15:44  52  ,aud_g04
04:15:44  53  ,aud_g05
04:15:44  54  ,aud_g06
04:15:44  55  ,aud_g07
04:15:44  56  ,aud_g08
04:15:44  57  ,aud_g09
04:15:44  58  ,aud_g10
04:15:44  59  ,aud_g11
04:15:44  60  ,aud_g12
04:15:44  61  ,aud_g13
04:15:44  62  ,aud_g14
04:15:44  63  ,aud_g15
04:15:44  64  ,aud_g16
04:15:44  65  ,aud_g17
04:15:44  66  ,aud_g18
04:15:44  67  ,aud_g19
04:15:44  68  ,aud_g20
04:15:44  69  ,aud_g21
04:15:44  70  ,aud_g22
04:15:44  71  ,aud_g23
04:15:44  72  ,aud_g24
04:15:44  73  ,aud_g25
04:15:44  74  ,aud_g26
04:15:44  75  ,aud_g27
04:15:44  76  ,aud_g28
04:15:44  77  ,aud_g29
04:15:44  78  ,aud_g30
04:15:44  79  ,aud_g31
04:15:44  80  ,aud_g32
04:15:44  81  ,aud_g33
04:15:44  82  ,aud_g34
04:15:44  83  ,aud_g35
04:15:44  84  ,aud_g36
04:15:44  85  ,aud_g37
04:15:44  86  ,aud_g38
04:15:44  87  ,aud_g39
04:15:44  88  ,aud_g40
04:15:44  89  ,aud_g41
04:15:44  90  ,gbp_g00
04:15:44  91  ,gbp_g01
04:15:44  92  ,gbp_g02
04:15:44  93  ,gbp_g03
04:15:44  94  ,gbp_g04
04:15:44  95  ,gbp_g05
04:15:44  96  ,gbp_g06
04:15:44  97  ,gbp_g07
04:15:44  98  ,gbp_g08
04:15:44  99  ,gbp_g09
04:15:44 100  ,gbp_g10
04:15:44 101  ,gbp_g11
04:15:44 102  ,gbp_g12
04:15:44 103  ,gbp_g13
04:15:44 104  ,gbp_g14
04:15:44 105  ,gbp_g15
04:15:44 106  ,gbp_g16
04:15:44 107  ,gbp_g17
04:15:44 108  ,gbp_g18
04:15:44 109  ,gbp_g19
04:15:44 110  ,gbp_g20
04:15:44 111  ,gbp_g21
04:15:44 112  ,gbp_g22
04:15:44 113  ,gbp_g23
04:15:44 114  ,gbp_g24
04:15:44 115  ,gbp_g25
04:15:44 116  ,gbp_g26
04:15:44 117  ,gbp_g27
04:15:44 118  ,gbp_g28
04:15:44 119  ,gbp_g29
04:15:44 120  ,gbp_g30
04:15:44 121  ,gbp_g31
04:15:44 122  ,gbp_g32
04:15:44 123  ,gbp_g33
04:15:44 124  ,gbp_g34
04:15:44 125  ,gbp_g35
04:15:44 126  ,gbp_g36
04:15:44 127  ,gbp_g37
04:15:44 128  ,gbp_g38
04:15:44 129  ,gbp_g39
04:15:44 130  ,gbp_g40
04:15:44 131  ,gbp_g41
04:15:44 132  ,jpy_g00
04:15:44 133  ,jpy_g01
04:15:44 134  ,jpy_g02
04:15:44 135  ,jpy_g03
04:15:44 136  ,jpy_g04
04:15:44 137  ,jpy_g05
04:15:44 138  ,jpy_g06
04:15:44 139  ,jpy_g07
04:15:44 140  ,jpy_g08
04:15:44 141  ,jpy_g09
04:15:44 142  ,jpy_g10
04:15:44 143  ,jpy_g11
04:15:44 144  ,jpy_g12
04:15:44 145  ,jpy_g13
04:15:44 146  ,jpy_g14
04:15:44 147  ,jpy_g15
04:15:44 148  ,jpy_g16
04:15:44 149  ,jpy_g17
04:15:44 150  ,jpy_g18
04:15:44 151  ,jpy_g19
04:15:44 152  ,jpy_g20
04:15:44 153  ,jpy_g21
04:15:44 154  ,jpy_g22
04:15:44 155  ,jpy_g23
04:15:44 156  ,jpy_g24
04:15:44 157  ,jpy_g25
04:15:44 158  ,jpy_g26
04:15:44 159  ,jpy_g27
04:15:44 160  ,jpy_g28
04:15:44 161  ,jpy_g29
04:15:44 162  ,jpy_g30
04:15:44 163  ,jpy_g31
04:15:44 164  ,jpy_g32
04:15:44 165  ,jpy_g33
04:15:44 166  ,jpy_g34
04:15:44 167  ,jpy_g35
04:15:44 168  ,jpy_g36
04:15:44 169  ,jpy_g37
04:15:44 170  ,jpy_g38
04:15:44 171  ,jpy_g39
04:15:44 172  ,jpy_g40
04:15:44 173  ,jpy_g41
04:15:44 174  ,cad_g00
04:15:44 175  ,cad_g01
04:15:44 176  ,cad_g02
04:15:44 177  ,cad_g03
04:15:44 178  ,cad_g04
04:15:44 179  ,cad_g05
04:15:44 180  ,cad_g06
04:15:44 181  ,cad_g07
04:15:44 182  ,cad_g08
04:15:44 183  ,cad_g09
04:15:44 184  ,cad_g10
04:15:44 185  ,cad_g11
04:15:44 186  ,cad_g12
04:15:44 187  ,cad_g13
04:15:44 188  ,cad_g14
04:15:44 189  ,cad_g15
04:15:44 190  ,cad_g16
04:15:44 191  ,cad_g17
04:15:44 192  ,cad_g18
04:15:44 193  ,cad_g19
04:15:44 194  ,cad_g20
04:15:44 195  ,cad_g21
04:15:44 196  ,cad_g22
04:15:44 197  ,cad_g23
04:15:44 198  ,cad_g24
04:15:44 199  ,cad_g25
04:15:44 200  ,cad_g26
04:15:44 201  ,cad_g27
04:15:44 202  ,cad_g28
04:15:44 203  ,cad_g29
04:15:44 204  ,cad_g30
04:15:44 205  ,cad_g31
04:15:44 206  ,cad_g32
04:15:44 207  ,cad_g33
04:15:44 208  ,cad_g34
04:15:44 209  ,cad_g35
04:15:44 210  ,cad_g36
04:15:44 211  ,cad_g37
04:15:44 212  ,cad_g38
04:15:44 213  ,cad_g39
04:15:44 214  ,cad_g40
04:15:44 215  ,cad_g41
04:15:44 216  ,chf_g00
04:15:44 217  ,chf_g01
04:15:44 218  ,chf_g02
04:15:44 219  ,chf_g03
04:15:44 220  ,chf_g04
04:15:44 221  ,chf_g05
04:15:44 222  ,chf_g06
04:15:44 223  ,chf_g07
04:15:44 224  ,chf_g08
04:15:44 225  ,chf_g09
04:15:44 226  ,chf_g10
04:15:44 227  ,chf_g11
04:15:44 228  ,chf_g12
04:15:44 229  ,chf_g13
04:15:44 230  ,chf_g14
04:15:44 231  ,chf_g15
04:15:44 232  ,chf_g16
04:15:44 233  ,chf_g17
04:15:44 234  ,chf_g18
04:15:44 235  ,chf_g19
04:15:44 236  ,chf_g20
04:15:44 237  ,chf_g21
04:15:44 238  ,chf_g22
04:15:44 239  ,chf_g23
04:15:44 240  ,chf_g24
04:15:44 241  ,chf_g25
04:15:44 242  ,chf_g26
04:15:44 243  ,chf_g27
04:15:44 244  ,chf_g28
04:15:44 245  ,chf_g29
04:15:44 246  ,chf_g30
04:15:44 247  ,chf_g31
04:15:44 248  ,chf_g32
04:15:44 249  ,chf_g33
04:15:44 250  ,chf_g34
04:15:44 251  ,chf_g35
04:15:44 252  ,chf_g36
04:15:44 253  ,chf_g37
04:15:44 254  ,chf_g38
04:15:44 255  ,chf_g39
04:15:44 256  ,chf_g40
04:15:44 257  ,chf_g41
04:15:44 258  FROM aud_ms6 m
04:15:44 259  WHERE gatt IN('nup','up')
04:15:44 260  AND 1+m.ydate < '&1'||' '||'&2'
04:15:44 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'03:55:00'

View created.

Elapsed: 00:00:00.11
04:15:44 SQL> 
04:15:44 SQL> -- rpt
04:15:44 SQL> 
04:15:44 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
04:15:44   2  
04:15:44 SQL> SELECT MAX(prdate) FROM bme
04:15:44   2  
04:15:44 SQL> -- Now build model from bme and score sme
04:15:44 SQL> @score1.sql
04:15:44 SQL> -- score1.sql
04:15:44 SQL> 
04:15:44 SQL> -- Does the 1st SVM score
04:15:44 SQL> 
04:15:44 SQL> -- Fill up svmc_apply_prep
04:15:44 SQL> @score.sql
04:15:44 SQL> --
04:15:44 SQL> -- score.sql
04:15:44 SQL> --
04:15:44 SQL> 
04:15:44 SQL> -- usage: score.sql
04:15:44 SQL> 
04:15:44 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
04:15:44 SQL> 
04:15:44 SQL> DEFINE target	= 'gatt'
04:15:44 SQL> DEFINE model_name = 'forex14'
04:15:44 SQL> DEFINE bldtable	= 'bme'
04:15:44 SQL> DEFINE scoretable = 'sme'
04:15:44 SQL> DEFINE case_id	= 'prdate'
04:15:44 SQL> 
04:15:44 SQL> -- Define a variable to help me exclude some columns from some data mining calls
04:15:44 SQL> DEFINE exclude1 = "'&target','&case_id'"
04:15:44 SQL> 
04:15:44 SQL> -- Builds an SVM model using pl/sql.
04:15:44 SQL> 
04:15:44 SQL> -----------------------------------------------------------------------
04:15:44 SQL> --			    BUILD THE MODEL
04:15:44 SQL> -----------------------------------------------------------------------
04:15:44 SQL> 
04:15:44 SQL> -- Cleanup old build data preparation objects for repeat runs
04:15:44 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
04:15:44 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
04:15:44 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
04:15:44 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
04:15:44 SQL> 
04:15:44 SQL> 
04:15:44 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
04:15:44 SQL> --
04:15:44 SQL> -- DROP	TABLE svmc_settings ;
04:15:44 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
04:15:44 SQL> -- DELETE svmc_settings;
04:15:44 SQL> 
04:15:44 SQL> -- The default classification algorithm is Naive Bayes. So override
04:15:44 SQL> -- this choice to SVM using a settings table.
04:15:44 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
04:15:44 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
04:15:44 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
04:15:44 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
04:15:44 SQL> -- models.
04:15:44 SQL> --
04:15:44 SQL> 
04:15:44 SQL> -- Do this once and then comment it out.
04:15:44 SQL> -- That makes script go faster.
04:15:44 SQL> -- BEGIN
04:15:44 SQL> -- -- Populate settings table
04:15:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:15:44 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
04:15:44 SQL> --
04:15:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:15:44 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
04:15:44 SQL> --
04:15:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:15:44 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
04:15:44 SQL> --   COMMIT;
04:15:44 SQL> -- END;
04:15:44 SQL> -- /
04:15:44 SQL> 
04:15:44 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
04:15:44 SQL> 
04:15:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
04:15:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:15:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:15:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
04:15:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:15:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:15:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
04:15:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:15:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:15:44 SQL> 
04:15:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
04:15:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:15:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:15:45 SQL> 
04:15:45 SQL> --------------------------------
04:15:45 SQL> -- PREPARE BUILD (TRAINING) DATA
04:15:45 SQL> --
04:15:45 SQL> 
04:15:45 SQL> -- 1. Missing Value treatment for all Predictors and
04:15:45 SQL> -- 2. Outlier Treatment and
04:15:45 SQL> -- 3. Normalization are performed below.
04:15:45 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
04:15:45 SQL> --    normalized here.
04:15:45 SQL> 
04:15:45 SQL> BEGIN
04:15:45   2  	-- Perform missing value treatment for all predictors
04:15:45   3  	-- create miss tables
04:15:45   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
04:15:45   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
04:15:45   6  
04:15:45   7  	-- populate miss tables
04:15:45   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
04:15:45   9  	  miss_table_name => 'svmc_miss_num',
04:15:45  10  	  data_table_name => '&bldtable',
04:15:45  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:15:45  12  
04:15:45  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
04:15:45  14  	  miss_table_name => 'svmc_miss_cat',
04:15:45  15  	  data_table_name => '&bldtable',
04:15:45  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:15:45  17  
04:15:45  18  	-- xform input data to replace missing values
04:15:45  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:15:45  20  	  miss_table_name => 'svmc_miss_num',
04:15:45  21  	  data_table_name => '&bldtable',
04:15:45  22  	  xform_view_name => 'xformed_build_miss_num');
04:15:45  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:15:45  24  	  miss_table_name => 'svmc_miss_cat',
04:15:45  25  	  data_table_name => '&bldtable',
04:15:45  26  	  xform_view_name => 'xformed_build_miss_cat');
04:15:45  27  
04:15:45  28  	-- Perform outlier treatment.
04:15:45  29  	-- create clip table
04:15:45  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
04:15:45  31  
04:15:45  32  	-- populate clip table
04:15:45  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
04:15:45  34  	  clip_table_name => 'svmc_clip',
04:15:45  35  	  data_table_name => '&bldtable',
04:15:45  36  	  tail_frac	  => 0.025,
04:15:45  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:15:45  38  
04:15:45  39  	-- xform input data to winsorized data
04:15:45  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
04:15:45  41  	  clip_table_name => 'svmc_clip',
04:15:45  42  	  data_table_name => '&bldtable',
04:15:45  43  	  xform_view_name => 'svmc_winsor');
04:15:45  44  
04:15:45  45  	-- create normalization table
04:15:45  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
04:15:45  47  
04:15:45  48  	-- populate normalization table based on winsorized data
04:15:45  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
04:15:45  50  	  norm_table_name => 'svmc_norm',
04:15:45  51  	  data_table_name => 'svmc_winsor',
04:15:45  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:15:45  53  
04:15:45  54  	-- normalize the original data
04:15:45  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:15:45  56  	  norm_table_name => 'svmc_norm',
04:15:45  57  	  data_table_name => '&bldtable',
04:15:45  58  	  xform_view_name => 'svmc_build_prep');
04:15:45  59  END;
04:15:45  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.24
04:16:03 SQL> 
04:16:03 SQL> ---------------------
04:16:03 SQL> -- CREATE A NEW MODEL
04:16:03 SQL> --
04:16:03 SQL> -- Cleanup old model with the same name for repeat runs
04:16:03 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
04:16:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:16:03   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.99
04:16:04 SQL> 
04:16:04 SQL> -- Build a new SVM Model
04:16:04 SQL> BEGIN
04:16:04   2  	DBMS_DATA_MINING.CREATE_MODEL(
04:16:04   3  	  model_name	      => '&model_name',
04:16:04   4  	  mining_function     => dbms_data_mining.classification,
04:16:04   5  	  data_table_name     => 'svmc_build_prep',
04:16:04   6  	  case_id_column_name => '&case_id',
04:16:04   7  	  target_column_name  => '&target',
04:16:04   8  	  settings_table_name => 'svmc_settings');
04:16:04   9  END;
04:16:04  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.92
04:16:33 SQL> 
04:16:33 SQL> -----------------------------------------------------------------------
04:16:33 SQL> --			       APPLY/score THE MODEL
04:16:33 SQL> -----------------------------------------------------------------------
04:16:33 SQL> 
04:16:33 SQL> -- Cleanup old scoring data preparation objects for repeat runs
04:16:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
04:16:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:16:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:16:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
04:16:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:16:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:16:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
04:16:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:16:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:16:33 SQL> -----------------------
04:16:33 SQL> -- PREPARE SCORING DATA
04:16:33 SQL> --
04:16:33 SQL> -- If the data for model creation has been prepared, then the data
04:16:33 SQL> -- to be scored using the model must be prepared in the same manner
04:16:33 SQL> -- in order to obtain meaningful results.
04:16:33 SQL> --
04:16:33 SQL> -- 1. Missing Value treatment for all Predictors and
04:16:33 SQL> -- 2. Normalization
04:16:33 SQL> -- No outlier treatment will be performed during test and apply. The
04:16:33 SQL> -- normalization step is sufficient, since the normalization parameters
04:16:33 SQL> -- already capture the effects of outlier treatment done with build data.
04:16:33 SQL> --
04:16:33 SQL> BEGIN
04:16:33   2  	-- Xform Test data to replace missing values
04:16:33   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:16:33   4  	  miss_table_name => 'svmc_miss_num',
04:16:33   5  	  data_table_name => '&scoretable',
04:16:33   6  	  xform_view_name => 'xformed_apply_miss_num');
04:16:33   7  
04:16:33   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:16:33   9  	  miss_table_name => 'svmc_miss_cat',
04:16:33  10  	  data_table_name => '&scoretable',
04:16:33  11  	  xform_view_name => 'xformed_apply_miss_cat');
04:16:33  12  
04:16:33  13  	-- Normalize the data to be scored
04:16:33  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:16:33  15  	  norm_table_name => 'svmc_norm',
04:16:33  16  	  data_table_name => '&scoretable',
04:16:33  17  	  xform_view_name => 'svmc_apply_prep');
04:16:33  18  END;
04:16:33  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
04:16:34 SQL> 
04:16:34 SQL> -- Use same model_name used in score.sql
04:16:34 SQL> DEFINE model_name = 'forex14'
04:16:34 SQL> 
04:16:34 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
04:16:34 SQL> 
04:16:34 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.07
04:16:34 SQL> 
04:16:34 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
04:16:34   2  SELECT
04:16:34   3  prdate
04:16:34   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
04:16:34   5  ,sysdate
04:16:34   6  ,SUBSTR(prdate,1,3)pair
04:16:34   7  ,SUBSTR(prdate,4,19)ydate
04:16:34   8  FROM svmc_apply_prep
04:16:34   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.27
04:16:34 SQL> @aud_score1day.sql  2010-12-31 04:00:00
04:16:34 SQL> --
04:16:34 SQL> -- aud_score1day.sql
04:16:34 SQL> --
04:16:34 SQL> 
04:16:34 SQL> CREATE OR REPLACE VIEW sme AS
04:16:34   2  SELECT
04:16:34   3  'aud'||m.ydate prdate
04:16:34   4  ,NULL gatt
04:16:34   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:16:34   6  ,eur_g00
04:16:34   7  ,eur_g01
04:16:34   8  ,eur_g02
04:16:34   9  ,eur_g03
04:16:34  10  ,eur_g04
04:16:34  11  ,eur_g05
04:16:34  12  ,eur_g06
04:16:34  13  ,eur_g07
04:16:34  14  ,eur_g08
04:16:34  15  ,eur_g09
04:16:34  16  ,eur_g10
04:16:34  17  ,eur_g11
04:16:34  18  ,eur_g12
04:16:34  19  ,eur_g13
04:16:34  20  ,eur_g14
04:16:34  21  ,eur_g15
04:16:34  22  ,eur_g16
04:16:34  23  ,eur_g17
04:16:34  24  ,eur_g18
04:16:34  25  ,eur_g19
04:16:34  26  ,eur_g20
04:16:34  27  ,eur_g21
04:16:34  28  ,eur_g22
04:16:34  29  ,eur_g23
04:16:34  30  ,eur_g24
04:16:34  31  ,eur_g25
04:16:34  32  ,eur_g26
04:16:34  33  ,eur_g27
04:16:34  34  ,eur_g28
04:16:34  35  ,eur_g29
04:16:34  36  ,eur_g30
04:16:34  37  ,eur_g31
04:16:34  38  ,eur_g32
04:16:34  39  ,eur_g33
04:16:34  40  ,eur_g34
04:16:34  41  ,eur_g35
04:16:34  42  ,eur_g36
04:16:34  43  ,eur_g37
04:16:34  44  ,eur_g38
04:16:34  45  ,eur_g39
04:16:34  46  ,eur_g40
04:16:34  47  ,eur_g41
04:16:34  48  ,aud_g00
04:16:34  49  ,aud_g01
04:16:34  50  ,aud_g02
04:16:34  51  ,aud_g03
04:16:34  52  ,aud_g04
04:16:34  53  ,aud_g05
04:16:34  54  ,aud_g06
04:16:34  55  ,aud_g07
04:16:34  56  ,aud_g08
04:16:34  57  ,aud_g09
04:16:34  58  ,aud_g10
04:16:34  59  ,aud_g11
04:16:34  60  ,aud_g12
04:16:34  61  ,aud_g13
04:16:34  62  ,aud_g14
04:16:34  63  ,aud_g15
04:16:34  64  ,aud_g16
04:16:34  65  ,aud_g17
04:16:34  66  ,aud_g18
04:16:34  67  ,aud_g19
04:16:34  68  ,aud_g20
04:16:34  69  ,aud_g21
04:16:34  70  ,aud_g22
04:16:34  71  ,aud_g23
04:16:34  72  ,aud_g24
04:16:34  73  ,aud_g25
04:16:34  74  ,aud_g26
04:16:34  75  ,aud_g27
04:16:34  76  ,aud_g28
04:16:34  77  ,aud_g29
04:16:34  78  ,aud_g30
04:16:34  79  ,aud_g31
04:16:34  80  ,aud_g32
04:16:34  81  ,aud_g33
04:16:34  82  ,aud_g34
04:16:34  83  ,aud_g35
04:16:34  84  ,aud_g36
04:16:34  85  ,aud_g37
04:16:34  86  ,aud_g38
04:16:34  87  ,aud_g39
04:16:34  88  ,aud_g40
04:16:34  89  ,aud_g41
04:16:34  90  ,gbp_g00
04:16:34  91  ,gbp_g01
04:16:34  92  ,gbp_g02
04:16:34  93  ,gbp_g03
04:16:34  94  ,gbp_g04
04:16:34  95  ,gbp_g05
04:16:34  96  ,gbp_g06
04:16:34  97  ,gbp_g07
04:16:34  98  ,gbp_g08
04:16:34  99  ,gbp_g09
04:16:34 100  ,gbp_g10
04:16:34 101  ,gbp_g11
04:16:34 102  ,gbp_g12
04:16:34 103  ,gbp_g13
04:16:34 104  ,gbp_g14
04:16:34 105  ,gbp_g15
04:16:34 106  ,gbp_g16
04:16:34 107  ,gbp_g17
04:16:34 108  ,gbp_g18
04:16:34 109  ,gbp_g19
04:16:34 110  ,gbp_g20
04:16:34 111  ,gbp_g21
04:16:34 112  ,gbp_g22
04:16:34 113  ,gbp_g23
04:16:34 114  ,gbp_g24
04:16:34 115  ,gbp_g25
04:16:34 116  ,gbp_g26
04:16:34 117  ,gbp_g27
04:16:34 118  ,gbp_g28
04:16:34 119  ,gbp_g29
04:16:34 120  ,gbp_g30
04:16:34 121  ,gbp_g31
04:16:34 122  ,gbp_g32
04:16:34 123  ,gbp_g33
04:16:34 124  ,gbp_g34
04:16:34 125  ,gbp_g35
04:16:34 126  ,gbp_g36
04:16:34 127  ,gbp_g37
04:16:34 128  ,gbp_g38
04:16:34 129  ,gbp_g39
04:16:34 130  ,gbp_g40
04:16:34 131  ,gbp_g41
04:16:34 132  ,jpy_g00
04:16:34 133  ,jpy_g01
04:16:34 134  ,jpy_g02
04:16:34 135  ,jpy_g03
04:16:34 136  ,jpy_g04
04:16:34 137  ,jpy_g05
04:16:34 138  ,jpy_g06
04:16:34 139  ,jpy_g07
04:16:34 140  ,jpy_g08
04:16:34 141  ,jpy_g09
04:16:34 142  ,jpy_g10
04:16:34 143  ,jpy_g11
04:16:34 144  ,jpy_g12
04:16:34 145  ,jpy_g13
04:16:34 146  ,jpy_g14
04:16:34 147  ,jpy_g15
04:16:34 148  ,jpy_g16
04:16:34 149  ,jpy_g17
04:16:34 150  ,jpy_g18
04:16:34 151  ,jpy_g19
04:16:34 152  ,jpy_g20
04:16:34 153  ,jpy_g21
04:16:34 154  ,jpy_g22
04:16:34 155  ,jpy_g23
04:16:34 156  ,jpy_g24
04:16:34 157  ,jpy_g25
04:16:34 158  ,jpy_g26
04:16:34 159  ,jpy_g27
04:16:34 160  ,jpy_g28
04:16:34 161  ,jpy_g29
04:16:34 162  ,jpy_g30
04:16:34 163  ,jpy_g31
04:16:34 164  ,jpy_g32
04:16:34 165  ,jpy_g33
04:16:34 166  ,jpy_g34
04:16:34 167  ,jpy_g35
04:16:34 168  ,jpy_g36
04:16:34 169  ,jpy_g37
04:16:34 170  ,jpy_g38
04:16:34 171  ,jpy_g39
04:16:34 172  ,jpy_g40
04:16:34 173  ,jpy_g41
04:16:34 174  ,cad_g00
04:16:34 175  ,cad_g01
04:16:34 176  ,cad_g02
04:16:34 177  ,cad_g03
04:16:34 178  ,cad_g04
04:16:34 179  ,cad_g05
04:16:34 180  ,cad_g06
04:16:34 181  ,cad_g07
04:16:34 182  ,cad_g08
04:16:34 183  ,cad_g09
04:16:34 184  ,cad_g10
04:16:34 185  ,cad_g11
04:16:34 186  ,cad_g12
04:16:34 187  ,cad_g13
04:16:34 188  ,cad_g14
04:16:34 189  ,cad_g15
04:16:34 190  ,cad_g16
04:16:34 191  ,cad_g17
04:16:34 192  ,cad_g18
04:16:34 193  ,cad_g19
04:16:34 194  ,cad_g20
04:16:34 195  ,cad_g21
04:16:34 196  ,cad_g22
04:16:34 197  ,cad_g23
04:16:34 198  ,cad_g24
04:16:34 199  ,cad_g25
04:16:34 200  ,cad_g26
04:16:34 201  ,cad_g27
04:16:34 202  ,cad_g28
04:16:34 203  ,cad_g29
04:16:34 204  ,cad_g30
04:16:34 205  ,cad_g31
04:16:34 206  ,cad_g32
04:16:34 207  ,cad_g33
04:16:34 208  ,cad_g34
04:16:34 209  ,cad_g35
04:16:34 210  ,cad_g36
04:16:34 211  ,cad_g37
04:16:34 212  ,cad_g38
04:16:34 213  ,cad_g39
04:16:34 214  ,cad_g40
04:16:34 215  ,cad_g41
04:16:34 216  ,chf_g00
04:16:34 217  ,chf_g01
04:16:34 218  ,chf_g02
04:16:34 219  ,chf_g03
04:16:34 220  ,chf_g04
04:16:34 221  ,chf_g05
04:16:34 222  ,chf_g06
04:16:34 223  ,chf_g07
04:16:34 224  ,chf_g08
04:16:34 225  ,chf_g09
04:16:34 226  ,chf_g10
04:16:34 227  ,chf_g11
04:16:34 228  ,chf_g12
04:16:34 229  ,chf_g13
04:16:34 230  ,chf_g14
04:16:34 231  ,chf_g15
04:16:34 232  ,chf_g16
04:16:34 233  ,chf_g17
04:16:34 234  ,chf_g18
04:16:34 235  ,chf_g19
04:16:34 236  ,chf_g20
04:16:34 237  ,chf_g21
04:16:34 238  ,chf_g22
04:16:34 239  ,chf_g23
04:16:34 240  ,chf_g24
04:16:34 241  ,chf_g25
04:16:34 242  ,chf_g26
04:16:34 243  ,chf_g27
04:16:34 244  ,chf_g28
04:16:34 245  ,chf_g29
04:16:34 246  ,chf_g30
04:16:34 247  ,chf_g31
04:16:34 248  ,chf_g32
04:16:34 249  ,chf_g33
04:16:34 250  ,chf_g34
04:16:34 251  ,chf_g35
04:16:34 252  ,chf_g36
04:16:34 253  ,chf_g37
04:16:34 254  ,chf_g38
04:16:34 255  ,chf_g39
04:16:34 256  ,chf_g40
04:16:34 257  ,chf_g41
04:16:34 258  FROM aud_ms6 m
04:16:34 259  WHERE m.ydate = '&1'||' '||'&2'
04:16:34 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'04:00:00'

View created.

Elapsed: 00:00:00.13
04:16:35 SQL> 
04:16:35 SQL> -- rpt
04:16:35 SQL> -- We should see just 1 row:
04:16:35 SQL> 
04:16:35 SQL> SELECT COUNT(prdate) FROM sme
04:16:35   2  
04:16:35 SQL> -- Build the model:
04:16:35 SQL> CREATE OR REPLACE VIEW bme AS
04:16:35   2  SELECT
04:16:35   3  'aud'||m.ydate prdate
04:16:35   4  ,gatt
04:16:35   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:16:35   6  ,eur_g00
04:16:35   7  ,eur_g01
04:16:35   8  ,eur_g02
04:16:35   9  ,eur_g03
04:16:35  10  ,eur_g04
04:16:35  11  ,eur_g05
04:16:35  12  ,eur_g06
04:16:35  13  ,eur_g07
04:16:35  14  ,eur_g08
04:16:35  15  ,eur_g09
04:16:35  16  ,eur_g10
04:16:35  17  ,eur_g11
04:16:35  18  ,eur_g12
04:16:35  19  ,eur_g13
04:16:35  20  ,eur_g14
04:16:35  21  ,eur_g15
04:16:35  22  ,eur_g16
04:16:35  23  ,eur_g17
04:16:35  24  ,eur_g18
04:16:35  25  ,eur_g19
04:16:35  26  ,eur_g20
04:16:35  27  ,eur_g21
04:16:35  28  ,eur_g22
04:16:35  29  ,eur_g23
04:16:35  30  ,eur_g24
04:16:35  31  ,eur_g25
04:16:35  32  ,eur_g26
04:16:35  33  ,eur_g27
04:16:35  34  ,eur_g28
04:16:35  35  ,eur_g29
04:16:35  36  ,eur_g30
04:16:35  37  ,eur_g31
04:16:35  38  ,eur_g32
04:16:35  39  ,eur_g33
04:16:35  40  ,eur_g34
04:16:35  41  ,eur_g35
04:16:35  42  ,eur_g36
04:16:35  43  ,eur_g37
04:16:35  44  ,eur_g38
04:16:35  45  ,eur_g39
04:16:35  46  ,eur_g40
04:16:35  47  ,eur_g41
04:16:35  48  ,aud_g00
04:16:35  49  ,aud_g01
04:16:35  50  ,aud_g02
04:16:35  51  ,aud_g03
04:16:35  52  ,aud_g04
04:16:35  53  ,aud_g05
04:16:35  54  ,aud_g06
04:16:35  55  ,aud_g07
04:16:35  56  ,aud_g08
04:16:35  57  ,aud_g09
04:16:35  58  ,aud_g10
04:16:35  59  ,aud_g11
04:16:35  60  ,aud_g12
04:16:35  61  ,aud_g13
04:16:35  62  ,aud_g14
04:16:35  63  ,aud_g15
04:16:35  64  ,aud_g16
04:16:35  65  ,aud_g17
04:16:35  66  ,aud_g18
04:16:35  67  ,aud_g19
04:16:35  68  ,aud_g20
04:16:35  69  ,aud_g21
04:16:35  70  ,aud_g22
04:16:35  71  ,aud_g23
04:16:35  72  ,aud_g24
04:16:35  73  ,aud_g25
04:16:35  74  ,aud_g26
04:16:35  75  ,aud_g27
04:16:35  76  ,aud_g28
04:16:35  77  ,aud_g29
04:16:35  78  ,aud_g30
04:16:35  79  ,aud_g31
04:16:35  80  ,aud_g32
04:16:35  81  ,aud_g33
04:16:35  82  ,aud_g34
04:16:35  83  ,aud_g35
04:16:35  84  ,aud_g36
04:16:35  85  ,aud_g37
04:16:35  86  ,aud_g38
04:16:35  87  ,aud_g39
04:16:35  88  ,aud_g40
04:16:35  89  ,aud_g41
04:16:35  90  ,gbp_g00
04:16:35  91  ,gbp_g01
04:16:35  92  ,gbp_g02
04:16:35  93  ,gbp_g03
04:16:35  94  ,gbp_g04
04:16:35  95  ,gbp_g05
04:16:35  96  ,gbp_g06
04:16:35  97  ,gbp_g07
04:16:35  98  ,gbp_g08
04:16:35  99  ,gbp_g09
04:16:35 100  ,gbp_g10
04:16:35 101  ,gbp_g11
04:16:35 102  ,gbp_g12
04:16:35 103  ,gbp_g13
04:16:35 104  ,gbp_g14
04:16:35 105  ,gbp_g15
04:16:35 106  ,gbp_g16
04:16:35 107  ,gbp_g17
04:16:35 108  ,gbp_g18
04:16:35 109  ,gbp_g19
04:16:35 110  ,gbp_g20
04:16:35 111  ,gbp_g21
04:16:35 112  ,gbp_g22
04:16:35 113  ,gbp_g23
04:16:35 114  ,gbp_g24
04:16:35 115  ,gbp_g25
04:16:35 116  ,gbp_g26
04:16:35 117  ,gbp_g27
04:16:35 118  ,gbp_g28
04:16:35 119  ,gbp_g29
04:16:35 120  ,gbp_g30
04:16:35 121  ,gbp_g31
04:16:35 122  ,gbp_g32
04:16:35 123  ,gbp_g33
04:16:35 124  ,gbp_g34
04:16:35 125  ,gbp_g35
04:16:35 126  ,gbp_g36
04:16:35 127  ,gbp_g37
04:16:35 128  ,gbp_g38
04:16:35 129  ,gbp_g39
04:16:35 130  ,gbp_g40
04:16:35 131  ,gbp_g41
04:16:35 132  ,jpy_g00
04:16:35 133  ,jpy_g01
04:16:35 134  ,jpy_g02
04:16:35 135  ,jpy_g03
04:16:35 136  ,jpy_g04
04:16:35 137  ,jpy_g05
04:16:35 138  ,jpy_g06
04:16:35 139  ,jpy_g07
04:16:35 140  ,jpy_g08
04:16:35 141  ,jpy_g09
04:16:35 142  ,jpy_g10
04:16:35 143  ,jpy_g11
04:16:35 144  ,jpy_g12
04:16:35 145  ,jpy_g13
04:16:35 146  ,jpy_g14
04:16:35 147  ,jpy_g15
04:16:35 148  ,jpy_g16
04:16:35 149  ,jpy_g17
04:16:35 150  ,jpy_g18
04:16:35 151  ,jpy_g19
04:16:35 152  ,jpy_g20
04:16:35 153  ,jpy_g21
04:16:35 154  ,jpy_g22
04:16:35 155  ,jpy_g23
04:16:35 156  ,jpy_g24
04:16:35 157  ,jpy_g25
04:16:35 158  ,jpy_g26
04:16:35 159  ,jpy_g27
04:16:35 160  ,jpy_g28
04:16:35 161  ,jpy_g29
04:16:35 162  ,jpy_g30
04:16:35 163  ,jpy_g31
04:16:35 164  ,jpy_g32
04:16:35 165  ,jpy_g33
04:16:35 166  ,jpy_g34
04:16:35 167  ,jpy_g35
04:16:35 168  ,jpy_g36
04:16:35 169  ,jpy_g37
04:16:35 170  ,jpy_g38
04:16:35 171  ,jpy_g39
04:16:35 172  ,jpy_g40
04:16:35 173  ,jpy_g41
04:16:35 174  ,cad_g00
04:16:35 175  ,cad_g01
04:16:35 176  ,cad_g02
04:16:35 177  ,cad_g03
04:16:35 178  ,cad_g04
04:16:35 179  ,cad_g05
04:16:35 180  ,cad_g06
04:16:35 181  ,cad_g07
04:16:35 182  ,cad_g08
04:16:35 183  ,cad_g09
04:16:35 184  ,cad_g10
04:16:35 185  ,cad_g11
04:16:35 186  ,cad_g12
04:16:35 187  ,cad_g13
04:16:35 188  ,cad_g14
04:16:35 189  ,cad_g15
04:16:35 190  ,cad_g16
04:16:35 191  ,cad_g17
04:16:35 192  ,cad_g18
04:16:35 193  ,cad_g19
04:16:35 194  ,cad_g20
04:16:35 195  ,cad_g21
04:16:35 196  ,cad_g22
04:16:35 197  ,cad_g23
04:16:35 198  ,cad_g24
04:16:35 199  ,cad_g25
04:16:35 200  ,cad_g26
04:16:35 201  ,cad_g27
04:16:35 202  ,cad_g28
04:16:35 203  ,cad_g29
04:16:35 204  ,cad_g30
04:16:35 205  ,cad_g31
04:16:35 206  ,cad_g32
04:16:35 207  ,cad_g33
04:16:35 208  ,cad_g34
04:16:35 209  ,cad_g35
04:16:35 210  ,cad_g36
04:16:35 211  ,cad_g37
04:16:35 212  ,cad_g38
04:16:35 213  ,cad_g39
04:16:35 214  ,cad_g40
04:16:35 215  ,cad_g41
04:16:35 216  ,chf_g00
04:16:35 217  ,chf_g01
04:16:35 218  ,chf_g02
04:16:35 219  ,chf_g03
04:16:35 220  ,chf_g04
04:16:35 221  ,chf_g05
04:16:35 222  ,chf_g06
04:16:35 223  ,chf_g07
04:16:35 224  ,chf_g08
04:16:35 225  ,chf_g09
04:16:35 226  ,chf_g10
04:16:35 227  ,chf_g11
04:16:35 228  ,chf_g12
04:16:35 229  ,chf_g13
04:16:35 230  ,chf_g14
04:16:35 231  ,chf_g15
04:16:35 232  ,chf_g16
04:16:35 233  ,chf_g17
04:16:35 234  ,chf_g18
04:16:35 235  ,chf_g19
04:16:35 236  ,chf_g20
04:16:35 237  ,chf_g21
04:16:35 238  ,chf_g22
04:16:35 239  ,chf_g23
04:16:35 240  ,chf_g24
04:16:35 241  ,chf_g25
04:16:35 242  ,chf_g26
04:16:35 243  ,chf_g27
04:16:35 244  ,chf_g28
04:16:35 245  ,chf_g29
04:16:35 246  ,chf_g30
04:16:35 247  ,chf_g31
04:16:35 248  ,chf_g32
04:16:35 249  ,chf_g33
04:16:35 250  ,chf_g34
04:16:35 251  ,chf_g35
04:16:35 252  ,chf_g36
04:16:35 253  ,chf_g37
04:16:35 254  ,chf_g38
04:16:35 255  ,chf_g39
04:16:35 256  ,chf_g40
04:16:35 257  ,chf_g41
04:16:35 258  FROM aud_ms6 m
04:16:35 259  WHERE gatt IN('nup','up')
04:16:35 260  AND 1+m.ydate < '&1'||' '||'&2'
04:16:35 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'04:00:00'

View created.

Elapsed: 00:00:00.13
04:16:35 SQL> 
04:16:35 SQL> -- rpt
04:16:35 SQL> 
04:16:35 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
04:16:35   2  
04:16:35 SQL> SELECT MAX(prdate) FROM bme
04:16:35   2  
04:16:35 SQL> -- Now build model from bme and score sme
04:16:35 SQL> @score1.sql
04:16:35 SQL> -- score1.sql
04:16:35 SQL> 
04:16:35 SQL> -- Does the 1st SVM score
04:16:35 SQL> 
04:16:35 SQL> -- Fill up svmc_apply_prep
04:16:35 SQL> @score.sql
04:16:35 SQL> --
04:16:35 SQL> -- score.sql
04:16:35 SQL> --
04:16:35 SQL> 
04:16:35 SQL> -- usage: score.sql
04:16:35 SQL> 
04:16:35 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
04:16:35 SQL> 
04:16:35 SQL> DEFINE target	= 'gatt'
04:16:35 SQL> DEFINE model_name = 'forex14'
04:16:35 SQL> DEFINE bldtable	= 'bme'
04:16:35 SQL> DEFINE scoretable = 'sme'
04:16:35 SQL> DEFINE case_id	= 'prdate'
04:16:35 SQL> 
04:16:35 SQL> -- Define a variable to help me exclude some columns from some data mining calls
04:16:35 SQL> DEFINE exclude1 = "'&target','&case_id'"
04:16:35 SQL> 
04:16:35 SQL> -- Builds an SVM model using pl/sql.
04:16:35 SQL> 
04:16:35 SQL> -----------------------------------------------------------------------
04:16:35 SQL> --			    BUILD THE MODEL
04:16:35 SQL> -----------------------------------------------------------------------
04:16:35 SQL> 
04:16:35 SQL> -- Cleanup old build data preparation objects for repeat runs
04:16:35 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
04:16:35 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
04:16:35 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
04:16:35 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
04:16:35 SQL> 
04:16:35 SQL> 
04:16:35 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
04:16:35 SQL> --
04:16:35 SQL> -- DROP	TABLE svmc_settings ;
04:16:35 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
04:16:35 SQL> -- DELETE svmc_settings;
04:16:35 SQL> 
04:16:35 SQL> -- The default classification algorithm is Naive Bayes. So override
04:16:35 SQL> -- this choice to SVM using a settings table.
04:16:35 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
04:16:35 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
04:16:35 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
04:16:35 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
04:16:35 SQL> -- models.
04:16:35 SQL> --
04:16:35 SQL> 
04:16:35 SQL> -- Do this once and then comment it out.
04:16:35 SQL> -- That makes script go faster.
04:16:35 SQL> -- BEGIN
04:16:35 SQL> -- -- Populate settings table
04:16:35 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:16:35 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
04:16:35 SQL> --
04:16:35 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:16:35 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
04:16:35 SQL> --
04:16:35 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:16:35 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
04:16:35 SQL> --   COMMIT;
04:16:35 SQL> -- END;
04:16:35 SQL> -- /
04:16:35 SQL> 
04:16:35 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
04:16:35 SQL> 
04:16:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
04:16:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:16:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:16:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
04:16:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:16:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:16:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
04:16:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:16:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:16:35 SQL> 
04:16:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
04:16:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:16:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:16:35 SQL> 
04:16:35 SQL> --------------------------------
04:16:35 SQL> -- PREPARE BUILD (TRAINING) DATA
04:16:35 SQL> --
04:16:35 SQL> 
04:16:35 SQL> -- 1. Missing Value treatment for all Predictors and
04:16:35 SQL> -- 2. Outlier Treatment and
04:16:35 SQL> -- 3. Normalization are performed below.
04:16:35 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
04:16:35 SQL> --    normalized here.
04:16:35 SQL> 
04:16:35 SQL> BEGIN
04:16:35   2  	-- Perform missing value treatment for all predictors
04:16:35   3  	-- create miss tables
04:16:35   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
04:16:35   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
04:16:35   6  
04:16:35   7  	-- populate miss tables
04:16:35   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
04:16:35   9  	  miss_table_name => 'svmc_miss_num',
04:16:35  10  	  data_table_name => '&bldtable',
04:16:35  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:16:35  12  
04:16:35  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
04:16:35  14  	  miss_table_name => 'svmc_miss_cat',
04:16:35  15  	  data_table_name => '&bldtable',
04:16:35  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:16:35  17  
04:16:35  18  	-- xform input data to replace missing values
04:16:35  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:16:35  20  	  miss_table_name => 'svmc_miss_num',
04:16:35  21  	  data_table_name => '&bldtable',
04:16:35  22  	  xform_view_name => 'xformed_build_miss_num');
04:16:35  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:16:35  24  	  miss_table_name => 'svmc_miss_cat',
04:16:35  25  	  data_table_name => '&bldtable',
04:16:35  26  	  xform_view_name => 'xformed_build_miss_cat');
04:16:35  27  
04:16:35  28  	-- Perform outlier treatment.
04:16:35  29  	-- create clip table
04:16:35  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
04:16:35  31  
04:16:35  32  	-- populate clip table
04:16:35  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
04:16:35  34  	  clip_table_name => 'svmc_clip',
04:16:35  35  	  data_table_name => '&bldtable',
04:16:35  36  	  tail_frac	  => 0.025,
04:16:35  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:16:35  38  
04:16:35  39  	-- xform input data to winsorized data
04:16:35  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
04:16:35  41  	  clip_table_name => 'svmc_clip',
04:16:35  42  	  data_table_name => '&bldtable',
04:16:35  43  	  xform_view_name => 'svmc_winsor');
04:16:35  44  
04:16:35  45  	-- create normalization table
04:16:35  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
04:16:35  47  
04:16:35  48  	-- populate normalization table based on winsorized data
04:16:35  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
04:16:35  50  	  norm_table_name => 'svmc_norm',
04:16:35  51  	  data_table_name => 'svmc_winsor',
04:16:35  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:16:35  53  
04:16:35  54  	-- normalize the original data
04:16:35  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:16:35  56  	  norm_table_name => 'svmc_norm',
04:16:35  57  	  data_table_name => '&bldtable',
04:16:35  58  	  xform_view_name => 'svmc_build_prep');
04:16:35  59  END;
04:16:35  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.42
04:16:53 SQL> 
04:16:53 SQL> ---------------------
04:16:53 SQL> -- CREATE A NEW MODEL
04:16:53 SQL> --
04:16:53 SQL> -- Cleanup old model with the same name for repeat runs
04:16:53 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
04:16:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:16:53   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.89
04:16:54 SQL> 
04:16:54 SQL> -- Build a new SVM Model
04:16:54 SQL> BEGIN
04:16:54   2  	DBMS_DATA_MINING.CREATE_MODEL(
04:16:54   3  	  model_name	      => '&model_name',
04:16:54   4  	  mining_function     => dbms_data_mining.classification,
04:16:54   5  	  data_table_name     => 'svmc_build_prep',
04:16:54   6  	  case_id_column_name => '&case_id',
04:16:54   7  	  target_column_name  => '&target',
04:16:54   8  	  settings_table_name => 'svmc_settings');
04:16:54   9  END;
04:16:54  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.03
04:17:21 SQL> 
04:17:21 SQL> -----------------------------------------------------------------------
04:17:21 SQL> --			       APPLY/score THE MODEL
04:17:21 SQL> -----------------------------------------------------------------------
04:17:21 SQL> 
04:17:21 SQL> -- Cleanup old scoring data preparation objects for repeat runs
04:17:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
04:17:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:17:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:17:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
04:17:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:17:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:17:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
04:17:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:17:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:17:22 SQL> -----------------------
04:17:22 SQL> -- PREPARE SCORING DATA
04:17:22 SQL> --
04:17:22 SQL> -- If the data for model creation has been prepared, then the data
04:17:22 SQL> -- to be scored using the model must be prepared in the same manner
04:17:22 SQL> -- in order to obtain meaningful results.
04:17:22 SQL> --
04:17:22 SQL> -- 1. Missing Value treatment for all Predictors and
04:17:22 SQL> -- 2. Normalization
04:17:22 SQL> -- No outlier treatment will be performed during test and apply. The
04:17:22 SQL> -- normalization step is sufficient, since the normalization parameters
04:17:22 SQL> -- already capture the effects of outlier treatment done with build data.
04:17:22 SQL> --
04:17:22 SQL> BEGIN
04:17:22   2  	-- Xform Test data to replace missing values
04:17:22   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:17:22   4  	  miss_table_name => 'svmc_miss_num',
04:17:22   5  	  data_table_name => '&scoretable',
04:17:22   6  	  xform_view_name => 'xformed_apply_miss_num');
04:17:22   7  
04:17:22   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:17:22   9  	  miss_table_name => 'svmc_miss_cat',
04:17:22  10  	  data_table_name => '&scoretable',
04:17:22  11  	  xform_view_name => 'xformed_apply_miss_cat');
04:17:22  12  
04:17:22  13  	-- Normalize the data to be scored
04:17:22  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:17:22  15  	  norm_table_name => 'svmc_norm',
04:17:22  16  	  data_table_name => '&scoretable',
04:17:22  17  	  xform_view_name => 'svmc_apply_prep');
04:17:22  18  END;
04:17:22  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.32
04:17:23 SQL> 
04:17:23 SQL> -- Use same model_name used in score.sql
04:17:23 SQL> DEFINE model_name = 'forex14'
04:17:23 SQL> 
04:17:23 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
04:17:23 SQL> 
04:17:23 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
04:17:23 SQL> 
04:17:23 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
04:17:23   2  SELECT
04:17:23   3  prdate
04:17:23   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
04:17:23   5  ,sysdate
04:17:23   6  ,SUBSTR(prdate,1,3)pair
04:17:23   7  ,SUBSTR(prdate,4,19)ydate
04:17:23   8  FROM svmc_apply_prep
04:17:23   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
04:17:23 SQL> @aud_score1day.sql  2010-12-31 04:05:00
04:17:23 SQL> --
04:17:23 SQL> -- aud_score1day.sql
04:17:23 SQL> --
04:17:23 SQL> 
04:17:23 SQL> CREATE OR REPLACE VIEW sme AS
04:17:23   2  SELECT
04:17:23   3  'aud'||m.ydate prdate
04:17:23   4  ,NULL gatt
04:17:23   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:17:23   6  ,eur_g00
04:17:23   7  ,eur_g01
04:17:23   8  ,eur_g02
04:17:23   9  ,eur_g03
04:17:23  10  ,eur_g04
04:17:23  11  ,eur_g05
04:17:23  12  ,eur_g06
04:17:23  13  ,eur_g07
04:17:23  14  ,eur_g08
04:17:23  15  ,eur_g09
04:17:23  16  ,eur_g10
04:17:23  17  ,eur_g11
04:17:23  18  ,eur_g12
04:17:23  19  ,eur_g13
04:17:23  20  ,eur_g14
04:17:23  21  ,eur_g15
04:17:23  22  ,eur_g16
04:17:23  23  ,eur_g17
04:17:23  24  ,eur_g18
04:17:23  25  ,eur_g19
04:17:23  26  ,eur_g20
04:17:23  27  ,eur_g21
04:17:23  28  ,eur_g22
04:17:23  29  ,eur_g23
04:17:23  30  ,eur_g24
04:17:23  31  ,eur_g25
04:17:23  32  ,eur_g26
04:17:23  33  ,eur_g27
04:17:23  34  ,eur_g28
04:17:23  35  ,eur_g29
04:17:23  36  ,eur_g30
04:17:23  37  ,eur_g31
04:17:23  38  ,eur_g32
04:17:23  39  ,eur_g33
04:17:23  40  ,eur_g34
04:17:23  41  ,eur_g35
04:17:23  42  ,eur_g36
04:17:23  43  ,eur_g37
04:17:23  44  ,eur_g38
04:17:23  45  ,eur_g39
04:17:23  46  ,eur_g40
04:17:23  47  ,eur_g41
04:17:23  48  ,aud_g00
04:17:23  49  ,aud_g01
04:17:23  50  ,aud_g02
04:17:23  51  ,aud_g03
04:17:23  52  ,aud_g04
04:17:23  53  ,aud_g05
04:17:23  54  ,aud_g06
04:17:23  55  ,aud_g07
04:17:23  56  ,aud_g08
04:17:23  57  ,aud_g09
04:17:23  58  ,aud_g10
04:17:23  59  ,aud_g11
04:17:23  60  ,aud_g12
04:17:23  61  ,aud_g13
04:17:23  62  ,aud_g14
04:17:23  63  ,aud_g15
04:17:23  64  ,aud_g16
04:17:23  65  ,aud_g17
04:17:23  66  ,aud_g18
04:17:23  67  ,aud_g19
04:17:23  68  ,aud_g20
04:17:23  69  ,aud_g21
04:17:23  70  ,aud_g22
04:17:23  71  ,aud_g23
04:17:23  72  ,aud_g24
04:17:23  73  ,aud_g25
04:17:23  74  ,aud_g26
04:17:23  75  ,aud_g27
04:17:23  76  ,aud_g28
04:17:23  77  ,aud_g29
04:17:23  78  ,aud_g30
04:17:23  79  ,aud_g31
04:17:23  80  ,aud_g32
04:17:23  81  ,aud_g33
04:17:23  82  ,aud_g34
04:17:23  83  ,aud_g35
04:17:23  84  ,aud_g36
04:17:23  85  ,aud_g37
04:17:23  86  ,aud_g38
04:17:23  87  ,aud_g39
04:17:23  88  ,aud_g40
04:17:23  89  ,aud_g41
04:17:23  90  ,gbp_g00
04:17:23  91  ,gbp_g01
04:17:23  92  ,gbp_g02
04:17:23  93  ,gbp_g03
04:17:23  94  ,gbp_g04
04:17:23  95  ,gbp_g05
04:17:23  96  ,gbp_g06
04:17:23  97  ,gbp_g07
04:17:23  98  ,gbp_g08
04:17:23  99  ,gbp_g09
04:17:23 100  ,gbp_g10
04:17:23 101  ,gbp_g11
04:17:23 102  ,gbp_g12
04:17:23 103  ,gbp_g13
04:17:23 104  ,gbp_g14
04:17:23 105  ,gbp_g15
04:17:23 106  ,gbp_g16
04:17:23 107  ,gbp_g17
04:17:23 108  ,gbp_g18
04:17:23 109  ,gbp_g19
04:17:23 110  ,gbp_g20
04:17:23 111  ,gbp_g21
04:17:23 112  ,gbp_g22
04:17:23 113  ,gbp_g23
04:17:23 114  ,gbp_g24
04:17:23 115  ,gbp_g25
04:17:23 116  ,gbp_g26
04:17:23 117  ,gbp_g27
04:17:23 118  ,gbp_g28
04:17:23 119  ,gbp_g29
04:17:23 120  ,gbp_g30
04:17:23 121  ,gbp_g31
04:17:23 122  ,gbp_g32
04:17:23 123  ,gbp_g33
04:17:23 124  ,gbp_g34
04:17:23 125  ,gbp_g35
04:17:23 126  ,gbp_g36
04:17:23 127  ,gbp_g37
04:17:23 128  ,gbp_g38
04:17:23 129  ,gbp_g39
04:17:23 130  ,gbp_g40
04:17:23 131  ,gbp_g41
04:17:23 132  ,jpy_g00
04:17:23 133  ,jpy_g01
04:17:23 134  ,jpy_g02
04:17:23 135  ,jpy_g03
04:17:23 136  ,jpy_g04
04:17:23 137  ,jpy_g05
04:17:23 138  ,jpy_g06
04:17:23 139  ,jpy_g07
04:17:23 140  ,jpy_g08
04:17:23 141  ,jpy_g09
04:17:23 142  ,jpy_g10
04:17:23 143  ,jpy_g11
04:17:23 144  ,jpy_g12
04:17:23 145  ,jpy_g13
04:17:23 146  ,jpy_g14
04:17:23 147  ,jpy_g15
04:17:23 148  ,jpy_g16
04:17:23 149  ,jpy_g17
04:17:23 150  ,jpy_g18
04:17:23 151  ,jpy_g19
04:17:23 152  ,jpy_g20
04:17:23 153  ,jpy_g21
04:17:23 154  ,jpy_g22
04:17:23 155  ,jpy_g23
04:17:23 156  ,jpy_g24
04:17:23 157  ,jpy_g25
04:17:23 158  ,jpy_g26
04:17:23 159  ,jpy_g27
04:17:23 160  ,jpy_g28
04:17:23 161  ,jpy_g29
04:17:23 162  ,jpy_g30
04:17:23 163  ,jpy_g31
04:17:23 164  ,jpy_g32
04:17:23 165  ,jpy_g33
04:17:23 166  ,jpy_g34
04:17:23 167  ,jpy_g35
04:17:23 168  ,jpy_g36
04:17:23 169  ,jpy_g37
04:17:23 170  ,jpy_g38
04:17:23 171  ,jpy_g39
04:17:23 172  ,jpy_g40
04:17:23 173  ,jpy_g41
04:17:23 174  ,cad_g00
04:17:23 175  ,cad_g01
04:17:23 176  ,cad_g02
04:17:23 177  ,cad_g03
04:17:23 178  ,cad_g04
04:17:23 179  ,cad_g05
04:17:23 180  ,cad_g06
04:17:23 181  ,cad_g07
04:17:23 182  ,cad_g08
04:17:23 183  ,cad_g09
04:17:23 184  ,cad_g10
04:17:23 185  ,cad_g11
04:17:23 186  ,cad_g12
04:17:23 187  ,cad_g13
04:17:23 188  ,cad_g14
04:17:23 189  ,cad_g15
04:17:23 190  ,cad_g16
04:17:23 191  ,cad_g17
04:17:23 192  ,cad_g18
04:17:23 193  ,cad_g19
04:17:23 194  ,cad_g20
04:17:23 195  ,cad_g21
04:17:23 196  ,cad_g22
04:17:23 197  ,cad_g23
04:17:23 198  ,cad_g24
04:17:23 199  ,cad_g25
04:17:23 200  ,cad_g26
04:17:23 201  ,cad_g27
04:17:23 202  ,cad_g28
04:17:23 203  ,cad_g29
04:17:23 204  ,cad_g30
04:17:23 205  ,cad_g31
04:17:23 206  ,cad_g32
04:17:23 207  ,cad_g33
04:17:23 208  ,cad_g34
04:17:23 209  ,cad_g35
04:17:23 210  ,cad_g36
04:17:23 211  ,cad_g37
04:17:23 212  ,cad_g38
04:17:23 213  ,cad_g39
04:17:23 214  ,cad_g40
04:17:23 215  ,cad_g41
04:17:23 216  ,chf_g00
04:17:23 217  ,chf_g01
04:17:23 218  ,chf_g02
04:17:23 219  ,chf_g03
04:17:23 220  ,chf_g04
04:17:23 221  ,chf_g05
04:17:23 222  ,chf_g06
04:17:23 223  ,chf_g07
04:17:23 224  ,chf_g08
04:17:23 225  ,chf_g09
04:17:23 226  ,chf_g10
04:17:23 227  ,chf_g11
04:17:23 228  ,chf_g12
04:17:23 229  ,chf_g13
04:17:23 230  ,chf_g14
04:17:23 231  ,chf_g15
04:17:23 232  ,chf_g16
04:17:23 233  ,chf_g17
04:17:23 234  ,chf_g18
04:17:23 235  ,chf_g19
04:17:23 236  ,chf_g20
04:17:23 237  ,chf_g21
04:17:23 238  ,chf_g22
04:17:23 239  ,chf_g23
04:17:23 240  ,chf_g24
04:17:23 241  ,chf_g25
04:17:23 242  ,chf_g26
04:17:23 243  ,chf_g27
04:17:23 244  ,chf_g28
04:17:23 245  ,chf_g29
04:17:23 246  ,chf_g30
04:17:23 247  ,chf_g31
04:17:23 248  ,chf_g32
04:17:23 249  ,chf_g33
04:17:23 250  ,chf_g34
04:17:23 251  ,chf_g35
04:17:23 252  ,chf_g36
04:17:23 253  ,chf_g37
04:17:23 254  ,chf_g38
04:17:23 255  ,chf_g39
04:17:23 256  ,chf_g40
04:17:23 257  ,chf_g41
04:17:23 258  FROM aud_ms6 m
04:17:23 259  WHERE m.ydate = '&1'||' '||'&2'
04:17:23 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'04:05:00'

View created.

Elapsed: 00:00:00.14
04:17:23 SQL> 
04:17:23 SQL> -- rpt
04:17:23 SQL> -- We should see just 1 row:
04:17:23 SQL> 
04:17:23 SQL> SELECT COUNT(prdate) FROM sme
04:17:23   2  
04:17:23 SQL> -- Build the model:
04:17:23 SQL> CREATE OR REPLACE VIEW bme AS
04:17:23   2  SELECT
04:17:23   3  'aud'||m.ydate prdate
04:17:23   4  ,gatt
04:17:23   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:17:23   6  ,eur_g00
04:17:23   7  ,eur_g01
04:17:23   8  ,eur_g02
04:17:23   9  ,eur_g03
04:17:23  10  ,eur_g04
04:17:23  11  ,eur_g05
04:17:23  12  ,eur_g06
04:17:23  13  ,eur_g07
04:17:23  14  ,eur_g08
04:17:23  15  ,eur_g09
04:17:23  16  ,eur_g10
04:17:23  17  ,eur_g11
04:17:23  18  ,eur_g12
04:17:23  19  ,eur_g13
04:17:23  20  ,eur_g14
04:17:23  21  ,eur_g15
04:17:23  22  ,eur_g16
04:17:23  23  ,eur_g17
04:17:23  24  ,eur_g18
04:17:23  25  ,eur_g19
04:17:23  26  ,eur_g20
04:17:23  27  ,eur_g21
04:17:23  28  ,eur_g22
04:17:23  29  ,eur_g23
04:17:23  30  ,eur_g24
04:17:23  31  ,eur_g25
04:17:23  32  ,eur_g26
04:17:23  33  ,eur_g27
04:17:23  34  ,eur_g28
04:17:23  35  ,eur_g29
04:17:23  36  ,eur_g30
04:17:23  37  ,eur_g31
04:17:23  38  ,eur_g32
04:17:23  39  ,eur_g33
04:17:23  40  ,eur_g34
04:17:23  41  ,eur_g35
04:17:23  42  ,eur_g36
04:17:23  43  ,eur_g37
04:17:23  44  ,eur_g38
04:17:23  45  ,eur_g39
04:17:23  46  ,eur_g40
04:17:23  47  ,eur_g41
04:17:23  48  ,aud_g00
04:17:23  49  ,aud_g01
04:17:23  50  ,aud_g02
04:17:23  51  ,aud_g03
04:17:23  52  ,aud_g04
04:17:23  53  ,aud_g05
04:17:23  54  ,aud_g06
04:17:23  55  ,aud_g07
04:17:23  56  ,aud_g08
04:17:23  57  ,aud_g09
04:17:23  58  ,aud_g10
04:17:23  59  ,aud_g11
04:17:23  60  ,aud_g12
04:17:23  61  ,aud_g13
04:17:23  62  ,aud_g14
04:17:23  63  ,aud_g15
04:17:23  64  ,aud_g16
04:17:23  65  ,aud_g17
04:17:23  66  ,aud_g18
04:17:23  67  ,aud_g19
04:17:23  68  ,aud_g20
04:17:23  69  ,aud_g21
04:17:23  70  ,aud_g22
04:17:23  71  ,aud_g23
04:17:23  72  ,aud_g24
04:17:23  73  ,aud_g25
04:17:23  74  ,aud_g26
04:17:23  75  ,aud_g27
04:17:23  76  ,aud_g28
04:17:23  77  ,aud_g29
04:17:23  78  ,aud_g30
04:17:23  79  ,aud_g31
04:17:23  80  ,aud_g32
04:17:23  81  ,aud_g33
04:17:23  82  ,aud_g34
04:17:23  83  ,aud_g35
04:17:23  84  ,aud_g36
04:17:23  85  ,aud_g37
04:17:23  86  ,aud_g38
04:17:23  87  ,aud_g39
04:17:23  88  ,aud_g40
04:17:23  89  ,aud_g41
04:17:23  90  ,gbp_g00
04:17:23  91  ,gbp_g01
04:17:23  92  ,gbp_g02
04:17:23  93  ,gbp_g03
04:17:23  94  ,gbp_g04
04:17:23  95  ,gbp_g05
04:17:23  96  ,gbp_g06
04:17:23  97  ,gbp_g07
04:17:23  98  ,gbp_g08
04:17:23  99  ,gbp_g09
04:17:23 100  ,gbp_g10
04:17:23 101  ,gbp_g11
04:17:23 102  ,gbp_g12
04:17:23 103  ,gbp_g13
04:17:23 104  ,gbp_g14
04:17:23 105  ,gbp_g15
04:17:23 106  ,gbp_g16
04:17:23 107  ,gbp_g17
04:17:23 108  ,gbp_g18
04:17:23 109  ,gbp_g19
04:17:23 110  ,gbp_g20
04:17:23 111  ,gbp_g21
04:17:23 112  ,gbp_g22
04:17:23 113  ,gbp_g23
04:17:23 114  ,gbp_g24
04:17:23 115  ,gbp_g25
04:17:23 116  ,gbp_g26
04:17:23 117  ,gbp_g27
04:17:23 118  ,gbp_g28
04:17:23 119  ,gbp_g29
04:17:23 120  ,gbp_g30
04:17:23 121  ,gbp_g31
04:17:23 122  ,gbp_g32
04:17:23 123  ,gbp_g33
04:17:23 124  ,gbp_g34
04:17:23 125  ,gbp_g35
04:17:23 126  ,gbp_g36
04:17:23 127  ,gbp_g37
04:17:23 128  ,gbp_g38
04:17:23 129  ,gbp_g39
04:17:23 130  ,gbp_g40
04:17:23 131  ,gbp_g41
04:17:23 132  ,jpy_g00
04:17:23 133  ,jpy_g01
04:17:23 134  ,jpy_g02
04:17:23 135  ,jpy_g03
04:17:23 136  ,jpy_g04
04:17:23 137  ,jpy_g05
04:17:23 138  ,jpy_g06
04:17:23 139  ,jpy_g07
04:17:23 140  ,jpy_g08
04:17:23 141  ,jpy_g09
04:17:23 142  ,jpy_g10
04:17:23 143  ,jpy_g11
04:17:23 144  ,jpy_g12
04:17:23 145  ,jpy_g13
04:17:23 146  ,jpy_g14
04:17:23 147  ,jpy_g15
04:17:23 148  ,jpy_g16
04:17:23 149  ,jpy_g17
04:17:23 150  ,jpy_g18
04:17:23 151  ,jpy_g19
04:17:23 152  ,jpy_g20
04:17:23 153  ,jpy_g21
04:17:23 154  ,jpy_g22
04:17:23 155  ,jpy_g23
04:17:23 156  ,jpy_g24
04:17:23 157  ,jpy_g25
04:17:23 158  ,jpy_g26
04:17:23 159  ,jpy_g27
04:17:23 160  ,jpy_g28
04:17:23 161  ,jpy_g29
04:17:23 162  ,jpy_g30
04:17:23 163  ,jpy_g31
04:17:23 164  ,jpy_g32
04:17:23 165  ,jpy_g33
04:17:23 166  ,jpy_g34
04:17:23 167  ,jpy_g35
04:17:23 168  ,jpy_g36
04:17:23 169  ,jpy_g37
04:17:23 170  ,jpy_g38
04:17:23 171  ,jpy_g39
04:17:23 172  ,jpy_g40
04:17:23 173  ,jpy_g41
04:17:23 174  ,cad_g00
04:17:23 175  ,cad_g01
04:17:23 176  ,cad_g02
04:17:23 177  ,cad_g03
04:17:23 178  ,cad_g04
04:17:23 179  ,cad_g05
04:17:23 180  ,cad_g06
04:17:23 181  ,cad_g07
04:17:23 182  ,cad_g08
04:17:23 183  ,cad_g09
04:17:23 184  ,cad_g10
04:17:23 185  ,cad_g11
04:17:23 186  ,cad_g12
04:17:23 187  ,cad_g13
04:17:23 188  ,cad_g14
04:17:23 189  ,cad_g15
04:17:23 190  ,cad_g16
04:17:23 191  ,cad_g17
04:17:23 192  ,cad_g18
04:17:23 193  ,cad_g19
04:17:23 194  ,cad_g20
04:17:23 195  ,cad_g21
04:17:23 196  ,cad_g22
04:17:23 197  ,cad_g23
04:17:23 198  ,cad_g24
04:17:23 199  ,cad_g25
04:17:23 200  ,cad_g26
04:17:23 201  ,cad_g27
04:17:23 202  ,cad_g28
04:17:23 203  ,cad_g29
04:17:23 204  ,cad_g30
04:17:23 205  ,cad_g31
04:17:23 206  ,cad_g32
04:17:23 207  ,cad_g33
04:17:23 208  ,cad_g34
04:17:23 209  ,cad_g35
04:17:23 210  ,cad_g36
04:17:23 211  ,cad_g37
04:17:23 212  ,cad_g38
04:17:23 213  ,cad_g39
04:17:23 214  ,cad_g40
04:17:23 215  ,cad_g41
04:17:23 216  ,chf_g00
04:17:23 217  ,chf_g01
04:17:23 218  ,chf_g02
04:17:23 219  ,chf_g03
04:17:23 220  ,chf_g04
04:17:23 221  ,chf_g05
04:17:23 222  ,chf_g06
04:17:23 223  ,chf_g07
04:17:23 224  ,chf_g08
04:17:23 225  ,chf_g09
04:17:23 226  ,chf_g10
04:17:23 227  ,chf_g11
04:17:23 228  ,chf_g12
04:17:23 229  ,chf_g13
04:17:23 230  ,chf_g14
04:17:23 231  ,chf_g15
04:17:23 232  ,chf_g16
04:17:23 233  ,chf_g17
04:17:23 234  ,chf_g18
04:17:23 235  ,chf_g19
04:17:23 236  ,chf_g20
04:17:23 237  ,chf_g21
04:17:23 238  ,chf_g22
04:17:23 239  ,chf_g23
04:17:23 240  ,chf_g24
04:17:23 241  ,chf_g25
04:17:23 242  ,chf_g26
04:17:23 243  ,chf_g27
04:17:23 244  ,chf_g28
04:17:23 245  ,chf_g29
04:17:23 246  ,chf_g30
04:17:23 247  ,chf_g31
04:17:23 248  ,chf_g32
04:17:23 249  ,chf_g33
04:17:23 250  ,chf_g34
04:17:23 251  ,chf_g35
04:17:23 252  ,chf_g36
04:17:23 253  ,chf_g37
04:17:23 254  ,chf_g38
04:17:23 255  ,chf_g39
04:17:23 256  ,chf_g40
04:17:23 257  ,chf_g41
04:17:23 258  FROM aud_ms6 m
04:17:23 259  WHERE gatt IN('nup','up')
04:17:23 260  AND 1+m.ydate < '&1'||' '||'&2'
04:17:23 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'04:05:00'

View created.

Elapsed: 00:00:00.12
04:17:23 SQL> 
04:17:23 SQL> -- rpt
04:17:23 SQL> 
04:17:23 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
04:17:23   2  
04:17:23 SQL> SELECT MAX(prdate) FROM bme
04:17:23   2  
04:17:23 SQL> -- Now build model from bme and score sme
04:17:23 SQL> @score1.sql
04:17:23 SQL> -- score1.sql
04:17:23 SQL> 
04:17:23 SQL> -- Does the 1st SVM score
04:17:23 SQL> 
04:17:23 SQL> -- Fill up svmc_apply_prep
04:17:23 SQL> @score.sql
04:17:23 SQL> --
04:17:23 SQL> -- score.sql
04:17:23 SQL> --
04:17:23 SQL> 
04:17:23 SQL> -- usage: score.sql
04:17:23 SQL> 
04:17:23 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
04:17:23 SQL> 
04:17:23 SQL> DEFINE target	= 'gatt'
04:17:23 SQL> DEFINE model_name = 'forex14'
04:17:23 SQL> DEFINE bldtable	= 'bme'
04:17:23 SQL> DEFINE scoretable = 'sme'
04:17:23 SQL> DEFINE case_id	= 'prdate'
04:17:23 SQL> 
04:17:23 SQL> -- Define a variable to help me exclude some columns from some data mining calls
04:17:23 SQL> DEFINE exclude1 = "'&target','&case_id'"
04:17:23 SQL> 
04:17:23 SQL> -- Builds an SVM model using pl/sql.
04:17:23 SQL> 
04:17:23 SQL> -----------------------------------------------------------------------
04:17:23 SQL> --			    BUILD THE MODEL
04:17:23 SQL> -----------------------------------------------------------------------
04:17:23 SQL> 
04:17:23 SQL> -- Cleanup old build data preparation objects for repeat runs
04:17:23 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
04:17:23 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
04:17:23 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
04:17:23 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
04:17:23 SQL> 
04:17:23 SQL> 
04:17:23 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
04:17:23 SQL> --
04:17:23 SQL> -- DROP	TABLE svmc_settings ;
04:17:23 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
04:17:23 SQL> -- DELETE svmc_settings;
04:17:23 SQL> 
04:17:23 SQL> -- The default classification algorithm is Naive Bayes. So override
04:17:23 SQL> -- this choice to SVM using a settings table.
04:17:23 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
04:17:23 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
04:17:23 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
04:17:23 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
04:17:23 SQL> -- models.
04:17:23 SQL> --
04:17:23 SQL> 
04:17:23 SQL> -- Do this once and then comment it out.
04:17:23 SQL> -- That makes script go faster.
04:17:23 SQL> -- BEGIN
04:17:23 SQL> -- -- Populate settings table
04:17:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:17:23 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
04:17:23 SQL> --
04:17:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:17:23 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
04:17:23 SQL> --
04:17:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:17:23 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
04:17:23 SQL> --   COMMIT;
04:17:23 SQL> -- END;
04:17:23 SQL> -- /
04:17:23 SQL> 
04:17:23 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
04:17:23 SQL> 
04:17:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
04:17:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:17:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:17:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
04:17:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:17:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.19
04:17:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
04:17:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:17:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:17:24 SQL> 
04:17:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
04:17:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:17:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
04:17:24 SQL> 
04:17:24 SQL> --------------------------------
04:17:24 SQL> -- PREPARE BUILD (TRAINING) DATA
04:17:24 SQL> --
04:17:24 SQL> 
04:17:24 SQL> -- 1. Missing Value treatment for all Predictors and
04:17:24 SQL> -- 2. Outlier Treatment and
04:17:24 SQL> -- 3. Normalization are performed below.
04:17:24 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
04:17:24 SQL> --    normalized here.
04:17:24 SQL> 
04:17:24 SQL> BEGIN
04:17:24   2  	-- Perform missing value treatment for all predictors
04:17:24   3  	-- create miss tables
04:17:24   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
04:17:24   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
04:17:24   6  
04:17:24   7  	-- populate miss tables
04:17:24   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
04:17:24   9  	  miss_table_name => 'svmc_miss_num',
04:17:24  10  	  data_table_name => '&bldtable',
04:17:24  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:17:24  12  
04:17:24  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
04:17:24  14  	  miss_table_name => 'svmc_miss_cat',
04:17:24  15  	  data_table_name => '&bldtable',
04:17:24  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:17:24  17  
04:17:24  18  	-- xform input data to replace missing values
04:17:24  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:17:24  20  	  miss_table_name => 'svmc_miss_num',
04:17:24  21  	  data_table_name => '&bldtable',
04:17:24  22  	  xform_view_name => 'xformed_build_miss_num');
04:17:24  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:17:24  24  	  miss_table_name => 'svmc_miss_cat',
04:17:24  25  	  data_table_name => '&bldtable',
04:17:24  26  	  xform_view_name => 'xformed_build_miss_cat');
04:17:24  27  
04:17:24  28  	-- Perform outlier treatment.
04:17:24  29  	-- create clip table
04:17:24  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
04:17:24  31  
04:17:24  32  	-- populate clip table
04:17:24  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
04:17:24  34  	  clip_table_name => 'svmc_clip',
04:17:24  35  	  data_table_name => '&bldtable',
04:17:24  36  	  tail_frac	  => 0.025,
04:17:24  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:17:24  38  
04:17:24  39  	-- xform input data to winsorized data
04:17:24  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
04:17:24  41  	  clip_table_name => 'svmc_clip',
04:17:24  42  	  data_table_name => '&bldtable',
04:17:24  43  	  xform_view_name => 'svmc_winsor');
04:17:24  44  
04:17:24  45  	-- create normalization table
04:17:24  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
04:17:24  47  
04:17:24  48  	-- populate normalization table based on winsorized data
04:17:24  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
04:17:24  50  	  norm_table_name => 'svmc_norm',
04:17:24  51  	  data_table_name => 'svmc_winsor',
04:17:24  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:17:24  53  
04:17:24  54  	-- normalize the original data
04:17:24  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:17:24  56  	  norm_table_name => 'svmc_norm',
04:17:24  57  	  data_table_name => '&bldtable',
04:17:24  58  	  xform_view_name => 'svmc_build_prep');
04:17:24  59  END;
04:17:24  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.31
04:17:42 SQL> 
04:17:42 SQL> ---------------------
04:17:42 SQL> -- CREATE A NEW MODEL
04:17:42 SQL> --
04:17:42 SQL> -- Cleanup old model with the same name for repeat runs
04:17:42 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
04:17:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:17:42   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.93
04:17:43 SQL> 
04:17:43 SQL> -- Build a new SVM Model
04:17:43 SQL> BEGIN
04:17:43   2  	DBMS_DATA_MINING.CREATE_MODEL(
04:17:43   3  	  model_name	      => '&model_name',
04:17:43   4  	  mining_function     => dbms_data_mining.classification,
04:17:43   5  	  data_table_name     => 'svmc_build_prep',
04:17:43   6  	  case_id_column_name => '&case_id',
04:17:43   7  	  target_column_name  => '&target',
04:17:43   8  	  settings_table_name => 'svmc_settings');
04:17:43   9  END;
04:17:43  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.81
04:18:11 SQL> 
04:18:11 SQL> -----------------------------------------------------------------------
04:18:11 SQL> --			       APPLY/score THE MODEL
04:18:11 SQL> -----------------------------------------------------------------------
04:18:11 SQL> 
04:18:11 SQL> -- Cleanup old scoring data preparation objects for repeat runs
04:18:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
04:18:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:18:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:18:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
04:18:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:18:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:18:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
04:18:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:18:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
04:18:11 SQL> -----------------------
04:18:11 SQL> -- PREPARE SCORING DATA
04:18:11 SQL> --
04:18:11 SQL> -- If the data for model creation has been prepared, then the data
04:18:11 SQL> -- to be scored using the model must be prepared in the same manner
04:18:11 SQL> -- in order to obtain meaningful results.
04:18:11 SQL> --
04:18:11 SQL> -- 1. Missing Value treatment for all Predictors and
04:18:11 SQL> -- 2. Normalization
04:18:11 SQL> -- No outlier treatment will be performed during test and apply. The
04:18:11 SQL> -- normalization step is sufficient, since the normalization parameters
04:18:11 SQL> -- already capture the effects of outlier treatment done with build data.
04:18:11 SQL> --
04:18:11 SQL> BEGIN
04:18:11   2  	-- Xform Test data to replace missing values
04:18:11   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:18:11   4  	  miss_table_name => 'svmc_miss_num',
04:18:11   5  	  data_table_name => '&scoretable',
04:18:11   6  	  xform_view_name => 'xformed_apply_miss_num');
04:18:11   7  
04:18:11   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:18:11   9  	  miss_table_name => 'svmc_miss_cat',
04:18:11  10  	  data_table_name => '&scoretable',
04:18:11  11  	  xform_view_name => 'xformed_apply_miss_cat');
04:18:11  12  
04:18:11  13  	-- Normalize the data to be scored
04:18:11  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:18:11  15  	  norm_table_name => 'svmc_norm',
04:18:11  16  	  data_table_name => '&scoretable',
04:18:11  17  	  xform_view_name => 'svmc_apply_prep');
04:18:11  18  END;
04:18:11  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.28
04:18:12 SQL> 
04:18:12 SQL> -- Use same model_name used in score.sql
04:18:12 SQL> DEFINE model_name = 'forex14'
04:18:12 SQL> 
04:18:12 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
04:18:12 SQL> 
04:18:12 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
04:18:12 SQL> 
04:18:12 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
04:18:12   2  SELECT
04:18:12   3  prdate
04:18:12   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
04:18:12   5  ,sysdate
04:18:12   6  ,SUBSTR(prdate,1,3)pair
04:18:12   7  ,SUBSTR(prdate,4,19)ydate
04:18:12   8  FROM svmc_apply_prep
04:18:12   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
04:18:13 SQL> @aud_score1day_gattn.sql	2010-12-31 03:50:00
04:18:13 SQL> --
04:18:13 SQL> -- aud_score1day_gattn.sql
04:18:13 SQL> --
04:18:13 SQL> 
04:18:13 SQL> CREATE OR REPLACE VIEW sme AS
04:18:13   2  SELECT
04:18:13   3  'aud'||m.ydate prdate
04:18:13   4  ,NULL gattn
04:18:13   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:18:13   6  ,eur_g00
04:18:13   7  ,eur_g01
04:18:13   8  ,eur_g02
04:18:13   9  ,eur_g03
04:18:13  10  ,eur_g04
04:18:13  11  ,eur_g05
04:18:13  12  ,eur_g06
04:18:13  13  ,eur_g07
04:18:13  14  ,eur_g08
04:18:13  15  ,eur_g09
04:18:13  16  ,eur_g10
04:18:13  17  ,eur_g11
04:18:13  18  ,eur_g12
04:18:13  19  ,eur_g13
04:18:13  20  ,eur_g14
04:18:13  21  ,eur_g15
04:18:13  22  ,eur_g16
04:18:13  23  ,eur_g17
04:18:13  24  ,eur_g18
04:18:13  25  ,eur_g19
04:18:13  26  ,eur_g20
04:18:13  27  ,eur_g21
04:18:13  28  ,eur_g22
04:18:13  29  ,eur_g23
04:18:13  30  ,eur_g24
04:18:13  31  ,eur_g25
04:18:13  32  ,eur_g26
04:18:13  33  ,eur_g27
04:18:13  34  ,eur_g28
04:18:13  35  ,eur_g29
04:18:13  36  ,eur_g30
04:18:13  37  ,eur_g31
04:18:13  38  ,eur_g32
04:18:13  39  ,eur_g33
04:18:13  40  ,eur_g34
04:18:13  41  ,eur_g35
04:18:13  42  ,eur_g36
04:18:13  43  ,eur_g37
04:18:13  44  ,eur_g38
04:18:13  45  ,eur_g39
04:18:13  46  ,eur_g40
04:18:13  47  ,eur_g41
04:18:13  48  ,aud_g00
04:18:13  49  ,aud_g01
04:18:13  50  ,aud_g02
04:18:13  51  ,aud_g03
04:18:13  52  ,aud_g04
04:18:13  53  ,aud_g05
04:18:13  54  ,aud_g06
04:18:13  55  ,aud_g07
04:18:13  56  ,aud_g08
04:18:13  57  ,aud_g09
04:18:13  58  ,aud_g10
04:18:13  59  ,aud_g11
04:18:13  60  ,aud_g12
04:18:13  61  ,aud_g13
04:18:13  62  ,aud_g14
04:18:13  63  ,aud_g15
04:18:13  64  ,aud_g16
04:18:13  65  ,aud_g17
04:18:13  66  ,aud_g18
04:18:13  67  ,aud_g19
04:18:13  68  ,aud_g20
04:18:13  69  ,aud_g21
04:18:13  70  ,aud_g22
04:18:13  71  ,aud_g23
04:18:13  72  ,aud_g24
04:18:13  73  ,aud_g25
04:18:13  74  ,aud_g26
04:18:13  75  ,aud_g27
04:18:13  76  ,aud_g28
04:18:13  77  ,aud_g29
04:18:13  78  ,aud_g30
04:18:13  79  ,aud_g31
04:18:13  80  ,aud_g32
04:18:13  81  ,aud_g33
04:18:13  82  ,aud_g34
04:18:13  83  ,aud_g35
04:18:13  84  ,aud_g36
04:18:13  85  ,aud_g37
04:18:13  86  ,aud_g38
04:18:13  87  ,aud_g39
04:18:13  88  ,aud_g40
04:18:13  89  ,aud_g41
04:18:13  90  ,gbp_g00
04:18:13  91  ,gbp_g01
04:18:13  92  ,gbp_g02
04:18:13  93  ,gbp_g03
04:18:13  94  ,gbp_g04
04:18:13  95  ,gbp_g05
04:18:13  96  ,gbp_g06
04:18:13  97  ,gbp_g07
04:18:13  98  ,gbp_g08
04:18:13  99  ,gbp_g09
04:18:13 100  ,gbp_g10
04:18:13 101  ,gbp_g11
04:18:13 102  ,gbp_g12
04:18:13 103  ,gbp_g13
04:18:13 104  ,gbp_g14
04:18:13 105  ,gbp_g15
04:18:13 106  ,gbp_g16
04:18:13 107  ,gbp_g17
04:18:13 108  ,gbp_g18
04:18:13 109  ,gbp_g19
04:18:13 110  ,gbp_g20
04:18:13 111  ,gbp_g21
04:18:13 112  ,gbp_g22
04:18:13 113  ,gbp_g23
04:18:13 114  ,gbp_g24
04:18:13 115  ,gbp_g25
04:18:13 116  ,gbp_g26
04:18:13 117  ,gbp_g27
04:18:13 118  ,gbp_g28
04:18:13 119  ,gbp_g29
04:18:13 120  ,gbp_g30
04:18:13 121  ,gbp_g31
04:18:13 122  ,gbp_g32
04:18:13 123  ,gbp_g33
04:18:13 124  ,gbp_g34
04:18:13 125  ,gbp_g35
04:18:13 126  ,gbp_g36
04:18:13 127  ,gbp_g37
04:18:13 128  ,gbp_g38
04:18:13 129  ,gbp_g39
04:18:13 130  ,gbp_g40
04:18:13 131  ,gbp_g41
04:18:13 132  ,jpy_g00
04:18:13 133  ,jpy_g01
04:18:13 134  ,jpy_g02
04:18:13 135  ,jpy_g03
04:18:13 136  ,jpy_g04
04:18:13 137  ,jpy_g05
04:18:13 138  ,jpy_g06
04:18:13 139  ,jpy_g07
04:18:13 140  ,jpy_g08
04:18:13 141  ,jpy_g09
04:18:13 142  ,jpy_g10
04:18:13 143  ,jpy_g11
04:18:13 144  ,jpy_g12
04:18:13 145  ,jpy_g13
04:18:13 146  ,jpy_g14
04:18:13 147  ,jpy_g15
04:18:13 148  ,jpy_g16
04:18:13 149  ,jpy_g17
04:18:13 150  ,jpy_g18
04:18:13 151  ,jpy_g19
04:18:13 152  ,jpy_g20
04:18:13 153  ,jpy_g21
04:18:13 154  ,jpy_g22
04:18:13 155  ,jpy_g23
04:18:13 156  ,jpy_g24
04:18:13 157  ,jpy_g25
04:18:13 158  ,jpy_g26
04:18:13 159  ,jpy_g27
04:18:13 160  ,jpy_g28
04:18:13 161  ,jpy_g29
04:18:13 162  ,jpy_g30
04:18:13 163  ,jpy_g31
04:18:13 164  ,jpy_g32
04:18:13 165  ,jpy_g33
04:18:13 166  ,jpy_g34
04:18:13 167  ,jpy_g35
04:18:13 168  ,jpy_g36
04:18:13 169  ,jpy_g37
04:18:13 170  ,jpy_g38
04:18:13 171  ,jpy_g39
04:18:13 172  ,jpy_g40
04:18:13 173  ,jpy_g41
04:18:13 174  ,cad_g00
04:18:13 175  ,cad_g01
04:18:13 176  ,cad_g02
04:18:13 177  ,cad_g03
04:18:13 178  ,cad_g04
04:18:13 179  ,cad_g05
04:18:13 180  ,cad_g06
04:18:13 181  ,cad_g07
04:18:13 182  ,cad_g08
04:18:13 183  ,cad_g09
04:18:13 184  ,cad_g10
04:18:13 185  ,cad_g11
04:18:13 186  ,cad_g12
04:18:13 187  ,cad_g13
04:18:13 188  ,cad_g14
04:18:13 189  ,cad_g15
04:18:13 190  ,cad_g16
04:18:13 191  ,cad_g17
04:18:13 192  ,cad_g18
04:18:13 193  ,cad_g19
04:18:13 194  ,cad_g20
04:18:13 195  ,cad_g21
04:18:13 196  ,cad_g22
04:18:13 197  ,cad_g23
04:18:13 198  ,cad_g24
04:18:13 199  ,cad_g25
04:18:13 200  ,cad_g26
04:18:13 201  ,cad_g27
04:18:13 202  ,cad_g28
04:18:13 203  ,cad_g29
04:18:13 204  ,cad_g30
04:18:13 205  ,cad_g31
04:18:13 206  ,cad_g32
04:18:13 207  ,cad_g33
04:18:13 208  ,cad_g34
04:18:13 209  ,cad_g35
04:18:13 210  ,cad_g36
04:18:13 211  ,cad_g37
04:18:13 212  ,cad_g38
04:18:13 213  ,cad_g39
04:18:13 214  ,cad_g40
04:18:13 215  ,cad_g41
04:18:13 216  ,chf_g00
04:18:13 217  ,chf_g01
04:18:13 218  ,chf_g02
04:18:13 219  ,chf_g03
04:18:13 220  ,chf_g04
04:18:13 221  ,chf_g05
04:18:13 222  ,chf_g06
04:18:13 223  ,chf_g07
04:18:13 224  ,chf_g08
04:18:13 225  ,chf_g09
04:18:13 226  ,chf_g10
04:18:13 227  ,chf_g11
04:18:13 228  ,chf_g12
04:18:13 229  ,chf_g13
04:18:13 230  ,chf_g14
04:18:13 231  ,chf_g15
04:18:13 232  ,chf_g16
04:18:13 233  ,chf_g17
04:18:13 234  ,chf_g18
04:18:13 235  ,chf_g19
04:18:13 236  ,chf_g20
04:18:13 237  ,chf_g21
04:18:13 238  ,chf_g22
04:18:13 239  ,chf_g23
04:18:13 240  ,chf_g24
04:18:13 241  ,chf_g25
04:18:13 242  ,chf_g26
04:18:13 243  ,chf_g27
04:18:13 244  ,chf_g28
04:18:13 245  ,chf_g29
04:18:13 246  ,chf_g30
04:18:13 247  ,chf_g31
04:18:13 248  ,chf_g32
04:18:13 249  ,chf_g33
04:18:13 250  ,chf_g34
04:18:13 251  ,chf_g35
04:18:13 252  ,chf_g36
04:18:13 253  ,chf_g37
04:18:13 254  ,chf_g38
04:18:13 255  ,chf_g39
04:18:13 256  ,chf_g40
04:18:13 257  ,chf_g41
04:18:13 258  FROM aud_ms6 m
04:18:13 259  WHERE m.ydate = '&1'||' '||'&2'
04:18:13 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'03:50:00'

View created.

Elapsed: 00:00:00.12
04:18:13 SQL> 
04:18:13 SQL> -- rpt
04:18:13 SQL> -- We should see just 1 row:
04:18:13 SQL> 
04:18:13 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
04:18:13 SQL> 
04:18:13 SQL> -- Build the model:
04:18:13 SQL> CREATE OR REPLACE VIEW bme AS
04:18:13   2  SELECT
04:18:13   3  'aud'||m.ydate prdate
04:18:13   4  ,gattn
04:18:13   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:18:13   6  ,eur_g00
04:18:13   7  ,eur_g01
04:18:13   8  ,eur_g02
04:18:13   9  ,eur_g03
04:18:13  10  ,eur_g04
04:18:13  11  ,eur_g05
04:18:13  12  ,eur_g06
04:18:13  13  ,eur_g07
04:18:13  14  ,eur_g08
04:18:13  15  ,eur_g09
04:18:13  16  ,eur_g10
04:18:13  17  ,eur_g11
04:18:13  18  ,eur_g12
04:18:13  19  ,eur_g13
04:18:13  20  ,eur_g14
04:18:13  21  ,eur_g15
04:18:13  22  ,eur_g16
04:18:13  23  ,eur_g17
04:18:13  24  ,eur_g18
04:18:13  25  ,eur_g19
04:18:13  26  ,eur_g20
04:18:13  27  ,eur_g21
04:18:13  28  ,eur_g22
04:18:13  29  ,eur_g23
04:18:13  30  ,eur_g24
04:18:13  31  ,eur_g25
04:18:13  32  ,eur_g26
04:18:13  33  ,eur_g27
04:18:13  34  ,eur_g28
04:18:13  35  ,eur_g29
04:18:13  36  ,eur_g30
04:18:13  37  ,eur_g31
04:18:13  38  ,eur_g32
04:18:13  39  ,eur_g33
04:18:13  40  ,eur_g34
04:18:13  41  ,eur_g35
04:18:13  42  ,eur_g36
04:18:13  43  ,eur_g37
04:18:13  44  ,eur_g38
04:18:13  45  ,eur_g39
04:18:13  46  ,eur_g40
04:18:13  47  ,eur_g41
04:18:13  48  ,aud_g00
04:18:13  49  ,aud_g01
04:18:13  50  ,aud_g02
04:18:13  51  ,aud_g03
04:18:13  52  ,aud_g04
04:18:13  53  ,aud_g05
04:18:13  54  ,aud_g06
04:18:13  55  ,aud_g07
04:18:13  56  ,aud_g08
04:18:13  57  ,aud_g09
04:18:13  58  ,aud_g10
04:18:13  59  ,aud_g11
04:18:13  60  ,aud_g12
04:18:13  61  ,aud_g13
04:18:13  62  ,aud_g14
04:18:13  63  ,aud_g15
04:18:13  64  ,aud_g16
04:18:13  65  ,aud_g17
04:18:13  66  ,aud_g18
04:18:13  67  ,aud_g19
04:18:13  68  ,aud_g20
04:18:13  69  ,aud_g21
04:18:13  70  ,aud_g22
04:18:13  71  ,aud_g23
04:18:13  72  ,aud_g24
04:18:13  73  ,aud_g25
04:18:13  74  ,aud_g26
04:18:13  75  ,aud_g27
04:18:13  76  ,aud_g28
04:18:13  77  ,aud_g29
04:18:13  78  ,aud_g30
04:18:13  79  ,aud_g31
04:18:13  80  ,aud_g32
04:18:13  81  ,aud_g33
04:18:13  82  ,aud_g34
04:18:13  83  ,aud_g35
04:18:13  84  ,aud_g36
04:18:13  85  ,aud_g37
04:18:13  86  ,aud_g38
04:18:13  87  ,aud_g39
04:18:13  88  ,aud_g40
04:18:13  89  ,aud_g41
04:18:13  90  ,gbp_g00
04:18:13  91  ,gbp_g01
04:18:13  92  ,gbp_g02
04:18:13  93  ,gbp_g03
04:18:13  94  ,gbp_g04
04:18:13  95  ,gbp_g05
04:18:13  96  ,gbp_g06
04:18:13  97  ,gbp_g07
04:18:13  98  ,gbp_g08
04:18:13  99  ,gbp_g09
04:18:13 100  ,gbp_g10
04:18:13 101  ,gbp_g11
04:18:13 102  ,gbp_g12
04:18:13 103  ,gbp_g13
04:18:13 104  ,gbp_g14
04:18:13 105  ,gbp_g15
04:18:13 106  ,gbp_g16
04:18:13 107  ,gbp_g17
04:18:13 108  ,gbp_g18
04:18:13 109  ,gbp_g19
04:18:13 110  ,gbp_g20
04:18:13 111  ,gbp_g21
04:18:13 112  ,gbp_g22
04:18:13 113  ,gbp_g23
04:18:13 114  ,gbp_g24
04:18:13 115  ,gbp_g25
04:18:13 116  ,gbp_g26
04:18:13 117  ,gbp_g27
04:18:13 118  ,gbp_g28
04:18:13 119  ,gbp_g29
04:18:13 120  ,gbp_g30
04:18:13 121  ,gbp_g31
04:18:13 122  ,gbp_g32
04:18:13 123  ,gbp_g33
04:18:13 124  ,gbp_g34
04:18:13 125  ,gbp_g35
04:18:13 126  ,gbp_g36
04:18:13 127  ,gbp_g37
04:18:13 128  ,gbp_g38
04:18:13 129  ,gbp_g39
04:18:13 130  ,gbp_g40
04:18:13 131  ,gbp_g41
04:18:13 132  ,jpy_g00
04:18:13 133  ,jpy_g01
04:18:13 134  ,jpy_g02
04:18:13 135  ,jpy_g03
04:18:13 136  ,jpy_g04
04:18:13 137  ,jpy_g05
04:18:13 138  ,jpy_g06
04:18:13 139  ,jpy_g07
04:18:13 140  ,jpy_g08
04:18:13 141  ,jpy_g09
04:18:13 142  ,jpy_g10
04:18:13 143  ,jpy_g11
04:18:13 144  ,jpy_g12
04:18:13 145  ,jpy_g13
04:18:13 146  ,jpy_g14
04:18:13 147  ,jpy_g15
04:18:13 148  ,jpy_g16
04:18:13 149  ,jpy_g17
04:18:13 150  ,jpy_g18
04:18:13 151  ,jpy_g19
04:18:13 152  ,jpy_g20
04:18:13 153  ,jpy_g21
04:18:13 154  ,jpy_g22
04:18:13 155  ,jpy_g23
04:18:13 156  ,jpy_g24
04:18:13 157  ,jpy_g25
04:18:13 158  ,jpy_g26
04:18:13 159  ,jpy_g27
04:18:13 160  ,jpy_g28
04:18:13 161  ,jpy_g29
04:18:13 162  ,jpy_g30
04:18:13 163  ,jpy_g31
04:18:13 164  ,jpy_g32
04:18:13 165  ,jpy_g33
04:18:13 166  ,jpy_g34
04:18:13 167  ,jpy_g35
04:18:13 168  ,jpy_g36
04:18:13 169  ,jpy_g37
04:18:13 170  ,jpy_g38
04:18:13 171  ,jpy_g39
04:18:13 172  ,jpy_g40
04:18:13 173  ,jpy_g41
04:18:13 174  ,cad_g00
04:18:13 175  ,cad_g01
04:18:13 176  ,cad_g02
04:18:13 177  ,cad_g03
04:18:13 178  ,cad_g04
04:18:13 179  ,cad_g05
04:18:13 180  ,cad_g06
04:18:13 181  ,cad_g07
04:18:13 182  ,cad_g08
04:18:13 183  ,cad_g09
04:18:13 184  ,cad_g10
04:18:13 185  ,cad_g11
04:18:13 186  ,cad_g12
04:18:13 187  ,cad_g13
04:18:13 188  ,cad_g14
04:18:13 189  ,cad_g15
04:18:13 190  ,cad_g16
04:18:13 191  ,cad_g17
04:18:13 192  ,cad_g18
04:18:13 193  ,cad_g19
04:18:13 194  ,cad_g20
04:18:13 195  ,cad_g21
04:18:13 196  ,cad_g22
04:18:13 197  ,cad_g23
04:18:13 198  ,cad_g24
04:18:13 199  ,cad_g25
04:18:13 200  ,cad_g26
04:18:13 201  ,cad_g27
04:18:13 202  ,cad_g28
04:18:13 203  ,cad_g29
04:18:13 204  ,cad_g30
04:18:13 205  ,cad_g31
04:18:13 206  ,cad_g32
04:18:13 207  ,cad_g33
04:18:13 208  ,cad_g34
04:18:13 209  ,cad_g35
04:18:13 210  ,cad_g36
04:18:13 211  ,cad_g37
04:18:13 212  ,cad_g38
04:18:13 213  ,cad_g39
04:18:13 214  ,cad_g40
04:18:13 215  ,cad_g41
04:18:13 216  ,chf_g00
04:18:13 217  ,chf_g01
04:18:13 218  ,chf_g02
04:18:13 219  ,chf_g03
04:18:13 220  ,chf_g04
04:18:13 221  ,chf_g05
04:18:13 222  ,chf_g06
04:18:13 223  ,chf_g07
04:18:13 224  ,chf_g08
04:18:13 225  ,chf_g09
04:18:13 226  ,chf_g10
04:18:13 227  ,chf_g11
04:18:13 228  ,chf_g12
04:18:13 229  ,chf_g13
04:18:13 230  ,chf_g14
04:18:13 231  ,chf_g15
04:18:13 232  ,chf_g16
04:18:13 233  ,chf_g17
04:18:13 234  ,chf_g18
04:18:13 235  ,chf_g19
04:18:13 236  ,chf_g20
04:18:13 237  ,chf_g21
04:18:13 238  ,chf_g22
04:18:13 239  ,chf_g23
04:18:13 240  ,chf_g24
04:18:13 241  ,chf_g25
04:18:13 242  ,chf_g26
04:18:13 243  ,chf_g27
04:18:13 244  ,chf_g28
04:18:13 245  ,chf_g29
04:18:13 246  ,chf_g30
04:18:13 247  ,chf_g31
04:18:13 248  ,chf_g32
04:18:13 249  ,chf_g33
04:18:13 250  ,chf_g34
04:18:13 251  ,chf_g35
04:18:13 252  ,chf_g36
04:18:13 253  ,chf_g37
04:18:13 254  ,chf_g38
04:18:13 255  ,chf_g39
04:18:13 256  ,chf_g40
04:18:13 257  ,chf_g41
04:18:13 258  FROM aud_ms6 m
04:18:13 259  WHERE gattn IN('nup','up')
04:18:13 260  AND 1+m.ydate < '&1'||' '||'&2'
04:18:13 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'03:50:00'

View created.

Elapsed: 00:00:00.12
04:18:13 SQL> 
04:18:13 SQL> -- rpt
04:18:13 SQL> 
04:18:13 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13154
up	     6382

Elapsed: 00:00:00.04
04:18:13 SQL> 
04:18:13 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 03:45:00

Elapsed: 00:00:00.03
04:18:13 SQL> 
04:18:13 SQL> -- Now build model from bme and score sme
04:18:13 SQL> @score1gattn.sql
04:18:13 SQL> -- score1gattn.sql
04:18:13 SQL> 
04:18:13 SQL> -- Does the 1st SVM score
04:18:13 SQL> 
04:18:13 SQL> -- Fill up svmc_apply_prep
04:18:13 SQL> @score_gattn.sql
04:18:13 SQL> --
04:18:13 SQL> -- score_gattn.sql
04:18:13 SQL> --
04:18:13 SQL> 
04:18:13 SQL> -- usage: score_gattn.sql
04:18:13 SQL> 
04:18:13 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
04:18:13 SQL> 
04:18:13 SQL> DEFINE target	= 'gattn'
04:18:13 SQL> DEFINE model_name = 'forex14'
04:18:13 SQL> DEFINE bldtable	= 'bme'
04:18:13 SQL> DEFINE scoretable = 'sme'
04:18:13 SQL> DEFINE case_id	= 'prdate'
04:18:13 SQL> 
04:18:13 SQL> -- Define a variable to help me exclude some columns from some data mining calls
04:18:13 SQL> DEFINE exclude1 = "'&target','&case_id'"
04:18:13 SQL> 
04:18:13 SQL> -- Builds an SVM model using pl/sql.
04:18:13 SQL> 
04:18:13 SQL> -----------------------------------------------------------------------
04:18:13 SQL> --			    BUILD THE MODEL
04:18:13 SQL> -----------------------------------------------------------------------
04:18:13 SQL> 
04:18:13 SQL> -- Cleanup old build data preparation objects for repeat runs
04:18:13 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
04:18:13 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
04:18:13 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
04:18:13 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
04:18:13 SQL> 
04:18:13 SQL> 
04:18:13 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
04:18:13 SQL> --
04:18:13 SQL> -- DROP	TABLE svmc_settings ;
04:18:13 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
04:18:13 SQL> -- DELETE svmc_settings;
04:18:13 SQL> 
04:18:13 SQL> -- The default classification algorithm is Naive Bayes. So override
04:18:13 SQL> -- this choice to SVM using a settings table.
04:18:13 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
04:18:13 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
04:18:13 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
04:18:13 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
04:18:13 SQL> -- models.
04:18:13 SQL> --
04:18:13 SQL> 
04:18:13 SQL> -- Do this once and then comment it out.
04:18:13 SQL> -- That makes script go faster.
04:18:13 SQL> -- BEGIN
04:18:13 SQL> -- -- Populate settings table
04:18:13 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:18:13 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
04:18:13 SQL> --
04:18:13 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:18:13 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
04:18:13 SQL> --
04:18:13 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:18:13 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
04:18:13 SQL> --   COMMIT;
04:18:13 SQL> -- END;
04:18:13 SQL> -- /
04:18:13 SQL> 
04:18:13 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
04:18:13 SQL> 
04:18:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
04:18:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:18:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:18:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
04:18:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:18:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
04:18:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
04:18:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:18:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:18:13 SQL> 
04:18:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
04:18:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:18:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:18:13 SQL> 
04:18:13 SQL> --------------------------------
04:18:13 SQL> -- PREPARE BUILD (TRAINING) DATA
04:18:13 SQL> --
04:18:13 SQL> 
04:18:13 SQL> -- 1. Missing Value treatment for all Predictors and
04:18:13 SQL> -- 2. Outlier Treatment and
04:18:13 SQL> -- 3. Normalization are performed below.
04:18:13 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
04:18:13 SQL> --    normalized here.
04:18:13 SQL> 
04:18:13 SQL> BEGIN
04:18:13   2  	-- Perform missing value treatment for all predictors
04:18:13   3  	-- create miss tables
04:18:13   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
04:18:13   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
04:18:13   6  
04:18:13   7  	-- populate miss tables
04:18:13   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
04:18:13   9  	  miss_table_name => 'svmc_miss_num',
04:18:13  10  	  data_table_name => '&bldtable',
04:18:13  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:18:13  12  
04:18:13  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
04:18:13  14  	  miss_table_name => 'svmc_miss_cat',
04:18:13  15  	  data_table_name => '&bldtable',
04:18:13  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:18:13  17  
04:18:13  18  	-- xform input data to replace missing values
04:18:13  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:18:13  20  	  miss_table_name => 'svmc_miss_num',
04:18:13  21  	  data_table_name => '&bldtable',
04:18:13  22  	  xform_view_name => 'xformed_build_miss_num');
04:18:13  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:18:13  24  	  miss_table_name => 'svmc_miss_cat',
04:18:13  25  	  data_table_name => '&bldtable',
04:18:13  26  	  xform_view_name => 'xformed_build_miss_cat');
04:18:13  27  
04:18:13  28  	-- Perform outlier treatment.
04:18:13  29  	-- create clip table
04:18:13  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
04:18:13  31  
04:18:13  32  	-- populate clip table
04:18:13  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
04:18:13  34  	  clip_table_name => 'svmc_clip',
04:18:13  35  	  data_table_name => '&bldtable',
04:18:13  36  	  tail_frac	  => 0.025,
04:18:13  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:18:13  38  
04:18:13  39  	-- xform input data to winsorized data
04:18:13  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
04:18:13  41  	  clip_table_name => 'svmc_clip',
04:18:13  42  	  data_table_name => '&bldtable',
04:18:13  43  	  xform_view_name => 'svmc_winsor');
04:18:13  44  
04:18:13  45  	-- create normalization table
04:18:13  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
04:18:13  47  
04:18:13  48  	-- populate normalization table based on winsorized data
04:18:13  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
04:18:13  50  	  norm_table_name => 'svmc_norm',
04:18:13  51  	  data_table_name => 'svmc_winsor',
04:18:13  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:18:13  53  
04:18:13  54  	-- normalize the original data
04:18:13  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:18:13  56  	  norm_table_name => 'svmc_norm',
04:18:13  57  	  data_table_name => '&bldtable',
04:18:13  58  	  xform_view_name => 'svmc_build_prep');
04:18:13  59  END;
04:18:13  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.45
04:18:32 SQL> 
04:18:32 SQL> ---------------------
04:18:32 SQL> -- CREATE A NEW MODEL
04:18:32 SQL> --
04:18:32 SQL> -- Cleanup old model with the same name for repeat runs
04:18:32 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
04:18:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:18:32   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.03
04:18:33 SQL> 
04:18:33 SQL> -- Build a new SVM Model
04:18:33 SQL> BEGIN
04:18:33   2  	DBMS_DATA_MINING.CREATE_MODEL(
04:18:33   3  	  model_name	      => '&model_name',
04:18:33   4  	  mining_function     => dbms_data_mining.classification,
04:18:33   5  	  data_table_name     => 'svmc_build_prep',
04:18:33   6  	  case_id_column_name => '&case_id',
04:18:33   7  	  target_column_name  => '&target',
04:18:33   8  	  settings_table_name => 'svmc_settings');
04:18:33   9  END;
04:18:33  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.25
04:19:01 SQL> 
04:19:01 SQL> -----------------------------------------------------------------------
04:19:01 SQL> --			       APPLY/score THE MODEL
04:19:01 SQL> -----------------------------------------------------------------------
04:19:01 SQL> 
04:19:01 SQL> -- Cleanup old scoring data preparation objects for repeat runs
04:19:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
04:19:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:19:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:19:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
04:19:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:19:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:19:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
04:19:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:19:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:19:01 SQL> -----------------------
04:19:01 SQL> -- PREPARE SCORING DATA
04:19:01 SQL> --
04:19:01 SQL> -- If the data for model creation has been prepared, then the data
04:19:01 SQL> -- to be scored using the model must be prepared in the same manner
04:19:01 SQL> -- in order to obtain meaningful results.
04:19:01 SQL> --
04:19:01 SQL> -- 1. Missing Value treatment for all Predictors and
04:19:01 SQL> -- 2. Normalization
04:19:01 SQL> -- No outlier treatment will be performed during test and apply. The
04:19:01 SQL> -- normalization step is sufficient, since the normalization parameters
04:19:01 SQL> -- already capture the effects of outlier treatment done with build data.
04:19:01 SQL> --
04:19:01 SQL> BEGIN
04:19:01   2  	-- Xform Test data to replace missing values
04:19:01   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:19:01   4  	  miss_table_name => 'svmc_miss_num',
04:19:01   5  	  data_table_name => '&scoretable',
04:19:01   6  	  xform_view_name => 'xformed_apply_miss_num');
04:19:01   7  
04:19:01   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:19:01   9  	  miss_table_name => 'svmc_miss_cat',
04:19:01  10  	  data_table_name => '&scoretable',
04:19:01  11  	  xform_view_name => 'xformed_apply_miss_cat');
04:19:01  12  
04:19:01  13  	-- Normalize the data to be scored
04:19:01  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:19:01  15  	  norm_table_name => 'svmc_norm',
04:19:01  16  	  data_table_name => '&scoretable',
04:19:01  17  	  xform_view_name => 'svmc_apply_prep');
04:19:01  18  END;
04:19:01  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.32
04:19:02 SQL> 
04:19:02 SQL> -- Use same model_name used in score_gattn.sql
04:19:02 SQL> DEFINE model_name = 'forex14'
04:19:02 SQL> 
04:19:02 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
04:19:02 SQL> 
04:19:02 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
04:19:02   2  SELECT
04:19:02   3  prdate
04:19:02   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
04:19:02   5  ,sysdate
04:19:02   6  ,SUBSTR(prdate,1,3)pair
04:19:02   7  ,SUBSTR(prdate,4,19)ydate
04:19:02   8  FROM svmc_apply_prep
04:19:02   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
04:19:03 SQL> @aud_score1day_gattn.sql	2010-12-31 03:55:00
04:19:03 SQL> --
04:19:03 SQL> -- aud_score1day_gattn.sql
04:19:03 SQL> --
04:19:03 SQL> 
04:19:03 SQL> CREATE OR REPLACE VIEW sme AS
04:19:03   2  SELECT
04:19:03   3  'aud'||m.ydate prdate
04:19:03   4  ,NULL gattn
04:19:03   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:19:03   6  ,eur_g00
04:19:03   7  ,eur_g01
04:19:03   8  ,eur_g02
04:19:03   9  ,eur_g03
04:19:03  10  ,eur_g04
04:19:03  11  ,eur_g05
04:19:03  12  ,eur_g06
04:19:03  13  ,eur_g07
04:19:03  14  ,eur_g08
04:19:03  15  ,eur_g09
04:19:03  16  ,eur_g10
04:19:03  17  ,eur_g11
04:19:03  18  ,eur_g12
04:19:03  19  ,eur_g13
04:19:03  20  ,eur_g14
04:19:03  21  ,eur_g15
04:19:03  22  ,eur_g16
04:19:03  23  ,eur_g17
04:19:03  24  ,eur_g18
04:19:03  25  ,eur_g19
04:19:03  26  ,eur_g20
04:19:03  27  ,eur_g21
04:19:03  28  ,eur_g22
04:19:03  29  ,eur_g23
04:19:03  30  ,eur_g24
04:19:03  31  ,eur_g25
04:19:03  32  ,eur_g26
04:19:03  33  ,eur_g27
04:19:03  34  ,eur_g28
04:19:03  35  ,eur_g29
04:19:03  36  ,eur_g30
04:19:03  37  ,eur_g31
04:19:03  38  ,eur_g32
04:19:03  39  ,eur_g33
04:19:03  40  ,eur_g34
04:19:03  41  ,eur_g35
04:19:03  42  ,eur_g36
04:19:03  43  ,eur_g37
04:19:03  44  ,eur_g38
04:19:03  45  ,eur_g39
04:19:03  46  ,eur_g40
04:19:03  47  ,eur_g41
04:19:03  48  ,aud_g00
04:19:03  49  ,aud_g01
04:19:03  50  ,aud_g02
04:19:03  51  ,aud_g03
04:19:03  52  ,aud_g04
04:19:03  53  ,aud_g05
04:19:03  54  ,aud_g06
04:19:03  55  ,aud_g07
04:19:03  56  ,aud_g08
04:19:03  57  ,aud_g09
04:19:03  58  ,aud_g10
04:19:03  59  ,aud_g11
04:19:03  60  ,aud_g12
04:19:03  61  ,aud_g13
04:19:03  62  ,aud_g14
04:19:03  63  ,aud_g15
04:19:03  64  ,aud_g16
04:19:03  65  ,aud_g17
04:19:03  66  ,aud_g18
04:19:03  67  ,aud_g19
04:19:03  68  ,aud_g20
04:19:03  69  ,aud_g21
04:19:03  70  ,aud_g22
04:19:03  71  ,aud_g23
04:19:03  72  ,aud_g24
04:19:03  73  ,aud_g25
04:19:03  74  ,aud_g26
04:19:03  75  ,aud_g27
04:19:03  76  ,aud_g28
04:19:03  77  ,aud_g29
04:19:03  78  ,aud_g30
04:19:03  79  ,aud_g31
04:19:03  80  ,aud_g32
04:19:03  81  ,aud_g33
04:19:03  82  ,aud_g34
04:19:03  83  ,aud_g35
04:19:03  84  ,aud_g36
04:19:03  85  ,aud_g37
04:19:03  86  ,aud_g38
04:19:03  87  ,aud_g39
04:19:03  88  ,aud_g40
04:19:03  89  ,aud_g41
04:19:03  90  ,gbp_g00
04:19:03  91  ,gbp_g01
04:19:03  92  ,gbp_g02
04:19:03  93  ,gbp_g03
04:19:03  94  ,gbp_g04
04:19:03  95  ,gbp_g05
04:19:03  96  ,gbp_g06
04:19:03  97  ,gbp_g07
04:19:03  98  ,gbp_g08
04:19:03  99  ,gbp_g09
04:19:03 100  ,gbp_g10
04:19:03 101  ,gbp_g11
04:19:03 102  ,gbp_g12
04:19:03 103  ,gbp_g13
04:19:03 104  ,gbp_g14
04:19:03 105  ,gbp_g15
04:19:03 106  ,gbp_g16
04:19:03 107  ,gbp_g17
04:19:03 108  ,gbp_g18
04:19:03 109  ,gbp_g19
04:19:03 110  ,gbp_g20
04:19:03 111  ,gbp_g21
04:19:03 112  ,gbp_g22
04:19:03 113  ,gbp_g23
04:19:03 114  ,gbp_g24
04:19:03 115  ,gbp_g25
04:19:03 116  ,gbp_g26
04:19:03 117  ,gbp_g27
04:19:03 118  ,gbp_g28
04:19:03 119  ,gbp_g29
04:19:03 120  ,gbp_g30
04:19:03 121  ,gbp_g31
04:19:03 122  ,gbp_g32
04:19:03 123  ,gbp_g33
04:19:03 124  ,gbp_g34
04:19:03 125  ,gbp_g35
04:19:03 126  ,gbp_g36
04:19:03 127  ,gbp_g37
04:19:03 128  ,gbp_g38
04:19:03 129  ,gbp_g39
04:19:03 130  ,gbp_g40
04:19:03 131  ,gbp_g41
04:19:03 132  ,jpy_g00
04:19:03 133  ,jpy_g01
04:19:03 134  ,jpy_g02
04:19:03 135  ,jpy_g03
04:19:03 136  ,jpy_g04
04:19:03 137  ,jpy_g05
04:19:03 138  ,jpy_g06
04:19:03 139  ,jpy_g07
04:19:03 140  ,jpy_g08
04:19:03 141  ,jpy_g09
04:19:03 142  ,jpy_g10
04:19:03 143  ,jpy_g11
04:19:03 144  ,jpy_g12
04:19:03 145  ,jpy_g13
04:19:03 146  ,jpy_g14
04:19:03 147  ,jpy_g15
04:19:03 148  ,jpy_g16
04:19:03 149  ,jpy_g17
04:19:03 150  ,jpy_g18
04:19:03 151  ,jpy_g19
04:19:03 152  ,jpy_g20
04:19:03 153  ,jpy_g21
04:19:03 154  ,jpy_g22
04:19:03 155  ,jpy_g23
04:19:03 156  ,jpy_g24
04:19:03 157  ,jpy_g25
04:19:03 158  ,jpy_g26
04:19:03 159  ,jpy_g27
04:19:03 160  ,jpy_g28
04:19:03 161  ,jpy_g29
04:19:03 162  ,jpy_g30
04:19:03 163  ,jpy_g31
04:19:03 164  ,jpy_g32
04:19:03 165  ,jpy_g33
04:19:03 166  ,jpy_g34
04:19:03 167  ,jpy_g35
04:19:03 168  ,jpy_g36
04:19:03 169  ,jpy_g37
04:19:03 170  ,jpy_g38
04:19:03 171  ,jpy_g39
04:19:03 172  ,jpy_g40
04:19:03 173  ,jpy_g41
04:19:03 174  ,cad_g00
04:19:03 175  ,cad_g01
04:19:03 176  ,cad_g02
04:19:03 177  ,cad_g03
04:19:03 178  ,cad_g04
04:19:03 179  ,cad_g05
04:19:03 180  ,cad_g06
04:19:03 181  ,cad_g07
04:19:03 182  ,cad_g08
04:19:03 183  ,cad_g09
04:19:03 184  ,cad_g10
04:19:03 185  ,cad_g11
04:19:03 186  ,cad_g12
04:19:03 187  ,cad_g13
04:19:03 188  ,cad_g14
04:19:03 189  ,cad_g15
04:19:03 190  ,cad_g16
04:19:03 191  ,cad_g17
04:19:03 192  ,cad_g18
04:19:03 193  ,cad_g19
04:19:03 194  ,cad_g20
04:19:03 195  ,cad_g21
04:19:03 196  ,cad_g22
04:19:03 197  ,cad_g23
04:19:03 198  ,cad_g24
04:19:03 199  ,cad_g25
04:19:03 200  ,cad_g26
04:19:03 201  ,cad_g27
04:19:03 202  ,cad_g28
04:19:03 203  ,cad_g29
04:19:03 204  ,cad_g30
04:19:03 205  ,cad_g31
04:19:03 206  ,cad_g32
04:19:03 207  ,cad_g33
04:19:03 208  ,cad_g34
04:19:03 209  ,cad_g35
04:19:03 210  ,cad_g36
04:19:03 211  ,cad_g37
04:19:03 212  ,cad_g38
04:19:03 213  ,cad_g39
04:19:03 214  ,cad_g40
04:19:03 215  ,cad_g41
04:19:03 216  ,chf_g00
04:19:03 217  ,chf_g01
04:19:03 218  ,chf_g02
04:19:03 219  ,chf_g03
04:19:03 220  ,chf_g04
04:19:03 221  ,chf_g05
04:19:03 222  ,chf_g06
04:19:03 223  ,chf_g07
04:19:03 224  ,chf_g08
04:19:03 225  ,chf_g09
04:19:03 226  ,chf_g10
04:19:03 227  ,chf_g11
04:19:03 228  ,chf_g12
04:19:03 229  ,chf_g13
04:19:03 230  ,chf_g14
04:19:03 231  ,chf_g15
04:19:03 232  ,chf_g16
04:19:03 233  ,chf_g17
04:19:03 234  ,chf_g18
04:19:03 235  ,chf_g19
04:19:03 236  ,chf_g20
04:19:03 237  ,chf_g21
04:19:03 238  ,chf_g22
04:19:03 239  ,chf_g23
04:19:03 240  ,chf_g24
04:19:03 241  ,chf_g25
04:19:03 242  ,chf_g26
04:19:03 243  ,chf_g27
04:19:03 244  ,chf_g28
04:19:03 245  ,chf_g29
04:19:03 246  ,chf_g30
04:19:03 247  ,chf_g31
04:19:03 248  ,chf_g32
04:19:03 249  ,chf_g33
04:19:03 250  ,chf_g34
04:19:03 251  ,chf_g35
04:19:03 252  ,chf_g36
04:19:03 253  ,chf_g37
04:19:03 254  ,chf_g38
04:19:03 255  ,chf_g39
04:19:03 256  ,chf_g40
04:19:03 257  ,chf_g41
04:19:03 258  FROM aud_ms6 m
04:19:03 259  WHERE m.ydate = '&1'||' '||'&2'
04:19:03 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'03:55:00'

View created.

Elapsed: 00:00:00.12
04:19:03 SQL> 
04:19:03 SQL> -- rpt
04:19:03 SQL> -- We should see just 1 row:
04:19:03 SQL> 
04:19:03 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
04:19:03 SQL> 
04:19:03 SQL> -- Build the model:
04:19:03 SQL> CREATE OR REPLACE VIEW bme AS
04:19:03   2  SELECT
04:19:03   3  'aud'||m.ydate prdate
04:19:03   4  ,gattn
04:19:03   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:19:03   6  ,eur_g00
04:19:03   7  ,eur_g01
04:19:03   8  ,eur_g02
04:19:03   9  ,eur_g03
04:19:03  10  ,eur_g04
04:19:03  11  ,eur_g05
04:19:03  12  ,eur_g06
04:19:03  13  ,eur_g07
04:19:03  14  ,eur_g08
04:19:03  15  ,eur_g09
04:19:03  16  ,eur_g10
04:19:03  17  ,eur_g11
04:19:03  18  ,eur_g12
04:19:03  19  ,eur_g13
04:19:03  20  ,eur_g14
04:19:03  21  ,eur_g15
04:19:03  22  ,eur_g16
04:19:03  23  ,eur_g17
04:19:03  24  ,eur_g18
04:19:03  25  ,eur_g19
04:19:03  26  ,eur_g20
04:19:03  27  ,eur_g21
04:19:03  28  ,eur_g22
04:19:03  29  ,eur_g23
04:19:03  30  ,eur_g24
04:19:03  31  ,eur_g25
04:19:03  32  ,eur_g26
04:19:03  33  ,eur_g27
04:19:03  34  ,eur_g28
04:19:03  35  ,eur_g29
04:19:03  36  ,eur_g30
04:19:03  37  ,eur_g31
04:19:03  38  ,eur_g32
04:19:03  39  ,eur_g33
04:19:03  40  ,eur_g34
04:19:03  41  ,eur_g35
04:19:03  42  ,eur_g36
04:19:03  43  ,eur_g37
04:19:03  44  ,eur_g38
04:19:03  45  ,eur_g39
04:19:03  46  ,eur_g40
04:19:03  47  ,eur_g41
04:19:03  48  ,aud_g00
04:19:03  49  ,aud_g01
04:19:03  50  ,aud_g02
04:19:03  51  ,aud_g03
04:19:03  52  ,aud_g04
04:19:03  53  ,aud_g05
04:19:03  54  ,aud_g06
04:19:03  55  ,aud_g07
04:19:03  56  ,aud_g08
04:19:03  57  ,aud_g09
04:19:03  58  ,aud_g10
04:19:03  59  ,aud_g11
04:19:03  60  ,aud_g12
04:19:03  61  ,aud_g13
04:19:03  62  ,aud_g14
04:19:03  63  ,aud_g15
04:19:03  64  ,aud_g16
04:19:03  65  ,aud_g17
04:19:03  66  ,aud_g18
04:19:03  67  ,aud_g19
04:19:03  68  ,aud_g20
04:19:03  69  ,aud_g21
04:19:03  70  ,aud_g22
04:19:03  71  ,aud_g23
04:19:03  72  ,aud_g24
04:19:03  73  ,aud_g25
04:19:03  74  ,aud_g26
04:19:03  75  ,aud_g27
04:19:03  76  ,aud_g28
04:19:03  77  ,aud_g29
04:19:03  78  ,aud_g30
04:19:03  79  ,aud_g31
04:19:03  80  ,aud_g32
04:19:03  81  ,aud_g33
04:19:03  82  ,aud_g34
04:19:03  83  ,aud_g35
04:19:03  84  ,aud_g36
04:19:03  85  ,aud_g37
04:19:03  86  ,aud_g38
04:19:03  87  ,aud_g39
04:19:03  88  ,aud_g40
04:19:03  89  ,aud_g41
04:19:03  90  ,gbp_g00
04:19:03  91  ,gbp_g01
04:19:03  92  ,gbp_g02
04:19:03  93  ,gbp_g03
04:19:03  94  ,gbp_g04
04:19:03  95  ,gbp_g05
04:19:03  96  ,gbp_g06
04:19:03  97  ,gbp_g07
04:19:03  98  ,gbp_g08
04:19:03  99  ,gbp_g09
04:19:03 100  ,gbp_g10
04:19:03 101  ,gbp_g11
04:19:03 102  ,gbp_g12
04:19:03 103  ,gbp_g13
04:19:03 104  ,gbp_g14
04:19:03 105  ,gbp_g15
04:19:03 106  ,gbp_g16
04:19:03 107  ,gbp_g17
04:19:03 108  ,gbp_g18
04:19:03 109  ,gbp_g19
04:19:03 110  ,gbp_g20
04:19:03 111  ,gbp_g21
04:19:03 112  ,gbp_g22
04:19:03 113  ,gbp_g23
04:19:03 114  ,gbp_g24
04:19:03 115  ,gbp_g25
04:19:03 116  ,gbp_g26
04:19:03 117  ,gbp_g27
04:19:03 118  ,gbp_g28
04:19:03 119  ,gbp_g29
04:19:03 120  ,gbp_g30
04:19:03 121  ,gbp_g31
04:19:03 122  ,gbp_g32
04:19:03 123  ,gbp_g33
04:19:03 124  ,gbp_g34
04:19:03 125  ,gbp_g35
04:19:03 126  ,gbp_g36
04:19:03 127  ,gbp_g37
04:19:03 128  ,gbp_g38
04:19:03 129  ,gbp_g39
04:19:03 130  ,gbp_g40
04:19:03 131  ,gbp_g41
04:19:03 132  ,jpy_g00
04:19:03 133  ,jpy_g01
04:19:03 134  ,jpy_g02
04:19:03 135  ,jpy_g03
04:19:03 136  ,jpy_g04
04:19:03 137  ,jpy_g05
04:19:03 138  ,jpy_g06
04:19:03 139  ,jpy_g07
04:19:03 140  ,jpy_g08
04:19:03 141  ,jpy_g09
04:19:03 142  ,jpy_g10
04:19:03 143  ,jpy_g11
04:19:03 144  ,jpy_g12
04:19:03 145  ,jpy_g13
04:19:03 146  ,jpy_g14
04:19:03 147  ,jpy_g15
04:19:03 148  ,jpy_g16
04:19:03 149  ,jpy_g17
04:19:03 150  ,jpy_g18
04:19:03 151  ,jpy_g19
04:19:03 152  ,jpy_g20
04:19:03 153  ,jpy_g21
04:19:03 154  ,jpy_g22
04:19:03 155  ,jpy_g23
04:19:03 156  ,jpy_g24
04:19:03 157  ,jpy_g25
04:19:03 158  ,jpy_g26
04:19:03 159  ,jpy_g27
04:19:03 160  ,jpy_g28
04:19:03 161  ,jpy_g29
04:19:03 162  ,jpy_g30
04:19:03 163  ,jpy_g31
04:19:03 164  ,jpy_g32
04:19:03 165  ,jpy_g33
04:19:03 166  ,jpy_g34
04:19:03 167  ,jpy_g35
04:19:03 168  ,jpy_g36
04:19:03 169  ,jpy_g37
04:19:03 170  ,jpy_g38
04:19:03 171  ,jpy_g39
04:19:03 172  ,jpy_g40
04:19:03 173  ,jpy_g41
04:19:03 174  ,cad_g00
04:19:03 175  ,cad_g01
04:19:03 176  ,cad_g02
04:19:03 177  ,cad_g03
04:19:03 178  ,cad_g04
04:19:03 179  ,cad_g05
04:19:03 180  ,cad_g06
04:19:03 181  ,cad_g07
04:19:03 182  ,cad_g08
04:19:03 183  ,cad_g09
04:19:03 184  ,cad_g10
04:19:03 185  ,cad_g11
04:19:03 186  ,cad_g12
04:19:03 187  ,cad_g13
04:19:03 188  ,cad_g14
04:19:03 189  ,cad_g15
04:19:03 190  ,cad_g16
04:19:03 191  ,cad_g17
04:19:03 192  ,cad_g18
04:19:03 193  ,cad_g19
04:19:03 194  ,cad_g20
04:19:03 195  ,cad_g21
04:19:03 196  ,cad_g22
04:19:03 197  ,cad_g23
04:19:03 198  ,cad_g24
04:19:03 199  ,cad_g25
04:19:03 200  ,cad_g26
04:19:03 201  ,cad_g27
04:19:03 202  ,cad_g28
04:19:03 203  ,cad_g29
04:19:03 204  ,cad_g30
04:19:03 205  ,cad_g31
04:19:03 206  ,cad_g32
04:19:03 207  ,cad_g33
04:19:03 208  ,cad_g34
04:19:03 209  ,cad_g35
04:19:03 210  ,cad_g36
04:19:03 211  ,cad_g37
04:19:03 212  ,cad_g38
04:19:03 213  ,cad_g39
04:19:03 214  ,cad_g40
04:19:03 215  ,cad_g41
04:19:03 216  ,chf_g00
04:19:03 217  ,chf_g01
04:19:03 218  ,chf_g02
04:19:03 219  ,chf_g03
04:19:03 220  ,chf_g04
04:19:03 221  ,chf_g05
04:19:03 222  ,chf_g06
04:19:03 223  ,chf_g07
04:19:03 224  ,chf_g08
04:19:03 225  ,chf_g09
04:19:03 226  ,chf_g10
04:19:03 227  ,chf_g11
04:19:03 228  ,chf_g12
04:19:03 229  ,chf_g13
04:19:03 230  ,chf_g14
04:19:03 231  ,chf_g15
04:19:03 232  ,chf_g16
04:19:03 233  ,chf_g17
04:19:03 234  ,chf_g18
04:19:03 235  ,chf_g19
04:19:03 236  ,chf_g20
04:19:03 237  ,chf_g21
04:19:03 238  ,chf_g22
04:19:03 239  ,chf_g23
04:19:03 240  ,chf_g24
04:19:03 241  ,chf_g25
04:19:03 242  ,chf_g26
04:19:03 243  ,chf_g27
04:19:03 244  ,chf_g28
04:19:03 245  ,chf_g29
04:19:03 246  ,chf_g30
04:19:03 247  ,chf_g31
04:19:03 248  ,chf_g32
04:19:03 249  ,chf_g33
04:19:03 250  ,chf_g34
04:19:03 251  ,chf_g35
04:19:03 252  ,chf_g36
04:19:03 253  ,chf_g37
04:19:03 254  ,chf_g38
04:19:03 255  ,chf_g39
04:19:03 256  ,chf_g40
04:19:03 257  ,chf_g41
04:19:03 258  FROM aud_ms6 m
04:19:03 259  WHERE gattn IN('nup','up')
04:19:03 260  AND 1+m.ydate < '&1'||' '||'&2'
04:19:03 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'03:55:00'

View created.

Elapsed: 00:00:00.12
04:19:03 SQL> 
04:19:03 SQL> -- rpt
04:19:03 SQL> 
04:19:03 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13155
up	     6382

Elapsed: 00:00:00.04
04:19:03 SQL> 
04:19:03 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 03:50:00

Elapsed: 00:00:00.04
04:19:03 SQL> 
04:19:03 SQL> -- Now build model from bme and score sme
04:19:03 SQL> @score1gattn.sql
04:19:03 SQL> -- score1gattn.sql
04:19:03 SQL> 
04:19:03 SQL> -- Does the 1st SVM score
04:19:03 SQL> 
04:19:03 SQL> -- Fill up svmc_apply_prep
04:19:03 SQL> @score_gattn.sql
04:19:03 SQL> --
04:19:03 SQL> -- score_gattn.sql
04:19:03 SQL> --
04:19:03 SQL> 
04:19:03 SQL> -- usage: score_gattn.sql
04:19:03 SQL> 
04:19:03 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
04:19:03 SQL> 
04:19:03 SQL> DEFINE target	= 'gattn'
04:19:03 SQL> DEFINE model_name = 'forex14'
04:19:03 SQL> DEFINE bldtable	= 'bme'
04:19:03 SQL> DEFINE scoretable = 'sme'
04:19:03 SQL> DEFINE case_id	= 'prdate'
04:19:03 SQL> 
04:19:03 SQL> -- Define a variable to help me exclude some columns from some data mining calls
04:19:03 SQL> DEFINE exclude1 = "'&target','&case_id'"
04:19:03 SQL> 
04:19:03 SQL> -- Builds an SVM model using pl/sql.
04:19:03 SQL> 
04:19:03 SQL> -----------------------------------------------------------------------
04:19:03 SQL> --			    BUILD THE MODEL
04:19:03 SQL> -----------------------------------------------------------------------
04:19:03 SQL> 
04:19:03 SQL> -- Cleanup old build data preparation objects for repeat runs
04:19:03 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
04:19:03 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
04:19:03 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
04:19:03 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
04:19:03 SQL> 
04:19:03 SQL> 
04:19:03 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
04:19:03 SQL> --
04:19:03 SQL> -- DROP	TABLE svmc_settings ;
04:19:03 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
04:19:03 SQL> -- DELETE svmc_settings;
04:19:03 SQL> 
04:19:03 SQL> -- The default classification algorithm is Naive Bayes. So override
04:19:03 SQL> -- this choice to SVM using a settings table.
04:19:03 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
04:19:03 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
04:19:03 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
04:19:03 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
04:19:03 SQL> -- models.
04:19:03 SQL> --
04:19:03 SQL> 
04:19:03 SQL> -- Do this once and then comment it out.
04:19:03 SQL> -- That makes script go faster.
04:19:03 SQL> -- BEGIN
04:19:03 SQL> -- -- Populate settings table
04:19:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:19:03 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
04:19:03 SQL> --
04:19:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:19:03 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
04:19:03 SQL> --
04:19:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:19:03 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
04:19:03 SQL> --   COMMIT;
04:19:03 SQL> -- END;
04:19:03 SQL> -- /
04:19:03 SQL> 
04:19:03 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
04:19:03 SQL> 
04:19:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
04:19:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:19:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:19:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
04:19:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:19:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:19:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
04:19:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:19:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.14
04:19:03 SQL> 
04:19:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
04:19:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:19:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:19:03 SQL> 
04:19:03 SQL> --------------------------------
04:19:03 SQL> -- PREPARE BUILD (TRAINING) DATA
04:19:03 SQL> --
04:19:03 SQL> 
04:19:03 SQL> -- 1. Missing Value treatment for all Predictors and
04:19:03 SQL> -- 2. Outlier Treatment and
04:19:03 SQL> -- 3. Normalization are performed below.
04:19:03 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
04:19:03 SQL> --    normalized here.
04:19:03 SQL> 
04:19:03 SQL> BEGIN
04:19:03   2  	-- Perform missing value treatment for all predictors
04:19:03   3  	-- create miss tables
04:19:03   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
04:19:03   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
04:19:03   6  
04:19:03   7  	-- populate miss tables
04:19:03   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
04:19:03   9  	  miss_table_name => 'svmc_miss_num',
04:19:03  10  	  data_table_name => '&bldtable',
04:19:03  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:19:03  12  
04:19:03  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
04:19:03  14  	  miss_table_name => 'svmc_miss_cat',
04:19:03  15  	  data_table_name => '&bldtable',
04:19:03  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:19:03  17  
04:19:03  18  	-- xform input data to replace missing values
04:19:03  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:19:03  20  	  miss_table_name => 'svmc_miss_num',
04:19:03  21  	  data_table_name => '&bldtable',
04:19:03  22  	  xform_view_name => 'xformed_build_miss_num');
04:19:03  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:19:03  24  	  miss_table_name => 'svmc_miss_cat',
04:19:03  25  	  data_table_name => '&bldtable',
04:19:03  26  	  xform_view_name => 'xformed_build_miss_cat');
04:19:03  27  
04:19:03  28  	-- Perform outlier treatment.
04:19:03  29  	-- create clip table
04:19:03  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
04:19:03  31  
04:19:03  32  	-- populate clip table
04:19:03  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
04:19:03  34  	  clip_table_name => 'svmc_clip',
04:19:03  35  	  data_table_name => '&bldtable',
04:19:03  36  	  tail_frac	  => 0.025,
04:19:03  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:19:03  38  
04:19:03  39  	-- xform input data to winsorized data
04:19:03  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
04:19:03  41  	  clip_table_name => 'svmc_clip',
04:19:03  42  	  data_table_name => '&bldtable',
04:19:03  43  	  xform_view_name => 'svmc_winsor');
04:19:03  44  
04:19:03  45  	-- create normalization table
04:19:03  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
04:19:03  47  
04:19:03  48  	-- populate normalization table based on winsorized data
04:19:03  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
04:19:03  50  	  norm_table_name => 'svmc_norm',
04:19:03  51  	  data_table_name => 'svmc_winsor',
04:19:03  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:19:03  53  
04:19:03  54  	-- normalize the original data
04:19:03  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:19:03  56  	  norm_table_name => 'svmc_norm',
04:19:03  57  	  data_table_name => '&bldtable',
04:19:03  58  	  xform_view_name => 'svmc_build_prep');
04:19:03  59  END;
04:19:03  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.13
04:19:21 SQL> 
04:19:21 SQL> ---------------------
04:19:21 SQL> -- CREATE A NEW MODEL
04:19:21 SQL> --
04:19:21 SQL> -- Cleanup old model with the same name for repeat runs
04:19:21 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
04:19:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:19:21   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.91
04:19:22 SQL> 
04:19:22 SQL> -- Build a new SVM Model
04:19:22 SQL> BEGIN
04:19:22   2  	DBMS_DATA_MINING.CREATE_MODEL(
04:19:22   3  	  model_name	      => '&model_name',
04:19:22   4  	  mining_function     => dbms_data_mining.classification,
04:19:22   5  	  data_table_name     => 'svmc_build_prep',
04:19:22   6  	  case_id_column_name => '&case_id',
04:19:22   7  	  target_column_name  => '&target',
04:19:22   8  	  settings_table_name => 'svmc_settings');
04:19:22   9  END;
04:19:22  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:30.23
04:19:53 SQL> 
04:19:53 SQL> -----------------------------------------------------------------------
04:19:53 SQL> --			       APPLY/score THE MODEL
04:19:53 SQL> -----------------------------------------------------------------------
04:19:53 SQL> 
04:19:53 SQL> -- Cleanup old scoring data preparation objects for repeat runs
04:19:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
04:19:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:19:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:19:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
04:19:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:19:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:19:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
04:19:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:19:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:19:53 SQL> -----------------------
04:19:53 SQL> -- PREPARE SCORING DATA
04:19:53 SQL> --
04:19:53 SQL> -- If the data for model creation has been prepared, then the data
04:19:53 SQL> -- to be scored using the model must be prepared in the same manner
04:19:53 SQL> -- in order to obtain meaningful results.
04:19:53 SQL> --
04:19:53 SQL> -- 1. Missing Value treatment for all Predictors and
04:19:53 SQL> -- 2. Normalization
04:19:53 SQL> -- No outlier treatment will be performed during test and apply. The
04:19:53 SQL> -- normalization step is sufficient, since the normalization parameters
04:19:53 SQL> -- already capture the effects of outlier treatment done with build data.
04:19:53 SQL> --
04:19:53 SQL> BEGIN
04:19:53   2  	-- Xform Test data to replace missing values
04:19:53   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:19:53   4  	  miss_table_name => 'svmc_miss_num',
04:19:53   5  	  data_table_name => '&scoretable',
04:19:53   6  	  xform_view_name => 'xformed_apply_miss_num');
04:19:53   7  
04:19:53   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:19:53   9  	  miss_table_name => 'svmc_miss_cat',
04:19:53  10  	  data_table_name => '&scoretable',
04:19:53  11  	  xform_view_name => 'xformed_apply_miss_cat');
04:19:53  12  
04:19:53  13  	-- Normalize the data to be scored
04:19:53  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:19:53  15  	  norm_table_name => 'svmc_norm',
04:19:53  16  	  data_table_name => '&scoretable',
04:19:53  17  	  xform_view_name => 'svmc_apply_prep');
04:19:53  18  END;
04:19:53  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
04:19:54 SQL> 
04:19:54 SQL> -- Use same model_name used in score_gattn.sql
04:19:54 SQL> DEFINE model_name = 'forex14'
04:19:54 SQL> 
04:19:54 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
04:19:54 SQL> 
04:19:54 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
04:19:54   2  SELECT
04:19:54   3  prdate
04:19:54   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
04:19:54   5  ,sysdate
04:19:54   6  ,SUBSTR(prdate,1,3)pair
04:19:54   7  ,SUBSTR(prdate,4,19)ydate
04:19:54   8  FROM svmc_apply_prep
04:19:54   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
04:19:54 SQL> @aud_score1day_gattn.sql	2010-12-31 04:00:00
04:19:54 SQL> --
04:19:54 SQL> -- aud_score1day_gattn.sql
04:19:54 SQL> --
04:19:54 SQL> 
04:19:54 SQL> CREATE OR REPLACE VIEW sme AS
04:19:54   2  SELECT
04:19:54   3  'aud'||m.ydate prdate
04:19:54   4  ,NULL gattn
04:19:54   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:19:54   6  ,eur_g00
04:19:54   7  ,eur_g01
04:19:54   8  ,eur_g02
04:19:54   9  ,eur_g03
04:19:54  10  ,eur_g04
04:19:54  11  ,eur_g05
04:19:54  12  ,eur_g06
04:19:54  13  ,eur_g07
04:19:54  14  ,eur_g08
04:19:54  15  ,eur_g09
04:19:54  16  ,eur_g10
04:19:54  17  ,eur_g11
04:19:54  18  ,eur_g12
04:19:54  19  ,eur_g13
04:19:54  20  ,eur_g14
04:19:54  21  ,eur_g15
04:19:54  22  ,eur_g16
04:19:54  23  ,eur_g17
04:19:54  24  ,eur_g18
04:19:54  25  ,eur_g19
04:19:54  26  ,eur_g20
04:19:54  27  ,eur_g21
04:19:54  28  ,eur_g22
04:19:54  29  ,eur_g23
04:19:54  30  ,eur_g24
04:19:54  31  ,eur_g25
04:19:54  32  ,eur_g26
04:19:54  33  ,eur_g27
04:19:54  34  ,eur_g28
04:19:54  35  ,eur_g29
04:19:54  36  ,eur_g30
04:19:54  37  ,eur_g31
04:19:54  38  ,eur_g32
04:19:54  39  ,eur_g33
04:19:54  40  ,eur_g34
04:19:54  41  ,eur_g35
04:19:54  42  ,eur_g36
04:19:54  43  ,eur_g37
04:19:54  44  ,eur_g38
04:19:54  45  ,eur_g39
04:19:54  46  ,eur_g40
04:19:54  47  ,eur_g41
04:19:54  48  ,aud_g00
04:19:54  49  ,aud_g01
04:19:54  50  ,aud_g02
04:19:54  51  ,aud_g03
04:19:54  52  ,aud_g04
04:19:54  53  ,aud_g05
04:19:54  54  ,aud_g06
04:19:54  55  ,aud_g07
04:19:54  56  ,aud_g08
04:19:54  57  ,aud_g09
04:19:54  58  ,aud_g10
04:19:54  59  ,aud_g11
04:19:54  60  ,aud_g12
04:19:54  61  ,aud_g13
04:19:54  62  ,aud_g14
04:19:54  63  ,aud_g15
04:19:54  64  ,aud_g16
04:19:54  65  ,aud_g17
04:19:54  66  ,aud_g18
04:19:54  67  ,aud_g19
04:19:54  68  ,aud_g20
04:19:54  69  ,aud_g21
04:19:54  70  ,aud_g22
04:19:54  71  ,aud_g23
04:19:54  72  ,aud_g24
04:19:54  73  ,aud_g25
04:19:54  74  ,aud_g26
04:19:54  75  ,aud_g27
04:19:54  76  ,aud_g28
04:19:54  77  ,aud_g29
04:19:54  78  ,aud_g30
04:19:54  79  ,aud_g31
04:19:54  80  ,aud_g32
04:19:54  81  ,aud_g33
04:19:54  82  ,aud_g34
04:19:54  83  ,aud_g35
04:19:54  84  ,aud_g36
04:19:54  85  ,aud_g37
04:19:54  86  ,aud_g38
04:19:54  87  ,aud_g39
04:19:54  88  ,aud_g40
04:19:54  89  ,aud_g41
04:19:54  90  ,gbp_g00
04:19:54  91  ,gbp_g01
04:19:54  92  ,gbp_g02
04:19:54  93  ,gbp_g03
04:19:54  94  ,gbp_g04
04:19:54  95  ,gbp_g05
04:19:54  96  ,gbp_g06
04:19:54  97  ,gbp_g07
04:19:54  98  ,gbp_g08
04:19:54  99  ,gbp_g09
04:19:54 100  ,gbp_g10
04:19:54 101  ,gbp_g11
04:19:54 102  ,gbp_g12
04:19:54 103  ,gbp_g13
04:19:54 104  ,gbp_g14
04:19:54 105  ,gbp_g15
04:19:54 106  ,gbp_g16
04:19:54 107  ,gbp_g17
04:19:54 108  ,gbp_g18
04:19:54 109  ,gbp_g19
04:19:54 110  ,gbp_g20
04:19:54 111  ,gbp_g21
04:19:54 112  ,gbp_g22
04:19:54 113  ,gbp_g23
04:19:54 114  ,gbp_g24
04:19:54 115  ,gbp_g25
04:19:54 116  ,gbp_g26
04:19:54 117  ,gbp_g27
04:19:54 118  ,gbp_g28
04:19:54 119  ,gbp_g29
04:19:54 120  ,gbp_g30
04:19:54 121  ,gbp_g31
04:19:54 122  ,gbp_g32
04:19:54 123  ,gbp_g33
04:19:54 124  ,gbp_g34
04:19:54 125  ,gbp_g35
04:19:54 126  ,gbp_g36
04:19:54 127  ,gbp_g37
04:19:54 128  ,gbp_g38
04:19:54 129  ,gbp_g39
04:19:54 130  ,gbp_g40
04:19:54 131  ,gbp_g41
04:19:54 132  ,jpy_g00
04:19:54 133  ,jpy_g01
04:19:54 134  ,jpy_g02
04:19:54 135  ,jpy_g03
04:19:54 136  ,jpy_g04
04:19:54 137  ,jpy_g05
04:19:54 138  ,jpy_g06
04:19:54 139  ,jpy_g07
04:19:54 140  ,jpy_g08
04:19:54 141  ,jpy_g09
04:19:54 142  ,jpy_g10
04:19:54 143  ,jpy_g11
04:19:54 144  ,jpy_g12
04:19:54 145  ,jpy_g13
04:19:54 146  ,jpy_g14
04:19:54 147  ,jpy_g15
04:19:54 148  ,jpy_g16
04:19:54 149  ,jpy_g17
04:19:54 150  ,jpy_g18
04:19:54 151  ,jpy_g19
04:19:54 152  ,jpy_g20
04:19:54 153  ,jpy_g21
04:19:54 154  ,jpy_g22
04:19:54 155  ,jpy_g23
04:19:54 156  ,jpy_g24
04:19:54 157  ,jpy_g25
04:19:54 158  ,jpy_g26
04:19:54 159  ,jpy_g27
04:19:54 160  ,jpy_g28
04:19:54 161  ,jpy_g29
04:19:54 162  ,jpy_g30
04:19:54 163  ,jpy_g31
04:19:54 164  ,jpy_g32
04:19:54 165  ,jpy_g33
04:19:54 166  ,jpy_g34
04:19:54 167  ,jpy_g35
04:19:54 168  ,jpy_g36
04:19:54 169  ,jpy_g37
04:19:54 170  ,jpy_g38
04:19:54 171  ,jpy_g39
04:19:54 172  ,jpy_g40
04:19:54 173  ,jpy_g41
04:19:54 174  ,cad_g00
04:19:54 175  ,cad_g01
04:19:54 176  ,cad_g02
04:19:54 177  ,cad_g03
04:19:54 178  ,cad_g04
04:19:54 179  ,cad_g05
04:19:54 180  ,cad_g06
04:19:54 181  ,cad_g07
04:19:54 182  ,cad_g08
04:19:54 183  ,cad_g09
04:19:54 184  ,cad_g10
04:19:54 185  ,cad_g11
04:19:54 186  ,cad_g12
04:19:54 187  ,cad_g13
04:19:54 188  ,cad_g14
04:19:54 189  ,cad_g15
04:19:54 190  ,cad_g16
04:19:54 191  ,cad_g17
04:19:54 192  ,cad_g18
04:19:54 193  ,cad_g19
04:19:54 194  ,cad_g20
04:19:54 195  ,cad_g21
04:19:54 196  ,cad_g22
04:19:54 197  ,cad_g23
04:19:54 198  ,cad_g24
04:19:54 199  ,cad_g25
04:19:54 200  ,cad_g26
04:19:54 201  ,cad_g27
04:19:54 202  ,cad_g28
04:19:54 203  ,cad_g29
04:19:54 204  ,cad_g30
04:19:54 205  ,cad_g31
04:19:54 206  ,cad_g32
04:19:54 207  ,cad_g33
04:19:54 208  ,cad_g34
04:19:54 209  ,cad_g35
04:19:54 210  ,cad_g36
04:19:54 211  ,cad_g37
04:19:54 212  ,cad_g38
04:19:54 213  ,cad_g39
04:19:54 214  ,cad_g40
04:19:54 215  ,cad_g41
04:19:54 216  ,chf_g00
04:19:54 217  ,chf_g01
04:19:54 218  ,chf_g02
04:19:54 219  ,chf_g03
04:19:54 220  ,chf_g04
04:19:54 221  ,chf_g05
04:19:54 222  ,chf_g06
04:19:54 223  ,chf_g07
04:19:54 224  ,chf_g08
04:19:54 225  ,chf_g09
04:19:54 226  ,chf_g10
04:19:54 227  ,chf_g11
04:19:54 228  ,chf_g12
04:19:54 229  ,chf_g13
04:19:54 230  ,chf_g14
04:19:54 231  ,chf_g15
04:19:54 232  ,chf_g16
04:19:54 233  ,chf_g17
04:19:54 234  ,chf_g18
04:19:54 235  ,chf_g19
04:19:54 236  ,chf_g20
04:19:54 237  ,chf_g21
04:19:54 238  ,chf_g22
04:19:54 239  ,chf_g23
04:19:54 240  ,chf_g24
04:19:54 241  ,chf_g25
04:19:54 242  ,chf_g26
04:19:54 243  ,chf_g27
04:19:54 244  ,chf_g28
04:19:54 245  ,chf_g29
04:19:54 246  ,chf_g30
04:19:54 247  ,chf_g31
04:19:54 248  ,chf_g32
04:19:54 249  ,chf_g33
04:19:54 250  ,chf_g34
04:19:54 251  ,chf_g35
04:19:54 252  ,chf_g36
04:19:54 253  ,chf_g37
04:19:54 254  ,chf_g38
04:19:54 255  ,chf_g39
04:19:54 256  ,chf_g40
04:19:54 257  ,chf_g41
04:19:54 258  FROM aud_ms6 m
04:19:54 259  WHERE m.ydate = '&1'||' '||'&2'
04:19:54 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'04:00:00'

View created.

Elapsed: 00:00:00.11
04:19:54 SQL> 
04:19:54 SQL> -- rpt
04:19:54 SQL> -- We should see just 1 row:
04:19:54 SQL> 
04:19:54 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
04:19:54 SQL> 
04:19:54 SQL> -- Build the model:
04:19:54 SQL> CREATE OR REPLACE VIEW bme AS
04:19:54   2  SELECT
04:19:54   3  'aud'||m.ydate prdate
04:19:54   4  ,gattn
04:19:54   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:19:54   6  ,eur_g00
04:19:54   7  ,eur_g01
04:19:54   8  ,eur_g02
04:19:54   9  ,eur_g03
04:19:54  10  ,eur_g04
04:19:54  11  ,eur_g05
04:19:54  12  ,eur_g06
04:19:54  13  ,eur_g07
04:19:54  14  ,eur_g08
04:19:54  15  ,eur_g09
04:19:54  16  ,eur_g10
04:19:54  17  ,eur_g11
04:19:54  18  ,eur_g12
04:19:54  19  ,eur_g13
04:19:54  20  ,eur_g14
04:19:54  21  ,eur_g15
04:19:54  22  ,eur_g16
04:19:54  23  ,eur_g17
04:19:54  24  ,eur_g18
04:19:54  25  ,eur_g19
04:19:54  26  ,eur_g20
04:19:54  27  ,eur_g21
04:19:54  28  ,eur_g22
04:19:54  29  ,eur_g23
04:19:54  30  ,eur_g24
04:19:54  31  ,eur_g25
04:19:54  32  ,eur_g26
04:19:54  33  ,eur_g27
04:19:54  34  ,eur_g28
04:19:54  35  ,eur_g29
04:19:54  36  ,eur_g30
04:19:54  37  ,eur_g31
04:19:54  38  ,eur_g32
04:19:54  39  ,eur_g33
04:19:54  40  ,eur_g34
04:19:54  41  ,eur_g35
04:19:54  42  ,eur_g36
04:19:54  43  ,eur_g37
04:19:54  44  ,eur_g38
04:19:54  45  ,eur_g39
04:19:54  46  ,eur_g40
04:19:54  47  ,eur_g41
04:19:54  48  ,aud_g00
04:19:54  49  ,aud_g01
04:19:54  50  ,aud_g02
04:19:54  51  ,aud_g03
04:19:54  52  ,aud_g04
04:19:54  53  ,aud_g05
04:19:54  54  ,aud_g06
04:19:54  55  ,aud_g07
04:19:54  56  ,aud_g08
04:19:54  57  ,aud_g09
04:19:54  58  ,aud_g10
04:19:54  59  ,aud_g11
04:19:54  60  ,aud_g12
04:19:54  61  ,aud_g13
04:19:54  62  ,aud_g14
04:19:54  63  ,aud_g15
04:19:54  64  ,aud_g16
04:19:54  65  ,aud_g17
04:19:54  66  ,aud_g18
04:19:54  67  ,aud_g19
04:19:54  68  ,aud_g20
04:19:54  69  ,aud_g21
04:19:54  70  ,aud_g22
04:19:54  71  ,aud_g23
04:19:54  72  ,aud_g24
04:19:54  73  ,aud_g25
04:19:54  74  ,aud_g26
04:19:54  75  ,aud_g27
04:19:54  76  ,aud_g28
04:19:54  77  ,aud_g29
04:19:54  78  ,aud_g30
04:19:54  79  ,aud_g31
04:19:54  80  ,aud_g32
04:19:54  81  ,aud_g33
04:19:54  82  ,aud_g34
04:19:54  83  ,aud_g35
04:19:54  84  ,aud_g36
04:19:54  85  ,aud_g37
04:19:54  86  ,aud_g38
04:19:54  87  ,aud_g39
04:19:54  88  ,aud_g40
04:19:54  89  ,aud_g41
04:19:54  90  ,gbp_g00
04:19:54  91  ,gbp_g01
04:19:54  92  ,gbp_g02
04:19:54  93  ,gbp_g03
04:19:54  94  ,gbp_g04
04:19:54  95  ,gbp_g05
04:19:54  96  ,gbp_g06
04:19:54  97  ,gbp_g07
04:19:54  98  ,gbp_g08
04:19:54  99  ,gbp_g09
04:19:54 100  ,gbp_g10
04:19:54 101  ,gbp_g11
04:19:54 102  ,gbp_g12
04:19:54 103  ,gbp_g13
04:19:54 104  ,gbp_g14
04:19:54 105  ,gbp_g15
04:19:54 106  ,gbp_g16
04:19:54 107  ,gbp_g17
04:19:54 108  ,gbp_g18
04:19:54 109  ,gbp_g19
04:19:54 110  ,gbp_g20
04:19:54 111  ,gbp_g21
04:19:54 112  ,gbp_g22
04:19:54 113  ,gbp_g23
04:19:54 114  ,gbp_g24
04:19:54 115  ,gbp_g25
04:19:54 116  ,gbp_g26
04:19:54 117  ,gbp_g27
04:19:54 118  ,gbp_g28
04:19:54 119  ,gbp_g29
04:19:54 120  ,gbp_g30
04:19:54 121  ,gbp_g31
04:19:54 122  ,gbp_g32
04:19:54 123  ,gbp_g33
04:19:54 124  ,gbp_g34
04:19:54 125  ,gbp_g35
04:19:54 126  ,gbp_g36
04:19:54 127  ,gbp_g37
04:19:54 128  ,gbp_g38
04:19:54 129  ,gbp_g39
04:19:54 130  ,gbp_g40
04:19:54 131  ,gbp_g41
04:19:54 132  ,jpy_g00
04:19:54 133  ,jpy_g01
04:19:54 134  ,jpy_g02
04:19:54 135  ,jpy_g03
04:19:54 136  ,jpy_g04
04:19:54 137  ,jpy_g05
04:19:54 138  ,jpy_g06
04:19:54 139  ,jpy_g07
04:19:54 140  ,jpy_g08
04:19:54 141  ,jpy_g09
04:19:54 142  ,jpy_g10
04:19:54 143  ,jpy_g11
04:19:54 144  ,jpy_g12
04:19:54 145  ,jpy_g13
04:19:54 146  ,jpy_g14
04:19:54 147  ,jpy_g15
04:19:54 148  ,jpy_g16
04:19:54 149  ,jpy_g17
04:19:54 150  ,jpy_g18
04:19:54 151  ,jpy_g19
04:19:54 152  ,jpy_g20
04:19:54 153  ,jpy_g21
04:19:54 154  ,jpy_g22
04:19:54 155  ,jpy_g23
04:19:54 156  ,jpy_g24
04:19:54 157  ,jpy_g25
04:19:54 158  ,jpy_g26
04:19:54 159  ,jpy_g27
04:19:54 160  ,jpy_g28
04:19:54 161  ,jpy_g29
04:19:54 162  ,jpy_g30
04:19:54 163  ,jpy_g31
04:19:54 164  ,jpy_g32
04:19:54 165  ,jpy_g33
04:19:54 166  ,jpy_g34
04:19:54 167  ,jpy_g35
04:19:54 168  ,jpy_g36
04:19:54 169  ,jpy_g37
04:19:54 170  ,jpy_g38
04:19:54 171  ,jpy_g39
04:19:54 172  ,jpy_g40
04:19:54 173  ,jpy_g41
04:19:54 174  ,cad_g00
04:19:54 175  ,cad_g01
04:19:54 176  ,cad_g02
04:19:54 177  ,cad_g03
04:19:54 178  ,cad_g04
04:19:54 179  ,cad_g05
04:19:54 180  ,cad_g06
04:19:54 181  ,cad_g07
04:19:54 182  ,cad_g08
04:19:54 183  ,cad_g09
04:19:54 184  ,cad_g10
04:19:54 185  ,cad_g11
04:19:54 186  ,cad_g12
04:19:54 187  ,cad_g13
04:19:54 188  ,cad_g14
04:19:54 189  ,cad_g15
04:19:54 190  ,cad_g16
04:19:54 191  ,cad_g17
04:19:54 192  ,cad_g18
04:19:54 193  ,cad_g19
04:19:54 194  ,cad_g20
04:19:54 195  ,cad_g21
04:19:54 196  ,cad_g22
04:19:54 197  ,cad_g23
04:19:54 198  ,cad_g24
04:19:54 199  ,cad_g25
04:19:54 200  ,cad_g26
04:19:54 201  ,cad_g27
04:19:54 202  ,cad_g28
04:19:54 203  ,cad_g29
04:19:54 204  ,cad_g30
04:19:54 205  ,cad_g31
04:19:54 206  ,cad_g32
04:19:54 207  ,cad_g33
04:19:54 208  ,cad_g34
04:19:54 209  ,cad_g35
04:19:54 210  ,cad_g36
04:19:54 211  ,cad_g37
04:19:54 212  ,cad_g38
04:19:54 213  ,cad_g39
04:19:54 214  ,cad_g40
04:19:54 215  ,cad_g41
04:19:54 216  ,chf_g00
04:19:54 217  ,chf_g01
04:19:54 218  ,chf_g02
04:19:54 219  ,chf_g03
04:19:54 220  ,chf_g04
04:19:54 221  ,chf_g05
04:19:54 222  ,chf_g06
04:19:54 223  ,chf_g07
04:19:54 224  ,chf_g08
04:19:54 225  ,chf_g09
04:19:54 226  ,chf_g10
04:19:54 227  ,chf_g11
04:19:54 228  ,chf_g12
04:19:54 229  ,chf_g13
04:19:54 230  ,chf_g14
04:19:54 231  ,chf_g15
04:19:54 232  ,chf_g16
04:19:54 233  ,chf_g17
04:19:54 234  ,chf_g18
04:19:54 235  ,chf_g19
04:19:54 236  ,chf_g20
04:19:54 237  ,chf_g21
04:19:54 238  ,chf_g22
04:19:54 239  ,chf_g23
04:19:54 240  ,chf_g24
04:19:54 241  ,chf_g25
04:19:54 242  ,chf_g26
04:19:54 243  ,chf_g27
04:19:54 244  ,chf_g28
04:19:54 245  ,chf_g29
04:19:54 246  ,chf_g30
04:19:54 247  ,chf_g31
04:19:54 248  ,chf_g32
04:19:54 249  ,chf_g33
04:19:54 250  ,chf_g34
04:19:54 251  ,chf_g35
04:19:54 252  ,chf_g36
04:19:54 253  ,chf_g37
04:19:54 254  ,chf_g38
04:19:54 255  ,chf_g39
04:19:54 256  ,chf_g40
04:19:54 257  ,chf_g41
04:19:54 258  FROM aud_ms6 m
04:19:54 259  WHERE gattn IN('nup','up')
04:19:54 260  AND 1+m.ydate < '&1'||' '||'&2'
04:19:54 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'04:00:00'

View created.

Elapsed: 00:00:00.10
04:19:54 SQL> 
04:19:54 SQL> -- rpt
04:19:54 SQL> 
04:19:54 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13156
up	     6382

Elapsed: 00:00:00.04
04:19:54 SQL> 
04:19:54 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 03:55:00

Elapsed: 00:00:00.04
04:19:55 SQL> 
04:19:55 SQL> -- Now build model from bme and score sme
04:19:55 SQL> @score1gattn.sql
04:19:55 SQL> -- score1gattn.sql
04:19:55 SQL> 
04:19:55 SQL> -- Does the 1st SVM score
04:19:55 SQL> 
04:19:55 SQL> -- Fill up svmc_apply_prep
04:19:55 SQL> @score_gattn.sql
04:19:55 SQL> --
04:19:55 SQL> -- score_gattn.sql
04:19:55 SQL> --
04:19:55 SQL> 
04:19:55 SQL> -- usage: score_gattn.sql
04:19:55 SQL> 
04:19:55 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
04:19:55 SQL> 
04:19:55 SQL> DEFINE target	= 'gattn'
04:19:55 SQL> DEFINE model_name = 'forex14'
04:19:55 SQL> DEFINE bldtable	= 'bme'
04:19:55 SQL> DEFINE scoretable = 'sme'
04:19:55 SQL> DEFINE case_id	= 'prdate'
04:19:55 SQL> 
04:19:55 SQL> -- Define a variable to help me exclude some columns from some data mining calls
04:19:55 SQL> DEFINE exclude1 = "'&target','&case_id'"
04:19:55 SQL> 
04:19:55 SQL> -- Builds an SVM model using pl/sql.
04:19:55 SQL> 
04:19:55 SQL> -----------------------------------------------------------------------
04:19:55 SQL> --			    BUILD THE MODEL
04:19:55 SQL> -----------------------------------------------------------------------
04:19:55 SQL> 
04:19:55 SQL> -- Cleanup old build data preparation objects for repeat runs
04:19:55 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
04:19:55 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
04:19:55 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
04:19:55 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
04:19:55 SQL> 
04:19:55 SQL> 
04:19:55 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
04:19:55 SQL> --
04:19:55 SQL> -- DROP	TABLE svmc_settings ;
04:19:55 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
04:19:55 SQL> -- DELETE svmc_settings;
04:19:55 SQL> 
04:19:55 SQL> -- The default classification algorithm is Naive Bayes. So override
04:19:55 SQL> -- this choice to SVM using a settings table.
04:19:55 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
04:19:55 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
04:19:55 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
04:19:55 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
04:19:55 SQL> -- models.
04:19:55 SQL> --
04:19:55 SQL> 
04:19:55 SQL> -- Do this once and then comment it out.
04:19:55 SQL> -- That makes script go faster.
04:19:55 SQL> -- BEGIN
04:19:55 SQL> -- -- Populate settings table
04:19:55 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:19:55 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
04:19:55 SQL> --
04:19:55 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:19:55 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
04:19:55 SQL> --
04:19:55 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:19:55 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
04:19:55 SQL> --   COMMIT;
04:19:55 SQL> -- END;
04:19:55 SQL> -- /
04:19:55 SQL> 
04:19:55 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
04:19:55 SQL> 
04:19:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
04:19:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:19:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:19:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
04:19:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:19:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:19:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
04:19:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:19:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:19:55 SQL> 
04:19:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
04:19:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:19:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:19:55 SQL> 
04:19:55 SQL> --------------------------------
04:19:55 SQL> -- PREPARE BUILD (TRAINING) DATA
04:19:55 SQL> --
04:19:55 SQL> 
04:19:55 SQL> -- 1. Missing Value treatment for all Predictors and
04:19:55 SQL> -- 2. Outlier Treatment and
04:19:55 SQL> -- 3. Normalization are performed below.
04:19:55 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
04:19:55 SQL> --    normalized here.
04:19:55 SQL> 
04:19:55 SQL> BEGIN
04:19:55   2  	-- Perform missing value treatment for all predictors
04:19:55   3  	-- create miss tables
04:19:55   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
04:19:55   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
04:19:55   6  
04:19:55   7  	-- populate miss tables
04:19:55   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
04:19:55   9  	  miss_table_name => 'svmc_miss_num',
04:19:55  10  	  data_table_name => '&bldtable',
04:19:55  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:19:55  12  
04:19:55  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
04:19:55  14  	  miss_table_name => 'svmc_miss_cat',
04:19:55  15  	  data_table_name => '&bldtable',
04:19:55  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:19:55  17  
04:19:55  18  	-- xform input data to replace missing values
04:19:55  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:19:55  20  	  miss_table_name => 'svmc_miss_num',
04:19:55  21  	  data_table_name => '&bldtable',
04:19:55  22  	  xform_view_name => 'xformed_build_miss_num');
04:19:55  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:19:55  24  	  miss_table_name => 'svmc_miss_cat',
04:19:55  25  	  data_table_name => '&bldtable',
04:19:55  26  	  xform_view_name => 'xformed_build_miss_cat');
04:19:55  27  
04:19:55  28  	-- Perform outlier treatment.
04:19:55  29  	-- create clip table
04:19:55  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
04:19:55  31  
04:19:55  32  	-- populate clip table
04:19:55  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
04:19:55  34  	  clip_table_name => 'svmc_clip',
04:19:55  35  	  data_table_name => '&bldtable',
04:19:55  36  	  tail_frac	  => 0.025,
04:19:55  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:19:55  38  
04:19:55  39  	-- xform input data to winsorized data
04:19:55  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
04:19:55  41  	  clip_table_name => 'svmc_clip',
04:19:55  42  	  data_table_name => '&bldtable',
04:19:55  43  	  xform_view_name => 'svmc_winsor');
04:19:55  44  
04:19:55  45  	-- create normalization table
04:19:55  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
04:19:55  47  
04:19:55  48  	-- populate normalization table based on winsorized data
04:19:55  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
04:19:55  50  	  norm_table_name => 'svmc_norm',
04:19:55  51  	  data_table_name => 'svmc_winsor',
04:19:55  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:19:55  53  
04:19:55  54  	-- normalize the original data
04:19:55  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:19:55  56  	  norm_table_name => 'svmc_norm',
04:19:55  57  	  data_table_name => '&bldtable',
04:19:55  58  	  xform_view_name => 'svmc_build_prep');
04:19:55  59  END;
04:19:55  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.09
04:20:13 SQL> 
04:20:13 SQL> ---------------------
04:20:13 SQL> -- CREATE A NEW MODEL
04:20:13 SQL> --
04:20:13 SQL> -- Cleanup old model with the same name for repeat runs
04:20:13 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
04:20:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:20:13   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.91
04:20:14 SQL> 
04:20:14 SQL> -- Build a new SVM Model
04:20:14 SQL> BEGIN
04:20:14   2  	DBMS_DATA_MINING.CREATE_MODEL(
04:20:14   3  	  model_name	      => '&model_name',
04:20:14   4  	  mining_function     => dbms_data_mining.classification,
04:20:14   5  	  data_table_name     => 'svmc_build_prep',
04:20:14   6  	  case_id_column_name => '&case_id',
04:20:14   7  	  target_column_name  => '&target',
04:20:14   8  	  settings_table_name => 'svmc_settings');
04:20:14   9  END;
04:20:14  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.70
04:20:43 SQL> 
04:20:43 SQL> -----------------------------------------------------------------------
04:20:43 SQL> --			       APPLY/score THE MODEL
04:20:43 SQL> -----------------------------------------------------------------------
04:20:43 SQL> 
04:20:43 SQL> -- Cleanup old scoring data preparation objects for repeat runs
04:20:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
04:20:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:20:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:20:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
04:20:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:20:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:20:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
04:20:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:20:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:20:44 SQL> -----------------------
04:20:44 SQL> -- PREPARE SCORING DATA
04:20:44 SQL> --
04:20:44 SQL> -- If the data for model creation has been prepared, then the data
04:20:44 SQL> -- to be scored using the model must be prepared in the same manner
04:20:44 SQL> -- in order to obtain meaningful results.
04:20:44 SQL> --
04:20:44 SQL> -- 1. Missing Value treatment for all Predictors and
04:20:44 SQL> -- 2. Normalization
04:20:44 SQL> -- No outlier treatment will be performed during test and apply. The
04:20:44 SQL> -- normalization step is sufficient, since the normalization parameters
04:20:44 SQL> -- already capture the effects of outlier treatment done with build data.
04:20:44 SQL> --
04:20:44 SQL> BEGIN
04:20:44   2  	-- Xform Test data to replace missing values
04:20:44   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:20:44   4  	  miss_table_name => 'svmc_miss_num',
04:20:44   5  	  data_table_name => '&scoretable',
04:20:44   6  	  xform_view_name => 'xformed_apply_miss_num');
04:20:44   7  
04:20:44   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:20:44   9  	  miss_table_name => 'svmc_miss_cat',
04:20:44  10  	  data_table_name => '&scoretable',
04:20:44  11  	  xform_view_name => 'xformed_apply_miss_cat');
04:20:44  12  
04:20:44  13  	-- Normalize the data to be scored
04:20:44  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:20:44  15  	  norm_table_name => 'svmc_norm',
04:20:44  16  	  data_table_name => '&scoretable',
04:20:44  17  	  xform_view_name => 'svmc_apply_prep');
04:20:44  18  END;
04:20:44  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
04:20:45 SQL> 
04:20:45 SQL> -- Use same model_name used in score_gattn.sql
04:20:45 SQL> DEFINE model_name = 'forex14'
04:20:45 SQL> 
04:20:45 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
04:20:45 SQL> 
04:20:45 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
04:20:45   2  SELECT
04:20:45   3  prdate
04:20:45   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
04:20:45   5  ,sysdate
04:20:45   6  ,SUBSTR(prdate,1,3)pair
04:20:45   7  ,SUBSTR(prdate,4,19)ydate
04:20:45   8  FROM svmc_apply_prep
04:20:45   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
04:20:45 SQL> @aud_score1day_gattn.sql	2010-12-31 04:05:00
04:20:45 SQL> --
04:20:45 SQL> -- aud_score1day_gattn.sql
04:20:45 SQL> --
04:20:45 SQL> 
04:20:45 SQL> CREATE OR REPLACE VIEW sme AS
04:20:45   2  SELECT
04:20:45   3  'aud'||m.ydate prdate
04:20:45   4  ,NULL gattn
04:20:45   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:20:45   6  ,eur_g00
04:20:45   7  ,eur_g01
04:20:45   8  ,eur_g02
04:20:45   9  ,eur_g03
04:20:45  10  ,eur_g04
04:20:45  11  ,eur_g05
04:20:45  12  ,eur_g06
04:20:45  13  ,eur_g07
04:20:45  14  ,eur_g08
04:20:45  15  ,eur_g09
04:20:45  16  ,eur_g10
04:20:45  17  ,eur_g11
04:20:45  18  ,eur_g12
04:20:45  19  ,eur_g13
04:20:45  20  ,eur_g14
04:20:45  21  ,eur_g15
04:20:45  22  ,eur_g16
04:20:45  23  ,eur_g17
04:20:45  24  ,eur_g18
04:20:45  25  ,eur_g19
04:20:45  26  ,eur_g20
04:20:45  27  ,eur_g21
04:20:45  28  ,eur_g22
04:20:45  29  ,eur_g23
04:20:45  30  ,eur_g24
04:20:45  31  ,eur_g25
04:20:45  32  ,eur_g26
04:20:45  33  ,eur_g27
04:20:45  34  ,eur_g28
04:20:45  35  ,eur_g29
04:20:45  36  ,eur_g30
04:20:45  37  ,eur_g31
04:20:45  38  ,eur_g32
04:20:45  39  ,eur_g33
04:20:45  40  ,eur_g34
04:20:45  41  ,eur_g35
04:20:45  42  ,eur_g36
04:20:45  43  ,eur_g37
04:20:45  44  ,eur_g38
04:20:45  45  ,eur_g39
04:20:45  46  ,eur_g40
04:20:45  47  ,eur_g41
04:20:45  48  ,aud_g00
04:20:45  49  ,aud_g01
04:20:45  50  ,aud_g02
04:20:45  51  ,aud_g03
04:20:45  52  ,aud_g04
04:20:45  53  ,aud_g05
04:20:45  54  ,aud_g06
04:20:45  55  ,aud_g07
04:20:45  56  ,aud_g08
04:20:45  57  ,aud_g09
04:20:45  58  ,aud_g10
04:20:45  59  ,aud_g11
04:20:45  60  ,aud_g12
04:20:45  61  ,aud_g13
04:20:45  62  ,aud_g14
04:20:45  63  ,aud_g15
04:20:45  64  ,aud_g16
04:20:45  65  ,aud_g17
04:20:45  66  ,aud_g18
04:20:45  67  ,aud_g19
04:20:45  68  ,aud_g20
04:20:45  69  ,aud_g21
04:20:45  70  ,aud_g22
04:20:45  71  ,aud_g23
04:20:45  72  ,aud_g24
04:20:45  73  ,aud_g25
04:20:45  74  ,aud_g26
04:20:45  75  ,aud_g27
04:20:45  76  ,aud_g28
04:20:45  77  ,aud_g29
04:20:45  78  ,aud_g30
04:20:45  79  ,aud_g31
04:20:45  80  ,aud_g32
04:20:45  81  ,aud_g33
04:20:45  82  ,aud_g34
04:20:45  83  ,aud_g35
04:20:45  84  ,aud_g36
04:20:45  85  ,aud_g37
04:20:45  86  ,aud_g38
04:20:45  87  ,aud_g39
04:20:45  88  ,aud_g40
04:20:45  89  ,aud_g41
04:20:45  90  ,gbp_g00
04:20:45  91  ,gbp_g01
04:20:45  92  ,gbp_g02
04:20:45  93  ,gbp_g03
04:20:45  94  ,gbp_g04
04:20:45  95  ,gbp_g05
04:20:45  96  ,gbp_g06
04:20:45  97  ,gbp_g07
04:20:45  98  ,gbp_g08
04:20:45  99  ,gbp_g09
04:20:45 100  ,gbp_g10
04:20:45 101  ,gbp_g11
04:20:45 102  ,gbp_g12
04:20:45 103  ,gbp_g13
04:20:45 104  ,gbp_g14
04:20:45 105  ,gbp_g15
04:20:45 106  ,gbp_g16
04:20:45 107  ,gbp_g17
04:20:45 108  ,gbp_g18
04:20:45 109  ,gbp_g19
04:20:45 110  ,gbp_g20
04:20:45 111  ,gbp_g21
04:20:45 112  ,gbp_g22
04:20:45 113  ,gbp_g23
04:20:45 114  ,gbp_g24
04:20:45 115  ,gbp_g25
04:20:45 116  ,gbp_g26
04:20:45 117  ,gbp_g27
04:20:45 118  ,gbp_g28
04:20:45 119  ,gbp_g29
04:20:45 120  ,gbp_g30
04:20:45 121  ,gbp_g31
04:20:45 122  ,gbp_g32
04:20:45 123  ,gbp_g33
04:20:45 124  ,gbp_g34
04:20:45 125  ,gbp_g35
04:20:45 126  ,gbp_g36
04:20:45 127  ,gbp_g37
04:20:45 128  ,gbp_g38
04:20:45 129  ,gbp_g39
04:20:45 130  ,gbp_g40
04:20:45 131  ,gbp_g41
04:20:45 132  ,jpy_g00
04:20:45 133  ,jpy_g01
04:20:45 134  ,jpy_g02
04:20:45 135  ,jpy_g03
04:20:45 136  ,jpy_g04
04:20:45 137  ,jpy_g05
04:20:45 138  ,jpy_g06
04:20:45 139  ,jpy_g07
04:20:45 140  ,jpy_g08
04:20:45 141  ,jpy_g09
04:20:45 142  ,jpy_g10
04:20:45 143  ,jpy_g11
04:20:45 144  ,jpy_g12
04:20:45 145  ,jpy_g13
04:20:45 146  ,jpy_g14
04:20:45 147  ,jpy_g15
04:20:45 148  ,jpy_g16
04:20:45 149  ,jpy_g17
04:20:45 150  ,jpy_g18
04:20:45 151  ,jpy_g19
04:20:45 152  ,jpy_g20
04:20:45 153  ,jpy_g21
04:20:45 154  ,jpy_g22
04:20:45 155  ,jpy_g23
04:20:45 156  ,jpy_g24
04:20:45 157  ,jpy_g25
04:20:45 158  ,jpy_g26
04:20:45 159  ,jpy_g27
04:20:45 160  ,jpy_g28
04:20:45 161  ,jpy_g29
04:20:45 162  ,jpy_g30
04:20:45 163  ,jpy_g31
04:20:45 164  ,jpy_g32
04:20:45 165  ,jpy_g33
04:20:45 166  ,jpy_g34
04:20:45 167  ,jpy_g35
04:20:45 168  ,jpy_g36
04:20:45 169  ,jpy_g37
04:20:45 170  ,jpy_g38
04:20:45 171  ,jpy_g39
04:20:45 172  ,jpy_g40
04:20:45 173  ,jpy_g41
04:20:45 174  ,cad_g00
04:20:45 175  ,cad_g01
04:20:45 176  ,cad_g02
04:20:45 177  ,cad_g03
04:20:45 178  ,cad_g04
04:20:45 179  ,cad_g05
04:20:45 180  ,cad_g06
04:20:45 181  ,cad_g07
04:20:45 182  ,cad_g08
04:20:45 183  ,cad_g09
04:20:45 184  ,cad_g10
04:20:45 185  ,cad_g11
04:20:45 186  ,cad_g12
04:20:45 187  ,cad_g13
04:20:45 188  ,cad_g14
04:20:45 189  ,cad_g15
04:20:45 190  ,cad_g16
04:20:45 191  ,cad_g17
04:20:45 192  ,cad_g18
04:20:45 193  ,cad_g19
04:20:45 194  ,cad_g20
04:20:45 195  ,cad_g21
04:20:45 196  ,cad_g22
04:20:45 197  ,cad_g23
04:20:45 198  ,cad_g24
04:20:45 199  ,cad_g25
04:20:45 200  ,cad_g26
04:20:45 201  ,cad_g27
04:20:45 202  ,cad_g28
04:20:45 203  ,cad_g29
04:20:45 204  ,cad_g30
04:20:45 205  ,cad_g31
04:20:45 206  ,cad_g32
04:20:45 207  ,cad_g33
04:20:45 208  ,cad_g34
04:20:45 209  ,cad_g35
04:20:45 210  ,cad_g36
04:20:45 211  ,cad_g37
04:20:45 212  ,cad_g38
04:20:45 213  ,cad_g39
04:20:45 214  ,cad_g40
04:20:45 215  ,cad_g41
04:20:45 216  ,chf_g00
04:20:45 217  ,chf_g01
04:20:45 218  ,chf_g02
04:20:45 219  ,chf_g03
04:20:45 220  ,chf_g04
04:20:45 221  ,chf_g05
04:20:45 222  ,chf_g06
04:20:45 223  ,chf_g07
04:20:45 224  ,chf_g08
04:20:45 225  ,chf_g09
04:20:45 226  ,chf_g10
04:20:45 227  ,chf_g11
04:20:45 228  ,chf_g12
04:20:45 229  ,chf_g13
04:20:45 230  ,chf_g14
04:20:45 231  ,chf_g15
04:20:45 232  ,chf_g16
04:20:45 233  ,chf_g17
04:20:45 234  ,chf_g18
04:20:45 235  ,chf_g19
04:20:45 236  ,chf_g20
04:20:45 237  ,chf_g21
04:20:45 238  ,chf_g22
04:20:45 239  ,chf_g23
04:20:45 240  ,chf_g24
04:20:45 241  ,chf_g25
04:20:45 242  ,chf_g26
04:20:45 243  ,chf_g27
04:20:45 244  ,chf_g28
04:20:45 245  ,chf_g29
04:20:45 246  ,chf_g30
04:20:45 247  ,chf_g31
04:20:45 248  ,chf_g32
04:20:45 249  ,chf_g33
04:20:45 250  ,chf_g34
04:20:45 251  ,chf_g35
04:20:45 252  ,chf_g36
04:20:45 253  ,chf_g37
04:20:45 254  ,chf_g38
04:20:45 255  ,chf_g39
04:20:45 256  ,chf_g40
04:20:45 257  ,chf_g41
04:20:45 258  FROM aud_ms6 m
04:20:45 259  WHERE m.ydate = '&1'||' '||'&2'
04:20:45 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'04:05:00'

View created.

Elapsed: 00:00:00.12
04:20:45 SQL> 
04:20:45 SQL> -- rpt
04:20:45 SQL> -- We should see just 1 row:
04:20:45 SQL> 
04:20:45 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
04:20:45 SQL> 
04:20:45 SQL> -- Build the model:
04:20:45 SQL> CREATE OR REPLACE VIEW bme AS
04:20:45   2  SELECT
04:20:45   3  'aud'||m.ydate prdate
04:20:45   4  ,gattn
04:20:45   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:20:45   6  ,eur_g00
04:20:45   7  ,eur_g01
04:20:45   8  ,eur_g02
04:20:45   9  ,eur_g03
04:20:45  10  ,eur_g04
04:20:45  11  ,eur_g05
04:20:45  12  ,eur_g06
04:20:45  13  ,eur_g07
04:20:45  14  ,eur_g08
04:20:45  15  ,eur_g09
04:20:45  16  ,eur_g10
04:20:45  17  ,eur_g11
04:20:45  18  ,eur_g12
04:20:45  19  ,eur_g13
04:20:45  20  ,eur_g14
04:20:45  21  ,eur_g15
04:20:45  22  ,eur_g16
04:20:45  23  ,eur_g17
04:20:45  24  ,eur_g18
04:20:45  25  ,eur_g19
04:20:45  26  ,eur_g20
04:20:45  27  ,eur_g21
04:20:45  28  ,eur_g22
04:20:45  29  ,eur_g23
04:20:45  30  ,eur_g24
04:20:45  31  ,eur_g25
04:20:45  32  ,eur_g26
04:20:45  33  ,eur_g27
04:20:45  34  ,eur_g28
04:20:45  35  ,eur_g29
04:20:45  36  ,eur_g30
04:20:45  37  ,eur_g31
04:20:45  38  ,eur_g32
04:20:45  39  ,eur_g33
04:20:45  40  ,eur_g34
04:20:45  41  ,eur_g35
04:20:45  42  ,eur_g36
04:20:45  43  ,eur_g37
04:20:45  44  ,eur_g38
04:20:45  45  ,eur_g39
04:20:45  46  ,eur_g40
04:20:45  47  ,eur_g41
04:20:45  48  ,aud_g00
04:20:45  49  ,aud_g01
04:20:45  50  ,aud_g02
04:20:45  51  ,aud_g03
04:20:45  52  ,aud_g04
04:20:45  53  ,aud_g05
04:20:45  54  ,aud_g06
04:20:45  55  ,aud_g07
04:20:45  56  ,aud_g08
04:20:45  57  ,aud_g09
04:20:45  58  ,aud_g10
04:20:45  59  ,aud_g11
04:20:45  60  ,aud_g12
04:20:45  61  ,aud_g13
04:20:45  62  ,aud_g14
04:20:45  63  ,aud_g15
04:20:45  64  ,aud_g16
04:20:45  65  ,aud_g17
04:20:45  66  ,aud_g18
04:20:45  67  ,aud_g19
04:20:45  68  ,aud_g20
04:20:45  69  ,aud_g21
04:20:45  70  ,aud_g22
04:20:45  71  ,aud_g23
04:20:45  72  ,aud_g24
04:20:45  73  ,aud_g25
04:20:45  74  ,aud_g26
04:20:45  75  ,aud_g27
04:20:45  76  ,aud_g28
04:20:45  77  ,aud_g29
04:20:45  78  ,aud_g30
04:20:45  79  ,aud_g31
04:20:45  80  ,aud_g32
04:20:45  81  ,aud_g33
04:20:45  82  ,aud_g34
04:20:45  83  ,aud_g35
04:20:45  84  ,aud_g36
04:20:45  85  ,aud_g37
04:20:45  86  ,aud_g38
04:20:45  87  ,aud_g39
04:20:45  88  ,aud_g40
04:20:45  89  ,aud_g41
04:20:45  90  ,gbp_g00
04:20:45  91  ,gbp_g01
04:20:45  92  ,gbp_g02
04:20:45  93  ,gbp_g03
04:20:45  94  ,gbp_g04
04:20:45  95  ,gbp_g05
04:20:45  96  ,gbp_g06
04:20:45  97  ,gbp_g07
04:20:45  98  ,gbp_g08
04:20:45  99  ,gbp_g09
04:20:45 100  ,gbp_g10
04:20:45 101  ,gbp_g11
04:20:45 102  ,gbp_g12
04:20:45 103  ,gbp_g13
04:20:45 104  ,gbp_g14
04:20:45 105  ,gbp_g15
04:20:45 106  ,gbp_g16
04:20:45 107  ,gbp_g17
04:20:45 108  ,gbp_g18
04:20:45 109  ,gbp_g19
04:20:45 110  ,gbp_g20
04:20:45 111  ,gbp_g21
04:20:45 112  ,gbp_g22
04:20:45 113  ,gbp_g23
04:20:45 114  ,gbp_g24
04:20:45 115  ,gbp_g25
04:20:45 116  ,gbp_g26
04:20:45 117  ,gbp_g27
04:20:45 118  ,gbp_g28
04:20:45 119  ,gbp_g29
04:20:45 120  ,gbp_g30
04:20:45 121  ,gbp_g31
04:20:45 122  ,gbp_g32
04:20:45 123  ,gbp_g33
04:20:45 124  ,gbp_g34
04:20:45 125  ,gbp_g35
04:20:45 126  ,gbp_g36
04:20:45 127  ,gbp_g37
04:20:45 128  ,gbp_g38
04:20:45 129  ,gbp_g39
04:20:45 130  ,gbp_g40
04:20:45 131  ,gbp_g41
04:20:45 132  ,jpy_g00
04:20:45 133  ,jpy_g01
04:20:45 134  ,jpy_g02
04:20:45 135  ,jpy_g03
04:20:45 136  ,jpy_g04
04:20:45 137  ,jpy_g05
04:20:45 138  ,jpy_g06
04:20:45 139  ,jpy_g07
04:20:45 140  ,jpy_g08
04:20:45 141  ,jpy_g09
04:20:45 142  ,jpy_g10
04:20:45 143  ,jpy_g11
04:20:45 144  ,jpy_g12
04:20:45 145  ,jpy_g13
04:20:45 146  ,jpy_g14
04:20:45 147  ,jpy_g15
04:20:45 148  ,jpy_g16
04:20:45 149  ,jpy_g17
04:20:45 150  ,jpy_g18
04:20:45 151  ,jpy_g19
04:20:45 152  ,jpy_g20
04:20:45 153  ,jpy_g21
04:20:45 154  ,jpy_g22
04:20:45 155  ,jpy_g23
04:20:45 156  ,jpy_g24
04:20:45 157  ,jpy_g25
04:20:45 158  ,jpy_g26
04:20:45 159  ,jpy_g27
04:20:45 160  ,jpy_g28
04:20:45 161  ,jpy_g29
04:20:45 162  ,jpy_g30
04:20:45 163  ,jpy_g31
04:20:45 164  ,jpy_g32
04:20:45 165  ,jpy_g33
04:20:45 166  ,jpy_g34
04:20:45 167  ,jpy_g35
04:20:45 168  ,jpy_g36
04:20:45 169  ,jpy_g37
04:20:45 170  ,jpy_g38
04:20:45 171  ,jpy_g39
04:20:45 172  ,jpy_g40
04:20:45 173  ,jpy_g41
04:20:45 174  ,cad_g00
04:20:45 175  ,cad_g01
04:20:45 176  ,cad_g02
04:20:45 177  ,cad_g03
04:20:45 178  ,cad_g04
04:20:45 179  ,cad_g05
04:20:45 180  ,cad_g06
04:20:45 181  ,cad_g07
04:20:45 182  ,cad_g08
04:20:45 183  ,cad_g09
04:20:45 184  ,cad_g10
04:20:45 185  ,cad_g11
04:20:45 186  ,cad_g12
04:20:45 187  ,cad_g13
04:20:45 188  ,cad_g14
04:20:45 189  ,cad_g15
04:20:45 190  ,cad_g16
04:20:45 191  ,cad_g17
04:20:45 192  ,cad_g18
04:20:45 193  ,cad_g19
04:20:45 194  ,cad_g20
04:20:45 195  ,cad_g21
04:20:45 196  ,cad_g22
04:20:45 197  ,cad_g23
04:20:45 198  ,cad_g24
04:20:45 199  ,cad_g25
04:20:45 200  ,cad_g26
04:20:45 201  ,cad_g27
04:20:45 202  ,cad_g28
04:20:45 203  ,cad_g29
04:20:45 204  ,cad_g30
04:20:45 205  ,cad_g31
04:20:45 206  ,cad_g32
04:20:45 207  ,cad_g33
04:20:45 208  ,cad_g34
04:20:45 209  ,cad_g35
04:20:45 210  ,cad_g36
04:20:45 211  ,cad_g37
04:20:45 212  ,cad_g38
04:20:45 213  ,cad_g39
04:20:45 214  ,cad_g40
04:20:45 215  ,cad_g41
04:20:45 216  ,chf_g00
04:20:45 217  ,chf_g01
04:20:45 218  ,chf_g02
04:20:45 219  ,chf_g03
04:20:45 220  ,chf_g04
04:20:45 221  ,chf_g05
04:20:45 222  ,chf_g06
04:20:45 223  ,chf_g07
04:20:45 224  ,chf_g08
04:20:45 225  ,chf_g09
04:20:45 226  ,chf_g10
04:20:45 227  ,chf_g11
04:20:45 228  ,chf_g12
04:20:45 229  ,chf_g13
04:20:45 230  ,chf_g14
04:20:45 231  ,chf_g15
04:20:45 232  ,chf_g16
04:20:45 233  ,chf_g17
04:20:45 234  ,chf_g18
04:20:45 235  ,chf_g19
04:20:45 236  ,chf_g20
04:20:45 237  ,chf_g21
04:20:45 238  ,chf_g22
04:20:45 239  ,chf_g23
04:20:45 240  ,chf_g24
04:20:45 241  ,chf_g25
04:20:45 242  ,chf_g26
04:20:45 243  ,chf_g27
04:20:45 244  ,chf_g28
04:20:45 245  ,chf_g29
04:20:45 246  ,chf_g30
04:20:45 247  ,chf_g31
04:20:45 248  ,chf_g32
04:20:45 249  ,chf_g33
04:20:45 250  ,chf_g34
04:20:45 251  ,chf_g35
04:20:45 252  ,chf_g36
04:20:45 253  ,chf_g37
04:20:45 254  ,chf_g38
04:20:45 255  ,chf_g39
04:20:45 256  ,chf_g40
04:20:45 257  ,chf_g41
04:20:45 258  FROM aud_ms6 m
04:20:45 259  WHERE gattn IN('nup','up')
04:20:45 260  AND 1+m.ydate < '&1'||' '||'&2'
04:20:45 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'04:05:00'

View created.

Elapsed: 00:00:00.12
04:20:45 SQL> 
04:20:45 SQL> -- rpt
04:20:45 SQL> 
04:20:45 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13157
up	     6382

Elapsed: 00:00:00.04
04:20:45 SQL> 
04:20:45 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 04:00:00

Elapsed: 00:00:00.03
04:20:45 SQL> 
04:20:45 SQL> -- Now build model from bme and score sme
04:20:45 SQL> @score1gattn.sql
04:20:45 SQL> -- score1gattn.sql
04:20:45 SQL> 
04:20:45 SQL> -- Does the 1st SVM score
04:20:45 SQL> 
04:20:45 SQL> -- Fill up svmc_apply_prep
04:20:45 SQL> @score_gattn.sql
04:20:45 SQL> --
04:20:45 SQL> -- score_gattn.sql
04:20:45 SQL> --
04:20:45 SQL> 
04:20:45 SQL> -- usage: score_gattn.sql
04:20:45 SQL> 
04:20:45 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
04:20:45 SQL> 
04:20:45 SQL> DEFINE target	= 'gattn'
04:20:45 SQL> DEFINE model_name = 'forex14'
04:20:45 SQL> DEFINE bldtable	= 'bme'
04:20:45 SQL> DEFINE scoretable = 'sme'
04:20:45 SQL> DEFINE case_id	= 'prdate'
04:20:45 SQL> 
04:20:45 SQL> -- Define a variable to help me exclude some columns from some data mining calls
04:20:45 SQL> DEFINE exclude1 = "'&target','&case_id'"
04:20:45 SQL> 
04:20:45 SQL> -- Builds an SVM model using pl/sql.
04:20:45 SQL> 
04:20:45 SQL> -----------------------------------------------------------------------
04:20:45 SQL> --			    BUILD THE MODEL
04:20:45 SQL> -----------------------------------------------------------------------
04:20:45 SQL> 
04:20:45 SQL> -- Cleanup old build data preparation objects for repeat runs
04:20:45 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
04:20:45 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
04:20:45 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
04:20:45 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
04:20:45 SQL> 
04:20:45 SQL> 
04:20:45 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
04:20:45 SQL> --
04:20:45 SQL> -- DROP	TABLE svmc_settings ;
04:20:45 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
04:20:45 SQL> -- DELETE svmc_settings;
04:20:45 SQL> 
04:20:45 SQL> -- The default classification algorithm is Naive Bayes. So override
04:20:45 SQL> -- this choice to SVM using a settings table.
04:20:45 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
04:20:45 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
04:20:45 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
04:20:45 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
04:20:45 SQL> -- models.
04:20:45 SQL> --
04:20:45 SQL> 
04:20:45 SQL> -- Do this once and then comment it out.
04:20:45 SQL> -- That makes script go faster.
04:20:45 SQL> -- BEGIN
04:20:45 SQL> -- -- Populate settings table
04:20:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:20:45 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
04:20:45 SQL> --
04:20:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:20:45 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
04:20:45 SQL> --
04:20:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:20:45 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
04:20:45 SQL> --   COMMIT;
04:20:45 SQL> -- END;
04:20:45 SQL> -- /
04:20:45 SQL> 
04:20:45 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
04:20:45 SQL> 
04:20:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
04:20:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:20:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:20:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
04:20:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:20:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:20:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
04:20:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:20:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:20:46 SQL> 
04:20:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
04:20:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:20:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:20:46 SQL> 
04:20:46 SQL> --------------------------------
04:20:46 SQL> -- PREPARE BUILD (TRAINING) DATA
04:20:46 SQL> --
04:20:46 SQL> 
04:20:46 SQL> -- 1. Missing Value treatment for all Predictors and
04:20:46 SQL> -- 2. Outlier Treatment and
04:20:46 SQL> -- 3. Normalization are performed below.
04:20:46 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
04:20:46 SQL> --    normalized here.
04:20:46 SQL> 
04:20:46 SQL> BEGIN
04:20:46   2  	-- Perform missing value treatment for all predictors
04:20:46   3  	-- create miss tables
04:20:46   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
04:20:46   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
04:20:46   6  
04:20:46   7  	-- populate miss tables
04:20:46   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
04:20:46   9  	  miss_table_name => 'svmc_miss_num',
04:20:46  10  	  data_table_name => '&bldtable',
04:20:46  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:20:46  12  
04:20:46  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
04:20:46  14  	  miss_table_name => 'svmc_miss_cat',
04:20:46  15  	  data_table_name => '&bldtable',
04:20:46  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:20:46  17  
04:20:46  18  	-- xform input data to replace missing values
04:20:46  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:20:46  20  	  miss_table_name => 'svmc_miss_num',
04:20:46  21  	  data_table_name => '&bldtable',
04:20:46  22  	  xform_view_name => 'xformed_build_miss_num');
04:20:46  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:20:46  24  	  miss_table_name => 'svmc_miss_cat',
04:20:46  25  	  data_table_name => '&bldtable',
04:20:46  26  	  xform_view_name => 'xformed_build_miss_cat');
04:20:46  27  
04:20:46  28  	-- Perform outlier treatment.
04:20:46  29  	-- create clip table
04:20:46  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
04:20:46  31  
04:20:46  32  	-- populate clip table
04:20:46  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
04:20:46  34  	  clip_table_name => 'svmc_clip',
04:20:46  35  	  data_table_name => '&bldtable',
04:20:46  36  	  tail_frac	  => 0.025,
04:20:46  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:20:46  38  
04:20:46  39  	-- xform input data to winsorized data
04:20:46  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
04:20:46  41  	  clip_table_name => 'svmc_clip',
04:20:46  42  	  data_table_name => '&bldtable',
04:20:46  43  	  xform_view_name => 'svmc_winsor');
04:20:46  44  
04:20:46  45  	-- create normalization table
04:20:46  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
04:20:46  47  
04:20:46  48  	-- populate normalization table based on winsorized data
04:20:46  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
04:20:46  50  	  norm_table_name => 'svmc_norm',
04:20:46  51  	  data_table_name => 'svmc_winsor',
04:20:46  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:20:46  53  
04:20:46  54  	-- normalize the original data
04:20:46  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:20:46  56  	  norm_table_name => 'svmc_norm',
04:20:46  57  	  data_table_name => '&bldtable',
04:20:46  58  	  xform_view_name => 'svmc_build_prep');
04:20:46  59  END;
04:20:46  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.09
04:21:04 SQL> 
04:21:04 SQL> ---------------------
04:21:04 SQL> -- CREATE A NEW MODEL
04:21:04 SQL> --
04:21:04 SQL> -- Cleanup old model with the same name for repeat runs
04:21:04 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
04:21:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:21:04   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.94
04:21:05 SQL> 
04:21:05 SQL> -- Build a new SVM Model
04:21:05 SQL> BEGIN
04:21:05   2  	DBMS_DATA_MINING.CREATE_MODEL(
04:21:05   3  	  model_name	      => '&model_name',
04:21:05   4  	  mining_function     => dbms_data_mining.classification,
04:21:05   5  	  data_table_name     => 'svmc_build_prep',
04:21:05   6  	  case_id_column_name => '&case_id',
04:21:05   7  	  target_column_name  => '&target',
04:21:05   8  	  settings_table_name => 'svmc_settings');
04:21:05   9  END;
04:21:05  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.51
04:21:32 SQL> 
04:21:32 SQL> -----------------------------------------------------------------------
04:21:32 SQL> --			       APPLY/score THE MODEL
04:21:32 SQL> -----------------------------------------------------------------------
04:21:32 SQL> 
04:21:32 SQL> -- Cleanup old scoring data preparation objects for repeat runs
04:21:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
04:21:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:21:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:21:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
04:21:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:21:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:21:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
04:21:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:21:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:21:32 SQL> -----------------------
04:21:32 SQL> -- PREPARE SCORING DATA
04:21:32 SQL> --
04:21:32 SQL> -- If the data for model creation has been prepared, then the data
04:21:32 SQL> -- to be scored using the model must be prepared in the same manner
04:21:32 SQL> -- in order to obtain meaningful results.
04:21:32 SQL> --
04:21:32 SQL> -- 1. Missing Value treatment for all Predictors and
04:21:32 SQL> -- 2. Normalization
04:21:32 SQL> -- No outlier treatment will be performed during test and apply. The
04:21:32 SQL> -- normalization step is sufficient, since the normalization parameters
04:21:32 SQL> -- already capture the effects of outlier treatment done with build data.
04:21:32 SQL> --
04:21:32 SQL> BEGIN
04:21:32   2  	-- Xform Test data to replace missing values
04:21:32   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:21:32   4  	  miss_table_name => 'svmc_miss_num',
04:21:32   5  	  data_table_name => '&scoretable',
04:21:32   6  	  xform_view_name => 'xformed_apply_miss_num');
04:21:32   7  
04:21:32   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:21:32   9  	  miss_table_name => 'svmc_miss_cat',
04:21:32  10  	  data_table_name => '&scoretable',
04:21:32  11  	  xform_view_name => 'xformed_apply_miss_cat');
04:21:32  12  
04:21:32  13  	-- Normalize the data to be scored
04:21:32  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:21:32  15  	  norm_table_name => 'svmc_norm',
04:21:32  16  	  data_table_name => '&scoretable',
04:21:32  17  	  xform_view_name => 'svmc_apply_prep');
04:21:32  18  END;
04:21:32  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
04:21:34 SQL> 
04:21:34 SQL> -- Use same model_name used in score_gattn.sql
04:21:34 SQL> DEFINE model_name = 'forex14'
04:21:34 SQL> 
04:21:34 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
04:21:34 SQL> 
04:21:34 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
04:21:34   2  SELECT
04:21:34   3  prdate
04:21:34   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
04:21:34   5  ,sysdate
04:21:34   6  ,SUBSTR(prdate,1,3)pair
04:21:34   7  ,SUBSTR(prdate,4,19)ydate
04:21:34   8  FROM svmc_apply_prep
04:21:34   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
04:21:34 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
