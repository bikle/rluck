
SQL*Plus: Release 11.2.0.1.0 Production on Fri Dec 31 05:28:38 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

05:28:38 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
05:28:38 SQL> 05:28:38 SQL> @aud_score1day.sql  2010-12-31 05:05:00
05:28:38 SQL> --
05:28:38 SQL> -- aud_score1day.sql
05:28:38 SQL> --
05:28:38 SQL> 
05:28:38 SQL> CREATE OR REPLACE VIEW sme AS
05:28:38   2  SELECT
05:28:38   3  'aud'||m.ydate prdate
05:28:38   4  ,NULL gatt
05:28:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:28:38   6  ,eur_g00
05:28:38   7  ,eur_g01
05:28:38   8  ,eur_g02
05:28:38   9  ,eur_g03
05:28:38  10  ,eur_g04
05:28:38  11  ,eur_g05
05:28:38  12  ,eur_g06
05:28:38  13  ,eur_g07
05:28:38  14  ,eur_g08
05:28:38  15  ,eur_g09
05:28:38  16  ,eur_g10
05:28:38  17  ,eur_g11
05:28:38  18  ,eur_g12
05:28:38  19  ,eur_g13
05:28:38  20  ,eur_g14
05:28:38  21  ,eur_g15
05:28:38  22  ,eur_g16
05:28:38  23  ,eur_g17
05:28:38  24  ,eur_g18
05:28:38  25  ,eur_g19
05:28:38  26  ,eur_g20
05:28:38  27  ,eur_g21
05:28:38  28  ,eur_g22
05:28:38  29  ,eur_g23
05:28:38  30  ,eur_g24
05:28:38  31  ,eur_g25
05:28:38  32  ,eur_g26
05:28:38  33  ,eur_g27
05:28:38  34  ,eur_g28
05:28:38  35  ,eur_g29
05:28:38  36  ,eur_g30
05:28:38  37  ,eur_g31
05:28:38  38  ,eur_g32
05:28:38  39  ,eur_g33
05:28:38  40  ,eur_g34
05:28:38  41  ,eur_g35
05:28:38  42  ,eur_g36
05:28:38  43  ,eur_g37
05:28:38  44  ,eur_g38
05:28:38  45  ,eur_g39
05:28:38  46  ,eur_g40
05:28:38  47  ,eur_g41
05:28:38  48  ,aud_g00
05:28:38  49  ,aud_g01
05:28:38  50  ,aud_g02
05:28:38  51  ,aud_g03
05:28:38  52  ,aud_g04
05:28:38  53  ,aud_g05
05:28:38  54  ,aud_g06
05:28:38  55  ,aud_g07
05:28:38  56  ,aud_g08
05:28:38  57  ,aud_g09
05:28:38  58  ,aud_g10
05:28:38  59  ,aud_g11
05:28:38  60  ,aud_g12
05:28:38  61  ,aud_g13
05:28:38  62  ,aud_g14
05:28:38  63  ,aud_g15
05:28:38  64  ,aud_g16
05:28:38  65  ,aud_g17
05:28:38  66  ,aud_g18
05:28:38  67  ,aud_g19
05:28:38  68  ,aud_g20
05:28:38  69  ,aud_g21
05:28:38  70  ,aud_g22
05:28:38  71  ,aud_g23
05:28:38  72  ,aud_g24
05:28:38  73  ,aud_g25
05:28:38  74  ,aud_g26
05:28:38  75  ,aud_g27
05:28:38  76  ,aud_g28
05:28:38  77  ,aud_g29
05:28:38  78  ,aud_g30
05:28:38  79  ,aud_g31
05:28:38  80  ,aud_g32
05:28:38  81  ,aud_g33
05:28:38  82  ,aud_g34
05:28:38  83  ,aud_g35
05:28:38  84  ,aud_g36
05:28:38  85  ,aud_g37
05:28:38  86  ,aud_g38
05:28:38  87  ,aud_g39
05:28:38  88  ,aud_g40
05:28:38  89  ,aud_g41
05:28:38  90  ,gbp_g00
05:28:38  91  ,gbp_g01
05:28:38  92  ,gbp_g02
05:28:38  93  ,gbp_g03
05:28:38  94  ,gbp_g04
05:28:38  95  ,gbp_g05
05:28:38  96  ,gbp_g06
05:28:38  97  ,gbp_g07
05:28:38  98  ,gbp_g08
05:28:38  99  ,gbp_g09
05:28:38 100  ,gbp_g10
05:28:38 101  ,gbp_g11
05:28:38 102  ,gbp_g12
05:28:38 103  ,gbp_g13
05:28:38 104  ,gbp_g14
05:28:38 105  ,gbp_g15
05:28:38 106  ,gbp_g16
05:28:38 107  ,gbp_g17
05:28:38 108  ,gbp_g18
05:28:38 109  ,gbp_g19
05:28:38 110  ,gbp_g20
05:28:38 111  ,gbp_g21
05:28:38 112  ,gbp_g22
05:28:38 113  ,gbp_g23
05:28:38 114  ,gbp_g24
05:28:38 115  ,gbp_g25
05:28:38 116  ,gbp_g26
05:28:38 117  ,gbp_g27
05:28:38 118  ,gbp_g28
05:28:38 119  ,gbp_g29
05:28:38 120  ,gbp_g30
05:28:38 121  ,gbp_g31
05:28:38 122  ,gbp_g32
05:28:38 123  ,gbp_g33
05:28:38 124  ,gbp_g34
05:28:38 125  ,gbp_g35
05:28:38 126  ,gbp_g36
05:28:38 127  ,gbp_g37
05:28:38 128  ,gbp_g38
05:28:38 129  ,gbp_g39
05:28:38 130  ,gbp_g40
05:28:38 131  ,gbp_g41
05:28:38 132  ,jpy_g00
05:28:38 133  ,jpy_g01
05:28:38 134  ,jpy_g02
05:28:38 135  ,jpy_g03
05:28:38 136  ,jpy_g04
05:28:38 137  ,jpy_g05
05:28:38 138  ,jpy_g06
05:28:38 139  ,jpy_g07
05:28:38 140  ,jpy_g08
05:28:38 141  ,jpy_g09
05:28:38 142  ,jpy_g10
05:28:38 143  ,jpy_g11
05:28:38 144  ,jpy_g12
05:28:38 145  ,jpy_g13
05:28:38 146  ,jpy_g14
05:28:38 147  ,jpy_g15
05:28:38 148  ,jpy_g16
05:28:38 149  ,jpy_g17
05:28:38 150  ,jpy_g18
05:28:38 151  ,jpy_g19
05:28:38 152  ,jpy_g20
05:28:38 153  ,jpy_g21
05:28:38 154  ,jpy_g22
05:28:38 155  ,jpy_g23
05:28:38 156  ,jpy_g24
05:28:38 157  ,jpy_g25
05:28:38 158  ,jpy_g26
05:28:38 159  ,jpy_g27
05:28:38 160  ,jpy_g28
05:28:38 161  ,jpy_g29
05:28:38 162  ,jpy_g30
05:28:38 163  ,jpy_g31
05:28:38 164  ,jpy_g32
05:28:38 165  ,jpy_g33
05:28:38 166  ,jpy_g34
05:28:38 167  ,jpy_g35
05:28:38 168  ,jpy_g36
05:28:38 169  ,jpy_g37
05:28:38 170  ,jpy_g38
05:28:38 171  ,jpy_g39
05:28:38 172  ,jpy_g40
05:28:38 173  ,jpy_g41
05:28:38 174  ,cad_g00
05:28:38 175  ,cad_g01
05:28:38 176  ,cad_g02
05:28:38 177  ,cad_g03
05:28:38 178  ,cad_g04
05:28:38 179  ,cad_g05
05:28:38 180  ,cad_g06
05:28:38 181  ,cad_g07
05:28:38 182  ,cad_g08
05:28:38 183  ,cad_g09
05:28:38 184  ,cad_g10
05:28:38 185  ,cad_g11
05:28:38 186  ,cad_g12
05:28:38 187  ,cad_g13
05:28:38 188  ,cad_g14
05:28:38 189  ,cad_g15
05:28:38 190  ,cad_g16
05:28:38 191  ,cad_g17
05:28:38 192  ,cad_g18
05:28:38 193  ,cad_g19
05:28:38 194  ,cad_g20
05:28:38 195  ,cad_g21
05:28:38 196  ,cad_g22
05:28:38 197  ,cad_g23
05:28:38 198  ,cad_g24
05:28:38 199  ,cad_g25
05:28:38 200  ,cad_g26
05:28:38 201  ,cad_g27
05:28:38 202  ,cad_g28
05:28:38 203  ,cad_g29
05:28:38 204  ,cad_g30
05:28:38 205  ,cad_g31
05:28:38 206  ,cad_g32
05:28:38 207  ,cad_g33
05:28:38 208  ,cad_g34
05:28:38 209  ,cad_g35
05:28:38 210  ,cad_g36
05:28:38 211  ,cad_g37
05:28:38 212  ,cad_g38
05:28:38 213  ,cad_g39
05:28:38 214  ,cad_g40
05:28:38 215  ,cad_g41
05:28:38 216  ,chf_g00
05:28:38 217  ,chf_g01
05:28:38 218  ,chf_g02
05:28:38 219  ,chf_g03
05:28:38 220  ,chf_g04
05:28:38 221  ,chf_g05
05:28:38 222  ,chf_g06
05:28:38 223  ,chf_g07
05:28:38 224  ,chf_g08
05:28:38 225  ,chf_g09
05:28:38 226  ,chf_g10
05:28:38 227  ,chf_g11
05:28:38 228  ,chf_g12
05:28:38 229  ,chf_g13
05:28:38 230  ,chf_g14
05:28:38 231  ,chf_g15
05:28:38 232  ,chf_g16
05:28:38 233  ,chf_g17
05:28:38 234  ,chf_g18
05:28:38 235  ,chf_g19
05:28:38 236  ,chf_g20
05:28:38 237  ,chf_g21
05:28:38 238  ,chf_g22
05:28:38 239  ,chf_g23
05:28:38 240  ,chf_g24
05:28:38 241  ,chf_g25
05:28:38 242  ,chf_g26
05:28:38 243  ,chf_g27
05:28:38 244  ,chf_g28
05:28:38 245  ,chf_g29
05:28:38 246  ,chf_g30
05:28:38 247  ,chf_g31
05:28:38 248  ,chf_g32
05:28:38 249  ,chf_g33
05:28:38 250  ,chf_g34
05:28:38 251  ,chf_g35
05:28:38 252  ,chf_g36
05:28:38 253  ,chf_g37
05:28:38 254  ,chf_g38
05:28:38 255  ,chf_g39
05:28:38 256  ,chf_g40
05:28:38 257  ,chf_g41
05:28:38 258  FROM aud_ms6 m
05:28:38 259  WHERE m.ydate = '&1'||' '||'&2'
05:28:38 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'05:05:00'

View created.

Elapsed: 00:00:00.15
05:28:38 SQL> 
05:28:38 SQL> -- rpt
05:28:38 SQL> -- We should see just 1 row:
05:28:38 SQL> 
05:28:38 SQL> SELECT COUNT(prdate) FROM sme
05:28:38   2  
05:28:38 SQL> -- Build the model:
05:28:38 SQL> CREATE OR REPLACE VIEW bme AS
05:28:38   2  SELECT
05:28:38   3  'aud'||m.ydate prdate
05:28:38   4  ,gatt
05:28:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:28:38   6  ,eur_g00
05:28:38   7  ,eur_g01
05:28:38   8  ,eur_g02
05:28:38   9  ,eur_g03
05:28:38  10  ,eur_g04
05:28:38  11  ,eur_g05
05:28:38  12  ,eur_g06
05:28:38  13  ,eur_g07
05:28:38  14  ,eur_g08
05:28:38  15  ,eur_g09
05:28:38  16  ,eur_g10
05:28:38  17  ,eur_g11
05:28:38  18  ,eur_g12
05:28:38  19  ,eur_g13
05:28:38  20  ,eur_g14
05:28:38  21  ,eur_g15
05:28:38  22  ,eur_g16
05:28:38  23  ,eur_g17
05:28:38  24  ,eur_g18
05:28:38  25  ,eur_g19
05:28:38  26  ,eur_g20
05:28:38  27  ,eur_g21
05:28:38  28  ,eur_g22
05:28:38  29  ,eur_g23
05:28:38  30  ,eur_g24
05:28:38  31  ,eur_g25
05:28:38  32  ,eur_g26
05:28:38  33  ,eur_g27
05:28:38  34  ,eur_g28
05:28:38  35  ,eur_g29
05:28:38  36  ,eur_g30
05:28:38  37  ,eur_g31
05:28:38  38  ,eur_g32
05:28:38  39  ,eur_g33
05:28:38  40  ,eur_g34
05:28:38  41  ,eur_g35
05:28:38  42  ,eur_g36
05:28:38  43  ,eur_g37
05:28:38  44  ,eur_g38
05:28:38  45  ,eur_g39
05:28:38  46  ,eur_g40
05:28:38  47  ,eur_g41
05:28:38  48  ,aud_g00
05:28:38  49  ,aud_g01
05:28:38  50  ,aud_g02
05:28:38  51  ,aud_g03
05:28:38  52  ,aud_g04
05:28:38  53  ,aud_g05
05:28:38  54  ,aud_g06
05:28:38  55  ,aud_g07
05:28:38  56  ,aud_g08
05:28:38  57  ,aud_g09
05:28:38  58  ,aud_g10
05:28:38  59  ,aud_g11
05:28:38  60  ,aud_g12
05:28:38  61  ,aud_g13
05:28:38  62  ,aud_g14
05:28:38  63  ,aud_g15
05:28:38  64  ,aud_g16
05:28:38  65  ,aud_g17
05:28:38  66  ,aud_g18
05:28:38  67  ,aud_g19
05:28:38  68  ,aud_g20
05:28:38  69  ,aud_g21
05:28:38  70  ,aud_g22
05:28:38  71  ,aud_g23
05:28:38  72  ,aud_g24
05:28:38  73  ,aud_g25
05:28:38  74  ,aud_g26
05:28:38  75  ,aud_g27
05:28:38  76  ,aud_g28
05:28:38  77  ,aud_g29
05:28:38  78  ,aud_g30
05:28:38  79  ,aud_g31
05:28:38  80  ,aud_g32
05:28:38  81  ,aud_g33
05:28:38  82  ,aud_g34
05:28:38  83  ,aud_g35
05:28:38  84  ,aud_g36
05:28:38  85  ,aud_g37
05:28:38  86  ,aud_g38
05:28:38  87  ,aud_g39
05:28:38  88  ,aud_g40
05:28:38  89  ,aud_g41
05:28:38  90  ,gbp_g00
05:28:38  91  ,gbp_g01
05:28:38  92  ,gbp_g02
05:28:38  93  ,gbp_g03
05:28:38  94  ,gbp_g04
05:28:38  95  ,gbp_g05
05:28:38  96  ,gbp_g06
05:28:38  97  ,gbp_g07
05:28:38  98  ,gbp_g08
05:28:38  99  ,gbp_g09
05:28:38 100  ,gbp_g10
05:28:38 101  ,gbp_g11
05:28:38 102  ,gbp_g12
05:28:38 103  ,gbp_g13
05:28:38 104  ,gbp_g14
05:28:38 105  ,gbp_g15
05:28:38 106  ,gbp_g16
05:28:38 107  ,gbp_g17
05:28:38 108  ,gbp_g18
05:28:38 109  ,gbp_g19
05:28:38 110  ,gbp_g20
05:28:38 111  ,gbp_g21
05:28:38 112  ,gbp_g22
05:28:38 113  ,gbp_g23
05:28:38 114  ,gbp_g24
05:28:38 115  ,gbp_g25
05:28:38 116  ,gbp_g26
05:28:38 117  ,gbp_g27
05:28:38 118  ,gbp_g28
05:28:38 119  ,gbp_g29
05:28:38 120  ,gbp_g30
05:28:38 121  ,gbp_g31
05:28:38 122  ,gbp_g32
05:28:38 123  ,gbp_g33
05:28:38 124  ,gbp_g34
05:28:38 125  ,gbp_g35
05:28:38 126  ,gbp_g36
05:28:38 127  ,gbp_g37
05:28:38 128  ,gbp_g38
05:28:38 129  ,gbp_g39
05:28:38 130  ,gbp_g40
05:28:38 131  ,gbp_g41
05:28:38 132  ,jpy_g00
05:28:38 133  ,jpy_g01
05:28:38 134  ,jpy_g02
05:28:38 135  ,jpy_g03
05:28:38 136  ,jpy_g04
05:28:38 137  ,jpy_g05
05:28:38 138  ,jpy_g06
05:28:38 139  ,jpy_g07
05:28:38 140  ,jpy_g08
05:28:38 141  ,jpy_g09
05:28:38 142  ,jpy_g10
05:28:38 143  ,jpy_g11
05:28:38 144  ,jpy_g12
05:28:38 145  ,jpy_g13
05:28:38 146  ,jpy_g14
05:28:38 147  ,jpy_g15
05:28:38 148  ,jpy_g16
05:28:38 149  ,jpy_g17
05:28:38 150  ,jpy_g18
05:28:38 151  ,jpy_g19
05:28:38 152  ,jpy_g20
05:28:38 153  ,jpy_g21
05:28:38 154  ,jpy_g22
05:28:38 155  ,jpy_g23
05:28:38 156  ,jpy_g24
05:28:38 157  ,jpy_g25
05:28:38 158  ,jpy_g26
05:28:38 159  ,jpy_g27
05:28:38 160  ,jpy_g28
05:28:38 161  ,jpy_g29
05:28:38 162  ,jpy_g30
05:28:38 163  ,jpy_g31
05:28:38 164  ,jpy_g32
05:28:38 165  ,jpy_g33
05:28:38 166  ,jpy_g34
05:28:38 167  ,jpy_g35
05:28:38 168  ,jpy_g36
05:28:38 169  ,jpy_g37
05:28:38 170  ,jpy_g38
05:28:38 171  ,jpy_g39
05:28:38 172  ,jpy_g40
05:28:38 173  ,jpy_g41
05:28:38 174  ,cad_g00
05:28:38 175  ,cad_g01
05:28:38 176  ,cad_g02
05:28:38 177  ,cad_g03
05:28:38 178  ,cad_g04
05:28:38 179  ,cad_g05
05:28:38 180  ,cad_g06
05:28:38 181  ,cad_g07
05:28:38 182  ,cad_g08
05:28:38 183  ,cad_g09
05:28:38 184  ,cad_g10
05:28:38 185  ,cad_g11
05:28:38 186  ,cad_g12
05:28:38 187  ,cad_g13
05:28:38 188  ,cad_g14
05:28:38 189  ,cad_g15
05:28:38 190  ,cad_g16
05:28:38 191  ,cad_g17
05:28:38 192  ,cad_g18
05:28:38 193  ,cad_g19
05:28:38 194  ,cad_g20
05:28:38 195  ,cad_g21
05:28:38 196  ,cad_g22
05:28:38 197  ,cad_g23
05:28:38 198  ,cad_g24
05:28:38 199  ,cad_g25
05:28:38 200  ,cad_g26
05:28:38 201  ,cad_g27
05:28:38 202  ,cad_g28
05:28:38 203  ,cad_g29
05:28:38 204  ,cad_g30
05:28:38 205  ,cad_g31
05:28:38 206  ,cad_g32
05:28:38 207  ,cad_g33
05:28:38 208  ,cad_g34
05:28:38 209  ,cad_g35
05:28:38 210  ,cad_g36
05:28:38 211  ,cad_g37
05:28:38 212  ,cad_g38
05:28:38 213  ,cad_g39
05:28:38 214  ,cad_g40
05:28:38 215  ,cad_g41
05:28:38 216  ,chf_g00
05:28:38 217  ,chf_g01
05:28:38 218  ,chf_g02
05:28:38 219  ,chf_g03
05:28:38 220  ,chf_g04
05:28:38 221  ,chf_g05
05:28:38 222  ,chf_g06
05:28:38 223  ,chf_g07
05:28:38 224  ,chf_g08
05:28:38 225  ,chf_g09
05:28:38 226  ,chf_g10
05:28:38 227  ,chf_g11
05:28:38 228  ,chf_g12
05:28:38 229  ,chf_g13
05:28:38 230  ,chf_g14
05:28:38 231  ,chf_g15
05:28:38 232  ,chf_g16
05:28:38 233  ,chf_g17
05:28:38 234  ,chf_g18
05:28:38 235  ,chf_g19
05:28:38 236  ,chf_g20
05:28:38 237  ,chf_g21
05:28:38 238  ,chf_g22
05:28:38 239  ,chf_g23
05:28:38 240  ,chf_g24
05:28:38 241  ,chf_g25
05:28:38 242  ,chf_g26
05:28:38 243  ,chf_g27
05:28:38 244  ,chf_g28
05:28:38 245  ,chf_g29
05:28:38 246  ,chf_g30
05:28:38 247  ,chf_g31
05:28:38 248  ,chf_g32
05:28:38 249  ,chf_g33
05:28:38 250  ,chf_g34
05:28:38 251  ,chf_g35
05:28:38 252  ,chf_g36
05:28:38 253  ,chf_g37
05:28:38 254  ,chf_g38
05:28:38 255  ,chf_g39
05:28:38 256  ,chf_g40
05:28:38 257  ,chf_g41
05:28:38 258  FROM aud_ms6 m
05:28:38 259  WHERE gatt IN('nup','up')
05:28:38 260  AND 1+m.ydate < '&1'||' '||'&2'
05:28:38 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'05:05:00'

View created.

Elapsed: 00:00:00.15
05:28:38 SQL> 
05:28:38 SQL> -- rpt
05:28:38 SQL> 
05:28:38 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
05:28:38   2  
05:28:38 SQL> SELECT MAX(prdate) FROM bme
05:28:38   2  
05:28:38 SQL> -- Now build model from bme and score sme
05:28:38 SQL> @score1.sql
05:28:38 SQL> -- score1.sql
05:28:38 SQL> 
05:28:38 SQL> -- Does the 1st SVM score
05:28:38 SQL> 
05:28:38 SQL> -- Fill up svmc_apply_prep
05:28:38 SQL> @score.sql
05:28:38 SQL> --
05:28:38 SQL> -- score.sql
05:28:38 SQL> --
05:28:38 SQL> 
05:28:38 SQL> -- usage: score.sql
05:28:38 SQL> 
05:28:38 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
05:28:38 SQL> 
05:28:38 SQL> DEFINE target	= 'gatt'
05:28:38 SQL> DEFINE model_name = 'forex14'
05:28:38 SQL> DEFINE bldtable	= 'bme'
05:28:38 SQL> DEFINE scoretable = 'sme'
05:28:38 SQL> DEFINE case_id	= 'prdate'
05:28:38 SQL> 
05:28:38 SQL> -- Define a variable to help me exclude some columns from some data mining calls
05:28:38 SQL> DEFINE exclude1 = "'&target','&case_id'"
05:28:38 SQL> 
05:28:38 SQL> -- Builds an SVM model using pl/sql.
05:28:38 SQL> 
05:28:38 SQL> -----------------------------------------------------------------------
05:28:38 SQL> --			    BUILD THE MODEL
05:28:38 SQL> -----------------------------------------------------------------------
05:28:38 SQL> 
05:28:38 SQL> -- Cleanup old build data preparation objects for repeat runs
05:28:38 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
05:28:38 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
05:28:38 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
05:28:38 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
05:28:38 SQL> 
05:28:38 SQL> 
05:28:38 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
05:28:38 SQL> --
05:28:38 SQL> -- DROP	TABLE svmc_settings ;
05:28:38 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
05:28:38 SQL> -- DELETE svmc_settings;
05:28:38 SQL> 
05:28:38 SQL> -- The default classification algorithm is Naive Bayes. So override
05:28:38 SQL> -- this choice to SVM using a settings table.
05:28:38 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
05:28:38 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
05:28:38 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
05:28:38 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
05:28:38 SQL> -- models.
05:28:38 SQL> --
05:28:38 SQL> 
05:28:38 SQL> -- Do this once and then comment it out.
05:28:38 SQL> -- That makes script go faster.
05:28:38 SQL> -- BEGIN
05:28:38 SQL> -- -- Populate settings table
05:28:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:28:38 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
05:28:38 SQL> --
05:28:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:28:38 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
05:28:38 SQL> --
05:28:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:28:38 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
05:28:38 SQL> --   COMMIT;
05:28:38 SQL> -- END;
05:28:38 SQL> -- /
05:28:38 SQL> 
05:28:38 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
05:28:38 SQL> 
05:28:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
05:28:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:28:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:28:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
05:28:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:28:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:28:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
05:28:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:28:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:28:38 SQL> 
05:28:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
05:28:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:28:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
05:28:38 SQL> 
05:28:38 SQL> --------------------------------
05:28:38 SQL> -- PREPARE BUILD (TRAINING) DATA
05:28:38 SQL> --
05:28:38 SQL> 
05:28:38 SQL> -- 1. Missing Value treatment for all Predictors and
05:28:38 SQL> -- 2. Outlier Treatment and
05:28:38 SQL> -- 3. Normalization are performed below.
05:28:38 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
05:28:38 SQL> --    normalized here.
05:28:38 SQL> 
05:28:38 SQL> BEGIN
05:28:38   2  	-- Perform missing value treatment for all predictors
05:28:38   3  	-- create miss tables
05:28:38   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
05:28:38   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
05:28:38   6  
05:28:38   7  	-- populate miss tables
05:28:38   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
05:28:38   9  	  miss_table_name => 'svmc_miss_num',
05:28:38  10  	  data_table_name => '&bldtable',
05:28:38  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:28:38  12  
05:28:38  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
05:28:38  14  	  miss_table_name => 'svmc_miss_cat',
05:28:38  15  	  data_table_name => '&bldtable',
05:28:38  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:28:38  17  
05:28:38  18  	-- xform input data to replace missing values
05:28:38  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:28:38  20  	  miss_table_name => 'svmc_miss_num',
05:28:38  21  	  data_table_name => '&bldtable',
05:28:38  22  	  xform_view_name => 'xformed_build_miss_num');
05:28:38  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:28:38  24  	  miss_table_name => 'svmc_miss_cat',
05:28:38  25  	  data_table_name => '&bldtable',
05:28:38  26  	  xform_view_name => 'xformed_build_miss_cat');
05:28:38  27  
05:28:38  28  	-- Perform outlier treatment.
05:28:38  29  	-- create clip table
05:28:38  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
05:28:38  31  
05:28:38  32  	-- populate clip table
05:28:38  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
05:28:38  34  	  clip_table_name => 'svmc_clip',
05:28:38  35  	  data_table_name => '&bldtable',
05:28:38  36  	  tail_frac	  => 0.025,
05:28:38  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:28:38  38  
05:28:38  39  	-- xform input data to winsorized data
05:28:38  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
05:28:38  41  	  clip_table_name => 'svmc_clip',
05:28:38  42  	  data_table_name => '&bldtable',
05:28:38  43  	  xform_view_name => 'svmc_winsor');
05:28:38  44  
05:28:38  45  	-- create normalization table
05:28:38  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
05:28:38  47  
05:28:38  48  	-- populate normalization table based on winsorized data
05:28:38  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
05:28:38  50  	  norm_table_name => 'svmc_norm',
05:28:38  51  	  data_table_name => 'svmc_winsor',
05:28:38  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:28:38  53  
05:28:38  54  	-- normalize the original data
05:28:38  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:28:38  56  	  norm_table_name => 'svmc_norm',
05:28:38  57  	  data_table_name => '&bldtable',
05:28:38  58  	  xform_view_name => 'svmc_build_prep');
05:28:38  59  END;
05:28:38  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.26
05:28:57 SQL> 
05:28:57 SQL> ---------------------
05:28:57 SQL> -- CREATE A NEW MODEL
05:28:57 SQL> --
05:28:57 SQL> -- Cleanup old model with the same name for repeat runs
05:28:57 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
05:28:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:28:57   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.56
05:28:57 SQL> 
05:28:57 SQL> -- Build a new SVM Model
05:28:57 SQL> BEGIN
05:28:57   2  	DBMS_DATA_MINING.CREATE_MODEL(
05:28:57   3  	  model_name	      => '&model_name',
05:28:57   4  	  mining_function     => dbms_data_mining.classification,
05:28:57   5  	  data_table_name     => 'svmc_build_prep',
05:28:57   6  	  case_id_column_name => '&case_id',
05:28:57   7  	  target_column_name  => '&target',
05:28:57   8  	  settings_table_name => 'svmc_settings');
05:28:57   9  END;
05:28:57  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.55
05:29:26 SQL> 
05:29:26 SQL> -----------------------------------------------------------------------
05:29:26 SQL> --			       APPLY/score THE MODEL
05:29:26 SQL> -----------------------------------------------------------------------
05:29:26 SQL> 
05:29:26 SQL> -- Cleanup old scoring data preparation objects for repeat runs
05:29:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
05:29:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:29:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
05:29:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
05:29:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:29:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:29:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
05:29:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:29:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:29:26 SQL> -----------------------
05:29:26 SQL> -- PREPARE SCORING DATA
05:29:26 SQL> --
05:29:26 SQL> -- If the data for model creation has been prepared, then the data
05:29:26 SQL> -- to be scored using the model must be prepared in the same manner
05:29:26 SQL> -- in order to obtain meaningful results.
05:29:26 SQL> --
05:29:26 SQL> -- 1. Missing Value treatment for all Predictors and
05:29:26 SQL> -- 2. Normalization
05:29:26 SQL> -- No outlier treatment will be performed during test and apply. The
05:29:26 SQL> -- normalization step is sufficient, since the normalization parameters
05:29:26 SQL> -- already capture the effects of outlier treatment done with build data.
05:29:26 SQL> --
05:29:26 SQL> BEGIN
05:29:26   2  	-- Xform Test data to replace missing values
05:29:26   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:29:26   4  	  miss_table_name => 'svmc_miss_num',
05:29:26   5  	  data_table_name => '&scoretable',
05:29:26   6  	  xform_view_name => 'xformed_apply_miss_num');
05:29:26   7  
05:29:26   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:29:26   9  	  miss_table_name => 'svmc_miss_cat',
05:29:26  10  	  data_table_name => '&scoretable',
05:29:26  11  	  xform_view_name => 'xformed_apply_miss_cat');
05:29:26  12  
05:29:26  13  	-- Normalize the data to be scored
05:29:26  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:29:26  15  	  norm_table_name => 'svmc_norm',
05:29:26  16  	  data_table_name => '&scoretable',
05:29:26  17  	  xform_view_name => 'svmc_apply_prep');
05:29:26  18  END;
05:29:26  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.29
05:29:27 SQL> 
05:29:27 SQL> -- Use same model_name used in score.sql
05:29:27 SQL> DEFINE model_name = 'forex14'
05:29:27 SQL> 
05:29:27 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
05:29:27 SQL> 
05:29:27 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
05:29:27 SQL> 
05:29:27 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
05:29:27   2  SELECT
05:29:27   3  prdate
05:29:27   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
05:29:27   5  ,sysdate
05:29:27   6  ,SUBSTR(prdate,1,3)pair
05:29:27   7  ,SUBSTR(prdate,4,19)ydate
05:29:27   8  FROM svmc_apply_prep
05:29:27   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.24
05:29:28 SQL> @aud_score1day.sql  2010-12-31 05:10:00
05:29:28 SQL> --
05:29:28 SQL> -- aud_score1day.sql
05:29:28 SQL> --
05:29:28 SQL> 
05:29:28 SQL> CREATE OR REPLACE VIEW sme AS
05:29:28   2  SELECT
05:29:28   3  'aud'||m.ydate prdate
05:29:28   4  ,NULL gatt
05:29:28   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:29:28   6  ,eur_g00
05:29:28   7  ,eur_g01
05:29:28   8  ,eur_g02
05:29:28   9  ,eur_g03
05:29:28  10  ,eur_g04
05:29:28  11  ,eur_g05
05:29:28  12  ,eur_g06
05:29:28  13  ,eur_g07
05:29:28  14  ,eur_g08
05:29:28  15  ,eur_g09
05:29:28  16  ,eur_g10
05:29:28  17  ,eur_g11
05:29:28  18  ,eur_g12
05:29:28  19  ,eur_g13
05:29:28  20  ,eur_g14
05:29:28  21  ,eur_g15
05:29:28  22  ,eur_g16
05:29:28  23  ,eur_g17
05:29:28  24  ,eur_g18
05:29:28  25  ,eur_g19
05:29:28  26  ,eur_g20
05:29:28  27  ,eur_g21
05:29:28  28  ,eur_g22
05:29:28  29  ,eur_g23
05:29:28  30  ,eur_g24
05:29:28  31  ,eur_g25
05:29:28  32  ,eur_g26
05:29:28  33  ,eur_g27
05:29:28  34  ,eur_g28
05:29:28  35  ,eur_g29
05:29:28  36  ,eur_g30
05:29:28  37  ,eur_g31
05:29:28  38  ,eur_g32
05:29:28  39  ,eur_g33
05:29:28  40  ,eur_g34
05:29:28  41  ,eur_g35
05:29:28  42  ,eur_g36
05:29:28  43  ,eur_g37
05:29:28  44  ,eur_g38
05:29:28  45  ,eur_g39
05:29:28  46  ,eur_g40
05:29:28  47  ,eur_g41
05:29:28  48  ,aud_g00
05:29:28  49  ,aud_g01
05:29:28  50  ,aud_g02
05:29:28  51  ,aud_g03
05:29:28  52  ,aud_g04
05:29:28  53  ,aud_g05
05:29:28  54  ,aud_g06
05:29:28  55  ,aud_g07
05:29:28  56  ,aud_g08
05:29:28  57  ,aud_g09
05:29:28  58  ,aud_g10
05:29:28  59  ,aud_g11
05:29:28  60  ,aud_g12
05:29:28  61  ,aud_g13
05:29:28  62  ,aud_g14
05:29:28  63  ,aud_g15
05:29:28  64  ,aud_g16
05:29:28  65  ,aud_g17
05:29:28  66  ,aud_g18
05:29:28  67  ,aud_g19
05:29:28  68  ,aud_g20
05:29:28  69  ,aud_g21
05:29:28  70  ,aud_g22
05:29:28  71  ,aud_g23
05:29:28  72  ,aud_g24
05:29:28  73  ,aud_g25
05:29:28  74  ,aud_g26
05:29:28  75  ,aud_g27
05:29:28  76  ,aud_g28
05:29:28  77  ,aud_g29
05:29:28  78  ,aud_g30
05:29:28  79  ,aud_g31
05:29:28  80  ,aud_g32
05:29:28  81  ,aud_g33
05:29:28  82  ,aud_g34
05:29:28  83  ,aud_g35
05:29:28  84  ,aud_g36
05:29:28  85  ,aud_g37
05:29:28  86  ,aud_g38
05:29:28  87  ,aud_g39
05:29:28  88  ,aud_g40
05:29:28  89  ,aud_g41
05:29:28  90  ,gbp_g00
05:29:28  91  ,gbp_g01
05:29:28  92  ,gbp_g02
05:29:28  93  ,gbp_g03
05:29:28  94  ,gbp_g04
05:29:28  95  ,gbp_g05
05:29:28  96  ,gbp_g06
05:29:28  97  ,gbp_g07
05:29:28  98  ,gbp_g08
05:29:28  99  ,gbp_g09
05:29:28 100  ,gbp_g10
05:29:28 101  ,gbp_g11
05:29:28 102  ,gbp_g12
05:29:28 103  ,gbp_g13
05:29:28 104  ,gbp_g14
05:29:28 105  ,gbp_g15
05:29:28 106  ,gbp_g16
05:29:28 107  ,gbp_g17
05:29:28 108  ,gbp_g18
05:29:28 109  ,gbp_g19
05:29:28 110  ,gbp_g20
05:29:28 111  ,gbp_g21
05:29:28 112  ,gbp_g22
05:29:28 113  ,gbp_g23
05:29:28 114  ,gbp_g24
05:29:28 115  ,gbp_g25
05:29:28 116  ,gbp_g26
05:29:28 117  ,gbp_g27
05:29:28 118  ,gbp_g28
05:29:28 119  ,gbp_g29
05:29:28 120  ,gbp_g30
05:29:28 121  ,gbp_g31
05:29:28 122  ,gbp_g32
05:29:28 123  ,gbp_g33
05:29:28 124  ,gbp_g34
05:29:28 125  ,gbp_g35
05:29:28 126  ,gbp_g36
05:29:28 127  ,gbp_g37
05:29:28 128  ,gbp_g38
05:29:28 129  ,gbp_g39
05:29:28 130  ,gbp_g40
05:29:28 131  ,gbp_g41
05:29:28 132  ,jpy_g00
05:29:28 133  ,jpy_g01
05:29:28 134  ,jpy_g02
05:29:28 135  ,jpy_g03
05:29:28 136  ,jpy_g04
05:29:28 137  ,jpy_g05
05:29:28 138  ,jpy_g06
05:29:28 139  ,jpy_g07
05:29:28 140  ,jpy_g08
05:29:28 141  ,jpy_g09
05:29:28 142  ,jpy_g10
05:29:28 143  ,jpy_g11
05:29:28 144  ,jpy_g12
05:29:28 145  ,jpy_g13
05:29:28 146  ,jpy_g14
05:29:28 147  ,jpy_g15
05:29:28 148  ,jpy_g16
05:29:28 149  ,jpy_g17
05:29:28 150  ,jpy_g18
05:29:28 151  ,jpy_g19
05:29:28 152  ,jpy_g20
05:29:28 153  ,jpy_g21
05:29:28 154  ,jpy_g22
05:29:28 155  ,jpy_g23
05:29:28 156  ,jpy_g24
05:29:28 157  ,jpy_g25
05:29:28 158  ,jpy_g26
05:29:28 159  ,jpy_g27
05:29:28 160  ,jpy_g28
05:29:28 161  ,jpy_g29
05:29:28 162  ,jpy_g30
05:29:28 163  ,jpy_g31
05:29:28 164  ,jpy_g32
05:29:28 165  ,jpy_g33
05:29:28 166  ,jpy_g34
05:29:28 167  ,jpy_g35
05:29:28 168  ,jpy_g36
05:29:28 169  ,jpy_g37
05:29:28 170  ,jpy_g38
05:29:28 171  ,jpy_g39
05:29:28 172  ,jpy_g40
05:29:28 173  ,jpy_g41
05:29:28 174  ,cad_g00
05:29:28 175  ,cad_g01
05:29:28 176  ,cad_g02
05:29:28 177  ,cad_g03
05:29:28 178  ,cad_g04
05:29:28 179  ,cad_g05
05:29:28 180  ,cad_g06
05:29:28 181  ,cad_g07
05:29:28 182  ,cad_g08
05:29:28 183  ,cad_g09
05:29:28 184  ,cad_g10
05:29:28 185  ,cad_g11
05:29:28 186  ,cad_g12
05:29:28 187  ,cad_g13
05:29:28 188  ,cad_g14
05:29:28 189  ,cad_g15
05:29:28 190  ,cad_g16
05:29:28 191  ,cad_g17
05:29:28 192  ,cad_g18
05:29:28 193  ,cad_g19
05:29:28 194  ,cad_g20
05:29:28 195  ,cad_g21
05:29:28 196  ,cad_g22
05:29:28 197  ,cad_g23
05:29:28 198  ,cad_g24
05:29:28 199  ,cad_g25
05:29:28 200  ,cad_g26
05:29:28 201  ,cad_g27
05:29:28 202  ,cad_g28
05:29:28 203  ,cad_g29
05:29:28 204  ,cad_g30
05:29:28 205  ,cad_g31
05:29:28 206  ,cad_g32
05:29:28 207  ,cad_g33
05:29:28 208  ,cad_g34
05:29:28 209  ,cad_g35
05:29:28 210  ,cad_g36
05:29:28 211  ,cad_g37
05:29:28 212  ,cad_g38
05:29:28 213  ,cad_g39
05:29:28 214  ,cad_g40
05:29:28 215  ,cad_g41
05:29:28 216  ,chf_g00
05:29:28 217  ,chf_g01
05:29:28 218  ,chf_g02
05:29:28 219  ,chf_g03
05:29:28 220  ,chf_g04
05:29:28 221  ,chf_g05
05:29:28 222  ,chf_g06
05:29:28 223  ,chf_g07
05:29:28 224  ,chf_g08
05:29:28 225  ,chf_g09
05:29:28 226  ,chf_g10
05:29:28 227  ,chf_g11
05:29:28 228  ,chf_g12
05:29:28 229  ,chf_g13
05:29:28 230  ,chf_g14
05:29:28 231  ,chf_g15
05:29:28 232  ,chf_g16
05:29:28 233  ,chf_g17
05:29:28 234  ,chf_g18
05:29:28 235  ,chf_g19
05:29:28 236  ,chf_g20
05:29:28 237  ,chf_g21
05:29:28 238  ,chf_g22
05:29:28 239  ,chf_g23
05:29:28 240  ,chf_g24
05:29:28 241  ,chf_g25
05:29:28 242  ,chf_g26
05:29:28 243  ,chf_g27
05:29:28 244  ,chf_g28
05:29:28 245  ,chf_g29
05:29:28 246  ,chf_g30
05:29:28 247  ,chf_g31
05:29:28 248  ,chf_g32
05:29:28 249  ,chf_g33
05:29:28 250  ,chf_g34
05:29:28 251  ,chf_g35
05:29:28 252  ,chf_g36
05:29:28 253  ,chf_g37
05:29:28 254  ,chf_g38
05:29:28 255  ,chf_g39
05:29:28 256  ,chf_g40
05:29:28 257  ,chf_g41
05:29:28 258  FROM aud_ms6 m
05:29:28 259  WHERE m.ydate = '&1'||' '||'&2'
05:29:28 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'05:10:00'

View created.

Elapsed: 00:00:00.14
05:29:28 SQL> 
05:29:28 SQL> -- rpt
05:29:28 SQL> -- We should see just 1 row:
05:29:28 SQL> 
05:29:28 SQL> SELECT COUNT(prdate) FROM sme
05:29:28   2  
05:29:28 SQL> -- Build the model:
05:29:28 SQL> CREATE OR REPLACE VIEW bme AS
05:29:28   2  SELECT
05:29:28   3  'aud'||m.ydate prdate
05:29:28   4  ,gatt
05:29:28   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:29:28   6  ,eur_g00
05:29:28   7  ,eur_g01
05:29:28   8  ,eur_g02
05:29:28   9  ,eur_g03
05:29:28  10  ,eur_g04
05:29:28  11  ,eur_g05
05:29:28  12  ,eur_g06
05:29:28  13  ,eur_g07
05:29:28  14  ,eur_g08
05:29:28  15  ,eur_g09
05:29:28  16  ,eur_g10
05:29:28  17  ,eur_g11
05:29:28  18  ,eur_g12
05:29:28  19  ,eur_g13
05:29:28  20  ,eur_g14
05:29:28  21  ,eur_g15
05:29:28  22  ,eur_g16
05:29:28  23  ,eur_g17
05:29:28  24  ,eur_g18
05:29:28  25  ,eur_g19
05:29:28  26  ,eur_g20
05:29:28  27  ,eur_g21
05:29:28  28  ,eur_g22
05:29:28  29  ,eur_g23
05:29:28  30  ,eur_g24
05:29:28  31  ,eur_g25
05:29:28  32  ,eur_g26
05:29:28  33  ,eur_g27
05:29:28  34  ,eur_g28
05:29:28  35  ,eur_g29
05:29:28  36  ,eur_g30
05:29:28  37  ,eur_g31
05:29:28  38  ,eur_g32
05:29:28  39  ,eur_g33
05:29:28  40  ,eur_g34
05:29:28  41  ,eur_g35
05:29:28  42  ,eur_g36
05:29:28  43  ,eur_g37
05:29:28  44  ,eur_g38
05:29:28  45  ,eur_g39
05:29:28  46  ,eur_g40
05:29:28  47  ,eur_g41
05:29:28  48  ,aud_g00
05:29:28  49  ,aud_g01
05:29:28  50  ,aud_g02
05:29:28  51  ,aud_g03
05:29:28  52  ,aud_g04
05:29:28  53  ,aud_g05
05:29:28  54  ,aud_g06
05:29:28  55  ,aud_g07
05:29:28  56  ,aud_g08
05:29:28  57  ,aud_g09
05:29:28  58  ,aud_g10
05:29:28  59  ,aud_g11
05:29:28  60  ,aud_g12
05:29:28  61  ,aud_g13
05:29:28  62  ,aud_g14
05:29:28  63  ,aud_g15
05:29:28  64  ,aud_g16
05:29:28  65  ,aud_g17
05:29:28  66  ,aud_g18
05:29:28  67  ,aud_g19
05:29:28  68  ,aud_g20
05:29:28  69  ,aud_g21
05:29:28  70  ,aud_g22
05:29:28  71  ,aud_g23
05:29:28  72  ,aud_g24
05:29:28  73  ,aud_g25
05:29:28  74  ,aud_g26
05:29:28  75  ,aud_g27
05:29:28  76  ,aud_g28
05:29:28  77  ,aud_g29
05:29:28  78  ,aud_g30
05:29:28  79  ,aud_g31
05:29:28  80  ,aud_g32
05:29:28  81  ,aud_g33
05:29:28  82  ,aud_g34
05:29:28  83  ,aud_g35
05:29:28  84  ,aud_g36
05:29:28  85  ,aud_g37
05:29:28  86  ,aud_g38
05:29:28  87  ,aud_g39
05:29:28  88  ,aud_g40
05:29:28  89  ,aud_g41
05:29:28  90  ,gbp_g00
05:29:28  91  ,gbp_g01
05:29:28  92  ,gbp_g02
05:29:28  93  ,gbp_g03
05:29:28  94  ,gbp_g04
05:29:28  95  ,gbp_g05
05:29:28  96  ,gbp_g06
05:29:28  97  ,gbp_g07
05:29:28  98  ,gbp_g08
05:29:28  99  ,gbp_g09
05:29:28 100  ,gbp_g10
05:29:28 101  ,gbp_g11
05:29:28 102  ,gbp_g12
05:29:28 103  ,gbp_g13
05:29:28 104  ,gbp_g14
05:29:28 105  ,gbp_g15
05:29:28 106  ,gbp_g16
05:29:28 107  ,gbp_g17
05:29:28 108  ,gbp_g18
05:29:28 109  ,gbp_g19
05:29:28 110  ,gbp_g20
05:29:28 111  ,gbp_g21
05:29:28 112  ,gbp_g22
05:29:28 113  ,gbp_g23
05:29:28 114  ,gbp_g24
05:29:28 115  ,gbp_g25
05:29:28 116  ,gbp_g26
05:29:28 117  ,gbp_g27
05:29:28 118  ,gbp_g28
05:29:28 119  ,gbp_g29
05:29:28 120  ,gbp_g30
05:29:28 121  ,gbp_g31
05:29:28 122  ,gbp_g32
05:29:28 123  ,gbp_g33
05:29:28 124  ,gbp_g34
05:29:28 125  ,gbp_g35
05:29:28 126  ,gbp_g36
05:29:28 127  ,gbp_g37
05:29:28 128  ,gbp_g38
05:29:28 129  ,gbp_g39
05:29:28 130  ,gbp_g40
05:29:28 131  ,gbp_g41
05:29:28 132  ,jpy_g00
05:29:28 133  ,jpy_g01
05:29:28 134  ,jpy_g02
05:29:28 135  ,jpy_g03
05:29:28 136  ,jpy_g04
05:29:28 137  ,jpy_g05
05:29:28 138  ,jpy_g06
05:29:28 139  ,jpy_g07
05:29:28 140  ,jpy_g08
05:29:28 141  ,jpy_g09
05:29:28 142  ,jpy_g10
05:29:28 143  ,jpy_g11
05:29:28 144  ,jpy_g12
05:29:28 145  ,jpy_g13
05:29:28 146  ,jpy_g14
05:29:28 147  ,jpy_g15
05:29:28 148  ,jpy_g16
05:29:28 149  ,jpy_g17
05:29:28 150  ,jpy_g18
05:29:28 151  ,jpy_g19
05:29:28 152  ,jpy_g20
05:29:28 153  ,jpy_g21
05:29:28 154  ,jpy_g22
05:29:28 155  ,jpy_g23
05:29:28 156  ,jpy_g24
05:29:28 157  ,jpy_g25
05:29:28 158  ,jpy_g26
05:29:28 159  ,jpy_g27
05:29:28 160  ,jpy_g28
05:29:28 161  ,jpy_g29
05:29:28 162  ,jpy_g30
05:29:28 163  ,jpy_g31
05:29:28 164  ,jpy_g32
05:29:28 165  ,jpy_g33
05:29:28 166  ,jpy_g34
05:29:28 167  ,jpy_g35
05:29:28 168  ,jpy_g36
05:29:28 169  ,jpy_g37
05:29:28 170  ,jpy_g38
05:29:28 171  ,jpy_g39
05:29:28 172  ,jpy_g40
05:29:28 173  ,jpy_g41
05:29:28 174  ,cad_g00
05:29:28 175  ,cad_g01
05:29:28 176  ,cad_g02
05:29:28 177  ,cad_g03
05:29:28 178  ,cad_g04
05:29:28 179  ,cad_g05
05:29:28 180  ,cad_g06
05:29:28 181  ,cad_g07
05:29:28 182  ,cad_g08
05:29:28 183  ,cad_g09
05:29:28 184  ,cad_g10
05:29:28 185  ,cad_g11
05:29:28 186  ,cad_g12
05:29:28 187  ,cad_g13
05:29:28 188  ,cad_g14
05:29:28 189  ,cad_g15
05:29:28 190  ,cad_g16
05:29:28 191  ,cad_g17
05:29:28 192  ,cad_g18
05:29:28 193  ,cad_g19
05:29:28 194  ,cad_g20
05:29:28 195  ,cad_g21
05:29:28 196  ,cad_g22
05:29:28 197  ,cad_g23
05:29:28 198  ,cad_g24
05:29:28 199  ,cad_g25
05:29:28 200  ,cad_g26
05:29:28 201  ,cad_g27
05:29:28 202  ,cad_g28
05:29:28 203  ,cad_g29
05:29:28 204  ,cad_g30
05:29:28 205  ,cad_g31
05:29:28 206  ,cad_g32
05:29:28 207  ,cad_g33
05:29:28 208  ,cad_g34
05:29:28 209  ,cad_g35
05:29:28 210  ,cad_g36
05:29:28 211  ,cad_g37
05:29:28 212  ,cad_g38
05:29:28 213  ,cad_g39
05:29:28 214  ,cad_g40
05:29:28 215  ,cad_g41
05:29:28 216  ,chf_g00
05:29:28 217  ,chf_g01
05:29:28 218  ,chf_g02
05:29:28 219  ,chf_g03
05:29:28 220  ,chf_g04
05:29:28 221  ,chf_g05
05:29:28 222  ,chf_g06
05:29:28 223  ,chf_g07
05:29:28 224  ,chf_g08
05:29:28 225  ,chf_g09
05:29:28 226  ,chf_g10
05:29:28 227  ,chf_g11
05:29:28 228  ,chf_g12
05:29:28 229  ,chf_g13
05:29:28 230  ,chf_g14
05:29:28 231  ,chf_g15
05:29:28 232  ,chf_g16
05:29:28 233  ,chf_g17
05:29:28 234  ,chf_g18
05:29:28 235  ,chf_g19
05:29:28 236  ,chf_g20
05:29:28 237  ,chf_g21
05:29:28 238  ,chf_g22
05:29:28 239  ,chf_g23
05:29:28 240  ,chf_g24
05:29:28 241  ,chf_g25
05:29:28 242  ,chf_g26
05:29:28 243  ,chf_g27
05:29:28 244  ,chf_g28
05:29:28 245  ,chf_g29
05:29:28 246  ,chf_g30
05:29:28 247  ,chf_g31
05:29:28 248  ,chf_g32
05:29:28 249  ,chf_g33
05:29:28 250  ,chf_g34
05:29:28 251  ,chf_g35
05:29:28 252  ,chf_g36
05:29:28 253  ,chf_g37
05:29:28 254  ,chf_g38
05:29:28 255  ,chf_g39
05:29:28 256  ,chf_g40
05:29:28 257  ,chf_g41
05:29:28 258  FROM aud_ms6 m
05:29:28 259  WHERE gatt IN('nup','up')
05:29:28 260  AND 1+m.ydate < '&1'||' '||'&2'
05:29:28 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'05:10:00'

View created.

Elapsed: 00:00:00.15
05:29:28 SQL> 
05:29:28 SQL> -- rpt
05:29:28 SQL> 
05:29:28 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
05:29:28   2  
05:29:28 SQL> SELECT MAX(prdate) FROM bme
05:29:28   2  
05:29:28 SQL> -- Now build model from bme and score sme
05:29:28 SQL> @score1.sql
05:29:28 SQL> -- score1.sql
05:29:28 SQL> 
05:29:28 SQL> -- Does the 1st SVM score
05:29:28 SQL> 
05:29:28 SQL> -- Fill up svmc_apply_prep
05:29:28 SQL> @score.sql
05:29:28 SQL> --
05:29:28 SQL> -- score.sql
05:29:28 SQL> --
05:29:28 SQL> 
05:29:28 SQL> -- usage: score.sql
05:29:28 SQL> 
05:29:28 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
05:29:28 SQL> 
05:29:28 SQL> DEFINE target	= 'gatt'
05:29:28 SQL> DEFINE model_name = 'forex14'
05:29:28 SQL> DEFINE bldtable	= 'bme'
05:29:28 SQL> DEFINE scoretable = 'sme'
05:29:28 SQL> DEFINE case_id	= 'prdate'
05:29:28 SQL> 
05:29:28 SQL> -- Define a variable to help me exclude some columns from some data mining calls
05:29:28 SQL> DEFINE exclude1 = "'&target','&case_id'"
05:29:28 SQL> 
05:29:28 SQL> -- Builds an SVM model using pl/sql.
05:29:28 SQL> 
05:29:28 SQL> -----------------------------------------------------------------------
05:29:28 SQL> --			    BUILD THE MODEL
05:29:28 SQL> -----------------------------------------------------------------------
05:29:28 SQL> 
05:29:28 SQL> -- Cleanup old build data preparation objects for repeat runs
05:29:28 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
05:29:28 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
05:29:28 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
05:29:28 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
05:29:28 SQL> 
05:29:28 SQL> 
05:29:28 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
05:29:28 SQL> --
05:29:28 SQL> -- DROP	TABLE svmc_settings ;
05:29:28 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
05:29:28 SQL> -- DELETE svmc_settings;
05:29:28 SQL> 
05:29:28 SQL> -- The default classification algorithm is Naive Bayes. So override
05:29:28 SQL> -- this choice to SVM using a settings table.
05:29:28 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
05:29:28 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
05:29:28 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
05:29:28 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
05:29:28 SQL> -- models.
05:29:28 SQL> --
05:29:28 SQL> 
05:29:28 SQL> -- Do this once and then comment it out.
05:29:28 SQL> -- That makes script go faster.
05:29:28 SQL> -- BEGIN
05:29:28 SQL> -- -- Populate settings table
05:29:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:29:28 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
05:29:28 SQL> --
05:29:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:29:28 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
05:29:28 SQL> --
05:29:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:29:28 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
05:29:28 SQL> --   COMMIT;
05:29:28 SQL> -- END;
05:29:28 SQL> -- /
05:29:28 SQL> 
05:29:28 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
05:29:28 SQL> 
05:29:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
05:29:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:29:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
05:29:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
05:29:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:29:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:29:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
05:29:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:29:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
05:29:28 SQL> 
05:29:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
05:29:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:29:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
05:29:28 SQL> 
05:29:28 SQL> --------------------------------
05:29:28 SQL> -- PREPARE BUILD (TRAINING) DATA
05:29:28 SQL> --
05:29:28 SQL> 
05:29:28 SQL> -- 1. Missing Value treatment for all Predictors and
05:29:28 SQL> -- 2. Outlier Treatment and
05:29:28 SQL> -- 3. Normalization are performed below.
05:29:28 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
05:29:28 SQL> --    normalized here.
05:29:28 SQL> 
05:29:28 SQL> BEGIN
05:29:28   2  	-- Perform missing value treatment for all predictors
05:29:28   3  	-- create miss tables
05:29:28   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
05:29:28   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
05:29:28   6  
05:29:28   7  	-- populate miss tables
05:29:28   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
05:29:28   9  	  miss_table_name => 'svmc_miss_num',
05:29:28  10  	  data_table_name => '&bldtable',
05:29:28  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:29:28  12  
05:29:28  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
05:29:28  14  	  miss_table_name => 'svmc_miss_cat',
05:29:28  15  	  data_table_name => '&bldtable',
05:29:28  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:29:28  17  
05:29:28  18  	-- xform input data to replace missing values
05:29:28  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:29:28  20  	  miss_table_name => 'svmc_miss_num',
05:29:28  21  	  data_table_name => '&bldtable',
05:29:28  22  	  xform_view_name => 'xformed_build_miss_num');
05:29:28  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:29:28  24  	  miss_table_name => 'svmc_miss_cat',
05:29:28  25  	  data_table_name => '&bldtable',
05:29:28  26  	  xform_view_name => 'xformed_build_miss_cat');
05:29:28  27  
05:29:28  28  	-- Perform outlier treatment.
05:29:28  29  	-- create clip table
05:29:28  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
05:29:28  31  
05:29:28  32  	-- populate clip table
05:29:28  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
05:29:28  34  	  clip_table_name => 'svmc_clip',
05:29:28  35  	  data_table_name => '&bldtable',
05:29:28  36  	  tail_frac	  => 0.025,
05:29:28  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:29:28  38  
05:29:28  39  	-- xform input data to winsorized data
05:29:28  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
05:29:28  41  	  clip_table_name => 'svmc_clip',
05:29:28  42  	  data_table_name => '&bldtable',
05:29:28  43  	  xform_view_name => 'svmc_winsor');
05:29:28  44  
05:29:28  45  	-- create normalization table
05:29:28  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
05:29:28  47  
05:29:28  48  	-- populate normalization table based on winsorized data
05:29:28  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
05:29:28  50  	  norm_table_name => 'svmc_norm',
05:29:28  51  	  data_table_name => 'svmc_winsor',
05:29:28  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:29:28  53  
05:29:28  54  	-- normalize the original data
05:29:28  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:29:28  56  	  norm_table_name => 'svmc_norm',
05:29:28  57  	  data_table_name => '&bldtable',
05:29:28  58  	  xform_view_name => 'svmc_build_prep');
05:29:28  59  END;
05:29:28  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.87
05:29:46 SQL> 
05:29:46 SQL> ---------------------
05:29:46 SQL> -- CREATE A NEW MODEL
05:29:46 SQL> --
05:29:46 SQL> -- Cleanup old model with the same name for repeat runs
05:29:46 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
05:29:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:29:46   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.05
05:29:47 SQL> 
05:29:47 SQL> -- Build a new SVM Model
05:29:47 SQL> BEGIN
05:29:47   2  	DBMS_DATA_MINING.CREATE_MODEL(
05:29:47   3  	  model_name	      => '&model_name',
05:29:47   4  	  mining_function     => dbms_data_mining.classification,
05:29:47   5  	  data_table_name     => 'svmc_build_prep',
05:29:47   6  	  case_id_column_name => '&case_id',
05:29:47   7  	  target_column_name  => '&target',
05:29:47   8  	  settings_table_name => 'svmc_settings');
05:29:47   9  END;
05:29:47  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.18
05:30:16 SQL> 
05:30:16 SQL> -----------------------------------------------------------------------
05:30:16 SQL> --			       APPLY/score THE MODEL
05:30:16 SQL> -----------------------------------------------------------------------
05:30:16 SQL> 
05:30:16 SQL> -- Cleanup old scoring data preparation objects for repeat runs
05:30:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
05:30:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:30:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:30:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
05:30:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:30:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:30:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
05:30:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:30:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:30:16 SQL> -----------------------
05:30:16 SQL> -- PREPARE SCORING DATA
05:30:16 SQL> --
05:30:16 SQL> -- If the data for model creation has been prepared, then the data
05:30:16 SQL> -- to be scored using the model must be prepared in the same manner
05:30:16 SQL> -- in order to obtain meaningful results.
05:30:16 SQL> --
05:30:16 SQL> -- 1. Missing Value treatment for all Predictors and
05:30:16 SQL> -- 2. Normalization
05:30:16 SQL> -- No outlier treatment will be performed during test and apply. The
05:30:16 SQL> -- normalization step is sufficient, since the normalization parameters
05:30:16 SQL> -- already capture the effects of outlier treatment done with build data.
05:30:16 SQL> --
05:30:16 SQL> BEGIN
05:30:16   2  	-- Xform Test data to replace missing values
05:30:16   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:30:16   4  	  miss_table_name => 'svmc_miss_num',
05:30:16   5  	  data_table_name => '&scoretable',
05:30:16   6  	  xform_view_name => 'xformed_apply_miss_num');
05:30:16   7  
05:30:16   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:30:16   9  	  miss_table_name => 'svmc_miss_cat',
05:30:16  10  	  data_table_name => '&scoretable',
05:30:16  11  	  xform_view_name => 'xformed_apply_miss_cat');
05:30:16  12  
05:30:16  13  	-- Normalize the data to be scored
05:30:16  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:30:16  15  	  norm_table_name => 'svmc_norm',
05:30:16  16  	  data_table_name => '&scoretable',
05:30:16  17  	  xform_view_name => 'svmc_apply_prep');
05:30:16  18  END;
05:30:16  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.25
05:30:18 SQL> 
05:30:18 SQL> -- Use same model_name used in score.sql
05:30:18 SQL> DEFINE model_name = 'forex14'
05:30:18 SQL> 
05:30:18 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
05:30:18 SQL> 
05:30:18 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
05:30:18 SQL> 
05:30:18 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
05:30:18   2  SELECT
05:30:18   3  prdate
05:30:18   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
05:30:18   5  ,sysdate
05:30:18   6  ,SUBSTR(prdate,1,3)pair
05:30:18   7  ,SUBSTR(prdate,4,19)ydate
05:30:18   8  FROM svmc_apply_prep
05:30:18   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.19
05:30:18 SQL> @aud_score1day.sql  2010-12-31 05:15:00
05:30:18 SQL> --
05:30:18 SQL> -- aud_score1day.sql
05:30:18 SQL> --
05:30:18 SQL> 
05:30:18 SQL> CREATE OR REPLACE VIEW sme AS
05:30:18   2  SELECT
05:30:18   3  'aud'||m.ydate prdate
05:30:18   4  ,NULL gatt
05:30:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:30:18   6  ,eur_g00
05:30:18   7  ,eur_g01
05:30:18   8  ,eur_g02
05:30:18   9  ,eur_g03
05:30:18  10  ,eur_g04
05:30:18  11  ,eur_g05
05:30:18  12  ,eur_g06
05:30:18  13  ,eur_g07
05:30:18  14  ,eur_g08
05:30:18  15  ,eur_g09
05:30:18  16  ,eur_g10
05:30:18  17  ,eur_g11
05:30:18  18  ,eur_g12
05:30:18  19  ,eur_g13
05:30:18  20  ,eur_g14
05:30:18  21  ,eur_g15
05:30:18  22  ,eur_g16
05:30:18  23  ,eur_g17
05:30:18  24  ,eur_g18
05:30:18  25  ,eur_g19
05:30:18  26  ,eur_g20
05:30:18  27  ,eur_g21
05:30:18  28  ,eur_g22
05:30:18  29  ,eur_g23
05:30:18  30  ,eur_g24
05:30:18  31  ,eur_g25
05:30:18  32  ,eur_g26
05:30:18  33  ,eur_g27
05:30:18  34  ,eur_g28
05:30:18  35  ,eur_g29
05:30:18  36  ,eur_g30
05:30:18  37  ,eur_g31
05:30:18  38  ,eur_g32
05:30:18  39  ,eur_g33
05:30:18  40  ,eur_g34
05:30:18  41  ,eur_g35
05:30:18  42  ,eur_g36
05:30:18  43  ,eur_g37
05:30:18  44  ,eur_g38
05:30:18  45  ,eur_g39
05:30:18  46  ,eur_g40
05:30:18  47  ,eur_g41
05:30:18  48  ,aud_g00
05:30:18  49  ,aud_g01
05:30:18  50  ,aud_g02
05:30:18  51  ,aud_g03
05:30:18  52  ,aud_g04
05:30:18  53  ,aud_g05
05:30:18  54  ,aud_g06
05:30:18  55  ,aud_g07
05:30:18  56  ,aud_g08
05:30:18  57  ,aud_g09
05:30:18  58  ,aud_g10
05:30:18  59  ,aud_g11
05:30:18  60  ,aud_g12
05:30:18  61  ,aud_g13
05:30:18  62  ,aud_g14
05:30:18  63  ,aud_g15
05:30:18  64  ,aud_g16
05:30:18  65  ,aud_g17
05:30:18  66  ,aud_g18
05:30:18  67  ,aud_g19
05:30:18  68  ,aud_g20
05:30:18  69  ,aud_g21
05:30:18  70  ,aud_g22
05:30:18  71  ,aud_g23
05:30:18  72  ,aud_g24
05:30:18  73  ,aud_g25
05:30:18  74  ,aud_g26
05:30:18  75  ,aud_g27
05:30:18  76  ,aud_g28
05:30:18  77  ,aud_g29
05:30:18  78  ,aud_g30
05:30:18  79  ,aud_g31
05:30:18  80  ,aud_g32
05:30:18  81  ,aud_g33
05:30:18  82  ,aud_g34
05:30:18  83  ,aud_g35
05:30:18  84  ,aud_g36
05:30:18  85  ,aud_g37
05:30:18  86  ,aud_g38
05:30:18  87  ,aud_g39
05:30:18  88  ,aud_g40
05:30:18  89  ,aud_g41
05:30:18  90  ,gbp_g00
05:30:18  91  ,gbp_g01
05:30:18  92  ,gbp_g02
05:30:18  93  ,gbp_g03
05:30:18  94  ,gbp_g04
05:30:18  95  ,gbp_g05
05:30:18  96  ,gbp_g06
05:30:18  97  ,gbp_g07
05:30:18  98  ,gbp_g08
05:30:18  99  ,gbp_g09
05:30:18 100  ,gbp_g10
05:30:18 101  ,gbp_g11
05:30:18 102  ,gbp_g12
05:30:18 103  ,gbp_g13
05:30:18 104  ,gbp_g14
05:30:18 105  ,gbp_g15
05:30:18 106  ,gbp_g16
05:30:18 107  ,gbp_g17
05:30:18 108  ,gbp_g18
05:30:18 109  ,gbp_g19
05:30:18 110  ,gbp_g20
05:30:18 111  ,gbp_g21
05:30:18 112  ,gbp_g22
05:30:18 113  ,gbp_g23
05:30:18 114  ,gbp_g24
05:30:18 115  ,gbp_g25
05:30:18 116  ,gbp_g26
05:30:18 117  ,gbp_g27
05:30:18 118  ,gbp_g28
05:30:18 119  ,gbp_g29
05:30:18 120  ,gbp_g30
05:30:18 121  ,gbp_g31
05:30:18 122  ,gbp_g32
05:30:18 123  ,gbp_g33
05:30:18 124  ,gbp_g34
05:30:18 125  ,gbp_g35
05:30:18 126  ,gbp_g36
05:30:18 127  ,gbp_g37
05:30:18 128  ,gbp_g38
05:30:18 129  ,gbp_g39
05:30:18 130  ,gbp_g40
05:30:18 131  ,gbp_g41
05:30:18 132  ,jpy_g00
05:30:18 133  ,jpy_g01
05:30:18 134  ,jpy_g02
05:30:18 135  ,jpy_g03
05:30:18 136  ,jpy_g04
05:30:18 137  ,jpy_g05
05:30:18 138  ,jpy_g06
05:30:18 139  ,jpy_g07
05:30:18 140  ,jpy_g08
05:30:18 141  ,jpy_g09
05:30:18 142  ,jpy_g10
05:30:18 143  ,jpy_g11
05:30:18 144  ,jpy_g12
05:30:18 145  ,jpy_g13
05:30:18 146  ,jpy_g14
05:30:18 147  ,jpy_g15
05:30:18 148  ,jpy_g16
05:30:18 149  ,jpy_g17
05:30:18 150  ,jpy_g18
05:30:18 151  ,jpy_g19
05:30:18 152  ,jpy_g20
05:30:18 153  ,jpy_g21
05:30:18 154  ,jpy_g22
05:30:18 155  ,jpy_g23
05:30:18 156  ,jpy_g24
05:30:18 157  ,jpy_g25
05:30:18 158  ,jpy_g26
05:30:18 159  ,jpy_g27
05:30:18 160  ,jpy_g28
05:30:18 161  ,jpy_g29
05:30:18 162  ,jpy_g30
05:30:18 163  ,jpy_g31
05:30:18 164  ,jpy_g32
05:30:18 165  ,jpy_g33
05:30:18 166  ,jpy_g34
05:30:18 167  ,jpy_g35
05:30:18 168  ,jpy_g36
05:30:18 169  ,jpy_g37
05:30:18 170  ,jpy_g38
05:30:18 171  ,jpy_g39
05:30:18 172  ,jpy_g40
05:30:18 173  ,jpy_g41
05:30:18 174  ,cad_g00
05:30:18 175  ,cad_g01
05:30:18 176  ,cad_g02
05:30:18 177  ,cad_g03
05:30:18 178  ,cad_g04
05:30:18 179  ,cad_g05
05:30:18 180  ,cad_g06
05:30:18 181  ,cad_g07
05:30:18 182  ,cad_g08
05:30:18 183  ,cad_g09
05:30:18 184  ,cad_g10
05:30:18 185  ,cad_g11
05:30:18 186  ,cad_g12
05:30:18 187  ,cad_g13
05:30:18 188  ,cad_g14
05:30:18 189  ,cad_g15
05:30:18 190  ,cad_g16
05:30:18 191  ,cad_g17
05:30:18 192  ,cad_g18
05:30:18 193  ,cad_g19
05:30:18 194  ,cad_g20
05:30:18 195  ,cad_g21
05:30:18 196  ,cad_g22
05:30:18 197  ,cad_g23
05:30:18 198  ,cad_g24
05:30:18 199  ,cad_g25
05:30:18 200  ,cad_g26
05:30:18 201  ,cad_g27
05:30:18 202  ,cad_g28
05:30:18 203  ,cad_g29
05:30:18 204  ,cad_g30
05:30:18 205  ,cad_g31
05:30:18 206  ,cad_g32
05:30:18 207  ,cad_g33
05:30:18 208  ,cad_g34
05:30:18 209  ,cad_g35
05:30:18 210  ,cad_g36
05:30:18 211  ,cad_g37
05:30:18 212  ,cad_g38
05:30:18 213  ,cad_g39
05:30:18 214  ,cad_g40
05:30:18 215  ,cad_g41
05:30:18 216  ,chf_g00
05:30:18 217  ,chf_g01
05:30:18 218  ,chf_g02
05:30:18 219  ,chf_g03
05:30:18 220  ,chf_g04
05:30:18 221  ,chf_g05
05:30:18 222  ,chf_g06
05:30:18 223  ,chf_g07
05:30:18 224  ,chf_g08
05:30:18 225  ,chf_g09
05:30:18 226  ,chf_g10
05:30:18 227  ,chf_g11
05:30:18 228  ,chf_g12
05:30:18 229  ,chf_g13
05:30:18 230  ,chf_g14
05:30:18 231  ,chf_g15
05:30:18 232  ,chf_g16
05:30:18 233  ,chf_g17
05:30:18 234  ,chf_g18
05:30:18 235  ,chf_g19
05:30:18 236  ,chf_g20
05:30:18 237  ,chf_g21
05:30:18 238  ,chf_g22
05:30:18 239  ,chf_g23
05:30:18 240  ,chf_g24
05:30:18 241  ,chf_g25
05:30:18 242  ,chf_g26
05:30:18 243  ,chf_g27
05:30:18 244  ,chf_g28
05:30:18 245  ,chf_g29
05:30:18 246  ,chf_g30
05:30:18 247  ,chf_g31
05:30:18 248  ,chf_g32
05:30:18 249  ,chf_g33
05:30:18 250  ,chf_g34
05:30:18 251  ,chf_g35
05:30:18 252  ,chf_g36
05:30:18 253  ,chf_g37
05:30:18 254  ,chf_g38
05:30:18 255  ,chf_g39
05:30:18 256  ,chf_g40
05:30:18 257  ,chf_g41
05:30:18 258  FROM aud_ms6 m
05:30:18 259  WHERE m.ydate = '&1'||' '||'&2'
05:30:18 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'05:15:00'

View created.

Elapsed: 00:00:00.13
05:30:18 SQL> 
05:30:18 SQL> -- rpt
05:30:18 SQL> -- We should see just 1 row:
05:30:18 SQL> 
05:30:18 SQL> SELECT COUNT(prdate) FROM sme
05:30:18   2  
05:30:18 SQL> -- Build the model:
05:30:18 SQL> CREATE OR REPLACE VIEW bme AS
05:30:18   2  SELECT
05:30:18   3  'aud'||m.ydate prdate
05:30:18   4  ,gatt
05:30:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:30:18   6  ,eur_g00
05:30:18   7  ,eur_g01
05:30:18   8  ,eur_g02
05:30:18   9  ,eur_g03
05:30:18  10  ,eur_g04
05:30:18  11  ,eur_g05
05:30:18  12  ,eur_g06
05:30:18  13  ,eur_g07
05:30:18  14  ,eur_g08
05:30:18  15  ,eur_g09
05:30:18  16  ,eur_g10
05:30:18  17  ,eur_g11
05:30:18  18  ,eur_g12
05:30:18  19  ,eur_g13
05:30:18  20  ,eur_g14
05:30:18  21  ,eur_g15
05:30:18  22  ,eur_g16
05:30:18  23  ,eur_g17
05:30:18  24  ,eur_g18
05:30:18  25  ,eur_g19
05:30:18  26  ,eur_g20
05:30:18  27  ,eur_g21
05:30:18  28  ,eur_g22
05:30:18  29  ,eur_g23
05:30:18  30  ,eur_g24
05:30:18  31  ,eur_g25
05:30:18  32  ,eur_g26
05:30:18  33  ,eur_g27
05:30:18  34  ,eur_g28
05:30:18  35  ,eur_g29
05:30:18  36  ,eur_g30
05:30:18  37  ,eur_g31
05:30:18  38  ,eur_g32
05:30:18  39  ,eur_g33
05:30:18  40  ,eur_g34
05:30:18  41  ,eur_g35
05:30:18  42  ,eur_g36
05:30:18  43  ,eur_g37
05:30:18  44  ,eur_g38
05:30:18  45  ,eur_g39
05:30:18  46  ,eur_g40
05:30:18  47  ,eur_g41
05:30:18  48  ,aud_g00
05:30:18  49  ,aud_g01
05:30:18  50  ,aud_g02
05:30:18  51  ,aud_g03
05:30:18  52  ,aud_g04
05:30:18  53  ,aud_g05
05:30:18  54  ,aud_g06
05:30:18  55  ,aud_g07
05:30:18  56  ,aud_g08
05:30:18  57  ,aud_g09
05:30:18  58  ,aud_g10
05:30:18  59  ,aud_g11
05:30:18  60  ,aud_g12
05:30:18  61  ,aud_g13
05:30:18  62  ,aud_g14
05:30:18  63  ,aud_g15
05:30:18  64  ,aud_g16
05:30:18  65  ,aud_g17
05:30:18  66  ,aud_g18
05:30:18  67  ,aud_g19
05:30:18  68  ,aud_g20
05:30:18  69  ,aud_g21
05:30:18  70  ,aud_g22
05:30:18  71  ,aud_g23
05:30:18  72  ,aud_g24
05:30:18  73  ,aud_g25
05:30:18  74  ,aud_g26
05:30:18  75  ,aud_g27
05:30:18  76  ,aud_g28
05:30:18  77  ,aud_g29
05:30:18  78  ,aud_g30
05:30:18  79  ,aud_g31
05:30:18  80  ,aud_g32
05:30:18  81  ,aud_g33
05:30:18  82  ,aud_g34
05:30:18  83  ,aud_g35
05:30:18  84  ,aud_g36
05:30:18  85  ,aud_g37
05:30:18  86  ,aud_g38
05:30:18  87  ,aud_g39
05:30:18  88  ,aud_g40
05:30:18  89  ,aud_g41
05:30:18  90  ,gbp_g00
05:30:18  91  ,gbp_g01
05:30:18  92  ,gbp_g02
05:30:18  93  ,gbp_g03
05:30:18  94  ,gbp_g04
05:30:18  95  ,gbp_g05
05:30:18  96  ,gbp_g06
05:30:18  97  ,gbp_g07
05:30:18  98  ,gbp_g08
05:30:18  99  ,gbp_g09
05:30:18 100  ,gbp_g10
05:30:18 101  ,gbp_g11
05:30:18 102  ,gbp_g12
05:30:18 103  ,gbp_g13
05:30:18 104  ,gbp_g14
05:30:18 105  ,gbp_g15
05:30:18 106  ,gbp_g16
05:30:18 107  ,gbp_g17
05:30:18 108  ,gbp_g18
05:30:18 109  ,gbp_g19
05:30:18 110  ,gbp_g20
05:30:18 111  ,gbp_g21
05:30:18 112  ,gbp_g22
05:30:18 113  ,gbp_g23
05:30:18 114  ,gbp_g24
05:30:18 115  ,gbp_g25
05:30:18 116  ,gbp_g26
05:30:18 117  ,gbp_g27
05:30:18 118  ,gbp_g28
05:30:18 119  ,gbp_g29
05:30:18 120  ,gbp_g30
05:30:18 121  ,gbp_g31
05:30:18 122  ,gbp_g32
05:30:18 123  ,gbp_g33
05:30:18 124  ,gbp_g34
05:30:18 125  ,gbp_g35
05:30:18 126  ,gbp_g36
05:30:18 127  ,gbp_g37
05:30:18 128  ,gbp_g38
05:30:18 129  ,gbp_g39
05:30:18 130  ,gbp_g40
05:30:18 131  ,gbp_g41
05:30:18 132  ,jpy_g00
05:30:18 133  ,jpy_g01
05:30:18 134  ,jpy_g02
05:30:18 135  ,jpy_g03
05:30:18 136  ,jpy_g04
05:30:18 137  ,jpy_g05
05:30:18 138  ,jpy_g06
05:30:18 139  ,jpy_g07
05:30:18 140  ,jpy_g08
05:30:18 141  ,jpy_g09
05:30:18 142  ,jpy_g10
05:30:18 143  ,jpy_g11
05:30:18 144  ,jpy_g12
05:30:18 145  ,jpy_g13
05:30:18 146  ,jpy_g14
05:30:18 147  ,jpy_g15
05:30:18 148  ,jpy_g16
05:30:18 149  ,jpy_g17
05:30:18 150  ,jpy_g18
05:30:18 151  ,jpy_g19
05:30:18 152  ,jpy_g20
05:30:18 153  ,jpy_g21
05:30:18 154  ,jpy_g22
05:30:18 155  ,jpy_g23
05:30:18 156  ,jpy_g24
05:30:18 157  ,jpy_g25
05:30:18 158  ,jpy_g26
05:30:18 159  ,jpy_g27
05:30:18 160  ,jpy_g28
05:30:18 161  ,jpy_g29
05:30:18 162  ,jpy_g30
05:30:18 163  ,jpy_g31
05:30:18 164  ,jpy_g32
05:30:18 165  ,jpy_g33
05:30:18 166  ,jpy_g34
05:30:18 167  ,jpy_g35
05:30:18 168  ,jpy_g36
05:30:18 169  ,jpy_g37
05:30:18 170  ,jpy_g38
05:30:18 171  ,jpy_g39
05:30:18 172  ,jpy_g40
05:30:18 173  ,jpy_g41
05:30:18 174  ,cad_g00
05:30:18 175  ,cad_g01
05:30:18 176  ,cad_g02
05:30:18 177  ,cad_g03
05:30:18 178  ,cad_g04
05:30:18 179  ,cad_g05
05:30:18 180  ,cad_g06
05:30:18 181  ,cad_g07
05:30:18 182  ,cad_g08
05:30:18 183  ,cad_g09
05:30:18 184  ,cad_g10
05:30:18 185  ,cad_g11
05:30:18 186  ,cad_g12
05:30:18 187  ,cad_g13
05:30:18 188  ,cad_g14
05:30:18 189  ,cad_g15
05:30:18 190  ,cad_g16
05:30:18 191  ,cad_g17
05:30:18 192  ,cad_g18
05:30:18 193  ,cad_g19
05:30:18 194  ,cad_g20
05:30:18 195  ,cad_g21
05:30:18 196  ,cad_g22
05:30:18 197  ,cad_g23
05:30:18 198  ,cad_g24
05:30:18 199  ,cad_g25
05:30:18 200  ,cad_g26
05:30:18 201  ,cad_g27
05:30:18 202  ,cad_g28
05:30:18 203  ,cad_g29
05:30:18 204  ,cad_g30
05:30:18 205  ,cad_g31
05:30:18 206  ,cad_g32
05:30:18 207  ,cad_g33
05:30:18 208  ,cad_g34
05:30:18 209  ,cad_g35
05:30:18 210  ,cad_g36
05:30:18 211  ,cad_g37
05:30:18 212  ,cad_g38
05:30:18 213  ,cad_g39
05:30:18 214  ,cad_g40
05:30:18 215  ,cad_g41
05:30:18 216  ,chf_g00
05:30:18 217  ,chf_g01
05:30:18 218  ,chf_g02
05:30:18 219  ,chf_g03
05:30:18 220  ,chf_g04
05:30:18 221  ,chf_g05
05:30:18 222  ,chf_g06
05:30:18 223  ,chf_g07
05:30:18 224  ,chf_g08
05:30:18 225  ,chf_g09
05:30:18 226  ,chf_g10
05:30:18 227  ,chf_g11
05:30:18 228  ,chf_g12
05:30:18 229  ,chf_g13
05:30:18 230  ,chf_g14
05:30:18 231  ,chf_g15
05:30:18 232  ,chf_g16
05:30:18 233  ,chf_g17
05:30:18 234  ,chf_g18
05:30:18 235  ,chf_g19
05:30:18 236  ,chf_g20
05:30:18 237  ,chf_g21
05:30:18 238  ,chf_g22
05:30:18 239  ,chf_g23
05:30:18 240  ,chf_g24
05:30:18 241  ,chf_g25
05:30:18 242  ,chf_g26
05:30:18 243  ,chf_g27
05:30:18 244  ,chf_g28
05:30:18 245  ,chf_g29
05:30:18 246  ,chf_g30
05:30:18 247  ,chf_g31
05:30:18 248  ,chf_g32
05:30:18 249  ,chf_g33
05:30:18 250  ,chf_g34
05:30:18 251  ,chf_g35
05:30:18 252  ,chf_g36
05:30:18 253  ,chf_g37
05:30:18 254  ,chf_g38
05:30:18 255  ,chf_g39
05:30:18 256  ,chf_g40
05:30:18 257  ,chf_g41
05:30:18 258  FROM aud_ms6 m
05:30:18 259  WHERE gatt IN('nup','up')
05:30:18 260  AND 1+m.ydate < '&1'||' '||'&2'
05:30:18 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'05:15:00'

View created.

Elapsed: 00:00:00.12
05:30:18 SQL> 
05:30:18 SQL> -- rpt
05:30:18 SQL> 
05:30:18 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
05:30:18   2  
05:30:18 SQL> SELECT MAX(prdate) FROM bme
05:30:18   2  
05:30:18 SQL> -- Now build model from bme and score sme
05:30:18 SQL> @score1.sql
05:30:18 SQL> -- score1.sql
05:30:18 SQL> 
05:30:18 SQL> -- Does the 1st SVM score
05:30:18 SQL> 
05:30:18 SQL> -- Fill up svmc_apply_prep
05:30:18 SQL> @score.sql
05:30:18 SQL> --
05:30:18 SQL> -- score.sql
05:30:18 SQL> --
05:30:18 SQL> 
05:30:18 SQL> -- usage: score.sql
05:30:18 SQL> 
05:30:18 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
05:30:18 SQL> 
05:30:18 SQL> DEFINE target	= 'gatt'
05:30:18 SQL> DEFINE model_name = 'forex14'
05:30:18 SQL> DEFINE bldtable	= 'bme'
05:30:18 SQL> DEFINE scoretable = 'sme'
05:30:18 SQL> DEFINE case_id	= 'prdate'
05:30:18 SQL> 
05:30:18 SQL> -- Define a variable to help me exclude some columns from some data mining calls
05:30:18 SQL> DEFINE exclude1 = "'&target','&case_id'"
05:30:18 SQL> 
05:30:18 SQL> -- Builds an SVM model using pl/sql.
05:30:18 SQL> 
05:30:18 SQL> -----------------------------------------------------------------------
05:30:18 SQL> --			    BUILD THE MODEL
05:30:18 SQL> -----------------------------------------------------------------------
05:30:18 SQL> 
05:30:18 SQL> -- Cleanup old build data preparation objects for repeat runs
05:30:18 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
05:30:18 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
05:30:18 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
05:30:18 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
05:30:18 SQL> 
05:30:18 SQL> 
05:30:18 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
05:30:18 SQL> --
05:30:18 SQL> -- DROP	TABLE svmc_settings ;
05:30:18 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
05:30:18 SQL> -- DELETE svmc_settings;
05:30:18 SQL> 
05:30:18 SQL> -- The default classification algorithm is Naive Bayes. So override
05:30:18 SQL> -- this choice to SVM using a settings table.
05:30:18 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
05:30:18 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
05:30:18 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
05:30:18 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
05:30:18 SQL> -- models.
05:30:18 SQL> --
05:30:18 SQL> 
05:30:18 SQL> -- Do this once and then comment it out.
05:30:18 SQL> -- That makes script go faster.
05:30:18 SQL> -- BEGIN
05:30:18 SQL> -- -- Populate settings table
05:30:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:30:18 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
05:30:18 SQL> --
05:30:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:30:18 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
05:30:18 SQL> --
05:30:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:30:18 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
05:30:18 SQL> --   COMMIT;
05:30:18 SQL> -- END;
05:30:18 SQL> -- /
05:30:18 SQL> 
05:30:18 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
05:30:18 SQL> 
05:30:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
05:30:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:30:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:30:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
05:30:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:30:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:30:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
05:30:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:30:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:30:18 SQL> 
05:30:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
05:30:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:30:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:30:19 SQL> 
05:30:19 SQL> --------------------------------
05:30:19 SQL> -- PREPARE BUILD (TRAINING) DATA
05:30:19 SQL> --
05:30:19 SQL> 
05:30:19 SQL> -- 1. Missing Value treatment for all Predictors and
05:30:19 SQL> -- 2. Outlier Treatment and
05:30:19 SQL> -- 3. Normalization are performed below.
05:30:19 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
05:30:19 SQL> --    normalized here.
05:30:19 SQL> 
05:30:19 SQL> BEGIN
05:30:19   2  	-- Perform missing value treatment for all predictors
05:30:19   3  	-- create miss tables
05:30:19   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
05:30:19   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
05:30:19   6  
05:30:19   7  	-- populate miss tables
05:30:19   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
05:30:19   9  	  miss_table_name => 'svmc_miss_num',
05:30:19  10  	  data_table_name => '&bldtable',
05:30:19  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:30:19  12  
05:30:19  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
05:30:19  14  	  miss_table_name => 'svmc_miss_cat',
05:30:19  15  	  data_table_name => '&bldtable',
05:30:19  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:30:19  17  
05:30:19  18  	-- xform input data to replace missing values
05:30:19  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:30:19  20  	  miss_table_name => 'svmc_miss_num',
05:30:19  21  	  data_table_name => '&bldtable',
05:30:19  22  	  xform_view_name => 'xformed_build_miss_num');
05:30:19  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:30:19  24  	  miss_table_name => 'svmc_miss_cat',
05:30:19  25  	  data_table_name => '&bldtable',
05:30:19  26  	  xform_view_name => 'xformed_build_miss_cat');
05:30:19  27  
05:30:19  28  	-- Perform outlier treatment.
05:30:19  29  	-- create clip table
05:30:19  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
05:30:19  31  
05:30:19  32  	-- populate clip table
05:30:19  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
05:30:19  34  	  clip_table_name => 'svmc_clip',
05:30:19  35  	  data_table_name => '&bldtable',
05:30:19  36  	  tail_frac	  => 0.025,
05:30:19  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:30:19  38  
05:30:19  39  	-- xform input data to winsorized data
05:30:19  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
05:30:19  41  	  clip_table_name => 'svmc_clip',
05:30:19  42  	  data_table_name => '&bldtable',
05:30:19  43  	  xform_view_name => 'svmc_winsor');
05:30:19  44  
05:30:19  45  	-- create normalization table
05:30:19  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
05:30:19  47  
05:30:19  48  	-- populate normalization table based on winsorized data
05:30:19  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
05:30:19  50  	  norm_table_name => 'svmc_norm',
05:30:19  51  	  data_table_name => 'svmc_winsor',
05:30:19  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:30:19  53  
05:30:19  54  	-- normalize the original data
05:30:19  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:30:19  56  	  norm_table_name => 'svmc_norm',
05:30:19  57  	  data_table_name => '&bldtable',
05:30:19  58  	  xform_view_name => 'svmc_build_prep');
05:30:19  59  END;
05:30:19  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.80
05:30:36 SQL> 
05:30:36 SQL> ---------------------
05:30:36 SQL> -- CREATE A NEW MODEL
05:30:36 SQL> --
05:30:36 SQL> -- Cleanup old model with the same name for repeat runs
05:30:36 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
05:30:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:30:36   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.87
05:30:37 SQL> 
05:30:37 SQL> -- Build a new SVM Model
05:30:37 SQL> BEGIN
05:30:37   2  	DBMS_DATA_MINING.CREATE_MODEL(
05:30:37   3  	  model_name	      => '&model_name',
05:30:37   4  	  mining_function     => dbms_data_mining.classification,
05:30:37   5  	  data_table_name     => 'svmc_build_prep',
05:30:37   6  	  case_id_column_name => '&case_id',
05:30:37   7  	  target_column_name  => '&target',
05:30:37   8  	  settings_table_name => 'svmc_settings');
05:30:37   9  END;
05:30:37  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.17
05:31:05 SQL> 
05:31:05 SQL> -----------------------------------------------------------------------
05:31:05 SQL> --			       APPLY/score THE MODEL
05:31:05 SQL> -----------------------------------------------------------------------
05:31:05 SQL> 
05:31:05 SQL> -- Cleanup old scoring data preparation objects for repeat runs
05:31:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
05:31:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:31:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
05:31:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
05:31:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:31:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:31:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
05:31:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:31:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
05:31:06 SQL> -----------------------
05:31:06 SQL> -- PREPARE SCORING DATA
05:31:06 SQL> --
05:31:06 SQL> -- If the data for model creation has been prepared, then the data
05:31:06 SQL> -- to be scored using the model must be prepared in the same manner
05:31:06 SQL> -- in order to obtain meaningful results.
05:31:06 SQL> --
05:31:06 SQL> -- 1. Missing Value treatment for all Predictors and
05:31:06 SQL> -- 2. Normalization
05:31:06 SQL> -- No outlier treatment will be performed during test and apply. The
05:31:06 SQL> -- normalization step is sufficient, since the normalization parameters
05:31:06 SQL> -- already capture the effects of outlier treatment done with build data.
05:31:06 SQL> --
05:31:06 SQL> BEGIN
05:31:06   2  	-- Xform Test data to replace missing values
05:31:06   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:31:06   4  	  miss_table_name => 'svmc_miss_num',
05:31:06   5  	  data_table_name => '&scoretable',
05:31:06   6  	  xform_view_name => 'xformed_apply_miss_num');
05:31:06   7  
05:31:06   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:31:06   9  	  miss_table_name => 'svmc_miss_cat',
05:31:06  10  	  data_table_name => '&scoretable',
05:31:06  11  	  xform_view_name => 'xformed_apply_miss_cat');
05:31:06  12  
05:31:06  13  	-- Normalize the data to be scored
05:31:06  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:31:06  15  	  norm_table_name => 'svmc_norm',
05:31:06  16  	  data_table_name => '&scoretable',
05:31:06  17  	  xform_view_name => 'svmc_apply_prep');
05:31:06  18  END;
05:31:06  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.25
05:31:07 SQL> 
05:31:07 SQL> -- Use same model_name used in score.sql
05:31:07 SQL> DEFINE model_name = 'forex14'
05:31:07 SQL> 
05:31:07 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
05:31:07 SQL> 
05:31:07 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
05:31:07 SQL> 
05:31:07 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
05:31:07   2  SELECT
05:31:07   3  prdate
05:31:07   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
05:31:07   5  ,sysdate
05:31:07   6  ,SUBSTR(prdate,1,3)pair
05:31:07   7  ,SUBSTR(prdate,4,19)ydate
05:31:07   8  FROM svmc_apply_prep
05:31:07   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
05:31:07 SQL> @aud_score1day_gattn.sql	2010-12-31 05:05:00
05:31:07 SQL> --
05:31:07 SQL> -- aud_score1day_gattn.sql
05:31:07 SQL> --
05:31:07 SQL> 
05:31:07 SQL> CREATE OR REPLACE VIEW sme AS
05:31:07   2  SELECT
05:31:07   3  'aud'||m.ydate prdate
05:31:07   4  ,NULL gattn
05:31:07   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:31:07   6  ,eur_g00
05:31:07   7  ,eur_g01
05:31:07   8  ,eur_g02
05:31:07   9  ,eur_g03
05:31:07  10  ,eur_g04
05:31:07  11  ,eur_g05
05:31:07  12  ,eur_g06
05:31:07  13  ,eur_g07
05:31:07  14  ,eur_g08
05:31:07  15  ,eur_g09
05:31:07  16  ,eur_g10
05:31:07  17  ,eur_g11
05:31:07  18  ,eur_g12
05:31:07  19  ,eur_g13
05:31:07  20  ,eur_g14
05:31:07  21  ,eur_g15
05:31:07  22  ,eur_g16
05:31:07  23  ,eur_g17
05:31:07  24  ,eur_g18
05:31:07  25  ,eur_g19
05:31:07  26  ,eur_g20
05:31:07  27  ,eur_g21
05:31:07  28  ,eur_g22
05:31:07  29  ,eur_g23
05:31:07  30  ,eur_g24
05:31:07  31  ,eur_g25
05:31:07  32  ,eur_g26
05:31:07  33  ,eur_g27
05:31:07  34  ,eur_g28
05:31:07  35  ,eur_g29
05:31:07  36  ,eur_g30
05:31:07  37  ,eur_g31
05:31:07  38  ,eur_g32
05:31:07  39  ,eur_g33
05:31:07  40  ,eur_g34
05:31:07  41  ,eur_g35
05:31:07  42  ,eur_g36
05:31:07  43  ,eur_g37
05:31:07  44  ,eur_g38
05:31:07  45  ,eur_g39
05:31:07  46  ,eur_g40
05:31:07  47  ,eur_g41
05:31:07  48  ,aud_g00
05:31:07  49  ,aud_g01
05:31:07  50  ,aud_g02
05:31:07  51  ,aud_g03
05:31:07  52  ,aud_g04
05:31:07  53  ,aud_g05
05:31:07  54  ,aud_g06
05:31:07  55  ,aud_g07
05:31:07  56  ,aud_g08
05:31:07  57  ,aud_g09
05:31:07  58  ,aud_g10
05:31:07  59  ,aud_g11
05:31:07  60  ,aud_g12
05:31:07  61  ,aud_g13
05:31:07  62  ,aud_g14
05:31:07  63  ,aud_g15
05:31:07  64  ,aud_g16
05:31:07  65  ,aud_g17
05:31:07  66  ,aud_g18
05:31:07  67  ,aud_g19
05:31:07  68  ,aud_g20
05:31:07  69  ,aud_g21
05:31:07  70  ,aud_g22
05:31:07  71  ,aud_g23
05:31:07  72  ,aud_g24
05:31:07  73  ,aud_g25
05:31:07  74  ,aud_g26
05:31:07  75  ,aud_g27
05:31:07  76  ,aud_g28
05:31:07  77  ,aud_g29
05:31:07  78  ,aud_g30
05:31:07  79  ,aud_g31
05:31:07  80  ,aud_g32
05:31:07  81  ,aud_g33
05:31:07  82  ,aud_g34
05:31:07  83  ,aud_g35
05:31:07  84  ,aud_g36
05:31:07  85  ,aud_g37
05:31:07  86  ,aud_g38
05:31:07  87  ,aud_g39
05:31:07  88  ,aud_g40
05:31:07  89  ,aud_g41
05:31:07  90  ,gbp_g00
05:31:07  91  ,gbp_g01
05:31:07  92  ,gbp_g02
05:31:07  93  ,gbp_g03
05:31:07  94  ,gbp_g04
05:31:07  95  ,gbp_g05
05:31:07  96  ,gbp_g06
05:31:07  97  ,gbp_g07
05:31:07  98  ,gbp_g08
05:31:07  99  ,gbp_g09
05:31:07 100  ,gbp_g10
05:31:07 101  ,gbp_g11
05:31:07 102  ,gbp_g12
05:31:07 103  ,gbp_g13
05:31:07 104  ,gbp_g14
05:31:07 105  ,gbp_g15
05:31:07 106  ,gbp_g16
05:31:07 107  ,gbp_g17
05:31:07 108  ,gbp_g18
05:31:07 109  ,gbp_g19
05:31:07 110  ,gbp_g20
05:31:07 111  ,gbp_g21
05:31:07 112  ,gbp_g22
05:31:07 113  ,gbp_g23
05:31:07 114  ,gbp_g24
05:31:07 115  ,gbp_g25
05:31:07 116  ,gbp_g26
05:31:07 117  ,gbp_g27
05:31:07 118  ,gbp_g28
05:31:07 119  ,gbp_g29
05:31:07 120  ,gbp_g30
05:31:07 121  ,gbp_g31
05:31:07 122  ,gbp_g32
05:31:07 123  ,gbp_g33
05:31:07 124  ,gbp_g34
05:31:07 125  ,gbp_g35
05:31:07 126  ,gbp_g36
05:31:07 127  ,gbp_g37
05:31:07 128  ,gbp_g38
05:31:07 129  ,gbp_g39
05:31:07 130  ,gbp_g40
05:31:07 131  ,gbp_g41
05:31:07 132  ,jpy_g00
05:31:07 133  ,jpy_g01
05:31:07 134  ,jpy_g02
05:31:07 135  ,jpy_g03
05:31:07 136  ,jpy_g04
05:31:07 137  ,jpy_g05
05:31:07 138  ,jpy_g06
05:31:07 139  ,jpy_g07
05:31:07 140  ,jpy_g08
05:31:07 141  ,jpy_g09
05:31:07 142  ,jpy_g10
05:31:07 143  ,jpy_g11
05:31:07 144  ,jpy_g12
05:31:07 145  ,jpy_g13
05:31:07 146  ,jpy_g14
05:31:07 147  ,jpy_g15
05:31:07 148  ,jpy_g16
05:31:07 149  ,jpy_g17
05:31:07 150  ,jpy_g18
05:31:07 151  ,jpy_g19
05:31:07 152  ,jpy_g20
05:31:07 153  ,jpy_g21
05:31:07 154  ,jpy_g22
05:31:07 155  ,jpy_g23
05:31:07 156  ,jpy_g24
05:31:07 157  ,jpy_g25
05:31:07 158  ,jpy_g26
05:31:07 159  ,jpy_g27
05:31:07 160  ,jpy_g28
05:31:07 161  ,jpy_g29
05:31:07 162  ,jpy_g30
05:31:07 163  ,jpy_g31
05:31:07 164  ,jpy_g32
05:31:07 165  ,jpy_g33
05:31:07 166  ,jpy_g34
05:31:07 167  ,jpy_g35
05:31:07 168  ,jpy_g36
05:31:07 169  ,jpy_g37
05:31:07 170  ,jpy_g38
05:31:07 171  ,jpy_g39
05:31:07 172  ,jpy_g40
05:31:07 173  ,jpy_g41
05:31:07 174  ,cad_g00
05:31:07 175  ,cad_g01
05:31:07 176  ,cad_g02
05:31:07 177  ,cad_g03
05:31:07 178  ,cad_g04
05:31:07 179  ,cad_g05
05:31:07 180  ,cad_g06
05:31:07 181  ,cad_g07
05:31:07 182  ,cad_g08
05:31:07 183  ,cad_g09
05:31:07 184  ,cad_g10
05:31:07 185  ,cad_g11
05:31:07 186  ,cad_g12
05:31:07 187  ,cad_g13
05:31:07 188  ,cad_g14
05:31:07 189  ,cad_g15
05:31:07 190  ,cad_g16
05:31:07 191  ,cad_g17
05:31:07 192  ,cad_g18
05:31:07 193  ,cad_g19
05:31:07 194  ,cad_g20
05:31:07 195  ,cad_g21
05:31:07 196  ,cad_g22
05:31:07 197  ,cad_g23
05:31:07 198  ,cad_g24
05:31:07 199  ,cad_g25
05:31:07 200  ,cad_g26
05:31:07 201  ,cad_g27
05:31:07 202  ,cad_g28
05:31:07 203  ,cad_g29
05:31:07 204  ,cad_g30
05:31:07 205  ,cad_g31
05:31:07 206  ,cad_g32
05:31:07 207  ,cad_g33
05:31:07 208  ,cad_g34
05:31:07 209  ,cad_g35
05:31:07 210  ,cad_g36
05:31:07 211  ,cad_g37
05:31:07 212  ,cad_g38
05:31:07 213  ,cad_g39
05:31:07 214  ,cad_g40
05:31:07 215  ,cad_g41
05:31:07 216  ,chf_g00
05:31:07 217  ,chf_g01
05:31:07 218  ,chf_g02
05:31:07 219  ,chf_g03
05:31:07 220  ,chf_g04
05:31:07 221  ,chf_g05
05:31:07 222  ,chf_g06
05:31:07 223  ,chf_g07
05:31:07 224  ,chf_g08
05:31:07 225  ,chf_g09
05:31:07 226  ,chf_g10
05:31:07 227  ,chf_g11
05:31:07 228  ,chf_g12
05:31:07 229  ,chf_g13
05:31:07 230  ,chf_g14
05:31:07 231  ,chf_g15
05:31:07 232  ,chf_g16
05:31:07 233  ,chf_g17
05:31:07 234  ,chf_g18
05:31:07 235  ,chf_g19
05:31:07 236  ,chf_g20
05:31:07 237  ,chf_g21
05:31:07 238  ,chf_g22
05:31:07 239  ,chf_g23
05:31:07 240  ,chf_g24
05:31:07 241  ,chf_g25
05:31:07 242  ,chf_g26
05:31:07 243  ,chf_g27
05:31:07 244  ,chf_g28
05:31:07 245  ,chf_g29
05:31:07 246  ,chf_g30
05:31:07 247  ,chf_g31
05:31:07 248  ,chf_g32
05:31:07 249  ,chf_g33
05:31:07 250  ,chf_g34
05:31:07 251  ,chf_g35
05:31:07 252  ,chf_g36
05:31:07 253  ,chf_g37
05:31:07 254  ,chf_g38
05:31:07 255  ,chf_g39
05:31:07 256  ,chf_g40
05:31:07 257  ,chf_g41
05:31:07 258  FROM aud_ms6 m
05:31:07 259  WHERE m.ydate = '&1'||' '||'&2'
05:31:07 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'05:05:00'

View created.

Elapsed: 00:00:00.12
05:31:07 SQL> 
05:31:07 SQL> -- rpt
05:31:07 SQL> -- We should see just 1 row:
05:31:07 SQL> 
05:31:07 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
05:31:07 SQL> 
05:31:07 SQL> -- Build the model:
05:31:07 SQL> CREATE OR REPLACE VIEW bme AS
05:31:07   2  SELECT
05:31:07   3  'aud'||m.ydate prdate
05:31:07   4  ,gattn
05:31:07   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:31:07   6  ,eur_g00
05:31:07   7  ,eur_g01
05:31:07   8  ,eur_g02
05:31:07   9  ,eur_g03
05:31:07  10  ,eur_g04
05:31:07  11  ,eur_g05
05:31:07  12  ,eur_g06
05:31:07  13  ,eur_g07
05:31:07  14  ,eur_g08
05:31:07  15  ,eur_g09
05:31:07  16  ,eur_g10
05:31:07  17  ,eur_g11
05:31:07  18  ,eur_g12
05:31:07  19  ,eur_g13
05:31:07  20  ,eur_g14
05:31:07  21  ,eur_g15
05:31:07  22  ,eur_g16
05:31:07  23  ,eur_g17
05:31:07  24  ,eur_g18
05:31:07  25  ,eur_g19
05:31:07  26  ,eur_g20
05:31:07  27  ,eur_g21
05:31:07  28  ,eur_g22
05:31:07  29  ,eur_g23
05:31:07  30  ,eur_g24
05:31:07  31  ,eur_g25
05:31:07  32  ,eur_g26
05:31:07  33  ,eur_g27
05:31:07  34  ,eur_g28
05:31:07  35  ,eur_g29
05:31:07  36  ,eur_g30
05:31:07  37  ,eur_g31
05:31:07  38  ,eur_g32
05:31:07  39  ,eur_g33
05:31:07  40  ,eur_g34
05:31:07  41  ,eur_g35
05:31:07  42  ,eur_g36
05:31:07  43  ,eur_g37
05:31:07  44  ,eur_g38
05:31:07  45  ,eur_g39
05:31:07  46  ,eur_g40
05:31:07  47  ,eur_g41
05:31:07  48  ,aud_g00
05:31:07  49  ,aud_g01
05:31:07  50  ,aud_g02
05:31:07  51  ,aud_g03
05:31:07  52  ,aud_g04
05:31:07  53  ,aud_g05
05:31:07  54  ,aud_g06
05:31:07  55  ,aud_g07
05:31:07  56  ,aud_g08
05:31:07  57  ,aud_g09
05:31:07  58  ,aud_g10
05:31:07  59  ,aud_g11
05:31:07  60  ,aud_g12
05:31:07  61  ,aud_g13
05:31:07  62  ,aud_g14
05:31:07  63  ,aud_g15
05:31:07  64  ,aud_g16
05:31:07  65  ,aud_g17
05:31:07  66  ,aud_g18
05:31:07  67  ,aud_g19
05:31:07  68  ,aud_g20
05:31:07  69  ,aud_g21
05:31:07  70  ,aud_g22
05:31:07  71  ,aud_g23
05:31:07  72  ,aud_g24
05:31:07  73  ,aud_g25
05:31:07  74  ,aud_g26
05:31:07  75  ,aud_g27
05:31:07  76  ,aud_g28
05:31:07  77  ,aud_g29
05:31:07  78  ,aud_g30
05:31:07  79  ,aud_g31
05:31:07  80  ,aud_g32
05:31:07  81  ,aud_g33
05:31:07  82  ,aud_g34
05:31:07  83  ,aud_g35
05:31:07  84  ,aud_g36
05:31:07  85  ,aud_g37
05:31:07  86  ,aud_g38
05:31:07  87  ,aud_g39
05:31:07  88  ,aud_g40
05:31:07  89  ,aud_g41
05:31:07  90  ,gbp_g00
05:31:07  91  ,gbp_g01
05:31:07  92  ,gbp_g02
05:31:07  93  ,gbp_g03
05:31:07  94  ,gbp_g04
05:31:07  95  ,gbp_g05
05:31:07  96  ,gbp_g06
05:31:07  97  ,gbp_g07
05:31:07  98  ,gbp_g08
05:31:07  99  ,gbp_g09
05:31:07 100  ,gbp_g10
05:31:07 101  ,gbp_g11
05:31:07 102  ,gbp_g12
05:31:07 103  ,gbp_g13
05:31:07 104  ,gbp_g14
05:31:07 105  ,gbp_g15
05:31:07 106  ,gbp_g16
05:31:07 107  ,gbp_g17
05:31:07 108  ,gbp_g18
05:31:07 109  ,gbp_g19
05:31:07 110  ,gbp_g20
05:31:07 111  ,gbp_g21
05:31:07 112  ,gbp_g22
05:31:07 113  ,gbp_g23
05:31:07 114  ,gbp_g24
05:31:07 115  ,gbp_g25
05:31:07 116  ,gbp_g26
05:31:07 117  ,gbp_g27
05:31:07 118  ,gbp_g28
05:31:07 119  ,gbp_g29
05:31:07 120  ,gbp_g30
05:31:07 121  ,gbp_g31
05:31:07 122  ,gbp_g32
05:31:07 123  ,gbp_g33
05:31:07 124  ,gbp_g34
05:31:07 125  ,gbp_g35
05:31:07 126  ,gbp_g36
05:31:07 127  ,gbp_g37
05:31:07 128  ,gbp_g38
05:31:07 129  ,gbp_g39
05:31:07 130  ,gbp_g40
05:31:07 131  ,gbp_g41
05:31:07 132  ,jpy_g00
05:31:07 133  ,jpy_g01
05:31:07 134  ,jpy_g02
05:31:07 135  ,jpy_g03
05:31:07 136  ,jpy_g04
05:31:07 137  ,jpy_g05
05:31:07 138  ,jpy_g06
05:31:07 139  ,jpy_g07
05:31:07 140  ,jpy_g08
05:31:07 141  ,jpy_g09
05:31:07 142  ,jpy_g10
05:31:07 143  ,jpy_g11
05:31:07 144  ,jpy_g12
05:31:07 145  ,jpy_g13
05:31:07 146  ,jpy_g14
05:31:07 147  ,jpy_g15
05:31:07 148  ,jpy_g16
05:31:07 149  ,jpy_g17
05:31:07 150  ,jpy_g18
05:31:07 151  ,jpy_g19
05:31:07 152  ,jpy_g20
05:31:07 153  ,jpy_g21
05:31:07 154  ,jpy_g22
05:31:07 155  ,jpy_g23
05:31:07 156  ,jpy_g24
05:31:07 157  ,jpy_g25
05:31:07 158  ,jpy_g26
05:31:07 159  ,jpy_g27
05:31:07 160  ,jpy_g28
05:31:07 161  ,jpy_g29
05:31:07 162  ,jpy_g30
05:31:07 163  ,jpy_g31
05:31:07 164  ,jpy_g32
05:31:07 165  ,jpy_g33
05:31:07 166  ,jpy_g34
05:31:07 167  ,jpy_g35
05:31:07 168  ,jpy_g36
05:31:07 169  ,jpy_g37
05:31:07 170  ,jpy_g38
05:31:07 171  ,jpy_g39
05:31:07 172  ,jpy_g40
05:31:07 173  ,jpy_g41
05:31:07 174  ,cad_g00
05:31:07 175  ,cad_g01
05:31:07 176  ,cad_g02
05:31:07 177  ,cad_g03
05:31:07 178  ,cad_g04
05:31:07 179  ,cad_g05
05:31:07 180  ,cad_g06
05:31:07 181  ,cad_g07
05:31:07 182  ,cad_g08
05:31:07 183  ,cad_g09
05:31:07 184  ,cad_g10
05:31:07 185  ,cad_g11
05:31:07 186  ,cad_g12
05:31:07 187  ,cad_g13
05:31:07 188  ,cad_g14
05:31:07 189  ,cad_g15
05:31:07 190  ,cad_g16
05:31:07 191  ,cad_g17
05:31:07 192  ,cad_g18
05:31:07 193  ,cad_g19
05:31:07 194  ,cad_g20
05:31:07 195  ,cad_g21
05:31:07 196  ,cad_g22
05:31:07 197  ,cad_g23
05:31:07 198  ,cad_g24
05:31:07 199  ,cad_g25
05:31:07 200  ,cad_g26
05:31:07 201  ,cad_g27
05:31:07 202  ,cad_g28
05:31:07 203  ,cad_g29
05:31:07 204  ,cad_g30
05:31:07 205  ,cad_g31
05:31:07 206  ,cad_g32
05:31:07 207  ,cad_g33
05:31:07 208  ,cad_g34
05:31:07 209  ,cad_g35
05:31:07 210  ,cad_g36
05:31:07 211  ,cad_g37
05:31:07 212  ,cad_g38
05:31:07 213  ,cad_g39
05:31:07 214  ,cad_g40
05:31:07 215  ,cad_g41
05:31:07 216  ,chf_g00
05:31:07 217  ,chf_g01
05:31:07 218  ,chf_g02
05:31:07 219  ,chf_g03
05:31:07 220  ,chf_g04
05:31:07 221  ,chf_g05
05:31:07 222  ,chf_g06
05:31:07 223  ,chf_g07
05:31:07 224  ,chf_g08
05:31:07 225  ,chf_g09
05:31:07 226  ,chf_g10
05:31:07 227  ,chf_g11
05:31:07 228  ,chf_g12
05:31:07 229  ,chf_g13
05:31:07 230  ,chf_g14
05:31:07 231  ,chf_g15
05:31:07 232  ,chf_g16
05:31:07 233  ,chf_g17
05:31:07 234  ,chf_g18
05:31:07 235  ,chf_g19
05:31:07 236  ,chf_g20
05:31:07 237  ,chf_g21
05:31:07 238  ,chf_g22
05:31:07 239  ,chf_g23
05:31:07 240  ,chf_g24
05:31:07 241  ,chf_g25
05:31:07 242  ,chf_g26
05:31:07 243  ,chf_g27
05:31:07 244  ,chf_g28
05:31:07 245  ,chf_g29
05:31:07 246  ,chf_g30
05:31:07 247  ,chf_g31
05:31:07 248  ,chf_g32
05:31:07 249  ,chf_g33
05:31:07 250  ,chf_g34
05:31:07 251  ,chf_g35
05:31:07 252  ,chf_g36
05:31:07 253  ,chf_g37
05:31:07 254  ,chf_g38
05:31:07 255  ,chf_g39
05:31:07 256  ,chf_g40
05:31:07 257  ,chf_g41
05:31:07 258  FROM aud_ms6 m
05:31:07 259  WHERE gattn IN('nup','up')
05:31:07 260  AND 1+m.ydate < '&1'||' '||'&2'
05:31:07 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'05:05:00'

View created.

Elapsed: 00:00:00.13
05:31:07 SQL> 
05:31:07 SQL> -- rpt
05:31:07 SQL> 
05:31:07 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13155
up	     6382

Elapsed: 00:00:00.04
05:31:07 SQL> 
05:31:07 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 05:00:00

Elapsed: 00:00:00.03
05:31:07 SQL> 
05:31:07 SQL> -- Now build model from bme and score sme
05:31:07 SQL> @score1gattn.sql
05:31:07 SQL> -- score1gattn.sql
05:31:07 SQL> 
05:31:07 SQL> -- Does the 1st SVM score
05:31:07 SQL> 
05:31:07 SQL> -- Fill up svmc_apply_prep
05:31:07 SQL> @score_gattn.sql
05:31:07 SQL> --
05:31:07 SQL> -- score_gattn.sql
05:31:07 SQL> --
05:31:07 SQL> 
05:31:07 SQL> -- usage: score_gattn.sql
05:31:07 SQL> 
05:31:07 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
05:31:07 SQL> 
05:31:07 SQL> DEFINE target	= 'gattn'
05:31:07 SQL> DEFINE model_name = 'forex14'
05:31:07 SQL> DEFINE bldtable	= 'bme'
05:31:07 SQL> DEFINE scoretable = 'sme'
05:31:07 SQL> DEFINE case_id	= 'prdate'
05:31:07 SQL> 
05:31:07 SQL> -- Define a variable to help me exclude some columns from some data mining calls
05:31:07 SQL> DEFINE exclude1 = "'&target','&case_id'"
05:31:07 SQL> 
05:31:07 SQL> -- Builds an SVM model using pl/sql.
05:31:07 SQL> 
05:31:07 SQL> -----------------------------------------------------------------------
05:31:07 SQL> --			    BUILD THE MODEL
05:31:07 SQL> -----------------------------------------------------------------------
05:31:07 SQL> 
05:31:07 SQL> -- Cleanup old build data preparation objects for repeat runs
05:31:07 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
05:31:07 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
05:31:07 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
05:31:07 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
05:31:07 SQL> 
05:31:07 SQL> 
05:31:07 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
05:31:07 SQL> --
05:31:07 SQL> -- DROP	TABLE svmc_settings ;
05:31:07 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
05:31:07 SQL> -- DELETE svmc_settings;
05:31:07 SQL> 
05:31:07 SQL> -- The default classification algorithm is Naive Bayes. So override
05:31:07 SQL> -- this choice to SVM using a settings table.
05:31:07 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
05:31:07 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
05:31:07 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
05:31:07 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
05:31:07 SQL> -- models.
05:31:07 SQL> --
05:31:07 SQL> 
05:31:07 SQL> -- Do this once and then comment it out.
05:31:07 SQL> -- That makes script go faster.
05:31:07 SQL> -- BEGIN
05:31:07 SQL> -- -- Populate settings table
05:31:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:31:07 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
05:31:07 SQL> --
05:31:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:31:07 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
05:31:07 SQL> --
05:31:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:31:07 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
05:31:07 SQL> --   COMMIT;
05:31:07 SQL> -- END;
05:31:07 SQL> -- /
05:31:07 SQL> 
05:31:07 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
05:31:07 SQL> 
05:31:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
05:31:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:31:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:31:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
05:31:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:31:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:31:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
05:31:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:31:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.15
05:31:08 SQL> 
05:31:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
05:31:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:31:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:31:08 SQL> 
05:31:08 SQL> --------------------------------
05:31:08 SQL> -- PREPARE BUILD (TRAINING) DATA
05:31:08 SQL> --
05:31:08 SQL> 
05:31:08 SQL> -- 1. Missing Value treatment for all Predictors and
05:31:08 SQL> -- 2. Outlier Treatment and
05:31:08 SQL> -- 3. Normalization are performed below.
05:31:08 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
05:31:08 SQL> --    normalized here.
05:31:08 SQL> 
05:31:08 SQL> BEGIN
05:31:08   2  	-- Perform missing value treatment for all predictors
05:31:08   3  	-- create miss tables
05:31:08   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
05:31:08   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
05:31:08   6  
05:31:08   7  	-- populate miss tables
05:31:08   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
05:31:08   9  	  miss_table_name => 'svmc_miss_num',
05:31:08  10  	  data_table_name => '&bldtable',
05:31:08  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:31:08  12  
05:31:08  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
05:31:08  14  	  miss_table_name => 'svmc_miss_cat',
05:31:08  15  	  data_table_name => '&bldtable',
05:31:08  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:31:08  17  
05:31:08  18  	-- xform input data to replace missing values
05:31:08  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:31:08  20  	  miss_table_name => 'svmc_miss_num',
05:31:08  21  	  data_table_name => '&bldtable',
05:31:08  22  	  xform_view_name => 'xformed_build_miss_num');
05:31:08  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:31:08  24  	  miss_table_name => 'svmc_miss_cat',
05:31:08  25  	  data_table_name => '&bldtable',
05:31:08  26  	  xform_view_name => 'xformed_build_miss_cat');
05:31:08  27  
05:31:08  28  	-- Perform outlier treatment.
05:31:08  29  	-- create clip table
05:31:08  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
05:31:08  31  
05:31:08  32  	-- populate clip table
05:31:08  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
05:31:08  34  	  clip_table_name => 'svmc_clip',
05:31:08  35  	  data_table_name => '&bldtable',
05:31:08  36  	  tail_frac	  => 0.025,
05:31:08  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:31:08  38  
05:31:08  39  	-- xform input data to winsorized data
05:31:08  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
05:31:08  41  	  clip_table_name => 'svmc_clip',
05:31:08  42  	  data_table_name => '&bldtable',
05:31:08  43  	  xform_view_name => 'svmc_winsor');
05:31:08  44  
05:31:08  45  	-- create normalization table
05:31:08  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
05:31:08  47  
05:31:08  48  	-- populate normalization table based on winsorized data
05:31:08  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
05:31:08  50  	  norm_table_name => 'svmc_norm',
05:31:08  51  	  data_table_name => 'svmc_winsor',
05:31:08  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:31:08  53  
05:31:08  54  	-- normalize the original data
05:31:08  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:31:08  56  	  norm_table_name => 'svmc_norm',
05:31:08  57  	  data_table_name => '&bldtable',
05:31:08  58  	  xform_view_name => 'svmc_build_prep');
05:31:08  59  END;
05:31:08  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.50
05:31:26 SQL> 
05:31:26 SQL> ---------------------
05:31:26 SQL> -- CREATE A NEW MODEL
05:31:26 SQL> --
05:31:26 SQL> -- Cleanup old model with the same name for repeat runs
05:31:26 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
05:31:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:31:26   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.97
05:31:27 SQL> 
05:31:27 SQL> -- Build a new SVM Model
05:31:27 SQL> BEGIN
05:31:27   2  	DBMS_DATA_MINING.CREATE_MODEL(
05:31:27   3  	  model_name	      => '&model_name',
05:31:27   4  	  mining_function     => dbms_data_mining.classification,
05:31:27   5  	  data_table_name     => 'svmc_build_prep',
05:31:27   6  	  case_id_column_name => '&case_id',
05:31:27   7  	  target_column_name  => '&target',
05:31:27   8  	  settings_table_name => 'svmc_settings');
05:31:27   9  END;
05:31:27  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.53
05:31:55 SQL> 
05:31:55 SQL> -----------------------------------------------------------------------
05:31:55 SQL> --			       APPLY/score THE MODEL
05:31:55 SQL> -----------------------------------------------------------------------
05:31:55 SQL> 
05:31:55 SQL> -- Cleanup old scoring data preparation objects for repeat runs
05:31:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
05:31:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:31:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
05:31:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
05:31:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:31:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
05:31:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
05:31:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:31:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
05:31:55 SQL> -----------------------
05:31:55 SQL> -- PREPARE SCORING DATA
05:31:55 SQL> --
05:31:55 SQL> -- If the data for model creation has been prepared, then the data
05:31:55 SQL> -- to be scored using the model must be prepared in the same manner
05:31:55 SQL> -- in order to obtain meaningful results.
05:31:55 SQL> --
05:31:55 SQL> -- 1. Missing Value treatment for all Predictors and
05:31:55 SQL> -- 2. Normalization
05:31:55 SQL> -- No outlier treatment will be performed during test and apply. The
05:31:55 SQL> -- normalization step is sufficient, since the normalization parameters
05:31:55 SQL> -- already capture the effects of outlier treatment done with build data.
05:31:55 SQL> --
05:31:55 SQL> BEGIN
05:31:55   2  	-- Xform Test data to replace missing values
05:31:55   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:31:55   4  	  miss_table_name => 'svmc_miss_num',
05:31:55   5  	  data_table_name => '&scoretable',
05:31:55   6  	  xform_view_name => 'xformed_apply_miss_num');
05:31:55   7  
05:31:55   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:31:55   9  	  miss_table_name => 'svmc_miss_cat',
05:31:55  10  	  data_table_name => '&scoretable',
05:31:55  11  	  xform_view_name => 'xformed_apply_miss_cat');
05:31:55  12  
05:31:55  13  	-- Normalize the data to be scored
05:31:55  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:31:55  15  	  norm_table_name => 'svmc_norm',
05:31:55  16  	  data_table_name => '&scoretable',
05:31:55  17  	  xform_view_name => 'svmc_apply_prep');
05:31:55  18  END;
05:31:55  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
05:31:56 SQL> 
05:31:56 SQL> -- Use same model_name used in score_gattn.sql
05:31:56 SQL> DEFINE model_name = 'forex14'
05:31:56 SQL> 
05:31:56 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
05:31:56 SQL> 
05:31:56 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
05:31:56   2  SELECT
05:31:56   3  prdate
05:31:56   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
05:31:56   5  ,sysdate
05:31:56   6  ,SUBSTR(prdate,1,3)pair
05:31:56   7  ,SUBSTR(prdate,4,19)ydate
05:31:56   8  FROM svmc_apply_prep
05:31:56   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
05:31:56 SQL> @aud_score1day_gattn.sql	2010-12-31 05:10:00
05:31:56 SQL> --
05:31:56 SQL> -- aud_score1day_gattn.sql
05:31:56 SQL> --
05:31:56 SQL> 
05:31:56 SQL> CREATE OR REPLACE VIEW sme AS
05:31:56   2  SELECT
05:31:56   3  'aud'||m.ydate prdate
05:31:56   4  ,NULL gattn
05:31:56   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:31:56   6  ,eur_g00
05:31:56   7  ,eur_g01
05:31:56   8  ,eur_g02
05:31:56   9  ,eur_g03
05:31:56  10  ,eur_g04
05:31:56  11  ,eur_g05
05:31:56  12  ,eur_g06
05:31:56  13  ,eur_g07
05:31:56  14  ,eur_g08
05:31:56  15  ,eur_g09
05:31:56  16  ,eur_g10
05:31:56  17  ,eur_g11
05:31:56  18  ,eur_g12
05:31:56  19  ,eur_g13
05:31:56  20  ,eur_g14
05:31:56  21  ,eur_g15
05:31:56  22  ,eur_g16
05:31:56  23  ,eur_g17
05:31:56  24  ,eur_g18
05:31:56  25  ,eur_g19
05:31:56  26  ,eur_g20
05:31:56  27  ,eur_g21
05:31:56  28  ,eur_g22
05:31:56  29  ,eur_g23
05:31:56  30  ,eur_g24
05:31:56  31  ,eur_g25
05:31:56  32  ,eur_g26
05:31:56  33  ,eur_g27
05:31:56  34  ,eur_g28
05:31:56  35  ,eur_g29
05:31:56  36  ,eur_g30
05:31:56  37  ,eur_g31
05:31:56  38  ,eur_g32
05:31:56  39  ,eur_g33
05:31:56  40  ,eur_g34
05:31:56  41  ,eur_g35
05:31:56  42  ,eur_g36
05:31:56  43  ,eur_g37
05:31:56  44  ,eur_g38
05:31:56  45  ,eur_g39
05:31:56  46  ,eur_g40
05:31:56  47  ,eur_g41
05:31:56  48  ,aud_g00
05:31:56  49  ,aud_g01
05:31:56  50  ,aud_g02
05:31:56  51  ,aud_g03
05:31:56  52  ,aud_g04
05:31:56  53  ,aud_g05
05:31:56  54  ,aud_g06
05:31:56  55  ,aud_g07
05:31:56  56  ,aud_g08
05:31:56  57  ,aud_g09
05:31:56  58  ,aud_g10
05:31:56  59  ,aud_g11
05:31:56  60  ,aud_g12
05:31:56  61  ,aud_g13
05:31:56  62  ,aud_g14
05:31:56  63  ,aud_g15
05:31:56  64  ,aud_g16
05:31:56  65  ,aud_g17
05:31:56  66  ,aud_g18
05:31:56  67  ,aud_g19
05:31:56  68  ,aud_g20
05:31:56  69  ,aud_g21
05:31:56  70  ,aud_g22
05:31:56  71  ,aud_g23
05:31:56  72  ,aud_g24
05:31:56  73  ,aud_g25
05:31:56  74  ,aud_g26
05:31:56  75  ,aud_g27
05:31:56  76  ,aud_g28
05:31:56  77  ,aud_g29
05:31:56  78  ,aud_g30
05:31:56  79  ,aud_g31
05:31:56  80  ,aud_g32
05:31:56  81  ,aud_g33
05:31:56  82  ,aud_g34
05:31:56  83  ,aud_g35
05:31:56  84  ,aud_g36
05:31:56  85  ,aud_g37
05:31:56  86  ,aud_g38
05:31:56  87  ,aud_g39
05:31:56  88  ,aud_g40
05:31:56  89  ,aud_g41
05:31:56  90  ,gbp_g00
05:31:56  91  ,gbp_g01
05:31:56  92  ,gbp_g02
05:31:56  93  ,gbp_g03
05:31:56  94  ,gbp_g04
05:31:56  95  ,gbp_g05
05:31:56  96  ,gbp_g06
05:31:56  97  ,gbp_g07
05:31:56  98  ,gbp_g08
05:31:56  99  ,gbp_g09
05:31:56 100  ,gbp_g10
05:31:56 101  ,gbp_g11
05:31:56 102  ,gbp_g12
05:31:56 103  ,gbp_g13
05:31:56 104  ,gbp_g14
05:31:56 105  ,gbp_g15
05:31:56 106  ,gbp_g16
05:31:56 107  ,gbp_g17
05:31:56 108  ,gbp_g18
05:31:56 109  ,gbp_g19
05:31:56 110  ,gbp_g20
05:31:56 111  ,gbp_g21
05:31:56 112  ,gbp_g22
05:31:56 113  ,gbp_g23
05:31:56 114  ,gbp_g24
05:31:56 115  ,gbp_g25
05:31:56 116  ,gbp_g26
05:31:56 117  ,gbp_g27
05:31:56 118  ,gbp_g28
05:31:56 119  ,gbp_g29
05:31:56 120  ,gbp_g30
05:31:56 121  ,gbp_g31
05:31:56 122  ,gbp_g32
05:31:56 123  ,gbp_g33
05:31:56 124  ,gbp_g34
05:31:56 125  ,gbp_g35
05:31:56 126  ,gbp_g36
05:31:56 127  ,gbp_g37
05:31:56 128  ,gbp_g38
05:31:56 129  ,gbp_g39
05:31:56 130  ,gbp_g40
05:31:56 131  ,gbp_g41
05:31:56 132  ,jpy_g00
05:31:56 133  ,jpy_g01
05:31:56 134  ,jpy_g02
05:31:56 135  ,jpy_g03
05:31:56 136  ,jpy_g04
05:31:56 137  ,jpy_g05
05:31:56 138  ,jpy_g06
05:31:56 139  ,jpy_g07
05:31:56 140  ,jpy_g08
05:31:56 141  ,jpy_g09
05:31:56 142  ,jpy_g10
05:31:56 143  ,jpy_g11
05:31:56 144  ,jpy_g12
05:31:56 145  ,jpy_g13
05:31:56 146  ,jpy_g14
05:31:56 147  ,jpy_g15
05:31:56 148  ,jpy_g16
05:31:56 149  ,jpy_g17
05:31:56 150  ,jpy_g18
05:31:56 151  ,jpy_g19
05:31:56 152  ,jpy_g20
05:31:56 153  ,jpy_g21
05:31:56 154  ,jpy_g22
05:31:56 155  ,jpy_g23
05:31:56 156  ,jpy_g24
05:31:56 157  ,jpy_g25
05:31:56 158  ,jpy_g26
05:31:56 159  ,jpy_g27
05:31:56 160  ,jpy_g28
05:31:56 161  ,jpy_g29
05:31:56 162  ,jpy_g30
05:31:56 163  ,jpy_g31
05:31:56 164  ,jpy_g32
05:31:56 165  ,jpy_g33
05:31:56 166  ,jpy_g34
05:31:56 167  ,jpy_g35
05:31:56 168  ,jpy_g36
05:31:56 169  ,jpy_g37
05:31:56 170  ,jpy_g38
05:31:56 171  ,jpy_g39
05:31:56 172  ,jpy_g40
05:31:56 173  ,jpy_g41
05:31:56 174  ,cad_g00
05:31:56 175  ,cad_g01
05:31:56 176  ,cad_g02
05:31:56 177  ,cad_g03
05:31:56 178  ,cad_g04
05:31:56 179  ,cad_g05
05:31:56 180  ,cad_g06
05:31:56 181  ,cad_g07
05:31:56 182  ,cad_g08
05:31:56 183  ,cad_g09
05:31:56 184  ,cad_g10
05:31:56 185  ,cad_g11
05:31:56 186  ,cad_g12
05:31:56 187  ,cad_g13
05:31:56 188  ,cad_g14
05:31:56 189  ,cad_g15
05:31:56 190  ,cad_g16
05:31:56 191  ,cad_g17
05:31:56 192  ,cad_g18
05:31:56 193  ,cad_g19
05:31:56 194  ,cad_g20
05:31:56 195  ,cad_g21
05:31:56 196  ,cad_g22
05:31:56 197  ,cad_g23
05:31:56 198  ,cad_g24
05:31:56 199  ,cad_g25
05:31:56 200  ,cad_g26
05:31:56 201  ,cad_g27
05:31:56 202  ,cad_g28
05:31:56 203  ,cad_g29
05:31:56 204  ,cad_g30
05:31:56 205  ,cad_g31
05:31:56 206  ,cad_g32
05:31:56 207  ,cad_g33
05:31:56 208  ,cad_g34
05:31:56 209  ,cad_g35
05:31:56 210  ,cad_g36
05:31:56 211  ,cad_g37
05:31:56 212  ,cad_g38
05:31:56 213  ,cad_g39
05:31:56 214  ,cad_g40
05:31:56 215  ,cad_g41
05:31:56 216  ,chf_g00
05:31:56 217  ,chf_g01
05:31:56 218  ,chf_g02
05:31:56 219  ,chf_g03
05:31:56 220  ,chf_g04
05:31:56 221  ,chf_g05
05:31:56 222  ,chf_g06
05:31:56 223  ,chf_g07
05:31:56 224  ,chf_g08
05:31:56 225  ,chf_g09
05:31:56 226  ,chf_g10
05:31:56 227  ,chf_g11
05:31:56 228  ,chf_g12
05:31:56 229  ,chf_g13
05:31:56 230  ,chf_g14
05:31:56 231  ,chf_g15
05:31:56 232  ,chf_g16
05:31:56 233  ,chf_g17
05:31:56 234  ,chf_g18
05:31:56 235  ,chf_g19
05:31:56 236  ,chf_g20
05:31:56 237  ,chf_g21
05:31:56 238  ,chf_g22
05:31:56 239  ,chf_g23
05:31:56 240  ,chf_g24
05:31:56 241  ,chf_g25
05:31:56 242  ,chf_g26
05:31:56 243  ,chf_g27
05:31:56 244  ,chf_g28
05:31:56 245  ,chf_g29
05:31:56 246  ,chf_g30
05:31:56 247  ,chf_g31
05:31:56 248  ,chf_g32
05:31:56 249  ,chf_g33
05:31:56 250  ,chf_g34
05:31:56 251  ,chf_g35
05:31:56 252  ,chf_g36
05:31:56 253  ,chf_g37
05:31:56 254  ,chf_g38
05:31:56 255  ,chf_g39
05:31:56 256  ,chf_g40
05:31:56 257  ,chf_g41
05:31:56 258  FROM aud_ms6 m
05:31:56 259  WHERE m.ydate = '&1'||' '||'&2'
05:31:56 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'05:10:00'

View created.

Elapsed: 00:00:00.13
05:31:56 SQL> 
05:31:56 SQL> -- rpt
05:31:56 SQL> -- We should see just 1 row:
05:31:56 SQL> 
05:31:56 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.03
05:31:56 SQL> 
05:31:56 SQL> -- Build the model:
05:31:56 SQL> CREATE OR REPLACE VIEW bme AS
05:31:56   2  SELECT
05:31:56   3  'aud'||m.ydate prdate
05:31:56   4  ,gattn
05:31:56   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:31:56   6  ,eur_g00
05:31:56   7  ,eur_g01
05:31:56   8  ,eur_g02
05:31:56   9  ,eur_g03
05:31:56  10  ,eur_g04
05:31:56  11  ,eur_g05
05:31:56  12  ,eur_g06
05:31:56  13  ,eur_g07
05:31:56  14  ,eur_g08
05:31:56  15  ,eur_g09
05:31:56  16  ,eur_g10
05:31:56  17  ,eur_g11
05:31:56  18  ,eur_g12
05:31:56  19  ,eur_g13
05:31:56  20  ,eur_g14
05:31:56  21  ,eur_g15
05:31:56  22  ,eur_g16
05:31:56  23  ,eur_g17
05:31:56  24  ,eur_g18
05:31:56  25  ,eur_g19
05:31:56  26  ,eur_g20
05:31:56  27  ,eur_g21
05:31:56  28  ,eur_g22
05:31:56  29  ,eur_g23
05:31:56  30  ,eur_g24
05:31:56  31  ,eur_g25
05:31:56  32  ,eur_g26
05:31:56  33  ,eur_g27
05:31:56  34  ,eur_g28
05:31:56  35  ,eur_g29
05:31:56  36  ,eur_g30
05:31:56  37  ,eur_g31
05:31:56  38  ,eur_g32
05:31:56  39  ,eur_g33
05:31:56  40  ,eur_g34
05:31:56  41  ,eur_g35
05:31:56  42  ,eur_g36
05:31:56  43  ,eur_g37
05:31:56  44  ,eur_g38
05:31:56  45  ,eur_g39
05:31:56  46  ,eur_g40
05:31:56  47  ,eur_g41
05:31:56  48  ,aud_g00
05:31:56  49  ,aud_g01
05:31:56  50  ,aud_g02
05:31:56  51  ,aud_g03
05:31:56  52  ,aud_g04
05:31:56  53  ,aud_g05
05:31:56  54  ,aud_g06
05:31:56  55  ,aud_g07
05:31:56  56  ,aud_g08
05:31:56  57  ,aud_g09
05:31:56  58  ,aud_g10
05:31:56  59  ,aud_g11
05:31:56  60  ,aud_g12
05:31:56  61  ,aud_g13
05:31:56  62  ,aud_g14
05:31:56  63  ,aud_g15
05:31:56  64  ,aud_g16
05:31:56  65  ,aud_g17
05:31:56  66  ,aud_g18
05:31:56  67  ,aud_g19
05:31:56  68  ,aud_g20
05:31:56  69  ,aud_g21
05:31:56  70  ,aud_g22
05:31:56  71  ,aud_g23
05:31:56  72  ,aud_g24
05:31:56  73  ,aud_g25
05:31:56  74  ,aud_g26
05:31:56  75  ,aud_g27
05:31:56  76  ,aud_g28
05:31:56  77  ,aud_g29
05:31:56  78  ,aud_g30
05:31:56  79  ,aud_g31
05:31:56  80  ,aud_g32
05:31:56  81  ,aud_g33
05:31:56  82  ,aud_g34
05:31:56  83  ,aud_g35
05:31:56  84  ,aud_g36
05:31:56  85  ,aud_g37
05:31:56  86  ,aud_g38
05:31:56  87  ,aud_g39
05:31:56  88  ,aud_g40
05:31:56  89  ,aud_g41
05:31:56  90  ,gbp_g00
05:31:56  91  ,gbp_g01
05:31:56  92  ,gbp_g02
05:31:56  93  ,gbp_g03
05:31:56  94  ,gbp_g04
05:31:56  95  ,gbp_g05
05:31:56  96  ,gbp_g06
05:31:56  97  ,gbp_g07
05:31:56  98  ,gbp_g08
05:31:56  99  ,gbp_g09
05:31:56 100  ,gbp_g10
05:31:56 101  ,gbp_g11
05:31:56 102  ,gbp_g12
05:31:56 103  ,gbp_g13
05:31:56 104  ,gbp_g14
05:31:56 105  ,gbp_g15
05:31:56 106  ,gbp_g16
05:31:56 107  ,gbp_g17
05:31:56 108  ,gbp_g18
05:31:56 109  ,gbp_g19
05:31:56 110  ,gbp_g20
05:31:56 111  ,gbp_g21
05:31:56 112  ,gbp_g22
05:31:56 113  ,gbp_g23
05:31:56 114  ,gbp_g24
05:31:56 115  ,gbp_g25
05:31:56 116  ,gbp_g26
05:31:56 117  ,gbp_g27
05:31:56 118  ,gbp_g28
05:31:56 119  ,gbp_g29
05:31:56 120  ,gbp_g30
05:31:56 121  ,gbp_g31
05:31:56 122  ,gbp_g32
05:31:56 123  ,gbp_g33
05:31:56 124  ,gbp_g34
05:31:56 125  ,gbp_g35
05:31:56 126  ,gbp_g36
05:31:56 127  ,gbp_g37
05:31:56 128  ,gbp_g38
05:31:56 129  ,gbp_g39
05:31:56 130  ,gbp_g40
05:31:56 131  ,gbp_g41
05:31:56 132  ,jpy_g00
05:31:56 133  ,jpy_g01
05:31:56 134  ,jpy_g02
05:31:56 135  ,jpy_g03
05:31:56 136  ,jpy_g04
05:31:56 137  ,jpy_g05
05:31:56 138  ,jpy_g06
05:31:56 139  ,jpy_g07
05:31:56 140  ,jpy_g08
05:31:56 141  ,jpy_g09
05:31:56 142  ,jpy_g10
05:31:56 143  ,jpy_g11
05:31:56 144  ,jpy_g12
05:31:56 145  ,jpy_g13
05:31:56 146  ,jpy_g14
05:31:56 147  ,jpy_g15
05:31:56 148  ,jpy_g16
05:31:56 149  ,jpy_g17
05:31:56 150  ,jpy_g18
05:31:56 151  ,jpy_g19
05:31:56 152  ,jpy_g20
05:31:56 153  ,jpy_g21
05:31:56 154  ,jpy_g22
05:31:56 155  ,jpy_g23
05:31:56 156  ,jpy_g24
05:31:56 157  ,jpy_g25
05:31:56 158  ,jpy_g26
05:31:56 159  ,jpy_g27
05:31:56 160  ,jpy_g28
05:31:56 161  ,jpy_g29
05:31:56 162  ,jpy_g30
05:31:56 163  ,jpy_g31
05:31:56 164  ,jpy_g32
05:31:56 165  ,jpy_g33
05:31:56 166  ,jpy_g34
05:31:56 167  ,jpy_g35
05:31:56 168  ,jpy_g36
05:31:56 169  ,jpy_g37
05:31:56 170  ,jpy_g38
05:31:56 171  ,jpy_g39
05:31:56 172  ,jpy_g40
05:31:56 173  ,jpy_g41
05:31:56 174  ,cad_g00
05:31:56 175  ,cad_g01
05:31:56 176  ,cad_g02
05:31:56 177  ,cad_g03
05:31:56 178  ,cad_g04
05:31:56 179  ,cad_g05
05:31:56 180  ,cad_g06
05:31:56 181  ,cad_g07
05:31:56 182  ,cad_g08
05:31:56 183  ,cad_g09
05:31:56 184  ,cad_g10
05:31:56 185  ,cad_g11
05:31:56 186  ,cad_g12
05:31:56 187  ,cad_g13
05:31:56 188  ,cad_g14
05:31:56 189  ,cad_g15
05:31:56 190  ,cad_g16
05:31:56 191  ,cad_g17
05:31:56 192  ,cad_g18
05:31:56 193  ,cad_g19
05:31:56 194  ,cad_g20
05:31:56 195  ,cad_g21
05:31:56 196  ,cad_g22
05:31:56 197  ,cad_g23
05:31:56 198  ,cad_g24
05:31:56 199  ,cad_g25
05:31:56 200  ,cad_g26
05:31:56 201  ,cad_g27
05:31:56 202  ,cad_g28
05:31:56 203  ,cad_g29
05:31:56 204  ,cad_g30
05:31:56 205  ,cad_g31
05:31:56 206  ,cad_g32
05:31:56 207  ,cad_g33
05:31:56 208  ,cad_g34
05:31:56 209  ,cad_g35
05:31:56 210  ,cad_g36
05:31:56 211  ,cad_g37
05:31:56 212  ,cad_g38
05:31:56 213  ,cad_g39
05:31:56 214  ,cad_g40
05:31:56 215  ,cad_g41
05:31:56 216  ,chf_g00
05:31:56 217  ,chf_g01
05:31:56 218  ,chf_g02
05:31:56 219  ,chf_g03
05:31:56 220  ,chf_g04
05:31:56 221  ,chf_g05
05:31:56 222  ,chf_g06
05:31:56 223  ,chf_g07
05:31:56 224  ,chf_g08
05:31:56 225  ,chf_g09
05:31:56 226  ,chf_g10
05:31:56 227  ,chf_g11
05:31:56 228  ,chf_g12
05:31:56 229  ,chf_g13
05:31:56 230  ,chf_g14
05:31:56 231  ,chf_g15
05:31:56 232  ,chf_g16
05:31:56 233  ,chf_g17
05:31:56 234  ,chf_g18
05:31:56 235  ,chf_g19
05:31:56 236  ,chf_g20
05:31:56 237  ,chf_g21
05:31:56 238  ,chf_g22
05:31:56 239  ,chf_g23
05:31:56 240  ,chf_g24
05:31:56 241  ,chf_g25
05:31:56 242  ,chf_g26
05:31:56 243  ,chf_g27
05:31:56 244  ,chf_g28
05:31:56 245  ,chf_g29
05:31:56 246  ,chf_g30
05:31:56 247  ,chf_g31
05:31:56 248  ,chf_g32
05:31:56 249  ,chf_g33
05:31:56 250  ,chf_g34
05:31:56 251  ,chf_g35
05:31:56 252  ,chf_g36
05:31:56 253  ,chf_g37
05:31:56 254  ,chf_g38
05:31:56 255  ,chf_g39
05:31:56 256  ,chf_g40
05:31:56 257  ,chf_g41
05:31:56 258  FROM aud_ms6 m
05:31:56 259  WHERE gattn IN('nup','up')
05:31:56 260  AND 1+m.ydate < '&1'||' '||'&2'
05:31:56 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'05:10:00'

View created.

Elapsed: 00:00:00.13
05:31:57 SQL> 
05:31:57 SQL> -- rpt
05:31:57 SQL> 
05:31:57 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13156
up	     6382

Elapsed: 00:00:00.04
05:31:57 SQL> 
05:31:57 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 05:05:00

Elapsed: 00:00:00.04
05:31:57 SQL> 
05:31:57 SQL> -- Now build model from bme and score sme
05:31:57 SQL> @score1gattn.sql
05:31:57 SQL> -- score1gattn.sql
05:31:57 SQL> 
05:31:57 SQL> -- Does the 1st SVM score
05:31:57 SQL> 
05:31:57 SQL> -- Fill up svmc_apply_prep
05:31:57 SQL> @score_gattn.sql
05:31:57 SQL> --
05:31:57 SQL> -- score_gattn.sql
05:31:57 SQL> --
05:31:57 SQL> 
05:31:57 SQL> -- usage: score_gattn.sql
05:31:57 SQL> 
05:31:57 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
05:31:57 SQL> 
05:31:57 SQL> DEFINE target	= 'gattn'
05:31:57 SQL> DEFINE model_name = 'forex14'
05:31:57 SQL> DEFINE bldtable	= 'bme'
05:31:57 SQL> DEFINE scoretable = 'sme'
05:31:57 SQL> DEFINE case_id	= 'prdate'
05:31:57 SQL> 
05:31:57 SQL> -- Define a variable to help me exclude some columns from some data mining calls
05:31:57 SQL> DEFINE exclude1 = "'&target','&case_id'"
05:31:57 SQL> 
05:31:57 SQL> -- Builds an SVM model using pl/sql.
05:31:57 SQL> 
05:31:57 SQL> -----------------------------------------------------------------------
05:31:57 SQL> --			    BUILD THE MODEL
05:31:57 SQL> -----------------------------------------------------------------------
05:31:57 SQL> 
05:31:57 SQL> -- Cleanup old build data preparation objects for repeat runs
05:31:57 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
05:31:57 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
05:31:57 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
05:31:57 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
05:31:57 SQL> 
05:31:57 SQL> 
05:31:57 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
05:31:57 SQL> --
05:31:57 SQL> -- DROP	TABLE svmc_settings ;
05:31:57 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
05:31:57 SQL> -- DELETE svmc_settings;
05:31:57 SQL> 
05:31:57 SQL> -- The default classification algorithm is Naive Bayes. So override
05:31:57 SQL> -- this choice to SVM using a settings table.
05:31:57 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
05:31:57 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
05:31:57 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
05:31:57 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
05:31:57 SQL> -- models.
05:31:57 SQL> --
05:31:57 SQL> 
05:31:57 SQL> -- Do this once and then comment it out.
05:31:57 SQL> -- That makes script go faster.
05:31:57 SQL> -- BEGIN
05:31:57 SQL> -- -- Populate settings table
05:31:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:31:57 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
05:31:57 SQL> --
05:31:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:31:57 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
05:31:57 SQL> --
05:31:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:31:57 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
05:31:57 SQL> --   COMMIT;
05:31:57 SQL> -- END;
05:31:57 SQL> -- /
05:31:57 SQL> 
05:31:57 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
05:31:57 SQL> 
05:31:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
05:31:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:31:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:31:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
05:31:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:31:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:31:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
05:31:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:31:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:31:57 SQL> 
05:31:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
05:31:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:31:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:31:57 SQL> 
05:31:57 SQL> --------------------------------
05:31:57 SQL> -- PREPARE BUILD (TRAINING) DATA
05:31:57 SQL> --
05:31:57 SQL> 
05:31:57 SQL> -- 1. Missing Value treatment for all Predictors and
05:31:57 SQL> -- 2. Outlier Treatment and
05:31:57 SQL> -- 3. Normalization are performed below.
05:31:57 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
05:31:57 SQL> --    normalized here.
05:31:57 SQL> 
05:31:57 SQL> BEGIN
05:31:57   2  	-- Perform missing value treatment for all predictors
05:31:57   3  	-- create miss tables
05:31:57   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
05:31:57   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
05:31:57   6  
05:31:57   7  	-- populate miss tables
05:31:57   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
05:31:57   9  	  miss_table_name => 'svmc_miss_num',
05:31:57  10  	  data_table_name => '&bldtable',
05:31:57  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:31:57  12  
05:31:57  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
05:31:57  14  	  miss_table_name => 'svmc_miss_cat',
05:31:57  15  	  data_table_name => '&bldtable',
05:31:57  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:31:57  17  
05:31:57  18  	-- xform input data to replace missing values
05:31:57  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:31:57  20  	  miss_table_name => 'svmc_miss_num',
05:31:57  21  	  data_table_name => '&bldtable',
05:31:57  22  	  xform_view_name => 'xformed_build_miss_num');
05:31:57  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:31:57  24  	  miss_table_name => 'svmc_miss_cat',
05:31:57  25  	  data_table_name => '&bldtable',
05:31:57  26  	  xform_view_name => 'xformed_build_miss_cat');
05:31:57  27  
05:31:57  28  	-- Perform outlier treatment.
05:31:57  29  	-- create clip table
05:31:57  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
05:31:57  31  
05:31:57  32  	-- populate clip table
05:31:57  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
05:31:57  34  	  clip_table_name => 'svmc_clip',
05:31:57  35  	  data_table_name => '&bldtable',
05:31:57  36  	  tail_frac	  => 0.025,
05:31:57  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:31:57  38  
05:31:57  39  	-- xform input data to winsorized data
05:31:57  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
05:31:57  41  	  clip_table_name => 'svmc_clip',
05:31:57  42  	  data_table_name => '&bldtable',
05:31:57  43  	  xform_view_name => 'svmc_winsor');
05:31:57  44  
05:31:57  45  	-- create normalization table
05:31:57  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
05:31:57  47  
05:31:57  48  	-- populate normalization table based on winsorized data
05:31:57  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
05:31:57  50  	  norm_table_name => 'svmc_norm',
05:31:57  51  	  data_table_name => 'svmc_winsor',
05:31:57  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:31:57  53  
05:31:57  54  	-- normalize the original data
05:31:57  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:31:57  56  	  norm_table_name => 'svmc_norm',
05:31:57  57  	  data_table_name => '&bldtable',
05:31:57  58  	  xform_view_name => 'svmc_build_prep');
05:31:57  59  END;
05:31:57  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.13
05:32:15 SQL> 
05:32:15 SQL> ---------------------
05:32:15 SQL> -- CREATE A NEW MODEL
05:32:15 SQL> --
05:32:15 SQL> -- Cleanup old model with the same name for repeat runs
05:32:15 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
05:32:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:32:15   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.96
05:32:16 SQL> 
05:32:16 SQL> -- Build a new SVM Model
05:32:16 SQL> BEGIN
05:32:16   2  	DBMS_DATA_MINING.CREATE_MODEL(
05:32:16   3  	  model_name	      => '&model_name',
05:32:16   4  	  mining_function     => dbms_data_mining.classification,
05:32:16   5  	  data_table_name     => 'svmc_build_prep',
05:32:16   6  	  case_id_column_name => '&case_id',
05:32:16   7  	  target_column_name  => '&target',
05:32:16   8  	  settings_table_name => 'svmc_settings');
05:32:16   9  END;
05:32:16  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.01
05:32:45 SQL> 
05:32:45 SQL> -----------------------------------------------------------------------
05:32:45 SQL> --			       APPLY/score THE MODEL
05:32:45 SQL> -----------------------------------------------------------------------
05:32:45 SQL> 
05:32:45 SQL> -- Cleanup old scoring data preparation objects for repeat runs
05:32:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
05:32:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:32:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
05:32:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
05:32:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:32:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:32:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
05:32:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:32:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:32:45 SQL> -----------------------
05:32:45 SQL> -- PREPARE SCORING DATA
05:32:45 SQL> --
05:32:45 SQL> -- If the data for model creation has been prepared, then the data
05:32:45 SQL> -- to be scored using the model must be prepared in the same manner
05:32:45 SQL> -- in order to obtain meaningful results.
05:32:45 SQL> --
05:32:45 SQL> -- 1. Missing Value treatment for all Predictors and
05:32:45 SQL> -- 2. Normalization
05:32:45 SQL> -- No outlier treatment will be performed during test and apply. The
05:32:45 SQL> -- normalization step is sufficient, since the normalization parameters
05:32:45 SQL> -- already capture the effects of outlier treatment done with build data.
05:32:45 SQL> --
05:32:45 SQL> BEGIN
05:32:45   2  	-- Xform Test data to replace missing values
05:32:45   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:32:45   4  	  miss_table_name => 'svmc_miss_num',
05:32:45   5  	  data_table_name => '&scoretable',
05:32:45   6  	  xform_view_name => 'xformed_apply_miss_num');
05:32:45   7  
05:32:45   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:32:45   9  	  miss_table_name => 'svmc_miss_cat',
05:32:45  10  	  data_table_name => '&scoretable',
05:32:45  11  	  xform_view_name => 'xformed_apply_miss_cat');
05:32:45  12  
05:32:45  13  	-- Normalize the data to be scored
05:32:45  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:32:45  15  	  norm_table_name => 'svmc_norm',
05:32:45  16  	  data_table_name => '&scoretable',
05:32:45  17  	  xform_view_name => 'svmc_apply_prep');
05:32:45  18  END;
05:32:45  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.24
05:32:46 SQL> 
05:32:46 SQL> -- Use same model_name used in score_gattn.sql
05:32:46 SQL> DEFINE model_name = 'forex14'
05:32:46 SQL> 
05:32:46 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
05:32:46 SQL> 
05:32:46 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
05:32:46   2  SELECT
05:32:46   3  prdate
05:32:46   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
05:32:46   5  ,sysdate
05:32:46   6  ,SUBSTR(prdate,1,3)pair
05:32:46   7  ,SUBSTR(prdate,4,19)ydate
05:32:46   8  FROM svmc_apply_prep
05:32:46   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
05:32:47 SQL> @aud_score1day_gattn.sql	2010-12-31 05:15:00
05:32:47 SQL> --
05:32:47 SQL> -- aud_score1day_gattn.sql
05:32:47 SQL> --
05:32:47 SQL> 
05:32:47 SQL> CREATE OR REPLACE VIEW sme AS
05:32:47   2  SELECT
05:32:47   3  'aud'||m.ydate prdate
05:32:47   4  ,NULL gattn
05:32:47   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:32:47   6  ,eur_g00
05:32:47   7  ,eur_g01
05:32:47   8  ,eur_g02
05:32:47   9  ,eur_g03
05:32:47  10  ,eur_g04
05:32:47  11  ,eur_g05
05:32:47  12  ,eur_g06
05:32:47  13  ,eur_g07
05:32:47  14  ,eur_g08
05:32:47  15  ,eur_g09
05:32:47  16  ,eur_g10
05:32:47  17  ,eur_g11
05:32:47  18  ,eur_g12
05:32:47  19  ,eur_g13
05:32:47  20  ,eur_g14
05:32:47  21  ,eur_g15
05:32:47  22  ,eur_g16
05:32:47  23  ,eur_g17
05:32:47  24  ,eur_g18
05:32:47  25  ,eur_g19
05:32:47  26  ,eur_g20
05:32:47  27  ,eur_g21
05:32:47  28  ,eur_g22
05:32:47  29  ,eur_g23
05:32:47  30  ,eur_g24
05:32:47  31  ,eur_g25
05:32:47  32  ,eur_g26
05:32:47  33  ,eur_g27
05:32:47  34  ,eur_g28
05:32:47  35  ,eur_g29
05:32:47  36  ,eur_g30
05:32:47  37  ,eur_g31
05:32:47  38  ,eur_g32
05:32:47  39  ,eur_g33
05:32:47  40  ,eur_g34
05:32:47  41  ,eur_g35
05:32:47  42  ,eur_g36
05:32:47  43  ,eur_g37
05:32:47  44  ,eur_g38
05:32:47  45  ,eur_g39
05:32:47  46  ,eur_g40
05:32:47  47  ,eur_g41
05:32:47  48  ,aud_g00
05:32:47  49  ,aud_g01
05:32:47  50  ,aud_g02
05:32:47  51  ,aud_g03
05:32:47  52  ,aud_g04
05:32:47  53  ,aud_g05
05:32:47  54  ,aud_g06
05:32:47  55  ,aud_g07
05:32:47  56  ,aud_g08
05:32:47  57  ,aud_g09
05:32:47  58  ,aud_g10
05:32:47  59  ,aud_g11
05:32:47  60  ,aud_g12
05:32:47  61  ,aud_g13
05:32:47  62  ,aud_g14
05:32:47  63  ,aud_g15
05:32:47  64  ,aud_g16
05:32:47  65  ,aud_g17
05:32:47  66  ,aud_g18
05:32:47  67  ,aud_g19
05:32:47  68  ,aud_g20
05:32:47  69  ,aud_g21
05:32:47  70  ,aud_g22
05:32:47  71  ,aud_g23
05:32:47  72  ,aud_g24
05:32:47  73  ,aud_g25
05:32:47  74  ,aud_g26
05:32:47  75  ,aud_g27
05:32:47  76  ,aud_g28
05:32:47  77  ,aud_g29
05:32:47  78  ,aud_g30
05:32:47  79  ,aud_g31
05:32:47  80  ,aud_g32
05:32:47  81  ,aud_g33
05:32:47  82  ,aud_g34
05:32:47  83  ,aud_g35
05:32:47  84  ,aud_g36
05:32:47  85  ,aud_g37
05:32:47  86  ,aud_g38
05:32:47  87  ,aud_g39
05:32:47  88  ,aud_g40
05:32:47  89  ,aud_g41
05:32:47  90  ,gbp_g00
05:32:47  91  ,gbp_g01
05:32:47  92  ,gbp_g02
05:32:47  93  ,gbp_g03
05:32:47  94  ,gbp_g04
05:32:47  95  ,gbp_g05
05:32:47  96  ,gbp_g06
05:32:47  97  ,gbp_g07
05:32:47  98  ,gbp_g08
05:32:47  99  ,gbp_g09
05:32:47 100  ,gbp_g10
05:32:47 101  ,gbp_g11
05:32:47 102  ,gbp_g12
05:32:47 103  ,gbp_g13
05:32:47 104  ,gbp_g14
05:32:47 105  ,gbp_g15
05:32:47 106  ,gbp_g16
05:32:47 107  ,gbp_g17
05:32:47 108  ,gbp_g18
05:32:47 109  ,gbp_g19
05:32:47 110  ,gbp_g20
05:32:47 111  ,gbp_g21
05:32:47 112  ,gbp_g22
05:32:47 113  ,gbp_g23
05:32:47 114  ,gbp_g24
05:32:47 115  ,gbp_g25
05:32:47 116  ,gbp_g26
05:32:47 117  ,gbp_g27
05:32:47 118  ,gbp_g28
05:32:47 119  ,gbp_g29
05:32:47 120  ,gbp_g30
05:32:47 121  ,gbp_g31
05:32:47 122  ,gbp_g32
05:32:47 123  ,gbp_g33
05:32:47 124  ,gbp_g34
05:32:47 125  ,gbp_g35
05:32:47 126  ,gbp_g36
05:32:47 127  ,gbp_g37
05:32:47 128  ,gbp_g38
05:32:47 129  ,gbp_g39
05:32:47 130  ,gbp_g40
05:32:47 131  ,gbp_g41
05:32:47 132  ,jpy_g00
05:32:47 133  ,jpy_g01
05:32:47 134  ,jpy_g02
05:32:47 135  ,jpy_g03
05:32:47 136  ,jpy_g04
05:32:47 137  ,jpy_g05
05:32:47 138  ,jpy_g06
05:32:47 139  ,jpy_g07
05:32:47 140  ,jpy_g08
05:32:47 141  ,jpy_g09
05:32:47 142  ,jpy_g10
05:32:47 143  ,jpy_g11
05:32:47 144  ,jpy_g12
05:32:47 145  ,jpy_g13
05:32:47 146  ,jpy_g14
05:32:47 147  ,jpy_g15
05:32:47 148  ,jpy_g16
05:32:47 149  ,jpy_g17
05:32:47 150  ,jpy_g18
05:32:47 151  ,jpy_g19
05:32:47 152  ,jpy_g20
05:32:47 153  ,jpy_g21
05:32:47 154  ,jpy_g22
05:32:47 155  ,jpy_g23
05:32:47 156  ,jpy_g24
05:32:47 157  ,jpy_g25
05:32:47 158  ,jpy_g26
05:32:47 159  ,jpy_g27
05:32:47 160  ,jpy_g28
05:32:47 161  ,jpy_g29
05:32:47 162  ,jpy_g30
05:32:47 163  ,jpy_g31
05:32:47 164  ,jpy_g32
05:32:47 165  ,jpy_g33
05:32:47 166  ,jpy_g34
05:32:47 167  ,jpy_g35
05:32:47 168  ,jpy_g36
05:32:47 169  ,jpy_g37
05:32:47 170  ,jpy_g38
05:32:47 171  ,jpy_g39
05:32:47 172  ,jpy_g40
05:32:47 173  ,jpy_g41
05:32:47 174  ,cad_g00
05:32:47 175  ,cad_g01
05:32:47 176  ,cad_g02
05:32:47 177  ,cad_g03
05:32:47 178  ,cad_g04
05:32:47 179  ,cad_g05
05:32:47 180  ,cad_g06
05:32:47 181  ,cad_g07
05:32:47 182  ,cad_g08
05:32:47 183  ,cad_g09
05:32:47 184  ,cad_g10
05:32:47 185  ,cad_g11
05:32:47 186  ,cad_g12
05:32:47 187  ,cad_g13
05:32:47 188  ,cad_g14
05:32:47 189  ,cad_g15
05:32:47 190  ,cad_g16
05:32:47 191  ,cad_g17
05:32:47 192  ,cad_g18
05:32:47 193  ,cad_g19
05:32:47 194  ,cad_g20
05:32:47 195  ,cad_g21
05:32:47 196  ,cad_g22
05:32:47 197  ,cad_g23
05:32:47 198  ,cad_g24
05:32:47 199  ,cad_g25
05:32:47 200  ,cad_g26
05:32:47 201  ,cad_g27
05:32:47 202  ,cad_g28
05:32:47 203  ,cad_g29
05:32:47 204  ,cad_g30
05:32:47 205  ,cad_g31
05:32:47 206  ,cad_g32
05:32:47 207  ,cad_g33
05:32:47 208  ,cad_g34
05:32:47 209  ,cad_g35
05:32:47 210  ,cad_g36
05:32:47 211  ,cad_g37
05:32:47 212  ,cad_g38
05:32:47 213  ,cad_g39
05:32:47 214  ,cad_g40
05:32:47 215  ,cad_g41
05:32:47 216  ,chf_g00
05:32:47 217  ,chf_g01
05:32:47 218  ,chf_g02
05:32:47 219  ,chf_g03
05:32:47 220  ,chf_g04
05:32:47 221  ,chf_g05
05:32:47 222  ,chf_g06
05:32:47 223  ,chf_g07
05:32:47 224  ,chf_g08
05:32:47 225  ,chf_g09
05:32:47 226  ,chf_g10
05:32:47 227  ,chf_g11
05:32:47 228  ,chf_g12
05:32:47 229  ,chf_g13
05:32:47 230  ,chf_g14
05:32:47 231  ,chf_g15
05:32:47 232  ,chf_g16
05:32:47 233  ,chf_g17
05:32:47 234  ,chf_g18
05:32:47 235  ,chf_g19
05:32:47 236  ,chf_g20
05:32:47 237  ,chf_g21
05:32:47 238  ,chf_g22
05:32:47 239  ,chf_g23
05:32:47 240  ,chf_g24
05:32:47 241  ,chf_g25
05:32:47 242  ,chf_g26
05:32:47 243  ,chf_g27
05:32:47 244  ,chf_g28
05:32:47 245  ,chf_g29
05:32:47 246  ,chf_g30
05:32:47 247  ,chf_g31
05:32:47 248  ,chf_g32
05:32:47 249  ,chf_g33
05:32:47 250  ,chf_g34
05:32:47 251  ,chf_g35
05:32:47 252  ,chf_g36
05:32:47 253  ,chf_g37
05:32:47 254  ,chf_g38
05:32:47 255  ,chf_g39
05:32:47 256  ,chf_g40
05:32:47 257  ,chf_g41
05:32:47 258  FROM aud_ms6 m
05:32:47 259  WHERE m.ydate = '&1'||' '||'&2'
05:32:47 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'05:15:00'

View created.

Elapsed: 00:00:00.17
05:32:47 SQL> 
05:32:47 SQL> -- rpt
05:32:47 SQL> -- We should see just 1 row:
05:32:47 SQL> 
05:32:47 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
05:32:47 SQL> 
05:32:47 SQL> -- Build the model:
05:32:47 SQL> CREATE OR REPLACE VIEW bme AS
05:32:47   2  SELECT
05:32:47   3  'aud'||m.ydate prdate
05:32:47   4  ,gattn
05:32:47   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:32:47   6  ,eur_g00
05:32:47   7  ,eur_g01
05:32:47   8  ,eur_g02
05:32:47   9  ,eur_g03
05:32:47  10  ,eur_g04
05:32:47  11  ,eur_g05
05:32:47  12  ,eur_g06
05:32:47  13  ,eur_g07
05:32:47  14  ,eur_g08
05:32:47  15  ,eur_g09
05:32:47  16  ,eur_g10
05:32:47  17  ,eur_g11
05:32:47  18  ,eur_g12
05:32:47  19  ,eur_g13
05:32:47  20  ,eur_g14
05:32:47  21  ,eur_g15
05:32:47  22  ,eur_g16
05:32:47  23  ,eur_g17
05:32:47  24  ,eur_g18
05:32:47  25  ,eur_g19
05:32:47  26  ,eur_g20
05:32:47  27  ,eur_g21
05:32:47  28  ,eur_g22
05:32:47  29  ,eur_g23
05:32:47  30  ,eur_g24
05:32:47  31  ,eur_g25
05:32:47  32  ,eur_g26
05:32:47  33  ,eur_g27
05:32:47  34  ,eur_g28
05:32:47  35  ,eur_g29
05:32:47  36  ,eur_g30
05:32:47  37  ,eur_g31
05:32:47  38  ,eur_g32
05:32:47  39  ,eur_g33
05:32:47  40  ,eur_g34
05:32:47  41  ,eur_g35
05:32:47  42  ,eur_g36
05:32:47  43  ,eur_g37
05:32:47  44  ,eur_g38
05:32:47  45  ,eur_g39
05:32:47  46  ,eur_g40
05:32:47  47  ,eur_g41
05:32:47  48  ,aud_g00
05:32:47  49  ,aud_g01
05:32:47  50  ,aud_g02
05:32:47  51  ,aud_g03
05:32:47  52  ,aud_g04
05:32:47  53  ,aud_g05
05:32:47  54  ,aud_g06
05:32:47  55  ,aud_g07
05:32:47  56  ,aud_g08
05:32:47  57  ,aud_g09
05:32:47  58  ,aud_g10
05:32:47  59  ,aud_g11
05:32:47  60  ,aud_g12
05:32:47  61  ,aud_g13
05:32:47  62  ,aud_g14
05:32:47  63  ,aud_g15
05:32:47  64  ,aud_g16
05:32:47  65  ,aud_g17
05:32:47  66  ,aud_g18
05:32:47  67  ,aud_g19
05:32:47  68  ,aud_g20
05:32:47  69  ,aud_g21
05:32:47  70  ,aud_g22
05:32:47  71  ,aud_g23
05:32:47  72  ,aud_g24
05:32:47  73  ,aud_g25
05:32:47  74  ,aud_g26
05:32:47  75  ,aud_g27
05:32:47  76  ,aud_g28
05:32:47  77  ,aud_g29
05:32:47  78  ,aud_g30
05:32:47  79  ,aud_g31
05:32:47  80  ,aud_g32
05:32:47  81  ,aud_g33
05:32:47  82  ,aud_g34
05:32:47  83  ,aud_g35
05:32:47  84  ,aud_g36
05:32:47  85  ,aud_g37
05:32:47  86  ,aud_g38
05:32:47  87  ,aud_g39
05:32:47  88  ,aud_g40
05:32:47  89  ,aud_g41
05:32:47  90  ,gbp_g00
05:32:47  91  ,gbp_g01
05:32:47  92  ,gbp_g02
05:32:47  93  ,gbp_g03
05:32:47  94  ,gbp_g04
05:32:47  95  ,gbp_g05
05:32:47  96  ,gbp_g06
05:32:47  97  ,gbp_g07
05:32:47  98  ,gbp_g08
05:32:47  99  ,gbp_g09
05:32:47 100  ,gbp_g10
05:32:47 101  ,gbp_g11
05:32:47 102  ,gbp_g12
05:32:47 103  ,gbp_g13
05:32:47 104  ,gbp_g14
05:32:47 105  ,gbp_g15
05:32:47 106  ,gbp_g16
05:32:47 107  ,gbp_g17
05:32:47 108  ,gbp_g18
05:32:47 109  ,gbp_g19
05:32:47 110  ,gbp_g20
05:32:47 111  ,gbp_g21
05:32:47 112  ,gbp_g22
05:32:47 113  ,gbp_g23
05:32:47 114  ,gbp_g24
05:32:47 115  ,gbp_g25
05:32:47 116  ,gbp_g26
05:32:47 117  ,gbp_g27
05:32:47 118  ,gbp_g28
05:32:47 119  ,gbp_g29
05:32:47 120  ,gbp_g30
05:32:47 121  ,gbp_g31
05:32:47 122  ,gbp_g32
05:32:47 123  ,gbp_g33
05:32:47 124  ,gbp_g34
05:32:47 125  ,gbp_g35
05:32:47 126  ,gbp_g36
05:32:47 127  ,gbp_g37
05:32:47 128  ,gbp_g38
05:32:47 129  ,gbp_g39
05:32:47 130  ,gbp_g40
05:32:47 131  ,gbp_g41
05:32:47 132  ,jpy_g00
05:32:47 133  ,jpy_g01
05:32:47 134  ,jpy_g02
05:32:47 135  ,jpy_g03
05:32:47 136  ,jpy_g04
05:32:47 137  ,jpy_g05
05:32:47 138  ,jpy_g06
05:32:47 139  ,jpy_g07
05:32:47 140  ,jpy_g08
05:32:47 141  ,jpy_g09
05:32:47 142  ,jpy_g10
05:32:47 143  ,jpy_g11
05:32:47 144  ,jpy_g12
05:32:47 145  ,jpy_g13
05:32:47 146  ,jpy_g14
05:32:47 147  ,jpy_g15
05:32:47 148  ,jpy_g16
05:32:47 149  ,jpy_g17
05:32:47 150  ,jpy_g18
05:32:47 151  ,jpy_g19
05:32:47 152  ,jpy_g20
05:32:47 153  ,jpy_g21
05:32:47 154  ,jpy_g22
05:32:47 155  ,jpy_g23
05:32:47 156  ,jpy_g24
05:32:47 157  ,jpy_g25
05:32:47 158  ,jpy_g26
05:32:47 159  ,jpy_g27
05:32:47 160  ,jpy_g28
05:32:47 161  ,jpy_g29
05:32:47 162  ,jpy_g30
05:32:47 163  ,jpy_g31
05:32:47 164  ,jpy_g32
05:32:47 165  ,jpy_g33
05:32:47 166  ,jpy_g34
05:32:47 167  ,jpy_g35
05:32:47 168  ,jpy_g36
05:32:47 169  ,jpy_g37
05:32:47 170  ,jpy_g38
05:32:47 171  ,jpy_g39
05:32:47 172  ,jpy_g40
05:32:47 173  ,jpy_g41
05:32:47 174  ,cad_g00
05:32:47 175  ,cad_g01
05:32:47 176  ,cad_g02
05:32:47 177  ,cad_g03
05:32:47 178  ,cad_g04
05:32:47 179  ,cad_g05
05:32:47 180  ,cad_g06
05:32:47 181  ,cad_g07
05:32:47 182  ,cad_g08
05:32:47 183  ,cad_g09
05:32:47 184  ,cad_g10
05:32:47 185  ,cad_g11
05:32:47 186  ,cad_g12
05:32:47 187  ,cad_g13
05:32:47 188  ,cad_g14
05:32:47 189  ,cad_g15
05:32:47 190  ,cad_g16
05:32:47 191  ,cad_g17
05:32:47 192  ,cad_g18
05:32:47 193  ,cad_g19
05:32:47 194  ,cad_g20
05:32:47 195  ,cad_g21
05:32:47 196  ,cad_g22
05:32:47 197  ,cad_g23
05:32:47 198  ,cad_g24
05:32:47 199  ,cad_g25
05:32:47 200  ,cad_g26
05:32:47 201  ,cad_g27
05:32:47 202  ,cad_g28
05:32:47 203  ,cad_g29
05:32:47 204  ,cad_g30
05:32:47 205  ,cad_g31
05:32:47 206  ,cad_g32
05:32:47 207  ,cad_g33
05:32:47 208  ,cad_g34
05:32:47 209  ,cad_g35
05:32:47 210  ,cad_g36
05:32:47 211  ,cad_g37
05:32:47 212  ,cad_g38
05:32:47 213  ,cad_g39
05:32:47 214  ,cad_g40
05:32:47 215  ,cad_g41
05:32:47 216  ,chf_g00
05:32:47 217  ,chf_g01
05:32:47 218  ,chf_g02
05:32:47 219  ,chf_g03
05:32:47 220  ,chf_g04
05:32:47 221  ,chf_g05
05:32:47 222  ,chf_g06
05:32:47 223  ,chf_g07
05:32:47 224  ,chf_g08
05:32:47 225  ,chf_g09
05:32:47 226  ,chf_g10
05:32:47 227  ,chf_g11
05:32:47 228  ,chf_g12
05:32:47 229  ,chf_g13
05:32:47 230  ,chf_g14
05:32:47 231  ,chf_g15
05:32:47 232  ,chf_g16
05:32:47 233  ,chf_g17
05:32:47 234  ,chf_g18
05:32:47 235  ,chf_g19
05:32:47 236  ,chf_g20
05:32:47 237  ,chf_g21
05:32:47 238  ,chf_g22
05:32:47 239  ,chf_g23
05:32:47 240  ,chf_g24
05:32:47 241  ,chf_g25
05:32:47 242  ,chf_g26
05:32:47 243  ,chf_g27
05:32:47 244  ,chf_g28
05:32:47 245  ,chf_g29
05:32:47 246  ,chf_g30
05:32:47 247  ,chf_g31
05:32:47 248  ,chf_g32
05:32:47 249  ,chf_g33
05:32:47 250  ,chf_g34
05:32:47 251  ,chf_g35
05:32:47 252  ,chf_g36
05:32:47 253  ,chf_g37
05:32:47 254  ,chf_g38
05:32:47 255  ,chf_g39
05:32:47 256  ,chf_g40
05:32:47 257  ,chf_g41
05:32:47 258  FROM aud_ms6 m
05:32:47 259  WHERE gattn IN('nup','up')
05:32:47 260  AND 1+m.ydate < '&1'||' '||'&2'
05:32:47 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'05:15:00'

View created.

Elapsed: 00:00:00.14
05:32:47 SQL> 
05:32:47 SQL> -- rpt
05:32:47 SQL> 
05:32:47 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13157
up	     6382

Elapsed: 00:00:00.04
05:32:47 SQL> 
05:32:47 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 05:10:00

Elapsed: 00:00:00.03
05:32:47 SQL> 
05:32:47 SQL> -- Now build model from bme and score sme
05:32:47 SQL> @score1gattn.sql
05:32:47 SQL> -- score1gattn.sql
05:32:47 SQL> 
05:32:47 SQL> -- Does the 1st SVM score
05:32:47 SQL> 
05:32:47 SQL> -- Fill up svmc_apply_prep
05:32:47 SQL> @score_gattn.sql
05:32:47 SQL> --
05:32:47 SQL> -- score_gattn.sql
05:32:47 SQL> --
05:32:47 SQL> 
05:32:47 SQL> -- usage: score_gattn.sql
05:32:47 SQL> 
05:32:47 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
05:32:47 SQL> 
05:32:47 SQL> DEFINE target	= 'gattn'
05:32:47 SQL> DEFINE model_name = 'forex14'
05:32:47 SQL> DEFINE bldtable	= 'bme'
05:32:47 SQL> DEFINE scoretable = 'sme'
05:32:47 SQL> DEFINE case_id	= 'prdate'
05:32:47 SQL> 
05:32:47 SQL> -- Define a variable to help me exclude some columns from some data mining calls
05:32:47 SQL> DEFINE exclude1 = "'&target','&case_id'"
05:32:47 SQL> 
05:32:47 SQL> -- Builds an SVM model using pl/sql.
05:32:47 SQL> 
05:32:47 SQL> -----------------------------------------------------------------------
05:32:47 SQL> --			    BUILD THE MODEL
05:32:47 SQL> -----------------------------------------------------------------------
05:32:47 SQL> 
05:32:47 SQL> -- Cleanup old build data preparation objects for repeat runs
05:32:47 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
05:32:47 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
05:32:47 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
05:32:47 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
05:32:47 SQL> 
05:32:47 SQL> 
05:32:47 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
05:32:47 SQL> --
05:32:47 SQL> -- DROP	TABLE svmc_settings ;
05:32:47 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
05:32:47 SQL> -- DELETE svmc_settings;
05:32:47 SQL> 
05:32:47 SQL> -- The default classification algorithm is Naive Bayes. So override
05:32:47 SQL> -- this choice to SVM using a settings table.
05:32:47 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
05:32:47 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
05:32:47 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
05:32:47 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
05:32:47 SQL> -- models.
05:32:47 SQL> --
05:32:47 SQL> 
05:32:47 SQL> -- Do this once and then comment it out.
05:32:47 SQL> -- That makes script go faster.
05:32:47 SQL> -- BEGIN
05:32:47 SQL> -- -- Populate settings table
05:32:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:32:47 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
05:32:47 SQL> --
05:32:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:32:47 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
05:32:47 SQL> --
05:32:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:32:47 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
05:32:47 SQL> --   COMMIT;
05:32:47 SQL> -- END;
05:32:47 SQL> -- /
05:32:47 SQL> 
05:32:47 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
05:32:47 SQL> 
05:32:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
05:32:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:32:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:32:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
05:32:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:32:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
05:32:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
05:32:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:32:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:32:47 SQL> 
05:32:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
05:32:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:32:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:32:47 SQL> 
05:32:47 SQL> --------------------------------
05:32:47 SQL> -- PREPARE BUILD (TRAINING) DATA
05:32:47 SQL> --
05:32:47 SQL> 
05:32:47 SQL> -- 1. Missing Value treatment for all Predictors and
05:32:47 SQL> -- 2. Outlier Treatment and
05:32:47 SQL> -- 3. Normalization are performed below.
05:32:47 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
05:32:47 SQL> --    normalized here.
05:32:47 SQL> 
05:32:47 SQL> BEGIN
05:32:47   2  	-- Perform missing value treatment for all predictors
05:32:47   3  	-- create miss tables
05:32:47   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
05:32:47   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
05:32:47   6  
05:32:47   7  	-- populate miss tables
05:32:47   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
05:32:47   9  	  miss_table_name => 'svmc_miss_num',
05:32:47  10  	  data_table_name => '&bldtable',
05:32:47  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:32:47  12  
05:32:47  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
05:32:47  14  	  miss_table_name => 'svmc_miss_cat',
05:32:47  15  	  data_table_name => '&bldtable',
05:32:47  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:32:47  17  
05:32:47  18  	-- xform input data to replace missing values
05:32:47  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:32:47  20  	  miss_table_name => 'svmc_miss_num',
05:32:47  21  	  data_table_name => '&bldtable',
05:32:47  22  	  xform_view_name => 'xformed_build_miss_num');
05:32:47  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:32:47  24  	  miss_table_name => 'svmc_miss_cat',
05:32:47  25  	  data_table_name => '&bldtable',
05:32:47  26  	  xform_view_name => 'xformed_build_miss_cat');
05:32:47  27  
05:32:47  28  	-- Perform outlier treatment.
05:32:47  29  	-- create clip table
05:32:47  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
05:32:47  31  
05:32:47  32  	-- populate clip table
05:32:47  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
05:32:47  34  	  clip_table_name => 'svmc_clip',
05:32:47  35  	  data_table_name => '&bldtable',
05:32:47  36  	  tail_frac	  => 0.025,
05:32:47  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:32:47  38  
05:32:47  39  	-- xform input data to winsorized data
05:32:47  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
05:32:47  41  	  clip_table_name => 'svmc_clip',
05:32:47  42  	  data_table_name => '&bldtable',
05:32:47  43  	  xform_view_name => 'svmc_winsor');
05:32:47  44  
05:32:47  45  	-- create normalization table
05:32:47  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
05:32:47  47  
05:32:47  48  	-- populate normalization table based on winsorized data
05:32:47  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
05:32:47  50  	  norm_table_name => 'svmc_norm',
05:32:47  51  	  data_table_name => 'svmc_winsor',
05:32:47  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:32:47  53  
05:32:47  54  	-- normalize the original data
05:32:47  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:32:47  56  	  norm_table_name => 'svmc_norm',
05:32:47  57  	  data_table_name => '&bldtable',
05:32:47  58  	  xform_view_name => 'svmc_build_prep');
05:32:47  59  END;
05:32:47  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.22
05:33:06 SQL> 
05:33:06 SQL> ---------------------
05:33:06 SQL> -- CREATE A NEW MODEL
05:33:06 SQL> --
05:33:06 SQL> -- Cleanup old model with the same name for repeat runs
05:33:06 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
05:33:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:33:06   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.00
05:33:07 SQL> 
05:33:07 SQL> -- Build a new SVM Model
05:33:07 SQL> BEGIN
05:33:07   2  	DBMS_DATA_MINING.CREATE_MODEL(
05:33:07   3  	  model_name	      => '&model_name',
05:33:07   4  	  mining_function     => dbms_data_mining.classification,
05:33:07   5  	  data_table_name     => 'svmc_build_prep',
05:33:07   6  	  case_id_column_name => '&case_id',
05:33:07   7  	  target_column_name  => '&target',
05:33:07   8  	  settings_table_name => 'svmc_settings');
05:33:07   9  END;
05:33:07  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.48
05:33:35 SQL> 
05:33:35 SQL> -----------------------------------------------------------------------
05:33:35 SQL> --			       APPLY/score THE MODEL
05:33:35 SQL> -----------------------------------------------------------------------
05:33:35 SQL> 
05:33:35 SQL> -- Cleanup old scoring data preparation objects for repeat runs
05:33:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
05:33:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:33:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
05:33:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
05:33:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:33:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:33:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
05:33:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:33:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:33:35 SQL> -----------------------
05:33:35 SQL> -- PREPARE SCORING DATA
05:33:35 SQL> --
05:33:35 SQL> -- If the data for model creation has been prepared, then the data
05:33:35 SQL> -- to be scored using the model must be prepared in the same manner
05:33:35 SQL> -- in order to obtain meaningful results.
05:33:35 SQL> --
05:33:35 SQL> -- 1. Missing Value treatment for all Predictors and
05:33:35 SQL> -- 2. Normalization
05:33:35 SQL> -- No outlier treatment will be performed during test and apply. The
05:33:35 SQL> -- normalization step is sufficient, since the normalization parameters
05:33:35 SQL> -- already capture the effects of outlier treatment done with build data.
05:33:35 SQL> --
05:33:35 SQL> BEGIN
05:33:35   2  	-- Xform Test data to replace missing values
05:33:35   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:33:35   4  	  miss_table_name => 'svmc_miss_num',
05:33:35   5  	  data_table_name => '&scoretable',
05:33:35   6  	  xform_view_name => 'xformed_apply_miss_num');
05:33:35   7  
05:33:35   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:33:35   9  	  miss_table_name => 'svmc_miss_cat',
05:33:35  10  	  data_table_name => '&scoretable',
05:33:35  11  	  xform_view_name => 'xformed_apply_miss_cat');
05:33:35  12  
05:33:35  13  	-- Normalize the data to be scored
05:33:35  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:33:35  15  	  norm_table_name => 'svmc_norm',
05:33:35  16  	  data_table_name => '&scoretable',
05:33:35  17  	  xform_view_name => 'svmc_apply_prep');
05:33:35  18  END;
05:33:35  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.25
05:33:37 SQL> 
05:33:37 SQL> -- Use same model_name used in score_gattn.sql
05:33:37 SQL> DEFINE model_name = 'forex14'
05:33:37 SQL> 
05:33:37 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
05:33:37 SQL> 
05:33:37 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
05:33:37   2  SELECT
05:33:37   3  prdate
05:33:37   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
05:33:37   5  ,sysdate
05:33:37   6  ,SUBSTR(prdate,1,3)pair
05:33:37   7  ,SUBSTR(prdate,4,19)ydate
05:33:37   8  FROM svmc_apply_prep
05:33:37   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
05:33:37 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
