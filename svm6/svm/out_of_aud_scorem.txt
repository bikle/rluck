
SQL*Plus: Release 11.2.0.1.0 Production on Mon Jan 3 11:58:11 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

11:58:11 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
11:58:11 SQL> 11:58:11 SQL> @aud_score1day.sql  2011-01-03 11:35:00
11:58:11 SQL> --
11:58:11 SQL> -- aud_score1day.sql
11:58:11 SQL> --
11:58:11 SQL> 
11:58:11 SQL> CREATE OR REPLACE VIEW sme AS
11:58:11   2  SELECT
11:58:11   3  'aud'||m.ydate prdate
11:58:11   4  ,NULL gatt
11:58:11   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:58:11   6  ,eur_g00
11:58:11   7  ,eur_g01
11:58:11   8  ,eur_g02
11:58:11   9  ,eur_g03
11:58:11  10  ,eur_g04
11:58:11  11  ,eur_g05
11:58:11  12  ,eur_g06
11:58:11  13  ,eur_g07
11:58:11  14  ,eur_g08
11:58:11  15  ,eur_g09
11:58:11  16  ,eur_g10
11:58:11  17  ,eur_g11
11:58:11  18  ,eur_g12
11:58:11  19  ,eur_g13
11:58:11  20  ,eur_g14
11:58:11  21  ,eur_g15
11:58:11  22  ,eur_g16
11:58:11  23  ,eur_g17
11:58:11  24  ,eur_g18
11:58:11  25  ,eur_g19
11:58:11  26  ,eur_g20
11:58:11  27  ,eur_g21
11:58:11  28  ,eur_g22
11:58:11  29  ,eur_g23
11:58:11  30  ,eur_g24
11:58:11  31  ,eur_g25
11:58:11  32  ,eur_g26
11:58:11  33  ,eur_g27
11:58:11  34  ,eur_g28
11:58:11  35  ,eur_g29
11:58:11  36  ,eur_g30
11:58:11  37  ,eur_g31
11:58:11  38  ,eur_g32
11:58:11  39  ,eur_g33
11:58:11  40  ,eur_g34
11:58:11  41  ,eur_g35
11:58:11  42  ,eur_g36
11:58:11  43  ,eur_g37
11:58:11  44  ,eur_g38
11:58:11  45  ,eur_g39
11:58:11  46  ,eur_g40
11:58:11  47  ,eur_g41
11:58:11  48  ,aud_g00
11:58:11  49  ,aud_g01
11:58:11  50  ,aud_g02
11:58:11  51  ,aud_g03
11:58:11  52  ,aud_g04
11:58:11  53  ,aud_g05
11:58:11  54  ,aud_g06
11:58:11  55  ,aud_g07
11:58:11  56  ,aud_g08
11:58:11  57  ,aud_g09
11:58:11  58  ,aud_g10
11:58:11  59  ,aud_g11
11:58:11  60  ,aud_g12
11:58:11  61  ,aud_g13
11:58:11  62  ,aud_g14
11:58:11  63  ,aud_g15
11:58:11  64  ,aud_g16
11:58:11  65  ,aud_g17
11:58:11  66  ,aud_g18
11:58:11  67  ,aud_g19
11:58:11  68  ,aud_g20
11:58:11  69  ,aud_g21
11:58:11  70  ,aud_g22
11:58:11  71  ,aud_g23
11:58:11  72  ,aud_g24
11:58:11  73  ,aud_g25
11:58:11  74  ,aud_g26
11:58:11  75  ,aud_g27
11:58:11  76  ,aud_g28
11:58:11  77  ,aud_g29
11:58:11  78  ,aud_g30
11:58:11  79  ,aud_g31
11:58:11  80  ,aud_g32
11:58:11  81  ,aud_g33
11:58:11  82  ,aud_g34
11:58:11  83  ,aud_g35
11:58:11  84  ,aud_g36
11:58:11  85  ,aud_g37
11:58:11  86  ,aud_g38
11:58:11  87  ,aud_g39
11:58:11  88  ,aud_g40
11:58:11  89  ,aud_g41
11:58:11  90  ,gbp_g00
11:58:11  91  ,gbp_g01
11:58:11  92  ,gbp_g02
11:58:11  93  ,gbp_g03
11:58:11  94  ,gbp_g04
11:58:11  95  ,gbp_g05
11:58:11  96  ,gbp_g06
11:58:11  97  ,gbp_g07
11:58:11  98  ,gbp_g08
11:58:11  99  ,gbp_g09
11:58:11 100  ,gbp_g10
11:58:11 101  ,gbp_g11
11:58:11 102  ,gbp_g12
11:58:11 103  ,gbp_g13
11:58:11 104  ,gbp_g14
11:58:11 105  ,gbp_g15
11:58:11 106  ,gbp_g16
11:58:11 107  ,gbp_g17
11:58:11 108  ,gbp_g18
11:58:11 109  ,gbp_g19
11:58:11 110  ,gbp_g20
11:58:11 111  ,gbp_g21
11:58:11 112  ,gbp_g22
11:58:11 113  ,gbp_g23
11:58:11 114  ,gbp_g24
11:58:11 115  ,gbp_g25
11:58:11 116  ,gbp_g26
11:58:11 117  ,gbp_g27
11:58:11 118  ,gbp_g28
11:58:11 119  ,gbp_g29
11:58:11 120  ,gbp_g30
11:58:11 121  ,gbp_g31
11:58:11 122  ,gbp_g32
11:58:11 123  ,gbp_g33
11:58:11 124  ,gbp_g34
11:58:11 125  ,gbp_g35
11:58:11 126  ,gbp_g36
11:58:11 127  ,gbp_g37
11:58:11 128  ,gbp_g38
11:58:11 129  ,gbp_g39
11:58:11 130  ,gbp_g40
11:58:11 131  ,gbp_g41
11:58:11 132  ,jpy_g00
11:58:11 133  ,jpy_g01
11:58:11 134  ,jpy_g02
11:58:11 135  ,jpy_g03
11:58:11 136  ,jpy_g04
11:58:11 137  ,jpy_g05
11:58:11 138  ,jpy_g06
11:58:11 139  ,jpy_g07
11:58:11 140  ,jpy_g08
11:58:11 141  ,jpy_g09
11:58:11 142  ,jpy_g10
11:58:11 143  ,jpy_g11
11:58:11 144  ,jpy_g12
11:58:11 145  ,jpy_g13
11:58:11 146  ,jpy_g14
11:58:11 147  ,jpy_g15
11:58:11 148  ,jpy_g16
11:58:11 149  ,jpy_g17
11:58:11 150  ,jpy_g18
11:58:11 151  ,jpy_g19
11:58:11 152  ,jpy_g20
11:58:11 153  ,jpy_g21
11:58:11 154  ,jpy_g22
11:58:11 155  ,jpy_g23
11:58:11 156  ,jpy_g24
11:58:11 157  ,jpy_g25
11:58:11 158  ,jpy_g26
11:58:11 159  ,jpy_g27
11:58:11 160  ,jpy_g28
11:58:11 161  ,jpy_g29
11:58:11 162  ,jpy_g30
11:58:11 163  ,jpy_g31
11:58:11 164  ,jpy_g32
11:58:11 165  ,jpy_g33
11:58:11 166  ,jpy_g34
11:58:11 167  ,jpy_g35
11:58:11 168  ,jpy_g36
11:58:11 169  ,jpy_g37
11:58:11 170  ,jpy_g38
11:58:11 171  ,jpy_g39
11:58:11 172  ,jpy_g40
11:58:11 173  ,jpy_g41
11:58:11 174  ,cad_g00
11:58:11 175  ,cad_g01
11:58:11 176  ,cad_g02
11:58:11 177  ,cad_g03
11:58:11 178  ,cad_g04
11:58:11 179  ,cad_g05
11:58:11 180  ,cad_g06
11:58:11 181  ,cad_g07
11:58:11 182  ,cad_g08
11:58:11 183  ,cad_g09
11:58:11 184  ,cad_g10
11:58:11 185  ,cad_g11
11:58:11 186  ,cad_g12
11:58:11 187  ,cad_g13
11:58:11 188  ,cad_g14
11:58:11 189  ,cad_g15
11:58:11 190  ,cad_g16
11:58:11 191  ,cad_g17
11:58:11 192  ,cad_g18
11:58:11 193  ,cad_g19
11:58:11 194  ,cad_g20
11:58:11 195  ,cad_g21
11:58:11 196  ,cad_g22
11:58:11 197  ,cad_g23
11:58:11 198  ,cad_g24
11:58:11 199  ,cad_g25
11:58:11 200  ,cad_g26
11:58:11 201  ,cad_g27
11:58:11 202  ,cad_g28
11:58:11 203  ,cad_g29
11:58:11 204  ,cad_g30
11:58:11 205  ,cad_g31
11:58:11 206  ,cad_g32
11:58:11 207  ,cad_g33
11:58:11 208  ,cad_g34
11:58:11 209  ,cad_g35
11:58:11 210  ,cad_g36
11:58:11 211  ,cad_g37
11:58:11 212  ,cad_g38
11:58:11 213  ,cad_g39
11:58:11 214  ,cad_g40
11:58:11 215  ,cad_g41
11:58:11 216  ,chf_g00
11:58:11 217  ,chf_g01
11:58:11 218  ,chf_g02
11:58:11 219  ,chf_g03
11:58:11 220  ,chf_g04
11:58:11 221  ,chf_g05
11:58:11 222  ,chf_g06
11:58:11 223  ,chf_g07
11:58:11 224  ,chf_g08
11:58:11 225  ,chf_g09
11:58:11 226  ,chf_g10
11:58:11 227  ,chf_g11
11:58:11 228  ,chf_g12
11:58:11 229  ,chf_g13
11:58:11 230  ,chf_g14
11:58:11 231  ,chf_g15
11:58:11 232  ,chf_g16
11:58:11 233  ,chf_g17
11:58:11 234  ,chf_g18
11:58:11 235  ,chf_g19
11:58:11 236  ,chf_g20
11:58:11 237  ,chf_g21
11:58:11 238  ,chf_g22
11:58:11 239  ,chf_g23
11:58:11 240  ,chf_g24
11:58:11 241  ,chf_g25
11:58:11 242  ,chf_g26
11:58:11 243  ,chf_g27
11:58:11 244  ,chf_g28
11:58:11 245  ,chf_g29
11:58:11 246  ,chf_g30
11:58:11 247  ,chf_g31
11:58:11 248  ,chf_g32
11:58:11 249  ,chf_g33
11:58:11 250  ,chf_g34
11:58:11 251  ,chf_g35
11:58:11 252  ,chf_g36
11:58:11 253  ,chf_g37
11:58:11 254  ,chf_g38
11:58:11 255  ,chf_g39
11:58:11 256  ,chf_g40
11:58:11 257  ,chf_g41
11:58:11 258  FROM aud_ms6 m
11:58:11 259  WHERE m.ydate = '&1'||' '||'&2'
11:58:11 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'11:35:00'

View created.

Elapsed: 00:00:00.23
11:58:11 SQL> 
11:58:11 SQL> -- rpt
11:58:11 SQL> -- We should see just 1 row:
11:58:11 SQL> 
11:58:11 SQL> SELECT COUNT(prdate) FROM sme
11:58:11   2  
11:58:11 SQL> -- Build the model:
11:58:11 SQL> CREATE OR REPLACE VIEW bme AS
11:58:11   2  SELECT
11:58:11   3  'aud'||m.ydate prdate
11:58:11   4  ,gatt
11:58:11   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:58:11   6  ,eur_g00
11:58:11   7  ,eur_g01
11:58:11   8  ,eur_g02
11:58:11   9  ,eur_g03
11:58:11  10  ,eur_g04
11:58:11  11  ,eur_g05
11:58:11  12  ,eur_g06
11:58:11  13  ,eur_g07
11:58:11  14  ,eur_g08
11:58:11  15  ,eur_g09
11:58:11  16  ,eur_g10
11:58:11  17  ,eur_g11
11:58:11  18  ,eur_g12
11:58:11  19  ,eur_g13
11:58:11  20  ,eur_g14
11:58:11  21  ,eur_g15
11:58:11  22  ,eur_g16
11:58:11  23  ,eur_g17
11:58:11  24  ,eur_g18
11:58:11  25  ,eur_g19
11:58:11  26  ,eur_g20
11:58:11  27  ,eur_g21
11:58:11  28  ,eur_g22
11:58:11  29  ,eur_g23
11:58:11  30  ,eur_g24
11:58:11  31  ,eur_g25
11:58:11  32  ,eur_g26
11:58:11  33  ,eur_g27
11:58:11  34  ,eur_g28
11:58:11  35  ,eur_g29
11:58:11  36  ,eur_g30
11:58:11  37  ,eur_g31
11:58:11  38  ,eur_g32
11:58:11  39  ,eur_g33
11:58:11  40  ,eur_g34
11:58:11  41  ,eur_g35
11:58:11  42  ,eur_g36
11:58:11  43  ,eur_g37
11:58:11  44  ,eur_g38
11:58:11  45  ,eur_g39
11:58:11  46  ,eur_g40
11:58:11  47  ,eur_g41
11:58:11  48  ,aud_g00
11:58:11  49  ,aud_g01
11:58:11  50  ,aud_g02
11:58:11  51  ,aud_g03
11:58:11  52  ,aud_g04
11:58:11  53  ,aud_g05
11:58:11  54  ,aud_g06
11:58:11  55  ,aud_g07
11:58:11  56  ,aud_g08
11:58:11  57  ,aud_g09
11:58:11  58  ,aud_g10
11:58:11  59  ,aud_g11
11:58:11  60  ,aud_g12
11:58:11  61  ,aud_g13
11:58:11  62  ,aud_g14
11:58:11  63  ,aud_g15
11:58:11  64  ,aud_g16
11:58:11  65  ,aud_g17
11:58:11  66  ,aud_g18
11:58:11  67  ,aud_g19
11:58:11  68  ,aud_g20
11:58:11  69  ,aud_g21
11:58:11  70  ,aud_g22
11:58:11  71  ,aud_g23
11:58:11  72  ,aud_g24
11:58:11  73  ,aud_g25
11:58:11  74  ,aud_g26
11:58:11  75  ,aud_g27
11:58:11  76  ,aud_g28
11:58:11  77  ,aud_g29
11:58:11  78  ,aud_g30
11:58:11  79  ,aud_g31
11:58:11  80  ,aud_g32
11:58:11  81  ,aud_g33
11:58:11  82  ,aud_g34
11:58:11  83  ,aud_g35
11:58:11  84  ,aud_g36
11:58:11  85  ,aud_g37
11:58:11  86  ,aud_g38
11:58:11  87  ,aud_g39
11:58:11  88  ,aud_g40
11:58:11  89  ,aud_g41
11:58:11  90  ,gbp_g00
11:58:11  91  ,gbp_g01
11:58:11  92  ,gbp_g02
11:58:11  93  ,gbp_g03
11:58:11  94  ,gbp_g04
11:58:11  95  ,gbp_g05
11:58:11  96  ,gbp_g06
11:58:11  97  ,gbp_g07
11:58:11  98  ,gbp_g08
11:58:11  99  ,gbp_g09
11:58:11 100  ,gbp_g10
11:58:11 101  ,gbp_g11
11:58:11 102  ,gbp_g12
11:58:11 103  ,gbp_g13
11:58:11 104  ,gbp_g14
11:58:11 105  ,gbp_g15
11:58:11 106  ,gbp_g16
11:58:11 107  ,gbp_g17
11:58:11 108  ,gbp_g18
11:58:11 109  ,gbp_g19
11:58:11 110  ,gbp_g20
11:58:11 111  ,gbp_g21
11:58:11 112  ,gbp_g22
11:58:11 113  ,gbp_g23
11:58:11 114  ,gbp_g24
11:58:11 115  ,gbp_g25
11:58:11 116  ,gbp_g26
11:58:11 117  ,gbp_g27
11:58:11 118  ,gbp_g28
11:58:11 119  ,gbp_g29
11:58:11 120  ,gbp_g30
11:58:11 121  ,gbp_g31
11:58:11 122  ,gbp_g32
11:58:11 123  ,gbp_g33
11:58:11 124  ,gbp_g34
11:58:11 125  ,gbp_g35
11:58:11 126  ,gbp_g36
11:58:11 127  ,gbp_g37
11:58:11 128  ,gbp_g38
11:58:11 129  ,gbp_g39
11:58:11 130  ,gbp_g40
11:58:11 131  ,gbp_g41
11:58:11 132  ,jpy_g00
11:58:11 133  ,jpy_g01
11:58:11 134  ,jpy_g02
11:58:11 135  ,jpy_g03
11:58:11 136  ,jpy_g04
11:58:11 137  ,jpy_g05
11:58:11 138  ,jpy_g06
11:58:11 139  ,jpy_g07
11:58:11 140  ,jpy_g08
11:58:11 141  ,jpy_g09
11:58:11 142  ,jpy_g10
11:58:11 143  ,jpy_g11
11:58:11 144  ,jpy_g12
11:58:11 145  ,jpy_g13
11:58:11 146  ,jpy_g14
11:58:11 147  ,jpy_g15
11:58:11 148  ,jpy_g16
11:58:11 149  ,jpy_g17
11:58:11 150  ,jpy_g18
11:58:11 151  ,jpy_g19
11:58:11 152  ,jpy_g20
11:58:11 153  ,jpy_g21
11:58:11 154  ,jpy_g22
11:58:11 155  ,jpy_g23
11:58:11 156  ,jpy_g24
11:58:11 157  ,jpy_g25
11:58:11 158  ,jpy_g26
11:58:11 159  ,jpy_g27
11:58:11 160  ,jpy_g28
11:58:11 161  ,jpy_g29
11:58:11 162  ,jpy_g30
11:58:11 163  ,jpy_g31
11:58:11 164  ,jpy_g32
11:58:11 165  ,jpy_g33
11:58:11 166  ,jpy_g34
11:58:11 167  ,jpy_g35
11:58:11 168  ,jpy_g36
11:58:11 169  ,jpy_g37
11:58:11 170  ,jpy_g38
11:58:11 171  ,jpy_g39
11:58:11 172  ,jpy_g40
11:58:11 173  ,jpy_g41
11:58:11 174  ,cad_g00
11:58:11 175  ,cad_g01
11:58:11 176  ,cad_g02
11:58:11 177  ,cad_g03
11:58:11 178  ,cad_g04
11:58:11 179  ,cad_g05
11:58:11 180  ,cad_g06
11:58:11 181  ,cad_g07
11:58:11 182  ,cad_g08
11:58:11 183  ,cad_g09
11:58:11 184  ,cad_g10
11:58:11 185  ,cad_g11
11:58:11 186  ,cad_g12
11:58:11 187  ,cad_g13
11:58:11 188  ,cad_g14
11:58:11 189  ,cad_g15
11:58:11 190  ,cad_g16
11:58:11 191  ,cad_g17
11:58:11 192  ,cad_g18
11:58:11 193  ,cad_g19
11:58:11 194  ,cad_g20
11:58:11 195  ,cad_g21
11:58:11 196  ,cad_g22
11:58:11 197  ,cad_g23
11:58:11 198  ,cad_g24
11:58:11 199  ,cad_g25
11:58:11 200  ,cad_g26
11:58:11 201  ,cad_g27
11:58:11 202  ,cad_g28
11:58:11 203  ,cad_g29
11:58:11 204  ,cad_g30
11:58:11 205  ,cad_g31
11:58:11 206  ,cad_g32
11:58:11 207  ,cad_g33
11:58:11 208  ,cad_g34
11:58:11 209  ,cad_g35
11:58:11 210  ,cad_g36
11:58:11 211  ,cad_g37
11:58:11 212  ,cad_g38
11:58:11 213  ,cad_g39
11:58:11 214  ,cad_g40
11:58:11 215  ,cad_g41
11:58:11 216  ,chf_g00
11:58:11 217  ,chf_g01
11:58:11 218  ,chf_g02
11:58:11 219  ,chf_g03
11:58:11 220  ,chf_g04
11:58:11 221  ,chf_g05
11:58:11 222  ,chf_g06
11:58:11 223  ,chf_g07
11:58:11 224  ,chf_g08
11:58:11 225  ,chf_g09
11:58:11 226  ,chf_g10
11:58:11 227  ,chf_g11
11:58:11 228  ,chf_g12
11:58:11 229  ,chf_g13
11:58:11 230  ,chf_g14
11:58:11 231  ,chf_g15
11:58:11 232  ,chf_g16
11:58:11 233  ,chf_g17
11:58:11 234  ,chf_g18
11:58:11 235  ,chf_g19
11:58:11 236  ,chf_g20
11:58:11 237  ,chf_g21
11:58:11 238  ,chf_g22
11:58:11 239  ,chf_g23
11:58:11 240  ,chf_g24
11:58:11 241  ,chf_g25
11:58:11 242  ,chf_g26
11:58:11 243  ,chf_g27
11:58:11 244  ,chf_g28
11:58:11 245  ,chf_g29
11:58:11 246  ,chf_g30
11:58:11 247  ,chf_g31
11:58:11 248  ,chf_g32
11:58:11 249  ,chf_g33
11:58:11 250  ,chf_g34
11:58:11 251  ,chf_g35
11:58:11 252  ,chf_g36
11:58:11 253  ,chf_g37
11:58:11 254  ,chf_g38
11:58:11 255  ,chf_g39
11:58:11 256  ,chf_g40
11:58:11 257  ,chf_g41
11:58:11 258  FROM aud_ms6 m
11:58:11 259  WHERE gatt IN('nup','up')
11:58:11 260  AND 1+m.ydate < '&1'||' '||'&2'
11:58:11 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'11:35:00'

View created.

Elapsed: 00:00:00.13
11:58:11 SQL> 
11:58:11 SQL> -- rpt
11:58:11 SQL> 
11:58:11 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
11:58:11   2  
11:58:11 SQL> SELECT MAX(prdate) FROM bme
11:58:11   2  
11:58:11 SQL> -- Now build model from bme and score sme
11:58:11 SQL> @score1.sql
11:58:11 SQL> -- score1.sql
11:58:11 SQL> 
11:58:11 SQL> -- Does the 1st SVM score
11:58:11 SQL> 
11:58:11 SQL> -- Fill up svmc_apply_prep
11:58:11 SQL> @score.sql
11:58:11 SQL> --
11:58:12 SQL> -- score.sql
11:58:12 SQL> --
11:58:12 SQL> 
11:58:12 SQL> -- usage: score.sql
11:58:12 SQL> 
11:58:12 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
11:58:12 SQL> 
11:58:12 SQL> DEFINE target	= 'gatt'
11:58:12 SQL> DEFINE model_name = 'forex14'
11:58:12 SQL> DEFINE bldtable	= 'bme'
11:58:12 SQL> DEFINE scoretable = 'sme'
11:58:12 SQL> DEFINE case_id	= 'prdate'
11:58:12 SQL> 
11:58:12 SQL> -- Define a variable to help me exclude some columns from some data mining calls
11:58:12 SQL> DEFINE exclude1 = "'&target','&case_id'"
11:58:12 SQL> 
11:58:12 SQL> -- Builds an SVM model using pl/sql.
11:58:12 SQL> 
11:58:12 SQL> -----------------------------------------------------------------------
11:58:12 SQL> --			    BUILD THE MODEL
11:58:12 SQL> -----------------------------------------------------------------------
11:58:12 SQL> 
11:58:12 SQL> -- Cleanup old build data preparation objects for repeat runs
11:58:12 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
11:58:12 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
11:58:12 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
11:58:12 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
11:58:12 SQL> 
11:58:12 SQL> 
11:58:12 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
11:58:12 SQL> --
11:58:12 SQL> -- DROP	TABLE svmc_settings ;
11:58:12 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
11:58:12 SQL> -- DELETE svmc_settings;
11:58:12 SQL> 
11:58:12 SQL> -- The default classification algorithm is Naive Bayes. So override
11:58:12 SQL> -- this choice to SVM using a settings table.
11:58:12 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
11:58:12 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
11:58:12 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
11:58:12 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
11:58:12 SQL> -- models.
11:58:12 SQL> --
11:58:12 SQL> 
11:58:12 SQL> -- Do this once and then comment it out.
11:58:12 SQL> -- That makes script go faster.
11:58:12 SQL> -- BEGIN
11:58:12 SQL> -- -- Populate settings table
11:58:12 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:58:12 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
11:58:12 SQL> --
11:58:12 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:58:12 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
11:58:12 SQL> --
11:58:12 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:58:12 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
11:58:12 SQL> --   COMMIT;
11:58:12 SQL> -- END;
11:58:12 SQL> -- /
11:58:12 SQL> 
11:58:12 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
11:58:12 SQL> 
11:58:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
11:58:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:58:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:58:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
11:58:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:58:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:58:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
11:58:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:58:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
11:58:12 SQL> 
11:58:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
11:58:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:58:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
11:58:12 SQL> 
11:58:12 SQL> --------------------------------
11:58:12 SQL> -- PREPARE BUILD (TRAINING) DATA
11:58:12 SQL> --
11:58:12 SQL> 
11:58:12 SQL> -- 1. Missing Value treatment for all Predictors and
11:58:12 SQL> -- 2. Outlier Treatment and
11:58:12 SQL> -- 3. Normalization are performed below.
11:58:12 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
11:58:12 SQL> --    normalized here.
11:58:12 SQL> 
11:58:12 SQL> BEGIN
11:58:12   2  	-- Perform missing value treatment for all predictors
11:58:12   3  	-- create miss tables
11:58:12   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
11:58:12   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
11:58:12   6  
11:58:12   7  	-- populate miss tables
11:58:12   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
11:58:12   9  	  miss_table_name => 'svmc_miss_num',
11:58:12  10  	  data_table_name => '&bldtable',
11:58:12  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:58:12  12  
11:58:12  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
11:58:12  14  	  miss_table_name => 'svmc_miss_cat',
11:58:12  15  	  data_table_name => '&bldtable',
11:58:12  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:58:12  17  
11:58:12  18  	-- xform input data to replace missing values
11:58:12  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:58:12  20  	  miss_table_name => 'svmc_miss_num',
11:58:12  21  	  data_table_name => '&bldtable',
11:58:12  22  	  xform_view_name => 'xformed_build_miss_num');
11:58:12  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:58:12  24  	  miss_table_name => 'svmc_miss_cat',
11:58:12  25  	  data_table_name => '&bldtable',
11:58:12  26  	  xform_view_name => 'xformed_build_miss_cat');
11:58:12  27  
11:58:12  28  	-- Perform outlier treatment.
11:58:12  29  	-- create clip table
11:58:12  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
11:58:12  31  
11:58:12  32  	-- populate clip table
11:58:12  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
11:58:12  34  	  clip_table_name => 'svmc_clip',
11:58:12  35  	  data_table_name => '&bldtable',
11:58:12  36  	  tail_frac	  => 0.025,
11:58:12  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:58:12  38  
11:58:12  39  	-- xform input data to winsorized data
11:58:12  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
11:58:12  41  	  clip_table_name => 'svmc_clip',
11:58:12  42  	  data_table_name => '&bldtable',
11:58:12  43  	  xform_view_name => 'svmc_winsor');
11:58:12  44  
11:58:12  45  	-- create normalization table
11:58:12  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
11:58:12  47  
11:58:12  48  	-- populate normalization table based on winsorized data
11:58:12  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
11:58:12  50  	  norm_table_name => 'svmc_norm',
11:58:12  51  	  data_table_name => 'svmc_winsor',
11:58:12  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:58:12  53  
11:58:12  54  	-- normalize the original data
11:58:12  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:58:12  56  	  norm_table_name => 'svmc_norm',
11:58:12  57  	  data_table_name => '&bldtable',
11:58:12  58  	  xform_view_name => 'svmc_build_prep');
11:58:12  59  END;
11:58:12  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.62
11:58:30 SQL> 
11:58:30 SQL> ---------------------
11:58:30 SQL> -- CREATE A NEW MODEL
11:58:30 SQL> --
11:58:30 SQL> -- Cleanup old model with the same name for repeat runs
11:58:30 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
11:58:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:58:30   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.62
11:58:31 SQL> 
11:58:31 SQL> -- Build a new SVM Model
11:58:31 SQL> BEGIN
11:58:31   2  	DBMS_DATA_MINING.CREATE_MODEL(
11:58:31   3  	  model_name	      => '&model_name',
11:58:31   4  	  mining_function     => dbms_data_mining.classification,
11:58:31   5  	  data_table_name     => 'svmc_build_prep',
11:58:31   6  	  case_id_column_name => '&case_id',
11:58:31   7  	  target_column_name  => '&target',
11:58:31   8  	  settings_table_name => 'svmc_settings');
11:58:31   9  END;
11:58:31  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.96
11:59:01 SQL> 
11:59:01 SQL> -----------------------------------------------------------------------
11:59:01 SQL> --			       APPLY/score THE MODEL
11:59:01 SQL> -----------------------------------------------------------------------
11:59:01 SQL> 
11:59:01 SQL> -- Cleanup old scoring data preparation objects for repeat runs
11:59:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
11:59:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:59:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:59:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
11:59:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:59:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
11:59:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
11:59:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:59:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:59:01 SQL> -----------------------
11:59:01 SQL> -- PREPARE SCORING DATA
11:59:01 SQL> --
11:59:01 SQL> -- If the data for model creation has been prepared, then the data
11:59:01 SQL> -- to be scored using the model must be prepared in the same manner
11:59:01 SQL> -- in order to obtain meaningful results.
11:59:01 SQL> --
11:59:01 SQL> -- 1. Missing Value treatment for all Predictors and
11:59:01 SQL> -- 2. Normalization
11:59:01 SQL> -- No outlier treatment will be performed during test and apply. The
11:59:01 SQL> -- normalization step is sufficient, since the normalization parameters
11:59:01 SQL> -- already capture the effects of outlier treatment done with build data.
11:59:01 SQL> --
11:59:01 SQL> BEGIN
11:59:01   2  	-- Xform Test data to replace missing values
11:59:01   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:59:01   4  	  miss_table_name => 'svmc_miss_num',
11:59:01   5  	  data_table_name => '&scoretable',
11:59:01   6  	  xform_view_name => 'xformed_apply_miss_num');
11:59:01   7  
11:59:01   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:59:01   9  	  miss_table_name => 'svmc_miss_cat',
11:59:01  10  	  data_table_name => '&scoretable',
11:59:01  11  	  xform_view_name => 'xformed_apply_miss_cat');
11:59:01  12  
11:59:01  13  	-- Normalize the data to be scored
11:59:01  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:59:01  15  	  norm_table_name => 'svmc_norm',
11:59:01  16  	  data_table_name => '&scoretable',
11:59:01  17  	  xform_view_name => 'svmc_apply_prep');
11:59:01  18  END;
11:59:01  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.24
11:59:02 SQL> 
11:59:02 SQL> -- Use same model_name used in score.sql
11:59:02 SQL> DEFINE model_name = 'forex14'
11:59:02 SQL> 
11:59:02 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
11:59:02 SQL> 
11:59:02 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
11:59:03 SQL> 
11:59:03 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
11:59:03   2  SELECT
11:59:03   3  prdate
11:59:03   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
11:59:03   5  ,sysdate
11:59:03   6  ,SUBSTR(prdate,1,3)pair
11:59:03   7  ,SUBSTR(prdate,4,19)ydate
11:59:03   8  FROM svmc_apply_prep
11:59:03   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.23
11:59:03 SQL> @aud_score1day.sql  2011-01-03 11:40:00
11:59:03 SQL> --
11:59:03 SQL> -- aud_score1day.sql
11:59:03 SQL> --
11:59:03 SQL> 
11:59:03 SQL> CREATE OR REPLACE VIEW sme AS
11:59:03   2  SELECT
11:59:03   3  'aud'||m.ydate prdate
11:59:03   4  ,NULL gatt
11:59:03   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:59:03   6  ,eur_g00
11:59:03   7  ,eur_g01
11:59:03   8  ,eur_g02
11:59:03   9  ,eur_g03
11:59:03  10  ,eur_g04
11:59:03  11  ,eur_g05
11:59:03  12  ,eur_g06
11:59:03  13  ,eur_g07
11:59:03  14  ,eur_g08
11:59:03  15  ,eur_g09
11:59:03  16  ,eur_g10
11:59:03  17  ,eur_g11
11:59:03  18  ,eur_g12
11:59:03  19  ,eur_g13
11:59:03  20  ,eur_g14
11:59:03  21  ,eur_g15
11:59:03  22  ,eur_g16
11:59:03  23  ,eur_g17
11:59:03  24  ,eur_g18
11:59:03  25  ,eur_g19
11:59:03  26  ,eur_g20
11:59:03  27  ,eur_g21
11:59:03  28  ,eur_g22
11:59:03  29  ,eur_g23
11:59:03  30  ,eur_g24
11:59:03  31  ,eur_g25
11:59:03  32  ,eur_g26
11:59:03  33  ,eur_g27
11:59:03  34  ,eur_g28
11:59:03  35  ,eur_g29
11:59:03  36  ,eur_g30
11:59:03  37  ,eur_g31
11:59:03  38  ,eur_g32
11:59:03  39  ,eur_g33
11:59:03  40  ,eur_g34
11:59:03  41  ,eur_g35
11:59:03  42  ,eur_g36
11:59:03  43  ,eur_g37
11:59:03  44  ,eur_g38
11:59:03  45  ,eur_g39
11:59:03  46  ,eur_g40
11:59:03  47  ,eur_g41
11:59:03  48  ,aud_g00
11:59:03  49  ,aud_g01
11:59:03  50  ,aud_g02
11:59:03  51  ,aud_g03
11:59:03  52  ,aud_g04
11:59:03  53  ,aud_g05
11:59:03  54  ,aud_g06
11:59:03  55  ,aud_g07
11:59:03  56  ,aud_g08
11:59:03  57  ,aud_g09
11:59:03  58  ,aud_g10
11:59:03  59  ,aud_g11
11:59:03  60  ,aud_g12
11:59:03  61  ,aud_g13
11:59:03  62  ,aud_g14
11:59:03  63  ,aud_g15
11:59:03  64  ,aud_g16
11:59:03  65  ,aud_g17
11:59:03  66  ,aud_g18
11:59:03  67  ,aud_g19
11:59:03  68  ,aud_g20
11:59:03  69  ,aud_g21
11:59:03  70  ,aud_g22
11:59:03  71  ,aud_g23
11:59:03  72  ,aud_g24
11:59:03  73  ,aud_g25
11:59:03  74  ,aud_g26
11:59:03  75  ,aud_g27
11:59:03  76  ,aud_g28
11:59:03  77  ,aud_g29
11:59:03  78  ,aud_g30
11:59:03  79  ,aud_g31
11:59:03  80  ,aud_g32
11:59:03  81  ,aud_g33
11:59:03  82  ,aud_g34
11:59:03  83  ,aud_g35
11:59:03  84  ,aud_g36
11:59:03  85  ,aud_g37
11:59:03  86  ,aud_g38
11:59:03  87  ,aud_g39
11:59:03  88  ,aud_g40
11:59:03  89  ,aud_g41
11:59:03  90  ,gbp_g00
11:59:03  91  ,gbp_g01
11:59:03  92  ,gbp_g02
11:59:03  93  ,gbp_g03
11:59:03  94  ,gbp_g04
11:59:03  95  ,gbp_g05
11:59:03  96  ,gbp_g06
11:59:03  97  ,gbp_g07
11:59:03  98  ,gbp_g08
11:59:03  99  ,gbp_g09
11:59:03 100  ,gbp_g10
11:59:03 101  ,gbp_g11
11:59:03 102  ,gbp_g12
11:59:03 103  ,gbp_g13
11:59:03 104  ,gbp_g14
11:59:03 105  ,gbp_g15
11:59:03 106  ,gbp_g16
11:59:03 107  ,gbp_g17
11:59:03 108  ,gbp_g18
11:59:03 109  ,gbp_g19
11:59:03 110  ,gbp_g20
11:59:03 111  ,gbp_g21
11:59:03 112  ,gbp_g22
11:59:03 113  ,gbp_g23
11:59:03 114  ,gbp_g24
11:59:03 115  ,gbp_g25
11:59:03 116  ,gbp_g26
11:59:03 117  ,gbp_g27
11:59:03 118  ,gbp_g28
11:59:03 119  ,gbp_g29
11:59:03 120  ,gbp_g30
11:59:03 121  ,gbp_g31
11:59:03 122  ,gbp_g32
11:59:03 123  ,gbp_g33
11:59:03 124  ,gbp_g34
11:59:03 125  ,gbp_g35
11:59:03 126  ,gbp_g36
11:59:03 127  ,gbp_g37
11:59:03 128  ,gbp_g38
11:59:03 129  ,gbp_g39
11:59:03 130  ,gbp_g40
11:59:03 131  ,gbp_g41
11:59:03 132  ,jpy_g00
11:59:03 133  ,jpy_g01
11:59:03 134  ,jpy_g02
11:59:03 135  ,jpy_g03
11:59:03 136  ,jpy_g04
11:59:03 137  ,jpy_g05
11:59:03 138  ,jpy_g06
11:59:03 139  ,jpy_g07
11:59:03 140  ,jpy_g08
11:59:03 141  ,jpy_g09
11:59:03 142  ,jpy_g10
11:59:03 143  ,jpy_g11
11:59:03 144  ,jpy_g12
11:59:03 145  ,jpy_g13
11:59:03 146  ,jpy_g14
11:59:03 147  ,jpy_g15
11:59:03 148  ,jpy_g16
11:59:03 149  ,jpy_g17
11:59:03 150  ,jpy_g18
11:59:03 151  ,jpy_g19
11:59:03 152  ,jpy_g20
11:59:03 153  ,jpy_g21
11:59:03 154  ,jpy_g22
11:59:03 155  ,jpy_g23
11:59:03 156  ,jpy_g24
11:59:03 157  ,jpy_g25
11:59:03 158  ,jpy_g26
11:59:03 159  ,jpy_g27
11:59:03 160  ,jpy_g28
11:59:03 161  ,jpy_g29
11:59:03 162  ,jpy_g30
11:59:03 163  ,jpy_g31
11:59:03 164  ,jpy_g32
11:59:03 165  ,jpy_g33
11:59:03 166  ,jpy_g34
11:59:03 167  ,jpy_g35
11:59:03 168  ,jpy_g36
11:59:03 169  ,jpy_g37
11:59:03 170  ,jpy_g38
11:59:03 171  ,jpy_g39
11:59:03 172  ,jpy_g40
11:59:03 173  ,jpy_g41
11:59:03 174  ,cad_g00
11:59:03 175  ,cad_g01
11:59:03 176  ,cad_g02
11:59:03 177  ,cad_g03
11:59:03 178  ,cad_g04
11:59:03 179  ,cad_g05
11:59:03 180  ,cad_g06
11:59:03 181  ,cad_g07
11:59:03 182  ,cad_g08
11:59:03 183  ,cad_g09
11:59:03 184  ,cad_g10
11:59:03 185  ,cad_g11
11:59:03 186  ,cad_g12
11:59:03 187  ,cad_g13
11:59:03 188  ,cad_g14
11:59:03 189  ,cad_g15
11:59:03 190  ,cad_g16
11:59:03 191  ,cad_g17
11:59:03 192  ,cad_g18
11:59:03 193  ,cad_g19
11:59:03 194  ,cad_g20
11:59:03 195  ,cad_g21
11:59:03 196  ,cad_g22
11:59:03 197  ,cad_g23
11:59:03 198  ,cad_g24
11:59:03 199  ,cad_g25
11:59:03 200  ,cad_g26
11:59:03 201  ,cad_g27
11:59:03 202  ,cad_g28
11:59:03 203  ,cad_g29
11:59:03 204  ,cad_g30
11:59:03 205  ,cad_g31
11:59:03 206  ,cad_g32
11:59:03 207  ,cad_g33
11:59:03 208  ,cad_g34
11:59:03 209  ,cad_g35
11:59:03 210  ,cad_g36
11:59:03 211  ,cad_g37
11:59:03 212  ,cad_g38
11:59:03 213  ,cad_g39
11:59:03 214  ,cad_g40
11:59:03 215  ,cad_g41
11:59:03 216  ,chf_g00
11:59:03 217  ,chf_g01
11:59:03 218  ,chf_g02
11:59:03 219  ,chf_g03
11:59:03 220  ,chf_g04
11:59:03 221  ,chf_g05
11:59:03 222  ,chf_g06
11:59:03 223  ,chf_g07
11:59:03 224  ,chf_g08
11:59:03 225  ,chf_g09
11:59:03 226  ,chf_g10
11:59:03 227  ,chf_g11
11:59:03 228  ,chf_g12
11:59:03 229  ,chf_g13
11:59:03 230  ,chf_g14
11:59:03 231  ,chf_g15
11:59:03 232  ,chf_g16
11:59:03 233  ,chf_g17
11:59:03 234  ,chf_g18
11:59:03 235  ,chf_g19
11:59:03 236  ,chf_g20
11:59:03 237  ,chf_g21
11:59:03 238  ,chf_g22
11:59:03 239  ,chf_g23
11:59:03 240  ,chf_g24
11:59:03 241  ,chf_g25
11:59:03 242  ,chf_g26
11:59:03 243  ,chf_g27
11:59:03 244  ,chf_g28
11:59:03 245  ,chf_g29
11:59:03 246  ,chf_g30
11:59:03 247  ,chf_g31
11:59:03 248  ,chf_g32
11:59:03 249  ,chf_g33
11:59:03 250  ,chf_g34
11:59:03 251  ,chf_g35
11:59:03 252  ,chf_g36
11:59:03 253  ,chf_g37
11:59:03 254  ,chf_g38
11:59:03 255  ,chf_g39
11:59:03 256  ,chf_g40
11:59:03 257  ,chf_g41
11:59:03 258  FROM aud_ms6 m
11:59:03 259  WHERE m.ydate = '&1'||' '||'&2'
11:59:03 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'11:40:00'

View created.

Elapsed: 00:00:00.15
11:59:03 SQL> 
11:59:03 SQL> -- rpt
11:59:03 SQL> -- We should see just 1 row:
11:59:03 SQL> 
11:59:03 SQL> SELECT COUNT(prdate) FROM sme
11:59:03   2  
11:59:03 SQL> -- Build the model:
11:59:03 SQL> CREATE OR REPLACE VIEW bme AS
11:59:03   2  SELECT
11:59:03   3  'aud'||m.ydate prdate
11:59:03   4  ,gatt
11:59:03   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:59:03   6  ,eur_g00
11:59:03   7  ,eur_g01
11:59:03   8  ,eur_g02
11:59:03   9  ,eur_g03
11:59:03  10  ,eur_g04
11:59:03  11  ,eur_g05
11:59:03  12  ,eur_g06
11:59:03  13  ,eur_g07
11:59:03  14  ,eur_g08
11:59:03  15  ,eur_g09
11:59:03  16  ,eur_g10
11:59:03  17  ,eur_g11
11:59:03  18  ,eur_g12
11:59:03  19  ,eur_g13
11:59:03  20  ,eur_g14
11:59:03  21  ,eur_g15
11:59:03  22  ,eur_g16
11:59:03  23  ,eur_g17
11:59:03  24  ,eur_g18
11:59:03  25  ,eur_g19
11:59:03  26  ,eur_g20
11:59:03  27  ,eur_g21
11:59:03  28  ,eur_g22
11:59:03  29  ,eur_g23
11:59:03  30  ,eur_g24
11:59:03  31  ,eur_g25
11:59:03  32  ,eur_g26
11:59:03  33  ,eur_g27
11:59:03  34  ,eur_g28
11:59:03  35  ,eur_g29
11:59:03  36  ,eur_g30
11:59:03  37  ,eur_g31
11:59:03  38  ,eur_g32
11:59:03  39  ,eur_g33
11:59:03  40  ,eur_g34
11:59:03  41  ,eur_g35
11:59:03  42  ,eur_g36
11:59:03  43  ,eur_g37
11:59:03  44  ,eur_g38
11:59:03  45  ,eur_g39
11:59:03  46  ,eur_g40
11:59:03  47  ,eur_g41
11:59:03  48  ,aud_g00
11:59:03  49  ,aud_g01
11:59:03  50  ,aud_g02
11:59:03  51  ,aud_g03
11:59:03  52  ,aud_g04
11:59:03  53  ,aud_g05
11:59:03  54  ,aud_g06
11:59:03  55  ,aud_g07
11:59:03  56  ,aud_g08
11:59:03  57  ,aud_g09
11:59:03  58  ,aud_g10
11:59:03  59  ,aud_g11
11:59:03  60  ,aud_g12
11:59:03  61  ,aud_g13
11:59:03  62  ,aud_g14
11:59:03  63  ,aud_g15
11:59:03  64  ,aud_g16
11:59:03  65  ,aud_g17
11:59:03  66  ,aud_g18
11:59:03  67  ,aud_g19
11:59:03  68  ,aud_g20
11:59:03  69  ,aud_g21
11:59:03  70  ,aud_g22
11:59:03  71  ,aud_g23
11:59:03  72  ,aud_g24
11:59:03  73  ,aud_g25
11:59:03  74  ,aud_g26
11:59:03  75  ,aud_g27
11:59:03  76  ,aud_g28
11:59:03  77  ,aud_g29
11:59:03  78  ,aud_g30
11:59:03  79  ,aud_g31
11:59:03  80  ,aud_g32
11:59:03  81  ,aud_g33
11:59:03  82  ,aud_g34
11:59:03  83  ,aud_g35
11:59:03  84  ,aud_g36
11:59:03  85  ,aud_g37
11:59:03  86  ,aud_g38
11:59:03  87  ,aud_g39
11:59:03  88  ,aud_g40
11:59:03  89  ,aud_g41
11:59:03  90  ,gbp_g00
11:59:03  91  ,gbp_g01
11:59:03  92  ,gbp_g02
11:59:03  93  ,gbp_g03
11:59:03  94  ,gbp_g04
11:59:03  95  ,gbp_g05
11:59:03  96  ,gbp_g06
11:59:03  97  ,gbp_g07
11:59:03  98  ,gbp_g08
11:59:03  99  ,gbp_g09
11:59:03 100  ,gbp_g10
11:59:03 101  ,gbp_g11
11:59:03 102  ,gbp_g12
11:59:03 103  ,gbp_g13
11:59:03 104  ,gbp_g14
11:59:03 105  ,gbp_g15
11:59:03 106  ,gbp_g16
11:59:03 107  ,gbp_g17
11:59:03 108  ,gbp_g18
11:59:03 109  ,gbp_g19
11:59:03 110  ,gbp_g20
11:59:03 111  ,gbp_g21
11:59:03 112  ,gbp_g22
11:59:03 113  ,gbp_g23
11:59:03 114  ,gbp_g24
11:59:03 115  ,gbp_g25
11:59:03 116  ,gbp_g26
11:59:03 117  ,gbp_g27
11:59:03 118  ,gbp_g28
11:59:03 119  ,gbp_g29
11:59:03 120  ,gbp_g30
11:59:03 121  ,gbp_g31
11:59:03 122  ,gbp_g32
11:59:03 123  ,gbp_g33
11:59:03 124  ,gbp_g34
11:59:03 125  ,gbp_g35
11:59:03 126  ,gbp_g36
11:59:03 127  ,gbp_g37
11:59:03 128  ,gbp_g38
11:59:03 129  ,gbp_g39
11:59:03 130  ,gbp_g40
11:59:03 131  ,gbp_g41
11:59:03 132  ,jpy_g00
11:59:03 133  ,jpy_g01
11:59:03 134  ,jpy_g02
11:59:03 135  ,jpy_g03
11:59:03 136  ,jpy_g04
11:59:03 137  ,jpy_g05
11:59:03 138  ,jpy_g06
11:59:03 139  ,jpy_g07
11:59:03 140  ,jpy_g08
11:59:03 141  ,jpy_g09
11:59:03 142  ,jpy_g10
11:59:03 143  ,jpy_g11
11:59:03 144  ,jpy_g12
11:59:03 145  ,jpy_g13
11:59:03 146  ,jpy_g14
11:59:03 147  ,jpy_g15
11:59:03 148  ,jpy_g16
11:59:03 149  ,jpy_g17
11:59:03 150  ,jpy_g18
11:59:03 151  ,jpy_g19
11:59:03 152  ,jpy_g20
11:59:03 153  ,jpy_g21
11:59:03 154  ,jpy_g22
11:59:03 155  ,jpy_g23
11:59:03 156  ,jpy_g24
11:59:03 157  ,jpy_g25
11:59:03 158  ,jpy_g26
11:59:03 159  ,jpy_g27
11:59:03 160  ,jpy_g28
11:59:03 161  ,jpy_g29
11:59:03 162  ,jpy_g30
11:59:03 163  ,jpy_g31
11:59:03 164  ,jpy_g32
11:59:03 165  ,jpy_g33
11:59:03 166  ,jpy_g34
11:59:03 167  ,jpy_g35
11:59:03 168  ,jpy_g36
11:59:03 169  ,jpy_g37
11:59:03 170  ,jpy_g38
11:59:03 171  ,jpy_g39
11:59:03 172  ,jpy_g40
11:59:03 173  ,jpy_g41
11:59:03 174  ,cad_g00
11:59:03 175  ,cad_g01
11:59:03 176  ,cad_g02
11:59:03 177  ,cad_g03
11:59:03 178  ,cad_g04
11:59:03 179  ,cad_g05
11:59:03 180  ,cad_g06
11:59:03 181  ,cad_g07
11:59:03 182  ,cad_g08
11:59:03 183  ,cad_g09
11:59:03 184  ,cad_g10
11:59:03 185  ,cad_g11
11:59:03 186  ,cad_g12
11:59:03 187  ,cad_g13
11:59:03 188  ,cad_g14
11:59:03 189  ,cad_g15
11:59:03 190  ,cad_g16
11:59:03 191  ,cad_g17
11:59:03 192  ,cad_g18
11:59:03 193  ,cad_g19
11:59:03 194  ,cad_g20
11:59:03 195  ,cad_g21
11:59:03 196  ,cad_g22
11:59:03 197  ,cad_g23
11:59:03 198  ,cad_g24
11:59:03 199  ,cad_g25
11:59:03 200  ,cad_g26
11:59:03 201  ,cad_g27
11:59:03 202  ,cad_g28
11:59:03 203  ,cad_g29
11:59:03 204  ,cad_g30
11:59:03 205  ,cad_g31
11:59:03 206  ,cad_g32
11:59:03 207  ,cad_g33
11:59:03 208  ,cad_g34
11:59:03 209  ,cad_g35
11:59:03 210  ,cad_g36
11:59:03 211  ,cad_g37
11:59:03 212  ,cad_g38
11:59:03 213  ,cad_g39
11:59:03 214  ,cad_g40
11:59:03 215  ,cad_g41
11:59:03 216  ,chf_g00
11:59:03 217  ,chf_g01
11:59:03 218  ,chf_g02
11:59:03 219  ,chf_g03
11:59:03 220  ,chf_g04
11:59:03 221  ,chf_g05
11:59:03 222  ,chf_g06
11:59:03 223  ,chf_g07
11:59:03 224  ,chf_g08
11:59:03 225  ,chf_g09
11:59:03 226  ,chf_g10
11:59:03 227  ,chf_g11
11:59:03 228  ,chf_g12
11:59:03 229  ,chf_g13
11:59:03 230  ,chf_g14
11:59:03 231  ,chf_g15
11:59:03 232  ,chf_g16
11:59:03 233  ,chf_g17
11:59:03 234  ,chf_g18
11:59:03 235  ,chf_g19
11:59:03 236  ,chf_g20
11:59:03 237  ,chf_g21
11:59:03 238  ,chf_g22
11:59:03 239  ,chf_g23
11:59:03 240  ,chf_g24
11:59:03 241  ,chf_g25
11:59:03 242  ,chf_g26
11:59:03 243  ,chf_g27
11:59:03 244  ,chf_g28
11:59:03 245  ,chf_g29
11:59:03 246  ,chf_g30
11:59:03 247  ,chf_g31
11:59:03 248  ,chf_g32
11:59:03 249  ,chf_g33
11:59:03 250  ,chf_g34
11:59:03 251  ,chf_g35
11:59:03 252  ,chf_g36
11:59:03 253  ,chf_g37
11:59:03 254  ,chf_g38
11:59:03 255  ,chf_g39
11:59:03 256  ,chf_g40
11:59:03 257  ,chf_g41
11:59:03 258  FROM aud_ms6 m
11:59:03 259  WHERE gatt IN('nup','up')
11:59:03 260  AND 1+m.ydate < '&1'||' '||'&2'
11:59:03 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'11:40:00'

View created.

Elapsed: 00:00:00.16
11:59:03 SQL> 
11:59:03 SQL> -- rpt
11:59:03 SQL> 
11:59:03 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
11:59:03   2  
11:59:03 SQL> SELECT MAX(prdate) FROM bme
11:59:03   2  
11:59:03 SQL> -- Now build model from bme and score sme
11:59:03 SQL> @score1.sql
11:59:03 SQL> -- score1.sql
11:59:03 SQL> 
11:59:03 SQL> -- Does the 1st SVM score
11:59:03 SQL> 
11:59:03 SQL> -- Fill up svmc_apply_prep
11:59:03 SQL> @score.sql
11:59:03 SQL> --
11:59:03 SQL> -- score.sql
11:59:03 SQL> --
11:59:03 SQL> 
11:59:03 SQL> -- usage: score.sql
11:59:03 SQL> 
11:59:03 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
11:59:03 SQL> 
11:59:03 SQL> DEFINE target	= 'gatt'
11:59:03 SQL> DEFINE model_name = 'forex14'
11:59:03 SQL> DEFINE bldtable	= 'bme'
11:59:03 SQL> DEFINE scoretable = 'sme'
11:59:03 SQL> DEFINE case_id	= 'prdate'
11:59:03 SQL> 
11:59:03 SQL> -- Define a variable to help me exclude some columns from some data mining calls
11:59:03 SQL> DEFINE exclude1 = "'&target','&case_id'"
11:59:03 SQL> 
11:59:03 SQL> -- Builds an SVM model using pl/sql.
11:59:03 SQL> 
11:59:03 SQL> -----------------------------------------------------------------------
11:59:03 SQL> --			    BUILD THE MODEL
11:59:03 SQL> -----------------------------------------------------------------------
11:59:03 SQL> 
11:59:03 SQL> -- Cleanup old build data preparation objects for repeat runs
11:59:03 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
11:59:03 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
11:59:03 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
11:59:03 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
11:59:03 SQL> 
11:59:03 SQL> 
11:59:03 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
11:59:03 SQL> --
11:59:03 SQL> -- DROP	TABLE svmc_settings ;
11:59:03 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
11:59:03 SQL> -- DELETE svmc_settings;
11:59:03 SQL> 
11:59:03 SQL> -- The default classification algorithm is Naive Bayes. So override
11:59:03 SQL> -- this choice to SVM using a settings table.
11:59:03 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
11:59:03 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
11:59:03 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
11:59:03 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
11:59:03 SQL> -- models.
11:59:03 SQL> --
11:59:03 SQL> 
11:59:03 SQL> -- Do this once and then comment it out.
11:59:03 SQL> -- That makes script go faster.
11:59:03 SQL> -- BEGIN
11:59:03 SQL> -- -- Populate settings table
11:59:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:59:03 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
11:59:03 SQL> --
11:59:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:59:03 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
11:59:03 SQL> --
11:59:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:59:03 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
11:59:03 SQL> --   COMMIT;
11:59:03 SQL> -- END;
11:59:03 SQL> -- /
11:59:03 SQL> 
11:59:03 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
11:59:03 SQL> 
11:59:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
11:59:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:59:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:59:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
11:59:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:59:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.17
11:59:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
11:59:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:59:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.25
11:59:04 SQL> 
11:59:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
11:59:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:59:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.12
11:59:04 SQL> 
11:59:04 SQL> --------------------------------
11:59:04 SQL> -- PREPARE BUILD (TRAINING) DATA
11:59:04 SQL> --
11:59:04 SQL> 
11:59:04 SQL> -- 1. Missing Value treatment for all Predictors and
11:59:04 SQL> -- 2. Outlier Treatment and
11:59:04 SQL> -- 3. Normalization are performed below.
11:59:04 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
11:59:04 SQL> --    normalized here.
11:59:04 SQL> 
11:59:04 SQL> BEGIN
11:59:04   2  	-- Perform missing value treatment for all predictors
11:59:04   3  	-- create miss tables
11:59:04   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
11:59:04   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
11:59:04   6  
11:59:04   7  	-- populate miss tables
11:59:04   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
11:59:04   9  	  miss_table_name => 'svmc_miss_num',
11:59:04  10  	  data_table_name => '&bldtable',
11:59:04  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:59:04  12  
11:59:04  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
11:59:04  14  	  miss_table_name => 'svmc_miss_cat',
11:59:04  15  	  data_table_name => '&bldtable',
11:59:04  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:59:04  17  
11:59:04  18  	-- xform input data to replace missing values
11:59:04  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:59:04  20  	  miss_table_name => 'svmc_miss_num',
11:59:04  21  	  data_table_name => '&bldtable',
11:59:04  22  	  xform_view_name => 'xformed_build_miss_num');
11:59:04  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:59:04  24  	  miss_table_name => 'svmc_miss_cat',
11:59:04  25  	  data_table_name => '&bldtable',
11:59:04  26  	  xform_view_name => 'xformed_build_miss_cat');
11:59:04  27  
11:59:04  28  	-- Perform outlier treatment.
11:59:04  29  	-- create clip table
11:59:04  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
11:59:04  31  
11:59:04  32  	-- populate clip table
11:59:04  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
11:59:04  34  	  clip_table_name => 'svmc_clip',
11:59:04  35  	  data_table_name => '&bldtable',
11:59:04  36  	  tail_frac	  => 0.025,
11:59:04  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:59:04  38  
11:59:04  39  	-- xform input data to winsorized data
11:59:04  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
11:59:04  41  	  clip_table_name => 'svmc_clip',
11:59:04  42  	  data_table_name => '&bldtable',
11:59:04  43  	  xform_view_name => 'svmc_winsor');
11:59:04  44  
11:59:04  45  	-- create normalization table
11:59:04  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
11:59:04  47  
11:59:04  48  	-- populate normalization table based on winsorized data
11:59:04  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
11:59:04  50  	  norm_table_name => 'svmc_norm',
11:59:04  51  	  data_table_name => 'svmc_winsor',
11:59:04  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:59:04  53  
11:59:04  54  	-- normalize the original data
11:59:04  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:59:04  56  	  norm_table_name => 'svmc_norm',
11:59:04  57  	  data_table_name => '&bldtable',
11:59:04  58  	  xform_view_name => 'svmc_build_prep');
11:59:04  59  END;
11:59:04  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:21.34
11:59:25 SQL> 
11:59:25 SQL> ---------------------
11:59:25 SQL> -- CREATE A NEW MODEL
11:59:25 SQL> --
11:59:25 SQL> -- Cleanup old model with the same name for repeat runs
11:59:25 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
11:59:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:59:25   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.06
11:59:26 SQL> 
11:59:26 SQL> -- Build a new SVM Model
11:59:26 SQL> BEGIN
11:59:26   2  	DBMS_DATA_MINING.CREATE_MODEL(
11:59:26   3  	  model_name	      => '&model_name',
11:59:26   4  	  mining_function     => dbms_data_mining.classification,
11:59:26   5  	  data_table_name     => 'svmc_build_prep',
11:59:26   6  	  case_id_column_name => '&case_id',
11:59:26   7  	  target_column_name  => '&target',
11:59:26   8  	  settings_table_name => 'svmc_settings');
11:59:26   9  END;
11:59:26  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.46
11:59:53 SQL> 
11:59:53 SQL> -----------------------------------------------------------------------
11:59:53 SQL> --			       APPLY/score THE MODEL
11:59:53 SQL> -----------------------------------------------------------------------
11:59:53 SQL> 
11:59:53 SQL> -- Cleanup old scoring data preparation objects for repeat runs
11:59:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
11:59:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:59:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
11:59:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
11:59:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:59:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
11:59:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
11:59:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:59:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
11:59:53 SQL> -----------------------
11:59:53 SQL> -- PREPARE SCORING DATA
11:59:53 SQL> --
11:59:53 SQL> -- If the data for model creation has been prepared, then the data
11:59:53 SQL> -- to be scored using the model must be prepared in the same manner
11:59:53 SQL> -- in order to obtain meaningful results.
11:59:53 SQL> --
11:59:53 SQL> -- 1. Missing Value treatment for all Predictors and
11:59:53 SQL> -- 2. Normalization
11:59:53 SQL> -- No outlier treatment will be performed during test and apply. The
11:59:53 SQL> -- normalization step is sufficient, since the normalization parameters
11:59:53 SQL> -- already capture the effects of outlier treatment done with build data.
11:59:53 SQL> --
11:59:53 SQL> BEGIN
11:59:53   2  	-- Xform Test data to replace missing values
11:59:53   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:59:53   4  	  miss_table_name => 'svmc_miss_num',
11:59:53   5  	  data_table_name => '&scoretable',
11:59:53   6  	  xform_view_name => 'xformed_apply_miss_num');
11:59:53   7  
11:59:53   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:59:53   9  	  miss_table_name => 'svmc_miss_cat',
11:59:53  10  	  data_table_name => '&scoretable',
11:59:53  11  	  xform_view_name => 'xformed_apply_miss_cat');
11:59:53  12  
11:59:53  13  	-- Normalize the data to be scored
11:59:53  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:59:53  15  	  norm_table_name => 'svmc_norm',
11:59:53  16  	  data_table_name => '&scoretable',
11:59:53  17  	  xform_view_name => 'svmc_apply_prep');
11:59:53  18  END;
11:59:53  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
11:59:54 SQL> 
11:59:54 SQL> -- Use same model_name used in score.sql
11:59:54 SQL> DEFINE model_name = 'forex14'
11:59:54 SQL> 
11:59:54 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
11:59:54 SQL> 
11:59:54 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
11:59:54 SQL> 
11:59:54 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
11:59:54   2  SELECT
11:59:54   3  prdate
11:59:54   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
11:59:54   5  ,sysdate
11:59:54   6  ,SUBSTR(prdate,1,3)pair
11:59:54   7  ,SUBSTR(prdate,4,19)ydate
11:59:54   8  FROM svmc_apply_prep
11:59:54   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
11:59:54 SQL> @aud_score1day.sql  2011-01-03 11:45:00
11:59:54 SQL> --
11:59:54 SQL> -- aud_score1day.sql
11:59:54 SQL> --
11:59:54 SQL> 
11:59:54 SQL> CREATE OR REPLACE VIEW sme AS
11:59:54   2  SELECT
11:59:54   3  'aud'||m.ydate prdate
11:59:54   4  ,NULL gatt
11:59:54   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:59:54   6  ,eur_g00
11:59:54   7  ,eur_g01
11:59:54   8  ,eur_g02
11:59:54   9  ,eur_g03
11:59:54  10  ,eur_g04
11:59:54  11  ,eur_g05
11:59:54  12  ,eur_g06
11:59:54  13  ,eur_g07
11:59:54  14  ,eur_g08
11:59:54  15  ,eur_g09
11:59:54  16  ,eur_g10
11:59:54  17  ,eur_g11
11:59:54  18  ,eur_g12
11:59:54  19  ,eur_g13
11:59:54  20  ,eur_g14
11:59:54  21  ,eur_g15
11:59:54  22  ,eur_g16
11:59:54  23  ,eur_g17
11:59:54  24  ,eur_g18
11:59:54  25  ,eur_g19
11:59:54  26  ,eur_g20
11:59:54  27  ,eur_g21
11:59:54  28  ,eur_g22
11:59:54  29  ,eur_g23
11:59:54  30  ,eur_g24
11:59:54  31  ,eur_g25
11:59:54  32  ,eur_g26
11:59:54  33  ,eur_g27
11:59:54  34  ,eur_g28
11:59:54  35  ,eur_g29
11:59:54  36  ,eur_g30
11:59:54  37  ,eur_g31
11:59:54  38  ,eur_g32
11:59:54  39  ,eur_g33
11:59:54  40  ,eur_g34
11:59:54  41  ,eur_g35
11:59:54  42  ,eur_g36
11:59:54  43  ,eur_g37
11:59:54  44  ,eur_g38
11:59:54  45  ,eur_g39
11:59:54  46  ,eur_g40
11:59:54  47  ,eur_g41
11:59:54  48  ,aud_g00
11:59:54  49  ,aud_g01
11:59:54  50  ,aud_g02
11:59:54  51  ,aud_g03
11:59:54  52  ,aud_g04
11:59:54  53  ,aud_g05
11:59:54  54  ,aud_g06
11:59:54  55  ,aud_g07
11:59:54  56  ,aud_g08
11:59:54  57  ,aud_g09
11:59:54  58  ,aud_g10
11:59:54  59  ,aud_g11
11:59:54  60  ,aud_g12
11:59:54  61  ,aud_g13
11:59:54  62  ,aud_g14
11:59:54  63  ,aud_g15
11:59:54  64  ,aud_g16
11:59:54  65  ,aud_g17
11:59:54  66  ,aud_g18
11:59:54  67  ,aud_g19
11:59:54  68  ,aud_g20
11:59:54  69  ,aud_g21
11:59:54  70  ,aud_g22
11:59:54  71  ,aud_g23
11:59:54  72  ,aud_g24
11:59:54  73  ,aud_g25
11:59:54  74  ,aud_g26
11:59:54  75  ,aud_g27
11:59:54  76  ,aud_g28
11:59:54  77  ,aud_g29
11:59:54  78  ,aud_g30
11:59:54  79  ,aud_g31
11:59:54  80  ,aud_g32
11:59:54  81  ,aud_g33
11:59:54  82  ,aud_g34
11:59:54  83  ,aud_g35
11:59:54  84  ,aud_g36
11:59:54  85  ,aud_g37
11:59:54  86  ,aud_g38
11:59:54  87  ,aud_g39
11:59:54  88  ,aud_g40
11:59:54  89  ,aud_g41
11:59:54  90  ,gbp_g00
11:59:54  91  ,gbp_g01
11:59:54  92  ,gbp_g02
11:59:54  93  ,gbp_g03
11:59:54  94  ,gbp_g04
11:59:54  95  ,gbp_g05
11:59:54  96  ,gbp_g06
11:59:54  97  ,gbp_g07
11:59:54  98  ,gbp_g08
11:59:54  99  ,gbp_g09
11:59:54 100  ,gbp_g10
11:59:54 101  ,gbp_g11
11:59:54 102  ,gbp_g12
11:59:54 103  ,gbp_g13
11:59:54 104  ,gbp_g14
11:59:54 105  ,gbp_g15
11:59:54 106  ,gbp_g16
11:59:54 107  ,gbp_g17
11:59:54 108  ,gbp_g18
11:59:54 109  ,gbp_g19
11:59:54 110  ,gbp_g20
11:59:54 111  ,gbp_g21
11:59:54 112  ,gbp_g22
11:59:54 113  ,gbp_g23
11:59:54 114  ,gbp_g24
11:59:54 115  ,gbp_g25
11:59:54 116  ,gbp_g26
11:59:54 117  ,gbp_g27
11:59:54 118  ,gbp_g28
11:59:54 119  ,gbp_g29
11:59:54 120  ,gbp_g30
11:59:54 121  ,gbp_g31
11:59:54 122  ,gbp_g32
11:59:54 123  ,gbp_g33
11:59:54 124  ,gbp_g34
11:59:54 125  ,gbp_g35
11:59:54 126  ,gbp_g36
11:59:54 127  ,gbp_g37
11:59:54 128  ,gbp_g38
11:59:54 129  ,gbp_g39
11:59:54 130  ,gbp_g40
11:59:54 131  ,gbp_g41
11:59:54 132  ,jpy_g00
11:59:54 133  ,jpy_g01
11:59:54 134  ,jpy_g02
11:59:54 135  ,jpy_g03
11:59:54 136  ,jpy_g04
11:59:54 137  ,jpy_g05
11:59:54 138  ,jpy_g06
11:59:54 139  ,jpy_g07
11:59:54 140  ,jpy_g08
11:59:54 141  ,jpy_g09
11:59:54 142  ,jpy_g10
11:59:54 143  ,jpy_g11
11:59:54 144  ,jpy_g12
11:59:54 145  ,jpy_g13
11:59:54 146  ,jpy_g14
11:59:54 147  ,jpy_g15
11:59:54 148  ,jpy_g16
11:59:54 149  ,jpy_g17
11:59:54 150  ,jpy_g18
11:59:54 151  ,jpy_g19
11:59:54 152  ,jpy_g20
11:59:54 153  ,jpy_g21
11:59:54 154  ,jpy_g22
11:59:54 155  ,jpy_g23
11:59:54 156  ,jpy_g24
11:59:54 157  ,jpy_g25
11:59:54 158  ,jpy_g26
11:59:54 159  ,jpy_g27
11:59:54 160  ,jpy_g28
11:59:54 161  ,jpy_g29
11:59:54 162  ,jpy_g30
11:59:54 163  ,jpy_g31
11:59:54 164  ,jpy_g32
11:59:54 165  ,jpy_g33
11:59:54 166  ,jpy_g34
11:59:54 167  ,jpy_g35
11:59:54 168  ,jpy_g36
11:59:54 169  ,jpy_g37
11:59:54 170  ,jpy_g38
11:59:54 171  ,jpy_g39
11:59:54 172  ,jpy_g40
11:59:54 173  ,jpy_g41
11:59:54 174  ,cad_g00
11:59:54 175  ,cad_g01
11:59:54 176  ,cad_g02
11:59:54 177  ,cad_g03
11:59:54 178  ,cad_g04
11:59:54 179  ,cad_g05
11:59:54 180  ,cad_g06
11:59:54 181  ,cad_g07
11:59:54 182  ,cad_g08
11:59:54 183  ,cad_g09
11:59:54 184  ,cad_g10
11:59:54 185  ,cad_g11
11:59:54 186  ,cad_g12
11:59:54 187  ,cad_g13
11:59:54 188  ,cad_g14
11:59:54 189  ,cad_g15
11:59:54 190  ,cad_g16
11:59:54 191  ,cad_g17
11:59:54 192  ,cad_g18
11:59:54 193  ,cad_g19
11:59:54 194  ,cad_g20
11:59:54 195  ,cad_g21
11:59:54 196  ,cad_g22
11:59:54 197  ,cad_g23
11:59:54 198  ,cad_g24
11:59:54 199  ,cad_g25
11:59:54 200  ,cad_g26
11:59:54 201  ,cad_g27
11:59:54 202  ,cad_g28
11:59:54 203  ,cad_g29
11:59:54 204  ,cad_g30
11:59:54 205  ,cad_g31
11:59:54 206  ,cad_g32
11:59:54 207  ,cad_g33
11:59:54 208  ,cad_g34
11:59:54 209  ,cad_g35
11:59:54 210  ,cad_g36
11:59:54 211  ,cad_g37
11:59:54 212  ,cad_g38
11:59:54 213  ,cad_g39
11:59:54 214  ,cad_g40
11:59:54 215  ,cad_g41
11:59:54 216  ,chf_g00
11:59:54 217  ,chf_g01
11:59:54 218  ,chf_g02
11:59:54 219  ,chf_g03
11:59:54 220  ,chf_g04
11:59:54 221  ,chf_g05
11:59:54 222  ,chf_g06
11:59:54 223  ,chf_g07
11:59:54 224  ,chf_g08
11:59:54 225  ,chf_g09
11:59:54 226  ,chf_g10
11:59:54 227  ,chf_g11
11:59:54 228  ,chf_g12
11:59:54 229  ,chf_g13
11:59:54 230  ,chf_g14
11:59:54 231  ,chf_g15
11:59:54 232  ,chf_g16
11:59:54 233  ,chf_g17
11:59:54 234  ,chf_g18
11:59:54 235  ,chf_g19
11:59:54 236  ,chf_g20
11:59:54 237  ,chf_g21
11:59:54 238  ,chf_g22
11:59:54 239  ,chf_g23
11:59:54 240  ,chf_g24
11:59:54 241  ,chf_g25
11:59:54 242  ,chf_g26
11:59:54 243  ,chf_g27
11:59:54 244  ,chf_g28
11:59:54 245  ,chf_g29
11:59:54 246  ,chf_g30
11:59:54 247  ,chf_g31
11:59:54 248  ,chf_g32
11:59:54 249  ,chf_g33
11:59:54 250  ,chf_g34
11:59:54 251  ,chf_g35
11:59:54 252  ,chf_g36
11:59:54 253  ,chf_g37
11:59:54 254  ,chf_g38
11:59:54 255  ,chf_g39
11:59:54 256  ,chf_g40
11:59:54 257  ,chf_g41
11:59:54 258  FROM aud_ms6 m
11:59:54 259  WHERE m.ydate = '&1'||' '||'&2'
11:59:54 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'11:45:00'

View created.

Elapsed: 00:00:00.12
11:59:54 SQL> 
11:59:54 SQL> -- rpt
11:59:54 SQL> -- We should see just 1 row:
11:59:54 SQL> 
11:59:54 SQL> SELECT COUNT(prdate) FROM sme
11:59:54   2  
11:59:54 SQL> -- Build the model:
11:59:54 SQL> CREATE OR REPLACE VIEW bme AS
11:59:54   2  SELECT
11:59:54   3  'aud'||m.ydate prdate
11:59:54   4  ,gatt
11:59:54   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:59:54   6  ,eur_g00
11:59:54   7  ,eur_g01
11:59:54   8  ,eur_g02
11:59:54   9  ,eur_g03
11:59:54  10  ,eur_g04
11:59:54  11  ,eur_g05
11:59:54  12  ,eur_g06
11:59:54  13  ,eur_g07
11:59:54  14  ,eur_g08
11:59:54  15  ,eur_g09
11:59:54  16  ,eur_g10
11:59:54  17  ,eur_g11
11:59:54  18  ,eur_g12
11:59:54  19  ,eur_g13
11:59:54  20  ,eur_g14
11:59:54  21  ,eur_g15
11:59:54  22  ,eur_g16
11:59:54  23  ,eur_g17
11:59:54  24  ,eur_g18
11:59:54  25  ,eur_g19
11:59:54  26  ,eur_g20
11:59:54  27  ,eur_g21
11:59:54  28  ,eur_g22
11:59:54  29  ,eur_g23
11:59:54  30  ,eur_g24
11:59:54  31  ,eur_g25
11:59:54  32  ,eur_g26
11:59:54  33  ,eur_g27
11:59:54  34  ,eur_g28
11:59:54  35  ,eur_g29
11:59:54  36  ,eur_g30
11:59:54  37  ,eur_g31
11:59:54  38  ,eur_g32
11:59:54  39  ,eur_g33
11:59:54  40  ,eur_g34
11:59:54  41  ,eur_g35
11:59:54  42  ,eur_g36
11:59:54  43  ,eur_g37
11:59:54  44  ,eur_g38
11:59:54  45  ,eur_g39
11:59:54  46  ,eur_g40
11:59:54  47  ,eur_g41
11:59:54  48  ,aud_g00
11:59:54  49  ,aud_g01
11:59:54  50  ,aud_g02
11:59:54  51  ,aud_g03
11:59:54  52  ,aud_g04
11:59:54  53  ,aud_g05
11:59:54  54  ,aud_g06
11:59:54  55  ,aud_g07
11:59:54  56  ,aud_g08
11:59:54  57  ,aud_g09
11:59:54  58  ,aud_g10
11:59:54  59  ,aud_g11
11:59:54  60  ,aud_g12
11:59:54  61  ,aud_g13
11:59:54  62  ,aud_g14
11:59:54  63  ,aud_g15
11:59:54  64  ,aud_g16
11:59:54  65  ,aud_g17
11:59:54  66  ,aud_g18
11:59:54  67  ,aud_g19
11:59:54  68  ,aud_g20
11:59:54  69  ,aud_g21
11:59:54  70  ,aud_g22
11:59:54  71  ,aud_g23
11:59:54  72  ,aud_g24
11:59:54  73  ,aud_g25
11:59:54  74  ,aud_g26
11:59:54  75  ,aud_g27
11:59:54  76  ,aud_g28
11:59:54  77  ,aud_g29
11:59:54  78  ,aud_g30
11:59:54  79  ,aud_g31
11:59:54  80  ,aud_g32
11:59:54  81  ,aud_g33
11:59:54  82  ,aud_g34
11:59:54  83  ,aud_g35
11:59:54  84  ,aud_g36
11:59:54  85  ,aud_g37
11:59:54  86  ,aud_g38
11:59:54  87  ,aud_g39
11:59:54  88  ,aud_g40
11:59:54  89  ,aud_g41
11:59:54  90  ,gbp_g00
11:59:54  91  ,gbp_g01
11:59:54  92  ,gbp_g02
11:59:54  93  ,gbp_g03
11:59:54  94  ,gbp_g04
11:59:54  95  ,gbp_g05
11:59:54  96  ,gbp_g06
11:59:54  97  ,gbp_g07
11:59:54  98  ,gbp_g08
11:59:54  99  ,gbp_g09
11:59:54 100  ,gbp_g10
11:59:54 101  ,gbp_g11
11:59:54 102  ,gbp_g12
11:59:54 103  ,gbp_g13
11:59:54 104  ,gbp_g14
11:59:54 105  ,gbp_g15
11:59:54 106  ,gbp_g16
11:59:54 107  ,gbp_g17
11:59:54 108  ,gbp_g18
11:59:54 109  ,gbp_g19
11:59:54 110  ,gbp_g20
11:59:54 111  ,gbp_g21
11:59:54 112  ,gbp_g22
11:59:54 113  ,gbp_g23
11:59:54 114  ,gbp_g24
11:59:54 115  ,gbp_g25
11:59:54 116  ,gbp_g26
11:59:54 117  ,gbp_g27
11:59:54 118  ,gbp_g28
11:59:54 119  ,gbp_g29
11:59:54 120  ,gbp_g30
11:59:54 121  ,gbp_g31
11:59:54 122  ,gbp_g32
11:59:54 123  ,gbp_g33
11:59:54 124  ,gbp_g34
11:59:54 125  ,gbp_g35
11:59:54 126  ,gbp_g36
11:59:54 127  ,gbp_g37
11:59:54 128  ,gbp_g38
11:59:54 129  ,gbp_g39
11:59:54 130  ,gbp_g40
11:59:54 131  ,gbp_g41
11:59:54 132  ,jpy_g00
11:59:54 133  ,jpy_g01
11:59:54 134  ,jpy_g02
11:59:54 135  ,jpy_g03
11:59:54 136  ,jpy_g04
11:59:54 137  ,jpy_g05
11:59:54 138  ,jpy_g06
11:59:54 139  ,jpy_g07
11:59:54 140  ,jpy_g08
11:59:54 141  ,jpy_g09
11:59:54 142  ,jpy_g10
11:59:54 143  ,jpy_g11
11:59:54 144  ,jpy_g12
11:59:54 145  ,jpy_g13
11:59:54 146  ,jpy_g14
11:59:54 147  ,jpy_g15
11:59:54 148  ,jpy_g16
11:59:54 149  ,jpy_g17
11:59:54 150  ,jpy_g18
11:59:54 151  ,jpy_g19
11:59:54 152  ,jpy_g20
11:59:54 153  ,jpy_g21
11:59:54 154  ,jpy_g22
11:59:54 155  ,jpy_g23
11:59:54 156  ,jpy_g24
11:59:54 157  ,jpy_g25
11:59:54 158  ,jpy_g26
11:59:54 159  ,jpy_g27
11:59:54 160  ,jpy_g28
11:59:54 161  ,jpy_g29
11:59:54 162  ,jpy_g30
11:59:54 163  ,jpy_g31
11:59:54 164  ,jpy_g32
11:59:54 165  ,jpy_g33
11:59:54 166  ,jpy_g34
11:59:54 167  ,jpy_g35
11:59:54 168  ,jpy_g36
11:59:54 169  ,jpy_g37
11:59:54 170  ,jpy_g38
11:59:54 171  ,jpy_g39
11:59:54 172  ,jpy_g40
11:59:54 173  ,jpy_g41
11:59:54 174  ,cad_g00
11:59:54 175  ,cad_g01
11:59:54 176  ,cad_g02
11:59:54 177  ,cad_g03
11:59:54 178  ,cad_g04
11:59:54 179  ,cad_g05
11:59:54 180  ,cad_g06
11:59:54 181  ,cad_g07
11:59:54 182  ,cad_g08
11:59:54 183  ,cad_g09
11:59:54 184  ,cad_g10
11:59:54 185  ,cad_g11
11:59:54 186  ,cad_g12
11:59:54 187  ,cad_g13
11:59:54 188  ,cad_g14
11:59:54 189  ,cad_g15
11:59:54 190  ,cad_g16
11:59:54 191  ,cad_g17
11:59:54 192  ,cad_g18
11:59:54 193  ,cad_g19
11:59:54 194  ,cad_g20
11:59:54 195  ,cad_g21
11:59:54 196  ,cad_g22
11:59:54 197  ,cad_g23
11:59:54 198  ,cad_g24
11:59:54 199  ,cad_g25
11:59:54 200  ,cad_g26
11:59:54 201  ,cad_g27
11:59:54 202  ,cad_g28
11:59:54 203  ,cad_g29
11:59:54 204  ,cad_g30
11:59:54 205  ,cad_g31
11:59:54 206  ,cad_g32
11:59:54 207  ,cad_g33
11:59:54 208  ,cad_g34
11:59:54 209  ,cad_g35
11:59:54 210  ,cad_g36
11:59:54 211  ,cad_g37
11:59:54 212  ,cad_g38
11:59:54 213  ,cad_g39
11:59:54 214  ,cad_g40
11:59:54 215  ,cad_g41
11:59:54 216  ,chf_g00
11:59:54 217  ,chf_g01
11:59:54 218  ,chf_g02
11:59:54 219  ,chf_g03
11:59:54 220  ,chf_g04
11:59:54 221  ,chf_g05
11:59:54 222  ,chf_g06
11:59:54 223  ,chf_g07
11:59:54 224  ,chf_g08
11:59:54 225  ,chf_g09
11:59:54 226  ,chf_g10
11:59:54 227  ,chf_g11
11:59:54 228  ,chf_g12
11:59:54 229  ,chf_g13
11:59:54 230  ,chf_g14
11:59:54 231  ,chf_g15
11:59:54 232  ,chf_g16
11:59:54 233  ,chf_g17
11:59:54 234  ,chf_g18
11:59:54 235  ,chf_g19
11:59:54 236  ,chf_g20
11:59:54 237  ,chf_g21
11:59:54 238  ,chf_g22
11:59:54 239  ,chf_g23
11:59:54 240  ,chf_g24
11:59:54 241  ,chf_g25
11:59:54 242  ,chf_g26
11:59:54 243  ,chf_g27
11:59:54 244  ,chf_g28
11:59:54 245  ,chf_g29
11:59:54 246  ,chf_g30
11:59:54 247  ,chf_g31
11:59:54 248  ,chf_g32
11:59:54 249  ,chf_g33
11:59:54 250  ,chf_g34
11:59:54 251  ,chf_g35
11:59:54 252  ,chf_g36
11:59:54 253  ,chf_g37
11:59:54 254  ,chf_g38
11:59:54 255  ,chf_g39
11:59:54 256  ,chf_g40
11:59:54 257  ,chf_g41
11:59:54 258  FROM aud_ms6 m
11:59:54 259  WHERE gatt IN('nup','up')
11:59:54 260  AND 1+m.ydate < '&1'||' '||'&2'
11:59:54 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'11:45:00'

View created.

Elapsed: 00:00:00.13
11:59:54 SQL> 
11:59:54 SQL> -- rpt
11:59:54 SQL> 
11:59:54 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
11:59:54   2  
11:59:54 SQL> SELECT MAX(prdate) FROM bme
11:59:54   2  
11:59:54 SQL> -- Now build model from bme and score sme
11:59:54 SQL> @score1.sql
11:59:54 SQL> -- score1.sql
11:59:54 SQL> 
11:59:54 SQL> -- Does the 1st SVM score
11:59:54 SQL> 
11:59:54 SQL> -- Fill up svmc_apply_prep
11:59:54 SQL> @score.sql
11:59:54 SQL> --
11:59:54 SQL> -- score.sql
11:59:54 SQL> --
11:59:54 SQL> 
11:59:54 SQL> -- usage: score.sql
11:59:54 SQL> 
11:59:54 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
11:59:54 SQL> 
11:59:54 SQL> DEFINE target	= 'gatt'
11:59:54 SQL> DEFINE model_name = 'forex14'
11:59:54 SQL> DEFINE bldtable	= 'bme'
11:59:54 SQL> DEFINE scoretable = 'sme'
11:59:54 SQL> DEFINE case_id	= 'prdate'
11:59:54 SQL> 
11:59:54 SQL> -- Define a variable to help me exclude some columns from some data mining calls
11:59:54 SQL> DEFINE exclude1 = "'&target','&case_id'"
11:59:54 SQL> 
11:59:54 SQL> -- Builds an SVM model using pl/sql.
11:59:54 SQL> 
11:59:54 SQL> -----------------------------------------------------------------------
11:59:54 SQL> --			    BUILD THE MODEL
11:59:54 SQL> -----------------------------------------------------------------------
11:59:54 SQL> 
11:59:54 SQL> -- Cleanup old build data preparation objects for repeat runs
11:59:54 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
11:59:54 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
11:59:54 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
11:59:54 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
11:59:54 SQL> 
11:59:54 SQL> 
11:59:54 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
11:59:54 SQL> --
11:59:54 SQL> -- DROP	TABLE svmc_settings ;
11:59:54 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
11:59:54 SQL> -- DELETE svmc_settings;
11:59:54 SQL> 
11:59:54 SQL> -- The default classification algorithm is Naive Bayes. So override
11:59:54 SQL> -- this choice to SVM using a settings table.
11:59:54 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
11:59:54 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
11:59:54 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
11:59:54 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
11:59:54 SQL> -- models.
11:59:54 SQL> --
11:59:54 SQL> 
11:59:54 SQL> -- Do this once and then comment it out.
11:59:54 SQL> -- That makes script go faster.
11:59:54 SQL> -- BEGIN
11:59:54 SQL> -- -- Populate settings table
11:59:54 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:59:54 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
11:59:54 SQL> --
11:59:54 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:59:54 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
11:59:54 SQL> --
11:59:54 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:59:54 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
11:59:54 SQL> --   COMMIT;
11:59:54 SQL> -- END;
11:59:54 SQL> -- /
11:59:54 SQL> 
11:59:54 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
11:59:54 SQL> 
11:59:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
11:59:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:59:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:59:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
11:59:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:59:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:59:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
11:59:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:59:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:59:55 SQL> 
11:59:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
11:59:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:59:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.16
11:59:55 SQL> 
11:59:55 SQL> --------------------------------
11:59:55 SQL> -- PREPARE BUILD (TRAINING) DATA
11:59:55 SQL> --
11:59:55 SQL> 
11:59:55 SQL> -- 1. Missing Value treatment for all Predictors and
11:59:55 SQL> -- 2. Outlier Treatment and
11:59:55 SQL> -- 3. Normalization are performed below.
11:59:55 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
11:59:55 SQL> --    normalized here.
11:59:55 SQL> 
11:59:55 SQL> BEGIN
11:59:55   2  	-- Perform missing value treatment for all predictors
11:59:55   3  	-- create miss tables
11:59:55   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
11:59:55   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
11:59:55   6  
11:59:55   7  	-- populate miss tables
11:59:55   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
11:59:55   9  	  miss_table_name => 'svmc_miss_num',
11:59:55  10  	  data_table_name => '&bldtable',
11:59:55  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:59:55  12  
11:59:55  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
11:59:55  14  	  miss_table_name => 'svmc_miss_cat',
11:59:55  15  	  data_table_name => '&bldtable',
11:59:55  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:59:55  17  
11:59:55  18  	-- xform input data to replace missing values
11:59:55  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:59:55  20  	  miss_table_name => 'svmc_miss_num',
11:59:55  21  	  data_table_name => '&bldtable',
11:59:55  22  	  xform_view_name => 'xformed_build_miss_num');
11:59:55  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:59:55  24  	  miss_table_name => 'svmc_miss_cat',
11:59:55  25  	  data_table_name => '&bldtable',
11:59:55  26  	  xform_view_name => 'xformed_build_miss_cat');
11:59:55  27  
11:59:55  28  	-- Perform outlier treatment.
11:59:55  29  	-- create clip table
11:59:55  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
11:59:55  31  
11:59:55  32  	-- populate clip table
11:59:55  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
11:59:55  34  	  clip_table_name => 'svmc_clip',
11:59:55  35  	  data_table_name => '&bldtable',
11:59:55  36  	  tail_frac	  => 0.025,
11:59:55  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:59:55  38  
11:59:55  39  	-- xform input data to winsorized data
11:59:55  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
11:59:55  41  	  clip_table_name => 'svmc_clip',
11:59:55  42  	  data_table_name => '&bldtable',
11:59:55  43  	  xform_view_name => 'svmc_winsor');
11:59:55  44  
11:59:55  45  	-- create normalization table
11:59:55  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
11:59:55  47  
11:59:55  48  	-- populate normalization table based on winsorized data
11:59:55  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
11:59:55  50  	  norm_table_name => 'svmc_norm',
11:59:55  51  	  data_table_name => 'svmc_winsor',
11:59:55  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:59:55  53  
11:59:55  54  	-- normalize the original data
11:59:55  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:59:55  56  	  norm_table_name => 'svmc_norm',
11:59:55  57  	  data_table_name => '&bldtable',
11:59:55  58  	  xform_view_name => 'svmc_build_prep');
11:59:55  59  END;
11:59:55  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.79
12:00:13 SQL> 
12:00:13 SQL> ---------------------
12:00:13 SQL> -- CREATE A NEW MODEL
12:00:13 SQL> --
12:00:13 SQL> -- Cleanup old model with the same name for repeat runs
12:00:13 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
12:00:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:00:13   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
12:00:14 SQL> 
12:00:14 SQL> -- Build a new SVM Model
12:00:14 SQL> BEGIN
12:00:14   2  	DBMS_DATA_MINING.CREATE_MODEL(
12:00:14   3  	  model_name	      => '&model_name',
12:00:14   4  	  mining_function     => dbms_data_mining.classification,
12:00:14   5  	  data_table_name     => 'svmc_build_prep',
12:00:14   6  	  case_id_column_name => '&case_id',
12:00:14   7  	  target_column_name  => '&target',
12:00:14   8  	  settings_table_name => 'svmc_settings');
12:00:14   9  END;
12:00:14  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.27
12:00:41 SQL> 
12:00:41 SQL> -----------------------------------------------------------------------
12:00:41 SQL> --			       APPLY/score THE MODEL
12:00:41 SQL> -----------------------------------------------------------------------
12:00:41 SQL> 
12:00:41 SQL> -- Cleanup old scoring data preparation objects for repeat runs
12:00:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
12:00:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:00:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:00:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
12:00:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:00:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:00:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
12:00:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:00:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
12:00:41 SQL> -----------------------
12:00:41 SQL> -- PREPARE SCORING DATA
12:00:41 SQL> --
12:00:41 SQL> -- If the data for model creation has been prepared, then the data
12:00:41 SQL> -- to be scored using the model must be prepared in the same manner
12:00:41 SQL> -- in order to obtain meaningful results.
12:00:41 SQL> --
12:00:41 SQL> -- 1. Missing Value treatment for all Predictors and
12:00:41 SQL> -- 2. Normalization
12:00:41 SQL> -- No outlier treatment will be performed during test and apply. The
12:00:41 SQL> -- normalization step is sufficient, since the normalization parameters
12:00:41 SQL> -- already capture the effects of outlier treatment done with build data.
12:00:41 SQL> --
12:00:41 SQL> BEGIN
12:00:41   2  	-- Xform Test data to replace missing values
12:00:41   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:00:41   4  	  miss_table_name => 'svmc_miss_num',
12:00:41   5  	  data_table_name => '&scoretable',
12:00:41   6  	  xform_view_name => 'xformed_apply_miss_num');
12:00:41   7  
12:00:41   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:00:41   9  	  miss_table_name => 'svmc_miss_cat',
12:00:41  10  	  data_table_name => '&scoretable',
12:00:41  11  	  xform_view_name => 'xformed_apply_miss_cat');
12:00:41  12  
12:00:41  13  	-- Normalize the data to be scored
12:00:41  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:00:41  15  	  norm_table_name => 'svmc_norm',
12:00:41  16  	  data_table_name => '&scoretable',
12:00:41  17  	  xform_view_name => 'svmc_apply_prep');
12:00:41  18  END;
12:00:41  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.15
12:00:42 SQL> 
12:00:42 SQL> -- Use same model_name used in score.sql
12:00:42 SQL> DEFINE model_name = 'forex14'
12:00:42 SQL> 
12:00:42 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
12:00:42 SQL> 
12:00:42 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
12:00:42 SQL> 
12:00:42 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
12:00:42   2  SELECT
12:00:42   3  prdate
12:00:42   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
12:00:42   5  ,sysdate
12:00:42   6  ,SUBSTR(prdate,1,3)pair
12:00:42   7  ,SUBSTR(prdate,4,19)ydate
12:00:42   8  FROM svmc_apply_prep
12:00:42   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
12:00:42 SQL> @aud_score1day_gattn.sql	2011-01-03 11:35:00
12:00:42 SQL> --
12:00:43 SQL> -- aud_score1day_gattn.sql
12:00:43 SQL> --
12:00:43 SQL> 
12:00:43 SQL> CREATE OR REPLACE VIEW sme AS
12:00:43   2  SELECT
12:00:43   3  'aud'||m.ydate prdate
12:00:43   4  ,NULL gattn
12:00:43   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:00:43   6  ,eur_g00
12:00:43   7  ,eur_g01
12:00:43   8  ,eur_g02
12:00:43   9  ,eur_g03
12:00:43  10  ,eur_g04
12:00:43  11  ,eur_g05
12:00:43  12  ,eur_g06
12:00:43  13  ,eur_g07
12:00:43  14  ,eur_g08
12:00:43  15  ,eur_g09
12:00:43  16  ,eur_g10
12:00:43  17  ,eur_g11
12:00:43  18  ,eur_g12
12:00:43  19  ,eur_g13
12:00:43  20  ,eur_g14
12:00:43  21  ,eur_g15
12:00:43  22  ,eur_g16
12:00:43  23  ,eur_g17
12:00:43  24  ,eur_g18
12:00:43  25  ,eur_g19
12:00:43  26  ,eur_g20
12:00:43  27  ,eur_g21
12:00:43  28  ,eur_g22
12:00:43  29  ,eur_g23
12:00:43  30  ,eur_g24
12:00:43  31  ,eur_g25
12:00:43  32  ,eur_g26
12:00:43  33  ,eur_g27
12:00:43  34  ,eur_g28
12:00:43  35  ,eur_g29
12:00:43  36  ,eur_g30
12:00:43  37  ,eur_g31
12:00:43  38  ,eur_g32
12:00:43  39  ,eur_g33
12:00:43  40  ,eur_g34
12:00:43  41  ,eur_g35
12:00:43  42  ,eur_g36
12:00:43  43  ,eur_g37
12:00:43  44  ,eur_g38
12:00:43  45  ,eur_g39
12:00:43  46  ,eur_g40
12:00:43  47  ,eur_g41
12:00:43  48  ,aud_g00
12:00:43  49  ,aud_g01
12:00:43  50  ,aud_g02
12:00:43  51  ,aud_g03
12:00:43  52  ,aud_g04
12:00:43  53  ,aud_g05
12:00:43  54  ,aud_g06
12:00:43  55  ,aud_g07
12:00:43  56  ,aud_g08
12:00:43  57  ,aud_g09
12:00:43  58  ,aud_g10
12:00:43  59  ,aud_g11
12:00:43  60  ,aud_g12
12:00:43  61  ,aud_g13
12:00:43  62  ,aud_g14
12:00:43  63  ,aud_g15
12:00:43  64  ,aud_g16
12:00:43  65  ,aud_g17
12:00:43  66  ,aud_g18
12:00:43  67  ,aud_g19
12:00:43  68  ,aud_g20
12:00:43  69  ,aud_g21
12:00:43  70  ,aud_g22
12:00:43  71  ,aud_g23
12:00:43  72  ,aud_g24
12:00:43  73  ,aud_g25
12:00:43  74  ,aud_g26
12:00:43  75  ,aud_g27
12:00:43  76  ,aud_g28
12:00:43  77  ,aud_g29
12:00:43  78  ,aud_g30
12:00:43  79  ,aud_g31
12:00:43  80  ,aud_g32
12:00:43  81  ,aud_g33
12:00:43  82  ,aud_g34
12:00:43  83  ,aud_g35
12:00:43  84  ,aud_g36
12:00:43  85  ,aud_g37
12:00:43  86  ,aud_g38
12:00:43  87  ,aud_g39
12:00:43  88  ,aud_g40
12:00:43  89  ,aud_g41
12:00:43  90  ,gbp_g00
12:00:43  91  ,gbp_g01
12:00:43  92  ,gbp_g02
12:00:43  93  ,gbp_g03
12:00:43  94  ,gbp_g04
12:00:43  95  ,gbp_g05
12:00:43  96  ,gbp_g06
12:00:43  97  ,gbp_g07
12:00:43  98  ,gbp_g08
12:00:43  99  ,gbp_g09
12:00:43 100  ,gbp_g10
12:00:43 101  ,gbp_g11
12:00:43 102  ,gbp_g12
12:00:43 103  ,gbp_g13
12:00:43 104  ,gbp_g14
12:00:43 105  ,gbp_g15
12:00:43 106  ,gbp_g16
12:00:43 107  ,gbp_g17
12:00:43 108  ,gbp_g18
12:00:43 109  ,gbp_g19
12:00:43 110  ,gbp_g20
12:00:43 111  ,gbp_g21
12:00:43 112  ,gbp_g22
12:00:43 113  ,gbp_g23
12:00:43 114  ,gbp_g24
12:00:43 115  ,gbp_g25
12:00:43 116  ,gbp_g26
12:00:43 117  ,gbp_g27
12:00:43 118  ,gbp_g28
12:00:43 119  ,gbp_g29
12:00:43 120  ,gbp_g30
12:00:43 121  ,gbp_g31
12:00:43 122  ,gbp_g32
12:00:43 123  ,gbp_g33
12:00:43 124  ,gbp_g34
12:00:43 125  ,gbp_g35
12:00:43 126  ,gbp_g36
12:00:43 127  ,gbp_g37
12:00:43 128  ,gbp_g38
12:00:43 129  ,gbp_g39
12:00:43 130  ,gbp_g40
12:00:43 131  ,gbp_g41
12:00:43 132  ,jpy_g00
12:00:43 133  ,jpy_g01
12:00:43 134  ,jpy_g02
12:00:43 135  ,jpy_g03
12:00:43 136  ,jpy_g04
12:00:43 137  ,jpy_g05
12:00:43 138  ,jpy_g06
12:00:43 139  ,jpy_g07
12:00:43 140  ,jpy_g08
12:00:43 141  ,jpy_g09
12:00:43 142  ,jpy_g10
12:00:43 143  ,jpy_g11
12:00:43 144  ,jpy_g12
12:00:43 145  ,jpy_g13
12:00:43 146  ,jpy_g14
12:00:43 147  ,jpy_g15
12:00:43 148  ,jpy_g16
12:00:43 149  ,jpy_g17
12:00:43 150  ,jpy_g18
12:00:43 151  ,jpy_g19
12:00:43 152  ,jpy_g20
12:00:43 153  ,jpy_g21
12:00:43 154  ,jpy_g22
12:00:43 155  ,jpy_g23
12:00:43 156  ,jpy_g24
12:00:43 157  ,jpy_g25
12:00:43 158  ,jpy_g26
12:00:43 159  ,jpy_g27
12:00:43 160  ,jpy_g28
12:00:43 161  ,jpy_g29
12:00:43 162  ,jpy_g30
12:00:43 163  ,jpy_g31
12:00:43 164  ,jpy_g32
12:00:43 165  ,jpy_g33
12:00:43 166  ,jpy_g34
12:00:43 167  ,jpy_g35
12:00:43 168  ,jpy_g36
12:00:43 169  ,jpy_g37
12:00:43 170  ,jpy_g38
12:00:43 171  ,jpy_g39
12:00:43 172  ,jpy_g40
12:00:43 173  ,jpy_g41
12:00:43 174  ,cad_g00
12:00:43 175  ,cad_g01
12:00:43 176  ,cad_g02
12:00:43 177  ,cad_g03
12:00:43 178  ,cad_g04
12:00:43 179  ,cad_g05
12:00:43 180  ,cad_g06
12:00:43 181  ,cad_g07
12:00:43 182  ,cad_g08
12:00:43 183  ,cad_g09
12:00:43 184  ,cad_g10
12:00:43 185  ,cad_g11
12:00:43 186  ,cad_g12
12:00:43 187  ,cad_g13
12:00:43 188  ,cad_g14
12:00:43 189  ,cad_g15
12:00:43 190  ,cad_g16
12:00:43 191  ,cad_g17
12:00:43 192  ,cad_g18
12:00:43 193  ,cad_g19
12:00:43 194  ,cad_g20
12:00:43 195  ,cad_g21
12:00:43 196  ,cad_g22
12:00:43 197  ,cad_g23
12:00:43 198  ,cad_g24
12:00:43 199  ,cad_g25
12:00:43 200  ,cad_g26
12:00:43 201  ,cad_g27
12:00:43 202  ,cad_g28
12:00:43 203  ,cad_g29
12:00:43 204  ,cad_g30
12:00:43 205  ,cad_g31
12:00:43 206  ,cad_g32
12:00:43 207  ,cad_g33
12:00:43 208  ,cad_g34
12:00:43 209  ,cad_g35
12:00:43 210  ,cad_g36
12:00:43 211  ,cad_g37
12:00:43 212  ,cad_g38
12:00:43 213  ,cad_g39
12:00:43 214  ,cad_g40
12:00:43 215  ,cad_g41
12:00:43 216  ,chf_g00
12:00:43 217  ,chf_g01
12:00:43 218  ,chf_g02
12:00:43 219  ,chf_g03
12:00:43 220  ,chf_g04
12:00:43 221  ,chf_g05
12:00:43 222  ,chf_g06
12:00:43 223  ,chf_g07
12:00:43 224  ,chf_g08
12:00:43 225  ,chf_g09
12:00:43 226  ,chf_g10
12:00:43 227  ,chf_g11
12:00:43 228  ,chf_g12
12:00:43 229  ,chf_g13
12:00:43 230  ,chf_g14
12:00:43 231  ,chf_g15
12:00:43 232  ,chf_g16
12:00:43 233  ,chf_g17
12:00:43 234  ,chf_g18
12:00:43 235  ,chf_g19
12:00:43 236  ,chf_g20
12:00:43 237  ,chf_g21
12:00:43 238  ,chf_g22
12:00:43 239  ,chf_g23
12:00:43 240  ,chf_g24
12:00:43 241  ,chf_g25
12:00:43 242  ,chf_g26
12:00:43 243  ,chf_g27
12:00:43 244  ,chf_g28
12:00:43 245  ,chf_g29
12:00:43 246  ,chf_g30
12:00:43 247  ,chf_g31
12:00:43 248  ,chf_g32
12:00:43 249  ,chf_g33
12:00:43 250  ,chf_g34
12:00:43 251  ,chf_g35
12:00:43 252  ,chf_g36
12:00:43 253  ,chf_g37
12:00:43 254  ,chf_g38
12:00:43 255  ,chf_g39
12:00:43 256  ,chf_g40
12:00:43 257  ,chf_g41
12:00:43 258  FROM aud_ms6 m
12:00:43 259  WHERE m.ydate = '&1'||' '||'&2'
12:00:43 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'11:35:00'

View created.

Elapsed: 00:00:00.19
12:00:43 SQL> 
12:00:43 SQL> -- rpt
12:00:43 SQL> -- We should see just 1 row:
12:00:43 SQL> 
12:00:43 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.04
12:00:43 SQL> 
12:00:43 SQL> -- Build the model:
12:00:43 SQL> CREATE OR REPLACE VIEW bme AS
12:00:43   2  SELECT
12:00:43   3  'aud'||m.ydate prdate
12:00:43   4  ,gattn
12:00:43   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:00:43   6  ,eur_g00
12:00:43   7  ,eur_g01
12:00:43   8  ,eur_g02
12:00:43   9  ,eur_g03
12:00:43  10  ,eur_g04
12:00:43  11  ,eur_g05
12:00:43  12  ,eur_g06
12:00:43  13  ,eur_g07
12:00:43  14  ,eur_g08
12:00:43  15  ,eur_g09
12:00:43  16  ,eur_g10
12:00:43  17  ,eur_g11
12:00:43  18  ,eur_g12
12:00:43  19  ,eur_g13
12:00:43  20  ,eur_g14
12:00:43  21  ,eur_g15
12:00:43  22  ,eur_g16
12:00:43  23  ,eur_g17
12:00:43  24  ,eur_g18
12:00:43  25  ,eur_g19
12:00:43  26  ,eur_g20
12:00:43  27  ,eur_g21
12:00:43  28  ,eur_g22
12:00:43  29  ,eur_g23
12:00:43  30  ,eur_g24
12:00:43  31  ,eur_g25
12:00:43  32  ,eur_g26
12:00:43  33  ,eur_g27
12:00:43  34  ,eur_g28
12:00:43  35  ,eur_g29
12:00:43  36  ,eur_g30
12:00:43  37  ,eur_g31
12:00:43  38  ,eur_g32
12:00:43  39  ,eur_g33
12:00:43  40  ,eur_g34
12:00:43  41  ,eur_g35
12:00:43  42  ,eur_g36
12:00:43  43  ,eur_g37
12:00:43  44  ,eur_g38
12:00:43  45  ,eur_g39
12:00:43  46  ,eur_g40
12:00:43  47  ,eur_g41
12:00:43  48  ,aud_g00
12:00:43  49  ,aud_g01
12:00:43  50  ,aud_g02
12:00:43  51  ,aud_g03
12:00:43  52  ,aud_g04
12:00:43  53  ,aud_g05
12:00:43  54  ,aud_g06
12:00:43  55  ,aud_g07
12:00:43  56  ,aud_g08
12:00:43  57  ,aud_g09
12:00:43  58  ,aud_g10
12:00:43  59  ,aud_g11
12:00:43  60  ,aud_g12
12:00:43  61  ,aud_g13
12:00:43  62  ,aud_g14
12:00:43  63  ,aud_g15
12:00:43  64  ,aud_g16
12:00:43  65  ,aud_g17
12:00:43  66  ,aud_g18
12:00:43  67  ,aud_g19
12:00:43  68  ,aud_g20
12:00:43  69  ,aud_g21
12:00:43  70  ,aud_g22
12:00:43  71  ,aud_g23
12:00:43  72  ,aud_g24
12:00:43  73  ,aud_g25
12:00:43  74  ,aud_g26
12:00:43  75  ,aud_g27
12:00:43  76  ,aud_g28
12:00:43  77  ,aud_g29
12:00:43  78  ,aud_g30
12:00:43  79  ,aud_g31
12:00:43  80  ,aud_g32
12:00:43  81  ,aud_g33
12:00:43  82  ,aud_g34
12:00:43  83  ,aud_g35
12:00:43  84  ,aud_g36
12:00:43  85  ,aud_g37
12:00:43  86  ,aud_g38
12:00:43  87  ,aud_g39
12:00:43  88  ,aud_g40
12:00:43  89  ,aud_g41
12:00:43  90  ,gbp_g00
12:00:43  91  ,gbp_g01
12:00:43  92  ,gbp_g02
12:00:43  93  ,gbp_g03
12:00:43  94  ,gbp_g04
12:00:43  95  ,gbp_g05
12:00:43  96  ,gbp_g06
12:00:43  97  ,gbp_g07
12:00:43  98  ,gbp_g08
12:00:43  99  ,gbp_g09
12:00:43 100  ,gbp_g10
12:00:43 101  ,gbp_g11
12:00:43 102  ,gbp_g12
12:00:43 103  ,gbp_g13
12:00:43 104  ,gbp_g14
12:00:43 105  ,gbp_g15
12:00:43 106  ,gbp_g16
12:00:43 107  ,gbp_g17
12:00:43 108  ,gbp_g18
12:00:43 109  ,gbp_g19
12:00:43 110  ,gbp_g20
12:00:43 111  ,gbp_g21
12:00:43 112  ,gbp_g22
12:00:43 113  ,gbp_g23
12:00:43 114  ,gbp_g24
12:00:43 115  ,gbp_g25
12:00:43 116  ,gbp_g26
12:00:43 117  ,gbp_g27
12:00:43 118  ,gbp_g28
12:00:43 119  ,gbp_g29
12:00:43 120  ,gbp_g30
12:00:43 121  ,gbp_g31
12:00:43 122  ,gbp_g32
12:00:43 123  ,gbp_g33
12:00:43 124  ,gbp_g34
12:00:43 125  ,gbp_g35
12:00:43 126  ,gbp_g36
12:00:43 127  ,gbp_g37
12:00:43 128  ,gbp_g38
12:00:43 129  ,gbp_g39
12:00:43 130  ,gbp_g40
12:00:43 131  ,gbp_g41
12:00:43 132  ,jpy_g00
12:00:43 133  ,jpy_g01
12:00:43 134  ,jpy_g02
12:00:43 135  ,jpy_g03
12:00:43 136  ,jpy_g04
12:00:43 137  ,jpy_g05
12:00:43 138  ,jpy_g06
12:00:43 139  ,jpy_g07
12:00:43 140  ,jpy_g08
12:00:43 141  ,jpy_g09
12:00:43 142  ,jpy_g10
12:00:43 143  ,jpy_g11
12:00:43 144  ,jpy_g12
12:00:43 145  ,jpy_g13
12:00:43 146  ,jpy_g14
12:00:43 147  ,jpy_g15
12:00:43 148  ,jpy_g16
12:00:43 149  ,jpy_g17
12:00:43 150  ,jpy_g18
12:00:43 151  ,jpy_g19
12:00:43 152  ,jpy_g20
12:00:43 153  ,jpy_g21
12:00:43 154  ,jpy_g22
12:00:43 155  ,jpy_g23
12:00:43 156  ,jpy_g24
12:00:43 157  ,jpy_g25
12:00:43 158  ,jpy_g26
12:00:43 159  ,jpy_g27
12:00:43 160  ,jpy_g28
12:00:43 161  ,jpy_g29
12:00:43 162  ,jpy_g30
12:00:43 163  ,jpy_g31
12:00:43 164  ,jpy_g32
12:00:43 165  ,jpy_g33
12:00:43 166  ,jpy_g34
12:00:43 167  ,jpy_g35
12:00:43 168  ,jpy_g36
12:00:43 169  ,jpy_g37
12:00:43 170  ,jpy_g38
12:00:43 171  ,jpy_g39
12:00:43 172  ,jpy_g40
12:00:43 173  ,jpy_g41
12:00:43 174  ,cad_g00
12:00:43 175  ,cad_g01
12:00:43 176  ,cad_g02
12:00:43 177  ,cad_g03
12:00:43 178  ,cad_g04
12:00:43 179  ,cad_g05
12:00:43 180  ,cad_g06
12:00:43 181  ,cad_g07
12:00:43 182  ,cad_g08
12:00:43 183  ,cad_g09
12:00:43 184  ,cad_g10
12:00:43 185  ,cad_g11
12:00:43 186  ,cad_g12
12:00:43 187  ,cad_g13
12:00:43 188  ,cad_g14
12:00:43 189  ,cad_g15
12:00:43 190  ,cad_g16
12:00:43 191  ,cad_g17
12:00:43 192  ,cad_g18
12:00:43 193  ,cad_g19
12:00:43 194  ,cad_g20
12:00:43 195  ,cad_g21
12:00:43 196  ,cad_g22
12:00:43 197  ,cad_g23
12:00:43 198  ,cad_g24
12:00:43 199  ,cad_g25
12:00:43 200  ,cad_g26
12:00:43 201  ,cad_g27
12:00:43 202  ,cad_g28
12:00:43 203  ,cad_g29
12:00:43 204  ,cad_g30
12:00:43 205  ,cad_g31
12:00:43 206  ,cad_g32
12:00:43 207  ,cad_g33
12:00:43 208  ,cad_g34
12:00:43 209  ,cad_g35
12:00:43 210  ,cad_g36
12:00:43 211  ,cad_g37
12:00:43 212  ,cad_g38
12:00:43 213  ,cad_g39
12:00:43 214  ,cad_g40
12:00:43 215  ,cad_g41
12:00:43 216  ,chf_g00
12:00:43 217  ,chf_g01
12:00:43 218  ,chf_g02
12:00:43 219  ,chf_g03
12:00:43 220  ,chf_g04
12:00:43 221  ,chf_g05
12:00:43 222  ,chf_g06
12:00:43 223  ,chf_g07
12:00:43 224  ,chf_g08
12:00:43 225  ,chf_g09
12:00:43 226  ,chf_g10
12:00:43 227  ,chf_g11
12:00:43 228  ,chf_g12
12:00:43 229  ,chf_g13
12:00:43 230  ,chf_g14
12:00:43 231  ,chf_g15
12:00:43 232  ,chf_g16
12:00:43 233  ,chf_g17
12:00:43 234  ,chf_g18
12:00:43 235  ,chf_g19
12:00:43 236  ,chf_g20
12:00:43 237  ,chf_g21
12:00:43 238  ,chf_g22
12:00:43 239  ,chf_g23
12:00:43 240  ,chf_g24
12:00:43 241  ,chf_g25
12:00:43 242  ,chf_g26
12:00:43 243  ,chf_g27
12:00:43 244  ,chf_g28
12:00:43 245  ,chf_g29
12:00:43 246  ,chf_g30
12:00:43 247  ,chf_g31
12:00:43 248  ,chf_g32
12:00:43 249  ,chf_g33
12:00:43 250  ,chf_g34
12:00:43 251  ,chf_g35
12:00:43 252  ,chf_g36
12:00:43 253  ,chf_g37
12:00:43 254  ,chf_g38
12:00:43 255  ,chf_g39
12:00:43 256  ,chf_g40
12:00:43 257  ,chf_g41
12:00:43 258  FROM aud_ms6 m
12:00:43 259  WHERE gattn IN('nup','up')
12:00:43 260  AND 1+m.ydate < '&1'||' '||'&2'
12:00:43 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'11:35:00'

View created.

Elapsed: 00:00:00.13
12:00:43 SQL> 
12:00:43 SQL> -- rpt
12:00:43 SQL> 
12:00:43 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12784
up	     6298

Elapsed: 00:00:00.04
12:00:43 SQL> 
12:00:43 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 21:55:00

Elapsed: 00:00:00.03
12:00:43 SQL> 
12:00:43 SQL> -- Now build model from bme and score sme
12:00:43 SQL> @score1gattn.sql
12:00:43 SQL> -- score1gattn.sql
12:00:43 SQL> 
12:00:43 SQL> -- Does the 1st SVM score
12:00:43 SQL> 
12:00:43 SQL> -- Fill up svmc_apply_prep
12:00:43 SQL> @score_gattn.sql
12:00:43 SQL> --
12:00:43 SQL> -- score_gattn.sql
12:00:43 SQL> --
12:00:43 SQL> 
12:00:43 SQL> -- usage: score_gattn.sql
12:00:43 SQL> 
12:00:43 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
12:00:43 SQL> 
12:00:43 SQL> DEFINE target	= 'gattn'
12:00:43 SQL> DEFINE model_name = 'forex14'
12:00:43 SQL> DEFINE bldtable	= 'bme'
12:00:43 SQL> DEFINE scoretable = 'sme'
12:00:43 SQL> DEFINE case_id	= 'prdate'
12:00:43 SQL> 
12:00:43 SQL> -- Define a variable to help me exclude some columns from some data mining calls
12:00:43 SQL> DEFINE exclude1 = "'&target','&case_id'"
12:00:43 SQL> 
12:00:43 SQL> -- Builds an SVM model using pl/sql.
12:00:43 SQL> 
12:00:43 SQL> -----------------------------------------------------------------------
12:00:43 SQL> --			    BUILD THE MODEL
12:00:43 SQL> -----------------------------------------------------------------------
12:00:43 SQL> 
12:00:43 SQL> -- Cleanup old build data preparation objects for repeat runs
12:00:43 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
12:00:43 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
12:00:43 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
12:00:43 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
12:00:43 SQL> 
12:00:43 SQL> 
12:00:43 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
12:00:43 SQL> --
12:00:43 SQL> -- DROP	TABLE svmc_settings ;
12:00:43 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
12:00:43 SQL> -- DELETE svmc_settings;
12:00:43 SQL> 
12:00:43 SQL> -- The default classification algorithm is Naive Bayes. So override
12:00:43 SQL> -- this choice to SVM using a settings table.
12:00:43 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
12:00:43 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
12:00:43 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
12:00:43 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
12:00:43 SQL> -- models.
12:00:43 SQL> --
12:00:43 SQL> 
12:00:43 SQL> -- Do this once and then comment it out.
12:00:43 SQL> -- That makes script go faster.
12:00:43 SQL> -- BEGIN
12:00:43 SQL> -- -- Populate settings table
12:00:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:00:43 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
12:00:43 SQL> --
12:00:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:00:43 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
12:00:43 SQL> --
12:00:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:00:43 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
12:00:43 SQL> --   COMMIT;
12:00:43 SQL> -- END;
12:00:43 SQL> -- /
12:00:43 SQL> 
12:00:43 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
12:00:43 SQL> 
12:00:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
12:00:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:00:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
12:00:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
12:00:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:00:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
12:00:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
12:00:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:00:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.19
12:00:43 SQL> 
12:00:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
12:00:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:00:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
12:00:43 SQL> 
12:00:43 SQL> --------------------------------
12:00:43 SQL> -- PREPARE BUILD (TRAINING) DATA
12:00:43 SQL> --
12:00:43 SQL> 
12:00:43 SQL> -- 1. Missing Value treatment for all Predictors and
12:00:43 SQL> -- 2. Outlier Treatment and
12:00:43 SQL> -- 3. Normalization are performed below.
12:00:43 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
12:00:43 SQL> --    normalized here.
12:00:43 SQL> 
12:00:43 SQL> BEGIN
12:00:43   2  	-- Perform missing value treatment for all predictors
12:00:43   3  	-- create miss tables
12:00:43   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
12:00:43   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
12:00:43   6  
12:00:43   7  	-- populate miss tables
12:00:43   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
12:00:43   9  	  miss_table_name => 'svmc_miss_num',
12:00:43  10  	  data_table_name => '&bldtable',
12:00:43  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:00:43  12  
12:00:43  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
12:00:43  14  	  miss_table_name => 'svmc_miss_cat',
12:00:43  15  	  data_table_name => '&bldtable',
12:00:43  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:00:43  17  
12:00:43  18  	-- xform input data to replace missing values
12:00:43  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:00:43  20  	  miss_table_name => 'svmc_miss_num',
12:00:43  21  	  data_table_name => '&bldtable',
12:00:43  22  	  xform_view_name => 'xformed_build_miss_num');
12:00:43  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:00:43  24  	  miss_table_name => 'svmc_miss_cat',
12:00:43  25  	  data_table_name => '&bldtable',
12:00:43  26  	  xform_view_name => 'xformed_build_miss_cat');
12:00:43  27  
12:00:43  28  	-- Perform outlier treatment.
12:00:43  29  	-- create clip table
12:00:43  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
12:00:43  31  
12:00:43  32  	-- populate clip table
12:00:43  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
12:00:43  34  	  clip_table_name => 'svmc_clip',
12:00:43  35  	  data_table_name => '&bldtable',
12:00:43  36  	  tail_frac	  => 0.025,
12:00:43  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:00:43  38  
12:00:43  39  	-- xform input data to winsorized data
12:00:43  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
12:00:43  41  	  clip_table_name => 'svmc_clip',
12:00:43  42  	  data_table_name => '&bldtable',
12:00:43  43  	  xform_view_name => 'svmc_winsor');
12:00:43  44  
12:00:43  45  	-- create normalization table
12:00:43  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
12:00:43  47  
12:00:43  48  	-- populate normalization table based on winsorized data
12:00:43  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
12:00:43  50  	  norm_table_name => 'svmc_norm',
12:00:43  51  	  data_table_name => 'svmc_winsor',
12:00:43  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:00:43  53  
12:00:43  54  	-- normalize the original data
12:00:43  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:00:43  56  	  norm_table_name => 'svmc_norm',
12:00:43  57  	  data_table_name => '&bldtable',
12:00:43  58  	  xform_view_name => 'svmc_build_prep');
12:00:43  59  END;
12:00:43  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.65
12:01:02 SQL> 
12:01:02 SQL> ---------------------
12:01:02 SQL> -- CREATE A NEW MODEL
12:01:02 SQL> --
12:01:02 SQL> -- Cleanup old model with the same name for repeat runs
12:01:02 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
12:01:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:01:02   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.15
12:01:03 SQL> 
12:01:03 SQL> -- Build a new SVM Model
12:01:03 SQL> BEGIN
12:01:03   2  	DBMS_DATA_MINING.CREATE_MODEL(
12:01:03   3  	  model_name	      => '&model_name',
12:01:03   4  	  mining_function     => dbms_data_mining.classification,
12:01:03   5  	  data_table_name     => 'svmc_build_prep',
12:01:03   6  	  case_id_column_name => '&case_id',
12:01:03   7  	  target_column_name  => '&target',
12:01:03   8  	  settings_table_name => 'svmc_settings');
12:01:03   9  END;
12:01:03  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.15
12:01:30 SQL> 
12:01:30 SQL> -----------------------------------------------------------------------
12:01:30 SQL> --			       APPLY/score THE MODEL
12:01:30 SQL> -----------------------------------------------------------------------
12:01:30 SQL> 
12:01:30 SQL> -- Cleanup old scoring data preparation objects for repeat runs
12:01:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
12:01:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:01:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
12:01:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
12:01:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:01:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
12:01:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
12:01:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:01:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:01:31 SQL> -----------------------
12:01:31 SQL> -- PREPARE SCORING DATA
12:01:31 SQL> --
12:01:31 SQL> -- If the data for model creation has been prepared, then the data
12:01:31 SQL> -- to be scored using the model must be prepared in the same manner
12:01:31 SQL> -- in order to obtain meaningful results.
12:01:31 SQL> --
12:01:31 SQL> -- 1. Missing Value treatment for all Predictors and
12:01:31 SQL> -- 2. Normalization
12:01:31 SQL> -- No outlier treatment will be performed during test and apply. The
12:01:31 SQL> -- normalization step is sufficient, since the normalization parameters
12:01:31 SQL> -- already capture the effects of outlier treatment done with build data.
12:01:31 SQL> --
12:01:31 SQL> BEGIN
12:01:31   2  	-- Xform Test data to replace missing values
12:01:31   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:01:31   4  	  miss_table_name => 'svmc_miss_num',
12:01:31   5  	  data_table_name => '&scoretable',
12:01:31   6  	  xform_view_name => 'xformed_apply_miss_num');
12:01:31   7  
12:01:31   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:01:31   9  	  miss_table_name => 'svmc_miss_cat',
12:01:31  10  	  data_table_name => '&scoretable',
12:01:31  11  	  xform_view_name => 'xformed_apply_miss_cat');
12:01:31  12  
12:01:31  13  	-- Normalize the data to be scored
12:01:31  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:01:31  15  	  norm_table_name => 'svmc_norm',
12:01:31  16  	  data_table_name => '&scoretable',
12:01:31  17  	  xform_view_name => 'svmc_apply_prep');
12:01:31  18  END;
12:01:31  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.14
12:01:32 SQL> 
12:01:32 SQL> -- Use same model_name used in score_gattn.sql
12:01:32 SQL> DEFINE model_name = 'forex14'
12:01:32 SQL> 
12:01:32 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
12:01:32 SQL> 
12:01:32 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
12:01:32   2  SELECT
12:01:32   3  prdate
12:01:32   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
12:01:32   5  ,sysdate
12:01:32   6  ,SUBSTR(prdate,1,3)pair
12:01:32   7  ,SUBSTR(prdate,4,19)ydate
12:01:32   8  FROM svmc_apply_prep
12:01:32   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.19
12:01:32 SQL> @aud_score1day_gattn.sql	2011-01-03 11:40:00
12:01:32 SQL> --
12:01:32 SQL> -- aud_score1day_gattn.sql
12:01:32 SQL> --
12:01:32 SQL> 
12:01:32 SQL> CREATE OR REPLACE VIEW sme AS
12:01:32   2  SELECT
12:01:32   3  'aud'||m.ydate prdate
12:01:32   4  ,NULL gattn
12:01:32   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:01:32   6  ,eur_g00
12:01:32   7  ,eur_g01
12:01:32   8  ,eur_g02
12:01:32   9  ,eur_g03
12:01:32  10  ,eur_g04
12:01:32  11  ,eur_g05
12:01:32  12  ,eur_g06
12:01:32  13  ,eur_g07
12:01:32  14  ,eur_g08
12:01:32  15  ,eur_g09
12:01:32  16  ,eur_g10
12:01:32  17  ,eur_g11
12:01:32  18  ,eur_g12
12:01:32  19  ,eur_g13
12:01:32  20  ,eur_g14
12:01:32  21  ,eur_g15
12:01:32  22  ,eur_g16
12:01:32  23  ,eur_g17
12:01:32  24  ,eur_g18
12:01:32  25  ,eur_g19
12:01:32  26  ,eur_g20
12:01:32  27  ,eur_g21
12:01:32  28  ,eur_g22
12:01:32  29  ,eur_g23
12:01:32  30  ,eur_g24
12:01:32  31  ,eur_g25
12:01:32  32  ,eur_g26
12:01:32  33  ,eur_g27
12:01:32  34  ,eur_g28
12:01:32  35  ,eur_g29
12:01:32  36  ,eur_g30
12:01:32  37  ,eur_g31
12:01:32  38  ,eur_g32
12:01:32  39  ,eur_g33
12:01:32  40  ,eur_g34
12:01:32  41  ,eur_g35
12:01:32  42  ,eur_g36
12:01:32  43  ,eur_g37
12:01:32  44  ,eur_g38
12:01:32  45  ,eur_g39
12:01:32  46  ,eur_g40
12:01:32  47  ,eur_g41
12:01:32  48  ,aud_g00
12:01:32  49  ,aud_g01
12:01:32  50  ,aud_g02
12:01:32  51  ,aud_g03
12:01:32  52  ,aud_g04
12:01:32  53  ,aud_g05
12:01:32  54  ,aud_g06
12:01:32  55  ,aud_g07
12:01:32  56  ,aud_g08
12:01:32  57  ,aud_g09
12:01:32  58  ,aud_g10
12:01:32  59  ,aud_g11
12:01:32  60  ,aud_g12
12:01:32  61  ,aud_g13
12:01:32  62  ,aud_g14
12:01:32  63  ,aud_g15
12:01:32  64  ,aud_g16
12:01:32  65  ,aud_g17
12:01:32  66  ,aud_g18
12:01:32  67  ,aud_g19
12:01:32  68  ,aud_g20
12:01:32  69  ,aud_g21
12:01:32  70  ,aud_g22
12:01:32  71  ,aud_g23
12:01:32  72  ,aud_g24
12:01:32  73  ,aud_g25
12:01:32  74  ,aud_g26
12:01:32  75  ,aud_g27
12:01:32  76  ,aud_g28
12:01:32  77  ,aud_g29
12:01:32  78  ,aud_g30
12:01:32  79  ,aud_g31
12:01:32  80  ,aud_g32
12:01:32  81  ,aud_g33
12:01:32  82  ,aud_g34
12:01:32  83  ,aud_g35
12:01:32  84  ,aud_g36
12:01:32  85  ,aud_g37
12:01:32  86  ,aud_g38
12:01:32  87  ,aud_g39
12:01:32  88  ,aud_g40
12:01:32  89  ,aud_g41
12:01:32  90  ,gbp_g00
12:01:32  91  ,gbp_g01
12:01:32  92  ,gbp_g02
12:01:32  93  ,gbp_g03
12:01:32  94  ,gbp_g04
12:01:32  95  ,gbp_g05
12:01:32  96  ,gbp_g06
12:01:32  97  ,gbp_g07
12:01:32  98  ,gbp_g08
12:01:32  99  ,gbp_g09
12:01:32 100  ,gbp_g10
12:01:32 101  ,gbp_g11
12:01:32 102  ,gbp_g12
12:01:32 103  ,gbp_g13
12:01:32 104  ,gbp_g14
12:01:32 105  ,gbp_g15
12:01:32 106  ,gbp_g16
12:01:32 107  ,gbp_g17
12:01:32 108  ,gbp_g18
12:01:32 109  ,gbp_g19
12:01:32 110  ,gbp_g20
12:01:32 111  ,gbp_g21
12:01:32 112  ,gbp_g22
12:01:32 113  ,gbp_g23
12:01:32 114  ,gbp_g24
12:01:32 115  ,gbp_g25
12:01:32 116  ,gbp_g26
12:01:32 117  ,gbp_g27
12:01:32 118  ,gbp_g28
12:01:32 119  ,gbp_g29
12:01:32 120  ,gbp_g30
12:01:32 121  ,gbp_g31
12:01:32 122  ,gbp_g32
12:01:32 123  ,gbp_g33
12:01:32 124  ,gbp_g34
12:01:32 125  ,gbp_g35
12:01:32 126  ,gbp_g36
12:01:32 127  ,gbp_g37
12:01:32 128  ,gbp_g38
12:01:32 129  ,gbp_g39
12:01:32 130  ,gbp_g40
12:01:32 131  ,gbp_g41
12:01:32 132  ,jpy_g00
12:01:32 133  ,jpy_g01
12:01:32 134  ,jpy_g02
12:01:32 135  ,jpy_g03
12:01:32 136  ,jpy_g04
12:01:32 137  ,jpy_g05
12:01:32 138  ,jpy_g06
12:01:32 139  ,jpy_g07
12:01:32 140  ,jpy_g08
12:01:32 141  ,jpy_g09
12:01:32 142  ,jpy_g10
12:01:32 143  ,jpy_g11
12:01:32 144  ,jpy_g12
12:01:32 145  ,jpy_g13
12:01:32 146  ,jpy_g14
12:01:32 147  ,jpy_g15
12:01:32 148  ,jpy_g16
12:01:32 149  ,jpy_g17
12:01:32 150  ,jpy_g18
12:01:32 151  ,jpy_g19
12:01:32 152  ,jpy_g20
12:01:32 153  ,jpy_g21
12:01:32 154  ,jpy_g22
12:01:32 155  ,jpy_g23
12:01:32 156  ,jpy_g24
12:01:32 157  ,jpy_g25
12:01:32 158  ,jpy_g26
12:01:32 159  ,jpy_g27
12:01:32 160  ,jpy_g28
12:01:32 161  ,jpy_g29
12:01:32 162  ,jpy_g30
12:01:32 163  ,jpy_g31
12:01:32 164  ,jpy_g32
12:01:32 165  ,jpy_g33
12:01:32 166  ,jpy_g34
12:01:32 167  ,jpy_g35
12:01:32 168  ,jpy_g36
12:01:32 169  ,jpy_g37
12:01:32 170  ,jpy_g38
12:01:32 171  ,jpy_g39
12:01:32 172  ,jpy_g40
12:01:32 173  ,jpy_g41
12:01:32 174  ,cad_g00
12:01:32 175  ,cad_g01
12:01:32 176  ,cad_g02
12:01:32 177  ,cad_g03
12:01:32 178  ,cad_g04
12:01:32 179  ,cad_g05
12:01:32 180  ,cad_g06
12:01:32 181  ,cad_g07
12:01:32 182  ,cad_g08
12:01:32 183  ,cad_g09
12:01:32 184  ,cad_g10
12:01:32 185  ,cad_g11
12:01:32 186  ,cad_g12
12:01:32 187  ,cad_g13
12:01:32 188  ,cad_g14
12:01:32 189  ,cad_g15
12:01:32 190  ,cad_g16
12:01:32 191  ,cad_g17
12:01:32 192  ,cad_g18
12:01:32 193  ,cad_g19
12:01:32 194  ,cad_g20
12:01:32 195  ,cad_g21
12:01:32 196  ,cad_g22
12:01:32 197  ,cad_g23
12:01:32 198  ,cad_g24
12:01:32 199  ,cad_g25
12:01:32 200  ,cad_g26
12:01:32 201  ,cad_g27
12:01:32 202  ,cad_g28
12:01:32 203  ,cad_g29
12:01:32 204  ,cad_g30
12:01:32 205  ,cad_g31
12:01:32 206  ,cad_g32
12:01:32 207  ,cad_g33
12:01:32 208  ,cad_g34
12:01:32 209  ,cad_g35
12:01:32 210  ,cad_g36
12:01:32 211  ,cad_g37
12:01:32 212  ,cad_g38
12:01:32 213  ,cad_g39
12:01:32 214  ,cad_g40
12:01:32 215  ,cad_g41
12:01:32 216  ,chf_g00
12:01:32 217  ,chf_g01
12:01:32 218  ,chf_g02
12:01:32 219  ,chf_g03
12:01:32 220  ,chf_g04
12:01:32 221  ,chf_g05
12:01:32 222  ,chf_g06
12:01:32 223  ,chf_g07
12:01:32 224  ,chf_g08
12:01:32 225  ,chf_g09
12:01:32 226  ,chf_g10
12:01:32 227  ,chf_g11
12:01:32 228  ,chf_g12
12:01:32 229  ,chf_g13
12:01:32 230  ,chf_g14
12:01:32 231  ,chf_g15
12:01:32 232  ,chf_g16
12:01:32 233  ,chf_g17
12:01:32 234  ,chf_g18
12:01:32 235  ,chf_g19
12:01:32 236  ,chf_g20
12:01:32 237  ,chf_g21
12:01:32 238  ,chf_g22
12:01:32 239  ,chf_g23
12:01:32 240  ,chf_g24
12:01:32 241  ,chf_g25
12:01:32 242  ,chf_g26
12:01:32 243  ,chf_g27
12:01:32 244  ,chf_g28
12:01:32 245  ,chf_g29
12:01:32 246  ,chf_g30
12:01:32 247  ,chf_g31
12:01:32 248  ,chf_g32
12:01:32 249  ,chf_g33
12:01:32 250  ,chf_g34
12:01:32 251  ,chf_g35
12:01:32 252  ,chf_g36
12:01:32 253  ,chf_g37
12:01:32 254  ,chf_g38
12:01:32 255  ,chf_g39
12:01:32 256  ,chf_g40
12:01:32 257  ,chf_g41
12:01:32 258  FROM aud_ms6 m
12:01:32 259  WHERE m.ydate = '&1'||' '||'&2'
12:01:32 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'11:40:00'

View created.

Elapsed: 00:00:00.13
12:01:32 SQL> 
12:01:32 SQL> -- rpt
12:01:32 SQL> -- We should see just 1 row:
12:01:32 SQL> 
12:01:32 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
12:01:32 SQL> 
12:01:32 SQL> -- Build the model:
12:01:32 SQL> CREATE OR REPLACE VIEW bme AS
12:01:32   2  SELECT
12:01:32   3  'aud'||m.ydate prdate
12:01:32   4  ,gattn
12:01:32   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:01:32   6  ,eur_g00
12:01:32   7  ,eur_g01
12:01:32   8  ,eur_g02
12:01:32   9  ,eur_g03
12:01:32  10  ,eur_g04
12:01:32  11  ,eur_g05
12:01:32  12  ,eur_g06
12:01:32  13  ,eur_g07
12:01:32  14  ,eur_g08
12:01:32  15  ,eur_g09
12:01:32  16  ,eur_g10
12:01:32  17  ,eur_g11
12:01:32  18  ,eur_g12
12:01:32  19  ,eur_g13
12:01:32  20  ,eur_g14
12:01:32  21  ,eur_g15
12:01:32  22  ,eur_g16
12:01:32  23  ,eur_g17
12:01:32  24  ,eur_g18
12:01:32  25  ,eur_g19
12:01:32  26  ,eur_g20
12:01:32  27  ,eur_g21
12:01:32  28  ,eur_g22
12:01:32  29  ,eur_g23
12:01:32  30  ,eur_g24
12:01:32  31  ,eur_g25
12:01:32  32  ,eur_g26
12:01:32  33  ,eur_g27
12:01:32  34  ,eur_g28
12:01:32  35  ,eur_g29
12:01:32  36  ,eur_g30
12:01:32  37  ,eur_g31
12:01:32  38  ,eur_g32
12:01:32  39  ,eur_g33
12:01:32  40  ,eur_g34
12:01:32  41  ,eur_g35
12:01:32  42  ,eur_g36
12:01:32  43  ,eur_g37
12:01:32  44  ,eur_g38
12:01:32  45  ,eur_g39
12:01:32  46  ,eur_g40
12:01:32  47  ,eur_g41
12:01:32  48  ,aud_g00
12:01:32  49  ,aud_g01
12:01:32  50  ,aud_g02
12:01:32  51  ,aud_g03
12:01:32  52  ,aud_g04
12:01:32  53  ,aud_g05
12:01:32  54  ,aud_g06
12:01:32  55  ,aud_g07
12:01:32  56  ,aud_g08
12:01:32  57  ,aud_g09
12:01:32  58  ,aud_g10
12:01:32  59  ,aud_g11
12:01:32  60  ,aud_g12
12:01:32  61  ,aud_g13
12:01:32  62  ,aud_g14
12:01:32  63  ,aud_g15
12:01:32  64  ,aud_g16
12:01:32  65  ,aud_g17
12:01:32  66  ,aud_g18
12:01:32  67  ,aud_g19
12:01:32  68  ,aud_g20
12:01:32  69  ,aud_g21
12:01:32  70  ,aud_g22
12:01:32  71  ,aud_g23
12:01:32  72  ,aud_g24
12:01:32  73  ,aud_g25
12:01:32  74  ,aud_g26
12:01:32  75  ,aud_g27
12:01:32  76  ,aud_g28
12:01:32  77  ,aud_g29
12:01:32  78  ,aud_g30
12:01:32  79  ,aud_g31
12:01:32  80  ,aud_g32
12:01:32  81  ,aud_g33
12:01:32  82  ,aud_g34
12:01:32  83  ,aud_g35
12:01:32  84  ,aud_g36
12:01:32  85  ,aud_g37
12:01:32  86  ,aud_g38
12:01:32  87  ,aud_g39
12:01:32  88  ,aud_g40
12:01:32  89  ,aud_g41
12:01:32  90  ,gbp_g00
12:01:32  91  ,gbp_g01
12:01:32  92  ,gbp_g02
12:01:32  93  ,gbp_g03
12:01:32  94  ,gbp_g04
12:01:32  95  ,gbp_g05
12:01:32  96  ,gbp_g06
12:01:32  97  ,gbp_g07
12:01:32  98  ,gbp_g08
12:01:32  99  ,gbp_g09
12:01:32 100  ,gbp_g10
12:01:32 101  ,gbp_g11
12:01:32 102  ,gbp_g12
12:01:32 103  ,gbp_g13
12:01:32 104  ,gbp_g14
12:01:32 105  ,gbp_g15
12:01:32 106  ,gbp_g16
12:01:32 107  ,gbp_g17
12:01:32 108  ,gbp_g18
12:01:32 109  ,gbp_g19
12:01:32 110  ,gbp_g20
12:01:32 111  ,gbp_g21
12:01:32 112  ,gbp_g22
12:01:32 113  ,gbp_g23
12:01:32 114  ,gbp_g24
12:01:32 115  ,gbp_g25
12:01:32 116  ,gbp_g26
12:01:32 117  ,gbp_g27
12:01:32 118  ,gbp_g28
12:01:32 119  ,gbp_g29
12:01:32 120  ,gbp_g30
12:01:32 121  ,gbp_g31
12:01:32 122  ,gbp_g32
12:01:32 123  ,gbp_g33
12:01:32 124  ,gbp_g34
12:01:32 125  ,gbp_g35
12:01:32 126  ,gbp_g36
12:01:32 127  ,gbp_g37
12:01:32 128  ,gbp_g38
12:01:32 129  ,gbp_g39
12:01:32 130  ,gbp_g40
12:01:32 131  ,gbp_g41
12:01:32 132  ,jpy_g00
12:01:32 133  ,jpy_g01
12:01:32 134  ,jpy_g02
12:01:32 135  ,jpy_g03
12:01:32 136  ,jpy_g04
12:01:32 137  ,jpy_g05
12:01:32 138  ,jpy_g06
12:01:32 139  ,jpy_g07
12:01:32 140  ,jpy_g08
12:01:32 141  ,jpy_g09
12:01:32 142  ,jpy_g10
12:01:32 143  ,jpy_g11
12:01:32 144  ,jpy_g12
12:01:32 145  ,jpy_g13
12:01:32 146  ,jpy_g14
12:01:32 147  ,jpy_g15
12:01:32 148  ,jpy_g16
12:01:32 149  ,jpy_g17
12:01:32 150  ,jpy_g18
12:01:32 151  ,jpy_g19
12:01:32 152  ,jpy_g20
12:01:32 153  ,jpy_g21
12:01:32 154  ,jpy_g22
12:01:32 155  ,jpy_g23
12:01:32 156  ,jpy_g24
12:01:32 157  ,jpy_g25
12:01:32 158  ,jpy_g26
12:01:32 159  ,jpy_g27
12:01:32 160  ,jpy_g28
12:01:32 161  ,jpy_g29
12:01:32 162  ,jpy_g30
12:01:32 163  ,jpy_g31
12:01:32 164  ,jpy_g32
12:01:32 165  ,jpy_g33
12:01:32 166  ,jpy_g34
12:01:32 167  ,jpy_g35
12:01:32 168  ,jpy_g36
12:01:32 169  ,jpy_g37
12:01:32 170  ,jpy_g38
12:01:32 171  ,jpy_g39
12:01:32 172  ,jpy_g40
12:01:32 173  ,jpy_g41
12:01:32 174  ,cad_g00
12:01:32 175  ,cad_g01
12:01:32 176  ,cad_g02
12:01:32 177  ,cad_g03
12:01:32 178  ,cad_g04
12:01:32 179  ,cad_g05
12:01:32 180  ,cad_g06
12:01:32 181  ,cad_g07
12:01:32 182  ,cad_g08
12:01:32 183  ,cad_g09
12:01:32 184  ,cad_g10
12:01:32 185  ,cad_g11
12:01:32 186  ,cad_g12
12:01:32 187  ,cad_g13
12:01:32 188  ,cad_g14
12:01:32 189  ,cad_g15
12:01:32 190  ,cad_g16
12:01:32 191  ,cad_g17
12:01:32 192  ,cad_g18
12:01:32 193  ,cad_g19
12:01:32 194  ,cad_g20
12:01:32 195  ,cad_g21
12:01:32 196  ,cad_g22
12:01:32 197  ,cad_g23
12:01:32 198  ,cad_g24
12:01:32 199  ,cad_g25
12:01:32 200  ,cad_g26
12:01:32 201  ,cad_g27
12:01:32 202  ,cad_g28
12:01:32 203  ,cad_g29
12:01:32 204  ,cad_g30
12:01:32 205  ,cad_g31
12:01:32 206  ,cad_g32
12:01:32 207  ,cad_g33
12:01:32 208  ,cad_g34
12:01:32 209  ,cad_g35
12:01:32 210  ,cad_g36
12:01:32 211  ,cad_g37
12:01:32 212  ,cad_g38
12:01:32 213  ,cad_g39
12:01:32 214  ,cad_g40
12:01:32 215  ,cad_g41
12:01:32 216  ,chf_g00
12:01:32 217  ,chf_g01
12:01:32 218  ,chf_g02
12:01:32 219  ,chf_g03
12:01:32 220  ,chf_g04
12:01:32 221  ,chf_g05
12:01:32 222  ,chf_g06
12:01:32 223  ,chf_g07
12:01:32 224  ,chf_g08
12:01:32 225  ,chf_g09
12:01:32 226  ,chf_g10
12:01:32 227  ,chf_g11
12:01:32 228  ,chf_g12
12:01:32 229  ,chf_g13
12:01:32 230  ,chf_g14
12:01:32 231  ,chf_g15
12:01:32 232  ,chf_g16
12:01:32 233  ,chf_g17
12:01:32 234  ,chf_g18
12:01:32 235  ,chf_g19
12:01:32 236  ,chf_g20
12:01:32 237  ,chf_g21
12:01:32 238  ,chf_g22
12:01:32 239  ,chf_g23
12:01:32 240  ,chf_g24
12:01:32 241  ,chf_g25
12:01:32 242  ,chf_g26
12:01:32 243  ,chf_g27
12:01:32 244  ,chf_g28
12:01:32 245  ,chf_g29
12:01:32 246  ,chf_g30
12:01:32 247  ,chf_g31
12:01:32 248  ,chf_g32
12:01:32 249  ,chf_g33
12:01:32 250  ,chf_g34
12:01:32 251  ,chf_g35
12:01:32 252  ,chf_g36
12:01:32 253  ,chf_g37
12:01:32 254  ,chf_g38
12:01:32 255  ,chf_g39
12:01:32 256  ,chf_g40
12:01:32 257  ,chf_g41
12:01:32 258  FROM aud_ms6 m
12:01:32 259  WHERE gattn IN('nup','up')
12:01:32 260  AND 1+m.ydate < '&1'||' '||'&2'
12:01:32 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'11:40:00'

View created.

Elapsed: 00:00:00.11
12:01:32 SQL> 
12:01:32 SQL> -- rpt
12:01:32 SQL> 
12:01:32 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12784
up	     6298

Elapsed: 00:00:00.04
12:01:32 SQL> 
12:01:32 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 21:55:00

Elapsed: 00:00:00.03
12:01:32 SQL> 
12:01:32 SQL> -- Now build model from bme and score sme
12:01:32 SQL> @score1gattn.sql
12:01:32 SQL> -- score1gattn.sql
12:01:32 SQL> 
12:01:32 SQL> -- Does the 1st SVM score
12:01:32 SQL> 
12:01:32 SQL> -- Fill up svmc_apply_prep
12:01:32 SQL> @score_gattn.sql
12:01:32 SQL> --
12:01:32 SQL> -- score_gattn.sql
12:01:32 SQL> --
12:01:32 SQL> 
12:01:32 SQL> -- usage: score_gattn.sql
12:01:32 SQL> 
12:01:32 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
12:01:32 SQL> 
12:01:32 SQL> DEFINE target	= 'gattn'
12:01:32 SQL> DEFINE model_name = 'forex14'
12:01:32 SQL> DEFINE bldtable	= 'bme'
12:01:32 SQL> DEFINE scoretable = 'sme'
12:01:32 SQL> DEFINE case_id	= 'prdate'
12:01:32 SQL> 
12:01:32 SQL> -- Define a variable to help me exclude some columns from some data mining calls
12:01:32 SQL> DEFINE exclude1 = "'&target','&case_id'"
12:01:32 SQL> 
12:01:32 SQL> -- Builds an SVM model using pl/sql.
12:01:32 SQL> 
12:01:32 SQL> -----------------------------------------------------------------------
12:01:32 SQL> --			    BUILD THE MODEL
12:01:32 SQL> -----------------------------------------------------------------------
12:01:32 SQL> 
12:01:32 SQL> -- Cleanup old build data preparation objects for repeat runs
12:01:32 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
12:01:32 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
12:01:32 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
12:01:32 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
12:01:32 SQL> 
12:01:32 SQL> 
12:01:32 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
12:01:32 SQL> --
12:01:32 SQL> -- DROP	TABLE svmc_settings ;
12:01:32 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
12:01:32 SQL> -- DELETE svmc_settings;
12:01:32 SQL> 
12:01:32 SQL> -- The default classification algorithm is Naive Bayes. So override
12:01:32 SQL> -- this choice to SVM using a settings table.
12:01:32 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
12:01:32 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
12:01:32 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
12:01:32 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
12:01:32 SQL> -- models.
12:01:32 SQL> --
12:01:32 SQL> 
12:01:32 SQL> -- Do this once and then comment it out.
12:01:32 SQL> -- That makes script go faster.
12:01:32 SQL> -- BEGIN
12:01:32 SQL> -- -- Populate settings table
12:01:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:01:32 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
12:01:32 SQL> --
12:01:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:01:32 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
12:01:32 SQL> --
12:01:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:01:32 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
12:01:32 SQL> --   COMMIT;
12:01:32 SQL> -- END;
12:01:32 SQL> -- /
12:01:32 SQL> 
12:01:32 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
12:01:32 SQL> 
12:01:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
12:01:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:01:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:01:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
12:01:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:01:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:01:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
12:01:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:01:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:01:32 SQL> 
12:01:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
12:01:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:01:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
12:01:33 SQL> 
12:01:33 SQL> --------------------------------
12:01:33 SQL> -- PREPARE BUILD (TRAINING) DATA
12:01:33 SQL> --
12:01:33 SQL> 
12:01:33 SQL> -- 1. Missing Value treatment for all Predictors and
12:01:33 SQL> -- 2. Outlier Treatment and
12:01:33 SQL> -- 3. Normalization are performed below.
12:01:33 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
12:01:33 SQL> --    normalized here.
12:01:33 SQL> 
12:01:33 SQL> BEGIN
12:01:33   2  	-- Perform missing value treatment for all predictors
12:01:33   3  	-- create miss tables
12:01:33   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
12:01:33   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
12:01:33   6  
12:01:33   7  	-- populate miss tables
12:01:33   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
12:01:33   9  	  miss_table_name => 'svmc_miss_num',
12:01:33  10  	  data_table_name => '&bldtable',
12:01:33  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:01:33  12  
12:01:33  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
12:01:33  14  	  miss_table_name => 'svmc_miss_cat',
12:01:33  15  	  data_table_name => '&bldtable',
12:01:33  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:01:33  17  
12:01:33  18  	-- xform input data to replace missing values
12:01:33  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:01:33  20  	  miss_table_name => 'svmc_miss_num',
12:01:33  21  	  data_table_name => '&bldtable',
12:01:33  22  	  xform_view_name => 'xformed_build_miss_num');
12:01:33  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:01:33  24  	  miss_table_name => 'svmc_miss_cat',
12:01:33  25  	  data_table_name => '&bldtable',
12:01:33  26  	  xform_view_name => 'xformed_build_miss_cat');
12:01:33  27  
12:01:33  28  	-- Perform outlier treatment.
12:01:33  29  	-- create clip table
12:01:33  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
12:01:33  31  
12:01:33  32  	-- populate clip table
12:01:33  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
12:01:33  34  	  clip_table_name => 'svmc_clip',
12:01:33  35  	  data_table_name => '&bldtable',
12:01:33  36  	  tail_frac	  => 0.025,
12:01:33  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:01:33  38  
12:01:33  39  	-- xform input data to winsorized data
12:01:33  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
12:01:33  41  	  clip_table_name => 'svmc_clip',
12:01:33  42  	  data_table_name => '&bldtable',
12:01:33  43  	  xform_view_name => 'svmc_winsor');
12:01:33  44  
12:01:33  45  	-- create normalization table
12:01:33  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
12:01:33  47  
12:01:33  48  	-- populate normalization table based on winsorized data
12:01:33  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
12:01:33  50  	  norm_table_name => 'svmc_norm',
12:01:33  51  	  data_table_name => 'svmc_winsor',
12:01:33  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:01:33  53  
12:01:33  54  	-- normalize the original data
12:01:33  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:01:33  56  	  norm_table_name => 'svmc_norm',
12:01:33  57  	  data_table_name => '&bldtable',
12:01:33  58  	  xform_view_name => 'svmc_build_prep');
12:01:33  59  END;
12:01:33  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.09
12:01:51 SQL> 
12:01:51 SQL> ---------------------
12:01:51 SQL> -- CREATE A NEW MODEL
12:01:51 SQL> --
12:01:51 SQL> -- Cleanup old model with the same name for repeat runs
12:01:51 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
12:01:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:01:51   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.04
12:01:52 SQL> 
12:01:52 SQL> -- Build a new SVM Model
12:01:52 SQL> BEGIN
12:01:52   2  	DBMS_DATA_MINING.CREATE_MODEL(
12:01:52   3  	  model_name	      => '&model_name',
12:01:52   4  	  mining_function     => dbms_data_mining.classification,
12:01:52   5  	  data_table_name     => 'svmc_build_prep',
12:01:52   6  	  case_id_column_name => '&case_id',
12:01:52   7  	  target_column_name  => '&target',
12:01:52   8  	  settings_table_name => 'svmc_settings');
12:01:52   9  END;
12:01:52  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:30.09
12:02:22 SQL> 
12:02:22 SQL> -----------------------------------------------------------------------
12:02:22 SQL> --			       APPLY/score THE MODEL
12:02:22 SQL> -----------------------------------------------------------------------
12:02:22 SQL> 
12:02:22 SQL> -- Cleanup old scoring data preparation objects for repeat runs
12:02:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
12:02:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:02:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:02:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
12:02:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:02:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:02:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
12:02:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:02:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
12:02:22 SQL> -----------------------
12:02:22 SQL> -- PREPARE SCORING DATA
12:02:22 SQL> --
12:02:22 SQL> -- If the data for model creation has been prepared, then the data
12:02:22 SQL> -- to be scored using the model must be prepared in the same manner
12:02:22 SQL> -- in order to obtain meaningful results.
12:02:22 SQL> --
12:02:22 SQL> -- 1. Missing Value treatment for all Predictors and
12:02:22 SQL> -- 2. Normalization
12:02:22 SQL> -- No outlier treatment will be performed during test and apply. The
12:02:22 SQL> -- normalization step is sufficient, since the normalization parameters
12:02:22 SQL> -- already capture the effects of outlier treatment done with build data.
12:02:22 SQL> --
12:02:22 SQL> BEGIN
12:02:22   2  	-- Xform Test data to replace missing values
12:02:22   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:02:22   4  	  miss_table_name => 'svmc_miss_num',
12:02:22   5  	  data_table_name => '&scoretable',
12:02:22   6  	  xform_view_name => 'xformed_apply_miss_num');
12:02:22   7  
12:02:22   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:02:22   9  	  miss_table_name => 'svmc_miss_cat',
12:02:22  10  	  data_table_name => '&scoretable',
12:02:22  11  	  xform_view_name => 'xformed_apply_miss_cat');
12:02:22  12  
12:02:22  13  	-- Normalize the data to be scored
12:02:22  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:02:22  15  	  norm_table_name => 'svmc_norm',
12:02:22  16  	  data_table_name => '&scoretable',
12:02:22  17  	  xform_view_name => 'svmc_apply_prep');
12:02:22  18  END;
12:02:22  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.34
12:02:23 SQL> 
12:02:23 SQL> -- Use same model_name used in score_gattn.sql
12:02:23 SQL> DEFINE model_name = 'forex14'
12:02:23 SQL> 
12:02:23 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
12:02:23 SQL> 
12:02:23 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
12:02:23   2  SELECT
12:02:23   3  prdate
12:02:23   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
12:02:23   5  ,sysdate
12:02:23   6  ,SUBSTR(prdate,1,3)pair
12:02:23   7  ,SUBSTR(prdate,4,19)ydate
12:02:23   8  FROM svmc_apply_prep
12:02:23   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
12:02:24 SQL> @aud_score1day_gattn.sql	2011-01-03 11:45:00
12:02:24 SQL> --
12:02:24 SQL> -- aud_score1day_gattn.sql
12:02:24 SQL> --
12:02:24 SQL> 
12:02:24 SQL> CREATE OR REPLACE VIEW sme AS
12:02:24   2  SELECT
12:02:24   3  'aud'||m.ydate prdate
12:02:24   4  ,NULL gattn
12:02:24   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:02:24   6  ,eur_g00
12:02:24   7  ,eur_g01
12:02:24   8  ,eur_g02
12:02:24   9  ,eur_g03
12:02:24  10  ,eur_g04
12:02:24  11  ,eur_g05
12:02:24  12  ,eur_g06
12:02:24  13  ,eur_g07
12:02:24  14  ,eur_g08
12:02:24  15  ,eur_g09
12:02:24  16  ,eur_g10
12:02:24  17  ,eur_g11
12:02:24  18  ,eur_g12
12:02:24  19  ,eur_g13
12:02:24  20  ,eur_g14
12:02:24  21  ,eur_g15
12:02:24  22  ,eur_g16
12:02:24  23  ,eur_g17
12:02:24  24  ,eur_g18
12:02:24  25  ,eur_g19
12:02:24  26  ,eur_g20
12:02:24  27  ,eur_g21
12:02:24  28  ,eur_g22
12:02:24  29  ,eur_g23
12:02:24  30  ,eur_g24
12:02:24  31  ,eur_g25
12:02:24  32  ,eur_g26
12:02:24  33  ,eur_g27
12:02:24  34  ,eur_g28
12:02:24  35  ,eur_g29
12:02:24  36  ,eur_g30
12:02:24  37  ,eur_g31
12:02:24  38  ,eur_g32
12:02:24  39  ,eur_g33
12:02:24  40  ,eur_g34
12:02:24  41  ,eur_g35
12:02:24  42  ,eur_g36
12:02:24  43  ,eur_g37
12:02:24  44  ,eur_g38
12:02:24  45  ,eur_g39
12:02:24  46  ,eur_g40
12:02:24  47  ,eur_g41
12:02:24  48  ,aud_g00
12:02:24  49  ,aud_g01
12:02:24  50  ,aud_g02
12:02:24  51  ,aud_g03
12:02:24  52  ,aud_g04
12:02:24  53  ,aud_g05
12:02:24  54  ,aud_g06
12:02:24  55  ,aud_g07
12:02:24  56  ,aud_g08
12:02:24  57  ,aud_g09
12:02:24  58  ,aud_g10
12:02:24  59  ,aud_g11
12:02:24  60  ,aud_g12
12:02:24  61  ,aud_g13
12:02:24  62  ,aud_g14
12:02:24  63  ,aud_g15
12:02:24  64  ,aud_g16
12:02:24  65  ,aud_g17
12:02:24  66  ,aud_g18
12:02:24  67  ,aud_g19
12:02:24  68  ,aud_g20
12:02:24  69  ,aud_g21
12:02:24  70  ,aud_g22
12:02:24  71  ,aud_g23
12:02:24  72  ,aud_g24
12:02:24  73  ,aud_g25
12:02:24  74  ,aud_g26
12:02:24  75  ,aud_g27
12:02:24  76  ,aud_g28
12:02:24  77  ,aud_g29
12:02:24  78  ,aud_g30
12:02:24  79  ,aud_g31
12:02:24  80  ,aud_g32
12:02:24  81  ,aud_g33
12:02:24  82  ,aud_g34
12:02:24  83  ,aud_g35
12:02:24  84  ,aud_g36
12:02:24  85  ,aud_g37
12:02:24  86  ,aud_g38
12:02:24  87  ,aud_g39
12:02:24  88  ,aud_g40
12:02:24  89  ,aud_g41
12:02:24  90  ,gbp_g00
12:02:24  91  ,gbp_g01
12:02:24  92  ,gbp_g02
12:02:24  93  ,gbp_g03
12:02:24  94  ,gbp_g04
12:02:24  95  ,gbp_g05
12:02:24  96  ,gbp_g06
12:02:24  97  ,gbp_g07
12:02:24  98  ,gbp_g08
12:02:24  99  ,gbp_g09
12:02:24 100  ,gbp_g10
12:02:24 101  ,gbp_g11
12:02:24 102  ,gbp_g12
12:02:24 103  ,gbp_g13
12:02:24 104  ,gbp_g14
12:02:24 105  ,gbp_g15
12:02:24 106  ,gbp_g16
12:02:24 107  ,gbp_g17
12:02:24 108  ,gbp_g18
12:02:24 109  ,gbp_g19
12:02:24 110  ,gbp_g20
12:02:24 111  ,gbp_g21
12:02:24 112  ,gbp_g22
12:02:24 113  ,gbp_g23
12:02:24 114  ,gbp_g24
12:02:24 115  ,gbp_g25
12:02:24 116  ,gbp_g26
12:02:24 117  ,gbp_g27
12:02:24 118  ,gbp_g28
12:02:24 119  ,gbp_g29
12:02:24 120  ,gbp_g30
12:02:24 121  ,gbp_g31
12:02:24 122  ,gbp_g32
12:02:24 123  ,gbp_g33
12:02:24 124  ,gbp_g34
12:02:24 125  ,gbp_g35
12:02:24 126  ,gbp_g36
12:02:24 127  ,gbp_g37
12:02:24 128  ,gbp_g38
12:02:24 129  ,gbp_g39
12:02:24 130  ,gbp_g40
12:02:24 131  ,gbp_g41
12:02:24 132  ,jpy_g00
12:02:24 133  ,jpy_g01
12:02:24 134  ,jpy_g02
12:02:24 135  ,jpy_g03
12:02:24 136  ,jpy_g04
12:02:24 137  ,jpy_g05
12:02:24 138  ,jpy_g06
12:02:24 139  ,jpy_g07
12:02:24 140  ,jpy_g08
12:02:24 141  ,jpy_g09
12:02:24 142  ,jpy_g10
12:02:24 143  ,jpy_g11
12:02:24 144  ,jpy_g12
12:02:24 145  ,jpy_g13
12:02:24 146  ,jpy_g14
12:02:24 147  ,jpy_g15
12:02:24 148  ,jpy_g16
12:02:24 149  ,jpy_g17
12:02:24 150  ,jpy_g18
12:02:24 151  ,jpy_g19
12:02:24 152  ,jpy_g20
12:02:24 153  ,jpy_g21
12:02:24 154  ,jpy_g22
12:02:24 155  ,jpy_g23
12:02:24 156  ,jpy_g24
12:02:24 157  ,jpy_g25
12:02:24 158  ,jpy_g26
12:02:24 159  ,jpy_g27
12:02:24 160  ,jpy_g28
12:02:24 161  ,jpy_g29
12:02:24 162  ,jpy_g30
12:02:24 163  ,jpy_g31
12:02:24 164  ,jpy_g32
12:02:24 165  ,jpy_g33
12:02:24 166  ,jpy_g34
12:02:24 167  ,jpy_g35
12:02:24 168  ,jpy_g36
12:02:24 169  ,jpy_g37
12:02:24 170  ,jpy_g38
12:02:24 171  ,jpy_g39
12:02:24 172  ,jpy_g40
12:02:24 173  ,jpy_g41
12:02:24 174  ,cad_g00
12:02:24 175  ,cad_g01
12:02:24 176  ,cad_g02
12:02:24 177  ,cad_g03
12:02:24 178  ,cad_g04
12:02:24 179  ,cad_g05
12:02:24 180  ,cad_g06
12:02:24 181  ,cad_g07
12:02:24 182  ,cad_g08
12:02:24 183  ,cad_g09
12:02:24 184  ,cad_g10
12:02:24 185  ,cad_g11
12:02:24 186  ,cad_g12
12:02:24 187  ,cad_g13
12:02:24 188  ,cad_g14
12:02:24 189  ,cad_g15
12:02:24 190  ,cad_g16
12:02:24 191  ,cad_g17
12:02:24 192  ,cad_g18
12:02:24 193  ,cad_g19
12:02:24 194  ,cad_g20
12:02:24 195  ,cad_g21
12:02:24 196  ,cad_g22
12:02:24 197  ,cad_g23
12:02:24 198  ,cad_g24
12:02:24 199  ,cad_g25
12:02:24 200  ,cad_g26
12:02:24 201  ,cad_g27
12:02:24 202  ,cad_g28
12:02:24 203  ,cad_g29
12:02:24 204  ,cad_g30
12:02:24 205  ,cad_g31
12:02:24 206  ,cad_g32
12:02:24 207  ,cad_g33
12:02:24 208  ,cad_g34
12:02:24 209  ,cad_g35
12:02:24 210  ,cad_g36
12:02:24 211  ,cad_g37
12:02:24 212  ,cad_g38
12:02:24 213  ,cad_g39
12:02:24 214  ,cad_g40
12:02:24 215  ,cad_g41
12:02:24 216  ,chf_g00
12:02:24 217  ,chf_g01
12:02:24 218  ,chf_g02
12:02:24 219  ,chf_g03
12:02:24 220  ,chf_g04
12:02:24 221  ,chf_g05
12:02:24 222  ,chf_g06
12:02:24 223  ,chf_g07
12:02:24 224  ,chf_g08
12:02:24 225  ,chf_g09
12:02:24 226  ,chf_g10
12:02:24 227  ,chf_g11
12:02:24 228  ,chf_g12
12:02:24 229  ,chf_g13
12:02:24 230  ,chf_g14
12:02:24 231  ,chf_g15
12:02:24 232  ,chf_g16
12:02:24 233  ,chf_g17
12:02:24 234  ,chf_g18
12:02:24 235  ,chf_g19
12:02:24 236  ,chf_g20
12:02:24 237  ,chf_g21
12:02:24 238  ,chf_g22
12:02:24 239  ,chf_g23
12:02:24 240  ,chf_g24
12:02:24 241  ,chf_g25
12:02:24 242  ,chf_g26
12:02:24 243  ,chf_g27
12:02:24 244  ,chf_g28
12:02:24 245  ,chf_g29
12:02:24 246  ,chf_g30
12:02:24 247  ,chf_g31
12:02:24 248  ,chf_g32
12:02:24 249  ,chf_g33
12:02:24 250  ,chf_g34
12:02:24 251  ,chf_g35
12:02:24 252  ,chf_g36
12:02:24 253  ,chf_g37
12:02:24 254  ,chf_g38
12:02:24 255  ,chf_g39
12:02:24 256  ,chf_g40
12:02:24 257  ,chf_g41
12:02:24 258  FROM aud_ms6 m
12:02:24 259  WHERE m.ydate = '&1'||' '||'&2'
12:02:24 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'11:45:00'

View created.

Elapsed: 00:00:00.12
12:02:24 SQL> 
12:02:24 SQL> -- rpt
12:02:24 SQL> -- We should see just 1 row:
12:02:24 SQL> 
12:02:24 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
12:02:24 SQL> 
12:02:24 SQL> -- Build the model:
12:02:24 SQL> CREATE OR REPLACE VIEW bme AS
12:02:24   2  SELECT
12:02:24   3  'aud'||m.ydate prdate
12:02:24   4  ,gattn
12:02:24   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:02:24   6  ,eur_g00
12:02:24   7  ,eur_g01
12:02:24   8  ,eur_g02
12:02:24   9  ,eur_g03
12:02:24  10  ,eur_g04
12:02:24  11  ,eur_g05
12:02:24  12  ,eur_g06
12:02:24  13  ,eur_g07
12:02:24  14  ,eur_g08
12:02:24  15  ,eur_g09
12:02:24  16  ,eur_g10
12:02:24  17  ,eur_g11
12:02:24  18  ,eur_g12
12:02:24  19  ,eur_g13
12:02:24  20  ,eur_g14
12:02:24  21  ,eur_g15
12:02:24  22  ,eur_g16
12:02:24  23  ,eur_g17
12:02:24  24  ,eur_g18
12:02:24  25  ,eur_g19
12:02:24  26  ,eur_g20
12:02:24  27  ,eur_g21
12:02:24  28  ,eur_g22
12:02:24  29  ,eur_g23
12:02:24  30  ,eur_g24
12:02:24  31  ,eur_g25
12:02:24  32  ,eur_g26
12:02:24  33  ,eur_g27
12:02:24  34  ,eur_g28
12:02:24  35  ,eur_g29
12:02:24  36  ,eur_g30
12:02:24  37  ,eur_g31
12:02:24  38  ,eur_g32
12:02:24  39  ,eur_g33
12:02:24  40  ,eur_g34
12:02:24  41  ,eur_g35
12:02:24  42  ,eur_g36
12:02:24  43  ,eur_g37
12:02:24  44  ,eur_g38
12:02:24  45  ,eur_g39
12:02:24  46  ,eur_g40
12:02:24  47  ,eur_g41
12:02:24  48  ,aud_g00
12:02:24  49  ,aud_g01
12:02:24  50  ,aud_g02
12:02:24  51  ,aud_g03
12:02:24  52  ,aud_g04
12:02:24  53  ,aud_g05
12:02:24  54  ,aud_g06
12:02:24  55  ,aud_g07
12:02:24  56  ,aud_g08
12:02:24  57  ,aud_g09
12:02:24  58  ,aud_g10
12:02:24  59  ,aud_g11
12:02:24  60  ,aud_g12
12:02:24  61  ,aud_g13
12:02:24  62  ,aud_g14
12:02:24  63  ,aud_g15
12:02:24  64  ,aud_g16
12:02:24  65  ,aud_g17
12:02:24  66  ,aud_g18
12:02:24  67  ,aud_g19
12:02:24  68  ,aud_g20
12:02:24  69  ,aud_g21
12:02:24  70  ,aud_g22
12:02:24  71  ,aud_g23
12:02:24  72  ,aud_g24
12:02:24  73  ,aud_g25
12:02:24  74  ,aud_g26
12:02:24  75  ,aud_g27
12:02:24  76  ,aud_g28
12:02:24  77  ,aud_g29
12:02:24  78  ,aud_g30
12:02:24  79  ,aud_g31
12:02:24  80  ,aud_g32
12:02:24  81  ,aud_g33
12:02:24  82  ,aud_g34
12:02:24  83  ,aud_g35
12:02:24  84  ,aud_g36
12:02:24  85  ,aud_g37
12:02:24  86  ,aud_g38
12:02:24  87  ,aud_g39
12:02:24  88  ,aud_g40
12:02:24  89  ,aud_g41
12:02:24  90  ,gbp_g00
12:02:24  91  ,gbp_g01
12:02:24  92  ,gbp_g02
12:02:24  93  ,gbp_g03
12:02:24  94  ,gbp_g04
12:02:24  95  ,gbp_g05
12:02:24  96  ,gbp_g06
12:02:24  97  ,gbp_g07
12:02:24  98  ,gbp_g08
12:02:24  99  ,gbp_g09
12:02:24 100  ,gbp_g10
12:02:24 101  ,gbp_g11
12:02:24 102  ,gbp_g12
12:02:24 103  ,gbp_g13
12:02:24 104  ,gbp_g14
12:02:24 105  ,gbp_g15
12:02:24 106  ,gbp_g16
12:02:24 107  ,gbp_g17
12:02:24 108  ,gbp_g18
12:02:24 109  ,gbp_g19
12:02:24 110  ,gbp_g20
12:02:24 111  ,gbp_g21
12:02:24 112  ,gbp_g22
12:02:24 113  ,gbp_g23
12:02:24 114  ,gbp_g24
12:02:24 115  ,gbp_g25
12:02:24 116  ,gbp_g26
12:02:24 117  ,gbp_g27
12:02:24 118  ,gbp_g28
12:02:24 119  ,gbp_g29
12:02:24 120  ,gbp_g30
12:02:24 121  ,gbp_g31
12:02:24 122  ,gbp_g32
12:02:24 123  ,gbp_g33
12:02:24 124  ,gbp_g34
12:02:24 125  ,gbp_g35
12:02:24 126  ,gbp_g36
12:02:24 127  ,gbp_g37
12:02:24 128  ,gbp_g38
12:02:24 129  ,gbp_g39
12:02:24 130  ,gbp_g40
12:02:24 131  ,gbp_g41
12:02:24 132  ,jpy_g00
12:02:24 133  ,jpy_g01
12:02:24 134  ,jpy_g02
12:02:24 135  ,jpy_g03
12:02:24 136  ,jpy_g04
12:02:24 137  ,jpy_g05
12:02:24 138  ,jpy_g06
12:02:24 139  ,jpy_g07
12:02:24 140  ,jpy_g08
12:02:24 141  ,jpy_g09
12:02:24 142  ,jpy_g10
12:02:24 143  ,jpy_g11
12:02:24 144  ,jpy_g12
12:02:24 145  ,jpy_g13
12:02:24 146  ,jpy_g14
12:02:24 147  ,jpy_g15
12:02:24 148  ,jpy_g16
12:02:24 149  ,jpy_g17
12:02:24 150  ,jpy_g18
12:02:24 151  ,jpy_g19
12:02:24 152  ,jpy_g20
12:02:24 153  ,jpy_g21
12:02:24 154  ,jpy_g22
12:02:24 155  ,jpy_g23
12:02:24 156  ,jpy_g24
12:02:24 157  ,jpy_g25
12:02:24 158  ,jpy_g26
12:02:24 159  ,jpy_g27
12:02:24 160  ,jpy_g28
12:02:24 161  ,jpy_g29
12:02:24 162  ,jpy_g30
12:02:24 163  ,jpy_g31
12:02:24 164  ,jpy_g32
12:02:24 165  ,jpy_g33
12:02:24 166  ,jpy_g34
12:02:24 167  ,jpy_g35
12:02:24 168  ,jpy_g36
12:02:24 169  ,jpy_g37
12:02:24 170  ,jpy_g38
12:02:24 171  ,jpy_g39
12:02:24 172  ,jpy_g40
12:02:24 173  ,jpy_g41
12:02:24 174  ,cad_g00
12:02:24 175  ,cad_g01
12:02:24 176  ,cad_g02
12:02:24 177  ,cad_g03
12:02:24 178  ,cad_g04
12:02:24 179  ,cad_g05
12:02:24 180  ,cad_g06
12:02:24 181  ,cad_g07
12:02:24 182  ,cad_g08
12:02:24 183  ,cad_g09
12:02:24 184  ,cad_g10
12:02:24 185  ,cad_g11
12:02:24 186  ,cad_g12
12:02:24 187  ,cad_g13
12:02:24 188  ,cad_g14
12:02:24 189  ,cad_g15
12:02:24 190  ,cad_g16
12:02:24 191  ,cad_g17
12:02:24 192  ,cad_g18
12:02:24 193  ,cad_g19
12:02:24 194  ,cad_g20
12:02:24 195  ,cad_g21
12:02:24 196  ,cad_g22
12:02:24 197  ,cad_g23
12:02:24 198  ,cad_g24
12:02:24 199  ,cad_g25
12:02:24 200  ,cad_g26
12:02:24 201  ,cad_g27
12:02:24 202  ,cad_g28
12:02:24 203  ,cad_g29
12:02:24 204  ,cad_g30
12:02:24 205  ,cad_g31
12:02:24 206  ,cad_g32
12:02:24 207  ,cad_g33
12:02:24 208  ,cad_g34
12:02:24 209  ,cad_g35
12:02:24 210  ,cad_g36
12:02:24 211  ,cad_g37
12:02:24 212  ,cad_g38
12:02:24 213  ,cad_g39
12:02:24 214  ,cad_g40
12:02:24 215  ,cad_g41
12:02:24 216  ,chf_g00
12:02:24 217  ,chf_g01
12:02:24 218  ,chf_g02
12:02:24 219  ,chf_g03
12:02:24 220  ,chf_g04
12:02:24 221  ,chf_g05
12:02:24 222  ,chf_g06
12:02:24 223  ,chf_g07
12:02:24 224  ,chf_g08
12:02:24 225  ,chf_g09
12:02:24 226  ,chf_g10
12:02:24 227  ,chf_g11
12:02:24 228  ,chf_g12
12:02:24 229  ,chf_g13
12:02:24 230  ,chf_g14
12:02:24 231  ,chf_g15
12:02:24 232  ,chf_g16
12:02:24 233  ,chf_g17
12:02:24 234  ,chf_g18
12:02:24 235  ,chf_g19
12:02:24 236  ,chf_g20
12:02:24 237  ,chf_g21
12:02:24 238  ,chf_g22
12:02:24 239  ,chf_g23
12:02:24 240  ,chf_g24
12:02:24 241  ,chf_g25
12:02:24 242  ,chf_g26
12:02:24 243  ,chf_g27
12:02:24 244  ,chf_g28
12:02:24 245  ,chf_g29
12:02:24 246  ,chf_g30
12:02:24 247  ,chf_g31
12:02:24 248  ,chf_g32
12:02:24 249  ,chf_g33
12:02:24 250  ,chf_g34
12:02:24 251  ,chf_g35
12:02:24 252  ,chf_g36
12:02:24 253  ,chf_g37
12:02:24 254  ,chf_g38
12:02:24 255  ,chf_g39
12:02:24 256  ,chf_g40
12:02:24 257  ,chf_g41
12:02:24 258  FROM aud_ms6 m
12:02:24 259  WHERE gattn IN('nup','up')
12:02:24 260  AND 1+m.ydate < '&1'||' '||'&2'
12:02:24 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'11:45:00'

View created.

Elapsed: 00:00:00.14
12:02:24 SQL> 
12:02:24 SQL> -- rpt
12:02:24 SQL> 
12:02:24 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12784
up	     6298

Elapsed: 00:00:00.04
12:02:24 SQL> 
12:02:24 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 21:55:00

Elapsed: 00:00:00.03
12:02:24 SQL> 
12:02:24 SQL> -- Now build model from bme and score sme
12:02:24 SQL> @score1gattn.sql
12:02:24 SQL> -- score1gattn.sql
12:02:24 SQL> 
12:02:24 SQL> -- Does the 1st SVM score
12:02:24 SQL> 
12:02:24 SQL> -- Fill up svmc_apply_prep
12:02:24 SQL> @score_gattn.sql
12:02:24 SQL> --
12:02:24 SQL> -- score_gattn.sql
12:02:24 SQL> --
12:02:24 SQL> 
12:02:24 SQL> -- usage: score_gattn.sql
12:02:24 SQL> 
12:02:24 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
12:02:24 SQL> 
12:02:24 SQL> DEFINE target	= 'gattn'
12:02:24 SQL> DEFINE model_name = 'forex14'
12:02:24 SQL> DEFINE bldtable	= 'bme'
12:02:24 SQL> DEFINE scoretable = 'sme'
12:02:24 SQL> DEFINE case_id	= 'prdate'
12:02:24 SQL> 
12:02:24 SQL> -- Define a variable to help me exclude some columns from some data mining calls
12:02:24 SQL> DEFINE exclude1 = "'&target','&case_id'"
12:02:24 SQL> 
12:02:24 SQL> -- Builds an SVM model using pl/sql.
12:02:24 SQL> 
12:02:24 SQL> -----------------------------------------------------------------------
12:02:24 SQL> --			    BUILD THE MODEL
12:02:24 SQL> -----------------------------------------------------------------------
12:02:24 SQL> 
12:02:24 SQL> -- Cleanup old build data preparation objects for repeat runs
12:02:24 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
12:02:24 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
12:02:24 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
12:02:24 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
12:02:24 SQL> 
12:02:24 SQL> 
12:02:24 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
12:02:24 SQL> --
12:02:24 SQL> -- DROP	TABLE svmc_settings ;
12:02:24 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
12:02:24 SQL> -- DELETE svmc_settings;
12:02:24 SQL> 
12:02:24 SQL> -- The default classification algorithm is Naive Bayes. So override
12:02:24 SQL> -- this choice to SVM using a settings table.
12:02:24 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
12:02:24 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
12:02:24 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
12:02:24 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
12:02:24 SQL> -- models.
12:02:24 SQL> --
12:02:24 SQL> 
12:02:24 SQL> -- Do this once and then comment it out.
12:02:24 SQL> -- That makes script go faster.
12:02:24 SQL> -- BEGIN
12:02:24 SQL> -- -- Populate settings table
12:02:24 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:02:24 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
12:02:24 SQL> --
12:02:24 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:02:24 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
12:02:24 SQL> --
12:02:24 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:02:24 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
12:02:24 SQL> --   COMMIT;
12:02:24 SQL> -- END;
12:02:24 SQL> -- /
12:02:24 SQL> 
12:02:24 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
12:02:24 SQL> 
12:02:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
12:02:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:02:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:02:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
12:02:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:02:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
12:02:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
12:02:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:02:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:02:24 SQL> 
12:02:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
12:02:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:02:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:02:24 SQL> 
12:02:24 SQL> --------------------------------
12:02:24 SQL> -- PREPARE BUILD (TRAINING) DATA
12:02:24 SQL> --
12:02:24 SQL> 
12:02:24 SQL> -- 1. Missing Value treatment for all Predictors and
12:02:24 SQL> -- 2. Outlier Treatment and
12:02:24 SQL> -- 3. Normalization are performed below.
12:02:24 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
12:02:24 SQL> --    normalized here.
12:02:24 SQL> 
12:02:24 SQL> BEGIN
12:02:24   2  	-- Perform missing value treatment for all predictors
12:02:24   3  	-- create miss tables
12:02:24   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
12:02:24   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
12:02:24   6  
12:02:24   7  	-- populate miss tables
12:02:24   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
12:02:24   9  	  miss_table_name => 'svmc_miss_num',
12:02:24  10  	  data_table_name => '&bldtable',
12:02:24  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:02:24  12  
12:02:24  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
12:02:24  14  	  miss_table_name => 'svmc_miss_cat',
12:02:24  15  	  data_table_name => '&bldtable',
12:02:24  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:02:24  17  
12:02:24  18  	-- xform input data to replace missing values
12:02:24  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:02:24  20  	  miss_table_name => 'svmc_miss_num',
12:02:24  21  	  data_table_name => '&bldtable',
12:02:24  22  	  xform_view_name => 'xformed_build_miss_num');
12:02:24  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:02:24  24  	  miss_table_name => 'svmc_miss_cat',
12:02:24  25  	  data_table_name => '&bldtable',
12:02:24  26  	  xform_view_name => 'xformed_build_miss_cat');
12:02:24  27  
12:02:24  28  	-- Perform outlier treatment.
12:02:24  29  	-- create clip table
12:02:24  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
12:02:24  31  
12:02:24  32  	-- populate clip table
12:02:24  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
12:02:24  34  	  clip_table_name => 'svmc_clip',
12:02:24  35  	  data_table_name => '&bldtable',
12:02:24  36  	  tail_frac	  => 0.025,
12:02:24  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:02:24  38  
12:02:24  39  	-- xform input data to winsorized data
12:02:24  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
12:02:24  41  	  clip_table_name => 'svmc_clip',
12:02:24  42  	  data_table_name => '&bldtable',
12:02:24  43  	  xform_view_name => 'svmc_winsor');
12:02:24  44  
12:02:24  45  	-- create normalization table
12:02:24  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
12:02:24  47  
12:02:24  48  	-- populate normalization table based on winsorized data
12:02:24  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
12:02:24  50  	  norm_table_name => 'svmc_norm',
12:02:24  51  	  data_table_name => 'svmc_winsor',
12:02:24  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:02:24  53  
12:02:24  54  	-- normalize the original data
12:02:24  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:02:24  56  	  norm_table_name => 'svmc_norm',
12:02:24  57  	  data_table_name => '&bldtable',
12:02:24  58  	  xform_view_name => 'svmc_build_prep');
12:02:24  59  END;
12:02:24  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.30
12:02:42 SQL> 
12:02:42 SQL> ---------------------
12:02:42 SQL> -- CREATE A NEW MODEL
12:02:42 SQL> --
12:02:42 SQL> -- Cleanup old model with the same name for repeat runs
12:02:42 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
12:02:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:02:42   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.99
12:02:43 SQL> 
12:02:43 SQL> -- Build a new SVM Model
12:02:43 SQL> BEGIN
12:02:43   2  	DBMS_DATA_MINING.CREATE_MODEL(
12:02:43   3  	  model_name	      => '&model_name',
12:02:43   4  	  mining_function     => dbms_data_mining.classification,
12:02:43   5  	  data_table_name     => 'svmc_build_prep',
12:02:43   6  	  case_id_column_name => '&case_id',
12:02:43   7  	  target_column_name  => '&target',
12:02:43   8  	  settings_table_name => 'svmc_settings');
12:02:43   9  END;
12:02:43  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.29
12:03:12 SQL> 
12:03:12 SQL> -----------------------------------------------------------------------
12:03:12 SQL> --			       APPLY/score THE MODEL
12:03:12 SQL> -----------------------------------------------------------------------
12:03:12 SQL> 
12:03:12 SQL> -- Cleanup old scoring data preparation objects for repeat runs
12:03:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
12:03:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:03:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
12:03:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
12:03:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:03:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:03:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
12:03:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:03:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
12:03:12 SQL> -----------------------
12:03:12 SQL> -- PREPARE SCORING DATA
12:03:12 SQL> --
12:03:12 SQL> -- If the data for model creation has been prepared, then the data
12:03:12 SQL> -- to be scored using the model must be prepared in the same manner
12:03:12 SQL> -- in order to obtain meaningful results.
12:03:12 SQL> --
12:03:12 SQL> -- 1. Missing Value treatment for all Predictors and
12:03:12 SQL> -- 2. Normalization
12:03:12 SQL> -- No outlier treatment will be performed during test and apply. The
12:03:12 SQL> -- normalization step is sufficient, since the normalization parameters
12:03:12 SQL> -- already capture the effects of outlier treatment done with build data.
12:03:12 SQL> --
12:03:12 SQL> BEGIN
12:03:12   2  	-- Xform Test data to replace missing values
12:03:12   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:03:12   4  	  miss_table_name => 'svmc_miss_num',
12:03:12   5  	  data_table_name => '&scoretable',
12:03:12   6  	  xform_view_name => 'xformed_apply_miss_num');
12:03:12   7  
12:03:12   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:03:12   9  	  miss_table_name => 'svmc_miss_cat',
12:03:12  10  	  data_table_name => '&scoretable',
12:03:12  11  	  xform_view_name => 'xformed_apply_miss_cat');
12:03:12  12  
12:03:12  13  	-- Normalize the data to be scored
12:03:12  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:03:12  15  	  norm_table_name => 'svmc_norm',
12:03:12  16  	  data_table_name => '&scoretable',
12:03:12  17  	  xform_view_name => 'svmc_apply_prep');
12:03:12  18  END;
12:03:12  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
12:03:13 SQL> 
12:03:13 SQL> -- Use same model_name used in score_gattn.sql
12:03:13 SQL> DEFINE model_name = 'forex14'
12:03:13 SQL> 
12:03:13 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
12:03:13 SQL> 
12:03:13 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
12:03:13   2  SELECT
12:03:13   3  prdate
12:03:13   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
12:03:13   5  ,sysdate
12:03:13   6  ,SUBSTR(prdate,1,3)pair
12:03:13   7  ,SUBSTR(prdate,4,19)ydate
12:03:13   8  FROM svmc_apply_prep
12:03:13   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
12:03:13 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
