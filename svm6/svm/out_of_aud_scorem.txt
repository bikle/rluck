
SQL*Plus: Release 11.2.0.1.0 Production on Fri Dec 31 06:43:38 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

06:43:38 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
06:43:38 SQL> 06:43:38 SQL> @aud_score1day.sql  2010-12-31 06:20:00
06:43:38 SQL> --
06:43:38 SQL> -- aud_score1day.sql
06:43:38 SQL> --
06:43:38 SQL> 
06:43:38 SQL> CREATE OR REPLACE VIEW sme AS
06:43:38   2  SELECT
06:43:38   3  'aud'||m.ydate prdate
06:43:38   4  ,NULL gatt
06:43:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:43:38   6  ,eur_g00
06:43:38   7  ,eur_g01
06:43:38   8  ,eur_g02
06:43:38   9  ,eur_g03
06:43:38  10  ,eur_g04
06:43:38  11  ,eur_g05
06:43:38  12  ,eur_g06
06:43:38  13  ,eur_g07
06:43:38  14  ,eur_g08
06:43:38  15  ,eur_g09
06:43:38  16  ,eur_g10
06:43:38  17  ,eur_g11
06:43:38  18  ,eur_g12
06:43:38  19  ,eur_g13
06:43:38  20  ,eur_g14
06:43:38  21  ,eur_g15
06:43:38  22  ,eur_g16
06:43:38  23  ,eur_g17
06:43:38  24  ,eur_g18
06:43:38  25  ,eur_g19
06:43:38  26  ,eur_g20
06:43:38  27  ,eur_g21
06:43:38  28  ,eur_g22
06:43:38  29  ,eur_g23
06:43:38  30  ,eur_g24
06:43:38  31  ,eur_g25
06:43:38  32  ,eur_g26
06:43:38  33  ,eur_g27
06:43:38  34  ,eur_g28
06:43:38  35  ,eur_g29
06:43:38  36  ,eur_g30
06:43:38  37  ,eur_g31
06:43:38  38  ,eur_g32
06:43:38  39  ,eur_g33
06:43:38  40  ,eur_g34
06:43:38  41  ,eur_g35
06:43:38  42  ,eur_g36
06:43:38  43  ,eur_g37
06:43:38  44  ,eur_g38
06:43:38  45  ,eur_g39
06:43:38  46  ,eur_g40
06:43:38  47  ,eur_g41
06:43:38  48  ,aud_g00
06:43:38  49  ,aud_g01
06:43:38  50  ,aud_g02
06:43:38  51  ,aud_g03
06:43:38  52  ,aud_g04
06:43:38  53  ,aud_g05
06:43:38  54  ,aud_g06
06:43:38  55  ,aud_g07
06:43:38  56  ,aud_g08
06:43:38  57  ,aud_g09
06:43:38  58  ,aud_g10
06:43:38  59  ,aud_g11
06:43:38  60  ,aud_g12
06:43:38  61  ,aud_g13
06:43:38  62  ,aud_g14
06:43:38  63  ,aud_g15
06:43:38  64  ,aud_g16
06:43:38  65  ,aud_g17
06:43:38  66  ,aud_g18
06:43:38  67  ,aud_g19
06:43:38  68  ,aud_g20
06:43:38  69  ,aud_g21
06:43:38  70  ,aud_g22
06:43:38  71  ,aud_g23
06:43:38  72  ,aud_g24
06:43:38  73  ,aud_g25
06:43:38  74  ,aud_g26
06:43:38  75  ,aud_g27
06:43:38  76  ,aud_g28
06:43:38  77  ,aud_g29
06:43:38  78  ,aud_g30
06:43:38  79  ,aud_g31
06:43:38  80  ,aud_g32
06:43:38  81  ,aud_g33
06:43:38  82  ,aud_g34
06:43:38  83  ,aud_g35
06:43:38  84  ,aud_g36
06:43:38  85  ,aud_g37
06:43:38  86  ,aud_g38
06:43:38  87  ,aud_g39
06:43:38  88  ,aud_g40
06:43:38  89  ,aud_g41
06:43:38  90  ,gbp_g00
06:43:38  91  ,gbp_g01
06:43:38  92  ,gbp_g02
06:43:38  93  ,gbp_g03
06:43:38  94  ,gbp_g04
06:43:38  95  ,gbp_g05
06:43:38  96  ,gbp_g06
06:43:38  97  ,gbp_g07
06:43:38  98  ,gbp_g08
06:43:38  99  ,gbp_g09
06:43:38 100  ,gbp_g10
06:43:38 101  ,gbp_g11
06:43:38 102  ,gbp_g12
06:43:38 103  ,gbp_g13
06:43:38 104  ,gbp_g14
06:43:38 105  ,gbp_g15
06:43:38 106  ,gbp_g16
06:43:38 107  ,gbp_g17
06:43:38 108  ,gbp_g18
06:43:38 109  ,gbp_g19
06:43:38 110  ,gbp_g20
06:43:38 111  ,gbp_g21
06:43:38 112  ,gbp_g22
06:43:38 113  ,gbp_g23
06:43:38 114  ,gbp_g24
06:43:38 115  ,gbp_g25
06:43:38 116  ,gbp_g26
06:43:38 117  ,gbp_g27
06:43:38 118  ,gbp_g28
06:43:38 119  ,gbp_g29
06:43:38 120  ,gbp_g30
06:43:38 121  ,gbp_g31
06:43:38 122  ,gbp_g32
06:43:38 123  ,gbp_g33
06:43:38 124  ,gbp_g34
06:43:38 125  ,gbp_g35
06:43:38 126  ,gbp_g36
06:43:38 127  ,gbp_g37
06:43:38 128  ,gbp_g38
06:43:38 129  ,gbp_g39
06:43:38 130  ,gbp_g40
06:43:38 131  ,gbp_g41
06:43:38 132  ,jpy_g00
06:43:38 133  ,jpy_g01
06:43:38 134  ,jpy_g02
06:43:38 135  ,jpy_g03
06:43:38 136  ,jpy_g04
06:43:38 137  ,jpy_g05
06:43:38 138  ,jpy_g06
06:43:38 139  ,jpy_g07
06:43:38 140  ,jpy_g08
06:43:38 141  ,jpy_g09
06:43:38 142  ,jpy_g10
06:43:38 143  ,jpy_g11
06:43:38 144  ,jpy_g12
06:43:38 145  ,jpy_g13
06:43:38 146  ,jpy_g14
06:43:38 147  ,jpy_g15
06:43:38 148  ,jpy_g16
06:43:38 149  ,jpy_g17
06:43:38 150  ,jpy_g18
06:43:38 151  ,jpy_g19
06:43:38 152  ,jpy_g20
06:43:38 153  ,jpy_g21
06:43:38 154  ,jpy_g22
06:43:38 155  ,jpy_g23
06:43:38 156  ,jpy_g24
06:43:38 157  ,jpy_g25
06:43:38 158  ,jpy_g26
06:43:38 159  ,jpy_g27
06:43:38 160  ,jpy_g28
06:43:38 161  ,jpy_g29
06:43:38 162  ,jpy_g30
06:43:38 163  ,jpy_g31
06:43:38 164  ,jpy_g32
06:43:38 165  ,jpy_g33
06:43:38 166  ,jpy_g34
06:43:38 167  ,jpy_g35
06:43:38 168  ,jpy_g36
06:43:38 169  ,jpy_g37
06:43:38 170  ,jpy_g38
06:43:38 171  ,jpy_g39
06:43:38 172  ,jpy_g40
06:43:38 173  ,jpy_g41
06:43:38 174  ,cad_g00
06:43:38 175  ,cad_g01
06:43:38 176  ,cad_g02
06:43:38 177  ,cad_g03
06:43:38 178  ,cad_g04
06:43:38 179  ,cad_g05
06:43:38 180  ,cad_g06
06:43:38 181  ,cad_g07
06:43:38 182  ,cad_g08
06:43:38 183  ,cad_g09
06:43:38 184  ,cad_g10
06:43:38 185  ,cad_g11
06:43:38 186  ,cad_g12
06:43:38 187  ,cad_g13
06:43:38 188  ,cad_g14
06:43:38 189  ,cad_g15
06:43:38 190  ,cad_g16
06:43:38 191  ,cad_g17
06:43:38 192  ,cad_g18
06:43:38 193  ,cad_g19
06:43:38 194  ,cad_g20
06:43:38 195  ,cad_g21
06:43:38 196  ,cad_g22
06:43:38 197  ,cad_g23
06:43:38 198  ,cad_g24
06:43:38 199  ,cad_g25
06:43:38 200  ,cad_g26
06:43:38 201  ,cad_g27
06:43:38 202  ,cad_g28
06:43:38 203  ,cad_g29
06:43:38 204  ,cad_g30
06:43:38 205  ,cad_g31
06:43:38 206  ,cad_g32
06:43:38 207  ,cad_g33
06:43:38 208  ,cad_g34
06:43:38 209  ,cad_g35
06:43:38 210  ,cad_g36
06:43:38 211  ,cad_g37
06:43:38 212  ,cad_g38
06:43:38 213  ,cad_g39
06:43:38 214  ,cad_g40
06:43:38 215  ,cad_g41
06:43:38 216  ,chf_g00
06:43:38 217  ,chf_g01
06:43:38 218  ,chf_g02
06:43:38 219  ,chf_g03
06:43:38 220  ,chf_g04
06:43:38 221  ,chf_g05
06:43:38 222  ,chf_g06
06:43:38 223  ,chf_g07
06:43:38 224  ,chf_g08
06:43:38 225  ,chf_g09
06:43:38 226  ,chf_g10
06:43:38 227  ,chf_g11
06:43:38 228  ,chf_g12
06:43:38 229  ,chf_g13
06:43:38 230  ,chf_g14
06:43:38 231  ,chf_g15
06:43:38 232  ,chf_g16
06:43:38 233  ,chf_g17
06:43:38 234  ,chf_g18
06:43:38 235  ,chf_g19
06:43:38 236  ,chf_g20
06:43:38 237  ,chf_g21
06:43:38 238  ,chf_g22
06:43:38 239  ,chf_g23
06:43:38 240  ,chf_g24
06:43:38 241  ,chf_g25
06:43:38 242  ,chf_g26
06:43:38 243  ,chf_g27
06:43:38 244  ,chf_g28
06:43:38 245  ,chf_g29
06:43:38 246  ,chf_g30
06:43:38 247  ,chf_g31
06:43:38 248  ,chf_g32
06:43:38 249  ,chf_g33
06:43:38 250  ,chf_g34
06:43:38 251  ,chf_g35
06:43:38 252  ,chf_g36
06:43:38 253  ,chf_g37
06:43:38 254  ,chf_g38
06:43:38 255  ,chf_g39
06:43:38 256  ,chf_g40
06:43:38 257  ,chf_g41
06:43:38 258  FROM aud_ms6 m
06:43:38 259  WHERE m.ydate = '&1'||' '||'&2'
06:43:38 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'06:20:00'

View created.

Elapsed: 00:00:00.14
06:43:38 SQL> 
06:43:38 SQL> -- rpt
06:43:38 SQL> -- We should see just 1 row:
06:43:38 SQL> 
06:43:38 SQL> SELECT COUNT(prdate) FROM sme
06:43:38   2  
06:43:38 SQL> -- Build the model:
06:43:38 SQL> CREATE OR REPLACE VIEW bme AS
06:43:38   2  SELECT
06:43:38   3  'aud'||m.ydate prdate
06:43:38   4  ,gatt
06:43:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:43:38   6  ,eur_g00
06:43:38   7  ,eur_g01
06:43:38   8  ,eur_g02
06:43:38   9  ,eur_g03
06:43:38  10  ,eur_g04
06:43:38  11  ,eur_g05
06:43:38  12  ,eur_g06
06:43:38  13  ,eur_g07
06:43:38  14  ,eur_g08
06:43:38  15  ,eur_g09
06:43:38  16  ,eur_g10
06:43:38  17  ,eur_g11
06:43:38  18  ,eur_g12
06:43:38  19  ,eur_g13
06:43:38  20  ,eur_g14
06:43:38  21  ,eur_g15
06:43:38  22  ,eur_g16
06:43:38  23  ,eur_g17
06:43:38  24  ,eur_g18
06:43:38  25  ,eur_g19
06:43:38  26  ,eur_g20
06:43:38  27  ,eur_g21
06:43:38  28  ,eur_g22
06:43:38  29  ,eur_g23
06:43:38  30  ,eur_g24
06:43:38  31  ,eur_g25
06:43:38  32  ,eur_g26
06:43:38  33  ,eur_g27
06:43:38  34  ,eur_g28
06:43:38  35  ,eur_g29
06:43:38  36  ,eur_g30
06:43:38  37  ,eur_g31
06:43:38  38  ,eur_g32
06:43:38  39  ,eur_g33
06:43:38  40  ,eur_g34
06:43:38  41  ,eur_g35
06:43:38  42  ,eur_g36
06:43:38  43  ,eur_g37
06:43:38  44  ,eur_g38
06:43:38  45  ,eur_g39
06:43:38  46  ,eur_g40
06:43:38  47  ,eur_g41
06:43:38  48  ,aud_g00
06:43:38  49  ,aud_g01
06:43:38  50  ,aud_g02
06:43:38  51  ,aud_g03
06:43:38  52  ,aud_g04
06:43:38  53  ,aud_g05
06:43:38  54  ,aud_g06
06:43:38  55  ,aud_g07
06:43:38  56  ,aud_g08
06:43:38  57  ,aud_g09
06:43:38  58  ,aud_g10
06:43:38  59  ,aud_g11
06:43:38  60  ,aud_g12
06:43:38  61  ,aud_g13
06:43:38  62  ,aud_g14
06:43:38  63  ,aud_g15
06:43:38  64  ,aud_g16
06:43:38  65  ,aud_g17
06:43:38  66  ,aud_g18
06:43:38  67  ,aud_g19
06:43:38  68  ,aud_g20
06:43:38  69  ,aud_g21
06:43:38  70  ,aud_g22
06:43:38  71  ,aud_g23
06:43:38  72  ,aud_g24
06:43:38  73  ,aud_g25
06:43:38  74  ,aud_g26
06:43:38  75  ,aud_g27
06:43:38  76  ,aud_g28
06:43:38  77  ,aud_g29
06:43:38  78  ,aud_g30
06:43:38  79  ,aud_g31
06:43:38  80  ,aud_g32
06:43:38  81  ,aud_g33
06:43:38  82  ,aud_g34
06:43:38  83  ,aud_g35
06:43:38  84  ,aud_g36
06:43:38  85  ,aud_g37
06:43:38  86  ,aud_g38
06:43:38  87  ,aud_g39
06:43:38  88  ,aud_g40
06:43:38  89  ,aud_g41
06:43:38  90  ,gbp_g00
06:43:38  91  ,gbp_g01
06:43:38  92  ,gbp_g02
06:43:38  93  ,gbp_g03
06:43:38  94  ,gbp_g04
06:43:38  95  ,gbp_g05
06:43:38  96  ,gbp_g06
06:43:38  97  ,gbp_g07
06:43:38  98  ,gbp_g08
06:43:38  99  ,gbp_g09
06:43:38 100  ,gbp_g10
06:43:38 101  ,gbp_g11
06:43:38 102  ,gbp_g12
06:43:38 103  ,gbp_g13
06:43:38 104  ,gbp_g14
06:43:38 105  ,gbp_g15
06:43:38 106  ,gbp_g16
06:43:38 107  ,gbp_g17
06:43:38 108  ,gbp_g18
06:43:38 109  ,gbp_g19
06:43:38 110  ,gbp_g20
06:43:38 111  ,gbp_g21
06:43:38 112  ,gbp_g22
06:43:38 113  ,gbp_g23
06:43:38 114  ,gbp_g24
06:43:38 115  ,gbp_g25
06:43:38 116  ,gbp_g26
06:43:38 117  ,gbp_g27
06:43:38 118  ,gbp_g28
06:43:38 119  ,gbp_g29
06:43:38 120  ,gbp_g30
06:43:38 121  ,gbp_g31
06:43:38 122  ,gbp_g32
06:43:38 123  ,gbp_g33
06:43:38 124  ,gbp_g34
06:43:38 125  ,gbp_g35
06:43:38 126  ,gbp_g36
06:43:38 127  ,gbp_g37
06:43:38 128  ,gbp_g38
06:43:38 129  ,gbp_g39
06:43:38 130  ,gbp_g40
06:43:38 131  ,gbp_g41
06:43:38 132  ,jpy_g00
06:43:38 133  ,jpy_g01
06:43:38 134  ,jpy_g02
06:43:38 135  ,jpy_g03
06:43:38 136  ,jpy_g04
06:43:38 137  ,jpy_g05
06:43:38 138  ,jpy_g06
06:43:38 139  ,jpy_g07
06:43:38 140  ,jpy_g08
06:43:38 141  ,jpy_g09
06:43:38 142  ,jpy_g10
06:43:38 143  ,jpy_g11
06:43:38 144  ,jpy_g12
06:43:38 145  ,jpy_g13
06:43:38 146  ,jpy_g14
06:43:38 147  ,jpy_g15
06:43:38 148  ,jpy_g16
06:43:38 149  ,jpy_g17
06:43:38 150  ,jpy_g18
06:43:38 151  ,jpy_g19
06:43:38 152  ,jpy_g20
06:43:38 153  ,jpy_g21
06:43:38 154  ,jpy_g22
06:43:38 155  ,jpy_g23
06:43:38 156  ,jpy_g24
06:43:38 157  ,jpy_g25
06:43:38 158  ,jpy_g26
06:43:38 159  ,jpy_g27
06:43:38 160  ,jpy_g28
06:43:38 161  ,jpy_g29
06:43:38 162  ,jpy_g30
06:43:38 163  ,jpy_g31
06:43:38 164  ,jpy_g32
06:43:38 165  ,jpy_g33
06:43:38 166  ,jpy_g34
06:43:38 167  ,jpy_g35
06:43:38 168  ,jpy_g36
06:43:38 169  ,jpy_g37
06:43:38 170  ,jpy_g38
06:43:38 171  ,jpy_g39
06:43:38 172  ,jpy_g40
06:43:38 173  ,jpy_g41
06:43:38 174  ,cad_g00
06:43:38 175  ,cad_g01
06:43:38 176  ,cad_g02
06:43:38 177  ,cad_g03
06:43:38 178  ,cad_g04
06:43:38 179  ,cad_g05
06:43:38 180  ,cad_g06
06:43:38 181  ,cad_g07
06:43:38 182  ,cad_g08
06:43:38 183  ,cad_g09
06:43:38 184  ,cad_g10
06:43:38 185  ,cad_g11
06:43:38 186  ,cad_g12
06:43:38 187  ,cad_g13
06:43:38 188  ,cad_g14
06:43:38 189  ,cad_g15
06:43:38 190  ,cad_g16
06:43:38 191  ,cad_g17
06:43:38 192  ,cad_g18
06:43:38 193  ,cad_g19
06:43:38 194  ,cad_g20
06:43:38 195  ,cad_g21
06:43:38 196  ,cad_g22
06:43:38 197  ,cad_g23
06:43:38 198  ,cad_g24
06:43:38 199  ,cad_g25
06:43:38 200  ,cad_g26
06:43:38 201  ,cad_g27
06:43:38 202  ,cad_g28
06:43:38 203  ,cad_g29
06:43:38 204  ,cad_g30
06:43:38 205  ,cad_g31
06:43:38 206  ,cad_g32
06:43:38 207  ,cad_g33
06:43:38 208  ,cad_g34
06:43:38 209  ,cad_g35
06:43:38 210  ,cad_g36
06:43:38 211  ,cad_g37
06:43:38 212  ,cad_g38
06:43:38 213  ,cad_g39
06:43:38 214  ,cad_g40
06:43:38 215  ,cad_g41
06:43:38 216  ,chf_g00
06:43:38 217  ,chf_g01
06:43:38 218  ,chf_g02
06:43:38 219  ,chf_g03
06:43:38 220  ,chf_g04
06:43:38 221  ,chf_g05
06:43:38 222  ,chf_g06
06:43:38 223  ,chf_g07
06:43:38 224  ,chf_g08
06:43:38 225  ,chf_g09
06:43:38 226  ,chf_g10
06:43:38 227  ,chf_g11
06:43:38 228  ,chf_g12
06:43:38 229  ,chf_g13
06:43:38 230  ,chf_g14
06:43:38 231  ,chf_g15
06:43:38 232  ,chf_g16
06:43:38 233  ,chf_g17
06:43:38 234  ,chf_g18
06:43:38 235  ,chf_g19
06:43:38 236  ,chf_g20
06:43:38 237  ,chf_g21
06:43:38 238  ,chf_g22
06:43:38 239  ,chf_g23
06:43:38 240  ,chf_g24
06:43:38 241  ,chf_g25
06:43:38 242  ,chf_g26
06:43:38 243  ,chf_g27
06:43:38 244  ,chf_g28
06:43:38 245  ,chf_g29
06:43:38 246  ,chf_g30
06:43:38 247  ,chf_g31
06:43:38 248  ,chf_g32
06:43:38 249  ,chf_g33
06:43:38 250  ,chf_g34
06:43:38 251  ,chf_g35
06:43:38 252  ,chf_g36
06:43:38 253  ,chf_g37
06:43:38 254  ,chf_g38
06:43:38 255  ,chf_g39
06:43:38 256  ,chf_g40
06:43:38 257  ,chf_g41
06:43:38 258  FROM aud_ms6 m
06:43:38 259  WHERE gatt IN('nup','up')
06:43:38 260  AND 1+m.ydate < '&1'||' '||'&2'
06:43:38 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'06:20:00'

View created.

Elapsed: 00:00:00.14
06:43:39 SQL> 
06:43:39 SQL> -- rpt
06:43:39 SQL> 
06:43:39 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
06:43:39   2  
06:43:39 SQL> SELECT MAX(prdate) FROM bme
06:43:39   2  
06:43:39 SQL> -- Now build model from bme and score sme
06:43:39 SQL> @score1.sql
06:43:39 SQL> -- score1.sql
06:43:39 SQL> 
06:43:39 SQL> -- Does the 1st SVM score
06:43:39 SQL> 
06:43:39 SQL> -- Fill up svmc_apply_prep
06:43:39 SQL> @score.sql
06:43:39 SQL> --
06:43:39 SQL> -- score.sql
06:43:39 SQL> --
06:43:39 SQL> 
06:43:39 SQL> -- usage: score.sql
06:43:39 SQL> 
06:43:39 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:43:39 SQL> 
06:43:39 SQL> DEFINE target	= 'gatt'
06:43:39 SQL> DEFINE model_name = 'forex14'
06:43:39 SQL> DEFINE bldtable	= 'bme'
06:43:39 SQL> DEFINE scoretable = 'sme'
06:43:39 SQL> DEFINE case_id	= 'prdate'
06:43:39 SQL> 
06:43:39 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:43:39 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:43:39 SQL> 
06:43:39 SQL> -- Builds an SVM model using pl/sql.
06:43:39 SQL> 
06:43:39 SQL> -----------------------------------------------------------------------
06:43:39 SQL> --			    BUILD THE MODEL
06:43:39 SQL> -----------------------------------------------------------------------
06:43:39 SQL> 
06:43:39 SQL> -- Cleanup old build data preparation objects for repeat runs
06:43:39 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
06:43:39 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:43:39 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
06:43:39 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
06:43:39 SQL> 
06:43:39 SQL> 
06:43:39 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:43:39 SQL> --
06:43:39 SQL> -- DROP	TABLE svmc_settings ;
06:43:39 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:43:39 SQL> -- DELETE svmc_settings;
06:43:39 SQL> 
06:43:39 SQL> -- The default classification algorithm is Naive Bayes. So override
06:43:39 SQL> -- this choice to SVM using a settings table.
06:43:39 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:43:39 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:43:39 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:43:39 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:43:39 SQL> -- models.
06:43:39 SQL> --
06:43:39 SQL> 
06:43:39 SQL> -- Do this once and then comment it out.
06:43:39 SQL> -- That makes script go faster.
06:43:39 SQL> -- BEGIN
06:43:39 SQL> -- -- Populate settings table
06:43:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:43:39 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:43:39 SQL> --
06:43:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:43:39 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:43:39 SQL> --
06:43:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:43:39 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:43:39 SQL> --   COMMIT;
06:43:39 SQL> -- END;
06:43:39 SQL> -- /
06:43:39 SQL> 
06:43:39 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:43:39 SQL> 
06:43:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:43:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:43:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:43:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:43:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:43:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:43:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:43:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:43:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:43:39 SQL> 
06:43:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:43:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:43:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
06:43:39 SQL> 
06:43:39 SQL> --------------------------------
06:43:39 SQL> -- PREPARE BUILD (TRAINING) DATA
06:43:39 SQL> --
06:43:39 SQL> 
06:43:39 SQL> -- 1. Missing Value treatment for all Predictors and
06:43:39 SQL> -- 2. Outlier Treatment and
06:43:39 SQL> -- 3. Normalization are performed below.
06:43:39 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:43:39 SQL> --    normalized here.
06:43:39 SQL> 
06:43:39 SQL> BEGIN
06:43:39   2  	-- Perform missing value treatment for all predictors
06:43:39   3  	-- create miss tables
06:43:39   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:43:39   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:43:39   6  
06:43:39   7  	-- populate miss tables
06:43:39   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:43:39   9  	  miss_table_name => 'svmc_miss_num',
06:43:39  10  	  data_table_name => '&bldtable',
06:43:39  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:43:39  12  
06:43:39  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:43:39  14  	  miss_table_name => 'svmc_miss_cat',
06:43:39  15  	  data_table_name => '&bldtable',
06:43:39  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:43:39  17  
06:43:39  18  	-- xform input data to replace missing values
06:43:39  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:43:39  20  	  miss_table_name => 'svmc_miss_num',
06:43:39  21  	  data_table_name => '&bldtable',
06:43:39  22  	  xform_view_name => 'xformed_build_miss_num');
06:43:39  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:43:39  24  	  miss_table_name => 'svmc_miss_cat',
06:43:39  25  	  data_table_name => '&bldtable',
06:43:39  26  	  xform_view_name => 'xformed_build_miss_cat');
06:43:39  27  
06:43:39  28  	-- Perform outlier treatment.
06:43:39  29  	-- create clip table
06:43:39  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:43:39  31  
06:43:39  32  	-- populate clip table
06:43:39  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:43:39  34  	  clip_table_name => 'svmc_clip',
06:43:39  35  	  data_table_name => '&bldtable',
06:43:39  36  	  tail_frac	  => 0.025,
06:43:39  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:43:39  38  
06:43:39  39  	-- xform input data to winsorized data
06:43:39  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:43:39  41  	  clip_table_name => 'svmc_clip',
06:43:39  42  	  data_table_name => '&bldtable',
06:43:39  43  	  xform_view_name => 'svmc_winsor');
06:43:39  44  
06:43:39  45  	-- create normalization table
06:43:39  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:43:39  47  
06:43:39  48  	-- populate normalization table based on winsorized data
06:43:39  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:43:39  50  	  norm_table_name => 'svmc_norm',
06:43:39  51  	  data_table_name => 'svmc_winsor',
06:43:39  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:43:39  53  
06:43:39  54  	-- normalize the original data
06:43:39  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:43:39  56  	  norm_table_name => 'svmc_norm',
06:43:39  57  	  data_table_name => '&bldtable',
06:43:39  58  	  xform_view_name => 'svmc_build_prep');
06:43:39  59  END;
06:43:39  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.83
06:43:58 SQL> 
06:43:58 SQL> ---------------------
06:43:58 SQL> -- CREATE A NEW MODEL
06:43:58 SQL> --
06:43:58 SQL> -- Cleanup old model with the same name for repeat runs
06:43:58 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:43:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:43:58   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.62
06:43:58 SQL> 
06:43:58 SQL> -- Build a new SVM Model
06:43:58 SQL> BEGIN
06:43:58   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:43:58   3  	  model_name	      => '&model_name',
06:43:58   4  	  mining_function     => dbms_data_mining.classification,
06:43:58   5  	  data_table_name     => 'svmc_build_prep',
06:43:58   6  	  case_id_column_name => '&case_id',
06:43:58   7  	  target_column_name  => '&target',
06:43:58   8  	  settings_table_name => 'svmc_settings');
06:43:58   9  END;
06:43:58  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.18
06:44:27 SQL> 
06:44:27 SQL> -----------------------------------------------------------------------
06:44:27 SQL> --			       APPLY/score THE MODEL
06:44:27 SQL> -----------------------------------------------------------------------
06:44:27 SQL> 
06:44:27 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:44:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:44:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:44:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:44:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:44:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:44:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:44:28 SQL> -----------------------
06:44:28 SQL> -- PREPARE SCORING DATA
06:44:28 SQL> --
06:44:28 SQL> -- If the data for model creation has been prepared, then the data
06:44:28 SQL> -- to be scored using the model must be prepared in the same manner
06:44:28 SQL> -- in order to obtain meaningful results.
06:44:28 SQL> --
06:44:28 SQL> -- 1. Missing Value treatment for all Predictors and
06:44:28 SQL> -- 2. Normalization
06:44:28 SQL> -- No outlier treatment will be performed during test and apply. The
06:44:28 SQL> -- normalization step is sufficient, since the normalization parameters
06:44:28 SQL> -- already capture the effects of outlier treatment done with build data.
06:44:28 SQL> --
06:44:28 SQL> BEGIN
06:44:28   2  	-- Xform Test data to replace missing values
06:44:28   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:44:28   4  	  miss_table_name => 'svmc_miss_num',
06:44:28   5  	  data_table_name => '&scoretable',
06:44:28   6  	  xform_view_name => 'xformed_apply_miss_num');
06:44:28   7  
06:44:28   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:44:28   9  	  miss_table_name => 'svmc_miss_cat',
06:44:28  10  	  data_table_name => '&scoretable',
06:44:28  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:44:28  12  
06:44:28  13  	-- Normalize the data to be scored
06:44:28  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:44:28  15  	  norm_table_name => 'svmc_norm',
06:44:28  16  	  data_table_name => '&scoretable',
06:44:28  17  	  xform_view_name => 'svmc_apply_prep');
06:44:28  18  END;
06:44:28  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
06:44:29 SQL> 
06:44:29 SQL> -- Use same model_name used in score.sql
06:44:29 SQL> DEFINE model_name = 'forex14'
06:44:29 SQL> 
06:44:29 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
06:44:29 SQL> 
06:44:29 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
06:44:29 SQL> 
06:44:29 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
06:44:29   2  SELECT
06:44:29   3  prdate
06:44:29   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:44:29   5  ,sysdate
06:44:29   6  ,SUBSTR(prdate,1,3)pair
06:44:29   7  ,SUBSTR(prdate,4,19)ydate
06:44:29   8  FROM svmc_apply_prep
06:44:29   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
06:44:29 SQL> @aud_score1day.sql  2010-12-31 06:25:00
06:44:29 SQL> --
06:44:29 SQL> -- aud_score1day.sql
06:44:29 SQL> --
06:44:29 SQL> 
06:44:29 SQL> CREATE OR REPLACE VIEW sme AS
06:44:29   2  SELECT
06:44:29   3  'aud'||m.ydate prdate
06:44:29   4  ,NULL gatt
06:44:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:44:29   6  ,eur_g00
06:44:29   7  ,eur_g01
06:44:29   8  ,eur_g02
06:44:29   9  ,eur_g03
06:44:29  10  ,eur_g04
06:44:29  11  ,eur_g05
06:44:29  12  ,eur_g06
06:44:29  13  ,eur_g07
06:44:29  14  ,eur_g08
06:44:29  15  ,eur_g09
06:44:29  16  ,eur_g10
06:44:29  17  ,eur_g11
06:44:29  18  ,eur_g12
06:44:29  19  ,eur_g13
06:44:29  20  ,eur_g14
06:44:29  21  ,eur_g15
06:44:29  22  ,eur_g16
06:44:29  23  ,eur_g17
06:44:29  24  ,eur_g18
06:44:29  25  ,eur_g19
06:44:29  26  ,eur_g20
06:44:29  27  ,eur_g21
06:44:29  28  ,eur_g22
06:44:29  29  ,eur_g23
06:44:29  30  ,eur_g24
06:44:29  31  ,eur_g25
06:44:29  32  ,eur_g26
06:44:29  33  ,eur_g27
06:44:29  34  ,eur_g28
06:44:29  35  ,eur_g29
06:44:29  36  ,eur_g30
06:44:29  37  ,eur_g31
06:44:29  38  ,eur_g32
06:44:29  39  ,eur_g33
06:44:29  40  ,eur_g34
06:44:29  41  ,eur_g35
06:44:29  42  ,eur_g36
06:44:29  43  ,eur_g37
06:44:29  44  ,eur_g38
06:44:29  45  ,eur_g39
06:44:29  46  ,eur_g40
06:44:29  47  ,eur_g41
06:44:29  48  ,aud_g00
06:44:29  49  ,aud_g01
06:44:29  50  ,aud_g02
06:44:29  51  ,aud_g03
06:44:29  52  ,aud_g04
06:44:29  53  ,aud_g05
06:44:29  54  ,aud_g06
06:44:29  55  ,aud_g07
06:44:29  56  ,aud_g08
06:44:29  57  ,aud_g09
06:44:29  58  ,aud_g10
06:44:29  59  ,aud_g11
06:44:29  60  ,aud_g12
06:44:29  61  ,aud_g13
06:44:29  62  ,aud_g14
06:44:29  63  ,aud_g15
06:44:29  64  ,aud_g16
06:44:29  65  ,aud_g17
06:44:29  66  ,aud_g18
06:44:29  67  ,aud_g19
06:44:29  68  ,aud_g20
06:44:29  69  ,aud_g21
06:44:29  70  ,aud_g22
06:44:29  71  ,aud_g23
06:44:29  72  ,aud_g24
06:44:29  73  ,aud_g25
06:44:29  74  ,aud_g26
06:44:29  75  ,aud_g27
06:44:29  76  ,aud_g28
06:44:29  77  ,aud_g29
06:44:29  78  ,aud_g30
06:44:29  79  ,aud_g31
06:44:29  80  ,aud_g32
06:44:29  81  ,aud_g33
06:44:29  82  ,aud_g34
06:44:29  83  ,aud_g35
06:44:29  84  ,aud_g36
06:44:29  85  ,aud_g37
06:44:29  86  ,aud_g38
06:44:29  87  ,aud_g39
06:44:29  88  ,aud_g40
06:44:29  89  ,aud_g41
06:44:29  90  ,gbp_g00
06:44:29  91  ,gbp_g01
06:44:29  92  ,gbp_g02
06:44:29  93  ,gbp_g03
06:44:29  94  ,gbp_g04
06:44:29  95  ,gbp_g05
06:44:29  96  ,gbp_g06
06:44:29  97  ,gbp_g07
06:44:29  98  ,gbp_g08
06:44:29  99  ,gbp_g09
06:44:29 100  ,gbp_g10
06:44:29 101  ,gbp_g11
06:44:29 102  ,gbp_g12
06:44:29 103  ,gbp_g13
06:44:29 104  ,gbp_g14
06:44:29 105  ,gbp_g15
06:44:29 106  ,gbp_g16
06:44:29 107  ,gbp_g17
06:44:29 108  ,gbp_g18
06:44:29 109  ,gbp_g19
06:44:29 110  ,gbp_g20
06:44:29 111  ,gbp_g21
06:44:29 112  ,gbp_g22
06:44:29 113  ,gbp_g23
06:44:29 114  ,gbp_g24
06:44:29 115  ,gbp_g25
06:44:29 116  ,gbp_g26
06:44:29 117  ,gbp_g27
06:44:29 118  ,gbp_g28
06:44:29 119  ,gbp_g29
06:44:29 120  ,gbp_g30
06:44:29 121  ,gbp_g31
06:44:29 122  ,gbp_g32
06:44:29 123  ,gbp_g33
06:44:29 124  ,gbp_g34
06:44:29 125  ,gbp_g35
06:44:29 126  ,gbp_g36
06:44:29 127  ,gbp_g37
06:44:29 128  ,gbp_g38
06:44:29 129  ,gbp_g39
06:44:29 130  ,gbp_g40
06:44:29 131  ,gbp_g41
06:44:29 132  ,jpy_g00
06:44:29 133  ,jpy_g01
06:44:29 134  ,jpy_g02
06:44:29 135  ,jpy_g03
06:44:29 136  ,jpy_g04
06:44:29 137  ,jpy_g05
06:44:29 138  ,jpy_g06
06:44:29 139  ,jpy_g07
06:44:29 140  ,jpy_g08
06:44:29 141  ,jpy_g09
06:44:29 142  ,jpy_g10
06:44:29 143  ,jpy_g11
06:44:29 144  ,jpy_g12
06:44:29 145  ,jpy_g13
06:44:29 146  ,jpy_g14
06:44:29 147  ,jpy_g15
06:44:29 148  ,jpy_g16
06:44:29 149  ,jpy_g17
06:44:29 150  ,jpy_g18
06:44:29 151  ,jpy_g19
06:44:29 152  ,jpy_g20
06:44:29 153  ,jpy_g21
06:44:29 154  ,jpy_g22
06:44:29 155  ,jpy_g23
06:44:29 156  ,jpy_g24
06:44:29 157  ,jpy_g25
06:44:29 158  ,jpy_g26
06:44:29 159  ,jpy_g27
06:44:29 160  ,jpy_g28
06:44:29 161  ,jpy_g29
06:44:29 162  ,jpy_g30
06:44:29 163  ,jpy_g31
06:44:29 164  ,jpy_g32
06:44:29 165  ,jpy_g33
06:44:29 166  ,jpy_g34
06:44:29 167  ,jpy_g35
06:44:29 168  ,jpy_g36
06:44:29 169  ,jpy_g37
06:44:29 170  ,jpy_g38
06:44:29 171  ,jpy_g39
06:44:29 172  ,jpy_g40
06:44:29 173  ,jpy_g41
06:44:29 174  ,cad_g00
06:44:29 175  ,cad_g01
06:44:29 176  ,cad_g02
06:44:29 177  ,cad_g03
06:44:29 178  ,cad_g04
06:44:29 179  ,cad_g05
06:44:29 180  ,cad_g06
06:44:29 181  ,cad_g07
06:44:29 182  ,cad_g08
06:44:29 183  ,cad_g09
06:44:29 184  ,cad_g10
06:44:29 185  ,cad_g11
06:44:29 186  ,cad_g12
06:44:29 187  ,cad_g13
06:44:29 188  ,cad_g14
06:44:29 189  ,cad_g15
06:44:29 190  ,cad_g16
06:44:29 191  ,cad_g17
06:44:29 192  ,cad_g18
06:44:29 193  ,cad_g19
06:44:29 194  ,cad_g20
06:44:29 195  ,cad_g21
06:44:29 196  ,cad_g22
06:44:29 197  ,cad_g23
06:44:29 198  ,cad_g24
06:44:29 199  ,cad_g25
06:44:29 200  ,cad_g26
06:44:29 201  ,cad_g27
06:44:29 202  ,cad_g28
06:44:29 203  ,cad_g29
06:44:29 204  ,cad_g30
06:44:29 205  ,cad_g31
06:44:29 206  ,cad_g32
06:44:29 207  ,cad_g33
06:44:29 208  ,cad_g34
06:44:29 209  ,cad_g35
06:44:29 210  ,cad_g36
06:44:29 211  ,cad_g37
06:44:29 212  ,cad_g38
06:44:29 213  ,cad_g39
06:44:29 214  ,cad_g40
06:44:29 215  ,cad_g41
06:44:29 216  ,chf_g00
06:44:29 217  ,chf_g01
06:44:29 218  ,chf_g02
06:44:29 219  ,chf_g03
06:44:29 220  ,chf_g04
06:44:29 221  ,chf_g05
06:44:29 222  ,chf_g06
06:44:29 223  ,chf_g07
06:44:29 224  ,chf_g08
06:44:29 225  ,chf_g09
06:44:29 226  ,chf_g10
06:44:29 227  ,chf_g11
06:44:29 228  ,chf_g12
06:44:29 229  ,chf_g13
06:44:29 230  ,chf_g14
06:44:29 231  ,chf_g15
06:44:29 232  ,chf_g16
06:44:29 233  ,chf_g17
06:44:29 234  ,chf_g18
06:44:29 235  ,chf_g19
06:44:29 236  ,chf_g20
06:44:29 237  ,chf_g21
06:44:29 238  ,chf_g22
06:44:29 239  ,chf_g23
06:44:29 240  ,chf_g24
06:44:29 241  ,chf_g25
06:44:29 242  ,chf_g26
06:44:29 243  ,chf_g27
06:44:29 244  ,chf_g28
06:44:29 245  ,chf_g29
06:44:29 246  ,chf_g30
06:44:29 247  ,chf_g31
06:44:29 248  ,chf_g32
06:44:29 249  ,chf_g33
06:44:29 250  ,chf_g34
06:44:29 251  ,chf_g35
06:44:29 252  ,chf_g36
06:44:29 253  ,chf_g37
06:44:29 254  ,chf_g38
06:44:29 255  ,chf_g39
06:44:29 256  ,chf_g40
06:44:29 257  ,chf_g41
06:44:29 258  FROM aud_ms6 m
06:44:29 259  WHERE m.ydate = '&1'||' '||'&2'
06:44:29 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'06:25:00'

View created.

Elapsed: 00:00:00.12
06:44:29 SQL> 
06:44:29 SQL> -- rpt
06:44:29 SQL> -- We should see just 1 row:
06:44:29 SQL> 
06:44:29 SQL> SELECT COUNT(prdate) FROM sme
06:44:29   2  
06:44:29 SQL> -- Build the model:
06:44:29 SQL> CREATE OR REPLACE VIEW bme AS
06:44:29   2  SELECT
06:44:29   3  'aud'||m.ydate prdate
06:44:29   4  ,gatt
06:44:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:44:29   6  ,eur_g00
06:44:29   7  ,eur_g01
06:44:29   8  ,eur_g02
06:44:29   9  ,eur_g03
06:44:29  10  ,eur_g04
06:44:29  11  ,eur_g05
06:44:29  12  ,eur_g06
06:44:29  13  ,eur_g07
06:44:29  14  ,eur_g08
06:44:29  15  ,eur_g09
06:44:29  16  ,eur_g10
06:44:29  17  ,eur_g11
06:44:29  18  ,eur_g12
06:44:29  19  ,eur_g13
06:44:29  20  ,eur_g14
06:44:29  21  ,eur_g15
06:44:29  22  ,eur_g16
06:44:29  23  ,eur_g17
06:44:29  24  ,eur_g18
06:44:29  25  ,eur_g19
06:44:29  26  ,eur_g20
06:44:29  27  ,eur_g21
06:44:29  28  ,eur_g22
06:44:29  29  ,eur_g23
06:44:29  30  ,eur_g24
06:44:29  31  ,eur_g25
06:44:29  32  ,eur_g26
06:44:29  33  ,eur_g27
06:44:29  34  ,eur_g28
06:44:29  35  ,eur_g29
06:44:29  36  ,eur_g30
06:44:29  37  ,eur_g31
06:44:29  38  ,eur_g32
06:44:29  39  ,eur_g33
06:44:29  40  ,eur_g34
06:44:29  41  ,eur_g35
06:44:29  42  ,eur_g36
06:44:29  43  ,eur_g37
06:44:29  44  ,eur_g38
06:44:29  45  ,eur_g39
06:44:29  46  ,eur_g40
06:44:29  47  ,eur_g41
06:44:29  48  ,aud_g00
06:44:29  49  ,aud_g01
06:44:29  50  ,aud_g02
06:44:29  51  ,aud_g03
06:44:29  52  ,aud_g04
06:44:29  53  ,aud_g05
06:44:29  54  ,aud_g06
06:44:29  55  ,aud_g07
06:44:29  56  ,aud_g08
06:44:29  57  ,aud_g09
06:44:29  58  ,aud_g10
06:44:29  59  ,aud_g11
06:44:29  60  ,aud_g12
06:44:29  61  ,aud_g13
06:44:29  62  ,aud_g14
06:44:29  63  ,aud_g15
06:44:29  64  ,aud_g16
06:44:29  65  ,aud_g17
06:44:29  66  ,aud_g18
06:44:29  67  ,aud_g19
06:44:29  68  ,aud_g20
06:44:29  69  ,aud_g21
06:44:29  70  ,aud_g22
06:44:29  71  ,aud_g23
06:44:29  72  ,aud_g24
06:44:29  73  ,aud_g25
06:44:29  74  ,aud_g26
06:44:29  75  ,aud_g27
06:44:29  76  ,aud_g28
06:44:29  77  ,aud_g29
06:44:29  78  ,aud_g30
06:44:29  79  ,aud_g31
06:44:29  80  ,aud_g32
06:44:29  81  ,aud_g33
06:44:29  82  ,aud_g34
06:44:29  83  ,aud_g35
06:44:29  84  ,aud_g36
06:44:29  85  ,aud_g37
06:44:29  86  ,aud_g38
06:44:29  87  ,aud_g39
06:44:29  88  ,aud_g40
06:44:29  89  ,aud_g41
06:44:29  90  ,gbp_g00
06:44:29  91  ,gbp_g01
06:44:29  92  ,gbp_g02
06:44:29  93  ,gbp_g03
06:44:29  94  ,gbp_g04
06:44:29  95  ,gbp_g05
06:44:29  96  ,gbp_g06
06:44:29  97  ,gbp_g07
06:44:29  98  ,gbp_g08
06:44:29  99  ,gbp_g09
06:44:29 100  ,gbp_g10
06:44:29 101  ,gbp_g11
06:44:29 102  ,gbp_g12
06:44:29 103  ,gbp_g13
06:44:29 104  ,gbp_g14
06:44:29 105  ,gbp_g15
06:44:29 106  ,gbp_g16
06:44:29 107  ,gbp_g17
06:44:29 108  ,gbp_g18
06:44:29 109  ,gbp_g19
06:44:29 110  ,gbp_g20
06:44:29 111  ,gbp_g21
06:44:29 112  ,gbp_g22
06:44:29 113  ,gbp_g23
06:44:29 114  ,gbp_g24
06:44:29 115  ,gbp_g25
06:44:29 116  ,gbp_g26
06:44:29 117  ,gbp_g27
06:44:29 118  ,gbp_g28
06:44:29 119  ,gbp_g29
06:44:29 120  ,gbp_g30
06:44:29 121  ,gbp_g31
06:44:29 122  ,gbp_g32
06:44:29 123  ,gbp_g33
06:44:29 124  ,gbp_g34
06:44:29 125  ,gbp_g35
06:44:29 126  ,gbp_g36
06:44:29 127  ,gbp_g37
06:44:29 128  ,gbp_g38
06:44:29 129  ,gbp_g39
06:44:29 130  ,gbp_g40
06:44:29 131  ,gbp_g41
06:44:29 132  ,jpy_g00
06:44:29 133  ,jpy_g01
06:44:29 134  ,jpy_g02
06:44:29 135  ,jpy_g03
06:44:29 136  ,jpy_g04
06:44:29 137  ,jpy_g05
06:44:29 138  ,jpy_g06
06:44:29 139  ,jpy_g07
06:44:29 140  ,jpy_g08
06:44:29 141  ,jpy_g09
06:44:29 142  ,jpy_g10
06:44:29 143  ,jpy_g11
06:44:29 144  ,jpy_g12
06:44:29 145  ,jpy_g13
06:44:29 146  ,jpy_g14
06:44:29 147  ,jpy_g15
06:44:29 148  ,jpy_g16
06:44:29 149  ,jpy_g17
06:44:29 150  ,jpy_g18
06:44:29 151  ,jpy_g19
06:44:29 152  ,jpy_g20
06:44:29 153  ,jpy_g21
06:44:29 154  ,jpy_g22
06:44:29 155  ,jpy_g23
06:44:29 156  ,jpy_g24
06:44:29 157  ,jpy_g25
06:44:29 158  ,jpy_g26
06:44:29 159  ,jpy_g27
06:44:29 160  ,jpy_g28
06:44:29 161  ,jpy_g29
06:44:29 162  ,jpy_g30
06:44:29 163  ,jpy_g31
06:44:29 164  ,jpy_g32
06:44:29 165  ,jpy_g33
06:44:29 166  ,jpy_g34
06:44:29 167  ,jpy_g35
06:44:29 168  ,jpy_g36
06:44:29 169  ,jpy_g37
06:44:29 170  ,jpy_g38
06:44:29 171  ,jpy_g39
06:44:29 172  ,jpy_g40
06:44:29 173  ,jpy_g41
06:44:29 174  ,cad_g00
06:44:29 175  ,cad_g01
06:44:29 176  ,cad_g02
06:44:29 177  ,cad_g03
06:44:29 178  ,cad_g04
06:44:29 179  ,cad_g05
06:44:29 180  ,cad_g06
06:44:29 181  ,cad_g07
06:44:29 182  ,cad_g08
06:44:29 183  ,cad_g09
06:44:29 184  ,cad_g10
06:44:29 185  ,cad_g11
06:44:29 186  ,cad_g12
06:44:29 187  ,cad_g13
06:44:29 188  ,cad_g14
06:44:29 189  ,cad_g15
06:44:29 190  ,cad_g16
06:44:29 191  ,cad_g17
06:44:29 192  ,cad_g18
06:44:29 193  ,cad_g19
06:44:29 194  ,cad_g20
06:44:29 195  ,cad_g21
06:44:29 196  ,cad_g22
06:44:29 197  ,cad_g23
06:44:29 198  ,cad_g24
06:44:29 199  ,cad_g25
06:44:29 200  ,cad_g26
06:44:29 201  ,cad_g27
06:44:29 202  ,cad_g28
06:44:29 203  ,cad_g29
06:44:29 204  ,cad_g30
06:44:29 205  ,cad_g31
06:44:29 206  ,cad_g32
06:44:29 207  ,cad_g33
06:44:29 208  ,cad_g34
06:44:29 209  ,cad_g35
06:44:29 210  ,cad_g36
06:44:29 211  ,cad_g37
06:44:29 212  ,cad_g38
06:44:29 213  ,cad_g39
06:44:29 214  ,cad_g40
06:44:29 215  ,cad_g41
06:44:29 216  ,chf_g00
06:44:29 217  ,chf_g01
06:44:29 218  ,chf_g02
06:44:29 219  ,chf_g03
06:44:29 220  ,chf_g04
06:44:29 221  ,chf_g05
06:44:29 222  ,chf_g06
06:44:29 223  ,chf_g07
06:44:29 224  ,chf_g08
06:44:29 225  ,chf_g09
06:44:29 226  ,chf_g10
06:44:29 227  ,chf_g11
06:44:29 228  ,chf_g12
06:44:29 229  ,chf_g13
06:44:29 230  ,chf_g14
06:44:29 231  ,chf_g15
06:44:29 232  ,chf_g16
06:44:29 233  ,chf_g17
06:44:29 234  ,chf_g18
06:44:29 235  ,chf_g19
06:44:29 236  ,chf_g20
06:44:29 237  ,chf_g21
06:44:29 238  ,chf_g22
06:44:29 239  ,chf_g23
06:44:29 240  ,chf_g24
06:44:29 241  ,chf_g25
06:44:29 242  ,chf_g26
06:44:29 243  ,chf_g27
06:44:29 244  ,chf_g28
06:44:29 245  ,chf_g29
06:44:29 246  ,chf_g30
06:44:29 247  ,chf_g31
06:44:29 248  ,chf_g32
06:44:29 249  ,chf_g33
06:44:29 250  ,chf_g34
06:44:29 251  ,chf_g35
06:44:29 252  ,chf_g36
06:44:29 253  ,chf_g37
06:44:29 254  ,chf_g38
06:44:29 255  ,chf_g39
06:44:29 256  ,chf_g40
06:44:29 257  ,chf_g41
06:44:29 258  FROM aud_ms6 m
06:44:29 259  WHERE gatt IN('nup','up')
06:44:29 260  AND 1+m.ydate < '&1'||' '||'&2'
06:44:29 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'06:25:00'

View created.

Elapsed: 00:00:00.21
06:44:29 SQL> 
06:44:29 SQL> -- rpt
06:44:29 SQL> 
06:44:29 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
06:44:29   2  
06:44:29 SQL> SELECT MAX(prdate) FROM bme
06:44:29   2  
06:44:29 SQL> -- Now build model from bme and score sme
06:44:29 SQL> @score1.sql
06:44:29 SQL> -- score1.sql
06:44:29 SQL> 
06:44:29 SQL> -- Does the 1st SVM score
06:44:29 SQL> 
06:44:29 SQL> -- Fill up svmc_apply_prep
06:44:29 SQL> @score.sql
06:44:29 SQL> --
06:44:29 SQL> -- score.sql
06:44:29 SQL> --
06:44:29 SQL> 
06:44:29 SQL> -- usage: score.sql
06:44:29 SQL> 
06:44:29 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:44:29 SQL> 
06:44:29 SQL> DEFINE target	= 'gatt'
06:44:29 SQL> DEFINE model_name = 'forex14'
06:44:29 SQL> DEFINE bldtable	= 'bme'
06:44:29 SQL> DEFINE scoretable = 'sme'
06:44:29 SQL> DEFINE case_id	= 'prdate'
06:44:29 SQL> 
06:44:29 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:44:29 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:44:29 SQL> 
06:44:29 SQL> -- Builds an SVM model using pl/sql.
06:44:29 SQL> 
06:44:29 SQL> -----------------------------------------------------------------------
06:44:29 SQL> --			    BUILD THE MODEL
06:44:29 SQL> -----------------------------------------------------------------------
06:44:29 SQL> 
06:44:29 SQL> -- Cleanup old build data preparation objects for repeat runs
06:44:29 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
06:44:29 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:44:29 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
06:44:29 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
06:44:29 SQL> 
06:44:29 SQL> 
06:44:29 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:44:29 SQL> --
06:44:29 SQL> -- DROP	TABLE svmc_settings ;
06:44:29 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:44:29 SQL> -- DELETE svmc_settings;
06:44:29 SQL> 
06:44:29 SQL> -- The default classification algorithm is Naive Bayes. So override
06:44:29 SQL> -- this choice to SVM using a settings table.
06:44:29 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:44:29 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:44:29 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:44:29 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:44:29 SQL> -- models.
06:44:29 SQL> --
06:44:29 SQL> 
06:44:29 SQL> -- Do this once and then comment it out.
06:44:29 SQL> -- That makes script go faster.
06:44:29 SQL> -- BEGIN
06:44:29 SQL> -- -- Populate settings table
06:44:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:44:29 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:44:29 SQL> --
06:44:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:44:29 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:44:29 SQL> --
06:44:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:44:29 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:44:29 SQL> --   COMMIT;
06:44:29 SQL> -- END;
06:44:29 SQL> -- /
06:44:29 SQL> 
06:44:29 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:44:29 SQL> 
06:44:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:44:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.13
06:44:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:44:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.16
06:44:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:44:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:44:30 SQL> 
06:44:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:44:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
06:44:30 SQL> 
06:44:30 SQL> --------------------------------
06:44:30 SQL> -- PREPARE BUILD (TRAINING) DATA
06:44:30 SQL> --
06:44:30 SQL> 
06:44:30 SQL> -- 1. Missing Value treatment for all Predictors and
06:44:30 SQL> -- 2. Outlier Treatment and
06:44:30 SQL> -- 3. Normalization are performed below.
06:44:30 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:44:30 SQL> --    normalized here.
06:44:30 SQL> 
06:44:30 SQL> BEGIN
06:44:30   2  	-- Perform missing value treatment for all predictors
06:44:30   3  	-- create miss tables
06:44:30   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:44:30   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:44:30   6  
06:44:30   7  	-- populate miss tables
06:44:30   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:44:30   9  	  miss_table_name => 'svmc_miss_num',
06:44:30  10  	  data_table_name => '&bldtable',
06:44:30  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:44:30  12  
06:44:30  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:44:30  14  	  miss_table_name => 'svmc_miss_cat',
06:44:30  15  	  data_table_name => '&bldtable',
06:44:30  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:44:30  17  
06:44:30  18  	-- xform input data to replace missing values
06:44:30  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:44:30  20  	  miss_table_name => 'svmc_miss_num',
06:44:30  21  	  data_table_name => '&bldtable',
06:44:30  22  	  xform_view_name => 'xformed_build_miss_num');
06:44:30  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:44:30  24  	  miss_table_name => 'svmc_miss_cat',
06:44:30  25  	  data_table_name => '&bldtable',
06:44:30  26  	  xform_view_name => 'xformed_build_miss_cat');
06:44:30  27  
06:44:30  28  	-- Perform outlier treatment.
06:44:30  29  	-- create clip table
06:44:30  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:44:30  31  
06:44:30  32  	-- populate clip table
06:44:30  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:44:30  34  	  clip_table_name => 'svmc_clip',
06:44:30  35  	  data_table_name => '&bldtable',
06:44:30  36  	  tail_frac	  => 0.025,
06:44:30  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:44:30  38  
06:44:30  39  	-- xform input data to winsorized data
06:44:30  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:44:30  41  	  clip_table_name => 'svmc_clip',
06:44:30  42  	  data_table_name => '&bldtable',
06:44:30  43  	  xform_view_name => 'svmc_winsor');
06:44:30  44  
06:44:30  45  	-- create normalization table
06:44:30  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:44:30  47  
06:44:30  48  	-- populate normalization table based on winsorized data
06:44:30  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:44:30  50  	  norm_table_name => 'svmc_norm',
06:44:30  51  	  data_table_name => 'svmc_winsor',
06:44:30  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:44:30  53  
06:44:30  54  	-- normalize the original data
06:44:30  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:44:30  56  	  norm_table_name => 'svmc_norm',
06:44:30  57  	  data_table_name => '&bldtable',
06:44:30  58  	  xform_view_name => 'svmc_build_prep');
06:44:30  59  END;
06:44:30  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.36
06:44:48 SQL> 
06:44:48 SQL> ---------------------
06:44:48 SQL> -- CREATE A NEW MODEL
06:44:48 SQL> --
06:44:48 SQL> -- Cleanup old model with the same name for repeat runs
06:44:48 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:44:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:44:48   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.14
06:44:49 SQL> 
06:44:49 SQL> -- Build a new SVM Model
06:44:49 SQL> BEGIN
06:44:49   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:44:49   3  	  model_name	      => '&model_name',
06:44:49   4  	  mining_function     => dbms_data_mining.classification,
06:44:49   5  	  data_table_name     => 'svmc_build_prep',
06:44:49   6  	  case_id_column_name => '&case_id',
06:44:49   7  	  target_column_name  => '&target',
06:44:49   8  	  settings_table_name => 'svmc_settings');
06:44:49   9  END;
06:44:49  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.54
06:45:17 SQL> 
06:45:17 SQL> -----------------------------------------------------------------------
06:45:17 SQL> --			       APPLY/score THE MODEL
06:45:17 SQL> -----------------------------------------------------------------------
06:45:17 SQL> 
06:45:17 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:45:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:45:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:45:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:45:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:45:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:45:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:45:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:45:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:45:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:45:17 SQL> -----------------------
06:45:17 SQL> -- PREPARE SCORING DATA
06:45:17 SQL> --
06:45:17 SQL> -- If the data for model creation has been prepared, then the data
06:45:17 SQL> -- to be scored using the model must be prepared in the same manner
06:45:17 SQL> -- in order to obtain meaningful results.
06:45:17 SQL> --
06:45:17 SQL> -- 1. Missing Value treatment for all Predictors and
06:45:17 SQL> -- 2. Normalization
06:45:17 SQL> -- No outlier treatment will be performed during test and apply. The
06:45:17 SQL> -- normalization step is sufficient, since the normalization parameters
06:45:17 SQL> -- already capture the effects of outlier treatment done with build data.
06:45:17 SQL> --
06:45:17 SQL> BEGIN
06:45:17   2  	-- Xform Test data to replace missing values
06:45:17   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:45:17   4  	  miss_table_name => 'svmc_miss_num',
06:45:17   5  	  data_table_name => '&scoretable',
06:45:17   6  	  xform_view_name => 'xformed_apply_miss_num');
06:45:17   7  
06:45:17   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:45:17   9  	  miss_table_name => 'svmc_miss_cat',
06:45:17  10  	  data_table_name => '&scoretable',
06:45:17  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:45:17  12  
06:45:17  13  	-- Normalize the data to be scored
06:45:17  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:45:17  15  	  norm_table_name => 'svmc_norm',
06:45:17  16  	  data_table_name => '&scoretable',
06:45:17  17  	  xform_view_name => 'svmc_apply_prep');
06:45:17  18  END;
06:45:17  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.36
06:45:18 SQL> 
06:45:18 SQL> -- Use same model_name used in score.sql
06:45:18 SQL> DEFINE model_name = 'forex14'
06:45:18 SQL> 
06:45:18 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
06:45:18 SQL> 
06:45:18 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
06:45:18 SQL> 
06:45:18 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
06:45:18   2  SELECT
06:45:18   3  prdate
06:45:18   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:45:18   5  ,sysdate
06:45:18   6  ,SUBSTR(prdate,1,3)pair
06:45:18   7  ,SUBSTR(prdate,4,19)ydate
06:45:18   8  FROM svmc_apply_prep
06:45:18   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
06:45:19 SQL> @aud_score1day.sql  2010-12-31 06:30:00
06:45:19 SQL> --
06:45:19 SQL> -- aud_score1day.sql
06:45:19 SQL> --
06:45:19 SQL> 
06:45:19 SQL> CREATE OR REPLACE VIEW sme AS
06:45:19   2  SELECT
06:45:19   3  'aud'||m.ydate prdate
06:45:19   4  ,NULL gatt
06:45:19   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:45:19   6  ,eur_g00
06:45:19   7  ,eur_g01
06:45:19   8  ,eur_g02
06:45:19   9  ,eur_g03
06:45:19  10  ,eur_g04
06:45:19  11  ,eur_g05
06:45:19  12  ,eur_g06
06:45:19  13  ,eur_g07
06:45:19  14  ,eur_g08
06:45:19  15  ,eur_g09
06:45:19  16  ,eur_g10
06:45:19  17  ,eur_g11
06:45:19  18  ,eur_g12
06:45:19  19  ,eur_g13
06:45:19  20  ,eur_g14
06:45:19  21  ,eur_g15
06:45:19  22  ,eur_g16
06:45:19  23  ,eur_g17
06:45:19  24  ,eur_g18
06:45:19  25  ,eur_g19
06:45:19  26  ,eur_g20
06:45:19  27  ,eur_g21
06:45:19  28  ,eur_g22
06:45:19  29  ,eur_g23
06:45:19  30  ,eur_g24
06:45:19  31  ,eur_g25
06:45:19  32  ,eur_g26
06:45:19  33  ,eur_g27
06:45:19  34  ,eur_g28
06:45:19  35  ,eur_g29
06:45:19  36  ,eur_g30
06:45:19  37  ,eur_g31
06:45:19  38  ,eur_g32
06:45:19  39  ,eur_g33
06:45:19  40  ,eur_g34
06:45:19  41  ,eur_g35
06:45:19  42  ,eur_g36
06:45:19  43  ,eur_g37
06:45:19  44  ,eur_g38
06:45:19  45  ,eur_g39
06:45:19  46  ,eur_g40
06:45:19  47  ,eur_g41
06:45:19  48  ,aud_g00
06:45:19  49  ,aud_g01
06:45:19  50  ,aud_g02
06:45:19  51  ,aud_g03
06:45:19  52  ,aud_g04
06:45:19  53  ,aud_g05
06:45:19  54  ,aud_g06
06:45:19  55  ,aud_g07
06:45:19  56  ,aud_g08
06:45:19  57  ,aud_g09
06:45:19  58  ,aud_g10
06:45:19  59  ,aud_g11
06:45:19  60  ,aud_g12
06:45:19  61  ,aud_g13
06:45:19  62  ,aud_g14
06:45:19  63  ,aud_g15
06:45:19  64  ,aud_g16
06:45:19  65  ,aud_g17
06:45:19  66  ,aud_g18
06:45:19  67  ,aud_g19
06:45:19  68  ,aud_g20
06:45:19  69  ,aud_g21
06:45:19  70  ,aud_g22
06:45:19  71  ,aud_g23
06:45:19  72  ,aud_g24
06:45:19  73  ,aud_g25
06:45:19  74  ,aud_g26
06:45:19  75  ,aud_g27
06:45:19  76  ,aud_g28
06:45:19  77  ,aud_g29
06:45:19  78  ,aud_g30
06:45:19  79  ,aud_g31
06:45:19  80  ,aud_g32
06:45:19  81  ,aud_g33
06:45:19  82  ,aud_g34
06:45:19  83  ,aud_g35
06:45:19  84  ,aud_g36
06:45:19  85  ,aud_g37
06:45:19  86  ,aud_g38
06:45:19  87  ,aud_g39
06:45:19  88  ,aud_g40
06:45:19  89  ,aud_g41
06:45:19  90  ,gbp_g00
06:45:19  91  ,gbp_g01
06:45:19  92  ,gbp_g02
06:45:19  93  ,gbp_g03
06:45:19  94  ,gbp_g04
06:45:19  95  ,gbp_g05
06:45:19  96  ,gbp_g06
06:45:19  97  ,gbp_g07
06:45:19  98  ,gbp_g08
06:45:19  99  ,gbp_g09
06:45:19 100  ,gbp_g10
06:45:19 101  ,gbp_g11
06:45:19 102  ,gbp_g12
06:45:19 103  ,gbp_g13
06:45:19 104  ,gbp_g14
06:45:19 105  ,gbp_g15
06:45:19 106  ,gbp_g16
06:45:19 107  ,gbp_g17
06:45:19 108  ,gbp_g18
06:45:19 109  ,gbp_g19
06:45:19 110  ,gbp_g20
06:45:19 111  ,gbp_g21
06:45:19 112  ,gbp_g22
06:45:19 113  ,gbp_g23
06:45:19 114  ,gbp_g24
06:45:19 115  ,gbp_g25
06:45:19 116  ,gbp_g26
06:45:19 117  ,gbp_g27
06:45:19 118  ,gbp_g28
06:45:19 119  ,gbp_g29
06:45:19 120  ,gbp_g30
06:45:19 121  ,gbp_g31
06:45:19 122  ,gbp_g32
06:45:19 123  ,gbp_g33
06:45:19 124  ,gbp_g34
06:45:19 125  ,gbp_g35
06:45:19 126  ,gbp_g36
06:45:19 127  ,gbp_g37
06:45:19 128  ,gbp_g38
06:45:19 129  ,gbp_g39
06:45:19 130  ,gbp_g40
06:45:19 131  ,gbp_g41
06:45:19 132  ,jpy_g00
06:45:19 133  ,jpy_g01
06:45:19 134  ,jpy_g02
06:45:19 135  ,jpy_g03
06:45:19 136  ,jpy_g04
06:45:19 137  ,jpy_g05
06:45:19 138  ,jpy_g06
06:45:19 139  ,jpy_g07
06:45:19 140  ,jpy_g08
06:45:19 141  ,jpy_g09
06:45:19 142  ,jpy_g10
06:45:19 143  ,jpy_g11
06:45:19 144  ,jpy_g12
06:45:19 145  ,jpy_g13
06:45:19 146  ,jpy_g14
06:45:19 147  ,jpy_g15
06:45:19 148  ,jpy_g16
06:45:19 149  ,jpy_g17
06:45:19 150  ,jpy_g18
06:45:19 151  ,jpy_g19
06:45:19 152  ,jpy_g20
06:45:19 153  ,jpy_g21
06:45:19 154  ,jpy_g22
06:45:19 155  ,jpy_g23
06:45:19 156  ,jpy_g24
06:45:19 157  ,jpy_g25
06:45:19 158  ,jpy_g26
06:45:19 159  ,jpy_g27
06:45:19 160  ,jpy_g28
06:45:19 161  ,jpy_g29
06:45:19 162  ,jpy_g30
06:45:19 163  ,jpy_g31
06:45:19 164  ,jpy_g32
06:45:19 165  ,jpy_g33
06:45:19 166  ,jpy_g34
06:45:19 167  ,jpy_g35
06:45:19 168  ,jpy_g36
06:45:19 169  ,jpy_g37
06:45:19 170  ,jpy_g38
06:45:19 171  ,jpy_g39
06:45:19 172  ,jpy_g40
06:45:19 173  ,jpy_g41
06:45:19 174  ,cad_g00
06:45:19 175  ,cad_g01
06:45:19 176  ,cad_g02
06:45:19 177  ,cad_g03
06:45:19 178  ,cad_g04
06:45:19 179  ,cad_g05
06:45:19 180  ,cad_g06
06:45:19 181  ,cad_g07
06:45:19 182  ,cad_g08
06:45:19 183  ,cad_g09
06:45:19 184  ,cad_g10
06:45:19 185  ,cad_g11
06:45:19 186  ,cad_g12
06:45:19 187  ,cad_g13
06:45:19 188  ,cad_g14
06:45:19 189  ,cad_g15
06:45:19 190  ,cad_g16
06:45:19 191  ,cad_g17
06:45:19 192  ,cad_g18
06:45:19 193  ,cad_g19
06:45:19 194  ,cad_g20
06:45:19 195  ,cad_g21
06:45:19 196  ,cad_g22
06:45:19 197  ,cad_g23
06:45:19 198  ,cad_g24
06:45:19 199  ,cad_g25
06:45:19 200  ,cad_g26
06:45:19 201  ,cad_g27
06:45:19 202  ,cad_g28
06:45:19 203  ,cad_g29
06:45:19 204  ,cad_g30
06:45:19 205  ,cad_g31
06:45:19 206  ,cad_g32
06:45:19 207  ,cad_g33
06:45:19 208  ,cad_g34
06:45:19 209  ,cad_g35
06:45:19 210  ,cad_g36
06:45:19 211  ,cad_g37
06:45:19 212  ,cad_g38
06:45:19 213  ,cad_g39
06:45:19 214  ,cad_g40
06:45:19 215  ,cad_g41
06:45:19 216  ,chf_g00
06:45:19 217  ,chf_g01
06:45:19 218  ,chf_g02
06:45:19 219  ,chf_g03
06:45:19 220  ,chf_g04
06:45:19 221  ,chf_g05
06:45:19 222  ,chf_g06
06:45:19 223  ,chf_g07
06:45:19 224  ,chf_g08
06:45:19 225  ,chf_g09
06:45:19 226  ,chf_g10
06:45:19 227  ,chf_g11
06:45:19 228  ,chf_g12
06:45:19 229  ,chf_g13
06:45:19 230  ,chf_g14
06:45:19 231  ,chf_g15
06:45:19 232  ,chf_g16
06:45:19 233  ,chf_g17
06:45:19 234  ,chf_g18
06:45:19 235  ,chf_g19
06:45:19 236  ,chf_g20
06:45:19 237  ,chf_g21
06:45:19 238  ,chf_g22
06:45:19 239  ,chf_g23
06:45:19 240  ,chf_g24
06:45:19 241  ,chf_g25
06:45:19 242  ,chf_g26
06:45:19 243  ,chf_g27
06:45:19 244  ,chf_g28
06:45:19 245  ,chf_g29
06:45:19 246  ,chf_g30
06:45:19 247  ,chf_g31
06:45:19 248  ,chf_g32
06:45:19 249  ,chf_g33
06:45:19 250  ,chf_g34
06:45:19 251  ,chf_g35
06:45:19 252  ,chf_g36
06:45:19 253  ,chf_g37
06:45:19 254  ,chf_g38
06:45:19 255  ,chf_g39
06:45:19 256  ,chf_g40
06:45:19 257  ,chf_g41
06:45:19 258  FROM aud_ms6 m
06:45:19 259  WHERE m.ydate = '&1'||' '||'&2'
06:45:19 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'06:30:00'

View created.

Elapsed: 00:00:00.15
06:45:19 SQL> 
06:45:19 SQL> -- rpt
06:45:19 SQL> -- We should see just 1 row:
06:45:19 SQL> 
06:45:19 SQL> SELECT COUNT(prdate) FROM sme
06:45:19   2  
06:45:19 SQL> -- Build the model:
06:45:19 SQL> CREATE OR REPLACE VIEW bme AS
06:45:19   2  SELECT
06:45:19   3  'aud'||m.ydate prdate
06:45:19   4  ,gatt
06:45:19   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:45:19   6  ,eur_g00
06:45:19   7  ,eur_g01
06:45:19   8  ,eur_g02
06:45:19   9  ,eur_g03
06:45:19  10  ,eur_g04
06:45:19  11  ,eur_g05
06:45:19  12  ,eur_g06
06:45:19  13  ,eur_g07
06:45:19  14  ,eur_g08
06:45:19  15  ,eur_g09
06:45:19  16  ,eur_g10
06:45:19  17  ,eur_g11
06:45:19  18  ,eur_g12
06:45:19  19  ,eur_g13
06:45:19  20  ,eur_g14
06:45:19  21  ,eur_g15
06:45:19  22  ,eur_g16
06:45:19  23  ,eur_g17
06:45:19  24  ,eur_g18
06:45:19  25  ,eur_g19
06:45:19  26  ,eur_g20
06:45:19  27  ,eur_g21
06:45:19  28  ,eur_g22
06:45:19  29  ,eur_g23
06:45:19  30  ,eur_g24
06:45:19  31  ,eur_g25
06:45:19  32  ,eur_g26
06:45:19  33  ,eur_g27
06:45:19  34  ,eur_g28
06:45:19  35  ,eur_g29
06:45:19  36  ,eur_g30
06:45:19  37  ,eur_g31
06:45:19  38  ,eur_g32
06:45:19  39  ,eur_g33
06:45:19  40  ,eur_g34
06:45:19  41  ,eur_g35
06:45:19  42  ,eur_g36
06:45:19  43  ,eur_g37
06:45:19  44  ,eur_g38
06:45:19  45  ,eur_g39
06:45:19  46  ,eur_g40
06:45:19  47  ,eur_g41
06:45:19  48  ,aud_g00
06:45:19  49  ,aud_g01
06:45:19  50  ,aud_g02
06:45:19  51  ,aud_g03
06:45:19  52  ,aud_g04
06:45:19  53  ,aud_g05
06:45:19  54  ,aud_g06
06:45:19  55  ,aud_g07
06:45:19  56  ,aud_g08
06:45:19  57  ,aud_g09
06:45:19  58  ,aud_g10
06:45:19  59  ,aud_g11
06:45:19  60  ,aud_g12
06:45:19  61  ,aud_g13
06:45:19  62  ,aud_g14
06:45:19  63  ,aud_g15
06:45:19  64  ,aud_g16
06:45:19  65  ,aud_g17
06:45:19  66  ,aud_g18
06:45:19  67  ,aud_g19
06:45:19  68  ,aud_g20
06:45:19  69  ,aud_g21
06:45:19  70  ,aud_g22
06:45:19  71  ,aud_g23
06:45:19  72  ,aud_g24
06:45:19  73  ,aud_g25
06:45:19  74  ,aud_g26
06:45:19  75  ,aud_g27
06:45:19  76  ,aud_g28
06:45:19  77  ,aud_g29
06:45:19  78  ,aud_g30
06:45:19  79  ,aud_g31
06:45:19  80  ,aud_g32
06:45:19  81  ,aud_g33
06:45:19  82  ,aud_g34
06:45:19  83  ,aud_g35
06:45:19  84  ,aud_g36
06:45:19  85  ,aud_g37
06:45:19  86  ,aud_g38
06:45:19  87  ,aud_g39
06:45:19  88  ,aud_g40
06:45:19  89  ,aud_g41
06:45:19  90  ,gbp_g00
06:45:19  91  ,gbp_g01
06:45:19  92  ,gbp_g02
06:45:19  93  ,gbp_g03
06:45:19  94  ,gbp_g04
06:45:19  95  ,gbp_g05
06:45:19  96  ,gbp_g06
06:45:19  97  ,gbp_g07
06:45:19  98  ,gbp_g08
06:45:19  99  ,gbp_g09
06:45:19 100  ,gbp_g10
06:45:19 101  ,gbp_g11
06:45:19 102  ,gbp_g12
06:45:19 103  ,gbp_g13
06:45:19 104  ,gbp_g14
06:45:19 105  ,gbp_g15
06:45:19 106  ,gbp_g16
06:45:19 107  ,gbp_g17
06:45:19 108  ,gbp_g18
06:45:19 109  ,gbp_g19
06:45:19 110  ,gbp_g20
06:45:19 111  ,gbp_g21
06:45:19 112  ,gbp_g22
06:45:19 113  ,gbp_g23
06:45:19 114  ,gbp_g24
06:45:19 115  ,gbp_g25
06:45:19 116  ,gbp_g26
06:45:19 117  ,gbp_g27
06:45:19 118  ,gbp_g28
06:45:19 119  ,gbp_g29
06:45:19 120  ,gbp_g30
06:45:19 121  ,gbp_g31
06:45:19 122  ,gbp_g32
06:45:19 123  ,gbp_g33
06:45:19 124  ,gbp_g34
06:45:19 125  ,gbp_g35
06:45:19 126  ,gbp_g36
06:45:19 127  ,gbp_g37
06:45:19 128  ,gbp_g38
06:45:19 129  ,gbp_g39
06:45:19 130  ,gbp_g40
06:45:19 131  ,gbp_g41
06:45:19 132  ,jpy_g00
06:45:19 133  ,jpy_g01
06:45:19 134  ,jpy_g02
06:45:19 135  ,jpy_g03
06:45:19 136  ,jpy_g04
06:45:19 137  ,jpy_g05
06:45:19 138  ,jpy_g06
06:45:19 139  ,jpy_g07
06:45:19 140  ,jpy_g08
06:45:19 141  ,jpy_g09
06:45:19 142  ,jpy_g10
06:45:19 143  ,jpy_g11
06:45:19 144  ,jpy_g12
06:45:19 145  ,jpy_g13
06:45:19 146  ,jpy_g14
06:45:19 147  ,jpy_g15
06:45:19 148  ,jpy_g16
06:45:19 149  ,jpy_g17
06:45:19 150  ,jpy_g18
06:45:19 151  ,jpy_g19
06:45:19 152  ,jpy_g20
06:45:19 153  ,jpy_g21
06:45:19 154  ,jpy_g22
06:45:19 155  ,jpy_g23
06:45:19 156  ,jpy_g24
06:45:19 157  ,jpy_g25
06:45:19 158  ,jpy_g26
06:45:19 159  ,jpy_g27
06:45:19 160  ,jpy_g28
06:45:19 161  ,jpy_g29
06:45:19 162  ,jpy_g30
06:45:19 163  ,jpy_g31
06:45:19 164  ,jpy_g32
06:45:19 165  ,jpy_g33
06:45:19 166  ,jpy_g34
06:45:19 167  ,jpy_g35
06:45:19 168  ,jpy_g36
06:45:19 169  ,jpy_g37
06:45:19 170  ,jpy_g38
06:45:19 171  ,jpy_g39
06:45:19 172  ,jpy_g40
06:45:19 173  ,jpy_g41
06:45:19 174  ,cad_g00
06:45:19 175  ,cad_g01
06:45:19 176  ,cad_g02
06:45:19 177  ,cad_g03
06:45:19 178  ,cad_g04
06:45:19 179  ,cad_g05
06:45:19 180  ,cad_g06
06:45:19 181  ,cad_g07
06:45:19 182  ,cad_g08
06:45:19 183  ,cad_g09
06:45:19 184  ,cad_g10
06:45:19 185  ,cad_g11
06:45:19 186  ,cad_g12
06:45:19 187  ,cad_g13
06:45:19 188  ,cad_g14
06:45:19 189  ,cad_g15
06:45:19 190  ,cad_g16
06:45:19 191  ,cad_g17
06:45:19 192  ,cad_g18
06:45:19 193  ,cad_g19
06:45:19 194  ,cad_g20
06:45:19 195  ,cad_g21
06:45:19 196  ,cad_g22
06:45:19 197  ,cad_g23
06:45:19 198  ,cad_g24
06:45:19 199  ,cad_g25
06:45:19 200  ,cad_g26
06:45:19 201  ,cad_g27
06:45:19 202  ,cad_g28
06:45:19 203  ,cad_g29
06:45:19 204  ,cad_g30
06:45:19 205  ,cad_g31
06:45:19 206  ,cad_g32
06:45:19 207  ,cad_g33
06:45:19 208  ,cad_g34
06:45:19 209  ,cad_g35
06:45:19 210  ,cad_g36
06:45:19 211  ,cad_g37
06:45:19 212  ,cad_g38
06:45:19 213  ,cad_g39
06:45:19 214  ,cad_g40
06:45:19 215  ,cad_g41
06:45:19 216  ,chf_g00
06:45:19 217  ,chf_g01
06:45:19 218  ,chf_g02
06:45:19 219  ,chf_g03
06:45:19 220  ,chf_g04
06:45:19 221  ,chf_g05
06:45:19 222  ,chf_g06
06:45:19 223  ,chf_g07
06:45:19 224  ,chf_g08
06:45:19 225  ,chf_g09
06:45:19 226  ,chf_g10
06:45:19 227  ,chf_g11
06:45:19 228  ,chf_g12
06:45:19 229  ,chf_g13
06:45:19 230  ,chf_g14
06:45:19 231  ,chf_g15
06:45:19 232  ,chf_g16
06:45:19 233  ,chf_g17
06:45:19 234  ,chf_g18
06:45:19 235  ,chf_g19
06:45:19 236  ,chf_g20
06:45:19 237  ,chf_g21
06:45:19 238  ,chf_g22
06:45:19 239  ,chf_g23
06:45:19 240  ,chf_g24
06:45:19 241  ,chf_g25
06:45:19 242  ,chf_g26
06:45:19 243  ,chf_g27
06:45:19 244  ,chf_g28
06:45:19 245  ,chf_g29
06:45:19 246  ,chf_g30
06:45:19 247  ,chf_g31
06:45:19 248  ,chf_g32
06:45:19 249  ,chf_g33
06:45:19 250  ,chf_g34
06:45:19 251  ,chf_g35
06:45:19 252  ,chf_g36
06:45:19 253  ,chf_g37
06:45:19 254  ,chf_g38
06:45:19 255  ,chf_g39
06:45:19 256  ,chf_g40
06:45:19 257  ,chf_g41
06:45:19 258  FROM aud_ms6 m
06:45:19 259  WHERE gatt IN('nup','up')
06:45:19 260  AND 1+m.ydate < '&1'||' '||'&2'
06:45:19 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'06:30:00'

View created.

Elapsed: 00:00:00.11
06:45:19 SQL> 
06:45:19 SQL> -- rpt
06:45:19 SQL> 
06:45:19 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
06:45:19   2  
06:45:19 SQL> SELECT MAX(prdate) FROM bme
06:45:19   2  
06:45:19 SQL> -- Now build model from bme and score sme
06:45:19 SQL> @score1.sql
06:45:19 SQL> -- score1.sql
06:45:19 SQL> 
06:45:19 SQL> -- Does the 1st SVM score
06:45:19 SQL> 
06:45:19 SQL> -- Fill up svmc_apply_prep
06:45:19 SQL> @score.sql
06:45:19 SQL> --
06:45:19 SQL> -- score.sql
06:45:19 SQL> --
06:45:19 SQL> 
06:45:19 SQL> -- usage: score.sql
06:45:19 SQL> 
06:45:19 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:45:19 SQL> 
06:45:19 SQL> DEFINE target	= 'gatt'
06:45:19 SQL> DEFINE model_name = 'forex14'
06:45:19 SQL> DEFINE bldtable	= 'bme'
06:45:19 SQL> DEFINE scoretable = 'sme'
06:45:19 SQL> DEFINE case_id	= 'prdate'
06:45:19 SQL> 
06:45:19 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:45:19 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:45:19 SQL> 
06:45:19 SQL> -- Builds an SVM model using pl/sql.
06:45:19 SQL> 
06:45:19 SQL> -----------------------------------------------------------------------
06:45:19 SQL> --			    BUILD THE MODEL
06:45:19 SQL> -----------------------------------------------------------------------
06:45:19 SQL> 
06:45:19 SQL> -- Cleanup old build data preparation objects for repeat runs
06:45:19 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
06:45:19 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:45:19 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
06:45:19 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
06:45:19 SQL> 
06:45:19 SQL> 
06:45:19 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:45:19 SQL> --
06:45:19 SQL> -- DROP	TABLE svmc_settings ;
06:45:19 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:45:19 SQL> -- DELETE svmc_settings;
06:45:19 SQL> 
06:45:19 SQL> -- The default classification algorithm is Naive Bayes. So override
06:45:19 SQL> -- this choice to SVM using a settings table.
06:45:19 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:45:19 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:45:19 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:45:19 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:45:19 SQL> -- models.
06:45:19 SQL> --
06:45:19 SQL> 
06:45:19 SQL> -- Do this once and then comment it out.
06:45:19 SQL> -- That makes script go faster.
06:45:19 SQL> -- BEGIN
06:45:19 SQL> -- -- Populate settings table
06:45:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:45:19 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:45:19 SQL> --
06:45:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:45:19 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:45:19 SQL> --
06:45:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:45:19 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:45:19 SQL> --   COMMIT;
06:45:19 SQL> -- END;
06:45:19 SQL> -- /
06:45:19 SQL> 
06:45:19 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:45:19 SQL> 
06:45:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:45:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:45:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:45:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:45:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:45:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:45:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:45:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:45:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:45:19 SQL> 
06:45:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:45:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:45:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:45:19 SQL> 
06:45:19 SQL> --------------------------------
06:45:19 SQL> -- PREPARE BUILD (TRAINING) DATA
06:45:19 SQL> --
06:45:19 SQL> 
06:45:19 SQL> -- 1. Missing Value treatment for all Predictors and
06:45:19 SQL> -- 2. Outlier Treatment and
06:45:19 SQL> -- 3. Normalization are performed below.
06:45:19 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:45:19 SQL> --    normalized here.
06:45:19 SQL> 
06:45:19 SQL> BEGIN
06:45:19   2  	-- Perform missing value treatment for all predictors
06:45:19   3  	-- create miss tables
06:45:19   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:45:19   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:45:19   6  
06:45:19   7  	-- populate miss tables
06:45:19   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:45:19   9  	  miss_table_name => 'svmc_miss_num',
06:45:19  10  	  data_table_name => '&bldtable',
06:45:19  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:45:19  12  
06:45:19  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:45:19  14  	  miss_table_name => 'svmc_miss_cat',
06:45:19  15  	  data_table_name => '&bldtable',
06:45:19  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:45:19  17  
06:45:19  18  	-- xform input data to replace missing values
06:45:19  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:45:19  20  	  miss_table_name => 'svmc_miss_num',
06:45:19  21  	  data_table_name => '&bldtable',
06:45:19  22  	  xform_view_name => 'xformed_build_miss_num');
06:45:19  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:45:19  24  	  miss_table_name => 'svmc_miss_cat',
06:45:19  25  	  data_table_name => '&bldtable',
06:45:19  26  	  xform_view_name => 'xformed_build_miss_cat');
06:45:19  27  
06:45:19  28  	-- Perform outlier treatment.
06:45:19  29  	-- create clip table
06:45:19  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:45:19  31  
06:45:19  32  	-- populate clip table
06:45:19  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:45:19  34  	  clip_table_name => 'svmc_clip',
06:45:19  35  	  data_table_name => '&bldtable',
06:45:19  36  	  tail_frac	  => 0.025,
06:45:19  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:45:19  38  
06:45:19  39  	-- xform input data to winsorized data
06:45:19  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:45:19  41  	  clip_table_name => 'svmc_clip',
06:45:19  42  	  data_table_name => '&bldtable',
06:45:19  43  	  xform_view_name => 'svmc_winsor');
06:45:19  44  
06:45:19  45  	-- create normalization table
06:45:19  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:45:19  47  
06:45:19  48  	-- populate normalization table based on winsorized data
06:45:19  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:45:19  50  	  norm_table_name => 'svmc_norm',
06:45:19  51  	  data_table_name => 'svmc_winsor',
06:45:19  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:45:19  53  
06:45:19  54  	-- normalize the original data
06:45:19  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:45:19  56  	  norm_table_name => 'svmc_norm',
06:45:19  57  	  data_table_name => '&bldtable',
06:45:19  58  	  xform_view_name => 'svmc_build_prep');
06:45:19  59  END;
06:45:19  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.44
06:45:38 SQL> 
06:45:38 SQL> ---------------------
06:45:38 SQL> -- CREATE A NEW MODEL
06:45:38 SQL> --
06:45:38 SQL> -- Cleanup old model with the same name for repeat runs
06:45:38 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:45:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:45:38   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.45
06:45:39 SQL> 
06:45:39 SQL> -- Build a new SVM Model
06:45:39 SQL> BEGIN
06:45:39   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:45:39   3  	  model_name	      => '&model_name',
06:45:39   4  	  mining_function     => dbms_data_mining.classification,
06:45:39   5  	  data_table_name     => 'svmc_build_prep',
06:45:39   6  	  case_id_column_name => '&case_id',
06:45:39   7  	  target_column_name  => '&target',
06:45:39   8  	  settings_table_name => 'svmc_settings');
06:45:39   9  END;
06:45:39  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.06
06:46:07 SQL> 
06:46:07 SQL> -----------------------------------------------------------------------
06:46:07 SQL> --			       APPLY/score THE MODEL
06:46:07 SQL> -----------------------------------------------------------------------
06:46:07 SQL> 
06:46:07 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:46:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:46:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:46:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
06:46:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:46:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:46:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:46:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:46:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:46:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:46:07 SQL> -----------------------
06:46:07 SQL> -- PREPARE SCORING DATA
06:46:07 SQL> --
06:46:07 SQL> -- If the data for model creation has been prepared, then the data
06:46:07 SQL> -- to be scored using the model must be prepared in the same manner
06:46:07 SQL> -- in order to obtain meaningful results.
06:46:07 SQL> --
06:46:07 SQL> -- 1. Missing Value treatment for all Predictors and
06:46:07 SQL> -- 2. Normalization
06:46:07 SQL> -- No outlier treatment will be performed during test and apply. The
06:46:07 SQL> -- normalization step is sufficient, since the normalization parameters
06:46:07 SQL> -- already capture the effects of outlier treatment done with build data.
06:46:07 SQL> --
06:46:07 SQL> BEGIN
06:46:07   2  	-- Xform Test data to replace missing values
06:46:07   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:46:07   4  	  miss_table_name => 'svmc_miss_num',
06:46:07   5  	  data_table_name => '&scoretable',
06:46:07   6  	  xform_view_name => 'xformed_apply_miss_num');
06:46:07   7  
06:46:07   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:46:07   9  	  miss_table_name => 'svmc_miss_cat',
06:46:07  10  	  data_table_name => '&scoretable',
06:46:07  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:46:07  12  
06:46:07  13  	-- Normalize the data to be scored
06:46:07  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:46:07  15  	  norm_table_name => 'svmc_norm',
06:46:07  16  	  data_table_name => '&scoretable',
06:46:07  17  	  xform_view_name => 'svmc_apply_prep');
06:46:07  18  END;
06:46:07  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
06:46:08 SQL> 
06:46:08 SQL> -- Use same model_name used in score.sql
06:46:08 SQL> DEFINE model_name = 'forex14'
06:46:08 SQL> 
06:46:08 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
06:46:08 SQL> 
06:46:08 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
06:46:09 SQL> 
06:46:09 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
06:46:09   2  SELECT
06:46:09   3  prdate
06:46:09   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:46:09   5  ,sysdate
06:46:09   6  ,SUBSTR(prdate,1,3)pair
06:46:09   7  ,SUBSTR(prdate,4,19)ydate
06:46:09   8  FROM svmc_apply_prep
06:46:09   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
06:46:09 SQL> @aud_score1day_gattn.sql	2010-12-31 06:20:00
06:46:09 SQL> --
06:46:09 SQL> -- aud_score1day_gattn.sql
06:46:09 SQL> --
06:46:09 SQL> 
06:46:09 SQL> CREATE OR REPLACE VIEW sme AS
06:46:09   2  SELECT
06:46:09   3  'aud'||m.ydate prdate
06:46:09   4  ,NULL gattn
06:46:09   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:46:09   6  ,eur_g00
06:46:09   7  ,eur_g01
06:46:09   8  ,eur_g02
06:46:09   9  ,eur_g03
06:46:09  10  ,eur_g04
06:46:09  11  ,eur_g05
06:46:09  12  ,eur_g06
06:46:09  13  ,eur_g07
06:46:09  14  ,eur_g08
06:46:09  15  ,eur_g09
06:46:09  16  ,eur_g10
06:46:09  17  ,eur_g11
06:46:09  18  ,eur_g12
06:46:09  19  ,eur_g13
06:46:09  20  ,eur_g14
06:46:09  21  ,eur_g15
06:46:09  22  ,eur_g16
06:46:09  23  ,eur_g17
06:46:09  24  ,eur_g18
06:46:09  25  ,eur_g19
06:46:09  26  ,eur_g20
06:46:09  27  ,eur_g21
06:46:09  28  ,eur_g22
06:46:09  29  ,eur_g23
06:46:09  30  ,eur_g24
06:46:09  31  ,eur_g25
06:46:09  32  ,eur_g26
06:46:09  33  ,eur_g27
06:46:09  34  ,eur_g28
06:46:09  35  ,eur_g29
06:46:09  36  ,eur_g30
06:46:09  37  ,eur_g31
06:46:09  38  ,eur_g32
06:46:09  39  ,eur_g33
06:46:09  40  ,eur_g34
06:46:09  41  ,eur_g35
06:46:09  42  ,eur_g36
06:46:09  43  ,eur_g37
06:46:09  44  ,eur_g38
06:46:09  45  ,eur_g39
06:46:09  46  ,eur_g40
06:46:09  47  ,eur_g41
06:46:09  48  ,aud_g00
06:46:09  49  ,aud_g01
06:46:09  50  ,aud_g02
06:46:09  51  ,aud_g03
06:46:09  52  ,aud_g04
06:46:09  53  ,aud_g05
06:46:09  54  ,aud_g06
06:46:09  55  ,aud_g07
06:46:09  56  ,aud_g08
06:46:09  57  ,aud_g09
06:46:09  58  ,aud_g10
06:46:09  59  ,aud_g11
06:46:09  60  ,aud_g12
06:46:09  61  ,aud_g13
06:46:09  62  ,aud_g14
06:46:09  63  ,aud_g15
06:46:09  64  ,aud_g16
06:46:09  65  ,aud_g17
06:46:09  66  ,aud_g18
06:46:09  67  ,aud_g19
06:46:09  68  ,aud_g20
06:46:09  69  ,aud_g21
06:46:09  70  ,aud_g22
06:46:09  71  ,aud_g23
06:46:09  72  ,aud_g24
06:46:09  73  ,aud_g25
06:46:09  74  ,aud_g26
06:46:09  75  ,aud_g27
06:46:09  76  ,aud_g28
06:46:09  77  ,aud_g29
06:46:09  78  ,aud_g30
06:46:09  79  ,aud_g31
06:46:09  80  ,aud_g32
06:46:09  81  ,aud_g33
06:46:09  82  ,aud_g34
06:46:09  83  ,aud_g35
06:46:09  84  ,aud_g36
06:46:09  85  ,aud_g37
06:46:09  86  ,aud_g38
06:46:09  87  ,aud_g39
06:46:09  88  ,aud_g40
06:46:09  89  ,aud_g41
06:46:09  90  ,gbp_g00
06:46:09  91  ,gbp_g01
06:46:09  92  ,gbp_g02
06:46:09  93  ,gbp_g03
06:46:09  94  ,gbp_g04
06:46:09  95  ,gbp_g05
06:46:09  96  ,gbp_g06
06:46:09  97  ,gbp_g07
06:46:09  98  ,gbp_g08
06:46:09  99  ,gbp_g09
06:46:09 100  ,gbp_g10
06:46:09 101  ,gbp_g11
06:46:09 102  ,gbp_g12
06:46:09 103  ,gbp_g13
06:46:09 104  ,gbp_g14
06:46:09 105  ,gbp_g15
06:46:09 106  ,gbp_g16
06:46:09 107  ,gbp_g17
06:46:09 108  ,gbp_g18
06:46:09 109  ,gbp_g19
06:46:09 110  ,gbp_g20
06:46:09 111  ,gbp_g21
06:46:09 112  ,gbp_g22
06:46:09 113  ,gbp_g23
06:46:09 114  ,gbp_g24
06:46:09 115  ,gbp_g25
06:46:09 116  ,gbp_g26
06:46:09 117  ,gbp_g27
06:46:09 118  ,gbp_g28
06:46:09 119  ,gbp_g29
06:46:09 120  ,gbp_g30
06:46:09 121  ,gbp_g31
06:46:09 122  ,gbp_g32
06:46:09 123  ,gbp_g33
06:46:09 124  ,gbp_g34
06:46:09 125  ,gbp_g35
06:46:09 126  ,gbp_g36
06:46:09 127  ,gbp_g37
06:46:09 128  ,gbp_g38
06:46:09 129  ,gbp_g39
06:46:09 130  ,gbp_g40
06:46:09 131  ,gbp_g41
06:46:09 132  ,jpy_g00
06:46:09 133  ,jpy_g01
06:46:09 134  ,jpy_g02
06:46:09 135  ,jpy_g03
06:46:09 136  ,jpy_g04
06:46:09 137  ,jpy_g05
06:46:09 138  ,jpy_g06
06:46:09 139  ,jpy_g07
06:46:09 140  ,jpy_g08
06:46:09 141  ,jpy_g09
06:46:09 142  ,jpy_g10
06:46:09 143  ,jpy_g11
06:46:09 144  ,jpy_g12
06:46:09 145  ,jpy_g13
06:46:09 146  ,jpy_g14
06:46:09 147  ,jpy_g15
06:46:09 148  ,jpy_g16
06:46:09 149  ,jpy_g17
06:46:09 150  ,jpy_g18
06:46:09 151  ,jpy_g19
06:46:09 152  ,jpy_g20
06:46:09 153  ,jpy_g21
06:46:09 154  ,jpy_g22
06:46:09 155  ,jpy_g23
06:46:09 156  ,jpy_g24
06:46:09 157  ,jpy_g25
06:46:09 158  ,jpy_g26
06:46:09 159  ,jpy_g27
06:46:09 160  ,jpy_g28
06:46:09 161  ,jpy_g29
06:46:09 162  ,jpy_g30
06:46:09 163  ,jpy_g31
06:46:09 164  ,jpy_g32
06:46:09 165  ,jpy_g33
06:46:09 166  ,jpy_g34
06:46:09 167  ,jpy_g35
06:46:09 168  ,jpy_g36
06:46:09 169  ,jpy_g37
06:46:09 170  ,jpy_g38
06:46:09 171  ,jpy_g39
06:46:09 172  ,jpy_g40
06:46:09 173  ,jpy_g41
06:46:09 174  ,cad_g00
06:46:09 175  ,cad_g01
06:46:09 176  ,cad_g02
06:46:09 177  ,cad_g03
06:46:09 178  ,cad_g04
06:46:09 179  ,cad_g05
06:46:09 180  ,cad_g06
06:46:09 181  ,cad_g07
06:46:09 182  ,cad_g08
06:46:09 183  ,cad_g09
06:46:09 184  ,cad_g10
06:46:09 185  ,cad_g11
06:46:09 186  ,cad_g12
06:46:09 187  ,cad_g13
06:46:09 188  ,cad_g14
06:46:09 189  ,cad_g15
06:46:09 190  ,cad_g16
06:46:09 191  ,cad_g17
06:46:09 192  ,cad_g18
06:46:09 193  ,cad_g19
06:46:09 194  ,cad_g20
06:46:09 195  ,cad_g21
06:46:09 196  ,cad_g22
06:46:09 197  ,cad_g23
06:46:09 198  ,cad_g24
06:46:09 199  ,cad_g25
06:46:09 200  ,cad_g26
06:46:09 201  ,cad_g27
06:46:09 202  ,cad_g28
06:46:09 203  ,cad_g29
06:46:09 204  ,cad_g30
06:46:09 205  ,cad_g31
06:46:09 206  ,cad_g32
06:46:09 207  ,cad_g33
06:46:09 208  ,cad_g34
06:46:09 209  ,cad_g35
06:46:09 210  ,cad_g36
06:46:09 211  ,cad_g37
06:46:09 212  ,cad_g38
06:46:09 213  ,cad_g39
06:46:09 214  ,cad_g40
06:46:09 215  ,cad_g41
06:46:09 216  ,chf_g00
06:46:09 217  ,chf_g01
06:46:09 218  ,chf_g02
06:46:09 219  ,chf_g03
06:46:09 220  ,chf_g04
06:46:09 221  ,chf_g05
06:46:09 222  ,chf_g06
06:46:09 223  ,chf_g07
06:46:09 224  ,chf_g08
06:46:09 225  ,chf_g09
06:46:09 226  ,chf_g10
06:46:09 227  ,chf_g11
06:46:09 228  ,chf_g12
06:46:09 229  ,chf_g13
06:46:09 230  ,chf_g14
06:46:09 231  ,chf_g15
06:46:09 232  ,chf_g16
06:46:09 233  ,chf_g17
06:46:09 234  ,chf_g18
06:46:09 235  ,chf_g19
06:46:09 236  ,chf_g20
06:46:09 237  ,chf_g21
06:46:09 238  ,chf_g22
06:46:09 239  ,chf_g23
06:46:09 240  ,chf_g24
06:46:09 241  ,chf_g25
06:46:09 242  ,chf_g26
06:46:09 243  ,chf_g27
06:46:09 244  ,chf_g28
06:46:09 245  ,chf_g29
06:46:09 246  ,chf_g30
06:46:09 247  ,chf_g31
06:46:09 248  ,chf_g32
06:46:09 249  ,chf_g33
06:46:09 250  ,chf_g34
06:46:09 251  ,chf_g35
06:46:09 252  ,chf_g36
06:46:09 253  ,chf_g37
06:46:09 254  ,chf_g38
06:46:09 255  ,chf_g39
06:46:09 256  ,chf_g40
06:46:09 257  ,chf_g41
06:46:09 258  FROM aud_ms6 m
06:46:09 259  WHERE m.ydate = '&1'||' '||'&2'
06:46:09 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'06:20:00'

View created.

Elapsed: 00:00:00.13
06:46:09 SQL> 
06:46:09 SQL> -- rpt
06:46:09 SQL> -- We should see just 1 row:
06:46:09 SQL> 
06:46:09 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
06:46:09 SQL> 
06:46:09 SQL> -- Build the model:
06:46:09 SQL> CREATE OR REPLACE VIEW bme AS
06:46:09   2  SELECT
06:46:09   3  'aud'||m.ydate prdate
06:46:09   4  ,gattn
06:46:09   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:46:09   6  ,eur_g00
06:46:09   7  ,eur_g01
06:46:09   8  ,eur_g02
06:46:09   9  ,eur_g03
06:46:09  10  ,eur_g04
06:46:09  11  ,eur_g05
06:46:09  12  ,eur_g06
06:46:09  13  ,eur_g07
06:46:09  14  ,eur_g08
06:46:09  15  ,eur_g09
06:46:09  16  ,eur_g10
06:46:09  17  ,eur_g11
06:46:09  18  ,eur_g12
06:46:09  19  ,eur_g13
06:46:09  20  ,eur_g14
06:46:09  21  ,eur_g15
06:46:09  22  ,eur_g16
06:46:09  23  ,eur_g17
06:46:09  24  ,eur_g18
06:46:09  25  ,eur_g19
06:46:09  26  ,eur_g20
06:46:09  27  ,eur_g21
06:46:09  28  ,eur_g22
06:46:09  29  ,eur_g23
06:46:09  30  ,eur_g24
06:46:09  31  ,eur_g25
06:46:09  32  ,eur_g26
06:46:09  33  ,eur_g27
06:46:09  34  ,eur_g28
06:46:09  35  ,eur_g29
06:46:09  36  ,eur_g30
06:46:09  37  ,eur_g31
06:46:09  38  ,eur_g32
06:46:09  39  ,eur_g33
06:46:09  40  ,eur_g34
06:46:09  41  ,eur_g35
06:46:09  42  ,eur_g36
06:46:09  43  ,eur_g37
06:46:09  44  ,eur_g38
06:46:09  45  ,eur_g39
06:46:09  46  ,eur_g40
06:46:09  47  ,eur_g41
06:46:09  48  ,aud_g00
06:46:09  49  ,aud_g01
06:46:09  50  ,aud_g02
06:46:09  51  ,aud_g03
06:46:09  52  ,aud_g04
06:46:09  53  ,aud_g05
06:46:09  54  ,aud_g06
06:46:09  55  ,aud_g07
06:46:09  56  ,aud_g08
06:46:09  57  ,aud_g09
06:46:09  58  ,aud_g10
06:46:09  59  ,aud_g11
06:46:09  60  ,aud_g12
06:46:09  61  ,aud_g13
06:46:09  62  ,aud_g14
06:46:09  63  ,aud_g15
06:46:09  64  ,aud_g16
06:46:09  65  ,aud_g17
06:46:09  66  ,aud_g18
06:46:09  67  ,aud_g19
06:46:09  68  ,aud_g20
06:46:09  69  ,aud_g21
06:46:09  70  ,aud_g22
06:46:09  71  ,aud_g23
06:46:09  72  ,aud_g24
06:46:09  73  ,aud_g25
06:46:09  74  ,aud_g26
06:46:09  75  ,aud_g27
06:46:09  76  ,aud_g28
06:46:09  77  ,aud_g29
06:46:09  78  ,aud_g30
06:46:09  79  ,aud_g31
06:46:09  80  ,aud_g32
06:46:09  81  ,aud_g33
06:46:09  82  ,aud_g34
06:46:09  83  ,aud_g35
06:46:09  84  ,aud_g36
06:46:09  85  ,aud_g37
06:46:09  86  ,aud_g38
06:46:09  87  ,aud_g39
06:46:09  88  ,aud_g40
06:46:09  89  ,aud_g41
06:46:09  90  ,gbp_g00
06:46:09  91  ,gbp_g01
06:46:09  92  ,gbp_g02
06:46:09  93  ,gbp_g03
06:46:09  94  ,gbp_g04
06:46:09  95  ,gbp_g05
06:46:09  96  ,gbp_g06
06:46:09  97  ,gbp_g07
06:46:09  98  ,gbp_g08
06:46:09  99  ,gbp_g09
06:46:09 100  ,gbp_g10
06:46:09 101  ,gbp_g11
06:46:09 102  ,gbp_g12
06:46:09 103  ,gbp_g13
06:46:09 104  ,gbp_g14
06:46:09 105  ,gbp_g15
06:46:09 106  ,gbp_g16
06:46:09 107  ,gbp_g17
06:46:09 108  ,gbp_g18
06:46:09 109  ,gbp_g19
06:46:09 110  ,gbp_g20
06:46:09 111  ,gbp_g21
06:46:09 112  ,gbp_g22
06:46:09 113  ,gbp_g23
06:46:09 114  ,gbp_g24
06:46:09 115  ,gbp_g25
06:46:09 116  ,gbp_g26
06:46:09 117  ,gbp_g27
06:46:09 118  ,gbp_g28
06:46:09 119  ,gbp_g29
06:46:09 120  ,gbp_g30
06:46:09 121  ,gbp_g31
06:46:09 122  ,gbp_g32
06:46:09 123  ,gbp_g33
06:46:09 124  ,gbp_g34
06:46:09 125  ,gbp_g35
06:46:09 126  ,gbp_g36
06:46:09 127  ,gbp_g37
06:46:09 128  ,gbp_g38
06:46:09 129  ,gbp_g39
06:46:09 130  ,gbp_g40
06:46:09 131  ,gbp_g41
06:46:09 132  ,jpy_g00
06:46:09 133  ,jpy_g01
06:46:09 134  ,jpy_g02
06:46:09 135  ,jpy_g03
06:46:09 136  ,jpy_g04
06:46:09 137  ,jpy_g05
06:46:09 138  ,jpy_g06
06:46:09 139  ,jpy_g07
06:46:09 140  ,jpy_g08
06:46:09 141  ,jpy_g09
06:46:09 142  ,jpy_g10
06:46:09 143  ,jpy_g11
06:46:09 144  ,jpy_g12
06:46:09 145  ,jpy_g13
06:46:09 146  ,jpy_g14
06:46:09 147  ,jpy_g15
06:46:09 148  ,jpy_g16
06:46:09 149  ,jpy_g17
06:46:09 150  ,jpy_g18
06:46:09 151  ,jpy_g19
06:46:09 152  ,jpy_g20
06:46:09 153  ,jpy_g21
06:46:09 154  ,jpy_g22
06:46:09 155  ,jpy_g23
06:46:09 156  ,jpy_g24
06:46:09 157  ,jpy_g25
06:46:09 158  ,jpy_g26
06:46:09 159  ,jpy_g27
06:46:09 160  ,jpy_g28
06:46:09 161  ,jpy_g29
06:46:09 162  ,jpy_g30
06:46:09 163  ,jpy_g31
06:46:09 164  ,jpy_g32
06:46:09 165  ,jpy_g33
06:46:09 166  ,jpy_g34
06:46:09 167  ,jpy_g35
06:46:09 168  ,jpy_g36
06:46:09 169  ,jpy_g37
06:46:09 170  ,jpy_g38
06:46:09 171  ,jpy_g39
06:46:09 172  ,jpy_g40
06:46:09 173  ,jpy_g41
06:46:09 174  ,cad_g00
06:46:09 175  ,cad_g01
06:46:09 176  ,cad_g02
06:46:09 177  ,cad_g03
06:46:09 178  ,cad_g04
06:46:09 179  ,cad_g05
06:46:09 180  ,cad_g06
06:46:09 181  ,cad_g07
06:46:09 182  ,cad_g08
06:46:09 183  ,cad_g09
06:46:09 184  ,cad_g10
06:46:09 185  ,cad_g11
06:46:09 186  ,cad_g12
06:46:09 187  ,cad_g13
06:46:09 188  ,cad_g14
06:46:09 189  ,cad_g15
06:46:09 190  ,cad_g16
06:46:09 191  ,cad_g17
06:46:09 192  ,cad_g18
06:46:09 193  ,cad_g19
06:46:09 194  ,cad_g20
06:46:09 195  ,cad_g21
06:46:09 196  ,cad_g22
06:46:09 197  ,cad_g23
06:46:09 198  ,cad_g24
06:46:09 199  ,cad_g25
06:46:09 200  ,cad_g26
06:46:09 201  ,cad_g27
06:46:09 202  ,cad_g28
06:46:09 203  ,cad_g29
06:46:09 204  ,cad_g30
06:46:09 205  ,cad_g31
06:46:09 206  ,cad_g32
06:46:09 207  ,cad_g33
06:46:09 208  ,cad_g34
06:46:09 209  ,cad_g35
06:46:09 210  ,cad_g36
06:46:09 211  ,cad_g37
06:46:09 212  ,cad_g38
06:46:09 213  ,cad_g39
06:46:09 214  ,cad_g40
06:46:09 215  ,cad_g41
06:46:09 216  ,chf_g00
06:46:09 217  ,chf_g01
06:46:09 218  ,chf_g02
06:46:09 219  ,chf_g03
06:46:09 220  ,chf_g04
06:46:09 221  ,chf_g05
06:46:09 222  ,chf_g06
06:46:09 223  ,chf_g07
06:46:09 224  ,chf_g08
06:46:09 225  ,chf_g09
06:46:09 226  ,chf_g10
06:46:09 227  ,chf_g11
06:46:09 228  ,chf_g12
06:46:09 229  ,chf_g13
06:46:09 230  ,chf_g14
06:46:09 231  ,chf_g15
06:46:09 232  ,chf_g16
06:46:09 233  ,chf_g17
06:46:09 234  ,chf_g18
06:46:09 235  ,chf_g19
06:46:09 236  ,chf_g20
06:46:09 237  ,chf_g21
06:46:09 238  ,chf_g22
06:46:09 239  ,chf_g23
06:46:09 240  ,chf_g24
06:46:09 241  ,chf_g25
06:46:09 242  ,chf_g26
06:46:09 243  ,chf_g27
06:46:09 244  ,chf_g28
06:46:09 245  ,chf_g29
06:46:09 246  ,chf_g30
06:46:09 247  ,chf_g31
06:46:09 248  ,chf_g32
06:46:09 249  ,chf_g33
06:46:09 250  ,chf_g34
06:46:09 251  ,chf_g35
06:46:09 252  ,chf_g36
06:46:09 253  ,chf_g37
06:46:09 254  ,chf_g38
06:46:09 255  ,chf_g39
06:46:09 256  ,chf_g40
06:46:09 257  ,chf_g41
06:46:09 258  FROM aud_ms6 m
06:46:09 259  WHERE gattn IN('nup','up')
06:46:09 260  AND 1+m.ydate < '&1'||' '||'&2'
06:46:09 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'06:20:00'

View created.

Elapsed: 00:00:00.12
06:46:09 SQL> 
06:46:09 SQL> -- rpt
06:46:09 SQL> 
06:46:09 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13145
up	     6392

Elapsed: 00:00:00.05
06:46:09 SQL> 
06:46:09 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 06:15:00

Elapsed: 00:00:00.03
06:46:09 SQL> 
06:46:09 SQL> -- Now build model from bme and score sme
06:46:09 SQL> @score1gattn.sql
06:46:09 SQL> -- score1gattn.sql
06:46:09 SQL> 
06:46:09 SQL> -- Does the 1st SVM score
06:46:09 SQL> 
06:46:09 SQL> -- Fill up svmc_apply_prep
06:46:09 SQL> @score_gattn.sql
06:46:09 SQL> --
06:46:09 SQL> -- score_gattn.sql
06:46:09 SQL> --
06:46:09 SQL> 
06:46:09 SQL> -- usage: score_gattn.sql
06:46:09 SQL> 
06:46:09 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:46:09 SQL> 
06:46:09 SQL> DEFINE target	= 'gattn'
06:46:09 SQL> DEFINE model_name = 'forex14'
06:46:09 SQL> DEFINE bldtable	= 'bme'
06:46:09 SQL> DEFINE scoretable = 'sme'
06:46:09 SQL> DEFINE case_id	= 'prdate'
06:46:09 SQL> 
06:46:09 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:46:09 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:46:09 SQL> 
06:46:09 SQL> -- Builds an SVM model using pl/sql.
06:46:09 SQL> 
06:46:09 SQL> -----------------------------------------------------------------------
06:46:09 SQL> --			    BUILD THE MODEL
06:46:09 SQL> -----------------------------------------------------------------------
06:46:09 SQL> 
06:46:09 SQL> -- Cleanup old build data preparation objects for repeat runs
06:46:09 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
06:46:09 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:46:09 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
06:46:09 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
06:46:09 SQL> 
06:46:09 SQL> 
06:46:09 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:46:09 SQL> --
06:46:09 SQL> -- DROP	TABLE svmc_settings ;
06:46:09 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:46:09 SQL> -- DELETE svmc_settings;
06:46:09 SQL> 
06:46:09 SQL> -- The default classification algorithm is Naive Bayes. So override
06:46:09 SQL> -- this choice to SVM using a settings table.
06:46:09 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:46:09 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:46:09 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:46:09 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:46:09 SQL> -- models.
06:46:09 SQL> --
06:46:09 SQL> 
06:46:09 SQL> -- Do this once and then comment it out.
06:46:09 SQL> -- That makes script go faster.
06:46:09 SQL> -- BEGIN
06:46:09 SQL> -- -- Populate settings table
06:46:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:46:09 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:46:09 SQL> --
06:46:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:46:09 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:46:09 SQL> --
06:46:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:46:09 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:46:09 SQL> --   COMMIT;
06:46:09 SQL> -- END;
06:46:09 SQL> -- /
06:46:09 SQL> 
06:46:09 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:46:09 SQL> 
06:46:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:46:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:46:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:46:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:46:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:46:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
06:46:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:46:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:46:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
06:46:09 SQL> 
06:46:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:46:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:46:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:46:09 SQL> 
06:46:09 SQL> --------------------------------
06:46:09 SQL> -- PREPARE BUILD (TRAINING) DATA
06:46:09 SQL> --
06:46:09 SQL> 
06:46:09 SQL> -- 1. Missing Value treatment for all Predictors and
06:46:09 SQL> -- 2. Outlier Treatment and
06:46:09 SQL> -- 3. Normalization are performed below.
06:46:09 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:46:09 SQL> --    normalized here.
06:46:09 SQL> 
06:46:09 SQL> BEGIN
06:46:09   2  	-- Perform missing value treatment for all predictors
06:46:09   3  	-- create miss tables
06:46:09   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:46:09   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:46:09   6  
06:46:09   7  	-- populate miss tables
06:46:09   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:46:09   9  	  miss_table_name => 'svmc_miss_num',
06:46:09  10  	  data_table_name => '&bldtable',
06:46:09  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:46:09  12  
06:46:09  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:46:09  14  	  miss_table_name => 'svmc_miss_cat',
06:46:09  15  	  data_table_name => '&bldtable',
06:46:09  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:46:09  17  
06:46:09  18  	-- xform input data to replace missing values
06:46:09  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:46:09  20  	  miss_table_name => 'svmc_miss_num',
06:46:09  21  	  data_table_name => '&bldtable',
06:46:09  22  	  xform_view_name => 'xformed_build_miss_num');
06:46:09  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:46:09  24  	  miss_table_name => 'svmc_miss_cat',
06:46:09  25  	  data_table_name => '&bldtable',
06:46:09  26  	  xform_view_name => 'xformed_build_miss_cat');
06:46:09  27  
06:46:09  28  	-- Perform outlier treatment.
06:46:09  29  	-- create clip table
06:46:09  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:46:09  31  
06:46:09  32  	-- populate clip table
06:46:09  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:46:09  34  	  clip_table_name => 'svmc_clip',
06:46:09  35  	  data_table_name => '&bldtable',
06:46:09  36  	  tail_frac	  => 0.025,
06:46:09  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:46:09  38  
06:46:09  39  	-- xform input data to winsorized data
06:46:09  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:46:09  41  	  clip_table_name => 'svmc_clip',
06:46:09  42  	  data_table_name => '&bldtable',
06:46:09  43  	  xform_view_name => 'svmc_winsor');
06:46:09  44  
06:46:09  45  	-- create normalization table
06:46:09  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:46:09  47  
06:46:09  48  	-- populate normalization table based on winsorized data
06:46:09  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:46:09  50  	  norm_table_name => 'svmc_norm',
06:46:09  51  	  data_table_name => 'svmc_winsor',
06:46:09  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:46:09  53  
06:46:09  54  	-- normalize the original data
06:46:09  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:46:09  56  	  norm_table_name => 'svmc_norm',
06:46:09  57  	  data_table_name => '&bldtable',
06:46:09  58  	  xform_view_name => 'svmc_build_prep');
06:46:09  59  END;
06:46:09  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.54
06:46:28 SQL> 
06:46:28 SQL> ---------------------
06:46:28 SQL> -- CREATE A NEW MODEL
06:46:28 SQL> --
06:46:28 SQL> -- Cleanup old model with the same name for repeat runs
06:46:28 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:46:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:46:28   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.90
06:46:29 SQL> 
06:46:29 SQL> -- Build a new SVM Model
06:46:29 SQL> BEGIN
06:46:29   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:46:29   3  	  model_name	      => '&model_name',
06:46:29   4  	  mining_function     => dbms_data_mining.classification,
06:46:29   5  	  data_table_name     => 'svmc_build_prep',
06:46:29   6  	  case_id_column_name => '&case_id',
06:46:29   7  	  target_column_name  => '&target',
06:46:29   8  	  settings_table_name => 'svmc_settings');
06:46:29   9  END;
06:46:29  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.86
06:46:56 SQL> 
06:46:56 SQL> -----------------------------------------------------------------------
06:46:56 SQL> --			       APPLY/score THE MODEL
06:46:56 SQL> -----------------------------------------------------------------------
06:46:56 SQL> 
06:46:56 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:46:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:46:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:46:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:46:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:46:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:46:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:46:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:46:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:46:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:46:56 SQL> -----------------------
06:46:56 SQL> -- PREPARE SCORING DATA
06:46:56 SQL> --
06:46:56 SQL> -- If the data for model creation has been prepared, then the data
06:46:56 SQL> -- to be scored using the model must be prepared in the same manner
06:46:56 SQL> -- in order to obtain meaningful results.
06:46:56 SQL> --
06:46:56 SQL> -- 1. Missing Value treatment for all Predictors and
06:46:56 SQL> -- 2. Normalization
06:46:56 SQL> -- No outlier treatment will be performed during test and apply. The
06:46:56 SQL> -- normalization step is sufficient, since the normalization parameters
06:46:56 SQL> -- already capture the effects of outlier treatment done with build data.
06:46:56 SQL> --
06:46:56 SQL> BEGIN
06:46:56   2  	-- Xform Test data to replace missing values
06:46:56   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:46:56   4  	  miss_table_name => 'svmc_miss_num',
06:46:56   5  	  data_table_name => '&scoretable',
06:46:56   6  	  xform_view_name => 'xformed_apply_miss_num');
06:46:56   7  
06:46:56   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:46:56   9  	  miss_table_name => 'svmc_miss_cat',
06:46:56  10  	  data_table_name => '&scoretable',
06:46:56  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:46:56  12  
06:46:56  13  	-- Normalize the data to be scored
06:46:56  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:46:56  15  	  norm_table_name => 'svmc_norm',
06:46:56  16  	  data_table_name => '&scoretable',
06:46:56  17  	  xform_view_name => 'svmc_apply_prep');
06:46:56  18  END;
06:46:56  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.38
06:46:57 SQL> 
06:46:57 SQL> -- Use same model_name used in score_gattn.sql
06:46:57 SQL> DEFINE model_name = 'forex14'
06:46:57 SQL> 
06:46:57 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
06:46:57 SQL> 
06:46:57 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
06:46:57   2  SELECT
06:46:57   3  prdate
06:46:57   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:46:57   5  ,sysdate
06:46:57   6  ,SUBSTR(prdate,1,3)pair
06:46:57   7  ,SUBSTR(prdate,4,19)ydate
06:46:57   8  FROM svmc_apply_prep
06:46:57   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
06:46:57 SQL> @aud_score1day_gattn.sql	2010-12-31 06:25:00
06:46:57 SQL> --
06:46:57 SQL> -- aud_score1day_gattn.sql
06:46:57 SQL> --
06:46:57 SQL> 
06:46:57 SQL> CREATE OR REPLACE VIEW sme AS
06:46:57   2  SELECT
06:46:57   3  'aud'||m.ydate prdate
06:46:57   4  ,NULL gattn
06:46:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:46:57   6  ,eur_g00
06:46:57   7  ,eur_g01
06:46:57   8  ,eur_g02
06:46:57   9  ,eur_g03
06:46:57  10  ,eur_g04
06:46:57  11  ,eur_g05
06:46:57  12  ,eur_g06
06:46:57  13  ,eur_g07
06:46:57  14  ,eur_g08
06:46:57  15  ,eur_g09
06:46:57  16  ,eur_g10
06:46:57  17  ,eur_g11
06:46:57  18  ,eur_g12
06:46:57  19  ,eur_g13
06:46:57  20  ,eur_g14
06:46:57  21  ,eur_g15
06:46:57  22  ,eur_g16
06:46:57  23  ,eur_g17
06:46:57  24  ,eur_g18
06:46:57  25  ,eur_g19
06:46:57  26  ,eur_g20
06:46:57  27  ,eur_g21
06:46:57  28  ,eur_g22
06:46:57  29  ,eur_g23
06:46:57  30  ,eur_g24
06:46:57  31  ,eur_g25
06:46:57  32  ,eur_g26
06:46:57  33  ,eur_g27
06:46:57  34  ,eur_g28
06:46:57  35  ,eur_g29
06:46:57  36  ,eur_g30
06:46:57  37  ,eur_g31
06:46:57  38  ,eur_g32
06:46:57  39  ,eur_g33
06:46:57  40  ,eur_g34
06:46:57  41  ,eur_g35
06:46:57  42  ,eur_g36
06:46:57  43  ,eur_g37
06:46:57  44  ,eur_g38
06:46:57  45  ,eur_g39
06:46:57  46  ,eur_g40
06:46:57  47  ,eur_g41
06:46:57  48  ,aud_g00
06:46:57  49  ,aud_g01
06:46:57  50  ,aud_g02
06:46:57  51  ,aud_g03
06:46:57  52  ,aud_g04
06:46:57  53  ,aud_g05
06:46:57  54  ,aud_g06
06:46:57  55  ,aud_g07
06:46:57  56  ,aud_g08
06:46:57  57  ,aud_g09
06:46:57  58  ,aud_g10
06:46:57  59  ,aud_g11
06:46:57  60  ,aud_g12
06:46:57  61  ,aud_g13
06:46:57  62  ,aud_g14
06:46:57  63  ,aud_g15
06:46:57  64  ,aud_g16
06:46:57  65  ,aud_g17
06:46:57  66  ,aud_g18
06:46:57  67  ,aud_g19
06:46:57  68  ,aud_g20
06:46:57  69  ,aud_g21
06:46:57  70  ,aud_g22
06:46:57  71  ,aud_g23
06:46:57  72  ,aud_g24
06:46:57  73  ,aud_g25
06:46:57  74  ,aud_g26
06:46:57  75  ,aud_g27
06:46:57  76  ,aud_g28
06:46:57  77  ,aud_g29
06:46:57  78  ,aud_g30
06:46:57  79  ,aud_g31
06:46:57  80  ,aud_g32
06:46:57  81  ,aud_g33
06:46:57  82  ,aud_g34
06:46:57  83  ,aud_g35
06:46:57  84  ,aud_g36
06:46:57  85  ,aud_g37
06:46:57  86  ,aud_g38
06:46:57  87  ,aud_g39
06:46:57  88  ,aud_g40
06:46:57  89  ,aud_g41
06:46:57  90  ,gbp_g00
06:46:57  91  ,gbp_g01
06:46:57  92  ,gbp_g02
06:46:57  93  ,gbp_g03
06:46:57  94  ,gbp_g04
06:46:57  95  ,gbp_g05
06:46:57  96  ,gbp_g06
06:46:57  97  ,gbp_g07
06:46:57  98  ,gbp_g08
06:46:57  99  ,gbp_g09
06:46:57 100  ,gbp_g10
06:46:57 101  ,gbp_g11
06:46:57 102  ,gbp_g12
06:46:57 103  ,gbp_g13
06:46:57 104  ,gbp_g14
06:46:57 105  ,gbp_g15
06:46:57 106  ,gbp_g16
06:46:57 107  ,gbp_g17
06:46:57 108  ,gbp_g18
06:46:57 109  ,gbp_g19
06:46:57 110  ,gbp_g20
06:46:57 111  ,gbp_g21
06:46:57 112  ,gbp_g22
06:46:57 113  ,gbp_g23
06:46:57 114  ,gbp_g24
06:46:57 115  ,gbp_g25
06:46:57 116  ,gbp_g26
06:46:57 117  ,gbp_g27
06:46:57 118  ,gbp_g28
06:46:57 119  ,gbp_g29
06:46:57 120  ,gbp_g30
06:46:57 121  ,gbp_g31
06:46:57 122  ,gbp_g32
06:46:57 123  ,gbp_g33
06:46:57 124  ,gbp_g34
06:46:57 125  ,gbp_g35
06:46:57 126  ,gbp_g36
06:46:57 127  ,gbp_g37
06:46:57 128  ,gbp_g38
06:46:57 129  ,gbp_g39
06:46:57 130  ,gbp_g40
06:46:57 131  ,gbp_g41
06:46:57 132  ,jpy_g00
06:46:57 133  ,jpy_g01
06:46:57 134  ,jpy_g02
06:46:57 135  ,jpy_g03
06:46:57 136  ,jpy_g04
06:46:57 137  ,jpy_g05
06:46:57 138  ,jpy_g06
06:46:57 139  ,jpy_g07
06:46:57 140  ,jpy_g08
06:46:57 141  ,jpy_g09
06:46:57 142  ,jpy_g10
06:46:57 143  ,jpy_g11
06:46:57 144  ,jpy_g12
06:46:57 145  ,jpy_g13
06:46:57 146  ,jpy_g14
06:46:57 147  ,jpy_g15
06:46:57 148  ,jpy_g16
06:46:57 149  ,jpy_g17
06:46:57 150  ,jpy_g18
06:46:57 151  ,jpy_g19
06:46:57 152  ,jpy_g20
06:46:57 153  ,jpy_g21
06:46:57 154  ,jpy_g22
06:46:57 155  ,jpy_g23
06:46:57 156  ,jpy_g24
06:46:57 157  ,jpy_g25
06:46:57 158  ,jpy_g26
06:46:57 159  ,jpy_g27
06:46:57 160  ,jpy_g28
06:46:57 161  ,jpy_g29
06:46:57 162  ,jpy_g30
06:46:57 163  ,jpy_g31
06:46:57 164  ,jpy_g32
06:46:57 165  ,jpy_g33
06:46:57 166  ,jpy_g34
06:46:57 167  ,jpy_g35
06:46:57 168  ,jpy_g36
06:46:57 169  ,jpy_g37
06:46:57 170  ,jpy_g38
06:46:57 171  ,jpy_g39
06:46:57 172  ,jpy_g40
06:46:57 173  ,jpy_g41
06:46:57 174  ,cad_g00
06:46:57 175  ,cad_g01
06:46:57 176  ,cad_g02
06:46:57 177  ,cad_g03
06:46:57 178  ,cad_g04
06:46:57 179  ,cad_g05
06:46:57 180  ,cad_g06
06:46:57 181  ,cad_g07
06:46:57 182  ,cad_g08
06:46:57 183  ,cad_g09
06:46:57 184  ,cad_g10
06:46:57 185  ,cad_g11
06:46:57 186  ,cad_g12
06:46:57 187  ,cad_g13
06:46:57 188  ,cad_g14
06:46:57 189  ,cad_g15
06:46:57 190  ,cad_g16
06:46:57 191  ,cad_g17
06:46:57 192  ,cad_g18
06:46:57 193  ,cad_g19
06:46:57 194  ,cad_g20
06:46:57 195  ,cad_g21
06:46:57 196  ,cad_g22
06:46:57 197  ,cad_g23
06:46:57 198  ,cad_g24
06:46:57 199  ,cad_g25
06:46:57 200  ,cad_g26
06:46:57 201  ,cad_g27
06:46:57 202  ,cad_g28
06:46:57 203  ,cad_g29
06:46:57 204  ,cad_g30
06:46:57 205  ,cad_g31
06:46:57 206  ,cad_g32
06:46:57 207  ,cad_g33
06:46:57 208  ,cad_g34
06:46:57 209  ,cad_g35
06:46:57 210  ,cad_g36
06:46:57 211  ,cad_g37
06:46:57 212  ,cad_g38
06:46:57 213  ,cad_g39
06:46:57 214  ,cad_g40
06:46:57 215  ,cad_g41
06:46:57 216  ,chf_g00
06:46:57 217  ,chf_g01
06:46:57 218  ,chf_g02
06:46:57 219  ,chf_g03
06:46:57 220  ,chf_g04
06:46:57 221  ,chf_g05
06:46:57 222  ,chf_g06
06:46:57 223  ,chf_g07
06:46:57 224  ,chf_g08
06:46:57 225  ,chf_g09
06:46:57 226  ,chf_g10
06:46:57 227  ,chf_g11
06:46:57 228  ,chf_g12
06:46:57 229  ,chf_g13
06:46:57 230  ,chf_g14
06:46:57 231  ,chf_g15
06:46:57 232  ,chf_g16
06:46:57 233  ,chf_g17
06:46:57 234  ,chf_g18
06:46:57 235  ,chf_g19
06:46:57 236  ,chf_g20
06:46:57 237  ,chf_g21
06:46:57 238  ,chf_g22
06:46:57 239  ,chf_g23
06:46:57 240  ,chf_g24
06:46:57 241  ,chf_g25
06:46:57 242  ,chf_g26
06:46:57 243  ,chf_g27
06:46:57 244  ,chf_g28
06:46:57 245  ,chf_g29
06:46:57 246  ,chf_g30
06:46:57 247  ,chf_g31
06:46:57 248  ,chf_g32
06:46:57 249  ,chf_g33
06:46:57 250  ,chf_g34
06:46:57 251  ,chf_g35
06:46:57 252  ,chf_g36
06:46:57 253  ,chf_g37
06:46:57 254  ,chf_g38
06:46:57 255  ,chf_g39
06:46:57 256  ,chf_g40
06:46:57 257  ,chf_g41
06:46:57 258  FROM aud_ms6 m
06:46:57 259  WHERE m.ydate = '&1'||' '||'&2'
06:46:57 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'06:25:00'

View created.

Elapsed: 00:00:00.12
06:46:58 SQL> 
06:46:58 SQL> -- rpt
06:46:58 SQL> -- We should see just 1 row:
06:46:58 SQL> 
06:46:58 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
06:46:58 SQL> 
06:46:58 SQL> -- Build the model:
06:46:58 SQL> CREATE OR REPLACE VIEW bme AS
06:46:58   2  SELECT
06:46:58   3  'aud'||m.ydate prdate
06:46:58   4  ,gattn
06:46:58   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:46:58   6  ,eur_g00
06:46:58   7  ,eur_g01
06:46:58   8  ,eur_g02
06:46:58   9  ,eur_g03
06:46:58  10  ,eur_g04
06:46:58  11  ,eur_g05
06:46:58  12  ,eur_g06
06:46:58  13  ,eur_g07
06:46:58  14  ,eur_g08
06:46:58  15  ,eur_g09
06:46:58  16  ,eur_g10
06:46:58  17  ,eur_g11
06:46:58  18  ,eur_g12
06:46:58  19  ,eur_g13
06:46:58  20  ,eur_g14
06:46:58  21  ,eur_g15
06:46:58  22  ,eur_g16
06:46:58  23  ,eur_g17
06:46:58  24  ,eur_g18
06:46:58  25  ,eur_g19
06:46:58  26  ,eur_g20
06:46:58  27  ,eur_g21
06:46:58  28  ,eur_g22
06:46:58  29  ,eur_g23
06:46:58  30  ,eur_g24
06:46:58  31  ,eur_g25
06:46:58  32  ,eur_g26
06:46:58  33  ,eur_g27
06:46:58  34  ,eur_g28
06:46:58  35  ,eur_g29
06:46:58  36  ,eur_g30
06:46:58  37  ,eur_g31
06:46:58  38  ,eur_g32
06:46:58  39  ,eur_g33
06:46:58  40  ,eur_g34
06:46:58  41  ,eur_g35
06:46:58  42  ,eur_g36
06:46:58  43  ,eur_g37
06:46:58  44  ,eur_g38
06:46:58  45  ,eur_g39
06:46:58  46  ,eur_g40
06:46:58  47  ,eur_g41
06:46:58  48  ,aud_g00
06:46:58  49  ,aud_g01
06:46:58  50  ,aud_g02
06:46:58  51  ,aud_g03
06:46:58  52  ,aud_g04
06:46:58  53  ,aud_g05
06:46:58  54  ,aud_g06
06:46:58  55  ,aud_g07
06:46:58  56  ,aud_g08
06:46:58  57  ,aud_g09
06:46:58  58  ,aud_g10
06:46:58  59  ,aud_g11
06:46:58  60  ,aud_g12
06:46:58  61  ,aud_g13
06:46:58  62  ,aud_g14
06:46:58  63  ,aud_g15
06:46:58  64  ,aud_g16
06:46:58  65  ,aud_g17
06:46:58  66  ,aud_g18
06:46:58  67  ,aud_g19
06:46:58  68  ,aud_g20
06:46:58  69  ,aud_g21
06:46:58  70  ,aud_g22
06:46:58  71  ,aud_g23
06:46:58  72  ,aud_g24
06:46:58  73  ,aud_g25
06:46:58  74  ,aud_g26
06:46:58  75  ,aud_g27
06:46:58  76  ,aud_g28
06:46:58  77  ,aud_g29
06:46:58  78  ,aud_g30
06:46:58  79  ,aud_g31
06:46:58  80  ,aud_g32
06:46:58  81  ,aud_g33
06:46:58  82  ,aud_g34
06:46:58  83  ,aud_g35
06:46:58  84  ,aud_g36
06:46:58  85  ,aud_g37
06:46:58  86  ,aud_g38
06:46:58  87  ,aud_g39
06:46:58  88  ,aud_g40
06:46:58  89  ,aud_g41
06:46:58  90  ,gbp_g00
06:46:58  91  ,gbp_g01
06:46:58  92  ,gbp_g02
06:46:58  93  ,gbp_g03
06:46:58  94  ,gbp_g04
06:46:58  95  ,gbp_g05
06:46:58  96  ,gbp_g06
06:46:58  97  ,gbp_g07
06:46:58  98  ,gbp_g08
06:46:58  99  ,gbp_g09
06:46:58 100  ,gbp_g10
06:46:58 101  ,gbp_g11
06:46:58 102  ,gbp_g12
06:46:58 103  ,gbp_g13
06:46:58 104  ,gbp_g14
06:46:58 105  ,gbp_g15
06:46:58 106  ,gbp_g16
06:46:58 107  ,gbp_g17
06:46:58 108  ,gbp_g18
06:46:58 109  ,gbp_g19
06:46:58 110  ,gbp_g20
06:46:58 111  ,gbp_g21
06:46:58 112  ,gbp_g22
06:46:58 113  ,gbp_g23
06:46:58 114  ,gbp_g24
06:46:58 115  ,gbp_g25
06:46:58 116  ,gbp_g26
06:46:58 117  ,gbp_g27
06:46:58 118  ,gbp_g28
06:46:58 119  ,gbp_g29
06:46:58 120  ,gbp_g30
06:46:58 121  ,gbp_g31
06:46:58 122  ,gbp_g32
06:46:58 123  ,gbp_g33
06:46:58 124  ,gbp_g34
06:46:58 125  ,gbp_g35
06:46:58 126  ,gbp_g36
06:46:58 127  ,gbp_g37
06:46:58 128  ,gbp_g38
06:46:58 129  ,gbp_g39
06:46:58 130  ,gbp_g40
06:46:58 131  ,gbp_g41
06:46:58 132  ,jpy_g00
06:46:58 133  ,jpy_g01
06:46:58 134  ,jpy_g02
06:46:58 135  ,jpy_g03
06:46:58 136  ,jpy_g04
06:46:58 137  ,jpy_g05
06:46:58 138  ,jpy_g06
06:46:58 139  ,jpy_g07
06:46:58 140  ,jpy_g08
06:46:58 141  ,jpy_g09
06:46:58 142  ,jpy_g10
06:46:58 143  ,jpy_g11
06:46:58 144  ,jpy_g12
06:46:58 145  ,jpy_g13
06:46:58 146  ,jpy_g14
06:46:58 147  ,jpy_g15
06:46:58 148  ,jpy_g16
06:46:58 149  ,jpy_g17
06:46:58 150  ,jpy_g18
06:46:58 151  ,jpy_g19
06:46:58 152  ,jpy_g20
06:46:58 153  ,jpy_g21
06:46:58 154  ,jpy_g22
06:46:58 155  ,jpy_g23
06:46:58 156  ,jpy_g24
06:46:58 157  ,jpy_g25
06:46:58 158  ,jpy_g26
06:46:58 159  ,jpy_g27
06:46:58 160  ,jpy_g28
06:46:58 161  ,jpy_g29
06:46:58 162  ,jpy_g30
06:46:58 163  ,jpy_g31
06:46:58 164  ,jpy_g32
06:46:58 165  ,jpy_g33
06:46:58 166  ,jpy_g34
06:46:58 167  ,jpy_g35
06:46:58 168  ,jpy_g36
06:46:58 169  ,jpy_g37
06:46:58 170  ,jpy_g38
06:46:58 171  ,jpy_g39
06:46:58 172  ,jpy_g40
06:46:58 173  ,jpy_g41
06:46:58 174  ,cad_g00
06:46:58 175  ,cad_g01
06:46:58 176  ,cad_g02
06:46:58 177  ,cad_g03
06:46:58 178  ,cad_g04
06:46:58 179  ,cad_g05
06:46:58 180  ,cad_g06
06:46:58 181  ,cad_g07
06:46:58 182  ,cad_g08
06:46:58 183  ,cad_g09
06:46:58 184  ,cad_g10
06:46:58 185  ,cad_g11
06:46:58 186  ,cad_g12
06:46:58 187  ,cad_g13
06:46:58 188  ,cad_g14
06:46:58 189  ,cad_g15
06:46:58 190  ,cad_g16
06:46:58 191  ,cad_g17
06:46:58 192  ,cad_g18
06:46:58 193  ,cad_g19
06:46:58 194  ,cad_g20
06:46:58 195  ,cad_g21
06:46:58 196  ,cad_g22
06:46:58 197  ,cad_g23
06:46:58 198  ,cad_g24
06:46:58 199  ,cad_g25
06:46:58 200  ,cad_g26
06:46:58 201  ,cad_g27
06:46:58 202  ,cad_g28
06:46:58 203  ,cad_g29
06:46:58 204  ,cad_g30
06:46:58 205  ,cad_g31
06:46:58 206  ,cad_g32
06:46:58 207  ,cad_g33
06:46:58 208  ,cad_g34
06:46:58 209  ,cad_g35
06:46:58 210  ,cad_g36
06:46:58 211  ,cad_g37
06:46:58 212  ,cad_g38
06:46:58 213  ,cad_g39
06:46:58 214  ,cad_g40
06:46:58 215  ,cad_g41
06:46:58 216  ,chf_g00
06:46:58 217  ,chf_g01
06:46:58 218  ,chf_g02
06:46:58 219  ,chf_g03
06:46:58 220  ,chf_g04
06:46:58 221  ,chf_g05
06:46:58 222  ,chf_g06
06:46:58 223  ,chf_g07
06:46:58 224  ,chf_g08
06:46:58 225  ,chf_g09
06:46:58 226  ,chf_g10
06:46:58 227  ,chf_g11
06:46:58 228  ,chf_g12
06:46:58 229  ,chf_g13
06:46:58 230  ,chf_g14
06:46:58 231  ,chf_g15
06:46:58 232  ,chf_g16
06:46:58 233  ,chf_g17
06:46:58 234  ,chf_g18
06:46:58 235  ,chf_g19
06:46:58 236  ,chf_g20
06:46:58 237  ,chf_g21
06:46:58 238  ,chf_g22
06:46:58 239  ,chf_g23
06:46:58 240  ,chf_g24
06:46:58 241  ,chf_g25
06:46:58 242  ,chf_g26
06:46:58 243  ,chf_g27
06:46:58 244  ,chf_g28
06:46:58 245  ,chf_g29
06:46:58 246  ,chf_g30
06:46:58 247  ,chf_g31
06:46:58 248  ,chf_g32
06:46:58 249  ,chf_g33
06:46:58 250  ,chf_g34
06:46:58 251  ,chf_g35
06:46:58 252  ,chf_g36
06:46:58 253  ,chf_g37
06:46:58 254  ,chf_g38
06:46:58 255  ,chf_g39
06:46:58 256  ,chf_g40
06:46:58 257  ,chf_g41
06:46:58 258  FROM aud_ms6 m
06:46:58 259  WHERE gattn IN('nup','up')
06:46:58 260  AND 1+m.ydate < '&1'||' '||'&2'
06:46:58 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'06:25:00'

View created.

Elapsed: 00:00:00.13
06:46:58 SQL> 
06:46:58 SQL> -- rpt
06:46:58 SQL> 
06:46:58 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13145
up	     6393

Elapsed: 00:00:00.05
06:46:58 SQL> 
06:46:58 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 06:20:00

Elapsed: 00:00:00.03
06:46:58 SQL> 
06:46:58 SQL> -- Now build model from bme and score sme
06:46:58 SQL> @score1gattn.sql
06:46:58 SQL> -- score1gattn.sql
06:46:58 SQL> 
06:46:58 SQL> -- Does the 1st SVM score
06:46:58 SQL> 
06:46:58 SQL> -- Fill up svmc_apply_prep
06:46:58 SQL> @score_gattn.sql
06:46:58 SQL> --
06:46:58 SQL> -- score_gattn.sql
06:46:58 SQL> --
06:46:58 SQL> 
06:46:58 SQL> -- usage: score_gattn.sql
06:46:58 SQL> 
06:46:58 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:46:58 SQL> 
06:46:58 SQL> DEFINE target	= 'gattn'
06:46:58 SQL> DEFINE model_name = 'forex14'
06:46:58 SQL> DEFINE bldtable	= 'bme'
06:46:58 SQL> DEFINE scoretable = 'sme'
06:46:58 SQL> DEFINE case_id	= 'prdate'
06:46:58 SQL> 
06:46:58 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:46:58 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:46:58 SQL> 
06:46:58 SQL> -- Builds an SVM model using pl/sql.
06:46:58 SQL> 
06:46:58 SQL> -----------------------------------------------------------------------
06:46:58 SQL> --			    BUILD THE MODEL
06:46:58 SQL> -----------------------------------------------------------------------
06:46:58 SQL> 
06:46:58 SQL> -- Cleanup old build data preparation objects for repeat runs
06:46:58 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
06:46:58 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:46:58 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
06:46:58 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
06:46:58 SQL> 
06:46:58 SQL> 
06:46:58 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:46:58 SQL> --
06:46:58 SQL> -- DROP	TABLE svmc_settings ;
06:46:58 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:46:58 SQL> -- DELETE svmc_settings;
06:46:58 SQL> 
06:46:58 SQL> -- The default classification algorithm is Naive Bayes. So override
06:46:58 SQL> -- this choice to SVM using a settings table.
06:46:58 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:46:58 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:46:58 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:46:58 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:46:58 SQL> -- models.
06:46:58 SQL> --
06:46:58 SQL> 
06:46:58 SQL> -- Do this once and then comment it out.
06:46:58 SQL> -- That makes script go faster.
06:46:58 SQL> -- BEGIN
06:46:58 SQL> -- -- Populate settings table
06:46:58 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:46:58 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:46:58 SQL> --
06:46:58 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:46:58 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:46:58 SQL> --
06:46:58 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:46:58 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:46:58 SQL> --   COMMIT;
06:46:58 SQL> -- END;
06:46:58 SQL> -- /
06:46:58 SQL> 
06:46:58 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:46:58 SQL> 
06:46:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:46:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:46:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:46:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:46:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:46:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:46:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:46:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:46:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:46:58 SQL> 
06:46:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:46:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:46:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:46:58 SQL> 
06:46:58 SQL> --------------------------------
06:46:58 SQL> -- PREPARE BUILD (TRAINING) DATA
06:46:58 SQL> --
06:46:58 SQL> 
06:46:58 SQL> -- 1. Missing Value treatment for all Predictors and
06:46:58 SQL> -- 2. Outlier Treatment and
06:46:58 SQL> -- 3. Normalization are performed below.
06:46:58 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:46:58 SQL> --    normalized here.
06:46:58 SQL> 
06:46:58 SQL> BEGIN
06:46:58   2  	-- Perform missing value treatment for all predictors
06:46:58   3  	-- create miss tables
06:46:58   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:46:58   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:46:58   6  
06:46:58   7  	-- populate miss tables
06:46:58   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:46:58   9  	  miss_table_name => 'svmc_miss_num',
06:46:58  10  	  data_table_name => '&bldtable',
06:46:58  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:46:58  12  
06:46:58  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:46:58  14  	  miss_table_name => 'svmc_miss_cat',
06:46:58  15  	  data_table_name => '&bldtable',
06:46:58  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:46:58  17  
06:46:58  18  	-- xform input data to replace missing values
06:46:58  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:46:58  20  	  miss_table_name => 'svmc_miss_num',
06:46:58  21  	  data_table_name => '&bldtable',
06:46:58  22  	  xform_view_name => 'xformed_build_miss_num');
06:46:58  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:46:58  24  	  miss_table_name => 'svmc_miss_cat',
06:46:58  25  	  data_table_name => '&bldtable',
06:46:58  26  	  xform_view_name => 'xformed_build_miss_cat');
06:46:58  27  
06:46:58  28  	-- Perform outlier treatment.
06:46:58  29  	-- create clip table
06:46:58  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:46:58  31  
06:46:58  32  	-- populate clip table
06:46:58  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:46:58  34  	  clip_table_name => 'svmc_clip',
06:46:58  35  	  data_table_name => '&bldtable',
06:46:58  36  	  tail_frac	  => 0.025,
06:46:58  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:46:58  38  
06:46:58  39  	-- xform input data to winsorized data
06:46:58  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:46:58  41  	  clip_table_name => 'svmc_clip',
06:46:58  42  	  data_table_name => '&bldtable',
06:46:58  43  	  xform_view_name => 'svmc_winsor');
06:46:58  44  
06:46:58  45  	-- create normalization table
06:46:58  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:46:58  47  
06:46:58  48  	-- populate normalization table based on winsorized data
06:46:58  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:46:58  50  	  norm_table_name => 'svmc_norm',
06:46:58  51  	  data_table_name => 'svmc_winsor',
06:46:58  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:46:58  53  
06:46:58  54  	-- normalize the original data
06:46:58  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:46:58  56  	  norm_table_name => 'svmc_norm',
06:46:58  57  	  data_table_name => '&bldtable',
06:46:58  58  	  xform_view_name => 'svmc_build_prep');
06:46:58  59  END;
06:46:58  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.39
06:47:16 SQL> 
06:47:16 SQL> ---------------------
06:47:16 SQL> -- CREATE A NEW MODEL
06:47:16 SQL> --
06:47:16 SQL> -- Cleanup old model with the same name for repeat runs
06:47:16 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:47:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:47:16   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.99
06:47:17 SQL> 
06:47:17 SQL> -- Build a new SVM Model
06:47:17 SQL> BEGIN
06:47:17   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:47:17   3  	  model_name	      => '&model_name',
06:47:17   4  	  mining_function     => dbms_data_mining.classification,
06:47:17   5  	  data_table_name     => 'svmc_build_prep',
06:47:17   6  	  case_id_column_name => '&case_id',
06:47:17   7  	  target_column_name  => '&target',
06:47:17   8  	  settings_table_name => 'svmc_settings');
06:47:17   9  END;
06:47:17  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.31
06:47:45 SQL> 
06:47:45 SQL> -----------------------------------------------------------------------
06:47:45 SQL> --			       APPLY/score THE MODEL
06:47:45 SQL> -----------------------------------------------------------------------
06:47:45 SQL> 
06:47:45 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:47:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:47:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:47:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:47:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:47:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:47:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:47:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:47:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:47:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:47:45 SQL> -----------------------
06:47:45 SQL> -- PREPARE SCORING DATA
06:47:45 SQL> --
06:47:45 SQL> -- If the data for model creation has been prepared, then the data
06:47:45 SQL> -- to be scored using the model must be prepared in the same manner
06:47:45 SQL> -- in order to obtain meaningful results.
06:47:45 SQL> --
06:47:45 SQL> -- 1. Missing Value treatment for all Predictors and
06:47:45 SQL> -- 2. Normalization
06:47:45 SQL> -- No outlier treatment will be performed during test and apply. The
06:47:45 SQL> -- normalization step is sufficient, since the normalization parameters
06:47:45 SQL> -- already capture the effects of outlier treatment done with build data.
06:47:45 SQL> --
06:47:45 SQL> BEGIN
06:47:45   2  	-- Xform Test data to replace missing values
06:47:45   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:47:45   4  	  miss_table_name => 'svmc_miss_num',
06:47:45   5  	  data_table_name => '&scoretable',
06:47:45   6  	  xform_view_name => 'xformed_apply_miss_num');
06:47:45   7  
06:47:45   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:47:45   9  	  miss_table_name => 'svmc_miss_cat',
06:47:45  10  	  data_table_name => '&scoretable',
06:47:45  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:47:45  12  
06:47:45  13  	-- Normalize the data to be scored
06:47:45  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:47:45  15  	  norm_table_name => 'svmc_norm',
06:47:45  16  	  data_table_name => '&scoretable',
06:47:45  17  	  xform_view_name => 'svmc_apply_prep');
06:47:45  18  END;
06:47:45  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
06:47:46 SQL> 
06:47:46 SQL> -- Use same model_name used in score_gattn.sql
06:47:46 SQL> DEFINE model_name = 'forex14'
06:47:46 SQL> 
06:47:46 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
06:47:46 SQL> 
06:47:46 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
06:47:46   2  SELECT
06:47:46   3  prdate
06:47:46   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:47:46   5  ,sysdate
06:47:46   6  ,SUBSTR(prdate,1,3)pair
06:47:46   7  ,SUBSTR(prdate,4,19)ydate
06:47:46   8  FROM svmc_apply_prep
06:47:46   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
06:47:46 SQL> @aud_score1day_gattn.sql	2010-12-31 06:30:00
06:47:46 SQL> --
06:47:46 SQL> -- aud_score1day_gattn.sql
06:47:46 SQL> --
06:47:46 SQL> 
06:47:46 SQL> CREATE OR REPLACE VIEW sme AS
06:47:46   2  SELECT
06:47:46   3  'aud'||m.ydate prdate
06:47:46   4  ,NULL gattn
06:47:46   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:47:46   6  ,eur_g00
06:47:46   7  ,eur_g01
06:47:46   8  ,eur_g02
06:47:46   9  ,eur_g03
06:47:46  10  ,eur_g04
06:47:46  11  ,eur_g05
06:47:46  12  ,eur_g06
06:47:46  13  ,eur_g07
06:47:46  14  ,eur_g08
06:47:46  15  ,eur_g09
06:47:46  16  ,eur_g10
06:47:46  17  ,eur_g11
06:47:46  18  ,eur_g12
06:47:46  19  ,eur_g13
06:47:46  20  ,eur_g14
06:47:46  21  ,eur_g15
06:47:46  22  ,eur_g16
06:47:46  23  ,eur_g17
06:47:46  24  ,eur_g18
06:47:46  25  ,eur_g19
06:47:46  26  ,eur_g20
06:47:46  27  ,eur_g21
06:47:46  28  ,eur_g22
06:47:46  29  ,eur_g23
06:47:46  30  ,eur_g24
06:47:46  31  ,eur_g25
06:47:46  32  ,eur_g26
06:47:46  33  ,eur_g27
06:47:46  34  ,eur_g28
06:47:46  35  ,eur_g29
06:47:46  36  ,eur_g30
06:47:46  37  ,eur_g31
06:47:46  38  ,eur_g32
06:47:46  39  ,eur_g33
06:47:46  40  ,eur_g34
06:47:46  41  ,eur_g35
06:47:46  42  ,eur_g36
06:47:46  43  ,eur_g37
06:47:46  44  ,eur_g38
06:47:46  45  ,eur_g39
06:47:46  46  ,eur_g40
06:47:46  47  ,eur_g41
06:47:46  48  ,aud_g00
06:47:46  49  ,aud_g01
06:47:46  50  ,aud_g02
06:47:46  51  ,aud_g03
06:47:46  52  ,aud_g04
06:47:46  53  ,aud_g05
06:47:46  54  ,aud_g06
06:47:46  55  ,aud_g07
06:47:46  56  ,aud_g08
06:47:46  57  ,aud_g09
06:47:46  58  ,aud_g10
06:47:46  59  ,aud_g11
06:47:46  60  ,aud_g12
06:47:46  61  ,aud_g13
06:47:46  62  ,aud_g14
06:47:46  63  ,aud_g15
06:47:46  64  ,aud_g16
06:47:46  65  ,aud_g17
06:47:46  66  ,aud_g18
06:47:46  67  ,aud_g19
06:47:46  68  ,aud_g20
06:47:46  69  ,aud_g21
06:47:46  70  ,aud_g22
06:47:46  71  ,aud_g23
06:47:46  72  ,aud_g24
06:47:46  73  ,aud_g25
06:47:46  74  ,aud_g26
06:47:46  75  ,aud_g27
06:47:46  76  ,aud_g28
06:47:46  77  ,aud_g29
06:47:46  78  ,aud_g30
06:47:46  79  ,aud_g31
06:47:46  80  ,aud_g32
06:47:46  81  ,aud_g33
06:47:46  82  ,aud_g34
06:47:46  83  ,aud_g35
06:47:46  84  ,aud_g36
06:47:46  85  ,aud_g37
06:47:46  86  ,aud_g38
06:47:46  87  ,aud_g39
06:47:46  88  ,aud_g40
06:47:46  89  ,aud_g41
06:47:46  90  ,gbp_g00
06:47:46  91  ,gbp_g01
06:47:46  92  ,gbp_g02
06:47:46  93  ,gbp_g03
06:47:46  94  ,gbp_g04
06:47:46  95  ,gbp_g05
06:47:46  96  ,gbp_g06
06:47:46  97  ,gbp_g07
06:47:46  98  ,gbp_g08
06:47:46  99  ,gbp_g09
06:47:46 100  ,gbp_g10
06:47:46 101  ,gbp_g11
06:47:46 102  ,gbp_g12
06:47:46 103  ,gbp_g13
06:47:46 104  ,gbp_g14
06:47:46 105  ,gbp_g15
06:47:46 106  ,gbp_g16
06:47:46 107  ,gbp_g17
06:47:46 108  ,gbp_g18
06:47:46 109  ,gbp_g19
06:47:46 110  ,gbp_g20
06:47:46 111  ,gbp_g21
06:47:46 112  ,gbp_g22
06:47:46 113  ,gbp_g23
06:47:46 114  ,gbp_g24
06:47:46 115  ,gbp_g25
06:47:46 116  ,gbp_g26
06:47:46 117  ,gbp_g27
06:47:46 118  ,gbp_g28
06:47:46 119  ,gbp_g29
06:47:46 120  ,gbp_g30
06:47:46 121  ,gbp_g31
06:47:46 122  ,gbp_g32
06:47:46 123  ,gbp_g33
06:47:46 124  ,gbp_g34
06:47:46 125  ,gbp_g35
06:47:46 126  ,gbp_g36
06:47:46 127  ,gbp_g37
06:47:46 128  ,gbp_g38
06:47:46 129  ,gbp_g39
06:47:46 130  ,gbp_g40
06:47:46 131  ,gbp_g41
06:47:46 132  ,jpy_g00
06:47:46 133  ,jpy_g01
06:47:46 134  ,jpy_g02
06:47:46 135  ,jpy_g03
06:47:46 136  ,jpy_g04
06:47:46 137  ,jpy_g05
06:47:46 138  ,jpy_g06
06:47:46 139  ,jpy_g07
06:47:46 140  ,jpy_g08
06:47:46 141  ,jpy_g09
06:47:46 142  ,jpy_g10
06:47:46 143  ,jpy_g11
06:47:46 144  ,jpy_g12
06:47:46 145  ,jpy_g13
06:47:46 146  ,jpy_g14
06:47:46 147  ,jpy_g15
06:47:46 148  ,jpy_g16
06:47:46 149  ,jpy_g17
06:47:46 150  ,jpy_g18
06:47:46 151  ,jpy_g19
06:47:46 152  ,jpy_g20
06:47:46 153  ,jpy_g21
06:47:46 154  ,jpy_g22
06:47:46 155  ,jpy_g23
06:47:46 156  ,jpy_g24
06:47:46 157  ,jpy_g25
06:47:46 158  ,jpy_g26
06:47:46 159  ,jpy_g27
06:47:46 160  ,jpy_g28
06:47:46 161  ,jpy_g29
06:47:46 162  ,jpy_g30
06:47:46 163  ,jpy_g31
06:47:46 164  ,jpy_g32
06:47:46 165  ,jpy_g33
06:47:46 166  ,jpy_g34
06:47:46 167  ,jpy_g35
06:47:46 168  ,jpy_g36
06:47:46 169  ,jpy_g37
06:47:46 170  ,jpy_g38
06:47:46 171  ,jpy_g39
06:47:46 172  ,jpy_g40
06:47:46 173  ,jpy_g41
06:47:46 174  ,cad_g00
06:47:46 175  ,cad_g01
06:47:46 176  ,cad_g02
06:47:46 177  ,cad_g03
06:47:46 178  ,cad_g04
06:47:46 179  ,cad_g05
06:47:46 180  ,cad_g06
06:47:46 181  ,cad_g07
06:47:46 182  ,cad_g08
06:47:46 183  ,cad_g09
06:47:46 184  ,cad_g10
06:47:46 185  ,cad_g11
06:47:46 186  ,cad_g12
06:47:46 187  ,cad_g13
06:47:46 188  ,cad_g14
06:47:46 189  ,cad_g15
06:47:46 190  ,cad_g16
06:47:46 191  ,cad_g17
06:47:46 192  ,cad_g18
06:47:46 193  ,cad_g19
06:47:46 194  ,cad_g20
06:47:46 195  ,cad_g21
06:47:46 196  ,cad_g22
06:47:46 197  ,cad_g23
06:47:46 198  ,cad_g24
06:47:46 199  ,cad_g25
06:47:46 200  ,cad_g26
06:47:46 201  ,cad_g27
06:47:46 202  ,cad_g28
06:47:46 203  ,cad_g29
06:47:46 204  ,cad_g30
06:47:46 205  ,cad_g31
06:47:46 206  ,cad_g32
06:47:46 207  ,cad_g33
06:47:46 208  ,cad_g34
06:47:46 209  ,cad_g35
06:47:46 210  ,cad_g36
06:47:46 211  ,cad_g37
06:47:46 212  ,cad_g38
06:47:46 213  ,cad_g39
06:47:46 214  ,cad_g40
06:47:46 215  ,cad_g41
06:47:46 216  ,chf_g00
06:47:46 217  ,chf_g01
06:47:46 218  ,chf_g02
06:47:46 219  ,chf_g03
06:47:46 220  ,chf_g04
06:47:46 221  ,chf_g05
06:47:46 222  ,chf_g06
06:47:46 223  ,chf_g07
06:47:46 224  ,chf_g08
06:47:46 225  ,chf_g09
06:47:46 226  ,chf_g10
06:47:46 227  ,chf_g11
06:47:46 228  ,chf_g12
06:47:46 229  ,chf_g13
06:47:46 230  ,chf_g14
06:47:46 231  ,chf_g15
06:47:46 232  ,chf_g16
06:47:46 233  ,chf_g17
06:47:46 234  ,chf_g18
06:47:46 235  ,chf_g19
06:47:46 236  ,chf_g20
06:47:46 237  ,chf_g21
06:47:46 238  ,chf_g22
06:47:46 239  ,chf_g23
06:47:46 240  ,chf_g24
06:47:46 241  ,chf_g25
06:47:46 242  ,chf_g26
06:47:46 243  ,chf_g27
06:47:46 244  ,chf_g28
06:47:46 245  ,chf_g29
06:47:46 246  ,chf_g30
06:47:46 247  ,chf_g31
06:47:46 248  ,chf_g32
06:47:46 249  ,chf_g33
06:47:46 250  ,chf_g34
06:47:46 251  ,chf_g35
06:47:46 252  ,chf_g36
06:47:46 253  ,chf_g37
06:47:46 254  ,chf_g38
06:47:46 255  ,chf_g39
06:47:46 256  ,chf_g40
06:47:46 257  ,chf_g41
06:47:46 258  FROM aud_ms6 m
06:47:46 259  WHERE m.ydate = '&1'||' '||'&2'
06:47:46 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'06:30:00'

View created.

Elapsed: 00:00:00.13
06:47:46 SQL> 
06:47:46 SQL> -- rpt
06:47:46 SQL> -- We should see just 1 row:
06:47:46 SQL> 
06:47:46 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
06:47:46 SQL> 
06:47:46 SQL> -- Build the model:
06:47:46 SQL> CREATE OR REPLACE VIEW bme AS
06:47:46   2  SELECT
06:47:46   3  'aud'||m.ydate prdate
06:47:46   4  ,gattn
06:47:46   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:47:46   6  ,eur_g00
06:47:46   7  ,eur_g01
06:47:46   8  ,eur_g02
06:47:46   9  ,eur_g03
06:47:46  10  ,eur_g04
06:47:46  11  ,eur_g05
06:47:46  12  ,eur_g06
06:47:46  13  ,eur_g07
06:47:46  14  ,eur_g08
06:47:46  15  ,eur_g09
06:47:46  16  ,eur_g10
06:47:46  17  ,eur_g11
06:47:46  18  ,eur_g12
06:47:46  19  ,eur_g13
06:47:46  20  ,eur_g14
06:47:46  21  ,eur_g15
06:47:46  22  ,eur_g16
06:47:46  23  ,eur_g17
06:47:46  24  ,eur_g18
06:47:46  25  ,eur_g19
06:47:46  26  ,eur_g20
06:47:46  27  ,eur_g21
06:47:46  28  ,eur_g22
06:47:46  29  ,eur_g23
06:47:46  30  ,eur_g24
06:47:46  31  ,eur_g25
06:47:46  32  ,eur_g26
06:47:46  33  ,eur_g27
06:47:46  34  ,eur_g28
06:47:46  35  ,eur_g29
06:47:46  36  ,eur_g30
06:47:46  37  ,eur_g31
06:47:46  38  ,eur_g32
06:47:46  39  ,eur_g33
06:47:46  40  ,eur_g34
06:47:46  41  ,eur_g35
06:47:46  42  ,eur_g36
06:47:46  43  ,eur_g37
06:47:46  44  ,eur_g38
06:47:46  45  ,eur_g39
06:47:46  46  ,eur_g40
06:47:46  47  ,eur_g41
06:47:46  48  ,aud_g00
06:47:46  49  ,aud_g01
06:47:46  50  ,aud_g02
06:47:46  51  ,aud_g03
06:47:46  52  ,aud_g04
06:47:46  53  ,aud_g05
06:47:46  54  ,aud_g06
06:47:46  55  ,aud_g07
06:47:46  56  ,aud_g08
06:47:46  57  ,aud_g09
06:47:46  58  ,aud_g10
06:47:46  59  ,aud_g11
06:47:46  60  ,aud_g12
06:47:46  61  ,aud_g13
06:47:46  62  ,aud_g14
06:47:46  63  ,aud_g15
06:47:46  64  ,aud_g16
06:47:46  65  ,aud_g17
06:47:46  66  ,aud_g18
06:47:46  67  ,aud_g19
06:47:46  68  ,aud_g20
06:47:46  69  ,aud_g21
06:47:46  70  ,aud_g22
06:47:46  71  ,aud_g23
06:47:46  72  ,aud_g24
06:47:46  73  ,aud_g25
06:47:46  74  ,aud_g26
06:47:46  75  ,aud_g27
06:47:46  76  ,aud_g28
06:47:46  77  ,aud_g29
06:47:46  78  ,aud_g30
06:47:46  79  ,aud_g31
06:47:46  80  ,aud_g32
06:47:46  81  ,aud_g33
06:47:46  82  ,aud_g34
06:47:46  83  ,aud_g35
06:47:46  84  ,aud_g36
06:47:46  85  ,aud_g37
06:47:46  86  ,aud_g38
06:47:46  87  ,aud_g39
06:47:46  88  ,aud_g40
06:47:46  89  ,aud_g41
06:47:46  90  ,gbp_g00
06:47:46  91  ,gbp_g01
06:47:46  92  ,gbp_g02
06:47:46  93  ,gbp_g03
06:47:46  94  ,gbp_g04
06:47:46  95  ,gbp_g05
06:47:46  96  ,gbp_g06
06:47:46  97  ,gbp_g07
06:47:46  98  ,gbp_g08
06:47:46  99  ,gbp_g09
06:47:46 100  ,gbp_g10
06:47:46 101  ,gbp_g11
06:47:46 102  ,gbp_g12
06:47:46 103  ,gbp_g13
06:47:46 104  ,gbp_g14
06:47:46 105  ,gbp_g15
06:47:46 106  ,gbp_g16
06:47:46 107  ,gbp_g17
06:47:46 108  ,gbp_g18
06:47:46 109  ,gbp_g19
06:47:46 110  ,gbp_g20
06:47:46 111  ,gbp_g21
06:47:46 112  ,gbp_g22
06:47:46 113  ,gbp_g23
06:47:46 114  ,gbp_g24
06:47:46 115  ,gbp_g25
06:47:46 116  ,gbp_g26
06:47:46 117  ,gbp_g27
06:47:46 118  ,gbp_g28
06:47:46 119  ,gbp_g29
06:47:46 120  ,gbp_g30
06:47:46 121  ,gbp_g31
06:47:46 122  ,gbp_g32
06:47:46 123  ,gbp_g33
06:47:46 124  ,gbp_g34
06:47:46 125  ,gbp_g35
06:47:46 126  ,gbp_g36
06:47:46 127  ,gbp_g37
06:47:46 128  ,gbp_g38
06:47:46 129  ,gbp_g39
06:47:46 130  ,gbp_g40
06:47:46 131  ,gbp_g41
06:47:46 132  ,jpy_g00
06:47:46 133  ,jpy_g01
06:47:46 134  ,jpy_g02
06:47:46 135  ,jpy_g03
06:47:46 136  ,jpy_g04
06:47:46 137  ,jpy_g05
06:47:46 138  ,jpy_g06
06:47:46 139  ,jpy_g07
06:47:46 140  ,jpy_g08
06:47:46 141  ,jpy_g09
06:47:46 142  ,jpy_g10
06:47:46 143  ,jpy_g11
06:47:46 144  ,jpy_g12
06:47:46 145  ,jpy_g13
06:47:46 146  ,jpy_g14
06:47:46 147  ,jpy_g15
06:47:46 148  ,jpy_g16
06:47:46 149  ,jpy_g17
06:47:46 150  ,jpy_g18
06:47:46 151  ,jpy_g19
06:47:46 152  ,jpy_g20
06:47:46 153  ,jpy_g21
06:47:46 154  ,jpy_g22
06:47:46 155  ,jpy_g23
06:47:46 156  ,jpy_g24
06:47:46 157  ,jpy_g25
06:47:46 158  ,jpy_g26
06:47:46 159  ,jpy_g27
06:47:46 160  ,jpy_g28
06:47:46 161  ,jpy_g29
06:47:46 162  ,jpy_g30
06:47:46 163  ,jpy_g31
06:47:46 164  ,jpy_g32
06:47:46 165  ,jpy_g33
06:47:46 166  ,jpy_g34
06:47:46 167  ,jpy_g35
06:47:46 168  ,jpy_g36
06:47:46 169  ,jpy_g37
06:47:46 170  ,jpy_g38
06:47:46 171  ,jpy_g39
06:47:46 172  ,jpy_g40
06:47:46 173  ,jpy_g41
06:47:46 174  ,cad_g00
06:47:46 175  ,cad_g01
06:47:46 176  ,cad_g02
06:47:46 177  ,cad_g03
06:47:46 178  ,cad_g04
06:47:46 179  ,cad_g05
06:47:46 180  ,cad_g06
06:47:46 181  ,cad_g07
06:47:46 182  ,cad_g08
06:47:46 183  ,cad_g09
06:47:46 184  ,cad_g10
06:47:46 185  ,cad_g11
06:47:46 186  ,cad_g12
06:47:46 187  ,cad_g13
06:47:46 188  ,cad_g14
06:47:46 189  ,cad_g15
06:47:46 190  ,cad_g16
06:47:46 191  ,cad_g17
06:47:46 192  ,cad_g18
06:47:46 193  ,cad_g19
06:47:46 194  ,cad_g20
06:47:46 195  ,cad_g21
06:47:46 196  ,cad_g22
06:47:46 197  ,cad_g23
06:47:46 198  ,cad_g24
06:47:46 199  ,cad_g25
06:47:46 200  ,cad_g26
06:47:46 201  ,cad_g27
06:47:46 202  ,cad_g28
06:47:46 203  ,cad_g29
06:47:46 204  ,cad_g30
06:47:46 205  ,cad_g31
06:47:46 206  ,cad_g32
06:47:46 207  ,cad_g33
06:47:46 208  ,cad_g34
06:47:46 209  ,cad_g35
06:47:46 210  ,cad_g36
06:47:46 211  ,cad_g37
06:47:46 212  ,cad_g38
06:47:46 213  ,cad_g39
06:47:46 214  ,cad_g40
06:47:46 215  ,cad_g41
06:47:46 216  ,chf_g00
06:47:46 217  ,chf_g01
06:47:46 218  ,chf_g02
06:47:46 219  ,chf_g03
06:47:46 220  ,chf_g04
06:47:46 221  ,chf_g05
06:47:46 222  ,chf_g06
06:47:46 223  ,chf_g07
06:47:46 224  ,chf_g08
06:47:46 225  ,chf_g09
06:47:46 226  ,chf_g10
06:47:46 227  ,chf_g11
06:47:46 228  ,chf_g12
06:47:46 229  ,chf_g13
06:47:46 230  ,chf_g14
06:47:46 231  ,chf_g15
06:47:46 232  ,chf_g16
06:47:46 233  ,chf_g17
06:47:46 234  ,chf_g18
06:47:46 235  ,chf_g19
06:47:46 236  ,chf_g20
06:47:46 237  ,chf_g21
06:47:46 238  ,chf_g22
06:47:46 239  ,chf_g23
06:47:46 240  ,chf_g24
06:47:46 241  ,chf_g25
06:47:46 242  ,chf_g26
06:47:46 243  ,chf_g27
06:47:46 244  ,chf_g28
06:47:46 245  ,chf_g29
06:47:46 246  ,chf_g30
06:47:46 247  ,chf_g31
06:47:46 248  ,chf_g32
06:47:46 249  ,chf_g33
06:47:46 250  ,chf_g34
06:47:46 251  ,chf_g35
06:47:46 252  ,chf_g36
06:47:46 253  ,chf_g37
06:47:46 254  ,chf_g38
06:47:46 255  ,chf_g39
06:47:46 256  ,chf_g40
06:47:46 257  ,chf_g41
06:47:46 258  FROM aud_ms6 m
06:47:46 259  WHERE gattn IN('nup','up')
06:47:46 260  AND 1+m.ydate < '&1'||' '||'&2'
06:47:46 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'06:30:00'

View created.

Elapsed: 00:00:00.12
06:47:47 SQL> 
06:47:47 SQL> -- rpt
06:47:47 SQL> 
06:47:47 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13145
up	     6394

Elapsed: 00:00:00.04
06:47:47 SQL> 
06:47:47 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 06:25:00

Elapsed: 00:00:00.04
06:47:47 SQL> 
06:47:47 SQL> -- Now build model from bme and score sme
06:47:47 SQL> @score1gattn.sql
06:47:47 SQL> -- score1gattn.sql
06:47:47 SQL> 
06:47:47 SQL> -- Does the 1st SVM score
06:47:47 SQL> 
06:47:47 SQL> -- Fill up svmc_apply_prep
06:47:47 SQL> @score_gattn.sql
06:47:47 SQL> --
06:47:47 SQL> -- score_gattn.sql
06:47:47 SQL> --
06:47:47 SQL> 
06:47:47 SQL> -- usage: score_gattn.sql
06:47:47 SQL> 
06:47:47 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:47:47 SQL> 
06:47:47 SQL> DEFINE target	= 'gattn'
06:47:47 SQL> DEFINE model_name = 'forex14'
06:47:47 SQL> DEFINE bldtable	= 'bme'
06:47:47 SQL> DEFINE scoretable = 'sme'
06:47:47 SQL> DEFINE case_id	= 'prdate'
06:47:47 SQL> 
06:47:47 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:47:47 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:47:47 SQL> 
06:47:47 SQL> -- Builds an SVM model using pl/sql.
06:47:47 SQL> 
06:47:47 SQL> -----------------------------------------------------------------------
06:47:47 SQL> --			    BUILD THE MODEL
06:47:47 SQL> -----------------------------------------------------------------------
06:47:47 SQL> 
06:47:47 SQL> -- Cleanup old build data preparation objects for repeat runs
06:47:47 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
06:47:47 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:47:47 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
06:47:47 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
06:47:47 SQL> 
06:47:47 SQL> 
06:47:47 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:47:47 SQL> --
06:47:47 SQL> -- DROP	TABLE svmc_settings ;
06:47:47 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:47:47 SQL> -- DELETE svmc_settings;
06:47:47 SQL> 
06:47:47 SQL> -- The default classification algorithm is Naive Bayes. So override
06:47:47 SQL> -- this choice to SVM using a settings table.
06:47:47 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:47:47 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:47:47 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:47:47 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:47:47 SQL> -- models.
06:47:47 SQL> --
06:47:47 SQL> 
06:47:47 SQL> -- Do this once and then comment it out.
06:47:47 SQL> -- That makes script go faster.
06:47:47 SQL> -- BEGIN
06:47:47 SQL> -- -- Populate settings table
06:47:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:47:47 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:47:47 SQL> --
06:47:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:47:47 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:47:47 SQL> --
06:47:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:47:47 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:47:47 SQL> --   COMMIT;
06:47:47 SQL> -- END;
06:47:47 SQL> -- /
06:47:47 SQL> 
06:47:47 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:47:47 SQL> 
06:47:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:47:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:47:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
06:47:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:47:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:47:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:47:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:47:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:47:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:47:47 SQL> 
06:47:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:47:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:47:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:47:47 SQL> 
06:47:47 SQL> --------------------------------
06:47:47 SQL> -- PREPARE BUILD (TRAINING) DATA
06:47:47 SQL> --
06:47:47 SQL> 
06:47:47 SQL> -- 1. Missing Value treatment for all Predictors and
06:47:47 SQL> -- 2. Outlier Treatment and
06:47:47 SQL> -- 3. Normalization are performed below.
06:47:47 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:47:47 SQL> --    normalized here.
06:47:47 SQL> 
06:47:47 SQL> BEGIN
06:47:47   2  	-- Perform missing value treatment for all predictors
06:47:47   3  	-- create miss tables
06:47:47   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:47:47   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:47:47   6  
06:47:47   7  	-- populate miss tables
06:47:47   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:47:47   9  	  miss_table_name => 'svmc_miss_num',
06:47:47  10  	  data_table_name => '&bldtable',
06:47:47  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:47:47  12  
06:47:47  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:47:47  14  	  miss_table_name => 'svmc_miss_cat',
06:47:47  15  	  data_table_name => '&bldtable',
06:47:47  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:47:47  17  
06:47:47  18  	-- xform input data to replace missing values
06:47:47  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:47:47  20  	  miss_table_name => 'svmc_miss_num',
06:47:47  21  	  data_table_name => '&bldtable',
06:47:47  22  	  xform_view_name => 'xformed_build_miss_num');
06:47:47  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:47:47  24  	  miss_table_name => 'svmc_miss_cat',
06:47:47  25  	  data_table_name => '&bldtable',
06:47:47  26  	  xform_view_name => 'xformed_build_miss_cat');
06:47:47  27  
06:47:47  28  	-- Perform outlier treatment.
06:47:47  29  	-- create clip table
06:47:47  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:47:47  31  
06:47:47  32  	-- populate clip table
06:47:47  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:47:47  34  	  clip_table_name => 'svmc_clip',
06:47:47  35  	  data_table_name => '&bldtable',
06:47:47  36  	  tail_frac	  => 0.025,
06:47:47  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:47:47  38  
06:47:47  39  	-- xform input data to winsorized data
06:47:47  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:47:47  41  	  clip_table_name => 'svmc_clip',
06:47:47  42  	  data_table_name => '&bldtable',
06:47:47  43  	  xform_view_name => 'svmc_winsor');
06:47:47  44  
06:47:47  45  	-- create normalization table
06:47:47  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:47:47  47  
06:47:47  48  	-- populate normalization table based on winsorized data
06:47:47  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:47:47  50  	  norm_table_name => 'svmc_norm',
06:47:47  51  	  data_table_name => 'svmc_winsor',
06:47:47  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:47:47  53  
06:47:47  54  	-- normalize the original data
06:47:47  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:47:47  56  	  norm_table_name => 'svmc_norm',
06:47:47  57  	  data_table_name => '&bldtable',
06:47:47  58  	  xform_view_name => 'svmc_build_prep');
06:47:47  59  END;
06:47:47  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.10
06:48:05 SQL> 
06:48:05 SQL> ---------------------
06:48:05 SQL> -- CREATE A NEW MODEL
06:48:05 SQL> --
06:48:05 SQL> -- Cleanup old model with the same name for repeat runs
06:48:05 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:48:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:48:05   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.87
06:48:06 SQL> 
06:48:06 SQL> -- Build a new SVM Model
06:48:06 SQL> BEGIN
06:48:06   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:48:06   3  	  model_name	      => '&model_name',
06:48:06   4  	  mining_function     => dbms_data_mining.classification,
06:48:06   5  	  data_table_name     => 'svmc_build_prep',
06:48:06   6  	  case_id_column_name => '&case_id',
06:48:06   7  	  target_column_name  => '&target',
06:48:06   8  	  settings_table_name => 'svmc_settings');
06:48:06   9  END;
06:48:06  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.06
06:48:33 SQL> 
06:48:33 SQL> -----------------------------------------------------------------------
06:48:33 SQL> --			       APPLY/score THE MODEL
06:48:33 SQL> -----------------------------------------------------------------------
06:48:33 SQL> 
06:48:33 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:48:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:48:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:48:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:48:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:48:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:48:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
06:48:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:48:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:48:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:48:33 SQL> -----------------------
06:48:33 SQL> -- PREPARE SCORING DATA
06:48:33 SQL> --
06:48:33 SQL> -- If the data for model creation has been prepared, then the data
06:48:33 SQL> -- to be scored using the model must be prepared in the same manner
06:48:33 SQL> -- in order to obtain meaningful results.
06:48:33 SQL> --
06:48:33 SQL> -- 1. Missing Value treatment for all Predictors and
06:48:33 SQL> -- 2. Normalization
06:48:33 SQL> -- No outlier treatment will be performed during test and apply. The
06:48:33 SQL> -- normalization step is sufficient, since the normalization parameters
06:48:33 SQL> -- already capture the effects of outlier treatment done with build data.
06:48:33 SQL> --
06:48:33 SQL> BEGIN
06:48:33   2  	-- Xform Test data to replace missing values
06:48:33   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:48:33   4  	  miss_table_name => 'svmc_miss_num',
06:48:33   5  	  data_table_name => '&scoretable',
06:48:33   6  	  xform_view_name => 'xformed_apply_miss_num');
06:48:33   7  
06:48:33   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:48:33   9  	  miss_table_name => 'svmc_miss_cat',
06:48:33  10  	  data_table_name => '&scoretable',
06:48:33  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:48:33  12  
06:48:33  13  	-- Normalize the data to be scored
06:48:33  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:48:33  15  	  norm_table_name => 'svmc_norm',
06:48:33  16  	  data_table_name => '&scoretable',
06:48:33  17  	  xform_view_name => 'svmc_apply_prep');
06:48:33  18  END;
06:48:33  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.24
06:48:34 SQL> 
06:48:34 SQL> -- Use same model_name used in score_gattn.sql
06:48:34 SQL> DEFINE model_name = 'forex14'
06:48:34 SQL> 
06:48:34 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.06
06:48:34 SQL> 
06:48:34 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
06:48:34   2  SELECT
06:48:34   3  prdate
06:48:34   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:48:34   5  ,sysdate
06:48:34   6  ,SUBSTR(prdate,1,3)pair
06:48:34   7  ,SUBSTR(prdate,4,19)ydate
06:48:34   8  FROM svmc_apply_prep
06:48:34   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
06:48:35 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
