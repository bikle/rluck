
SQL*Plus: Release 11.2.0.1.0 Production on Tue Jan 4 11:18:09 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

11:18:09 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
11:18:09 SQL> 11:18:09 SQL> @aud_score1day.sql  2011-01-04 10:55:00
11:18:09 SQL> --
11:18:09 SQL> -- aud_score1day.sql
11:18:09 SQL> --
11:18:09 SQL> 
11:18:09 SQL> CREATE OR REPLACE VIEW sme AS
11:18:09   2  SELECT
11:18:09   3  'aud'||m.ydate prdate
11:18:09   4  ,NULL gatt
11:18:09   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:18:09   6  ,eur_g00
11:18:09   7  ,eur_g01
11:18:09   8  ,eur_g02
11:18:09   9  ,eur_g03
11:18:09  10  ,eur_g04
11:18:09  11  ,eur_g05
11:18:09  12  ,eur_g06
11:18:09  13  ,eur_g07
11:18:09  14  ,eur_g08
11:18:09  15  ,eur_g09
11:18:09  16  ,eur_g10
11:18:09  17  ,eur_g11
11:18:09  18  ,eur_g12
11:18:09  19  ,eur_g13
11:18:09  20  ,eur_g14
11:18:09  21  ,eur_g15
11:18:09  22  ,eur_g16
11:18:09  23  ,eur_g17
11:18:09  24  ,eur_g18
11:18:09  25  ,eur_g19
11:18:09  26  ,eur_g20
11:18:09  27  ,eur_g21
11:18:09  28  ,eur_g22
11:18:09  29  ,eur_g23
11:18:09  30  ,eur_g24
11:18:09  31  ,eur_g25
11:18:09  32  ,eur_g26
11:18:09  33  ,eur_g27
11:18:09  34  ,eur_g28
11:18:09  35  ,eur_g29
11:18:09  36  ,eur_g30
11:18:09  37  ,eur_g31
11:18:09  38  ,eur_g32
11:18:09  39  ,eur_g33
11:18:09  40  ,eur_g34
11:18:09  41  ,eur_g35
11:18:09  42  ,eur_g36
11:18:09  43  ,eur_g37
11:18:09  44  ,eur_g38
11:18:09  45  ,eur_g39
11:18:09  46  ,eur_g40
11:18:09  47  ,eur_g41
11:18:09  48  ,aud_g00
11:18:09  49  ,aud_g01
11:18:09  50  ,aud_g02
11:18:09  51  ,aud_g03
11:18:09  52  ,aud_g04
11:18:09  53  ,aud_g05
11:18:09  54  ,aud_g06
11:18:09  55  ,aud_g07
11:18:09  56  ,aud_g08
11:18:09  57  ,aud_g09
11:18:09  58  ,aud_g10
11:18:09  59  ,aud_g11
11:18:09  60  ,aud_g12
11:18:09  61  ,aud_g13
11:18:09  62  ,aud_g14
11:18:09  63  ,aud_g15
11:18:09  64  ,aud_g16
11:18:09  65  ,aud_g17
11:18:09  66  ,aud_g18
11:18:09  67  ,aud_g19
11:18:09  68  ,aud_g20
11:18:09  69  ,aud_g21
11:18:09  70  ,aud_g22
11:18:09  71  ,aud_g23
11:18:09  72  ,aud_g24
11:18:09  73  ,aud_g25
11:18:09  74  ,aud_g26
11:18:09  75  ,aud_g27
11:18:09  76  ,aud_g28
11:18:09  77  ,aud_g29
11:18:09  78  ,aud_g30
11:18:09  79  ,aud_g31
11:18:09  80  ,aud_g32
11:18:09  81  ,aud_g33
11:18:09  82  ,aud_g34
11:18:09  83  ,aud_g35
11:18:09  84  ,aud_g36
11:18:09  85  ,aud_g37
11:18:09  86  ,aud_g38
11:18:09  87  ,aud_g39
11:18:09  88  ,aud_g40
11:18:09  89  ,aud_g41
11:18:09  90  ,gbp_g00
11:18:09  91  ,gbp_g01
11:18:09  92  ,gbp_g02
11:18:09  93  ,gbp_g03
11:18:09  94  ,gbp_g04
11:18:09  95  ,gbp_g05
11:18:09  96  ,gbp_g06
11:18:09  97  ,gbp_g07
11:18:09  98  ,gbp_g08
11:18:09  99  ,gbp_g09
11:18:09 100  ,gbp_g10
11:18:09 101  ,gbp_g11
11:18:09 102  ,gbp_g12
11:18:09 103  ,gbp_g13
11:18:09 104  ,gbp_g14
11:18:09 105  ,gbp_g15
11:18:09 106  ,gbp_g16
11:18:09 107  ,gbp_g17
11:18:09 108  ,gbp_g18
11:18:09 109  ,gbp_g19
11:18:09 110  ,gbp_g20
11:18:09 111  ,gbp_g21
11:18:09 112  ,gbp_g22
11:18:09 113  ,gbp_g23
11:18:09 114  ,gbp_g24
11:18:09 115  ,gbp_g25
11:18:09 116  ,gbp_g26
11:18:09 117  ,gbp_g27
11:18:09 118  ,gbp_g28
11:18:09 119  ,gbp_g29
11:18:09 120  ,gbp_g30
11:18:09 121  ,gbp_g31
11:18:09 122  ,gbp_g32
11:18:09 123  ,gbp_g33
11:18:09 124  ,gbp_g34
11:18:09 125  ,gbp_g35
11:18:09 126  ,gbp_g36
11:18:09 127  ,gbp_g37
11:18:09 128  ,gbp_g38
11:18:09 129  ,gbp_g39
11:18:09 130  ,gbp_g40
11:18:09 131  ,gbp_g41
11:18:09 132  ,jpy_g00
11:18:09 133  ,jpy_g01
11:18:09 134  ,jpy_g02
11:18:09 135  ,jpy_g03
11:18:09 136  ,jpy_g04
11:18:09 137  ,jpy_g05
11:18:09 138  ,jpy_g06
11:18:09 139  ,jpy_g07
11:18:09 140  ,jpy_g08
11:18:09 141  ,jpy_g09
11:18:09 142  ,jpy_g10
11:18:09 143  ,jpy_g11
11:18:09 144  ,jpy_g12
11:18:09 145  ,jpy_g13
11:18:09 146  ,jpy_g14
11:18:09 147  ,jpy_g15
11:18:09 148  ,jpy_g16
11:18:09 149  ,jpy_g17
11:18:09 150  ,jpy_g18
11:18:09 151  ,jpy_g19
11:18:09 152  ,jpy_g20
11:18:09 153  ,jpy_g21
11:18:09 154  ,jpy_g22
11:18:09 155  ,jpy_g23
11:18:09 156  ,jpy_g24
11:18:09 157  ,jpy_g25
11:18:09 158  ,jpy_g26
11:18:09 159  ,jpy_g27
11:18:09 160  ,jpy_g28
11:18:09 161  ,jpy_g29
11:18:09 162  ,jpy_g30
11:18:09 163  ,jpy_g31
11:18:09 164  ,jpy_g32
11:18:09 165  ,jpy_g33
11:18:09 166  ,jpy_g34
11:18:09 167  ,jpy_g35
11:18:09 168  ,jpy_g36
11:18:09 169  ,jpy_g37
11:18:09 170  ,jpy_g38
11:18:09 171  ,jpy_g39
11:18:09 172  ,jpy_g40
11:18:09 173  ,jpy_g41
11:18:09 174  ,cad_g00
11:18:09 175  ,cad_g01
11:18:09 176  ,cad_g02
11:18:09 177  ,cad_g03
11:18:09 178  ,cad_g04
11:18:09 179  ,cad_g05
11:18:09 180  ,cad_g06
11:18:09 181  ,cad_g07
11:18:09 182  ,cad_g08
11:18:09 183  ,cad_g09
11:18:09 184  ,cad_g10
11:18:09 185  ,cad_g11
11:18:09 186  ,cad_g12
11:18:09 187  ,cad_g13
11:18:09 188  ,cad_g14
11:18:09 189  ,cad_g15
11:18:09 190  ,cad_g16
11:18:09 191  ,cad_g17
11:18:09 192  ,cad_g18
11:18:09 193  ,cad_g19
11:18:09 194  ,cad_g20
11:18:09 195  ,cad_g21
11:18:09 196  ,cad_g22
11:18:09 197  ,cad_g23
11:18:09 198  ,cad_g24
11:18:09 199  ,cad_g25
11:18:09 200  ,cad_g26
11:18:09 201  ,cad_g27
11:18:09 202  ,cad_g28
11:18:09 203  ,cad_g29
11:18:09 204  ,cad_g30
11:18:09 205  ,cad_g31
11:18:09 206  ,cad_g32
11:18:09 207  ,cad_g33
11:18:09 208  ,cad_g34
11:18:09 209  ,cad_g35
11:18:09 210  ,cad_g36
11:18:09 211  ,cad_g37
11:18:09 212  ,cad_g38
11:18:09 213  ,cad_g39
11:18:09 214  ,cad_g40
11:18:09 215  ,cad_g41
11:18:09 216  ,chf_g00
11:18:09 217  ,chf_g01
11:18:09 218  ,chf_g02
11:18:09 219  ,chf_g03
11:18:09 220  ,chf_g04
11:18:09 221  ,chf_g05
11:18:09 222  ,chf_g06
11:18:09 223  ,chf_g07
11:18:09 224  ,chf_g08
11:18:09 225  ,chf_g09
11:18:09 226  ,chf_g10
11:18:09 227  ,chf_g11
11:18:09 228  ,chf_g12
11:18:09 229  ,chf_g13
11:18:09 230  ,chf_g14
11:18:09 231  ,chf_g15
11:18:09 232  ,chf_g16
11:18:09 233  ,chf_g17
11:18:09 234  ,chf_g18
11:18:09 235  ,chf_g19
11:18:09 236  ,chf_g20
11:18:09 237  ,chf_g21
11:18:09 238  ,chf_g22
11:18:09 239  ,chf_g23
11:18:09 240  ,chf_g24
11:18:09 241  ,chf_g25
11:18:09 242  ,chf_g26
11:18:09 243  ,chf_g27
11:18:09 244  ,chf_g28
11:18:09 245  ,chf_g29
11:18:09 246  ,chf_g30
11:18:09 247  ,chf_g31
11:18:09 248  ,chf_g32
11:18:09 249  ,chf_g33
11:18:09 250  ,chf_g34
11:18:09 251  ,chf_g35
11:18:09 252  ,chf_g36
11:18:09 253  ,chf_g37
11:18:09 254  ,chf_g38
11:18:09 255  ,chf_g39
11:18:09 256  ,chf_g40
11:18:09 257  ,chf_g41
11:18:09 258  FROM aud_ms6 m
11:18:09 259  WHERE m.ydate = '&1'||' '||'&2'
11:18:09 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-04'||' '||'10:55:00'

View created.

Elapsed: 00:00:00.14
11:18:09 SQL> 
11:18:09 SQL> -- rpt
11:18:09 SQL> -- We should see just 1 row:
11:18:09 SQL> 
11:18:09 SQL> SELECT COUNT(prdate) FROM sme
11:18:09   2  
11:18:09 SQL> -- Build the model:
11:18:09 SQL> CREATE OR REPLACE VIEW bme AS
11:18:09   2  SELECT
11:18:09   3  'aud'||m.ydate prdate
11:18:09   4  ,gatt
11:18:09   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:18:09   6  ,eur_g00
11:18:09   7  ,eur_g01
11:18:09   8  ,eur_g02
11:18:09   9  ,eur_g03
11:18:09  10  ,eur_g04
11:18:09  11  ,eur_g05
11:18:09  12  ,eur_g06
11:18:09  13  ,eur_g07
11:18:09  14  ,eur_g08
11:18:09  15  ,eur_g09
11:18:09  16  ,eur_g10
11:18:09  17  ,eur_g11
11:18:09  18  ,eur_g12
11:18:09  19  ,eur_g13
11:18:09  20  ,eur_g14
11:18:09  21  ,eur_g15
11:18:09  22  ,eur_g16
11:18:09  23  ,eur_g17
11:18:09  24  ,eur_g18
11:18:09  25  ,eur_g19
11:18:09  26  ,eur_g20
11:18:09  27  ,eur_g21
11:18:09  28  ,eur_g22
11:18:09  29  ,eur_g23
11:18:09  30  ,eur_g24
11:18:09  31  ,eur_g25
11:18:09  32  ,eur_g26
11:18:09  33  ,eur_g27
11:18:09  34  ,eur_g28
11:18:09  35  ,eur_g29
11:18:09  36  ,eur_g30
11:18:09  37  ,eur_g31
11:18:09  38  ,eur_g32
11:18:09  39  ,eur_g33
11:18:09  40  ,eur_g34
11:18:09  41  ,eur_g35
11:18:09  42  ,eur_g36
11:18:09  43  ,eur_g37
11:18:09  44  ,eur_g38
11:18:09  45  ,eur_g39
11:18:09  46  ,eur_g40
11:18:09  47  ,eur_g41
11:18:09  48  ,aud_g00
11:18:09  49  ,aud_g01
11:18:09  50  ,aud_g02
11:18:09  51  ,aud_g03
11:18:09  52  ,aud_g04
11:18:09  53  ,aud_g05
11:18:09  54  ,aud_g06
11:18:09  55  ,aud_g07
11:18:09  56  ,aud_g08
11:18:09  57  ,aud_g09
11:18:09  58  ,aud_g10
11:18:09  59  ,aud_g11
11:18:09  60  ,aud_g12
11:18:09  61  ,aud_g13
11:18:09  62  ,aud_g14
11:18:09  63  ,aud_g15
11:18:09  64  ,aud_g16
11:18:09  65  ,aud_g17
11:18:09  66  ,aud_g18
11:18:09  67  ,aud_g19
11:18:09  68  ,aud_g20
11:18:09  69  ,aud_g21
11:18:09  70  ,aud_g22
11:18:09  71  ,aud_g23
11:18:09  72  ,aud_g24
11:18:09  73  ,aud_g25
11:18:09  74  ,aud_g26
11:18:09  75  ,aud_g27
11:18:09  76  ,aud_g28
11:18:09  77  ,aud_g29
11:18:09  78  ,aud_g30
11:18:09  79  ,aud_g31
11:18:09  80  ,aud_g32
11:18:09  81  ,aud_g33
11:18:09  82  ,aud_g34
11:18:09  83  ,aud_g35
11:18:09  84  ,aud_g36
11:18:09  85  ,aud_g37
11:18:09  86  ,aud_g38
11:18:09  87  ,aud_g39
11:18:09  88  ,aud_g40
11:18:09  89  ,aud_g41
11:18:09  90  ,gbp_g00
11:18:09  91  ,gbp_g01
11:18:09  92  ,gbp_g02
11:18:09  93  ,gbp_g03
11:18:09  94  ,gbp_g04
11:18:09  95  ,gbp_g05
11:18:09  96  ,gbp_g06
11:18:09  97  ,gbp_g07
11:18:09  98  ,gbp_g08
11:18:09  99  ,gbp_g09
11:18:09 100  ,gbp_g10
11:18:09 101  ,gbp_g11
11:18:09 102  ,gbp_g12
11:18:09 103  ,gbp_g13
11:18:09 104  ,gbp_g14
11:18:09 105  ,gbp_g15
11:18:09 106  ,gbp_g16
11:18:09 107  ,gbp_g17
11:18:09 108  ,gbp_g18
11:18:09 109  ,gbp_g19
11:18:09 110  ,gbp_g20
11:18:09 111  ,gbp_g21
11:18:09 112  ,gbp_g22
11:18:09 113  ,gbp_g23
11:18:09 114  ,gbp_g24
11:18:09 115  ,gbp_g25
11:18:09 116  ,gbp_g26
11:18:09 117  ,gbp_g27
11:18:09 118  ,gbp_g28
11:18:09 119  ,gbp_g29
11:18:09 120  ,gbp_g30
11:18:09 121  ,gbp_g31
11:18:09 122  ,gbp_g32
11:18:09 123  ,gbp_g33
11:18:09 124  ,gbp_g34
11:18:09 125  ,gbp_g35
11:18:09 126  ,gbp_g36
11:18:09 127  ,gbp_g37
11:18:09 128  ,gbp_g38
11:18:09 129  ,gbp_g39
11:18:09 130  ,gbp_g40
11:18:09 131  ,gbp_g41
11:18:09 132  ,jpy_g00
11:18:09 133  ,jpy_g01
11:18:09 134  ,jpy_g02
11:18:09 135  ,jpy_g03
11:18:09 136  ,jpy_g04
11:18:09 137  ,jpy_g05
11:18:09 138  ,jpy_g06
11:18:09 139  ,jpy_g07
11:18:09 140  ,jpy_g08
11:18:09 141  ,jpy_g09
11:18:09 142  ,jpy_g10
11:18:09 143  ,jpy_g11
11:18:09 144  ,jpy_g12
11:18:09 145  ,jpy_g13
11:18:09 146  ,jpy_g14
11:18:09 147  ,jpy_g15
11:18:09 148  ,jpy_g16
11:18:09 149  ,jpy_g17
11:18:09 150  ,jpy_g18
11:18:09 151  ,jpy_g19
11:18:09 152  ,jpy_g20
11:18:09 153  ,jpy_g21
11:18:09 154  ,jpy_g22
11:18:09 155  ,jpy_g23
11:18:09 156  ,jpy_g24
11:18:09 157  ,jpy_g25
11:18:09 158  ,jpy_g26
11:18:09 159  ,jpy_g27
11:18:09 160  ,jpy_g28
11:18:09 161  ,jpy_g29
11:18:09 162  ,jpy_g30
11:18:09 163  ,jpy_g31
11:18:09 164  ,jpy_g32
11:18:09 165  ,jpy_g33
11:18:09 166  ,jpy_g34
11:18:09 167  ,jpy_g35
11:18:09 168  ,jpy_g36
11:18:09 169  ,jpy_g37
11:18:09 170  ,jpy_g38
11:18:09 171  ,jpy_g39
11:18:09 172  ,jpy_g40
11:18:09 173  ,jpy_g41
11:18:09 174  ,cad_g00
11:18:09 175  ,cad_g01
11:18:09 176  ,cad_g02
11:18:09 177  ,cad_g03
11:18:09 178  ,cad_g04
11:18:09 179  ,cad_g05
11:18:09 180  ,cad_g06
11:18:09 181  ,cad_g07
11:18:09 182  ,cad_g08
11:18:09 183  ,cad_g09
11:18:09 184  ,cad_g10
11:18:09 185  ,cad_g11
11:18:09 186  ,cad_g12
11:18:09 187  ,cad_g13
11:18:09 188  ,cad_g14
11:18:09 189  ,cad_g15
11:18:09 190  ,cad_g16
11:18:09 191  ,cad_g17
11:18:09 192  ,cad_g18
11:18:09 193  ,cad_g19
11:18:09 194  ,cad_g20
11:18:09 195  ,cad_g21
11:18:09 196  ,cad_g22
11:18:09 197  ,cad_g23
11:18:09 198  ,cad_g24
11:18:09 199  ,cad_g25
11:18:09 200  ,cad_g26
11:18:09 201  ,cad_g27
11:18:09 202  ,cad_g28
11:18:09 203  ,cad_g29
11:18:09 204  ,cad_g30
11:18:09 205  ,cad_g31
11:18:09 206  ,cad_g32
11:18:09 207  ,cad_g33
11:18:09 208  ,cad_g34
11:18:09 209  ,cad_g35
11:18:09 210  ,cad_g36
11:18:09 211  ,cad_g37
11:18:09 212  ,cad_g38
11:18:09 213  ,cad_g39
11:18:09 214  ,cad_g40
11:18:09 215  ,cad_g41
11:18:09 216  ,chf_g00
11:18:09 217  ,chf_g01
11:18:09 218  ,chf_g02
11:18:09 219  ,chf_g03
11:18:09 220  ,chf_g04
11:18:09 221  ,chf_g05
11:18:09 222  ,chf_g06
11:18:09 223  ,chf_g07
11:18:09 224  ,chf_g08
11:18:09 225  ,chf_g09
11:18:09 226  ,chf_g10
11:18:09 227  ,chf_g11
11:18:09 228  ,chf_g12
11:18:09 229  ,chf_g13
11:18:09 230  ,chf_g14
11:18:09 231  ,chf_g15
11:18:09 232  ,chf_g16
11:18:09 233  ,chf_g17
11:18:09 234  ,chf_g18
11:18:09 235  ,chf_g19
11:18:09 236  ,chf_g20
11:18:09 237  ,chf_g21
11:18:09 238  ,chf_g22
11:18:09 239  ,chf_g23
11:18:09 240  ,chf_g24
11:18:09 241  ,chf_g25
11:18:09 242  ,chf_g26
11:18:09 243  ,chf_g27
11:18:09 244  ,chf_g28
11:18:09 245  ,chf_g29
11:18:09 246  ,chf_g30
11:18:09 247  ,chf_g31
11:18:09 248  ,chf_g32
11:18:09 249  ,chf_g33
11:18:09 250  ,chf_g34
11:18:09 251  ,chf_g35
11:18:09 252  ,chf_g36
11:18:09 253  ,chf_g37
11:18:09 254  ,chf_g38
11:18:09 255  ,chf_g39
11:18:09 256  ,chf_g40
11:18:09 257  ,chf_g41
11:18:09 258  FROM aud_ms6 m
11:18:09 259  WHERE gatt IN('nup','up')
11:18:09 260  AND 1+m.ydate < '&1'||' '||'&2'
11:18:09 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-04'||' '||'10:55:00'

View created.

Elapsed: 00:00:00.13
11:18:09 SQL> 
11:18:09 SQL> -- rpt
11:18:09 SQL> 
11:18:09 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
11:18:09   2  
11:18:09 SQL> SELECT MAX(prdate) FROM bme
11:18:09   2  
11:18:09 SQL> -- Now build model from bme and score sme
11:18:09 SQL> @score1.sql
11:18:09 SQL> -- score1.sql
11:18:09 SQL> 
11:18:09 SQL> -- Does the 1st SVM score
11:18:09 SQL> 
11:18:09 SQL> -- Fill up svmc_apply_prep
11:18:09 SQL> @score.sql
11:18:09 SQL> --
11:18:09 SQL> -- score.sql
11:18:09 SQL> --
11:18:09 SQL> 
11:18:09 SQL> -- usage: score.sql
11:18:09 SQL> 
11:18:09 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
11:18:09 SQL> 
11:18:09 SQL> DEFINE target	= 'gatt'
11:18:09 SQL> DEFINE model_name = 'forex15'
11:18:09 SQL> DEFINE bldtable	= 'bme'
11:18:09 SQL> DEFINE scoretable = 'sme'
11:18:09 SQL> DEFINE case_id	= 'prdate'
11:18:09 SQL> 
11:18:09 SQL> -- Define a variable to help me exclude some columns from some data mining calls
11:18:09 SQL> DEFINE exclude1 = "'&target','&case_id'"
11:18:09 SQL> 
11:18:09 SQL> -- Builds an SVM model using pl/sql.
11:18:09 SQL> 
11:18:09 SQL> -----------------------------------------------------------------------
11:18:09 SQL> --			    BUILD THE MODEL
11:18:09 SQL> -----------------------------------------------------------------------
11:18:09 SQL> 
11:18:09 SQL> -- Cleanup old build data preparation objects for repeat runs
11:18:09 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
11:18:09 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
11:18:09 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
11:18:09 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
11:18:09 SQL> 
11:18:09 SQL> 
11:18:09 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
11:18:09 SQL> --
11:18:09 SQL> -- DROP	TABLE svmc_settings ;
11:18:09 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
11:18:09 SQL> -- DELETE svmc_settings;
11:18:09 SQL> 
11:18:09 SQL> -- The default classification algorithm is Naive Bayes. So override
11:18:09 SQL> -- this choice to SVM using a settings table.
11:18:09 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
11:18:09 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
11:18:09 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
11:18:09 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
11:18:09 SQL> -- models.
11:18:09 SQL> --
11:18:09 SQL> 
11:18:09 SQL> -- Do this once and then comment it out.
11:18:09 SQL> -- That makes script go faster.
11:18:09 SQL> -- BEGIN
11:18:09 SQL> -- -- Populate settings table
11:18:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:18:09 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
11:18:09 SQL> --
11:18:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:18:09 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
11:18:09 SQL> --
11:18:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:18:09 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
11:18:09 SQL> --   COMMIT;
11:18:09 SQL> -- END;
11:18:09 SQL> -- /
11:18:09 SQL> 
11:18:09 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
11:18:09 SQL> 
11:18:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
11:18:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:18:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
11:18:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
11:18:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:18:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:18:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
11:18:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:18:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:18:09 SQL> 
11:18:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
11:18:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:18:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:18:09 SQL> 
11:18:09 SQL> --------------------------------
11:18:09 SQL> -- PREPARE BUILD (TRAINING) DATA
11:18:09 SQL> --
11:18:09 SQL> 
11:18:09 SQL> -- 1. Missing Value treatment for all Predictors and
11:18:09 SQL> -- 2. Outlier Treatment and
11:18:09 SQL> -- 3. Normalization are performed below.
11:18:09 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
11:18:09 SQL> --    normalized here.
11:18:09 SQL> 
11:18:09 SQL> BEGIN
11:18:09   2  	-- Perform missing value treatment for all predictors
11:18:09   3  	-- create miss tables
11:18:09   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
11:18:09   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
11:18:09   6  
11:18:09   7  	-- populate miss tables
11:18:09   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
11:18:09   9  	  miss_table_name => 'svmc_miss_num',
11:18:09  10  	  data_table_name => '&bldtable',
11:18:09  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:18:09  12  
11:18:09  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
11:18:09  14  	  miss_table_name => 'svmc_miss_cat',
11:18:09  15  	  data_table_name => '&bldtable',
11:18:09  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:18:09  17  
11:18:09  18  	-- xform input data to replace missing values
11:18:09  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:18:09  20  	  miss_table_name => 'svmc_miss_num',
11:18:09  21  	  data_table_name => '&bldtable',
11:18:09  22  	  xform_view_name => 'xformed_build_miss_num');
11:18:09  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:18:09  24  	  miss_table_name => 'svmc_miss_cat',
11:18:09  25  	  data_table_name => '&bldtable',
11:18:09  26  	  xform_view_name => 'xformed_build_miss_cat');
11:18:09  27  
11:18:09  28  	-- Perform outlier treatment.
11:18:09  29  	-- create clip table
11:18:09  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
11:18:09  31  
11:18:09  32  	-- populate clip table
11:18:09  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
11:18:09  34  	  clip_table_name => 'svmc_clip',
11:18:09  35  	  data_table_name => '&bldtable',
11:18:09  36  	  tail_frac	  => 0.025,
11:18:09  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:18:09  38  
11:18:09  39  	-- xform input data to winsorized data
11:18:09  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
11:18:09  41  	  clip_table_name => 'svmc_clip',
11:18:09  42  	  data_table_name => '&bldtable',
11:18:09  43  	  xform_view_name => 'svmc_winsor');
11:18:09  44  
11:18:09  45  	-- create normalization table
11:18:09  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
11:18:09  47  
11:18:09  48  	-- populate normalization table based on winsorized data
11:18:09  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
11:18:09  50  	  norm_table_name => 'svmc_norm',
11:18:09  51  	  data_table_name => 'svmc_winsor',
11:18:09  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:18:09  53  
11:18:09  54  	-- normalize the original data
11:18:09  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:18:09  56  	  norm_table_name => 'svmc_norm',
11:18:09  57  	  data_table_name => '&bldtable',
11:18:09  58  	  xform_view_name => 'svmc_build_prep');
11:18:09  59  END;
11:18:09  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.20
11:18:27 SQL> 
11:18:27 SQL> ---------------------
11:18:27 SQL> -- CREATE A NEW MODEL
11:18:27 SQL> --
11:18:27 SQL> -- Cleanup old model with the same name for repeat runs
11:18:27 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
11:18:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:18:27   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.73
11:18:28 SQL> 
11:18:28 SQL> -- Build a new SVM Model
11:18:28 SQL> BEGIN
11:18:28   2  	DBMS_DATA_MINING.CREATE_MODEL(
11:18:28   3  	  model_name	      => '&model_name',
11:18:28   4  	  mining_function     => dbms_data_mining.classification,
11:18:28   5  	  data_table_name     => 'svmc_build_prep',
11:18:28   6  	  case_id_column_name => '&case_id',
11:18:28   7  	  target_column_name  => '&target',
11:18:28   8  	  settings_table_name => 'svmc_settings');
11:18:28   9  END;
11:18:28  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.78
11:18:57 SQL> 
11:18:57 SQL> -----------------------------------------------------------------------
11:18:57 SQL> --			       APPLY/score THE MODEL
11:18:57 SQL> -----------------------------------------------------------------------
11:18:57 SQL> 
11:18:57 SQL> -- Cleanup old scoring data preparation objects for repeat runs
11:18:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
11:18:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:18:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
11:18:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
11:18:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:18:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
11:18:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
11:18:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:18:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:18:57 SQL> -----------------------
11:18:57 SQL> -- PREPARE SCORING DATA
11:18:57 SQL> --
11:18:57 SQL> -- If the data for model creation has been prepared, then the data
11:18:57 SQL> -- to be scored using the model must be prepared in the same manner
11:18:57 SQL> -- in order to obtain meaningful results.
11:18:57 SQL> --
11:18:57 SQL> -- 1. Missing Value treatment for all Predictors and
11:18:57 SQL> -- 2. Normalization
11:18:57 SQL> -- No outlier treatment will be performed during test and apply. The
11:18:57 SQL> -- normalization step is sufficient, since the normalization parameters
11:18:57 SQL> -- already capture the effects of outlier treatment done with build data.
11:18:57 SQL> --
11:18:57 SQL> BEGIN
11:18:57   2  	-- Xform Test data to replace missing values
11:18:57   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:18:57   4  	  miss_table_name => 'svmc_miss_num',
11:18:57   5  	  data_table_name => '&scoretable',
11:18:57   6  	  xform_view_name => 'xformed_apply_miss_num');
11:18:57   7  
11:18:57   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:18:57   9  	  miss_table_name => 'svmc_miss_cat',
11:18:57  10  	  data_table_name => '&scoretable',
11:18:57  11  	  xform_view_name => 'xformed_apply_miss_cat');
11:18:57  12  
11:18:57  13  	-- Normalize the data to be scored
11:18:57  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:18:57  15  	  norm_table_name => 'svmc_norm',
11:18:57  16  	  data_table_name => '&scoretable',
11:18:57  17  	  xform_view_name => 'svmc_apply_prep');
11:18:57  18  END;
11:18:57  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.25
11:18:58 SQL> 
11:18:58 SQL> -- Use same model_name used in score.sql
11:18:58 SQL> DEFINE model_name = 'forex15'
11:18:58 SQL> 
11:18:58 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
11:18:58 SQL> 
11:18:58 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
11:18:58 SQL> 
11:18:58 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
11:18:58   2  SELECT
11:18:58   3  prdate
11:18:58   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
11:18:58   5  ,sysdate
11:18:58   6  ,SUBSTR(prdate,1,3)pair
11:18:58   7  ,SUBSTR(prdate,4,19)ydate
11:18:58   8  FROM svmc_apply_prep
11:18:58   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
11:18:59 SQL> @aud_score1day.sql  2011-01-04 11:00:00
11:18:59 SQL> --
11:18:59 SQL> -- aud_score1day.sql
11:18:59 SQL> --
11:18:59 SQL> 
11:18:59 SQL> CREATE OR REPLACE VIEW sme AS
11:18:59   2  SELECT
11:18:59   3  'aud'||m.ydate prdate
11:18:59   4  ,NULL gatt
11:18:59   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:18:59   6  ,eur_g00
11:18:59   7  ,eur_g01
11:18:59   8  ,eur_g02
11:18:59   9  ,eur_g03
11:18:59  10  ,eur_g04
11:18:59  11  ,eur_g05
11:18:59  12  ,eur_g06
11:18:59  13  ,eur_g07
11:18:59  14  ,eur_g08
11:18:59  15  ,eur_g09
11:18:59  16  ,eur_g10
11:18:59  17  ,eur_g11
11:18:59  18  ,eur_g12
11:18:59  19  ,eur_g13
11:18:59  20  ,eur_g14
11:18:59  21  ,eur_g15
11:18:59  22  ,eur_g16
11:18:59  23  ,eur_g17
11:18:59  24  ,eur_g18
11:18:59  25  ,eur_g19
11:18:59  26  ,eur_g20
11:18:59  27  ,eur_g21
11:18:59  28  ,eur_g22
11:18:59  29  ,eur_g23
11:18:59  30  ,eur_g24
11:18:59  31  ,eur_g25
11:18:59  32  ,eur_g26
11:18:59  33  ,eur_g27
11:18:59  34  ,eur_g28
11:18:59  35  ,eur_g29
11:18:59  36  ,eur_g30
11:18:59  37  ,eur_g31
11:18:59  38  ,eur_g32
11:18:59  39  ,eur_g33
11:18:59  40  ,eur_g34
11:18:59  41  ,eur_g35
11:18:59  42  ,eur_g36
11:18:59  43  ,eur_g37
11:18:59  44  ,eur_g38
11:18:59  45  ,eur_g39
11:18:59  46  ,eur_g40
11:18:59  47  ,eur_g41
11:18:59  48  ,aud_g00
11:18:59  49  ,aud_g01
11:18:59  50  ,aud_g02
11:18:59  51  ,aud_g03
11:18:59  52  ,aud_g04
11:18:59  53  ,aud_g05
11:18:59  54  ,aud_g06
11:18:59  55  ,aud_g07
11:18:59  56  ,aud_g08
11:18:59  57  ,aud_g09
11:18:59  58  ,aud_g10
11:18:59  59  ,aud_g11
11:18:59  60  ,aud_g12
11:18:59  61  ,aud_g13
11:18:59  62  ,aud_g14
11:18:59  63  ,aud_g15
11:18:59  64  ,aud_g16
11:18:59  65  ,aud_g17
11:18:59  66  ,aud_g18
11:18:59  67  ,aud_g19
11:18:59  68  ,aud_g20
11:18:59  69  ,aud_g21
11:18:59  70  ,aud_g22
11:18:59  71  ,aud_g23
11:18:59  72  ,aud_g24
11:18:59  73  ,aud_g25
11:18:59  74  ,aud_g26
11:18:59  75  ,aud_g27
11:18:59  76  ,aud_g28
11:18:59  77  ,aud_g29
11:18:59  78  ,aud_g30
11:18:59  79  ,aud_g31
11:18:59  80  ,aud_g32
11:18:59  81  ,aud_g33
11:18:59  82  ,aud_g34
11:18:59  83  ,aud_g35
11:18:59  84  ,aud_g36
11:18:59  85  ,aud_g37
11:18:59  86  ,aud_g38
11:18:59  87  ,aud_g39
11:18:59  88  ,aud_g40
11:18:59  89  ,aud_g41
11:18:59  90  ,gbp_g00
11:18:59  91  ,gbp_g01
11:18:59  92  ,gbp_g02
11:18:59  93  ,gbp_g03
11:18:59  94  ,gbp_g04
11:18:59  95  ,gbp_g05
11:18:59  96  ,gbp_g06
11:18:59  97  ,gbp_g07
11:18:59  98  ,gbp_g08
11:18:59  99  ,gbp_g09
11:18:59 100  ,gbp_g10
11:18:59 101  ,gbp_g11
11:18:59 102  ,gbp_g12
11:18:59 103  ,gbp_g13
11:18:59 104  ,gbp_g14
11:18:59 105  ,gbp_g15
11:18:59 106  ,gbp_g16
11:18:59 107  ,gbp_g17
11:18:59 108  ,gbp_g18
11:18:59 109  ,gbp_g19
11:18:59 110  ,gbp_g20
11:18:59 111  ,gbp_g21
11:18:59 112  ,gbp_g22
11:18:59 113  ,gbp_g23
11:18:59 114  ,gbp_g24
11:18:59 115  ,gbp_g25
11:18:59 116  ,gbp_g26
11:18:59 117  ,gbp_g27
11:18:59 118  ,gbp_g28
11:18:59 119  ,gbp_g29
11:18:59 120  ,gbp_g30
11:18:59 121  ,gbp_g31
11:18:59 122  ,gbp_g32
11:18:59 123  ,gbp_g33
11:18:59 124  ,gbp_g34
11:18:59 125  ,gbp_g35
11:18:59 126  ,gbp_g36
11:18:59 127  ,gbp_g37
11:18:59 128  ,gbp_g38
11:18:59 129  ,gbp_g39
11:18:59 130  ,gbp_g40
11:18:59 131  ,gbp_g41
11:18:59 132  ,jpy_g00
11:18:59 133  ,jpy_g01
11:18:59 134  ,jpy_g02
11:18:59 135  ,jpy_g03
11:18:59 136  ,jpy_g04
11:18:59 137  ,jpy_g05
11:18:59 138  ,jpy_g06
11:18:59 139  ,jpy_g07
11:18:59 140  ,jpy_g08
11:18:59 141  ,jpy_g09
11:18:59 142  ,jpy_g10
11:18:59 143  ,jpy_g11
11:18:59 144  ,jpy_g12
11:18:59 145  ,jpy_g13
11:18:59 146  ,jpy_g14
11:18:59 147  ,jpy_g15
11:18:59 148  ,jpy_g16
11:18:59 149  ,jpy_g17
11:18:59 150  ,jpy_g18
11:18:59 151  ,jpy_g19
11:18:59 152  ,jpy_g20
11:18:59 153  ,jpy_g21
11:18:59 154  ,jpy_g22
11:18:59 155  ,jpy_g23
11:18:59 156  ,jpy_g24
11:18:59 157  ,jpy_g25
11:18:59 158  ,jpy_g26
11:18:59 159  ,jpy_g27
11:18:59 160  ,jpy_g28
11:18:59 161  ,jpy_g29
11:18:59 162  ,jpy_g30
11:18:59 163  ,jpy_g31
11:18:59 164  ,jpy_g32
11:18:59 165  ,jpy_g33
11:18:59 166  ,jpy_g34
11:18:59 167  ,jpy_g35
11:18:59 168  ,jpy_g36
11:18:59 169  ,jpy_g37
11:18:59 170  ,jpy_g38
11:18:59 171  ,jpy_g39
11:18:59 172  ,jpy_g40
11:18:59 173  ,jpy_g41
11:18:59 174  ,cad_g00
11:18:59 175  ,cad_g01
11:18:59 176  ,cad_g02
11:18:59 177  ,cad_g03
11:18:59 178  ,cad_g04
11:18:59 179  ,cad_g05
11:18:59 180  ,cad_g06
11:18:59 181  ,cad_g07
11:18:59 182  ,cad_g08
11:18:59 183  ,cad_g09
11:18:59 184  ,cad_g10
11:18:59 185  ,cad_g11
11:18:59 186  ,cad_g12
11:18:59 187  ,cad_g13
11:18:59 188  ,cad_g14
11:18:59 189  ,cad_g15
11:18:59 190  ,cad_g16
11:18:59 191  ,cad_g17
11:18:59 192  ,cad_g18
11:18:59 193  ,cad_g19
11:18:59 194  ,cad_g20
11:18:59 195  ,cad_g21
11:18:59 196  ,cad_g22
11:18:59 197  ,cad_g23
11:18:59 198  ,cad_g24
11:18:59 199  ,cad_g25
11:18:59 200  ,cad_g26
11:18:59 201  ,cad_g27
11:18:59 202  ,cad_g28
11:18:59 203  ,cad_g29
11:18:59 204  ,cad_g30
11:18:59 205  ,cad_g31
11:18:59 206  ,cad_g32
11:18:59 207  ,cad_g33
11:18:59 208  ,cad_g34
11:18:59 209  ,cad_g35
11:18:59 210  ,cad_g36
11:18:59 211  ,cad_g37
11:18:59 212  ,cad_g38
11:18:59 213  ,cad_g39
11:18:59 214  ,cad_g40
11:18:59 215  ,cad_g41
11:18:59 216  ,chf_g00
11:18:59 217  ,chf_g01
11:18:59 218  ,chf_g02
11:18:59 219  ,chf_g03
11:18:59 220  ,chf_g04
11:18:59 221  ,chf_g05
11:18:59 222  ,chf_g06
11:18:59 223  ,chf_g07
11:18:59 224  ,chf_g08
11:18:59 225  ,chf_g09
11:18:59 226  ,chf_g10
11:18:59 227  ,chf_g11
11:18:59 228  ,chf_g12
11:18:59 229  ,chf_g13
11:18:59 230  ,chf_g14
11:18:59 231  ,chf_g15
11:18:59 232  ,chf_g16
11:18:59 233  ,chf_g17
11:18:59 234  ,chf_g18
11:18:59 235  ,chf_g19
11:18:59 236  ,chf_g20
11:18:59 237  ,chf_g21
11:18:59 238  ,chf_g22
11:18:59 239  ,chf_g23
11:18:59 240  ,chf_g24
11:18:59 241  ,chf_g25
11:18:59 242  ,chf_g26
11:18:59 243  ,chf_g27
11:18:59 244  ,chf_g28
11:18:59 245  ,chf_g29
11:18:59 246  ,chf_g30
11:18:59 247  ,chf_g31
11:18:59 248  ,chf_g32
11:18:59 249  ,chf_g33
11:18:59 250  ,chf_g34
11:18:59 251  ,chf_g35
11:18:59 252  ,chf_g36
11:18:59 253  ,chf_g37
11:18:59 254  ,chf_g38
11:18:59 255  ,chf_g39
11:18:59 256  ,chf_g40
11:18:59 257  ,chf_g41
11:18:59 258  FROM aud_ms6 m
11:18:59 259  WHERE m.ydate = '&1'||' '||'&2'
11:18:59 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-04'||' '||'11:00:00'

View created.

Elapsed: 00:00:00.10
11:18:59 SQL> 
11:18:59 SQL> -- rpt
11:18:59 SQL> -- We should see just 1 row:
11:18:59 SQL> 
11:18:59 SQL> SELECT COUNT(prdate) FROM sme
11:18:59   2  
11:18:59 SQL> -- Build the model:
11:18:59 SQL> CREATE OR REPLACE VIEW bme AS
11:18:59   2  SELECT
11:18:59   3  'aud'||m.ydate prdate
11:18:59   4  ,gatt
11:18:59   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:18:59   6  ,eur_g00
11:18:59   7  ,eur_g01
11:18:59   8  ,eur_g02
11:18:59   9  ,eur_g03
11:18:59  10  ,eur_g04
11:18:59  11  ,eur_g05
11:18:59  12  ,eur_g06
11:18:59  13  ,eur_g07
11:18:59  14  ,eur_g08
11:18:59  15  ,eur_g09
11:18:59  16  ,eur_g10
11:18:59  17  ,eur_g11
11:18:59  18  ,eur_g12
11:18:59  19  ,eur_g13
11:18:59  20  ,eur_g14
11:18:59  21  ,eur_g15
11:18:59  22  ,eur_g16
11:18:59  23  ,eur_g17
11:18:59  24  ,eur_g18
11:18:59  25  ,eur_g19
11:18:59  26  ,eur_g20
11:18:59  27  ,eur_g21
11:18:59  28  ,eur_g22
11:18:59  29  ,eur_g23
11:18:59  30  ,eur_g24
11:18:59  31  ,eur_g25
11:18:59  32  ,eur_g26
11:18:59  33  ,eur_g27
11:18:59  34  ,eur_g28
11:18:59  35  ,eur_g29
11:18:59  36  ,eur_g30
11:18:59  37  ,eur_g31
11:18:59  38  ,eur_g32
11:18:59  39  ,eur_g33
11:18:59  40  ,eur_g34
11:18:59  41  ,eur_g35
11:18:59  42  ,eur_g36
11:18:59  43  ,eur_g37
11:18:59  44  ,eur_g38
11:18:59  45  ,eur_g39
11:18:59  46  ,eur_g40
11:18:59  47  ,eur_g41
11:18:59  48  ,aud_g00
11:18:59  49  ,aud_g01
11:18:59  50  ,aud_g02
11:18:59  51  ,aud_g03
11:18:59  52  ,aud_g04
11:18:59  53  ,aud_g05
11:18:59  54  ,aud_g06
11:18:59  55  ,aud_g07
11:18:59  56  ,aud_g08
11:18:59  57  ,aud_g09
11:18:59  58  ,aud_g10
11:18:59  59  ,aud_g11
11:18:59  60  ,aud_g12
11:18:59  61  ,aud_g13
11:18:59  62  ,aud_g14
11:18:59  63  ,aud_g15
11:18:59  64  ,aud_g16
11:18:59  65  ,aud_g17
11:18:59  66  ,aud_g18
11:18:59  67  ,aud_g19
11:18:59  68  ,aud_g20
11:18:59  69  ,aud_g21
11:18:59  70  ,aud_g22
11:18:59  71  ,aud_g23
11:18:59  72  ,aud_g24
11:18:59  73  ,aud_g25
11:18:59  74  ,aud_g26
11:18:59  75  ,aud_g27
11:18:59  76  ,aud_g28
11:18:59  77  ,aud_g29
11:18:59  78  ,aud_g30
11:18:59  79  ,aud_g31
11:18:59  80  ,aud_g32
11:18:59  81  ,aud_g33
11:18:59  82  ,aud_g34
11:18:59  83  ,aud_g35
11:18:59  84  ,aud_g36
11:18:59  85  ,aud_g37
11:18:59  86  ,aud_g38
11:18:59  87  ,aud_g39
11:18:59  88  ,aud_g40
11:18:59  89  ,aud_g41
11:18:59  90  ,gbp_g00
11:18:59  91  ,gbp_g01
11:18:59  92  ,gbp_g02
11:18:59  93  ,gbp_g03
11:18:59  94  ,gbp_g04
11:18:59  95  ,gbp_g05
11:18:59  96  ,gbp_g06
11:18:59  97  ,gbp_g07
11:18:59  98  ,gbp_g08
11:18:59  99  ,gbp_g09
11:18:59 100  ,gbp_g10
11:18:59 101  ,gbp_g11
11:18:59 102  ,gbp_g12
11:18:59 103  ,gbp_g13
11:18:59 104  ,gbp_g14
11:18:59 105  ,gbp_g15
11:18:59 106  ,gbp_g16
11:18:59 107  ,gbp_g17
11:18:59 108  ,gbp_g18
11:18:59 109  ,gbp_g19
11:18:59 110  ,gbp_g20
11:18:59 111  ,gbp_g21
11:18:59 112  ,gbp_g22
11:18:59 113  ,gbp_g23
11:18:59 114  ,gbp_g24
11:18:59 115  ,gbp_g25
11:18:59 116  ,gbp_g26
11:18:59 117  ,gbp_g27
11:18:59 118  ,gbp_g28
11:18:59 119  ,gbp_g29
11:18:59 120  ,gbp_g30
11:18:59 121  ,gbp_g31
11:18:59 122  ,gbp_g32
11:18:59 123  ,gbp_g33
11:18:59 124  ,gbp_g34
11:18:59 125  ,gbp_g35
11:18:59 126  ,gbp_g36
11:18:59 127  ,gbp_g37
11:18:59 128  ,gbp_g38
11:18:59 129  ,gbp_g39
11:18:59 130  ,gbp_g40
11:18:59 131  ,gbp_g41
11:18:59 132  ,jpy_g00
11:18:59 133  ,jpy_g01
11:18:59 134  ,jpy_g02
11:18:59 135  ,jpy_g03
11:18:59 136  ,jpy_g04
11:18:59 137  ,jpy_g05
11:18:59 138  ,jpy_g06
11:18:59 139  ,jpy_g07
11:18:59 140  ,jpy_g08
11:18:59 141  ,jpy_g09
11:18:59 142  ,jpy_g10
11:18:59 143  ,jpy_g11
11:18:59 144  ,jpy_g12
11:18:59 145  ,jpy_g13
11:18:59 146  ,jpy_g14
11:18:59 147  ,jpy_g15
11:18:59 148  ,jpy_g16
11:18:59 149  ,jpy_g17
11:18:59 150  ,jpy_g18
11:18:59 151  ,jpy_g19
11:18:59 152  ,jpy_g20
11:18:59 153  ,jpy_g21
11:18:59 154  ,jpy_g22
11:18:59 155  ,jpy_g23
11:18:59 156  ,jpy_g24
11:18:59 157  ,jpy_g25
11:18:59 158  ,jpy_g26
11:18:59 159  ,jpy_g27
11:18:59 160  ,jpy_g28
11:18:59 161  ,jpy_g29
11:18:59 162  ,jpy_g30
11:18:59 163  ,jpy_g31
11:18:59 164  ,jpy_g32
11:18:59 165  ,jpy_g33
11:18:59 166  ,jpy_g34
11:18:59 167  ,jpy_g35
11:18:59 168  ,jpy_g36
11:18:59 169  ,jpy_g37
11:18:59 170  ,jpy_g38
11:18:59 171  ,jpy_g39
11:18:59 172  ,jpy_g40
11:18:59 173  ,jpy_g41
11:18:59 174  ,cad_g00
11:18:59 175  ,cad_g01
11:18:59 176  ,cad_g02
11:18:59 177  ,cad_g03
11:18:59 178  ,cad_g04
11:18:59 179  ,cad_g05
11:18:59 180  ,cad_g06
11:18:59 181  ,cad_g07
11:18:59 182  ,cad_g08
11:18:59 183  ,cad_g09
11:18:59 184  ,cad_g10
11:18:59 185  ,cad_g11
11:18:59 186  ,cad_g12
11:18:59 187  ,cad_g13
11:18:59 188  ,cad_g14
11:18:59 189  ,cad_g15
11:18:59 190  ,cad_g16
11:18:59 191  ,cad_g17
11:18:59 192  ,cad_g18
11:18:59 193  ,cad_g19
11:18:59 194  ,cad_g20
11:18:59 195  ,cad_g21
11:18:59 196  ,cad_g22
11:18:59 197  ,cad_g23
11:18:59 198  ,cad_g24
11:18:59 199  ,cad_g25
11:18:59 200  ,cad_g26
11:18:59 201  ,cad_g27
11:18:59 202  ,cad_g28
11:18:59 203  ,cad_g29
11:18:59 204  ,cad_g30
11:18:59 205  ,cad_g31
11:18:59 206  ,cad_g32
11:18:59 207  ,cad_g33
11:18:59 208  ,cad_g34
11:18:59 209  ,cad_g35
11:18:59 210  ,cad_g36
11:18:59 211  ,cad_g37
11:18:59 212  ,cad_g38
11:18:59 213  ,cad_g39
11:18:59 214  ,cad_g40
11:18:59 215  ,cad_g41
11:18:59 216  ,chf_g00
11:18:59 217  ,chf_g01
11:18:59 218  ,chf_g02
11:18:59 219  ,chf_g03
11:18:59 220  ,chf_g04
11:18:59 221  ,chf_g05
11:18:59 222  ,chf_g06
11:18:59 223  ,chf_g07
11:18:59 224  ,chf_g08
11:18:59 225  ,chf_g09
11:18:59 226  ,chf_g10
11:18:59 227  ,chf_g11
11:18:59 228  ,chf_g12
11:18:59 229  ,chf_g13
11:18:59 230  ,chf_g14
11:18:59 231  ,chf_g15
11:18:59 232  ,chf_g16
11:18:59 233  ,chf_g17
11:18:59 234  ,chf_g18
11:18:59 235  ,chf_g19
11:18:59 236  ,chf_g20
11:18:59 237  ,chf_g21
11:18:59 238  ,chf_g22
11:18:59 239  ,chf_g23
11:18:59 240  ,chf_g24
11:18:59 241  ,chf_g25
11:18:59 242  ,chf_g26
11:18:59 243  ,chf_g27
11:18:59 244  ,chf_g28
11:18:59 245  ,chf_g29
11:18:59 246  ,chf_g30
11:18:59 247  ,chf_g31
11:18:59 248  ,chf_g32
11:18:59 249  ,chf_g33
11:18:59 250  ,chf_g34
11:18:59 251  ,chf_g35
11:18:59 252  ,chf_g36
11:18:59 253  ,chf_g37
11:18:59 254  ,chf_g38
11:18:59 255  ,chf_g39
11:18:59 256  ,chf_g40
11:18:59 257  ,chf_g41
11:18:59 258  FROM aud_ms6 m
11:18:59 259  WHERE gatt IN('nup','up')
11:18:59 260  AND 1+m.ydate < '&1'||' '||'&2'
11:18:59 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-04'||' '||'11:00:00'

View created.

Elapsed: 00:00:00.11
11:18:59 SQL> 
11:18:59 SQL> -- rpt
11:18:59 SQL> 
11:18:59 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
11:18:59   2  
11:18:59 SQL> SELECT MAX(prdate) FROM bme
11:18:59   2  
11:18:59 SQL> -- Now build model from bme and score sme
11:18:59 SQL> @score1.sql
11:18:59 SQL> -- score1.sql
11:18:59 SQL> 
11:18:59 SQL> -- Does the 1st SVM score
11:18:59 SQL> 
11:18:59 SQL> -- Fill up svmc_apply_prep
11:18:59 SQL> @score.sql
11:18:59 SQL> --
11:18:59 SQL> -- score.sql
11:18:59 SQL> --
11:18:59 SQL> 
11:18:59 SQL> -- usage: score.sql
11:18:59 SQL> 
11:18:59 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
11:18:59 SQL> 
11:18:59 SQL> DEFINE target	= 'gatt'
11:18:59 SQL> DEFINE model_name = 'forex15'
11:18:59 SQL> DEFINE bldtable	= 'bme'
11:18:59 SQL> DEFINE scoretable = 'sme'
11:18:59 SQL> DEFINE case_id	= 'prdate'
11:18:59 SQL> 
11:18:59 SQL> -- Define a variable to help me exclude some columns from some data mining calls
11:18:59 SQL> DEFINE exclude1 = "'&target','&case_id'"
11:18:59 SQL> 
11:18:59 SQL> -- Builds an SVM model using pl/sql.
11:18:59 SQL> 
11:18:59 SQL> -----------------------------------------------------------------------
11:18:59 SQL> --			    BUILD THE MODEL
11:18:59 SQL> -----------------------------------------------------------------------
11:18:59 SQL> 
11:18:59 SQL> -- Cleanup old build data preparation objects for repeat runs
11:18:59 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
11:18:59 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
11:18:59 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
11:18:59 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
11:18:59 SQL> 
11:18:59 SQL> 
11:18:59 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
11:18:59 SQL> --
11:18:59 SQL> -- DROP	TABLE svmc_settings ;
11:18:59 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
11:18:59 SQL> -- DELETE svmc_settings;
11:18:59 SQL> 
11:18:59 SQL> -- The default classification algorithm is Naive Bayes. So override
11:18:59 SQL> -- this choice to SVM using a settings table.
11:18:59 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
11:18:59 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
11:18:59 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
11:18:59 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
11:18:59 SQL> -- models.
11:18:59 SQL> --
11:18:59 SQL> 
11:18:59 SQL> -- Do this once and then comment it out.
11:18:59 SQL> -- That makes script go faster.
11:18:59 SQL> -- BEGIN
11:18:59 SQL> -- -- Populate settings table
11:18:59 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:18:59 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
11:18:59 SQL> --
11:18:59 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:18:59 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
11:18:59 SQL> --
11:18:59 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:18:59 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
11:18:59 SQL> --   COMMIT;
11:18:59 SQL> -- END;
11:18:59 SQL> -- /
11:18:59 SQL> 
11:18:59 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
11:18:59 SQL> 
11:18:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
11:18:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:18:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:18:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
11:18:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:18:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:18:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
11:18:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:18:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:18:59 SQL> 
11:18:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
11:18:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:18:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:18:59 SQL> 
11:18:59 SQL> --------------------------------
11:18:59 SQL> -- PREPARE BUILD (TRAINING) DATA
11:18:59 SQL> --
11:18:59 SQL> 
11:18:59 SQL> -- 1. Missing Value treatment for all Predictors and
11:18:59 SQL> -- 2. Outlier Treatment and
11:18:59 SQL> -- 3. Normalization are performed below.
11:18:59 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
11:18:59 SQL> --    normalized here.
11:18:59 SQL> 
11:18:59 SQL> BEGIN
11:18:59   2  	-- Perform missing value treatment for all predictors
11:18:59   3  	-- create miss tables
11:18:59   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
11:18:59   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
11:18:59   6  
11:18:59   7  	-- populate miss tables
11:18:59   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
11:18:59   9  	  miss_table_name => 'svmc_miss_num',
11:18:59  10  	  data_table_name => '&bldtable',
11:18:59  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:18:59  12  
11:18:59  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
11:18:59  14  	  miss_table_name => 'svmc_miss_cat',
11:18:59  15  	  data_table_name => '&bldtable',
11:18:59  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:18:59  17  
11:18:59  18  	-- xform input data to replace missing values
11:18:59  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:18:59  20  	  miss_table_name => 'svmc_miss_num',
11:18:59  21  	  data_table_name => '&bldtable',
11:18:59  22  	  xform_view_name => 'xformed_build_miss_num');
11:18:59  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:18:59  24  	  miss_table_name => 'svmc_miss_cat',
11:18:59  25  	  data_table_name => '&bldtable',
11:18:59  26  	  xform_view_name => 'xformed_build_miss_cat');
11:18:59  27  
11:18:59  28  	-- Perform outlier treatment.
11:18:59  29  	-- create clip table
11:18:59  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
11:18:59  31  
11:18:59  32  	-- populate clip table
11:18:59  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
11:18:59  34  	  clip_table_name => 'svmc_clip',
11:18:59  35  	  data_table_name => '&bldtable',
11:18:59  36  	  tail_frac	  => 0.025,
11:18:59  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:18:59  38  
11:18:59  39  	-- xform input data to winsorized data
11:18:59  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
11:18:59  41  	  clip_table_name => 'svmc_clip',
11:18:59  42  	  data_table_name => '&bldtable',
11:18:59  43  	  xform_view_name => 'svmc_winsor');
11:18:59  44  
11:18:59  45  	-- create normalization table
11:18:59  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
11:18:59  47  
11:18:59  48  	-- populate normalization table based on winsorized data
11:18:59  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
11:18:59  50  	  norm_table_name => 'svmc_norm',
11:18:59  51  	  data_table_name => 'svmc_winsor',
11:18:59  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:18:59  53  
11:18:59  54  	-- normalize the original data
11:18:59  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:18:59  56  	  norm_table_name => 'svmc_norm',
11:18:59  57  	  data_table_name => '&bldtable',
11:18:59  58  	  xform_view_name => 'svmc_build_prep');
11:18:59  59  END;
11:18:59  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.68
11:19:17 SQL> 
11:19:17 SQL> ---------------------
11:19:17 SQL> -- CREATE A NEW MODEL
11:19:17 SQL> --
11:19:17 SQL> -- Cleanup old model with the same name for repeat runs
11:19:17 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
11:19:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:19:17   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.97
11:19:18 SQL> 
11:19:18 SQL> -- Build a new SVM Model
11:19:18 SQL> BEGIN
11:19:18   2  	DBMS_DATA_MINING.CREATE_MODEL(
11:19:18   3  	  model_name	      => '&model_name',
11:19:18   4  	  mining_function     => dbms_data_mining.classification,
11:19:18   5  	  data_table_name     => 'svmc_build_prep',
11:19:18   6  	  case_id_column_name => '&case_id',
11:19:18   7  	  target_column_name  => '&target',
11:19:18   8  	  settings_table_name => 'svmc_settings');
11:19:18   9  END;
11:19:18  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.92
11:19:45 SQL> 
11:19:45 SQL> -----------------------------------------------------------------------
11:19:45 SQL> --			       APPLY/score THE MODEL
11:19:45 SQL> -----------------------------------------------------------------------
11:19:45 SQL> 
11:19:45 SQL> -- Cleanup old scoring data preparation objects for repeat runs
11:19:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
11:19:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:19:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
11:19:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
11:19:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:19:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:19:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
11:19:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:19:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
11:19:45 SQL> -----------------------
11:19:45 SQL> -- PREPARE SCORING DATA
11:19:45 SQL> --
11:19:45 SQL> -- If the data for model creation has been prepared, then the data
11:19:45 SQL> -- to be scored using the model must be prepared in the same manner
11:19:45 SQL> -- in order to obtain meaningful results.
11:19:45 SQL> --
11:19:45 SQL> -- 1. Missing Value treatment for all Predictors and
11:19:45 SQL> -- 2. Normalization
11:19:45 SQL> -- No outlier treatment will be performed during test and apply. The
11:19:45 SQL> -- normalization step is sufficient, since the normalization parameters
11:19:45 SQL> -- already capture the effects of outlier treatment done with build data.
11:19:45 SQL> --
11:19:45 SQL> BEGIN
11:19:45   2  	-- Xform Test data to replace missing values
11:19:45   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:19:45   4  	  miss_table_name => 'svmc_miss_num',
11:19:45   5  	  data_table_name => '&scoretable',
11:19:45   6  	  xform_view_name => 'xformed_apply_miss_num');
11:19:45   7  
11:19:45   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:19:45   9  	  miss_table_name => 'svmc_miss_cat',
11:19:45  10  	  data_table_name => '&scoretable',
11:19:45  11  	  xform_view_name => 'xformed_apply_miss_cat');
11:19:45  12  
11:19:45  13  	-- Normalize the data to be scored
11:19:45  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:19:45  15  	  norm_table_name => 'svmc_norm',
11:19:45  16  	  data_table_name => '&scoretable',
11:19:45  17  	  xform_view_name => 'svmc_apply_prep');
11:19:45  18  END;
11:19:45  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.28
11:19:46 SQL> 
11:19:46 SQL> -- Use same model_name used in score.sql
11:19:46 SQL> DEFINE model_name = 'forex15'
11:19:46 SQL> 
11:19:46 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
11:19:46 SQL> 
11:19:46 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
11:19:46 SQL> 
11:19:46 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
11:19:46   2  SELECT
11:19:46   3  prdate
11:19:46   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
11:19:46   5  ,sysdate
11:19:46   6  ,SUBSTR(prdate,1,3)pair
11:19:46   7  ,SUBSTR(prdate,4,19)ydate
11:19:46   8  FROM svmc_apply_prep
11:19:46   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
11:19:46 SQL> @aud_score1day.sql  2011-01-04 11:05:00
11:19:46 SQL> --
11:19:46 SQL> -- aud_score1day.sql
11:19:46 SQL> --
11:19:46 SQL> 
11:19:46 SQL> CREATE OR REPLACE VIEW sme AS
11:19:46   2  SELECT
11:19:46   3  'aud'||m.ydate prdate
11:19:46   4  ,NULL gatt
11:19:46   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:19:46   6  ,eur_g00
11:19:46   7  ,eur_g01
11:19:46   8  ,eur_g02
11:19:46   9  ,eur_g03
11:19:46  10  ,eur_g04
11:19:46  11  ,eur_g05
11:19:46  12  ,eur_g06
11:19:46  13  ,eur_g07
11:19:46  14  ,eur_g08
11:19:46  15  ,eur_g09
11:19:46  16  ,eur_g10
11:19:46  17  ,eur_g11
11:19:46  18  ,eur_g12
11:19:46  19  ,eur_g13
11:19:46  20  ,eur_g14
11:19:46  21  ,eur_g15
11:19:46  22  ,eur_g16
11:19:46  23  ,eur_g17
11:19:46  24  ,eur_g18
11:19:46  25  ,eur_g19
11:19:46  26  ,eur_g20
11:19:46  27  ,eur_g21
11:19:46  28  ,eur_g22
11:19:46  29  ,eur_g23
11:19:46  30  ,eur_g24
11:19:46  31  ,eur_g25
11:19:46  32  ,eur_g26
11:19:46  33  ,eur_g27
11:19:46  34  ,eur_g28
11:19:46  35  ,eur_g29
11:19:46  36  ,eur_g30
11:19:46  37  ,eur_g31
11:19:46  38  ,eur_g32
11:19:46  39  ,eur_g33
11:19:46  40  ,eur_g34
11:19:46  41  ,eur_g35
11:19:46  42  ,eur_g36
11:19:46  43  ,eur_g37
11:19:46  44  ,eur_g38
11:19:46  45  ,eur_g39
11:19:46  46  ,eur_g40
11:19:46  47  ,eur_g41
11:19:46  48  ,aud_g00
11:19:46  49  ,aud_g01
11:19:46  50  ,aud_g02
11:19:46  51  ,aud_g03
11:19:46  52  ,aud_g04
11:19:46  53  ,aud_g05
11:19:46  54  ,aud_g06
11:19:46  55  ,aud_g07
11:19:46  56  ,aud_g08
11:19:46  57  ,aud_g09
11:19:46  58  ,aud_g10
11:19:46  59  ,aud_g11
11:19:46  60  ,aud_g12
11:19:46  61  ,aud_g13
11:19:46  62  ,aud_g14
11:19:46  63  ,aud_g15
11:19:46  64  ,aud_g16
11:19:46  65  ,aud_g17
11:19:46  66  ,aud_g18
11:19:46  67  ,aud_g19
11:19:46  68  ,aud_g20
11:19:46  69  ,aud_g21
11:19:46  70  ,aud_g22
11:19:46  71  ,aud_g23
11:19:46  72  ,aud_g24
11:19:46  73  ,aud_g25
11:19:46  74  ,aud_g26
11:19:46  75  ,aud_g27
11:19:46  76  ,aud_g28
11:19:46  77  ,aud_g29
11:19:46  78  ,aud_g30
11:19:46  79  ,aud_g31
11:19:46  80  ,aud_g32
11:19:46  81  ,aud_g33
11:19:46  82  ,aud_g34
11:19:46  83  ,aud_g35
11:19:46  84  ,aud_g36
11:19:46  85  ,aud_g37
11:19:46  86  ,aud_g38
11:19:46  87  ,aud_g39
11:19:46  88  ,aud_g40
11:19:46  89  ,aud_g41
11:19:46  90  ,gbp_g00
11:19:46  91  ,gbp_g01
11:19:46  92  ,gbp_g02
11:19:46  93  ,gbp_g03
11:19:46  94  ,gbp_g04
11:19:46  95  ,gbp_g05
11:19:46  96  ,gbp_g06
11:19:46  97  ,gbp_g07
11:19:46  98  ,gbp_g08
11:19:46  99  ,gbp_g09
11:19:46 100  ,gbp_g10
11:19:46 101  ,gbp_g11
11:19:46 102  ,gbp_g12
11:19:46 103  ,gbp_g13
11:19:46 104  ,gbp_g14
11:19:46 105  ,gbp_g15
11:19:46 106  ,gbp_g16
11:19:46 107  ,gbp_g17
11:19:46 108  ,gbp_g18
11:19:46 109  ,gbp_g19
11:19:46 110  ,gbp_g20
11:19:46 111  ,gbp_g21
11:19:46 112  ,gbp_g22
11:19:46 113  ,gbp_g23
11:19:46 114  ,gbp_g24
11:19:46 115  ,gbp_g25
11:19:46 116  ,gbp_g26
11:19:46 117  ,gbp_g27
11:19:46 118  ,gbp_g28
11:19:46 119  ,gbp_g29
11:19:46 120  ,gbp_g30
11:19:46 121  ,gbp_g31
11:19:46 122  ,gbp_g32
11:19:46 123  ,gbp_g33
11:19:46 124  ,gbp_g34
11:19:46 125  ,gbp_g35
11:19:46 126  ,gbp_g36
11:19:46 127  ,gbp_g37
11:19:46 128  ,gbp_g38
11:19:46 129  ,gbp_g39
11:19:46 130  ,gbp_g40
11:19:46 131  ,gbp_g41
11:19:46 132  ,jpy_g00
11:19:46 133  ,jpy_g01
11:19:46 134  ,jpy_g02
11:19:46 135  ,jpy_g03
11:19:46 136  ,jpy_g04
11:19:46 137  ,jpy_g05
11:19:46 138  ,jpy_g06
11:19:46 139  ,jpy_g07
11:19:46 140  ,jpy_g08
11:19:46 141  ,jpy_g09
11:19:46 142  ,jpy_g10
11:19:46 143  ,jpy_g11
11:19:46 144  ,jpy_g12
11:19:46 145  ,jpy_g13
11:19:46 146  ,jpy_g14
11:19:46 147  ,jpy_g15
11:19:46 148  ,jpy_g16
11:19:46 149  ,jpy_g17
11:19:46 150  ,jpy_g18
11:19:46 151  ,jpy_g19
11:19:46 152  ,jpy_g20
11:19:46 153  ,jpy_g21
11:19:46 154  ,jpy_g22
11:19:46 155  ,jpy_g23
11:19:46 156  ,jpy_g24
11:19:46 157  ,jpy_g25
11:19:46 158  ,jpy_g26
11:19:46 159  ,jpy_g27
11:19:46 160  ,jpy_g28
11:19:46 161  ,jpy_g29
11:19:46 162  ,jpy_g30
11:19:46 163  ,jpy_g31
11:19:46 164  ,jpy_g32
11:19:46 165  ,jpy_g33
11:19:46 166  ,jpy_g34
11:19:46 167  ,jpy_g35
11:19:46 168  ,jpy_g36
11:19:46 169  ,jpy_g37
11:19:46 170  ,jpy_g38
11:19:46 171  ,jpy_g39
11:19:46 172  ,jpy_g40
11:19:46 173  ,jpy_g41
11:19:46 174  ,cad_g00
11:19:46 175  ,cad_g01
11:19:46 176  ,cad_g02
11:19:46 177  ,cad_g03
11:19:46 178  ,cad_g04
11:19:46 179  ,cad_g05
11:19:46 180  ,cad_g06
11:19:46 181  ,cad_g07
11:19:46 182  ,cad_g08
11:19:46 183  ,cad_g09
11:19:46 184  ,cad_g10
11:19:46 185  ,cad_g11
11:19:46 186  ,cad_g12
11:19:46 187  ,cad_g13
11:19:46 188  ,cad_g14
11:19:46 189  ,cad_g15
11:19:46 190  ,cad_g16
11:19:46 191  ,cad_g17
11:19:46 192  ,cad_g18
11:19:46 193  ,cad_g19
11:19:46 194  ,cad_g20
11:19:46 195  ,cad_g21
11:19:46 196  ,cad_g22
11:19:46 197  ,cad_g23
11:19:46 198  ,cad_g24
11:19:46 199  ,cad_g25
11:19:46 200  ,cad_g26
11:19:46 201  ,cad_g27
11:19:46 202  ,cad_g28
11:19:46 203  ,cad_g29
11:19:46 204  ,cad_g30
11:19:46 205  ,cad_g31
11:19:46 206  ,cad_g32
11:19:46 207  ,cad_g33
11:19:46 208  ,cad_g34
11:19:46 209  ,cad_g35
11:19:46 210  ,cad_g36
11:19:46 211  ,cad_g37
11:19:46 212  ,cad_g38
11:19:46 213  ,cad_g39
11:19:46 214  ,cad_g40
11:19:46 215  ,cad_g41
11:19:46 216  ,chf_g00
11:19:46 217  ,chf_g01
11:19:46 218  ,chf_g02
11:19:46 219  ,chf_g03
11:19:46 220  ,chf_g04
11:19:46 221  ,chf_g05
11:19:46 222  ,chf_g06
11:19:46 223  ,chf_g07
11:19:46 224  ,chf_g08
11:19:46 225  ,chf_g09
11:19:46 226  ,chf_g10
11:19:46 227  ,chf_g11
11:19:46 228  ,chf_g12
11:19:46 229  ,chf_g13
11:19:46 230  ,chf_g14
11:19:46 231  ,chf_g15
11:19:46 232  ,chf_g16
11:19:46 233  ,chf_g17
11:19:46 234  ,chf_g18
11:19:46 235  ,chf_g19
11:19:46 236  ,chf_g20
11:19:46 237  ,chf_g21
11:19:46 238  ,chf_g22
11:19:46 239  ,chf_g23
11:19:46 240  ,chf_g24
11:19:46 241  ,chf_g25
11:19:46 242  ,chf_g26
11:19:46 243  ,chf_g27
11:19:46 244  ,chf_g28
11:19:46 245  ,chf_g29
11:19:46 246  ,chf_g30
11:19:46 247  ,chf_g31
11:19:46 248  ,chf_g32
11:19:46 249  ,chf_g33
11:19:46 250  ,chf_g34
11:19:46 251  ,chf_g35
11:19:46 252  ,chf_g36
11:19:46 253  ,chf_g37
11:19:46 254  ,chf_g38
11:19:46 255  ,chf_g39
11:19:46 256  ,chf_g40
11:19:46 257  ,chf_g41
11:19:46 258  FROM aud_ms6 m
11:19:46 259  WHERE m.ydate = '&1'||' '||'&2'
11:19:46 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-04'||' '||'11:05:00'

View created.

Elapsed: 00:00:00.12
11:19:46 SQL> 
11:19:46 SQL> -- rpt
11:19:46 SQL> -- We should see just 1 row:
11:19:46 SQL> 
11:19:46 SQL> SELECT COUNT(prdate) FROM sme
11:19:46   2  
11:19:46 SQL> -- Build the model:
11:19:46 SQL> CREATE OR REPLACE VIEW bme AS
11:19:46   2  SELECT
11:19:46   3  'aud'||m.ydate prdate
11:19:46   4  ,gatt
11:19:46   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:19:46   6  ,eur_g00
11:19:46   7  ,eur_g01
11:19:46   8  ,eur_g02
11:19:46   9  ,eur_g03
11:19:46  10  ,eur_g04
11:19:46  11  ,eur_g05
11:19:46  12  ,eur_g06
11:19:46  13  ,eur_g07
11:19:46  14  ,eur_g08
11:19:46  15  ,eur_g09
11:19:46  16  ,eur_g10
11:19:46  17  ,eur_g11
11:19:46  18  ,eur_g12
11:19:46  19  ,eur_g13
11:19:46  20  ,eur_g14
11:19:46  21  ,eur_g15
11:19:46  22  ,eur_g16
11:19:46  23  ,eur_g17
11:19:46  24  ,eur_g18
11:19:46  25  ,eur_g19
11:19:46  26  ,eur_g20
11:19:46  27  ,eur_g21
11:19:46  28  ,eur_g22
11:19:46  29  ,eur_g23
11:19:46  30  ,eur_g24
11:19:46  31  ,eur_g25
11:19:46  32  ,eur_g26
11:19:46  33  ,eur_g27
11:19:46  34  ,eur_g28
11:19:46  35  ,eur_g29
11:19:46  36  ,eur_g30
11:19:46  37  ,eur_g31
11:19:46  38  ,eur_g32
11:19:46  39  ,eur_g33
11:19:46  40  ,eur_g34
11:19:46  41  ,eur_g35
11:19:46  42  ,eur_g36
11:19:46  43  ,eur_g37
11:19:46  44  ,eur_g38
11:19:46  45  ,eur_g39
11:19:46  46  ,eur_g40
11:19:46  47  ,eur_g41
11:19:46  48  ,aud_g00
11:19:46  49  ,aud_g01
11:19:46  50  ,aud_g02
11:19:46  51  ,aud_g03
11:19:46  52  ,aud_g04
11:19:46  53  ,aud_g05
11:19:46  54  ,aud_g06
11:19:46  55  ,aud_g07
11:19:46  56  ,aud_g08
11:19:46  57  ,aud_g09
11:19:46  58  ,aud_g10
11:19:46  59  ,aud_g11
11:19:46  60  ,aud_g12
11:19:46  61  ,aud_g13
11:19:46  62  ,aud_g14
11:19:46  63  ,aud_g15
11:19:46  64  ,aud_g16
11:19:46  65  ,aud_g17
11:19:46  66  ,aud_g18
11:19:46  67  ,aud_g19
11:19:46  68  ,aud_g20
11:19:46  69  ,aud_g21
11:19:46  70  ,aud_g22
11:19:46  71  ,aud_g23
11:19:46  72  ,aud_g24
11:19:46  73  ,aud_g25
11:19:46  74  ,aud_g26
11:19:46  75  ,aud_g27
11:19:46  76  ,aud_g28
11:19:46  77  ,aud_g29
11:19:46  78  ,aud_g30
11:19:46  79  ,aud_g31
11:19:46  80  ,aud_g32
11:19:46  81  ,aud_g33
11:19:46  82  ,aud_g34
11:19:46  83  ,aud_g35
11:19:46  84  ,aud_g36
11:19:46  85  ,aud_g37
11:19:46  86  ,aud_g38
11:19:46  87  ,aud_g39
11:19:46  88  ,aud_g40
11:19:46  89  ,aud_g41
11:19:46  90  ,gbp_g00
11:19:46  91  ,gbp_g01
11:19:46  92  ,gbp_g02
11:19:46  93  ,gbp_g03
11:19:46  94  ,gbp_g04
11:19:46  95  ,gbp_g05
11:19:46  96  ,gbp_g06
11:19:46  97  ,gbp_g07
11:19:46  98  ,gbp_g08
11:19:46  99  ,gbp_g09
11:19:46 100  ,gbp_g10
11:19:46 101  ,gbp_g11
11:19:46 102  ,gbp_g12
11:19:46 103  ,gbp_g13
11:19:46 104  ,gbp_g14
11:19:46 105  ,gbp_g15
11:19:46 106  ,gbp_g16
11:19:46 107  ,gbp_g17
11:19:46 108  ,gbp_g18
11:19:46 109  ,gbp_g19
11:19:46 110  ,gbp_g20
11:19:46 111  ,gbp_g21
11:19:46 112  ,gbp_g22
11:19:46 113  ,gbp_g23
11:19:46 114  ,gbp_g24
11:19:46 115  ,gbp_g25
11:19:46 116  ,gbp_g26
11:19:46 117  ,gbp_g27
11:19:46 118  ,gbp_g28
11:19:46 119  ,gbp_g29
11:19:46 120  ,gbp_g30
11:19:46 121  ,gbp_g31
11:19:46 122  ,gbp_g32
11:19:46 123  ,gbp_g33
11:19:46 124  ,gbp_g34
11:19:46 125  ,gbp_g35
11:19:46 126  ,gbp_g36
11:19:46 127  ,gbp_g37
11:19:46 128  ,gbp_g38
11:19:46 129  ,gbp_g39
11:19:46 130  ,gbp_g40
11:19:46 131  ,gbp_g41
11:19:46 132  ,jpy_g00
11:19:46 133  ,jpy_g01
11:19:46 134  ,jpy_g02
11:19:46 135  ,jpy_g03
11:19:46 136  ,jpy_g04
11:19:46 137  ,jpy_g05
11:19:46 138  ,jpy_g06
11:19:46 139  ,jpy_g07
11:19:46 140  ,jpy_g08
11:19:46 141  ,jpy_g09
11:19:46 142  ,jpy_g10
11:19:46 143  ,jpy_g11
11:19:46 144  ,jpy_g12
11:19:46 145  ,jpy_g13
11:19:46 146  ,jpy_g14
11:19:46 147  ,jpy_g15
11:19:46 148  ,jpy_g16
11:19:46 149  ,jpy_g17
11:19:46 150  ,jpy_g18
11:19:46 151  ,jpy_g19
11:19:46 152  ,jpy_g20
11:19:46 153  ,jpy_g21
11:19:46 154  ,jpy_g22
11:19:46 155  ,jpy_g23
11:19:46 156  ,jpy_g24
11:19:46 157  ,jpy_g25
11:19:46 158  ,jpy_g26
11:19:46 159  ,jpy_g27
11:19:46 160  ,jpy_g28
11:19:46 161  ,jpy_g29
11:19:46 162  ,jpy_g30
11:19:46 163  ,jpy_g31
11:19:46 164  ,jpy_g32
11:19:46 165  ,jpy_g33
11:19:46 166  ,jpy_g34
11:19:46 167  ,jpy_g35
11:19:46 168  ,jpy_g36
11:19:46 169  ,jpy_g37
11:19:46 170  ,jpy_g38
11:19:46 171  ,jpy_g39
11:19:46 172  ,jpy_g40
11:19:46 173  ,jpy_g41
11:19:46 174  ,cad_g00
11:19:46 175  ,cad_g01
11:19:46 176  ,cad_g02
11:19:46 177  ,cad_g03
11:19:46 178  ,cad_g04
11:19:46 179  ,cad_g05
11:19:46 180  ,cad_g06
11:19:46 181  ,cad_g07
11:19:46 182  ,cad_g08
11:19:46 183  ,cad_g09
11:19:46 184  ,cad_g10
11:19:46 185  ,cad_g11
11:19:46 186  ,cad_g12
11:19:46 187  ,cad_g13
11:19:46 188  ,cad_g14
11:19:46 189  ,cad_g15
11:19:46 190  ,cad_g16
11:19:46 191  ,cad_g17
11:19:46 192  ,cad_g18
11:19:46 193  ,cad_g19
11:19:46 194  ,cad_g20
11:19:46 195  ,cad_g21
11:19:46 196  ,cad_g22
11:19:46 197  ,cad_g23
11:19:46 198  ,cad_g24
11:19:46 199  ,cad_g25
11:19:46 200  ,cad_g26
11:19:46 201  ,cad_g27
11:19:46 202  ,cad_g28
11:19:46 203  ,cad_g29
11:19:46 204  ,cad_g30
11:19:46 205  ,cad_g31
11:19:46 206  ,cad_g32
11:19:46 207  ,cad_g33
11:19:46 208  ,cad_g34
11:19:46 209  ,cad_g35
11:19:46 210  ,cad_g36
11:19:46 211  ,cad_g37
11:19:46 212  ,cad_g38
11:19:46 213  ,cad_g39
11:19:46 214  ,cad_g40
11:19:46 215  ,cad_g41
11:19:46 216  ,chf_g00
11:19:46 217  ,chf_g01
11:19:46 218  ,chf_g02
11:19:46 219  ,chf_g03
11:19:46 220  ,chf_g04
11:19:46 221  ,chf_g05
11:19:46 222  ,chf_g06
11:19:46 223  ,chf_g07
11:19:46 224  ,chf_g08
11:19:46 225  ,chf_g09
11:19:46 226  ,chf_g10
11:19:46 227  ,chf_g11
11:19:46 228  ,chf_g12
11:19:46 229  ,chf_g13
11:19:46 230  ,chf_g14
11:19:46 231  ,chf_g15
11:19:46 232  ,chf_g16
11:19:46 233  ,chf_g17
11:19:46 234  ,chf_g18
11:19:46 235  ,chf_g19
11:19:46 236  ,chf_g20
11:19:46 237  ,chf_g21
11:19:46 238  ,chf_g22
11:19:46 239  ,chf_g23
11:19:46 240  ,chf_g24
11:19:46 241  ,chf_g25
11:19:46 242  ,chf_g26
11:19:46 243  ,chf_g27
11:19:46 244  ,chf_g28
11:19:46 245  ,chf_g29
11:19:46 246  ,chf_g30
11:19:46 247  ,chf_g31
11:19:46 248  ,chf_g32
11:19:46 249  ,chf_g33
11:19:46 250  ,chf_g34
11:19:46 251  ,chf_g35
11:19:46 252  ,chf_g36
11:19:46 253  ,chf_g37
11:19:46 254  ,chf_g38
11:19:46 255  ,chf_g39
11:19:46 256  ,chf_g40
11:19:46 257  ,chf_g41
11:19:46 258  FROM aud_ms6 m
11:19:46 259  WHERE gatt IN('nup','up')
11:19:46 260  AND 1+m.ydate < '&1'||' '||'&2'
11:19:46 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-04'||' '||'11:05:00'

View created.

Elapsed: 00:00:00.11
11:19:47 SQL> 
11:19:47 SQL> -- rpt
11:19:47 SQL> 
11:19:47 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
11:19:47   2  
11:19:47 SQL> SELECT MAX(prdate) FROM bme
11:19:47   2  
11:19:47 SQL> -- Now build model from bme and score sme
11:19:47 SQL> @score1.sql
11:19:47 SQL> -- score1.sql
11:19:47 SQL> 
11:19:47 SQL> -- Does the 1st SVM score
11:19:47 SQL> 
11:19:47 SQL> -- Fill up svmc_apply_prep
11:19:47 SQL> @score.sql
11:19:47 SQL> --
11:19:47 SQL> -- score.sql
11:19:47 SQL> --
11:19:47 SQL> 
11:19:47 SQL> -- usage: score.sql
11:19:47 SQL> 
11:19:47 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
11:19:47 SQL> 
11:19:47 SQL> DEFINE target	= 'gatt'
11:19:47 SQL> DEFINE model_name = 'forex15'
11:19:47 SQL> DEFINE bldtable	= 'bme'
11:19:47 SQL> DEFINE scoretable = 'sme'
11:19:47 SQL> DEFINE case_id	= 'prdate'
11:19:47 SQL> 
11:19:47 SQL> -- Define a variable to help me exclude some columns from some data mining calls
11:19:47 SQL> DEFINE exclude1 = "'&target','&case_id'"
11:19:47 SQL> 
11:19:47 SQL> -- Builds an SVM model using pl/sql.
11:19:47 SQL> 
11:19:47 SQL> -----------------------------------------------------------------------
11:19:47 SQL> --			    BUILD THE MODEL
11:19:47 SQL> -----------------------------------------------------------------------
11:19:47 SQL> 
11:19:47 SQL> -- Cleanup old build data preparation objects for repeat runs
11:19:47 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
11:19:47 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
11:19:47 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
11:19:47 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
11:19:47 SQL> 
11:19:47 SQL> 
11:19:47 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
11:19:47 SQL> --
11:19:47 SQL> -- DROP	TABLE svmc_settings ;
11:19:47 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
11:19:47 SQL> -- DELETE svmc_settings;
11:19:47 SQL> 
11:19:47 SQL> -- The default classification algorithm is Naive Bayes. So override
11:19:47 SQL> -- this choice to SVM using a settings table.
11:19:47 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
11:19:47 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
11:19:47 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
11:19:47 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
11:19:47 SQL> -- models.
11:19:47 SQL> --
11:19:47 SQL> 
11:19:47 SQL> -- Do this once and then comment it out.
11:19:47 SQL> -- That makes script go faster.
11:19:47 SQL> -- BEGIN
11:19:47 SQL> -- -- Populate settings table
11:19:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:19:47 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
11:19:47 SQL> --
11:19:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:19:47 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
11:19:47 SQL> --
11:19:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:19:47 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
11:19:47 SQL> --   COMMIT;
11:19:47 SQL> -- END;
11:19:47 SQL> -- /
11:19:47 SQL> 
11:19:47 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
11:19:47 SQL> 
11:19:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
11:19:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:19:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:19:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
11:19:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:19:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:19:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
11:19:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:19:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:19:47 SQL> 
11:19:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
11:19:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:19:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:19:47 SQL> 
11:19:47 SQL> --------------------------------
11:19:47 SQL> -- PREPARE BUILD (TRAINING) DATA
11:19:47 SQL> --
11:19:47 SQL> 
11:19:47 SQL> -- 1. Missing Value treatment for all Predictors and
11:19:47 SQL> -- 2. Outlier Treatment and
11:19:47 SQL> -- 3. Normalization are performed below.
11:19:47 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
11:19:47 SQL> --    normalized here.
11:19:47 SQL> 
11:19:47 SQL> BEGIN
11:19:47   2  	-- Perform missing value treatment for all predictors
11:19:47   3  	-- create miss tables
11:19:47   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
11:19:47   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
11:19:47   6  
11:19:47   7  	-- populate miss tables
11:19:47   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
11:19:47   9  	  miss_table_name => 'svmc_miss_num',
11:19:47  10  	  data_table_name => '&bldtable',
11:19:47  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:19:47  12  
11:19:47  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
11:19:47  14  	  miss_table_name => 'svmc_miss_cat',
11:19:47  15  	  data_table_name => '&bldtable',
11:19:47  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:19:47  17  
11:19:47  18  	-- xform input data to replace missing values
11:19:47  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:19:47  20  	  miss_table_name => 'svmc_miss_num',
11:19:47  21  	  data_table_name => '&bldtable',
11:19:47  22  	  xform_view_name => 'xformed_build_miss_num');
11:19:47  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:19:47  24  	  miss_table_name => 'svmc_miss_cat',
11:19:47  25  	  data_table_name => '&bldtable',
11:19:47  26  	  xform_view_name => 'xformed_build_miss_cat');
11:19:47  27  
11:19:47  28  	-- Perform outlier treatment.
11:19:47  29  	-- create clip table
11:19:47  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
11:19:47  31  
11:19:47  32  	-- populate clip table
11:19:47  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
11:19:47  34  	  clip_table_name => 'svmc_clip',
11:19:47  35  	  data_table_name => '&bldtable',
11:19:47  36  	  tail_frac	  => 0.025,
11:19:47  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:19:47  38  
11:19:47  39  	-- xform input data to winsorized data
11:19:47  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
11:19:47  41  	  clip_table_name => 'svmc_clip',
11:19:47  42  	  data_table_name => '&bldtable',
11:19:47  43  	  xform_view_name => 'svmc_winsor');
11:19:47  44  
11:19:47  45  	-- create normalization table
11:19:47  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
11:19:47  47  
11:19:47  48  	-- populate normalization table based on winsorized data
11:19:47  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
11:19:47  50  	  norm_table_name => 'svmc_norm',
11:19:47  51  	  data_table_name => 'svmc_winsor',
11:19:47  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:19:47  53  
11:19:47  54  	-- normalize the original data
11:19:47  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:19:47  56  	  norm_table_name => 'svmc_norm',
11:19:47  57  	  data_table_name => '&bldtable',
11:19:47  58  	  xform_view_name => 'svmc_build_prep');
11:19:47  59  END;
11:19:47  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.67
11:20:04 SQL> 
11:20:04 SQL> ---------------------
11:20:04 SQL> -- CREATE A NEW MODEL
11:20:04 SQL> --
11:20:04 SQL> -- Cleanup old model with the same name for repeat runs
11:20:04 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
11:20:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:20:04   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.01
11:20:06 SQL> 
11:20:06 SQL> -- Build a new SVM Model
11:20:06 SQL> BEGIN
11:20:06   2  	DBMS_DATA_MINING.CREATE_MODEL(
11:20:06   3  	  model_name	      => '&model_name',
11:20:06   4  	  mining_function     => dbms_data_mining.classification,
11:20:06   5  	  data_table_name     => 'svmc_build_prep',
11:20:06   6  	  case_id_column_name => '&case_id',
11:20:06   7  	  target_column_name  => '&target',
11:20:06   8  	  settings_table_name => 'svmc_settings');
11:20:06   9  END;
11:20:06  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.69
11:20:32 SQL> 
11:20:32 SQL> -----------------------------------------------------------------------
11:20:32 SQL> --			       APPLY/score THE MODEL
11:20:32 SQL> -----------------------------------------------------------------------
11:20:32 SQL> 
11:20:32 SQL> -- Cleanup old scoring data preparation objects for repeat runs
11:20:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
11:20:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:20:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
11:20:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
11:20:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:20:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:20:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
11:20:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:20:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:20:32 SQL> -----------------------
11:20:32 SQL> -- PREPARE SCORING DATA
11:20:32 SQL> --
11:20:32 SQL> -- If the data for model creation has been prepared, then the data
11:20:32 SQL> -- to be scored using the model must be prepared in the same manner
11:20:32 SQL> -- in order to obtain meaningful results.
11:20:32 SQL> --
11:20:32 SQL> -- 1. Missing Value treatment for all Predictors and
11:20:32 SQL> -- 2. Normalization
11:20:32 SQL> -- No outlier treatment will be performed during test and apply. The
11:20:32 SQL> -- normalization step is sufficient, since the normalization parameters
11:20:32 SQL> -- already capture the effects of outlier treatment done with build data.
11:20:32 SQL> --
11:20:32 SQL> BEGIN
11:20:32   2  	-- Xform Test data to replace missing values
11:20:32   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:20:32   4  	  miss_table_name => 'svmc_miss_num',
11:20:32   5  	  data_table_name => '&scoretable',
11:20:32   6  	  xform_view_name => 'xformed_apply_miss_num');
11:20:32   7  
11:20:32   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:20:32   9  	  miss_table_name => 'svmc_miss_cat',
11:20:32  10  	  data_table_name => '&scoretable',
11:20:32  11  	  xform_view_name => 'xformed_apply_miss_cat');
11:20:32  12  
11:20:32  13  	-- Normalize the data to be scored
11:20:32  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:20:32  15  	  norm_table_name => 'svmc_norm',
11:20:32  16  	  data_table_name => '&scoretable',
11:20:32  17  	  xform_view_name => 'svmc_apply_prep');
11:20:32  18  END;
11:20:32  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.28
11:20:34 SQL> 
11:20:34 SQL> -- Use same model_name used in score.sql
11:20:34 SQL> DEFINE model_name = 'forex15'
11:20:34 SQL> 
11:20:34 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
11:20:34 SQL> 
11:20:34 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
11:20:34 SQL> 
11:20:34 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
11:20:34   2  SELECT
11:20:34   3  prdate
11:20:34   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
11:20:34   5  ,sysdate
11:20:34   6  ,SUBSTR(prdate,1,3)pair
11:20:34   7  ,SUBSTR(prdate,4,19)ydate
11:20:34   8  FROM svmc_apply_prep
11:20:34   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
11:20:34 SQL> @aud_score1day.sql  2011-01-04 11:10:00
11:20:34 SQL> --
11:20:34 SQL> -- aud_score1day.sql
11:20:34 SQL> --
11:20:34 SQL> 
11:20:34 SQL> CREATE OR REPLACE VIEW sme AS
11:20:34   2  SELECT
11:20:34   3  'aud'||m.ydate prdate
11:20:34   4  ,NULL gatt
11:20:34   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:20:34   6  ,eur_g00
11:20:34   7  ,eur_g01
11:20:34   8  ,eur_g02
11:20:34   9  ,eur_g03
11:20:34  10  ,eur_g04
11:20:34  11  ,eur_g05
11:20:34  12  ,eur_g06
11:20:34  13  ,eur_g07
11:20:34  14  ,eur_g08
11:20:34  15  ,eur_g09
11:20:34  16  ,eur_g10
11:20:34  17  ,eur_g11
11:20:34  18  ,eur_g12
11:20:34  19  ,eur_g13
11:20:34  20  ,eur_g14
11:20:34  21  ,eur_g15
11:20:34  22  ,eur_g16
11:20:34  23  ,eur_g17
11:20:34  24  ,eur_g18
11:20:34  25  ,eur_g19
11:20:34  26  ,eur_g20
11:20:34  27  ,eur_g21
11:20:34  28  ,eur_g22
11:20:34  29  ,eur_g23
11:20:34  30  ,eur_g24
11:20:34  31  ,eur_g25
11:20:34  32  ,eur_g26
11:20:34  33  ,eur_g27
11:20:34  34  ,eur_g28
11:20:34  35  ,eur_g29
11:20:34  36  ,eur_g30
11:20:34  37  ,eur_g31
11:20:34  38  ,eur_g32
11:20:34  39  ,eur_g33
11:20:34  40  ,eur_g34
11:20:34  41  ,eur_g35
11:20:34  42  ,eur_g36
11:20:34  43  ,eur_g37
11:20:34  44  ,eur_g38
11:20:34  45  ,eur_g39
11:20:34  46  ,eur_g40
11:20:34  47  ,eur_g41
11:20:34  48  ,aud_g00
11:20:34  49  ,aud_g01
11:20:34  50  ,aud_g02
11:20:34  51  ,aud_g03
11:20:34  52  ,aud_g04
11:20:34  53  ,aud_g05
11:20:34  54  ,aud_g06
11:20:34  55  ,aud_g07
11:20:34  56  ,aud_g08
11:20:34  57  ,aud_g09
11:20:34  58  ,aud_g10
11:20:34  59  ,aud_g11
11:20:34  60  ,aud_g12
11:20:34  61  ,aud_g13
11:20:34  62  ,aud_g14
11:20:34  63  ,aud_g15
11:20:34  64  ,aud_g16
11:20:34  65  ,aud_g17
11:20:34  66  ,aud_g18
11:20:34  67  ,aud_g19
11:20:34  68  ,aud_g20
11:20:34  69  ,aud_g21
11:20:34  70  ,aud_g22
11:20:34  71  ,aud_g23
11:20:34  72  ,aud_g24
11:20:34  73  ,aud_g25
11:20:34  74  ,aud_g26
11:20:34  75  ,aud_g27
11:20:34  76  ,aud_g28
11:20:34  77  ,aud_g29
11:20:34  78  ,aud_g30
11:20:34  79  ,aud_g31
11:20:34  80  ,aud_g32
11:20:34  81  ,aud_g33
11:20:34  82  ,aud_g34
11:20:34  83  ,aud_g35
11:20:34  84  ,aud_g36
11:20:34  85  ,aud_g37
11:20:34  86  ,aud_g38
11:20:34  87  ,aud_g39
11:20:34  88  ,aud_g40
11:20:34  89  ,aud_g41
11:20:34  90  ,gbp_g00
11:20:34  91  ,gbp_g01
11:20:34  92  ,gbp_g02
11:20:34  93  ,gbp_g03
11:20:34  94  ,gbp_g04
11:20:34  95  ,gbp_g05
11:20:34  96  ,gbp_g06
11:20:34  97  ,gbp_g07
11:20:34  98  ,gbp_g08
11:20:34  99  ,gbp_g09
11:20:34 100  ,gbp_g10
11:20:34 101  ,gbp_g11
11:20:34 102  ,gbp_g12
11:20:34 103  ,gbp_g13
11:20:34 104  ,gbp_g14
11:20:34 105  ,gbp_g15
11:20:34 106  ,gbp_g16
11:20:34 107  ,gbp_g17
11:20:34 108  ,gbp_g18
11:20:34 109  ,gbp_g19
11:20:34 110  ,gbp_g20
11:20:34 111  ,gbp_g21
11:20:34 112  ,gbp_g22
11:20:34 113  ,gbp_g23
11:20:34 114  ,gbp_g24
11:20:34 115  ,gbp_g25
11:20:34 116  ,gbp_g26
11:20:34 117  ,gbp_g27
11:20:34 118  ,gbp_g28
11:20:34 119  ,gbp_g29
11:20:34 120  ,gbp_g30
11:20:34 121  ,gbp_g31
11:20:34 122  ,gbp_g32
11:20:34 123  ,gbp_g33
11:20:34 124  ,gbp_g34
11:20:34 125  ,gbp_g35
11:20:34 126  ,gbp_g36
11:20:34 127  ,gbp_g37
11:20:34 128  ,gbp_g38
11:20:34 129  ,gbp_g39
11:20:34 130  ,gbp_g40
11:20:34 131  ,gbp_g41
11:20:34 132  ,jpy_g00
11:20:34 133  ,jpy_g01
11:20:34 134  ,jpy_g02
11:20:34 135  ,jpy_g03
11:20:34 136  ,jpy_g04
11:20:34 137  ,jpy_g05
11:20:34 138  ,jpy_g06
11:20:34 139  ,jpy_g07
11:20:34 140  ,jpy_g08
11:20:34 141  ,jpy_g09
11:20:34 142  ,jpy_g10
11:20:34 143  ,jpy_g11
11:20:34 144  ,jpy_g12
11:20:34 145  ,jpy_g13
11:20:34 146  ,jpy_g14
11:20:34 147  ,jpy_g15
11:20:34 148  ,jpy_g16
11:20:34 149  ,jpy_g17
11:20:34 150  ,jpy_g18
11:20:34 151  ,jpy_g19
11:20:34 152  ,jpy_g20
11:20:34 153  ,jpy_g21
11:20:34 154  ,jpy_g22
11:20:34 155  ,jpy_g23
11:20:34 156  ,jpy_g24
11:20:34 157  ,jpy_g25
11:20:34 158  ,jpy_g26
11:20:34 159  ,jpy_g27
11:20:34 160  ,jpy_g28
11:20:34 161  ,jpy_g29
11:20:34 162  ,jpy_g30
11:20:34 163  ,jpy_g31
11:20:34 164  ,jpy_g32
11:20:34 165  ,jpy_g33
11:20:34 166  ,jpy_g34
11:20:34 167  ,jpy_g35
11:20:34 168  ,jpy_g36
11:20:34 169  ,jpy_g37
11:20:34 170  ,jpy_g38
11:20:34 171  ,jpy_g39
11:20:34 172  ,jpy_g40
11:20:34 173  ,jpy_g41
11:20:34 174  ,cad_g00
11:20:34 175  ,cad_g01
11:20:34 176  ,cad_g02
11:20:34 177  ,cad_g03
11:20:34 178  ,cad_g04
11:20:34 179  ,cad_g05
11:20:34 180  ,cad_g06
11:20:34 181  ,cad_g07
11:20:34 182  ,cad_g08
11:20:34 183  ,cad_g09
11:20:34 184  ,cad_g10
11:20:34 185  ,cad_g11
11:20:34 186  ,cad_g12
11:20:34 187  ,cad_g13
11:20:34 188  ,cad_g14
11:20:34 189  ,cad_g15
11:20:34 190  ,cad_g16
11:20:34 191  ,cad_g17
11:20:34 192  ,cad_g18
11:20:34 193  ,cad_g19
11:20:34 194  ,cad_g20
11:20:34 195  ,cad_g21
11:20:34 196  ,cad_g22
11:20:34 197  ,cad_g23
11:20:34 198  ,cad_g24
11:20:34 199  ,cad_g25
11:20:34 200  ,cad_g26
11:20:34 201  ,cad_g27
11:20:34 202  ,cad_g28
11:20:34 203  ,cad_g29
11:20:34 204  ,cad_g30
11:20:34 205  ,cad_g31
11:20:34 206  ,cad_g32
11:20:34 207  ,cad_g33
11:20:34 208  ,cad_g34
11:20:34 209  ,cad_g35
11:20:34 210  ,cad_g36
11:20:34 211  ,cad_g37
11:20:34 212  ,cad_g38
11:20:34 213  ,cad_g39
11:20:34 214  ,cad_g40
11:20:34 215  ,cad_g41
11:20:34 216  ,chf_g00
11:20:34 217  ,chf_g01
11:20:34 218  ,chf_g02
11:20:34 219  ,chf_g03
11:20:34 220  ,chf_g04
11:20:34 221  ,chf_g05
11:20:34 222  ,chf_g06
11:20:34 223  ,chf_g07
11:20:34 224  ,chf_g08
11:20:34 225  ,chf_g09
11:20:34 226  ,chf_g10
11:20:34 227  ,chf_g11
11:20:34 228  ,chf_g12
11:20:34 229  ,chf_g13
11:20:34 230  ,chf_g14
11:20:34 231  ,chf_g15
11:20:34 232  ,chf_g16
11:20:34 233  ,chf_g17
11:20:34 234  ,chf_g18
11:20:34 235  ,chf_g19
11:20:34 236  ,chf_g20
11:20:34 237  ,chf_g21
11:20:34 238  ,chf_g22
11:20:34 239  ,chf_g23
11:20:34 240  ,chf_g24
11:20:34 241  ,chf_g25
11:20:34 242  ,chf_g26
11:20:34 243  ,chf_g27
11:20:34 244  ,chf_g28
11:20:34 245  ,chf_g29
11:20:34 246  ,chf_g30
11:20:34 247  ,chf_g31
11:20:34 248  ,chf_g32
11:20:34 249  ,chf_g33
11:20:34 250  ,chf_g34
11:20:34 251  ,chf_g35
11:20:34 252  ,chf_g36
11:20:34 253  ,chf_g37
11:20:34 254  ,chf_g38
11:20:34 255  ,chf_g39
11:20:34 256  ,chf_g40
11:20:34 257  ,chf_g41
11:20:34 258  FROM aud_ms6 m
11:20:34 259  WHERE m.ydate = '&1'||' '||'&2'
11:20:34 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-04'||' '||'11:10:00'

View created.

Elapsed: 00:00:00.12
11:20:34 SQL> 
11:20:34 SQL> -- rpt
11:20:34 SQL> -- We should see just 1 row:
11:20:34 SQL> 
11:20:34 SQL> SELECT COUNT(prdate) FROM sme
11:20:34   2  
11:20:34 SQL> -- Build the model:
11:20:34 SQL> CREATE OR REPLACE VIEW bme AS
11:20:34   2  SELECT
11:20:34   3  'aud'||m.ydate prdate
11:20:34   4  ,gatt
11:20:34   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:20:34   6  ,eur_g00
11:20:34   7  ,eur_g01
11:20:34   8  ,eur_g02
11:20:34   9  ,eur_g03
11:20:34  10  ,eur_g04
11:20:34  11  ,eur_g05
11:20:34  12  ,eur_g06
11:20:34  13  ,eur_g07
11:20:34  14  ,eur_g08
11:20:34  15  ,eur_g09
11:20:34  16  ,eur_g10
11:20:34  17  ,eur_g11
11:20:34  18  ,eur_g12
11:20:34  19  ,eur_g13
11:20:34  20  ,eur_g14
11:20:34  21  ,eur_g15
11:20:34  22  ,eur_g16
11:20:34  23  ,eur_g17
11:20:34  24  ,eur_g18
11:20:34  25  ,eur_g19
11:20:34  26  ,eur_g20
11:20:34  27  ,eur_g21
11:20:34  28  ,eur_g22
11:20:34  29  ,eur_g23
11:20:34  30  ,eur_g24
11:20:34  31  ,eur_g25
11:20:34  32  ,eur_g26
11:20:34  33  ,eur_g27
11:20:34  34  ,eur_g28
11:20:34  35  ,eur_g29
11:20:34  36  ,eur_g30
11:20:34  37  ,eur_g31
11:20:34  38  ,eur_g32
11:20:34  39  ,eur_g33
11:20:34  40  ,eur_g34
11:20:34  41  ,eur_g35
11:20:34  42  ,eur_g36
11:20:34  43  ,eur_g37
11:20:34  44  ,eur_g38
11:20:34  45  ,eur_g39
11:20:34  46  ,eur_g40
11:20:34  47  ,eur_g41
11:20:34  48  ,aud_g00
11:20:34  49  ,aud_g01
11:20:34  50  ,aud_g02
11:20:34  51  ,aud_g03
11:20:34  52  ,aud_g04
11:20:34  53  ,aud_g05
11:20:34  54  ,aud_g06
11:20:34  55  ,aud_g07
11:20:34  56  ,aud_g08
11:20:34  57  ,aud_g09
11:20:34  58  ,aud_g10
11:20:34  59  ,aud_g11
11:20:34  60  ,aud_g12
11:20:34  61  ,aud_g13
11:20:34  62  ,aud_g14
11:20:34  63  ,aud_g15
11:20:34  64  ,aud_g16
11:20:34  65  ,aud_g17
11:20:34  66  ,aud_g18
11:20:34  67  ,aud_g19
11:20:34  68  ,aud_g20
11:20:34  69  ,aud_g21
11:20:34  70  ,aud_g22
11:20:34  71  ,aud_g23
11:20:34  72  ,aud_g24
11:20:34  73  ,aud_g25
11:20:34  74  ,aud_g26
11:20:34  75  ,aud_g27
11:20:34  76  ,aud_g28
11:20:34  77  ,aud_g29
11:20:34  78  ,aud_g30
11:20:34  79  ,aud_g31
11:20:34  80  ,aud_g32
11:20:34  81  ,aud_g33
11:20:34  82  ,aud_g34
11:20:34  83  ,aud_g35
11:20:34  84  ,aud_g36
11:20:34  85  ,aud_g37
11:20:34  86  ,aud_g38
11:20:34  87  ,aud_g39
11:20:34  88  ,aud_g40
11:20:34  89  ,aud_g41
11:20:34  90  ,gbp_g00
11:20:34  91  ,gbp_g01
11:20:34  92  ,gbp_g02
11:20:34  93  ,gbp_g03
11:20:34  94  ,gbp_g04
11:20:34  95  ,gbp_g05
11:20:34  96  ,gbp_g06
11:20:34  97  ,gbp_g07
11:20:34  98  ,gbp_g08
11:20:34  99  ,gbp_g09
11:20:34 100  ,gbp_g10
11:20:34 101  ,gbp_g11
11:20:34 102  ,gbp_g12
11:20:34 103  ,gbp_g13
11:20:34 104  ,gbp_g14
11:20:34 105  ,gbp_g15
11:20:34 106  ,gbp_g16
11:20:34 107  ,gbp_g17
11:20:34 108  ,gbp_g18
11:20:34 109  ,gbp_g19
11:20:34 110  ,gbp_g20
11:20:34 111  ,gbp_g21
11:20:34 112  ,gbp_g22
11:20:34 113  ,gbp_g23
11:20:34 114  ,gbp_g24
11:20:34 115  ,gbp_g25
11:20:34 116  ,gbp_g26
11:20:34 117  ,gbp_g27
11:20:34 118  ,gbp_g28
11:20:34 119  ,gbp_g29
11:20:34 120  ,gbp_g30
11:20:34 121  ,gbp_g31
11:20:34 122  ,gbp_g32
11:20:34 123  ,gbp_g33
11:20:34 124  ,gbp_g34
11:20:34 125  ,gbp_g35
11:20:34 126  ,gbp_g36
11:20:34 127  ,gbp_g37
11:20:34 128  ,gbp_g38
11:20:34 129  ,gbp_g39
11:20:34 130  ,gbp_g40
11:20:34 131  ,gbp_g41
11:20:34 132  ,jpy_g00
11:20:34 133  ,jpy_g01
11:20:34 134  ,jpy_g02
11:20:34 135  ,jpy_g03
11:20:34 136  ,jpy_g04
11:20:34 137  ,jpy_g05
11:20:34 138  ,jpy_g06
11:20:34 139  ,jpy_g07
11:20:34 140  ,jpy_g08
11:20:34 141  ,jpy_g09
11:20:34 142  ,jpy_g10
11:20:34 143  ,jpy_g11
11:20:34 144  ,jpy_g12
11:20:34 145  ,jpy_g13
11:20:34 146  ,jpy_g14
11:20:34 147  ,jpy_g15
11:20:34 148  ,jpy_g16
11:20:34 149  ,jpy_g17
11:20:34 150  ,jpy_g18
11:20:34 151  ,jpy_g19
11:20:34 152  ,jpy_g20
11:20:34 153  ,jpy_g21
11:20:34 154  ,jpy_g22
11:20:34 155  ,jpy_g23
11:20:34 156  ,jpy_g24
11:20:34 157  ,jpy_g25
11:20:34 158  ,jpy_g26
11:20:34 159  ,jpy_g27
11:20:34 160  ,jpy_g28
11:20:34 161  ,jpy_g29
11:20:34 162  ,jpy_g30
11:20:34 163  ,jpy_g31
11:20:34 164  ,jpy_g32
11:20:34 165  ,jpy_g33
11:20:34 166  ,jpy_g34
11:20:34 167  ,jpy_g35
11:20:34 168  ,jpy_g36
11:20:34 169  ,jpy_g37
11:20:34 170  ,jpy_g38
11:20:34 171  ,jpy_g39
11:20:34 172  ,jpy_g40
11:20:34 173  ,jpy_g41
11:20:34 174  ,cad_g00
11:20:34 175  ,cad_g01
11:20:34 176  ,cad_g02
11:20:34 177  ,cad_g03
11:20:34 178  ,cad_g04
11:20:34 179  ,cad_g05
11:20:34 180  ,cad_g06
11:20:34 181  ,cad_g07
11:20:34 182  ,cad_g08
11:20:34 183  ,cad_g09
11:20:34 184  ,cad_g10
11:20:34 185  ,cad_g11
11:20:34 186  ,cad_g12
11:20:34 187  ,cad_g13
11:20:34 188  ,cad_g14
11:20:34 189  ,cad_g15
11:20:34 190  ,cad_g16
11:20:34 191  ,cad_g17
11:20:34 192  ,cad_g18
11:20:34 193  ,cad_g19
11:20:34 194  ,cad_g20
11:20:34 195  ,cad_g21
11:20:34 196  ,cad_g22
11:20:34 197  ,cad_g23
11:20:34 198  ,cad_g24
11:20:34 199  ,cad_g25
11:20:34 200  ,cad_g26
11:20:34 201  ,cad_g27
11:20:34 202  ,cad_g28
11:20:34 203  ,cad_g29
11:20:34 204  ,cad_g30
11:20:34 205  ,cad_g31
11:20:34 206  ,cad_g32
11:20:34 207  ,cad_g33
11:20:34 208  ,cad_g34
11:20:34 209  ,cad_g35
11:20:34 210  ,cad_g36
11:20:34 211  ,cad_g37
11:20:34 212  ,cad_g38
11:20:34 213  ,cad_g39
11:20:34 214  ,cad_g40
11:20:34 215  ,cad_g41
11:20:34 216  ,chf_g00
11:20:34 217  ,chf_g01
11:20:34 218  ,chf_g02
11:20:34 219  ,chf_g03
11:20:34 220  ,chf_g04
11:20:34 221  ,chf_g05
11:20:34 222  ,chf_g06
11:20:34 223  ,chf_g07
11:20:34 224  ,chf_g08
11:20:34 225  ,chf_g09
11:20:34 226  ,chf_g10
11:20:34 227  ,chf_g11
11:20:34 228  ,chf_g12
11:20:34 229  ,chf_g13
11:20:34 230  ,chf_g14
11:20:34 231  ,chf_g15
11:20:34 232  ,chf_g16
11:20:34 233  ,chf_g17
11:20:34 234  ,chf_g18
11:20:34 235  ,chf_g19
11:20:34 236  ,chf_g20
11:20:34 237  ,chf_g21
11:20:34 238  ,chf_g22
11:20:34 239  ,chf_g23
11:20:34 240  ,chf_g24
11:20:34 241  ,chf_g25
11:20:34 242  ,chf_g26
11:20:34 243  ,chf_g27
11:20:34 244  ,chf_g28
11:20:34 245  ,chf_g29
11:20:34 246  ,chf_g30
11:20:34 247  ,chf_g31
11:20:34 248  ,chf_g32
11:20:34 249  ,chf_g33
11:20:34 250  ,chf_g34
11:20:34 251  ,chf_g35
11:20:34 252  ,chf_g36
11:20:34 253  ,chf_g37
11:20:34 254  ,chf_g38
11:20:34 255  ,chf_g39
11:20:34 256  ,chf_g40
11:20:34 257  ,chf_g41
11:20:34 258  FROM aud_ms6 m
11:20:34 259  WHERE gatt IN('nup','up')
11:20:34 260  AND 1+m.ydate < '&1'||' '||'&2'
11:20:34 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-04'||' '||'11:10:00'

View created.

Elapsed: 00:00:00.13
11:20:34 SQL> 
11:20:34 SQL> -- rpt
11:20:34 SQL> 
11:20:34 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
11:20:34   2  
11:20:34 SQL> SELECT MAX(prdate) FROM bme
11:20:34   2  
11:20:34 SQL> -- Now build model from bme and score sme
11:20:34 SQL> @score1.sql
11:20:34 SQL> -- score1.sql
11:20:34 SQL> 
11:20:34 SQL> -- Does the 1st SVM score
11:20:34 SQL> 
11:20:34 SQL> -- Fill up svmc_apply_prep
11:20:34 SQL> @score.sql
11:20:34 SQL> --
11:20:34 SQL> -- score.sql
11:20:34 SQL> --
11:20:34 SQL> 
11:20:34 SQL> -- usage: score.sql
11:20:34 SQL> 
11:20:34 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
11:20:34 SQL> 
11:20:34 SQL> DEFINE target	= 'gatt'
11:20:34 SQL> DEFINE model_name = 'forex15'
11:20:34 SQL> DEFINE bldtable	= 'bme'
11:20:34 SQL> DEFINE scoretable = 'sme'
11:20:34 SQL> DEFINE case_id	= 'prdate'
11:20:34 SQL> 
11:20:34 SQL> -- Define a variable to help me exclude some columns from some data mining calls
11:20:34 SQL> DEFINE exclude1 = "'&target','&case_id'"
11:20:34 SQL> 
11:20:34 SQL> -- Builds an SVM model using pl/sql.
11:20:34 SQL> 
11:20:34 SQL> -----------------------------------------------------------------------
11:20:34 SQL> --			    BUILD THE MODEL
11:20:34 SQL> -----------------------------------------------------------------------
11:20:34 SQL> 
11:20:34 SQL> -- Cleanup old build data preparation objects for repeat runs
11:20:34 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
11:20:34 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
11:20:34 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
11:20:34 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
11:20:34 SQL> 
11:20:34 SQL> 
11:20:34 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
11:20:34 SQL> --
11:20:34 SQL> -- DROP	TABLE svmc_settings ;
11:20:34 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
11:20:34 SQL> -- DELETE svmc_settings;
11:20:34 SQL> 
11:20:34 SQL> -- The default classification algorithm is Naive Bayes. So override
11:20:34 SQL> -- this choice to SVM using a settings table.
11:20:34 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
11:20:34 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
11:20:34 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
11:20:34 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
11:20:34 SQL> -- models.
11:20:34 SQL> --
11:20:34 SQL> 
11:20:34 SQL> -- Do this once and then comment it out.
11:20:34 SQL> -- That makes script go faster.
11:20:34 SQL> -- BEGIN
11:20:34 SQL> -- -- Populate settings table
11:20:34 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:20:34 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
11:20:34 SQL> --
11:20:34 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:20:34 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
11:20:34 SQL> --
11:20:34 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:20:34 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
11:20:34 SQL> --   COMMIT;
11:20:34 SQL> -- END;
11:20:34 SQL> -- /
11:20:34 SQL> 
11:20:34 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
11:20:34 SQL> 
11:20:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
11:20:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:20:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:20:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
11:20:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:20:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
11:20:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
11:20:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:20:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:20:34 SQL> 
11:20:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
11:20:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:20:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:20:34 SQL> 
11:20:34 SQL> --------------------------------
11:20:34 SQL> -- PREPARE BUILD (TRAINING) DATA
11:20:34 SQL> --
11:20:34 SQL> 
11:20:34 SQL> -- 1. Missing Value treatment for all Predictors and
11:20:34 SQL> -- 2. Outlier Treatment and
11:20:34 SQL> -- 3. Normalization are performed below.
11:20:34 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
11:20:34 SQL> --    normalized here.
11:20:34 SQL> 
11:20:34 SQL> BEGIN
11:20:34   2  	-- Perform missing value treatment for all predictors
11:20:34   3  	-- create miss tables
11:20:34   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
11:20:34   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
11:20:34   6  
11:20:34   7  	-- populate miss tables
11:20:34   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
11:20:34   9  	  miss_table_name => 'svmc_miss_num',
11:20:34  10  	  data_table_name => '&bldtable',
11:20:34  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:20:34  12  
11:20:34  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
11:20:34  14  	  miss_table_name => 'svmc_miss_cat',
11:20:34  15  	  data_table_name => '&bldtable',
11:20:34  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:20:34  17  
11:20:34  18  	-- xform input data to replace missing values
11:20:34  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:20:34  20  	  miss_table_name => 'svmc_miss_num',
11:20:34  21  	  data_table_name => '&bldtable',
11:20:34  22  	  xform_view_name => 'xformed_build_miss_num');
11:20:34  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:20:34  24  	  miss_table_name => 'svmc_miss_cat',
11:20:34  25  	  data_table_name => '&bldtable',
11:20:34  26  	  xform_view_name => 'xformed_build_miss_cat');
11:20:34  27  
11:20:34  28  	-- Perform outlier treatment.
11:20:34  29  	-- create clip table
11:20:34  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
11:20:34  31  
11:20:34  32  	-- populate clip table
11:20:34  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
11:20:34  34  	  clip_table_name => 'svmc_clip',
11:20:34  35  	  data_table_name => '&bldtable',
11:20:34  36  	  tail_frac	  => 0.025,
11:20:34  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:20:34  38  
11:20:34  39  	-- xform input data to winsorized data
11:20:34  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
11:20:34  41  	  clip_table_name => 'svmc_clip',
11:20:34  42  	  data_table_name => '&bldtable',
11:20:34  43  	  xform_view_name => 'svmc_winsor');
11:20:34  44  
11:20:34  45  	-- create normalization table
11:20:34  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
11:20:34  47  
11:20:34  48  	-- populate normalization table based on winsorized data
11:20:34  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
11:20:34  50  	  norm_table_name => 'svmc_norm',
11:20:34  51  	  data_table_name => 'svmc_winsor',
11:20:34  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:20:34  53  
11:20:34  54  	-- normalize the original data
11:20:34  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:20:34  56  	  norm_table_name => 'svmc_norm',
11:20:34  57  	  data_table_name => '&bldtable',
11:20:34  58  	  xform_view_name => 'svmc_build_prep');
11:20:34  59  END;
11:20:34  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.61
11:20:52 SQL> 
11:20:52 SQL> ---------------------
11:20:52 SQL> -- CREATE A NEW MODEL
11:20:52 SQL> --
11:20:52 SQL> -- Cleanup old model with the same name for repeat runs
11:20:52 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
11:20:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:20:52   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.89
11:20:53 SQL> 
11:20:53 SQL> -- Build a new SVM Model
11:20:53 SQL> BEGIN
11:20:53   2  	DBMS_DATA_MINING.CREATE_MODEL(
11:20:53   3  	  model_name	      => '&model_name',
11:20:53   4  	  mining_function     => dbms_data_mining.classification,
11:20:53   5  	  data_table_name     => 'svmc_build_prep',
11:20:53   6  	  case_id_column_name => '&case_id',
11:20:53   7  	  target_column_name  => '&target',
11:20:53   8  	  settings_table_name => 'svmc_settings');
11:20:53   9  END;
11:20:53  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.29
11:21:19 SQL> 
11:21:19 SQL> -----------------------------------------------------------------------
11:21:19 SQL> --			       APPLY/score THE MODEL
11:21:19 SQL> -----------------------------------------------------------------------
11:21:19 SQL> 
11:21:19 SQL> -- Cleanup old scoring data preparation objects for repeat runs
11:21:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
11:21:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:21:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
11:21:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
11:21:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:21:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:21:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
11:21:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:21:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:21:19 SQL> -----------------------
11:21:19 SQL> -- PREPARE SCORING DATA
11:21:19 SQL> --
11:21:19 SQL> -- If the data for model creation has been prepared, then the data
11:21:19 SQL> -- to be scored using the model must be prepared in the same manner
11:21:19 SQL> -- in order to obtain meaningful results.
11:21:19 SQL> --
11:21:19 SQL> -- 1. Missing Value treatment for all Predictors and
11:21:19 SQL> -- 2. Normalization
11:21:19 SQL> -- No outlier treatment will be performed during test and apply. The
11:21:19 SQL> -- normalization step is sufficient, since the normalization parameters
11:21:19 SQL> -- already capture the effects of outlier treatment done with build data.
11:21:19 SQL> --
11:21:19 SQL> BEGIN
11:21:19   2  	-- Xform Test data to replace missing values
11:21:19   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:21:19   4  	  miss_table_name => 'svmc_miss_num',
11:21:19   5  	  data_table_name => '&scoretable',
11:21:19   6  	  xform_view_name => 'xformed_apply_miss_num');
11:21:19   7  
11:21:19   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:21:19   9  	  miss_table_name => 'svmc_miss_cat',
11:21:19  10  	  data_table_name => '&scoretable',
11:21:19  11  	  xform_view_name => 'xformed_apply_miss_cat');
11:21:19  12  
11:21:19  13  	-- Normalize the data to be scored
11:21:19  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:21:19  15  	  norm_table_name => 'svmc_norm',
11:21:19  16  	  data_table_name => '&scoretable',
11:21:19  17  	  xform_view_name => 'svmc_apply_prep');
11:21:19  18  END;
11:21:19  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
11:21:21 SQL> 
11:21:21 SQL> -- Use same model_name used in score.sql
11:21:21 SQL> DEFINE model_name = 'forex15'
11:21:21 SQL> 
11:21:21 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
11:21:21 SQL> 
11:21:21 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
11:21:21 SQL> 
11:21:21 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
11:21:21   2  SELECT
11:21:21   3  prdate
11:21:21   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
11:21:21   5  ,sysdate
11:21:21   6  ,SUBSTR(prdate,1,3)pair
11:21:21   7  ,SUBSTR(prdate,4,19)ydate
11:21:21   8  FROM svmc_apply_prep
11:21:21   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
11:21:21 SQL> @aud_score1day_gattn.sql	2011-01-04 10:55:00
11:21:21 SQL> --
11:21:21 SQL> -- aud_score1day_gattn.sql
11:21:21 SQL> --
11:21:21 SQL> 
11:21:21 SQL> CREATE OR REPLACE VIEW sme AS
11:21:21   2  SELECT
11:21:21   3  'aud'||m.ydate prdate
11:21:21   4  ,NULL gattn
11:21:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:21:21   6  ,eur_g00
11:21:21   7  ,eur_g01
11:21:21   8  ,eur_g02
11:21:21   9  ,eur_g03
11:21:21  10  ,eur_g04
11:21:21  11  ,eur_g05
11:21:21  12  ,eur_g06
11:21:21  13  ,eur_g07
11:21:21  14  ,eur_g08
11:21:21  15  ,eur_g09
11:21:21  16  ,eur_g10
11:21:21  17  ,eur_g11
11:21:21  18  ,eur_g12
11:21:21  19  ,eur_g13
11:21:21  20  ,eur_g14
11:21:21  21  ,eur_g15
11:21:21  22  ,eur_g16
11:21:21  23  ,eur_g17
11:21:21  24  ,eur_g18
11:21:21  25  ,eur_g19
11:21:21  26  ,eur_g20
11:21:21  27  ,eur_g21
11:21:21  28  ,eur_g22
11:21:21  29  ,eur_g23
11:21:21  30  ,eur_g24
11:21:21  31  ,eur_g25
11:21:21  32  ,eur_g26
11:21:21  33  ,eur_g27
11:21:21  34  ,eur_g28
11:21:21  35  ,eur_g29
11:21:21  36  ,eur_g30
11:21:21  37  ,eur_g31
11:21:21  38  ,eur_g32
11:21:21  39  ,eur_g33
11:21:21  40  ,eur_g34
11:21:21  41  ,eur_g35
11:21:21  42  ,eur_g36
11:21:21  43  ,eur_g37
11:21:21  44  ,eur_g38
11:21:21  45  ,eur_g39
11:21:21  46  ,eur_g40
11:21:21  47  ,eur_g41
11:21:21  48  ,aud_g00
11:21:21  49  ,aud_g01
11:21:21  50  ,aud_g02
11:21:21  51  ,aud_g03
11:21:21  52  ,aud_g04
11:21:21  53  ,aud_g05
11:21:21  54  ,aud_g06
11:21:21  55  ,aud_g07
11:21:21  56  ,aud_g08
11:21:21  57  ,aud_g09
11:21:21  58  ,aud_g10
11:21:21  59  ,aud_g11
11:21:21  60  ,aud_g12
11:21:21  61  ,aud_g13
11:21:21  62  ,aud_g14
11:21:21  63  ,aud_g15
11:21:21  64  ,aud_g16
11:21:21  65  ,aud_g17
11:21:21  66  ,aud_g18
11:21:21  67  ,aud_g19
11:21:21  68  ,aud_g20
11:21:21  69  ,aud_g21
11:21:21  70  ,aud_g22
11:21:21  71  ,aud_g23
11:21:21  72  ,aud_g24
11:21:21  73  ,aud_g25
11:21:21  74  ,aud_g26
11:21:21  75  ,aud_g27
11:21:21  76  ,aud_g28
11:21:21  77  ,aud_g29
11:21:21  78  ,aud_g30
11:21:21  79  ,aud_g31
11:21:21  80  ,aud_g32
11:21:21  81  ,aud_g33
11:21:21  82  ,aud_g34
11:21:21  83  ,aud_g35
11:21:21  84  ,aud_g36
11:21:21  85  ,aud_g37
11:21:21  86  ,aud_g38
11:21:21  87  ,aud_g39
11:21:21  88  ,aud_g40
11:21:21  89  ,aud_g41
11:21:21  90  ,gbp_g00
11:21:21  91  ,gbp_g01
11:21:21  92  ,gbp_g02
11:21:21  93  ,gbp_g03
11:21:21  94  ,gbp_g04
11:21:21  95  ,gbp_g05
11:21:21  96  ,gbp_g06
11:21:21  97  ,gbp_g07
11:21:21  98  ,gbp_g08
11:21:21  99  ,gbp_g09
11:21:21 100  ,gbp_g10
11:21:21 101  ,gbp_g11
11:21:21 102  ,gbp_g12
11:21:21 103  ,gbp_g13
11:21:21 104  ,gbp_g14
11:21:21 105  ,gbp_g15
11:21:21 106  ,gbp_g16
11:21:21 107  ,gbp_g17
11:21:21 108  ,gbp_g18
11:21:21 109  ,gbp_g19
11:21:21 110  ,gbp_g20
11:21:21 111  ,gbp_g21
11:21:21 112  ,gbp_g22
11:21:21 113  ,gbp_g23
11:21:21 114  ,gbp_g24
11:21:21 115  ,gbp_g25
11:21:21 116  ,gbp_g26
11:21:21 117  ,gbp_g27
11:21:21 118  ,gbp_g28
11:21:21 119  ,gbp_g29
11:21:21 120  ,gbp_g30
11:21:21 121  ,gbp_g31
11:21:21 122  ,gbp_g32
11:21:21 123  ,gbp_g33
11:21:21 124  ,gbp_g34
11:21:21 125  ,gbp_g35
11:21:21 126  ,gbp_g36
11:21:21 127  ,gbp_g37
11:21:21 128  ,gbp_g38
11:21:21 129  ,gbp_g39
11:21:21 130  ,gbp_g40
11:21:21 131  ,gbp_g41
11:21:21 132  ,jpy_g00
11:21:21 133  ,jpy_g01
11:21:21 134  ,jpy_g02
11:21:21 135  ,jpy_g03
11:21:21 136  ,jpy_g04
11:21:21 137  ,jpy_g05
11:21:21 138  ,jpy_g06
11:21:21 139  ,jpy_g07
11:21:21 140  ,jpy_g08
11:21:21 141  ,jpy_g09
11:21:21 142  ,jpy_g10
11:21:21 143  ,jpy_g11
11:21:21 144  ,jpy_g12
11:21:21 145  ,jpy_g13
11:21:21 146  ,jpy_g14
11:21:21 147  ,jpy_g15
11:21:21 148  ,jpy_g16
11:21:21 149  ,jpy_g17
11:21:21 150  ,jpy_g18
11:21:21 151  ,jpy_g19
11:21:21 152  ,jpy_g20
11:21:21 153  ,jpy_g21
11:21:21 154  ,jpy_g22
11:21:21 155  ,jpy_g23
11:21:21 156  ,jpy_g24
11:21:21 157  ,jpy_g25
11:21:21 158  ,jpy_g26
11:21:21 159  ,jpy_g27
11:21:21 160  ,jpy_g28
11:21:21 161  ,jpy_g29
11:21:21 162  ,jpy_g30
11:21:21 163  ,jpy_g31
11:21:21 164  ,jpy_g32
11:21:21 165  ,jpy_g33
11:21:21 166  ,jpy_g34
11:21:21 167  ,jpy_g35
11:21:21 168  ,jpy_g36
11:21:21 169  ,jpy_g37
11:21:21 170  ,jpy_g38
11:21:21 171  ,jpy_g39
11:21:21 172  ,jpy_g40
11:21:21 173  ,jpy_g41
11:21:21 174  ,cad_g00
11:21:21 175  ,cad_g01
11:21:21 176  ,cad_g02
11:21:21 177  ,cad_g03
11:21:21 178  ,cad_g04
11:21:21 179  ,cad_g05
11:21:21 180  ,cad_g06
11:21:21 181  ,cad_g07
11:21:21 182  ,cad_g08
11:21:21 183  ,cad_g09
11:21:21 184  ,cad_g10
11:21:21 185  ,cad_g11
11:21:21 186  ,cad_g12
11:21:21 187  ,cad_g13
11:21:21 188  ,cad_g14
11:21:21 189  ,cad_g15
11:21:21 190  ,cad_g16
11:21:21 191  ,cad_g17
11:21:21 192  ,cad_g18
11:21:21 193  ,cad_g19
11:21:21 194  ,cad_g20
11:21:21 195  ,cad_g21
11:21:21 196  ,cad_g22
11:21:21 197  ,cad_g23
11:21:21 198  ,cad_g24
11:21:21 199  ,cad_g25
11:21:21 200  ,cad_g26
11:21:21 201  ,cad_g27
11:21:21 202  ,cad_g28
11:21:21 203  ,cad_g29
11:21:21 204  ,cad_g30
11:21:21 205  ,cad_g31
11:21:21 206  ,cad_g32
11:21:21 207  ,cad_g33
11:21:21 208  ,cad_g34
11:21:21 209  ,cad_g35
11:21:21 210  ,cad_g36
11:21:21 211  ,cad_g37
11:21:21 212  ,cad_g38
11:21:21 213  ,cad_g39
11:21:21 214  ,cad_g40
11:21:21 215  ,cad_g41
11:21:21 216  ,chf_g00
11:21:21 217  ,chf_g01
11:21:21 218  ,chf_g02
11:21:21 219  ,chf_g03
11:21:21 220  ,chf_g04
11:21:21 221  ,chf_g05
11:21:21 222  ,chf_g06
11:21:21 223  ,chf_g07
11:21:21 224  ,chf_g08
11:21:21 225  ,chf_g09
11:21:21 226  ,chf_g10
11:21:21 227  ,chf_g11
11:21:21 228  ,chf_g12
11:21:21 229  ,chf_g13
11:21:21 230  ,chf_g14
11:21:21 231  ,chf_g15
11:21:21 232  ,chf_g16
11:21:21 233  ,chf_g17
11:21:21 234  ,chf_g18
11:21:21 235  ,chf_g19
11:21:21 236  ,chf_g20
11:21:21 237  ,chf_g21
11:21:21 238  ,chf_g22
11:21:21 239  ,chf_g23
11:21:21 240  ,chf_g24
11:21:21 241  ,chf_g25
11:21:21 242  ,chf_g26
11:21:21 243  ,chf_g27
11:21:21 244  ,chf_g28
11:21:21 245  ,chf_g29
11:21:21 246  ,chf_g30
11:21:21 247  ,chf_g31
11:21:21 248  ,chf_g32
11:21:21 249  ,chf_g33
11:21:21 250  ,chf_g34
11:21:21 251  ,chf_g35
11:21:21 252  ,chf_g36
11:21:21 253  ,chf_g37
11:21:21 254  ,chf_g38
11:21:21 255  ,chf_g39
11:21:21 256  ,chf_g40
11:21:21 257  ,chf_g41
11:21:21 258  FROM aud_ms6 m
11:21:21 259  WHERE m.ydate = '&1'||' '||'&2'
11:21:21 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-04'||' '||'10:55:00'

View created.

Elapsed: 00:00:00.13
11:21:21 SQL> 
11:21:21 SQL> -- rpt
11:21:21 SQL> -- We should see just 1 row:
11:21:21 SQL> 
11:21:21 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
11:21:21 SQL> 
11:21:21 SQL> -- Build the model:
11:21:21 SQL> CREATE OR REPLACE VIEW bme AS
11:21:21   2  SELECT
11:21:21   3  'aud'||m.ydate prdate
11:21:21   4  ,gattn
11:21:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:21:21   6  ,eur_g00
11:21:21   7  ,eur_g01
11:21:21   8  ,eur_g02
11:21:21   9  ,eur_g03
11:21:21  10  ,eur_g04
11:21:21  11  ,eur_g05
11:21:21  12  ,eur_g06
11:21:21  13  ,eur_g07
11:21:21  14  ,eur_g08
11:21:21  15  ,eur_g09
11:21:21  16  ,eur_g10
11:21:21  17  ,eur_g11
11:21:21  18  ,eur_g12
11:21:21  19  ,eur_g13
11:21:21  20  ,eur_g14
11:21:21  21  ,eur_g15
11:21:21  22  ,eur_g16
11:21:21  23  ,eur_g17
11:21:21  24  ,eur_g18
11:21:21  25  ,eur_g19
11:21:21  26  ,eur_g20
11:21:21  27  ,eur_g21
11:21:21  28  ,eur_g22
11:21:21  29  ,eur_g23
11:21:21  30  ,eur_g24
11:21:21  31  ,eur_g25
11:21:21  32  ,eur_g26
11:21:21  33  ,eur_g27
11:21:21  34  ,eur_g28
11:21:21  35  ,eur_g29
11:21:21  36  ,eur_g30
11:21:21  37  ,eur_g31
11:21:21  38  ,eur_g32
11:21:21  39  ,eur_g33
11:21:21  40  ,eur_g34
11:21:21  41  ,eur_g35
11:21:21  42  ,eur_g36
11:21:21  43  ,eur_g37
11:21:21  44  ,eur_g38
11:21:21  45  ,eur_g39
11:21:21  46  ,eur_g40
11:21:21  47  ,eur_g41
11:21:21  48  ,aud_g00
11:21:21  49  ,aud_g01
11:21:21  50  ,aud_g02
11:21:21  51  ,aud_g03
11:21:21  52  ,aud_g04
11:21:21  53  ,aud_g05
11:21:21  54  ,aud_g06
11:21:21  55  ,aud_g07
11:21:21  56  ,aud_g08
11:21:21  57  ,aud_g09
11:21:21  58  ,aud_g10
11:21:21  59  ,aud_g11
11:21:21  60  ,aud_g12
11:21:21  61  ,aud_g13
11:21:21  62  ,aud_g14
11:21:21  63  ,aud_g15
11:21:21  64  ,aud_g16
11:21:21  65  ,aud_g17
11:21:21  66  ,aud_g18
11:21:21  67  ,aud_g19
11:21:21  68  ,aud_g20
11:21:21  69  ,aud_g21
11:21:21  70  ,aud_g22
11:21:21  71  ,aud_g23
11:21:21  72  ,aud_g24
11:21:21  73  ,aud_g25
11:21:21  74  ,aud_g26
11:21:21  75  ,aud_g27
11:21:21  76  ,aud_g28
11:21:21  77  ,aud_g29
11:21:21  78  ,aud_g30
11:21:21  79  ,aud_g31
11:21:21  80  ,aud_g32
11:21:21  81  ,aud_g33
11:21:21  82  ,aud_g34
11:21:21  83  ,aud_g35
11:21:21  84  ,aud_g36
11:21:21  85  ,aud_g37
11:21:21  86  ,aud_g38
11:21:21  87  ,aud_g39
11:21:21  88  ,aud_g40
11:21:21  89  ,aud_g41
11:21:21  90  ,gbp_g00
11:21:21  91  ,gbp_g01
11:21:21  92  ,gbp_g02
11:21:21  93  ,gbp_g03
11:21:21  94  ,gbp_g04
11:21:21  95  ,gbp_g05
11:21:21  96  ,gbp_g06
11:21:21  97  ,gbp_g07
11:21:21  98  ,gbp_g08
11:21:21  99  ,gbp_g09
11:21:21 100  ,gbp_g10
11:21:21 101  ,gbp_g11
11:21:21 102  ,gbp_g12
11:21:21 103  ,gbp_g13
11:21:21 104  ,gbp_g14
11:21:21 105  ,gbp_g15
11:21:21 106  ,gbp_g16
11:21:21 107  ,gbp_g17
11:21:21 108  ,gbp_g18
11:21:21 109  ,gbp_g19
11:21:21 110  ,gbp_g20
11:21:21 111  ,gbp_g21
11:21:21 112  ,gbp_g22
11:21:21 113  ,gbp_g23
11:21:21 114  ,gbp_g24
11:21:21 115  ,gbp_g25
11:21:21 116  ,gbp_g26
11:21:21 117  ,gbp_g27
11:21:21 118  ,gbp_g28
11:21:21 119  ,gbp_g29
11:21:21 120  ,gbp_g30
11:21:21 121  ,gbp_g31
11:21:21 122  ,gbp_g32
11:21:21 123  ,gbp_g33
11:21:21 124  ,gbp_g34
11:21:21 125  ,gbp_g35
11:21:21 126  ,gbp_g36
11:21:21 127  ,gbp_g37
11:21:21 128  ,gbp_g38
11:21:21 129  ,gbp_g39
11:21:21 130  ,gbp_g40
11:21:21 131  ,gbp_g41
11:21:21 132  ,jpy_g00
11:21:21 133  ,jpy_g01
11:21:21 134  ,jpy_g02
11:21:21 135  ,jpy_g03
11:21:21 136  ,jpy_g04
11:21:21 137  ,jpy_g05
11:21:21 138  ,jpy_g06
11:21:21 139  ,jpy_g07
11:21:21 140  ,jpy_g08
11:21:21 141  ,jpy_g09
11:21:21 142  ,jpy_g10
11:21:21 143  ,jpy_g11
11:21:21 144  ,jpy_g12
11:21:21 145  ,jpy_g13
11:21:21 146  ,jpy_g14
11:21:21 147  ,jpy_g15
11:21:21 148  ,jpy_g16
11:21:21 149  ,jpy_g17
11:21:21 150  ,jpy_g18
11:21:21 151  ,jpy_g19
11:21:21 152  ,jpy_g20
11:21:21 153  ,jpy_g21
11:21:21 154  ,jpy_g22
11:21:21 155  ,jpy_g23
11:21:21 156  ,jpy_g24
11:21:21 157  ,jpy_g25
11:21:21 158  ,jpy_g26
11:21:21 159  ,jpy_g27
11:21:21 160  ,jpy_g28
11:21:21 161  ,jpy_g29
11:21:21 162  ,jpy_g30
11:21:21 163  ,jpy_g31
11:21:21 164  ,jpy_g32
11:21:21 165  ,jpy_g33
11:21:21 166  ,jpy_g34
11:21:21 167  ,jpy_g35
11:21:21 168  ,jpy_g36
11:21:21 169  ,jpy_g37
11:21:21 170  ,jpy_g38
11:21:21 171  ,jpy_g39
11:21:21 172  ,jpy_g40
11:21:21 173  ,jpy_g41
11:21:21 174  ,cad_g00
11:21:21 175  ,cad_g01
11:21:21 176  ,cad_g02
11:21:21 177  ,cad_g03
11:21:21 178  ,cad_g04
11:21:21 179  ,cad_g05
11:21:21 180  ,cad_g06
11:21:21 181  ,cad_g07
11:21:21 182  ,cad_g08
11:21:21 183  ,cad_g09
11:21:21 184  ,cad_g10
11:21:21 185  ,cad_g11
11:21:21 186  ,cad_g12
11:21:21 187  ,cad_g13
11:21:21 188  ,cad_g14
11:21:21 189  ,cad_g15
11:21:21 190  ,cad_g16
11:21:21 191  ,cad_g17
11:21:21 192  ,cad_g18
11:21:21 193  ,cad_g19
11:21:21 194  ,cad_g20
11:21:21 195  ,cad_g21
11:21:21 196  ,cad_g22
11:21:21 197  ,cad_g23
11:21:21 198  ,cad_g24
11:21:21 199  ,cad_g25
11:21:21 200  ,cad_g26
11:21:21 201  ,cad_g27
11:21:21 202  ,cad_g28
11:21:21 203  ,cad_g29
11:21:21 204  ,cad_g30
11:21:21 205  ,cad_g31
11:21:21 206  ,cad_g32
11:21:21 207  ,cad_g33
11:21:21 208  ,cad_g34
11:21:21 209  ,cad_g35
11:21:21 210  ,cad_g36
11:21:21 211  ,cad_g37
11:21:21 212  ,cad_g38
11:21:21 213  ,cad_g39
11:21:21 214  ,cad_g40
11:21:21 215  ,cad_g41
11:21:21 216  ,chf_g00
11:21:21 217  ,chf_g01
11:21:21 218  ,chf_g02
11:21:21 219  ,chf_g03
11:21:21 220  ,chf_g04
11:21:21 221  ,chf_g05
11:21:21 222  ,chf_g06
11:21:21 223  ,chf_g07
11:21:21 224  ,chf_g08
11:21:21 225  ,chf_g09
11:21:21 226  ,chf_g10
11:21:21 227  ,chf_g11
11:21:21 228  ,chf_g12
11:21:21 229  ,chf_g13
11:21:21 230  ,chf_g14
11:21:21 231  ,chf_g15
11:21:21 232  ,chf_g16
11:21:21 233  ,chf_g17
11:21:21 234  ,chf_g18
11:21:21 235  ,chf_g19
11:21:21 236  ,chf_g20
11:21:21 237  ,chf_g21
11:21:21 238  ,chf_g22
11:21:21 239  ,chf_g23
11:21:21 240  ,chf_g24
11:21:21 241  ,chf_g25
11:21:21 242  ,chf_g26
11:21:21 243  ,chf_g27
11:21:21 244  ,chf_g28
11:21:21 245  ,chf_g29
11:21:21 246  ,chf_g30
11:21:21 247  ,chf_g31
11:21:21 248  ,chf_g32
11:21:21 249  ,chf_g33
11:21:21 250  ,chf_g34
11:21:21 251  ,chf_g35
11:21:21 252  ,chf_g36
11:21:21 253  ,chf_g37
11:21:21 254  ,chf_g38
11:21:21 255  ,chf_g39
11:21:21 256  ,chf_g40
11:21:21 257  ,chf_g41
11:21:21 258  FROM aud_ms6 m
11:21:21 259  WHERE gattn IN('nup','up')
11:21:21 260  AND 1+m.ydate < '&1'||' '||'&2'
11:21:21 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-04'||' '||'10:55:00'

View created.

Elapsed: 00:00:00.14
11:21:21 SQL> 
11:21:21 SQL> -- rpt
11:21:21 SQL> 
11:21:21 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12695
up	     6259

Elapsed: 00:00:00.03
11:21:21 SQL> 
11:21:21 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-03 10:50:00

Elapsed: 00:00:00.04
11:21:21 SQL> 
11:21:21 SQL> -- Now build model from bme and score sme
11:21:21 SQL> @score1gattn.sql
11:21:21 SQL> -- score1gattn.sql
11:21:21 SQL> 
11:21:21 SQL> -- Does the 1st SVM score
11:21:21 SQL> 
11:21:21 SQL> -- Fill up svmc_apply_prep
11:21:21 SQL> @score_gattn.sql
11:21:21 SQL> --
11:21:21 SQL> -- score_gattn.sql
11:21:21 SQL> --
11:21:21 SQL> 
11:21:21 SQL> -- usage: score_gattn.sql
11:21:21 SQL> 
11:21:21 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
11:21:21 SQL> 
11:21:21 SQL> DEFINE target	= 'gattn'
11:21:21 SQL> DEFINE model_name = 'forex15'
11:21:21 SQL> DEFINE bldtable	= 'bme'
11:21:21 SQL> DEFINE scoretable = 'sme'
11:21:21 SQL> DEFINE case_id	= 'prdate'
11:21:21 SQL> 
11:21:21 SQL> -- Define a variable to help me exclude some columns from some data mining calls
11:21:21 SQL> DEFINE exclude1 = "'&target','&case_id'"
11:21:21 SQL> 
11:21:21 SQL> -- Builds an SVM model using pl/sql.
11:21:21 SQL> 
11:21:21 SQL> -----------------------------------------------------------------------
11:21:21 SQL> --			    BUILD THE MODEL
11:21:21 SQL> -----------------------------------------------------------------------
11:21:21 SQL> 
11:21:21 SQL> -- Cleanup old build data preparation objects for repeat runs
11:21:21 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
11:21:21 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
11:21:21 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
11:21:21 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
11:21:21 SQL> 
11:21:21 SQL> 
11:21:21 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
11:21:21 SQL> --
11:21:21 SQL> -- DROP	TABLE svmc_settings ;
11:21:21 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
11:21:21 SQL> -- DELETE svmc_settings;
11:21:21 SQL> 
11:21:21 SQL> -- The default classification algorithm is Naive Bayes. So override
11:21:21 SQL> -- this choice to SVM using a settings table.
11:21:21 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
11:21:21 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
11:21:21 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
11:21:21 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
11:21:21 SQL> -- models.
11:21:21 SQL> --
11:21:21 SQL> 
11:21:21 SQL> -- Do this once and then comment it out.
11:21:21 SQL> -- That makes script go faster.
11:21:21 SQL> -- BEGIN
11:21:21 SQL> -- -- Populate settings table
11:21:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:21:21 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
11:21:21 SQL> --
11:21:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:21:21 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
11:21:21 SQL> --
11:21:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:21:21 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
11:21:21 SQL> --   COMMIT;
11:21:21 SQL> -- END;
11:21:21 SQL> -- /
11:21:21 SQL> 
11:21:21 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
11:21:21 SQL> 
11:21:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
11:21:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:21:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:21:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
11:21:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:21:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:21:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
11:21:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:21:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:21:21 SQL> 
11:21:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
11:21:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:21:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:21:21 SQL> 
11:21:21 SQL> --------------------------------
11:21:21 SQL> -- PREPARE BUILD (TRAINING) DATA
11:21:21 SQL> --
11:21:21 SQL> 
11:21:21 SQL> -- 1. Missing Value treatment for all Predictors and
11:21:21 SQL> -- 2. Outlier Treatment and
11:21:21 SQL> -- 3. Normalization are performed below.
11:21:21 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
11:21:21 SQL> --    normalized here.
11:21:21 SQL> 
11:21:21 SQL> BEGIN
11:21:21   2  	-- Perform missing value treatment for all predictors
11:21:21   3  	-- create miss tables
11:21:21   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
11:21:21   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
11:21:21   6  
11:21:21   7  	-- populate miss tables
11:21:21   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
11:21:21   9  	  miss_table_name => 'svmc_miss_num',
11:21:21  10  	  data_table_name => '&bldtable',
11:21:21  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:21:21  12  
11:21:21  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
11:21:21  14  	  miss_table_name => 'svmc_miss_cat',
11:21:21  15  	  data_table_name => '&bldtable',
11:21:21  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:21:21  17  
11:21:21  18  	-- xform input data to replace missing values
11:21:21  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:21:21  20  	  miss_table_name => 'svmc_miss_num',
11:21:21  21  	  data_table_name => '&bldtable',
11:21:21  22  	  xform_view_name => 'xformed_build_miss_num');
11:21:21  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:21:21  24  	  miss_table_name => 'svmc_miss_cat',
11:21:21  25  	  data_table_name => '&bldtable',
11:21:21  26  	  xform_view_name => 'xformed_build_miss_cat');
11:21:21  27  
11:21:21  28  	-- Perform outlier treatment.
11:21:21  29  	-- create clip table
11:21:21  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
11:21:21  31  
11:21:21  32  	-- populate clip table
11:21:21  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
11:21:21  34  	  clip_table_name => 'svmc_clip',
11:21:21  35  	  data_table_name => '&bldtable',
11:21:21  36  	  tail_frac	  => 0.025,
11:21:21  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:21:21  38  
11:21:21  39  	-- xform input data to winsorized data
11:21:21  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
11:21:21  41  	  clip_table_name => 'svmc_clip',
11:21:21  42  	  data_table_name => '&bldtable',
11:21:21  43  	  xform_view_name => 'svmc_winsor');
11:21:21  44  
11:21:21  45  	-- create normalization table
11:21:21  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
11:21:21  47  
11:21:21  48  	-- populate normalization table based on winsorized data
11:21:21  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
11:21:21  50  	  norm_table_name => 'svmc_norm',
11:21:21  51  	  data_table_name => 'svmc_winsor',
11:21:21  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:21:21  53  
11:21:21  54  	-- normalize the original data
11:21:21  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:21:21  56  	  norm_table_name => 'svmc_norm',
11:21:21  57  	  data_table_name => '&bldtable',
11:21:21  58  	  xform_view_name => 'svmc_build_prep');
11:21:21  59  END;
11:21:21  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.19
11:21:40 SQL> 
11:21:40 SQL> ---------------------
11:21:40 SQL> -- CREATE A NEW MODEL
11:21:40 SQL> --
11:21:40 SQL> -- Cleanup old model with the same name for repeat runs
11:21:40 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
11:21:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:21:40   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.98
11:21:41 SQL> 
11:21:41 SQL> -- Build a new SVM Model
11:21:41 SQL> BEGIN
11:21:41   2  	DBMS_DATA_MINING.CREATE_MODEL(
11:21:41   3  	  model_name	      => '&model_name',
11:21:41   4  	  mining_function     => dbms_data_mining.classification,
11:21:41   5  	  data_table_name     => 'svmc_build_prep',
11:21:41   6  	  case_id_column_name => '&case_id',
11:21:41   7  	  target_column_name  => '&target',
11:21:41   8  	  settings_table_name => 'svmc_settings');
11:21:41   9  END;
11:21:41  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.11
11:22:07 SQL> 
11:22:07 SQL> -----------------------------------------------------------------------
11:22:07 SQL> --			       APPLY/score THE MODEL
11:22:07 SQL> -----------------------------------------------------------------------
11:22:07 SQL> 
11:22:07 SQL> -- Cleanup old scoring data preparation objects for repeat runs
11:22:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
11:22:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:22:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
11:22:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
11:22:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:22:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:22:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
11:22:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:22:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
11:22:07 SQL> -----------------------
11:22:07 SQL> -- PREPARE SCORING DATA
11:22:07 SQL> --
11:22:07 SQL> -- If the data for model creation has been prepared, then the data
11:22:07 SQL> -- to be scored using the model must be prepared in the same manner
11:22:07 SQL> -- in order to obtain meaningful results.
11:22:07 SQL> --
11:22:07 SQL> -- 1. Missing Value treatment for all Predictors and
11:22:07 SQL> -- 2. Normalization
11:22:07 SQL> -- No outlier treatment will be performed during test and apply. The
11:22:07 SQL> -- normalization step is sufficient, since the normalization parameters
11:22:07 SQL> -- already capture the effects of outlier treatment done with build data.
11:22:07 SQL> --
11:22:07 SQL> BEGIN
11:22:07   2  	-- Xform Test data to replace missing values
11:22:07   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:22:07   4  	  miss_table_name => 'svmc_miss_num',
11:22:07   5  	  data_table_name => '&scoretable',
11:22:07   6  	  xform_view_name => 'xformed_apply_miss_num');
11:22:07   7  
11:22:07   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:22:07   9  	  miss_table_name => 'svmc_miss_cat',
11:22:07  10  	  data_table_name => '&scoretable',
11:22:07  11  	  xform_view_name => 'xformed_apply_miss_cat');
11:22:07  12  
11:22:07  13  	-- Normalize the data to be scored
11:22:07  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:22:07  15  	  norm_table_name => 'svmc_norm',
11:22:07  16  	  data_table_name => '&scoretable',
11:22:07  17  	  xform_view_name => 'svmc_apply_prep');
11:22:07  18  END;
11:22:07  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
11:22:08 SQL> 
11:22:08 SQL> -- Use same model_name used in score_gattn.sql
11:22:08 SQL> DEFINE model_name = 'forex15'
11:22:08 SQL> 
11:22:08 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
11:22:08 SQL> 
11:22:08 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
11:22:08   2  SELECT
11:22:08   3  prdate
11:22:08   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
11:22:08   5  ,sysdate
11:22:08   6  ,SUBSTR(prdate,1,3)pair
11:22:08   7  ,SUBSTR(prdate,4,19)ydate
11:22:08   8  FROM svmc_apply_prep
11:22:08   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.20
11:22:08 SQL> @aud_score1day_gattn.sql	2011-01-04 11:00:00
11:22:08 SQL> --
11:22:08 SQL> -- aud_score1day_gattn.sql
11:22:08 SQL> --
11:22:08 SQL> 
11:22:08 SQL> CREATE OR REPLACE VIEW sme AS
11:22:08   2  SELECT
11:22:08   3  'aud'||m.ydate prdate
11:22:08   4  ,NULL gattn
11:22:08   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:22:08   6  ,eur_g00
11:22:08   7  ,eur_g01
11:22:08   8  ,eur_g02
11:22:08   9  ,eur_g03
11:22:08  10  ,eur_g04
11:22:08  11  ,eur_g05
11:22:08  12  ,eur_g06
11:22:08  13  ,eur_g07
11:22:08  14  ,eur_g08
11:22:08  15  ,eur_g09
11:22:08  16  ,eur_g10
11:22:08  17  ,eur_g11
11:22:08  18  ,eur_g12
11:22:08  19  ,eur_g13
11:22:08  20  ,eur_g14
11:22:08  21  ,eur_g15
11:22:08  22  ,eur_g16
11:22:08  23  ,eur_g17
11:22:08  24  ,eur_g18
11:22:08  25  ,eur_g19
11:22:08  26  ,eur_g20
11:22:08  27  ,eur_g21
11:22:08  28  ,eur_g22
11:22:08  29  ,eur_g23
11:22:08  30  ,eur_g24
11:22:08  31  ,eur_g25
11:22:08  32  ,eur_g26
11:22:08  33  ,eur_g27
11:22:08  34  ,eur_g28
11:22:08  35  ,eur_g29
11:22:08  36  ,eur_g30
11:22:08  37  ,eur_g31
11:22:08  38  ,eur_g32
11:22:08  39  ,eur_g33
11:22:08  40  ,eur_g34
11:22:08  41  ,eur_g35
11:22:08  42  ,eur_g36
11:22:08  43  ,eur_g37
11:22:08  44  ,eur_g38
11:22:08  45  ,eur_g39
11:22:08  46  ,eur_g40
11:22:08  47  ,eur_g41
11:22:08  48  ,aud_g00
11:22:08  49  ,aud_g01
11:22:08  50  ,aud_g02
11:22:08  51  ,aud_g03
11:22:08  52  ,aud_g04
11:22:08  53  ,aud_g05
11:22:08  54  ,aud_g06
11:22:08  55  ,aud_g07
11:22:08  56  ,aud_g08
11:22:08  57  ,aud_g09
11:22:08  58  ,aud_g10
11:22:08  59  ,aud_g11
11:22:08  60  ,aud_g12
11:22:08  61  ,aud_g13
11:22:08  62  ,aud_g14
11:22:08  63  ,aud_g15
11:22:08  64  ,aud_g16
11:22:08  65  ,aud_g17
11:22:08  66  ,aud_g18
11:22:08  67  ,aud_g19
11:22:08  68  ,aud_g20
11:22:08  69  ,aud_g21
11:22:08  70  ,aud_g22
11:22:08  71  ,aud_g23
11:22:08  72  ,aud_g24
11:22:08  73  ,aud_g25
11:22:08  74  ,aud_g26
11:22:08  75  ,aud_g27
11:22:08  76  ,aud_g28
11:22:08  77  ,aud_g29
11:22:08  78  ,aud_g30
11:22:08  79  ,aud_g31
11:22:08  80  ,aud_g32
11:22:08  81  ,aud_g33
11:22:08  82  ,aud_g34
11:22:08  83  ,aud_g35
11:22:08  84  ,aud_g36
11:22:08  85  ,aud_g37
11:22:08  86  ,aud_g38
11:22:08  87  ,aud_g39
11:22:08  88  ,aud_g40
11:22:08  89  ,aud_g41
11:22:08  90  ,gbp_g00
11:22:08  91  ,gbp_g01
11:22:08  92  ,gbp_g02
11:22:08  93  ,gbp_g03
11:22:08  94  ,gbp_g04
11:22:08  95  ,gbp_g05
11:22:08  96  ,gbp_g06
11:22:08  97  ,gbp_g07
11:22:08  98  ,gbp_g08
11:22:08  99  ,gbp_g09
11:22:08 100  ,gbp_g10
11:22:08 101  ,gbp_g11
11:22:08 102  ,gbp_g12
11:22:08 103  ,gbp_g13
11:22:08 104  ,gbp_g14
11:22:08 105  ,gbp_g15
11:22:08 106  ,gbp_g16
11:22:08 107  ,gbp_g17
11:22:08 108  ,gbp_g18
11:22:08 109  ,gbp_g19
11:22:08 110  ,gbp_g20
11:22:08 111  ,gbp_g21
11:22:08 112  ,gbp_g22
11:22:08 113  ,gbp_g23
11:22:08 114  ,gbp_g24
11:22:08 115  ,gbp_g25
11:22:08 116  ,gbp_g26
11:22:08 117  ,gbp_g27
11:22:08 118  ,gbp_g28
11:22:08 119  ,gbp_g29
11:22:08 120  ,gbp_g30
11:22:08 121  ,gbp_g31
11:22:08 122  ,gbp_g32
11:22:08 123  ,gbp_g33
11:22:08 124  ,gbp_g34
11:22:08 125  ,gbp_g35
11:22:08 126  ,gbp_g36
11:22:08 127  ,gbp_g37
11:22:08 128  ,gbp_g38
11:22:08 129  ,gbp_g39
11:22:08 130  ,gbp_g40
11:22:08 131  ,gbp_g41
11:22:08 132  ,jpy_g00
11:22:08 133  ,jpy_g01
11:22:08 134  ,jpy_g02
11:22:08 135  ,jpy_g03
11:22:08 136  ,jpy_g04
11:22:08 137  ,jpy_g05
11:22:08 138  ,jpy_g06
11:22:08 139  ,jpy_g07
11:22:08 140  ,jpy_g08
11:22:08 141  ,jpy_g09
11:22:08 142  ,jpy_g10
11:22:08 143  ,jpy_g11
11:22:08 144  ,jpy_g12
11:22:08 145  ,jpy_g13
11:22:08 146  ,jpy_g14
11:22:08 147  ,jpy_g15
11:22:08 148  ,jpy_g16
11:22:08 149  ,jpy_g17
11:22:08 150  ,jpy_g18
11:22:08 151  ,jpy_g19
11:22:08 152  ,jpy_g20
11:22:08 153  ,jpy_g21
11:22:08 154  ,jpy_g22
11:22:08 155  ,jpy_g23
11:22:08 156  ,jpy_g24
11:22:08 157  ,jpy_g25
11:22:08 158  ,jpy_g26
11:22:08 159  ,jpy_g27
11:22:08 160  ,jpy_g28
11:22:08 161  ,jpy_g29
11:22:08 162  ,jpy_g30
11:22:08 163  ,jpy_g31
11:22:08 164  ,jpy_g32
11:22:08 165  ,jpy_g33
11:22:08 166  ,jpy_g34
11:22:08 167  ,jpy_g35
11:22:08 168  ,jpy_g36
11:22:08 169  ,jpy_g37
11:22:08 170  ,jpy_g38
11:22:08 171  ,jpy_g39
11:22:08 172  ,jpy_g40
11:22:08 173  ,jpy_g41
11:22:08 174  ,cad_g00
11:22:08 175  ,cad_g01
11:22:08 176  ,cad_g02
11:22:08 177  ,cad_g03
11:22:08 178  ,cad_g04
11:22:08 179  ,cad_g05
11:22:08 180  ,cad_g06
11:22:08 181  ,cad_g07
11:22:08 182  ,cad_g08
11:22:08 183  ,cad_g09
11:22:08 184  ,cad_g10
11:22:08 185  ,cad_g11
11:22:08 186  ,cad_g12
11:22:08 187  ,cad_g13
11:22:08 188  ,cad_g14
11:22:08 189  ,cad_g15
11:22:08 190  ,cad_g16
11:22:08 191  ,cad_g17
11:22:08 192  ,cad_g18
11:22:08 193  ,cad_g19
11:22:08 194  ,cad_g20
11:22:08 195  ,cad_g21
11:22:08 196  ,cad_g22
11:22:08 197  ,cad_g23
11:22:08 198  ,cad_g24
11:22:08 199  ,cad_g25
11:22:08 200  ,cad_g26
11:22:08 201  ,cad_g27
11:22:08 202  ,cad_g28
11:22:08 203  ,cad_g29
11:22:08 204  ,cad_g30
11:22:08 205  ,cad_g31
11:22:08 206  ,cad_g32
11:22:08 207  ,cad_g33
11:22:08 208  ,cad_g34
11:22:08 209  ,cad_g35
11:22:08 210  ,cad_g36
11:22:08 211  ,cad_g37
11:22:08 212  ,cad_g38
11:22:08 213  ,cad_g39
11:22:08 214  ,cad_g40
11:22:08 215  ,cad_g41
11:22:08 216  ,chf_g00
11:22:08 217  ,chf_g01
11:22:08 218  ,chf_g02
11:22:08 219  ,chf_g03
11:22:08 220  ,chf_g04
11:22:08 221  ,chf_g05
11:22:08 222  ,chf_g06
11:22:08 223  ,chf_g07
11:22:08 224  ,chf_g08
11:22:08 225  ,chf_g09
11:22:08 226  ,chf_g10
11:22:08 227  ,chf_g11
11:22:08 228  ,chf_g12
11:22:08 229  ,chf_g13
11:22:08 230  ,chf_g14
11:22:08 231  ,chf_g15
11:22:08 232  ,chf_g16
11:22:08 233  ,chf_g17
11:22:08 234  ,chf_g18
11:22:08 235  ,chf_g19
11:22:08 236  ,chf_g20
11:22:08 237  ,chf_g21
11:22:08 238  ,chf_g22
11:22:08 239  ,chf_g23
11:22:08 240  ,chf_g24
11:22:08 241  ,chf_g25
11:22:08 242  ,chf_g26
11:22:08 243  ,chf_g27
11:22:08 244  ,chf_g28
11:22:08 245  ,chf_g29
11:22:08 246  ,chf_g30
11:22:08 247  ,chf_g31
11:22:08 248  ,chf_g32
11:22:08 249  ,chf_g33
11:22:08 250  ,chf_g34
11:22:08 251  ,chf_g35
11:22:08 252  ,chf_g36
11:22:08 253  ,chf_g37
11:22:08 254  ,chf_g38
11:22:08 255  ,chf_g39
11:22:08 256  ,chf_g40
11:22:08 257  ,chf_g41
11:22:08 258  FROM aud_ms6 m
11:22:08 259  WHERE m.ydate = '&1'||' '||'&2'
11:22:08 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-04'||' '||'11:00:00'

View created.

Elapsed: 00:00:00.14
11:22:08 SQL> 
11:22:08 SQL> -- rpt
11:22:08 SQL> -- We should see just 1 row:
11:22:08 SQL> 
11:22:08 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.03
11:22:09 SQL> 
11:22:09 SQL> -- Build the model:
11:22:09 SQL> CREATE OR REPLACE VIEW bme AS
11:22:09   2  SELECT
11:22:09   3  'aud'||m.ydate prdate
11:22:09   4  ,gattn
11:22:09   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:22:09   6  ,eur_g00
11:22:09   7  ,eur_g01
11:22:09   8  ,eur_g02
11:22:09   9  ,eur_g03
11:22:09  10  ,eur_g04
11:22:09  11  ,eur_g05
11:22:09  12  ,eur_g06
11:22:09  13  ,eur_g07
11:22:09  14  ,eur_g08
11:22:09  15  ,eur_g09
11:22:09  16  ,eur_g10
11:22:09  17  ,eur_g11
11:22:09  18  ,eur_g12
11:22:09  19  ,eur_g13
11:22:09  20  ,eur_g14
11:22:09  21  ,eur_g15
11:22:09  22  ,eur_g16
11:22:09  23  ,eur_g17
11:22:09  24  ,eur_g18
11:22:09  25  ,eur_g19
11:22:09  26  ,eur_g20
11:22:09  27  ,eur_g21
11:22:09  28  ,eur_g22
11:22:09  29  ,eur_g23
11:22:09  30  ,eur_g24
11:22:09  31  ,eur_g25
11:22:09  32  ,eur_g26
11:22:09  33  ,eur_g27
11:22:09  34  ,eur_g28
11:22:09  35  ,eur_g29
11:22:09  36  ,eur_g30
11:22:09  37  ,eur_g31
11:22:09  38  ,eur_g32
11:22:09  39  ,eur_g33
11:22:09  40  ,eur_g34
11:22:09  41  ,eur_g35
11:22:09  42  ,eur_g36
11:22:09  43  ,eur_g37
11:22:09  44  ,eur_g38
11:22:09  45  ,eur_g39
11:22:09  46  ,eur_g40
11:22:09  47  ,eur_g41
11:22:09  48  ,aud_g00
11:22:09  49  ,aud_g01
11:22:09  50  ,aud_g02
11:22:09  51  ,aud_g03
11:22:09  52  ,aud_g04
11:22:09  53  ,aud_g05
11:22:09  54  ,aud_g06
11:22:09  55  ,aud_g07
11:22:09  56  ,aud_g08
11:22:09  57  ,aud_g09
11:22:09  58  ,aud_g10
11:22:09  59  ,aud_g11
11:22:09  60  ,aud_g12
11:22:09  61  ,aud_g13
11:22:09  62  ,aud_g14
11:22:09  63  ,aud_g15
11:22:09  64  ,aud_g16
11:22:09  65  ,aud_g17
11:22:09  66  ,aud_g18
11:22:09  67  ,aud_g19
11:22:09  68  ,aud_g20
11:22:09  69  ,aud_g21
11:22:09  70  ,aud_g22
11:22:09  71  ,aud_g23
11:22:09  72  ,aud_g24
11:22:09  73  ,aud_g25
11:22:09  74  ,aud_g26
11:22:09  75  ,aud_g27
11:22:09  76  ,aud_g28
11:22:09  77  ,aud_g29
11:22:09  78  ,aud_g30
11:22:09  79  ,aud_g31
11:22:09  80  ,aud_g32
11:22:09  81  ,aud_g33
11:22:09  82  ,aud_g34
11:22:09  83  ,aud_g35
11:22:09  84  ,aud_g36
11:22:09  85  ,aud_g37
11:22:09  86  ,aud_g38
11:22:09  87  ,aud_g39
11:22:09  88  ,aud_g40
11:22:09  89  ,aud_g41
11:22:09  90  ,gbp_g00
11:22:09  91  ,gbp_g01
11:22:09  92  ,gbp_g02
11:22:09  93  ,gbp_g03
11:22:09  94  ,gbp_g04
11:22:09  95  ,gbp_g05
11:22:09  96  ,gbp_g06
11:22:09  97  ,gbp_g07
11:22:09  98  ,gbp_g08
11:22:09  99  ,gbp_g09
11:22:09 100  ,gbp_g10
11:22:09 101  ,gbp_g11
11:22:09 102  ,gbp_g12
11:22:09 103  ,gbp_g13
11:22:09 104  ,gbp_g14
11:22:09 105  ,gbp_g15
11:22:09 106  ,gbp_g16
11:22:09 107  ,gbp_g17
11:22:09 108  ,gbp_g18
11:22:09 109  ,gbp_g19
11:22:09 110  ,gbp_g20
11:22:09 111  ,gbp_g21
11:22:09 112  ,gbp_g22
11:22:09 113  ,gbp_g23
11:22:09 114  ,gbp_g24
11:22:09 115  ,gbp_g25
11:22:09 116  ,gbp_g26
11:22:09 117  ,gbp_g27
11:22:09 118  ,gbp_g28
11:22:09 119  ,gbp_g29
11:22:09 120  ,gbp_g30
11:22:09 121  ,gbp_g31
11:22:09 122  ,gbp_g32
11:22:09 123  ,gbp_g33
11:22:09 124  ,gbp_g34
11:22:09 125  ,gbp_g35
11:22:09 126  ,gbp_g36
11:22:09 127  ,gbp_g37
11:22:09 128  ,gbp_g38
11:22:09 129  ,gbp_g39
11:22:09 130  ,gbp_g40
11:22:09 131  ,gbp_g41
11:22:09 132  ,jpy_g00
11:22:09 133  ,jpy_g01
11:22:09 134  ,jpy_g02
11:22:09 135  ,jpy_g03
11:22:09 136  ,jpy_g04
11:22:09 137  ,jpy_g05
11:22:09 138  ,jpy_g06
11:22:09 139  ,jpy_g07
11:22:09 140  ,jpy_g08
11:22:09 141  ,jpy_g09
11:22:09 142  ,jpy_g10
11:22:09 143  ,jpy_g11
11:22:09 144  ,jpy_g12
11:22:09 145  ,jpy_g13
11:22:09 146  ,jpy_g14
11:22:09 147  ,jpy_g15
11:22:09 148  ,jpy_g16
11:22:09 149  ,jpy_g17
11:22:09 150  ,jpy_g18
11:22:09 151  ,jpy_g19
11:22:09 152  ,jpy_g20
11:22:09 153  ,jpy_g21
11:22:09 154  ,jpy_g22
11:22:09 155  ,jpy_g23
11:22:09 156  ,jpy_g24
11:22:09 157  ,jpy_g25
11:22:09 158  ,jpy_g26
11:22:09 159  ,jpy_g27
11:22:09 160  ,jpy_g28
11:22:09 161  ,jpy_g29
11:22:09 162  ,jpy_g30
11:22:09 163  ,jpy_g31
11:22:09 164  ,jpy_g32
11:22:09 165  ,jpy_g33
11:22:09 166  ,jpy_g34
11:22:09 167  ,jpy_g35
11:22:09 168  ,jpy_g36
11:22:09 169  ,jpy_g37
11:22:09 170  ,jpy_g38
11:22:09 171  ,jpy_g39
11:22:09 172  ,jpy_g40
11:22:09 173  ,jpy_g41
11:22:09 174  ,cad_g00
11:22:09 175  ,cad_g01
11:22:09 176  ,cad_g02
11:22:09 177  ,cad_g03
11:22:09 178  ,cad_g04
11:22:09 179  ,cad_g05
11:22:09 180  ,cad_g06
11:22:09 181  ,cad_g07
11:22:09 182  ,cad_g08
11:22:09 183  ,cad_g09
11:22:09 184  ,cad_g10
11:22:09 185  ,cad_g11
11:22:09 186  ,cad_g12
11:22:09 187  ,cad_g13
11:22:09 188  ,cad_g14
11:22:09 189  ,cad_g15
11:22:09 190  ,cad_g16
11:22:09 191  ,cad_g17
11:22:09 192  ,cad_g18
11:22:09 193  ,cad_g19
11:22:09 194  ,cad_g20
11:22:09 195  ,cad_g21
11:22:09 196  ,cad_g22
11:22:09 197  ,cad_g23
11:22:09 198  ,cad_g24
11:22:09 199  ,cad_g25
11:22:09 200  ,cad_g26
11:22:09 201  ,cad_g27
11:22:09 202  ,cad_g28
11:22:09 203  ,cad_g29
11:22:09 204  ,cad_g30
11:22:09 205  ,cad_g31
11:22:09 206  ,cad_g32
11:22:09 207  ,cad_g33
11:22:09 208  ,cad_g34
11:22:09 209  ,cad_g35
11:22:09 210  ,cad_g36
11:22:09 211  ,cad_g37
11:22:09 212  ,cad_g38
11:22:09 213  ,cad_g39
11:22:09 214  ,cad_g40
11:22:09 215  ,cad_g41
11:22:09 216  ,chf_g00
11:22:09 217  ,chf_g01
11:22:09 218  ,chf_g02
11:22:09 219  ,chf_g03
11:22:09 220  ,chf_g04
11:22:09 221  ,chf_g05
11:22:09 222  ,chf_g06
11:22:09 223  ,chf_g07
11:22:09 224  ,chf_g08
11:22:09 225  ,chf_g09
11:22:09 226  ,chf_g10
11:22:09 227  ,chf_g11
11:22:09 228  ,chf_g12
11:22:09 229  ,chf_g13
11:22:09 230  ,chf_g14
11:22:09 231  ,chf_g15
11:22:09 232  ,chf_g16
11:22:09 233  ,chf_g17
11:22:09 234  ,chf_g18
11:22:09 235  ,chf_g19
11:22:09 236  ,chf_g20
11:22:09 237  ,chf_g21
11:22:09 238  ,chf_g22
11:22:09 239  ,chf_g23
11:22:09 240  ,chf_g24
11:22:09 241  ,chf_g25
11:22:09 242  ,chf_g26
11:22:09 243  ,chf_g27
11:22:09 244  ,chf_g28
11:22:09 245  ,chf_g29
11:22:09 246  ,chf_g30
11:22:09 247  ,chf_g31
11:22:09 248  ,chf_g32
11:22:09 249  ,chf_g33
11:22:09 250  ,chf_g34
11:22:09 251  ,chf_g35
11:22:09 252  ,chf_g36
11:22:09 253  ,chf_g37
11:22:09 254  ,chf_g38
11:22:09 255  ,chf_g39
11:22:09 256  ,chf_g40
11:22:09 257  ,chf_g41
11:22:09 258  FROM aud_ms6 m
11:22:09 259  WHERE gattn IN('nup','up')
11:22:09 260  AND 1+m.ydate < '&1'||' '||'&2'
11:22:09 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-04'||' '||'11:00:00'

View created.

Elapsed: 00:00:00.13
11:22:09 SQL> 
11:22:09 SQL> -- rpt
11:22:09 SQL> 
11:22:09 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12696
up	     6259

Elapsed: 00:00:00.04
11:22:09 SQL> 
11:22:09 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-03 10:55:00

Elapsed: 00:00:00.03
11:22:09 SQL> 
11:22:09 SQL> -- Now build model from bme and score sme
11:22:09 SQL> @score1gattn.sql
11:22:09 SQL> -- score1gattn.sql
11:22:09 SQL> 
11:22:09 SQL> -- Does the 1st SVM score
11:22:09 SQL> 
11:22:09 SQL> -- Fill up svmc_apply_prep
11:22:09 SQL> @score_gattn.sql
11:22:09 SQL> --
11:22:09 SQL> -- score_gattn.sql
11:22:09 SQL> --
11:22:09 SQL> 
11:22:09 SQL> -- usage: score_gattn.sql
11:22:09 SQL> 
11:22:09 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
11:22:09 SQL> 
11:22:09 SQL> DEFINE target	= 'gattn'
11:22:09 SQL> DEFINE model_name = 'forex15'
11:22:09 SQL> DEFINE bldtable	= 'bme'
11:22:09 SQL> DEFINE scoretable = 'sme'
11:22:09 SQL> DEFINE case_id	= 'prdate'
11:22:09 SQL> 
11:22:09 SQL> -- Define a variable to help me exclude some columns from some data mining calls
11:22:09 SQL> DEFINE exclude1 = "'&target','&case_id'"
11:22:09 SQL> 
11:22:09 SQL> -- Builds an SVM model using pl/sql.
11:22:09 SQL> 
11:22:09 SQL> -----------------------------------------------------------------------
11:22:09 SQL> --			    BUILD THE MODEL
11:22:09 SQL> -----------------------------------------------------------------------
11:22:09 SQL> 
11:22:09 SQL> -- Cleanup old build data preparation objects for repeat runs
11:22:09 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
11:22:09 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
11:22:09 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
11:22:09 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
11:22:09 SQL> 
11:22:09 SQL> 
11:22:09 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
11:22:09 SQL> --
11:22:09 SQL> -- DROP	TABLE svmc_settings ;
11:22:09 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
11:22:09 SQL> -- DELETE svmc_settings;
11:22:09 SQL> 
11:22:09 SQL> -- The default classification algorithm is Naive Bayes. So override
11:22:09 SQL> -- this choice to SVM using a settings table.
11:22:09 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
11:22:09 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
11:22:09 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
11:22:09 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
11:22:09 SQL> -- models.
11:22:09 SQL> --
11:22:09 SQL> 
11:22:09 SQL> -- Do this once and then comment it out.
11:22:09 SQL> -- That makes script go faster.
11:22:09 SQL> -- BEGIN
11:22:09 SQL> -- -- Populate settings table
11:22:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:22:09 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
11:22:09 SQL> --
11:22:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:22:09 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
11:22:09 SQL> --
11:22:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:22:09 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
11:22:09 SQL> --   COMMIT;
11:22:09 SQL> -- END;
11:22:09 SQL> -- /
11:22:09 SQL> 
11:22:09 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
11:22:09 SQL> 
11:22:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
11:22:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:22:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:22:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
11:22:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:22:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:22:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
11:22:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:22:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:22:09 SQL> 
11:22:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
11:22:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:22:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:22:09 SQL> 
11:22:09 SQL> --------------------------------
11:22:09 SQL> -- PREPARE BUILD (TRAINING) DATA
11:22:09 SQL> --
11:22:09 SQL> 
11:22:09 SQL> -- 1. Missing Value treatment for all Predictors and
11:22:09 SQL> -- 2. Outlier Treatment and
11:22:09 SQL> -- 3. Normalization are performed below.
11:22:09 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
11:22:09 SQL> --    normalized here.
11:22:09 SQL> 
11:22:09 SQL> BEGIN
11:22:09   2  	-- Perform missing value treatment for all predictors
11:22:09   3  	-- create miss tables
11:22:09   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
11:22:09   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
11:22:09   6  
11:22:09   7  	-- populate miss tables
11:22:09   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
11:22:09   9  	  miss_table_name => 'svmc_miss_num',
11:22:09  10  	  data_table_name => '&bldtable',
11:22:09  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:22:09  12  
11:22:09  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
11:22:09  14  	  miss_table_name => 'svmc_miss_cat',
11:22:09  15  	  data_table_name => '&bldtable',
11:22:09  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:22:09  17  
11:22:09  18  	-- xform input data to replace missing values
11:22:09  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:22:09  20  	  miss_table_name => 'svmc_miss_num',
11:22:09  21  	  data_table_name => '&bldtable',
11:22:09  22  	  xform_view_name => 'xformed_build_miss_num');
11:22:09  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:22:09  24  	  miss_table_name => 'svmc_miss_cat',
11:22:09  25  	  data_table_name => '&bldtable',
11:22:09  26  	  xform_view_name => 'xformed_build_miss_cat');
11:22:09  27  
11:22:09  28  	-- Perform outlier treatment.
11:22:09  29  	-- create clip table
11:22:09  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
11:22:09  31  
11:22:09  32  	-- populate clip table
11:22:09  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
11:22:09  34  	  clip_table_name => 'svmc_clip',
11:22:09  35  	  data_table_name => '&bldtable',
11:22:09  36  	  tail_frac	  => 0.025,
11:22:09  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:22:09  38  
11:22:09  39  	-- xform input data to winsorized data
11:22:09  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
11:22:09  41  	  clip_table_name => 'svmc_clip',
11:22:09  42  	  data_table_name => '&bldtable',
11:22:09  43  	  xform_view_name => 'svmc_winsor');
11:22:09  44  
11:22:09  45  	-- create normalization table
11:22:09  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
11:22:09  47  
11:22:09  48  	-- populate normalization table based on winsorized data
11:22:09  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
11:22:09  50  	  norm_table_name => 'svmc_norm',
11:22:09  51  	  data_table_name => 'svmc_winsor',
11:22:09  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:22:09  53  
11:22:09  54  	-- normalize the original data
11:22:09  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:22:09  56  	  norm_table_name => 'svmc_norm',
11:22:09  57  	  data_table_name => '&bldtable',
11:22:09  58  	  xform_view_name => 'svmc_build_prep');
11:22:09  59  END;
11:22:09  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.72
11:22:27 SQL> 
11:22:27 SQL> ---------------------
11:22:27 SQL> -- CREATE A NEW MODEL
11:22:27 SQL> --
11:22:27 SQL> -- Cleanup old model with the same name for repeat runs
11:22:27 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
11:22:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:22:27   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.95
11:22:28 SQL> 
11:22:28 SQL> -- Build a new SVM Model
11:22:28 SQL> BEGIN
11:22:28   2  	DBMS_DATA_MINING.CREATE_MODEL(
11:22:28   3  	  model_name	      => '&model_name',
11:22:28   4  	  mining_function     => dbms_data_mining.classification,
11:22:28   5  	  data_table_name     => 'svmc_build_prep',
11:22:28   6  	  case_id_column_name => '&case_id',
11:22:28   7  	  target_column_name  => '&target',
11:22:28   8  	  settings_table_name => 'svmc_settings');
11:22:28   9  END;
11:22:28  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.23
11:22:54 SQL> 
11:22:54 SQL> -----------------------------------------------------------------------
11:22:54 SQL> --			       APPLY/score THE MODEL
11:22:54 SQL> -----------------------------------------------------------------------
11:22:54 SQL> 
11:22:54 SQL> -- Cleanup old scoring data preparation objects for repeat runs
11:22:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
11:22:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:22:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:22:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
11:22:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:22:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:22:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
11:22:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:22:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
11:22:54 SQL> -----------------------
11:22:54 SQL> -- PREPARE SCORING DATA
11:22:54 SQL> --
11:22:54 SQL> -- If the data for model creation has been prepared, then the data
11:22:54 SQL> -- to be scored using the model must be prepared in the same manner
11:22:54 SQL> -- in order to obtain meaningful results.
11:22:54 SQL> --
11:22:54 SQL> -- 1. Missing Value treatment for all Predictors and
11:22:54 SQL> -- 2. Normalization
11:22:54 SQL> -- No outlier treatment will be performed during test and apply. The
11:22:54 SQL> -- normalization step is sufficient, since the normalization parameters
11:22:54 SQL> -- already capture the effects of outlier treatment done with build data.
11:22:54 SQL> --
11:22:54 SQL> BEGIN
11:22:54   2  	-- Xform Test data to replace missing values
11:22:54   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:22:54   4  	  miss_table_name => 'svmc_miss_num',
11:22:54   5  	  data_table_name => '&scoretable',
11:22:54   6  	  xform_view_name => 'xformed_apply_miss_num');
11:22:54   7  
11:22:54   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:22:54   9  	  miss_table_name => 'svmc_miss_cat',
11:22:54  10  	  data_table_name => '&scoretable',
11:22:54  11  	  xform_view_name => 'xformed_apply_miss_cat');
11:22:54  12  
11:22:54  13  	-- Normalize the data to be scored
11:22:54  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:22:54  15  	  norm_table_name => 'svmc_norm',
11:22:54  16  	  data_table_name => '&scoretable',
11:22:54  17  	  xform_view_name => 'svmc_apply_prep');
11:22:54  18  END;
11:22:54  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.16
11:22:55 SQL> 
11:22:55 SQL> -- Use same model_name used in score_gattn.sql
11:22:55 SQL> DEFINE model_name = 'forex15'
11:22:55 SQL> 
11:22:55 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
11:22:55 SQL> 
11:22:55 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
11:22:55   2  SELECT
11:22:55   3  prdate
11:22:55   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
11:22:55   5  ,sysdate
11:22:55   6  ,SUBSTR(prdate,1,3)pair
11:22:55   7  ,SUBSTR(prdate,4,19)ydate
11:22:55   8  FROM svmc_apply_prep
11:22:55   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
11:22:55 SQL> @aud_score1day_gattn.sql	2011-01-04 11:05:00
11:22:55 SQL> --
11:22:55 SQL> -- aud_score1day_gattn.sql
11:22:55 SQL> --
11:22:55 SQL> 
11:22:55 SQL> CREATE OR REPLACE VIEW sme AS
11:22:55   2  SELECT
11:22:55   3  'aud'||m.ydate prdate
11:22:55   4  ,NULL gattn
11:22:55   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:22:55   6  ,eur_g00
11:22:55   7  ,eur_g01
11:22:55   8  ,eur_g02
11:22:55   9  ,eur_g03
11:22:55  10  ,eur_g04
11:22:55  11  ,eur_g05
11:22:55  12  ,eur_g06
11:22:55  13  ,eur_g07
11:22:55  14  ,eur_g08
11:22:55  15  ,eur_g09
11:22:55  16  ,eur_g10
11:22:55  17  ,eur_g11
11:22:55  18  ,eur_g12
11:22:55  19  ,eur_g13
11:22:55  20  ,eur_g14
11:22:55  21  ,eur_g15
11:22:55  22  ,eur_g16
11:22:55  23  ,eur_g17
11:22:55  24  ,eur_g18
11:22:55  25  ,eur_g19
11:22:55  26  ,eur_g20
11:22:55  27  ,eur_g21
11:22:55  28  ,eur_g22
11:22:55  29  ,eur_g23
11:22:55  30  ,eur_g24
11:22:55  31  ,eur_g25
11:22:55  32  ,eur_g26
11:22:55  33  ,eur_g27
11:22:55  34  ,eur_g28
11:22:55  35  ,eur_g29
11:22:55  36  ,eur_g30
11:22:55  37  ,eur_g31
11:22:55  38  ,eur_g32
11:22:55  39  ,eur_g33
11:22:55  40  ,eur_g34
11:22:55  41  ,eur_g35
11:22:55  42  ,eur_g36
11:22:55  43  ,eur_g37
11:22:55  44  ,eur_g38
11:22:55  45  ,eur_g39
11:22:55  46  ,eur_g40
11:22:55  47  ,eur_g41
11:22:55  48  ,aud_g00
11:22:55  49  ,aud_g01
11:22:55  50  ,aud_g02
11:22:55  51  ,aud_g03
11:22:55  52  ,aud_g04
11:22:55  53  ,aud_g05
11:22:55  54  ,aud_g06
11:22:55  55  ,aud_g07
11:22:55  56  ,aud_g08
11:22:55  57  ,aud_g09
11:22:55  58  ,aud_g10
11:22:55  59  ,aud_g11
11:22:55  60  ,aud_g12
11:22:55  61  ,aud_g13
11:22:55  62  ,aud_g14
11:22:55  63  ,aud_g15
11:22:55  64  ,aud_g16
11:22:55  65  ,aud_g17
11:22:55  66  ,aud_g18
11:22:55  67  ,aud_g19
11:22:55  68  ,aud_g20
11:22:55  69  ,aud_g21
11:22:55  70  ,aud_g22
11:22:55  71  ,aud_g23
11:22:55  72  ,aud_g24
11:22:55  73  ,aud_g25
11:22:55  74  ,aud_g26
11:22:55  75  ,aud_g27
11:22:55  76  ,aud_g28
11:22:55  77  ,aud_g29
11:22:55  78  ,aud_g30
11:22:55  79  ,aud_g31
11:22:55  80  ,aud_g32
11:22:55  81  ,aud_g33
11:22:55  82  ,aud_g34
11:22:55  83  ,aud_g35
11:22:55  84  ,aud_g36
11:22:55  85  ,aud_g37
11:22:55  86  ,aud_g38
11:22:55  87  ,aud_g39
11:22:55  88  ,aud_g40
11:22:55  89  ,aud_g41
11:22:55  90  ,gbp_g00
11:22:55  91  ,gbp_g01
11:22:55  92  ,gbp_g02
11:22:55  93  ,gbp_g03
11:22:55  94  ,gbp_g04
11:22:55  95  ,gbp_g05
11:22:55  96  ,gbp_g06
11:22:55  97  ,gbp_g07
11:22:55  98  ,gbp_g08
11:22:55  99  ,gbp_g09
11:22:55 100  ,gbp_g10
11:22:55 101  ,gbp_g11
11:22:55 102  ,gbp_g12
11:22:55 103  ,gbp_g13
11:22:55 104  ,gbp_g14
11:22:55 105  ,gbp_g15
11:22:55 106  ,gbp_g16
11:22:55 107  ,gbp_g17
11:22:55 108  ,gbp_g18
11:22:55 109  ,gbp_g19
11:22:55 110  ,gbp_g20
11:22:55 111  ,gbp_g21
11:22:55 112  ,gbp_g22
11:22:55 113  ,gbp_g23
11:22:55 114  ,gbp_g24
11:22:55 115  ,gbp_g25
11:22:55 116  ,gbp_g26
11:22:55 117  ,gbp_g27
11:22:55 118  ,gbp_g28
11:22:55 119  ,gbp_g29
11:22:55 120  ,gbp_g30
11:22:55 121  ,gbp_g31
11:22:55 122  ,gbp_g32
11:22:55 123  ,gbp_g33
11:22:55 124  ,gbp_g34
11:22:55 125  ,gbp_g35
11:22:55 126  ,gbp_g36
11:22:55 127  ,gbp_g37
11:22:55 128  ,gbp_g38
11:22:55 129  ,gbp_g39
11:22:55 130  ,gbp_g40
11:22:55 131  ,gbp_g41
11:22:55 132  ,jpy_g00
11:22:55 133  ,jpy_g01
11:22:55 134  ,jpy_g02
11:22:55 135  ,jpy_g03
11:22:55 136  ,jpy_g04
11:22:55 137  ,jpy_g05
11:22:55 138  ,jpy_g06
11:22:55 139  ,jpy_g07
11:22:55 140  ,jpy_g08
11:22:55 141  ,jpy_g09
11:22:55 142  ,jpy_g10
11:22:55 143  ,jpy_g11
11:22:55 144  ,jpy_g12
11:22:55 145  ,jpy_g13
11:22:55 146  ,jpy_g14
11:22:55 147  ,jpy_g15
11:22:55 148  ,jpy_g16
11:22:55 149  ,jpy_g17
11:22:55 150  ,jpy_g18
11:22:55 151  ,jpy_g19
11:22:55 152  ,jpy_g20
11:22:55 153  ,jpy_g21
11:22:55 154  ,jpy_g22
11:22:55 155  ,jpy_g23
11:22:55 156  ,jpy_g24
11:22:55 157  ,jpy_g25
11:22:55 158  ,jpy_g26
11:22:55 159  ,jpy_g27
11:22:55 160  ,jpy_g28
11:22:55 161  ,jpy_g29
11:22:55 162  ,jpy_g30
11:22:55 163  ,jpy_g31
11:22:55 164  ,jpy_g32
11:22:55 165  ,jpy_g33
11:22:55 166  ,jpy_g34
11:22:55 167  ,jpy_g35
11:22:55 168  ,jpy_g36
11:22:55 169  ,jpy_g37
11:22:55 170  ,jpy_g38
11:22:55 171  ,jpy_g39
11:22:55 172  ,jpy_g40
11:22:55 173  ,jpy_g41
11:22:55 174  ,cad_g00
11:22:55 175  ,cad_g01
11:22:55 176  ,cad_g02
11:22:55 177  ,cad_g03
11:22:55 178  ,cad_g04
11:22:55 179  ,cad_g05
11:22:55 180  ,cad_g06
11:22:55 181  ,cad_g07
11:22:55 182  ,cad_g08
11:22:55 183  ,cad_g09
11:22:55 184  ,cad_g10
11:22:55 185  ,cad_g11
11:22:55 186  ,cad_g12
11:22:55 187  ,cad_g13
11:22:55 188  ,cad_g14
11:22:55 189  ,cad_g15
11:22:55 190  ,cad_g16
11:22:55 191  ,cad_g17
11:22:55 192  ,cad_g18
11:22:55 193  ,cad_g19
11:22:55 194  ,cad_g20
11:22:55 195  ,cad_g21
11:22:55 196  ,cad_g22
11:22:55 197  ,cad_g23
11:22:55 198  ,cad_g24
11:22:55 199  ,cad_g25
11:22:55 200  ,cad_g26
11:22:55 201  ,cad_g27
11:22:55 202  ,cad_g28
11:22:55 203  ,cad_g29
11:22:55 204  ,cad_g30
11:22:55 205  ,cad_g31
11:22:55 206  ,cad_g32
11:22:55 207  ,cad_g33
11:22:55 208  ,cad_g34
11:22:55 209  ,cad_g35
11:22:55 210  ,cad_g36
11:22:55 211  ,cad_g37
11:22:55 212  ,cad_g38
11:22:55 213  ,cad_g39
11:22:55 214  ,cad_g40
11:22:55 215  ,cad_g41
11:22:55 216  ,chf_g00
11:22:55 217  ,chf_g01
11:22:55 218  ,chf_g02
11:22:55 219  ,chf_g03
11:22:55 220  ,chf_g04
11:22:55 221  ,chf_g05
11:22:55 222  ,chf_g06
11:22:55 223  ,chf_g07
11:22:55 224  ,chf_g08
11:22:55 225  ,chf_g09
11:22:55 226  ,chf_g10
11:22:55 227  ,chf_g11
11:22:55 228  ,chf_g12
11:22:55 229  ,chf_g13
11:22:55 230  ,chf_g14
11:22:55 231  ,chf_g15
11:22:55 232  ,chf_g16
11:22:55 233  ,chf_g17
11:22:55 234  ,chf_g18
11:22:55 235  ,chf_g19
11:22:55 236  ,chf_g20
11:22:55 237  ,chf_g21
11:22:55 238  ,chf_g22
11:22:55 239  ,chf_g23
11:22:55 240  ,chf_g24
11:22:55 241  ,chf_g25
11:22:55 242  ,chf_g26
11:22:55 243  ,chf_g27
11:22:55 244  ,chf_g28
11:22:55 245  ,chf_g29
11:22:55 246  ,chf_g30
11:22:55 247  ,chf_g31
11:22:55 248  ,chf_g32
11:22:55 249  ,chf_g33
11:22:55 250  ,chf_g34
11:22:55 251  ,chf_g35
11:22:55 252  ,chf_g36
11:22:55 253  ,chf_g37
11:22:55 254  ,chf_g38
11:22:55 255  ,chf_g39
11:22:55 256  ,chf_g40
11:22:55 257  ,chf_g41
11:22:55 258  FROM aud_ms6 m
11:22:55 259  WHERE m.ydate = '&1'||' '||'&2'
11:22:55 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-04'||' '||'11:05:00'

View created.

Elapsed: 00:00:00.12
11:22:56 SQL> 
11:22:56 SQL> -- rpt
11:22:56 SQL> -- We should see just 1 row:
11:22:56 SQL> 
11:22:56 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
11:22:56 SQL> 
11:22:56 SQL> -- Build the model:
11:22:56 SQL> CREATE OR REPLACE VIEW bme AS
11:22:56   2  SELECT
11:22:56   3  'aud'||m.ydate prdate
11:22:56   4  ,gattn
11:22:56   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:22:56   6  ,eur_g00
11:22:56   7  ,eur_g01
11:22:56   8  ,eur_g02
11:22:56   9  ,eur_g03
11:22:56  10  ,eur_g04
11:22:56  11  ,eur_g05
11:22:56  12  ,eur_g06
11:22:56  13  ,eur_g07
11:22:56  14  ,eur_g08
11:22:56  15  ,eur_g09
11:22:56  16  ,eur_g10
11:22:56  17  ,eur_g11
11:22:56  18  ,eur_g12
11:22:56  19  ,eur_g13
11:22:56  20  ,eur_g14
11:22:56  21  ,eur_g15
11:22:56  22  ,eur_g16
11:22:56  23  ,eur_g17
11:22:56  24  ,eur_g18
11:22:56  25  ,eur_g19
11:22:56  26  ,eur_g20
11:22:56  27  ,eur_g21
11:22:56  28  ,eur_g22
11:22:56  29  ,eur_g23
11:22:56  30  ,eur_g24
11:22:56  31  ,eur_g25
11:22:56  32  ,eur_g26
11:22:56  33  ,eur_g27
11:22:56  34  ,eur_g28
11:22:56  35  ,eur_g29
11:22:56  36  ,eur_g30
11:22:56  37  ,eur_g31
11:22:56  38  ,eur_g32
11:22:56  39  ,eur_g33
11:22:56  40  ,eur_g34
11:22:56  41  ,eur_g35
11:22:56  42  ,eur_g36
11:22:56  43  ,eur_g37
11:22:56  44  ,eur_g38
11:22:56  45  ,eur_g39
11:22:56  46  ,eur_g40
11:22:56  47  ,eur_g41
11:22:56  48  ,aud_g00
11:22:56  49  ,aud_g01
11:22:56  50  ,aud_g02
11:22:56  51  ,aud_g03
11:22:56  52  ,aud_g04
11:22:56  53  ,aud_g05
11:22:56  54  ,aud_g06
11:22:56  55  ,aud_g07
11:22:56  56  ,aud_g08
11:22:56  57  ,aud_g09
11:22:56  58  ,aud_g10
11:22:56  59  ,aud_g11
11:22:56  60  ,aud_g12
11:22:56  61  ,aud_g13
11:22:56  62  ,aud_g14
11:22:56  63  ,aud_g15
11:22:56  64  ,aud_g16
11:22:56  65  ,aud_g17
11:22:56  66  ,aud_g18
11:22:56  67  ,aud_g19
11:22:56  68  ,aud_g20
11:22:56  69  ,aud_g21
11:22:56  70  ,aud_g22
11:22:56  71  ,aud_g23
11:22:56  72  ,aud_g24
11:22:56  73  ,aud_g25
11:22:56  74  ,aud_g26
11:22:56  75  ,aud_g27
11:22:56  76  ,aud_g28
11:22:56  77  ,aud_g29
11:22:56  78  ,aud_g30
11:22:56  79  ,aud_g31
11:22:56  80  ,aud_g32
11:22:56  81  ,aud_g33
11:22:56  82  ,aud_g34
11:22:56  83  ,aud_g35
11:22:56  84  ,aud_g36
11:22:56  85  ,aud_g37
11:22:56  86  ,aud_g38
11:22:56  87  ,aud_g39
11:22:56  88  ,aud_g40
11:22:56  89  ,aud_g41
11:22:56  90  ,gbp_g00
11:22:56  91  ,gbp_g01
11:22:56  92  ,gbp_g02
11:22:56  93  ,gbp_g03
11:22:56  94  ,gbp_g04
11:22:56  95  ,gbp_g05
11:22:56  96  ,gbp_g06
11:22:56  97  ,gbp_g07
11:22:56  98  ,gbp_g08
11:22:56  99  ,gbp_g09
11:22:56 100  ,gbp_g10
11:22:56 101  ,gbp_g11
11:22:56 102  ,gbp_g12
11:22:56 103  ,gbp_g13
11:22:56 104  ,gbp_g14
11:22:56 105  ,gbp_g15
11:22:56 106  ,gbp_g16
11:22:56 107  ,gbp_g17
11:22:56 108  ,gbp_g18
11:22:56 109  ,gbp_g19
11:22:56 110  ,gbp_g20
11:22:56 111  ,gbp_g21
11:22:56 112  ,gbp_g22
11:22:56 113  ,gbp_g23
11:22:56 114  ,gbp_g24
11:22:56 115  ,gbp_g25
11:22:56 116  ,gbp_g26
11:22:56 117  ,gbp_g27
11:22:56 118  ,gbp_g28
11:22:56 119  ,gbp_g29
11:22:56 120  ,gbp_g30
11:22:56 121  ,gbp_g31
11:22:56 122  ,gbp_g32
11:22:56 123  ,gbp_g33
11:22:56 124  ,gbp_g34
11:22:56 125  ,gbp_g35
11:22:56 126  ,gbp_g36
11:22:56 127  ,gbp_g37
11:22:56 128  ,gbp_g38
11:22:56 129  ,gbp_g39
11:22:56 130  ,gbp_g40
11:22:56 131  ,gbp_g41
11:22:56 132  ,jpy_g00
11:22:56 133  ,jpy_g01
11:22:56 134  ,jpy_g02
11:22:56 135  ,jpy_g03
11:22:56 136  ,jpy_g04
11:22:56 137  ,jpy_g05
11:22:56 138  ,jpy_g06
11:22:56 139  ,jpy_g07
11:22:56 140  ,jpy_g08
11:22:56 141  ,jpy_g09
11:22:56 142  ,jpy_g10
11:22:56 143  ,jpy_g11
11:22:56 144  ,jpy_g12
11:22:56 145  ,jpy_g13
11:22:56 146  ,jpy_g14
11:22:56 147  ,jpy_g15
11:22:56 148  ,jpy_g16
11:22:56 149  ,jpy_g17
11:22:56 150  ,jpy_g18
11:22:56 151  ,jpy_g19
11:22:56 152  ,jpy_g20
11:22:56 153  ,jpy_g21
11:22:56 154  ,jpy_g22
11:22:56 155  ,jpy_g23
11:22:56 156  ,jpy_g24
11:22:56 157  ,jpy_g25
11:22:56 158  ,jpy_g26
11:22:56 159  ,jpy_g27
11:22:56 160  ,jpy_g28
11:22:56 161  ,jpy_g29
11:22:56 162  ,jpy_g30
11:22:56 163  ,jpy_g31
11:22:56 164  ,jpy_g32
11:22:56 165  ,jpy_g33
11:22:56 166  ,jpy_g34
11:22:56 167  ,jpy_g35
11:22:56 168  ,jpy_g36
11:22:56 169  ,jpy_g37
11:22:56 170  ,jpy_g38
11:22:56 171  ,jpy_g39
11:22:56 172  ,jpy_g40
11:22:56 173  ,jpy_g41
11:22:56 174  ,cad_g00
11:22:56 175  ,cad_g01
11:22:56 176  ,cad_g02
11:22:56 177  ,cad_g03
11:22:56 178  ,cad_g04
11:22:56 179  ,cad_g05
11:22:56 180  ,cad_g06
11:22:56 181  ,cad_g07
11:22:56 182  ,cad_g08
11:22:56 183  ,cad_g09
11:22:56 184  ,cad_g10
11:22:56 185  ,cad_g11
11:22:56 186  ,cad_g12
11:22:56 187  ,cad_g13
11:22:56 188  ,cad_g14
11:22:56 189  ,cad_g15
11:22:56 190  ,cad_g16
11:22:56 191  ,cad_g17
11:22:56 192  ,cad_g18
11:22:56 193  ,cad_g19
11:22:56 194  ,cad_g20
11:22:56 195  ,cad_g21
11:22:56 196  ,cad_g22
11:22:56 197  ,cad_g23
11:22:56 198  ,cad_g24
11:22:56 199  ,cad_g25
11:22:56 200  ,cad_g26
11:22:56 201  ,cad_g27
11:22:56 202  ,cad_g28
11:22:56 203  ,cad_g29
11:22:56 204  ,cad_g30
11:22:56 205  ,cad_g31
11:22:56 206  ,cad_g32
11:22:56 207  ,cad_g33
11:22:56 208  ,cad_g34
11:22:56 209  ,cad_g35
11:22:56 210  ,cad_g36
11:22:56 211  ,cad_g37
11:22:56 212  ,cad_g38
11:22:56 213  ,cad_g39
11:22:56 214  ,cad_g40
11:22:56 215  ,cad_g41
11:22:56 216  ,chf_g00
11:22:56 217  ,chf_g01
11:22:56 218  ,chf_g02
11:22:56 219  ,chf_g03
11:22:56 220  ,chf_g04
11:22:56 221  ,chf_g05
11:22:56 222  ,chf_g06
11:22:56 223  ,chf_g07
11:22:56 224  ,chf_g08
11:22:56 225  ,chf_g09
11:22:56 226  ,chf_g10
11:22:56 227  ,chf_g11
11:22:56 228  ,chf_g12
11:22:56 229  ,chf_g13
11:22:56 230  ,chf_g14
11:22:56 231  ,chf_g15
11:22:56 232  ,chf_g16
11:22:56 233  ,chf_g17
11:22:56 234  ,chf_g18
11:22:56 235  ,chf_g19
11:22:56 236  ,chf_g20
11:22:56 237  ,chf_g21
11:22:56 238  ,chf_g22
11:22:56 239  ,chf_g23
11:22:56 240  ,chf_g24
11:22:56 241  ,chf_g25
11:22:56 242  ,chf_g26
11:22:56 243  ,chf_g27
11:22:56 244  ,chf_g28
11:22:56 245  ,chf_g29
11:22:56 246  ,chf_g30
11:22:56 247  ,chf_g31
11:22:56 248  ,chf_g32
11:22:56 249  ,chf_g33
11:22:56 250  ,chf_g34
11:22:56 251  ,chf_g35
11:22:56 252  ,chf_g36
11:22:56 253  ,chf_g37
11:22:56 254  ,chf_g38
11:22:56 255  ,chf_g39
11:22:56 256  ,chf_g40
11:22:56 257  ,chf_g41
11:22:56 258  FROM aud_ms6 m
11:22:56 259  WHERE gattn IN('nup','up')
11:22:56 260  AND 1+m.ydate < '&1'||' '||'&2'
11:22:56 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-04'||' '||'11:05:00'

View created.

Elapsed: 00:00:00.12
11:22:56 SQL> 
11:22:56 SQL> -- rpt
11:22:56 SQL> 
11:22:56 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12697
up	     6259

Elapsed: 00:00:00.04
11:22:56 SQL> 
11:22:56 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-03 11:00:00

Elapsed: 00:00:00.03
11:22:56 SQL> 
11:22:56 SQL> -- Now build model from bme and score sme
11:22:56 SQL> @score1gattn.sql
11:22:56 SQL> -- score1gattn.sql
11:22:56 SQL> 
11:22:56 SQL> -- Does the 1st SVM score
11:22:56 SQL> 
11:22:56 SQL> -- Fill up svmc_apply_prep
11:22:56 SQL> @score_gattn.sql
11:22:56 SQL> --
11:22:56 SQL> -- score_gattn.sql
11:22:56 SQL> --
11:22:56 SQL> 
11:22:56 SQL> -- usage: score_gattn.sql
11:22:56 SQL> 
11:22:56 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
11:22:56 SQL> 
11:22:56 SQL> DEFINE target	= 'gattn'
11:22:56 SQL> DEFINE model_name = 'forex15'
11:22:56 SQL> DEFINE bldtable	= 'bme'
11:22:56 SQL> DEFINE scoretable = 'sme'
11:22:56 SQL> DEFINE case_id	= 'prdate'
11:22:56 SQL> 
11:22:56 SQL> -- Define a variable to help me exclude some columns from some data mining calls
11:22:56 SQL> DEFINE exclude1 = "'&target','&case_id'"
11:22:56 SQL> 
11:22:56 SQL> -- Builds an SVM model using pl/sql.
11:22:56 SQL> 
11:22:56 SQL> -----------------------------------------------------------------------
11:22:56 SQL> --			    BUILD THE MODEL
11:22:56 SQL> -----------------------------------------------------------------------
11:22:56 SQL> 
11:22:56 SQL> -- Cleanup old build data preparation objects for repeat runs
11:22:56 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
11:22:56 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
11:22:56 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
11:22:56 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
11:22:56 SQL> 
11:22:56 SQL> 
11:22:56 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
11:22:56 SQL> --
11:22:56 SQL> -- DROP	TABLE svmc_settings ;
11:22:56 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
11:22:56 SQL> -- DELETE svmc_settings;
11:22:56 SQL> 
11:22:56 SQL> -- The default classification algorithm is Naive Bayes. So override
11:22:56 SQL> -- this choice to SVM using a settings table.
11:22:56 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
11:22:56 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
11:22:56 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
11:22:56 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
11:22:56 SQL> -- models.
11:22:56 SQL> --
11:22:56 SQL> 
11:22:56 SQL> -- Do this once and then comment it out.
11:22:56 SQL> -- That makes script go faster.
11:22:56 SQL> -- BEGIN
11:22:56 SQL> -- -- Populate settings table
11:22:56 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:22:56 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
11:22:56 SQL> --
11:22:56 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:22:56 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
11:22:56 SQL> --
11:22:56 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:22:56 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
11:22:56 SQL> --   COMMIT;
11:22:56 SQL> -- END;
11:22:56 SQL> -- /
11:22:56 SQL> 
11:22:56 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
11:22:56 SQL> 
11:22:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
11:22:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:22:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
11:22:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
11:22:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:22:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:22:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
11:22:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:22:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:22:56 SQL> 
11:22:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
11:22:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:22:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:22:56 SQL> 
11:22:56 SQL> --------------------------------
11:22:56 SQL> -- PREPARE BUILD (TRAINING) DATA
11:22:56 SQL> --
11:22:56 SQL> 
11:22:56 SQL> -- 1. Missing Value treatment for all Predictors and
11:22:56 SQL> -- 2. Outlier Treatment and
11:22:56 SQL> -- 3. Normalization are performed below.
11:22:56 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
11:22:56 SQL> --    normalized here.
11:22:56 SQL> 
11:22:56 SQL> BEGIN
11:22:56   2  	-- Perform missing value treatment for all predictors
11:22:56   3  	-- create miss tables
11:22:56   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
11:22:56   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
11:22:56   6  
11:22:56   7  	-- populate miss tables
11:22:56   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
11:22:56   9  	  miss_table_name => 'svmc_miss_num',
11:22:56  10  	  data_table_name => '&bldtable',
11:22:56  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:22:56  12  
11:22:56  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
11:22:56  14  	  miss_table_name => 'svmc_miss_cat',
11:22:56  15  	  data_table_name => '&bldtable',
11:22:56  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:22:56  17  
11:22:56  18  	-- xform input data to replace missing values
11:22:56  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:22:56  20  	  miss_table_name => 'svmc_miss_num',
11:22:56  21  	  data_table_name => '&bldtable',
11:22:56  22  	  xform_view_name => 'xformed_build_miss_num');
11:22:56  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:22:56  24  	  miss_table_name => 'svmc_miss_cat',
11:22:56  25  	  data_table_name => '&bldtable',
11:22:56  26  	  xform_view_name => 'xformed_build_miss_cat');
11:22:56  27  
11:22:56  28  	-- Perform outlier treatment.
11:22:56  29  	-- create clip table
11:22:56  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
11:22:56  31  
11:22:56  32  	-- populate clip table
11:22:56  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
11:22:56  34  	  clip_table_name => 'svmc_clip',
11:22:56  35  	  data_table_name => '&bldtable',
11:22:56  36  	  tail_frac	  => 0.025,
11:22:56  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:22:56  38  
11:22:56  39  	-- xform input data to winsorized data
11:22:56  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
11:22:56  41  	  clip_table_name => 'svmc_clip',
11:22:56  42  	  data_table_name => '&bldtable',
11:22:56  43  	  xform_view_name => 'svmc_winsor');
11:22:56  44  
11:22:56  45  	-- create normalization table
11:22:56  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
11:22:56  47  
11:22:56  48  	-- populate normalization table based on winsorized data
11:22:56  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
11:22:56  50  	  norm_table_name => 'svmc_norm',
11:22:56  51  	  data_table_name => 'svmc_winsor',
11:22:56  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:22:56  53  
11:22:56  54  	-- normalize the original data
11:22:56  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:22:56  56  	  norm_table_name => 'svmc_norm',
11:22:56  57  	  data_table_name => '&bldtable',
11:22:56  58  	  xform_view_name => 'svmc_build_prep');
11:22:56  59  END;
11:22:56  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.69
11:23:14 SQL> 
11:23:14 SQL> ---------------------
11:23:14 SQL> -- CREATE A NEW MODEL
11:23:14 SQL> --
11:23:14 SQL> -- Cleanup old model with the same name for repeat runs
11:23:14 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
11:23:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:23:14   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.03
11:23:15 SQL> 
11:23:15 SQL> -- Build a new SVM Model
11:23:15 SQL> BEGIN
11:23:15   2  	DBMS_DATA_MINING.CREATE_MODEL(
11:23:15   3  	  model_name	      => '&model_name',
11:23:15   4  	  mining_function     => dbms_data_mining.classification,
11:23:15   5  	  data_table_name     => 'svmc_build_prep',
11:23:15   6  	  case_id_column_name => '&case_id',
11:23:15   7  	  target_column_name  => '&target',
11:23:15   8  	  settings_table_name => 'svmc_settings');
11:23:15   9  END;
11:23:15  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.53
11:23:42 SQL> 
11:23:42 SQL> -----------------------------------------------------------------------
11:23:42 SQL> --			       APPLY/score THE MODEL
11:23:42 SQL> -----------------------------------------------------------------------
11:23:42 SQL> 
11:23:42 SQL> -- Cleanup old scoring data preparation objects for repeat runs
11:23:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
11:23:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:23:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
11:23:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
11:23:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:23:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
11:23:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
11:23:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:23:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
11:23:43 SQL> -----------------------
11:23:43 SQL> -- PREPARE SCORING DATA
11:23:43 SQL> --
11:23:43 SQL> -- If the data for model creation has been prepared, then the data
11:23:43 SQL> -- to be scored using the model must be prepared in the same manner
11:23:43 SQL> -- in order to obtain meaningful results.
11:23:43 SQL> --
11:23:43 SQL> -- 1. Missing Value treatment for all Predictors and
11:23:43 SQL> -- 2. Normalization
11:23:43 SQL> -- No outlier treatment will be performed during test and apply. The
11:23:43 SQL> -- normalization step is sufficient, since the normalization parameters
11:23:43 SQL> -- already capture the effects of outlier treatment done with build data.
11:23:43 SQL> --
11:23:43 SQL> BEGIN
11:23:43   2  	-- Xform Test data to replace missing values
11:23:43   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:23:43   4  	  miss_table_name => 'svmc_miss_num',
11:23:43   5  	  data_table_name => '&scoretable',
11:23:43   6  	  xform_view_name => 'xformed_apply_miss_num');
11:23:43   7  
11:23:43   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:23:43   9  	  miss_table_name => 'svmc_miss_cat',
11:23:43  10  	  data_table_name => '&scoretable',
11:23:43  11  	  xform_view_name => 'xformed_apply_miss_cat');
11:23:43  12  
11:23:43  13  	-- Normalize the data to be scored
11:23:43  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:23:43  15  	  norm_table_name => 'svmc_norm',
11:23:43  16  	  data_table_name => '&scoretable',
11:23:43  17  	  xform_view_name => 'svmc_apply_prep');
11:23:43  18  END;
11:23:43  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.16
11:23:44 SQL> 
11:23:44 SQL> -- Use same model_name used in score_gattn.sql
11:23:44 SQL> DEFINE model_name = 'forex15'
11:23:44 SQL> 
11:23:44 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
11:23:44 SQL> 
11:23:44 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
11:23:44   2  SELECT
11:23:44   3  prdate
11:23:44   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
11:23:44   5  ,sysdate
11:23:44   6  ,SUBSTR(prdate,1,3)pair
11:23:44   7  ,SUBSTR(prdate,4,19)ydate
11:23:44   8  FROM svmc_apply_prep
11:23:44   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
11:23:44 SQL> @aud_score1day_gattn.sql	2011-01-04 11:10:00
11:23:44 SQL> --
11:23:44 SQL> -- aud_score1day_gattn.sql
11:23:44 SQL> --
11:23:44 SQL> 
11:23:44 SQL> CREATE OR REPLACE VIEW sme AS
11:23:44   2  SELECT
11:23:44   3  'aud'||m.ydate prdate
11:23:44   4  ,NULL gattn
11:23:44   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:23:44   6  ,eur_g00
11:23:44   7  ,eur_g01
11:23:44   8  ,eur_g02
11:23:44   9  ,eur_g03
11:23:44  10  ,eur_g04
11:23:44  11  ,eur_g05
11:23:44  12  ,eur_g06
11:23:44  13  ,eur_g07
11:23:44  14  ,eur_g08
11:23:44  15  ,eur_g09
11:23:44  16  ,eur_g10
11:23:44  17  ,eur_g11
11:23:44  18  ,eur_g12
11:23:44  19  ,eur_g13
11:23:44  20  ,eur_g14
11:23:44  21  ,eur_g15
11:23:44  22  ,eur_g16
11:23:44  23  ,eur_g17
11:23:44  24  ,eur_g18
11:23:44  25  ,eur_g19
11:23:44  26  ,eur_g20
11:23:44  27  ,eur_g21
11:23:44  28  ,eur_g22
11:23:44  29  ,eur_g23
11:23:44  30  ,eur_g24
11:23:44  31  ,eur_g25
11:23:44  32  ,eur_g26
11:23:44  33  ,eur_g27
11:23:44  34  ,eur_g28
11:23:44  35  ,eur_g29
11:23:44  36  ,eur_g30
11:23:44  37  ,eur_g31
11:23:44  38  ,eur_g32
11:23:44  39  ,eur_g33
11:23:44  40  ,eur_g34
11:23:44  41  ,eur_g35
11:23:44  42  ,eur_g36
11:23:44  43  ,eur_g37
11:23:44  44  ,eur_g38
11:23:44  45  ,eur_g39
11:23:44  46  ,eur_g40
11:23:44  47  ,eur_g41
11:23:44  48  ,aud_g00
11:23:44  49  ,aud_g01
11:23:44  50  ,aud_g02
11:23:44  51  ,aud_g03
11:23:44  52  ,aud_g04
11:23:44  53  ,aud_g05
11:23:44  54  ,aud_g06
11:23:44  55  ,aud_g07
11:23:44  56  ,aud_g08
11:23:44  57  ,aud_g09
11:23:44  58  ,aud_g10
11:23:44  59  ,aud_g11
11:23:44  60  ,aud_g12
11:23:44  61  ,aud_g13
11:23:44  62  ,aud_g14
11:23:44  63  ,aud_g15
11:23:44  64  ,aud_g16
11:23:44  65  ,aud_g17
11:23:44  66  ,aud_g18
11:23:44  67  ,aud_g19
11:23:44  68  ,aud_g20
11:23:44  69  ,aud_g21
11:23:44  70  ,aud_g22
11:23:44  71  ,aud_g23
11:23:44  72  ,aud_g24
11:23:44  73  ,aud_g25
11:23:44  74  ,aud_g26
11:23:44  75  ,aud_g27
11:23:44  76  ,aud_g28
11:23:44  77  ,aud_g29
11:23:44  78  ,aud_g30
11:23:44  79  ,aud_g31
11:23:44  80  ,aud_g32
11:23:44  81  ,aud_g33
11:23:44  82  ,aud_g34
11:23:44  83  ,aud_g35
11:23:44  84  ,aud_g36
11:23:44  85  ,aud_g37
11:23:44  86  ,aud_g38
11:23:44  87  ,aud_g39
11:23:44  88  ,aud_g40
11:23:44  89  ,aud_g41
11:23:44  90  ,gbp_g00
11:23:44  91  ,gbp_g01
11:23:44  92  ,gbp_g02
11:23:44  93  ,gbp_g03
11:23:44  94  ,gbp_g04
11:23:44  95  ,gbp_g05
11:23:44  96  ,gbp_g06
11:23:44  97  ,gbp_g07
11:23:44  98  ,gbp_g08
11:23:44  99  ,gbp_g09
11:23:44 100  ,gbp_g10
11:23:44 101  ,gbp_g11
11:23:44 102  ,gbp_g12
11:23:44 103  ,gbp_g13
11:23:44 104  ,gbp_g14
11:23:44 105  ,gbp_g15
11:23:44 106  ,gbp_g16
11:23:44 107  ,gbp_g17
11:23:44 108  ,gbp_g18
11:23:44 109  ,gbp_g19
11:23:44 110  ,gbp_g20
11:23:44 111  ,gbp_g21
11:23:44 112  ,gbp_g22
11:23:44 113  ,gbp_g23
11:23:44 114  ,gbp_g24
11:23:44 115  ,gbp_g25
11:23:44 116  ,gbp_g26
11:23:44 117  ,gbp_g27
11:23:44 118  ,gbp_g28
11:23:44 119  ,gbp_g29
11:23:44 120  ,gbp_g30
11:23:44 121  ,gbp_g31
11:23:44 122  ,gbp_g32
11:23:44 123  ,gbp_g33
11:23:44 124  ,gbp_g34
11:23:44 125  ,gbp_g35
11:23:44 126  ,gbp_g36
11:23:44 127  ,gbp_g37
11:23:44 128  ,gbp_g38
11:23:44 129  ,gbp_g39
11:23:44 130  ,gbp_g40
11:23:44 131  ,gbp_g41
11:23:44 132  ,jpy_g00
11:23:44 133  ,jpy_g01
11:23:44 134  ,jpy_g02
11:23:44 135  ,jpy_g03
11:23:44 136  ,jpy_g04
11:23:44 137  ,jpy_g05
11:23:44 138  ,jpy_g06
11:23:44 139  ,jpy_g07
11:23:44 140  ,jpy_g08
11:23:44 141  ,jpy_g09
11:23:44 142  ,jpy_g10
11:23:44 143  ,jpy_g11
11:23:44 144  ,jpy_g12
11:23:44 145  ,jpy_g13
11:23:44 146  ,jpy_g14
11:23:44 147  ,jpy_g15
11:23:44 148  ,jpy_g16
11:23:44 149  ,jpy_g17
11:23:44 150  ,jpy_g18
11:23:44 151  ,jpy_g19
11:23:44 152  ,jpy_g20
11:23:44 153  ,jpy_g21
11:23:44 154  ,jpy_g22
11:23:44 155  ,jpy_g23
11:23:44 156  ,jpy_g24
11:23:44 157  ,jpy_g25
11:23:44 158  ,jpy_g26
11:23:44 159  ,jpy_g27
11:23:44 160  ,jpy_g28
11:23:44 161  ,jpy_g29
11:23:44 162  ,jpy_g30
11:23:44 163  ,jpy_g31
11:23:44 164  ,jpy_g32
11:23:44 165  ,jpy_g33
11:23:44 166  ,jpy_g34
11:23:44 167  ,jpy_g35
11:23:44 168  ,jpy_g36
11:23:44 169  ,jpy_g37
11:23:44 170  ,jpy_g38
11:23:44 171  ,jpy_g39
11:23:44 172  ,jpy_g40
11:23:44 173  ,jpy_g41
11:23:44 174  ,cad_g00
11:23:44 175  ,cad_g01
11:23:44 176  ,cad_g02
11:23:44 177  ,cad_g03
11:23:44 178  ,cad_g04
11:23:44 179  ,cad_g05
11:23:44 180  ,cad_g06
11:23:44 181  ,cad_g07
11:23:44 182  ,cad_g08
11:23:44 183  ,cad_g09
11:23:44 184  ,cad_g10
11:23:44 185  ,cad_g11
11:23:44 186  ,cad_g12
11:23:44 187  ,cad_g13
11:23:44 188  ,cad_g14
11:23:44 189  ,cad_g15
11:23:44 190  ,cad_g16
11:23:44 191  ,cad_g17
11:23:44 192  ,cad_g18
11:23:44 193  ,cad_g19
11:23:44 194  ,cad_g20
11:23:44 195  ,cad_g21
11:23:44 196  ,cad_g22
11:23:44 197  ,cad_g23
11:23:44 198  ,cad_g24
11:23:44 199  ,cad_g25
11:23:44 200  ,cad_g26
11:23:44 201  ,cad_g27
11:23:44 202  ,cad_g28
11:23:44 203  ,cad_g29
11:23:44 204  ,cad_g30
11:23:44 205  ,cad_g31
11:23:44 206  ,cad_g32
11:23:44 207  ,cad_g33
11:23:44 208  ,cad_g34
11:23:44 209  ,cad_g35
11:23:44 210  ,cad_g36
11:23:44 211  ,cad_g37
11:23:44 212  ,cad_g38
11:23:44 213  ,cad_g39
11:23:44 214  ,cad_g40
11:23:44 215  ,cad_g41
11:23:44 216  ,chf_g00
11:23:44 217  ,chf_g01
11:23:44 218  ,chf_g02
11:23:44 219  ,chf_g03
11:23:44 220  ,chf_g04
11:23:44 221  ,chf_g05
11:23:44 222  ,chf_g06
11:23:44 223  ,chf_g07
11:23:44 224  ,chf_g08
11:23:44 225  ,chf_g09
11:23:44 226  ,chf_g10
11:23:44 227  ,chf_g11
11:23:44 228  ,chf_g12
11:23:44 229  ,chf_g13
11:23:44 230  ,chf_g14
11:23:44 231  ,chf_g15
11:23:44 232  ,chf_g16
11:23:44 233  ,chf_g17
11:23:44 234  ,chf_g18
11:23:44 235  ,chf_g19
11:23:44 236  ,chf_g20
11:23:44 237  ,chf_g21
11:23:44 238  ,chf_g22
11:23:44 239  ,chf_g23
11:23:44 240  ,chf_g24
11:23:44 241  ,chf_g25
11:23:44 242  ,chf_g26
11:23:44 243  ,chf_g27
11:23:44 244  ,chf_g28
11:23:44 245  ,chf_g29
11:23:44 246  ,chf_g30
11:23:44 247  ,chf_g31
11:23:44 248  ,chf_g32
11:23:44 249  ,chf_g33
11:23:44 250  ,chf_g34
11:23:44 251  ,chf_g35
11:23:44 252  ,chf_g36
11:23:44 253  ,chf_g37
11:23:44 254  ,chf_g38
11:23:44 255  ,chf_g39
11:23:44 256  ,chf_g40
11:23:44 257  ,chf_g41
11:23:44 258  FROM aud_ms6 m
11:23:44 259  WHERE m.ydate = '&1'||' '||'&2'
11:23:44 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-04'||' '||'11:10:00'

View created.

Elapsed: 00:00:00.12
11:23:44 SQL> 
11:23:44 SQL> -- rpt
11:23:44 SQL> -- We should see just 1 row:
11:23:44 SQL> 
11:23:44 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
11:23:44 SQL> 
11:23:44 SQL> -- Build the model:
11:23:44 SQL> CREATE OR REPLACE VIEW bme AS
11:23:44   2  SELECT
11:23:44   3  'aud'||m.ydate prdate
11:23:44   4  ,gattn
11:23:44   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
11:23:44   6  ,eur_g00
11:23:44   7  ,eur_g01
11:23:44   8  ,eur_g02
11:23:44   9  ,eur_g03
11:23:44  10  ,eur_g04
11:23:44  11  ,eur_g05
11:23:44  12  ,eur_g06
11:23:44  13  ,eur_g07
11:23:44  14  ,eur_g08
11:23:44  15  ,eur_g09
11:23:44  16  ,eur_g10
11:23:44  17  ,eur_g11
11:23:44  18  ,eur_g12
11:23:44  19  ,eur_g13
11:23:44  20  ,eur_g14
11:23:44  21  ,eur_g15
11:23:44  22  ,eur_g16
11:23:44  23  ,eur_g17
11:23:44  24  ,eur_g18
11:23:44  25  ,eur_g19
11:23:44  26  ,eur_g20
11:23:44  27  ,eur_g21
11:23:44  28  ,eur_g22
11:23:44  29  ,eur_g23
11:23:44  30  ,eur_g24
11:23:44  31  ,eur_g25
11:23:44  32  ,eur_g26
11:23:44  33  ,eur_g27
11:23:44  34  ,eur_g28
11:23:44  35  ,eur_g29
11:23:44  36  ,eur_g30
11:23:44  37  ,eur_g31
11:23:44  38  ,eur_g32
11:23:44  39  ,eur_g33
11:23:44  40  ,eur_g34
11:23:44  41  ,eur_g35
11:23:44  42  ,eur_g36
11:23:44  43  ,eur_g37
11:23:44  44  ,eur_g38
11:23:44  45  ,eur_g39
11:23:44  46  ,eur_g40
11:23:44  47  ,eur_g41
11:23:44  48  ,aud_g00
11:23:44  49  ,aud_g01
11:23:44  50  ,aud_g02
11:23:44  51  ,aud_g03
11:23:44  52  ,aud_g04
11:23:44  53  ,aud_g05
11:23:44  54  ,aud_g06
11:23:44  55  ,aud_g07
11:23:44  56  ,aud_g08
11:23:44  57  ,aud_g09
11:23:44  58  ,aud_g10
11:23:44  59  ,aud_g11
11:23:44  60  ,aud_g12
11:23:44  61  ,aud_g13
11:23:44  62  ,aud_g14
11:23:44  63  ,aud_g15
11:23:44  64  ,aud_g16
11:23:44  65  ,aud_g17
11:23:44  66  ,aud_g18
11:23:44  67  ,aud_g19
11:23:44  68  ,aud_g20
11:23:44  69  ,aud_g21
11:23:44  70  ,aud_g22
11:23:44  71  ,aud_g23
11:23:44  72  ,aud_g24
11:23:44  73  ,aud_g25
11:23:44  74  ,aud_g26
11:23:44  75  ,aud_g27
11:23:44  76  ,aud_g28
11:23:44  77  ,aud_g29
11:23:44  78  ,aud_g30
11:23:44  79  ,aud_g31
11:23:44  80  ,aud_g32
11:23:44  81  ,aud_g33
11:23:44  82  ,aud_g34
11:23:44  83  ,aud_g35
11:23:44  84  ,aud_g36
11:23:44  85  ,aud_g37
11:23:44  86  ,aud_g38
11:23:44  87  ,aud_g39
11:23:44  88  ,aud_g40
11:23:44  89  ,aud_g41
11:23:44  90  ,gbp_g00
11:23:44  91  ,gbp_g01
11:23:44  92  ,gbp_g02
11:23:44  93  ,gbp_g03
11:23:44  94  ,gbp_g04
11:23:44  95  ,gbp_g05
11:23:44  96  ,gbp_g06
11:23:44  97  ,gbp_g07
11:23:44  98  ,gbp_g08
11:23:44  99  ,gbp_g09
11:23:44 100  ,gbp_g10
11:23:44 101  ,gbp_g11
11:23:44 102  ,gbp_g12
11:23:44 103  ,gbp_g13
11:23:44 104  ,gbp_g14
11:23:44 105  ,gbp_g15
11:23:44 106  ,gbp_g16
11:23:44 107  ,gbp_g17
11:23:44 108  ,gbp_g18
11:23:44 109  ,gbp_g19
11:23:44 110  ,gbp_g20
11:23:44 111  ,gbp_g21
11:23:44 112  ,gbp_g22
11:23:44 113  ,gbp_g23
11:23:44 114  ,gbp_g24
11:23:44 115  ,gbp_g25
11:23:44 116  ,gbp_g26
11:23:44 117  ,gbp_g27
11:23:44 118  ,gbp_g28
11:23:44 119  ,gbp_g29
11:23:44 120  ,gbp_g30
11:23:44 121  ,gbp_g31
11:23:44 122  ,gbp_g32
11:23:44 123  ,gbp_g33
11:23:44 124  ,gbp_g34
11:23:44 125  ,gbp_g35
11:23:44 126  ,gbp_g36
11:23:44 127  ,gbp_g37
11:23:44 128  ,gbp_g38
11:23:44 129  ,gbp_g39
11:23:44 130  ,gbp_g40
11:23:44 131  ,gbp_g41
11:23:44 132  ,jpy_g00
11:23:44 133  ,jpy_g01
11:23:44 134  ,jpy_g02
11:23:44 135  ,jpy_g03
11:23:44 136  ,jpy_g04
11:23:44 137  ,jpy_g05
11:23:44 138  ,jpy_g06
11:23:44 139  ,jpy_g07
11:23:44 140  ,jpy_g08
11:23:44 141  ,jpy_g09
11:23:44 142  ,jpy_g10
11:23:44 143  ,jpy_g11
11:23:44 144  ,jpy_g12
11:23:44 145  ,jpy_g13
11:23:44 146  ,jpy_g14
11:23:44 147  ,jpy_g15
11:23:44 148  ,jpy_g16
11:23:44 149  ,jpy_g17
11:23:44 150  ,jpy_g18
11:23:44 151  ,jpy_g19
11:23:44 152  ,jpy_g20
11:23:44 153  ,jpy_g21
11:23:44 154  ,jpy_g22
11:23:44 155  ,jpy_g23
11:23:44 156  ,jpy_g24
11:23:44 157  ,jpy_g25
11:23:44 158  ,jpy_g26
11:23:44 159  ,jpy_g27
11:23:44 160  ,jpy_g28
11:23:44 161  ,jpy_g29
11:23:44 162  ,jpy_g30
11:23:44 163  ,jpy_g31
11:23:44 164  ,jpy_g32
11:23:44 165  ,jpy_g33
11:23:44 166  ,jpy_g34
11:23:44 167  ,jpy_g35
11:23:44 168  ,jpy_g36
11:23:44 169  ,jpy_g37
11:23:44 170  ,jpy_g38
11:23:44 171  ,jpy_g39
11:23:44 172  ,jpy_g40
11:23:44 173  ,jpy_g41
11:23:44 174  ,cad_g00
11:23:44 175  ,cad_g01
11:23:44 176  ,cad_g02
11:23:44 177  ,cad_g03
11:23:44 178  ,cad_g04
11:23:44 179  ,cad_g05
11:23:44 180  ,cad_g06
11:23:44 181  ,cad_g07
11:23:44 182  ,cad_g08
11:23:44 183  ,cad_g09
11:23:44 184  ,cad_g10
11:23:44 185  ,cad_g11
11:23:44 186  ,cad_g12
11:23:44 187  ,cad_g13
11:23:44 188  ,cad_g14
11:23:44 189  ,cad_g15
11:23:44 190  ,cad_g16
11:23:44 191  ,cad_g17
11:23:44 192  ,cad_g18
11:23:44 193  ,cad_g19
11:23:44 194  ,cad_g20
11:23:44 195  ,cad_g21
11:23:44 196  ,cad_g22
11:23:44 197  ,cad_g23
11:23:44 198  ,cad_g24
11:23:44 199  ,cad_g25
11:23:44 200  ,cad_g26
11:23:44 201  ,cad_g27
11:23:44 202  ,cad_g28
11:23:44 203  ,cad_g29
11:23:44 204  ,cad_g30
11:23:44 205  ,cad_g31
11:23:44 206  ,cad_g32
11:23:44 207  ,cad_g33
11:23:44 208  ,cad_g34
11:23:44 209  ,cad_g35
11:23:44 210  ,cad_g36
11:23:44 211  ,cad_g37
11:23:44 212  ,cad_g38
11:23:44 213  ,cad_g39
11:23:44 214  ,cad_g40
11:23:44 215  ,cad_g41
11:23:44 216  ,chf_g00
11:23:44 217  ,chf_g01
11:23:44 218  ,chf_g02
11:23:44 219  ,chf_g03
11:23:44 220  ,chf_g04
11:23:44 221  ,chf_g05
11:23:44 222  ,chf_g06
11:23:44 223  ,chf_g07
11:23:44 224  ,chf_g08
11:23:44 225  ,chf_g09
11:23:44 226  ,chf_g10
11:23:44 227  ,chf_g11
11:23:44 228  ,chf_g12
11:23:44 229  ,chf_g13
11:23:44 230  ,chf_g14
11:23:44 231  ,chf_g15
11:23:44 232  ,chf_g16
11:23:44 233  ,chf_g17
11:23:44 234  ,chf_g18
11:23:44 235  ,chf_g19
11:23:44 236  ,chf_g20
11:23:44 237  ,chf_g21
11:23:44 238  ,chf_g22
11:23:44 239  ,chf_g23
11:23:44 240  ,chf_g24
11:23:44 241  ,chf_g25
11:23:44 242  ,chf_g26
11:23:44 243  ,chf_g27
11:23:44 244  ,chf_g28
11:23:44 245  ,chf_g29
11:23:44 246  ,chf_g30
11:23:44 247  ,chf_g31
11:23:44 248  ,chf_g32
11:23:44 249  ,chf_g33
11:23:44 250  ,chf_g34
11:23:44 251  ,chf_g35
11:23:44 252  ,chf_g36
11:23:44 253  ,chf_g37
11:23:44 254  ,chf_g38
11:23:44 255  ,chf_g39
11:23:44 256  ,chf_g40
11:23:44 257  ,chf_g41
11:23:44 258  FROM aud_ms6 m
11:23:44 259  WHERE gattn IN('nup','up')
11:23:44 260  AND 1+m.ydate < '&1'||' '||'&2'
11:23:44 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-04'||' '||'11:10:00'

View created.

Elapsed: 00:00:00.13
11:23:44 SQL> 
11:23:44 SQL> -- rpt
11:23:44 SQL> 
11:23:44 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12698
up	     6259

Elapsed: 00:00:00.05
11:23:44 SQL> 
11:23:44 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-03 11:05:00

Elapsed: 00:00:00.03
11:23:44 SQL> 
11:23:44 SQL> -- Now build model from bme and score sme
11:23:44 SQL> @score1gattn.sql
11:23:44 SQL> -- score1gattn.sql
11:23:44 SQL> 
11:23:44 SQL> -- Does the 1st SVM score
11:23:44 SQL> 
11:23:44 SQL> -- Fill up svmc_apply_prep
11:23:44 SQL> @score_gattn.sql
11:23:44 SQL> --
11:23:44 SQL> -- score_gattn.sql
11:23:44 SQL> --
11:23:44 SQL> 
11:23:44 SQL> -- usage: score_gattn.sql
11:23:44 SQL> 
11:23:44 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
11:23:44 SQL> 
11:23:44 SQL> DEFINE target	= 'gattn'
11:23:44 SQL> DEFINE model_name = 'forex15'
11:23:44 SQL> DEFINE bldtable	= 'bme'
11:23:44 SQL> DEFINE scoretable = 'sme'
11:23:44 SQL> DEFINE case_id	= 'prdate'
11:23:44 SQL> 
11:23:44 SQL> -- Define a variable to help me exclude some columns from some data mining calls
11:23:44 SQL> DEFINE exclude1 = "'&target','&case_id'"
11:23:44 SQL> 
11:23:44 SQL> -- Builds an SVM model using pl/sql.
11:23:44 SQL> 
11:23:44 SQL> -----------------------------------------------------------------------
11:23:44 SQL> --			    BUILD THE MODEL
11:23:44 SQL> -----------------------------------------------------------------------
11:23:44 SQL> 
11:23:44 SQL> -- Cleanup old build data preparation objects for repeat runs
11:23:44 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
11:23:44 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
11:23:44 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
11:23:44 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
11:23:44 SQL> 
11:23:44 SQL> 
11:23:44 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
11:23:44 SQL> --
11:23:44 SQL> -- DROP	TABLE svmc_settings ;
11:23:44 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
11:23:44 SQL> -- DELETE svmc_settings;
11:23:44 SQL> 
11:23:44 SQL> -- The default classification algorithm is Naive Bayes. So override
11:23:44 SQL> -- this choice to SVM using a settings table.
11:23:44 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
11:23:44 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
11:23:44 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
11:23:44 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
11:23:44 SQL> -- models.
11:23:44 SQL> --
11:23:44 SQL> 
11:23:44 SQL> -- Do this once and then comment it out.
11:23:44 SQL> -- That makes script go faster.
11:23:44 SQL> -- BEGIN
11:23:44 SQL> -- -- Populate settings table
11:23:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:23:44 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
11:23:44 SQL> --
11:23:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:23:44 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
11:23:44 SQL> --
11:23:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
11:23:44 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
11:23:44 SQL> --   COMMIT;
11:23:44 SQL> -- END;
11:23:44 SQL> -- /
11:23:44 SQL> 
11:23:44 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
11:23:44 SQL> 
11:23:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
11:23:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:23:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:23:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
11:23:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:23:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:23:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
11:23:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:23:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
11:23:44 SQL> 
11:23:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
11:23:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:23:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
11:23:45 SQL> 
11:23:45 SQL> --------------------------------
11:23:45 SQL> -- PREPARE BUILD (TRAINING) DATA
11:23:45 SQL> --
11:23:45 SQL> 
11:23:45 SQL> -- 1. Missing Value treatment for all Predictors and
11:23:45 SQL> -- 2. Outlier Treatment and
11:23:45 SQL> -- 3. Normalization are performed below.
11:23:45 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
11:23:45 SQL> --    normalized here.
11:23:45 SQL> 
11:23:45 SQL> BEGIN
11:23:45   2  	-- Perform missing value treatment for all predictors
11:23:45   3  	-- create miss tables
11:23:45   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
11:23:45   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
11:23:45   6  
11:23:45   7  	-- populate miss tables
11:23:45   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
11:23:45   9  	  miss_table_name => 'svmc_miss_num',
11:23:45  10  	  data_table_name => '&bldtable',
11:23:45  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:23:45  12  
11:23:45  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
11:23:45  14  	  miss_table_name => 'svmc_miss_cat',
11:23:45  15  	  data_table_name => '&bldtable',
11:23:45  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:23:45  17  
11:23:45  18  	-- xform input data to replace missing values
11:23:45  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:23:45  20  	  miss_table_name => 'svmc_miss_num',
11:23:45  21  	  data_table_name => '&bldtable',
11:23:45  22  	  xform_view_name => 'xformed_build_miss_num');
11:23:45  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:23:45  24  	  miss_table_name => 'svmc_miss_cat',
11:23:45  25  	  data_table_name => '&bldtable',
11:23:45  26  	  xform_view_name => 'xformed_build_miss_cat');
11:23:45  27  
11:23:45  28  	-- Perform outlier treatment.
11:23:45  29  	-- create clip table
11:23:45  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
11:23:45  31  
11:23:45  32  	-- populate clip table
11:23:45  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
11:23:45  34  	  clip_table_name => 'svmc_clip',
11:23:45  35  	  data_table_name => '&bldtable',
11:23:45  36  	  tail_frac	  => 0.025,
11:23:45  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:23:45  38  
11:23:45  39  	-- xform input data to winsorized data
11:23:45  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
11:23:45  41  	  clip_table_name => 'svmc_clip',
11:23:45  42  	  data_table_name => '&bldtable',
11:23:45  43  	  xform_view_name => 'svmc_winsor');
11:23:45  44  
11:23:45  45  	-- create normalization table
11:23:45  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
11:23:45  47  
11:23:45  48  	-- populate normalization table based on winsorized data
11:23:45  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
11:23:45  50  	  norm_table_name => 'svmc_norm',
11:23:45  51  	  data_table_name => 'svmc_winsor',
11:23:45  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
11:23:45  53  
11:23:45  54  	-- normalize the original data
11:23:45  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:23:45  56  	  norm_table_name => 'svmc_norm',
11:23:45  57  	  data_table_name => '&bldtable',
11:23:45  58  	  xform_view_name => 'svmc_build_prep');
11:23:45  59  END;
11:23:45  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.01
11:24:03 SQL> 
11:24:03 SQL> ---------------------
11:24:03 SQL> -- CREATE A NEW MODEL
11:24:03 SQL> --
11:24:03 SQL> -- Cleanup old model with the same name for repeat runs
11:24:03 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
11:24:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:24:03   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.89
11:24:03 SQL> 
11:24:03 SQL> -- Build a new SVM Model
11:24:03 SQL> BEGIN
11:24:03   2  	DBMS_DATA_MINING.CREATE_MODEL(
11:24:03   3  	  model_name	      => '&model_name',
11:24:03   4  	  mining_function     => dbms_data_mining.classification,
11:24:03   5  	  data_table_name     => 'svmc_build_prep',
11:24:03   6  	  case_id_column_name => '&case_id',
11:24:03   7  	  target_column_name  => '&target',
11:24:03   8  	  settings_table_name => 'svmc_settings');
11:24:03   9  END;
11:24:03  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.83
11:24:30 SQL> 
11:24:30 SQL> -----------------------------------------------------------------------
11:24:30 SQL> --			       APPLY/score THE MODEL
11:24:30 SQL> -----------------------------------------------------------------------
11:24:30 SQL> 
11:24:30 SQL> -- Cleanup old scoring data preparation objects for repeat runs
11:24:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
11:24:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:24:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
11:24:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
11:24:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:24:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
11:24:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
11:24:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
11:24:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
11:24:30 SQL> -----------------------
11:24:30 SQL> -- PREPARE SCORING DATA
11:24:30 SQL> --
11:24:30 SQL> -- If the data for model creation has been prepared, then the data
11:24:30 SQL> -- to be scored using the model must be prepared in the same manner
11:24:30 SQL> -- in order to obtain meaningful results.
11:24:30 SQL> --
11:24:30 SQL> -- 1. Missing Value treatment for all Predictors and
11:24:30 SQL> -- 2. Normalization
11:24:30 SQL> -- No outlier treatment will be performed during test and apply. The
11:24:30 SQL> -- normalization step is sufficient, since the normalization parameters
11:24:30 SQL> -- already capture the effects of outlier treatment done with build data.
11:24:30 SQL> --
11:24:30 SQL> BEGIN
11:24:30   2  	-- Xform Test data to replace missing values
11:24:30   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
11:24:30   4  	  miss_table_name => 'svmc_miss_num',
11:24:30   5  	  data_table_name => '&scoretable',
11:24:30   6  	  xform_view_name => 'xformed_apply_miss_num');
11:24:30   7  
11:24:30   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
11:24:30   9  	  miss_table_name => 'svmc_miss_cat',
11:24:30  10  	  data_table_name => '&scoretable',
11:24:30  11  	  xform_view_name => 'xformed_apply_miss_cat');
11:24:30  12  
11:24:30  13  	-- Normalize the data to be scored
11:24:30  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
11:24:30  15  	  norm_table_name => 'svmc_norm',
11:24:30  16  	  data_table_name => '&scoretable',
11:24:30  17  	  xform_view_name => 'svmc_apply_prep');
11:24:30  18  END;
11:24:30  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
11:24:32 SQL> 
11:24:32 SQL> -- Use same model_name used in score_gattn.sql
11:24:32 SQL> DEFINE model_name = 'forex15'
11:24:32 SQL> 
11:24:32 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
11:24:32 SQL> 
11:24:32 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
11:24:32   2  SELECT
11:24:32   3  prdate
11:24:32   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
11:24:32   5  ,sysdate
11:24:32   6  ,SUBSTR(prdate,1,3)pair
11:24:32   7  ,SUBSTR(prdate,4,19)ydate
11:24:32   8  FROM svmc_apply_prep
11:24:32   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
11:24:32 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
