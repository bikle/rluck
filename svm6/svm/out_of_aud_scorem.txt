
SQL*Plus: Release 11.2.0.1.0 Production on Mon Jan 3 03:20:34 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

03:20:34 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
03:20:34 SQL> 03:20:34 SQL> @aud_score1day.sql  2011-01-03 03:00:00
03:20:34 SQL> --
03:20:34 SQL> -- aud_score1day.sql
03:20:34 SQL> --
03:20:34 SQL> 
03:20:34 SQL> CREATE OR REPLACE VIEW sme AS
03:20:34   2  SELECT
03:20:34   3  'aud'||m.ydate prdate
03:20:34   4  ,NULL gatt
03:20:34   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
03:20:34   6  ,eur_g00
03:20:34   7  ,eur_g01
03:20:34   8  ,eur_g02
03:20:34   9  ,eur_g03
03:20:34  10  ,eur_g04
03:20:34  11  ,eur_g05
03:20:34  12  ,eur_g06
03:20:34  13  ,eur_g07
03:20:34  14  ,eur_g08
03:20:34  15  ,eur_g09
03:20:34  16  ,eur_g10
03:20:34  17  ,eur_g11
03:20:34  18  ,eur_g12
03:20:34  19  ,eur_g13
03:20:34  20  ,eur_g14
03:20:34  21  ,eur_g15
03:20:34  22  ,eur_g16
03:20:34  23  ,eur_g17
03:20:34  24  ,eur_g18
03:20:34  25  ,eur_g19
03:20:34  26  ,eur_g20
03:20:34  27  ,eur_g21
03:20:34  28  ,eur_g22
03:20:34  29  ,eur_g23
03:20:34  30  ,eur_g24
03:20:34  31  ,eur_g25
03:20:34  32  ,eur_g26
03:20:34  33  ,eur_g27
03:20:34  34  ,eur_g28
03:20:34  35  ,eur_g29
03:20:34  36  ,eur_g30
03:20:34  37  ,eur_g31
03:20:34  38  ,eur_g32
03:20:34  39  ,eur_g33
03:20:34  40  ,eur_g34
03:20:34  41  ,eur_g35
03:20:34  42  ,eur_g36
03:20:34  43  ,eur_g37
03:20:34  44  ,eur_g38
03:20:34  45  ,eur_g39
03:20:34  46  ,eur_g40
03:20:34  47  ,eur_g41
03:20:34  48  ,aud_g00
03:20:34  49  ,aud_g01
03:20:34  50  ,aud_g02
03:20:34  51  ,aud_g03
03:20:34  52  ,aud_g04
03:20:34  53  ,aud_g05
03:20:34  54  ,aud_g06
03:20:34  55  ,aud_g07
03:20:34  56  ,aud_g08
03:20:34  57  ,aud_g09
03:20:34  58  ,aud_g10
03:20:34  59  ,aud_g11
03:20:34  60  ,aud_g12
03:20:34  61  ,aud_g13
03:20:34  62  ,aud_g14
03:20:34  63  ,aud_g15
03:20:34  64  ,aud_g16
03:20:34  65  ,aud_g17
03:20:34  66  ,aud_g18
03:20:34  67  ,aud_g19
03:20:34  68  ,aud_g20
03:20:34  69  ,aud_g21
03:20:34  70  ,aud_g22
03:20:34  71  ,aud_g23
03:20:34  72  ,aud_g24
03:20:34  73  ,aud_g25
03:20:34  74  ,aud_g26
03:20:34  75  ,aud_g27
03:20:34  76  ,aud_g28
03:20:34  77  ,aud_g29
03:20:34  78  ,aud_g30
03:20:34  79  ,aud_g31
03:20:34  80  ,aud_g32
03:20:34  81  ,aud_g33
03:20:34  82  ,aud_g34
03:20:34  83  ,aud_g35
03:20:34  84  ,aud_g36
03:20:34  85  ,aud_g37
03:20:34  86  ,aud_g38
03:20:34  87  ,aud_g39
03:20:34  88  ,aud_g40
03:20:34  89  ,aud_g41
03:20:34  90  ,gbp_g00
03:20:34  91  ,gbp_g01
03:20:34  92  ,gbp_g02
03:20:34  93  ,gbp_g03
03:20:34  94  ,gbp_g04
03:20:34  95  ,gbp_g05
03:20:34  96  ,gbp_g06
03:20:34  97  ,gbp_g07
03:20:34  98  ,gbp_g08
03:20:34  99  ,gbp_g09
03:20:34 100  ,gbp_g10
03:20:34 101  ,gbp_g11
03:20:34 102  ,gbp_g12
03:20:34 103  ,gbp_g13
03:20:34 104  ,gbp_g14
03:20:34 105  ,gbp_g15
03:20:34 106  ,gbp_g16
03:20:34 107  ,gbp_g17
03:20:34 108  ,gbp_g18
03:20:34 109  ,gbp_g19
03:20:34 110  ,gbp_g20
03:20:34 111  ,gbp_g21
03:20:34 112  ,gbp_g22
03:20:34 113  ,gbp_g23
03:20:34 114  ,gbp_g24
03:20:34 115  ,gbp_g25
03:20:34 116  ,gbp_g26
03:20:34 117  ,gbp_g27
03:20:34 118  ,gbp_g28
03:20:34 119  ,gbp_g29
03:20:34 120  ,gbp_g30
03:20:34 121  ,gbp_g31
03:20:34 122  ,gbp_g32
03:20:34 123  ,gbp_g33
03:20:34 124  ,gbp_g34
03:20:34 125  ,gbp_g35
03:20:34 126  ,gbp_g36
03:20:34 127  ,gbp_g37
03:20:34 128  ,gbp_g38
03:20:34 129  ,gbp_g39
03:20:34 130  ,gbp_g40
03:20:34 131  ,gbp_g41
03:20:34 132  ,jpy_g00
03:20:34 133  ,jpy_g01
03:20:34 134  ,jpy_g02
03:20:34 135  ,jpy_g03
03:20:34 136  ,jpy_g04
03:20:34 137  ,jpy_g05
03:20:34 138  ,jpy_g06
03:20:34 139  ,jpy_g07
03:20:34 140  ,jpy_g08
03:20:34 141  ,jpy_g09
03:20:34 142  ,jpy_g10
03:20:34 143  ,jpy_g11
03:20:34 144  ,jpy_g12
03:20:34 145  ,jpy_g13
03:20:34 146  ,jpy_g14
03:20:34 147  ,jpy_g15
03:20:34 148  ,jpy_g16
03:20:34 149  ,jpy_g17
03:20:34 150  ,jpy_g18
03:20:34 151  ,jpy_g19
03:20:34 152  ,jpy_g20
03:20:34 153  ,jpy_g21
03:20:34 154  ,jpy_g22
03:20:34 155  ,jpy_g23
03:20:34 156  ,jpy_g24
03:20:34 157  ,jpy_g25
03:20:34 158  ,jpy_g26
03:20:34 159  ,jpy_g27
03:20:34 160  ,jpy_g28
03:20:34 161  ,jpy_g29
03:20:34 162  ,jpy_g30
03:20:34 163  ,jpy_g31
03:20:34 164  ,jpy_g32
03:20:34 165  ,jpy_g33
03:20:34 166  ,jpy_g34
03:20:34 167  ,jpy_g35
03:20:34 168  ,jpy_g36
03:20:34 169  ,jpy_g37
03:20:34 170  ,jpy_g38
03:20:34 171  ,jpy_g39
03:20:34 172  ,jpy_g40
03:20:34 173  ,jpy_g41
03:20:34 174  ,cad_g00
03:20:34 175  ,cad_g01
03:20:34 176  ,cad_g02
03:20:34 177  ,cad_g03
03:20:34 178  ,cad_g04
03:20:34 179  ,cad_g05
03:20:34 180  ,cad_g06
03:20:34 181  ,cad_g07
03:20:34 182  ,cad_g08
03:20:34 183  ,cad_g09
03:20:34 184  ,cad_g10
03:20:34 185  ,cad_g11
03:20:34 186  ,cad_g12
03:20:34 187  ,cad_g13
03:20:34 188  ,cad_g14
03:20:34 189  ,cad_g15
03:20:34 190  ,cad_g16
03:20:34 191  ,cad_g17
03:20:34 192  ,cad_g18
03:20:34 193  ,cad_g19
03:20:34 194  ,cad_g20
03:20:34 195  ,cad_g21
03:20:34 196  ,cad_g22
03:20:34 197  ,cad_g23
03:20:34 198  ,cad_g24
03:20:34 199  ,cad_g25
03:20:34 200  ,cad_g26
03:20:34 201  ,cad_g27
03:20:34 202  ,cad_g28
03:20:34 203  ,cad_g29
03:20:34 204  ,cad_g30
03:20:34 205  ,cad_g31
03:20:34 206  ,cad_g32
03:20:34 207  ,cad_g33
03:20:34 208  ,cad_g34
03:20:34 209  ,cad_g35
03:20:34 210  ,cad_g36
03:20:34 211  ,cad_g37
03:20:34 212  ,cad_g38
03:20:34 213  ,cad_g39
03:20:34 214  ,cad_g40
03:20:34 215  ,cad_g41
03:20:34 216  ,chf_g00
03:20:34 217  ,chf_g01
03:20:34 218  ,chf_g02
03:20:34 219  ,chf_g03
03:20:34 220  ,chf_g04
03:20:34 221  ,chf_g05
03:20:34 222  ,chf_g06
03:20:34 223  ,chf_g07
03:20:34 224  ,chf_g08
03:20:34 225  ,chf_g09
03:20:34 226  ,chf_g10
03:20:34 227  ,chf_g11
03:20:34 228  ,chf_g12
03:20:34 229  ,chf_g13
03:20:34 230  ,chf_g14
03:20:34 231  ,chf_g15
03:20:34 232  ,chf_g16
03:20:34 233  ,chf_g17
03:20:34 234  ,chf_g18
03:20:34 235  ,chf_g19
03:20:34 236  ,chf_g20
03:20:34 237  ,chf_g21
03:20:34 238  ,chf_g22
03:20:34 239  ,chf_g23
03:20:34 240  ,chf_g24
03:20:34 241  ,chf_g25
03:20:34 242  ,chf_g26
03:20:34 243  ,chf_g27
03:20:34 244  ,chf_g28
03:20:34 245  ,chf_g29
03:20:34 246  ,chf_g30
03:20:34 247  ,chf_g31
03:20:34 248  ,chf_g32
03:20:34 249  ,chf_g33
03:20:34 250  ,chf_g34
03:20:34 251  ,chf_g35
03:20:34 252  ,chf_g36
03:20:34 253  ,chf_g37
03:20:34 254  ,chf_g38
03:20:34 255  ,chf_g39
03:20:34 256  ,chf_g40
03:20:34 257  ,chf_g41
03:20:34 258  FROM aud_ms6 m
03:20:34 259  WHERE m.ydate = '&1'||' '||'&2'
03:20:34 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'03:00:00'

View created.

Elapsed: 00:00:00.12
03:20:34 SQL> 
03:20:34 SQL> -- rpt
03:20:34 SQL> -- We should see just 1 row:
03:20:34 SQL> 
03:20:34 SQL> SELECT COUNT(prdate) FROM sme
03:20:34   2  
03:20:34 SQL> -- Build the model:
03:20:34 SQL> CREATE OR REPLACE VIEW bme AS
03:20:34   2  SELECT
03:20:34   3  'aud'||m.ydate prdate
03:20:34   4  ,gatt
03:20:34   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
03:20:34   6  ,eur_g00
03:20:34   7  ,eur_g01
03:20:34   8  ,eur_g02
03:20:34   9  ,eur_g03
03:20:34  10  ,eur_g04
03:20:34  11  ,eur_g05
03:20:34  12  ,eur_g06
03:20:34  13  ,eur_g07
03:20:34  14  ,eur_g08
03:20:34  15  ,eur_g09
03:20:34  16  ,eur_g10
03:20:34  17  ,eur_g11
03:20:34  18  ,eur_g12
03:20:34  19  ,eur_g13
03:20:34  20  ,eur_g14
03:20:34  21  ,eur_g15
03:20:34  22  ,eur_g16
03:20:34  23  ,eur_g17
03:20:34  24  ,eur_g18
03:20:34  25  ,eur_g19
03:20:34  26  ,eur_g20
03:20:34  27  ,eur_g21
03:20:34  28  ,eur_g22
03:20:34  29  ,eur_g23
03:20:34  30  ,eur_g24
03:20:34  31  ,eur_g25
03:20:34  32  ,eur_g26
03:20:34  33  ,eur_g27
03:20:34  34  ,eur_g28
03:20:34  35  ,eur_g29
03:20:34  36  ,eur_g30
03:20:34  37  ,eur_g31
03:20:34  38  ,eur_g32
03:20:34  39  ,eur_g33
03:20:34  40  ,eur_g34
03:20:34  41  ,eur_g35
03:20:34  42  ,eur_g36
03:20:34  43  ,eur_g37
03:20:34  44  ,eur_g38
03:20:34  45  ,eur_g39
03:20:34  46  ,eur_g40
03:20:34  47  ,eur_g41
03:20:34  48  ,aud_g00
03:20:34  49  ,aud_g01
03:20:34  50  ,aud_g02
03:20:34  51  ,aud_g03
03:20:34  52  ,aud_g04
03:20:34  53  ,aud_g05
03:20:34  54  ,aud_g06
03:20:34  55  ,aud_g07
03:20:34  56  ,aud_g08
03:20:34  57  ,aud_g09
03:20:34  58  ,aud_g10
03:20:34  59  ,aud_g11
03:20:34  60  ,aud_g12
03:20:34  61  ,aud_g13
03:20:34  62  ,aud_g14
03:20:34  63  ,aud_g15
03:20:34  64  ,aud_g16
03:20:34  65  ,aud_g17
03:20:34  66  ,aud_g18
03:20:34  67  ,aud_g19
03:20:34  68  ,aud_g20
03:20:34  69  ,aud_g21
03:20:34  70  ,aud_g22
03:20:34  71  ,aud_g23
03:20:34  72  ,aud_g24
03:20:34  73  ,aud_g25
03:20:34  74  ,aud_g26
03:20:34  75  ,aud_g27
03:20:34  76  ,aud_g28
03:20:34  77  ,aud_g29
03:20:34  78  ,aud_g30
03:20:34  79  ,aud_g31
03:20:34  80  ,aud_g32
03:20:34  81  ,aud_g33
03:20:34  82  ,aud_g34
03:20:34  83  ,aud_g35
03:20:34  84  ,aud_g36
03:20:34  85  ,aud_g37
03:20:34  86  ,aud_g38
03:20:34  87  ,aud_g39
03:20:34  88  ,aud_g40
03:20:34  89  ,aud_g41
03:20:34  90  ,gbp_g00
03:20:34  91  ,gbp_g01
03:20:34  92  ,gbp_g02
03:20:34  93  ,gbp_g03
03:20:34  94  ,gbp_g04
03:20:34  95  ,gbp_g05
03:20:34  96  ,gbp_g06
03:20:34  97  ,gbp_g07
03:20:34  98  ,gbp_g08
03:20:34  99  ,gbp_g09
03:20:34 100  ,gbp_g10
03:20:34 101  ,gbp_g11
03:20:34 102  ,gbp_g12
03:20:34 103  ,gbp_g13
03:20:34 104  ,gbp_g14
03:20:34 105  ,gbp_g15
03:20:34 106  ,gbp_g16
03:20:34 107  ,gbp_g17
03:20:34 108  ,gbp_g18
03:20:34 109  ,gbp_g19
03:20:34 110  ,gbp_g20
03:20:34 111  ,gbp_g21
03:20:34 112  ,gbp_g22
03:20:34 113  ,gbp_g23
03:20:34 114  ,gbp_g24
03:20:34 115  ,gbp_g25
03:20:34 116  ,gbp_g26
03:20:34 117  ,gbp_g27
03:20:34 118  ,gbp_g28
03:20:34 119  ,gbp_g29
03:20:34 120  ,gbp_g30
03:20:34 121  ,gbp_g31
03:20:34 122  ,gbp_g32
03:20:34 123  ,gbp_g33
03:20:34 124  ,gbp_g34
03:20:34 125  ,gbp_g35
03:20:34 126  ,gbp_g36
03:20:34 127  ,gbp_g37
03:20:34 128  ,gbp_g38
03:20:34 129  ,gbp_g39
03:20:34 130  ,gbp_g40
03:20:34 131  ,gbp_g41
03:20:34 132  ,jpy_g00
03:20:34 133  ,jpy_g01
03:20:34 134  ,jpy_g02
03:20:34 135  ,jpy_g03
03:20:34 136  ,jpy_g04
03:20:34 137  ,jpy_g05
03:20:34 138  ,jpy_g06
03:20:34 139  ,jpy_g07
03:20:34 140  ,jpy_g08
03:20:34 141  ,jpy_g09
03:20:34 142  ,jpy_g10
03:20:34 143  ,jpy_g11
03:20:34 144  ,jpy_g12
03:20:34 145  ,jpy_g13
03:20:34 146  ,jpy_g14
03:20:34 147  ,jpy_g15
03:20:34 148  ,jpy_g16
03:20:34 149  ,jpy_g17
03:20:34 150  ,jpy_g18
03:20:34 151  ,jpy_g19
03:20:34 152  ,jpy_g20
03:20:34 153  ,jpy_g21
03:20:34 154  ,jpy_g22
03:20:34 155  ,jpy_g23
03:20:34 156  ,jpy_g24
03:20:34 157  ,jpy_g25
03:20:34 158  ,jpy_g26
03:20:34 159  ,jpy_g27
03:20:34 160  ,jpy_g28
03:20:34 161  ,jpy_g29
03:20:34 162  ,jpy_g30
03:20:34 163  ,jpy_g31
03:20:34 164  ,jpy_g32
03:20:34 165  ,jpy_g33
03:20:34 166  ,jpy_g34
03:20:34 167  ,jpy_g35
03:20:34 168  ,jpy_g36
03:20:34 169  ,jpy_g37
03:20:34 170  ,jpy_g38
03:20:34 171  ,jpy_g39
03:20:34 172  ,jpy_g40
03:20:34 173  ,jpy_g41
03:20:34 174  ,cad_g00
03:20:34 175  ,cad_g01
03:20:34 176  ,cad_g02
03:20:34 177  ,cad_g03
03:20:34 178  ,cad_g04
03:20:34 179  ,cad_g05
03:20:34 180  ,cad_g06
03:20:34 181  ,cad_g07
03:20:34 182  ,cad_g08
03:20:34 183  ,cad_g09
03:20:34 184  ,cad_g10
03:20:34 185  ,cad_g11
03:20:34 186  ,cad_g12
03:20:34 187  ,cad_g13
03:20:34 188  ,cad_g14
03:20:34 189  ,cad_g15
03:20:34 190  ,cad_g16
03:20:34 191  ,cad_g17
03:20:34 192  ,cad_g18
03:20:34 193  ,cad_g19
03:20:34 194  ,cad_g20
03:20:34 195  ,cad_g21
03:20:34 196  ,cad_g22
03:20:34 197  ,cad_g23
03:20:34 198  ,cad_g24
03:20:34 199  ,cad_g25
03:20:34 200  ,cad_g26
03:20:34 201  ,cad_g27
03:20:34 202  ,cad_g28
03:20:34 203  ,cad_g29
03:20:34 204  ,cad_g30
03:20:34 205  ,cad_g31
03:20:34 206  ,cad_g32
03:20:34 207  ,cad_g33
03:20:34 208  ,cad_g34
03:20:34 209  ,cad_g35
03:20:34 210  ,cad_g36
03:20:34 211  ,cad_g37
03:20:34 212  ,cad_g38
03:20:34 213  ,cad_g39
03:20:34 214  ,cad_g40
03:20:34 215  ,cad_g41
03:20:34 216  ,chf_g00
03:20:34 217  ,chf_g01
03:20:34 218  ,chf_g02
03:20:34 219  ,chf_g03
03:20:34 220  ,chf_g04
03:20:34 221  ,chf_g05
03:20:34 222  ,chf_g06
03:20:34 223  ,chf_g07
03:20:34 224  ,chf_g08
03:20:34 225  ,chf_g09
03:20:34 226  ,chf_g10
03:20:34 227  ,chf_g11
03:20:34 228  ,chf_g12
03:20:34 229  ,chf_g13
03:20:34 230  ,chf_g14
03:20:34 231  ,chf_g15
03:20:34 232  ,chf_g16
03:20:34 233  ,chf_g17
03:20:34 234  ,chf_g18
03:20:34 235  ,chf_g19
03:20:34 236  ,chf_g20
03:20:34 237  ,chf_g21
03:20:34 238  ,chf_g22
03:20:34 239  ,chf_g23
03:20:34 240  ,chf_g24
03:20:34 241  ,chf_g25
03:20:34 242  ,chf_g26
03:20:34 243  ,chf_g27
03:20:34 244  ,chf_g28
03:20:34 245  ,chf_g29
03:20:34 246  ,chf_g30
03:20:34 247  ,chf_g31
03:20:34 248  ,chf_g32
03:20:34 249  ,chf_g33
03:20:34 250  ,chf_g34
03:20:34 251  ,chf_g35
03:20:34 252  ,chf_g36
03:20:34 253  ,chf_g37
03:20:34 254  ,chf_g38
03:20:34 255  ,chf_g39
03:20:34 256  ,chf_g40
03:20:34 257  ,chf_g41
03:20:34 258  FROM aud_ms6 m
03:20:34 259  WHERE gatt IN('nup','up')
03:20:34 260  AND 1+m.ydate < '&1'||' '||'&2'
03:20:34 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'03:00:00'

View created.

Elapsed: 00:00:00.13
03:20:34 SQL> 
03:20:34 SQL> -- rpt
03:20:34 SQL> 
03:20:34 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
03:20:34   2  
03:20:34 SQL> SELECT MAX(prdate) FROM bme
03:20:34   2  
03:20:34 SQL> -- Now build model from bme and score sme
03:20:34 SQL> @score1.sql
03:20:34 SQL> -- score1.sql
03:20:34 SQL> 
03:20:34 SQL> -- Does the 1st SVM score
03:20:34 SQL> 
03:20:34 SQL> -- Fill up svmc_apply_prep
03:20:34 SQL> @score.sql
03:20:34 SQL> --
03:20:34 SQL> -- score.sql
03:20:34 SQL> --
03:20:34 SQL> 
03:20:34 SQL> -- usage: score.sql
03:20:34 SQL> 
03:20:34 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
03:20:34 SQL> 
03:20:34 SQL> DEFINE target	= 'gatt'
03:20:34 SQL> DEFINE model_name = 'forex14'
03:20:34 SQL> DEFINE bldtable	= 'bme'
03:20:34 SQL> DEFINE scoretable = 'sme'
03:20:34 SQL> DEFINE case_id	= 'prdate'
03:20:34 SQL> 
03:20:34 SQL> -- Define a variable to help me exclude some columns from some data mining calls
03:20:34 SQL> DEFINE exclude1 = "'&target','&case_id'"
03:20:34 SQL> 
03:20:34 SQL> -- Builds an SVM model using pl/sql.
03:20:34 SQL> 
03:20:34 SQL> -----------------------------------------------------------------------
03:20:34 SQL> --			    BUILD THE MODEL
03:20:34 SQL> -----------------------------------------------------------------------
03:20:34 SQL> 
03:20:34 SQL> -- Cleanup old build data preparation objects for repeat runs
03:20:34 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
03:20:34 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
03:20:34 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
03:20:34 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
03:20:34 SQL> 
03:20:34 SQL> 
03:20:34 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
03:20:34 SQL> --
03:20:34 SQL> -- DROP	TABLE svmc_settings ;
03:20:34 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
03:20:34 SQL> -- DELETE svmc_settings;
03:20:34 SQL> 
03:20:34 SQL> -- The default classification algorithm is Naive Bayes. So override
03:20:34 SQL> -- this choice to SVM using a settings table.
03:20:34 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
03:20:34 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
03:20:34 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
03:20:34 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
03:20:34 SQL> -- models.
03:20:34 SQL> --
03:20:34 SQL> 
03:20:34 SQL> -- Do this once and then comment it out.
03:20:34 SQL> -- That makes script go faster.
03:20:34 SQL> -- BEGIN
03:20:34 SQL> -- -- Populate settings table
03:20:34 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
03:20:34 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
03:20:34 SQL> --
03:20:34 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
03:20:34 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
03:20:34 SQL> --
03:20:34 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
03:20:34 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
03:20:34 SQL> --   COMMIT;
03:20:34 SQL> -- END;
03:20:34 SQL> -- /
03:20:34 SQL> 
03:20:34 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
03:20:34 SQL> 
03:20:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
03:20:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:20:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
03:20:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
03:20:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:20:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
03:20:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
03:20:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:20:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
03:20:35 SQL> 
03:20:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
03:20:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:20:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
03:20:35 SQL> 
03:20:35 SQL> --------------------------------
03:20:35 SQL> -- PREPARE BUILD (TRAINING) DATA
03:20:35 SQL> --
03:20:35 SQL> 
03:20:35 SQL> -- 1. Missing Value treatment for all Predictors and
03:20:35 SQL> -- 2. Outlier Treatment and
03:20:35 SQL> -- 3. Normalization are performed below.
03:20:35 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
03:20:35 SQL> --    normalized here.
03:20:35 SQL> 
03:20:35 SQL> BEGIN
03:20:35   2  	-- Perform missing value treatment for all predictors
03:20:35   3  	-- create miss tables
03:20:35   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
03:20:35   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
03:20:35   6  
03:20:35   7  	-- populate miss tables
03:20:35   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
03:20:35   9  	  miss_table_name => 'svmc_miss_num',
03:20:35  10  	  data_table_name => '&bldtable',
03:20:35  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:20:35  12  
03:20:35  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
03:20:35  14  	  miss_table_name => 'svmc_miss_cat',
03:20:35  15  	  data_table_name => '&bldtable',
03:20:35  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:20:35  17  
03:20:35  18  	-- xform input data to replace missing values
03:20:35  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
03:20:35  20  	  miss_table_name => 'svmc_miss_num',
03:20:35  21  	  data_table_name => '&bldtable',
03:20:35  22  	  xform_view_name => 'xformed_build_miss_num');
03:20:35  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
03:20:35  24  	  miss_table_name => 'svmc_miss_cat',
03:20:35  25  	  data_table_name => '&bldtable',
03:20:35  26  	  xform_view_name => 'xformed_build_miss_cat');
03:20:35  27  
03:20:35  28  	-- Perform outlier treatment.
03:20:35  29  	-- create clip table
03:20:35  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
03:20:35  31  
03:20:35  32  	-- populate clip table
03:20:35  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
03:20:35  34  	  clip_table_name => 'svmc_clip',
03:20:35  35  	  data_table_name => '&bldtable',
03:20:35  36  	  tail_frac	  => 0.025,
03:20:35  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:20:35  38  
03:20:35  39  	-- xform input data to winsorized data
03:20:35  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
03:20:35  41  	  clip_table_name => 'svmc_clip',
03:20:35  42  	  data_table_name => '&bldtable',
03:20:35  43  	  xform_view_name => 'svmc_winsor');
03:20:35  44  
03:20:35  45  	-- create normalization table
03:20:35  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
03:20:35  47  
03:20:35  48  	-- populate normalization table based on winsorized data
03:20:35  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
03:20:35  50  	  norm_table_name => 'svmc_norm',
03:20:35  51  	  data_table_name => 'svmc_winsor',
03:20:35  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:20:35  53  
03:20:35  54  	-- normalize the original data
03:20:35  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
03:20:35  56  	  norm_table_name => 'svmc_norm',
03:20:35  57  	  data_table_name => '&bldtable',
03:20:35  58  	  xform_view_name => 'svmc_build_prep');
03:20:35  59  END;
03:20:35  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.79
03:20:53 SQL> 
03:20:53 SQL> ---------------------
03:20:53 SQL> -- CREATE A NEW MODEL
03:20:53 SQL> --
03:20:53 SQL> -- Cleanup old model with the same name for repeat runs
03:20:53 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
03:20:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:20:53   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.81
03:20:54 SQL> 
03:20:54 SQL> -- Build a new SVM Model
03:20:54 SQL> BEGIN
03:20:54   2  	DBMS_DATA_MINING.CREATE_MODEL(
03:20:54   3  	  model_name	      => '&model_name',
03:20:54   4  	  mining_function     => dbms_data_mining.classification,
03:20:54   5  	  data_table_name     => 'svmc_build_prep',
03:20:54   6  	  case_id_column_name => '&case_id',
03:20:54   7  	  target_column_name  => '&target',
03:20:54   8  	  settings_table_name => 'svmc_settings');
03:20:54   9  END;
03:20:54  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:32.20
03:21:27 SQL> 
03:21:27 SQL> -----------------------------------------------------------------------
03:21:27 SQL> --			       APPLY/score THE MODEL
03:21:27 SQL> -----------------------------------------------------------------------
03:21:27 SQL> 
03:21:27 SQL> -- Cleanup old scoring data preparation objects for repeat runs
03:21:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
03:21:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:21:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
03:21:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
03:21:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:21:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
03:21:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
03:21:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:21:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
03:21:27 SQL> -----------------------
03:21:27 SQL> -- PREPARE SCORING DATA
03:21:27 SQL> --
03:21:27 SQL> -- If the data for model creation has been prepared, then the data
03:21:27 SQL> -- to be scored using the model must be prepared in the same manner
03:21:27 SQL> -- in order to obtain meaningful results.
03:21:27 SQL> --
03:21:27 SQL> -- 1. Missing Value treatment for all Predictors and
03:21:27 SQL> -- 2. Normalization
03:21:27 SQL> -- No outlier treatment will be performed during test and apply. The
03:21:27 SQL> -- normalization step is sufficient, since the normalization parameters
03:21:27 SQL> -- already capture the effects of outlier treatment done with build data.
03:21:27 SQL> --
03:21:27 SQL> BEGIN
03:21:27   2  	-- Xform Test data to replace missing values
03:21:27   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
03:21:27   4  	  miss_table_name => 'svmc_miss_num',
03:21:27   5  	  data_table_name => '&scoretable',
03:21:27   6  	  xform_view_name => 'xformed_apply_miss_num');
03:21:27   7  
03:21:27   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
03:21:27   9  	  miss_table_name => 'svmc_miss_cat',
03:21:27  10  	  data_table_name => '&scoretable',
03:21:27  11  	  xform_view_name => 'xformed_apply_miss_cat');
03:21:27  12  
03:21:27  13  	-- Normalize the data to be scored
03:21:27  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
03:21:27  15  	  norm_table_name => 'svmc_norm',
03:21:27  16  	  data_table_name => '&scoretable',
03:21:27  17  	  xform_view_name => 'svmc_apply_prep');
03:21:27  18  END;
03:21:27  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.47
03:21:28 SQL> 
03:21:28 SQL> -- Use same model_name used in score.sql
03:21:28 SQL> DEFINE model_name = 'forex14'
03:21:28 SQL> 
03:21:28 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
03:21:28 SQL> 
03:21:28 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
03:21:28 SQL> 
03:21:28 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
03:21:28   2  SELECT
03:21:28   3  prdate
03:21:28   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
03:21:28   5  ,sysdate
03:21:28   6  ,SUBSTR(prdate,1,3)pair
03:21:28   7  ,SUBSTR(prdate,4,19)ydate
03:21:28   8  FROM svmc_apply_prep
03:21:28   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.27
03:21:29 SQL> @aud_score1day.sql  2011-01-03 03:05:00
03:21:29 SQL> --
03:21:29 SQL> -- aud_score1day.sql
03:21:29 SQL> --
03:21:29 SQL> 
03:21:29 SQL> CREATE OR REPLACE VIEW sme AS
03:21:29   2  SELECT
03:21:29   3  'aud'||m.ydate prdate
03:21:29   4  ,NULL gatt
03:21:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
03:21:29   6  ,eur_g00
03:21:29   7  ,eur_g01
03:21:29   8  ,eur_g02
03:21:29   9  ,eur_g03
03:21:29  10  ,eur_g04
03:21:29  11  ,eur_g05
03:21:29  12  ,eur_g06
03:21:29  13  ,eur_g07
03:21:29  14  ,eur_g08
03:21:29  15  ,eur_g09
03:21:29  16  ,eur_g10
03:21:29  17  ,eur_g11
03:21:29  18  ,eur_g12
03:21:29  19  ,eur_g13
03:21:29  20  ,eur_g14
03:21:29  21  ,eur_g15
03:21:29  22  ,eur_g16
03:21:29  23  ,eur_g17
03:21:29  24  ,eur_g18
03:21:29  25  ,eur_g19
03:21:29  26  ,eur_g20
03:21:29  27  ,eur_g21
03:21:29  28  ,eur_g22
03:21:29  29  ,eur_g23
03:21:29  30  ,eur_g24
03:21:29  31  ,eur_g25
03:21:29  32  ,eur_g26
03:21:29  33  ,eur_g27
03:21:29  34  ,eur_g28
03:21:29  35  ,eur_g29
03:21:29  36  ,eur_g30
03:21:29  37  ,eur_g31
03:21:29  38  ,eur_g32
03:21:29  39  ,eur_g33
03:21:29  40  ,eur_g34
03:21:29  41  ,eur_g35
03:21:29  42  ,eur_g36
03:21:29  43  ,eur_g37
03:21:29  44  ,eur_g38
03:21:29  45  ,eur_g39
03:21:29  46  ,eur_g40
03:21:29  47  ,eur_g41
03:21:29  48  ,aud_g00
03:21:29  49  ,aud_g01
03:21:29  50  ,aud_g02
03:21:29  51  ,aud_g03
03:21:29  52  ,aud_g04
03:21:29  53  ,aud_g05
03:21:29  54  ,aud_g06
03:21:29  55  ,aud_g07
03:21:29  56  ,aud_g08
03:21:29  57  ,aud_g09
03:21:29  58  ,aud_g10
03:21:29  59  ,aud_g11
03:21:29  60  ,aud_g12
03:21:29  61  ,aud_g13
03:21:29  62  ,aud_g14
03:21:29  63  ,aud_g15
03:21:29  64  ,aud_g16
03:21:29  65  ,aud_g17
03:21:29  66  ,aud_g18
03:21:29  67  ,aud_g19
03:21:29  68  ,aud_g20
03:21:29  69  ,aud_g21
03:21:29  70  ,aud_g22
03:21:29  71  ,aud_g23
03:21:29  72  ,aud_g24
03:21:29  73  ,aud_g25
03:21:29  74  ,aud_g26
03:21:29  75  ,aud_g27
03:21:29  76  ,aud_g28
03:21:29  77  ,aud_g29
03:21:29  78  ,aud_g30
03:21:29  79  ,aud_g31
03:21:29  80  ,aud_g32
03:21:29  81  ,aud_g33
03:21:29  82  ,aud_g34
03:21:29  83  ,aud_g35
03:21:29  84  ,aud_g36
03:21:29  85  ,aud_g37
03:21:29  86  ,aud_g38
03:21:29  87  ,aud_g39
03:21:29  88  ,aud_g40
03:21:29  89  ,aud_g41
03:21:29  90  ,gbp_g00
03:21:29  91  ,gbp_g01
03:21:29  92  ,gbp_g02
03:21:29  93  ,gbp_g03
03:21:29  94  ,gbp_g04
03:21:29  95  ,gbp_g05
03:21:29  96  ,gbp_g06
03:21:29  97  ,gbp_g07
03:21:29  98  ,gbp_g08
03:21:29  99  ,gbp_g09
03:21:29 100  ,gbp_g10
03:21:29 101  ,gbp_g11
03:21:29 102  ,gbp_g12
03:21:29 103  ,gbp_g13
03:21:29 104  ,gbp_g14
03:21:29 105  ,gbp_g15
03:21:29 106  ,gbp_g16
03:21:29 107  ,gbp_g17
03:21:29 108  ,gbp_g18
03:21:29 109  ,gbp_g19
03:21:29 110  ,gbp_g20
03:21:29 111  ,gbp_g21
03:21:29 112  ,gbp_g22
03:21:29 113  ,gbp_g23
03:21:29 114  ,gbp_g24
03:21:29 115  ,gbp_g25
03:21:29 116  ,gbp_g26
03:21:29 117  ,gbp_g27
03:21:29 118  ,gbp_g28
03:21:29 119  ,gbp_g29
03:21:29 120  ,gbp_g30
03:21:29 121  ,gbp_g31
03:21:29 122  ,gbp_g32
03:21:29 123  ,gbp_g33
03:21:29 124  ,gbp_g34
03:21:29 125  ,gbp_g35
03:21:29 126  ,gbp_g36
03:21:29 127  ,gbp_g37
03:21:29 128  ,gbp_g38
03:21:29 129  ,gbp_g39
03:21:29 130  ,gbp_g40
03:21:29 131  ,gbp_g41
03:21:29 132  ,jpy_g00
03:21:29 133  ,jpy_g01
03:21:29 134  ,jpy_g02
03:21:29 135  ,jpy_g03
03:21:29 136  ,jpy_g04
03:21:29 137  ,jpy_g05
03:21:29 138  ,jpy_g06
03:21:29 139  ,jpy_g07
03:21:29 140  ,jpy_g08
03:21:29 141  ,jpy_g09
03:21:29 142  ,jpy_g10
03:21:29 143  ,jpy_g11
03:21:29 144  ,jpy_g12
03:21:29 145  ,jpy_g13
03:21:29 146  ,jpy_g14
03:21:29 147  ,jpy_g15
03:21:29 148  ,jpy_g16
03:21:29 149  ,jpy_g17
03:21:29 150  ,jpy_g18
03:21:29 151  ,jpy_g19
03:21:29 152  ,jpy_g20
03:21:29 153  ,jpy_g21
03:21:29 154  ,jpy_g22
03:21:29 155  ,jpy_g23
03:21:29 156  ,jpy_g24
03:21:29 157  ,jpy_g25
03:21:29 158  ,jpy_g26
03:21:29 159  ,jpy_g27
03:21:29 160  ,jpy_g28
03:21:29 161  ,jpy_g29
03:21:29 162  ,jpy_g30
03:21:29 163  ,jpy_g31
03:21:29 164  ,jpy_g32
03:21:29 165  ,jpy_g33
03:21:29 166  ,jpy_g34
03:21:29 167  ,jpy_g35
03:21:29 168  ,jpy_g36
03:21:29 169  ,jpy_g37
03:21:29 170  ,jpy_g38
03:21:29 171  ,jpy_g39
03:21:29 172  ,jpy_g40
03:21:29 173  ,jpy_g41
03:21:29 174  ,cad_g00
03:21:29 175  ,cad_g01
03:21:29 176  ,cad_g02
03:21:29 177  ,cad_g03
03:21:29 178  ,cad_g04
03:21:29 179  ,cad_g05
03:21:29 180  ,cad_g06
03:21:29 181  ,cad_g07
03:21:29 182  ,cad_g08
03:21:29 183  ,cad_g09
03:21:29 184  ,cad_g10
03:21:29 185  ,cad_g11
03:21:29 186  ,cad_g12
03:21:29 187  ,cad_g13
03:21:29 188  ,cad_g14
03:21:29 189  ,cad_g15
03:21:29 190  ,cad_g16
03:21:29 191  ,cad_g17
03:21:29 192  ,cad_g18
03:21:29 193  ,cad_g19
03:21:29 194  ,cad_g20
03:21:29 195  ,cad_g21
03:21:29 196  ,cad_g22
03:21:29 197  ,cad_g23
03:21:29 198  ,cad_g24
03:21:29 199  ,cad_g25
03:21:29 200  ,cad_g26
03:21:29 201  ,cad_g27
03:21:29 202  ,cad_g28
03:21:29 203  ,cad_g29
03:21:29 204  ,cad_g30
03:21:29 205  ,cad_g31
03:21:29 206  ,cad_g32
03:21:29 207  ,cad_g33
03:21:29 208  ,cad_g34
03:21:29 209  ,cad_g35
03:21:29 210  ,cad_g36
03:21:29 211  ,cad_g37
03:21:29 212  ,cad_g38
03:21:29 213  ,cad_g39
03:21:29 214  ,cad_g40
03:21:29 215  ,cad_g41
03:21:29 216  ,chf_g00
03:21:29 217  ,chf_g01
03:21:29 218  ,chf_g02
03:21:29 219  ,chf_g03
03:21:29 220  ,chf_g04
03:21:29 221  ,chf_g05
03:21:29 222  ,chf_g06
03:21:29 223  ,chf_g07
03:21:29 224  ,chf_g08
03:21:29 225  ,chf_g09
03:21:29 226  ,chf_g10
03:21:29 227  ,chf_g11
03:21:29 228  ,chf_g12
03:21:29 229  ,chf_g13
03:21:29 230  ,chf_g14
03:21:29 231  ,chf_g15
03:21:29 232  ,chf_g16
03:21:29 233  ,chf_g17
03:21:29 234  ,chf_g18
03:21:29 235  ,chf_g19
03:21:29 236  ,chf_g20
03:21:29 237  ,chf_g21
03:21:29 238  ,chf_g22
03:21:29 239  ,chf_g23
03:21:29 240  ,chf_g24
03:21:29 241  ,chf_g25
03:21:29 242  ,chf_g26
03:21:29 243  ,chf_g27
03:21:29 244  ,chf_g28
03:21:29 245  ,chf_g29
03:21:29 246  ,chf_g30
03:21:29 247  ,chf_g31
03:21:29 248  ,chf_g32
03:21:29 249  ,chf_g33
03:21:29 250  ,chf_g34
03:21:29 251  ,chf_g35
03:21:29 252  ,chf_g36
03:21:29 253  ,chf_g37
03:21:29 254  ,chf_g38
03:21:29 255  ,chf_g39
03:21:29 256  ,chf_g40
03:21:29 257  ,chf_g41
03:21:29 258  FROM aud_ms6 m
03:21:29 259  WHERE m.ydate = '&1'||' '||'&2'
03:21:29 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'03:05:00'

View created.

Elapsed: 00:00:00.17
03:21:29 SQL> 
03:21:29 SQL> -- rpt
03:21:29 SQL> -- We should see just 1 row:
03:21:29 SQL> 
03:21:29 SQL> SELECT COUNT(prdate) FROM sme
03:21:29   2  
03:21:29 SQL> -- Build the model:
03:21:29 SQL> CREATE OR REPLACE VIEW bme AS
03:21:29   2  SELECT
03:21:29   3  'aud'||m.ydate prdate
03:21:29   4  ,gatt
03:21:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
03:21:29   6  ,eur_g00
03:21:29   7  ,eur_g01
03:21:29   8  ,eur_g02
03:21:29   9  ,eur_g03
03:21:29  10  ,eur_g04
03:21:29  11  ,eur_g05
03:21:29  12  ,eur_g06
03:21:29  13  ,eur_g07
03:21:29  14  ,eur_g08
03:21:29  15  ,eur_g09
03:21:29  16  ,eur_g10
03:21:29  17  ,eur_g11
03:21:29  18  ,eur_g12
03:21:29  19  ,eur_g13
03:21:29  20  ,eur_g14
03:21:29  21  ,eur_g15
03:21:29  22  ,eur_g16
03:21:29  23  ,eur_g17
03:21:29  24  ,eur_g18
03:21:29  25  ,eur_g19
03:21:29  26  ,eur_g20
03:21:29  27  ,eur_g21
03:21:29  28  ,eur_g22
03:21:29  29  ,eur_g23
03:21:29  30  ,eur_g24
03:21:29  31  ,eur_g25
03:21:29  32  ,eur_g26
03:21:29  33  ,eur_g27
03:21:29  34  ,eur_g28
03:21:29  35  ,eur_g29
03:21:29  36  ,eur_g30
03:21:29  37  ,eur_g31
03:21:29  38  ,eur_g32
03:21:29  39  ,eur_g33
03:21:29  40  ,eur_g34
03:21:29  41  ,eur_g35
03:21:29  42  ,eur_g36
03:21:29  43  ,eur_g37
03:21:29  44  ,eur_g38
03:21:29  45  ,eur_g39
03:21:29  46  ,eur_g40
03:21:29  47  ,eur_g41
03:21:29  48  ,aud_g00
03:21:29  49  ,aud_g01
03:21:29  50  ,aud_g02
03:21:29  51  ,aud_g03
03:21:29  52  ,aud_g04
03:21:29  53  ,aud_g05
03:21:29  54  ,aud_g06
03:21:29  55  ,aud_g07
03:21:29  56  ,aud_g08
03:21:29  57  ,aud_g09
03:21:29  58  ,aud_g10
03:21:29  59  ,aud_g11
03:21:29  60  ,aud_g12
03:21:29  61  ,aud_g13
03:21:29  62  ,aud_g14
03:21:29  63  ,aud_g15
03:21:29  64  ,aud_g16
03:21:29  65  ,aud_g17
03:21:29  66  ,aud_g18
03:21:29  67  ,aud_g19
03:21:29  68  ,aud_g20
03:21:29  69  ,aud_g21
03:21:29  70  ,aud_g22
03:21:29  71  ,aud_g23
03:21:29  72  ,aud_g24
03:21:29  73  ,aud_g25
03:21:29  74  ,aud_g26
03:21:29  75  ,aud_g27
03:21:29  76  ,aud_g28
03:21:29  77  ,aud_g29
03:21:29  78  ,aud_g30
03:21:29  79  ,aud_g31
03:21:29  80  ,aud_g32
03:21:29  81  ,aud_g33
03:21:29  82  ,aud_g34
03:21:29  83  ,aud_g35
03:21:29  84  ,aud_g36
03:21:29  85  ,aud_g37
03:21:29  86  ,aud_g38
03:21:29  87  ,aud_g39
03:21:29  88  ,aud_g40
03:21:29  89  ,aud_g41
03:21:29  90  ,gbp_g00
03:21:29  91  ,gbp_g01
03:21:29  92  ,gbp_g02
03:21:29  93  ,gbp_g03
03:21:29  94  ,gbp_g04
03:21:29  95  ,gbp_g05
03:21:29  96  ,gbp_g06
03:21:29  97  ,gbp_g07
03:21:29  98  ,gbp_g08
03:21:29  99  ,gbp_g09
03:21:29 100  ,gbp_g10
03:21:29 101  ,gbp_g11
03:21:29 102  ,gbp_g12
03:21:29 103  ,gbp_g13
03:21:29 104  ,gbp_g14
03:21:29 105  ,gbp_g15
03:21:29 106  ,gbp_g16
03:21:29 107  ,gbp_g17
03:21:29 108  ,gbp_g18
03:21:29 109  ,gbp_g19
03:21:29 110  ,gbp_g20
03:21:29 111  ,gbp_g21
03:21:29 112  ,gbp_g22
03:21:29 113  ,gbp_g23
03:21:29 114  ,gbp_g24
03:21:29 115  ,gbp_g25
03:21:29 116  ,gbp_g26
03:21:29 117  ,gbp_g27
03:21:29 118  ,gbp_g28
03:21:29 119  ,gbp_g29
03:21:29 120  ,gbp_g30
03:21:29 121  ,gbp_g31
03:21:29 122  ,gbp_g32
03:21:29 123  ,gbp_g33
03:21:29 124  ,gbp_g34
03:21:29 125  ,gbp_g35
03:21:29 126  ,gbp_g36
03:21:29 127  ,gbp_g37
03:21:29 128  ,gbp_g38
03:21:29 129  ,gbp_g39
03:21:29 130  ,gbp_g40
03:21:29 131  ,gbp_g41
03:21:29 132  ,jpy_g00
03:21:29 133  ,jpy_g01
03:21:29 134  ,jpy_g02
03:21:29 135  ,jpy_g03
03:21:29 136  ,jpy_g04
03:21:29 137  ,jpy_g05
03:21:29 138  ,jpy_g06
03:21:29 139  ,jpy_g07
03:21:29 140  ,jpy_g08
03:21:29 141  ,jpy_g09
03:21:29 142  ,jpy_g10
03:21:29 143  ,jpy_g11
03:21:29 144  ,jpy_g12
03:21:29 145  ,jpy_g13
03:21:29 146  ,jpy_g14
03:21:29 147  ,jpy_g15
03:21:29 148  ,jpy_g16
03:21:29 149  ,jpy_g17
03:21:29 150  ,jpy_g18
03:21:29 151  ,jpy_g19
03:21:29 152  ,jpy_g20
03:21:29 153  ,jpy_g21
03:21:29 154  ,jpy_g22
03:21:29 155  ,jpy_g23
03:21:29 156  ,jpy_g24
03:21:29 157  ,jpy_g25
03:21:29 158  ,jpy_g26
03:21:29 159  ,jpy_g27
03:21:29 160  ,jpy_g28
03:21:29 161  ,jpy_g29
03:21:29 162  ,jpy_g30
03:21:29 163  ,jpy_g31
03:21:29 164  ,jpy_g32
03:21:29 165  ,jpy_g33
03:21:29 166  ,jpy_g34
03:21:29 167  ,jpy_g35
03:21:29 168  ,jpy_g36
03:21:29 169  ,jpy_g37
03:21:29 170  ,jpy_g38
03:21:29 171  ,jpy_g39
03:21:29 172  ,jpy_g40
03:21:29 173  ,jpy_g41
03:21:29 174  ,cad_g00
03:21:29 175  ,cad_g01
03:21:29 176  ,cad_g02
03:21:29 177  ,cad_g03
03:21:29 178  ,cad_g04
03:21:29 179  ,cad_g05
03:21:29 180  ,cad_g06
03:21:29 181  ,cad_g07
03:21:29 182  ,cad_g08
03:21:29 183  ,cad_g09
03:21:29 184  ,cad_g10
03:21:29 185  ,cad_g11
03:21:29 186  ,cad_g12
03:21:29 187  ,cad_g13
03:21:29 188  ,cad_g14
03:21:29 189  ,cad_g15
03:21:29 190  ,cad_g16
03:21:29 191  ,cad_g17
03:21:29 192  ,cad_g18
03:21:29 193  ,cad_g19
03:21:29 194  ,cad_g20
03:21:29 195  ,cad_g21
03:21:29 196  ,cad_g22
03:21:29 197  ,cad_g23
03:21:29 198  ,cad_g24
03:21:29 199  ,cad_g25
03:21:29 200  ,cad_g26
03:21:29 201  ,cad_g27
03:21:29 202  ,cad_g28
03:21:29 203  ,cad_g29
03:21:29 204  ,cad_g30
03:21:29 205  ,cad_g31
03:21:29 206  ,cad_g32
03:21:29 207  ,cad_g33
03:21:29 208  ,cad_g34
03:21:29 209  ,cad_g35
03:21:29 210  ,cad_g36
03:21:29 211  ,cad_g37
03:21:29 212  ,cad_g38
03:21:29 213  ,cad_g39
03:21:29 214  ,cad_g40
03:21:29 215  ,cad_g41
03:21:29 216  ,chf_g00
03:21:29 217  ,chf_g01
03:21:29 218  ,chf_g02
03:21:29 219  ,chf_g03
03:21:29 220  ,chf_g04
03:21:29 221  ,chf_g05
03:21:29 222  ,chf_g06
03:21:29 223  ,chf_g07
03:21:29 224  ,chf_g08
03:21:29 225  ,chf_g09
03:21:29 226  ,chf_g10
03:21:29 227  ,chf_g11
03:21:29 228  ,chf_g12
03:21:29 229  ,chf_g13
03:21:29 230  ,chf_g14
03:21:29 231  ,chf_g15
03:21:29 232  ,chf_g16
03:21:29 233  ,chf_g17
03:21:29 234  ,chf_g18
03:21:29 235  ,chf_g19
03:21:29 236  ,chf_g20
03:21:29 237  ,chf_g21
03:21:29 238  ,chf_g22
03:21:29 239  ,chf_g23
03:21:29 240  ,chf_g24
03:21:29 241  ,chf_g25
03:21:29 242  ,chf_g26
03:21:29 243  ,chf_g27
03:21:29 244  ,chf_g28
03:21:29 245  ,chf_g29
03:21:29 246  ,chf_g30
03:21:29 247  ,chf_g31
03:21:29 248  ,chf_g32
03:21:29 249  ,chf_g33
03:21:29 250  ,chf_g34
03:21:29 251  ,chf_g35
03:21:29 252  ,chf_g36
03:21:29 253  ,chf_g37
03:21:29 254  ,chf_g38
03:21:29 255  ,chf_g39
03:21:29 256  ,chf_g40
03:21:29 257  ,chf_g41
03:21:29 258  FROM aud_ms6 m
03:21:29 259  WHERE gatt IN('nup','up')
03:21:29 260  AND 1+m.ydate < '&1'||' '||'&2'
03:21:29 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'03:05:00'

View created.

Elapsed: 00:00:00.14
03:21:29 SQL> 
03:21:29 SQL> -- rpt
03:21:29 SQL> 
03:21:29 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
03:21:29   2  
03:21:29 SQL> SELECT MAX(prdate) FROM bme
03:21:29   2  
03:21:29 SQL> -- Now build model from bme and score sme
03:21:29 SQL> @score1.sql
03:21:29 SQL> -- score1.sql
03:21:29 SQL> 
03:21:29 SQL> -- Does the 1st SVM score
03:21:29 SQL> 
03:21:29 SQL> -- Fill up svmc_apply_prep
03:21:29 SQL> @score.sql
03:21:29 SQL> --
03:21:29 SQL> -- score.sql
03:21:29 SQL> --
03:21:29 SQL> 
03:21:29 SQL> -- usage: score.sql
03:21:29 SQL> 
03:21:29 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
03:21:29 SQL> 
03:21:29 SQL> DEFINE target	= 'gatt'
03:21:29 SQL> DEFINE model_name = 'forex14'
03:21:29 SQL> DEFINE bldtable	= 'bme'
03:21:29 SQL> DEFINE scoretable = 'sme'
03:21:29 SQL> DEFINE case_id	= 'prdate'
03:21:29 SQL> 
03:21:29 SQL> -- Define a variable to help me exclude some columns from some data mining calls
03:21:29 SQL> DEFINE exclude1 = "'&target','&case_id'"
03:21:29 SQL> 
03:21:29 SQL> -- Builds an SVM model using pl/sql.
03:21:29 SQL> 
03:21:29 SQL> -----------------------------------------------------------------------
03:21:29 SQL> --			    BUILD THE MODEL
03:21:29 SQL> -----------------------------------------------------------------------
03:21:29 SQL> 
03:21:29 SQL> -- Cleanup old build data preparation objects for repeat runs
03:21:29 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
03:21:29 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
03:21:29 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
03:21:29 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
03:21:29 SQL> 
03:21:29 SQL> 
03:21:29 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
03:21:29 SQL> --
03:21:29 SQL> -- DROP	TABLE svmc_settings ;
03:21:29 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
03:21:29 SQL> -- DELETE svmc_settings;
03:21:29 SQL> 
03:21:29 SQL> -- The default classification algorithm is Naive Bayes. So override
03:21:29 SQL> -- this choice to SVM using a settings table.
03:21:29 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
03:21:29 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
03:21:29 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
03:21:29 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
03:21:29 SQL> -- models.
03:21:29 SQL> --
03:21:29 SQL> 
03:21:29 SQL> -- Do this once and then comment it out.
03:21:29 SQL> -- That makes script go faster.
03:21:29 SQL> -- BEGIN
03:21:29 SQL> -- -- Populate settings table
03:21:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
03:21:29 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
03:21:29 SQL> --
03:21:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
03:21:29 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
03:21:29 SQL> --
03:21:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
03:21:29 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
03:21:29 SQL> --   COMMIT;
03:21:29 SQL> -- END;
03:21:29 SQL> -- /
03:21:29 SQL> 
03:21:29 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
03:21:29 SQL> 
03:21:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
03:21:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:21:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
03:21:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
03:21:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:21:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
03:21:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
03:21:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:21:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
03:21:29 SQL> 
03:21:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
03:21:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:21:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
03:21:29 SQL> 
03:21:29 SQL> --------------------------------
03:21:29 SQL> -- PREPARE BUILD (TRAINING) DATA
03:21:29 SQL> --
03:21:29 SQL> 
03:21:29 SQL> -- 1. Missing Value treatment for all Predictors and
03:21:29 SQL> -- 2. Outlier Treatment and
03:21:29 SQL> -- 3. Normalization are performed below.
03:21:29 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
03:21:29 SQL> --    normalized here.
03:21:29 SQL> 
03:21:29 SQL> BEGIN
03:21:29   2  	-- Perform missing value treatment for all predictors
03:21:29   3  	-- create miss tables
03:21:29   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
03:21:29   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
03:21:29   6  
03:21:29   7  	-- populate miss tables
03:21:29   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
03:21:29   9  	  miss_table_name => 'svmc_miss_num',
03:21:29  10  	  data_table_name => '&bldtable',
03:21:29  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:21:29  12  
03:21:29  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
03:21:29  14  	  miss_table_name => 'svmc_miss_cat',
03:21:29  15  	  data_table_name => '&bldtable',
03:21:29  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:21:29  17  
03:21:29  18  	-- xform input data to replace missing values
03:21:29  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
03:21:29  20  	  miss_table_name => 'svmc_miss_num',
03:21:29  21  	  data_table_name => '&bldtable',
03:21:29  22  	  xform_view_name => 'xformed_build_miss_num');
03:21:29  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
03:21:29  24  	  miss_table_name => 'svmc_miss_cat',
03:21:29  25  	  data_table_name => '&bldtable',
03:21:29  26  	  xform_view_name => 'xformed_build_miss_cat');
03:21:29  27  
03:21:29  28  	-- Perform outlier treatment.
03:21:29  29  	-- create clip table
03:21:29  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
03:21:29  31  
03:21:29  32  	-- populate clip table
03:21:29  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
03:21:29  34  	  clip_table_name => 'svmc_clip',
03:21:29  35  	  data_table_name => '&bldtable',
03:21:29  36  	  tail_frac	  => 0.025,
03:21:29  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:21:29  38  
03:21:29  39  	-- xform input data to winsorized data
03:21:29  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
03:21:29  41  	  clip_table_name => 'svmc_clip',
03:21:29  42  	  data_table_name => '&bldtable',
03:21:29  43  	  xform_view_name => 'svmc_winsor');
03:21:29  44  
03:21:29  45  	-- create normalization table
03:21:29  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
03:21:29  47  
03:21:29  48  	-- populate normalization table based on winsorized data
03:21:29  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
03:21:29  50  	  norm_table_name => 'svmc_norm',
03:21:29  51  	  data_table_name => 'svmc_winsor',
03:21:29  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:21:29  53  
03:21:29  54  	-- normalize the original data
03:21:29  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
03:21:29  56  	  norm_table_name => 'svmc_norm',
03:21:29  57  	  data_table_name => '&bldtable',
03:21:29  58  	  xform_view_name => 'svmc_build_prep');
03:21:29  59  END;
03:21:29  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.38
03:21:48 SQL> 
03:21:48 SQL> ---------------------
03:21:48 SQL> -- CREATE A NEW MODEL
03:21:48 SQL> --
03:21:48 SQL> -- Cleanup old model with the same name for repeat runs
03:21:48 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
03:21:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:21:48   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.93
03:21:49 SQL> 
03:21:49 SQL> -- Build a new SVM Model
03:21:49 SQL> BEGIN
03:21:49   2  	DBMS_DATA_MINING.CREATE_MODEL(
03:21:49   3  	  model_name	      => '&model_name',
03:21:49   4  	  mining_function     => dbms_data_mining.classification,
03:21:49   5  	  data_table_name     => 'svmc_build_prep',
03:21:49   6  	  case_id_column_name => '&case_id',
03:21:49   7  	  target_column_name  => '&target',
03:21:49   8  	  settings_table_name => 'svmc_settings');
03:21:49   9  END;
03:21:49  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.93
03:22:16 SQL> 
03:22:16 SQL> -----------------------------------------------------------------------
03:22:16 SQL> --			       APPLY/score THE MODEL
03:22:16 SQL> -----------------------------------------------------------------------
03:22:16 SQL> 
03:22:16 SQL> -- Cleanup old scoring data preparation objects for repeat runs
03:22:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
03:22:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:22:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
03:22:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
03:22:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:22:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
03:22:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
03:22:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:22:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
03:22:17 SQL> -----------------------
03:22:17 SQL> -- PREPARE SCORING DATA
03:22:17 SQL> --
03:22:17 SQL> -- If the data for model creation has been prepared, then the data
03:22:17 SQL> -- to be scored using the model must be prepared in the same manner
03:22:17 SQL> -- in order to obtain meaningful results.
03:22:17 SQL> --
03:22:17 SQL> -- 1. Missing Value treatment for all Predictors and
03:22:17 SQL> -- 2. Normalization
03:22:17 SQL> -- No outlier treatment will be performed during test and apply. The
03:22:17 SQL> -- normalization step is sufficient, since the normalization parameters
03:22:17 SQL> -- already capture the effects of outlier treatment done with build data.
03:22:17 SQL> --
03:22:17 SQL> BEGIN
03:22:17   2  	-- Xform Test data to replace missing values
03:22:17   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
03:22:17   4  	  miss_table_name => 'svmc_miss_num',
03:22:17   5  	  data_table_name => '&scoretable',
03:22:17   6  	  xform_view_name => 'xformed_apply_miss_num');
03:22:17   7  
03:22:17   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
03:22:17   9  	  miss_table_name => 'svmc_miss_cat',
03:22:17  10  	  data_table_name => '&scoretable',
03:22:17  11  	  xform_view_name => 'xformed_apply_miss_cat');
03:22:17  12  
03:22:17  13  	-- Normalize the data to be scored
03:22:17  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
03:22:17  15  	  norm_table_name => 'svmc_norm',
03:22:17  16  	  data_table_name => '&scoretable',
03:22:17  17  	  xform_view_name => 'svmc_apply_prep');
03:22:17  18  END;
03:22:17  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.43
03:22:18 SQL> 
03:22:18 SQL> -- Use same model_name used in score.sql
03:22:18 SQL> DEFINE model_name = 'forex14'
03:22:18 SQL> 
03:22:18 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
03:22:18 SQL> 
03:22:18 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
03:22:18 SQL> 
03:22:18 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
03:22:18   2  SELECT
03:22:18   3  prdate
03:22:18   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
03:22:18   5  ,sysdate
03:22:18   6  ,SUBSTR(prdate,1,3)pair
03:22:18   7  ,SUBSTR(prdate,4,19)ydate
03:22:18   8  FROM svmc_apply_prep
03:22:18   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
03:22:18 SQL> @aud_score1day.sql  2011-01-03 03:10:00
03:22:18 SQL> --
03:22:18 SQL> -- aud_score1day.sql
03:22:18 SQL> --
03:22:18 SQL> 
03:22:18 SQL> CREATE OR REPLACE VIEW sme AS
03:22:18   2  SELECT
03:22:18   3  'aud'||m.ydate prdate
03:22:18   4  ,NULL gatt
03:22:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
03:22:18   6  ,eur_g00
03:22:18   7  ,eur_g01
03:22:18   8  ,eur_g02
03:22:18   9  ,eur_g03
03:22:18  10  ,eur_g04
03:22:18  11  ,eur_g05
03:22:18  12  ,eur_g06
03:22:18  13  ,eur_g07
03:22:18  14  ,eur_g08
03:22:18  15  ,eur_g09
03:22:18  16  ,eur_g10
03:22:18  17  ,eur_g11
03:22:18  18  ,eur_g12
03:22:18  19  ,eur_g13
03:22:18  20  ,eur_g14
03:22:18  21  ,eur_g15
03:22:18  22  ,eur_g16
03:22:18  23  ,eur_g17
03:22:18  24  ,eur_g18
03:22:18  25  ,eur_g19
03:22:18  26  ,eur_g20
03:22:18  27  ,eur_g21
03:22:18  28  ,eur_g22
03:22:18  29  ,eur_g23
03:22:18  30  ,eur_g24
03:22:18  31  ,eur_g25
03:22:18  32  ,eur_g26
03:22:18  33  ,eur_g27
03:22:18  34  ,eur_g28
03:22:18  35  ,eur_g29
03:22:18  36  ,eur_g30
03:22:18  37  ,eur_g31
03:22:18  38  ,eur_g32
03:22:18  39  ,eur_g33
03:22:18  40  ,eur_g34
03:22:18  41  ,eur_g35
03:22:18  42  ,eur_g36
03:22:18  43  ,eur_g37
03:22:18  44  ,eur_g38
03:22:18  45  ,eur_g39
03:22:18  46  ,eur_g40
03:22:18  47  ,eur_g41
03:22:18  48  ,aud_g00
03:22:18  49  ,aud_g01
03:22:18  50  ,aud_g02
03:22:18  51  ,aud_g03
03:22:18  52  ,aud_g04
03:22:18  53  ,aud_g05
03:22:18  54  ,aud_g06
03:22:18  55  ,aud_g07
03:22:18  56  ,aud_g08
03:22:18  57  ,aud_g09
03:22:18  58  ,aud_g10
03:22:18  59  ,aud_g11
03:22:18  60  ,aud_g12
03:22:18  61  ,aud_g13
03:22:18  62  ,aud_g14
03:22:18  63  ,aud_g15
03:22:18  64  ,aud_g16
03:22:18  65  ,aud_g17
03:22:18  66  ,aud_g18
03:22:18  67  ,aud_g19
03:22:18  68  ,aud_g20
03:22:18  69  ,aud_g21
03:22:18  70  ,aud_g22
03:22:18  71  ,aud_g23
03:22:18  72  ,aud_g24
03:22:18  73  ,aud_g25
03:22:18  74  ,aud_g26
03:22:18  75  ,aud_g27
03:22:18  76  ,aud_g28
03:22:18  77  ,aud_g29
03:22:18  78  ,aud_g30
03:22:18  79  ,aud_g31
03:22:18  80  ,aud_g32
03:22:18  81  ,aud_g33
03:22:18  82  ,aud_g34
03:22:18  83  ,aud_g35
03:22:18  84  ,aud_g36
03:22:18  85  ,aud_g37
03:22:18  86  ,aud_g38
03:22:18  87  ,aud_g39
03:22:18  88  ,aud_g40
03:22:18  89  ,aud_g41
03:22:18  90  ,gbp_g00
03:22:18  91  ,gbp_g01
03:22:18  92  ,gbp_g02
03:22:18  93  ,gbp_g03
03:22:18  94  ,gbp_g04
03:22:18  95  ,gbp_g05
03:22:18  96  ,gbp_g06
03:22:18  97  ,gbp_g07
03:22:18  98  ,gbp_g08
03:22:18  99  ,gbp_g09
03:22:18 100  ,gbp_g10
03:22:18 101  ,gbp_g11
03:22:18 102  ,gbp_g12
03:22:18 103  ,gbp_g13
03:22:18 104  ,gbp_g14
03:22:18 105  ,gbp_g15
03:22:18 106  ,gbp_g16
03:22:18 107  ,gbp_g17
03:22:18 108  ,gbp_g18
03:22:18 109  ,gbp_g19
03:22:18 110  ,gbp_g20
03:22:18 111  ,gbp_g21
03:22:18 112  ,gbp_g22
03:22:18 113  ,gbp_g23
03:22:18 114  ,gbp_g24
03:22:18 115  ,gbp_g25
03:22:18 116  ,gbp_g26
03:22:18 117  ,gbp_g27
03:22:18 118  ,gbp_g28
03:22:18 119  ,gbp_g29
03:22:18 120  ,gbp_g30
03:22:18 121  ,gbp_g31
03:22:18 122  ,gbp_g32
03:22:18 123  ,gbp_g33
03:22:18 124  ,gbp_g34
03:22:18 125  ,gbp_g35
03:22:18 126  ,gbp_g36
03:22:18 127  ,gbp_g37
03:22:18 128  ,gbp_g38
03:22:18 129  ,gbp_g39
03:22:18 130  ,gbp_g40
03:22:18 131  ,gbp_g41
03:22:18 132  ,jpy_g00
03:22:18 133  ,jpy_g01
03:22:18 134  ,jpy_g02
03:22:18 135  ,jpy_g03
03:22:18 136  ,jpy_g04
03:22:18 137  ,jpy_g05
03:22:18 138  ,jpy_g06
03:22:18 139  ,jpy_g07
03:22:18 140  ,jpy_g08
03:22:18 141  ,jpy_g09
03:22:18 142  ,jpy_g10
03:22:18 143  ,jpy_g11
03:22:18 144  ,jpy_g12
03:22:18 145  ,jpy_g13
03:22:18 146  ,jpy_g14
03:22:18 147  ,jpy_g15
03:22:18 148  ,jpy_g16
03:22:18 149  ,jpy_g17
03:22:18 150  ,jpy_g18
03:22:18 151  ,jpy_g19
03:22:18 152  ,jpy_g20
03:22:18 153  ,jpy_g21
03:22:18 154  ,jpy_g22
03:22:18 155  ,jpy_g23
03:22:18 156  ,jpy_g24
03:22:18 157  ,jpy_g25
03:22:18 158  ,jpy_g26
03:22:18 159  ,jpy_g27
03:22:18 160  ,jpy_g28
03:22:18 161  ,jpy_g29
03:22:18 162  ,jpy_g30
03:22:18 163  ,jpy_g31
03:22:18 164  ,jpy_g32
03:22:18 165  ,jpy_g33
03:22:18 166  ,jpy_g34
03:22:18 167  ,jpy_g35
03:22:18 168  ,jpy_g36
03:22:18 169  ,jpy_g37
03:22:18 170  ,jpy_g38
03:22:18 171  ,jpy_g39
03:22:18 172  ,jpy_g40
03:22:18 173  ,jpy_g41
03:22:18 174  ,cad_g00
03:22:18 175  ,cad_g01
03:22:18 176  ,cad_g02
03:22:18 177  ,cad_g03
03:22:18 178  ,cad_g04
03:22:18 179  ,cad_g05
03:22:18 180  ,cad_g06
03:22:18 181  ,cad_g07
03:22:18 182  ,cad_g08
03:22:18 183  ,cad_g09
03:22:18 184  ,cad_g10
03:22:18 185  ,cad_g11
03:22:18 186  ,cad_g12
03:22:18 187  ,cad_g13
03:22:18 188  ,cad_g14
03:22:18 189  ,cad_g15
03:22:18 190  ,cad_g16
03:22:18 191  ,cad_g17
03:22:18 192  ,cad_g18
03:22:18 193  ,cad_g19
03:22:18 194  ,cad_g20
03:22:18 195  ,cad_g21
03:22:18 196  ,cad_g22
03:22:18 197  ,cad_g23
03:22:18 198  ,cad_g24
03:22:18 199  ,cad_g25
03:22:18 200  ,cad_g26
03:22:18 201  ,cad_g27
03:22:18 202  ,cad_g28
03:22:18 203  ,cad_g29
03:22:18 204  ,cad_g30
03:22:18 205  ,cad_g31
03:22:18 206  ,cad_g32
03:22:18 207  ,cad_g33
03:22:18 208  ,cad_g34
03:22:18 209  ,cad_g35
03:22:18 210  ,cad_g36
03:22:18 211  ,cad_g37
03:22:18 212  ,cad_g38
03:22:18 213  ,cad_g39
03:22:18 214  ,cad_g40
03:22:18 215  ,cad_g41
03:22:18 216  ,chf_g00
03:22:18 217  ,chf_g01
03:22:18 218  ,chf_g02
03:22:18 219  ,chf_g03
03:22:18 220  ,chf_g04
03:22:18 221  ,chf_g05
03:22:18 222  ,chf_g06
03:22:18 223  ,chf_g07
03:22:18 224  ,chf_g08
03:22:18 225  ,chf_g09
03:22:18 226  ,chf_g10
03:22:18 227  ,chf_g11
03:22:18 228  ,chf_g12
03:22:18 229  ,chf_g13
03:22:18 230  ,chf_g14
03:22:18 231  ,chf_g15
03:22:18 232  ,chf_g16
03:22:18 233  ,chf_g17
03:22:18 234  ,chf_g18
03:22:18 235  ,chf_g19
03:22:18 236  ,chf_g20
03:22:18 237  ,chf_g21
03:22:18 238  ,chf_g22
03:22:18 239  ,chf_g23
03:22:18 240  ,chf_g24
03:22:18 241  ,chf_g25
03:22:18 242  ,chf_g26
03:22:18 243  ,chf_g27
03:22:18 244  ,chf_g28
03:22:18 245  ,chf_g29
03:22:18 246  ,chf_g30
03:22:18 247  ,chf_g31
03:22:18 248  ,chf_g32
03:22:18 249  ,chf_g33
03:22:18 250  ,chf_g34
03:22:18 251  ,chf_g35
03:22:18 252  ,chf_g36
03:22:18 253  ,chf_g37
03:22:18 254  ,chf_g38
03:22:18 255  ,chf_g39
03:22:18 256  ,chf_g40
03:22:18 257  ,chf_g41
03:22:18 258  FROM aud_ms6 m
03:22:18 259  WHERE m.ydate = '&1'||' '||'&2'
03:22:18 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'03:10:00'

View created.

Elapsed: 00:00:00.11
03:22:18 SQL> 
03:22:18 SQL> -- rpt
03:22:18 SQL> -- We should see just 1 row:
03:22:18 SQL> 
03:22:18 SQL> SELECT COUNT(prdate) FROM sme
03:22:18   2  
03:22:18 SQL> -- Build the model:
03:22:18 SQL> CREATE OR REPLACE VIEW bme AS
03:22:18   2  SELECT
03:22:18   3  'aud'||m.ydate prdate
03:22:18   4  ,gatt
03:22:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
03:22:18   6  ,eur_g00
03:22:18   7  ,eur_g01
03:22:18   8  ,eur_g02
03:22:18   9  ,eur_g03
03:22:18  10  ,eur_g04
03:22:18  11  ,eur_g05
03:22:18  12  ,eur_g06
03:22:18  13  ,eur_g07
03:22:18  14  ,eur_g08
03:22:18  15  ,eur_g09
03:22:18  16  ,eur_g10
03:22:18  17  ,eur_g11
03:22:18  18  ,eur_g12
03:22:18  19  ,eur_g13
03:22:18  20  ,eur_g14
03:22:18  21  ,eur_g15
03:22:18  22  ,eur_g16
03:22:18  23  ,eur_g17
03:22:18  24  ,eur_g18
03:22:18  25  ,eur_g19
03:22:18  26  ,eur_g20
03:22:18  27  ,eur_g21
03:22:18  28  ,eur_g22
03:22:18  29  ,eur_g23
03:22:18  30  ,eur_g24
03:22:18  31  ,eur_g25
03:22:18  32  ,eur_g26
03:22:18  33  ,eur_g27
03:22:18  34  ,eur_g28
03:22:18  35  ,eur_g29
03:22:18  36  ,eur_g30
03:22:18  37  ,eur_g31
03:22:18  38  ,eur_g32
03:22:18  39  ,eur_g33
03:22:18  40  ,eur_g34
03:22:18  41  ,eur_g35
03:22:18  42  ,eur_g36
03:22:18  43  ,eur_g37
03:22:18  44  ,eur_g38
03:22:18  45  ,eur_g39
03:22:18  46  ,eur_g40
03:22:18  47  ,eur_g41
03:22:18  48  ,aud_g00
03:22:18  49  ,aud_g01
03:22:18  50  ,aud_g02
03:22:18  51  ,aud_g03
03:22:18  52  ,aud_g04
03:22:18  53  ,aud_g05
03:22:18  54  ,aud_g06
03:22:18  55  ,aud_g07
03:22:18  56  ,aud_g08
03:22:18  57  ,aud_g09
03:22:18  58  ,aud_g10
03:22:18  59  ,aud_g11
03:22:18  60  ,aud_g12
03:22:18  61  ,aud_g13
03:22:18  62  ,aud_g14
03:22:18  63  ,aud_g15
03:22:18  64  ,aud_g16
03:22:18  65  ,aud_g17
03:22:18  66  ,aud_g18
03:22:18  67  ,aud_g19
03:22:18  68  ,aud_g20
03:22:18  69  ,aud_g21
03:22:18  70  ,aud_g22
03:22:18  71  ,aud_g23
03:22:18  72  ,aud_g24
03:22:18  73  ,aud_g25
03:22:18  74  ,aud_g26
03:22:18  75  ,aud_g27
03:22:18  76  ,aud_g28
03:22:18  77  ,aud_g29
03:22:18  78  ,aud_g30
03:22:18  79  ,aud_g31
03:22:18  80  ,aud_g32
03:22:18  81  ,aud_g33
03:22:18  82  ,aud_g34
03:22:18  83  ,aud_g35
03:22:18  84  ,aud_g36
03:22:18  85  ,aud_g37
03:22:18  86  ,aud_g38
03:22:18  87  ,aud_g39
03:22:18  88  ,aud_g40
03:22:18  89  ,aud_g41
03:22:18  90  ,gbp_g00
03:22:18  91  ,gbp_g01
03:22:18  92  ,gbp_g02
03:22:18  93  ,gbp_g03
03:22:18  94  ,gbp_g04
03:22:18  95  ,gbp_g05
03:22:18  96  ,gbp_g06
03:22:18  97  ,gbp_g07
03:22:18  98  ,gbp_g08
03:22:18  99  ,gbp_g09
03:22:18 100  ,gbp_g10
03:22:18 101  ,gbp_g11
03:22:18 102  ,gbp_g12
03:22:18 103  ,gbp_g13
03:22:18 104  ,gbp_g14
03:22:18 105  ,gbp_g15
03:22:18 106  ,gbp_g16
03:22:18 107  ,gbp_g17
03:22:18 108  ,gbp_g18
03:22:18 109  ,gbp_g19
03:22:18 110  ,gbp_g20
03:22:18 111  ,gbp_g21
03:22:18 112  ,gbp_g22
03:22:18 113  ,gbp_g23
03:22:18 114  ,gbp_g24
03:22:18 115  ,gbp_g25
03:22:18 116  ,gbp_g26
03:22:18 117  ,gbp_g27
03:22:18 118  ,gbp_g28
03:22:18 119  ,gbp_g29
03:22:18 120  ,gbp_g30
03:22:18 121  ,gbp_g31
03:22:18 122  ,gbp_g32
03:22:18 123  ,gbp_g33
03:22:18 124  ,gbp_g34
03:22:18 125  ,gbp_g35
03:22:18 126  ,gbp_g36
03:22:18 127  ,gbp_g37
03:22:18 128  ,gbp_g38
03:22:18 129  ,gbp_g39
03:22:18 130  ,gbp_g40
03:22:18 131  ,gbp_g41
03:22:18 132  ,jpy_g00
03:22:18 133  ,jpy_g01
03:22:18 134  ,jpy_g02
03:22:18 135  ,jpy_g03
03:22:18 136  ,jpy_g04
03:22:18 137  ,jpy_g05
03:22:18 138  ,jpy_g06
03:22:18 139  ,jpy_g07
03:22:18 140  ,jpy_g08
03:22:18 141  ,jpy_g09
03:22:18 142  ,jpy_g10
03:22:18 143  ,jpy_g11
03:22:18 144  ,jpy_g12
03:22:18 145  ,jpy_g13
03:22:18 146  ,jpy_g14
03:22:18 147  ,jpy_g15
03:22:18 148  ,jpy_g16
03:22:18 149  ,jpy_g17
03:22:18 150  ,jpy_g18
03:22:18 151  ,jpy_g19
03:22:18 152  ,jpy_g20
03:22:18 153  ,jpy_g21
03:22:18 154  ,jpy_g22
03:22:18 155  ,jpy_g23
03:22:18 156  ,jpy_g24
03:22:18 157  ,jpy_g25
03:22:18 158  ,jpy_g26
03:22:18 159  ,jpy_g27
03:22:18 160  ,jpy_g28
03:22:18 161  ,jpy_g29
03:22:18 162  ,jpy_g30
03:22:18 163  ,jpy_g31
03:22:18 164  ,jpy_g32
03:22:18 165  ,jpy_g33
03:22:18 166  ,jpy_g34
03:22:18 167  ,jpy_g35
03:22:18 168  ,jpy_g36
03:22:18 169  ,jpy_g37
03:22:18 170  ,jpy_g38
03:22:18 171  ,jpy_g39
03:22:18 172  ,jpy_g40
03:22:18 173  ,jpy_g41
03:22:18 174  ,cad_g00
03:22:18 175  ,cad_g01
03:22:18 176  ,cad_g02
03:22:18 177  ,cad_g03
03:22:18 178  ,cad_g04
03:22:18 179  ,cad_g05
03:22:18 180  ,cad_g06
03:22:18 181  ,cad_g07
03:22:18 182  ,cad_g08
03:22:18 183  ,cad_g09
03:22:18 184  ,cad_g10
03:22:18 185  ,cad_g11
03:22:18 186  ,cad_g12
03:22:18 187  ,cad_g13
03:22:18 188  ,cad_g14
03:22:18 189  ,cad_g15
03:22:18 190  ,cad_g16
03:22:18 191  ,cad_g17
03:22:18 192  ,cad_g18
03:22:18 193  ,cad_g19
03:22:18 194  ,cad_g20
03:22:18 195  ,cad_g21
03:22:18 196  ,cad_g22
03:22:18 197  ,cad_g23
03:22:18 198  ,cad_g24
03:22:18 199  ,cad_g25
03:22:18 200  ,cad_g26
03:22:18 201  ,cad_g27
03:22:18 202  ,cad_g28
03:22:18 203  ,cad_g29
03:22:18 204  ,cad_g30
03:22:18 205  ,cad_g31
03:22:18 206  ,cad_g32
03:22:18 207  ,cad_g33
03:22:18 208  ,cad_g34
03:22:18 209  ,cad_g35
03:22:18 210  ,cad_g36
03:22:18 211  ,cad_g37
03:22:18 212  ,cad_g38
03:22:18 213  ,cad_g39
03:22:18 214  ,cad_g40
03:22:18 215  ,cad_g41
03:22:18 216  ,chf_g00
03:22:18 217  ,chf_g01
03:22:18 218  ,chf_g02
03:22:18 219  ,chf_g03
03:22:18 220  ,chf_g04
03:22:18 221  ,chf_g05
03:22:18 222  ,chf_g06
03:22:18 223  ,chf_g07
03:22:18 224  ,chf_g08
03:22:18 225  ,chf_g09
03:22:18 226  ,chf_g10
03:22:18 227  ,chf_g11
03:22:18 228  ,chf_g12
03:22:18 229  ,chf_g13
03:22:18 230  ,chf_g14
03:22:18 231  ,chf_g15
03:22:18 232  ,chf_g16
03:22:18 233  ,chf_g17
03:22:18 234  ,chf_g18
03:22:18 235  ,chf_g19
03:22:18 236  ,chf_g20
03:22:18 237  ,chf_g21
03:22:18 238  ,chf_g22
03:22:18 239  ,chf_g23
03:22:18 240  ,chf_g24
03:22:18 241  ,chf_g25
03:22:18 242  ,chf_g26
03:22:18 243  ,chf_g27
03:22:18 244  ,chf_g28
03:22:18 245  ,chf_g29
03:22:18 246  ,chf_g30
03:22:18 247  ,chf_g31
03:22:18 248  ,chf_g32
03:22:18 249  ,chf_g33
03:22:18 250  ,chf_g34
03:22:18 251  ,chf_g35
03:22:18 252  ,chf_g36
03:22:18 253  ,chf_g37
03:22:18 254  ,chf_g38
03:22:18 255  ,chf_g39
03:22:18 256  ,chf_g40
03:22:18 257  ,chf_g41
03:22:18 258  FROM aud_ms6 m
03:22:18 259  WHERE gatt IN('nup','up')
03:22:18 260  AND 1+m.ydate < '&1'||' '||'&2'
03:22:18 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'03:10:00'

View created.

Elapsed: 00:00:00.13
03:22:19 SQL> 
03:22:19 SQL> -- rpt
03:22:19 SQL> 
03:22:19 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
03:22:19   2  
03:22:19 SQL> SELECT MAX(prdate) FROM bme
03:22:19   2  
03:22:19 SQL> -- Now build model from bme and score sme
03:22:19 SQL> @score1.sql
03:22:19 SQL> -- score1.sql
03:22:19 SQL> 
03:22:19 SQL> -- Does the 1st SVM score
03:22:19 SQL> 
03:22:19 SQL> -- Fill up svmc_apply_prep
03:22:19 SQL> @score.sql
03:22:19 SQL> --
03:22:19 SQL> -- score.sql
03:22:19 SQL> --
03:22:19 SQL> 
03:22:19 SQL> -- usage: score.sql
03:22:19 SQL> 
03:22:19 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
03:22:19 SQL> 
03:22:19 SQL> DEFINE target	= 'gatt'
03:22:19 SQL> DEFINE model_name = 'forex14'
03:22:19 SQL> DEFINE bldtable	= 'bme'
03:22:19 SQL> DEFINE scoretable = 'sme'
03:22:19 SQL> DEFINE case_id	= 'prdate'
03:22:19 SQL> 
03:22:19 SQL> -- Define a variable to help me exclude some columns from some data mining calls
03:22:19 SQL> DEFINE exclude1 = "'&target','&case_id'"
03:22:19 SQL> 
03:22:19 SQL> -- Builds an SVM model using pl/sql.
03:22:19 SQL> 
03:22:19 SQL> -----------------------------------------------------------------------
03:22:19 SQL> --			    BUILD THE MODEL
03:22:19 SQL> -----------------------------------------------------------------------
03:22:19 SQL> 
03:22:19 SQL> -- Cleanup old build data preparation objects for repeat runs
03:22:19 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
03:22:19 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
03:22:19 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
03:22:19 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
03:22:19 SQL> 
03:22:19 SQL> 
03:22:19 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
03:22:19 SQL> --
03:22:19 SQL> -- DROP	TABLE svmc_settings ;
03:22:19 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
03:22:19 SQL> -- DELETE svmc_settings;
03:22:19 SQL> 
03:22:19 SQL> -- The default classification algorithm is Naive Bayes. So override
03:22:19 SQL> -- this choice to SVM using a settings table.
03:22:19 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
03:22:19 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
03:22:19 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
03:22:19 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
03:22:19 SQL> -- models.
03:22:19 SQL> --
03:22:19 SQL> 
03:22:19 SQL> -- Do this once and then comment it out.
03:22:19 SQL> -- That makes script go faster.
03:22:19 SQL> -- BEGIN
03:22:19 SQL> -- -- Populate settings table
03:22:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
03:22:19 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
03:22:19 SQL> --
03:22:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
03:22:19 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
03:22:19 SQL> --
03:22:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
03:22:19 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
03:22:19 SQL> --   COMMIT;
03:22:19 SQL> -- END;
03:22:19 SQL> -- /
03:22:19 SQL> 
03:22:19 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
03:22:19 SQL> 
03:22:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
03:22:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:22:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
03:22:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
03:22:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:22:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
03:22:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
03:22:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:22:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
03:22:19 SQL> 
03:22:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
03:22:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:22:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
03:22:19 SQL> 
03:22:19 SQL> --------------------------------
03:22:19 SQL> -- PREPARE BUILD (TRAINING) DATA
03:22:19 SQL> --
03:22:19 SQL> 
03:22:19 SQL> -- 1. Missing Value treatment for all Predictors and
03:22:19 SQL> -- 2. Outlier Treatment and
03:22:19 SQL> -- 3. Normalization are performed below.
03:22:19 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
03:22:19 SQL> --    normalized here.
03:22:19 SQL> 
03:22:19 SQL> BEGIN
03:22:19   2  	-- Perform missing value treatment for all predictors
03:22:19   3  	-- create miss tables
03:22:19   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
03:22:19   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
03:22:19   6  
03:22:19   7  	-- populate miss tables
03:22:19   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
03:22:19   9  	  miss_table_name => 'svmc_miss_num',
03:22:19  10  	  data_table_name => '&bldtable',
03:22:19  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:22:19  12  
03:22:19  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
03:22:19  14  	  miss_table_name => 'svmc_miss_cat',
03:22:19  15  	  data_table_name => '&bldtable',
03:22:19  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:22:19  17  
03:22:19  18  	-- xform input data to replace missing values
03:22:19  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
03:22:19  20  	  miss_table_name => 'svmc_miss_num',
03:22:19  21  	  data_table_name => '&bldtable',
03:22:19  22  	  xform_view_name => 'xformed_build_miss_num');
03:22:19  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
03:22:19  24  	  miss_table_name => 'svmc_miss_cat',
03:22:19  25  	  data_table_name => '&bldtable',
03:22:19  26  	  xform_view_name => 'xformed_build_miss_cat');
03:22:19  27  
03:22:19  28  	-- Perform outlier treatment.
03:22:19  29  	-- create clip table
03:22:19  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
03:22:19  31  
03:22:19  32  	-- populate clip table
03:22:19  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
03:22:19  34  	  clip_table_name => 'svmc_clip',
03:22:19  35  	  data_table_name => '&bldtable',
03:22:19  36  	  tail_frac	  => 0.025,
03:22:19  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:22:19  38  
03:22:19  39  	-- xform input data to winsorized data
03:22:19  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
03:22:19  41  	  clip_table_name => 'svmc_clip',
03:22:19  42  	  data_table_name => '&bldtable',
03:22:19  43  	  xform_view_name => 'svmc_winsor');
03:22:19  44  
03:22:19  45  	-- create normalization table
03:22:19  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
03:22:19  47  
03:22:19  48  	-- populate normalization table based on winsorized data
03:22:19  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
03:22:19  50  	  norm_table_name => 'svmc_norm',
03:22:19  51  	  data_table_name => 'svmc_winsor',
03:22:19  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:22:19  53  
03:22:19  54  	-- normalize the original data
03:22:19  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
03:22:19  56  	  norm_table_name => 'svmc_norm',
03:22:19  57  	  data_table_name => '&bldtable',
03:22:19  58  	  xform_view_name => 'svmc_build_prep');
03:22:19  59  END;
03:22:19  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.23
03:22:37 SQL> 
03:22:37 SQL> ---------------------
03:22:37 SQL> -- CREATE A NEW MODEL
03:22:37 SQL> --
03:22:37 SQL> -- Cleanup old model with the same name for repeat runs
03:22:37 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
03:22:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:22:37   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.92
03:22:38 SQL> 
03:22:38 SQL> -- Build a new SVM Model
03:22:38 SQL> BEGIN
03:22:38   2  	DBMS_DATA_MINING.CREATE_MODEL(
03:22:38   3  	  model_name	      => '&model_name',
03:22:38   4  	  mining_function     => dbms_data_mining.classification,
03:22:38   5  	  data_table_name     => 'svmc_build_prep',
03:22:38   6  	  case_id_column_name => '&case_id',
03:22:38   7  	  target_column_name  => '&target',
03:22:38   8  	  settings_table_name => 'svmc_settings');
03:22:38   9  END;
03:22:38  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.35
03:23:05 SQL> 
03:23:05 SQL> -----------------------------------------------------------------------
03:23:05 SQL> --			       APPLY/score THE MODEL
03:23:05 SQL> -----------------------------------------------------------------------
03:23:05 SQL> 
03:23:05 SQL> -- Cleanup old scoring data preparation objects for repeat runs
03:23:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
03:23:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:23:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
03:23:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
03:23:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:23:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
03:23:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
03:23:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:23:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
03:23:06 SQL> -----------------------
03:23:06 SQL> -- PREPARE SCORING DATA
03:23:06 SQL> --
03:23:06 SQL> -- If the data for model creation has been prepared, then the data
03:23:06 SQL> -- to be scored using the model must be prepared in the same manner
03:23:06 SQL> -- in order to obtain meaningful results.
03:23:06 SQL> --
03:23:06 SQL> -- 1. Missing Value treatment for all Predictors and
03:23:06 SQL> -- 2. Normalization
03:23:06 SQL> -- No outlier treatment will be performed during test and apply. The
03:23:06 SQL> -- normalization step is sufficient, since the normalization parameters
03:23:06 SQL> -- already capture the effects of outlier treatment done with build data.
03:23:06 SQL> --
03:23:06 SQL> BEGIN
03:23:06   2  	-- Xform Test data to replace missing values
03:23:06   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
03:23:06   4  	  miss_table_name => 'svmc_miss_num',
03:23:06   5  	  data_table_name => '&scoretable',
03:23:06   6  	  xform_view_name => 'xformed_apply_miss_num');
03:23:06   7  
03:23:06   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
03:23:06   9  	  miss_table_name => 'svmc_miss_cat',
03:23:06  10  	  data_table_name => '&scoretable',
03:23:06  11  	  xform_view_name => 'xformed_apply_miss_cat');
03:23:06  12  
03:23:06  13  	-- Normalize the data to be scored
03:23:06  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
03:23:06  15  	  norm_table_name => 'svmc_norm',
03:23:06  16  	  data_table_name => '&scoretable',
03:23:06  17  	  xform_view_name => 'svmc_apply_prep');
03:23:06  18  END;
03:23:06  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
03:23:07 SQL> 
03:23:07 SQL> -- Use same model_name used in score.sql
03:23:07 SQL> DEFINE model_name = 'forex14'
03:23:07 SQL> 
03:23:07 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
03:23:07 SQL> 
03:23:07 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
03:23:07 SQL> 
03:23:07 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
03:23:07   2  SELECT
03:23:07   3  prdate
03:23:07   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
03:23:07   5  ,sysdate
03:23:07   6  ,SUBSTR(prdate,1,3)pair
03:23:07   7  ,SUBSTR(prdate,4,19)ydate
03:23:07   8  FROM svmc_apply_prep
03:23:07   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
03:23:07 SQL> @aud_score1day_gattn.sql	2011-01-03 03:00:00
03:23:07 SQL> --
03:23:07 SQL> -- aud_score1day_gattn.sql
03:23:07 SQL> --
03:23:07 SQL> 
03:23:07 SQL> CREATE OR REPLACE VIEW sme AS
03:23:07   2  SELECT
03:23:07   3  'aud'||m.ydate prdate
03:23:07   4  ,NULL gattn
03:23:07   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
03:23:07   6  ,eur_g00
03:23:07   7  ,eur_g01
03:23:07   8  ,eur_g02
03:23:07   9  ,eur_g03
03:23:07  10  ,eur_g04
03:23:07  11  ,eur_g05
03:23:07  12  ,eur_g06
03:23:07  13  ,eur_g07
03:23:07  14  ,eur_g08
03:23:07  15  ,eur_g09
03:23:07  16  ,eur_g10
03:23:07  17  ,eur_g11
03:23:07  18  ,eur_g12
03:23:07  19  ,eur_g13
03:23:07  20  ,eur_g14
03:23:07  21  ,eur_g15
03:23:07  22  ,eur_g16
03:23:07  23  ,eur_g17
03:23:07  24  ,eur_g18
03:23:07  25  ,eur_g19
03:23:07  26  ,eur_g20
03:23:07  27  ,eur_g21
03:23:07  28  ,eur_g22
03:23:07  29  ,eur_g23
03:23:07  30  ,eur_g24
03:23:07  31  ,eur_g25
03:23:07  32  ,eur_g26
03:23:07  33  ,eur_g27
03:23:07  34  ,eur_g28
03:23:07  35  ,eur_g29
03:23:07  36  ,eur_g30
03:23:07  37  ,eur_g31
03:23:07  38  ,eur_g32
03:23:07  39  ,eur_g33
03:23:07  40  ,eur_g34
03:23:07  41  ,eur_g35
03:23:07  42  ,eur_g36
03:23:07  43  ,eur_g37
03:23:07  44  ,eur_g38
03:23:07  45  ,eur_g39
03:23:07  46  ,eur_g40
03:23:07  47  ,eur_g41
03:23:07  48  ,aud_g00
03:23:07  49  ,aud_g01
03:23:07  50  ,aud_g02
03:23:07  51  ,aud_g03
03:23:07  52  ,aud_g04
03:23:07  53  ,aud_g05
03:23:07  54  ,aud_g06
03:23:07  55  ,aud_g07
03:23:07  56  ,aud_g08
03:23:07  57  ,aud_g09
03:23:07  58  ,aud_g10
03:23:07  59  ,aud_g11
03:23:07  60  ,aud_g12
03:23:07  61  ,aud_g13
03:23:07  62  ,aud_g14
03:23:07  63  ,aud_g15
03:23:07  64  ,aud_g16
03:23:07  65  ,aud_g17
03:23:07  66  ,aud_g18
03:23:07  67  ,aud_g19
03:23:07  68  ,aud_g20
03:23:07  69  ,aud_g21
03:23:07  70  ,aud_g22
03:23:07  71  ,aud_g23
03:23:07  72  ,aud_g24
03:23:07  73  ,aud_g25
03:23:07  74  ,aud_g26
03:23:07  75  ,aud_g27
03:23:07  76  ,aud_g28
03:23:07  77  ,aud_g29
03:23:07  78  ,aud_g30
03:23:07  79  ,aud_g31
03:23:07  80  ,aud_g32
03:23:07  81  ,aud_g33
03:23:07  82  ,aud_g34
03:23:07  83  ,aud_g35
03:23:07  84  ,aud_g36
03:23:07  85  ,aud_g37
03:23:07  86  ,aud_g38
03:23:07  87  ,aud_g39
03:23:07  88  ,aud_g40
03:23:07  89  ,aud_g41
03:23:07  90  ,gbp_g00
03:23:07  91  ,gbp_g01
03:23:07  92  ,gbp_g02
03:23:07  93  ,gbp_g03
03:23:07  94  ,gbp_g04
03:23:07  95  ,gbp_g05
03:23:07  96  ,gbp_g06
03:23:07  97  ,gbp_g07
03:23:07  98  ,gbp_g08
03:23:07  99  ,gbp_g09
03:23:07 100  ,gbp_g10
03:23:07 101  ,gbp_g11
03:23:07 102  ,gbp_g12
03:23:07 103  ,gbp_g13
03:23:07 104  ,gbp_g14
03:23:07 105  ,gbp_g15
03:23:07 106  ,gbp_g16
03:23:07 107  ,gbp_g17
03:23:07 108  ,gbp_g18
03:23:07 109  ,gbp_g19
03:23:07 110  ,gbp_g20
03:23:07 111  ,gbp_g21
03:23:07 112  ,gbp_g22
03:23:07 113  ,gbp_g23
03:23:07 114  ,gbp_g24
03:23:07 115  ,gbp_g25
03:23:07 116  ,gbp_g26
03:23:07 117  ,gbp_g27
03:23:07 118  ,gbp_g28
03:23:07 119  ,gbp_g29
03:23:07 120  ,gbp_g30
03:23:07 121  ,gbp_g31
03:23:07 122  ,gbp_g32
03:23:07 123  ,gbp_g33
03:23:07 124  ,gbp_g34
03:23:07 125  ,gbp_g35
03:23:07 126  ,gbp_g36
03:23:07 127  ,gbp_g37
03:23:07 128  ,gbp_g38
03:23:07 129  ,gbp_g39
03:23:07 130  ,gbp_g40
03:23:07 131  ,gbp_g41
03:23:07 132  ,jpy_g00
03:23:07 133  ,jpy_g01
03:23:07 134  ,jpy_g02
03:23:07 135  ,jpy_g03
03:23:07 136  ,jpy_g04
03:23:07 137  ,jpy_g05
03:23:07 138  ,jpy_g06
03:23:07 139  ,jpy_g07
03:23:07 140  ,jpy_g08
03:23:07 141  ,jpy_g09
03:23:07 142  ,jpy_g10
03:23:07 143  ,jpy_g11
03:23:07 144  ,jpy_g12
03:23:07 145  ,jpy_g13
03:23:07 146  ,jpy_g14
03:23:07 147  ,jpy_g15
03:23:07 148  ,jpy_g16
03:23:07 149  ,jpy_g17
03:23:07 150  ,jpy_g18
03:23:07 151  ,jpy_g19
03:23:07 152  ,jpy_g20
03:23:07 153  ,jpy_g21
03:23:07 154  ,jpy_g22
03:23:07 155  ,jpy_g23
03:23:07 156  ,jpy_g24
03:23:07 157  ,jpy_g25
03:23:07 158  ,jpy_g26
03:23:07 159  ,jpy_g27
03:23:07 160  ,jpy_g28
03:23:07 161  ,jpy_g29
03:23:07 162  ,jpy_g30
03:23:07 163  ,jpy_g31
03:23:07 164  ,jpy_g32
03:23:07 165  ,jpy_g33
03:23:07 166  ,jpy_g34
03:23:07 167  ,jpy_g35
03:23:07 168  ,jpy_g36
03:23:07 169  ,jpy_g37
03:23:07 170  ,jpy_g38
03:23:07 171  ,jpy_g39
03:23:07 172  ,jpy_g40
03:23:07 173  ,jpy_g41
03:23:07 174  ,cad_g00
03:23:07 175  ,cad_g01
03:23:07 176  ,cad_g02
03:23:07 177  ,cad_g03
03:23:07 178  ,cad_g04
03:23:07 179  ,cad_g05
03:23:07 180  ,cad_g06
03:23:07 181  ,cad_g07
03:23:07 182  ,cad_g08
03:23:07 183  ,cad_g09
03:23:07 184  ,cad_g10
03:23:07 185  ,cad_g11
03:23:07 186  ,cad_g12
03:23:07 187  ,cad_g13
03:23:07 188  ,cad_g14
03:23:07 189  ,cad_g15
03:23:07 190  ,cad_g16
03:23:07 191  ,cad_g17
03:23:07 192  ,cad_g18
03:23:07 193  ,cad_g19
03:23:07 194  ,cad_g20
03:23:07 195  ,cad_g21
03:23:07 196  ,cad_g22
03:23:07 197  ,cad_g23
03:23:07 198  ,cad_g24
03:23:07 199  ,cad_g25
03:23:07 200  ,cad_g26
03:23:07 201  ,cad_g27
03:23:07 202  ,cad_g28
03:23:07 203  ,cad_g29
03:23:07 204  ,cad_g30
03:23:07 205  ,cad_g31
03:23:07 206  ,cad_g32
03:23:07 207  ,cad_g33
03:23:07 208  ,cad_g34
03:23:07 209  ,cad_g35
03:23:07 210  ,cad_g36
03:23:07 211  ,cad_g37
03:23:07 212  ,cad_g38
03:23:07 213  ,cad_g39
03:23:07 214  ,cad_g40
03:23:07 215  ,cad_g41
03:23:07 216  ,chf_g00
03:23:07 217  ,chf_g01
03:23:07 218  ,chf_g02
03:23:07 219  ,chf_g03
03:23:07 220  ,chf_g04
03:23:07 221  ,chf_g05
03:23:07 222  ,chf_g06
03:23:07 223  ,chf_g07
03:23:07 224  ,chf_g08
03:23:07 225  ,chf_g09
03:23:07 226  ,chf_g10
03:23:07 227  ,chf_g11
03:23:07 228  ,chf_g12
03:23:07 229  ,chf_g13
03:23:07 230  ,chf_g14
03:23:07 231  ,chf_g15
03:23:07 232  ,chf_g16
03:23:07 233  ,chf_g17
03:23:07 234  ,chf_g18
03:23:07 235  ,chf_g19
03:23:07 236  ,chf_g20
03:23:07 237  ,chf_g21
03:23:07 238  ,chf_g22
03:23:07 239  ,chf_g23
03:23:07 240  ,chf_g24
03:23:07 241  ,chf_g25
03:23:07 242  ,chf_g26
03:23:07 243  ,chf_g27
03:23:07 244  ,chf_g28
03:23:07 245  ,chf_g29
03:23:07 246  ,chf_g30
03:23:07 247  ,chf_g31
03:23:07 248  ,chf_g32
03:23:07 249  ,chf_g33
03:23:07 250  ,chf_g34
03:23:07 251  ,chf_g35
03:23:07 252  ,chf_g36
03:23:07 253  ,chf_g37
03:23:07 254  ,chf_g38
03:23:07 255  ,chf_g39
03:23:07 256  ,chf_g40
03:23:07 257  ,chf_g41
03:23:07 258  FROM aud_ms6 m
03:23:07 259  WHERE m.ydate = '&1'||' '||'&2'
03:23:07 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'03:00:00'

View created.

Elapsed: 00:00:00.13
03:23:07 SQL> 
03:23:07 SQL> -- rpt
03:23:07 SQL> -- We should see just 1 row:
03:23:07 SQL> 
03:23:07 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
03:23:07 SQL> 
03:23:07 SQL> -- Build the model:
03:23:07 SQL> CREATE OR REPLACE VIEW bme AS
03:23:07   2  SELECT
03:23:07   3  'aud'||m.ydate prdate
03:23:07   4  ,gattn
03:23:07   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
03:23:07   6  ,eur_g00
03:23:07   7  ,eur_g01
03:23:07   8  ,eur_g02
03:23:07   9  ,eur_g03
03:23:07  10  ,eur_g04
03:23:07  11  ,eur_g05
03:23:07  12  ,eur_g06
03:23:07  13  ,eur_g07
03:23:07  14  ,eur_g08
03:23:07  15  ,eur_g09
03:23:07  16  ,eur_g10
03:23:07  17  ,eur_g11
03:23:07  18  ,eur_g12
03:23:07  19  ,eur_g13
03:23:07  20  ,eur_g14
03:23:07  21  ,eur_g15
03:23:07  22  ,eur_g16
03:23:07  23  ,eur_g17
03:23:07  24  ,eur_g18
03:23:07  25  ,eur_g19
03:23:07  26  ,eur_g20
03:23:07  27  ,eur_g21
03:23:07  28  ,eur_g22
03:23:07  29  ,eur_g23
03:23:07  30  ,eur_g24
03:23:07  31  ,eur_g25
03:23:07  32  ,eur_g26
03:23:07  33  ,eur_g27
03:23:07  34  ,eur_g28
03:23:07  35  ,eur_g29
03:23:07  36  ,eur_g30
03:23:07  37  ,eur_g31
03:23:07  38  ,eur_g32
03:23:07  39  ,eur_g33
03:23:07  40  ,eur_g34
03:23:07  41  ,eur_g35
03:23:07  42  ,eur_g36
03:23:07  43  ,eur_g37
03:23:07  44  ,eur_g38
03:23:07  45  ,eur_g39
03:23:07  46  ,eur_g40
03:23:07  47  ,eur_g41
03:23:07  48  ,aud_g00
03:23:07  49  ,aud_g01
03:23:07  50  ,aud_g02
03:23:07  51  ,aud_g03
03:23:07  52  ,aud_g04
03:23:07  53  ,aud_g05
03:23:07  54  ,aud_g06
03:23:07  55  ,aud_g07
03:23:07  56  ,aud_g08
03:23:07  57  ,aud_g09
03:23:07  58  ,aud_g10
03:23:07  59  ,aud_g11
03:23:07  60  ,aud_g12
03:23:07  61  ,aud_g13
03:23:07  62  ,aud_g14
03:23:07  63  ,aud_g15
03:23:07  64  ,aud_g16
03:23:07  65  ,aud_g17
03:23:07  66  ,aud_g18
03:23:07  67  ,aud_g19
03:23:07  68  ,aud_g20
03:23:07  69  ,aud_g21
03:23:07  70  ,aud_g22
03:23:07  71  ,aud_g23
03:23:07  72  ,aud_g24
03:23:07  73  ,aud_g25
03:23:07  74  ,aud_g26
03:23:07  75  ,aud_g27
03:23:07  76  ,aud_g28
03:23:07  77  ,aud_g29
03:23:07  78  ,aud_g30
03:23:07  79  ,aud_g31
03:23:07  80  ,aud_g32
03:23:07  81  ,aud_g33
03:23:07  82  ,aud_g34
03:23:07  83  ,aud_g35
03:23:07  84  ,aud_g36
03:23:07  85  ,aud_g37
03:23:07  86  ,aud_g38
03:23:07  87  ,aud_g39
03:23:07  88  ,aud_g40
03:23:07  89  ,aud_g41
03:23:07  90  ,gbp_g00
03:23:07  91  ,gbp_g01
03:23:07  92  ,gbp_g02
03:23:07  93  ,gbp_g03
03:23:07  94  ,gbp_g04
03:23:07  95  ,gbp_g05
03:23:07  96  ,gbp_g06
03:23:07  97  ,gbp_g07
03:23:07  98  ,gbp_g08
03:23:07  99  ,gbp_g09
03:23:07 100  ,gbp_g10
03:23:07 101  ,gbp_g11
03:23:07 102  ,gbp_g12
03:23:07 103  ,gbp_g13
03:23:07 104  ,gbp_g14
03:23:07 105  ,gbp_g15
03:23:07 106  ,gbp_g16
03:23:07 107  ,gbp_g17
03:23:07 108  ,gbp_g18
03:23:07 109  ,gbp_g19
03:23:07 110  ,gbp_g20
03:23:07 111  ,gbp_g21
03:23:07 112  ,gbp_g22
03:23:07 113  ,gbp_g23
03:23:07 114  ,gbp_g24
03:23:07 115  ,gbp_g25
03:23:07 116  ,gbp_g26
03:23:07 117  ,gbp_g27
03:23:07 118  ,gbp_g28
03:23:07 119  ,gbp_g29
03:23:07 120  ,gbp_g30
03:23:07 121  ,gbp_g31
03:23:07 122  ,gbp_g32
03:23:07 123  ,gbp_g33
03:23:07 124  ,gbp_g34
03:23:07 125  ,gbp_g35
03:23:07 126  ,gbp_g36
03:23:07 127  ,gbp_g37
03:23:07 128  ,gbp_g38
03:23:07 129  ,gbp_g39
03:23:07 130  ,gbp_g40
03:23:07 131  ,gbp_g41
03:23:07 132  ,jpy_g00
03:23:07 133  ,jpy_g01
03:23:07 134  ,jpy_g02
03:23:07 135  ,jpy_g03
03:23:07 136  ,jpy_g04
03:23:07 137  ,jpy_g05
03:23:07 138  ,jpy_g06
03:23:07 139  ,jpy_g07
03:23:07 140  ,jpy_g08
03:23:07 141  ,jpy_g09
03:23:07 142  ,jpy_g10
03:23:07 143  ,jpy_g11
03:23:07 144  ,jpy_g12
03:23:07 145  ,jpy_g13
03:23:07 146  ,jpy_g14
03:23:07 147  ,jpy_g15
03:23:07 148  ,jpy_g16
03:23:07 149  ,jpy_g17
03:23:07 150  ,jpy_g18
03:23:07 151  ,jpy_g19
03:23:07 152  ,jpy_g20
03:23:07 153  ,jpy_g21
03:23:07 154  ,jpy_g22
03:23:07 155  ,jpy_g23
03:23:07 156  ,jpy_g24
03:23:07 157  ,jpy_g25
03:23:07 158  ,jpy_g26
03:23:07 159  ,jpy_g27
03:23:07 160  ,jpy_g28
03:23:07 161  ,jpy_g29
03:23:07 162  ,jpy_g30
03:23:07 163  ,jpy_g31
03:23:07 164  ,jpy_g32
03:23:07 165  ,jpy_g33
03:23:07 166  ,jpy_g34
03:23:07 167  ,jpy_g35
03:23:07 168  ,jpy_g36
03:23:07 169  ,jpy_g37
03:23:07 170  ,jpy_g38
03:23:07 171  ,jpy_g39
03:23:07 172  ,jpy_g40
03:23:07 173  ,jpy_g41
03:23:07 174  ,cad_g00
03:23:07 175  ,cad_g01
03:23:07 176  ,cad_g02
03:23:07 177  ,cad_g03
03:23:07 178  ,cad_g04
03:23:07 179  ,cad_g05
03:23:07 180  ,cad_g06
03:23:07 181  ,cad_g07
03:23:07 182  ,cad_g08
03:23:07 183  ,cad_g09
03:23:07 184  ,cad_g10
03:23:07 185  ,cad_g11
03:23:07 186  ,cad_g12
03:23:07 187  ,cad_g13
03:23:07 188  ,cad_g14
03:23:07 189  ,cad_g15
03:23:07 190  ,cad_g16
03:23:07 191  ,cad_g17
03:23:07 192  ,cad_g18
03:23:07 193  ,cad_g19
03:23:07 194  ,cad_g20
03:23:07 195  ,cad_g21
03:23:07 196  ,cad_g22
03:23:07 197  ,cad_g23
03:23:07 198  ,cad_g24
03:23:07 199  ,cad_g25
03:23:07 200  ,cad_g26
03:23:07 201  ,cad_g27
03:23:07 202  ,cad_g28
03:23:07 203  ,cad_g29
03:23:07 204  ,cad_g30
03:23:07 205  ,cad_g31
03:23:07 206  ,cad_g32
03:23:07 207  ,cad_g33
03:23:07 208  ,cad_g34
03:23:07 209  ,cad_g35
03:23:07 210  ,cad_g36
03:23:07 211  ,cad_g37
03:23:07 212  ,cad_g38
03:23:07 213  ,cad_g39
03:23:07 214  ,cad_g40
03:23:07 215  ,cad_g41
03:23:07 216  ,chf_g00
03:23:07 217  ,chf_g01
03:23:07 218  ,chf_g02
03:23:07 219  ,chf_g03
03:23:07 220  ,chf_g04
03:23:07 221  ,chf_g05
03:23:07 222  ,chf_g06
03:23:07 223  ,chf_g07
03:23:07 224  ,chf_g08
03:23:07 225  ,chf_g09
03:23:07 226  ,chf_g10
03:23:07 227  ,chf_g11
03:23:07 228  ,chf_g12
03:23:07 229  ,chf_g13
03:23:07 230  ,chf_g14
03:23:07 231  ,chf_g15
03:23:07 232  ,chf_g16
03:23:07 233  ,chf_g17
03:23:07 234  ,chf_g18
03:23:07 235  ,chf_g19
03:23:07 236  ,chf_g20
03:23:07 237  ,chf_g21
03:23:07 238  ,chf_g22
03:23:07 239  ,chf_g23
03:23:07 240  ,chf_g24
03:23:07 241  ,chf_g25
03:23:07 242  ,chf_g26
03:23:07 243  ,chf_g27
03:23:07 244  ,chf_g28
03:23:07 245  ,chf_g29
03:23:07 246  ,chf_g30
03:23:07 247  ,chf_g31
03:23:07 248  ,chf_g32
03:23:07 249  ,chf_g33
03:23:07 250  ,chf_g34
03:23:07 251  ,chf_g35
03:23:07 252  ,chf_g36
03:23:07 253  ,chf_g37
03:23:07 254  ,chf_g38
03:23:07 255  ,chf_g39
03:23:07 256  ,chf_g40
03:23:07 257  ,chf_g41
03:23:07 258  FROM aud_ms6 m
03:23:07 259  WHERE gattn IN('nup','up')
03:23:07 260  AND 1+m.ydate < '&1'||' '||'&2'
03:23:07 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'03:00:00'

View created.

Elapsed: 00:00:00.13
03:23:07 SQL> 
03:23:07 SQL> -- rpt
03:23:07 SQL> 
03:23:07 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12851
up	     6322

Elapsed: 00:00:00.04
03:23:07 SQL> 
03:23:07 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 20:55:00

Elapsed: 00:00:00.04
03:23:07 SQL> 
03:23:07 SQL> -- Now build model from bme and score sme
03:23:07 SQL> @score1gattn.sql
03:23:07 SQL> -- score1gattn.sql
03:23:07 SQL> 
03:23:07 SQL> -- Does the 1st SVM score
03:23:07 SQL> 
03:23:07 SQL> -- Fill up svmc_apply_prep
03:23:07 SQL> @score_gattn.sql
03:23:07 SQL> --
03:23:07 SQL> -- score_gattn.sql
03:23:07 SQL> --
03:23:07 SQL> 
03:23:07 SQL> -- usage: score_gattn.sql
03:23:07 SQL> 
03:23:07 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
03:23:07 SQL> 
03:23:07 SQL> DEFINE target	= 'gattn'
03:23:07 SQL> DEFINE model_name = 'forex14'
03:23:07 SQL> DEFINE bldtable	= 'bme'
03:23:07 SQL> DEFINE scoretable = 'sme'
03:23:07 SQL> DEFINE case_id	= 'prdate'
03:23:07 SQL> 
03:23:07 SQL> -- Define a variable to help me exclude some columns from some data mining calls
03:23:07 SQL> DEFINE exclude1 = "'&target','&case_id'"
03:23:07 SQL> 
03:23:07 SQL> -- Builds an SVM model using pl/sql.
03:23:07 SQL> 
03:23:07 SQL> -----------------------------------------------------------------------
03:23:07 SQL> --			    BUILD THE MODEL
03:23:07 SQL> -----------------------------------------------------------------------
03:23:07 SQL> 
03:23:07 SQL> -- Cleanup old build data preparation objects for repeat runs
03:23:07 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
03:23:07 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
03:23:07 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
03:23:07 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
03:23:07 SQL> 
03:23:07 SQL> 
03:23:07 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
03:23:07 SQL> --
03:23:07 SQL> -- DROP	TABLE svmc_settings ;
03:23:07 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
03:23:07 SQL> -- DELETE svmc_settings;
03:23:07 SQL> 
03:23:07 SQL> -- The default classification algorithm is Naive Bayes. So override
03:23:07 SQL> -- this choice to SVM using a settings table.
03:23:07 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
03:23:07 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
03:23:07 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
03:23:07 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
03:23:07 SQL> -- models.
03:23:07 SQL> --
03:23:07 SQL> 
03:23:07 SQL> -- Do this once and then comment it out.
03:23:07 SQL> -- That makes script go faster.
03:23:07 SQL> -- BEGIN
03:23:07 SQL> -- -- Populate settings table
03:23:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
03:23:07 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
03:23:07 SQL> --
03:23:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
03:23:07 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
03:23:07 SQL> --
03:23:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
03:23:07 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
03:23:07 SQL> --   COMMIT;
03:23:07 SQL> -- END;
03:23:07 SQL> -- /
03:23:07 SQL> 
03:23:07 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
03:23:07 SQL> 
03:23:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
03:23:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:23:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
03:23:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
03:23:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:23:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
03:23:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
03:23:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:23:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
03:23:08 SQL> 
03:23:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
03:23:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:23:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
03:23:08 SQL> 
03:23:08 SQL> --------------------------------
03:23:08 SQL> -- PREPARE BUILD (TRAINING) DATA
03:23:08 SQL> --
03:23:08 SQL> 
03:23:08 SQL> -- 1. Missing Value treatment for all Predictors and
03:23:08 SQL> -- 2. Outlier Treatment and
03:23:08 SQL> -- 3. Normalization are performed below.
03:23:08 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
03:23:08 SQL> --    normalized here.
03:23:08 SQL> 
03:23:08 SQL> BEGIN
03:23:08   2  	-- Perform missing value treatment for all predictors
03:23:08   3  	-- create miss tables
03:23:08   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
03:23:08   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
03:23:08   6  
03:23:08   7  	-- populate miss tables
03:23:08   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
03:23:08   9  	  miss_table_name => 'svmc_miss_num',
03:23:08  10  	  data_table_name => '&bldtable',
03:23:08  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:23:08  12  
03:23:08  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
03:23:08  14  	  miss_table_name => 'svmc_miss_cat',
03:23:08  15  	  data_table_name => '&bldtable',
03:23:08  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:23:08  17  
03:23:08  18  	-- xform input data to replace missing values
03:23:08  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
03:23:08  20  	  miss_table_name => 'svmc_miss_num',
03:23:08  21  	  data_table_name => '&bldtable',
03:23:08  22  	  xform_view_name => 'xformed_build_miss_num');
03:23:08  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
03:23:08  24  	  miss_table_name => 'svmc_miss_cat',
03:23:08  25  	  data_table_name => '&bldtable',
03:23:08  26  	  xform_view_name => 'xformed_build_miss_cat');
03:23:08  27  
03:23:08  28  	-- Perform outlier treatment.
03:23:08  29  	-- create clip table
03:23:08  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
03:23:08  31  
03:23:08  32  	-- populate clip table
03:23:08  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
03:23:08  34  	  clip_table_name => 'svmc_clip',
03:23:08  35  	  data_table_name => '&bldtable',
03:23:08  36  	  tail_frac	  => 0.025,
03:23:08  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:23:08  38  
03:23:08  39  	-- xform input data to winsorized data
03:23:08  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
03:23:08  41  	  clip_table_name => 'svmc_clip',
03:23:08  42  	  data_table_name => '&bldtable',
03:23:08  43  	  xform_view_name => 'svmc_winsor');
03:23:08  44  
03:23:08  45  	-- create normalization table
03:23:08  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
03:23:08  47  
03:23:08  48  	-- populate normalization table based on winsorized data
03:23:08  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
03:23:08  50  	  norm_table_name => 'svmc_norm',
03:23:08  51  	  data_table_name => 'svmc_winsor',
03:23:08  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
03:23:08  53  
03:23:08  54  	-- normalize the original data
03:23:08  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
03:23:08  56  	  norm_table_name => 'svmc_norm',
03:23:08  57  	  data_table_name => '&bldtable',
03:23:08  58  	  xform_view_name => 'svmc_build_prep');
03:23:08  59  END;
03:23:08  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.42
03:23:27 SQL> 
03:23:27 SQL> ---------------------
03:23:27 SQL> -- CREATE A NEW MODEL
03:23:27 SQL> --
03:23:27 SQL> -- Cleanup old model with the same name for repeat runs
03:23:27 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
03:23:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
03:23:27   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.24
03:23:28 SQL> 
03:23:28 SQL> -- Build a new SVM Model
03:23:28 SQL> BEGIN
03:23:28   2  	DBMS_DATA_MINING.CREATE_MODEL(
03:23:28   3  	  model_name	      => '&model_name',
03:23:28   4  	  mining_function     => dbms_data_mining.classification,
03:23:28   5  	  data_table_name     => 'svmc_build_prep',
03:23:28   6  	  case_id_column_name => '&case_id',
03:23:28   7  	  target_column_name  => '&target',
03:23:28   8  	  settings_table_name => 'svmc_settings');
03:23:28   9  END;
03:23:28  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',
