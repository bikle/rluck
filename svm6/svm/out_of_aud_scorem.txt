
SQL*Plus: Release 11.2.0.1.0 Production on Fri Dec 31 09:15:20 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

09:15:21 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
09:15:21 SQL> 09:15:21 SQL> @aud_score1day.sql  2010-12-31 08:55:00
09:15:21 SQL> --
09:15:21 SQL> -- aud_score1day.sql
09:15:21 SQL> --
09:15:21 SQL> 
09:15:21 SQL> CREATE OR REPLACE VIEW sme AS
09:15:21   2  SELECT
09:15:21   3  'aud'||m.ydate prdate
09:15:21   4  ,NULL gatt
09:15:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
09:15:21   6  ,eur_g00
09:15:21   7  ,eur_g01
09:15:21   8  ,eur_g02
09:15:21   9  ,eur_g03
09:15:21  10  ,eur_g04
09:15:21  11  ,eur_g05
09:15:21  12  ,eur_g06
09:15:21  13  ,eur_g07
09:15:21  14  ,eur_g08
09:15:21  15  ,eur_g09
09:15:21  16  ,eur_g10
09:15:21  17  ,eur_g11
09:15:21  18  ,eur_g12
09:15:21  19  ,eur_g13
09:15:21  20  ,eur_g14
09:15:21  21  ,eur_g15
09:15:21  22  ,eur_g16
09:15:21  23  ,eur_g17
09:15:21  24  ,eur_g18
09:15:21  25  ,eur_g19
09:15:21  26  ,eur_g20
09:15:21  27  ,eur_g21
09:15:21  28  ,eur_g22
09:15:21  29  ,eur_g23
09:15:21  30  ,eur_g24
09:15:21  31  ,eur_g25
09:15:21  32  ,eur_g26
09:15:21  33  ,eur_g27
09:15:21  34  ,eur_g28
09:15:21  35  ,eur_g29
09:15:21  36  ,eur_g30
09:15:21  37  ,eur_g31
09:15:21  38  ,eur_g32
09:15:21  39  ,eur_g33
09:15:21  40  ,eur_g34
09:15:21  41  ,eur_g35
09:15:21  42  ,eur_g36
09:15:21  43  ,eur_g37
09:15:21  44  ,eur_g38
09:15:21  45  ,eur_g39
09:15:21  46  ,eur_g40
09:15:21  47  ,eur_g41
09:15:21  48  ,aud_g00
09:15:21  49  ,aud_g01
09:15:21  50  ,aud_g02
09:15:21  51  ,aud_g03
09:15:21  52  ,aud_g04
09:15:21  53  ,aud_g05
09:15:21  54  ,aud_g06
09:15:21  55  ,aud_g07
09:15:21  56  ,aud_g08
09:15:21  57  ,aud_g09
09:15:21  58  ,aud_g10
09:15:21  59  ,aud_g11
09:15:21  60  ,aud_g12
09:15:21  61  ,aud_g13
09:15:21  62  ,aud_g14
09:15:21  63  ,aud_g15
09:15:21  64  ,aud_g16
09:15:21  65  ,aud_g17
09:15:21  66  ,aud_g18
09:15:21  67  ,aud_g19
09:15:21  68  ,aud_g20
09:15:21  69  ,aud_g21
09:15:21  70  ,aud_g22
09:15:21  71  ,aud_g23
09:15:21  72  ,aud_g24
09:15:21  73  ,aud_g25
09:15:21  74  ,aud_g26
09:15:21  75  ,aud_g27
09:15:21  76  ,aud_g28
09:15:21  77  ,aud_g29
09:15:21  78  ,aud_g30
09:15:21  79  ,aud_g31
09:15:21  80  ,aud_g32
09:15:21  81  ,aud_g33
09:15:21  82  ,aud_g34
09:15:21  83  ,aud_g35
09:15:21  84  ,aud_g36
09:15:21  85  ,aud_g37
09:15:21  86  ,aud_g38
09:15:21  87  ,aud_g39
09:15:21  88  ,aud_g40
09:15:21  89  ,aud_g41
09:15:21  90  ,gbp_g00
09:15:21  91  ,gbp_g01
09:15:21  92  ,gbp_g02
09:15:21  93  ,gbp_g03
09:15:21  94  ,gbp_g04
09:15:21  95  ,gbp_g05
09:15:21  96  ,gbp_g06
09:15:21  97  ,gbp_g07
09:15:21  98  ,gbp_g08
09:15:21  99  ,gbp_g09
09:15:21 100  ,gbp_g10
09:15:21 101  ,gbp_g11
09:15:21 102  ,gbp_g12
09:15:21 103  ,gbp_g13
09:15:21 104  ,gbp_g14
09:15:21 105  ,gbp_g15
09:15:21 106  ,gbp_g16
09:15:21 107  ,gbp_g17
09:15:21 108  ,gbp_g18
09:15:21 109  ,gbp_g19
09:15:21 110  ,gbp_g20
09:15:21 111  ,gbp_g21
09:15:21 112  ,gbp_g22
09:15:21 113  ,gbp_g23
09:15:21 114  ,gbp_g24
09:15:21 115  ,gbp_g25
09:15:21 116  ,gbp_g26
09:15:21 117  ,gbp_g27
09:15:21 118  ,gbp_g28
09:15:21 119  ,gbp_g29
09:15:21 120  ,gbp_g30
09:15:21 121  ,gbp_g31
09:15:21 122  ,gbp_g32
09:15:21 123  ,gbp_g33
09:15:21 124  ,gbp_g34
09:15:21 125  ,gbp_g35
09:15:21 126  ,gbp_g36
09:15:21 127  ,gbp_g37
09:15:21 128  ,gbp_g38
09:15:21 129  ,gbp_g39
09:15:21 130  ,gbp_g40
09:15:21 131  ,gbp_g41
09:15:21 132  ,jpy_g00
09:15:21 133  ,jpy_g01
09:15:21 134  ,jpy_g02
09:15:21 135  ,jpy_g03
09:15:21 136  ,jpy_g04
09:15:21 137  ,jpy_g05
09:15:21 138  ,jpy_g06
09:15:21 139  ,jpy_g07
09:15:21 140  ,jpy_g08
09:15:21 141  ,jpy_g09
09:15:21 142  ,jpy_g10
09:15:21 143  ,jpy_g11
09:15:21 144  ,jpy_g12
09:15:21 145  ,jpy_g13
09:15:21 146  ,jpy_g14
09:15:21 147  ,jpy_g15
09:15:21 148  ,jpy_g16
09:15:21 149  ,jpy_g17
09:15:21 150  ,jpy_g18
09:15:21 151  ,jpy_g19
09:15:21 152  ,jpy_g20
09:15:21 153  ,jpy_g21
09:15:21 154  ,jpy_g22
09:15:21 155  ,jpy_g23
09:15:21 156  ,jpy_g24
09:15:21 157  ,jpy_g25
09:15:21 158  ,jpy_g26
09:15:21 159  ,jpy_g27
09:15:21 160  ,jpy_g28
09:15:21 161  ,jpy_g29
09:15:21 162  ,jpy_g30
09:15:21 163  ,jpy_g31
09:15:21 164  ,jpy_g32
09:15:21 165  ,jpy_g33
09:15:21 166  ,jpy_g34
09:15:21 167  ,jpy_g35
09:15:21 168  ,jpy_g36
09:15:21 169  ,jpy_g37
09:15:21 170  ,jpy_g38
09:15:21 171  ,jpy_g39
09:15:21 172  ,jpy_g40
09:15:21 173  ,jpy_g41
09:15:21 174  ,cad_g00
09:15:21 175  ,cad_g01
09:15:21 176  ,cad_g02
09:15:21 177  ,cad_g03
09:15:21 178  ,cad_g04
09:15:21 179  ,cad_g05
09:15:21 180  ,cad_g06
09:15:21 181  ,cad_g07
09:15:21 182  ,cad_g08
09:15:21 183  ,cad_g09
09:15:21 184  ,cad_g10
09:15:21 185  ,cad_g11
09:15:21 186  ,cad_g12
09:15:21 187  ,cad_g13
09:15:21 188  ,cad_g14
09:15:21 189  ,cad_g15
09:15:21 190  ,cad_g16
09:15:21 191  ,cad_g17
09:15:21 192  ,cad_g18
09:15:21 193  ,cad_g19
09:15:21 194  ,cad_g20
09:15:21 195  ,cad_g21
09:15:21 196  ,cad_g22
09:15:21 197  ,cad_g23
09:15:21 198  ,cad_g24
09:15:21 199  ,cad_g25
09:15:21 200  ,cad_g26
09:15:21 201  ,cad_g27
09:15:21 202  ,cad_g28
09:15:21 203  ,cad_g29
09:15:21 204  ,cad_g30
09:15:21 205  ,cad_g31
09:15:21 206  ,cad_g32
09:15:21 207  ,cad_g33
09:15:21 208  ,cad_g34
09:15:21 209  ,cad_g35
09:15:21 210  ,cad_g36
09:15:21 211  ,cad_g37
09:15:21 212  ,cad_g38
09:15:21 213  ,cad_g39
09:15:21 214  ,cad_g40
09:15:21 215  ,cad_g41
09:15:21 216  ,chf_g00
09:15:21 217  ,chf_g01
09:15:21 218  ,chf_g02
09:15:21 219  ,chf_g03
09:15:21 220  ,chf_g04
09:15:21 221  ,chf_g05
09:15:21 222  ,chf_g06
09:15:21 223  ,chf_g07
09:15:21 224  ,chf_g08
09:15:21 225  ,chf_g09
09:15:21 226  ,chf_g10
09:15:21 227  ,chf_g11
09:15:21 228  ,chf_g12
09:15:21 229  ,chf_g13
09:15:21 230  ,chf_g14
09:15:21 231  ,chf_g15
09:15:21 232  ,chf_g16
09:15:21 233  ,chf_g17
09:15:21 234  ,chf_g18
09:15:21 235  ,chf_g19
09:15:21 236  ,chf_g20
09:15:21 237  ,chf_g21
09:15:21 238  ,chf_g22
09:15:21 239  ,chf_g23
09:15:21 240  ,chf_g24
09:15:21 241  ,chf_g25
09:15:21 242  ,chf_g26
09:15:21 243  ,chf_g27
09:15:21 244  ,chf_g28
09:15:21 245  ,chf_g29
09:15:21 246  ,chf_g30
09:15:21 247  ,chf_g31
09:15:21 248  ,chf_g32
09:15:21 249  ,chf_g33
09:15:21 250  ,chf_g34
09:15:21 251  ,chf_g35
09:15:21 252  ,chf_g36
09:15:21 253  ,chf_g37
09:15:21 254  ,chf_g38
09:15:21 255  ,chf_g39
09:15:21 256  ,chf_g40
09:15:21 257  ,chf_g41
09:15:21 258  FROM aud_ms6 m
09:15:21 259  WHERE m.ydate = '&1'||' '||'&2'
09:15:21 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'08:55:00'

View created.

Elapsed: 00:00:00.13
09:15:21 SQL> 
09:15:21 SQL> -- rpt
09:15:21 SQL> -- We should see just 1 row:
09:15:21 SQL> 
09:15:21 SQL> SELECT COUNT(prdate) FROM sme
09:15:21   2  
09:15:21 SQL> -- Build the model:
09:15:21 SQL> CREATE OR REPLACE VIEW bme AS
09:15:21   2  SELECT
09:15:21   3  'aud'||m.ydate prdate
09:15:21   4  ,gatt
09:15:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
09:15:21   6  ,eur_g00
09:15:21   7  ,eur_g01
09:15:21   8  ,eur_g02
09:15:21   9  ,eur_g03
09:15:21  10  ,eur_g04
09:15:21  11  ,eur_g05
09:15:21  12  ,eur_g06
09:15:21  13  ,eur_g07
09:15:21  14  ,eur_g08
09:15:21  15  ,eur_g09
09:15:21  16  ,eur_g10
09:15:21  17  ,eur_g11
09:15:21  18  ,eur_g12
09:15:21  19  ,eur_g13
09:15:21  20  ,eur_g14
09:15:21  21  ,eur_g15
09:15:21  22  ,eur_g16
09:15:21  23  ,eur_g17
09:15:21  24  ,eur_g18
09:15:21  25  ,eur_g19
09:15:21  26  ,eur_g20
09:15:21  27  ,eur_g21
09:15:21  28  ,eur_g22
09:15:21  29  ,eur_g23
09:15:21  30  ,eur_g24
09:15:21  31  ,eur_g25
09:15:21  32  ,eur_g26
09:15:21  33  ,eur_g27
09:15:21  34  ,eur_g28
09:15:21  35  ,eur_g29
09:15:21  36  ,eur_g30
09:15:21  37  ,eur_g31
09:15:21  38  ,eur_g32
09:15:21  39  ,eur_g33
09:15:21  40  ,eur_g34
09:15:21  41  ,eur_g35
09:15:21  42  ,eur_g36
09:15:21  43  ,eur_g37
09:15:21  44  ,eur_g38
09:15:21  45  ,eur_g39
09:15:21  46  ,eur_g40
09:15:21  47  ,eur_g41
09:15:21  48  ,aud_g00
09:15:21  49  ,aud_g01
09:15:21  50  ,aud_g02
09:15:21  51  ,aud_g03
09:15:21  52  ,aud_g04
09:15:21  53  ,aud_g05
09:15:21  54  ,aud_g06
09:15:21  55  ,aud_g07
09:15:21  56  ,aud_g08
09:15:21  57  ,aud_g09
09:15:21  58  ,aud_g10
09:15:21  59  ,aud_g11
09:15:21  60  ,aud_g12
09:15:21  61  ,aud_g13
09:15:21  62  ,aud_g14
09:15:21  63  ,aud_g15
09:15:21  64  ,aud_g16
09:15:21  65  ,aud_g17
09:15:21  66  ,aud_g18
09:15:21  67  ,aud_g19
09:15:21  68  ,aud_g20
09:15:21  69  ,aud_g21
09:15:21  70  ,aud_g22
09:15:21  71  ,aud_g23
09:15:21  72  ,aud_g24
09:15:21  73  ,aud_g25
09:15:21  74  ,aud_g26
09:15:21  75  ,aud_g27
09:15:21  76  ,aud_g28
09:15:21  77  ,aud_g29
09:15:21  78  ,aud_g30
09:15:21  79  ,aud_g31
09:15:21  80  ,aud_g32
09:15:21  81  ,aud_g33
09:15:21  82  ,aud_g34
09:15:21  83  ,aud_g35
09:15:21  84  ,aud_g36
09:15:21  85  ,aud_g37
09:15:21  86  ,aud_g38
09:15:21  87  ,aud_g39
09:15:21  88  ,aud_g40
09:15:21  89  ,aud_g41
09:15:21  90  ,gbp_g00
09:15:21  91  ,gbp_g01
09:15:21  92  ,gbp_g02
09:15:21  93  ,gbp_g03
09:15:21  94  ,gbp_g04
09:15:21  95  ,gbp_g05
09:15:21  96  ,gbp_g06
09:15:21  97  ,gbp_g07
09:15:21  98  ,gbp_g08
09:15:21  99  ,gbp_g09
09:15:21 100  ,gbp_g10
09:15:21 101  ,gbp_g11
09:15:21 102  ,gbp_g12
09:15:21 103  ,gbp_g13
09:15:21 104  ,gbp_g14
09:15:21 105  ,gbp_g15
09:15:21 106  ,gbp_g16
09:15:21 107  ,gbp_g17
09:15:21 108  ,gbp_g18
09:15:21 109  ,gbp_g19
09:15:21 110  ,gbp_g20
09:15:21 111  ,gbp_g21
09:15:21 112  ,gbp_g22
09:15:21 113  ,gbp_g23
09:15:21 114  ,gbp_g24
09:15:21 115  ,gbp_g25
09:15:21 116  ,gbp_g26
09:15:21 117  ,gbp_g27
09:15:21 118  ,gbp_g28
09:15:21 119  ,gbp_g29
09:15:21 120  ,gbp_g30
09:15:21 121  ,gbp_g31
09:15:21 122  ,gbp_g32
09:15:21 123  ,gbp_g33
09:15:21 124  ,gbp_g34
09:15:21 125  ,gbp_g35
09:15:21 126  ,gbp_g36
09:15:21 127  ,gbp_g37
09:15:21 128  ,gbp_g38
09:15:21 129  ,gbp_g39
09:15:21 130  ,gbp_g40
09:15:21 131  ,gbp_g41
09:15:21 132  ,jpy_g00
09:15:21 133  ,jpy_g01
09:15:21 134  ,jpy_g02
09:15:21 135  ,jpy_g03
09:15:21 136  ,jpy_g04
09:15:21 137  ,jpy_g05
09:15:21 138  ,jpy_g06
09:15:21 139  ,jpy_g07
09:15:21 140  ,jpy_g08
09:15:21 141  ,jpy_g09
09:15:21 142  ,jpy_g10
09:15:21 143  ,jpy_g11
09:15:21 144  ,jpy_g12
09:15:21 145  ,jpy_g13
09:15:21 146  ,jpy_g14
09:15:21 147  ,jpy_g15
09:15:21 148  ,jpy_g16
09:15:21 149  ,jpy_g17
09:15:21 150  ,jpy_g18
09:15:21 151  ,jpy_g19
09:15:21 152  ,jpy_g20
09:15:21 153  ,jpy_g21
09:15:21 154  ,jpy_g22
09:15:21 155  ,jpy_g23
09:15:21 156  ,jpy_g24
09:15:21 157  ,jpy_g25
09:15:21 158  ,jpy_g26
09:15:21 159  ,jpy_g27
09:15:21 160  ,jpy_g28
09:15:21 161  ,jpy_g29
09:15:21 162  ,jpy_g30
09:15:21 163  ,jpy_g31
09:15:21 164  ,jpy_g32
09:15:21 165  ,jpy_g33
09:15:21 166  ,jpy_g34
09:15:21 167  ,jpy_g35
09:15:21 168  ,jpy_g36
09:15:21 169  ,jpy_g37
09:15:21 170  ,jpy_g38
09:15:21 171  ,jpy_g39
09:15:21 172  ,jpy_g40
09:15:21 173  ,jpy_g41
09:15:21 174  ,cad_g00
09:15:21 175  ,cad_g01
09:15:21 176  ,cad_g02
09:15:21 177  ,cad_g03
09:15:21 178  ,cad_g04
09:15:21 179  ,cad_g05
09:15:21 180  ,cad_g06
09:15:21 181  ,cad_g07
09:15:21 182  ,cad_g08
09:15:21 183  ,cad_g09
09:15:21 184  ,cad_g10
09:15:21 185  ,cad_g11
09:15:21 186  ,cad_g12
09:15:21 187  ,cad_g13
09:15:21 188  ,cad_g14
09:15:21 189  ,cad_g15
09:15:21 190  ,cad_g16
09:15:21 191  ,cad_g17
09:15:21 192  ,cad_g18
09:15:21 193  ,cad_g19
09:15:21 194  ,cad_g20
09:15:21 195  ,cad_g21
09:15:21 196  ,cad_g22
09:15:21 197  ,cad_g23
09:15:21 198  ,cad_g24
09:15:21 199  ,cad_g25
09:15:21 200  ,cad_g26
09:15:21 201  ,cad_g27
09:15:21 202  ,cad_g28
09:15:21 203  ,cad_g29
09:15:21 204  ,cad_g30
09:15:21 205  ,cad_g31
09:15:21 206  ,cad_g32
09:15:21 207  ,cad_g33
09:15:21 208  ,cad_g34
09:15:21 209  ,cad_g35
09:15:21 210  ,cad_g36
09:15:21 211  ,cad_g37
09:15:21 212  ,cad_g38
09:15:21 213  ,cad_g39
09:15:21 214  ,cad_g40
09:15:21 215  ,cad_g41
09:15:21 216  ,chf_g00
09:15:21 217  ,chf_g01
09:15:21 218  ,chf_g02
09:15:21 219  ,chf_g03
09:15:21 220  ,chf_g04
09:15:21 221  ,chf_g05
09:15:21 222  ,chf_g06
09:15:21 223  ,chf_g07
09:15:21 224  ,chf_g08
09:15:21 225  ,chf_g09
09:15:21 226  ,chf_g10
09:15:21 227  ,chf_g11
09:15:21 228  ,chf_g12
09:15:21 229  ,chf_g13
09:15:21 230  ,chf_g14
09:15:21 231  ,chf_g15
09:15:21 232  ,chf_g16
09:15:21 233  ,chf_g17
09:15:21 234  ,chf_g18
09:15:21 235  ,chf_g19
09:15:21 236  ,chf_g20
09:15:21 237  ,chf_g21
09:15:21 238  ,chf_g22
09:15:21 239  ,chf_g23
09:15:21 240  ,chf_g24
09:15:21 241  ,chf_g25
09:15:21 242  ,chf_g26
09:15:21 243  ,chf_g27
09:15:21 244  ,chf_g28
09:15:21 245  ,chf_g29
09:15:21 246  ,chf_g30
09:15:21 247  ,chf_g31
09:15:21 248  ,chf_g32
09:15:21 249  ,chf_g33
09:15:21 250  ,chf_g34
09:15:21 251  ,chf_g35
09:15:21 252  ,chf_g36
09:15:21 253  ,chf_g37
09:15:21 254  ,chf_g38
09:15:21 255  ,chf_g39
09:15:21 256  ,chf_g40
09:15:21 257  ,chf_g41
09:15:21 258  FROM aud_ms6 m
09:15:21 259  WHERE gatt IN('nup','up')
09:15:21 260  AND 1+m.ydate < '&1'||' '||'&2'
09:15:21 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'08:55:00'

View created.

Elapsed: 00:00:00.14
09:15:21 SQL> 
09:15:21 SQL> -- rpt
09:15:21 SQL> 
09:15:21 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
09:15:21   2  
09:15:21 SQL> SELECT MAX(prdate) FROM bme
09:15:21   2  
09:15:21 SQL> -- Now build model from bme and score sme
09:15:21 SQL> @score1.sql
09:15:21 SQL> -- score1.sql
09:15:21 SQL> 
09:15:21 SQL> -- Does the 1st SVM score
09:15:21 SQL> 
09:15:21 SQL> -- Fill up svmc_apply_prep
09:15:21 SQL> @score.sql
09:15:21 SQL> --
09:15:21 SQL> -- score.sql
09:15:21 SQL> --
09:15:21 SQL> 
09:15:21 SQL> -- usage: score.sql
09:15:21 SQL> 
09:15:21 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
09:15:21 SQL> 
09:15:21 SQL> DEFINE target	= 'gatt'
09:15:21 SQL> DEFINE model_name = 'forex14'
09:15:21 SQL> DEFINE bldtable	= 'bme'
09:15:21 SQL> DEFINE scoretable = 'sme'
09:15:21 SQL> DEFINE case_id	= 'prdate'
09:15:21 SQL> 
09:15:21 SQL> -- Define a variable to help me exclude some columns from some data mining calls
09:15:21 SQL> DEFINE exclude1 = "'&target','&case_id'"
09:15:21 SQL> 
09:15:21 SQL> -- Builds an SVM model using pl/sql.
09:15:21 SQL> 
09:15:21 SQL> -----------------------------------------------------------------------
09:15:21 SQL> --			    BUILD THE MODEL
09:15:21 SQL> -----------------------------------------------------------------------
09:15:21 SQL> 
09:15:21 SQL> -- Cleanup old build data preparation objects for repeat runs
09:15:21 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
09:15:21 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
09:15:21 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
09:15:21 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
09:15:21 SQL> 
09:15:21 SQL> 
09:15:21 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
09:15:21 SQL> --
09:15:21 SQL> -- DROP	TABLE svmc_settings ;
09:15:21 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
09:15:21 SQL> -- DELETE svmc_settings;
09:15:21 SQL> 
09:15:21 SQL> -- The default classification algorithm is Naive Bayes. So override
09:15:21 SQL> -- this choice to SVM using a settings table.
09:15:21 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
09:15:21 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
09:15:21 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
09:15:21 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
09:15:21 SQL> -- models.
09:15:21 SQL> --
09:15:21 SQL> 
09:15:21 SQL> -- Do this once and then comment it out.
09:15:21 SQL> -- That makes script go faster.
09:15:21 SQL> -- BEGIN
09:15:21 SQL> -- -- Populate settings table
09:15:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:15:21 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
09:15:21 SQL> --
09:15:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:15:21 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
09:15:21 SQL> --
09:15:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:15:21 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
09:15:21 SQL> --   COMMIT;
09:15:21 SQL> -- END;
09:15:21 SQL> -- /
09:15:21 SQL> 
09:15:21 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
09:15:21 SQL> 
09:15:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
09:15:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:15:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:15:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
09:15:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:15:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:15:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
09:15:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:15:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:15:21 SQL> 
09:15:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
09:15:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:15:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:15:21 SQL> 
09:15:21 SQL> --------------------------------
09:15:21 SQL> -- PREPARE BUILD (TRAINING) DATA
09:15:21 SQL> --
09:15:21 SQL> 
09:15:21 SQL> -- 1. Missing Value treatment for all Predictors and
09:15:21 SQL> -- 2. Outlier Treatment and
09:15:21 SQL> -- 3. Normalization are performed below.
09:15:21 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
09:15:21 SQL> --    normalized here.
09:15:21 SQL> 
09:15:21 SQL> BEGIN
09:15:21   2  	-- Perform missing value treatment for all predictors
09:15:21   3  	-- create miss tables
09:15:21   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
09:15:21   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
09:15:21   6  
09:15:21   7  	-- populate miss tables
09:15:21   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
09:15:21   9  	  miss_table_name => 'svmc_miss_num',
09:15:21  10  	  data_table_name => '&bldtable',
09:15:21  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:15:21  12  
09:15:21  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
09:15:21  14  	  miss_table_name => 'svmc_miss_cat',
09:15:21  15  	  data_table_name => '&bldtable',
09:15:21  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:15:21  17  
09:15:21  18  	-- xform input data to replace missing values
09:15:21  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
09:15:21  20  	  miss_table_name => 'svmc_miss_num',
09:15:21  21  	  data_table_name => '&bldtable',
09:15:21  22  	  xform_view_name => 'xformed_build_miss_num');
09:15:21  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
09:15:21  24  	  miss_table_name => 'svmc_miss_cat',
09:15:21  25  	  data_table_name => '&bldtable',
09:15:21  26  	  xform_view_name => 'xformed_build_miss_cat');
09:15:21  27  
09:15:21  28  	-- Perform outlier treatment.
09:15:21  29  	-- create clip table
09:15:21  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
09:15:21  31  
09:15:21  32  	-- populate clip table
09:15:21  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
09:15:21  34  	  clip_table_name => 'svmc_clip',
09:15:21  35  	  data_table_name => '&bldtable',
09:15:21  36  	  tail_frac	  => 0.025,
09:15:21  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:15:21  38  
09:15:21  39  	-- xform input data to winsorized data
09:15:21  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
09:15:21  41  	  clip_table_name => 'svmc_clip',
09:15:21  42  	  data_table_name => '&bldtable',
09:15:21  43  	  xform_view_name => 'svmc_winsor');
09:15:21  44  
09:15:21  45  	-- create normalization table
09:15:21  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
09:15:21  47  
09:15:21  48  	-- populate normalization table based on winsorized data
09:15:21  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
09:15:21  50  	  norm_table_name => 'svmc_norm',
09:15:21  51  	  data_table_name => 'svmc_winsor',
09:15:21  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:15:21  53  
09:15:21  54  	-- normalize the original data
09:15:21  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
09:15:21  56  	  norm_table_name => 'svmc_norm',
09:15:21  57  	  data_table_name => '&bldtable',
09:15:21  58  	  xform_view_name => 'svmc_build_prep');
09:15:21  59  END;
09:15:21  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.39
09:15:39 SQL> 
09:15:39 SQL> ---------------------
09:15:39 SQL> -- CREATE A NEW MODEL
09:15:39 SQL> --
09:15:39 SQL> -- Cleanup old model with the same name for repeat runs
09:15:39 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
09:15:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:15:39   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.52
09:15:40 SQL> 
09:15:40 SQL> -- Build a new SVM Model
09:15:40 SQL> BEGIN
09:15:40   2  	DBMS_DATA_MINING.CREATE_MODEL(
09:15:40   3  	  model_name	      => '&model_name',
09:15:40   4  	  mining_function     => dbms_data_mining.classification,
09:15:40   5  	  data_table_name     => 'svmc_build_prep',
09:15:40   6  	  case_id_column_name => '&case_id',
09:15:40   7  	  target_column_name  => '&target',
09:15:40   8  	  settings_table_name => 'svmc_settings');
09:15:40   9  END;
09:15:40  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.96
09:16:08 SQL> 
09:16:08 SQL> -----------------------------------------------------------------------
09:16:08 SQL> --			       APPLY/score THE MODEL
09:16:08 SQL> -----------------------------------------------------------------------
09:16:08 SQL> 
09:16:08 SQL> -- Cleanup old scoring data preparation objects for repeat runs
09:16:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
09:16:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:16:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
09:16:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
09:16:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:16:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:16:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
09:16:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:16:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
09:16:08 SQL> -----------------------
09:16:08 SQL> -- PREPARE SCORING DATA
09:16:08 SQL> --
09:16:08 SQL> -- If the data for model creation has been prepared, then the data
09:16:08 SQL> -- to be scored using the model must be prepared in the same manner
09:16:08 SQL> -- in order to obtain meaningful results.
09:16:08 SQL> --
09:16:08 SQL> -- 1. Missing Value treatment for all Predictors and
09:16:08 SQL> -- 2. Normalization
09:16:08 SQL> -- No outlier treatment will be performed during test and apply. The
09:16:08 SQL> -- normalization step is sufficient, since the normalization parameters
09:16:08 SQL> -- already capture the effects of outlier treatment done with build data.
09:16:08 SQL> --
09:16:08 SQL> BEGIN
09:16:08   2  	-- Xform Test data to replace missing values
09:16:08   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
09:16:08   4  	  miss_table_name => 'svmc_miss_num',
09:16:08   5  	  data_table_name => '&scoretable',
09:16:08   6  	  xform_view_name => 'xformed_apply_miss_num');
09:16:08   7  
09:16:08   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
09:16:08   9  	  miss_table_name => 'svmc_miss_cat',
09:16:08  10  	  data_table_name => '&scoretable',
09:16:08  11  	  xform_view_name => 'xformed_apply_miss_cat');
09:16:08  12  
09:16:08  13  	-- Normalize the data to be scored
09:16:08  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
09:16:08  15  	  norm_table_name => 'svmc_norm',
09:16:08  16  	  data_table_name => '&scoretable',
09:16:08  17  	  xform_view_name => 'svmc_apply_prep');
09:16:08  18  END;
09:16:08  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
09:16:09 SQL> 
09:16:09 SQL> -- Use same model_name used in score.sql
09:16:09 SQL> DEFINE model_name = 'forex14'
09:16:09 SQL> 
09:16:09 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
09:16:09 SQL> 
09:16:09 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
09:16:09 SQL> 
09:16:09 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
09:16:09   2  SELECT
09:16:09   3  prdate
09:16:09   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
09:16:09   5  ,sysdate
09:16:09   6  ,SUBSTR(prdate,1,3)pair
09:16:09   7  ,SUBSTR(prdate,4,19)ydate
09:16:09   8  FROM svmc_apply_prep
09:16:09   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
09:16:10 SQL> @aud_score1day.sql  2010-12-31 09:00:00
09:16:10 SQL> --
09:16:10 SQL> -- aud_score1day.sql
09:16:10 SQL> --
09:16:10 SQL> 
09:16:10 SQL> CREATE OR REPLACE VIEW sme AS
09:16:10   2  SELECT
09:16:10   3  'aud'||m.ydate prdate
09:16:10   4  ,NULL gatt
09:16:10   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
09:16:10   6  ,eur_g00
09:16:10   7  ,eur_g01
09:16:10   8  ,eur_g02
09:16:10   9  ,eur_g03
09:16:10  10  ,eur_g04
09:16:10  11  ,eur_g05
09:16:10  12  ,eur_g06
09:16:10  13  ,eur_g07
09:16:10  14  ,eur_g08
09:16:10  15  ,eur_g09
09:16:10  16  ,eur_g10
09:16:10  17  ,eur_g11
09:16:10  18  ,eur_g12
09:16:10  19  ,eur_g13
09:16:10  20  ,eur_g14
09:16:10  21  ,eur_g15
09:16:10  22  ,eur_g16
09:16:10  23  ,eur_g17
09:16:10  24  ,eur_g18
09:16:10  25  ,eur_g19
09:16:10  26  ,eur_g20
09:16:10  27  ,eur_g21
09:16:10  28  ,eur_g22
09:16:10  29  ,eur_g23
09:16:10  30  ,eur_g24
09:16:10  31  ,eur_g25
09:16:10  32  ,eur_g26
09:16:10  33  ,eur_g27
09:16:10  34  ,eur_g28
09:16:10  35  ,eur_g29
09:16:10  36  ,eur_g30
09:16:10  37  ,eur_g31
09:16:10  38  ,eur_g32
09:16:10  39  ,eur_g33
09:16:10  40  ,eur_g34
09:16:10  41  ,eur_g35
09:16:10  42  ,eur_g36
09:16:10  43  ,eur_g37
09:16:10  44  ,eur_g38
09:16:10  45  ,eur_g39
09:16:10  46  ,eur_g40
09:16:10  47  ,eur_g41
09:16:10  48  ,aud_g00
09:16:10  49  ,aud_g01
09:16:10  50  ,aud_g02
09:16:10  51  ,aud_g03
09:16:10  52  ,aud_g04
09:16:10  53  ,aud_g05
09:16:10  54  ,aud_g06
09:16:10  55  ,aud_g07
09:16:10  56  ,aud_g08
09:16:10  57  ,aud_g09
09:16:10  58  ,aud_g10
09:16:10  59  ,aud_g11
09:16:10  60  ,aud_g12
09:16:10  61  ,aud_g13
09:16:10  62  ,aud_g14
09:16:10  63  ,aud_g15
09:16:10  64  ,aud_g16
09:16:10  65  ,aud_g17
09:16:10  66  ,aud_g18
09:16:10  67  ,aud_g19
09:16:10  68  ,aud_g20
09:16:10  69  ,aud_g21
09:16:10  70  ,aud_g22
09:16:10  71  ,aud_g23
09:16:10  72  ,aud_g24
09:16:10  73  ,aud_g25
09:16:10  74  ,aud_g26
09:16:10  75  ,aud_g27
09:16:10  76  ,aud_g28
09:16:10  77  ,aud_g29
09:16:10  78  ,aud_g30
09:16:10  79  ,aud_g31
09:16:10  80  ,aud_g32
09:16:10  81  ,aud_g33
09:16:10  82  ,aud_g34
09:16:10  83  ,aud_g35
09:16:10  84  ,aud_g36
09:16:10  85  ,aud_g37
09:16:10  86  ,aud_g38
09:16:10  87  ,aud_g39
09:16:10  88  ,aud_g40
09:16:10  89  ,aud_g41
09:16:10  90  ,gbp_g00
09:16:10  91  ,gbp_g01
09:16:10  92  ,gbp_g02
09:16:10  93  ,gbp_g03
09:16:10  94  ,gbp_g04
09:16:10  95  ,gbp_g05
09:16:10  96  ,gbp_g06
09:16:10  97  ,gbp_g07
09:16:10  98  ,gbp_g08
09:16:10  99  ,gbp_g09
09:16:10 100  ,gbp_g10
09:16:10 101  ,gbp_g11
09:16:10 102  ,gbp_g12
09:16:10 103  ,gbp_g13
09:16:10 104  ,gbp_g14
09:16:10 105  ,gbp_g15
09:16:10 106  ,gbp_g16
09:16:10 107  ,gbp_g17
09:16:10 108  ,gbp_g18
09:16:10 109  ,gbp_g19
09:16:10 110  ,gbp_g20
09:16:10 111  ,gbp_g21
09:16:10 112  ,gbp_g22
09:16:10 113  ,gbp_g23
09:16:10 114  ,gbp_g24
09:16:10 115  ,gbp_g25
09:16:10 116  ,gbp_g26
09:16:10 117  ,gbp_g27
09:16:10 118  ,gbp_g28
09:16:10 119  ,gbp_g29
09:16:10 120  ,gbp_g30
09:16:10 121  ,gbp_g31
09:16:10 122  ,gbp_g32
09:16:10 123  ,gbp_g33
09:16:10 124  ,gbp_g34
09:16:10 125  ,gbp_g35
09:16:10 126  ,gbp_g36
09:16:10 127  ,gbp_g37
09:16:10 128  ,gbp_g38
09:16:10 129  ,gbp_g39
09:16:10 130  ,gbp_g40
09:16:10 131  ,gbp_g41
09:16:10 132  ,jpy_g00
09:16:10 133  ,jpy_g01
09:16:10 134  ,jpy_g02
09:16:10 135  ,jpy_g03
09:16:10 136  ,jpy_g04
09:16:10 137  ,jpy_g05
09:16:10 138  ,jpy_g06
09:16:10 139  ,jpy_g07
09:16:10 140  ,jpy_g08
09:16:10 141  ,jpy_g09
09:16:10 142  ,jpy_g10
09:16:10 143  ,jpy_g11
09:16:10 144  ,jpy_g12
09:16:10 145  ,jpy_g13
09:16:10 146  ,jpy_g14
09:16:10 147  ,jpy_g15
09:16:10 148  ,jpy_g16
09:16:10 149  ,jpy_g17
09:16:10 150  ,jpy_g18
09:16:10 151  ,jpy_g19
09:16:10 152  ,jpy_g20
09:16:10 153  ,jpy_g21
09:16:10 154  ,jpy_g22
09:16:10 155  ,jpy_g23
09:16:10 156  ,jpy_g24
09:16:10 157  ,jpy_g25
09:16:10 158  ,jpy_g26
09:16:10 159  ,jpy_g27
09:16:10 160  ,jpy_g28
09:16:10 161  ,jpy_g29
09:16:10 162  ,jpy_g30
09:16:10 163  ,jpy_g31
09:16:10 164  ,jpy_g32
09:16:10 165  ,jpy_g33
09:16:10 166  ,jpy_g34
09:16:10 167  ,jpy_g35
09:16:10 168  ,jpy_g36
09:16:10 169  ,jpy_g37
09:16:10 170  ,jpy_g38
09:16:10 171  ,jpy_g39
09:16:10 172  ,jpy_g40
09:16:10 173  ,jpy_g41
09:16:10 174  ,cad_g00
09:16:10 175  ,cad_g01
09:16:10 176  ,cad_g02
09:16:10 177  ,cad_g03
09:16:10 178  ,cad_g04
09:16:10 179  ,cad_g05
09:16:10 180  ,cad_g06
09:16:10 181  ,cad_g07
09:16:10 182  ,cad_g08
09:16:10 183  ,cad_g09
09:16:10 184  ,cad_g10
09:16:10 185  ,cad_g11
09:16:10 186  ,cad_g12
09:16:10 187  ,cad_g13
09:16:10 188  ,cad_g14
09:16:10 189  ,cad_g15
09:16:10 190  ,cad_g16
09:16:10 191  ,cad_g17
09:16:10 192  ,cad_g18
09:16:10 193  ,cad_g19
09:16:10 194  ,cad_g20
09:16:10 195  ,cad_g21
09:16:10 196  ,cad_g22
09:16:10 197  ,cad_g23
09:16:10 198  ,cad_g24
09:16:10 199  ,cad_g25
09:16:10 200  ,cad_g26
09:16:10 201  ,cad_g27
09:16:10 202  ,cad_g28
09:16:10 203  ,cad_g29
09:16:10 204  ,cad_g30
09:16:10 205  ,cad_g31
09:16:10 206  ,cad_g32
09:16:10 207  ,cad_g33
09:16:10 208  ,cad_g34
09:16:10 209  ,cad_g35
09:16:10 210  ,cad_g36
09:16:10 211  ,cad_g37
09:16:10 212  ,cad_g38
09:16:10 213  ,cad_g39
09:16:10 214  ,cad_g40
09:16:10 215  ,cad_g41
09:16:10 216  ,chf_g00
09:16:10 217  ,chf_g01
09:16:10 218  ,chf_g02
09:16:10 219  ,chf_g03
09:16:10 220  ,chf_g04
09:16:10 221  ,chf_g05
09:16:10 222  ,chf_g06
09:16:10 223  ,chf_g07
09:16:10 224  ,chf_g08
09:16:10 225  ,chf_g09
09:16:10 226  ,chf_g10
09:16:10 227  ,chf_g11
09:16:10 228  ,chf_g12
09:16:10 229  ,chf_g13
09:16:10 230  ,chf_g14
09:16:10 231  ,chf_g15
09:16:10 232  ,chf_g16
09:16:10 233  ,chf_g17
09:16:10 234  ,chf_g18
09:16:10 235  ,chf_g19
09:16:10 236  ,chf_g20
09:16:10 237  ,chf_g21
09:16:10 238  ,chf_g22
09:16:10 239  ,chf_g23
09:16:10 240  ,chf_g24
09:16:10 241  ,chf_g25
09:16:10 242  ,chf_g26
09:16:10 243  ,chf_g27
09:16:10 244  ,chf_g28
09:16:10 245  ,chf_g29
09:16:10 246  ,chf_g30
09:16:10 247  ,chf_g31
09:16:10 248  ,chf_g32
09:16:10 249  ,chf_g33
09:16:10 250  ,chf_g34
09:16:10 251  ,chf_g35
09:16:10 252  ,chf_g36
09:16:10 253  ,chf_g37
09:16:10 254  ,chf_g38
09:16:10 255  ,chf_g39
09:16:10 256  ,chf_g40
09:16:10 257  ,chf_g41
09:16:10 258  FROM aud_ms6 m
09:16:10 259  WHERE m.ydate = '&1'||' '||'&2'
09:16:10 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'09:00:00'

View created.

Elapsed: 00:00:00.12
09:16:10 SQL> 
09:16:10 SQL> -- rpt
09:16:10 SQL> -- We should see just 1 row:
09:16:10 SQL> 
09:16:10 SQL> SELECT COUNT(prdate) FROM sme
09:16:10   2  
09:16:10 SQL> -- Build the model:
09:16:10 SQL> CREATE OR REPLACE VIEW bme AS
09:16:10   2  SELECT
09:16:10   3  'aud'||m.ydate prdate
09:16:10   4  ,gatt
09:16:10   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
09:16:10   6  ,eur_g00
09:16:10   7  ,eur_g01
09:16:10   8  ,eur_g02
09:16:10   9  ,eur_g03
09:16:10  10  ,eur_g04
09:16:10  11  ,eur_g05
09:16:10  12  ,eur_g06
09:16:10  13  ,eur_g07
09:16:10  14  ,eur_g08
09:16:10  15  ,eur_g09
09:16:10  16  ,eur_g10
09:16:10  17  ,eur_g11
09:16:10  18  ,eur_g12
09:16:10  19  ,eur_g13
09:16:10  20  ,eur_g14
09:16:10  21  ,eur_g15
09:16:10  22  ,eur_g16
09:16:10  23  ,eur_g17
09:16:10  24  ,eur_g18
09:16:10  25  ,eur_g19
09:16:10  26  ,eur_g20
09:16:10  27  ,eur_g21
09:16:10  28  ,eur_g22
09:16:10  29  ,eur_g23
09:16:10  30  ,eur_g24
09:16:10  31  ,eur_g25
09:16:10  32  ,eur_g26
09:16:10  33  ,eur_g27
09:16:10  34  ,eur_g28
09:16:10  35  ,eur_g29
09:16:10  36  ,eur_g30
09:16:10  37  ,eur_g31
09:16:10  38  ,eur_g32
09:16:10  39  ,eur_g33
09:16:10  40  ,eur_g34
09:16:10  41  ,eur_g35
09:16:10  42  ,eur_g36
09:16:10  43  ,eur_g37
09:16:10  44  ,eur_g38
09:16:10  45  ,eur_g39
09:16:10  46  ,eur_g40
09:16:10  47  ,eur_g41
09:16:10  48  ,aud_g00
09:16:10  49  ,aud_g01
09:16:10  50  ,aud_g02
09:16:10  51  ,aud_g03
09:16:10  52  ,aud_g04
09:16:10  53  ,aud_g05
09:16:10  54  ,aud_g06
09:16:10  55  ,aud_g07
09:16:10  56  ,aud_g08
09:16:10  57  ,aud_g09
09:16:10  58  ,aud_g10
09:16:10  59  ,aud_g11
09:16:10  60  ,aud_g12
09:16:10  61  ,aud_g13
09:16:10  62  ,aud_g14
09:16:10  63  ,aud_g15
09:16:10  64  ,aud_g16
09:16:10  65  ,aud_g17
09:16:10  66  ,aud_g18
09:16:10  67  ,aud_g19
09:16:10  68  ,aud_g20
09:16:10  69  ,aud_g21
09:16:10  70  ,aud_g22
09:16:10  71  ,aud_g23
09:16:10  72  ,aud_g24
09:16:10  73  ,aud_g25
09:16:10  74  ,aud_g26
09:16:10  75  ,aud_g27
09:16:10  76  ,aud_g28
09:16:10  77  ,aud_g29
09:16:10  78  ,aud_g30
09:16:10  79  ,aud_g31
09:16:10  80  ,aud_g32
09:16:10  81  ,aud_g33
09:16:10  82  ,aud_g34
09:16:10  83  ,aud_g35
09:16:10  84  ,aud_g36
09:16:10  85  ,aud_g37
09:16:10  86  ,aud_g38
09:16:10  87  ,aud_g39
09:16:10  88  ,aud_g40
09:16:10  89  ,aud_g41
09:16:10  90  ,gbp_g00
09:16:10  91  ,gbp_g01
09:16:10  92  ,gbp_g02
09:16:10  93  ,gbp_g03
09:16:10  94  ,gbp_g04
09:16:10  95  ,gbp_g05
09:16:10  96  ,gbp_g06
09:16:10  97  ,gbp_g07
09:16:10  98  ,gbp_g08
09:16:10  99  ,gbp_g09
09:16:10 100  ,gbp_g10
09:16:10 101  ,gbp_g11
09:16:10 102  ,gbp_g12
09:16:10 103  ,gbp_g13
09:16:10 104  ,gbp_g14
09:16:10 105  ,gbp_g15
09:16:10 106  ,gbp_g16
09:16:10 107  ,gbp_g17
09:16:10 108  ,gbp_g18
09:16:10 109  ,gbp_g19
09:16:10 110  ,gbp_g20
09:16:10 111  ,gbp_g21
09:16:10 112  ,gbp_g22
09:16:10 113  ,gbp_g23
09:16:10 114  ,gbp_g24
09:16:10 115  ,gbp_g25
09:16:10 116  ,gbp_g26
09:16:10 117  ,gbp_g27
09:16:10 118  ,gbp_g28
09:16:10 119  ,gbp_g29
09:16:10 120  ,gbp_g30
09:16:10 121  ,gbp_g31
09:16:10 122  ,gbp_g32
09:16:10 123  ,gbp_g33
09:16:10 124  ,gbp_g34
09:16:10 125  ,gbp_g35
09:16:10 126  ,gbp_g36
09:16:10 127  ,gbp_g37
09:16:10 128  ,gbp_g38
09:16:10 129  ,gbp_g39
09:16:10 130  ,gbp_g40
09:16:10 131  ,gbp_g41
09:16:10 132  ,jpy_g00
09:16:10 133  ,jpy_g01
09:16:10 134  ,jpy_g02
09:16:10 135  ,jpy_g03
09:16:10 136  ,jpy_g04
09:16:10 137  ,jpy_g05
09:16:10 138  ,jpy_g06
09:16:10 139  ,jpy_g07
09:16:10 140  ,jpy_g08
09:16:10 141  ,jpy_g09
09:16:10 142  ,jpy_g10
09:16:10 143  ,jpy_g11
09:16:10 144  ,jpy_g12
09:16:10 145  ,jpy_g13
09:16:10 146  ,jpy_g14
09:16:10 147  ,jpy_g15
09:16:10 148  ,jpy_g16
09:16:10 149  ,jpy_g17
09:16:10 150  ,jpy_g18
09:16:10 151  ,jpy_g19
09:16:10 152  ,jpy_g20
09:16:10 153  ,jpy_g21
09:16:10 154  ,jpy_g22
09:16:10 155  ,jpy_g23
09:16:10 156  ,jpy_g24
09:16:10 157  ,jpy_g25
09:16:10 158  ,jpy_g26
09:16:10 159  ,jpy_g27
09:16:10 160  ,jpy_g28
09:16:10 161  ,jpy_g29
09:16:10 162  ,jpy_g30
09:16:10 163  ,jpy_g31
09:16:10 164  ,jpy_g32
09:16:10 165  ,jpy_g33
09:16:10 166  ,jpy_g34
09:16:10 167  ,jpy_g35
09:16:10 168  ,jpy_g36
09:16:10 169  ,jpy_g37
09:16:10 170  ,jpy_g38
09:16:10 171  ,jpy_g39
09:16:10 172  ,jpy_g40
09:16:10 173  ,jpy_g41
09:16:10 174  ,cad_g00
09:16:10 175  ,cad_g01
09:16:10 176  ,cad_g02
09:16:10 177  ,cad_g03
09:16:10 178  ,cad_g04
09:16:10 179  ,cad_g05
09:16:10 180  ,cad_g06
09:16:10 181  ,cad_g07
09:16:10 182  ,cad_g08
09:16:10 183  ,cad_g09
09:16:10 184  ,cad_g10
09:16:10 185  ,cad_g11
09:16:10 186  ,cad_g12
09:16:10 187  ,cad_g13
09:16:10 188  ,cad_g14
09:16:10 189  ,cad_g15
09:16:10 190  ,cad_g16
09:16:10 191  ,cad_g17
09:16:10 192  ,cad_g18
09:16:10 193  ,cad_g19
09:16:10 194  ,cad_g20
09:16:10 195  ,cad_g21
09:16:10 196  ,cad_g22
09:16:10 197  ,cad_g23
09:16:10 198  ,cad_g24
09:16:10 199  ,cad_g25
09:16:10 200  ,cad_g26
09:16:10 201  ,cad_g27
09:16:10 202  ,cad_g28
09:16:10 203  ,cad_g29
09:16:10 204  ,cad_g30
09:16:10 205  ,cad_g31
09:16:10 206  ,cad_g32
09:16:10 207  ,cad_g33
09:16:10 208  ,cad_g34
09:16:10 209  ,cad_g35
09:16:10 210  ,cad_g36
09:16:10 211  ,cad_g37
09:16:10 212  ,cad_g38
09:16:10 213  ,cad_g39
09:16:10 214  ,cad_g40
09:16:10 215  ,cad_g41
09:16:10 216  ,chf_g00
09:16:10 217  ,chf_g01
09:16:10 218  ,chf_g02
09:16:10 219  ,chf_g03
09:16:10 220  ,chf_g04
09:16:10 221  ,chf_g05
09:16:10 222  ,chf_g06
09:16:10 223  ,chf_g07
09:16:10 224  ,chf_g08
09:16:10 225  ,chf_g09
09:16:10 226  ,chf_g10
09:16:10 227  ,chf_g11
09:16:10 228  ,chf_g12
09:16:10 229  ,chf_g13
09:16:10 230  ,chf_g14
09:16:10 231  ,chf_g15
09:16:10 232  ,chf_g16
09:16:10 233  ,chf_g17
09:16:10 234  ,chf_g18
09:16:10 235  ,chf_g19
09:16:10 236  ,chf_g20
09:16:10 237  ,chf_g21
09:16:10 238  ,chf_g22
09:16:10 239  ,chf_g23
09:16:10 240  ,chf_g24
09:16:10 241  ,chf_g25
09:16:10 242  ,chf_g26
09:16:10 243  ,chf_g27
09:16:10 244  ,chf_g28
09:16:10 245  ,chf_g29
09:16:10 246  ,chf_g30
09:16:10 247  ,chf_g31
09:16:10 248  ,chf_g32
09:16:10 249  ,chf_g33
09:16:10 250  ,chf_g34
09:16:10 251  ,chf_g35
09:16:10 252  ,chf_g36
09:16:10 253  ,chf_g37
09:16:10 254  ,chf_g38
09:16:10 255  ,chf_g39
09:16:10 256  ,chf_g40
09:16:10 257  ,chf_g41
09:16:10 258  FROM aud_ms6 m
09:16:10 259  WHERE gatt IN('nup','up')
09:16:10 260  AND 1+m.ydate < '&1'||' '||'&2'
09:16:10 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'09:00:00'

View created.

Elapsed: 00:00:00.11
09:16:10 SQL> 
09:16:10 SQL> -- rpt
09:16:10 SQL> 
09:16:10 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
09:16:10   2  
09:16:10 SQL> SELECT MAX(prdate) FROM bme
09:16:10   2  
09:16:10 SQL> -- Now build model from bme and score sme
09:16:10 SQL> @score1.sql
09:16:10 SQL> -- score1.sql
09:16:10 SQL> 
09:16:10 SQL> -- Does the 1st SVM score
09:16:10 SQL> 
09:16:10 SQL> -- Fill up svmc_apply_prep
09:16:10 SQL> @score.sql
09:16:10 SQL> --
09:16:10 SQL> -- score.sql
09:16:10 SQL> --
09:16:10 SQL> 
09:16:10 SQL> -- usage: score.sql
09:16:10 SQL> 
09:16:10 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
09:16:10 SQL> 
09:16:10 SQL> DEFINE target	= 'gatt'
09:16:10 SQL> DEFINE model_name = 'forex14'
09:16:10 SQL> DEFINE bldtable	= 'bme'
09:16:10 SQL> DEFINE scoretable = 'sme'
09:16:10 SQL> DEFINE case_id	= 'prdate'
09:16:10 SQL> 
09:16:10 SQL> -- Define a variable to help me exclude some columns from some data mining calls
09:16:10 SQL> DEFINE exclude1 = "'&target','&case_id'"
09:16:10 SQL> 
09:16:10 SQL> -- Builds an SVM model using pl/sql.
09:16:10 SQL> 
09:16:10 SQL> -----------------------------------------------------------------------
09:16:10 SQL> --			    BUILD THE MODEL
09:16:10 SQL> -----------------------------------------------------------------------
09:16:10 SQL> 
09:16:10 SQL> -- Cleanup old build data preparation objects for repeat runs
09:16:10 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
09:16:10 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
09:16:10 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
09:16:10 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
09:16:10 SQL> 
09:16:10 SQL> 
09:16:10 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
09:16:10 SQL> --
09:16:10 SQL> -- DROP	TABLE svmc_settings ;
09:16:10 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
09:16:10 SQL> -- DELETE svmc_settings;
09:16:10 SQL> 
09:16:10 SQL> -- The default classification algorithm is Naive Bayes. So override
09:16:10 SQL> -- this choice to SVM using a settings table.
09:16:10 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
09:16:10 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
09:16:10 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
09:16:10 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
09:16:10 SQL> -- models.
09:16:10 SQL> --
09:16:10 SQL> 
09:16:10 SQL> -- Do this once and then comment it out.
09:16:10 SQL> -- That makes script go faster.
09:16:10 SQL> -- BEGIN
09:16:10 SQL> -- -- Populate settings table
09:16:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:16:10 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
09:16:10 SQL> --
09:16:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:16:10 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
09:16:10 SQL> --
09:16:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:16:10 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
09:16:10 SQL> --   COMMIT;
09:16:10 SQL> -- END;
09:16:10 SQL> -- /
09:16:10 SQL> 
09:16:10 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
09:16:10 SQL> 
09:16:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
09:16:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:16:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:16:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
09:16:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:16:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:16:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
09:16:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:16:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:16:10 SQL> 
09:16:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
09:16:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:16:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:16:10 SQL> 
09:16:10 SQL> --------------------------------
09:16:10 SQL> -- PREPARE BUILD (TRAINING) DATA
09:16:10 SQL> --
09:16:10 SQL> 
09:16:10 SQL> -- 1. Missing Value treatment for all Predictors and
09:16:10 SQL> -- 2. Outlier Treatment and
09:16:10 SQL> -- 3. Normalization are performed below.
09:16:10 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
09:16:10 SQL> --    normalized here.
09:16:10 SQL> 
09:16:10 SQL> BEGIN
09:16:10   2  	-- Perform missing value treatment for all predictors
09:16:10   3  	-- create miss tables
09:16:10   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
09:16:10   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
09:16:10   6  
09:16:10   7  	-- populate miss tables
09:16:10   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
09:16:10   9  	  miss_table_name => 'svmc_miss_num',
09:16:10  10  	  data_table_name => '&bldtable',
09:16:10  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:16:10  12  
09:16:10  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
09:16:10  14  	  miss_table_name => 'svmc_miss_cat',
09:16:10  15  	  data_table_name => '&bldtable',
09:16:10  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:16:10  17  
09:16:10  18  	-- xform input data to replace missing values
09:16:10  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
09:16:10  20  	  miss_table_name => 'svmc_miss_num',
09:16:10  21  	  data_table_name => '&bldtable',
09:16:10  22  	  xform_view_name => 'xformed_build_miss_num');
09:16:10  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
09:16:10  24  	  miss_table_name => 'svmc_miss_cat',
09:16:10  25  	  data_table_name => '&bldtable',
09:16:10  26  	  xform_view_name => 'xformed_build_miss_cat');
09:16:10  27  
09:16:10  28  	-- Perform outlier treatment.
09:16:10  29  	-- create clip table
09:16:10  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
09:16:10  31  
09:16:10  32  	-- populate clip table
09:16:10  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
09:16:10  34  	  clip_table_name => 'svmc_clip',
09:16:10  35  	  data_table_name => '&bldtable',
09:16:10  36  	  tail_frac	  => 0.025,
09:16:10  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:16:10  38  
09:16:10  39  	-- xform input data to winsorized data
09:16:10  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
09:16:10  41  	  clip_table_name => 'svmc_clip',
09:16:10  42  	  data_table_name => '&bldtable',
09:16:10  43  	  xform_view_name => 'svmc_winsor');
09:16:10  44  
09:16:10  45  	-- create normalization table
09:16:10  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
09:16:10  47  
09:16:10  48  	-- populate normalization table based on winsorized data
09:16:10  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
09:16:10  50  	  norm_table_name => 'svmc_norm',
09:16:10  51  	  data_table_name => 'svmc_winsor',
09:16:10  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:16:10  53  
09:16:10  54  	-- normalize the original data
09:16:10  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
09:16:10  56  	  norm_table_name => 'svmc_norm',
09:16:10  57  	  data_table_name => '&bldtable',
09:16:10  58  	  xform_view_name => 'svmc_build_prep');
09:16:10  59  END;
09:16:10  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.32
09:16:28 SQL> 
09:16:28 SQL> ---------------------
09:16:28 SQL> -- CREATE A NEW MODEL
09:16:28 SQL> --
09:16:28 SQL> -- Cleanup old model with the same name for repeat runs
09:16:28 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
09:16:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:16:28   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.09
09:16:29 SQL> 
09:16:29 SQL> -- Build a new SVM Model
09:16:29 SQL> BEGIN
09:16:29   2  	DBMS_DATA_MINING.CREATE_MODEL(
09:16:29   3  	  model_name	      => '&model_name',
09:16:29   4  	  mining_function     => dbms_data_mining.classification,
09:16:29   5  	  data_table_name     => 'svmc_build_prep',
09:16:29   6  	  case_id_column_name => '&case_id',
09:16:29   7  	  target_column_name  => '&target',
09:16:29   8  	  settings_table_name => 'svmc_settings');
09:16:29   9  END;
09:16:29  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.93
09:16:56 SQL> 
09:16:56 SQL> -----------------------------------------------------------------------
09:16:56 SQL> --			       APPLY/score THE MODEL
09:16:56 SQL> -----------------------------------------------------------------------
09:16:56 SQL> 
09:16:56 SQL> -- Cleanup old scoring data preparation objects for repeat runs
09:16:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
09:16:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:16:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
09:16:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
09:16:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:16:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:16:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
09:16:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:16:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:16:57 SQL> -----------------------
09:16:57 SQL> -- PREPARE SCORING DATA
09:16:57 SQL> --
09:16:57 SQL> -- If the data for model creation has been prepared, then the data
09:16:57 SQL> -- to be scored using the model must be prepared in the same manner
09:16:57 SQL> -- in order to obtain meaningful results.
09:16:57 SQL> --
09:16:57 SQL> -- 1. Missing Value treatment for all Predictors and
09:16:57 SQL> -- 2. Normalization
09:16:57 SQL> -- No outlier treatment will be performed during test and apply. The
09:16:57 SQL> -- normalization step is sufficient, since the normalization parameters
09:16:57 SQL> -- already capture the effects of outlier treatment done with build data.
09:16:57 SQL> --
09:16:57 SQL> BEGIN
09:16:57   2  	-- Xform Test data to replace missing values
09:16:57   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
09:16:57   4  	  miss_table_name => 'svmc_miss_num',
09:16:57   5  	  data_table_name => '&scoretable',
09:16:57   6  	  xform_view_name => 'xformed_apply_miss_num');
09:16:57   7  
09:16:57   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
09:16:57   9  	  miss_table_name => 'svmc_miss_cat',
09:16:57  10  	  data_table_name => '&scoretable',
09:16:57  11  	  xform_view_name => 'xformed_apply_miss_cat');
09:16:57  12  
09:16:57  13  	-- Normalize the data to be scored
09:16:57  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
09:16:57  15  	  norm_table_name => 'svmc_norm',
09:16:57  16  	  data_table_name => '&scoretable',
09:16:57  17  	  xform_view_name => 'svmc_apply_prep');
09:16:57  18  END;
09:16:57  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
09:16:58 SQL> 
09:16:58 SQL> -- Use same model_name used in score.sql
09:16:58 SQL> DEFINE model_name = 'forex14'
09:16:58 SQL> 
09:16:58 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
09:16:58 SQL> 
09:16:58 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
09:16:58 SQL> 
09:16:58 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
09:16:58   2  SELECT
09:16:58   3  prdate
09:16:58   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
09:16:58   5  ,sysdate
09:16:58   6  ,SUBSTR(prdate,1,3)pair
09:16:58   7  ,SUBSTR(prdate,4,19)ydate
09:16:58   8  FROM svmc_apply_prep
09:16:58   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
09:16:58 SQL> @aud_score1day.sql  2010-12-31 09:05:00
09:16:58 SQL> --
09:16:58 SQL> -- aud_score1day.sql
09:16:58 SQL> --
09:16:58 SQL> 
09:16:58 SQL> CREATE OR REPLACE VIEW sme AS
09:16:58   2  SELECT
09:16:58   3  'aud'||m.ydate prdate
09:16:58   4  ,NULL gatt
09:16:58   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
09:16:58   6  ,eur_g00
09:16:58   7  ,eur_g01
09:16:58   8  ,eur_g02
09:16:58   9  ,eur_g03
09:16:58  10  ,eur_g04
09:16:58  11  ,eur_g05
09:16:58  12  ,eur_g06
09:16:58  13  ,eur_g07
09:16:58  14  ,eur_g08
09:16:58  15  ,eur_g09
09:16:58  16  ,eur_g10
09:16:58  17  ,eur_g11
09:16:58  18  ,eur_g12
09:16:58  19  ,eur_g13
09:16:58  20  ,eur_g14
09:16:58  21  ,eur_g15
09:16:58  22  ,eur_g16
09:16:58  23  ,eur_g17
09:16:58  24  ,eur_g18
09:16:58  25  ,eur_g19
09:16:58  26  ,eur_g20
09:16:58  27  ,eur_g21
09:16:58  28  ,eur_g22
09:16:58  29  ,eur_g23
09:16:58  30  ,eur_g24
09:16:58  31  ,eur_g25
09:16:58  32  ,eur_g26
09:16:58  33  ,eur_g27
09:16:58  34  ,eur_g28
09:16:58  35  ,eur_g29
09:16:58  36  ,eur_g30
09:16:58  37  ,eur_g31
09:16:58  38  ,eur_g32
09:16:58  39  ,eur_g33
09:16:58  40  ,eur_g34
09:16:58  41  ,eur_g35
09:16:58  42  ,eur_g36
09:16:58  43  ,eur_g37
09:16:58  44  ,eur_g38
09:16:58  45  ,eur_g39
09:16:58  46  ,eur_g40
09:16:58  47  ,eur_g41
09:16:58  48  ,aud_g00
09:16:58  49  ,aud_g01
09:16:58  50  ,aud_g02
09:16:58  51  ,aud_g03
09:16:58  52  ,aud_g04
09:16:58  53  ,aud_g05
09:16:58  54  ,aud_g06
09:16:58  55  ,aud_g07
09:16:58  56  ,aud_g08
09:16:58  57  ,aud_g09
09:16:58  58  ,aud_g10
09:16:58  59  ,aud_g11
09:16:58  60  ,aud_g12
09:16:58  61  ,aud_g13
09:16:58  62  ,aud_g14
09:16:58  63  ,aud_g15
09:16:58  64  ,aud_g16
09:16:58  65  ,aud_g17
09:16:58  66  ,aud_g18
09:16:58  67  ,aud_g19
09:16:58  68  ,aud_g20
09:16:58  69  ,aud_g21
09:16:58  70  ,aud_g22
09:16:58  71  ,aud_g23
09:16:58  72  ,aud_g24
09:16:58  73  ,aud_g25
09:16:58  74  ,aud_g26
09:16:58  75  ,aud_g27
09:16:58  76  ,aud_g28
09:16:58  77  ,aud_g29
09:16:58  78  ,aud_g30
09:16:58  79  ,aud_g31
09:16:58  80  ,aud_g32
09:16:58  81  ,aud_g33
09:16:58  82  ,aud_g34
09:16:58  83  ,aud_g35
09:16:58  84  ,aud_g36
09:16:58  85  ,aud_g37
09:16:58  86  ,aud_g38
09:16:58  87  ,aud_g39
09:16:58  88  ,aud_g40
09:16:58  89  ,aud_g41
09:16:58  90  ,gbp_g00
09:16:58  91  ,gbp_g01
09:16:58  92  ,gbp_g02
09:16:58  93  ,gbp_g03
09:16:58  94  ,gbp_g04
09:16:58  95  ,gbp_g05
09:16:58  96  ,gbp_g06
09:16:58  97  ,gbp_g07
09:16:58  98  ,gbp_g08
09:16:58  99  ,gbp_g09
09:16:58 100  ,gbp_g10
09:16:58 101  ,gbp_g11
09:16:58 102  ,gbp_g12
09:16:58 103  ,gbp_g13
09:16:58 104  ,gbp_g14
09:16:58 105  ,gbp_g15
09:16:58 106  ,gbp_g16
09:16:58 107  ,gbp_g17
09:16:58 108  ,gbp_g18
09:16:58 109  ,gbp_g19
09:16:58 110  ,gbp_g20
09:16:58 111  ,gbp_g21
09:16:58 112  ,gbp_g22
09:16:58 113  ,gbp_g23
09:16:58 114  ,gbp_g24
09:16:58 115  ,gbp_g25
09:16:58 116  ,gbp_g26
09:16:58 117  ,gbp_g27
09:16:58 118  ,gbp_g28
09:16:58 119  ,gbp_g29
09:16:58 120  ,gbp_g30
09:16:58 121  ,gbp_g31
09:16:58 122  ,gbp_g32
09:16:58 123  ,gbp_g33
09:16:58 124  ,gbp_g34
09:16:58 125  ,gbp_g35
09:16:58 126  ,gbp_g36
09:16:58 127  ,gbp_g37
09:16:58 128  ,gbp_g38
09:16:58 129  ,gbp_g39
09:16:58 130  ,gbp_g40
09:16:58 131  ,gbp_g41
09:16:58 132  ,jpy_g00
09:16:58 133  ,jpy_g01
09:16:58 134  ,jpy_g02
09:16:58 135  ,jpy_g03
09:16:58 136  ,jpy_g04
09:16:58 137  ,jpy_g05
09:16:58 138  ,jpy_g06
09:16:58 139  ,jpy_g07
09:16:58 140  ,jpy_g08
09:16:58 141  ,jpy_g09
09:16:58 142  ,jpy_g10
09:16:58 143  ,jpy_g11
09:16:58 144  ,jpy_g12
09:16:58 145  ,jpy_g13
09:16:58 146  ,jpy_g14
09:16:58 147  ,jpy_g15
09:16:58 148  ,jpy_g16
09:16:58 149  ,jpy_g17
09:16:58 150  ,jpy_g18
09:16:58 151  ,jpy_g19
09:16:58 152  ,jpy_g20
09:16:58 153  ,jpy_g21
09:16:58 154  ,jpy_g22
09:16:58 155  ,jpy_g23
09:16:58 156  ,jpy_g24
09:16:58 157  ,jpy_g25
09:16:58 158  ,jpy_g26
09:16:58 159  ,jpy_g27
09:16:58 160  ,jpy_g28
09:16:58 161  ,jpy_g29
09:16:58 162  ,jpy_g30
09:16:58 163  ,jpy_g31
09:16:58 164  ,jpy_g32
09:16:58 165  ,jpy_g33
09:16:58 166  ,jpy_g34
09:16:58 167  ,jpy_g35
09:16:58 168  ,jpy_g36
09:16:58 169  ,jpy_g37
09:16:58 170  ,jpy_g38
09:16:58 171  ,jpy_g39
09:16:58 172  ,jpy_g40
09:16:58 173  ,jpy_g41
09:16:58 174  ,cad_g00
09:16:58 175  ,cad_g01
09:16:58 176  ,cad_g02
09:16:58 177  ,cad_g03
09:16:58 178  ,cad_g04
09:16:58 179  ,cad_g05
09:16:58 180  ,cad_g06
09:16:58 181  ,cad_g07
09:16:58 182  ,cad_g08
09:16:58 183  ,cad_g09
09:16:58 184  ,cad_g10
09:16:58 185  ,cad_g11
09:16:58 186  ,cad_g12
09:16:58 187  ,cad_g13
09:16:58 188  ,cad_g14
09:16:58 189  ,cad_g15
09:16:58 190  ,cad_g16
09:16:58 191  ,cad_g17
09:16:58 192  ,cad_g18
09:16:58 193  ,cad_g19
09:16:58 194  ,cad_g20
09:16:58 195  ,cad_g21
09:16:58 196  ,cad_g22
09:16:58 197  ,cad_g23
09:16:58 198  ,cad_g24
09:16:58 199  ,cad_g25
09:16:58 200  ,cad_g26
09:16:58 201  ,cad_g27
09:16:58 202  ,cad_g28
09:16:58 203  ,cad_g29
09:16:58 204  ,cad_g30
09:16:58 205  ,cad_g31
09:16:58 206  ,cad_g32
09:16:58 207  ,cad_g33
09:16:58 208  ,cad_g34
09:16:58 209  ,cad_g35
09:16:58 210  ,cad_g36
09:16:58 211  ,cad_g37
09:16:58 212  ,cad_g38
09:16:58 213  ,cad_g39
09:16:58 214  ,cad_g40
09:16:58 215  ,cad_g41
09:16:58 216  ,chf_g00
09:16:58 217  ,chf_g01
09:16:58 218  ,chf_g02
09:16:58 219  ,chf_g03
09:16:58 220  ,chf_g04
09:16:58 221  ,chf_g05
09:16:58 222  ,chf_g06
09:16:58 223  ,chf_g07
09:16:58 224  ,chf_g08
09:16:58 225  ,chf_g09
09:16:58 226  ,chf_g10
09:16:58 227  ,chf_g11
09:16:58 228  ,chf_g12
09:16:58 229  ,chf_g13
09:16:58 230  ,chf_g14
09:16:58 231  ,chf_g15
09:16:58 232  ,chf_g16
09:16:58 233  ,chf_g17
09:16:58 234  ,chf_g18
09:16:58 235  ,chf_g19
09:16:58 236  ,chf_g20
09:16:58 237  ,chf_g21
09:16:58 238  ,chf_g22
09:16:58 239  ,chf_g23
09:16:58 240  ,chf_g24
09:16:58 241  ,chf_g25
09:16:58 242  ,chf_g26
09:16:58 243  ,chf_g27
09:16:58 244  ,chf_g28
09:16:58 245  ,chf_g29
09:16:58 246  ,chf_g30
09:16:58 247  ,chf_g31
09:16:58 248  ,chf_g32
09:16:58 249  ,chf_g33
09:16:58 250  ,chf_g34
09:16:58 251  ,chf_g35
09:16:58 252  ,chf_g36
09:16:58 253  ,chf_g37
09:16:58 254  ,chf_g38
09:16:58 255  ,chf_g39
09:16:58 256  ,chf_g40
09:16:58 257  ,chf_g41
09:16:58 258  FROM aud_ms6 m
09:16:58 259  WHERE m.ydate = '&1'||' '||'&2'
09:16:58 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'09:05:00'

View created.

Elapsed: 00:00:00.12
09:16:58 SQL> 
09:16:58 SQL> -- rpt
09:16:58 SQL> -- We should see just 1 row:
09:16:58 SQL> 
09:16:58 SQL> SELECT COUNT(prdate) FROM sme
09:16:58   2  
09:16:58 SQL> -- Build the model:
09:16:58 SQL> CREATE OR REPLACE VIEW bme AS
09:16:58   2  SELECT
09:16:58   3  'aud'||m.ydate prdate
09:16:58   4  ,gatt
09:16:58   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
09:16:58   6  ,eur_g00
09:16:58   7  ,eur_g01
09:16:58   8  ,eur_g02
09:16:58   9  ,eur_g03
09:16:58  10  ,eur_g04
09:16:58  11  ,eur_g05
09:16:58  12  ,eur_g06
09:16:58  13  ,eur_g07
09:16:58  14  ,eur_g08
09:16:58  15  ,eur_g09
09:16:58  16  ,eur_g10
09:16:58  17  ,eur_g11
09:16:58  18  ,eur_g12
09:16:58  19  ,eur_g13
09:16:58  20  ,eur_g14
09:16:58  21  ,eur_g15
09:16:58  22  ,eur_g16
09:16:58  23  ,eur_g17
09:16:58  24  ,eur_g18
09:16:58  25  ,eur_g19
09:16:58  26  ,eur_g20
09:16:58  27  ,eur_g21
09:16:58  28  ,eur_g22
09:16:58  29  ,eur_g23
09:16:58  30  ,eur_g24
09:16:58  31  ,eur_g25
09:16:58  32  ,eur_g26
09:16:58  33  ,eur_g27
09:16:58  34  ,eur_g28
09:16:58  35  ,eur_g29
09:16:58  36  ,eur_g30
09:16:58  37  ,eur_g31
09:16:58  38  ,eur_g32
09:16:58  39  ,eur_g33
09:16:58  40  ,eur_g34
09:16:58  41  ,eur_g35
09:16:58  42  ,eur_g36
09:16:58  43  ,eur_g37
09:16:58  44  ,eur_g38
09:16:58  45  ,eur_g39
09:16:58  46  ,eur_g40
09:16:58  47  ,eur_g41
09:16:58  48  ,aud_g00
09:16:58  49  ,aud_g01
09:16:58  50  ,aud_g02
09:16:58  51  ,aud_g03
09:16:58  52  ,aud_g04
09:16:58  53  ,aud_g05
09:16:58  54  ,aud_g06
09:16:58  55  ,aud_g07
09:16:58  56  ,aud_g08
09:16:58  57  ,aud_g09
09:16:58  58  ,aud_g10
09:16:58  59  ,aud_g11
09:16:58  60  ,aud_g12
09:16:58  61  ,aud_g13
09:16:58  62  ,aud_g14
09:16:58  63  ,aud_g15
09:16:58  64  ,aud_g16
09:16:58  65  ,aud_g17
09:16:58  66  ,aud_g18
09:16:58  67  ,aud_g19
09:16:58  68  ,aud_g20
09:16:58  69  ,aud_g21
09:16:58  70  ,aud_g22
09:16:58  71  ,aud_g23
09:16:58  72  ,aud_g24
09:16:58  73  ,aud_g25
09:16:58  74  ,aud_g26
09:16:58  75  ,aud_g27
09:16:58  76  ,aud_g28
09:16:58  77  ,aud_g29
09:16:58  78  ,aud_g30
09:16:58  79  ,aud_g31
09:16:58  80  ,aud_g32
09:16:58  81  ,aud_g33
09:16:58  82  ,aud_g34
09:16:58  83  ,aud_g35
09:16:58  84  ,aud_g36
09:16:58  85  ,aud_g37
09:16:58  86  ,aud_g38
09:16:58  87  ,aud_g39
09:16:58  88  ,aud_g40
09:16:58  89  ,aud_g41
09:16:58  90  ,gbp_g00
09:16:58  91  ,gbp_g01
09:16:58  92  ,gbp_g02
09:16:58  93  ,gbp_g03
09:16:58  94  ,gbp_g04
09:16:58  95  ,gbp_g05
09:16:58  96  ,gbp_g06
09:16:58  97  ,gbp_g07
09:16:58  98  ,gbp_g08
09:16:58  99  ,gbp_g09
09:16:58 100  ,gbp_g10
09:16:58 101  ,gbp_g11
09:16:58 102  ,gbp_g12
09:16:58 103  ,gbp_g13
09:16:58 104  ,gbp_g14
09:16:58 105  ,gbp_g15
09:16:58 106  ,gbp_g16
09:16:58 107  ,gbp_g17
09:16:58 108  ,gbp_g18
09:16:58 109  ,gbp_g19
09:16:58 110  ,gbp_g20
09:16:58 111  ,gbp_g21
09:16:58 112  ,gbp_g22
09:16:58 113  ,gbp_g23
09:16:58 114  ,gbp_g24
09:16:58 115  ,gbp_g25
09:16:58 116  ,gbp_g26
09:16:58 117  ,gbp_g27
09:16:58 118  ,gbp_g28
09:16:58 119  ,gbp_g29
09:16:58 120  ,gbp_g30
09:16:58 121  ,gbp_g31
09:16:58 122  ,gbp_g32
09:16:58 123  ,gbp_g33
09:16:58 124  ,gbp_g34
09:16:58 125  ,gbp_g35
09:16:58 126  ,gbp_g36
09:16:58 127  ,gbp_g37
09:16:58 128  ,gbp_g38
09:16:58 129  ,gbp_g39
09:16:58 130  ,gbp_g40
09:16:58 131  ,gbp_g41
09:16:58 132  ,jpy_g00
09:16:58 133  ,jpy_g01
09:16:58 134  ,jpy_g02
09:16:58 135  ,jpy_g03
09:16:58 136  ,jpy_g04
09:16:58 137  ,jpy_g05
09:16:58 138  ,jpy_g06
09:16:58 139  ,jpy_g07
09:16:58 140  ,jpy_g08
09:16:58 141  ,jpy_g09
09:16:58 142  ,jpy_g10
09:16:58 143  ,jpy_g11
09:16:58 144  ,jpy_g12
09:16:58 145  ,jpy_g13
09:16:58 146  ,jpy_g14
09:16:58 147  ,jpy_g15
09:16:58 148  ,jpy_g16
09:16:58 149  ,jpy_g17
09:16:58 150  ,jpy_g18
09:16:58 151  ,jpy_g19
09:16:58 152  ,jpy_g20
09:16:58 153  ,jpy_g21
09:16:58 154  ,jpy_g22
09:16:58 155  ,jpy_g23
09:16:58 156  ,jpy_g24
09:16:58 157  ,jpy_g25
09:16:58 158  ,jpy_g26
09:16:58 159  ,jpy_g27
09:16:58 160  ,jpy_g28
09:16:58 161  ,jpy_g29
09:16:58 162  ,jpy_g30
09:16:58 163  ,jpy_g31
09:16:58 164  ,jpy_g32
09:16:58 165  ,jpy_g33
09:16:58 166  ,jpy_g34
09:16:58 167  ,jpy_g35
09:16:58 168  ,jpy_g36
09:16:58 169  ,jpy_g37
09:16:58 170  ,jpy_g38
09:16:58 171  ,jpy_g39
09:16:58 172  ,jpy_g40
09:16:58 173  ,jpy_g41
09:16:58 174  ,cad_g00
09:16:58 175  ,cad_g01
09:16:58 176  ,cad_g02
09:16:58 177  ,cad_g03
09:16:58 178  ,cad_g04
09:16:58 179  ,cad_g05
09:16:58 180  ,cad_g06
09:16:58 181  ,cad_g07
09:16:58 182  ,cad_g08
09:16:58 183  ,cad_g09
09:16:58 184  ,cad_g10
09:16:58 185  ,cad_g11
09:16:58 186  ,cad_g12
09:16:58 187  ,cad_g13
09:16:58 188  ,cad_g14
09:16:58 189  ,cad_g15
09:16:58 190  ,cad_g16
09:16:58 191  ,cad_g17
09:16:58 192  ,cad_g18
09:16:58 193  ,cad_g19
09:16:58 194  ,cad_g20
09:16:58 195  ,cad_g21
09:16:58 196  ,cad_g22
09:16:58 197  ,cad_g23
09:16:58 198  ,cad_g24
09:16:58 199  ,cad_g25
09:16:58 200  ,cad_g26
09:16:58 201  ,cad_g27
09:16:58 202  ,cad_g28
09:16:58 203  ,cad_g29
09:16:58 204  ,cad_g30
09:16:58 205  ,cad_g31
09:16:58 206  ,cad_g32
09:16:58 207  ,cad_g33
09:16:58 208  ,cad_g34
09:16:58 209  ,cad_g35
09:16:58 210  ,cad_g36
09:16:58 211  ,cad_g37
09:16:58 212  ,cad_g38
09:16:58 213  ,cad_g39
09:16:58 214  ,cad_g40
09:16:58 215  ,cad_g41
09:16:58 216  ,chf_g00
09:16:58 217  ,chf_g01
09:16:58 218  ,chf_g02
09:16:58 219  ,chf_g03
09:16:58 220  ,chf_g04
09:16:58 221  ,chf_g05
09:16:58 222  ,chf_g06
09:16:58 223  ,chf_g07
09:16:58 224  ,chf_g08
09:16:58 225  ,chf_g09
09:16:58 226  ,chf_g10
09:16:58 227  ,chf_g11
09:16:58 228  ,chf_g12
09:16:58 229  ,chf_g13
09:16:58 230  ,chf_g14
09:16:58 231  ,chf_g15
09:16:58 232  ,chf_g16
09:16:58 233  ,chf_g17
09:16:58 234  ,chf_g18
09:16:58 235  ,chf_g19
09:16:58 236  ,chf_g20
09:16:58 237  ,chf_g21
09:16:58 238  ,chf_g22
09:16:58 239  ,chf_g23
09:16:58 240  ,chf_g24
09:16:58 241  ,chf_g25
09:16:58 242  ,chf_g26
09:16:58 243  ,chf_g27
09:16:58 244  ,chf_g28
09:16:58 245  ,chf_g29
09:16:58 246  ,chf_g30
09:16:58 247  ,chf_g31
09:16:58 248  ,chf_g32
09:16:58 249  ,chf_g33
09:16:58 250  ,chf_g34
09:16:58 251  ,chf_g35
09:16:58 252  ,chf_g36
09:16:58 253  ,chf_g37
09:16:58 254  ,chf_g38
09:16:58 255  ,chf_g39
09:16:58 256  ,chf_g40
09:16:58 257  ,chf_g41
09:16:58 258  FROM aud_ms6 m
09:16:58 259  WHERE gatt IN('nup','up')
09:16:58 260  AND 1+m.ydate < '&1'||' '||'&2'
09:16:58 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'09:05:00'

View created.

Elapsed: 00:00:00.12
09:16:58 SQL> 
09:16:58 SQL> -- rpt
09:16:58 SQL> 
09:16:58 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
09:16:58   2  
09:16:58 SQL> SELECT MAX(prdate) FROM bme
09:16:58   2  
09:16:58 SQL> -- Now build model from bme and score sme
09:16:58 SQL> @score1.sql
09:16:58 SQL> -- score1.sql
09:16:58 SQL> 
09:16:58 SQL> -- Does the 1st SVM score
09:16:58 SQL> 
09:16:58 SQL> -- Fill up svmc_apply_prep
09:16:58 SQL> @score.sql
09:16:58 SQL> --
09:16:58 SQL> -- score.sql
09:16:58 SQL> --
09:16:58 SQL> 
09:16:58 SQL> -- usage: score.sql
09:16:58 SQL> 
09:16:58 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
09:16:58 SQL> 
09:16:58 SQL> DEFINE target	= 'gatt'
09:16:58 SQL> DEFINE model_name = 'forex14'
09:16:58 SQL> DEFINE bldtable	= 'bme'
09:16:58 SQL> DEFINE scoretable = 'sme'
09:16:58 SQL> DEFINE case_id	= 'prdate'
09:16:58 SQL> 
09:16:58 SQL> -- Define a variable to help me exclude some columns from some data mining calls
09:16:58 SQL> DEFINE exclude1 = "'&target','&case_id'"
09:16:58 SQL> 
09:16:58 SQL> -- Builds an SVM model using pl/sql.
09:16:58 SQL> 
09:16:58 SQL> -----------------------------------------------------------------------
09:16:58 SQL> --			    BUILD THE MODEL
09:16:58 SQL> -----------------------------------------------------------------------
09:16:58 SQL> 
09:16:58 SQL> -- Cleanup old build data preparation objects for repeat runs
09:16:58 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
09:16:58 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
09:16:58 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
09:16:58 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
09:16:58 SQL> 
09:16:58 SQL> 
09:16:58 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
09:16:58 SQL> --
09:16:58 SQL> -- DROP	TABLE svmc_settings ;
09:16:58 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
09:16:58 SQL> -- DELETE svmc_settings;
09:16:58 SQL> 
09:16:58 SQL> -- The default classification algorithm is Naive Bayes. So override
09:16:58 SQL> -- this choice to SVM using a settings table.
09:16:58 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
09:16:58 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
09:16:58 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
09:16:58 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
09:16:58 SQL> -- models.
09:16:58 SQL> --
09:16:58 SQL> 
09:16:58 SQL> -- Do this once and then comment it out.
09:16:58 SQL> -- That makes script go faster.
09:16:58 SQL> -- BEGIN
09:16:58 SQL> -- -- Populate settings table
09:16:58 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:16:58 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
09:16:58 SQL> --
09:16:58 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:16:58 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
09:16:58 SQL> --
09:16:58 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:16:58 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
09:16:58 SQL> --   COMMIT;
09:16:58 SQL> -- END;
09:16:58 SQL> -- /
09:16:58 SQL> 
09:16:58 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
09:16:58 SQL> 
09:16:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
09:16:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:16:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:16:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
09:16:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:16:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
09:16:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
09:16:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:16:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
09:16:58 SQL> 
09:16:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
09:16:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:16:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
09:16:59 SQL> 
09:16:59 SQL> --------------------------------
09:16:59 SQL> -- PREPARE BUILD (TRAINING) DATA
09:16:59 SQL> --
09:16:59 SQL> 
09:16:59 SQL> -- 1. Missing Value treatment for all Predictors and
09:16:59 SQL> -- 2. Outlier Treatment and
09:16:59 SQL> -- 3. Normalization are performed below.
09:16:59 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
09:16:59 SQL> --    normalized here.
09:16:59 SQL> 
09:16:59 SQL> BEGIN
09:16:59   2  	-- Perform missing value treatment for all predictors
09:16:59   3  	-- create miss tables
09:16:59   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
09:16:59   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
09:16:59   6  
09:16:59   7  	-- populate miss tables
09:16:59   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
09:16:59   9  	  miss_table_name => 'svmc_miss_num',
09:16:59  10  	  data_table_name => '&bldtable',
09:16:59  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:16:59  12  
09:16:59  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
09:16:59  14  	  miss_table_name => 'svmc_miss_cat',
09:16:59  15  	  data_table_name => '&bldtable',
09:16:59  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:16:59  17  
09:16:59  18  	-- xform input data to replace missing values
09:16:59  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
09:16:59  20  	  miss_table_name => 'svmc_miss_num',
09:16:59  21  	  data_table_name => '&bldtable',
09:16:59  22  	  xform_view_name => 'xformed_build_miss_num');
09:16:59  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
09:16:59  24  	  miss_table_name => 'svmc_miss_cat',
09:16:59  25  	  data_table_name => '&bldtable',
09:16:59  26  	  xform_view_name => 'xformed_build_miss_cat');
09:16:59  27  
09:16:59  28  	-- Perform outlier treatment.
09:16:59  29  	-- create clip table
09:16:59  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
09:16:59  31  
09:16:59  32  	-- populate clip table
09:16:59  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
09:16:59  34  	  clip_table_name => 'svmc_clip',
09:16:59  35  	  data_table_name => '&bldtable',
09:16:59  36  	  tail_frac	  => 0.025,
09:16:59  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:16:59  38  
09:16:59  39  	-- xform input data to winsorized data
09:16:59  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
09:16:59  41  	  clip_table_name => 'svmc_clip',
09:16:59  42  	  data_table_name => '&bldtable',
09:16:59  43  	  xform_view_name => 'svmc_winsor');
09:16:59  44  
09:16:59  45  	-- create normalization table
09:16:59  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
09:16:59  47  
09:16:59  48  	-- populate normalization table based on winsorized data
09:16:59  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
09:16:59  50  	  norm_table_name => 'svmc_norm',
09:16:59  51  	  data_table_name => 'svmc_winsor',
09:16:59  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:16:59  53  
09:16:59  54  	-- normalize the original data
09:16:59  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
09:16:59  56  	  norm_table_name => 'svmc_norm',
09:16:59  57  	  data_table_name => '&bldtable',
09:16:59  58  	  xform_view_name => 'svmc_build_prep');
09:16:59  59  END;
09:16:59  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.19
09:17:17 SQL> 
09:17:17 SQL> ---------------------
09:17:17 SQL> -- CREATE A NEW MODEL
09:17:17 SQL> --
09:17:17 SQL> -- Cleanup old model with the same name for repeat runs
09:17:17 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
09:17:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:17:17   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.05
09:17:18 SQL> 
09:17:18 SQL> -- Build a new SVM Model
09:17:18 SQL> BEGIN
09:17:18   2  	DBMS_DATA_MINING.CREATE_MODEL(
09:17:18   3  	  model_name	      => '&model_name',
09:17:18   4  	  mining_function     => dbms_data_mining.classification,
09:17:18   5  	  data_table_name     => 'svmc_build_prep',
09:17:18   6  	  case_id_column_name => '&case_id',
09:17:18   7  	  target_column_name  => '&target',
09:17:18   8  	  settings_table_name => 'svmc_settings');
09:17:18   9  END;
09:17:18  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.40
09:17:44 SQL> 
09:17:44 SQL> -----------------------------------------------------------------------
09:17:44 SQL> --			       APPLY/score THE MODEL
09:17:44 SQL> -----------------------------------------------------------------------
09:17:44 SQL> 
09:17:44 SQL> -- Cleanup old scoring data preparation objects for repeat runs
09:17:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
09:17:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:17:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
09:17:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
09:17:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:17:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
09:17:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
09:17:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:17:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:17:44 SQL> -----------------------
09:17:44 SQL> -- PREPARE SCORING DATA
09:17:44 SQL> --
09:17:44 SQL> -- If the data for model creation has been prepared, then the data
09:17:44 SQL> -- to be scored using the model must be prepared in the same manner
09:17:44 SQL> -- in order to obtain meaningful results.
09:17:44 SQL> --
09:17:44 SQL> -- 1. Missing Value treatment for all Predictors and
09:17:44 SQL> -- 2. Normalization
09:17:44 SQL> -- No outlier treatment will be performed during test and apply. The
09:17:44 SQL> -- normalization step is sufficient, since the normalization parameters
09:17:44 SQL> -- already capture the effects of outlier treatment done with build data.
09:17:44 SQL> --
09:17:44 SQL> BEGIN
09:17:44   2  	-- Xform Test data to replace missing values
09:17:44   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
09:17:44   4  	  miss_table_name => 'svmc_miss_num',
09:17:44   5  	  data_table_name => '&scoretable',
09:17:44   6  	  xform_view_name => 'xformed_apply_miss_num');
09:17:44   7  
09:17:44   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
09:17:44   9  	  miss_table_name => 'svmc_miss_cat',
09:17:44  10  	  data_table_name => '&scoretable',
09:17:44  11  	  xform_view_name => 'xformed_apply_miss_cat');
09:17:44  12  
09:17:44  13  	-- Normalize the data to be scored
09:17:44  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
09:17:44  15  	  norm_table_name => 'svmc_norm',
09:17:44  16  	  data_table_name => '&scoretable',
09:17:44  17  	  xform_view_name => 'svmc_apply_prep');
09:17:44  18  END;
09:17:44  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
09:17:46 SQL> 
09:17:46 SQL> -- Use same model_name used in score.sql
09:17:46 SQL> DEFINE model_name = 'forex14'
09:17:46 SQL> 
09:17:46 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
09:17:46 SQL> 
09:17:46 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
09:17:46 SQL> 
09:17:46 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
09:17:46   2  SELECT
09:17:46   3  prdate
09:17:46   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
09:17:46   5  ,sysdate
09:17:46   6  ,SUBSTR(prdate,1,3)pair
09:17:46   7  ,SUBSTR(prdate,4,19)ydate
09:17:46   8  FROM svmc_apply_prep
09:17:46   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
09:17:46 SQL> @aud_score1day_gattn.sql	2010-12-31 08:55:00
09:17:46 SQL> --
09:17:46 SQL> -- aud_score1day_gattn.sql
09:17:46 SQL> --
09:17:46 SQL> 
09:17:46 SQL> CREATE OR REPLACE VIEW sme AS
09:17:46   2  SELECT
09:17:46   3  'aud'||m.ydate prdate
09:17:46   4  ,NULL gattn
09:17:46   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
09:17:46   6  ,eur_g00
09:17:46   7  ,eur_g01
09:17:46   8  ,eur_g02
09:17:46   9  ,eur_g03
09:17:46  10  ,eur_g04
09:17:46  11  ,eur_g05
09:17:46  12  ,eur_g06
09:17:46  13  ,eur_g07
09:17:46  14  ,eur_g08
09:17:46  15  ,eur_g09
09:17:46  16  ,eur_g10
09:17:46  17  ,eur_g11
09:17:46  18  ,eur_g12
09:17:46  19  ,eur_g13
09:17:46  20  ,eur_g14
09:17:46  21  ,eur_g15
09:17:46  22  ,eur_g16
09:17:46  23  ,eur_g17
09:17:46  24  ,eur_g18
09:17:46  25  ,eur_g19
09:17:46  26  ,eur_g20
09:17:46  27  ,eur_g21
09:17:46  28  ,eur_g22
09:17:46  29  ,eur_g23
09:17:46  30  ,eur_g24
09:17:46  31  ,eur_g25
09:17:46  32  ,eur_g26
09:17:46  33  ,eur_g27
09:17:46  34  ,eur_g28
09:17:46  35  ,eur_g29
09:17:46  36  ,eur_g30
09:17:46  37  ,eur_g31
09:17:46  38  ,eur_g32
09:17:46  39  ,eur_g33
09:17:46  40  ,eur_g34
09:17:46  41  ,eur_g35
09:17:46  42  ,eur_g36
09:17:46  43  ,eur_g37
09:17:46  44  ,eur_g38
09:17:46  45  ,eur_g39
09:17:46  46  ,eur_g40
09:17:46  47  ,eur_g41
09:17:46  48  ,aud_g00
09:17:46  49  ,aud_g01
09:17:46  50  ,aud_g02
09:17:46  51  ,aud_g03
09:17:46  52  ,aud_g04
09:17:46  53  ,aud_g05
09:17:46  54  ,aud_g06
09:17:46  55  ,aud_g07
09:17:46  56  ,aud_g08
09:17:46  57  ,aud_g09
09:17:46  58  ,aud_g10
09:17:46  59  ,aud_g11
09:17:46  60  ,aud_g12
09:17:46  61  ,aud_g13
09:17:46  62  ,aud_g14
09:17:46  63  ,aud_g15
09:17:46  64  ,aud_g16
09:17:46  65  ,aud_g17
09:17:46  66  ,aud_g18
09:17:46  67  ,aud_g19
09:17:46  68  ,aud_g20
09:17:46  69  ,aud_g21
09:17:46  70  ,aud_g22
09:17:46  71  ,aud_g23
09:17:46  72  ,aud_g24
09:17:46  73  ,aud_g25
09:17:46  74  ,aud_g26
09:17:46  75  ,aud_g27
09:17:46  76  ,aud_g28
09:17:46  77  ,aud_g29
09:17:46  78  ,aud_g30
09:17:46  79  ,aud_g31
09:17:46  80  ,aud_g32
09:17:46  81  ,aud_g33
09:17:46  82  ,aud_g34
09:17:46  83  ,aud_g35
09:17:46  84  ,aud_g36
09:17:46  85  ,aud_g37
09:17:46  86  ,aud_g38
09:17:46  87  ,aud_g39
09:17:46  88  ,aud_g40
09:17:46  89  ,aud_g41
09:17:46  90  ,gbp_g00
09:17:46  91  ,gbp_g01
09:17:46  92  ,gbp_g02
09:17:46  93  ,gbp_g03
09:17:46  94  ,gbp_g04
09:17:46  95  ,gbp_g05
09:17:46  96  ,gbp_g06
09:17:46  97  ,gbp_g07
09:17:46  98  ,gbp_g08
09:17:46  99  ,gbp_g09
09:17:46 100  ,gbp_g10
09:17:46 101  ,gbp_g11
09:17:46 102  ,gbp_g12
09:17:46 103  ,gbp_g13
09:17:46 104  ,gbp_g14
09:17:46 105  ,gbp_g15
09:17:46 106  ,gbp_g16
09:17:46 107  ,gbp_g17
09:17:46 108  ,gbp_g18
09:17:46 109  ,gbp_g19
09:17:46 110  ,gbp_g20
09:17:46 111  ,gbp_g21
09:17:46 112  ,gbp_g22
09:17:46 113  ,gbp_g23
09:17:46 114  ,gbp_g24
09:17:46 115  ,gbp_g25
09:17:46 116  ,gbp_g26
09:17:46 117  ,gbp_g27
09:17:46 118  ,gbp_g28
09:17:46 119  ,gbp_g29
09:17:46 120  ,gbp_g30
09:17:46 121  ,gbp_g31
09:17:46 122  ,gbp_g32
09:17:46 123  ,gbp_g33
09:17:46 124  ,gbp_g34
09:17:46 125  ,gbp_g35
09:17:46 126  ,gbp_g36
09:17:46 127  ,gbp_g37
09:17:46 128  ,gbp_g38
09:17:46 129  ,gbp_g39
09:17:46 130  ,gbp_g40
09:17:46 131  ,gbp_g41
09:17:46 132  ,jpy_g00
09:17:46 133  ,jpy_g01
09:17:46 134  ,jpy_g02
09:17:46 135  ,jpy_g03
09:17:46 136  ,jpy_g04
09:17:46 137  ,jpy_g05
09:17:46 138  ,jpy_g06
09:17:46 139  ,jpy_g07
09:17:46 140  ,jpy_g08
09:17:46 141  ,jpy_g09
09:17:46 142  ,jpy_g10
09:17:46 143  ,jpy_g11
09:17:46 144  ,jpy_g12
09:17:46 145  ,jpy_g13
09:17:46 146  ,jpy_g14
09:17:46 147  ,jpy_g15
09:17:46 148  ,jpy_g16
09:17:46 149  ,jpy_g17
09:17:46 150  ,jpy_g18
09:17:46 151  ,jpy_g19
09:17:46 152  ,jpy_g20
09:17:46 153  ,jpy_g21
09:17:46 154  ,jpy_g22
09:17:46 155  ,jpy_g23
09:17:46 156  ,jpy_g24
09:17:46 157  ,jpy_g25
09:17:46 158  ,jpy_g26
09:17:46 159  ,jpy_g27
09:17:46 160  ,jpy_g28
09:17:46 161  ,jpy_g29
09:17:46 162  ,jpy_g30
09:17:46 163  ,jpy_g31
09:17:46 164  ,jpy_g32
09:17:46 165  ,jpy_g33
09:17:46 166  ,jpy_g34
09:17:46 167  ,jpy_g35
09:17:46 168  ,jpy_g36
09:17:46 169  ,jpy_g37
09:17:46 170  ,jpy_g38
09:17:46 171  ,jpy_g39
09:17:46 172  ,jpy_g40
09:17:46 173  ,jpy_g41
09:17:46 174  ,cad_g00
09:17:46 175  ,cad_g01
09:17:46 176  ,cad_g02
09:17:46 177  ,cad_g03
09:17:46 178  ,cad_g04
09:17:46 179  ,cad_g05
09:17:46 180  ,cad_g06
09:17:46 181  ,cad_g07
09:17:46 182  ,cad_g08
09:17:46 183  ,cad_g09
09:17:46 184  ,cad_g10
09:17:46 185  ,cad_g11
09:17:46 186  ,cad_g12
09:17:46 187  ,cad_g13
09:17:46 188  ,cad_g14
09:17:46 189  ,cad_g15
09:17:46 190  ,cad_g16
09:17:46 191  ,cad_g17
09:17:46 192  ,cad_g18
09:17:46 193  ,cad_g19
09:17:46 194  ,cad_g20
09:17:46 195  ,cad_g21
09:17:46 196  ,cad_g22
09:17:46 197  ,cad_g23
09:17:46 198  ,cad_g24
09:17:46 199  ,cad_g25
09:17:46 200  ,cad_g26
09:17:46 201  ,cad_g27
09:17:46 202  ,cad_g28
09:17:46 203  ,cad_g29
09:17:46 204  ,cad_g30
09:17:46 205  ,cad_g31
09:17:46 206  ,cad_g32
09:17:46 207  ,cad_g33
09:17:46 208  ,cad_g34
09:17:46 209  ,cad_g35
09:17:46 210  ,cad_g36
09:17:46 211  ,cad_g37
09:17:46 212  ,cad_g38
09:17:46 213  ,cad_g39
09:17:46 214  ,cad_g40
09:17:46 215  ,cad_g41
09:17:46 216  ,chf_g00
09:17:46 217  ,chf_g01
09:17:46 218  ,chf_g02
09:17:46 219  ,chf_g03
09:17:46 220  ,chf_g04
09:17:46 221  ,chf_g05
09:17:46 222  ,chf_g06
09:17:46 223  ,chf_g07
09:17:46 224  ,chf_g08
09:17:46 225  ,chf_g09
09:17:46 226  ,chf_g10
09:17:46 227  ,chf_g11
09:17:46 228  ,chf_g12
09:17:46 229  ,chf_g13
09:17:46 230  ,chf_g14
09:17:46 231  ,chf_g15
09:17:46 232  ,chf_g16
09:17:46 233  ,chf_g17
09:17:46 234  ,chf_g18
09:17:46 235  ,chf_g19
09:17:46 236  ,chf_g20
09:17:46 237  ,chf_g21
09:17:46 238  ,chf_g22
09:17:46 239  ,chf_g23
09:17:46 240  ,chf_g24
09:17:46 241  ,chf_g25
09:17:46 242  ,chf_g26
09:17:46 243  ,chf_g27
09:17:46 244  ,chf_g28
09:17:46 245  ,chf_g29
09:17:46 246  ,chf_g30
09:17:46 247  ,chf_g31
09:17:46 248  ,chf_g32
09:17:46 249  ,chf_g33
09:17:46 250  ,chf_g34
09:17:46 251  ,chf_g35
09:17:46 252  ,chf_g36
09:17:46 253  ,chf_g37
09:17:46 254  ,chf_g38
09:17:46 255  ,chf_g39
09:17:46 256  ,chf_g40
09:17:46 257  ,chf_g41
09:17:46 258  FROM aud_ms6 m
09:17:46 259  WHERE m.ydate = '&1'||' '||'&2'
09:17:46 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'08:55:00'

View created.

Elapsed: 00:00:00.13
09:17:46 SQL> 
09:17:46 SQL> -- rpt
09:17:46 SQL> -- We should see just 1 row:
09:17:46 SQL> 
09:17:46 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
09:17:46 SQL> 
09:17:46 SQL> -- Build the model:
09:17:46 SQL> CREATE OR REPLACE VIEW bme AS
09:17:46   2  SELECT
09:17:46   3  'aud'||m.ydate prdate
09:17:46   4  ,gattn
09:17:46   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
09:17:46   6  ,eur_g00
09:17:46   7  ,eur_g01
09:17:46   8  ,eur_g02
09:17:46   9  ,eur_g03
09:17:46  10  ,eur_g04
09:17:46  11  ,eur_g05
09:17:46  12  ,eur_g06
09:17:46  13  ,eur_g07
09:17:46  14  ,eur_g08
09:17:46  15  ,eur_g09
09:17:46  16  ,eur_g10
09:17:46  17  ,eur_g11
09:17:46  18  ,eur_g12
09:17:46  19  ,eur_g13
09:17:46  20  ,eur_g14
09:17:46  21  ,eur_g15
09:17:46  22  ,eur_g16
09:17:46  23  ,eur_g17
09:17:46  24  ,eur_g18
09:17:46  25  ,eur_g19
09:17:46  26  ,eur_g20
09:17:46  27  ,eur_g21
09:17:46  28  ,eur_g22
09:17:46  29  ,eur_g23
09:17:46  30  ,eur_g24
09:17:46  31  ,eur_g25
09:17:46  32  ,eur_g26
09:17:46  33  ,eur_g27
09:17:46  34  ,eur_g28
09:17:46  35  ,eur_g29
09:17:46  36  ,eur_g30
09:17:46  37  ,eur_g31
09:17:46  38  ,eur_g32
09:17:46  39  ,eur_g33
09:17:46  40  ,eur_g34
09:17:46  41  ,eur_g35
09:17:46  42  ,eur_g36
09:17:46  43  ,eur_g37
09:17:46  44  ,eur_g38
09:17:46  45  ,eur_g39
09:17:46  46  ,eur_g40
09:17:46  47  ,eur_g41
09:17:46  48  ,aud_g00
09:17:46  49  ,aud_g01
09:17:46  50  ,aud_g02
09:17:46  51  ,aud_g03
09:17:46  52  ,aud_g04
09:17:46  53  ,aud_g05
09:17:46  54  ,aud_g06
09:17:46  55  ,aud_g07
09:17:46  56  ,aud_g08
09:17:46  57  ,aud_g09
09:17:46  58  ,aud_g10
09:17:46  59  ,aud_g11
09:17:46  60  ,aud_g12
09:17:46  61  ,aud_g13
09:17:46  62  ,aud_g14
09:17:46  63  ,aud_g15
09:17:46  64  ,aud_g16
09:17:46  65  ,aud_g17
09:17:46  66  ,aud_g18
09:17:46  67  ,aud_g19
09:17:46  68  ,aud_g20
09:17:46  69  ,aud_g21
09:17:46  70  ,aud_g22
09:17:46  71  ,aud_g23
09:17:46  72  ,aud_g24
09:17:46  73  ,aud_g25
09:17:46  74  ,aud_g26
09:17:46  75  ,aud_g27
09:17:46  76  ,aud_g28
09:17:46  77  ,aud_g29
09:17:46  78  ,aud_g30
09:17:46  79  ,aud_g31
09:17:46  80  ,aud_g32
09:17:46  81  ,aud_g33
09:17:46  82  ,aud_g34
09:17:46  83  ,aud_g35
09:17:46  84  ,aud_g36
09:17:46  85  ,aud_g37
09:17:46  86  ,aud_g38
09:17:46  87  ,aud_g39
09:17:46  88  ,aud_g40
09:17:46  89  ,aud_g41
09:17:46  90  ,gbp_g00
09:17:46  91  ,gbp_g01
09:17:46  92  ,gbp_g02
09:17:46  93  ,gbp_g03
09:17:46  94  ,gbp_g04
09:17:46  95  ,gbp_g05
09:17:46  96  ,gbp_g06
09:17:46  97  ,gbp_g07
09:17:46  98  ,gbp_g08
09:17:46  99  ,gbp_g09
09:17:46 100  ,gbp_g10
09:17:46 101  ,gbp_g11
09:17:46 102  ,gbp_g12
09:17:46 103  ,gbp_g13
09:17:46 104  ,gbp_g14
09:17:46 105  ,gbp_g15
09:17:46 106  ,gbp_g16
09:17:46 107  ,gbp_g17
09:17:46 108  ,gbp_g18
09:17:46 109  ,gbp_g19
09:17:46 110  ,gbp_g20
09:17:46 111  ,gbp_g21
09:17:46 112  ,gbp_g22
09:17:46 113  ,gbp_g23
09:17:46 114  ,gbp_g24
09:17:46 115  ,gbp_g25
09:17:46 116  ,gbp_g26
09:17:46 117  ,gbp_g27
09:17:46 118  ,gbp_g28
09:17:46 119  ,gbp_g29
09:17:46 120  ,gbp_g30
09:17:46 121  ,gbp_g31
09:17:46 122  ,gbp_g32
09:17:46 123  ,gbp_g33
09:17:46 124  ,gbp_g34
09:17:46 125  ,gbp_g35
09:17:46 126  ,gbp_g36
09:17:46 127  ,gbp_g37
09:17:46 128  ,gbp_g38
09:17:46 129  ,gbp_g39
09:17:46 130  ,gbp_g40
09:17:46 131  ,gbp_g41
09:17:46 132  ,jpy_g00
09:17:46 133  ,jpy_g01
09:17:46 134  ,jpy_g02
09:17:46 135  ,jpy_g03
09:17:46 136  ,jpy_g04
09:17:46 137  ,jpy_g05
09:17:46 138  ,jpy_g06
09:17:46 139  ,jpy_g07
09:17:46 140  ,jpy_g08
09:17:46 141  ,jpy_g09
09:17:46 142  ,jpy_g10
09:17:46 143  ,jpy_g11
09:17:46 144  ,jpy_g12
09:17:46 145  ,jpy_g13
09:17:46 146  ,jpy_g14
09:17:46 147  ,jpy_g15
09:17:46 148  ,jpy_g16
09:17:46 149  ,jpy_g17
09:17:46 150  ,jpy_g18
09:17:46 151  ,jpy_g19
09:17:46 152  ,jpy_g20
09:17:46 153  ,jpy_g21
09:17:46 154  ,jpy_g22
09:17:46 155  ,jpy_g23
09:17:46 156  ,jpy_g24
09:17:46 157  ,jpy_g25
09:17:46 158  ,jpy_g26
09:17:46 159  ,jpy_g27
09:17:46 160  ,jpy_g28
09:17:46 161  ,jpy_g29
09:17:46 162  ,jpy_g30
09:17:46 163  ,jpy_g31
09:17:46 164  ,jpy_g32
09:17:46 165  ,jpy_g33
09:17:46 166  ,jpy_g34
09:17:46 167  ,jpy_g35
09:17:46 168  ,jpy_g36
09:17:46 169  ,jpy_g37
09:17:46 170  ,jpy_g38
09:17:46 171  ,jpy_g39
09:17:46 172  ,jpy_g40
09:17:46 173  ,jpy_g41
09:17:46 174  ,cad_g00
09:17:46 175  ,cad_g01
09:17:46 176  ,cad_g02
09:17:46 177  ,cad_g03
09:17:46 178  ,cad_g04
09:17:46 179  ,cad_g05
09:17:46 180  ,cad_g06
09:17:46 181  ,cad_g07
09:17:46 182  ,cad_g08
09:17:46 183  ,cad_g09
09:17:46 184  ,cad_g10
09:17:46 185  ,cad_g11
09:17:46 186  ,cad_g12
09:17:46 187  ,cad_g13
09:17:46 188  ,cad_g14
09:17:46 189  ,cad_g15
09:17:46 190  ,cad_g16
09:17:46 191  ,cad_g17
09:17:46 192  ,cad_g18
09:17:46 193  ,cad_g19
09:17:46 194  ,cad_g20
09:17:46 195  ,cad_g21
09:17:46 196  ,cad_g22
09:17:46 197  ,cad_g23
09:17:46 198  ,cad_g24
09:17:46 199  ,cad_g25
09:17:46 200  ,cad_g26
09:17:46 201  ,cad_g27
09:17:46 202  ,cad_g28
09:17:46 203  ,cad_g29
09:17:46 204  ,cad_g30
09:17:46 205  ,cad_g31
09:17:46 206  ,cad_g32
09:17:46 207  ,cad_g33
09:17:46 208  ,cad_g34
09:17:46 209  ,cad_g35
09:17:46 210  ,cad_g36
09:17:46 211  ,cad_g37
09:17:46 212  ,cad_g38
09:17:46 213  ,cad_g39
09:17:46 214  ,cad_g40
09:17:46 215  ,cad_g41
09:17:46 216  ,chf_g00
09:17:46 217  ,chf_g01
09:17:46 218  ,chf_g02
09:17:46 219  ,chf_g03
09:17:46 220  ,chf_g04
09:17:46 221  ,chf_g05
09:17:46 222  ,chf_g06
09:17:46 223  ,chf_g07
09:17:46 224  ,chf_g08
09:17:46 225  ,chf_g09
09:17:46 226  ,chf_g10
09:17:46 227  ,chf_g11
09:17:46 228  ,chf_g12
09:17:46 229  ,chf_g13
09:17:46 230  ,chf_g14
09:17:46 231  ,chf_g15
09:17:46 232  ,chf_g16
09:17:46 233  ,chf_g17
09:17:46 234  ,chf_g18
09:17:46 235  ,chf_g19
09:17:46 236  ,chf_g20
09:17:46 237  ,chf_g21
09:17:46 238  ,chf_g22
09:17:46 239  ,chf_g23
09:17:46 240  ,chf_g24
09:17:46 241  ,chf_g25
09:17:46 242  ,chf_g26
09:17:46 243  ,chf_g27
09:17:46 244  ,chf_g28
09:17:46 245  ,chf_g29
09:17:46 246  ,chf_g30
09:17:46 247  ,chf_g31
09:17:46 248  ,chf_g32
09:17:46 249  ,chf_g33
09:17:46 250  ,chf_g34
09:17:46 251  ,chf_g35
09:17:46 252  ,chf_g36
09:17:46 253  ,chf_g37
09:17:46 254  ,chf_g38
09:17:46 255  ,chf_g39
09:17:46 256  ,chf_g40
09:17:46 257  ,chf_g41
09:17:46 258  FROM aud_ms6 m
09:17:46 259  WHERE gattn IN('nup','up')
09:17:46 260  AND 1+m.ydate < '&1'||' '||'&2'
09:17:46 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'08:55:00'

View created.

Elapsed: 00:00:00.11
09:17:46 SQL> 
09:17:46 SQL> -- rpt
09:17:46 SQL> 
09:17:46 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13115
up	     6422

Elapsed: 00:00:00.04
09:17:46 SQL> 
09:17:46 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 08:50:00

Elapsed: 00:00:00.03
09:17:46 SQL> 
09:17:46 SQL> -- Now build model from bme and score sme
09:17:46 SQL> @score1gattn.sql
09:17:46 SQL> -- score1gattn.sql
09:17:46 SQL> 
09:17:46 SQL> -- Does the 1st SVM score
09:17:46 SQL> 
09:17:46 SQL> -- Fill up svmc_apply_prep
09:17:46 SQL> @score_gattn.sql
09:17:46 SQL> --
09:17:46 SQL> -- score_gattn.sql
09:17:46 SQL> --
09:17:46 SQL> 
09:17:46 SQL> -- usage: score_gattn.sql
09:17:46 SQL> 
09:17:46 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
09:17:46 SQL> 
09:17:46 SQL> DEFINE target	= 'gattn'
09:17:46 SQL> DEFINE model_name = 'forex14'
09:17:46 SQL> DEFINE bldtable	= 'bme'
09:17:46 SQL> DEFINE scoretable = 'sme'
09:17:46 SQL> DEFINE case_id	= 'prdate'
09:17:46 SQL> 
09:17:46 SQL> -- Define a variable to help me exclude some columns from some data mining calls
09:17:46 SQL> DEFINE exclude1 = "'&target','&case_id'"
09:17:46 SQL> 
09:17:46 SQL> -- Builds an SVM model using pl/sql.
09:17:46 SQL> 
09:17:46 SQL> -----------------------------------------------------------------------
09:17:46 SQL> --			    BUILD THE MODEL
09:17:46 SQL> -----------------------------------------------------------------------
09:17:46 SQL> 
09:17:46 SQL> -- Cleanup old build data preparation objects for repeat runs
09:17:46 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
09:17:46 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
09:17:46 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
09:17:46 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
09:17:46 SQL> 
09:17:46 SQL> 
09:17:46 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
09:17:46 SQL> --
09:17:46 SQL> -- DROP	TABLE svmc_settings ;
09:17:46 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
09:17:46 SQL> -- DELETE svmc_settings;
09:17:46 SQL> 
09:17:46 SQL> -- The default classification algorithm is Naive Bayes. So override
09:17:46 SQL> -- this choice to SVM using a settings table.
09:17:46 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
09:17:46 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
09:17:46 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
09:17:46 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
09:17:46 SQL> -- models.
09:17:46 SQL> --
09:17:46 SQL> 
09:17:46 SQL> -- Do this once and then comment it out.
09:17:46 SQL> -- That makes script go faster.
09:17:46 SQL> -- BEGIN
09:17:46 SQL> -- -- Populate settings table
09:17:46 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:17:46 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
09:17:46 SQL> --
09:17:46 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:17:46 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
09:17:46 SQL> --
09:17:46 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:17:46 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
09:17:46 SQL> --   COMMIT;
09:17:46 SQL> -- END;
09:17:46 SQL> -- /
09:17:46 SQL> 
09:17:46 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
09:17:46 SQL> 
09:17:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
09:17:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:17:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
09:17:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
09:17:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:17:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
09:17:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
09:17:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:17:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:17:46 SQL> 
09:17:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
09:17:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:17:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
09:17:46 SQL> 
09:17:46 SQL> --------------------------------
09:17:46 SQL> -- PREPARE BUILD (TRAINING) DATA
09:17:46 SQL> --
09:17:46 SQL> 
09:17:46 SQL> -- 1. Missing Value treatment for all Predictors and
09:17:46 SQL> -- 2. Outlier Treatment and
09:17:46 SQL> -- 3. Normalization are performed below.
09:17:46 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
09:17:46 SQL> --    normalized here.
09:17:46 SQL> 
09:17:46 SQL> BEGIN
09:17:46   2  	-- Perform missing value treatment for all predictors
09:17:46   3  	-- create miss tables
09:17:46   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
09:17:46   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
09:17:46   6  
09:17:46   7  	-- populate miss tables
09:17:46   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
09:17:46   9  	  miss_table_name => 'svmc_miss_num',
09:17:46  10  	  data_table_name => '&bldtable',
09:17:46  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:17:46  12  
09:17:46  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
09:17:46  14  	  miss_table_name => 'svmc_miss_cat',
09:17:46  15  	  data_table_name => '&bldtable',
09:17:46  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:17:46  17  
09:17:46  18  	-- xform input data to replace missing values
09:17:46  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
09:17:46  20  	  miss_table_name => 'svmc_miss_num',
09:17:46  21  	  data_table_name => '&bldtable',
09:17:46  22  	  xform_view_name => 'xformed_build_miss_num');
09:17:46  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
09:17:46  24  	  miss_table_name => 'svmc_miss_cat',
09:17:46  25  	  data_table_name => '&bldtable',
09:17:46  26  	  xform_view_name => 'xformed_build_miss_cat');
09:17:46  27  
09:17:46  28  	-- Perform outlier treatment.
09:17:46  29  	-- create clip table
09:17:46  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
09:17:46  31  
09:17:46  32  	-- populate clip table
09:17:46  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
09:17:46  34  	  clip_table_name => 'svmc_clip',
09:17:46  35  	  data_table_name => '&bldtable',
09:17:46  36  	  tail_frac	  => 0.025,
09:17:46  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:17:46  38  
09:17:46  39  	-- xform input data to winsorized data
09:17:46  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
09:17:46  41  	  clip_table_name => 'svmc_clip',
09:17:46  42  	  data_table_name => '&bldtable',
09:17:46  43  	  xform_view_name => 'svmc_winsor');
09:17:46  44  
09:17:46  45  	-- create normalization table
09:17:46  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
09:17:46  47  
09:17:46  48  	-- populate normalization table based on winsorized data
09:17:46  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
09:17:46  50  	  norm_table_name => 'svmc_norm',
09:17:46  51  	  data_table_name => 'svmc_winsor',
09:17:46  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:17:46  53  
09:17:46  54  	-- normalize the original data
09:17:46  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
09:17:46  56  	  norm_table_name => 'svmc_norm',
09:17:46  57  	  data_table_name => '&bldtable',
09:17:46  58  	  xform_view_name => 'svmc_build_prep');
09:17:46  59  END;
09:17:46  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.45
09:18:05 SQL> 
09:18:05 SQL> ---------------------
09:18:05 SQL> -- CREATE A NEW MODEL
09:18:05 SQL> --
09:18:05 SQL> -- Cleanup old model with the same name for repeat runs
09:18:05 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
09:18:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:18:05   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:02.36
09:18:07 SQL> 
09:18:07 SQL> -- Build a new SVM Model
09:18:07 SQL> BEGIN
09:18:07   2  	DBMS_DATA_MINING.CREATE_MODEL(
09:18:07   3  	  model_name	      => '&model_name',
09:18:07   4  	  mining_function     => dbms_data_mining.classification,
09:18:07   5  	  data_table_name     => 'svmc_build_prep',
09:18:07   6  	  case_id_column_name => '&case_id',
09:18:07   7  	  target_column_name  => '&target',
09:18:07   8  	  settings_table_name => 'svmc_settings');
09:18:07   9  END;
09:18:07  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.76
09:18:33 SQL> 
09:18:33 SQL> -----------------------------------------------------------------------
09:18:33 SQL> --			       APPLY/score THE MODEL
09:18:33 SQL> -----------------------------------------------------------------------
09:18:33 SQL> 
09:18:33 SQL> -- Cleanup old scoring data preparation objects for repeat runs
09:18:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
09:18:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:18:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
09:18:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
09:18:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:18:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
09:18:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
09:18:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:18:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:18:33 SQL> -----------------------
09:18:33 SQL> -- PREPARE SCORING DATA
09:18:33 SQL> --
09:18:33 SQL> -- If the data for model creation has been prepared, then the data
09:18:33 SQL> -- to be scored using the model must be prepared in the same manner
09:18:33 SQL> -- in order to obtain meaningful results.
09:18:33 SQL> --
09:18:33 SQL> -- 1. Missing Value treatment for all Predictors and
09:18:33 SQL> -- 2. Normalization
09:18:33 SQL> -- No outlier treatment will be performed during test and apply. The
09:18:33 SQL> -- normalization step is sufficient, since the normalization parameters
09:18:33 SQL> -- already capture the effects of outlier treatment done with build data.
09:18:33 SQL> --
09:18:33 SQL> BEGIN
09:18:33   2  	-- Xform Test data to replace missing values
09:18:33   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
09:18:33   4  	  miss_table_name => 'svmc_miss_num',
09:18:33   5  	  data_table_name => '&scoretable',
09:18:33   6  	  xform_view_name => 'xformed_apply_miss_num');
09:18:33   7  
09:18:33   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
09:18:33   9  	  miss_table_name => 'svmc_miss_cat',
09:18:33  10  	  data_table_name => '&scoretable',
09:18:33  11  	  xform_view_name => 'xformed_apply_miss_cat');
09:18:33  12  
09:18:33  13  	-- Normalize the data to be scored
09:18:33  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
09:18:33  15  	  norm_table_name => 'svmc_norm',
09:18:33  16  	  data_table_name => '&scoretable',
09:18:33  17  	  xform_view_name => 'svmc_apply_prep');
09:18:33  18  END;
09:18:33  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
09:18:34 SQL> 
09:18:34 SQL> -- Use same model_name used in score_gattn.sql
09:18:34 SQL> DEFINE model_name = 'forex14'
09:18:34 SQL> 
09:18:34 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
09:18:34 SQL> 
09:18:34 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
09:18:34   2  SELECT
09:18:34   3  prdate
09:18:34   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
09:18:34   5  ,sysdate
09:18:34   6  ,SUBSTR(prdate,1,3)pair
09:18:34   7  ,SUBSTR(prdate,4,19)ydate
09:18:34   8  FROM svmc_apply_prep
09:18:34   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
09:18:34 SQL> @aud_score1day_gattn.sql	2010-12-31 09:00:00
09:18:34 SQL> --
09:18:34 SQL> -- aud_score1day_gattn.sql
09:18:34 SQL> --
09:18:34 SQL> 
09:18:34 SQL> CREATE OR REPLACE VIEW sme AS
09:18:34   2  SELECT
09:18:34   3  'aud'||m.ydate prdate
09:18:34   4  ,NULL gattn
09:18:34   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
09:18:34   6  ,eur_g00
09:18:34   7  ,eur_g01
09:18:34   8  ,eur_g02
09:18:34   9  ,eur_g03
09:18:34  10  ,eur_g04
09:18:34  11  ,eur_g05
09:18:34  12  ,eur_g06
09:18:34  13  ,eur_g07
09:18:34  14  ,eur_g08
09:18:34  15  ,eur_g09
09:18:34  16  ,eur_g10
09:18:34  17  ,eur_g11
09:18:34  18  ,eur_g12
09:18:34  19  ,eur_g13
09:18:34  20  ,eur_g14
09:18:34  21  ,eur_g15
09:18:34  22  ,eur_g16
09:18:34  23  ,eur_g17
09:18:34  24  ,eur_g18
09:18:34  25  ,eur_g19
09:18:34  26  ,eur_g20
09:18:34  27  ,eur_g21
09:18:34  28  ,eur_g22
09:18:34  29  ,eur_g23
09:18:34  30  ,eur_g24
09:18:34  31  ,eur_g25
09:18:34  32  ,eur_g26
09:18:34  33  ,eur_g27
09:18:34  34  ,eur_g28
09:18:34  35  ,eur_g29
09:18:34  36  ,eur_g30
09:18:34  37  ,eur_g31
09:18:34  38  ,eur_g32
09:18:34  39  ,eur_g33
09:18:34  40  ,eur_g34
09:18:34  41  ,eur_g35
09:18:34  42  ,eur_g36
09:18:34  43  ,eur_g37
09:18:34  44  ,eur_g38
09:18:34  45  ,eur_g39
09:18:34  46  ,eur_g40
09:18:34  47  ,eur_g41
09:18:34  48  ,aud_g00
09:18:34  49  ,aud_g01
09:18:34  50  ,aud_g02
09:18:34  51  ,aud_g03
09:18:34  52  ,aud_g04
09:18:34  53  ,aud_g05
09:18:34  54  ,aud_g06
09:18:34  55  ,aud_g07
09:18:34  56  ,aud_g08
09:18:34  57  ,aud_g09
09:18:34  58  ,aud_g10
09:18:34  59  ,aud_g11
09:18:34  60  ,aud_g12
09:18:34  61  ,aud_g13
09:18:34  62  ,aud_g14
09:18:34  63  ,aud_g15
09:18:34  64  ,aud_g16
09:18:34  65  ,aud_g17
09:18:34  66  ,aud_g18
09:18:34  67  ,aud_g19
09:18:34  68  ,aud_g20
09:18:34  69  ,aud_g21
09:18:34  70  ,aud_g22
09:18:34  71  ,aud_g23
09:18:34  72  ,aud_g24
09:18:34  73  ,aud_g25
09:18:34  74  ,aud_g26
09:18:34  75  ,aud_g27
09:18:34  76  ,aud_g28
09:18:34  77  ,aud_g29
09:18:34  78  ,aud_g30
09:18:34  79  ,aud_g31
09:18:34  80  ,aud_g32
09:18:34  81  ,aud_g33
09:18:34  82  ,aud_g34
09:18:34  83  ,aud_g35
09:18:34  84  ,aud_g36
09:18:34  85  ,aud_g37
09:18:34  86  ,aud_g38
09:18:34  87  ,aud_g39
09:18:34  88  ,aud_g40
09:18:34  89  ,aud_g41
09:18:34  90  ,gbp_g00
09:18:34  91  ,gbp_g01
09:18:34  92  ,gbp_g02
09:18:34  93  ,gbp_g03
09:18:34  94  ,gbp_g04
09:18:34  95  ,gbp_g05
09:18:34  96  ,gbp_g06
09:18:34  97  ,gbp_g07
09:18:34  98  ,gbp_g08
09:18:34  99  ,gbp_g09
09:18:34 100  ,gbp_g10
09:18:34 101  ,gbp_g11
09:18:34 102  ,gbp_g12
09:18:34 103  ,gbp_g13
09:18:34 104  ,gbp_g14
09:18:34 105  ,gbp_g15
09:18:34 106  ,gbp_g16
09:18:34 107  ,gbp_g17
09:18:34 108  ,gbp_g18
09:18:34 109  ,gbp_g19
09:18:34 110  ,gbp_g20
09:18:34 111  ,gbp_g21
09:18:34 112  ,gbp_g22
09:18:34 113  ,gbp_g23
09:18:34 114  ,gbp_g24
09:18:34 115  ,gbp_g25
09:18:34 116  ,gbp_g26
09:18:34 117  ,gbp_g27
09:18:34 118  ,gbp_g28
09:18:34 119  ,gbp_g29
09:18:34 120  ,gbp_g30
09:18:34 121  ,gbp_g31
09:18:34 122  ,gbp_g32
09:18:34 123  ,gbp_g33
09:18:34 124  ,gbp_g34
09:18:34 125  ,gbp_g35
09:18:34 126  ,gbp_g36
09:18:34 127  ,gbp_g37
09:18:34 128  ,gbp_g38
09:18:34 129  ,gbp_g39
09:18:34 130  ,gbp_g40
09:18:34 131  ,gbp_g41
09:18:34 132  ,jpy_g00
09:18:34 133  ,jpy_g01
09:18:34 134  ,jpy_g02
09:18:34 135  ,jpy_g03
09:18:34 136  ,jpy_g04
09:18:34 137  ,jpy_g05
09:18:34 138  ,jpy_g06
09:18:34 139  ,jpy_g07
09:18:34 140  ,jpy_g08
09:18:34 141  ,jpy_g09
09:18:34 142  ,jpy_g10
09:18:34 143  ,jpy_g11
09:18:34 144  ,jpy_g12
09:18:34 145  ,jpy_g13
09:18:34 146  ,jpy_g14
09:18:34 147  ,jpy_g15
09:18:34 148  ,jpy_g16
09:18:34 149  ,jpy_g17
09:18:34 150  ,jpy_g18
09:18:34 151  ,jpy_g19
09:18:34 152  ,jpy_g20
09:18:34 153  ,jpy_g21
09:18:34 154  ,jpy_g22
09:18:34 155  ,jpy_g23
09:18:34 156  ,jpy_g24
09:18:34 157  ,jpy_g25
09:18:34 158  ,jpy_g26
09:18:34 159  ,jpy_g27
09:18:34 160  ,jpy_g28
09:18:34 161  ,jpy_g29
09:18:34 162  ,jpy_g30
09:18:34 163  ,jpy_g31
09:18:34 164  ,jpy_g32
09:18:34 165  ,jpy_g33
09:18:34 166  ,jpy_g34
09:18:34 167  ,jpy_g35
09:18:34 168  ,jpy_g36
09:18:34 169  ,jpy_g37
09:18:34 170  ,jpy_g38
09:18:34 171  ,jpy_g39
09:18:34 172  ,jpy_g40
09:18:34 173  ,jpy_g41
09:18:34 174  ,cad_g00
09:18:34 175  ,cad_g01
09:18:34 176  ,cad_g02
09:18:34 177  ,cad_g03
09:18:34 178  ,cad_g04
09:18:34 179  ,cad_g05
09:18:34 180  ,cad_g06
09:18:34 181  ,cad_g07
09:18:34 182  ,cad_g08
09:18:34 183  ,cad_g09
09:18:34 184  ,cad_g10
09:18:34 185  ,cad_g11
09:18:34 186  ,cad_g12
09:18:34 187  ,cad_g13
09:18:34 188  ,cad_g14
09:18:34 189  ,cad_g15
09:18:34 190  ,cad_g16
09:18:34 191  ,cad_g17
09:18:34 192  ,cad_g18
09:18:34 193  ,cad_g19
09:18:34 194  ,cad_g20
09:18:34 195  ,cad_g21
09:18:34 196  ,cad_g22
09:18:34 197  ,cad_g23
09:18:34 198  ,cad_g24
09:18:34 199  ,cad_g25
09:18:34 200  ,cad_g26
09:18:34 201  ,cad_g27
09:18:34 202  ,cad_g28
09:18:34 203  ,cad_g29
09:18:34 204  ,cad_g30
09:18:34 205  ,cad_g31
09:18:34 206  ,cad_g32
09:18:34 207  ,cad_g33
09:18:34 208  ,cad_g34
09:18:34 209  ,cad_g35
09:18:34 210  ,cad_g36
09:18:34 211  ,cad_g37
09:18:34 212  ,cad_g38
09:18:34 213  ,cad_g39
09:18:34 214  ,cad_g40
09:18:34 215  ,cad_g41
09:18:34 216  ,chf_g00
09:18:34 217  ,chf_g01
09:18:34 218  ,chf_g02
09:18:34 219  ,chf_g03
09:18:34 220  ,chf_g04
09:18:34 221  ,chf_g05
09:18:34 222  ,chf_g06
09:18:34 223  ,chf_g07
09:18:34 224  ,chf_g08
09:18:34 225  ,chf_g09
09:18:34 226  ,chf_g10
09:18:34 227  ,chf_g11
09:18:34 228  ,chf_g12
09:18:34 229  ,chf_g13
09:18:34 230  ,chf_g14
09:18:34 231  ,chf_g15
09:18:34 232  ,chf_g16
09:18:34 233  ,chf_g17
09:18:34 234  ,chf_g18
09:18:34 235  ,chf_g19
09:18:34 236  ,chf_g20
09:18:34 237  ,chf_g21
09:18:34 238  ,chf_g22
09:18:34 239  ,chf_g23
09:18:34 240  ,chf_g24
09:18:34 241  ,chf_g25
09:18:34 242  ,chf_g26
09:18:34 243  ,chf_g27
09:18:34 244  ,chf_g28
09:18:34 245  ,chf_g29
09:18:34 246  ,chf_g30
09:18:34 247  ,chf_g31
09:18:34 248  ,chf_g32
09:18:34 249  ,chf_g33
09:18:34 250  ,chf_g34
09:18:34 251  ,chf_g35
09:18:34 252  ,chf_g36
09:18:34 253  ,chf_g37
09:18:34 254  ,chf_g38
09:18:34 255  ,chf_g39
09:18:34 256  ,chf_g40
09:18:34 257  ,chf_g41
09:18:34 258  FROM aud_ms6 m
09:18:34 259  WHERE m.ydate = '&1'||' '||'&2'
09:18:34 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'09:00:00'

View created.

Elapsed: 00:00:00.11
09:18:35 SQL> 
09:18:35 SQL> -- rpt
09:18:35 SQL> -- We should see just 1 row:
09:18:35 SQL> 
09:18:35 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
09:18:35 SQL> 
09:18:35 SQL> -- Build the model:
09:18:35 SQL> CREATE OR REPLACE VIEW bme AS
09:18:35   2  SELECT
09:18:35   3  'aud'||m.ydate prdate
09:18:35   4  ,gattn
09:18:35   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
09:18:35   6  ,eur_g00
09:18:35   7  ,eur_g01
09:18:35   8  ,eur_g02
09:18:35   9  ,eur_g03
09:18:35  10  ,eur_g04
09:18:35  11  ,eur_g05
09:18:35  12  ,eur_g06
09:18:35  13  ,eur_g07
09:18:35  14  ,eur_g08
09:18:35  15  ,eur_g09
09:18:35  16  ,eur_g10
09:18:35  17  ,eur_g11
09:18:35  18  ,eur_g12
09:18:35  19  ,eur_g13
09:18:35  20  ,eur_g14
09:18:35  21  ,eur_g15
09:18:35  22  ,eur_g16
09:18:35  23  ,eur_g17
09:18:35  24  ,eur_g18
09:18:35  25  ,eur_g19
09:18:35  26  ,eur_g20
09:18:35  27  ,eur_g21
09:18:35  28  ,eur_g22
09:18:35  29  ,eur_g23
09:18:35  30  ,eur_g24
09:18:35  31  ,eur_g25
09:18:35  32  ,eur_g26
09:18:35  33  ,eur_g27
09:18:35  34  ,eur_g28
09:18:35  35  ,eur_g29
09:18:35  36  ,eur_g30
09:18:35  37  ,eur_g31
09:18:35  38  ,eur_g32
09:18:35  39  ,eur_g33
09:18:35  40  ,eur_g34
09:18:35  41  ,eur_g35
09:18:35  42  ,eur_g36
09:18:35  43  ,eur_g37
09:18:35  44  ,eur_g38
09:18:35  45  ,eur_g39
09:18:35  46  ,eur_g40
09:18:35  47  ,eur_g41
09:18:35  48  ,aud_g00
09:18:35  49  ,aud_g01
09:18:35  50  ,aud_g02
09:18:35  51  ,aud_g03
09:18:35  52  ,aud_g04
09:18:35  53  ,aud_g05
09:18:35  54  ,aud_g06
09:18:35  55  ,aud_g07
09:18:35  56  ,aud_g08
09:18:35  57  ,aud_g09
09:18:35  58  ,aud_g10
09:18:35  59  ,aud_g11
09:18:35  60  ,aud_g12
09:18:35  61  ,aud_g13
09:18:35  62  ,aud_g14
09:18:35  63  ,aud_g15
09:18:35  64  ,aud_g16
09:18:35  65  ,aud_g17
09:18:35  66  ,aud_g18
09:18:35  67  ,aud_g19
09:18:35  68  ,aud_g20
09:18:35  69  ,aud_g21
09:18:35  70  ,aud_g22
09:18:35  71  ,aud_g23
09:18:35  72  ,aud_g24
09:18:35  73  ,aud_g25
09:18:35  74  ,aud_g26
09:18:35  75  ,aud_g27
09:18:35  76  ,aud_g28
09:18:35  77  ,aud_g29
09:18:35  78  ,aud_g30
09:18:35  79  ,aud_g31
09:18:35  80  ,aud_g32
09:18:35  81  ,aud_g33
09:18:35  82  ,aud_g34
09:18:35  83  ,aud_g35
09:18:35  84  ,aud_g36
09:18:35  85  ,aud_g37
09:18:35  86  ,aud_g38
09:18:35  87  ,aud_g39
09:18:35  88  ,aud_g40
09:18:35  89  ,aud_g41
09:18:35  90  ,gbp_g00
09:18:35  91  ,gbp_g01
09:18:35  92  ,gbp_g02
09:18:35  93  ,gbp_g03
09:18:35  94  ,gbp_g04
09:18:35  95  ,gbp_g05
09:18:35  96  ,gbp_g06
09:18:35  97  ,gbp_g07
09:18:35  98  ,gbp_g08
09:18:35  99  ,gbp_g09
09:18:35 100  ,gbp_g10
09:18:35 101  ,gbp_g11
09:18:35 102  ,gbp_g12
09:18:35 103  ,gbp_g13
09:18:35 104  ,gbp_g14
09:18:35 105  ,gbp_g15
09:18:35 106  ,gbp_g16
09:18:35 107  ,gbp_g17
09:18:35 108  ,gbp_g18
09:18:35 109  ,gbp_g19
09:18:35 110  ,gbp_g20
09:18:35 111  ,gbp_g21
09:18:35 112  ,gbp_g22
09:18:35 113  ,gbp_g23
09:18:35 114  ,gbp_g24
09:18:35 115  ,gbp_g25
09:18:35 116  ,gbp_g26
09:18:35 117  ,gbp_g27
09:18:35 118  ,gbp_g28
09:18:35 119  ,gbp_g29
09:18:35 120  ,gbp_g30
09:18:35 121  ,gbp_g31
09:18:35 122  ,gbp_g32
09:18:35 123  ,gbp_g33
09:18:35 124  ,gbp_g34
09:18:35 125  ,gbp_g35
09:18:35 126  ,gbp_g36
09:18:35 127  ,gbp_g37
09:18:35 128  ,gbp_g38
09:18:35 129  ,gbp_g39
09:18:35 130  ,gbp_g40
09:18:35 131  ,gbp_g41
09:18:35 132  ,jpy_g00
09:18:35 133  ,jpy_g01
09:18:35 134  ,jpy_g02
09:18:35 135  ,jpy_g03
09:18:35 136  ,jpy_g04
09:18:35 137  ,jpy_g05
09:18:35 138  ,jpy_g06
09:18:35 139  ,jpy_g07
09:18:35 140  ,jpy_g08
09:18:35 141  ,jpy_g09
09:18:35 142  ,jpy_g10
09:18:35 143  ,jpy_g11
09:18:35 144  ,jpy_g12
09:18:35 145  ,jpy_g13
09:18:35 146  ,jpy_g14
09:18:35 147  ,jpy_g15
09:18:35 148  ,jpy_g16
09:18:35 149  ,jpy_g17
09:18:35 150  ,jpy_g18
09:18:35 151  ,jpy_g19
09:18:35 152  ,jpy_g20
09:18:35 153  ,jpy_g21
09:18:35 154  ,jpy_g22
09:18:35 155  ,jpy_g23
09:18:35 156  ,jpy_g24
09:18:35 157  ,jpy_g25
09:18:35 158  ,jpy_g26
09:18:35 159  ,jpy_g27
09:18:35 160  ,jpy_g28
09:18:35 161  ,jpy_g29
09:18:35 162  ,jpy_g30
09:18:35 163  ,jpy_g31
09:18:35 164  ,jpy_g32
09:18:35 165  ,jpy_g33
09:18:35 166  ,jpy_g34
09:18:35 167  ,jpy_g35
09:18:35 168  ,jpy_g36
09:18:35 169  ,jpy_g37
09:18:35 170  ,jpy_g38
09:18:35 171  ,jpy_g39
09:18:35 172  ,jpy_g40
09:18:35 173  ,jpy_g41
09:18:35 174  ,cad_g00
09:18:35 175  ,cad_g01
09:18:35 176  ,cad_g02
09:18:35 177  ,cad_g03
09:18:35 178  ,cad_g04
09:18:35 179  ,cad_g05
09:18:35 180  ,cad_g06
09:18:35 181  ,cad_g07
09:18:35 182  ,cad_g08
09:18:35 183  ,cad_g09
09:18:35 184  ,cad_g10
09:18:35 185  ,cad_g11
09:18:35 186  ,cad_g12
09:18:35 187  ,cad_g13
09:18:35 188  ,cad_g14
09:18:35 189  ,cad_g15
09:18:35 190  ,cad_g16
09:18:35 191  ,cad_g17
09:18:35 192  ,cad_g18
09:18:35 193  ,cad_g19
09:18:35 194  ,cad_g20
09:18:35 195  ,cad_g21
09:18:35 196  ,cad_g22
09:18:35 197  ,cad_g23
09:18:35 198  ,cad_g24
09:18:35 199  ,cad_g25
09:18:35 200  ,cad_g26
09:18:35 201  ,cad_g27
09:18:35 202  ,cad_g28
09:18:35 203  ,cad_g29
09:18:35 204  ,cad_g30
09:18:35 205  ,cad_g31
09:18:35 206  ,cad_g32
09:18:35 207  ,cad_g33
09:18:35 208  ,cad_g34
09:18:35 209  ,cad_g35
09:18:35 210  ,cad_g36
09:18:35 211  ,cad_g37
09:18:35 212  ,cad_g38
09:18:35 213  ,cad_g39
09:18:35 214  ,cad_g40
09:18:35 215  ,cad_g41
09:18:35 216  ,chf_g00
09:18:35 217  ,chf_g01
09:18:35 218  ,chf_g02
09:18:35 219  ,chf_g03
09:18:35 220  ,chf_g04
09:18:35 221  ,chf_g05
09:18:35 222  ,chf_g06
09:18:35 223  ,chf_g07
09:18:35 224  ,chf_g08
09:18:35 225  ,chf_g09
09:18:35 226  ,chf_g10
09:18:35 227  ,chf_g11
09:18:35 228  ,chf_g12
09:18:35 229  ,chf_g13
09:18:35 230  ,chf_g14
09:18:35 231  ,chf_g15
09:18:35 232  ,chf_g16
09:18:35 233  ,chf_g17
09:18:35 234  ,chf_g18
09:18:35 235  ,chf_g19
09:18:35 236  ,chf_g20
09:18:35 237  ,chf_g21
09:18:35 238  ,chf_g22
09:18:35 239  ,chf_g23
09:18:35 240  ,chf_g24
09:18:35 241  ,chf_g25
09:18:35 242  ,chf_g26
09:18:35 243  ,chf_g27
09:18:35 244  ,chf_g28
09:18:35 245  ,chf_g29
09:18:35 246  ,chf_g30
09:18:35 247  ,chf_g31
09:18:35 248  ,chf_g32
09:18:35 249  ,chf_g33
09:18:35 250  ,chf_g34
09:18:35 251  ,chf_g35
09:18:35 252  ,chf_g36
09:18:35 253  ,chf_g37
09:18:35 254  ,chf_g38
09:18:35 255  ,chf_g39
09:18:35 256  ,chf_g40
09:18:35 257  ,chf_g41
09:18:35 258  FROM aud_ms6 m
09:18:35 259  WHERE gattn IN('nup','up')
09:18:35 260  AND 1+m.ydate < '&1'||' '||'&2'
09:18:35 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'09:00:00'

View created.

Elapsed: 00:00:00.12
09:18:35 SQL> 
09:18:35 SQL> -- rpt
09:18:35 SQL> 
09:18:35 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13115
up	     6423

Elapsed: 00:00:00.05
09:18:35 SQL> 
09:18:35 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 08:55:00

Elapsed: 00:00:00.03
09:18:35 SQL> 
09:18:35 SQL> -- Now build model from bme and score sme
09:18:35 SQL> @score1gattn.sql
09:18:35 SQL> -- score1gattn.sql
09:18:35 SQL> 
09:18:35 SQL> -- Does the 1st SVM score
09:18:35 SQL> 
09:18:35 SQL> -- Fill up svmc_apply_prep
09:18:35 SQL> @score_gattn.sql
09:18:35 SQL> --
09:18:35 SQL> -- score_gattn.sql
09:18:35 SQL> --
09:18:35 SQL> 
09:18:35 SQL> -- usage: score_gattn.sql
09:18:35 SQL> 
09:18:35 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
09:18:35 SQL> 
09:18:35 SQL> DEFINE target	= 'gattn'
09:18:35 SQL> DEFINE model_name = 'forex14'
09:18:35 SQL> DEFINE bldtable	= 'bme'
09:18:35 SQL> DEFINE scoretable = 'sme'
09:18:35 SQL> DEFINE case_id	= 'prdate'
09:18:35 SQL> 
09:18:35 SQL> -- Define a variable to help me exclude some columns from some data mining calls
09:18:35 SQL> DEFINE exclude1 = "'&target','&case_id'"
09:18:35 SQL> 
09:18:35 SQL> -- Builds an SVM model using pl/sql.
09:18:35 SQL> 
09:18:35 SQL> -----------------------------------------------------------------------
09:18:35 SQL> --			    BUILD THE MODEL
09:18:35 SQL> -----------------------------------------------------------------------
09:18:35 SQL> 
09:18:35 SQL> -- Cleanup old build data preparation objects for repeat runs
09:18:35 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
09:18:35 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
09:18:35 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
09:18:35 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
09:18:35 SQL> 
09:18:35 SQL> 
09:18:35 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
09:18:35 SQL> --
09:18:35 SQL> -- DROP	TABLE svmc_settings ;
09:18:35 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
09:18:35 SQL> -- DELETE svmc_settings;
09:18:35 SQL> 
09:18:35 SQL> -- The default classification algorithm is Naive Bayes. So override
09:18:35 SQL> -- this choice to SVM using a settings table.
09:18:35 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
09:18:35 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
09:18:35 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
09:18:35 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
09:18:35 SQL> -- models.
09:18:35 SQL> --
09:18:35 SQL> 
09:18:35 SQL> -- Do this once and then comment it out.
09:18:35 SQL> -- That makes script go faster.
09:18:35 SQL> -- BEGIN
09:18:35 SQL> -- -- Populate settings table
09:18:35 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:18:35 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
09:18:35 SQL> --
09:18:35 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:18:35 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
09:18:35 SQL> --
09:18:35 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:18:35 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
09:18:35 SQL> --   COMMIT;
09:18:35 SQL> -- END;
09:18:35 SQL> -- /
09:18:35 SQL> 
09:18:35 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
09:18:35 SQL> 
09:18:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
09:18:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:18:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:18:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
09:18:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:18:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
09:18:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
09:18:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:18:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:18:35 SQL> 
09:18:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
09:18:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:18:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
09:18:35 SQL> 
09:18:35 SQL> --------------------------------
09:18:35 SQL> -- PREPARE BUILD (TRAINING) DATA
09:18:35 SQL> --
09:18:35 SQL> 
09:18:35 SQL> -- 1. Missing Value treatment for all Predictors and
09:18:35 SQL> -- 2. Outlier Treatment and
09:18:35 SQL> -- 3. Normalization are performed below.
09:18:35 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
09:18:35 SQL> --    normalized here.
09:18:35 SQL> 
09:18:35 SQL> BEGIN
09:18:35   2  	-- Perform missing value treatment for all predictors
09:18:35   3  	-- create miss tables
09:18:35   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
09:18:35   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
09:18:35   6  
09:18:35   7  	-- populate miss tables
09:18:35   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
09:18:35   9  	  miss_table_name => 'svmc_miss_num',
09:18:35  10  	  data_table_name => '&bldtable',
09:18:35  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:18:35  12  
09:18:35  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
09:18:35  14  	  miss_table_name => 'svmc_miss_cat',
09:18:35  15  	  data_table_name => '&bldtable',
09:18:35  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:18:35  17  
09:18:35  18  	-- xform input data to replace missing values
09:18:35  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
09:18:35  20  	  miss_table_name => 'svmc_miss_num',
09:18:35  21  	  data_table_name => '&bldtable',
09:18:35  22  	  xform_view_name => 'xformed_build_miss_num');
09:18:35  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
09:18:35  24  	  miss_table_name => 'svmc_miss_cat',
09:18:35  25  	  data_table_name => '&bldtable',
09:18:35  26  	  xform_view_name => 'xformed_build_miss_cat');
09:18:35  27  
09:18:35  28  	-- Perform outlier treatment.
09:18:35  29  	-- create clip table
09:18:35  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
09:18:35  31  
09:18:35  32  	-- populate clip table
09:18:35  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
09:18:35  34  	  clip_table_name => 'svmc_clip',
09:18:35  35  	  data_table_name => '&bldtable',
09:18:35  36  	  tail_frac	  => 0.025,
09:18:35  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:18:35  38  
09:18:35  39  	-- xform input data to winsorized data
09:18:35  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
09:18:35  41  	  clip_table_name => 'svmc_clip',
09:18:35  42  	  data_table_name => '&bldtable',
09:18:35  43  	  xform_view_name => 'svmc_winsor');
09:18:35  44  
09:18:35  45  	-- create normalization table
09:18:35  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
09:18:35  47  
09:18:35  48  	-- populate normalization table based on winsorized data
09:18:35  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
09:18:35  50  	  norm_table_name => 'svmc_norm',
09:18:35  51  	  data_table_name => 'svmc_winsor',
09:18:35  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:18:35  53  
09:18:35  54  	-- normalize the original data
09:18:35  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
09:18:35  56  	  norm_table_name => 'svmc_norm',
09:18:35  57  	  data_table_name => '&bldtable',
09:18:35  58  	  xform_view_name => 'svmc_build_prep');
09:18:35  59  END;
09:18:35  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.31
09:18:53 SQL> 
09:18:53 SQL> ---------------------
09:18:53 SQL> -- CREATE A NEW MODEL
09:18:53 SQL> --
09:18:53 SQL> -- Cleanup old model with the same name for repeat runs
09:18:53 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
09:18:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:18:53   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.08
09:18:54 SQL> 
09:18:54 SQL> -- Build a new SVM Model
09:18:54 SQL> BEGIN
09:18:54   2  	DBMS_DATA_MINING.CREATE_MODEL(
09:18:54   3  	  model_name	      => '&model_name',
09:18:54   4  	  mining_function     => dbms_data_mining.classification,
09:18:54   5  	  data_table_name     => 'svmc_build_prep',
09:18:54   6  	  case_id_column_name => '&case_id',
09:18:54   7  	  target_column_name  => '&target',
09:18:54   8  	  settings_table_name => 'svmc_settings');
09:18:54   9  END;
09:18:54  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.80
09:19:21 SQL> 
09:19:21 SQL> -----------------------------------------------------------------------
09:19:21 SQL> --			       APPLY/score THE MODEL
09:19:21 SQL> -----------------------------------------------------------------------
09:19:21 SQL> 
09:19:21 SQL> -- Cleanup old scoring data preparation objects for repeat runs
09:19:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
09:19:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:19:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
09:19:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
09:19:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:19:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:19:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
09:19:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:19:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
09:19:21 SQL> -----------------------
09:19:21 SQL> -- PREPARE SCORING DATA
09:19:21 SQL> --
09:19:21 SQL> -- If the data for model creation has been prepared, then the data
09:19:21 SQL> -- to be scored using the model must be prepared in the same manner
09:19:21 SQL> -- in order to obtain meaningful results.
09:19:21 SQL> --
09:19:21 SQL> -- 1. Missing Value treatment for all Predictors and
09:19:21 SQL> -- 2. Normalization
09:19:21 SQL> -- No outlier treatment will be performed during test and apply. The
09:19:21 SQL> -- normalization step is sufficient, since the normalization parameters
09:19:21 SQL> -- already capture the effects of outlier treatment done with build data.
09:19:21 SQL> --
09:19:21 SQL> BEGIN
09:19:21   2  	-- Xform Test data to replace missing values
09:19:21   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
09:19:21   4  	  miss_table_name => 'svmc_miss_num',
09:19:21   5  	  data_table_name => '&scoretable',
09:19:21   6  	  xform_view_name => 'xformed_apply_miss_num');
09:19:21   7  
09:19:21   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
09:19:21   9  	  miss_table_name => 'svmc_miss_cat',
09:19:21  10  	  data_table_name => '&scoretable',
09:19:21  11  	  xform_view_name => 'xformed_apply_miss_cat');
09:19:21  12  
09:19:21  13  	-- Normalize the data to be scored
09:19:21  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
09:19:21  15  	  norm_table_name => 'svmc_norm',
09:19:21  16  	  data_table_name => '&scoretable',
09:19:21  17  	  xform_view_name => 'svmc_apply_prep');
09:19:21  18  END;
09:19:21  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
09:19:23 SQL> 
09:19:23 SQL> -- Use same model_name used in score_gattn.sql
09:19:23 SQL> DEFINE model_name = 'forex14'
09:19:23 SQL> 
09:19:23 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
09:19:23 SQL> 
09:19:23 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
09:19:23   2  SELECT
09:19:23   3  prdate
09:19:23   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
09:19:23   5  ,sysdate
09:19:23   6  ,SUBSTR(prdate,1,3)pair
09:19:23   7  ,SUBSTR(prdate,4,19)ydate
09:19:23   8  FROM svmc_apply_prep
09:19:23   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
09:19:23 SQL> @aud_score1day_gattn.sql	2010-12-31 09:05:00
09:19:23 SQL> --
09:19:23 SQL> -- aud_score1day_gattn.sql
09:19:23 SQL> --
09:19:23 SQL> 
09:19:23 SQL> CREATE OR REPLACE VIEW sme AS
09:19:23   2  SELECT
09:19:23   3  'aud'||m.ydate prdate
09:19:23   4  ,NULL gattn
09:19:23   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
09:19:23   6  ,eur_g00
09:19:23   7  ,eur_g01
09:19:23   8  ,eur_g02
09:19:23   9  ,eur_g03
09:19:23  10  ,eur_g04
09:19:23  11  ,eur_g05
09:19:23  12  ,eur_g06
09:19:23  13  ,eur_g07
09:19:23  14  ,eur_g08
09:19:23  15  ,eur_g09
09:19:23  16  ,eur_g10
09:19:23  17  ,eur_g11
09:19:23  18  ,eur_g12
09:19:23  19  ,eur_g13
09:19:23  20  ,eur_g14
09:19:23  21  ,eur_g15
09:19:23  22  ,eur_g16
09:19:23  23  ,eur_g17
09:19:23  24  ,eur_g18
09:19:23  25  ,eur_g19
09:19:23  26  ,eur_g20
09:19:23  27  ,eur_g21
09:19:23  28  ,eur_g22
09:19:23  29  ,eur_g23
09:19:23  30  ,eur_g24
09:19:23  31  ,eur_g25
09:19:23  32  ,eur_g26
09:19:23  33  ,eur_g27
09:19:23  34  ,eur_g28
09:19:23  35  ,eur_g29
09:19:23  36  ,eur_g30
09:19:23  37  ,eur_g31
09:19:23  38  ,eur_g32
09:19:23  39  ,eur_g33
09:19:23  40  ,eur_g34
09:19:23  41  ,eur_g35
09:19:23  42  ,eur_g36
09:19:23  43  ,eur_g37
09:19:23  44  ,eur_g38
09:19:23  45  ,eur_g39
09:19:23  46  ,eur_g40
09:19:23  47  ,eur_g41
09:19:23  48  ,aud_g00
09:19:23  49  ,aud_g01
09:19:23  50  ,aud_g02
09:19:23  51  ,aud_g03
09:19:23  52  ,aud_g04
09:19:23  53  ,aud_g05
09:19:23  54  ,aud_g06
09:19:23  55  ,aud_g07
09:19:23  56  ,aud_g08
09:19:23  57  ,aud_g09
09:19:23  58  ,aud_g10
09:19:23  59  ,aud_g11
09:19:23  60  ,aud_g12
09:19:23  61  ,aud_g13
09:19:23  62  ,aud_g14
09:19:23  63  ,aud_g15
09:19:23  64  ,aud_g16
09:19:23  65  ,aud_g17
09:19:23  66  ,aud_g18
09:19:23  67  ,aud_g19
09:19:23  68  ,aud_g20
09:19:23  69  ,aud_g21
09:19:23  70  ,aud_g22
09:19:23  71  ,aud_g23
09:19:23  72  ,aud_g24
09:19:23  73  ,aud_g25
09:19:23  74  ,aud_g26
09:19:23  75  ,aud_g27
09:19:23  76  ,aud_g28
09:19:23  77  ,aud_g29
09:19:23  78  ,aud_g30
09:19:23  79  ,aud_g31
09:19:23  80  ,aud_g32
09:19:23  81  ,aud_g33
09:19:23  82  ,aud_g34
09:19:23  83  ,aud_g35
09:19:23  84  ,aud_g36
09:19:23  85  ,aud_g37
09:19:23  86  ,aud_g38
09:19:23  87  ,aud_g39
09:19:23  88  ,aud_g40
09:19:23  89  ,aud_g41
09:19:23  90  ,gbp_g00
09:19:23  91  ,gbp_g01
09:19:23  92  ,gbp_g02
09:19:23  93  ,gbp_g03
09:19:23  94  ,gbp_g04
09:19:23  95  ,gbp_g05
09:19:23  96  ,gbp_g06
09:19:23  97  ,gbp_g07
09:19:23  98  ,gbp_g08
09:19:23  99  ,gbp_g09
09:19:23 100  ,gbp_g10
09:19:23 101  ,gbp_g11
09:19:23 102  ,gbp_g12
09:19:23 103  ,gbp_g13
09:19:23 104  ,gbp_g14
09:19:23 105  ,gbp_g15
09:19:23 106  ,gbp_g16
09:19:23 107  ,gbp_g17
09:19:23 108  ,gbp_g18
09:19:23 109  ,gbp_g19
09:19:23 110  ,gbp_g20
09:19:23 111  ,gbp_g21
09:19:23 112  ,gbp_g22
09:19:23 113  ,gbp_g23
09:19:23 114  ,gbp_g24
09:19:23 115  ,gbp_g25
09:19:23 116  ,gbp_g26
09:19:23 117  ,gbp_g27
09:19:23 118  ,gbp_g28
09:19:23 119  ,gbp_g29
09:19:23 120  ,gbp_g30
09:19:23 121  ,gbp_g31
09:19:23 122  ,gbp_g32
09:19:23 123  ,gbp_g33
09:19:23 124  ,gbp_g34
09:19:23 125  ,gbp_g35
09:19:23 126  ,gbp_g36
09:19:23 127  ,gbp_g37
09:19:23 128  ,gbp_g38
09:19:23 129  ,gbp_g39
09:19:23 130  ,gbp_g40
09:19:23 131  ,gbp_g41
09:19:23 132  ,jpy_g00
09:19:23 133  ,jpy_g01
09:19:23 134  ,jpy_g02
09:19:23 135  ,jpy_g03
09:19:23 136  ,jpy_g04
09:19:23 137  ,jpy_g05
09:19:23 138  ,jpy_g06
09:19:23 139  ,jpy_g07
09:19:23 140  ,jpy_g08
09:19:23 141  ,jpy_g09
09:19:23 142  ,jpy_g10
09:19:23 143  ,jpy_g11
09:19:23 144  ,jpy_g12
09:19:23 145  ,jpy_g13
09:19:23 146  ,jpy_g14
09:19:23 147  ,jpy_g15
09:19:23 148  ,jpy_g16
09:19:23 149  ,jpy_g17
09:19:23 150  ,jpy_g18
09:19:23 151  ,jpy_g19
09:19:23 152  ,jpy_g20
09:19:23 153  ,jpy_g21
09:19:23 154  ,jpy_g22
09:19:23 155  ,jpy_g23
09:19:23 156  ,jpy_g24
09:19:23 157  ,jpy_g25
09:19:23 158  ,jpy_g26
09:19:23 159  ,jpy_g27
09:19:23 160  ,jpy_g28
09:19:23 161  ,jpy_g29
09:19:23 162  ,jpy_g30
09:19:23 163  ,jpy_g31
09:19:23 164  ,jpy_g32
09:19:23 165  ,jpy_g33
09:19:23 166  ,jpy_g34
09:19:23 167  ,jpy_g35
09:19:23 168  ,jpy_g36
09:19:23 169  ,jpy_g37
09:19:23 170  ,jpy_g38
09:19:23 171  ,jpy_g39
09:19:23 172  ,jpy_g40
09:19:23 173  ,jpy_g41
09:19:23 174  ,cad_g00
09:19:23 175  ,cad_g01
09:19:23 176  ,cad_g02
09:19:23 177  ,cad_g03
09:19:23 178  ,cad_g04
09:19:23 179  ,cad_g05
09:19:23 180  ,cad_g06
09:19:23 181  ,cad_g07
09:19:23 182  ,cad_g08
09:19:23 183  ,cad_g09
09:19:23 184  ,cad_g10
09:19:23 185  ,cad_g11
09:19:23 186  ,cad_g12
09:19:23 187  ,cad_g13
09:19:23 188  ,cad_g14
09:19:23 189  ,cad_g15
09:19:23 190  ,cad_g16
09:19:23 191  ,cad_g17
09:19:23 192  ,cad_g18
09:19:23 193  ,cad_g19
09:19:23 194  ,cad_g20
09:19:23 195  ,cad_g21
09:19:23 196  ,cad_g22
09:19:23 197  ,cad_g23
09:19:23 198  ,cad_g24
09:19:23 199  ,cad_g25
09:19:23 200  ,cad_g26
09:19:23 201  ,cad_g27
09:19:23 202  ,cad_g28
09:19:23 203  ,cad_g29
09:19:23 204  ,cad_g30
09:19:23 205  ,cad_g31
09:19:23 206  ,cad_g32
09:19:23 207  ,cad_g33
09:19:23 208  ,cad_g34
09:19:23 209  ,cad_g35
09:19:23 210  ,cad_g36
09:19:23 211  ,cad_g37
09:19:23 212  ,cad_g38
09:19:23 213  ,cad_g39
09:19:23 214  ,cad_g40
09:19:23 215  ,cad_g41
09:19:23 216  ,chf_g00
09:19:23 217  ,chf_g01
09:19:23 218  ,chf_g02
09:19:23 219  ,chf_g03
09:19:23 220  ,chf_g04
09:19:23 221  ,chf_g05
09:19:23 222  ,chf_g06
09:19:23 223  ,chf_g07
09:19:23 224  ,chf_g08
09:19:23 225  ,chf_g09
09:19:23 226  ,chf_g10
09:19:23 227  ,chf_g11
09:19:23 228  ,chf_g12
09:19:23 229  ,chf_g13
09:19:23 230  ,chf_g14
09:19:23 231  ,chf_g15
09:19:23 232  ,chf_g16
09:19:23 233  ,chf_g17
09:19:23 234  ,chf_g18
09:19:23 235  ,chf_g19
09:19:23 236  ,chf_g20
09:19:23 237  ,chf_g21
09:19:23 238  ,chf_g22
09:19:23 239  ,chf_g23
09:19:23 240  ,chf_g24
09:19:23 241  ,chf_g25
09:19:23 242  ,chf_g26
09:19:23 243  ,chf_g27
09:19:23 244  ,chf_g28
09:19:23 245  ,chf_g29
09:19:23 246  ,chf_g30
09:19:23 247  ,chf_g31
09:19:23 248  ,chf_g32
09:19:23 249  ,chf_g33
09:19:23 250  ,chf_g34
09:19:23 251  ,chf_g35
09:19:23 252  ,chf_g36
09:19:23 253  ,chf_g37
09:19:23 254  ,chf_g38
09:19:23 255  ,chf_g39
09:19:23 256  ,chf_g40
09:19:23 257  ,chf_g41
09:19:23 258  FROM aud_ms6 m
09:19:23 259  WHERE m.ydate = '&1'||' '||'&2'
09:19:23 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-31'||' '||'09:05:00'

View created.

Elapsed: 00:00:00.12
09:19:23 SQL> 
09:19:23 SQL> -- rpt
09:19:23 SQL> -- We should see just 1 row:
09:19:23 SQL> 
09:19:23 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
09:19:23 SQL> 
09:19:23 SQL> -- Build the model:
09:19:23 SQL> CREATE OR REPLACE VIEW bme AS
09:19:23   2  SELECT
09:19:23   3  'aud'||m.ydate prdate
09:19:23   4  ,gattn
09:19:23   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
09:19:23   6  ,eur_g00
09:19:23   7  ,eur_g01
09:19:23   8  ,eur_g02
09:19:23   9  ,eur_g03
09:19:23  10  ,eur_g04
09:19:23  11  ,eur_g05
09:19:23  12  ,eur_g06
09:19:23  13  ,eur_g07
09:19:23  14  ,eur_g08
09:19:23  15  ,eur_g09
09:19:23  16  ,eur_g10
09:19:23  17  ,eur_g11
09:19:23  18  ,eur_g12
09:19:23  19  ,eur_g13
09:19:23  20  ,eur_g14
09:19:23  21  ,eur_g15
09:19:23  22  ,eur_g16
09:19:23  23  ,eur_g17
09:19:23  24  ,eur_g18
09:19:23  25  ,eur_g19
09:19:23  26  ,eur_g20
09:19:23  27  ,eur_g21
09:19:23  28  ,eur_g22
09:19:23  29  ,eur_g23
09:19:23  30  ,eur_g24
09:19:23  31  ,eur_g25
09:19:23  32  ,eur_g26
09:19:23  33  ,eur_g27
09:19:23  34  ,eur_g28
09:19:23  35  ,eur_g29
09:19:23  36  ,eur_g30
09:19:23  37  ,eur_g31
09:19:23  38  ,eur_g32
09:19:23  39  ,eur_g33
09:19:23  40  ,eur_g34
09:19:23  41  ,eur_g35
09:19:23  42  ,eur_g36
09:19:23  43  ,eur_g37
09:19:23  44  ,eur_g38
09:19:23  45  ,eur_g39
09:19:23  46  ,eur_g40
09:19:23  47  ,eur_g41
09:19:23  48  ,aud_g00
09:19:23  49  ,aud_g01
09:19:23  50  ,aud_g02
09:19:23  51  ,aud_g03
09:19:23  52  ,aud_g04
09:19:23  53  ,aud_g05
09:19:23  54  ,aud_g06
09:19:23  55  ,aud_g07
09:19:23  56  ,aud_g08
09:19:23  57  ,aud_g09
09:19:23  58  ,aud_g10
09:19:23  59  ,aud_g11
09:19:23  60  ,aud_g12
09:19:23  61  ,aud_g13
09:19:23  62  ,aud_g14
09:19:23  63  ,aud_g15
09:19:23  64  ,aud_g16
09:19:23  65  ,aud_g17
09:19:23  66  ,aud_g18
09:19:23  67  ,aud_g19
09:19:23  68  ,aud_g20
09:19:23  69  ,aud_g21
09:19:23  70  ,aud_g22
09:19:23  71  ,aud_g23
09:19:23  72  ,aud_g24
09:19:23  73  ,aud_g25
09:19:23  74  ,aud_g26
09:19:23  75  ,aud_g27
09:19:23  76  ,aud_g28
09:19:23  77  ,aud_g29
09:19:23  78  ,aud_g30
09:19:23  79  ,aud_g31
09:19:23  80  ,aud_g32
09:19:23  81  ,aud_g33
09:19:23  82  ,aud_g34
09:19:23  83  ,aud_g35
09:19:23  84  ,aud_g36
09:19:23  85  ,aud_g37
09:19:23  86  ,aud_g38
09:19:23  87  ,aud_g39
09:19:23  88  ,aud_g40
09:19:23  89  ,aud_g41
09:19:23  90  ,gbp_g00
09:19:23  91  ,gbp_g01
09:19:23  92  ,gbp_g02
09:19:23  93  ,gbp_g03
09:19:23  94  ,gbp_g04
09:19:23  95  ,gbp_g05
09:19:23  96  ,gbp_g06
09:19:23  97  ,gbp_g07
09:19:23  98  ,gbp_g08
09:19:23  99  ,gbp_g09
09:19:23 100  ,gbp_g10
09:19:23 101  ,gbp_g11
09:19:23 102  ,gbp_g12
09:19:23 103  ,gbp_g13
09:19:23 104  ,gbp_g14
09:19:23 105  ,gbp_g15
09:19:23 106  ,gbp_g16
09:19:23 107  ,gbp_g17
09:19:23 108  ,gbp_g18
09:19:23 109  ,gbp_g19
09:19:23 110  ,gbp_g20
09:19:23 111  ,gbp_g21
09:19:23 112  ,gbp_g22
09:19:23 113  ,gbp_g23
09:19:23 114  ,gbp_g24
09:19:23 115  ,gbp_g25
09:19:23 116  ,gbp_g26
09:19:23 117  ,gbp_g27
09:19:23 118  ,gbp_g28
09:19:23 119  ,gbp_g29
09:19:23 120  ,gbp_g30
09:19:23 121  ,gbp_g31
09:19:23 122  ,gbp_g32
09:19:23 123  ,gbp_g33
09:19:23 124  ,gbp_g34
09:19:23 125  ,gbp_g35
09:19:23 126  ,gbp_g36
09:19:23 127  ,gbp_g37
09:19:23 128  ,gbp_g38
09:19:23 129  ,gbp_g39
09:19:23 130  ,gbp_g40
09:19:23 131  ,gbp_g41
09:19:23 132  ,jpy_g00
09:19:23 133  ,jpy_g01
09:19:23 134  ,jpy_g02
09:19:23 135  ,jpy_g03
09:19:23 136  ,jpy_g04
09:19:23 137  ,jpy_g05
09:19:23 138  ,jpy_g06
09:19:23 139  ,jpy_g07
09:19:23 140  ,jpy_g08
09:19:23 141  ,jpy_g09
09:19:23 142  ,jpy_g10
09:19:23 143  ,jpy_g11
09:19:23 144  ,jpy_g12
09:19:23 145  ,jpy_g13
09:19:23 146  ,jpy_g14
09:19:23 147  ,jpy_g15
09:19:23 148  ,jpy_g16
09:19:23 149  ,jpy_g17
09:19:23 150  ,jpy_g18
09:19:23 151  ,jpy_g19
09:19:23 152  ,jpy_g20
09:19:23 153  ,jpy_g21
09:19:23 154  ,jpy_g22
09:19:23 155  ,jpy_g23
09:19:23 156  ,jpy_g24
09:19:23 157  ,jpy_g25
09:19:23 158  ,jpy_g26
09:19:23 159  ,jpy_g27
09:19:23 160  ,jpy_g28
09:19:23 161  ,jpy_g29
09:19:23 162  ,jpy_g30
09:19:23 163  ,jpy_g31
09:19:23 164  ,jpy_g32
09:19:23 165  ,jpy_g33
09:19:23 166  ,jpy_g34
09:19:23 167  ,jpy_g35
09:19:23 168  ,jpy_g36
09:19:23 169  ,jpy_g37
09:19:23 170  ,jpy_g38
09:19:23 171  ,jpy_g39
09:19:23 172  ,jpy_g40
09:19:23 173  ,jpy_g41
09:19:23 174  ,cad_g00
09:19:23 175  ,cad_g01
09:19:23 176  ,cad_g02
09:19:23 177  ,cad_g03
09:19:23 178  ,cad_g04
09:19:23 179  ,cad_g05
09:19:23 180  ,cad_g06
09:19:23 181  ,cad_g07
09:19:23 182  ,cad_g08
09:19:23 183  ,cad_g09
09:19:23 184  ,cad_g10
09:19:23 185  ,cad_g11
09:19:23 186  ,cad_g12
09:19:23 187  ,cad_g13
09:19:23 188  ,cad_g14
09:19:23 189  ,cad_g15
09:19:23 190  ,cad_g16
09:19:23 191  ,cad_g17
09:19:23 192  ,cad_g18
09:19:23 193  ,cad_g19
09:19:23 194  ,cad_g20
09:19:23 195  ,cad_g21
09:19:23 196  ,cad_g22
09:19:23 197  ,cad_g23
09:19:23 198  ,cad_g24
09:19:23 199  ,cad_g25
09:19:23 200  ,cad_g26
09:19:23 201  ,cad_g27
09:19:23 202  ,cad_g28
09:19:23 203  ,cad_g29
09:19:23 204  ,cad_g30
09:19:23 205  ,cad_g31
09:19:23 206  ,cad_g32
09:19:23 207  ,cad_g33
09:19:23 208  ,cad_g34
09:19:23 209  ,cad_g35
09:19:23 210  ,cad_g36
09:19:23 211  ,cad_g37
09:19:23 212  ,cad_g38
09:19:23 213  ,cad_g39
09:19:23 214  ,cad_g40
09:19:23 215  ,cad_g41
09:19:23 216  ,chf_g00
09:19:23 217  ,chf_g01
09:19:23 218  ,chf_g02
09:19:23 219  ,chf_g03
09:19:23 220  ,chf_g04
09:19:23 221  ,chf_g05
09:19:23 222  ,chf_g06
09:19:23 223  ,chf_g07
09:19:23 224  ,chf_g08
09:19:23 225  ,chf_g09
09:19:23 226  ,chf_g10
09:19:23 227  ,chf_g11
09:19:23 228  ,chf_g12
09:19:23 229  ,chf_g13
09:19:23 230  ,chf_g14
09:19:23 231  ,chf_g15
09:19:23 232  ,chf_g16
09:19:23 233  ,chf_g17
09:19:23 234  ,chf_g18
09:19:23 235  ,chf_g19
09:19:23 236  ,chf_g20
09:19:23 237  ,chf_g21
09:19:23 238  ,chf_g22
09:19:23 239  ,chf_g23
09:19:23 240  ,chf_g24
09:19:23 241  ,chf_g25
09:19:23 242  ,chf_g26
09:19:23 243  ,chf_g27
09:19:23 244  ,chf_g28
09:19:23 245  ,chf_g29
09:19:23 246  ,chf_g30
09:19:23 247  ,chf_g31
09:19:23 248  ,chf_g32
09:19:23 249  ,chf_g33
09:19:23 250  ,chf_g34
09:19:23 251  ,chf_g35
09:19:23 252  ,chf_g36
09:19:23 253  ,chf_g37
09:19:23 254  ,chf_g38
09:19:23 255  ,chf_g39
09:19:23 256  ,chf_g40
09:19:23 257  ,chf_g41
09:19:23 258  FROM aud_ms6 m
09:19:23 259  WHERE gattn IN('nup','up')
09:19:23 260  AND 1+m.ydate < '&1'||' '||'&2'
09:19:23 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-31'||' '||'09:05:00'

View created.

Elapsed: 00:00:00.12
09:19:23 SQL> 
09:19:23 SQL> -- rpt
09:19:23 SQL> 
09:19:23 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13115
up	     6424

Elapsed: 00:00:00.04
09:19:23 SQL> 
09:19:23 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-30 09:00:00

Elapsed: 00:00:00.03
09:19:23 SQL> 
09:19:23 SQL> -- Now build model from bme and score sme
09:19:23 SQL> @score1gattn.sql
09:19:23 SQL> -- score1gattn.sql
09:19:23 SQL> 
09:19:23 SQL> -- Does the 1st SVM score
09:19:23 SQL> 
09:19:23 SQL> -- Fill up svmc_apply_prep
09:19:23 SQL> @score_gattn.sql
09:19:23 SQL> --
09:19:23 SQL> -- score_gattn.sql
09:19:23 SQL> --
09:19:23 SQL> 
09:19:23 SQL> -- usage: score_gattn.sql
09:19:23 SQL> 
09:19:23 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
09:19:23 SQL> 
09:19:23 SQL> DEFINE target	= 'gattn'
09:19:23 SQL> DEFINE model_name = 'forex14'
09:19:23 SQL> DEFINE bldtable	= 'bme'
09:19:23 SQL> DEFINE scoretable = 'sme'
09:19:23 SQL> DEFINE case_id	= 'prdate'
09:19:23 SQL> 
09:19:23 SQL> -- Define a variable to help me exclude some columns from some data mining calls
09:19:23 SQL> DEFINE exclude1 = "'&target','&case_id'"
09:19:23 SQL> 
09:19:23 SQL> -- Builds an SVM model using pl/sql.
09:19:23 SQL> 
09:19:23 SQL> -----------------------------------------------------------------------
09:19:23 SQL> --			    BUILD THE MODEL
09:19:23 SQL> -----------------------------------------------------------------------
09:19:23 SQL> 
09:19:23 SQL> -- Cleanup old build data preparation objects for repeat runs
09:19:23 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
09:19:23 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
09:19:23 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
09:19:23 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
09:19:23 SQL> 
09:19:23 SQL> 
09:19:23 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
09:19:23 SQL> --
09:19:23 SQL> -- DROP	TABLE svmc_settings ;
09:19:23 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
09:19:23 SQL> -- DELETE svmc_settings;
09:19:23 SQL> 
09:19:23 SQL> -- The default classification algorithm is Naive Bayes. So override
09:19:23 SQL> -- this choice to SVM using a settings table.
09:19:23 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
09:19:23 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
09:19:23 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
09:19:23 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
09:19:23 SQL> -- models.
09:19:23 SQL> --
09:19:23 SQL> 
09:19:23 SQL> -- Do this once and then comment it out.
09:19:23 SQL> -- That makes script go faster.
09:19:23 SQL> -- BEGIN
09:19:23 SQL> -- -- Populate settings table
09:19:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:19:23 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
09:19:23 SQL> --
09:19:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:19:23 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
09:19:23 SQL> --
09:19:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
09:19:23 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
09:19:23 SQL> --   COMMIT;
09:19:23 SQL> -- END;
09:19:23 SQL> -- /
09:19:23 SQL> 
09:19:23 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
09:19:23 SQL> 
09:19:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
09:19:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:19:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
09:19:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
09:19:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:19:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.13
09:19:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
09:19:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:19:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
09:19:24 SQL> 
09:19:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
09:19:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:19:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
09:19:24 SQL> 
09:19:24 SQL> --------------------------------
09:19:24 SQL> -- PREPARE BUILD (TRAINING) DATA
09:19:24 SQL> --
09:19:24 SQL> 
09:19:24 SQL> -- 1. Missing Value treatment for all Predictors and
09:19:24 SQL> -- 2. Outlier Treatment and
09:19:24 SQL> -- 3. Normalization are performed below.
09:19:24 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
09:19:24 SQL> --    normalized here.
09:19:24 SQL> 
09:19:24 SQL> BEGIN
09:19:24   2  	-- Perform missing value treatment for all predictors
09:19:24   3  	-- create miss tables
09:19:24   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
09:19:24   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
09:19:24   6  
09:19:24   7  	-- populate miss tables
09:19:24   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
09:19:24   9  	  miss_table_name => 'svmc_miss_num',
09:19:24  10  	  data_table_name => '&bldtable',
09:19:24  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:19:24  12  
09:19:24  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
09:19:24  14  	  miss_table_name => 'svmc_miss_cat',
09:19:24  15  	  data_table_name => '&bldtable',
09:19:24  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:19:24  17  
09:19:24  18  	-- xform input data to replace missing values
09:19:24  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
09:19:24  20  	  miss_table_name => 'svmc_miss_num',
09:19:24  21  	  data_table_name => '&bldtable',
09:19:24  22  	  xform_view_name => 'xformed_build_miss_num');
09:19:24  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
09:19:24  24  	  miss_table_name => 'svmc_miss_cat',
09:19:24  25  	  data_table_name => '&bldtable',
09:19:24  26  	  xform_view_name => 'xformed_build_miss_cat');
09:19:24  27  
09:19:24  28  	-- Perform outlier treatment.
09:19:24  29  	-- create clip table
09:19:24  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
09:19:24  31  
09:19:24  32  	-- populate clip table
09:19:24  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
09:19:24  34  	  clip_table_name => 'svmc_clip',
09:19:24  35  	  data_table_name => '&bldtable',
09:19:24  36  	  tail_frac	  => 0.025,
09:19:24  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:19:24  38  
09:19:24  39  	-- xform input data to winsorized data
09:19:24  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
09:19:24  41  	  clip_table_name => 'svmc_clip',
09:19:24  42  	  data_table_name => '&bldtable',
09:19:24  43  	  xform_view_name => 'svmc_winsor');
09:19:24  44  
09:19:24  45  	-- create normalization table
09:19:24  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
09:19:24  47  
09:19:24  48  	-- populate normalization table based on winsorized data
09:19:24  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
09:19:24  50  	  norm_table_name => 'svmc_norm',
09:19:24  51  	  data_table_name => 'svmc_winsor',
09:19:24  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
09:19:24  53  
09:19:24  54  	-- normalize the original data
09:19:24  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
09:19:24  56  	  norm_table_name => 'svmc_norm',
09:19:24  57  	  data_table_name => '&bldtable',
09:19:24  58  	  xform_view_name => 'svmc_build_prep');
09:19:24  59  END;
09:19:24  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.38
09:19:42 SQL> 
09:19:42 SQL> ---------------------
09:19:42 SQL> -- CREATE A NEW MODEL
09:19:42 SQL> --
09:19:42 SQL> -- Cleanup old model with the same name for repeat runs
09:19:42 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
09:19:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:19:42   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.09
09:19:43 SQL> 
09:19:43 SQL> -- Build a new SVM Model
09:19:43 SQL> BEGIN
09:19:43   2  	DBMS_DATA_MINING.CREATE_MODEL(
09:19:43   3  	  model_name	      => '&model_name',
09:19:43   4  	  mining_function     => dbms_data_mining.classification,
09:19:43   5  	  data_table_name     => 'svmc_build_prep',
09:19:43   6  	  case_id_column_name => '&case_id',
09:19:43   7  	  target_column_name  => '&target',
09:19:43   8  	  settings_table_name => 'svmc_settings');
09:19:43   9  END;
09:19:43  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.45
09:20:10 SQL> 
09:20:10 SQL> -----------------------------------------------------------------------
09:20:10 SQL> --			       APPLY/score THE MODEL
09:20:10 SQL> -----------------------------------------------------------------------
09:20:10 SQL> 
09:20:10 SQL> -- Cleanup old scoring data preparation objects for repeat runs
09:20:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
09:20:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:20:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
09:20:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
09:20:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:20:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
09:20:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
09:20:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
09:20:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
09:20:10 SQL> -----------------------
09:20:10 SQL> -- PREPARE SCORING DATA
09:20:10 SQL> --
09:20:10 SQL> -- If the data for model creation has been prepared, then the data
09:20:10 SQL> -- to be scored using the model must be prepared in the same manner
09:20:10 SQL> -- in order to obtain meaningful results.
09:20:10 SQL> --
09:20:10 SQL> -- 1. Missing Value treatment for all Predictors and
09:20:10 SQL> -- 2. Normalization
09:20:10 SQL> -- No outlier treatment will be performed during test and apply. The
09:20:10 SQL> -- normalization step is sufficient, since the normalization parameters
09:20:10 SQL> -- already capture the effects of outlier treatment done with build data.
09:20:10 SQL> --
09:20:10 SQL> BEGIN
09:20:10   2  	-- Xform Test data to replace missing values
09:20:10   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
09:20:10   4  	  miss_table_name => 'svmc_miss_num',
09:20:10   5  	  data_table_name => '&scoretable',
09:20:10   6  	  xform_view_name => 'xformed_apply_miss_num');
09:20:10   7  
09:20:10   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
09:20:10   9  	  miss_table_name => 'svmc_miss_cat',
09:20:10  10  	  data_table_name => '&scoretable',
09:20:10  11  	  xform_view_name => 'xformed_apply_miss_cat');
09:20:10  12  
09:20:10  13  	-- Normalize the data to be scored
09:20:10  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
09:20:10  15  	  norm_table_name => 'svmc_norm',
09:20:10  16  	  data_table_name => '&scoretable',
09:20:10  17  	  xform_view_name => 'svmc_apply_prep');
09:20:10  18  END;
09:20:10  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
09:20:11 SQL> 
09:20:11 SQL> -- Use same model_name used in score_gattn.sql
09:20:11 SQL> DEFINE model_name = 'forex14'
09:20:11 SQL> 
09:20:11 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
09:20:11 SQL> 
09:20:11 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
09:20:11   2  SELECT
09:20:11   3  prdate
09:20:11   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
09:20:11   5  ,sysdate
09:20:11   6  ,SUBSTR(prdate,1,3)pair
09:20:11   7  ,SUBSTR(prdate,4,19)ydate
09:20:11   8  FROM svmc_apply_prep
09:20:11   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
09:20:11 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
