
SQL*Plus: Release 11.2.0.1.0 Production on Thu Jan 6 23:20:30 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

23:20:30 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
23:20:30 SQL> 23:20:30 SQL> @aud_score1day.sql  2011-01-06 23:00:00
23:20:30 SQL> --
23:20:30 SQL> -- aud_score1day.sql
23:20:30 SQL> --
23:20:30 SQL> 
23:20:30 SQL> CREATE OR REPLACE VIEW sme AS
23:20:30   2  SELECT
23:20:30   3  'aud'||m.ydate prdate
23:20:30   4  ,NULL gatt
23:20:30   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:20:30   6  ,eur_g00
23:20:30   7  ,eur_g01
23:20:30   8  ,eur_g02
23:20:30   9  ,eur_g03
23:20:30  10  ,eur_g04
23:20:30  11  ,eur_g05
23:20:30  12  ,eur_g06
23:20:30  13  ,eur_g07
23:20:30  14  ,eur_g08
23:20:30  15  ,eur_g09
23:20:30  16  ,eur_g10
23:20:30  17  ,eur_g11
23:20:30  18  ,eur_g12
23:20:30  19  ,eur_g13
23:20:30  20  ,eur_g14
23:20:30  21  ,eur_g15
23:20:30  22  ,eur_g16
23:20:30  23  ,eur_g17
23:20:30  24  ,eur_g18
23:20:30  25  ,eur_g19
23:20:30  26  ,eur_g20
23:20:30  27  ,eur_g21
23:20:30  28  ,eur_g22
23:20:30  29  ,eur_g23
23:20:30  30  ,eur_g24
23:20:30  31  ,eur_g25
23:20:30  32  ,eur_g26
23:20:30  33  ,eur_g27
23:20:30  34  ,eur_g28
23:20:30  35  ,eur_g29
23:20:30  36  ,eur_g30
23:20:30  37  ,eur_g31
23:20:30  38  ,eur_g32
23:20:30  39  ,eur_g33
23:20:30  40  ,eur_g34
23:20:30  41  ,eur_g35
23:20:30  42  ,eur_g36
23:20:30  43  ,eur_g37
23:20:30  44  ,eur_g38
23:20:30  45  ,eur_g39
23:20:30  46  ,eur_g40
23:20:30  47  ,eur_g41
23:20:30  48  ,aud_g00
23:20:30  49  ,aud_g01
23:20:30  50  ,aud_g02
23:20:30  51  ,aud_g03
23:20:30  52  ,aud_g04
23:20:30  53  ,aud_g05
23:20:30  54  ,aud_g06
23:20:30  55  ,aud_g07
23:20:30  56  ,aud_g08
23:20:30  57  ,aud_g09
23:20:30  58  ,aud_g10
23:20:30  59  ,aud_g11
23:20:30  60  ,aud_g12
23:20:30  61  ,aud_g13
23:20:30  62  ,aud_g14
23:20:30  63  ,aud_g15
23:20:30  64  ,aud_g16
23:20:30  65  ,aud_g17
23:20:30  66  ,aud_g18
23:20:30  67  ,aud_g19
23:20:30  68  ,aud_g20
23:20:30  69  ,aud_g21
23:20:30  70  ,aud_g22
23:20:30  71  ,aud_g23
23:20:30  72  ,aud_g24
23:20:30  73  ,aud_g25
23:20:30  74  ,aud_g26
23:20:30  75  ,aud_g27
23:20:30  76  ,aud_g28
23:20:30  77  ,aud_g29
23:20:30  78  ,aud_g30
23:20:30  79  ,aud_g31
23:20:30  80  ,aud_g32
23:20:30  81  ,aud_g33
23:20:30  82  ,aud_g34
23:20:30  83  ,aud_g35
23:20:30  84  ,aud_g36
23:20:30  85  ,aud_g37
23:20:30  86  ,aud_g38
23:20:30  87  ,aud_g39
23:20:30  88  ,aud_g40
23:20:30  89  ,aud_g41
23:20:30  90  ,gbp_g00
23:20:30  91  ,gbp_g01
23:20:30  92  ,gbp_g02
23:20:30  93  ,gbp_g03
23:20:30  94  ,gbp_g04
23:20:30  95  ,gbp_g05
23:20:30  96  ,gbp_g06
23:20:30  97  ,gbp_g07
23:20:30  98  ,gbp_g08
23:20:30  99  ,gbp_g09
23:20:30 100  ,gbp_g10
23:20:30 101  ,gbp_g11
23:20:30 102  ,gbp_g12
23:20:30 103  ,gbp_g13
23:20:30 104  ,gbp_g14
23:20:30 105  ,gbp_g15
23:20:30 106  ,gbp_g16
23:20:30 107  ,gbp_g17
23:20:30 108  ,gbp_g18
23:20:30 109  ,gbp_g19
23:20:30 110  ,gbp_g20
23:20:30 111  ,gbp_g21
23:20:30 112  ,gbp_g22
23:20:30 113  ,gbp_g23
23:20:30 114  ,gbp_g24
23:20:30 115  ,gbp_g25
23:20:30 116  ,gbp_g26
23:20:30 117  ,gbp_g27
23:20:30 118  ,gbp_g28
23:20:30 119  ,gbp_g29
23:20:30 120  ,gbp_g30
23:20:30 121  ,gbp_g31
23:20:30 122  ,gbp_g32
23:20:30 123  ,gbp_g33
23:20:30 124  ,gbp_g34
23:20:30 125  ,gbp_g35
23:20:30 126  ,gbp_g36
23:20:30 127  ,gbp_g37
23:20:30 128  ,gbp_g38
23:20:30 129  ,gbp_g39
23:20:30 130  ,gbp_g40
23:20:30 131  ,gbp_g41
23:20:30 132  ,jpy_g00
23:20:30 133  ,jpy_g01
23:20:30 134  ,jpy_g02
23:20:30 135  ,jpy_g03
23:20:30 136  ,jpy_g04
23:20:30 137  ,jpy_g05
23:20:30 138  ,jpy_g06
23:20:30 139  ,jpy_g07
23:20:30 140  ,jpy_g08
23:20:30 141  ,jpy_g09
23:20:30 142  ,jpy_g10
23:20:30 143  ,jpy_g11
23:20:30 144  ,jpy_g12
23:20:30 145  ,jpy_g13
23:20:30 146  ,jpy_g14
23:20:30 147  ,jpy_g15
23:20:30 148  ,jpy_g16
23:20:30 149  ,jpy_g17
23:20:30 150  ,jpy_g18
23:20:30 151  ,jpy_g19
23:20:30 152  ,jpy_g20
23:20:30 153  ,jpy_g21
23:20:30 154  ,jpy_g22
23:20:30 155  ,jpy_g23
23:20:30 156  ,jpy_g24
23:20:30 157  ,jpy_g25
23:20:30 158  ,jpy_g26
23:20:30 159  ,jpy_g27
23:20:30 160  ,jpy_g28
23:20:30 161  ,jpy_g29
23:20:30 162  ,jpy_g30
23:20:30 163  ,jpy_g31
23:20:30 164  ,jpy_g32
23:20:30 165  ,jpy_g33
23:20:30 166  ,jpy_g34
23:20:30 167  ,jpy_g35
23:20:30 168  ,jpy_g36
23:20:30 169  ,jpy_g37
23:20:30 170  ,jpy_g38
23:20:30 171  ,jpy_g39
23:20:30 172  ,jpy_g40
23:20:30 173  ,jpy_g41
23:20:30 174  ,cad_g00
23:20:30 175  ,cad_g01
23:20:30 176  ,cad_g02
23:20:30 177  ,cad_g03
23:20:30 178  ,cad_g04
23:20:30 179  ,cad_g05
23:20:30 180  ,cad_g06
23:20:30 181  ,cad_g07
23:20:30 182  ,cad_g08
23:20:30 183  ,cad_g09
23:20:30 184  ,cad_g10
23:20:30 185  ,cad_g11
23:20:30 186  ,cad_g12
23:20:30 187  ,cad_g13
23:20:30 188  ,cad_g14
23:20:30 189  ,cad_g15
23:20:30 190  ,cad_g16
23:20:30 191  ,cad_g17
23:20:30 192  ,cad_g18
23:20:30 193  ,cad_g19
23:20:30 194  ,cad_g20
23:20:30 195  ,cad_g21
23:20:30 196  ,cad_g22
23:20:30 197  ,cad_g23
23:20:30 198  ,cad_g24
23:20:30 199  ,cad_g25
23:20:30 200  ,cad_g26
23:20:30 201  ,cad_g27
23:20:30 202  ,cad_g28
23:20:30 203  ,cad_g29
23:20:30 204  ,cad_g30
23:20:30 205  ,cad_g31
23:20:30 206  ,cad_g32
23:20:30 207  ,cad_g33
23:20:30 208  ,cad_g34
23:20:30 209  ,cad_g35
23:20:30 210  ,cad_g36
23:20:30 211  ,cad_g37
23:20:30 212  ,cad_g38
23:20:30 213  ,cad_g39
23:20:30 214  ,cad_g40
23:20:30 215  ,cad_g41
23:20:30 216  ,chf_g00
23:20:30 217  ,chf_g01
23:20:30 218  ,chf_g02
23:20:30 219  ,chf_g03
23:20:30 220  ,chf_g04
23:20:30 221  ,chf_g05
23:20:30 222  ,chf_g06
23:20:30 223  ,chf_g07
23:20:30 224  ,chf_g08
23:20:30 225  ,chf_g09
23:20:30 226  ,chf_g10
23:20:30 227  ,chf_g11
23:20:30 228  ,chf_g12
23:20:30 229  ,chf_g13
23:20:30 230  ,chf_g14
23:20:30 231  ,chf_g15
23:20:30 232  ,chf_g16
23:20:30 233  ,chf_g17
23:20:30 234  ,chf_g18
23:20:30 235  ,chf_g19
23:20:30 236  ,chf_g20
23:20:30 237  ,chf_g21
23:20:30 238  ,chf_g22
23:20:30 239  ,chf_g23
23:20:30 240  ,chf_g24
23:20:30 241  ,chf_g25
23:20:30 242  ,chf_g26
23:20:30 243  ,chf_g27
23:20:30 244  ,chf_g28
23:20:30 245  ,chf_g29
23:20:30 246  ,chf_g30
23:20:30 247  ,chf_g31
23:20:30 248  ,chf_g32
23:20:30 249  ,chf_g33
23:20:30 250  ,chf_g34
23:20:30 251  ,chf_g35
23:20:30 252  ,chf_g36
23:20:30 253  ,chf_g37
23:20:30 254  ,chf_g38
23:20:30 255  ,chf_g39
23:20:30 256  ,chf_g40
23:20:30 257  ,chf_g41
23:20:30 258  FROM aud_ms6 m
23:20:30 259  WHERE m.ydate = '&1'||' '||'&2'
23:20:30 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'23:00:00'

View created.

Elapsed: 00:00:00.15
23:20:30 SQL> 
23:20:30 SQL> -- rpt
23:20:30 SQL> -- We should see just 1 row:
23:20:30 SQL> 
23:20:30 SQL> SELECT COUNT(prdate) FROM sme
23:20:30   2  
23:20:30 SQL> -- Build the model:
23:20:30 SQL> CREATE OR REPLACE VIEW bme AS
23:20:30   2  SELECT
23:20:30   3  'aud'||m.ydate prdate
23:20:30   4  ,gatt
23:20:30   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:20:30   6  ,eur_g00
23:20:30   7  ,eur_g01
23:20:30   8  ,eur_g02
23:20:30   9  ,eur_g03
23:20:30  10  ,eur_g04
23:20:30  11  ,eur_g05
23:20:30  12  ,eur_g06
23:20:30  13  ,eur_g07
23:20:30  14  ,eur_g08
23:20:30  15  ,eur_g09
23:20:30  16  ,eur_g10
23:20:30  17  ,eur_g11
23:20:30  18  ,eur_g12
23:20:30  19  ,eur_g13
23:20:30  20  ,eur_g14
23:20:30  21  ,eur_g15
23:20:30  22  ,eur_g16
23:20:30  23  ,eur_g17
23:20:30  24  ,eur_g18
23:20:30  25  ,eur_g19
23:20:30  26  ,eur_g20
23:20:30  27  ,eur_g21
23:20:30  28  ,eur_g22
23:20:30  29  ,eur_g23
23:20:30  30  ,eur_g24
23:20:30  31  ,eur_g25
23:20:30  32  ,eur_g26
23:20:30  33  ,eur_g27
23:20:30  34  ,eur_g28
23:20:30  35  ,eur_g29
23:20:30  36  ,eur_g30
23:20:30  37  ,eur_g31
23:20:30  38  ,eur_g32
23:20:30  39  ,eur_g33
23:20:30  40  ,eur_g34
23:20:30  41  ,eur_g35
23:20:30  42  ,eur_g36
23:20:30  43  ,eur_g37
23:20:30  44  ,eur_g38
23:20:30  45  ,eur_g39
23:20:30  46  ,eur_g40
23:20:30  47  ,eur_g41
23:20:30  48  ,aud_g00
23:20:30  49  ,aud_g01
23:20:30  50  ,aud_g02
23:20:30  51  ,aud_g03
23:20:30  52  ,aud_g04
23:20:30  53  ,aud_g05
23:20:30  54  ,aud_g06
23:20:30  55  ,aud_g07
23:20:30  56  ,aud_g08
23:20:30  57  ,aud_g09
23:20:30  58  ,aud_g10
23:20:30  59  ,aud_g11
23:20:30  60  ,aud_g12
23:20:30  61  ,aud_g13
23:20:30  62  ,aud_g14
23:20:30  63  ,aud_g15
23:20:30  64  ,aud_g16
23:20:30  65  ,aud_g17
23:20:30  66  ,aud_g18
23:20:30  67  ,aud_g19
23:20:30  68  ,aud_g20
23:20:30  69  ,aud_g21
23:20:30  70  ,aud_g22
23:20:30  71  ,aud_g23
23:20:30  72  ,aud_g24
23:20:30  73  ,aud_g25
23:20:30  74  ,aud_g26
23:20:30  75  ,aud_g27
23:20:30  76  ,aud_g28
23:20:30  77  ,aud_g29
23:20:30  78  ,aud_g30
23:20:30  79  ,aud_g31
23:20:30  80  ,aud_g32
23:20:30  81  ,aud_g33
23:20:30  82  ,aud_g34
23:20:30  83  ,aud_g35
23:20:30  84  ,aud_g36
23:20:30  85  ,aud_g37
23:20:30  86  ,aud_g38
23:20:30  87  ,aud_g39
23:20:30  88  ,aud_g40
23:20:30  89  ,aud_g41
23:20:30  90  ,gbp_g00
23:20:30  91  ,gbp_g01
23:20:30  92  ,gbp_g02
23:20:30  93  ,gbp_g03
23:20:30  94  ,gbp_g04
23:20:30  95  ,gbp_g05
23:20:30  96  ,gbp_g06
23:20:30  97  ,gbp_g07
23:20:30  98  ,gbp_g08
23:20:30  99  ,gbp_g09
23:20:30 100  ,gbp_g10
23:20:30 101  ,gbp_g11
23:20:30 102  ,gbp_g12
23:20:30 103  ,gbp_g13
23:20:30 104  ,gbp_g14
23:20:30 105  ,gbp_g15
23:20:30 106  ,gbp_g16
23:20:30 107  ,gbp_g17
23:20:30 108  ,gbp_g18
23:20:30 109  ,gbp_g19
23:20:30 110  ,gbp_g20
23:20:30 111  ,gbp_g21
23:20:30 112  ,gbp_g22
23:20:30 113  ,gbp_g23
23:20:30 114  ,gbp_g24
23:20:30 115  ,gbp_g25
23:20:30 116  ,gbp_g26
23:20:30 117  ,gbp_g27
23:20:30 118  ,gbp_g28
23:20:30 119  ,gbp_g29
23:20:30 120  ,gbp_g30
23:20:30 121  ,gbp_g31
23:20:30 122  ,gbp_g32
23:20:30 123  ,gbp_g33
23:20:30 124  ,gbp_g34
23:20:30 125  ,gbp_g35
23:20:30 126  ,gbp_g36
23:20:30 127  ,gbp_g37
23:20:30 128  ,gbp_g38
23:20:30 129  ,gbp_g39
23:20:30 130  ,gbp_g40
23:20:30 131  ,gbp_g41
23:20:30 132  ,jpy_g00
23:20:30 133  ,jpy_g01
23:20:30 134  ,jpy_g02
23:20:30 135  ,jpy_g03
23:20:30 136  ,jpy_g04
23:20:30 137  ,jpy_g05
23:20:30 138  ,jpy_g06
23:20:30 139  ,jpy_g07
23:20:30 140  ,jpy_g08
23:20:30 141  ,jpy_g09
23:20:30 142  ,jpy_g10
23:20:30 143  ,jpy_g11
23:20:30 144  ,jpy_g12
23:20:30 145  ,jpy_g13
23:20:30 146  ,jpy_g14
23:20:30 147  ,jpy_g15
23:20:30 148  ,jpy_g16
23:20:30 149  ,jpy_g17
23:20:30 150  ,jpy_g18
23:20:30 151  ,jpy_g19
23:20:30 152  ,jpy_g20
23:20:30 153  ,jpy_g21
23:20:30 154  ,jpy_g22
23:20:30 155  ,jpy_g23
23:20:30 156  ,jpy_g24
23:20:30 157  ,jpy_g25
23:20:30 158  ,jpy_g26
23:20:30 159  ,jpy_g27
23:20:30 160  ,jpy_g28
23:20:30 161  ,jpy_g29
23:20:30 162  ,jpy_g30
23:20:30 163  ,jpy_g31
23:20:30 164  ,jpy_g32
23:20:30 165  ,jpy_g33
23:20:30 166  ,jpy_g34
23:20:30 167  ,jpy_g35
23:20:30 168  ,jpy_g36
23:20:30 169  ,jpy_g37
23:20:30 170  ,jpy_g38
23:20:30 171  ,jpy_g39
23:20:30 172  ,jpy_g40
23:20:30 173  ,jpy_g41
23:20:30 174  ,cad_g00
23:20:30 175  ,cad_g01
23:20:30 176  ,cad_g02
23:20:30 177  ,cad_g03
23:20:30 178  ,cad_g04
23:20:30 179  ,cad_g05
23:20:30 180  ,cad_g06
23:20:30 181  ,cad_g07
23:20:30 182  ,cad_g08
23:20:30 183  ,cad_g09
23:20:30 184  ,cad_g10
23:20:30 185  ,cad_g11
23:20:30 186  ,cad_g12
23:20:30 187  ,cad_g13
23:20:30 188  ,cad_g14
23:20:30 189  ,cad_g15
23:20:30 190  ,cad_g16
23:20:30 191  ,cad_g17
23:20:30 192  ,cad_g18
23:20:30 193  ,cad_g19
23:20:30 194  ,cad_g20
23:20:30 195  ,cad_g21
23:20:30 196  ,cad_g22
23:20:30 197  ,cad_g23
23:20:30 198  ,cad_g24
23:20:30 199  ,cad_g25
23:20:30 200  ,cad_g26
23:20:30 201  ,cad_g27
23:20:30 202  ,cad_g28
23:20:30 203  ,cad_g29
23:20:30 204  ,cad_g30
23:20:30 205  ,cad_g31
23:20:30 206  ,cad_g32
23:20:30 207  ,cad_g33
23:20:30 208  ,cad_g34
23:20:30 209  ,cad_g35
23:20:30 210  ,cad_g36
23:20:30 211  ,cad_g37
23:20:30 212  ,cad_g38
23:20:30 213  ,cad_g39
23:20:30 214  ,cad_g40
23:20:30 215  ,cad_g41
23:20:30 216  ,chf_g00
23:20:30 217  ,chf_g01
23:20:30 218  ,chf_g02
23:20:30 219  ,chf_g03
23:20:30 220  ,chf_g04
23:20:30 221  ,chf_g05
23:20:30 222  ,chf_g06
23:20:30 223  ,chf_g07
23:20:30 224  ,chf_g08
23:20:30 225  ,chf_g09
23:20:30 226  ,chf_g10
23:20:30 227  ,chf_g11
23:20:30 228  ,chf_g12
23:20:30 229  ,chf_g13
23:20:30 230  ,chf_g14
23:20:30 231  ,chf_g15
23:20:30 232  ,chf_g16
23:20:30 233  ,chf_g17
23:20:30 234  ,chf_g18
23:20:30 235  ,chf_g19
23:20:30 236  ,chf_g20
23:20:30 237  ,chf_g21
23:20:30 238  ,chf_g22
23:20:30 239  ,chf_g23
23:20:30 240  ,chf_g24
23:20:30 241  ,chf_g25
23:20:30 242  ,chf_g26
23:20:30 243  ,chf_g27
23:20:30 244  ,chf_g28
23:20:30 245  ,chf_g29
23:20:30 246  ,chf_g30
23:20:30 247  ,chf_g31
23:20:30 248  ,chf_g32
23:20:30 249  ,chf_g33
23:20:30 250  ,chf_g34
23:20:30 251  ,chf_g35
23:20:30 252  ,chf_g36
23:20:30 253  ,chf_g37
23:20:30 254  ,chf_g38
23:20:30 255  ,chf_g39
23:20:30 256  ,chf_g40
23:20:30 257  ,chf_g41
23:20:30 258  FROM aud_ms6 m
23:20:30 259  WHERE gatt IN('nup','up')
23:20:30 260  AND 1+m.ydate < '&1'||' '||'&2'
23:20:30 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'23:00:00'

View created.

Elapsed: 00:00:00.13
23:20:30 SQL> 
23:20:30 SQL> -- rpt
23:20:30 SQL> 
23:20:30 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
23:20:30   2  
23:20:30 SQL> SELECT MAX(prdate) FROM bme
23:20:30   2  
23:20:30 SQL> -- Now build model from bme and score sme
23:20:30 SQL> @score1.sql
23:20:30 SQL> -- score1.sql
23:20:30 SQL> 
23:20:30 SQL> -- Does the 1st SVM score
23:20:30 SQL> 
23:20:30 SQL> -- Fill up svmc_apply_prep
23:20:30 SQL> @score.sql
23:20:30 SQL> --
23:20:30 SQL> -- score.sql
23:20:30 SQL> --
23:20:30 SQL> 
23:20:30 SQL> -- usage: score.sql
23:20:30 SQL> 
23:20:30 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
23:20:30 SQL> 
23:20:30 SQL> DEFINE target	= 'gatt'
23:20:30 SQL> DEFINE model_name = 'forex15'
23:20:30 SQL> DEFINE bldtable	= 'bme'
23:20:30 SQL> DEFINE scoretable = 'sme'
23:20:30 SQL> DEFINE case_id	= 'prdate'
23:20:30 SQL> 
23:20:30 SQL> -- Define a variable to help me exclude some columns from some data mining calls
23:20:30 SQL> DEFINE exclude1 = "'&target','&case_id'"
23:20:30 SQL> 
23:20:30 SQL> -- Builds an SVM model using pl/sql.
23:20:30 SQL> 
23:20:30 SQL> -----------------------------------------------------------------------
23:20:30 SQL> --			    BUILD THE MODEL
23:20:30 SQL> -----------------------------------------------------------------------
23:20:30 SQL> 
23:20:30 SQL> -- Cleanup old build data preparation objects for repeat runs
23:20:30 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
23:20:30 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
23:20:30 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
23:20:30 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
23:20:30 SQL> 
23:20:30 SQL> 
23:20:30 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
23:20:30 SQL> --
23:20:30 SQL> -- DROP	TABLE svmc_settings ;
23:20:30 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
23:20:30 SQL> -- DELETE svmc_settings;
23:20:30 SQL> 
23:20:30 SQL> -- The default classification algorithm is Naive Bayes. So override
23:20:30 SQL> -- this choice to SVM using a settings table.
23:20:30 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
23:20:30 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
23:20:30 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
23:20:30 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
23:20:30 SQL> -- models.
23:20:30 SQL> --
23:20:30 SQL> 
23:20:30 SQL> -- Do this once and then comment it out.
23:20:30 SQL> -- That makes script go faster.
23:20:30 SQL> -- BEGIN
23:20:30 SQL> -- -- Populate settings table
23:20:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:20:30 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
23:20:30 SQL> --
23:20:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:20:30 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
23:20:30 SQL> --
23:20:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:20:30 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
23:20:30 SQL> --   COMMIT;
23:20:30 SQL> -- END;
23:20:30 SQL> -- /
23:20:30 SQL> 
23:20:30 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
23:20:30 SQL> 
23:20:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
23:20:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:20:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
23:20:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
23:20:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:20:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
23:20:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
23:20:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:20:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:20:31 SQL> 
23:20:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
23:20:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:20:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
23:20:31 SQL> 
23:20:31 SQL> --------------------------------
23:20:31 SQL> -- PREPARE BUILD (TRAINING) DATA
23:20:31 SQL> --
23:20:31 SQL> 
23:20:31 SQL> -- 1. Missing Value treatment for all Predictors and
23:20:31 SQL> -- 2. Outlier Treatment and
23:20:31 SQL> -- 3. Normalization are performed below.
23:20:31 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
23:20:31 SQL> --    normalized here.
23:20:31 SQL> 
23:20:31 SQL> BEGIN
23:20:31   2  	-- Perform missing value treatment for all predictors
23:20:31   3  	-- create miss tables
23:20:31   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
23:20:31   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
23:20:31   6  
23:20:31   7  	-- populate miss tables
23:20:31   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
23:20:31   9  	  miss_table_name => 'svmc_miss_num',
23:20:31  10  	  data_table_name => '&bldtable',
23:20:31  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:20:31  12  
23:20:31  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
23:20:31  14  	  miss_table_name => 'svmc_miss_cat',
23:20:31  15  	  data_table_name => '&bldtable',
23:20:31  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:20:31  17  
23:20:31  18  	-- xform input data to replace missing values
23:20:31  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:20:31  20  	  miss_table_name => 'svmc_miss_num',
23:20:31  21  	  data_table_name => '&bldtable',
23:20:31  22  	  xform_view_name => 'xformed_build_miss_num');
23:20:31  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:20:31  24  	  miss_table_name => 'svmc_miss_cat',
23:20:31  25  	  data_table_name => '&bldtable',
23:20:31  26  	  xform_view_name => 'xformed_build_miss_cat');
23:20:31  27  
23:20:31  28  	-- Perform outlier treatment.
23:20:31  29  	-- create clip table
23:20:31  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
23:20:31  31  
23:20:31  32  	-- populate clip table
23:20:31  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
23:20:31  34  	  clip_table_name => 'svmc_clip',
23:20:31  35  	  data_table_name => '&bldtable',
23:20:31  36  	  tail_frac	  => 0.025,
23:20:31  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:20:31  38  
23:20:31  39  	-- xform input data to winsorized data
23:20:31  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
23:20:31  41  	  clip_table_name => 'svmc_clip',
23:20:31  42  	  data_table_name => '&bldtable',
23:20:31  43  	  xform_view_name => 'svmc_winsor');
23:20:31  44  
23:20:31  45  	-- create normalization table
23:20:31  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
23:20:31  47  
23:20:31  48  	-- populate normalization table based on winsorized data
23:20:31  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
23:20:31  50  	  norm_table_name => 'svmc_norm',
23:20:31  51  	  data_table_name => 'svmc_winsor',
23:20:31  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:20:31  53  
23:20:31  54  	-- normalize the original data
23:20:31  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:20:31  56  	  norm_table_name => 'svmc_norm',
23:20:31  57  	  data_table_name => '&bldtable',
23:20:31  58  	  xform_view_name => 'svmc_build_prep');
23:20:31  59  END;
23:20:31  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.30
23:20:50 SQL> 
23:20:50 SQL> ---------------------
23:20:50 SQL> -- CREATE A NEW MODEL
23:20:50 SQL> --
23:20:50 SQL> -- Cleanup old model with the same name for repeat runs
23:20:50 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
23:20:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:20:50   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.61
23:20:51 SQL> 
23:20:51 SQL> -- Build a new SVM Model
23:20:51 SQL> BEGIN
23:20:51   2  	DBMS_DATA_MINING.CREATE_MODEL(
23:20:51   3  	  model_name	      => '&model_name',
23:20:51   4  	  mining_function     => dbms_data_mining.classification,
23:20:51   5  	  data_table_name     => 'svmc_build_prep',
23:20:51   6  	  case_id_column_name => '&case_id',
23:20:51   7  	  target_column_name  => '&target',
23:20:51   8  	  settings_table_name => 'svmc_settings');
23:20:51   9  END;
23:20:51  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:30.37
23:21:21 SQL> 
23:21:21 SQL> -----------------------------------------------------------------------
23:21:21 SQL> --			       APPLY/score THE MODEL
23:21:21 SQL> -----------------------------------------------------------------------
23:21:21 SQL> 
23:21:21 SQL> -- Cleanup old scoring data preparation objects for repeat runs
23:21:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
23:21:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:21:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:21:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
23:21:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:21:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:21:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
23:21:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:21:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
23:21:21 SQL> -----------------------
23:21:21 SQL> -- PREPARE SCORING DATA
23:21:21 SQL> --
23:21:21 SQL> -- If the data for model creation has been prepared, then the data
23:21:21 SQL> -- to be scored using the model must be prepared in the same manner
23:21:21 SQL> -- in order to obtain meaningful results.
23:21:21 SQL> --
23:21:21 SQL> -- 1. Missing Value treatment for all Predictors and
23:21:21 SQL> -- 2. Normalization
23:21:21 SQL> -- No outlier treatment will be performed during test and apply. The
23:21:21 SQL> -- normalization step is sufficient, since the normalization parameters
23:21:21 SQL> -- already capture the effects of outlier treatment done with build data.
23:21:21 SQL> --
23:21:21 SQL> BEGIN
23:21:21   2  	-- Xform Test data to replace missing values
23:21:21   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:21:21   4  	  miss_table_name => 'svmc_miss_num',
23:21:21   5  	  data_table_name => '&scoretable',
23:21:21   6  	  xform_view_name => 'xformed_apply_miss_num');
23:21:21   7  
23:21:21   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:21:21   9  	  miss_table_name => 'svmc_miss_cat',
23:21:21  10  	  data_table_name => '&scoretable',
23:21:21  11  	  xform_view_name => 'xformed_apply_miss_cat');
23:21:21  12  
23:21:21  13  	-- Normalize the data to be scored
23:21:21  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:21:21  15  	  norm_table_name => 'svmc_norm',
23:21:21  16  	  data_table_name => '&scoretable',
23:21:21  17  	  xform_view_name => 'svmc_apply_prep');
23:21:21  18  END;
23:21:21  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.29
23:21:22 SQL> 
23:21:22 SQL> -- Use same model_name used in score.sql
23:21:22 SQL> DEFINE model_name = 'forex15'
23:21:22 SQL> 
23:21:22 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
23:21:22 SQL> 
23:21:22 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
23:21:22 SQL> 
23:21:22 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
23:21:22   2  SELECT
23:21:22   3  prdate
23:21:22   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
23:21:22   5  ,sysdate
23:21:22   6  ,SUBSTR(prdate,1,3)pair
23:21:22   7  ,SUBSTR(prdate,4,19)ydate
23:21:22   8  FROM svmc_apply_prep
23:21:22   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.19
23:21:23 SQL> @aud_score1day.sql  2011-01-06 23:05:00
23:21:23 SQL> --
23:21:23 SQL> -- aud_score1day.sql
23:21:23 SQL> --
23:21:23 SQL> 
23:21:23 SQL> CREATE OR REPLACE VIEW sme AS
23:21:23   2  SELECT
23:21:23   3  'aud'||m.ydate prdate
23:21:23   4  ,NULL gatt
23:21:23   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:21:23   6  ,eur_g00
23:21:23   7  ,eur_g01
23:21:23   8  ,eur_g02
23:21:23   9  ,eur_g03
23:21:23  10  ,eur_g04
23:21:23  11  ,eur_g05
23:21:23  12  ,eur_g06
23:21:23  13  ,eur_g07
23:21:23  14  ,eur_g08
23:21:23  15  ,eur_g09
23:21:23  16  ,eur_g10
23:21:23  17  ,eur_g11
23:21:23  18  ,eur_g12
23:21:23  19  ,eur_g13
23:21:23  20  ,eur_g14
23:21:23  21  ,eur_g15
23:21:23  22  ,eur_g16
23:21:23  23  ,eur_g17
23:21:23  24  ,eur_g18
23:21:23  25  ,eur_g19
23:21:23  26  ,eur_g20
23:21:23  27  ,eur_g21
23:21:23  28  ,eur_g22
23:21:23  29  ,eur_g23
23:21:23  30  ,eur_g24
23:21:23  31  ,eur_g25
23:21:23  32  ,eur_g26
23:21:23  33  ,eur_g27
23:21:23  34  ,eur_g28
23:21:23  35  ,eur_g29
23:21:23  36  ,eur_g30
23:21:23  37  ,eur_g31
23:21:23  38  ,eur_g32
23:21:23  39  ,eur_g33
23:21:23  40  ,eur_g34
23:21:23  41  ,eur_g35
23:21:23  42  ,eur_g36
23:21:23  43  ,eur_g37
23:21:23  44  ,eur_g38
23:21:23  45  ,eur_g39
23:21:23  46  ,eur_g40
23:21:23  47  ,eur_g41
23:21:23  48  ,aud_g00
23:21:23  49  ,aud_g01
23:21:23  50  ,aud_g02
23:21:23  51  ,aud_g03
23:21:23  52  ,aud_g04
23:21:23  53  ,aud_g05
23:21:23  54  ,aud_g06
23:21:23  55  ,aud_g07
23:21:23  56  ,aud_g08
23:21:23  57  ,aud_g09
23:21:23  58  ,aud_g10
23:21:23  59  ,aud_g11
23:21:23  60  ,aud_g12
23:21:23  61  ,aud_g13
23:21:23  62  ,aud_g14
23:21:23  63  ,aud_g15
23:21:23  64  ,aud_g16
23:21:23  65  ,aud_g17
23:21:23  66  ,aud_g18
23:21:23  67  ,aud_g19
23:21:23  68  ,aud_g20
23:21:23  69  ,aud_g21
23:21:23  70  ,aud_g22
23:21:23  71  ,aud_g23
23:21:23  72  ,aud_g24
23:21:23  73  ,aud_g25
23:21:23  74  ,aud_g26
23:21:23  75  ,aud_g27
23:21:23  76  ,aud_g28
23:21:23  77  ,aud_g29
23:21:23  78  ,aud_g30
23:21:23  79  ,aud_g31
23:21:23  80  ,aud_g32
23:21:23  81  ,aud_g33
23:21:23  82  ,aud_g34
23:21:23  83  ,aud_g35
23:21:23  84  ,aud_g36
23:21:23  85  ,aud_g37
23:21:23  86  ,aud_g38
23:21:23  87  ,aud_g39
23:21:23  88  ,aud_g40
23:21:23  89  ,aud_g41
23:21:23  90  ,gbp_g00
23:21:23  91  ,gbp_g01
23:21:23  92  ,gbp_g02
23:21:23  93  ,gbp_g03
23:21:23  94  ,gbp_g04
23:21:23  95  ,gbp_g05
23:21:23  96  ,gbp_g06
23:21:23  97  ,gbp_g07
23:21:23  98  ,gbp_g08
23:21:23  99  ,gbp_g09
23:21:23 100  ,gbp_g10
23:21:23 101  ,gbp_g11
23:21:23 102  ,gbp_g12
23:21:23 103  ,gbp_g13
23:21:23 104  ,gbp_g14
23:21:23 105  ,gbp_g15
23:21:23 106  ,gbp_g16
23:21:23 107  ,gbp_g17
23:21:23 108  ,gbp_g18
23:21:23 109  ,gbp_g19
23:21:23 110  ,gbp_g20
23:21:23 111  ,gbp_g21
23:21:23 112  ,gbp_g22
23:21:23 113  ,gbp_g23
23:21:23 114  ,gbp_g24
23:21:23 115  ,gbp_g25
23:21:23 116  ,gbp_g26
23:21:23 117  ,gbp_g27
23:21:23 118  ,gbp_g28
23:21:23 119  ,gbp_g29
23:21:23 120  ,gbp_g30
23:21:23 121  ,gbp_g31
23:21:23 122  ,gbp_g32
23:21:23 123  ,gbp_g33
23:21:23 124  ,gbp_g34
23:21:23 125  ,gbp_g35
23:21:23 126  ,gbp_g36
23:21:23 127  ,gbp_g37
23:21:23 128  ,gbp_g38
23:21:23 129  ,gbp_g39
23:21:23 130  ,gbp_g40
23:21:23 131  ,gbp_g41
23:21:23 132  ,jpy_g00
23:21:23 133  ,jpy_g01
23:21:23 134  ,jpy_g02
23:21:23 135  ,jpy_g03
23:21:23 136  ,jpy_g04
23:21:23 137  ,jpy_g05
23:21:23 138  ,jpy_g06
23:21:23 139  ,jpy_g07
23:21:23 140  ,jpy_g08
23:21:23 141  ,jpy_g09
23:21:23 142  ,jpy_g10
23:21:23 143  ,jpy_g11
23:21:23 144  ,jpy_g12
23:21:23 145  ,jpy_g13
23:21:23 146  ,jpy_g14
23:21:23 147  ,jpy_g15
23:21:23 148  ,jpy_g16
23:21:23 149  ,jpy_g17
23:21:23 150  ,jpy_g18
23:21:23 151  ,jpy_g19
23:21:23 152  ,jpy_g20
23:21:23 153  ,jpy_g21
23:21:23 154  ,jpy_g22
23:21:23 155  ,jpy_g23
23:21:23 156  ,jpy_g24
23:21:23 157  ,jpy_g25
23:21:23 158  ,jpy_g26
23:21:23 159  ,jpy_g27
23:21:23 160  ,jpy_g28
23:21:23 161  ,jpy_g29
23:21:23 162  ,jpy_g30
23:21:23 163  ,jpy_g31
23:21:23 164  ,jpy_g32
23:21:23 165  ,jpy_g33
23:21:23 166  ,jpy_g34
23:21:23 167  ,jpy_g35
23:21:23 168  ,jpy_g36
23:21:23 169  ,jpy_g37
23:21:23 170  ,jpy_g38
23:21:23 171  ,jpy_g39
23:21:23 172  ,jpy_g40
23:21:23 173  ,jpy_g41
23:21:23 174  ,cad_g00
23:21:23 175  ,cad_g01
23:21:23 176  ,cad_g02
23:21:23 177  ,cad_g03
23:21:23 178  ,cad_g04
23:21:23 179  ,cad_g05
23:21:23 180  ,cad_g06
23:21:23 181  ,cad_g07
23:21:23 182  ,cad_g08
23:21:23 183  ,cad_g09
23:21:23 184  ,cad_g10
23:21:23 185  ,cad_g11
23:21:23 186  ,cad_g12
23:21:23 187  ,cad_g13
23:21:23 188  ,cad_g14
23:21:23 189  ,cad_g15
23:21:23 190  ,cad_g16
23:21:23 191  ,cad_g17
23:21:23 192  ,cad_g18
23:21:23 193  ,cad_g19
23:21:23 194  ,cad_g20
23:21:23 195  ,cad_g21
23:21:23 196  ,cad_g22
23:21:23 197  ,cad_g23
23:21:23 198  ,cad_g24
23:21:23 199  ,cad_g25
23:21:23 200  ,cad_g26
23:21:23 201  ,cad_g27
23:21:23 202  ,cad_g28
23:21:23 203  ,cad_g29
23:21:23 204  ,cad_g30
23:21:23 205  ,cad_g31
23:21:23 206  ,cad_g32
23:21:23 207  ,cad_g33
23:21:23 208  ,cad_g34
23:21:23 209  ,cad_g35
23:21:23 210  ,cad_g36
23:21:23 211  ,cad_g37
23:21:23 212  ,cad_g38
23:21:23 213  ,cad_g39
23:21:23 214  ,cad_g40
23:21:23 215  ,cad_g41
23:21:23 216  ,chf_g00
23:21:23 217  ,chf_g01
23:21:23 218  ,chf_g02
23:21:23 219  ,chf_g03
23:21:23 220  ,chf_g04
23:21:23 221  ,chf_g05
23:21:23 222  ,chf_g06
23:21:23 223  ,chf_g07
23:21:23 224  ,chf_g08
23:21:23 225  ,chf_g09
23:21:23 226  ,chf_g10
23:21:23 227  ,chf_g11
23:21:23 228  ,chf_g12
23:21:23 229  ,chf_g13
23:21:23 230  ,chf_g14
23:21:23 231  ,chf_g15
23:21:23 232  ,chf_g16
23:21:23 233  ,chf_g17
23:21:23 234  ,chf_g18
23:21:23 235  ,chf_g19
23:21:23 236  ,chf_g20
23:21:23 237  ,chf_g21
23:21:23 238  ,chf_g22
23:21:23 239  ,chf_g23
23:21:23 240  ,chf_g24
23:21:23 241  ,chf_g25
23:21:23 242  ,chf_g26
23:21:23 243  ,chf_g27
23:21:23 244  ,chf_g28
23:21:23 245  ,chf_g29
23:21:23 246  ,chf_g30
23:21:23 247  ,chf_g31
23:21:23 248  ,chf_g32
23:21:23 249  ,chf_g33
23:21:23 250  ,chf_g34
23:21:23 251  ,chf_g35
23:21:23 252  ,chf_g36
23:21:23 253  ,chf_g37
23:21:23 254  ,chf_g38
23:21:23 255  ,chf_g39
23:21:23 256  ,chf_g40
23:21:23 257  ,chf_g41
23:21:23 258  FROM aud_ms6 m
23:21:23 259  WHERE m.ydate = '&1'||' '||'&2'
23:21:23 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'23:05:00'

View created.

Elapsed: 00:00:00.11
23:21:23 SQL> 
23:21:23 SQL> -- rpt
23:21:23 SQL> -- We should see just 1 row:
23:21:23 SQL> 
23:21:23 SQL> SELECT COUNT(prdate) FROM sme
23:21:23   2  
23:21:23 SQL> -- Build the model:
23:21:23 SQL> CREATE OR REPLACE VIEW bme AS
23:21:23   2  SELECT
23:21:23   3  'aud'||m.ydate prdate
23:21:23   4  ,gatt
23:21:23   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:21:23   6  ,eur_g00
23:21:23   7  ,eur_g01
23:21:23   8  ,eur_g02
23:21:23   9  ,eur_g03
23:21:23  10  ,eur_g04
23:21:23  11  ,eur_g05
23:21:23  12  ,eur_g06
23:21:23  13  ,eur_g07
23:21:23  14  ,eur_g08
23:21:23  15  ,eur_g09
23:21:23  16  ,eur_g10
23:21:23  17  ,eur_g11
23:21:23  18  ,eur_g12
23:21:23  19  ,eur_g13
23:21:23  20  ,eur_g14
23:21:23  21  ,eur_g15
23:21:23  22  ,eur_g16
23:21:23  23  ,eur_g17
23:21:23  24  ,eur_g18
23:21:23  25  ,eur_g19
23:21:23  26  ,eur_g20
23:21:23  27  ,eur_g21
23:21:23  28  ,eur_g22
23:21:23  29  ,eur_g23
23:21:23  30  ,eur_g24
23:21:23  31  ,eur_g25
23:21:23  32  ,eur_g26
23:21:23  33  ,eur_g27
23:21:23  34  ,eur_g28
23:21:23  35  ,eur_g29
23:21:23  36  ,eur_g30
23:21:23  37  ,eur_g31
23:21:23  38  ,eur_g32
23:21:23  39  ,eur_g33
23:21:23  40  ,eur_g34
23:21:23  41  ,eur_g35
23:21:23  42  ,eur_g36
23:21:23  43  ,eur_g37
23:21:23  44  ,eur_g38
23:21:23  45  ,eur_g39
23:21:23  46  ,eur_g40
23:21:23  47  ,eur_g41
23:21:23  48  ,aud_g00
23:21:23  49  ,aud_g01
23:21:23  50  ,aud_g02
23:21:23  51  ,aud_g03
23:21:23  52  ,aud_g04
23:21:23  53  ,aud_g05
23:21:23  54  ,aud_g06
23:21:23  55  ,aud_g07
23:21:23  56  ,aud_g08
23:21:23  57  ,aud_g09
23:21:23  58  ,aud_g10
23:21:23  59  ,aud_g11
23:21:23  60  ,aud_g12
23:21:23  61  ,aud_g13
23:21:23  62  ,aud_g14
23:21:23  63  ,aud_g15
23:21:23  64  ,aud_g16
23:21:23  65  ,aud_g17
23:21:23  66  ,aud_g18
23:21:23  67  ,aud_g19
23:21:23  68  ,aud_g20
23:21:23  69  ,aud_g21
23:21:23  70  ,aud_g22
23:21:23  71  ,aud_g23
23:21:23  72  ,aud_g24
23:21:23  73  ,aud_g25
23:21:23  74  ,aud_g26
23:21:23  75  ,aud_g27
23:21:23  76  ,aud_g28
23:21:23  77  ,aud_g29
23:21:23  78  ,aud_g30
23:21:23  79  ,aud_g31
23:21:23  80  ,aud_g32
23:21:23  81  ,aud_g33
23:21:23  82  ,aud_g34
23:21:23  83  ,aud_g35
23:21:23  84  ,aud_g36
23:21:23  85  ,aud_g37
23:21:23  86  ,aud_g38
23:21:23  87  ,aud_g39
23:21:23  88  ,aud_g40
23:21:23  89  ,aud_g41
23:21:23  90  ,gbp_g00
23:21:23  91  ,gbp_g01
23:21:23  92  ,gbp_g02
23:21:23  93  ,gbp_g03
23:21:23  94  ,gbp_g04
23:21:23  95  ,gbp_g05
23:21:23  96  ,gbp_g06
23:21:23  97  ,gbp_g07
23:21:23  98  ,gbp_g08
23:21:23  99  ,gbp_g09
23:21:23 100  ,gbp_g10
23:21:23 101  ,gbp_g11
23:21:23 102  ,gbp_g12
23:21:23 103  ,gbp_g13
23:21:23 104  ,gbp_g14
23:21:23 105  ,gbp_g15
23:21:23 106  ,gbp_g16
23:21:23 107  ,gbp_g17
23:21:23 108  ,gbp_g18
23:21:23 109  ,gbp_g19
23:21:23 110  ,gbp_g20
23:21:23 111  ,gbp_g21
23:21:23 112  ,gbp_g22
23:21:23 113  ,gbp_g23
23:21:23 114  ,gbp_g24
23:21:23 115  ,gbp_g25
23:21:23 116  ,gbp_g26
23:21:23 117  ,gbp_g27
23:21:23 118  ,gbp_g28
23:21:23 119  ,gbp_g29
23:21:23 120  ,gbp_g30
23:21:23 121  ,gbp_g31
23:21:23 122  ,gbp_g32
23:21:23 123  ,gbp_g33
23:21:23 124  ,gbp_g34
23:21:23 125  ,gbp_g35
23:21:23 126  ,gbp_g36
23:21:23 127  ,gbp_g37
23:21:23 128  ,gbp_g38
23:21:23 129  ,gbp_g39
23:21:23 130  ,gbp_g40
23:21:23 131  ,gbp_g41
23:21:23 132  ,jpy_g00
23:21:23 133  ,jpy_g01
23:21:23 134  ,jpy_g02
23:21:23 135  ,jpy_g03
23:21:23 136  ,jpy_g04
23:21:23 137  ,jpy_g05
23:21:23 138  ,jpy_g06
23:21:23 139  ,jpy_g07
23:21:23 140  ,jpy_g08
23:21:23 141  ,jpy_g09
23:21:23 142  ,jpy_g10
23:21:23 143  ,jpy_g11
23:21:23 144  ,jpy_g12
23:21:23 145  ,jpy_g13
23:21:23 146  ,jpy_g14
23:21:23 147  ,jpy_g15
23:21:23 148  ,jpy_g16
23:21:23 149  ,jpy_g17
23:21:23 150  ,jpy_g18
23:21:23 151  ,jpy_g19
23:21:23 152  ,jpy_g20
23:21:23 153  ,jpy_g21
23:21:23 154  ,jpy_g22
23:21:23 155  ,jpy_g23
23:21:23 156  ,jpy_g24
23:21:23 157  ,jpy_g25
23:21:23 158  ,jpy_g26
23:21:23 159  ,jpy_g27
23:21:23 160  ,jpy_g28
23:21:23 161  ,jpy_g29
23:21:23 162  ,jpy_g30
23:21:23 163  ,jpy_g31
23:21:23 164  ,jpy_g32
23:21:23 165  ,jpy_g33
23:21:23 166  ,jpy_g34
23:21:23 167  ,jpy_g35
23:21:23 168  ,jpy_g36
23:21:23 169  ,jpy_g37
23:21:23 170  ,jpy_g38
23:21:23 171  ,jpy_g39
23:21:23 172  ,jpy_g40
23:21:23 173  ,jpy_g41
23:21:23 174  ,cad_g00
23:21:23 175  ,cad_g01
23:21:23 176  ,cad_g02
23:21:23 177  ,cad_g03
23:21:23 178  ,cad_g04
23:21:23 179  ,cad_g05
23:21:23 180  ,cad_g06
23:21:23 181  ,cad_g07
23:21:23 182  ,cad_g08
23:21:23 183  ,cad_g09
23:21:23 184  ,cad_g10
23:21:23 185  ,cad_g11
23:21:23 186  ,cad_g12
23:21:23 187  ,cad_g13
23:21:23 188  ,cad_g14
23:21:23 189  ,cad_g15
23:21:23 190  ,cad_g16
23:21:23 191  ,cad_g17
23:21:23 192  ,cad_g18
23:21:23 193  ,cad_g19
23:21:23 194  ,cad_g20
23:21:23 195  ,cad_g21
23:21:23 196  ,cad_g22
23:21:23 197  ,cad_g23
23:21:23 198  ,cad_g24
23:21:23 199  ,cad_g25
23:21:23 200  ,cad_g26
23:21:23 201  ,cad_g27
23:21:23 202  ,cad_g28
23:21:23 203  ,cad_g29
23:21:23 204  ,cad_g30
23:21:23 205  ,cad_g31
23:21:23 206  ,cad_g32
23:21:23 207  ,cad_g33
23:21:23 208  ,cad_g34
23:21:23 209  ,cad_g35
23:21:23 210  ,cad_g36
23:21:23 211  ,cad_g37
23:21:23 212  ,cad_g38
23:21:23 213  ,cad_g39
23:21:23 214  ,cad_g40
23:21:23 215  ,cad_g41
23:21:23 216  ,chf_g00
23:21:23 217  ,chf_g01
23:21:23 218  ,chf_g02
23:21:23 219  ,chf_g03
23:21:23 220  ,chf_g04
23:21:23 221  ,chf_g05
23:21:23 222  ,chf_g06
23:21:23 223  ,chf_g07
23:21:23 224  ,chf_g08
23:21:23 225  ,chf_g09
23:21:23 226  ,chf_g10
23:21:23 227  ,chf_g11
23:21:23 228  ,chf_g12
23:21:23 229  ,chf_g13
23:21:23 230  ,chf_g14
23:21:23 231  ,chf_g15
23:21:23 232  ,chf_g16
23:21:23 233  ,chf_g17
23:21:23 234  ,chf_g18
23:21:23 235  ,chf_g19
23:21:23 236  ,chf_g20
23:21:23 237  ,chf_g21
23:21:23 238  ,chf_g22
23:21:23 239  ,chf_g23
23:21:23 240  ,chf_g24
23:21:23 241  ,chf_g25
23:21:23 242  ,chf_g26
23:21:23 243  ,chf_g27
23:21:23 244  ,chf_g28
23:21:23 245  ,chf_g29
23:21:23 246  ,chf_g30
23:21:23 247  ,chf_g31
23:21:23 248  ,chf_g32
23:21:23 249  ,chf_g33
23:21:23 250  ,chf_g34
23:21:23 251  ,chf_g35
23:21:23 252  ,chf_g36
23:21:23 253  ,chf_g37
23:21:23 254  ,chf_g38
23:21:23 255  ,chf_g39
23:21:23 256  ,chf_g40
23:21:23 257  ,chf_g41
23:21:23 258  FROM aud_ms6 m
23:21:23 259  WHERE gatt IN('nup','up')
23:21:23 260  AND 1+m.ydate < '&1'||' '||'&2'
23:21:23 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'23:05:00'

View created.

Elapsed: 00:00:00.12
23:21:23 SQL> 
23:21:23 SQL> -- rpt
23:21:23 SQL> 
23:21:23 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
23:21:23   2  
23:21:23 SQL> SELECT MAX(prdate) FROM bme
23:21:23   2  
23:21:23 SQL> -- Now build model from bme and score sme
23:21:23 SQL> @score1.sql
23:21:23 SQL> -- score1.sql
23:21:23 SQL> 
23:21:23 SQL> -- Does the 1st SVM score
23:21:23 SQL> 
23:21:23 SQL> -- Fill up svmc_apply_prep
23:21:23 SQL> @score.sql
23:21:23 SQL> --
23:21:23 SQL> -- score.sql
23:21:23 SQL> --
23:21:23 SQL> 
23:21:23 SQL> -- usage: score.sql
23:21:23 SQL> 
23:21:23 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
23:21:23 SQL> 
23:21:23 SQL> DEFINE target	= 'gatt'
23:21:23 SQL> DEFINE model_name = 'forex15'
23:21:23 SQL> DEFINE bldtable	= 'bme'
23:21:23 SQL> DEFINE scoretable = 'sme'
23:21:23 SQL> DEFINE case_id	= 'prdate'
23:21:23 SQL> 
23:21:23 SQL> -- Define a variable to help me exclude some columns from some data mining calls
23:21:23 SQL> DEFINE exclude1 = "'&target','&case_id'"
23:21:23 SQL> 
23:21:23 SQL> -- Builds an SVM model using pl/sql.
23:21:23 SQL> 
23:21:23 SQL> -----------------------------------------------------------------------
23:21:23 SQL> --			    BUILD THE MODEL
23:21:23 SQL> -----------------------------------------------------------------------
23:21:23 SQL> 
23:21:23 SQL> -- Cleanup old build data preparation objects for repeat runs
23:21:23 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
23:21:23 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
23:21:23 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
23:21:23 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
23:21:23 SQL> 
23:21:23 SQL> 
23:21:23 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
23:21:23 SQL> --
23:21:23 SQL> -- DROP	TABLE svmc_settings ;
23:21:23 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
23:21:23 SQL> -- DELETE svmc_settings;
23:21:23 SQL> 
23:21:23 SQL> -- The default classification algorithm is Naive Bayes. So override
23:21:23 SQL> -- this choice to SVM using a settings table.
23:21:23 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
23:21:23 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
23:21:23 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
23:21:23 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
23:21:23 SQL> -- models.
23:21:23 SQL> --
23:21:23 SQL> 
23:21:23 SQL> -- Do this once and then comment it out.
23:21:23 SQL> -- That makes script go faster.
23:21:23 SQL> -- BEGIN
23:21:23 SQL> -- -- Populate settings table
23:21:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:21:23 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
23:21:23 SQL> --
23:21:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:21:23 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
23:21:23 SQL> --
23:21:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:21:23 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
23:21:23 SQL> --   COMMIT;
23:21:23 SQL> -- END;
23:21:23 SQL> -- /
23:21:23 SQL> 
23:21:23 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
23:21:23 SQL> 
23:21:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
23:21:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:21:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:21:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
23:21:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:21:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:21:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
23:21:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:21:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
23:21:23 SQL> 
23:21:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
23:21:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:21:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:21:23 SQL> 
23:21:23 SQL> --------------------------------
23:21:23 SQL> -- PREPARE BUILD (TRAINING) DATA
23:21:23 SQL> --
23:21:23 SQL> 
23:21:23 SQL> -- 1. Missing Value treatment for all Predictors and
23:21:23 SQL> -- 2. Outlier Treatment and
23:21:23 SQL> -- 3. Normalization are performed below.
23:21:23 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
23:21:23 SQL> --    normalized here.
23:21:23 SQL> 
23:21:23 SQL> BEGIN
23:21:23   2  	-- Perform missing value treatment for all predictors
23:21:23   3  	-- create miss tables
23:21:23   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
23:21:23   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
23:21:23   6  
23:21:23   7  	-- populate miss tables
23:21:23   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
23:21:23   9  	  miss_table_name => 'svmc_miss_num',
23:21:23  10  	  data_table_name => '&bldtable',
23:21:23  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:21:23  12  
23:21:23  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
23:21:23  14  	  miss_table_name => 'svmc_miss_cat',
23:21:23  15  	  data_table_name => '&bldtable',
23:21:23  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:21:23  17  
23:21:23  18  	-- xform input data to replace missing values
23:21:23  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:21:23  20  	  miss_table_name => 'svmc_miss_num',
23:21:23  21  	  data_table_name => '&bldtable',
23:21:23  22  	  xform_view_name => 'xformed_build_miss_num');
23:21:23  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:21:23  24  	  miss_table_name => 'svmc_miss_cat',
23:21:23  25  	  data_table_name => '&bldtable',
23:21:23  26  	  xform_view_name => 'xformed_build_miss_cat');
23:21:23  27  
23:21:23  28  	-- Perform outlier treatment.
23:21:23  29  	-- create clip table
23:21:23  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
23:21:23  31  
23:21:23  32  	-- populate clip table
23:21:23  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
23:21:23  34  	  clip_table_name => 'svmc_clip',
23:21:23  35  	  data_table_name => '&bldtable',
23:21:23  36  	  tail_frac	  => 0.025,
23:21:23  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:21:23  38  
23:21:23  39  	-- xform input data to winsorized data
23:21:23  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
23:21:23  41  	  clip_table_name => 'svmc_clip',
23:21:23  42  	  data_table_name => '&bldtable',
23:21:23  43  	  xform_view_name => 'svmc_winsor');
23:21:23  44  
23:21:23  45  	-- create normalization table
23:21:23  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
23:21:23  47  
23:21:23  48  	-- populate normalization table based on winsorized data
23:21:23  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
23:21:23  50  	  norm_table_name => 'svmc_norm',
23:21:23  51  	  data_table_name => 'svmc_winsor',
23:21:23  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:21:23  53  
23:21:23  54  	-- normalize the original data
23:21:23  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:21:23  56  	  norm_table_name => 'svmc_norm',
23:21:23  57  	  data_table_name => '&bldtable',
23:21:23  58  	  xform_view_name => 'svmc_build_prep');
23:21:23  59  END;
23:21:23  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.81
23:21:42 SQL> 
23:21:42 SQL> ---------------------
23:21:42 SQL> -- CREATE A NEW MODEL
23:21:42 SQL> --
23:21:42 SQL> -- Cleanup old model with the same name for repeat runs
23:21:42 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
23:21:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:21:42   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.02
23:21:43 SQL> 
23:21:43 SQL> -- Build a new SVM Model
23:21:43 SQL> BEGIN
23:21:43   2  	DBMS_DATA_MINING.CREATE_MODEL(
23:21:43   3  	  model_name	      => '&model_name',
23:21:43   4  	  mining_function     => dbms_data_mining.classification,
23:21:43   5  	  data_table_name     => 'svmc_build_prep',
23:21:43   6  	  case_id_column_name => '&case_id',
23:21:43   7  	  target_column_name  => '&target',
23:21:43   8  	  settings_table_name => 'svmc_settings');
23:21:43   9  END;
23:21:43  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.22
23:22:12 SQL> 
23:22:12 SQL> -----------------------------------------------------------------------
23:22:12 SQL> --			       APPLY/score THE MODEL
23:22:12 SQL> -----------------------------------------------------------------------
23:22:12 SQL> 
23:22:12 SQL> -- Cleanup old scoring data preparation objects for repeat runs
23:22:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
23:22:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:22:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:22:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
23:22:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:22:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:22:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
23:22:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:22:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:22:12 SQL> -----------------------
23:22:12 SQL> -- PREPARE SCORING DATA
23:22:12 SQL> --
23:22:12 SQL> -- If the data for model creation has been prepared, then the data
23:22:12 SQL> -- to be scored using the model must be prepared in the same manner
23:22:12 SQL> -- in order to obtain meaningful results.
23:22:12 SQL> --
23:22:12 SQL> -- 1. Missing Value treatment for all Predictors and
23:22:12 SQL> -- 2. Normalization
23:22:12 SQL> -- No outlier treatment will be performed during test and apply. The
23:22:12 SQL> -- normalization step is sufficient, since the normalization parameters
23:22:12 SQL> -- already capture the effects of outlier treatment done with build data.
23:22:12 SQL> --
23:22:12 SQL> BEGIN
23:22:12   2  	-- Xform Test data to replace missing values
23:22:12   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:22:12   4  	  miss_table_name => 'svmc_miss_num',
23:22:12   5  	  data_table_name => '&scoretable',
23:22:12   6  	  xform_view_name => 'xformed_apply_miss_num');
23:22:12   7  
23:22:12   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:22:12   9  	  miss_table_name => 'svmc_miss_cat',
23:22:12  10  	  data_table_name => '&scoretable',
23:22:12  11  	  xform_view_name => 'xformed_apply_miss_cat');
23:22:12  12  
23:22:12  13  	-- Normalize the data to be scored
23:22:12  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:22:12  15  	  norm_table_name => 'svmc_norm',
23:22:12  16  	  data_table_name => '&scoretable',
23:22:12  17  	  xform_view_name => 'svmc_apply_prep');
23:22:12  18  END;
23:22:12  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
23:22:14 SQL> 
23:22:14 SQL> -- Use same model_name used in score.sql
23:22:14 SQL> DEFINE model_name = 'forex15'
23:22:14 SQL> 
23:22:14 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
23:22:14 SQL> 
23:22:14 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
23:22:14 SQL> 
23:22:14 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
23:22:14   2  SELECT
23:22:14   3  prdate
23:22:14   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
23:22:14   5  ,sysdate
23:22:14   6  ,SUBSTR(prdate,1,3)pair
23:22:14   7  ,SUBSTR(prdate,4,19)ydate
23:22:14   8  FROM svmc_apply_prep
23:22:14   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
23:22:14 SQL> @aud_score1day.sql  2011-01-06 23:10:00
23:22:14 SQL> --
23:22:14 SQL> -- aud_score1day.sql
23:22:14 SQL> --
23:22:14 SQL> 
23:22:14 SQL> CREATE OR REPLACE VIEW sme AS
23:22:14   2  SELECT
23:22:14   3  'aud'||m.ydate prdate
23:22:14   4  ,NULL gatt
23:22:14   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:22:14   6  ,eur_g00
23:22:14   7  ,eur_g01
23:22:14   8  ,eur_g02
23:22:14   9  ,eur_g03
23:22:14  10  ,eur_g04
23:22:14  11  ,eur_g05
23:22:14  12  ,eur_g06
23:22:14  13  ,eur_g07
23:22:14  14  ,eur_g08
23:22:14  15  ,eur_g09
23:22:14  16  ,eur_g10
23:22:14  17  ,eur_g11
23:22:14  18  ,eur_g12
23:22:14  19  ,eur_g13
23:22:14  20  ,eur_g14
23:22:14  21  ,eur_g15
23:22:14  22  ,eur_g16
23:22:14  23  ,eur_g17
23:22:14  24  ,eur_g18
23:22:14  25  ,eur_g19
23:22:14  26  ,eur_g20
23:22:14  27  ,eur_g21
23:22:14  28  ,eur_g22
23:22:14  29  ,eur_g23
23:22:14  30  ,eur_g24
23:22:14  31  ,eur_g25
23:22:14  32  ,eur_g26
23:22:14  33  ,eur_g27
23:22:14  34  ,eur_g28
23:22:14  35  ,eur_g29
23:22:14  36  ,eur_g30
23:22:14  37  ,eur_g31
23:22:14  38  ,eur_g32
23:22:14  39  ,eur_g33
23:22:14  40  ,eur_g34
23:22:14  41  ,eur_g35
23:22:14  42  ,eur_g36
23:22:14  43  ,eur_g37
23:22:14  44  ,eur_g38
23:22:14  45  ,eur_g39
23:22:14  46  ,eur_g40
23:22:14  47  ,eur_g41
23:22:14  48  ,aud_g00
23:22:14  49  ,aud_g01
23:22:14  50  ,aud_g02
23:22:14  51  ,aud_g03
23:22:14  52  ,aud_g04
23:22:14  53  ,aud_g05
23:22:14  54  ,aud_g06
23:22:14  55  ,aud_g07
23:22:14  56  ,aud_g08
23:22:14  57  ,aud_g09
23:22:14  58  ,aud_g10
23:22:14  59  ,aud_g11
23:22:14  60  ,aud_g12
23:22:14  61  ,aud_g13
23:22:14  62  ,aud_g14
23:22:14  63  ,aud_g15
23:22:14  64  ,aud_g16
23:22:14  65  ,aud_g17
23:22:14  66  ,aud_g18
23:22:14  67  ,aud_g19
23:22:14  68  ,aud_g20
23:22:14  69  ,aud_g21
23:22:14  70  ,aud_g22
23:22:14  71  ,aud_g23
23:22:14  72  ,aud_g24
23:22:14  73  ,aud_g25
23:22:14  74  ,aud_g26
23:22:14  75  ,aud_g27
23:22:14  76  ,aud_g28
23:22:14  77  ,aud_g29
23:22:14  78  ,aud_g30
23:22:14  79  ,aud_g31
23:22:14  80  ,aud_g32
23:22:14  81  ,aud_g33
23:22:14  82  ,aud_g34
23:22:14  83  ,aud_g35
23:22:14  84  ,aud_g36
23:22:14  85  ,aud_g37
23:22:14  86  ,aud_g38
23:22:14  87  ,aud_g39
23:22:14  88  ,aud_g40
23:22:14  89  ,aud_g41
23:22:14  90  ,gbp_g00
23:22:14  91  ,gbp_g01
23:22:14  92  ,gbp_g02
23:22:14  93  ,gbp_g03
23:22:14  94  ,gbp_g04
23:22:14  95  ,gbp_g05
23:22:14  96  ,gbp_g06
23:22:14  97  ,gbp_g07
23:22:14  98  ,gbp_g08
23:22:14  99  ,gbp_g09
23:22:14 100  ,gbp_g10
23:22:14 101  ,gbp_g11
23:22:14 102  ,gbp_g12
23:22:14 103  ,gbp_g13
23:22:14 104  ,gbp_g14
23:22:14 105  ,gbp_g15
23:22:14 106  ,gbp_g16
23:22:14 107  ,gbp_g17
23:22:14 108  ,gbp_g18
23:22:14 109  ,gbp_g19
23:22:14 110  ,gbp_g20
23:22:14 111  ,gbp_g21
23:22:14 112  ,gbp_g22
23:22:14 113  ,gbp_g23
23:22:14 114  ,gbp_g24
23:22:14 115  ,gbp_g25
23:22:14 116  ,gbp_g26
23:22:14 117  ,gbp_g27
23:22:14 118  ,gbp_g28
23:22:14 119  ,gbp_g29
23:22:14 120  ,gbp_g30
23:22:14 121  ,gbp_g31
23:22:14 122  ,gbp_g32
23:22:14 123  ,gbp_g33
23:22:14 124  ,gbp_g34
23:22:14 125  ,gbp_g35
23:22:14 126  ,gbp_g36
23:22:14 127  ,gbp_g37
23:22:14 128  ,gbp_g38
23:22:14 129  ,gbp_g39
23:22:14 130  ,gbp_g40
23:22:14 131  ,gbp_g41
23:22:14 132  ,jpy_g00
23:22:14 133  ,jpy_g01
23:22:14 134  ,jpy_g02
23:22:14 135  ,jpy_g03
23:22:14 136  ,jpy_g04
23:22:14 137  ,jpy_g05
23:22:14 138  ,jpy_g06
23:22:14 139  ,jpy_g07
23:22:14 140  ,jpy_g08
23:22:14 141  ,jpy_g09
23:22:14 142  ,jpy_g10
23:22:14 143  ,jpy_g11
23:22:14 144  ,jpy_g12
23:22:14 145  ,jpy_g13
23:22:14 146  ,jpy_g14
23:22:14 147  ,jpy_g15
23:22:14 148  ,jpy_g16
23:22:14 149  ,jpy_g17
23:22:14 150  ,jpy_g18
23:22:14 151  ,jpy_g19
23:22:14 152  ,jpy_g20
23:22:14 153  ,jpy_g21
23:22:14 154  ,jpy_g22
23:22:14 155  ,jpy_g23
23:22:14 156  ,jpy_g24
23:22:14 157  ,jpy_g25
23:22:14 158  ,jpy_g26
23:22:14 159  ,jpy_g27
23:22:14 160  ,jpy_g28
23:22:14 161  ,jpy_g29
23:22:14 162  ,jpy_g30
23:22:14 163  ,jpy_g31
23:22:14 164  ,jpy_g32
23:22:14 165  ,jpy_g33
23:22:14 166  ,jpy_g34
23:22:14 167  ,jpy_g35
23:22:14 168  ,jpy_g36
23:22:14 169  ,jpy_g37
23:22:14 170  ,jpy_g38
23:22:14 171  ,jpy_g39
23:22:14 172  ,jpy_g40
23:22:14 173  ,jpy_g41
23:22:14 174  ,cad_g00
23:22:14 175  ,cad_g01
23:22:14 176  ,cad_g02
23:22:14 177  ,cad_g03
23:22:14 178  ,cad_g04
23:22:14 179  ,cad_g05
23:22:14 180  ,cad_g06
23:22:14 181  ,cad_g07
23:22:14 182  ,cad_g08
23:22:14 183  ,cad_g09
23:22:14 184  ,cad_g10
23:22:14 185  ,cad_g11
23:22:14 186  ,cad_g12
23:22:14 187  ,cad_g13
23:22:14 188  ,cad_g14
23:22:14 189  ,cad_g15
23:22:14 190  ,cad_g16
23:22:14 191  ,cad_g17
23:22:14 192  ,cad_g18
23:22:14 193  ,cad_g19
23:22:14 194  ,cad_g20
23:22:14 195  ,cad_g21
23:22:14 196  ,cad_g22
23:22:14 197  ,cad_g23
23:22:14 198  ,cad_g24
23:22:14 199  ,cad_g25
23:22:14 200  ,cad_g26
23:22:14 201  ,cad_g27
23:22:14 202  ,cad_g28
23:22:14 203  ,cad_g29
23:22:14 204  ,cad_g30
23:22:14 205  ,cad_g31
23:22:14 206  ,cad_g32
23:22:14 207  ,cad_g33
23:22:14 208  ,cad_g34
23:22:14 209  ,cad_g35
23:22:14 210  ,cad_g36
23:22:14 211  ,cad_g37
23:22:14 212  ,cad_g38
23:22:14 213  ,cad_g39
23:22:14 214  ,cad_g40
23:22:14 215  ,cad_g41
23:22:14 216  ,chf_g00
23:22:14 217  ,chf_g01
23:22:14 218  ,chf_g02
23:22:14 219  ,chf_g03
23:22:14 220  ,chf_g04
23:22:14 221  ,chf_g05
23:22:14 222  ,chf_g06
23:22:14 223  ,chf_g07
23:22:14 224  ,chf_g08
23:22:14 225  ,chf_g09
23:22:14 226  ,chf_g10
23:22:14 227  ,chf_g11
23:22:14 228  ,chf_g12
23:22:14 229  ,chf_g13
23:22:14 230  ,chf_g14
23:22:14 231  ,chf_g15
23:22:14 232  ,chf_g16
23:22:14 233  ,chf_g17
23:22:14 234  ,chf_g18
23:22:14 235  ,chf_g19
23:22:14 236  ,chf_g20
23:22:14 237  ,chf_g21
23:22:14 238  ,chf_g22
23:22:14 239  ,chf_g23
23:22:14 240  ,chf_g24
23:22:14 241  ,chf_g25
23:22:14 242  ,chf_g26
23:22:14 243  ,chf_g27
23:22:14 244  ,chf_g28
23:22:14 245  ,chf_g29
23:22:14 246  ,chf_g30
23:22:14 247  ,chf_g31
23:22:14 248  ,chf_g32
23:22:14 249  ,chf_g33
23:22:14 250  ,chf_g34
23:22:14 251  ,chf_g35
23:22:14 252  ,chf_g36
23:22:14 253  ,chf_g37
23:22:14 254  ,chf_g38
23:22:14 255  ,chf_g39
23:22:14 256  ,chf_g40
23:22:14 257  ,chf_g41
23:22:14 258  FROM aud_ms6 m
23:22:14 259  WHERE m.ydate = '&1'||' '||'&2'
23:22:14 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'23:10:00'

View created.

Elapsed: 00:00:00.14
23:22:14 SQL> 
23:22:14 SQL> -- rpt
23:22:14 SQL> -- We should see just 1 row:
23:22:14 SQL> 
23:22:14 SQL> SELECT COUNT(prdate) FROM sme
23:22:14   2  
23:22:14 SQL> -- Build the model:
23:22:14 SQL> CREATE OR REPLACE VIEW bme AS
23:22:14   2  SELECT
23:22:14   3  'aud'||m.ydate prdate
23:22:14   4  ,gatt
23:22:14   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:22:14   6  ,eur_g00
23:22:14   7  ,eur_g01
23:22:14   8  ,eur_g02
23:22:14   9  ,eur_g03
23:22:14  10  ,eur_g04
23:22:14  11  ,eur_g05
23:22:14  12  ,eur_g06
23:22:14  13  ,eur_g07
23:22:14  14  ,eur_g08
23:22:14  15  ,eur_g09
23:22:14  16  ,eur_g10
23:22:14  17  ,eur_g11
23:22:14  18  ,eur_g12
23:22:14  19  ,eur_g13
23:22:14  20  ,eur_g14
23:22:14  21  ,eur_g15
23:22:14  22  ,eur_g16
23:22:14  23  ,eur_g17
23:22:14  24  ,eur_g18
23:22:14  25  ,eur_g19
23:22:14  26  ,eur_g20
23:22:14  27  ,eur_g21
23:22:14  28  ,eur_g22
23:22:14  29  ,eur_g23
23:22:14  30  ,eur_g24
23:22:14  31  ,eur_g25
23:22:14  32  ,eur_g26
23:22:14  33  ,eur_g27
23:22:14  34  ,eur_g28
23:22:14  35  ,eur_g29
23:22:14  36  ,eur_g30
23:22:14  37  ,eur_g31
23:22:14  38  ,eur_g32
23:22:14  39  ,eur_g33
23:22:14  40  ,eur_g34
23:22:14  41  ,eur_g35
23:22:14  42  ,eur_g36
23:22:14  43  ,eur_g37
23:22:14  44  ,eur_g38
23:22:14  45  ,eur_g39
23:22:14  46  ,eur_g40
23:22:14  47  ,eur_g41
23:22:14  48  ,aud_g00
23:22:14  49  ,aud_g01
23:22:14  50  ,aud_g02
23:22:14  51  ,aud_g03
23:22:14  52  ,aud_g04
23:22:14  53  ,aud_g05
23:22:14  54  ,aud_g06
23:22:14  55  ,aud_g07
23:22:14  56  ,aud_g08
23:22:14  57  ,aud_g09
23:22:14  58  ,aud_g10
23:22:14  59  ,aud_g11
23:22:14  60  ,aud_g12
23:22:14  61  ,aud_g13
23:22:14  62  ,aud_g14
23:22:14  63  ,aud_g15
23:22:14  64  ,aud_g16
23:22:14  65  ,aud_g17
23:22:14  66  ,aud_g18
23:22:14  67  ,aud_g19
23:22:14  68  ,aud_g20
23:22:14  69  ,aud_g21
23:22:14  70  ,aud_g22
23:22:14  71  ,aud_g23
23:22:14  72  ,aud_g24
23:22:14  73  ,aud_g25
23:22:14  74  ,aud_g26
23:22:14  75  ,aud_g27
23:22:14  76  ,aud_g28
23:22:14  77  ,aud_g29
23:22:14  78  ,aud_g30
23:22:14  79  ,aud_g31
23:22:14  80  ,aud_g32
23:22:14  81  ,aud_g33
23:22:14  82  ,aud_g34
23:22:14  83  ,aud_g35
23:22:14  84  ,aud_g36
23:22:14  85  ,aud_g37
23:22:14  86  ,aud_g38
23:22:14  87  ,aud_g39
23:22:14  88  ,aud_g40
23:22:14  89  ,aud_g41
23:22:14  90  ,gbp_g00
23:22:14  91  ,gbp_g01
23:22:14  92  ,gbp_g02
23:22:14  93  ,gbp_g03
23:22:14  94  ,gbp_g04
23:22:14  95  ,gbp_g05
23:22:14  96  ,gbp_g06
23:22:14  97  ,gbp_g07
23:22:14  98  ,gbp_g08
23:22:14  99  ,gbp_g09
23:22:14 100  ,gbp_g10
23:22:14 101  ,gbp_g11
23:22:14 102  ,gbp_g12
23:22:14 103  ,gbp_g13
23:22:14 104  ,gbp_g14
23:22:14 105  ,gbp_g15
23:22:14 106  ,gbp_g16
23:22:14 107  ,gbp_g17
23:22:14 108  ,gbp_g18
23:22:14 109  ,gbp_g19
23:22:14 110  ,gbp_g20
23:22:14 111  ,gbp_g21
23:22:14 112  ,gbp_g22
23:22:14 113  ,gbp_g23
23:22:14 114  ,gbp_g24
23:22:14 115  ,gbp_g25
23:22:14 116  ,gbp_g26
23:22:14 117  ,gbp_g27
23:22:14 118  ,gbp_g28
23:22:14 119  ,gbp_g29
23:22:14 120  ,gbp_g30
23:22:14 121  ,gbp_g31
23:22:14 122  ,gbp_g32
23:22:14 123  ,gbp_g33
23:22:14 124  ,gbp_g34
23:22:14 125  ,gbp_g35
23:22:14 126  ,gbp_g36
23:22:14 127  ,gbp_g37
23:22:14 128  ,gbp_g38
23:22:14 129  ,gbp_g39
23:22:14 130  ,gbp_g40
23:22:14 131  ,gbp_g41
23:22:14 132  ,jpy_g00
23:22:14 133  ,jpy_g01
23:22:14 134  ,jpy_g02
23:22:14 135  ,jpy_g03
23:22:14 136  ,jpy_g04
23:22:14 137  ,jpy_g05
23:22:14 138  ,jpy_g06
23:22:14 139  ,jpy_g07
23:22:14 140  ,jpy_g08
23:22:14 141  ,jpy_g09
23:22:14 142  ,jpy_g10
23:22:14 143  ,jpy_g11
23:22:14 144  ,jpy_g12
23:22:14 145  ,jpy_g13
23:22:14 146  ,jpy_g14
23:22:14 147  ,jpy_g15
23:22:14 148  ,jpy_g16
23:22:14 149  ,jpy_g17
23:22:14 150  ,jpy_g18
23:22:14 151  ,jpy_g19
23:22:14 152  ,jpy_g20
23:22:14 153  ,jpy_g21
23:22:14 154  ,jpy_g22
23:22:14 155  ,jpy_g23
23:22:14 156  ,jpy_g24
23:22:14 157  ,jpy_g25
23:22:14 158  ,jpy_g26
23:22:14 159  ,jpy_g27
23:22:14 160  ,jpy_g28
23:22:14 161  ,jpy_g29
23:22:14 162  ,jpy_g30
23:22:14 163  ,jpy_g31
23:22:14 164  ,jpy_g32
23:22:14 165  ,jpy_g33
23:22:14 166  ,jpy_g34
23:22:14 167  ,jpy_g35
23:22:14 168  ,jpy_g36
23:22:14 169  ,jpy_g37
23:22:14 170  ,jpy_g38
23:22:14 171  ,jpy_g39
23:22:14 172  ,jpy_g40
23:22:14 173  ,jpy_g41
23:22:14 174  ,cad_g00
23:22:14 175  ,cad_g01
23:22:14 176  ,cad_g02
23:22:14 177  ,cad_g03
23:22:14 178  ,cad_g04
23:22:14 179  ,cad_g05
23:22:14 180  ,cad_g06
23:22:14 181  ,cad_g07
23:22:14 182  ,cad_g08
23:22:14 183  ,cad_g09
23:22:14 184  ,cad_g10
23:22:14 185  ,cad_g11
23:22:14 186  ,cad_g12
23:22:14 187  ,cad_g13
23:22:14 188  ,cad_g14
23:22:14 189  ,cad_g15
23:22:14 190  ,cad_g16
23:22:14 191  ,cad_g17
23:22:14 192  ,cad_g18
23:22:14 193  ,cad_g19
23:22:14 194  ,cad_g20
23:22:14 195  ,cad_g21
23:22:14 196  ,cad_g22
23:22:14 197  ,cad_g23
23:22:14 198  ,cad_g24
23:22:14 199  ,cad_g25
23:22:14 200  ,cad_g26
23:22:14 201  ,cad_g27
23:22:14 202  ,cad_g28
23:22:14 203  ,cad_g29
23:22:14 204  ,cad_g30
23:22:14 205  ,cad_g31
23:22:14 206  ,cad_g32
23:22:14 207  ,cad_g33
23:22:14 208  ,cad_g34
23:22:14 209  ,cad_g35
23:22:14 210  ,cad_g36
23:22:14 211  ,cad_g37
23:22:14 212  ,cad_g38
23:22:14 213  ,cad_g39
23:22:14 214  ,cad_g40
23:22:14 215  ,cad_g41
23:22:14 216  ,chf_g00
23:22:14 217  ,chf_g01
23:22:14 218  ,chf_g02
23:22:14 219  ,chf_g03
23:22:14 220  ,chf_g04
23:22:14 221  ,chf_g05
23:22:14 222  ,chf_g06
23:22:14 223  ,chf_g07
23:22:14 224  ,chf_g08
23:22:14 225  ,chf_g09
23:22:14 226  ,chf_g10
23:22:14 227  ,chf_g11
23:22:14 228  ,chf_g12
23:22:14 229  ,chf_g13
23:22:14 230  ,chf_g14
23:22:14 231  ,chf_g15
23:22:14 232  ,chf_g16
23:22:14 233  ,chf_g17
23:22:14 234  ,chf_g18
23:22:14 235  ,chf_g19
23:22:14 236  ,chf_g20
23:22:14 237  ,chf_g21
23:22:14 238  ,chf_g22
23:22:14 239  ,chf_g23
23:22:14 240  ,chf_g24
23:22:14 241  ,chf_g25
23:22:14 242  ,chf_g26
23:22:14 243  ,chf_g27
23:22:14 244  ,chf_g28
23:22:14 245  ,chf_g29
23:22:14 246  ,chf_g30
23:22:14 247  ,chf_g31
23:22:14 248  ,chf_g32
23:22:14 249  ,chf_g33
23:22:14 250  ,chf_g34
23:22:14 251  ,chf_g35
23:22:14 252  ,chf_g36
23:22:14 253  ,chf_g37
23:22:14 254  ,chf_g38
23:22:14 255  ,chf_g39
23:22:14 256  ,chf_g40
23:22:14 257  ,chf_g41
23:22:14 258  FROM aud_ms6 m
23:22:14 259  WHERE gatt IN('nup','up')
23:22:14 260  AND 1+m.ydate < '&1'||' '||'&2'
23:22:14 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'23:10:00'

View created.

Elapsed: 00:00:00.12
23:22:14 SQL> 
23:22:14 SQL> -- rpt
23:22:14 SQL> 
23:22:14 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
23:22:14   2  
23:22:14 SQL> SELECT MAX(prdate) FROM bme
23:22:14   2  
23:22:14 SQL> -- Now build model from bme and score sme
23:22:14 SQL> @score1.sql
23:22:14 SQL> -- score1.sql
23:22:14 SQL> 
23:22:14 SQL> -- Does the 1st SVM score
23:22:14 SQL> 
23:22:14 SQL> -- Fill up svmc_apply_prep
23:22:14 SQL> @score.sql
23:22:14 SQL> --
23:22:14 SQL> -- score.sql
23:22:14 SQL> --
23:22:14 SQL> 
23:22:14 SQL> -- usage: score.sql
23:22:14 SQL> 
23:22:14 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
23:22:14 SQL> 
23:22:14 SQL> DEFINE target	= 'gatt'
23:22:14 SQL> DEFINE model_name = 'forex15'
23:22:14 SQL> DEFINE bldtable	= 'bme'
23:22:14 SQL> DEFINE scoretable = 'sme'
23:22:14 SQL> DEFINE case_id	= 'prdate'
23:22:14 SQL> 
23:22:14 SQL> -- Define a variable to help me exclude some columns from some data mining calls
23:22:14 SQL> DEFINE exclude1 = "'&target','&case_id'"
23:22:14 SQL> 
23:22:14 SQL> -- Builds an SVM model using pl/sql.
23:22:14 SQL> 
23:22:14 SQL> -----------------------------------------------------------------------
23:22:14 SQL> --			    BUILD THE MODEL
23:22:14 SQL> -----------------------------------------------------------------------
23:22:14 SQL> 
23:22:14 SQL> -- Cleanup old build data preparation objects for repeat runs
23:22:14 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
23:22:14 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
23:22:14 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
23:22:14 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
23:22:14 SQL> 
23:22:14 SQL> 
23:22:14 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
23:22:14 SQL> --
23:22:14 SQL> -- DROP	TABLE svmc_settings ;
23:22:14 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
23:22:14 SQL> -- DELETE svmc_settings;
23:22:14 SQL> 
23:22:14 SQL> -- The default classification algorithm is Naive Bayes. So override
23:22:14 SQL> -- this choice to SVM using a settings table.
23:22:14 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
23:22:14 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
23:22:14 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
23:22:14 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
23:22:14 SQL> -- models.
23:22:14 SQL> --
23:22:14 SQL> 
23:22:14 SQL> -- Do this once and then comment it out.
23:22:14 SQL> -- That makes script go faster.
23:22:14 SQL> -- BEGIN
23:22:14 SQL> -- -- Populate settings table
23:22:14 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:22:14 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
23:22:14 SQL> --
23:22:14 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:22:14 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
23:22:14 SQL> --
23:22:14 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:22:14 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
23:22:14 SQL> --   COMMIT;
23:22:14 SQL> -- END;
23:22:14 SQL> -- /
23:22:14 SQL> 
23:22:14 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
23:22:14 SQL> 
23:22:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
23:22:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:22:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
23:22:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
23:22:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:22:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:22:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
23:22:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:22:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:22:14 SQL> 
23:22:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
23:22:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:22:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:22:14 SQL> 
23:22:14 SQL> --------------------------------
23:22:14 SQL> -- PREPARE BUILD (TRAINING) DATA
23:22:14 SQL> --
23:22:14 SQL> 
23:22:14 SQL> -- 1. Missing Value treatment for all Predictors and
23:22:14 SQL> -- 2. Outlier Treatment and
23:22:14 SQL> -- 3. Normalization are performed below.
23:22:14 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
23:22:14 SQL> --    normalized here.
23:22:14 SQL> 
23:22:14 SQL> BEGIN
23:22:14   2  	-- Perform missing value treatment for all predictors
23:22:14   3  	-- create miss tables
23:22:14   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
23:22:14   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
23:22:14   6  
23:22:14   7  	-- populate miss tables
23:22:14   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
23:22:14   9  	  miss_table_name => 'svmc_miss_num',
23:22:14  10  	  data_table_name => '&bldtable',
23:22:14  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:22:14  12  
23:22:14  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
23:22:14  14  	  miss_table_name => 'svmc_miss_cat',
23:22:14  15  	  data_table_name => '&bldtable',
23:22:14  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:22:14  17  
23:22:14  18  	-- xform input data to replace missing values
23:22:14  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:22:14  20  	  miss_table_name => 'svmc_miss_num',
23:22:14  21  	  data_table_name => '&bldtable',
23:22:14  22  	  xform_view_name => 'xformed_build_miss_num');
23:22:14  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:22:14  24  	  miss_table_name => 'svmc_miss_cat',
23:22:14  25  	  data_table_name => '&bldtable',
23:22:14  26  	  xform_view_name => 'xformed_build_miss_cat');
23:22:14  27  
23:22:14  28  	-- Perform outlier treatment.
23:22:14  29  	-- create clip table
23:22:14  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
23:22:14  31  
23:22:14  32  	-- populate clip table
23:22:14  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
23:22:14  34  	  clip_table_name => 'svmc_clip',
23:22:14  35  	  data_table_name => '&bldtable',
23:22:14  36  	  tail_frac	  => 0.025,
23:22:14  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:22:14  38  
23:22:14  39  	-- xform input data to winsorized data
23:22:14  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
23:22:14  41  	  clip_table_name => 'svmc_clip',
23:22:14  42  	  data_table_name => '&bldtable',
23:22:14  43  	  xform_view_name => 'svmc_winsor');
23:22:14  44  
23:22:14  45  	-- create normalization table
23:22:14  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
23:22:14  47  
23:22:14  48  	-- populate normalization table based on winsorized data
23:22:14  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
23:22:14  50  	  norm_table_name => 'svmc_norm',
23:22:14  51  	  data_table_name => 'svmc_winsor',
23:22:14  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:22:14  53  
23:22:14  54  	-- normalize the original data
23:22:14  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:22:14  56  	  norm_table_name => 'svmc_norm',
23:22:14  57  	  data_table_name => '&bldtable',
23:22:14  58  	  xform_view_name => 'svmc_build_prep');
23:22:14  59  END;
23:22:14  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.88
23:22:33 SQL> 
23:22:33 SQL> ---------------------
23:22:33 SQL> -- CREATE A NEW MODEL
23:22:33 SQL> --
23:22:33 SQL> -- Cleanup old model with the same name for repeat runs
23:22:33 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
23:22:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:22:33   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.92
23:22:34 SQL> 
23:22:34 SQL> -- Build a new SVM Model
23:22:34 SQL> BEGIN
23:22:34   2  	DBMS_DATA_MINING.CREATE_MODEL(
23:22:34   3  	  model_name	      => '&model_name',
23:22:34   4  	  mining_function     => dbms_data_mining.classification,
23:22:34   5  	  data_table_name     => 'svmc_build_prep',
23:22:34   6  	  case_id_column_name => '&case_id',
23:22:34   7  	  target_column_name  => '&target',
23:22:34   8  	  settings_table_name => 'svmc_settings');
23:22:34   9  END;
23:22:34  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.71
23:23:01 SQL> 
23:23:01 SQL> -----------------------------------------------------------------------
23:23:01 SQL> --			       APPLY/score THE MODEL
23:23:01 SQL> -----------------------------------------------------------------------
23:23:01 SQL> 
23:23:01 SQL> -- Cleanup old scoring data preparation objects for repeat runs
23:23:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
23:23:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:23:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:23:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
23:23:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:23:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.12
23:23:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
23:23:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:23:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
23:23:01 SQL> -----------------------
23:23:01 SQL> -- PREPARE SCORING DATA
23:23:01 SQL> --
23:23:01 SQL> -- If the data for model creation has been prepared, then the data
23:23:01 SQL> -- to be scored using the model must be prepared in the same manner
23:23:01 SQL> -- in order to obtain meaningful results.
23:23:01 SQL> --
23:23:01 SQL> -- 1. Missing Value treatment for all Predictors and
23:23:01 SQL> -- 2. Normalization
23:23:01 SQL> -- No outlier treatment will be performed during test and apply. The
23:23:01 SQL> -- normalization step is sufficient, since the normalization parameters
23:23:01 SQL> -- already capture the effects of outlier treatment done with build data.
23:23:01 SQL> --
23:23:01 SQL> BEGIN
23:23:01   2  	-- Xform Test data to replace missing values
23:23:01   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:23:01   4  	  miss_table_name => 'svmc_miss_num',
23:23:01   5  	  data_table_name => '&scoretable',
23:23:01   6  	  xform_view_name => 'xformed_apply_miss_num');
23:23:01   7  
23:23:01   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:23:01   9  	  miss_table_name => 'svmc_miss_cat',
23:23:01  10  	  data_table_name => '&scoretable',
23:23:01  11  	  xform_view_name => 'xformed_apply_miss_cat');
23:23:01  12  
23:23:01  13  	-- Normalize the data to be scored
23:23:01  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:23:01  15  	  norm_table_name => 'svmc_norm',
23:23:01  16  	  data_table_name => '&scoretable',
23:23:01  17  	  xform_view_name => 'svmc_apply_prep');
23:23:01  18  END;
23:23:01  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.32
23:23:03 SQL> 
23:23:03 SQL> -- Use same model_name used in score.sql
23:23:03 SQL> DEFINE model_name = 'forex15'
23:23:03 SQL> 
23:23:03 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
23:23:03 SQL> 
23:23:03 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
23:23:03 SQL> 
23:23:03 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
23:23:03   2  SELECT
23:23:03   3  prdate
23:23:03   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
23:23:03   5  ,sysdate
23:23:03   6  ,SUBSTR(prdate,1,3)pair
23:23:03   7  ,SUBSTR(prdate,4,19)ydate
23:23:03   8  FROM svmc_apply_prep
23:23:03   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
23:23:03 SQL> @aud_score1day_gattn.sql	2011-01-06 23:00:00
23:23:03 SQL> --
23:23:03 SQL> -- aud_score1day_gattn.sql
23:23:03 SQL> --
23:23:03 SQL> 
23:23:03 SQL> CREATE OR REPLACE VIEW sme AS
23:23:03   2  SELECT
23:23:03   3  'aud'||m.ydate prdate
23:23:03   4  ,NULL gattn
23:23:03   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:23:03   6  ,eur_g00
23:23:03   7  ,eur_g01
23:23:03   8  ,eur_g02
23:23:03   9  ,eur_g03
23:23:03  10  ,eur_g04
23:23:03  11  ,eur_g05
23:23:03  12  ,eur_g06
23:23:03  13  ,eur_g07
23:23:03  14  ,eur_g08
23:23:03  15  ,eur_g09
23:23:03  16  ,eur_g10
23:23:03  17  ,eur_g11
23:23:03  18  ,eur_g12
23:23:03  19  ,eur_g13
23:23:03  20  ,eur_g14
23:23:03  21  ,eur_g15
23:23:03  22  ,eur_g16
23:23:03  23  ,eur_g17
23:23:03  24  ,eur_g18
23:23:03  25  ,eur_g19
23:23:03  26  ,eur_g20
23:23:03  27  ,eur_g21
23:23:03  28  ,eur_g22
23:23:03  29  ,eur_g23
23:23:03  30  ,eur_g24
23:23:03  31  ,eur_g25
23:23:03  32  ,eur_g26
23:23:03  33  ,eur_g27
23:23:03  34  ,eur_g28
23:23:03  35  ,eur_g29
23:23:03  36  ,eur_g30
23:23:03  37  ,eur_g31
23:23:03  38  ,eur_g32
23:23:03  39  ,eur_g33
23:23:03  40  ,eur_g34
23:23:03  41  ,eur_g35
23:23:03  42  ,eur_g36
23:23:03  43  ,eur_g37
23:23:03  44  ,eur_g38
23:23:03  45  ,eur_g39
23:23:03  46  ,eur_g40
23:23:03  47  ,eur_g41
23:23:03  48  ,aud_g00
23:23:03  49  ,aud_g01
23:23:03  50  ,aud_g02
23:23:03  51  ,aud_g03
23:23:03  52  ,aud_g04
23:23:03  53  ,aud_g05
23:23:03  54  ,aud_g06
23:23:03  55  ,aud_g07
23:23:03  56  ,aud_g08
23:23:03  57  ,aud_g09
23:23:03  58  ,aud_g10
23:23:03  59  ,aud_g11
23:23:03  60  ,aud_g12
23:23:03  61  ,aud_g13
23:23:03  62  ,aud_g14
23:23:03  63  ,aud_g15
23:23:03  64  ,aud_g16
23:23:03  65  ,aud_g17
23:23:03  66  ,aud_g18
23:23:03  67  ,aud_g19
23:23:03  68  ,aud_g20
23:23:03  69  ,aud_g21
23:23:03  70  ,aud_g22
23:23:03  71  ,aud_g23
23:23:03  72  ,aud_g24
23:23:03  73  ,aud_g25
23:23:03  74  ,aud_g26
23:23:03  75  ,aud_g27
23:23:03  76  ,aud_g28
23:23:03  77  ,aud_g29
23:23:03  78  ,aud_g30
23:23:03  79  ,aud_g31
23:23:03  80  ,aud_g32
23:23:03  81  ,aud_g33
23:23:03  82  ,aud_g34
23:23:03  83  ,aud_g35
23:23:03  84  ,aud_g36
23:23:03  85  ,aud_g37
23:23:03  86  ,aud_g38
23:23:03  87  ,aud_g39
23:23:03  88  ,aud_g40
23:23:03  89  ,aud_g41
23:23:03  90  ,gbp_g00
23:23:03  91  ,gbp_g01
23:23:03  92  ,gbp_g02
23:23:03  93  ,gbp_g03
23:23:03  94  ,gbp_g04
23:23:03  95  ,gbp_g05
23:23:03  96  ,gbp_g06
23:23:03  97  ,gbp_g07
23:23:03  98  ,gbp_g08
23:23:03  99  ,gbp_g09
23:23:03 100  ,gbp_g10
23:23:03 101  ,gbp_g11
23:23:03 102  ,gbp_g12
23:23:03 103  ,gbp_g13
23:23:03 104  ,gbp_g14
23:23:03 105  ,gbp_g15
23:23:03 106  ,gbp_g16
23:23:03 107  ,gbp_g17
23:23:03 108  ,gbp_g18
23:23:03 109  ,gbp_g19
23:23:03 110  ,gbp_g20
23:23:03 111  ,gbp_g21
23:23:03 112  ,gbp_g22
23:23:03 113  ,gbp_g23
23:23:03 114  ,gbp_g24
23:23:03 115  ,gbp_g25
23:23:03 116  ,gbp_g26
23:23:03 117  ,gbp_g27
23:23:03 118  ,gbp_g28
23:23:03 119  ,gbp_g29
23:23:03 120  ,gbp_g30
23:23:03 121  ,gbp_g31
23:23:03 122  ,gbp_g32
23:23:03 123  ,gbp_g33
23:23:03 124  ,gbp_g34
23:23:03 125  ,gbp_g35
23:23:03 126  ,gbp_g36
23:23:03 127  ,gbp_g37
23:23:03 128  ,gbp_g38
23:23:03 129  ,gbp_g39
23:23:03 130  ,gbp_g40
23:23:03 131  ,gbp_g41
23:23:03 132  ,jpy_g00
23:23:03 133  ,jpy_g01
23:23:03 134  ,jpy_g02
23:23:03 135  ,jpy_g03
23:23:03 136  ,jpy_g04
23:23:03 137  ,jpy_g05
23:23:03 138  ,jpy_g06
23:23:03 139  ,jpy_g07
23:23:03 140  ,jpy_g08
23:23:03 141  ,jpy_g09
23:23:03 142  ,jpy_g10
23:23:03 143  ,jpy_g11
23:23:03 144  ,jpy_g12
23:23:03 145  ,jpy_g13
23:23:03 146  ,jpy_g14
23:23:03 147  ,jpy_g15
23:23:03 148  ,jpy_g16
23:23:03 149  ,jpy_g17
23:23:03 150  ,jpy_g18
23:23:03 151  ,jpy_g19
23:23:03 152  ,jpy_g20
23:23:03 153  ,jpy_g21
23:23:03 154  ,jpy_g22
23:23:03 155  ,jpy_g23
23:23:03 156  ,jpy_g24
23:23:03 157  ,jpy_g25
23:23:03 158  ,jpy_g26
23:23:03 159  ,jpy_g27
23:23:03 160  ,jpy_g28
23:23:03 161  ,jpy_g29
23:23:03 162  ,jpy_g30
23:23:03 163  ,jpy_g31
23:23:03 164  ,jpy_g32
23:23:03 165  ,jpy_g33
23:23:03 166  ,jpy_g34
23:23:03 167  ,jpy_g35
23:23:03 168  ,jpy_g36
23:23:03 169  ,jpy_g37
23:23:03 170  ,jpy_g38
23:23:03 171  ,jpy_g39
23:23:03 172  ,jpy_g40
23:23:03 173  ,jpy_g41
23:23:03 174  ,cad_g00
23:23:03 175  ,cad_g01
23:23:03 176  ,cad_g02
23:23:03 177  ,cad_g03
23:23:03 178  ,cad_g04
23:23:03 179  ,cad_g05
23:23:03 180  ,cad_g06
23:23:03 181  ,cad_g07
23:23:03 182  ,cad_g08
23:23:03 183  ,cad_g09
23:23:03 184  ,cad_g10
23:23:03 185  ,cad_g11
23:23:03 186  ,cad_g12
23:23:03 187  ,cad_g13
23:23:03 188  ,cad_g14
23:23:03 189  ,cad_g15
23:23:03 190  ,cad_g16
23:23:03 191  ,cad_g17
23:23:03 192  ,cad_g18
23:23:03 193  ,cad_g19
23:23:03 194  ,cad_g20
23:23:03 195  ,cad_g21
23:23:03 196  ,cad_g22
23:23:03 197  ,cad_g23
23:23:03 198  ,cad_g24
23:23:03 199  ,cad_g25
23:23:03 200  ,cad_g26
23:23:03 201  ,cad_g27
23:23:03 202  ,cad_g28
23:23:03 203  ,cad_g29
23:23:03 204  ,cad_g30
23:23:03 205  ,cad_g31
23:23:03 206  ,cad_g32
23:23:03 207  ,cad_g33
23:23:03 208  ,cad_g34
23:23:03 209  ,cad_g35
23:23:03 210  ,cad_g36
23:23:03 211  ,cad_g37
23:23:03 212  ,cad_g38
23:23:03 213  ,cad_g39
23:23:03 214  ,cad_g40
23:23:03 215  ,cad_g41
23:23:03 216  ,chf_g00
23:23:03 217  ,chf_g01
23:23:03 218  ,chf_g02
23:23:03 219  ,chf_g03
23:23:03 220  ,chf_g04
23:23:03 221  ,chf_g05
23:23:03 222  ,chf_g06
23:23:03 223  ,chf_g07
23:23:03 224  ,chf_g08
23:23:03 225  ,chf_g09
23:23:03 226  ,chf_g10
23:23:03 227  ,chf_g11
23:23:03 228  ,chf_g12
23:23:03 229  ,chf_g13
23:23:03 230  ,chf_g14
23:23:03 231  ,chf_g15
23:23:03 232  ,chf_g16
23:23:03 233  ,chf_g17
23:23:03 234  ,chf_g18
23:23:03 235  ,chf_g19
23:23:03 236  ,chf_g20
23:23:03 237  ,chf_g21
23:23:03 238  ,chf_g22
23:23:03 239  ,chf_g23
23:23:03 240  ,chf_g24
23:23:03 241  ,chf_g25
23:23:03 242  ,chf_g26
23:23:03 243  ,chf_g27
23:23:03 244  ,chf_g28
23:23:03 245  ,chf_g29
23:23:03 246  ,chf_g30
23:23:03 247  ,chf_g31
23:23:03 248  ,chf_g32
23:23:03 249  ,chf_g33
23:23:03 250  ,chf_g34
23:23:03 251  ,chf_g35
23:23:03 252  ,chf_g36
23:23:03 253  ,chf_g37
23:23:03 254  ,chf_g38
23:23:03 255  ,chf_g39
23:23:03 256  ,chf_g40
23:23:03 257  ,chf_g41
23:23:03 258  FROM aud_ms6 m
23:23:03 259  WHERE m.ydate = '&1'||' '||'&2'
23:23:03 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'23:00:00'

View created.

Elapsed: 00:00:00.12
23:23:03 SQL> 
23:23:03 SQL> -- rpt
23:23:03 SQL> -- We should see just 1 row:
23:23:03 SQL> 
23:23:03 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.03
23:23:03 SQL> 
23:23:03 SQL> -- Build the model:
23:23:03 SQL> CREATE OR REPLACE VIEW bme AS
23:23:03   2  SELECT
23:23:03   3  'aud'||m.ydate prdate
23:23:03   4  ,gattn
23:23:03   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:23:03   6  ,eur_g00
23:23:03   7  ,eur_g01
23:23:03   8  ,eur_g02
23:23:03   9  ,eur_g03
23:23:03  10  ,eur_g04
23:23:03  11  ,eur_g05
23:23:03  12  ,eur_g06
23:23:03  13  ,eur_g07
23:23:03  14  ,eur_g08
23:23:03  15  ,eur_g09
23:23:03  16  ,eur_g10
23:23:03  17  ,eur_g11
23:23:03  18  ,eur_g12
23:23:03  19  ,eur_g13
23:23:03  20  ,eur_g14
23:23:03  21  ,eur_g15
23:23:03  22  ,eur_g16
23:23:03  23  ,eur_g17
23:23:03  24  ,eur_g18
23:23:03  25  ,eur_g19
23:23:03  26  ,eur_g20
23:23:03  27  ,eur_g21
23:23:03  28  ,eur_g22
23:23:03  29  ,eur_g23
23:23:03  30  ,eur_g24
23:23:03  31  ,eur_g25
23:23:03  32  ,eur_g26
23:23:03  33  ,eur_g27
23:23:03  34  ,eur_g28
23:23:03  35  ,eur_g29
23:23:03  36  ,eur_g30
23:23:03  37  ,eur_g31
23:23:03  38  ,eur_g32
23:23:03  39  ,eur_g33
23:23:03  40  ,eur_g34
23:23:03  41  ,eur_g35
23:23:03  42  ,eur_g36
23:23:03  43  ,eur_g37
23:23:03  44  ,eur_g38
23:23:03  45  ,eur_g39
23:23:03  46  ,eur_g40
23:23:03  47  ,eur_g41
23:23:03  48  ,aud_g00
23:23:03  49  ,aud_g01
23:23:03  50  ,aud_g02
23:23:03  51  ,aud_g03
23:23:03  52  ,aud_g04
23:23:03  53  ,aud_g05
23:23:03  54  ,aud_g06
23:23:03  55  ,aud_g07
23:23:03  56  ,aud_g08
23:23:03  57  ,aud_g09
23:23:03  58  ,aud_g10
23:23:03  59  ,aud_g11
23:23:03  60  ,aud_g12
23:23:03  61  ,aud_g13
23:23:03  62  ,aud_g14
23:23:03  63  ,aud_g15
23:23:03  64  ,aud_g16
23:23:03  65  ,aud_g17
23:23:03  66  ,aud_g18
23:23:03  67  ,aud_g19
23:23:03  68  ,aud_g20
23:23:03  69  ,aud_g21
23:23:03  70  ,aud_g22
23:23:03  71  ,aud_g23
23:23:03  72  ,aud_g24
23:23:03  73  ,aud_g25
23:23:03  74  ,aud_g26
23:23:03  75  ,aud_g27
23:23:03  76  ,aud_g28
23:23:03  77  ,aud_g29
23:23:03  78  ,aud_g30
23:23:03  79  ,aud_g31
23:23:03  80  ,aud_g32
23:23:03  81  ,aud_g33
23:23:03  82  ,aud_g34
23:23:03  83  ,aud_g35
23:23:03  84  ,aud_g36
23:23:03  85  ,aud_g37
23:23:03  86  ,aud_g38
23:23:03  87  ,aud_g39
23:23:03  88  ,aud_g40
23:23:03  89  ,aud_g41
23:23:03  90  ,gbp_g00
23:23:03  91  ,gbp_g01
23:23:03  92  ,gbp_g02
23:23:03  93  ,gbp_g03
23:23:03  94  ,gbp_g04
23:23:03  95  ,gbp_g05
23:23:03  96  ,gbp_g06
23:23:03  97  ,gbp_g07
23:23:03  98  ,gbp_g08
23:23:03  99  ,gbp_g09
23:23:03 100  ,gbp_g10
23:23:03 101  ,gbp_g11
23:23:03 102  ,gbp_g12
23:23:03 103  ,gbp_g13
23:23:03 104  ,gbp_g14
23:23:03 105  ,gbp_g15
23:23:03 106  ,gbp_g16
23:23:03 107  ,gbp_g17
23:23:03 108  ,gbp_g18
23:23:03 109  ,gbp_g19
23:23:03 110  ,gbp_g20
23:23:03 111  ,gbp_g21
23:23:03 112  ,gbp_g22
23:23:03 113  ,gbp_g23
23:23:03 114  ,gbp_g24
23:23:03 115  ,gbp_g25
23:23:03 116  ,gbp_g26
23:23:03 117  ,gbp_g27
23:23:03 118  ,gbp_g28
23:23:03 119  ,gbp_g29
23:23:03 120  ,gbp_g30
23:23:03 121  ,gbp_g31
23:23:03 122  ,gbp_g32
23:23:03 123  ,gbp_g33
23:23:03 124  ,gbp_g34
23:23:03 125  ,gbp_g35
23:23:03 126  ,gbp_g36
23:23:03 127  ,gbp_g37
23:23:03 128  ,gbp_g38
23:23:03 129  ,gbp_g39
23:23:03 130  ,gbp_g40
23:23:03 131  ,gbp_g41
23:23:03 132  ,jpy_g00
23:23:03 133  ,jpy_g01
23:23:03 134  ,jpy_g02
23:23:03 135  ,jpy_g03
23:23:03 136  ,jpy_g04
23:23:03 137  ,jpy_g05
23:23:03 138  ,jpy_g06
23:23:03 139  ,jpy_g07
23:23:03 140  ,jpy_g08
23:23:03 141  ,jpy_g09
23:23:03 142  ,jpy_g10
23:23:03 143  ,jpy_g11
23:23:03 144  ,jpy_g12
23:23:03 145  ,jpy_g13
23:23:03 146  ,jpy_g14
23:23:03 147  ,jpy_g15
23:23:03 148  ,jpy_g16
23:23:03 149  ,jpy_g17
23:23:03 150  ,jpy_g18
23:23:03 151  ,jpy_g19
23:23:03 152  ,jpy_g20
23:23:03 153  ,jpy_g21
23:23:03 154  ,jpy_g22
23:23:03 155  ,jpy_g23
23:23:03 156  ,jpy_g24
23:23:03 157  ,jpy_g25
23:23:03 158  ,jpy_g26
23:23:03 159  ,jpy_g27
23:23:03 160  ,jpy_g28
23:23:03 161  ,jpy_g29
23:23:03 162  ,jpy_g30
23:23:03 163  ,jpy_g31
23:23:03 164  ,jpy_g32
23:23:03 165  ,jpy_g33
23:23:03 166  ,jpy_g34
23:23:03 167  ,jpy_g35
23:23:03 168  ,jpy_g36
23:23:03 169  ,jpy_g37
23:23:03 170  ,jpy_g38
23:23:03 171  ,jpy_g39
23:23:03 172  ,jpy_g40
23:23:03 173  ,jpy_g41
23:23:03 174  ,cad_g00
23:23:03 175  ,cad_g01
23:23:03 176  ,cad_g02
23:23:03 177  ,cad_g03
23:23:03 178  ,cad_g04
23:23:03 179  ,cad_g05
23:23:03 180  ,cad_g06
23:23:03 181  ,cad_g07
23:23:03 182  ,cad_g08
23:23:03 183  ,cad_g09
23:23:03 184  ,cad_g10
23:23:03 185  ,cad_g11
23:23:03 186  ,cad_g12
23:23:03 187  ,cad_g13
23:23:03 188  ,cad_g14
23:23:03 189  ,cad_g15
23:23:03 190  ,cad_g16
23:23:03 191  ,cad_g17
23:23:03 192  ,cad_g18
23:23:03 193  ,cad_g19
23:23:03 194  ,cad_g20
23:23:03 195  ,cad_g21
23:23:03 196  ,cad_g22
23:23:03 197  ,cad_g23
23:23:03 198  ,cad_g24
23:23:03 199  ,cad_g25
23:23:03 200  ,cad_g26
23:23:03 201  ,cad_g27
23:23:03 202  ,cad_g28
23:23:03 203  ,cad_g29
23:23:03 204  ,cad_g30
23:23:03 205  ,cad_g31
23:23:03 206  ,cad_g32
23:23:03 207  ,cad_g33
23:23:03 208  ,cad_g34
23:23:03 209  ,cad_g35
23:23:03 210  ,cad_g36
23:23:03 211  ,cad_g37
23:23:03 212  ,cad_g38
23:23:03 213  ,cad_g39
23:23:03 214  ,cad_g40
23:23:03 215  ,cad_g41
23:23:03 216  ,chf_g00
23:23:03 217  ,chf_g01
23:23:03 218  ,chf_g02
23:23:03 219  ,chf_g03
23:23:03 220  ,chf_g04
23:23:03 221  ,chf_g05
23:23:03 222  ,chf_g06
23:23:03 223  ,chf_g07
23:23:03 224  ,chf_g08
23:23:03 225  ,chf_g09
23:23:03 226  ,chf_g10
23:23:03 227  ,chf_g11
23:23:03 228  ,chf_g12
23:23:03 229  ,chf_g13
23:23:03 230  ,chf_g14
23:23:03 231  ,chf_g15
23:23:03 232  ,chf_g16
23:23:03 233  ,chf_g17
23:23:03 234  ,chf_g18
23:23:03 235  ,chf_g19
23:23:03 236  ,chf_g20
23:23:03 237  ,chf_g21
23:23:03 238  ,chf_g22
23:23:03 239  ,chf_g23
23:23:03 240  ,chf_g24
23:23:03 241  ,chf_g25
23:23:03 242  ,chf_g26
23:23:03 243  ,chf_g27
23:23:03 244  ,chf_g28
23:23:03 245  ,chf_g29
23:23:03 246  ,chf_g30
23:23:03 247  ,chf_g31
23:23:03 248  ,chf_g32
23:23:03 249  ,chf_g33
23:23:03 250  ,chf_g34
23:23:03 251  ,chf_g35
23:23:03 252  ,chf_g36
23:23:03 253  ,chf_g37
23:23:03 254  ,chf_g38
23:23:03 255  ,chf_g39
23:23:03 256  ,chf_g40
23:23:03 257  ,chf_g41
23:23:03 258  FROM aud_ms6 m
23:23:03 259  WHERE gattn IN('nup','up')
23:23:03 260  AND 1+m.ydate < '&1'||' '||'&2'
23:23:03 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'23:00:00'

View created.

Elapsed: 00:00:00.13
23:23:03 SQL> 
23:23:03 SQL> -- rpt
23:23:03 SQL> 
23:23:03 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12870
up	     6638

Elapsed: 00:00:00.04
23:23:03 SQL> 
23:23:03 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 22:55:00

Elapsed: 00:00:00.04
23:23:03 SQL> 
23:23:03 SQL> -- Now build model from bme and score sme
23:23:03 SQL> @score1gattn.sql
23:23:03 SQL> -- score1gattn.sql
23:23:03 SQL> 
23:23:03 SQL> -- Does the 1st SVM score
23:23:03 SQL> 
23:23:03 SQL> -- Fill up svmc_apply_prep
23:23:03 SQL> @score_gattn.sql
23:23:03 SQL> --
23:23:03 SQL> -- score_gattn.sql
23:23:03 SQL> --
23:23:03 SQL> 
23:23:03 SQL> -- usage: score_gattn.sql
23:23:03 SQL> 
23:23:03 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
23:23:03 SQL> 
23:23:03 SQL> DEFINE target	= 'gattn'
23:23:03 SQL> DEFINE model_name = 'forex15'
23:23:03 SQL> DEFINE bldtable	= 'bme'
23:23:03 SQL> DEFINE scoretable = 'sme'
23:23:03 SQL> DEFINE case_id	= 'prdate'
23:23:03 SQL> 
23:23:03 SQL> -- Define a variable to help me exclude some columns from some data mining calls
23:23:03 SQL> DEFINE exclude1 = "'&target','&case_id'"
23:23:03 SQL> 
23:23:03 SQL> -- Builds an SVM model using pl/sql.
23:23:03 SQL> 
23:23:03 SQL> -----------------------------------------------------------------------
23:23:03 SQL> --			    BUILD THE MODEL
23:23:03 SQL> -----------------------------------------------------------------------
23:23:03 SQL> 
23:23:03 SQL> -- Cleanup old build data preparation objects for repeat runs
23:23:03 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
23:23:03 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
23:23:03 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
23:23:03 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
23:23:03 SQL> 
23:23:03 SQL> 
23:23:03 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
23:23:03 SQL> --
23:23:03 SQL> -- DROP	TABLE svmc_settings ;
23:23:03 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
23:23:03 SQL> -- DELETE svmc_settings;
23:23:03 SQL> 
23:23:03 SQL> -- The default classification algorithm is Naive Bayes. So override
23:23:03 SQL> -- this choice to SVM using a settings table.
23:23:03 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
23:23:03 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
23:23:03 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
23:23:03 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
23:23:03 SQL> -- models.
23:23:03 SQL> --
23:23:03 SQL> 
23:23:03 SQL> -- Do this once and then comment it out.
23:23:03 SQL> -- That makes script go faster.
23:23:03 SQL> -- BEGIN
23:23:03 SQL> -- -- Populate settings table
23:23:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:23:03 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
23:23:03 SQL> --
23:23:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:23:03 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
23:23:03 SQL> --
23:23:03 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:23:03 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
23:23:03 SQL> --   COMMIT;
23:23:03 SQL> -- END;
23:23:03 SQL> -- /
23:23:03 SQL> 
23:23:03 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
23:23:03 SQL> 
23:23:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
23:23:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:23:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:23:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
23:23:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:23:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:23:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
23:23:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:23:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
23:23:03 SQL> 
23:23:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
23:23:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:23:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:23:03 SQL> 
23:23:03 SQL> --------------------------------
23:23:03 SQL> -- PREPARE BUILD (TRAINING) DATA
23:23:03 SQL> --
23:23:03 SQL> 
23:23:03 SQL> -- 1. Missing Value treatment for all Predictors and
23:23:03 SQL> -- 2. Outlier Treatment and
23:23:03 SQL> -- 3. Normalization are performed below.
23:23:03 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
23:23:03 SQL> --    normalized here.
23:23:03 SQL> 
23:23:03 SQL> BEGIN
23:23:03   2  	-- Perform missing value treatment for all predictors
23:23:03   3  	-- create miss tables
23:23:03   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
23:23:03   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
23:23:03   6  
23:23:03   7  	-- populate miss tables
23:23:03   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
23:23:03   9  	  miss_table_name => 'svmc_miss_num',
23:23:03  10  	  data_table_name => '&bldtable',
23:23:03  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:23:03  12  
23:23:03  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
23:23:03  14  	  miss_table_name => 'svmc_miss_cat',
23:23:03  15  	  data_table_name => '&bldtable',
23:23:03  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:23:03  17  
23:23:03  18  	-- xform input data to replace missing values
23:23:03  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:23:03  20  	  miss_table_name => 'svmc_miss_num',
23:23:03  21  	  data_table_name => '&bldtable',
23:23:03  22  	  xform_view_name => 'xformed_build_miss_num');
23:23:03  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:23:03  24  	  miss_table_name => 'svmc_miss_cat',
23:23:03  25  	  data_table_name => '&bldtable',
23:23:03  26  	  xform_view_name => 'xformed_build_miss_cat');
23:23:03  27  
23:23:03  28  	-- Perform outlier treatment.
23:23:03  29  	-- create clip table
23:23:03  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
23:23:03  31  
23:23:03  32  	-- populate clip table
23:23:03  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
23:23:03  34  	  clip_table_name => 'svmc_clip',
23:23:03  35  	  data_table_name => '&bldtable',
23:23:03  36  	  tail_frac	  => 0.025,
23:23:03  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:23:03  38  
23:23:03  39  	-- xform input data to winsorized data
23:23:03  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
23:23:03  41  	  clip_table_name => 'svmc_clip',
23:23:03  42  	  data_table_name => '&bldtable',
23:23:03  43  	  xform_view_name => 'svmc_winsor');
23:23:03  44  
23:23:03  45  	-- create normalization table
23:23:03  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
23:23:03  47  
23:23:03  48  	-- populate normalization table based on winsorized data
23:23:03  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
23:23:03  50  	  norm_table_name => 'svmc_norm',
23:23:03  51  	  data_table_name => 'svmc_winsor',
23:23:03  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:23:03  53  
23:23:03  54  	-- normalize the original data
23:23:03  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:23:03  56  	  norm_table_name => 'svmc_norm',
23:23:03  57  	  data_table_name => '&bldtable',
23:23:03  58  	  xform_view_name => 'svmc_build_prep');
23:23:03  59  END;
23:23:03  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.44
23:23:23 SQL> 
23:23:23 SQL> ---------------------
23:23:23 SQL> -- CREATE A NEW MODEL
23:23:23 SQL> --
23:23:23 SQL> -- Cleanup old model with the same name for repeat runs
23:23:23 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
23:23:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:23:23   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.99
23:23:24 SQL> 
23:23:24 SQL> -- Build a new SVM Model
23:23:24 SQL> BEGIN
23:23:24   2  	DBMS_DATA_MINING.CREATE_MODEL(
23:23:24   3  	  model_name	      => '&model_name',
23:23:24   4  	  mining_function     => dbms_data_mining.classification,
23:23:24   5  	  data_table_name     => 'svmc_build_prep',
23:23:24   6  	  case_id_column_name => '&case_id',
23:23:24   7  	  target_column_name  => '&target',
23:23:24   8  	  settings_table_name => 'svmc_settings');
23:23:24   9  END;
23:23:24  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.30
23:23:51 SQL> 
23:23:51 SQL> -----------------------------------------------------------------------
23:23:51 SQL> --			       APPLY/score THE MODEL
23:23:51 SQL> -----------------------------------------------------------------------
23:23:51 SQL> 
23:23:51 SQL> -- Cleanup old scoring data preparation objects for repeat runs
23:23:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
23:23:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:23:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:23:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
23:23:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:23:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:23:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
23:23:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:23:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:23:51 SQL> -----------------------
23:23:51 SQL> -- PREPARE SCORING DATA
23:23:51 SQL> --
23:23:51 SQL> -- If the data for model creation has been prepared, then the data
23:23:51 SQL> -- to be scored using the model must be prepared in the same manner
23:23:51 SQL> -- in order to obtain meaningful results.
23:23:51 SQL> --
23:23:51 SQL> -- 1. Missing Value treatment for all Predictors and
23:23:51 SQL> -- 2. Normalization
23:23:51 SQL> -- No outlier treatment will be performed during test and apply. The
23:23:51 SQL> -- normalization step is sufficient, since the normalization parameters
23:23:51 SQL> -- already capture the effects of outlier treatment done with build data.
23:23:51 SQL> --
23:23:51 SQL> BEGIN
23:23:51   2  	-- Xform Test data to replace missing values
23:23:51   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:23:51   4  	  miss_table_name => 'svmc_miss_num',
23:23:51   5  	  data_table_name => '&scoretable',
23:23:51   6  	  xform_view_name => 'xformed_apply_miss_num');
23:23:51   7  
23:23:51   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:23:51   9  	  miss_table_name => 'svmc_miss_cat',
23:23:51  10  	  data_table_name => '&scoretable',
23:23:51  11  	  xform_view_name => 'xformed_apply_miss_cat');
23:23:51  12  
23:23:51  13  	-- Normalize the data to be scored
23:23:51  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:23:51  15  	  norm_table_name => 'svmc_norm',
23:23:51  16  	  data_table_name => '&scoretable',
23:23:51  17  	  xform_view_name => 'svmc_apply_prep');
23:23:51  18  END;
23:23:51  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.28
23:23:53 SQL> 
23:23:53 SQL> -- Use same model_name used in score_gattn.sql
23:23:53 SQL> DEFINE model_name = 'forex15'
23:23:53 SQL> 
23:23:53 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
23:23:53 SQL> 
23:23:53 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
23:23:53   2  SELECT
23:23:53   3  prdate
23:23:53   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
23:23:53   5  ,sysdate
23:23:53   6  ,SUBSTR(prdate,1,3)pair
23:23:53   7  ,SUBSTR(prdate,4,19)ydate
23:23:53   8  FROM svmc_apply_prep
23:23:53   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
23:23:53 SQL> @aud_score1day_gattn.sql	2011-01-06 23:05:00
23:23:53 SQL> --
23:23:53 SQL> -- aud_score1day_gattn.sql
23:23:53 SQL> --
23:23:53 SQL> 
23:23:53 SQL> CREATE OR REPLACE VIEW sme AS
23:23:53   2  SELECT
23:23:53   3  'aud'||m.ydate prdate
23:23:53   4  ,NULL gattn
23:23:53   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:23:53   6  ,eur_g00
23:23:53   7  ,eur_g01
23:23:53   8  ,eur_g02
23:23:53   9  ,eur_g03
23:23:53  10  ,eur_g04
23:23:53  11  ,eur_g05
23:23:53  12  ,eur_g06
23:23:53  13  ,eur_g07
23:23:53  14  ,eur_g08
23:23:53  15  ,eur_g09
23:23:53  16  ,eur_g10
23:23:53  17  ,eur_g11
23:23:53  18  ,eur_g12
23:23:53  19  ,eur_g13
23:23:53  20  ,eur_g14
23:23:53  21  ,eur_g15
23:23:53  22  ,eur_g16
23:23:53  23  ,eur_g17
23:23:53  24  ,eur_g18
23:23:53  25  ,eur_g19
23:23:53  26  ,eur_g20
23:23:53  27  ,eur_g21
23:23:53  28  ,eur_g22
23:23:53  29  ,eur_g23
23:23:53  30  ,eur_g24
23:23:53  31  ,eur_g25
23:23:53  32  ,eur_g26
23:23:53  33  ,eur_g27
23:23:53  34  ,eur_g28
23:23:53  35  ,eur_g29
23:23:53  36  ,eur_g30
23:23:53  37  ,eur_g31
23:23:53  38  ,eur_g32
23:23:53  39  ,eur_g33
23:23:53  40  ,eur_g34
23:23:53  41  ,eur_g35
23:23:53  42  ,eur_g36
23:23:53  43  ,eur_g37
23:23:53  44  ,eur_g38
23:23:53  45  ,eur_g39
23:23:53  46  ,eur_g40
23:23:53  47  ,eur_g41
23:23:53  48  ,aud_g00
23:23:53  49  ,aud_g01
23:23:53  50  ,aud_g02
23:23:53  51  ,aud_g03
23:23:53  52  ,aud_g04
23:23:53  53  ,aud_g05
23:23:53  54  ,aud_g06
23:23:53  55  ,aud_g07
23:23:53  56  ,aud_g08
23:23:53  57  ,aud_g09
23:23:53  58  ,aud_g10
23:23:53  59  ,aud_g11
23:23:53  60  ,aud_g12
23:23:53  61  ,aud_g13
23:23:53  62  ,aud_g14
23:23:53  63  ,aud_g15
23:23:53  64  ,aud_g16
23:23:53  65  ,aud_g17
23:23:53  66  ,aud_g18
23:23:53  67  ,aud_g19
23:23:53  68  ,aud_g20
23:23:53  69  ,aud_g21
23:23:53  70  ,aud_g22
23:23:53  71  ,aud_g23
23:23:53  72  ,aud_g24
23:23:53  73  ,aud_g25
23:23:53  74  ,aud_g26
23:23:53  75  ,aud_g27
23:23:53  76  ,aud_g28
23:23:53  77  ,aud_g29
23:23:53  78  ,aud_g30
23:23:53  79  ,aud_g31
23:23:53  80  ,aud_g32
23:23:53  81  ,aud_g33
23:23:53  82  ,aud_g34
23:23:53  83  ,aud_g35
23:23:53  84  ,aud_g36
23:23:53  85  ,aud_g37
23:23:53  86  ,aud_g38
23:23:53  87  ,aud_g39
23:23:53  88  ,aud_g40
23:23:53  89  ,aud_g41
23:23:53  90  ,gbp_g00
23:23:53  91  ,gbp_g01
23:23:53  92  ,gbp_g02
23:23:53  93  ,gbp_g03
23:23:53  94  ,gbp_g04
23:23:53  95  ,gbp_g05
23:23:53  96  ,gbp_g06
23:23:53  97  ,gbp_g07
23:23:53  98  ,gbp_g08
23:23:53  99  ,gbp_g09
23:23:53 100  ,gbp_g10
23:23:53 101  ,gbp_g11
23:23:53 102  ,gbp_g12
23:23:53 103  ,gbp_g13
23:23:53 104  ,gbp_g14
23:23:53 105  ,gbp_g15
23:23:53 106  ,gbp_g16
23:23:53 107  ,gbp_g17
23:23:53 108  ,gbp_g18
23:23:53 109  ,gbp_g19
23:23:53 110  ,gbp_g20
23:23:53 111  ,gbp_g21
23:23:53 112  ,gbp_g22
23:23:53 113  ,gbp_g23
23:23:53 114  ,gbp_g24
23:23:53 115  ,gbp_g25
23:23:53 116  ,gbp_g26
23:23:53 117  ,gbp_g27
23:23:53 118  ,gbp_g28
23:23:53 119  ,gbp_g29
23:23:53 120  ,gbp_g30
23:23:53 121  ,gbp_g31
23:23:53 122  ,gbp_g32
23:23:53 123  ,gbp_g33
23:23:53 124  ,gbp_g34
23:23:53 125  ,gbp_g35
23:23:53 126  ,gbp_g36
23:23:53 127  ,gbp_g37
23:23:53 128  ,gbp_g38
23:23:53 129  ,gbp_g39
23:23:53 130  ,gbp_g40
23:23:53 131  ,gbp_g41
23:23:53 132  ,jpy_g00
23:23:53 133  ,jpy_g01
23:23:53 134  ,jpy_g02
23:23:53 135  ,jpy_g03
23:23:53 136  ,jpy_g04
23:23:53 137  ,jpy_g05
23:23:53 138  ,jpy_g06
23:23:53 139  ,jpy_g07
23:23:53 140  ,jpy_g08
23:23:53 141  ,jpy_g09
23:23:53 142  ,jpy_g10
23:23:53 143  ,jpy_g11
23:23:53 144  ,jpy_g12
23:23:53 145  ,jpy_g13
23:23:53 146  ,jpy_g14
23:23:53 147  ,jpy_g15
23:23:53 148  ,jpy_g16
23:23:53 149  ,jpy_g17
23:23:53 150  ,jpy_g18
23:23:53 151  ,jpy_g19
23:23:53 152  ,jpy_g20
23:23:53 153  ,jpy_g21
23:23:53 154  ,jpy_g22
23:23:53 155  ,jpy_g23
23:23:53 156  ,jpy_g24
23:23:53 157  ,jpy_g25
23:23:53 158  ,jpy_g26
23:23:53 159  ,jpy_g27
23:23:53 160  ,jpy_g28
23:23:53 161  ,jpy_g29
23:23:53 162  ,jpy_g30
23:23:53 163  ,jpy_g31
23:23:53 164  ,jpy_g32
23:23:53 165  ,jpy_g33
23:23:53 166  ,jpy_g34
23:23:53 167  ,jpy_g35
23:23:53 168  ,jpy_g36
23:23:53 169  ,jpy_g37
23:23:53 170  ,jpy_g38
23:23:53 171  ,jpy_g39
23:23:53 172  ,jpy_g40
23:23:53 173  ,jpy_g41
23:23:53 174  ,cad_g00
23:23:53 175  ,cad_g01
23:23:53 176  ,cad_g02
23:23:53 177  ,cad_g03
23:23:53 178  ,cad_g04
23:23:53 179  ,cad_g05
23:23:53 180  ,cad_g06
23:23:53 181  ,cad_g07
23:23:53 182  ,cad_g08
23:23:53 183  ,cad_g09
23:23:53 184  ,cad_g10
23:23:53 185  ,cad_g11
23:23:53 186  ,cad_g12
23:23:53 187  ,cad_g13
23:23:53 188  ,cad_g14
23:23:53 189  ,cad_g15
23:23:53 190  ,cad_g16
23:23:53 191  ,cad_g17
23:23:53 192  ,cad_g18
23:23:53 193  ,cad_g19
23:23:53 194  ,cad_g20
23:23:53 195  ,cad_g21
23:23:53 196  ,cad_g22
23:23:53 197  ,cad_g23
23:23:53 198  ,cad_g24
23:23:53 199  ,cad_g25
23:23:53 200  ,cad_g26
23:23:53 201  ,cad_g27
23:23:53 202  ,cad_g28
23:23:53 203  ,cad_g29
23:23:53 204  ,cad_g30
23:23:53 205  ,cad_g31
23:23:53 206  ,cad_g32
23:23:53 207  ,cad_g33
23:23:53 208  ,cad_g34
23:23:53 209  ,cad_g35
23:23:53 210  ,cad_g36
23:23:53 211  ,cad_g37
23:23:53 212  ,cad_g38
23:23:53 213  ,cad_g39
23:23:53 214  ,cad_g40
23:23:53 215  ,cad_g41
23:23:53 216  ,chf_g00
23:23:53 217  ,chf_g01
23:23:53 218  ,chf_g02
23:23:53 219  ,chf_g03
23:23:53 220  ,chf_g04
23:23:53 221  ,chf_g05
23:23:53 222  ,chf_g06
23:23:53 223  ,chf_g07
23:23:53 224  ,chf_g08
23:23:53 225  ,chf_g09
23:23:53 226  ,chf_g10
23:23:53 227  ,chf_g11
23:23:53 228  ,chf_g12
23:23:53 229  ,chf_g13
23:23:53 230  ,chf_g14
23:23:53 231  ,chf_g15
23:23:53 232  ,chf_g16
23:23:53 233  ,chf_g17
23:23:53 234  ,chf_g18
23:23:53 235  ,chf_g19
23:23:53 236  ,chf_g20
23:23:53 237  ,chf_g21
23:23:53 238  ,chf_g22
23:23:53 239  ,chf_g23
23:23:53 240  ,chf_g24
23:23:53 241  ,chf_g25
23:23:53 242  ,chf_g26
23:23:53 243  ,chf_g27
23:23:53 244  ,chf_g28
23:23:53 245  ,chf_g29
23:23:53 246  ,chf_g30
23:23:53 247  ,chf_g31
23:23:53 248  ,chf_g32
23:23:53 249  ,chf_g33
23:23:53 250  ,chf_g34
23:23:53 251  ,chf_g35
23:23:53 252  ,chf_g36
23:23:53 253  ,chf_g37
23:23:53 254  ,chf_g38
23:23:53 255  ,chf_g39
23:23:53 256  ,chf_g40
23:23:53 257  ,chf_g41
23:23:53 258  FROM aud_ms6 m
23:23:53 259  WHERE m.ydate = '&1'||' '||'&2'
23:23:53 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'23:05:00'

View created.

Elapsed: 00:00:00.14
23:23:53 SQL> 
23:23:53 SQL> -- rpt
23:23:53 SQL> -- We should see just 1 row:
23:23:53 SQL> 
23:23:53 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
23:23:53 SQL> 
23:23:53 SQL> -- Build the model:
23:23:53 SQL> CREATE OR REPLACE VIEW bme AS
23:23:53   2  SELECT
23:23:53   3  'aud'||m.ydate prdate
23:23:53   4  ,gattn
23:23:53   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:23:53   6  ,eur_g00
23:23:53   7  ,eur_g01
23:23:53   8  ,eur_g02
23:23:53   9  ,eur_g03
23:23:53  10  ,eur_g04
23:23:53  11  ,eur_g05
23:23:53  12  ,eur_g06
23:23:53  13  ,eur_g07
23:23:53  14  ,eur_g08
23:23:53  15  ,eur_g09
23:23:53  16  ,eur_g10
23:23:53  17  ,eur_g11
23:23:53  18  ,eur_g12
23:23:53  19  ,eur_g13
23:23:53  20  ,eur_g14
23:23:53  21  ,eur_g15
23:23:53  22  ,eur_g16
23:23:53  23  ,eur_g17
23:23:53  24  ,eur_g18
23:23:53  25  ,eur_g19
23:23:53  26  ,eur_g20
23:23:53  27  ,eur_g21
23:23:53  28  ,eur_g22
23:23:53  29  ,eur_g23
23:23:53  30  ,eur_g24
23:23:53  31  ,eur_g25
23:23:53  32  ,eur_g26
23:23:53  33  ,eur_g27
23:23:53  34  ,eur_g28
23:23:53  35  ,eur_g29
23:23:53  36  ,eur_g30
23:23:53  37  ,eur_g31
23:23:53  38  ,eur_g32
23:23:53  39  ,eur_g33
23:23:53  40  ,eur_g34
23:23:53  41  ,eur_g35
23:23:53  42  ,eur_g36
23:23:53  43  ,eur_g37
23:23:53  44  ,eur_g38
23:23:53  45  ,eur_g39
23:23:53  46  ,eur_g40
23:23:53  47  ,eur_g41
23:23:53  48  ,aud_g00
23:23:53  49  ,aud_g01
23:23:53  50  ,aud_g02
23:23:53  51  ,aud_g03
23:23:53  52  ,aud_g04
23:23:53  53  ,aud_g05
23:23:53  54  ,aud_g06
23:23:53  55  ,aud_g07
23:23:53  56  ,aud_g08
23:23:53  57  ,aud_g09
23:23:53  58  ,aud_g10
23:23:53  59  ,aud_g11
23:23:53  60  ,aud_g12
23:23:53  61  ,aud_g13
23:23:53  62  ,aud_g14
23:23:53  63  ,aud_g15
23:23:53  64  ,aud_g16
23:23:53  65  ,aud_g17
23:23:53  66  ,aud_g18
23:23:53  67  ,aud_g19
23:23:53  68  ,aud_g20
23:23:53  69  ,aud_g21
23:23:53  70  ,aud_g22
23:23:53  71  ,aud_g23
23:23:53  72  ,aud_g24
23:23:53  73  ,aud_g25
23:23:53  74  ,aud_g26
23:23:53  75  ,aud_g27
23:23:53  76  ,aud_g28
23:23:53  77  ,aud_g29
23:23:53  78  ,aud_g30
23:23:53  79  ,aud_g31
23:23:53  80  ,aud_g32
23:23:53  81  ,aud_g33
23:23:53  82  ,aud_g34
23:23:53  83  ,aud_g35
23:23:53  84  ,aud_g36
23:23:53  85  ,aud_g37
23:23:53  86  ,aud_g38
23:23:53  87  ,aud_g39
23:23:53  88  ,aud_g40
23:23:53  89  ,aud_g41
23:23:53  90  ,gbp_g00
23:23:53  91  ,gbp_g01
23:23:53  92  ,gbp_g02
23:23:53  93  ,gbp_g03
23:23:53  94  ,gbp_g04
23:23:53  95  ,gbp_g05
23:23:53  96  ,gbp_g06
23:23:53  97  ,gbp_g07
23:23:53  98  ,gbp_g08
23:23:53  99  ,gbp_g09
23:23:53 100  ,gbp_g10
23:23:53 101  ,gbp_g11
23:23:53 102  ,gbp_g12
23:23:53 103  ,gbp_g13
23:23:53 104  ,gbp_g14
23:23:53 105  ,gbp_g15
23:23:53 106  ,gbp_g16
23:23:53 107  ,gbp_g17
23:23:53 108  ,gbp_g18
23:23:53 109  ,gbp_g19
23:23:53 110  ,gbp_g20
23:23:53 111  ,gbp_g21
23:23:53 112  ,gbp_g22
23:23:53 113  ,gbp_g23
23:23:53 114  ,gbp_g24
23:23:53 115  ,gbp_g25
23:23:53 116  ,gbp_g26
23:23:53 117  ,gbp_g27
23:23:53 118  ,gbp_g28
23:23:53 119  ,gbp_g29
23:23:53 120  ,gbp_g30
23:23:53 121  ,gbp_g31
23:23:53 122  ,gbp_g32
23:23:53 123  ,gbp_g33
23:23:53 124  ,gbp_g34
23:23:53 125  ,gbp_g35
23:23:53 126  ,gbp_g36
23:23:53 127  ,gbp_g37
23:23:53 128  ,gbp_g38
23:23:53 129  ,gbp_g39
23:23:53 130  ,gbp_g40
23:23:53 131  ,gbp_g41
23:23:53 132  ,jpy_g00
23:23:53 133  ,jpy_g01
23:23:53 134  ,jpy_g02
23:23:53 135  ,jpy_g03
23:23:53 136  ,jpy_g04
23:23:53 137  ,jpy_g05
23:23:53 138  ,jpy_g06
23:23:53 139  ,jpy_g07
23:23:53 140  ,jpy_g08
23:23:53 141  ,jpy_g09
23:23:53 142  ,jpy_g10
23:23:53 143  ,jpy_g11
23:23:53 144  ,jpy_g12
23:23:53 145  ,jpy_g13
23:23:53 146  ,jpy_g14
23:23:53 147  ,jpy_g15
23:23:53 148  ,jpy_g16
23:23:53 149  ,jpy_g17
23:23:53 150  ,jpy_g18
23:23:53 151  ,jpy_g19
23:23:53 152  ,jpy_g20
23:23:53 153  ,jpy_g21
23:23:53 154  ,jpy_g22
23:23:53 155  ,jpy_g23
23:23:53 156  ,jpy_g24
23:23:53 157  ,jpy_g25
23:23:53 158  ,jpy_g26
23:23:53 159  ,jpy_g27
23:23:53 160  ,jpy_g28
23:23:53 161  ,jpy_g29
23:23:53 162  ,jpy_g30
23:23:53 163  ,jpy_g31
23:23:53 164  ,jpy_g32
23:23:53 165  ,jpy_g33
23:23:53 166  ,jpy_g34
23:23:53 167  ,jpy_g35
23:23:53 168  ,jpy_g36
23:23:53 169  ,jpy_g37
23:23:53 170  ,jpy_g38
23:23:53 171  ,jpy_g39
23:23:53 172  ,jpy_g40
23:23:53 173  ,jpy_g41
23:23:53 174  ,cad_g00
23:23:53 175  ,cad_g01
23:23:53 176  ,cad_g02
23:23:53 177  ,cad_g03
23:23:53 178  ,cad_g04
23:23:53 179  ,cad_g05
23:23:53 180  ,cad_g06
23:23:53 181  ,cad_g07
23:23:53 182  ,cad_g08
23:23:53 183  ,cad_g09
23:23:53 184  ,cad_g10
23:23:53 185  ,cad_g11
23:23:53 186  ,cad_g12
23:23:53 187  ,cad_g13
23:23:53 188  ,cad_g14
23:23:53 189  ,cad_g15
23:23:53 190  ,cad_g16
23:23:53 191  ,cad_g17
23:23:53 192  ,cad_g18
23:23:53 193  ,cad_g19
23:23:53 194  ,cad_g20
23:23:53 195  ,cad_g21
23:23:53 196  ,cad_g22
23:23:53 197  ,cad_g23
23:23:53 198  ,cad_g24
23:23:53 199  ,cad_g25
23:23:53 200  ,cad_g26
23:23:53 201  ,cad_g27
23:23:53 202  ,cad_g28
23:23:53 203  ,cad_g29
23:23:53 204  ,cad_g30
23:23:53 205  ,cad_g31
23:23:53 206  ,cad_g32
23:23:53 207  ,cad_g33
23:23:53 208  ,cad_g34
23:23:53 209  ,cad_g35
23:23:53 210  ,cad_g36
23:23:53 211  ,cad_g37
23:23:53 212  ,cad_g38
23:23:53 213  ,cad_g39
23:23:53 214  ,cad_g40
23:23:53 215  ,cad_g41
23:23:53 216  ,chf_g00
23:23:53 217  ,chf_g01
23:23:53 218  ,chf_g02
23:23:53 219  ,chf_g03
23:23:53 220  ,chf_g04
23:23:53 221  ,chf_g05
23:23:53 222  ,chf_g06
23:23:53 223  ,chf_g07
23:23:53 224  ,chf_g08
23:23:53 225  ,chf_g09
23:23:53 226  ,chf_g10
23:23:53 227  ,chf_g11
23:23:53 228  ,chf_g12
23:23:53 229  ,chf_g13
23:23:53 230  ,chf_g14
23:23:53 231  ,chf_g15
23:23:53 232  ,chf_g16
23:23:53 233  ,chf_g17
23:23:53 234  ,chf_g18
23:23:53 235  ,chf_g19
23:23:53 236  ,chf_g20
23:23:53 237  ,chf_g21
23:23:53 238  ,chf_g22
23:23:53 239  ,chf_g23
23:23:53 240  ,chf_g24
23:23:53 241  ,chf_g25
23:23:53 242  ,chf_g26
23:23:53 243  ,chf_g27
23:23:53 244  ,chf_g28
23:23:53 245  ,chf_g29
23:23:53 246  ,chf_g30
23:23:53 247  ,chf_g31
23:23:53 248  ,chf_g32
23:23:53 249  ,chf_g33
23:23:53 250  ,chf_g34
23:23:53 251  ,chf_g35
23:23:53 252  ,chf_g36
23:23:53 253  ,chf_g37
23:23:53 254  ,chf_g38
23:23:53 255  ,chf_g39
23:23:53 256  ,chf_g40
23:23:53 257  ,chf_g41
23:23:53 258  FROM aud_ms6 m
23:23:53 259  WHERE gattn IN('nup','up')
23:23:53 260  AND 1+m.ydate < '&1'||' '||'&2'
23:23:53 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'23:05:00'

View created.

Elapsed: 00:00:00.12
23:23:53 SQL> 
23:23:53 SQL> -- rpt
23:23:53 SQL> 
23:23:53 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12870
up	     6639

Elapsed: 00:00:00.04
23:23:53 SQL> 
23:23:53 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 23:00:00

Elapsed: 00:00:00.04
23:23:53 SQL> 
23:23:53 SQL> -- Now build model from bme and score sme
23:23:53 SQL> @score1gattn.sql
23:23:53 SQL> -- score1gattn.sql
23:23:53 SQL> 
23:23:53 SQL> -- Does the 1st SVM score
23:23:53 SQL> 
23:23:53 SQL> -- Fill up svmc_apply_prep
23:23:53 SQL> @score_gattn.sql
23:23:53 SQL> --
23:23:53 SQL> -- score_gattn.sql
23:23:53 SQL> --
23:23:53 SQL> 
23:23:53 SQL> -- usage: score_gattn.sql
23:23:53 SQL> 
23:23:53 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
23:23:53 SQL> 
23:23:53 SQL> DEFINE target	= 'gattn'
23:23:53 SQL> DEFINE model_name = 'forex15'
23:23:53 SQL> DEFINE bldtable	= 'bme'
23:23:53 SQL> DEFINE scoretable = 'sme'
23:23:53 SQL> DEFINE case_id	= 'prdate'
23:23:53 SQL> 
23:23:53 SQL> -- Define a variable to help me exclude some columns from some data mining calls
23:23:53 SQL> DEFINE exclude1 = "'&target','&case_id'"
23:23:53 SQL> 
23:23:53 SQL> -- Builds an SVM model using pl/sql.
23:23:53 SQL> 
23:23:53 SQL> -----------------------------------------------------------------------
23:23:53 SQL> --			    BUILD THE MODEL
23:23:53 SQL> -----------------------------------------------------------------------
23:23:53 SQL> 
23:23:53 SQL> -- Cleanup old build data preparation objects for repeat runs
23:23:53 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
23:23:53 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
23:23:53 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
23:23:53 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
23:23:53 SQL> 
23:23:53 SQL> 
23:23:53 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
23:23:53 SQL> --
23:23:53 SQL> -- DROP	TABLE svmc_settings ;
23:23:53 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
23:23:53 SQL> -- DELETE svmc_settings;
23:23:53 SQL> 
23:23:53 SQL> -- The default classification algorithm is Naive Bayes. So override
23:23:53 SQL> -- this choice to SVM using a settings table.
23:23:53 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
23:23:53 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
23:23:53 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
23:23:53 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
23:23:53 SQL> -- models.
23:23:53 SQL> --
23:23:53 SQL> 
23:23:53 SQL> -- Do this once and then comment it out.
23:23:53 SQL> -- That makes script go faster.
23:23:53 SQL> -- BEGIN
23:23:53 SQL> -- -- Populate settings table
23:23:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:23:53 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
23:23:53 SQL> --
23:23:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:23:53 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
23:23:53 SQL> --
23:23:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:23:53 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
23:23:53 SQL> --   COMMIT;
23:23:53 SQL> -- END;
23:23:53 SQL> -- /
23:23:53 SQL> 
23:23:53 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
23:23:53 SQL> 
23:23:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
23:23:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:23:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:23:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
23:23:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:23:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
23:23:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
23:23:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:23:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:23:53 SQL> 
23:23:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
23:23:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:23:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:23:53 SQL> 
23:23:53 SQL> --------------------------------
23:23:53 SQL> -- PREPARE BUILD (TRAINING) DATA
23:23:53 SQL> --
23:23:53 SQL> 
23:23:53 SQL> -- 1. Missing Value treatment for all Predictors and
23:23:53 SQL> -- 2. Outlier Treatment and
23:23:53 SQL> -- 3. Normalization are performed below.
23:23:53 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
23:23:53 SQL> --    normalized here.
23:23:53 SQL> 
23:23:53 SQL> BEGIN
23:23:53   2  	-- Perform missing value treatment for all predictors
23:23:53   3  	-- create miss tables
23:23:53   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
23:23:53   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
23:23:53   6  
23:23:53   7  	-- populate miss tables
23:23:53   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
23:23:53   9  	  miss_table_name => 'svmc_miss_num',
23:23:53  10  	  data_table_name => '&bldtable',
23:23:53  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:23:53  12  
23:23:53  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
23:23:53  14  	  miss_table_name => 'svmc_miss_cat',
23:23:53  15  	  data_table_name => '&bldtable',
23:23:53  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:23:53  17  
23:23:53  18  	-- xform input data to replace missing values
23:23:53  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:23:53  20  	  miss_table_name => 'svmc_miss_num',
23:23:53  21  	  data_table_name => '&bldtable',
23:23:53  22  	  xform_view_name => 'xformed_build_miss_num');
23:23:53  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:23:53  24  	  miss_table_name => 'svmc_miss_cat',
23:23:53  25  	  data_table_name => '&bldtable',
23:23:53  26  	  xform_view_name => 'xformed_build_miss_cat');
23:23:53  27  
23:23:53  28  	-- Perform outlier treatment.
23:23:53  29  	-- create clip table
23:23:53  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
23:23:53  31  
23:23:53  32  	-- populate clip table
23:23:53  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
23:23:53  34  	  clip_table_name => 'svmc_clip',
23:23:53  35  	  data_table_name => '&bldtable',
23:23:53  36  	  tail_frac	  => 0.025,
23:23:53  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:23:53  38  
23:23:53  39  	-- xform input data to winsorized data
23:23:53  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
23:23:53  41  	  clip_table_name => 'svmc_clip',
23:23:53  42  	  data_table_name => '&bldtable',
23:23:53  43  	  xform_view_name => 'svmc_winsor');
23:23:53  44  
23:23:53  45  	-- create normalization table
23:23:53  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
23:23:53  47  
23:23:53  48  	-- populate normalization table based on winsorized data
23:23:53  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
23:23:53  50  	  norm_table_name => 'svmc_norm',
23:23:53  51  	  data_table_name => 'svmc_winsor',
23:23:53  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:23:53  53  
23:23:53  54  	-- normalize the original data
23:23:53  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:23:53  56  	  norm_table_name => 'svmc_norm',
23:23:53  57  	  data_table_name => '&bldtable',
23:23:53  58  	  xform_view_name => 'svmc_build_prep');
23:23:53  59  END;
23:23:53  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.70
23:24:12 SQL> 
23:24:12 SQL> ---------------------
23:24:12 SQL> -- CREATE A NEW MODEL
23:24:12 SQL> --
23:24:12 SQL> -- Cleanup old model with the same name for repeat runs
23:24:12 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
23:24:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:24:12   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.95
23:24:13 SQL> 
23:24:13 SQL> -- Build a new SVM Model
23:24:13 SQL> BEGIN
23:24:13   2  	DBMS_DATA_MINING.CREATE_MODEL(
23:24:13   3  	  model_name	      => '&model_name',
23:24:13   4  	  mining_function     => dbms_data_mining.classification,
23:24:13   5  	  data_table_name     => 'svmc_build_prep',
23:24:13   6  	  case_id_column_name => '&case_id',
23:24:13   7  	  target_column_name  => '&target',
23:24:13   8  	  settings_table_name => 'svmc_settings');
23:24:13   9  END;
23:24:13  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.39
23:24:40 SQL> 
23:24:40 SQL> -----------------------------------------------------------------------
23:24:40 SQL> --			       APPLY/score THE MODEL
23:24:40 SQL> -----------------------------------------------------------------------
23:24:40 SQL> 
23:24:40 SQL> -- Cleanup old scoring data preparation objects for repeat runs
23:24:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
23:24:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:24:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:24:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
23:24:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:24:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:24:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
23:24:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:24:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
23:24:41 SQL> -----------------------
23:24:41 SQL> -- PREPARE SCORING DATA
23:24:41 SQL> --
23:24:41 SQL> -- If the data for model creation has been prepared, then the data
23:24:41 SQL> -- to be scored using the model must be prepared in the same manner
23:24:41 SQL> -- in order to obtain meaningful results.
23:24:41 SQL> --
23:24:41 SQL> -- 1. Missing Value treatment for all Predictors and
23:24:41 SQL> -- 2. Normalization
23:24:41 SQL> -- No outlier treatment will be performed during test and apply. The
23:24:41 SQL> -- normalization step is sufficient, since the normalization parameters
23:24:41 SQL> -- already capture the effects of outlier treatment done with build data.
23:24:41 SQL> --
23:24:41 SQL> BEGIN
23:24:41   2  	-- Xform Test data to replace missing values
23:24:41   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:24:41   4  	  miss_table_name => 'svmc_miss_num',
23:24:41   5  	  data_table_name => '&scoretable',
23:24:41   6  	  xform_view_name => 'xformed_apply_miss_num');
23:24:41   7  
23:24:41   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:24:41   9  	  miss_table_name => 'svmc_miss_cat',
23:24:41  10  	  data_table_name => '&scoretable',
23:24:41  11  	  xform_view_name => 'xformed_apply_miss_cat');
23:24:41  12  
23:24:41  13  	-- Normalize the data to be scored
23:24:41  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:24:41  15  	  norm_table_name => 'svmc_norm',
23:24:41  16  	  data_table_name => '&scoretable',
23:24:41  17  	  xform_view_name => 'svmc_apply_prep');
23:24:41  18  END;
23:24:41  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
23:24:42 SQL> 
23:24:42 SQL> -- Use same model_name used in score_gattn.sql
23:24:42 SQL> DEFINE model_name = 'forex15'
23:24:42 SQL> 
23:24:42 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
23:24:42 SQL> 
23:24:42 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
23:24:42   2  SELECT
23:24:42   3  prdate
23:24:42   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
23:24:42   5  ,sysdate
23:24:42   6  ,SUBSTR(prdate,1,3)pair
23:24:42   7  ,SUBSTR(prdate,4,19)ydate
23:24:42   8  FROM svmc_apply_prep
23:24:42   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
23:24:42 SQL> @aud_score1day_gattn.sql	2011-01-06 23:10:00
23:24:42 SQL> --
23:24:42 SQL> -- aud_score1day_gattn.sql
23:24:42 SQL> --
23:24:42 SQL> 
23:24:42 SQL> CREATE OR REPLACE VIEW sme AS
23:24:42   2  SELECT
23:24:42   3  'aud'||m.ydate prdate
23:24:42   4  ,NULL gattn
23:24:42   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:24:42   6  ,eur_g00
23:24:42   7  ,eur_g01
23:24:42   8  ,eur_g02
23:24:42   9  ,eur_g03
23:24:42  10  ,eur_g04
23:24:42  11  ,eur_g05
23:24:42  12  ,eur_g06
23:24:42  13  ,eur_g07
23:24:42  14  ,eur_g08
23:24:42  15  ,eur_g09
23:24:42  16  ,eur_g10
23:24:42  17  ,eur_g11
23:24:42  18  ,eur_g12
23:24:42  19  ,eur_g13
23:24:42  20  ,eur_g14
23:24:42  21  ,eur_g15
23:24:42  22  ,eur_g16
23:24:42  23  ,eur_g17
23:24:42  24  ,eur_g18
23:24:42  25  ,eur_g19
23:24:42  26  ,eur_g20
23:24:42  27  ,eur_g21
23:24:42  28  ,eur_g22
23:24:42  29  ,eur_g23
23:24:42  30  ,eur_g24
23:24:42  31  ,eur_g25
23:24:42  32  ,eur_g26
23:24:42  33  ,eur_g27
23:24:42  34  ,eur_g28
23:24:42  35  ,eur_g29
23:24:42  36  ,eur_g30
23:24:42  37  ,eur_g31
23:24:42  38  ,eur_g32
23:24:42  39  ,eur_g33
23:24:42  40  ,eur_g34
23:24:42  41  ,eur_g35
23:24:42  42  ,eur_g36
23:24:42  43  ,eur_g37
23:24:42  44  ,eur_g38
23:24:42  45  ,eur_g39
23:24:42  46  ,eur_g40
23:24:42  47  ,eur_g41
23:24:42  48  ,aud_g00
23:24:42  49  ,aud_g01
23:24:42  50  ,aud_g02
23:24:42  51  ,aud_g03
23:24:42  52  ,aud_g04
23:24:42  53  ,aud_g05
23:24:42  54  ,aud_g06
23:24:42  55  ,aud_g07
23:24:42  56  ,aud_g08
23:24:42  57  ,aud_g09
23:24:42  58  ,aud_g10
23:24:42  59  ,aud_g11
23:24:42  60  ,aud_g12
23:24:42  61  ,aud_g13
23:24:42  62  ,aud_g14
23:24:42  63  ,aud_g15
23:24:42  64  ,aud_g16
23:24:42  65  ,aud_g17
23:24:42  66  ,aud_g18
23:24:42  67  ,aud_g19
23:24:42  68  ,aud_g20
23:24:42  69  ,aud_g21
23:24:42  70  ,aud_g22
23:24:42  71  ,aud_g23
23:24:42  72  ,aud_g24
23:24:42  73  ,aud_g25
23:24:42  74  ,aud_g26
23:24:42  75  ,aud_g27
23:24:42  76  ,aud_g28
23:24:42  77  ,aud_g29
23:24:42  78  ,aud_g30
23:24:42  79  ,aud_g31
23:24:42  80  ,aud_g32
23:24:42  81  ,aud_g33
23:24:42  82  ,aud_g34
23:24:42  83  ,aud_g35
23:24:42  84  ,aud_g36
23:24:42  85  ,aud_g37
23:24:42  86  ,aud_g38
23:24:42  87  ,aud_g39
23:24:42  88  ,aud_g40
23:24:42  89  ,aud_g41
23:24:42  90  ,gbp_g00
23:24:42  91  ,gbp_g01
23:24:42  92  ,gbp_g02
23:24:42  93  ,gbp_g03
23:24:42  94  ,gbp_g04
23:24:42  95  ,gbp_g05
23:24:42  96  ,gbp_g06
23:24:42  97  ,gbp_g07
23:24:42  98  ,gbp_g08
23:24:42  99  ,gbp_g09
23:24:42 100  ,gbp_g10
23:24:42 101  ,gbp_g11
23:24:42 102  ,gbp_g12
23:24:42 103  ,gbp_g13
23:24:42 104  ,gbp_g14
23:24:42 105  ,gbp_g15
23:24:42 106  ,gbp_g16
23:24:42 107  ,gbp_g17
23:24:42 108  ,gbp_g18
23:24:42 109  ,gbp_g19
23:24:42 110  ,gbp_g20
23:24:42 111  ,gbp_g21
23:24:42 112  ,gbp_g22
23:24:42 113  ,gbp_g23
23:24:42 114  ,gbp_g24
23:24:42 115  ,gbp_g25
23:24:42 116  ,gbp_g26
23:24:42 117  ,gbp_g27
23:24:42 118  ,gbp_g28
23:24:42 119  ,gbp_g29
23:24:42 120  ,gbp_g30
23:24:42 121  ,gbp_g31
23:24:42 122  ,gbp_g32
23:24:42 123  ,gbp_g33
23:24:42 124  ,gbp_g34
23:24:42 125  ,gbp_g35
23:24:42 126  ,gbp_g36
23:24:42 127  ,gbp_g37
23:24:42 128  ,gbp_g38
23:24:42 129  ,gbp_g39
23:24:42 130  ,gbp_g40
23:24:42 131  ,gbp_g41
23:24:42 132  ,jpy_g00
23:24:42 133  ,jpy_g01
23:24:42 134  ,jpy_g02
23:24:42 135  ,jpy_g03
23:24:42 136  ,jpy_g04
23:24:42 137  ,jpy_g05
23:24:42 138  ,jpy_g06
23:24:42 139  ,jpy_g07
23:24:42 140  ,jpy_g08
23:24:42 141  ,jpy_g09
23:24:42 142  ,jpy_g10
23:24:42 143  ,jpy_g11
23:24:42 144  ,jpy_g12
23:24:42 145  ,jpy_g13
23:24:42 146  ,jpy_g14
23:24:42 147  ,jpy_g15
23:24:42 148  ,jpy_g16
23:24:42 149  ,jpy_g17
23:24:42 150  ,jpy_g18
23:24:42 151  ,jpy_g19
23:24:42 152  ,jpy_g20
23:24:42 153  ,jpy_g21
23:24:42 154  ,jpy_g22
23:24:42 155  ,jpy_g23
23:24:42 156  ,jpy_g24
23:24:42 157  ,jpy_g25
23:24:42 158  ,jpy_g26
23:24:42 159  ,jpy_g27
23:24:42 160  ,jpy_g28
23:24:42 161  ,jpy_g29
23:24:42 162  ,jpy_g30
23:24:42 163  ,jpy_g31
23:24:42 164  ,jpy_g32
23:24:42 165  ,jpy_g33
23:24:42 166  ,jpy_g34
23:24:42 167  ,jpy_g35
23:24:42 168  ,jpy_g36
23:24:42 169  ,jpy_g37
23:24:42 170  ,jpy_g38
23:24:42 171  ,jpy_g39
23:24:42 172  ,jpy_g40
23:24:42 173  ,jpy_g41
23:24:42 174  ,cad_g00
23:24:42 175  ,cad_g01
23:24:42 176  ,cad_g02
23:24:42 177  ,cad_g03
23:24:42 178  ,cad_g04
23:24:42 179  ,cad_g05
23:24:42 180  ,cad_g06
23:24:42 181  ,cad_g07
23:24:42 182  ,cad_g08
23:24:42 183  ,cad_g09
23:24:42 184  ,cad_g10
23:24:42 185  ,cad_g11
23:24:42 186  ,cad_g12
23:24:42 187  ,cad_g13
23:24:42 188  ,cad_g14
23:24:42 189  ,cad_g15
23:24:42 190  ,cad_g16
23:24:42 191  ,cad_g17
23:24:42 192  ,cad_g18
23:24:42 193  ,cad_g19
23:24:42 194  ,cad_g20
23:24:42 195  ,cad_g21
23:24:42 196  ,cad_g22
23:24:42 197  ,cad_g23
23:24:42 198  ,cad_g24
23:24:42 199  ,cad_g25
23:24:42 200  ,cad_g26
23:24:42 201  ,cad_g27
23:24:42 202  ,cad_g28
23:24:42 203  ,cad_g29
23:24:42 204  ,cad_g30
23:24:42 205  ,cad_g31
23:24:42 206  ,cad_g32
23:24:42 207  ,cad_g33
23:24:42 208  ,cad_g34
23:24:42 209  ,cad_g35
23:24:42 210  ,cad_g36
23:24:42 211  ,cad_g37
23:24:42 212  ,cad_g38
23:24:42 213  ,cad_g39
23:24:42 214  ,cad_g40
23:24:42 215  ,cad_g41
23:24:42 216  ,chf_g00
23:24:42 217  ,chf_g01
23:24:42 218  ,chf_g02
23:24:42 219  ,chf_g03
23:24:42 220  ,chf_g04
23:24:42 221  ,chf_g05
23:24:42 222  ,chf_g06
23:24:42 223  ,chf_g07
23:24:42 224  ,chf_g08
23:24:42 225  ,chf_g09
23:24:42 226  ,chf_g10
23:24:42 227  ,chf_g11
23:24:42 228  ,chf_g12
23:24:42 229  ,chf_g13
23:24:42 230  ,chf_g14
23:24:42 231  ,chf_g15
23:24:42 232  ,chf_g16
23:24:42 233  ,chf_g17
23:24:42 234  ,chf_g18
23:24:42 235  ,chf_g19
23:24:42 236  ,chf_g20
23:24:42 237  ,chf_g21
23:24:42 238  ,chf_g22
23:24:42 239  ,chf_g23
23:24:42 240  ,chf_g24
23:24:42 241  ,chf_g25
23:24:42 242  ,chf_g26
23:24:42 243  ,chf_g27
23:24:42 244  ,chf_g28
23:24:42 245  ,chf_g29
23:24:42 246  ,chf_g30
23:24:42 247  ,chf_g31
23:24:42 248  ,chf_g32
23:24:42 249  ,chf_g33
23:24:42 250  ,chf_g34
23:24:42 251  ,chf_g35
23:24:42 252  ,chf_g36
23:24:42 253  ,chf_g37
23:24:42 254  ,chf_g38
23:24:42 255  ,chf_g39
23:24:42 256  ,chf_g40
23:24:42 257  ,chf_g41
23:24:42 258  FROM aud_ms6 m
23:24:42 259  WHERE m.ydate = '&1'||' '||'&2'
23:24:42 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'23:10:00'

View created.

Elapsed: 00:00:00.13
23:24:42 SQL> 
23:24:42 SQL> -- rpt
23:24:42 SQL> -- We should see just 1 row:
23:24:42 SQL> 
23:24:42 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
23:24:42 SQL> 
23:24:42 SQL> -- Build the model:
23:24:42 SQL> CREATE OR REPLACE VIEW bme AS
23:24:42   2  SELECT
23:24:42   3  'aud'||m.ydate prdate
23:24:42   4  ,gattn
23:24:42   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
23:24:42   6  ,eur_g00
23:24:42   7  ,eur_g01
23:24:42   8  ,eur_g02
23:24:42   9  ,eur_g03
23:24:42  10  ,eur_g04
23:24:42  11  ,eur_g05
23:24:42  12  ,eur_g06
23:24:42  13  ,eur_g07
23:24:42  14  ,eur_g08
23:24:42  15  ,eur_g09
23:24:42  16  ,eur_g10
23:24:42  17  ,eur_g11
23:24:42  18  ,eur_g12
23:24:42  19  ,eur_g13
23:24:42  20  ,eur_g14
23:24:42  21  ,eur_g15
23:24:42  22  ,eur_g16
23:24:42  23  ,eur_g17
23:24:42  24  ,eur_g18
23:24:42  25  ,eur_g19
23:24:42  26  ,eur_g20
23:24:42  27  ,eur_g21
23:24:42  28  ,eur_g22
23:24:42  29  ,eur_g23
23:24:42  30  ,eur_g24
23:24:42  31  ,eur_g25
23:24:42  32  ,eur_g26
23:24:42  33  ,eur_g27
23:24:42  34  ,eur_g28
23:24:42  35  ,eur_g29
23:24:42  36  ,eur_g30
23:24:42  37  ,eur_g31
23:24:42  38  ,eur_g32
23:24:42  39  ,eur_g33
23:24:42  40  ,eur_g34
23:24:42  41  ,eur_g35
23:24:42  42  ,eur_g36
23:24:42  43  ,eur_g37
23:24:42  44  ,eur_g38
23:24:42  45  ,eur_g39
23:24:42  46  ,eur_g40
23:24:42  47  ,eur_g41
23:24:42  48  ,aud_g00
23:24:42  49  ,aud_g01
23:24:42  50  ,aud_g02
23:24:42  51  ,aud_g03
23:24:42  52  ,aud_g04
23:24:42  53  ,aud_g05
23:24:42  54  ,aud_g06
23:24:42  55  ,aud_g07
23:24:42  56  ,aud_g08
23:24:42  57  ,aud_g09
23:24:42  58  ,aud_g10
23:24:42  59  ,aud_g11
23:24:42  60  ,aud_g12
23:24:42  61  ,aud_g13
23:24:42  62  ,aud_g14
23:24:42  63  ,aud_g15
23:24:42  64  ,aud_g16
23:24:42  65  ,aud_g17
23:24:42  66  ,aud_g18
23:24:42  67  ,aud_g19
23:24:42  68  ,aud_g20
23:24:42  69  ,aud_g21
23:24:42  70  ,aud_g22
23:24:42  71  ,aud_g23
23:24:42  72  ,aud_g24
23:24:42  73  ,aud_g25
23:24:42  74  ,aud_g26
23:24:42  75  ,aud_g27
23:24:42  76  ,aud_g28
23:24:42  77  ,aud_g29
23:24:42  78  ,aud_g30
23:24:42  79  ,aud_g31
23:24:42  80  ,aud_g32
23:24:42  81  ,aud_g33
23:24:42  82  ,aud_g34
23:24:42  83  ,aud_g35
23:24:42  84  ,aud_g36
23:24:42  85  ,aud_g37
23:24:42  86  ,aud_g38
23:24:42  87  ,aud_g39
23:24:42  88  ,aud_g40
23:24:42  89  ,aud_g41
23:24:42  90  ,gbp_g00
23:24:42  91  ,gbp_g01
23:24:42  92  ,gbp_g02
23:24:42  93  ,gbp_g03
23:24:42  94  ,gbp_g04
23:24:42  95  ,gbp_g05
23:24:42  96  ,gbp_g06
23:24:42  97  ,gbp_g07
23:24:42  98  ,gbp_g08
23:24:42  99  ,gbp_g09
23:24:42 100  ,gbp_g10
23:24:42 101  ,gbp_g11
23:24:42 102  ,gbp_g12
23:24:42 103  ,gbp_g13
23:24:42 104  ,gbp_g14
23:24:42 105  ,gbp_g15
23:24:42 106  ,gbp_g16
23:24:42 107  ,gbp_g17
23:24:42 108  ,gbp_g18
23:24:42 109  ,gbp_g19
23:24:42 110  ,gbp_g20
23:24:42 111  ,gbp_g21
23:24:42 112  ,gbp_g22
23:24:42 113  ,gbp_g23
23:24:42 114  ,gbp_g24
23:24:42 115  ,gbp_g25
23:24:42 116  ,gbp_g26
23:24:42 117  ,gbp_g27
23:24:42 118  ,gbp_g28
23:24:42 119  ,gbp_g29
23:24:42 120  ,gbp_g30
23:24:42 121  ,gbp_g31
23:24:42 122  ,gbp_g32
23:24:42 123  ,gbp_g33
23:24:42 124  ,gbp_g34
23:24:42 125  ,gbp_g35
23:24:42 126  ,gbp_g36
23:24:42 127  ,gbp_g37
23:24:42 128  ,gbp_g38
23:24:42 129  ,gbp_g39
23:24:42 130  ,gbp_g40
23:24:42 131  ,gbp_g41
23:24:42 132  ,jpy_g00
23:24:42 133  ,jpy_g01
23:24:42 134  ,jpy_g02
23:24:42 135  ,jpy_g03
23:24:42 136  ,jpy_g04
23:24:42 137  ,jpy_g05
23:24:42 138  ,jpy_g06
23:24:42 139  ,jpy_g07
23:24:42 140  ,jpy_g08
23:24:42 141  ,jpy_g09
23:24:42 142  ,jpy_g10
23:24:42 143  ,jpy_g11
23:24:42 144  ,jpy_g12
23:24:42 145  ,jpy_g13
23:24:42 146  ,jpy_g14
23:24:42 147  ,jpy_g15
23:24:42 148  ,jpy_g16
23:24:42 149  ,jpy_g17
23:24:42 150  ,jpy_g18
23:24:42 151  ,jpy_g19
23:24:42 152  ,jpy_g20
23:24:42 153  ,jpy_g21
23:24:42 154  ,jpy_g22
23:24:42 155  ,jpy_g23
23:24:42 156  ,jpy_g24
23:24:42 157  ,jpy_g25
23:24:42 158  ,jpy_g26
23:24:42 159  ,jpy_g27
23:24:42 160  ,jpy_g28
23:24:42 161  ,jpy_g29
23:24:42 162  ,jpy_g30
23:24:42 163  ,jpy_g31
23:24:42 164  ,jpy_g32
23:24:42 165  ,jpy_g33
23:24:42 166  ,jpy_g34
23:24:42 167  ,jpy_g35
23:24:42 168  ,jpy_g36
23:24:42 169  ,jpy_g37
23:24:42 170  ,jpy_g38
23:24:42 171  ,jpy_g39
23:24:42 172  ,jpy_g40
23:24:42 173  ,jpy_g41
23:24:42 174  ,cad_g00
23:24:42 175  ,cad_g01
23:24:42 176  ,cad_g02
23:24:42 177  ,cad_g03
23:24:42 178  ,cad_g04
23:24:42 179  ,cad_g05
23:24:42 180  ,cad_g06
23:24:42 181  ,cad_g07
23:24:42 182  ,cad_g08
23:24:42 183  ,cad_g09
23:24:42 184  ,cad_g10
23:24:42 185  ,cad_g11
23:24:42 186  ,cad_g12
23:24:42 187  ,cad_g13
23:24:42 188  ,cad_g14
23:24:42 189  ,cad_g15
23:24:42 190  ,cad_g16
23:24:42 191  ,cad_g17
23:24:42 192  ,cad_g18
23:24:42 193  ,cad_g19
23:24:42 194  ,cad_g20
23:24:42 195  ,cad_g21
23:24:42 196  ,cad_g22
23:24:42 197  ,cad_g23
23:24:42 198  ,cad_g24
23:24:42 199  ,cad_g25
23:24:42 200  ,cad_g26
23:24:42 201  ,cad_g27
23:24:42 202  ,cad_g28
23:24:42 203  ,cad_g29
23:24:42 204  ,cad_g30
23:24:42 205  ,cad_g31
23:24:42 206  ,cad_g32
23:24:42 207  ,cad_g33
23:24:42 208  ,cad_g34
23:24:42 209  ,cad_g35
23:24:42 210  ,cad_g36
23:24:42 211  ,cad_g37
23:24:42 212  ,cad_g38
23:24:42 213  ,cad_g39
23:24:42 214  ,cad_g40
23:24:42 215  ,cad_g41
23:24:42 216  ,chf_g00
23:24:42 217  ,chf_g01
23:24:42 218  ,chf_g02
23:24:42 219  ,chf_g03
23:24:42 220  ,chf_g04
23:24:42 221  ,chf_g05
23:24:42 222  ,chf_g06
23:24:42 223  ,chf_g07
23:24:42 224  ,chf_g08
23:24:42 225  ,chf_g09
23:24:42 226  ,chf_g10
23:24:42 227  ,chf_g11
23:24:42 228  ,chf_g12
23:24:42 229  ,chf_g13
23:24:42 230  ,chf_g14
23:24:42 231  ,chf_g15
23:24:42 232  ,chf_g16
23:24:42 233  ,chf_g17
23:24:42 234  ,chf_g18
23:24:42 235  ,chf_g19
23:24:42 236  ,chf_g20
23:24:42 237  ,chf_g21
23:24:42 238  ,chf_g22
23:24:42 239  ,chf_g23
23:24:42 240  ,chf_g24
23:24:42 241  ,chf_g25
23:24:42 242  ,chf_g26
23:24:42 243  ,chf_g27
23:24:42 244  ,chf_g28
23:24:42 245  ,chf_g29
23:24:42 246  ,chf_g30
23:24:42 247  ,chf_g31
23:24:42 248  ,chf_g32
23:24:42 249  ,chf_g33
23:24:42 250  ,chf_g34
23:24:42 251  ,chf_g35
23:24:42 252  ,chf_g36
23:24:42 253  ,chf_g37
23:24:42 254  ,chf_g38
23:24:42 255  ,chf_g39
23:24:42 256  ,chf_g40
23:24:42 257  ,chf_g41
23:24:42 258  FROM aud_ms6 m
23:24:42 259  WHERE gattn IN('nup','up')
23:24:42 260  AND 1+m.ydate < '&1'||' '||'&2'
23:24:42 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'23:10:00'

View created.

Elapsed: 00:00:00.14
23:24:42 SQL> 
23:24:42 SQL> -- rpt
23:24:42 SQL> 
23:24:42 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12870
up	     6640

Elapsed: 00:00:00.05
23:24:42 SQL> 
23:24:42 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 23:05:00

Elapsed: 00:00:00.04
23:24:42 SQL> 
23:24:42 SQL> -- Now build model from bme and score sme
23:24:42 SQL> @score1gattn.sql
23:24:42 SQL> -- score1gattn.sql
23:24:42 SQL> 
23:24:42 SQL> -- Does the 1st SVM score
23:24:42 SQL> 
23:24:42 SQL> -- Fill up svmc_apply_prep
23:24:42 SQL> @score_gattn.sql
23:24:42 SQL> --
23:24:42 SQL> -- score_gattn.sql
23:24:42 SQL> --
23:24:42 SQL> 
23:24:42 SQL> -- usage: score_gattn.sql
23:24:42 SQL> 
23:24:42 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
23:24:42 SQL> 
23:24:42 SQL> DEFINE target	= 'gattn'
23:24:42 SQL> DEFINE model_name = 'forex15'
23:24:42 SQL> DEFINE bldtable	= 'bme'
23:24:42 SQL> DEFINE scoretable = 'sme'
23:24:42 SQL> DEFINE case_id	= 'prdate'
23:24:42 SQL> 
23:24:42 SQL> -- Define a variable to help me exclude some columns from some data mining calls
23:24:42 SQL> DEFINE exclude1 = "'&target','&case_id'"
23:24:42 SQL> 
23:24:42 SQL> -- Builds an SVM model using pl/sql.
23:24:42 SQL> 
23:24:42 SQL> -----------------------------------------------------------------------
23:24:42 SQL> --			    BUILD THE MODEL
23:24:42 SQL> -----------------------------------------------------------------------
23:24:42 SQL> 
23:24:42 SQL> -- Cleanup old build data preparation objects for repeat runs
23:24:42 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
23:24:42 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
23:24:42 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
23:24:42 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
23:24:42 SQL> 
23:24:42 SQL> 
23:24:42 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
23:24:42 SQL> --
23:24:42 SQL> -- DROP	TABLE svmc_settings ;
23:24:42 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
23:24:42 SQL> -- DELETE svmc_settings;
23:24:42 SQL> 
23:24:42 SQL> -- The default classification algorithm is Naive Bayes. So override
23:24:42 SQL> -- this choice to SVM using a settings table.
23:24:42 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
23:24:42 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
23:24:42 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
23:24:42 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
23:24:42 SQL> -- models.
23:24:42 SQL> --
23:24:42 SQL> 
23:24:42 SQL> -- Do this once and then comment it out.
23:24:42 SQL> -- That makes script go faster.
23:24:42 SQL> -- BEGIN
23:24:42 SQL> -- -- Populate settings table
23:24:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:24:42 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
23:24:42 SQL> --
23:24:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:24:42 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
23:24:42 SQL> --
23:24:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
23:24:42 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
23:24:42 SQL> --   COMMIT;
23:24:42 SQL> -- END;
23:24:42 SQL> -- /
23:24:42 SQL> 
23:24:42 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
23:24:42 SQL> 
23:24:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
23:24:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:24:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
23:24:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
23:24:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:24:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:24:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
23:24:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:24:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:24:43 SQL> 
23:24:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
23:24:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:24:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:24:43 SQL> 
23:24:43 SQL> --------------------------------
23:24:43 SQL> -- PREPARE BUILD (TRAINING) DATA
23:24:43 SQL> --
23:24:43 SQL> 
23:24:43 SQL> -- 1. Missing Value treatment for all Predictors and
23:24:43 SQL> -- 2. Outlier Treatment and
23:24:43 SQL> -- 3. Normalization are performed below.
23:24:43 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
23:24:43 SQL> --    normalized here.
23:24:43 SQL> 
23:24:43 SQL> BEGIN
23:24:43   2  	-- Perform missing value treatment for all predictors
23:24:43   3  	-- create miss tables
23:24:43   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
23:24:43   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
23:24:43   6  
23:24:43   7  	-- populate miss tables
23:24:43   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
23:24:43   9  	  miss_table_name => 'svmc_miss_num',
23:24:43  10  	  data_table_name => '&bldtable',
23:24:43  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:24:43  12  
23:24:43  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
23:24:43  14  	  miss_table_name => 'svmc_miss_cat',
23:24:43  15  	  data_table_name => '&bldtable',
23:24:43  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:24:43  17  
23:24:43  18  	-- xform input data to replace missing values
23:24:43  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:24:43  20  	  miss_table_name => 'svmc_miss_num',
23:24:43  21  	  data_table_name => '&bldtable',
23:24:43  22  	  xform_view_name => 'xformed_build_miss_num');
23:24:43  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:24:43  24  	  miss_table_name => 'svmc_miss_cat',
23:24:43  25  	  data_table_name => '&bldtable',
23:24:43  26  	  xform_view_name => 'xformed_build_miss_cat');
23:24:43  27  
23:24:43  28  	-- Perform outlier treatment.
23:24:43  29  	-- create clip table
23:24:43  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
23:24:43  31  
23:24:43  32  	-- populate clip table
23:24:43  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
23:24:43  34  	  clip_table_name => 'svmc_clip',
23:24:43  35  	  data_table_name => '&bldtable',
23:24:43  36  	  tail_frac	  => 0.025,
23:24:43  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:24:43  38  
23:24:43  39  	-- xform input data to winsorized data
23:24:43  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
23:24:43  41  	  clip_table_name => 'svmc_clip',
23:24:43  42  	  data_table_name => '&bldtable',
23:24:43  43  	  xform_view_name => 'svmc_winsor');
23:24:43  44  
23:24:43  45  	-- create normalization table
23:24:43  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
23:24:43  47  
23:24:43  48  	-- populate normalization table based on winsorized data
23:24:43  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
23:24:43  50  	  norm_table_name => 'svmc_norm',
23:24:43  51  	  data_table_name => 'svmc_winsor',
23:24:43  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
23:24:43  53  
23:24:43  54  	-- normalize the original data
23:24:43  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:24:43  56  	  norm_table_name => 'svmc_norm',
23:24:43  57  	  data_table_name => '&bldtable',
23:24:43  58  	  xform_view_name => 'svmc_build_prep');
23:24:43  59  END;
23:24:43  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.92
23:25:02 SQL> 
23:25:02 SQL> ---------------------
23:25:02 SQL> -- CREATE A NEW MODEL
23:25:02 SQL> --
23:25:02 SQL> -- Cleanup old model with the same name for repeat runs
23:25:02 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
23:25:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:25:02   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.13
23:25:03 SQL> 
23:25:03 SQL> -- Build a new SVM Model
23:25:03 SQL> BEGIN
23:25:03   2  	DBMS_DATA_MINING.CREATE_MODEL(
23:25:03   3  	  model_name	      => '&model_name',
23:25:03   4  	  mining_function     => dbms_data_mining.classification,
23:25:03   5  	  data_table_name     => 'svmc_build_prep',
23:25:03   6  	  case_id_column_name => '&case_id',
23:25:03   7  	  target_column_name  => '&target',
23:25:03   8  	  settings_table_name => 'svmc_settings');
23:25:03   9  END;
23:25:03  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:30.10
23:25:33 SQL> 
23:25:33 SQL> -----------------------------------------------------------------------
23:25:33 SQL> --			       APPLY/score THE MODEL
23:25:33 SQL> -----------------------------------------------------------------------
23:25:33 SQL> 
23:25:33 SQL> -- Cleanup old scoring data preparation objects for repeat runs
23:25:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
23:25:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:25:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
23:25:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
23:25:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:25:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
23:25:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
23:25:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
23:25:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
23:25:33 SQL> -----------------------
23:25:33 SQL> -- PREPARE SCORING DATA
23:25:33 SQL> --
23:25:33 SQL> -- If the data for model creation has been prepared, then the data
23:25:33 SQL> -- to be scored using the model must be prepared in the same manner
23:25:33 SQL> -- in order to obtain meaningful results.
23:25:33 SQL> --
23:25:33 SQL> -- 1. Missing Value treatment for all Predictors and
23:25:33 SQL> -- 2. Normalization
23:25:33 SQL> -- No outlier treatment will be performed during test and apply. The
23:25:33 SQL> -- normalization step is sufficient, since the normalization parameters
23:25:33 SQL> -- already capture the effects of outlier treatment done with build data.
23:25:33 SQL> --
23:25:33 SQL> BEGIN
23:25:33   2  	-- Xform Test data to replace missing values
23:25:33   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
23:25:33   4  	  miss_table_name => 'svmc_miss_num',
23:25:33   5  	  data_table_name => '&scoretable',
23:25:33   6  	  xform_view_name => 'xformed_apply_miss_num');
23:25:33   7  
23:25:33   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
23:25:33   9  	  miss_table_name => 'svmc_miss_cat',
23:25:33  10  	  data_table_name => '&scoretable',
23:25:33  11  	  xform_view_name => 'xformed_apply_miss_cat');
23:25:33  12  
23:25:33  13  	-- Normalize the data to be scored
23:25:33  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
23:25:33  15  	  norm_table_name => 'svmc_norm',
23:25:33  16  	  data_table_name => '&scoretable',
23:25:33  17  	  xform_view_name => 'svmc_apply_prep');
23:25:33  18  END;
23:25:33  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
23:25:34 SQL> 
23:25:34 SQL> -- Use same model_name used in score_gattn.sql
23:25:34 SQL> DEFINE model_name = 'forex15'
23:25:34 SQL> 
23:25:34 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
23:25:34 SQL> 
23:25:34 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
23:25:34   2  SELECT
23:25:34   3  prdate
23:25:34   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
23:25:34   5  ,sysdate
23:25:34   6  ,SUBSTR(prdate,1,3)pair
23:25:34   7  ,SUBSTR(prdate,4,19)ydate
23:25:34   8  FROM svmc_apply_prep
23:25:34   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
23:25:34 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
