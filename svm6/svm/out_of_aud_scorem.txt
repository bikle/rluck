
SQL*Plus: Release 11.2.0.1.0 Production on Mon Jan 3 22:18:44 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

22:18:44 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
22:18:44 SQL> 22:18:44 SQL> @aud_score1day.sql  2011-01-03 21:55:00
22:18:44 SQL> --
22:18:44 SQL> -- aud_score1day.sql
22:18:44 SQL> --
22:18:44 SQL> 
22:18:44 SQL> CREATE OR REPLACE VIEW sme AS
22:18:44   2  SELECT
22:18:44   3  'aud'||m.ydate prdate
22:18:44   4  ,NULL gatt
22:18:44   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:18:44   6  ,eur_g00
22:18:44   7  ,eur_g01
22:18:44   8  ,eur_g02
22:18:44   9  ,eur_g03
22:18:44  10  ,eur_g04
22:18:44  11  ,eur_g05
22:18:44  12  ,eur_g06
22:18:44  13  ,eur_g07
22:18:44  14  ,eur_g08
22:18:44  15  ,eur_g09
22:18:44  16  ,eur_g10
22:18:44  17  ,eur_g11
22:18:44  18  ,eur_g12
22:18:44  19  ,eur_g13
22:18:44  20  ,eur_g14
22:18:44  21  ,eur_g15
22:18:44  22  ,eur_g16
22:18:44  23  ,eur_g17
22:18:44  24  ,eur_g18
22:18:44  25  ,eur_g19
22:18:44  26  ,eur_g20
22:18:44  27  ,eur_g21
22:18:44  28  ,eur_g22
22:18:44  29  ,eur_g23
22:18:44  30  ,eur_g24
22:18:44  31  ,eur_g25
22:18:44  32  ,eur_g26
22:18:44  33  ,eur_g27
22:18:44  34  ,eur_g28
22:18:44  35  ,eur_g29
22:18:44  36  ,eur_g30
22:18:44  37  ,eur_g31
22:18:44  38  ,eur_g32
22:18:44  39  ,eur_g33
22:18:44  40  ,eur_g34
22:18:44  41  ,eur_g35
22:18:44  42  ,eur_g36
22:18:44  43  ,eur_g37
22:18:44  44  ,eur_g38
22:18:44  45  ,eur_g39
22:18:44  46  ,eur_g40
22:18:44  47  ,eur_g41
22:18:44  48  ,aud_g00
22:18:44  49  ,aud_g01
22:18:44  50  ,aud_g02
22:18:44  51  ,aud_g03
22:18:44  52  ,aud_g04
22:18:44  53  ,aud_g05
22:18:44  54  ,aud_g06
22:18:44  55  ,aud_g07
22:18:44  56  ,aud_g08
22:18:44  57  ,aud_g09
22:18:44  58  ,aud_g10
22:18:44  59  ,aud_g11
22:18:44  60  ,aud_g12
22:18:44  61  ,aud_g13
22:18:44  62  ,aud_g14
22:18:44  63  ,aud_g15
22:18:44  64  ,aud_g16
22:18:44  65  ,aud_g17
22:18:44  66  ,aud_g18
22:18:44  67  ,aud_g19
22:18:44  68  ,aud_g20
22:18:44  69  ,aud_g21
22:18:44  70  ,aud_g22
22:18:44  71  ,aud_g23
22:18:44  72  ,aud_g24
22:18:44  73  ,aud_g25
22:18:44  74  ,aud_g26
22:18:44  75  ,aud_g27
22:18:44  76  ,aud_g28
22:18:44  77  ,aud_g29
22:18:44  78  ,aud_g30
22:18:44  79  ,aud_g31
22:18:44  80  ,aud_g32
22:18:44  81  ,aud_g33
22:18:44  82  ,aud_g34
22:18:44  83  ,aud_g35
22:18:44  84  ,aud_g36
22:18:44  85  ,aud_g37
22:18:44  86  ,aud_g38
22:18:44  87  ,aud_g39
22:18:44  88  ,aud_g40
22:18:44  89  ,aud_g41
22:18:44  90  ,gbp_g00
22:18:44  91  ,gbp_g01
22:18:44  92  ,gbp_g02
22:18:44  93  ,gbp_g03
22:18:44  94  ,gbp_g04
22:18:44  95  ,gbp_g05
22:18:44  96  ,gbp_g06
22:18:44  97  ,gbp_g07
22:18:44  98  ,gbp_g08
22:18:44  99  ,gbp_g09
22:18:44 100  ,gbp_g10
22:18:44 101  ,gbp_g11
22:18:44 102  ,gbp_g12
22:18:44 103  ,gbp_g13
22:18:44 104  ,gbp_g14
22:18:44 105  ,gbp_g15
22:18:44 106  ,gbp_g16
22:18:44 107  ,gbp_g17
22:18:44 108  ,gbp_g18
22:18:44 109  ,gbp_g19
22:18:44 110  ,gbp_g20
22:18:44 111  ,gbp_g21
22:18:44 112  ,gbp_g22
22:18:44 113  ,gbp_g23
22:18:44 114  ,gbp_g24
22:18:44 115  ,gbp_g25
22:18:44 116  ,gbp_g26
22:18:44 117  ,gbp_g27
22:18:44 118  ,gbp_g28
22:18:44 119  ,gbp_g29
22:18:44 120  ,gbp_g30
22:18:44 121  ,gbp_g31
22:18:44 122  ,gbp_g32
22:18:44 123  ,gbp_g33
22:18:44 124  ,gbp_g34
22:18:44 125  ,gbp_g35
22:18:44 126  ,gbp_g36
22:18:44 127  ,gbp_g37
22:18:44 128  ,gbp_g38
22:18:44 129  ,gbp_g39
22:18:44 130  ,gbp_g40
22:18:44 131  ,gbp_g41
22:18:44 132  ,jpy_g00
22:18:44 133  ,jpy_g01
22:18:44 134  ,jpy_g02
22:18:44 135  ,jpy_g03
22:18:44 136  ,jpy_g04
22:18:44 137  ,jpy_g05
22:18:44 138  ,jpy_g06
22:18:44 139  ,jpy_g07
22:18:44 140  ,jpy_g08
22:18:44 141  ,jpy_g09
22:18:44 142  ,jpy_g10
22:18:44 143  ,jpy_g11
22:18:44 144  ,jpy_g12
22:18:44 145  ,jpy_g13
22:18:44 146  ,jpy_g14
22:18:44 147  ,jpy_g15
22:18:44 148  ,jpy_g16
22:18:44 149  ,jpy_g17
22:18:44 150  ,jpy_g18
22:18:44 151  ,jpy_g19
22:18:44 152  ,jpy_g20
22:18:44 153  ,jpy_g21
22:18:44 154  ,jpy_g22
22:18:44 155  ,jpy_g23
22:18:44 156  ,jpy_g24
22:18:44 157  ,jpy_g25
22:18:44 158  ,jpy_g26
22:18:44 159  ,jpy_g27
22:18:44 160  ,jpy_g28
22:18:44 161  ,jpy_g29
22:18:44 162  ,jpy_g30
22:18:44 163  ,jpy_g31
22:18:44 164  ,jpy_g32
22:18:44 165  ,jpy_g33
22:18:44 166  ,jpy_g34
22:18:44 167  ,jpy_g35
22:18:44 168  ,jpy_g36
22:18:44 169  ,jpy_g37
22:18:44 170  ,jpy_g38
22:18:44 171  ,jpy_g39
22:18:44 172  ,jpy_g40
22:18:44 173  ,jpy_g41
22:18:44 174  ,cad_g00
22:18:44 175  ,cad_g01
22:18:44 176  ,cad_g02
22:18:44 177  ,cad_g03
22:18:44 178  ,cad_g04
22:18:44 179  ,cad_g05
22:18:44 180  ,cad_g06
22:18:44 181  ,cad_g07
22:18:44 182  ,cad_g08
22:18:44 183  ,cad_g09
22:18:44 184  ,cad_g10
22:18:44 185  ,cad_g11
22:18:44 186  ,cad_g12
22:18:44 187  ,cad_g13
22:18:44 188  ,cad_g14
22:18:44 189  ,cad_g15
22:18:44 190  ,cad_g16
22:18:44 191  ,cad_g17
22:18:44 192  ,cad_g18
22:18:44 193  ,cad_g19
22:18:44 194  ,cad_g20
22:18:44 195  ,cad_g21
22:18:44 196  ,cad_g22
22:18:44 197  ,cad_g23
22:18:44 198  ,cad_g24
22:18:44 199  ,cad_g25
22:18:44 200  ,cad_g26
22:18:44 201  ,cad_g27
22:18:44 202  ,cad_g28
22:18:44 203  ,cad_g29
22:18:44 204  ,cad_g30
22:18:44 205  ,cad_g31
22:18:44 206  ,cad_g32
22:18:44 207  ,cad_g33
22:18:44 208  ,cad_g34
22:18:44 209  ,cad_g35
22:18:44 210  ,cad_g36
22:18:44 211  ,cad_g37
22:18:44 212  ,cad_g38
22:18:44 213  ,cad_g39
22:18:44 214  ,cad_g40
22:18:44 215  ,cad_g41
22:18:44 216  ,chf_g00
22:18:44 217  ,chf_g01
22:18:44 218  ,chf_g02
22:18:44 219  ,chf_g03
22:18:44 220  ,chf_g04
22:18:44 221  ,chf_g05
22:18:44 222  ,chf_g06
22:18:44 223  ,chf_g07
22:18:44 224  ,chf_g08
22:18:44 225  ,chf_g09
22:18:44 226  ,chf_g10
22:18:44 227  ,chf_g11
22:18:44 228  ,chf_g12
22:18:44 229  ,chf_g13
22:18:44 230  ,chf_g14
22:18:44 231  ,chf_g15
22:18:44 232  ,chf_g16
22:18:44 233  ,chf_g17
22:18:44 234  ,chf_g18
22:18:44 235  ,chf_g19
22:18:44 236  ,chf_g20
22:18:44 237  ,chf_g21
22:18:44 238  ,chf_g22
22:18:44 239  ,chf_g23
22:18:44 240  ,chf_g24
22:18:44 241  ,chf_g25
22:18:44 242  ,chf_g26
22:18:44 243  ,chf_g27
22:18:44 244  ,chf_g28
22:18:44 245  ,chf_g29
22:18:44 246  ,chf_g30
22:18:44 247  ,chf_g31
22:18:44 248  ,chf_g32
22:18:44 249  ,chf_g33
22:18:44 250  ,chf_g34
22:18:44 251  ,chf_g35
22:18:44 252  ,chf_g36
22:18:44 253  ,chf_g37
22:18:44 254  ,chf_g38
22:18:44 255  ,chf_g39
22:18:44 256  ,chf_g40
22:18:44 257  ,chf_g41
22:18:44 258  FROM aud_ms6 m
22:18:44 259  WHERE m.ydate = '&1'||' '||'&2'
22:18:44 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'21:55:00'

View created.

Elapsed: 00:00:00.13
22:18:44 SQL> 
22:18:44 SQL> -- rpt
22:18:44 SQL> -- We should see just 1 row:
22:18:44 SQL> 
22:18:44 SQL> SELECT COUNT(prdate) FROM sme
22:18:44   2  
22:18:44 SQL> -- Build the model:
22:18:44 SQL> CREATE OR REPLACE VIEW bme AS
22:18:44   2  SELECT
22:18:44   3  'aud'||m.ydate prdate
22:18:44   4  ,gatt
22:18:44   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:18:44   6  ,eur_g00
22:18:44   7  ,eur_g01
22:18:44   8  ,eur_g02
22:18:44   9  ,eur_g03
22:18:44  10  ,eur_g04
22:18:44  11  ,eur_g05
22:18:44  12  ,eur_g06
22:18:44  13  ,eur_g07
22:18:44  14  ,eur_g08
22:18:44  15  ,eur_g09
22:18:44  16  ,eur_g10
22:18:44  17  ,eur_g11
22:18:44  18  ,eur_g12
22:18:44  19  ,eur_g13
22:18:44  20  ,eur_g14
22:18:44  21  ,eur_g15
22:18:44  22  ,eur_g16
22:18:44  23  ,eur_g17
22:18:44  24  ,eur_g18
22:18:44  25  ,eur_g19
22:18:44  26  ,eur_g20
22:18:44  27  ,eur_g21
22:18:44  28  ,eur_g22
22:18:44  29  ,eur_g23
22:18:44  30  ,eur_g24
22:18:44  31  ,eur_g25
22:18:44  32  ,eur_g26
22:18:44  33  ,eur_g27
22:18:44  34  ,eur_g28
22:18:44  35  ,eur_g29
22:18:44  36  ,eur_g30
22:18:44  37  ,eur_g31
22:18:44  38  ,eur_g32
22:18:44  39  ,eur_g33
22:18:44  40  ,eur_g34
22:18:44  41  ,eur_g35
22:18:44  42  ,eur_g36
22:18:44  43  ,eur_g37
22:18:44  44  ,eur_g38
22:18:44  45  ,eur_g39
22:18:44  46  ,eur_g40
22:18:44  47  ,eur_g41
22:18:44  48  ,aud_g00
22:18:44  49  ,aud_g01
22:18:44  50  ,aud_g02
22:18:44  51  ,aud_g03
22:18:44  52  ,aud_g04
22:18:44  53  ,aud_g05
22:18:44  54  ,aud_g06
22:18:44  55  ,aud_g07
22:18:44  56  ,aud_g08
22:18:44  57  ,aud_g09
22:18:44  58  ,aud_g10
22:18:44  59  ,aud_g11
22:18:44  60  ,aud_g12
22:18:44  61  ,aud_g13
22:18:44  62  ,aud_g14
22:18:44  63  ,aud_g15
22:18:44  64  ,aud_g16
22:18:44  65  ,aud_g17
22:18:44  66  ,aud_g18
22:18:44  67  ,aud_g19
22:18:44  68  ,aud_g20
22:18:44  69  ,aud_g21
22:18:44  70  ,aud_g22
22:18:44  71  ,aud_g23
22:18:44  72  ,aud_g24
22:18:44  73  ,aud_g25
22:18:44  74  ,aud_g26
22:18:44  75  ,aud_g27
22:18:44  76  ,aud_g28
22:18:44  77  ,aud_g29
22:18:44  78  ,aud_g30
22:18:44  79  ,aud_g31
22:18:44  80  ,aud_g32
22:18:44  81  ,aud_g33
22:18:44  82  ,aud_g34
22:18:44  83  ,aud_g35
22:18:44  84  ,aud_g36
22:18:44  85  ,aud_g37
22:18:44  86  ,aud_g38
22:18:44  87  ,aud_g39
22:18:44  88  ,aud_g40
22:18:44  89  ,aud_g41
22:18:44  90  ,gbp_g00
22:18:44  91  ,gbp_g01
22:18:44  92  ,gbp_g02
22:18:44  93  ,gbp_g03
22:18:44  94  ,gbp_g04
22:18:44  95  ,gbp_g05
22:18:44  96  ,gbp_g06
22:18:44  97  ,gbp_g07
22:18:44  98  ,gbp_g08
22:18:44  99  ,gbp_g09
22:18:44 100  ,gbp_g10
22:18:44 101  ,gbp_g11
22:18:44 102  ,gbp_g12
22:18:44 103  ,gbp_g13
22:18:44 104  ,gbp_g14
22:18:44 105  ,gbp_g15
22:18:44 106  ,gbp_g16
22:18:44 107  ,gbp_g17
22:18:44 108  ,gbp_g18
22:18:44 109  ,gbp_g19
22:18:44 110  ,gbp_g20
22:18:44 111  ,gbp_g21
22:18:44 112  ,gbp_g22
22:18:44 113  ,gbp_g23
22:18:44 114  ,gbp_g24
22:18:44 115  ,gbp_g25
22:18:44 116  ,gbp_g26
22:18:44 117  ,gbp_g27
22:18:44 118  ,gbp_g28
22:18:44 119  ,gbp_g29
22:18:44 120  ,gbp_g30
22:18:44 121  ,gbp_g31
22:18:44 122  ,gbp_g32
22:18:44 123  ,gbp_g33
22:18:44 124  ,gbp_g34
22:18:44 125  ,gbp_g35
22:18:44 126  ,gbp_g36
22:18:44 127  ,gbp_g37
22:18:44 128  ,gbp_g38
22:18:44 129  ,gbp_g39
22:18:44 130  ,gbp_g40
22:18:44 131  ,gbp_g41
22:18:44 132  ,jpy_g00
22:18:44 133  ,jpy_g01
22:18:44 134  ,jpy_g02
22:18:44 135  ,jpy_g03
22:18:44 136  ,jpy_g04
22:18:44 137  ,jpy_g05
22:18:44 138  ,jpy_g06
22:18:44 139  ,jpy_g07
22:18:44 140  ,jpy_g08
22:18:44 141  ,jpy_g09
22:18:44 142  ,jpy_g10
22:18:44 143  ,jpy_g11
22:18:44 144  ,jpy_g12
22:18:44 145  ,jpy_g13
22:18:44 146  ,jpy_g14
22:18:44 147  ,jpy_g15
22:18:44 148  ,jpy_g16
22:18:44 149  ,jpy_g17
22:18:44 150  ,jpy_g18
22:18:44 151  ,jpy_g19
22:18:44 152  ,jpy_g20
22:18:44 153  ,jpy_g21
22:18:44 154  ,jpy_g22
22:18:44 155  ,jpy_g23
22:18:44 156  ,jpy_g24
22:18:44 157  ,jpy_g25
22:18:44 158  ,jpy_g26
22:18:44 159  ,jpy_g27
22:18:44 160  ,jpy_g28
22:18:44 161  ,jpy_g29
22:18:44 162  ,jpy_g30
22:18:44 163  ,jpy_g31
22:18:44 164  ,jpy_g32
22:18:44 165  ,jpy_g33
22:18:44 166  ,jpy_g34
22:18:44 167  ,jpy_g35
22:18:44 168  ,jpy_g36
22:18:44 169  ,jpy_g37
22:18:44 170  ,jpy_g38
22:18:44 171  ,jpy_g39
22:18:44 172  ,jpy_g40
22:18:44 173  ,jpy_g41
22:18:44 174  ,cad_g00
22:18:44 175  ,cad_g01
22:18:44 176  ,cad_g02
22:18:44 177  ,cad_g03
22:18:44 178  ,cad_g04
22:18:44 179  ,cad_g05
22:18:44 180  ,cad_g06
22:18:44 181  ,cad_g07
22:18:44 182  ,cad_g08
22:18:44 183  ,cad_g09
22:18:44 184  ,cad_g10
22:18:44 185  ,cad_g11
22:18:44 186  ,cad_g12
22:18:44 187  ,cad_g13
22:18:44 188  ,cad_g14
22:18:44 189  ,cad_g15
22:18:44 190  ,cad_g16
22:18:44 191  ,cad_g17
22:18:44 192  ,cad_g18
22:18:44 193  ,cad_g19
22:18:44 194  ,cad_g20
22:18:44 195  ,cad_g21
22:18:44 196  ,cad_g22
22:18:44 197  ,cad_g23
22:18:44 198  ,cad_g24
22:18:44 199  ,cad_g25
22:18:44 200  ,cad_g26
22:18:44 201  ,cad_g27
22:18:44 202  ,cad_g28
22:18:44 203  ,cad_g29
22:18:44 204  ,cad_g30
22:18:44 205  ,cad_g31
22:18:44 206  ,cad_g32
22:18:44 207  ,cad_g33
22:18:44 208  ,cad_g34
22:18:44 209  ,cad_g35
22:18:44 210  ,cad_g36
22:18:44 211  ,cad_g37
22:18:44 212  ,cad_g38
22:18:44 213  ,cad_g39
22:18:44 214  ,cad_g40
22:18:44 215  ,cad_g41
22:18:44 216  ,chf_g00
22:18:44 217  ,chf_g01
22:18:44 218  ,chf_g02
22:18:44 219  ,chf_g03
22:18:44 220  ,chf_g04
22:18:44 221  ,chf_g05
22:18:44 222  ,chf_g06
22:18:44 223  ,chf_g07
22:18:44 224  ,chf_g08
22:18:44 225  ,chf_g09
22:18:44 226  ,chf_g10
22:18:44 227  ,chf_g11
22:18:44 228  ,chf_g12
22:18:44 229  ,chf_g13
22:18:44 230  ,chf_g14
22:18:44 231  ,chf_g15
22:18:44 232  ,chf_g16
22:18:44 233  ,chf_g17
22:18:44 234  ,chf_g18
22:18:44 235  ,chf_g19
22:18:44 236  ,chf_g20
22:18:44 237  ,chf_g21
22:18:44 238  ,chf_g22
22:18:44 239  ,chf_g23
22:18:44 240  ,chf_g24
22:18:44 241  ,chf_g25
22:18:44 242  ,chf_g26
22:18:44 243  ,chf_g27
22:18:44 244  ,chf_g28
22:18:44 245  ,chf_g29
22:18:44 246  ,chf_g30
22:18:44 247  ,chf_g31
22:18:44 248  ,chf_g32
22:18:44 249  ,chf_g33
22:18:44 250  ,chf_g34
22:18:44 251  ,chf_g35
22:18:44 252  ,chf_g36
22:18:44 253  ,chf_g37
22:18:44 254  ,chf_g38
22:18:44 255  ,chf_g39
22:18:44 256  ,chf_g40
22:18:44 257  ,chf_g41
22:18:44 258  FROM aud_ms6 m
22:18:44 259  WHERE gatt IN('nup','up')
22:18:44 260  AND 1+m.ydate < '&1'||' '||'&2'
22:18:44 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'21:55:00'

View created.

Elapsed: 00:00:00.13
22:18:44 SQL> 
22:18:44 SQL> -- rpt
22:18:44 SQL> 
22:18:44 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
22:18:44   2  
22:18:44 SQL> SELECT MAX(prdate) FROM bme
22:18:44   2  
22:18:44 SQL> -- Now build model from bme and score sme
22:18:44 SQL> @score1.sql
22:18:44 SQL> -- score1.sql
22:18:44 SQL> 
22:18:44 SQL> -- Does the 1st SVM score
22:18:44 SQL> 
22:18:44 SQL> -- Fill up svmc_apply_prep
22:18:44 SQL> @score.sql
22:18:44 SQL> --
22:18:44 SQL> -- score.sql
22:18:44 SQL> --
22:18:44 SQL> 
22:18:44 SQL> -- usage: score.sql
22:18:44 SQL> 
22:18:44 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:18:44 SQL> 
22:18:44 SQL> DEFINE target	= 'gatt'
22:18:44 SQL> DEFINE model_name = 'forex14'
22:18:44 SQL> DEFINE bldtable	= 'bme'
22:18:44 SQL> DEFINE scoretable = 'sme'
22:18:44 SQL> DEFINE case_id	= 'prdate'
22:18:44 SQL> 
22:18:44 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:18:44 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:18:44 SQL> 
22:18:44 SQL> -- Builds an SVM model using pl/sql.
22:18:44 SQL> 
22:18:44 SQL> -----------------------------------------------------------------------
22:18:44 SQL> --			    BUILD THE MODEL
22:18:44 SQL> -----------------------------------------------------------------------
22:18:44 SQL> 
22:18:44 SQL> -- Cleanup old build data preparation objects for repeat runs
22:18:44 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
22:18:44 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:18:44 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
22:18:44 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
22:18:44 SQL> 
22:18:44 SQL> 
22:18:44 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:18:44 SQL> --
22:18:44 SQL> -- DROP	TABLE svmc_settings ;
22:18:44 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:18:44 SQL> -- DELETE svmc_settings;
22:18:44 SQL> 
22:18:44 SQL> -- The default classification algorithm is Naive Bayes. So override
22:18:44 SQL> -- this choice to SVM using a settings table.
22:18:44 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:18:44 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:18:44 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:18:44 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:18:44 SQL> -- models.
22:18:44 SQL> --
22:18:44 SQL> 
22:18:44 SQL> -- Do this once and then comment it out.
22:18:44 SQL> -- That makes script go faster.
22:18:44 SQL> -- BEGIN
22:18:44 SQL> -- -- Populate settings table
22:18:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:18:44 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:18:44 SQL> --
22:18:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:18:44 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:18:44 SQL> --
22:18:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:18:44 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:18:44 SQL> --   COMMIT;
22:18:44 SQL> -- END;
22:18:44 SQL> -- /
22:18:44 SQL> 
22:18:44 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:18:44 SQL> 
22:18:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:18:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:18:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
22:18:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:18:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:18:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
22:18:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:18:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:18:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:18:44 SQL> 
22:18:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:18:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:18:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:18:44 SQL> 
22:18:44 SQL> --------------------------------
22:18:44 SQL> -- PREPARE BUILD (TRAINING) DATA
22:18:44 SQL> --
22:18:44 SQL> 
22:18:44 SQL> -- 1. Missing Value treatment for all Predictors and
22:18:44 SQL> -- 2. Outlier Treatment and
22:18:44 SQL> -- 3. Normalization are performed below.
22:18:44 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:18:44 SQL> --    normalized here.
22:18:44 SQL> 
22:18:44 SQL> BEGIN
22:18:44   2  	-- Perform missing value treatment for all predictors
22:18:44   3  	-- create miss tables
22:18:44   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:18:44   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:18:44   6  
22:18:44   7  	-- populate miss tables
22:18:44   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:18:44   9  	  miss_table_name => 'svmc_miss_num',
22:18:44  10  	  data_table_name => '&bldtable',
22:18:44  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:18:44  12  
22:18:44  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:18:44  14  	  miss_table_name => 'svmc_miss_cat',
22:18:44  15  	  data_table_name => '&bldtable',
22:18:44  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:18:44  17  
22:18:44  18  	-- xform input data to replace missing values
22:18:44  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:18:44  20  	  miss_table_name => 'svmc_miss_num',
22:18:44  21  	  data_table_name => '&bldtable',
22:18:44  22  	  xform_view_name => 'xformed_build_miss_num');
22:18:44  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:18:44  24  	  miss_table_name => 'svmc_miss_cat',
22:18:44  25  	  data_table_name => '&bldtable',
22:18:44  26  	  xform_view_name => 'xformed_build_miss_cat');
22:18:44  27  
22:18:44  28  	-- Perform outlier treatment.
22:18:44  29  	-- create clip table
22:18:44  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:18:44  31  
22:18:44  32  	-- populate clip table
22:18:44  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:18:44  34  	  clip_table_name => 'svmc_clip',
22:18:44  35  	  data_table_name => '&bldtable',
22:18:44  36  	  tail_frac	  => 0.025,
22:18:44  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:18:44  38  
22:18:44  39  	-- xform input data to winsorized data
22:18:44  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:18:44  41  	  clip_table_name => 'svmc_clip',
22:18:44  42  	  data_table_name => '&bldtable',
22:18:44  43  	  xform_view_name => 'svmc_winsor');
22:18:44  44  
22:18:44  45  	-- create normalization table
22:18:44  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:18:44  47  
22:18:44  48  	-- populate normalization table based on winsorized data
22:18:44  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:18:44  50  	  norm_table_name => 'svmc_norm',
22:18:44  51  	  data_table_name => 'svmc_winsor',
22:18:44  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:18:44  53  
22:18:44  54  	-- normalize the original data
22:18:44  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:18:44  56  	  norm_table_name => 'svmc_norm',
22:18:44  57  	  data_table_name => '&bldtable',
22:18:44  58  	  xform_view_name => 'svmc_build_prep');
22:18:44  59  END;
22:18:44  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.26
22:19:03 SQL> 
22:19:03 SQL> ---------------------
22:19:03 SQL> -- CREATE A NEW MODEL
22:19:03 SQL> --
22:19:03 SQL> -- Cleanup old model with the same name for repeat runs
22:19:03 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:19:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:19:03   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.51
22:19:03 SQL> 
22:19:03 SQL> -- Build a new SVM Model
22:19:03 SQL> BEGIN
22:19:03   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:19:03   3  	  model_name	      => '&model_name',
22:19:03   4  	  mining_function     => dbms_data_mining.classification,
22:19:03   5  	  data_table_name     => 'svmc_build_prep',
22:19:03   6  	  case_id_column_name => '&case_id',
22:19:03   7  	  target_column_name  => '&target',
22:19:03   8  	  settings_table_name => 'svmc_settings');
22:19:03   9  END;
22:19:03  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.56
22:19:32 SQL> 
22:19:32 SQL> -----------------------------------------------------------------------
22:19:32 SQL> --			       APPLY/score THE MODEL
22:19:32 SQL> -----------------------------------------------------------------------
22:19:32 SQL> 
22:19:32 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:19:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:19:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:19:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:19:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:19:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:19:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:19:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:19:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:19:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
22:19:32 SQL> -----------------------
22:19:32 SQL> -- PREPARE SCORING DATA
22:19:32 SQL> --
22:19:32 SQL> -- If the data for model creation has been prepared, then the data
22:19:32 SQL> -- to be scored using the model must be prepared in the same manner
22:19:32 SQL> -- in order to obtain meaningful results.
22:19:32 SQL> --
22:19:32 SQL> -- 1. Missing Value treatment for all Predictors and
22:19:32 SQL> -- 2. Normalization
22:19:32 SQL> -- No outlier treatment will be performed during test and apply. The
22:19:32 SQL> -- normalization step is sufficient, since the normalization parameters
22:19:32 SQL> -- already capture the effects of outlier treatment done with build data.
22:19:32 SQL> --
22:19:32 SQL> BEGIN
22:19:32   2  	-- Xform Test data to replace missing values
22:19:32   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:19:32   4  	  miss_table_name => 'svmc_miss_num',
22:19:32   5  	  data_table_name => '&scoretable',
22:19:32   6  	  xform_view_name => 'xformed_apply_miss_num');
22:19:32   7  
22:19:32   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:19:32   9  	  miss_table_name => 'svmc_miss_cat',
22:19:32  10  	  data_table_name => '&scoretable',
22:19:32  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:19:32  12  
22:19:32  13  	-- Normalize the data to be scored
22:19:32  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:19:32  15  	  norm_table_name => 'svmc_norm',
22:19:32  16  	  data_table_name => '&scoretable',
22:19:32  17  	  xform_view_name => 'svmc_apply_prep');
22:19:32  18  END;
22:19:32  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
22:19:33 SQL> 
22:19:33 SQL> -- Use same model_name used in score.sql
22:19:33 SQL> DEFINE model_name = 'forex14'
22:19:33 SQL> 
22:19:33 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
22:19:33 SQL> 
22:19:33 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
22:19:33 SQL> 
22:19:33 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
22:19:33   2  SELECT
22:19:33   3  prdate
22:19:33   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:19:33   5  ,sysdate
22:19:33   6  ,SUBSTR(prdate,1,3)pair
22:19:33   7  ,SUBSTR(prdate,4,19)ydate
22:19:33   8  FROM svmc_apply_prep
22:19:33   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
22:19:33 SQL> @aud_score1day_gattn.sql	2011-01-03 21:55:00
22:19:33 SQL> --
22:19:33 SQL> -- aud_score1day_gattn.sql
22:19:33 SQL> --
22:19:33 SQL> 
22:19:33 SQL> CREATE OR REPLACE VIEW sme AS
22:19:33   2  SELECT
22:19:33   3  'aud'||m.ydate prdate
22:19:33   4  ,NULL gattn
22:19:33   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:19:33   6  ,eur_g00
22:19:33   7  ,eur_g01
22:19:33   8  ,eur_g02
22:19:33   9  ,eur_g03
22:19:33  10  ,eur_g04
22:19:33  11  ,eur_g05
22:19:33  12  ,eur_g06
22:19:33  13  ,eur_g07
22:19:33  14  ,eur_g08
22:19:33  15  ,eur_g09
22:19:33  16  ,eur_g10
22:19:33  17  ,eur_g11
22:19:33  18  ,eur_g12
22:19:33  19  ,eur_g13
22:19:33  20  ,eur_g14
22:19:33  21  ,eur_g15
22:19:33  22  ,eur_g16
22:19:33  23  ,eur_g17
22:19:33  24  ,eur_g18
22:19:33  25  ,eur_g19
22:19:33  26  ,eur_g20
22:19:33  27  ,eur_g21
22:19:33  28  ,eur_g22
22:19:33  29  ,eur_g23
22:19:33  30  ,eur_g24
22:19:33  31  ,eur_g25
22:19:33  32  ,eur_g26
22:19:33  33  ,eur_g27
22:19:33  34  ,eur_g28
22:19:33  35  ,eur_g29
22:19:33  36  ,eur_g30
22:19:33  37  ,eur_g31
22:19:33  38  ,eur_g32
22:19:33  39  ,eur_g33
22:19:33  40  ,eur_g34
22:19:33  41  ,eur_g35
22:19:33  42  ,eur_g36
22:19:33  43  ,eur_g37
22:19:33  44  ,eur_g38
22:19:33  45  ,eur_g39
22:19:33  46  ,eur_g40
22:19:33  47  ,eur_g41
22:19:33  48  ,aud_g00
22:19:33  49  ,aud_g01
22:19:33  50  ,aud_g02
22:19:33  51  ,aud_g03
22:19:33  52  ,aud_g04
22:19:33  53  ,aud_g05
22:19:33  54  ,aud_g06
22:19:33  55  ,aud_g07
22:19:33  56  ,aud_g08
22:19:33  57  ,aud_g09
22:19:33  58  ,aud_g10
22:19:33  59  ,aud_g11
22:19:33  60  ,aud_g12
22:19:33  61  ,aud_g13
22:19:33  62  ,aud_g14
22:19:33  63  ,aud_g15
22:19:33  64  ,aud_g16
22:19:33  65  ,aud_g17
22:19:33  66  ,aud_g18
22:19:33  67  ,aud_g19
22:19:33  68  ,aud_g20
22:19:33  69  ,aud_g21
22:19:33  70  ,aud_g22
22:19:33  71  ,aud_g23
22:19:33  72  ,aud_g24
22:19:33  73  ,aud_g25
22:19:33  74  ,aud_g26
22:19:33  75  ,aud_g27
22:19:33  76  ,aud_g28
22:19:33  77  ,aud_g29
22:19:33  78  ,aud_g30
22:19:33  79  ,aud_g31
22:19:33  80  ,aud_g32
22:19:33  81  ,aud_g33
22:19:33  82  ,aud_g34
22:19:33  83  ,aud_g35
22:19:33  84  ,aud_g36
22:19:33  85  ,aud_g37
22:19:33  86  ,aud_g38
22:19:33  87  ,aud_g39
22:19:33  88  ,aud_g40
22:19:33  89  ,aud_g41
22:19:33  90  ,gbp_g00
22:19:33  91  ,gbp_g01
22:19:33  92  ,gbp_g02
22:19:33  93  ,gbp_g03
22:19:33  94  ,gbp_g04
22:19:33  95  ,gbp_g05
22:19:33  96  ,gbp_g06
22:19:33  97  ,gbp_g07
22:19:33  98  ,gbp_g08
22:19:33  99  ,gbp_g09
22:19:33 100  ,gbp_g10
22:19:33 101  ,gbp_g11
22:19:33 102  ,gbp_g12
22:19:33 103  ,gbp_g13
22:19:33 104  ,gbp_g14
22:19:33 105  ,gbp_g15
22:19:33 106  ,gbp_g16
22:19:33 107  ,gbp_g17
22:19:33 108  ,gbp_g18
22:19:33 109  ,gbp_g19
22:19:33 110  ,gbp_g20
22:19:33 111  ,gbp_g21
22:19:33 112  ,gbp_g22
22:19:33 113  ,gbp_g23
22:19:33 114  ,gbp_g24
22:19:33 115  ,gbp_g25
22:19:33 116  ,gbp_g26
22:19:33 117  ,gbp_g27
22:19:33 118  ,gbp_g28
22:19:33 119  ,gbp_g29
22:19:33 120  ,gbp_g30
22:19:33 121  ,gbp_g31
22:19:33 122  ,gbp_g32
22:19:33 123  ,gbp_g33
22:19:33 124  ,gbp_g34
22:19:33 125  ,gbp_g35
22:19:33 126  ,gbp_g36
22:19:33 127  ,gbp_g37
22:19:33 128  ,gbp_g38
22:19:33 129  ,gbp_g39
22:19:33 130  ,gbp_g40
22:19:33 131  ,gbp_g41
22:19:33 132  ,jpy_g00
22:19:33 133  ,jpy_g01
22:19:33 134  ,jpy_g02
22:19:33 135  ,jpy_g03
22:19:33 136  ,jpy_g04
22:19:33 137  ,jpy_g05
22:19:33 138  ,jpy_g06
22:19:33 139  ,jpy_g07
22:19:33 140  ,jpy_g08
22:19:33 141  ,jpy_g09
22:19:33 142  ,jpy_g10
22:19:33 143  ,jpy_g11
22:19:33 144  ,jpy_g12
22:19:33 145  ,jpy_g13
22:19:33 146  ,jpy_g14
22:19:33 147  ,jpy_g15
22:19:33 148  ,jpy_g16
22:19:33 149  ,jpy_g17
22:19:33 150  ,jpy_g18
22:19:33 151  ,jpy_g19
22:19:33 152  ,jpy_g20
22:19:33 153  ,jpy_g21
22:19:33 154  ,jpy_g22
22:19:33 155  ,jpy_g23
22:19:33 156  ,jpy_g24
22:19:33 157  ,jpy_g25
22:19:33 158  ,jpy_g26
22:19:33 159  ,jpy_g27
22:19:33 160  ,jpy_g28
22:19:33 161  ,jpy_g29
22:19:33 162  ,jpy_g30
22:19:33 163  ,jpy_g31
22:19:33 164  ,jpy_g32
22:19:33 165  ,jpy_g33
22:19:33 166  ,jpy_g34
22:19:33 167  ,jpy_g35
22:19:33 168  ,jpy_g36
22:19:33 169  ,jpy_g37
22:19:33 170  ,jpy_g38
22:19:33 171  ,jpy_g39
22:19:33 172  ,jpy_g40
22:19:33 173  ,jpy_g41
22:19:33 174  ,cad_g00
22:19:33 175  ,cad_g01
22:19:33 176  ,cad_g02
22:19:33 177  ,cad_g03
22:19:33 178  ,cad_g04
22:19:33 179  ,cad_g05
22:19:33 180  ,cad_g06
22:19:33 181  ,cad_g07
22:19:33 182  ,cad_g08
22:19:33 183  ,cad_g09
22:19:33 184  ,cad_g10
22:19:33 185  ,cad_g11
22:19:33 186  ,cad_g12
22:19:33 187  ,cad_g13
22:19:33 188  ,cad_g14
22:19:33 189  ,cad_g15
22:19:33 190  ,cad_g16
22:19:33 191  ,cad_g17
22:19:33 192  ,cad_g18
22:19:33 193  ,cad_g19
22:19:33 194  ,cad_g20
22:19:33 195  ,cad_g21
22:19:33 196  ,cad_g22
22:19:33 197  ,cad_g23
22:19:33 198  ,cad_g24
22:19:33 199  ,cad_g25
22:19:33 200  ,cad_g26
22:19:33 201  ,cad_g27
22:19:33 202  ,cad_g28
22:19:33 203  ,cad_g29
22:19:33 204  ,cad_g30
22:19:33 205  ,cad_g31
22:19:33 206  ,cad_g32
22:19:33 207  ,cad_g33
22:19:33 208  ,cad_g34
22:19:33 209  ,cad_g35
22:19:33 210  ,cad_g36
22:19:33 211  ,cad_g37
22:19:33 212  ,cad_g38
22:19:33 213  ,cad_g39
22:19:33 214  ,cad_g40
22:19:33 215  ,cad_g41
22:19:33 216  ,chf_g00
22:19:33 217  ,chf_g01
22:19:33 218  ,chf_g02
22:19:33 219  ,chf_g03
22:19:33 220  ,chf_g04
22:19:33 221  ,chf_g05
22:19:33 222  ,chf_g06
22:19:33 223  ,chf_g07
22:19:33 224  ,chf_g08
22:19:33 225  ,chf_g09
22:19:33 226  ,chf_g10
22:19:33 227  ,chf_g11
22:19:33 228  ,chf_g12
22:19:33 229  ,chf_g13
22:19:33 230  ,chf_g14
22:19:33 231  ,chf_g15
22:19:33 232  ,chf_g16
22:19:33 233  ,chf_g17
22:19:33 234  ,chf_g18
22:19:33 235  ,chf_g19
22:19:33 236  ,chf_g20
22:19:33 237  ,chf_g21
22:19:33 238  ,chf_g22
22:19:33 239  ,chf_g23
22:19:33 240  ,chf_g24
22:19:33 241  ,chf_g25
22:19:33 242  ,chf_g26
22:19:33 243  ,chf_g27
22:19:33 244  ,chf_g28
22:19:33 245  ,chf_g29
22:19:33 246  ,chf_g30
22:19:33 247  ,chf_g31
22:19:33 248  ,chf_g32
22:19:33 249  ,chf_g33
22:19:33 250  ,chf_g34
22:19:33 251  ,chf_g35
22:19:33 252  ,chf_g36
22:19:33 253  ,chf_g37
22:19:33 254  ,chf_g38
22:19:33 255  ,chf_g39
22:19:33 256  ,chf_g40
22:19:33 257  ,chf_g41
22:19:33 258  FROM aud_ms6 m
22:19:33 259  WHERE m.ydate = '&1'||' '||'&2'
22:19:33 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'21:55:00'

View created.

Elapsed: 00:00:00.12
22:19:33 SQL> 
22:19:33 SQL> -- rpt
22:19:33 SQL> -- We should see just 1 row:
22:19:33 SQL> 
22:19:33 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
22:19:33 SQL> 
22:19:33 SQL> -- Build the model:
22:19:33 SQL> CREATE OR REPLACE VIEW bme AS
22:19:33   2  SELECT
22:19:33   3  'aud'||m.ydate prdate
22:19:33   4  ,gattn
22:19:33   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:19:33   6  ,eur_g00
22:19:33   7  ,eur_g01
22:19:33   8  ,eur_g02
22:19:33   9  ,eur_g03
22:19:33  10  ,eur_g04
22:19:33  11  ,eur_g05
22:19:33  12  ,eur_g06
22:19:33  13  ,eur_g07
22:19:33  14  ,eur_g08
22:19:33  15  ,eur_g09
22:19:33  16  ,eur_g10
22:19:33  17  ,eur_g11
22:19:33  18  ,eur_g12
22:19:33  19  ,eur_g13
22:19:33  20  ,eur_g14
22:19:33  21  ,eur_g15
22:19:33  22  ,eur_g16
22:19:33  23  ,eur_g17
22:19:33  24  ,eur_g18
22:19:33  25  ,eur_g19
22:19:33  26  ,eur_g20
22:19:33  27  ,eur_g21
22:19:33  28  ,eur_g22
22:19:33  29  ,eur_g23
22:19:33  30  ,eur_g24
22:19:33  31  ,eur_g25
22:19:33  32  ,eur_g26
22:19:33  33  ,eur_g27
22:19:33  34  ,eur_g28
22:19:33  35  ,eur_g29
22:19:33  36  ,eur_g30
22:19:33  37  ,eur_g31
22:19:33  38  ,eur_g32
22:19:33  39  ,eur_g33
22:19:33  40  ,eur_g34
22:19:33  41  ,eur_g35
22:19:33  42  ,eur_g36
22:19:33  43  ,eur_g37
22:19:33  44  ,eur_g38
22:19:33  45  ,eur_g39
22:19:33  46  ,eur_g40
22:19:33  47  ,eur_g41
22:19:33  48  ,aud_g00
22:19:33  49  ,aud_g01
22:19:33  50  ,aud_g02
22:19:33  51  ,aud_g03
22:19:33  52  ,aud_g04
22:19:33  53  ,aud_g05
22:19:33  54  ,aud_g06
22:19:33  55  ,aud_g07
22:19:33  56  ,aud_g08
22:19:33  57  ,aud_g09
22:19:33  58  ,aud_g10
22:19:33  59  ,aud_g11
22:19:33  60  ,aud_g12
22:19:33  61  ,aud_g13
22:19:33  62  ,aud_g14
22:19:33  63  ,aud_g15
22:19:33  64  ,aud_g16
22:19:33  65  ,aud_g17
22:19:33  66  ,aud_g18
22:19:33  67  ,aud_g19
22:19:33  68  ,aud_g20
22:19:33  69  ,aud_g21
22:19:33  70  ,aud_g22
22:19:33  71  ,aud_g23
22:19:33  72  ,aud_g24
22:19:33  73  ,aud_g25
22:19:33  74  ,aud_g26
22:19:33  75  ,aud_g27
22:19:33  76  ,aud_g28
22:19:33  77  ,aud_g29
22:19:33  78  ,aud_g30
22:19:33  79  ,aud_g31
22:19:33  80  ,aud_g32
22:19:33  81  ,aud_g33
22:19:33  82  ,aud_g34
22:19:33  83  ,aud_g35
22:19:33  84  ,aud_g36
22:19:33  85  ,aud_g37
22:19:33  86  ,aud_g38
22:19:33  87  ,aud_g39
22:19:33  88  ,aud_g40
22:19:33  89  ,aud_g41
22:19:33  90  ,gbp_g00
22:19:33  91  ,gbp_g01
22:19:33  92  ,gbp_g02
22:19:33  93  ,gbp_g03
22:19:33  94  ,gbp_g04
22:19:33  95  ,gbp_g05
22:19:33  96  ,gbp_g06
22:19:33  97  ,gbp_g07
22:19:33  98  ,gbp_g08
22:19:33  99  ,gbp_g09
22:19:33 100  ,gbp_g10
22:19:33 101  ,gbp_g11
22:19:33 102  ,gbp_g12
22:19:33 103  ,gbp_g13
22:19:33 104  ,gbp_g14
22:19:33 105  ,gbp_g15
22:19:33 106  ,gbp_g16
22:19:33 107  ,gbp_g17
22:19:33 108  ,gbp_g18
22:19:33 109  ,gbp_g19
22:19:33 110  ,gbp_g20
22:19:33 111  ,gbp_g21
22:19:33 112  ,gbp_g22
22:19:33 113  ,gbp_g23
22:19:33 114  ,gbp_g24
22:19:33 115  ,gbp_g25
22:19:33 116  ,gbp_g26
22:19:33 117  ,gbp_g27
22:19:33 118  ,gbp_g28
22:19:33 119  ,gbp_g29
22:19:33 120  ,gbp_g30
22:19:33 121  ,gbp_g31
22:19:33 122  ,gbp_g32
22:19:33 123  ,gbp_g33
22:19:33 124  ,gbp_g34
22:19:33 125  ,gbp_g35
22:19:33 126  ,gbp_g36
22:19:33 127  ,gbp_g37
22:19:33 128  ,gbp_g38
22:19:33 129  ,gbp_g39
22:19:33 130  ,gbp_g40
22:19:33 131  ,gbp_g41
22:19:33 132  ,jpy_g00
22:19:33 133  ,jpy_g01
22:19:33 134  ,jpy_g02
22:19:33 135  ,jpy_g03
22:19:33 136  ,jpy_g04
22:19:33 137  ,jpy_g05
22:19:33 138  ,jpy_g06
22:19:33 139  ,jpy_g07
22:19:33 140  ,jpy_g08
22:19:33 141  ,jpy_g09
22:19:33 142  ,jpy_g10
22:19:33 143  ,jpy_g11
22:19:33 144  ,jpy_g12
22:19:33 145  ,jpy_g13
22:19:33 146  ,jpy_g14
22:19:33 147  ,jpy_g15
22:19:33 148  ,jpy_g16
22:19:33 149  ,jpy_g17
22:19:33 150  ,jpy_g18
22:19:33 151  ,jpy_g19
22:19:33 152  ,jpy_g20
22:19:33 153  ,jpy_g21
22:19:33 154  ,jpy_g22
22:19:33 155  ,jpy_g23
22:19:33 156  ,jpy_g24
22:19:33 157  ,jpy_g25
22:19:33 158  ,jpy_g26
22:19:33 159  ,jpy_g27
22:19:33 160  ,jpy_g28
22:19:33 161  ,jpy_g29
22:19:33 162  ,jpy_g30
22:19:33 163  ,jpy_g31
22:19:33 164  ,jpy_g32
22:19:33 165  ,jpy_g33
22:19:33 166  ,jpy_g34
22:19:33 167  ,jpy_g35
22:19:33 168  ,jpy_g36
22:19:33 169  ,jpy_g37
22:19:33 170  ,jpy_g38
22:19:33 171  ,jpy_g39
22:19:33 172  ,jpy_g40
22:19:33 173  ,jpy_g41
22:19:33 174  ,cad_g00
22:19:33 175  ,cad_g01
22:19:33 176  ,cad_g02
22:19:33 177  ,cad_g03
22:19:33 178  ,cad_g04
22:19:33 179  ,cad_g05
22:19:33 180  ,cad_g06
22:19:33 181  ,cad_g07
22:19:33 182  ,cad_g08
22:19:33 183  ,cad_g09
22:19:33 184  ,cad_g10
22:19:33 185  ,cad_g11
22:19:33 186  ,cad_g12
22:19:33 187  ,cad_g13
22:19:33 188  ,cad_g14
22:19:33 189  ,cad_g15
22:19:33 190  ,cad_g16
22:19:33 191  ,cad_g17
22:19:33 192  ,cad_g18
22:19:33 193  ,cad_g19
22:19:33 194  ,cad_g20
22:19:33 195  ,cad_g21
22:19:33 196  ,cad_g22
22:19:33 197  ,cad_g23
22:19:33 198  ,cad_g24
22:19:33 199  ,cad_g25
22:19:33 200  ,cad_g26
22:19:33 201  ,cad_g27
22:19:33 202  ,cad_g28
22:19:33 203  ,cad_g29
22:19:33 204  ,cad_g30
22:19:33 205  ,cad_g31
22:19:33 206  ,cad_g32
22:19:33 207  ,cad_g33
22:19:33 208  ,cad_g34
22:19:33 209  ,cad_g35
22:19:33 210  ,cad_g36
22:19:33 211  ,cad_g37
22:19:33 212  ,cad_g38
22:19:33 213  ,cad_g39
22:19:33 214  ,cad_g40
22:19:33 215  ,cad_g41
22:19:33 216  ,chf_g00
22:19:33 217  ,chf_g01
22:19:33 218  ,chf_g02
22:19:33 219  ,chf_g03
22:19:33 220  ,chf_g04
22:19:33 221  ,chf_g05
22:19:33 222  ,chf_g06
22:19:33 223  ,chf_g07
22:19:33 224  ,chf_g08
22:19:33 225  ,chf_g09
22:19:33 226  ,chf_g10
22:19:33 227  ,chf_g11
22:19:33 228  ,chf_g12
22:19:33 229  ,chf_g13
22:19:33 230  ,chf_g14
22:19:33 231  ,chf_g15
22:19:33 232  ,chf_g16
22:19:33 233  ,chf_g17
22:19:33 234  ,chf_g18
22:19:33 235  ,chf_g19
22:19:33 236  ,chf_g20
22:19:33 237  ,chf_g21
22:19:33 238  ,chf_g22
22:19:33 239  ,chf_g23
22:19:33 240  ,chf_g24
22:19:33 241  ,chf_g25
22:19:33 242  ,chf_g26
22:19:33 243  ,chf_g27
22:19:33 244  ,chf_g28
22:19:33 245  ,chf_g29
22:19:33 246  ,chf_g30
22:19:33 247  ,chf_g31
22:19:33 248  ,chf_g32
22:19:33 249  ,chf_g33
22:19:33 250  ,chf_g34
22:19:33 251  ,chf_g35
22:19:33 252  ,chf_g36
22:19:33 253  ,chf_g37
22:19:33 254  ,chf_g38
22:19:33 255  ,chf_g39
22:19:33 256  ,chf_g40
22:19:33 257  ,chf_g41
22:19:33 258  FROM aud_ms6 m
22:19:33 259  WHERE gattn IN('nup','up')
22:19:33 260  AND 1+m.ydate < '&1'||' '||'&2'
22:19:33 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'21:55:00'

View created.

Elapsed: 00:00:00.11
22:19:34 SQL> 
22:19:34 SQL> -- rpt
22:19:34 SQL> 
22:19:34 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12700
up	     6258

Elapsed: 00:00:00.04
22:19:34 SQL> 
22:19:34 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 21:55:00

Elapsed: 00:00:00.03
22:19:34 SQL> 
22:19:34 SQL> -- Now build model from bme and score sme
22:19:34 SQL> @score1gattn.sql
22:19:34 SQL> -- score1gattn.sql
22:19:34 SQL> 
22:19:34 SQL> -- Does the 1st SVM score
22:19:34 SQL> 
22:19:34 SQL> -- Fill up svmc_apply_prep
22:19:34 SQL> @score_gattn.sql
22:19:34 SQL> --
22:19:34 SQL> -- score_gattn.sql
22:19:34 SQL> --
22:19:34 SQL> 
22:19:34 SQL> -- usage: score_gattn.sql
22:19:34 SQL> 
22:19:34 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:19:34 SQL> 
22:19:34 SQL> DEFINE target	= 'gattn'
22:19:34 SQL> DEFINE model_name = 'forex14'
22:19:34 SQL> DEFINE bldtable	= 'bme'
22:19:34 SQL> DEFINE scoretable = 'sme'
22:19:34 SQL> DEFINE case_id	= 'prdate'
22:19:34 SQL> 
22:19:34 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:19:34 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:19:34 SQL> 
22:19:34 SQL> -- Builds an SVM model using pl/sql.
22:19:34 SQL> 
22:19:34 SQL> -----------------------------------------------------------------------
22:19:34 SQL> --			    BUILD THE MODEL
22:19:34 SQL> -----------------------------------------------------------------------
22:19:34 SQL> 
22:19:34 SQL> -- Cleanup old build data preparation objects for repeat runs
22:19:34 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
22:19:34 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:19:34 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
22:19:34 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
22:19:34 SQL> 
22:19:34 SQL> 
22:19:34 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:19:34 SQL> --
22:19:34 SQL> -- DROP	TABLE svmc_settings ;
22:19:34 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:19:34 SQL> -- DELETE svmc_settings;
22:19:34 SQL> 
22:19:34 SQL> -- The default classification algorithm is Naive Bayes. So override
22:19:34 SQL> -- this choice to SVM using a settings table.
22:19:34 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:19:34 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:19:34 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:19:34 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:19:34 SQL> -- models.
22:19:34 SQL> --
22:19:34 SQL> 
22:19:34 SQL> -- Do this once and then comment it out.
22:19:34 SQL> -- That makes script go faster.
22:19:34 SQL> -- BEGIN
22:19:34 SQL> -- -- Populate settings table
22:19:34 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:19:34 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:19:34 SQL> --
22:19:34 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:19:34 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:19:34 SQL> --
22:19:34 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:19:34 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:19:34 SQL> --   COMMIT;
22:19:34 SQL> -- END;
22:19:34 SQL> -- /
22:19:34 SQL> 
22:19:34 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:19:34 SQL> 
22:19:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:19:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:19:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:19:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:19:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:19:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:19:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:19:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:19:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.18
22:19:34 SQL> 
22:19:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:19:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:19:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:19:34 SQL> 
22:19:34 SQL> --------------------------------
22:19:34 SQL> -- PREPARE BUILD (TRAINING) DATA
22:19:34 SQL> --
22:19:34 SQL> 
22:19:34 SQL> -- 1. Missing Value treatment for all Predictors and
22:19:34 SQL> -- 2. Outlier Treatment and
22:19:34 SQL> -- 3. Normalization are performed below.
22:19:34 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:19:34 SQL> --    normalized here.
22:19:34 SQL> 
22:19:34 SQL> BEGIN
22:19:34   2  	-- Perform missing value treatment for all predictors
22:19:34   3  	-- create miss tables
22:19:34   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:19:34   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:19:34   6  
22:19:34   7  	-- populate miss tables
22:19:34   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:19:34   9  	  miss_table_name => 'svmc_miss_num',
22:19:34  10  	  data_table_name => '&bldtable',
22:19:34  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:19:34  12  
22:19:34  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:19:34  14  	  miss_table_name => 'svmc_miss_cat',
22:19:34  15  	  data_table_name => '&bldtable',
22:19:34  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:19:34  17  
22:19:34  18  	-- xform input data to replace missing values
22:19:34  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:19:34  20  	  miss_table_name => 'svmc_miss_num',
22:19:34  21  	  data_table_name => '&bldtable',
22:19:34  22  	  xform_view_name => 'xformed_build_miss_num');
22:19:34  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:19:34  24  	  miss_table_name => 'svmc_miss_cat',
22:19:34  25  	  data_table_name => '&bldtable',
22:19:34  26  	  xform_view_name => 'xformed_build_miss_cat');
22:19:34  27  
22:19:34  28  	-- Perform outlier treatment.
22:19:34  29  	-- create clip table
22:19:34  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:19:34  31  
22:19:34  32  	-- populate clip table
22:19:34  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:19:34  34  	  clip_table_name => 'svmc_clip',
22:19:34  35  	  data_table_name => '&bldtable',
22:19:34  36  	  tail_frac	  => 0.025,
22:19:34  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:19:34  38  
22:19:34  39  	-- xform input data to winsorized data
22:19:34  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:19:34  41  	  clip_table_name => 'svmc_clip',
22:19:34  42  	  data_table_name => '&bldtable',
22:19:34  43  	  xform_view_name => 'svmc_winsor');
22:19:34  44  
22:19:34  45  	-- create normalization table
22:19:34  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:19:34  47  
22:19:34  48  	-- populate normalization table based on winsorized data
22:19:34  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:19:34  50  	  norm_table_name => 'svmc_norm',
22:19:34  51  	  data_table_name => 'svmc_winsor',
22:19:34  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:19:34  53  
22:19:34  54  	-- normalize the original data
22:19:34  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:19:34  56  	  norm_table_name => 'svmc_norm',
22:19:34  57  	  data_table_name => '&bldtable',
22:19:34  58  	  xform_view_name => 'svmc_build_prep');
22:19:34  59  END;
22:19:34  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.90
22:19:52 SQL> 
22:19:52 SQL> ---------------------
22:19:52 SQL> -- CREATE A NEW MODEL
22:19:52 SQL> --
22:19:52 SQL> -- Cleanup old model with the same name for repeat runs
22:19:52 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:19:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:19:52   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.87
22:19:53 SQL> 
22:19:53 SQL> -- Build a new SVM Model
22:19:53 SQL> BEGIN
22:19:53   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:19:53   3  	  model_name	      => '&model_name',
22:19:53   4  	  mining_function     => dbms_data_mining.classification,
22:19:53   5  	  data_table_name     => 'svmc_build_prep',
22:19:53   6  	  case_id_column_name => '&case_id',
22:19:53   7  	  target_column_name  => '&target',
22:19:53   8  	  settings_table_name => 'svmc_settings');
22:19:53   9  END;
22:19:53  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.24
22:20:19 SQL> 
22:20:19 SQL> -----------------------------------------------------------------------
22:20:19 SQL> --			       APPLY/score THE MODEL
22:20:19 SQL> -----------------------------------------------------------------------
22:20:19 SQL> 
22:20:19 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:20:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:20:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:20:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:20:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:20:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:20:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:20:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:20:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:20:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:20:19 SQL> -----------------------
22:20:19 SQL> -- PREPARE SCORING DATA
22:20:19 SQL> --
22:20:19 SQL> -- If the data for model creation has been prepared, then the data
22:20:19 SQL> -- to be scored using the model must be prepared in the same manner
22:20:19 SQL> -- in order to obtain meaningful results.
22:20:19 SQL> --
22:20:19 SQL> -- 1. Missing Value treatment for all Predictors and
22:20:19 SQL> -- 2. Normalization
22:20:19 SQL> -- No outlier treatment will be performed during test and apply. The
22:20:19 SQL> -- normalization step is sufficient, since the normalization parameters
22:20:19 SQL> -- already capture the effects of outlier treatment done with build data.
22:20:19 SQL> --
22:20:19 SQL> BEGIN
22:20:19   2  	-- Xform Test data to replace missing values
22:20:19   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:20:19   4  	  miss_table_name => 'svmc_miss_num',
22:20:19   5  	  data_table_name => '&scoretable',
22:20:19   6  	  xform_view_name => 'xformed_apply_miss_num');
22:20:19   7  
22:20:19   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:20:19   9  	  miss_table_name => 'svmc_miss_cat',
22:20:19  10  	  data_table_name => '&scoretable',
22:20:19  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:20:19  12  
22:20:19  13  	-- Normalize the data to be scored
22:20:19  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:20:19  15  	  norm_table_name => 'svmc_norm',
22:20:19  16  	  data_table_name => '&scoretable',
22:20:19  17  	  xform_view_name => 'svmc_apply_prep');
22:20:19  18  END;
22:20:19  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.15
22:20:20 SQL> 
22:20:20 SQL> -- Use same model_name used in score_gattn.sql
22:20:20 SQL> DEFINE model_name = 'forex14'
22:20:20 SQL> 
22:20:20 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
22:20:20 SQL> 
22:20:20 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
22:20:20   2  SELECT
22:20:20   3  prdate
22:20:20   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:20:20   5  ,sysdate
22:20:20   6  ,SUBSTR(prdate,1,3)pair
22:20:20   7  ,SUBSTR(prdate,4,19)ydate
22:20:20   8  FROM svmc_apply_prep
22:20:20   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
22:20:21 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
