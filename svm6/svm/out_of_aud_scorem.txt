
SQL*Plus: Release 11.2.0.1.0 Production on Wed Jan 5 15:44:25 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

15:44:25 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.01
15:44:25 SQL> 15:44:25 SQL> @aud_score1day.sql  2011-01-05 15:20:00
15:44:25 SQL> --
15:44:25 SQL> -- aud_score1day.sql
15:44:25 SQL> --
15:44:25 SQL> 
15:44:25 SQL> CREATE OR REPLACE VIEW sme AS
15:44:25   2  SELECT
15:44:25   3  'aud'||m.ydate prdate
15:44:25   4  ,NULL gatt
15:44:25   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:44:25   6  ,eur_g00
15:44:25   7  ,eur_g01
15:44:25   8  ,eur_g02
15:44:25   9  ,eur_g03
15:44:25  10  ,eur_g04
15:44:25  11  ,eur_g05
15:44:25  12  ,eur_g06
15:44:25  13  ,eur_g07
15:44:25  14  ,eur_g08
15:44:25  15  ,eur_g09
15:44:25  16  ,eur_g10
15:44:25  17  ,eur_g11
15:44:25  18  ,eur_g12
15:44:25  19  ,eur_g13
15:44:25  20  ,eur_g14
15:44:25  21  ,eur_g15
15:44:25  22  ,eur_g16
15:44:25  23  ,eur_g17
15:44:25  24  ,eur_g18
15:44:25  25  ,eur_g19
15:44:25  26  ,eur_g20
15:44:25  27  ,eur_g21
15:44:25  28  ,eur_g22
15:44:25  29  ,eur_g23
15:44:25  30  ,eur_g24
15:44:25  31  ,eur_g25
15:44:25  32  ,eur_g26
15:44:25  33  ,eur_g27
15:44:25  34  ,eur_g28
15:44:25  35  ,eur_g29
15:44:25  36  ,eur_g30
15:44:25  37  ,eur_g31
15:44:25  38  ,eur_g32
15:44:25  39  ,eur_g33
15:44:25  40  ,eur_g34
15:44:25  41  ,eur_g35
15:44:25  42  ,eur_g36
15:44:25  43  ,eur_g37
15:44:25  44  ,eur_g38
15:44:25  45  ,eur_g39
15:44:25  46  ,eur_g40
15:44:25  47  ,eur_g41
15:44:25  48  ,aud_g00
15:44:25  49  ,aud_g01
15:44:25  50  ,aud_g02
15:44:25  51  ,aud_g03
15:44:25  52  ,aud_g04
15:44:25  53  ,aud_g05
15:44:25  54  ,aud_g06
15:44:25  55  ,aud_g07
15:44:25  56  ,aud_g08
15:44:25  57  ,aud_g09
15:44:25  58  ,aud_g10
15:44:25  59  ,aud_g11
15:44:25  60  ,aud_g12
15:44:25  61  ,aud_g13
15:44:25  62  ,aud_g14
15:44:25  63  ,aud_g15
15:44:25  64  ,aud_g16
15:44:25  65  ,aud_g17
15:44:25  66  ,aud_g18
15:44:25  67  ,aud_g19
15:44:25  68  ,aud_g20
15:44:25  69  ,aud_g21
15:44:25  70  ,aud_g22
15:44:25  71  ,aud_g23
15:44:25  72  ,aud_g24
15:44:25  73  ,aud_g25
15:44:25  74  ,aud_g26
15:44:25  75  ,aud_g27
15:44:25  76  ,aud_g28
15:44:25  77  ,aud_g29
15:44:25  78  ,aud_g30
15:44:25  79  ,aud_g31
15:44:25  80  ,aud_g32
15:44:25  81  ,aud_g33
15:44:25  82  ,aud_g34
15:44:25  83  ,aud_g35
15:44:25  84  ,aud_g36
15:44:25  85  ,aud_g37
15:44:25  86  ,aud_g38
15:44:25  87  ,aud_g39
15:44:25  88  ,aud_g40
15:44:25  89  ,aud_g41
15:44:25  90  ,gbp_g00
15:44:25  91  ,gbp_g01
15:44:25  92  ,gbp_g02
15:44:25  93  ,gbp_g03
15:44:25  94  ,gbp_g04
15:44:25  95  ,gbp_g05
15:44:25  96  ,gbp_g06
15:44:25  97  ,gbp_g07
15:44:25  98  ,gbp_g08
15:44:25  99  ,gbp_g09
15:44:25 100  ,gbp_g10
15:44:25 101  ,gbp_g11
15:44:25 102  ,gbp_g12
15:44:25 103  ,gbp_g13
15:44:25 104  ,gbp_g14
15:44:25 105  ,gbp_g15
15:44:25 106  ,gbp_g16
15:44:25 107  ,gbp_g17
15:44:25 108  ,gbp_g18
15:44:25 109  ,gbp_g19
15:44:25 110  ,gbp_g20
15:44:25 111  ,gbp_g21
15:44:25 112  ,gbp_g22
15:44:25 113  ,gbp_g23
15:44:25 114  ,gbp_g24
15:44:25 115  ,gbp_g25
15:44:25 116  ,gbp_g26
15:44:25 117  ,gbp_g27
15:44:25 118  ,gbp_g28
15:44:25 119  ,gbp_g29
15:44:25 120  ,gbp_g30
15:44:25 121  ,gbp_g31
15:44:25 122  ,gbp_g32
15:44:25 123  ,gbp_g33
15:44:25 124  ,gbp_g34
15:44:25 125  ,gbp_g35
15:44:25 126  ,gbp_g36
15:44:25 127  ,gbp_g37
15:44:25 128  ,gbp_g38
15:44:25 129  ,gbp_g39
15:44:25 130  ,gbp_g40
15:44:25 131  ,gbp_g41
15:44:25 132  ,jpy_g00
15:44:25 133  ,jpy_g01
15:44:25 134  ,jpy_g02
15:44:25 135  ,jpy_g03
15:44:25 136  ,jpy_g04
15:44:25 137  ,jpy_g05
15:44:25 138  ,jpy_g06
15:44:25 139  ,jpy_g07
15:44:25 140  ,jpy_g08
15:44:25 141  ,jpy_g09
15:44:25 142  ,jpy_g10
15:44:25 143  ,jpy_g11
15:44:25 144  ,jpy_g12
15:44:25 145  ,jpy_g13
15:44:25 146  ,jpy_g14
15:44:25 147  ,jpy_g15
15:44:25 148  ,jpy_g16
15:44:25 149  ,jpy_g17
15:44:25 150  ,jpy_g18
15:44:25 151  ,jpy_g19
15:44:25 152  ,jpy_g20
15:44:25 153  ,jpy_g21
15:44:25 154  ,jpy_g22
15:44:25 155  ,jpy_g23
15:44:25 156  ,jpy_g24
15:44:25 157  ,jpy_g25
15:44:25 158  ,jpy_g26
15:44:25 159  ,jpy_g27
15:44:25 160  ,jpy_g28
15:44:25 161  ,jpy_g29
15:44:25 162  ,jpy_g30
15:44:25 163  ,jpy_g31
15:44:25 164  ,jpy_g32
15:44:25 165  ,jpy_g33
15:44:25 166  ,jpy_g34
15:44:25 167  ,jpy_g35
15:44:25 168  ,jpy_g36
15:44:25 169  ,jpy_g37
15:44:25 170  ,jpy_g38
15:44:25 171  ,jpy_g39
15:44:25 172  ,jpy_g40
15:44:25 173  ,jpy_g41
15:44:25 174  ,cad_g00
15:44:25 175  ,cad_g01
15:44:25 176  ,cad_g02
15:44:25 177  ,cad_g03
15:44:25 178  ,cad_g04
15:44:25 179  ,cad_g05
15:44:25 180  ,cad_g06
15:44:25 181  ,cad_g07
15:44:25 182  ,cad_g08
15:44:25 183  ,cad_g09
15:44:25 184  ,cad_g10
15:44:25 185  ,cad_g11
15:44:25 186  ,cad_g12
15:44:25 187  ,cad_g13
15:44:25 188  ,cad_g14
15:44:25 189  ,cad_g15
15:44:25 190  ,cad_g16
15:44:25 191  ,cad_g17
15:44:25 192  ,cad_g18
15:44:25 193  ,cad_g19
15:44:25 194  ,cad_g20
15:44:25 195  ,cad_g21
15:44:25 196  ,cad_g22
15:44:25 197  ,cad_g23
15:44:25 198  ,cad_g24
15:44:25 199  ,cad_g25
15:44:25 200  ,cad_g26
15:44:25 201  ,cad_g27
15:44:25 202  ,cad_g28
15:44:25 203  ,cad_g29
15:44:25 204  ,cad_g30
15:44:25 205  ,cad_g31
15:44:25 206  ,cad_g32
15:44:25 207  ,cad_g33
15:44:25 208  ,cad_g34
15:44:25 209  ,cad_g35
15:44:25 210  ,cad_g36
15:44:25 211  ,cad_g37
15:44:25 212  ,cad_g38
15:44:25 213  ,cad_g39
15:44:25 214  ,cad_g40
15:44:25 215  ,cad_g41
15:44:25 216  ,chf_g00
15:44:25 217  ,chf_g01
15:44:25 218  ,chf_g02
15:44:25 219  ,chf_g03
15:44:25 220  ,chf_g04
15:44:25 221  ,chf_g05
15:44:25 222  ,chf_g06
15:44:25 223  ,chf_g07
15:44:25 224  ,chf_g08
15:44:25 225  ,chf_g09
15:44:25 226  ,chf_g10
15:44:25 227  ,chf_g11
15:44:25 228  ,chf_g12
15:44:25 229  ,chf_g13
15:44:25 230  ,chf_g14
15:44:25 231  ,chf_g15
15:44:25 232  ,chf_g16
15:44:25 233  ,chf_g17
15:44:25 234  ,chf_g18
15:44:25 235  ,chf_g19
15:44:25 236  ,chf_g20
15:44:25 237  ,chf_g21
15:44:25 238  ,chf_g22
15:44:25 239  ,chf_g23
15:44:25 240  ,chf_g24
15:44:25 241  ,chf_g25
15:44:25 242  ,chf_g26
15:44:25 243  ,chf_g27
15:44:25 244  ,chf_g28
15:44:25 245  ,chf_g29
15:44:25 246  ,chf_g30
15:44:25 247  ,chf_g31
15:44:25 248  ,chf_g32
15:44:25 249  ,chf_g33
15:44:25 250  ,chf_g34
15:44:25 251  ,chf_g35
15:44:25 252  ,chf_g36
15:44:25 253  ,chf_g37
15:44:25 254  ,chf_g38
15:44:25 255  ,chf_g39
15:44:25 256  ,chf_g40
15:44:25 257  ,chf_g41
15:44:25 258  FROM aud_ms6 m
15:44:25 259  WHERE m.ydate = '&1'||' '||'&2'
15:44:25 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'15:20:00'

View created.

Elapsed: 00:00:00.15
15:44:25 SQL> 
15:44:25 SQL> -- rpt
15:44:25 SQL> -- We should see just 1 row:
15:44:25 SQL> 
15:44:25 SQL> SELECT COUNT(prdate) FROM sme
15:44:25   2  
15:44:25 SQL> -- Build the model:
15:44:25 SQL> CREATE OR REPLACE VIEW bme AS
15:44:25   2  SELECT
15:44:25   3  'aud'||m.ydate prdate
15:44:25   4  ,gatt
15:44:25   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:44:25   6  ,eur_g00
15:44:25   7  ,eur_g01
15:44:25   8  ,eur_g02
15:44:25   9  ,eur_g03
15:44:25  10  ,eur_g04
15:44:25  11  ,eur_g05
15:44:25  12  ,eur_g06
15:44:25  13  ,eur_g07
15:44:25  14  ,eur_g08
15:44:25  15  ,eur_g09
15:44:25  16  ,eur_g10
15:44:25  17  ,eur_g11
15:44:25  18  ,eur_g12
15:44:25  19  ,eur_g13
15:44:25  20  ,eur_g14
15:44:25  21  ,eur_g15
15:44:25  22  ,eur_g16
15:44:25  23  ,eur_g17
15:44:25  24  ,eur_g18
15:44:25  25  ,eur_g19
15:44:25  26  ,eur_g20
15:44:25  27  ,eur_g21
15:44:25  28  ,eur_g22
15:44:25  29  ,eur_g23
15:44:25  30  ,eur_g24
15:44:25  31  ,eur_g25
15:44:25  32  ,eur_g26
15:44:25  33  ,eur_g27
15:44:25  34  ,eur_g28
15:44:25  35  ,eur_g29
15:44:25  36  ,eur_g30
15:44:25  37  ,eur_g31
15:44:25  38  ,eur_g32
15:44:25  39  ,eur_g33
15:44:25  40  ,eur_g34
15:44:25  41  ,eur_g35
15:44:25  42  ,eur_g36
15:44:25  43  ,eur_g37
15:44:25  44  ,eur_g38
15:44:25  45  ,eur_g39
15:44:25  46  ,eur_g40
15:44:25  47  ,eur_g41
15:44:25  48  ,aud_g00
15:44:25  49  ,aud_g01
15:44:25  50  ,aud_g02
15:44:25  51  ,aud_g03
15:44:25  52  ,aud_g04
15:44:25  53  ,aud_g05
15:44:25  54  ,aud_g06
15:44:25  55  ,aud_g07
15:44:25  56  ,aud_g08
15:44:25  57  ,aud_g09
15:44:25  58  ,aud_g10
15:44:25  59  ,aud_g11
15:44:25  60  ,aud_g12
15:44:25  61  ,aud_g13
15:44:25  62  ,aud_g14
15:44:25  63  ,aud_g15
15:44:25  64  ,aud_g16
15:44:25  65  ,aud_g17
15:44:25  66  ,aud_g18
15:44:25  67  ,aud_g19
15:44:25  68  ,aud_g20
15:44:25  69  ,aud_g21
15:44:25  70  ,aud_g22
15:44:25  71  ,aud_g23
15:44:25  72  ,aud_g24
15:44:25  73  ,aud_g25
15:44:25  74  ,aud_g26
15:44:25  75  ,aud_g27
15:44:25  76  ,aud_g28
15:44:25  77  ,aud_g29
15:44:25  78  ,aud_g30
15:44:25  79  ,aud_g31
15:44:25  80  ,aud_g32
15:44:25  81  ,aud_g33
15:44:25  82  ,aud_g34
15:44:25  83  ,aud_g35
15:44:25  84  ,aud_g36
15:44:25  85  ,aud_g37
15:44:25  86  ,aud_g38
15:44:25  87  ,aud_g39
15:44:25  88  ,aud_g40
15:44:25  89  ,aud_g41
15:44:25  90  ,gbp_g00
15:44:25  91  ,gbp_g01
15:44:25  92  ,gbp_g02
15:44:25  93  ,gbp_g03
15:44:25  94  ,gbp_g04
15:44:25  95  ,gbp_g05
15:44:25  96  ,gbp_g06
15:44:25  97  ,gbp_g07
15:44:25  98  ,gbp_g08
15:44:25  99  ,gbp_g09
15:44:25 100  ,gbp_g10
15:44:25 101  ,gbp_g11
15:44:25 102  ,gbp_g12
15:44:25 103  ,gbp_g13
15:44:25 104  ,gbp_g14
15:44:25 105  ,gbp_g15
15:44:25 106  ,gbp_g16
15:44:25 107  ,gbp_g17
15:44:25 108  ,gbp_g18
15:44:25 109  ,gbp_g19
15:44:25 110  ,gbp_g20
15:44:25 111  ,gbp_g21
15:44:25 112  ,gbp_g22
15:44:25 113  ,gbp_g23
15:44:25 114  ,gbp_g24
15:44:25 115  ,gbp_g25
15:44:25 116  ,gbp_g26
15:44:25 117  ,gbp_g27
15:44:25 118  ,gbp_g28
15:44:25 119  ,gbp_g29
15:44:25 120  ,gbp_g30
15:44:25 121  ,gbp_g31
15:44:25 122  ,gbp_g32
15:44:25 123  ,gbp_g33
15:44:25 124  ,gbp_g34
15:44:25 125  ,gbp_g35
15:44:25 126  ,gbp_g36
15:44:25 127  ,gbp_g37
15:44:25 128  ,gbp_g38
15:44:25 129  ,gbp_g39
15:44:25 130  ,gbp_g40
15:44:25 131  ,gbp_g41
15:44:25 132  ,jpy_g00
15:44:25 133  ,jpy_g01
15:44:25 134  ,jpy_g02
15:44:25 135  ,jpy_g03
15:44:25 136  ,jpy_g04
15:44:25 137  ,jpy_g05
15:44:25 138  ,jpy_g06
15:44:25 139  ,jpy_g07
15:44:25 140  ,jpy_g08
15:44:25 141  ,jpy_g09
15:44:25 142  ,jpy_g10
15:44:25 143  ,jpy_g11
15:44:25 144  ,jpy_g12
15:44:25 145  ,jpy_g13
15:44:25 146  ,jpy_g14
15:44:25 147  ,jpy_g15
15:44:25 148  ,jpy_g16
15:44:25 149  ,jpy_g17
15:44:25 150  ,jpy_g18
15:44:25 151  ,jpy_g19
15:44:25 152  ,jpy_g20
15:44:25 153  ,jpy_g21
15:44:25 154  ,jpy_g22
15:44:25 155  ,jpy_g23
15:44:25 156  ,jpy_g24
15:44:25 157  ,jpy_g25
15:44:25 158  ,jpy_g26
15:44:25 159  ,jpy_g27
15:44:25 160  ,jpy_g28
15:44:25 161  ,jpy_g29
15:44:25 162  ,jpy_g30
15:44:25 163  ,jpy_g31
15:44:25 164  ,jpy_g32
15:44:25 165  ,jpy_g33
15:44:25 166  ,jpy_g34
15:44:25 167  ,jpy_g35
15:44:25 168  ,jpy_g36
15:44:25 169  ,jpy_g37
15:44:25 170  ,jpy_g38
15:44:25 171  ,jpy_g39
15:44:25 172  ,jpy_g40
15:44:25 173  ,jpy_g41
15:44:25 174  ,cad_g00
15:44:25 175  ,cad_g01
15:44:25 176  ,cad_g02
15:44:25 177  ,cad_g03
15:44:25 178  ,cad_g04
15:44:25 179  ,cad_g05
15:44:25 180  ,cad_g06
15:44:25 181  ,cad_g07
15:44:25 182  ,cad_g08
15:44:25 183  ,cad_g09
15:44:25 184  ,cad_g10
15:44:25 185  ,cad_g11
15:44:25 186  ,cad_g12
15:44:25 187  ,cad_g13
15:44:25 188  ,cad_g14
15:44:25 189  ,cad_g15
15:44:25 190  ,cad_g16
15:44:25 191  ,cad_g17
15:44:25 192  ,cad_g18
15:44:25 193  ,cad_g19
15:44:25 194  ,cad_g20
15:44:25 195  ,cad_g21
15:44:25 196  ,cad_g22
15:44:25 197  ,cad_g23
15:44:25 198  ,cad_g24
15:44:25 199  ,cad_g25
15:44:25 200  ,cad_g26
15:44:25 201  ,cad_g27
15:44:25 202  ,cad_g28
15:44:25 203  ,cad_g29
15:44:25 204  ,cad_g30
15:44:25 205  ,cad_g31
15:44:25 206  ,cad_g32
15:44:25 207  ,cad_g33
15:44:25 208  ,cad_g34
15:44:25 209  ,cad_g35
15:44:25 210  ,cad_g36
15:44:25 211  ,cad_g37
15:44:25 212  ,cad_g38
15:44:25 213  ,cad_g39
15:44:25 214  ,cad_g40
15:44:25 215  ,cad_g41
15:44:25 216  ,chf_g00
15:44:25 217  ,chf_g01
15:44:25 218  ,chf_g02
15:44:25 219  ,chf_g03
15:44:25 220  ,chf_g04
15:44:25 221  ,chf_g05
15:44:25 222  ,chf_g06
15:44:25 223  ,chf_g07
15:44:26 224  ,chf_g08
15:44:26 225  ,chf_g09
15:44:26 226  ,chf_g10
15:44:26 227  ,chf_g11
15:44:26 228  ,chf_g12
15:44:26 229  ,chf_g13
15:44:26 230  ,chf_g14
15:44:26 231  ,chf_g15
15:44:26 232  ,chf_g16
15:44:26 233  ,chf_g17
15:44:26 234  ,chf_g18
15:44:26 235  ,chf_g19
15:44:26 236  ,chf_g20
15:44:26 237  ,chf_g21
15:44:26 238  ,chf_g22
15:44:26 239  ,chf_g23
15:44:26 240  ,chf_g24
15:44:26 241  ,chf_g25
15:44:26 242  ,chf_g26
15:44:26 243  ,chf_g27
15:44:26 244  ,chf_g28
15:44:26 245  ,chf_g29
15:44:26 246  ,chf_g30
15:44:26 247  ,chf_g31
15:44:26 248  ,chf_g32
15:44:26 249  ,chf_g33
15:44:26 250  ,chf_g34
15:44:26 251  ,chf_g35
15:44:26 252  ,chf_g36
15:44:26 253  ,chf_g37
15:44:26 254  ,chf_g38
15:44:26 255  ,chf_g39
15:44:26 256  ,chf_g40
15:44:26 257  ,chf_g41
15:44:26 258  FROM aud_ms6 m
15:44:26 259  WHERE gatt IN('nup','up')
15:44:26 260  AND 1+m.ydate < '&1'||' '||'&2'
15:44:26 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'15:20:00'

View created.

Elapsed: 00:00:00.15
15:44:26 SQL> 
15:44:26 SQL> -- rpt
15:44:26 SQL> 
15:44:26 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
15:44:26   2  
15:44:26 SQL> SELECT MAX(prdate) FROM bme
15:44:26   2  
15:44:26 SQL> -- Now build model from bme and score sme
15:44:26 SQL> @score1.sql
15:44:26 SQL> -- score1.sql
15:44:26 SQL> 
15:44:26 SQL> -- Does the 1st SVM score
15:44:26 SQL> 
15:44:26 SQL> -- Fill up svmc_apply_prep
15:44:26 SQL> @score.sql
15:44:26 SQL> --
15:44:26 SQL> -- score.sql
15:44:26 SQL> --
15:44:26 SQL> 
15:44:26 SQL> -- usage: score.sql
15:44:26 SQL> 
15:44:26 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:44:26 SQL> 
15:44:26 SQL> DEFINE target	= 'gatt'
15:44:26 SQL> DEFINE model_name = 'forex15'
15:44:26 SQL> DEFINE bldtable	= 'bme'
15:44:26 SQL> DEFINE scoretable = 'sme'
15:44:26 SQL> DEFINE case_id	= 'prdate'
15:44:26 SQL> 
15:44:26 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:44:26 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:44:26 SQL> 
15:44:26 SQL> -- Builds an SVM model using pl/sql.
15:44:26 SQL> 
15:44:26 SQL> -----------------------------------------------------------------------
15:44:26 SQL> --			    BUILD THE MODEL
15:44:26 SQL> -----------------------------------------------------------------------
15:44:26 SQL> 
15:44:26 SQL> -- Cleanup old build data preparation objects for repeat runs
15:44:26 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
15:44:26 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:44:26 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
15:44:26 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
15:44:26 SQL> 
15:44:26 SQL> 
15:44:26 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:44:26 SQL> --
15:44:26 SQL> -- DROP	TABLE svmc_settings ;
15:44:26 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:44:26 SQL> -- DELETE svmc_settings;
15:44:26 SQL> 
15:44:26 SQL> -- The default classification algorithm is Naive Bayes. So override
15:44:26 SQL> -- this choice to SVM using a settings table.
15:44:26 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:44:26 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:44:26 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:44:26 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:44:26 SQL> -- models.
15:44:26 SQL> --
15:44:26 SQL> 
15:44:26 SQL> -- Do this once and then comment it out.
15:44:26 SQL> -- That makes script go faster.
15:44:26 SQL> -- BEGIN
15:44:26 SQL> -- -- Populate settings table
15:44:26 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:44:26 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:44:26 SQL> --
15:44:26 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:44:26 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:44:26 SQL> --
15:44:26 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:44:26 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:44:26 SQL> --   COMMIT;
15:44:26 SQL> -- END;
15:44:26 SQL> -- /
15:44:26 SQL> 
15:44:26 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:44:26 SQL> 
15:44:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:44:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:44:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:44:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:44:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:44:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:44:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:44:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:44:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:44:26 SQL> 
15:44:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:44:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:44:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:44:26 SQL> 
15:44:26 SQL> --------------------------------
15:44:26 SQL> -- PREPARE BUILD (TRAINING) DATA
15:44:26 SQL> --
15:44:26 SQL> 
15:44:26 SQL> -- 1. Missing Value treatment for all Predictors and
15:44:26 SQL> -- 2. Outlier Treatment and
15:44:26 SQL> -- 3. Normalization are performed below.
15:44:26 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:44:26 SQL> --    normalized here.
15:44:26 SQL> 
15:44:26 SQL> BEGIN
15:44:26   2  	-- Perform missing value treatment for all predictors
15:44:26   3  	-- create miss tables
15:44:26   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:44:26   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:44:26   6  
15:44:26   7  	-- populate miss tables
15:44:26   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:44:26   9  	  miss_table_name => 'svmc_miss_num',
15:44:26  10  	  data_table_name => '&bldtable',
15:44:26  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:44:26  12  
15:44:26  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:44:26  14  	  miss_table_name => 'svmc_miss_cat',
15:44:26  15  	  data_table_name => '&bldtable',
15:44:26  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:44:26  17  
15:44:26  18  	-- xform input data to replace missing values
15:44:26  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:44:26  20  	  miss_table_name => 'svmc_miss_num',
15:44:26  21  	  data_table_name => '&bldtable',
15:44:26  22  	  xform_view_name => 'xformed_build_miss_num');
15:44:26  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:44:26  24  	  miss_table_name => 'svmc_miss_cat',
15:44:26  25  	  data_table_name => '&bldtable',
15:44:26  26  	  xform_view_name => 'xformed_build_miss_cat');
15:44:26  27  
15:44:26  28  	-- Perform outlier treatment.
15:44:26  29  	-- create clip table
15:44:26  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:44:26  31  
15:44:26  32  	-- populate clip table
15:44:26  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:44:26  34  	  clip_table_name => 'svmc_clip',
15:44:26  35  	  data_table_name => '&bldtable',
15:44:26  36  	  tail_frac	  => 0.025,
15:44:26  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:44:26  38  
15:44:26  39  	-- xform input data to winsorized data
15:44:26  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:44:26  41  	  clip_table_name => 'svmc_clip',
15:44:26  42  	  data_table_name => '&bldtable',
15:44:26  43  	  xform_view_name => 'svmc_winsor');
15:44:26  44  
15:44:26  45  	-- create normalization table
15:44:26  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:44:26  47  
15:44:26  48  	-- populate normalization table based on winsorized data
15:44:26  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:44:26  50  	  norm_table_name => 'svmc_norm',
15:44:26  51  	  data_table_name => 'svmc_winsor',
15:44:26  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:44:26  53  
15:44:26  54  	-- normalize the original data
15:44:26  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:44:26  56  	  norm_table_name => 'svmc_norm',
15:44:26  57  	  data_table_name => '&bldtable',
15:44:26  58  	  xform_view_name => 'svmc_build_prep');
15:44:26  59  END;
15:44:26  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.82
15:44:45 SQL> 
15:44:45 SQL> ---------------------
15:44:45 SQL> -- CREATE A NEW MODEL
15:44:45 SQL> --
15:44:45 SQL> -- Cleanup old model with the same name for repeat runs
15:44:45 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:44:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:44:45   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.72
15:44:45 SQL> 
15:44:45 SQL> -- Build a new SVM Model
15:44:45 SQL> BEGIN
15:44:45   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:44:45   3  	  model_name	      => '&model_name',
15:44:45   4  	  mining_function     => dbms_data_mining.classification,
15:44:45   5  	  data_table_name     => 'svmc_build_prep',
15:44:45   6  	  case_id_column_name => '&case_id',
15:44:45   7  	  target_column_name  => '&target',
15:44:45   8  	  settings_table_name => 'svmc_settings');
15:44:45   9  END;
15:44:45  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.43
15:45:15 SQL> 
15:45:15 SQL> -----------------------------------------------------------------------
15:45:15 SQL> --			       APPLY/score THE MODEL
15:45:15 SQL> -----------------------------------------------------------------------
15:45:15 SQL> 
15:45:15 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:45:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:45:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:45:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:45:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:45:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:45:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
15:45:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:45:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:45:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
15:45:15 SQL> -----------------------
15:45:15 SQL> -- PREPARE SCORING DATA
15:45:15 SQL> --
15:45:15 SQL> -- If the data for model creation has been prepared, then the data
15:45:15 SQL> -- to be scored using the model must be prepared in the same manner
15:45:15 SQL> -- in order to obtain meaningful results.
15:45:15 SQL> --
15:45:15 SQL> -- 1. Missing Value treatment for all Predictors and
15:45:15 SQL> -- 2. Normalization
15:45:15 SQL> -- No outlier treatment will be performed during test and apply. The
15:45:15 SQL> -- normalization step is sufficient, since the normalization parameters
15:45:15 SQL> -- already capture the effects of outlier treatment done with build data.
15:45:15 SQL> --
15:45:15 SQL> BEGIN
15:45:15   2  	-- Xform Test data to replace missing values
15:45:15   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:45:15   4  	  miss_table_name => 'svmc_miss_num',
15:45:15   5  	  data_table_name => '&scoretable',
15:45:15   6  	  xform_view_name => 'xformed_apply_miss_num');
15:45:15   7  
15:45:15   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:45:15   9  	  miss_table_name => 'svmc_miss_cat',
15:45:15  10  	  data_table_name => '&scoretable',
15:45:15  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:45:15  12  
15:45:15  13  	-- Normalize the data to be scored
15:45:15  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:45:15  15  	  norm_table_name => 'svmc_norm',
15:45:15  16  	  data_table_name => '&scoretable',
15:45:15  17  	  xform_view_name => 'svmc_apply_prep');
15:45:15  18  END;
15:45:15  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.30
15:45:16 SQL> 
15:45:16 SQL> -- Use same model_name used in score.sql
15:45:16 SQL> DEFINE model_name = 'forex15'
15:45:16 SQL> 
15:45:16 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
15:45:16 SQL> 
15:45:16 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
15:45:17 SQL> 
15:45:17 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
15:45:17   2  SELECT
15:45:17   3  prdate
15:45:17   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:45:17   5  ,sysdate
15:45:17   6  ,SUBSTR(prdate,1,3)pair
15:45:17   7  ,SUBSTR(prdate,4,19)ydate
15:45:17   8  FROM svmc_apply_prep
15:45:17   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.22
15:45:17 SQL> @aud_score1day.sql  2011-01-05 15:25:00
15:45:17 SQL> --
15:45:17 SQL> -- aud_score1day.sql
15:45:17 SQL> --
15:45:17 SQL> 
15:45:17 SQL> CREATE OR REPLACE VIEW sme AS
15:45:17   2  SELECT
15:45:17   3  'aud'||m.ydate prdate
15:45:17   4  ,NULL gatt
15:45:17   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:45:17   6  ,eur_g00
15:45:17   7  ,eur_g01
15:45:17   8  ,eur_g02
15:45:17   9  ,eur_g03
15:45:17  10  ,eur_g04
15:45:17  11  ,eur_g05
15:45:17  12  ,eur_g06
15:45:17  13  ,eur_g07
15:45:17  14  ,eur_g08
15:45:17  15  ,eur_g09
15:45:17  16  ,eur_g10
15:45:17  17  ,eur_g11
15:45:17  18  ,eur_g12
15:45:17  19  ,eur_g13
15:45:17  20  ,eur_g14
15:45:17  21  ,eur_g15
15:45:17  22  ,eur_g16
15:45:17  23  ,eur_g17
15:45:17  24  ,eur_g18
15:45:17  25  ,eur_g19
15:45:17  26  ,eur_g20
15:45:17  27  ,eur_g21
15:45:17  28  ,eur_g22
15:45:17  29  ,eur_g23
15:45:17  30  ,eur_g24
15:45:17  31  ,eur_g25
15:45:17  32  ,eur_g26
15:45:17  33  ,eur_g27
15:45:17  34  ,eur_g28
15:45:17  35  ,eur_g29
15:45:17  36  ,eur_g30
15:45:17  37  ,eur_g31
15:45:17  38  ,eur_g32
15:45:17  39  ,eur_g33
15:45:17  40  ,eur_g34
15:45:17  41  ,eur_g35
15:45:17  42  ,eur_g36
15:45:17  43  ,eur_g37
15:45:17  44  ,eur_g38
15:45:17  45  ,eur_g39
15:45:17  46  ,eur_g40
15:45:17  47  ,eur_g41
15:45:17  48  ,aud_g00
15:45:17  49  ,aud_g01
15:45:17  50  ,aud_g02
15:45:17  51  ,aud_g03
15:45:17  52  ,aud_g04
15:45:17  53  ,aud_g05
15:45:17  54  ,aud_g06
15:45:17  55  ,aud_g07
15:45:17  56  ,aud_g08
15:45:17  57  ,aud_g09
15:45:17  58  ,aud_g10
15:45:17  59  ,aud_g11
15:45:17  60  ,aud_g12
15:45:17  61  ,aud_g13
15:45:17  62  ,aud_g14
15:45:17  63  ,aud_g15
15:45:17  64  ,aud_g16
15:45:17  65  ,aud_g17
15:45:17  66  ,aud_g18
15:45:17  67  ,aud_g19
15:45:17  68  ,aud_g20
15:45:17  69  ,aud_g21
15:45:17  70  ,aud_g22
15:45:17  71  ,aud_g23
15:45:17  72  ,aud_g24
15:45:17  73  ,aud_g25
15:45:17  74  ,aud_g26
15:45:17  75  ,aud_g27
15:45:17  76  ,aud_g28
15:45:17  77  ,aud_g29
15:45:17  78  ,aud_g30
15:45:17  79  ,aud_g31
15:45:17  80  ,aud_g32
15:45:17  81  ,aud_g33
15:45:17  82  ,aud_g34
15:45:17  83  ,aud_g35
15:45:17  84  ,aud_g36
15:45:17  85  ,aud_g37
15:45:17  86  ,aud_g38
15:45:17  87  ,aud_g39
15:45:17  88  ,aud_g40
15:45:17  89  ,aud_g41
15:45:17  90  ,gbp_g00
15:45:17  91  ,gbp_g01
15:45:17  92  ,gbp_g02
15:45:17  93  ,gbp_g03
15:45:17  94  ,gbp_g04
15:45:17  95  ,gbp_g05
15:45:17  96  ,gbp_g06
15:45:17  97  ,gbp_g07
15:45:17  98  ,gbp_g08
15:45:17  99  ,gbp_g09
15:45:17 100  ,gbp_g10
15:45:17 101  ,gbp_g11
15:45:17 102  ,gbp_g12
15:45:17 103  ,gbp_g13
15:45:17 104  ,gbp_g14
15:45:17 105  ,gbp_g15
15:45:17 106  ,gbp_g16
15:45:17 107  ,gbp_g17
15:45:17 108  ,gbp_g18
15:45:17 109  ,gbp_g19
15:45:17 110  ,gbp_g20
15:45:17 111  ,gbp_g21
15:45:17 112  ,gbp_g22
15:45:17 113  ,gbp_g23
15:45:17 114  ,gbp_g24
15:45:17 115  ,gbp_g25
15:45:17 116  ,gbp_g26
15:45:17 117  ,gbp_g27
15:45:17 118  ,gbp_g28
15:45:17 119  ,gbp_g29
15:45:17 120  ,gbp_g30
15:45:17 121  ,gbp_g31
15:45:17 122  ,gbp_g32
15:45:17 123  ,gbp_g33
15:45:17 124  ,gbp_g34
15:45:17 125  ,gbp_g35
15:45:17 126  ,gbp_g36
15:45:17 127  ,gbp_g37
15:45:17 128  ,gbp_g38
15:45:17 129  ,gbp_g39
15:45:17 130  ,gbp_g40
15:45:17 131  ,gbp_g41
15:45:17 132  ,jpy_g00
15:45:17 133  ,jpy_g01
15:45:17 134  ,jpy_g02
15:45:17 135  ,jpy_g03
15:45:17 136  ,jpy_g04
15:45:17 137  ,jpy_g05
15:45:17 138  ,jpy_g06
15:45:17 139  ,jpy_g07
15:45:17 140  ,jpy_g08
15:45:17 141  ,jpy_g09
15:45:17 142  ,jpy_g10
15:45:17 143  ,jpy_g11
15:45:17 144  ,jpy_g12
15:45:17 145  ,jpy_g13
15:45:17 146  ,jpy_g14
15:45:17 147  ,jpy_g15
15:45:17 148  ,jpy_g16
15:45:17 149  ,jpy_g17
15:45:17 150  ,jpy_g18
15:45:17 151  ,jpy_g19
15:45:17 152  ,jpy_g20
15:45:17 153  ,jpy_g21
15:45:17 154  ,jpy_g22
15:45:17 155  ,jpy_g23
15:45:17 156  ,jpy_g24
15:45:17 157  ,jpy_g25
15:45:17 158  ,jpy_g26
15:45:17 159  ,jpy_g27
15:45:17 160  ,jpy_g28
15:45:17 161  ,jpy_g29
15:45:17 162  ,jpy_g30
15:45:17 163  ,jpy_g31
15:45:17 164  ,jpy_g32
15:45:17 165  ,jpy_g33
15:45:17 166  ,jpy_g34
15:45:17 167  ,jpy_g35
15:45:17 168  ,jpy_g36
15:45:17 169  ,jpy_g37
15:45:17 170  ,jpy_g38
15:45:17 171  ,jpy_g39
15:45:17 172  ,jpy_g40
15:45:17 173  ,jpy_g41
15:45:17 174  ,cad_g00
15:45:17 175  ,cad_g01
15:45:17 176  ,cad_g02
15:45:17 177  ,cad_g03
15:45:17 178  ,cad_g04
15:45:17 179  ,cad_g05
15:45:17 180  ,cad_g06
15:45:17 181  ,cad_g07
15:45:17 182  ,cad_g08
15:45:17 183  ,cad_g09
15:45:17 184  ,cad_g10
15:45:17 185  ,cad_g11
15:45:17 186  ,cad_g12
15:45:17 187  ,cad_g13
15:45:17 188  ,cad_g14
15:45:17 189  ,cad_g15
15:45:17 190  ,cad_g16
15:45:17 191  ,cad_g17
15:45:17 192  ,cad_g18
15:45:17 193  ,cad_g19
15:45:17 194  ,cad_g20
15:45:17 195  ,cad_g21
15:45:17 196  ,cad_g22
15:45:17 197  ,cad_g23
15:45:17 198  ,cad_g24
15:45:17 199  ,cad_g25
15:45:17 200  ,cad_g26
15:45:17 201  ,cad_g27
15:45:17 202  ,cad_g28
15:45:17 203  ,cad_g29
15:45:17 204  ,cad_g30
15:45:17 205  ,cad_g31
15:45:17 206  ,cad_g32
15:45:17 207  ,cad_g33
15:45:17 208  ,cad_g34
15:45:17 209  ,cad_g35
15:45:17 210  ,cad_g36
15:45:17 211  ,cad_g37
15:45:17 212  ,cad_g38
15:45:17 213  ,cad_g39
15:45:17 214  ,cad_g40
15:45:17 215  ,cad_g41
15:45:17 216  ,chf_g00
15:45:17 217  ,chf_g01
15:45:17 218  ,chf_g02
15:45:17 219  ,chf_g03
15:45:17 220  ,chf_g04
15:45:17 221  ,chf_g05
15:45:17 222  ,chf_g06
15:45:17 223  ,chf_g07
15:45:17 224  ,chf_g08
15:45:17 225  ,chf_g09
15:45:17 226  ,chf_g10
15:45:17 227  ,chf_g11
15:45:17 228  ,chf_g12
15:45:17 229  ,chf_g13
15:45:17 230  ,chf_g14
15:45:17 231  ,chf_g15
15:45:17 232  ,chf_g16
15:45:17 233  ,chf_g17
15:45:17 234  ,chf_g18
15:45:17 235  ,chf_g19
15:45:17 236  ,chf_g20
15:45:17 237  ,chf_g21
15:45:17 238  ,chf_g22
15:45:17 239  ,chf_g23
15:45:17 240  ,chf_g24
15:45:17 241  ,chf_g25
15:45:17 242  ,chf_g26
15:45:17 243  ,chf_g27
15:45:17 244  ,chf_g28
15:45:17 245  ,chf_g29
15:45:17 246  ,chf_g30
15:45:17 247  ,chf_g31
15:45:17 248  ,chf_g32
15:45:17 249  ,chf_g33
15:45:17 250  ,chf_g34
15:45:17 251  ,chf_g35
15:45:17 252  ,chf_g36
15:45:17 253  ,chf_g37
15:45:17 254  ,chf_g38
15:45:17 255  ,chf_g39
15:45:17 256  ,chf_g40
15:45:17 257  ,chf_g41
15:45:17 258  FROM aud_ms6 m
15:45:17 259  WHERE m.ydate = '&1'||' '||'&2'
15:45:17 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'15:25:00'

View created.

Elapsed: 00:00:00.12
15:45:17 SQL> 
15:45:17 SQL> -- rpt
15:45:17 SQL> -- We should see just 1 row:
15:45:17 SQL> 
15:45:17 SQL> SELECT COUNT(prdate) FROM sme
15:45:17   2  
15:45:17 SQL> -- Build the model:
15:45:17 SQL> CREATE OR REPLACE VIEW bme AS
15:45:17   2  SELECT
15:45:17   3  'aud'||m.ydate prdate
15:45:17   4  ,gatt
15:45:17   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:45:17   6  ,eur_g00
15:45:17   7  ,eur_g01
15:45:17   8  ,eur_g02
15:45:17   9  ,eur_g03
15:45:17  10  ,eur_g04
15:45:17  11  ,eur_g05
15:45:17  12  ,eur_g06
15:45:17  13  ,eur_g07
15:45:17  14  ,eur_g08
15:45:17  15  ,eur_g09
15:45:17  16  ,eur_g10
15:45:17  17  ,eur_g11
15:45:17  18  ,eur_g12
15:45:17  19  ,eur_g13
15:45:17  20  ,eur_g14
15:45:17  21  ,eur_g15
15:45:17  22  ,eur_g16
15:45:17  23  ,eur_g17
15:45:17  24  ,eur_g18
15:45:17  25  ,eur_g19
15:45:17  26  ,eur_g20
15:45:17  27  ,eur_g21
15:45:17  28  ,eur_g22
15:45:17  29  ,eur_g23
15:45:17  30  ,eur_g24
15:45:17  31  ,eur_g25
15:45:17  32  ,eur_g26
15:45:17  33  ,eur_g27
15:45:17  34  ,eur_g28
15:45:17  35  ,eur_g29
15:45:17  36  ,eur_g30
15:45:17  37  ,eur_g31
15:45:17  38  ,eur_g32
15:45:17  39  ,eur_g33
15:45:17  40  ,eur_g34
15:45:17  41  ,eur_g35
15:45:17  42  ,eur_g36
15:45:17  43  ,eur_g37
15:45:17  44  ,eur_g38
15:45:17  45  ,eur_g39
15:45:17  46  ,eur_g40
15:45:17  47  ,eur_g41
15:45:17  48  ,aud_g00
15:45:17  49  ,aud_g01
15:45:17  50  ,aud_g02
15:45:17  51  ,aud_g03
15:45:17  52  ,aud_g04
15:45:17  53  ,aud_g05
15:45:17  54  ,aud_g06
15:45:17  55  ,aud_g07
15:45:17  56  ,aud_g08
15:45:17  57  ,aud_g09
15:45:17  58  ,aud_g10
15:45:17  59  ,aud_g11
15:45:17  60  ,aud_g12
15:45:17  61  ,aud_g13
15:45:17  62  ,aud_g14
15:45:17  63  ,aud_g15
15:45:17  64  ,aud_g16
15:45:17  65  ,aud_g17
15:45:17  66  ,aud_g18
15:45:17  67  ,aud_g19
15:45:17  68  ,aud_g20
15:45:17  69  ,aud_g21
15:45:17  70  ,aud_g22
15:45:17  71  ,aud_g23
15:45:17  72  ,aud_g24
15:45:17  73  ,aud_g25
15:45:17  74  ,aud_g26
15:45:17  75  ,aud_g27
15:45:17  76  ,aud_g28
15:45:17  77  ,aud_g29
15:45:17  78  ,aud_g30
15:45:17  79  ,aud_g31
15:45:17  80  ,aud_g32
15:45:17  81  ,aud_g33
15:45:17  82  ,aud_g34
15:45:17  83  ,aud_g35
15:45:17  84  ,aud_g36
15:45:17  85  ,aud_g37
15:45:17  86  ,aud_g38
15:45:17  87  ,aud_g39
15:45:17  88  ,aud_g40
15:45:17  89  ,aud_g41
15:45:17  90  ,gbp_g00
15:45:17  91  ,gbp_g01
15:45:17  92  ,gbp_g02
15:45:17  93  ,gbp_g03
15:45:17  94  ,gbp_g04
15:45:17  95  ,gbp_g05
15:45:17  96  ,gbp_g06
15:45:17  97  ,gbp_g07
15:45:17  98  ,gbp_g08
15:45:17  99  ,gbp_g09
15:45:17 100  ,gbp_g10
15:45:17 101  ,gbp_g11
15:45:17 102  ,gbp_g12
15:45:17 103  ,gbp_g13
15:45:17 104  ,gbp_g14
15:45:17 105  ,gbp_g15
15:45:17 106  ,gbp_g16
15:45:17 107  ,gbp_g17
15:45:17 108  ,gbp_g18
15:45:17 109  ,gbp_g19
15:45:17 110  ,gbp_g20
15:45:17 111  ,gbp_g21
15:45:17 112  ,gbp_g22
15:45:17 113  ,gbp_g23
15:45:17 114  ,gbp_g24
15:45:17 115  ,gbp_g25
15:45:17 116  ,gbp_g26
15:45:17 117  ,gbp_g27
15:45:17 118  ,gbp_g28
15:45:17 119  ,gbp_g29
15:45:17 120  ,gbp_g30
15:45:17 121  ,gbp_g31
15:45:17 122  ,gbp_g32
15:45:17 123  ,gbp_g33
15:45:17 124  ,gbp_g34
15:45:17 125  ,gbp_g35
15:45:17 126  ,gbp_g36
15:45:17 127  ,gbp_g37
15:45:17 128  ,gbp_g38
15:45:17 129  ,gbp_g39
15:45:17 130  ,gbp_g40
15:45:17 131  ,gbp_g41
15:45:17 132  ,jpy_g00
15:45:17 133  ,jpy_g01
15:45:17 134  ,jpy_g02
15:45:17 135  ,jpy_g03
15:45:17 136  ,jpy_g04
15:45:17 137  ,jpy_g05
15:45:17 138  ,jpy_g06
15:45:17 139  ,jpy_g07
15:45:17 140  ,jpy_g08
15:45:17 141  ,jpy_g09
15:45:17 142  ,jpy_g10
15:45:17 143  ,jpy_g11
15:45:17 144  ,jpy_g12
15:45:17 145  ,jpy_g13
15:45:17 146  ,jpy_g14
15:45:17 147  ,jpy_g15
15:45:17 148  ,jpy_g16
15:45:17 149  ,jpy_g17
15:45:17 150  ,jpy_g18
15:45:17 151  ,jpy_g19
15:45:17 152  ,jpy_g20
15:45:17 153  ,jpy_g21
15:45:17 154  ,jpy_g22
15:45:17 155  ,jpy_g23
15:45:17 156  ,jpy_g24
15:45:17 157  ,jpy_g25
15:45:17 158  ,jpy_g26
15:45:17 159  ,jpy_g27
15:45:17 160  ,jpy_g28
15:45:17 161  ,jpy_g29
15:45:17 162  ,jpy_g30
15:45:17 163  ,jpy_g31
15:45:17 164  ,jpy_g32
15:45:17 165  ,jpy_g33
15:45:17 166  ,jpy_g34
15:45:17 167  ,jpy_g35
15:45:17 168  ,jpy_g36
15:45:17 169  ,jpy_g37
15:45:17 170  ,jpy_g38
15:45:17 171  ,jpy_g39
15:45:17 172  ,jpy_g40
15:45:17 173  ,jpy_g41
15:45:17 174  ,cad_g00
15:45:17 175  ,cad_g01
15:45:17 176  ,cad_g02
15:45:17 177  ,cad_g03
15:45:17 178  ,cad_g04
15:45:17 179  ,cad_g05
15:45:17 180  ,cad_g06
15:45:17 181  ,cad_g07
15:45:17 182  ,cad_g08
15:45:17 183  ,cad_g09
15:45:17 184  ,cad_g10
15:45:17 185  ,cad_g11
15:45:17 186  ,cad_g12
15:45:17 187  ,cad_g13
15:45:17 188  ,cad_g14
15:45:17 189  ,cad_g15
15:45:17 190  ,cad_g16
15:45:17 191  ,cad_g17
15:45:17 192  ,cad_g18
15:45:17 193  ,cad_g19
15:45:17 194  ,cad_g20
15:45:17 195  ,cad_g21
15:45:17 196  ,cad_g22
15:45:17 197  ,cad_g23
15:45:17 198  ,cad_g24
15:45:17 199  ,cad_g25
15:45:17 200  ,cad_g26
15:45:17 201  ,cad_g27
15:45:17 202  ,cad_g28
15:45:17 203  ,cad_g29
15:45:17 204  ,cad_g30
15:45:17 205  ,cad_g31
15:45:17 206  ,cad_g32
15:45:17 207  ,cad_g33
15:45:17 208  ,cad_g34
15:45:17 209  ,cad_g35
15:45:17 210  ,cad_g36
15:45:17 211  ,cad_g37
15:45:17 212  ,cad_g38
15:45:17 213  ,cad_g39
15:45:17 214  ,cad_g40
15:45:17 215  ,cad_g41
15:45:17 216  ,chf_g00
15:45:17 217  ,chf_g01
15:45:17 218  ,chf_g02
15:45:17 219  ,chf_g03
15:45:17 220  ,chf_g04
15:45:17 221  ,chf_g05
15:45:17 222  ,chf_g06
15:45:17 223  ,chf_g07
15:45:17 224  ,chf_g08
15:45:17 225  ,chf_g09
15:45:17 226  ,chf_g10
15:45:17 227  ,chf_g11
15:45:17 228  ,chf_g12
15:45:17 229  ,chf_g13
15:45:17 230  ,chf_g14
15:45:17 231  ,chf_g15
15:45:17 232  ,chf_g16
15:45:17 233  ,chf_g17
15:45:17 234  ,chf_g18
15:45:17 235  ,chf_g19
15:45:17 236  ,chf_g20
15:45:17 237  ,chf_g21
15:45:17 238  ,chf_g22
15:45:17 239  ,chf_g23
15:45:17 240  ,chf_g24
15:45:17 241  ,chf_g25
15:45:17 242  ,chf_g26
15:45:17 243  ,chf_g27
15:45:17 244  ,chf_g28
15:45:17 245  ,chf_g29
15:45:17 246  ,chf_g30
15:45:17 247  ,chf_g31
15:45:17 248  ,chf_g32
15:45:17 249  ,chf_g33
15:45:17 250  ,chf_g34
15:45:17 251  ,chf_g35
15:45:17 252  ,chf_g36
15:45:17 253  ,chf_g37
15:45:17 254  ,chf_g38
15:45:17 255  ,chf_g39
15:45:17 256  ,chf_g40
15:45:17 257  ,chf_g41
15:45:17 258  FROM aud_ms6 m
15:45:17 259  WHERE gatt IN('nup','up')
15:45:17 260  AND 1+m.ydate < '&1'||' '||'&2'
15:45:17 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'15:25:00'

View created.

Elapsed: 00:00:00.13
15:45:17 SQL> 
15:45:17 SQL> -- rpt
15:45:17 SQL> 
15:45:17 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
15:45:17   2  
15:45:17 SQL> SELECT MAX(prdate) FROM bme
15:45:17   2  
15:45:17 SQL> -- Now build model from bme and score sme
15:45:17 SQL> @score1.sql
15:45:17 SQL> -- score1.sql
15:45:17 SQL> 
15:45:17 SQL> -- Does the 1st SVM score
15:45:17 SQL> 
15:45:17 SQL> -- Fill up svmc_apply_prep
15:45:17 SQL> @score.sql
15:45:17 SQL> --
15:45:17 SQL> -- score.sql
15:45:17 SQL> --
15:45:17 SQL> 
15:45:17 SQL> -- usage: score.sql
15:45:17 SQL> 
15:45:17 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:45:17 SQL> 
15:45:17 SQL> DEFINE target	= 'gatt'
15:45:17 SQL> DEFINE model_name = 'forex15'
15:45:17 SQL> DEFINE bldtable	= 'bme'
15:45:17 SQL> DEFINE scoretable = 'sme'
15:45:17 SQL> DEFINE case_id	= 'prdate'
15:45:17 SQL> 
15:45:17 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:45:17 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:45:17 SQL> 
15:45:17 SQL> -- Builds an SVM model using pl/sql.
15:45:17 SQL> 
15:45:17 SQL> -----------------------------------------------------------------------
15:45:17 SQL> --			    BUILD THE MODEL
15:45:17 SQL> -----------------------------------------------------------------------
15:45:17 SQL> 
15:45:17 SQL> -- Cleanup old build data preparation objects for repeat runs
15:45:17 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
15:45:17 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:45:17 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
15:45:17 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
15:45:17 SQL> 
15:45:17 SQL> 
15:45:17 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:45:17 SQL> --
15:45:17 SQL> -- DROP	TABLE svmc_settings ;
15:45:17 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:45:17 SQL> -- DELETE svmc_settings;
15:45:17 SQL> 
15:45:17 SQL> -- The default classification algorithm is Naive Bayes. So override
15:45:17 SQL> -- this choice to SVM using a settings table.
15:45:17 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:45:17 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:45:17 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:45:17 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:45:17 SQL> -- models.
15:45:17 SQL> --
15:45:17 SQL> 
15:45:17 SQL> -- Do this once and then comment it out.
15:45:17 SQL> -- That makes script go faster.
15:45:17 SQL> -- BEGIN
15:45:17 SQL> -- -- Populate settings table
15:45:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:45:17 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:45:17 SQL> --
15:45:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:45:17 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:45:17 SQL> --
15:45:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:45:17 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:45:17 SQL> --   COMMIT;
15:45:17 SQL> -- END;
15:45:17 SQL> -- /
15:45:17 SQL> 
15:45:17 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:45:17 SQL> 
15:45:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:45:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:45:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:45:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:45:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:45:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:45:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:45:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:45:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:45:17 SQL> 
15:45:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:45:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:45:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:45:17 SQL> 
15:45:17 SQL> --------------------------------
15:45:17 SQL> -- PREPARE BUILD (TRAINING) DATA
15:45:17 SQL> --
15:45:17 SQL> 
15:45:17 SQL> -- 1. Missing Value treatment for all Predictors and
15:45:17 SQL> -- 2. Outlier Treatment and
15:45:17 SQL> -- 3. Normalization are performed below.
15:45:17 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:45:17 SQL> --    normalized here.
15:45:17 SQL> 
15:45:17 SQL> BEGIN
15:45:17   2  	-- Perform missing value treatment for all predictors
15:45:17   3  	-- create miss tables
15:45:17   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:45:17   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:45:17   6  
15:45:17   7  	-- populate miss tables
15:45:17   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:45:17   9  	  miss_table_name => 'svmc_miss_num',
15:45:17  10  	  data_table_name => '&bldtable',
15:45:17  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:45:17  12  
15:45:17  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:45:17  14  	  miss_table_name => 'svmc_miss_cat',
15:45:17  15  	  data_table_name => '&bldtable',
15:45:17  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:45:17  17  
15:45:17  18  	-- xform input data to replace missing values
15:45:17  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:45:17  20  	  miss_table_name => 'svmc_miss_num',
15:45:17  21  	  data_table_name => '&bldtable',
15:45:17  22  	  xform_view_name => 'xformed_build_miss_num');
15:45:17  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:45:17  24  	  miss_table_name => 'svmc_miss_cat',
15:45:17  25  	  data_table_name => '&bldtable',
15:45:17  26  	  xform_view_name => 'xformed_build_miss_cat');
15:45:17  27  
15:45:17  28  	-- Perform outlier treatment.
15:45:17  29  	-- create clip table
15:45:17  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:45:17  31  
15:45:17  32  	-- populate clip table
15:45:17  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:45:17  34  	  clip_table_name => 'svmc_clip',
15:45:17  35  	  data_table_name => '&bldtable',
15:45:17  36  	  tail_frac	  => 0.025,
15:45:17  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:45:17  38  
15:45:17  39  	-- xform input data to winsorized data
15:45:17  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:45:17  41  	  clip_table_name => 'svmc_clip',
15:45:17  42  	  data_table_name => '&bldtable',
15:45:17  43  	  xform_view_name => 'svmc_winsor');
15:45:17  44  
15:45:17  45  	-- create normalization table
15:45:17  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:45:17  47  
15:45:17  48  	-- populate normalization table based on winsorized data
15:45:17  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:45:17  50  	  norm_table_name => 'svmc_norm',
15:45:17  51  	  data_table_name => 'svmc_winsor',
15:45:17  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:45:17  53  
15:45:17  54  	-- normalize the original data
15:45:17  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:45:17  56  	  norm_table_name => 'svmc_norm',
15:45:17  57  	  data_table_name => '&bldtable',
15:45:17  58  	  xform_view_name => 'svmc_build_prep');
15:45:17  59  END;
15:45:17  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.34
15:45:36 SQL> 
15:45:36 SQL> ---------------------
15:45:36 SQL> -- CREATE A NEW MODEL
15:45:36 SQL> --
15:45:36 SQL> -- Cleanup old model with the same name for repeat runs
15:45:36 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:45:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:45:36   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.94
15:45:37 SQL> 
15:45:37 SQL> -- Build a new SVM Model
15:45:37 SQL> BEGIN
15:45:37   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:45:37   3  	  model_name	      => '&model_name',
15:45:37   4  	  mining_function     => dbms_data_mining.classification,
15:45:37   5  	  data_table_name     => 'svmc_build_prep',
15:45:37   6  	  case_id_column_name => '&case_id',
15:45:37   7  	  target_column_name  => '&target',
15:45:37   8  	  settings_table_name => 'svmc_settings');
15:45:37   9  END;
15:45:37  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.87
15:46:05 SQL> 
15:46:05 SQL> -----------------------------------------------------------------------
15:46:05 SQL> --			       APPLY/score THE MODEL
15:46:05 SQL> -----------------------------------------------------------------------
15:46:05 SQL> 
15:46:05 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:46:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:46:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:46:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:46:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:46:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:46:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:46:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:46:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:46:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:46:06 SQL> -----------------------
15:46:06 SQL> -- PREPARE SCORING DATA
15:46:06 SQL> --
15:46:06 SQL> -- If the data for model creation has been prepared, then the data
15:46:06 SQL> -- to be scored using the model must be prepared in the same manner
15:46:06 SQL> -- in order to obtain meaningful results.
15:46:06 SQL> --
15:46:06 SQL> -- 1. Missing Value treatment for all Predictors and
15:46:06 SQL> -- 2. Normalization
15:46:06 SQL> -- No outlier treatment will be performed during test and apply. The
15:46:06 SQL> -- normalization step is sufficient, since the normalization parameters
15:46:06 SQL> -- already capture the effects of outlier treatment done with build data.
15:46:06 SQL> --
15:46:06 SQL> BEGIN
15:46:06   2  	-- Xform Test data to replace missing values
15:46:06   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:46:06   4  	  miss_table_name => 'svmc_miss_num',
15:46:06   5  	  data_table_name => '&scoretable',
15:46:06   6  	  xform_view_name => 'xformed_apply_miss_num');
15:46:06   7  
15:46:06   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:46:06   9  	  miss_table_name => 'svmc_miss_cat',
15:46:06  10  	  data_table_name => '&scoretable',
15:46:06  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:46:06  12  
15:46:06  13  	-- Normalize the data to be scored
15:46:06  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:46:06  15  	  norm_table_name => 'svmc_norm',
15:46:06  16  	  data_table_name => '&scoretable',
15:46:06  17  	  xform_view_name => 'svmc_apply_prep');
15:46:06  18  END;
15:46:06  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.27
15:46:07 SQL> 
15:46:07 SQL> -- Use same model_name used in score.sql
15:46:07 SQL> DEFINE model_name = 'forex15'
15:46:07 SQL> 
15:46:07 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
15:46:07 SQL> 
15:46:07 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
15:46:07 SQL> 
15:46:07 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
15:46:07   2  SELECT
15:46:07   3  prdate
15:46:07   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:46:07   5  ,sysdate
15:46:07   6  ,SUBSTR(prdate,1,3)pair
15:46:07   7  ,SUBSTR(prdate,4,19)ydate
15:46:07   8  FROM svmc_apply_prep
15:46:07   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.19
15:46:07 SQL> @aud_score1day.sql  2011-01-05 15:30:00
15:46:07 SQL> --
15:46:07 SQL> -- aud_score1day.sql
15:46:07 SQL> --
15:46:07 SQL> 
15:46:07 SQL> CREATE OR REPLACE VIEW sme AS
15:46:07   2  SELECT
15:46:07   3  'aud'||m.ydate prdate
15:46:07   4  ,NULL gatt
15:46:07   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:46:07   6  ,eur_g00
15:46:07   7  ,eur_g01
15:46:07   8  ,eur_g02
15:46:07   9  ,eur_g03
15:46:07  10  ,eur_g04
15:46:07  11  ,eur_g05
15:46:07  12  ,eur_g06
15:46:07  13  ,eur_g07
15:46:07  14  ,eur_g08
15:46:07  15  ,eur_g09
15:46:07  16  ,eur_g10
15:46:07  17  ,eur_g11
15:46:07  18  ,eur_g12
15:46:07  19  ,eur_g13
15:46:07  20  ,eur_g14
15:46:07  21  ,eur_g15
15:46:07  22  ,eur_g16
15:46:07  23  ,eur_g17
15:46:07  24  ,eur_g18
15:46:07  25  ,eur_g19
15:46:07  26  ,eur_g20
15:46:07  27  ,eur_g21
15:46:07  28  ,eur_g22
15:46:07  29  ,eur_g23
15:46:07  30  ,eur_g24
15:46:07  31  ,eur_g25
15:46:07  32  ,eur_g26
15:46:07  33  ,eur_g27
15:46:07  34  ,eur_g28
15:46:07  35  ,eur_g29
15:46:07  36  ,eur_g30
15:46:07  37  ,eur_g31
15:46:07  38  ,eur_g32
15:46:07  39  ,eur_g33
15:46:07  40  ,eur_g34
15:46:07  41  ,eur_g35
15:46:07  42  ,eur_g36
15:46:07  43  ,eur_g37
15:46:07  44  ,eur_g38
15:46:07  45  ,eur_g39
15:46:07  46  ,eur_g40
15:46:07  47  ,eur_g41
15:46:07  48  ,aud_g00
15:46:07  49  ,aud_g01
15:46:07  50  ,aud_g02
15:46:07  51  ,aud_g03
15:46:07  52  ,aud_g04
15:46:07  53  ,aud_g05
15:46:07  54  ,aud_g06
15:46:07  55  ,aud_g07
15:46:07  56  ,aud_g08
15:46:07  57  ,aud_g09
15:46:07  58  ,aud_g10
15:46:07  59  ,aud_g11
15:46:07  60  ,aud_g12
15:46:07  61  ,aud_g13
15:46:07  62  ,aud_g14
15:46:07  63  ,aud_g15
15:46:07  64  ,aud_g16
15:46:07  65  ,aud_g17
15:46:07  66  ,aud_g18
15:46:07  67  ,aud_g19
15:46:07  68  ,aud_g20
15:46:07  69  ,aud_g21
15:46:07  70  ,aud_g22
15:46:07  71  ,aud_g23
15:46:07  72  ,aud_g24
15:46:07  73  ,aud_g25
15:46:07  74  ,aud_g26
15:46:07  75  ,aud_g27
15:46:07  76  ,aud_g28
15:46:07  77  ,aud_g29
15:46:07  78  ,aud_g30
15:46:07  79  ,aud_g31
15:46:07  80  ,aud_g32
15:46:07  81  ,aud_g33
15:46:07  82  ,aud_g34
15:46:07  83  ,aud_g35
15:46:07  84  ,aud_g36
15:46:07  85  ,aud_g37
15:46:07  86  ,aud_g38
15:46:07  87  ,aud_g39
15:46:07  88  ,aud_g40
15:46:07  89  ,aud_g41
15:46:07  90  ,gbp_g00
15:46:07  91  ,gbp_g01
15:46:07  92  ,gbp_g02
15:46:07  93  ,gbp_g03
15:46:07  94  ,gbp_g04
15:46:07  95  ,gbp_g05
15:46:07  96  ,gbp_g06
15:46:07  97  ,gbp_g07
15:46:07  98  ,gbp_g08
15:46:07  99  ,gbp_g09
15:46:07 100  ,gbp_g10
15:46:07 101  ,gbp_g11
15:46:07 102  ,gbp_g12
15:46:07 103  ,gbp_g13
15:46:07 104  ,gbp_g14
15:46:07 105  ,gbp_g15
15:46:07 106  ,gbp_g16
15:46:07 107  ,gbp_g17
15:46:07 108  ,gbp_g18
15:46:07 109  ,gbp_g19
15:46:07 110  ,gbp_g20
15:46:07 111  ,gbp_g21
15:46:07 112  ,gbp_g22
15:46:07 113  ,gbp_g23
15:46:07 114  ,gbp_g24
15:46:07 115  ,gbp_g25
15:46:07 116  ,gbp_g26
15:46:07 117  ,gbp_g27
15:46:07 118  ,gbp_g28
15:46:07 119  ,gbp_g29
15:46:07 120  ,gbp_g30
15:46:07 121  ,gbp_g31
15:46:07 122  ,gbp_g32
15:46:07 123  ,gbp_g33
15:46:07 124  ,gbp_g34
15:46:07 125  ,gbp_g35
15:46:07 126  ,gbp_g36
15:46:07 127  ,gbp_g37
15:46:07 128  ,gbp_g38
15:46:07 129  ,gbp_g39
15:46:07 130  ,gbp_g40
15:46:07 131  ,gbp_g41
15:46:07 132  ,jpy_g00
15:46:07 133  ,jpy_g01
15:46:07 134  ,jpy_g02
15:46:07 135  ,jpy_g03
15:46:07 136  ,jpy_g04
15:46:07 137  ,jpy_g05
15:46:07 138  ,jpy_g06
15:46:07 139  ,jpy_g07
15:46:07 140  ,jpy_g08
15:46:07 141  ,jpy_g09
15:46:07 142  ,jpy_g10
15:46:07 143  ,jpy_g11
15:46:07 144  ,jpy_g12
15:46:07 145  ,jpy_g13
15:46:07 146  ,jpy_g14
15:46:07 147  ,jpy_g15
15:46:07 148  ,jpy_g16
15:46:07 149  ,jpy_g17
15:46:07 150  ,jpy_g18
15:46:07 151  ,jpy_g19
15:46:07 152  ,jpy_g20
15:46:07 153  ,jpy_g21
15:46:07 154  ,jpy_g22
15:46:07 155  ,jpy_g23
15:46:07 156  ,jpy_g24
15:46:07 157  ,jpy_g25
15:46:07 158  ,jpy_g26
15:46:07 159  ,jpy_g27
15:46:07 160  ,jpy_g28
15:46:07 161  ,jpy_g29
15:46:07 162  ,jpy_g30
15:46:07 163  ,jpy_g31
15:46:07 164  ,jpy_g32
15:46:07 165  ,jpy_g33
15:46:07 166  ,jpy_g34
15:46:07 167  ,jpy_g35
15:46:07 168  ,jpy_g36
15:46:07 169  ,jpy_g37
15:46:07 170  ,jpy_g38
15:46:07 171  ,jpy_g39
15:46:07 172  ,jpy_g40
15:46:07 173  ,jpy_g41
15:46:07 174  ,cad_g00
15:46:07 175  ,cad_g01
15:46:07 176  ,cad_g02
15:46:07 177  ,cad_g03
15:46:07 178  ,cad_g04
15:46:07 179  ,cad_g05
15:46:07 180  ,cad_g06
15:46:07 181  ,cad_g07
15:46:07 182  ,cad_g08
15:46:07 183  ,cad_g09
15:46:07 184  ,cad_g10
15:46:07 185  ,cad_g11
15:46:07 186  ,cad_g12
15:46:07 187  ,cad_g13
15:46:07 188  ,cad_g14
15:46:07 189  ,cad_g15
15:46:07 190  ,cad_g16
15:46:07 191  ,cad_g17
15:46:07 192  ,cad_g18
15:46:07 193  ,cad_g19
15:46:07 194  ,cad_g20
15:46:07 195  ,cad_g21
15:46:07 196  ,cad_g22
15:46:07 197  ,cad_g23
15:46:07 198  ,cad_g24
15:46:07 199  ,cad_g25
15:46:07 200  ,cad_g26
15:46:07 201  ,cad_g27
15:46:07 202  ,cad_g28
15:46:07 203  ,cad_g29
15:46:07 204  ,cad_g30
15:46:07 205  ,cad_g31
15:46:07 206  ,cad_g32
15:46:07 207  ,cad_g33
15:46:07 208  ,cad_g34
15:46:07 209  ,cad_g35
15:46:07 210  ,cad_g36
15:46:07 211  ,cad_g37
15:46:07 212  ,cad_g38
15:46:07 213  ,cad_g39
15:46:07 214  ,cad_g40
15:46:07 215  ,cad_g41
15:46:07 216  ,chf_g00
15:46:07 217  ,chf_g01
15:46:07 218  ,chf_g02
15:46:07 219  ,chf_g03
15:46:07 220  ,chf_g04
15:46:07 221  ,chf_g05
15:46:07 222  ,chf_g06
15:46:07 223  ,chf_g07
15:46:07 224  ,chf_g08
15:46:07 225  ,chf_g09
15:46:07 226  ,chf_g10
15:46:07 227  ,chf_g11
15:46:07 228  ,chf_g12
15:46:07 229  ,chf_g13
15:46:07 230  ,chf_g14
15:46:07 231  ,chf_g15
15:46:07 232  ,chf_g16
15:46:07 233  ,chf_g17
15:46:07 234  ,chf_g18
15:46:07 235  ,chf_g19
15:46:07 236  ,chf_g20
15:46:07 237  ,chf_g21
15:46:07 238  ,chf_g22
15:46:07 239  ,chf_g23
15:46:07 240  ,chf_g24
15:46:07 241  ,chf_g25
15:46:07 242  ,chf_g26
15:46:07 243  ,chf_g27
15:46:07 244  ,chf_g28
15:46:07 245  ,chf_g29
15:46:07 246  ,chf_g30
15:46:07 247  ,chf_g31
15:46:07 248  ,chf_g32
15:46:07 249  ,chf_g33
15:46:07 250  ,chf_g34
15:46:07 251  ,chf_g35
15:46:07 252  ,chf_g36
15:46:07 253  ,chf_g37
15:46:07 254  ,chf_g38
15:46:07 255  ,chf_g39
15:46:07 256  ,chf_g40
15:46:07 257  ,chf_g41
15:46:07 258  FROM aud_ms6 m
15:46:07 259  WHERE m.ydate = '&1'||' '||'&2'
15:46:07 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'15:30:00'

View created.

Elapsed: 00:00:00.13
15:46:07 SQL> 
15:46:07 SQL> -- rpt
15:46:07 SQL> -- We should see just 1 row:
15:46:07 SQL> 
15:46:07 SQL> SELECT COUNT(prdate) FROM sme
15:46:07   2  
15:46:07 SQL> -- Build the model:
15:46:07 SQL> CREATE OR REPLACE VIEW bme AS
15:46:07   2  SELECT
15:46:07   3  'aud'||m.ydate prdate
15:46:07   4  ,gatt
15:46:07   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:46:07   6  ,eur_g00
15:46:07   7  ,eur_g01
15:46:07   8  ,eur_g02
15:46:07   9  ,eur_g03
15:46:07  10  ,eur_g04
15:46:07  11  ,eur_g05
15:46:07  12  ,eur_g06
15:46:07  13  ,eur_g07
15:46:07  14  ,eur_g08
15:46:07  15  ,eur_g09
15:46:07  16  ,eur_g10
15:46:07  17  ,eur_g11
15:46:07  18  ,eur_g12
15:46:07  19  ,eur_g13
15:46:07  20  ,eur_g14
15:46:07  21  ,eur_g15
15:46:07  22  ,eur_g16
15:46:07  23  ,eur_g17
15:46:07  24  ,eur_g18
15:46:07  25  ,eur_g19
15:46:07  26  ,eur_g20
15:46:07  27  ,eur_g21
15:46:07  28  ,eur_g22
15:46:07  29  ,eur_g23
15:46:07  30  ,eur_g24
15:46:07  31  ,eur_g25
15:46:07  32  ,eur_g26
15:46:07  33  ,eur_g27
15:46:07  34  ,eur_g28
15:46:07  35  ,eur_g29
15:46:07  36  ,eur_g30
15:46:07  37  ,eur_g31
15:46:07  38  ,eur_g32
15:46:07  39  ,eur_g33
15:46:07  40  ,eur_g34
15:46:07  41  ,eur_g35
15:46:07  42  ,eur_g36
15:46:07  43  ,eur_g37
15:46:07  44  ,eur_g38
15:46:07  45  ,eur_g39
15:46:07  46  ,eur_g40
15:46:07  47  ,eur_g41
15:46:07  48  ,aud_g00
15:46:07  49  ,aud_g01
15:46:07  50  ,aud_g02
15:46:07  51  ,aud_g03
15:46:07  52  ,aud_g04
15:46:07  53  ,aud_g05
15:46:07  54  ,aud_g06
15:46:07  55  ,aud_g07
15:46:07  56  ,aud_g08
15:46:07  57  ,aud_g09
15:46:07  58  ,aud_g10
15:46:07  59  ,aud_g11
15:46:07  60  ,aud_g12
15:46:07  61  ,aud_g13
15:46:07  62  ,aud_g14
15:46:07  63  ,aud_g15
15:46:07  64  ,aud_g16
15:46:07  65  ,aud_g17
15:46:07  66  ,aud_g18
15:46:07  67  ,aud_g19
15:46:07  68  ,aud_g20
15:46:07  69  ,aud_g21
15:46:07  70  ,aud_g22
15:46:07  71  ,aud_g23
15:46:07  72  ,aud_g24
15:46:07  73  ,aud_g25
15:46:07  74  ,aud_g26
15:46:07  75  ,aud_g27
15:46:07  76  ,aud_g28
15:46:07  77  ,aud_g29
15:46:07  78  ,aud_g30
15:46:07  79  ,aud_g31
15:46:07  80  ,aud_g32
15:46:07  81  ,aud_g33
15:46:07  82  ,aud_g34
15:46:07  83  ,aud_g35
15:46:07  84  ,aud_g36
15:46:07  85  ,aud_g37
15:46:07  86  ,aud_g38
15:46:07  87  ,aud_g39
15:46:07  88  ,aud_g40
15:46:07  89  ,aud_g41
15:46:07  90  ,gbp_g00
15:46:07  91  ,gbp_g01
15:46:07  92  ,gbp_g02
15:46:07  93  ,gbp_g03
15:46:07  94  ,gbp_g04
15:46:07  95  ,gbp_g05
15:46:07  96  ,gbp_g06
15:46:07  97  ,gbp_g07
15:46:07  98  ,gbp_g08
15:46:07  99  ,gbp_g09
15:46:07 100  ,gbp_g10
15:46:07 101  ,gbp_g11
15:46:07 102  ,gbp_g12
15:46:07 103  ,gbp_g13
15:46:07 104  ,gbp_g14
15:46:07 105  ,gbp_g15
15:46:07 106  ,gbp_g16
15:46:07 107  ,gbp_g17
15:46:07 108  ,gbp_g18
15:46:07 109  ,gbp_g19
15:46:07 110  ,gbp_g20
15:46:07 111  ,gbp_g21
15:46:07 112  ,gbp_g22
15:46:07 113  ,gbp_g23
15:46:07 114  ,gbp_g24
15:46:07 115  ,gbp_g25
15:46:07 116  ,gbp_g26
15:46:07 117  ,gbp_g27
15:46:07 118  ,gbp_g28
15:46:07 119  ,gbp_g29
15:46:07 120  ,gbp_g30
15:46:07 121  ,gbp_g31
15:46:07 122  ,gbp_g32
15:46:07 123  ,gbp_g33
15:46:07 124  ,gbp_g34
15:46:07 125  ,gbp_g35
15:46:07 126  ,gbp_g36
15:46:07 127  ,gbp_g37
15:46:07 128  ,gbp_g38
15:46:07 129  ,gbp_g39
15:46:07 130  ,gbp_g40
15:46:07 131  ,gbp_g41
15:46:07 132  ,jpy_g00
15:46:07 133  ,jpy_g01
15:46:07 134  ,jpy_g02
15:46:07 135  ,jpy_g03
15:46:07 136  ,jpy_g04
15:46:07 137  ,jpy_g05
15:46:07 138  ,jpy_g06
15:46:07 139  ,jpy_g07
15:46:07 140  ,jpy_g08
15:46:07 141  ,jpy_g09
15:46:07 142  ,jpy_g10
15:46:07 143  ,jpy_g11
15:46:07 144  ,jpy_g12
15:46:07 145  ,jpy_g13
15:46:07 146  ,jpy_g14
15:46:07 147  ,jpy_g15
15:46:07 148  ,jpy_g16
15:46:07 149  ,jpy_g17
15:46:07 150  ,jpy_g18
15:46:07 151  ,jpy_g19
15:46:07 152  ,jpy_g20
15:46:07 153  ,jpy_g21
15:46:07 154  ,jpy_g22
15:46:07 155  ,jpy_g23
15:46:07 156  ,jpy_g24
15:46:07 157  ,jpy_g25
15:46:07 158  ,jpy_g26
15:46:07 159  ,jpy_g27
15:46:07 160  ,jpy_g28
15:46:07 161  ,jpy_g29
15:46:07 162  ,jpy_g30
15:46:07 163  ,jpy_g31
15:46:07 164  ,jpy_g32
15:46:07 165  ,jpy_g33
15:46:07 166  ,jpy_g34
15:46:07 167  ,jpy_g35
15:46:07 168  ,jpy_g36
15:46:07 169  ,jpy_g37
15:46:07 170  ,jpy_g38
15:46:07 171  ,jpy_g39
15:46:07 172  ,jpy_g40
15:46:07 173  ,jpy_g41
15:46:07 174  ,cad_g00
15:46:07 175  ,cad_g01
15:46:07 176  ,cad_g02
15:46:07 177  ,cad_g03
15:46:07 178  ,cad_g04
15:46:07 179  ,cad_g05
15:46:07 180  ,cad_g06
15:46:07 181  ,cad_g07
15:46:07 182  ,cad_g08
15:46:07 183  ,cad_g09
15:46:07 184  ,cad_g10
15:46:07 185  ,cad_g11
15:46:07 186  ,cad_g12
15:46:07 187  ,cad_g13
15:46:07 188  ,cad_g14
15:46:07 189  ,cad_g15
15:46:07 190  ,cad_g16
15:46:07 191  ,cad_g17
15:46:07 192  ,cad_g18
15:46:07 193  ,cad_g19
15:46:07 194  ,cad_g20
15:46:07 195  ,cad_g21
15:46:07 196  ,cad_g22
15:46:07 197  ,cad_g23
15:46:07 198  ,cad_g24
15:46:07 199  ,cad_g25
15:46:07 200  ,cad_g26
15:46:07 201  ,cad_g27
15:46:07 202  ,cad_g28
15:46:07 203  ,cad_g29
15:46:07 204  ,cad_g30
15:46:07 205  ,cad_g31
15:46:07 206  ,cad_g32
15:46:07 207  ,cad_g33
15:46:07 208  ,cad_g34
15:46:07 209  ,cad_g35
15:46:07 210  ,cad_g36
15:46:07 211  ,cad_g37
15:46:07 212  ,cad_g38
15:46:07 213  ,cad_g39
15:46:07 214  ,cad_g40
15:46:07 215  ,cad_g41
15:46:07 216  ,chf_g00
15:46:07 217  ,chf_g01
15:46:07 218  ,chf_g02
15:46:07 219  ,chf_g03
15:46:07 220  ,chf_g04
15:46:07 221  ,chf_g05
15:46:07 222  ,chf_g06
15:46:07 223  ,chf_g07
15:46:07 224  ,chf_g08
15:46:07 225  ,chf_g09
15:46:07 226  ,chf_g10
15:46:07 227  ,chf_g11
15:46:07 228  ,chf_g12
15:46:07 229  ,chf_g13
15:46:07 230  ,chf_g14
15:46:07 231  ,chf_g15
15:46:07 232  ,chf_g16
15:46:07 233  ,chf_g17
15:46:07 234  ,chf_g18
15:46:07 235  ,chf_g19
15:46:07 236  ,chf_g20
15:46:07 237  ,chf_g21
15:46:07 238  ,chf_g22
15:46:07 239  ,chf_g23
15:46:07 240  ,chf_g24
15:46:07 241  ,chf_g25
15:46:07 242  ,chf_g26
15:46:07 243  ,chf_g27
15:46:07 244  ,chf_g28
15:46:07 245  ,chf_g29
15:46:07 246  ,chf_g30
15:46:07 247  ,chf_g31
15:46:07 248  ,chf_g32
15:46:07 249  ,chf_g33
15:46:07 250  ,chf_g34
15:46:07 251  ,chf_g35
15:46:07 252  ,chf_g36
15:46:07 253  ,chf_g37
15:46:07 254  ,chf_g38
15:46:07 255  ,chf_g39
15:46:07 256  ,chf_g40
15:46:07 257  ,chf_g41
15:46:07 258  FROM aud_ms6 m
15:46:07 259  WHERE gatt IN('nup','up')
15:46:07 260  AND 1+m.ydate < '&1'||' '||'&2'
15:46:07 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'15:30:00'

View created.

Elapsed: 00:00:00.12
15:46:07 SQL> 
15:46:07 SQL> -- rpt
15:46:07 SQL> 
15:46:07 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
15:46:07   2  
15:46:07 SQL> SELECT MAX(prdate) FROM bme
15:46:07   2  
15:46:07 SQL> -- Now build model from bme and score sme
15:46:07 SQL> @score1.sql
15:46:07 SQL> -- score1.sql
15:46:07 SQL> 
15:46:07 SQL> -- Does the 1st SVM score
15:46:07 SQL> 
15:46:07 SQL> -- Fill up svmc_apply_prep
15:46:07 SQL> @score.sql
15:46:07 SQL> --
15:46:07 SQL> -- score.sql
15:46:07 SQL> --
15:46:07 SQL> 
15:46:07 SQL> -- usage: score.sql
15:46:07 SQL> 
15:46:07 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:46:07 SQL> 
15:46:07 SQL> DEFINE target	= 'gatt'
15:46:07 SQL> DEFINE model_name = 'forex15'
15:46:07 SQL> DEFINE bldtable	= 'bme'
15:46:07 SQL> DEFINE scoretable = 'sme'
15:46:07 SQL> DEFINE case_id	= 'prdate'
15:46:07 SQL> 
15:46:07 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:46:07 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:46:07 SQL> 
15:46:07 SQL> -- Builds an SVM model using pl/sql.
15:46:07 SQL> 
15:46:07 SQL> -----------------------------------------------------------------------
15:46:07 SQL> --			    BUILD THE MODEL
15:46:07 SQL> -----------------------------------------------------------------------
15:46:07 SQL> 
15:46:07 SQL> -- Cleanup old build data preparation objects for repeat runs
15:46:07 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
15:46:07 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:46:07 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
15:46:07 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
15:46:07 SQL> 
15:46:07 SQL> 
15:46:07 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:46:07 SQL> --
15:46:07 SQL> -- DROP	TABLE svmc_settings ;
15:46:07 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:46:07 SQL> -- DELETE svmc_settings;
15:46:07 SQL> 
15:46:07 SQL> -- The default classification algorithm is Naive Bayes. So override
15:46:07 SQL> -- this choice to SVM using a settings table.
15:46:07 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:46:07 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:46:07 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:46:07 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:46:07 SQL> -- models.
15:46:07 SQL> --
15:46:07 SQL> 
15:46:07 SQL> -- Do this once and then comment it out.
15:46:07 SQL> -- That makes script go faster.
15:46:07 SQL> -- BEGIN
15:46:07 SQL> -- -- Populate settings table
15:46:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:46:07 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:46:07 SQL> --
15:46:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:46:07 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:46:07 SQL> --
15:46:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:46:07 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:46:07 SQL> --   COMMIT;
15:46:07 SQL> -- END;
15:46:07 SQL> -- /
15:46:07 SQL> 
15:46:07 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:46:07 SQL> 
15:46:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:46:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:46:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:46:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:46:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:46:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:46:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:46:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:46:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
15:46:08 SQL> 
15:46:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:46:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:46:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:46:08 SQL> 
15:46:08 SQL> --------------------------------
15:46:08 SQL> -- PREPARE BUILD (TRAINING) DATA
15:46:08 SQL> --
15:46:08 SQL> 
15:46:08 SQL> -- 1. Missing Value treatment for all Predictors and
15:46:08 SQL> -- 2. Outlier Treatment and
15:46:08 SQL> -- 3. Normalization are performed below.
15:46:08 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:46:08 SQL> --    normalized here.
15:46:08 SQL> 
15:46:08 SQL> BEGIN
15:46:08   2  	-- Perform missing value treatment for all predictors
15:46:08   3  	-- create miss tables
15:46:08   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:46:08   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:46:08   6  
15:46:08   7  	-- populate miss tables
15:46:08   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:46:08   9  	  miss_table_name => 'svmc_miss_num',
15:46:08  10  	  data_table_name => '&bldtable',
15:46:08  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:46:08  12  
15:46:08  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:46:08  14  	  miss_table_name => 'svmc_miss_cat',
15:46:08  15  	  data_table_name => '&bldtable',
15:46:08  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:46:08  17  
15:46:08  18  	-- xform input data to replace missing values
15:46:08  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:46:08  20  	  miss_table_name => 'svmc_miss_num',
15:46:08  21  	  data_table_name => '&bldtable',
15:46:08  22  	  xform_view_name => 'xformed_build_miss_num');
15:46:08  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:46:08  24  	  miss_table_name => 'svmc_miss_cat',
15:46:08  25  	  data_table_name => '&bldtable',
15:46:08  26  	  xform_view_name => 'xformed_build_miss_cat');
15:46:08  27  
15:46:08  28  	-- Perform outlier treatment.
15:46:08  29  	-- create clip table
15:46:08  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:46:08  31  
15:46:08  32  	-- populate clip table
15:46:08  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:46:08  34  	  clip_table_name => 'svmc_clip',
15:46:08  35  	  data_table_name => '&bldtable',
15:46:08  36  	  tail_frac	  => 0.025,
15:46:08  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:46:08  38  
15:46:08  39  	-- xform input data to winsorized data
15:46:08  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:46:08  41  	  clip_table_name => 'svmc_clip',
15:46:08  42  	  data_table_name => '&bldtable',
15:46:08  43  	  xform_view_name => 'svmc_winsor');
15:46:08  44  
15:46:08  45  	-- create normalization table
15:46:08  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:46:08  47  
15:46:08  48  	-- populate normalization table based on winsorized data
15:46:08  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:46:08  50  	  norm_table_name => 'svmc_norm',
15:46:08  51  	  data_table_name => 'svmc_winsor',
15:46:08  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:46:08  53  
15:46:08  54  	-- normalize the original data
15:46:08  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:46:08  56  	  norm_table_name => 'svmc_norm',
15:46:08  57  	  data_table_name => '&bldtable',
15:46:08  58  	  xform_view_name => 'svmc_build_prep');
15:46:08  59  END;
15:46:08  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.41
15:46:26 SQL> 
15:46:26 SQL> ---------------------
15:46:26 SQL> -- CREATE A NEW MODEL
15:46:26 SQL> --
15:46:26 SQL> -- Cleanup old model with the same name for repeat runs
15:46:26 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:46:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:46:26   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.02
15:46:27 SQL> 
15:46:27 SQL> -- Build a new SVM Model
15:46:27 SQL> BEGIN
15:46:27   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:46:27   3  	  model_name	      => '&model_name',
15:46:27   4  	  mining_function     => dbms_data_mining.classification,
15:46:27   5  	  data_table_name     => 'svmc_build_prep',
15:46:27   6  	  case_id_column_name => '&case_id',
15:46:27   7  	  target_column_name  => '&target',
15:46:27   8  	  settings_table_name => 'svmc_settings');
15:46:27   9  END;
15:46:27  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.38
15:46:55 SQL> 
15:46:55 SQL> -----------------------------------------------------------------------
15:46:55 SQL> --			       APPLY/score THE MODEL
15:46:55 SQL> -----------------------------------------------------------------------
15:46:55 SQL> 
15:46:55 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:46:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:46:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:46:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:46:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:46:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:46:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:46:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:46:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:46:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:46:55 SQL> -----------------------
15:46:55 SQL> -- PREPARE SCORING DATA
15:46:55 SQL> --
15:46:55 SQL> -- If the data for model creation has been prepared, then the data
15:46:55 SQL> -- to be scored using the model must be prepared in the same manner
15:46:55 SQL> -- in order to obtain meaningful results.
15:46:55 SQL> --
15:46:55 SQL> -- 1. Missing Value treatment for all Predictors and
15:46:55 SQL> -- 2. Normalization
15:46:55 SQL> -- No outlier treatment will be performed during test and apply. The
15:46:55 SQL> -- normalization step is sufficient, since the normalization parameters
15:46:55 SQL> -- already capture the effects of outlier treatment done with build data.
15:46:55 SQL> --
15:46:55 SQL> BEGIN
15:46:55   2  	-- Xform Test data to replace missing values
15:46:55   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:46:55   4  	  miss_table_name => 'svmc_miss_num',
15:46:55   5  	  data_table_name => '&scoretable',
15:46:55   6  	  xform_view_name => 'xformed_apply_miss_num');
15:46:55   7  
15:46:55   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:46:55   9  	  miss_table_name => 'svmc_miss_cat',
15:46:55  10  	  data_table_name => '&scoretable',
15:46:55  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:46:55  12  
15:46:55  13  	-- Normalize the data to be scored
15:46:55  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:46:55  15  	  norm_table_name => 'svmc_norm',
15:46:55  16  	  data_table_name => '&scoretable',
15:46:55  17  	  xform_view_name => 'svmc_apply_prep');
15:46:55  18  END;
15:46:55  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.36
15:46:56 SQL> 
15:46:56 SQL> -- Use same model_name used in score.sql
15:46:56 SQL> DEFINE model_name = 'forex15'
15:46:56 SQL> 
15:46:56 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
15:46:56 SQL> 
15:46:56 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
15:46:56 SQL> 
15:46:56 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
15:46:56   2  SELECT
15:46:56   3  prdate
15:46:56   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:46:56   5  ,sysdate
15:46:56   6  ,SUBSTR(prdate,1,3)pair
15:46:56   7  ,SUBSTR(prdate,4,19)ydate
15:46:56   8  FROM svmc_apply_prep
15:46:56   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:46:56 SQL> @aud_score1day.sql  2011-01-05 15:35:00
15:46:56 SQL> --
15:46:56 SQL> -- aud_score1day.sql
15:46:56 SQL> --
15:46:56 SQL> 
15:46:56 SQL> CREATE OR REPLACE VIEW sme AS
15:46:56   2  SELECT
15:46:56   3  'aud'||m.ydate prdate
15:46:56   4  ,NULL gatt
15:46:56   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:46:56   6  ,eur_g00
15:46:56   7  ,eur_g01
15:46:56   8  ,eur_g02
15:46:56   9  ,eur_g03
15:46:56  10  ,eur_g04
15:46:56  11  ,eur_g05
15:46:56  12  ,eur_g06
15:46:56  13  ,eur_g07
15:46:56  14  ,eur_g08
15:46:56  15  ,eur_g09
15:46:56  16  ,eur_g10
15:46:56  17  ,eur_g11
15:46:56  18  ,eur_g12
15:46:56  19  ,eur_g13
15:46:56  20  ,eur_g14
15:46:56  21  ,eur_g15
15:46:56  22  ,eur_g16
15:46:56  23  ,eur_g17
15:46:56  24  ,eur_g18
15:46:56  25  ,eur_g19
15:46:56  26  ,eur_g20
15:46:56  27  ,eur_g21
15:46:56  28  ,eur_g22
15:46:56  29  ,eur_g23
15:46:56  30  ,eur_g24
15:46:56  31  ,eur_g25
15:46:56  32  ,eur_g26
15:46:56  33  ,eur_g27
15:46:56  34  ,eur_g28
15:46:56  35  ,eur_g29
15:46:56  36  ,eur_g30
15:46:56  37  ,eur_g31
15:46:56  38  ,eur_g32
15:46:56  39  ,eur_g33
15:46:56  40  ,eur_g34
15:46:56  41  ,eur_g35
15:46:56  42  ,eur_g36
15:46:56  43  ,eur_g37
15:46:56  44  ,eur_g38
15:46:56  45  ,eur_g39
15:46:56  46  ,eur_g40
15:46:56  47  ,eur_g41
15:46:56  48  ,aud_g00
15:46:56  49  ,aud_g01
15:46:56  50  ,aud_g02
15:46:56  51  ,aud_g03
15:46:56  52  ,aud_g04
15:46:56  53  ,aud_g05
15:46:56  54  ,aud_g06
15:46:56  55  ,aud_g07
15:46:56  56  ,aud_g08
15:46:56  57  ,aud_g09
15:46:56  58  ,aud_g10
15:46:56  59  ,aud_g11
15:46:56  60  ,aud_g12
15:46:56  61  ,aud_g13
15:46:56  62  ,aud_g14
15:46:56  63  ,aud_g15
15:46:56  64  ,aud_g16
15:46:56  65  ,aud_g17
15:46:56  66  ,aud_g18
15:46:56  67  ,aud_g19
15:46:56  68  ,aud_g20
15:46:56  69  ,aud_g21
15:46:56  70  ,aud_g22
15:46:56  71  ,aud_g23
15:46:56  72  ,aud_g24
15:46:56  73  ,aud_g25
15:46:56  74  ,aud_g26
15:46:56  75  ,aud_g27
15:46:56  76  ,aud_g28
15:46:56  77  ,aud_g29
15:46:56  78  ,aud_g30
15:46:56  79  ,aud_g31
15:46:56  80  ,aud_g32
15:46:56  81  ,aud_g33
15:46:56  82  ,aud_g34
15:46:56  83  ,aud_g35
15:46:56  84  ,aud_g36
15:46:56  85  ,aud_g37
15:46:56  86  ,aud_g38
15:46:56  87  ,aud_g39
15:46:56  88  ,aud_g40
15:46:56  89  ,aud_g41
15:46:56  90  ,gbp_g00
15:46:56  91  ,gbp_g01
15:46:56  92  ,gbp_g02
15:46:56  93  ,gbp_g03
15:46:56  94  ,gbp_g04
15:46:56  95  ,gbp_g05
15:46:56  96  ,gbp_g06
15:46:56  97  ,gbp_g07
15:46:56  98  ,gbp_g08
15:46:56  99  ,gbp_g09
15:46:56 100  ,gbp_g10
15:46:56 101  ,gbp_g11
15:46:56 102  ,gbp_g12
15:46:56 103  ,gbp_g13
15:46:56 104  ,gbp_g14
15:46:56 105  ,gbp_g15
15:46:56 106  ,gbp_g16
15:46:56 107  ,gbp_g17
15:46:56 108  ,gbp_g18
15:46:56 109  ,gbp_g19
15:46:56 110  ,gbp_g20
15:46:56 111  ,gbp_g21
15:46:56 112  ,gbp_g22
15:46:56 113  ,gbp_g23
15:46:56 114  ,gbp_g24
15:46:56 115  ,gbp_g25
15:46:56 116  ,gbp_g26
15:46:56 117  ,gbp_g27
15:46:56 118  ,gbp_g28
15:46:56 119  ,gbp_g29
15:46:56 120  ,gbp_g30
15:46:56 121  ,gbp_g31
15:46:56 122  ,gbp_g32
15:46:56 123  ,gbp_g33
15:46:56 124  ,gbp_g34
15:46:56 125  ,gbp_g35
15:46:56 126  ,gbp_g36
15:46:56 127  ,gbp_g37
15:46:56 128  ,gbp_g38
15:46:56 129  ,gbp_g39
15:46:56 130  ,gbp_g40
15:46:56 131  ,gbp_g41
15:46:56 132  ,jpy_g00
15:46:56 133  ,jpy_g01
15:46:56 134  ,jpy_g02
15:46:56 135  ,jpy_g03
15:46:56 136  ,jpy_g04
15:46:56 137  ,jpy_g05
15:46:56 138  ,jpy_g06
15:46:56 139  ,jpy_g07
15:46:56 140  ,jpy_g08
15:46:56 141  ,jpy_g09
15:46:56 142  ,jpy_g10
15:46:56 143  ,jpy_g11
15:46:56 144  ,jpy_g12
15:46:56 145  ,jpy_g13
15:46:56 146  ,jpy_g14
15:46:56 147  ,jpy_g15
15:46:56 148  ,jpy_g16
15:46:56 149  ,jpy_g17
15:46:56 150  ,jpy_g18
15:46:56 151  ,jpy_g19
15:46:56 152  ,jpy_g20
15:46:56 153  ,jpy_g21
15:46:56 154  ,jpy_g22
15:46:56 155  ,jpy_g23
15:46:56 156  ,jpy_g24
15:46:56 157  ,jpy_g25
15:46:56 158  ,jpy_g26
15:46:56 159  ,jpy_g27
15:46:56 160  ,jpy_g28
15:46:56 161  ,jpy_g29
15:46:56 162  ,jpy_g30
15:46:56 163  ,jpy_g31
15:46:56 164  ,jpy_g32
15:46:56 165  ,jpy_g33
15:46:56 166  ,jpy_g34
15:46:56 167  ,jpy_g35
15:46:56 168  ,jpy_g36
15:46:56 169  ,jpy_g37
15:46:56 170  ,jpy_g38
15:46:56 171  ,jpy_g39
15:46:56 172  ,jpy_g40
15:46:56 173  ,jpy_g41
15:46:56 174  ,cad_g00
15:46:56 175  ,cad_g01
15:46:56 176  ,cad_g02
15:46:56 177  ,cad_g03
15:46:56 178  ,cad_g04
15:46:56 179  ,cad_g05
15:46:56 180  ,cad_g06
15:46:56 181  ,cad_g07
15:46:56 182  ,cad_g08
15:46:56 183  ,cad_g09
15:46:56 184  ,cad_g10
15:46:56 185  ,cad_g11
15:46:56 186  ,cad_g12
15:46:56 187  ,cad_g13
15:46:56 188  ,cad_g14
15:46:56 189  ,cad_g15
15:46:56 190  ,cad_g16
15:46:56 191  ,cad_g17
15:46:56 192  ,cad_g18
15:46:56 193  ,cad_g19
15:46:56 194  ,cad_g20
15:46:56 195  ,cad_g21
15:46:56 196  ,cad_g22
15:46:56 197  ,cad_g23
15:46:56 198  ,cad_g24
15:46:56 199  ,cad_g25
15:46:56 200  ,cad_g26
15:46:56 201  ,cad_g27
15:46:56 202  ,cad_g28
15:46:56 203  ,cad_g29
15:46:56 204  ,cad_g30
15:46:56 205  ,cad_g31
15:46:56 206  ,cad_g32
15:46:56 207  ,cad_g33
15:46:56 208  ,cad_g34
15:46:56 209  ,cad_g35
15:46:56 210  ,cad_g36
15:46:56 211  ,cad_g37
15:46:56 212  ,cad_g38
15:46:56 213  ,cad_g39
15:46:56 214  ,cad_g40
15:46:56 215  ,cad_g41
15:46:56 216  ,chf_g00
15:46:56 217  ,chf_g01
15:46:56 218  ,chf_g02
15:46:56 219  ,chf_g03
15:46:56 220  ,chf_g04
15:46:56 221  ,chf_g05
15:46:56 222  ,chf_g06
15:46:56 223  ,chf_g07
15:46:56 224  ,chf_g08
15:46:56 225  ,chf_g09
15:46:56 226  ,chf_g10
15:46:56 227  ,chf_g11
15:46:56 228  ,chf_g12
15:46:56 229  ,chf_g13
15:46:56 230  ,chf_g14
15:46:56 231  ,chf_g15
15:46:56 232  ,chf_g16
15:46:56 233  ,chf_g17
15:46:56 234  ,chf_g18
15:46:56 235  ,chf_g19
15:46:56 236  ,chf_g20
15:46:56 237  ,chf_g21
15:46:56 238  ,chf_g22
15:46:56 239  ,chf_g23
15:46:56 240  ,chf_g24
15:46:56 241  ,chf_g25
15:46:56 242  ,chf_g26
15:46:56 243  ,chf_g27
15:46:56 244  ,chf_g28
15:46:56 245  ,chf_g29
15:46:56 246  ,chf_g30
15:46:56 247  ,chf_g31
15:46:56 248  ,chf_g32
15:46:56 249  ,chf_g33
15:46:56 250  ,chf_g34
15:46:56 251  ,chf_g35
15:46:56 252  ,chf_g36
15:46:56 253  ,chf_g37
15:46:56 254  ,chf_g38
15:46:56 255  ,chf_g39
15:46:56 256  ,chf_g40
15:46:56 257  ,chf_g41
15:46:56 258  FROM aud_ms6 m
15:46:56 259  WHERE m.ydate = '&1'||' '||'&2'
15:46:56 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'15:35:00'

View created.

Elapsed: 00:00:00.12
15:46:56 SQL> 
15:46:56 SQL> -- rpt
15:46:56 SQL> -- We should see just 1 row:
15:46:56 SQL> 
15:46:56 SQL> SELECT COUNT(prdate) FROM sme
15:46:56   2  
15:46:56 SQL> -- Build the model:
15:46:56 SQL> CREATE OR REPLACE VIEW bme AS
15:46:56   2  SELECT
15:46:56   3  'aud'||m.ydate prdate
15:46:56   4  ,gatt
15:46:56   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:46:56   6  ,eur_g00
15:46:56   7  ,eur_g01
15:46:56   8  ,eur_g02
15:46:56   9  ,eur_g03
15:46:56  10  ,eur_g04
15:46:56  11  ,eur_g05
15:46:56  12  ,eur_g06
15:46:56  13  ,eur_g07
15:46:56  14  ,eur_g08
15:46:56  15  ,eur_g09
15:46:56  16  ,eur_g10
15:46:56  17  ,eur_g11
15:46:56  18  ,eur_g12
15:46:56  19  ,eur_g13
15:46:56  20  ,eur_g14
15:46:56  21  ,eur_g15
15:46:56  22  ,eur_g16
15:46:56  23  ,eur_g17
15:46:56  24  ,eur_g18
15:46:56  25  ,eur_g19
15:46:56  26  ,eur_g20
15:46:56  27  ,eur_g21
15:46:56  28  ,eur_g22
15:46:56  29  ,eur_g23
15:46:56  30  ,eur_g24
15:46:56  31  ,eur_g25
15:46:56  32  ,eur_g26
15:46:56  33  ,eur_g27
15:46:56  34  ,eur_g28
15:46:56  35  ,eur_g29
15:46:56  36  ,eur_g30
15:46:56  37  ,eur_g31
15:46:56  38  ,eur_g32
15:46:56  39  ,eur_g33
15:46:56  40  ,eur_g34
15:46:56  41  ,eur_g35
15:46:56  42  ,eur_g36
15:46:56  43  ,eur_g37
15:46:56  44  ,eur_g38
15:46:56  45  ,eur_g39
15:46:56  46  ,eur_g40
15:46:56  47  ,eur_g41
15:46:56  48  ,aud_g00
15:46:56  49  ,aud_g01
15:46:56  50  ,aud_g02
15:46:56  51  ,aud_g03
15:46:56  52  ,aud_g04
15:46:56  53  ,aud_g05
15:46:56  54  ,aud_g06
15:46:56  55  ,aud_g07
15:46:56  56  ,aud_g08
15:46:56  57  ,aud_g09
15:46:56  58  ,aud_g10
15:46:56  59  ,aud_g11
15:46:56  60  ,aud_g12
15:46:56  61  ,aud_g13
15:46:56  62  ,aud_g14
15:46:56  63  ,aud_g15
15:46:56  64  ,aud_g16
15:46:56  65  ,aud_g17
15:46:56  66  ,aud_g18
15:46:56  67  ,aud_g19
15:46:56  68  ,aud_g20
15:46:56  69  ,aud_g21
15:46:56  70  ,aud_g22
15:46:56  71  ,aud_g23
15:46:56  72  ,aud_g24
15:46:56  73  ,aud_g25
15:46:56  74  ,aud_g26
15:46:56  75  ,aud_g27
15:46:56  76  ,aud_g28
15:46:56  77  ,aud_g29
15:46:56  78  ,aud_g30
15:46:56  79  ,aud_g31
15:46:56  80  ,aud_g32
15:46:56  81  ,aud_g33
15:46:56  82  ,aud_g34
15:46:56  83  ,aud_g35
15:46:56  84  ,aud_g36
15:46:56  85  ,aud_g37
15:46:56  86  ,aud_g38
15:46:56  87  ,aud_g39
15:46:56  88  ,aud_g40
15:46:56  89  ,aud_g41
15:46:56  90  ,gbp_g00
15:46:56  91  ,gbp_g01
15:46:56  92  ,gbp_g02
15:46:56  93  ,gbp_g03
15:46:56  94  ,gbp_g04
15:46:56  95  ,gbp_g05
15:46:56  96  ,gbp_g06
15:46:56  97  ,gbp_g07
15:46:56  98  ,gbp_g08
15:46:56  99  ,gbp_g09
15:46:56 100  ,gbp_g10
15:46:56 101  ,gbp_g11
15:46:56 102  ,gbp_g12
15:46:56 103  ,gbp_g13
15:46:56 104  ,gbp_g14
15:46:56 105  ,gbp_g15
15:46:56 106  ,gbp_g16
15:46:56 107  ,gbp_g17
15:46:56 108  ,gbp_g18
15:46:56 109  ,gbp_g19
15:46:56 110  ,gbp_g20
15:46:56 111  ,gbp_g21
15:46:56 112  ,gbp_g22
15:46:56 113  ,gbp_g23
15:46:56 114  ,gbp_g24
15:46:56 115  ,gbp_g25
15:46:56 116  ,gbp_g26
15:46:56 117  ,gbp_g27
15:46:56 118  ,gbp_g28
15:46:56 119  ,gbp_g29
15:46:56 120  ,gbp_g30
15:46:56 121  ,gbp_g31
15:46:56 122  ,gbp_g32
15:46:56 123  ,gbp_g33
15:46:56 124  ,gbp_g34
15:46:56 125  ,gbp_g35
15:46:56 126  ,gbp_g36
15:46:56 127  ,gbp_g37
15:46:56 128  ,gbp_g38
15:46:56 129  ,gbp_g39
15:46:56 130  ,gbp_g40
15:46:56 131  ,gbp_g41
15:46:56 132  ,jpy_g00
15:46:56 133  ,jpy_g01
15:46:56 134  ,jpy_g02
15:46:56 135  ,jpy_g03
15:46:56 136  ,jpy_g04
15:46:56 137  ,jpy_g05
15:46:56 138  ,jpy_g06
15:46:56 139  ,jpy_g07
15:46:56 140  ,jpy_g08
15:46:56 141  ,jpy_g09
15:46:56 142  ,jpy_g10
15:46:56 143  ,jpy_g11
15:46:56 144  ,jpy_g12
15:46:56 145  ,jpy_g13
15:46:56 146  ,jpy_g14
15:46:56 147  ,jpy_g15
15:46:56 148  ,jpy_g16
15:46:56 149  ,jpy_g17
15:46:56 150  ,jpy_g18
15:46:56 151  ,jpy_g19
15:46:56 152  ,jpy_g20
15:46:56 153  ,jpy_g21
15:46:56 154  ,jpy_g22
15:46:56 155  ,jpy_g23
15:46:56 156  ,jpy_g24
15:46:56 157  ,jpy_g25
15:46:56 158  ,jpy_g26
15:46:56 159  ,jpy_g27
15:46:56 160  ,jpy_g28
15:46:56 161  ,jpy_g29
15:46:56 162  ,jpy_g30
15:46:56 163  ,jpy_g31
15:46:56 164  ,jpy_g32
15:46:56 165  ,jpy_g33
15:46:56 166  ,jpy_g34
15:46:56 167  ,jpy_g35
15:46:56 168  ,jpy_g36
15:46:56 169  ,jpy_g37
15:46:56 170  ,jpy_g38
15:46:56 171  ,jpy_g39
15:46:56 172  ,jpy_g40
15:46:56 173  ,jpy_g41
15:46:56 174  ,cad_g00
15:46:56 175  ,cad_g01
15:46:56 176  ,cad_g02
15:46:56 177  ,cad_g03
15:46:56 178  ,cad_g04
15:46:56 179  ,cad_g05
15:46:56 180  ,cad_g06
15:46:56 181  ,cad_g07
15:46:56 182  ,cad_g08
15:46:56 183  ,cad_g09
15:46:56 184  ,cad_g10
15:46:56 185  ,cad_g11
15:46:56 186  ,cad_g12
15:46:56 187  ,cad_g13
15:46:56 188  ,cad_g14
15:46:56 189  ,cad_g15
15:46:56 190  ,cad_g16
15:46:56 191  ,cad_g17
15:46:56 192  ,cad_g18
15:46:56 193  ,cad_g19
15:46:56 194  ,cad_g20
15:46:56 195  ,cad_g21
15:46:56 196  ,cad_g22
15:46:56 197  ,cad_g23
15:46:56 198  ,cad_g24
15:46:56 199  ,cad_g25
15:46:56 200  ,cad_g26
15:46:56 201  ,cad_g27
15:46:56 202  ,cad_g28
15:46:56 203  ,cad_g29
15:46:56 204  ,cad_g30
15:46:56 205  ,cad_g31
15:46:56 206  ,cad_g32
15:46:56 207  ,cad_g33
15:46:56 208  ,cad_g34
15:46:56 209  ,cad_g35
15:46:56 210  ,cad_g36
15:46:56 211  ,cad_g37
15:46:56 212  ,cad_g38
15:46:56 213  ,cad_g39
15:46:56 214  ,cad_g40
15:46:56 215  ,cad_g41
15:46:56 216  ,chf_g00
15:46:56 217  ,chf_g01
15:46:56 218  ,chf_g02
15:46:56 219  ,chf_g03
15:46:56 220  ,chf_g04
15:46:56 221  ,chf_g05
15:46:56 222  ,chf_g06
15:46:56 223  ,chf_g07
15:46:56 224  ,chf_g08
15:46:56 225  ,chf_g09
15:46:56 226  ,chf_g10
15:46:56 227  ,chf_g11
15:46:56 228  ,chf_g12
15:46:56 229  ,chf_g13
15:46:56 230  ,chf_g14
15:46:56 231  ,chf_g15
15:46:56 232  ,chf_g16
15:46:56 233  ,chf_g17
15:46:56 234  ,chf_g18
15:46:56 235  ,chf_g19
15:46:56 236  ,chf_g20
15:46:56 237  ,chf_g21
15:46:56 238  ,chf_g22
15:46:56 239  ,chf_g23
15:46:56 240  ,chf_g24
15:46:56 241  ,chf_g25
15:46:56 242  ,chf_g26
15:46:56 243  ,chf_g27
15:46:56 244  ,chf_g28
15:46:56 245  ,chf_g29
15:46:56 246  ,chf_g30
15:46:56 247  ,chf_g31
15:46:56 248  ,chf_g32
15:46:56 249  ,chf_g33
15:46:56 250  ,chf_g34
15:46:56 251  ,chf_g35
15:46:56 252  ,chf_g36
15:46:56 253  ,chf_g37
15:46:56 254  ,chf_g38
15:46:56 255  ,chf_g39
15:46:56 256  ,chf_g40
15:46:56 257  ,chf_g41
15:46:56 258  FROM aud_ms6 m
15:46:56 259  WHERE gatt IN('nup','up')
15:46:56 260  AND 1+m.ydate < '&1'||' '||'&2'
15:46:56 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'15:35:00'

View created.

Elapsed: 00:00:00.13
15:46:57 SQL> 
15:46:57 SQL> -- rpt
15:46:57 SQL> 
15:46:57 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
15:46:57   2  
15:46:57 SQL> SELECT MAX(prdate) FROM bme
15:46:57   2  
15:46:57 SQL> -- Now build model from bme and score sme
15:46:57 SQL> @score1.sql
15:46:57 SQL> -- score1.sql
15:46:57 SQL> 
15:46:57 SQL> -- Does the 1st SVM score
15:46:57 SQL> 
15:46:57 SQL> -- Fill up svmc_apply_prep
15:46:57 SQL> @score.sql
15:46:57 SQL> --
15:46:57 SQL> -- score.sql
15:46:57 SQL> --
15:46:57 SQL> 
15:46:57 SQL> -- usage: score.sql
15:46:57 SQL> 
15:46:57 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:46:57 SQL> 
15:46:57 SQL> DEFINE target	= 'gatt'
15:46:57 SQL> DEFINE model_name = 'forex15'
15:46:57 SQL> DEFINE bldtable	= 'bme'
15:46:57 SQL> DEFINE scoretable = 'sme'
15:46:57 SQL> DEFINE case_id	= 'prdate'
15:46:57 SQL> 
15:46:57 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:46:57 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:46:57 SQL> 
15:46:57 SQL> -- Builds an SVM model using pl/sql.
15:46:57 SQL> 
15:46:57 SQL> -----------------------------------------------------------------------
15:46:57 SQL> --			    BUILD THE MODEL
15:46:57 SQL> -----------------------------------------------------------------------
15:46:57 SQL> 
15:46:57 SQL> -- Cleanup old build data preparation objects for repeat runs
15:46:57 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
15:46:57 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:46:57 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
15:46:57 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
15:46:57 SQL> 
15:46:57 SQL> 
15:46:57 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:46:57 SQL> --
15:46:57 SQL> -- DROP	TABLE svmc_settings ;
15:46:57 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:46:57 SQL> -- DELETE svmc_settings;
15:46:57 SQL> 
15:46:57 SQL> -- The default classification algorithm is Naive Bayes. So override
15:46:57 SQL> -- this choice to SVM using a settings table.
15:46:57 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:46:57 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:46:57 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:46:57 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:46:57 SQL> -- models.
15:46:57 SQL> --
15:46:57 SQL> 
15:46:57 SQL> -- Do this once and then comment it out.
15:46:57 SQL> -- That makes script go faster.
15:46:57 SQL> -- BEGIN
15:46:57 SQL> -- -- Populate settings table
15:46:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:46:57 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:46:57 SQL> --
15:46:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:46:57 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:46:57 SQL> --
15:46:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:46:57 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:46:57 SQL> --   COMMIT;
15:46:57 SQL> -- END;
15:46:57 SQL> -- /
15:46:57 SQL> 
15:46:57 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:46:57 SQL> 
15:46:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:46:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:46:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:46:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:46:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:46:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:46:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:46:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:46:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:46:57 SQL> 
15:46:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:46:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:46:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:46:57 SQL> 
15:46:57 SQL> --------------------------------
15:46:57 SQL> -- PREPARE BUILD (TRAINING) DATA
15:46:57 SQL> --
15:46:57 SQL> 
15:46:57 SQL> -- 1. Missing Value treatment for all Predictors and
15:46:57 SQL> -- 2. Outlier Treatment and
15:46:57 SQL> -- 3. Normalization are performed below.
15:46:57 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:46:57 SQL> --    normalized here.
15:46:57 SQL> 
15:46:57 SQL> BEGIN
15:46:57   2  	-- Perform missing value treatment for all predictors
15:46:57   3  	-- create miss tables
15:46:57   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:46:57   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:46:57   6  
15:46:57   7  	-- populate miss tables
15:46:57   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:46:57   9  	  miss_table_name => 'svmc_miss_num',
15:46:57  10  	  data_table_name => '&bldtable',
15:46:57  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:46:57  12  
15:46:57  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:46:57  14  	  miss_table_name => 'svmc_miss_cat',
15:46:57  15  	  data_table_name => '&bldtable',
15:46:57  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:46:57  17  
15:46:57  18  	-- xform input data to replace missing values
15:46:57  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:46:57  20  	  miss_table_name => 'svmc_miss_num',
15:46:57  21  	  data_table_name => '&bldtable',
15:46:57  22  	  xform_view_name => 'xformed_build_miss_num');
15:46:57  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:46:57  24  	  miss_table_name => 'svmc_miss_cat',
15:46:57  25  	  data_table_name => '&bldtable',
15:46:57  26  	  xform_view_name => 'xformed_build_miss_cat');
15:46:57  27  
15:46:57  28  	-- Perform outlier treatment.
15:46:57  29  	-- create clip table
15:46:57  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:46:57  31  
15:46:57  32  	-- populate clip table
15:46:57  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:46:57  34  	  clip_table_name => 'svmc_clip',
15:46:57  35  	  data_table_name => '&bldtable',
15:46:57  36  	  tail_frac	  => 0.025,
15:46:57  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:46:57  38  
15:46:57  39  	-- xform input data to winsorized data
15:46:57  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:46:57  41  	  clip_table_name => 'svmc_clip',
15:46:57  42  	  data_table_name => '&bldtable',
15:46:57  43  	  xform_view_name => 'svmc_winsor');
15:46:57  44  
15:46:57  45  	-- create normalization table
15:46:57  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:46:57  47  
15:46:57  48  	-- populate normalization table based on winsorized data
15:46:57  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:46:57  50  	  norm_table_name => 'svmc_norm',
15:46:57  51  	  data_table_name => 'svmc_winsor',
15:46:57  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:46:57  53  
15:46:57  54  	-- normalize the original data
15:46:57  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:46:57  56  	  norm_table_name => 'svmc_norm',
15:46:57  57  	  data_table_name => '&bldtable',
15:46:57  58  	  xform_view_name => 'svmc_build_prep');
15:46:57  59  END;
15:46:57  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.56
15:47:15 SQL> 
15:47:15 SQL> ---------------------
15:47:15 SQL> -- CREATE A NEW MODEL
15:47:15 SQL> --
15:47:15 SQL> -- Cleanup old model with the same name for repeat runs
15:47:15 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:47:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:47:15   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.06
15:47:16 SQL> 
15:47:16 SQL> -- Build a new SVM Model
15:47:16 SQL> BEGIN
15:47:16   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:47:16   3  	  model_name	      => '&model_name',
15:47:16   4  	  mining_function     => dbms_data_mining.classification,
15:47:16   5  	  data_table_name     => 'svmc_build_prep',
15:47:16   6  	  case_id_column_name => '&case_id',
15:47:16   7  	  target_column_name  => '&target',
15:47:16   8  	  settings_table_name => 'svmc_settings');
15:47:16   9  END;
15:47:16  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.62
15:47:44 SQL> 
15:47:44 SQL> -----------------------------------------------------------------------
15:47:44 SQL> --			       APPLY/score THE MODEL
15:47:44 SQL> -----------------------------------------------------------------------
15:47:44 SQL> 
15:47:44 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:47:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:47:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:47:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:47:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:47:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:47:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
15:47:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:47:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:47:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:47:44 SQL> -----------------------
15:47:44 SQL> -- PREPARE SCORING DATA
15:47:44 SQL> --
15:47:44 SQL> -- If the data for model creation has been prepared, then the data
15:47:44 SQL> -- to be scored using the model must be prepared in the same manner
15:47:44 SQL> -- in order to obtain meaningful results.
15:47:44 SQL> --
15:47:44 SQL> -- 1. Missing Value treatment for all Predictors and
15:47:44 SQL> -- 2. Normalization
15:47:44 SQL> -- No outlier treatment will be performed during test and apply. The
15:47:44 SQL> -- normalization step is sufficient, since the normalization parameters
15:47:44 SQL> -- already capture the effects of outlier treatment done with build data.
15:47:44 SQL> --
15:47:44 SQL> BEGIN
15:47:44   2  	-- Xform Test data to replace missing values
15:47:44   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:47:44   4  	  miss_table_name => 'svmc_miss_num',
15:47:44   5  	  data_table_name => '&scoretable',
15:47:44   6  	  xform_view_name => 'xformed_apply_miss_num');
15:47:44   7  
15:47:44   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:47:44   9  	  miss_table_name => 'svmc_miss_cat',
15:47:44  10  	  data_table_name => '&scoretable',
15:47:44  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:47:44  12  
15:47:44  13  	-- Normalize the data to be scored
15:47:44  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:47:44  15  	  norm_table_name => 'svmc_norm',
15:47:44  16  	  data_table_name => '&scoretable',
15:47:44  17  	  xform_view_name => 'svmc_apply_prep');
15:47:44  18  END;
15:47:44  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.24
15:47:45 SQL> 
15:47:45 SQL> -- Use same model_name used in score.sql
15:47:45 SQL> DEFINE model_name = 'forex15'
15:47:45 SQL> 
15:47:45 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
15:47:45 SQL> 
15:47:45 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
15:47:46 SQL> 
15:47:46 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
15:47:46   2  SELECT
15:47:46   3  prdate
15:47:46   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:47:46   5  ,sysdate
15:47:46   6  ,SUBSTR(prdate,1,3)pair
15:47:46   7  ,SUBSTR(prdate,4,19)ydate
15:47:46   8  FROM svmc_apply_prep
15:47:46   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:47:46 SQL> @aud_score1day_gattn.sql	2011-01-05 15:20:00
15:47:46 SQL> --
15:47:46 SQL> -- aud_score1day_gattn.sql
15:47:46 SQL> --
15:47:46 SQL> 
15:47:46 SQL> CREATE OR REPLACE VIEW sme AS
15:47:46   2  SELECT
15:47:46   3  'aud'||m.ydate prdate
15:47:46   4  ,NULL gattn
15:47:46   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:47:46   6  ,eur_g00
15:47:46   7  ,eur_g01
15:47:46   8  ,eur_g02
15:47:46   9  ,eur_g03
15:47:46  10  ,eur_g04
15:47:46  11  ,eur_g05
15:47:46  12  ,eur_g06
15:47:46  13  ,eur_g07
15:47:46  14  ,eur_g08
15:47:46  15  ,eur_g09
15:47:46  16  ,eur_g10
15:47:46  17  ,eur_g11
15:47:46  18  ,eur_g12
15:47:46  19  ,eur_g13
15:47:46  20  ,eur_g14
15:47:46  21  ,eur_g15
15:47:46  22  ,eur_g16
15:47:46  23  ,eur_g17
15:47:46  24  ,eur_g18
15:47:46  25  ,eur_g19
15:47:46  26  ,eur_g20
15:47:46  27  ,eur_g21
15:47:46  28  ,eur_g22
15:47:46  29  ,eur_g23
15:47:46  30  ,eur_g24
15:47:46  31  ,eur_g25
15:47:46  32  ,eur_g26
15:47:46  33  ,eur_g27
15:47:46  34  ,eur_g28
15:47:46  35  ,eur_g29
15:47:46  36  ,eur_g30
15:47:46  37  ,eur_g31
15:47:46  38  ,eur_g32
15:47:46  39  ,eur_g33
15:47:46  40  ,eur_g34
15:47:46  41  ,eur_g35
15:47:46  42  ,eur_g36
15:47:46  43  ,eur_g37
15:47:46  44  ,eur_g38
15:47:46  45  ,eur_g39
15:47:46  46  ,eur_g40
15:47:46  47  ,eur_g41
15:47:46  48  ,aud_g00
15:47:46  49  ,aud_g01
15:47:46  50  ,aud_g02
15:47:46  51  ,aud_g03
15:47:46  52  ,aud_g04
15:47:46  53  ,aud_g05
15:47:46  54  ,aud_g06
15:47:46  55  ,aud_g07
15:47:46  56  ,aud_g08
15:47:46  57  ,aud_g09
15:47:46  58  ,aud_g10
15:47:46  59  ,aud_g11
15:47:46  60  ,aud_g12
15:47:46  61  ,aud_g13
15:47:46  62  ,aud_g14
15:47:46  63  ,aud_g15
15:47:46  64  ,aud_g16
15:47:46  65  ,aud_g17
15:47:46  66  ,aud_g18
15:47:46  67  ,aud_g19
15:47:46  68  ,aud_g20
15:47:46  69  ,aud_g21
15:47:46  70  ,aud_g22
15:47:46  71  ,aud_g23
15:47:46  72  ,aud_g24
15:47:46  73  ,aud_g25
15:47:46  74  ,aud_g26
15:47:46  75  ,aud_g27
15:47:46  76  ,aud_g28
15:47:46  77  ,aud_g29
15:47:46  78  ,aud_g30
15:47:46  79  ,aud_g31
15:47:46  80  ,aud_g32
15:47:46  81  ,aud_g33
15:47:46  82  ,aud_g34
15:47:46  83  ,aud_g35
15:47:46  84  ,aud_g36
15:47:46  85  ,aud_g37
15:47:46  86  ,aud_g38
15:47:46  87  ,aud_g39
15:47:46  88  ,aud_g40
15:47:46  89  ,aud_g41
15:47:46  90  ,gbp_g00
15:47:46  91  ,gbp_g01
15:47:46  92  ,gbp_g02
15:47:46  93  ,gbp_g03
15:47:46  94  ,gbp_g04
15:47:46  95  ,gbp_g05
15:47:46  96  ,gbp_g06
15:47:46  97  ,gbp_g07
15:47:46  98  ,gbp_g08
15:47:46  99  ,gbp_g09
15:47:46 100  ,gbp_g10
15:47:46 101  ,gbp_g11
15:47:46 102  ,gbp_g12
15:47:46 103  ,gbp_g13
15:47:46 104  ,gbp_g14
15:47:46 105  ,gbp_g15
15:47:46 106  ,gbp_g16
15:47:46 107  ,gbp_g17
15:47:46 108  ,gbp_g18
15:47:46 109  ,gbp_g19
15:47:46 110  ,gbp_g20
15:47:46 111  ,gbp_g21
15:47:46 112  ,gbp_g22
15:47:46 113  ,gbp_g23
15:47:46 114  ,gbp_g24
15:47:46 115  ,gbp_g25
15:47:46 116  ,gbp_g26
15:47:46 117  ,gbp_g27
15:47:46 118  ,gbp_g28
15:47:46 119  ,gbp_g29
15:47:46 120  ,gbp_g30
15:47:46 121  ,gbp_g31
15:47:46 122  ,gbp_g32
15:47:46 123  ,gbp_g33
15:47:46 124  ,gbp_g34
15:47:46 125  ,gbp_g35
15:47:46 126  ,gbp_g36
15:47:46 127  ,gbp_g37
15:47:46 128  ,gbp_g38
15:47:46 129  ,gbp_g39
15:47:46 130  ,gbp_g40
15:47:46 131  ,gbp_g41
15:47:46 132  ,jpy_g00
15:47:46 133  ,jpy_g01
15:47:46 134  ,jpy_g02
15:47:46 135  ,jpy_g03
15:47:46 136  ,jpy_g04
15:47:46 137  ,jpy_g05
15:47:46 138  ,jpy_g06
15:47:46 139  ,jpy_g07
15:47:46 140  ,jpy_g08
15:47:46 141  ,jpy_g09
15:47:46 142  ,jpy_g10
15:47:46 143  ,jpy_g11
15:47:46 144  ,jpy_g12
15:47:46 145  ,jpy_g13
15:47:46 146  ,jpy_g14
15:47:46 147  ,jpy_g15
15:47:46 148  ,jpy_g16
15:47:46 149  ,jpy_g17
15:47:46 150  ,jpy_g18
15:47:46 151  ,jpy_g19
15:47:46 152  ,jpy_g20
15:47:46 153  ,jpy_g21
15:47:46 154  ,jpy_g22
15:47:46 155  ,jpy_g23
15:47:46 156  ,jpy_g24
15:47:46 157  ,jpy_g25
15:47:46 158  ,jpy_g26
15:47:46 159  ,jpy_g27
15:47:46 160  ,jpy_g28
15:47:46 161  ,jpy_g29
15:47:46 162  ,jpy_g30
15:47:46 163  ,jpy_g31
15:47:46 164  ,jpy_g32
15:47:46 165  ,jpy_g33
15:47:46 166  ,jpy_g34
15:47:46 167  ,jpy_g35
15:47:46 168  ,jpy_g36
15:47:46 169  ,jpy_g37
15:47:46 170  ,jpy_g38
15:47:46 171  ,jpy_g39
15:47:46 172  ,jpy_g40
15:47:46 173  ,jpy_g41
15:47:46 174  ,cad_g00
15:47:46 175  ,cad_g01
15:47:46 176  ,cad_g02
15:47:46 177  ,cad_g03
15:47:46 178  ,cad_g04
15:47:46 179  ,cad_g05
15:47:46 180  ,cad_g06
15:47:46 181  ,cad_g07
15:47:46 182  ,cad_g08
15:47:46 183  ,cad_g09
15:47:46 184  ,cad_g10
15:47:46 185  ,cad_g11
15:47:46 186  ,cad_g12
15:47:46 187  ,cad_g13
15:47:46 188  ,cad_g14
15:47:46 189  ,cad_g15
15:47:46 190  ,cad_g16
15:47:46 191  ,cad_g17
15:47:46 192  ,cad_g18
15:47:46 193  ,cad_g19
15:47:46 194  ,cad_g20
15:47:46 195  ,cad_g21
15:47:46 196  ,cad_g22
15:47:46 197  ,cad_g23
15:47:46 198  ,cad_g24
15:47:46 199  ,cad_g25
15:47:46 200  ,cad_g26
15:47:46 201  ,cad_g27
15:47:46 202  ,cad_g28
15:47:46 203  ,cad_g29
15:47:46 204  ,cad_g30
15:47:46 205  ,cad_g31
15:47:46 206  ,cad_g32
15:47:46 207  ,cad_g33
15:47:46 208  ,cad_g34
15:47:46 209  ,cad_g35
15:47:46 210  ,cad_g36
15:47:46 211  ,cad_g37
15:47:46 212  ,cad_g38
15:47:46 213  ,cad_g39
15:47:46 214  ,cad_g40
15:47:46 215  ,cad_g41
15:47:46 216  ,chf_g00
15:47:46 217  ,chf_g01
15:47:46 218  ,chf_g02
15:47:46 219  ,chf_g03
15:47:46 220  ,chf_g04
15:47:46 221  ,chf_g05
15:47:46 222  ,chf_g06
15:47:46 223  ,chf_g07
15:47:46 224  ,chf_g08
15:47:46 225  ,chf_g09
15:47:46 226  ,chf_g10
15:47:46 227  ,chf_g11
15:47:46 228  ,chf_g12
15:47:46 229  ,chf_g13
15:47:46 230  ,chf_g14
15:47:46 231  ,chf_g15
15:47:46 232  ,chf_g16
15:47:46 233  ,chf_g17
15:47:46 234  ,chf_g18
15:47:46 235  ,chf_g19
15:47:46 236  ,chf_g20
15:47:46 237  ,chf_g21
15:47:46 238  ,chf_g22
15:47:46 239  ,chf_g23
15:47:46 240  ,chf_g24
15:47:46 241  ,chf_g25
15:47:46 242  ,chf_g26
15:47:46 243  ,chf_g27
15:47:46 244  ,chf_g28
15:47:46 245  ,chf_g29
15:47:46 246  ,chf_g30
15:47:46 247  ,chf_g31
15:47:46 248  ,chf_g32
15:47:46 249  ,chf_g33
15:47:46 250  ,chf_g34
15:47:46 251  ,chf_g35
15:47:46 252  ,chf_g36
15:47:46 253  ,chf_g37
15:47:46 254  ,chf_g38
15:47:46 255  ,chf_g39
15:47:46 256  ,chf_g40
15:47:46 257  ,chf_g41
15:47:46 258  FROM aud_ms6 m
15:47:46 259  WHERE m.ydate = '&1'||' '||'&2'
15:47:46 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'15:20:00'

View created.

Elapsed: 00:00:00.13
15:47:46 SQL> 
15:47:46 SQL> -- rpt
15:47:46 SQL> -- We should see just 1 row:
15:47:46 SQL> 
15:47:46 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
15:47:46 SQL> 
15:47:46 SQL> -- Build the model:
15:47:46 SQL> CREATE OR REPLACE VIEW bme AS
15:47:46   2  SELECT
15:47:46   3  'aud'||m.ydate prdate
15:47:46   4  ,gattn
15:47:46   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:47:46   6  ,eur_g00
15:47:46   7  ,eur_g01
15:47:46   8  ,eur_g02
15:47:46   9  ,eur_g03
15:47:46  10  ,eur_g04
15:47:46  11  ,eur_g05
15:47:46  12  ,eur_g06
15:47:46  13  ,eur_g07
15:47:46  14  ,eur_g08
15:47:46  15  ,eur_g09
15:47:46  16  ,eur_g10
15:47:46  17  ,eur_g11
15:47:46  18  ,eur_g12
15:47:46  19  ,eur_g13
15:47:46  20  ,eur_g14
15:47:46  21  ,eur_g15
15:47:46  22  ,eur_g16
15:47:46  23  ,eur_g17
15:47:46  24  ,eur_g18
15:47:46  25  ,eur_g19
15:47:46  26  ,eur_g20
15:47:46  27  ,eur_g21
15:47:46  28  ,eur_g22
15:47:46  29  ,eur_g23
15:47:46  30  ,eur_g24
15:47:46  31  ,eur_g25
15:47:46  32  ,eur_g26
15:47:46  33  ,eur_g27
15:47:46  34  ,eur_g28
15:47:46  35  ,eur_g29
15:47:46  36  ,eur_g30
15:47:46  37  ,eur_g31
15:47:46  38  ,eur_g32
15:47:46  39  ,eur_g33
15:47:46  40  ,eur_g34
15:47:46  41  ,eur_g35
15:47:46  42  ,eur_g36
15:47:46  43  ,eur_g37
15:47:46  44  ,eur_g38
15:47:46  45  ,eur_g39
15:47:46  46  ,eur_g40
15:47:46  47  ,eur_g41
15:47:46  48  ,aud_g00
15:47:46  49  ,aud_g01
15:47:46  50  ,aud_g02
15:47:46  51  ,aud_g03
15:47:46  52  ,aud_g04
15:47:46  53  ,aud_g05
15:47:46  54  ,aud_g06
15:47:46  55  ,aud_g07
15:47:46  56  ,aud_g08
15:47:46  57  ,aud_g09
15:47:46  58  ,aud_g10
15:47:46  59  ,aud_g11
15:47:46  60  ,aud_g12
15:47:46  61  ,aud_g13
15:47:46  62  ,aud_g14
15:47:46  63  ,aud_g15
15:47:46  64  ,aud_g16
15:47:46  65  ,aud_g17
15:47:46  66  ,aud_g18
15:47:46  67  ,aud_g19
15:47:46  68  ,aud_g20
15:47:46  69  ,aud_g21
15:47:46  70  ,aud_g22
15:47:46  71  ,aud_g23
15:47:46  72  ,aud_g24
15:47:46  73  ,aud_g25
15:47:46  74  ,aud_g26
15:47:46  75  ,aud_g27
15:47:46  76  ,aud_g28
15:47:46  77  ,aud_g29
15:47:46  78  ,aud_g30
15:47:46  79  ,aud_g31
15:47:46  80  ,aud_g32
15:47:46  81  ,aud_g33
15:47:46  82  ,aud_g34
15:47:46  83  ,aud_g35
15:47:46  84  ,aud_g36
15:47:46  85  ,aud_g37
15:47:46  86  ,aud_g38
15:47:46  87  ,aud_g39
15:47:46  88  ,aud_g40
15:47:46  89  ,aud_g41
15:47:46  90  ,gbp_g00
15:47:46  91  ,gbp_g01
15:47:46  92  ,gbp_g02
15:47:46  93  ,gbp_g03
15:47:46  94  ,gbp_g04
15:47:46  95  ,gbp_g05
15:47:46  96  ,gbp_g06
15:47:46  97  ,gbp_g07
15:47:46  98  ,gbp_g08
15:47:46  99  ,gbp_g09
15:47:46 100  ,gbp_g10
15:47:46 101  ,gbp_g11
15:47:46 102  ,gbp_g12
15:47:46 103  ,gbp_g13
15:47:46 104  ,gbp_g14
15:47:46 105  ,gbp_g15
15:47:46 106  ,gbp_g16
15:47:46 107  ,gbp_g17
15:47:46 108  ,gbp_g18
15:47:46 109  ,gbp_g19
15:47:46 110  ,gbp_g20
15:47:46 111  ,gbp_g21
15:47:46 112  ,gbp_g22
15:47:46 113  ,gbp_g23
15:47:46 114  ,gbp_g24
15:47:46 115  ,gbp_g25
15:47:46 116  ,gbp_g26
15:47:46 117  ,gbp_g27
15:47:46 118  ,gbp_g28
15:47:46 119  ,gbp_g29
15:47:46 120  ,gbp_g30
15:47:46 121  ,gbp_g31
15:47:46 122  ,gbp_g32
15:47:46 123  ,gbp_g33
15:47:46 124  ,gbp_g34
15:47:46 125  ,gbp_g35
15:47:46 126  ,gbp_g36
15:47:46 127  ,gbp_g37
15:47:46 128  ,gbp_g38
15:47:46 129  ,gbp_g39
15:47:46 130  ,gbp_g40
15:47:46 131  ,gbp_g41
15:47:46 132  ,jpy_g00
15:47:46 133  ,jpy_g01
15:47:46 134  ,jpy_g02
15:47:46 135  ,jpy_g03
15:47:46 136  ,jpy_g04
15:47:46 137  ,jpy_g05
15:47:46 138  ,jpy_g06
15:47:46 139  ,jpy_g07
15:47:46 140  ,jpy_g08
15:47:46 141  ,jpy_g09
15:47:46 142  ,jpy_g10
15:47:46 143  ,jpy_g11
15:47:46 144  ,jpy_g12
15:47:46 145  ,jpy_g13
15:47:46 146  ,jpy_g14
15:47:46 147  ,jpy_g15
15:47:46 148  ,jpy_g16
15:47:46 149  ,jpy_g17
15:47:46 150  ,jpy_g18
15:47:46 151  ,jpy_g19
15:47:46 152  ,jpy_g20
15:47:46 153  ,jpy_g21
15:47:46 154  ,jpy_g22
15:47:46 155  ,jpy_g23
15:47:46 156  ,jpy_g24
15:47:46 157  ,jpy_g25
15:47:46 158  ,jpy_g26
15:47:46 159  ,jpy_g27
15:47:46 160  ,jpy_g28
15:47:46 161  ,jpy_g29
15:47:46 162  ,jpy_g30
15:47:46 163  ,jpy_g31
15:47:46 164  ,jpy_g32
15:47:46 165  ,jpy_g33
15:47:46 166  ,jpy_g34
15:47:46 167  ,jpy_g35
15:47:46 168  ,jpy_g36
15:47:46 169  ,jpy_g37
15:47:46 170  ,jpy_g38
15:47:46 171  ,jpy_g39
15:47:46 172  ,jpy_g40
15:47:46 173  ,jpy_g41
15:47:46 174  ,cad_g00
15:47:46 175  ,cad_g01
15:47:46 176  ,cad_g02
15:47:46 177  ,cad_g03
15:47:46 178  ,cad_g04
15:47:46 179  ,cad_g05
15:47:46 180  ,cad_g06
15:47:46 181  ,cad_g07
15:47:46 182  ,cad_g08
15:47:46 183  ,cad_g09
15:47:46 184  ,cad_g10
15:47:46 185  ,cad_g11
15:47:46 186  ,cad_g12
15:47:46 187  ,cad_g13
15:47:46 188  ,cad_g14
15:47:46 189  ,cad_g15
15:47:46 190  ,cad_g16
15:47:46 191  ,cad_g17
15:47:46 192  ,cad_g18
15:47:46 193  ,cad_g19
15:47:46 194  ,cad_g20
15:47:46 195  ,cad_g21
15:47:46 196  ,cad_g22
15:47:46 197  ,cad_g23
15:47:46 198  ,cad_g24
15:47:46 199  ,cad_g25
15:47:46 200  ,cad_g26
15:47:46 201  ,cad_g27
15:47:46 202  ,cad_g28
15:47:46 203  ,cad_g29
15:47:46 204  ,cad_g30
15:47:46 205  ,cad_g31
15:47:46 206  ,cad_g32
15:47:46 207  ,cad_g33
15:47:46 208  ,cad_g34
15:47:46 209  ,cad_g35
15:47:46 210  ,cad_g36
15:47:46 211  ,cad_g37
15:47:46 212  ,cad_g38
15:47:46 213  ,cad_g39
15:47:46 214  ,cad_g40
15:47:46 215  ,cad_g41
15:47:46 216  ,chf_g00
15:47:46 217  ,chf_g01
15:47:46 218  ,chf_g02
15:47:46 219  ,chf_g03
15:47:46 220  ,chf_g04
15:47:46 221  ,chf_g05
15:47:46 222  ,chf_g06
15:47:46 223  ,chf_g07
15:47:46 224  ,chf_g08
15:47:46 225  ,chf_g09
15:47:46 226  ,chf_g10
15:47:46 227  ,chf_g11
15:47:46 228  ,chf_g12
15:47:46 229  ,chf_g13
15:47:46 230  ,chf_g14
15:47:46 231  ,chf_g15
15:47:46 232  ,chf_g16
15:47:46 233  ,chf_g17
15:47:46 234  ,chf_g18
15:47:46 235  ,chf_g19
15:47:46 236  ,chf_g20
15:47:46 237  ,chf_g21
15:47:46 238  ,chf_g22
15:47:46 239  ,chf_g23
15:47:46 240  ,chf_g24
15:47:46 241  ,chf_g25
15:47:46 242  ,chf_g26
15:47:46 243  ,chf_g27
15:47:46 244  ,chf_g28
15:47:46 245  ,chf_g29
15:47:46 246  ,chf_g30
15:47:46 247  ,chf_g31
15:47:46 248  ,chf_g32
15:47:46 249  ,chf_g33
15:47:46 250  ,chf_g34
15:47:46 251  ,chf_g35
15:47:46 252  ,chf_g36
15:47:46 253  ,chf_g37
15:47:46 254  ,chf_g38
15:47:46 255  ,chf_g39
15:47:46 256  ,chf_g40
15:47:46 257  ,chf_g41
15:47:46 258  FROM aud_ms6 m
15:47:46 259  WHERE gattn IN('nup','up')
15:47:46 260  AND 1+m.ydate < '&1'||' '||'&2'
15:47:46 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'15:20:00'

View created.

Elapsed: 00:00:00.12
15:47:46 SQL> 
15:47:46 SQL> -- rpt
15:47:46 SQL> 
15:47:46 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12705
up	     6459

Elapsed: 00:00:00.04
15:47:46 SQL> 
15:47:46 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-04 15:15:00

Elapsed: 00:00:00.04
15:47:46 SQL> 
15:47:46 SQL> -- Now build model from bme and score sme
15:47:46 SQL> @score1gattn.sql
15:47:46 SQL> -- score1gattn.sql
15:47:46 SQL> 
15:47:46 SQL> -- Does the 1st SVM score
15:47:46 SQL> 
15:47:46 SQL> -- Fill up svmc_apply_prep
15:47:46 SQL> @score_gattn.sql
15:47:46 SQL> --
15:47:46 SQL> -- score_gattn.sql
15:47:46 SQL> --
15:47:46 SQL> 
15:47:46 SQL> -- usage: score_gattn.sql
15:47:46 SQL> 
15:47:46 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:47:46 SQL> 
15:47:46 SQL> DEFINE target	= 'gattn'
15:47:46 SQL> DEFINE model_name = 'forex15'
15:47:46 SQL> DEFINE bldtable	= 'bme'
15:47:46 SQL> DEFINE scoretable = 'sme'
15:47:46 SQL> DEFINE case_id	= 'prdate'
15:47:46 SQL> 
15:47:46 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:47:46 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:47:46 SQL> 
15:47:46 SQL> -- Builds an SVM model using pl/sql.
15:47:46 SQL> 
15:47:46 SQL> -----------------------------------------------------------------------
15:47:46 SQL> --			    BUILD THE MODEL
15:47:46 SQL> -----------------------------------------------------------------------
15:47:46 SQL> 
15:47:46 SQL> -- Cleanup old build data preparation objects for repeat runs
15:47:46 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
15:47:46 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:47:46 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
15:47:46 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
15:47:46 SQL> 
15:47:46 SQL> 
15:47:46 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:47:46 SQL> --
15:47:46 SQL> -- DROP	TABLE svmc_settings ;
15:47:46 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:47:46 SQL> -- DELETE svmc_settings;
15:47:46 SQL> 
15:47:46 SQL> -- The default classification algorithm is Naive Bayes. So override
15:47:46 SQL> -- this choice to SVM using a settings table.
15:47:46 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:47:46 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:47:46 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:47:46 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:47:46 SQL> -- models.
15:47:46 SQL> --
15:47:46 SQL> 
15:47:46 SQL> -- Do this once and then comment it out.
15:47:46 SQL> -- That makes script go faster.
15:47:46 SQL> -- BEGIN
15:47:46 SQL> -- -- Populate settings table
15:47:46 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:47:46 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:47:46 SQL> --
15:47:46 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:47:46 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:47:46 SQL> --
15:47:46 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:47:46 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:47:46 SQL> --   COMMIT;
15:47:46 SQL> -- END;
15:47:46 SQL> -- /
15:47:46 SQL> 
15:47:46 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:47:46 SQL> 
15:47:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:47:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:47:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:47:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:47:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:47:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:47:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:47:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:47:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:47:46 SQL> 
15:47:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:47:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:47:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:47:46 SQL> 
15:47:46 SQL> --------------------------------
15:47:46 SQL> -- PREPARE BUILD (TRAINING) DATA
15:47:46 SQL> --
15:47:46 SQL> 
15:47:46 SQL> -- 1. Missing Value treatment for all Predictors and
15:47:46 SQL> -- 2. Outlier Treatment and
15:47:46 SQL> -- 3. Normalization are performed below.
15:47:46 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:47:46 SQL> --    normalized here.
15:47:46 SQL> 
15:47:46 SQL> BEGIN
15:47:46   2  	-- Perform missing value treatment for all predictors
15:47:46   3  	-- create miss tables
15:47:46   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:47:46   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:47:46   6  
15:47:46   7  	-- populate miss tables
15:47:46   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:47:46   9  	  miss_table_name => 'svmc_miss_num',
15:47:46  10  	  data_table_name => '&bldtable',
15:47:46  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:47:46  12  
15:47:46  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:47:46  14  	  miss_table_name => 'svmc_miss_cat',
15:47:46  15  	  data_table_name => '&bldtable',
15:47:46  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:47:46  17  
15:47:46  18  	-- xform input data to replace missing values
15:47:46  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:47:46  20  	  miss_table_name => 'svmc_miss_num',
15:47:46  21  	  data_table_name => '&bldtable',
15:47:46  22  	  xform_view_name => 'xformed_build_miss_num');
15:47:46  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:47:46  24  	  miss_table_name => 'svmc_miss_cat',
15:47:46  25  	  data_table_name => '&bldtable',
15:47:46  26  	  xform_view_name => 'xformed_build_miss_cat');
15:47:46  27  
15:47:46  28  	-- Perform outlier treatment.
15:47:46  29  	-- create clip table
15:47:46  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:47:46  31  
15:47:46  32  	-- populate clip table
15:47:46  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:47:46  34  	  clip_table_name => 'svmc_clip',
15:47:46  35  	  data_table_name => '&bldtable',
15:47:46  36  	  tail_frac	  => 0.025,
15:47:46  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:47:46  38  
15:47:46  39  	-- xform input data to winsorized data
15:47:46  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:47:46  41  	  clip_table_name => 'svmc_clip',
15:47:46  42  	  data_table_name => '&bldtable',
15:47:46  43  	  xform_view_name => 'svmc_winsor');
15:47:46  44  
15:47:46  45  	-- create normalization table
15:47:46  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:47:46  47  
15:47:46  48  	-- populate normalization table based on winsorized data
15:47:46  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:47:46  50  	  norm_table_name => 'svmc_norm',
15:47:46  51  	  data_table_name => 'svmc_winsor',
15:47:46  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:47:46  53  
15:47:46  54  	-- normalize the original data
15:47:46  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:47:46  56  	  norm_table_name => 'svmc_norm',
15:47:46  57  	  data_table_name => '&bldtable',
15:47:46  58  	  xform_view_name => 'svmc_build_prep');
15:47:46  59  END;
15:47:46  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.29
15:48:06 SQL> 
15:48:06 SQL> ---------------------
15:48:06 SQL> -- CREATE A NEW MODEL
15:48:06 SQL> --
15:48:06 SQL> -- Cleanup old model with the same name for repeat runs
15:48:06 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:48:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:48:06   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
15:48:07 SQL> 
15:48:07 SQL> -- Build a new SVM Model
15:48:07 SQL> BEGIN
15:48:07   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:48:07   3  	  model_name	      => '&model_name',
15:48:07   4  	  mining_function     => dbms_data_mining.classification,
15:48:07   5  	  data_table_name     => 'svmc_build_prep',
15:48:07   6  	  case_id_column_name => '&case_id',
15:48:07   7  	  target_column_name  => '&target',
15:48:07   8  	  settings_table_name => 'svmc_settings');
15:48:07   9  END;
15:48:07  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.21
15:48:34 SQL> 
15:48:34 SQL> -----------------------------------------------------------------------
15:48:34 SQL> --			       APPLY/score THE MODEL
15:48:34 SQL> -----------------------------------------------------------------------
15:48:34 SQL> 
15:48:34 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:48:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:48:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:48:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
15:48:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:48:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:48:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:48:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:48:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:48:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:48:34 SQL> -----------------------
15:48:34 SQL> -- PREPARE SCORING DATA
15:48:34 SQL> --
15:48:34 SQL> -- If the data for model creation has been prepared, then the data
15:48:34 SQL> -- to be scored using the model must be prepared in the same manner
15:48:34 SQL> -- in order to obtain meaningful results.
15:48:34 SQL> --
15:48:34 SQL> -- 1. Missing Value treatment for all Predictors and
15:48:34 SQL> -- 2. Normalization
15:48:34 SQL> -- No outlier treatment will be performed during test and apply. The
15:48:34 SQL> -- normalization step is sufficient, since the normalization parameters
15:48:34 SQL> -- already capture the effects of outlier treatment done with build data.
15:48:34 SQL> --
15:48:34 SQL> BEGIN
15:48:34   2  	-- Xform Test data to replace missing values
15:48:34   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:48:34   4  	  miss_table_name => 'svmc_miss_num',
15:48:34   5  	  data_table_name => '&scoretable',
15:48:34   6  	  xform_view_name => 'xformed_apply_miss_num');
15:48:34   7  
15:48:34   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:48:34   9  	  miss_table_name => 'svmc_miss_cat',
15:48:34  10  	  data_table_name => '&scoretable',
15:48:34  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:48:34  12  
15:48:34  13  	-- Normalize the data to be scored
15:48:34  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:48:34  15  	  norm_table_name => 'svmc_norm',
15:48:34  16  	  data_table_name => '&scoretable',
15:48:34  17  	  xform_view_name => 'svmc_apply_prep');
15:48:34  18  END;
15:48:34  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.31
15:48:36 SQL> 
15:48:36 SQL> -- Use same model_name used in score_gattn.sql
15:48:36 SQL> DEFINE model_name = 'forex15'
15:48:36 SQL> 
15:48:36 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
15:48:36 SQL> 
15:48:36 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
15:48:36   2  SELECT
15:48:36   3  prdate
15:48:36   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:48:36   5  ,sysdate
15:48:36   6  ,SUBSTR(prdate,1,3)pair
15:48:36   7  ,SUBSTR(prdate,4,19)ydate
15:48:36   8  FROM svmc_apply_prep
15:48:36   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.19
15:48:36 SQL> @aud_score1day_gattn.sql	2011-01-05 15:25:00
15:48:36 SQL> --
15:48:36 SQL> -- aud_score1day_gattn.sql
15:48:36 SQL> --
15:48:36 SQL> 
15:48:36 SQL> CREATE OR REPLACE VIEW sme AS
15:48:36   2  SELECT
15:48:36   3  'aud'||m.ydate prdate
15:48:36   4  ,NULL gattn
15:48:36   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:48:36   6  ,eur_g00
15:48:36   7  ,eur_g01
15:48:36   8  ,eur_g02
15:48:36   9  ,eur_g03
15:48:36  10  ,eur_g04
15:48:36  11  ,eur_g05
15:48:36  12  ,eur_g06
15:48:36  13  ,eur_g07
15:48:36  14  ,eur_g08
15:48:36  15  ,eur_g09
15:48:36  16  ,eur_g10
15:48:36  17  ,eur_g11
15:48:36  18  ,eur_g12
15:48:36  19  ,eur_g13
15:48:36  20  ,eur_g14
15:48:36  21  ,eur_g15
15:48:36  22  ,eur_g16
15:48:36  23  ,eur_g17
15:48:36  24  ,eur_g18
15:48:36  25  ,eur_g19
15:48:36  26  ,eur_g20
15:48:36  27  ,eur_g21
15:48:36  28  ,eur_g22
15:48:36  29  ,eur_g23
15:48:36  30  ,eur_g24
15:48:36  31  ,eur_g25
15:48:36  32  ,eur_g26
15:48:36  33  ,eur_g27
15:48:36  34  ,eur_g28
15:48:36  35  ,eur_g29
15:48:36  36  ,eur_g30
15:48:36  37  ,eur_g31
15:48:36  38  ,eur_g32
15:48:36  39  ,eur_g33
15:48:36  40  ,eur_g34
15:48:36  41  ,eur_g35
15:48:36  42  ,eur_g36
15:48:36  43  ,eur_g37
15:48:36  44  ,eur_g38
15:48:36  45  ,eur_g39
15:48:36  46  ,eur_g40
15:48:36  47  ,eur_g41
15:48:36  48  ,aud_g00
15:48:36  49  ,aud_g01
15:48:36  50  ,aud_g02
15:48:36  51  ,aud_g03
15:48:36  52  ,aud_g04
15:48:36  53  ,aud_g05
15:48:36  54  ,aud_g06
15:48:36  55  ,aud_g07
15:48:36  56  ,aud_g08
15:48:36  57  ,aud_g09
15:48:36  58  ,aud_g10
15:48:36  59  ,aud_g11
15:48:36  60  ,aud_g12
15:48:36  61  ,aud_g13
15:48:36  62  ,aud_g14
15:48:36  63  ,aud_g15
15:48:36  64  ,aud_g16
15:48:36  65  ,aud_g17
15:48:36  66  ,aud_g18
15:48:36  67  ,aud_g19
15:48:36  68  ,aud_g20
15:48:36  69  ,aud_g21
15:48:36  70  ,aud_g22
15:48:36  71  ,aud_g23
15:48:36  72  ,aud_g24
15:48:36  73  ,aud_g25
15:48:36  74  ,aud_g26
15:48:36  75  ,aud_g27
15:48:36  76  ,aud_g28
15:48:36  77  ,aud_g29
15:48:36  78  ,aud_g30
15:48:36  79  ,aud_g31
15:48:36  80  ,aud_g32
15:48:36  81  ,aud_g33
15:48:36  82  ,aud_g34
15:48:36  83  ,aud_g35
15:48:36  84  ,aud_g36
15:48:36  85  ,aud_g37
15:48:36  86  ,aud_g38
15:48:36  87  ,aud_g39
15:48:36  88  ,aud_g40
15:48:36  89  ,aud_g41
15:48:36  90  ,gbp_g00
15:48:36  91  ,gbp_g01
15:48:36  92  ,gbp_g02
15:48:36  93  ,gbp_g03
15:48:36  94  ,gbp_g04
15:48:36  95  ,gbp_g05
15:48:36  96  ,gbp_g06
15:48:36  97  ,gbp_g07
15:48:36  98  ,gbp_g08
15:48:36  99  ,gbp_g09
15:48:36 100  ,gbp_g10
15:48:36 101  ,gbp_g11
15:48:36 102  ,gbp_g12
15:48:36 103  ,gbp_g13
15:48:36 104  ,gbp_g14
15:48:36 105  ,gbp_g15
15:48:36 106  ,gbp_g16
15:48:36 107  ,gbp_g17
15:48:36 108  ,gbp_g18
15:48:36 109  ,gbp_g19
15:48:36 110  ,gbp_g20
15:48:36 111  ,gbp_g21
15:48:36 112  ,gbp_g22
15:48:36 113  ,gbp_g23
15:48:36 114  ,gbp_g24
15:48:36 115  ,gbp_g25
15:48:36 116  ,gbp_g26
15:48:36 117  ,gbp_g27
15:48:36 118  ,gbp_g28
15:48:36 119  ,gbp_g29
15:48:36 120  ,gbp_g30
15:48:36 121  ,gbp_g31
15:48:36 122  ,gbp_g32
15:48:36 123  ,gbp_g33
15:48:36 124  ,gbp_g34
15:48:36 125  ,gbp_g35
15:48:36 126  ,gbp_g36
15:48:36 127  ,gbp_g37
15:48:36 128  ,gbp_g38
15:48:36 129  ,gbp_g39
15:48:36 130  ,gbp_g40
15:48:36 131  ,gbp_g41
15:48:36 132  ,jpy_g00
15:48:36 133  ,jpy_g01
15:48:36 134  ,jpy_g02
15:48:36 135  ,jpy_g03
15:48:36 136  ,jpy_g04
15:48:36 137  ,jpy_g05
15:48:36 138  ,jpy_g06
15:48:36 139  ,jpy_g07
15:48:36 140  ,jpy_g08
15:48:36 141  ,jpy_g09
15:48:36 142  ,jpy_g10
15:48:36 143  ,jpy_g11
15:48:36 144  ,jpy_g12
15:48:36 145  ,jpy_g13
15:48:36 146  ,jpy_g14
15:48:36 147  ,jpy_g15
15:48:36 148  ,jpy_g16
15:48:36 149  ,jpy_g17
15:48:36 150  ,jpy_g18
15:48:36 151  ,jpy_g19
15:48:36 152  ,jpy_g20
15:48:36 153  ,jpy_g21
15:48:36 154  ,jpy_g22
15:48:36 155  ,jpy_g23
15:48:36 156  ,jpy_g24
15:48:36 157  ,jpy_g25
15:48:36 158  ,jpy_g26
15:48:36 159  ,jpy_g27
15:48:36 160  ,jpy_g28
15:48:36 161  ,jpy_g29
15:48:36 162  ,jpy_g30
15:48:36 163  ,jpy_g31
15:48:36 164  ,jpy_g32
15:48:36 165  ,jpy_g33
15:48:36 166  ,jpy_g34
15:48:36 167  ,jpy_g35
15:48:36 168  ,jpy_g36
15:48:36 169  ,jpy_g37
15:48:36 170  ,jpy_g38
15:48:36 171  ,jpy_g39
15:48:36 172  ,jpy_g40
15:48:36 173  ,jpy_g41
15:48:36 174  ,cad_g00
15:48:36 175  ,cad_g01
15:48:36 176  ,cad_g02
15:48:36 177  ,cad_g03
15:48:36 178  ,cad_g04
15:48:36 179  ,cad_g05
15:48:36 180  ,cad_g06
15:48:36 181  ,cad_g07
15:48:36 182  ,cad_g08
15:48:36 183  ,cad_g09
15:48:36 184  ,cad_g10
15:48:36 185  ,cad_g11
15:48:36 186  ,cad_g12
15:48:36 187  ,cad_g13
15:48:36 188  ,cad_g14
15:48:36 189  ,cad_g15
15:48:36 190  ,cad_g16
15:48:36 191  ,cad_g17
15:48:36 192  ,cad_g18
15:48:36 193  ,cad_g19
15:48:36 194  ,cad_g20
15:48:36 195  ,cad_g21
15:48:36 196  ,cad_g22
15:48:36 197  ,cad_g23
15:48:36 198  ,cad_g24
15:48:36 199  ,cad_g25
15:48:36 200  ,cad_g26
15:48:36 201  ,cad_g27
15:48:36 202  ,cad_g28
15:48:36 203  ,cad_g29
15:48:36 204  ,cad_g30
15:48:36 205  ,cad_g31
15:48:36 206  ,cad_g32
15:48:36 207  ,cad_g33
15:48:36 208  ,cad_g34
15:48:36 209  ,cad_g35
15:48:36 210  ,cad_g36
15:48:36 211  ,cad_g37
15:48:36 212  ,cad_g38
15:48:36 213  ,cad_g39
15:48:36 214  ,cad_g40
15:48:36 215  ,cad_g41
15:48:36 216  ,chf_g00
15:48:36 217  ,chf_g01
15:48:36 218  ,chf_g02
15:48:36 219  ,chf_g03
15:48:36 220  ,chf_g04
15:48:36 221  ,chf_g05
15:48:36 222  ,chf_g06
15:48:36 223  ,chf_g07
15:48:36 224  ,chf_g08
15:48:36 225  ,chf_g09
15:48:36 226  ,chf_g10
15:48:36 227  ,chf_g11
15:48:36 228  ,chf_g12
15:48:36 229  ,chf_g13
15:48:36 230  ,chf_g14
15:48:36 231  ,chf_g15
15:48:36 232  ,chf_g16
15:48:36 233  ,chf_g17
15:48:36 234  ,chf_g18
15:48:36 235  ,chf_g19
15:48:36 236  ,chf_g20
15:48:36 237  ,chf_g21
15:48:36 238  ,chf_g22
15:48:36 239  ,chf_g23
15:48:36 240  ,chf_g24
15:48:36 241  ,chf_g25
15:48:36 242  ,chf_g26
15:48:36 243  ,chf_g27
15:48:36 244  ,chf_g28
15:48:36 245  ,chf_g29
15:48:36 246  ,chf_g30
15:48:36 247  ,chf_g31
15:48:36 248  ,chf_g32
15:48:36 249  ,chf_g33
15:48:36 250  ,chf_g34
15:48:36 251  ,chf_g35
15:48:36 252  ,chf_g36
15:48:36 253  ,chf_g37
15:48:36 254  ,chf_g38
15:48:36 255  ,chf_g39
15:48:36 256  ,chf_g40
15:48:36 257  ,chf_g41
15:48:36 258  FROM aud_ms6 m
15:48:36 259  WHERE m.ydate = '&1'||' '||'&2'
15:48:36 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'15:25:00'

View created.

Elapsed: 00:00:00.12
15:48:36 SQL> 
15:48:36 SQL> -- rpt
15:48:36 SQL> -- We should see just 1 row:
15:48:36 SQL> 
15:48:36 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
15:48:36 SQL> 
15:48:36 SQL> -- Build the model:
15:48:36 SQL> CREATE OR REPLACE VIEW bme AS
15:48:36   2  SELECT
15:48:36   3  'aud'||m.ydate prdate
15:48:36   4  ,gattn
15:48:36   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:48:36   6  ,eur_g00
15:48:36   7  ,eur_g01
15:48:36   8  ,eur_g02
15:48:36   9  ,eur_g03
15:48:36  10  ,eur_g04
15:48:36  11  ,eur_g05
15:48:36  12  ,eur_g06
15:48:36  13  ,eur_g07
15:48:36  14  ,eur_g08
15:48:36  15  ,eur_g09
15:48:36  16  ,eur_g10
15:48:36  17  ,eur_g11
15:48:36  18  ,eur_g12
15:48:36  19  ,eur_g13
15:48:36  20  ,eur_g14
15:48:36  21  ,eur_g15
15:48:36  22  ,eur_g16
15:48:36  23  ,eur_g17
15:48:36  24  ,eur_g18
15:48:36  25  ,eur_g19
15:48:36  26  ,eur_g20
15:48:36  27  ,eur_g21
15:48:36  28  ,eur_g22
15:48:36  29  ,eur_g23
15:48:36  30  ,eur_g24
15:48:36  31  ,eur_g25
15:48:36  32  ,eur_g26
15:48:36  33  ,eur_g27
15:48:36  34  ,eur_g28
15:48:36  35  ,eur_g29
15:48:36  36  ,eur_g30
15:48:36  37  ,eur_g31
15:48:36  38  ,eur_g32
15:48:36  39  ,eur_g33
15:48:36  40  ,eur_g34
15:48:36  41  ,eur_g35
15:48:36  42  ,eur_g36
15:48:36  43  ,eur_g37
15:48:36  44  ,eur_g38
15:48:36  45  ,eur_g39
15:48:36  46  ,eur_g40
15:48:36  47  ,eur_g41
15:48:36  48  ,aud_g00
15:48:36  49  ,aud_g01
15:48:36  50  ,aud_g02
15:48:36  51  ,aud_g03
15:48:36  52  ,aud_g04
15:48:36  53  ,aud_g05
15:48:36  54  ,aud_g06
15:48:36  55  ,aud_g07
15:48:36  56  ,aud_g08
15:48:36  57  ,aud_g09
15:48:36  58  ,aud_g10
15:48:36  59  ,aud_g11
15:48:36  60  ,aud_g12
15:48:36  61  ,aud_g13
15:48:36  62  ,aud_g14
15:48:36  63  ,aud_g15
15:48:36  64  ,aud_g16
15:48:36  65  ,aud_g17
15:48:36  66  ,aud_g18
15:48:36  67  ,aud_g19
15:48:36  68  ,aud_g20
15:48:36  69  ,aud_g21
15:48:36  70  ,aud_g22
15:48:36  71  ,aud_g23
15:48:36  72  ,aud_g24
15:48:36  73  ,aud_g25
15:48:36  74  ,aud_g26
15:48:36  75  ,aud_g27
15:48:36  76  ,aud_g28
15:48:36  77  ,aud_g29
15:48:36  78  ,aud_g30
15:48:36  79  ,aud_g31
15:48:36  80  ,aud_g32
15:48:36  81  ,aud_g33
15:48:36  82  ,aud_g34
15:48:36  83  ,aud_g35
15:48:36  84  ,aud_g36
15:48:36  85  ,aud_g37
15:48:36  86  ,aud_g38
15:48:36  87  ,aud_g39
15:48:36  88  ,aud_g40
15:48:36  89  ,aud_g41
15:48:36  90  ,gbp_g00
15:48:36  91  ,gbp_g01
15:48:36  92  ,gbp_g02
15:48:36  93  ,gbp_g03
15:48:36  94  ,gbp_g04
15:48:36  95  ,gbp_g05
15:48:36  96  ,gbp_g06
15:48:36  97  ,gbp_g07
15:48:36  98  ,gbp_g08
15:48:36  99  ,gbp_g09
15:48:36 100  ,gbp_g10
15:48:36 101  ,gbp_g11
15:48:36 102  ,gbp_g12
15:48:36 103  ,gbp_g13
15:48:36 104  ,gbp_g14
15:48:36 105  ,gbp_g15
15:48:36 106  ,gbp_g16
15:48:36 107  ,gbp_g17
15:48:36 108  ,gbp_g18
15:48:36 109  ,gbp_g19
15:48:36 110  ,gbp_g20
15:48:36 111  ,gbp_g21
15:48:36 112  ,gbp_g22
15:48:36 113  ,gbp_g23
15:48:36 114  ,gbp_g24
15:48:36 115  ,gbp_g25
15:48:36 116  ,gbp_g26
15:48:36 117  ,gbp_g27
15:48:36 118  ,gbp_g28
15:48:36 119  ,gbp_g29
15:48:36 120  ,gbp_g30
15:48:36 121  ,gbp_g31
15:48:36 122  ,gbp_g32
15:48:36 123  ,gbp_g33
15:48:36 124  ,gbp_g34
15:48:36 125  ,gbp_g35
15:48:36 126  ,gbp_g36
15:48:36 127  ,gbp_g37
15:48:36 128  ,gbp_g38
15:48:36 129  ,gbp_g39
15:48:36 130  ,gbp_g40
15:48:36 131  ,gbp_g41
15:48:36 132  ,jpy_g00
15:48:36 133  ,jpy_g01
15:48:36 134  ,jpy_g02
15:48:36 135  ,jpy_g03
15:48:36 136  ,jpy_g04
15:48:36 137  ,jpy_g05
15:48:36 138  ,jpy_g06
15:48:36 139  ,jpy_g07
15:48:36 140  ,jpy_g08
15:48:36 141  ,jpy_g09
15:48:36 142  ,jpy_g10
15:48:36 143  ,jpy_g11
15:48:36 144  ,jpy_g12
15:48:36 145  ,jpy_g13
15:48:36 146  ,jpy_g14
15:48:36 147  ,jpy_g15
15:48:36 148  ,jpy_g16
15:48:36 149  ,jpy_g17
15:48:36 150  ,jpy_g18
15:48:36 151  ,jpy_g19
15:48:36 152  ,jpy_g20
15:48:36 153  ,jpy_g21
15:48:36 154  ,jpy_g22
15:48:36 155  ,jpy_g23
15:48:36 156  ,jpy_g24
15:48:36 157  ,jpy_g25
15:48:36 158  ,jpy_g26
15:48:36 159  ,jpy_g27
15:48:36 160  ,jpy_g28
15:48:36 161  ,jpy_g29
15:48:36 162  ,jpy_g30
15:48:36 163  ,jpy_g31
15:48:36 164  ,jpy_g32
15:48:36 165  ,jpy_g33
15:48:36 166  ,jpy_g34
15:48:36 167  ,jpy_g35
15:48:36 168  ,jpy_g36
15:48:36 169  ,jpy_g37
15:48:36 170  ,jpy_g38
15:48:36 171  ,jpy_g39
15:48:36 172  ,jpy_g40
15:48:36 173  ,jpy_g41
15:48:36 174  ,cad_g00
15:48:36 175  ,cad_g01
15:48:36 176  ,cad_g02
15:48:36 177  ,cad_g03
15:48:36 178  ,cad_g04
15:48:36 179  ,cad_g05
15:48:36 180  ,cad_g06
15:48:36 181  ,cad_g07
15:48:36 182  ,cad_g08
15:48:36 183  ,cad_g09
15:48:36 184  ,cad_g10
15:48:36 185  ,cad_g11
15:48:36 186  ,cad_g12
15:48:36 187  ,cad_g13
15:48:36 188  ,cad_g14
15:48:36 189  ,cad_g15
15:48:36 190  ,cad_g16
15:48:36 191  ,cad_g17
15:48:36 192  ,cad_g18
15:48:36 193  ,cad_g19
15:48:36 194  ,cad_g20
15:48:36 195  ,cad_g21
15:48:36 196  ,cad_g22
15:48:36 197  ,cad_g23
15:48:36 198  ,cad_g24
15:48:36 199  ,cad_g25
15:48:36 200  ,cad_g26
15:48:36 201  ,cad_g27
15:48:36 202  ,cad_g28
15:48:36 203  ,cad_g29
15:48:36 204  ,cad_g30
15:48:36 205  ,cad_g31
15:48:36 206  ,cad_g32
15:48:36 207  ,cad_g33
15:48:36 208  ,cad_g34
15:48:36 209  ,cad_g35
15:48:36 210  ,cad_g36
15:48:36 211  ,cad_g37
15:48:36 212  ,cad_g38
15:48:36 213  ,cad_g39
15:48:36 214  ,cad_g40
15:48:36 215  ,cad_g41
15:48:36 216  ,chf_g00
15:48:36 217  ,chf_g01
15:48:36 218  ,chf_g02
15:48:36 219  ,chf_g03
15:48:36 220  ,chf_g04
15:48:36 221  ,chf_g05
15:48:36 222  ,chf_g06
15:48:36 223  ,chf_g07
15:48:36 224  ,chf_g08
15:48:36 225  ,chf_g09
15:48:36 226  ,chf_g10
15:48:36 227  ,chf_g11
15:48:36 228  ,chf_g12
15:48:36 229  ,chf_g13
15:48:36 230  ,chf_g14
15:48:36 231  ,chf_g15
15:48:36 232  ,chf_g16
15:48:36 233  ,chf_g17
15:48:36 234  ,chf_g18
15:48:36 235  ,chf_g19
15:48:36 236  ,chf_g20
15:48:36 237  ,chf_g21
15:48:36 238  ,chf_g22
15:48:36 239  ,chf_g23
15:48:36 240  ,chf_g24
15:48:36 241  ,chf_g25
15:48:36 242  ,chf_g26
15:48:36 243  ,chf_g27
15:48:36 244  ,chf_g28
15:48:36 245  ,chf_g29
15:48:36 246  ,chf_g30
15:48:36 247  ,chf_g31
15:48:36 248  ,chf_g32
15:48:36 249  ,chf_g33
15:48:36 250  ,chf_g34
15:48:36 251  ,chf_g35
15:48:36 252  ,chf_g36
15:48:36 253  ,chf_g37
15:48:36 254  ,chf_g38
15:48:36 255  ,chf_g39
15:48:36 256  ,chf_g40
15:48:36 257  ,chf_g41
15:48:36 258  FROM aud_ms6 m
15:48:36 259  WHERE gattn IN('nup','up')
15:48:36 260  AND 1+m.ydate < '&1'||' '||'&2'
15:48:36 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'15:25:00'

View created.

Elapsed: 00:00:00.13
15:48:36 SQL> 
15:48:36 SQL> -- rpt
15:48:36 SQL> 
15:48:36 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12705
up	     6460

Elapsed: 00:00:00.04
15:48:36 SQL> 
15:48:36 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-04 15:20:00

Elapsed: 00:00:00.03
15:48:36 SQL> 
15:48:36 SQL> -- Now build model from bme and score sme
15:48:36 SQL> @score1gattn.sql
15:48:36 SQL> -- score1gattn.sql
15:48:36 SQL> 
15:48:36 SQL> -- Does the 1st SVM score
15:48:36 SQL> 
15:48:36 SQL> -- Fill up svmc_apply_prep
15:48:36 SQL> @score_gattn.sql
15:48:36 SQL> --
15:48:36 SQL> -- score_gattn.sql
15:48:36 SQL> --
15:48:36 SQL> 
15:48:36 SQL> -- usage: score_gattn.sql
15:48:36 SQL> 
15:48:36 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:48:36 SQL> 
15:48:36 SQL> DEFINE target	= 'gattn'
15:48:36 SQL> DEFINE model_name = 'forex15'
15:48:36 SQL> DEFINE bldtable	= 'bme'
15:48:36 SQL> DEFINE scoretable = 'sme'
15:48:36 SQL> DEFINE case_id	= 'prdate'
15:48:36 SQL> 
15:48:36 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:48:36 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:48:36 SQL> 
15:48:36 SQL> -- Builds an SVM model using pl/sql.
15:48:36 SQL> 
15:48:36 SQL> -----------------------------------------------------------------------
15:48:36 SQL> --			    BUILD THE MODEL
15:48:36 SQL> -----------------------------------------------------------------------
15:48:36 SQL> 
15:48:36 SQL> -- Cleanup old build data preparation objects for repeat runs
15:48:36 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
15:48:36 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:48:36 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
15:48:36 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
15:48:36 SQL> 
15:48:36 SQL> 
15:48:36 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:48:36 SQL> --
15:48:36 SQL> -- DROP	TABLE svmc_settings ;
15:48:36 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:48:36 SQL> -- DELETE svmc_settings;
15:48:36 SQL> 
15:48:36 SQL> -- The default classification algorithm is Naive Bayes. So override
15:48:36 SQL> -- this choice to SVM using a settings table.
15:48:36 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:48:36 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:48:36 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:48:36 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:48:36 SQL> -- models.
15:48:36 SQL> --
15:48:36 SQL> 
15:48:36 SQL> -- Do this once and then comment it out.
15:48:36 SQL> -- That makes script go faster.
15:48:36 SQL> -- BEGIN
15:48:36 SQL> -- -- Populate settings table
15:48:36 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:48:36 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:48:36 SQL> --
15:48:36 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:48:36 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:48:36 SQL> --
15:48:36 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:48:36 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:48:36 SQL> --   COMMIT;
15:48:36 SQL> -- END;
15:48:36 SQL> -- /
15:48:36 SQL> 
15:48:36 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:48:36 SQL> 
15:48:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:48:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:48:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:48:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:48:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:48:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
15:48:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:48:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:48:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:48:36 SQL> 
15:48:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:48:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:48:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:48:36 SQL> 
15:48:36 SQL> --------------------------------
15:48:36 SQL> -- PREPARE BUILD (TRAINING) DATA
15:48:36 SQL> --
15:48:36 SQL> 
15:48:36 SQL> -- 1. Missing Value treatment for all Predictors and
15:48:36 SQL> -- 2. Outlier Treatment and
15:48:36 SQL> -- 3. Normalization are performed below.
15:48:36 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:48:36 SQL> --    normalized here.
15:48:36 SQL> 
15:48:36 SQL> BEGIN
15:48:36   2  	-- Perform missing value treatment for all predictors
15:48:36   3  	-- create miss tables
15:48:36   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:48:36   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:48:36   6  
15:48:36   7  	-- populate miss tables
15:48:36   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:48:36   9  	  miss_table_name => 'svmc_miss_num',
15:48:36  10  	  data_table_name => '&bldtable',
15:48:36  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:48:36  12  
15:48:36  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:48:36  14  	  miss_table_name => 'svmc_miss_cat',
15:48:36  15  	  data_table_name => '&bldtable',
15:48:36  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:48:36  17  
15:48:36  18  	-- xform input data to replace missing values
15:48:36  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:48:36  20  	  miss_table_name => 'svmc_miss_num',
15:48:36  21  	  data_table_name => '&bldtable',
15:48:36  22  	  xform_view_name => 'xformed_build_miss_num');
15:48:36  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:48:36  24  	  miss_table_name => 'svmc_miss_cat',
15:48:36  25  	  data_table_name => '&bldtable',
15:48:36  26  	  xform_view_name => 'xformed_build_miss_cat');
15:48:36  27  
15:48:36  28  	-- Perform outlier treatment.
15:48:36  29  	-- create clip table
15:48:36  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:48:36  31  
15:48:36  32  	-- populate clip table
15:48:36  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:48:36  34  	  clip_table_name => 'svmc_clip',
15:48:36  35  	  data_table_name => '&bldtable',
15:48:36  36  	  tail_frac	  => 0.025,
15:48:36  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:48:36  38  
15:48:36  39  	-- xform input data to winsorized data
15:48:36  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:48:36  41  	  clip_table_name => 'svmc_clip',
15:48:36  42  	  data_table_name => '&bldtable',
15:48:36  43  	  xform_view_name => 'svmc_winsor');
15:48:36  44  
15:48:36  45  	-- create normalization table
15:48:36  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:48:36  47  
15:48:36  48  	-- populate normalization table based on winsorized data
15:48:36  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:48:36  50  	  norm_table_name => 'svmc_norm',
15:48:36  51  	  data_table_name => 'svmc_winsor',
15:48:36  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:48:36  53  
15:48:36  54  	-- normalize the original data
15:48:36  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:48:36  56  	  norm_table_name => 'svmc_norm',
15:48:36  57  	  data_table_name => '&bldtable',
15:48:36  58  	  xform_view_name => 'svmc_build_prep');
15:48:36  59  END;
15:48:36  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.47
15:48:55 SQL> 
15:48:55 SQL> ---------------------
15:48:55 SQL> -- CREATE A NEW MODEL
15:48:55 SQL> --
15:48:55 SQL> -- Cleanup old model with the same name for repeat runs
15:48:55 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:48:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:48:55   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.07
15:48:56 SQL> 
15:48:56 SQL> -- Build a new SVM Model
15:48:56 SQL> BEGIN
15:48:56   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:48:56   3  	  model_name	      => '&model_name',
15:48:56   4  	  mining_function     => dbms_data_mining.classification,
15:48:56   5  	  data_table_name     => 'svmc_build_prep',
15:48:56   6  	  case_id_column_name => '&case_id',
15:48:56   7  	  target_column_name  => '&target',
15:48:56   8  	  settings_table_name => 'svmc_settings');
15:48:56   9  END;
15:48:56  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.50
15:49:23 SQL> 
15:49:23 SQL> -----------------------------------------------------------------------
15:49:23 SQL> --			       APPLY/score THE MODEL
15:49:23 SQL> -----------------------------------------------------------------------
15:49:23 SQL> 
15:49:23 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:49:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:49:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:49:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:49:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:49:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:49:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
15:49:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:49:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:49:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:49:24 SQL> -----------------------
15:49:24 SQL> -- PREPARE SCORING DATA
15:49:24 SQL> --
15:49:24 SQL> -- If the data for model creation has been prepared, then the data
15:49:24 SQL> -- to be scored using the model must be prepared in the same manner
15:49:24 SQL> -- in order to obtain meaningful results.
15:49:24 SQL> --
15:49:24 SQL> -- 1. Missing Value treatment for all Predictors and
15:49:24 SQL> -- 2. Normalization
15:49:24 SQL> -- No outlier treatment will be performed during test and apply. The
15:49:24 SQL> -- normalization step is sufficient, since the normalization parameters
15:49:24 SQL> -- already capture the effects of outlier treatment done with build data.
15:49:24 SQL> --
15:49:24 SQL> BEGIN
15:49:24   2  	-- Xform Test data to replace missing values
15:49:24   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:49:24   4  	  miss_table_name => 'svmc_miss_num',
15:49:24   5  	  data_table_name => '&scoretable',
15:49:24   6  	  xform_view_name => 'xformed_apply_miss_num');
15:49:24   7  
15:49:24   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:49:24   9  	  miss_table_name => 'svmc_miss_cat',
15:49:24  10  	  data_table_name => '&scoretable',
15:49:24  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:49:24  12  
15:49:24  13  	-- Normalize the data to be scored
15:49:24  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:49:24  15  	  norm_table_name => 'svmc_norm',
15:49:24  16  	  data_table_name => '&scoretable',
15:49:24  17  	  xform_view_name => 'svmc_apply_prep');
15:49:24  18  END;
15:49:24  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.28
15:49:25 SQL> 
15:49:25 SQL> -- Use same model_name used in score_gattn.sql
15:49:25 SQL> DEFINE model_name = 'forex15'
15:49:25 SQL> 
15:49:25 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
15:49:25 SQL> 
15:49:25 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
15:49:25   2  SELECT
15:49:25   3  prdate
15:49:25   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:49:25   5  ,sysdate
15:49:25   6  ,SUBSTR(prdate,1,3)pair
15:49:25   7  ,SUBSTR(prdate,4,19)ydate
15:49:25   8  FROM svmc_apply_prep
15:49:25   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:49:25 SQL> @aud_score1day_gattn.sql	2011-01-05 15:30:00
15:49:25 SQL> --
15:49:25 SQL> -- aud_score1day_gattn.sql
15:49:25 SQL> --
15:49:25 SQL> 
15:49:25 SQL> CREATE OR REPLACE VIEW sme AS
15:49:25   2  SELECT
15:49:25   3  'aud'||m.ydate prdate
15:49:25   4  ,NULL gattn
15:49:25   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:49:25   6  ,eur_g00
15:49:25   7  ,eur_g01
15:49:25   8  ,eur_g02
15:49:25   9  ,eur_g03
15:49:25  10  ,eur_g04
15:49:25  11  ,eur_g05
15:49:25  12  ,eur_g06
15:49:25  13  ,eur_g07
15:49:25  14  ,eur_g08
15:49:25  15  ,eur_g09
15:49:25  16  ,eur_g10
15:49:25  17  ,eur_g11
15:49:25  18  ,eur_g12
15:49:25  19  ,eur_g13
15:49:25  20  ,eur_g14
15:49:25  21  ,eur_g15
15:49:25  22  ,eur_g16
15:49:25  23  ,eur_g17
15:49:25  24  ,eur_g18
15:49:25  25  ,eur_g19
15:49:25  26  ,eur_g20
15:49:25  27  ,eur_g21
15:49:25  28  ,eur_g22
15:49:25  29  ,eur_g23
15:49:25  30  ,eur_g24
15:49:25  31  ,eur_g25
15:49:25  32  ,eur_g26
15:49:25  33  ,eur_g27
15:49:25  34  ,eur_g28
15:49:25  35  ,eur_g29
15:49:25  36  ,eur_g30
15:49:25  37  ,eur_g31
15:49:25  38  ,eur_g32
15:49:25  39  ,eur_g33
15:49:25  40  ,eur_g34
15:49:25  41  ,eur_g35
15:49:25  42  ,eur_g36
15:49:25  43  ,eur_g37
15:49:25  44  ,eur_g38
15:49:25  45  ,eur_g39
15:49:25  46  ,eur_g40
15:49:25  47  ,eur_g41
15:49:25  48  ,aud_g00
15:49:25  49  ,aud_g01
15:49:25  50  ,aud_g02
15:49:25  51  ,aud_g03
15:49:25  52  ,aud_g04
15:49:25  53  ,aud_g05
15:49:25  54  ,aud_g06
15:49:25  55  ,aud_g07
15:49:25  56  ,aud_g08
15:49:25  57  ,aud_g09
15:49:25  58  ,aud_g10
15:49:25  59  ,aud_g11
15:49:25  60  ,aud_g12
15:49:25  61  ,aud_g13
15:49:25  62  ,aud_g14
15:49:25  63  ,aud_g15
15:49:25  64  ,aud_g16
15:49:25  65  ,aud_g17
15:49:25  66  ,aud_g18
15:49:25  67  ,aud_g19
15:49:25  68  ,aud_g20
15:49:25  69  ,aud_g21
15:49:25  70  ,aud_g22
15:49:25  71  ,aud_g23
15:49:25  72  ,aud_g24
15:49:25  73  ,aud_g25
15:49:25  74  ,aud_g26
15:49:25  75  ,aud_g27
15:49:25  76  ,aud_g28
15:49:25  77  ,aud_g29
15:49:25  78  ,aud_g30
15:49:25  79  ,aud_g31
15:49:25  80  ,aud_g32
15:49:25  81  ,aud_g33
15:49:25  82  ,aud_g34
15:49:25  83  ,aud_g35
15:49:25  84  ,aud_g36
15:49:25  85  ,aud_g37
15:49:25  86  ,aud_g38
15:49:25  87  ,aud_g39
15:49:25  88  ,aud_g40
15:49:25  89  ,aud_g41
15:49:25  90  ,gbp_g00
15:49:25  91  ,gbp_g01
15:49:25  92  ,gbp_g02
15:49:25  93  ,gbp_g03
15:49:25  94  ,gbp_g04
15:49:25  95  ,gbp_g05
15:49:25  96  ,gbp_g06
15:49:25  97  ,gbp_g07
15:49:25  98  ,gbp_g08
15:49:25  99  ,gbp_g09
15:49:25 100  ,gbp_g10
15:49:25 101  ,gbp_g11
15:49:25 102  ,gbp_g12
15:49:25 103  ,gbp_g13
15:49:25 104  ,gbp_g14
15:49:25 105  ,gbp_g15
15:49:25 106  ,gbp_g16
15:49:25 107  ,gbp_g17
15:49:25 108  ,gbp_g18
15:49:25 109  ,gbp_g19
15:49:25 110  ,gbp_g20
15:49:25 111  ,gbp_g21
15:49:25 112  ,gbp_g22
15:49:25 113  ,gbp_g23
15:49:25 114  ,gbp_g24
15:49:25 115  ,gbp_g25
15:49:25 116  ,gbp_g26
15:49:25 117  ,gbp_g27
15:49:25 118  ,gbp_g28
15:49:25 119  ,gbp_g29
15:49:25 120  ,gbp_g30
15:49:25 121  ,gbp_g31
15:49:25 122  ,gbp_g32
15:49:25 123  ,gbp_g33
15:49:25 124  ,gbp_g34
15:49:25 125  ,gbp_g35
15:49:25 126  ,gbp_g36
15:49:25 127  ,gbp_g37
15:49:25 128  ,gbp_g38
15:49:25 129  ,gbp_g39
15:49:25 130  ,gbp_g40
15:49:25 131  ,gbp_g41
15:49:25 132  ,jpy_g00
15:49:25 133  ,jpy_g01
15:49:25 134  ,jpy_g02
15:49:25 135  ,jpy_g03
15:49:25 136  ,jpy_g04
15:49:25 137  ,jpy_g05
15:49:25 138  ,jpy_g06
15:49:25 139  ,jpy_g07
15:49:25 140  ,jpy_g08
15:49:25 141  ,jpy_g09
15:49:25 142  ,jpy_g10
15:49:25 143  ,jpy_g11
15:49:25 144  ,jpy_g12
15:49:25 145  ,jpy_g13
15:49:25 146  ,jpy_g14
15:49:25 147  ,jpy_g15
15:49:25 148  ,jpy_g16
15:49:25 149  ,jpy_g17
15:49:25 150  ,jpy_g18
15:49:25 151  ,jpy_g19
15:49:25 152  ,jpy_g20
15:49:25 153  ,jpy_g21
15:49:25 154  ,jpy_g22
15:49:25 155  ,jpy_g23
15:49:25 156  ,jpy_g24
15:49:25 157  ,jpy_g25
15:49:25 158  ,jpy_g26
15:49:25 159  ,jpy_g27
15:49:25 160  ,jpy_g28
15:49:25 161  ,jpy_g29
15:49:25 162  ,jpy_g30
15:49:25 163  ,jpy_g31
15:49:25 164  ,jpy_g32
15:49:25 165  ,jpy_g33
15:49:25 166  ,jpy_g34
15:49:25 167  ,jpy_g35
15:49:25 168  ,jpy_g36
15:49:25 169  ,jpy_g37
15:49:25 170  ,jpy_g38
15:49:25 171  ,jpy_g39
15:49:25 172  ,jpy_g40
15:49:25 173  ,jpy_g41
15:49:25 174  ,cad_g00
15:49:25 175  ,cad_g01
15:49:25 176  ,cad_g02
15:49:25 177  ,cad_g03
15:49:25 178  ,cad_g04
15:49:25 179  ,cad_g05
15:49:25 180  ,cad_g06
15:49:25 181  ,cad_g07
15:49:25 182  ,cad_g08
15:49:25 183  ,cad_g09
15:49:25 184  ,cad_g10
15:49:25 185  ,cad_g11
15:49:25 186  ,cad_g12
15:49:25 187  ,cad_g13
15:49:25 188  ,cad_g14
15:49:25 189  ,cad_g15
15:49:25 190  ,cad_g16
15:49:25 191  ,cad_g17
15:49:25 192  ,cad_g18
15:49:25 193  ,cad_g19
15:49:25 194  ,cad_g20
15:49:25 195  ,cad_g21
15:49:25 196  ,cad_g22
15:49:25 197  ,cad_g23
15:49:25 198  ,cad_g24
15:49:25 199  ,cad_g25
15:49:25 200  ,cad_g26
15:49:25 201  ,cad_g27
15:49:25 202  ,cad_g28
15:49:25 203  ,cad_g29
15:49:25 204  ,cad_g30
15:49:25 205  ,cad_g31
15:49:25 206  ,cad_g32
15:49:25 207  ,cad_g33
15:49:25 208  ,cad_g34
15:49:25 209  ,cad_g35
15:49:25 210  ,cad_g36
15:49:25 211  ,cad_g37
15:49:25 212  ,cad_g38
15:49:25 213  ,cad_g39
15:49:25 214  ,cad_g40
15:49:25 215  ,cad_g41
15:49:25 216  ,chf_g00
15:49:25 217  ,chf_g01
15:49:25 218  ,chf_g02
15:49:25 219  ,chf_g03
15:49:25 220  ,chf_g04
15:49:25 221  ,chf_g05
15:49:25 222  ,chf_g06
15:49:25 223  ,chf_g07
15:49:25 224  ,chf_g08
15:49:25 225  ,chf_g09
15:49:25 226  ,chf_g10
15:49:25 227  ,chf_g11
15:49:25 228  ,chf_g12
15:49:25 229  ,chf_g13
15:49:25 230  ,chf_g14
15:49:25 231  ,chf_g15
15:49:25 232  ,chf_g16
15:49:25 233  ,chf_g17
15:49:25 234  ,chf_g18
15:49:25 235  ,chf_g19
15:49:25 236  ,chf_g20
15:49:25 237  ,chf_g21
15:49:25 238  ,chf_g22
15:49:25 239  ,chf_g23
15:49:25 240  ,chf_g24
15:49:25 241  ,chf_g25
15:49:25 242  ,chf_g26
15:49:25 243  ,chf_g27
15:49:25 244  ,chf_g28
15:49:25 245  ,chf_g29
15:49:25 246  ,chf_g30
15:49:25 247  ,chf_g31
15:49:25 248  ,chf_g32
15:49:25 249  ,chf_g33
15:49:25 250  ,chf_g34
15:49:25 251  ,chf_g35
15:49:25 252  ,chf_g36
15:49:25 253  ,chf_g37
15:49:25 254  ,chf_g38
15:49:25 255  ,chf_g39
15:49:25 256  ,chf_g40
15:49:25 257  ,chf_g41
15:49:25 258  FROM aud_ms6 m
15:49:25 259  WHERE m.ydate = '&1'||' '||'&2'
15:49:25 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'15:30:00'

View created.

Elapsed: 00:00:00.13
15:49:25 SQL> 
15:49:25 SQL> -- rpt
15:49:25 SQL> -- We should see just 1 row:
15:49:25 SQL> 
15:49:25 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
15:49:25 SQL> 
15:49:25 SQL> -- Build the model:
15:49:25 SQL> CREATE OR REPLACE VIEW bme AS
15:49:25   2  SELECT
15:49:25   3  'aud'||m.ydate prdate
15:49:25   4  ,gattn
15:49:25   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:49:25   6  ,eur_g00
15:49:25   7  ,eur_g01
15:49:25   8  ,eur_g02
15:49:25   9  ,eur_g03
15:49:25  10  ,eur_g04
15:49:25  11  ,eur_g05
15:49:25  12  ,eur_g06
15:49:25  13  ,eur_g07
15:49:25  14  ,eur_g08
15:49:25  15  ,eur_g09
15:49:25  16  ,eur_g10
15:49:25  17  ,eur_g11
15:49:25  18  ,eur_g12
15:49:25  19  ,eur_g13
15:49:25  20  ,eur_g14
15:49:25  21  ,eur_g15
15:49:25  22  ,eur_g16
15:49:25  23  ,eur_g17
15:49:25  24  ,eur_g18
15:49:25  25  ,eur_g19
15:49:25  26  ,eur_g20
15:49:25  27  ,eur_g21
15:49:25  28  ,eur_g22
15:49:25  29  ,eur_g23
15:49:25  30  ,eur_g24
15:49:25  31  ,eur_g25
15:49:25  32  ,eur_g26
15:49:25  33  ,eur_g27
15:49:25  34  ,eur_g28
15:49:25  35  ,eur_g29
15:49:25  36  ,eur_g30
15:49:25  37  ,eur_g31
15:49:25  38  ,eur_g32
15:49:25  39  ,eur_g33
15:49:25  40  ,eur_g34
15:49:25  41  ,eur_g35
15:49:25  42  ,eur_g36
15:49:25  43  ,eur_g37
15:49:25  44  ,eur_g38
15:49:25  45  ,eur_g39
15:49:25  46  ,eur_g40
15:49:25  47  ,eur_g41
15:49:25  48  ,aud_g00
15:49:25  49  ,aud_g01
15:49:25  50  ,aud_g02
15:49:25  51  ,aud_g03
15:49:25  52  ,aud_g04
15:49:25  53  ,aud_g05
15:49:25  54  ,aud_g06
15:49:25  55  ,aud_g07
15:49:25  56  ,aud_g08
15:49:25  57  ,aud_g09
15:49:25  58  ,aud_g10
15:49:25  59  ,aud_g11
15:49:25  60  ,aud_g12
15:49:25  61  ,aud_g13
15:49:25  62  ,aud_g14
15:49:25  63  ,aud_g15
15:49:25  64  ,aud_g16
15:49:25  65  ,aud_g17
15:49:25  66  ,aud_g18
15:49:25  67  ,aud_g19
15:49:25  68  ,aud_g20
15:49:25  69  ,aud_g21
15:49:25  70  ,aud_g22
15:49:25  71  ,aud_g23
15:49:25  72  ,aud_g24
15:49:25  73  ,aud_g25
15:49:25  74  ,aud_g26
15:49:25  75  ,aud_g27
15:49:25  76  ,aud_g28
15:49:25  77  ,aud_g29
15:49:25  78  ,aud_g30
15:49:25  79  ,aud_g31
15:49:25  80  ,aud_g32
15:49:25  81  ,aud_g33
15:49:25  82  ,aud_g34
15:49:25  83  ,aud_g35
15:49:25  84  ,aud_g36
15:49:25  85  ,aud_g37
15:49:25  86  ,aud_g38
15:49:25  87  ,aud_g39
15:49:25  88  ,aud_g40
15:49:25  89  ,aud_g41
15:49:25  90  ,gbp_g00
15:49:25  91  ,gbp_g01
15:49:25  92  ,gbp_g02
15:49:25  93  ,gbp_g03
15:49:25  94  ,gbp_g04
15:49:25  95  ,gbp_g05
15:49:25  96  ,gbp_g06
15:49:25  97  ,gbp_g07
15:49:25  98  ,gbp_g08
15:49:25  99  ,gbp_g09
15:49:25 100  ,gbp_g10
15:49:25 101  ,gbp_g11
15:49:25 102  ,gbp_g12
15:49:25 103  ,gbp_g13
15:49:25 104  ,gbp_g14
15:49:25 105  ,gbp_g15
15:49:25 106  ,gbp_g16
15:49:25 107  ,gbp_g17
15:49:25 108  ,gbp_g18
15:49:25 109  ,gbp_g19
15:49:25 110  ,gbp_g20
15:49:25 111  ,gbp_g21
15:49:25 112  ,gbp_g22
15:49:25 113  ,gbp_g23
15:49:25 114  ,gbp_g24
15:49:25 115  ,gbp_g25
15:49:25 116  ,gbp_g26
15:49:25 117  ,gbp_g27
15:49:25 118  ,gbp_g28
15:49:25 119  ,gbp_g29
15:49:25 120  ,gbp_g30
15:49:25 121  ,gbp_g31
15:49:25 122  ,gbp_g32
15:49:25 123  ,gbp_g33
15:49:25 124  ,gbp_g34
15:49:25 125  ,gbp_g35
15:49:25 126  ,gbp_g36
15:49:25 127  ,gbp_g37
15:49:25 128  ,gbp_g38
15:49:25 129  ,gbp_g39
15:49:25 130  ,gbp_g40
15:49:25 131  ,gbp_g41
15:49:25 132  ,jpy_g00
15:49:25 133  ,jpy_g01
15:49:25 134  ,jpy_g02
15:49:25 135  ,jpy_g03
15:49:25 136  ,jpy_g04
15:49:25 137  ,jpy_g05
15:49:25 138  ,jpy_g06
15:49:25 139  ,jpy_g07
15:49:25 140  ,jpy_g08
15:49:25 141  ,jpy_g09
15:49:25 142  ,jpy_g10
15:49:25 143  ,jpy_g11
15:49:25 144  ,jpy_g12
15:49:25 145  ,jpy_g13
15:49:25 146  ,jpy_g14
15:49:25 147  ,jpy_g15
15:49:25 148  ,jpy_g16
15:49:25 149  ,jpy_g17
15:49:25 150  ,jpy_g18
15:49:25 151  ,jpy_g19
15:49:25 152  ,jpy_g20
15:49:25 153  ,jpy_g21
15:49:25 154  ,jpy_g22
15:49:25 155  ,jpy_g23
15:49:25 156  ,jpy_g24
15:49:25 157  ,jpy_g25
15:49:25 158  ,jpy_g26
15:49:25 159  ,jpy_g27
15:49:25 160  ,jpy_g28
15:49:25 161  ,jpy_g29
15:49:25 162  ,jpy_g30
15:49:25 163  ,jpy_g31
15:49:25 164  ,jpy_g32
15:49:25 165  ,jpy_g33
15:49:25 166  ,jpy_g34
15:49:25 167  ,jpy_g35
15:49:25 168  ,jpy_g36
15:49:25 169  ,jpy_g37
15:49:25 170  ,jpy_g38
15:49:25 171  ,jpy_g39
15:49:25 172  ,jpy_g40
15:49:25 173  ,jpy_g41
15:49:25 174  ,cad_g00
15:49:25 175  ,cad_g01
15:49:25 176  ,cad_g02
15:49:25 177  ,cad_g03
15:49:25 178  ,cad_g04
15:49:25 179  ,cad_g05
15:49:25 180  ,cad_g06
15:49:25 181  ,cad_g07
15:49:25 182  ,cad_g08
15:49:25 183  ,cad_g09
15:49:25 184  ,cad_g10
15:49:25 185  ,cad_g11
15:49:25 186  ,cad_g12
15:49:25 187  ,cad_g13
15:49:25 188  ,cad_g14
15:49:25 189  ,cad_g15
15:49:25 190  ,cad_g16
15:49:25 191  ,cad_g17
15:49:25 192  ,cad_g18
15:49:25 193  ,cad_g19
15:49:25 194  ,cad_g20
15:49:25 195  ,cad_g21
15:49:25 196  ,cad_g22
15:49:25 197  ,cad_g23
15:49:25 198  ,cad_g24
15:49:25 199  ,cad_g25
15:49:25 200  ,cad_g26
15:49:25 201  ,cad_g27
15:49:25 202  ,cad_g28
15:49:25 203  ,cad_g29
15:49:25 204  ,cad_g30
15:49:25 205  ,cad_g31
15:49:25 206  ,cad_g32
15:49:25 207  ,cad_g33
15:49:25 208  ,cad_g34
15:49:25 209  ,cad_g35
15:49:25 210  ,cad_g36
15:49:25 211  ,cad_g37
15:49:25 212  ,cad_g38
15:49:25 213  ,cad_g39
15:49:25 214  ,cad_g40
15:49:25 215  ,cad_g41
15:49:25 216  ,chf_g00
15:49:25 217  ,chf_g01
15:49:25 218  ,chf_g02
15:49:25 219  ,chf_g03
15:49:25 220  ,chf_g04
15:49:25 221  ,chf_g05
15:49:25 222  ,chf_g06
15:49:25 223  ,chf_g07
15:49:25 224  ,chf_g08
15:49:25 225  ,chf_g09
15:49:25 226  ,chf_g10
15:49:25 227  ,chf_g11
15:49:25 228  ,chf_g12
15:49:25 229  ,chf_g13
15:49:25 230  ,chf_g14
15:49:25 231  ,chf_g15
15:49:25 232  ,chf_g16
15:49:25 233  ,chf_g17
15:49:25 234  ,chf_g18
15:49:25 235  ,chf_g19
15:49:25 236  ,chf_g20
15:49:25 237  ,chf_g21
15:49:25 238  ,chf_g22
15:49:25 239  ,chf_g23
15:49:25 240  ,chf_g24
15:49:25 241  ,chf_g25
15:49:25 242  ,chf_g26
15:49:25 243  ,chf_g27
15:49:25 244  ,chf_g28
15:49:25 245  ,chf_g29
15:49:25 246  ,chf_g30
15:49:25 247  ,chf_g31
15:49:25 248  ,chf_g32
15:49:25 249  ,chf_g33
15:49:25 250  ,chf_g34
15:49:25 251  ,chf_g35
15:49:25 252  ,chf_g36
15:49:25 253  ,chf_g37
15:49:25 254  ,chf_g38
15:49:25 255  ,chf_g39
15:49:25 256  ,chf_g40
15:49:25 257  ,chf_g41
15:49:25 258  FROM aud_ms6 m
15:49:25 259  WHERE gattn IN('nup','up')
15:49:25 260  AND 1+m.ydate < '&1'||' '||'&2'
15:49:25 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'15:30:00'

View created.

Elapsed: 00:00:00.10
15:49:25 SQL> 
15:49:25 SQL> -- rpt
15:49:25 SQL> 
15:49:25 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12705
up	     6461

Elapsed: 00:00:00.04
15:49:26 SQL> 
15:49:26 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-04 15:25:00

Elapsed: 00:00:00.03
15:49:26 SQL> 
15:49:26 SQL> -- Now build model from bme and score sme
15:49:26 SQL> @score1gattn.sql
15:49:26 SQL> -- score1gattn.sql
15:49:26 SQL> 
15:49:26 SQL> -- Does the 1st SVM score
15:49:26 SQL> 
15:49:26 SQL> -- Fill up svmc_apply_prep
15:49:26 SQL> @score_gattn.sql
15:49:26 SQL> --
15:49:26 SQL> -- score_gattn.sql
15:49:26 SQL> --
15:49:26 SQL> 
15:49:26 SQL> -- usage: score_gattn.sql
15:49:26 SQL> 
15:49:26 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:49:26 SQL> 
15:49:26 SQL> DEFINE target	= 'gattn'
15:49:26 SQL> DEFINE model_name = 'forex15'
15:49:26 SQL> DEFINE bldtable	= 'bme'
15:49:26 SQL> DEFINE scoretable = 'sme'
15:49:26 SQL> DEFINE case_id	= 'prdate'
15:49:26 SQL> 
15:49:26 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:49:26 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:49:26 SQL> 
15:49:26 SQL> -- Builds an SVM model using pl/sql.
15:49:26 SQL> 
15:49:26 SQL> -----------------------------------------------------------------------
15:49:26 SQL> --			    BUILD THE MODEL
15:49:26 SQL> -----------------------------------------------------------------------
15:49:26 SQL> 
15:49:26 SQL> -- Cleanup old build data preparation objects for repeat runs
15:49:26 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
15:49:26 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:49:26 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
15:49:26 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
15:49:26 SQL> 
15:49:26 SQL> 
15:49:26 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:49:26 SQL> --
15:49:26 SQL> -- DROP	TABLE svmc_settings ;
15:49:26 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:49:26 SQL> -- DELETE svmc_settings;
15:49:26 SQL> 
15:49:26 SQL> -- The default classification algorithm is Naive Bayes. So override
15:49:26 SQL> -- this choice to SVM using a settings table.
15:49:26 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:49:26 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:49:26 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:49:26 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:49:26 SQL> -- models.
15:49:26 SQL> --
15:49:26 SQL> 
15:49:26 SQL> -- Do this once and then comment it out.
15:49:26 SQL> -- That makes script go faster.
15:49:26 SQL> -- BEGIN
15:49:26 SQL> -- -- Populate settings table
15:49:26 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:49:26 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:49:26 SQL> --
15:49:26 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:49:26 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:49:26 SQL> --
15:49:26 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:49:26 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:49:26 SQL> --   COMMIT;
15:49:26 SQL> -- END;
15:49:26 SQL> -- /
15:49:26 SQL> 
15:49:26 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:49:26 SQL> 
15:49:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:49:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:49:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:49:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:49:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:49:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:49:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:49:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:49:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:49:26 SQL> 
15:49:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:49:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:49:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:49:26 SQL> 
15:49:26 SQL> --------------------------------
15:49:26 SQL> -- PREPARE BUILD (TRAINING) DATA
15:49:26 SQL> --
15:49:26 SQL> 
15:49:26 SQL> -- 1. Missing Value treatment for all Predictors and
15:49:26 SQL> -- 2. Outlier Treatment and
15:49:26 SQL> -- 3. Normalization are performed below.
15:49:26 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:49:26 SQL> --    normalized here.
15:49:26 SQL> 
15:49:26 SQL> BEGIN
15:49:26   2  	-- Perform missing value treatment for all predictors
15:49:26   3  	-- create miss tables
15:49:26   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:49:26   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:49:26   6  
15:49:26   7  	-- populate miss tables
15:49:26   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:49:26   9  	  miss_table_name => 'svmc_miss_num',
15:49:26  10  	  data_table_name => '&bldtable',
15:49:26  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:49:26  12  
15:49:26  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:49:26  14  	  miss_table_name => 'svmc_miss_cat',
15:49:26  15  	  data_table_name => '&bldtable',
15:49:26  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:49:26  17  
15:49:26  18  	-- xform input data to replace missing values
15:49:26  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:49:26  20  	  miss_table_name => 'svmc_miss_num',
15:49:26  21  	  data_table_name => '&bldtable',
15:49:26  22  	  xform_view_name => 'xformed_build_miss_num');
15:49:26  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:49:26  24  	  miss_table_name => 'svmc_miss_cat',
15:49:26  25  	  data_table_name => '&bldtable',
15:49:26  26  	  xform_view_name => 'xformed_build_miss_cat');
15:49:26  27  
15:49:26  28  	-- Perform outlier treatment.
15:49:26  29  	-- create clip table
15:49:26  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:49:26  31  
15:49:26  32  	-- populate clip table
15:49:26  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:49:26  34  	  clip_table_name => 'svmc_clip',
15:49:26  35  	  data_table_name => '&bldtable',
15:49:26  36  	  tail_frac	  => 0.025,
15:49:26  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:49:26  38  
15:49:26  39  	-- xform input data to winsorized data
15:49:26  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:49:26  41  	  clip_table_name => 'svmc_clip',
15:49:26  42  	  data_table_name => '&bldtable',
15:49:26  43  	  xform_view_name => 'svmc_winsor');
15:49:26  44  
15:49:26  45  	-- create normalization table
15:49:26  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:49:26  47  
15:49:26  48  	-- populate normalization table based on winsorized data
15:49:26  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:49:26  50  	  norm_table_name => 'svmc_norm',
15:49:26  51  	  data_table_name => 'svmc_winsor',
15:49:26  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:49:26  53  
15:49:26  54  	-- normalize the original data
15:49:26  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:49:26  56  	  norm_table_name => 'svmc_norm',
15:49:26  57  	  data_table_name => '&bldtable',
15:49:26  58  	  xform_view_name => 'svmc_build_prep');
15:49:26  59  END;
15:49:26  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.54
15:49:44 SQL> 
15:49:44 SQL> ---------------------
15:49:44 SQL> -- CREATE A NEW MODEL
15:49:44 SQL> --
15:49:44 SQL> -- Cleanup old model with the same name for repeat runs
15:49:44 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:49:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:49:44   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.10
15:49:45 SQL> 
15:49:45 SQL> -- Build a new SVM Model
15:49:45 SQL> BEGIN
15:49:45   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:49:45   3  	  model_name	      => '&model_name',
15:49:45   4  	  mining_function     => dbms_data_mining.classification,
15:49:45   5  	  data_table_name     => 'svmc_build_prep',
15:49:45   6  	  case_id_column_name => '&case_id',
15:49:45   7  	  target_column_name  => '&target',
15:49:45   8  	  settings_table_name => 'svmc_settings');
15:49:45   9  END;
15:49:45  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.88
15:50:13 SQL> 
15:50:13 SQL> -----------------------------------------------------------------------
15:50:13 SQL> --			       APPLY/score THE MODEL
15:50:13 SQL> -----------------------------------------------------------------------
15:50:13 SQL> 
15:50:13 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:50:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:50:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:50:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:50:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:50:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:50:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:50:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:50:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:50:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:50:13 SQL> -----------------------
15:50:13 SQL> -- PREPARE SCORING DATA
15:50:13 SQL> --
15:50:13 SQL> -- If the data for model creation has been prepared, then the data
15:50:13 SQL> -- to be scored using the model must be prepared in the same manner
15:50:13 SQL> -- in order to obtain meaningful results.
15:50:13 SQL> --
15:50:13 SQL> -- 1. Missing Value treatment for all Predictors and
15:50:13 SQL> -- 2. Normalization
15:50:13 SQL> -- No outlier treatment will be performed during test and apply. The
15:50:13 SQL> -- normalization step is sufficient, since the normalization parameters
15:50:13 SQL> -- already capture the effects of outlier treatment done with build data.
15:50:13 SQL> --
15:50:13 SQL> BEGIN
15:50:13   2  	-- Xform Test data to replace missing values
15:50:13   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:50:13   4  	  miss_table_name => 'svmc_miss_num',
15:50:13   5  	  data_table_name => '&scoretable',
15:50:13   6  	  xform_view_name => 'xformed_apply_miss_num');
15:50:13   7  
15:50:13   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:50:13   9  	  miss_table_name => 'svmc_miss_cat',
15:50:13  10  	  data_table_name => '&scoretable',
15:50:13  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:50:13  12  
15:50:13  13  	-- Normalize the data to be scored
15:50:13  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:50:13  15  	  norm_table_name => 'svmc_norm',
15:50:13  16  	  data_table_name => '&scoretable',
15:50:13  17  	  xform_view_name => 'svmc_apply_prep');
15:50:13  18  END;
15:50:13  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
15:50:15 SQL> 
15:50:15 SQL> -- Use same model_name used in score_gattn.sql
15:50:15 SQL> DEFINE model_name = 'forex15'
15:50:15 SQL> 
15:50:15 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
15:50:15 SQL> 
15:50:15 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
15:50:15   2  SELECT
15:50:15   3  prdate
15:50:15   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:50:15   5  ,sysdate
15:50:15   6  ,SUBSTR(prdate,1,3)pair
15:50:15   7  ,SUBSTR(prdate,4,19)ydate
15:50:15   8  FROM svmc_apply_prep
15:50:15   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:50:15 SQL> @aud_score1day_gattn.sql	2011-01-05 15:35:00
15:50:15 SQL> --
15:50:15 SQL> -- aud_score1day_gattn.sql
15:50:15 SQL> --
15:50:15 SQL> 
15:50:15 SQL> CREATE OR REPLACE VIEW sme AS
15:50:15   2  SELECT
15:50:15   3  'aud'||m.ydate prdate
15:50:15   4  ,NULL gattn
15:50:15   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:50:15   6  ,eur_g00
15:50:15   7  ,eur_g01
15:50:15   8  ,eur_g02
15:50:15   9  ,eur_g03
15:50:15  10  ,eur_g04
15:50:15  11  ,eur_g05
15:50:15  12  ,eur_g06
15:50:15  13  ,eur_g07
15:50:15  14  ,eur_g08
15:50:15  15  ,eur_g09
15:50:15  16  ,eur_g10
15:50:15  17  ,eur_g11
15:50:15  18  ,eur_g12
15:50:15  19  ,eur_g13
15:50:15  20  ,eur_g14
15:50:15  21  ,eur_g15
15:50:15  22  ,eur_g16
15:50:15  23  ,eur_g17
15:50:15  24  ,eur_g18
15:50:15  25  ,eur_g19
15:50:15  26  ,eur_g20
15:50:15  27  ,eur_g21
15:50:15  28  ,eur_g22
15:50:15  29  ,eur_g23
15:50:15  30  ,eur_g24
15:50:15  31  ,eur_g25
15:50:15  32  ,eur_g26
15:50:15  33  ,eur_g27
15:50:15  34  ,eur_g28
15:50:15  35  ,eur_g29
15:50:15  36  ,eur_g30
15:50:15  37  ,eur_g31
15:50:15  38  ,eur_g32
15:50:15  39  ,eur_g33
15:50:15  40  ,eur_g34
15:50:15  41  ,eur_g35
15:50:15  42  ,eur_g36
15:50:15  43  ,eur_g37
15:50:15  44  ,eur_g38
15:50:15  45  ,eur_g39
15:50:15  46  ,eur_g40
15:50:15  47  ,eur_g41
15:50:15  48  ,aud_g00
15:50:15  49  ,aud_g01
15:50:15  50  ,aud_g02
15:50:15  51  ,aud_g03
15:50:15  52  ,aud_g04
15:50:15  53  ,aud_g05
15:50:15  54  ,aud_g06
15:50:15  55  ,aud_g07
15:50:15  56  ,aud_g08
15:50:15  57  ,aud_g09
15:50:15  58  ,aud_g10
15:50:15  59  ,aud_g11
15:50:15  60  ,aud_g12
15:50:15  61  ,aud_g13
15:50:15  62  ,aud_g14
15:50:15  63  ,aud_g15
15:50:15  64  ,aud_g16
15:50:15  65  ,aud_g17
15:50:15  66  ,aud_g18
15:50:15  67  ,aud_g19
15:50:15  68  ,aud_g20
15:50:15  69  ,aud_g21
15:50:15  70  ,aud_g22
15:50:15  71  ,aud_g23
15:50:15  72  ,aud_g24
15:50:15  73  ,aud_g25
15:50:15  74  ,aud_g26
15:50:15  75  ,aud_g27
15:50:15  76  ,aud_g28
15:50:15  77  ,aud_g29
15:50:15  78  ,aud_g30
15:50:15  79  ,aud_g31
15:50:15  80  ,aud_g32
15:50:15  81  ,aud_g33
15:50:15  82  ,aud_g34
15:50:15  83  ,aud_g35
15:50:15  84  ,aud_g36
15:50:15  85  ,aud_g37
15:50:15  86  ,aud_g38
15:50:15  87  ,aud_g39
15:50:15  88  ,aud_g40
15:50:15  89  ,aud_g41
15:50:15  90  ,gbp_g00
15:50:15  91  ,gbp_g01
15:50:15  92  ,gbp_g02
15:50:15  93  ,gbp_g03
15:50:15  94  ,gbp_g04
15:50:15  95  ,gbp_g05
15:50:15  96  ,gbp_g06
15:50:15  97  ,gbp_g07
15:50:15  98  ,gbp_g08
15:50:15  99  ,gbp_g09
15:50:15 100  ,gbp_g10
15:50:15 101  ,gbp_g11
15:50:15 102  ,gbp_g12
15:50:15 103  ,gbp_g13
15:50:15 104  ,gbp_g14
15:50:15 105  ,gbp_g15
15:50:15 106  ,gbp_g16
15:50:15 107  ,gbp_g17
15:50:15 108  ,gbp_g18
15:50:15 109  ,gbp_g19
15:50:15 110  ,gbp_g20
15:50:15 111  ,gbp_g21
15:50:15 112  ,gbp_g22
15:50:15 113  ,gbp_g23
15:50:15 114  ,gbp_g24
15:50:15 115  ,gbp_g25
15:50:15 116  ,gbp_g26
15:50:15 117  ,gbp_g27
15:50:15 118  ,gbp_g28
15:50:15 119  ,gbp_g29
15:50:15 120  ,gbp_g30
15:50:15 121  ,gbp_g31
15:50:15 122  ,gbp_g32
15:50:15 123  ,gbp_g33
15:50:15 124  ,gbp_g34
15:50:15 125  ,gbp_g35
15:50:15 126  ,gbp_g36
15:50:15 127  ,gbp_g37
15:50:15 128  ,gbp_g38
15:50:15 129  ,gbp_g39
15:50:15 130  ,gbp_g40
15:50:15 131  ,gbp_g41
15:50:15 132  ,jpy_g00
15:50:15 133  ,jpy_g01
15:50:15 134  ,jpy_g02
15:50:15 135  ,jpy_g03
15:50:15 136  ,jpy_g04
15:50:15 137  ,jpy_g05
15:50:15 138  ,jpy_g06
15:50:15 139  ,jpy_g07
15:50:15 140  ,jpy_g08
15:50:15 141  ,jpy_g09
15:50:15 142  ,jpy_g10
15:50:15 143  ,jpy_g11
15:50:15 144  ,jpy_g12
15:50:15 145  ,jpy_g13
15:50:15 146  ,jpy_g14
15:50:15 147  ,jpy_g15
15:50:15 148  ,jpy_g16
15:50:15 149  ,jpy_g17
15:50:15 150  ,jpy_g18
15:50:15 151  ,jpy_g19
15:50:15 152  ,jpy_g20
15:50:15 153  ,jpy_g21
15:50:15 154  ,jpy_g22
15:50:15 155  ,jpy_g23
15:50:15 156  ,jpy_g24
15:50:15 157  ,jpy_g25
15:50:15 158  ,jpy_g26
15:50:15 159  ,jpy_g27
15:50:15 160  ,jpy_g28
15:50:15 161  ,jpy_g29
15:50:15 162  ,jpy_g30
15:50:15 163  ,jpy_g31
15:50:15 164  ,jpy_g32
15:50:15 165  ,jpy_g33
15:50:15 166  ,jpy_g34
15:50:15 167  ,jpy_g35
15:50:15 168  ,jpy_g36
15:50:15 169  ,jpy_g37
15:50:15 170  ,jpy_g38
15:50:15 171  ,jpy_g39
15:50:15 172  ,jpy_g40
15:50:15 173  ,jpy_g41
15:50:15 174  ,cad_g00
15:50:15 175  ,cad_g01
15:50:15 176  ,cad_g02
15:50:15 177  ,cad_g03
15:50:15 178  ,cad_g04
15:50:15 179  ,cad_g05
15:50:15 180  ,cad_g06
15:50:15 181  ,cad_g07
15:50:15 182  ,cad_g08
15:50:15 183  ,cad_g09
15:50:15 184  ,cad_g10
15:50:15 185  ,cad_g11
15:50:15 186  ,cad_g12
15:50:15 187  ,cad_g13
15:50:15 188  ,cad_g14
15:50:15 189  ,cad_g15
15:50:15 190  ,cad_g16
15:50:15 191  ,cad_g17
15:50:15 192  ,cad_g18
15:50:15 193  ,cad_g19
15:50:15 194  ,cad_g20
15:50:15 195  ,cad_g21
15:50:15 196  ,cad_g22
15:50:15 197  ,cad_g23
15:50:15 198  ,cad_g24
15:50:15 199  ,cad_g25
15:50:15 200  ,cad_g26
15:50:15 201  ,cad_g27
15:50:15 202  ,cad_g28
15:50:15 203  ,cad_g29
15:50:15 204  ,cad_g30
15:50:15 205  ,cad_g31
15:50:15 206  ,cad_g32
15:50:15 207  ,cad_g33
15:50:15 208  ,cad_g34
15:50:15 209  ,cad_g35
15:50:15 210  ,cad_g36
15:50:15 211  ,cad_g37
15:50:15 212  ,cad_g38
15:50:15 213  ,cad_g39
15:50:15 214  ,cad_g40
15:50:15 215  ,cad_g41
15:50:15 216  ,chf_g00
15:50:15 217  ,chf_g01
15:50:15 218  ,chf_g02
15:50:15 219  ,chf_g03
15:50:15 220  ,chf_g04
15:50:15 221  ,chf_g05
15:50:15 222  ,chf_g06
15:50:15 223  ,chf_g07
15:50:15 224  ,chf_g08
15:50:15 225  ,chf_g09
15:50:15 226  ,chf_g10
15:50:15 227  ,chf_g11
15:50:15 228  ,chf_g12
15:50:15 229  ,chf_g13
15:50:15 230  ,chf_g14
15:50:15 231  ,chf_g15
15:50:15 232  ,chf_g16
15:50:15 233  ,chf_g17
15:50:15 234  ,chf_g18
15:50:15 235  ,chf_g19
15:50:15 236  ,chf_g20
15:50:15 237  ,chf_g21
15:50:15 238  ,chf_g22
15:50:15 239  ,chf_g23
15:50:15 240  ,chf_g24
15:50:15 241  ,chf_g25
15:50:15 242  ,chf_g26
15:50:15 243  ,chf_g27
15:50:15 244  ,chf_g28
15:50:15 245  ,chf_g29
15:50:15 246  ,chf_g30
15:50:15 247  ,chf_g31
15:50:15 248  ,chf_g32
15:50:15 249  ,chf_g33
15:50:15 250  ,chf_g34
15:50:15 251  ,chf_g35
15:50:15 252  ,chf_g36
15:50:15 253  ,chf_g37
15:50:15 254  ,chf_g38
15:50:15 255  ,chf_g39
15:50:15 256  ,chf_g40
15:50:15 257  ,chf_g41
15:50:15 258  FROM aud_ms6 m
15:50:15 259  WHERE m.ydate = '&1'||' '||'&2'
15:50:15 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'15:35:00'

View created.

Elapsed: 00:00:00.17
15:50:15 SQL> 
15:50:15 SQL> -- rpt
15:50:15 SQL> -- We should see just 1 row:
15:50:15 SQL> 
15:50:15 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
15:50:15 SQL> 
15:50:15 SQL> -- Build the model:
15:50:15 SQL> CREATE OR REPLACE VIEW bme AS
15:50:15   2  SELECT
15:50:15   3  'aud'||m.ydate prdate
15:50:15   4  ,gattn
15:50:15   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:50:15   6  ,eur_g00
15:50:15   7  ,eur_g01
15:50:15   8  ,eur_g02
15:50:15   9  ,eur_g03
15:50:15  10  ,eur_g04
15:50:15  11  ,eur_g05
15:50:15  12  ,eur_g06
15:50:15  13  ,eur_g07
15:50:15  14  ,eur_g08
15:50:15  15  ,eur_g09
15:50:15  16  ,eur_g10
15:50:15  17  ,eur_g11
15:50:15  18  ,eur_g12
15:50:15  19  ,eur_g13
15:50:15  20  ,eur_g14
15:50:15  21  ,eur_g15
15:50:15  22  ,eur_g16
15:50:15  23  ,eur_g17
15:50:15  24  ,eur_g18
15:50:15  25  ,eur_g19
15:50:15  26  ,eur_g20
15:50:15  27  ,eur_g21
15:50:15  28  ,eur_g22
15:50:15  29  ,eur_g23
15:50:15  30  ,eur_g24
15:50:15  31  ,eur_g25
15:50:15  32  ,eur_g26
15:50:15  33  ,eur_g27
15:50:15  34  ,eur_g28
15:50:15  35  ,eur_g29
15:50:15  36  ,eur_g30
15:50:15  37  ,eur_g31
15:50:15  38  ,eur_g32
15:50:15  39  ,eur_g33
15:50:15  40  ,eur_g34
15:50:15  41  ,eur_g35
15:50:15  42  ,eur_g36
15:50:15  43  ,eur_g37
15:50:15  44  ,eur_g38
15:50:15  45  ,eur_g39
15:50:15  46  ,eur_g40
15:50:15  47  ,eur_g41
15:50:15  48  ,aud_g00
15:50:15  49  ,aud_g01
15:50:15  50  ,aud_g02
15:50:15  51  ,aud_g03
15:50:15  52  ,aud_g04
15:50:15  53  ,aud_g05
15:50:15  54  ,aud_g06
15:50:15  55  ,aud_g07
15:50:15  56  ,aud_g08
15:50:15  57  ,aud_g09
15:50:15  58  ,aud_g10
15:50:15  59  ,aud_g11
15:50:15  60  ,aud_g12
15:50:15  61  ,aud_g13
15:50:15  62  ,aud_g14
15:50:15  63  ,aud_g15
15:50:15  64  ,aud_g16
15:50:15  65  ,aud_g17
15:50:15  66  ,aud_g18
15:50:15  67  ,aud_g19
15:50:15  68  ,aud_g20
15:50:15  69  ,aud_g21
15:50:15  70  ,aud_g22
15:50:15  71  ,aud_g23
15:50:15  72  ,aud_g24
15:50:15  73  ,aud_g25
15:50:15  74  ,aud_g26
15:50:15  75  ,aud_g27
15:50:15  76  ,aud_g28
15:50:15  77  ,aud_g29
15:50:15  78  ,aud_g30
15:50:15  79  ,aud_g31
15:50:15  80  ,aud_g32
15:50:15  81  ,aud_g33
15:50:15  82  ,aud_g34
15:50:15  83  ,aud_g35
15:50:15  84  ,aud_g36
15:50:15  85  ,aud_g37
15:50:15  86  ,aud_g38
15:50:15  87  ,aud_g39
15:50:15  88  ,aud_g40
15:50:15  89  ,aud_g41
15:50:15  90  ,gbp_g00
15:50:15  91  ,gbp_g01
15:50:15  92  ,gbp_g02
15:50:15  93  ,gbp_g03
15:50:15  94  ,gbp_g04
15:50:15  95  ,gbp_g05
15:50:15  96  ,gbp_g06
15:50:15  97  ,gbp_g07
15:50:15  98  ,gbp_g08
15:50:15  99  ,gbp_g09
15:50:15 100  ,gbp_g10
15:50:15 101  ,gbp_g11
15:50:15 102  ,gbp_g12
15:50:15 103  ,gbp_g13
15:50:15 104  ,gbp_g14
15:50:15 105  ,gbp_g15
15:50:15 106  ,gbp_g16
15:50:15 107  ,gbp_g17
15:50:15 108  ,gbp_g18
15:50:15 109  ,gbp_g19
15:50:15 110  ,gbp_g20
15:50:15 111  ,gbp_g21
15:50:15 112  ,gbp_g22
15:50:15 113  ,gbp_g23
15:50:15 114  ,gbp_g24
15:50:15 115  ,gbp_g25
15:50:15 116  ,gbp_g26
15:50:15 117  ,gbp_g27
15:50:15 118  ,gbp_g28
15:50:15 119  ,gbp_g29
15:50:15 120  ,gbp_g30
15:50:15 121  ,gbp_g31
15:50:15 122  ,gbp_g32
15:50:15 123  ,gbp_g33
15:50:15 124  ,gbp_g34
15:50:15 125  ,gbp_g35
15:50:15 126  ,gbp_g36
15:50:15 127  ,gbp_g37
15:50:15 128  ,gbp_g38
15:50:15 129  ,gbp_g39
15:50:15 130  ,gbp_g40
15:50:15 131  ,gbp_g41
15:50:15 132  ,jpy_g00
15:50:15 133  ,jpy_g01
15:50:15 134  ,jpy_g02
15:50:15 135  ,jpy_g03
15:50:15 136  ,jpy_g04
15:50:15 137  ,jpy_g05
15:50:15 138  ,jpy_g06
15:50:15 139  ,jpy_g07
15:50:15 140  ,jpy_g08
15:50:15 141  ,jpy_g09
15:50:15 142  ,jpy_g10
15:50:15 143  ,jpy_g11
15:50:15 144  ,jpy_g12
15:50:15 145  ,jpy_g13
15:50:15 146  ,jpy_g14
15:50:15 147  ,jpy_g15
15:50:15 148  ,jpy_g16
15:50:15 149  ,jpy_g17
15:50:15 150  ,jpy_g18
15:50:15 151  ,jpy_g19
15:50:15 152  ,jpy_g20
15:50:15 153  ,jpy_g21
15:50:15 154  ,jpy_g22
15:50:15 155  ,jpy_g23
15:50:15 156  ,jpy_g24
15:50:15 157  ,jpy_g25
15:50:15 158  ,jpy_g26
15:50:15 159  ,jpy_g27
15:50:15 160  ,jpy_g28
15:50:15 161  ,jpy_g29
15:50:15 162  ,jpy_g30
15:50:15 163  ,jpy_g31
15:50:15 164  ,jpy_g32
15:50:15 165  ,jpy_g33
15:50:15 166  ,jpy_g34
15:50:15 167  ,jpy_g35
15:50:15 168  ,jpy_g36
15:50:15 169  ,jpy_g37
15:50:15 170  ,jpy_g38
15:50:15 171  ,jpy_g39
15:50:15 172  ,jpy_g40
15:50:15 173  ,jpy_g41
15:50:15 174  ,cad_g00
15:50:15 175  ,cad_g01
15:50:15 176  ,cad_g02
15:50:15 177  ,cad_g03
15:50:15 178  ,cad_g04
15:50:15 179  ,cad_g05
15:50:15 180  ,cad_g06
15:50:15 181  ,cad_g07
15:50:15 182  ,cad_g08
15:50:15 183  ,cad_g09
15:50:15 184  ,cad_g10
15:50:15 185  ,cad_g11
15:50:15 186  ,cad_g12
15:50:15 187  ,cad_g13
15:50:15 188  ,cad_g14
15:50:15 189  ,cad_g15
15:50:15 190  ,cad_g16
15:50:15 191  ,cad_g17
15:50:15 192  ,cad_g18
15:50:15 193  ,cad_g19
15:50:15 194  ,cad_g20
15:50:15 195  ,cad_g21
15:50:15 196  ,cad_g22
15:50:15 197  ,cad_g23
15:50:15 198  ,cad_g24
15:50:15 199  ,cad_g25
15:50:15 200  ,cad_g26
15:50:15 201  ,cad_g27
15:50:15 202  ,cad_g28
15:50:15 203  ,cad_g29
15:50:15 204  ,cad_g30
15:50:15 205  ,cad_g31
15:50:15 206  ,cad_g32
15:50:15 207  ,cad_g33
15:50:15 208  ,cad_g34
15:50:15 209  ,cad_g35
15:50:15 210  ,cad_g36
15:50:15 211  ,cad_g37
15:50:15 212  ,cad_g38
15:50:15 213  ,cad_g39
15:50:15 214  ,cad_g40
15:50:15 215  ,cad_g41
15:50:15 216  ,chf_g00
15:50:15 217  ,chf_g01
15:50:15 218  ,chf_g02
15:50:15 219  ,chf_g03
15:50:15 220  ,chf_g04
15:50:15 221  ,chf_g05
15:50:15 222  ,chf_g06
15:50:15 223  ,chf_g07
15:50:15 224  ,chf_g08
15:50:15 225  ,chf_g09
15:50:15 226  ,chf_g10
15:50:15 227  ,chf_g11
15:50:15 228  ,chf_g12
15:50:15 229  ,chf_g13
15:50:15 230  ,chf_g14
15:50:15 231  ,chf_g15
15:50:15 232  ,chf_g16
15:50:15 233  ,chf_g17
15:50:15 234  ,chf_g18
15:50:15 235  ,chf_g19
15:50:15 236  ,chf_g20
15:50:15 237  ,chf_g21
15:50:15 238  ,chf_g22
15:50:15 239  ,chf_g23
15:50:15 240  ,chf_g24
15:50:15 241  ,chf_g25
15:50:15 242  ,chf_g26
15:50:15 243  ,chf_g27
15:50:15 244  ,chf_g28
15:50:15 245  ,chf_g29
15:50:15 246  ,chf_g30
15:50:15 247  ,chf_g31
15:50:15 248  ,chf_g32
15:50:15 249  ,chf_g33
15:50:15 250  ,chf_g34
15:50:15 251  ,chf_g35
15:50:15 252  ,chf_g36
15:50:15 253  ,chf_g37
15:50:15 254  ,chf_g38
15:50:15 255  ,chf_g39
15:50:15 256  ,chf_g40
15:50:15 257  ,chf_g41
15:50:15 258  FROM aud_ms6 m
15:50:15 259  WHERE gattn IN('nup','up')
15:50:15 260  AND 1+m.ydate < '&1'||' '||'&2'
15:50:15 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'15:35:00'

View created.

Elapsed: 00:00:00.13
15:50:15 SQL> 
15:50:15 SQL> -- rpt
15:50:15 SQL> 
15:50:15 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12705
up	     6462

Elapsed: 00:00:00.05
15:50:15 SQL> 
15:50:15 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-04 15:30:00

Elapsed: 00:00:00.03
15:50:15 SQL> 
15:50:15 SQL> -- Now build model from bme and score sme
15:50:15 SQL> @score1gattn.sql
15:50:15 SQL> -- score1gattn.sql
15:50:15 SQL> 
15:50:15 SQL> -- Does the 1st SVM score
15:50:15 SQL> 
15:50:15 SQL> -- Fill up svmc_apply_prep
15:50:15 SQL> @score_gattn.sql
15:50:15 SQL> --
15:50:15 SQL> -- score_gattn.sql
15:50:15 SQL> --
15:50:15 SQL> 
15:50:15 SQL> -- usage: score_gattn.sql
15:50:15 SQL> 
15:50:15 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:50:15 SQL> 
15:50:15 SQL> DEFINE target	= 'gattn'
15:50:15 SQL> DEFINE model_name = 'forex15'
15:50:15 SQL> DEFINE bldtable	= 'bme'
15:50:15 SQL> DEFINE scoretable = 'sme'
15:50:15 SQL> DEFINE case_id	= 'prdate'
15:50:15 SQL> 
15:50:15 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:50:15 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:50:15 SQL> 
15:50:15 SQL> -- Builds an SVM model using pl/sql.
15:50:15 SQL> 
15:50:15 SQL> -----------------------------------------------------------------------
15:50:15 SQL> --			    BUILD THE MODEL
15:50:15 SQL> -----------------------------------------------------------------------
15:50:15 SQL> 
15:50:15 SQL> -- Cleanup old build data preparation objects for repeat runs
15:50:15 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
15:50:15 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:50:15 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
15:50:15 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
15:50:15 SQL> 
15:50:15 SQL> 
15:50:15 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:50:15 SQL> --
15:50:15 SQL> -- DROP	TABLE svmc_settings ;
15:50:15 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:50:15 SQL> -- DELETE svmc_settings;
15:50:15 SQL> 
15:50:15 SQL> -- The default classification algorithm is Naive Bayes. So override
15:50:15 SQL> -- this choice to SVM using a settings table.
15:50:15 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:50:15 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:50:15 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:50:15 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:50:15 SQL> -- models.
15:50:15 SQL> --
15:50:15 SQL> 
15:50:15 SQL> -- Do this once and then comment it out.
15:50:15 SQL> -- That makes script go faster.
15:50:15 SQL> -- BEGIN
15:50:15 SQL> -- -- Populate settings table
15:50:15 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:50:15 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:50:15 SQL> --
15:50:15 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:50:15 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:50:15 SQL> --
15:50:15 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:50:15 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:50:15 SQL> --   COMMIT;
15:50:15 SQL> -- END;
15:50:15 SQL> -- /
15:50:15 SQL> 
15:50:15 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
15:50:15 SQL> 
15:50:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:50:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:50:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:50:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:50:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:50:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:50:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:50:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:50:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:50:15 SQL> 
15:50:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:50:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:50:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:50:16 SQL> 
15:50:16 SQL> --------------------------------
15:50:16 SQL> -- PREPARE BUILD (TRAINING) DATA
15:50:16 SQL> --
15:50:16 SQL> 
15:50:16 SQL> -- 1. Missing Value treatment for all Predictors and
15:50:16 SQL> -- 2. Outlier Treatment and
15:50:16 SQL> -- 3. Normalization are performed below.
15:50:16 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:50:16 SQL> --    normalized here.
15:50:16 SQL> 
15:50:16 SQL> BEGIN
15:50:16   2  	-- Perform missing value treatment for all predictors
15:50:16   3  	-- create miss tables
15:50:16   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:50:16   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:50:16   6  
15:50:16   7  	-- populate miss tables
15:50:16   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:50:16   9  	  miss_table_name => 'svmc_miss_num',
15:50:16  10  	  data_table_name => '&bldtable',
15:50:16  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:50:16  12  
15:50:16  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:50:16  14  	  miss_table_name => 'svmc_miss_cat',
15:50:16  15  	  data_table_name => '&bldtable',
15:50:16  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:50:16  17  
15:50:16  18  	-- xform input data to replace missing values
15:50:16  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:50:16  20  	  miss_table_name => 'svmc_miss_num',
15:50:16  21  	  data_table_name => '&bldtable',
15:50:16  22  	  xform_view_name => 'xformed_build_miss_num');
15:50:16  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:50:16  24  	  miss_table_name => 'svmc_miss_cat',
15:50:16  25  	  data_table_name => '&bldtable',
15:50:16  26  	  xform_view_name => 'xformed_build_miss_cat');
15:50:16  27  
15:50:16  28  	-- Perform outlier treatment.
15:50:16  29  	-- create clip table
15:50:16  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:50:16  31  
15:50:16  32  	-- populate clip table
15:50:16  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:50:16  34  	  clip_table_name => 'svmc_clip',
15:50:16  35  	  data_table_name => '&bldtable',
15:50:16  36  	  tail_frac	  => 0.025,
15:50:16  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:50:16  38  
15:50:16  39  	-- xform input data to winsorized data
15:50:16  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:50:16  41  	  clip_table_name => 'svmc_clip',
15:50:16  42  	  data_table_name => '&bldtable',
15:50:16  43  	  xform_view_name => 'svmc_winsor');
15:50:16  44  
15:50:16  45  	-- create normalization table
15:50:16  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:50:16  47  
15:50:16  48  	-- populate normalization table based on winsorized data
15:50:16  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:50:16  50  	  norm_table_name => 'svmc_norm',
15:50:16  51  	  data_table_name => 'svmc_winsor',
15:50:16  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:50:16  53  
15:50:16  54  	-- normalize the original data
15:50:16  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:50:16  56  	  norm_table_name => 'svmc_norm',
15:50:16  57  	  data_table_name => '&bldtable',
15:50:16  58  	  xform_view_name => 'svmc_build_prep');
15:50:16  59  END;
15:50:16  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.64
15:50:34 SQL> 
15:50:34 SQL> ---------------------
15:50:34 SQL> -- CREATE A NEW MODEL
15:50:34 SQL> --
15:50:34 SQL> -- Cleanup old model with the same name for repeat runs
15:50:34 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:50:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:50:34   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.09
15:50:35 SQL> 
15:50:35 SQL> -- Build a new SVM Model
15:50:35 SQL> BEGIN
15:50:35   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:50:35   3  	  model_name	      => '&model_name',
15:50:35   4  	  mining_function     => dbms_data_mining.classification,
15:50:35   5  	  data_table_name     => 'svmc_build_prep',
15:50:35   6  	  case_id_column_name => '&case_id',
15:50:35   7  	  target_column_name  => '&target',
15:50:35   8  	  settings_table_name => 'svmc_settings');
15:50:35   9  END;
15:50:35  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.62
15:51:02 SQL> 
15:51:02 SQL> -----------------------------------------------------------------------
15:51:02 SQL> --			       APPLY/score THE MODEL
15:51:02 SQL> -----------------------------------------------------------------------
15:51:02 SQL> 
15:51:02 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:51:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:51:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:51:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:51:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:51:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:51:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:51:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:51:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:51:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:51:02 SQL> -----------------------
15:51:02 SQL> -- PREPARE SCORING DATA
15:51:02 SQL> --
15:51:02 SQL> -- If the data for model creation has been prepared, then the data
15:51:02 SQL> -- to be scored using the model must be prepared in the same manner
15:51:02 SQL> -- in order to obtain meaningful results.
15:51:02 SQL> --
15:51:02 SQL> -- 1. Missing Value treatment for all Predictors and
15:51:02 SQL> -- 2. Normalization
15:51:02 SQL> -- No outlier treatment will be performed during test and apply. The
15:51:02 SQL> -- normalization step is sufficient, since the normalization parameters
15:51:02 SQL> -- already capture the effects of outlier treatment done with build data.
15:51:02 SQL> --
15:51:02 SQL> BEGIN
15:51:02   2  	-- Xform Test data to replace missing values
15:51:02   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:51:02   4  	  miss_table_name => 'svmc_miss_num',
15:51:02   5  	  data_table_name => '&scoretable',
15:51:02   6  	  xform_view_name => 'xformed_apply_miss_num');
15:51:02   7  
15:51:02   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:51:02   9  	  miss_table_name => 'svmc_miss_cat',
15:51:02  10  	  data_table_name => '&scoretable',
15:51:02  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:51:02  12  
15:51:02  13  	-- Normalize the data to be scored
15:51:02  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:51:02  15  	  norm_table_name => 'svmc_norm',
15:51:02  16  	  data_table_name => '&scoretable',
15:51:02  17  	  xform_view_name => 'svmc_apply_prep');
15:51:02  18  END;
15:51:02  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
15:51:03 SQL> 
15:51:03 SQL> -- Use same model_name used in score_gattn.sql
15:51:03 SQL> DEFINE model_name = 'forex15'
15:51:03 SQL> 
15:51:03 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
15:51:03 SQL> 
15:51:03 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
15:51:03   2  SELECT
15:51:03   3  prdate
15:51:03   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:51:03   5  ,sysdate
15:51:03   6  ,SUBSTR(prdate,1,3)pair
15:51:03   7  ,SUBSTR(prdate,4,19)ydate
15:51:03   8  FROM svmc_apply_prep
15:51:03   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
15:51:03 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
