
SQL*Plus: Release 11.2.0.1.0 Production on Fri Jan 7 10:13:47 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

10:13:47 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.01
10:13:47 SQL> 10:13:47 SQL> @aud_score1day.sql  2011-01-07 09:50:00
10:13:47 SQL> --
10:13:47 SQL> -- aud_score1day.sql
10:13:47 SQL> --
10:13:47 SQL> 
10:13:47 SQL> CREATE OR REPLACE VIEW sme AS
10:13:47   2  SELECT
10:13:47   3  'aud'||m.ydate prdate
10:13:47   4  ,NULL gatt
10:13:47   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
10:13:47   6  ,eur_g00
10:13:47   7  ,eur_g01
10:13:47   8  ,eur_g02
10:13:47   9  ,eur_g03
10:13:47  10  ,eur_g04
10:13:47  11  ,eur_g05
10:13:47  12  ,eur_g06
10:13:47  13  ,eur_g07
10:13:47  14  ,eur_g08
10:13:47  15  ,eur_g09
10:13:47  16  ,eur_g10
10:13:47  17  ,eur_g11
10:13:47  18  ,eur_g12
10:13:47  19  ,eur_g13
10:13:47  20  ,eur_g14
10:13:47  21  ,eur_g15
10:13:47  22  ,eur_g16
10:13:47  23  ,eur_g17
10:13:47  24  ,eur_g18
10:13:47  25  ,eur_g19
10:13:47  26  ,eur_g20
10:13:47  27  ,eur_g21
10:13:47  28  ,eur_g22
10:13:47  29  ,eur_g23
10:13:47  30  ,eur_g24
10:13:47  31  ,eur_g25
10:13:47  32  ,eur_g26
10:13:47  33  ,eur_g27
10:13:47  34  ,eur_g28
10:13:47  35  ,eur_g29
10:13:47  36  ,eur_g30
10:13:47  37  ,eur_g31
10:13:47  38  ,eur_g32
10:13:47  39  ,eur_g33
10:13:47  40  ,eur_g34
10:13:47  41  ,eur_g35
10:13:47  42  ,eur_g36
10:13:47  43  ,eur_g37
10:13:47  44  ,eur_g38
10:13:47  45  ,eur_g39
10:13:47  46  ,eur_g40
10:13:47  47  ,eur_g41
10:13:47  48  ,aud_g00
10:13:47  49  ,aud_g01
10:13:47  50  ,aud_g02
10:13:47  51  ,aud_g03
10:13:47  52  ,aud_g04
10:13:47  53  ,aud_g05
10:13:47  54  ,aud_g06
10:13:47  55  ,aud_g07
10:13:47  56  ,aud_g08
10:13:47  57  ,aud_g09
10:13:47  58  ,aud_g10
10:13:47  59  ,aud_g11
10:13:47  60  ,aud_g12
10:13:47  61  ,aud_g13
10:13:47  62  ,aud_g14
10:13:47  63  ,aud_g15
10:13:47  64  ,aud_g16
10:13:47  65  ,aud_g17
10:13:47  66  ,aud_g18
10:13:47  67  ,aud_g19
10:13:47  68  ,aud_g20
10:13:47  69  ,aud_g21
10:13:47  70  ,aud_g22
10:13:47  71  ,aud_g23
10:13:47  72  ,aud_g24
10:13:47  73  ,aud_g25
10:13:47  74  ,aud_g26
10:13:47  75  ,aud_g27
10:13:47  76  ,aud_g28
10:13:47  77  ,aud_g29
10:13:47  78  ,aud_g30
10:13:47  79  ,aud_g31
10:13:47  80  ,aud_g32
10:13:47  81  ,aud_g33
10:13:47  82  ,aud_g34
10:13:47  83  ,aud_g35
10:13:47  84  ,aud_g36
10:13:47  85  ,aud_g37
10:13:47  86  ,aud_g38
10:13:47  87  ,aud_g39
10:13:47  88  ,aud_g40
10:13:47  89  ,aud_g41
10:13:47  90  ,gbp_g00
10:13:47  91  ,gbp_g01
10:13:47  92  ,gbp_g02
10:13:47  93  ,gbp_g03
10:13:47  94  ,gbp_g04
10:13:47  95  ,gbp_g05
10:13:47  96  ,gbp_g06
10:13:47  97  ,gbp_g07
10:13:47  98  ,gbp_g08
10:13:47  99  ,gbp_g09
10:13:47 100  ,gbp_g10
10:13:47 101  ,gbp_g11
10:13:47 102  ,gbp_g12
10:13:47 103  ,gbp_g13
10:13:47 104  ,gbp_g14
10:13:47 105  ,gbp_g15
10:13:47 106  ,gbp_g16
10:13:47 107  ,gbp_g17
10:13:47 108  ,gbp_g18
10:13:47 109  ,gbp_g19
10:13:47 110  ,gbp_g20
10:13:47 111  ,gbp_g21
10:13:47 112  ,gbp_g22
10:13:47 113  ,gbp_g23
10:13:47 114  ,gbp_g24
10:13:47 115  ,gbp_g25
10:13:47 116  ,gbp_g26
10:13:47 117  ,gbp_g27
10:13:47 118  ,gbp_g28
10:13:47 119  ,gbp_g29
10:13:47 120  ,gbp_g30
10:13:47 121  ,gbp_g31
10:13:47 122  ,gbp_g32
10:13:47 123  ,gbp_g33
10:13:47 124  ,gbp_g34
10:13:47 125  ,gbp_g35
10:13:47 126  ,gbp_g36
10:13:47 127  ,gbp_g37
10:13:47 128  ,gbp_g38
10:13:47 129  ,gbp_g39
10:13:47 130  ,gbp_g40
10:13:47 131  ,gbp_g41
10:13:47 132  ,jpy_g00
10:13:47 133  ,jpy_g01
10:13:47 134  ,jpy_g02
10:13:47 135  ,jpy_g03
10:13:47 136  ,jpy_g04
10:13:47 137  ,jpy_g05
10:13:47 138  ,jpy_g06
10:13:47 139  ,jpy_g07
10:13:47 140  ,jpy_g08
10:13:47 141  ,jpy_g09
10:13:47 142  ,jpy_g10
10:13:47 143  ,jpy_g11
10:13:47 144  ,jpy_g12
10:13:47 145  ,jpy_g13
10:13:47 146  ,jpy_g14
10:13:47 147  ,jpy_g15
10:13:47 148  ,jpy_g16
10:13:47 149  ,jpy_g17
10:13:47 150  ,jpy_g18
10:13:47 151  ,jpy_g19
10:13:47 152  ,jpy_g20
10:13:47 153  ,jpy_g21
10:13:47 154  ,jpy_g22
10:13:47 155  ,jpy_g23
10:13:47 156  ,jpy_g24
10:13:47 157  ,jpy_g25
10:13:47 158  ,jpy_g26
10:13:47 159  ,jpy_g27
10:13:47 160  ,jpy_g28
10:13:47 161  ,jpy_g29
10:13:47 162  ,jpy_g30
10:13:47 163  ,jpy_g31
10:13:47 164  ,jpy_g32
10:13:47 165  ,jpy_g33
10:13:47 166  ,jpy_g34
10:13:47 167  ,jpy_g35
10:13:47 168  ,jpy_g36
10:13:47 169  ,jpy_g37
10:13:47 170  ,jpy_g38
10:13:47 171  ,jpy_g39
10:13:47 172  ,jpy_g40
10:13:47 173  ,jpy_g41
10:13:47 174  ,cad_g00
10:13:47 175  ,cad_g01
10:13:47 176  ,cad_g02
10:13:47 177  ,cad_g03
10:13:47 178  ,cad_g04
10:13:47 179  ,cad_g05
10:13:47 180  ,cad_g06
10:13:47 181  ,cad_g07
10:13:47 182  ,cad_g08
10:13:47 183  ,cad_g09
10:13:47 184  ,cad_g10
10:13:47 185  ,cad_g11
10:13:47 186  ,cad_g12
10:13:47 187  ,cad_g13
10:13:47 188  ,cad_g14
10:13:47 189  ,cad_g15
10:13:47 190  ,cad_g16
10:13:47 191  ,cad_g17
10:13:47 192  ,cad_g18
10:13:47 193  ,cad_g19
10:13:47 194  ,cad_g20
10:13:47 195  ,cad_g21
10:13:47 196  ,cad_g22
10:13:47 197  ,cad_g23
10:13:47 198  ,cad_g24
10:13:47 199  ,cad_g25
10:13:47 200  ,cad_g26
10:13:47 201  ,cad_g27
10:13:47 202  ,cad_g28
10:13:47 203  ,cad_g29
10:13:47 204  ,cad_g30
10:13:47 205  ,cad_g31
10:13:47 206  ,cad_g32
10:13:47 207  ,cad_g33
10:13:47 208  ,cad_g34
10:13:47 209  ,cad_g35
10:13:47 210  ,cad_g36
10:13:47 211  ,cad_g37
10:13:47 212  ,cad_g38
10:13:47 213  ,cad_g39
10:13:47 214  ,cad_g40
10:13:47 215  ,cad_g41
10:13:47 216  ,chf_g00
10:13:47 217  ,chf_g01
10:13:47 218  ,chf_g02
10:13:47 219  ,chf_g03
10:13:47 220  ,chf_g04
10:13:47 221  ,chf_g05
10:13:47 222  ,chf_g06
10:13:47 223  ,chf_g07
10:13:47 224  ,chf_g08
10:13:47 225  ,chf_g09
10:13:47 226  ,chf_g10
10:13:47 227  ,chf_g11
10:13:47 228  ,chf_g12
10:13:47 229  ,chf_g13
10:13:47 230  ,chf_g14
10:13:47 231  ,chf_g15
10:13:47 232  ,chf_g16
10:13:47 233  ,chf_g17
10:13:47 234  ,chf_g18
10:13:47 235  ,chf_g19
10:13:47 236  ,chf_g20
10:13:47 237  ,chf_g21
10:13:47 238  ,chf_g22
10:13:47 239  ,chf_g23
10:13:47 240  ,chf_g24
10:13:47 241  ,chf_g25
10:13:47 242  ,chf_g26
10:13:47 243  ,chf_g27
10:13:47 244  ,chf_g28
10:13:47 245  ,chf_g29
10:13:47 246  ,chf_g30
10:13:47 247  ,chf_g31
10:13:47 248  ,chf_g32
10:13:47 249  ,chf_g33
10:13:47 250  ,chf_g34
10:13:47 251  ,chf_g35
10:13:47 252  ,chf_g36
10:13:47 253  ,chf_g37
10:13:47 254  ,chf_g38
10:13:47 255  ,chf_g39
10:13:47 256  ,chf_g40
10:13:47 257  ,chf_g41
10:13:47 258  FROM aud_ms6 m
10:13:47 259  WHERE m.ydate = '&1'||' '||'&2'
10:13:47 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'09:50:00'

View created.

Elapsed: 00:00:00.14
10:13:47 SQL> 
10:13:47 SQL> -- rpt
10:13:47 SQL> -- We should see just 1 row:
10:13:47 SQL> 
10:13:47 SQL> SELECT COUNT(prdate) FROM sme
10:13:47   2  
10:13:47 SQL> -- Build the model:
10:13:47 SQL> CREATE OR REPLACE VIEW bme AS
10:13:47   2  SELECT
10:13:47   3  'aud'||m.ydate prdate
10:13:47   4  ,gatt
10:13:47   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
10:13:47   6  ,eur_g00
10:13:47   7  ,eur_g01
10:13:47   8  ,eur_g02
10:13:47   9  ,eur_g03
10:13:47  10  ,eur_g04
10:13:47  11  ,eur_g05
10:13:47  12  ,eur_g06
10:13:47  13  ,eur_g07
10:13:47  14  ,eur_g08
10:13:47  15  ,eur_g09
10:13:47  16  ,eur_g10
10:13:47  17  ,eur_g11
10:13:47  18  ,eur_g12
10:13:47  19  ,eur_g13
10:13:47  20  ,eur_g14
10:13:47  21  ,eur_g15
10:13:47  22  ,eur_g16
10:13:47  23  ,eur_g17
10:13:47  24  ,eur_g18
10:13:47  25  ,eur_g19
10:13:47  26  ,eur_g20
10:13:47  27  ,eur_g21
10:13:47  28  ,eur_g22
10:13:47  29  ,eur_g23
10:13:47  30  ,eur_g24
10:13:47  31  ,eur_g25
10:13:47  32  ,eur_g26
10:13:47  33  ,eur_g27
10:13:47  34  ,eur_g28
10:13:47  35  ,eur_g29
10:13:47  36  ,eur_g30
10:13:47  37  ,eur_g31
10:13:47  38  ,eur_g32
10:13:47  39  ,eur_g33
10:13:47  40  ,eur_g34
10:13:47  41  ,eur_g35
10:13:47  42  ,eur_g36
10:13:47  43  ,eur_g37
10:13:47  44  ,eur_g38
10:13:47  45  ,eur_g39
10:13:47  46  ,eur_g40
10:13:47  47  ,eur_g41
10:13:47  48  ,aud_g00
10:13:47  49  ,aud_g01
10:13:47  50  ,aud_g02
10:13:47  51  ,aud_g03
10:13:47  52  ,aud_g04
10:13:47  53  ,aud_g05
10:13:47  54  ,aud_g06
10:13:47  55  ,aud_g07
10:13:47  56  ,aud_g08
10:13:47  57  ,aud_g09
10:13:47  58  ,aud_g10
10:13:47  59  ,aud_g11
10:13:47  60  ,aud_g12
10:13:47  61  ,aud_g13
10:13:47  62  ,aud_g14
10:13:47  63  ,aud_g15
10:13:47  64  ,aud_g16
10:13:47  65  ,aud_g17
10:13:47  66  ,aud_g18
10:13:47  67  ,aud_g19
10:13:47  68  ,aud_g20
10:13:47  69  ,aud_g21
10:13:47  70  ,aud_g22
10:13:47  71  ,aud_g23
10:13:47  72  ,aud_g24
10:13:47  73  ,aud_g25
10:13:47  74  ,aud_g26
10:13:47  75  ,aud_g27
10:13:47  76  ,aud_g28
10:13:47  77  ,aud_g29
10:13:47  78  ,aud_g30
10:13:47  79  ,aud_g31
10:13:47  80  ,aud_g32
10:13:47  81  ,aud_g33
10:13:47  82  ,aud_g34
10:13:47  83  ,aud_g35
10:13:47  84  ,aud_g36
10:13:47  85  ,aud_g37
10:13:47  86  ,aud_g38
10:13:47  87  ,aud_g39
10:13:47  88  ,aud_g40
10:13:47  89  ,aud_g41
10:13:47  90  ,gbp_g00
10:13:47  91  ,gbp_g01
10:13:47  92  ,gbp_g02
10:13:47  93  ,gbp_g03
10:13:47  94  ,gbp_g04
10:13:47  95  ,gbp_g05
10:13:47  96  ,gbp_g06
10:13:47  97  ,gbp_g07
10:13:47  98  ,gbp_g08
10:13:47  99  ,gbp_g09
10:13:47 100  ,gbp_g10
10:13:47 101  ,gbp_g11
10:13:47 102  ,gbp_g12
10:13:47 103  ,gbp_g13
10:13:47 104  ,gbp_g14
10:13:47 105  ,gbp_g15
10:13:47 106  ,gbp_g16
10:13:47 107  ,gbp_g17
10:13:47 108  ,gbp_g18
10:13:47 109  ,gbp_g19
10:13:47 110  ,gbp_g20
10:13:47 111  ,gbp_g21
10:13:47 112  ,gbp_g22
10:13:47 113  ,gbp_g23
10:13:47 114  ,gbp_g24
10:13:47 115  ,gbp_g25
10:13:47 116  ,gbp_g26
10:13:47 117  ,gbp_g27
10:13:47 118  ,gbp_g28
10:13:47 119  ,gbp_g29
10:13:47 120  ,gbp_g30
10:13:47 121  ,gbp_g31
10:13:47 122  ,gbp_g32
10:13:47 123  ,gbp_g33
10:13:47 124  ,gbp_g34
10:13:47 125  ,gbp_g35
10:13:47 126  ,gbp_g36
10:13:47 127  ,gbp_g37
10:13:47 128  ,gbp_g38
10:13:47 129  ,gbp_g39
10:13:47 130  ,gbp_g40
10:13:47 131  ,gbp_g41
10:13:47 132  ,jpy_g00
10:13:47 133  ,jpy_g01
10:13:47 134  ,jpy_g02
10:13:47 135  ,jpy_g03
10:13:47 136  ,jpy_g04
10:13:47 137  ,jpy_g05
10:13:47 138  ,jpy_g06
10:13:47 139  ,jpy_g07
10:13:47 140  ,jpy_g08
10:13:47 141  ,jpy_g09
10:13:47 142  ,jpy_g10
10:13:47 143  ,jpy_g11
10:13:47 144  ,jpy_g12
10:13:47 145  ,jpy_g13
10:13:47 146  ,jpy_g14
10:13:47 147  ,jpy_g15
10:13:47 148  ,jpy_g16
10:13:47 149  ,jpy_g17
10:13:47 150  ,jpy_g18
10:13:47 151  ,jpy_g19
10:13:47 152  ,jpy_g20
10:13:47 153  ,jpy_g21
10:13:47 154  ,jpy_g22
10:13:47 155  ,jpy_g23
10:13:47 156  ,jpy_g24
10:13:47 157  ,jpy_g25
10:13:47 158  ,jpy_g26
10:13:47 159  ,jpy_g27
10:13:47 160  ,jpy_g28
10:13:47 161  ,jpy_g29
10:13:47 162  ,jpy_g30
10:13:47 163  ,jpy_g31
10:13:47 164  ,jpy_g32
10:13:47 165  ,jpy_g33
10:13:47 166  ,jpy_g34
10:13:47 167  ,jpy_g35
10:13:47 168  ,jpy_g36
10:13:47 169  ,jpy_g37
10:13:47 170  ,jpy_g38
10:13:47 171  ,jpy_g39
10:13:47 172  ,jpy_g40
10:13:47 173  ,jpy_g41
10:13:47 174  ,cad_g00
10:13:47 175  ,cad_g01
10:13:47 176  ,cad_g02
10:13:47 177  ,cad_g03
10:13:47 178  ,cad_g04
10:13:47 179  ,cad_g05
10:13:47 180  ,cad_g06
10:13:47 181  ,cad_g07
10:13:47 182  ,cad_g08
10:13:47 183  ,cad_g09
10:13:47 184  ,cad_g10
10:13:47 185  ,cad_g11
10:13:47 186  ,cad_g12
10:13:47 187  ,cad_g13
10:13:47 188  ,cad_g14
10:13:47 189  ,cad_g15
10:13:47 190  ,cad_g16
10:13:47 191  ,cad_g17
10:13:47 192  ,cad_g18
10:13:47 193  ,cad_g19
10:13:47 194  ,cad_g20
10:13:47 195  ,cad_g21
10:13:47 196  ,cad_g22
10:13:47 197  ,cad_g23
10:13:47 198  ,cad_g24
10:13:47 199  ,cad_g25
10:13:47 200  ,cad_g26
10:13:47 201  ,cad_g27
10:13:47 202  ,cad_g28
10:13:47 203  ,cad_g29
10:13:47 204  ,cad_g30
10:13:47 205  ,cad_g31
10:13:47 206  ,cad_g32
10:13:47 207  ,cad_g33
10:13:47 208  ,cad_g34
10:13:47 209  ,cad_g35
10:13:47 210  ,cad_g36
10:13:47 211  ,cad_g37
10:13:47 212  ,cad_g38
10:13:47 213  ,cad_g39
10:13:47 214  ,cad_g40
10:13:47 215  ,cad_g41
10:13:47 216  ,chf_g00
10:13:47 217  ,chf_g01
10:13:47 218  ,chf_g02
10:13:47 219  ,chf_g03
10:13:47 220  ,chf_g04
10:13:47 221  ,chf_g05
10:13:47 222  ,chf_g06
10:13:47 223  ,chf_g07
10:13:47 224  ,chf_g08
10:13:47 225  ,chf_g09
10:13:47 226  ,chf_g10
10:13:47 227  ,chf_g11
10:13:47 228  ,chf_g12
10:13:47 229  ,chf_g13
10:13:47 230  ,chf_g14
10:13:47 231  ,chf_g15
10:13:47 232  ,chf_g16
10:13:47 233  ,chf_g17
10:13:47 234  ,chf_g18
10:13:47 235  ,chf_g19
10:13:47 236  ,chf_g20
10:13:47 237  ,chf_g21
10:13:47 238  ,chf_g22
10:13:47 239  ,chf_g23
10:13:47 240  ,chf_g24
10:13:47 241  ,chf_g25
10:13:47 242  ,chf_g26
10:13:47 243  ,chf_g27
10:13:47 244  ,chf_g28
10:13:47 245  ,chf_g29
10:13:47 246  ,chf_g30
10:13:47 247  ,chf_g31
10:13:47 248  ,chf_g32
10:13:47 249  ,chf_g33
10:13:47 250  ,chf_g34
10:13:47 251  ,chf_g35
10:13:47 252  ,chf_g36
10:13:47 253  ,chf_g37
10:13:47 254  ,chf_g38
10:13:47 255  ,chf_g39
10:13:47 256  ,chf_g40
10:13:47 257  ,chf_g41
10:13:47 258  FROM aud_ms6 m
10:13:47 259  WHERE gatt IN('nup','up')
10:13:47 260  AND 1+m.ydate < '&1'||' '||'&2'
10:13:47 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'09:50:00'

View created.

Elapsed: 00:00:00.13
10:13:47 SQL> 
10:13:47 SQL> -- rpt
10:13:47 SQL> 
10:13:47 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
10:13:47   2  
10:13:47 SQL> SELECT MAX(prdate) FROM bme
10:13:47   2  
10:13:47 SQL> -- Now build model from bme and score sme
10:13:47 SQL> @score1.sql
10:13:47 SQL> -- score1.sql
10:13:47 SQL> 
10:13:47 SQL> -- Does the 1st SVM score
10:13:47 SQL> 
10:13:47 SQL> -- Fill up svmc_apply_prep
10:13:47 SQL> @score.sql
10:13:47 SQL> --
10:13:47 SQL> -- score.sql
10:13:47 SQL> --
10:13:47 SQL> 
10:13:47 SQL> -- usage: score.sql
10:13:47 SQL> 
10:13:47 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
10:13:47 SQL> 
10:13:47 SQL> DEFINE target	= 'gatt'
10:13:47 SQL> DEFINE model_name = 'forex15'
10:13:47 SQL> DEFINE bldtable	= 'bme'
10:13:47 SQL> DEFINE scoretable = 'sme'
10:13:47 SQL> DEFINE case_id	= 'prdate'
10:13:47 SQL> 
10:13:47 SQL> -- Define a variable to help me exclude some columns from some data mining calls
10:13:47 SQL> DEFINE exclude1 = "'&target','&case_id'"
10:13:47 SQL> 
10:13:47 SQL> -- Builds an SVM model using pl/sql.
10:13:47 SQL> 
10:13:47 SQL> -----------------------------------------------------------------------
10:13:47 SQL> --			    BUILD THE MODEL
10:13:47 SQL> -----------------------------------------------------------------------
10:13:47 SQL> 
10:13:47 SQL> -- Cleanup old build data preparation objects for repeat runs
10:13:47 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
10:13:47 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
10:13:47 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
10:13:47 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
10:13:47 SQL> 
10:13:47 SQL> 
10:13:47 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
10:13:47 SQL> --
10:13:47 SQL> -- DROP	TABLE svmc_settings ;
10:13:47 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
10:13:47 SQL> -- DELETE svmc_settings;
10:13:47 SQL> 
10:13:47 SQL> -- The default classification algorithm is Naive Bayes. So override
10:13:47 SQL> -- this choice to SVM using a settings table.
10:13:47 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
10:13:47 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
10:13:47 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
10:13:47 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
10:13:47 SQL> -- models.
10:13:47 SQL> --
10:13:47 SQL> 
10:13:47 SQL> -- Do this once and then comment it out.
10:13:47 SQL> -- That makes script go faster.
10:13:47 SQL> -- BEGIN
10:13:47 SQL> -- -- Populate settings table
10:13:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:13:47 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
10:13:47 SQL> --
10:13:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:13:47 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
10:13:47 SQL> --
10:13:47 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:13:47 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
10:13:47 SQL> --   COMMIT;
10:13:47 SQL> -- END;
10:13:47 SQL> -- /
10:13:47 SQL> 
10:13:47 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
10:13:47 SQL> 
10:13:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
10:13:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:13:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
10:13:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
10:13:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:13:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:13:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
10:13:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:13:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:13:48 SQL> 
10:13:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
10:13:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:13:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
10:13:48 SQL> 
10:13:48 SQL> --------------------------------
10:13:48 SQL> -- PREPARE BUILD (TRAINING) DATA
10:13:48 SQL> --
10:13:48 SQL> 
10:13:48 SQL> -- 1. Missing Value treatment for all Predictors and
10:13:48 SQL> -- 2. Outlier Treatment and
10:13:48 SQL> -- 3. Normalization are performed below.
10:13:48 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
10:13:48 SQL> --    normalized here.
10:13:48 SQL> 
10:13:48 SQL> BEGIN
10:13:48   2  	-- Perform missing value treatment for all predictors
10:13:48   3  	-- create miss tables
10:13:48   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
10:13:48   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
10:13:48   6  
10:13:48   7  	-- populate miss tables
10:13:48   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
10:13:48   9  	  miss_table_name => 'svmc_miss_num',
10:13:48  10  	  data_table_name => '&bldtable',
10:13:48  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:13:48  12  
10:13:48  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
10:13:48  14  	  miss_table_name => 'svmc_miss_cat',
10:13:48  15  	  data_table_name => '&bldtable',
10:13:48  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:13:48  17  
10:13:48  18  	-- xform input data to replace missing values
10:13:48  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
10:13:48  20  	  miss_table_name => 'svmc_miss_num',
10:13:48  21  	  data_table_name => '&bldtable',
10:13:48  22  	  xform_view_name => 'xformed_build_miss_num');
10:13:48  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
10:13:48  24  	  miss_table_name => 'svmc_miss_cat',
10:13:48  25  	  data_table_name => '&bldtable',
10:13:48  26  	  xform_view_name => 'xformed_build_miss_cat');
10:13:48  27  
10:13:48  28  	-- Perform outlier treatment.
10:13:48  29  	-- create clip table
10:13:48  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
10:13:48  31  
10:13:48  32  	-- populate clip table
10:13:48  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
10:13:48  34  	  clip_table_name => 'svmc_clip',
10:13:48  35  	  data_table_name => '&bldtable',
10:13:48  36  	  tail_frac	  => 0.025,
10:13:48  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:13:48  38  
10:13:48  39  	-- xform input data to winsorized data
10:13:48  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
10:13:48  41  	  clip_table_name => 'svmc_clip',
10:13:48  42  	  data_table_name => '&bldtable',
10:13:48  43  	  xform_view_name => 'svmc_winsor');
10:13:48  44  
10:13:48  45  	-- create normalization table
10:13:48  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
10:13:48  47  
10:13:48  48  	-- populate normalization table based on winsorized data
10:13:48  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
10:13:48  50  	  norm_table_name => 'svmc_norm',
10:13:48  51  	  data_table_name => 'svmc_winsor',
10:13:48  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:13:48  53  
10:13:48  54  	-- normalize the original data
10:13:48  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
10:13:48  56  	  norm_table_name => 'svmc_norm',
10:13:48  57  	  data_table_name => '&bldtable',
10:13:48  58  	  xform_view_name => 'svmc_build_prep');
10:13:48  59  END;
10:13:48  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.30
10:14:07 SQL> 
10:14:07 SQL> ---------------------
10:14:07 SQL> -- CREATE A NEW MODEL
10:14:07 SQL> --
10:14:07 SQL> -- Cleanup old model with the same name for repeat runs
10:14:07 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
10:14:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:14:07   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.58
10:14:08 SQL> 
10:14:08 SQL> -- Build a new SVM Model
10:14:08 SQL> BEGIN
10:14:08   2  	DBMS_DATA_MINING.CREATE_MODEL(
10:14:08   3  	  model_name	      => '&model_name',
10:14:08   4  	  mining_function     => dbms_data_mining.classification,
10:14:08   5  	  data_table_name     => 'svmc_build_prep',
10:14:08   6  	  case_id_column_name => '&case_id',
10:14:08   7  	  target_column_name  => '&target',
10:14:08   8  	  settings_table_name => 'svmc_settings');
10:14:08   9  END;
10:14:08  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.48
10:14:36 SQL> 
10:14:36 SQL> -----------------------------------------------------------------------
10:14:36 SQL> --			       APPLY/score THE MODEL
10:14:36 SQL> -----------------------------------------------------------------------
10:14:36 SQL> 
10:14:36 SQL> -- Cleanup old scoring data preparation objects for repeat runs
10:14:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
10:14:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:14:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
10:14:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
10:14:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:14:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
10:14:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
10:14:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:14:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
10:14:36 SQL> -----------------------
10:14:36 SQL> -- PREPARE SCORING DATA
10:14:36 SQL> --
10:14:36 SQL> -- If the data for model creation has been prepared, then the data
10:14:36 SQL> -- to be scored using the model must be prepared in the same manner
10:14:36 SQL> -- in order to obtain meaningful results.
10:14:36 SQL> --
10:14:36 SQL> -- 1. Missing Value treatment for all Predictors and
10:14:36 SQL> -- 2. Normalization
10:14:36 SQL> -- No outlier treatment will be performed during test and apply. The
10:14:36 SQL> -- normalization step is sufficient, since the normalization parameters
10:14:36 SQL> -- already capture the effects of outlier treatment done with build data.
10:14:36 SQL> --
10:14:36 SQL> BEGIN
10:14:36   2  	-- Xform Test data to replace missing values
10:14:36   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
10:14:36   4  	  miss_table_name => 'svmc_miss_num',
10:14:36   5  	  data_table_name => '&scoretable',
10:14:36   6  	  xform_view_name => 'xformed_apply_miss_num');
10:14:36   7  
10:14:36   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
10:14:36   9  	  miss_table_name => 'svmc_miss_cat',
10:14:36  10  	  data_table_name => '&scoretable',
10:14:36  11  	  xform_view_name => 'xformed_apply_miss_cat');
10:14:36  12  
10:14:36  13  	-- Normalize the data to be scored
10:14:36  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
10:14:36  15  	  norm_table_name => 'svmc_norm',
10:14:36  16  	  data_table_name => '&scoretable',
10:14:36  17  	  xform_view_name => 'svmc_apply_prep');
10:14:36  18  END;
10:14:36  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.38
10:14:38 SQL> 
10:14:38 SQL> -- Use same model_name used in score.sql
10:14:38 SQL> DEFINE model_name = 'forex15'
10:14:38 SQL> 
10:14:38 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
10:14:38 SQL> 
10:14:38 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
10:14:38 SQL> 
10:14:38 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
10:14:38   2  SELECT
10:14:38   3  prdate
10:14:38   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
10:14:38   5  ,sysdate
10:14:38   6  ,SUBSTR(prdate,1,3)pair
10:14:38   7  ,SUBSTR(prdate,4,19)ydate
10:14:38   8  FROM svmc_apply_prep
10:14:38   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
10:14:38 SQL> @aud_score1day.sql  2011-01-07 09:55:00
10:14:38 SQL> --
10:14:38 SQL> -- aud_score1day.sql
10:14:38 SQL> --
10:14:38 SQL> 
10:14:38 SQL> CREATE OR REPLACE VIEW sme AS
10:14:38   2  SELECT
10:14:38   3  'aud'||m.ydate prdate
10:14:38   4  ,NULL gatt
10:14:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
10:14:38   6  ,eur_g00
10:14:38   7  ,eur_g01
10:14:38   8  ,eur_g02
10:14:38   9  ,eur_g03
10:14:38  10  ,eur_g04
10:14:38  11  ,eur_g05
10:14:38  12  ,eur_g06
10:14:38  13  ,eur_g07
10:14:38  14  ,eur_g08
10:14:38  15  ,eur_g09
10:14:38  16  ,eur_g10
10:14:38  17  ,eur_g11
10:14:38  18  ,eur_g12
10:14:38  19  ,eur_g13
10:14:38  20  ,eur_g14
10:14:38  21  ,eur_g15
10:14:38  22  ,eur_g16
10:14:38  23  ,eur_g17
10:14:38  24  ,eur_g18
10:14:38  25  ,eur_g19
10:14:38  26  ,eur_g20
10:14:38  27  ,eur_g21
10:14:38  28  ,eur_g22
10:14:38  29  ,eur_g23
10:14:38  30  ,eur_g24
10:14:38  31  ,eur_g25
10:14:38  32  ,eur_g26
10:14:38  33  ,eur_g27
10:14:38  34  ,eur_g28
10:14:38  35  ,eur_g29
10:14:38  36  ,eur_g30
10:14:38  37  ,eur_g31
10:14:38  38  ,eur_g32
10:14:38  39  ,eur_g33
10:14:38  40  ,eur_g34
10:14:38  41  ,eur_g35
10:14:38  42  ,eur_g36
10:14:38  43  ,eur_g37
10:14:38  44  ,eur_g38
10:14:38  45  ,eur_g39
10:14:38  46  ,eur_g40
10:14:38  47  ,eur_g41
10:14:38  48  ,aud_g00
10:14:38  49  ,aud_g01
10:14:38  50  ,aud_g02
10:14:38  51  ,aud_g03
10:14:38  52  ,aud_g04
10:14:38  53  ,aud_g05
10:14:38  54  ,aud_g06
10:14:38  55  ,aud_g07
10:14:38  56  ,aud_g08
10:14:38  57  ,aud_g09
10:14:38  58  ,aud_g10
10:14:38  59  ,aud_g11
10:14:38  60  ,aud_g12
10:14:38  61  ,aud_g13
10:14:38  62  ,aud_g14
10:14:38  63  ,aud_g15
10:14:38  64  ,aud_g16
10:14:38  65  ,aud_g17
10:14:38  66  ,aud_g18
10:14:38  67  ,aud_g19
10:14:38  68  ,aud_g20
10:14:38  69  ,aud_g21
10:14:38  70  ,aud_g22
10:14:38  71  ,aud_g23
10:14:38  72  ,aud_g24
10:14:38  73  ,aud_g25
10:14:38  74  ,aud_g26
10:14:38  75  ,aud_g27
10:14:38  76  ,aud_g28
10:14:38  77  ,aud_g29
10:14:38  78  ,aud_g30
10:14:38  79  ,aud_g31
10:14:38  80  ,aud_g32
10:14:38  81  ,aud_g33
10:14:38  82  ,aud_g34
10:14:38  83  ,aud_g35
10:14:38  84  ,aud_g36
10:14:38  85  ,aud_g37
10:14:38  86  ,aud_g38
10:14:38  87  ,aud_g39
10:14:38  88  ,aud_g40
10:14:38  89  ,aud_g41
10:14:38  90  ,gbp_g00
10:14:38  91  ,gbp_g01
10:14:38  92  ,gbp_g02
10:14:38  93  ,gbp_g03
10:14:38  94  ,gbp_g04
10:14:38  95  ,gbp_g05
10:14:38  96  ,gbp_g06
10:14:38  97  ,gbp_g07
10:14:38  98  ,gbp_g08
10:14:38  99  ,gbp_g09
10:14:38 100  ,gbp_g10
10:14:38 101  ,gbp_g11
10:14:38 102  ,gbp_g12
10:14:38 103  ,gbp_g13
10:14:38 104  ,gbp_g14
10:14:38 105  ,gbp_g15
10:14:38 106  ,gbp_g16
10:14:38 107  ,gbp_g17
10:14:38 108  ,gbp_g18
10:14:38 109  ,gbp_g19
10:14:38 110  ,gbp_g20
10:14:38 111  ,gbp_g21
10:14:38 112  ,gbp_g22
10:14:38 113  ,gbp_g23
10:14:38 114  ,gbp_g24
10:14:38 115  ,gbp_g25
10:14:38 116  ,gbp_g26
10:14:38 117  ,gbp_g27
10:14:38 118  ,gbp_g28
10:14:38 119  ,gbp_g29
10:14:38 120  ,gbp_g30
10:14:38 121  ,gbp_g31
10:14:38 122  ,gbp_g32
10:14:38 123  ,gbp_g33
10:14:38 124  ,gbp_g34
10:14:38 125  ,gbp_g35
10:14:38 126  ,gbp_g36
10:14:38 127  ,gbp_g37
10:14:38 128  ,gbp_g38
10:14:38 129  ,gbp_g39
10:14:38 130  ,gbp_g40
10:14:38 131  ,gbp_g41
10:14:38 132  ,jpy_g00
10:14:38 133  ,jpy_g01
10:14:38 134  ,jpy_g02
10:14:38 135  ,jpy_g03
10:14:38 136  ,jpy_g04
10:14:38 137  ,jpy_g05
10:14:38 138  ,jpy_g06
10:14:38 139  ,jpy_g07
10:14:38 140  ,jpy_g08
10:14:38 141  ,jpy_g09
10:14:38 142  ,jpy_g10
10:14:38 143  ,jpy_g11
10:14:38 144  ,jpy_g12
10:14:38 145  ,jpy_g13
10:14:38 146  ,jpy_g14
10:14:38 147  ,jpy_g15
10:14:38 148  ,jpy_g16
10:14:38 149  ,jpy_g17
10:14:38 150  ,jpy_g18
10:14:38 151  ,jpy_g19
10:14:38 152  ,jpy_g20
10:14:38 153  ,jpy_g21
10:14:38 154  ,jpy_g22
10:14:38 155  ,jpy_g23
10:14:38 156  ,jpy_g24
10:14:38 157  ,jpy_g25
10:14:38 158  ,jpy_g26
10:14:38 159  ,jpy_g27
10:14:38 160  ,jpy_g28
10:14:38 161  ,jpy_g29
10:14:38 162  ,jpy_g30
10:14:38 163  ,jpy_g31
10:14:38 164  ,jpy_g32
10:14:38 165  ,jpy_g33
10:14:38 166  ,jpy_g34
10:14:38 167  ,jpy_g35
10:14:38 168  ,jpy_g36
10:14:38 169  ,jpy_g37
10:14:38 170  ,jpy_g38
10:14:38 171  ,jpy_g39
10:14:38 172  ,jpy_g40
10:14:38 173  ,jpy_g41
10:14:38 174  ,cad_g00
10:14:38 175  ,cad_g01
10:14:38 176  ,cad_g02
10:14:38 177  ,cad_g03
10:14:38 178  ,cad_g04
10:14:38 179  ,cad_g05
10:14:38 180  ,cad_g06
10:14:38 181  ,cad_g07
10:14:38 182  ,cad_g08
10:14:38 183  ,cad_g09
10:14:38 184  ,cad_g10
10:14:38 185  ,cad_g11
10:14:38 186  ,cad_g12
10:14:38 187  ,cad_g13
10:14:38 188  ,cad_g14
10:14:38 189  ,cad_g15
10:14:38 190  ,cad_g16
10:14:38 191  ,cad_g17
10:14:38 192  ,cad_g18
10:14:38 193  ,cad_g19
10:14:38 194  ,cad_g20
10:14:38 195  ,cad_g21
10:14:38 196  ,cad_g22
10:14:38 197  ,cad_g23
10:14:38 198  ,cad_g24
10:14:38 199  ,cad_g25
10:14:38 200  ,cad_g26
10:14:38 201  ,cad_g27
10:14:38 202  ,cad_g28
10:14:38 203  ,cad_g29
10:14:38 204  ,cad_g30
10:14:38 205  ,cad_g31
10:14:38 206  ,cad_g32
10:14:38 207  ,cad_g33
10:14:38 208  ,cad_g34
10:14:38 209  ,cad_g35
10:14:38 210  ,cad_g36
10:14:38 211  ,cad_g37
10:14:38 212  ,cad_g38
10:14:38 213  ,cad_g39
10:14:38 214  ,cad_g40
10:14:38 215  ,cad_g41
10:14:38 216  ,chf_g00
10:14:38 217  ,chf_g01
10:14:38 218  ,chf_g02
10:14:38 219  ,chf_g03
10:14:38 220  ,chf_g04
10:14:38 221  ,chf_g05
10:14:38 222  ,chf_g06
10:14:38 223  ,chf_g07
10:14:38 224  ,chf_g08
10:14:38 225  ,chf_g09
10:14:38 226  ,chf_g10
10:14:38 227  ,chf_g11
10:14:38 228  ,chf_g12
10:14:38 229  ,chf_g13
10:14:38 230  ,chf_g14
10:14:38 231  ,chf_g15
10:14:38 232  ,chf_g16
10:14:38 233  ,chf_g17
10:14:38 234  ,chf_g18
10:14:38 235  ,chf_g19
10:14:38 236  ,chf_g20
10:14:38 237  ,chf_g21
10:14:38 238  ,chf_g22
10:14:38 239  ,chf_g23
10:14:38 240  ,chf_g24
10:14:38 241  ,chf_g25
10:14:38 242  ,chf_g26
10:14:38 243  ,chf_g27
10:14:38 244  ,chf_g28
10:14:38 245  ,chf_g29
10:14:38 246  ,chf_g30
10:14:38 247  ,chf_g31
10:14:38 248  ,chf_g32
10:14:38 249  ,chf_g33
10:14:38 250  ,chf_g34
10:14:38 251  ,chf_g35
10:14:38 252  ,chf_g36
10:14:38 253  ,chf_g37
10:14:38 254  ,chf_g38
10:14:38 255  ,chf_g39
10:14:38 256  ,chf_g40
10:14:38 257  ,chf_g41
10:14:38 258  FROM aud_ms6 m
10:14:38 259  WHERE m.ydate = '&1'||' '||'&2'
10:14:38 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'09:55:00'

View created.

Elapsed: 00:00:00.11
10:14:38 SQL> 
10:14:38 SQL> -- rpt
10:14:38 SQL> -- We should see just 1 row:
10:14:38 SQL> 
10:14:38 SQL> SELECT COUNT(prdate) FROM sme
10:14:38   2  
10:14:38 SQL> -- Build the model:
10:14:38 SQL> CREATE OR REPLACE VIEW bme AS
10:14:38   2  SELECT
10:14:38   3  'aud'||m.ydate prdate
10:14:38   4  ,gatt
10:14:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
10:14:38   6  ,eur_g00
10:14:38   7  ,eur_g01
10:14:38   8  ,eur_g02
10:14:38   9  ,eur_g03
10:14:38  10  ,eur_g04
10:14:38  11  ,eur_g05
10:14:38  12  ,eur_g06
10:14:38  13  ,eur_g07
10:14:38  14  ,eur_g08
10:14:38  15  ,eur_g09
10:14:38  16  ,eur_g10
10:14:38  17  ,eur_g11
10:14:38  18  ,eur_g12
10:14:38  19  ,eur_g13
10:14:38  20  ,eur_g14
10:14:38  21  ,eur_g15
10:14:38  22  ,eur_g16
10:14:38  23  ,eur_g17
10:14:38  24  ,eur_g18
10:14:38  25  ,eur_g19
10:14:38  26  ,eur_g20
10:14:38  27  ,eur_g21
10:14:38  28  ,eur_g22
10:14:38  29  ,eur_g23
10:14:38  30  ,eur_g24
10:14:38  31  ,eur_g25
10:14:38  32  ,eur_g26
10:14:38  33  ,eur_g27
10:14:38  34  ,eur_g28
10:14:38  35  ,eur_g29
10:14:38  36  ,eur_g30
10:14:38  37  ,eur_g31
10:14:38  38  ,eur_g32
10:14:38  39  ,eur_g33
10:14:38  40  ,eur_g34
10:14:38  41  ,eur_g35
10:14:38  42  ,eur_g36
10:14:38  43  ,eur_g37
10:14:38  44  ,eur_g38
10:14:38  45  ,eur_g39
10:14:38  46  ,eur_g40
10:14:38  47  ,eur_g41
10:14:38  48  ,aud_g00
10:14:38  49  ,aud_g01
10:14:38  50  ,aud_g02
10:14:38  51  ,aud_g03
10:14:38  52  ,aud_g04
10:14:38  53  ,aud_g05
10:14:38  54  ,aud_g06
10:14:38  55  ,aud_g07
10:14:38  56  ,aud_g08
10:14:38  57  ,aud_g09
10:14:38  58  ,aud_g10
10:14:38  59  ,aud_g11
10:14:38  60  ,aud_g12
10:14:38  61  ,aud_g13
10:14:38  62  ,aud_g14
10:14:38  63  ,aud_g15
10:14:38  64  ,aud_g16
10:14:38  65  ,aud_g17
10:14:38  66  ,aud_g18
10:14:38  67  ,aud_g19
10:14:38  68  ,aud_g20
10:14:38  69  ,aud_g21
10:14:38  70  ,aud_g22
10:14:38  71  ,aud_g23
10:14:38  72  ,aud_g24
10:14:38  73  ,aud_g25
10:14:38  74  ,aud_g26
10:14:38  75  ,aud_g27
10:14:38  76  ,aud_g28
10:14:38  77  ,aud_g29
10:14:38  78  ,aud_g30
10:14:38  79  ,aud_g31
10:14:38  80  ,aud_g32
10:14:38  81  ,aud_g33
10:14:38  82  ,aud_g34
10:14:38  83  ,aud_g35
10:14:38  84  ,aud_g36
10:14:38  85  ,aud_g37
10:14:38  86  ,aud_g38
10:14:38  87  ,aud_g39
10:14:38  88  ,aud_g40
10:14:38  89  ,aud_g41
10:14:38  90  ,gbp_g00
10:14:38  91  ,gbp_g01
10:14:38  92  ,gbp_g02
10:14:38  93  ,gbp_g03
10:14:38  94  ,gbp_g04
10:14:38  95  ,gbp_g05
10:14:38  96  ,gbp_g06
10:14:38  97  ,gbp_g07
10:14:38  98  ,gbp_g08
10:14:38  99  ,gbp_g09
10:14:38 100  ,gbp_g10
10:14:38 101  ,gbp_g11
10:14:38 102  ,gbp_g12
10:14:38 103  ,gbp_g13
10:14:38 104  ,gbp_g14
10:14:38 105  ,gbp_g15
10:14:38 106  ,gbp_g16
10:14:38 107  ,gbp_g17
10:14:38 108  ,gbp_g18
10:14:38 109  ,gbp_g19
10:14:38 110  ,gbp_g20
10:14:38 111  ,gbp_g21
10:14:38 112  ,gbp_g22
10:14:38 113  ,gbp_g23
10:14:38 114  ,gbp_g24
10:14:38 115  ,gbp_g25
10:14:38 116  ,gbp_g26
10:14:38 117  ,gbp_g27
10:14:38 118  ,gbp_g28
10:14:38 119  ,gbp_g29
10:14:38 120  ,gbp_g30
10:14:38 121  ,gbp_g31
10:14:38 122  ,gbp_g32
10:14:38 123  ,gbp_g33
10:14:38 124  ,gbp_g34
10:14:38 125  ,gbp_g35
10:14:38 126  ,gbp_g36
10:14:38 127  ,gbp_g37
10:14:38 128  ,gbp_g38
10:14:38 129  ,gbp_g39
10:14:38 130  ,gbp_g40
10:14:38 131  ,gbp_g41
10:14:38 132  ,jpy_g00
10:14:38 133  ,jpy_g01
10:14:38 134  ,jpy_g02
10:14:38 135  ,jpy_g03
10:14:38 136  ,jpy_g04
10:14:38 137  ,jpy_g05
10:14:38 138  ,jpy_g06
10:14:38 139  ,jpy_g07
10:14:38 140  ,jpy_g08
10:14:38 141  ,jpy_g09
10:14:38 142  ,jpy_g10
10:14:38 143  ,jpy_g11
10:14:38 144  ,jpy_g12
10:14:38 145  ,jpy_g13
10:14:38 146  ,jpy_g14
10:14:38 147  ,jpy_g15
10:14:38 148  ,jpy_g16
10:14:38 149  ,jpy_g17
10:14:38 150  ,jpy_g18
10:14:38 151  ,jpy_g19
10:14:38 152  ,jpy_g20
10:14:38 153  ,jpy_g21
10:14:38 154  ,jpy_g22
10:14:38 155  ,jpy_g23
10:14:38 156  ,jpy_g24
10:14:38 157  ,jpy_g25
10:14:38 158  ,jpy_g26
10:14:38 159  ,jpy_g27
10:14:38 160  ,jpy_g28
10:14:38 161  ,jpy_g29
10:14:38 162  ,jpy_g30
10:14:38 163  ,jpy_g31
10:14:38 164  ,jpy_g32
10:14:38 165  ,jpy_g33
10:14:38 166  ,jpy_g34
10:14:38 167  ,jpy_g35
10:14:38 168  ,jpy_g36
10:14:38 169  ,jpy_g37
10:14:38 170  ,jpy_g38
10:14:38 171  ,jpy_g39
10:14:38 172  ,jpy_g40
10:14:38 173  ,jpy_g41
10:14:38 174  ,cad_g00
10:14:38 175  ,cad_g01
10:14:38 176  ,cad_g02
10:14:38 177  ,cad_g03
10:14:38 178  ,cad_g04
10:14:38 179  ,cad_g05
10:14:38 180  ,cad_g06
10:14:38 181  ,cad_g07
10:14:38 182  ,cad_g08
10:14:38 183  ,cad_g09
10:14:38 184  ,cad_g10
10:14:38 185  ,cad_g11
10:14:38 186  ,cad_g12
10:14:38 187  ,cad_g13
10:14:38 188  ,cad_g14
10:14:38 189  ,cad_g15
10:14:38 190  ,cad_g16
10:14:38 191  ,cad_g17
10:14:38 192  ,cad_g18
10:14:38 193  ,cad_g19
10:14:38 194  ,cad_g20
10:14:38 195  ,cad_g21
10:14:38 196  ,cad_g22
10:14:38 197  ,cad_g23
10:14:38 198  ,cad_g24
10:14:38 199  ,cad_g25
10:14:38 200  ,cad_g26
10:14:38 201  ,cad_g27
10:14:38 202  ,cad_g28
10:14:38 203  ,cad_g29
10:14:38 204  ,cad_g30
10:14:38 205  ,cad_g31
10:14:38 206  ,cad_g32
10:14:38 207  ,cad_g33
10:14:38 208  ,cad_g34
10:14:38 209  ,cad_g35
10:14:38 210  ,cad_g36
10:14:38 211  ,cad_g37
10:14:38 212  ,cad_g38
10:14:38 213  ,cad_g39
10:14:38 214  ,cad_g40
10:14:38 215  ,cad_g41
10:14:38 216  ,chf_g00
10:14:38 217  ,chf_g01
10:14:38 218  ,chf_g02
10:14:38 219  ,chf_g03
10:14:38 220  ,chf_g04
10:14:38 221  ,chf_g05
10:14:38 222  ,chf_g06
10:14:38 223  ,chf_g07
10:14:38 224  ,chf_g08
10:14:38 225  ,chf_g09
10:14:38 226  ,chf_g10
10:14:38 227  ,chf_g11
10:14:38 228  ,chf_g12
10:14:38 229  ,chf_g13
10:14:38 230  ,chf_g14
10:14:38 231  ,chf_g15
10:14:38 232  ,chf_g16
10:14:38 233  ,chf_g17
10:14:38 234  ,chf_g18
10:14:38 235  ,chf_g19
10:14:38 236  ,chf_g20
10:14:38 237  ,chf_g21
10:14:38 238  ,chf_g22
10:14:38 239  ,chf_g23
10:14:38 240  ,chf_g24
10:14:38 241  ,chf_g25
10:14:38 242  ,chf_g26
10:14:38 243  ,chf_g27
10:14:38 244  ,chf_g28
10:14:38 245  ,chf_g29
10:14:38 246  ,chf_g30
10:14:38 247  ,chf_g31
10:14:38 248  ,chf_g32
10:14:38 249  ,chf_g33
10:14:38 250  ,chf_g34
10:14:38 251  ,chf_g35
10:14:38 252  ,chf_g36
10:14:38 253  ,chf_g37
10:14:38 254  ,chf_g38
10:14:38 255  ,chf_g39
10:14:38 256  ,chf_g40
10:14:38 257  ,chf_g41
10:14:38 258  FROM aud_ms6 m
10:14:38 259  WHERE gatt IN('nup','up')
10:14:38 260  AND 1+m.ydate < '&1'||' '||'&2'
10:14:38 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'09:55:00'

View created.

Elapsed: 00:00:00.12
10:14:38 SQL> 
10:14:38 SQL> -- rpt
10:14:38 SQL> 
10:14:38 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
10:14:38   2  
10:14:38 SQL> SELECT MAX(prdate) FROM bme
10:14:38   2  
10:14:38 SQL> -- Now build model from bme and score sme
10:14:38 SQL> @score1.sql
10:14:38 SQL> -- score1.sql
10:14:38 SQL> 
10:14:38 SQL> -- Does the 1st SVM score
10:14:38 SQL> 
10:14:38 SQL> -- Fill up svmc_apply_prep
10:14:38 SQL> @score.sql
10:14:38 SQL> --
10:14:38 SQL> -- score.sql
10:14:38 SQL> --
10:14:38 SQL> 
10:14:38 SQL> -- usage: score.sql
10:14:38 SQL> 
10:14:38 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
10:14:38 SQL> 
10:14:38 SQL> DEFINE target	= 'gatt'
10:14:38 SQL> DEFINE model_name = 'forex15'
10:14:38 SQL> DEFINE bldtable	= 'bme'
10:14:38 SQL> DEFINE scoretable = 'sme'
10:14:38 SQL> DEFINE case_id	= 'prdate'
10:14:38 SQL> 
10:14:38 SQL> -- Define a variable to help me exclude some columns from some data mining calls
10:14:38 SQL> DEFINE exclude1 = "'&target','&case_id'"
10:14:38 SQL> 
10:14:38 SQL> -- Builds an SVM model using pl/sql.
10:14:38 SQL> 
10:14:38 SQL> -----------------------------------------------------------------------
10:14:38 SQL> --			    BUILD THE MODEL
10:14:38 SQL> -----------------------------------------------------------------------
10:14:38 SQL> 
10:14:38 SQL> -- Cleanup old build data preparation objects for repeat runs
10:14:38 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
10:14:38 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
10:14:38 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
10:14:38 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
10:14:38 SQL> 
10:14:38 SQL> 
10:14:38 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
10:14:38 SQL> --
10:14:38 SQL> -- DROP	TABLE svmc_settings ;
10:14:38 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
10:14:38 SQL> -- DELETE svmc_settings;
10:14:38 SQL> 
10:14:38 SQL> -- The default classification algorithm is Naive Bayes. So override
10:14:38 SQL> -- this choice to SVM using a settings table.
10:14:38 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
10:14:38 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
10:14:38 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
10:14:38 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
10:14:38 SQL> -- models.
10:14:38 SQL> --
10:14:38 SQL> 
10:14:38 SQL> -- Do this once and then comment it out.
10:14:38 SQL> -- That makes script go faster.
10:14:38 SQL> -- BEGIN
10:14:38 SQL> -- -- Populate settings table
10:14:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:14:38 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
10:14:38 SQL> --
10:14:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:14:38 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
10:14:38 SQL> --
10:14:38 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:14:38 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
10:14:38 SQL> --   COMMIT;
10:14:38 SQL> -- END;
10:14:38 SQL> -- /
10:14:38 SQL> 
10:14:38 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
10:14:38 SQL> 
10:14:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
10:14:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:14:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:14:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
10:14:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:14:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:14:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
10:14:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:14:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:14:38 SQL> 
10:14:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
10:14:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:14:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
10:14:39 SQL> 
10:14:39 SQL> --------------------------------
10:14:39 SQL> -- PREPARE BUILD (TRAINING) DATA
10:14:39 SQL> --
10:14:39 SQL> 
10:14:39 SQL> -- 1. Missing Value treatment for all Predictors and
10:14:39 SQL> -- 2. Outlier Treatment and
10:14:39 SQL> -- 3. Normalization are performed below.
10:14:39 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
10:14:39 SQL> --    normalized here.
10:14:39 SQL> 
10:14:39 SQL> BEGIN
10:14:39   2  	-- Perform missing value treatment for all predictors
10:14:39   3  	-- create miss tables
10:14:39   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
10:14:39   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
10:14:39   6  
10:14:39   7  	-- populate miss tables
10:14:39   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
10:14:39   9  	  miss_table_name => 'svmc_miss_num',
10:14:39  10  	  data_table_name => '&bldtable',
10:14:39  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:14:39  12  
10:14:39  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
10:14:39  14  	  miss_table_name => 'svmc_miss_cat',
10:14:39  15  	  data_table_name => '&bldtable',
10:14:39  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:14:39  17  
10:14:39  18  	-- xform input data to replace missing values
10:14:39  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
10:14:39  20  	  miss_table_name => 'svmc_miss_num',
10:14:39  21  	  data_table_name => '&bldtable',
10:14:39  22  	  xform_view_name => 'xformed_build_miss_num');
10:14:39  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
10:14:39  24  	  miss_table_name => 'svmc_miss_cat',
10:14:39  25  	  data_table_name => '&bldtable',
10:14:39  26  	  xform_view_name => 'xformed_build_miss_cat');
10:14:39  27  
10:14:39  28  	-- Perform outlier treatment.
10:14:39  29  	-- create clip table
10:14:39  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
10:14:39  31  
10:14:39  32  	-- populate clip table
10:14:39  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
10:14:39  34  	  clip_table_name => 'svmc_clip',
10:14:39  35  	  data_table_name => '&bldtable',
10:14:39  36  	  tail_frac	  => 0.025,
10:14:39  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:14:39  38  
10:14:39  39  	-- xform input data to winsorized data
10:14:39  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
10:14:39  41  	  clip_table_name => 'svmc_clip',
10:14:39  42  	  data_table_name => '&bldtable',
10:14:39  43  	  xform_view_name => 'svmc_winsor');
10:14:39  44  
10:14:39  45  	-- create normalization table
10:14:39  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
10:14:39  47  
10:14:39  48  	-- populate normalization table based on winsorized data
10:14:39  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
10:14:39  50  	  norm_table_name => 'svmc_norm',
10:14:39  51  	  data_table_name => 'svmc_winsor',
10:14:39  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:14:39  53  
10:14:39  54  	-- normalize the original data
10:14:39  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
10:14:39  56  	  norm_table_name => 'svmc_norm',
10:14:39  57  	  data_table_name => '&bldtable',
10:14:39  58  	  xform_view_name => 'svmc_build_prep');
10:14:39  59  END;
10:14:39  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.71
10:14:57 SQL> 
10:14:57 SQL> ---------------------
10:14:57 SQL> -- CREATE A NEW MODEL
10:14:57 SQL> --
10:14:57 SQL> -- Cleanup old model with the same name for repeat runs
10:14:57 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
10:14:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:14:57   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.12
10:14:58 SQL> 
10:14:58 SQL> -- Build a new SVM Model
10:14:58 SQL> BEGIN
10:14:58   2  	DBMS_DATA_MINING.CREATE_MODEL(
10:14:58   3  	  model_name	      => '&model_name',
10:14:58   4  	  mining_function     => dbms_data_mining.classification,
10:14:58   5  	  data_table_name     => 'svmc_build_prep',
10:14:58   6  	  case_id_column_name => '&case_id',
10:14:58   7  	  target_column_name  => '&target',
10:14:58   8  	  settings_table_name => 'svmc_settings');
10:14:58   9  END;
10:14:58  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.61
10:15:26 SQL> 
10:15:26 SQL> -----------------------------------------------------------------------
10:15:26 SQL> --			       APPLY/score THE MODEL
10:15:26 SQL> -----------------------------------------------------------------------
10:15:26 SQL> 
10:15:26 SQL> -- Cleanup old scoring data preparation objects for repeat runs
10:15:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
10:15:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:15:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:15:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
10:15:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:15:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:15:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
10:15:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:15:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
10:15:26 SQL> -----------------------
10:15:26 SQL> -- PREPARE SCORING DATA
10:15:26 SQL> --
10:15:26 SQL> -- If the data for model creation has been prepared, then the data
10:15:26 SQL> -- to be scored using the model must be prepared in the same manner
10:15:26 SQL> -- in order to obtain meaningful results.
10:15:26 SQL> --
10:15:26 SQL> -- 1. Missing Value treatment for all Predictors and
10:15:26 SQL> -- 2. Normalization
10:15:26 SQL> -- No outlier treatment will be performed during test and apply. The
10:15:26 SQL> -- normalization step is sufficient, since the normalization parameters
10:15:26 SQL> -- already capture the effects of outlier treatment done with build data.
10:15:26 SQL> --
10:15:26 SQL> BEGIN
10:15:26   2  	-- Xform Test data to replace missing values
10:15:26   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
10:15:26   4  	  miss_table_name => 'svmc_miss_num',
10:15:26   5  	  data_table_name => '&scoretable',
10:15:26   6  	  xform_view_name => 'xformed_apply_miss_num');
10:15:26   7  
10:15:26   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
10:15:26   9  	  miss_table_name => 'svmc_miss_cat',
10:15:26  10  	  data_table_name => '&scoretable',
10:15:26  11  	  xform_view_name => 'xformed_apply_miss_cat');
10:15:26  12  
10:15:26  13  	-- Normalize the data to be scored
10:15:26  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
10:15:26  15  	  norm_table_name => 'svmc_norm',
10:15:26  16  	  data_table_name => '&scoretable',
10:15:26  17  	  xform_view_name => 'svmc_apply_prep');
10:15:26  18  END;
10:15:26  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.31
10:15:27 SQL> 
10:15:27 SQL> -- Use same model_name used in score.sql
10:15:27 SQL> DEFINE model_name = 'forex15'
10:15:27 SQL> 
10:15:27 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
10:15:27 SQL> 
10:15:27 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
10:15:28 SQL> 
10:15:28 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
10:15:28   2  SELECT
10:15:28   3  prdate
10:15:28   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
10:15:28   5  ,sysdate
10:15:28   6  ,SUBSTR(prdate,1,3)pair
10:15:28   7  ,SUBSTR(prdate,4,19)ydate
10:15:28   8  FROM svmc_apply_prep
10:15:28   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
10:15:28 SQL> @aud_score1day.sql  2011-01-07 10:00:00
10:15:28 SQL> --
10:15:28 SQL> -- aud_score1day.sql
10:15:28 SQL> --
10:15:28 SQL> 
10:15:28 SQL> CREATE OR REPLACE VIEW sme AS
10:15:28   2  SELECT
10:15:28   3  'aud'||m.ydate prdate
10:15:28   4  ,NULL gatt
10:15:28   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
10:15:28   6  ,eur_g00
10:15:28   7  ,eur_g01
10:15:28   8  ,eur_g02
10:15:28   9  ,eur_g03
10:15:28  10  ,eur_g04
10:15:28  11  ,eur_g05
10:15:28  12  ,eur_g06
10:15:28  13  ,eur_g07
10:15:28  14  ,eur_g08
10:15:28  15  ,eur_g09
10:15:28  16  ,eur_g10
10:15:28  17  ,eur_g11
10:15:28  18  ,eur_g12
10:15:28  19  ,eur_g13
10:15:28  20  ,eur_g14
10:15:28  21  ,eur_g15
10:15:28  22  ,eur_g16
10:15:28  23  ,eur_g17
10:15:28  24  ,eur_g18
10:15:28  25  ,eur_g19
10:15:28  26  ,eur_g20
10:15:28  27  ,eur_g21
10:15:28  28  ,eur_g22
10:15:28  29  ,eur_g23
10:15:28  30  ,eur_g24
10:15:28  31  ,eur_g25
10:15:28  32  ,eur_g26
10:15:28  33  ,eur_g27
10:15:28  34  ,eur_g28
10:15:28  35  ,eur_g29
10:15:28  36  ,eur_g30
10:15:28  37  ,eur_g31
10:15:28  38  ,eur_g32
10:15:28  39  ,eur_g33
10:15:28  40  ,eur_g34
10:15:28  41  ,eur_g35
10:15:28  42  ,eur_g36
10:15:28  43  ,eur_g37
10:15:28  44  ,eur_g38
10:15:28  45  ,eur_g39
10:15:28  46  ,eur_g40
10:15:28  47  ,eur_g41
10:15:28  48  ,aud_g00
10:15:28  49  ,aud_g01
10:15:28  50  ,aud_g02
10:15:28  51  ,aud_g03
10:15:28  52  ,aud_g04
10:15:28  53  ,aud_g05
10:15:28  54  ,aud_g06
10:15:28  55  ,aud_g07
10:15:28  56  ,aud_g08
10:15:28  57  ,aud_g09
10:15:28  58  ,aud_g10
10:15:28  59  ,aud_g11
10:15:28  60  ,aud_g12
10:15:28  61  ,aud_g13
10:15:28  62  ,aud_g14
10:15:28  63  ,aud_g15
10:15:28  64  ,aud_g16
10:15:28  65  ,aud_g17
10:15:28  66  ,aud_g18
10:15:28  67  ,aud_g19
10:15:28  68  ,aud_g20
10:15:28  69  ,aud_g21
10:15:28  70  ,aud_g22
10:15:28  71  ,aud_g23
10:15:28  72  ,aud_g24
10:15:28  73  ,aud_g25
10:15:28  74  ,aud_g26
10:15:28  75  ,aud_g27
10:15:28  76  ,aud_g28
10:15:28  77  ,aud_g29
10:15:28  78  ,aud_g30
10:15:28  79  ,aud_g31
10:15:28  80  ,aud_g32
10:15:28  81  ,aud_g33
10:15:28  82  ,aud_g34
10:15:28  83  ,aud_g35
10:15:28  84  ,aud_g36
10:15:28  85  ,aud_g37
10:15:28  86  ,aud_g38
10:15:28  87  ,aud_g39
10:15:28  88  ,aud_g40
10:15:28  89  ,aud_g41
10:15:28  90  ,gbp_g00
10:15:28  91  ,gbp_g01
10:15:28  92  ,gbp_g02
10:15:28  93  ,gbp_g03
10:15:28  94  ,gbp_g04
10:15:28  95  ,gbp_g05
10:15:28  96  ,gbp_g06
10:15:28  97  ,gbp_g07
10:15:28  98  ,gbp_g08
10:15:28  99  ,gbp_g09
10:15:28 100  ,gbp_g10
10:15:28 101  ,gbp_g11
10:15:28 102  ,gbp_g12
10:15:28 103  ,gbp_g13
10:15:28 104  ,gbp_g14
10:15:28 105  ,gbp_g15
10:15:28 106  ,gbp_g16
10:15:28 107  ,gbp_g17
10:15:28 108  ,gbp_g18
10:15:28 109  ,gbp_g19
10:15:28 110  ,gbp_g20
10:15:28 111  ,gbp_g21
10:15:28 112  ,gbp_g22
10:15:28 113  ,gbp_g23
10:15:28 114  ,gbp_g24
10:15:28 115  ,gbp_g25
10:15:28 116  ,gbp_g26
10:15:28 117  ,gbp_g27
10:15:28 118  ,gbp_g28
10:15:28 119  ,gbp_g29
10:15:28 120  ,gbp_g30
10:15:28 121  ,gbp_g31
10:15:28 122  ,gbp_g32
10:15:28 123  ,gbp_g33
10:15:28 124  ,gbp_g34
10:15:28 125  ,gbp_g35
10:15:28 126  ,gbp_g36
10:15:28 127  ,gbp_g37
10:15:28 128  ,gbp_g38
10:15:28 129  ,gbp_g39
10:15:28 130  ,gbp_g40
10:15:28 131  ,gbp_g41
10:15:28 132  ,jpy_g00
10:15:28 133  ,jpy_g01
10:15:28 134  ,jpy_g02
10:15:28 135  ,jpy_g03
10:15:28 136  ,jpy_g04
10:15:28 137  ,jpy_g05
10:15:28 138  ,jpy_g06
10:15:28 139  ,jpy_g07
10:15:28 140  ,jpy_g08
10:15:28 141  ,jpy_g09
10:15:28 142  ,jpy_g10
10:15:28 143  ,jpy_g11
10:15:28 144  ,jpy_g12
10:15:28 145  ,jpy_g13
10:15:28 146  ,jpy_g14
10:15:28 147  ,jpy_g15
10:15:28 148  ,jpy_g16
10:15:28 149  ,jpy_g17
10:15:28 150  ,jpy_g18
10:15:28 151  ,jpy_g19
10:15:28 152  ,jpy_g20
10:15:28 153  ,jpy_g21
10:15:28 154  ,jpy_g22
10:15:28 155  ,jpy_g23
10:15:28 156  ,jpy_g24
10:15:28 157  ,jpy_g25
10:15:28 158  ,jpy_g26
10:15:28 159  ,jpy_g27
10:15:28 160  ,jpy_g28
10:15:28 161  ,jpy_g29
10:15:28 162  ,jpy_g30
10:15:28 163  ,jpy_g31
10:15:28 164  ,jpy_g32
10:15:28 165  ,jpy_g33
10:15:28 166  ,jpy_g34
10:15:28 167  ,jpy_g35
10:15:28 168  ,jpy_g36
10:15:28 169  ,jpy_g37
10:15:28 170  ,jpy_g38
10:15:28 171  ,jpy_g39
10:15:28 172  ,jpy_g40
10:15:28 173  ,jpy_g41
10:15:28 174  ,cad_g00
10:15:28 175  ,cad_g01
10:15:28 176  ,cad_g02
10:15:28 177  ,cad_g03
10:15:28 178  ,cad_g04
10:15:28 179  ,cad_g05
10:15:28 180  ,cad_g06
10:15:28 181  ,cad_g07
10:15:28 182  ,cad_g08
10:15:28 183  ,cad_g09
10:15:28 184  ,cad_g10
10:15:28 185  ,cad_g11
10:15:28 186  ,cad_g12
10:15:28 187  ,cad_g13
10:15:28 188  ,cad_g14
10:15:28 189  ,cad_g15
10:15:28 190  ,cad_g16
10:15:28 191  ,cad_g17
10:15:28 192  ,cad_g18
10:15:28 193  ,cad_g19
10:15:28 194  ,cad_g20
10:15:28 195  ,cad_g21
10:15:28 196  ,cad_g22
10:15:28 197  ,cad_g23
10:15:28 198  ,cad_g24
10:15:28 199  ,cad_g25
10:15:28 200  ,cad_g26
10:15:28 201  ,cad_g27
10:15:28 202  ,cad_g28
10:15:28 203  ,cad_g29
10:15:28 204  ,cad_g30
10:15:28 205  ,cad_g31
10:15:28 206  ,cad_g32
10:15:28 207  ,cad_g33
10:15:28 208  ,cad_g34
10:15:28 209  ,cad_g35
10:15:28 210  ,cad_g36
10:15:28 211  ,cad_g37
10:15:28 212  ,cad_g38
10:15:28 213  ,cad_g39
10:15:28 214  ,cad_g40
10:15:28 215  ,cad_g41
10:15:28 216  ,chf_g00
10:15:28 217  ,chf_g01
10:15:28 218  ,chf_g02
10:15:28 219  ,chf_g03
10:15:28 220  ,chf_g04
10:15:28 221  ,chf_g05
10:15:28 222  ,chf_g06
10:15:28 223  ,chf_g07
10:15:28 224  ,chf_g08
10:15:28 225  ,chf_g09
10:15:28 226  ,chf_g10
10:15:28 227  ,chf_g11
10:15:28 228  ,chf_g12
10:15:28 229  ,chf_g13
10:15:28 230  ,chf_g14
10:15:28 231  ,chf_g15
10:15:28 232  ,chf_g16
10:15:28 233  ,chf_g17
10:15:28 234  ,chf_g18
10:15:28 235  ,chf_g19
10:15:28 236  ,chf_g20
10:15:28 237  ,chf_g21
10:15:28 238  ,chf_g22
10:15:28 239  ,chf_g23
10:15:28 240  ,chf_g24
10:15:28 241  ,chf_g25
10:15:28 242  ,chf_g26
10:15:28 243  ,chf_g27
10:15:28 244  ,chf_g28
10:15:28 245  ,chf_g29
10:15:28 246  ,chf_g30
10:15:28 247  ,chf_g31
10:15:28 248  ,chf_g32
10:15:28 249  ,chf_g33
10:15:28 250  ,chf_g34
10:15:28 251  ,chf_g35
10:15:28 252  ,chf_g36
10:15:28 253  ,chf_g37
10:15:28 254  ,chf_g38
10:15:28 255  ,chf_g39
10:15:28 256  ,chf_g40
10:15:28 257  ,chf_g41
10:15:28 258  FROM aud_ms6 m
10:15:28 259  WHERE m.ydate = '&1'||' '||'&2'
10:15:28 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'10:00:00'

View created.

Elapsed: 00:00:00.28
10:15:28 SQL> 
10:15:28 SQL> -- rpt
10:15:28 SQL> -- We should see just 1 row:
10:15:28 SQL> 
10:15:28 SQL> SELECT COUNT(prdate) FROM sme
10:15:28   2  
10:15:28 SQL> -- Build the model:
10:15:28 SQL> CREATE OR REPLACE VIEW bme AS
10:15:28   2  SELECT
10:15:28   3  'aud'||m.ydate prdate
10:15:28   4  ,gatt
10:15:28   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
10:15:28   6  ,eur_g00
10:15:28   7  ,eur_g01
10:15:28   8  ,eur_g02
10:15:28   9  ,eur_g03
10:15:28  10  ,eur_g04
10:15:28  11  ,eur_g05
10:15:28  12  ,eur_g06
10:15:28  13  ,eur_g07
10:15:28  14  ,eur_g08
10:15:28  15  ,eur_g09
10:15:28  16  ,eur_g10
10:15:28  17  ,eur_g11
10:15:28  18  ,eur_g12
10:15:28  19  ,eur_g13
10:15:28  20  ,eur_g14
10:15:28  21  ,eur_g15
10:15:28  22  ,eur_g16
10:15:28  23  ,eur_g17
10:15:28  24  ,eur_g18
10:15:28  25  ,eur_g19
10:15:28  26  ,eur_g20
10:15:28  27  ,eur_g21
10:15:28  28  ,eur_g22
10:15:28  29  ,eur_g23
10:15:28  30  ,eur_g24
10:15:28  31  ,eur_g25
10:15:28  32  ,eur_g26
10:15:28  33  ,eur_g27
10:15:28  34  ,eur_g28
10:15:28  35  ,eur_g29
10:15:28  36  ,eur_g30
10:15:28  37  ,eur_g31
10:15:28  38  ,eur_g32
10:15:28  39  ,eur_g33
10:15:28  40  ,eur_g34
10:15:28  41  ,eur_g35
10:15:28  42  ,eur_g36
10:15:28  43  ,eur_g37
10:15:28  44  ,eur_g38
10:15:28  45  ,eur_g39
10:15:28  46  ,eur_g40
10:15:28  47  ,eur_g41
10:15:28  48  ,aud_g00
10:15:28  49  ,aud_g01
10:15:28  50  ,aud_g02
10:15:28  51  ,aud_g03
10:15:28  52  ,aud_g04
10:15:28  53  ,aud_g05
10:15:28  54  ,aud_g06
10:15:28  55  ,aud_g07
10:15:28  56  ,aud_g08
10:15:28  57  ,aud_g09
10:15:28  58  ,aud_g10
10:15:28  59  ,aud_g11
10:15:28  60  ,aud_g12
10:15:28  61  ,aud_g13
10:15:28  62  ,aud_g14
10:15:28  63  ,aud_g15
10:15:28  64  ,aud_g16
10:15:28  65  ,aud_g17
10:15:28  66  ,aud_g18
10:15:28  67  ,aud_g19
10:15:28  68  ,aud_g20
10:15:28  69  ,aud_g21
10:15:28  70  ,aud_g22
10:15:28  71  ,aud_g23
10:15:28  72  ,aud_g24
10:15:28  73  ,aud_g25
10:15:28  74  ,aud_g26
10:15:28  75  ,aud_g27
10:15:28  76  ,aud_g28
10:15:28  77  ,aud_g29
10:15:28  78  ,aud_g30
10:15:28  79  ,aud_g31
10:15:28  80  ,aud_g32
10:15:28  81  ,aud_g33
10:15:28  82  ,aud_g34
10:15:28  83  ,aud_g35
10:15:28  84  ,aud_g36
10:15:28  85  ,aud_g37
10:15:28  86  ,aud_g38
10:15:28  87  ,aud_g39
10:15:28  88  ,aud_g40
10:15:28  89  ,aud_g41
10:15:28  90  ,gbp_g00
10:15:28  91  ,gbp_g01
10:15:28  92  ,gbp_g02
10:15:28  93  ,gbp_g03
10:15:28  94  ,gbp_g04
10:15:28  95  ,gbp_g05
10:15:28  96  ,gbp_g06
10:15:28  97  ,gbp_g07
10:15:28  98  ,gbp_g08
10:15:28  99  ,gbp_g09
10:15:28 100  ,gbp_g10
10:15:28 101  ,gbp_g11
10:15:28 102  ,gbp_g12
10:15:28 103  ,gbp_g13
10:15:28 104  ,gbp_g14
10:15:28 105  ,gbp_g15
10:15:28 106  ,gbp_g16
10:15:28 107  ,gbp_g17
10:15:28 108  ,gbp_g18
10:15:28 109  ,gbp_g19
10:15:28 110  ,gbp_g20
10:15:28 111  ,gbp_g21
10:15:28 112  ,gbp_g22
10:15:28 113  ,gbp_g23
10:15:28 114  ,gbp_g24
10:15:28 115  ,gbp_g25
10:15:28 116  ,gbp_g26
10:15:28 117  ,gbp_g27
10:15:28 118  ,gbp_g28
10:15:28 119  ,gbp_g29
10:15:28 120  ,gbp_g30
10:15:28 121  ,gbp_g31
10:15:28 122  ,gbp_g32
10:15:28 123  ,gbp_g33
10:15:28 124  ,gbp_g34
10:15:28 125  ,gbp_g35
10:15:28 126  ,gbp_g36
10:15:28 127  ,gbp_g37
10:15:28 128  ,gbp_g38
10:15:28 129  ,gbp_g39
10:15:28 130  ,gbp_g40
10:15:28 131  ,gbp_g41
10:15:28 132  ,jpy_g00
10:15:28 133  ,jpy_g01
10:15:28 134  ,jpy_g02
10:15:28 135  ,jpy_g03
10:15:28 136  ,jpy_g04
10:15:28 137  ,jpy_g05
10:15:28 138  ,jpy_g06
10:15:28 139  ,jpy_g07
10:15:28 140  ,jpy_g08
10:15:28 141  ,jpy_g09
10:15:28 142  ,jpy_g10
10:15:28 143  ,jpy_g11
10:15:28 144  ,jpy_g12
10:15:28 145  ,jpy_g13
10:15:28 146  ,jpy_g14
10:15:28 147  ,jpy_g15
10:15:28 148  ,jpy_g16
10:15:28 149  ,jpy_g17
10:15:28 150  ,jpy_g18
10:15:28 151  ,jpy_g19
10:15:28 152  ,jpy_g20
10:15:28 153  ,jpy_g21
10:15:28 154  ,jpy_g22
10:15:28 155  ,jpy_g23
10:15:28 156  ,jpy_g24
10:15:28 157  ,jpy_g25
10:15:28 158  ,jpy_g26
10:15:28 159  ,jpy_g27
10:15:28 160  ,jpy_g28
10:15:28 161  ,jpy_g29
10:15:28 162  ,jpy_g30
10:15:28 163  ,jpy_g31
10:15:28 164  ,jpy_g32
10:15:28 165  ,jpy_g33
10:15:28 166  ,jpy_g34
10:15:28 167  ,jpy_g35
10:15:28 168  ,jpy_g36
10:15:28 169  ,jpy_g37
10:15:28 170  ,jpy_g38
10:15:28 171  ,jpy_g39
10:15:28 172  ,jpy_g40
10:15:28 173  ,jpy_g41
10:15:28 174  ,cad_g00
10:15:28 175  ,cad_g01
10:15:28 176  ,cad_g02
10:15:28 177  ,cad_g03
10:15:28 178  ,cad_g04
10:15:28 179  ,cad_g05
10:15:28 180  ,cad_g06
10:15:28 181  ,cad_g07
10:15:28 182  ,cad_g08
10:15:28 183  ,cad_g09
10:15:28 184  ,cad_g10
10:15:28 185  ,cad_g11
10:15:28 186  ,cad_g12
10:15:28 187  ,cad_g13
10:15:28 188  ,cad_g14
10:15:28 189  ,cad_g15
10:15:28 190  ,cad_g16
10:15:28 191  ,cad_g17
10:15:28 192  ,cad_g18
10:15:28 193  ,cad_g19
10:15:28 194  ,cad_g20
10:15:28 195  ,cad_g21
10:15:28 196  ,cad_g22
10:15:28 197  ,cad_g23
10:15:28 198  ,cad_g24
10:15:28 199  ,cad_g25
10:15:28 200  ,cad_g26
10:15:28 201  ,cad_g27
10:15:28 202  ,cad_g28
10:15:28 203  ,cad_g29
10:15:28 204  ,cad_g30
10:15:28 205  ,cad_g31
10:15:28 206  ,cad_g32
10:15:28 207  ,cad_g33
10:15:28 208  ,cad_g34
10:15:28 209  ,cad_g35
10:15:28 210  ,cad_g36
10:15:28 211  ,cad_g37
10:15:28 212  ,cad_g38
10:15:28 213  ,cad_g39
10:15:28 214  ,cad_g40
10:15:28 215  ,cad_g41
10:15:28 216  ,chf_g00
10:15:28 217  ,chf_g01
10:15:28 218  ,chf_g02
10:15:28 219  ,chf_g03
10:15:28 220  ,chf_g04
10:15:28 221  ,chf_g05
10:15:28 222  ,chf_g06
10:15:28 223  ,chf_g07
10:15:28 224  ,chf_g08
10:15:28 225  ,chf_g09
10:15:28 226  ,chf_g10
10:15:28 227  ,chf_g11
10:15:28 228  ,chf_g12
10:15:28 229  ,chf_g13
10:15:28 230  ,chf_g14
10:15:28 231  ,chf_g15
10:15:28 232  ,chf_g16
10:15:28 233  ,chf_g17
10:15:28 234  ,chf_g18
10:15:28 235  ,chf_g19
10:15:28 236  ,chf_g20
10:15:28 237  ,chf_g21
10:15:28 238  ,chf_g22
10:15:28 239  ,chf_g23
10:15:28 240  ,chf_g24
10:15:28 241  ,chf_g25
10:15:28 242  ,chf_g26
10:15:28 243  ,chf_g27
10:15:28 244  ,chf_g28
10:15:28 245  ,chf_g29
10:15:28 246  ,chf_g30
10:15:28 247  ,chf_g31
10:15:28 248  ,chf_g32
10:15:28 249  ,chf_g33
10:15:28 250  ,chf_g34
10:15:28 251  ,chf_g35
10:15:28 252  ,chf_g36
10:15:28 253  ,chf_g37
10:15:28 254  ,chf_g38
10:15:28 255  ,chf_g39
10:15:28 256  ,chf_g40
10:15:28 257  ,chf_g41
10:15:28 258  FROM aud_ms6 m
10:15:28 259  WHERE gatt IN('nup','up')
10:15:28 260  AND 1+m.ydate < '&1'||' '||'&2'
10:15:28 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'10:00:00'

View created.

Elapsed: 00:00:00.11
10:15:28 SQL> 
10:15:28 SQL> -- rpt
10:15:28 SQL> 
10:15:28 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
10:15:28   2  
10:15:28 SQL> SELECT MAX(prdate) FROM bme
10:15:28   2  
10:15:28 SQL> -- Now build model from bme and score sme
10:15:28 SQL> @score1.sql
10:15:28 SQL> -- score1.sql
10:15:28 SQL> 
10:15:28 SQL> -- Does the 1st SVM score
10:15:28 SQL> 
10:15:28 SQL> -- Fill up svmc_apply_prep
10:15:28 SQL> @score.sql
10:15:28 SQL> --
10:15:28 SQL> -- score.sql
10:15:28 SQL> --
10:15:28 SQL> 
10:15:28 SQL> -- usage: score.sql
10:15:28 SQL> 
10:15:28 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
10:15:28 SQL> 
10:15:28 SQL> DEFINE target	= 'gatt'
10:15:28 SQL> DEFINE model_name = 'forex15'
10:15:28 SQL> DEFINE bldtable	= 'bme'
10:15:28 SQL> DEFINE scoretable = 'sme'
10:15:28 SQL> DEFINE case_id	= 'prdate'
10:15:28 SQL> 
10:15:28 SQL> -- Define a variable to help me exclude some columns from some data mining calls
10:15:28 SQL> DEFINE exclude1 = "'&target','&case_id'"
10:15:28 SQL> 
10:15:28 SQL> -- Builds an SVM model using pl/sql.
10:15:28 SQL> 
10:15:28 SQL> -----------------------------------------------------------------------
10:15:28 SQL> --			    BUILD THE MODEL
10:15:28 SQL> -----------------------------------------------------------------------
10:15:28 SQL> 
10:15:28 SQL> -- Cleanup old build data preparation objects for repeat runs
10:15:28 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
10:15:28 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
10:15:28 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
10:15:28 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
10:15:28 SQL> 
10:15:28 SQL> 
10:15:28 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
10:15:28 SQL> --
10:15:28 SQL> -- DROP	TABLE svmc_settings ;
10:15:28 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
10:15:28 SQL> -- DELETE svmc_settings;
10:15:28 SQL> 
10:15:28 SQL> -- The default classification algorithm is Naive Bayes. So override
10:15:28 SQL> -- this choice to SVM using a settings table.
10:15:28 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
10:15:28 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
10:15:28 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
10:15:28 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
10:15:28 SQL> -- models.
10:15:28 SQL> --
10:15:28 SQL> 
10:15:28 SQL> -- Do this once and then comment it out.
10:15:28 SQL> -- That makes script go faster.
10:15:28 SQL> -- BEGIN
10:15:28 SQL> -- -- Populate settings table
10:15:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:15:28 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
10:15:28 SQL> --
10:15:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:15:28 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
10:15:28 SQL> --
10:15:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:15:28 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
10:15:28 SQL> --   COMMIT;
10:15:28 SQL> -- END;
10:15:28 SQL> -- /
10:15:28 SQL> 
10:15:28 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
10:15:28 SQL> 
10:15:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
10:15:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:15:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
10:15:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
10:15:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:15:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:15:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
10:15:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:15:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:15:28 SQL> 
10:15:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
10:15:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:15:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:15:28 SQL> 
10:15:28 SQL> --------------------------------
10:15:28 SQL> -- PREPARE BUILD (TRAINING) DATA
10:15:28 SQL> --
10:15:28 SQL> 
10:15:28 SQL> -- 1. Missing Value treatment for all Predictors and
10:15:28 SQL> -- 2. Outlier Treatment and
10:15:28 SQL> -- 3. Normalization are performed below.
10:15:28 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
10:15:28 SQL> --    normalized here.
10:15:28 SQL> 
10:15:28 SQL> BEGIN
10:15:28   2  	-- Perform missing value treatment for all predictors
10:15:28   3  	-- create miss tables
10:15:28   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
10:15:28   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
10:15:28   6  
10:15:28   7  	-- populate miss tables
10:15:28   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
10:15:28   9  	  miss_table_name => 'svmc_miss_num',
10:15:28  10  	  data_table_name => '&bldtable',
10:15:28  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:15:28  12  
10:15:28  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
10:15:28  14  	  miss_table_name => 'svmc_miss_cat',
10:15:28  15  	  data_table_name => '&bldtable',
10:15:28  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:15:28  17  
10:15:28  18  	-- xform input data to replace missing values
10:15:28  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
10:15:28  20  	  miss_table_name => 'svmc_miss_num',
10:15:28  21  	  data_table_name => '&bldtable',
10:15:28  22  	  xform_view_name => 'xformed_build_miss_num');
10:15:28  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
10:15:28  24  	  miss_table_name => 'svmc_miss_cat',
10:15:28  25  	  data_table_name => '&bldtable',
10:15:28  26  	  xform_view_name => 'xformed_build_miss_cat');
10:15:28  27  
10:15:28  28  	-- Perform outlier treatment.
10:15:28  29  	-- create clip table
10:15:28  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
10:15:28  31  
10:15:28  32  	-- populate clip table
10:15:28  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
10:15:28  34  	  clip_table_name => 'svmc_clip',
10:15:28  35  	  data_table_name => '&bldtable',
10:15:28  36  	  tail_frac	  => 0.025,
10:15:28  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:15:28  38  
10:15:28  39  	-- xform input data to winsorized data
10:15:28  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
10:15:28  41  	  clip_table_name => 'svmc_clip',
10:15:28  42  	  data_table_name => '&bldtable',
10:15:28  43  	  xform_view_name => 'svmc_winsor');
10:15:28  44  
10:15:28  45  	-- create normalization table
10:15:28  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
10:15:28  47  
10:15:28  48  	-- populate normalization table based on winsorized data
10:15:28  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
10:15:28  50  	  norm_table_name => 'svmc_norm',
10:15:28  51  	  data_table_name => 'svmc_winsor',
10:15:28  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:15:28  53  
10:15:28  54  	-- normalize the original data
10:15:28  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
10:15:28  56  	  norm_table_name => 'svmc_norm',
10:15:28  57  	  data_table_name => '&bldtable',
10:15:28  58  	  xform_view_name => 'svmc_build_prep');
10:15:28  59  END;
10:15:28  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.86
10:15:47 SQL> 
10:15:47 SQL> ---------------------
10:15:47 SQL> -- CREATE A NEW MODEL
10:15:47 SQL> --
10:15:47 SQL> -- Cleanup old model with the same name for repeat runs
10:15:47 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
10:15:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:15:47   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.06
10:15:48 SQL> 
10:15:48 SQL> -- Build a new SVM Model
10:15:48 SQL> BEGIN
10:15:48   2  	DBMS_DATA_MINING.CREATE_MODEL(
10:15:48   3  	  model_name	      => '&model_name',
10:15:48   4  	  mining_function     => dbms_data_mining.classification,
10:15:48   5  	  data_table_name     => 'svmc_build_prep',
10:15:48   6  	  case_id_column_name => '&case_id',
10:15:48   7  	  target_column_name  => '&target',
10:15:48   8  	  settings_table_name => 'svmc_settings');
10:15:48   9  END;
10:15:48  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:31.35
10:16:20 SQL> 
10:16:20 SQL> -----------------------------------------------------------------------
10:16:20 SQL> --			       APPLY/score THE MODEL
10:16:20 SQL> -----------------------------------------------------------------------
10:16:20 SQL> 
10:16:20 SQL> -- Cleanup old scoring data preparation objects for repeat runs
10:16:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
10:16:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:16:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
10:16:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
10:16:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:16:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:16:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
10:16:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:16:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:16:20 SQL> -----------------------
10:16:20 SQL> -- PREPARE SCORING DATA
10:16:20 SQL> --
10:16:20 SQL> -- If the data for model creation has been prepared, then the data
10:16:20 SQL> -- to be scored using the model must be prepared in the same manner
10:16:20 SQL> -- in order to obtain meaningful results.
10:16:20 SQL> --
10:16:20 SQL> -- 1. Missing Value treatment for all Predictors and
10:16:20 SQL> -- 2. Normalization
10:16:20 SQL> -- No outlier treatment will be performed during test and apply. The
10:16:20 SQL> -- normalization step is sufficient, since the normalization parameters
10:16:20 SQL> -- already capture the effects of outlier treatment done with build data.
10:16:20 SQL> --
10:16:20 SQL> BEGIN
10:16:20   2  	-- Xform Test data to replace missing values
10:16:20   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
10:16:20   4  	  miss_table_name => 'svmc_miss_num',
10:16:20   5  	  data_table_name => '&scoretable',
10:16:20   6  	  xform_view_name => 'xformed_apply_miss_num');
10:16:20   7  
10:16:20   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
10:16:20   9  	  miss_table_name => 'svmc_miss_cat',
10:16:20  10  	  data_table_name => '&scoretable',
10:16:20  11  	  xform_view_name => 'xformed_apply_miss_cat');
10:16:20  12  
10:16:20  13  	-- Normalize the data to be scored
10:16:20  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
10:16:20  15  	  norm_table_name => 'svmc_norm',
10:16:20  16  	  data_table_name => '&scoretable',
10:16:20  17  	  xform_view_name => 'svmc_apply_prep');
10:16:20  18  END;
10:16:20  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.30
10:16:21 SQL> 
10:16:21 SQL> -- Use same model_name used in score.sql
10:16:21 SQL> DEFINE model_name = 'forex15'
10:16:21 SQL> 
10:16:21 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
10:16:21 SQL> 
10:16:21 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
10:16:21 SQL> 
10:16:21 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
10:16:21   2  SELECT
10:16:21   3  prdate
10:16:21   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
10:16:21   5  ,sysdate
10:16:21   6  ,SUBSTR(prdate,1,3)pair
10:16:21   7  ,SUBSTR(prdate,4,19)ydate
10:16:21   8  FROM svmc_apply_prep
10:16:21   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.24
10:16:21 SQL> @aud_score1day_gattn.sql	2011-01-07 09:50:00
10:16:21 SQL> --
10:16:21 SQL> -- aud_score1day_gattn.sql
10:16:21 SQL> --
10:16:21 SQL> 
10:16:21 SQL> CREATE OR REPLACE VIEW sme AS
10:16:21   2  SELECT
10:16:21   3  'aud'||m.ydate prdate
10:16:21   4  ,NULL gattn
10:16:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
10:16:21   6  ,eur_g00
10:16:21   7  ,eur_g01
10:16:21   8  ,eur_g02
10:16:21   9  ,eur_g03
10:16:21  10  ,eur_g04
10:16:21  11  ,eur_g05
10:16:21  12  ,eur_g06
10:16:21  13  ,eur_g07
10:16:21  14  ,eur_g08
10:16:21  15  ,eur_g09
10:16:21  16  ,eur_g10
10:16:21  17  ,eur_g11
10:16:21  18  ,eur_g12
10:16:21  19  ,eur_g13
10:16:21  20  ,eur_g14
10:16:21  21  ,eur_g15
10:16:21  22  ,eur_g16
10:16:21  23  ,eur_g17
10:16:21  24  ,eur_g18
10:16:21  25  ,eur_g19
10:16:21  26  ,eur_g20
10:16:21  27  ,eur_g21
10:16:21  28  ,eur_g22
10:16:21  29  ,eur_g23
10:16:21  30  ,eur_g24
10:16:21  31  ,eur_g25
10:16:21  32  ,eur_g26
10:16:21  33  ,eur_g27
10:16:21  34  ,eur_g28
10:16:21  35  ,eur_g29
10:16:21  36  ,eur_g30
10:16:21  37  ,eur_g31
10:16:21  38  ,eur_g32
10:16:21  39  ,eur_g33
10:16:21  40  ,eur_g34
10:16:21  41  ,eur_g35
10:16:21  42  ,eur_g36
10:16:21  43  ,eur_g37
10:16:21  44  ,eur_g38
10:16:21  45  ,eur_g39
10:16:21  46  ,eur_g40
10:16:21  47  ,eur_g41
10:16:21  48  ,aud_g00
10:16:21  49  ,aud_g01
10:16:21  50  ,aud_g02
10:16:21  51  ,aud_g03
10:16:21  52  ,aud_g04
10:16:21  53  ,aud_g05
10:16:21  54  ,aud_g06
10:16:21  55  ,aud_g07
10:16:21  56  ,aud_g08
10:16:21  57  ,aud_g09
10:16:21  58  ,aud_g10
10:16:21  59  ,aud_g11
10:16:21  60  ,aud_g12
10:16:21  61  ,aud_g13
10:16:21  62  ,aud_g14
10:16:21  63  ,aud_g15
10:16:21  64  ,aud_g16
10:16:21  65  ,aud_g17
10:16:21  66  ,aud_g18
10:16:21  67  ,aud_g19
10:16:21  68  ,aud_g20
10:16:21  69  ,aud_g21
10:16:21  70  ,aud_g22
10:16:21  71  ,aud_g23
10:16:21  72  ,aud_g24
10:16:21  73  ,aud_g25
10:16:21  74  ,aud_g26
10:16:21  75  ,aud_g27
10:16:21  76  ,aud_g28
10:16:21  77  ,aud_g29
10:16:21  78  ,aud_g30
10:16:21  79  ,aud_g31
10:16:21  80  ,aud_g32
10:16:21  81  ,aud_g33
10:16:21  82  ,aud_g34
10:16:21  83  ,aud_g35
10:16:21  84  ,aud_g36
10:16:21  85  ,aud_g37
10:16:21  86  ,aud_g38
10:16:21  87  ,aud_g39
10:16:21  88  ,aud_g40
10:16:21  89  ,aud_g41
10:16:21  90  ,gbp_g00
10:16:21  91  ,gbp_g01
10:16:21  92  ,gbp_g02
10:16:21  93  ,gbp_g03
10:16:21  94  ,gbp_g04
10:16:21  95  ,gbp_g05
10:16:21  96  ,gbp_g06
10:16:21  97  ,gbp_g07
10:16:21  98  ,gbp_g08
10:16:21  99  ,gbp_g09
10:16:21 100  ,gbp_g10
10:16:21 101  ,gbp_g11
10:16:21 102  ,gbp_g12
10:16:21 103  ,gbp_g13
10:16:21 104  ,gbp_g14
10:16:21 105  ,gbp_g15
10:16:21 106  ,gbp_g16
10:16:21 107  ,gbp_g17
10:16:21 108  ,gbp_g18
10:16:21 109  ,gbp_g19
10:16:21 110  ,gbp_g20
10:16:21 111  ,gbp_g21
10:16:21 112  ,gbp_g22
10:16:21 113  ,gbp_g23
10:16:21 114  ,gbp_g24
10:16:21 115  ,gbp_g25
10:16:21 116  ,gbp_g26
10:16:21 117  ,gbp_g27
10:16:21 118  ,gbp_g28
10:16:21 119  ,gbp_g29
10:16:21 120  ,gbp_g30
10:16:21 121  ,gbp_g31
10:16:21 122  ,gbp_g32
10:16:21 123  ,gbp_g33
10:16:21 124  ,gbp_g34
10:16:21 125  ,gbp_g35
10:16:21 126  ,gbp_g36
10:16:21 127  ,gbp_g37
10:16:21 128  ,gbp_g38
10:16:21 129  ,gbp_g39
10:16:21 130  ,gbp_g40
10:16:21 131  ,gbp_g41
10:16:21 132  ,jpy_g00
10:16:21 133  ,jpy_g01
10:16:21 134  ,jpy_g02
10:16:21 135  ,jpy_g03
10:16:21 136  ,jpy_g04
10:16:21 137  ,jpy_g05
10:16:21 138  ,jpy_g06
10:16:21 139  ,jpy_g07
10:16:21 140  ,jpy_g08
10:16:21 141  ,jpy_g09
10:16:21 142  ,jpy_g10
10:16:21 143  ,jpy_g11
10:16:21 144  ,jpy_g12
10:16:21 145  ,jpy_g13
10:16:21 146  ,jpy_g14
10:16:21 147  ,jpy_g15
10:16:21 148  ,jpy_g16
10:16:21 149  ,jpy_g17
10:16:21 150  ,jpy_g18
10:16:21 151  ,jpy_g19
10:16:21 152  ,jpy_g20
10:16:21 153  ,jpy_g21
10:16:21 154  ,jpy_g22
10:16:21 155  ,jpy_g23
10:16:21 156  ,jpy_g24
10:16:21 157  ,jpy_g25
10:16:21 158  ,jpy_g26
10:16:21 159  ,jpy_g27
10:16:21 160  ,jpy_g28
10:16:21 161  ,jpy_g29
10:16:21 162  ,jpy_g30
10:16:21 163  ,jpy_g31
10:16:21 164  ,jpy_g32
10:16:21 165  ,jpy_g33
10:16:21 166  ,jpy_g34
10:16:21 167  ,jpy_g35
10:16:21 168  ,jpy_g36
10:16:21 169  ,jpy_g37
10:16:21 170  ,jpy_g38
10:16:21 171  ,jpy_g39
10:16:21 172  ,jpy_g40
10:16:21 173  ,jpy_g41
10:16:21 174  ,cad_g00
10:16:21 175  ,cad_g01
10:16:21 176  ,cad_g02
10:16:21 177  ,cad_g03
10:16:21 178  ,cad_g04
10:16:21 179  ,cad_g05
10:16:21 180  ,cad_g06
10:16:21 181  ,cad_g07
10:16:21 182  ,cad_g08
10:16:21 183  ,cad_g09
10:16:21 184  ,cad_g10
10:16:21 185  ,cad_g11
10:16:21 186  ,cad_g12
10:16:21 187  ,cad_g13
10:16:21 188  ,cad_g14
10:16:21 189  ,cad_g15
10:16:21 190  ,cad_g16
10:16:21 191  ,cad_g17
10:16:21 192  ,cad_g18
10:16:21 193  ,cad_g19
10:16:21 194  ,cad_g20
10:16:21 195  ,cad_g21
10:16:21 196  ,cad_g22
10:16:21 197  ,cad_g23
10:16:21 198  ,cad_g24
10:16:21 199  ,cad_g25
10:16:21 200  ,cad_g26
10:16:21 201  ,cad_g27
10:16:21 202  ,cad_g28
10:16:21 203  ,cad_g29
10:16:21 204  ,cad_g30
10:16:21 205  ,cad_g31
10:16:21 206  ,cad_g32
10:16:21 207  ,cad_g33
10:16:21 208  ,cad_g34
10:16:21 209  ,cad_g35
10:16:21 210  ,cad_g36
10:16:21 211  ,cad_g37
10:16:21 212  ,cad_g38
10:16:21 213  ,cad_g39
10:16:21 214  ,cad_g40
10:16:21 215  ,cad_g41
10:16:21 216  ,chf_g00
10:16:21 217  ,chf_g01
10:16:21 218  ,chf_g02
10:16:21 219  ,chf_g03
10:16:21 220  ,chf_g04
10:16:21 221  ,chf_g05
10:16:21 222  ,chf_g06
10:16:21 223  ,chf_g07
10:16:21 224  ,chf_g08
10:16:21 225  ,chf_g09
10:16:21 226  ,chf_g10
10:16:21 227  ,chf_g11
10:16:21 228  ,chf_g12
10:16:21 229  ,chf_g13
10:16:21 230  ,chf_g14
10:16:21 231  ,chf_g15
10:16:21 232  ,chf_g16
10:16:21 233  ,chf_g17
10:16:21 234  ,chf_g18
10:16:21 235  ,chf_g19
10:16:21 236  ,chf_g20
10:16:21 237  ,chf_g21
10:16:21 238  ,chf_g22
10:16:21 239  ,chf_g23
10:16:21 240  ,chf_g24
10:16:21 241  ,chf_g25
10:16:21 242  ,chf_g26
10:16:21 243  ,chf_g27
10:16:21 244  ,chf_g28
10:16:21 245  ,chf_g29
10:16:21 246  ,chf_g30
10:16:21 247  ,chf_g31
10:16:21 248  ,chf_g32
10:16:21 249  ,chf_g33
10:16:21 250  ,chf_g34
10:16:21 251  ,chf_g35
10:16:21 252  ,chf_g36
10:16:21 253  ,chf_g37
10:16:21 254  ,chf_g38
10:16:21 255  ,chf_g39
10:16:21 256  ,chf_g40
10:16:21 257  ,chf_g41
10:16:21 258  FROM aud_ms6 m
10:16:21 259  WHERE m.ydate = '&1'||' '||'&2'
10:16:21 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'09:50:00'

View created.

Elapsed: 00:00:00.13
10:16:22 SQL> 
10:16:22 SQL> -- rpt
10:16:22 SQL> -- We should see just 1 row:
10:16:22 SQL> 
10:16:22 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
10:16:22 SQL> 
10:16:22 SQL> -- Build the model:
10:16:22 SQL> CREATE OR REPLACE VIEW bme AS
10:16:22   2  SELECT
10:16:22   3  'aud'||m.ydate prdate
10:16:22   4  ,gattn
10:16:22   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
10:16:22   6  ,eur_g00
10:16:22   7  ,eur_g01
10:16:22   8  ,eur_g02
10:16:22   9  ,eur_g03
10:16:22  10  ,eur_g04
10:16:22  11  ,eur_g05
10:16:22  12  ,eur_g06
10:16:22  13  ,eur_g07
10:16:22  14  ,eur_g08
10:16:22  15  ,eur_g09
10:16:22  16  ,eur_g10
10:16:22  17  ,eur_g11
10:16:22  18  ,eur_g12
10:16:22  19  ,eur_g13
10:16:22  20  ,eur_g14
10:16:22  21  ,eur_g15
10:16:22  22  ,eur_g16
10:16:22  23  ,eur_g17
10:16:22  24  ,eur_g18
10:16:22  25  ,eur_g19
10:16:22  26  ,eur_g20
10:16:22  27  ,eur_g21
10:16:22  28  ,eur_g22
10:16:22  29  ,eur_g23
10:16:22  30  ,eur_g24
10:16:22  31  ,eur_g25
10:16:22  32  ,eur_g26
10:16:22  33  ,eur_g27
10:16:22  34  ,eur_g28
10:16:22  35  ,eur_g29
10:16:22  36  ,eur_g30
10:16:22  37  ,eur_g31
10:16:22  38  ,eur_g32
10:16:22  39  ,eur_g33
10:16:22  40  ,eur_g34
10:16:22  41  ,eur_g35
10:16:22  42  ,eur_g36
10:16:22  43  ,eur_g37
10:16:22  44  ,eur_g38
10:16:22  45  ,eur_g39
10:16:22  46  ,eur_g40
10:16:22  47  ,eur_g41
10:16:22  48  ,aud_g00
10:16:22  49  ,aud_g01
10:16:22  50  ,aud_g02
10:16:22  51  ,aud_g03
10:16:22  52  ,aud_g04
10:16:22  53  ,aud_g05
10:16:22  54  ,aud_g06
10:16:22  55  ,aud_g07
10:16:22  56  ,aud_g08
10:16:22  57  ,aud_g09
10:16:22  58  ,aud_g10
10:16:22  59  ,aud_g11
10:16:22  60  ,aud_g12
10:16:22  61  ,aud_g13
10:16:22  62  ,aud_g14
10:16:22  63  ,aud_g15
10:16:22  64  ,aud_g16
10:16:22  65  ,aud_g17
10:16:22  66  ,aud_g18
10:16:22  67  ,aud_g19
10:16:22  68  ,aud_g20
10:16:22  69  ,aud_g21
10:16:22  70  ,aud_g22
10:16:22  71  ,aud_g23
10:16:22  72  ,aud_g24
10:16:22  73  ,aud_g25
10:16:22  74  ,aud_g26
10:16:22  75  ,aud_g27
10:16:22  76  ,aud_g28
10:16:22  77  ,aud_g29
10:16:22  78  ,aud_g30
10:16:22  79  ,aud_g31
10:16:22  80  ,aud_g32
10:16:22  81  ,aud_g33
10:16:22  82  ,aud_g34
10:16:22  83  ,aud_g35
10:16:22  84  ,aud_g36
10:16:22  85  ,aud_g37
10:16:22  86  ,aud_g38
10:16:22  87  ,aud_g39
10:16:22  88  ,aud_g40
10:16:22  89  ,aud_g41
10:16:22  90  ,gbp_g00
10:16:22  91  ,gbp_g01
10:16:22  92  ,gbp_g02
10:16:22  93  ,gbp_g03
10:16:22  94  ,gbp_g04
10:16:22  95  ,gbp_g05
10:16:22  96  ,gbp_g06
10:16:22  97  ,gbp_g07
10:16:22  98  ,gbp_g08
10:16:22  99  ,gbp_g09
10:16:22 100  ,gbp_g10
10:16:22 101  ,gbp_g11
10:16:22 102  ,gbp_g12
10:16:22 103  ,gbp_g13
10:16:22 104  ,gbp_g14
10:16:22 105  ,gbp_g15
10:16:22 106  ,gbp_g16
10:16:22 107  ,gbp_g17
10:16:22 108  ,gbp_g18
10:16:22 109  ,gbp_g19
10:16:22 110  ,gbp_g20
10:16:22 111  ,gbp_g21
10:16:22 112  ,gbp_g22
10:16:22 113  ,gbp_g23
10:16:22 114  ,gbp_g24
10:16:22 115  ,gbp_g25
10:16:22 116  ,gbp_g26
10:16:22 117  ,gbp_g27
10:16:22 118  ,gbp_g28
10:16:22 119  ,gbp_g29
10:16:22 120  ,gbp_g30
10:16:22 121  ,gbp_g31
10:16:22 122  ,gbp_g32
10:16:22 123  ,gbp_g33
10:16:22 124  ,gbp_g34
10:16:22 125  ,gbp_g35
10:16:22 126  ,gbp_g36
10:16:22 127  ,gbp_g37
10:16:22 128  ,gbp_g38
10:16:22 129  ,gbp_g39
10:16:22 130  ,gbp_g40
10:16:22 131  ,gbp_g41
10:16:22 132  ,jpy_g00
10:16:22 133  ,jpy_g01
10:16:22 134  ,jpy_g02
10:16:22 135  ,jpy_g03
10:16:22 136  ,jpy_g04
10:16:22 137  ,jpy_g05
10:16:22 138  ,jpy_g06
10:16:22 139  ,jpy_g07
10:16:22 140  ,jpy_g08
10:16:22 141  ,jpy_g09
10:16:22 142  ,jpy_g10
10:16:22 143  ,jpy_g11
10:16:22 144  ,jpy_g12
10:16:22 145  ,jpy_g13
10:16:22 146  ,jpy_g14
10:16:22 147  ,jpy_g15
10:16:22 148  ,jpy_g16
10:16:22 149  ,jpy_g17
10:16:22 150  ,jpy_g18
10:16:22 151  ,jpy_g19
10:16:22 152  ,jpy_g20
10:16:22 153  ,jpy_g21
10:16:22 154  ,jpy_g22
10:16:22 155  ,jpy_g23
10:16:22 156  ,jpy_g24
10:16:22 157  ,jpy_g25
10:16:22 158  ,jpy_g26
10:16:22 159  ,jpy_g27
10:16:22 160  ,jpy_g28
10:16:22 161  ,jpy_g29
10:16:22 162  ,jpy_g30
10:16:22 163  ,jpy_g31
10:16:22 164  ,jpy_g32
10:16:22 165  ,jpy_g33
10:16:22 166  ,jpy_g34
10:16:22 167  ,jpy_g35
10:16:22 168  ,jpy_g36
10:16:22 169  ,jpy_g37
10:16:22 170  ,jpy_g38
10:16:22 171  ,jpy_g39
10:16:22 172  ,jpy_g40
10:16:22 173  ,jpy_g41
10:16:22 174  ,cad_g00
10:16:22 175  ,cad_g01
10:16:22 176  ,cad_g02
10:16:22 177  ,cad_g03
10:16:22 178  ,cad_g04
10:16:22 179  ,cad_g05
10:16:22 180  ,cad_g06
10:16:22 181  ,cad_g07
10:16:22 182  ,cad_g08
10:16:22 183  ,cad_g09
10:16:22 184  ,cad_g10
10:16:22 185  ,cad_g11
10:16:22 186  ,cad_g12
10:16:22 187  ,cad_g13
10:16:22 188  ,cad_g14
10:16:22 189  ,cad_g15
10:16:22 190  ,cad_g16
10:16:22 191  ,cad_g17
10:16:22 192  ,cad_g18
10:16:22 193  ,cad_g19
10:16:22 194  ,cad_g20
10:16:22 195  ,cad_g21
10:16:22 196  ,cad_g22
10:16:22 197  ,cad_g23
10:16:22 198  ,cad_g24
10:16:22 199  ,cad_g25
10:16:22 200  ,cad_g26
10:16:22 201  ,cad_g27
10:16:22 202  ,cad_g28
10:16:22 203  ,cad_g29
10:16:22 204  ,cad_g30
10:16:22 205  ,cad_g31
10:16:22 206  ,cad_g32
10:16:22 207  ,cad_g33
10:16:22 208  ,cad_g34
10:16:22 209  ,cad_g35
10:16:22 210  ,cad_g36
10:16:22 211  ,cad_g37
10:16:22 212  ,cad_g38
10:16:22 213  ,cad_g39
10:16:22 214  ,cad_g40
10:16:22 215  ,cad_g41
10:16:22 216  ,chf_g00
10:16:22 217  ,chf_g01
10:16:22 218  ,chf_g02
10:16:22 219  ,chf_g03
10:16:22 220  ,chf_g04
10:16:22 221  ,chf_g05
10:16:22 222  ,chf_g06
10:16:22 223  ,chf_g07
10:16:22 224  ,chf_g08
10:16:22 225  ,chf_g09
10:16:22 226  ,chf_g10
10:16:22 227  ,chf_g11
10:16:22 228  ,chf_g12
10:16:22 229  ,chf_g13
10:16:22 230  ,chf_g14
10:16:22 231  ,chf_g15
10:16:22 232  ,chf_g16
10:16:22 233  ,chf_g17
10:16:22 234  ,chf_g18
10:16:22 235  ,chf_g19
10:16:22 236  ,chf_g20
10:16:22 237  ,chf_g21
10:16:22 238  ,chf_g22
10:16:22 239  ,chf_g23
10:16:22 240  ,chf_g24
10:16:22 241  ,chf_g25
10:16:22 242  ,chf_g26
10:16:22 243  ,chf_g27
10:16:22 244  ,chf_g28
10:16:22 245  ,chf_g29
10:16:22 246  ,chf_g30
10:16:22 247  ,chf_g31
10:16:22 248  ,chf_g32
10:16:22 249  ,chf_g33
10:16:22 250  ,chf_g34
10:16:22 251  ,chf_g35
10:16:22 252  ,chf_g36
10:16:22 253  ,chf_g37
10:16:22 254  ,chf_g38
10:16:22 255  ,chf_g39
10:16:22 256  ,chf_g40
10:16:22 257  ,chf_g41
10:16:22 258  FROM aud_ms6 m
10:16:22 259  WHERE gattn IN('nup','up')
10:16:22 260  AND 1+m.ydate < '&1'||' '||'&2'
10:16:22 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'09:50:00'

View created.

Elapsed: 00:00:00.12
10:16:22 SQL> 
10:16:22 SQL> -- rpt
10:16:22 SQL> 
10:16:22 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12887
up	     6621

Elapsed: 00:00:00.04
10:16:22 SQL> 
10:16:22 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-06 09:45:00

Elapsed: 00:00:00.03
10:16:22 SQL> 
10:16:22 SQL> -- Now build model from bme and score sme
10:16:22 SQL> @score1gattn.sql
10:16:22 SQL> -- score1gattn.sql
10:16:22 SQL> 
10:16:22 SQL> -- Does the 1st SVM score
10:16:22 SQL> 
10:16:22 SQL> -- Fill up svmc_apply_prep
10:16:22 SQL> @score_gattn.sql
10:16:22 SQL> --
10:16:22 SQL> -- score_gattn.sql
10:16:22 SQL> --
10:16:22 SQL> 
10:16:22 SQL> -- usage: score_gattn.sql
10:16:22 SQL> 
10:16:22 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
10:16:22 SQL> 
10:16:22 SQL> DEFINE target	= 'gattn'
10:16:22 SQL> DEFINE model_name = 'forex15'
10:16:22 SQL> DEFINE bldtable	= 'bme'
10:16:22 SQL> DEFINE scoretable = 'sme'
10:16:22 SQL> DEFINE case_id	= 'prdate'
10:16:22 SQL> 
10:16:22 SQL> -- Define a variable to help me exclude some columns from some data mining calls
10:16:22 SQL> DEFINE exclude1 = "'&target','&case_id'"
10:16:22 SQL> 
10:16:22 SQL> -- Builds an SVM model using pl/sql.
10:16:22 SQL> 
10:16:22 SQL> -----------------------------------------------------------------------
10:16:22 SQL> --			    BUILD THE MODEL
10:16:22 SQL> -----------------------------------------------------------------------
10:16:22 SQL> 
10:16:22 SQL> -- Cleanup old build data preparation objects for repeat runs
10:16:22 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
10:16:22 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
10:16:22 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
10:16:22 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
10:16:22 SQL> 
10:16:22 SQL> 
10:16:22 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
10:16:22 SQL> --
10:16:22 SQL> -- DROP	TABLE svmc_settings ;
10:16:22 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
10:16:22 SQL> -- DELETE svmc_settings;
10:16:22 SQL> 
10:16:22 SQL> -- The default classification algorithm is Naive Bayes. So override
10:16:22 SQL> -- this choice to SVM using a settings table.
10:16:22 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
10:16:22 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
10:16:22 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
10:16:22 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
10:16:22 SQL> -- models.
10:16:22 SQL> --
10:16:22 SQL> 
10:16:22 SQL> -- Do this once and then comment it out.
10:16:22 SQL> -- That makes script go faster.
10:16:22 SQL> -- BEGIN
10:16:22 SQL> -- -- Populate settings table
10:16:22 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:16:22 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
10:16:22 SQL> --
10:16:22 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:16:22 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
10:16:22 SQL> --
10:16:22 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:16:22 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
10:16:22 SQL> --   COMMIT;
10:16:22 SQL> -- END;
10:16:22 SQL> -- /
10:16:22 SQL> 
10:16:22 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
10:16:22 SQL> 
10:16:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
10:16:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:16:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
10:16:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
10:16:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:16:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
10:16:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
10:16:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:16:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:16:22 SQL> 
10:16:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
10:16:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:16:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
10:16:22 SQL> 
10:16:22 SQL> --------------------------------
10:16:22 SQL> -- PREPARE BUILD (TRAINING) DATA
10:16:22 SQL> --
10:16:22 SQL> 
10:16:22 SQL> -- 1. Missing Value treatment for all Predictors and
10:16:22 SQL> -- 2. Outlier Treatment and
10:16:22 SQL> -- 3. Normalization are performed below.
10:16:22 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
10:16:22 SQL> --    normalized here.
10:16:22 SQL> 
10:16:22 SQL> BEGIN
10:16:22   2  	-- Perform missing value treatment for all predictors
10:16:22   3  	-- create miss tables
10:16:22   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
10:16:22   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
10:16:22   6  
10:16:22   7  	-- populate miss tables
10:16:22   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
10:16:22   9  	  miss_table_name => 'svmc_miss_num',
10:16:22  10  	  data_table_name => '&bldtable',
10:16:22  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:16:22  12  
10:16:22  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
10:16:22  14  	  miss_table_name => 'svmc_miss_cat',
10:16:22  15  	  data_table_name => '&bldtable',
10:16:22  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:16:22  17  
10:16:22  18  	-- xform input data to replace missing values
10:16:22  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
10:16:22  20  	  miss_table_name => 'svmc_miss_num',
10:16:22  21  	  data_table_name => '&bldtable',
10:16:22  22  	  xform_view_name => 'xformed_build_miss_num');
10:16:22  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
10:16:22  24  	  miss_table_name => 'svmc_miss_cat',
10:16:22  25  	  data_table_name => '&bldtable',
10:16:22  26  	  xform_view_name => 'xformed_build_miss_cat');
10:16:22  27  
10:16:22  28  	-- Perform outlier treatment.
10:16:22  29  	-- create clip table
10:16:22  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
10:16:22  31  
10:16:22  32  	-- populate clip table
10:16:22  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
10:16:22  34  	  clip_table_name => 'svmc_clip',
10:16:22  35  	  data_table_name => '&bldtable',
10:16:22  36  	  tail_frac	  => 0.025,
10:16:22  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:16:22  38  
10:16:22  39  	-- xform input data to winsorized data
10:16:22  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
10:16:22  41  	  clip_table_name => 'svmc_clip',
10:16:22  42  	  data_table_name => '&bldtable',
10:16:22  43  	  xform_view_name => 'svmc_winsor');
10:16:22  44  
10:16:22  45  	-- create normalization table
10:16:22  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
10:16:22  47  
10:16:22  48  	-- populate normalization table based on winsorized data
10:16:22  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
10:16:22  50  	  norm_table_name => 'svmc_norm',
10:16:22  51  	  data_table_name => 'svmc_winsor',
10:16:22  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:16:22  53  
10:16:22  54  	-- normalize the original data
10:16:22  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
10:16:22  56  	  norm_table_name => 'svmc_norm',
10:16:22  57  	  data_table_name => '&bldtable',
10:16:22  58  	  xform_view_name => 'svmc_build_prep');
10:16:22  59  END;
10:16:22  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.00
10:16:41 SQL> 
10:16:41 SQL> ---------------------
10:16:41 SQL> -- CREATE A NEW MODEL
10:16:41 SQL> --
10:16:41 SQL> -- Cleanup old model with the same name for repeat runs
10:16:41 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
10:16:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:16:41   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.06
10:16:42 SQL> 
10:16:42 SQL> -- Build a new SVM Model
10:16:42 SQL> BEGIN
10:16:42   2  	DBMS_DATA_MINING.CREATE_MODEL(
10:16:42   3  	  model_name	      => '&model_name',
10:16:42   4  	  mining_function     => dbms_data_mining.classification,
10:16:42   5  	  data_table_name     => 'svmc_build_prep',
10:16:42   6  	  case_id_column_name => '&case_id',
10:16:42   7  	  target_column_name  => '&target',
10:16:42   8  	  settings_table_name => 'svmc_settings');
10:16:42   9  END;
10:16:42  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.19
10:17:11 SQL> 
10:17:11 SQL> -----------------------------------------------------------------------
10:17:11 SQL> --			       APPLY/score THE MODEL
10:17:11 SQL> -----------------------------------------------------------------------
10:17:11 SQL> 
10:17:11 SQL> -- Cleanup old scoring data preparation objects for repeat runs
10:17:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
10:17:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:17:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:17:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
10:17:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:17:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:17:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
10:17:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:17:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
10:17:12 SQL> -----------------------
10:17:12 SQL> -- PREPARE SCORING DATA
10:17:12 SQL> --
10:17:12 SQL> -- If the data for model creation has been prepared, then the data
10:17:12 SQL> -- to be scored using the model must be prepared in the same manner
10:17:12 SQL> -- in order to obtain meaningful results.
10:17:12 SQL> --
10:17:12 SQL> -- 1. Missing Value treatment for all Predictors and
10:17:12 SQL> -- 2. Normalization
10:17:12 SQL> -- No outlier treatment will be performed during test and apply. The
10:17:12 SQL> -- normalization step is sufficient, since the normalization parameters
10:17:12 SQL> -- already capture the effects of outlier treatment done with build data.
10:17:12 SQL> --
10:17:12 SQL> BEGIN
10:17:12   2  	-- Xform Test data to replace missing values
10:17:12   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
10:17:12   4  	  miss_table_name => 'svmc_miss_num',
10:17:12   5  	  data_table_name => '&scoretable',
10:17:12   6  	  xform_view_name => 'xformed_apply_miss_num');
10:17:12   7  
10:17:12   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
10:17:12   9  	  miss_table_name => 'svmc_miss_cat',
10:17:12  10  	  data_table_name => '&scoretable',
10:17:12  11  	  xform_view_name => 'xformed_apply_miss_cat');
10:17:12  12  
10:17:12  13  	-- Normalize the data to be scored
10:17:12  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
10:17:12  15  	  norm_table_name => 'svmc_norm',
10:17:12  16  	  data_table_name => '&scoretable',
10:17:12  17  	  xform_view_name => 'svmc_apply_prep');
10:17:12  18  END;
10:17:12  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.34
10:17:13 SQL> 
10:17:13 SQL> -- Use same model_name used in score_gattn.sql
10:17:13 SQL> DEFINE model_name = 'forex15'
10:17:13 SQL> 
10:17:13 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
10:17:13 SQL> 
10:17:13 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
10:17:13   2  SELECT
10:17:13   3  prdate
10:17:13   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
10:17:13   5  ,sysdate
10:17:13   6  ,SUBSTR(prdate,1,3)pair
10:17:13   7  ,SUBSTR(prdate,4,19)ydate
10:17:13   8  FROM svmc_apply_prep
10:17:13   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.20
10:17:13 SQL> @aud_score1day_gattn.sql	2011-01-07 09:55:00
10:17:13 SQL> --
10:17:13 SQL> -- aud_score1day_gattn.sql
10:17:13 SQL> --
10:17:13 SQL> 
10:17:13 SQL> CREATE OR REPLACE VIEW sme AS
10:17:13   2  SELECT
10:17:13   3  'aud'||m.ydate prdate
10:17:13   4  ,NULL gattn
10:17:13   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
10:17:13   6  ,eur_g00
10:17:13   7  ,eur_g01
10:17:13   8  ,eur_g02
10:17:13   9  ,eur_g03
10:17:13  10  ,eur_g04
10:17:13  11  ,eur_g05
10:17:13  12  ,eur_g06
10:17:13  13  ,eur_g07
10:17:13  14  ,eur_g08
10:17:13  15  ,eur_g09
10:17:13  16  ,eur_g10
10:17:13  17  ,eur_g11
10:17:13  18  ,eur_g12
10:17:13  19  ,eur_g13
10:17:13  20  ,eur_g14
10:17:13  21  ,eur_g15
10:17:13  22  ,eur_g16
10:17:13  23  ,eur_g17
10:17:13  24  ,eur_g18
10:17:13  25  ,eur_g19
10:17:13  26  ,eur_g20
10:17:13  27  ,eur_g21
10:17:13  28  ,eur_g22
10:17:13  29  ,eur_g23
10:17:13  30  ,eur_g24
10:17:13  31  ,eur_g25
10:17:13  32  ,eur_g26
10:17:13  33  ,eur_g27
10:17:13  34  ,eur_g28
10:17:13  35  ,eur_g29
10:17:13  36  ,eur_g30
10:17:13  37  ,eur_g31
10:17:13  38  ,eur_g32
10:17:13  39  ,eur_g33
10:17:13  40  ,eur_g34
10:17:13  41  ,eur_g35
10:17:13  42  ,eur_g36
10:17:13  43  ,eur_g37
10:17:13  44  ,eur_g38
10:17:13  45  ,eur_g39
10:17:13  46  ,eur_g40
10:17:13  47  ,eur_g41
10:17:13  48  ,aud_g00
10:17:13  49  ,aud_g01
10:17:13  50  ,aud_g02
10:17:13  51  ,aud_g03
10:17:13  52  ,aud_g04
10:17:13  53  ,aud_g05
10:17:13  54  ,aud_g06
10:17:13  55  ,aud_g07
10:17:13  56  ,aud_g08
10:17:13  57  ,aud_g09
10:17:13  58  ,aud_g10
10:17:13  59  ,aud_g11
10:17:13  60  ,aud_g12
10:17:13  61  ,aud_g13
10:17:13  62  ,aud_g14
10:17:13  63  ,aud_g15
10:17:13  64  ,aud_g16
10:17:13  65  ,aud_g17
10:17:13  66  ,aud_g18
10:17:13  67  ,aud_g19
10:17:13  68  ,aud_g20
10:17:13  69  ,aud_g21
10:17:13  70  ,aud_g22
10:17:13  71  ,aud_g23
10:17:13  72  ,aud_g24
10:17:13  73  ,aud_g25
10:17:13  74  ,aud_g26
10:17:13  75  ,aud_g27
10:17:13  76  ,aud_g28
10:17:13  77  ,aud_g29
10:17:13  78  ,aud_g30
10:17:13  79  ,aud_g31
10:17:13  80  ,aud_g32
10:17:13  81  ,aud_g33
10:17:13  82  ,aud_g34
10:17:13  83  ,aud_g35
10:17:13  84  ,aud_g36
10:17:13  85  ,aud_g37
10:17:13  86  ,aud_g38
10:17:13  87  ,aud_g39
10:17:13  88  ,aud_g40
10:17:13  89  ,aud_g41
10:17:13  90  ,gbp_g00
10:17:13  91  ,gbp_g01
10:17:13  92  ,gbp_g02
10:17:13  93  ,gbp_g03
10:17:13  94  ,gbp_g04
10:17:13  95  ,gbp_g05
10:17:13  96  ,gbp_g06
10:17:13  97  ,gbp_g07
10:17:13  98  ,gbp_g08
10:17:13  99  ,gbp_g09
10:17:13 100  ,gbp_g10
10:17:13 101  ,gbp_g11
10:17:13 102  ,gbp_g12
10:17:13 103  ,gbp_g13
10:17:13 104  ,gbp_g14
10:17:13 105  ,gbp_g15
10:17:13 106  ,gbp_g16
10:17:13 107  ,gbp_g17
10:17:13 108  ,gbp_g18
10:17:13 109  ,gbp_g19
10:17:13 110  ,gbp_g20
10:17:13 111  ,gbp_g21
10:17:13 112  ,gbp_g22
10:17:13 113  ,gbp_g23
10:17:13 114  ,gbp_g24
10:17:13 115  ,gbp_g25
10:17:13 116  ,gbp_g26
10:17:13 117  ,gbp_g27
10:17:13 118  ,gbp_g28
10:17:13 119  ,gbp_g29
10:17:13 120  ,gbp_g30
10:17:13 121  ,gbp_g31
10:17:13 122  ,gbp_g32
10:17:13 123  ,gbp_g33
10:17:13 124  ,gbp_g34
10:17:13 125  ,gbp_g35
10:17:13 126  ,gbp_g36
10:17:13 127  ,gbp_g37
10:17:13 128  ,gbp_g38
10:17:13 129  ,gbp_g39
10:17:13 130  ,gbp_g40
10:17:13 131  ,gbp_g41
10:17:13 132  ,jpy_g00
10:17:13 133  ,jpy_g01
10:17:13 134  ,jpy_g02
10:17:13 135  ,jpy_g03
10:17:13 136  ,jpy_g04
10:17:13 137  ,jpy_g05
10:17:13 138  ,jpy_g06
10:17:13 139  ,jpy_g07
10:17:13 140  ,jpy_g08
10:17:13 141  ,jpy_g09
10:17:13 142  ,jpy_g10
10:17:13 143  ,jpy_g11
10:17:13 144  ,jpy_g12
10:17:13 145  ,jpy_g13
10:17:13 146  ,jpy_g14
10:17:13 147  ,jpy_g15
10:17:13 148  ,jpy_g16
10:17:13 149  ,jpy_g17
10:17:13 150  ,jpy_g18
10:17:13 151  ,jpy_g19
10:17:13 152  ,jpy_g20
10:17:13 153  ,jpy_g21
10:17:13 154  ,jpy_g22
10:17:13 155  ,jpy_g23
10:17:13 156  ,jpy_g24
10:17:13 157  ,jpy_g25
10:17:13 158  ,jpy_g26
10:17:13 159  ,jpy_g27
10:17:13 160  ,jpy_g28
10:17:13 161  ,jpy_g29
10:17:13 162  ,jpy_g30
10:17:13 163  ,jpy_g31
10:17:13 164  ,jpy_g32
10:17:13 165  ,jpy_g33
10:17:13 166  ,jpy_g34
10:17:13 167  ,jpy_g35
10:17:13 168  ,jpy_g36
10:17:13 169  ,jpy_g37
10:17:13 170  ,jpy_g38
10:17:13 171  ,jpy_g39
10:17:13 172  ,jpy_g40
10:17:13 173  ,jpy_g41
10:17:13 174  ,cad_g00
10:17:13 175  ,cad_g01
10:17:13 176  ,cad_g02
10:17:13 177  ,cad_g03
10:17:13 178  ,cad_g04
10:17:13 179  ,cad_g05
10:17:13 180  ,cad_g06
10:17:13 181  ,cad_g07
10:17:13 182  ,cad_g08
10:17:13 183  ,cad_g09
10:17:13 184  ,cad_g10
10:17:13 185  ,cad_g11
10:17:13 186  ,cad_g12
10:17:13 187  ,cad_g13
10:17:13 188  ,cad_g14
10:17:13 189  ,cad_g15
10:17:13 190  ,cad_g16
10:17:13 191  ,cad_g17
10:17:13 192  ,cad_g18
10:17:13 193  ,cad_g19
10:17:13 194  ,cad_g20
10:17:13 195  ,cad_g21
10:17:13 196  ,cad_g22
10:17:13 197  ,cad_g23
10:17:13 198  ,cad_g24
10:17:13 199  ,cad_g25
10:17:13 200  ,cad_g26
10:17:13 201  ,cad_g27
10:17:13 202  ,cad_g28
10:17:13 203  ,cad_g29
10:17:13 204  ,cad_g30
10:17:13 205  ,cad_g31
10:17:13 206  ,cad_g32
10:17:13 207  ,cad_g33
10:17:13 208  ,cad_g34
10:17:13 209  ,cad_g35
10:17:13 210  ,cad_g36
10:17:13 211  ,cad_g37
10:17:13 212  ,cad_g38
10:17:13 213  ,cad_g39
10:17:13 214  ,cad_g40
10:17:13 215  ,cad_g41
10:17:13 216  ,chf_g00
10:17:13 217  ,chf_g01
10:17:13 218  ,chf_g02
10:17:13 219  ,chf_g03
10:17:13 220  ,chf_g04
10:17:13 221  ,chf_g05
10:17:13 222  ,chf_g06
10:17:13 223  ,chf_g07
10:17:13 224  ,chf_g08
10:17:13 225  ,chf_g09
10:17:13 226  ,chf_g10
10:17:13 227  ,chf_g11
10:17:13 228  ,chf_g12
10:17:13 229  ,chf_g13
10:17:13 230  ,chf_g14
10:17:13 231  ,chf_g15
10:17:13 232  ,chf_g16
10:17:13 233  ,chf_g17
10:17:13 234  ,chf_g18
10:17:13 235  ,chf_g19
10:17:13 236  ,chf_g20
10:17:13 237  ,chf_g21
10:17:13 238  ,chf_g22
10:17:13 239  ,chf_g23
10:17:13 240  ,chf_g24
10:17:13 241  ,chf_g25
10:17:13 242  ,chf_g26
10:17:13 243  ,chf_g27
10:17:13 244  ,chf_g28
10:17:13 245  ,chf_g29
10:17:13 246  ,chf_g30
10:17:13 247  ,chf_g31
10:17:13 248  ,chf_g32
10:17:13 249  ,chf_g33
10:17:13 250  ,chf_g34
10:17:13 251  ,chf_g35
10:17:13 252  ,chf_g36
10:17:13 253  ,chf_g37
10:17:13 254  ,chf_g38
10:17:13 255  ,chf_g39
10:17:13 256  ,chf_g40
10:17:13 257  ,chf_g41
10:17:13 258  FROM aud_ms6 m
10:17:13 259  WHERE m.ydate = '&1'||' '||'&2'
10:17:13 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'09:55:00'

View created.

Elapsed: 00:00:00.12
10:17:13 SQL> 
10:17:13 SQL> -- rpt
10:17:13 SQL> -- We should see just 1 row:
10:17:13 SQL> 
10:17:13 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
10:17:13 SQL> 
10:17:13 SQL> -- Build the model:
10:17:13 SQL> CREATE OR REPLACE VIEW bme AS
10:17:13   2  SELECT
10:17:13   3  'aud'||m.ydate prdate
10:17:13   4  ,gattn
10:17:13   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
10:17:13   6  ,eur_g00
10:17:13   7  ,eur_g01
10:17:13   8  ,eur_g02
10:17:13   9  ,eur_g03
10:17:13  10  ,eur_g04
10:17:13  11  ,eur_g05
10:17:13  12  ,eur_g06
10:17:13  13  ,eur_g07
10:17:13  14  ,eur_g08
10:17:13  15  ,eur_g09
10:17:13  16  ,eur_g10
10:17:13  17  ,eur_g11
10:17:13  18  ,eur_g12
10:17:13  19  ,eur_g13
10:17:13  20  ,eur_g14
10:17:13  21  ,eur_g15
10:17:13  22  ,eur_g16
10:17:13  23  ,eur_g17
10:17:13  24  ,eur_g18
10:17:13  25  ,eur_g19
10:17:13  26  ,eur_g20
10:17:13  27  ,eur_g21
10:17:13  28  ,eur_g22
10:17:13  29  ,eur_g23
10:17:13  30  ,eur_g24
10:17:13  31  ,eur_g25
10:17:13  32  ,eur_g26
10:17:13  33  ,eur_g27
10:17:13  34  ,eur_g28
10:17:13  35  ,eur_g29
10:17:13  36  ,eur_g30
10:17:13  37  ,eur_g31
10:17:13  38  ,eur_g32
10:17:13  39  ,eur_g33
10:17:13  40  ,eur_g34
10:17:13  41  ,eur_g35
10:17:13  42  ,eur_g36
10:17:13  43  ,eur_g37
10:17:13  44  ,eur_g38
10:17:13  45  ,eur_g39
10:17:13  46  ,eur_g40
10:17:13  47  ,eur_g41
10:17:13  48  ,aud_g00
10:17:13  49  ,aud_g01
10:17:13  50  ,aud_g02
10:17:13  51  ,aud_g03
10:17:13  52  ,aud_g04
10:17:13  53  ,aud_g05
10:17:13  54  ,aud_g06
10:17:13  55  ,aud_g07
10:17:13  56  ,aud_g08
10:17:13  57  ,aud_g09
10:17:13  58  ,aud_g10
10:17:13  59  ,aud_g11
10:17:13  60  ,aud_g12
10:17:13  61  ,aud_g13
10:17:13  62  ,aud_g14
10:17:13  63  ,aud_g15
10:17:13  64  ,aud_g16
10:17:13  65  ,aud_g17
10:17:13  66  ,aud_g18
10:17:13  67  ,aud_g19
10:17:13  68  ,aud_g20
10:17:13  69  ,aud_g21
10:17:13  70  ,aud_g22
10:17:13  71  ,aud_g23
10:17:13  72  ,aud_g24
10:17:13  73  ,aud_g25
10:17:13  74  ,aud_g26
10:17:13  75  ,aud_g27
10:17:13  76  ,aud_g28
10:17:13  77  ,aud_g29
10:17:13  78  ,aud_g30
10:17:13  79  ,aud_g31
10:17:13  80  ,aud_g32
10:17:13  81  ,aud_g33
10:17:13  82  ,aud_g34
10:17:13  83  ,aud_g35
10:17:13  84  ,aud_g36
10:17:13  85  ,aud_g37
10:17:13  86  ,aud_g38
10:17:13  87  ,aud_g39
10:17:13  88  ,aud_g40
10:17:13  89  ,aud_g41
10:17:13  90  ,gbp_g00
10:17:13  91  ,gbp_g01
10:17:13  92  ,gbp_g02
10:17:13  93  ,gbp_g03
10:17:13  94  ,gbp_g04
10:17:13  95  ,gbp_g05
10:17:13  96  ,gbp_g06
10:17:13  97  ,gbp_g07
10:17:13  98  ,gbp_g08
10:17:13  99  ,gbp_g09
10:17:13 100  ,gbp_g10
10:17:13 101  ,gbp_g11
10:17:13 102  ,gbp_g12
10:17:13 103  ,gbp_g13
10:17:13 104  ,gbp_g14
10:17:13 105  ,gbp_g15
10:17:13 106  ,gbp_g16
10:17:13 107  ,gbp_g17
10:17:13 108  ,gbp_g18
10:17:13 109  ,gbp_g19
10:17:13 110  ,gbp_g20
10:17:13 111  ,gbp_g21
10:17:13 112  ,gbp_g22
10:17:13 113  ,gbp_g23
10:17:13 114  ,gbp_g24
10:17:13 115  ,gbp_g25
10:17:13 116  ,gbp_g26
10:17:13 117  ,gbp_g27
10:17:13 118  ,gbp_g28
10:17:13 119  ,gbp_g29
10:17:13 120  ,gbp_g30
10:17:13 121  ,gbp_g31
10:17:13 122  ,gbp_g32
10:17:13 123  ,gbp_g33
10:17:13 124  ,gbp_g34
10:17:13 125  ,gbp_g35
10:17:13 126  ,gbp_g36
10:17:13 127  ,gbp_g37
10:17:13 128  ,gbp_g38
10:17:13 129  ,gbp_g39
10:17:13 130  ,gbp_g40
10:17:13 131  ,gbp_g41
10:17:13 132  ,jpy_g00
10:17:13 133  ,jpy_g01
10:17:13 134  ,jpy_g02
10:17:13 135  ,jpy_g03
10:17:13 136  ,jpy_g04
10:17:13 137  ,jpy_g05
10:17:13 138  ,jpy_g06
10:17:13 139  ,jpy_g07
10:17:13 140  ,jpy_g08
10:17:13 141  ,jpy_g09
10:17:13 142  ,jpy_g10
10:17:13 143  ,jpy_g11
10:17:13 144  ,jpy_g12
10:17:13 145  ,jpy_g13
10:17:13 146  ,jpy_g14
10:17:13 147  ,jpy_g15
10:17:13 148  ,jpy_g16
10:17:13 149  ,jpy_g17
10:17:13 150  ,jpy_g18
10:17:13 151  ,jpy_g19
10:17:13 152  ,jpy_g20
10:17:13 153  ,jpy_g21
10:17:13 154  ,jpy_g22
10:17:13 155  ,jpy_g23
10:17:13 156  ,jpy_g24
10:17:13 157  ,jpy_g25
10:17:13 158  ,jpy_g26
10:17:13 159  ,jpy_g27
10:17:13 160  ,jpy_g28
10:17:13 161  ,jpy_g29
10:17:13 162  ,jpy_g30
10:17:13 163  ,jpy_g31
10:17:13 164  ,jpy_g32
10:17:13 165  ,jpy_g33
10:17:13 166  ,jpy_g34
10:17:13 167  ,jpy_g35
10:17:13 168  ,jpy_g36
10:17:13 169  ,jpy_g37
10:17:13 170  ,jpy_g38
10:17:13 171  ,jpy_g39
10:17:13 172  ,jpy_g40
10:17:13 173  ,jpy_g41
10:17:13 174  ,cad_g00
10:17:13 175  ,cad_g01
10:17:13 176  ,cad_g02
10:17:13 177  ,cad_g03
10:17:13 178  ,cad_g04
10:17:13 179  ,cad_g05
10:17:13 180  ,cad_g06
10:17:13 181  ,cad_g07
10:17:13 182  ,cad_g08
10:17:13 183  ,cad_g09
10:17:13 184  ,cad_g10
10:17:13 185  ,cad_g11
10:17:13 186  ,cad_g12
10:17:13 187  ,cad_g13
10:17:13 188  ,cad_g14
10:17:13 189  ,cad_g15
10:17:13 190  ,cad_g16
10:17:13 191  ,cad_g17
10:17:13 192  ,cad_g18
10:17:13 193  ,cad_g19
10:17:13 194  ,cad_g20
10:17:13 195  ,cad_g21
10:17:13 196  ,cad_g22
10:17:13 197  ,cad_g23
10:17:13 198  ,cad_g24
10:17:13 199  ,cad_g25
10:17:13 200  ,cad_g26
10:17:13 201  ,cad_g27
10:17:13 202  ,cad_g28
10:17:13 203  ,cad_g29
10:17:13 204  ,cad_g30
10:17:13 205  ,cad_g31
10:17:13 206  ,cad_g32
10:17:13 207  ,cad_g33
10:17:13 208  ,cad_g34
10:17:13 209  ,cad_g35
10:17:13 210  ,cad_g36
10:17:13 211  ,cad_g37
10:17:13 212  ,cad_g38
10:17:13 213  ,cad_g39
10:17:13 214  ,cad_g40
10:17:13 215  ,cad_g41
10:17:13 216  ,chf_g00
10:17:13 217  ,chf_g01
10:17:13 218  ,chf_g02
10:17:13 219  ,chf_g03
10:17:13 220  ,chf_g04
10:17:13 221  ,chf_g05
10:17:13 222  ,chf_g06
10:17:13 223  ,chf_g07
10:17:13 224  ,chf_g08
10:17:13 225  ,chf_g09
10:17:13 226  ,chf_g10
10:17:13 227  ,chf_g11
10:17:13 228  ,chf_g12
10:17:13 229  ,chf_g13
10:17:13 230  ,chf_g14
10:17:13 231  ,chf_g15
10:17:13 232  ,chf_g16
10:17:13 233  ,chf_g17
10:17:13 234  ,chf_g18
10:17:13 235  ,chf_g19
10:17:13 236  ,chf_g20
10:17:13 237  ,chf_g21
10:17:13 238  ,chf_g22
10:17:13 239  ,chf_g23
10:17:13 240  ,chf_g24
10:17:13 241  ,chf_g25
10:17:13 242  ,chf_g26
10:17:13 243  ,chf_g27
10:17:13 244  ,chf_g28
10:17:13 245  ,chf_g29
10:17:13 246  ,chf_g30
10:17:13 247  ,chf_g31
10:17:13 248  ,chf_g32
10:17:13 249  ,chf_g33
10:17:13 250  ,chf_g34
10:17:13 251  ,chf_g35
10:17:13 252  ,chf_g36
10:17:13 253  ,chf_g37
10:17:13 254  ,chf_g38
10:17:13 255  ,chf_g39
10:17:13 256  ,chf_g40
10:17:13 257  ,chf_g41
10:17:13 258  FROM aud_ms6 m
10:17:13 259  WHERE gattn IN('nup','up')
10:17:13 260  AND 1+m.ydate < '&1'||' '||'&2'
10:17:13 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'09:55:00'

View created.

Elapsed: 00:00:00.26
10:17:14 SQL> 
10:17:14 SQL> -- rpt
10:17:14 SQL> 
10:17:14 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12887
up	     6622

Elapsed: 00:00:00.05
10:17:14 SQL> 
10:17:14 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-06 09:50:00

Elapsed: 00:00:00.03
10:17:14 SQL> 
10:17:14 SQL> -- Now build model from bme and score sme
10:17:14 SQL> @score1gattn.sql
10:17:14 SQL> -- score1gattn.sql
10:17:14 SQL> 
10:17:14 SQL> -- Does the 1st SVM score
10:17:14 SQL> 
10:17:14 SQL> -- Fill up svmc_apply_prep
10:17:14 SQL> @score_gattn.sql
10:17:14 SQL> --
10:17:14 SQL> -- score_gattn.sql
10:17:14 SQL> --
10:17:14 SQL> 
10:17:14 SQL> -- usage: score_gattn.sql
10:17:14 SQL> 
10:17:14 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
10:17:14 SQL> 
10:17:14 SQL> DEFINE target	= 'gattn'
10:17:14 SQL> DEFINE model_name = 'forex15'
10:17:14 SQL> DEFINE bldtable	= 'bme'
10:17:14 SQL> DEFINE scoretable = 'sme'
10:17:14 SQL> DEFINE case_id	= 'prdate'
10:17:14 SQL> 
10:17:14 SQL> -- Define a variable to help me exclude some columns from some data mining calls
10:17:14 SQL> DEFINE exclude1 = "'&target','&case_id'"
10:17:14 SQL> 
10:17:14 SQL> -- Builds an SVM model using pl/sql.
10:17:14 SQL> 
10:17:14 SQL> -----------------------------------------------------------------------
10:17:14 SQL> --			    BUILD THE MODEL
10:17:14 SQL> -----------------------------------------------------------------------
10:17:14 SQL> 
10:17:14 SQL> -- Cleanup old build data preparation objects for repeat runs
10:17:14 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
10:17:14 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
10:17:14 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
10:17:14 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
10:17:14 SQL> 
10:17:14 SQL> 
10:17:14 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
10:17:14 SQL> --
10:17:14 SQL> -- DROP	TABLE svmc_settings ;
10:17:14 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
10:17:14 SQL> -- DELETE svmc_settings;
10:17:14 SQL> 
10:17:14 SQL> -- The default classification algorithm is Naive Bayes. So override
10:17:14 SQL> -- this choice to SVM using a settings table.
10:17:14 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
10:17:14 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
10:17:14 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
10:17:14 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
10:17:14 SQL> -- models.
10:17:14 SQL> --
10:17:14 SQL> 
10:17:14 SQL> -- Do this once and then comment it out.
10:17:14 SQL> -- That makes script go faster.
10:17:14 SQL> -- BEGIN
10:17:14 SQL> -- -- Populate settings table
10:17:14 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:17:14 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
10:17:14 SQL> --
10:17:14 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:17:14 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
10:17:14 SQL> --
10:17:14 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:17:14 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
10:17:14 SQL> --   COMMIT;
10:17:14 SQL> -- END;
10:17:14 SQL> -- /
10:17:14 SQL> 
10:17:14 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
10:17:14 SQL> 
10:17:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
10:17:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:17:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:17:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
10:17:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:17:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:17:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
10:17:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:17:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
10:17:14 SQL> 
10:17:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
10:17:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:17:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
10:17:14 SQL> 
10:17:14 SQL> --------------------------------
10:17:14 SQL> -- PREPARE BUILD (TRAINING) DATA
10:17:14 SQL> --
10:17:14 SQL> 
10:17:14 SQL> -- 1. Missing Value treatment for all Predictors and
10:17:14 SQL> -- 2. Outlier Treatment and
10:17:14 SQL> -- 3. Normalization are performed below.
10:17:14 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
10:17:14 SQL> --    normalized here.
10:17:14 SQL> 
10:17:14 SQL> BEGIN
10:17:14   2  	-- Perform missing value treatment for all predictors
10:17:14   3  	-- create miss tables
10:17:14   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
10:17:14   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
10:17:14   6  
10:17:14   7  	-- populate miss tables
10:17:14   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
10:17:14   9  	  miss_table_name => 'svmc_miss_num',
10:17:14  10  	  data_table_name => '&bldtable',
10:17:14  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:17:14  12  
10:17:14  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
10:17:14  14  	  miss_table_name => 'svmc_miss_cat',
10:17:14  15  	  data_table_name => '&bldtable',
10:17:14  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:17:14  17  
10:17:14  18  	-- xform input data to replace missing values
10:17:14  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
10:17:14  20  	  miss_table_name => 'svmc_miss_num',
10:17:14  21  	  data_table_name => '&bldtable',
10:17:14  22  	  xform_view_name => 'xformed_build_miss_num');
10:17:14  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
10:17:14  24  	  miss_table_name => 'svmc_miss_cat',
10:17:14  25  	  data_table_name => '&bldtable',
10:17:14  26  	  xform_view_name => 'xformed_build_miss_cat');
10:17:14  27  
10:17:14  28  	-- Perform outlier treatment.
10:17:14  29  	-- create clip table
10:17:14  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
10:17:14  31  
10:17:14  32  	-- populate clip table
10:17:14  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
10:17:14  34  	  clip_table_name => 'svmc_clip',
10:17:14  35  	  data_table_name => '&bldtable',
10:17:14  36  	  tail_frac	  => 0.025,
10:17:14  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:17:14  38  
10:17:14  39  	-- xform input data to winsorized data
10:17:14  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
10:17:14  41  	  clip_table_name => 'svmc_clip',
10:17:14  42  	  data_table_name => '&bldtable',
10:17:14  43  	  xform_view_name => 'svmc_winsor');
10:17:14  44  
10:17:14  45  	-- create normalization table
10:17:14  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
10:17:14  47  
10:17:14  48  	-- populate normalization table based on winsorized data
10:17:14  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
10:17:14  50  	  norm_table_name => 'svmc_norm',
10:17:14  51  	  data_table_name => 'svmc_winsor',
10:17:14  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:17:14  53  
10:17:14  54  	-- normalize the original data
10:17:14  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
10:17:14  56  	  norm_table_name => 'svmc_norm',
10:17:14  57  	  data_table_name => '&bldtable',
10:17:14  58  	  xform_view_name => 'svmc_build_prep');
10:17:14  59  END;
10:17:14  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.86
10:17:33 SQL> 
10:17:33 SQL> ---------------------
10:17:33 SQL> -- CREATE A NEW MODEL
10:17:33 SQL> --
10:17:33 SQL> -- Cleanup old model with the same name for repeat runs
10:17:33 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
10:17:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:17:33   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.04
10:17:34 SQL> 
10:17:34 SQL> -- Build a new SVM Model
10:17:34 SQL> BEGIN
10:17:34   2  	DBMS_DATA_MINING.CREATE_MODEL(
10:17:34   3  	  model_name	      => '&model_name',
10:17:34   4  	  mining_function     => dbms_data_mining.classification,
10:17:34   5  	  data_table_name     => 'svmc_build_prep',
10:17:34   6  	  case_id_column_name => '&case_id',
10:17:34   7  	  target_column_name  => '&target',
10:17:34   8  	  settings_table_name => 'svmc_settings');
10:17:34   9  END;
10:17:34  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:31.08
10:18:05 SQL> 
10:18:05 SQL> -----------------------------------------------------------------------
10:18:05 SQL> --			       APPLY/score THE MODEL
10:18:05 SQL> -----------------------------------------------------------------------
10:18:05 SQL> 
10:18:05 SQL> -- Cleanup old scoring data preparation objects for repeat runs
10:18:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
10:18:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:18:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
10:18:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
10:18:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:18:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:18:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
10:18:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:18:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:18:05 SQL> -----------------------
10:18:05 SQL> -- PREPARE SCORING DATA
10:18:05 SQL> --
10:18:05 SQL> -- If the data for model creation has been prepared, then the data
10:18:05 SQL> -- to be scored using the model must be prepared in the same manner
10:18:05 SQL> -- in order to obtain meaningful results.
10:18:05 SQL> --
10:18:05 SQL> -- 1. Missing Value treatment for all Predictors and
10:18:05 SQL> -- 2. Normalization
10:18:05 SQL> -- No outlier treatment will be performed during test and apply. The
10:18:05 SQL> -- normalization step is sufficient, since the normalization parameters
10:18:05 SQL> -- already capture the effects of outlier treatment done with build data.
10:18:05 SQL> --
10:18:05 SQL> BEGIN
10:18:05   2  	-- Xform Test data to replace missing values
10:18:05   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
10:18:05   4  	  miss_table_name => 'svmc_miss_num',
10:18:05   5  	  data_table_name => '&scoretable',
10:18:05   6  	  xform_view_name => 'xformed_apply_miss_num');
10:18:05   7  
10:18:05   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
10:18:05   9  	  miss_table_name => 'svmc_miss_cat',
10:18:05  10  	  data_table_name => '&scoretable',
10:18:05  11  	  xform_view_name => 'xformed_apply_miss_cat');
10:18:05  12  
10:18:05  13  	-- Normalize the data to be scored
10:18:05  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
10:18:05  15  	  norm_table_name => 'svmc_norm',
10:18:05  16  	  data_table_name => '&scoretable',
10:18:05  17  	  xform_view_name => 'svmc_apply_prep');
10:18:05  18  END;
10:18:05  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.32
10:18:06 SQL> 
10:18:06 SQL> -- Use same model_name used in score_gattn.sql
10:18:06 SQL> DEFINE model_name = 'forex15'
10:18:06 SQL> 
10:18:06 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
10:18:06 SQL> 
10:18:06 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
10:18:06   2  SELECT
10:18:06   3  prdate
10:18:06   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
10:18:06   5  ,sysdate
10:18:06   6  ,SUBSTR(prdate,1,3)pair
10:18:06   7  ,SUBSTR(prdate,4,19)ydate
10:18:06   8  FROM svmc_apply_prep
10:18:06   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
10:18:07 SQL> @aud_score1day_gattn.sql	2011-01-07 10:00:00
10:18:07 SQL> --
10:18:07 SQL> -- aud_score1day_gattn.sql
10:18:07 SQL> --
10:18:07 SQL> 
10:18:07 SQL> CREATE OR REPLACE VIEW sme AS
10:18:07   2  SELECT
10:18:07   3  'aud'||m.ydate prdate
10:18:07   4  ,NULL gattn
10:18:07   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
10:18:07   6  ,eur_g00
10:18:07   7  ,eur_g01
10:18:07   8  ,eur_g02
10:18:07   9  ,eur_g03
10:18:07  10  ,eur_g04
10:18:07  11  ,eur_g05
10:18:07  12  ,eur_g06
10:18:07  13  ,eur_g07
10:18:07  14  ,eur_g08
10:18:07  15  ,eur_g09
10:18:07  16  ,eur_g10
10:18:07  17  ,eur_g11
10:18:07  18  ,eur_g12
10:18:07  19  ,eur_g13
10:18:07  20  ,eur_g14
10:18:07  21  ,eur_g15
10:18:07  22  ,eur_g16
10:18:07  23  ,eur_g17
10:18:07  24  ,eur_g18
10:18:07  25  ,eur_g19
10:18:07  26  ,eur_g20
10:18:07  27  ,eur_g21
10:18:07  28  ,eur_g22
10:18:07  29  ,eur_g23
10:18:07  30  ,eur_g24
10:18:07  31  ,eur_g25
10:18:07  32  ,eur_g26
10:18:07  33  ,eur_g27
10:18:07  34  ,eur_g28
10:18:07  35  ,eur_g29
10:18:07  36  ,eur_g30
10:18:07  37  ,eur_g31
10:18:07  38  ,eur_g32
10:18:07  39  ,eur_g33
10:18:07  40  ,eur_g34
10:18:07  41  ,eur_g35
10:18:07  42  ,eur_g36
10:18:07  43  ,eur_g37
10:18:07  44  ,eur_g38
10:18:07  45  ,eur_g39
10:18:07  46  ,eur_g40
10:18:07  47  ,eur_g41
10:18:07  48  ,aud_g00
10:18:07  49  ,aud_g01
10:18:07  50  ,aud_g02
10:18:07  51  ,aud_g03
10:18:07  52  ,aud_g04
10:18:07  53  ,aud_g05
10:18:07  54  ,aud_g06
10:18:07  55  ,aud_g07
10:18:07  56  ,aud_g08
10:18:07  57  ,aud_g09
10:18:07  58  ,aud_g10
10:18:07  59  ,aud_g11
10:18:07  60  ,aud_g12
10:18:07  61  ,aud_g13
10:18:07  62  ,aud_g14
10:18:07  63  ,aud_g15
10:18:07  64  ,aud_g16
10:18:07  65  ,aud_g17
10:18:07  66  ,aud_g18
10:18:07  67  ,aud_g19
10:18:07  68  ,aud_g20
10:18:07  69  ,aud_g21
10:18:07  70  ,aud_g22
10:18:07  71  ,aud_g23
10:18:07  72  ,aud_g24
10:18:07  73  ,aud_g25
10:18:07  74  ,aud_g26
10:18:07  75  ,aud_g27
10:18:07  76  ,aud_g28
10:18:07  77  ,aud_g29
10:18:07  78  ,aud_g30
10:18:07  79  ,aud_g31
10:18:07  80  ,aud_g32
10:18:07  81  ,aud_g33
10:18:07  82  ,aud_g34
10:18:07  83  ,aud_g35
10:18:07  84  ,aud_g36
10:18:07  85  ,aud_g37
10:18:07  86  ,aud_g38
10:18:07  87  ,aud_g39
10:18:07  88  ,aud_g40
10:18:07  89  ,aud_g41
10:18:07  90  ,gbp_g00
10:18:07  91  ,gbp_g01
10:18:07  92  ,gbp_g02
10:18:07  93  ,gbp_g03
10:18:07  94  ,gbp_g04
10:18:07  95  ,gbp_g05
10:18:07  96  ,gbp_g06
10:18:07  97  ,gbp_g07
10:18:07  98  ,gbp_g08
10:18:07  99  ,gbp_g09
10:18:07 100  ,gbp_g10
10:18:07 101  ,gbp_g11
10:18:07 102  ,gbp_g12
10:18:07 103  ,gbp_g13
10:18:07 104  ,gbp_g14
10:18:07 105  ,gbp_g15
10:18:07 106  ,gbp_g16
10:18:07 107  ,gbp_g17
10:18:07 108  ,gbp_g18
10:18:07 109  ,gbp_g19
10:18:07 110  ,gbp_g20
10:18:07 111  ,gbp_g21
10:18:07 112  ,gbp_g22
10:18:07 113  ,gbp_g23
10:18:07 114  ,gbp_g24
10:18:07 115  ,gbp_g25
10:18:07 116  ,gbp_g26
10:18:07 117  ,gbp_g27
10:18:07 118  ,gbp_g28
10:18:07 119  ,gbp_g29
10:18:07 120  ,gbp_g30
10:18:07 121  ,gbp_g31
10:18:07 122  ,gbp_g32
10:18:07 123  ,gbp_g33
10:18:07 124  ,gbp_g34
10:18:07 125  ,gbp_g35
10:18:07 126  ,gbp_g36
10:18:07 127  ,gbp_g37
10:18:07 128  ,gbp_g38
10:18:07 129  ,gbp_g39
10:18:07 130  ,gbp_g40
10:18:07 131  ,gbp_g41
10:18:07 132  ,jpy_g00
10:18:07 133  ,jpy_g01
10:18:07 134  ,jpy_g02
10:18:07 135  ,jpy_g03
10:18:07 136  ,jpy_g04
10:18:07 137  ,jpy_g05
10:18:07 138  ,jpy_g06
10:18:07 139  ,jpy_g07
10:18:07 140  ,jpy_g08
10:18:07 141  ,jpy_g09
10:18:07 142  ,jpy_g10
10:18:07 143  ,jpy_g11
10:18:07 144  ,jpy_g12
10:18:07 145  ,jpy_g13
10:18:07 146  ,jpy_g14
10:18:07 147  ,jpy_g15
10:18:07 148  ,jpy_g16
10:18:07 149  ,jpy_g17
10:18:07 150  ,jpy_g18
10:18:07 151  ,jpy_g19
10:18:07 152  ,jpy_g20
10:18:07 153  ,jpy_g21
10:18:07 154  ,jpy_g22
10:18:07 155  ,jpy_g23
10:18:07 156  ,jpy_g24
10:18:07 157  ,jpy_g25
10:18:07 158  ,jpy_g26
10:18:07 159  ,jpy_g27
10:18:07 160  ,jpy_g28
10:18:07 161  ,jpy_g29
10:18:07 162  ,jpy_g30
10:18:07 163  ,jpy_g31
10:18:07 164  ,jpy_g32
10:18:07 165  ,jpy_g33
10:18:07 166  ,jpy_g34
10:18:07 167  ,jpy_g35
10:18:07 168  ,jpy_g36
10:18:07 169  ,jpy_g37
10:18:07 170  ,jpy_g38
10:18:07 171  ,jpy_g39
10:18:07 172  ,jpy_g40
10:18:07 173  ,jpy_g41
10:18:07 174  ,cad_g00
10:18:07 175  ,cad_g01
10:18:07 176  ,cad_g02
10:18:07 177  ,cad_g03
10:18:07 178  ,cad_g04
10:18:07 179  ,cad_g05
10:18:07 180  ,cad_g06
10:18:07 181  ,cad_g07
10:18:07 182  ,cad_g08
10:18:07 183  ,cad_g09
10:18:07 184  ,cad_g10
10:18:07 185  ,cad_g11
10:18:07 186  ,cad_g12
10:18:07 187  ,cad_g13
10:18:07 188  ,cad_g14
10:18:07 189  ,cad_g15
10:18:07 190  ,cad_g16
10:18:07 191  ,cad_g17
10:18:07 192  ,cad_g18
10:18:07 193  ,cad_g19
10:18:07 194  ,cad_g20
10:18:07 195  ,cad_g21
10:18:07 196  ,cad_g22
10:18:07 197  ,cad_g23
10:18:07 198  ,cad_g24
10:18:07 199  ,cad_g25
10:18:07 200  ,cad_g26
10:18:07 201  ,cad_g27
10:18:07 202  ,cad_g28
10:18:07 203  ,cad_g29
10:18:07 204  ,cad_g30
10:18:07 205  ,cad_g31
10:18:07 206  ,cad_g32
10:18:07 207  ,cad_g33
10:18:07 208  ,cad_g34
10:18:07 209  ,cad_g35
10:18:07 210  ,cad_g36
10:18:07 211  ,cad_g37
10:18:07 212  ,cad_g38
10:18:07 213  ,cad_g39
10:18:07 214  ,cad_g40
10:18:07 215  ,cad_g41
10:18:07 216  ,chf_g00
10:18:07 217  ,chf_g01
10:18:07 218  ,chf_g02
10:18:07 219  ,chf_g03
10:18:07 220  ,chf_g04
10:18:07 221  ,chf_g05
10:18:07 222  ,chf_g06
10:18:07 223  ,chf_g07
10:18:07 224  ,chf_g08
10:18:07 225  ,chf_g09
10:18:07 226  ,chf_g10
10:18:07 227  ,chf_g11
10:18:07 228  ,chf_g12
10:18:07 229  ,chf_g13
10:18:07 230  ,chf_g14
10:18:07 231  ,chf_g15
10:18:07 232  ,chf_g16
10:18:07 233  ,chf_g17
10:18:07 234  ,chf_g18
10:18:07 235  ,chf_g19
10:18:07 236  ,chf_g20
10:18:07 237  ,chf_g21
10:18:07 238  ,chf_g22
10:18:07 239  ,chf_g23
10:18:07 240  ,chf_g24
10:18:07 241  ,chf_g25
10:18:07 242  ,chf_g26
10:18:07 243  ,chf_g27
10:18:07 244  ,chf_g28
10:18:07 245  ,chf_g29
10:18:07 246  ,chf_g30
10:18:07 247  ,chf_g31
10:18:07 248  ,chf_g32
10:18:07 249  ,chf_g33
10:18:07 250  ,chf_g34
10:18:07 251  ,chf_g35
10:18:07 252  ,chf_g36
10:18:07 253  ,chf_g37
10:18:07 254  ,chf_g38
10:18:07 255  ,chf_g39
10:18:07 256  ,chf_g40
10:18:07 257  ,chf_g41
10:18:07 258  FROM aud_ms6 m
10:18:07 259  WHERE m.ydate = '&1'||' '||'&2'
10:18:07 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'10:00:00'

View created.

Elapsed: 00:00:00.13
10:18:07 SQL> 
10:18:07 SQL> -- rpt
10:18:07 SQL> -- We should see just 1 row:
10:18:07 SQL> 
10:18:07 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
10:18:07 SQL> 
10:18:07 SQL> -- Build the model:
10:18:07 SQL> CREATE OR REPLACE VIEW bme AS
10:18:07   2  SELECT
10:18:07   3  'aud'||m.ydate prdate
10:18:07   4  ,gattn
10:18:07   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
10:18:07   6  ,eur_g00
10:18:07   7  ,eur_g01
10:18:07   8  ,eur_g02
10:18:07   9  ,eur_g03
10:18:07  10  ,eur_g04
10:18:07  11  ,eur_g05
10:18:07  12  ,eur_g06
10:18:07  13  ,eur_g07
10:18:07  14  ,eur_g08
10:18:07  15  ,eur_g09
10:18:07  16  ,eur_g10
10:18:07  17  ,eur_g11
10:18:07  18  ,eur_g12
10:18:07  19  ,eur_g13
10:18:07  20  ,eur_g14
10:18:07  21  ,eur_g15
10:18:07  22  ,eur_g16
10:18:07  23  ,eur_g17
10:18:07  24  ,eur_g18
10:18:07  25  ,eur_g19
10:18:07  26  ,eur_g20
10:18:07  27  ,eur_g21
10:18:07  28  ,eur_g22
10:18:07  29  ,eur_g23
10:18:07  30  ,eur_g24
10:18:07  31  ,eur_g25
10:18:07  32  ,eur_g26
10:18:07  33  ,eur_g27
10:18:07  34  ,eur_g28
10:18:07  35  ,eur_g29
10:18:07  36  ,eur_g30
10:18:07  37  ,eur_g31
10:18:07  38  ,eur_g32
10:18:07  39  ,eur_g33
10:18:07  40  ,eur_g34
10:18:07  41  ,eur_g35
10:18:07  42  ,eur_g36
10:18:07  43  ,eur_g37
10:18:07  44  ,eur_g38
10:18:07  45  ,eur_g39
10:18:07  46  ,eur_g40
10:18:07  47  ,eur_g41
10:18:07  48  ,aud_g00
10:18:07  49  ,aud_g01
10:18:07  50  ,aud_g02
10:18:07  51  ,aud_g03
10:18:07  52  ,aud_g04
10:18:07  53  ,aud_g05
10:18:07  54  ,aud_g06
10:18:07  55  ,aud_g07
10:18:07  56  ,aud_g08
10:18:07  57  ,aud_g09
10:18:07  58  ,aud_g10
10:18:07  59  ,aud_g11
10:18:07  60  ,aud_g12
10:18:07  61  ,aud_g13
10:18:07  62  ,aud_g14
10:18:07  63  ,aud_g15
10:18:07  64  ,aud_g16
10:18:07  65  ,aud_g17
10:18:07  66  ,aud_g18
10:18:07  67  ,aud_g19
10:18:07  68  ,aud_g20
10:18:07  69  ,aud_g21
10:18:07  70  ,aud_g22
10:18:07  71  ,aud_g23
10:18:07  72  ,aud_g24
10:18:07  73  ,aud_g25
10:18:07  74  ,aud_g26
10:18:07  75  ,aud_g27
10:18:07  76  ,aud_g28
10:18:07  77  ,aud_g29
10:18:07  78  ,aud_g30
10:18:07  79  ,aud_g31
10:18:07  80  ,aud_g32
10:18:07  81  ,aud_g33
10:18:07  82  ,aud_g34
10:18:07  83  ,aud_g35
10:18:07  84  ,aud_g36
10:18:07  85  ,aud_g37
10:18:07  86  ,aud_g38
10:18:07  87  ,aud_g39
10:18:07  88  ,aud_g40
10:18:07  89  ,aud_g41
10:18:07  90  ,gbp_g00
10:18:07  91  ,gbp_g01
10:18:07  92  ,gbp_g02
10:18:07  93  ,gbp_g03
10:18:07  94  ,gbp_g04
10:18:07  95  ,gbp_g05
10:18:07  96  ,gbp_g06
10:18:07  97  ,gbp_g07
10:18:07  98  ,gbp_g08
10:18:07  99  ,gbp_g09
10:18:07 100  ,gbp_g10
10:18:07 101  ,gbp_g11
10:18:07 102  ,gbp_g12
10:18:07 103  ,gbp_g13
10:18:07 104  ,gbp_g14
10:18:07 105  ,gbp_g15
10:18:07 106  ,gbp_g16
10:18:07 107  ,gbp_g17
10:18:07 108  ,gbp_g18
10:18:07 109  ,gbp_g19
10:18:07 110  ,gbp_g20
10:18:07 111  ,gbp_g21
10:18:07 112  ,gbp_g22
10:18:07 113  ,gbp_g23
10:18:07 114  ,gbp_g24
10:18:07 115  ,gbp_g25
10:18:07 116  ,gbp_g26
10:18:07 117  ,gbp_g27
10:18:07 118  ,gbp_g28
10:18:07 119  ,gbp_g29
10:18:07 120  ,gbp_g30
10:18:07 121  ,gbp_g31
10:18:07 122  ,gbp_g32
10:18:07 123  ,gbp_g33
10:18:07 124  ,gbp_g34
10:18:07 125  ,gbp_g35
10:18:07 126  ,gbp_g36
10:18:07 127  ,gbp_g37
10:18:07 128  ,gbp_g38
10:18:07 129  ,gbp_g39
10:18:07 130  ,gbp_g40
10:18:07 131  ,gbp_g41
10:18:07 132  ,jpy_g00
10:18:07 133  ,jpy_g01
10:18:07 134  ,jpy_g02
10:18:07 135  ,jpy_g03
10:18:07 136  ,jpy_g04
10:18:07 137  ,jpy_g05
10:18:07 138  ,jpy_g06
10:18:07 139  ,jpy_g07
10:18:07 140  ,jpy_g08
10:18:07 141  ,jpy_g09
10:18:07 142  ,jpy_g10
10:18:07 143  ,jpy_g11
10:18:07 144  ,jpy_g12
10:18:07 145  ,jpy_g13
10:18:07 146  ,jpy_g14
10:18:07 147  ,jpy_g15
10:18:07 148  ,jpy_g16
10:18:07 149  ,jpy_g17
10:18:07 150  ,jpy_g18
10:18:07 151  ,jpy_g19
10:18:07 152  ,jpy_g20
10:18:07 153  ,jpy_g21
10:18:07 154  ,jpy_g22
10:18:07 155  ,jpy_g23
10:18:07 156  ,jpy_g24
10:18:07 157  ,jpy_g25
10:18:07 158  ,jpy_g26
10:18:07 159  ,jpy_g27
10:18:07 160  ,jpy_g28
10:18:07 161  ,jpy_g29
10:18:07 162  ,jpy_g30
10:18:07 163  ,jpy_g31
10:18:07 164  ,jpy_g32
10:18:07 165  ,jpy_g33
10:18:07 166  ,jpy_g34
10:18:07 167  ,jpy_g35
10:18:07 168  ,jpy_g36
10:18:07 169  ,jpy_g37
10:18:07 170  ,jpy_g38
10:18:07 171  ,jpy_g39
10:18:07 172  ,jpy_g40
10:18:07 173  ,jpy_g41
10:18:07 174  ,cad_g00
10:18:07 175  ,cad_g01
10:18:07 176  ,cad_g02
10:18:07 177  ,cad_g03
10:18:07 178  ,cad_g04
10:18:07 179  ,cad_g05
10:18:07 180  ,cad_g06
10:18:07 181  ,cad_g07
10:18:07 182  ,cad_g08
10:18:07 183  ,cad_g09
10:18:07 184  ,cad_g10
10:18:07 185  ,cad_g11
10:18:07 186  ,cad_g12
10:18:07 187  ,cad_g13
10:18:07 188  ,cad_g14
10:18:07 189  ,cad_g15
10:18:07 190  ,cad_g16
10:18:07 191  ,cad_g17
10:18:07 192  ,cad_g18
10:18:07 193  ,cad_g19
10:18:07 194  ,cad_g20
10:18:07 195  ,cad_g21
10:18:07 196  ,cad_g22
10:18:07 197  ,cad_g23
10:18:07 198  ,cad_g24
10:18:07 199  ,cad_g25
10:18:07 200  ,cad_g26
10:18:07 201  ,cad_g27
10:18:07 202  ,cad_g28
10:18:07 203  ,cad_g29
10:18:07 204  ,cad_g30
10:18:07 205  ,cad_g31
10:18:07 206  ,cad_g32
10:18:07 207  ,cad_g33
10:18:07 208  ,cad_g34
10:18:07 209  ,cad_g35
10:18:07 210  ,cad_g36
10:18:07 211  ,cad_g37
10:18:07 212  ,cad_g38
10:18:07 213  ,cad_g39
10:18:07 214  ,cad_g40
10:18:07 215  ,cad_g41
10:18:07 216  ,chf_g00
10:18:07 217  ,chf_g01
10:18:07 218  ,chf_g02
10:18:07 219  ,chf_g03
10:18:07 220  ,chf_g04
10:18:07 221  ,chf_g05
10:18:07 222  ,chf_g06
10:18:07 223  ,chf_g07
10:18:07 224  ,chf_g08
10:18:07 225  ,chf_g09
10:18:07 226  ,chf_g10
10:18:07 227  ,chf_g11
10:18:07 228  ,chf_g12
10:18:07 229  ,chf_g13
10:18:07 230  ,chf_g14
10:18:07 231  ,chf_g15
10:18:07 232  ,chf_g16
10:18:07 233  ,chf_g17
10:18:07 234  ,chf_g18
10:18:07 235  ,chf_g19
10:18:07 236  ,chf_g20
10:18:07 237  ,chf_g21
10:18:07 238  ,chf_g22
10:18:07 239  ,chf_g23
10:18:07 240  ,chf_g24
10:18:07 241  ,chf_g25
10:18:07 242  ,chf_g26
10:18:07 243  ,chf_g27
10:18:07 244  ,chf_g28
10:18:07 245  ,chf_g29
10:18:07 246  ,chf_g30
10:18:07 247  ,chf_g31
10:18:07 248  ,chf_g32
10:18:07 249  ,chf_g33
10:18:07 250  ,chf_g34
10:18:07 251  ,chf_g35
10:18:07 252  ,chf_g36
10:18:07 253  ,chf_g37
10:18:07 254  ,chf_g38
10:18:07 255  ,chf_g39
10:18:07 256  ,chf_g40
10:18:07 257  ,chf_g41
10:18:07 258  FROM aud_ms6 m
10:18:07 259  WHERE gattn IN('nup','up')
10:18:07 260  AND 1+m.ydate < '&1'||' '||'&2'
10:18:07 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'10:00:00'

View created.

Elapsed: 00:00:00.11
10:18:07 SQL> 
10:18:07 SQL> -- rpt
10:18:07 SQL> 
10:18:07 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12887
up	     6623

Elapsed: 00:00:00.03
10:18:07 SQL> 
10:18:07 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-06 09:55:00

Elapsed: 00:00:00.04
10:18:07 SQL> 
10:18:07 SQL> -- Now build model from bme and score sme
10:18:07 SQL> @score1gattn.sql
10:18:07 SQL> -- score1gattn.sql
10:18:07 SQL> 
10:18:07 SQL> -- Does the 1st SVM score
10:18:07 SQL> 
10:18:07 SQL> -- Fill up svmc_apply_prep
10:18:07 SQL> @score_gattn.sql
10:18:07 SQL> --
10:18:07 SQL> -- score_gattn.sql
10:18:07 SQL> --
10:18:07 SQL> 
10:18:07 SQL> -- usage: score_gattn.sql
10:18:07 SQL> 
10:18:07 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
10:18:07 SQL> 
10:18:07 SQL> DEFINE target	= 'gattn'
10:18:07 SQL> DEFINE model_name = 'forex15'
10:18:07 SQL> DEFINE bldtable	= 'bme'
10:18:07 SQL> DEFINE scoretable = 'sme'
10:18:07 SQL> DEFINE case_id	= 'prdate'
10:18:07 SQL> 
10:18:07 SQL> -- Define a variable to help me exclude some columns from some data mining calls
10:18:07 SQL> DEFINE exclude1 = "'&target','&case_id'"
10:18:07 SQL> 
10:18:07 SQL> -- Builds an SVM model using pl/sql.
10:18:07 SQL> 
10:18:07 SQL> -----------------------------------------------------------------------
10:18:07 SQL> --			    BUILD THE MODEL
10:18:07 SQL> -----------------------------------------------------------------------
10:18:07 SQL> 
10:18:07 SQL> -- Cleanup old build data preparation objects for repeat runs
10:18:07 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
10:18:07 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
10:18:07 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
10:18:07 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
10:18:07 SQL> 
10:18:07 SQL> 
10:18:07 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
10:18:07 SQL> --
10:18:07 SQL> -- DROP	TABLE svmc_settings ;
10:18:07 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
10:18:07 SQL> -- DELETE svmc_settings;
10:18:07 SQL> 
10:18:07 SQL> -- The default classification algorithm is Naive Bayes. So override
10:18:07 SQL> -- this choice to SVM using a settings table.
10:18:07 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
10:18:07 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
10:18:07 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
10:18:07 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
10:18:07 SQL> -- models.
10:18:07 SQL> --
10:18:07 SQL> 
10:18:07 SQL> -- Do this once and then comment it out.
10:18:07 SQL> -- That makes script go faster.
10:18:07 SQL> -- BEGIN
10:18:07 SQL> -- -- Populate settings table
10:18:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:18:07 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
10:18:07 SQL> --
10:18:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:18:07 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
10:18:07 SQL> --
10:18:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
10:18:07 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
10:18:07 SQL> --   COMMIT;
10:18:07 SQL> -- END;
10:18:07 SQL> -- /
10:18:07 SQL> 
10:18:07 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
10:18:07 SQL> 
10:18:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
10:18:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:18:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
10:18:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
10:18:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:18:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
10:18:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
10:18:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:18:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
10:18:07 SQL> 
10:18:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
10:18:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:18:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
10:18:07 SQL> 
10:18:07 SQL> --------------------------------
10:18:07 SQL> -- PREPARE BUILD (TRAINING) DATA
10:18:07 SQL> --
10:18:07 SQL> 
10:18:07 SQL> -- 1. Missing Value treatment for all Predictors and
10:18:07 SQL> -- 2. Outlier Treatment and
10:18:07 SQL> -- 3. Normalization are performed below.
10:18:07 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
10:18:07 SQL> --    normalized here.
10:18:07 SQL> 
10:18:07 SQL> BEGIN
10:18:07   2  	-- Perform missing value treatment for all predictors
10:18:07   3  	-- create miss tables
10:18:07   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
10:18:07   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
10:18:07   6  
10:18:07   7  	-- populate miss tables
10:18:07   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
10:18:07   9  	  miss_table_name => 'svmc_miss_num',
10:18:07  10  	  data_table_name => '&bldtable',
10:18:07  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:18:07  12  
10:18:07  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
10:18:07  14  	  miss_table_name => 'svmc_miss_cat',
10:18:07  15  	  data_table_name => '&bldtable',
10:18:07  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:18:07  17  
10:18:07  18  	-- xform input data to replace missing values
10:18:07  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
10:18:07  20  	  miss_table_name => 'svmc_miss_num',
10:18:07  21  	  data_table_name => '&bldtable',
10:18:07  22  	  xform_view_name => 'xformed_build_miss_num');
10:18:07  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
10:18:07  24  	  miss_table_name => 'svmc_miss_cat',
10:18:07  25  	  data_table_name => '&bldtable',
10:18:07  26  	  xform_view_name => 'xformed_build_miss_cat');
10:18:07  27  
10:18:07  28  	-- Perform outlier treatment.
10:18:07  29  	-- create clip table
10:18:07  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
10:18:07  31  
10:18:07  32  	-- populate clip table
10:18:07  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
10:18:07  34  	  clip_table_name => 'svmc_clip',
10:18:07  35  	  data_table_name => '&bldtable',
10:18:07  36  	  tail_frac	  => 0.025,
10:18:07  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:18:07  38  
10:18:07  39  	-- xform input data to winsorized data
10:18:07  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
10:18:07  41  	  clip_table_name => 'svmc_clip',
10:18:07  42  	  data_table_name => '&bldtable',
10:18:07  43  	  xform_view_name => 'svmc_winsor');
10:18:07  44  
10:18:07  45  	-- create normalization table
10:18:07  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
10:18:07  47  
10:18:07  48  	-- populate normalization table based on winsorized data
10:18:07  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
10:18:07  50  	  norm_table_name => 'svmc_norm',
10:18:07  51  	  data_table_name => 'svmc_winsor',
10:18:07  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
10:18:07  53  
10:18:07  54  	-- normalize the original data
10:18:07  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
10:18:07  56  	  norm_table_name => 'svmc_norm',
10:18:07  57  	  data_table_name => '&bldtable',
10:18:07  58  	  xform_view_name => 'svmc_build_prep');
10:18:07  59  END;
10:18:07  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.81
10:18:26 SQL> 
10:18:26 SQL> ---------------------
10:18:26 SQL> -- CREATE A NEW MODEL
10:18:26 SQL> --
10:18:26 SQL> -- Cleanup old model with the same name for repeat runs
10:18:26 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
10:18:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:18:26   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.01
10:18:27 SQL> 
10:18:27 SQL> -- Build a new SVM Model
10:18:27 SQL> BEGIN
10:18:27   2  	DBMS_DATA_MINING.CREATE_MODEL(
10:18:27   3  	  model_name	      => '&model_name',
10:18:27   4  	  mining_function     => dbms_data_mining.classification,
10:18:27   5  	  data_table_name     => 'svmc_build_prep',
10:18:27   6  	  case_id_column_name => '&case_id',
10:18:27   7  	  target_column_name  => '&target',
10:18:27   8  	  settings_table_name => 'svmc_settings');
10:18:27   9  END;
10:18:27  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:30.01
10:18:57 SQL> 
10:18:57 SQL> -----------------------------------------------------------------------
10:18:57 SQL> --			       APPLY/score THE MODEL
10:18:57 SQL> -----------------------------------------------------------------------
10:18:57 SQL> 
10:18:57 SQL> -- Cleanup old scoring data preparation objects for repeat runs
10:18:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
10:18:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:18:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
10:18:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
10:18:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:18:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:18:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
10:18:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
10:18:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
10:18:57 SQL> -----------------------
10:18:57 SQL> -- PREPARE SCORING DATA
10:18:57 SQL> --
10:18:57 SQL> -- If the data for model creation has been prepared, then the data
10:18:57 SQL> -- to be scored using the model must be prepared in the same manner
10:18:57 SQL> -- in order to obtain meaningful results.
10:18:57 SQL> --
10:18:57 SQL> -- 1. Missing Value treatment for all Predictors and
10:18:57 SQL> -- 2. Normalization
10:18:57 SQL> -- No outlier treatment will be performed during test and apply. The
10:18:57 SQL> -- normalization step is sufficient, since the normalization parameters
10:18:57 SQL> -- already capture the effects of outlier treatment done with build data.
10:18:57 SQL> --
10:18:57 SQL> BEGIN
10:18:57   2  	-- Xform Test data to replace missing values
10:18:57   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
10:18:57   4  	  miss_table_name => 'svmc_miss_num',
10:18:57   5  	  data_table_name => '&scoretable',
10:18:57   6  	  xform_view_name => 'xformed_apply_miss_num');
10:18:57   7  
10:18:57   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
10:18:57   9  	  miss_table_name => 'svmc_miss_cat',
10:18:57  10  	  data_table_name => '&scoretable',
10:18:57  11  	  xform_view_name => 'xformed_apply_miss_cat');
10:18:57  12  
10:18:57  13  	-- Normalize the data to be scored
10:18:57  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
10:18:57  15  	  norm_table_name => 'svmc_norm',
10:18:57  16  	  data_table_name => '&scoretable',
10:18:57  17  	  xform_view_name => 'svmc_apply_prep');
10:18:57  18  END;
10:18:57  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.52
10:18:59 SQL> 
10:18:59 SQL> -- Use same model_name used in score_gattn.sql
10:18:59 SQL> DEFINE model_name = 'forex15'
10:18:59 SQL> 
10:18:59 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
10:18:59 SQL> 
10:18:59 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
10:18:59   2  SELECT
10:18:59   3  prdate
10:18:59   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
10:18:59   5  ,sysdate
10:18:59   6  ,SUBSTR(prdate,1,3)pair
10:18:59   7  ,SUBSTR(prdate,4,19)ydate
10:18:59   8  FROM svmc_apply_prep
10:18:59   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
10:18:59 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
