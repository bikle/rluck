
SQL*Plus: Release 11.2.0.1.0 Production on Wed Dec 29 02:11:31 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

02:11:31 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
02:11:31 SQL> 02:11:31 SQL> @aud_score1day.sql  2010-12-29 01:50:00
02:11:31 SQL> --
02:11:31 SQL> -- aud_score1day.sql
02:11:31 SQL> --
02:11:31 SQL> 
02:11:31 SQL> CREATE OR REPLACE VIEW sme AS
02:11:31   2  SELECT
02:11:31   3  'aud'||m.ydate prdate
02:11:31   4  ,NULL gatt
02:11:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:11:31   6  ,eur_g00
02:11:31   7  ,eur_g01
02:11:31   8  ,eur_g02
02:11:31   9  ,eur_g03
02:11:31  10  ,eur_g04
02:11:31  11  ,eur_g05
02:11:31  12  ,eur_g06
02:11:31  13  ,eur_g07
02:11:31  14  ,eur_g08
02:11:31  15  ,eur_g09
02:11:31  16  ,eur_g10
02:11:31  17  ,eur_g11
02:11:31  18  ,eur_g12
02:11:31  19  ,eur_g13
02:11:31  20  ,eur_g14
02:11:31  21  ,eur_g15
02:11:31  22  ,eur_g16
02:11:31  23  ,eur_g17
02:11:31  24  ,eur_g18
02:11:31  25  ,eur_g19
02:11:31  26  ,eur_g20
02:11:31  27  ,eur_g21
02:11:31  28  ,eur_g22
02:11:31  29  ,eur_g23
02:11:31  30  ,eur_g24
02:11:31  31  ,eur_g25
02:11:31  32  ,eur_g26
02:11:31  33  ,eur_g27
02:11:31  34  ,eur_g28
02:11:31  35  ,eur_g29
02:11:31  36  ,eur_g30
02:11:31  37  ,eur_g31
02:11:31  38  ,eur_g32
02:11:31  39  ,eur_g33
02:11:31  40  ,eur_g34
02:11:31  41  ,eur_g35
02:11:31  42  ,eur_g36
02:11:31  43  ,eur_g37
02:11:31  44  ,eur_g38
02:11:31  45  ,eur_g39
02:11:31  46  ,eur_g40
02:11:31  47  ,eur_g41
02:11:31  48  ,aud_g00
02:11:31  49  ,aud_g01
02:11:31  50  ,aud_g02
02:11:31  51  ,aud_g03
02:11:31  52  ,aud_g04
02:11:31  53  ,aud_g05
02:11:31  54  ,aud_g06
02:11:31  55  ,aud_g07
02:11:31  56  ,aud_g08
02:11:31  57  ,aud_g09
02:11:31  58  ,aud_g10
02:11:31  59  ,aud_g11
02:11:31  60  ,aud_g12
02:11:31  61  ,aud_g13
02:11:31  62  ,aud_g14
02:11:31  63  ,aud_g15
02:11:31  64  ,aud_g16
02:11:31  65  ,aud_g17
02:11:31  66  ,aud_g18
02:11:31  67  ,aud_g19
02:11:31  68  ,aud_g20
02:11:31  69  ,aud_g21
02:11:31  70  ,aud_g22
02:11:31  71  ,aud_g23
02:11:31  72  ,aud_g24
02:11:31  73  ,aud_g25
02:11:31  74  ,aud_g26
02:11:31  75  ,aud_g27
02:11:31  76  ,aud_g28
02:11:31  77  ,aud_g29
02:11:31  78  ,aud_g30
02:11:31  79  ,aud_g31
02:11:31  80  ,aud_g32
02:11:31  81  ,aud_g33
02:11:31  82  ,aud_g34
02:11:31  83  ,aud_g35
02:11:31  84  ,aud_g36
02:11:31  85  ,aud_g37
02:11:31  86  ,aud_g38
02:11:31  87  ,aud_g39
02:11:31  88  ,aud_g40
02:11:31  89  ,aud_g41
02:11:31  90  ,gbp_g00
02:11:31  91  ,gbp_g01
02:11:31  92  ,gbp_g02
02:11:31  93  ,gbp_g03
02:11:31  94  ,gbp_g04
02:11:31  95  ,gbp_g05
02:11:31  96  ,gbp_g06
02:11:31  97  ,gbp_g07
02:11:31  98  ,gbp_g08
02:11:31  99  ,gbp_g09
02:11:31 100  ,gbp_g10
02:11:31 101  ,gbp_g11
02:11:31 102  ,gbp_g12
02:11:31 103  ,gbp_g13
02:11:31 104  ,gbp_g14
02:11:31 105  ,gbp_g15
02:11:31 106  ,gbp_g16
02:11:31 107  ,gbp_g17
02:11:31 108  ,gbp_g18
02:11:31 109  ,gbp_g19
02:11:31 110  ,gbp_g20
02:11:31 111  ,gbp_g21
02:11:31 112  ,gbp_g22
02:11:31 113  ,gbp_g23
02:11:31 114  ,gbp_g24
02:11:31 115  ,gbp_g25
02:11:31 116  ,gbp_g26
02:11:31 117  ,gbp_g27
02:11:31 118  ,gbp_g28
02:11:31 119  ,gbp_g29
02:11:31 120  ,gbp_g30
02:11:31 121  ,gbp_g31
02:11:31 122  ,gbp_g32
02:11:31 123  ,gbp_g33
02:11:31 124  ,gbp_g34
02:11:31 125  ,gbp_g35
02:11:31 126  ,gbp_g36
02:11:31 127  ,gbp_g37
02:11:31 128  ,gbp_g38
02:11:31 129  ,gbp_g39
02:11:31 130  ,gbp_g40
02:11:31 131  ,gbp_g41
02:11:31 132  ,jpy_g00
02:11:31 133  ,jpy_g01
02:11:31 134  ,jpy_g02
02:11:31 135  ,jpy_g03
02:11:31 136  ,jpy_g04
02:11:31 137  ,jpy_g05
02:11:31 138  ,jpy_g06
02:11:31 139  ,jpy_g07
02:11:31 140  ,jpy_g08
02:11:31 141  ,jpy_g09
02:11:31 142  ,jpy_g10
02:11:31 143  ,jpy_g11
02:11:31 144  ,jpy_g12
02:11:31 145  ,jpy_g13
02:11:31 146  ,jpy_g14
02:11:31 147  ,jpy_g15
02:11:31 148  ,jpy_g16
02:11:31 149  ,jpy_g17
02:11:31 150  ,jpy_g18
02:11:31 151  ,jpy_g19
02:11:31 152  ,jpy_g20
02:11:31 153  ,jpy_g21
02:11:31 154  ,jpy_g22
02:11:31 155  ,jpy_g23
02:11:31 156  ,jpy_g24
02:11:31 157  ,jpy_g25
02:11:31 158  ,jpy_g26
02:11:31 159  ,jpy_g27
02:11:31 160  ,jpy_g28
02:11:31 161  ,jpy_g29
02:11:31 162  ,jpy_g30
02:11:31 163  ,jpy_g31
02:11:31 164  ,jpy_g32
02:11:31 165  ,jpy_g33
02:11:31 166  ,jpy_g34
02:11:31 167  ,jpy_g35
02:11:31 168  ,jpy_g36
02:11:31 169  ,jpy_g37
02:11:31 170  ,jpy_g38
02:11:31 171  ,jpy_g39
02:11:31 172  ,jpy_g40
02:11:31 173  ,jpy_g41
02:11:31 174  ,cad_g00
02:11:31 175  ,cad_g01
02:11:31 176  ,cad_g02
02:11:31 177  ,cad_g03
02:11:31 178  ,cad_g04
02:11:31 179  ,cad_g05
02:11:31 180  ,cad_g06
02:11:31 181  ,cad_g07
02:11:31 182  ,cad_g08
02:11:31 183  ,cad_g09
02:11:31 184  ,cad_g10
02:11:31 185  ,cad_g11
02:11:31 186  ,cad_g12
02:11:31 187  ,cad_g13
02:11:31 188  ,cad_g14
02:11:31 189  ,cad_g15
02:11:31 190  ,cad_g16
02:11:31 191  ,cad_g17
02:11:31 192  ,cad_g18
02:11:31 193  ,cad_g19
02:11:31 194  ,cad_g20
02:11:31 195  ,cad_g21
02:11:31 196  ,cad_g22
02:11:31 197  ,cad_g23
02:11:31 198  ,cad_g24
02:11:31 199  ,cad_g25
02:11:31 200  ,cad_g26
02:11:31 201  ,cad_g27
02:11:31 202  ,cad_g28
02:11:31 203  ,cad_g29
02:11:31 204  ,cad_g30
02:11:31 205  ,cad_g31
02:11:31 206  ,cad_g32
02:11:31 207  ,cad_g33
02:11:31 208  ,cad_g34
02:11:31 209  ,cad_g35
02:11:31 210  ,cad_g36
02:11:31 211  ,cad_g37
02:11:31 212  ,cad_g38
02:11:31 213  ,cad_g39
02:11:31 214  ,cad_g40
02:11:31 215  ,cad_g41
02:11:31 216  ,chf_g00
02:11:31 217  ,chf_g01
02:11:31 218  ,chf_g02
02:11:31 219  ,chf_g03
02:11:31 220  ,chf_g04
02:11:31 221  ,chf_g05
02:11:31 222  ,chf_g06
02:11:31 223  ,chf_g07
02:11:31 224  ,chf_g08
02:11:31 225  ,chf_g09
02:11:31 226  ,chf_g10
02:11:31 227  ,chf_g11
02:11:31 228  ,chf_g12
02:11:31 229  ,chf_g13
02:11:31 230  ,chf_g14
02:11:31 231  ,chf_g15
02:11:31 232  ,chf_g16
02:11:31 233  ,chf_g17
02:11:31 234  ,chf_g18
02:11:31 235  ,chf_g19
02:11:31 236  ,chf_g20
02:11:31 237  ,chf_g21
02:11:31 238  ,chf_g22
02:11:31 239  ,chf_g23
02:11:31 240  ,chf_g24
02:11:31 241  ,chf_g25
02:11:31 242  ,chf_g26
02:11:31 243  ,chf_g27
02:11:31 244  ,chf_g28
02:11:31 245  ,chf_g29
02:11:31 246  ,chf_g30
02:11:31 247  ,chf_g31
02:11:31 248  ,chf_g32
02:11:31 249  ,chf_g33
02:11:31 250  ,chf_g34
02:11:31 251  ,chf_g35
02:11:31 252  ,chf_g36
02:11:31 253  ,chf_g37
02:11:31 254  ,chf_g38
02:11:31 255  ,chf_g39
02:11:31 256  ,chf_g40
02:11:31 257  ,chf_g41
02:11:31 258  FROM aud_ms6 m
02:11:31 259  WHERE m.ydate = '&1'||' '||'&2'
02:11:31 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'01:50:00'

View created.

Elapsed: 00:00:00.13
02:11:31 SQL> 
02:11:31 SQL> -- rpt
02:11:31 SQL> -- We should see just 1 row:
02:11:31 SQL> 
02:11:31 SQL> SELECT COUNT(prdate) FROM sme
02:11:31   2  
02:11:31 SQL> -- Build the model:
02:11:31 SQL> CREATE OR REPLACE VIEW bme AS
02:11:31   2  SELECT
02:11:31   3  'aud'||m.ydate prdate
02:11:31   4  ,gatt
02:11:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:11:31   6  ,eur_g00
02:11:31   7  ,eur_g01
02:11:31   8  ,eur_g02
02:11:31   9  ,eur_g03
02:11:31  10  ,eur_g04
02:11:31  11  ,eur_g05
02:11:31  12  ,eur_g06
02:11:31  13  ,eur_g07
02:11:31  14  ,eur_g08
02:11:31  15  ,eur_g09
02:11:31  16  ,eur_g10
02:11:31  17  ,eur_g11
02:11:31  18  ,eur_g12
02:11:31  19  ,eur_g13
02:11:31  20  ,eur_g14
02:11:31  21  ,eur_g15
02:11:31  22  ,eur_g16
02:11:31  23  ,eur_g17
02:11:31  24  ,eur_g18
02:11:31  25  ,eur_g19
02:11:31  26  ,eur_g20
02:11:31  27  ,eur_g21
02:11:31  28  ,eur_g22
02:11:31  29  ,eur_g23
02:11:31  30  ,eur_g24
02:11:31  31  ,eur_g25
02:11:31  32  ,eur_g26
02:11:31  33  ,eur_g27
02:11:31  34  ,eur_g28
02:11:31  35  ,eur_g29
02:11:31  36  ,eur_g30
02:11:31  37  ,eur_g31
02:11:31  38  ,eur_g32
02:11:31  39  ,eur_g33
02:11:31  40  ,eur_g34
02:11:31  41  ,eur_g35
02:11:31  42  ,eur_g36
02:11:31  43  ,eur_g37
02:11:31  44  ,eur_g38
02:11:31  45  ,eur_g39
02:11:31  46  ,eur_g40
02:11:31  47  ,eur_g41
02:11:31  48  ,aud_g00
02:11:31  49  ,aud_g01
02:11:31  50  ,aud_g02
02:11:31  51  ,aud_g03
02:11:31  52  ,aud_g04
02:11:31  53  ,aud_g05
02:11:31  54  ,aud_g06
02:11:31  55  ,aud_g07
02:11:31  56  ,aud_g08
02:11:31  57  ,aud_g09
02:11:31  58  ,aud_g10
02:11:31  59  ,aud_g11
02:11:31  60  ,aud_g12
02:11:31  61  ,aud_g13
02:11:31  62  ,aud_g14
02:11:31  63  ,aud_g15
02:11:31  64  ,aud_g16
02:11:31  65  ,aud_g17
02:11:31  66  ,aud_g18
02:11:31  67  ,aud_g19
02:11:31  68  ,aud_g20
02:11:31  69  ,aud_g21
02:11:31  70  ,aud_g22
02:11:31  71  ,aud_g23
02:11:31  72  ,aud_g24
02:11:31  73  ,aud_g25
02:11:31  74  ,aud_g26
02:11:31  75  ,aud_g27
02:11:31  76  ,aud_g28
02:11:31  77  ,aud_g29
02:11:31  78  ,aud_g30
02:11:31  79  ,aud_g31
02:11:31  80  ,aud_g32
02:11:31  81  ,aud_g33
02:11:31  82  ,aud_g34
02:11:31  83  ,aud_g35
02:11:31  84  ,aud_g36
02:11:31  85  ,aud_g37
02:11:31  86  ,aud_g38
02:11:31  87  ,aud_g39
02:11:31  88  ,aud_g40
02:11:31  89  ,aud_g41
02:11:31  90  ,gbp_g00
02:11:31  91  ,gbp_g01
02:11:31  92  ,gbp_g02
02:11:31  93  ,gbp_g03
02:11:31  94  ,gbp_g04
02:11:31  95  ,gbp_g05
02:11:31  96  ,gbp_g06
02:11:31  97  ,gbp_g07
02:11:31  98  ,gbp_g08
02:11:31  99  ,gbp_g09
02:11:31 100  ,gbp_g10
02:11:31 101  ,gbp_g11
02:11:31 102  ,gbp_g12
02:11:31 103  ,gbp_g13
02:11:31 104  ,gbp_g14
02:11:31 105  ,gbp_g15
02:11:31 106  ,gbp_g16
02:11:31 107  ,gbp_g17
02:11:31 108  ,gbp_g18
02:11:31 109  ,gbp_g19
02:11:31 110  ,gbp_g20
02:11:31 111  ,gbp_g21
02:11:31 112  ,gbp_g22
02:11:31 113  ,gbp_g23
02:11:31 114  ,gbp_g24
02:11:31 115  ,gbp_g25
02:11:31 116  ,gbp_g26
02:11:31 117  ,gbp_g27
02:11:31 118  ,gbp_g28
02:11:31 119  ,gbp_g29
02:11:31 120  ,gbp_g30
02:11:31 121  ,gbp_g31
02:11:31 122  ,gbp_g32
02:11:31 123  ,gbp_g33
02:11:31 124  ,gbp_g34
02:11:31 125  ,gbp_g35
02:11:31 126  ,gbp_g36
02:11:31 127  ,gbp_g37
02:11:31 128  ,gbp_g38
02:11:31 129  ,gbp_g39
02:11:31 130  ,gbp_g40
02:11:31 131  ,gbp_g41
02:11:31 132  ,jpy_g00
02:11:31 133  ,jpy_g01
02:11:31 134  ,jpy_g02
02:11:31 135  ,jpy_g03
02:11:31 136  ,jpy_g04
02:11:31 137  ,jpy_g05
02:11:31 138  ,jpy_g06
02:11:31 139  ,jpy_g07
02:11:31 140  ,jpy_g08
02:11:31 141  ,jpy_g09
02:11:31 142  ,jpy_g10
02:11:31 143  ,jpy_g11
02:11:31 144  ,jpy_g12
02:11:31 145  ,jpy_g13
02:11:31 146  ,jpy_g14
02:11:31 147  ,jpy_g15
02:11:31 148  ,jpy_g16
02:11:31 149  ,jpy_g17
02:11:31 150  ,jpy_g18
02:11:31 151  ,jpy_g19
02:11:31 152  ,jpy_g20
02:11:31 153  ,jpy_g21
02:11:31 154  ,jpy_g22
02:11:31 155  ,jpy_g23
02:11:31 156  ,jpy_g24
02:11:31 157  ,jpy_g25
02:11:31 158  ,jpy_g26
02:11:31 159  ,jpy_g27
02:11:31 160  ,jpy_g28
02:11:31 161  ,jpy_g29
02:11:31 162  ,jpy_g30
02:11:31 163  ,jpy_g31
02:11:31 164  ,jpy_g32
02:11:31 165  ,jpy_g33
02:11:31 166  ,jpy_g34
02:11:31 167  ,jpy_g35
02:11:31 168  ,jpy_g36
02:11:31 169  ,jpy_g37
02:11:31 170  ,jpy_g38
02:11:31 171  ,jpy_g39
02:11:31 172  ,jpy_g40
02:11:31 173  ,jpy_g41
02:11:31 174  ,cad_g00
02:11:31 175  ,cad_g01
02:11:31 176  ,cad_g02
02:11:31 177  ,cad_g03
02:11:31 178  ,cad_g04
02:11:31 179  ,cad_g05
02:11:31 180  ,cad_g06
02:11:31 181  ,cad_g07
02:11:31 182  ,cad_g08
02:11:31 183  ,cad_g09
02:11:31 184  ,cad_g10
02:11:31 185  ,cad_g11
02:11:31 186  ,cad_g12
02:11:31 187  ,cad_g13
02:11:31 188  ,cad_g14
02:11:31 189  ,cad_g15
02:11:31 190  ,cad_g16
02:11:31 191  ,cad_g17
02:11:31 192  ,cad_g18
02:11:31 193  ,cad_g19
02:11:31 194  ,cad_g20
02:11:31 195  ,cad_g21
02:11:31 196  ,cad_g22
02:11:31 197  ,cad_g23
02:11:31 198  ,cad_g24
02:11:31 199  ,cad_g25
02:11:31 200  ,cad_g26
02:11:31 201  ,cad_g27
02:11:31 202  ,cad_g28
02:11:31 203  ,cad_g29
02:11:31 204  ,cad_g30
02:11:31 205  ,cad_g31
02:11:31 206  ,cad_g32
02:11:31 207  ,cad_g33
02:11:31 208  ,cad_g34
02:11:31 209  ,cad_g35
02:11:31 210  ,cad_g36
02:11:31 211  ,cad_g37
02:11:31 212  ,cad_g38
02:11:31 213  ,cad_g39
02:11:31 214  ,cad_g40
02:11:31 215  ,cad_g41
02:11:31 216  ,chf_g00
02:11:31 217  ,chf_g01
02:11:31 218  ,chf_g02
02:11:31 219  ,chf_g03
02:11:31 220  ,chf_g04
02:11:31 221  ,chf_g05
02:11:31 222  ,chf_g06
02:11:31 223  ,chf_g07
02:11:31 224  ,chf_g08
02:11:31 225  ,chf_g09
02:11:31 226  ,chf_g10
02:11:31 227  ,chf_g11
02:11:31 228  ,chf_g12
02:11:31 229  ,chf_g13
02:11:31 230  ,chf_g14
02:11:31 231  ,chf_g15
02:11:31 232  ,chf_g16
02:11:31 233  ,chf_g17
02:11:31 234  ,chf_g18
02:11:31 235  ,chf_g19
02:11:31 236  ,chf_g20
02:11:31 237  ,chf_g21
02:11:31 238  ,chf_g22
02:11:31 239  ,chf_g23
02:11:31 240  ,chf_g24
02:11:31 241  ,chf_g25
02:11:31 242  ,chf_g26
02:11:31 243  ,chf_g27
02:11:31 244  ,chf_g28
02:11:31 245  ,chf_g29
02:11:31 246  ,chf_g30
02:11:31 247  ,chf_g31
02:11:31 248  ,chf_g32
02:11:31 249  ,chf_g33
02:11:31 250  ,chf_g34
02:11:31 251  ,chf_g35
02:11:31 252  ,chf_g36
02:11:31 253  ,chf_g37
02:11:31 254  ,chf_g38
02:11:31 255  ,chf_g39
02:11:31 256  ,chf_g40
02:11:31 257  ,chf_g41
02:11:31 258  FROM aud_ms6 m
02:11:31 259  WHERE gatt IN('nup','up')
02:11:31 260  AND 1+m.ydate < '&1'||' '||'&2'
02:11:31 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'01:50:00'

View created.

Elapsed: 00:00:00.14
02:11:31 SQL> 
02:11:31 SQL> -- rpt
02:11:31 SQL> 
02:11:31 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
02:11:31   2  
02:11:31 SQL> SELECT MAX(prdate) FROM bme
02:11:31   2  
02:11:31 SQL> -- Now build model from bme and score sme
02:11:31 SQL> @score1.sql
02:11:31 SQL> -- score1.sql
02:11:31 SQL> 
02:11:31 SQL> -- Does the 1st SVM score
02:11:31 SQL> 
02:11:31 SQL> -- Fill up svmc_apply_prep
02:11:31 SQL> @score.sql
02:11:31 SQL> --
02:11:31 SQL> -- score.sql
02:11:31 SQL> --
02:11:31 SQL> 
02:11:31 SQL> -- usage: score.sql
02:11:31 SQL> 
02:11:31 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
02:11:31 SQL> 
02:11:31 SQL> DEFINE target	= 'gatt'
02:11:31 SQL> DEFINE model_name = 'forex14'
02:11:31 SQL> DEFINE bldtable	= 'bme'
02:11:31 SQL> DEFINE scoretable = 'sme'
02:11:31 SQL> DEFINE case_id	= 'prdate'
02:11:31 SQL> 
02:11:31 SQL> -- Define a variable to help me exclude some columns from some data mining calls
02:11:31 SQL> DEFINE exclude1 = "'&target','&case_id'"
02:11:31 SQL> 
02:11:31 SQL> -- Builds an SVM model using pl/sql.
02:11:31 SQL> 
02:11:31 SQL> -----------------------------------------------------------------------
02:11:31 SQL> --			    BUILD THE MODEL
02:11:31 SQL> -----------------------------------------------------------------------
02:11:31 SQL> 
02:11:31 SQL> -- Cleanup old build data preparation objects for repeat runs
02:11:31 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
02:11:31 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
02:11:31 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
02:11:31 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
02:11:31 SQL> 
02:11:31 SQL> 
02:11:31 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
02:11:31 SQL> --
02:11:31 SQL> -- DROP	TABLE svmc_settings ;
02:11:31 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
02:11:31 SQL> -- DELETE svmc_settings;
02:11:31 SQL> 
02:11:31 SQL> -- The default classification algorithm is Naive Bayes. So override
02:11:31 SQL> -- this choice to SVM using a settings table.
02:11:31 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
02:11:31 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
02:11:31 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
02:11:31 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
02:11:31 SQL> -- models.
02:11:31 SQL> --
02:11:31 SQL> 
02:11:31 SQL> -- Do this once and then comment it out.
02:11:31 SQL> -- That makes script go faster.
02:11:31 SQL> -- BEGIN
02:11:31 SQL> -- -- Populate settings table
02:11:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:11:31 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
02:11:31 SQL> --
02:11:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:11:31 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
02:11:31 SQL> --
02:11:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:11:31 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
02:11:31 SQL> --   COMMIT;
02:11:31 SQL> -- END;
02:11:31 SQL> -- /
02:11:31 SQL> 
02:11:31 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
02:11:31 SQL> 
02:11:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
02:11:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
02:11:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
02:11:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
02:11:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
02:11:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:11:32 SQL> 
02:11:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
02:11:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
02:11:32 SQL> 
02:11:32 SQL> --------------------------------
02:11:32 SQL> -- PREPARE BUILD (TRAINING) DATA
02:11:32 SQL> --
02:11:32 SQL> 
02:11:32 SQL> -- 1. Missing Value treatment for all Predictors and
02:11:32 SQL> -- 2. Outlier Treatment and
02:11:32 SQL> -- 3. Normalization are performed below.
02:11:32 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
02:11:32 SQL> --    normalized here.
02:11:32 SQL> 
02:11:32 SQL> BEGIN
02:11:32   2  	-- Perform missing value treatment for all predictors
02:11:32   3  	-- create miss tables
02:11:32   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
02:11:32   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
02:11:32   6  
02:11:32   7  	-- populate miss tables
02:11:32   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
02:11:32   9  	  miss_table_name => 'svmc_miss_num',
02:11:32  10  	  data_table_name => '&bldtable',
02:11:32  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:11:32  12  
02:11:32  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
02:11:32  14  	  miss_table_name => 'svmc_miss_cat',
02:11:32  15  	  data_table_name => '&bldtable',
02:11:32  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:11:32  17  
02:11:32  18  	-- xform input data to replace missing values
02:11:32  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:11:32  20  	  miss_table_name => 'svmc_miss_num',
02:11:32  21  	  data_table_name => '&bldtable',
02:11:32  22  	  xform_view_name => 'xformed_build_miss_num');
02:11:32  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:11:32  24  	  miss_table_name => 'svmc_miss_cat',
02:11:32  25  	  data_table_name => '&bldtable',
02:11:32  26  	  xform_view_name => 'xformed_build_miss_cat');
02:11:32  27  
02:11:32  28  	-- Perform outlier treatment.
02:11:32  29  	-- create clip table
02:11:32  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
02:11:32  31  
02:11:32  32  	-- populate clip table
02:11:32  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
02:11:32  34  	  clip_table_name => 'svmc_clip',
02:11:32  35  	  data_table_name => '&bldtable',
02:11:32  36  	  tail_frac	  => 0.025,
02:11:32  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:11:32  38  
02:11:32  39  	-- xform input data to winsorized data
02:11:32  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
02:11:32  41  	  clip_table_name => 'svmc_clip',
02:11:32  42  	  data_table_name => '&bldtable',
02:11:32  43  	  xform_view_name => 'svmc_winsor');
02:11:32  44  
02:11:32  45  	-- create normalization table
02:11:32  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
02:11:32  47  
02:11:32  48  	-- populate normalization table based on winsorized data
02:11:32  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
02:11:32  50  	  norm_table_name => 'svmc_norm',
02:11:32  51  	  data_table_name => 'svmc_winsor',
02:11:32  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:11:32  53  
02:11:32  54  	-- normalize the original data
02:11:32  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:11:32  56  	  norm_table_name => 'svmc_norm',
02:11:32  57  	  data_table_name => '&bldtable',
02:11:32  58  	  xform_view_name => 'svmc_build_prep');
02:11:32  59  END;
02:11:32  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:20.36
02:11:52 SQL> 
02:11:52 SQL> ---------------------
02:11:52 SQL> -- CREATE A NEW MODEL
02:11:52 SQL> --
02:11:52 SQL> -- Cleanup old model with the same name for repeat runs
02:11:52 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
02:11:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:52   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.73
02:11:53 SQL> 
02:11:53 SQL> -- Build a new SVM Model
02:11:53 SQL> BEGIN
02:11:53   2  	DBMS_DATA_MINING.CREATE_MODEL(
02:11:53   3  	  model_name	      => '&model_name',
02:11:53   4  	  mining_function     => dbms_data_mining.classification,
02:11:53   5  	  data_table_name     => 'svmc_build_prep',
02:11:53   6  	  case_id_column_name => '&case_id',
02:11:53   7  	  target_column_name  => '&target',
02:11:53   8  	  settings_table_name => 'svmc_settings');
02:11:53   9  END;
02:11:53  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:31.79
02:12:25 SQL> 
02:12:25 SQL> -----------------------------------------------------------------------
02:12:25 SQL> --			       APPLY/score THE MODEL
02:12:25 SQL> -----------------------------------------------------------------------
02:12:25 SQL> 
02:12:25 SQL> -- Cleanup old scoring data preparation objects for repeat runs
02:12:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
02:12:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:12:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
02:12:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
02:12:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:12:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
02:12:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
02:12:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:12:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
02:12:25 SQL> -----------------------
02:12:25 SQL> -- PREPARE SCORING DATA
02:12:25 SQL> --
02:12:25 SQL> -- If the data for model creation has been prepared, then the data
02:12:25 SQL> -- to be scored using the model must be prepared in the same manner
02:12:25 SQL> -- in order to obtain meaningful results.
02:12:25 SQL> --
02:12:25 SQL> -- 1. Missing Value treatment for all Predictors and
02:12:25 SQL> -- 2. Normalization
02:12:25 SQL> -- No outlier treatment will be performed during test and apply. The
02:12:25 SQL> -- normalization step is sufficient, since the normalization parameters
02:12:25 SQL> -- already capture the effects of outlier treatment done with build data.
02:12:25 SQL> --
02:12:25 SQL> BEGIN
02:12:25   2  	-- Xform Test data to replace missing values
02:12:25   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:12:25   4  	  miss_table_name => 'svmc_miss_num',
02:12:25   5  	  data_table_name => '&scoretable',
02:12:25   6  	  xform_view_name => 'xformed_apply_miss_num');
02:12:25   7  
02:12:25   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:12:25   9  	  miss_table_name => 'svmc_miss_cat',
02:12:25  10  	  data_table_name => '&scoretable',
02:12:25  11  	  xform_view_name => 'xformed_apply_miss_cat');
02:12:25  12  
02:12:25  13  	-- Normalize the data to be scored
02:12:25  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:12:25  15  	  norm_table_name => 'svmc_norm',
02:12:25  16  	  data_table_name => '&scoretable',
02:12:25  17  	  xform_view_name => 'svmc_apply_prep');
02:12:25  18  END;
02:12:25  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:02.65
02:12:28 SQL> 
02:12:28 SQL> -- Use same model_name used in score.sql
02:12:28 SQL> DEFINE model_name = 'forex14'
02:12:28 SQL> 
02:12:28 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
02:12:28 SQL> 
02:12:28 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
02:12:28 SQL> 
02:12:28 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
02:12:28   2  SELECT
02:12:28   3  prdate
02:12:28   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
02:12:28   5  ,sysdate
02:12:28   6  ,SUBSTR(prdate,1,3)pair
02:12:28   7  ,SUBSTR(prdate,4,19)ydate
02:12:28   8  FROM svmc_apply_prep
02:12:28   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.28
02:12:28 SQL> @aud_score1day.sql  2010-12-29 01:55:00
02:12:28 SQL> --
02:12:28 SQL> -- aud_score1day.sql
02:12:28 SQL> --
02:12:28 SQL> 
02:12:28 SQL> CREATE OR REPLACE VIEW sme AS
02:12:28   2  SELECT
02:12:28   3  'aud'||m.ydate prdate
02:12:28   4  ,NULL gatt
02:12:28   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:12:28   6  ,eur_g00
02:12:28   7  ,eur_g01
02:12:28   8  ,eur_g02
02:12:28   9  ,eur_g03
02:12:28  10  ,eur_g04
02:12:28  11  ,eur_g05
02:12:28  12  ,eur_g06
02:12:28  13  ,eur_g07
02:12:28  14  ,eur_g08
02:12:28  15  ,eur_g09
02:12:28  16  ,eur_g10
02:12:28  17  ,eur_g11
02:12:28  18  ,eur_g12
02:12:28  19  ,eur_g13
02:12:28  20  ,eur_g14
02:12:28  21  ,eur_g15
02:12:28  22  ,eur_g16
02:12:28  23  ,eur_g17
02:12:28  24  ,eur_g18
02:12:28  25  ,eur_g19
02:12:28  26  ,eur_g20
02:12:28  27  ,eur_g21
02:12:28  28  ,eur_g22
02:12:28  29  ,eur_g23
02:12:28  30  ,eur_g24
02:12:28  31  ,eur_g25
02:12:28  32  ,eur_g26
02:12:28  33  ,eur_g27
02:12:28  34  ,eur_g28
02:12:28  35  ,eur_g29
02:12:28  36  ,eur_g30
02:12:28  37  ,eur_g31
02:12:28  38  ,eur_g32
02:12:28  39  ,eur_g33
02:12:28  40  ,eur_g34
02:12:28  41  ,eur_g35
02:12:28  42  ,eur_g36
02:12:28  43  ,eur_g37
02:12:28  44  ,eur_g38
02:12:28  45  ,eur_g39
02:12:28  46  ,eur_g40
02:12:28  47  ,eur_g41
02:12:28  48  ,aud_g00
02:12:28  49  ,aud_g01
02:12:28  50  ,aud_g02
02:12:28  51  ,aud_g03
02:12:28  52  ,aud_g04
02:12:28  53  ,aud_g05
02:12:28  54  ,aud_g06
02:12:28  55  ,aud_g07
02:12:28  56  ,aud_g08
02:12:28  57  ,aud_g09
02:12:28  58  ,aud_g10
02:12:28  59  ,aud_g11
02:12:28  60  ,aud_g12
02:12:28  61  ,aud_g13
02:12:28  62  ,aud_g14
02:12:28  63  ,aud_g15
02:12:28  64  ,aud_g16
02:12:28  65  ,aud_g17
02:12:28  66  ,aud_g18
02:12:28  67  ,aud_g19
02:12:28  68  ,aud_g20
02:12:28  69  ,aud_g21
02:12:28  70  ,aud_g22
02:12:28  71  ,aud_g23
02:12:28  72  ,aud_g24
02:12:28  73  ,aud_g25
02:12:28  74  ,aud_g26
02:12:28  75  ,aud_g27
02:12:28  76  ,aud_g28
02:12:28  77  ,aud_g29
02:12:28  78  ,aud_g30
02:12:28  79  ,aud_g31
02:12:28  80  ,aud_g32
02:12:28  81  ,aud_g33
02:12:28  82  ,aud_g34
02:12:28  83  ,aud_g35
02:12:28  84  ,aud_g36
02:12:28  85  ,aud_g37
02:12:28  86  ,aud_g38
02:12:28  87  ,aud_g39
02:12:28  88  ,aud_g40
02:12:28  89  ,aud_g41
02:12:28  90  ,gbp_g00
02:12:28  91  ,gbp_g01
02:12:28  92  ,gbp_g02
02:12:28  93  ,gbp_g03
02:12:28  94  ,gbp_g04
02:12:28  95  ,gbp_g05
02:12:28  96  ,gbp_g06
02:12:28  97  ,gbp_g07
02:12:28  98  ,gbp_g08
02:12:28  99  ,gbp_g09
02:12:28 100  ,gbp_g10
02:12:28 101  ,gbp_g11
02:12:28 102  ,gbp_g12
02:12:28 103  ,gbp_g13
02:12:28 104  ,gbp_g14
02:12:28 105  ,gbp_g15
02:12:28 106  ,gbp_g16
02:12:28 107  ,gbp_g17
02:12:28 108  ,gbp_g18
02:12:28 109  ,gbp_g19
02:12:28 110  ,gbp_g20
02:12:28 111  ,gbp_g21
02:12:28 112  ,gbp_g22
02:12:28 113  ,gbp_g23
02:12:28 114  ,gbp_g24
02:12:28 115  ,gbp_g25
02:12:28 116  ,gbp_g26
02:12:28 117  ,gbp_g27
02:12:28 118  ,gbp_g28
02:12:28 119  ,gbp_g29
02:12:28 120  ,gbp_g30
02:12:28 121  ,gbp_g31
02:12:28 122  ,gbp_g32
02:12:28 123  ,gbp_g33
02:12:28 124  ,gbp_g34
02:12:28 125  ,gbp_g35
02:12:28 126  ,gbp_g36
02:12:28 127  ,gbp_g37
02:12:28 128  ,gbp_g38
02:12:28 129  ,gbp_g39
02:12:28 130  ,gbp_g40
02:12:28 131  ,gbp_g41
02:12:28 132  ,jpy_g00
02:12:28 133  ,jpy_g01
02:12:28 134  ,jpy_g02
02:12:28 135  ,jpy_g03
02:12:28 136  ,jpy_g04
02:12:28 137  ,jpy_g05
02:12:28 138  ,jpy_g06
02:12:28 139  ,jpy_g07
02:12:28 140  ,jpy_g08
02:12:28 141  ,jpy_g09
02:12:28 142  ,jpy_g10
02:12:28 143  ,jpy_g11
02:12:28 144  ,jpy_g12
02:12:28 145  ,jpy_g13
02:12:28 146  ,jpy_g14
02:12:28 147  ,jpy_g15
02:12:28 148  ,jpy_g16
02:12:28 149  ,jpy_g17
02:12:28 150  ,jpy_g18
02:12:28 151  ,jpy_g19
02:12:28 152  ,jpy_g20
02:12:28 153  ,jpy_g21
02:12:28 154  ,jpy_g22
02:12:28 155  ,jpy_g23
02:12:28 156  ,jpy_g24
02:12:28 157  ,jpy_g25
02:12:28 158  ,jpy_g26
02:12:28 159  ,jpy_g27
02:12:28 160  ,jpy_g28
02:12:28 161  ,jpy_g29
02:12:28 162  ,jpy_g30
02:12:28 163  ,jpy_g31
02:12:28 164  ,jpy_g32
02:12:28 165  ,jpy_g33
02:12:28 166  ,jpy_g34
02:12:28 167  ,jpy_g35
02:12:28 168  ,jpy_g36
02:12:28 169  ,jpy_g37
02:12:28 170  ,jpy_g38
02:12:28 171  ,jpy_g39
02:12:28 172  ,jpy_g40
02:12:28 173  ,jpy_g41
02:12:28 174  ,cad_g00
02:12:28 175  ,cad_g01
02:12:28 176  ,cad_g02
02:12:28 177  ,cad_g03
02:12:28 178  ,cad_g04
02:12:28 179  ,cad_g05
02:12:28 180  ,cad_g06
02:12:28 181  ,cad_g07
02:12:28 182  ,cad_g08
02:12:28 183  ,cad_g09
02:12:28 184  ,cad_g10
02:12:28 185  ,cad_g11
02:12:28 186  ,cad_g12
02:12:28 187  ,cad_g13
02:12:28 188  ,cad_g14
02:12:28 189  ,cad_g15
02:12:28 190  ,cad_g16
02:12:28 191  ,cad_g17
02:12:28 192  ,cad_g18
02:12:28 193  ,cad_g19
02:12:28 194  ,cad_g20
02:12:28 195  ,cad_g21
02:12:28 196  ,cad_g22
02:12:28 197  ,cad_g23
02:12:28 198  ,cad_g24
02:12:28 199  ,cad_g25
02:12:28 200  ,cad_g26
02:12:28 201  ,cad_g27
02:12:28 202  ,cad_g28
02:12:28 203  ,cad_g29
02:12:28 204  ,cad_g30
02:12:28 205  ,cad_g31
02:12:28 206  ,cad_g32
02:12:28 207  ,cad_g33
02:12:28 208  ,cad_g34
02:12:28 209  ,cad_g35
02:12:28 210  ,cad_g36
02:12:28 211  ,cad_g37
02:12:28 212  ,cad_g38
02:12:28 213  ,cad_g39
02:12:28 214  ,cad_g40
02:12:28 215  ,cad_g41
02:12:28 216  ,chf_g00
02:12:28 217  ,chf_g01
02:12:28 218  ,chf_g02
02:12:28 219  ,chf_g03
02:12:28 220  ,chf_g04
02:12:28 221  ,chf_g05
02:12:28 222  ,chf_g06
02:12:28 223  ,chf_g07
02:12:28 224  ,chf_g08
02:12:28 225  ,chf_g09
02:12:28 226  ,chf_g10
02:12:28 227  ,chf_g11
02:12:28 228  ,chf_g12
02:12:28 229  ,chf_g13
02:12:28 230  ,chf_g14
02:12:28 231  ,chf_g15
02:12:28 232  ,chf_g16
02:12:28 233  ,chf_g17
02:12:28 234  ,chf_g18
02:12:28 235  ,chf_g19
02:12:28 236  ,chf_g20
02:12:28 237  ,chf_g21
02:12:28 238  ,chf_g22
02:12:28 239  ,chf_g23
02:12:28 240  ,chf_g24
02:12:28 241  ,chf_g25
02:12:28 242  ,chf_g26
02:12:28 243  ,chf_g27
02:12:28 244  ,chf_g28
02:12:28 245  ,chf_g29
02:12:28 246  ,chf_g30
02:12:28 247  ,chf_g31
02:12:28 248  ,chf_g32
02:12:28 249  ,chf_g33
02:12:28 250  ,chf_g34
02:12:28 251  ,chf_g35
02:12:28 252  ,chf_g36
02:12:28 253  ,chf_g37
02:12:28 254  ,chf_g38
02:12:28 255  ,chf_g39
02:12:28 256  ,chf_g40
02:12:28 257  ,chf_g41
02:12:28 258  FROM aud_ms6 m
02:12:28 259  WHERE m.ydate = '&1'||' '||'&2'
02:12:28 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'01:55:00'

View created.

Elapsed: 00:00:00.15
02:12:28 SQL> 
02:12:28 SQL> -- rpt
02:12:28 SQL> -- We should see just 1 row:
02:12:28 SQL> 
02:12:28 SQL> SELECT COUNT(prdate) FROM sme
02:12:28   2  
02:12:28 SQL> -- Build the model:
02:12:28 SQL> CREATE OR REPLACE VIEW bme AS
02:12:28   2  SELECT
02:12:28   3  'aud'||m.ydate prdate
02:12:28   4  ,gatt
02:12:28   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:12:28   6  ,eur_g00
02:12:28   7  ,eur_g01
02:12:28   8  ,eur_g02
02:12:28   9  ,eur_g03
02:12:28  10  ,eur_g04
02:12:28  11  ,eur_g05
02:12:28  12  ,eur_g06
02:12:28  13  ,eur_g07
02:12:28  14  ,eur_g08
02:12:28  15  ,eur_g09
02:12:28  16  ,eur_g10
02:12:28  17  ,eur_g11
02:12:28  18  ,eur_g12
02:12:28  19  ,eur_g13
02:12:28  20  ,eur_g14
02:12:28  21  ,eur_g15
02:12:28  22  ,eur_g16
02:12:28  23  ,eur_g17
02:12:28  24  ,eur_g18
02:12:28  25  ,eur_g19
02:12:28  26  ,eur_g20
02:12:28  27  ,eur_g21
02:12:28  28  ,eur_g22
02:12:28  29  ,eur_g23
02:12:28  30  ,eur_g24
02:12:28  31  ,eur_g25
02:12:28  32  ,eur_g26
02:12:28  33  ,eur_g27
02:12:28  34  ,eur_g28
02:12:28  35  ,eur_g29
02:12:28  36  ,eur_g30
02:12:28  37  ,eur_g31
02:12:28  38  ,eur_g32
02:12:28  39  ,eur_g33
02:12:28  40  ,eur_g34
02:12:28  41  ,eur_g35
02:12:28  42  ,eur_g36
02:12:28  43  ,eur_g37
02:12:28  44  ,eur_g38
02:12:28  45  ,eur_g39
02:12:28  46  ,eur_g40
02:12:28  47  ,eur_g41
02:12:28  48  ,aud_g00
02:12:28  49  ,aud_g01
02:12:28  50  ,aud_g02
02:12:28  51  ,aud_g03
02:12:28  52  ,aud_g04
02:12:28  53  ,aud_g05
02:12:28  54  ,aud_g06
02:12:28  55  ,aud_g07
02:12:28  56  ,aud_g08
02:12:28  57  ,aud_g09
02:12:28  58  ,aud_g10
02:12:28  59  ,aud_g11
02:12:28  60  ,aud_g12
02:12:28  61  ,aud_g13
02:12:28  62  ,aud_g14
02:12:28  63  ,aud_g15
02:12:28  64  ,aud_g16
02:12:28  65  ,aud_g17
02:12:28  66  ,aud_g18
02:12:28  67  ,aud_g19
02:12:28  68  ,aud_g20
02:12:28  69  ,aud_g21
02:12:28  70  ,aud_g22
02:12:28  71  ,aud_g23
02:12:28  72  ,aud_g24
02:12:28  73  ,aud_g25
02:12:28  74  ,aud_g26
02:12:28  75  ,aud_g27
02:12:28  76  ,aud_g28
02:12:28  77  ,aud_g29
02:12:28  78  ,aud_g30
02:12:28  79  ,aud_g31
02:12:28  80  ,aud_g32
02:12:28  81  ,aud_g33
02:12:28  82  ,aud_g34
02:12:28  83  ,aud_g35
02:12:28  84  ,aud_g36
02:12:28  85  ,aud_g37
02:12:28  86  ,aud_g38
02:12:28  87  ,aud_g39
02:12:28  88  ,aud_g40
02:12:28  89  ,aud_g41
02:12:28  90  ,gbp_g00
02:12:28  91  ,gbp_g01
02:12:28  92  ,gbp_g02
02:12:28  93  ,gbp_g03
02:12:28  94  ,gbp_g04
02:12:28  95  ,gbp_g05
02:12:28  96  ,gbp_g06
02:12:28  97  ,gbp_g07
02:12:28  98  ,gbp_g08
02:12:28  99  ,gbp_g09
02:12:28 100  ,gbp_g10
02:12:28 101  ,gbp_g11
02:12:28 102  ,gbp_g12
02:12:28 103  ,gbp_g13
02:12:28 104  ,gbp_g14
02:12:28 105  ,gbp_g15
02:12:28 106  ,gbp_g16
02:12:28 107  ,gbp_g17
02:12:28 108  ,gbp_g18
02:12:28 109  ,gbp_g19
02:12:28 110  ,gbp_g20
02:12:28 111  ,gbp_g21
02:12:28 112  ,gbp_g22
02:12:28 113  ,gbp_g23
02:12:28 114  ,gbp_g24
02:12:28 115  ,gbp_g25
02:12:28 116  ,gbp_g26
02:12:28 117  ,gbp_g27
02:12:28 118  ,gbp_g28
02:12:28 119  ,gbp_g29
02:12:28 120  ,gbp_g30
02:12:28 121  ,gbp_g31
02:12:28 122  ,gbp_g32
02:12:28 123  ,gbp_g33
02:12:28 124  ,gbp_g34
02:12:28 125  ,gbp_g35
02:12:28 126  ,gbp_g36
02:12:28 127  ,gbp_g37
02:12:28 128  ,gbp_g38
02:12:28 129  ,gbp_g39
02:12:28 130  ,gbp_g40
02:12:28 131  ,gbp_g41
02:12:28 132  ,jpy_g00
02:12:28 133  ,jpy_g01
02:12:28 134  ,jpy_g02
02:12:28 135  ,jpy_g03
02:12:28 136  ,jpy_g04
02:12:28 137  ,jpy_g05
02:12:28 138  ,jpy_g06
02:12:28 139  ,jpy_g07
02:12:28 140  ,jpy_g08
02:12:28 141  ,jpy_g09
02:12:28 142  ,jpy_g10
02:12:28 143  ,jpy_g11
02:12:28 144  ,jpy_g12
02:12:28 145  ,jpy_g13
02:12:28 146  ,jpy_g14
02:12:28 147  ,jpy_g15
02:12:28 148  ,jpy_g16
02:12:28 149  ,jpy_g17
02:12:28 150  ,jpy_g18
02:12:28 151  ,jpy_g19
02:12:28 152  ,jpy_g20
02:12:28 153  ,jpy_g21
02:12:28 154  ,jpy_g22
02:12:28 155  ,jpy_g23
02:12:28 156  ,jpy_g24
02:12:28 157  ,jpy_g25
02:12:28 158  ,jpy_g26
02:12:28 159  ,jpy_g27
02:12:28 160  ,jpy_g28
02:12:28 161  ,jpy_g29
02:12:28 162  ,jpy_g30
02:12:28 163  ,jpy_g31
02:12:28 164  ,jpy_g32
02:12:28 165  ,jpy_g33
02:12:28 166  ,jpy_g34
02:12:28 167  ,jpy_g35
02:12:28 168  ,jpy_g36
02:12:28 169  ,jpy_g37
02:12:28 170  ,jpy_g38
02:12:28 171  ,jpy_g39
02:12:28 172  ,jpy_g40
02:12:28 173  ,jpy_g41
02:12:28 174  ,cad_g00
02:12:28 175  ,cad_g01
02:12:28 176  ,cad_g02
02:12:28 177  ,cad_g03
02:12:28 178  ,cad_g04
02:12:28 179  ,cad_g05
02:12:28 180  ,cad_g06
02:12:28 181  ,cad_g07
02:12:28 182  ,cad_g08
02:12:28 183  ,cad_g09
02:12:28 184  ,cad_g10
02:12:28 185  ,cad_g11
02:12:28 186  ,cad_g12
02:12:28 187  ,cad_g13
02:12:28 188  ,cad_g14
02:12:28 189  ,cad_g15
02:12:28 190  ,cad_g16
02:12:28 191  ,cad_g17
02:12:28 192  ,cad_g18
02:12:28 193  ,cad_g19
02:12:28 194  ,cad_g20
02:12:28 195  ,cad_g21
02:12:28 196  ,cad_g22
02:12:28 197  ,cad_g23
02:12:28 198  ,cad_g24
02:12:28 199  ,cad_g25
02:12:28 200  ,cad_g26
02:12:28 201  ,cad_g27
02:12:28 202  ,cad_g28
02:12:28 203  ,cad_g29
02:12:28 204  ,cad_g30
02:12:28 205  ,cad_g31
02:12:28 206  ,cad_g32
02:12:28 207  ,cad_g33
02:12:28 208  ,cad_g34
02:12:28 209  ,cad_g35
02:12:28 210  ,cad_g36
02:12:28 211  ,cad_g37
02:12:28 212  ,cad_g38
02:12:28 213  ,cad_g39
02:12:28 214  ,cad_g40
02:12:28 215  ,cad_g41
02:12:28 216  ,chf_g00
02:12:28 217  ,chf_g01
02:12:28 218  ,chf_g02
02:12:28 219  ,chf_g03
02:12:28 220  ,chf_g04
02:12:28 221  ,chf_g05
02:12:28 222  ,chf_g06
02:12:28 223  ,chf_g07
02:12:28 224  ,chf_g08
02:12:28 225  ,chf_g09
02:12:28 226  ,chf_g10
02:12:28 227  ,chf_g11
02:12:28 228  ,chf_g12
02:12:28 229  ,chf_g13
02:12:28 230  ,chf_g14
02:12:28 231  ,chf_g15
02:12:28 232  ,chf_g16
02:12:28 233  ,chf_g17
02:12:28 234  ,chf_g18
02:12:28 235  ,chf_g19
02:12:28 236  ,chf_g20
02:12:28 237  ,chf_g21
02:12:28 238  ,chf_g22
02:12:28 239  ,chf_g23
02:12:28 240  ,chf_g24
02:12:28 241  ,chf_g25
02:12:28 242  ,chf_g26
02:12:28 243  ,chf_g27
02:12:28 244  ,chf_g28
02:12:28 245  ,chf_g29
02:12:28 246  ,chf_g30
02:12:28 247  ,chf_g31
02:12:28 248  ,chf_g32
02:12:28 249  ,chf_g33
02:12:28 250  ,chf_g34
02:12:28 251  ,chf_g35
02:12:28 252  ,chf_g36
02:12:28 253  ,chf_g37
02:12:28 254  ,chf_g38
02:12:28 255  ,chf_g39
02:12:28 256  ,chf_g40
02:12:28 257  ,chf_g41
02:12:28 258  FROM aud_ms6 m
02:12:28 259  WHERE gatt IN('nup','up')
02:12:28 260  AND 1+m.ydate < '&1'||' '||'&2'
02:12:28 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'01:55:00'

View created.

Elapsed: 00:00:00.12
02:12:28 SQL> 
02:12:28 SQL> -- rpt
02:12:28 SQL> 
02:12:28 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
02:12:28   2  
02:12:28 SQL> SELECT MAX(prdate) FROM bme
02:12:28   2  
02:12:28 SQL> -- Now build model from bme and score sme
02:12:28 SQL> @score1.sql
02:12:28 SQL> -- score1.sql
02:12:28 SQL> 
02:12:28 SQL> -- Does the 1st SVM score
02:12:28 SQL> 
02:12:28 SQL> -- Fill up svmc_apply_prep
02:12:28 SQL> @score.sql
02:12:28 SQL> --
02:12:28 SQL> -- score.sql
02:12:28 SQL> --
02:12:28 SQL> 
02:12:28 SQL> -- usage: score.sql
02:12:28 SQL> 
02:12:28 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
02:12:28 SQL> 
02:12:28 SQL> DEFINE target	= 'gatt'
02:12:28 SQL> DEFINE model_name = 'forex14'
02:12:28 SQL> DEFINE bldtable	= 'bme'
02:12:28 SQL> DEFINE scoretable = 'sme'
02:12:28 SQL> DEFINE case_id	= 'prdate'
02:12:28 SQL> 
02:12:28 SQL> -- Define a variable to help me exclude some columns from some data mining calls
02:12:28 SQL> DEFINE exclude1 = "'&target','&case_id'"
02:12:28 SQL> 
02:12:28 SQL> -- Builds an SVM model using pl/sql.
02:12:28 SQL> 
02:12:28 SQL> -----------------------------------------------------------------------
02:12:28 SQL> --			    BUILD THE MODEL
02:12:28 SQL> -----------------------------------------------------------------------
02:12:28 SQL> 
02:12:28 SQL> -- Cleanup old build data preparation objects for repeat runs
02:12:28 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
02:12:28 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
02:12:28 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
02:12:28 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
02:12:28 SQL> 
02:12:28 SQL> 
02:12:28 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
02:12:28 SQL> --
02:12:28 SQL> -- DROP	TABLE svmc_settings ;
02:12:28 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
02:12:28 SQL> -- DELETE svmc_settings;
02:12:28 SQL> 
02:12:28 SQL> -- The default classification algorithm is Naive Bayes. So override
02:12:28 SQL> -- this choice to SVM using a settings table.
02:12:28 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
02:12:28 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
02:12:28 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
02:12:28 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
02:12:28 SQL> -- models.
02:12:28 SQL> --
02:12:28 SQL> 
02:12:28 SQL> -- Do this once and then comment it out.
02:12:28 SQL> -- That makes script go faster.
02:12:28 SQL> -- BEGIN
02:12:28 SQL> -- -- Populate settings table
02:12:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:12:28 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
02:12:28 SQL> --
02:12:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:12:28 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
02:12:28 SQL> --
02:12:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:12:28 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
02:12:28 SQL> --   COMMIT;
02:12:28 SQL> -- END;
02:12:28 SQL> -- /
02:12:28 SQL> 
02:12:28 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
02:12:28 SQL> 
02:12:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
02:12:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:12:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
02:12:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
02:12:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:12:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.12
02:12:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
02:12:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:12:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
02:12:28 SQL> 
02:12:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
02:12:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:12:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
02:12:29 SQL> 
02:12:29 SQL> --------------------------------
02:12:29 SQL> -- PREPARE BUILD (TRAINING) DATA
02:12:29 SQL> --
02:12:29 SQL> 
02:12:29 SQL> -- 1. Missing Value treatment for all Predictors and
02:12:29 SQL> -- 2. Outlier Treatment and
02:12:29 SQL> -- 3. Normalization are performed below.
02:12:29 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
02:12:29 SQL> --    normalized here.
02:12:29 SQL> 
02:12:29 SQL> BEGIN
02:12:29   2  	-- Perform missing value treatment for all predictors
02:12:29   3  	-- create miss tables
02:12:29   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
02:12:29   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
02:12:29   6  
02:12:29   7  	-- populate miss tables
02:12:29   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
02:12:29   9  	  miss_table_name => 'svmc_miss_num',
02:12:29  10  	  data_table_name => '&bldtable',
02:12:29  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:12:29  12  
02:12:29  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
02:12:29  14  	  miss_table_name => 'svmc_miss_cat',
02:12:29  15  	  data_table_name => '&bldtable',
02:12:29  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:12:29  17  
02:12:29  18  	-- xform input data to replace missing values
02:12:29  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:12:29  20  	  miss_table_name => 'svmc_miss_num',
02:12:29  21  	  data_table_name => '&bldtable',
02:12:29  22  	  xform_view_name => 'xformed_build_miss_num');
02:12:29  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:12:29  24  	  miss_table_name => 'svmc_miss_cat',
02:12:29  25  	  data_table_name => '&bldtable',
02:12:29  26  	  xform_view_name => 'xformed_build_miss_cat');
02:12:29  27  
02:12:29  28  	-- Perform outlier treatment.
02:12:29  29  	-- create clip table
02:12:29  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
02:12:29  31  
02:12:29  32  	-- populate clip table
02:12:29  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
02:12:29  34  	  clip_table_name => 'svmc_clip',
02:12:29  35  	  data_table_name => '&bldtable',
02:12:29  36  	  tail_frac	  => 0.025,
02:12:29  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:12:29  38  
02:12:29  39  	-- xform input data to winsorized data
02:12:29  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
02:12:29  41  	  clip_table_name => 'svmc_clip',
02:12:29  42  	  data_table_name => '&bldtable',
02:12:29  43  	  xform_view_name => 'svmc_winsor');
02:12:29  44  
02:12:29  45  	-- create normalization table
02:12:29  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
02:12:29  47  
02:12:29  48  	-- populate normalization table based on winsorized data
02:12:29  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
02:12:29  50  	  norm_table_name => 'svmc_norm',
02:12:29  51  	  data_table_name => 'svmc_winsor',
02:12:29  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:12:29  53  
02:12:29  54  	-- normalize the original data
02:12:29  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:12:29  56  	  norm_table_name => 'svmc_norm',
02:12:29  57  	  data_table_name => '&bldtable',
02:12:29  58  	  xform_view_name => 'svmc_build_prep');
02:12:29  59  END;
02:12:29  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.81
02:12:46 SQL> 
02:12:46 SQL> ---------------------
02:12:46 SQL> -- CREATE A NEW MODEL
02:12:46 SQL> --
02:12:46 SQL> -- Cleanup old model with the same name for repeat runs
02:12:46 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
02:12:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:12:46   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
02:12:48 SQL> 
02:12:48 SQL> -- Build a new SVM Model
02:12:48 SQL> BEGIN
02:12:48   2  	DBMS_DATA_MINING.CREATE_MODEL(
02:12:48   3  	  model_name	      => '&model_name',
02:12:48   4  	  mining_function     => dbms_data_mining.classification,
02:12:48   5  	  data_table_name     => 'svmc_build_prep',
02:12:48   6  	  case_id_column_name => '&case_id',
02:12:48   7  	  target_column_name  => '&target',
02:12:48   8  	  settings_table_name => 'svmc_settings');
02:12:48   9  END;
02:12:48  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.28
02:13:15 SQL> 
02:13:15 SQL> -----------------------------------------------------------------------
02:13:15 SQL> --			       APPLY/score THE MODEL
02:13:15 SQL> -----------------------------------------------------------------------
02:13:15 SQL> 
02:13:15 SQL> -- Cleanup old scoring data preparation objects for repeat runs
02:13:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
02:13:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:13:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:13:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
02:13:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:13:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
02:13:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
02:13:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:13:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:13:15 SQL> -----------------------
02:13:15 SQL> -- PREPARE SCORING DATA
02:13:15 SQL> --
02:13:15 SQL> -- If the data for model creation has been prepared, then the data
02:13:15 SQL> -- to be scored using the model must be prepared in the same manner
02:13:15 SQL> -- in order to obtain meaningful results.
02:13:15 SQL> --
02:13:15 SQL> -- 1. Missing Value treatment for all Predictors and
02:13:15 SQL> -- 2. Normalization
02:13:15 SQL> -- No outlier treatment will be performed during test and apply. The
02:13:15 SQL> -- normalization step is sufficient, since the normalization parameters
02:13:15 SQL> -- already capture the effects of outlier treatment done with build data.
02:13:15 SQL> --
02:13:15 SQL> BEGIN
02:13:15   2  	-- Xform Test data to replace missing values
02:13:15   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:13:15   4  	  miss_table_name => 'svmc_miss_num',
02:13:15   5  	  data_table_name => '&scoretable',
02:13:15   6  	  xform_view_name => 'xformed_apply_miss_num');
02:13:15   7  
02:13:15   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:13:15   9  	  miss_table_name => 'svmc_miss_cat',
02:13:15  10  	  data_table_name => '&scoretable',
02:13:15  11  	  xform_view_name => 'xformed_apply_miss_cat');
02:13:15  12  
02:13:15  13  	-- Normalize the data to be scored
02:13:15  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:13:15  15  	  norm_table_name => 'svmc_norm',
02:13:15  16  	  data_table_name => '&scoretable',
02:13:15  17  	  xform_view_name => 'svmc_apply_prep');
02:13:15  18  END;
02:13:15  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
02:13:16 SQL> 
02:13:16 SQL> -- Use same model_name used in score.sql
02:13:16 SQL> DEFINE model_name = 'forex14'
02:13:16 SQL> 
02:13:16 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
02:13:16 SQL> 
02:13:16 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
02:13:16 SQL> 
02:13:16 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
02:13:16   2  SELECT
02:13:16   3  prdate
02:13:16   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
02:13:16   5  ,sysdate
02:13:16   6  ,SUBSTR(prdate,1,3)pair
02:13:16   7  ,SUBSTR(prdate,4,19)ydate
02:13:16   8  FROM svmc_apply_prep
02:13:16   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
02:13:16 SQL> @aud_score1day.sql  2010-12-29 02:00:00
02:13:16 SQL> --
02:13:16 SQL> -- aud_score1day.sql
02:13:16 SQL> --
02:13:16 SQL> 
02:13:16 SQL> CREATE OR REPLACE VIEW sme AS
02:13:16   2  SELECT
02:13:16   3  'aud'||m.ydate prdate
02:13:16   4  ,NULL gatt
02:13:16   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:13:16   6  ,eur_g00
02:13:16   7  ,eur_g01
02:13:16   8  ,eur_g02
02:13:16   9  ,eur_g03
02:13:16  10  ,eur_g04
02:13:16  11  ,eur_g05
02:13:16  12  ,eur_g06
02:13:16  13  ,eur_g07
02:13:16  14  ,eur_g08
02:13:16  15  ,eur_g09
02:13:16  16  ,eur_g10
02:13:16  17  ,eur_g11
02:13:16  18  ,eur_g12
02:13:16  19  ,eur_g13
02:13:16  20  ,eur_g14
02:13:16  21  ,eur_g15
02:13:16  22  ,eur_g16
02:13:16  23  ,eur_g17
02:13:16  24  ,eur_g18
02:13:16  25  ,eur_g19
02:13:16  26  ,eur_g20
02:13:16  27  ,eur_g21
02:13:16  28  ,eur_g22
02:13:16  29  ,eur_g23
02:13:16  30  ,eur_g24
02:13:16  31  ,eur_g25
02:13:16  32  ,eur_g26
02:13:16  33  ,eur_g27
02:13:16  34  ,eur_g28
02:13:16  35  ,eur_g29
02:13:16  36  ,eur_g30
02:13:16  37  ,eur_g31
02:13:16  38  ,eur_g32
02:13:16  39  ,eur_g33
02:13:16  40  ,eur_g34
02:13:16  41  ,eur_g35
02:13:16  42  ,eur_g36
02:13:16  43  ,eur_g37
02:13:16  44  ,eur_g38
02:13:16  45  ,eur_g39
02:13:16  46  ,eur_g40
02:13:16  47  ,eur_g41
02:13:16  48  ,aud_g00
02:13:16  49  ,aud_g01
02:13:16  50  ,aud_g02
02:13:16  51  ,aud_g03
02:13:16  52  ,aud_g04
02:13:16  53  ,aud_g05
02:13:16  54  ,aud_g06
02:13:16  55  ,aud_g07
02:13:16  56  ,aud_g08
02:13:16  57  ,aud_g09
02:13:16  58  ,aud_g10
02:13:16  59  ,aud_g11
02:13:16  60  ,aud_g12
02:13:16  61  ,aud_g13
02:13:16  62  ,aud_g14
02:13:16  63  ,aud_g15
02:13:16  64  ,aud_g16
02:13:16  65  ,aud_g17
02:13:16  66  ,aud_g18
02:13:16  67  ,aud_g19
02:13:16  68  ,aud_g20
02:13:16  69  ,aud_g21
02:13:16  70  ,aud_g22
02:13:16  71  ,aud_g23
02:13:16  72  ,aud_g24
02:13:16  73  ,aud_g25
02:13:16  74  ,aud_g26
02:13:16  75  ,aud_g27
02:13:16  76  ,aud_g28
02:13:16  77  ,aud_g29
02:13:16  78  ,aud_g30
02:13:16  79  ,aud_g31
02:13:16  80  ,aud_g32
02:13:16  81  ,aud_g33
02:13:16  82  ,aud_g34
02:13:16  83  ,aud_g35
02:13:16  84  ,aud_g36
02:13:16  85  ,aud_g37
02:13:16  86  ,aud_g38
02:13:16  87  ,aud_g39
02:13:16  88  ,aud_g40
02:13:16  89  ,aud_g41
02:13:16  90  ,gbp_g00
02:13:16  91  ,gbp_g01
02:13:16  92  ,gbp_g02
02:13:16  93  ,gbp_g03
02:13:16  94  ,gbp_g04
02:13:16  95  ,gbp_g05
02:13:16  96  ,gbp_g06
02:13:16  97  ,gbp_g07
02:13:16  98  ,gbp_g08
02:13:16  99  ,gbp_g09
02:13:16 100  ,gbp_g10
02:13:16 101  ,gbp_g11
02:13:16 102  ,gbp_g12
02:13:16 103  ,gbp_g13
02:13:16 104  ,gbp_g14
02:13:16 105  ,gbp_g15
02:13:16 106  ,gbp_g16
02:13:16 107  ,gbp_g17
02:13:16 108  ,gbp_g18
02:13:16 109  ,gbp_g19
02:13:16 110  ,gbp_g20
02:13:16 111  ,gbp_g21
02:13:16 112  ,gbp_g22
02:13:16 113  ,gbp_g23
02:13:16 114  ,gbp_g24
02:13:16 115  ,gbp_g25
02:13:16 116  ,gbp_g26
02:13:16 117  ,gbp_g27
02:13:16 118  ,gbp_g28
02:13:16 119  ,gbp_g29
02:13:16 120  ,gbp_g30
02:13:16 121  ,gbp_g31
02:13:16 122  ,gbp_g32
02:13:16 123  ,gbp_g33
02:13:16 124  ,gbp_g34
02:13:16 125  ,gbp_g35
02:13:16 126  ,gbp_g36
02:13:16 127  ,gbp_g37
02:13:16 128  ,gbp_g38
02:13:16 129  ,gbp_g39
02:13:16 130  ,gbp_g40
02:13:16 131  ,gbp_g41
02:13:16 132  ,jpy_g00
02:13:16 133  ,jpy_g01
02:13:16 134  ,jpy_g02
02:13:16 135  ,jpy_g03
02:13:16 136  ,jpy_g04
02:13:16 137  ,jpy_g05
02:13:16 138  ,jpy_g06
02:13:16 139  ,jpy_g07
02:13:16 140  ,jpy_g08
02:13:16 141  ,jpy_g09
02:13:16 142  ,jpy_g10
02:13:16 143  ,jpy_g11
02:13:16 144  ,jpy_g12
02:13:16 145  ,jpy_g13
02:13:16 146  ,jpy_g14
02:13:16 147  ,jpy_g15
02:13:16 148  ,jpy_g16
02:13:16 149  ,jpy_g17
02:13:16 150  ,jpy_g18
02:13:16 151  ,jpy_g19
02:13:16 152  ,jpy_g20
02:13:16 153  ,jpy_g21
02:13:16 154  ,jpy_g22
02:13:16 155  ,jpy_g23
02:13:16 156  ,jpy_g24
02:13:16 157  ,jpy_g25
02:13:16 158  ,jpy_g26
02:13:16 159  ,jpy_g27
02:13:16 160  ,jpy_g28
02:13:16 161  ,jpy_g29
02:13:16 162  ,jpy_g30
02:13:16 163  ,jpy_g31
02:13:16 164  ,jpy_g32
02:13:16 165  ,jpy_g33
02:13:16 166  ,jpy_g34
02:13:16 167  ,jpy_g35
02:13:16 168  ,jpy_g36
02:13:16 169  ,jpy_g37
02:13:16 170  ,jpy_g38
02:13:16 171  ,jpy_g39
02:13:16 172  ,jpy_g40
02:13:16 173  ,jpy_g41
02:13:16 174  ,cad_g00
02:13:16 175  ,cad_g01
02:13:16 176  ,cad_g02
02:13:16 177  ,cad_g03
02:13:16 178  ,cad_g04
02:13:16 179  ,cad_g05
02:13:16 180  ,cad_g06
02:13:16 181  ,cad_g07
02:13:16 182  ,cad_g08
02:13:16 183  ,cad_g09
02:13:16 184  ,cad_g10
02:13:16 185  ,cad_g11
02:13:16 186  ,cad_g12
02:13:16 187  ,cad_g13
02:13:16 188  ,cad_g14
02:13:16 189  ,cad_g15
02:13:16 190  ,cad_g16
02:13:16 191  ,cad_g17
02:13:16 192  ,cad_g18
02:13:16 193  ,cad_g19
02:13:16 194  ,cad_g20
02:13:16 195  ,cad_g21
02:13:16 196  ,cad_g22
02:13:16 197  ,cad_g23
02:13:16 198  ,cad_g24
02:13:16 199  ,cad_g25
02:13:16 200  ,cad_g26
02:13:16 201  ,cad_g27
02:13:16 202  ,cad_g28
02:13:16 203  ,cad_g29
02:13:16 204  ,cad_g30
02:13:16 205  ,cad_g31
02:13:16 206  ,cad_g32
02:13:16 207  ,cad_g33
02:13:16 208  ,cad_g34
02:13:16 209  ,cad_g35
02:13:16 210  ,cad_g36
02:13:16 211  ,cad_g37
02:13:16 212  ,cad_g38
02:13:16 213  ,cad_g39
02:13:16 214  ,cad_g40
02:13:16 215  ,cad_g41
02:13:16 216  ,chf_g00
02:13:16 217  ,chf_g01
02:13:16 218  ,chf_g02
02:13:16 219  ,chf_g03
02:13:16 220  ,chf_g04
02:13:16 221  ,chf_g05
02:13:16 222  ,chf_g06
02:13:16 223  ,chf_g07
02:13:16 224  ,chf_g08
02:13:16 225  ,chf_g09
02:13:16 226  ,chf_g10
02:13:16 227  ,chf_g11
02:13:16 228  ,chf_g12
02:13:16 229  ,chf_g13
02:13:16 230  ,chf_g14
02:13:16 231  ,chf_g15
02:13:16 232  ,chf_g16
02:13:16 233  ,chf_g17
02:13:16 234  ,chf_g18
02:13:16 235  ,chf_g19
02:13:16 236  ,chf_g20
02:13:16 237  ,chf_g21
02:13:16 238  ,chf_g22
02:13:16 239  ,chf_g23
02:13:16 240  ,chf_g24
02:13:16 241  ,chf_g25
02:13:16 242  ,chf_g26
02:13:16 243  ,chf_g27
02:13:16 244  ,chf_g28
02:13:16 245  ,chf_g29
02:13:16 246  ,chf_g30
02:13:16 247  ,chf_g31
02:13:16 248  ,chf_g32
02:13:16 249  ,chf_g33
02:13:16 250  ,chf_g34
02:13:16 251  ,chf_g35
02:13:16 252  ,chf_g36
02:13:16 253  ,chf_g37
02:13:16 254  ,chf_g38
02:13:16 255  ,chf_g39
02:13:16 256  ,chf_g40
02:13:16 257  ,chf_g41
02:13:16 258  FROM aud_ms6 m
02:13:16 259  WHERE m.ydate = '&1'||' '||'&2'
02:13:16 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'02:00:00'

View created.

Elapsed: 00:00:00.13
02:13:17 SQL> 
02:13:17 SQL> -- rpt
02:13:17 SQL> -- We should see just 1 row:
02:13:17 SQL> 
02:13:17 SQL> SELECT COUNT(prdate) FROM sme
02:13:17   2  
02:13:17 SQL> -- Build the model:
02:13:17 SQL> CREATE OR REPLACE VIEW bme AS
02:13:17   2  SELECT
02:13:17   3  'aud'||m.ydate prdate
02:13:17   4  ,gatt
02:13:17   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:13:17   6  ,eur_g00
02:13:17   7  ,eur_g01
02:13:17   8  ,eur_g02
02:13:17   9  ,eur_g03
02:13:17  10  ,eur_g04
02:13:17  11  ,eur_g05
02:13:17  12  ,eur_g06
02:13:17  13  ,eur_g07
02:13:17  14  ,eur_g08
02:13:17  15  ,eur_g09
02:13:17  16  ,eur_g10
02:13:17  17  ,eur_g11
02:13:17  18  ,eur_g12
02:13:17  19  ,eur_g13
02:13:17  20  ,eur_g14
02:13:17  21  ,eur_g15
02:13:17  22  ,eur_g16
02:13:17  23  ,eur_g17
02:13:17  24  ,eur_g18
02:13:17  25  ,eur_g19
02:13:17  26  ,eur_g20
02:13:17  27  ,eur_g21
02:13:17  28  ,eur_g22
02:13:17  29  ,eur_g23
02:13:17  30  ,eur_g24
02:13:17  31  ,eur_g25
02:13:17  32  ,eur_g26
02:13:17  33  ,eur_g27
02:13:17  34  ,eur_g28
02:13:17  35  ,eur_g29
02:13:17  36  ,eur_g30
02:13:17  37  ,eur_g31
02:13:17  38  ,eur_g32
02:13:17  39  ,eur_g33
02:13:17  40  ,eur_g34
02:13:17  41  ,eur_g35
02:13:17  42  ,eur_g36
02:13:17  43  ,eur_g37
02:13:17  44  ,eur_g38
02:13:17  45  ,eur_g39
02:13:17  46  ,eur_g40
02:13:17  47  ,eur_g41
02:13:17  48  ,aud_g00
02:13:17  49  ,aud_g01
02:13:17  50  ,aud_g02
02:13:17  51  ,aud_g03
02:13:17  52  ,aud_g04
02:13:17  53  ,aud_g05
02:13:17  54  ,aud_g06
02:13:17  55  ,aud_g07
02:13:17  56  ,aud_g08
02:13:17  57  ,aud_g09
02:13:17  58  ,aud_g10
02:13:17  59  ,aud_g11
02:13:17  60  ,aud_g12
02:13:17  61  ,aud_g13
02:13:17  62  ,aud_g14
02:13:17  63  ,aud_g15
02:13:17  64  ,aud_g16
02:13:17  65  ,aud_g17
02:13:17  66  ,aud_g18
02:13:17  67  ,aud_g19
02:13:17  68  ,aud_g20
02:13:17  69  ,aud_g21
02:13:17  70  ,aud_g22
02:13:17  71  ,aud_g23
02:13:17  72  ,aud_g24
02:13:17  73  ,aud_g25
02:13:17  74  ,aud_g26
02:13:17  75  ,aud_g27
02:13:17  76  ,aud_g28
02:13:17  77  ,aud_g29
02:13:17  78  ,aud_g30
02:13:17  79  ,aud_g31
02:13:17  80  ,aud_g32
02:13:17  81  ,aud_g33
02:13:17  82  ,aud_g34
02:13:17  83  ,aud_g35
02:13:17  84  ,aud_g36
02:13:17  85  ,aud_g37
02:13:17  86  ,aud_g38
02:13:17  87  ,aud_g39
02:13:17  88  ,aud_g40
02:13:17  89  ,aud_g41
02:13:17  90  ,gbp_g00
02:13:17  91  ,gbp_g01
02:13:17  92  ,gbp_g02
02:13:17  93  ,gbp_g03
02:13:17  94  ,gbp_g04
02:13:17  95  ,gbp_g05
02:13:17  96  ,gbp_g06
02:13:17  97  ,gbp_g07
02:13:17  98  ,gbp_g08
02:13:17  99  ,gbp_g09
02:13:17 100  ,gbp_g10
02:13:17 101  ,gbp_g11
02:13:17 102  ,gbp_g12
02:13:17 103  ,gbp_g13
02:13:17 104  ,gbp_g14
02:13:17 105  ,gbp_g15
02:13:17 106  ,gbp_g16
02:13:17 107  ,gbp_g17
02:13:17 108  ,gbp_g18
02:13:17 109  ,gbp_g19
02:13:17 110  ,gbp_g20
02:13:17 111  ,gbp_g21
02:13:17 112  ,gbp_g22
02:13:17 113  ,gbp_g23
02:13:17 114  ,gbp_g24
02:13:17 115  ,gbp_g25
02:13:17 116  ,gbp_g26
02:13:17 117  ,gbp_g27
02:13:17 118  ,gbp_g28
02:13:17 119  ,gbp_g29
02:13:17 120  ,gbp_g30
02:13:17 121  ,gbp_g31
02:13:17 122  ,gbp_g32
02:13:17 123  ,gbp_g33
02:13:17 124  ,gbp_g34
02:13:17 125  ,gbp_g35
02:13:17 126  ,gbp_g36
02:13:17 127  ,gbp_g37
02:13:17 128  ,gbp_g38
02:13:17 129  ,gbp_g39
02:13:17 130  ,gbp_g40
02:13:17 131  ,gbp_g41
02:13:17 132  ,jpy_g00
02:13:17 133  ,jpy_g01
02:13:17 134  ,jpy_g02
02:13:17 135  ,jpy_g03
02:13:17 136  ,jpy_g04
02:13:17 137  ,jpy_g05
02:13:17 138  ,jpy_g06
02:13:17 139  ,jpy_g07
02:13:17 140  ,jpy_g08
02:13:17 141  ,jpy_g09
02:13:17 142  ,jpy_g10
02:13:17 143  ,jpy_g11
02:13:17 144  ,jpy_g12
02:13:17 145  ,jpy_g13
02:13:17 146  ,jpy_g14
02:13:17 147  ,jpy_g15
02:13:17 148  ,jpy_g16
02:13:17 149  ,jpy_g17
02:13:17 150  ,jpy_g18
02:13:17 151  ,jpy_g19
02:13:17 152  ,jpy_g20
02:13:17 153  ,jpy_g21
02:13:17 154  ,jpy_g22
02:13:17 155  ,jpy_g23
02:13:17 156  ,jpy_g24
02:13:17 157  ,jpy_g25
02:13:17 158  ,jpy_g26
02:13:17 159  ,jpy_g27
02:13:17 160  ,jpy_g28
02:13:17 161  ,jpy_g29
02:13:17 162  ,jpy_g30
02:13:17 163  ,jpy_g31
02:13:17 164  ,jpy_g32
02:13:17 165  ,jpy_g33
02:13:17 166  ,jpy_g34
02:13:17 167  ,jpy_g35
02:13:17 168  ,jpy_g36
02:13:17 169  ,jpy_g37
02:13:17 170  ,jpy_g38
02:13:17 171  ,jpy_g39
02:13:17 172  ,jpy_g40
02:13:17 173  ,jpy_g41
02:13:17 174  ,cad_g00
02:13:17 175  ,cad_g01
02:13:17 176  ,cad_g02
02:13:17 177  ,cad_g03
02:13:17 178  ,cad_g04
02:13:17 179  ,cad_g05
02:13:17 180  ,cad_g06
02:13:17 181  ,cad_g07
02:13:17 182  ,cad_g08
02:13:17 183  ,cad_g09
02:13:17 184  ,cad_g10
02:13:17 185  ,cad_g11
02:13:17 186  ,cad_g12
02:13:17 187  ,cad_g13
02:13:17 188  ,cad_g14
02:13:17 189  ,cad_g15
02:13:17 190  ,cad_g16
02:13:17 191  ,cad_g17
02:13:17 192  ,cad_g18
02:13:17 193  ,cad_g19
02:13:17 194  ,cad_g20
02:13:17 195  ,cad_g21
02:13:17 196  ,cad_g22
02:13:17 197  ,cad_g23
02:13:17 198  ,cad_g24
02:13:17 199  ,cad_g25
02:13:17 200  ,cad_g26
02:13:17 201  ,cad_g27
02:13:17 202  ,cad_g28
02:13:17 203  ,cad_g29
02:13:17 204  ,cad_g30
02:13:17 205  ,cad_g31
02:13:17 206  ,cad_g32
02:13:17 207  ,cad_g33
02:13:17 208  ,cad_g34
02:13:17 209  ,cad_g35
02:13:17 210  ,cad_g36
02:13:17 211  ,cad_g37
02:13:17 212  ,cad_g38
02:13:17 213  ,cad_g39
02:13:17 214  ,cad_g40
02:13:17 215  ,cad_g41
02:13:17 216  ,chf_g00
02:13:17 217  ,chf_g01
02:13:17 218  ,chf_g02
02:13:17 219  ,chf_g03
02:13:17 220  ,chf_g04
02:13:17 221  ,chf_g05
02:13:17 222  ,chf_g06
02:13:17 223  ,chf_g07
02:13:17 224  ,chf_g08
02:13:17 225  ,chf_g09
02:13:17 226  ,chf_g10
02:13:17 227  ,chf_g11
02:13:17 228  ,chf_g12
02:13:17 229  ,chf_g13
02:13:17 230  ,chf_g14
02:13:17 231  ,chf_g15
02:13:17 232  ,chf_g16
02:13:17 233  ,chf_g17
02:13:17 234  ,chf_g18
02:13:17 235  ,chf_g19
02:13:17 236  ,chf_g20
02:13:17 237  ,chf_g21
02:13:17 238  ,chf_g22
02:13:17 239  ,chf_g23
02:13:17 240  ,chf_g24
02:13:17 241  ,chf_g25
02:13:17 242  ,chf_g26
02:13:17 243  ,chf_g27
02:13:17 244  ,chf_g28
02:13:17 245  ,chf_g29
02:13:17 246  ,chf_g30
02:13:17 247  ,chf_g31
02:13:17 248  ,chf_g32
02:13:17 249  ,chf_g33
02:13:17 250  ,chf_g34
02:13:17 251  ,chf_g35
02:13:17 252  ,chf_g36
02:13:17 253  ,chf_g37
02:13:17 254  ,chf_g38
02:13:17 255  ,chf_g39
02:13:17 256  ,chf_g40
02:13:17 257  ,chf_g41
02:13:17 258  FROM aud_ms6 m
02:13:17 259  WHERE gatt IN('nup','up')
02:13:17 260  AND 1+m.ydate < '&1'||' '||'&2'
02:13:17 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'02:00:00'

View created.

Elapsed: 00:00:00.13
02:13:17 SQL> 
02:13:17 SQL> -- rpt
02:13:17 SQL> 
02:13:17 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
02:13:17   2  
02:13:17 SQL> SELECT MAX(prdate) FROM bme
02:13:17   2  
02:13:17 SQL> -- Now build model from bme and score sme
02:13:17 SQL> @score1.sql
02:13:17 SQL> -- score1.sql
02:13:17 SQL> 
02:13:17 SQL> -- Does the 1st SVM score
02:13:17 SQL> 
02:13:17 SQL> -- Fill up svmc_apply_prep
02:13:17 SQL> @score.sql
02:13:17 SQL> --
02:13:17 SQL> -- score.sql
02:13:17 SQL> --
02:13:17 SQL> 
02:13:17 SQL> -- usage: score.sql
02:13:17 SQL> 
02:13:17 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
02:13:17 SQL> 
02:13:17 SQL> DEFINE target	= 'gatt'
02:13:17 SQL> DEFINE model_name = 'forex14'
02:13:17 SQL> DEFINE bldtable	= 'bme'
02:13:17 SQL> DEFINE scoretable = 'sme'
02:13:17 SQL> DEFINE case_id	= 'prdate'
02:13:17 SQL> 
02:13:17 SQL> -- Define a variable to help me exclude some columns from some data mining calls
02:13:17 SQL> DEFINE exclude1 = "'&target','&case_id'"
02:13:17 SQL> 
02:13:17 SQL> -- Builds an SVM model using pl/sql.
02:13:17 SQL> 
02:13:17 SQL> -----------------------------------------------------------------------
02:13:17 SQL> --			    BUILD THE MODEL
02:13:17 SQL> -----------------------------------------------------------------------
02:13:17 SQL> 
02:13:17 SQL> -- Cleanup old build data preparation objects for repeat runs
02:13:17 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
02:13:17 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
02:13:17 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
02:13:17 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
02:13:17 SQL> 
02:13:17 SQL> 
02:13:17 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
02:13:17 SQL> --
02:13:17 SQL> -- DROP	TABLE svmc_settings ;
02:13:17 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
02:13:17 SQL> -- DELETE svmc_settings;
02:13:17 SQL> 
02:13:17 SQL> -- The default classification algorithm is Naive Bayes. So override
02:13:17 SQL> -- this choice to SVM using a settings table.
02:13:17 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
02:13:17 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
02:13:17 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
02:13:17 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
02:13:17 SQL> -- models.
02:13:17 SQL> --
02:13:17 SQL> 
02:13:17 SQL> -- Do this once and then comment it out.
02:13:17 SQL> -- That makes script go faster.
02:13:17 SQL> -- BEGIN
02:13:17 SQL> -- -- Populate settings table
02:13:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:13:17 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
02:13:17 SQL> --
02:13:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:13:17 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
02:13:17 SQL> --
02:13:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:13:17 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
02:13:17 SQL> --   COMMIT;
02:13:17 SQL> -- END;
02:13:17 SQL> -- /
02:13:17 SQL> 
02:13:17 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
02:13:17 SQL> 
02:13:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
02:13:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:13:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
02:13:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
02:13:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:13:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:13:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
02:13:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:13:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:13:17 SQL> 
02:13:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
02:13:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:13:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:13:17 SQL> 
02:13:17 SQL> --------------------------------
02:13:17 SQL> -- PREPARE BUILD (TRAINING) DATA
02:13:17 SQL> --
02:13:17 SQL> 
02:13:17 SQL> -- 1. Missing Value treatment for all Predictors and
02:13:17 SQL> -- 2. Outlier Treatment and
02:13:17 SQL> -- 3. Normalization are performed below.
02:13:17 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
02:13:17 SQL> --    normalized here.
02:13:17 SQL> 
02:13:17 SQL> BEGIN
02:13:17   2  	-- Perform missing value treatment for all predictors
02:13:17   3  	-- create miss tables
02:13:17   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
02:13:17   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
02:13:17   6  
02:13:17   7  	-- populate miss tables
02:13:17   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
02:13:17   9  	  miss_table_name => 'svmc_miss_num',
02:13:17  10  	  data_table_name => '&bldtable',
02:13:17  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:13:17  12  
02:13:17  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
02:13:17  14  	  miss_table_name => 'svmc_miss_cat',
02:13:17  15  	  data_table_name => '&bldtable',
02:13:17  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:13:17  17  
02:13:17  18  	-- xform input data to replace missing values
02:13:17  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:13:17  20  	  miss_table_name => 'svmc_miss_num',
02:13:17  21  	  data_table_name => '&bldtable',
02:13:17  22  	  xform_view_name => 'xformed_build_miss_num');
02:13:17  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:13:17  24  	  miss_table_name => 'svmc_miss_cat',
02:13:17  25  	  data_table_name => '&bldtable',
02:13:17  26  	  xform_view_name => 'xformed_build_miss_cat');
02:13:17  27  
02:13:17  28  	-- Perform outlier treatment.
02:13:17  29  	-- create clip table
02:13:17  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
02:13:17  31  
02:13:17  32  	-- populate clip table
02:13:17  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
02:13:17  34  	  clip_table_name => 'svmc_clip',
02:13:17  35  	  data_table_name => '&bldtable',
02:13:17  36  	  tail_frac	  => 0.025,
02:13:17  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:13:17  38  
02:13:17  39  	-- xform input data to winsorized data
02:13:17  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
02:13:17  41  	  clip_table_name => 'svmc_clip',
02:13:17  42  	  data_table_name => '&bldtable',
02:13:17  43  	  xform_view_name => 'svmc_winsor');
02:13:17  44  
02:13:17  45  	-- create normalization table
02:13:17  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
02:13:17  47  
02:13:17  48  	-- populate normalization table based on winsorized data
02:13:17  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
02:13:17  50  	  norm_table_name => 'svmc_norm',
02:13:17  51  	  data_table_name => 'svmc_winsor',
02:13:17  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:13:17  53  
02:13:17  54  	-- normalize the original data
02:13:17  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:13:17  56  	  norm_table_name => 'svmc_norm',
02:13:17  57  	  data_table_name => '&bldtable',
02:13:17  58  	  xform_view_name => 'svmc_build_prep');
02:13:17  59  END;
02:13:17  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.46
02:13:34 SQL> 
02:13:34 SQL> ---------------------
02:13:34 SQL> -- CREATE A NEW MODEL
02:13:34 SQL> --
02:13:34 SQL> -- Cleanup old model with the same name for repeat runs
02:13:34 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
02:13:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:13:34   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.00
02:13:35 SQL> 
02:13:35 SQL> -- Build a new SVM Model
02:13:35 SQL> BEGIN
02:13:35   2  	DBMS_DATA_MINING.CREATE_MODEL(
02:13:35   3  	  model_name	      => '&model_name',
02:13:35   4  	  mining_function     => dbms_data_mining.classification,
02:13:35   5  	  data_table_name     => 'svmc_build_prep',
02:13:35   6  	  case_id_column_name => '&case_id',
02:13:35   7  	  target_column_name  => '&target',
02:13:35   8  	  settings_table_name => 'svmc_settings');
02:13:35   9  END;
02:13:35  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.61
02:14:03 SQL> 
02:14:03 SQL> -----------------------------------------------------------------------
02:14:03 SQL> --			       APPLY/score THE MODEL
02:14:03 SQL> -----------------------------------------------------------------------
02:14:03 SQL> 
02:14:03 SQL> -- Cleanup old scoring data preparation objects for repeat runs
02:14:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
02:14:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:14:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:14:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
02:14:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:14:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:14:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
02:14:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:14:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
02:14:03 SQL> -----------------------
02:14:03 SQL> -- PREPARE SCORING DATA
02:14:03 SQL> --
02:14:03 SQL> -- If the data for model creation has been prepared, then the data
02:14:03 SQL> -- to be scored using the model must be prepared in the same manner
02:14:03 SQL> -- in order to obtain meaningful results.
02:14:03 SQL> --
02:14:03 SQL> -- 1. Missing Value treatment for all Predictors and
02:14:03 SQL> -- 2. Normalization
02:14:03 SQL> -- No outlier treatment will be performed during test and apply. The
02:14:03 SQL> -- normalization step is sufficient, since the normalization parameters
02:14:03 SQL> -- already capture the effects of outlier treatment done with build data.
02:14:03 SQL> --
02:14:03 SQL> BEGIN
02:14:03   2  	-- Xform Test data to replace missing values
02:14:03   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:14:03   4  	  miss_table_name => 'svmc_miss_num',
02:14:03   5  	  data_table_name => '&scoretable',
02:14:03   6  	  xform_view_name => 'xformed_apply_miss_num');
02:14:03   7  
02:14:03   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:14:03   9  	  miss_table_name => 'svmc_miss_cat',
02:14:03  10  	  data_table_name => '&scoretable',
02:14:03  11  	  xform_view_name => 'xformed_apply_miss_cat');
02:14:03  12  
02:14:03  13  	-- Normalize the data to be scored
02:14:03  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:14:03  15  	  norm_table_name => 'svmc_norm',
02:14:03  16  	  data_table_name => '&scoretable',
02:14:03  17  	  xform_view_name => 'svmc_apply_prep');
02:14:03  18  END;
02:14:03  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
02:14:05 SQL> 
02:14:05 SQL> -- Use same model_name used in score.sql
02:14:05 SQL> DEFINE model_name = 'forex14'
02:14:05 SQL> 
02:14:05 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
02:14:05 SQL> 
02:14:05 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
02:14:05 SQL> 
02:14:05 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
02:14:05   2  SELECT
02:14:05   3  prdate
02:14:05   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
02:14:05   5  ,sysdate
02:14:05   6  ,SUBSTR(prdate,1,3)pair
02:14:05   7  ,SUBSTR(prdate,4,19)ydate
02:14:05   8  FROM svmc_apply_prep
02:14:05   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
02:14:05 SQL> @aud_score1day_gattn.sql	2010-12-29 01:50:00
02:14:05 SQL> --
02:14:05 SQL> -- aud_score1day_gattn.sql
02:14:05 SQL> --
02:14:05 SQL> 
02:14:05 SQL> CREATE OR REPLACE VIEW sme AS
02:14:05   2  SELECT
02:14:05   3  'aud'||m.ydate prdate
02:14:05   4  ,NULL gattn
02:14:05   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:14:05   6  ,eur_g00
02:14:05   7  ,eur_g01
02:14:05   8  ,eur_g02
02:14:05   9  ,eur_g03
02:14:05  10  ,eur_g04
02:14:05  11  ,eur_g05
02:14:05  12  ,eur_g06
02:14:05  13  ,eur_g07
02:14:05  14  ,eur_g08
02:14:05  15  ,eur_g09
02:14:05  16  ,eur_g10
02:14:05  17  ,eur_g11
02:14:05  18  ,eur_g12
02:14:05  19  ,eur_g13
02:14:05  20  ,eur_g14
02:14:05  21  ,eur_g15
02:14:05  22  ,eur_g16
02:14:05  23  ,eur_g17
02:14:05  24  ,eur_g18
02:14:05  25  ,eur_g19
02:14:05  26  ,eur_g20
02:14:05  27  ,eur_g21
02:14:05  28  ,eur_g22
02:14:05  29  ,eur_g23
02:14:05  30  ,eur_g24
02:14:05  31  ,eur_g25
02:14:05  32  ,eur_g26
02:14:05  33  ,eur_g27
02:14:05  34  ,eur_g28
02:14:05  35  ,eur_g29
02:14:05  36  ,eur_g30
02:14:05  37  ,eur_g31
02:14:05  38  ,eur_g32
02:14:05  39  ,eur_g33
02:14:05  40  ,eur_g34
02:14:05  41  ,eur_g35
02:14:05  42  ,eur_g36
02:14:05  43  ,eur_g37
02:14:05  44  ,eur_g38
02:14:05  45  ,eur_g39
02:14:05  46  ,eur_g40
02:14:05  47  ,eur_g41
02:14:05  48  ,aud_g00
02:14:05  49  ,aud_g01
02:14:05  50  ,aud_g02
02:14:05  51  ,aud_g03
02:14:05  52  ,aud_g04
02:14:05  53  ,aud_g05
02:14:05  54  ,aud_g06
02:14:05  55  ,aud_g07
02:14:05  56  ,aud_g08
02:14:05  57  ,aud_g09
02:14:05  58  ,aud_g10
02:14:05  59  ,aud_g11
02:14:05  60  ,aud_g12
02:14:05  61  ,aud_g13
02:14:05  62  ,aud_g14
02:14:05  63  ,aud_g15
02:14:05  64  ,aud_g16
02:14:05  65  ,aud_g17
02:14:05  66  ,aud_g18
02:14:05  67  ,aud_g19
02:14:05  68  ,aud_g20
02:14:05  69  ,aud_g21
02:14:05  70  ,aud_g22
02:14:05  71  ,aud_g23
02:14:05  72  ,aud_g24
02:14:05  73  ,aud_g25
02:14:05  74  ,aud_g26
02:14:05  75  ,aud_g27
02:14:05  76  ,aud_g28
02:14:05  77  ,aud_g29
02:14:05  78  ,aud_g30
02:14:05  79  ,aud_g31
02:14:05  80  ,aud_g32
02:14:05  81  ,aud_g33
02:14:05  82  ,aud_g34
02:14:05  83  ,aud_g35
02:14:05  84  ,aud_g36
02:14:05  85  ,aud_g37
02:14:05  86  ,aud_g38
02:14:05  87  ,aud_g39
02:14:05  88  ,aud_g40
02:14:05  89  ,aud_g41
02:14:05  90  ,gbp_g00
02:14:05  91  ,gbp_g01
02:14:05  92  ,gbp_g02
02:14:05  93  ,gbp_g03
02:14:05  94  ,gbp_g04
02:14:05  95  ,gbp_g05
02:14:05  96  ,gbp_g06
02:14:05  97  ,gbp_g07
02:14:05  98  ,gbp_g08
02:14:05  99  ,gbp_g09
02:14:05 100  ,gbp_g10
02:14:05 101  ,gbp_g11
02:14:05 102  ,gbp_g12
02:14:05 103  ,gbp_g13
02:14:05 104  ,gbp_g14
02:14:05 105  ,gbp_g15
02:14:05 106  ,gbp_g16
02:14:05 107  ,gbp_g17
02:14:05 108  ,gbp_g18
02:14:05 109  ,gbp_g19
02:14:05 110  ,gbp_g20
02:14:05 111  ,gbp_g21
02:14:05 112  ,gbp_g22
02:14:05 113  ,gbp_g23
02:14:05 114  ,gbp_g24
02:14:05 115  ,gbp_g25
02:14:05 116  ,gbp_g26
02:14:05 117  ,gbp_g27
02:14:05 118  ,gbp_g28
02:14:05 119  ,gbp_g29
02:14:05 120  ,gbp_g30
02:14:05 121  ,gbp_g31
02:14:05 122  ,gbp_g32
02:14:05 123  ,gbp_g33
02:14:05 124  ,gbp_g34
02:14:05 125  ,gbp_g35
02:14:05 126  ,gbp_g36
02:14:05 127  ,gbp_g37
02:14:05 128  ,gbp_g38
02:14:05 129  ,gbp_g39
02:14:05 130  ,gbp_g40
02:14:05 131  ,gbp_g41
02:14:05 132  ,jpy_g00
02:14:05 133  ,jpy_g01
02:14:05 134  ,jpy_g02
02:14:05 135  ,jpy_g03
02:14:05 136  ,jpy_g04
02:14:05 137  ,jpy_g05
02:14:05 138  ,jpy_g06
02:14:05 139  ,jpy_g07
02:14:05 140  ,jpy_g08
02:14:05 141  ,jpy_g09
02:14:05 142  ,jpy_g10
02:14:05 143  ,jpy_g11
02:14:05 144  ,jpy_g12
02:14:05 145  ,jpy_g13
02:14:05 146  ,jpy_g14
02:14:05 147  ,jpy_g15
02:14:05 148  ,jpy_g16
02:14:05 149  ,jpy_g17
02:14:05 150  ,jpy_g18
02:14:05 151  ,jpy_g19
02:14:05 152  ,jpy_g20
02:14:05 153  ,jpy_g21
02:14:05 154  ,jpy_g22
02:14:05 155  ,jpy_g23
02:14:05 156  ,jpy_g24
02:14:05 157  ,jpy_g25
02:14:05 158  ,jpy_g26
02:14:05 159  ,jpy_g27
02:14:05 160  ,jpy_g28
02:14:05 161  ,jpy_g29
02:14:05 162  ,jpy_g30
02:14:05 163  ,jpy_g31
02:14:05 164  ,jpy_g32
02:14:05 165  ,jpy_g33
02:14:05 166  ,jpy_g34
02:14:05 167  ,jpy_g35
02:14:05 168  ,jpy_g36
02:14:05 169  ,jpy_g37
02:14:05 170  ,jpy_g38
02:14:05 171  ,jpy_g39
02:14:05 172  ,jpy_g40
02:14:05 173  ,jpy_g41
02:14:05 174  ,cad_g00
02:14:05 175  ,cad_g01
02:14:05 176  ,cad_g02
02:14:05 177  ,cad_g03
02:14:05 178  ,cad_g04
02:14:05 179  ,cad_g05
02:14:05 180  ,cad_g06
02:14:05 181  ,cad_g07
02:14:05 182  ,cad_g08
02:14:05 183  ,cad_g09
02:14:05 184  ,cad_g10
02:14:05 185  ,cad_g11
02:14:05 186  ,cad_g12
02:14:05 187  ,cad_g13
02:14:05 188  ,cad_g14
02:14:05 189  ,cad_g15
02:14:05 190  ,cad_g16
02:14:05 191  ,cad_g17
02:14:05 192  ,cad_g18
02:14:05 193  ,cad_g19
02:14:05 194  ,cad_g20
02:14:05 195  ,cad_g21
02:14:05 196  ,cad_g22
02:14:05 197  ,cad_g23
02:14:05 198  ,cad_g24
02:14:05 199  ,cad_g25
02:14:05 200  ,cad_g26
02:14:05 201  ,cad_g27
02:14:05 202  ,cad_g28
02:14:05 203  ,cad_g29
02:14:05 204  ,cad_g30
02:14:05 205  ,cad_g31
02:14:05 206  ,cad_g32
02:14:05 207  ,cad_g33
02:14:05 208  ,cad_g34
02:14:05 209  ,cad_g35
02:14:05 210  ,cad_g36
02:14:05 211  ,cad_g37
02:14:05 212  ,cad_g38
02:14:05 213  ,cad_g39
02:14:05 214  ,cad_g40
02:14:05 215  ,cad_g41
02:14:05 216  ,chf_g00
02:14:05 217  ,chf_g01
02:14:05 218  ,chf_g02
02:14:05 219  ,chf_g03
02:14:05 220  ,chf_g04
02:14:05 221  ,chf_g05
02:14:05 222  ,chf_g06
02:14:05 223  ,chf_g07
02:14:05 224  ,chf_g08
02:14:05 225  ,chf_g09
02:14:05 226  ,chf_g10
02:14:05 227  ,chf_g11
02:14:05 228  ,chf_g12
02:14:05 229  ,chf_g13
02:14:05 230  ,chf_g14
02:14:05 231  ,chf_g15
02:14:05 232  ,chf_g16
02:14:05 233  ,chf_g17
02:14:05 234  ,chf_g18
02:14:05 235  ,chf_g19
02:14:05 236  ,chf_g20
02:14:05 237  ,chf_g21
02:14:05 238  ,chf_g22
02:14:05 239  ,chf_g23
02:14:05 240  ,chf_g24
02:14:05 241  ,chf_g25
02:14:05 242  ,chf_g26
02:14:05 243  ,chf_g27
02:14:05 244  ,chf_g28
02:14:05 245  ,chf_g29
02:14:05 246  ,chf_g30
02:14:05 247  ,chf_g31
02:14:05 248  ,chf_g32
02:14:05 249  ,chf_g33
02:14:05 250  ,chf_g34
02:14:05 251  ,chf_g35
02:14:05 252  ,chf_g36
02:14:05 253  ,chf_g37
02:14:05 254  ,chf_g38
02:14:05 255  ,chf_g39
02:14:05 256  ,chf_g40
02:14:05 257  ,chf_g41
02:14:05 258  FROM aud_ms6 m
02:14:05 259  WHERE m.ydate = '&1'||' '||'&2'
02:14:05 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'01:50:00'

View created.

Elapsed: 00:00:00.15
02:14:05 SQL> 
02:14:05 SQL> -- rpt
02:14:05 SQL> -- We should see just 1 row:
02:14:05 SQL> 
02:14:05 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
02:14:05 SQL> 
02:14:05 SQL> -- Build the model:
02:14:05 SQL> CREATE OR REPLACE VIEW bme AS
02:14:05   2  SELECT
02:14:05   3  'aud'||m.ydate prdate
02:14:05   4  ,gattn
02:14:05   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:14:05   6  ,eur_g00
02:14:05   7  ,eur_g01
02:14:05   8  ,eur_g02
02:14:05   9  ,eur_g03
02:14:05  10  ,eur_g04
02:14:05  11  ,eur_g05
02:14:05  12  ,eur_g06
02:14:05  13  ,eur_g07
02:14:05  14  ,eur_g08
02:14:05  15  ,eur_g09
02:14:05  16  ,eur_g10
02:14:05  17  ,eur_g11
02:14:05  18  ,eur_g12
02:14:05  19  ,eur_g13
02:14:05  20  ,eur_g14
02:14:05  21  ,eur_g15
02:14:05  22  ,eur_g16
02:14:05  23  ,eur_g17
02:14:05  24  ,eur_g18
02:14:05  25  ,eur_g19
02:14:05  26  ,eur_g20
02:14:05  27  ,eur_g21
02:14:05  28  ,eur_g22
02:14:05  29  ,eur_g23
02:14:05  30  ,eur_g24
02:14:05  31  ,eur_g25
02:14:05  32  ,eur_g26
02:14:05  33  ,eur_g27
02:14:05  34  ,eur_g28
02:14:05  35  ,eur_g29
02:14:05  36  ,eur_g30
02:14:05  37  ,eur_g31
02:14:05  38  ,eur_g32
02:14:05  39  ,eur_g33
02:14:05  40  ,eur_g34
02:14:05  41  ,eur_g35
02:14:05  42  ,eur_g36
02:14:05  43  ,eur_g37
02:14:05  44  ,eur_g38
02:14:05  45  ,eur_g39
02:14:05  46  ,eur_g40
02:14:05  47  ,eur_g41
02:14:05  48  ,aud_g00
02:14:05  49  ,aud_g01
02:14:05  50  ,aud_g02
02:14:05  51  ,aud_g03
02:14:05  52  ,aud_g04
02:14:05  53  ,aud_g05
02:14:05  54  ,aud_g06
02:14:05  55  ,aud_g07
02:14:05  56  ,aud_g08
02:14:05  57  ,aud_g09
02:14:05  58  ,aud_g10
02:14:05  59  ,aud_g11
02:14:05  60  ,aud_g12
02:14:05  61  ,aud_g13
02:14:05  62  ,aud_g14
02:14:05  63  ,aud_g15
02:14:05  64  ,aud_g16
02:14:05  65  ,aud_g17
02:14:05  66  ,aud_g18
02:14:05  67  ,aud_g19
02:14:05  68  ,aud_g20
02:14:05  69  ,aud_g21
02:14:05  70  ,aud_g22
02:14:05  71  ,aud_g23
02:14:05  72  ,aud_g24
02:14:05  73  ,aud_g25
02:14:05  74  ,aud_g26
02:14:05  75  ,aud_g27
02:14:05  76  ,aud_g28
02:14:05  77  ,aud_g29
02:14:05  78  ,aud_g30
02:14:05  79  ,aud_g31
02:14:05  80  ,aud_g32
02:14:05  81  ,aud_g33
02:14:05  82  ,aud_g34
02:14:05  83  ,aud_g35
02:14:05  84  ,aud_g36
02:14:05  85  ,aud_g37
02:14:05  86  ,aud_g38
02:14:05  87  ,aud_g39
02:14:05  88  ,aud_g40
02:14:05  89  ,aud_g41
02:14:05  90  ,gbp_g00
02:14:05  91  ,gbp_g01
02:14:05  92  ,gbp_g02
02:14:05  93  ,gbp_g03
02:14:05  94  ,gbp_g04
02:14:05  95  ,gbp_g05
02:14:05  96  ,gbp_g06
02:14:05  97  ,gbp_g07
02:14:05  98  ,gbp_g08
02:14:05  99  ,gbp_g09
02:14:05 100  ,gbp_g10
02:14:05 101  ,gbp_g11
02:14:05 102  ,gbp_g12
02:14:05 103  ,gbp_g13
02:14:05 104  ,gbp_g14
02:14:05 105  ,gbp_g15
02:14:05 106  ,gbp_g16
02:14:05 107  ,gbp_g17
02:14:05 108  ,gbp_g18
02:14:05 109  ,gbp_g19
02:14:05 110  ,gbp_g20
02:14:05 111  ,gbp_g21
02:14:05 112  ,gbp_g22
02:14:05 113  ,gbp_g23
02:14:05 114  ,gbp_g24
02:14:05 115  ,gbp_g25
02:14:05 116  ,gbp_g26
02:14:05 117  ,gbp_g27
02:14:05 118  ,gbp_g28
02:14:05 119  ,gbp_g29
02:14:05 120  ,gbp_g30
02:14:05 121  ,gbp_g31
02:14:05 122  ,gbp_g32
02:14:05 123  ,gbp_g33
02:14:05 124  ,gbp_g34
02:14:05 125  ,gbp_g35
02:14:05 126  ,gbp_g36
02:14:05 127  ,gbp_g37
02:14:05 128  ,gbp_g38
02:14:05 129  ,gbp_g39
02:14:05 130  ,gbp_g40
02:14:05 131  ,gbp_g41
02:14:05 132  ,jpy_g00
02:14:05 133  ,jpy_g01
02:14:05 134  ,jpy_g02
02:14:05 135  ,jpy_g03
02:14:05 136  ,jpy_g04
02:14:05 137  ,jpy_g05
02:14:05 138  ,jpy_g06
02:14:05 139  ,jpy_g07
02:14:05 140  ,jpy_g08
02:14:05 141  ,jpy_g09
02:14:05 142  ,jpy_g10
02:14:05 143  ,jpy_g11
02:14:05 144  ,jpy_g12
02:14:05 145  ,jpy_g13
02:14:05 146  ,jpy_g14
02:14:05 147  ,jpy_g15
02:14:05 148  ,jpy_g16
02:14:05 149  ,jpy_g17
02:14:05 150  ,jpy_g18
02:14:05 151  ,jpy_g19
02:14:05 152  ,jpy_g20
02:14:05 153  ,jpy_g21
02:14:05 154  ,jpy_g22
02:14:05 155  ,jpy_g23
02:14:05 156  ,jpy_g24
02:14:05 157  ,jpy_g25
02:14:05 158  ,jpy_g26
02:14:05 159  ,jpy_g27
02:14:05 160  ,jpy_g28
02:14:05 161  ,jpy_g29
02:14:05 162  ,jpy_g30
02:14:05 163  ,jpy_g31
02:14:05 164  ,jpy_g32
02:14:05 165  ,jpy_g33
02:14:05 166  ,jpy_g34
02:14:05 167  ,jpy_g35
02:14:05 168  ,jpy_g36
02:14:05 169  ,jpy_g37
02:14:05 170  ,jpy_g38
02:14:05 171  ,jpy_g39
02:14:05 172  ,jpy_g40
02:14:05 173  ,jpy_g41
02:14:05 174  ,cad_g00
02:14:05 175  ,cad_g01
02:14:05 176  ,cad_g02
02:14:05 177  ,cad_g03
02:14:05 178  ,cad_g04
02:14:05 179  ,cad_g05
02:14:05 180  ,cad_g06
02:14:05 181  ,cad_g07
02:14:05 182  ,cad_g08
02:14:05 183  ,cad_g09
02:14:05 184  ,cad_g10
02:14:05 185  ,cad_g11
02:14:05 186  ,cad_g12
02:14:05 187  ,cad_g13
02:14:05 188  ,cad_g14
02:14:05 189  ,cad_g15
02:14:05 190  ,cad_g16
02:14:05 191  ,cad_g17
02:14:05 192  ,cad_g18
02:14:05 193  ,cad_g19
02:14:05 194  ,cad_g20
02:14:05 195  ,cad_g21
02:14:05 196  ,cad_g22
02:14:05 197  ,cad_g23
02:14:05 198  ,cad_g24
02:14:05 199  ,cad_g25
02:14:05 200  ,cad_g26
02:14:05 201  ,cad_g27
02:14:05 202  ,cad_g28
02:14:05 203  ,cad_g29
02:14:05 204  ,cad_g30
02:14:05 205  ,cad_g31
02:14:05 206  ,cad_g32
02:14:05 207  ,cad_g33
02:14:05 208  ,cad_g34
02:14:05 209  ,cad_g35
02:14:05 210  ,cad_g36
02:14:05 211  ,cad_g37
02:14:05 212  ,cad_g38
02:14:05 213  ,cad_g39
02:14:05 214  ,cad_g40
02:14:05 215  ,cad_g41
02:14:05 216  ,chf_g00
02:14:05 217  ,chf_g01
02:14:05 218  ,chf_g02
02:14:05 219  ,chf_g03
02:14:05 220  ,chf_g04
02:14:05 221  ,chf_g05
02:14:05 222  ,chf_g06
02:14:05 223  ,chf_g07
02:14:05 224  ,chf_g08
02:14:05 225  ,chf_g09
02:14:05 226  ,chf_g10
02:14:05 227  ,chf_g11
02:14:05 228  ,chf_g12
02:14:05 229  ,chf_g13
02:14:05 230  ,chf_g14
02:14:05 231  ,chf_g15
02:14:05 232  ,chf_g16
02:14:05 233  ,chf_g17
02:14:05 234  ,chf_g18
02:14:05 235  ,chf_g19
02:14:05 236  ,chf_g20
02:14:05 237  ,chf_g21
02:14:05 238  ,chf_g22
02:14:05 239  ,chf_g23
02:14:05 240  ,chf_g24
02:14:05 241  ,chf_g25
02:14:05 242  ,chf_g26
02:14:05 243  ,chf_g27
02:14:05 244  ,chf_g28
02:14:05 245  ,chf_g29
02:14:05 246  ,chf_g30
02:14:05 247  ,chf_g31
02:14:05 248  ,chf_g32
02:14:05 249  ,chf_g33
02:14:05 250  ,chf_g34
02:14:05 251  ,chf_g35
02:14:05 252  ,chf_g36
02:14:05 253  ,chf_g37
02:14:05 254  ,chf_g38
02:14:05 255  ,chf_g39
02:14:05 256  ,chf_g40
02:14:05 257  ,chf_g41
02:14:05 258  FROM aud_ms6 m
02:14:05 259  WHERE gattn IN('nup','up')
02:14:05 260  AND 1+m.ydate < '&1'||' '||'&2'
02:14:05 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'01:50:00'

View created.

Elapsed: 00:00:00.12
02:14:05 SQL> 
02:14:05 SQL> -- rpt
02:14:05 SQL> 
02:14:05 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12710
up	     6322

Elapsed: 00:00:00.04
02:14:05 SQL> 
02:14:05 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-28 01:45:00

Elapsed: 00:00:00.04
02:14:05 SQL> 
02:14:05 SQL> -- Now build model from bme and score sme
02:14:05 SQL> @score1gattn.sql
02:14:05 SQL> -- score1gattn.sql
02:14:05 SQL> 
02:14:05 SQL> -- Does the 1st SVM score
02:14:05 SQL> 
02:14:05 SQL> -- Fill up svmc_apply_prep
02:14:05 SQL> @score_gattn.sql
02:14:05 SQL> --
02:14:05 SQL> -- score_gattn.sql
02:14:05 SQL> --
02:14:05 SQL> 
02:14:05 SQL> -- usage: score_gattn.sql
02:14:05 SQL> 
02:14:05 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
02:14:05 SQL> 
02:14:05 SQL> DEFINE target	= 'gattn'
02:14:05 SQL> DEFINE model_name = 'forex14'
02:14:05 SQL> DEFINE bldtable	= 'bme'
02:14:05 SQL> DEFINE scoretable = 'sme'
02:14:05 SQL> DEFINE case_id	= 'prdate'
02:14:05 SQL> 
02:14:05 SQL> -- Define a variable to help me exclude some columns from some data mining calls
02:14:05 SQL> DEFINE exclude1 = "'&target','&case_id'"
02:14:05 SQL> 
02:14:05 SQL> -- Builds an SVM model using pl/sql.
02:14:05 SQL> 
02:14:05 SQL> -----------------------------------------------------------------------
02:14:05 SQL> --			    BUILD THE MODEL
02:14:05 SQL> -----------------------------------------------------------------------
02:14:05 SQL> 
02:14:05 SQL> -- Cleanup old build data preparation objects for repeat runs
02:14:05 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
02:14:05 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
02:14:05 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
02:14:05 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
02:14:05 SQL> 
02:14:05 SQL> 
02:14:05 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
02:14:05 SQL> --
02:14:05 SQL> -- DROP	TABLE svmc_settings ;
02:14:05 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
02:14:05 SQL> -- DELETE svmc_settings;
02:14:05 SQL> 
02:14:05 SQL> -- The default classification algorithm is Naive Bayes. So override
02:14:05 SQL> -- this choice to SVM using a settings table.
02:14:05 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
02:14:05 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
02:14:05 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
02:14:05 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
02:14:05 SQL> -- models.
02:14:05 SQL> --
02:14:05 SQL> 
02:14:05 SQL> -- Do this once and then comment it out.
02:14:05 SQL> -- That makes script go faster.
02:14:05 SQL> -- BEGIN
02:14:05 SQL> -- -- Populate settings table
02:14:05 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:14:05 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
02:14:05 SQL> --
02:14:05 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:14:05 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
02:14:05 SQL> --
02:14:05 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:14:05 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
02:14:05 SQL> --   COMMIT;
02:14:05 SQL> -- END;
02:14:05 SQL> -- /
02:14:05 SQL> 
02:14:05 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
02:14:05 SQL> 
02:14:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
02:14:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:14:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.12
02:14:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
02:14:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:14:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:14:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
02:14:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:14:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:14:05 SQL> 
02:14:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
02:14:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:14:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:14:05 SQL> 
02:14:05 SQL> --------------------------------
02:14:05 SQL> -- PREPARE BUILD (TRAINING) DATA
02:14:05 SQL> --
02:14:05 SQL> 
02:14:05 SQL> -- 1. Missing Value treatment for all Predictors and
02:14:05 SQL> -- 2. Outlier Treatment and
02:14:05 SQL> -- 3. Normalization are performed below.
02:14:05 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
02:14:05 SQL> --    normalized here.
02:14:05 SQL> 
02:14:05 SQL> BEGIN
02:14:05   2  	-- Perform missing value treatment for all predictors
02:14:05   3  	-- create miss tables
02:14:05   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
02:14:05   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
02:14:05   6  
02:14:05   7  	-- populate miss tables
02:14:05   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
02:14:05   9  	  miss_table_name => 'svmc_miss_num',
02:14:05  10  	  data_table_name => '&bldtable',
02:14:05  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:14:05  12  
02:14:05  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
02:14:05  14  	  miss_table_name => 'svmc_miss_cat',
02:14:05  15  	  data_table_name => '&bldtable',
02:14:05  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:14:05  17  
02:14:05  18  	-- xform input data to replace missing values
02:14:05  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:14:05  20  	  miss_table_name => 'svmc_miss_num',
02:14:05  21  	  data_table_name => '&bldtable',
02:14:05  22  	  xform_view_name => 'xformed_build_miss_num');
02:14:05  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:14:05  24  	  miss_table_name => 'svmc_miss_cat',
02:14:05  25  	  data_table_name => '&bldtable',
02:14:05  26  	  xform_view_name => 'xformed_build_miss_cat');
02:14:05  27  
02:14:05  28  	-- Perform outlier treatment.
02:14:05  29  	-- create clip table
02:14:05  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
02:14:05  31  
02:14:05  32  	-- populate clip table
02:14:05  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
02:14:05  34  	  clip_table_name => 'svmc_clip',
02:14:05  35  	  data_table_name => '&bldtable',
02:14:05  36  	  tail_frac	  => 0.025,
02:14:05  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:14:05  38  
02:14:05  39  	-- xform input data to winsorized data
02:14:05  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
02:14:05  41  	  clip_table_name => 'svmc_clip',
02:14:05  42  	  data_table_name => '&bldtable',
02:14:05  43  	  xform_view_name => 'svmc_winsor');
02:14:05  44  
02:14:05  45  	-- create normalization table
02:14:05  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
02:14:05  47  
02:14:05  48  	-- populate normalization table based on winsorized data
02:14:05  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
02:14:05  50  	  norm_table_name => 'svmc_norm',
02:14:05  51  	  data_table_name => 'svmc_winsor',
02:14:05  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:14:05  53  
02:14:05  54  	-- normalize the original data
02:14:05  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:14:05  56  	  norm_table_name => 'svmc_norm',
02:14:05  57  	  data_table_name => '&bldtable',
02:14:05  58  	  xform_view_name => 'svmc_build_prep');
02:14:05  59  END;
02:14:05  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.75
02:14:23 SQL> 
02:14:23 SQL> ---------------------
02:14:23 SQL> -- CREATE A NEW MODEL
02:14:23 SQL> --
02:14:23 SQL> -- Cleanup old model with the same name for repeat runs
02:14:23 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
02:14:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:14:23   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.09
02:14:24 SQL> 
02:14:24 SQL> -- Build a new SVM Model
02:14:24 SQL> BEGIN
02:14:24   2  	DBMS_DATA_MINING.CREATE_MODEL(
02:14:24   3  	  model_name	      => '&model_name',
02:14:24   4  	  mining_function     => dbms_data_mining.classification,
02:14:24   5  	  data_table_name     => 'svmc_build_prep',
02:14:24   6  	  case_id_column_name => '&case_id',
02:14:24   7  	  target_column_name  => '&target',
02:14:24   8  	  settings_table_name => 'svmc_settings');
02:14:24   9  END;
02:14:24  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.07
02:14:51 SQL> 
02:14:51 SQL> -----------------------------------------------------------------------
02:14:51 SQL> --			       APPLY/score THE MODEL
02:14:51 SQL> -----------------------------------------------------------------------
02:14:51 SQL> 
02:14:51 SQL> -- Cleanup old scoring data preparation objects for repeat runs
02:14:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
02:14:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:14:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:14:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
02:14:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:14:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:14:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
02:14:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:14:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:14:52 SQL> -----------------------
02:14:52 SQL> -- PREPARE SCORING DATA
02:14:52 SQL> --
02:14:52 SQL> -- If the data for model creation has been prepared, then the data
02:14:52 SQL> -- to be scored using the model must be prepared in the same manner
02:14:52 SQL> -- in order to obtain meaningful results.
02:14:52 SQL> --
02:14:52 SQL> -- 1. Missing Value treatment for all Predictors and
02:14:52 SQL> -- 2. Normalization
02:14:52 SQL> -- No outlier treatment will be performed during test and apply. The
02:14:52 SQL> -- normalization step is sufficient, since the normalization parameters
02:14:52 SQL> -- already capture the effects of outlier treatment done with build data.
02:14:52 SQL> --
02:14:52 SQL> BEGIN
02:14:52   2  	-- Xform Test data to replace missing values
02:14:52   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:14:52   4  	  miss_table_name => 'svmc_miss_num',
02:14:52   5  	  data_table_name => '&scoretable',
02:14:52   6  	  xform_view_name => 'xformed_apply_miss_num');
02:14:52   7  
02:14:52   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:14:52   9  	  miss_table_name => 'svmc_miss_cat',
02:14:52  10  	  data_table_name => '&scoretable',
02:14:52  11  	  xform_view_name => 'xformed_apply_miss_cat');
02:14:52  12  
02:14:52  13  	-- Normalize the data to be scored
02:14:52  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:14:52  15  	  norm_table_name => 'svmc_norm',
02:14:52  16  	  data_table_name => '&scoretable',
02:14:52  17  	  xform_view_name => 'svmc_apply_prep');
02:14:52  18  END;
02:14:52  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.27
02:14:53 SQL> 
02:14:53 SQL> -- Use same model_name used in score_gattn.sql
02:14:53 SQL> DEFINE model_name = 'forex14'
02:14:53 SQL> 
02:14:53 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
02:14:53 SQL> 
02:14:53 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
02:14:53   2  SELECT
02:14:53   3  prdate
02:14:53   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
02:14:53   5  ,sysdate
02:14:53   6  ,SUBSTR(prdate,1,3)pair
02:14:53   7  ,SUBSTR(prdate,4,19)ydate
02:14:53   8  FROM svmc_apply_prep
02:14:53   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
02:14:53 SQL> @aud_score1day_gattn.sql	2010-12-29 01:55:00
02:14:53 SQL> --
02:14:53 SQL> -- aud_score1day_gattn.sql
02:14:53 SQL> --
02:14:53 SQL> 
02:14:53 SQL> CREATE OR REPLACE VIEW sme AS
02:14:53   2  SELECT
02:14:53   3  'aud'||m.ydate prdate
02:14:53   4  ,NULL gattn
02:14:53   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:14:53   6  ,eur_g00
02:14:53   7  ,eur_g01
02:14:53   8  ,eur_g02
02:14:53   9  ,eur_g03
02:14:53  10  ,eur_g04
02:14:53  11  ,eur_g05
02:14:53  12  ,eur_g06
02:14:53  13  ,eur_g07
02:14:53  14  ,eur_g08
02:14:53  15  ,eur_g09
02:14:53  16  ,eur_g10
02:14:53  17  ,eur_g11
02:14:53  18  ,eur_g12
02:14:53  19  ,eur_g13
02:14:53  20  ,eur_g14
02:14:53  21  ,eur_g15
02:14:53  22  ,eur_g16
02:14:53  23  ,eur_g17
02:14:53  24  ,eur_g18
02:14:53  25  ,eur_g19
02:14:53  26  ,eur_g20
02:14:53  27  ,eur_g21
02:14:53  28  ,eur_g22
02:14:53  29  ,eur_g23
02:14:53  30  ,eur_g24
02:14:53  31  ,eur_g25
02:14:53  32  ,eur_g26
02:14:53  33  ,eur_g27
02:14:53  34  ,eur_g28
02:14:53  35  ,eur_g29
02:14:53  36  ,eur_g30
02:14:53  37  ,eur_g31
02:14:53  38  ,eur_g32
02:14:53  39  ,eur_g33
02:14:53  40  ,eur_g34
02:14:53  41  ,eur_g35
02:14:53  42  ,eur_g36
02:14:53  43  ,eur_g37
02:14:53  44  ,eur_g38
02:14:53  45  ,eur_g39
02:14:53  46  ,eur_g40
02:14:53  47  ,eur_g41
02:14:53  48  ,aud_g00
02:14:53  49  ,aud_g01
02:14:53  50  ,aud_g02
02:14:53  51  ,aud_g03
02:14:53  52  ,aud_g04
02:14:53  53  ,aud_g05
02:14:53  54  ,aud_g06
02:14:53  55  ,aud_g07
02:14:53  56  ,aud_g08
02:14:53  57  ,aud_g09
02:14:53  58  ,aud_g10
02:14:53  59  ,aud_g11
02:14:53  60  ,aud_g12
02:14:53  61  ,aud_g13
02:14:53  62  ,aud_g14
02:14:53  63  ,aud_g15
02:14:53  64  ,aud_g16
02:14:53  65  ,aud_g17
02:14:53  66  ,aud_g18
02:14:53  67  ,aud_g19
02:14:53  68  ,aud_g20
02:14:53  69  ,aud_g21
02:14:53  70  ,aud_g22
02:14:53  71  ,aud_g23
02:14:53  72  ,aud_g24
02:14:53  73  ,aud_g25
02:14:53  74  ,aud_g26
02:14:53  75  ,aud_g27
02:14:53  76  ,aud_g28
02:14:53  77  ,aud_g29
02:14:53  78  ,aud_g30
02:14:53  79  ,aud_g31
02:14:53  80  ,aud_g32
02:14:53  81  ,aud_g33
02:14:53  82  ,aud_g34
02:14:53  83  ,aud_g35
02:14:53  84  ,aud_g36
02:14:53  85  ,aud_g37
02:14:53  86  ,aud_g38
02:14:53  87  ,aud_g39
02:14:53  88  ,aud_g40
02:14:53  89  ,aud_g41
02:14:53  90  ,gbp_g00
02:14:53  91  ,gbp_g01
02:14:53  92  ,gbp_g02
02:14:53  93  ,gbp_g03
02:14:53  94  ,gbp_g04
02:14:53  95  ,gbp_g05
02:14:53  96  ,gbp_g06
02:14:53  97  ,gbp_g07
02:14:53  98  ,gbp_g08
02:14:53  99  ,gbp_g09
02:14:53 100  ,gbp_g10
02:14:53 101  ,gbp_g11
02:14:53 102  ,gbp_g12
02:14:53 103  ,gbp_g13
02:14:53 104  ,gbp_g14
02:14:53 105  ,gbp_g15
02:14:53 106  ,gbp_g16
02:14:53 107  ,gbp_g17
02:14:53 108  ,gbp_g18
02:14:53 109  ,gbp_g19
02:14:53 110  ,gbp_g20
02:14:53 111  ,gbp_g21
02:14:53 112  ,gbp_g22
02:14:53 113  ,gbp_g23
02:14:53 114  ,gbp_g24
02:14:53 115  ,gbp_g25
02:14:53 116  ,gbp_g26
02:14:53 117  ,gbp_g27
02:14:53 118  ,gbp_g28
02:14:53 119  ,gbp_g29
02:14:53 120  ,gbp_g30
02:14:53 121  ,gbp_g31
02:14:53 122  ,gbp_g32
02:14:53 123  ,gbp_g33
02:14:53 124  ,gbp_g34
02:14:53 125  ,gbp_g35
02:14:53 126  ,gbp_g36
02:14:53 127  ,gbp_g37
02:14:53 128  ,gbp_g38
02:14:53 129  ,gbp_g39
02:14:53 130  ,gbp_g40
02:14:53 131  ,gbp_g41
02:14:53 132  ,jpy_g00
02:14:53 133  ,jpy_g01
02:14:53 134  ,jpy_g02
02:14:53 135  ,jpy_g03
02:14:53 136  ,jpy_g04
02:14:53 137  ,jpy_g05
02:14:53 138  ,jpy_g06
02:14:53 139  ,jpy_g07
02:14:53 140  ,jpy_g08
02:14:53 141  ,jpy_g09
02:14:53 142  ,jpy_g10
02:14:53 143  ,jpy_g11
02:14:53 144  ,jpy_g12
02:14:53 145  ,jpy_g13
02:14:53 146  ,jpy_g14
02:14:53 147  ,jpy_g15
02:14:53 148  ,jpy_g16
02:14:53 149  ,jpy_g17
02:14:53 150  ,jpy_g18
02:14:53 151  ,jpy_g19
02:14:53 152  ,jpy_g20
02:14:53 153  ,jpy_g21
02:14:53 154  ,jpy_g22
02:14:53 155  ,jpy_g23
02:14:53 156  ,jpy_g24
02:14:53 157  ,jpy_g25
02:14:53 158  ,jpy_g26
02:14:53 159  ,jpy_g27
02:14:53 160  ,jpy_g28
02:14:53 161  ,jpy_g29
02:14:53 162  ,jpy_g30
02:14:53 163  ,jpy_g31
02:14:53 164  ,jpy_g32
02:14:53 165  ,jpy_g33
02:14:53 166  ,jpy_g34
02:14:53 167  ,jpy_g35
02:14:53 168  ,jpy_g36
02:14:53 169  ,jpy_g37
02:14:53 170  ,jpy_g38
02:14:53 171  ,jpy_g39
02:14:53 172  ,jpy_g40
02:14:53 173  ,jpy_g41
02:14:53 174  ,cad_g00
02:14:53 175  ,cad_g01
02:14:53 176  ,cad_g02
02:14:53 177  ,cad_g03
02:14:53 178  ,cad_g04
02:14:53 179  ,cad_g05
02:14:53 180  ,cad_g06
02:14:53 181  ,cad_g07
02:14:53 182  ,cad_g08
02:14:53 183  ,cad_g09
02:14:53 184  ,cad_g10
02:14:53 185  ,cad_g11
02:14:53 186  ,cad_g12
02:14:53 187  ,cad_g13
02:14:53 188  ,cad_g14
02:14:53 189  ,cad_g15
02:14:53 190  ,cad_g16
02:14:53 191  ,cad_g17
02:14:53 192  ,cad_g18
02:14:53 193  ,cad_g19
02:14:53 194  ,cad_g20
02:14:53 195  ,cad_g21
02:14:53 196  ,cad_g22
02:14:53 197  ,cad_g23
02:14:53 198  ,cad_g24
02:14:53 199  ,cad_g25
02:14:53 200  ,cad_g26
02:14:53 201  ,cad_g27
02:14:53 202  ,cad_g28
02:14:53 203  ,cad_g29
02:14:53 204  ,cad_g30
02:14:53 205  ,cad_g31
02:14:53 206  ,cad_g32
02:14:53 207  ,cad_g33
02:14:53 208  ,cad_g34
02:14:53 209  ,cad_g35
02:14:53 210  ,cad_g36
02:14:53 211  ,cad_g37
02:14:53 212  ,cad_g38
02:14:53 213  ,cad_g39
02:14:53 214  ,cad_g40
02:14:53 215  ,cad_g41
02:14:53 216  ,chf_g00
02:14:53 217  ,chf_g01
02:14:53 218  ,chf_g02
02:14:53 219  ,chf_g03
02:14:53 220  ,chf_g04
02:14:53 221  ,chf_g05
02:14:53 222  ,chf_g06
02:14:53 223  ,chf_g07
02:14:53 224  ,chf_g08
02:14:53 225  ,chf_g09
02:14:53 226  ,chf_g10
02:14:53 227  ,chf_g11
02:14:53 228  ,chf_g12
02:14:53 229  ,chf_g13
02:14:53 230  ,chf_g14
02:14:53 231  ,chf_g15
02:14:53 232  ,chf_g16
02:14:53 233  ,chf_g17
02:14:53 234  ,chf_g18
02:14:53 235  ,chf_g19
02:14:53 236  ,chf_g20
02:14:53 237  ,chf_g21
02:14:53 238  ,chf_g22
02:14:53 239  ,chf_g23
02:14:53 240  ,chf_g24
02:14:53 241  ,chf_g25
02:14:53 242  ,chf_g26
02:14:53 243  ,chf_g27
02:14:53 244  ,chf_g28
02:14:53 245  ,chf_g29
02:14:53 246  ,chf_g30
02:14:53 247  ,chf_g31
02:14:53 248  ,chf_g32
02:14:53 249  ,chf_g33
02:14:53 250  ,chf_g34
02:14:53 251  ,chf_g35
02:14:53 252  ,chf_g36
02:14:53 253  ,chf_g37
02:14:53 254  ,chf_g38
02:14:53 255  ,chf_g39
02:14:53 256  ,chf_g40
02:14:53 257  ,chf_g41
02:14:53 258  FROM aud_ms6 m
02:14:53 259  WHERE m.ydate = '&1'||' '||'&2'
02:14:53 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'01:55:00'

View created.

Elapsed: 00:00:00.14
02:14:53 SQL> 
02:14:53 SQL> -- rpt
02:14:53 SQL> -- We should see just 1 row:
02:14:53 SQL> 
02:14:53 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
02:14:53 SQL> 
02:14:53 SQL> -- Build the model:
02:14:53 SQL> CREATE OR REPLACE VIEW bme AS
02:14:53   2  SELECT
02:14:53   3  'aud'||m.ydate prdate
02:14:53   4  ,gattn
02:14:53   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:14:53   6  ,eur_g00
02:14:53   7  ,eur_g01
02:14:53   8  ,eur_g02
02:14:53   9  ,eur_g03
02:14:53  10  ,eur_g04
02:14:53  11  ,eur_g05
02:14:53  12  ,eur_g06
02:14:53  13  ,eur_g07
02:14:53  14  ,eur_g08
02:14:53  15  ,eur_g09
02:14:53  16  ,eur_g10
02:14:53  17  ,eur_g11
02:14:53  18  ,eur_g12
02:14:53  19  ,eur_g13
02:14:53  20  ,eur_g14
02:14:53  21  ,eur_g15
02:14:53  22  ,eur_g16
02:14:53  23  ,eur_g17
02:14:53  24  ,eur_g18
02:14:53  25  ,eur_g19
02:14:53  26  ,eur_g20
02:14:53  27  ,eur_g21
02:14:53  28  ,eur_g22
02:14:53  29  ,eur_g23
02:14:53  30  ,eur_g24
02:14:53  31  ,eur_g25
02:14:53  32  ,eur_g26
02:14:53  33  ,eur_g27
02:14:53  34  ,eur_g28
02:14:53  35  ,eur_g29
02:14:53  36  ,eur_g30
02:14:53  37  ,eur_g31
02:14:53  38  ,eur_g32
02:14:53  39  ,eur_g33
02:14:53  40  ,eur_g34
02:14:53  41  ,eur_g35
02:14:53  42  ,eur_g36
02:14:53  43  ,eur_g37
02:14:53  44  ,eur_g38
02:14:53  45  ,eur_g39
02:14:53  46  ,eur_g40
02:14:53  47  ,eur_g41
02:14:53  48  ,aud_g00
02:14:53  49  ,aud_g01
02:14:53  50  ,aud_g02
02:14:53  51  ,aud_g03
02:14:53  52  ,aud_g04
02:14:53  53  ,aud_g05
02:14:53  54  ,aud_g06
02:14:53  55  ,aud_g07
02:14:53  56  ,aud_g08
02:14:53  57  ,aud_g09
02:14:53  58  ,aud_g10
02:14:53  59  ,aud_g11
02:14:53  60  ,aud_g12
02:14:53  61  ,aud_g13
02:14:53  62  ,aud_g14
02:14:53  63  ,aud_g15
02:14:53  64  ,aud_g16
02:14:53  65  ,aud_g17
02:14:53  66  ,aud_g18
02:14:53  67  ,aud_g19
02:14:53  68  ,aud_g20
02:14:53  69  ,aud_g21
02:14:53  70  ,aud_g22
02:14:53  71  ,aud_g23
02:14:53  72  ,aud_g24
02:14:53  73  ,aud_g25
02:14:53  74  ,aud_g26
02:14:53  75  ,aud_g27
02:14:53  76  ,aud_g28
02:14:53  77  ,aud_g29
02:14:53  78  ,aud_g30
02:14:53  79  ,aud_g31
02:14:53  80  ,aud_g32
02:14:53  81  ,aud_g33
02:14:53  82  ,aud_g34
02:14:53  83  ,aud_g35
02:14:53  84  ,aud_g36
02:14:53  85  ,aud_g37
02:14:53  86  ,aud_g38
02:14:53  87  ,aud_g39
02:14:53  88  ,aud_g40
02:14:53  89  ,aud_g41
02:14:53  90  ,gbp_g00
02:14:53  91  ,gbp_g01
02:14:53  92  ,gbp_g02
02:14:53  93  ,gbp_g03
02:14:53  94  ,gbp_g04
02:14:53  95  ,gbp_g05
02:14:53  96  ,gbp_g06
02:14:53  97  ,gbp_g07
02:14:53  98  ,gbp_g08
02:14:53  99  ,gbp_g09
02:14:53 100  ,gbp_g10
02:14:53 101  ,gbp_g11
02:14:53 102  ,gbp_g12
02:14:53 103  ,gbp_g13
02:14:53 104  ,gbp_g14
02:14:53 105  ,gbp_g15
02:14:53 106  ,gbp_g16
02:14:53 107  ,gbp_g17
02:14:53 108  ,gbp_g18
02:14:53 109  ,gbp_g19
02:14:53 110  ,gbp_g20
02:14:53 111  ,gbp_g21
02:14:53 112  ,gbp_g22
02:14:53 113  ,gbp_g23
02:14:53 114  ,gbp_g24
02:14:53 115  ,gbp_g25
02:14:53 116  ,gbp_g26
02:14:53 117  ,gbp_g27
02:14:53 118  ,gbp_g28
02:14:53 119  ,gbp_g29
02:14:53 120  ,gbp_g30
02:14:53 121  ,gbp_g31
02:14:53 122  ,gbp_g32
02:14:53 123  ,gbp_g33
02:14:53 124  ,gbp_g34
02:14:53 125  ,gbp_g35
02:14:53 126  ,gbp_g36
02:14:53 127  ,gbp_g37
02:14:53 128  ,gbp_g38
02:14:53 129  ,gbp_g39
02:14:53 130  ,gbp_g40
02:14:53 131  ,gbp_g41
02:14:53 132  ,jpy_g00
02:14:53 133  ,jpy_g01
02:14:53 134  ,jpy_g02
02:14:53 135  ,jpy_g03
02:14:53 136  ,jpy_g04
02:14:53 137  ,jpy_g05
02:14:53 138  ,jpy_g06
02:14:53 139  ,jpy_g07
02:14:53 140  ,jpy_g08
02:14:53 141  ,jpy_g09
02:14:53 142  ,jpy_g10
02:14:53 143  ,jpy_g11
02:14:53 144  ,jpy_g12
02:14:53 145  ,jpy_g13
02:14:53 146  ,jpy_g14
02:14:53 147  ,jpy_g15
02:14:53 148  ,jpy_g16
02:14:53 149  ,jpy_g17
02:14:53 150  ,jpy_g18
02:14:53 151  ,jpy_g19
02:14:53 152  ,jpy_g20
02:14:53 153  ,jpy_g21
02:14:53 154  ,jpy_g22
02:14:53 155  ,jpy_g23
02:14:53 156  ,jpy_g24
02:14:53 157  ,jpy_g25
02:14:53 158  ,jpy_g26
02:14:53 159  ,jpy_g27
02:14:53 160  ,jpy_g28
02:14:53 161  ,jpy_g29
02:14:53 162  ,jpy_g30
02:14:53 163  ,jpy_g31
02:14:53 164  ,jpy_g32
02:14:53 165  ,jpy_g33
02:14:53 166  ,jpy_g34
02:14:53 167  ,jpy_g35
02:14:53 168  ,jpy_g36
02:14:53 169  ,jpy_g37
02:14:53 170  ,jpy_g38
02:14:53 171  ,jpy_g39
02:14:53 172  ,jpy_g40
02:14:53 173  ,jpy_g41
02:14:53 174  ,cad_g00
02:14:53 175  ,cad_g01
02:14:53 176  ,cad_g02
02:14:53 177  ,cad_g03
02:14:53 178  ,cad_g04
02:14:53 179  ,cad_g05
02:14:53 180  ,cad_g06
02:14:53 181  ,cad_g07
02:14:53 182  ,cad_g08
02:14:53 183  ,cad_g09
02:14:53 184  ,cad_g10
02:14:53 185  ,cad_g11
02:14:53 186  ,cad_g12
02:14:53 187  ,cad_g13
02:14:53 188  ,cad_g14
02:14:53 189  ,cad_g15
02:14:53 190  ,cad_g16
02:14:53 191  ,cad_g17
02:14:53 192  ,cad_g18
02:14:53 193  ,cad_g19
02:14:53 194  ,cad_g20
02:14:53 195  ,cad_g21
02:14:53 196  ,cad_g22
02:14:53 197  ,cad_g23
02:14:53 198  ,cad_g24
02:14:53 199  ,cad_g25
02:14:53 200  ,cad_g26
02:14:53 201  ,cad_g27
02:14:53 202  ,cad_g28
02:14:53 203  ,cad_g29
02:14:53 204  ,cad_g30
02:14:53 205  ,cad_g31
02:14:53 206  ,cad_g32
02:14:53 207  ,cad_g33
02:14:53 208  ,cad_g34
02:14:53 209  ,cad_g35
02:14:53 210  ,cad_g36
02:14:53 211  ,cad_g37
02:14:53 212  ,cad_g38
02:14:53 213  ,cad_g39
02:14:53 214  ,cad_g40
02:14:53 215  ,cad_g41
02:14:53 216  ,chf_g00
02:14:53 217  ,chf_g01
02:14:53 218  ,chf_g02
02:14:53 219  ,chf_g03
02:14:53 220  ,chf_g04
02:14:53 221  ,chf_g05
02:14:53 222  ,chf_g06
02:14:53 223  ,chf_g07
02:14:53 224  ,chf_g08
02:14:53 225  ,chf_g09
02:14:53 226  ,chf_g10
02:14:53 227  ,chf_g11
02:14:53 228  ,chf_g12
02:14:53 229  ,chf_g13
02:14:53 230  ,chf_g14
02:14:53 231  ,chf_g15
02:14:53 232  ,chf_g16
02:14:53 233  ,chf_g17
02:14:53 234  ,chf_g18
02:14:53 235  ,chf_g19
02:14:53 236  ,chf_g20
02:14:53 237  ,chf_g21
02:14:53 238  ,chf_g22
02:14:53 239  ,chf_g23
02:14:53 240  ,chf_g24
02:14:53 241  ,chf_g25
02:14:53 242  ,chf_g26
02:14:53 243  ,chf_g27
02:14:53 244  ,chf_g28
02:14:53 245  ,chf_g29
02:14:53 246  ,chf_g30
02:14:53 247  ,chf_g31
02:14:53 248  ,chf_g32
02:14:53 249  ,chf_g33
02:14:53 250  ,chf_g34
02:14:53 251  ,chf_g35
02:14:53 252  ,chf_g36
02:14:53 253  ,chf_g37
02:14:53 254  ,chf_g38
02:14:53 255  ,chf_g39
02:14:53 256  ,chf_g40
02:14:53 257  ,chf_g41
02:14:53 258  FROM aud_ms6 m
02:14:53 259  WHERE gattn IN('nup','up')
02:14:53 260  AND 1+m.ydate < '&1'||' '||'&2'
02:14:53 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'01:55:00'

View created.

Elapsed: 00:00:00.12
02:14:53 SQL> 
02:14:53 SQL> -- rpt
02:14:53 SQL> 
02:14:53 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12711
up	     6322

Elapsed: 00:00:00.05
02:14:53 SQL> 
02:14:53 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-28 01:50:00

Elapsed: 00:00:00.04
02:14:53 SQL> 
02:14:53 SQL> -- Now build model from bme and score sme
02:14:53 SQL> @score1gattn.sql
02:14:53 SQL> -- score1gattn.sql
02:14:53 SQL> 
02:14:53 SQL> -- Does the 1st SVM score
02:14:53 SQL> 
02:14:53 SQL> -- Fill up svmc_apply_prep
02:14:53 SQL> @score_gattn.sql
02:14:53 SQL> --
02:14:53 SQL> -- score_gattn.sql
02:14:53 SQL> --
02:14:53 SQL> 
02:14:53 SQL> -- usage: score_gattn.sql
02:14:53 SQL> 
02:14:53 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
02:14:53 SQL> 
02:14:53 SQL> DEFINE target	= 'gattn'
02:14:53 SQL> DEFINE model_name = 'forex14'
02:14:53 SQL> DEFINE bldtable	= 'bme'
02:14:53 SQL> DEFINE scoretable = 'sme'
02:14:53 SQL> DEFINE case_id	= 'prdate'
02:14:53 SQL> 
02:14:53 SQL> -- Define a variable to help me exclude some columns from some data mining calls
02:14:53 SQL> DEFINE exclude1 = "'&target','&case_id'"
02:14:53 SQL> 
02:14:53 SQL> -- Builds an SVM model using pl/sql.
02:14:53 SQL> 
02:14:53 SQL> -----------------------------------------------------------------------
02:14:53 SQL> --			    BUILD THE MODEL
02:14:53 SQL> -----------------------------------------------------------------------
02:14:53 SQL> 
02:14:53 SQL> -- Cleanup old build data preparation objects for repeat runs
02:14:53 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
02:14:53 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
02:14:53 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
02:14:53 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
02:14:53 SQL> 
02:14:53 SQL> 
02:14:53 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
02:14:53 SQL> --
02:14:53 SQL> -- DROP	TABLE svmc_settings ;
02:14:53 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
02:14:53 SQL> -- DELETE svmc_settings;
02:14:53 SQL> 
02:14:53 SQL> -- The default classification algorithm is Naive Bayes. So override
02:14:53 SQL> -- this choice to SVM using a settings table.
02:14:53 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
02:14:53 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
02:14:53 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
02:14:53 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
02:14:53 SQL> -- models.
02:14:53 SQL> --
02:14:53 SQL> 
02:14:53 SQL> -- Do this once and then comment it out.
02:14:53 SQL> -- That makes script go faster.
02:14:53 SQL> -- BEGIN
02:14:53 SQL> -- -- Populate settings table
02:14:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:14:53 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
02:14:53 SQL> --
02:14:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:14:53 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
02:14:53 SQL> --
02:14:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:14:53 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
02:14:53 SQL> --   COMMIT;
02:14:53 SQL> -- END;
02:14:53 SQL> -- /
02:14:53 SQL> 
02:14:53 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
02:14:53 SQL> 
02:14:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
02:14:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:14:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
02:14:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
02:14:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:14:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:14:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
02:14:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:14:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:14:54 SQL> 
02:14:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
02:14:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:14:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:14:54 SQL> 
02:14:54 SQL> --------------------------------
02:14:54 SQL> -- PREPARE BUILD (TRAINING) DATA
02:14:54 SQL> --
02:14:54 SQL> 
02:14:54 SQL> -- 1. Missing Value treatment for all Predictors and
02:14:54 SQL> -- 2. Outlier Treatment and
02:14:54 SQL> -- 3. Normalization are performed below.
02:14:54 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
02:14:54 SQL> --    normalized here.
02:14:54 SQL> 
02:14:54 SQL> BEGIN
02:14:54   2  	-- Perform missing value treatment for all predictors
02:14:54   3  	-- create miss tables
02:14:54   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
02:14:54   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
02:14:54   6  
02:14:54   7  	-- populate miss tables
02:14:54   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
02:14:54   9  	  miss_table_name => 'svmc_miss_num',
02:14:54  10  	  data_table_name => '&bldtable',
02:14:54  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:14:54  12  
02:14:54  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
02:14:54  14  	  miss_table_name => 'svmc_miss_cat',
02:14:54  15  	  data_table_name => '&bldtable',
02:14:54  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:14:54  17  
02:14:54  18  	-- xform input data to replace missing values
02:14:54  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:14:54  20  	  miss_table_name => 'svmc_miss_num',
02:14:54  21  	  data_table_name => '&bldtable',
02:14:54  22  	  xform_view_name => 'xformed_build_miss_num');
02:14:54  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:14:54  24  	  miss_table_name => 'svmc_miss_cat',
02:14:54  25  	  data_table_name => '&bldtable',
02:14:54  26  	  xform_view_name => 'xformed_build_miss_cat');
02:14:54  27  
02:14:54  28  	-- Perform outlier treatment.
02:14:54  29  	-- create clip table
02:14:54  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
02:14:54  31  
02:14:54  32  	-- populate clip table
02:14:54  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
02:14:54  34  	  clip_table_name => 'svmc_clip',
02:14:54  35  	  data_table_name => '&bldtable',
02:14:54  36  	  tail_frac	  => 0.025,
02:14:54  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:14:54  38  
02:14:54  39  	-- xform input data to winsorized data
02:14:54  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
02:14:54  41  	  clip_table_name => 'svmc_clip',
02:14:54  42  	  data_table_name => '&bldtable',
02:14:54  43  	  xform_view_name => 'svmc_winsor');
02:14:54  44  
02:14:54  45  	-- create normalization table
02:14:54  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
02:14:54  47  
02:14:54  48  	-- populate normalization table based on winsorized data
02:14:54  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
02:14:54  50  	  norm_table_name => 'svmc_norm',
02:14:54  51  	  data_table_name => 'svmc_winsor',
02:14:54  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:14:54  53  
02:14:54  54  	-- normalize the original data
02:14:54  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:14:54  56  	  norm_table_name => 'svmc_norm',
02:14:54  57  	  data_table_name => '&bldtable',
02:14:54  58  	  xform_view_name => 'svmc_build_prep');
02:14:54  59  END;
02:14:54  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.47
02:15:11 SQL> 
02:15:11 SQL> ---------------------
02:15:11 SQL> -- CREATE A NEW MODEL
02:15:11 SQL> --
02:15:11 SQL> -- Cleanup old model with the same name for repeat runs
02:15:11 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
02:15:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:15:11   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.00
02:15:12 SQL> 
02:15:12 SQL> -- Build a new SVM Model
02:15:12 SQL> BEGIN
02:15:12   2  	DBMS_DATA_MINING.CREATE_MODEL(
02:15:12   3  	  model_name	      => '&model_name',
02:15:12   4  	  mining_function     => dbms_data_mining.classification,
02:15:12   5  	  data_table_name     => 'svmc_build_prep',
02:15:12   6  	  case_id_column_name => '&case_id',
02:15:12   7  	  target_column_name  => '&target',
02:15:12   8  	  settings_table_name => 'svmc_settings');
02:15:12   9  END;
02:15:12  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.67
02:15:40 SQL> 
02:15:40 SQL> -----------------------------------------------------------------------
02:15:40 SQL> --			       APPLY/score THE MODEL
02:15:40 SQL> -----------------------------------------------------------------------
02:15:40 SQL> 
02:15:40 SQL> -- Cleanup old scoring data preparation objects for repeat runs
02:15:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
02:15:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:15:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
02:15:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
02:15:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:15:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.13
02:15:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
02:15:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:15:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.16
02:15:40 SQL> -----------------------
02:15:40 SQL> -- PREPARE SCORING DATA
02:15:40 SQL> --
02:15:40 SQL> -- If the data for model creation has been prepared, then the data
02:15:40 SQL> -- to be scored using the model must be prepared in the same manner
02:15:40 SQL> -- in order to obtain meaningful results.
02:15:40 SQL> --
02:15:40 SQL> -- 1. Missing Value treatment for all Predictors and
02:15:40 SQL> -- 2. Normalization
02:15:40 SQL> -- No outlier treatment will be performed during test and apply. The
02:15:40 SQL> -- normalization step is sufficient, since the normalization parameters
02:15:40 SQL> -- already capture the effects of outlier treatment done with build data.
02:15:40 SQL> --
02:15:40 SQL> BEGIN
02:15:40   2  	-- Xform Test data to replace missing values
02:15:40   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:15:40   4  	  miss_table_name => 'svmc_miss_num',
02:15:40   5  	  data_table_name => '&scoretable',
02:15:40   6  	  xform_view_name => 'xformed_apply_miss_num');
02:15:40   7  
02:15:40   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:15:40   9  	  miss_table_name => 'svmc_miss_cat',
02:15:40  10  	  data_table_name => '&scoretable',
02:15:40  11  	  xform_view_name => 'xformed_apply_miss_cat');
02:15:40  12  
02:15:40  13  	-- Normalize the data to be scored
02:15:40  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:15:40  15  	  norm_table_name => 'svmc_norm',
02:15:40  16  	  data_table_name => '&scoretable',
02:15:40  17  	  xform_view_name => 'svmc_apply_prep');
02:15:40  18  END;
02:15:40  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.38
02:15:42 SQL> 
02:15:42 SQL> -- Use same model_name used in score_gattn.sql
02:15:42 SQL> DEFINE model_name = 'forex14'
02:15:42 SQL> 
02:15:42 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
02:15:42 SQL> 
02:15:42 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
02:15:42   2  SELECT
02:15:42   3  prdate
02:15:42   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
02:15:42   5  ,sysdate
02:15:42   6  ,SUBSTR(prdate,1,3)pair
02:15:42   7  ,SUBSTR(prdate,4,19)ydate
02:15:42   8  FROM svmc_apply_prep
02:15:42   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
02:15:42 SQL> @aud_score1day_gattn.sql	2010-12-29 02:00:00
02:15:42 SQL> --
02:15:42 SQL> -- aud_score1day_gattn.sql
02:15:42 SQL> --
02:15:42 SQL> 
02:15:42 SQL> CREATE OR REPLACE VIEW sme AS
02:15:42   2  SELECT
02:15:42   3  'aud'||m.ydate prdate
02:15:42   4  ,NULL gattn
02:15:42   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:15:42   6  ,eur_g00
02:15:42   7  ,eur_g01
02:15:42   8  ,eur_g02
02:15:42   9  ,eur_g03
02:15:42  10  ,eur_g04
02:15:42  11  ,eur_g05
02:15:42  12  ,eur_g06
02:15:42  13  ,eur_g07
02:15:42  14  ,eur_g08
02:15:42  15  ,eur_g09
02:15:42  16  ,eur_g10
02:15:42  17  ,eur_g11
02:15:42  18  ,eur_g12
02:15:42  19  ,eur_g13
02:15:42  20  ,eur_g14
02:15:42  21  ,eur_g15
02:15:42  22  ,eur_g16
02:15:42  23  ,eur_g17
02:15:42  24  ,eur_g18
02:15:42  25  ,eur_g19
02:15:42  26  ,eur_g20
02:15:42  27  ,eur_g21
02:15:42  28  ,eur_g22
02:15:42  29  ,eur_g23
02:15:42  30  ,eur_g24
02:15:42  31  ,eur_g25
02:15:42  32  ,eur_g26
02:15:42  33  ,eur_g27
02:15:42  34  ,eur_g28
02:15:42  35  ,eur_g29
02:15:42  36  ,eur_g30
02:15:42  37  ,eur_g31
02:15:42  38  ,eur_g32
02:15:42  39  ,eur_g33
02:15:42  40  ,eur_g34
02:15:42  41  ,eur_g35
02:15:42  42  ,eur_g36
02:15:42  43  ,eur_g37
02:15:42  44  ,eur_g38
02:15:42  45  ,eur_g39
02:15:42  46  ,eur_g40
02:15:42  47  ,eur_g41
02:15:42  48  ,aud_g00
02:15:42  49  ,aud_g01
02:15:42  50  ,aud_g02
02:15:42  51  ,aud_g03
02:15:42  52  ,aud_g04
02:15:42  53  ,aud_g05
02:15:42  54  ,aud_g06
02:15:42  55  ,aud_g07
02:15:42  56  ,aud_g08
02:15:42  57  ,aud_g09
02:15:42  58  ,aud_g10
02:15:42  59  ,aud_g11
02:15:42  60  ,aud_g12
02:15:42  61  ,aud_g13
02:15:42  62  ,aud_g14
02:15:42  63  ,aud_g15
02:15:42  64  ,aud_g16
02:15:42  65  ,aud_g17
02:15:42  66  ,aud_g18
02:15:42  67  ,aud_g19
02:15:42  68  ,aud_g20
02:15:42  69  ,aud_g21
02:15:42  70  ,aud_g22
02:15:42  71  ,aud_g23
02:15:42  72  ,aud_g24
02:15:42  73  ,aud_g25
02:15:42  74  ,aud_g26
02:15:42  75  ,aud_g27
02:15:42  76  ,aud_g28
02:15:42  77  ,aud_g29
02:15:42  78  ,aud_g30
02:15:42  79  ,aud_g31
02:15:42  80  ,aud_g32
02:15:42  81  ,aud_g33
02:15:42  82  ,aud_g34
02:15:42  83  ,aud_g35
02:15:42  84  ,aud_g36
02:15:42  85  ,aud_g37
02:15:42  86  ,aud_g38
02:15:42  87  ,aud_g39
02:15:42  88  ,aud_g40
02:15:42  89  ,aud_g41
02:15:42  90  ,gbp_g00
02:15:42  91  ,gbp_g01
02:15:42  92  ,gbp_g02
02:15:42  93  ,gbp_g03
02:15:42  94  ,gbp_g04
02:15:42  95  ,gbp_g05
02:15:42  96  ,gbp_g06
02:15:42  97  ,gbp_g07
02:15:42  98  ,gbp_g08
02:15:42  99  ,gbp_g09
02:15:42 100  ,gbp_g10
02:15:42 101  ,gbp_g11
02:15:42 102  ,gbp_g12
02:15:42 103  ,gbp_g13
02:15:42 104  ,gbp_g14
02:15:42 105  ,gbp_g15
02:15:42 106  ,gbp_g16
02:15:42 107  ,gbp_g17
02:15:42 108  ,gbp_g18
02:15:42 109  ,gbp_g19
02:15:42 110  ,gbp_g20
02:15:42 111  ,gbp_g21
02:15:42 112  ,gbp_g22
02:15:42 113  ,gbp_g23
02:15:42 114  ,gbp_g24
02:15:42 115  ,gbp_g25
02:15:42 116  ,gbp_g26
02:15:42 117  ,gbp_g27
02:15:42 118  ,gbp_g28
02:15:42 119  ,gbp_g29
02:15:42 120  ,gbp_g30
02:15:42 121  ,gbp_g31
02:15:42 122  ,gbp_g32
02:15:42 123  ,gbp_g33
02:15:42 124  ,gbp_g34
02:15:42 125  ,gbp_g35
02:15:42 126  ,gbp_g36
02:15:42 127  ,gbp_g37
02:15:42 128  ,gbp_g38
02:15:42 129  ,gbp_g39
02:15:42 130  ,gbp_g40
02:15:42 131  ,gbp_g41
02:15:42 132  ,jpy_g00
02:15:42 133  ,jpy_g01
02:15:42 134  ,jpy_g02
02:15:42 135  ,jpy_g03
02:15:42 136  ,jpy_g04
02:15:42 137  ,jpy_g05
02:15:42 138  ,jpy_g06
02:15:42 139  ,jpy_g07
02:15:42 140  ,jpy_g08
02:15:42 141  ,jpy_g09
02:15:42 142  ,jpy_g10
02:15:42 143  ,jpy_g11
02:15:42 144  ,jpy_g12
02:15:42 145  ,jpy_g13
02:15:42 146  ,jpy_g14
02:15:42 147  ,jpy_g15
02:15:42 148  ,jpy_g16
02:15:42 149  ,jpy_g17
02:15:42 150  ,jpy_g18
02:15:42 151  ,jpy_g19
02:15:42 152  ,jpy_g20
02:15:42 153  ,jpy_g21
02:15:42 154  ,jpy_g22
02:15:42 155  ,jpy_g23
02:15:42 156  ,jpy_g24
02:15:42 157  ,jpy_g25
02:15:42 158  ,jpy_g26
02:15:42 159  ,jpy_g27
02:15:42 160  ,jpy_g28
02:15:42 161  ,jpy_g29
02:15:42 162  ,jpy_g30
02:15:42 163  ,jpy_g31
02:15:42 164  ,jpy_g32
02:15:42 165  ,jpy_g33
02:15:42 166  ,jpy_g34
02:15:42 167  ,jpy_g35
02:15:42 168  ,jpy_g36
02:15:42 169  ,jpy_g37
02:15:42 170  ,jpy_g38
02:15:42 171  ,jpy_g39
02:15:42 172  ,jpy_g40
02:15:42 173  ,jpy_g41
02:15:42 174  ,cad_g00
02:15:42 175  ,cad_g01
02:15:42 176  ,cad_g02
02:15:42 177  ,cad_g03
02:15:42 178  ,cad_g04
02:15:42 179  ,cad_g05
02:15:42 180  ,cad_g06
02:15:42 181  ,cad_g07
02:15:42 182  ,cad_g08
02:15:42 183  ,cad_g09
02:15:42 184  ,cad_g10
02:15:42 185  ,cad_g11
02:15:42 186  ,cad_g12
02:15:42 187  ,cad_g13
02:15:42 188  ,cad_g14
02:15:42 189  ,cad_g15
02:15:42 190  ,cad_g16
02:15:42 191  ,cad_g17
02:15:42 192  ,cad_g18
02:15:42 193  ,cad_g19
02:15:42 194  ,cad_g20
02:15:42 195  ,cad_g21
02:15:42 196  ,cad_g22
02:15:42 197  ,cad_g23
02:15:42 198  ,cad_g24
02:15:42 199  ,cad_g25
02:15:42 200  ,cad_g26
02:15:42 201  ,cad_g27
02:15:42 202  ,cad_g28
02:15:42 203  ,cad_g29
02:15:42 204  ,cad_g30
02:15:42 205  ,cad_g31
02:15:42 206  ,cad_g32
02:15:42 207  ,cad_g33
02:15:42 208  ,cad_g34
02:15:42 209  ,cad_g35
02:15:42 210  ,cad_g36
02:15:42 211  ,cad_g37
02:15:42 212  ,cad_g38
02:15:42 213  ,cad_g39
02:15:42 214  ,cad_g40
02:15:42 215  ,cad_g41
02:15:42 216  ,chf_g00
02:15:42 217  ,chf_g01
02:15:42 218  ,chf_g02
02:15:42 219  ,chf_g03
02:15:42 220  ,chf_g04
02:15:42 221  ,chf_g05
02:15:42 222  ,chf_g06
02:15:42 223  ,chf_g07
02:15:42 224  ,chf_g08
02:15:42 225  ,chf_g09
02:15:42 226  ,chf_g10
02:15:42 227  ,chf_g11
02:15:42 228  ,chf_g12
02:15:42 229  ,chf_g13
02:15:42 230  ,chf_g14
02:15:42 231  ,chf_g15
02:15:42 232  ,chf_g16
02:15:42 233  ,chf_g17
02:15:42 234  ,chf_g18
02:15:42 235  ,chf_g19
02:15:42 236  ,chf_g20
02:15:42 237  ,chf_g21
02:15:42 238  ,chf_g22
02:15:42 239  ,chf_g23
02:15:42 240  ,chf_g24
02:15:42 241  ,chf_g25
02:15:42 242  ,chf_g26
02:15:42 243  ,chf_g27
02:15:42 244  ,chf_g28
02:15:42 245  ,chf_g29
02:15:42 246  ,chf_g30
02:15:42 247  ,chf_g31
02:15:42 248  ,chf_g32
02:15:42 249  ,chf_g33
02:15:42 250  ,chf_g34
02:15:42 251  ,chf_g35
02:15:42 252  ,chf_g36
02:15:42 253  ,chf_g37
02:15:42 254  ,chf_g38
02:15:42 255  ,chf_g39
02:15:42 256  ,chf_g40
02:15:42 257  ,chf_g41
02:15:42 258  FROM aud_ms6 m
02:15:42 259  WHERE m.ydate = '&1'||' '||'&2'
02:15:42 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'02:00:00'

View created.

Elapsed: 00:00:00.25
02:15:42 SQL> 
02:15:42 SQL> -- rpt
02:15:42 SQL> -- We should see just 1 row:
02:15:42 SQL> 
02:15:42 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
02:15:42 SQL> 
02:15:42 SQL> -- Build the model:
02:15:42 SQL> CREATE OR REPLACE VIEW bme AS
02:15:42   2  SELECT
02:15:42   3  'aud'||m.ydate prdate
02:15:42   4  ,gattn
02:15:42   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:15:42   6  ,eur_g00
02:15:42   7  ,eur_g01
02:15:42   8  ,eur_g02
02:15:42   9  ,eur_g03
02:15:42  10  ,eur_g04
02:15:42  11  ,eur_g05
02:15:42  12  ,eur_g06
02:15:42  13  ,eur_g07
02:15:42  14  ,eur_g08
02:15:42  15  ,eur_g09
02:15:42  16  ,eur_g10
02:15:42  17  ,eur_g11
02:15:42  18  ,eur_g12
02:15:42  19  ,eur_g13
02:15:42  20  ,eur_g14
02:15:42  21  ,eur_g15
02:15:42  22  ,eur_g16
02:15:42  23  ,eur_g17
02:15:42  24  ,eur_g18
02:15:42  25  ,eur_g19
02:15:42  26  ,eur_g20
02:15:42  27  ,eur_g21
02:15:42  28  ,eur_g22
02:15:42  29  ,eur_g23
02:15:42  30  ,eur_g24
02:15:42  31  ,eur_g25
02:15:42  32  ,eur_g26
02:15:42  33  ,eur_g27
02:15:42  34  ,eur_g28
02:15:42  35  ,eur_g29
02:15:42  36  ,eur_g30
02:15:42  37  ,eur_g31
02:15:42  38  ,eur_g32
02:15:42  39  ,eur_g33
02:15:42  40  ,eur_g34
02:15:42  41  ,eur_g35
02:15:42  42  ,eur_g36
02:15:42  43  ,eur_g37
02:15:42  44  ,eur_g38
02:15:42  45  ,eur_g39
02:15:42  46  ,eur_g40
02:15:42  47  ,eur_g41
02:15:42  48  ,aud_g00
02:15:42  49  ,aud_g01
02:15:42  50  ,aud_g02
02:15:42  51  ,aud_g03
02:15:42  52  ,aud_g04
02:15:42  53  ,aud_g05
02:15:42  54  ,aud_g06
02:15:42  55  ,aud_g07
02:15:42  56  ,aud_g08
02:15:42  57  ,aud_g09
02:15:42  58  ,aud_g10
02:15:42  59  ,aud_g11
02:15:42  60  ,aud_g12
02:15:42  61  ,aud_g13
02:15:42  62  ,aud_g14
02:15:42  63  ,aud_g15
02:15:42  64  ,aud_g16
02:15:42  65  ,aud_g17
02:15:42  66  ,aud_g18
02:15:42  67  ,aud_g19
02:15:42  68  ,aud_g20
02:15:42  69  ,aud_g21
02:15:42  70  ,aud_g22
02:15:42  71  ,aud_g23
02:15:42  72  ,aud_g24
02:15:42  73  ,aud_g25
02:15:42  74  ,aud_g26
02:15:42  75  ,aud_g27
02:15:42  76  ,aud_g28
02:15:42  77  ,aud_g29
02:15:42  78  ,aud_g30
02:15:42  79  ,aud_g31
02:15:42  80  ,aud_g32
02:15:42  81  ,aud_g33
02:15:42  82  ,aud_g34
02:15:42  83  ,aud_g35
02:15:42  84  ,aud_g36
02:15:42  85  ,aud_g37
02:15:42  86  ,aud_g38
02:15:42  87  ,aud_g39
02:15:42  88  ,aud_g40
02:15:42  89  ,aud_g41
02:15:42  90  ,gbp_g00
02:15:42  91  ,gbp_g01
02:15:42  92  ,gbp_g02
02:15:42  93  ,gbp_g03
02:15:42  94  ,gbp_g04
02:15:42  95  ,gbp_g05
02:15:42  96  ,gbp_g06
02:15:42  97  ,gbp_g07
02:15:42  98  ,gbp_g08
02:15:42  99  ,gbp_g09
02:15:42 100  ,gbp_g10
02:15:42 101  ,gbp_g11
02:15:42 102  ,gbp_g12
02:15:42 103  ,gbp_g13
02:15:42 104  ,gbp_g14
02:15:42 105  ,gbp_g15
02:15:42 106  ,gbp_g16
02:15:42 107  ,gbp_g17
02:15:42 108  ,gbp_g18
02:15:42 109  ,gbp_g19
02:15:42 110  ,gbp_g20
02:15:42 111  ,gbp_g21
02:15:42 112  ,gbp_g22
02:15:42 113  ,gbp_g23
02:15:42 114  ,gbp_g24
02:15:42 115  ,gbp_g25
02:15:42 116  ,gbp_g26
02:15:42 117  ,gbp_g27
02:15:42 118  ,gbp_g28
02:15:42 119  ,gbp_g29
02:15:42 120  ,gbp_g30
02:15:42 121  ,gbp_g31
02:15:42 122  ,gbp_g32
02:15:42 123  ,gbp_g33
02:15:42 124  ,gbp_g34
02:15:42 125  ,gbp_g35
02:15:42 126  ,gbp_g36
02:15:42 127  ,gbp_g37
02:15:42 128  ,gbp_g38
02:15:42 129  ,gbp_g39
02:15:42 130  ,gbp_g40
02:15:42 131  ,gbp_g41
02:15:42 132  ,jpy_g00
02:15:42 133  ,jpy_g01
02:15:42 134  ,jpy_g02
02:15:42 135  ,jpy_g03
02:15:42 136  ,jpy_g04
02:15:42 137  ,jpy_g05
02:15:42 138  ,jpy_g06
02:15:42 139  ,jpy_g07
02:15:42 140  ,jpy_g08
02:15:42 141  ,jpy_g09
02:15:42 142  ,jpy_g10
02:15:42 143  ,jpy_g11
02:15:42 144  ,jpy_g12
02:15:42 145  ,jpy_g13
02:15:42 146  ,jpy_g14
02:15:42 147  ,jpy_g15
02:15:42 148  ,jpy_g16
02:15:42 149  ,jpy_g17
02:15:42 150  ,jpy_g18
02:15:42 151  ,jpy_g19
02:15:42 152  ,jpy_g20
02:15:42 153  ,jpy_g21
02:15:42 154  ,jpy_g22
02:15:42 155  ,jpy_g23
02:15:42 156  ,jpy_g24
02:15:42 157  ,jpy_g25
02:15:42 158  ,jpy_g26
02:15:42 159  ,jpy_g27
02:15:42 160  ,jpy_g28
02:15:42 161  ,jpy_g29
02:15:42 162  ,jpy_g30
02:15:42 163  ,jpy_g31
02:15:42 164  ,jpy_g32
02:15:42 165  ,jpy_g33
02:15:42 166  ,jpy_g34
02:15:42 167  ,jpy_g35
02:15:42 168  ,jpy_g36
02:15:42 169  ,jpy_g37
02:15:42 170  ,jpy_g38
02:15:42 171  ,jpy_g39
02:15:42 172  ,jpy_g40
02:15:42 173  ,jpy_g41
02:15:42 174  ,cad_g00
02:15:42 175  ,cad_g01
02:15:42 176  ,cad_g02
02:15:42 177  ,cad_g03
02:15:42 178  ,cad_g04
02:15:42 179  ,cad_g05
02:15:42 180  ,cad_g06
02:15:42 181  ,cad_g07
02:15:42 182  ,cad_g08
02:15:42 183  ,cad_g09
02:15:42 184  ,cad_g10
02:15:42 185  ,cad_g11
02:15:42 186  ,cad_g12
02:15:42 187  ,cad_g13
02:15:42 188  ,cad_g14
02:15:42 189  ,cad_g15
02:15:42 190  ,cad_g16
02:15:42 191  ,cad_g17
02:15:42 192  ,cad_g18
02:15:42 193  ,cad_g19
02:15:42 194  ,cad_g20
02:15:42 195  ,cad_g21
02:15:42 196  ,cad_g22
02:15:42 197  ,cad_g23
02:15:42 198  ,cad_g24
02:15:42 199  ,cad_g25
02:15:42 200  ,cad_g26
02:15:42 201  ,cad_g27
02:15:42 202  ,cad_g28
02:15:42 203  ,cad_g29
02:15:42 204  ,cad_g30
02:15:42 205  ,cad_g31
02:15:42 206  ,cad_g32
02:15:42 207  ,cad_g33
02:15:42 208  ,cad_g34
02:15:42 209  ,cad_g35
02:15:42 210  ,cad_g36
02:15:42 211  ,cad_g37
02:15:42 212  ,cad_g38
02:15:42 213  ,cad_g39
02:15:42 214  ,cad_g40
02:15:42 215  ,cad_g41
02:15:42 216  ,chf_g00
02:15:42 217  ,chf_g01
02:15:42 218  ,chf_g02
02:15:42 219  ,chf_g03
02:15:42 220  ,chf_g04
02:15:42 221  ,chf_g05
02:15:42 222  ,chf_g06
02:15:42 223  ,chf_g07
02:15:42 224  ,chf_g08
02:15:42 225  ,chf_g09
02:15:42 226  ,chf_g10
02:15:42 227  ,chf_g11
02:15:42 228  ,chf_g12
02:15:42 229  ,chf_g13
02:15:42 230  ,chf_g14
02:15:42 231  ,chf_g15
02:15:42 232  ,chf_g16
02:15:42 233  ,chf_g17
02:15:42 234  ,chf_g18
02:15:42 235  ,chf_g19
02:15:42 236  ,chf_g20
02:15:42 237  ,chf_g21
02:15:42 238  ,chf_g22
02:15:42 239  ,chf_g23
02:15:42 240  ,chf_g24
02:15:42 241  ,chf_g25
02:15:42 242  ,chf_g26
02:15:42 243  ,chf_g27
02:15:42 244  ,chf_g28
02:15:42 245  ,chf_g29
02:15:42 246  ,chf_g30
02:15:42 247  ,chf_g31
02:15:42 248  ,chf_g32
02:15:42 249  ,chf_g33
02:15:42 250  ,chf_g34
02:15:42 251  ,chf_g35
02:15:42 252  ,chf_g36
02:15:42 253  ,chf_g37
02:15:42 254  ,chf_g38
02:15:42 255  ,chf_g39
02:15:42 256  ,chf_g40
02:15:42 257  ,chf_g41
02:15:42 258  FROM aud_ms6 m
02:15:42 259  WHERE gattn IN('nup','up')
02:15:42 260  AND 1+m.ydate < '&1'||' '||'&2'
02:15:42 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'02:00:00'

View created.

Elapsed: 00:00:00.13
02:15:42 SQL> 
02:15:42 SQL> -- rpt
02:15:42 SQL> 
02:15:42 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12712
up	     6322

Elapsed: 00:00:00.03
02:15:42 SQL> 
02:15:42 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-28 01:55:00

Elapsed: 00:00:00.03
02:15:42 SQL> 
02:15:42 SQL> -- Now build model from bme and score sme
02:15:42 SQL> @score1gattn.sql
02:15:42 SQL> -- score1gattn.sql
02:15:42 SQL> 
02:15:42 SQL> -- Does the 1st SVM score
02:15:42 SQL> 
02:15:42 SQL> -- Fill up svmc_apply_prep
02:15:42 SQL> @score_gattn.sql
02:15:42 SQL> --
02:15:42 SQL> -- score_gattn.sql
02:15:42 SQL> --
02:15:42 SQL> 
02:15:42 SQL> -- usage: score_gattn.sql
02:15:42 SQL> 
02:15:42 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
02:15:42 SQL> 
02:15:42 SQL> DEFINE target	= 'gattn'
02:15:42 SQL> DEFINE model_name = 'forex14'
02:15:42 SQL> DEFINE bldtable	= 'bme'
02:15:42 SQL> DEFINE scoretable = 'sme'
02:15:42 SQL> DEFINE case_id	= 'prdate'
02:15:42 SQL> 
02:15:42 SQL> -- Define a variable to help me exclude some columns from some data mining calls
02:15:42 SQL> DEFINE exclude1 = "'&target','&case_id'"
02:15:42 SQL> 
02:15:42 SQL> -- Builds an SVM model using pl/sql.
02:15:42 SQL> 
02:15:42 SQL> -----------------------------------------------------------------------
02:15:42 SQL> --			    BUILD THE MODEL
02:15:42 SQL> -----------------------------------------------------------------------
02:15:42 SQL> 
02:15:42 SQL> -- Cleanup old build data preparation objects for repeat runs
02:15:42 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.02
02:15:42 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
02:15:42 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.02
02:15:42 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
02:15:42 SQL> 
02:15:42 SQL> 
02:15:42 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
02:15:42 SQL> --
02:15:42 SQL> -- DROP	TABLE svmc_settings ;
02:15:42 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
02:15:42 SQL> -- DELETE svmc_settings;
02:15:42 SQL> 
02:15:42 SQL> -- The default classification algorithm is Naive Bayes. So override
02:15:42 SQL> -- this choice to SVM using a settings table.
02:15:42 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
02:15:42 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
02:15:42 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
02:15:42 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
02:15:42 SQL> -- models.
02:15:42 SQL> --
02:15:42 SQL> 
02:15:42 SQL> -- Do this once and then comment it out.
02:15:42 SQL> -- That makes script go faster.
02:15:42 SQL> -- BEGIN
02:15:42 SQL> -- -- Populate settings table
02:15:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:15:42 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
02:15:42 SQL> --
02:15:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:15:42 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
02:15:42 SQL> --
02:15:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:15:42 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
02:15:42 SQL> --   COMMIT;
02:15:42 SQL> -- END;
02:15:42 SQL> -- /
02:15:42 SQL> 
02:15:42 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
02:15:42 SQL> 
02:15:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
02:15:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:15:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.20
02:15:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
02:15:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:15:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
02:15:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
02:15:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:15:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:15:43 SQL> 
02:15:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
02:15:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:15:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
02:15:43 SQL> 
02:15:43 SQL> --------------------------------
02:15:43 SQL> -- PREPARE BUILD (TRAINING) DATA
02:15:43 SQL> --
02:15:43 SQL> 
02:15:43 SQL> -- 1. Missing Value treatment for all Predictors and
02:15:43 SQL> -- 2. Outlier Treatment and
02:15:43 SQL> -- 3. Normalization are performed below.
02:15:43 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
02:15:43 SQL> --    normalized here.
02:15:43 SQL> 
02:15:43 SQL> BEGIN
02:15:43   2  	-- Perform missing value treatment for all predictors
02:15:43   3  	-- create miss tables
02:15:43   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
02:15:43   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
02:15:43   6  
02:15:43   7  	-- populate miss tables
02:15:43   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
02:15:43   9  	  miss_table_name => 'svmc_miss_num',
02:15:43  10  	  data_table_name => '&bldtable',
02:15:43  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:15:43  12  
02:15:43  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
02:15:43  14  	  miss_table_name => 'svmc_miss_cat',
02:15:43  15  	  data_table_name => '&bldtable',
02:15:43  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:15:43  17  
02:15:43  18  	-- xform input data to replace missing values
02:15:43  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:15:43  20  	  miss_table_name => 'svmc_miss_num',
02:15:43  21  	  data_table_name => '&bldtable',
02:15:43  22  	  xform_view_name => 'xformed_build_miss_num');
02:15:43  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:15:43  24  	  miss_table_name => 'svmc_miss_cat',
02:15:43  25  	  data_table_name => '&bldtable',
02:15:43  26  	  xform_view_name => 'xformed_build_miss_cat');
02:15:43  27  
02:15:43  28  	-- Perform outlier treatment.
02:15:43  29  	-- create clip table
02:15:43  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
02:15:43  31  
02:15:43  32  	-- populate clip table
02:15:43  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
02:15:43  34  	  clip_table_name => 'svmc_clip',
02:15:43  35  	  data_table_name => '&bldtable',
02:15:43  36  	  tail_frac	  => 0.025,
02:15:43  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:15:43  38  
02:15:43  39  	-- xform input data to winsorized data
02:15:43  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
02:15:43  41  	  clip_table_name => 'svmc_clip',
02:15:43  42  	  data_table_name => '&bldtable',
02:15:43  43  	  xform_view_name => 'svmc_winsor');
02:15:43  44  
02:15:43  45  	-- create normalization table
02:15:43  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
02:15:43  47  
02:15:43  48  	-- populate normalization table based on winsorized data
02:15:43  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
02:15:43  50  	  norm_table_name => 'svmc_norm',
02:15:43  51  	  data_table_name => 'svmc_winsor',
02:15:43  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:15:43  53  
02:15:43  54  	-- normalize the original data
02:15:43  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:15:43  56  	  norm_table_name => 'svmc_norm',
02:15:43  57  	  data_table_name => '&bldtable',
02:15:43  58  	  xform_view_name => 'svmc_build_prep');
02:15:43  59  END;
02:15:43  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.56
02:16:00 SQL> 
02:16:00 SQL> ---------------------
02:16:00 SQL> -- CREATE A NEW MODEL
02:16:00 SQL> --
02:16:00 SQL> -- Cleanup old model with the same name for repeat runs
02:16:00 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
02:16:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:16:00   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.31
02:16:02 SQL> 
02:16:02 SQL> -- Build a new SVM Model
02:16:02 SQL> BEGIN
02:16:02   2  	DBMS_DATA_MINING.CREATE_MODEL(
02:16:02   3  	  model_name	      => '&model_name',
02:16:02   4  	  mining_function     => dbms_data_mining.classification,
02:16:02   5  	  data_table_name     => 'svmc_build_prep',
02:16:02   6  	  case_id_column_name => '&case_id',
02:16:02   7  	  target_column_name  => '&target',
02:16:02   8  	  settings_table_name => 'svmc_settings');
02:16:02   9  END;
02:16:02  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.65
02:16:30 SQL> 
02:16:30 SQL> -----------------------------------------------------------------------
02:16:30 SQL> --			       APPLY/score THE MODEL
02:16:30 SQL> -----------------------------------------------------------------------
02:16:30 SQL> 
02:16:30 SQL> -- Cleanup old scoring data preparation objects for repeat runs
02:16:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
02:16:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:16:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.12
02:16:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
02:16:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:16:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.21
02:16:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
02:16:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:16:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.23
02:16:31 SQL> -----------------------
02:16:31 SQL> -- PREPARE SCORING DATA
02:16:31 SQL> --
02:16:31 SQL> -- If the data for model creation has been prepared, then the data
02:16:31 SQL> -- to be scored using the model must be prepared in the same manner
02:16:31 SQL> -- in order to obtain meaningful results.
02:16:31 SQL> --
02:16:31 SQL> -- 1. Missing Value treatment for all Predictors and
02:16:31 SQL> -- 2. Normalization
02:16:31 SQL> -- No outlier treatment will be performed during test and apply. The
02:16:31 SQL> -- normalization step is sufficient, since the normalization parameters
02:16:31 SQL> -- already capture the effects of outlier treatment done with build data.
02:16:31 SQL> --
02:16:31 SQL> BEGIN
02:16:31   2  	-- Xform Test data to replace missing values
02:16:31   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:16:31   4  	  miss_table_name => 'svmc_miss_num',
02:16:31   5  	  data_table_name => '&scoretable',
02:16:31   6  	  xform_view_name => 'xformed_apply_miss_num');
02:16:31   7  
02:16:31   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:16:31   9  	  miss_table_name => 'svmc_miss_cat',
02:16:31  10  	  data_table_name => '&scoretable',
02:16:31  11  	  xform_view_name => 'xformed_apply_miss_cat');
02:16:31  12  
02:16:31  13  	-- Normalize the data to be scored
02:16:31  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:16:31  15  	  norm_table_name => 'svmc_norm',
02:16:31  16  	  data_table_name => '&scoretable',
02:16:31  17  	  xform_view_name => 'svmc_apply_prep');
02:16:31  18  END;
02:16:31  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
02:16:32 SQL> 
02:16:32 SQL> -- Use same model_name used in score_gattn.sql
02:16:32 SQL> DEFINE model_name = 'forex14'
02:16:32 SQL> 
02:16:32 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
02:16:32 SQL> 
02:16:32 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
02:16:32   2  SELECT
02:16:32   3  prdate
02:16:32   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
02:16:32   5  ,sysdate
02:16:32   6  ,SUBSTR(prdate,1,3)pair
02:16:32   7  ,SUBSTR(prdate,4,19)ydate
02:16:32   8  FROM svmc_apply_prep
02:16:32   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
02:16:32 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
