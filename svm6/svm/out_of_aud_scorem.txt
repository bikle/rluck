
SQL*Plus: Release 11.2.0.1.0 Production on Mon Jan 3 00:53:27 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

00:53:27 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
00:53:27 SQL> 00:53:27 SQL> @aud_score1day.sql  2011-01-03 00:30:00
00:53:27 SQL> --
00:53:27 SQL> -- aud_score1day.sql
00:53:27 SQL> --
00:53:27 SQL> 
00:53:27 SQL> CREATE OR REPLACE VIEW sme AS
00:53:27   2  SELECT
00:53:27   3  'aud'||m.ydate prdate
00:53:27   4  ,NULL gatt
00:53:27   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
00:53:27   6  ,eur_g00
00:53:27   7  ,eur_g01
00:53:27   8  ,eur_g02
00:53:27   9  ,eur_g03
00:53:27  10  ,eur_g04
00:53:27  11  ,eur_g05
00:53:27  12  ,eur_g06
00:53:27  13  ,eur_g07
00:53:27  14  ,eur_g08
00:53:27  15  ,eur_g09
00:53:27  16  ,eur_g10
00:53:27  17  ,eur_g11
00:53:27  18  ,eur_g12
00:53:27  19  ,eur_g13
00:53:27  20  ,eur_g14
00:53:27  21  ,eur_g15
00:53:27  22  ,eur_g16
00:53:27  23  ,eur_g17
00:53:27  24  ,eur_g18
00:53:27  25  ,eur_g19
00:53:27  26  ,eur_g20
00:53:27  27  ,eur_g21
00:53:27  28  ,eur_g22
00:53:27  29  ,eur_g23
00:53:27  30  ,eur_g24
00:53:27  31  ,eur_g25
00:53:27  32  ,eur_g26
00:53:27  33  ,eur_g27
00:53:27  34  ,eur_g28
00:53:27  35  ,eur_g29
00:53:27  36  ,eur_g30
00:53:27  37  ,eur_g31
00:53:27  38  ,eur_g32
00:53:27  39  ,eur_g33
00:53:27  40  ,eur_g34
00:53:27  41  ,eur_g35
00:53:27  42  ,eur_g36
00:53:27  43  ,eur_g37
00:53:27  44  ,eur_g38
00:53:27  45  ,eur_g39
00:53:27  46  ,eur_g40
00:53:27  47  ,eur_g41
00:53:27  48  ,aud_g00
00:53:27  49  ,aud_g01
00:53:27  50  ,aud_g02
00:53:27  51  ,aud_g03
00:53:27  52  ,aud_g04
00:53:27  53  ,aud_g05
00:53:27  54  ,aud_g06
00:53:27  55  ,aud_g07
00:53:27  56  ,aud_g08
00:53:27  57  ,aud_g09
00:53:27  58  ,aud_g10
00:53:27  59  ,aud_g11
00:53:27  60  ,aud_g12
00:53:27  61  ,aud_g13
00:53:27  62  ,aud_g14
00:53:27  63  ,aud_g15
00:53:27  64  ,aud_g16
00:53:27  65  ,aud_g17
00:53:27  66  ,aud_g18
00:53:27  67  ,aud_g19
00:53:27  68  ,aud_g20
00:53:27  69  ,aud_g21
00:53:27  70  ,aud_g22
00:53:27  71  ,aud_g23
00:53:27  72  ,aud_g24
00:53:27  73  ,aud_g25
00:53:27  74  ,aud_g26
00:53:27  75  ,aud_g27
00:53:27  76  ,aud_g28
00:53:27  77  ,aud_g29
00:53:27  78  ,aud_g30
00:53:27  79  ,aud_g31
00:53:27  80  ,aud_g32
00:53:27  81  ,aud_g33
00:53:27  82  ,aud_g34
00:53:27  83  ,aud_g35
00:53:27  84  ,aud_g36
00:53:27  85  ,aud_g37
00:53:27  86  ,aud_g38
00:53:27  87  ,aud_g39
00:53:27  88  ,aud_g40
00:53:27  89  ,aud_g41
00:53:27  90  ,gbp_g00
00:53:27  91  ,gbp_g01
00:53:27  92  ,gbp_g02
00:53:27  93  ,gbp_g03
00:53:27  94  ,gbp_g04
00:53:27  95  ,gbp_g05
00:53:27  96  ,gbp_g06
00:53:27  97  ,gbp_g07
00:53:27  98  ,gbp_g08
00:53:27  99  ,gbp_g09
00:53:27 100  ,gbp_g10
00:53:27 101  ,gbp_g11
00:53:27 102  ,gbp_g12
00:53:27 103  ,gbp_g13
00:53:27 104  ,gbp_g14
00:53:27 105  ,gbp_g15
00:53:27 106  ,gbp_g16
00:53:27 107  ,gbp_g17
00:53:27 108  ,gbp_g18
00:53:27 109  ,gbp_g19
00:53:27 110  ,gbp_g20
00:53:27 111  ,gbp_g21
00:53:27 112  ,gbp_g22
00:53:27 113  ,gbp_g23
00:53:27 114  ,gbp_g24
00:53:27 115  ,gbp_g25
00:53:27 116  ,gbp_g26
00:53:27 117  ,gbp_g27
00:53:27 118  ,gbp_g28
00:53:27 119  ,gbp_g29
00:53:27 120  ,gbp_g30
00:53:27 121  ,gbp_g31
00:53:27 122  ,gbp_g32
00:53:27 123  ,gbp_g33
00:53:27 124  ,gbp_g34
00:53:27 125  ,gbp_g35
00:53:27 126  ,gbp_g36
00:53:27 127  ,gbp_g37
00:53:27 128  ,gbp_g38
00:53:27 129  ,gbp_g39
00:53:27 130  ,gbp_g40
00:53:27 131  ,gbp_g41
00:53:27 132  ,jpy_g00
00:53:27 133  ,jpy_g01
00:53:27 134  ,jpy_g02
00:53:27 135  ,jpy_g03
00:53:27 136  ,jpy_g04
00:53:27 137  ,jpy_g05
00:53:27 138  ,jpy_g06
00:53:27 139  ,jpy_g07
00:53:27 140  ,jpy_g08
00:53:27 141  ,jpy_g09
00:53:27 142  ,jpy_g10
00:53:27 143  ,jpy_g11
00:53:27 144  ,jpy_g12
00:53:27 145  ,jpy_g13
00:53:27 146  ,jpy_g14
00:53:27 147  ,jpy_g15
00:53:27 148  ,jpy_g16
00:53:27 149  ,jpy_g17
00:53:27 150  ,jpy_g18
00:53:27 151  ,jpy_g19
00:53:27 152  ,jpy_g20
00:53:27 153  ,jpy_g21
00:53:27 154  ,jpy_g22
00:53:27 155  ,jpy_g23
00:53:27 156  ,jpy_g24
00:53:27 157  ,jpy_g25
00:53:27 158  ,jpy_g26
00:53:27 159  ,jpy_g27
00:53:27 160  ,jpy_g28
00:53:27 161  ,jpy_g29
00:53:27 162  ,jpy_g30
00:53:27 163  ,jpy_g31
00:53:27 164  ,jpy_g32
00:53:27 165  ,jpy_g33
00:53:27 166  ,jpy_g34
00:53:27 167  ,jpy_g35
00:53:27 168  ,jpy_g36
00:53:27 169  ,jpy_g37
00:53:27 170  ,jpy_g38
00:53:27 171  ,jpy_g39
00:53:27 172  ,jpy_g40
00:53:27 173  ,jpy_g41
00:53:27 174  ,cad_g00
00:53:27 175  ,cad_g01
00:53:27 176  ,cad_g02
00:53:27 177  ,cad_g03
00:53:27 178  ,cad_g04
00:53:27 179  ,cad_g05
00:53:27 180  ,cad_g06
00:53:27 181  ,cad_g07
00:53:27 182  ,cad_g08
00:53:27 183  ,cad_g09
00:53:27 184  ,cad_g10
00:53:27 185  ,cad_g11
00:53:27 186  ,cad_g12
00:53:27 187  ,cad_g13
00:53:27 188  ,cad_g14
00:53:27 189  ,cad_g15
00:53:27 190  ,cad_g16
00:53:27 191  ,cad_g17
00:53:27 192  ,cad_g18
00:53:27 193  ,cad_g19
00:53:27 194  ,cad_g20
00:53:27 195  ,cad_g21
00:53:27 196  ,cad_g22
00:53:27 197  ,cad_g23
00:53:27 198  ,cad_g24
00:53:27 199  ,cad_g25
00:53:27 200  ,cad_g26
00:53:27 201  ,cad_g27
00:53:27 202  ,cad_g28
00:53:27 203  ,cad_g29
00:53:27 204  ,cad_g30
00:53:27 205  ,cad_g31
00:53:27 206  ,cad_g32
00:53:27 207  ,cad_g33
00:53:27 208  ,cad_g34
00:53:27 209  ,cad_g35
00:53:27 210  ,cad_g36
00:53:27 211  ,cad_g37
00:53:27 212  ,cad_g38
00:53:27 213  ,cad_g39
00:53:27 214  ,cad_g40
00:53:27 215  ,cad_g41
00:53:27 216  ,chf_g00
00:53:27 217  ,chf_g01
00:53:27 218  ,chf_g02
00:53:27 219  ,chf_g03
00:53:27 220  ,chf_g04
00:53:27 221  ,chf_g05
00:53:27 222  ,chf_g06
00:53:27 223  ,chf_g07
00:53:27 224  ,chf_g08
00:53:27 225  ,chf_g09
00:53:27 226  ,chf_g10
00:53:27 227  ,chf_g11
00:53:27 228  ,chf_g12
00:53:27 229  ,chf_g13
00:53:27 230  ,chf_g14
00:53:27 231  ,chf_g15
00:53:27 232  ,chf_g16
00:53:27 233  ,chf_g17
00:53:27 234  ,chf_g18
00:53:27 235  ,chf_g19
00:53:27 236  ,chf_g20
00:53:27 237  ,chf_g21
00:53:27 238  ,chf_g22
00:53:27 239  ,chf_g23
00:53:27 240  ,chf_g24
00:53:27 241  ,chf_g25
00:53:27 242  ,chf_g26
00:53:27 243  ,chf_g27
00:53:27 244  ,chf_g28
00:53:27 245  ,chf_g29
00:53:27 246  ,chf_g30
00:53:27 247  ,chf_g31
00:53:27 248  ,chf_g32
00:53:27 249  ,chf_g33
00:53:27 250  ,chf_g34
00:53:27 251  ,chf_g35
00:53:27 252  ,chf_g36
00:53:27 253  ,chf_g37
00:53:27 254  ,chf_g38
00:53:27 255  ,chf_g39
00:53:27 256  ,chf_g40
00:53:27 257  ,chf_g41
00:53:27 258  FROM aud_ms6 m
00:53:27 259  WHERE m.ydate = '&1'||' '||'&2'
00:53:27 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'00:30:00'

View created.

Elapsed: 00:00:00.15
00:53:27 SQL> 
00:53:27 SQL> -- rpt
00:53:27 SQL> -- We should see just 1 row:
00:53:27 SQL> 
00:53:27 SQL> SELECT COUNT(prdate) FROM sme
00:53:27   2  
00:53:27 SQL> -- Build the model:
00:53:27 SQL> CREATE OR REPLACE VIEW bme AS
00:53:27   2  SELECT
00:53:27   3  'aud'||m.ydate prdate
00:53:27   4  ,gatt
00:53:27   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
00:53:27   6  ,eur_g00
00:53:27   7  ,eur_g01
00:53:27   8  ,eur_g02
00:53:27   9  ,eur_g03
00:53:27  10  ,eur_g04
00:53:27  11  ,eur_g05
00:53:27  12  ,eur_g06
00:53:27  13  ,eur_g07
00:53:27  14  ,eur_g08
00:53:27  15  ,eur_g09
00:53:27  16  ,eur_g10
00:53:27  17  ,eur_g11
00:53:27  18  ,eur_g12
00:53:27  19  ,eur_g13
00:53:27  20  ,eur_g14
00:53:27  21  ,eur_g15
00:53:27  22  ,eur_g16
00:53:27  23  ,eur_g17
00:53:27  24  ,eur_g18
00:53:27  25  ,eur_g19
00:53:27  26  ,eur_g20
00:53:27  27  ,eur_g21
00:53:27  28  ,eur_g22
00:53:27  29  ,eur_g23
00:53:27  30  ,eur_g24
00:53:27  31  ,eur_g25
00:53:27  32  ,eur_g26
00:53:27  33  ,eur_g27
00:53:27  34  ,eur_g28
00:53:27  35  ,eur_g29
00:53:27  36  ,eur_g30
00:53:27  37  ,eur_g31
00:53:27  38  ,eur_g32
00:53:27  39  ,eur_g33
00:53:27  40  ,eur_g34
00:53:27  41  ,eur_g35
00:53:27  42  ,eur_g36
00:53:27  43  ,eur_g37
00:53:27  44  ,eur_g38
00:53:27  45  ,eur_g39
00:53:27  46  ,eur_g40
00:53:27  47  ,eur_g41
00:53:27  48  ,aud_g00
00:53:27  49  ,aud_g01
00:53:27  50  ,aud_g02
00:53:27  51  ,aud_g03
00:53:27  52  ,aud_g04
00:53:27  53  ,aud_g05
00:53:27  54  ,aud_g06
00:53:27  55  ,aud_g07
00:53:27  56  ,aud_g08
00:53:27  57  ,aud_g09
00:53:27  58  ,aud_g10
00:53:27  59  ,aud_g11
00:53:27  60  ,aud_g12
00:53:27  61  ,aud_g13
00:53:27  62  ,aud_g14
00:53:27  63  ,aud_g15
00:53:27  64  ,aud_g16
00:53:27  65  ,aud_g17
00:53:27  66  ,aud_g18
00:53:27  67  ,aud_g19
00:53:27  68  ,aud_g20
00:53:27  69  ,aud_g21
00:53:27  70  ,aud_g22
00:53:27  71  ,aud_g23
00:53:27  72  ,aud_g24
00:53:27  73  ,aud_g25
00:53:27  74  ,aud_g26
00:53:27  75  ,aud_g27
00:53:27  76  ,aud_g28
00:53:27  77  ,aud_g29
00:53:27  78  ,aud_g30
00:53:27  79  ,aud_g31
00:53:27  80  ,aud_g32
00:53:27  81  ,aud_g33
00:53:27  82  ,aud_g34
00:53:27  83  ,aud_g35
00:53:27  84  ,aud_g36
00:53:27  85  ,aud_g37
00:53:27  86  ,aud_g38
00:53:27  87  ,aud_g39
00:53:27  88  ,aud_g40
00:53:27  89  ,aud_g41
00:53:27  90  ,gbp_g00
00:53:27  91  ,gbp_g01
00:53:27  92  ,gbp_g02
00:53:27  93  ,gbp_g03
00:53:27  94  ,gbp_g04
00:53:27  95  ,gbp_g05
00:53:27  96  ,gbp_g06
00:53:27  97  ,gbp_g07
00:53:27  98  ,gbp_g08
00:53:27  99  ,gbp_g09
00:53:27 100  ,gbp_g10
00:53:27 101  ,gbp_g11
00:53:27 102  ,gbp_g12
00:53:27 103  ,gbp_g13
00:53:27 104  ,gbp_g14
00:53:27 105  ,gbp_g15
00:53:27 106  ,gbp_g16
00:53:27 107  ,gbp_g17
00:53:27 108  ,gbp_g18
00:53:27 109  ,gbp_g19
00:53:27 110  ,gbp_g20
00:53:27 111  ,gbp_g21
00:53:27 112  ,gbp_g22
00:53:27 113  ,gbp_g23
00:53:27 114  ,gbp_g24
00:53:27 115  ,gbp_g25
00:53:27 116  ,gbp_g26
00:53:27 117  ,gbp_g27
00:53:27 118  ,gbp_g28
00:53:27 119  ,gbp_g29
00:53:27 120  ,gbp_g30
00:53:27 121  ,gbp_g31
00:53:27 122  ,gbp_g32
00:53:27 123  ,gbp_g33
00:53:27 124  ,gbp_g34
00:53:27 125  ,gbp_g35
00:53:27 126  ,gbp_g36
00:53:27 127  ,gbp_g37
00:53:27 128  ,gbp_g38
00:53:27 129  ,gbp_g39
00:53:27 130  ,gbp_g40
00:53:27 131  ,gbp_g41
00:53:27 132  ,jpy_g00
00:53:27 133  ,jpy_g01
00:53:27 134  ,jpy_g02
00:53:27 135  ,jpy_g03
00:53:27 136  ,jpy_g04
00:53:27 137  ,jpy_g05
00:53:27 138  ,jpy_g06
00:53:27 139  ,jpy_g07
00:53:27 140  ,jpy_g08
00:53:27 141  ,jpy_g09
00:53:27 142  ,jpy_g10
00:53:27 143  ,jpy_g11
00:53:27 144  ,jpy_g12
00:53:27 145  ,jpy_g13
00:53:27 146  ,jpy_g14
00:53:27 147  ,jpy_g15
00:53:27 148  ,jpy_g16
00:53:27 149  ,jpy_g17
00:53:27 150  ,jpy_g18
00:53:27 151  ,jpy_g19
00:53:27 152  ,jpy_g20
00:53:27 153  ,jpy_g21
00:53:27 154  ,jpy_g22
00:53:27 155  ,jpy_g23
00:53:27 156  ,jpy_g24
00:53:27 157  ,jpy_g25
00:53:27 158  ,jpy_g26
00:53:27 159  ,jpy_g27
00:53:27 160  ,jpy_g28
00:53:27 161  ,jpy_g29
00:53:27 162  ,jpy_g30
00:53:27 163  ,jpy_g31
00:53:27 164  ,jpy_g32
00:53:27 165  ,jpy_g33
00:53:27 166  ,jpy_g34
00:53:27 167  ,jpy_g35
00:53:27 168  ,jpy_g36
00:53:27 169  ,jpy_g37
00:53:27 170  ,jpy_g38
00:53:27 171  ,jpy_g39
00:53:27 172  ,jpy_g40
00:53:27 173  ,jpy_g41
00:53:27 174  ,cad_g00
00:53:27 175  ,cad_g01
00:53:27 176  ,cad_g02
00:53:27 177  ,cad_g03
00:53:27 178  ,cad_g04
00:53:27 179  ,cad_g05
00:53:27 180  ,cad_g06
00:53:27 181  ,cad_g07
00:53:27 182  ,cad_g08
00:53:27 183  ,cad_g09
00:53:27 184  ,cad_g10
00:53:27 185  ,cad_g11
00:53:27 186  ,cad_g12
00:53:27 187  ,cad_g13
00:53:27 188  ,cad_g14
00:53:27 189  ,cad_g15
00:53:27 190  ,cad_g16
00:53:27 191  ,cad_g17
00:53:27 192  ,cad_g18
00:53:27 193  ,cad_g19
00:53:27 194  ,cad_g20
00:53:27 195  ,cad_g21
00:53:27 196  ,cad_g22
00:53:27 197  ,cad_g23
00:53:27 198  ,cad_g24
00:53:27 199  ,cad_g25
00:53:27 200  ,cad_g26
00:53:27 201  ,cad_g27
00:53:27 202  ,cad_g28
00:53:27 203  ,cad_g29
00:53:27 204  ,cad_g30
00:53:27 205  ,cad_g31
00:53:27 206  ,cad_g32
00:53:27 207  ,cad_g33
00:53:27 208  ,cad_g34
00:53:27 209  ,cad_g35
00:53:27 210  ,cad_g36
00:53:27 211  ,cad_g37
00:53:27 212  ,cad_g38
00:53:27 213  ,cad_g39
00:53:27 214  ,cad_g40
00:53:27 215  ,cad_g41
00:53:27 216  ,chf_g00
00:53:27 217  ,chf_g01
00:53:27 218  ,chf_g02
00:53:27 219  ,chf_g03
00:53:27 220  ,chf_g04
00:53:27 221  ,chf_g05
00:53:27 222  ,chf_g06
00:53:27 223  ,chf_g07
00:53:27 224  ,chf_g08
00:53:27 225  ,chf_g09
00:53:27 226  ,chf_g10
00:53:27 227  ,chf_g11
00:53:27 228  ,chf_g12
00:53:27 229  ,chf_g13
00:53:27 230  ,chf_g14
00:53:27 231  ,chf_g15
00:53:27 232  ,chf_g16
00:53:27 233  ,chf_g17
00:53:27 234  ,chf_g18
00:53:27 235  ,chf_g19
00:53:27 236  ,chf_g20
00:53:27 237  ,chf_g21
00:53:27 238  ,chf_g22
00:53:27 239  ,chf_g23
00:53:27 240  ,chf_g24
00:53:27 241  ,chf_g25
00:53:27 242  ,chf_g26
00:53:27 243  ,chf_g27
00:53:27 244  ,chf_g28
00:53:27 245  ,chf_g29
00:53:27 246  ,chf_g30
00:53:27 247  ,chf_g31
00:53:27 248  ,chf_g32
00:53:27 249  ,chf_g33
00:53:27 250  ,chf_g34
00:53:27 251  ,chf_g35
00:53:27 252  ,chf_g36
00:53:27 253  ,chf_g37
00:53:27 254  ,chf_g38
00:53:27 255  ,chf_g39
00:53:27 256  ,chf_g40
00:53:27 257  ,chf_g41
00:53:27 258  FROM aud_ms6 m
00:53:27 259  WHERE gatt IN('nup','up')
00:53:27 260  AND 1+m.ydate < '&1'||' '||'&2'
00:53:27 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'00:30:00'

View created.

Elapsed: 00:00:00.15
00:53:27 SQL> 
00:53:27 SQL> -- rpt
00:53:27 SQL> 
00:53:27 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
00:53:27   2  
00:53:27 SQL> SELECT MAX(prdate) FROM bme
00:53:27   2  
00:53:27 SQL> -- Now build model from bme and score sme
00:53:27 SQL> @score1.sql
00:53:27 SQL> -- score1.sql
00:53:27 SQL> 
00:53:27 SQL> -- Does the 1st SVM score
00:53:27 SQL> 
00:53:27 SQL> -- Fill up svmc_apply_prep
00:53:27 SQL> @score.sql
00:53:27 SQL> --
00:53:27 SQL> -- score.sql
00:53:27 SQL> --
00:53:27 SQL> 
00:53:27 SQL> -- usage: score.sql
00:53:27 SQL> 
00:53:27 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
00:53:27 SQL> 
00:53:27 SQL> DEFINE target	= 'gatt'
00:53:27 SQL> DEFINE model_name = 'forex14'
00:53:27 SQL> DEFINE bldtable	= 'bme'
00:53:27 SQL> DEFINE scoretable = 'sme'
00:53:27 SQL> DEFINE case_id	= 'prdate'
00:53:27 SQL> 
00:53:27 SQL> -- Define a variable to help me exclude some columns from some data mining calls
00:53:27 SQL> DEFINE exclude1 = "'&target','&case_id'"
00:53:27 SQL> 
00:53:27 SQL> -- Builds an SVM model using pl/sql.
00:53:27 SQL> 
00:53:27 SQL> -----------------------------------------------------------------------
00:53:27 SQL> --			    BUILD THE MODEL
00:53:27 SQL> -----------------------------------------------------------------------
00:53:27 SQL> 
00:53:27 SQL> -- Cleanup old build data preparation objects for repeat runs
00:53:27 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
00:53:27 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
00:53:27 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
00:53:27 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
00:53:27 SQL> 
00:53:27 SQL> 
00:53:27 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
00:53:27 SQL> --
00:53:27 SQL> -- DROP	TABLE svmc_settings ;
00:53:27 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
00:53:27 SQL> -- DELETE svmc_settings;
00:53:27 SQL> 
00:53:27 SQL> -- The default classification algorithm is Naive Bayes. So override
00:53:27 SQL> -- this choice to SVM using a settings table.
00:53:27 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
00:53:27 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
00:53:27 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
00:53:27 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
00:53:27 SQL> -- models.
00:53:27 SQL> --
00:53:27 SQL> 
00:53:27 SQL> -- Do this once and then comment it out.
00:53:27 SQL> -- That makes script go faster.
00:53:27 SQL> -- BEGIN
00:53:27 SQL> -- -- Populate settings table
00:53:27 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
00:53:27 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
00:53:27 SQL> --
00:53:27 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
00:53:27 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
00:53:27 SQL> --
00:53:27 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
00:53:27 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
00:53:27 SQL> --   COMMIT;
00:53:27 SQL> -- END;
00:53:27 SQL> -- /
00:53:27 SQL> 
00:53:27 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
00:53:27 SQL> 
00:53:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
00:53:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:53:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
00:53:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
00:53:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:53:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
00:53:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
00:53:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:53:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
00:53:27 SQL> 
00:53:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
00:53:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:53:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
00:53:27 SQL> 
00:53:27 SQL> --------------------------------
00:53:27 SQL> -- PREPARE BUILD (TRAINING) DATA
00:53:27 SQL> --
00:53:27 SQL> 
00:53:27 SQL> -- 1. Missing Value treatment for all Predictors and
00:53:27 SQL> -- 2. Outlier Treatment and
00:53:27 SQL> -- 3. Normalization are performed below.
00:53:27 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
00:53:27 SQL> --    normalized here.
00:53:27 SQL> 
00:53:27 SQL> BEGIN
00:53:27   2  	-- Perform missing value treatment for all predictors
00:53:27   3  	-- create miss tables
00:53:27   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
00:53:27   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
00:53:27   6  
00:53:27   7  	-- populate miss tables
00:53:27   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
00:53:27   9  	  miss_table_name => 'svmc_miss_num',
00:53:27  10  	  data_table_name => '&bldtable',
00:53:27  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
00:53:27  12  
00:53:27  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
00:53:27  14  	  miss_table_name => 'svmc_miss_cat',
00:53:27  15  	  data_table_name => '&bldtable',
00:53:27  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
00:53:27  17  
00:53:27  18  	-- xform input data to replace missing values
00:53:27  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
00:53:27  20  	  miss_table_name => 'svmc_miss_num',
00:53:27  21  	  data_table_name => '&bldtable',
00:53:27  22  	  xform_view_name => 'xformed_build_miss_num');
00:53:27  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
00:53:27  24  	  miss_table_name => 'svmc_miss_cat',
00:53:27  25  	  data_table_name => '&bldtable',
00:53:27  26  	  xform_view_name => 'xformed_build_miss_cat');
00:53:27  27  
00:53:27  28  	-- Perform outlier treatment.
00:53:27  29  	-- create clip table
00:53:27  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
00:53:27  31  
00:53:27  32  	-- populate clip table
00:53:27  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
00:53:27  34  	  clip_table_name => 'svmc_clip',
00:53:27  35  	  data_table_name => '&bldtable',
00:53:27  36  	  tail_frac	  => 0.025,
00:53:27  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
00:53:27  38  
00:53:27  39  	-- xform input data to winsorized data
00:53:27  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
00:53:27  41  	  clip_table_name => 'svmc_clip',
00:53:27  42  	  data_table_name => '&bldtable',
00:53:27  43  	  xform_view_name => 'svmc_winsor');
00:53:27  44  
00:53:27  45  	-- create normalization table
00:53:27  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
00:53:27  47  
00:53:27  48  	-- populate normalization table based on winsorized data
00:53:27  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
00:53:27  50  	  norm_table_name => 'svmc_norm',
00:53:27  51  	  data_table_name => 'svmc_winsor',
00:53:27  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
00:53:27  53  
00:53:27  54  	-- normalize the original data
00:53:27  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
00:53:27  56  	  norm_table_name => 'svmc_norm',
00:53:27  57  	  data_table_name => '&bldtable',
00:53:27  58  	  xform_view_name => 'svmc_build_prep');
00:53:27  59  END;
00:53:27  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.12
00:53:47 SQL> 
00:53:47 SQL> ---------------------
00:53:47 SQL> -- CREATE A NEW MODEL
00:53:47 SQL> --
00:53:47 SQL> -- Cleanup old model with the same name for repeat runs
00:53:47 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
00:53:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:53:47   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.56
00:53:47 SQL> 
00:53:47 SQL> -- Build a new SVM Model
00:53:47 SQL> BEGIN
00:53:47   2  	DBMS_DATA_MINING.CREATE_MODEL(
00:53:47   3  	  model_name	      => '&model_name',
00:53:47   4  	  mining_function     => dbms_data_mining.classification,
00:53:47   5  	  data_table_name     => 'svmc_build_prep',
00:53:47   6  	  case_id_column_name => '&case_id',
00:53:47   7  	  target_column_name  => '&target',
00:53:47   8  	  settings_table_name => 'svmc_settings');
00:53:47   9  END;
00:53:47  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.17
00:54:16 SQL> 
00:54:16 SQL> -----------------------------------------------------------------------
00:54:16 SQL> --			       APPLY/score THE MODEL
00:54:16 SQL> -----------------------------------------------------------------------
00:54:16 SQL> 
00:54:16 SQL> -- Cleanup old scoring data preparation objects for repeat runs
00:54:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
00:54:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:54:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
00:54:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
00:54:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:54:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
00:54:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
00:54:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:54:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
00:54:17 SQL> -----------------------
00:54:17 SQL> -- PREPARE SCORING DATA
00:54:17 SQL> --
00:54:17 SQL> -- If the data for model creation has been prepared, then the data
00:54:17 SQL> -- to be scored using the model must be prepared in the same manner
00:54:17 SQL> -- in order to obtain meaningful results.
00:54:17 SQL> --
00:54:17 SQL> -- 1. Missing Value treatment for all Predictors and
00:54:17 SQL> -- 2. Normalization
00:54:17 SQL> -- No outlier treatment will be performed during test and apply. The
00:54:17 SQL> -- normalization step is sufficient, since the normalization parameters
00:54:17 SQL> -- already capture the effects of outlier treatment done with build data.
00:54:17 SQL> --
00:54:17 SQL> BEGIN
00:54:17   2  	-- Xform Test data to replace missing values
00:54:17   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
00:54:17   4  	  miss_table_name => 'svmc_miss_num',
00:54:17   5  	  data_table_name => '&scoretable',
00:54:17   6  	  xform_view_name => 'xformed_apply_miss_num');
00:54:17   7  
00:54:17   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
00:54:17   9  	  miss_table_name => 'svmc_miss_cat',
00:54:17  10  	  data_table_name => '&scoretable',
00:54:17  11  	  xform_view_name => 'xformed_apply_miss_cat');
00:54:17  12  
00:54:17  13  	-- Normalize the data to be scored
00:54:17  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
00:54:17  15  	  norm_table_name => 'svmc_norm',
00:54:17  16  	  data_table_name => '&scoretable',
00:54:17  17  	  xform_view_name => 'svmc_apply_prep');
00:54:17  18  END;
00:54:17  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.41
00:54:18 SQL> 
00:54:18 SQL> -- Use same model_name used in score.sql
00:54:18 SQL> DEFINE model_name = 'forex14'
00:54:18 SQL> 
00:54:18 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
00:54:18 SQL> 
00:54:18 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
00:54:18 SQL> 
00:54:18 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
00:54:18   2  SELECT
00:54:18   3  prdate
00:54:18   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
00:54:18   5  ,sysdate
00:54:18   6  ,SUBSTR(prdate,1,3)pair
00:54:18   7  ,SUBSTR(prdate,4,19)ydate
00:54:18   8  FROM svmc_apply_prep
00:54:18   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.21
00:54:18 SQL> @aud_score1day.sql  2011-01-03 00:35:00
00:54:18 SQL> --
00:54:18 SQL> -- aud_score1day.sql
00:54:18 SQL> --
00:54:18 SQL> 
00:54:18 SQL> CREATE OR REPLACE VIEW sme AS
00:54:18   2  SELECT
00:54:18   3  'aud'||m.ydate prdate
00:54:18   4  ,NULL gatt
00:54:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
00:54:18   6  ,eur_g00
00:54:18   7  ,eur_g01
00:54:18   8  ,eur_g02
00:54:18   9  ,eur_g03
00:54:18  10  ,eur_g04
00:54:18  11  ,eur_g05
00:54:18  12  ,eur_g06
00:54:18  13  ,eur_g07
00:54:18  14  ,eur_g08
00:54:18  15  ,eur_g09
00:54:18  16  ,eur_g10
00:54:18  17  ,eur_g11
00:54:18  18  ,eur_g12
00:54:18  19  ,eur_g13
00:54:18  20  ,eur_g14
00:54:18  21  ,eur_g15
00:54:18  22  ,eur_g16
00:54:18  23  ,eur_g17
00:54:18  24  ,eur_g18
00:54:18  25  ,eur_g19
00:54:18  26  ,eur_g20
00:54:18  27  ,eur_g21
00:54:18  28  ,eur_g22
00:54:18  29  ,eur_g23
00:54:18  30  ,eur_g24
00:54:18  31  ,eur_g25
00:54:18  32  ,eur_g26
00:54:18  33  ,eur_g27
00:54:18  34  ,eur_g28
00:54:18  35  ,eur_g29
00:54:18  36  ,eur_g30
00:54:18  37  ,eur_g31
00:54:18  38  ,eur_g32
00:54:18  39  ,eur_g33
00:54:18  40  ,eur_g34
00:54:18  41  ,eur_g35
00:54:18  42  ,eur_g36
00:54:18  43  ,eur_g37
00:54:18  44  ,eur_g38
00:54:18  45  ,eur_g39
00:54:18  46  ,eur_g40
00:54:18  47  ,eur_g41
00:54:18  48  ,aud_g00
00:54:18  49  ,aud_g01
00:54:18  50  ,aud_g02
00:54:18  51  ,aud_g03
00:54:18  52  ,aud_g04
00:54:18  53  ,aud_g05
00:54:18  54  ,aud_g06
00:54:18  55  ,aud_g07
00:54:18  56  ,aud_g08
00:54:18  57  ,aud_g09
00:54:18  58  ,aud_g10
00:54:18  59  ,aud_g11
00:54:18  60  ,aud_g12
00:54:18  61  ,aud_g13
00:54:18  62  ,aud_g14
00:54:18  63  ,aud_g15
00:54:18  64  ,aud_g16
00:54:18  65  ,aud_g17
00:54:18  66  ,aud_g18
00:54:18  67  ,aud_g19
00:54:18  68  ,aud_g20
00:54:18  69  ,aud_g21
00:54:18  70  ,aud_g22
00:54:18  71  ,aud_g23
00:54:18  72  ,aud_g24
00:54:18  73  ,aud_g25
00:54:18  74  ,aud_g26
00:54:18  75  ,aud_g27
00:54:18  76  ,aud_g28
00:54:18  77  ,aud_g29
00:54:18  78  ,aud_g30
00:54:18  79  ,aud_g31
00:54:18  80  ,aud_g32
00:54:18  81  ,aud_g33
00:54:18  82  ,aud_g34
00:54:18  83  ,aud_g35
00:54:18  84  ,aud_g36
00:54:18  85  ,aud_g37
00:54:18  86  ,aud_g38
00:54:18  87  ,aud_g39
00:54:18  88  ,aud_g40
00:54:18  89  ,aud_g41
00:54:18  90  ,gbp_g00
00:54:18  91  ,gbp_g01
00:54:18  92  ,gbp_g02
00:54:18  93  ,gbp_g03
00:54:18  94  ,gbp_g04
00:54:18  95  ,gbp_g05
00:54:18  96  ,gbp_g06
00:54:18  97  ,gbp_g07
00:54:18  98  ,gbp_g08
00:54:18  99  ,gbp_g09
00:54:18 100  ,gbp_g10
00:54:18 101  ,gbp_g11
00:54:18 102  ,gbp_g12
00:54:18 103  ,gbp_g13
00:54:18 104  ,gbp_g14
00:54:18 105  ,gbp_g15
00:54:18 106  ,gbp_g16
00:54:18 107  ,gbp_g17
00:54:18 108  ,gbp_g18
00:54:18 109  ,gbp_g19
00:54:18 110  ,gbp_g20
00:54:18 111  ,gbp_g21
00:54:18 112  ,gbp_g22
00:54:18 113  ,gbp_g23
00:54:18 114  ,gbp_g24
00:54:18 115  ,gbp_g25
00:54:18 116  ,gbp_g26
00:54:18 117  ,gbp_g27
00:54:18 118  ,gbp_g28
00:54:18 119  ,gbp_g29
00:54:18 120  ,gbp_g30
00:54:18 121  ,gbp_g31
00:54:18 122  ,gbp_g32
00:54:18 123  ,gbp_g33
00:54:18 124  ,gbp_g34
00:54:18 125  ,gbp_g35
00:54:18 126  ,gbp_g36
00:54:18 127  ,gbp_g37
00:54:18 128  ,gbp_g38
00:54:18 129  ,gbp_g39
00:54:18 130  ,gbp_g40
00:54:18 131  ,gbp_g41
00:54:18 132  ,jpy_g00
00:54:18 133  ,jpy_g01
00:54:18 134  ,jpy_g02
00:54:18 135  ,jpy_g03
00:54:18 136  ,jpy_g04
00:54:18 137  ,jpy_g05
00:54:18 138  ,jpy_g06
00:54:18 139  ,jpy_g07
00:54:18 140  ,jpy_g08
00:54:18 141  ,jpy_g09
00:54:18 142  ,jpy_g10
00:54:18 143  ,jpy_g11
00:54:18 144  ,jpy_g12
00:54:18 145  ,jpy_g13
00:54:18 146  ,jpy_g14
00:54:18 147  ,jpy_g15
00:54:18 148  ,jpy_g16
00:54:18 149  ,jpy_g17
00:54:18 150  ,jpy_g18
00:54:18 151  ,jpy_g19
00:54:18 152  ,jpy_g20
00:54:18 153  ,jpy_g21
00:54:18 154  ,jpy_g22
00:54:18 155  ,jpy_g23
00:54:18 156  ,jpy_g24
00:54:18 157  ,jpy_g25
00:54:18 158  ,jpy_g26
00:54:18 159  ,jpy_g27
00:54:18 160  ,jpy_g28
00:54:18 161  ,jpy_g29
00:54:18 162  ,jpy_g30
00:54:18 163  ,jpy_g31
00:54:18 164  ,jpy_g32
00:54:18 165  ,jpy_g33
00:54:18 166  ,jpy_g34
00:54:18 167  ,jpy_g35
00:54:18 168  ,jpy_g36
00:54:18 169  ,jpy_g37
00:54:18 170  ,jpy_g38
00:54:18 171  ,jpy_g39
00:54:18 172  ,jpy_g40
00:54:18 173  ,jpy_g41
00:54:18 174  ,cad_g00
00:54:18 175  ,cad_g01
00:54:18 176  ,cad_g02
00:54:18 177  ,cad_g03
00:54:18 178  ,cad_g04
00:54:18 179  ,cad_g05
00:54:18 180  ,cad_g06
00:54:18 181  ,cad_g07
00:54:18 182  ,cad_g08
00:54:18 183  ,cad_g09
00:54:18 184  ,cad_g10
00:54:18 185  ,cad_g11
00:54:18 186  ,cad_g12
00:54:18 187  ,cad_g13
00:54:18 188  ,cad_g14
00:54:18 189  ,cad_g15
00:54:18 190  ,cad_g16
00:54:18 191  ,cad_g17
00:54:18 192  ,cad_g18
00:54:18 193  ,cad_g19
00:54:18 194  ,cad_g20
00:54:18 195  ,cad_g21
00:54:18 196  ,cad_g22
00:54:18 197  ,cad_g23
00:54:18 198  ,cad_g24
00:54:18 199  ,cad_g25
00:54:18 200  ,cad_g26
00:54:18 201  ,cad_g27
00:54:18 202  ,cad_g28
00:54:18 203  ,cad_g29
00:54:18 204  ,cad_g30
00:54:18 205  ,cad_g31
00:54:18 206  ,cad_g32
00:54:18 207  ,cad_g33
00:54:18 208  ,cad_g34
00:54:18 209  ,cad_g35
00:54:18 210  ,cad_g36
00:54:18 211  ,cad_g37
00:54:18 212  ,cad_g38
00:54:18 213  ,cad_g39
00:54:18 214  ,cad_g40
00:54:18 215  ,cad_g41
00:54:18 216  ,chf_g00
00:54:18 217  ,chf_g01
00:54:18 218  ,chf_g02
00:54:18 219  ,chf_g03
00:54:18 220  ,chf_g04
00:54:18 221  ,chf_g05
00:54:18 222  ,chf_g06
00:54:18 223  ,chf_g07
00:54:18 224  ,chf_g08
00:54:18 225  ,chf_g09
00:54:18 226  ,chf_g10
00:54:18 227  ,chf_g11
00:54:18 228  ,chf_g12
00:54:18 229  ,chf_g13
00:54:18 230  ,chf_g14
00:54:18 231  ,chf_g15
00:54:18 232  ,chf_g16
00:54:18 233  ,chf_g17
00:54:18 234  ,chf_g18
00:54:18 235  ,chf_g19
00:54:18 236  ,chf_g20
00:54:18 237  ,chf_g21
00:54:18 238  ,chf_g22
00:54:18 239  ,chf_g23
00:54:18 240  ,chf_g24
00:54:18 241  ,chf_g25
00:54:18 242  ,chf_g26
00:54:18 243  ,chf_g27
00:54:18 244  ,chf_g28
00:54:18 245  ,chf_g29
00:54:18 246  ,chf_g30
00:54:18 247  ,chf_g31
00:54:18 248  ,chf_g32
00:54:18 249  ,chf_g33
00:54:18 250  ,chf_g34
00:54:18 251  ,chf_g35
00:54:18 252  ,chf_g36
00:54:18 253  ,chf_g37
00:54:18 254  ,chf_g38
00:54:18 255  ,chf_g39
00:54:18 256  ,chf_g40
00:54:18 257  ,chf_g41
00:54:18 258  FROM aud_ms6 m
00:54:18 259  WHERE m.ydate = '&1'||' '||'&2'
00:54:18 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'00:35:00'

View created.

Elapsed: 00:00:00.14
00:54:18 SQL> 
00:54:18 SQL> -- rpt
00:54:18 SQL> -- We should see just 1 row:
00:54:18 SQL> 
00:54:18 SQL> SELECT COUNT(prdate) FROM sme
00:54:18   2  
00:54:18 SQL> -- Build the model:
00:54:18 SQL> CREATE OR REPLACE VIEW bme AS
00:54:18   2  SELECT
00:54:18   3  'aud'||m.ydate prdate
00:54:18   4  ,gatt
00:54:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
00:54:18   6  ,eur_g00
00:54:18   7  ,eur_g01
00:54:18   8  ,eur_g02
00:54:18   9  ,eur_g03
00:54:18  10  ,eur_g04
00:54:18  11  ,eur_g05
00:54:18  12  ,eur_g06
00:54:18  13  ,eur_g07
00:54:18  14  ,eur_g08
00:54:18  15  ,eur_g09
00:54:18  16  ,eur_g10
00:54:18  17  ,eur_g11
00:54:18  18  ,eur_g12
00:54:18  19  ,eur_g13
00:54:18  20  ,eur_g14
00:54:18  21  ,eur_g15
00:54:18  22  ,eur_g16
00:54:18  23  ,eur_g17
00:54:18  24  ,eur_g18
00:54:18  25  ,eur_g19
00:54:18  26  ,eur_g20
00:54:18  27  ,eur_g21
00:54:18  28  ,eur_g22
00:54:18  29  ,eur_g23
00:54:18  30  ,eur_g24
00:54:18  31  ,eur_g25
00:54:18  32  ,eur_g26
00:54:18  33  ,eur_g27
00:54:18  34  ,eur_g28
00:54:18  35  ,eur_g29
00:54:18  36  ,eur_g30
00:54:18  37  ,eur_g31
00:54:18  38  ,eur_g32
00:54:18  39  ,eur_g33
00:54:18  40  ,eur_g34
00:54:18  41  ,eur_g35
00:54:18  42  ,eur_g36
00:54:18  43  ,eur_g37
00:54:18  44  ,eur_g38
00:54:18  45  ,eur_g39
00:54:18  46  ,eur_g40
00:54:18  47  ,eur_g41
00:54:18  48  ,aud_g00
00:54:18  49  ,aud_g01
00:54:18  50  ,aud_g02
00:54:18  51  ,aud_g03
00:54:18  52  ,aud_g04
00:54:18  53  ,aud_g05
00:54:18  54  ,aud_g06
00:54:18  55  ,aud_g07
00:54:18  56  ,aud_g08
00:54:18  57  ,aud_g09
00:54:18  58  ,aud_g10
00:54:18  59  ,aud_g11
00:54:18  60  ,aud_g12
00:54:18  61  ,aud_g13
00:54:18  62  ,aud_g14
00:54:18  63  ,aud_g15
00:54:18  64  ,aud_g16
00:54:18  65  ,aud_g17
00:54:18  66  ,aud_g18
00:54:18  67  ,aud_g19
00:54:18  68  ,aud_g20
00:54:18  69  ,aud_g21
00:54:18  70  ,aud_g22
00:54:18  71  ,aud_g23
00:54:18  72  ,aud_g24
00:54:18  73  ,aud_g25
00:54:18  74  ,aud_g26
00:54:18  75  ,aud_g27
00:54:18  76  ,aud_g28
00:54:18  77  ,aud_g29
00:54:18  78  ,aud_g30
00:54:18  79  ,aud_g31
00:54:18  80  ,aud_g32
00:54:18  81  ,aud_g33
00:54:18  82  ,aud_g34
00:54:18  83  ,aud_g35
00:54:18  84  ,aud_g36
00:54:18  85  ,aud_g37
00:54:18  86  ,aud_g38
00:54:18  87  ,aud_g39
00:54:18  88  ,aud_g40
00:54:18  89  ,aud_g41
00:54:18  90  ,gbp_g00
00:54:18  91  ,gbp_g01
00:54:18  92  ,gbp_g02
00:54:18  93  ,gbp_g03
00:54:18  94  ,gbp_g04
00:54:18  95  ,gbp_g05
00:54:18  96  ,gbp_g06
00:54:18  97  ,gbp_g07
00:54:18  98  ,gbp_g08
00:54:18  99  ,gbp_g09
00:54:18 100  ,gbp_g10
00:54:18 101  ,gbp_g11
00:54:18 102  ,gbp_g12
00:54:18 103  ,gbp_g13
00:54:18 104  ,gbp_g14
00:54:18 105  ,gbp_g15
00:54:18 106  ,gbp_g16
00:54:18 107  ,gbp_g17
00:54:18 108  ,gbp_g18
00:54:18 109  ,gbp_g19
00:54:18 110  ,gbp_g20
00:54:18 111  ,gbp_g21
00:54:18 112  ,gbp_g22
00:54:18 113  ,gbp_g23
00:54:18 114  ,gbp_g24
00:54:18 115  ,gbp_g25
00:54:18 116  ,gbp_g26
00:54:18 117  ,gbp_g27
00:54:18 118  ,gbp_g28
00:54:18 119  ,gbp_g29
00:54:18 120  ,gbp_g30
00:54:18 121  ,gbp_g31
00:54:18 122  ,gbp_g32
00:54:18 123  ,gbp_g33
00:54:18 124  ,gbp_g34
00:54:18 125  ,gbp_g35
00:54:18 126  ,gbp_g36
00:54:18 127  ,gbp_g37
00:54:18 128  ,gbp_g38
00:54:18 129  ,gbp_g39
00:54:18 130  ,gbp_g40
00:54:18 131  ,gbp_g41
00:54:18 132  ,jpy_g00
00:54:18 133  ,jpy_g01
00:54:18 134  ,jpy_g02
00:54:18 135  ,jpy_g03
00:54:18 136  ,jpy_g04
00:54:18 137  ,jpy_g05
00:54:18 138  ,jpy_g06
00:54:18 139  ,jpy_g07
00:54:18 140  ,jpy_g08
00:54:18 141  ,jpy_g09
00:54:18 142  ,jpy_g10
00:54:18 143  ,jpy_g11
00:54:18 144  ,jpy_g12
00:54:18 145  ,jpy_g13
00:54:18 146  ,jpy_g14
00:54:18 147  ,jpy_g15
00:54:18 148  ,jpy_g16
00:54:18 149  ,jpy_g17
00:54:18 150  ,jpy_g18
00:54:18 151  ,jpy_g19
00:54:18 152  ,jpy_g20
00:54:18 153  ,jpy_g21
00:54:18 154  ,jpy_g22
00:54:18 155  ,jpy_g23
00:54:18 156  ,jpy_g24
00:54:18 157  ,jpy_g25
00:54:18 158  ,jpy_g26
00:54:18 159  ,jpy_g27
00:54:18 160  ,jpy_g28
00:54:18 161  ,jpy_g29
00:54:18 162  ,jpy_g30
00:54:18 163  ,jpy_g31
00:54:18 164  ,jpy_g32
00:54:18 165  ,jpy_g33
00:54:18 166  ,jpy_g34
00:54:18 167  ,jpy_g35
00:54:18 168  ,jpy_g36
00:54:18 169  ,jpy_g37
00:54:18 170  ,jpy_g38
00:54:18 171  ,jpy_g39
00:54:18 172  ,jpy_g40
00:54:18 173  ,jpy_g41
00:54:18 174  ,cad_g00
00:54:18 175  ,cad_g01
00:54:18 176  ,cad_g02
00:54:18 177  ,cad_g03
00:54:18 178  ,cad_g04
00:54:18 179  ,cad_g05
00:54:18 180  ,cad_g06
00:54:18 181  ,cad_g07
00:54:18 182  ,cad_g08
00:54:18 183  ,cad_g09
00:54:18 184  ,cad_g10
00:54:18 185  ,cad_g11
00:54:18 186  ,cad_g12
00:54:18 187  ,cad_g13
00:54:18 188  ,cad_g14
00:54:18 189  ,cad_g15
00:54:18 190  ,cad_g16
00:54:18 191  ,cad_g17
00:54:18 192  ,cad_g18
00:54:18 193  ,cad_g19
00:54:18 194  ,cad_g20
00:54:18 195  ,cad_g21
00:54:18 196  ,cad_g22
00:54:18 197  ,cad_g23
00:54:18 198  ,cad_g24
00:54:18 199  ,cad_g25
00:54:18 200  ,cad_g26
00:54:18 201  ,cad_g27
00:54:18 202  ,cad_g28
00:54:18 203  ,cad_g29
00:54:18 204  ,cad_g30
00:54:18 205  ,cad_g31
00:54:18 206  ,cad_g32
00:54:18 207  ,cad_g33
00:54:18 208  ,cad_g34
00:54:18 209  ,cad_g35
00:54:18 210  ,cad_g36
00:54:18 211  ,cad_g37
00:54:18 212  ,cad_g38
00:54:18 213  ,cad_g39
00:54:18 214  ,cad_g40
00:54:18 215  ,cad_g41
00:54:18 216  ,chf_g00
00:54:18 217  ,chf_g01
00:54:18 218  ,chf_g02
00:54:18 219  ,chf_g03
00:54:18 220  ,chf_g04
00:54:18 221  ,chf_g05
00:54:18 222  ,chf_g06
00:54:18 223  ,chf_g07
00:54:18 224  ,chf_g08
00:54:18 225  ,chf_g09
00:54:18 226  ,chf_g10
00:54:18 227  ,chf_g11
00:54:18 228  ,chf_g12
00:54:18 229  ,chf_g13
00:54:18 230  ,chf_g14
00:54:18 231  ,chf_g15
00:54:18 232  ,chf_g16
00:54:18 233  ,chf_g17
00:54:18 234  ,chf_g18
00:54:18 235  ,chf_g19
00:54:18 236  ,chf_g20
00:54:18 237  ,chf_g21
00:54:18 238  ,chf_g22
00:54:18 239  ,chf_g23
00:54:18 240  ,chf_g24
00:54:18 241  ,chf_g25
00:54:18 242  ,chf_g26
00:54:18 243  ,chf_g27
00:54:18 244  ,chf_g28
00:54:18 245  ,chf_g29
00:54:18 246  ,chf_g30
00:54:18 247  ,chf_g31
00:54:18 248  ,chf_g32
00:54:18 249  ,chf_g33
00:54:18 250  ,chf_g34
00:54:18 251  ,chf_g35
00:54:18 252  ,chf_g36
00:54:18 253  ,chf_g37
00:54:18 254  ,chf_g38
00:54:18 255  ,chf_g39
00:54:18 256  ,chf_g40
00:54:18 257  ,chf_g41
00:54:18 258  FROM aud_ms6 m
00:54:18 259  WHERE gatt IN('nup','up')
00:54:18 260  AND 1+m.ydate < '&1'||' '||'&2'
00:54:18 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'00:35:00'

View created.

Elapsed: 00:00:00.20
00:54:19 SQL> 
00:54:19 SQL> -- rpt
00:54:19 SQL> 
00:54:19 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
00:54:19   2  
00:54:19 SQL> SELECT MAX(prdate) FROM bme
00:54:19   2  
00:54:19 SQL> -- Now build model from bme and score sme
00:54:19 SQL> @score1.sql
00:54:19 SQL> -- score1.sql
00:54:19 SQL> 
00:54:19 SQL> -- Does the 1st SVM score
00:54:19 SQL> 
00:54:19 SQL> -- Fill up svmc_apply_prep
00:54:19 SQL> @score.sql
00:54:19 SQL> --
00:54:19 SQL> -- score.sql
00:54:19 SQL> --
00:54:19 SQL> 
00:54:19 SQL> -- usage: score.sql
00:54:19 SQL> 
00:54:19 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
00:54:19 SQL> 
00:54:19 SQL> DEFINE target	= 'gatt'
00:54:19 SQL> DEFINE model_name = 'forex14'
00:54:19 SQL> DEFINE bldtable	= 'bme'
00:54:19 SQL> DEFINE scoretable = 'sme'
00:54:19 SQL> DEFINE case_id	= 'prdate'
00:54:19 SQL> 
00:54:19 SQL> -- Define a variable to help me exclude some columns from some data mining calls
00:54:19 SQL> DEFINE exclude1 = "'&target','&case_id'"
00:54:19 SQL> 
00:54:19 SQL> -- Builds an SVM model using pl/sql.
00:54:19 SQL> 
00:54:19 SQL> -----------------------------------------------------------------------
00:54:19 SQL> --			    BUILD THE MODEL
00:54:19 SQL> -----------------------------------------------------------------------
00:54:19 SQL> 
00:54:19 SQL> -- Cleanup old build data preparation objects for repeat runs
00:54:19 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
00:54:19 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
00:54:19 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
00:54:19 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
00:54:19 SQL> 
00:54:19 SQL> 
00:54:19 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
00:54:19 SQL> --
00:54:19 SQL> -- DROP	TABLE svmc_settings ;
00:54:19 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
00:54:19 SQL> -- DELETE svmc_settings;
00:54:19 SQL> 
00:54:19 SQL> -- The default classification algorithm is Naive Bayes. So override
00:54:19 SQL> -- this choice to SVM using a settings table.
00:54:19 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
00:54:19 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
00:54:19 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
00:54:19 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
00:54:19 SQL> -- models.
00:54:19 SQL> --
00:54:19 SQL> 
00:54:19 SQL> -- Do this once and then comment it out.
00:54:19 SQL> -- That makes script go faster.
00:54:19 SQL> -- BEGIN
00:54:19 SQL> -- -- Populate settings table
00:54:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
00:54:19 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
00:54:19 SQL> --
00:54:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
00:54:19 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
00:54:19 SQL> --
00:54:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
00:54:19 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
00:54:19 SQL> --   COMMIT;
00:54:19 SQL> -- END;
00:54:19 SQL> -- /
00:54:19 SQL> 
00:54:19 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
00:54:19 SQL> 
00:54:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
00:54:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:54:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
00:54:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
00:54:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:54:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
00:54:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
00:54:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:54:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
00:54:19 SQL> 
00:54:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
00:54:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:54:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
00:54:19 SQL> 
00:54:19 SQL> --------------------------------
00:54:19 SQL> -- PREPARE BUILD (TRAINING) DATA
00:54:19 SQL> --
00:54:19 SQL> 
00:54:19 SQL> -- 1. Missing Value treatment for all Predictors and
00:54:19 SQL> -- 2. Outlier Treatment and
00:54:19 SQL> -- 3. Normalization are performed below.
00:54:19 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
00:54:19 SQL> --    normalized here.
00:54:19 SQL> 
00:54:19 SQL> BEGIN
00:54:19   2  	-- Perform missing value treatment for all predictors
00:54:19   3  	-- create miss tables
00:54:19   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
00:54:19   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
00:54:19   6  
00:54:19   7  	-- populate miss tables
00:54:19   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
00:54:19   9  	  miss_table_name => 'svmc_miss_num',
00:54:19  10  	  data_table_name => '&bldtable',
00:54:19  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
00:54:19  12  
00:54:19  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
00:54:19  14  	  miss_table_name => 'svmc_miss_cat',
00:54:19  15  	  data_table_name => '&bldtable',
00:54:19  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
00:54:19  17  
00:54:19  18  	-- xform input data to replace missing values
00:54:19  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
00:54:19  20  	  miss_table_name => 'svmc_miss_num',
00:54:19  21  	  data_table_name => '&bldtable',
00:54:19  22  	  xform_view_name => 'xformed_build_miss_num');
00:54:19  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
00:54:19  24  	  miss_table_name => 'svmc_miss_cat',
00:54:19  25  	  data_table_name => '&bldtable',
00:54:19  26  	  xform_view_name => 'xformed_build_miss_cat');
00:54:19  27  
00:54:19  28  	-- Perform outlier treatment.
00:54:19  29  	-- create clip table
00:54:19  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
00:54:19  31  
00:54:19  32  	-- populate clip table
00:54:19  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
00:54:19  34  	  clip_table_name => 'svmc_clip',
00:54:19  35  	  data_table_name => '&bldtable',
00:54:19  36  	  tail_frac	  => 0.025,
00:54:19  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
00:54:19  38  
00:54:19  39  	-- xform input data to winsorized data
00:54:19  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
00:54:19  41  	  clip_table_name => 'svmc_clip',
00:54:19  42  	  data_table_name => '&bldtable',
00:54:19  43  	  xform_view_name => 'svmc_winsor');
00:54:19  44  
00:54:19  45  	-- create normalization table
00:54:19  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
00:54:19  47  
00:54:19  48  	-- populate normalization table based on winsorized data
00:54:19  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
00:54:19  50  	  norm_table_name => 'svmc_norm',
00:54:19  51  	  data_table_name => 'svmc_winsor',
00:54:19  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
00:54:19  53  
00:54:19  54  	-- normalize the original data
00:54:19  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
00:54:19  56  	  norm_table_name => 'svmc_norm',
00:54:19  57  	  data_table_name => '&bldtable',
00:54:19  58  	  xform_view_name => 'svmc_build_prep');
00:54:19  59  END;
00:54:19  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.16
00:54:37 SQL> 
00:54:37 SQL> ---------------------
00:54:37 SQL> -- CREATE A NEW MODEL
00:54:37 SQL> --
00:54:37 SQL> -- Cleanup old model with the same name for repeat runs
00:54:37 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
00:54:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:54:37   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.15
00:54:38 SQL> 
00:54:38 SQL> -- Build a new SVM Model
00:54:38 SQL> BEGIN
00:54:38   2  	DBMS_DATA_MINING.CREATE_MODEL(
00:54:38   3  	  model_name	      => '&model_name',
00:54:38   4  	  mining_function     => dbms_data_mining.classification,
00:54:38   5  	  data_table_name     => 'svmc_build_prep',
00:54:38   6  	  case_id_column_name => '&case_id',
00:54:38   7  	  target_column_name  => '&target',
00:54:38   8  	  settings_table_name => 'svmc_settings');
00:54:38   9  END;
00:54:38  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.03
00:55:06 SQL> 
00:55:06 SQL> -----------------------------------------------------------------------
00:55:06 SQL> --			       APPLY/score THE MODEL
00:55:06 SQL> -----------------------------------------------------------------------
00:55:06 SQL> 
00:55:06 SQL> -- Cleanup old scoring data preparation objects for repeat runs
00:55:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
00:55:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:55:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
00:55:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
00:55:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:55:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
00:55:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
00:55:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:55:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
00:55:06 SQL> -----------------------
00:55:06 SQL> -- PREPARE SCORING DATA
00:55:06 SQL> --
00:55:06 SQL> -- If the data for model creation has been prepared, then the data
00:55:06 SQL> -- to be scored using the model must be prepared in the same manner
00:55:06 SQL> -- in order to obtain meaningful results.
00:55:06 SQL> --
00:55:06 SQL> -- 1. Missing Value treatment for all Predictors and
00:55:06 SQL> -- 2. Normalization
00:55:06 SQL> -- No outlier treatment will be performed during test and apply. The
00:55:06 SQL> -- normalization step is sufficient, since the normalization parameters
00:55:06 SQL> -- already capture the effects of outlier treatment done with build data.
00:55:06 SQL> --
00:55:06 SQL> BEGIN
00:55:06   2  	-- Xform Test data to replace missing values
00:55:06   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
00:55:06   4  	  miss_table_name => 'svmc_miss_num',
00:55:06   5  	  data_table_name => '&scoretable',
00:55:06   6  	  xform_view_name => 'xformed_apply_miss_num');
00:55:06   7  
00:55:06   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
00:55:06   9  	  miss_table_name => 'svmc_miss_cat',
00:55:06  10  	  data_table_name => '&scoretable',
00:55:06  11  	  xform_view_name => 'xformed_apply_miss_cat');
00:55:06  12  
00:55:06  13  	-- Normalize the data to be scored
00:55:06  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
00:55:06  15  	  norm_table_name => 'svmc_norm',
00:55:06  16  	  data_table_name => '&scoretable',
00:55:06  17  	  xform_view_name => 'svmc_apply_prep');
00:55:06  18  END;
00:55:06  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
00:55:08 SQL> 
00:55:08 SQL> -- Use same model_name used in score.sql
00:55:08 SQL> DEFINE model_name = 'forex14'
00:55:08 SQL> 
00:55:08 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
00:55:08 SQL> 
00:55:08 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
00:55:08 SQL> 
00:55:08 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
00:55:08   2  SELECT
00:55:08   3  prdate
00:55:08   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
00:55:08   5  ,sysdate
00:55:08   6  ,SUBSTR(prdate,1,3)pair
00:55:08   7  ,SUBSTR(prdate,4,19)ydate
00:55:08   8  FROM svmc_apply_prep
00:55:08   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
00:55:08 SQL> @aud_score1day.sql  2011-01-03 00:40:00
00:55:08 SQL> --
00:55:08 SQL> -- aud_score1day.sql
00:55:08 SQL> --
00:55:08 SQL> 
00:55:08 SQL> CREATE OR REPLACE VIEW sme AS
00:55:08   2  SELECT
00:55:08   3  'aud'||m.ydate prdate
00:55:08   4  ,NULL gatt
00:55:08   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
00:55:08   6  ,eur_g00
00:55:08   7  ,eur_g01
00:55:08   8  ,eur_g02
00:55:08   9  ,eur_g03
00:55:08  10  ,eur_g04
00:55:08  11  ,eur_g05
00:55:08  12  ,eur_g06
00:55:08  13  ,eur_g07
00:55:08  14  ,eur_g08
00:55:08  15  ,eur_g09
00:55:08  16  ,eur_g10
00:55:08  17  ,eur_g11
00:55:08  18  ,eur_g12
00:55:08  19  ,eur_g13
00:55:08  20  ,eur_g14
00:55:08  21  ,eur_g15
00:55:08  22  ,eur_g16
00:55:08  23  ,eur_g17
00:55:08  24  ,eur_g18
00:55:08  25  ,eur_g19
00:55:08  26  ,eur_g20
00:55:08  27  ,eur_g21
00:55:08  28  ,eur_g22
00:55:08  29  ,eur_g23
00:55:08  30  ,eur_g24
00:55:08  31  ,eur_g25
00:55:08  32  ,eur_g26
00:55:08  33  ,eur_g27
00:55:08  34  ,eur_g28
00:55:08  35  ,eur_g29
00:55:08  36  ,eur_g30
00:55:08  37  ,eur_g31
00:55:08  38  ,eur_g32
00:55:08  39  ,eur_g33
00:55:08  40  ,eur_g34
00:55:08  41  ,eur_g35
00:55:08  42  ,eur_g36
00:55:08  43  ,eur_g37
00:55:08  44  ,eur_g38
00:55:08  45  ,eur_g39
00:55:08  46  ,eur_g40
00:55:08  47  ,eur_g41
00:55:08  48  ,aud_g00
00:55:08  49  ,aud_g01
00:55:08  50  ,aud_g02
00:55:08  51  ,aud_g03
00:55:08  52  ,aud_g04
00:55:08  53  ,aud_g05
00:55:08  54  ,aud_g06
00:55:08  55  ,aud_g07
00:55:08  56  ,aud_g08
00:55:08  57  ,aud_g09
00:55:08  58  ,aud_g10
00:55:08  59  ,aud_g11
00:55:08  60  ,aud_g12
00:55:08  61  ,aud_g13
00:55:08  62  ,aud_g14
00:55:08  63  ,aud_g15
00:55:08  64  ,aud_g16
00:55:08  65  ,aud_g17
00:55:08  66  ,aud_g18
00:55:08  67  ,aud_g19
00:55:08  68  ,aud_g20
00:55:08  69  ,aud_g21
00:55:08  70  ,aud_g22
00:55:08  71  ,aud_g23
00:55:08  72  ,aud_g24
00:55:08  73  ,aud_g25
00:55:08  74  ,aud_g26
00:55:08  75  ,aud_g27
00:55:08  76  ,aud_g28
00:55:08  77  ,aud_g29
00:55:08  78  ,aud_g30
00:55:08  79  ,aud_g31
00:55:08  80  ,aud_g32
00:55:08  81  ,aud_g33
00:55:08  82  ,aud_g34
00:55:08  83  ,aud_g35
00:55:08  84  ,aud_g36
00:55:08  85  ,aud_g37
00:55:08  86  ,aud_g38
00:55:08  87  ,aud_g39
00:55:08  88  ,aud_g40
00:55:08  89  ,aud_g41
00:55:08  90  ,gbp_g00
00:55:08  91  ,gbp_g01
00:55:08  92  ,gbp_g02
00:55:08  93  ,gbp_g03
00:55:08  94  ,gbp_g04
00:55:08  95  ,gbp_g05
00:55:08  96  ,gbp_g06
00:55:08  97  ,gbp_g07
00:55:08  98  ,gbp_g08
00:55:08  99  ,gbp_g09
00:55:08 100  ,gbp_g10
00:55:08 101  ,gbp_g11
00:55:08 102  ,gbp_g12
00:55:08 103  ,gbp_g13
00:55:08 104  ,gbp_g14
00:55:08 105  ,gbp_g15
00:55:08 106  ,gbp_g16
00:55:08 107  ,gbp_g17
00:55:08 108  ,gbp_g18
00:55:08 109  ,gbp_g19
00:55:08 110  ,gbp_g20
00:55:08 111  ,gbp_g21
00:55:08 112  ,gbp_g22
00:55:08 113  ,gbp_g23
00:55:08 114  ,gbp_g24
00:55:08 115  ,gbp_g25
00:55:08 116  ,gbp_g26
00:55:08 117  ,gbp_g27
00:55:08 118  ,gbp_g28
00:55:08 119  ,gbp_g29
00:55:08 120  ,gbp_g30
00:55:08 121  ,gbp_g31
00:55:08 122  ,gbp_g32
00:55:08 123  ,gbp_g33
00:55:08 124  ,gbp_g34
00:55:08 125  ,gbp_g35
00:55:08 126  ,gbp_g36
00:55:08 127  ,gbp_g37
00:55:08 128  ,gbp_g38
00:55:08 129  ,gbp_g39
00:55:08 130  ,gbp_g40
00:55:08 131  ,gbp_g41
00:55:08 132  ,jpy_g00
00:55:08 133  ,jpy_g01
00:55:08 134  ,jpy_g02
00:55:08 135  ,jpy_g03
00:55:08 136  ,jpy_g04
00:55:08 137  ,jpy_g05
00:55:08 138  ,jpy_g06
00:55:08 139  ,jpy_g07
00:55:08 140  ,jpy_g08
00:55:08 141  ,jpy_g09
00:55:08 142  ,jpy_g10
00:55:08 143  ,jpy_g11
00:55:08 144  ,jpy_g12
00:55:08 145  ,jpy_g13
00:55:08 146  ,jpy_g14
00:55:08 147  ,jpy_g15
00:55:08 148  ,jpy_g16
00:55:08 149  ,jpy_g17
00:55:08 150  ,jpy_g18
00:55:08 151  ,jpy_g19
00:55:08 152  ,jpy_g20
00:55:08 153  ,jpy_g21
00:55:08 154  ,jpy_g22
00:55:08 155  ,jpy_g23
00:55:08 156  ,jpy_g24
00:55:08 157  ,jpy_g25
00:55:08 158  ,jpy_g26
00:55:08 159  ,jpy_g27
00:55:08 160  ,jpy_g28
00:55:08 161  ,jpy_g29
00:55:08 162  ,jpy_g30
00:55:08 163  ,jpy_g31
00:55:08 164  ,jpy_g32
00:55:08 165  ,jpy_g33
00:55:08 166  ,jpy_g34
00:55:08 167  ,jpy_g35
00:55:08 168  ,jpy_g36
00:55:08 169  ,jpy_g37
00:55:08 170  ,jpy_g38
00:55:08 171  ,jpy_g39
00:55:08 172  ,jpy_g40
00:55:08 173  ,jpy_g41
00:55:08 174  ,cad_g00
00:55:08 175  ,cad_g01
00:55:08 176  ,cad_g02
00:55:08 177  ,cad_g03
00:55:08 178  ,cad_g04
00:55:08 179  ,cad_g05
00:55:08 180  ,cad_g06
00:55:08 181  ,cad_g07
00:55:08 182  ,cad_g08
00:55:08 183  ,cad_g09
00:55:08 184  ,cad_g10
00:55:08 185  ,cad_g11
00:55:08 186  ,cad_g12
00:55:08 187  ,cad_g13
00:55:08 188  ,cad_g14
00:55:08 189  ,cad_g15
00:55:08 190  ,cad_g16
00:55:08 191  ,cad_g17
00:55:08 192  ,cad_g18
00:55:08 193  ,cad_g19
00:55:08 194  ,cad_g20
00:55:08 195  ,cad_g21
00:55:08 196  ,cad_g22
00:55:08 197  ,cad_g23
00:55:08 198  ,cad_g24
00:55:08 199  ,cad_g25
00:55:08 200  ,cad_g26
00:55:08 201  ,cad_g27
00:55:08 202  ,cad_g28
00:55:08 203  ,cad_g29
00:55:08 204  ,cad_g30
00:55:08 205  ,cad_g31
00:55:08 206  ,cad_g32
00:55:08 207  ,cad_g33
00:55:08 208  ,cad_g34
00:55:08 209  ,cad_g35
00:55:08 210  ,cad_g36
00:55:08 211  ,cad_g37
00:55:08 212  ,cad_g38
00:55:08 213  ,cad_g39
00:55:08 214  ,cad_g40
00:55:08 215  ,cad_g41
00:55:08 216  ,chf_g00
00:55:08 217  ,chf_g01
00:55:08 218  ,chf_g02
00:55:08 219  ,chf_g03
00:55:08 220  ,chf_g04
00:55:08 221  ,chf_g05
00:55:08 222  ,chf_g06
00:55:08 223  ,chf_g07
00:55:08 224  ,chf_g08
00:55:08 225  ,chf_g09
00:55:08 226  ,chf_g10
00:55:08 227  ,chf_g11
00:55:08 228  ,chf_g12
00:55:08 229  ,chf_g13
00:55:08 230  ,chf_g14
00:55:08 231  ,chf_g15
00:55:08 232  ,chf_g16
00:55:08 233  ,chf_g17
00:55:08 234  ,chf_g18
00:55:08 235  ,chf_g19
00:55:08 236  ,chf_g20
00:55:08 237  ,chf_g21
00:55:08 238  ,chf_g22
00:55:08 239  ,chf_g23
00:55:08 240  ,chf_g24
00:55:08 241  ,chf_g25
00:55:08 242  ,chf_g26
00:55:08 243  ,chf_g27
00:55:08 244  ,chf_g28
00:55:08 245  ,chf_g29
00:55:08 246  ,chf_g30
00:55:08 247  ,chf_g31
00:55:08 248  ,chf_g32
00:55:08 249  ,chf_g33
00:55:08 250  ,chf_g34
00:55:08 251  ,chf_g35
00:55:08 252  ,chf_g36
00:55:08 253  ,chf_g37
00:55:08 254  ,chf_g38
00:55:08 255  ,chf_g39
00:55:08 256  ,chf_g40
00:55:08 257  ,chf_g41
00:55:08 258  FROM aud_ms6 m
00:55:08 259  WHERE m.ydate = '&1'||' '||'&2'
00:55:08 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'00:40:00'

View created.

Elapsed: 00:00:00.11
00:55:08 SQL> 
00:55:08 SQL> -- rpt
00:55:08 SQL> -- We should see just 1 row:
00:55:08 SQL> 
00:55:08 SQL> SELECT COUNT(prdate) FROM sme
00:55:08   2  
00:55:08 SQL> -- Build the model:
00:55:08 SQL> CREATE OR REPLACE VIEW bme AS
00:55:08   2  SELECT
00:55:08   3  'aud'||m.ydate prdate
00:55:08   4  ,gatt
00:55:08   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
00:55:08   6  ,eur_g00
00:55:08   7  ,eur_g01
00:55:08   8  ,eur_g02
00:55:08   9  ,eur_g03
00:55:08  10  ,eur_g04
00:55:08  11  ,eur_g05
00:55:08  12  ,eur_g06
00:55:08  13  ,eur_g07
00:55:08  14  ,eur_g08
00:55:08  15  ,eur_g09
00:55:08  16  ,eur_g10
00:55:08  17  ,eur_g11
00:55:08  18  ,eur_g12
00:55:08  19  ,eur_g13
00:55:08  20  ,eur_g14
00:55:08  21  ,eur_g15
00:55:08  22  ,eur_g16
00:55:08  23  ,eur_g17
00:55:08  24  ,eur_g18
00:55:08  25  ,eur_g19
00:55:08  26  ,eur_g20
00:55:08  27  ,eur_g21
00:55:08  28  ,eur_g22
00:55:08  29  ,eur_g23
00:55:08  30  ,eur_g24
00:55:08  31  ,eur_g25
00:55:08  32  ,eur_g26
00:55:08  33  ,eur_g27
00:55:08  34  ,eur_g28
00:55:08  35  ,eur_g29
00:55:08  36  ,eur_g30
00:55:08  37  ,eur_g31
00:55:08  38  ,eur_g32
00:55:08  39  ,eur_g33
00:55:08  40  ,eur_g34
00:55:08  41  ,eur_g35
00:55:08  42  ,eur_g36
00:55:08  43  ,eur_g37
00:55:08  44  ,eur_g38
00:55:08  45  ,eur_g39
00:55:08  46  ,eur_g40
00:55:08  47  ,eur_g41
00:55:08  48  ,aud_g00
00:55:08  49  ,aud_g01
00:55:08  50  ,aud_g02
00:55:08  51  ,aud_g03
00:55:08  52  ,aud_g04
00:55:08  53  ,aud_g05
00:55:08  54  ,aud_g06
00:55:08  55  ,aud_g07
00:55:08  56  ,aud_g08
00:55:08  57  ,aud_g09
00:55:08  58  ,aud_g10
00:55:08  59  ,aud_g11
00:55:08  60  ,aud_g12
00:55:08  61  ,aud_g13
00:55:08  62  ,aud_g14
00:55:08  63  ,aud_g15
00:55:08  64  ,aud_g16
00:55:08  65  ,aud_g17
00:55:08  66  ,aud_g18
00:55:08  67  ,aud_g19
00:55:08  68  ,aud_g20
00:55:08  69  ,aud_g21
00:55:08  70  ,aud_g22
00:55:08  71  ,aud_g23
00:55:08  72  ,aud_g24
00:55:08  73  ,aud_g25
00:55:08  74  ,aud_g26
00:55:08  75  ,aud_g27
00:55:08  76  ,aud_g28
00:55:08  77  ,aud_g29
00:55:08  78  ,aud_g30
00:55:08  79  ,aud_g31
00:55:08  80  ,aud_g32
00:55:08  81  ,aud_g33
00:55:08  82  ,aud_g34
00:55:08  83  ,aud_g35
00:55:08  84  ,aud_g36
00:55:08  85  ,aud_g37
00:55:08  86  ,aud_g38
00:55:08  87  ,aud_g39
00:55:08  88  ,aud_g40
00:55:08  89  ,aud_g41
00:55:08  90  ,gbp_g00
00:55:08  91  ,gbp_g01
00:55:08  92  ,gbp_g02
00:55:08  93  ,gbp_g03
00:55:08  94  ,gbp_g04
00:55:08  95  ,gbp_g05
00:55:08  96  ,gbp_g06
00:55:08  97  ,gbp_g07
00:55:08  98  ,gbp_g08
00:55:08  99  ,gbp_g09
00:55:08 100  ,gbp_g10
00:55:08 101  ,gbp_g11
00:55:08 102  ,gbp_g12
00:55:08 103  ,gbp_g13
00:55:08 104  ,gbp_g14
00:55:08 105  ,gbp_g15
00:55:08 106  ,gbp_g16
00:55:08 107  ,gbp_g17
00:55:08 108  ,gbp_g18
00:55:08 109  ,gbp_g19
00:55:08 110  ,gbp_g20
00:55:08 111  ,gbp_g21
00:55:08 112  ,gbp_g22
00:55:08 113  ,gbp_g23
00:55:08 114  ,gbp_g24
00:55:08 115  ,gbp_g25
00:55:08 116  ,gbp_g26
00:55:08 117  ,gbp_g27
00:55:08 118  ,gbp_g28
00:55:08 119  ,gbp_g29
00:55:08 120  ,gbp_g30
00:55:08 121  ,gbp_g31
00:55:08 122  ,gbp_g32
00:55:08 123  ,gbp_g33
00:55:08 124  ,gbp_g34
00:55:08 125  ,gbp_g35
00:55:08 126  ,gbp_g36
00:55:08 127  ,gbp_g37
00:55:08 128  ,gbp_g38
00:55:08 129  ,gbp_g39
00:55:08 130  ,gbp_g40
00:55:08 131  ,gbp_g41
00:55:08 132  ,jpy_g00
00:55:08 133  ,jpy_g01
00:55:08 134  ,jpy_g02
00:55:08 135  ,jpy_g03
00:55:08 136  ,jpy_g04
00:55:08 137  ,jpy_g05
00:55:08 138  ,jpy_g06
00:55:08 139  ,jpy_g07
00:55:08 140  ,jpy_g08
00:55:08 141  ,jpy_g09
00:55:08 142  ,jpy_g10
00:55:08 143  ,jpy_g11
00:55:08 144  ,jpy_g12
00:55:08 145  ,jpy_g13
00:55:08 146  ,jpy_g14
00:55:08 147  ,jpy_g15
00:55:08 148  ,jpy_g16
00:55:08 149  ,jpy_g17
00:55:08 150  ,jpy_g18
00:55:08 151  ,jpy_g19
00:55:08 152  ,jpy_g20
00:55:08 153  ,jpy_g21
00:55:08 154  ,jpy_g22
00:55:08 155  ,jpy_g23
00:55:08 156  ,jpy_g24
00:55:08 157  ,jpy_g25
00:55:08 158  ,jpy_g26
00:55:08 159  ,jpy_g27
00:55:08 160  ,jpy_g28
00:55:08 161  ,jpy_g29
00:55:08 162  ,jpy_g30
00:55:08 163  ,jpy_g31
00:55:08 164  ,jpy_g32
00:55:08 165  ,jpy_g33
00:55:08 166  ,jpy_g34
00:55:08 167  ,jpy_g35
00:55:08 168  ,jpy_g36
00:55:08 169  ,jpy_g37
00:55:08 170  ,jpy_g38
00:55:08 171  ,jpy_g39
00:55:08 172  ,jpy_g40
00:55:08 173  ,jpy_g41
00:55:08 174  ,cad_g00
00:55:08 175  ,cad_g01
00:55:08 176  ,cad_g02
00:55:08 177  ,cad_g03
00:55:08 178  ,cad_g04
00:55:08 179  ,cad_g05
00:55:08 180  ,cad_g06
00:55:08 181  ,cad_g07
00:55:08 182  ,cad_g08
00:55:08 183  ,cad_g09
00:55:08 184  ,cad_g10
00:55:08 185  ,cad_g11
00:55:08 186  ,cad_g12
00:55:08 187  ,cad_g13
00:55:08 188  ,cad_g14
00:55:08 189  ,cad_g15
00:55:08 190  ,cad_g16
00:55:08 191  ,cad_g17
00:55:08 192  ,cad_g18
00:55:08 193  ,cad_g19
00:55:08 194  ,cad_g20
00:55:08 195  ,cad_g21
00:55:08 196  ,cad_g22
00:55:08 197  ,cad_g23
00:55:08 198  ,cad_g24
00:55:08 199  ,cad_g25
00:55:08 200  ,cad_g26
00:55:08 201  ,cad_g27
00:55:08 202  ,cad_g28
00:55:08 203  ,cad_g29
00:55:08 204  ,cad_g30
00:55:08 205  ,cad_g31
00:55:08 206  ,cad_g32
00:55:08 207  ,cad_g33
00:55:08 208  ,cad_g34
00:55:08 209  ,cad_g35
00:55:08 210  ,cad_g36
00:55:08 211  ,cad_g37
00:55:08 212  ,cad_g38
00:55:08 213  ,cad_g39
00:55:08 214  ,cad_g40
00:55:08 215  ,cad_g41
00:55:08 216  ,chf_g00
00:55:08 217  ,chf_g01
00:55:08 218  ,chf_g02
00:55:08 219  ,chf_g03
00:55:08 220  ,chf_g04
00:55:08 221  ,chf_g05
00:55:08 222  ,chf_g06
00:55:08 223  ,chf_g07
00:55:08 224  ,chf_g08
00:55:08 225  ,chf_g09
00:55:08 226  ,chf_g10
00:55:08 227  ,chf_g11
00:55:08 228  ,chf_g12
00:55:08 229  ,chf_g13
00:55:08 230  ,chf_g14
00:55:08 231  ,chf_g15
00:55:08 232  ,chf_g16
00:55:08 233  ,chf_g17
00:55:08 234  ,chf_g18
00:55:08 235  ,chf_g19
00:55:08 236  ,chf_g20
00:55:08 237  ,chf_g21
00:55:08 238  ,chf_g22
00:55:08 239  ,chf_g23
00:55:08 240  ,chf_g24
00:55:08 241  ,chf_g25
00:55:08 242  ,chf_g26
00:55:08 243  ,chf_g27
00:55:08 244  ,chf_g28
00:55:08 245  ,chf_g29
00:55:08 246  ,chf_g30
00:55:08 247  ,chf_g31
00:55:08 248  ,chf_g32
00:55:08 249  ,chf_g33
00:55:08 250  ,chf_g34
00:55:08 251  ,chf_g35
00:55:08 252  ,chf_g36
00:55:08 253  ,chf_g37
00:55:08 254  ,chf_g38
00:55:08 255  ,chf_g39
00:55:08 256  ,chf_g40
00:55:08 257  ,chf_g41
00:55:08 258  FROM aud_ms6 m
00:55:08 259  WHERE gatt IN('nup','up')
00:55:08 260  AND 1+m.ydate < '&1'||' '||'&2'
00:55:08 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'00:40:00'

View created.

Elapsed: 00:00:00.12
00:55:08 SQL> 
00:55:08 SQL> -- rpt
00:55:08 SQL> 
00:55:08 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
00:55:08   2  
00:55:08 SQL> SELECT MAX(prdate) FROM bme
00:55:08   2  
00:55:08 SQL> -- Now build model from bme and score sme
00:55:08 SQL> @score1.sql
00:55:08 SQL> -- score1.sql
00:55:08 SQL> 
00:55:08 SQL> -- Does the 1st SVM score
00:55:08 SQL> 
00:55:08 SQL> -- Fill up svmc_apply_prep
00:55:08 SQL> @score.sql
00:55:08 SQL> --
00:55:08 SQL> -- score.sql
00:55:08 SQL> --
00:55:08 SQL> 
00:55:08 SQL> -- usage: score.sql
00:55:08 SQL> 
00:55:08 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
00:55:08 SQL> 
00:55:08 SQL> DEFINE target	= 'gatt'
00:55:08 SQL> DEFINE model_name = 'forex14'
00:55:08 SQL> DEFINE bldtable	= 'bme'
00:55:08 SQL> DEFINE scoretable = 'sme'
00:55:08 SQL> DEFINE case_id	= 'prdate'
00:55:08 SQL> 
00:55:08 SQL> -- Define a variable to help me exclude some columns from some data mining calls
00:55:08 SQL> DEFINE exclude1 = "'&target','&case_id'"
00:55:08 SQL> 
00:55:08 SQL> -- Builds an SVM model using pl/sql.
00:55:08 SQL> 
00:55:08 SQL> -----------------------------------------------------------------------
00:55:08 SQL> --			    BUILD THE MODEL
00:55:08 SQL> -----------------------------------------------------------------------
00:55:08 SQL> 
00:55:08 SQL> -- Cleanup old build data preparation objects for repeat runs
00:55:08 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
00:55:08 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
00:55:08 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
00:55:08 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
00:55:08 SQL> 
00:55:08 SQL> 
00:55:08 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
00:55:08 SQL> --
00:55:08 SQL> -- DROP	TABLE svmc_settings ;
00:55:08 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
00:55:08 SQL> -- DELETE svmc_settings;
00:55:08 SQL> 
00:55:08 SQL> -- The default classification algorithm is Naive Bayes. So override
00:55:08 SQL> -- this choice to SVM using a settings table.
00:55:08 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
00:55:08 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
00:55:08 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
00:55:08 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
00:55:08 SQL> -- models.
00:55:08 SQL> --
00:55:08 SQL> 
00:55:08 SQL> -- Do this once and then comment it out.
00:55:08 SQL> -- That makes script go faster.
00:55:08 SQL> -- BEGIN
00:55:08 SQL> -- -- Populate settings table
00:55:08 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
00:55:08 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
00:55:08 SQL> --
00:55:08 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
00:55:08 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
00:55:08 SQL> --
00:55:08 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
00:55:08 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
00:55:08 SQL> --   COMMIT;
00:55:08 SQL> -- END;
00:55:08 SQL> -- /
00:55:08 SQL> 
00:55:08 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
00:55:08 SQL> 
00:55:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
00:55:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:55:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
00:55:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
00:55:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:55:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
00:55:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
00:55:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:55:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
00:55:08 SQL> 
00:55:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
00:55:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
00:55:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
00:55:08 SQL> 
00:55:08 SQL> --------------------------------
00:55:08 SQL> -- PREPARE BUILD (TRAINING) DATA
00:55:08 SQL> --
00:55:08 SQL> 
00:55:08 SQL> -- 1. Missing Value treatment for all Predictors and
00:55:08 SQL> -- 2. Outlier Treatment and
00:55:08 SQL> -- 3. Normalization are performed below.
00:55:08 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
00:55:08 SQL> --    normalized here.
00:55:08 SQL> 
00:55:08 SQL> BEGIN
00:55:08   2  	-- Perform missing value treatment for all predictors
00:55:08   3  	-- create miss tables
00:55:08   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
00:55:08   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
00:55:08   6  
00:55:08   7  	-- populate miss tables
00:55:08   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
00:55:08   9  	  miss_table_name => 'svmc_miss_num',
00:55:08  10  	  data_table_name => '&bldtable',
00:55:08  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
00:55:08  12  
00:55:08  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
00:55:08  14  	  miss_table_name => 'svmc_miss_cat',
00:55:08  15  	  data_table_name => '&bldtable',
00:55:08  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
00:55:08  17  
00:55:08  18  	-- xform input data to replace missing values
00:55:08  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
00:55:08  20  	  miss_table_name => 'svmc_miss_num',
00:55:08  21  	  data_table_name => '&bldtable',
00:55:08  22  	  xform_view_name => 'xformed_build_miss_num');
00:55:08  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
00:55:08  24  	  miss_table_name => 'svmc_miss_cat',
00:55:08  25  	  data_table_name => '&bldtable',
00:55:08  26  	  xform_view_name => 'xformed_build_miss_cat');
00:55:08  27  
00:55:08  28  	-- Perform outlier treatment.
00:55:08  29  	-- create clip table
00:55:08  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
00:55:08  31  
00:55:08  32  	-- populate clip table
00:55:08  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
00:55:08  34  	  clip_table_name => 'svmc_clip',
00:55:08  35  	  data_table_name => '&bldtable',
00:55:08  36  	  tail_frac	  => 0.025,
00:55:08  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
00:55:08  38  
00:55:08  39  	-- xform input data to winsorized data
00:55:08  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
00:55:08  41  	  clip_table_name => 'svmc_clip',
00:55:08  42  	  data_table_name => '&bldtable',
00:55:08  43  	  xform_view_name => 'svmc_winsor');
00:55:08  44  
00:55:08  45  	-- create normalization table
00:55:08  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
00:55:08  47  
00:55:08  48  	-- populate normalization table based on winsorized data
00:55:08  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
00:55:08  50  	  norm_table_name => 'svmc_norm',
00:55:08  51  	  data_table_name => 'svmc_winsor',
00:55:08  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
00:55:08  53  
00:55:08  54  	-- normalize the original data
00:55:08  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
00:55:08  56  	  norm_table_name => 'svmc_norm',
00:55:08  57  	  data_table_name => '&bldtable',
00:55:08  58  	  xform_view_name => 'svmc_build_prep');
00:55:08  59  END;
00:55:08  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',
