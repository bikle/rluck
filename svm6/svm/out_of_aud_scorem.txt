
SQL*Plus: Release 11.2.0.1.0 Production on Mon Jan 3 02:07:53 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

02:07:53 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
02:07:53 SQL> 02:07:53 SQL> @aud_score1day.sql  2011-01-03 01:45:00
02:07:53 SQL> --
02:07:53 SQL> -- aud_score1day.sql
02:07:53 SQL> --
02:07:53 SQL> 
02:07:53 SQL> CREATE OR REPLACE VIEW sme AS
02:07:53   2  SELECT
02:07:53   3  'aud'||m.ydate prdate
02:07:53   4  ,NULL gatt
02:07:53   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:07:53   6  ,eur_g00
02:07:53   7  ,eur_g01
02:07:53   8  ,eur_g02
02:07:53   9  ,eur_g03
02:07:53  10  ,eur_g04
02:07:53  11  ,eur_g05
02:07:53  12  ,eur_g06
02:07:53  13  ,eur_g07
02:07:53  14  ,eur_g08
02:07:53  15  ,eur_g09
02:07:53  16  ,eur_g10
02:07:53  17  ,eur_g11
02:07:53  18  ,eur_g12
02:07:53  19  ,eur_g13
02:07:53  20  ,eur_g14
02:07:53  21  ,eur_g15
02:07:53  22  ,eur_g16
02:07:53  23  ,eur_g17
02:07:53  24  ,eur_g18
02:07:53  25  ,eur_g19
02:07:53  26  ,eur_g20
02:07:53  27  ,eur_g21
02:07:53  28  ,eur_g22
02:07:53  29  ,eur_g23
02:07:53  30  ,eur_g24
02:07:53  31  ,eur_g25
02:07:53  32  ,eur_g26
02:07:53  33  ,eur_g27
02:07:53  34  ,eur_g28
02:07:53  35  ,eur_g29
02:07:53  36  ,eur_g30
02:07:53  37  ,eur_g31
02:07:53  38  ,eur_g32
02:07:53  39  ,eur_g33
02:07:53  40  ,eur_g34
02:07:53  41  ,eur_g35
02:07:53  42  ,eur_g36
02:07:53  43  ,eur_g37
02:07:53  44  ,eur_g38
02:07:53  45  ,eur_g39
02:07:53  46  ,eur_g40
02:07:53  47  ,eur_g41
02:07:53  48  ,aud_g00
02:07:53  49  ,aud_g01
02:07:53  50  ,aud_g02
02:07:53  51  ,aud_g03
02:07:53  52  ,aud_g04
02:07:53  53  ,aud_g05
02:07:53  54  ,aud_g06
02:07:53  55  ,aud_g07
02:07:53  56  ,aud_g08
02:07:53  57  ,aud_g09
02:07:53  58  ,aud_g10
02:07:53  59  ,aud_g11
02:07:53  60  ,aud_g12
02:07:53  61  ,aud_g13
02:07:53  62  ,aud_g14
02:07:53  63  ,aud_g15
02:07:53  64  ,aud_g16
02:07:53  65  ,aud_g17
02:07:53  66  ,aud_g18
02:07:53  67  ,aud_g19
02:07:53  68  ,aud_g20
02:07:53  69  ,aud_g21
02:07:53  70  ,aud_g22
02:07:53  71  ,aud_g23
02:07:53  72  ,aud_g24
02:07:53  73  ,aud_g25
02:07:53  74  ,aud_g26
02:07:53  75  ,aud_g27
02:07:53  76  ,aud_g28
02:07:53  77  ,aud_g29
02:07:53  78  ,aud_g30
02:07:53  79  ,aud_g31
02:07:53  80  ,aud_g32
02:07:53  81  ,aud_g33
02:07:53  82  ,aud_g34
02:07:53  83  ,aud_g35
02:07:53  84  ,aud_g36
02:07:53  85  ,aud_g37
02:07:53  86  ,aud_g38
02:07:53  87  ,aud_g39
02:07:53  88  ,aud_g40
02:07:53  89  ,aud_g41
02:07:53  90  ,gbp_g00
02:07:53  91  ,gbp_g01
02:07:53  92  ,gbp_g02
02:07:53  93  ,gbp_g03
02:07:53  94  ,gbp_g04
02:07:53  95  ,gbp_g05
02:07:53  96  ,gbp_g06
02:07:53  97  ,gbp_g07
02:07:53  98  ,gbp_g08
02:07:53  99  ,gbp_g09
02:07:53 100  ,gbp_g10
02:07:53 101  ,gbp_g11
02:07:53 102  ,gbp_g12
02:07:53 103  ,gbp_g13
02:07:53 104  ,gbp_g14
02:07:53 105  ,gbp_g15
02:07:53 106  ,gbp_g16
02:07:53 107  ,gbp_g17
02:07:53 108  ,gbp_g18
02:07:53 109  ,gbp_g19
02:07:53 110  ,gbp_g20
02:07:53 111  ,gbp_g21
02:07:53 112  ,gbp_g22
02:07:53 113  ,gbp_g23
02:07:53 114  ,gbp_g24
02:07:53 115  ,gbp_g25
02:07:53 116  ,gbp_g26
02:07:53 117  ,gbp_g27
02:07:53 118  ,gbp_g28
02:07:53 119  ,gbp_g29
02:07:53 120  ,gbp_g30
02:07:53 121  ,gbp_g31
02:07:53 122  ,gbp_g32
02:07:53 123  ,gbp_g33
02:07:53 124  ,gbp_g34
02:07:53 125  ,gbp_g35
02:07:53 126  ,gbp_g36
02:07:53 127  ,gbp_g37
02:07:53 128  ,gbp_g38
02:07:53 129  ,gbp_g39
02:07:53 130  ,gbp_g40
02:07:53 131  ,gbp_g41
02:07:53 132  ,jpy_g00
02:07:53 133  ,jpy_g01
02:07:53 134  ,jpy_g02
02:07:53 135  ,jpy_g03
02:07:53 136  ,jpy_g04
02:07:53 137  ,jpy_g05
02:07:53 138  ,jpy_g06
02:07:53 139  ,jpy_g07
02:07:53 140  ,jpy_g08
02:07:53 141  ,jpy_g09
02:07:53 142  ,jpy_g10
02:07:53 143  ,jpy_g11
02:07:53 144  ,jpy_g12
02:07:53 145  ,jpy_g13
02:07:53 146  ,jpy_g14
02:07:53 147  ,jpy_g15
02:07:53 148  ,jpy_g16
02:07:53 149  ,jpy_g17
02:07:53 150  ,jpy_g18
02:07:53 151  ,jpy_g19
02:07:53 152  ,jpy_g20
02:07:53 153  ,jpy_g21
02:07:53 154  ,jpy_g22
02:07:53 155  ,jpy_g23
02:07:53 156  ,jpy_g24
02:07:53 157  ,jpy_g25
02:07:53 158  ,jpy_g26
02:07:53 159  ,jpy_g27
02:07:53 160  ,jpy_g28
02:07:53 161  ,jpy_g29
02:07:53 162  ,jpy_g30
02:07:53 163  ,jpy_g31
02:07:53 164  ,jpy_g32
02:07:53 165  ,jpy_g33
02:07:53 166  ,jpy_g34
02:07:53 167  ,jpy_g35
02:07:53 168  ,jpy_g36
02:07:53 169  ,jpy_g37
02:07:53 170  ,jpy_g38
02:07:53 171  ,jpy_g39
02:07:53 172  ,jpy_g40
02:07:53 173  ,jpy_g41
02:07:53 174  ,cad_g00
02:07:53 175  ,cad_g01
02:07:53 176  ,cad_g02
02:07:53 177  ,cad_g03
02:07:53 178  ,cad_g04
02:07:53 179  ,cad_g05
02:07:53 180  ,cad_g06
02:07:53 181  ,cad_g07
02:07:53 182  ,cad_g08
02:07:53 183  ,cad_g09
02:07:53 184  ,cad_g10
02:07:53 185  ,cad_g11
02:07:53 186  ,cad_g12
02:07:53 187  ,cad_g13
02:07:53 188  ,cad_g14
02:07:53 189  ,cad_g15
02:07:53 190  ,cad_g16
02:07:53 191  ,cad_g17
02:07:53 192  ,cad_g18
02:07:53 193  ,cad_g19
02:07:53 194  ,cad_g20
02:07:53 195  ,cad_g21
02:07:53 196  ,cad_g22
02:07:53 197  ,cad_g23
02:07:53 198  ,cad_g24
02:07:53 199  ,cad_g25
02:07:53 200  ,cad_g26
02:07:53 201  ,cad_g27
02:07:53 202  ,cad_g28
02:07:53 203  ,cad_g29
02:07:53 204  ,cad_g30
02:07:53 205  ,cad_g31
02:07:53 206  ,cad_g32
02:07:53 207  ,cad_g33
02:07:53 208  ,cad_g34
02:07:53 209  ,cad_g35
02:07:53 210  ,cad_g36
02:07:53 211  ,cad_g37
02:07:53 212  ,cad_g38
02:07:53 213  ,cad_g39
02:07:53 214  ,cad_g40
02:07:53 215  ,cad_g41
02:07:53 216  ,chf_g00
02:07:53 217  ,chf_g01
02:07:53 218  ,chf_g02
02:07:53 219  ,chf_g03
02:07:53 220  ,chf_g04
02:07:53 221  ,chf_g05
02:07:53 222  ,chf_g06
02:07:53 223  ,chf_g07
02:07:53 224  ,chf_g08
02:07:53 225  ,chf_g09
02:07:53 226  ,chf_g10
02:07:53 227  ,chf_g11
02:07:53 228  ,chf_g12
02:07:53 229  ,chf_g13
02:07:53 230  ,chf_g14
02:07:53 231  ,chf_g15
02:07:53 232  ,chf_g16
02:07:53 233  ,chf_g17
02:07:53 234  ,chf_g18
02:07:53 235  ,chf_g19
02:07:53 236  ,chf_g20
02:07:53 237  ,chf_g21
02:07:53 238  ,chf_g22
02:07:53 239  ,chf_g23
02:07:53 240  ,chf_g24
02:07:53 241  ,chf_g25
02:07:53 242  ,chf_g26
02:07:53 243  ,chf_g27
02:07:53 244  ,chf_g28
02:07:53 245  ,chf_g29
02:07:53 246  ,chf_g30
02:07:53 247  ,chf_g31
02:07:53 248  ,chf_g32
02:07:53 249  ,chf_g33
02:07:53 250  ,chf_g34
02:07:53 251  ,chf_g35
02:07:53 252  ,chf_g36
02:07:53 253  ,chf_g37
02:07:53 254  ,chf_g38
02:07:53 255  ,chf_g39
02:07:53 256  ,chf_g40
02:07:53 257  ,chf_g41
02:07:53 258  FROM aud_ms6 m
02:07:53 259  WHERE m.ydate = '&1'||' '||'&2'
02:07:53 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'01:45:00'

View created.

Elapsed: 00:00:00.14
02:07:53 SQL> 
02:07:53 SQL> -- rpt
02:07:53 SQL> -- We should see just 1 row:
02:07:53 SQL> 
02:07:53 SQL> SELECT COUNT(prdate) FROM sme
02:07:53   2  
02:07:53 SQL> -- Build the model:
02:07:53 SQL> CREATE OR REPLACE VIEW bme AS
02:07:53   2  SELECT
02:07:53   3  'aud'||m.ydate prdate
02:07:53   4  ,gatt
02:07:53   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:07:53   6  ,eur_g00
02:07:53   7  ,eur_g01
02:07:53   8  ,eur_g02
02:07:53   9  ,eur_g03
02:07:53  10  ,eur_g04
02:07:53  11  ,eur_g05
02:07:53  12  ,eur_g06
02:07:53  13  ,eur_g07
02:07:53  14  ,eur_g08
02:07:53  15  ,eur_g09
02:07:53  16  ,eur_g10
02:07:53  17  ,eur_g11
02:07:53  18  ,eur_g12
02:07:53  19  ,eur_g13
02:07:53  20  ,eur_g14
02:07:53  21  ,eur_g15
02:07:53  22  ,eur_g16
02:07:53  23  ,eur_g17
02:07:53  24  ,eur_g18
02:07:53  25  ,eur_g19
02:07:53  26  ,eur_g20
02:07:53  27  ,eur_g21
02:07:53  28  ,eur_g22
02:07:53  29  ,eur_g23
02:07:53  30  ,eur_g24
02:07:53  31  ,eur_g25
02:07:53  32  ,eur_g26
02:07:53  33  ,eur_g27
02:07:53  34  ,eur_g28
02:07:53  35  ,eur_g29
02:07:53  36  ,eur_g30
02:07:53  37  ,eur_g31
02:07:53  38  ,eur_g32
02:07:53  39  ,eur_g33
02:07:53  40  ,eur_g34
02:07:53  41  ,eur_g35
02:07:53  42  ,eur_g36
02:07:53  43  ,eur_g37
02:07:53  44  ,eur_g38
02:07:53  45  ,eur_g39
02:07:53  46  ,eur_g40
02:07:53  47  ,eur_g41
02:07:53  48  ,aud_g00
02:07:53  49  ,aud_g01
02:07:53  50  ,aud_g02
02:07:53  51  ,aud_g03
02:07:53  52  ,aud_g04
02:07:53  53  ,aud_g05
02:07:53  54  ,aud_g06
02:07:53  55  ,aud_g07
02:07:53  56  ,aud_g08
02:07:53  57  ,aud_g09
02:07:53  58  ,aud_g10
02:07:53  59  ,aud_g11
02:07:53  60  ,aud_g12
02:07:53  61  ,aud_g13
02:07:53  62  ,aud_g14
02:07:53  63  ,aud_g15
02:07:53  64  ,aud_g16
02:07:53  65  ,aud_g17
02:07:53  66  ,aud_g18
02:07:53  67  ,aud_g19
02:07:53  68  ,aud_g20
02:07:53  69  ,aud_g21
02:07:53  70  ,aud_g22
02:07:53  71  ,aud_g23
02:07:53  72  ,aud_g24
02:07:53  73  ,aud_g25
02:07:53  74  ,aud_g26
02:07:53  75  ,aud_g27
02:07:53  76  ,aud_g28
02:07:53  77  ,aud_g29
02:07:53  78  ,aud_g30
02:07:53  79  ,aud_g31
02:07:53  80  ,aud_g32
02:07:53  81  ,aud_g33
02:07:53  82  ,aud_g34
02:07:53  83  ,aud_g35
02:07:53  84  ,aud_g36
02:07:53  85  ,aud_g37
02:07:53  86  ,aud_g38
02:07:53  87  ,aud_g39
02:07:53  88  ,aud_g40
02:07:53  89  ,aud_g41
02:07:53  90  ,gbp_g00
02:07:53  91  ,gbp_g01
02:07:53  92  ,gbp_g02
02:07:53  93  ,gbp_g03
02:07:53  94  ,gbp_g04
02:07:53  95  ,gbp_g05
02:07:53  96  ,gbp_g06
02:07:53  97  ,gbp_g07
02:07:53  98  ,gbp_g08
02:07:53  99  ,gbp_g09
02:07:53 100  ,gbp_g10
02:07:53 101  ,gbp_g11
02:07:53 102  ,gbp_g12
02:07:53 103  ,gbp_g13
02:07:53 104  ,gbp_g14
02:07:53 105  ,gbp_g15
02:07:53 106  ,gbp_g16
02:07:53 107  ,gbp_g17
02:07:53 108  ,gbp_g18
02:07:53 109  ,gbp_g19
02:07:53 110  ,gbp_g20
02:07:53 111  ,gbp_g21
02:07:53 112  ,gbp_g22
02:07:53 113  ,gbp_g23
02:07:53 114  ,gbp_g24
02:07:53 115  ,gbp_g25
02:07:53 116  ,gbp_g26
02:07:53 117  ,gbp_g27
02:07:53 118  ,gbp_g28
02:07:53 119  ,gbp_g29
02:07:53 120  ,gbp_g30
02:07:53 121  ,gbp_g31
02:07:53 122  ,gbp_g32
02:07:53 123  ,gbp_g33
02:07:53 124  ,gbp_g34
02:07:53 125  ,gbp_g35
02:07:53 126  ,gbp_g36
02:07:53 127  ,gbp_g37
02:07:53 128  ,gbp_g38
02:07:53 129  ,gbp_g39
02:07:53 130  ,gbp_g40
02:07:53 131  ,gbp_g41
02:07:53 132  ,jpy_g00
02:07:53 133  ,jpy_g01
02:07:53 134  ,jpy_g02
02:07:53 135  ,jpy_g03
02:07:53 136  ,jpy_g04
02:07:53 137  ,jpy_g05
02:07:53 138  ,jpy_g06
02:07:53 139  ,jpy_g07
02:07:53 140  ,jpy_g08
02:07:53 141  ,jpy_g09
02:07:53 142  ,jpy_g10
02:07:53 143  ,jpy_g11
02:07:53 144  ,jpy_g12
02:07:53 145  ,jpy_g13
02:07:53 146  ,jpy_g14
02:07:53 147  ,jpy_g15
02:07:53 148  ,jpy_g16
02:07:53 149  ,jpy_g17
02:07:53 150  ,jpy_g18
02:07:53 151  ,jpy_g19
02:07:53 152  ,jpy_g20
02:07:53 153  ,jpy_g21
02:07:53 154  ,jpy_g22
02:07:53 155  ,jpy_g23
02:07:53 156  ,jpy_g24
02:07:53 157  ,jpy_g25
02:07:53 158  ,jpy_g26
02:07:53 159  ,jpy_g27
02:07:53 160  ,jpy_g28
02:07:53 161  ,jpy_g29
02:07:53 162  ,jpy_g30
02:07:53 163  ,jpy_g31
02:07:53 164  ,jpy_g32
02:07:53 165  ,jpy_g33
02:07:53 166  ,jpy_g34
02:07:53 167  ,jpy_g35
02:07:53 168  ,jpy_g36
02:07:53 169  ,jpy_g37
02:07:53 170  ,jpy_g38
02:07:53 171  ,jpy_g39
02:07:53 172  ,jpy_g40
02:07:53 173  ,jpy_g41
02:07:53 174  ,cad_g00
02:07:53 175  ,cad_g01
02:07:53 176  ,cad_g02
02:07:53 177  ,cad_g03
02:07:53 178  ,cad_g04
02:07:53 179  ,cad_g05
02:07:53 180  ,cad_g06
02:07:53 181  ,cad_g07
02:07:53 182  ,cad_g08
02:07:53 183  ,cad_g09
02:07:53 184  ,cad_g10
02:07:53 185  ,cad_g11
02:07:53 186  ,cad_g12
02:07:53 187  ,cad_g13
02:07:53 188  ,cad_g14
02:07:53 189  ,cad_g15
02:07:53 190  ,cad_g16
02:07:53 191  ,cad_g17
02:07:53 192  ,cad_g18
02:07:53 193  ,cad_g19
02:07:53 194  ,cad_g20
02:07:53 195  ,cad_g21
02:07:53 196  ,cad_g22
02:07:53 197  ,cad_g23
02:07:53 198  ,cad_g24
02:07:53 199  ,cad_g25
02:07:53 200  ,cad_g26
02:07:53 201  ,cad_g27
02:07:53 202  ,cad_g28
02:07:53 203  ,cad_g29
02:07:53 204  ,cad_g30
02:07:53 205  ,cad_g31
02:07:53 206  ,cad_g32
02:07:53 207  ,cad_g33
02:07:53 208  ,cad_g34
02:07:53 209  ,cad_g35
02:07:53 210  ,cad_g36
02:07:53 211  ,cad_g37
02:07:53 212  ,cad_g38
02:07:53 213  ,cad_g39
02:07:53 214  ,cad_g40
02:07:53 215  ,cad_g41
02:07:53 216  ,chf_g00
02:07:53 217  ,chf_g01
02:07:53 218  ,chf_g02
02:07:53 219  ,chf_g03
02:07:53 220  ,chf_g04
02:07:53 221  ,chf_g05
02:07:53 222  ,chf_g06
02:07:53 223  ,chf_g07
02:07:53 224  ,chf_g08
02:07:53 225  ,chf_g09
02:07:53 226  ,chf_g10
02:07:53 227  ,chf_g11
02:07:53 228  ,chf_g12
02:07:53 229  ,chf_g13
02:07:53 230  ,chf_g14
02:07:53 231  ,chf_g15
02:07:53 232  ,chf_g16
02:07:53 233  ,chf_g17
02:07:53 234  ,chf_g18
02:07:53 235  ,chf_g19
02:07:53 236  ,chf_g20
02:07:53 237  ,chf_g21
02:07:53 238  ,chf_g22
02:07:53 239  ,chf_g23
02:07:53 240  ,chf_g24
02:07:53 241  ,chf_g25
02:07:53 242  ,chf_g26
02:07:53 243  ,chf_g27
02:07:53 244  ,chf_g28
02:07:53 245  ,chf_g29
02:07:53 246  ,chf_g30
02:07:53 247  ,chf_g31
02:07:53 248  ,chf_g32
02:07:53 249  ,chf_g33
02:07:53 250  ,chf_g34
02:07:53 251  ,chf_g35
02:07:53 252  ,chf_g36
02:07:53 253  ,chf_g37
02:07:53 254  ,chf_g38
02:07:53 255  ,chf_g39
02:07:53 256  ,chf_g40
02:07:53 257  ,chf_g41
02:07:53 258  FROM aud_ms6 m
02:07:53 259  WHERE gatt IN('nup','up')
02:07:53 260  AND 1+m.ydate < '&1'||' '||'&2'
02:07:53 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'01:45:00'

View created.

Elapsed: 00:00:00.16
02:07:53 SQL> 
02:07:53 SQL> -- rpt
02:07:53 SQL> 
02:07:53 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
02:07:53   2  
02:07:53 SQL> SELECT MAX(prdate) FROM bme
02:07:53   2  
02:07:53 SQL> -- Now build model from bme and score sme
02:07:53 SQL> @score1.sql
02:07:53 SQL> -- score1.sql
02:07:53 SQL> 
02:07:53 SQL> -- Does the 1st SVM score
02:07:53 SQL> 
02:07:53 SQL> -- Fill up svmc_apply_prep
02:07:53 SQL> @score.sql
02:07:53 SQL> --
02:07:53 SQL> -- score.sql
02:07:53 SQL> --
02:07:53 SQL> 
02:07:53 SQL> -- usage: score.sql
02:07:53 SQL> 
02:07:53 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
02:07:53 SQL> 
02:07:53 SQL> DEFINE target	= 'gatt'
02:07:53 SQL> DEFINE model_name = 'forex14'
02:07:53 SQL> DEFINE bldtable	= 'bme'
02:07:53 SQL> DEFINE scoretable = 'sme'
02:07:53 SQL> DEFINE case_id	= 'prdate'
02:07:53 SQL> 
02:07:53 SQL> -- Define a variable to help me exclude some columns from some data mining calls
02:07:53 SQL> DEFINE exclude1 = "'&target','&case_id'"
02:07:53 SQL> 
02:07:53 SQL> -- Builds an SVM model using pl/sql.
02:07:53 SQL> 
02:07:53 SQL> -----------------------------------------------------------------------
02:07:53 SQL> --			    BUILD THE MODEL
02:07:53 SQL> -----------------------------------------------------------------------
02:07:53 SQL> 
02:07:53 SQL> -- Cleanup old build data preparation objects for repeat runs
02:07:53 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
02:07:53 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
02:07:53 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
02:07:53 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
02:07:53 SQL> 
02:07:53 SQL> 
02:07:53 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
02:07:53 SQL> --
02:07:53 SQL> -- DROP	TABLE svmc_settings ;
02:07:53 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
02:07:53 SQL> -- DELETE svmc_settings;
02:07:53 SQL> 
02:07:53 SQL> -- The default classification algorithm is Naive Bayes. So override
02:07:53 SQL> -- this choice to SVM using a settings table.
02:07:53 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
02:07:53 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
02:07:53 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
02:07:53 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
02:07:53 SQL> -- models.
02:07:53 SQL> --
02:07:53 SQL> 
02:07:53 SQL> -- Do this once and then comment it out.
02:07:53 SQL> -- That makes script go faster.
02:07:53 SQL> -- BEGIN
02:07:53 SQL> -- -- Populate settings table
02:07:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:07:53 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
02:07:53 SQL> --
02:07:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:07:53 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
02:07:53 SQL> --
02:07:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:07:53 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
02:07:53 SQL> --   COMMIT;
02:07:53 SQL> -- END;
02:07:53 SQL> -- /
02:07:53 SQL> 
02:07:53 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
02:07:53 SQL> 
02:07:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
02:07:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:07:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:07:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
02:07:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:07:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:07:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
02:07:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:07:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:07:53 SQL> 
02:07:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
02:07:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:07:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
02:07:53 SQL> 
02:07:53 SQL> --------------------------------
02:07:53 SQL> -- PREPARE BUILD (TRAINING) DATA
02:07:53 SQL> --
02:07:53 SQL> 
02:07:53 SQL> -- 1. Missing Value treatment for all Predictors and
02:07:53 SQL> -- 2. Outlier Treatment and
02:07:53 SQL> -- 3. Normalization are performed below.
02:07:53 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
02:07:53 SQL> --    normalized here.
02:07:53 SQL> 
02:07:53 SQL> BEGIN
02:07:53   2  	-- Perform missing value treatment for all predictors
02:07:53   3  	-- create miss tables
02:07:53   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
02:07:53   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
02:07:53   6  
02:07:53   7  	-- populate miss tables
02:07:53   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
02:07:53   9  	  miss_table_name => 'svmc_miss_num',
02:07:53  10  	  data_table_name => '&bldtable',
02:07:53  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:07:53  12  
02:07:53  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
02:07:53  14  	  miss_table_name => 'svmc_miss_cat',
02:07:53  15  	  data_table_name => '&bldtable',
02:07:53  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:07:53  17  
02:07:53  18  	-- xform input data to replace missing values
02:07:53  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:07:53  20  	  miss_table_name => 'svmc_miss_num',
02:07:53  21  	  data_table_name => '&bldtable',
02:07:53  22  	  xform_view_name => 'xformed_build_miss_num');
02:07:53  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:07:53  24  	  miss_table_name => 'svmc_miss_cat',
02:07:53  25  	  data_table_name => '&bldtable',
02:07:53  26  	  xform_view_name => 'xformed_build_miss_cat');
02:07:53  27  
02:07:53  28  	-- Perform outlier treatment.
02:07:53  29  	-- create clip table
02:07:53  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
02:07:53  31  
02:07:53  32  	-- populate clip table
02:07:53  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
02:07:53  34  	  clip_table_name => 'svmc_clip',
02:07:53  35  	  data_table_name => '&bldtable',
02:07:53  36  	  tail_frac	  => 0.025,
02:07:53  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:07:53  38  
02:07:53  39  	-- xform input data to winsorized data
02:07:53  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
02:07:53  41  	  clip_table_name => 'svmc_clip',
02:07:53  42  	  data_table_name => '&bldtable',
02:07:53  43  	  xform_view_name => 'svmc_winsor');
02:07:53  44  
02:07:53  45  	-- create normalization table
02:07:53  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
02:07:53  47  
02:07:53  48  	-- populate normalization table based on winsorized data
02:07:53  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
02:07:53  50  	  norm_table_name => 'svmc_norm',
02:07:53  51  	  data_table_name => 'svmc_winsor',
02:07:53  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:07:53  53  
02:07:53  54  	-- normalize the original data
02:07:53  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:07:53  56  	  norm_table_name => 'svmc_norm',
02:07:53  57  	  data_table_name => '&bldtable',
02:07:53  58  	  xform_view_name => 'svmc_build_prep');
02:07:53  59  END;
02:07:53  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.06
02:08:12 SQL> 
02:08:12 SQL> ---------------------
02:08:12 SQL> -- CREATE A NEW MODEL
02:08:12 SQL> --
02:08:12 SQL> -- Cleanup old model with the same name for repeat runs
02:08:12 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
02:08:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:08:12   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.73
02:08:13 SQL> 
02:08:13 SQL> -- Build a new SVM Model
02:08:13 SQL> BEGIN
02:08:13   2  	DBMS_DATA_MINING.CREATE_MODEL(
02:08:13   3  	  model_name	      => '&model_name',
02:08:13   4  	  mining_function     => dbms_data_mining.classification,
02:08:13   5  	  data_table_name     => 'svmc_build_prep',
02:08:13   6  	  case_id_column_name => '&case_id',
02:08:13   7  	  target_column_name  => '&target',
02:08:13   8  	  settings_table_name => 'svmc_settings');
02:08:13   9  END;
02:08:13  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.76
02:08:42 SQL> 
02:08:42 SQL> -----------------------------------------------------------------------
02:08:42 SQL> --			       APPLY/score THE MODEL
02:08:42 SQL> -----------------------------------------------------------------------
02:08:42 SQL> 
02:08:42 SQL> -- Cleanup old scoring data preparation objects for repeat runs
02:08:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
02:08:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:08:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:08:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
02:08:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:08:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
02:08:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
02:08:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:08:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
02:08:42 SQL> -----------------------
02:08:42 SQL> -- PREPARE SCORING DATA
02:08:42 SQL> --
02:08:42 SQL> -- If the data for model creation has been prepared, then the data
02:08:42 SQL> -- to be scored using the model must be prepared in the same manner
02:08:42 SQL> -- in order to obtain meaningful results.
02:08:42 SQL> --
02:08:42 SQL> -- 1. Missing Value treatment for all Predictors and
02:08:42 SQL> -- 2. Normalization
02:08:42 SQL> -- No outlier treatment will be performed during test and apply. The
02:08:42 SQL> -- normalization step is sufficient, since the normalization parameters
02:08:42 SQL> -- already capture the effects of outlier treatment done with build data.
02:08:42 SQL> --
02:08:42 SQL> BEGIN
02:08:42   2  	-- Xform Test data to replace missing values
02:08:42   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:08:42   4  	  miss_table_name => 'svmc_miss_num',
02:08:42   5  	  data_table_name => '&scoretable',
02:08:42   6  	  xform_view_name => 'xformed_apply_miss_num');
02:08:42   7  
02:08:42   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:08:42   9  	  miss_table_name => 'svmc_miss_cat',
02:08:42  10  	  data_table_name => '&scoretable',
02:08:42  11  	  xform_view_name => 'xformed_apply_miss_cat');
02:08:42  12  
02:08:42  13  	-- Normalize the data to be scored
02:08:42  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:08:42  15  	  norm_table_name => 'svmc_norm',
02:08:42  16  	  data_table_name => '&scoretable',
02:08:42  17  	  xform_view_name => 'svmc_apply_prep');
02:08:42  18  END;
02:08:42  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.30
02:08:43 SQL> 
02:08:43 SQL> -- Use same model_name used in score.sql
02:08:43 SQL> DEFINE model_name = 'forex14'
02:08:43 SQL> 
02:08:43 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
02:08:43 SQL> 
02:08:43 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
02:08:43 SQL> 
02:08:43 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
02:08:43   2  SELECT
02:08:43   3  prdate
02:08:43   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
02:08:43   5  ,sysdate
02:08:43   6  ,SUBSTR(prdate,1,3)pair
02:08:43   7  ,SUBSTR(prdate,4,19)ydate
02:08:43   8  FROM svmc_apply_prep
02:08:43   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.23
02:08:44 SQL> @aud_score1day.sql  2011-01-03 01:50:00
02:08:44 SQL> --
02:08:44 SQL> -- aud_score1day.sql
02:08:44 SQL> --
02:08:44 SQL> 
02:08:44 SQL> CREATE OR REPLACE VIEW sme AS
02:08:44   2  SELECT
02:08:44   3  'aud'||m.ydate prdate
02:08:44   4  ,NULL gatt
02:08:44   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:08:44   6  ,eur_g00
02:08:44   7  ,eur_g01
02:08:44   8  ,eur_g02
02:08:44   9  ,eur_g03
02:08:44  10  ,eur_g04
02:08:44  11  ,eur_g05
02:08:44  12  ,eur_g06
02:08:44  13  ,eur_g07
02:08:44  14  ,eur_g08
02:08:44  15  ,eur_g09
02:08:44  16  ,eur_g10
02:08:44  17  ,eur_g11
02:08:44  18  ,eur_g12
02:08:44  19  ,eur_g13
02:08:44  20  ,eur_g14
02:08:44  21  ,eur_g15
02:08:44  22  ,eur_g16
02:08:44  23  ,eur_g17
02:08:44  24  ,eur_g18
02:08:44  25  ,eur_g19
02:08:44  26  ,eur_g20
02:08:44  27  ,eur_g21
02:08:44  28  ,eur_g22
02:08:44  29  ,eur_g23
02:08:44  30  ,eur_g24
02:08:44  31  ,eur_g25
02:08:44  32  ,eur_g26
02:08:44  33  ,eur_g27
02:08:44  34  ,eur_g28
02:08:44  35  ,eur_g29
02:08:44  36  ,eur_g30
02:08:44  37  ,eur_g31
02:08:44  38  ,eur_g32
02:08:44  39  ,eur_g33
02:08:44  40  ,eur_g34
02:08:44  41  ,eur_g35
02:08:44  42  ,eur_g36
02:08:44  43  ,eur_g37
02:08:44  44  ,eur_g38
02:08:44  45  ,eur_g39
02:08:44  46  ,eur_g40
02:08:44  47  ,eur_g41
02:08:44  48  ,aud_g00
02:08:44  49  ,aud_g01
02:08:44  50  ,aud_g02
02:08:44  51  ,aud_g03
02:08:44  52  ,aud_g04
02:08:44  53  ,aud_g05
02:08:44  54  ,aud_g06
02:08:44  55  ,aud_g07
02:08:44  56  ,aud_g08
02:08:44  57  ,aud_g09
02:08:44  58  ,aud_g10
02:08:44  59  ,aud_g11
02:08:44  60  ,aud_g12
02:08:44  61  ,aud_g13
02:08:44  62  ,aud_g14
02:08:44  63  ,aud_g15
02:08:44  64  ,aud_g16
02:08:44  65  ,aud_g17
02:08:44  66  ,aud_g18
02:08:44  67  ,aud_g19
02:08:44  68  ,aud_g20
02:08:44  69  ,aud_g21
02:08:44  70  ,aud_g22
02:08:44  71  ,aud_g23
02:08:44  72  ,aud_g24
02:08:44  73  ,aud_g25
02:08:44  74  ,aud_g26
02:08:44  75  ,aud_g27
02:08:44  76  ,aud_g28
02:08:44  77  ,aud_g29
02:08:44  78  ,aud_g30
02:08:44  79  ,aud_g31
02:08:44  80  ,aud_g32
02:08:44  81  ,aud_g33
02:08:44  82  ,aud_g34
02:08:44  83  ,aud_g35
02:08:44  84  ,aud_g36
02:08:44  85  ,aud_g37
02:08:44  86  ,aud_g38
02:08:44  87  ,aud_g39
02:08:44  88  ,aud_g40
02:08:44  89  ,aud_g41
02:08:44  90  ,gbp_g00
02:08:44  91  ,gbp_g01
02:08:44  92  ,gbp_g02
02:08:44  93  ,gbp_g03
02:08:44  94  ,gbp_g04
02:08:44  95  ,gbp_g05
02:08:44  96  ,gbp_g06
02:08:44  97  ,gbp_g07
02:08:44  98  ,gbp_g08
02:08:44  99  ,gbp_g09
02:08:44 100  ,gbp_g10
02:08:44 101  ,gbp_g11
02:08:44 102  ,gbp_g12
02:08:44 103  ,gbp_g13
02:08:44 104  ,gbp_g14
02:08:44 105  ,gbp_g15
02:08:44 106  ,gbp_g16
02:08:44 107  ,gbp_g17
02:08:44 108  ,gbp_g18
02:08:44 109  ,gbp_g19
02:08:44 110  ,gbp_g20
02:08:44 111  ,gbp_g21
02:08:44 112  ,gbp_g22
02:08:44 113  ,gbp_g23
02:08:44 114  ,gbp_g24
02:08:44 115  ,gbp_g25
02:08:44 116  ,gbp_g26
02:08:44 117  ,gbp_g27
02:08:44 118  ,gbp_g28
02:08:44 119  ,gbp_g29
02:08:44 120  ,gbp_g30
02:08:44 121  ,gbp_g31
02:08:44 122  ,gbp_g32
02:08:44 123  ,gbp_g33
02:08:44 124  ,gbp_g34
02:08:44 125  ,gbp_g35
02:08:44 126  ,gbp_g36
02:08:44 127  ,gbp_g37
02:08:44 128  ,gbp_g38
02:08:44 129  ,gbp_g39
02:08:44 130  ,gbp_g40
02:08:44 131  ,gbp_g41
02:08:44 132  ,jpy_g00
02:08:44 133  ,jpy_g01
02:08:44 134  ,jpy_g02
02:08:44 135  ,jpy_g03
02:08:44 136  ,jpy_g04
02:08:44 137  ,jpy_g05
02:08:44 138  ,jpy_g06
02:08:44 139  ,jpy_g07
02:08:44 140  ,jpy_g08
02:08:44 141  ,jpy_g09
02:08:44 142  ,jpy_g10
02:08:44 143  ,jpy_g11
02:08:44 144  ,jpy_g12
02:08:44 145  ,jpy_g13
02:08:44 146  ,jpy_g14
02:08:44 147  ,jpy_g15
02:08:44 148  ,jpy_g16
02:08:44 149  ,jpy_g17
02:08:44 150  ,jpy_g18
02:08:44 151  ,jpy_g19
02:08:44 152  ,jpy_g20
02:08:44 153  ,jpy_g21
02:08:44 154  ,jpy_g22
02:08:44 155  ,jpy_g23
02:08:44 156  ,jpy_g24
02:08:44 157  ,jpy_g25
02:08:44 158  ,jpy_g26
02:08:44 159  ,jpy_g27
02:08:44 160  ,jpy_g28
02:08:44 161  ,jpy_g29
02:08:44 162  ,jpy_g30
02:08:44 163  ,jpy_g31
02:08:44 164  ,jpy_g32
02:08:44 165  ,jpy_g33
02:08:44 166  ,jpy_g34
02:08:44 167  ,jpy_g35
02:08:44 168  ,jpy_g36
02:08:44 169  ,jpy_g37
02:08:44 170  ,jpy_g38
02:08:44 171  ,jpy_g39
02:08:44 172  ,jpy_g40
02:08:44 173  ,jpy_g41
02:08:44 174  ,cad_g00
02:08:44 175  ,cad_g01
02:08:44 176  ,cad_g02
02:08:44 177  ,cad_g03
02:08:44 178  ,cad_g04
02:08:44 179  ,cad_g05
02:08:44 180  ,cad_g06
02:08:44 181  ,cad_g07
02:08:44 182  ,cad_g08
02:08:44 183  ,cad_g09
02:08:44 184  ,cad_g10
02:08:44 185  ,cad_g11
02:08:44 186  ,cad_g12
02:08:44 187  ,cad_g13
02:08:44 188  ,cad_g14
02:08:44 189  ,cad_g15
02:08:44 190  ,cad_g16
02:08:44 191  ,cad_g17
02:08:44 192  ,cad_g18
02:08:44 193  ,cad_g19
02:08:44 194  ,cad_g20
02:08:44 195  ,cad_g21
02:08:44 196  ,cad_g22
02:08:44 197  ,cad_g23
02:08:44 198  ,cad_g24
02:08:44 199  ,cad_g25
02:08:44 200  ,cad_g26
02:08:44 201  ,cad_g27
02:08:44 202  ,cad_g28
02:08:44 203  ,cad_g29
02:08:44 204  ,cad_g30
02:08:44 205  ,cad_g31
02:08:44 206  ,cad_g32
02:08:44 207  ,cad_g33
02:08:44 208  ,cad_g34
02:08:44 209  ,cad_g35
02:08:44 210  ,cad_g36
02:08:44 211  ,cad_g37
02:08:44 212  ,cad_g38
02:08:44 213  ,cad_g39
02:08:44 214  ,cad_g40
02:08:44 215  ,cad_g41
02:08:44 216  ,chf_g00
02:08:44 217  ,chf_g01
02:08:44 218  ,chf_g02
02:08:44 219  ,chf_g03
02:08:44 220  ,chf_g04
02:08:44 221  ,chf_g05
02:08:44 222  ,chf_g06
02:08:44 223  ,chf_g07
02:08:44 224  ,chf_g08
02:08:44 225  ,chf_g09
02:08:44 226  ,chf_g10
02:08:44 227  ,chf_g11
02:08:44 228  ,chf_g12
02:08:44 229  ,chf_g13
02:08:44 230  ,chf_g14
02:08:44 231  ,chf_g15
02:08:44 232  ,chf_g16
02:08:44 233  ,chf_g17
02:08:44 234  ,chf_g18
02:08:44 235  ,chf_g19
02:08:44 236  ,chf_g20
02:08:44 237  ,chf_g21
02:08:44 238  ,chf_g22
02:08:44 239  ,chf_g23
02:08:44 240  ,chf_g24
02:08:44 241  ,chf_g25
02:08:44 242  ,chf_g26
02:08:44 243  ,chf_g27
02:08:44 244  ,chf_g28
02:08:44 245  ,chf_g29
02:08:44 246  ,chf_g30
02:08:44 247  ,chf_g31
02:08:44 248  ,chf_g32
02:08:44 249  ,chf_g33
02:08:44 250  ,chf_g34
02:08:44 251  ,chf_g35
02:08:44 252  ,chf_g36
02:08:44 253  ,chf_g37
02:08:44 254  ,chf_g38
02:08:44 255  ,chf_g39
02:08:44 256  ,chf_g40
02:08:44 257  ,chf_g41
02:08:44 258  FROM aud_ms6 m
02:08:44 259  WHERE m.ydate = '&1'||' '||'&2'
02:08:44 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'01:50:00'

View created.

Elapsed: 00:00:00.12
02:08:44 SQL> 
02:08:44 SQL> -- rpt
02:08:44 SQL> -- We should see just 1 row:
02:08:44 SQL> 
02:08:44 SQL> SELECT COUNT(prdate) FROM sme
02:08:44   2  
02:08:44 SQL> -- Build the model:
02:08:44 SQL> CREATE OR REPLACE VIEW bme AS
02:08:44   2  SELECT
02:08:44   3  'aud'||m.ydate prdate
02:08:44   4  ,gatt
02:08:44   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:08:44   6  ,eur_g00
02:08:44   7  ,eur_g01
02:08:44   8  ,eur_g02
02:08:44   9  ,eur_g03
02:08:44  10  ,eur_g04
02:08:44  11  ,eur_g05
02:08:44  12  ,eur_g06
02:08:44  13  ,eur_g07
02:08:44  14  ,eur_g08
02:08:44  15  ,eur_g09
02:08:44  16  ,eur_g10
02:08:44  17  ,eur_g11
02:08:44  18  ,eur_g12
02:08:44  19  ,eur_g13
02:08:44  20  ,eur_g14
02:08:44  21  ,eur_g15
02:08:44  22  ,eur_g16
02:08:44  23  ,eur_g17
02:08:44  24  ,eur_g18
02:08:44  25  ,eur_g19
02:08:44  26  ,eur_g20
02:08:44  27  ,eur_g21
02:08:44  28  ,eur_g22
02:08:44  29  ,eur_g23
02:08:44  30  ,eur_g24
02:08:44  31  ,eur_g25
02:08:44  32  ,eur_g26
02:08:44  33  ,eur_g27
02:08:44  34  ,eur_g28
02:08:44  35  ,eur_g29
02:08:44  36  ,eur_g30
02:08:44  37  ,eur_g31
02:08:44  38  ,eur_g32
02:08:44  39  ,eur_g33
02:08:44  40  ,eur_g34
02:08:44  41  ,eur_g35
02:08:44  42  ,eur_g36
02:08:44  43  ,eur_g37
02:08:44  44  ,eur_g38
02:08:44  45  ,eur_g39
02:08:44  46  ,eur_g40
02:08:44  47  ,eur_g41
02:08:44  48  ,aud_g00
02:08:44  49  ,aud_g01
02:08:44  50  ,aud_g02
02:08:44  51  ,aud_g03
02:08:44  52  ,aud_g04
02:08:44  53  ,aud_g05
02:08:44  54  ,aud_g06
02:08:44  55  ,aud_g07
02:08:44  56  ,aud_g08
02:08:44  57  ,aud_g09
02:08:44  58  ,aud_g10
02:08:44  59  ,aud_g11
02:08:44  60  ,aud_g12
02:08:44  61  ,aud_g13
02:08:44  62  ,aud_g14
02:08:44  63  ,aud_g15
02:08:44  64  ,aud_g16
02:08:44  65  ,aud_g17
02:08:44  66  ,aud_g18
02:08:44  67  ,aud_g19
02:08:44  68  ,aud_g20
02:08:44  69  ,aud_g21
02:08:44  70  ,aud_g22
02:08:44  71  ,aud_g23
02:08:44  72  ,aud_g24
02:08:44  73  ,aud_g25
02:08:44  74  ,aud_g26
02:08:44  75  ,aud_g27
02:08:44  76  ,aud_g28
02:08:44  77  ,aud_g29
02:08:44  78  ,aud_g30
02:08:44  79  ,aud_g31
02:08:44  80  ,aud_g32
02:08:44  81  ,aud_g33
02:08:44  82  ,aud_g34
02:08:44  83  ,aud_g35
02:08:44  84  ,aud_g36
02:08:44  85  ,aud_g37
02:08:44  86  ,aud_g38
02:08:44  87  ,aud_g39
02:08:44  88  ,aud_g40
02:08:44  89  ,aud_g41
02:08:44  90  ,gbp_g00
02:08:44  91  ,gbp_g01
02:08:44  92  ,gbp_g02
02:08:44  93  ,gbp_g03
02:08:44  94  ,gbp_g04
02:08:44  95  ,gbp_g05
02:08:44  96  ,gbp_g06
02:08:44  97  ,gbp_g07
02:08:44  98  ,gbp_g08
02:08:44  99  ,gbp_g09
02:08:44 100  ,gbp_g10
02:08:44 101  ,gbp_g11
02:08:44 102  ,gbp_g12
02:08:44 103  ,gbp_g13
02:08:44 104  ,gbp_g14
02:08:44 105  ,gbp_g15
02:08:44 106  ,gbp_g16
02:08:44 107  ,gbp_g17
02:08:44 108  ,gbp_g18
02:08:44 109  ,gbp_g19
02:08:44 110  ,gbp_g20
02:08:44 111  ,gbp_g21
02:08:44 112  ,gbp_g22
02:08:44 113  ,gbp_g23
02:08:44 114  ,gbp_g24
02:08:44 115  ,gbp_g25
02:08:44 116  ,gbp_g26
02:08:44 117  ,gbp_g27
02:08:44 118  ,gbp_g28
02:08:44 119  ,gbp_g29
02:08:44 120  ,gbp_g30
02:08:44 121  ,gbp_g31
02:08:44 122  ,gbp_g32
02:08:44 123  ,gbp_g33
02:08:44 124  ,gbp_g34
02:08:44 125  ,gbp_g35
02:08:44 126  ,gbp_g36
02:08:44 127  ,gbp_g37
02:08:44 128  ,gbp_g38
02:08:44 129  ,gbp_g39
02:08:44 130  ,gbp_g40
02:08:44 131  ,gbp_g41
02:08:44 132  ,jpy_g00
02:08:44 133  ,jpy_g01
02:08:44 134  ,jpy_g02
02:08:44 135  ,jpy_g03
02:08:44 136  ,jpy_g04
02:08:44 137  ,jpy_g05
02:08:44 138  ,jpy_g06
02:08:44 139  ,jpy_g07
02:08:44 140  ,jpy_g08
02:08:44 141  ,jpy_g09
02:08:44 142  ,jpy_g10
02:08:44 143  ,jpy_g11
02:08:44 144  ,jpy_g12
02:08:44 145  ,jpy_g13
02:08:44 146  ,jpy_g14
02:08:44 147  ,jpy_g15
02:08:44 148  ,jpy_g16
02:08:44 149  ,jpy_g17
02:08:44 150  ,jpy_g18
02:08:44 151  ,jpy_g19
02:08:44 152  ,jpy_g20
02:08:44 153  ,jpy_g21
02:08:44 154  ,jpy_g22
02:08:44 155  ,jpy_g23
02:08:44 156  ,jpy_g24
02:08:44 157  ,jpy_g25
02:08:44 158  ,jpy_g26
02:08:44 159  ,jpy_g27
02:08:44 160  ,jpy_g28
02:08:44 161  ,jpy_g29
02:08:44 162  ,jpy_g30
02:08:44 163  ,jpy_g31
02:08:44 164  ,jpy_g32
02:08:44 165  ,jpy_g33
02:08:44 166  ,jpy_g34
02:08:44 167  ,jpy_g35
02:08:44 168  ,jpy_g36
02:08:44 169  ,jpy_g37
02:08:44 170  ,jpy_g38
02:08:44 171  ,jpy_g39
02:08:44 172  ,jpy_g40
02:08:44 173  ,jpy_g41
02:08:44 174  ,cad_g00
02:08:44 175  ,cad_g01
02:08:44 176  ,cad_g02
02:08:44 177  ,cad_g03
02:08:44 178  ,cad_g04
02:08:44 179  ,cad_g05
02:08:44 180  ,cad_g06
02:08:44 181  ,cad_g07
02:08:44 182  ,cad_g08
02:08:44 183  ,cad_g09
02:08:44 184  ,cad_g10
02:08:44 185  ,cad_g11
02:08:44 186  ,cad_g12
02:08:44 187  ,cad_g13
02:08:44 188  ,cad_g14
02:08:44 189  ,cad_g15
02:08:44 190  ,cad_g16
02:08:44 191  ,cad_g17
02:08:44 192  ,cad_g18
02:08:44 193  ,cad_g19
02:08:44 194  ,cad_g20
02:08:44 195  ,cad_g21
02:08:44 196  ,cad_g22
02:08:44 197  ,cad_g23
02:08:44 198  ,cad_g24
02:08:44 199  ,cad_g25
02:08:44 200  ,cad_g26
02:08:44 201  ,cad_g27
02:08:44 202  ,cad_g28
02:08:44 203  ,cad_g29
02:08:44 204  ,cad_g30
02:08:44 205  ,cad_g31
02:08:44 206  ,cad_g32
02:08:44 207  ,cad_g33
02:08:44 208  ,cad_g34
02:08:44 209  ,cad_g35
02:08:44 210  ,cad_g36
02:08:44 211  ,cad_g37
02:08:44 212  ,cad_g38
02:08:44 213  ,cad_g39
02:08:44 214  ,cad_g40
02:08:44 215  ,cad_g41
02:08:44 216  ,chf_g00
02:08:44 217  ,chf_g01
02:08:44 218  ,chf_g02
02:08:44 219  ,chf_g03
02:08:44 220  ,chf_g04
02:08:44 221  ,chf_g05
02:08:44 222  ,chf_g06
02:08:44 223  ,chf_g07
02:08:44 224  ,chf_g08
02:08:44 225  ,chf_g09
02:08:44 226  ,chf_g10
02:08:44 227  ,chf_g11
02:08:44 228  ,chf_g12
02:08:44 229  ,chf_g13
02:08:44 230  ,chf_g14
02:08:44 231  ,chf_g15
02:08:44 232  ,chf_g16
02:08:44 233  ,chf_g17
02:08:44 234  ,chf_g18
02:08:44 235  ,chf_g19
02:08:44 236  ,chf_g20
02:08:44 237  ,chf_g21
02:08:44 238  ,chf_g22
02:08:44 239  ,chf_g23
02:08:44 240  ,chf_g24
02:08:44 241  ,chf_g25
02:08:44 242  ,chf_g26
02:08:44 243  ,chf_g27
02:08:44 244  ,chf_g28
02:08:44 245  ,chf_g29
02:08:44 246  ,chf_g30
02:08:44 247  ,chf_g31
02:08:44 248  ,chf_g32
02:08:44 249  ,chf_g33
02:08:44 250  ,chf_g34
02:08:44 251  ,chf_g35
02:08:44 252  ,chf_g36
02:08:44 253  ,chf_g37
02:08:44 254  ,chf_g38
02:08:44 255  ,chf_g39
02:08:44 256  ,chf_g40
02:08:44 257  ,chf_g41
02:08:44 258  FROM aud_ms6 m
02:08:44 259  WHERE gatt IN('nup','up')
02:08:44 260  AND 1+m.ydate < '&1'||' '||'&2'
02:08:44 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'01:50:00'

View created.

Elapsed: 00:00:00.13
02:08:44 SQL> 
02:08:44 SQL> -- rpt
02:08:44 SQL> 
02:08:44 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
02:08:44   2  
02:08:44 SQL> SELECT MAX(prdate) FROM bme
02:08:44   2  
02:08:44 SQL> -- Now build model from bme and score sme
02:08:44 SQL> @score1.sql
02:08:44 SQL> -- score1.sql
02:08:44 SQL> 
02:08:44 SQL> -- Does the 1st SVM score
02:08:44 SQL> 
02:08:44 SQL> -- Fill up svmc_apply_prep
02:08:44 SQL> @score.sql
02:08:44 SQL> --
02:08:44 SQL> -- score.sql
02:08:44 SQL> --
02:08:44 SQL> 
02:08:44 SQL> -- usage: score.sql
02:08:44 SQL> 
02:08:44 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
02:08:44 SQL> 
02:08:44 SQL> DEFINE target	= 'gatt'
02:08:44 SQL> DEFINE model_name = 'forex14'
02:08:44 SQL> DEFINE bldtable	= 'bme'
02:08:44 SQL> DEFINE scoretable = 'sme'
02:08:44 SQL> DEFINE case_id	= 'prdate'
02:08:44 SQL> 
02:08:44 SQL> -- Define a variable to help me exclude some columns from some data mining calls
02:08:44 SQL> DEFINE exclude1 = "'&target','&case_id'"
02:08:44 SQL> 
02:08:44 SQL> -- Builds an SVM model using pl/sql.
02:08:44 SQL> 
02:08:44 SQL> -----------------------------------------------------------------------
02:08:44 SQL> --			    BUILD THE MODEL
02:08:44 SQL> -----------------------------------------------------------------------
02:08:44 SQL> 
02:08:44 SQL> -- Cleanup old build data preparation objects for repeat runs
02:08:44 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
02:08:44 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
02:08:44 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
02:08:44 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
02:08:44 SQL> 
02:08:44 SQL> 
02:08:44 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
02:08:44 SQL> --
02:08:44 SQL> -- DROP	TABLE svmc_settings ;
02:08:44 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
02:08:44 SQL> -- DELETE svmc_settings;
02:08:44 SQL> 
02:08:44 SQL> -- The default classification algorithm is Naive Bayes. So override
02:08:44 SQL> -- this choice to SVM using a settings table.
02:08:44 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
02:08:44 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
02:08:44 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
02:08:44 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
02:08:44 SQL> -- models.
02:08:44 SQL> --
02:08:44 SQL> 
02:08:44 SQL> -- Do this once and then comment it out.
02:08:44 SQL> -- That makes script go faster.
02:08:44 SQL> -- BEGIN
02:08:44 SQL> -- -- Populate settings table
02:08:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:08:44 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
02:08:44 SQL> --
02:08:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:08:44 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
02:08:44 SQL> --
02:08:44 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:08:44 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
02:08:44 SQL> --   COMMIT;
02:08:44 SQL> -- END;
02:08:44 SQL> -- /
02:08:44 SQL> 
02:08:44 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
02:08:44 SQL> 
02:08:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
02:08:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:08:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:08:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
02:08:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:08:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:08:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
02:08:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:08:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:08:44 SQL> 
02:08:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
02:08:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:08:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
02:08:44 SQL> 
02:08:44 SQL> --------------------------------
02:08:44 SQL> -- PREPARE BUILD (TRAINING) DATA
02:08:44 SQL> --
02:08:44 SQL> 
02:08:44 SQL> -- 1. Missing Value treatment for all Predictors and
02:08:44 SQL> -- 2. Outlier Treatment and
02:08:44 SQL> -- 3. Normalization are performed below.
02:08:44 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
02:08:44 SQL> --    normalized here.
02:08:44 SQL> 
02:08:44 SQL> BEGIN
02:08:44   2  	-- Perform missing value treatment for all predictors
02:08:44   3  	-- create miss tables
02:08:44   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
02:08:44   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
02:08:44   6  
02:08:44   7  	-- populate miss tables
02:08:44   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
02:08:44   9  	  miss_table_name => 'svmc_miss_num',
02:08:44  10  	  data_table_name => '&bldtable',
02:08:44  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:08:44  12  
02:08:44  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
02:08:44  14  	  miss_table_name => 'svmc_miss_cat',
02:08:44  15  	  data_table_name => '&bldtable',
02:08:44  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:08:44  17  
02:08:44  18  	-- xform input data to replace missing values
02:08:44  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:08:44  20  	  miss_table_name => 'svmc_miss_num',
02:08:44  21  	  data_table_name => '&bldtable',
02:08:44  22  	  xform_view_name => 'xformed_build_miss_num');
02:08:44  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:08:44  24  	  miss_table_name => 'svmc_miss_cat',
02:08:44  25  	  data_table_name => '&bldtable',
02:08:44  26  	  xform_view_name => 'xformed_build_miss_cat');
02:08:44  27  
02:08:44  28  	-- Perform outlier treatment.
02:08:44  29  	-- create clip table
02:08:44  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
02:08:44  31  
02:08:44  32  	-- populate clip table
02:08:44  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
02:08:44  34  	  clip_table_name => 'svmc_clip',
02:08:44  35  	  data_table_name => '&bldtable',
02:08:44  36  	  tail_frac	  => 0.025,
02:08:44  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:08:44  38  
02:08:44  39  	-- xform input data to winsorized data
02:08:44  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
02:08:44  41  	  clip_table_name => 'svmc_clip',
02:08:44  42  	  data_table_name => '&bldtable',
02:08:44  43  	  xform_view_name => 'svmc_winsor');
02:08:44  44  
02:08:44  45  	-- create normalization table
02:08:44  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
02:08:44  47  
02:08:44  48  	-- populate normalization table based on winsorized data
02:08:44  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
02:08:44  50  	  norm_table_name => 'svmc_norm',
02:08:44  51  	  data_table_name => 'svmc_winsor',
02:08:44  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:08:44  53  
02:08:44  54  	-- normalize the original data
02:08:44  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:08:44  56  	  norm_table_name => 'svmc_norm',
02:08:44  57  	  data_table_name => '&bldtable',
02:08:44  58  	  xform_view_name => 'svmc_build_prep');
02:08:44  59  END;
02:08:44  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.20
02:09:02 SQL> 
02:09:02 SQL> ---------------------
02:09:02 SQL> -- CREATE A NEW MODEL
02:09:02 SQL> --
02:09:02 SQL> -- Cleanup old model with the same name for repeat runs
02:09:02 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
02:09:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:09:02   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.05
02:09:04 SQL> 
02:09:04 SQL> -- Build a new SVM Model
02:09:04 SQL> BEGIN
02:09:04   2  	DBMS_DATA_MINING.CREATE_MODEL(
02:09:04   3  	  model_name	      => '&model_name',
02:09:04   4  	  mining_function     => dbms_data_mining.classification,
02:09:04   5  	  data_table_name     => 'svmc_build_prep',
02:09:04   6  	  case_id_column_name => '&case_id',
02:09:04   7  	  target_column_name  => '&target',
02:09:04   8  	  settings_table_name => 'svmc_settings');
02:09:04   9  END;
02:09:04  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.28
02:09:30 SQL> 
02:09:30 SQL> -----------------------------------------------------------------------
02:09:30 SQL> --			       APPLY/score THE MODEL
02:09:30 SQL> -----------------------------------------------------------------------
02:09:30 SQL> 
02:09:30 SQL> -- Cleanup old scoring data preparation objects for repeat runs
02:09:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
02:09:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:09:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
02:09:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
02:09:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:09:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:09:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
02:09:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:09:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:09:30 SQL> -----------------------
02:09:30 SQL> -- PREPARE SCORING DATA
02:09:30 SQL> --
02:09:30 SQL> -- If the data for model creation has been prepared, then the data
02:09:30 SQL> -- to be scored using the model must be prepared in the same manner
02:09:30 SQL> -- in order to obtain meaningful results.
02:09:30 SQL> --
02:09:30 SQL> -- 1. Missing Value treatment for all Predictors and
02:09:30 SQL> -- 2. Normalization
02:09:30 SQL> -- No outlier treatment will be performed during test and apply. The
02:09:30 SQL> -- normalization step is sufficient, since the normalization parameters
02:09:30 SQL> -- already capture the effects of outlier treatment done with build data.
02:09:30 SQL> --
02:09:30 SQL> BEGIN
02:09:30   2  	-- Xform Test data to replace missing values
02:09:30   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:09:30   4  	  miss_table_name => 'svmc_miss_num',
02:09:30   5  	  data_table_name => '&scoretable',
02:09:30   6  	  xform_view_name => 'xformed_apply_miss_num');
02:09:30   7  
02:09:30   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:09:30   9  	  miss_table_name => 'svmc_miss_cat',
02:09:30  10  	  data_table_name => '&scoretable',
02:09:30  11  	  xform_view_name => 'xformed_apply_miss_cat');
02:09:30  12  
02:09:30  13  	-- Normalize the data to be scored
02:09:30  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:09:30  15  	  norm_table_name => 'svmc_norm',
02:09:30  16  	  data_table_name => '&scoretable',
02:09:30  17  	  xform_view_name => 'svmc_apply_prep');
02:09:30  18  END;
02:09:30  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
02:09:31 SQL> 
02:09:31 SQL> -- Use same model_name used in score.sql
02:09:31 SQL> DEFINE model_name = 'forex14'
02:09:31 SQL> 
02:09:31 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
02:09:31 SQL> 
02:09:31 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
02:09:31 SQL> 
02:09:31 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
02:09:31   2  SELECT
02:09:31   3  prdate
02:09:31   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
02:09:31   5  ,sysdate
02:09:31   6  ,SUBSTR(prdate,1,3)pair
02:09:31   7  ,SUBSTR(prdate,4,19)ydate
02:09:31   8  FROM svmc_apply_prep
02:09:31   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
02:09:31 SQL> @aud_score1day.sql  2011-01-03 01:55:00
02:09:31 SQL> --
02:09:31 SQL> -- aud_score1day.sql
02:09:31 SQL> --
02:09:31 SQL> 
02:09:31 SQL> CREATE OR REPLACE VIEW sme AS
02:09:31   2  SELECT
02:09:31   3  'aud'||m.ydate prdate
02:09:31   4  ,NULL gatt
02:09:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:09:31   6  ,eur_g00
02:09:31   7  ,eur_g01
02:09:31   8  ,eur_g02
02:09:31   9  ,eur_g03
02:09:31  10  ,eur_g04
02:09:31  11  ,eur_g05
02:09:31  12  ,eur_g06
02:09:31  13  ,eur_g07
02:09:31  14  ,eur_g08
02:09:31  15  ,eur_g09
02:09:31  16  ,eur_g10
02:09:31  17  ,eur_g11
02:09:31  18  ,eur_g12
02:09:31  19  ,eur_g13
02:09:31  20  ,eur_g14
02:09:31  21  ,eur_g15
02:09:31  22  ,eur_g16
02:09:31  23  ,eur_g17
02:09:31  24  ,eur_g18
02:09:31  25  ,eur_g19
02:09:31  26  ,eur_g20
02:09:31  27  ,eur_g21
02:09:31  28  ,eur_g22
02:09:31  29  ,eur_g23
02:09:31  30  ,eur_g24
02:09:31  31  ,eur_g25
02:09:31  32  ,eur_g26
02:09:31  33  ,eur_g27
02:09:31  34  ,eur_g28
02:09:31  35  ,eur_g29
02:09:31  36  ,eur_g30
02:09:31  37  ,eur_g31
02:09:31  38  ,eur_g32
02:09:31  39  ,eur_g33
02:09:31  40  ,eur_g34
02:09:31  41  ,eur_g35
02:09:31  42  ,eur_g36
02:09:31  43  ,eur_g37
02:09:31  44  ,eur_g38
02:09:31  45  ,eur_g39
02:09:31  46  ,eur_g40
02:09:31  47  ,eur_g41
02:09:31  48  ,aud_g00
02:09:31  49  ,aud_g01
02:09:31  50  ,aud_g02
02:09:31  51  ,aud_g03
02:09:31  52  ,aud_g04
02:09:31  53  ,aud_g05
02:09:31  54  ,aud_g06
02:09:31  55  ,aud_g07
02:09:31  56  ,aud_g08
02:09:31  57  ,aud_g09
02:09:31  58  ,aud_g10
02:09:31  59  ,aud_g11
02:09:31  60  ,aud_g12
02:09:31  61  ,aud_g13
02:09:31  62  ,aud_g14
02:09:31  63  ,aud_g15
02:09:31  64  ,aud_g16
02:09:31  65  ,aud_g17
02:09:31  66  ,aud_g18
02:09:31  67  ,aud_g19
02:09:31  68  ,aud_g20
02:09:31  69  ,aud_g21
02:09:31  70  ,aud_g22
02:09:31  71  ,aud_g23
02:09:31  72  ,aud_g24
02:09:31  73  ,aud_g25
02:09:31  74  ,aud_g26
02:09:31  75  ,aud_g27
02:09:31  76  ,aud_g28
02:09:31  77  ,aud_g29
02:09:31  78  ,aud_g30
02:09:31  79  ,aud_g31
02:09:31  80  ,aud_g32
02:09:31  81  ,aud_g33
02:09:31  82  ,aud_g34
02:09:31  83  ,aud_g35
02:09:31  84  ,aud_g36
02:09:31  85  ,aud_g37
02:09:31  86  ,aud_g38
02:09:31  87  ,aud_g39
02:09:31  88  ,aud_g40
02:09:31  89  ,aud_g41
02:09:31  90  ,gbp_g00
02:09:31  91  ,gbp_g01
02:09:31  92  ,gbp_g02
02:09:31  93  ,gbp_g03
02:09:31  94  ,gbp_g04
02:09:31  95  ,gbp_g05
02:09:31  96  ,gbp_g06
02:09:31  97  ,gbp_g07
02:09:31  98  ,gbp_g08
02:09:31  99  ,gbp_g09
02:09:31 100  ,gbp_g10
02:09:31 101  ,gbp_g11
02:09:31 102  ,gbp_g12
02:09:31 103  ,gbp_g13
02:09:31 104  ,gbp_g14
02:09:31 105  ,gbp_g15
02:09:31 106  ,gbp_g16
02:09:31 107  ,gbp_g17
02:09:31 108  ,gbp_g18
02:09:31 109  ,gbp_g19
02:09:31 110  ,gbp_g20
02:09:31 111  ,gbp_g21
02:09:31 112  ,gbp_g22
02:09:31 113  ,gbp_g23
02:09:31 114  ,gbp_g24
02:09:31 115  ,gbp_g25
02:09:31 116  ,gbp_g26
02:09:31 117  ,gbp_g27
02:09:31 118  ,gbp_g28
02:09:31 119  ,gbp_g29
02:09:31 120  ,gbp_g30
02:09:31 121  ,gbp_g31
02:09:31 122  ,gbp_g32
02:09:31 123  ,gbp_g33
02:09:31 124  ,gbp_g34
02:09:31 125  ,gbp_g35
02:09:31 126  ,gbp_g36
02:09:31 127  ,gbp_g37
02:09:31 128  ,gbp_g38
02:09:31 129  ,gbp_g39
02:09:31 130  ,gbp_g40
02:09:31 131  ,gbp_g41
02:09:31 132  ,jpy_g00
02:09:31 133  ,jpy_g01
02:09:31 134  ,jpy_g02
02:09:31 135  ,jpy_g03
02:09:31 136  ,jpy_g04
02:09:31 137  ,jpy_g05
02:09:31 138  ,jpy_g06
02:09:31 139  ,jpy_g07
02:09:31 140  ,jpy_g08
02:09:31 141  ,jpy_g09
02:09:31 142  ,jpy_g10
02:09:31 143  ,jpy_g11
02:09:31 144  ,jpy_g12
02:09:31 145  ,jpy_g13
02:09:31 146  ,jpy_g14
02:09:31 147  ,jpy_g15
02:09:31 148  ,jpy_g16
02:09:31 149  ,jpy_g17
02:09:31 150  ,jpy_g18
02:09:31 151  ,jpy_g19
02:09:31 152  ,jpy_g20
02:09:31 153  ,jpy_g21
02:09:31 154  ,jpy_g22
02:09:31 155  ,jpy_g23
02:09:31 156  ,jpy_g24
02:09:31 157  ,jpy_g25
02:09:31 158  ,jpy_g26
02:09:31 159  ,jpy_g27
02:09:31 160  ,jpy_g28
02:09:31 161  ,jpy_g29
02:09:31 162  ,jpy_g30
02:09:31 163  ,jpy_g31
02:09:31 164  ,jpy_g32
02:09:31 165  ,jpy_g33
02:09:31 166  ,jpy_g34
02:09:31 167  ,jpy_g35
02:09:31 168  ,jpy_g36
02:09:31 169  ,jpy_g37
02:09:31 170  ,jpy_g38
02:09:31 171  ,jpy_g39
02:09:31 172  ,jpy_g40
02:09:31 173  ,jpy_g41
02:09:31 174  ,cad_g00
02:09:31 175  ,cad_g01
02:09:31 176  ,cad_g02
02:09:31 177  ,cad_g03
02:09:31 178  ,cad_g04
02:09:31 179  ,cad_g05
02:09:31 180  ,cad_g06
02:09:31 181  ,cad_g07
02:09:31 182  ,cad_g08
02:09:31 183  ,cad_g09
02:09:31 184  ,cad_g10
02:09:31 185  ,cad_g11
02:09:31 186  ,cad_g12
02:09:31 187  ,cad_g13
02:09:31 188  ,cad_g14
02:09:31 189  ,cad_g15
02:09:31 190  ,cad_g16
02:09:31 191  ,cad_g17
02:09:31 192  ,cad_g18
02:09:31 193  ,cad_g19
02:09:31 194  ,cad_g20
02:09:31 195  ,cad_g21
02:09:31 196  ,cad_g22
02:09:31 197  ,cad_g23
02:09:31 198  ,cad_g24
02:09:31 199  ,cad_g25
02:09:31 200  ,cad_g26
02:09:31 201  ,cad_g27
02:09:31 202  ,cad_g28
02:09:31 203  ,cad_g29
02:09:31 204  ,cad_g30
02:09:31 205  ,cad_g31
02:09:31 206  ,cad_g32
02:09:31 207  ,cad_g33
02:09:31 208  ,cad_g34
02:09:31 209  ,cad_g35
02:09:31 210  ,cad_g36
02:09:31 211  ,cad_g37
02:09:31 212  ,cad_g38
02:09:31 213  ,cad_g39
02:09:31 214  ,cad_g40
02:09:31 215  ,cad_g41
02:09:31 216  ,chf_g00
02:09:31 217  ,chf_g01
02:09:31 218  ,chf_g02
02:09:31 219  ,chf_g03
02:09:31 220  ,chf_g04
02:09:31 221  ,chf_g05
02:09:31 222  ,chf_g06
02:09:31 223  ,chf_g07
02:09:31 224  ,chf_g08
02:09:31 225  ,chf_g09
02:09:31 226  ,chf_g10
02:09:31 227  ,chf_g11
02:09:31 228  ,chf_g12
02:09:31 229  ,chf_g13
02:09:31 230  ,chf_g14
02:09:31 231  ,chf_g15
02:09:31 232  ,chf_g16
02:09:31 233  ,chf_g17
02:09:31 234  ,chf_g18
02:09:31 235  ,chf_g19
02:09:31 236  ,chf_g20
02:09:31 237  ,chf_g21
02:09:31 238  ,chf_g22
02:09:31 239  ,chf_g23
02:09:31 240  ,chf_g24
02:09:31 241  ,chf_g25
02:09:31 242  ,chf_g26
02:09:31 243  ,chf_g27
02:09:31 244  ,chf_g28
02:09:31 245  ,chf_g29
02:09:31 246  ,chf_g30
02:09:31 247  ,chf_g31
02:09:31 248  ,chf_g32
02:09:31 249  ,chf_g33
02:09:31 250  ,chf_g34
02:09:31 251  ,chf_g35
02:09:31 252  ,chf_g36
02:09:31 253  ,chf_g37
02:09:31 254  ,chf_g38
02:09:31 255  ,chf_g39
02:09:31 256  ,chf_g40
02:09:31 257  ,chf_g41
02:09:31 258  FROM aud_ms6 m
02:09:31 259  WHERE m.ydate = '&1'||' '||'&2'
02:09:31 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'01:55:00'

View created.

Elapsed: 00:00:00.13
02:09:32 SQL> 
02:09:32 SQL> -- rpt
02:09:32 SQL> -- We should see just 1 row:
02:09:32 SQL> 
02:09:32 SQL> SELECT COUNT(prdate) FROM sme
02:09:32   2  
02:09:32 SQL> -- Build the model:
02:09:32 SQL> CREATE OR REPLACE VIEW bme AS
02:09:32   2  SELECT
02:09:32   3  'aud'||m.ydate prdate
02:09:32   4  ,gatt
02:09:32   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:09:32   6  ,eur_g00
02:09:32   7  ,eur_g01
02:09:32   8  ,eur_g02
02:09:32   9  ,eur_g03
02:09:32  10  ,eur_g04
02:09:32  11  ,eur_g05
02:09:32  12  ,eur_g06
02:09:32  13  ,eur_g07
02:09:32  14  ,eur_g08
02:09:32  15  ,eur_g09
02:09:32  16  ,eur_g10
02:09:32  17  ,eur_g11
02:09:32  18  ,eur_g12
02:09:32  19  ,eur_g13
02:09:32  20  ,eur_g14
02:09:32  21  ,eur_g15
02:09:32  22  ,eur_g16
02:09:32  23  ,eur_g17
02:09:32  24  ,eur_g18
02:09:32  25  ,eur_g19
02:09:32  26  ,eur_g20
02:09:32  27  ,eur_g21
02:09:32  28  ,eur_g22
02:09:32  29  ,eur_g23
02:09:32  30  ,eur_g24
02:09:32  31  ,eur_g25
02:09:32  32  ,eur_g26
02:09:32  33  ,eur_g27
02:09:32  34  ,eur_g28
02:09:32  35  ,eur_g29
02:09:32  36  ,eur_g30
02:09:32  37  ,eur_g31
02:09:32  38  ,eur_g32
02:09:32  39  ,eur_g33
02:09:32  40  ,eur_g34
02:09:32  41  ,eur_g35
02:09:32  42  ,eur_g36
02:09:32  43  ,eur_g37
02:09:32  44  ,eur_g38
02:09:32  45  ,eur_g39
02:09:32  46  ,eur_g40
02:09:32  47  ,eur_g41
02:09:32  48  ,aud_g00
02:09:32  49  ,aud_g01
02:09:32  50  ,aud_g02
02:09:32  51  ,aud_g03
02:09:32  52  ,aud_g04
02:09:32  53  ,aud_g05
02:09:32  54  ,aud_g06
02:09:32  55  ,aud_g07
02:09:32  56  ,aud_g08
02:09:32  57  ,aud_g09
02:09:32  58  ,aud_g10
02:09:32  59  ,aud_g11
02:09:32  60  ,aud_g12
02:09:32  61  ,aud_g13
02:09:32  62  ,aud_g14
02:09:32  63  ,aud_g15
02:09:32  64  ,aud_g16
02:09:32  65  ,aud_g17
02:09:32  66  ,aud_g18
02:09:32  67  ,aud_g19
02:09:32  68  ,aud_g20
02:09:32  69  ,aud_g21
02:09:32  70  ,aud_g22
02:09:32  71  ,aud_g23
02:09:32  72  ,aud_g24
02:09:32  73  ,aud_g25
02:09:32  74  ,aud_g26
02:09:32  75  ,aud_g27
02:09:32  76  ,aud_g28
02:09:32  77  ,aud_g29
02:09:32  78  ,aud_g30
02:09:32  79  ,aud_g31
02:09:32  80  ,aud_g32
02:09:32  81  ,aud_g33
02:09:32  82  ,aud_g34
02:09:32  83  ,aud_g35
02:09:32  84  ,aud_g36
02:09:32  85  ,aud_g37
02:09:32  86  ,aud_g38
02:09:32  87  ,aud_g39
02:09:32  88  ,aud_g40
02:09:32  89  ,aud_g41
02:09:32  90  ,gbp_g00
02:09:32  91  ,gbp_g01
02:09:32  92  ,gbp_g02
02:09:32  93  ,gbp_g03
02:09:32  94  ,gbp_g04
02:09:32  95  ,gbp_g05
02:09:32  96  ,gbp_g06
02:09:32  97  ,gbp_g07
02:09:32  98  ,gbp_g08
02:09:32  99  ,gbp_g09
02:09:32 100  ,gbp_g10
02:09:32 101  ,gbp_g11
02:09:32 102  ,gbp_g12
02:09:32 103  ,gbp_g13
02:09:32 104  ,gbp_g14
02:09:32 105  ,gbp_g15
02:09:32 106  ,gbp_g16
02:09:32 107  ,gbp_g17
02:09:32 108  ,gbp_g18
02:09:32 109  ,gbp_g19
02:09:32 110  ,gbp_g20
02:09:32 111  ,gbp_g21
02:09:32 112  ,gbp_g22
02:09:32 113  ,gbp_g23
02:09:32 114  ,gbp_g24
02:09:32 115  ,gbp_g25
02:09:32 116  ,gbp_g26
02:09:32 117  ,gbp_g27
02:09:32 118  ,gbp_g28
02:09:32 119  ,gbp_g29
02:09:32 120  ,gbp_g30
02:09:32 121  ,gbp_g31
02:09:32 122  ,gbp_g32
02:09:32 123  ,gbp_g33
02:09:32 124  ,gbp_g34
02:09:32 125  ,gbp_g35
02:09:32 126  ,gbp_g36
02:09:32 127  ,gbp_g37
02:09:32 128  ,gbp_g38
02:09:32 129  ,gbp_g39
02:09:32 130  ,gbp_g40
02:09:32 131  ,gbp_g41
02:09:32 132  ,jpy_g00
02:09:32 133  ,jpy_g01
02:09:32 134  ,jpy_g02
02:09:32 135  ,jpy_g03
02:09:32 136  ,jpy_g04
02:09:32 137  ,jpy_g05
02:09:32 138  ,jpy_g06
02:09:32 139  ,jpy_g07
02:09:32 140  ,jpy_g08
02:09:32 141  ,jpy_g09
02:09:32 142  ,jpy_g10
02:09:32 143  ,jpy_g11
02:09:32 144  ,jpy_g12
02:09:32 145  ,jpy_g13
02:09:32 146  ,jpy_g14
02:09:32 147  ,jpy_g15
02:09:32 148  ,jpy_g16
02:09:32 149  ,jpy_g17
02:09:32 150  ,jpy_g18
02:09:32 151  ,jpy_g19
02:09:32 152  ,jpy_g20
02:09:32 153  ,jpy_g21
02:09:32 154  ,jpy_g22
02:09:32 155  ,jpy_g23
02:09:32 156  ,jpy_g24
02:09:32 157  ,jpy_g25
02:09:32 158  ,jpy_g26
02:09:32 159  ,jpy_g27
02:09:32 160  ,jpy_g28
02:09:32 161  ,jpy_g29
02:09:32 162  ,jpy_g30
02:09:32 163  ,jpy_g31
02:09:32 164  ,jpy_g32
02:09:32 165  ,jpy_g33
02:09:32 166  ,jpy_g34
02:09:32 167  ,jpy_g35
02:09:32 168  ,jpy_g36
02:09:32 169  ,jpy_g37
02:09:32 170  ,jpy_g38
02:09:32 171  ,jpy_g39
02:09:32 172  ,jpy_g40
02:09:32 173  ,jpy_g41
02:09:32 174  ,cad_g00
02:09:32 175  ,cad_g01
02:09:32 176  ,cad_g02
02:09:32 177  ,cad_g03
02:09:32 178  ,cad_g04
02:09:32 179  ,cad_g05
02:09:32 180  ,cad_g06
02:09:32 181  ,cad_g07
02:09:32 182  ,cad_g08
02:09:32 183  ,cad_g09
02:09:32 184  ,cad_g10
02:09:32 185  ,cad_g11
02:09:32 186  ,cad_g12
02:09:32 187  ,cad_g13
02:09:32 188  ,cad_g14
02:09:32 189  ,cad_g15
02:09:32 190  ,cad_g16
02:09:32 191  ,cad_g17
02:09:32 192  ,cad_g18
02:09:32 193  ,cad_g19
02:09:32 194  ,cad_g20
02:09:32 195  ,cad_g21
02:09:32 196  ,cad_g22
02:09:32 197  ,cad_g23
02:09:32 198  ,cad_g24
02:09:32 199  ,cad_g25
02:09:32 200  ,cad_g26
02:09:32 201  ,cad_g27
02:09:32 202  ,cad_g28
02:09:32 203  ,cad_g29
02:09:32 204  ,cad_g30
02:09:32 205  ,cad_g31
02:09:32 206  ,cad_g32
02:09:32 207  ,cad_g33
02:09:32 208  ,cad_g34
02:09:32 209  ,cad_g35
02:09:32 210  ,cad_g36
02:09:32 211  ,cad_g37
02:09:32 212  ,cad_g38
02:09:32 213  ,cad_g39
02:09:32 214  ,cad_g40
02:09:32 215  ,cad_g41
02:09:32 216  ,chf_g00
02:09:32 217  ,chf_g01
02:09:32 218  ,chf_g02
02:09:32 219  ,chf_g03
02:09:32 220  ,chf_g04
02:09:32 221  ,chf_g05
02:09:32 222  ,chf_g06
02:09:32 223  ,chf_g07
02:09:32 224  ,chf_g08
02:09:32 225  ,chf_g09
02:09:32 226  ,chf_g10
02:09:32 227  ,chf_g11
02:09:32 228  ,chf_g12
02:09:32 229  ,chf_g13
02:09:32 230  ,chf_g14
02:09:32 231  ,chf_g15
02:09:32 232  ,chf_g16
02:09:32 233  ,chf_g17
02:09:32 234  ,chf_g18
02:09:32 235  ,chf_g19
02:09:32 236  ,chf_g20
02:09:32 237  ,chf_g21
02:09:32 238  ,chf_g22
02:09:32 239  ,chf_g23
02:09:32 240  ,chf_g24
02:09:32 241  ,chf_g25
02:09:32 242  ,chf_g26
02:09:32 243  ,chf_g27
02:09:32 244  ,chf_g28
02:09:32 245  ,chf_g29
02:09:32 246  ,chf_g30
02:09:32 247  ,chf_g31
02:09:32 248  ,chf_g32
02:09:32 249  ,chf_g33
02:09:32 250  ,chf_g34
02:09:32 251  ,chf_g35
02:09:32 252  ,chf_g36
02:09:32 253  ,chf_g37
02:09:32 254  ,chf_g38
02:09:32 255  ,chf_g39
02:09:32 256  ,chf_g40
02:09:32 257  ,chf_g41
02:09:32 258  FROM aud_ms6 m
02:09:32 259  WHERE gatt IN('nup','up')
02:09:32 260  AND 1+m.ydate < '&1'||' '||'&2'
02:09:32 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'01:55:00'

View created.

Elapsed: 00:00:00.12
02:09:32 SQL> 
02:09:32 SQL> -- rpt
02:09:32 SQL> 
02:09:32 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
02:09:32   2  
02:09:32 SQL> SELECT MAX(prdate) FROM bme
02:09:32   2  
02:09:32 SQL> -- Now build model from bme and score sme
02:09:32 SQL> @score1.sql
02:09:32 SQL> -- score1.sql
02:09:32 SQL> 
02:09:32 SQL> -- Does the 1st SVM score
02:09:32 SQL> 
02:09:32 SQL> -- Fill up svmc_apply_prep
02:09:32 SQL> @score.sql
02:09:32 SQL> --
02:09:32 SQL> -- score.sql
02:09:32 SQL> --
02:09:32 SQL> 
02:09:32 SQL> -- usage: score.sql
02:09:32 SQL> 
02:09:32 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
02:09:32 SQL> 
02:09:32 SQL> DEFINE target	= 'gatt'
02:09:32 SQL> DEFINE model_name = 'forex14'
02:09:32 SQL> DEFINE bldtable	= 'bme'
02:09:32 SQL> DEFINE scoretable = 'sme'
02:09:32 SQL> DEFINE case_id	= 'prdate'
02:09:32 SQL> 
02:09:32 SQL> -- Define a variable to help me exclude some columns from some data mining calls
02:09:32 SQL> DEFINE exclude1 = "'&target','&case_id'"
02:09:32 SQL> 
02:09:32 SQL> -- Builds an SVM model using pl/sql.
02:09:32 SQL> 
02:09:32 SQL> -----------------------------------------------------------------------
02:09:32 SQL> --			    BUILD THE MODEL
02:09:32 SQL> -----------------------------------------------------------------------
02:09:32 SQL> 
02:09:32 SQL> -- Cleanup old build data preparation objects for repeat runs
02:09:32 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
02:09:32 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
02:09:32 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
02:09:32 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
02:09:32 SQL> 
02:09:32 SQL> 
02:09:32 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
02:09:32 SQL> --
02:09:32 SQL> -- DROP	TABLE svmc_settings ;
02:09:32 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
02:09:32 SQL> -- DELETE svmc_settings;
02:09:32 SQL> 
02:09:32 SQL> -- The default classification algorithm is Naive Bayes. So override
02:09:32 SQL> -- this choice to SVM using a settings table.
02:09:32 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
02:09:32 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
02:09:32 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
02:09:32 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
02:09:32 SQL> -- models.
02:09:32 SQL> --
02:09:32 SQL> 
02:09:32 SQL> -- Do this once and then comment it out.
02:09:32 SQL> -- That makes script go faster.
02:09:32 SQL> -- BEGIN
02:09:32 SQL> -- -- Populate settings table
02:09:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:09:32 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
02:09:32 SQL> --
02:09:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:09:32 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
02:09:32 SQL> --
02:09:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:09:32 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
02:09:32 SQL> --   COMMIT;
02:09:32 SQL> -- END;
02:09:32 SQL> -- /
02:09:32 SQL> 
02:09:32 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
02:09:32 SQL> 
02:09:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
02:09:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:09:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:09:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
02:09:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:09:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:09:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
02:09:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:09:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:09:32 SQL> 
02:09:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
02:09:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:09:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
02:09:32 SQL> 
02:09:32 SQL> --------------------------------
02:09:32 SQL> -- PREPARE BUILD (TRAINING) DATA
02:09:32 SQL> --
02:09:32 SQL> 
02:09:32 SQL> -- 1. Missing Value treatment for all Predictors and
02:09:32 SQL> -- 2. Outlier Treatment and
02:09:32 SQL> -- 3. Normalization are performed below.
02:09:32 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
02:09:32 SQL> --    normalized here.
02:09:32 SQL> 
02:09:32 SQL> BEGIN
02:09:32   2  	-- Perform missing value treatment for all predictors
02:09:32   3  	-- create miss tables
02:09:32   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
02:09:32   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
02:09:32   6  
02:09:32   7  	-- populate miss tables
02:09:32   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
02:09:32   9  	  miss_table_name => 'svmc_miss_num',
02:09:32  10  	  data_table_name => '&bldtable',
02:09:32  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:09:32  12  
02:09:32  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
02:09:32  14  	  miss_table_name => 'svmc_miss_cat',
02:09:32  15  	  data_table_name => '&bldtable',
02:09:32  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:09:32  17  
02:09:32  18  	-- xform input data to replace missing values
02:09:32  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:09:32  20  	  miss_table_name => 'svmc_miss_num',
02:09:32  21  	  data_table_name => '&bldtable',
02:09:32  22  	  xform_view_name => 'xformed_build_miss_num');
02:09:32  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:09:32  24  	  miss_table_name => 'svmc_miss_cat',
02:09:32  25  	  data_table_name => '&bldtable',
02:09:32  26  	  xform_view_name => 'xformed_build_miss_cat');
02:09:32  27  
02:09:32  28  	-- Perform outlier treatment.
02:09:32  29  	-- create clip table
02:09:32  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
02:09:32  31  
02:09:32  32  	-- populate clip table
02:09:32  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
02:09:32  34  	  clip_table_name => 'svmc_clip',
02:09:32  35  	  data_table_name => '&bldtable',
02:09:32  36  	  tail_frac	  => 0.025,
02:09:32  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:09:32  38  
02:09:32  39  	-- xform input data to winsorized data
02:09:32  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
02:09:32  41  	  clip_table_name => 'svmc_clip',
02:09:32  42  	  data_table_name => '&bldtable',
02:09:32  43  	  xform_view_name => 'svmc_winsor');
02:09:32  44  
02:09:32  45  	-- create normalization table
02:09:32  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
02:09:32  47  
02:09:32  48  	-- populate normalization table based on winsorized data
02:09:32  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
02:09:32  50  	  norm_table_name => 'svmc_norm',
02:09:32  51  	  data_table_name => 'svmc_winsor',
02:09:32  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:09:32  53  
02:09:32  54  	-- normalize the original data
02:09:32  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:09:32  56  	  norm_table_name => 'svmc_norm',
02:09:32  57  	  data_table_name => '&bldtable',
02:09:32  58  	  xform_view_name => 'svmc_build_prep');
02:09:32  59  END;
02:09:32  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.00
02:09:50 SQL> 
02:09:50 SQL> ---------------------
02:09:50 SQL> -- CREATE A NEW MODEL
02:09:50 SQL> --
02:09:50 SQL> -- Cleanup old model with the same name for repeat runs
02:09:50 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
02:09:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:09:50   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.98
02:09:51 SQL> 
02:09:51 SQL> -- Build a new SVM Model
02:09:51 SQL> BEGIN
02:09:51   2  	DBMS_DATA_MINING.CREATE_MODEL(
02:09:51   3  	  model_name	      => '&model_name',
02:09:51   4  	  mining_function     => dbms_data_mining.classification,
02:09:51   5  	  data_table_name     => 'svmc_build_prep',
02:09:51   6  	  case_id_column_name => '&case_id',
02:09:51   7  	  target_column_name  => '&target',
02:09:51   8  	  settings_table_name => 'svmc_settings');
02:09:51   9  END;
02:09:51  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.74
02:10:18 SQL> 
02:10:18 SQL> -----------------------------------------------------------------------
02:10:18 SQL> --			       APPLY/score THE MODEL
02:10:18 SQL> -----------------------------------------------------------------------
02:10:18 SQL> 
02:10:18 SQL> -- Cleanup old scoring data preparation objects for repeat runs
02:10:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
02:10:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:10:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:10:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
02:10:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:10:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:10:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
02:10:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:10:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:10:18 SQL> -----------------------
02:10:18 SQL> -- PREPARE SCORING DATA
02:10:18 SQL> --
02:10:18 SQL> -- If the data for model creation has been prepared, then the data
02:10:18 SQL> -- to be scored using the model must be prepared in the same manner
02:10:18 SQL> -- in order to obtain meaningful results.
02:10:18 SQL> --
02:10:18 SQL> -- 1. Missing Value treatment for all Predictors and
02:10:18 SQL> -- 2. Normalization
02:10:18 SQL> -- No outlier treatment will be performed during test and apply. The
02:10:18 SQL> -- normalization step is sufficient, since the normalization parameters
02:10:18 SQL> -- already capture the effects of outlier treatment done with build data.
02:10:18 SQL> --
02:10:18 SQL> BEGIN
02:10:18   2  	-- Xform Test data to replace missing values
02:10:18   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:10:18   4  	  miss_table_name => 'svmc_miss_num',
02:10:18   5  	  data_table_name => '&scoretable',
02:10:18   6  	  xform_view_name => 'xformed_apply_miss_num');
02:10:18   7  
02:10:18   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:10:18   9  	  miss_table_name => 'svmc_miss_cat',
02:10:18  10  	  data_table_name => '&scoretable',
02:10:18  11  	  xform_view_name => 'xformed_apply_miss_cat');
02:10:18  12  
02:10:18  13  	-- Normalize the data to be scored
02:10:18  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:10:18  15  	  norm_table_name => 'svmc_norm',
02:10:18  16  	  data_table_name => '&scoretable',
02:10:18  17  	  xform_view_name => 'svmc_apply_prep');
02:10:18  18  END;
02:10:18  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.16
02:10:19 SQL> 
02:10:19 SQL> -- Use same model_name used in score.sql
02:10:19 SQL> DEFINE model_name = 'forex14'
02:10:19 SQL> 
02:10:19 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
02:10:19 SQL> 
02:10:19 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
02:10:19 SQL> 
02:10:19 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
02:10:19   2  SELECT
02:10:19   3  prdate
02:10:19   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
02:10:19   5  ,sysdate
02:10:19   6  ,SUBSTR(prdate,1,3)pair
02:10:19   7  ,SUBSTR(prdate,4,19)ydate
02:10:19   8  FROM svmc_apply_prep
02:10:19   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
02:10:19 SQL> @aud_score1day_gattn.sql	2011-01-03 01:45:00
02:10:19 SQL> --
02:10:19 SQL> -- aud_score1day_gattn.sql
02:10:19 SQL> --
02:10:19 SQL> 
02:10:19 SQL> CREATE OR REPLACE VIEW sme AS
02:10:19   2  SELECT
02:10:19   3  'aud'||m.ydate prdate
02:10:19   4  ,NULL gattn
02:10:19   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:10:19   6  ,eur_g00
02:10:19   7  ,eur_g01
02:10:19   8  ,eur_g02
02:10:19   9  ,eur_g03
02:10:19  10  ,eur_g04
02:10:19  11  ,eur_g05
02:10:19  12  ,eur_g06
02:10:19  13  ,eur_g07
02:10:19  14  ,eur_g08
02:10:19  15  ,eur_g09
02:10:19  16  ,eur_g10
02:10:19  17  ,eur_g11
02:10:19  18  ,eur_g12
02:10:19  19  ,eur_g13
02:10:19  20  ,eur_g14
02:10:19  21  ,eur_g15
02:10:19  22  ,eur_g16
02:10:19  23  ,eur_g17
02:10:19  24  ,eur_g18
02:10:19  25  ,eur_g19
02:10:19  26  ,eur_g20
02:10:19  27  ,eur_g21
02:10:19  28  ,eur_g22
02:10:19  29  ,eur_g23
02:10:19  30  ,eur_g24
02:10:19  31  ,eur_g25
02:10:19  32  ,eur_g26
02:10:19  33  ,eur_g27
02:10:19  34  ,eur_g28
02:10:19  35  ,eur_g29
02:10:19  36  ,eur_g30
02:10:19  37  ,eur_g31
02:10:19  38  ,eur_g32
02:10:19  39  ,eur_g33
02:10:19  40  ,eur_g34
02:10:19  41  ,eur_g35
02:10:19  42  ,eur_g36
02:10:19  43  ,eur_g37
02:10:19  44  ,eur_g38
02:10:19  45  ,eur_g39
02:10:19  46  ,eur_g40
02:10:19  47  ,eur_g41
02:10:19  48  ,aud_g00
02:10:19  49  ,aud_g01
02:10:19  50  ,aud_g02
02:10:19  51  ,aud_g03
02:10:19  52  ,aud_g04
02:10:19  53  ,aud_g05
02:10:19  54  ,aud_g06
02:10:19  55  ,aud_g07
02:10:19  56  ,aud_g08
02:10:19  57  ,aud_g09
02:10:19  58  ,aud_g10
02:10:19  59  ,aud_g11
02:10:19  60  ,aud_g12
02:10:19  61  ,aud_g13
02:10:19  62  ,aud_g14
02:10:19  63  ,aud_g15
02:10:19  64  ,aud_g16
02:10:19  65  ,aud_g17
02:10:19  66  ,aud_g18
02:10:19  67  ,aud_g19
02:10:19  68  ,aud_g20
02:10:19  69  ,aud_g21
02:10:19  70  ,aud_g22
02:10:19  71  ,aud_g23
02:10:19  72  ,aud_g24
02:10:19  73  ,aud_g25
02:10:19  74  ,aud_g26
02:10:19  75  ,aud_g27
02:10:19  76  ,aud_g28
02:10:19  77  ,aud_g29
02:10:19  78  ,aud_g30
02:10:19  79  ,aud_g31
02:10:19  80  ,aud_g32
02:10:19  81  ,aud_g33
02:10:19  82  ,aud_g34
02:10:19  83  ,aud_g35
02:10:19  84  ,aud_g36
02:10:19  85  ,aud_g37
02:10:19  86  ,aud_g38
02:10:19  87  ,aud_g39
02:10:19  88  ,aud_g40
02:10:19  89  ,aud_g41
02:10:19  90  ,gbp_g00
02:10:19  91  ,gbp_g01
02:10:19  92  ,gbp_g02
02:10:19  93  ,gbp_g03
02:10:19  94  ,gbp_g04
02:10:19  95  ,gbp_g05
02:10:19  96  ,gbp_g06
02:10:19  97  ,gbp_g07
02:10:19  98  ,gbp_g08
02:10:19  99  ,gbp_g09
02:10:19 100  ,gbp_g10
02:10:19 101  ,gbp_g11
02:10:19 102  ,gbp_g12
02:10:19 103  ,gbp_g13
02:10:19 104  ,gbp_g14
02:10:19 105  ,gbp_g15
02:10:19 106  ,gbp_g16
02:10:19 107  ,gbp_g17
02:10:19 108  ,gbp_g18
02:10:19 109  ,gbp_g19
02:10:19 110  ,gbp_g20
02:10:19 111  ,gbp_g21
02:10:19 112  ,gbp_g22
02:10:19 113  ,gbp_g23
02:10:19 114  ,gbp_g24
02:10:19 115  ,gbp_g25
02:10:19 116  ,gbp_g26
02:10:19 117  ,gbp_g27
02:10:19 118  ,gbp_g28
02:10:19 119  ,gbp_g29
02:10:19 120  ,gbp_g30
02:10:19 121  ,gbp_g31
02:10:19 122  ,gbp_g32
02:10:19 123  ,gbp_g33
02:10:19 124  ,gbp_g34
02:10:19 125  ,gbp_g35
02:10:19 126  ,gbp_g36
02:10:19 127  ,gbp_g37
02:10:19 128  ,gbp_g38
02:10:19 129  ,gbp_g39
02:10:19 130  ,gbp_g40
02:10:19 131  ,gbp_g41
02:10:19 132  ,jpy_g00
02:10:19 133  ,jpy_g01
02:10:19 134  ,jpy_g02
02:10:19 135  ,jpy_g03
02:10:19 136  ,jpy_g04
02:10:19 137  ,jpy_g05
02:10:19 138  ,jpy_g06
02:10:19 139  ,jpy_g07
02:10:19 140  ,jpy_g08
02:10:19 141  ,jpy_g09
02:10:19 142  ,jpy_g10
02:10:19 143  ,jpy_g11
02:10:19 144  ,jpy_g12
02:10:19 145  ,jpy_g13
02:10:19 146  ,jpy_g14
02:10:19 147  ,jpy_g15
02:10:19 148  ,jpy_g16
02:10:19 149  ,jpy_g17
02:10:19 150  ,jpy_g18
02:10:19 151  ,jpy_g19
02:10:19 152  ,jpy_g20
02:10:19 153  ,jpy_g21
02:10:19 154  ,jpy_g22
02:10:19 155  ,jpy_g23
02:10:19 156  ,jpy_g24
02:10:19 157  ,jpy_g25
02:10:19 158  ,jpy_g26
02:10:19 159  ,jpy_g27
02:10:19 160  ,jpy_g28
02:10:19 161  ,jpy_g29
02:10:19 162  ,jpy_g30
02:10:19 163  ,jpy_g31
02:10:19 164  ,jpy_g32
02:10:19 165  ,jpy_g33
02:10:19 166  ,jpy_g34
02:10:19 167  ,jpy_g35
02:10:19 168  ,jpy_g36
02:10:19 169  ,jpy_g37
02:10:19 170  ,jpy_g38
02:10:19 171  ,jpy_g39
02:10:19 172  ,jpy_g40
02:10:19 173  ,jpy_g41
02:10:19 174  ,cad_g00
02:10:19 175  ,cad_g01
02:10:19 176  ,cad_g02
02:10:19 177  ,cad_g03
02:10:19 178  ,cad_g04
02:10:19 179  ,cad_g05
02:10:19 180  ,cad_g06
02:10:19 181  ,cad_g07
02:10:19 182  ,cad_g08
02:10:19 183  ,cad_g09
02:10:19 184  ,cad_g10
02:10:19 185  ,cad_g11
02:10:19 186  ,cad_g12
02:10:19 187  ,cad_g13
02:10:19 188  ,cad_g14
02:10:19 189  ,cad_g15
02:10:19 190  ,cad_g16
02:10:19 191  ,cad_g17
02:10:19 192  ,cad_g18
02:10:19 193  ,cad_g19
02:10:19 194  ,cad_g20
02:10:19 195  ,cad_g21
02:10:19 196  ,cad_g22
02:10:19 197  ,cad_g23
02:10:19 198  ,cad_g24
02:10:19 199  ,cad_g25
02:10:19 200  ,cad_g26
02:10:19 201  ,cad_g27
02:10:19 202  ,cad_g28
02:10:19 203  ,cad_g29
02:10:19 204  ,cad_g30
02:10:19 205  ,cad_g31
02:10:19 206  ,cad_g32
02:10:19 207  ,cad_g33
02:10:19 208  ,cad_g34
02:10:19 209  ,cad_g35
02:10:19 210  ,cad_g36
02:10:19 211  ,cad_g37
02:10:19 212  ,cad_g38
02:10:19 213  ,cad_g39
02:10:19 214  ,cad_g40
02:10:19 215  ,cad_g41
02:10:19 216  ,chf_g00
02:10:19 217  ,chf_g01
02:10:19 218  ,chf_g02
02:10:19 219  ,chf_g03
02:10:19 220  ,chf_g04
02:10:19 221  ,chf_g05
02:10:19 222  ,chf_g06
02:10:19 223  ,chf_g07
02:10:19 224  ,chf_g08
02:10:19 225  ,chf_g09
02:10:19 226  ,chf_g10
02:10:19 227  ,chf_g11
02:10:19 228  ,chf_g12
02:10:19 229  ,chf_g13
02:10:19 230  ,chf_g14
02:10:19 231  ,chf_g15
02:10:19 232  ,chf_g16
02:10:19 233  ,chf_g17
02:10:19 234  ,chf_g18
02:10:19 235  ,chf_g19
02:10:19 236  ,chf_g20
02:10:19 237  ,chf_g21
02:10:19 238  ,chf_g22
02:10:19 239  ,chf_g23
02:10:19 240  ,chf_g24
02:10:19 241  ,chf_g25
02:10:19 242  ,chf_g26
02:10:19 243  ,chf_g27
02:10:19 244  ,chf_g28
02:10:19 245  ,chf_g29
02:10:19 246  ,chf_g30
02:10:19 247  ,chf_g31
02:10:19 248  ,chf_g32
02:10:19 249  ,chf_g33
02:10:19 250  ,chf_g34
02:10:19 251  ,chf_g35
02:10:19 252  ,chf_g36
02:10:19 253  ,chf_g37
02:10:19 254  ,chf_g38
02:10:19 255  ,chf_g39
02:10:19 256  ,chf_g40
02:10:19 257  ,chf_g41
02:10:19 258  FROM aud_ms6 m
02:10:19 259  WHERE m.ydate = '&1'||' '||'&2'
02:10:19 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'01:45:00'

View created.

Elapsed: 00:00:00.12
02:10:19 SQL> 
02:10:19 SQL> -- rpt
02:10:19 SQL> -- We should see just 1 row:
02:10:19 SQL> 
02:10:19 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.03
02:10:19 SQL> 
02:10:19 SQL> -- Build the model:
02:10:19 SQL> CREATE OR REPLACE VIEW bme AS
02:10:19   2  SELECT
02:10:19   3  'aud'||m.ydate prdate
02:10:19   4  ,gattn
02:10:19   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:10:19   6  ,eur_g00
02:10:19   7  ,eur_g01
02:10:19   8  ,eur_g02
02:10:19   9  ,eur_g03
02:10:19  10  ,eur_g04
02:10:19  11  ,eur_g05
02:10:19  12  ,eur_g06
02:10:19  13  ,eur_g07
02:10:19  14  ,eur_g08
02:10:19  15  ,eur_g09
02:10:19  16  ,eur_g10
02:10:19  17  ,eur_g11
02:10:19  18  ,eur_g12
02:10:19  19  ,eur_g13
02:10:19  20  ,eur_g14
02:10:19  21  ,eur_g15
02:10:19  22  ,eur_g16
02:10:19  23  ,eur_g17
02:10:19  24  ,eur_g18
02:10:19  25  ,eur_g19
02:10:19  26  ,eur_g20
02:10:19  27  ,eur_g21
02:10:19  28  ,eur_g22
02:10:19  29  ,eur_g23
02:10:19  30  ,eur_g24
02:10:19  31  ,eur_g25
02:10:19  32  ,eur_g26
02:10:19  33  ,eur_g27
02:10:19  34  ,eur_g28
02:10:19  35  ,eur_g29
02:10:19  36  ,eur_g30
02:10:19  37  ,eur_g31
02:10:19  38  ,eur_g32
02:10:19  39  ,eur_g33
02:10:19  40  ,eur_g34
02:10:19  41  ,eur_g35
02:10:19  42  ,eur_g36
02:10:19  43  ,eur_g37
02:10:19  44  ,eur_g38
02:10:19  45  ,eur_g39
02:10:19  46  ,eur_g40
02:10:19  47  ,eur_g41
02:10:19  48  ,aud_g00
02:10:19  49  ,aud_g01
02:10:19  50  ,aud_g02
02:10:19  51  ,aud_g03
02:10:19  52  ,aud_g04
02:10:19  53  ,aud_g05
02:10:19  54  ,aud_g06
02:10:19  55  ,aud_g07
02:10:19  56  ,aud_g08
02:10:19  57  ,aud_g09
02:10:19  58  ,aud_g10
02:10:19  59  ,aud_g11
02:10:19  60  ,aud_g12
02:10:19  61  ,aud_g13
02:10:19  62  ,aud_g14
02:10:19  63  ,aud_g15
02:10:19  64  ,aud_g16
02:10:19  65  ,aud_g17
02:10:19  66  ,aud_g18
02:10:19  67  ,aud_g19
02:10:19  68  ,aud_g20
02:10:19  69  ,aud_g21
02:10:19  70  ,aud_g22
02:10:19  71  ,aud_g23
02:10:19  72  ,aud_g24
02:10:19  73  ,aud_g25
02:10:19  74  ,aud_g26
02:10:19  75  ,aud_g27
02:10:19  76  ,aud_g28
02:10:19  77  ,aud_g29
02:10:19  78  ,aud_g30
02:10:19  79  ,aud_g31
02:10:19  80  ,aud_g32
02:10:19  81  ,aud_g33
02:10:19  82  ,aud_g34
02:10:19  83  ,aud_g35
02:10:19  84  ,aud_g36
02:10:19  85  ,aud_g37
02:10:19  86  ,aud_g38
02:10:19  87  ,aud_g39
02:10:19  88  ,aud_g40
02:10:19  89  ,aud_g41
02:10:19  90  ,gbp_g00
02:10:19  91  ,gbp_g01
02:10:19  92  ,gbp_g02
02:10:19  93  ,gbp_g03
02:10:19  94  ,gbp_g04
02:10:19  95  ,gbp_g05
02:10:19  96  ,gbp_g06
02:10:19  97  ,gbp_g07
02:10:19  98  ,gbp_g08
02:10:19  99  ,gbp_g09
02:10:19 100  ,gbp_g10
02:10:19 101  ,gbp_g11
02:10:19 102  ,gbp_g12
02:10:19 103  ,gbp_g13
02:10:19 104  ,gbp_g14
02:10:19 105  ,gbp_g15
02:10:19 106  ,gbp_g16
02:10:19 107  ,gbp_g17
02:10:19 108  ,gbp_g18
02:10:19 109  ,gbp_g19
02:10:19 110  ,gbp_g20
02:10:19 111  ,gbp_g21
02:10:19 112  ,gbp_g22
02:10:19 113  ,gbp_g23
02:10:19 114  ,gbp_g24
02:10:19 115  ,gbp_g25
02:10:19 116  ,gbp_g26
02:10:19 117  ,gbp_g27
02:10:19 118  ,gbp_g28
02:10:19 119  ,gbp_g29
02:10:19 120  ,gbp_g30
02:10:19 121  ,gbp_g31
02:10:19 122  ,gbp_g32
02:10:19 123  ,gbp_g33
02:10:19 124  ,gbp_g34
02:10:19 125  ,gbp_g35
02:10:19 126  ,gbp_g36
02:10:19 127  ,gbp_g37
02:10:19 128  ,gbp_g38
02:10:19 129  ,gbp_g39
02:10:19 130  ,gbp_g40
02:10:19 131  ,gbp_g41
02:10:19 132  ,jpy_g00
02:10:19 133  ,jpy_g01
02:10:19 134  ,jpy_g02
02:10:19 135  ,jpy_g03
02:10:19 136  ,jpy_g04
02:10:19 137  ,jpy_g05
02:10:19 138  ,jpy_g06
02:10:19 139  ,jpy_g07
02:10:19 140  ,jpy_g08
02:10:19 141  ,jpy_g09
02:10:19 142  ,jpy_g10
02:10:19 143  ,jpy_g11
02:10:19 144  ,jpy_g12
02:10:19 145  ,jpy_g13
02:10:19 146  ,jpy_g14
02:10:19 147  ,jpy_g15
02:10:19 148  ,jpy_g16
02:10:19 149  ,jpy_g17
02:10:19 150  ,jpy_g18
02:10:19 151  ,jpy_g19
02:10:19 152  ,jpy_g20
02:10:19 153  ,jpy_g21
02:10:19 154  ,jpy_g22
02:10:19 155  ,jpy_g23
02:10:19 156  ,jpy_g24
02:10:19 157  ,jpy_g25
02:10:19 158  ,jpy_g26
02:10:19 159  ,jpy_g27
02:10:19 160  ,jpy_g28
02:10:19 161  ,jpy_g29
02:10:19 162  ,jpy_g30
02:10:19 163  ,jpy_g31
02:10:19 164  ,jpy_g32
02:10:19 165  ,jpy_g33
02:10:19 166  ,jpy_g34
02:10:19 167  ,jpy_g35
02:10:19 168  ,jpy_g36
02:10:19 169  ,jpy_g37
02:10:19 170  ,jpy_g38
02:10:19 171  ,jpy_g39
02:10:19 172  ,jpy_g40
02:10:19 173  ,jpy_g41
02:10:19 174  ,cad_g00
02:10:19 175  ,cad_g01
02:10:19 176  ,cad_g02
02:10:19 177  ,cad_g03
02:10:19 178  ,cad_g04
02:10:19 179  ,cad_g05
02:10:19 180  ,cad_g06
02:10:19 181  ,cad_g07
02:10:19 182  ,cad_g08
02:10:19 183  ,cad_g09
02:10:19 184  ,cad_g10
02:10:19 185  ,cad_g11
02:10:19 186  ,cad_g12
02:10:19 187  ,cad_g13
02:10:19 188  ,cad_g14
02:10:19 189  ,cad_g15
02:10:19 190  ,cad_g16
02:10:19 191  ,cad_g17
02:10:19 192  ,cad_g18
02:10:19 193  ,cad_g19
02:10:19 194  ,cad_g20
02:10:19 195  ,cad_g21
02:10:19 196  ,cad_g22
02:10:19 197  ,cad_g23
02:10:19 198  ,cad_g24
02:10:19 199  ,cad_g25
02:10:19 200  ,cad_g26
02:10:19 201  ,cad_g27
02:10:19 202  ,cad_g28
02:10:19 203  ,cad_g29
02:10:19 204  ,cad_g30
02:10:19 205  ,cad_g31
02:10:19 206  ,cad_g32
02:10:19 207  ,cad_g33
02:10:19 208  ,cad_g34
02:10:19 209  ,cad_g35
02:10:19 210  ,cad_g36
02:10:19 211  ,cad_g37
02:10:19 212  ,cad_g38
02:10:19 213  ,cad_g39
02:10:19 214  ,cad_g40
02:10:19 215  ,cad_g41
02:10:19 216  ,chf_g00
02:10:19 217  ,chf_g01
02:10:19 218  ,chf_g02
02:10:19 219  ,chf_g03
02:10:19 220  ,chf_g04
02:10:19 221  ,chf_g05
02:10:19 222  ,chf_g06
02:10:19 223  ,chf_g07
02:10:19 224  ,chf_g08
02:10:19 225  ,chf_g09
02:10:19 226  ,chf_g10
02:10:19 227  ,chf_g11
02:10:19 228  ,chf_g12
02:10:19 229  ,chf_g13
02:10:19 230  ,chf_g14
02:10:19 231  ,chf_g15
02:10:19 232  ,chf_g16
02:10:19 233  ,chf_g17
02:10:19 234  ,chf_g18
02:10:19 235  ,chf_g19
02:10:19 236  ,chf_g20
02:10:19 237  ,chf_g21
02:10:19 238  ,chf_g22
02:10:19 239  ,chf_g23
02:10:19 240  ,chf_g24
02:10:19 241  ,chf_g25
02:10:19 242  ,chf_g26
02:10:19 243  ,chf_g27
02:10:19 244  ,chf_g28
02:10:19 245  ,chf_g29
02:10:19 246  ,chf_g30
02:10:19 247  ,chf_g31
02:10:19 248  ,chf_g32
02:10:19 249  ,chf_g33
02:10:19 250  ,chf_g34
02:10:19 251  ,chf_g35
02:10:19 252  ,chf_g36
02:10:19 253  ,chf_g37
02:10:19 254  ,chf_g38
02:10:19 255  ,chf_g39
02:10:19 256  ,chf_g40
02:10:19 257  ,chf_g41
02:10:19 258  FROM aud_ms6 m
02:10:19 259  WHERE gattn IN('nup','up')
02:10:19 260  AND 1+m.ydate < '&1'||' '||'&2'
02:10:19 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'01:45:00'

View created.

Elapsed: 00:00:00.14
02:10:20 SQL> 
02:10:20 SQL> -- rpt
02:10:20 SQL> 
02:10:20 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12866
up	     6307

Elapsed: 00:00:00.04
02:10:20 SQL> 
02:10:20 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 19:40:00

Elapsed: 00:00:00.04
02:10:20 SQL> 
02:10:20 SQL> -- Now build model from bme and score sme
02:10:20 SQL> @score1gattn.sql
02:10:20 SQL> -- score1gattn.sql
02:10:20 SQL> 
02:10:20 SQL> -- Does the 1st SVM score
02:10:20 SQL> 
02:10:20 SQL> -- Fill up svmc_apply_prep
02:10:20 SQL> @score_gattn.sql
02:10:20 SQL> --
02:10:20 SQL> -- score_gattn.sql
02:10:20 SQL> --
02:10:20 SQL> 
02:10:20 SQL> -- usage: score_gattn.sql
02:10:20 SQL> 
02:10:20 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
02:10:20 SQL> 
02:10:20 SQL> DEFINE target	= 'gattn'
02:10:20 SQL> DEFINE model_name = 'forex14'
02:10:20 SQL> DEFINE bldtable	= 'bme'
02:10:20 SQL> DEFINE scoretable = 'sme'
02:10:20 SQL> DEFINE case_id	= 'prdate'
02:10:20 SQL> 
02:10:20 SQL> -- Define a variable to help me exclude some columns from some data mining calls
02:10:20 SQL> DEFINE exclude1 = "'&target','&case_id'"
02:10:20 SQL> 
02:10:20 SQL> -- Builds an SVM model using pl/sql.
02:10:20 SQL> 
02:10:20 SQL> -----------------------------------------------------------------------
02:10:20 SQL> --			    BUILD THE MODEL
02:10:20 SQL> -----------------------------------------------------------------------
02:10:20 SQL> 
02:10:20 SQL> -- Cleanup old build data preparation objects for repeat runs
02:10:20 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
02:10:20 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
02:10:20 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
02:10:20 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
02:10:20 SQL> 
02:10:20 SQL> 
02:10:20 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
02:10:20 SQL> --
02:10:20 SQL> -- DROP	TABLE svmc_settings ;
02:10:20 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
02:10:20 SQL> -- DELETE svmc_settings;
02:10:20 SQL> 
02:10:20 SQL> -- The default classification algorithm is Naive Bayes. So override
02:10:20 SQL> -- this choice to SVM using a settings table.
02:10:20 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
02:10:20 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
02:10:20 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
02:10:20 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
02:10:20 SQL> -- models.
02:10:20 SQL> --
02:10:20 SQL> 
02:10:20 SQL> -- Do this once and then comment it out.
02:10:20 SQL> -- That makes script go faster.
02:10:20 SQL> -- BEGIN
02:10:20 SQL> -- -- Populate settings table
02:10:20 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:10:20 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
02:10:20 SQL> --
02:10:20 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:10:20 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
02:10:20 SQL> --
02:10:20 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:10:20 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
02:10:20 SQL> --   COMMIT;
02:10:20 SQL> -- END;
02:10:20 SQL> -- /
02:10:20 SQL> 
02:10:20 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
02:10:20 SQL> 
02:10:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
02:10:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:10:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:10:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
02:10:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:10:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:10:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
02:10:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:10:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:10:20 SQL> 
02:10:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
02:10:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:10:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:10:20 SQL> 
02:10:20 SQL> --------------------------------
02:10:20 SQL> -- PREPARE BUILD (TRAINING) DATA
02:10:20 SQL> --
02:10:20 SQL> 
02:10:20 SQL> -- 1. Missing Value treatment for all Predictors and
02:10:20 SQL> -- 2. Outlier Treatment and
02:10:20 SQL> -- 3. Normalization are performed below.
02:10:20 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
02:10:20 SQL> --    normalized here.
02:10:20 SQL> 
02:10:20 SQL> BEGIN
02:10:20   2  	-- Perform missing value treatment for all predictors
02:10:20   3  	-- create miss tables
02:10:20   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
02:10:20   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
02:10:20   6  
02:10:20   7  	-- populate miss tables
02:10:20   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
02:10:20   9  	  miss_table_name => 'svmc_miss_num',
02:10:20  10  	  data_table_name => '&bldtable',
02:10:20  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:10:20  12  
02:10:20  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
02:10:20  14  	  miss_table_name => 'svmc_miss_cat',
02:10:20  15  	  data_table_name => '&bldtable',
02:10:20  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:10:20  17  
02:10:20  18  	-- xform input data to replace missing values
02:10:20  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:10:20  20  	  miss_table_name => 'svmc_miss_num',
02:10:20  21  	  data_table_name => '&bldtable',
02:10:20  22  	  xform_view_name => 'xformed_build_miss_num');
02:10:20  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:10:20  24  	  miss_table_name => 'svmc_miss_cat',
02:10:20  25  	  data_table_name => '&bldtable',
02:10:20  26  	  xform_view_name => 'xformed_build_miss_cat');
02:10:20  27  
02:10:20  28  	-- Perform outlier treatment.
02:10:20  29  	-- create clip table
02:10:20  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
02:10:20  31  
02:10:20  32  	-- populate clip table
02:10:20  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
02:10:20  34  	  clip_table_name => 'svmc_clip',
02:10:20  35  	  data_table_name => '&bldtable',
02:10:20  36  	  tail_frac	  => 0.025,
02:10:20  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:10:20  38  
02:10:20  39  	-- xform input data to winsorized data
02:10:20  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
02:10:20  41  	  clip_table_name => 'svmc_clip',
02:10:20  42  	  data_table_name => '&bldtable',
02:10:20  43  	  xform_view_name => 'svmc_winsor');
02:10:20  44  
02:10:20  45  	-- create normalization table
02:10:20  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
02:10:20  47  
02:10:20  48  	-- populate normalization table based on winsorized data
02:10:20  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
02:10:20  50  	  norm_table_name => 'svmc_norm',
02:10:20  51  	  data_table_name => 'svmc_winsor',
02:10:20  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:10:20  53  
02:10:20  54  	-- normalize the original data
02:10:20  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:10:20  56  	  norm_table_name => 'svmc_norm',
02:10:20  57  	  data_table_name => '&bldtable',
02:10:20  58  	  xform_view_name => 'svmc_build_prep');
02:10:20  59  END;
02:10:20  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.98
02:10:38 SQL> 
02:10:38 SQL> ---------------------
02:10:38 SQL> -- CREATE A NEW MODEL
02:10:38 SQL> --
02:10:38 SQL> -- Cleanup old model with the same name for repeat runs
02:10:38 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
02:10:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:10:38   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.07
02:10:39 SQL> 
02:10:39 SQL> -- Build a new SVM Model
02:10:39 SQL> BEGIN
02:10:39   2  	DBMS_DATA_MINING.CREATE_MODEL(
02:10:39   3  	  model_name	      => '&model_name',
02:10:39   4  	  mining_function     => dbms_data_mining.classification,
02:10:39   5  	  data_table_name     => 'svmc_build_prep',
02:10:39   6  	  case_id_column_name => '&case_id',
02:10:39   7  	  target_column_name  => '&target',
02:10:39   8  	  settings_table_name => 'svmc_settings');
02:10:39   9  END;
02:10:39  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.36
02:11:04 SQL> 
02:11:04 SQL> -----------------------------------------------------------------------
02:11:04 SQL> --			       APPLY/score THE MODEL
02:11:04 SQL> -----------------------------------------------------------------------
02:11:04 SQL> 
02:11:04 SQL> -- Cleanup old scoring data preparation objects for repeat runs
02:11:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
02:11:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:11:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
02:11:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
02:11:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
02:11:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:11:04 SQL> -----------------------
02:11:04 SQL> -- PREPARE SCORING DATA
02:11:04 SQL> --
02:11:04 SQL> -- If the data for model creation has been prepared, then the data
02:11:04 SQL> -- to be scored using the model must be prepared in the same manner
02:11:04 SQL> -- in order to obtain meaningful results.
02:11:04 SQL> --
02:11:04 SQL> -- 1. Missing Value treatment for all Predictors and
02:11:04 SQL> -- 2. Normalization
02:11:04 SQL> -- No outlier treatment will be performed during test and apply. The
02:11:04 SQL> -- normalization step is sufficient, since the normalization parameters
02:11:04 SQL> -- already capture the effects of outlier treatment done with build data.
02:11:04 SQL> --
02:11:04 SQL> BEGIN
02:11:04   2  	-- Xform Test data to replace missing values
02:11:04   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:11:04   4  	  miss_table_name => 'svmc_miss_num',
02:11:04   5  	  data_table_name => '&scoretable',
02:11:04   6  	  xform_view_name => 'xformed_apply_miss_num');
02:11:04   7  
02:11:04   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:11:04   9  	  miss_table_name => 'svmc_miss_cat',
02:11:04  10  	  data_table_name => '&scoretable',
02:11:04  11  	  xform_view_name => 'xformed_apply_miss_cat');
02:11:04  12  
02:11:04  13  	-- Normalize the data to be scored
02:11:04  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:11:04  15  	  norm_table_name => 'svmc_norm',
02:11:04  16  	  data_table_name => '&scoretable',
02:11:04  17  	  xform_view_name => 'svmc_apply_prep');
02:11:04  18  END;
02:11:04  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
02:11:06 SQL> 
02:11:06 SQL> -- Use same model_name used in score_gattn.sql
02:11:06 SQL> DEFINE model_name = 'forex14'
02:11:06 SQL> 
02:11:06 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
02:11:06 SQL> 
02:11:06 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
02:11:06   2  SELECT
02:11:06   3  prdate
02:11:06   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
02:11:06   5  ,sysdate
02:11:06   6  ,SUBSTR(prdate,1,3)pair
02:11:06   7  ,SUBSTR(prdate,4,19)ydate
02:11:06   8  FROM svmc_apply_prep
02:11:06   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
02:11:06 SQL> @aud_score1day_gattn.sql	2011-01-03 01:50:00
02:11:06 SQL> --
02:11:06 SQL> -- aud_score1day_gattn.sql
02:11:06 SQL> --
02:11:06 SQL> 
02:11:06 SQL> CREATE OR REPLACE VIEW sme AS
02:11:06   2  SELECT
02:11:06   3  'aud'||m.ydate prdate
02:11:06   4  ,NULL gattn
02:11:06   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:11:06   6  ,eur_g00
02:11:06   7  ,eur_g01
02:11:06   8  ,eur_g02
02:11:06   9  ,eur_g03
02:11:06  10  ,eur_g04
02:11:06  11  ,eur_g05
02:11:06  12  ,eur_g06
02:11:06  13  ,eur_g07
02:11:06  14  ,eur_g08
02:11:06  15  ,eur_g09
02:11:06  16  ,eur_g10
02:11:06  17  ,eur_g11
02:11:06  18  ,eur_g12
02:11:06  19  ,eur_g13
02:11:06  20  ,eur_g14
02:11:06  21  ,eur_g15
02:11:06  22  ,eur_g16
02:11:06  23  ,eur_g17
02:11:06  24  ,eur_g18
02:11:06  25  ,eur_g19
02:11:06  26  ,eur_g20
02:11:06  27  ,eur_g21
02:11:06  28  ,eur_g22
02:11:06  29  ,eur_g23
02:11:06  30  ,eur_g24
02:11:06  31  ,eur_g25
02:11:06  32  ,eur_g26
02:11:06  33  ,eur_g27
02:11:06  34  ,eur_g28
02:11:06  35  ,eur_g29
02:11:06  36  ,eur_g30
02:11:06  37  ,eur_g31
02:11:06  38  ,eur_g32
02:11:06  39  ,eur_g33
02:11:06  40  ,eur_g34
02:11:06  41  ,eur_g35
02:11:06  42  ,eur_g36
02:11:06  43  ,eur_g37
02:11:06  44  ,eur_g38
02:11:06  45  ,eur_g39
02:11:06  46  ,eur_g40
02:11:06  47  ,eur_g41
02:11:06  48  ,aud_g00
02:11:06  49  ,aud_g01
02:11:06  50  ,aud_g02
02:11:06  51  ,aud_g03
02:11:06  52  ,aud_g04
02:11:06  53  ,aud_g05
02:11:06  54  ,aud_g06
02:11:06  55  ,aud_g07
02:11:06  56  ,aud_g08
02:11:06  57  ,aud_g09
02:11:06  58  ,aud_g10
02:11:06  59  ,aud_g11
02:11:06  60  ,aud_g12
02:11:06  61  ,aud_g13
02:11:06  62  ,aud_g14
02:11:06  63  ,aud_g15
02:11:06  64  ,aud_g16
02:11:06  65  ,aud_g17
02:11:06  66  ,aud_g18
02:11:06  67  ,aud_g19
02:11:06  68  ,aud_g20
02:11:06  69  ,aud_g21
02:11:06  70  ,aud_g22
02:11:06  71  ,aud_g23
02:11:06  72  ,aud_g24
02:11:06  73  ,aud_g25
02:11:06  74  ,aud_g26
02:11:06  75  ,aud_g27
02:11:06  76  ,aud_g28
02:11:06  77  ,aud_g29
02:11:06  78  ,aud_g30
02:11:06  79  ,aud_g31
02:11:06  80  ,aud_g32
02:11:06  81  ,aud_g33
02:11:06  82  ,aud_g34
02:11:06  83  ,aud_g35
02:11:06  84  ,aud_g36
02:11:06  85  ,aud_g37
02:11:06  86  ,aud_g38
02:11:06  87  ,aud_g39
02:11:06  88  ,aud_g40
02:11:06  89  ,aud_g41
02:11:06  90  ,gbp_g00
02:11:06  91  ,gbp_g01
02:11:06  92  ,gbp_g02
02:11:06  93  ,gbp_g03
02:11:06  94  ,gbp_g04
02:11:06  95  ,gbp_g05
02:11:06  96  ,gbp_g06
02:11:06  97  ,gbp_g07
02:11:06  98  ,gbp_g08
02:11:06  99  ,gbp_g09
02:11:06 100  ,gbp_g10
02:11:06 101  ,gbp_g11
02:11:06 102  ,gbp_g12
02:11:06 103  ,gbp_g13
02:11:06 104  ,gbp_g14
02:11:06 105  ,gbp_g15
02:11:06 106  ,gbp_g16
02:11:06 107  ,gbp_g17
02:11:06 108  ,gbp_g18
02:11:06 109  ,gbp_g19
02:11:06 110  ,gbp_g20
02:11:06 111  ,gbp_g21
02:11:06 112  ,gbp_g22
02:11:06 113  ,gbp_g23
02:11:06 114  ,gbp_g24
02:11:06 115  ,gbp_g25
02:11:06 116  ,gbp_g26
02:11:06 117  ,gbp_g27
02:11:06 118  ,gbp_g28
02:11:06 119  ,gbp_g29
02:11:06 120  ,gbp_g30
02:11:06 121  ,gbp_g31
02:11:06 122  ,gbp_g32
02:11:06 123  ,gbp_g33
02:11:06 124  ,gbp_g34
02:11:06 125  ,gbp_g35
02:11:06 126  ,gbp_g36
02:11:06 127  ,gbp_g37
02:11:06 128  ,gbp_g38
02:11:06 129  ,gbp_g39
02:11:06 130  ,gbp_g40
02:11:06 131  ,gbp_g41
02:11:06 132  ,jpy_g00
02:11:06 133  ,jpy_g01
02:11:06 134  ,jpy_g02
02:11:06 135  ,jpy_g03
02:11:06 136  ,jpy_g04
02:11:06 137  ,jpy_g05
02:11:06 138  ,jpy_g06
02:11:06 139  ,jpy_g07
02:11:06 140  ,jpy_g08
02:11:06 141  ,jpy_g09
02:11:06 142  ,jpy_g10
02:11:06 143  ,jpy_g11
02:11:06 144  ,jpy_g12
02:11:06 145  ,jpy_g13
02:11:06 146  ,jpy_g14
02:11:06 147  ,jpy_g15
02:11:06 148  ,jpy_g16
02:11:06 149  ,jpy_g17
02:11:06 150  ,jpy_g18
02:11:06 151  ,jpy_g19
02:11:06 152  ,jpy_g20
02:11:06 153  ,jpy_g21
02:11:06 154  ,jpy_g22
02:11:06 155  ,jpy_g23
02:11:06 156  ,jpy_g24
02:11:06 157  ,jpy_g25
02:11:06 158  ,jpy_g26
02:11:06 159  ,jpy_g27
02:11:06 160  ,jpy_g28
02:11:06 161  ,jpy_g29
02:11:06 162  ,jpy_g30
02:11:06 163  ,jpy_g31
02:11:06 164  ,jpy_g32
02:11:06 165  ,jpy_g33
02:11:06 166  ,jpy_g34
02:11:06 167  ,jpy_g35
02:11:06 168  ,jpy_g36
02:11:06 169  ,jpy_g37
02:11:06 170  ,jpy_g38
02:11:06 171  ,jpy_g39
02:11:06 172  ,jpy_g40
02:11:06 173  ,jpy_g41
02:11:06 174  ,cad_g00
02:11:06 175  ,cad_g01
02:11:06 176  ,cad_g02
02:11:06 177  ,cad_g03
02:11:06 178  ,cad_g04
02:11:06 179  ,cad_g05
02:11:06 180  ,cad_g06
02:11:06 181  ,cad_g07
02:11:06 182  ,cad_g08
02:11:06 183  ,cad_g09
02:11:06 184  ,cad_g10
02:11:06 185  ,cad_g11
02:11:06 186  ,cad_g12
02:11:06 187  ,cad_g13
02:11:06 188  ,cad_g14
02:11:06 189  ,cad_g15
02:11:06 190  ,cad_g16
02:11:06 191  ,cad_g17
02:11:06 192  ,cad_g18
02:11:06 193  ,cad_g19
02:11:06 194  ,cad_g20
02:11:06 195  ,cad_g21
02:11:06 196  ,cad_g22
02:11:06 197  ,cad_g23
02:11:06 198  ,cad_g24
02:11:06 199  ,cad_g25
02:11:06 200  ,cad_g26
02:11:06 201  ,cad_g27
02:11:06 202  ,cad_g28
02:11:06 203  ,cad_g29
02:11:06 204  ,cad_g30
02:11:06 205  ,cad_g31
02:11:06 206  ,cad_g32
02:11:06 207  ,cad_g33
02:11:06 208  ,cad_g34
02:11:06 209  ,cad_g35
02:11:06 210  ,cad_g36
02:11:06 211  ,cad_g37
02:11:06 212  ,cad_g38
02:11:06 213  ,cad_g39
02:11:06 214  ,cad_g40
02:11:06 215  ,cad_g41
02:11:06 216  ,chf_g00
02:11:06 217  ,chf_g01
02:11:06 218  ,chf_g02
02:11:06 219  ,chf_g03
02:11:06 220  ,chf_g04
02:11:06 221  ,chf_g05
02:11:06 222  ,chf_g06
02:11:06 223  ,chf_g07
02:11:06 224  ,chf_g08
02:11:06 225  ,chf_g09
02:11:06 226  ,chf_g10
02:11:06 227  ,chf_g11
02:11:06 228  ,chf_g12
02:11:06 229  ,chf_g13
02:11:06 230  ,chf_g14
02:11:06 231  ,chf_g15
02:11:06 232  ,chf_g16
02:11:06 233  ,chf_g17
02:11:06 234  ,chf_g18
02:11:06 235  ,chf_g19
02:11:06 236  ,chf_g20
02:11:06 237  ,chf_g21
02:11:06 238  ,chf_g22
02:11:06 239  ,chf_g23
02:11:06 240  ,chf_g24
02:11:06 241  ,chf_g25
02:11:06 242  ,chf_g26
02:11:06 243  ,chf_g27
02:11:06 244  ,chf_g28
02:11:06 245  ,chf_g29
02:11:06 246  ,chf_g30
02:11:06 247  ,chf_g31
02:11:06 248  ,chf_g32
02:11:06 249  ,chf_g33
02:11:06 250  ,chf_g34
02:11:06 251  ,chf_g35
02:11:06 252  ,chf_g36
02:11:06 253  ,chf_g37
02:11:06 254  ,chf_g38
02:11:06 255  ,chf_g39
02:11:06 256  ,chf_g40
02:11:06 257  ,chf_g41
02:11:06 258  FROM aud_ms6 m
02:11:06 259  WHERE m.ydate = '&1'||' '||'&2'
02:11:06 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'01:50:00'

View created.

Elapsed: 00:00:00.12
02:11:06 SQL> 
02:11:06 SQL> -- rpt
02:11:06 SQL> -- We should see just 1 row:
02:11:06 SQL> 
02:11:06 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
02:11:06 SQL> 
02:11:06 SQL> -- Build the model:
02:11:06 SQL> CREATE OR REPLACE VIEW bme AS
02:11:06   2  SELECT
02:11:06   3  'aud'||m.ydate prdate
02:11:06   4  ,gattn
02:11:06   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:11:06   6  ,eur_g00
02:11:06   7  ,eur_g01
02:11:06   8  ,eur_g02
02:11:06   9  ,eur_g03
02:11:06  10  ,eur_g04
02:11:06  11  ,eur_g05
02:11:06  12  ,eur_g06
02:11:06  13  ,eur_g07
02:11:06  14  ,eur_g08
02:11:06  15  ,eur_g09
02:11:06  16  ,eur_g10
02:11:06  17  ,eur_g11
02:11:06  18  ,eur_g12
02:11:06  19  ,eur_g13
02:11:06  20  ,eur_g14
02:11:06  21  ,eur_g15
02:11:06  22  ,eur_g16
02:11:06  23  ,eur_g17
02:11:06  24  ,eur_g18
02:11:06  25  ,eur_g19
02:11:06  26  ,eur_g20
02:11:06  27  ,eur_g21
02:11:06  28  ,eur_g22
02:11:06  29  ,eur_g23
02:11:06  30  ,eur_g24
02:11:06  31  ,eur_g25
02:11:06  32  ,eur_g26
02:11:06  33  ,eur_g27
02:11:06  34  ,eur_g28
02:11:06  35  ,eur_g29
02:11:06  36  ,eur_g30
02:11:06  37  ,eur_g31
02:11:06  38  ,eur_g32
02:11:06  39  ,eur_g33
02:11:06  40  ,eur_g34
02:11:06  41  ,eur_g35
02:11:06  42  ,eur_g36
02:11:06  43  ,eur_g37
02:11:06  44  ,eur_g38
02:11:06  45  ,eur_g39
02:11:06  46  ,eur_g40
02:11:06  47  ,eur_g41
02:11:06  48  ,aud_g00
02:11:06  49  ,aud_g01
02:11:06  50  ,aud_g02
02:11:06  51  ,aud_g03
02:11:06  52  ,aud_g04
02:11:06  53  ,aud_g05
02:11:06  54  ,aud_g06
02:11:06  55  ,aud_g07
02:11:06  56  ,aud_g08
02:11:06  57  ,aud_g09
02:11:06  58  ,aud_g10
02:11:06  59  ,aud_g11
02:11:06  60  ,aud_g12
02:11:06  61  ,aud_g13
02:11:06  62  ,aud_g14
02:11:06  63  ,aud_g15
02:11:06  64  ,aud_g16
02:11:06  65  ,aud_g17
02:11:06  66  ,aud_g18
02:11:06  67  ,aud_g19
02:11:06  68  ,aud_g20
02:11:06  69  ,aud_g21
02:11:06  70  ,aud_g22
02:11:06  71  ,aud_g23
02:11:06  72  ,aud_g24
02:11:06  73  ,aud_g25
02:11:06  74  ,aud_g26
02:11:06  75  ,aud_g27
02:11:06  76  ,aud_g28
02:11:06  77  ,aud_g29
02:11:06  78  ,aud_g30
02:11:06  79  ,aud_g31
02:11:06  80  ,aud_g32
02:11:06  81  ,aud_g33
02:11:06  82  ,aud_g34
02:11:06  83  ,aud_g35
02:11:06  84  ,aud_g36
02:11:06  85  ,aud_g37
02:11:06  86  ,aud_g38
02:11:06  87  ,aud_g39
02:11:06  88  ,aud_g40
02:11:06  89  ,aud_g41
02:11:06  90  ,gbp_g00
02:11:06  91  ,gbp_g01
02:11:06  92  ,gbp_g02
02:11:06  93  ,gbp_g03
02:11:06  94  ,gbp_g04
02:11:06  95  ,gbp_g05
02:11:06  96  ,gbp_g06
02:11:06  97  ,gbp_g07
02:11:06  98  ,gbp_g08
02:11:06  99  ,gbp_g09
02:11:06 100  ,gbp_g10
02:11:06 101  ,gbp_g11
02:11:06 102  ,gbp_g12
02:11:06 103  ,gbp_g13
02:11:06 104  ,gbp_g14
02:11:06 105  ,gbp_g15
02:11:06 106  ,gbp_g16
02:11:06 107  ,gbp_g17
02:11:06 108  ,gbp_g18
02:11:06 109  ,gbp_g19
02:11:06 110  ,gbp_g20
02:11:06 111  ,gbp_g21
02:11:06 112  ,gbp_g22
02:11:06 113  ,gbp_g23
02:11:06 114  ,gbp_g24
02:11:06 115  ,gbp_g25
02:11:06 116  ,gbp_g26
02:11:06 117  ,gbp_g27
02:11:06 118  ,gbp_g28
02:11:06 119  ,gbp_g29
02:11:06 120  ,gbp_g30
02:11:06 121  ,gbp_g31
02:11:06 122  ,gbp_g32
02:11:06 123  ,gbp_g33
02:11:06 124  ,gbp_g34
02:11:06 125  ,gbp_g35
02:11:06 126  ,gbp_g36
02:11:06 127  ,gbp_g37
02:11:06 128  ,gbp_g38
02:11:06 129  ,gbp_g39
02:11:06 130  ,gbp_g40
02:11:06 131  ,gbp_g41
02:11:06 132  ,jpy_g00
02:11:06 133  ,jpy_g01
02:11:06 134  ,jpy_g02
02:11:06 135  ,jpy_g03
02:11:06 136  ,jpy_g04
02:11:06 137  ,jpy_g05
02:11:06 138  ,jpy_g06
02:11:06 139  ,jpy_g07
02:11:06 140  ,jpy_g08
02:11:06 141  ,jpy_g09
02:11:06 142  ,jpy_g10
02:11:06 143  ,jpy_g11
02:11:06 144  ,jpy_g12
02:11:06 145  ,jpy_g13
02:11:06 146  ,jpy_g14
02:11:06 147  ,jpy_g15
02:11:06 148  ,jpy_g16
02:11:06 149  ,jpy_g17
02:11:06 150  ,jpy_g18
02:11:06 151  ,jpy_g19
02:11:06 152  ,jpy_g20
02:11:06 153  ,jpy_g21
02:11:06 154  ,jpy_g22
02:11:06 155  ,jpy_g23
02:11:06 156  ,jpy_g24
02:11:06 157  ,jpy_g25
02:11:06 158  ,jpy_g26
02:11:06 159  ,jpy_g27
02:11:06 160  ,jpy_g28
02:11:06 161  ,jpy_g29
02:11:06 162  ,jpy_g30
02:11:06 163  ,jpy_g31
02:11:06 164  ,jpy_g32
02:11:06 165  ,jpy_g33
02:11:06 166  ,jpy_g34
02:11:06 167  ,jpy_g35
02:11:06 168  ,jpy_g36
02:11:06 169  ,jpy_g37
02:11:06 170  ,jpy_g38
02:11:06 171  ,jpy_g39
02:11:06 172  ,jpy_g40
02:11:06 173  ,jpy_g41
02:11:06 174  ,cad_g00
02:11:06 175  ,cad_g01
02:11:06 176  ,cad_g02
02:11:06 177  ,cad_g03
02:11:06 178  ,cad_g04
02:11:06 179  ,cad_g05
02:11:06 180  ,cad_g06
02:11:06 181  ,cad_g07
02:11:06 182  ,cad_g08
02:11:06 183  ,cad_g09
02:11:06 184  ,cad_g10
02:11:06 185  ,cad_g11
02:11:06 186  ,cad_g12
02:11:06 187  ,cad_g13
02:11:06 188  ,cad_g14
02:11:06 189  ,cad_g15
02:11:06 190  ,cad_g16
02:11:06 191  ,cad_g17
02:11:06 192  ,cad_g18
02:11:06 193  ,cad_g19
02:11:06 194  ,cad_g20
02:11:06 195  ,cad_g21
02:11:06 196  ,cad_g22
02:11:06 197  ,cad_g23
02:11:06 198  ,cad_g24
02:11:06 199  ,cad_g25
02:11:06 200  ,cad_g26
02:11:06 201  ,cad_g27
02:11:06 202  ,cad_g28
02:11:06 203  ,cad_g29
02:11:06 204  ,cad_g30
02:11:06 205  ,cad_g31
02:11:06 206  ,cad_g32
02:11:06 207  ,cad_g33
02:11:06 208  ,cad_g34
02:11:06 209  ,cad_g35
02:11:06 210  ,cad_g36
02:11:06 211  ,cad_g37
02:11:06 212  ,cad_g38
02:11:06 213  ,cad_g39
02:11:06 214  ,cad_g40
02:11:06 215  ,cad_g41
02:11:06 216  ,chf_g00
02:11:06 217  ,chf_g01
02:11:06 218  ,chf_g02
02:11:06 219  ,chf_g03
02:11:06 220  ,chf_g04
02:11:06 221  ,chf_g05
02:11:06 222  ,chf_g06
02:11:06 223  ,chf_g07
02:11:06 224  ,chf_g08
02:11:06 225  ,chf_g09
02:11:06 226  ,chf_g10
02:11:06 227  ,chf_g11
02:11:06 228  ,chf_g12
02:11:06 229  ,chf_g13
02:11:06 230  ,chf_g14
02:11:06 231  ,chf_g15
02:11:06 232  ,chf_g16
02:11:06 233  ,chf_g17
02:11:06 234  ,chf_g18
02:11:06 235  ,chf_g19
02:11:06 236  ,chf_g20
02:11:06 237  ,chf_g21
02:11:06 238  ,chf_g22
02:11:06 239  ,chf_g23
02:11:06 240  ,chf_g24
02:11:06 241  ,chf_g25
02:11:06 242  ,chf_g26
02:11:06 243  ,chf_g27
02:11:06 244  ,chf_g28
02:11:06 245  ,chf_g29
02:11:06 246  ,chf_g30
02:11:06 247  ,chf_g31
02:11:06 248  ,chf_g32
02:11:06 249  ,chf_g33
02:11:06 250  ,chf_g34
02:11:06 251  ,chf_g35
02:11:06 252  ,chf_g36
02:11:06 253  ,chf_g37
02:11:06 254  ,chf_g38
02:11:06 255  ,chf_g39
02:11:06 256  ,chf_g40
02:11:06 257  ,chf_g41
02:11:06 258  FROM aud_ms6 m
02:11:06 259  WHERE gattn IN('nup','up')
02:11:06 260  AND 1+m.ydate < '&1'||' '||'&2'
02:11:06 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'01:50:00'

View created.

Elapsed: 00:00:00.13
02:11:06 SQL> 
02:11:06 SQL> -- rpt
02:11:06 SQL> 
02:11:06 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12866
up	     6307

Elapsed: 00:00:00.04
02:11:06 SQL> 
02:11:06 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 19:40:00

Elapsed: 00:00:00.03
02:11:06 SQL> 
02:11:06 SQL> -- Now build model from bme and score sme
02:11:06 SQL> @score1gattn.sql
02:11:06 SQL> -- score1gattn.sql
02:11:06 SQL> 
02:11:06 SQL> -- Does the 1st SVM score
02:11:06 SQL> 
02:11:06 SQL> -- Fill up svmc_apply_prep
02:11:06 SQL> @score_gattn.sql
02:11:06 SQL> --
02:11:06 SQL> -- score_gattn.sql
02:11:06 SQL> --
02:11:06 SQL> 
02:11:06 SQL> -- usage: score_gattn.sql
02:11:06 SQL> 
02:11:06 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
02:11:06 SQL> 
02:11:06 SQL> DEFINE target	= 'gattn'
02:11:06 SQL> DEFINE model_name = 'forex14'
02:11:06 SQL> DEFINE bldtable	= 'bme'
02:11:06 SQL> DEFINE scoretable = 'sme'
02:11:06 SQL> DEFINE case_id	= 'prdate'
02:11:06 SQL> 
02:11:06 SQL> -- Define a variable to help me exclude some columns from some data mining calls
02:11:06 SQL> DEFINE exclude1 = "'&target','&case_id'"
02:11:06 SQL> 
02:11:06 SQL> -- Builds an SVM model using pl/sql.
02:11:06 SQL> 
02:11:06 SQL> -----------------------------------------------------------------------
02:11:06 SQL> --			    BUILD THE MODEL
02:11:06 SQL> -----------------------------------------------------------------------
02:11:06 SQL> 
02:11:06 SQL> -- Cleanup old build data preparation objects for repeat runs
02:11:06 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
02:11:06 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
02:11:06 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
02:11:06 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
02:11:06 SQL> 
02:11:06 SQL> 
02:11:06 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
02:11:06 SQL> --
02:11:06 SQL> -- DROP	TABLE svmc_settings ;
02:11:06 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
02:11:06 SQL> -- DELETE svmc_settings;
02:11:06 SQL> 
02:11:06 SQL> -- The default classification algorithm is Naive Bayes. So override
02:11:06 SQL> -- this choice to SVM using a settings table.
02:11:06 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
02:11:06 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
02:11:06 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
02:11:06 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
02:11:06 SQL> -- models.
02:11:06 SQL> --
02:11:06 SQL> 
02:11:06 SQL> -- Do this once and then comment it out.
02:11:06 SQL> -- That makes script go faster.
02:11:06 SQL> -- BEGIN
02:11:06 SQL> -- -- Populate settings table
02:11:06 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:11:06 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
02:11:06 SQL> --
02:11:06 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:11:06 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
02:11:06 SQL> --
02:11:06 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:11:06 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
02:11:06 SQL> --   COMMIT;
02:11:06 SQL> -- END;
02:11:06 SQL> -- /
02:11:06 SQL> 
02:11:06 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
02:11:06 SQL> 
02:11:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
02:11:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:11:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
02:11:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:11:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
02:11:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:11:06 SQL> 
02:11:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
02:11:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
02:11:07 SQL> 
02:11:07 SQL> --------------------------------
02:11:07 SQL> -- PREPARE BUILD (TRAINING) DATA
02:11:07 SQL> --
02:11:07 SQL> 
02:11:07 SQL> -- 1. Missing Value treatment for all Predictors and
02:11:07 SQL> -- 2. Outlier Treatment and
02:11:07 SQL> -- 3. Normalization are performed below.
02:11:07 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
02:11:07 SQL> --    normalized here.
02:11:07 SQL> 
02:11:07 SQL> BEGIN
02:11:07   2  	-- Perform missing value treatment for all predictors
02:11:07   3  	-- create miss tables
02:11:07   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
02:11:07   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
02:11:07   6  
02:11:07   7  	-- populate miss tables
02:11:07   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
02:11:07   9  	  miss_table_name => 'svmc_miss_num',
02:11:07  10  	  data_table_name => '&bldtable',
02:11:07  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:11:07  12  
02:11:07  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
02:11:07  14  	  miss_table_name => 'svmc_miss_cat',
02:11:07  15  	  data_table_name => '&bldtable',
02:11:07  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:11:07  17  
02:11:07  18  	-- xform input data to replace missing values
02:11:07  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:11:07  20  	  miss_table_name => 'svmc_miss_num',
02:11:07  21  	  data_table_name => '&bldtable',
02:11:07  22  	  xform_view_name => 'xformed_build_miss_num');
02:11:07  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:11:07  24  	  miss_table_name => 'svmc_miss_cat',
02:11:07  25  	  data_table_name => '&bldtable',
02:11:07  26  	  xform_view_name => 'xformed_build_miss_cat');
02:11:07  27  
02:11:07  28  	-- Perform outlier treatment.
02:11:07  29  	-- create clip table
02:11:07  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
02:11:07  31  
02:11:07  32  	-- populate clip table
02:11:07  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
02:11:07  34  	  clip_table_name => 'svmc_clip',
02:11:07  35  	  data_table_name => '&bldtable',
02:11:07  36  	  tail_frac	  => 0.025,
02:11:07  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:11:07  38  
02:11:07  39  	-- xform input data to winsorized data
02:11:07  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
02:11:07  41  	  clip_table_name => 'svmc_clip',
02:11:07  42  	  data_table_name => '&bldtable',
02:11:07  43  	  xform_view_name => 'svmc_winsor');
02:11:07  44  
02:11:07  45  	-- create normalization table
02:11:07  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
02:11:07  47  
02:11:07  48  	-- populate normalization table based on winsorized data
02:11:07  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
02:11:07  50  	  norm_table_name => 'svmc_norm',
02:11:07  51  	  data_table_name => 'svmc_winsor',
02:11:07  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:11:07  53  
02:11:07  54  	-- normalize the original data
02:11:07  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:11:07  56  	  norm_table_name => 'svmc_norm',
02:11:07  57  	  data_table_name => '&bldtable',
02:11:07  58  	  xform_view_name => 'svmc_build_prep');
02:11:07  59  END;
02:11:07  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.95
02:11:24 SQL> 
02:11:24 SQL> ---------------------
02:11:24 SQL> -- CREATE A NEW MODEL
02:11:24 SQL> --
02:11:24 SQL> -- Cleanup old model with the same name for repeat runs
02:11:24 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
02:11:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:24   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.02
02:11:25 SQL> 
02:11:25 SQL> -- Build a new SVM Model
02:11:25 SQL> BEGIN
02:11:25   2  	DBMS_DATA_MINING.CREATE_MODEL(
02:11:25   3  	  model_name	      => '&model_name',
02:11:25   4  	  mining_function     => dbms_data_mining.classification,
02:11:25   5  	  data_table_name     => 'svmc_build_prep',
02:11:25   6  	  case_id_column_name => '&case_id',
02:11:25   7  	  target_column_name  => '&target',
02:11:25   8  	  settings_table_name => 'svmc_settings');
02:11:25   9  END;
02:11:25  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.61
02:11:51 SQL> 
02:11:51 SQL> -----------------------------------------------------------------------
02:11:51 SQL> --			       APPLY/score THE MODEL
02:11:51 SQL> -----------------------------------------------------------------------
02:11:51 SQL> 
02:11:51 SQL> -- Cleanup old scoring data preparation objects for repeat runs
02:11:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
02:11:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:11:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
02:11:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:11:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
02:11:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:11:51 SQL> -----------------------
02:11:51 SQL> -- PREPARE SCORING DATA
02:11:51 SQL> --
02:11:51 SQL> -- If the data for model creation has been prepared, then the data
02:11:51 SQL> -- to be scored using the model must be prepared in the same manner
02:11:51 SQL> -- in order to obtain meaningful results.
02:11:51 SQL> --
02:11:51 SQL> -- 1. Missing Value treatment for all Predictors and
02:11:51 SQL> -- 2. Normalization
02:11:51 SQL> -- No outlier treatment will be performed during test and apply. The
02:11:51 SQL> -- normalization step is sufficient, since the normalization parameters
02:11:51 SQL> -- already capture the effects of outlier treatment done with build data.
02:11:51 SQL> --
02:11:51 SQL> BEGIN
02:11:51   2  	-- Xform Test data to replace missing values
02:11:51   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:11:51   4  	  miss_table_name => 'svmc_miss_num',
02:11:51   5  	  data_table_name => '&scoretable',
02:11:51   6  	  xform_view_name => 'xformed_apply_miss_num');
02:11:51   7  
02:11:51   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:11:51   9  	  miss_table_name => 'svmc_miss_cat',
02:11:51  10  	  data_table_name => '&scoretable',
02:11:51  11  	  xform_view_name => 'xformed_apply_miss_cat');
02:11:51  12  
02:11:51  13  	-- Normalize the data to be scored
02:11:51  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:11:51  15  	  norm_table_name => 'svmc_norm',
02:11:51  16  	  data_table_name => '&scoretable',
02:11:51  17  	  xform_view_name => 'svmc_apply_prep');
02:11:51  18  END;
02:11:51  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
02:11:52 SQL> 
02:11:52 SQL> -- Use same model_name used in score_gattn.sql
02:11:52 SQL> DEFINE model_name = 'forex14'
02:11:52 SQL> 
02:11:52 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
02:11:52 SQL> 
02:11:52 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
02:11:52   2  SELECT
02:11:52   3  prdate
02:11:52   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
02:11:52   5  ,sysdate
02:11:52   6  ,SUBSTR(prdate,1,3)pair
02:11:52   7  ,SUBSTR(prdate,4,19)ydate
02:11:52   8  FROM svmc_apply_prep
02:11:52   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
02:11:53 SQL> @aud_score1day_gattn.sql	2011-01-03 01:55:00
02:11:53 SQL> --
02:11:53 SQL> -- aud_score1day_gattn.sql
02:11:53 SQL> --
02:11:53 SQL> 
02:11:53 SQL> CREATE OR REPLACE VIEW sme AS
02:11:53   2  SELECT
02:11:53   3  'aud'||m.ydate prdate
02:11:53   4  ,NULL gattn
02:11:53   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:11:53   6  ,eur_g00
02:11:53   7  ,eur_g01
02:11:53   8  ,eur_g02
02:11:53   9  ,eur_g03
02:11:53  10  ,eur_g04
02:11:53  11  ,eur_g05
02:11:53  12  ,eur_g06
02:11:53  13  ,eur_g07
02:11:53  14  ,eur_g08
02:11:53  15  ,eur_g09
02:11:53  16  ,eur_g10
02:11:53  17  ,eur_g11
02:11:53  18  ,eur_g12
02:11:53  19  ,eur_g13
02:11:53  20  ,eur_g14
02:11:53  21  ,eur_g15
02:11:53  22  ,eur_g16
02:11:53  23  ,eur_g17
02:11:53  24  ,eur_g18
02:11:53  25  ,eur_g19
02:11:53  26  ,eur_g20
02:11:53  27  ,eur_g21
02:11:53  28  ,eur_g22
02:11:53  29  ,eur_g23
02:11:53  30  ,eur_g24
02:11:53  31  ,eur_g25
02:11:53  32  ,eur_g26
02:11:53  33  ,eur_g27
02:11:53  34  ,eur_g28
02:11:53  35  ,eur_g29
02:11:53  36  ,eur_g30
02:11:53  37  ,eur_g31
02:11:53  38  ,eur_g32
02:11:53  39  ,eur_g33
02:11:53  40  ,eur_g34
02:11:53  41  ,eur_g35
02:11:53  42  ,eur_g36
02:11:53  43  ,eur_g37
02:11:53  44  ,eur_g38
02:11:53  45  ,eur_g39
02:11:53  46  ,eur_g40
02:11:53  47  ,eur_g41
02:11:53  48  ,aud_g00
02:11:53  49  ,aud_g01
02:11:53  50  ,aud_g02
02:11:53  51  ,aud_g03
02:11:53  52  ,aud_g04
02:11:53  53  ,aud_g05
02:11:53  54  ,aud_g06
02:11:53  55  ,aud_g07
02:11:53  56  ,aud_g08
02:11:53  57  ,aud_g09
02:11:53  58  ,aud_g10
02:11:53  59  ,aud_g11
02:11:53  60  ,aud_g12
02:11:53  61  ,aud_g13
02:11:53  62  ,aud_g14
02:11:53  63  ,aud_g15
02:11:53  64  ,aud_g16
02:11:53  65  ,aud_g17
02:11:53  66  ,aud_g18
02:11:53  67  ,aud_g19
02:11:53  68  ,aud_g20
02:11:53  69  ,aud_g21
02:11:53  70  ,aud_g22
02:11:53  71  ,aud_g23
02:11:53  72  ,aud_g24
02:11:53  73  ,aud_g25
02:11:53  74  ,aud_g26
02:11:53  75  ,aud_g27
02:11:53  76  ,aud_g28
02:11:53  77  ,aud_g29
02:11:53  78  ,aud_g30
02:11:53  79  ,aud_g31
02:11:53  80  ,aud_g32
02:11:53  81  ,aud_g33
02:11:53  82  ,aud_g34
02:11:53  83  ,aud_g35
02:11:53  84  ,aud_g36
02:11:53  85  ,aud_g37
02:11:53  86  ,aud_g38
02:11:53  87  ,aud_g39
02:11:53  88  ,aud_g40
02:11:53  89  ,aud_g41
02:11:53  90  ,gbp_g00
02:11:53  91  ,gbp_g01
02:11:53  92  ,gbp_g02
02:11:53  93  ,gbp_g03
02:11:53  94  ,gbp_g04
02:11:53  95  ,gbp_g05
02:11:53  96  ,gbp_g06
02:11:53  97  ,gbp_g07
02:11:53  98  ,gbp_g08
02:11:53  99  ,gbp_g09
02:11:53 100  ,gbp_g10
02:11:53 101  ,gbp_g11
02:11:53 102  ,gbp_g12
02:11:53 103  ,gbp_g13
02:11:53 104  ,gbp_g14
02:11:53 105  ,gbp_g15
02:11:53 106  ,gbp_g16
02:11:53 107  ,gbp_g17
02:11:53 108  ,gbp_g18
02:11:53 109  ,gbp_g19
02:11:53 110  ,gbp_g20
02:11:53 111  ,gbp_g21
02:11:53 112  ,gbp_g22
02:11:53 113  ,gbp_g23
02:11:53 114  ,gbp_g24
02:11:53 115  ,gbp_g25
02:11:53 116  ,gbp_g26
02:11:53 117  ,gbp_g27
02:11:53 118  ,gbp_g28
02:11:53 119  ,gbp_g29
02:11:53 120  ,gbp_g30
02:11:53 121  ,gbp_g31
02:11:53 122  ,gbp_g32
02:11:53 123  ,gbp_g33
02:11:53 124  ,gbp_g34
02:11:53 125  ,gbp_g35
02:11:53 126  ,gbp_g36
02:11:53 127  ,gbp_g37
02:11:53 128  ,gbp_g38
02:11:53 129  ,gbp_g39
02:11:53 130  ,gbp_g40
02:11:53 131  ,gbp_g41
02:11:53 132  ,jpy_g00
02:11:53 133  ,jpy_g01
02:11:53 134  ,jpy_g02
02:11:53 135  ,jpy_g03
02:11:53 136  ,jpy_g04
02:11:53 137  ,jpy_g05
02:11:53 138  ,jpy_g06
02:11:53 139  ,jpy_g07
02:11:53 140  ,jpy_g08
02:11:53 141  ,jpy_g09
02:11:53 142  ,jpy_g10
02:11:53 143  ,jpy_g11
02:11:53 144  ,jpy_g12
02:11:53 145  ,jpy_g13
02:11:53 146  ,jpy_g14
02:11:53 147  ,jpy_g15
02:11:53 148  ,jpy_g16
02:11:53 149  ,jpy_g17
02:11:53 150  ,jpy_g18
02:11:53 151  ,jpy_g19
02:11:53 152  ,jpy_g20
02:11:53 153  ,jpy_g21
02:11:53 154  ,jpy_g22
02:11:53 155  ,jpy_g23
02:11:53 156  ,jpy_g24
02:11:53 157  ,jpy_g25
02:11:53 158  ,jpy_g26
02:11:53 159  ,jpy_g27
02:11:53 160  ,jpy_g28
02:11:53 161  ,jpy_g29
02:11:53 162  ,jpy_g30
02:11:53 163  ,jpy_g31
02:11:53 164  ,jpy_g32
02:11:53 165  ,jpy_g33
02:11:53 166  ,jpy_g34
02:11:53 167  ,jpy_g35
02:11:53 168  ,jpy_g36
02:11:53 169  ,jpy_g37
02:11:53 170  ,jpy_g38
02:11:53 171  ,jpy_g39
02:11:53 172  ,jpy_g40
02:11:53 173  ,jpy_g41
02:11:53 174  ,cad_g00
02:11:53 175  ,cad_g01
02:11:53 176  ,cad_g02
02:11:53 177  ,cad_g03
02:11:53 178  ,cad_g04
02:11:53 179  ,cad_g05
02:11:53 180  ,cad_g06
02:11:53 181  ,cad_g07
02:11:53 182  ,cad_g08
02:11:53 183  ,cad_g09
02:11:53 184  ,cad_g10
02:11:53 185  ,cad_g11
02:11:53 186  ,cad_g12
02:11:53 187  ,cad_g13
02:11:53 188  ,cad_g14
02:11:53 189  ,cad_g15
02:11:53 190  ,cad_g16
02:11:53 191  ,cad_g17
02:11:53 192  ,cad_g18
02:11:53 193  ,cad_g19
02:11:53 194  ,cad_g20
02:11:53 195  ,cad_g21
02:11:53 196  ,cad_g22
02:11:53 197  ,cad_g23
02:11:53 198  ,cad_g24
02:11:53 199  ,cad_g25
02:11:53 200  ,cad_g26
02:11:53 201  ,cad_g27
02:11:53 202  ,cad_g28
02:11:53 203  ,cad_g29
02:11:53 204  ,cad_g30
02:11:53 205  ,cad_g31
02:11:53 206  ,cad_g32
02:11:53 207  ,cad_g33
02:11:53 208  ,cad_g34
02:11:53 209  ,cad_g35
02:11:53 210  ,cad_g36
02:11:53 211  ,cad_g37
02:11:53 212  ,cad_g38
02:11:53 213  ,cad_g39
02:11:53 214  ,cad_g40
02:11:53 215  ,cad_g41
02:11:53 216  ,chf_g00
02:11:53 217  ,chf_g01
02:11:53 218  ,chf_g02
02:11:53 219  ,chf_g03
02:11:53 220  ,chf_g04
02:11:53 221  ,chf_g05
02:11:53 222  ,chf_g06
02:11:53 223  ,chf_g07
02:11:53 224  ,chf_g08
02:11:53 225  ,chf_g09
02:11:53 226  ,chf_g10
02:11:53 227  ,chf_g11
02:11:53 228  ,chf_g12
02:11:53 229  ,chf_g13
02:11:53 230  ,chf_g14
02:11:53 231  ,chf_g15
02:11:53 232  ,chf_g16
02:11:53 233  ,chf_g17
02:11:53 234  ,chf_g18
02:11:53 235  ,chf_g19
02:11:53 236  ,chf_g20
02:11:53 237  ,chf_g21
02:11:53 238  ,chf_g22
02:11:53 239  ,chf_g23
02:11:53 240  ,chf_g24
02:11:53 241  ,chf_g25
02:11:53 242  ,chf_g26
02:11:53 243  ,chf_g27
02:11:53 244  ,chf_g28
02:11:53 245  ,chf_g29
02:11:53 246  ,chf_g30
02:11:53 247  ,chf_g31
02:11:53 248  ,chf_g32
02:11:53 249  ,chf_g33
02:11:53 250  ,chf_g34
02:11:53 251  ,chf_g35
02:11:53 252  ,chf_g36
02:11:53 253  ,chf_g37
02:11:53 254  ,chf_g38
02:11:53 255  ,chf_g39
02:11:53 256  ,chf_g40
02:11:53 257  ,chf_g41
02:11:53 258  FROM aud_ms6 m
02:11:53 259  WHERE m.ydate = '&1'||' '||'&2'
02:11:53 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'01:55:00'

View created.

Elapsed: 00:00:00.11
02:11:53 SQL> 
02:11:53 SQL> -- rpt
02:11:53 SQL> -- We should see just 1 row:
02:11:53 SQL> 
02:11:53 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
02:11:53 SQL> 
02:11:53 SQL> -- Build the model:
02:11:53 SQL> CREATE OR REPLACE VIEW bme AS
02:11:53   2  SELECT
02:11:53   3  'aud'||m.ydate prdate
02:11:53   4  ,gattn
02:11:53   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
02:11:53   6  ,eur_g00
02:11:53   7  ,eur_g01
02:11:53   8  ,eur_g02
02:11:53   9  ,eur_g03
02:11:53  10  ,eur_g04
02:11:53  11  ,eur_g05
02:11:53  12  ,eur_g06
02:11:53  13  ,eur_g07
02:11:53  14  ,eur_g08
02:11:53  15  ,eur_g09
02:11:53  16  ,eur_g10
02:11:53  17  ,eur_g11
02:11:53  18  ,eur_g12
02:11:53  19  ,eur_g13
02:11:53  20  ,eur_g14
02:11:53  21  ,eur_g15
02:11:53  22  ,eur_g16
02:11:53  23  ,eur_g17
02:11:53  24  ,eur_g18
02:11:53  25  ,eur_g19
02:11:53  26  ,eur_g20
02:11:53  27  ,eur_g21
02:11:53  28  ,eur_g22
02:11:53  29  ,eur_g23
02:11:53  30  ,eur_g24
02:11:53  31  ,eur_g25
02:11:53  32  ,eur_g26
02:11:53  33  ,eur_g27
02:11:53  34  ,eur_g28
02:11:53  35  ,eur_g29
02:11:53  36  ,eur_g30
02:11:53  37  ,eur_g31
02:11:53  38  ,eur_g32
02:11:53  39  ,eur_g33
02:11:53  40  ,eur_g34
02:11:53  41  ,eur_g35
02:11:53  42  ,eur_g36
02:11:53  43  ,eur_g37
02:11:53  44  ,eur_g38
02:11:53  45  ,eur_g39
02:11:53  46  ,eur_g40
02:11:53  47  ,eur_g41
02:11:53  48  ,aud_g00
02:11:53  49  ,aud_g01
02:11:53  50  ,aud_g02
02:11:53  51  ,aud_g03
02:11:53  52  ,aud_g04
02:11:53  53  ,aud_g05
02:11:53  54  ,aud_g06
02:11:53  55  ,aud_g07
02:11:53  56  ,aud_g08
02:11:53  57  ,aud_g09
02:11:53  58  ,aud_g10
02:11:53  59  ,aud_g11
02:11:53  60  ,aud_g12
02:11:53  61  ,aud_g13
02:11:53  62  ,aud_g14
02:11:53  63  ,aud_g15
02:11:53  64  ,aud_g16
02:11:53  65  ,aud_g17
02:11:53  66  ,aud_g18
02:11:53  67  ,aud_g19
02:11:53  68  ,aud_g20
02:11:53  69  ,aud_g21
02:11:53  70  ,aud_g22
02:11:53  71  ,aud_g23
02:11:53  72  ,aud_g24
02:11:53  73  ,aud_g25
02:11:53  74  ,aud_g26
02:11:53  75  ,aud_g27
02:11:53  76  ,aud_g28
02:11:53  77  ,aud_g29
02:11:53  78  ,aud_g30
02:11:53  79  ,aud_g31
02:11:53  80  ,aud_g32
02:11:53  81  ,aud_g33
02:11:53  82  ,aud_g34
02:11:53  83  ,aud_g35
02:11:53  84  ,aud_g36
02:11:53  85  ,aud_g37
02:11:53  86  ,aud_g38
02:11:53  87  ,aud_g39
02:11:53  88  ,aud_g40
02:11:53  89  ,aud_g41
02:11:53  90  ,gbp_g00
02:11:53  91  ,gbp_g01
02:11:53  92  ,gbp_g02
02:11:53  93  ,gbp_g03
02:11:53  94  ,gbp_g04
02:11:53  95  ,gbp_g05
02:11:53  96  ,gbp_g06
02:11:53  97  ,gbp_g07
02:11:53  98  ,gbp_g08
02:11:53  99  ,gbp_g09
02:11:53 100  ,gbp_g10
02:11:53 101  ,gbp_g11
02:11:53 102  ,gbp_g12
02:11:53 103  ,gbp_g13
02:11:53 104  ,gbp_g14
02:11:53 105  ,gbp_g15
02:11:53 106  ,gbp_g16
02:11:53 107  ,gbp_g17
02:11:53 108  ,gbp_g18
02:11:53 109  ,gbp_g19
02:11:53 110  ,gbp_g20
02:11:53 111  ,gbp_g21
02:11:53 112  ,gbp_g22
02:11:53 113  ,gbp_g23
02:11:53 114  ,gbp_g24
02:11:53 115  ,gbp_g25
02:11:53 116  ,gbp_g26
02:11:53 117  ,gbp_g27
02:11:53 118  ,gbp_g28
02:11:53 119  ,gbp_g29
02:11:53 120  ,gbp_g30
02:11:53 121  ,gbp_g31
02:11:53 122  ,gbp_g32
02:11:53 123  ,gbp_g33
02:11:53 124  ,gbp_g34
02:11:53 125  ,gbp_g35
02:11:53 126  ,gbp_g36
02:11:53 127  ,gbp_g37
02:11:53 128  ,gbp_g38
02:11:53 129  ,gbp_g39
02:11:53 130  ,gbp_g40
02:11:53 131  ,gbp_g41
02:11:53 132  ,jpy_g00
02:11:53 133  ,jpy_g01
02:11:53 134  ,jpy_g02
02:11:53 135  ,jpy_g03
02:11:53 136  ,jpy_g04
02:11:53 137  ,jpy_g05
02:11:53 138  ,jpy_g06
02:11:53 139  ,jpy_g07
02:11:53 140  ,jpy_g08
02:11:53 141  ,jpy_g09
02:11:53 142  ,jpy_g10
02:11:53 143  ,jpy_g11
02:11:53 144  ,jpy_g12
02:11:53 145  ,jpy_g13
02:11:53 146  ,jpy_g14
02:11:53 147  ,jpy_g15
02:11:53 148  ,jpy_g16
02:11:53 149  ,jpy_g17
02:11:53 150  ,jpy_g18
02:11:53 151  ,jpy_g19
02:11:53 152  ,jpy_g20
02:11:53 153  ,jpy_g21
02:11:53 154  ,jpy_g22
02:11:53 155  ,jpy_g23
02:11:53 156  ,jpy_g24
02:11:53 157  ,jpy_g25
02:11:53 158  ,jpy_g26
02:11:53 159  ,jpy_g27
02:11:53 160  ,jpy_g28
02:11:53 161  ,jpy_g29
02:11:53 162  ,jpy_g30
02:11:53 163  ,jpy_g31
02:11:53 164  ,jpy_g32
02:11:53 165  ,jpy_g33
02:11:53 166  ,jpy_g34
02:11:53 167  ,jpy_g35
02:11:53 168  ,jpy_g36
02:11:53 169  ,jpy_g37
02:11:53 170  ,jpy_g38
02:11:53 171  ,jpy_g39
02:11:53 172  ,jpy_g40
02:11:53 173  ,jpy_g41
02:11:53 174  ,cad_g00
02:11:53 175  ,cad_g01
02:11:53 176  ,cad_g02
02:11:53 177  ,cad_g03
02:11:53 178  ,cad_g04
02:11:53 179  ,cad_g05
02:11:53 180  ,cad_g06
02:11:53 181  ,cad_g07
02:11:53 182  ,cad_g08
02:11:53 183  ,cad_g09
02:11:53 184  ,cad_g10
02:11:53 185  ,cad_g11
02:11:53 186  ,cad_g12
02:11:53 187  ,cad_g13
02:11:53 188  ,cad_g14
02:11:53 189  ,cad_g15
02:11:53 190  ,cad_g16
02:11:53 191  ,cad_g17
02:11:53 192  ,cad_g18
02:11:53 193  ,cad_g19
02:11:53 194  ,cad_g20
02:11:53 195  ,cad_g21
02:11:53 196  ,cad_g22
02:11:53 197  ,cad_g23
02:11:53 198  ,cad_g24
02:11:53 199  ,cad_g25
02:11:53 200  ,cad_g26
02:11:53 201  ,cad_g27
02:11:53 202  ,cad_g28
02:11:53 203  ,cad_g29
02:11:53 204  ,cad_g30
02:11:53 205  ,cad_g31
02:11:53 206  ,cad_g32
02:11:53 207  ,cad_g33
02:11:53 208  ,cad_g34
02:11:53 209  ,cad_g35
02:11:53 210  ,cad_g36
02:11:53 211  ,cad_g37
02:11:53 212  ,cad_g38
02:11:53 213  ,cad_g39
02:11:53 214  ,cad_g40
02:11:53 215  ,cad_g41
02:11:53 216  ,chf_g00
02:11:53 217  ,chf_g01
02:11:53 218  ,chf_g02
02:11:53 219  ,chf_g03
02:11:53 220  ,chf_g04
02:11:53 221  ,chf_g05
02:11:53 222  ,chf_g06
02:11:53 223  ,chf_g07
02:11:53 224  ,chf_g08
02:11:53 225  ,chf_g09
02:11:53 226  ,chf_g10
02:11:53 227  ,chf_g11
02:11:53 228  ,chf_g12
02:11:53 229  ,chf_g13
02:11:53 230  ,chf_g14
02:11:53 231  ,chf_g15
02:11:53 232  ,chf_g16
02:11:53 233  ,chf_g17
02:11:53 234  ,chf_g18
02:11:53 235  ,chf_g19
02:11:53 236  ,chf_g20
02:11:53 237  ,chf_g21
02:11:53 238  ,chf_g22
02:11:53 239  ,chf_g23
02:11:53 240  ,chf_g24
02:11:53 241  ,chf_g25
02:11:53 242  ,chf_g26
02:11:53 243  ,chf_g27
02:11:53 244  ,chf_g28
02:11:53 245  ,chf_g29
02:11:53 246  ,chf_g30
02:11:53 247  ,chf_g31
02:11:53 248  ,chf_g32
02:11:53 249  ,chf_g33
02:11:53 250  ,chf_g34
02:11:53 251  ,chf_g35
02:11:53 252  ,chf_g36
02:11:53 253  ,chf_g37
02:11:53 254  ,chf_g38
02:11:53 255  ,chf_g39
02:11:53 256  ,chf_g40
02:11:53 257  ,chf_g41
02:11:53 258  FROM aud_ms6 m
02:11:53 259  WHERE gattn IN('nup','up')
02:11:53 260  AND 1+m.ydate < '&1'||' '||'&2'
02:11:53 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'01:55:00'

View created.

Elapsed: 00:00:00.13
02:11:53 SQL> 
02:11:53 SQL> -- rpt
02:11:53 SQL> 
02:11:53 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12866
up	     6307

Elapsed: 00:00:00.04
02:11:53 SQL> 
02:11:53 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 19:40:00

Elapsed: 00:00:00.04
02:11:53 SQL> 
02:11:53 SQL> -- Now build model from bme and score sme
02:11:53 SQL> @score1gattn.sql
02:11:53 SQL> -- score1gattn.sql
02:11:53 SQL> 
02:11:53 SQL> -- Does the 1st SVM score
02:11:53 SQL> 
02:11:53 SQL> -- Fill up svmc_apply_prep
02:11:53 SQL> @score_gattn.sql
02:11:53 SQL> --
02:11:53 SQL> -- score_gattn.sql
02:11:53 SQL> --
02:11:53 SQL> 
02:11:53 SQL> -- usage: score_gattn.sql
02:11:53 SQL> 
02:11:53 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
02:11:53 SQL> 
02:11:53 SQL> DEFINE target	= 'gattn'
02:11:53 SQL> DEFINE model_name = 'forex14'
02:11:53 SQL> DEFINE bldtable	= 'bme'
02:11:53 SQL> DEFINE scoretable = 'sme'
02:11:53 SQL> DEFINE case_id	= 'prdate'
02:11:53 SQL> 
02:11:53 SQL> -- Define a variable to help me exclude some columns from some data mining calls
02:11:53 SQL> DEFINE exclude1 = "'&target','&case_id'"
02:11:53 SQL> 
02:11:53 SQL> -- Builds an SVM model using pl/sql.
02:11:53 SQL> 
02:11:53 SQL> -----------------------------------------------------------------------
02:11:53 SQL> --			    BUILD THE MODEL
02:11:53 SQL> -----------------------------------------------------------------------
02:11:53 SQL> 
02:11:53 SQL> -- Cleanup old build data preparation objects for repeat runs
02:11:53 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
02:11:53 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
02:11:53 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
02:11:53 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
02:11:53 SQL> 
02:11:53 SQL> 
02:11:53 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
02:11:53 SQL> --
02:11:53 SQL> -- DROP	TABLE svmc_settings ;
02:11:53 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
02:11:53 SQL> -- DELETE svmc_settings;
02:11:53 SQL> 
02:11:53 SQL> -- The default classification algorithm is Naive Bayes. So override
02:11:53 SQL> -- this choice to SVM using a settings table.
02:11:53 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
02:11:53 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
02:11:53 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
02:11:53 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
02:11:53 SQL> -- models.
02:11:53 SQL> --
02:11:53 SQL> 
02:11:53 SQL> -- Do this once and then comment it out.
02:11:53 SQL> -- That makes script go faster.
02:11:53 SQL> -- BEGIN
02:11:53 SQL> -- -- Populate settings table
02:11:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:11:53 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
02:11:53 SQL> --
02:11:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:11:53 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
02:11:53 SQL> --
02:11:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
02:11:53 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
02:11:53 SQL> --   COMMIT;
02:11:53 SQL> -- END;
02:11:53 SQL> -- /
02:11:53 SQL> 
02:11:53 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
02:11:53 SQL> 
02:11:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
02:11:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
02:11:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
02:11:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:11:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
02:11:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:11:53 SQL> 
02:11:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
02:11:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:11:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:11:53 SQL> 
02:11:53 SQL> --------------------------------
02:11:53 SQL> -- PREPARE BUILD (TRAINING) DATA
02:11:53 SQL> --
02:11:53 SQL> 
02:11:53 SQL> -- 1. Missing Value treatment for all Predictors and
02:11:53 SQL> -- 2. Outlier Treatment and
02:11:53 SQL> -- 3. Normalization are performed below.
02:11:53 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
02:11:53 SQL> --    normalized here.
02:11:53 SQL> 
02:11:53 SQL> BEGIN
02:11:53   2  	-- Perform missing value treatment for all predictors
02:11:53   3  	-- create miss tables
02:11:53   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
02:11:53   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
02:11:53   6  
02:11:53   7  	-- populate miss tables
02:11:53   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
02:11:53   9  	  miss_table_name => 'svmc_miss_num',
02:11:53  10  	  data_table_name => '&bldtable',
02:11:53  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:11:53  12  
02:11:53  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
02:11:53  14  	  miss_table_name => 'svmc_miss_cat',
02:11:53  15  	  data_table_name => '&bldtable',
02:11:53  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:11:53  17  
02:11:53  18  	-- xform input data to replace missing values
02:11:53  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:11:53  20  	  miss_table_name => 'svmc_miss_num',
02:11:53  21  	  data_table_name => '&bldtable',
02:11:53  22  	  xform_view_name => 'xformed_build_miss_num');
02:11:53  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:11:53  24  	  miss_table_name => 'svmc_miss_cat',
02:11:53  25  	  data_table_name => '&bldtable',
02:11:53  26  	  xform_view_name => 'xformed_build_miss_cat');
02:11:53  27  
02:11:53  28  	-- Perform outlier treatment.
02:11:53  29  	-- create clip table
02:11:53  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
02:11:53  31  
02:11:53  32  	-- populate clip table
02:11:53  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
02:11:53  34  	  clip_table_name => 'svmc_clip',
02:11:53  35  	  data_table_name => '&bldtable',
02:11:53  36  	  tail_frac	  => 0.025,
02:11:53  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:11:53  38  
02:11:53  39  	-- xform input data to winsorized data
02:11:53  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
02:11:53  41  	  clip_table_name => 'svmc_clip',
02:11:53  42  	  data_table_name => '&bldtable',
02:11:53  43  	  xform_view_name => 'svmc_winsor');
02:11:53  44  
02:11:53  45  	-- create normalization table
02:11:53  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
02:11:53  47  
02:11:53  48  	-- populate normalization table based on winsorized data
02:11:53  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
02:11:53  50  	  norm_table_name => 'svmc_norm',
02:11:53  51  	  data_table_name => 'svmc_winsor',
02:11:53  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
02:11:53  53  
02:11:53  54  	-- normalize the original data
02:11:53  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:11:53  56  	  norm_table_name => 'svmc_norm',
02:11:53  57  	  data_table_name => '&bldtable',
02:11:53  58  	  xform_view_name => 'svmc_build_prep');
02:11:53  59  END;
02:11:53  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.04
02:12:11 SQL> 
02:12:11 SQL> ---------------------
02:12:11 SQL> -- CREATE A NEW MODEL
02:12:11 SQL> --
02:12:11 SQL> -- Cleanup old model with the same name for repeat runs
02:12:11 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
02:12:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:12:11   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.07
02:12:12 SQL> 
02:12:12 SQL> -- Build a new SVM Model
02:12:12 SQL> BEGIN
02:12:12   2  	DBMS_DATA_MINING.CREATE_MODEL(
02:12:12   3  	  model_name	      => '&model_name',
02:12:12   4  	  mining_function     => dbms_data_mining.classification,
02:12:12   5  	  data_table_name     => 'svmc_build_prep',
02:12:12   6  	  case_id_column_name => '&case_id',
02:12:12   7  	  target_column_name  => '&target',
02:12:12   8  	  settings_table_name => 'svmc_settings');
02:12:12   9  END;
02:12:12  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.36
02:12:38 SQL> 
02:12:38 SQL> -----------------------------------------------------------------------
02:12:38 SQL> --			       APPLY/score THE MODEL
02:12:38 SQL> -----------------------------------------------------------------------
02:12:38 SQL> 
02:12:38 SQL> -- Cleanup old scoring data preparation objects for repeat runs
02:12:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
02:12:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:12:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
02:12:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
02:12:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:12:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
02:12:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
02:12:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
02:12:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
02:12:38 SQL> -----------------------
02:12:38 SQL> -- PREPARE SCORING DATA
02:12:38 SQL> --
02:12:38 SQL> -- If the data for model creation has been prepared, then the data
02:12:38 SQL> -- to be scored using the model must be prepared in the same manner
02:12:38 SQL> -- in order to obtain meaningful results.
02:12:38 SQL> --
02:12:38 SQL> -- 1. Missing Value treatment for all Predictors and
02:12:38 SQL> -- 2. Normalization
02:12:38 SQL> -- No outlier treatment will be performed during test and apply. The
02:12:38 SQL> -- normalization step is sufficient, since the normalization parameters
02:12:38 SQL> -- already capture the effects of outlier treatment done with build data.
02:12:38 SQL> --
02:12:38 SQL> BEGIN
02:12:38   2  	-- Xform Test data to replace missing values
02:12:38   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
02:12:38   4  	  miss_table_name => 'svmc_miss_num',
02:12:38   5  	  data_table_name => '&scoretable',
02:12:38   6  	  xform_view_name => 'xformed_apply_miss_num');
02:12:38   7  
02:12:38   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
02:12:38   9  	  miss_table_name => 'svmc_miss_cat',
02:12:38  10  	  data_table_name => '&scoretable',
02:12:38  11  	  xform_view_name => 'xformed_apply_miss_cat');
02:12:38  12  
02:12:38  13  	-- Normalize the data to be scored
02:12:38  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
02:12:38  15  	  norm_table_name => 'svmc_norm',
02:12:38  16  	  data_table_name => '&scoretable',
02:12:38  17  	  xform_view_name => 'svmc_apply_prep');
02:12:38  18  END;
02:12:38  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
02:12:39 SQL> 
02:12:39 SQL> -- Use same model_name used in score_gattn.sql
02:12:39 SQL> DEFINE model_name = 'forex14'
02:12:39 SQL> 
02:12:39 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
02:12:39 SQL> 
02:12:39 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
02:12:39   2  SELECT
02:12:39   3  prdate
02:12:39   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
02:12:39   5  ,sysdate
02:12:39   6  ,SUBSTR(prdate,1,3)pair
02:12:39   7  ,SUBSTR(prdate,4,19)ydate
02:12:39   8  FROM svmc_apply_prep
02:12:39   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
02:12:39 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
