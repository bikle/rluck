
SQL*Plus: Release 11.2.0.1.0 Production on Mon Jan 3 19:42:31 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

19:42:31 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
19:42:31 SQL> 19:42:31 SQL> @aud_score1day.sql  2011-01-03 19:20:00
19:42:31 SQL> --
19:42:31 SQL> -- aud_score1day.sql
19:42:31 SQL> --
19:42:31 SQL> 
19:42:31 SQL> CREATE OR REPLACE VIEW sme AS
19:42:31   2  SELECT
19:42:31   3  'aud'||m.ydate prdate
19:42:31   4  ,NULL gatt
19:42:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:42:31   6  ,eur_g00
19:42:31   7  ,eur_g01
19:42:31   8  ,eur_g02
19:42:31   9  ,eur_g03
19:42:31  10  ,eur_g04
19:42:31  11  ,eur_g05
19:42:31  12  ,eur_g06
19:42:31  13  ,eur_g07
19:42:31  14  ,eur_g08
19:42:31  15  ,eur_g09
19:42:31  16  ,eur_g10
19:42:31  17  ,eur_g11
19:42:31  18  ,eur_g12
19:42:31  19  ,eur_g13
19:42:31  20  ,eur_g14
19:42:31  21  ,eur_g15
19:42:31  22  ,eur_g16
19:42:31  23  ,eur_g17
19:42:31  24  ,eur_g18
19:42:31  25  ,eur_g19
19:42:31  26  ,eur_g20
19:42:31  27  ,eur_g21
19:42:31  28  ,eur_g22
19:42:31  29  ,eur_g23
19:42:31  30  ,eur_g24
19:42:31  31  ,eur_g25
19:42:31  32  ,eur_g26
19:42:31  33  ,eur_g27
19:42:31  34  ,eur_g28
19:42:31  35  ,eur_g29
19:42:31  36  ,eur_g30
19:42:31  37  ,eur_g31
19:42:31  38  ,eur_g32
19:42:31  39  ,eur_g33
19:42:31  40  ,eur_g34
19:42:31  41  ,eur_g35
19:42:31  42  ,eur_g36
19:42:31  43  ,eur_g37
19:42:31  44  ,eur_g38
19:42:31  45  ,eur_g39
19:42:31  46  ,eur_g40
19:42:31  47  ,eur_g41
19:42:31  48  ,aud_g00
19:42:31  49  ,aud_g01
19:42:31  50  ,aud_g02
19:42:31  51  ,aud_g03
19:42:31  52  ,aud_g04
19:42:31  53  ,aud_g05
19:42:31  54  ,aud_g06
19:42:31  55  ,aud_g07
19:42:31  56  ,aud_g08
19:42:31  57  ,aud_g09
19:42:31  58  ,aud_g10
19:42:31  59  ,aud_g11
19:42:31  60  ,aud_g12
19:42:31  61  ,aud_g13
19:42:31  62  ,aud_g14
19:42:31  63  ,aud_g15
19:42:31  64  ,aud_g16
19:42:31  65  ,aud_g17
19:42:31  66  ,aud_g18
19:42:31  67  ,aud_g19
19:42:31  68  ,aud_g20
19:42:31  69  ,aud_g21
19:42:31  70  ,aud_g22
19:42:31  71  ,aud_g23
19:42:31  72  ,aud_g24
19:42:31  73  ,aud_g25
19:42:31  74  ,aud_g26
19:42:31  75  ,aud_g27
19:42:31  76  ,aud_g28
19:42:31  77  ,aud_g29
19:42:31  78  ,aud_g30
19:42:31  79  ,aud_g31
19:42:31  80  ,aud_g32
19:42:31  81  ,aud_g33
19:42:31  82  ,aud_g34
19:42:31  83  ,aud_g35
19:42:31  84  ,aud_g36
19:42:31  85  ,aud_g37
19:42:31  86  ,aud_g38
19:42:31  87  ,aud_g39
19:42:31  88  ,aud_g40
19:42:31  89  ,aud_g41
19:42:31  90  ,gbp_g00
19:42:31  91  ,gbp_g01
19:42:31  92  ,gbp_g02
19:42:31  93  ,gbp_g03
19:42:31  94  ,gbp_g04
19:42:31  95  ,gbp_g05
19:42:31  96  ,gbp_g06
19:42:31  97  ,gbp_g07
19:42:31  98  ,gbp_g08
19:42:31  99  ,gbp_g09
19:42:31 100  ,gbp_g10
19:42:31 101  ,gbp_g11
19:42:31 102  ,gbp_g12
19:42:31 103  ,gbp_g13
19:42:31 104  ,gbp_g14
19:42:31 105  ,gbp_g15
19:42:31 106  ,gbp_g16
19:42:31 107  ,gbp_g17
19:42:31 108  ,gbp_g18
19:42:31 109  ,gbp_g19
19:42:31 110  ,gbp_g20
19:42:31 111  ,gbp_g21
19:42:31 112  ,gbp_g22
19:42:31 113  ,gbp_g23
19:42:31 114  ,gbp_g24
19:42:31 115  ,gbp_g25
19:42:31 116  ,gbp_g26
19:42:31 117  ,gbp_g27
19:42:31 118  ,gbp_g28
19:42:31 119  ,gbp_g29
19:42:31 120  ,gbp_g30
19:42:31 121  ,gbp_g31
19:42:31 122  ,gbp_g32
19:42:31 123  ,gbp_g33
19:42:31 124  ,gbp_g34
19:42:31 125  ,gbp_g35
19:42:31 126  ,gbp_g36
19:42:31 127  ,gbp_g37
19:42:31 128  ,gbp_g38
19:42:31 129  ,gbp_g39
19:42:31 130  ,gbp_g40
19:42:31 131  ,gbp_g41
19:42:31 132  ,jpy_g00
19:42:31 133  ,jpy_g01
19:42:31 134  ,jpy_g02
19:42:31 135  ,jpy_g03
19:42:31 136  ,jpy_g04
19:42:31 137  ,jpy_g05
19:42:31 138  ,jpy_g06
19:42:31 139  ,jpy_g07
19:42:31 140  ,jpy_g08
19:42:31 141  ,jpy_g09
19:42:31 142  ,jpy_g10
19:42:31 143  ,jpy_g11
19:42:31 144  ,jpy_g12
19:42:31 145  ,jpy_g13
19:42:31 146  ,jpy_g14
19:42:31 147  ,jpy_g15
19:42:31 148  ,jpy_g16
19:42:31 149  ,jpy_g17
19:42:31 150  ,jpy_g18
19:42:31 151  ,jpy_g19
19:42:31 152  ,jpy_g20
19:42:31 153  ,jpy_g21
19:42:31 154  ,jpy_g22
19:42:31 155  ,jpy_g23
19:42:31 156  ,jpy_g24
19:42:31 157  ,jpy_g25
19:42:31 158  ,jpy_g26
19:42:31 159  ,jpy_g27
19:42:31 160  ,jpy_g28
19:42:31 161  ,jpy_g29
19:42:31 162  ,jpy_g30
19:42:31 163  ,jpy_g31
19:42:31 164  ,jpy_g32
19:42:31 165  ,jpy_g33
19:42:31 166  ,jpy_g34
19:42:31 167  ,jpy_g35
19:42:31 168  ,jpy_g36
19:42:31 169  ,jpy_g37
19:42:31 170  ,jpy_g38
19:42:31 171  ,jpy_g39
19:42:31 172  ,jpy_g40
19:42:31 173  ,jpy_g41
19:42:31 174  ,cad_g00
19:42:31 175  ,cad_g01
19:42:31 176  ,cad_g02
19:42:31 177  ,cad_g03
19:42:31 178  ,cad_g04
19:42:31 179  ,cad_g05
19:42:31 180  ,cad_g06
19:42:31 181  ,cad_g07
19:42:31 182  ,cad_g08
19:42:31 183  ,cad_g09
19:42:31 184  ,cad_g10
19:42:31 185  ,cad_g11
19:42:31 186  ,cad_g12
19:42:31 187  ,cad_g13
19:42:31 188  ,cad_g14
19:42:31 189  ,cad_g15
19:42:31 190  ,cad_g16
19:42:31 191  ,cad_g17
19:42:31 192  ,cad_g18
19:42:31 193  ,cad_g19
19:42:31 194  ,cad_g20
19:42:31 195  ,cad_g21
19:42:31 196  ,cad_g22
19:42:31 197  ,cad_g23
19:42:31 198  ,cad_g24
19:42:31 199  ,cad_g25
19:42:31 200  ,cad_g26
19:42:31 201  ,cad_g27
19:42:31 202  ,cad_g28
19:42:31 203  ,cad_g29
19:42:31 204  ,cad_g30
19:42:31 205  ,cad_g31
19:42:31 206  ,cad_g32
19:42:31 207  ,cad_g33
19:42:31 208  ,cad_g34
19:42:31 209  ,cad_g35
19:42:31 210  ,cad_g36
19:42:31 211  ,cad_g37
19:42:31 212  ,cad_g38
19:42:31 213  ,cad_g39
19:42:31 214  ,cad_g40
19:42:31 215  ,cad_g41
19:42:31 216  ,chf_g00
19:42:31 217  ,chf_g01
19:42:31 218  ,chf_g02
19:42:31 219  ,chf_g03
19:42:31 220  ,chf_g04
19:42:31 221  ,chf_g05
19:42:31 222  ,chf_g06
19:42:31 223  ,chf_g07
19:42:31 224  ,chf_g08
19:42:31 225  ,chf_g09
19:42:31 226  ,chf_g10
19:42:31 227  ,chf_g11
19:42:31 228  ,chf_g12
19:42:31 229  ,chf_g13
19:42:31 230  ,chf_g14
19:42:31 231  ,chf_g15
19:42:31 232  ,chf_g16
19:42:31 233  ,chf_g17
19:42:31 234  ,chf_g18
19:42:31 235  ,chf_g19
19:42:31 236  ,chf_g20
19:42:31 237  ,chf_g21
19:42:31 238  ,chf_g22
19:42:31 239  ,chf_g23
19:42:31 240  ,chf_g24
19:42:31 241  ,chf_g25
19:42:31 242  ,chf_g26
19:42:31 243  ,chf_g27
19:42:31 244  ,chf_g28
19:42:31 245  ,chf_g29
19:42:31 246  ,chf_g30
19:42:31 247  ,chf_g31
19:42:31 248  ,chf_g32
19:42:31 249  ,chf_g33
19:42:31 250  ,chf_g34
19:42:31 251  ,chf_g35
19:42:31 252  ,chf_g36
19:42:31 253  ,chf_g37
19:42:31 254  ,chf_g38
19:42:31 255  ,chf_g39
19:42:31 256  ,chf_g40
19:42:31 257  ,chf_g41
19:42:31 258  FROM aud_ms6 m
19:42:31 259  WHERE m.ydate = '&1'||' '||'&2'
19:42:31 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'19:20:00'

View created.

Elapsed: 00:00:00.14
19:42:31 SQL> 
19:42:31 SQL> -- rpt
19:42:31 SQL> -- We should see just 1 row:
19:42:31 SQL> 
19:42:31 SQL> SELECT COUNT(prdate) FROM sme
19:42:31   2  
19:42:31 SQL> -- Build the model:
19:42:31 SQL> CREATE OR REPLACE VIEW bme AS
19:42:31   2  SELECT
19:42:31   3  'aud'||m.ydate prdate
19:42:31   4  ,gatt
19:42:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:42:31   6  ,eur_g00
19:42:31   7  ,eur_g01
19:42:31   8  ,eur_g02
19:42:31   9  ,eur_g03
19:42:31  10  ,eur_g04
19:42:31  11  ,eur_g05
19:42:31  12  ,eur_g06
19:42:31  13  ,eur_g07
19:42:31  14  ,eur_g08
19:42:31  15  ,eur_g09
19:42:31  16  ,eur_g10
19:42:31  17  ,eur_g11
19:42:31  18  ,eur_g12
19:42:31  19  ,eur_g13
19:42:31  20  ,eur_g14
19:42:31  21  ,eur_g15
19:42:31  22  ,eur_g16
19:42:31  23  ,eur_g17
19:42:31  24  ,eur_g18
19:42:31  25  ,eur_g19
19:42:31  26  ,eur_g20
19:42:31  27  ,eur_g21
19:42:31  28  ,eur_g22
19:42:31  29  ,eur_g23
19:42:31  30  ,eur_g24
19:42:31  31  ,eur_g25
19:42:31  32  ,eur_g26
19:42:31  33  ,eur_g27
19:42:31  34  ,eur_g28
19:42:31  35  ,eur_g29
19:42:31  36  ,eur_g30
19:42:31  37  ,eur_g31
19:42:31  38  ,eur_g32
19:42:31  39  ,eur_g33
19:42:31  40  ,eur_g34
19:42:31  41  ,eur_g35
19:42:31  42  ,eur_g36
19:42:31  43  ,eur_g37
19:42:31  44  ,eur_g38
19:42:31  45  ,eur_g39
19:42:31  46  ,eur_g40
19:42:31  47  ,eur_g41
19:42:31  48  ,aud_g00
19:42:31  49  ,aud_g01
19:42:31  50  ,aud_g02
19:42:31  51  ,aud_g03
19:42:31  52  ,aud_g04
19:42:31  53  ,aud_g05
19:42:31  54  ,aud_g06
19:42:31  55  ,aud_g07
19:42:31  56  ,aud_g08
19:42:31  57  ,aud_g09
19:42:31  58  ,aud_g10
19:42:31  59  ,aud_g11
19:42:31  60  ,aud_g12
19:42:31  61  ,aud_g13
19:42:31  62  ,aud_g14
19:42:31  63  ,aud_g15
19:42:31  64  ,aud_g16
19:42:31  65  ,aud_g17
19:42:31  66  ,aud_g18
19:42:31  67  ,aud_g19
19:42:31  68  ,aud_g20
19:42:31  69  ,aud_g21
19:42:31  70  ,aud_g22
19:42:31  71  ,aud_g23
19:42:31  72  ,aud_g24
19:42:31  73  ,aud_g25
19:42:31  74  ,aud_g26
19:42:31  75  ,aud_g27
19:42:31  76  ,aud_g28
19:42:31  77  ,aud_g29
19:42:31  78  ,aud_g30
19:42:31  79  ,aud_g31
19:42:31  80  ,aud_g32
19:42:31  81  ,aud_g33
19:42:31  82  ,aud_g34
19:42:31  83  ,aud_g35
19:42:31  84  ,aud_g36
19:42:31  85  ,aud_g37
19:42:31  86  ,aud_g38
19:42:31  87  ,aud_g39
19:42:31  88  ,aud_g40
19:42:31  89  ,aud_g41
19:42:31  90  ,gbp_g00
19:42:31  91  ,gbp_g01
19:42:31  92  ,gbp_g02
19:42:31  93  ,gbp_g03
19:42:31  94  ,gbp_g04
19:42:31  95  ,gbp_g05
19:42:31  96  ,gbp_g06
19:42:31  97  ,gbp_g07
19:42:31  98  ,gbp_g08
19:42:31  99  ,gbp_g09
19:42:31 100  ,gbp_g10
19:42:31 101  ,gbp_g11
19:42:31 102  ,gbp_g12
19:42:31 103  ,gbp_g13
19:42:31 104  ,gbp_g14
19:42:31 105  ,gbp_g15
19:42:31 106  ,gbp_g16
19:42:31 107  ,gbp_g17
19:42:31 108  ,gbp_g18
19:42:31 109  ,gbp_g19
19:42:31 110  ,gbp_g20
19:42:31 111  ,gbp_g21
19:42:31 112  ,gbp_g22
19:42:31 113  ,gbp_g23
19:42:31 114  ,gbp_g24
19:42:31 115  ,gbp_g25
19:42:31 116  ,gbp_g26
19:42:31 117  ,gbp_g27
19:42:31 118  ,gbp_g28
19:42:31 119  ,gbp_g29
19:42:31 120  ,gbp_g30
19:42:31 121  ,gbp_g31
19:42:31 122  ,gbp_g32
19:42:31 123  ,gbp_g33
19:42:31 124  ,gbp_g34
19:42:31 125  ,gbp_g35
19:42:31 126  ,gbp_g36
19:42:31 127  ,gbp_g37
19:42:31 128  ,gbp_g38
19:42:31 129  ,gbp_g39
19:42:31 130  ,gbp_g40
19:42:31 131  ,gbp_g41
19:42:31 132  ,jpy_g00
19:42:31 133  ,jpy_g01
19:42:31 134  ,jpy_g02
19:42:31 135  ,jpy_g03
19:42:31 136  ,jpy_g04
19:42:31 137  ,jpy_g05
19:42:31 138  ,jpy_g06
19:42:31 139  ,jpy_g07
19:42:31 140  ,jpy_g08
19:42:31 141  ,jpy_g09
19:42:31 142  ,jpy_g10
19:42:31 143  ,jpy_g11
19:42:31 144  ,jpy_g12
19:42:31 145  ,jpy_g13
19:42:31 146  ,jpy_g14
19:42:31 147  ,jpy_g15
19:42:31 148  ,jpy_g16
19:42:31 149  ,jpy_g17
19:42:31 150  ,jpy_g18
19:42:31 151  ,jpy_g19
19:42:31 152  ,jpy_g20
19:42:31 153  ,jpy_g21
19:42:31 154  ,jpy_g22
19:42:31 155  ,jpy_g23
19:42:31 156  ,jpy_g24
19:42:31 157  ,jpy_g25
19:42:31 158  ,jpy_g26
19:42:31 159  ,jpy_g27
19:42:31 160  ,jpy_g28
19:42:31 161  ,jpy_g29
19:42:31 162  ,jpy_g30
19:42:31 163  ,jpy_g31
19:42:31 164  ,jpy_g32
19:42:31 165  ,jpy_g33
19:42:31 166  ,jpy_g34
19:42:31 167  ,jpy_g35
19:42:31 168  ,jpy_g36
19:42:31 169  ,jpy_g37
19:42:31 170  ,jpy_g38
19:42:31 171  ,jpy_g39
19:42:31 172  ,jpy_g40
19:42:31 173  ,jpy_g41
19:42:31 174  ,cad_g00
19:42:31 175  ,cad_g01
19:42:31 176  ,cad_g02
19:42:31 177  ,cad_g03
19:42:31 178  ,cad_g04
19:42:31 179  ,cad_g05
19:42:31 180  ,cad_g06
19:42:31 181  ,cad_g07
19:42:31 182  ,cad_g08
19:42:31 183  ,cad_g09
19:42:31 184  ,cad_g10
19:42:31 185  ,cad_g11
19:42:31 186  ,cad_g12
19:42:31 187  ,cad_g13
19:42:31 188  ,cad_g14
19:42:31 189  ,cad_g15
19:42:31 190  ,cad_g16
19:42:31 191  ,cad_g17
19:42:31 192  ,cad_g18
19:42:31 193  ,cad_g19
19:42:31 194  ,cad_g20
19:42:31 195  ,cad_g21
19:42:31 196  ,cad_g22
19:42:31 197  ,cad_g23
19:42:31 198  ,cad_g24
19:42:31 199  ,cad_g25
19:42:31 200  ,cad_g26
19:42:31 201  ,cad_g27
19:42:31 202  ,cad_g28
19:42:31 203  ,cad_g29
19:42:31 204  ,cad_g30
19:42:31 205  ,cad_g31
19:42:31 206  ,cad_g32
19:42:31 207  ,cad_g33
19:42:31 208  ,cad_g34
19:42:31 209  ,cad_g35
19:42:31 210  ,cad_g36
19:42:31 211  ,cad_g37
19:42:31 212  ,cad_g38
19:42:31 213  ,cad_g39
19:42:31 214  ,cad_g40
19:42:31 215  ,cad_g41
19:42:31 216  ,chf_g00
19:42:31 217  ,chf_g01
19:42:31 218  ,chf_g02
19:42:31 219  ,chf_g03
19:42:31 220  ,chf_g04
19:42:31 221  ,chf_g05
19:42:31 222  ,chf_g06
19:42:31 223  ,chf_g07
19:42:31 224  ,chf_g08
19:42:31 225  ,chf_g09
19:42:31 226  ,chf_g10
19:42:31 227  ,chf_g11
19:42:31 228  ,chf_g12
19:42:31 229  ,chf_g13
19:42:31 230  ,chf_g14
19:42:31 231  ,chf_g15
19:42:31 232  ,chf_g16
19:42:31 233  ,chf_g17
19:42:31 234  ,chf_g18
19:42:31 235  ,chf_g19
19:42:31 236  ,chf_g20
19:42:31 237  ,chf_g21
19:42:31 238  ,chf_g22
19:42:31 239  ,chf_g23
19:42:31 240  ,chf_g24
19:42:31 241  ,chf_g25
19:42:31 242  ,chf_g26
19:42:31 243  ,chf_g27
19:42:31 244  ,chf_g28
19:42:31 245  ,chf_g29
19:42:31 246  ,chf_g30
19:42:31 247  ,chf_g31
19:42:31 248  ,chf_g32
19:42:31 249  ,chf_g33
19:42:31 250  ,chf_g34
19:42:31 251  ,chf_g35
19:42:31 252  ,chf_g36
19:42:31 253  ,chf_g37
19:42:31 254  ,chf_g38
19:42:31 255  ,chf_g39
19:42:31 256  ,chf_g40
19:42:31 257  ,chf_g41
19:42:31 258  FROM aud_ms6 m
19:42:31 259  WHERE gatt IN('nup','up')
19:42:31 260  AND 1+m.ydate < '&1'||' '||'&2'
19:42:31 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'19:20:00'

View created.

Elapsed: 00:00:00.21
19:42:32 SQL> 
19:42:32 SQL> -- rpt
19:42:32 SQL> 
19:42:32 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
19:42:32   2  
19:42:32 SQL> SELECT MAX(prdate) FROM bme
19:42:32   2  
19:42:32 SQL> -- Now build model from bme and score sme
19:42:32 SQL> @score1.sql
19:42:32 SQL> -- score1.sql
19:42:32 SQL> 
19:42:32 SQL> -- Does the 1st SVM score
19:42:32 SQL> 
19:42:32 SQL> -- Fill up svmc_apply_prep
19:42:32 SQL> @score.sql
19:42:32 SQL> --
19:42:32 SQL> -- score.sql
19:42:32 SQL> --
19:42:32 SQL> 
19:42:32 SQL> -- usage: score.sql
19:42:32 SQL> 
19:42:32 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
19:42:32 SQL> 
19:42:32 SQL> DEFINE target	= 'gatt'
19:42:32 SQL> DEFINE model_name = 'forex14'
19:42:32 SQL> DEFINE bldtable	= 'bme'
19:42:32 SQL> DEFINE scoretable = 'sme'
19:42:32 SQL> DEFINE case_id	= 'prdate'
19:42:32 SQL> 
19:42:32 SQL> -- Define a variable to help me exclude some columns from some data mining calls
19:42:32 SQL> DEFINE exclude1 = "'&target','&case_id'"
19:42:32 SQL> 
19:42:32 SQL> -- Builds an SVM model using pl/sql.
19:42:32 SQL> 
19:42:32 SQL> -----------------------------------------------------------------------
19:42:32 SQL> --			    BUILD THE MODEL
19:42:32 SQL> -----------------------------------------------------------------------
19:42:32 SQL> 
19:42:32 SQL> -- Cleanup old build data preparation objects for repeat runs
19:42:32 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
19:42:32 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
19:42:32 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
19:42:32 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
19:42:32 SQL> 
19:42:32 SQL> 
19:42:32 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
19:42:32 SQL> --
19:42:32 SQL> -- DROP	TABLE svmc_settings ;
19:42:32 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
19:42:32 SQL> -- DELETE svmc_settings;
19:42:32 SQL> 
19:42:32 SQL> -- The default classification algorithm is Naive Bayes. So override
19:42:32 SQL> -- this choice to SVM using a settings table.
19:42:32 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
19:42:32 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
19:42:32 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
19:42:32 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
19:42:32 SQL> -- models.
19:42:32 SQL> --
19:42:32 SQL> 
19:42:32 SQL> -- Do this once and then comment it out.
19:42:32 SQL> -- That makes script go faster.
19:42:32 SQL> -- BEGIN
19:42:32 SQL> -- -- Populate settings table
19:42:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:42:32 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
19:42:32 SQL> --
19:42:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:42:32 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
19:42:32 SQL> --
19:42:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:42:32 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
19:42:32 SQL> --   COMMIT;
19:42:32 SQL> -- END;
19:42:32 SQL> -- /
19:42:32 SQL> 
19:42:32 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
19:42:32 SQL> 
19:42:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
19:42:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:42:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
19:42:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
19:42:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:42:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:42:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
19:42:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:42:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:42:32 SQL> 
19:42:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
19:42:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:42:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:42:32 SQL> 
19:42:32 SQL> --------------------------------
19:42:32 SQL> -- PREPARE BUILD (TRAINING) DATA
19:42:32 SQL> --
19:42:32 SQL> 
19:42:32 SQL> -- 1. Missing Value treatment for all Predictors and
19:42:32 SQL> -- 2. Outlier Treatment and
19:42:32 SQL> -- 3. Normalization are performed below.
19:42:32 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
19:42:32 SQL> --    normalized here.
19:42:32 SQL> 
19:42:32 SQL> BEGIN
19:42:32   2  	-- Perform missing value treatment for all predictors
19:42:32   3  	-- create miss tables
19:42:32   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
19:42:32   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
19:42:32   6  
19:42:32   7  	-- populate miss tables
19:42:32   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
19:42:32   9  	  miss_table_name => 'svmc_miss_num',
19:42:32  10  	  data_table_name => '&bldtable',
19:42:32  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:42:32  12  
19:42:32  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
19:42:32  14  	  miss_table_name => 'svmc_miss_cat',
19:42:32  15  	  data_table_name => '&bldtable',
19:42:32  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:42:32  17  
19:42:32  18  	-- xform input data to replace missing values
19:42:32  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:42:32  20  	  miss_table_name => 'svmc_miss_num',
19:42:32  21  	  data_table_name => '&bldtable',
19:42:32  22  	  xform_view_name => 'xformed_build_miss_num');
19:42:32  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:42:32  24  	  miss_table_name => 'svmc_miss_cat',
19:42:32  25  	  data_table_name => '&bldtable',
19:42:32  26  	  xform_view_name => 'xformed_build_miss_cat');
19:42:32  27  
19:42:32  28  	-- Perform outlier treatment.
19:42:32  29  	-- create clip table
19:42:32  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
19:42:32  31  
19:42:32  32  	-- populate clip table
19:42:32  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
19:42:32  34  	  clip_table_name => 'svmc_clip',
19:42:32  35  	  data_table_name => '&bldtable',
19:42:32  36  	  tail_frac	  => 0.025,
19:42:32  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:42:32  38  
19:42:32  39  	-- xform input data to winsorized data
19:42:32  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
19:42:32  41  	  clip_table_name => 'svmc_clip',
19:42:32  42  	  data_table_name => '&bldtable',
19:42:32  43  	  xform_view_name => 'svmc_winsor');
19:42:32  44  
19:42:32  45  	-- create normalization table
19:42:32  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
19:42:32  47  
19:42:32  48  	-- populate normalization table based on winsorized data
19:42:32  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
19:42:32  50  	  norm_table_name => 'svmc_norm',
19:42:32  51  	  data_table_name => 'svmc_winsor',
19:42:32  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:42:32  53  
19:42:32  54  	-- normalize the original data
19:42:32  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:42:32  56  	  norm_table_name => 'svmc_norm',
19:42:32  57  	  data_table_name => '&bldtable',
19:42:32  58  	  xform_view_name => 'svmc_build_prep');
19:42:32  59  END;
19:42:32  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.11
19:42:51 SQL> 
19:42:51 SQL> ---------------------
19:42:51 SQL> -- CREATE A NEW MODEL
19:42:51 SQL> --
19:42:51 SQL> -- Cleanup old model with the same name for repeat runs
19:42:51 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
19:42:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:42:51   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.76
19:42:52 SQL> 
19:42:52 SQL> -- Build a new SVM Model
19:42:52 SQL> BEGIN
19:42:52   2  	DBMS_DATA_MINING.CREATE_MODEL(
19:42:52   3  	  model_name	      => '&model_name',
19:42:52   4  	  mining_function     => dbms_data_mining.classification,
19:42:52   5  	  data_table_name     => 'svmc_build_prep',
19:42:52   6  	  case_id_column_name => '&case_id',
19:42:52   7  	  target_column_name  => '&target',
19:42:52   8  	  settings_table_name => 'svmc_settings');
19:42:52   9  END;
19:42:52  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:37.12
19:43:29 SQL> 
19:43:29 SQL> -----------------------------------------------------------------------
19:43:29 SQL> --			       APPLY/score THE MODEL
19:43:29 SQL> -----------------------------------------------------------------------
19:43:29 SQL> 
19:43:29 SQL> -- Cleanup old scoring data preparation objects for repeat runs
19:43:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
19:43:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:43:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:43:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
19:43:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:43:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
19:43:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
19:43:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:43:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
19:43:29 SQL> -----------------------
19:43:29 SQL> -- PREPARE SCORING DATA
19:43:29 SQL> --
19:43:29 SQL> -- If the data for model creation has been prepared, then the data
19:43:29 SQL> -- to be scored using the model must be prepared in the same manner
19:43:29 SQL> -- in order to obtain meaningful results.
19:43:29 SQL> --
19:43:29 SQL> -- 1. Missing Value treatment for all Predictors and
19:43:29 SQL> -- 2. Normalization
19:43:29 SQL> -- No outlier treatment will be performed during test and apply. The
19:43:29 SQL> -- normalization step is sufficient, since the normalization parameters
19:43:29 SQL> -- already capture the effects of outlier treatment done with build data.
19:43:29 SQL> --
19:43:29 SQL> BEGIN
19:43:29   2  	-- Xform Test data to replace missing values
19:43:29   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:43:29   4  	  miss_table_name => 'svmc_miss_num',
19:43:29   5  	  data_table_name => '&scoretable',
19:43:29   6  	  xform_view_name => 'xformed_apply_miss_num');
19:43:29   7  
19:43:29   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:43:29   9  	  miss_table_name => 'svmc_miss_cat',
19:43:29  10  	  data_table_name => '&scoretable',
19:43:29  11  	  xform_view_name => 'xformed_apply_miss_cat');
19:43:29  12  
19:43:29  13  	-- Normalize the data to be scored
19:43:29  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:43:29  15  	  norm_table_name => 'svmc_norm',
19:43:29  16  	  data_table_name => '&scoretable',
19:43:29  17  	  xform_view_name => 'svmc_apply_prep');
19:43:29  18  END;
19:43:29  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.34
19:43:31 SQL> 
19:43:31 SQL> -- Use same model_name used in score.sql
19:43:31 SQL> DEFINE model_name = 'forex14'
19:43:31 SQL> 
19:43:31 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
19:43:31 SQL> 
19:43:31 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.12
19:43:31 SQL> 
19:43:31 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
19:43:31   2  SELECT
19:43:31   3  prdate
19:43:31   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
19:43:31   5  ,sysdate
19:43:31   6  ,SUBSTR(prdate,1,3)pair
19:43:31   7  ,SUBSTR(prdate,4,19)ydate
19:43:31   8  FROM svmc_apply_prep
19:43:31   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.36
19:43:31 SQL> @aud_score1day.sql  2011-01-03 19:25:00
19:43:31 SQL> --
19:43:31 SQL> -- aud_score1day.sql
19:43:31 SQL> --
19:43:31 SQL> 
19:43:31 SQL> CREATE OR REPLACE VIEW sme AS
19:43:31   2  SELECT
19:43:31   3  'aud'||m.ydate prdate
19:43:31   4  ,NULL gatt
19:43:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:43:31   6  ,eur_g00
19:43:31   7  ,eur_g01
19:43:31   8  ,eur_g02
19:43:31   9  ,eur_g03
19:43:31  10  ,eur_g04
19:43:31  11  ,eur_g05
19:43:31  12  ,eur_g06
19:43:31  13  ,eur_g07
19:43:31  14  ,eur_g08
19:43:31  15  ,eur_g09
19:43:31  16  ,eur_g10
19:43:31  17  ,eur_g11
19:43:31  18  ,eur_g12
19:43:31  19  ,eur_g13
19:43:31  20  ,eur_g14
19:43:31  21  ,eur_g15
19:43:31  22  ,eur_g16
19:43:31  23  ,eur_g17
19:43:31  24  ,eur_g18
19:43:31  25  ,eur_g19
19:43:31  26  ,eur_g20
19:43:31  27  ,eur_g21
19:43:31  28  ,eur_g22
19:43:31  29  ,eur_g23
19:43:31  30  ,eur_g24
19:43:31  31  ,eur_g25
19:43:31  32  ,eur_g26
19:43:31  33  ,eur_g27
19:43:31  34  ,eur_g28
19:43:31  35  ,eur_g29
19:43:31  36  ,eur_g30
19:43:31  37  ,eur_g31
19:43:31  38  ,eur_g32
19:43:31  39  ,eur_g33
19:43:31  40  ,eur_g34
19:43:31  41  ,eur_g35
19:43:31  42  ,eur_g36
19:43:31  43  ,eur_g37
19:43:31  44  ,eur_g38
19:43:31  45  ,eur_g39
19:43:31  46  ,eur_g40
19:43:31  47  ,eur_g41
19:43:31  48  ,aud_g00
19:43:31  49  ,aud_g01
19:43:31  50  ,aud_g02
19:43:31  51  ,aud_g03
19:43:31  52  ,aud_g04
19:43:31  53  ,aud_g05
19:43:31  54  ,aud_g06
19:43:31  55  ,aud_g07
19:43:31  56  ,aud_g08
19:43:31  57  ,aud_g09
19:43:31  58  ,aud_g10
19:43:31  59  ,aud_g11
19:43:31  60  ,aud_g12
19:43:31  61  ,aud_g13
19:43:31  62  ,aud_g14
19:43:31  63  ,aud_g15
19:43:31  64  ,aud_g16
19:43:31  65  ,aud_g17
19:43:31  66  ,aud_g18
19:43:31  67  ,aud_g19
19:43:31  68  ,aud_g20
19:43:31  69  ,aud_g21
19:43:31  70  ,aud_g22
19:43:31  71  ,aud_g23
19:43:31  72  ,aud_g24
19:43:31  73  ,aud_g25
19:43:31  74  ,aud_g26
19:43:31  75  ,aud_g27
19:43:31  76  ,aud_g28
19:43:31  77  ,aud_g29
19:43:31  78  ,aud_g30
19:43:31  79  ,aud_g31
19:43:31  80  ,aud_g32
19:43:31  81  ,aud_g33
19:43:31  82  ,aud_g34
19:43:31  83  ,aud_g35
19:43:31  84  ,aud_g36
19:43:31  85  ,aud_g37
19:43:31  86  ,aud_g38
19:43:31  87  ,aud_g39
19:43:31  88  ,aud_g40
19:43:31  89  ,aud_g41
19:43:31  90  ,gbp_g00
19:43:31  91  ,gbp_g01
19:43:31  92  ,gbp_g02
19:43:31  93  ,gbp_g03
19:43:31  94  ,gbp_g04
19:43:31  95  ,gbp_g05
19:43:31  96  ,gbp_g06
19:43:31  97  ,gbp_g07
19:43:31  98  ,gbp_g08
19:43:31  99  ,gbp_g09
19:43:31 100  ,gbp_g10
19:43:31 101  ,gbp_g11
19:43:31 102  ,gbp_g12
19:43:31 103  ,gbp_g13
19:43:31 104  ,gbp_g14
19:43:31 105  ,gbp_g15
19:43:31 106  ,gbp_g16
19:43:31 107  ,gbp_g17
19:43:31 108  ,gbp_g18
19:43:31 109  ,gbp_g19
19:43:31 110  ,gbp_g20
19:43:31 111  ,gbp_g21
19:43:31 112  ,gbp_g22
19:43:31 113  ,gbp_g23
19:43:31 114  ,gbp_g24
19:43:31 115  ,gbp_g25
19:43:31 116  ,gbp_g26
19:43:31 117  ,gbp_g27
19:43:31 118  ,gbp_g28
19:43:31 119  ,gbp_g29
19:43:31 120  ,gbp_g30
19:43:31 121  ,gbp_g31
19:43:31 122  ,gbp_g32
19:43:31 123  ,gbp_g33
19:43:31 124  ,gbp_g34
19:43:31 125  ,gbp_g35
19:43:31 126  ,gbp_g36
19:43:31 127  ,gbp_g37
19:43:31 128  ,gbp_g38
19:43:31 129  ,gbp_g39
19:43:31 130  ,gbp_g40
19:43:31 131  ,gbp_g41
19:43:31 132  ,jpy_g00
19:43:31 133  ,jpy_g01
19:43:31 134  ,jpy_g02
19:43:31 135  ,jpy_g03
19:43:31 136  ,jpy_g04
19:43:31 137  ,jpy_g05
19:43:31 138  ,jpy_g06
19:43:31 139  ,jpy_g07
19:43:31 140  ,jpy_g08
19:43:31 141  ,jpy_g09
19:43:31 142  ,jpy_g10
19:43:31 143  ,jpy_g11
19:43:31 144  ,jpy_g12
19:43:31 145  ,jpy_g13
19:43:31 146  ,jpy_g14
19:43:31 147  ,jpy_g15
19:43:31 148  ,jpy_g16
19:43:31 149  ,jpy_g17
19:43:31 150  ,jpy_g18
19:43:31 151  ,jpy_g19
19:43:31 152  ,jpy_g20
19:43:31 153  ,jpy_g21
19:43:31 154  ,jpy_g22
19:43:31 155  ,jpy_g23
19:43:31 156  ,jpy_g24
19:43:31 157  ,jpy_g25
19:43:31 158  ,jpy_g26
19:43:31 159  ,jpy_g27
19:43:31 160  ,jpy_g28
19:43:31 161  ,jpy_g29
19:43:31 162  ,jpy_g30
19:43:31 163  ,jpy_g31
19:43:31 164  ,jpy_g32
19:43:31 165  ,jpy_g33
19:43:31 166  ,jpy_g34
19:43:31 167  ,jpy_g35
19:43:31 168  ,jpy_g36
19:43:31 169  ,jpy_g37
19:43:31 170  ,jpy_g38
19:43:31 171  ,jpy_g39
19:43:31 172  ,jpy_g40
19:43:31 173  ,jpy_g41
19:43:31 174  ,cad_g00
19:43:31 175  ,cad_g01
19:43:31 176  ,cad_g02
19:43:31 177  ,cad_g03
19:43:31 178  ,cad_g04
19:43:31 179  ,cad_g05
19:43:31 180  ,cad_g06
19:43:31 181  ,cad_g07
19:43:31 182  ,cad_g08
19:43:31 183  ,cad_g09
19:43:31 184  ,cad_g10
19:43:31 185  ,cad_g11
19:43:31 186  ,cad_g12
19:43:31 187  ,cad_g13
19:43:31 188  ,cad_g14
19:43:31 189  ,cad_g15
19:43:31 190  ,cad_g16
19:43:31 191  ,cad_g17
19:43:31 192  ,cad_g18
19:43:31 193  ,cad_g19
19:43:31 194  ,cad_g20
19:43:31 195  ,cad_g21
19:43:31 196  ,cad_g22
19:43:31 197  ,cad_g23
19:43:31 198  ,cad_g24
19:43:31 199  ,cad_g25
19:43:31 200  ,cad_g26
19:43:31 201  ,cad_g27
19:43:31 202  ,cad_g28
19:43:31 203  ,cad_g29
19:43:31 204  ,cad_g30
19:43:31 205  ,cad_g31
19:43:31 206  ,cad_g32
19:43:31 207  ,cad_g33
19:43:31 208  ,cad_g34
19:43:31 209  ,cad_g35
19:43:31 210  ,cad_g36
19:43:31 211  ,cad_g37
19:43:31 212  ,cad_g38
19:43:31 213  ,cad_g39
19:43:31 214  ,cad_g40
19:43:31 215  ,cad_g41
19:43:31 216  ,chf_g00
19:43:31 217  ,chf_g01
19:43:31 218  ,chf_g02
19:43:31 219  ,chf_g03
19:43:31 220  ,chf_g04
19:43:31 221  ,chf_g05
19:43:31 222  ,chf_g06
19:43:31 223  ,chf_g07
19:43:31 224  ,chf_g08
19:43:31 225  ,chf_g09
19:43:31 226  ,chf_g10
19:43:31 227  ,chf_g11
19:43:31 228  ,chf_g12
19:43:31 229  ,chf_g13
19:43:31 230  ,chf_g14
19:43:31 231  ,chf_g15
19:43:31 232  ,chf_g16
19:43:31 233  ,chf_g17
19:43:31 234  ,chf_g18
19:43:31 235  ,chf_g19
19:43:31 236  ,chf_g20
19:43:31 237  ,chf_g21
19:43:31 238  ,chf_g22
19:43:31 239  ,chf_g23
19:43:31 240  ,chf_g24
19:43:31 241  ,chf_g25
19:43:31 242  ,chf_g26
19:43:31 243  ,chf_g27
19:43:31 244  ,chf_g28
19:43:31 245  ,chf_g29
19:43:31 246  ,chf_g30
19:43:31 247  ,chf_g31
19:43:31 248  ,chf_g32
19:43:31 249  ,chf_g33
19:43:31 250  ,chf_g34
19:43:31 251  ,chf_g35
19:43:31 252  ,chf_g36
19:43:31 253  ,chf_g37
19:43:31 254  ,chf_g38
19:43:31 255  ,chf_g39
19:43:31 256  ,chf_g40
19:43:31 257  ,chf_g41
19:43:31 258  FROM aud_ms6 m
19:43:31 259  WHERE m.ydate = '&1'||' '||'&2'
19:43:31 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'19:25:00'

View created.

Elapsed: 00:00:00.16
19:43:31 SQL> 
19:43:31 SQL> -- rpt
19:43:31 SQL> -- We should see just 1 row:
19:43:31 SQL> 
19:43:31 SQL> SELECT COUNT(prdate) FROM sme
19:43:31   2  
19:43:31 SQL> -- Build the model:
19:43:31 SQL> CREATE OR REPLACE VIEW bme AS
19:43:31   2  SELECT
19:43:31   3  'aud'||m.ydate prdate
19:43:31   4  ,gatt
19:43:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:43:31   6  ,eur_g00
19:43:31   7  ,eur_g01
19:43:31   8  ,eur_g02
19:43:31   9  ,eur_g03
19:43:31  10  ,eur_g04
19:43:31  11  ,eur_g05
19:43:31  12  ,eur_g06
19:43:31  13  ,eur_g07
19:43:31  14  ,eur_g08
19:43:31  15  ,eur_g09
19:43:31  16  ,eur_g10
19:43:31  17  ,eur_g11
19:43:31  18  ,eur_g12
19:43:31  19  ,eur_g13
19:43:31  20  ,eur_g14
19:43:31  21  ,eur_g15
19:43:31  22  ,eur_g16
19:43:31  23  ,eur_g17
19:43:31  24  ,eur_g18
19:43:31  25  ,eur_g19
19:43:31  26  ,eur_g20
19:43:31  27  ,eur_g21
19:43:31  28  ,eur_g22
19:43:31  29  ,eur_g23
19:43:31  30  ,eur_g24
19:43:31  31  ,eur_g25
19:43:31  32  ,eur_g26
19:43:31  33  ,eur_g27
19:43:31  34  ,eur_g28
19:43:31  35  ,eur_g29
19:43:31  36  ,eur_g30
19:43:31  37  ,eur_g31
19:43:31  38  ,eur_g32
19:43:31  39  ,eur_g33
19:43:31  40  ,eur_g34
19:43:31  41  ,eur_g35
19:43:31  42  ,eur_g36
19:43:31  43  ,eur_g37
19:43:31  44  ,eur_g38
19:43:31  45  ,eur_g39
19:43:31  46  ,eur_g40
19:43:31  47  ,eur_g41
19:43:31  48  ,aud_g00
19:43:31  49  ,aud_g01
19:43:31  50  ,aud_g02
19:43:31  51  ,aud_g03
19:43:31  52  ,aud_g04
19:43:31  53  ,aud_g05
19:43:31  54  ,aud_g06
19:43:31  55  ,aud_g07
19:43:31  56  ,aud_g08
19:43:31  57  ,aud_g09
19:43:31  58  ,aud_g10
19:43:31  59  ,aud_g11
19:43:31  60  ,aud_g12
19:43:31  61  ,aud_g13
19:43:31  62  ,aud_g14
19:43:31  63  ,aud_g15
19:43:31  64  ,aud_g16
19:43:31  65  ,aud_g17
19:43:31  66  ,aud_g18
19:43:31  67  ,aud_g19
19:43:31  68  ,aud_g20
19:43:31  69  ,aud_g21
19:43:31  70  ,aud_g22
19:43:31  71  ,aud_g23
19:43:31  72  ,aud_g24
19:43:31  73  ,aud_g25
19:43:31  74  ,aud_g26
19:43:31  75  ,aud_g27
19:43:31  76  ,aud_g28
19:43:31  77  ,aud_g29
19:43:31  78  ,aud_g30
19:43:31  79  ,aud_g31
19:43:31  80  ,aud_g32
19:43:31  81  ,aud_g33
19:43:31  82  ,aud_g34
19:43:31  83  ,aud_g35
19:43:31  84  ,aud_g36
19:43:31  85  ,aud_g37
19:43:31  86  ,aud_g38
19:43:31  87  ,aud_g39
19:43:31  88  ,aud_g40
19:43:31  89  ,aud_g41
19:43:31  90  ,gbp_g00
19:43:31  91  ,gbp_g01
19:43:31  92  ,gbp_g02
19:43:31  93  ,gbp_g03
19:43:31  94  ,gbp_g04
19:43:31  95  ,gbp_g05
19:43:31  96  ,gbp_g06
19:43:31  97  ,gbp_g07
19:43:31  98  ,gbp_g08
19:43:31  99  ,gbp_g09
19:43:31 100  ,gbp_g10
19:43:31 101  ,gbp_g11
19:43:31 102  ,gbp_g12
19:43:31 103  ,gbp_g13
19:43:31 104  ,gbp_g14
19:43:31 105  ,gbp_g15
19:43:31 106  ,gbp_g16
19:43:31 107  ,gbp_g17
19:43:31 108  ,gbp_g18
19:43:31 109  ,gbp_g19
19:43:31 110  ,gbp_g20
19:43:31 111  ,gbp_g21
19:43:31 112  ,gbp_g22
19:43:31 113  ,gbp_g23
19:43:31 114  ,gbp_g24
19:43:31 115  ,gbp_g25
19:43:31 116  ,gbp_g26
19:43:31 117  ,gbp_g27
19:43:31 118  ,gbp_g28
19:43:31 119  ,gbp_g29
19:43:31 120  ,gbp_g30
19:43:31 121  ,gbp_g31
19:43:31 122  ,gbp_g32
19:43:31 123  ,gbp_g33
19:43:31 124  ,gbp_g34
19:43:31 125  ,gbp_g35
19:43:31 126  ,gbp_g36
19:43:31 127  ,gbp_g37
19:43:31 128  ,gbp_g38
19:43:31 129  ,gbp_g39
19:43:31 130  ,gbp_g40
19:43:31 131  ,gbp_g41
19:43:31 132  ,jpy_g00
19:43:31 133  ,jpy_g01
19:43:31 134  ,jpy_g02
19:43:31 135  ,jpy_g03
19:43:31 136  ,jpy_g04
19:43:31 137  ,jpy_g05
19:43:31 138  ,jpy_g06
19:43:31 139  ,jpy_g07
19:43:31 140  ,jpy_g08
19:43:31 141  ,jpy_g09
19:43:31 142  ,jpy_g10
19:43:31 143  ,jpy_g11
19:43:31 144  ,jpy_g12
19:43:31 145  ,jpy_g13
19:43:31 146  ,jpy_g14
19:43:31 147  ,jpy_g15
19:43:31 148  ,jpy_g16
19:43:31 149  ,jpy_g17
19:43:31 150  ,jpy_g18
19:43:31 151  ,jpy_g19
19:43:31 152  ,jpy_g20
19:43:31 153  ,jpy_g21
19:43:31 154  ,jpy_g22
19:43:31 155  ,jpy_g23
19:43:31 156  ,jpy_g24
19:43:31 157  ,jpy_g25
19:43:31 158  ,jpy_g26
19:43:31 159  ,jpy_g27
19:43:31 160  ,jpy_g28
19:43:31 161  ,jpy_g29
19:43:31 162  ,jpy_g30
19:43:31 163  ,jpy_g31
19:43:31 164  ,jpy_g32
19:43:31 165  ,jpy_g33
19:43:31 166  ,jpy_g34
19:43:31 167  ,jpy_g35
19:43:31 168  ,jpy_g36
19:43:31 169  ,jpy_g37
19:43:31 170  ,jpy_g38
19:43:31 171  ,jpy_g39
19:43:31 172  ,jpy_g40
19:43:31 173  ,jpy_g41
19:43:31 174  ,cad_g00
19:43:31 175  ,cad_g01
19:43:31 176  ,cad_g02
19:43:31 177  ,cad_g03
19:43:31 178  ,cad_g04
19:43:31 179  ,cad_g05
19:43:31 180  ,cad_g06
19:43:31 181  ,cad_g07
19:43:31 182  ,cad_g08
19:43:31 183  ,cad_g09
19:43:31 184  ,cad_g10
19:43:31 185  ,cad_g11
19:43:31 186  ,cad_g12
19:43:31 187  ,cad_g13
19:43:31 188  ,cad_g14
19:43:31 189  ,cad_g15
19:43:31 190  ,cad_g16
19:43:31 191  ,cad_g17
19:43:31 192  ,cad_g18
19:43:31 193  ,cad_g19
19:43:31 194  ,cad_g20
19:43:31 195  ,cad_g21
19:43:31 196  ,cad_g22
19:43:31 197  ,cad_g23
19:43:31 198  ,cad_g24
19:43:31 199  ,cad_g25
19:43:31 200  ,cad_g26
19:43:31 201  ,cad_g27
19:43:31 202  ,cad_g28
19:43:31 203  ,cad_g29
19:43:31 204  ,cad_g30
19:43:31 205  ,cad_g31
19:43:31 206  ,cad_g32
19:43:31 207  ,cad_g33
19:43:31 208  ,cad_g34
19:43:31 209  ,cad_g35
19:43:31 210  ,cad_g36
19:43:31 211  ,cad_g37
19:43:31 212  ,cad_g38
19:43:31 213  ,cad_g39
19:43:31 214  ,cad_g40
19:43:31 215  ,cad_g41
19:43:31 216  ,chf_g00
19:43:31 217  ,chf_g01
19:43:31 218  ,chf_g02
19:43:31 219  ,chf_g03
19:43:31 220  ,chf_g04
19:43:31 221  ,chf_g05
19:43:31 222  ,chf_g06
19:43:31 223  ,chf_g07
19:43:31 224  ,chf_g08
19:43:31 225  ,chf_g09
19:43:31 226  ,chf_g10
19:43:31 227  ,chf_g11
19:43:31 228  ,chf_g12
19:43:31 229  ,chf_g13
19:43:31 230  ,chf_g14
19:43:31 231  ,chf_g15
19:43:31 232  ,chf_g16
19:43:31 233  ,chf_g17
19:43:31 234  ,chf_g18
19:43:31 235  ,chf_g19
19:43:31 236  ,chf_g20
19:43:31 237  ,chf_g21
19:43:31 238  ,chf_g22
19:43:31 239  ,chf_g23
19:43:31 240  ,chf_g24
19:43:31 241  ,chf_g25
19:43:31 242  ,chf_g26
19:43:31 243  ,chf_g27
19:43:31 244  ,chf_g28
19:43:31 245  ,chf_g29
19:43:31 246  ,chf_g30
19:43:31 247  ,chf_g31
19:43:31 248  ,chf_g32
19:43:31 249  ,chf_g33
19:43:31 250  ,chf_g34
19:43:31 251  ,chf_g35
19:43:31 252  ,chf_g36
19:43:31 253  ,chf_g37
19:43:31 254  ,chf_g38
19:43:31 255  ,chf_g39
19:43:31 256  ,chf_g40
19:43:31 257  ,chf_g41
19:43:31 258  FROM aud_ms6 m
19:43:31 259  WHERE gatt IN('nup','up')
19:43:31 260  AND 1+m.ydate < '&1'||' '||'&2'
19:43:31 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'19:25:00'

View created.

Elapsed: 00:00:00.17
19:43:31 SQL> 
19:43:31 SQL> -- rpt
19:43:31 SQL> 
19:43:31 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
19:43:31   2  
19:43:31 SQL> SELECT MAX(prdate) FROM bme
19:43:31   2  
19:43:31 SQL> -- Now build model from bme and score sme
19:43:31 SQL> @score1.sql
19:43:31 SQL> -- score1.sql
19:43:31 SQL> 
19:43:31 SQL> -- Does the 1st SVM score
19:43:31 SQL> 
19:43:31 SQL> -- Fill up svmc_apply_prep
19:43:31 SQL> @score.sql
19:43:31 SQL> --
19:43:31 SQL> -- score.sql
19:43:31 SQL> --
19:43:31 SQL> 
19:43:31 SQL> -- usage: score.sql
19:43:31 SQL> 
19:43:31 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
19:43:31 SQL> 
19:43:31 SQL> DEFINE target	= 'gatt'
19:43:31 SQL> DEFINE model_name = 'forex14'
19:43:31 SQL> DEFINE bldtable	= 'bme'
19:43:31 SQL> DEFINE scoretable = 'sme'
19:43:31 SQL> DEFINE case_id	= 'prdate'
19:43:31 SQL> 
19:43:31 SQL> -- Define a variable to help me exclude some columns from some data mining calls
19:43:31 SQL> DEFINE exclude1 = "'&target','&case_id'"
19:43:31 SQL> 
19:43:31 SQL> -- Builds an SVM model using pl/sql.
19:43:31 SQL> 
19:43:31 SQL> -----------------------------------------------------------------------
19:43:31 SQL> --			    BUILD THE MODEL
19:43:31 SQL> -----------------------------------------------------------------------
19:43:31 SQL> 
19:43:31 SQL> -- Cleanup old build data preparation objects for repeat runs
19:43:31 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
19:43:31 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
19:43:31 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
19:43:31 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.04
19:43:32 SQL> 
19:43:32 SQL> 
19:43:32 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
19:43:32 SQL> --
19:43:32 SQL> -- DROP	TABLE svmc_settings ;
19:43:32 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
19:43:32 SQL> -- DELETE svmc_settings;
19:43:32 SQL> 
19:43:32 SQL> -- The default classification algorithm is Naive Bayes. So override
19:43:32 SQL> -- this choice to SVM using a settings table.
19:43:32 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
19:43:32 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
19:43:32 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
19:43:32 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
19:43:32 SQL> -- models.
19:43:32 SQL> --
19:43:32 SQL> 
19:43:32 SQL> -- Do this once and then comment it out.
19:43:32 SQL> -- That makes script go faster.
19:43:32 SQL> -- BEGIN
19:43:32 SQL> -- -- Populate settings table
19:43:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:43:32 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
19:43:32 SQL> --
19:43:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:43:32 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
19:43:32 SQL> --
19:43:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:43:32 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
19:43:32 SQL> --   COMMIT;
19:43:32 SQL> -- END;
19:43:32 SQL> -- /
19:43:32 SQL> 
19:43:32 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
19:43:32 SQL> 
19:43:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
19:43:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:43:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:43:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
19:43:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:43:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:43:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
19:43:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:43:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
19:43:32 SQL> 
19:43:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
19:43:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:43:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:43:32 SQL> 
19:43:32 SQL> --------------------------------
19:43:32 SQL> -- PREPARE BUILD (TRAINING) DATA
19:43:32 SQL> --
19:43:32 SQL> 
19:43:32 SQL> -- 1. Missing Value treatment for all Predictors and
19:43:32 SQL> -- 2. Outlier Treatment and
19:43:32 SQL> -- 3. Normalization are performed below.
19:43:32 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
19:43:32 SQL> --    normalized here.
19:43:32 SQL> 
19:43:32 SQL> BEGIN
19:43:32   2  	-- Perform missing value treatment for all predictors
19:43:32   3  	-- create miss tables
19:43:32   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
19:43:32   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
19:43:32   6  
19:43:32   7  	-- populate miss tables
19:43:32   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
19:43:32   9  	  miss_table_name => 'svmc_miss_num',
19:43:32  10  	  data_table_name => '&bldtable',
19:43:32  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:43:32  12  
19:43:32  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
19:43:32  14  	  miss_table_name => 'svmc_miss_cat',
19:43:32  15  	  data_table_name => '&bldtable',
19:43:32  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:43:32  17  
19:43:32  18  	-- xform input data to replace missing values
19:43:32  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:43:32  20  	  miss_table_name => 'svmc_miss_num',
19:43:32  21  	  data_table_name => '&bldtable',
19:43:32  22  	  xform_view_name => 'xformed_build_miss_num');
19:43:32  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:43:32  24  	  miss_table_name => 'svmc_miss_cat',
19:43:32  25  	  data_table_name => '&bldtable',
19:43:32  26  	  xform_view_name => 'xformed_build_miss_cat');
19:43:32  27  
19:43:32  28  	-- Perform outlier treatment.
19:43:32  29  	-- create clip table
19:43:32  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
19:43:32  31  
19:43:32  32  	-- populate clip table
19:43:32  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
19:43:32  34  	  clip_table_name => 'svmc_clip',
19:43:32  35  	  data_table_name => '&bldtable',
19:43:32  36  	  tail_frac	  => 0.025,
19:43:32  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:43:32  38  
19:43:32  39  	-- xform input data to winsorized data
19:43:32  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
19:43:32  41  	  clip_table_name => 'svmc_clip',
19:43:32  42  	  data_table_name => '&bldtable',
19:43:32  43  	  xform_view_name => 'svmc_winsor');
19:43:32  44  
19:43:32  45  	-- create normalization table
19:43:32  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
19:43:32  47  
19:43:32  48  	-- populate normalization table based on winsorized data
19:43:32  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
19:43:32  50  	  norm_table_name => 'svmc_norm',
19:43:32  51  	  data_table_name => 'svmc_winsor',
19:43:32  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:43:32  53  
19:43:32  54  	-- normalize the original data
19:43:32  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:43:32  56  	  norm_table_name => 'svmc_norm',
19:43:32  57  	  data_table_name => '&bldtable',
19:43:32  58  	  xform_view_name => 'svmc_build_prep');
19:43:32  59  END;
19:43:32  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.24
19:43:50 SQL> 
19:43:50 SQL> ---------------------
19:43:50 SQL> -- CREATE A NEW MODEL
19:43:50 SQL> --
19:43:50 SQL> -- Cleanup old model with the same name for repeat runs
19:43:50 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
19:43:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:43:50   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.88
19:43:51 SQL> 
19:43:51 SQL> -- Build a new SVM Model
19:43:51 SQL> BEGIN
19:43:51   2  	DBMS_DATA_MINING.CREATE_MODEL(
19:43:51   3  	  model_name	      => '&model_name',
19:43:51   4  	  mining_function     => dbms_data_mining.classification,
19:43:51   5  	  data_table_name     => 'svmc_build_prep',
19:43:51   6  	  case_id_column_name => '&case_id',
19:43:51   7  	  target_column_name  => '&target',
19:43:51   8  	  settings_table_name => 'svmc_settings');
19:43:51   9  END;
19:43:51  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.73
19:44:21 SQL> 
19:44:21 SQL> -----------------------------------------------------------------------
19:44:21 SQL> --			       APPLY/score THE MODEL
19:44:21 SQL> -----------------------------------------------------------------------
19:44:21 SQL> 
19:44:21 SQL> -- Cleanup old scoring data preparation objects for repeat runs
19:44:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
19:44:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:44:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:44:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
19:44:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:44:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:44:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
19:44:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:44:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:44:21 SQL> -----------------------
19:44:21 SQL> -- PREPARE SCORING DATA
19:44:21 SQL> --
19:44:21 SQL> -- If the data for model creation has been prepared, then the data
19:44:21 SQL> -- to be scored using the model must be prepared in the same manner
19:44:21 SQL> -- in order to obtain meaningful results.
19:44:21 SQL> --
19:44:21 SQL> -- 1. Missing Value treatment for all Predictors and
19:44:21 SQL> -- 2. Normalization
19:44:21 SQL> -- No outlier treatment will be performed during test and apply. The
19:44:21 SQL> -- normalization step is sufficient, since the normalization parameters
19:44:21 SQL> -- already capture the effects of outlier treatment done with build data.
19:44:21 SQL> --
19:44:21 SQL> BEGIN
19:44:21   2  	-- Xform Test data to replace missing values
19:44:21   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:44:21   4  	  miss_table_name => 'svmc_miss_num',
19:44:21   5  	  data_table_name => '&scoretable',
19:44:21   6  	  xform_view_name => 'xformed_apply_miss_num');
19:44:21   7  
19:44:21   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:44:21   9  	  miss_table_name => 'svmc_miss_cat',
19:44:21  10  	  data_table_name => '&scoretable',
19:44:21  11  	  xform_view_name => 'xformed_apply_miss_cat');
19:44:21  12  
19:44:21  13  	-- Normalize the data to be scored
19:44:21  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:44:21  15  	  norm_table_name => 'svmc_norm',
19:44:21  16  	  data_table_name => '&scoretable',
19:44:21  17  	  xform_view_name => 'svmc_apply_prep');
19:44:21  18  END;
19:44:21  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.30
19:44:22 SQL> 
19:44:22 SQL> -- Use same model_name used in score.sql
19:44:22 SQL> DEFINE model_name = 'forex14'
19:44:22 SQL> 
19:44:22 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
19:44:22 SQL> 
19:44:22 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.07
19:44:22 SQL> 
19:44:22 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
19:44:22   2  SELECT
19:44:22   3  prdate
19:44:22   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
19:44:22   5  ,sysdate
19:44:22   6  ,SUBSTR(prdate,1,3)pair
19:44:22   7  ,SUBSTR(prdate,4,19)ydate
19:44:22   8  FROM svmc_apply_prep
19:44:22   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
19:44:22 SQL> @aud_score1day.sql  2011-01-03 19:30:00
19:44:22 SQL> --
19:44:22 SQL> -- aud_score1day.sql
19:44:22 SQL> --
19:44:22 SQL> 
19:44:22 SQL> CREATE OR REPLACE VIEW sme AS
19:44:22   2  SELECT
19:44:22   3  'aud'||m.ydate prdate
19:44:22   4  ,NULL gatt
19:44:22   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:44:22   6  ,eur_g00
19:44:22   7  ,eur_g01
19:44:22   8  ,eur_g02
19:44:22   9  ,eur_g03
19:44:22  10  ,eur_g04
19:44:22  11  ,eur_g05
19:44:22  12  ,eur_g06
19:44:22  13  ,eur_g07
19:44:22  14  ,eur_g08
19:44:22  15  ,eur_g09
19:44:22  16  ,eur_g10
19:44:22  17  ,eur_g11
19:44:22  18  ,eur_g12
19:44:22  19  ,eur_g13
19:44:22  20  ,eur_g14
19:44:22  21  ,eur_g15
19:44:22  22  ,eur_g16
19:44:22  23  ,eur_g17
19:44:22  24  ,eur_g18
19:44:22  25  ,eur_g19
19:44:22  26  ,eur_g20
19:44:22  27  ,eur_g21
19:44:22  28  ,eur_g22
19:44:22  29  ,eur_g23
19:44:22  30  ,eur_g24
19:44:22  31  ,eur_g25
19:44:22  32  ,eur_g26
19:44:22  33  ,eur_g27
19:44:22  34  ,eur_g28
19:44:22  35  ,eur_g29
19:44:22  36  ,eur_g30
19:44:22  37  ,eur_g31
19:44:22  38  ,eur_g32
19:44:22  39  ,eur_g33
19:44:22  40  ,eur_g34
19:44:22  41  ,eur_g35
19:44:22  42  ,eur_g36
19:44:22  43  ,eur_g37
19:44:22  44  ,eur_g38
19:44:22  45  ,eur_g39
19:44:22  46  ,eur_g40
19:44:22  47  ,eur_g41
19:44:22  48  ,aud_g00
19:44:22  49  ,aud_g01
19:44:22  50  ,aud_g02
19:44:22  51  ,aud_g03
19:44:22  52  ,aud_g04
19:44:22  53  ,aud_g05
19:44:22  54  ,aud_g06
19:44:22  55  ,aud_g07
19:44:22  56  ,aud_g08
19:44:22  57  ,aud_g09
19:44:22  58  ,aud_g10
19:44:22  59  ,aud_g11
19:44:22  60  ,aud_g12
19:44:22  61  ,aud_g13
19:44:22  62  ,aud_g14
19:44:22  63  ,aud_g15
19:44:22  64  ,aud_g16
19:44:22  65  ,aud_g17
19:44:22  66  ,aud_g18
19:44:22  67  ,aud_g19
19:44:22  68  ,aud_g20
19:44:22  69  ,aud_g21
19:44:22  70  ,aud_g22
19:44:22  71  ,aud_g23
19:44:22  72  ,aud_g24
19:44:22  73  ,aud_g25
19:44:22  74  ,aud_g26
19:44:22  75  ,aud_g27
19:44:22  76  ,aud_g28
19:44:22  77  ,aud_g29
19:44:22  78  ,aud_g30
19:44:22  79  ,aud_g31
19:44:22  80  ,aud_g32
19:44:22  81  ,aud_g33
19:44:22  82  ,aud_g34
19:44:22  83  ,aud_g35
19:44:22  84  ,aud_g36
19:44:22  85  ,aud_g37
19:44:22  86  ,aud_g38
19:44:22  87  ,aud_g39
19:44:22  88  ,aud_g40
19:44:22  89  ,aud_g41
19:44:22  90  ,gbp_g00
19:44:22  91  ,gbp_g01
19:44:22  92  ,gbp_g02
19:44:22  93  ,gbp_g03
19:44:22  94  ,gbp_g04
19:44:22  95  ,gbp_g05
19:44:22  96  ,gbp_g06
19:44:22  97  ,gbp_g07
19:44:22  98  ,gbp_g08
19:44:22  99  ,gbp_g09
19:44:22 100  ,gbp_g10
19:44:22 101  ,gbp_g11
19:44:22 102  ,gbp_g12
19:44:22 103  ,gbp_g13
19:44:22 104  ,gbp_g14
19:44:22 105  ,gbp_g15
19:44:22 106  ,gbp_g16
19:44:22 107  ,gbp_g17
19:44:22 108  ,gbp_g18
19:44:22 109  ,gbp_g19
19:44:22 110  ,gbp_g20
19:44:22 111  ,gbp_g21
19:44:22 112  ,gbp_g22
19:44:22 113  ,gbp_g23
19:44:22 114  ,gbp_g24
19:44:22 115  ,gbp_g25
19:44:22 116  ,gbp_g26
19:44:22 117  ,gbp_g27
19:44:22 118  ,gbp_g28
19:44:22 119  ,gbp_g29
19:44:22 120  ,gbp_g30
19:44:22 121  ,gbp_g31
19:44:22 122  ,gbp_g32
19:44:22 123  ,gbp_g33
19:44:22 124  ,gbp_g34
19:44:22 125  ,gbp_g35
19:44:22 126  ,gbp_g36
19:44:22 127  ,gbp_g37
19:44:22 128  ,gbp_g38
19:44:22 129  ,gbp_g39
19:44:22 130  ,gbp_g40
19:44:22 131  ,gbp_g41
19:44:22 132  ,jpy_g00
19:44:22 133  ,jpy_g01
19:44:22 134  ,jpy_g02
19:44:22 135  ,jpy_g03
19:44:22 136  ,jpy_g04
19:44:22 137  ,jpy_g05
19:44:22 138  ,jpy_g06
19:44:22 139  ,jpy_g07
19:44:22 140  ,jpy_g08
19:44:22 141  ,jpy_g09
19:44:22 142  ,jpy_g10
19:44:22 143  ,jpy_g11
19:44:22 144  ,jpy_g12
19:44:22 145  ,jpy_g13
19:44:22 146  ,jpy_g14
19:44:22 147  ,jpy_g15
19:44:22 148  ,jpy_g16
19:44:22 149  ,jpy_g17
19:44:22 150  ,jpy_g18
19:44:22 151  ,jpy_g19
19:44:22 152  ,jpy_g20
19:44:22 153  ,jpy_g21
19:44:22 154  ,jpy_g22
19:44:22 155  ,jpy_g23
19:44:22 156  ,jpy_g24
19:44:22 157  ,jpy_g25
19:44:22 158  ,jpy_g26
19:44:22 159  ,jpy_g27
19:44:22 160  ,jpy_g28
19:44:22 161  ,jpy_g29
19:44:22 162  ,jpy_g30
19:44:22 163  ,jpy_g31
19:44:22 164  ,jpy_g32
19:44:22 165  ,jpy_g33
19:44:22 166  ,jpy_g34
19:44:22 167  ,jpy_g35
19:44:22 168  ,jpy_g36
19:44:22 169  ,jpy_g37
19:44:22 170  ,jpy_g38
19:44:22 171  ,jpy_g39
19:44:22 172  ,jpy_g40
19:44:22 173  ,jpy_g41
19:44:22 174  ,cad_g00
19:44:22 175  ,cad_g01
19:44:22 176  ,cad_g02
19:44:22 177  ,cad_g03
19:44:22 178  ,cad_g04
19:44:22 179  ,cad_g05
19:44:22 180  ,cad_g06
19:44:22 181  ,cad_g07
19:44:22 182  ,cad_g08
19:44:22 183  ,cad_g09
19:44:22 184  ,cad_g10
19:44:22 185  ,cad_g11
19:44:22 186  ,cad_g12
19:44:22 187  ,cad_g13
19:44:22 188  ,cad_g14
19:44:22 189  ,cad_g15
19:44:22 190  ,cad_g16
19:44:22 191  ,cad_g17
19:44:22 192  ,cad_g18
19:44:22 193  ,cad_g19
19:44:22 194  ,cad_g20
19:44:22 195  ,cad_g21
19:44:22 196  ,cad_g22
19:44:22 197  ,cad_g23
19:44:22 198  ,cad_g24
19:44:22 199  ,cad_g25
19:44:22 200  ,cad_g26
19:44:22 201  ,cad_g27
19:44:22 202  ,cad_g28
19:44:22 203  ,cad_g29
19:44:22 204  ,cad_g30
19:44:22 205  ,cad_g31
19:44:22 206  ,cad_g32
19:44:22 207  ,cad_g33
19:44:22 208  ,cad_g34
19:44:22 209  ,cad_g35
19:44:22 210  ,cad_g36
19:44:22 211  ,cad_g37
19:44:22 212  ,cad_g38
19:44:22 213  ,cad_g39
19:44:22 214  ,cad_g40
19:44:22 215  ,cad_g41
19:44:22 216  ,chf_g00
19:44:22 217  ,chf_g01
19:44:22 218  ,chf_g02
19:44:22 219  ,chf_g03
19:44:22 220  ,chf_g04
19:44:22 221  ,chf_g05
19:44:22 222  ,chf_g06
19:44:22 223  ,chf_g07
19:44:22 224  ,chf_g08
19:44:22 225  ,chf_g09
19:44:22 226  ,chf_g10
19:44:22 227  ,chf_g11
19:44:22 228  ,chf_g12
19:44:22 229  ,chf_g13
19:44:22 230  ,chf_g14
19:44:22 231  ,chf_g15
19:44:22 232  ,chf_g16
19:44:22 233  ,chf_g17
19:44:22 234  ,chf_g18
19:44:22 235  ,chf_g19
19:44:22 236  ,chf_g20
19:44:22 237  ,chf_g21
19:44:22 238  ,chf_g22
19:44:22 239  ,chf_g23
19:44:22 240  ,chf_g24
19:44:22 241  ,chf_g25
19:44:22 242  ,chf_g26
19:44:22 243  ,chf_g27
19:44:22 244  ,chf_g28
19:44:22 245  ,chf_g29
19:44:22 246  ,chf_g30
19:44:22 247  ,chf_g31
19:44:22 248  ,chf_g32
19:44:22 249  ,chf_g33
19:44:22 250  ,chf_g34
19:44:22 251  ,chf_g35
19:44:22 252  ,chf_g36
19:44:22 253  ,chf_g37
19:44:22 254  ,chf_g38
19:44:22 255  ,chf_g39
19:44:22 256  ,chf_g40
19:44:22 257  ,chf_g41
19:44:22 258  FROM aud_ms6 m
19:44:22 259  WHERE m.ydate = '&1'||' '||'&2'
19:44:22 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'19:30:00'

View created.

Elapsed: 00:00:00.16
19:44:23 SQL> 
19:44:23 SQL> -- rpt
19:44:23 SQL> -- We should see just 1 row:
19:44:23 SQL> 
19:44:23 SQL> SELECT COUNT(prdate) FROM sme
19:44:23   2  
19:44:23 SQL> -- Build the model:
19:44:23 SQL> CREATE OR REPLACE VIEW bme AS
19:44:23   2  SELECT
19:44:23   3  'aud'||m.ydate prdate
19:44:23   4  ,gatt
19:44:23   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:44:23   6  ,eur_g00
19:44:23   7  ,eur_g01
19:44:23   8  ,eur_g02
19:44:23   9  ,eur_g03
19:44:23  10  ,eur_g04
19:44:23  11  ,eur_g05
19:44:23  12  ,eur_g06
19:44:23  13  ,eur_g07
19:44:23  14  ,eur_g08
19:44:23  15  ,eur_g09
19:44:23  16  ,eur_g10
19:44:23  17  ,eur_g11
19:44:23  18  ,eur_g12
19:44:23  19  ,eur_g13
19:44:23  20  ,eur_g14
19:44:23  21  ,eur_g15
19:44:23  22  ,eur_g16
19:44:23  23  ,eur_g17
19:44:23  24  ,eur_g18
19:44:23  25  ,eur_g19
19:44:23  26  ,eur_g20
19:44:23  27  ,eur_g21
19:44:23  28  ,eur_g22
19:44:23  29  ,eur_g23
19:44:23  30  ,eur_g24
19:44:23  31  ,eur_g25
19:44:23  32  ,eur_g26
19:44:23  33  ,eur_g27
19:44:23  34  ,eur_g28
19:44:23  35  ,eur_g29
19:44:23  36  ,eur_g30
19:44:23  37  ,eur_g31
19:44:23  38  ,eur_g32
19:44:23  39  ,eur_g33
19:44:23  40  ,eur_g34
19:44:23  41  ,eur_g35
19:44:23  42  ,eur_g36
19:44:23  43  ,eur_g37
19:44:23  44  ,eur_g38
19:44:23  45  ,eur_g39
19:44:23  46  ,eur_g40
19:44:23  47  ,eur_g41
19:44:23  48  ,aud_g00
19:44:23  49  ,aud_g01
19:44:23  50  ,aud_g02
19:44:23  51  ,aud_g03
19:44:23  52  ,aud_g04
19:44:23  53  ,aud_g05
19:44:23  54  ,aud_g06
19:44:23  55  ,aud_g07
19:44:23  56  ,aud_g08
19:44:23  57  ,aud_g09
19:44:23  58  ,aud_g10
19:44:23  59  ,aud_g11
19:44:23  60  ,aud_g12
19:44:23  61  ,aud_g13
19:44:23  62  ,aud_g14
19:44:23  63  ,aud_g15
19:44:23  64  ,aud_g16
19:44:23  65  ,aud_g17
19:44:23  66  ,aud_g18
19:44:23  67  ,aud_g19
19:44:23  68  ,aud_g20
19:44:23  69  ,aud_g21
19:44:23  70  ,aud_g22
19:44:23  71  ,aud_g23
19:44:23  72  ,aud_g24
19:44:23  73  ,aud_g25
19:44:23  74  ,aud_g26
19:44:23  75  ,aud_g27
19:44:23  76  ,aud_g28
19:44:23  77  ,aud_g29
19:44:23  78  ,aud_g30
19:44:23  79  ,aud_g31
19:44:23  80  ,aud_g32
19:44:23  81  ,aud_g33
19:44:23  82  ,aud_g34
19:44:23  83  ,aud_g35
19:44:23  84  ,aud_g36
19:44:23  85  ,aud_g37
19:44:23  86  ,aud_g38
19:44:23  87  ,aud_g39
19:44:23  88  ,aud_g40
19:44:23  89  ,aud_g41
19:44:23  90  ,gbp_g00
19:44:23  91  ,gbp_g01
19:44:23  92  ,gbp_g02
19:44:23  93  ,gbp_g03
19:44:23  94  ,gbp_g04
19:44:23  95  ,gbp_g05
19:44:23  96  ,gbp_g06
19:44:23  97  ,gbp_g07
19:44:23  98  ,gbp_g08
19:44:23  99  ,gbp_g09
19:44:23 100  ,gbp_g10
19:44:23 101  ,gbp_g11
19:44:23 102  ,gbp_g12
19:44:23 103  ,gbp_g13
19:44:23 104  ,gbp_g14
19:44:23 105  ,gbp_g15
19:44:23 106  ,gbp_g16
19:44:23 107  ,gbp_g17
19:44:23 108  ,gbp_g18
19:44:23 109  ,gbp_g19
19:44:23 110  ,gbp_g20
19:44:23 111  ,gbp_g21
19:44:23 112  ,gbp_g22
19:44:23 113  ,gbp_g23
19:44:23 114  ,gbp_g24
19:44:23 115  ,gbp_g25
19:44:23 116  ,gbp_g26
19:44:23 117  ,gbp_g27
19:44:23 118  ,gbp_g28
19:44:23 119  ,gbp_g29
19:44:23 120  ,gbp_g30
19:44:23 121  ,gbp_g31
19:44:23 122  ,gbp_g32
19:44:23 123  ,gbp_g33
19:44:23 124  ,gbp_g34
19:44:23 125  ,gbp_g35
19:44:23 126  ,gbp_g36
19:44:23 127  ,gbp_g37
19:44:23 128  ,gbp_g38
19:44:23 129  ,gbp_g39
19:44:23 130  ,gbp_g40
19:44:23 131  ,gbp_g41
19:44:23 132  ,jpy_g00
19:44:23 133  ,jpy_g01
19:44:23 134  ,jpy_g02
19:44:23 135  ,jpy_g03
19:44:23 136  ,jpy_g04
19:44:23 137  ,jpy_g05
19:44:23 138  ,jpy_g06
19:44:23 139  ,jpy_g07
19:44:23 140  ,jpy_g08
19:44:23 141  ,jpy_g09
19:44:23 142  ,jpy_g10
19:44:23 143  ,jpy_g11
19:44:23 144  ,jpy_g12
19:44:23 145  ,jpy_g13
19:44:23 146  ,jpy_g14
19:44:23 147  ,jpy_g15
19:44:23 148  ,jpy_g16
19:44:23 149  ,jpy_g17
19:44:23 150  ,jpy_g18
19:44:23 151  ,jpy_g19
19:44:23 152  ,jpy_g20
19:44:23 153  ,jpy_g21
19:44:23 154  ,jpy_g22
19:44:23 155  ,jpy_g23
19:44:23 156  ,jpy_g24
19:44:23 157  ,jpy_g25
19:44:23 158  ,jpy_g26
19:44:23 159  ,jpy_g27
19:44:23 160  ,jpy_g28
19:44:23 161  ,jpy_g29
19:44:23 162  ,jpy_g30
19:44:23 163  ,jpy_g31
19:44:23 164  ,jpy_g32
19:44:23 165  ,jpy_g33
19:44:23 166  ,jpy_g34
19:44:23 167  ,jpy_g35
19:44:23 168  ,jpy_g36
19:44:23 169  ,jpy_g37
19:44:23 170  ,jpy_g38
19:44:23 171  ,jpy_g39
19:44:23 172  ,jpy_g40
19:44:23 173  ,jpy_g41
19:44:23 174  ,cad_g00
19:44:23 175  ,cad_g01
19:44:23 176  ,cad_g02
19:44:23 177  ,cad_g03
19:44:23 178  ,cad_g04
19:44:23 179  ,cad_g05
19:44:23 180  ,cad_g06
19:44:23 181  ,cad_g07
19:44:23 182  ,cad_g08
19:44:23 183  ,cad_g09
19:44:23 184  ,cad_g10
19:44:23 185  ,cad_g11
19:44:23 186  ,cad_g12
19:44:23 187  ,cad_g13
19:44:23 188  ,cad_g14
19:44:23 189  ,cad_g15
19:44:23 190  ,cad_g16
19:44:23 191  ,cad_g17
19:44:23 192  ,cad_g18
19:44:23 193  ,cad_g19
19:44:23 194  ,cad_g20
19:44:23 195  ,cad_g21
19:44:23 196  ,cad_g22
19:44:23 197  ,cad_g23
19:44:23 198  ,cad_g24
19:44:23 199  ,cad_g25
19:44:23 200  ,cad_g26
19:44:23 201  ,cad_g27
19:44:23 202  ,cad_g28
19:44:23 203  ,cad_g29
19:44:23 204  ,cad_g30
19:44:23 205  ,cad_g31
19:44:23 206  ,cad_g32
19:44:23 207  ,cad_g33
19:44:23 208  ,cad_g34
19:44:23 209  ,cad_g35
19:44:23 210  ,cad_g36
19:44:23 211  ,cad_g37
19:44:23 212  ,cad_g38
19:44:23 213  ,cad_g39
19:44:23 214  ,cad_g40
19:44:23 215  ,cad_g41
19:44:23 216  ,chf_g00
19:44:23 217  ,chf_g01
19:44:23 218  ,chf_g02
19:44:23 219  ,chf_g03
19:44:23 220  ,chf_g04
19:44:23 221  ,chf_g05
19:44:23 222  ,chf_g06
19:44:23 223  ,chf_g07
19:44:23 224  ,chf_g08
19:44:23 225  ,chf_g09
19:44:23 226  ,chf_g10
19:44:23 227  ,chf_g11
19:44:23 228  ,chf_g12
19:44:23 229  ,chf_g13
19:44:23 230  ,chf_g14
19:44:23 231  ,chf_g15
19:44:23 232  ,chf_g16
19:44:23 233  ,chf_g17
19:44:23 234  ,chf_g18
19:44:23 235  ,chf_g19
19:44:23 236  ,chf_g20
19:44:23 237  ,chf_g21
19:44:23 238  ,chf_g22
19:44:23 239  ,chf_g23
19:44:23 240  ,chf_g24
19:44:23 241  ,chf_g25
19:44:23 242  ,chf_g26
19:44:23 243  ,chf_g27
19:44:23 244  ,chf_g28
19:44:23 245  ,chf_g29
19:44:23 246  ,chf_g30
19:44:23 247  ,chf_g31
19:44:23 248  ,chf_g32
19:44:23 249  ,chf_g33
19:44:23 250  ,chf_g34
19:44:23 251  ,chf_g35
19:44:23 252  ,chf_g36
19:44:23 253  ,chf_g37
19:44:23 254  ,chf_g38
19:44:23 255  ,chf_g39
19:44:23 256  ,chf_g40
19:44:23 257  ,chf_g41
19:44:23 258  FROM aud_ms6 m
19:44:23 259  WHERE gatt IN('nup','up')
19:44:23 260  AND 1+m.ydate < '&1'||' '||'&2'
19:44:23 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'19:30:00'

View created.

Elapsed: 00:00:00.12
19:44:23 SQL> 
19:44:23 SQL> -- rpt
19:44:23 SQL> 
19:44:23 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
19:44:23   2  
19:44:23 SQL> SELECT MAX(prdate) FROM bme
19:44:23   2  
19:44:23 SQL> -- Now build model from bme and score sme
19:44:23 SQL> @score1.sql
19:44:23 SQL> -- score1.sql
19:44:23 SQL> 
19:44:23 SQL> -- Does the 1st SVM score
19:44:23 SQL> 
19:44:23 SQL> -- Fill up svmc_apply_prep
19:44:23 SQL> @score.sql
19:44:23 SQL> --
19:44:23 SQL> -- score.sql
19:44:23 SQL> --
19:44:23 SQL> 
19:44:23 SQL> -- usage: score.sql
19:44:23 SQL> 
19:44:23 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
19:44:23 SQL> 
19:44:23 SQL> DEFINE target	= 'gatt'
19:44:23 SQL> DEFINE model_name = 'forex14'
19:44:23 SQL> DEFINE bldtable	= 'bme'
19:44:23 SQL> DEFINE scoretable = 'sme'
19:44:23 SQL> DEFINE case_id	= 'prdate'
19:44:23 SQL> 
19:44:23 SQL> -- Define a variable to help me exclude some columns from some data mining calls
19:44:23 SQL> DEFINE exclude1 = "'&target','&case_id'"
19:44:23 SQL> 
19:44:23 SQL> -- Builds an SVM model using pl/sql.
19:44:23 SQL> 
19:44:23 SQL> -----------------------------------------------------------------------
19:44:23 SQL> --			    BUILD THE MODEL
19:44:23 SQL> -----------------------------------------------------------------------
19:44:23 SQL> 
19:44:23 SQL> -- Cleanup old build data preparation objects for repeat runs
19:44:23 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
19:44:23 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
19:44:23 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
19:44:23 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
19:44:23 SQL> 
19:44:23 SQL> 
19:44:23 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
19:44:23 SQL> --
19:44:23 SQL> -- DROP	TABLE svmc_settings ;
19:44:23 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
19:44:23 SQL> -- DELETE svmc_settings;
19:44:23 SQL> 
19:44:23 SQL> -- The default classification algorithm is Naive Bayes. So override
19:44:23 SQL> -- this choice to SVM using a settings table.
19:44:23 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
19:44:23 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
19:44:23 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
19:44:23 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
19:44:23 SQL> -- models.
19:44:23 SQL> --
19:44:23 SQL> 
19:44:23 SQL> -- Do this once and then comment it out.
19:44:23 SQL> -- That makes script go faster.
19:44:23 SQL> -- BEGIN
19:44:23 SQL> -- -- Populate settings table
19:44:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:44:23 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
19:44:23 SQL> --
19:44:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:44:23 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
19:44:23 SQL> --
19:44:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:44:23 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
19:44:23 SQL> --   COMMIT;
19:44:23 SQL> -- END;
19:44:23 SQL> -- /
19:44:23 SQL> 
19:44:23 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
19:44:23 SQL> 
19:44:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
19:44:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:44:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
19:44:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
19:44:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:44:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:44:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
19:44:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:44:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:44:23 SQL> 
19:44:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
19:44:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:44:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:44:23 SQL> 
19:44:23 SQL> --------------------------------
19:44:23 SQL> -- PREPARE BUILD (TRAINING) DATA
19:44:23 SQL> --
19:44:23 SQL> 
19:44:23 SQL> -- 1. Missing Value treatment for all Predictors and
19:44:23 SQL> -- 2. Outlier Treatment and
19:44:23 SQL> -- 3. Normalization are performed below.
19:44:23 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
19:44:23 SQL> --    normalized here.
19:44:23 SQL> 
19:44:23 SQL> BEGIN
19:44:23   2  	-- Perform missing value treatment for all predictors
19:44:23   3  	-- create miss tables
19:44:23   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
19:44:23   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
19:44:23   6  
19:44:23   7  	-- populate miss tables
19:44:23   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
19:44:23   9  	  miss_table_name => 'svmc_miss_num',
19:44:23  10  	  data_table_name => '&bldtable',
19:44:23  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:44:23  12  
19:44:23  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
19:44:23  14  	  miss_table_name => 'svmc_miss_cat',
19:44:23  15  	  data_table_name => '&bldtable',
19:44:23  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:44:23  17  
19:44:23  18  	-- xform input data to replace missing values
19:44:23  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:44:23  20  	  miss_table_name => 'svmc_miss_num',
19:44:23  21  	  data_table_name => '&bldtable',
19:44:23  22  	  xform_view_name => 'xformed_build_miss_num');
19:44:23  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:44:23  24  	  miss_table_name => 'svmc_miss_cat',
19:44:23  25  	  data_table_name => '&bldtable',
19:44:23  26  	  xform_view_name => 'xformed_build_miss_cat');
19:44:23  27  
19:44:23  28  	-- Perform outlier treatment.
19:44:23  29  	-- create clip table
19:44:23  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
19:44:23  31  
19:44:23  32  	-- populate clip table
19:44:23  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
19:44:23  34  	  clip_table_name => 'svmc_clip',
19:44:23  35  	  data_table_name => '&bldtable',
19:44:23  36  	  tail_frac	  => 0.025,
19:44:23  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:44:23  38  
19:44:23  39  	-- xform input data to winsorized data
19:44:23  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
19:44:23  41  	  clip_table_name => 'svmc_clip',
19:44:23  42  	  data_table_name => '&bldtable',
19:44:23  43  	  xform_view_name => 'svmc_winsor');
19:44:23  44  
19:44:23  45  	-- create normalization table
19:44:23  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
19:44:23  47  
19:44:23  48  	-- populate normalization table based on winsorized data
19:44:23  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
19:44:23  50  	  norm_table_name => 'svmc_norm',
19:44:23  51  	  data_table_name => 'svmc_winsor',
19:44:23  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:44:23  53  
19:44:23  54  	-- normalize the original data
19:44:23  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:44:23  56  	  norm_table_name => 'svmc_norm',
19:44:23  57  	  data_table_name => '&bldtable',
19:44:23  58  	  xform_view_name => 'svmc_build_prep');
19:44:23  59  END;
19:44:23  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.52
19:44:42 SQL> 
19:44:42 SQL> ---------------------
19:44:42 SQL> -- CREATE A NEW MODEL
19:44:42 SQL> --
19:44:42 SQL> -- Cleanup old model with the same name for repeat runs
19:44:42 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
19:44:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:44:42   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.01
19:44:43 SQL> 
19:44:43 SQL> -- Build a new SVM Model
19:44:43 SQL> BEGIN
19:44:43   2  	DBMS_DATA_MINING.CREATE_MODEL(
19:44:43   3  	  model_name	      => '&model_name',
19:44:43   4  	  mining_function     => dbms_data_mining.classification,
19:44:43   5  	  data_table_name     => 'svmc_build_prep',
19:44:43   6  	  case_id_column_name => '&case_id',
19:44:43   7  	  target_column_name  => '&target',
19:44:43   8  	  settings_table_name => 'svmc_settings');
19:44:43   9  END;
19:44:43  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:32.02
19:45:15 SQL> 
19:45:15 SQL> -----------------------------------------------------------------------
19:45:15 SQL> --			       APPLY/score THE MODEL
19:45:15 SQL> -----------------------------------------------------------------------
19:45:15 SQL> 
19:45:15 SQL> -- Cleanup old scoring data preparation objects for repeat runs
19:45:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
19:45:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:45:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:45:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
19:45:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:45:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:45:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
19:45:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:45:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
19:45:15 SQL> -----------------------
19:45:15 SQL> -- PREPARE SCORING DATA
19:45:15 SQL> --
19:45:15 SQL> -- If the data for model creation has been prepared, then the data
19:45:15 SQL> -- to be scored using the model must be prepared in the same manner
19:45:15 SQL> -- in order to obtain meaningful results.
19:45:15 SQL> --
19:45:15 SQL> -- 1. Missing Value treatment for all Predictors and
19:45:15 SQL> -- 2. Normalization
19:45:15 SQL> -- No outlier treatment will be performed during test and apply. The
19:45:15 SQL> -- normalization step is sufficient, since the normalization parameters
19:45:15 SQL> -- already capture the effects of outlier treatment done with build data.
19:45:15 SQL> --
19:45:15 SQL> BEGIN
19:45:15   2  	-- Xform Test data to replace missing values
19:45:15   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:45:15   4  	  miss_table_name => 'svmc_miss_num',
19:45:15   5  	  data_table_name => '&scoretable',
19:45:15   6  	  xform_view_name => 'xformed_apply_miss_num');
19:45:15   7  
19:45:15   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:45:15   9  	  miss_table_name => 'svmc_miss_cat',
19:45:15  10  	  data_table_name => '&scoretable',
19:45:15  11  	  xform_view_name => 'xformed_apply_miss_cat');
19:45:15  12  
19:45:15  13  	-- Normalize the data to be scored
19:45:15  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:45:15  15  	  norm_table_name => 'svmc_norm',
19:45:15  16  	  data_table_name => '&scoretable',
19:45:15  17  	  xform_view_name => 'svmc_apply_prep');
19:45:15  18  END;
19:45:15  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.39
19:45:16 SQL> 
19:45:16 SQL> -- Use same model_name used in score.sql
19:45:16 SQL> DEFINE model_name = 'forex14'
19:45:16 SQL> 
19:45:16 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
19:45:16 SQL> 
19:45:16 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.07
19:45:16 SQL> 
19:45:16 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
19:45:16   2  SELECT
19:45:16   3  prdate
19:45:16   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
19:45:16   5  ,sysdate
19:45:16   6  ,SUBSTR(prdate,1,3)pair
19:45:16   7  ,SUBSTR(prdate,4,19)ydate
19:45:16   8  FROM svmc_apply_prep
19:45:16   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.28
19:45:17 SQL> @aud_score1day_gattn.sql	2011-01-03 19:20:00
19:45:17 SQL> --
19:45:17 SQL> -- aud_score1day_gattn.sql
19:45:17 SQL> --
19:45:17 SQL> 
19:45:17 SQL> CREATE OR REPLACE VIEW sme AS
19:45:17   2  SELECT
19:45:17   3  'aud'||m.ydate prdate
19:45:17   4  ,NULL gattn
19:45:17   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:45:17   6  ,eur_g00
19:45:17   7  ,eur_g01
19:45:17   8  ,eur_g02
19:45:17   9  ,eur_g03
19:45:17  10  ,eur_g04
19:45:17  11  ,eur_g05
19:45:17  12  ,eur_g06
19:45:17  13  ,eur_g07
19:45:17  14  ,eur_g08
19:45:17  15  ,eur_g09
19:45:17  16  ,eur_g10
19:45:17  17  ,eur_g11
19:45:17  18  ,eur_g12
19:45:17  19  ,eur_g13
19:45:17  20  ,eur_g14
19:45:17  21  ,eur_g15
19:45:17  22  ,eur_g16
19:45:17  23  ,eur_g17
19:45:17  24  ,eur_g18
19:45:17  25  ,eur_g19
19:45:17  26  ,eur_g20
19:45:17  27  ,eur_g21
19:45:17  28  ,eur_g22
19:45:17  29  ,eur_g23
19:45:17  30  ,eur_g24
19:45:17  31  ,eur_g25
19:45:17  32  ,eur_g26
19:45:17  33  ,eur_g27
19:45:17  34  ,eur_g28
19:45:17  35  ,eur_g29
19:45:17  36  ,eur_g30
19:45:17  37  ,eur_g31
19:45:17  38  ,eur_g32
19:45:17  39  ,eur_g33
19:45:17  40  ,eur_g34
19:45:17  41  ,eur_g35
19:45:17  42  ,eur_g36
19:45:17  43  ,eur_g37
19:45:17  44  ,eur_g38
19:45:17  45  ,eur_g39
19:45:17  46  ,eur_g40
19:45:17  47  ,eur_g41
19:45:17  48  ,aud_g00
19:45:17  49  ,aud_g01
19:45:17  50  ,aud_g02
19:45:17  51  ,aud_g03
19:45:17  52  ,aud_g04
19:45:17  53  ,aud_g05
19:45:17  54  ,aud_g06
19:45:17  55  ,aud_g07
19:45:17  56  ,aud_g08
19:45:17  57  ,aud_g09
19:45:17  58  ,aud_g10
19:45:17  59  ,aud_g11
19:45:17  60  ,aud_g12
19:45:17  61  ,aud_g13
19:45:17  62  ,aud_g14
19:45:17  63  ,aud_g15
19:45:17  64  ,aud_g16
19:45:17  65  ,aud_g17
19:45:17  66  ,aud_g18
19:45:17  67  ,aud_g19
19:45:17  68  ,aud_g20
19:45:17  69  ,aud_g21
19:45:17  70  ,aud_g22
19:45:17  71  ,aud_g23
19:45:17  72  ,aud_g24
19:45:17  73  ,aud_g25
19:45:17  74  ,aud_g26
19:45:17  75  ,aud_g27
19:45:17  76  ,aud_g28
19:45:17  77  ,aud_g29
19:45:17  78  ,aud_g30
19:45:17  79  ,aud_g31
19:45:17  80  ,aud_g32
19:45:17  81  ,aud_g33
19:45:17  82  ,aud_g34
19:45:17  83  ,aud_g35
19:45:17  84  ,aud_g36
19:45:17  85  ,aud_g37
19:45:17  86  ,aud_g38
19:45:17  87  ,aud_g39
19:45:17  88  ,aud_g40
19:45:17  89  ,aud_g41
19:45:17  90  ,gbp_g00
19:45:17  91  ,gbp_g01
19:45:17  92  ,gbp_g02
19:45:17  93  ,gbp_g03
19:45:17  94  ,gbp_g04
19:45:17  95  ,gbp_g05
19:45:17  96  ,gbp_g06
19:45:17  97  ,gbp_g07
19:45:17  98  ,gbp_g08
19:45:17  99  ,gbp_g09
19:45:17 100  ,gbp_g10
19:45:17 101  ,gbp_g11
19:45:17 102  ,gbp_g12
19:45:17 103  ,gbp_g13
19:45:17 104  ,gbp_g14
19:45:17 105  ,gbp_g15
19:45:17 106  ,gbp_g16
19:45:17 107  ,gbp_g17
19:45:17 108  ,gbp_g18
19:45:17 109  ,gbp_g19
19:45:17 110  ,gbp_g20
19:45:17 111  ,gbp_g21
19:45:17 112  ,gbp_g22
19:45:17 113  ,gbp_g23
19:45:17 114  ,gbp_g24
19:45:17 115  ,gbp_g25
19:45:17 116  ,gbp_g26
19:45:17 117  ,gbp_g27
19:45:17 118  ,gbp_g28
19:45:17 119  ,gbp_g29
19:45:17 120  ,gbp_g30
19:45:17 121  ,gbp_g31
19:45:17 122  ,gbp_g32
19:45:17 123  ,gbp_g33
19:45:17 124  ,gbp_g34
19:45:17 125  ,gbp_g35
19:45:17 126  ,gbp_g36
19:45:17 127  ,gbp_g37
19:45:17 128  ,gbp_g38
19:45:17 129  ,gbp_g39
19:45:17 130  ,gbp_g40
19:45:17 131  ,gbp_g41
19:45:17 132  ,jpy_g00
19:45:17 133  ,jpy_g01
19:45:17 134  ,jpy_g02
19:45:17 135  ,jpy_g03
19:45:17 136  ,jpy_g04
19:45:17 137  ,jpy_g05
19:45:17 138  ,jpy_g06
19:45:17 139  ,jpy_g07
19:45:17 140  ,jpy_g08
19:45:17 141  ,jpy_g09
19:45:17 142  ,jpy_g10
19:45:17 143  ,jpy_g11
19:45:17 144  ,jpy_g12
19:45:17 145  ,jpy_g13
19:45:17 146  ,jpy_g14
19:45:17 147  ,jpy_g15
19:45:17 148  ,jpy_g16
19:45:17 149  ,jpy_g17
19:45:17 150  ,jpy_g18
19:45:17 151  ,jpy_g19
19:45:17 152  ,jpy_g20
19:45:17 153  ,jpy_g21
19:45:17 154  ,jpy_g22
19:45:17 155  ,jpy_g23
19:45:17 156  ,jpy_g24
19:45:17 157  ,jpy_g25
19:45:17 158  ,jpy_g26
19:45:17 159  ,jpy_g27
19:45:17 160  ,jpy_g28
19:45:17 161  ,jpy_g29
19:45:17 162  ,jpy_g30
19:45:17 163  ,jpy_g31
19:45:17 164  ,jpy_g32
19:45:17 165  ,jpy_g33
19:45:17 166  ,jpy_g34
19:45:17 167  ,jpy_g35
19:45:17 168  ,jpy_g36
19:45:17 169  ,jpy_g37
19:45:17 170  ,jpy_g38
19:45:17 171  ,jpy_g39
19:45:17 172  ,jpy_g40
19:45:17 173  ,jpy_g41
19:45:17 174  ,cad_g00
19:45:17 175  ,cad_g01
19:45:17 176  ,cad_g02
19:45:17 177  ,cad_g03
19:45:17 178  ,cad_g04
19:45:17 179  ,cad_g05
19:45:17 180  ,cad_g06
19:45:17 181  ,cad_g07
19:45:17 182  ,cad_g08
19:45:17 183  ,cad_g09
19:45:17 184  ,cad_g10
19:45:17 185  ,cad_g11
19:45:17 186  ,cad_g12
19:45:17 187  ,cad_g13
19:45:17 188  ,cad_g14
19:45:17 189  ,cad_g15
19:45:17 190  ,cad_g16
19:45:17 191  ,cad_g17
19:45:17 192  ,cad_g18
19:45:17 193  ,cad_g19
19:45:17 194  ,cad_g20
19:45:17 195  ,cad_g21
19:45:17 196  ,cad_g22
19:45:17 197  ,cad_g23
19:45:17 198  ,cad_g24
19:45:17 199  ,cad_g25
19:45:17 200  ,cad_g26
19:45:17 201  ,cad_g27
19:45:17 202  ,cad_g28
19:45:17 203  ,cad_g29
19:45:17 204  ,cad_g30
19:45:17 205  ,cad_g31
19:45:17 206  ,cad_g32
19:45:17 207  ,cad_g33
19:45:17 208  ,cad_g34
19:45:17 209  ,cad_g35
19:45:17 210  ,cad_g36
19:45:17 211  ,cad_g37
19:45:17 212  ,cad_g38
19:45:17 213  ,cad_g39
19:45:17 214  ,cad_g40
19:45:17 215  ,cad_g41
19:45:17 216  ,chf_g00
19:45:17 217  ,chf_g01
19:45:17 218  ,chf_g02
19:45:17 219  ,chf_g03
19:45:17 220  ,chf_g04
19:45:17 221  ,chf_g05
19:45:17 222  ,chf_g06
19:45:17 223  ,chf_g07
19:45:17 224  ,chf_g08
19:45:17 225  ,chf_g09
19:45:17 226  ,chf_g10
19:45:17 227  ,chf_g11
19:45:17 228  ,chf_g12
19:45:17 229  ,chf_g13
19:45:17 230  ,chf_g14
19:45:17 231  ,chf_g15
19:45:17 232  ,chf_g16
19:45:17 233  ,chf_g17
19:45:17 234  ,chf_g18
19:45:17 235  ,chf_g19
19:45:17 236  ,chf_g20
19:45:17 237  ,chf_g21
19:45:17 238  ,chf_g22
19:45:17 239  ,chf_g23
19:45:17 240  ,chf_g24
19:45:17 241  ,chf_g25
19:45:17 242  ,chf_g26
19:45:17 243  ,chf_g27
19:45:17 244  ,chf_g28
19:45:17 245  ,chf_g29
19:45:17 246  ,chf_g30
19:45:17 247  ,chf_g31
19:45:17 248  ,chf_g32
19:45:17 249  ,chf_g33
19:45:17 250  ,chf_g34
19:45:17 251  ,chf_g35
19:45:17 252  ,chf_g36
19:45:17 253  ,chf_g37
19:45:17 254  ,chf_g38
19:45:17 255  ,chf_g39
19:45:17 256  ,chf_g40
19:45:17 257  ,chf_g41
19:45:17 258  FROM aud_ms6 m
19:45:17 259  WHERE m.ydate = '&1'||' '||'&2'
19:45:17 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'19:20:00'

View created.

Elapsed: 00:00:00.13
19:45:17 SQL> 
19:45:17 SQL> -- rpt
19:45:17 SQL> -- We should see just 1 row:
19:45:17 SQL> 
19:45:17 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.04
19:45:17 SQL> 
19:45:17 SQL> -- Build the model:
19:45:17 SQL> CREATE OR REPLACE VIEW bme AS
19:45:17   2  SELECT
19:45:17   3  'aud'||m.ydate prdate
19:45:17   4  ,gattn
19:45:17   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:45:17   6  ,eur_g00
19:45:17   7  ,eur_g01
19:45:17   8  ,eur_g02
19:45:17   9  ,eur_g03
19:45:17  10  ,eur_g04
19:45:17  11  ,eur_g05
19:45:17  12  ,eur_g06
19:45:17  13  ,eur_g07
19:45:17  14  ,eur_g08
19:45:17  15  ,eur_g09
19:45:17  16  ,eur_g10
19:45:17  17  ,eur_g11
19:45:17  18  ,eur_g12
19:45:17  19  ,eur_g13
19:45:17  20  ,eur_g14
19:45:17  21  ,eur_g15
19:45:17  22  ,eur_g16
19:45:17  23  ,eur_g17
19:45:17  24  ,eur_g18
19:45:17  25  ,eur_g19
19:45:17  26  ,eur_g20
19:45:17  27  ,eur_g21
19:45:17  28  ,eur_g22
19:45:17  29  ,eur_g23
19:45:17  30  ,eur_g24
19:45:17  31  ,eur_g25
19:45:17  32  ,eur_g26
19:45:17  33  ,eur_g27
19:45:17  34  ,eur_g28
19:45:17  35  ,eur_g29
19:45:17  36  ,eur_g30
19:45:17  37  ,eur_g31
19:45:17  38  ,eur_g32
19:45:17  39  ,eur_g33
19:45:17  40  ,eur_g34
19:45:17  41  ,eur_g35
19:45:17  42  ,eur_g36
19:45:17  43  ,eur_g37
19:45:17  44  ,eur_g38
19:45:17  45  ,eur_g39
19:45:17  46  ,eur_g40
19:45:17  47  ,eur_g41
19:45:17  48  ,aud_g00
19:45:17  49  ,aud_g01
19:45:17  50  ,aud_g02
19:45:17  51  ,aud_g03
19:45:17  52  ,aud_g04
19:45:17  53  ,aud_g05
19:45:17  54  ,aud_g06
19:45:17  55  ,aud_g07
19:45:17  56  ,aud_g08
19:45:17  57  ,aud_g09
19:45:17  58  ,aud_g10
19:45:17  59  ,aud_g11
19:45:17  60  ,aud_g12
19:45:17  61  ,aud_g13
19:45:17  62  ,aud_g14
19:45:17  63  ,aud_g15
19:45:17  64  ,aud_g16
19:45:17  65  ,aud_g17
19:45:17  66  ,aud_g18
19:45:17  67  ,aud_g19
19:45:17  68  ,aud_g20
19:45:17  69  ,aud_g21
19:45:17  70  ,aud_g22
19:45:17  71  ,aud_g23
19:45:17  72  ,aud_g24
19:45:17  73  ,aud_g25
19:45:17  74  ,aud_g26
19:45:17  75  ,aud_g27
19:45:17  76  ,aud_g28
19:45:17  77  ,aud_g29
19:45:17  78  ,aud_g30
19:45:17  79  ,aud_g31
19:45:17  80  ,aud_g32
19:45:17  81  ,aud_g33
19:45:17  82  ,aud_g34
19:45:17  83  ,aud_g35
19:45:17  84  ,aud_g36
19:45:17  85  ,aud_g37
19:45:17  86  ,aud_g38
19:45:17  87  ,aud_g39
19:45:17  88  ,aud_g40
19:45:17  89  ,aud_g41
19:45:17  90  ,gbp_g00
19:45:17  91  ,gbp_g01
19:45:17  92  ,gbp_g02
19:45:17  93  ,gbp_g03
19:45:17  94  ,gbp_g04
19:45:17  95  ,gbp_g05
19:45:17  96  ,gbp_g06
19:45:17  97  ,gbp_g07
19:45:17  98  ,gbp_g08
19:45:17  99  ,gbp_g09
19:45:17 100  ,gbp_g10
19:45:17 101  ,gbp_g11
19:45:17 102  ,gbp_g12
19:45:17 103  ,gbp_g13
19:45:17 104  ,gbp_g14
19:45:17 105  ,gbp_g15
19:45:17 106  ,gbp_g16
19:45:17 107  ,gbp_g17
19:45:17 108  ,gbp_g18
19:45:17 109  ,gbp_g19
19:45:17 110  ,gbp_g20
19:45:17 111  ,gbp_g21
19:45:17 112  ,gbp_g22
19:45:17 113  ,gbp_g23
19:45:17 114  ,gbp_g24
19:45:17 115  ,gbp_g25
19:45:17 116  ,gbp_g26
19:45:17 117  ,gbp_g27
19:45:17 118  ,gbp_g28
19:45:17 119  ,gbp_g29
19:45:17 120  ,gbp_g30
19:45:17 121  ,gbp_g31
19:45:17 122  ,gbp_g32
19:45:17 123  ,gbp_g33
19:45:17 124  ,gbp_g34
19:45:17 125  ,gbp_g35
19:45:17 126  ,gbp_g36
19:45:17 127  ,gbp_g37
19:45:17 128  ,gbp_g38
19:45:17 129  ,gbp_g39
19:45:17 130  ,gbp_g40
19:45:17 131  ,gbp_g41
19:45:17 132  ,jpy_g00
19:45:17 133  ,jpy_g01
19:45:17 134  ,jpy_g02
19:45:17 135  ,jpy_g03
19:45:17 136  ,jpy_g04
19:45:17 137  ,jpy_g05
19:45:17 138  ,jpy_g06
19:45:17 139  ,jpy_g07
19:45:17 140  ,jpy_g08
19:45:17 141  ,jpy_g09
19:45:17 142  ,jpy_g10
19:45:17 143  ,jpy_g11
19:45:17 144  ,jpy_g12
19:45:17 145  ,jpy_g13
19:45:17 146  ,jpy_g14
19:45:17 147  ,jpy_g15
19:45:17 148  ,jpy_g16
19:45:17 149  ,jpy_g17
19:45:17 150  ,jpy_g18
19:45:17 151  ,jpy_g19
19:45:17 152  ,jpy_g20
19:45:17 153  ,jpy_g21
19:45:17 154  ,jpy_g22
19:45:17 155  ,jpy_g23
19:45:17 156  ,jpy_g24
19:45:17 157  ,jpy_g25
19:45:17 158  ,jpy_g26
19:45:17 159  ,jpy_g27
19:45:17 160  ,jpy_g28
19:45:17 161  ,jpy_g29
19:45:17 162  ,jpy_g30
19:45:17 163  ,jpy_g31
19:45:17 164  ,jpy_g32
19:45:17 165  ,jpy_g33
19:45:17 166  ,jpy_g34
19:45:17 167  ,jpy_g35
19:45:17 168  ,jpy_g36
19:45:17 169  ,jpy_g37
19:45:17 170  ,jpy_g38
19:45:17 171  ,jpy_g39
19:45:17 172  ,jpy_g40
19:45:17 173  ,jpy_g41
19:45:17 174  ,cad_g00
19:45:17 175  ,cad_g01
19:45:17 176  ,cad_g02
19:45:17 177  ,cad_g03
19:45:17 178  ,cad_g04
19:45:17 179  ,cad_g05
19:45:17 180  ,cad_g06
19:45:17 181  ,cad_g07
19:45:17 182  ,cad_g08
19:45:17 183  ,cad_g09
19:45:17 184  ,cad_g10
19:45:17 185  ,cad_g11
19:45:17 186  ,cad_g12
19:45:17 187  ,cad_g13
19:45:17 188  ,cad_g14
19:45:17 189  ,cad_g15
19:45:17 190  ,cad_g16
19:45:17 191  ,cad_g17
19:45:17 192  ,cad_g18
19:45:17 193  ,cad_g19
19:45:17 194  ,cad_g20
19:45:17 195  ,cad_g21
19:45:17 196  ,cad_g22
19:45:17 197  ,cad_g23
19:45:17 198  ,cad_g24
19:45:17 199  ,cad_g25
19:45:17 200  ,cad_g26
19:45:17 201  ,cad_g27
19:45:17 202  ,cad_g28
19:45:17 203  ,cad_g29
19:45:17 204  ,cad_g30
19:45:17 205  ,cad_g31
19:45:17 206  ,cad_g32
19:45:17 207  ,cad_g33
19:45:17 208  ,cad_g34
19:45:17 209  ,cad_g35
19:45:17 210  ,cad_g36
19:45:17 211  ,cad_g37
19:45:17 212  ,cad_g38
19:45:17 213  ,cad_g39
19:45:17 214  ,cad_g40
19:45:17 215  ,cad_g41
19:45:17 216  ,chf_g00
19:45:17 217  ,chf_g01
19:45:17 218  ,chf_g02
19:45:17 219  ,chf_g03
19:45:17 220  ,chf_g04
19:45:17 221  ,chf_g05
19:45:17 222  ,chf_g06
19:45:17 223  ,chf_g07
19:45:17 224  ,chf_g08
19:45:17 225  ,chf_g09
19:45:17 226  ,chf_g10
19:45:17 227  ,chf_g11
19:45:17 228  ,chf_g12
19:45:17 229  ,chf_g13
19:45:17 230  ,chf_g14
19:45:17 231  ,chf_g15
19:45:17 232  ,chf_g16
19:45:17 233  ,chf_g17
19:45:17 234  ,chf_g18
19:45:17 235  ,chf_g19
19:45:17 236  ,chf_g20
19:45:17 237  ,chf_g21
19:45:17 238  ,chf_g22
19:45:17 239  ,chf_g23
19:45:17 240  ,chf_g24
19:45:17 241  ,chf_g25
19:45:17 242  ,chf_g26
19:45:17 243  ,chf_g27
19:45:17 244  ,chf_g28
19:45:17 245  ,chf_g29
19:45:17 246  ,chf_g30
19:45:17 247  ,chf_g31
19:45:17 248  ,chf_g32
19:45:17 249  ,chf_g33
19:45:17 250  ,chf_g34
19:45:17 251  ,chf_g35
19:45:17 252  ,chf_g36
19:45:17 253  ,chf_g37
19:45:17 254  ,chf_g38
19:45:17 255  ,chf_g39
19:45:17 256  ,chf_g40
19:45:17 257  ,chf_g41
19:45:17 258  FROM aud_ms6 m
19:45:17 259  WHERE gattn IN('nup','up')
19:45:17 260  AND 1+m.ydate < '&1'||' '||'&2'
19:45:17 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'19:20:00'

View created.

Elapsed: 00:00:00.13
19:45:17 SQL> 
19:45:17 SQL> -- rpt
19:45:17 SQL> 
19:45:17 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12731
up	     6258

Elapsed: 00:00:00.05
19:45:17 SQL> 
19:45:17 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 21:55:00

Elapsed: 00:00:00.03
19:45:17 SQL> 
19:45:17 SQL> -- Now build model from bme and score sme
19:45:17 SQL> @score1gattn.sql
19:45:17 SQL> -- score1gattn.sql
19:45:17 SQL> 
19:45:17 SQL> -- Does the 1st SVM score
19:45:17 SQL> 
19:45:17 SQL> -- Fill up svmc_apply_prep
19:45:17 SQL> @score_gattn.sql
19:45:17 SQL> --
19:45:17 SQL> -- score_gattn.sql
19:45:17 SQL> --
19:45:17 SQL> 
19:45:17 SQL> -- usage: score_gattn.sql
19:45:17 SQL> 
19:45:17 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
19:45:17 SQL> 
19:45:17 SQL> DEFINE target	= 'gattn'
19:45:17 SQL> DEFINE model_name = 'forex14'
19:45:17 SQL> DEFINE bldtable	= 'bme'
19:45:17 SQL> DEFINE scoretable = 'sme'
19:45:17 SQL> DEFINE case_id	= 'prdate'
19:45:17 SQL> 
19:45:17 SQL> -- Define a variable to help me exclude some columns from some data mining calls
19:45:17 SQL> DEFINE exclude1 = "'&target','&case_id'"
19:45:17 SQL> 
19:45:17 SQL> -- Builds an SVM model using pl/sql.
19:45:17 SQL> 
19:45:17 SQL> -----------------------------------------------------------------------
19:45:17 SQL> --			    BUILD THE MODEL
19:45:17 SQL> -----------------------------------------------------------------------
19:45:17 SQL> 
19:45:17 SQL> -- Cleanup old build data preparation objects for repeat runs
19:45:17 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
19:45:17 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
19:45:17 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
19:45:17 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
19:45:17 SQL> 
19:45:17 SQL> 
19:45:17 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
19:45:17 SQL> --
19:45:17 SQL> -- DROP	TABLE svmc_settings ;
19:45:17 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
19:45:17 SQL> -- DELETE svmc_settings;
19:45:17 SQL> 
19:45:17 SQL> -- The default classification algorithm is Naive Bayes. So override
19:45:17 SQL> -- this choice to SVM using a settings table.
19:45:17 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
19:45:17 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
19:45:17 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
19:45:17 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
19:45:17 SQL> -- models.
19:45:17 SQL> --
19:45:17 SQL> 
19:45:17 SQL> -- Do this once and then comment it out.
19:45:17 SQL> -- That makes script go faster.
19:45:17 SQL> -- BEGIN
19:45:17 SQL> -- -- Populate settings table
19:45:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:45:17 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
19:45:17 SQL> --
19:45:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:45:17 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
19:45:17 SQL> --
19:45:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:45:17 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
19:45:17 SQL> --   COMMIT;
19:45:17 SQL> -- END;
19:45:17 SQL> -- /
19:45:17 SQL> 
19:45:17 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
19:45:17 SQL> 
19:45:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
19:45:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:45:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:45:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
19:45:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:45:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:45:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
19:45:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:45:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
19:45:17 SQL> 
19:45:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
19:45:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:45:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:45:17 SQL> 
19:45:17 SQL> --------------------------------
19:45:17 SQL> -- PREPARE BUILD (TRAINING) DATA
19:45:17 SQL> --
19:45:17 SQL> 
19:45:17 SQL> -- 1. Missing Value treatment for all Predictors and
19:45:17 SQL> -- 2. Outlier Treatment and
19:45:17 SQL> -- 3. Normalization are performed below.
19:45:17 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
19:45:17 SQL> --    normalized here.
19:45:17 SQL> 
19:45:17 SQL> BEGIN
19:45:17   2  	-- Perform missing value treatment for all predictors
19:45:17   3  	-- create miss tables
19:45:17   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
19:45:17   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
19:45:17   6  
19:45:17   7  	-- populate miss tables
19:45:17   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
19:45:17   9  	  miss_table_name => 'svmc_miss_num',
19:45:17  10  	  data_table_name => '&bldtable',
19:45:17  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:45:17  12  
19:45:17  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
19:45:17  14  	  miss_table_name => 'svmc_miss_cat',
19:45:17  15  	  data_table_name => '&bldtable',
19:45:17  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:45:17  17  
19:45:17  18  	-- xform input data to replace missing values
19:45:17  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:45:17  20  	  miss_table_name => 'svmc_miss_num',
19:45:17  21  	  data_table_name => '&bldtable',
19:45:17  22  	  xform_view_name => 'xformed_build_miss_num');
19:45:17  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:45:17  24  	  miss_table_name => 'svmc_miss_cat',
19:45:17  25  	  data_table_name => '&bldtable',
19:45:17  26  	  xform_view_name => 'xformed_build_miss_cat');
19:45:17  27  
19:45:17  28  	-- Perform outlier treatment.
19:45:17  29  	-- create clip table
19:45:17  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
19:45:17  31  
19:45:17  32  	-- populate clip table
19:45:17  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
19:45:17  34  	  clip_table_name => 'svmc_clip',
19:45:17  35  	  data_table_name => '&bldtable',
19:45:17  36  	  tail_frac	  => 0.025,
19:45:17  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:45:17  38  
19:45:17  39  	-- xform input data to winsorized data
19:45:17  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
19:45:17  41  	  clip_table_name => 'svmc_clip',
19:45:17  42  	  data_table_name => '&bldtable',
19:45:17  43  	  xform_view_name => 'svmc_winsor');
19:45:17  44  
19:45:17  45  	-- create normalization table
19:45:17  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
19:45:17  47  
19:45:17  48  	-- populate normalization table based on winsorized data
19:45:17  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
19:45:17  50  	  norm_table_name => 'svmc_norm',
19:45:17  51  	  data_table_name => 'svmc_winsor',
19:45:17  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:45:17  53  
19:45:17  54  	-- normalize the original data
19:45:17  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:45:17  56  	  norm_table_name => 'svmc_norm',
19:45:17  57  	  data_table_name => '&bldtable',
19:45:17  58  	  xform_view_name => 'svmc_build_prep');
19:45:17  59  END;
19:45:17  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.73
19:45:37 SQL> 
19:45:37 SQL> ---------------------
19:45:37 SQL> -- CREATE A NEW MODEL
19:45:37 SQL> --
19:45:37 SQL> -- Cleanup old model with the same name for repeat runs
19:45:37 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
19:45:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:45:37   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.68
19:45:39 SQL> 
19:45:39 SQL> -- Build a new SVM Model
19:45:39 SQL> BEGIN
19:45:39   2  	DBMS_DATA_MINING.CREATE_MODEL(
19:45:39   3  	  model_name	      => '&model_name',
19:45:39   4  	  mining_function     => dbms_data_mining.classification,
19:45:39   5  	  data_table_name     => 'svmc_build_prep',
19:45:39   6  	  case_id_column_name => '&case_id',
19:45:39   7  	  target_column_name  => '&target',
19:45:39   8  	  settings_table_name => 'svmc_settings');
19:45:39   9  END;
19:45:39  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:30.81
19:46:09 SQL> 
19:46:09 SQL> -----------------------------------------------------------------------
19:46:09 SQL> --			       APPLY/score THE MODEL
19:46:09 SQL> -----------------------------------------------------------------------
19:46:09 SQL> 
19:46:09 SQL> -- Cleanup old scoring data preparation objects for repeat runs
19:46:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
19:46:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:46:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:46:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
19:46:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:46:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:46:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
19:46:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:46:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.14
19:46:10 SQL> -----------------------
19:46:10 SQL> -- PREPARE SCORING DATA
19:46:10 SQL> --
19:46:10 SQL> -- If the data for model creation has been prepared, then the data
19:46:10 SQL> -- to be scored using the model must be prepared in the same manner
19:46:10 SQL> -- in order to obtain meaningful results.
19:46:10 SQL> --
19:46:10 SQL> -- 1. Missing Value treatment for all Predictors and
19:46:10 SQL> -- 2. Normalization
19:46:10 SQL> -- No outlier treatment will be performed during test and apply. The
19:46:10 SQL> -- normalization step is sufficient, since the normalization parameters
19:46:10 SQL> -- already capture the effects of outlier treatment done with build data.
19:46:10 SQL> --
19:46:10 SQL> BEGIN
19:46:10   2  	-- Xform Test data to replace missing values
19:46:10   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:46:10   4  	  miss_table_name => 'svmc_miss_num',
19:46:10   5  	  data_table_name => '&scoretable',
19:46:10   6  	  xform_view_name => 'xformed_apply_miss_num');
19:46:10   7  
19:46:10   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:46:10   9  	  miss_table_name => 'svmc_miss_cat',
19:46:10  10  	  data_table_name => '&scoretable',
19:46:10  11  	  xform_view_name => 'xformed_apply_miss_cat');
19:46:10  12  
19:46:10  13  	-- Normalize the data to be scored
19:46:10  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:46:10  15  	  norm_table_name => 'svmc_norm',
19:46:10  16  	  data_table_name => '&scoretable',
19:46:10  17  	  xform_view_name => 'svmc_apply_prep');
19:46:10  18  END;
19:46:10  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.35
19:46:11 SQL> 
19:46:11 SQL> -- Use same model_name used in score_gattn.sql
19:46:11 SQL> DEFINE model_name = 'forex14'
19:46:11 SQL> 
19:46:11 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.08
19:46:11 SQL> 
19:46:11 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
19:46:11   2  SELECT
19:46:11   3  prdate
19:46:11   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
19:46:11   5  ,sysdate
19:46:11   6  ,SUBSTR(prdate,1,3)pair
19:46:11   7  ,SUBSTR(prdate,4,19)ydate
19:46:11   8  FROM svmc_apply_prep
19:46:11   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.25
19:46:11 SQL> @aud_score1day_gattn.sql	2011-01-03 19:25:00
19:46:11 SQL> --
19:46:11 SQL> -- aud_score1day_gattn.sql
19:46:11 SQL> --
19:46:11 SQL> 
19:46:11 SQL> CREATE OR REPLACE VIEW sme AS
19:46:11   2  SELECT
19:46:11   3  'aud'||m.ydate prdate
19:46:11   4  ,NULL gattn
19:46:11   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:46:11   6  ,eur_g00
19:46:11   7  ,eur_g01
19:46:11   8  ,eur_g02
19:46:11   9  ,eur_g03
19:46:11  10  ,eur_g04
19:46:11  11  ,eur_g05
19:46:11  12  ,eur_g06
19:46:11  13  ,eur_g07
19:46:11  14  ,eur_g08
19:46:11  15  ,eur_g09
19:46:11  16  ,eur_g10
19:46:11  17  ,eur_g11
19:46:11  18  ,eur_g12
19:46:11  19  ,eur_g13
19:46:11  20  ,eur_g14
19:46:11  21  ,eur_g15
19:46:11  22  ,eur_g16
19:46:11  23  ,eur_g17
19:46:11  24  ,eur_g18
19:46:11  25  ,eur_g19
19:46:11  26  ,eur_g20
19:46:11  27  ,eur_g21
19:46:11  28  ,eur_g22
19:46:11  29  ,eur_g23
19:46:11  30  ,eur_g24
19:46:11  31  ,eur_g25
19:46:11  32  ,eur_g26
19:46:11  33  ,eur_g27
19:46:11  34  ,eur_g28
19:46:11  35  ,eur_g29
19:46:11  36  ,eur_g30
19:46:11  37  ,eur_g31
19:46:11  38  ,eur_g32
19:46:11  39  ,eur_g33
19:46:11  40  ,eur_g34
19:46:11  41  ,eur_g35
19:46:11  42  ,eur_g36
19:46:11  43  ,eur_g37
19:46:11  44  ,eur_g38
19:46:11  45  ,eur_g39
19:46:11  46  ,eur_g40
19:46:11  47  ,eur_g41
19:46:11  48  ,aud_g00
19:46:11  49  ,aud_g01
19:46:11  50  ,aud_g02
19:46:11  51  ,aud_g03
19:46:11  52  ,aud_g04
19:46:11  53  ,aud_g05
19:46:11  54  ,aud_g06
19:46:11  55  ,aud_g07
19:46:11  56  ,aud_g08
19:46:11  57  ,aud_g09
19:46:11  58  ,aud_g10
19:46:11  59  ,aud_g11
19:46:11  60  ,aud_g12
19:46:11  61  ,aud_g13
19:46:11  62  ,aud_g14
19:46:11  63  ,aud_g15
19:46:11  64  ,aud_g16
19:46:11  65  ,aud_g17
19:46:11  66  ,aud_g18
19:46:11  67  ,aud_g19
19:46:11  68  ,aud_g20
19:46:11  69  ,aud_g21
19:46:11  70  ,aud_g22
19:46:11  71  ,aud_g23
19:46:11  72  ,aud_g24
19:46:11  73  ,aud_g25
19:46:11  74  ,aud_g26
19:46:11  75  ,aud_g27
19:46:11  76  ,aud_g28
19:46:11  77  ,aud_g29
19:46:11  78  ,aud_g30
19:46:11  79  ,aud_g31
19:46:11  80  ,aud_g32
19:46:11  81  ,aud_g33
19:46:11  82  ,aud_g34
19:46:11  83  ,aud_g35
19:46:11  84  ,aud_g36
19:46:11  85  ,aud_g37
19:46:11  86  ,aud_g38
19:46:11  87  ,aud_g39
19:46:11  88  ,aud_g40
19:46:11  89  ,aud_g41
19:46:11  90  ,gbp_g00
19:46:11  91  ,gbp_g01
19:46:11  92  ,gbp_g02
19:46:11  93  ,gbp_g03
19:46:11  94  ,gbp_g04
19:46:11  95  ,gbp_g05
19:46:11  96  ,gbp_g06
19:46:11  97  ,gbp_g07
19:46:11  98  ,gbp_g08
19:46:11  99  ,gbp_g09
19:46:11 100  ,gbp_g10
19:46:11 101  ,gbp_g11
19:46:11 102  ,gbp_g12
19:46:11 103  ,gbp_g13
19:46:11 104  ,gbp_g14
19:46:11 105  ,gbp_g15
19:46:11 106  ,gbp_g16
19:46:11 107  ,gbp_g17
19:46:11 108  ,gbp_g18
19:46:11 109  ,gbp_g19
19:46:11 110  ,gbp_g20
19:46:11 111  ,gbp_g21
19:46:11 112  ,gbp_g22
19:46:11 113  ,gbp_g23
19:46:11 114  ,gbp_g24
19:46:11 115  ,gbp_g25
19:46:11 116  ,gbp_g26
19:46:11 117  ,gbp_g27
19:46:11 118  ,gbp_g28
19:46:11 119  ,gbp_g29
19:46:11 120  ,gbp_g30
19:46:11 121  ,gbp_g31
19:46:11 122  ,gbp_g32
19:46:11 123  ,gbp_g33
19:46:11 124  ,gbp_g34
19:46:11 125  ,gbp_g35
19:46:11 126  ,gbp_g36
19:46:11 127  ,gbp_g37
19:46:11 128  ,gbp_g38
19:46:11 129  ,gbp_g39
19:46:11 130  ,gbp_g40
19:46:11 131  ,gbp_g41
19:46:11 132  ,jpy_g00
19:46:11 133  ,jpy_g01
19:46:11 134  ,jpy_g02
19:46:11 135  ,jpy_g03
19:46:11 136  ,jpy_g04
19:46:11 137  ,jpy_g05
19:46:11 138  ,jpy_g06
19:46:11 139  ,jpy_g07
19:46:11 140  ,jpy_g08
19:46:11 141  ,jpy_g09
19:46:11 142  ,jpy_g10
19:46:11 143  ,jpy_g11
19:46:11 144  ,jpy_g12
19:46:11 145  ,jpy_g13
19:46:11 146  ,jpy_g14
19:46:11 147  ,jpy_g15
19:46:11 148  ,jpy_g16
19:46:11 149  ,jpy_g17
19:46:11 150  ,jpy_g18
19:46:11 151  ,jpy_g19
19:46:11 152  ,jpy_g20
19:46:11 153  ,jpy_g21
19:46:11 154  ,jpy_g22
19:46:11 155  ,jpy_g23
19:46:11 156  ,jpy_g24
19:46:11 157  ,jpy_g25
19:46:11 158  ,jpy_g26
19:46:11 159  ,jpy_g27
19:46:11 160  ,jpy_g28
19:46:11 161  ,jpy_g29
19:46:11 162  ,jpy_g30
19:46:11 163  ,jpy_g31
19:46:11 164  ,jpy_g32
19:46:11 165  ,jpy_g33
19:46:11 166  ,jpy_g34
19:46:11 167  ,jpy_g35
19:46:11 168  ,jpy_g36
19:46:11 169  ,jpy_g37
19:46:11 170  ,jpy_g38
19:46:11 171  ,jpy_g39
19:46:11 172  ,jpy_g40
19:46:11 173  ,jpy_g41
19:46:11 174  ,cad_g00
19:46:11 175  ,cad_g01
19:46:11 176  ,cad_g02
19:46:11 177  ,cad_g03
19:46:11 178  ,cad_g04
19:46:11 179  ,cad_g05
19:46:11 180  ,cad_g06
19:46:11 181  ,cad_g07
19:46:11 182  ,cad_g08
19:46:11 183  ,cad_g09
19:46:11 184  ,cad_g10
19:46:11 185  ,cad_g11
19:46:11 186  ,cad_g12
19:46:11 187  ,cad_g13
19:46:11 188  ,cad_g14
19:46:11 189  ,cad_g15
19:46:11 190  ,cad_g16
19:46:11 191  ,cad_g17
19:46:11 192  ,cad_g18
19:46:11 193  ,cad_g19
19:46:11 194  ,cad_g20
19:46:11 195  ,cad_g21
19:46:11 196  ,cad_g22
19:46:11 197  ,cad_g23
19:46:11 198  ,cad_g24
19:46:11 199  ,cad_g25
19:46:11 200  ,cad_g26
19:46:11 201  ,cad_g27
19:46:11 202  ,cad_g28
19:46:11 203  ,cad_g29
19:46:11 204  ,cad_g30
19:46:11 205  ,cad_g31
19:46:11 206  ,cad_g32
19:46:11 207  ,cad_g33
19:46:11 208  ,cad_g34
19:46:11 209  ,cad_g35
19:46:11 210  ,cad_g36
19:46:11 211  ,cad_g37
19:46:11 212  ,cad_g38
19:46:11 213  ,cad_g39
19:46:11 214  ,cad_g40
19:46:11 215  ,cad_g41
19:46:11 216  ,chf_g00
19:46:11 217  ,chf_g01
19:46:11 218  ,chf_g02
19:46:11 219  ,chf_g03
19:46:11 220  ,chf_g04
19:46:11 221  ,chf_g05
19:46:11 222  ,chf_g06
19:46:11 223  ,chf_g07
19:46:11 224  ,chf_g08
19:46:11 225  ,chf_g09
19:46:11 226  ,chf_g10
19:46:11 227  ,chf_g11
19:46:11 228  ,chf_g12
19:46:11 229  ,chf_g13
19:46:11 230  ,chf_g14
19:46:11 231  ,chf_g15
19:46:11 232  ,chf_g16
19:46:11 233  ,chf_g17
19:46:11 234  ,chf_g18
19:46:11 235  ,chf_g19
19:46:11 236  ,chf_g20
19:46:11 237  ,chf_g21
19:46:11 238  ,chf_g22
19:46:11 239  ,chf_g23
19:46:11 240  ,chf_g24
19:46:11 241  ,chf_g25
19:46:11 242  ,chf_g26
19:46:11 243  ,chf_g27
19:46:11 244  ,chf_g28
19:46:11 245  ,chf_g29
19:46:11 246  ,chf_g30
19:46:11 247  ,chf_g31
19:46:11 248  ,chf_g32
19:46:11 249  ,chf_g33
19:46:11 250  ,chf_g34
19:46:11 251  ,chf_g35
19:46:11 252  ,chf_g36
19:46:11 253  ,chf_g37
19:46:11 254  ,chf_g38
19:46:11 255  ,chf_g39
19:46:11 256  ,chf_g40
19:46:11 257  ,chf_g41
19:46:11 258  FROM aud_ms6 m
19:46:11 259  WHERE m.ydate = '&1'||' '||'&2'
19:46:11 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'19:25:00'

View created.

Elapsed: 00:00:00.22
19:46:12 SQL> 
19:46:12 SQL> -- rpt
19:46:12 SQL> -- We should see just 1 row:
19:46:12 SQL> 
19:46:12 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
19:46:12 SQL> 
19:46:12 SQL> -- Build the model:
19:46:12 SQL> CREATE OR REPLACE VIEW bme AS
19:46:12   2  SELECT
19:46:12   3  'aud'||m.ydate prdate
19:46:12   4  ,gattn
19:46:12   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:46:12   6  ,eur_g00
19:46:12   7  ,eur_g01
19:46:12   8  ,eur_g02
19:46:12   9  ,eur_g03
19:46:12  10  ,eur_g04
19:46:12  11  ,eur_g05
19:46:12  12  ,eur_g06
19:46:12  13  ,eur_g07
19:46:12  14  ,eur_g08
19:46:12  15  ,eur_g09
19:46:12  16  ,eur_g10
19:46:12  17  ,eur_g11
19:46:12  18  ,eur_g12
19:46:12  19  ,eur_g13
19:46:12  20  ,eur_g14
19:46:12  21  ,eur_g15
19:46:12  22  ,eur_g16
19:46:12  23  ,eur_g17
19:46:12  24  ,eur_g18
19:46:12  25  ,eur_g19
19:46:12  26  ,eur_g20
19:46:12  27  ,eur_g21
19:46:12  28  ,eur_g22
19:46:12  29  ,eur_g23
19:46:12  30  ,eur_g24
19:46:12  31  ,eur_g25
19:46:12  32  ,eur_g26
19:46:12  33  ,eur_g27
19:46:12  34  ,eur_g28
19:46:12  35  ,eur_g29
19:46:12  36  ,eur_g30
19:46:12  37  ,eur_g31
19:46:12  38  ,eur_g32
19:46:12  39  ,eur_g33
19:46:12  40  ,eur_g34
19:46:12  41  ,eur_g35
19:46:12  42  ,eur_g36
19:46:12  43  ,eur_g37
19:46:12  44  ,eur_g38
19:46:12  45  ,eur_g39
19:46:12  46  ,eur_g40
19:46:12  47  ,eur_g41
19:46:12  48  ,aud_g00
19:46:12  49  ,aud_g01
19:46:12  50  ,aud_g02
19:46:12  51  ,aud_g03
19:46:12  52  ,aud_g04
19:46:12  53  ,aud_g05
19:46:12  54  ,aud_g06
19:46:12  55  ,aud_g07
19:46:12  56  ,aud_g08
19:46:12  57  ,aud_g09
19:46:12  58  ,aud_g10
19:46:12  59  ,aud_g11
19:46:12  60  ,aud_g12
19:46:12  61  ,aud_g13
19:46:12  62  ,aud_g14
19:46:12  63  ,aud_g15
19:46:12  64  ,aud_g16
19:46:12  65  ,aud_g17
19:46:12  66  ,aud_g18
19:46:12  67  ,aud_g19
19:46:12  68  ,aud_g20
19:46:12  69  ,aud_g21
19:46:12  70  ,aud_g22
19:46:12  71  ,aud_g23
19:46:12  72  ,aud_g24
19:46:12  73  ,aud_g25
19:46:12  74  ,aud_g26
19:46:12  75  ,aud_g27
19:46:12  76  ,aud_g28
19:46:12  77  ,aud_g29
19:46:12  78  ,aud_g30
19:46:12  79  ,aud_g31
19:46:12  80  ,aud_g32
19:46:12  81  ,aud_g33
19:46:12  82  ,aud_g34
19:46:12  83  ,aud_g35
19:46:12  84  ,aud_g36
19:46:12  85  ,aud_g37
19:46:12  86  ,aud_g38
19:46:12  87  ,aud_g39
19:46:12  88  ,aud_g40
19:46:12  89  ,aud_g41
19:46:12  90  ,gbp_g00
19:46:12  91  ,gbp_g01
19:46:12  92  ,gbp_g02
19:46:12  93  ,gbp_g03
19:46:12  94  ,gbp_g04
19:46:12  95  ,gbp_g05
19:46:12  96  ,gbp_g06
19:46:12  97  ,gbp_g07
19:46:12  98  ,gbp_g08
19:46:12  99  ,gbp_g09
19:46:12 100  ,gbp_g10
19:46:12 101  ,gbp_g11
19:46:12 102  ,gbp_g12
19:46:12 103  ,gbp_g13
19:46:12 104  ,gbp_g14
19:46:12 105  ,gbp_g15
19:46:12 106  ,gbp_g16
19:46:12 107  ,gbp_g17
19:46:12 108  ,gbp_g18
19:46:12 109  ,gbp_g19
19:46:12 110  ,gbp_g20
19:46:12 111  ,gbp_g21
19:46:12 112  ,gbp_g22
19:46:12 113  ,gbp_g23
19:46:12 114  ,gbp_g24
19:46:12 115  ,gbp_g25
19:46:12 116  ,gbp_g26
19:46:12 117  ,gbp_g27
19:46:12 118  ,gbp_g28
19:46:12 119  ,gbp_g29
19:46:12 120  ,gbp_g30
19:46:12 121  ,gbp_g31
19:46:12 122  ,gbp_g32
19:46:12 123  ,gbp_g33
19:46:12 124  ,gbp_g34
19:46:12 125  ,gbp_g35
19:46:12 126  ,gbp_g36
19:46:12 127  ,gbp_g37
19:46:12 128  ,gbp_g38
19:46:12 129  ,gbp_g39
19:46:12 130  ,gbp_g40
19:46:12 131  ,gbp_g41
19:46:12 132  ,jpy_g00
19:46:12 133  ,jpy_g01
19:46:12 134  ,jpy_g02
19:46:12 135  ,jpy_g03
19:46:12 136  ,jpy_g04
19:46:12 137  ,jpy_g05
19:46:12 138  ,jpy_g06
19:46:12 139  ,jpy_g07
19:46:12 140  ,jpy_g08
19:46:12 141  ,jpy_g09
19:46:12 142  ,jpy_g10
19:46:12 143  ,jpy_g11
19:46:12 144  ,jpy_g12
19:46:12 145  ,jpy_g13
19:46:12 146  ,jpy_g14
19:46:12 147  ,jpy_g15
19:46:12 148  ,jpy_g16
19:46:12 149  ,jpy_g17
19:46:12 150  ,jpy_g18
19:46:12 151  ,jpy_g19
19:46:12 152  ,jpy_g20
19:46:12 153  ,jpy_g21
19:46:12 154  ,jpy_g22
19:46:12 155  ,jpy_g23
19:46:12 156  ,jpy_g24
19:46:12 157  ,jpy_g25
19:46:12 158  ,jpy_g26
19:46:12 159  ,jpy_g27
19:46:12 160  ,jpy_g28
19:46:12 161  ,jpy_g29
19:46:12 162  ,jpy_g30
19:46:12 163  ,jpy_g31
19:46:12 164  ,jpy_g32
19:46:12 165  ,jpy_g33
19:46:12 166  ,jpy_g34
19:46:12 167  ,jpy_g35
19:46:12 168  ,jpy_g36
19:46:12 169  ,jpy_g37
19:46:12 170  ,jpy_g38
19:46:12 171  ,jpy_g39
19:46:12 172  ,jpy_g40
19:46:12 173  ,jpy_g41
19:46:12 174  ,cad_g00
19:46:12 175  ,cad_g01
19:46:12 176  ,cad_g02
19:46:12 177  ,cad_g03
19:46:12 178  ,cad_g04
19:46:12 179  ,cad_g05
19:46:12 180  ,cad_g06
19:46:12 181  ,cad_g07
19:46:12 182  ,cad_g08
19:46:12 183  ,cad_g09
19:46:12 184  ,cad_g10
19:46:12 185  ,cad_g11
19:46:12 186  ,cad_g12
19:46:12 187  ,cad_g13
19:46:12 188  ,cad_g14
19:46:12 189  ,cad_g15
19:46:12 190  ,cad_g16
19:46:12 191  ,cad_g17
19:46:12 192  ,cad_g18
19:46:12 193  ,cad_g19
19:46:12 194  ,cad_g20
19:46:12 195  ,cad_g21
19:46:12 196  ,cad_g22
19:46:12 197  ,cad_g23
19:46:12 198  ,cad_g24
19:46:12 199  ,cad_g25
19:46:12 200  ,cad_g26
19:46:12 201  ,cad_g27
19:46:12 202  ,cad_g28
19:46:12 203  ,cad_g29
19:46:12 204  ,cad_g30
19:46:12 205  ,cad_g31
19:46:12 206  ,cad_g32
19:46:12 207  ,cad_g33
19:46:12 208  ,cad_g34
19:46:12 209  ,cad_g35
19:46:12 210  ,cad_g36
19:46:12 211  ,cad_g37
19:46:12 212  ,cad_g38
19:46:12 213  ,cad_g39
19:46:12 214  ,cad_g40
19:46:12 215  ,cad_g41
19:46:12 216  ,chf_g00
19:46:12 217  ,chf_g01
19:46:12 218  ,chf_g02
19:46:12 219  ,chf_g03
19:46:12 220  ,chf_g04
19:46:12 221  ,chf_g05
19:46:12 222  ,chf_g06
19:46:12 223  ,chf_g07
19:46:12 224  ,chf_g08
19:46:12 225  ,chf_g09
19:46:12 226  ,chf_g10
19:46:12 227  ,chf_g11
19:46:12 228  ,chf_g12
19:46:12 229  ,chf_g13
19:46:12 230  ,chf_g14
19:46:12 231  ,chf_g15
19:46:12 232  ,chf_g16
19:46:12 233  ,chf_g17
19:46:12 234  ,chf_g18
19:46:12 235  ,chf_g19
19:46:12 236  ,chf_g20
19:46:12 237  ,chf_g21
19:46:12 238  ,chf_g22
19:46:12 239  ,chf_g23
19:46:12 240  ,chf_g24
19:46:12 241  ,chf_g25
19:46:12 242  ,chf_g26
19:46:12 243  ,chf_g27
19:46:12 244  ,chf_g28
19:46:12 245  ,chf_g29
19:46:12 246  ,chf_g30
19:46:12 247  ,chf_g31
19:46:12 248  ,chf_g32
19:46:12 249  ,chf_g33
19:46:12 250  ,chf_g34
19:46:12 251  ,chf_g35
19:46:12 252  ,chf_g36
19:46:12 253  ,chf_g37
19:46:12 254  ,chf_g38
19:46:12 255  ,chf_g39
19:46:12 256  ,chf_g40
19:46:12 257  ,chf_g41
19:46:12 258  FROM aud_ms6 m
19:46:12 259  WHERE gattn IN('nup','up')
19:46:12 260  AND 1+m.ydate < '&1'||' '||'&2'
19:46:12 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'19:25:00'

View created.

Elapsed: 00:00:00.36
19:46:12 SQL> 
19:46:12 SQL> -- rpt
19:46:12 SQL> 
19:46:12 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12731
up	     6258

Elapsed: 00:00:00.04
19:46:12 SQL> 
19:46:12 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 21:55:00

Elapsed: 00:00:00.04
19:46:12 SQL> 
19:46:12 SQL> -- Now build model from bme and score sme
19:46:12 SQL> @score1gattn.sql
19:46:12 SQL> -- score1gattn.sql
19:46:12 SQL> 
19:46:12 SQL> -- Does the 1st SVM score
19:46:12 SQL> 
19:46:12 SQL> -- Fill up svmc_apply_prep
19:46:12 SQL> @score_gattn.sql
19:46:12 SQL> --
19:46:12 SQL> -- score_gattn.sql
19:46:12 SQL> --
19:46:12 SQL> 
19:46:12 SQL> -- usage: score_gattn.sql
19:46:12 SQL> 
19:46:12 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
19:46:12 SQL> 
19:46:12 SQL> DEFINE target	= 'gattn'
19:46:12 SQL> DEFINE model_name = 'forex14'
19:46:12 SQL> DEFINE bldtable	= 'bme'
19:46:12 SQL> DEFINE scoretable = 'sme'
19:46:12 SQL> DEFINE case_id	= 'prdate'
19:46:12 SQL> 
19:46:12 SQL> -- Define a variable to help me exclude some columns from some data mining calls
19:46:12 SQL> DEFINE exclude1 = "'&target','&case_id'"
19:46:12 SQL> 
19:46:12 SQL> -- Builds an SVM model using pl/sql.
19:46:12 SQL> 
19:46:12 SQL> -----------------------------------------------------------------------
19:46:12 SQL> --			    BUILD THE MODEL
19:46:12 SQL> -----------------------------------------------------------------------
19:46:12 SQL> 
19:46:12 SQL> -- Cleanup old build data preparation objects for repeat runs
19:46:12 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
19:46:12 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
19:46:12 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.03
19:46:12 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
19:46:12 SQL> 
19:46:12 SQL> 
19:46:12 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
19:46:12 SQL> --
19:46:12 SQL> -- DROP	TABLE svmc_settings ;
19:46:12 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
19:46:12 SQL> -- DELETE svmc_settings;
19:46:12 SQL> 
19:46:12 SQL> -- The default classification algorithm is Naive Bayes. So override
19:46:12 SQL> -- this choice to SVM using a settings table.
19:46:12 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
19:46:12 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
19:46:12 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
19:46:12 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
19:46:12 SQL> -- models.
19:46:12 SQL> --
19:46:12 SQL> 
19:46:12 SQL> -- Do this once and then comment it out.
19:46:12 SQL> -- That makes script go faster.
19:46:12 SQL> -- BEGIN
19:46:12 SQL> -- -- Populate settings table
19:46:12 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:46:12 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
19:46:12 SQL> --
19:46:12 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:46:12 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
19:46:12 SQL> --
19:46:12 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:46:12 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
19:46:12 SQL> --   COMMIT;
19:46:12 SQL> -- END;
19:46:12 SQL> -- /
19:46:12 SQL> 
19:46:12 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
19:46:12 SQL> 
19:46:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
19:46:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:46:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
19:46:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
19:46:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:46:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.12
19:46:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
19:46:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:46:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:46:12 SQL> 
19:46:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
19:46:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:46:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
19:46:13 SQL> 
19:46:13 SQL> --------------------------------
19:46:13 SQL> -- PREPARE BUILD (TRAINING) DATA
19:46:13 SQL> --
19:46:13 SQL> 
19:46:13 SQL> -- 1. Missing Value treatment for all Predictors and
19:46:13 SQL> -- 2. Outlier Treatment and
19:46:13 SQL> -- 3. Normalization are performed below.
19:46:13 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
19:46:13 SQL> --    normalized here.
19:46:13 SQL> 
19:46:13 SQL> BEGIN
19:46:13   2  	-- Perform missing value treatment for all predictors
19:46:13   3  	-- create miss tables
19:46:13   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
19:46:13   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
19:46:13   6  
19:46:13   7  	-- populate miss tables
19:46:13   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
19:46:13   9  	  miss_table_name => 'svmc_miss_num',
19:46:13  10  	  data_table_name => '&bldtable',
19:46:13  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:46:13  12  
19:46:13  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
19:46:13  14  	  miss_table_name => 'svmc_miss_cat',
19:46:13  15  	  data_table_name => '&bldtable',
19:46:13  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:46:13  17  
19:46:13  18  	-- xform input data to replace missing values
19:46:13  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:46:13  20  	  miss_table_name => 'svmc_miss_num',
19:46:13  21  	  data_table_name => '&bldtable',
19:46:13  22  	  xform_view_name => 'xformed_build_miss_num');
19:46:13  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:46:13  24  	  miss_table_name => 'svmc_miss_cat',
19:46:13  25  	  data_table_name => '&bldtable',
19:46:13  26  	  xform_view_name => 'xformed_build_miss_cat');
19:46:13  27  
19:46:13  28  	-- Perform outlier treatment.
19:46:13  29  	-- create clip table
19:46:13  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
19:46:13  31  
19:46:13  32  	-- populate clip table
19:46:13  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
19:46:13  34  	  clip_table_name => 'svmc_clip',
19:46:13  35  	  data_table_name => '&bldtable',
19:46:13  36  	  tail_frac	  => 0.025,
19:46:13  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:46:13  38  
19:46:13  39  	-- xform input data to winsorized data
19:46:13  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
19:46:13  41  	  clip_table_name => 'svmc_clip',
19:46:13  42  	  data_table_name => '&bldtable',
19:46:13  43  	  xform_view_name => 'svmc_winsor');
19:46:13  44  
19:46:13  45  	-- create normalization table
19:46:13  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
19:46:13  47  
19:46:13  48  	-- populate normalization table based on winsorized data
19:46:13  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
19:46:13  50  	  norm_table_name => 'svmc_norm',
19:46:13  51  	  data_table_name => 'svmc_winsor',
19:46:13  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:46:13  53  
19:46:13  54  	-- normalize the original data
19:46:13  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:46:13  56  	  norm_table_name => 'svmc_norm',
19:46:13  57  	  data_table_name => '&bldtable',
19:46:13  58  	  xform_view_name => 'svmc_build_prep');
19:46:13  59  END;
19:46:13  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.28
19:46:31 SQL> 
19:46:31 SQL> ---------------------
19:46:31 SQL> -- CREATE A NEW MODEL
19:46:31 SQL> --
19:46:31 SQL> -- Cleanup old model with the same name for repeat runs
19:46:31 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
19:46:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:46:31   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.33
19:46:32 SQL> 
19:46:32 SQL> -- Build a new SVM Model
19:46:32 SQL> BEGIN
19:46:32   2  	DBMS_DATA_MINING.CREATE_MODEL(
19:46:32   3  	  model_name	      => '&model_name',
19:46:32   4  	  mining_function     => dbms_data_mining.classification,
19:46:32   5  	  data_table_name     => 'svmc_build_prep',
19:46:32   6  	  case_id_column_name => '&case_id',
19:46:32   7  	  target_column_name  => '&target',
19:46:32   8  	  settings_table_name => 'svmc_settings');
19:46:32   9  END;
19:46:32  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:34.64
19:47:07 SQL> 
19:47:07 SQL> -----------------------------------------------------------------------
19:47:07 SQL> --			       APPLY/score THE MODEL
19:47:07 SQL> -----------------------------------------------------------------------
19:47:07 SQL> 
19:47:07 SQL> -- Cleanup old scoring data preparation objects for repeat runs
19:47:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
19:47:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:47:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.15
19:47:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
19:47:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:47:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
19:47:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
19:47:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:47:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
19:47:07 SQL> -----------------------
19:47:07 SQL> -- PREPARE SCORING DATA
19:47:07 SQL> --
19:47:07 SQL> -- If the data for model creation has been prepared, then the data
19:47:07 SQL> -- to be scored using the model must be prepared in the same manner
19:47:07 SQL> -- in order to obtain meaningful results.
19:47:07 SQL> --
19:47:07 SQL> -- 1. Missing Value treatment for all Predictors and
19:47:07 SQL> -- 2. Normalization
19:47:07 SQL> -- No outlier treatment will be performed during test and apply. The
19:47:07 SQL> -- normalization step is sufficient, since the normalization parameters
19:47:07 SQL> -- already capture the effects of outlier treatment done with build data.
19:47:07 SQL> --
19:47:07 SQL> BEGIN
19:47:07   2  	-- Xform Test data to replace missing values
19:47:07   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:47:07   4  	  miss_table_name => 'svmc_miss_num',
19:47:07   5  	  data_table_name => '&scoretable',
19:47:07   6  	  xform_view_name => 'xformed_apply_miss_num');
19:47:07   7  
19:47:07   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:47:07   9  	  miss_table_name => 'svmc_miss_cat',
19:47:07  10  	  data_table_name => '&scoretable',
19:47:07  11  	  xform_view_name => 'xformed_apply_miss_cat');
19:47:07  12  
19:47:07  13  	-- Normalize the data to be scored
19:47:07  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:47:07  15  	  norm_table_name => 'svmc_norm',
19:47:07  16  	  data_table_name => '&scoretable',
19:47:07  17  	  xform_view_name => 'svmc_apply_prep');
19:47:07  18  END;
19:47:07  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.66
19:47:09 SQL> 
19:47:09 SQL> -- Use same model_name used in score_gattn.sql
19:47:09 SQL> DEFINE model_name = 'forex14'
19:47:09 SQL> 
19:47:09 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.09
19:47:09 SQL> 
19:47:09 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
19:47:09   2  SELECT
19:47:09   3  prdate
19:47:09   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
19:47:09   5  ,sysdate
19:47:09   6  ,SUBSTR(prdate,1,3)pair
19:47:09   7  ,SUBSTR(prdate,4,19)ydate
19:47:09   8  FROM svmc_apply_prep
19:47:09   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.19
19:47:09 SQL> @aud_score1day_gattn.sql	2011-01-03 19:30:00
19:47:09 SQL> --
19:47:09 SQL> -- aud_score1day_gattn.sql
19:47:09 SQL> --
19:47:09 SQL> 
19:47:09 SQL> CREATE OR REPLACE VIEW sme AS
19:47:09   2  SELECT
19:47:09   3  'aud'||m.ydate prdate
19:47:09   4  ,NULL gattn
19:47:09   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:47:09   6  ,eur_g00
19:47:09   7  ,eur_g01
19:47:09   8  ,eur_g02
19:47:09   9  ,eur_g03
19:47:09  10  ,eur_g04
19:47:09  11  ,eur_g05
19:47:09  12  ,eur_g06
19:47:09  13  ,eur_g07
19:47:09  14  ,eur_g08
19:47:09  15  ,eur_g09
19:47:09  16  ,eur_g10
19:47:09  17  ,eur_g11
19:47:09  18  ,eur_g12
19:47:09  19  ,eur_g13
19:47:09  20  ,eur_g14
19:47:09  21  ,eur_g15
19:47:09  22  ,eur_g16
19:47:09  23  ,eur_g17
19:47:09  24  ,eur_g18
19:47:09  25  ,eur_g19
19:47:09  26  ,eur_g20
19:47:09  27  ,eur_g21
19:47:09  28  ,eur_g22
19:47:09  29  ,eur_g23
19:47:09  30  ,eur_g24
19:47:09  31  ,eur_g25
19:47:09  32  ,eur_g26
19:47:09  33  ,eur_g27
19:47:09  34  ,eur_g28
19:47:09  35  ,eur_g29
19:47:09  36  ,eur_g30
19:47:09  37  ,eur_g31
19:47:09  38  ,eur_g32
19:47:09  39  ,eur_g33
19:47:09  40  ,eur_g34
19:47:09  41  ,eur_g35
19:47:09  42  ,eur_g36
19:47:09  43  ,eur_g37
19:47:09  44  ,eur_g38
19:47:09  45  ,eur_g39
19:47:09  46  ,eur_g40
19:47:09  47  ,eur_g41
19:47:09  48  ,aud_g00
19:47:09  49  ,aud_g01
19:47:09  50  ,aud_g02
19:47:09  51  ,aud_g03
19:47:09  52  ,aud_g04
19:47:09  53  ,aud_g05
19:47:09  54  ,aud_g06
19:47:09  55  ,aud_g07
19:47:09  56  ,aud_g08
19:47:09  57  ,aud_g09
19:47:09  58  ,aud_g10
19:47:09  59  ,aud_g11
19:47:09  60  ,aud_g12
19:47:09  61  ,aud_g13
19:47:09  62  ,aud_g14
19:47:09  63  ,aud_g15
19:47:09  64  ,aud_g16
19:47:09  65  ,aud_g17
19:47:09  66  ,aud_g18
19:47:09  67  ,aud_g19
19:47:09  68  ,aud_g20
19:47:09  69  ,aud_g21
19:47:09  70  ,aud_g22
19:47:09  71  ,aud_g23
19:47:09  72  ,aud_g24
19:47:09  73  ,aud_g25
19:47:09  74  ,aud_g26
19:47:09  75  ,aud_g27
19:47:09  76  ,aud_g28
19:47:09  77  ,aud_g29
19:47:09  78  ,aud_g30
19:47:09  79  ,aud_g31
19:47:09  80  ,aud_g32
19:47:09  81  ,aud_g33
19:47:09  82  ,aud_g34
19:47:09  83  ,aud_g35
19:47:09  84  ,aud_g36
19:47:09  85  ,aud_g37
19:47:09  86  ,aud_g38
19:47:09  87  ,aud_g39
19:47:09  88  ,aud_g40
19:47:09  89  ,aud_g41
19:47:09  90  ,gbp_g00
19:47:09  91  ,gbp_g01
19:47:09  92  ,gbp_g02
19:47:09  93  ,gbp_g03
19:47:09  94  ,gbp_g04
19:47:09  95  ,gbp_g05
19:47:09  96  ,gbp_g06
19:47:09  97  ,gbp_g07
19:47:09  98  ,gbp_g08
19:47:09  99  ,gbp_g09
19:47:09 100  ,gbp_g10
19:47:09 101  ,gbp_g11
19:47:09 102  ,gbp_g12
19:47:09 103  ,gbp_g13
19:47:09 104  ,gbp_g14
19:47:09 105  ,gbp_g15
19:47:09 106  ,gbp_g16
19:47:09 107  ,gbp_g17
19:47:09 108  ,gbp_g18
19:47:09 109  ,gbp_g19
19:47:09 110  ,gbp_g20
19:47:09 111  ,gbp_g21
19:47:09 112  ,gbp_g22
19:47:09 113  ,gbp_g23
19:47:09 114  ,gbp_g24
19:47:09 115  ,gbp_g25
19:47:09 116  ,gbp_g26
19:47:09 117  ,gbp_g27
19:47:09 118  ,gbp_g28
19:47:09 119  ,gbp_g29
19:47:09 120  ,gbp_g30
19:47:09 121  ,gbp_g31
19:47:09 122  ,gbp_g32
19:47:09 123  ,gbp_g33
19:47:09 124  ,gbp_g34
19:47:09 125  ,gbp_g35
19:47:09 126  ,gbp_g36
19:47:09 127  ,gbp_g37
19:47:09 128  ,gbp_g38
19:47:09 129  ,gbp_g39
19:47:09 130  ,gbp_g40
19:47:09 131  ,gbp_g41
19:47:09 132  ,jpy_g00
19:47:09 133  ,jpy_g01
19:47:09 134  ,jpy_g02
19:47:09 135  ,jpy_g03
19:47:09 136  ,jpy_g04
19:47:09 137  ,jpy_g05
19:47:09 138  ,jpy_g06
19:47:09 139  ,jpy_g07
19:47:09 140  ,jpy_g08
19:47:09 141  ,jpy_g09
19:47:09 142  ,jpy_g10
19:47:09 143  ,jpy_g11
19:47:09 144  ,jpy_g12
19:47:09 145  ,jpy_g13
19:47:09 146  ,jpy_g14
19:47:09 147  ,jpy_g15
19:47:09 148  ,jpy_g16
19:47:09 149  ,jpy_g17
19:47:09 150  ,jpy_g18
19:47:09 151  ,jpy_g19
19:47:09 152  ,jpy_g20
19:47:09 153  ,jpy_g21
19:47:09 154  ,jpy_g22
19:47:09 155  ,jpy_g23
19:47:09 156  ,jpy_g24
19:47:09 157  ,jpy_g25
19:47:09 158  ,jpy_g26
19:47:09 159  ,jpy_g27
19:47:09 160  ,jpy_g28
19:47:09 161  ,jpy_g29
19:47:09 162  ,jpy_g30
19:47:09 163  ,jpy_g31
19:47:09 164  ,jpy_g32
19:47:09 165  ,jpy_g33
19:47:09 166  ,jpy_g34
19:47:09 167  ,jpy_g35
19:47:09 168  ,jpy_g36
19:47:09 169  ,jpy_g37
19:47:09 170  ,jpy_g38
19:47:09 171  ,jpy_g39
19:47:09 172  ,jpy_g40
19:47:09 173  ,jpy_g41
19:47:09 174  ,cad_g00
19:47:09 175  ,cad_g01
19:47:09 176  ,cad_g02
19:47:09 177  ,cad_g03
19:47:09 178  ,cad_g04
19:47:09 179  ,cad_g05
19:47:09 180  ,cad_g06
19:47:09 181  ,cad_g07
19:47:09 182  ,cad_g08
19:47:09 183  ,cad_g09
19:47:09 184  ,cad_g10
19:47:09 185  ,cad_g11
19:47:09 186  ,cad_g12
19:47:09 187  ,cad_g13
19:47:09 188  ,cad_g14
19:47:09 189  ,cad_g15
19:47:09 190  ,cad_g16
19:47:09 191  ,cad_g17
19:47:09 192  ,cad_g18
19:47:09 193  ,cad_g19
19:47:09 194  ,cad_g20
19:47:09 195  ,cad_g21
19:47:09 196  ,cad_g22
19:47:09 197  ,cad_g23
19:47:09 198  ,cad_g24
19:47:09 199  ,cad_g25
19:47:09 200  ,cad_g26
19:47:09 201  ,cad_g27
19:47:09 202  ,cad_g28
19:47:09 203  ,cad_g29
19:47:09 204  ,cad_g30
19:47:09 205  ,cad_g31
19:47:09 206  ,cad_g32
19:47:09 207  ,cad_g33
19:47:09 208  ,cad_g34
19:47:09 209  ,cad_g35
19:47:09 210  ,cad_g36
19:47:09 211  ,cad_g37
19:47:09 212  ,cad_g38
19:47:09 213  ,cad_g39
19:47:09 214  ,cad_g40
19:47:09 215  ,cad_g41
19:47:09 216  ,chf_g00
19:47:09 217  ,chf_g01
19:47:09 218  ,chf_g02
19:47:09 219  ,chf_g03
19:47:09 220  ,chf_g04
19:47:09 221  ,chf_g05
19:47:09 222  ,chf_g06
19:47:09 223  ,chf_g07
19:47:09 224  ,chf_g08
19:47:09 225  ,chf_g09
19:47:09 226  ,chf_g10
19:47:09 227  ,chf_g11
19:47:09 228  ,chf_g12
19:47:09 229  ,chf_g13
19:47:09 230  ,chf_g14
19:47:09 231  ,chf_g15
19:47:09 232  ,chf_g16
19:47:09 233  ,chf_g17
19:47:09 234  ,chf_g18
19:47:09 235  ,chf_g19
19:47:09 236  ,chf_g20
19:47:09 237  ,chf_g21
19:47:09 238  ,chf_g22
19:47:09 239  ,chf_g23
19:47:09 240  ,chf_g24
19:47:09 241  ,chf_g25
19:47:09 242  ,chf_g26
19:47:09 243  ,chf_g27
19:47:09 244  ,chf_g28
19:47:09 245  ,chf_g29
19:47:09 246  ,chf_g30
19:47:09 247  ,chf_g31
19:47:09 248  ,chf_g32
19:47:09 249  ,chf_g33
19:47:09 250  ,chf_g34
19:47:09 251  ,chf_g35
19:47:09 252  ,chf_g36
19:47:09 253  ,chf_g37
19:47:09 254  ,chf_g38
19:47:09 255  ,chf_g39
19:47:09 256  ,chf_g40
19:47:09 257  ,chf_g41
19:47:09 258  FROM aud_ms6 m
19:47:09 259  WHERE m.ydate = '&1'||' '||'&2'
19:47:09 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'19:30:00'

View created.

Elapsed: 00:00:00.19
19:47:09 SQL> 
19:47:09 SQL> -- rpt
19:47:09 SQL> -- We should see just 1 row:
19:47:09 SQL> 
19:47:09 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
19:47:09 SQL> 
19:47:09 SQL> -- Build the model:
19:47:09 SQL> CREATE OR REPLACE VIEW bme AS
19:47:09   2  SELECT
19:47:09   3  'aud'||m.ydate prdate
19:47:09   4  ,gattn
19:47:09   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:47:09   6  ,eur_g00
19:47:09   7  ,eur_g01
19:47:09   8  ,eur_g02
19:47:09   9  ,eur_g03
19:47:09  10  ,eur_g04
19:47:09  11  ,eur_g05
19:47:09  12  ,eur_g06
19:47:09  13  ,eur_g07
19:47:09  14  ,eur_g08
19:47:09  15  ,eur_g09
19:47:09  16  ,eur_g10
19:47:09  17  ,eur_g11
19:47:09  18  ,eur_g12
19:47:09  19  ,eur_g13
19:47:09  20  ,eur_g14
19:47:09  21  ,eur_g15
19:47:09  22  ,eur_g16
19:47:09  23  ,eur_g17
19:47:09  24  ,eur_g18
19:47:09  25  ,eur_g19
19:47:09  26  ,eur_g20
19:47:09  27  ,eur_g21
19:47:09  28  ,eur_g22
19:47:09  29  ,eur_g23
19:47:09  30  ,eur_g24
19:47:09  31  ,eur_g25
19:47:09  32  ,eur_g26
19:47:09  33  ,eur_g27
19:47:09  34  ,eur_g28
19:47:09  35  ,eur_g29
19:47:09  36  ,eur_g30
19:47:09  37  ,eur_g31
19:47:09  38  ,eur_g32
19:47:09  39  ,eur_g33
19:47:09  40  ,eur_g34
19:47:09  41  ,eur_g35
19:47:09  42  ,eur_g36
19:47:09  43  ,eur_g37
19:47:09  44  ,eur_g38
19:47:09  45  ,eur_g39
19:47:09  46  ,eur_g40
19:47:09  47  ,eur_g41
19:47:09  48  ,aud_g00
19:47:09  49  ,aud_g01
19:47:09  50  ,aud_g02
19:47:09  51  ,aud_g03
19:47:09  52  ,aud_g04
19:47:09  53  ,aud_g05
19:47:09  54  ,aud_g06
19:47:09  55  ,aud_g07
19:47:09  56  ,aud_g08
19:47:09  57  ,aud_g09
19:47:09  58  ,aud_g10
19:47:09  59  ,aud_g11
19:47:09  60  ,aud_g12
19:47:09  61  ,aud_g13
19:47:09  62  ,aud_g14
19:47:09  63  ,aud_g15
19:47:09  64  ,aud_g16
19:47:09  65  ,aud_g17
19:47:09  66  ,aud_g18
19:47:09  67  ,aud_g19
19:47:09  68  ,aud_g20
19:47:09  69  ,aud_g21
19:47:09  70  ,aud_g22
19:47:09  71  ,aud_g23
19:47:09  72  ,aud_g24
19:47:09  73  ,aud_g25
19:47:09  74  ,aud_g26
19:47:09  75  ,aud_g27
19:47:09  76  ,aud_g28
19:47:09  77  ,aud_g29
19:47:09  78  ,aud_g30
19:47:09  79  ,aud_g31
19:47:09  80  ,aud_g32
19:47:09  81  ,aud_g33
19:47:09  82  ,aud_g34
19:47:09  83  ,aud_g35
19:47:09  84  ,aud_g36
19:47:09  85  ,aud_g37
19:47:09  86  ,aud_g38
19:47:09  87  ,aud_g39
19:47:09  88  ,aud_g40
19:47:09  89  ,aud_g41
19:47:09  90  ,gbp_g00
19:47:09  91  ,gbp_g01
19:47:09  92  ,gbp_g02
19:47:09  93  ,gbp_g03
19:47:09  94  ,gbp_g04
19:47:09  95  ,gbp_g05
19:47:09  96  ,gbp_g06
19:47:09  97  ,gbp_g07
19:47:09  98  ,gbp_g08
19:47:09  99  ,gbp_g09
19:47:09 100  ,gbp_g10
19:47:09 101  ,gbp_g11
19:47:09 102  ,gbp_g12
19:47:09 103  ,gbp_g13
19:47:09 104  ,gbp_g14
19:47:09 105  ,gbp_g15
19:47:09 106  ,gbp_g16
19:47:09 107  ,gbp_g17
19:47:09 108  ,gbp_g18
19:47:09 109  ,gbp_g19
19:47:09 110  ,gbp_g20
19:47:09 111  ,gbp_g21
19:47:09 112  ,gbp_g22
19:47:09 113  ,gbp_g23
19:47:09 114  ,gbp_g24
19:47:09 115  ,gbp_g25
19:47:09 116  ,gbp_g26
19:47:09 117  ,gbp_g27
19:47:09 118  ,gbp_g28
19:47:09 119  ,gbp_g29
19:47:09 120  ,gbp_g30
19:47:09 121  ,gbp_g31
19:47:09 122  ,gbp_g32
19:47:09 123  ,gbp_g33
19:47:09 124  ,gbp_g34
19:47:09 125  ,gbp_g35
19:47:09 126  ,gbp_g36
19:47:09 127  ,gbp_g37
19:47:09 128  ,gbp_g38
19:47:09 129  ,gbp_g39
19:47:09 130  ,gbp_g40
19:47:09 131  ,gbp_g41
19:47:09 132  ,jpy_g00
19:47:09 133  ,jpy_g01
19:47:09 134  ,jpy_g02
19:47:09 135  ,jpy_g03
19:47:09 136  ,jpy_g04
19:47:09 137  ,jpy_g05
19:47:09 138  ,jpy_g06
19:47:09 139  ,jpy_g07
19:47:09 140  ,jpy_g08
19:47:09 141  ,jpy_g09
19:47:09 142  ,jpy_g10
19:47:09 143  ,jpy_g11
19:47:09 144  ,jpy_g12
19:47:09 145  ,jpy_g13
19:47:09 146  ,jpy_g14
19:47:09 147  ,jpy_g15
19:47:09 148  ,jpy_g16
19:47:09 149  ,jpy_g17
19:47:09 150  ,jpy_g18
19:47:09 151  ,jpy_g19
19:47:09 152  ,jpy_g20
19:47:09 153  ,jpy_g21
19:47:09 154  ,jpy_g22
19:47:09 155  ,jpy_g23
19:47:09 156  ,jpy_g24
19:47:09 157  ,jpy_g25
19:47:09 158  ,jpy_g26
19:47:09 159  ,jpy_g27
19:47:09 160  ,jpy_g28
19:47:09 161  ,jpy_g29
19:47:09 162  ,jpy_g30
19:47:09 163  ,jpy_g31
19:47:09 164  ,jpy_g32
19:47:09 165  ,jpy_g33
19:47:09 166  ,jpy_g34
19:47:09 167  ,jpy_g35
19:47:09 168  ,jpy_g36
19:47:09 169  ,jpy_g37
19:47:09 170  ,jpy_g38
19:47:09 171  ,jpy_g39
19:47:09 172  ,jpy_g40
19:47:09 173  ,jpy_g41
19:47:09 174  ,cad_g00
19:47:09 175  ,cad_g01
19:47:09 176  ,cad_g02
19:47:09 177  ,cad_g03
19:47:09 178  ,cad_g04
19:47:09 179  ,cad_g05
19:47:09 180  ,cad_g06
19:47:09 181  ,cad_g07
19:47:09 182  ,cad_g08
19:47:09 183  ,cad_g09
19:47:09 184  ,cad_g10
19:47:09 185  ,cad_g11
19:47:09 186  ,cad_g12
19:47:09 187  ,cad_g13
19:47:09 188  ,cad_g14
19:47:09 189  ,cad_g15
19:47:09 190  ,cad_g16
19:47:09 191  ,cad_g17
19:47:09 192  ,cad_g18
19:47:09 193  ,cad_g19
19:47:09 194  ,cad_g20
19:47:09 195  ,cad_g21
19:47:09 196  ,cad_g22
19:47:09 197  ,cad_g23
19:47:09 198  ,cad_g24
19:47:09 199  ,cad_g25
19:47:09 200  ,cad_g26
19:47:09 201  ,cad_g27
19:47:09 202  ,cad_g28
19:47:09 203  ,cad_g29
19:47:09 204  ,cad_g30
19:47:09 205  ,cad_g31
19:47:09 206  ,cad_g32
19:47:09 207  ,cad_g33
19:47:09 208  ,cad_g34
19:47:09 209  ,cad_g35
19:47:09 210  ,cad_g36
19:47:09 211  ,cad_g37
19:47:09 212  ,cad_g38
19:47:09 213  ,cad_g39
19:47:09 214  ,cad_g40
19:47:09 215  ,cad_g41
19:47:09 216  ,chf_g00
19:47:09 217  ,chf_g01
19:47:09 218  ,chf_g02
19:47:09 219  ,chf_g03
19:47:09 220  ,chf_g04
19:47:09 221  ,chf_g05
19:47:09 222  ,chf_g06
19:47:09 223  ,chf_g07
19:47:09 224  ,chf_g08
19:47:09 225  ,chf_g09
19:47:09 226  ,chf_g10
19:47:09 227  ,chf_g11
19:47:09 228  ,chf_g12
19:47:09 229  ,chf_g13
19:47:09 230  ,chf_g14
19:47:09 231  ,chf_g15
19:47:09 232  ,chf_g16
19:47:09 233  ,chf_g17
19:47:09 234  ,chf_g18
19:47:09 235  ,chf_g19
19:47:09 236  ,chf_g20
19:47:09 237  ,chf_g21
19:47:09 238  ,chf_g22
19:47:09 239  ,chf_g23
19:47:09 240  ,chf_g24
19:47:09 241  ,chf_g25
19:47:09 242  ,chf_g26
19:47:09 243  ,chf_g27
19:47:09 244  ,chf_g28
19:47:09 245  ,chf_g29
19:47:09 246  ,chf_g30
19:47:09 247  ,chf_g31
19:47:09 248  ,chf_g32
19:47:09 249  ,chf_g33
19:47:09 250  ,chf_g34
19:47:09 251  ,chf_g35
19:47:09 252  ,chf_g36
19:47:09 253  ,chf_g37
19:47:09 254  ,chf_g38
19:47:09 255  ,chf_g39
19:47:09 256  ,chf_g40
19:47:09 257  ,chf_g41
19:47:09 258  FROM aud_ms6 m
19:47:09 259  WHERE gattn IN('nup','up')
19:47:09 260  AND 1+m.ydate < '&1'||' '||'&2'
19:47:09 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'19:30:00'

View created.

Elapsed: 00:00:00.26
19:47:10 SQL> 
19:47:10 SQL> -- rpt
19:47:10 SQL> 
19:47:10 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12731
up	     6258

Elapsed: 00:00:00.04
19:47:10 SQL> 
19:47:10 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 21:55:00

Elapsed: 00:00:00.05
19:47:10 SQL> 
19:47:10 SQL> -- Now build model from bme and score sme
19:47:10 SQL> @score1gattn.sql
19:47:10 SQL> -- score1gattn.sql
19:47:10 SQL> 
19:47:10 SQL> -- Does the 1st SVM score
19:47:10 SQL> 
19:47:10 SQL> -- Fill up svmc_apply_prep
19:47:10 SQL> @score_gattn.sql
19:47:10 SQL> --
19:47:10 SQL> -- score_gattn.sql
19:47:10 SQL> --
19:47:10 SQL> 
19:47:10 SQL> -- usage: score_gattn.sql
19:47:10 SQL> 
19:47:10 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
19:47:10 SQL> 
19:47:10 SQL> DEFINE target	= 'gattn'
19:47:10 SQL> DEFINE model_name = 'forex14'
19:47:10 SQL> DEFINE bldtable	= 'bme'
19:47:10 SQL> DEFINE scoretable = 'sme'
19:47:10 SQL> DEFINE case_id	= 'prdate'
19:47:10 SQL> 
19:47:10 SQL> -- Define a variable to help me exclude some columns from some data mining calls
19:47:10 SQL> DEFINE exclude1 = "'&target','&case_id'"
19:47:10 SQL> 
19:47:10 SQL> -- Builds an SVM model using pl/sql.
19:47:10 SQL> 
19:47:10 SQL> -----------------------------------------------------------------------
19:47:10 SQL> --			    BUILD THE MODEL
19:47:10 SQL> -----------------------------------------------------------------------
19:47:10 SQL> 
19:47:10 SQL> -- Cleanup old build data preparation objects for repeat runs
19:47:10 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
19:47:10 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
19:47:10 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
19:47:10 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
19:47:10 SQL> 
19:47:10 SQL> 
19:47:10 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
19:47:10 SQL> --
19:47:10 SQL> -- DROP	TABLE svmc_settings ;
19:47:10 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
19:47:10 SQL> -- DELETE svmc_settings;
19:47:10 SQL> 
19:47:10 SQL> -- The default classification algorithm is Naive Bayes. So override
19:47:10 SQL> -- this choice to SVM using a settings table.
19:47:10 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
19:47:10 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
19:47:10 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
19:47:10 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
19:47:10 SQL> -- models.
19:47:10 SQL> --
19:47:10 SQL> 
19:47:10 SQL> -- Do this once and then comment it out.
19:47:10 SQL> -- That makes script go faster.
19:47:10 SQL> -- BEGIN
19:47:10 SQL> -- -- Populate settings table
19:47:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:47:10 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
19:47:10 SQL> --
19:47:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:47:10 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
19:47:10 SQL> --
19:47:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:47:10 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
19:47:10 SQL> --   COMMIT;
19:47:10 SQL> -- END;
19:47:10 SQL> -- /
19:47:10 SQL> 
19:47:10 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
19:47:10 SQL> 
19:47:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
19:47:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:47:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.14
19:47:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
19:47:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:47:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.13
19:47:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
19:47:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:47:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.14
19:47:10 SQL> 
19:47:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
19:47:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:47:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
19:47:10 SQL> 
19:47:10 SQL> --------------------------------
19:47:10 SQL> -- PREPARE BUILD (TRAINING) DATA
19:47:10 SQL> --
19:47:10 SQL> 
19:47:10 SQL> -- 1. Missing Value treatment for all Predictors and
19:47:10 SQL> -- 2. Outlier Treatment and
19:47:10 SQL> -- 3. Normalization are performed below.
19:47:10 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
19:47:10 SQL> --    normalized here.
19:47:10 SQL> 
19:47:10 SQL> BEGIN
19:47:10   2  	-- Perform missing value treatment for all predictors
19:47:10   3  	-- create miss tables
19:47:10   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
19:47:10   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
19:47:10   6  
19:47:10   7  	-- populate miss tables
19:47:10   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
19:47:10   9  	  miss_table_name => 'svmc_miss_num',
19:47:10  10  	  data_table_name => '&bldtable',
19:47:10  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:47:10  12  
19:47:10  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
19:47:10  14  	  miss_table_name => 'svmc_miss_cat',
19:47:10  15  	  data_table_name => '&bldtable',
19:47:10  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:47:10  17  
19:47:10  18  	-- xform input data to replace missing values
19:47:10  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:47:10  20  	  miss_table_name => 'svmc_miss_num',
19:47:10  21  	  data_table_name => '&bldtable',
19:47:10  22  	  xform_view_name => 'xformed_build_miss_num');
19:47:10  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:47:10  24  	  miss_table_name => 'svmc_miss_cat',
19:47:10  25  	  data_table_name => '&bldtable',
19:47:10  26  	  xform_view_name => 'xformed_build_miss_cat');
19:47:10  27  
19:47:10  28  	-- Perform outlier treatment.
19:47:10  29  	-- create clip table
19:47:10  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
19:47:10  31  
19:47:10  32  	-- populate clip table
19:47:10  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
19:47:10  34  	  clip_table_name => 'svmc_clip',
19:47:10  35  	  data_table_name => '&bldtable',
19:47:10  36  	  tail_frac	  => 0.025,
19:47:10  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:47:10  38  
19:47:10  39  	-- xform input data to winsorized data
19:47:10  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
19:47:10  41  	  clip_table_name => 'svmc_clip',
19:47:10  42  	  data_table_name => '&bldtable',
19:47:10  43  	  xform_view_name => 'svmc_winsor');
19:47:10  44  
19:47:10  45  	-- create normalization table
19:47:10  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
19:47:10  47  
19:47:10  48  	-- populate normalization table based on winsorized data
19:47:10  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
19:47:10  50  	  norm_table_name => 'svmc_norm',
19:47:10  51  	  data_table_name => 'svmc_winsor',
19:47:10  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:47:10  53  
19:47:10  54  	-- normalize the original data
19:47:10  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:47:10  56  	  norm_table_name => 'svmc_norm',
19:47:10  57  	  data_table_name => '&bldtable',
19:47:10  58  	  xform_view_name => 'svmc_build_prep');
19:47:10  59  END;
19:47:10  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.79
19:47:29 SQL> 
19:47:29 SQL> ---------------------
19:47:29 SQL> -- CREATE A NEW MODEL
19:47:29 SQL> --
19:47:29 SQL> -- Cleanup old model with the same name for repeat runs
19:47:29 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
19:47:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:47:29   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.03
19:47:30 SQL> 
19:47:30 SQL> -- Build a new SVM Model
19:47:30 SQL> BEGIN
19:47:30   2  	DBMS_DATA_MINING.CREATE_MODEL(
19:47:30   3  	  model_name	      => '&model_name',
19:47:30   4  	  mining_function     => dbms_data_mining.classification,
19:47:30   5  	  data_table_name     => 'svmc_build_prep',
19:47:30   6  	  case_id_column_name => '&case_id',
19:47:30   7  	  target_column_name  => '&target',
19:47:30   8  	  settings_table_name => 'svmc_settings');
19:47:30   9  END;
19:47:30  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:38.36
19:48:08 SQL> 
19:48:08 SQL> -----------------------------------------------------------------------
19:48:08 SQL> --			       APPLY/score THE MODEL
19:48:08 SQL> -----------------------------------------------------------------------
19:48:08 SQL> 
19:48:08 SQL> -- Cleanup old scoring data preparation objects for repeat runs
19:48:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
19:48:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:48:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
19:48:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
19:48:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:48:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.13
19:48:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
19:48:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:48:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
19:48:09 SQL> -----------------------
19:48:09 SQL> -- PREPARE SCORING DATA
19:48:09 SQL> --
19:48:09 SQL> -- If the data for model creation has been prepared, then the data
19:48:09 SQL> -- to be scored using the model must be prepared in the same manner
19:48:09 SQL> -- in order to obtain meaningful results.
19:48:09 SQL> --
19:48:09 SQL> -- 1. Missing Value treatment for all Predictors and
19:48:09 SQL> -- 2. Normalization
19:48:09 SQL> -- No outlier treatment will be performed during test and apply. The
19:48:09 SQL> -- normalization step is sufficient, since the normalization parameters
19:48:09 SQL> -- already capture the effects of outlier treatment done with build data.
19:48:09 SQL> --
19:48:09 SQL> BEGIN
19:48:09   2  	-- Xform Test data to replace missing values
19:48:09   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:48:09   4  	  miss_table_name => 'svmc_miss_num',
19:48:09   5  	  data_table_name => '&scoretable',
19:48:09   6  	  xform_view_name => 'xformed_apply_miss_num');
19:48:09   7  
19:48:09   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:48:09   9  	  miss_table_name => 'svmc_miss_cat',
19:48:09  10  	  data_table_name => '&scoretable',
19:48:09  11  	  xform_view_name => 'xformed_apply_miss_cat');
19:48:09  12  
19:48:09  13  	-- Normalize the data to be scored
19:48:09  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:48:09  15  	  norm_table_name => 'svmc_norm',
19:48:09  16  	  data_table_name => '&scoretable',
19:48:09  17  	  xform_view_name => 'svmc_apply_prep');
19:48:09  18  END;
19:48:09  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.60
19:48:10 SQL> 
19:48:10 SQL> -- Use same model_name used in score_gattn.sql
19:48:10 SQL> DEFINE model_name = 'forex14'
19:48:10 SQL> 
19:48:10 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.12
19:48:10 SQL> 
19:48:10 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
19:48:10   2  SELECT
19:48:10   3  prdate
19:48:10   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
19:48:10   5  ,sysdate
19:48:10   6  ,SUBSTR(prdate,1,3)pair
19:48:10   7  ,SUBSTR(prdate,4,19)ydate
19:48:10   8  FROM svmc_apply_prep
19:48:10   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.24
19:48:11 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
