
SQL*Plus: Release 11.2.0.1.0 Production on Mon Jan 3 06:58:56 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

06:58:56 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
06:58:56 SQL> 06:58:56 SQL> @aud_score1day.sql  2011-01-03 06:35:00
06:58:56 SQL> --
06:58:56 SQL> -- aud_score1day.sql
06:58:56 SQL> --
06:58:56 SQL> 
06:58:56 SQL> CREATE OR REPLACE VIEW sme AS
06:58:56   2  SELECT
06:58:56   3  'aud'||m.ydate prdate
06:58:56   4  ,NULL gatt
06:58:56   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:58:56   6  ,eur_g00
06:58:56   7  ,eur_g01
06:58:56   8  ,eur_g02
06:58:56   9  ,eur_g03
06:58:56  10  ,eur_g04
06:58:56  11  ,eur_g05
06:58:56  12  ,eur_g06
06:58:56  13  ,eur_g07
06:58:56  14  ,eur_g08
06:58:56  15  ,eur_g09
06:58:56  16  ,eur_g10
06:58:56  17  ,eur_g11
06:58:56  18  ,eur_g12
06:58:56  19  ,eur_g13
06:58:56  20  ,eur_g14
06:58:56  21  ,eur_g15
06:58:56  22  ,eur_g16
06:58:56  23  ,eur_g17
06:58:56  24  ,eur_g18
06:58:56  25  ,eur_g19
06:58:56  26  ,eur_g20
06:58:56  27  ,eur_g21
06:58:56  28  ,eur_g22
06:58:56  29  ,eur_g23
06:58:56  30  ,eur_g24
06:58:56  31  ,eur_g25
06:58:56  32  ,eur_g26
06:58:56  33  ,eur_g27
06:58:56  34  ,eur_g28
06:58:56  35  ,eur_g29
06:58:56  36  ,eur_g30
06:58:56  37  ,eur_g31
06:58:56  38  ,eur_g32
06:58:56  39  ,eur_g33
06:58:56  40  ,eur_g34
06:58:56  41  ,eur_g35
06:58:56  42  ,eur_g36
06:58:56  43  ,eur_g37
06:58:56  44  ,eur_g38
06:58:56  45  ,eur_g39
06:58:56  46  ,eur_g40
06:58:56  47  ,eur_g41
06:58:56  48  ,aud_g00
06:58:56  49  ,aud_g01
06:58:56  50  ,aud_g02
06:58:56  51  ,aud_g03
06:58:56  52  ,aud_g04
06:58:56  53  ,aud_g05
06:58:56  54  ,aud_g06
06:58:56  55  ,aud_g07
06:58:56  56  ,aud_g08
06:58:56  57  ,aud_g09
06:58:56  58  ,aud_g10
06:58:56  59  ,aud_g11
06:58:56  60  ,aud_g12
06:58:56  61  ,aud_g13
06:58:56  62  ,aud_g14
06:58:56  63  ,aud_g15
06:58:56  64  ,aud_g16
06:58:56  65  ,aud_g17
06:58:56  66  ,aud_g18
06:58:56  67  ,aud_g19
06:58:56  68  ,aud_g20
06:58:56  69  ,aud_g21
06:58:56  70  ,aud_g22
06:58:56  71  ,aud_g23
06:58:56  72  ,aud_g24
06:58:56  73  ,aud_g25
06:58:56  74  ,aud_g26
06:58:56  75  ,aud_g27
06:58:56  76  ,aud_g28
06:58:56  77  ,aud_g29
06:58:56  78  ,aud_g30
06:58:56  79  ,aud_g31
06:58:56  80  ,aud_g32
06:58:56  81  ,aud_g33
06:58:56  82  ,aud_g34
06:58:56  83  ,aud_g35
06:58:56  84  ,aud_g36
06:58:56  85  ,aud_g37
06:58:56  86  ,aud_g38
06:58:56  87  ,aud_g39
06:58:56  88  ,aud_g40
06:58:56  89  ,aud_g41
06:58:56  90  ,gbp_g00
06:58:56  91  ,gbp_g01
06:58:56  92  ,gbp_g02
06:58:56  93  ,gbp_g03
06:58:56  94  ,gbp_g04
06:58:56  95  ,gbp_g05
06:58:56  96  ,gbp_g06
06:58:56  97  ,gbp_g07
06:58:56  98  ,gbp_g08
06:58:56  99  ,gbp_g09
06:58:56 100  ,gbp_g10
06:58:56 101  ,gbp_g11
06:58:56 102  ,gbp_g12
06:58:56 103  ,gbp_g13
06:58:56 104  ,gbp_g14
06:58:56 105  ,gbp_g15
06:58:56 106  ,gbp_g16
06:58:56 107  ,gbp_g17
06:58:56 108  ,gbp_g18
06:58:56 109  ,gbp_g19
06:58:56 110  ,gbp_g20
06:58:56 111  ,gbp_g21
06:58:56 112  ,gbp_g22
06:58:56 113  ,gbp_g23
06:58:56 114  ,gbp_g24
06:58:56 115  ,gbp_g25
06:58:56 116  ,gbp_g26
06:58:56 117  ,gbp_g27
06:58:56 118  ,gbp_g28
06:58:56 119  ,gbp_g29
06:58:56 120  ,gbp_g30
06:58:56 121  ,gbp_g31
06:58:56 122  ,gbp_g32
06:58:56 123  ,gbp_g33
06:58:56 124  ,gbp_g34
06:58:56 125  ,gbp_g35
06:58:56 126  ,gbp_g36
06:58:56 127  ,gbp_g37
06:58:56 128  ,gbp_g38
06:58:56 129  ,gbp_g39
06:58:56 130  ,gbp_g40
06:58:56 131  ,gbp_g41
06:58:56 132  ,jpy_g00
06:58:56 133  ,jpy_g01
06:58:56 134  ,jpy_g02
06:58:56 135  ,jpy_g03
06:58:56 136  ,jpy_g04
06:58:56 137  ,jpy_g05
06:58:56 138  ,jpy_g06
06:58:56 139  ,jpy_g07
06:58:56 140  ,jpy_g08
06:58:56 141  ,jpy_g09
06:58:56 142  ,jpy_g10
06:58:56 143  ,jpy_g11
06:58:56 144  ,jpy_g12
06:58:56 145  ,jpy_g13
06:58:56 146  ,jpy_g14
06:58:56 147  ,jpy_g15
06:58:56 148  ,jpy_g16
06:58:56 149  ,jpy_g17
06:58:56 150  ,jpy_g18
06:58:56 151  ,jpy_g19
06:58:56 152  ,jpy_g20
06:58:56 153  ,jpy_g21
06:58:56 154  ,jpy_g22
06:58:56 155  ,jpy_g23
06:58:56 156  ,jpy_g24
06:58:56 157  ,jpy_g25
06:58:56 158  ,jpy_g26
06:58:56 159  ,jpy_g27
06:58:56 160  ,jpy_g28
06:58:56 161  ,jpy_g29
06:58:56 162  ,jpy_g30
06:58:56 163  ,jpy_g31
06:58:56 164  ,jpy_g32
06:58:56 165  ,jpy_g33
06:58:56 166  ,jpy_g34
06:58:56 167  ,jpy_g35
06:58:56 168  ,jpy_g36
06:58:56 169  ,jpy_g37
06:58:56 170  ,jpy_g38
06:58:56 171  ,jpy_g39
06:58:56 172  ,jpy_g40
06:58:56 173  ,jpy_g41
06:58:56 174  ,cad_g00
06:58:56 175  ,cad_g01
06:58:56 176  ,cad_g02
06:58:56 177  ,cad_g03
06:58:56 178  ,cad_g04
06:58:56 179  ,cad_g05
06:58:56 180  ,cad_g06
06:58:56 181  ,cad_g07
06:58:56 182  ,cad_g08
06:58:56 183  ,cad_g09
06:58:56 184  ,cad_g10
06:58:56 185  ,cad_g11
06:58:56 186  ,cad_g12
06:58:56 187  ,cad_g13
06:58:56 188  ,cad_g14
06:58:56 189  ,cad_g15
06:58:56 190  ,cad_g16
06:58:56 191  ,cad_g17
06:58:56 192  ,cad_g18
06:58:56 193  ,cad_g19
06:58:56 194  ,cad_g20
06:58:56 195  ,cad_g21
06:58:56 196  ,cad_g22
06:58:56 197  ,cad_g23
06:58:56 198  ,cad_g24
06:58:56 199  ,cad_g25
06:58:56 200  ,cad_g26
06:58:56 201  ,cad_g27
06:58:56 202  ,cad_g28
06:58:56 203  ,cad_g29
06:58:56 204  ,cad_g30
06:58:56 205  ,cad_g31
06:58:56 206  ,cad_g32
06:58:56 207  ,cad_g33
06:58:56 208  ,cad_g34
06:58:56 209  ,cad_g35
06:58:56 210  ,cad_g36
06:58:56 211  ,cad_g37
06:58:56 212  ,cad_g38
06:58:56 213  ,cad_g39
06:58:56 214  ,cad_g40
06:58:56 215  ,cad_g41
06:58:56 216  ,chf_g00
06:58:56 217  ,chf_g01
06:58:56 218  ,chf_g02
06:58:56 219  ,chf_g03
06:58:56 220  ,chf_g04
06:58:56 221  ,chf_g05
06:58:56 222  ,chf_g06
06:58:56 223  ,chf_g07
06:58:56 224  ,chf_g08
06:58:56 225  ,chf_g09
06:58:56 226  ,chf_g10
06:58:56 227  ,chf_g11
06:58:56 228  ,chf_g12
06:58:56 229  ,chf_g13
06:58:56 230  ,chf_g14
06:58:56 231  ,chf_g15
06:58:56 232  ,chf_g16
06:58:56 233  ,chf_g17
06:58:56 234  ,chf_g18
06:58:56 235  ,chf_g19
06:58:56 236  ,chf_g20
06:58:56 237  ,chf_g21
06:58:56 238  ,chf_g22
06:58:56 239  ,chf_g23
06:58:56 240  ,chf_g24
06:58:56 241  ,chf_g25
06:58:56 242  ,chf_g26
06:58:56 243  ,chf_g27
06:58:56 244  ,chf_g28
06:58:56 245  ,chf_g29
06:58:56 246  ,chf_g30
06:58:56 247  ,chf_g31
06:58:56 248  ,chf_g32
06:58:56 249  ,chf_g33
06:58:56 250  ,chf_g34
06:58:56 251  ,chf_g35
06:58:56 252  ,chf_g36
06:58:56 253  ,chf_g37
06:58:56 254  ,chf_g38
06:58:56 255  ,chf_g39
06:58:56 256  ,chf_g40
06:58:56 257  ,chf_g41
06:58:56 258  FROM aud_ms6 m
06:58:56 259  WHERE m.ydate = '&1'||' '||'&2'
06:58:56 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'06:35:00'

View created.

Elapsed: 00:00:00.14
06:58:57 SQL> 
06:58:57 SQL> -- rpt
06:58:57 SQL> -- We should see just 1 row:
06:58:57 SQL> 
06:58:57 SQL> SELECT COUNT(prdate) FROM sme
06:58:57   2  
06:58:57 SQL> -- Build the model:
06:58:57 SQL> CREATE OR REPLACE VIEW bme AS
06:58:57   2  SELECT
06:58:57   3  'aud'||m.ydate prdate
06:58:57   4  ,gatt
06:58:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:58:57   6  ,eur_g00
06:58:57   7  ,eur_g01
06:58:57   8  ,eur_g02
06:58:57   9  ,eur_g03
06:58:57  10  ,eur_g04
06:58:57  11  ,eur_g05
06:58:57  12  ,eur_g06
06:58:57  13  ,eur_g07
06:58:57  14  ,eur_g08
06:58:57  15  ,eur_g09
06:58:57  16  ,eur_g10
06:58:57  17  ,eur_g11
06:58:57  18  ,eur_g12
06:58:57  19  ,eur_g13
06:58:57  20  ,eur_g14
06:58:57  21  ,eur_g15
06:58:57  22  ,eur_g16
06:58:57  23  ,eur_g17
06:58:57  24  ,eur_g18
06:58:57  25  ,eur_g19
06:58:57  26  ,eur_g20
06:58:57  27  ,eur_g21
06:58:57  28  ,eur_g22
06:58:57  29  ,eur_g23
06:58:57  30  ,eur_g24
06:58:57  31  ,eur_g25
06:58:57  32  ,eur_g26
06:58:57  33  ,eur_g27
06:58:57  34  ,eur_g28
06:58:57  35  ,eur_g29
06:58:57  36  ,eur_g30
06:58:57  37  ,eur_g31
06:58:57  38  ,eur_g32
06:58:57  39  ,eur_g33
06:58:57  40  ,eur_g34
06:58:57  41  ,eur_g35
06:58:57  42  ,eur_g36
06:58:57  43  ,eur_g37
06:58:57  44  ,eur_g38
06:58:57  45  ,eur_g39
06:58:57  46  ,eur_g40
06:58:57  47  ,eur_g41
06:58:57  48  ,aud_g00
06:58:57  49  ,aud_g01
06:58:57  50  ,aud_g02
06:58:57  51  ,aud_g03
06:58:57  52  ,aud_g04
06:58:57  53  ,aud_g05
06:58:57  54  ,aud_g06
06:58:57  55  ,aud_g07
06:58:57  56  ,aud_g08
06:58:57  57  ,aud_g09
06:58:57  58  ,aud_g10
06:58:57  59  ,aud_g11
06:58:57  60  ,aud_g12
06:58:57  61  ,aud_g13
06:58:57  62  ,aud_g14
06:58:57  63  ,aud_g15
06:58:57  64  ,aud_g16
06:58:57  65  ,aud_g17
06:58:57  66  ,aud_g18
06:58:57  67  ,aud_g19
06:58:57  68  ,aud_g20
06:58:57  69  ,aud_g21
06:58:57  70  ,aud_g22
06:58:57  71  ,aud_g23
06:58:57  72  ,aud_g24
06:58:57  73  ,aud_g25
06:58:57  74  ,aud_g26
06:58:57  75  ,aud_g27
06:58:57  76  ,aud_g28
06:58:57  77  ,aud_g29
06:58:57  78  ,aud_g30
06:58:57  79  ,aud_g31
06:58:57  80  ,aud_g32
06:58:57  81  ,aud_g33
06:58:57  82  ,aud_g34
06:58:57  83  ,aud_g35
06:58:57  84  ,aud_g36
06:58:57  85  ,aud_g37
06:58:57  86  ,aud_g38
06:58:57  87  ,aud_g39
06:58:57  88  ,aud_g40
06:58:57  89  ,aud_g41
06:58:57  90  ,gbp_g00
06:58:57  91  ,gbp_g01
06:58:57  92  ,gbp_g02
06:58:57  93  ,gbp_g03
06:58:57  94  ,gbp_g04
06:58:57  95  ,gbp_g05
06:58:57  96  ,gbp_g06
06:58:57  97  ,gbp_g07
06:58:57  98  ,gbp_g08
06:58:57  99  ,gbp_g09
06:58:57 100  ,gbp_g10
06:58:57 101  ,gbp_g11
06:58:57 102  ,gbp_g12
06:58:57 103  ,gbp_g13
06:58:57 104  ,gbp_g14
06:58:57 105  ,gbp_g15
06:58:57 106  ,gbp_g16
06:58:57 107  ,gbp_g17
06:58:57 108  ,gbp_g18
06:58:57 109  ,gbp_g19
06:58:57 110  ,gbp_g20
06:58:57 111  ,gbp_g21
06:58:57 112  ,gbp_g22
06:58:57 113  ,gbp_g23
06:58:57 114  ,gbp_g24
06:58:57 115  ,gbp_g25
06:58:57 116  ,gbp_g26
06:58:57 117  ,gbp_g27
06:58:57 118  ,gbp_g28
06:58:57 119  ,gbp_g29
06:58:57 120  ,gbp_g30
06:58:57 121  ,gbp_g31
06:58:57 122  ,gbp_g32
06:58:57 123  ,gbp_g33
06:58:57 124  ,gbp_g34
06:58:57 125  ,gbp_g35
06:58:57 126  ,gbp_g36
06:58:57 127  ,gbp_g37
06:58:57 128  ,gbp_g38
06:58:57 129  ,gbp_g39
06:58:57 130  ,gbp_g40
06:58:57 131  ,gbp_g41
06:58:57 132  ,jpy_g00
06:58:57 133  ,jpy_g01
06:58:57 134  ,jpy_g02
06:58:57 135  ,jpy_g03
06:58:57 136  ,jpy_g04
06:58:57 137  ,jpy_g05
06:58:57 138  ,jpy_g06
06:58:57 139  ,jpy_g07
06:58:57 140  ,jpy_g08
06:58:57 141  ,jpy_g09
06:58:57 142  ,jpy_g10
06:58:57 143  ,jpy_g11
06:58:57 144  ,jpy_g12
06:58:57 145  ,jpy_g13
06:58:57 146  ,jpy_g14
06:58:57 147  ,jpy_g15
06:58:57 148  ,jpy_g16
06:58:57 149  ,jpy_g17
06:58:57 150  ,jpy_g18
06:58:57 151  ,jpy_g19
06:58:57 152  ,jpy_g20
06:58:57 153  ,jpy_g21
06:58:57 154  ,jpy_g22
06:58:57 155  ,jpy_g23
06:58:57 156  ,jpy_g24
06:58:57 157  ,jpy_g25
06:58:57 158  ,jpy_g26
06:58:57 159  ,jpy_g27
06:58:57 160  ,jpy_g28
06:58:57 161  ,jpy_g29
06:58:57 162  ,jpy_g30
06:58:57 163  ,jpy_g31
06:58:57 164  ,jpy_g32
06:58:57 165  ,jpy_g33
06:58:57 166  ,jpy_g34
06:58:57 167  ,jpy_g35
06:58:57 168  ,jpy_g36
06:58:57 169  ,jpy_g37
06:58:57 170  ,jpy_g38
06:58:57 171  ,jpy_g39
06:58:57 172  ,jpy_g40
06:58:57 173  ,jpy_g41
06:58:57 174  ,cad_g00
06:58:57 175  ,cad_g01
06:58:57 176  ,cad_g02
06:58:57 177  ,cad_g03
06:58:57 178  ,cad_g04
06:58:57 179  ,cad_g05
06:58:57 180  ,cad_g06
06:58:57 181  ,cad_g07
06:58:57 182  ,cad_g08
06:58:57 183  ,cad_g09
06:58:57 184  ,cad_g10
06:58:57 185  ,cad_g11
06:58:57 186  ,cad_g12
06:58:57 187  ,cad_g13
06:58:57 188  ,cad_g14
06:58:57 189  ,cad_g15
06:58:57 190  ,cad_g16
06:58:57 191  ,cad_g17
06:58:57 192  ,cad_g18
06:58:57 193  ,cad_g19
06:58:57 194  ,cad_g20
06:58:57 195  ,cad_g21
06:58:57 196  ,cad_g22
06:58:57 197  ,cad_g23
06:58:57 198  ,cad_g24
06:58:57 199  ,cad_g25
06:58:57 200  ,cad_g26
06:58:57 201  ,cad_g27
06:58:57 202  ,cad_g28
06:58:57 203  ,cad_g29
06:58:57 204  ,cad_g30
06:58:57 205  ,cad_g31
06:58:57 206  ,cad_g32
06:58:57 207  ,cad_g33
06:58:57 208  ,cad_g34
06:58:57 209  ,cad_g35
06:58:57 210  ,cad_g36
06:58:57 211  ,cad_g37
06:58:57 212  ,cad_g38
06:58:57 213  ,cad_g39
06:58:57 214  ,cad_g40
06:58:57 215  ,cad_g41
06:58:57 216  ,chf_g00
06:58:57 217  ,chf_g01
06:58:57 218  ,chf_g02
06:58:57 219  ,chf_g03
06:58:57 220  ,chf_g04
06:58:57 221  ,chf_g05
06:58:57 222  ,chf_g06
06:58:57 223  ,chf_g07
06:58:57 224  ,chf_g08
06:58:57 225  ,chf_g09
06:58:57 226  ,chf_g10
06:58:57 227  ,chf_g11
06:58:57 228  ,chf_g12
06:58:57 229  ,chf_g13
06:58:57 230  ,chf_g14
06:58:57 231  ,chf_g15
06:58:57 232  ,chf_g16
06:58:57 233  ,chf_g17
06:58:57 234  ,chf_g18
06:58:57 235  ,chf_g19
06:58:57 236  ,chf_g20
06:58:57 237  ,chf_g21
06:58:57 238  ,chf_g22
06:58:57 239  ,chf_g23
06:58:57 240  ,chf_g24
06:58:57 241  ,chf_g25
06:58:57 242  ,chf_g26
06:58:57 243  ,chf_g27
06:58:57 244  ,chf_g28
06:58:57 245  ,chf_g29
06:58:57 246  ,chf_g30
06:58:57 247  ,chf_g31
06:58:57 248  ,chf_g32
06:58:57 249  ,chf_g33
06:58:57 250  ,chf_g34
06:58:57 251  ,chf_g35
06:58:57 252  ,chf_g36
06:58:57 253  ,chf_g37
06:58:57 254  ,chf_g38
06:58:57 255  ,chf_g39
06:58:57 256  ,chf_g40
06:58:57 257  ,chf_g41
06:58:57 258  FROM aud_ms6 m
06:58:57 259  WHERE gatt IN('nup','up')
06:58:57 260  AND 1+m.ydate < '&1'||' '||'&2'
06:58:57 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'06:35:00'

View created.

Elapsed: 00:00:00.21
06:58:57 SQL> 
06:58:57 SQL> -- rpt
06:58:57 SQL> 
06:58:57 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
06:58:57   2  
06:58:57 SQL> SELECT MAX(prdate) FROM bme
06:58:57   2  
06:58:57 SQL> -- Now build model from bme and score sme
06:58:57 SQL> @score1.sql
06:58:57 SQL> -- score1.sql
06:58:57 SQL> 
06:58:57 SQL> -- Does the 1st SVM score
06:58:57 SQL> 
06:58:57 SQL> -- Fill up svmc_apply_prep
06:58:57 SQL> @score.sql
06:58:57 SQL> --
06:58:57 SQL> -- score.sql
06:58:57 SQL> --
06:58:57 SQL> 
06:58:57 SQL> -- usage: score.sql
06:58:57 SQL> 
06:58:57 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:58:57 SQL> 
06:58:57 SQL> DEFINE target	= 'gatt'
06:58:57 SQL> DEFINE model_name = 'forex14'
06:58:57 SQL> DEFINE bldtable	= 'bme'
06:58:57 SQL> DEFINE scoretable = 'sme'
06:58:57 SQL> DEFINE case_id	= 'prdate'
06:58:57 SQL> 
06:58:57 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:58:57 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:58:57 SQL> 
06:58:57 SQL> -- Builds an SVM model using pl/sql.
06:58:57 SQL> 
06:58:57 SQL> -----------------------------------------------------------------------
06:58:57 SQL> --			    BUILD THE MODEL
06:58:57 SQL> -----------------------------------------------------------------------
06:58:57 SQL> 
06:58:57 SQL> -- Cleanup old build data preparation objects for repeat runs
06:58:57 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
06:58:57 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:58:57 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
06:58:57 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
06:58:57 SQL> 
06:58:57 SQL> 
06:58:57 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:58:57 SQL> --
06:58:57 SQL> -- DROP	TABLE svmc_settings ;
06:58:57 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:58:57 SQL> -- DELETE svmc_settings;
06:58:57 SQL> 
06:58:57 SQL> -- The default classification algorithm is Naive Bayes. So override
06:58:57 SQL> -- this choice to SVM using a settings table.
06:58:57 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:58:57 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:58:57 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:58:57 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:58:57 SQL> -- models.
06:58:57 SQL> --
06:58:57 SQL> 
06:58:57 SQL> -- Do this once and then comment it out.
06:58:57 SQL> -- That makes script go faster.
06:58:57 SQL> -- BEGIN
06:58:57 SQL> -- -- Populate settings table
06:58:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:58:57 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:58:57 SQL> --
06:58:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:58:57 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:58:57 SQL> --
06:58:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:58:57 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:58:57 SQL> --   COMMIT;
06:58:57 SQL> -- END;
06:58:57 SQL> -- /
06:58:57 SQL> 
06:58:57 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:58:57 SQL> 
06:58:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:58:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:58:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
06:58:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:58:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:58:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:58:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:58:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:58:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:58:57 SQL> 
06:58:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:58:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:58:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
06:58:57 SQL> 
06:58:57 SQL> --------------------------------
06:58:57 SQL> -- PREPARE BUILD (TRAINING) DATA
06:58:57 SQL> --
06:58:57 SQL> 
06:58:57 SQL> -- 1. Missing Value treatment for all Predictors and
06:58:57 SQL> -- 2. Outlier Treatment and
06:58:57 SQL> -- 3. Normalization are performed below.
06:58:57 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:58:57 SQL> --    normalized here.
06:58:57 SQL> 
06:58:57 SQL> BEGIN
06:58:57   2  	-- Perform missing value treatment for all predictors
06:58:57   3  	-- create miss tables
06:58:57   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:58:57   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:58:57   6  
06:58:57   7  	-- populate miss tables
06:58:57   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:58:57   9  	  miss_table_name => 'svmc_miss_num',
06:58:57  10  	  data_table_name => '&bldtable',
06:58:57  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:58:57  12  
06:58:57  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:58:57  14  	  miss_table_name => 'svmc_miss_cat',
06:58:57  15  	  data_table_name => '&bldtable',
06:58:57  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:58:57  17  
06:58:57  18  	-- xform input data to replace missing values
06:58:57  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:58:57  20  	  miss_table_name => 'svmc_miss_num',
06:58:57  21  	  data_table_name => '&bldtable',
06:58:57  22  	  xform_view_name => 'xformed_build_miss_num');
06:58:57  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:58:57  24  	  miss_table_name => 'svmc_miss_cat',
06:58:57  25  	  data_table_name => '&bldtable',
06:58:57  26  	  xform_view_name => 'xformed_build_miss_cat');
06:58:57  27  
06:58:57  28  	-- Perform outlier treatment.
06:58:57  29  	-- create clip table
06:58:57  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:58:57  31  
06:58:57  32  	-- populate clip table
06:58:57  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:58:57  34  	  clip_table_name => 'svmc_clip',
06:58:57  35  	  data_table_name => '&bldtable',
06:58:57  36  	  tail_frac	  => 0.025,
06:58:57  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:58:57  38  
06:58:57  39  	-- xform input data to winsorized data
06:58:57  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:58:57  41  	  clip_table_name => 'svmc_clip',
06:58:57  42  	  data_table_name => '&bldtable',
06:58:57  43  	  xform_view_name => 'svmc_winsor');
06:58:57  44  
06:58:57  45  	-- create normalization table
06:58:57  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:58:57  47  
06:58:57  48  	-- populate normalization table based on winsorized data
06:58:57  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:58:57  50  	  norm_table_name => 'svmc_norm',
06:58:57  51  	  data_table_name => 'svmc_winsor',
06:58:57  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:58:57  53  
06:58:57  54  	-- normalize the original data
06:58:57  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:58:57  56  	  norm_table_name => 'svmc_norm',
06:58:57  57  	  data_table_name => '&bldtable',
06:58:57  58  	  xform_view_name => 'svmc_build_prep');
06:58:57  59  END;
06:58:57  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.20
06:59:16 SQL> 
06:59:16 SQL> ---------------------
06:59:16 SQL> -- CREATE A NEW MODEL
06:59:16 SQL> --
06:59:16 SQL> -- Cleanup old model with the same name for repeat runs
06:59:16 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
06:59:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:59:16   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.91
06:59:17 SQL> 
06:59:17 SQL> -- Build a new SVM Model
06:59:17 SQL> BEGIN
06:59:17   2  	DBMS_DATA_MINING.CREATE_MODEL(
06:59:17   3  	  model_name	      => '&model_name',
06:59:17   4  	  mining_function     => dbms_data_mining.classification,
06:59:17   5  	  data_table_name     => 'svmc_build_prep',
06:59:17   6  	  case_id_column_name => '&case_id',
06:59:17   7  	  target_column_name  => '&target',
06:59:17   8  	  settings_table_name => 'svmc_settings');
06:59:17   9  END;
06:59:17  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:32.41
06:59:50 SQL> 
06:59:50 SQL> -----------------------------------------------------------------------
06:59:50 SQL> --			       APPLY/score THE MODEL
06:59:50 SQL> -----------------------------------------------------------------------
06:59:50 SQL> 
06:59:50 SQL> -- Cleanup old scoring data preparation objects for repeat runs
06:59:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
06:59:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:59:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:59:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
06:59:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:59:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
06:59:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
06:59:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:59:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
06:59:50 SQL> -----------------------
06:59:50 SQL> -- PREPARE SCORING DATA
06:59:50 SQL> --
06:59:50 SQL> -- If the data for model creation has been prepared, then the data
06:59:50 SQL> -- to be scored using the model must be prepared in the same manner
06:59:50 SQL> -- in order to obtain meaningful results.
06:59:50 SQL> --
06:59:50 SQL> -- 1. Missing Value treatment for all Predictors and
06:59:50 SQL> -- 2. Normalization
06:59:50 SQL> -- No outlier treatment will be performed during test and apply. The
06:59:50 SQL> -- normalization step is sufficient, since the normalization parameters
06:59:50 SQL> -- already capture the effects of outlier treatment done with build data.
06:59:50 SQL> --
06:59:50 SQL> BEGIN
06:59:50   2  	-- Xform Test data to replace missing values
06:59:50   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:59:50   4  	  miss_table_name => 'svmc_miss_num',
06:59:50   5  	  data_table_name => '&scoretable',
06:59:50   6  	  xform_view_name => 'xformed_apply_miss_num');
06:59:50   7  
06:59:50   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:59:50   9  	  miss_table_name => 'svmc_miss_cat',
06:59:50  10  	  data_table_name => '&scoretable',
06:59:50  11  	  xform_view_name => 'xformed_apply_miss_cat');
06:59:50  12  
06:59:50  13  	-- Normalize the data to be scored
06:59:50  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:59:50  15  	  norm_table_name => 'svmc_norm',
06:59:50  16  	  data_table_name => '&scoretable',
06:59:50  17  	  xform_view_name => 'svmc_apply_prep');
06:59:50  18  END;
06:59:50  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.38
06:59:51 SQL> 
06:59:51 SQL> -- Use same model_name used in score.sql
06:59:51 SQL> DEFINE model_name = 'forex14'
06:59:51 SQL> 
06:59:51 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
06:59:51 SQL> 
06:59:51 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.09
06:59:51 SQL> 
06:59:51 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
06:59:51   2  SELECT
06:59:51   3  prdate
06:59:51   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
06:59:51   5  ,sysdate
06:59:51   6  ,SUBSTR(prdate,1,3)pair
06:59:51   7  ,SUBSTR(prdate,4,19)ydate
06:59:51   8  FROM svmc_apply_prep
06:59:51   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.22
06:59:52 SQL> @aud_score1day.sql  2011-01-03 06:40:00
06:59:52 SQL> --
06:59:52 SQL> -- aud_score1day.sql
06:59:52 SQL> --
06:59:52 SQL> 
06:59:52 SQL> CREATE OR REPLACE VIEW sme AS
06:59:52   2  SELECT
06:59:52   3  'aud'||m.ydate prdate
06:59:52   4  ,NULL gatt
06:59:52   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:59:52   6  ,eur_g00
06:59:52   7  ,eur_g01
06:59:52   8  ,eur_g02
06:59:52   9  ,eur_g03
06:59:52  10  ,eur_g04
06:59:52  11  ,eur_g05
06:59:52  12  ,eur_g06
06:59:52  13  ,eur_g07
06:59:52  14  ,eur_g08
06:59:52  15  ,eur_g09
06:59:52  16  ,eur_g10
06:59:52  17  ,eur_g11
06:59:52  18  ,eur_g12
06:59:52  19  ,eur_g13
06:59:52  20  ,eur_g14
06:59:52  21  ,eur_g15
06:59:52  22  ,eur_g16
06:59:52  23  ,eur_g17
06:59:52  24  ,eur_g18
06:59:52  25  ,eur_g19
06:59:52  26  ,eur_g20
06:59:52  27  ,eur_g21
06:59:52  28  ,eur_g22
06:59:52  29  ,eur_g23
06:59:52  30  ,eur_g24
06:59:52  31  ,eur_g25
06:59:52  32  ,eur_g26
06:59:52  33  ,eur_g27
06:59:52  34  ,eur_g28
06:59:52  35  ,eur_g29
06:59:52  36  ,eur_g30
06:59:52  37  ,eur_g31
06:59:52  38  ,eur_g32
06:59:52  39  ,eur_g33
06:59:52  40  ,eur_g34
06:59:52  41  ,eur_g35
06:59:52  42  ,eur_g36
06:59:52  43  ,eur_g37
06:59:52  44  ,eur_g38
06:59:52  45  ,eur_g39
06:59:52  46  ,eur_g40
06:59:52  47  ,eur_g41
06:59:52  48  ,aud_g00
06:59:52  49  ,aud_g01
06:59:52  50  ,aud_g02
06:59:52  51  ,aud_g03
06:59:52  52  ,aud_g04
06:59:52  53  ,aud_g05
06:59:52  54  ,aud_g06
06:59:52  55  ,aud_g07
06:59:52  56  ,aud_g08
06:59:52  57  ,aud_g09
06:59:52  58  ,aud_g10
06:59:52  59  ,aud_g11
06:59:52  60  ,aud_g12
06:59:52  61  ,aud_g13
06:59:52  62  ,aud_g14
06:59:52  63  ,aud_g15
06:59:52  64  ,aud_g16
06:59:52  65  ,aud_g17
06:59:52  66  ,aud_g18
06:59:52  67  ,aud_g19
06:59:52  68  ,aud_g20
06:59:52  69  ,aud_g21
06:59:52  70  ,aud_g22
06:59:52  71  ,aud_g23
06:59:52  72  ,aud_g24
06:59:52  73  ,aud_g25
06:59:52  74  ,aud_g26
06:59:52  75  ,aud_g27
06:59:52  76  ,aud_g28
06:59:52  77  ,aud_g29
06:59:52  78  ,aud_g30
06:59:52  79  ,aud_g31
06:59:52  80  ,aud_g32
06:59:52  81  ,aud_g33
06:59:52  82  ,aud_g34
06:59:52  83  ,aud_g35
06:59:52  84  ,aud_g36
06:59:52  85  ,aud_g37
06:59:52  86  ,aud_g38
06:59:52  87  ,aud_g39
06:59:52  88  ,aud_g40
06:59:52  89  ,aud_g41
06:59:52  90  ,gbp_g00
06:59:52  91  ,gbp_g01
06:59:52  92  ,gbp_g02
06:59:52  93  ,gbp_g03
06:59:52  94  ,gbp_g04
06:59:52  95  ,gbp_g05
06:59:52  96  ,gbp_g06
06:59:52  97  ,gbp_g07
06:59:52  98  ,gbp_g08
06:59:52  99  ,gbp_g09
06:59:52 100  ,gbp_g10
06:59:52 101  ,gbp_g11
06:59:52 102  ,gbp_g12
06:59:52 103  ,gbp_g13
06:59:52 104  ,gbp_g14
06:59:52 105  ,gbp_g15
06:59:52 106  ,gbp_g16
06:59:52 107  ,gbp_g17
06:59:52 108  ,gbp_g18
06:59:52 109  ,gbp_g19
06:59:52 110  ,gbp_g20
06:59:52 111  ,gbp_g21
06:59:52 112  ,gbp_g22
06:59:52 113  ,gbp_g23
06:59:52 114  ,gbp_g24
06:59:52 115  ,gbp_g25
06:59:52 116  ,gbp_g26
06:59:52 117  ,gbp_g27
06:59:52 118  ,gbp_g28
06:59:52 119  ,gbp_g29
06:59:52 120  ,gbp_g30
06:59:52 121  ,gbp_g31
06:59:52 122  ,gbp_g32
06:59:52 123  ,gbp_g33
06:59:52 124  ,gbp_g34
06:59:52 125  ,gbp_g35
06:59:52 126  ,gbp_g36
06:59:52 127  ,gbp_g37
06:59:52 128  ,gbp_g38
06:59:52 129  ,gbp_g39
06:59:52 130  ,gbp_g40
06:59:52 131  ,gbp_g41
06:59:52 132  ,jpy_g00
06:59:52 133  ,jpy_g01
06:59:52 134  ,jpy_g02
06:59:52 135  ,jpy_g03
06:59:52 136  ,jpy_g04
06:59:52 137  ,jpy_g05
06:59:52 138  ,jpy_g06
06:59:52 139  ,jpy_g07
06:59:52 140  ,jpy_g08
06:59:52 141  ,jpy_g09
06:59:52 142  ,jpy_g10
06:59:52 143  ,jpy_g11
06:59:52 144  ,jpy_g12
06:59:52 145  ,jpy_g13
06:59:52 146  ,jpy_g14
06:59:52 147  ,jpy_g15
06:59:52 148  ,jpy_g16
06:59:52 149  ,jpy_g17
06:59:52 150  ,jpy_g18
06:59:52 151  ,jpy_g19
06:59:52 152  ,jpy_g20
06:59:52 153  ,jpy_g21
06:59:52 154  ,jpy_g22
06:59:52 155  ,jpy_g23
06:59:52 156  ,jpy_g24
06:59:52 157  ,jpy_g25
06:59:52 158  ,jpy_g26
06:59:52 159  ,jpy_g27
06:59:52 160  ,jpy_g28
06:59:52 161  ,jpy_g29
06:59:52 162  ,jpy_g30
06:59:52 163  ,jpy_g31
06:59:52 164  ,jpy_g32
06:59:52 165  ,jpy_g33
06:59:52 166  ,jpy_g34
06:59:52 167  ,jpy_g35
06:59:52 168  ,jpy_g36
06:59:52 169  ,jpy_g37
06:59:52 170  ,jpy_g38
06:59:52 171  ,jpy_g39
06:59:52 172  ,jpy_g40
06:59:52 173  ,jpy_g41
06:59:52 174  ,cad_g00
06:59:52 175  ,cad_g01
06:59:52 176  ,cad_g02
06:59:52 177  ,cad_g03
06:59:52 178  ,cad_g04
06:59:52 179  ,cad_g05
06:59:52 180  ,cad_g06
06:59:52 181  ,cad_g07
06:59:52 182  ,cad_g08
06:59:52 183  ,cad_g09
06:59:52 184  ,cad_g10
06:59:52 185  ,cad_g11
06:59:52 186  ,cad_g12
06:59:52 187  ,cad_g13
06:59:52 188  ,cad_g14
06:59:52 189  ,cad_g15
06:59:52 190  ,cad_g16
06:59:52 191  ,cad_g17
06:59:52 192  ,cad_g18
06:59:52 193  ,cad_g19
06:59:52 194  ,cad_g20
06:59:52 195  ,cad_g21
06:59:52 196  ,cad_g22
06:59:52 197  ,cad_g23
06:59:52 198  ,cad_g24
06:59:52 199  ,cad_g25
06:59:52 200  ,cad_g26
06:59:52 201  ,cad_g27
06:59:52 202  ,cad_g28
06:59:52 203  ,cad_g29
06:59:52 204  ,cad_g30
06:59:52 205  ,cad_g31
06:59:52 206  ,cad_g32
06:59:52 207  ,cad_g33
06:59:52 208  ,cad_g34
06:59:52 209  ,cad_g35
06:59:52 210  ,cad_g36
06:59:52 211  ,cad_g37
06:59:52 212  ,cad_g38
06:59:52 213  ,cad_g39
06:59:52 214  ,cad_g40
06:59:52 215  ,cad_g41
06:59:52 216  ,chf_g00
06:59:52 217  ,chf_g01
06:59:52 218  ,chf_g02
06:59:52 219  ,chf_g03
06:59:52 220  ,chf_g04
06:59:52 221  ,chf_g05
06:59:52 222  ,chf_g06
06:59:52 223  ,chf_g07
06:59:52 224  ,chf_g08
06:59:52 225  ,chf_g09
06:59:52 226  ,chf_g10
06:59:52 227  ,chf_g11
06:59:52 228  ,chf_g12
06:59:52 229  ,chf_g13
06:59:52 230  ,chf_g14
06:59:52 231  ,chf_g15
06:59:52 232  ,chf_g16
06:59:52 233  ,chf_g17
06:59:52 234  ,chf_g18
06:59:52 235  ,chf_g19
06:59:52 236  ,chf_g20
06:59:52 237  ,chf_g21
06:59:52 238  ,chf_g22
06:59:52 239  ,chf_g23
06:59:52 240  ,chf_g24
06:59:52 241  ,chf_g25
06:59:52 242  ,chf_g26
06:59:52 243  ,chf_g27
06:59:52 244  ,chf_g28
06:59:52 245  ,chf_g29
06:59:52 246  ,chf_g30
06:59:52 247  ,chf_g31
06:59:52 248  ,chf_g32
06:59:52 249  ,chf_g33
06:59:52 250  ,chf_g34
06:59:52 251  ,chf_g35
06:59:52 252  ,chf_g36
06:59:52 253  ,chf_g37
06:59:52 254  ,chf_g38
06:59:52 255  ,chf_g39
06:59:52 256  ,chf_g40
06:59:52 257  ,chf_g41
06:59:52 258  FROM aud_ms6 m
06:59:52 259  WHERE m.ydate = '&1'||' '||'&2'
06:59:52 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'06:40:00'

View created.

Elapsed: 00:00:00.16
06:59:52 SQL> 
06:59:52 SQL> -- rpt
06:59:52 SQL> -- We should see just 1 row:
06:59:52 SQL> 
06:59:52 SQL> SELECT COUNT(prdate) FROM sme
06:59:52   2  
06:59:52 SQL> -- Build the model:
06:59:52 SQL> CREATE OR REPLACE VIEW bme AS
06:59:52   2  SELECT
06:59:52   3  'aud'||m.ydate prdate
06:59:52   4  ,gatt
06:59:52   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
06:59:52   6  ,eur_g00
06:59:52   7  ,eur_g01
06:59:52   8  ,eur_g02
06:59:52   9  ,eur_g03
06:59:52  10  ,eur_g04
06:59:52  11  ,eur_g05
06:59:52  12  ,eur_g06
06:59:52  13  ,eur_g07
06:59:52  14  ,eur_g08
06:59:52  15  ,eur_g09
06:59:52  16  ,eur_g10
06:59:52  17  ,eur_g11
06:59:52  18  ,eur_g12
06:59:52  19  ,eur_g13
06:59:52  20  ,eur_g14
06:59:52  21  ,eur_g15
06:59:52  22  ,eur_g16
06:59:52  23  ,eur_g17
06:59:52  24  ,eur_g18
06:59:52  25  ,eur_g19
06:59:52  26  ,eur_g20
06:59:52  27  ,eur_g21
06:59:52  28  ,eur_g22
06:59:52  29  ,eur_g23
06:59:52  30  ,eur_g24
06:59:52  31  ,eur_g25
06:59:52  32  ,eur_g26
06:59:52  33  ,eur_g27
06:59:52  34  ,eur_g28
06:59:52  35  ,eur_g29
06:59:52  36  ,eur_g30
06:59:52  37  ,eur_g31
06:59:52  38  ,eur_g32
06:59:52  39  ,eur_g33
06:59:52  40  ,eur_g34
06:59:52  41  ,eur_g35
06:59:52  42  ,eur_g36
06:59:52  43  ,eur_g37
06:59:52  44  ,eur_g38
06:59:52  45  ,eur_g39
06:59:52  46  ,eur_g40
06:59:52  47  ,eur_g41
06:59:52  48  ,aud_g00
06:59:52  49  ,aud_g01
06:59:52  50  ,aud_g02
06:59:52  51  ,aud_g03
06:59:52  52  ,aud_g04
06:59:52  53  ,aud_g05
06:59:52  54  ,aud_g06
06:59:52  55  ,aud_g07
06:59:52  56  ,aud_g08
06:59:52  57  ,aud_g09
06:59:52  58  ,aud_g10
06:59:52  59  ,aud_g11
06:59:52  60  ,aud_g12
06:59:52  61  ,aud_g13
06:59:52  62  ,aud_g14
06:59:52  63  ,aud_g15
06:59:52  64  ,aud_g16
06:59:52  65  ,aud_g17
06:59:52  66  ,aud_g18
06:59:52  67  ,aud_g19
06:59:52  68  ,aud_g20
06:59:52  69  ,aud_g21
06:59:52  70  ,aud_g22
06:59:52  71  ,aud_g23
06:59:52  72  ,aud_g24
06:59:52  73  ,aud_g25
06:59:52  74  ,aud_g26
06:59:52  75  ,aud_g27
06:59:52  76  ,aud_g28
06:59:52  77  ,aud_g29
06:59:52  78  ,aud_g30
06:59:52  79  ,aud_g31
06:59:52  80  ,aud_g32
06:59:52  81  ,aud_g33
06:59:52  82  ,aud_g34
06:59:52  83  ,aud_g35
06:59:52  84  ,aud_g36
06:59:52  85  ,aud_g37
06:59:52  86  ,aud_g38
06:59:52  87  ,aud_g39
06:59:52  88  ,aud_g40
06:59:52  89  ,aud_g41
06:59:52  90  ,gbp_g00
06:59:52  91  ,gbp_g01
06:59:52  92  ,gbp_g02
06:59:52  93  ,gbp_g03
06:59:52  94  ,gbp_g04
06:59:52  95  ,gbp_g05
06:59:52  96  ,gbp_g06
06:59:52  97  ,gbp_g07
06:59:52  98  ,gbp_g08
06:59:52  99  ,gbp_g09
06:59:52 100  ,gbp_g10
06:59:52 101  ,gbp_g11
06:59:52 102  ,gbp_g12
06:59:52 103  ,gbp_g13
06:59:52 104  ,gbp_g14
06:59:52 105  ,gbp_g15
06:59:52 106  ,gbp_g16
06:59:52 107  ,gbp_g17
06:59:52 108  ,gbp_g18
06:59:52 109  ,gbp_g19
06:59:52 110  ,gbp_g20
06:59:52 111  ,gbp_g21
06:59:52 112  ,gbp_g22
06:59:52 113  ,gbp_g23
06:59:52 114  ,gbp_g24
06:59:52 115  ,gbp_g25
06:59:52 116  ,gbp_g26
06:59:52 117  ,gbp_g27
06:59:52 118  ,gbp_g28
06:59:52 119  ,gbp_g29
06:59:52 120  ,gbp_g30
06:59:52 121  ,gbp_g31
06:59:52 122  ,gbp_g32
06:59:52 123  ,gbp_g33
06:59:52 124  ,gbp_g34
06:59:52 125  ,gbp_g35
06:59:52 126  ,gbp_g36
06:59:52 127  ,gbp_g37
06:59:52 128  ,gbp_g38
06:59:52 129  ,gbp_g39
06:59:52 130  ,gbp_g40
06:59:52 131  ,gbp_g41
06:59:52 132  ,jpy_g00
06:59:52 133  ,jpy_g01
06:59:52 134  ,jpy_g02
06:59:52 135  ,jpy_g03
06:59:52 136  ,jpy_g04
06:59:52 137  ,jpy_g05
06:59:52 138  ,jpy_g06
06:59:52 139  ,jpy_g07
06:59:52 140  ,jpy_g08
06:59:52 141  ,jpy_g09
06:59:52 142  ,jpy_g10
06:59:52 143  ,jpy_g11
06:59:52 144  ,jpy_g12
06:59:52 145  ,jpy_g13
06:59:52 146  ,jpy_g14
06:59:52 147  ,jpy_g15
06:59:52 148  ,jpy_g16
06:59:52 149  ,jpy_g17
06:59:52 150  ,jpy_g18
06:59:52 151  ,jpy_g19
06:59:52 152  ,jpy_g20
06:59:52 153  ,jpy_g21
06:59:52 154  ,jpy_g22
06:59:52 155  ,jpy_g23
06:59:52 156  ,jpy_g24
06:59:52 157  ,jpy_g25
06:59:52 158  ,jpy_g26
06:59:52 159  ,jpy_g27
06:59:52 160  ,jpy_g28
06:59:52 161  ,jpy_g29
06:59:52 162  ,jpy_g30
06:59:52 163  ,jpy_g31
06:59:52 164  ,jpy_g32
06:59:52 165  ,jpy_g33
06:59:52 166  ,jpy_g34
06:59:52 167  ,jpy_g35
06:59:52 168  ,jpy_g36
06:59:52 169  ,jpy_g37
06:59:52 170  ,jpy_g38
06:59:52 171  ,jpy_g39
06:59:52 172  ,jpy_g40
06:59:52 173  ,jpy_g41
06:59:52 174  ,cad_g00
06:59:52 175  ,cad_g01
06:59:52 176  ,cad_g02
06:59:52 177  ,cad_g03
06:59:52 178  ,cad_g04
06:59:52 179  ,cad_g05
06:59:52 180  ,cad_g06
06:59:52 181  ,cad_g07
06:59:52 182  ,cad_g08
06:59:52 183  ,cad_g09
06:59:52 184  ,cad_g10
06:59:52 185  ,cad_g11
06:59:52 186  ,cad_g12
06:59:52 187  ,cad_g13
06:59:52 188  ,cad_g14
06:59:52 189  ,cad_g15
06:59:52 190  ,cad_g16
06:59:52 191  ,cad_g17
06:59:52 192  ,cad_g18
06:59:52 193  ,cad_g19
06:59:52 194  ,cad_g20
06:59:52 195  ,cad_g21
06:59:52 196  ,cad_g22
06:59:52 197  ,cad_g23
06:59:52 198  ,cad_g24
06:59:52 199  ,cad_g25
06:59:52 200  ,cad_g26
06:59:52 201  ,cad_g27
06:59:52 202  ,cad_g28
06:59:52 203  ,cad_g29
06:59:52 204  ,cad_g30
06:59:52 205  ,cad_g31
06:59:52 206  ,cad_g32
06:59:52 207  ,cad_g33
06:59:52 208  ,cad_g34
06:59:52 209  ,cad_g35
06:59:52 210  ,cad_g36
06:59:52 211  ,cad_g37
06:59:52 212  ,cad_g38
06:59:52 213  ,cad_g39
06:59:52 214  ,cad_g40
06:59:52 215  ,cad_g41
06:59:52 216  ,chf_g00
06:59:52 217  ,chf_g01
06:59:52 218  ,chf_g02
06:59:52 219  ,chf_g03
06:59:52 220  ,chf_g04
06:59:52 221  ,chf_g05
06:59:52 222  ,chf_g06
06:59:52 223  ,chf_g07
06:59:52 224  ,chf_g08
06:59:52 225  ,chf_g09
06:59:52 226  ,chf_g10
06:59:52 227  ,chf_g11
06:59:52 228  ,chf_g12
06:59:52 229  ,chf_g13
06:59:52 230  ,chf_g14
06:59:52 231  ,chf_g15
06:59:52 232  ,chf_g16
06:59:52 233  ,chf_g17
06:59:52 234  ,chf_g18
06:59:52 235  ,chf_g19
06:59:52 236  ,chf_g20
06:59:52 237  ,chf_g21
06:59:52 238  ,chf_g22
06:59:52 239  ,chf_g23
06:59:52 240  ,chf_g24
06:59:52 241  ,chf_g25
06:59:52 242  ,chf_g26
06:59:52 243  ,chf_g27
06:59:52 244  ,chf_g28
06:59:52 245  ,chf_g29
06:59:52 246  ,chf_g30
06:59:52 247  ,chf_g31
06:59:52 248  ,chf_g32
06:59:52 249  ,chf_g33
06:59:52 250  ,chf_g34
06:59:52 251  ,chf_g35
06:59:52 252  ,chf_g36
06:59:52 253  ,chf_g37
06:59:52 254  ,chf_g38
06:59:52 255  ,chf_g39
06:59:52 256  ,chf_g40
06:59:52 257  ,chf_g41
06:59:52 258  FROM aud_ms6 m
06:59:52 259  WHERE gatt IN('nup','up')
06:59:52 260  AND 1+m.ydate < '&1'||' '||'&2'
06:59:52 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'06:40:00'

View created.

Elapsed: 00:00:00.15
06:59:52 SQL> 
06:59:52 SQL> -- rpt
06:59:52 SQL> 
06:59:52 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
06:59:52   2  
06:59:52 SQL> SELECT MAX(prdate) FROM bme
06:59:52   2  
06:59:52 SQL> -- Now build model from bme and score sme
06:59:52 SQL> @score1.sql
06:59:52 SQL> -- score1.sql
06:59:52 SQL> 
06:59:52 SQL> -- Does the 1st SVM score
06:59:52 SQL> 
06:59:52 SQL> -- Fill up svmc_apply_prep
06:59:52 SQL> @score.sql
06:59:52 SQL> --
06:59:52 SQL> -- score.sql
06:59:52 SQL> --
06:59:52 SQL> 
06:59:52 SQL> -- usage: score.sql
06:59:52 SQL> 
06:59:52 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
06:59:52 SQL> 
06:59:52 SQL> DEFINE target	= 'gatt'
06:59:52 SQL> DEFINE model_name = 'forex14'
06:59:52 SQL> DEFINE bldtable	= 'bme'
06:59:52 SQL> DEFINE scoretable = 'sme'
06:59:52 SQL> DEFINE case_id	= 'prdate'
06:59:52 SQL> 
06:59:52 SQL> -- Define a variable to help me exclude some columns from some data mining calls
06:59:52 SQL> DEFINE exclude1 = "'&target','&case_id'"
06:59:52 SQL> 
06:59:52 SQL> -- Builds an SVM model using pl/sql.
06:59:52 SQL> 
06:59:52 SQL> -----------------------------------------------------------------------
06:59:52 SQL> --			    BUILD THE MODEL
06:59:52 SQL> -----------------------------------------------------------------------
06:59:52 SQL> 
06:59:52 SQL> -- Cleanup old build data preparation objects for repeat runs
06:59:52 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
06:59:52 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
06:59:52 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
06:59:52 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
06:59:52 SQL> 
06:59:52 SQL> 
06:59:52 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
06:59:52 SQL> --
06:59:52 SQL> -- DROP	TABLE svmc_settings ;
06:59:52 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
06:59:52 SQL> -- DELETE svmc_settings;
06:59:52 SQL> 
06:59:52 SQL> -- The default classification algorithm is Naive Bayes. So override
06:59:52 SQL> -- this choice to SVM using a settings table.
06:59:52 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
06:59:52 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
06:59:52 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
06:59:52 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
06:59:52 SQL> -- models.
06:59:52 SQL> --
06:59:52 SQL> 
06:59:52 SQL> -- Do this once and then comment it out.
06:59:52 SQL> -- That makes script go faster.
06:59:52 SQL> -- BEGIN
06:59:52 SQL> -- -- Populate settings table
06:59:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:59:52 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
06:59:52 SQL> --
06:59:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:59:52 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
06:59:52 SQL> --
06:59:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
06:59:52 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
06:59:52 SQL> --   COMMIT;
06:59:52 SQL> -- END;
06:59:52 SQL> -- /
06:59:52 SQL> 
06:59:52 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
06:59:52 SQL> 
06:59:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
06:59:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:59:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:59:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
06:59:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:59:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:59:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
06:59:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:59:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:59:52 SQL> 
06:59:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
06:59:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
06:59:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
06:59:52 SQL> 
06:59:52 SQL> --------------------------------
06:59:52 SQL> -- PREPARE BUILD (TRAINING) DATA
06:59:52 SQL> --
06:59:52 SQL> 
06:59:52 SQL> -- 1. Missing Value treatment for all Predictors and
06:59:52 SQL> -- 2. Outlier Treatment and
06:59:52 SQL> -- 3. Normalization are performed below.
06:59:52 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
06:59:52 SQL> --    normalized here.
06:59:52 SQL> 
06:59:52 SQL> BEGIN
06:59:52   2  	-- Perform missing value treatment for all predictors
06:59:52   3  	-- create miss tables
06:59:52   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
06:59:52   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
06:59:52   6  
06:59:52   7  	-- populate miss tables
06:59:52   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
06:59:52   9  	  miss_table_name => 'svmc_miss_num',
06:59:52  10  	  data_table_name => '&bldtable',
06:59:52  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:59:52  12  
06:59:52  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
06:59:52  14  	  miss_table_name => 'svmc_miss_cat',
06:59:52  15  	  data_table_name => '&bldtable',
06:59:52  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:59:52  17  
06:59:52  18  	-- xform input data to replace missing values
06:59:52  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
06:59:52  20  	  miss_table_name => 'svmc_miss_num',
06:59:52  21  	  data_table_name => '&bldtable',
06:59:52  22  	  xform_view_name => 'xformed_build_miss_num');
06:59:52  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
06:59:52  24  	  miss_table_name => 'svmc_miss_cat',
06:59:52  25  	  data_table_name => '&bldtable',
06:59:52  26  	  xform_view_name => 'xformed_build_miss_cat');
06:59:52  27  
06:59:52  28  	-- Perform outlier treatment.
06:59:52  29  	-- create clip table
06:59:52  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
06:59:52  31  
06:59:52  32  	-- populate clip table
06:59:52  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
06:59:52  34  	  clip_table_name => 'svmc_clip',
06:59:52  35  	  data_table_name => '&bldtable',
06:59:52  36  	  tail_frac	  => 0.025,
06:59:52  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:59:52  38  
06:59:52  39  	-- xform input data to winsorized data
06:59:52  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
06:59:52  41  	  clip_table_name => 'svmc_clip',
06:59:52  42  	  data_table_name => '&bldtable',
06:59:52  43  	  xform_view_name => 'svmc_winsor');
06:59:52  44  
06:59:52  45  	-- create normalization table
06:59:52  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
06:59:52  47  
06:59:52  48  	-- populate normalization table based on winsorized data
06:59:52  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
06:59:52  50  	  norm_table_name => 'svmc_norm',
06:59:52  51  	  data_table_name => 'svmc_winsor',
06:59:52  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
06:59:52  53  
06:59:52  54  	-- normalize the original data
06:59:52  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
06:59:52  56  	  norm_table_name => 'svmc_norm',
06:59:52  57  	  data_table_name => '&bldtable',
06:59:52  58  	  xform_view_name => 'svmc_build_prep');
06:59:52  59  END;
06:59:52  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.41
07:00:11 SQL> 
07:00:11 SQL> ---------------------
07:00:11 SQL> -- CREATE A NEW MODEL
07:00:11 SQL> --
07:00:11 SQL> -- Cleanup old model with the same name for repeat runs
07:00:11 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
07:00:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:00:11   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.01
07:00:12 SQL> 
07:00:12 SQL> -- Build a new SVM Model
07:00:12 SQL> BEGIN
07:00:12   2  	DBMS_DATA_MINING.CREATE_MODEL(
07:00:12   3  	  model_name	      => '&model_name',
07:00:12   4  	  mining_function     => dbms_data_mining.classification,
07:00:12   5  	  data_table_name     => 'svmc_build_prep',
07:00:12   6  	  case_id_column_name => '&case_id',
07:00:12   7  	  target_column_name  => '&target',
07:00:12   8  	  settings_table_name => 'svmc_settings');
07:00:12   9  END;
07:00:12  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.34
07:00:39 SQL> 
07:00:39 SQL> -----------------------------------------------------------------------
07:00:39 SQL> --			       APPLY/score THE MODEL
07:00:39 SQL> -----------------------------------------------------------------------
07:00:39 SQL> 
07:00:39 SQL> -- Cleanup old scoring data preparation objects for repeat runs
07:00:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
07:00:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:00:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
07:00:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
07:00:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:00:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
07:00:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
07:00:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:00:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:00:39 SQL> -----------------------
07:00:39 SQL> -- PREPARE SCORING DATA
07:00:39 SQL> --
07:00:39 SQL> -- If the data for model creation has been prepared, then the data
07:00:39 SQL> -- to be scored using the model must be prepared in the same manner
07:00:39 SQL> -- in order to obtain meaningful results.
07:00:39 SQL> --
07:00:39 SQL> -- 1. Missing Value treatment for all Predictors and
07:00:39 SQL> -- 2. Normalization
07:00:39 SQL> -- No outlier treatment will be performed during test and apply. The
07:00:39 SQL> -- normalization step is sufficient, since the normalization parameters
07:00:39 SQL> -- already capture the effects of outlier treatment done with build data.
07:00:39 SQL> --
07:00:39 SQL> BEGIN
07:00:39   2  	-- Xform Test data to replace missing values
07:00:39   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
07:00:39   4  	  miss_table_name => 'svmc_miss_num',
07:00:39   5  	  data_table_name => '&scoretable',
07:00:39   6  	  xform_view_name => 'xformed_apply_miss_num');
07:00:39   7  
07:00:39   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
07:00:39   9  	  miss_table_name => 'svmc_miss_cat',
07:00:39  10  	  data_table_name => '&scoretable',
07:00:39  11  	  xform_view_name => 'xformed_apply_miss_cat');
07:00:39  12  
07:00:39  13  	-- Normalize the data to be scored
07:00:39  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
07:00:39  15  	  norm_table_name => 'svmc_norm',
07:00:39  16  	  data_table_name => '&scoretable',
07:00:39  17  	  xform_view_name => 'svmc_apply_prep');
07:00:39  18  END;
07:00:39  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.37
07:00:40 SQL> 
07:00:40 SQL> -- Use same model_name used in score.sql
07:00:40 SQL> DEFINE model_name = 'forex14'
07:00:40 SQL> 
07:00:40 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
07:00:40 SQL> 
07:00:40 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
07:00:41 SQL> 
07:00:41 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
07:00:41   2  SELECT
07:00:41   3  prdate
07:00:41   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
07:00:41   5  ,sysdate
07:00:41   6  ,SUBSTR(prdate,1,3)pair
07:00:41   7  ,SUBSTR(prdate,4,19)ydate
07:00:41   8  FROM svmc_apply_prep
07:00:41   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
07:00:41 SQL> @aud_score1day.sql  2011-01-03 06:45:00
07:00:41 SQL> --
07:00:41 SQL> -- aud_score1day.sql
07:00:41 SQL> --
07:00:41 SQL> 
07:00:41 SQL> CREATE OR REPLACE VIEW sme AS
07:00:41   2  SELECT
07:00:41   3  'aud'||m.ydate prdate
07:00:41   4  ,NULL gatt
07:00:41   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
07:00:41   6  ,eur_g00
07:00:41   7  ,eur_g01
07:00:41   8  ,eur_g02
07:00:41   9  ,eur_g03
07:00:41  10  ,eur_g04
07:00:41  11  ,eur_g05
07:00:41  12  ,eur_g06
07:00:41  13  ,eur_g07
07:00:41  14  ,eur_g08
07:00:41  15  ,eur_g09
07:00:41  16  ,eur_g10
07:00:41  17  ,eur_g11
07:00:41  18  ,eur_g12
07:00:41  19  ,eur_g13
07:00:41  20  ,eur_g14
07:00:41  21  ,eur_g15
07:00:41  22  ,eur_g16
07:00:41  23  ,eur_g17
07:00:41  24  ,eur_g18
07:00:41  25  ,eur_g19
07:00:41  26  ,eur_g20
07:00:41  27  ,eur_g21
07:00:41  28  ,eur_g22
07:00:41  29  ,eur_g23
07:00:41  30  ,eur_g24
07:00:41  31  ,eur_g25
07:00:41  32  ,eur_g26
07:00:41  33  ,eur_g27
07:00:41  34  ,eur_g28
07:00:41  35  ,eur_g29
07:00:41  36  ,eur_g30
07:00:41  37  ,eur_g31
07:00:41  38  ,eur_g32
07:00:41  39  ,eur_g33
07:00:41  40  ,eur_g34
07:00:41  41  ,eur_g35
07:00:41  42  ,eur_g36
07:00:41  43  ,eur_g37
07:00:41  44  ,eur_g38
07:00:41  45  ,eur_g39
07:00:41  46  ,eur_g40
07:00:41  47  ,eur_g41
07:00:41  48  ,aud_g00
07:00:41  49  ,aud_g01
07:00:41  50  ,aud_g02
07:00:41  51  ,aud_g03
07:00:41  52  ,aud_g04
07:00:41  53  ,aud_g05
07:00:41  54  ,aud_g06
07:00:41  55  ,aud_g07
07:00:41  56  ,aud_g08
07:00:41  57  ,aud_g09
07:00:41  58  ,aud_g10
07:00:41  59  ,aud_g11
07:00:41  60  ,aud_g12
07:00:41  61  ,aud_g13
07:00:41  62  ,aud_g14
07:00:41  63  ,aud_g15
07:00:41  64  ,aud_g16
07:00:41  65  ,aud_g17
07:00:41  66  ,aud_g18
07:00:41  67  ,aud_g19
07:00:41  68  ,aud_g20
07:00:41  69  ,aud_g21
07:00:41  70  ,aud_g22
07:00:41  71  ,aud_g23
07:00:41  72  ,aud_g24
07:00:41  73  ,aud_g25
07:00:41  74  ,aud_g26
07:00:41  75  ,aud_g27
07:00:41  76  ,aud_g28
07:00:41  77  ,aud_g29
07:00:41  78  ,aud_g30
07:00:41  79  ,aud_g31
07:00:41  80  ,aud_g32
07:00:41  81  ,aud_g33
07:00:41  82  ,aud_g34
07:00:41  83  ,aud_g35
07:00:41  84  ,aud_g36
07:00:41  85  ,aud_g37
07:00:41  86  ,aud_g38
07:00:41  87  ,aud_g39
07:00:41  88  ,aud_g40
07:00:41  89  ,aud_g41
07:00:41  90  ,gbp_g00
07:00:41  91  ,gbp_g01
07:00:41  92  ,gbp_g02
07:00:41  93  ,gbp_g03
07:00:41  94  ,gbp_g04
07:00:41  95  ,gbp_g05
07:00:41  96  ,gbp_g06
07:00:41  97  ,gbp_g07
07:00:41  98  ,gbp_g08
07:00:41  99  ,gbp_g09
07:00:41 100  ,gbp_g10
07:00:41 101  ,gbp_g11
07:00:41 102  ,gbp_g12
07:00:41 103  ,gbp_g13
07:00:41 104  ,gbp_g14
07:00:41 105  ,gbp_g15
07:00:41 106  ,gbp_g16
07:00:41 107  ,gbp_g17
07:00:41 108  ,gbp_g18
07:00:41 109  ,gbp_g19
07:00:41 110  ,gbp_g20
07:00:41 111  ,gbp_g21
07:00:41 112  ,gbp_g22
07:00:41 113  ,gbp_g23
07:00:41 114  ,gbp_g24
07:00:41 115  ,gbp_g25
07:00:41 116  ,gbp_g26
07:00:41 117  ,gbp_g27
07:00:41 118  ,gbp_g28
07:00:41 119  ,gbp_g29
07:00:41 120  ,gbp_g30
07:00:41 121  ,gbp_g31
07:00:41 122  ,gbp_g32
07:00:41 123  ,gbp_g33
07:00:41 124  ,gbp_g34
07:00:41 125  ,gbp_g35
07:00:41 126  ,gbp_g36
07:00:41 127  ,gbp_g37
07:00:41 128  ,gbp_g38
07:00:41 129  ,gbp_g39
07:00:41 130  ,gbp_g40
07:00:41 131  ,gbp_g41
07:00:41 132  ,jpy_g00
07:00:41 133  ,jpy_g01
07:00:41 134  ,jpy_g02
07:00:41 135  ,jpy_g03
07:00:41 136  ,jpy_g04
07:00:41 137  ,jpy_g05
07:00:41 138  ,jpy_g06
07:00:41 139  ,jpy_g07
07:00:41 140  ,jpy_g08
07:00:41 141  ,jpy_g09
07:00:41 142  ,jpy_g10
07:00:41 143  ,jpy_g11
07:00:41 144  ,jpy_g12
07:00:41 145  ,jpy_g13
07:00:41 146  ,jpy_g14
07:00:41 147  ,jpy_g15
07:00:41 148  ,jpy_g16
07:00:41 149  ,jpy_g17
07:00:41 150  ,jpy_g18
07:00:41 151  ,jpy_g19
07:00:41 152  ,jpy_g20
07:00:41 153  ,jpy_g21
07:00:41 154  ,jpy_g22
07:00:41 155  ,jpy_g23
07:00:41 156  ,jpy_g24
07:00:41 157  ,jpy_g25
07:00:41 158  ,jpy_g26
07:00:41 159  ,jpy_g27
07:00:41 160  ,jpy_g28
07:00:41 161  ,jpy_g29
07:00:41 162  ,jpy_g30
07:00:41 163  ,jpy_g31
07:00:41 164  ,jpy_g32
07:00:41 165  ,jpy_g33
07:00:41 166  ,jpy_g34
07:00:41 167  ,jpy_g35
07:00:41 168  ,jpy_g36
07:00:41 169  ,jpy_g37
07:00:41 170  ,jpy_g38
07:00:41 171  ,jpy_g39
07:00:41 172  ,jpy_g40
07:00:41 173  ,jpy_g41
07:00:41 174  ,cad_g00
07:00:41 175  ,cad_g01
07:00:41 176  ,cad_g02
07:00:41 177  ,cad_g03
07:00:41 178  ,cad_g04
07:00:41 179  ,cad_g05
07:00:41 180  ,cad_g06
07:00:41 181  ,cad_g07
07:00:41 182  ,cad_g08
07:00:41 183  ,cad_g09
07:00:41 184  ,cad_g10
07:00:41 185  ,cad_g11
07:00:41 186  ,cad_g12
07:00:41 187  ,cad_g13
07:00:41 188  ,cad_g14
07:00:41 189  ,cad_g15
07:00:41 190  ,cad_g16
07:00:41 191  ,cad_g17
07:00:41 192  ,cad_g18
07:00:41 193  ,cad_g19
07:00:41 194  ,cad_g20
07:00:41 195  ,cad_g21
07:00:41 196  ,cad_g22
07:00:41 197  ,cad_g23
07:00:41 198  ,cad_g24
07:00:41 199  ,cad_g25
07:00:41 200  ,cad_g26
07:00:41 201  ,cad_g27
07:00:41 202  ,cad_g28
07:00:41 203  ,cad_g29
07:00:41 204  ,cad_g30
07:00:41 205  ,cad_g31
07:00:41 206  ,cad_g32
07:00:41 207  ,cad_g33
07:00:41 208  ,cad_g34
07:00:41 209  ,cad_g35
07:00:41 210  ,cad_g36
07:00:41 211  ,cad_g37
07:00:41 212  ,cad_g38
07:00:41 213  ,cad_g39
07:00:41 214  ,cad_g40
07:00:41 215  ,cad_g41
07:00:41 216  ,chf_g00
07:00:41 217  ,chf_g01
07:00:41 218  ,chf_g02
07:00:41 219  ,chf_g03
07:00:41 220  ,chf_g04
07:00:41 221  ,chf_g05
07:00:41 222  ,chf_g06
07:00:41 223  ,chf_g07
07:00:41 224  ,chf_g08
07:00:41 225  ,chf_g09
07:00:41 226  ,chf_g10
07:00:41 227  ,chf_g11
07:00:41 228  ,chf_g12
07:00:41 229  ,chf_g13
07:00:41 230  ,chf_g14
07:00:41 231  ,chf_g15
07:00:41 232  ,chf_g16
07:00:41 233  ,chf_g17
07:00:41 234  ,chf_g18
07:00:41 235  ,chf_g19
07:00:41 236  ,chf_g20
07:00:41 237  ,chf_g21
07:00:41 238  ,chf_g22
07:00:41 239  ,chf_g23
07:00:41 240  ,chf_g24
07:00:41 241  ,chf_g25
07:00:41 242  ,chf_g26
07:00:41 243  ,chf_g27
07:00:41 244  ,chf_g28
07:00:41 245  ,chf_g29
07:00:41 246  ,chf_g30
07:00:41 247  ,chf_g31
07:00:41 248  ,chf_g32
07:00:41 249  ,chf_g33
07:00:41 250  ,chf_g34
07:00:41 251  ,chf_g35
07:00:41 252  ,chf_g36
07:00:41 253  ,chf_g37
07:00:41 254  ,chf_g38
07:00:41 255  ,chf_g39
07:00:41 256  ,chf_g40
07:00:41 257  ,chf_g41
07:00:41 258  FROM aud_ms6 m
07:00:41 259  WHERE m.ydate = '&1'||' '||'&2'
07:00:41 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'06:45:00'

View created.

Elapsed: 00:00:00.14
07:00:41 SQL> 
07:00:41 SQL> -- rpt
07:00:41 SQL> -- We should see just 1 row:
07:00:41 SQL> 
07:00:41 SQL> SELECT COUNT(prdate) FROM sme
07:00:41   2  
07:00:41 SQL> -- Build the model:
07:00:41 SQL> CREATE OR REPLACE VIEW bme AS
07:00:41   2  SELECT
07:00:41   3  'aud'||m.ydate prdate
07:00:41   4  ,gatt
07:00:41   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
07:00:41   6  ,eur_g00
07:00:41   7  ,eur_g01
07:00:41   8  ,eur_g02
07:00:41   9  ,eur_g03
07:00:41  10  ,eur_g04
07:00:41  11  ,eur_g05
07:00:41  12  ,eur_g06
07:00:41  13  ,eur_g07
07:00:41  14  ,eur_g08
07:00:41  15  ,eur_g09
07:00:41  16  ,eur_g10
07:00:41  17  ,eur_g11
07:00:41  18  ,eur_g12
07:00:41  19  ,eur_g13
07:00:41  20  ,eur_g14
07:00:41  21  ,eur_g15
07:00:41  22  ,eur_g16
07:00:41  23  ,eur_g17
07:00:41  24  ,eur_g18
07:00:41  25  ,eur_g19
07:00:41  26  ,eur_g20
07:00:41  27  ,eur_g21
07:00:41  28  ,eur_g22
07:00:41  29  ,eur_g23
07:00:41  30  ,eur_g24
07:00:41  31  ,eur_g25
07:00:41  32  ,eur_g26
07:00:41  33  ,eur_g27
07:00:41  34  ,eur_g28
07:00:41  35  ,eur_g29
07:00:41  36  ,eur_g30
07:00:41  37  ,eur_g31
07:00:41  38  ,eur_g32
07:00:41  39  ,eur_g33
07:00:41  40  ,eur_g34
07:00:41  41  ,eur_g35
07:00:41  42  ,eur_g36
07:00:41  43  ,eur_g37
07:00:41  44  ,eur_g38
07:00:41  45  ,eur_g39
07:00:41  46  ,eur_g40
07:00:41  47  ,eur_g41
07:00:41  48  ,aud_g00
07:00:41  49  ,aud_g01
07:00:41  50  ,aud_g02
07:00:41  51  ,aud_g03
07:00:41  52  ,aud_g04
07:00:41  53  ,aud_g05
07:00:41  54  ,aud_g06
07:00:41  55  ,aud_g07
07:00:41  56  ,aud_g08
07:00:41  57  ,aud_g09
07:00:41  58  ,aud_g10
07:00:41  59  ,aud_g11
07:00:41  60  ,aud_g12
07:00:41  61  ,aud_g13
07:00:41  62  ,aud_g14
07:00:41  63  ,aud_g15
07:00:41  64  ,aud_g16
07:00:41  65  ,aud_g17
07:00:41  66  ,aud_g18
07:00:41  67  ,aud_g19
07:00:41  68  ,aud_g20
07:00:41  69  ,aud_g21
07:00:41  70  ,aud_g22
07:00:41  71  ,aud_g23
07:00:41  72  ,aud_g24
07:00:41  73  ,aud_g25
07:00:41  74  ,aud_g26
07:00:41  75  ,aud_g27
07:00:41  76  ,aud_g28
07:00:41  77  ,aud_g29
07:00:41  78  ,aud_g30
07:00:41  79  ,aud_g31
07:00:41  80  ,aud_g32
07:00:41  81  ,aud_g33
07:00:41  82  ,aud_g34
07:00:41  83  ,aud_g35
07:00:41  84  ,aud_g36
07:00:41  85  ,aud_g37
07:00:41  86  ,aud_g38
07:00:41  87  ,aud_g39
07:00:41  88  ,aud_g40
07:00:41  89  ,aud_g41
07:00:41  90  ,gbp_g00
07:00:41  91  ,gbp_g01
07:00:41  92  ,gbp_g02
07:00:41  93  ,gbp_g03
07:00:41  94  ,gbp_g04
07:00:41  95  ,gbp_g05
07:00:41  96  ,gbp_g06
07:00:41  97  ,gbp_g07
07:00:41  98  ,gbp_g08
07:00:41  99  ,gbp_g09
07:00:41 100  ,gbp_g10
07:00:41 101  ,gbp_g11
07:00:41 102  ,gbp_g12
07:00:41 103  ,gbp_g13
07:00:41 104  ,gbp_g14
07:00:41 105  ,gbp_g15
07:00:41 106  ,gbp_g16
07:00:41 107  ,gbp_g17
07:00:41 108  ,gbp_g18
07:00:41 109  ,gbp_g19
07:00:41 110  ,gbp_g20
07:00:41 111  ,gbp_g21
07:00:41 112  ,gbp_g22
07:00:41 113  ,gbp_g23
07:00:41 114  ,gbp_g24
07:00:41 115  ,gbp_g25
07:00:41 116  ,gbp_g26
07:00:41 117  ,gbp_g27
07:00:41 118  ,gbp_g28
07:00:41 119  ,gbp_g29
07:00:41 120  ,gbp_g30
07:00:41 121  ,gbp_g31
07:00:41 122  ,gbp_g32
07:00:41 123  ,gbp_g33
07:00:41 124  ,gbp_g34
07:00:41 125  ,gbp_g35
07:00:41 126  ,gbp_g36
07:00:41 127  ,gbp_g37
07:00:41 128  ,gbp_g38
07:00:41 129  ,gbp_g39
07:00:41 130  ,gbp_g40
07:00:41 131  ,gbp_g41
07:00:41 132  ,jpy_g00
07:00:41 133  ,jpy_g01
07:00:41 134  ,jpy_g02
07:00:41 135  ,jpy_g03
07:00:41 136  ,jpy_g04
07:00:41 137  ,jpy_g05
07:00:41 138  ,jpy_g06
07:00:41 139  ,jpy_g07
07:00:41 140  ,jpy_g08
07:00:41 141  ,jpy_g09
07:00:41 142  ,jpy_g10
07:00:41 143  ,jpy_g11
07:00:41 144  ,jpy_g12
07:00:41 145  ,jpy_g13
07:00:41 146  ,jpy_g14
07:00:41 147  ,jpy_g15
07:00:41 148  ,jpy_g16
07:00:41 149  ,jpy_g17
07:00:41 150  ,jpy_g18
07:00:41 151  ,jpy_g19
07:00:41 152  ,jpy_g20
07:00:41 153  ,jpy_g21
07:00:41 154  ,jpy_g22
07:00:41 155  ,jpy_g23
07:00:41 156  ,jpy_g24
07:00:41 157  ,jpy_g25
07:00:41 158  ,jpy_g26
07:00:41 159  ,jpy_g27
07:00:41 160  ,jpy_g28
07:00:41 161  ,jpy_g29
07:00:41 162  ,jpy_g30
07:00:41 163  ,jpy_g31
07:00:41 164  ,jpy_g32
07:00:41 165  ,jpy_g33
07:00:41 166  ,jpy_g34
07:00:41 167  ,jpy_g35
07:00:41 168  ,jpy_g36
07:00:41 169  ,jpy_g37
07:00:41 170  ,jpy_g38
07:00:41 171  ,jpy_g39
07:00:41 172  ,jpy_g40
07:00:41 173  ,jpy_g41
07:00:41 174  ,cad_g00
07:00:41 175  ,cad_g01
07:00:41 176  ,cad_g02
07:00:41 177  ,cad_g03
07:00:41 178  ,cad_g04
07:00:41 179  ,cad_g05
07:00:41 180  ,cad_g06
07:00:41 181  ,cad_g07
07:00:41 182  ,cad_g08
07:00:41 183  ,cad_g09
07:00:41 184  ,cad_g10
07:00:41 185  ,cad_g11
07:00:41 186  ,cad_g12
07:00:41 187  ,cad_g13
07:00:41 188  ,cad_g14
07:00:41 189  ,cad_g15
07:00:41 190  ,cad_g16
07:00:41 191  ,cad_g17
07:00:41 192  ,cad_g18
07:00:41 193  ,cad_g19
07:00:41 194  ,cad_g20
07:00:41 195  ,cad_g21
07:00:41 196  ,cad_g22
07:00:41 197  ,cad_g23
07:00:41 198  ,cad_g24
07:00:41 199  ,cad_g25
07:00:41 200  ,cad_g26
07:00:41 201  ,cad_g27
07:00:41 202  ,cad_g28
07:00:41 203  ,cad_g29
07:00:41 204  ,cad_g30
07:00:41 205  ,cad_g31
07:00:41 206  ,cad_g32
07:00:41 207  ,cad_g33
07:00:41 208  ,cad_g34
07:00:41 209  ,cad_g35
07:00:41 210  ,cad_g36
07:00:41 211  ,cad_g37
07:00:41 212  ,cad_g38
07:00:41 213  ,cad_g39
07:00:41 214  ,cad_g40
07:00:41 215  ,cad_g41
07:00:41 216  ,chf_g00
07:00:41 217  ,chf_g01
07:00:41 218  ,chf_g02
07:00:41 219  ,chf_g03
07:00:41 220  ,chf_g04
07:00:41 221  ,chf_g05
07:00:41 222  ,chf_g06
07:00:41 223  ,chf_g07
07:00:41 224  ,chf_g08
07:00:41 225  ,chf_g09
07:00:41 226  ,chf_g10
07:00:41 227  ,chf_g11
07:00:41 228  ,chf_g12
07:00:41 229  ,chf_g13
07:00:41 230  ,chf_g14
07:00:41 231  ,chf_g15
07:00:41 232  ,chf_g16
07:00:41 233  ,chf_g17
07:00:41 234  ,chf_g18
07:00:41 235  ,chf_g19
07:00:41 236  ,chf_g20
07:00:41 237  ,chf_g21
07:00:41 238  ,chf_g22
07:00:41 239  ,chf_g23
07:00:41 240  ,chf_g24
07:00:41 241  ,chf_g25
07:00:41 242  ,chf_g26
07:00:41 243  ,chf_g27
07:00:41 244  ,chf_g28
07:00:41 245  ,chf_g29
07:00:41 246  ,chf_g30
07:00:41 247  ,chf_g31
07:00:41 248  ,chf_g32
07:00:41 249  ,chf_g33
07:00:41 250  ,chf_g34
07:00:41 251  ,chf_g35
07:00:41 252  ,chf_g36
07:00:41 253  ,chf_g37
07:00:41 254  ,chf_g38
07:00:41 255  ,chf_g39
07:00:41 256  ,chf_g40
07:00:41 257  ,chf_g41
07:00:41 258  FROM aud_ms6 m
07:00:41 259  WHERE gatt IN('nup','up')
07:00:41 260  AND 1+m.ydate < '&1'||' '||'&2'
07:00:41 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'06:45:00'

View created.

Elapsed: 00:00:00.12
07:00:41 SQL> 
07:00:41 SQL> -- rpt
07:00:41 SQL> 
07:00:41 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
07:00:41   2  
07:00:41 SQL> SELECT MAX(prdate) FROM bme
07:00:41   2  
07:00:41 SQL> -- Now build model from bme and score sme
07:00:41 SQL> @score1.sql
07:00:41 SQL> -- score1.sql
07:00:41 SQL> 
07:00:41 SQL> -- Does the 1st SVM score
07:00:41 SQL> 
07:00:41 SQL> -- Fill up svmc_apply_prep
07:00:41 SQL> @score.sql
07:00:41 SQL> --
07:00:41 SQL> -- score.sql
07:00:41 SQL> --
07:00:41 SQL> 
07:00:41 SQL> -- usage: score.sql
07:00:41 SQL> 
07:00:41 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
07:00:41 SQL> 
07:00:41 SQL> DEFINE target	= 'gatt'
07:00:41 SQL> DEFINE model_name = 'forex14'
07:00:41 SQL> DEFINE bldtable	= 'bme'
07:00:41 SQL> DEFINE scoretable = 'sme'
07:00:41 SQL> DEFINE case_id	= 'prdate'
07:00:41 SQL> 
07:00:41 SQL> -- Define a variable to help me exclude some columns from some data mining calls
07:00:41 SQL> DEFINE exclude1 = "'&target','&case_id'"
07:00:41 SQL> 
07:00:41 SQL> -- Builds an SVM model using pl/sql.
07:00:41 SQL> 
07:00:41 SQL> -----------------------------------------------------------------------
07:00:41 SQL> --			    BUILD THE MODEL
07:00:41 SQL> -----------------------------------------------------------------------
07:00:41 SQL> 
07:00:41 SQL> -- Cleanup old build data preparation objects for repeat runs
07:00:41 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.02
07:00:41 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
07:00:41 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
07:00:41 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
07:00:41 SQL> 
07:00:41 SQL> 
07:00:41 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
07:00:41 SQL> --
07:00:41 SQL> -- DROP	TABLE svmc_settings ;
07:00:41 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
07:00:41 SQL> -- DELETE svmc_settings;
07:00:41 SQL> 
07:00:41 SQL> -- The default classification algorithm is Naive Bayes. So override
07:00:41 SQL> -- this choice to SVM using a settings table.
07:00:41 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
07:00:41 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
07:00:41 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
07:00:41 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
07:00:41 SQL> -- models.
07:00:41 SQL> --
07:00:41 SQL> 
07:00:41 SQL> -- Do this once and then comment it out.
07:00:41 SQL> -- That makes script go faster.
07:00:41 SQL> -- BEGIN
07:00:41 SQL> -- -- Populate settings table
07:00:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
07:00:41 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
07:00:41 SQL> --
07:00:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
07:00:41 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
07:00:41 SQL> --
07:00:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
07:00:41 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
07:00:41 SQL> --   COMMIT;
07:00:41 SQL> -- END;
07:00:41 SQL> -- /
07:00:41 SQL> 
07:00:41 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
07:00:41 SQL> 
07:00:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
07:00:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:00:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
07:00:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
07:00:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:00:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
07:00:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
07:00:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:00:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
07:00:41 SQL> 
07:00:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
07:00:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:00:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
07:00:41 SQL> 
07:00:41 SQL> --------------------------------
07:00:41 SQL> -- PREPARE BUILD (TRAINING) DATA
07:00:41 SQL> --
07:00:41 SQL> 
07:00:41 SQL> -- 1. Missing Value treatment for all Predictors and
07:00:41 SQL> -- 2. Outlier Treatment and
07:00:41 SQL> -- 3. Normalization are performed below.
07:00:41 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
07:00:41 SQL> --    normalized here.
07:00:41 SQL> 
07:00:41 SQL> BEGIN
07:00:41   2  	-- Perform missing value treatment for all predictors
07:00:41   3  	-- create miss tables
07:00:41   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
07:00:41   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
07:00:41   6  
07:00:41   7  	-- populate miss tables
07:00:41   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
07:00:41   9  	  miss_table_name => 'svmc_miss_num',
07:00:41  10  	  data_table_name => '&bldtable',
07:00:41  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:00:41  12  
07:00:41  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
07:00:41  14  	  miss_table_name => 'svmc_miss_cat',
07:00:41  15  	  data_table_name => '&bldtable',
07:00:41  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:00:41  17  
07:00:41  18  	-- xform input data to replace missing values
07:00:41  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
07:00:41  20  	  miss_table_name => 'svmc_miss_num',
07:00:41  21  	  data_table_name => '&bldtable',
07:00:41  22  	  xform_view_name => 'xformed_build_miss_num');
07:00:41  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
07:00:41  24  	  miss_table_name => 'svmc_miss_cat',
07:00:41  25  	  data_table_name => '&bldtable',
07:00:41  26  	  xform_view_name => 'xformed_build_miss_cat');
07:00:41  27  
07:00:41  28  	-- Perform outlier treatment.
07:00:41  29  	-- create clip table
07:00:41  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
07:00:41  31  
07:00:41  32  	-- populate clip table
07:00:41  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
07:00:41  34  	  clip_table_name => 'svmc_clip',
07:00:41  35  	  data_table_name => '&bldtable',
07:00:41  36  	  tail_frac	  => 0.025,
07:00:41  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:00:41  38  
07:00:41  39  	-- xform input data to winsorized data
07:00:41  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
07:00:41  41  	  clip_table_name => 'svmc_clip',
07:00:41  42  	  data_table_name => '&bldtable',
07:00:41  43  	  xform_view_name => 'svmc_winsor');
07:00:41  44  
07:00:41  45  	-- create normalization table
07:00:41  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
07:00:41  47  
07:00:41  48  	-- populate normalization table based on winsorized data
07:00:41  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
07:00:41  50  	  norm_table_name => 'svmc_norm',
07:00:41  51  	  data_table_name => 'svmc_winsor',
07:00:41  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:00:41  53  
07:00:41  54  	-- normalize the original data
07:00:41  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
07:00:41  56  	  norm_table_name => 'svmc_norm',
07:00:41  57  	  data_table_name => '&bldtable',
07:00:41  58  	  xform_view_name => 'svmc_build_prep');
07:00:41  59  END;
07:00:41  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.31
07:01:00 SQL> 
07:01:00 SQL> ---------------------
07:01:00 SQL> -- CREATE A NEW MODEL
07:01:00 SQL> --
07:01:00 SQL> -- Cleanup old model with the same name for repeat runs
07:01:00 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
07:01:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:01:00   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.98
07:01:01 SQL> 
07:01:01 SQL> -- Build a new SVM Model
07:01:01 SQL> BEGIN
07:01:01   2  	DBMS_DATA_MINING.CREATE_MODEL(
07:01:01   3  	  model_name	      => '&model_name',
07:01:01   4  	  mining_function     => dbms_data_mining.classification,
07:01:01   5  	  data_table_name     => 'svmc_build_prep',
07:01:01   6  	  case_id_column_name => '&case_id',
07:01:01   7  	  target_column_name  => '&target',
07:01:01   8  	  settings_table_name => 'svmc_settings');
07:01:01   9  END;
07:01:01  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.11
07:01:28 SQL> 
07:01:28 SQL> -----------------------------------------------------------------------
07:01:28 SQL> --			       APPLY/score THE MODEL
07:01:28 SQL> -----------------------------------------------------------------------
07:01:28 SQL> 
07:01:28 SQL> -- Cleanup old scoring data preparation objects for repeat runs
07:01:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
07:01:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:01:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
07:01:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
07:01:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:01:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:01:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
07:01:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:01:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:01:28 SQL> -----------------------
07:01:28 SQL> -- PREPARE SCORING DATA
07:01:28 SQL> --
07:01:28 SQL> -- If the data for model creation has been prepared, then the data
07:01:28 SQL> -- to be scored using the model must be prepared in the same manner
07:01:28 SQL> -- in order to obtain meaningful results.
07:01:28 SQL> --
07:01:28 SQL> -- 1. Missing Value treatment for all Predictors and
07:01:28 SQL> -- 2. Normalization
07:01:28 SQL> -- No outlier treatment will be performed during test and apply. The
07:01:28 SQL> -- normalization step is sufficient, since the normalization parameters
07:01:28 SQL> -- already capture the effects of outlier treatment done with build data.
07:01:28 SQL> --
07:01:28 SQL> BEGIN
07:01:28   2  	-- Xform Test data to replace missing values
07:01:28   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
07:01:28   4  	  miss_table_name => 'svmc_miss_num',
07:01:28   5  	  data_table_name => '&scoretable',
07:01:28   6  	  xform_view_name => 'xformed_apply_miss_num');
07:01:28   7  
07:01:28   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
07:01:28   9  	  miss_table_name => 'svmc_miss_cat',
07:01:28  10  	  data_table_name => '&scoretable',
07:01:28  11  	  xform_view_name => 'xformed_apply_miss_cat');
07:01:28  12  
07:01:28  13  	-- Normalize the data to be scored
07:01:28  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
07:01:28  15  	  norm_table_name => 'svmc_norm',
07:01:28  16  	  data_table_name => '&scoretable',
07:01:28  17  	  xform_view_name => 'svmc_apply_prep');
07:01:28  18  END;
07:01:28  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.25
07:01:29 SQL> 
07:01:29 SQL> -- Use same model_name used in score.sql
07:01:29 SQL> DEFINE model_name = 'forex14'
07:01:29 SQL> 
07:01:29 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
07:01:29 SQL> 
07:01:29 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.06
07:01:29 SQL> 
07:01:29 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
07:01:29   2  SELECT
07:01:29   3  prdate
07:01:29   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
07:01:29   5  ,sysdate
07:01:29   6  ,SUBSTR(prdate,1,3)pair
07:01:29   7  ,SUBSTR(prdate,4,19)ydate
07:01:29   8  FROM svmc_apply_prep
07:01:29   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
07:01:29 SQL> @aud_score1day_gattn.sql	2011-01-03 06:35:00
07:01:29 SQL> --
07:01:30 SQL> -- aud_score1day_gattn.sql
07:01:30 SQL> --
07:01:30 SQL> 
07:01:30 SQL> CREATE OR REPLACE VIEW sme AS
07:01:30   2  SELECT
07:01:30   3  'aud'||m.ydate prdate
07:01:30   4  ,NULL gattn
07:01:30   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
07:01:30   6  ,eur_g00
07:01:30   7  ,eur_g01
07:01:30   8  ,eur_g02
07:01:30   9  ,eur_g03
07:01:30  10  ,eur_g04
07:01:30  11  ,eur_g05
07:01:30  12  ,eur_g06
07:01:30  13  ,eur_g07
07:01:30  14  ,eur_g08
07:01:30  15  ,eur_g09
07:01:30  16  ,eur_g10
07:01:30  17  ,eur_g11
07:01:30  18  ,eur_g12
07:01:30  19  ,eur_g13
07:01:30  20  ,eur_g14
07:01:30  21  ,eur_g15
07:01:30  22  ,eur_g16
07:01:30  23  ,eur_g17
07:01:30  24  ,eur_g18
07:01:30  25  ,eur_g19
07:01:30  26  ,eur_g20
07:01:30  27  ,eur_g21
07:01:30  28  ,eur_g22
07:01:30  29  ,eur_g23
07:01:30  30  ,eur_g24
07:01:30  31  ,eur_g25
07:01:30  32  ,eur_g26
07:01:30  33  ,eur_g27
07:01:30  34  ,eur_g28
07:01:30  35  ,eur_g29
07:01:30  36  ,eur_g30
07:01:30  37  ,eur_g31
07:01:30  38  ,eur_g32
07:01:30  39  ,eur_g33
07:01:30  40  ,eur_g34
07:01:30  41  ,eur_g35
07:01:30  42  ,eur_g36
07:01:30  43  ,eur_g37
07:01:30  44  ,eur_g38
07:01:30  45  ,eur_g39
07:01:30  46  ,eur_g40
07:01:30  47  ,eur_g41
07:01:30  48  ,aud_g00
07:01:30  49  ,aud_g01
07:01:30  50  ,aud_g02
07:01:30  51  ,aud_g03
07:01:30  52  ,aud_g04
07:01:30  53  ,aud_g05
07:01:30  54  ,aud_g06
07:01:30  55  ,aud_g07
07:01:30  56  ,aud_g08
07:01:30  57  ,aud_g09
07:01:30  58  ,aud_g10
07:01:30  59  ,aud_g11
07:01:30  60  ,aud_g12
07:01:30  61  ,aud_g13
07:01:30  62  ,aud_g14
07:01:30  63  ,aud_g15
07:01:30  64  ,aud_g16
07:01:30  65  ,aud_g17
07:01:30  66  ,aud_g18
07:01:30  67  ,aud_g19
07:01:30  68  ,aud_g20
07:01:30  69  ,aud_g21
07:01:30  70  ,aud_g22
07:01:30  71  ,aud_g23
07:01:30  72  ,aud_g24
07:01:30  73  ,aud_g25
07:01:30  74  ,aud_g26
07:01:30  75  ,aud_g27
07:01:30  76  ,aud_g28
07:01:30  77  ,aud_g29
07:01:30  78  ,aud_g30
07:01:30  79  ,aud_g31
07:01:30  80  ,aud_g32
07:01:30  81  ,aud_g33
07:01:30  82  ,aud_g34
07:01:30  83  ,aud_g35
07:01:30  84  ,aud_g36
07:01:30  85  ,aud_g37
07:01:30  86  ,aud_g38
07:01:30  87  ,aud_g39
07:01:30  88  ,aud_g40
07:01:30  89  ,aud_g41
07:01:30  90  ,gbp_g00
07:01:30  91  ,gbp_g01
07:01:30  92  ,gbp_g02
07:01:30  93  ,gbp_g03
07:01:30  94  ,gbp_g04
07:01:30  95  ,gbp_g05
07:01:30  96  ,gbp_g06
07:01:30  97  ,gbp_g07
07:01:30  98  ,gbp_g08
07:01:30  99  ,gbp_g09
07:01:30 100  ,gbp_g10
07:01:30 101  ,gbp_g11
07:01:30 102  ,gbp_g12
07:01:30 103  ,gbp_g13
07:01:30 104  ,gbp_g14
07:01:30 105  ,gbp_g15
07:01:30 106  ,gbp_g16
07:01:30 107  ,gbp_g17
07:01:30 108  ,gbp_g18
07:01:30 109  ,gbp_g19
07:01:30 110  ,gbp_g20
07:01:30 111  ,gbp_g21
07:01:30 112  ,gbp_g22
07:01:30 113  ,gbp_g23
07:01:30 114  ,gbp_g24
07:01:30 115  ,gbp_g25
07:01:30 116  ,gbp_g26
07:01:30 117  ,gbp_g27
07:01:30 118  ,gbp_g28
07:01:30 119  ,gbp_g29
07:01:30 120  ,gbp_g30
07:01:30 121  ,gbp_g31
07:01:30 122  ,gbp_g32
07:01:30 123  ,gbp_g33
07:01:30 124  ,gbp_g34
07:01:30 125  ,gbp_g35
07:01:30 126  ,gbp_g36
07:01:30 127  ,gbp_g37
07:01:30 128  ,gbp_g38
07:01:30 129  ,gbp_g39
07:01:30 130  ,gbp_g40
07:01:30 131  ,gbp_g41
07:01:30 132  ,jpy_g00
07:01:30 133  ,jpy_g01
07:01:30 134  ,jpy_g02
07:01:30 135  ,jpy_g03
07:01:30 136  ,jpy_g04
07:01:30 137  ,jpy_g05
07:01:30 138  ,jpy_g06
07:01:30 139  ,jpy_g07
07:01:30 140  ,jpy_g08
07:01:30 141  ,jpy_g09
07:01:30 142  ,jpy_g10
07:01:30 143  ,jpy_g11
07:01:30 144  ,jpy_g12
07:01:30 145  ,jpy_g13
07:01:30 146  ,jpy_g14
07:01:30 147  ,jpy_g15
07:01:30 148  ,jpy_g16
07:01:30 149  ,jpy_g17
07:01:30 150  ,jpy_g18
07:01:30 151  ,jpy_g19
07:01:30 152  ,jpy_g20
07:01:30 153  ,jpy_g21
07:01:30 154  ,jpy_g22
07:01:30 155  ,jpy_g23
07:01:30 156  ,jpy_g24
07:01:30 157  ,jpy_g25
07:01:30 158  ,jpy_g26
07:01:30 159  ,jpy_g27
07:01:30 160  ,jpy_g28
07:01:30 161  ,jpy_g29
07:01:30 162  ,jpy_g30
07:01:30 163  ,jpy_g31
07:01:30 164  ,jpy_g32
07:01:30 165  ,jpy_g33
07:01:30 166  ,jpy_g34
07:01:30 167  ,jpy_g35
07:01:30 168  ,jpy_g36
07:01:30 169  ,jpy_g37
07:01:30 170  ,jpy_g38
07:01:30 171  ,jpy_g39
07:01:30 172  ,jpy_g40
07:01:30 173  ,jpy_g41
07:01:30 174  ,cad_g00
07:01:30 175  ,cad_g01
07:01:30 176  ,cad_g02
07:01:30 177  ,cad_g03
07:01:30 178  ,cad_g04
07:01:30 179  ,cad_g05
07:01:30 180  ,cad_g06
07:01:30 181  ,cad_g07
07:01:30 182  ,cad_g08
07:01:30 183  ,cad_g09
07:01:30 184  ,cad_g10
07:01:30 185  ,cad_g11
07:01:30 186  ,cad_g12
07:01:30 187  ,cad_g13
07:01:30 188  ,cad_g14
07:01:30 189  ,cad_g15
07:01:30 190  ,cad_g16
07:01:30 191  ,cad_g17
07:01:30 192  ,cad_g18
07:01:30 193  ,cad_g19
07:01:30 194  ,cad_g20
07:01:30 195  ,cad_g21
07:01:30 196  ,cad_g22
07:01:30 197  ,cad_g23
07:01:30 198  ,cad_g24
07:01:30 199  ,cad_g25
07:01:30 200  ,cad_g26
07:01:30 201  ,cad_g27
07:01:30 202  ,cad_g28
07:01:30 203  ,cad_g29
07:01:30 204  ,cad_g30
07:01:30 205  ,cad_g31
07:01:30 206  ,cad_g32
07:01:30 207  ,cad_g33
07:01:30 208  ,cad_g34
07:01:30 209  ,cad_g35
07:01:30 210  ,cad_g36
07:01:30 211  ,cad_g37
07:01:30 212  ,cad_g38
07:01:30 213  ,cad_g39
07:01:30 214  ,cad_g40
07:01:30 215  ,cad_g41
07:01:30 216  ,chf_g00
07:01:30 217  ,chf_g01
07:01:30 218  ,chf_g02
07:01:30 219  ,chf_g03
07:01:30 220  ,chf_g04
07:01:30 221  ,chf_g05
07:01:30 222  ,chf_g06
07:01:30 223  ,chf_g07
07:01:30 224  ,chf_g08
07:01:30 225  ,chf_g09
07:01:30 226  ,chf_g10
07:01:30 227  ,chf_g11
07:01:30 228  ,chf_g12
07:01:30 229  ,chf_g13
07:01:30 230  ,chf_g14
07:01:30 231  ,chf_g15
07:01:30 232  ,chf_g16
07:01:30 233  ,chf_g17
07:01:30 234  ,chf_g18
07:01:30 235  ,chf_g19
07:01:30 236  ,chf_g20
07:01:30 237  ,chf_g21
07:01:30 238  ,chf_g22
07:01:30 239  ,chf_g23
07:01:30 240  ,chf_g24
07:01:30 241  ,chf_g25
07:01:30 242  ,chf_g26
07:01:30 243  ,chf_g27
07:01:30 244  ,chf_g28
07:01:30 245  ,chf_g29
07:01:30 246  ,chf_g30
07:01:30 247  ,chf_g31
07:01:30 248  ,chf_g32
07:01:30 249  ,chf_g33
07:01:30 250  ,chf_g34
07:01:30 251  ,chf_g35
07:01:30 252  ,chf_g36
07:01:30 253  ,chf_g37
07:01:30 254  ,chf_g38
07:01:30 255  ,chf_g39
07:01:30 256  ,chf_g40
07:01:30 257  ,chf_g41
07:01:30 258  FROM aud_ms6 m
07:01:30 259  WHERE m.ydate = '&1'||' '||'&2'
07:01:30 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'06:35:00'

View created.

Elapsed: 00:00:00.13
07:01:30 SQL> 
07:01:30 SQL> -- rpt
07:01:30 SQL> -- We should see just 1 row:
07:01:30 SQL> 
07:01:30 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
07:01:30 SQL> 
07:01:30 SQL> -- Build the model:
07:01:30 SQL> CREATE OR REPLACE VIEW bme AS
07:01:30   2  SELECT
07:01:30   3  'aud'||m.ydate prdate
07:01:30   4  ,gattn
07:01:30   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
07:01:30   6  ,eur_g00
07:01:30   7  ,eur_g01
07:01:30   8  ,eur_g02
07:01:30   9  ,eur_g03
07:01:30  10  ,eur_g04
07:01:30  11  ,eur_g05
07:01:30  12  ,eur_g06
07:01:30  13  ,eur_g07
07:01:30  14  ,eur_g08
07:01:30  15  ,eur_g09
07:01:30  16  ,eur_g10
07:01:30  17  ,eur_g11
07:01:30  18  ,eur_g12
07:01:30  19  ,eur_g13
07:01:30  20  ,eur_g14
07:01:30  21  ,eur_g15
07:01:30  22  ,eur_g16
07:01:30  23  ,eur_g17
07:01:30  24  ,eur_g18
07:01:30  25  ,eur_g19
07:01:30  26  ,eur_g20
07:01:30  27  ,eur_g21
07:01:30  28  ,eur_g22
07:01:30  29  ,eur_g23
07:01:30  30  ,eur_g24
07:01:30  31  ,eur_g25
07:01:30  32  ,eur_g26
07:01:30  33  ,eur_g27
07:01:30  34  ,eur_g28
07:01:30  35  ,eur_g29
07:01:30  36  ,eur_g30
07:01:30  37  ,eur_g31
07:01:30  38  ,eur_g32
07:01:30  39  ,eur_g33
07:01:30  40  ,eur_g34
07:01:30  41  ,eur_g35
07:01:30  42  ,eur_g36
07:01:30  43  ,eur_g37
07:01:30  44  ,eur_g38
07:01:30  45  ,eur_g39
07:01:30  46  ,eur_g40
07:01:30  47  ,eur_g41
07:01:30  48  ,aud_g00
07:01:30  49  ,aud_g01
07:01:30  50  ,aud_g02
07:01:30  51  ,aud_g03
07:01:30  52  ,aud_g04
07:01:30  53  ,aud_g05
07:01:30  54  ,aud_g06
07:01:30  55  ,aud_g07
07:01:30  56  ,aud_g08
07:01:30  57  ,aud_g09
07:01:30  58  ,aud_g10
07:01:30  59  ,aud_g11
07:01:30  60  ,aud_g12
07:01:30  61  ,aud_g13
07:01:30  62  ,aud_g14
07:01:30  63  ,aud_g15
07:01:30  64  ,aud_g16
07:01:30  65  ,aud_g17
07:01:30  66  ,aud_g18
07:01:30  67  ,aud_g19
07:01:30  68  ,aud_g20
07:01:30  69  ,aud_g21
07:01:30  70  ,aud_g22
07:01:30  71  ,aud_g23
07:01:30  72  ,aud_g24
07:01:30  73  ,aud_g25
07:01:30  74  ,aud_g26
07:01:30  75  ,aud_g27
07:01:30  76  ,aud_g28
07:01:30  77  ,aud_g29
07:01:30  78  ,aud_g30
07:01:30  79  ,aud_g31
07:01:30  80  ,aud_g32
07:01:30  81  ,aud_g33
07:01:30  82  ,aud_g34
07:01:30  83  ,aud_g35
07:01:30  84  ,aud_g36
07:01:30  85  ,aud_g37
07:01:30  86  ,aud_g38
07:01:30  87  ,aud_g39
07:01:30  88  ,aud_g40
07:01:30  89  ,aud_g41
07:01:30  90  ,gbp_g00
07:01:30  91  ,gbp_g01
07:01:30  92  ,gbp_g02
07:01:30  93  ,gbp_g03
07:01:30  94  ,gbp_g04
07:01:30  95  ,gbp_g05
07:01:30  96  ,gbp_g06
07:01:30  97  ,gbp_g07
07:01:30  98  ,gbp_g08
07:01:30  99  ,gbp_g09
07:01:30 100  ,gbp_g10
07:01:30 101  ,gbp_g11
07:01:30 102  ,gbp_g12
07:01:30 103  ,gbp_g13
07:01:30 104  ,gbp_g14
07:01:30 105  ,gbp_g15
07:01:30 106  ,gbp_g16
07:01:30 107  ,gbp_g17
07:01:30 108  ,gbp_g18
07:01:30 109  ,gbp_g19
07:01:30 110  ,gbp_g20
07:01:30 111  ,gbp_g21
07:01:30 112  ,gbp_g22
07:01:30 113  ,gbp_g23
07:01:30 114  ,gbp_g24
07:01:30 115  ,gbp_g25
07:01:30 116  ,gbp_g26
07:01:30 117  ,gbp_g27
07:01:30 118  ,gbp_g28
07:01:30 119  ,gbp_g29
07:01:30 120  ,gbp_g30
07:01:30 121  ,gbp_g31
07:01:30 122  ,gbp_g32
07:01:30 123  ,gbp_g33
07:01:30 124  ,gbp_g34
07:01:30 125  ,gbp_g35
07:01:30 126  ,gbp_g36
07:01:30 127  ,gbp_g37
07:01:30 128  ,gbp_g38
07:01:30 129  ,gbp_g39
07:01:30 130  ,gbp_g40
07:01:30 131  ,gbp_g41
07:01:30 132  ,jpy_g00
07:01:30 133  ,jpy_g01
07:01:30 134  ,jpy_g02
07:01:30 135  ,jpy_g03
07:01:30 136  ,jpy_g04
07:01:30 137  ,jpy_g05
07:01:30 138  ,jpy_g06
07:01:30 139  ,jpy_g07
07:01:30 140  ,jpy_g08
07:01:30 141  ,jpy_g09
07:01:30 142  ,jpy_g10
07:01:30 143  ,jpy_g11
07:01:30 144  ,jpy_g12
07:01:30 145  ,jpy_g13
07:01:30 146  ,jpy_g14
07:01:30 147  ,jpy_g15
07:01:30 148  ,jpy_g16
07:01:30 149  ,jpy_g17
07:01:30 150  ,jpy_g18
07:01:30 151  ,jpy_g19
07:01:30 152  ,jpy_g20
07:01:30 153  ,jpy_g21
07:01:30 154  ,jpy_g22
07:01:30 155  ,jpy_g23
07:01:30 156  ,jpy_g24
07:01:30 157  ,jpy_g25
07:01:30 158  ,jpy_g26
07:01:30 159  ,jpy_g27
07:01:30 160  ,jpy_g28
07:01:30 161  ,jpy_g29
07:01:30 162  ,jpy_g30
07:01:30 163  ,jpy_g31
07:01:30 164  ,jpy_g32
07:01:30 165  ,jpy_g33
07:01:30 166  ,jpy_g34
07:01:30 167  ,jpy_g35
07:01:30 168  ,jpy_g36
07:01:30 169  ,jpy_g37
07:01:30 170  ,jpy_g38
07:01:30 171  ,jpy_g39
07:01:30 172  ,jpy_g40
07:01:30 173  ,jpy_g41
07:01:30 174  ,cad_g00
07:01:30 175  ,cad_g01
07:01:30 176  ,cad_g02
07:01:30 177  ,cad_g03
07:01:30 178  ,cad_g04
07:01:30 179  ,cad_g05
07:01:30 180  ,cad_g06
07:01:30 181  ,cad_g07
07:01:30 182  ,cad_g08
07:01:30 183  ,cad_g09
07:01:30 184  ,cad_g10
07:01:30 185  ,cad_g11
07:01:30 186  ,cad_g12
07:01:30 187  ,cad_g13
07:01:30 188  ,cad_g14
07:01:30 189  ,cad_g15
07:01:30 190  ,cad_g16
07:01:30 191  ,cad_g17
07:01:30 192  ,cad_g18
07:01:30 193  ,cad_g19
07:01:30 194  ,cad_g20
07:01:30 195  ,cad_g21
07:01:30 196  ,cad_g22
07:01:30 197  ,cad_g23
07:01:30 198  ,cad_g24
07:01:30 199  ,cad_g25
07:01:30 200  ,cad_g26
07:01:30 201  ,cad_g27
07:01:30 202  ,cad_g28
07:01:30 203  ,cad_g29
07:01:30 204  ,cad_g30
07:01:30 205  ,cad_g31
07:01:30 206  ,cad_g32
07:01:30 207  ,cad_g33
07:01:30 208  ,cad_g34
07:01:30 209  ,cad_g35
07:01:30 210  ,cad_g36
07:01:30 211  ,cad_g37
07:01:30 212  ,cad_g38
07:01:30 213  ,cad_g39
07:01:30 214  ,cad_g40
07:01:30 215  ,cad_g41
07:01:30 216  ,chf_g00
07:01:30 217  ,chf_g01
07:01:30 218  ,chf_g02
07:01:30 219  ,chf_g03
07:01:30 220  ,chf_g04
07:01:30 221  ,chf_g05
07:01:30 222  ,chf_g06
07:01:30 223  ,chf_g07
07:01:30 224  ,chf_g08
07:01:30 225  ,chf_g09
07:01:30 226  ,chf_g10
07:01:30 227  ,chf_g11
07:01:30 228  ,chf_g12
07:01:30 229  ,chf_g13
07:01:30 230  ,chf_g14
07:01:30 231  ,chf_g15
07:01:30 232  ,chf_g16
07:01:30 233  ,chf_g17
07:01:30 234  ,chf_g18
07:01:30 235  ,chf_g19
07:01:30 236  ,chf_g20
07:01:30 237  ,chf_g21
07:01:30 238  ,chf_g22
07:01:30 239  ,chf_g23
07:01:30 240  ,chf_g24
07:01:30 241  ,chf_g25
07:01:30 242  ,chf_g26
07:01:30 243  ,chf_g27
07:01:30 244  ,chf_g28
07:01:30 245  ,chf_g29
07:01:30 246  ,chf_g30
07:01:30 247  ,chf_g31
07:01:30 248  ,chf_g32
07:01:30 249  ,chf_g33
07:01:30 250  ,chf_g34
07:01:30 251  ,chf_g35
07:01:30 252  ,chf_g36
07:01:30 253  ,chf_g37
07:01:30 254  ,chf_g38
07:01:30 255  ,chf_g39
07:01:30 256  ,chf_g40
07:01:30 257  ,chf_g41
07:01:30 258  FROM aud_ms6 m
07:01:30 259  WHERE gattn IN('nup','up')
07:01:30 260  AND 1+m.ydate < '&1'||' '||'&2'
07:01:30 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'06:35:00'

View created.

Elapsed: 00:00:00.13
07:01:30 SQL> 
07:01:30 SQL> -- rpt
07:01:30 SQL> 
07:01:30 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12808
up	     6334

Elapsed: 00:00:00.04
07:01:30 SQL> 
07:01:30 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 21:55:00

Elapsed: 00:00:00.04
07:01:30 SQL> 
07:01:30 SQL> -- Now build model from bme and score sme
07:01:30 SQL> @score1gattn.sql
07:01:30 SQL> -- score1gattn.sql
07:01:30 SQL> 
07:01:30 SQL> -- Does the 1st SVM score
07:01:30 SQL> 
07:01:30 SQL> -- Fill up svmc_apply_prep
07:01:30 SQL> @score_gattn.sql
07:01:30 SQL> --
07:01:30 SQL> -- score_gattn.sql
07:01:30 SQL> --
07:01:30 SQL> 
07:01:30 SQL> -- usage: score_gattn.sql
07:01:30 SQL> 
07:01:30 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
07:01:30 SQL> 
07:01:30 SQL> DEFINE target	= 'gattn'
07:01:30 SQL> DEFINE model_name = 'forex14'
07:01:30 SQL> DEFINE bldtable	= 'bme'
07:01:30 SQL> DEFINE scoretable = 'sme'
07:01:30 SQL> DEFINE case_id	= 'prdate'
07:01:30 SQL> 
07:01:30 SQL> -- Define a variable to help me exclude some columns from some data mining calls
07:01:30 SQL> DEFINE exclude1 = "'&target','&case_id'"
07:01:30 SQL> 
07:01:30 SQL> -- Builds an SVM model using pl/sql.
07:01:30 SQL> 
07:01:30 SQL> -----------------------------------------------------------------------
07:01:30 SQL> --			    BUILD THE MODEL
07:01:30 SQL> -----------------------------------------------------------------------
07:01:30 SQL> 
07:01:30 SQL> -- Cleanup old build data preparation objects for repeat runs
07:01:30 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
07:01:30 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
07:01:30 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
07:01:30 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
07:01:30 SQL> 
07:01:30 SQL> 
07:01:30 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
07:01:30 SQL> --
07:01:30 SQL> -- DROP	TABLE svmc_settings ;
07:01:30 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
07:01:30 SQL> -- DELETE svmc_settings;
07:01:30 SQL> 
07:01:30 SQL> -- The default classification algorithm is Naive Bayes. So override
07:01:30 SQL> -- this choice to SVM using a settings table.
07:01:30 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
07:01:30 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
07:01:30 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
07:01:30 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
07:01:30 SQL> -- models.
07:01:30 SQL> --
07:01:30 SQL> 
07:01:30 SQL> -- Do this once and then comment it out.
07:01:30 SQL> -- That makes script go faster.
07:01:30 SQL> -- BEGIN
07:01:30 SQL> -- -- Populate settings table
07:01:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
07:01:30 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
07:01:30 SQL> --
07:01:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
07:01:30 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
07:01:30 SQL> --
07:01:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
07:01:30 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
07:01:30 SQL> --   COMMIT;
07:01:30 SQL> -- END;
07:01:30 SQL> -- /
07:01:30 SQL> 
07:01:30 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
07:01:30 SQL> 
07:01:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
07:01:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:01:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
07:01:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
07:01:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:01:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:01:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
07:01:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:01:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:01:30 SQL> 
07:01:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
07:01:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:01:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:01:30 SQL> 
07:01:30 SQL> --------------------------------
07:01:30 SQL> -- PREPARE BUILD (TRAINING) DATA
07:01:30 SQL> --
07:01:30 SQL> 
07:01:30 SQL> -- 1. Missing Value treatment for all Predictors and
07:01:30 SQL> -- 2. Outlier Treatment and
07:01:30 SQL> -- 3. Normalization are performed below.
07:01:30 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
07:01:30 SQL> --    normalized here.
07:01:30 SQL> 
07:01:30 SQL> BEGIN
07:01:30   2  	-- Perform missing value treatment for all predictors
07:01:30   3  	-- create miss tables
07:01:30   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
07:01:30   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
07:01:30   6  
07:01:30   7  	-- populate miss tables
07:01:30   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
07:01:30   9  	  miss_table_name => 'svmc_miss_num',
07:01:30  10  	  data_table_name => '&bldtable',
07:01:30  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:01:30  12  
07:01:30  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
07:01:30  14  	  miss_table_name => 'svmc_miss_cat',
07:01:30  15  	  data_table_name => '&bldtable',
07:01:30  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:01:30  17  
07:01:30  18  	-- xform input data to replace missing values
07:01:30  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
07:01:30  20  	  miss_table_name => 'svmc_miss_num',
07:01:30  21  	  data_table_name => '&bldtable',
07:01:30  22  	  xform_view_name => 'xformed_build_miss_num');
07:01:30  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
07:01:30  24  	  miss_table_name => 'svmc_miss_cat',
07:01:30  25  	  data_table_name => '&bldtable',
07:01:30  26  	  xform_view_name => 'xformed_build_miss_cat');
07:01:30  27  
07:01:30  28  	-- Perform outlier treatment.
07:01:30  29  	-- create clip table
07:01:30  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
07:01:30  31  
07:01:30  32  	-- populate clip table
07:01:30  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
07:01:30  34  	  clip_table_name => 'svmc_clip',
07:01:30  35  	  data_table_name => '&bldtable',
07:01:30  36  	  tail_frac	  => 0.025,
07:01:30  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:01:30  38  
07:01:30  39  	-- xform input data to winsorized data
07:01:30  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
07:01:30  41  	  clip_table_name => 'svmc_clip',
07:01:30  42  	  data_table_name => '&bldtable',
07:01:30  43  	  xform_view_name => 'svmc_winsor');
07:01:30  44  
07:01:30  45  	-- create normalization table
07:01:30  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
07:01:30  47  
07:01:30  48  	-- populate normalization table based on winsorized data
07:01:30  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
07:01:30  50  	  norm_table_name => 'svmc_norm',
07:01:30  51  	  data_table_name => 'svmc_winsor',
07:01:30  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:01:30  53  
07:01:30  54  	-- normalize the original data
07:01:30  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
07:01:30  56  	  norm_table_name => 'svmc_norm',
07:01:30  57  	  data_table_name => '&bldtable',
07:01:30  58  	  xform_view_name => 'svmc_build_prep');
07:01:30  59  END;
07:01:30  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.68
07:01:49 SQL> 
07:01:49 SQL> ---------------------
07:01:49 SQL> -- CREATE A NEW MODEL
07:01:49 SQL> --
07:01:49 SQL> -- Cleanup old model with the same name for repeat runs
07:01:49 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
07:01:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:01:49   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
07:01:50 SQL> 
07:01:50 SQL> -- Build a new SVM Model
07:01:50 SQL> BEGIN
07:01:50   2  	DBMS_DATA_MINING.CREATE_MODEL(
07:01:50   3  	  model_name	      => '&model_name',
07:01:50   4  	  mining_function     => dbms_data_mining.classification,
07:01:50   5  	  data_table_name     => 'svmc_build_prep',
07:01:50   6  	  case_id_column_name => '&case_id',
07:01:50   7  	  target_column_name  => '&target',
07:01:50   8  	  settings_table_name => 'svmc_settings');
07:01:50   9  END;
07:01:50  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.18
07:02:17 SQL> 
07:02:17 SQL> -----------------------------------------------------------------------
07:02:17 SQL> --			       APPLY/score THE MODEL
07:02:17 SQL> -----------------------------------------------------------------------
07:02:17 SQL> 
07:02:17 SQL> -- Cleanup old scoring data preparation objects for repeat runs
07:02:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
07:02:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:02:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
07:02:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
07:02:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:02:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:02:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
07:02:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:02:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:02:17 SQL> -----------------------
07:02:17 SQL> -- PREPARE SCORING DATA
07:02:17 SQL> --
07:02:17 SQL> -- If the data for model creation has been prepared, then the data
07:02:17 SQL> -- to be scored using the model must be prepared in the same manner
07:02:17 SQL> -- in order to obtain meaningful results.
07:02:17 SQL> --
07:02:17 SQL> -- 1. Missing Value treatment for all Predictors and
07:02:17 SQL> -- 2. Normalization
07:02:17 SQL> -- No outlier treatment will be performed during test and apply. The
07:02:17 SQL> -- normalization step is sufficient, since the normalization parameters
07:02:17 SQL> -- already capture the effects of outlier treatment done with build data.
07:02:17 SQL> --
07:02:17 SQL> BEGIN
07:02:17   2  	-- Xform Test data to replace missing values
07:02:17   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
07:02:17   4  	  miss_table_name => 'svmc_miss_num',
07:02:17   5  	  data_table_name => '&scoretable',
07:02:17   6  	  xform_view_name => 'xformed_apply_miss_num');
07:02:17   7  
07:02:17   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
07:02:17   9  	  miss_table_name => 'svmc_miss_cat',
07:02:17  10  	  data_table_name => '&scoretable',
07:02:17  11  	  xform_view_name => 'xformed_apply_miss_cat');
07:02:17  12  
07:02:17  13  	-- Normalize the data to be scored
07:02:17  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
07:02:17  15  	  norm_table_name => 'svmc_norm',
07:02:17  16  	  data_table_name => '&scoretable',
07:02:17  17  	  xform_view_name => 'svmc_apply_prep');
07:02:17  18  END;
07:02:17  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
07:02:19 SQL> 
07:02:19 SQL> -- Use same model_name used in score_gattn.sql
07:02:19 SQL> DEFINE model_name = 'forex14'
07:02:19 SQL> 
07:02:19 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
07:02:19 SQL> 
07:02:19 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
07:02:19   2  SELECT
07:02:19   3  prdate
07:02:19   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
07:02:19   5  ,sysdate
07:02:19   6  ,SUBSTR(prdate,1,3)pair
07:02:19   7  ,SUBSTR(prdate,4,19)ydate
07:02:19   8  FROM svmc_apply_prep
07:02:19   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
07:02:19 SQL> @aud_score1day_gattn.sql	2011-01-03 06:40:00
07:02:19 SQL> --
07:02:19 SQL> -- aud_score1day_gattn.sql
07:02:19 SQL> --
07:02:19 SQL> 
07:02:19 SQL> CREATE OR REPLACE VIEW sme AS
07:02:19   2  SELECT
07:02:19   3  'aud'||m.ydate prdate
07:02:19   4  ,NULL gattn
07:02:19   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
07:02:19   6  ,eur_g00
07:02:19   7  ,eur_g01
07:02:19   8  ,eur_g02
07:02:19   9  ,eur_g03
07:02:19  10  ,eur_g04
07:02:19  11  ,eur_g05
07:02:19  12  ,eur_g06
07:02:19  13  ,eur_g07
07:02:19  14  ,eur_g08
07:02:19  15  ,eur_g09
07:02:19  16  ,eur_g10
07:02:19  17  ,eur_g11
07:02:19  18  ,eur_g12
07:02:19  19  ,eur_g13
07:02:19  20  ,eur_g14
07:02:19  21  ,eur_g15
07:02:19  22  ,eur_g16
07:02:19  23  ,eur_g17
07:02:19  24  ,eur_g18
07:02:19  25  ,eur_g19
07:02:19  26  ,eur_g20
07:02:19  27  ,eur_g21
07:02:19  28  ,eur_g22
07:02:19  29  ,eur_g23
07:02:19  30  ,eur_g24
07:02:19  31  ,eur_g25
07:02:19  32  ,eur_g26
07:02:19  33  ,eur_g27
07:02:19  34  ,eur_g28
07:02:19  35  ,eur_g29
07:02:19  36  ,eur_g30
07:02:19  37  ,eur_g31
07:02:19  38  ,eur_g32
07:02:19  39  ,eur_g33
07:02:19  40  ,eur_g34
07:02:19  41  ,eur_g35
07:02:19  42  ,eur_g36
07:02:19  43  ,eur_g37
07:02:19  44  ,eur_g38
07:02:19  45  ,eur_g39
07:02:19  46  ,eur_g40
07:02:19  47  ,eur_g41
07:02:19  48  ,aud_g00
07:02:19  49  ,aud_g01
07:02:19  50  ,aud_g02
07:02:19  51  ,aud_g03
07:02:19  52  ,aud_g04
07:02:19  53  ,aud_g05
07:02:19  54  ,aud_g06
07:02:19  55  ,aud_g07
07:02:19  56  ,aud_g08
07:02:19  57  ,aud_g09
07:02:19  58  ,aud_g10
07:02:19  59  ,aud_g11
07:02:19  60  ,aud_g12
07:02:19  61  ,aud_g13
07:02:19  62  ,aud_g14
07:02:19  63  ,aud_g15
07:02:19  64  ,aud_g16
07:02:19  65  ,aud_g17
07:02:19  66  ,aud_g18
07:02:19  67  ,aud_g19
07:02:19  68  ,aud_g20
07:02:19  69  ,aud_g21
07:02:19  70  ,aud_g22
07:02:19  71  ,aud_g23
07:02:19  72  ,aud_g24
07:02:19  73  ,aud_g25
07:02:19  74  ,aud_g26
07:02:19  75  ,aud_g27
07:02:19  76  ,aud_g28
07:02:19  77  ,aud_g29
07:02:19  78  ,aud_g30
07:02:19  79  ,aud_g31
07:02:19  80  ,aud_g32
07:02:19  81  ,aud_g33
07:02:19  82  ,aud_g34
07:02:19  83  ,aud_g35
07:02:19  84  ,aud_g36
07:02:19  85  ,aud_g37
07:02:19  86  ,aud_g38
07:02:19  87  ,aud_g39
07:02:19  88  ,aud_g40
07:02:19  89  ,aud_g41
07:02:19  90  ,gbp_g00
07:02:19  91  ,gbp_g01
07:02:19  92  ,gbp_g02
07:02:19  93  ,gbp_g03
07:02:19  94  ,gbp_g04
07:02:19  95  ,gbp_g05
07:02:19  96  ,gbp_g06
07:02:19  97  ,gbp_g07
07:02:19  98  ,gbp_g08
07:02:19  99  ,gbp_g09
07:02:19 100  ,gbp_g10
07:02:19 101  ,gbp_g11
07:02:19 102  ,gbp_g12
07:02:19 103  ,gbp_g13
07:02:19 104  ,gbp_g14
07:02:19 105  ,gbp_g15
07:02:19 106  ,gbp_g16
07:02:19 107  ,gbp_g17
07:02:19 108  ,gbp_g18
07:02:19 109  ,gbp_g19
07:02:19 110  ,gbp_g20
07:02:19 111  ,gbp_g21
07:02:19 112  ,gbp_g22
07:02:19 113  ,gbp_g23
07:02:19 114  ,gbp_g24
07:02:19 115  ,gbp_g25
07:02:19 116  ,gbp_g26
07:02:19 117  ,gbp_g27
07:02:19 118  ,gbp_g28
07:02:19 119  ,gbp_g29
07:02:19 120  ,gbp_g30
07:02:19 121  ,gbp_g31
07:02:19 122  ,gbp_g32
07:02:19 123  ,gbp_g33
07:02:19 124  ,gbp_g34
07:02:19 125  ,gbp_g35
07:02:19 126  ,gbp_g36
07:02:19 127  ,gbp_g37
07:02:19 128  ,gbp_g38
07:02:19 129  ,gbp_g39
07:02:19 130  ,gbp_g40
07:02:19 131  ,gbp_g41
07:02:19 132  ,jpy_g00
07:02:19 133  ,jpy_g01
07:02:19 134  ,jpy_g02
07:02:19 135  ,jpy_g03
07:02:19 136  ,jpy_g04
07:02:19 137  ,jpy_g05
07:02:19 138  ,jpy_g06
07:02:19 139  ,jpy_g07
07:02:19 140  ,jpy_g08
07:02:19 141  ,jpy_g09
07:02:19 142  ,jpy_g10
07:02:19 143  ,jpy_g11
07:02:19 144  ,jpy_g12
07:02:19 145  ,jpy_g13
07:02:19 146  ,jpy_g14
07:02:19 147  ,jpy_g15
07:02:19 148  ,jpy_g16
07:02:19 149  ,jpy_g17
07:02:19 150  ,jpy_g18
07:02:19 151  ,jpy_g19
07:02:19 152  ,jpy_g20
07:02:19 153  ,jpy_g21
07:02:19 154  ,jpy_g22
07:02:19 155  ,jpy_g23
07:02:19 156  ,jpy_g24
07:02:19 157  ,jpy_g25
07:02:19 158  ,jpy_g26
07:02:19 159  ,jpy_g27
07:02:19 160  ,jpy_g28
07:02:19 161  ,jpy_g29
07:02:19 162  ,jpy_g30
07:02:19 163  ,jpy_g31
07:02:19 164  ,jpy_g32
07:02:19 165  ,jpy_g33
07:02:19 166  ,jpy_g34
07:02:19 167  ,jpy_g35
07:02:19 168  ,jpy_g36
07:02:19 169  ,jpy_g37
07:02:19 170  ,jpy_g38
07:02:19 171  ,jpy_g39
07:02:19 172  ,jpy_g40
07:02:19 173  ,jpy_g41
07:02:19 174  ,cad_g00
07:02:19 175  ,cad_g01
07:02:19 176  ,cad_g02
07:02:19 177  ,cad_g03
07:02:19 178  ,cad_g04
07:02:19 179  ,cad_g05
07:02:19 180  ,cad_g06
07:02:19 181  ,cad_g07
07:02:19 182  ,cad_g08
07:02:19 183  ,cad_g09
07:02:19 184  ,cad_g10
07:02:19 185  ,cad_g11
07:02:19 186  ,cad_g12
07:02:19 187  ,cad_g13
07:02:19 188  ,cad_g14
07:02:19 189  ,cad_g15
07:02:19 190  ,cad_g16
07:02:19 191  ,cad_g17
07:02:19 192  ,cad_g18
07:02:19 193  ,cad_g19
07:02:19 194  ,cad_g20
07:02:19 195  ,cad_g21
07:02:19 196  ,cad_g22
07:02:19 197  ,cad_g23
07:02:19 198  ,cad_g24
07:02:19 199  ,cad_g25
07:02:19 200  ,cad_g26
07:02:19 201  ,cad_g27
07:02:19 202  ,cad_g28
07:02:19 203  ,cad_g29
07:02:19 204  ,cad_g30
07:02:19 205  ,cad_g31
07:02:19 206  ,cad_g32
07:02:19 207  ,cad_g33
07:02:19 208  ,cad_g34
07:02:19 209  ,cad_g35
07:02:19 210  ,cad_g36
07:02:19 211  ,cad_g37
07:02:19 212  ,cad_g38
07:02:19 213  ,cad_g39
07:02:19 214  ,cad_g40
07:02:19 215  ,cad_g41
07:02:19 216  ,chf_g00
07:02:19 217  ,chf_g01
07:02:19 218  ,chf_g02
07:02:19 219  ,chf_g03
07:02:19 220  ,chf_g04
07:02:19 221  ,chf_g05
07:02:19 222  ,chf_g06
07:02:19 223  ,chf_g07
07:02:19 224  ,chf_g08
07:02:19 225  ,chf_g09
07:02:19 226  ,chf_g10
07:02:19 227  ,chf_g11
07:02:19 228  ,chf_g12
07:02:19 229  ,chf_g13
07:02:19 230  ,chf_g14
07:02:19 231  ,chf_g15
07:02:19 232  ,chf_g16
07:02:19 233  ,chf_g17
07:02:19 234  ,chf_g18
07:02:19 235  ,chf_g19
07:02:19 236  ,chf_g20
07:02:19 237  ,chf_g21
07:02:19 238  ,chf_g22
07:02:19 239  ,chf_g23
07:02:19 240  ,chf_g24
07:02:19 241  ,chf_g25
07:02:19 242  ,chf_g26
07:02:19 243  ,chf_g27
07:02:19 244  ,chf_g28
07:02:19 245  ,chf_g29
07:02:19 246  ,chf_g30
07:02:19 247  ,chf_g31
07:02:19 248  ,chf_g32
07:02:19 249  ,chf_g33
07:02:19 250  ,chf_g34
07:02:19 251  ,chf_g35
07:02:19 252  ,chf_g36
07:02:19 253  ,chf_g37
07:02:19 254  ,chf_g38
07:02:19 255  ,chf_g39
07:02:19 256  ,chf_g40
07:02:19 257  ,chf_g41
07:02:19 258  FROM aud_ms6 m
07:02:19 259  WHERE m.ydate = '&1'||' '||'&2'
07:02:19 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'06:40:00'

View created.

Elapsed: 00:00:00.13
07:02:19 SQL> 
07:02:19 SQL> -- rpt
07:02:19 SQL> -- We should see just 1 row:
07:02:19 SQL> 
07:02:19 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
07:02:19 SQL> 
07:02:19 SQL> -- Build the model:
07:02:19 SQL> CREATE OR REPLACE VIEW bme AS
07:02:19   2  SELECT
07:02:19   3  'aud'||m.ydate prdate
07:02:19   4  ,gattn
07:02:19   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
07:02:19   6  ,eur_g00
07:02:19   7  ,eur_g01
07:02:19   8  ,eur_g02
07:02:19   9  ,eur_g03
07:02:19  10  ,eur_g04
07:02:19  11  ,eur_g05
07:02:19  12  ,eur_g06
07:02:19  13  ,eur_g07
07:02:19  14  ,eur_g08
07:02:19  15  ,eur_g09
07:02:19  16  ,eur_g10
07:02:19  17  ,eur_g11
07:02:19  18  ,eur_g12
07:02:19  19  ,eur_g13
07:02:19  20  ,eur_g14
07:02:19  21  ,eur_g15
07:02:19  22  ,eur_g16
07:02:19  23  ,eur_g17
07:02:19  24  ,eur_g18
07:02:19  25  ,eur_g19
07:02:19  26  ,eur_g20
07:02:19  27  ,eur_g21
07:02:19  28  ,eur_g22
07:02:19  29  ,eur_g23
07:02:19  30  ,eur_g24
07:02:19  31  ,eur_g25
07:02:19  32  ,eur_g26
07:02:19  33  ,eur_g27
07:02:19  34  ,eur_g28
07:02:19  35  ,eur_g29
07:02:19  36  ,eur_g30
07:02:19  37  ,eur_g31
07:02:19  38  ,eur_g32
07:02:19  39  ,eur_g33
07:02:19  40  ,eur_g34
07:02:19  41  ,eur_g35
07:02:19  42  ,eur_g36
07:02:19  43  ,eur_g37
07:02:19  44  ,eur_g38
07:02:19  45  ,eur_g39
07:02:19  46  ,eur_g40
07:02:19  47  ,eur_g41
07:02:19  48  ,aud_g00
07:02:19  49  ,aud_g01
07:02:19  50  ,aud_g02
07:02:19  51  ,aud_g03
07:02:19  52  ,aud_g04
07:02:19  53  ,aud_g05
07:02:19  54  ,aud_g06
07:02:19  55  ,aud_g07
07:02:19  56  ,aud_g08
07:02:19  57  ,aud_g09
07:02:19  58  ,aud_g10
07:02:19  59  ,aud_g11
07:02:19  60  ,aud_g12
07:02:19  61  ,aud_g13
07:02:19  62  ,aud_g14
07:02:19  63  ,aud_g15
07:02:19  64  ,aud_g16
07:02:19  65  ,aud_g17
07:02:19  66  ,aud_g18
07:02:19  67  ,aud_g19
07:02:19  68  ,aud_g20
07:02:19  69  ,aud_g21
07:02:19  70  ,aud_g22
07:02:19  71  ,aud_g23
07:02:19  72  ,aud_g24
07:02:19  73  ,aud_g25
07:02:19  74  ,aud_g26
07:02:19  75  ,aud_g27
07:02:19  76  ,aud_g28
07:02:19  77  ,aud_g29
07:02:19  78  ,aud_g30
07:02:19  79  ,aud_g31
07:02:19  80  ,aud_g32
07:02:19  81  ,aud_g33
07:02:19  82  ,aud_g34
07:02:19  83  ,aud_g35
07:02:19  84  ,aud_g36
07:02:19  85  ,aud_g37
07:02:19  86  ,aud_g38
07:02:19  87  ,aud_g39
07:02:19  88  ,aud_g40
07:02:19  89  ,aud_g41
07:02:19  90  ,gbp_g00
07:02:19  91  ,gbp_g01
07:02:19  92  ,gbp_g02
07:02:19  93  ,gbp_g03
07:02:19  94  ,gbp_g04
07:02:19  95  ,gbp_g05
07:02:19  96  ,gbp_g06
07:02:19  97  ,gbp_g07
07:02:19  98  ,gbp_g08
07:02:19  99  ,gbp_g09
07:02:19 100  ,gbp_g10
07:02:19 101  ,gbp_g11
07:02:19 102  ,gbp_g12
07:02:19 103  ,gbp_g13
07:02:19 104  ,gbp_g14
07:02:19 105  ,gbp_g15
07:02:19 106  ,gbp_g16
07:02:19 107  ,gbp_g17
07:02:19 108  ,gbp_g18
07:02:19 109  ,gbp_g19
07:02:19 110  ,gbp_g20
07:02:19 111  ,gbp_g21
07:02:19 112  ,gbp_g22
07:02:19 113  ,gbp_g23
07:02:19 114  ,gbp_g24
07:02:19 115  ,gbp_g25
07:02:19 116  ,gbp_g26
07:02:19 117  ,gbp_g27
07:02:19 118  ,gbp_g28
07:02:19 119  ,gbp_g29
07:02:19 120  ,gbp_g30
07:02:19 121  ,gbp_g31
07:02:19 122  ,gbp_g32
07:02:19 123  ,gbp_g33
07:02:19 124  ,gbp_g34
07:02:19 125  ,gbp_g35
07:02:19 126  ,gbp_g36
07:02:19 127  ,gbp_g37
07:02:19 128  ,gbp_g38
07:02:19 129  ,gbp_g39
07:02:19 130  ,gbp_g40
07:02:19 131  ,gbp_g41
07:02:19 132  ,jpy_g00
07:02:19 133  ,jpy_g01
07:02:19 134  ,jpy_g02
07:02:19 135  ,jpy_g03
07:02:19 136  ,jpy_g04
07:02:19 137  ,jpy_g05
07:02:19 138  ,jpy_g06
07:02:19 139  ,jpy_g07
07:02:19 140  ,jpy_g08
07:02:19 141  ,jpy_g09
07:02:19 142  ,jpy_g10
07:02:19 143  ,jpy_g11
07:02:19 144  ,jpy_g12
07:02:19 145  ,jpy_g13
07:02:19 146  ,jpy_g14
07:02:19 147  ,jpy_g15
07:02:19 148  ,jpy_g16
07:02:19 149  ,jpy_g17
07:02:19 150  ,jpy_g18
07:02:19 151  ,jpy_g19
07:02:19 152  ,jpy_g20
07:02:19 153  ,jpy_g21
07:02:19 154  ,jpy_g22
07:02:19 155  ,jpy_g23
07:02:19 156  ,jpy_g24
07:02:19 157  ,jpy_g25
07:02:19 158  ,jpy_g26
07:02:19 159  ,jpy_g27
07:02:19 160  ,jpy_g28
07:02:19 161  ,jpy_g29
07:02:19 162  ,jpy_g30
07:02:19 163  ,jpy_g31
07:02:19 164  ,jpy_g32
07:02:19 165  ,jpy_g33
07:02:19 166  ,jpy_g34
07:02:19 167  ,jpy_g35
07:02:19 168  ,jpy_g36
07:02:19 169  ,jpy_g37
07:02:19 170  ,jpy_g38
07:02:19 171  ,jpy_g39
07:02:19 172  ,jpy_g40
07:02:19 173  ,jpy_g41
07:02:19 174  ,cad_g00
07:02:19 175  ,cad_g01
07:02:19 176  ,cad_g02
07:02:19 177  ,cad_g03
07:02:19 178  ,cad_g04
07:02:19 179  ,cad_g05
07:02:19 180  ,cad_g06
07:02:19 181  ,cad_g07
07:02:19 182  ,cad_g08
07:02:19 183  ,cad_g09
07:02:19 184  ,cad_g10
07:02:19 185  ,cad_g11
07:02:19 186  ,cad_g12
07:02:19 187  ,cad_g13
07:02:19 188  ,cad_g14
07:02:19 189  ,cad_g15
07:02:19 190  ,cad_g16
07:02:19 191  ,cad_g17
07:02:19 192  ,cad_g18
07:02:19 193  ,cad_g19
07:02:19 194  ,cad_g20
07:02:19 195  ,cad_g21
07:02:19 196  ,cad_g22
07:02:19 197  ,cad_g23
07:02:19 198  ,cad_g24
07:02:19 199  ,cad_g25
07:02:19 200  ,cad_g26
07:02:19 201  ,cad_g27
07:02:19 202  ,cad_g28
07:02:19 203  ,cad_g29
07:02:19 204  ,cad_g30
07:02:19 205  ,cad_g31
07:02:19 206  ,cad_g32
07:02:19 207  ,cad_g33
07:02:19 208  ,cad_g34
07:02:19 209  ,cad_g35
07:02:19 210  ,cad_g36
07:02:19 211  ,cad_g37
07:02:19 212  ,cad_g38
07:02:19 213  ,cad_g39
07:02:19 214  ,cad_g40
07:02:19 215  ,cad_g41
07:02:19 216  ,chf_g00
07:02:19 217  ,chf_g01
07:02:19 218  ,chf_g02
07:02:19 219  ,chf_g03
07:02:19 220  ,chf_g04
07:02:19 221  ,chf_g05
07:02:19 222  ,chf_g06
07:02:19 223  ,chf_g07
07:02:19 224  ,chf_g08
07:02:19 225  ,chf_g09
07:02:19 226  ,chf_g10
07:02:19 227  ,chf_g11
07:02:19 228  ,chf_g12
07:02:19 229  ,chf_g13
07:02:19 230  ,chf_g14
07:02:19 231  ,chf_g15
07:02:19 232  ,chf_g16
07:02:19 233  ,chf_g17
07:02:19 234  ,chf_g18
07:02:19 235  ,chf_g19
07:02:19 236  ,chf_g20
07:02:19 237  ,chf_g21
07:02:19 238  ,chf_g22
07:02:19 239  ,chf_g23
07:02:19 240  ,chf_g24
07:02:19 241  ,chf_g25
07:02:19 242  ,chf_g26
07:02:19 243  ,chf_g27
07:02:19 244  ,chf_g28
07:02:19 245  ,chf_g29
07:02:19 246  ,chf_g30
07:02:19 247  ,chf_g31
07:02:19 248  ,chf_g32
07:02:19 249  ,chf_g33
07:02:19 250  ,chf_g34
07:02:19 251  ,chf_g35
07:02:19 252  ,chf_g36
07:02:19 253  ,chf_g37
07:02:19 254  ,chf_g38
07:02:19 255  ,chf_g39
07:02:19 256  ,chf_g40
07:02:19 257  ,chf_g41
07:02:19 258  FROM aud_ms6 m
07:02:19 259  WHERE gattn IN('nup','up')
07:02:19 260  AND 1+m.ydate < '&1'||' '||'&2'
07:02:19 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'06:40:00'

View created.

Elapsed: 00:00:00.13
07:02:19 SQL> 
07:02:19 SQL> -- rpt
07:02:19 SQL> 
07:02:19 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12808
up	     6334

Elapsed: 00:00:00.04
07:02:19 SQL> 
07:02:19 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 21:55:00

Elapsed: 00:00:00.04
07:02:19 SQL> 
07:02:19 SQL> -- Now build model from bme and score sme
07:02:19 SQL> @score1gattn.sql
07:02:19 SQL> -- score1gattn.sql
07:02:19 SQL> 
07:02:19 SQL> -- Does the 1st SVM score
07:02:19 SQL> 
07:02:19 SQL> -- Fill up svmc_apply_prep
07:02:19 SQL> @score_gattn.sql
07:02:19 SQL> --
07:02:19 SQL> -- score_gattn.sql
07:02:19 SQL> --
07:02:19 SQL> 
07:02:19 SQL> -- usage: score_gattn.sql
07:02:19 SQL> 
07:02:19 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
07:02:19 SQL> 
07:02:19 SQL> DEFINE target	= 'gattn'
07:02:19 SQL> DEFINE model_name = 'forex14'
07:02:19 SQL> DEFINE bldtable	= 'bme'
07:02:19 SQL> DEFINE scoretable = 'sme'
07:02:19 SQL> DEFINE case_id	= 'prdate'
07:02:19 SQL> 
07:02:19 SQL> -- Define a variable to help me exclude some columns from some data mining calls
07:02:19 SQL> DEFINE exclude1 = "'&target','&case_id'"
07:02:19 SQL> 
07:02:19 SQL> -- Builds an SVM model using pl/sql.
07:02:19 SQL> 
07:02:19 SQL> -----------------------------------------------------------------------
07:02:19 SQL> --			    BUILD THE MODEL
07:02:19 SQL> -----------------------------------------------------------------------
07:02:19 SQL> 
07:02:19 SQL> -- Cleanup old build data preparation objects for repeat runs
07:02:19 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
07:02:19 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
07:02:19 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
07:02:19 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
07:02:19 SQL> 
07:02:19 SQL> 
07:02:19 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
07:02:19 SQL> --
07:02:19 SQL> -- DROP	TABLE svmc_settings ;
07:02:19 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
07:02:19 SQL> -- DELETE svmc_settings;
07:02:19 SQL> 
07:02:19 SQL> -- The default classification algorithm is Naive Bayes. So override
07:02:19 SQL> -- this choice to SVM using a settings table.
07:02:19 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
07:02:19 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
07:02:19 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
07:02:19 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
07:02:19 SQL> -- models.
07:02:19 SQL> --
07:02:19 SQL> 
07:02:19 SQL> -- Do this once and then comment it out.
07:02:19 SQL> -- That makes script go faster.
07:02:19 SQL> -- BEGIN
07:02:19 SQL> -- -- Populate settings table
07:02:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
07:02:19 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
07:02:19 SQL> --
07:02:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
07:02:19 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
07:02:19 SQL> --
07:02:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
07:02:19 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
07:02:19 SQL> --   COMMIT;
07:02:19 SQL> -- END;
07:02:19 SQL> -- /
07:02:19 SQL> 
07:02:19 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
07:02:19 SQL> 
07:02:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
07:02:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:02:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:02:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
07:02:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:02:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
07:02:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
07:02:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:02:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:02:19 SQL> 
07:02:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
07:02:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:02:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:02:19 SQL> 
07:02:19 SQL> --------------------------------
07:02:19 SQL> -- PREPARE BUILD (TRAINING) DATA
07:02:19 SQL> --
07:02:19 SQL> 
07:02:19 SQL> -- 1. Missing Value treatment for all Predictors and
07:02:19 SQL> -- 2. Outlier Treatment and
07:02:19 SQL> -- 3. Normalization are performed below.
07:02:19 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
07:02:19 SQL> --    normalized here.
07:02:19 SQL> 
07:02:19 SQL> BEGIN
07:02:19   2  	-- Perform missing value treatment for all predictors
07:02:19   3  	-- create miss tables
07:02:19   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
07:02:19   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
07:02:19   6  
07:02:19   7  	-- populate miss tables
07:02:19   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
07:02:19   9  	  miss_table_name => 'svmc_miss_num',
07:02:19  10  	  data_table_name => '&bldtable',
07:02:19  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:02:19  12  
07:02:19  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
07:02:19  14  	  miss_table_name => 'svmc_miss_cat',
07:02:19  15  	  data_table_name => '&bldtable',
07:02:19  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:02:19  17  
07:02:19  18  	-- xform input data to replace missing values
07:02:19  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
07:02:19  20  	  miss_table_name => 'svmc_miss_num',
07:02:19  21  	  data_table_name => '&bldtable',
07:02:19  22  	  xform_view_name => 'xformed_build_miss_num');
07:02:19  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
07:02:19  24  	  miss_table_name => 'svmc_miss_cat',
07:02:19  25  	  data_table_name => '&bldtable',
07:02:19  26  	  xform_view_name => 'xformed_build_miss_cat');
07:02:19  27  
07:02:19  28  	-- Perform outlier treatment.
07:02:19  29  	-- create clip table
07:02:19  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
07:02:19  31  
07:02:19  32  	-- populate clip table
07:02:19  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
07:02:19  34  	  clip_table_name => 'svmc_clip',
07:02:19  35  	  data_table_name => '&bldtable',
07:02:19  36  	  tail_frac	  => 0.025,
07:02:19  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:02:19  38  
07:02:19  39  	-- xform input data to winsorized data
07:02:19  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
07:02:19  41  	  clip_table_name => 'svmc_clip',
07:02:19  42  	  data_table_name => '&bldtable',
07:02:19  43  	  xform_view_name => 'svmc_winsor');
07:02:19  44  
07:02:19  45  	-- create normalization table
07:02:19  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
07:02:19  47  
07:02:19  48  	-- populate normalization table based on winsorized data
07:02:19  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
07:02:19  50  	  norm_table_name => 'svmc_norm',
07:02:19  51  	  data_table_name => 'svmc_winsor',
07:02:19  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:02:19  53  
07:02:19  54  	-- normalize the original data
07:02:19  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
07:02:19  56  	  norm_table_name => 'svmc_norm',
07:02:19  57  	  data_table_name => '&bldtable',
07:02:19  58  	  xform_view_name => 'svmc_build_prep');
07:02:19  59  END;
07:02:19  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.17
07:02:38 SQL> 
07:02:38 SQL> ---------------------
07:02:38 SQL> -- CREATE A NEW MODEL
07:02:38 SQL> --
07:02:38 SQL> -- Cleanup old model with the same name for repeat runs
07:02:38 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
07:02:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:02:38   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.10
07:02:39 SQL> 
07:02:39 SQL> -- Build a new SVM Model
07:02:39 SQL> BEGIN
07:02:39   2  	DBMS_DATA_MINING.CREATE_MODEL(
07:02:39   3  	  model_name	      => '&model_name',
07:02:39   4  	  mining_function     => dbms_data_mining.classification,
07:02:39   5  	  data_table_name     => 'svmc_build_prep',
07:02:39   6  	  case_id_column_name => '&case_id',
07:02:39   7  	  target_column_name  => '&target',
07:02:39   8  	  settings_table_name => 'svmc_settings');
07:02:39   9  END;
07:02:39  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.82
07:03:08 SQL> 
07:03:08 SQL> -----------------------------------------------------------------------
07:03:08 SQL> --			       APPLY/score THE MODEL
07:03:08 SQL> -----------------------------------------------------------------------
07:03:08 SQL> 
07:03:08 SQL> -- Cleanup old scoring data preparation objects for repeat runs
07:03:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
07:03:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:03:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
07:03:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
07:03:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:03:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:03:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
07:03:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:03:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
07:03:08 SQL> -----------------------
07:03:08 SQL> -- PREPARE SCORING DATA
07:03:08 SQL> --
07:03:08 SQL> -- If the data for model creation has been prepared, then the data
07:03:08 SQL> -- to be scored using the model must be prepared in the same manner
07:03:08 SQL> -- in order to obtain meaningful results.
07:03:08 SQL> --
07:03:08 SQL> -- 1. Missing Value treatment for all Predictors and
07:03:08 SQL> -- 2. Normalization
07:03:08 SQL> -- No outlier treatment will be performed during test and apply. The
07:03:08 SQL> -- normalization step is sufficient, since the normalization parameters
07:03:08 SQL> -- already capture the effects of outlier treatment done with build data.
07:03:08 SQL> --
07:03:08 SQL> BEGIN
07:03:08   2  	-- Xform Test data to replace missing values
07:03:08   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
07:03:08   4  	  miss_table_name => 'svmc_miss_num',
07:03:08   5  	  data_table_name => '&scoretable',
07:03:08   6  	  xform_view_name => 'xformed_apply_miss_num');
07:03:08   7  
07:03:08   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
07:03:08   9  	  miss_table_name => 'svmc_miss_cat',
07:03:08  10  	  data_table_name => '&scoretable',
07:03:08  11  	  xform_view_name => 'xformed_apply_miss_cat');
07:03:08  12  
07:03:08  13  	-- Normalize the data to be scored
07:03:08  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
07:03:08  15  	  norm_table_name => 'svmc_norm',
07:03:08  16  	  data_table_name => '&scoretable',
07:03:08  17  	  xform_view_name => 'svmc_apply_prep');
07:03:08  18  END;
07:03:08  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.40
07:03:09 SQL> 
07:03:09 SQL> -- Use same model_name used in score_gattn.sql
07:03:09 SQL> DEFINE model_name = 'forex14'
07:03:09 SQL> 
07:03:09 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
07:03:09 SQL> 
07:03:09 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
07:03:09   2  SELECT
07:03:09   3  prdate
07:03:09   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
07:03:09   5  ,sysdate
07:03:09   6  ,SUBSTR(prdate,1,3)pair
07:03:09   7  ,SUBSTR(prdate,4,19)ydate
07:03:09   8  FROM svmc_apply_prep
07:03:09   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
07:03:09 SQL> @aud_score1day_gattn.sql	2011-01-03 06:45:00
07:03:09 SQL> --
07:03:09 SQL> -- aud_score1day_gattn.sql
07:03:09 SQL> --
07:03:09 SQL> 
07:03:09 SQL> CREATE OR REPLACE VIEW sme AS
07:03:09   2  SELECT
07:03:09   3  'aud'||m.ydate prdate
07:03:09   4  ,NULL gattn
07:03:09   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
07:03:09   6  ,eur_g00
07:03:09   7  ,eur_g01
07:03:09   8  ,eur_g02
07:03:09   9  ,eur_g03
07:03:09  10  ,eur_g04
07:03:09  11  ,eur_g05
07:03:09  12  ,eur_g06
07:03:09  13  ,eur_g07
07:03:09  14  ,eur_g08
07:03:09  15  ,eur_g09
07:03:09  16  ,eur_g10
07:03:09  17  ,eur_g11
07:03:09  18  ,eur_g12
07:03:09  19  ,eur_g13
07:03:09  20  ,eur_g14
07:03:09  21  ,eur_g15
07:03:09  22  ,eur_g16
07:03:09  23  ,eur_g17
07:03:09  24  ,eur_g18
07:03:09  25  ,eur_g19
07:03:09  26  ,eur_g20
07:03:09  27  ,eur_g21
07:03:09  28  ,eur_g22
07:03:09  29  ,eur_g23
07:03:09  30  ,eur_g24
07:03:09  31  ,eur_g25
07:03:09  32  ,eur_g26
07:03:09  33  ,eur_g27
07:03:09  34  ,eur_g28
07:03:09  35  ,eur_g29
07:03:09  36  ,eur_g30
07:03:09  37  ,eur_g31
07:03:09  38  ,eur_g32
07:03:09  39  ,eur_g33
07:03:09  40  ,eur_g34
07:03:09  41  ,eur_g35
07:03:09  42  ,eur_g36
07:03:09  43  ,eur_g37
07:03:09  44  ,eur_g38
07:03:09  45  ,eur_g39
07:03:09  46  ,eur_g40
07:03:09  47  ,eur_g41
07:03:09  48  ,aud_g00
07:03:09  49  ,aud_g01
07:03:09  50  ,aud_g02
07:03:09  51  ,aud_g03
07:03:09  52  ,aud_g04
07:03:09  53  ,aud_g05
07:03:09  54  ,aud_g06
07:03:09  55  ,aud_g07
07:03:09  56  ,aud_g08
07:03:09  57  ,aud_g09
07:03:09  58  ,aud_g10
07:03:09  59  ,aud_g11
07:03:09  60  ,aud_g12
07:03:09  61  ,aud_g13
07:03:09  62  ,aud_g14
07:03:09  63  ,aud_g15
07:03:09  64  ,aud_g16
07:03:09  65  ,aud_g17
07:03:09  66  ,aud_g18
07:03:09  67  ,aud_g19
07:03:09  68  ,aud_g20
07:03:09  69  ,aud_g21
07:03:09  70  ,aud_g22
07:03:09  71  ,aud_g23
07:03:09  72  ,aud_g24
07:03:09  73  ,aud_g25
07:03:09  74  ,aud_g26
07:03:09  75  ,aud_g27
07:03:09  76  ,aud_g28
07:03:09  77  ,aud_g29
07:03:09  78  ,aud_g30
07:03:09  79  ,aud_g31
07:03:09  80  ,aud_g32
07:03:09  81  ,aud_g33
07:03:09  82  ,aud_g34
07:03:09  83  ,aud_g35
07:03:09  84  ,aud_g36
07:03:09  85  ,aud_g37
07:03:09  86  ,aud_g38
07:03:09  87  ,aud_g39
07:03:09  88  ,aud_g40
07:03:09  89  ,aud_g41
07:03:09  90  ,gbp_g00
07:03:09  91  ,gbp_g01
07:03:09  92  ,gbp_g02
07:03:09  93  ,gbp_g03
07:03:09  94  ,gbp_g04
07:03:09  95  ,gbp_g05
07:03:09  96  ,gbp_g06
07:03:09  97  ,gbp_g07
07:03:09  98  ,gbp_g08
07:03:09  99  ,gbp_g09
07:03:09 100  ,gbp_g10
07:03:09 101  ,gbp_g11
07:03:09 102  ,gbp_g12
07:03:09 103  ,gbp_g13
07:03:09 104  ,gbp_g14
07:03:09 105  ,gbp_g15
07:03:09 106  ,gbp_g16
07:03:09 107  ,gbp_g17
07:03:09 108  ,gbp_g18
07:03:09 109  ,gbp_g19
07:03:09 110  ,gbp_g20
07:03:09 111  ,gbp_g21
07:03:09 112  ,gbp_g22
07:03:09 113  ,gbp_g23
07:03:09 114  ,gbp_g24
07:03:09 115  ,gbp_g25
07:03:09 116  ,gbp_g26
07:03:09 117  ,gbp_g27
07:03:09 118  ,gbp_g28
07:03:09 119  ,gbp_g29
07:03:09 120  ,gbp_g30
07:03:09 121  ,gbp_g31
07:03:09 122  ,gbp_g32
07:03:09 123  ,gbp_g33
07:03:09 124  ,gbp_g34
07:03:09 125  ,gbp_g35
07:03:09 126  ,gbp_g36
07:03:09 127  ,gbp_g37
07:03:09 128  ,gbp_g38
07:03:09 129  ,gbp_g39
07:03:09 130  ,gbp_g40
07:03:09 131  ,gbp_g41
07:03:09 132  ,jpy_g00
07:03:09 133  ,jpy_g01
07:03:09 134  ,jpy_g02
07:03:09 135  ,jpy_g03
07:03:09 136  ,jpy_g04
07:03:09 137  ,jpy_g05
07:03:09 138  ,jpy_g06
07:03:09 139  ,jpy_g07
07:03:09 140  ,jpy_g08
07:03:09 141  ,jpy_g09
07:03:09 142  ,jpy_g10
07:03:09 143  ,jpy_g11
07:03:09 144  ,jpy_g12
07:03:09 145  ,jpy_g13
07:03:09 146  ,jpy_g14
07:03:09 147  ,jpy_g15
07:03:09 148  ,jpy_g16
07:03:09 149  ,jpy_g17
07:03:09 150  ,jpy_g18
07:03:09 151  ,jpy_g19
07:03:09 152  ,jpy_g20
07:03:09 153  ,jpy_g21
07:03:09 154  ,jpy_g22
07:03:09 155  ,jpy_g23
07:03:09 156  ,jpy_g24
07:03:09 157  ,jpy_g25
07:03:09 158  ,jpy_g26
07:03:09 159  ,jpy_g27
07:03:09 160  ,jpy_g28
07:03:09 161  ,jpy_g29
07:03:09 162  ,jpy_g30
07:03:09 163  ,jpy_g31
07:03:09 164  ,jpy_g32
07:03:09 165  ,jpy_g33
07:03:09 166  ,jpy_g34
07:03:09 167  ,jpy_g35
07:03:09 168  ,jpy_g36
07:03:09 169  ,jpy_g37
07:03:09 170  ,jpy_g38
07:03:09 171  ,jpy_g39
07:03:09 172  ,jpy_g40
07:03:09 173  ,jpy_g41
07:03:09 174  ,cad_g00
07:03:09 175  ,cad_g01
07:03:09 176  ,cad_g02
07:03:09 177  ,cad_g03
07:03:09 178  ,cad_g04
07:03:09 179  ,cad_g05
07:03:09 180  ,cad_g06
07:03:09 181  ,cad_g07
07:03:09 182  ,cad_g08
07:03:09 183  ,cad_g09
07:03:09 184  ,cad_g10
07:03:09 185  ,cad_g11
07:03:09 186  ,cad_g12
07:03:09 187  ,cad_g13
07:03:09 188  ,cad_g14
07:03:09 189  ,cad_g15
07:03:09 190  ,cad_g16
07:03:09 191  ,cad_g17
07:03:09 192  ,cad_g18
07:03:09 193  ,cad_g19
07:03:09 194  ,cad_g20
07:03:09 195  ,cad_g21
07:03:09 196  ,cad_g22
07:03:09 197  ,cad_g23
07:03:09 198  ,cad_g24
07:03:09 199  ,cad_g25
07:03:09 200  ,cad_g26
07:03:09 201  ,cad_g27
07:03:09 202  ,cad_g28
07:03:09 203  ,cad_g29
07:03:09 204  ,cad_g30
07:03:09 205  ,cad_g31
07:03:09 206  ,cad_g32
07:03:09 207  ,cad_g33
07:03:09 208  ,cad_g34
07:03:09 209  ,cad_g35
07:03:09 210  ,cad_g36
07:03:09 211  ,cad_g37
07:03:09 212  ,cad_g38
07:03:09 213  ,cad_g39
07:03:09 214  ,cad_g40
07:03:09 215  ,cad_g41
07:03:09 216  ,chf_g00
07:03:09 217  ,chf_g01
07:03:09 218  ,chf_g02
07:03:09 219  ,chf_g03
07:03:09 220  ,chf_g04
07:03:09 221  ,chf_g05
07:03:09 222  ,chf_g06
07:03:09 223  ,chf_g07
07:03:09 224  ,chf_g08
07:03:09 225  ,chf_g09
07:03:09 226  ,chf_g10
07:03:09 227  ,chf_g11
07:03:09 228  ,chf_g12
07:03:09 229  ,chf_g13
07:03:09 230  ,chf_g14
07:03:09 231  ,chf_g15
07:03:09 232  ,chf_g16
07:03:09 233  ,chf_g17
07:03:09 234  ,chf_g18
07:03:09 235  ,chf_g19
07:03:09 236  ,chf_g20
07:03:09 237  ,chf_g21
07:03:09 238  ,chf_g22
07:03:09 239  ,chf_g23
07:03:09 240  ,chf_g24
07:03:09 241  ,chf_g25
07:03:09 242  ,chf_g26
07:03:09 243  ,chf_g27
07:03:09 244  ,chf_g28
07:03:09 245  ,chf_g29
07:03:09 246  ,chf_g30
07:03:09 247  ,chf_g31
07:03:09 248  ,chf_g32
07:03:09 249  ,chf_g33
07:03:09 250  ,chf_g34
07:03:09 251  ,chf_g35
07:03:09 252  ,chf_g36
07:03:09 253  ,chf_g37
07:03:09 254  ,chf_g38
07:03:09 255  ,chf_g39
07:03:09 256  ,chf_g40
07:03:09 257  ,chf_g41
07:03:09 258  FROM aud_ms6 m
07:03:09 259  WHERE m.ydate = '&1'||' '||'&2'
07:03:09 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'06:45:00'

View created.

Elapsed: 00:00:00.14
07:03:09 SQL> 
07:03:09 SQL> -- rpt
07:03:09 SQL> -- We should see just 1 row:
07:03:09 SQL> 
07:03:09 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.03
07:03:10 SQL> 
07:03:10 SQL> -- Build the model:
07:03:10 SQL> CREATE OR REPLACE VIEW bme AS
07:03:10   2  SELECT
07:03:10   3  'aud'||m.ydate prdate
07:03:10   4  ,gattn
07:03:10   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
07:03:10   6  ,eur_g00
07:03:10   7  ,eur_g01
07:03:10   8  ,eur_g02
07:03:10   9  ,eur_g03
07:03:10  10  ,eur_g04
07:03:10  11  ,eur_g05
07:03:10  12  ,eur_g06
07:03:10  13  ,eur_g07
07:03:10  14  ,eur_g08
07:03:10  15  ,eur_g09
07:03:10  16  ,eur_g10
07:03:10  17  ,eur_g11
07:03:10  18  ,eur_g12
07:03:10  19  ,eur_g13
07:03:10  20  ,eur_g14
07:03:10  21  ,eur_g15
07:03:10  22  ,eur_g16
07:03:10  23  ,eur_g17
07:03:10  24  ,eur_g18
07:03:10  25  ,eur_g19
07:03:10  26  ,eur_g20
07:03:10  27  ,eur_g21
07:03:10  28  ,eur_g22
07:03:10  29  ,eur_g23
07:03:10  30  ,eur_g24
07:03:10  31  ,eur_g25
07:03:10  32  ,eur_g26
07:03:10  33  ,eur_g27
07:03:10  34  ,eur_g28
07:03:10  35  ,eur_g29
07:03:10  36  ,eur_g30
07:03:10  37  ,eur_g31
07:03:10  38  ,eur_g32
07:03:10  39  ,eur_g33
07:03:10  40  ,eur_g34
07:03:10  41  ,eur_g35
07:03:10  42  ,eur_g36
07:03:10  43  ,eur_g37
07:03:10  44  ,eur_g38
07:03:10  45  ,eur_g39
07:03:10  46  ,eur_g40
07:03:10  47  ,eur_g41
07:03:10  48  ,aud_g00
07:03:10  49  ,aud_g01
07:03:10  50  ,aud_g02
07:03:10  51  ,aud_g03
07:03:10  52  ,aud_g04
07:03:10  53  ,aud_g05
07:03:10  54  ,aud_g06
07:03:10  55  ,aud_g07
07:03:10  56  ,aud_g08
07:03:10  57  ,aud_g09
07:03:10  58  ,aud_g10
07:03:10  59  ,aud_g11
07:03:10  60  ,aud_g12
07:03:10  61  ,aud_g13
07:03:10  62  ,aud_g14
07:03:10  63  ,aud_g15
07:03:10  64  ,aud_g16
07:03:10  65  ,aud_g17
07:03:10  66  ,aud_g18
07:03:10  67  ,aud_g19
07:03:10  68  ,aud_g20
07:03:10  69  ,aud_g21
07:03:10  70  ,aud_g22
07:03:10  71  ,aud_g23
07:03:10  72  ,aud_g24
07:03:10  73  ,aud_g25
07:03:10  74  ,aud_g26
07:03:10  75  ,aud_g27
07:03:10  76  ,aud_g28
07:03:10  77  ,aud_g29
07:03:10  78  ,aud_g30
07:03:10  79  ,aud_g31
07:03:10  80  ,aud_g32
07:03:10  81  ,aud_g33
07:03:10  82  ,aud_g34
07:03:10  83  ,aud_g35
07:03:10  84  ,aud_g36
07:03:10  85  ,aud_g37
07:03:10  86  ,aud_g38
07:03:10  87  ,aud_g39
07:03:10  88  ,aud_g40
07:03:10  89  ,aud_g41
07:03:10  90  ,gbp_g00
07:03:10  91  ,gbp_g01
07:03:10  92  ,gbp_g02
07:03:10  93  ,gbp_g03
07:03:10  94  ,gbp_g04
07:03:10  95  ,gbp_g05
07:03:10  96  ,gbp_g06
07:03:10  97  ,gbp_g07
07:03:10  98  ,gbp_g08
07:03:10  99  ,gbp_g09
07:03:10 100  ,gbp_g10
07:03:10 101  ,gbp_g11
07:03:10 102  ,gbp_g12
07:03:10 103  ,gbp_g13
07:03:10 104  ,gbp_g14
07:03:10 105  ,gbp_g15
07:03:10 106  ,gbp_g16
07:03:10 107  ,gbp_g17
07:03:10 108  ,gbp_g18
07:03:10 109  ,gbp_g19
07:03:10 110  ,gbp_g20
07:03:10 111  ,gbp_g21
07:03:10 112  ,gbp_g22
07:03:10 113  ,gbp_g23
07:03:10 114  ,gbp_g24
07:03:10 115  ,gbp_g25
07:03:10 116  ,gbp_g26
07:03:10 117  ,gbp_g27
07:03:10 118  ,gbp_g28
07:03:10 119  ,gbp_g29
07:03:10 120  ,gbp_g30
07:03:10 121  ,gbp_g31
07:03:10 122  ,gbp_g32
07:03:10 123  ,gbp_g33
07:03:10 124  ,gbp_g34
07:03:10 125  ,gbp_g35
07:03:10 126  ,gbp_g36
07:03:10 127  ,gbp_g37
07:03:10 128  ,gbp_g38
07:03:10 129  ,gbp_g39
07:03:10 130  ,gbp_g40
07:03:10 131  ,gbp_g41
07:03:10 132  ,jpy_g00
07:03:10 133  ,jpy_g01
07:03:10 134  ,jpy_g02
07:03:10 135  ,jpy_g03
07:03:10 136  ,jpy_g04
07:03:10 137  ,jpy_g05
07:03:10 138  ,jpy_g06
07:03:10 139  ,jpy_g07
07:03:10 140  ,jpy_g08
07:03:10 141  ,jpy_g09
07:03:10 142  ,jpy_g10
07:03:10 143  ,jpy_g11
07:03:10 144  ,jpy_g12
07:03:10 145  ,jpy_g13
07:03:10 146  ,jpy_g14
07:03:10 147  ,jpy_g15
07:03:10 148  ,jpy_g16
07:03:10 149  ,jpy_g17
07:03:10 150  ,jpy_g18
07:03:10 151  ,jpy_g19
07:03:10 152  ,jpy_g20
07:03:10 153  ,jpy_g21
07:03:10 154  ,jpy_g22
07:03:10 155  ,jpy_g23
07:03:10 156  ,jpy_g24
07:03:10 157  ,jpy_g25
07:03:10 158  ,jpy_g26
07:03:10 159  ,jpy_g27
07:03:10 160  ,jpy_g28
07:03:10 161  ,jpy_g29
07:03:10 162  ,jpy_g30
07:03:10 163  ,jpy_g31
07:03:10 164  ,jpy_g32
07:03:10 165  ,jpy_g33
07:03:10 166  ,jpy_g34
07:03:10 167  ,jpy_g35
07:03:10 168  ,jpy_g36
07:03:10 169  ,jpy_g37
07:03:10 170  ,jpy_g38
07:03:10 171  ,jpy_g39
07:03:10 172  ,jpy_g40
07:03:10 173  ,jpy_g41
07:03:10 174  ,cad_g00
07:03:10 175  ,cad_g01
07:03:10 176  ,cad_g02
07:03:10 177  ,cad_g03
07:03:10 178  ,cad_g04
07:03:10 179  ,cad_g05
07:03:10 180  ,cad_g06
07:03:10 181  ,cad_g07
07:03:10 182  ,cad_g08
07:03:10 183  ,cad_g09
07:03:10 184  ,cad_g10
07:03:10 185  ,cad_g11
07:03:10 186  ,cad_g12
07:03:10 187  ,cad_g13
07:03:10 188  ,cad_g14
07:03:10 189  ,cad_g15
07:03:10 190  ,cad_g16
07:03:10 191  ,cad_g17
07:03:10 192  ,cad_g18
07:03:10 193  ,cad_g19
07:03:10 194  ,cad_g20
07:03:10 195  ,cad_g21
07:03:10 196  ,cad_g22
07:03:10 197  ,cad_g23
07:03:10 198  ,cad_g24
07:03:10 199  ,cad_g25
07:03:10 200  ,cad_g26
07:03:10 201  ,cad_g27
07:03:10 202  ,cad_g28
07:03:10 203  ,cad_g29
07:03:10 204  ,cad_g30
07:03:10 205  ,cad_g31
07:03:10 206  ,cad_g32
07:03:10 207  ,cad_g33
07:03:10 208  ,cad_g34
07:03:10 209  ,cad_g35
07:03:10 210  ,cad_g36
07:03:10 211  ,cad_g37
07:03:10 212  ,cad_g38
07:03:10 213  ,cad_g39
07:03:10 214  ,cad_g40
07:03:10 215  ,cad_g41
07:03:10 216  ,chf_g00
07:03:10 217  ,chf_g01
07:03:10 218  ,chf_g02
07:03:10 219  ,chf_g03
07:03:10 220  ,chf_g04
07:03:10 221  ,chf_g05
07:03:10 222  ,chf_g06
07:03:10 223  ,chf_g07
07:03:10 224  ,chf_g08
07:03:10 225  ,chf_g09
07:03:10 226  ,chf_g10
07:03:10 227  ,chf_g11
07:03:10 228  ,chf_g12
07:03:10 229  ,chf_g13
07:03:10 230  ,chf_g14
07:03:10 231  ,chf_g15
07:03:10 232  ,chf_g16
07:03:10 233  ,chf_g17
07:03:10 234  ,chf_g18
07:03:10 235  ,chf_g19
07:03:10 236  ,chf_g20
07:03:10 237  ,chf_g21
07:03:10 238  ,chf_g22
07:03:10 239  ,chf_g23
07:03:10 240  ,chf_g24
07:03:10 241  ,chf_g25
07:03:10 242  ,chf_g26
07:03:10 243  ,chf_g27
07:03:10 244  ,chf_g28
07:03:10 245  ,chf_g29
07:03:10 246  ,chf_g30
07:03:10 247  ,chf_g31
07:03:10 248  ,chf_g32
07:03:10 249  ,chf_g33
07:03:10 250  ,chf_g34
07:03:10 251  ,chf_g35
07:03:10 252  ,chf_g36
07:03:10 253  ,chf_g37
07:03:10 254  ,chf_g38
07:03:10 255  ,chf_g39
07:03:10 256  ,chf_g40
07:03:10 257  ,chf_g41
07:03:10 258  FROM aud_ms6 m
07:03:10 259  WHERE gattn IN('nup','up')
07:03:10 260  AND 1+m.ydate < '&1'||' '||'&2'
07:03:10 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'06:45:00'

View created.

Elapsed: 00:00:00.13
07:03:10 SQL> 
07:03:10 SQL> -- rpt
07:03:10 SQL> 
07:03:10 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12808
up	     6334

Elapsed: 00:00:00.04
07:03:10 SQL> 
07:03:10 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 21:55:00

Elapsed: 00:00:00.03
07:03:10 SQL> 
07:03:10 SQL> -- Now build model from bme and score sme
07:03:10 SQL> @score1gattn.sql
07:03:10 SQL> -- score1gattn.sql
07:03:10 SQL> 
07:03:10 SQL> -- Does the 1st SVM score
07:03:10 SQL> 
07:03:10 SQL> -- Fill up svmc_apply_prep
07:03:10 SQL> @score_gattn.sql
07:03:10 SQL> --
07:03:10 SQL> -- score_gattn.sql
07:03:10 SQL> --
07:03:10 SQL> 
07:03:10 SQL> -- usage: score_gattn.sql
07:03:10 SQL> 
07:03:10 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
07:03:10 SQL> 
07:03:10 SQL> DEFINE target	= 'gattn'
07:03:10 SQL> DEFINE model_name = 'forex14'
07:03:10 SQL> DEFINE bldtable	= 'bme'
07:03:10 SQL> DEFINE scoretable = 'sme'
07:03:10 SQL> DEFINE case_id	= 'prdate'
07:03:10 SQL> 
07:03:10 SQL> -- Define a variable to help me exclude some columns from some data mining calls
07:03:10 SQL> DEFINE exclude1 = "'&target','&case_id'"
07:03:10 SQL> 
07:03:10 SQL> -- Builds an SVM model using pl/sql.
07:03:10 SQL> 
07:03:10 SQL> -----------------------------------------------------------------------
07:03:10 SQL> --			    BUILD THE MODEL
07:03:10 SQL> -----------------------------------------------------------------------
07:03:10 SQL> 
07:03:10 SQL> -- Cleanup old build data preparation objects for repeat runs
07:03:10 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
07:03:10 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
07:03:10 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
07:03:10 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
07:03:10 SQL> 
07:03:10 SQL> 
07:03:10 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
07:03:10 SQL> --
07:03:10 SQL> -- DROP	TABLE svmc_settings ;
07:03:10 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
07:03:10 SQL> -- DELETE svmc_settings;
07:03:10 SQL> 
07:03:10 SQL> -- The default classification algorithm is Naive Bayes. So override
07:03:10 SQL> -- this choice to SVM using a settings table.
07:03:10 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
07:03:10 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
07:03:10 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
07:03:10 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
07:03:10 SQL> -- models.
07:03:10 SQL> --
07:03:10 SQL> 
07:03:10 SQL> -- Do this once and then comment it out.
07:03:10 SQL> -- That makes script go faster.
07:03:10 SQL> -- BEGIN
07:03:10 SQL> -- -- Populate settings table
07:03:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
07:03:10 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
07:03:10 SQL> --
07:03:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
07:03:10 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
07:03:10 SQL> --
07:03:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
07:03:10 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
07:03:10 SQL> --   COMMIT;
07:03:10 SQL> -- END;
07:03:10 SQL> -- /
07:03:10 SQL> 
07:03:10 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
07:03:10 SQL> 
07:03:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
07:03:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:03:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
07:03:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
07:03:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:03:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
07:03:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
07:03:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:03:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:03:10 SQL> 
07:03:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
07:03:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:03:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:03:10 SQL> 
07:03:10 SQL> --------------------------------
07:03:10 SQL> -- PREPARE BUILD (TRAINING) DATA
07:03:10 SQL> --
07:03:10 SQL> 
07:03:10 SQL> -- 1. Missing Value treatment for all Predictors and
07:03:10 SQL> -- 2. Outlier Treatment and
07:03:10 SQL> -- 3. Normalization are performed below.
07:03:10 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
07:03:10 SQL> --    normalized here.
07:03:10 SQL> 
07:03:10 SQL> BEGIN
07:03:10   2  	-- Perform missing value treatment for all predictors
07:03:10   3  	-- create miss tables
07:03:10   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
07:03:10   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
07:03:10   6  
07:03:10   7  	-- populate miss tables
07:03:10   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
07:03:10   9  	  miss_table_name => 'svmc_miss_num',
07:03:10  10  	  data_table_name => '&bldtable',
07:03:10  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:03:10  12  
07:03:10  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
07:03:10  14  	  miss_table_name => 'svmc_miss_cat',
07:03:10  15  	  data_table_name => '&bldtable',
07:03:10  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:03:10  17  
07:03:10  18  	-- xform input data to replace missing values
07:03:10  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
07:03:10  20  	  miss_table_name => 'svmc_miss_num',
07:03:10  21  	  data_table_name => '&bldtable',
07:03:10  22  	  xform_view_name => 'xformed_build_miss_num');
07:03:10  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
07:03:10  24  	  miss_table_name => 'svmc_miss_cat',
07:03:10  25  	  data_table_name => '&bldtable',
07:03:10  26  	  xform_view_name => 'xformed_build_miss_cat');
07:03:10  27  
07:03:10  28  	-- Perform outlier treatment.
07:03:10  29  	-- create clip table
07:03:10  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
07:03:10  31  
07:03:10  32  	-- populate clip table
07:03:10  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
07:03:10  34  	  clip_table_name => 'svmc_clip',
07:03:10  35  	  data_table_name => '&bldtable',
07:03:10  36  	  tail_frac	  => 0.025,
07:03:10  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:03:10  38  
07:03:10  39  	-- xform input data to winsorized data
07:03:10  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
07:03:10  41  	  clip_table_name => 'svmc_clip',
07:03:10  42  	  data_table_name => '&bldtable',
07:03:10  43  	  xform_view_name => 'svmc_winsor');
07:03:10  44  
07:03:10  45  	-- create normalization table
07:03:10  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
07:03:10  47  
07:03:10  48  	-- populate normalization table based on winsorized data
07:03:10  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
07:03:10  50  	  norm_table_name => 'svmc_norm',
07:03:10  51  	  data_table_name => 'svmc_winsor',
07:03:10  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
07:03:10  53  
07:03:10  54  	-- normalize the original data
07:03:10  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
07:03:10  56  	  norm_table_name => 'svmc_norm',
07:03:10  57  	  data_table_name => '&bldtable',
07:03:10  58  	  xform_view_name => 'svmc_build_prep');
07:03:10  59  END;
07:03:10  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.08
07:03:28 SQL> 
07:03:28 SQL> ---------------------
07:03:28 SQL> -- CREATE A NEW MODEL
07:03:28 SQL> --
07:03:28 SQL> -- Cleanup old model with the same name for repeat runs
07:03:28 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
07:03:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:03:28   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
07:03:29 SQL> 
07:03:29 SQL> -- Build a new SVM Model
07:03:29 SQL> BEGIN
07:03:29   2  	DBMS_DATA_MINING.CREATE_MODEL(
07:03:29   3  	  model_name	      => '&model_name',
07:03:29   4  	  mining_function     => dbms_data_mining.classification,
07:03:29   5  	  data_table_name     => 'svmc_build_prep',
07:03:29   6  	  case_id_column_name => '&case_id',
07:03:29   7  	  target_column_name  => '&target',
07:03:29   8  	  settings_table_name => 'svmc_settings');
07:03:29   9  END;
07:03:29  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.26
07:03:59 SQL> 
07:03:59 SQL> -----------------------------------------------------------------------
07:03:59 SQL> --			       APPLY/score THE MODEL
07:03:59 SQL> -----------------------------------------------------------------------
07:03:59 SQL> 
07:03:59 SQL> -- Cleanup old scoring data preparation objects for repeat runs
07:03:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
07:03:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:03:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
07:03:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
07:03:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:03:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:03:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
07:03:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
07:03:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
07:03:59 SQL> -----------------------
07:03:59 SQL> -- PREPARE SCORING DATA
07:03:59 SQL> --
07:03:59 SQL> -- If the data for model creation has been prepared, then the data
07:03:59 SQL> -- to be scored using the model must be prepared in the same manner
07:03:59 SQL> -- in order to obtain meaningful results.
07:03:59 SQL> --
07:03:59 SQL> -- 1. Missing Value treatment for all Predictors and
07:03:59 SQL> -- 2. Normalization
07:03:59 SQL> -- No outlier treatment will be performed during test and apply. The
07:03:59 SQL> -- normalization step is sufficient, since the normalization parameters
07:03:59 SQL> -- already capture the effects of outlier treatment done with build data.
07:03:59 SQL> --
07:03:59 SQL> BEGIN
07:03:59   2  	-- Xform Test data to replace missing values
07:03:59   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
07:03:59   4  	  miss_table_name => 'svmc_miss_num',
07:03:59   5  	  data_table_name => '&scoretable',
07:03:59   6  	  xform_view_name => 'xformed_apply_miss_num');
07:03:59   7  
07:03:59   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
07:03:59   9  	  miss_table_name => 'svmc_miss_cat',
07:03:59  10  	  data_table_name => '&scoretable',
07:03:59  11  	  xform_view_name => 'xformed_apply_miss_cat');
07:03:59  12  
07:03:59  13  	-- Normalize the data to be scored
07:03:59  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
07:03:59  15  	  norm_table_name => 'svmc_norm',
07:03:59  16  	  data_table_name => '&scoretable',
07:03:59  17  	  xform_view_name => 'svmc_apply_prep');
07:03:59  18  END;
07:03:59  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.30
07:04:00 SQL> 
07:04:00 SQL> -- Use same model_name used in score_gattn.sql
07:04:00 SQL> DEFINE model_name = 'forex14'
07:04:00 SQL> 
07:04:00 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
07:04:00 SQL> 
07:04:00 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
07:04:00   2  SELECT
07:04:00   3  prdate
07:04:00   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
07:04:00   5  ,sysdate
07:04:00   6  ,SUBSTR(prdate,1,3)pair
07:04:00   7  ,SUBSTR(prdate,4,19)ydate
07:04:00   8  FROM svmc_apply_prep
07:04:00   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.21
07:04:00 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
