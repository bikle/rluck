
SQL*Plus: Release 11.2.0.1.0 Production on Thu Jan 6 20:39:26 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

20:39:27 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
20:39:27 SQL> 20:39:27 SQL> @aud_score1day.sql  2011-01-06 20:15:00
20:39:27 SQL> --
20:39:27 SQL> -- aud_score1day.sql
20:39:27 SQL> --
20:39:27 SQL> 
20:39:27 SQL> CREATE OR REPLACE VIEW sme AS
20:39:27   2  SELECT
20:39:27   3  'aud'||m.ydate prdate
20:39:27   4  ,NULL gatt
20:39:27   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:39:27   6  ,eur_g00
20:39:27   7  ,eur_g01
20:39:27   8  ,eur_g02
20:39:27   9  ,eur_g03
20:39:27  10  ,eur_g04
20:39:27  11  ,eur_g05
20:39:27  12  ,eur_g06
20:39:27  13  ,eur_g07
20:39:27  14  ,eur_g08
20:39:27  15  ,eur_g09
20:39:27  16  ,eur_g10
20:39:27  17  ,eur_g11
20:39:27  18  ,eur_g12
20:39:27  19  ,eur_g13
20:39:27  20  ,eur_g14
20:39:27  21  ,eur_g15
20:39:27  22  ,eur_g16
20:39:27  23  ,eur_g17
20:39:27  24  ,eur_g18
20:39:27  25  ,eur_g19
20:39:27  26  ,eur_g20
20:39:27  27  ,eur_g21
20:39:27  28  ,eur_g22
20:39:27  29  ,eur_g23
20:39:27  30  ,eur_g24
20:39:27  31  ,eur_g25
20:39:27  32  ,eur_g26
20:39:27  33  ,eur_g27
20:39:27  34  ,eur_g28
20:39:27  35  ,eur_g29
20:39:27  36  ,eur_g30
20:39:27  37  ,eur_g31
20:39:27  38  ,eur_g32
20:39:27  39  ,eur_g33
20:39:27  40  ,eur_g34
20:39:27  41  ,eur_g35
20:39:27  42  ,eur_g36
20:39:27  43  ,eur_g37
20:39:27  44  ,eur_g38
20:39:27  45  ,eur_g39
20:39:27  46  ,eur_g40
20:39:27  47  ,eur_g41
20:39:27  48  ,aud_g00
20:39:27  49  ,aud_g01
20:39:27  50  ,aud_g02
20:39:27  51  ,aud_g03
20:39:27  52  ,aud_g04
20:39:27  53  ,aud_g05
20:39:27  54  ,aud_g06
20:39:27  55  ,aud_g07
20:39:27  56  ,aud_g08
20:39:27  57  ,aud_g09
20:39:27  58  ,aud_g10
20:39:27  59  ,aud_g11
20:39:27  60  ,aud_g12
20:39:27  61  ,aud_g13
20:39:27  62  ,aud_g14
20:39:27  63  ,aud_g15
20:39:27  64  ,aud_g16
20:39:27  65  ,aud_g17
20:39:27  66  ,aud_g18
20:39:27  67  ,aud_g19
20:39:27  68  ,aud_g20
20:39:27  69  ,aud_g21
20:39:27  70  ,aud_g22
20:39:27  71  ,aud_g23
20:39:27  72  ,aud_g24
20:39:27  73  ,aud_g25
20:39:27  74  ,aud_g26
20:39:27  75  ,aud_g27
20:39:27  76  ,aud_g28
20:39:27  77  ,aud_g29
20:39:27  78  ,aud_g30
20:39:27  79  ,aud_g31
20:39:27  80  ,aud_g32
20:39:27  81  ,aud_g33
20:39:27  82  ,aud_g34
20:39:27  83  ,aud_g35
20:39:27  84  ,aud_g36
20:39:27  85  ,aud_g37
20:39:27  86  ,aud_g38
20:39:27  87  ,aud_g39
20:39:27  88  ,aud_g40
20:39:27  89  ,aud_g41
20:39:27  90  ,gbp_g00
20:39:27  91  ,gbp_g01
20:39:27  92  ,gbp_g02
20:39:27  93  ,gbp_g03
20:39:27  94  ,gbp_g04
20:39:27  95  ,gbp_g05
20:39:27  96  ,gbp_g06
20:39:27  97  ,gbp_g07
20:39:27  98  ,gbp_g08
20:39:27  99  ,gbp_g09
20:39:27 100  ,gbp_g10
20:39:27 101  ,gbp_g11
20:39:27 102  ,gbp_g12
20:39:27 103  ,gbp_g13
20:39:27 104  ,gbp_g14
20:39:27 105  ,gbp_g15
20:39:27 106  ,gbp_g16
20:39:27 107  ,gbp_g17
20:39:27 108  ,gbp_g18
20:39:27 109  ,gbp_g19
20:39:27 110  ,gbp_g20
20:39:27 111  ,gbp_g21
20:39:27 112  ,gbp_g22
20:39:27 113  ,gbp_g23
20:39:27 114  ,gbp_g24
20:39:27 115  ,gbp_g25
20:39:27 116  ,gbp_g26
20:39:27 117  ,gbp_g27
20:39:27 118  ,gbp_g28
20:39:27 119  ,gbp_g29
20:39:27 120  ,gbp_g30
20:39:27 121  ,gbp_g31
20:39:27 122  ,gbp_g32
20:39:27 123  ,gbp_g33
20:39:27 124  ,gbp_g34
20:39:27 125  ,gbp_g35
20:39:27 126  ,gbp_g36
20:39:27 127  ,gbp_g37
20:39:27 128  ,gbp_g38
20:39:27 129  ,gbp_g39
20:39:27 130  ,gbp_g40
20:39:27 131  ,gbp_g41
20:39:27 132  ,jpy_g00
20:39:27 133  ,jpy_g01
20:39:27 134  ,jpy_g02
20:39:27 135  ,jpy_g03
20:39:27 136  ,jpy_g04
20:39:27 137  ,jpy_g05
20:39:27 138  ,jpy_g06
20:39:27 139  ,jpy_g07
20:39:27 140  ,jpy_g08
20:39:27 141  ,jpy_g09
20:39:27 142  ,jpy_g10
20:39:27 143  ,jpy_g11
20:39:27 144  ,jpy_g12
20:39:27 145  ,jpy_g13
20:39:27 146  ,jpy_g14
20:39:27 147  ,jpy_g15
20:39:27 148  ,jpy_g16
20:39:27 149  ,jpy_g17
20:39:27 150  ,jpy_g18
20:39:27 151  ,jpy_g19
20:39:27 152  ,jpy_g20
20:39:27 153  ,jpy_g21
20:39:27 154  ,jpy_g22
20:39:27 155  ,jpy_g23
20:39:27 156  ,jpy_g24
20:39:27 157  ,jpy_g25
20:39:27 158  ,jpy_g26
20:39:27 159  ,jpy_g27
20:39:27 160  ,jpy_g28
20:39:27 161  ,jpy_g29
20:39:27 162  ,jpy_g30
20:39:27 163  ,jpy_g31
20:39:27 164  ,jpy_g32
20:39:27 165  ,jpy_g33
20:39:27 166  ,jpy_g34
20:39:27 167  ,jpy_g35
20:39:27 168  ,jpy_g36
20:39:27 169  ,jpy_g37
20:39:27 170  ,jpy_g38
20:39:27 171  ,jpy_g39
20:39:27 172  ,jpy_g40
20:39:27 173  ,jpy_g41
20:39:27 174  ,cad_g00
20:39:27 175  ,cad_g01
20:39:27 176  ,cad_g02
20:39:27 177  ,cad_g03
20:39:27 178  ,cad_g04
20:39:27 179  ,cad_g05
20:39:27 180  ,cad_g06
20:39:27 181  ,cad_g07
20:39:27 182  ,cad_g08
20:39:27 183  ,cad_g09
20:39:27 184  ,cad_g10
20:39:27 185  ,cad_g11
20:39:27 186  ,cad_g12
20:39:27 187  ,cad_g13
20:39:27 188  ,cad_g14
20:39:27 189  ,cad_g15
20:39:27 190  ,cad_g16
20:39:27 191  ,cad_g17
20:39:27 192  ,cad_g18
20:39:27 193  ,cad_g19
20:39:27 194  ,cad_g20
20:39:27 195  ,cad_g21
20:39:27 196  ,cad_g22
20:39:27 197  ,cad_g23
20:39:27 198  ,cad_g24
20:39:27 199  ,cad_g25
20:39:27 200  ,cad_g26
20:39:27 201  ,cad_g27
20:39:27 202  ,cad_g28
20:39:27 203  ,cad_g29
20:39:27 204  ,cad_g30
20:39:27 205  ,cad_g31
20:39:27 206  ,cad_g32
20:39:27 207  ,cad_g33
20:39:27 208  ,cad_g34
20:39:27 209  ,cad_g35
20:39:27 210  ,cad_g36
20:39:27 211  ,cad_g37
20:39:27 212  ,cad_g38
20:39:27 213  ,cad_g39
20:39:27 214  ,cad_g40
20:39:27 215  ,cad_g41
20:39:27 216  ,chf_g00
20:39:27 217  ,chf_g01
20:39:27 218  ,chf_g02
20:39:27 219  ,chf_g03
20:39:27 220  ,chf_g04
20:39:27 221  ,chf_g05
20:39:27 222  ,chf_g06
20:39:27 223  ,chf_g07
20:39:27 224  ,chf_g08
20:39:27 225  ,chf_g09
20:39:27 226  ,chf_g10
20:39:27 227  ,chf_g11
20:39:27 228  ,chf_g12
20:39:27 229  ,chf_g13
20:39:27 230  ,chf_g14
20:39:27 231  ,chf_g15
20:39:27 232  ,chf_g16
20:39:27 233  ,chf_g17
20:39:27 234  ,chf_g18
20:39:27 235  ,chf_g19
20:39:27 236  ,chf_g20
20:39:27 237  ,chf_g21
20:39:27 238  ,chf_g22
20:39:27 239  ,chf_g23
20:39:27 240  ,chf_g24
20:39:27 241  ,chf_g25
20:39:27 242  ,chf_g26
20:39:27 243  ,chf_g27
20:39:27 244  ,chf_g28
20:39:27 245  ,chf_g29
20:39:27 246  ,chf_g30
20:39:27 247  ,chf_g31
20:39:27 248  ,chf_g32
20:39:27 249  ,chf_g33
20:39:27 250  ,chf_g34
20:39:27 251  ,chf_g35
20:39:27 252  ,chf_g36
20:39:27 253  ,chf_g37
20:39:27 254  ,chf_g38
20:39:27 255  ,chf_g39
20:39:27 256  ,chf_g40
20:39:27 257  ,chf_g41
20:39:27 258  FROM aud_ms6 m
20:39:27 259  WHERE m.ydate = '&1'||' '||'&2'
20:39:27 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'20:15:00'

View created.

Elapsed: 00:00:00.13
20:39:27 SQL> 
20:39:27 SQL> -- rpt
20:39:27 SQL> -- We should see just 1 row:
20:39:27 SQL> 
20:39:27 SQL> SELECT COUNT(prdate) FROM sme
20:39:27   2  
20:39:27 SQL> -- Build the model:
20:39:27 SQL> CREATE OR REPLACE VIEW bme AS
20:39:27   2  SELECT
20:39:27   3  'aud'||m.ydate prdate
20:39:27   4  ,gatt
20:39:27   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:39:27   6  ,eur_g00
20:39:27   7  ,eur_g01
20:39:27   8  ,eur_g02
20:39:27   9  ,eur_g03
20:39:27  10  ,eur_g04
20:39:27  11  ,eur_g05
20:39:27  12  ,eur_g06
20:39:27  13  ,eur_g07
20:39:27  14  ,eur_g08
20:39:27  15  ,eur_g09
20:39:27  16  ,eur_g10
20:39:27  17  ,eur_g11
20:39:27  18  ,eur_g12
20:39:27  19  ,eur_g13
20:39:27  20  ,eur_g14
20:39:27  21  ,eur_g15
20:39:27  22  ,eur_g16
20:39:27  23  ,eur_g17
20:39:27  24  ,eur_g18
20:39:27  25  ,eur_g19
20:39:27  26  ,eur_g20
20:39:27  27  ,eur_g21
20:39:27  28  ,eur_g22
20:39:27  29  ,eur_g23
20:39:27  30  ,eur_g24
20:39:27  31  ,eur_g25
20:39:27  32  ,eur_g26
20:39:27  33  ,eur_g27
20:39:27  34  ,eur_g28
20:39:27  35  ,eur_g29
20:39:27  36  ,eur_g30
20:39:27  37  ,eur_g31
20:39:27  38  ,eur_g32
20:39:27  39  ,eur_g33
20:39:27  40  ,eur_g34
20:39:27  41  ,eur_g35
20:39:27  42  ,eur_g36
20:39:27  43  ,eur_g37
20:39:27  44  ,eur_g38
20:39:27  45  ,eur_g39
20:39:27  46  ,eur_g40
20:39:27  47  ,eur_g41
20:39:27  48  ,aud_g00
20:39:27  49  ,aud_g01
20:39:27  50  ,aud_g02
20:39:27  51  ,aud_g03
20:39:27  52  ,aud_g04
20:39:27  53  ,aud_g05
20:39:27  54  ,aud_g06
20:39:27  55  ,aud_g07
20:39:27  56  ,aud_g08
20:39:27  57  ,aud_g09
20:39:27  58  ,aud_g10
20:39:27  59  ,aud_g11
20:39:27  60  ,aud_g12
20:39:27  61  ,aud_g13
20:39:27  62  ,aud_g14
20:39:27  63  ,aud_g15
20:39:27  64  ,aud_g16
20:39:27  65  ,aud_g17
20:39:27  66  ,aud_g18
20:39:27  67  ,aud_g19
20:39:27  68  ,aud_g20
20:39:27  69  ,aud_g21
20:39:27  70  ,aud_g22
20:39:27  71  ,aud_g23
20:39:27  72  ,aud_g24
20:39:27  73  ,aud_g25
20:39:27  74  ,aud_g26
20:39:27  75  ,aud_g27
20:39:27  76  ,aud_g28
20:39:27  77  ,aud_g29
20:39:27  78  ,aud_g30
20:39:27  79  ,aud_g31
20:39:27  80  ,aud_g32
20:39:27  81  ,aud_g33
20:39:27  82  ,aud_g34
20:39:27  83  ,aud_g35
20:39:27  84  ,aud_g36
20:39:27  85  ,aud_g37
20:39:27  86  ,aud_g38
20:39:27  87  ,aud_g39
20:39:27  88  ,aud_g40
20:39:27  89  ,aud_g41
20:39:27  90  ,gbp_g00
20:39:27  91  ,gbp_g01
20:39:27  92  ,gbp_g02
20:39:27  93  ,gbp_g03
20:39:27  94  ,gbp_g04
20:39:27  95  ,gbp_g05
20:39:27  96  ,gbp_g06
20:39:27  97  ,gbp_g07
20:39:27  98  ,gbp_g08
20:39:27  99  ,gbp_g09
20:39:27 100  ,gbp_g10
20:39:27 101  ,gbp_g11
20:39:27 102  ,gbp_g12
20:39:27 103  ,gbp_g13
20:39:27 104  ,gbp_g14
20:39:27 105  ,gbp_g15
20:39:27 106  ,gbp_g16
20:39:27 107  ,gbp_g17
20:39:27 108  ,gbp_g18
20:39:27 109  ,gbp_g19
20:39:27 110  ,gbp_g20
20:39:27 111  ,gbp_g21
20:39:27 112  ,gbp_g22
20:39:27 113  ,gbp_g23
20:39:27 114  ,gbp_g24
20:39:27 115  ,gbp_g25
20:39:27 116  ,gbp_g26
20:39:27 117  ,gbp_g27
20:39:27 118  ,gbp_g28
20:39:27 119  ,gbp_g29
20:39:27 120  ,gbp_g30
20:39:27 121  ,gbp_g31
20:39:27 122  ,gbp_g32
20:39:27 123  ,gbp_g33
20:39:27 124  ,gbp_g34
20:39:27 125  ,gbp_g35
20:39:27 126  ,gbp_g36
20:39:27 127  ,gbp_g37
20:39:27 128  ,gbp_g38
20:39:27 129  ,gbp_g39
20:39:27 130  ,gbp_g40
20:39:27 131  ,gbp_g41
20:39:27 132  ,jpy_g00
20:39:27 133  ,jpy_g01
20:39:27 134  ,jpy_g02
20:39:27 135  ,jpy_g03
20:39:27 136  ,jpy_g04
20:39:27 137  ,jpy_g05
20:39:27 138  ,jpy_g06
20:39:27 139  ,jpy_g07
20:39:27 140  ,jpy_g08
20:39:27 141  ,jpy_g09
20:39:27 142  ,jpy_g10
20:39:27 143  ,jpy_g11
20:39:27 144  ,jpy_g12
20:39:27 145  ,jpy_g13
20:39:27 146  ,jpy_g14
20:39:27 147  ,jpy_g15
20:39:27 148  ,jpy_g16
20:39:27 149  ,jpy_g17
20:39:27 150  ,jpy_g18
20:39:27 151  ,jpy_g19
20:39:27 152  ,jpy_g20
20:39:27 153  ,jpy_g21
20:39:27 154  ,jpy_g22
20:39:27 155  ,jpy_g23
20:39:27 156  ,jpy_g24
20:39:27 157  ,jpy_g25
20:39:27 158  ,jpy_g26
20:39:27 159  ,jpy_g27
20:39:27 160  ,jpy_g28
20:39:27 161  ,jpy_g29
20:39:27 162  ,jpy_g30
20:39:27 163  ,jpy_g31
20:39:27 164  ,jpy_g32
20:39:27 165  ,jpy_g33
20:39:27 166  ,jpy_g34
20:39:27 167  ,jpy_g35
20:39:27 168  ,jpy_g36
20:39:27 169  ,jpy_g37
20:39:27 170  ,jpy_g38
20:39:27 171  ,jpy_g39
20:39:27 172  ,jpy_g40
20:39:27 173  ,jpy_g41
20:39:27 174  ,cad_g00
20:39:27 175  ,cad_g01
20:39:27 176  ,cad_g02
20:39:27 177  ,cad_g03
20:39:27 178  ,cad_g04
20:39:27 179  ,cad_g05
20:39:27 180  ,cad_g06
20:39:27 181  ,cad_g07
20:39:27 182  ,cad_g08
20:39:27 183  ,cad_g09
20:39:27 184  ,cad_g10
20:39:27 185  ,cad_g11
20:39:27 186  ,cad_g12
20:39:27 187  ,cad_g13
20:39:27 188  ,cad_g14
20:39:27 189  ,cad_g15
20:39:27 190  ,cad_g16
20:39:27 191  ,cad_g17
20:39:27 192  ,cad_g18
20:39:27 193  ,cad_g19
20:39:27 194  ,cad_g20
20:39:27 195  ,cad_g21
20:39:27 196  ,cad_g22
20:39:27 197  ,cad_g23
20:39:27 198  ,cad_g24
20:39:27 199  ,cad_g25
20:39:27 200  ,cad_g26
20:39:27 201  ,cad_g27
20:39:27 202  ,cad_g28
20:39:27 203  ,cad_g29
20:39:27 204  ,cad_g30
20:39:27 205  ,cad_g31
20:39:27 206  ,cad_g32
20:39:27 207  ,cad_g33
20:39:27 208  ,cad_g34
20:39:27 209  ,cad_g35
20:39:27 210  ,cad_g36
20:39:27 211  ,cad_g37
20:39:27 212  ,cad_g38
20:39:27 213  ,cad_g39
20:39:27 214  ,cad_g40
20:39:27 215  ,cad_g41
20:39:27 216  ,chf_g00
20:39:27 217  ,chf_g01
20:39:27 218  ,chf_g02
20:39:27 219  ,chf_g03
20:39:27 220  ,chf_g04
20:39:27 221  ,chf_g05
20:39:27 222  ,chf_g06
20:39:27 223  ,chf_g07
20:39:27 224  ,chf_g08
20:39:27 225  ,chf_g09
20:39:27 226  ,chf_g10
20:39:27 227  ,chf_g11
20:39:27 228  ,chf_g12
20:39:27 229  ,chf_g13
20:39:27 230  ,chf_g14
20:39:27 231  ,chf_g15
20:39:27 232  ,chf_g16
20:39:27 233  ,chf_g17
20:39:27 234  ,chf_g18
20:39:27 235  ,chf_g19
20:39:27 236  ,chf_g20
20:39:27 237  ,chf_g21
20:39:27 238  ,chf_g22
20:39:27 239  ,chf_g23
20:39:27 240  ,chf_g24
20:39:27 241  ,chf_g25
20:39:27 242  ,chf_g26
20:39:27 243  ,chf_g27
20:39:27 244  ,chf_g28
20:39:27 245  ,chf_g29
20:39:27 246  ,chf_g30
20:39:27 247  ,chf_g31
20:39:27 248  ,chf_g32
20:39:27 249  ,chf_g33
20:39:27 250  ,chf_g34
20:39:27 251  ,chf_g35
20:39:27 252  ,chf_g36
20:39:27 253  ,chf_g37
20:39:27 254  ,chf_g38
20:39:27 255  ,chf_g39
20:39:27 256  ,chf_g40
20:39:27 257  ,chf_g41
20:39:27 258  FROM aud_ms6 m
20:39:27 259  WHERE gatt IN('nup','up')
20:39:27 260  AND 1+m.ydate < '&1'||' '||'&2'
20:39:27 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'20:15:00'

View created.

Elapsed: 00:00:00.15
20:39:27 SQL> 
20:39:27 SQL> -- rpt
20:39:27 SQL> 
20:39:27 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
20:39:27   2  
20:39:27 SQL> SELECT MAX(prdate) FROM bme
20:39:27   2  
20:39:27 SQL> -- Now build model from bme and score sme
20:39:27 SQL> @score1.sql
20:39:27 SQL> -- score1.sql
20:39:27 SQL> 
20:39:27 SQL> -- Does the 1st SVM score
20:39:27 SQL> 
20:39:27 SQL> -- Fill up svmc_apply_prep
20:39:27 SQL> @score.sql
20:39:27 SQL> --
20:39:27 SQL> -- score.sql
20:39:27 SQL> --
20:39:27 SQL> 
20:39:27 SQL> -- usage: score.sql
20:39:27 SQL> 
20:39:27 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:39:27 SQL> 
20:39:27 SQL> DEFINE target	= 'gatt'
20:39:27 SQL> DEFINE model_name = 'forex15'
20:39:27 SQL> DEFINE bldtable	= 'bme'
20:39:27 SQL> DEFINE scoretable = 'sme'
20:39:27 SQL> DEFINE case_id	= 'prdate'
20:39:27 SQL> 
20:39:27 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:39:27 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:39:27 SQL> 
20:39:27 SQL> -- Builds an SVM model using pl/sql.
20:39:27 SQL> 
20:39:27 SQL> -----------------------------------------------------------------------
20:39:27 SQL> --			    BUILD THE MODEL
20:39:27 SQL> -----------------------------------------------------------------------
20:39:27 SQL> 
20:39:27 SQL> -- Cleanup old build data preparation objects for repeat runs
20:39:27 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
20:39:27 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:39:27 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
20:39:27 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
20:39:27 SQL> 
20:39:27 SQL> 
20:39:27 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:39:27 SQL> --
20:39:27 SQL> -- DROP	TABLE svmc_settings ;
20:39:27 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:39:27 SQL> -- DELETE svmc_settings;
20:39:27 SQL> 
20:39:27 SQL> -- The default classification algorithm is Naive Bayes. So override
20:39:27 SQL> -- this choice to SVM using a settings table.
20:39:27 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:39:27 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:39:27 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:39:27 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:39:27 SQL> -- models.
20:39:27 SQL> --
20:39:27 SQL> 
20:39:27 SQL> -- Do this once and then comment it out.
20:39:27 SQL> -- That makes script go faster.
20:39:27 SQL> -- BEGIN
20:39:27 SQL> -- -- Populate settings table
20:39:27 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:39:27 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:39:27 SQL> --
20:39:27 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:39:27 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:39:27 SQL> --
20:39:27 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:39:27 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:39:27 SQL> --   COMMIT;
20:39:27 SQL> -- END;
20:39:27 SQL> -- /
20:39:27 SQL> 
20:39:27 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:39:27 SQL> 
20:39:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:39:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:39:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
20:39:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:39:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:39:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:39:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:39:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:39:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:39:27 SQL> 
20:39:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:39:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:39:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
20:39:27 SQL> 
20:39:27 SQL> --------------------------------
20:39:27 SQL> -- PREPARE BUILD (TRAINING) DATA
20:39:27 SQL> --
20:39:27 SQL> 
20:39:27 SQL> -- 1. Missing Value treatment for all Predictors and
20:39:27 SQL> -- 2. Outlier Treatment and
20:39:27 SQL> -- 3. Normalization are performed below.
20:39:27 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:39:27 SQL> --    normalized here.
20:39:27 SQL> 
20:39:27 SQL> BEGIN
20:39:27   2  	-- Perform missing value treatment for all predictors
20:39:27   3  	-- create miss tables
20:39:27   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:39:27   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:39:27   6  
20:39:27   7  	-- populate miss tables
20:39:27   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:39:27   9  	  miss_table_name => 'svmc_miss_num',
20:39:27  10  	  data_table_name => '&bldtable',
20:39:27  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:39:27  12  
20:39:27  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:39:27  14  	  miss_table_name => 'svmc_miss_cat',
20:39:27  15  	  data_table_name => '&bldtable',
20:39:27  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:39:27  17  
20:39:27  18  	-- xform input data to replace missing values
20:39:27  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:39:27  20  	  miss_table_name => 'svmc_miss_num',
20:39:27  21  	  data_table_name => '&bldtable',
20:39:27  22  	  xform_view_name => 'xformed_build_miss_num');
20:39:27  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:39:27  24  	  miss_table_name => 'svmc_miss_cat',
20:39:27  25  	  data_table_name => '&bldtable',
20:39:27  26  	  xform_view_name => 'xformed_build_miss_cat');
20:39:27  27  
20:39:27  28  	-- Perform outlier treatment.
20:39:27  29  	-- create clip table
20:39:27  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:39:27  31  
20:39:27  32  	-- populate clip table
20:39:27  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:39:27  34  	  clip_table_name => 'svmc_clip',
20:39:27  35  	  data_table_name => '&bldtable',
20:39:27  36  	  tail_frac	  => 0.025,
20:39:27  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:39:27  38  
20:39:27  39  	-- xform input data to winsorized data
20:39:27  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:39:27  41  	  clip_table_name => 'svmc_clip',
20:39:27  42  	  data_table_name => '&bldtable',
20:39:27  43  	  xform_view_name => 'svmc_winsor');
20:39:27  44  
20:39:27  45  	-- create normalization table
20:39:27  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:39:27  47  
20:39:27  48  	-- populate normalization table based on winsorized data
20:39:27  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:39:27  50  	  norm_table_name => 'svmc_norm',
20:39:27  51  	  data_table_name => 'svmc_winsor',
20:39:27  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:39:27  53  
20:39:27  54  	-- normalize the original data
20:39:27  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:39:27  56  	  norm_table_name => 'svmc_norm',
20:39:27  57  	  data_table_name => '&bldtable',
20:39:27  58  	  xform_view_name => 'svmc_build_prep');
20:39:27  59  END;
20:39:27  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.46
20:39:47 SQL> 
20:39:47 SQL> ---------------------
20:39:47 SQL> -- CREATE A NEW MODEL
20:39:47 SQL> --
20:39:47 SQL> -- Cleanup old model with the same name for repeat runs
20:39:47 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:39:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:39:47   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.66
20:39:47 SQL> 
20:39:47 SQL> -- Build a new SVM Model
20:39:47 SQL> BEGIN
20:39:47   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:39:47   3  	  model_name	      => '&model_name',
20:39:47   4  	  mining_function     => dbms_data_mining.classification,
20:39:47   5  	  data_table_name     => 'svmc_build_prep',
20:39:47   6  	  case_id_column_name => '&case_id',
20:39:47   7  	  target_column_name  => '&target',
20:39:47   8  	  settings_table_name => 'svmc_settings');
20:39:47   9  END;
20:39:47  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:33.17
20:40:20 SQL> 
20:40:20 SQL> -----------------------------------------------------------------------
20:40:20 SQL> --			       APPLY/score THE MODEL
20:40:20 SQL> -----------------------------------------------------------------------
20:40:20 SQL> 
20:40:20 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:40:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:40:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:40:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
20:40:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:40:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:40:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
20:40:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:40:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:40:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
20:40:21 SQL> -----------------------
20:40:21 SQL> -- PREPARE SCORING DATA
20:40:21 SQL> --
20:40:21 SQL> -- If the data for model creation has been prepared, then the data
20:40:21 SQL> -- to be scored using the model must be prepared in the same manner
20:40:21 SQL> -- in order to obtain meaningful results.
20:40:21 SQL> --
20:40:21 SQL> -- 1. Missing Value treatment for all Predictors and
20:40:21 SQL> -- 2. Normalization
20:40:21 SQL> -- No outlier treatment will be performed during test and apply. The
20:40:21 SQL> -- normalization step is sufficient, since the normalization parameters
20:40:21 SQL> -- already capture the effects of outlier treatment done with build data.
20:40:21 SQL> --
20:40:21 SQL> BEGIN
20:40:21   2  	-- Xform Test data to replace missing values
20:40:21   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:40:21   4  	  miss_table_name => 'svmc_miss_num',
20:40:21   5  	  data_table_name => '&scoretable',
20:40:21   6  	  xform_view_name => 'xformed_apply_miss_num');
20:40:21   7  
20:40:21   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:40:21   9  	  miss_table_name => 'svmc_miss_cat',
20:40:21  10  	  data_table_name => '&scoretable',
20:40:21  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:40:21  12  
20:40:21  13  	-- Normalize the data to be scored
20:40:21  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:40:21  15  	  norm_table_name => 'svmc_norm',
20:40:21  16  	  data_table_name => '&scoretable',
20:40:21  17  	  xform_view_name => 'svmc_apply_prep');
20:40:21  18  END;
20:40:21  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.30
20:40:22 SQL> 
20:40:22 SQL> -- Use same model_name used in score.sql
20:40:22 SQL> DEFINE model_name = 'forex15'
20:40:22 SQL> 
20:40:22 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
20:40:22 SQL> 
20:40:22 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
20:40:22 SQL> 
20:40:22 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
20:40:22   2  SELECT
20:40:22   3  prdate
20:40:22   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:40:22   5  ,sysdate
20:40:22   6  ,SUBSTR(prdate,1,3)pair
20:40:22   7  ,SUBSTR(prdate,4,19)ydate
20:40:22   8  FROM svmc_apply_prep
20:40:22   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.24
20:40:22 SQL> @aud_score1day.sql  2011-01-06 20:20:00
20:40:22 SQL> --
20:40:22 SQL> -- aud_score1day.sql
20:40:22 SQL> --
20:40:22 SQL> 
20:40:22 SQL> CREATE OR REPLACE VIEW sme AS
20:40:22   2  SELECT
20:40:22   3  'aud'||m.ydate prdate
20:40:22   4  ,NULL gatt
20:40:22   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:40:22   6  ,eur_g00
20:40:22   7  ,eur_g01
20:40:22   8  ,eur_g02
20:40:22   9  ,eur_g03
20:40:22  10  ,eur_g04
20:40:22  11  ,eur_g05
20:40:22  12  ,eur_g06
20:40:22  13  ,eur_g07
20:40:22  14  ,eur_g08
20:40:22  15  ,eur_g09
20:40:22  16  ,eur_g10
20:40:22  17  ,eur_g11
20:40:22  18  ,eur_g12
20:40:22  19  ,eur_g13
20:40:22  20  ,eur_g14
20:40:22  21  ,eur_g15
20:40:22  22  ,eur_g16
20:40:22  23  ,eur_g17
20:40:22  24  ,eur_g18
20:40:22  25  ,eur_g19
20:40:22  26  ,eur_g20
20:40:22  27  ,eur_g21
20:40:22  28  ,eur_g22
20:40:22  29  ,eur_g23
20:40:22  30  ,eur_g24
20:40:22  31  ,eur_g25
20:40:22  32  ,eur_g26
20:40:22  33  ,eur_g27
20:40:22  34  ,eur_g28
20:40:22  35  ,eur_g29
20:40:22  36  ,eur_g30
20:40:22  37  ,eur_g31
20:40:22  38  ,eur_g32
20:40:22  39  ,eur_g33
20:40:22  40  ,eur_g34
20:40:22  41  ,eur_g35
20:40:22  42  ,eur_g36
20:40:22  43  ,eur_g37
20:40:22  44  ,eur_g38
20:40:22  45  ,eur_g39
20:40:22  46  ,eur_g40
20:40:22  47  ,eur_g41
20:40:22  48  ,aud_g00
20:40:22  49  ,aud_g01
20:40:22  50  ,aud_g02
20:40:22  51  ,aud_g03
20:40:22  52  ,aud_g04
20:40:22  53  ,aud_g05
20:40:22  54  ,aud_g06
20:40:22  55  ,aud_g07
20:40:22  56  ,aud_g08
20:40:22  57  ,aud_g09
20:40:22  58  ,aud_g10
20:40:22  59  ,aud_g11
20:40:22  60  ,aud_g12
20:40:22  61  ,aud_g13
20:40:22  62  ,aud_g14
20:40:22  63  ,aud_g15
20:40:22  64  ,aud_g16
20:40:22  65  ,aud_g17
20:40:22  66  ,aud_g18
20:40:22  67  ,aud_g19
20:40:22  68  ,aud_g20
20:40:22  69  ,aud_g21
20:40:22  70  ,aud_g22
20:40:22  71  ,aud_g23
20:40:22  72  ,aud_g24
20:40:22  73  ,aud_g25
20:40:22  74  ,aud_g26
20:40:22  75  ,aud_g27
20:40:22  76  ,aud_g28
20:40:22  77  ,aud_g29
20:40:22  78  ,aud_g30
20:40:22  79  ,aud_g31
20:40:22  80  ,aud_g32
20:40:22  81  ,aud_g33
20:40:22  82  ,aud_g34
20:40:22  83  ,aud_g35
20:40:22  84  ,aud_g36
20:40:22  85  ,aud_g37
20:40:22  86  ,aud_g38
20:40:22  87  ,aud_g39
20:40:22  88  ,aud_g40
20:40:22  89  ,aud_g41
20:40:22  90  ,gbp_g00
20:40:22  91  ,gbp_g01
20:40:22  92  ,gbp_g02
20:40:22  93  ,gbp_g03
20:40:22  94  ,gbp_g04
20:40:22  95  ,gbp_g05
20:40:22  96  ,gbp_g06
20:40:22  97  ,gbp_g07
20:40:22  98  ,gbp_g08
20:40:22  99  ,gbp_g09
20:40:22 100  ,gbp_g10
20:40:22 101  ,gbp_g11
20:40:22 102  ,gbp_g12
20:40:22 103  ,gbp_g13
20:40:22 104  ,gbp_g14
20:40:22 105  ,gbp_g15
20:40:22 106  ,gbp_g16
20:40:22 107  ,gbp_g17
20:40:22 108  ,gbp_g18
20:40:22 109  ,gbp_g19
20:40:22 110  ,gbp_g20
20:40:22 111  ,gbp_g21
20:40:22 112  ,gbp_g22
20:40:22 113  ,gbp_g23
20:40:22 114  ,gbp_g24
20:40:22 115  ,gbp_g25
20:40:22 116  ,gbp_g26
20:40:22 117  ,gbp_g27
20:40:22 118  ,gbp_g28
20:40:22 119  ,gbp_g29
20:40:22 120  ,gbp_g30
20:40:22 121  ,gbp_g31
20:40:22 122  ,gbp_g32
20:40:22 123  ,gbp_g33
20:40:22 124  ,gbp_g34
20:40:22 125  ,gbp_g35
20:40:22 126  ,gbp_g36
20:40:22 127  ,gbp_g37
20:40:22 128  ,gbp_g38
20:40:22 129  ,gbp_g39
20:40:22 130  ,gbp_g40
20:40:22 131  ,gbp_g41
20:40:22 132  ,jpy_g00
20:40:22 133  ,jpy_g01
20:40:22 134  ,jpy_g02
20:40:22 135  ,jpy_g03
20:40:22 136  ,jpy_g04
20:40:22 137  ,jpy_g05
20:40:22 138  ,jpy_g06
20:40:22 139  ,jpy_g07
20:40:22 140  ,jpy_g08
20:40:22 141  ,jpy_g09
20:40:22 142  ,jpy_g10
20:40:22 143  ,jpy_g11
20:40:22 144  ,jpy_g12
20:40:22 145  ,jpy_g13
20:40:22 146  ,jpy_g14
20:40:22 147  ,jpy_g15
20:40:22 148  ,jpy_g16
20:40:22 149  ,jpy_g17
20:40:22 150  ,jpy_g18
20:40:22 151  ,jpy_g19
20:40:22 152  ,jpy_g20
20:40:22 153  ,jpy_g21
20:40:22 154  ,jpy_g22
20:40:22 155  ,jpy_g23
20:40:22 156  ,jpy_g24
20:40:22 157  ,jpy_g25
20:40:22 158  ,jpy_g26
20:40:22 159  ,jpy_g27
20:40:22 160  ,jpy_g28
20:40:22 161  ,jpy_g29
20:40:22 162  ,jpy_g30
20:40:22 163  ,jpy_g31
20:40:22 164  ,jpy_g32
20:40:22 165  ,jpy_g33
20:40:22 166  ,jpy_g34
20:40:22 167  ,jpy_g35
20:40:22 168  ,jpy_g36
20:40:22 169  ,jpy_g37
20:40:22 170  ,jpy_g38
20:40:22 171  ,jpy_g39
20:40:22 172  ,jpy_g40
20:40:22 173  ,jpy_g41
20:40:22 174  ,cad_g00
20:40:22 175  ,cad_g01
20:40:22 176  ,cad_g02
20:40:22 177  ,cad_g03
20:40:22 178  ,cad_g04
20:40:22 179  ,cad_g05
20:40:22 180  ,cad_g06
20:40:22 181  ,cad_g07
20:40:22 182  ,cad_g08
20:40:22 183  ,cad_g09
20:40:22 184  ,cad_g10
20:40:22 185  ,cad_g11
20:40:22 186  ,cad_g12
20:40:22 187  ,cad_g13
20:40:22 188  ,cad_g14
20:40:22 189  ,cad_g15
20:40:22 190  ,cad_g16
20:40:22 191  ,cad_g17
20:40:22 192  ,cad_g18
20:40:22 193  ,cad_g19
20:40:22 194  ,cad_g20
20:40:22 195  ,cad_g21
20:40:22 196  ,cad_g22
20:40:22 197  ,cad_g23
20:40:22 198  ,cad_g24
20:40:22 199  ,cad_g25
20:40:22 200  ,cad_g26
20:40:22 201  ,cad_g27
20:40:22 202  ,cad_g28
20:40:22 203  ,cad_g29
20:40:22 204  ,cad_g30
20:40:22 205  ,cad_g31
20:40:22 206  ,cad_g32
20:40:22 207  ,cad_g33
20:40:22 208  ,cad_g34
20:40:22 209  ,cad_g35
20:40:22 210  ,cad_g36
20:40:22 211  ,cad_g37
20:40:22 212  ,cad_g38
20:40:22 213  ,cad_g39
20:40:22 214  ,cad_g40
20:40:22 215  ,cad_g41
20:40:22 216  ,chf_g00
20:40:22 217  ,chf_g01
20:40:22 218  ,chf_g02
20:40:22 219  ,chf_g03
20:40:22 220  ,chf_g04
20:40:22 221  ,chf_g05
20:40:22 222  ,chf_g06
20:40:22 223  ,chf_g07
20:40:22 224  ,chf_g08
20:40:22 225  ,chf_g09
20:40:22 226  ,chf_g10
20:40:22 227  ,chf_g11
20:40:22 228  ,chf_g12
20:40:22 229  ,chf_g13
20:40:22 230  ,chf_g14
20:40:22 231  ,chf_g15
20:40:22 232  ,chf_g16
20:40:22 233  ,chf_g17
20:40:22 234  ,chf_g18
20:40:22 235  ,chf_g19
20:40:22 236  ,chf_g20
20:40:22 237  ,chf_g21
20:40:22 238  ,chf_g22
20:40:22 239  ,chf_g23
20:40:22 240  ,chf_g24
20:40:22 241  ,chf_g25
20:40:22 242  ,chf_g26
20:40:22 243  ,chf_g27
20:40:22 244  ,chf_g28
20:40:22 245  ,chf_g29
20:40:22 246  ,chf_g30
20:40:22 247  ,chf_g31
20:40:22 248  ,chf_g32
20:40:22 249  ,chf_g33
20:40:22 250  ,chf_g34
20:40:22 251  ,chf_g35
20:40:22 252  ,chf_g36
20:40:22 253  ,chf_g37
20:40:22 254  ,chf_g38
20:40:22 255  ,chf_g39
20:40:22 256  ,chf_g40
20:40:22 257  ,chf_g41
20:40:22 258  FROM aud_ms6 m
20:40:22 259  WHERE m.ydate = '&1'||' '||'&2'
20:40:22 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'20:20:00'

View created.

Elapsed: 00:00:00.13
20:40:22 SQL> 
20:40:22 SQL> -- rpt
20:40:22 SQL> -- We should see just 1 row:
20:40:22 SQL> 
20:40:22 SQL> SELECT COUNT(prdate) FROM sme
20:40:22   2  
20:40:22 SQL> -- Build the model:
20:40:22 SQL> CREATE OR REPLACE VIEW bme AS
20:40:22   2  SELECT
20:40:22   3  'aud'||m.ydate prdate
20:40:22   4  ,gatt
20:40:22   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:40:22   6  ,eur_g00
20:40:22   7  ,eur_g01
20:40:22   8  ,eur_g02
20:40:22   9  ,eur_g03
20:40:22  10  ,eur_g04
20:40:22  11  ,eur_g05
20:40:22  12  ,eur_g06
20:40:22  13  ,eur_g07
20:40:22  14  ,eur_g08
20:40:22  15  ,eur_g09
20:40:22  16  ,eur_g10
20:40:22  17  ,eur_g11
20:40:22  18  ,eur_g12
20:40:22  19  ,eur_g13
20:40:22  20  ,eur_g14
20:40:22  21  ,eur_g15
20:40:22  22  ,eur_g16
20:40:22  23  ,eur_g17
20:40:22  24  ,eur_g18
20:40:22  25  ,eur_g19
20:40:22  26  ,eur_g20
20:40:22  27  ,eur_g21
20:40:22  28  ,eur_g22
20:40:22  29  ,eur_g23
20:40:22  30  ,eur_g24
20:40:22  31  ,eur_g25
20:40:22  32  ,eur_g26
20:40:22  33  ,eur_g27
20:40:22  34  ,eur_g28
20:40:22  35  ,eur_g29
20:40:22  36  ,eur_g30
20:40:22  37  ,eur_g31
20:40:22  38  ,eur_g32
20:40:22  39  ,eur_g33
20:40:22  40  ,eur_g34
20:40:22  41  ,eur_g35
20:40:22  42  ,eur_g36
20:40:22  43  ,eur_g37
20:40:22  44  ,eur_g38
20:40:22  45  ,eur_g39
20:40:22  46  ,eur_g40
20:40:22  47  ,eur_g41
20:40:22  48  ,aud_g00
20:40:22  49  ,aud_g01
20:40:22  50  ,aud_g02
20:40:22  51  ,aud_g03
20:40:22  52  ,aud_g04
20:40:22  53  ,aud_g05
20:40:22  54  ,aud_g06
20:40:22  55  ,aud_g07
20:40:22  56  ,aud_g08
20:40:22  57  ,aud_g09
20:40:22  58  ,aud_g10
20:40:22  59  ,aud_g11
20:40:22  60  ,aud_g12
20:40:22  61  ,aud_g13
20:40:22  62  ,aud_g14
20:40:22  63  ,aud_g15
20:40:22  64  ,aud_g16
20:40:22  65  ,aud_g17
20:40:22  66  ,aud_g18
20:40:22  67  ,aud_g19
20:40:22  68  ,aud_g20
20:40:22  69  ,aud_g21
20:40:22  70  ,aud_g22
20:40:22  71  ,aud_g23
20:40:22  72  ,aud_g24
20:40:22  73  ,aud_g25
20:40:22  74  ,aud_g26
20:40:22  75  ,aud_g27
20:40:22  76  ,aud_g28
20:40:22  77  ,aud_g29
20:40:22  78  ,aud_g30
20:40:22  79  ,aud_g31
20:40:22  80  ,aud_g32
20:40:22  81  ,aud_g33
20:40:22  82  ,aud_g34
20:40:22  83  ,aud_g35
20:40:22  84  ,aud_g36
20:40:22  85  ,aud_g37
20:40:22  86  ,aud_g38
20:40:22  87  ,aud_g39
20:40:22  88  ,aud_g40
20:40:22  89  ,aud_g41
20:40:22  90  ,gbp_g00
20:40:22  91  ,gbp_g01
20:40:22  92  ,gbp_g02
20:40:22  93  ,gbp_g03
20:40:22  94  ,gbp_g04
20:40:22  95  ,gbp_g05
20:40:22  96  ,gbp_g06
20:40:22  97  ,gbp_g07
20:40:22  98  ,gbp_g08
20:40:22  99  ,gbp_g09
20:40:22 100  ,gbp_g10
20:40:22 101  ,gbp_g11
20:40:22 102  ,gbp_g12
20:40:22 103  ,gbp_g13
20:40:22 104  ,gbp_g14
20:40:22 105  ,gbp_g15
20:40:22 106  ,gbp_g16
20:40:22 107  ,gbp_g17
20:40:22 108  ,gbp_g18
20:40:22 109  ,gbp_g19
20:40:22 110  ,gbp_g20
20:40:22 111  ,gbp_g21
20:40:22 112  ,gbp_g22
20:40:22 113  ,gbp_g23
20:40:22 114  ,gbp_g24
20:40:22 115  ,gbp_g25
20:40:22 116  ,gbp_g26
20:40:22 117  ,gbp_g27
20:40:22 118  ,gbp_g28
20:40:22 119  ,gbp_g29
20:40:22 120  ,gbp_g30
20:40:22 121  ,gbp_g31
20:40:22 122  ,gbp_g32
20:40:22 123  ,gbp_g33
20:40:22 124  ,gbp_g34
20:40:22 125  ,gbp_g35
20:40:22 126  ,gbp_g36
20:40:22 127  ,gbp_g37
20:40:22 128  ,gbp_g38
20:40:22 129  ,gbp_g39
20:40:22 130  ,gbp_g40
20:40:22 131  ,gbp_g41
20:40:22 132  ,jpy_g00
20:40:22 133  ,jpy_g01
20:40:22 134  ,jpy_g02
20:40:22 135  ,jpy_g03
20:40:22 136  ,jpy_g04
20:40:22 137  ,jpy_g05
20:40:22 138  ,jpy_g06
20:40:22 139  ,jpy_g07
20:40:22 140  ,jpy_g08
20:40:22 141  ,jpy_g09
20:40:22 142  ,jpy_g10
20:40:22 143  ,jpy_g11
20:40:22 144  ,jpy_g12
20:40:22 145  ,jpy_g13
20:40:22 146  ,jpy_g14
20:40:22 147  ,jpy_g15
20:40:22 148  ,jpy_g16
20:40:22 149  ,jpy_g17
20:40:22 150  ,jpy_g18
20:40:22 151  ,jpy_g19
20:40:22 152  ,jpy_g20
20:40:22 153  ,jpy_g21
20:40:22 154  ,jpy_g22
20:40:22 155  ,jpy_g23
20:40:22 156  ,jpy_g24
20:40:22 157  ,jpy_g25
20:40:22 158  ,jpy_g26
20:40:22 159  ,jpy_g27
20:40:22 160  ,jpy_g28
20:40:22 161  ,jpy_g29
20:40:22 162  ,jpy_g30
20:40:22 163  ,jpy_g31
20:40:22 164  ,jpy_g32
20:40:22 165  ,jpy_g33
20:40:22 166  ,jpy_g34
20:40:22 167  ,jpy_g35
20:40:22 168  ,jpy_g36
20:40:22 169  ,jpy_g37
20:40:22 170  ,jpy_g38
20:40:22 171  ,jpy_g39
20:40:22 172  ,jpy_g40
20:40:22 173  ,jpy_g41
20:40:22 174  ,cad_g00
20:40:22 175  ,cad_g01
20:40:22 176  ,cad_g02
20:40:22 177  ,cad_g03
20:40:22 178  ,cad_g04
20:40:22 179  ,cad_g05
20:40:22 180  ,cad_g06
20:40:22 181  ,cad_g07
20:40:22 182  ,cad_g08
20:40:22 183  ,cad_g09
20:40:22 184  ,cad_g10
20:40:22 185  ,cad_g11
20:40:22 186  ,cad_g12
20:40:22 187  ,cad_g13
20:40:22 188  ,cad_g14
20:40:22 189  ,cad_g15
20:40:22 190  ,cad_g16
20:40:22 191  ,cad_g17
20:40:22 192  ,cad_g18
20:40:22 193  ,cad_g19
20:40:22 194  ,cad_g20
20:40:22 195  ,cad_g21
20:40:22 196  ,cad_g22
20:40:22 197  ,cad_g23
20:40:22 198  ,cad_g24
20:40:22 199  ,cad_g25
20:40:22 200  ,cad_g26
20:40:22 201  ,cad_g27
20:40:22 202  ,cad_g28
20:40:22 203  ,cad_g29
20:40:22 204  ,cad_g30
20:40:22 205  ,cad_g31
20:40:22 206  ,cad_g32
20:40:22 207  ,cad_g33
20:40:22 208  ,cad_g34
20:40:22 209  ,cad_g35
20:40:22 210  ,cad_g36
20:40:22 211  ,cad_g37
20:40:22 212  ,cad_g38
20:40:22 213  ,cad_g39
20:40:22 214  ,cad_g40
20:40:22 215  ,cad_g41
20:40:23 216  ,chf_g00
20:40:23 217  ,chf_g01
20:40:23 218  ,chf_g02
20:40:23 219  ,chf_g03
20:40:23 220  ,chf_g04
20:40:23 221  ,chf_g05
20:40:23 222  ,chf_g06
20:40:23 223  ,chf_g07
20:40:23 224  ,chf_g08
20:40:23 225  ,chf_g09
20:40:23 226  ,chf_g10
20:40:23 227  ,chf_g11
20:40:23 228  ,chf_g12
20:40:23 229  ,chf_g13
20:40:23 230  ,chf_g14
20:40:23 231  ,chf_g15
20:40:23 232  ,chf_g16
20:40:23 233  ,chf_g17
20:40:23 234  ,chf_g18
20:40:23 235  ,chf_g19
20:40:23 236  ,chf_g20
20:40:23 237  ,chf_g21
20:40:23 238  ,chf_g22
20:40:23 239  ,chf_g23
20:40:23 240  ,chf_g24
20:40:23 241  ,chf_g25
20:40:23 242  ,chf_g26
20:40:23 243  ,chf_g27
20:40:23 244  ,chf_g28
20:40:23 245  ,chf_g29
20:40:23 246  ,chf_g30
20:40:23 247  ,chf_g31
20:40:23 248  ,chf_g32
20:40:23 249  ,chf_g33
20:40:23 250  ,chf_g34
20:40:23 251  ,chf_g35
20:40:23 252  ,chf_g36
20:40:23 253  ,chf_g37
20:40:23 254  ,chf_g38
20:40:23 255  ,chf_g39
20:40:23 256  ,chf_g40
20:40:23 257  ,chf_g41
20:40:23 258  FROM aud_ms6 m
20:40:23 259  WHERE gatt IN('nup','up')
20:40:23 260  AND 1+m.ydate < '&1'||' '||'&2'
20:40:23 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'20:20:00'

View created.

Elapsed: 00:00:00.11
20:40:23 SQL> 
20:40:23 SQL> -- rpt
20:40:23 SQL> 
20:40:23 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
20:40:23   2  
20:40:23 SQL> SELECT MAX(prdate) FROM bme
20:40:23   2  
20:40:23 SQL> -- Now build model from bme and score sme
20:40:23 SQL> @score1.sql
20:40:23 SQL> -- score1.sql
20:40:23 SQL> 
20:40:23 SQL> -- Does the 1st SVM score
20:40:23 SQL> 
20:40:23 SQL> -- Fill up svmc_apply_prep
20:40:23 SQL> @score.sql
20:40:23 SQL> --
20:40:23 SQL> -- score.sql
20:40:23 SQL> --
20:40:23 SQL> 
20:40:23 SQL> -- usage: score.sql
20:40:23 SQL> 
20:40:23 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:40:23 SQL> 
20:40:23 SQL> DEFINE target	= 'gatt'
20:40:23 SQL> DEFINE model_name = 'forex15'
20:40:23 SQL> DEFINE bldtable	= 'bme'
20:40:23 SQL> DEFINE scoretable = 'sme'
20:40:23 SQL> DEFINE case_id	= 'prdate'
20:40:23 SQL> 
20:40:23 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:40:23 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:40:23 SQL> 
20:40:23 SQL> -- Builds an SVM model using pl/sql.
20:40:23 SQL> 
20:40:23 SQL> -----------------------------------------------------------------------
20:40:23 SQL> --			    BUILD THE MODEL
20:40:23 SQL> -----------------------------------------------------------------------
20:40:23 SQL> 
20:40:23 SQL> -- Cleanup old build data preparation objects for repeat runs
20:40:23 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
20:40:23 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:40:23 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
20:40:23 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
20:40:23 SQL> 
20:40:23 SQL> 
20:40:23 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:40:23 SQL> --
20:40:23 SQL> -- DROP	TABLE svmc_settings ;
20:40:23 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:40:23 SQL> -- DELETE svmc_settings;
20:40:23 SQL> 
20:40:23 SQL> -- The default classification algorithm is Naive Bayes. So override
20:40:23 SQL> -- this choice to SVM using a settings table.
20:40:23 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:40:23 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:40:23 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:40:23 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:40:23 SQL> -- models.
20:40:23 SQL> --
20:40:23 SQL> 
20:40:23 SQL> -- Do this once and then comment it out.
20:40:23 SQL> -- That makes script go faster.
20:40:23 SQL> -- BEGIN
20:40:23 SQL> -- -- Populate settings table
20:40:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:40:23 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:40:23 SQL> --
20:40:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:40:23 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:40:23 SQL> --
20:40:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:40:23 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:40:23 SQL> --   COMMIT;
20:40:23 SQL> -- END;
20:40:23 SQL> -- /
20:40:23 SQL> 
20:40:23 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
20:40:23 SQL> 
20:40:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:40:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:40:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:40:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:40:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:40:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
20:40:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:40:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:40:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:40:23 SQL> 
20:40:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:40:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:40:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:40:23 SQL> 
20:40:23 SQL> --------------------------------
20:40:23 SQL> -- PREPARE BUILD (TRAINING) DATA
20:40:23 SQL> --
20:40:23 SQL> 
20:40:23 SQL> -- 1. Missing Value treatment for all Predictors and
20:40:23 SQL> -- 2. Outlier Treatment and
20:40:23 SQL> -- 3. Normalization are performed below.
20:40:23 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:40:23 SQL> --    normalized here.
20:40:23 SQL> 
20:40:23 SQL> BEGIN
20:40:23   2  	-- Perform missing value treatment for all predictors
20:40:23   3  	-- create miss tables
20:40:23   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:40:23   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:40:23   6  
20:40:23   7  	-- populate miss tables
20:40:23   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:40:23   9  	  miss_table_name => 'svmc_miss_num',
20:40:23  10  	  data_table_name => '&bldtable',
20:40:23  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:40:23  12  
20:40:23  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:40:23  14  	  miss_table_name => 'svmc_miss_cat',
20:40:23  15  	  data_table_name => '&bldtable',
20:40:23  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:40:23  17  
20:40:23  18  	-- xform input data to replace missing values
20:40:23  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:40:23  20  	  miss_table_name => 'svmc_miss_num',
20:40:23  21  	  data_table_name => '&bldtable',
20:40:23  22  	  xform_view_name => 'xformed_build_miss_num');
20:40:23  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:40:23  24  	  miss_table_name => 'svmc_miss_cat',
20:40:23  25  	  data_table_name => '&bldtable',
20:40:23  26  	  xform_view_name => 'xformed_build_miss_cat');
20:40:23  27  
20:40:23  28  	-- Perform outlier treatment.
20:40:23  29  	-- create clip table
20:40:23  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:40:23  31  
20:40:23  32  	-- populate clip table
20:40:23  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:40:23  34  	  clip_table_name => 'svmc_clip',
20:40:23  35  	  data_table_name => '&bldtable',
20:40:23  36  	  tail_frac	  => 0.025,
20:40:23  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:40:23  38  
20:40:23  39  	-- xform input data to winsorized data
20:40:23  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:40:23  41  	  clip_table_name => 'svmc_clip',
20:40:23  42  	  data_table_name => '&bldtable',
20:40:23  43  	  xform_view_name => 'svmc_winsor');
20:40:23  44  
20:40:23  45  	-- create normalization table
20:40:23  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:40:23  47  
20:40:23  48  	-- populate normalization table based on winsorized data
20:40:23  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:40:23  50  	  norm_table_name => 'svmc_norm',
20:40:23  51  	  data_table_name => 'svmc_winsor',
20:40:23  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:40:23  53  
20:40:23  54  	-- normalize the original data
20:40:23  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:40:23  56  	  norm_table_name => 'svmc_norm',
20:40:23  57  	  data_table_name => '&bldtable',
20:40:23  58  	  xform_view_name => 'svmc_build_prep');
20:40:23  59  END;
20:40:23  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.80
20:40:42 SQL> 
20:40:42 SQL> ---------------------
20:40:42 SQL> -- CREATE A NEW MODEL
20:40:42 SQL> --
20:40:42 SQL> -- Cleanup old model with the same name for repeat runs
20:40:42 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:40:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:40:42   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.51
20:40:43 SQL> 
20:40:43 SQL> -- Build a new SVM Model
20:40:43 SQL> BEGIN
20:40:43   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:40:43   3  	  model_name	      => '&model_name',
20:40:43   4  	  mining_function     => dbms_data_mining.classification,
20:40:43   5  	  data_table_name     => 'svmc_build_prep',
20:40:43   6  	  case_id_column_name => '&case_id',
20:40:43   7  	  target_column_name  => '&target',
20:40:43   8  	  settings_table_name => 'svmc_settings');
20:40:43   9  END;
20:40:43  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.14
20:41:12 SQL> 
20:41:12 SQL> -----------------------------------------------------------------------
20:41:12 SQL> --			       APPLY/score THE MODEL
20:41:12 SQL> -----------------------------------------------------------------------
20:41:12 SQL> 
20:41:12 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:41:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:41:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:41:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:41:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:41:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:41:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:41:13 SQL> -----------------------
20:41:13 SQL> -- PREPARE SCORING DATA
20:41:13 SQL> --
20:41:13 SQL> -- If the data for model creation has been prepared, then the data
20:41:13 SQL> -- to be scored using the model must be prepared in the same manner
20:41:13 SQL> -- in order to obtain meaningful results.
20:41:13 SQL> --
20:41:13 SQL> -- 1. Missing Value treatment for all Predictors and
20:41:13 SQL> -- 2. Normalization
20:41:13 SQL> -- No outlier treatment will be performed during test and apply. The
20:41:13 SQL> -- normalization step is sufficient, since the normalization parameters
20:41:13 SQL> -- already capture the effects of outlier treatment done with build data.
20:41:13 SQL> --
20:41:13 SQL> BEGIN
20:41:13   2  	-- Xform Test data to replace missing values
20:41:13   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:41:13   4  	  miss_table_name => 'svmc_miss_num',
20:41:13   5  	  data_table_name => '&scoretable',
20:41:13   6  	  xform_view_name => 'xformed_apply_miss_num');
20:41:13   7  
20:41:13   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:41:13   9  	  miss_table_name => 'svmc_miss_cat',
20:41:13  10  	  data_table_name => '&scoretable',
20:41:13  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:41:13  12  
20:41:13  13  	-- Normalize the data to be scored
20:41:13  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:41:13  15  	  norm_table_name => 'svmc_norm',
20:41:13  16  	  data_table_name => '&scoretable',
20:41:13  17  	  xform_view_name => 'svmc_apply_prep');
20:41:13  18  END;
20:41:13  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
20:41:14 SQL> 
20:41:14 SQL> -- Use same model_name used in score.sql
20:41:14 SQL> DEFINE model_name = 'forex15'
20:41:14 SQL> 
20:41:14 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
20:41:14 SQL> 
20:41:14 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
20:41:14 SQL> 
20:41:14 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
20:41:14   2  SELECT
20:41:14   3  prdate
20:41:14   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:41:14   5  ,sysdate
20:41:14   6  ,SUBSTR(prdate,1,3)pair
20:41:14   7  ,SUBSTR(prdate,4,19)ydate
20:41:14   8  FROM svmc_apply_prep
20:41:14   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
20:41:14 SQL> @aud_score1day.sql  2011-01-06 20:25:00
20:41:14 SQL> --
20:41:14 SQL> -- aud_score1day.sql
20:41:14 SQL> --
20:41:14 SQL> 
20:41:14 SQL> CREATE OR REPLACE VIEW sme AS
20:41:14   2  SELECT
20:41:14   3  'aud'||m.ydate prdate
20:41:14   4  ,NULL gatt
20:41:14   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:41:14   6  ,eur_g00
20:41:14   7  ,eur_g01
20:41:14   8  ,eur_g02
20:41:14   9  ,eur_g03
20:41:14  10  ,eur_g04
20:41:14  11  ,eur_g05
20:41:14  12  ,eur_g06
20:41:14  13  ,eur_g07
20:41:14  14  ,eur_g08
20:41:14  15  ,eur_g09
20:41:14  16  ,eur_g10
20:41:14  17  ,eur_g11
20:41:14  18  ,eur_g12
20:41:14  19  ,eur_g13
20:41:14  20  ,eur_g14
20:41:14  21  ,eur_g15
20:41:14  22  ,eur_g16
20:41:14  23  ,eur_g17
20:41:14  24  ,eur_g18
20:41:14  25  ,eur_g19
20:41:14  26  ,eur_g20
20:41:14  27  ,eur_g21
20:41:14  28  ,eur_g22
20:41:14  29  ,eur_g23
20:41:14  30  ,eur_g24
20:41:14  31  ,eur_g25
20:41:14  32  ,eur_g26
20:41:14  33  ,eur_g27
20:41:14  34  ,eur_g28
20:41:14  35  ,eur_g29
20:41:14  36  ,eur_g30
20:41:14  37  ,eur_g31
20:41:14  38  ,eur_g32
20:41:14  39  ,eur_g33
20:41:14  40  ,eur_g34
20:41:14  41  ,eur_g35
20:41:14  42  ,eur_g36
20:41:14  43  ,eur_g37
20:41:14  44  ,eur_g38
20:41:14  45  ,eur_g39
20:41:14  46  ,eur_g40
20:41:14  47  ,eur_g41
20:41:14  48  ,aud_g00
20:41:14  49  ,aud_g01
20:41:14  50  ,aud_g02
20:41:14  51  ,aud_g03
20:41:14  52  ,aud_g04
20:41:14  53  ,aud_g05
20:41:14  54  ,aud_g06
20:41:14  55  ,aud_g07
20:41:14  56  ,aud_g08
20:41:14  57  ,aud_g09
20:41:14  58  ,aud_g10
20:41:14  59  ,aud_g11
20:41:14  60  ,aud_g12
20:41:14  61  ,aud_g13
20:41:14  62  ,aud_g14
20:41:14  63  ,aud_g15
20:41:14  64  ,aud_g16
20:41:14  65  ,aud_g17
20:41:14  66  ,aud_g18
20:41:14  67  ,aud_g19
20:41:14  68  ,aud_g20
20:41:14  69  ,aud_g21
20:41:14  70  ,aud_g22
20:41:14  71  ,aud_g23
20:41:14  72  ,aud_g24
20:41:14  73  ,aud_g25
20:41:14  74  ,aud_g26
20:41:14  75  ,aud_g27
20:41:14  76  ,aud_g28
20:41:14  77  ,aud_g29
20:41:14  78  ,aud_g30
20:41:14  79  ,aud_g31
20:41:14  80  ,aud_g32
20:41:14  81  ,aud_g33
20:41:14  82  ,aud_g34
20:41:14  83  ,aud_g35
20:41:14  84  ,aud_g36
20:41:14  85  ,aud_g37
20:41:14  86  ,aud_g38
20:41:14  87  ,aud_g39
20:41:14  88  ,aud_g40
20:41:14  89  ,aud_g41
20:41:14  90  ,gbp_g00
20:41:14  91  ,gbp_g01
20:41:14  92  ,gbp_g02
20:41:14  93  ,gbp_g03
20:41:14  94  ,gbp_g04
20:41:14  95  ,gbp_g05
20:41:14  96  ,gbp_g06
20:41:14  97  ,gbp_g07
20:41:14  98  ,gbp_g08
20:41:14  99  ,gbp_g09
20:41:14 100  ,gbp_g10
20:41:14 101  ,gbp_g11
20:41:14 102  ,gbp_g12
20:41:14 103  ,gbp_g13
20:41:14 104  ,gbp_g14
20:41:14 105  ,gbp_g15
20:41:14 106  ,gbp_g16
20:41:14 107  ,gbp_g17
20:41:14 108  ,gbp_g18
20:41:14 109  ,gbp_g19
20:41:14 110  ,gbp_g20
20:41:14 111  ,gbp_g21
20:41:14 112  ,gbp_g22
20:41:14 113  ,gbp_g23
20:41:14 114  ,gbp_g24
20:41:14 115  ,gbp_g25
20:41:14 116  ,gbp_g26
20:41:14 117  ,gbp_g27
20:41:14 118  ,gbp_g28
20:41:14 119  ,gbp_g29
20:41:14 120  ,gbp_g30
20:41:14 121  ,gbp_g31
20:41:14 122  ,gbp_g32
20:41:14 123  ,gbp_g33
20:41:14 124  ,gbp_g34
20:41:14 125  ,gbp_g35
20:41:14 126  ,gbp_g36
20:41:14 127  ,gbp_g37
20:41:14 128  ,gbp_g38
20:41:14 129  ,gbp_g39
20:41:14 130  ,gbp_g40
20:41:14 131  ,gbp_g41
20:41:14 132  ,jpy_g00
20:41:14 133  ,jpy_g01
20:41:14 134  ,jpy_g02
20:41:14 135  ,jpy_g03
20:41:14 136  ,jpy_g04
20:41:14 137  ,jpy_g05
20:41:14 138  ,jpy_g06
20:41:14 139  ,jpy_g07
20:41:14 140  ,jpy_g08
20:41:14 141  ,jpy_g09
20:41:14 142  ,jpy_g10
20:41:14 143  ,jpy_g11
20:41:14 144  ,jpy_g12
20:41:14 145  ,jpy_g13
20:41:14 146  ,jpy_g14
20:41:14 147  ,jpy_g15
20:41:14 148  ,jpy_g16
20:41:14 149  ,jpy_g17
20:41:14 150  ,jpy_g18
20:41:14 151  ,jpy_g19
20:41:14 152  ,jpy_g20
20:41:14 153  ,jpy_g21
20:41:14 154  ,jpy_g22
20:41:14 155  ,jpy_g23
20:41:14 156  ,jpy_g24
20:41:14 157  ,jpy_g25
20:41:14 158  ,jpy_g26
20:41:14 159  ,jpy_g27
20:41:14 160  ,jpy_g28
20:41:14 161  ,jpy_g29
20:41:14 162  ,jpy_g30
20:41:14 163  ,jpy_g31
20:41:14 164  ,jpy_g32
20:41:14 165  ,jpy_g33
20:41:14 166  ,jpy_g34
20:41:14 167  ,jpy_g35
20:41:14 168  ,jpy_g36
20:41:14 169  ,jpy_g37
20:41:14 170  ,jpy_g38
20:41:14 171  ,jpy_g39
20:41:14 172  ,jpy_g40
20:41:14 173  ,jpy_g41
20:41:14 174  ,cad_g00
20:41:14 175  ,cad_g01
20:41:14 176  ,cad_g02
20:41:14 177  ,cad_g03
20:41:14 178  ,cad_g04
20:41:14 179  ,cad_g05
20:41:14 180  ,cad_g06
20:41:14 181  ,cad_g07
20:41:14 182  ,cad_g08
20:41:14 183  ,cad_g09
20:41:14 184  ,cad_g10
20:41:14 185  ,cad_g11
20:41:14 186  ,cad_g12
20:41:14 187  ,cad_g13
20:41:14 188  ,cad_g14
20:41:14 189  ,cad_g15
20:41:14 190  ,cad_g16
20:41:14 191  ,cad_g17
20:41:14 192  ,cad_g18
20:41:14 193  ,cad_g19
20:41:14 194  ,cad_g20
20:41:14 195  ,cad_g21
20:41:14 196  ,cad_g22
20:41:14 197  ,cad_g23
20:41:14 198  ,cad_g24
20:41:14 199  ,cad_g25
20:41:14 200  ,cad_g26
20:41:14 201  ,cad_g27
20:41:14 202  ,cad_g28
20:41:14 203  ,cad_g29
20:41:14 204  ,cad_g30
20:41:14 205  ,cad_g31
20:41:14 206  ,cad_g32
20:41:14 207  ,cad_g33
20:41:14 208  ,cad_g34
20:41:14 209  ,cad_g35
20:41:14 210  ,cad_g36
20:41:14 211  ,cad_g37
20:41:14 212  ,cad_g38
20:41:14 213  ,cad_g39
20:41:14 214  ,cad_g40
20:41:14 215  ,cad_g41
20:41:14 216  ,chf_g00
20:41:14 217  ,chf_g01
20:41:14 218  ,chf_g02
20:41:14 219  ,chf_g03
20:41:14 220  ,chf_g04
20:41:14 221  ,chf_g05
20:41:14 222  ,chf_g06
20:41:14 223  ,chf_g07
20:41:14 224  ,chf_g08
20:41:14 225  ,chf_g09
20:41:14 226  ,chf_g10
20:41:14 227  ,chf_g11
20:41:14 228  ,chf_g12
20:41:14 229  ,chf_g13
20:41:14 230  ,chf_g14
20:41:14 231  ,chf_g15
20:41:14 232  ,chf_g16
20:41:14 233  ,chf_g17
20:41:14 234  ,chf_g18
20:41:14 235  ,chf_g19
20:41:14 236  ,chf_g20
20:41:14 237  ,chf_g21
20:41:14 238  ,chf_g22
20:41:14 239  ,chf_g23
20:41:14 240  ,chf_g24
20:41:14 241  ,chf_g25
20:41:14 242  ,chf_g26
20:41:14 243  ,chf_g27
20:41:14 244  ,chf_g28
20:41:14 245  ,chf_g29
20:41:14 246  ,chf_g30
20:41:14 247  ,chf_g31
20:41:14 248  ,chf_g32
20:41:14 249  ,chf_g33
20:41:14 250  ,chf_g34
20:41:14 251  ,chf_g35
20:41:14 252  ,chf_g36
20:41:14 253  ,chf_g37
20:41:14 254  ,chf_g38
20:41:14 255  ,chf_g39
20:41:14 256  ,chf_g40
20:41:14 257  ,chf_g41
20:41:14 258  FROM aud_ms6 m
20:41:14 259  WHERE m.ydate = '&1'||' '||'&2'
20:41:14 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'20:25:00'

View created.

Elapsed: 00:00:00.13
20:41:14 SQL> 
20:41:14 SQL> -- rpt
20:41:14 SQL> -- We should see just 1 row:
20:41:14 SQL> 
20:41:14 SQL> SELECT COUNT(prdate) FROM sme
20:41:14   2  
20:41:14 SQL> -- Build the model:
20:41:14 SQL> CREATE OR REPLACE VIEW bme AS
20:41:14   2  SELECT
20:41:14   3  'aud'||m.ydate prdate
20:41:14   4  ,gatt
20:41:14   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:41:14   6  ,eur_g00
20:41:14   7  ,eur_g01
20:41:14   8  ,eur_g02
20:41:14   9  ,eur_g03
20:41:14  10  ,eur_g04
20:41:14  11  ,eur_g05
20:41:14  12  ,eur_g06
20:41:14  13  ,eur_g07
20:41:14  14  ,eur_g08
20:41:14  15  ,eur_g09
20:41:14  16  ,eur_g10
20:41:14  17  ,eur_g11
20:41:14  18  ,eur_g12
20:41:14  19  ,eur_g13
20:41:14  20  ,eur_g14
20:41:14  21  ,eur_g15
20:41:14  22  ,eur_g16
20:41:14  23  ,eur_g17
20:41:14  24  ,eur_g18
20:41:14  25  ,eur_g19
20:41:14  26  ,eur_g20
20:41:14  27  ,eur_g21
20:41:14  28  ,eur_g22
20:41:14  29  ,eur_g23
20:41:14  30  ,eur_g24
20:41:14  31  ,eur_g25
20:41:14  32  ,eur_g26
20:41:14  33  ,eur_g27
20:41:14  34  ,eur_g28
20:41:14  35  ,eur_g29
20:41:14  36  ,eur_g30
20:41:14  37  ,eur_g31
20:41:14  38  ,eur_g32
20:41:14  39  ,eur_g33
20:41:14  40  ,eur_g34
20:41:14  41  ,eur_g35
20:41:14  42  ,eur_g36
20:41:14  43  ,eur_g37
20:41:14  44  ,eur_g38
20:41:14  45  ,eur_g39
20:41:14  46  ,eur_g40
20:41:14  47  ,eur_g41
20:41:14  48  ,aud_g00
20:41:14  49  ,aud_g01
20:41:14  50  ,aud_g02
20:41:14  51  ,aud_g03
20:41:14  52  ,aud_g04
20:41:14  53  ,aud_g05
20:41:14  54  ,aud_g06
20:41:14  55  ,aud_g07
20:41:14  56  ,aud_g08
20:41:14  57  ,aud_g09
20:41:14  58  ,aud_g10
20:41:14  59  ,aud_g11
20:41:14  60  ,aud_g12
20:41:14  61  ,aud_g13
20:41:14  62  ,aud_g14
20:41:14  63  ,aud_g15
20:41:14  64  ,aud_g16
20:41:14  65  ,aud_g17
20:41:14  66  ,aud_g18
20:41:14  67  ,aud_g19
20:41:14  68  ,aud_g20
20:41:14  69  ,aud_g21
20:41:14  70  ,aud_g22
20:41:14  71  ,aud_g23
20:41:14  72  ,aud_g24
20:41:14  73  ,aud_g25
20:41:14  74  ,aud_g26
20:41:14  75  ,aud_g27
20:41:14  76  ,aud_g28
20:41:14  77  ,aud_g29
20:41:14  78  ,aud_g30
20:41:14  79  ,aud_g31
20:41:14  80  ,aud_g32
20:41:14  81  ,aud_g33
20:41:14  82  ,aud_g34
20:41:14  83  ,aud_g35
20:41:14  84  ,aud_g36
20:41:14  85  ,aud_g37
20:41:14  86  ,aud_g38
20:41:14  87  ,aud_g39
20:41:14  88  ,aud_g40
20:41:14  89  ,aud_g41
20:41:14  90  ,gbp_g00
20:41:14  91  ,gbp_g01
20:41:14  92  ,gbp_g02
20:41:14  93  ,gbp_g03
20:41:14  94  ,gbp_g04
20:41:14  95  ,gbp_g05
20:41:14  96  ,gbp_g06
20:41:14  97  ,gbp_g07
20:41:14  98  ,gbp_g08
20:41:14  99  ,gbp_g09
20:41:14 100  ,gbp_g10
20:41:14 101  ,gbp_g11
20:41:14 102  ,gbp_g12
20:41:14 103  ,gbp_g13
20:41:14 104  ,gbp_g14
20:41:14 105  ,gbp_g15
20:41:14 106  ,gbp_g16
20:41:14 107  ,gbp_g17
20:41:14 108  ,gbp_g18
20:41:14 109  ,gbp_g19
20:41:14 110  ,gbp_g20
20:41:14 111  ,gbp_g21
20:41:14 112  ,gbp_g22
20:41:14 113  ,gbp_g23
20:41:14 114  ,gbp_g24
20:41:14 115  ,gbp_g25
20:41:14 116  ,gbp_g26
20:41:14 117  ,gbp_g27
20:41:14 118  ,gbp_g28
20:41:14 119  ,gbp_g29
20:41:14 120  ,gbp_g30
20:41:14 121  ,gbp_g31
20:41:14 122  ,gbp_g32
20:41:14 123  ,gbp_g33
20:41:14 124  ,gbp_g34
20:41:14 125  ,gbp_g35
20:41:14 126  ,gbp_g36
20:41:14 127  ,gbp_g37
20:41:14 128  ,gbp_g38
20:41:14 129  ,gbp_g39
20:41:14 130  ,gbp_g40
20:41:14 131  ,gbp_g41
20:41:14 132  ,jpy_g00
20:41:14 133  ,jpy_g01
20:41:14 134  ,jpy_g02
20:41:14 135  ,jpy_g03
20:41:14 136  ,jpy_g04
20:41:14 137  ,jpy_g05
20:41:14 138  ,jpy_g06
20:41:14 139  ,jpy_g07
20:41:14 140  ,jpy_g08
20:41:14 141  ,jpy_g09
20:41:14 142  ,jpy_g10
20:41:14 143  ,jpy_g11
20:41:14 144  ,jpy_g12
20:41:14 145  ,jpy_g13
20:41:14 146  ,jpy_g14
20:41:14 147  ,jpy_g15
20:41:14 148  ,jpy_g16
20:41:14 149  ,jpy_g17
20:41:14 150  ,jpy_g18
20:41:14 151  ,jpy_g19
20:41:14 152  ,jpy_g20
20:41:14 153  ,jpy_g21
20:41:14 154  ,jpy_g22
20:41:14 155  ,jpy_g23
20:41:14 156  ,jpy_g24
20:41:14 157  ,jpy_g25
20:41:14 158  ,jpy_g26
20:41:14 159  ,jpy_g27
20:41:14 160  ,jpy_g28
20:41:14 161  ,jpy_g29
20:41:14 162  ,jpy_g30
20:41:14 163  ,jpy_g31
20:41:14 164  ,jpy_g32
20:41:14 165  ,jpy_g33
20:41:14 166  ,jpy_g34
20:41:14 167  ,jpy_g35
20:41:14 168  ,jpy_g36
20:41:14 169  ,jpy_g37
20:41:14 170  ,jpy_g38
20:41:14 171  ,jpy_g39
20:41:14 172  ,jpy_g40
20:41:14 173  ,jpy_g41
20:41:14 174  ,cad_g00
20:41:14 175  ,cad_g01
20:41:14 176  ,cad_g02
20:41:14 177  ,cad_g03
20:41:14 178  ,cad_g04
20:41:14 179  ,cad_g05
20:41:14 180  ,cad_g06
20:41:14 181  ,cad_g07
20:41:14 182  ,cad_g08
20:41:14 183  ,cad_g09
20:41:14 184  ,cad_g10
20:41:14 185  ,cad_g11
20:41:14 186  ,cad_g12
20:41:14 187  ,cad_g13
20:41:14 188  ,cad_g14
20:41:14 189  ,cad_g15
20:41:14 190  ,cad_g16
20:41:14 191  ,cad_g17
20:41:14 192  ,cad_g18
20:41:14 193  ,cad_g19
20:41:14 194  ,cad_g20
20:41:14 195  ,cad_g21
20:41:14 196  ,cad_g22
20:41:14 197  ,cad_g23
20:41:14 198  ,cad_g24
20:41:14 199  ,cad_g25
20:41:14 200  ,cad_g26
20:41:14 201  ,cad_g27
20:41:14 202  ,cad_g28
20:41:14 203  ,cad_g29
20:41:14 204  ,cad_g30
20:41:14 205  ,cad_g31
20:41:14 206  ,cad_g32
20:41:14 207  ,cad_g33
20:41:14 208  ,cad_g34
20:41:14 209  ,cad_g35
20:41:14 210  ,cad_g36
20:41:14 211  ,cad_g37
20:41:14 212  ,cad_g38
20:41:14 213  ,cad_g39
20:41:14 214  ,cad_g40
20:41:14 215  ,cad_g41
20:41:14 216  ,chf_g00
20:41:14 217  ,chf_g01
20:41:14 218  ,chf_g02
20:41:14 219  ,chf_g03
20:41:14 220  ,chf_g04
20:41:14 221  ,chf_g05
20:41:14 222  ,chf_g06
20:41:14 223  ,chf_g07
20:41:14 224  ,chf_g08
20:41:14 225  ,chf_g09
20:41:14 226  ,chf_g10
20:41:14 227  ,chf_g11
20:41:14 228  ,chf_g12
20:41:14 229  ,chf_g13
20:41:14 230  ,chf_g14
20:41:14 231  ,chf_g15
20:41:14 232  ,chf_g16
20:41:14 233  ,chf_g17
20:41:14 234  ,chf_g18
20:41:14 235  ,chf_g19
20:41:14 236  ,chf_g20
20:41:14 237  ,chf_g21
20:41:14 238  ,chf_g22
20:41:14 239  ,chf_g23
20:41:14 240  ,chf_g24
20:41:14 241  ,chf_g25
20:41:14 242  ,chf_g26
20:41:14 243  ,chf_g27
20:41:14 244  ,chf_g28
20:41:14 245  ,chf_g29
20:41:14 246  ,chf_g30
20:41:14 247  ,chf_g31
20:41:14 248  ,chf_g32
20:41:14 249  ,chf_g33
20:41:14 250  ,chf_g34
20:41:14 251  ,chf_g35
20:41:14 252  ,chf_g36
20:41:14 253  ,chf_g37
20:41:14 254  ,chf_g38
20:41:14 255  ,chf_g39
20:41:14 256  ,chf_g40
20:41:14 257  ,chf_g41
20:41:14 258  FROM aud_ms6 m
20:41:14 259  WHERE gatt IN('nup','up')
20:41:14 260  AND 1+m.ydate < '&1'||' '||'&2'
20:41:14 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'20:25:00'

View created.

Elapsed: 00:00:00.12
20:41:14 SQL> 
20:41:14 SQL> -- rpt
20:41:14 SQL> 
20:41:14 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
20:41:14   2  
20:41:14 SQL> SELECT MAX(prdate) FROM bme
20:41:14   2  
20:41:14 SQL> -- Now build model from bme and score sme
20:41:14 SQL> @score1.sql
20:41:14 SQL> -- score1.sql
20:41:14 SQL> 
20:41:14 SQL> -- Does the 1st SVM score
20:41:14 SQL> 
20:41:14 SQL> -- Fill up svmc_apply_prep
20:41:14 SQL> @score.sql
20:41:14 SQL> --
20:41:14 SQL> -- score.sql
20:41:14 SQL> --
20:41:14 SQL> 
20:41:14 SQL> -- usage: score.sql
20:41:14 SQL> 
20:41:14 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:41:14 SQL> 
20:41:14 SQL> DEFINE target	= 'gatt'
20:41:14 SQL> DEFINE model_name = 'forex15'
20:41:14 SQL> DEFINE bldtable	= 'bme'
20:41:14 SQL> DEFINE scoretable = 'sme'
20:41:14 SQL> DEFINE case_id	= 'prdate'
20:41:14 SQL> 
20:41:14 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:41:14 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:41:14 SQL> 
20:41:14 SQL> -- Builds an SVM model using pl/sql.
20:41:14 SQL> 
20:41:14 SQL> -----------------------------------------------------------------------
20:41:14 SQL> --			    BUILD THE MODEL
20:41:14 SQL> -----------------------------------------------------------------------
20:41:14 SQL> 
20:41:14 SQL> -- Cleanup old build data preparation objects for repeat runs
20:41:14 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
20:41:14 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:41:14 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.02
20:41:14 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
20:41:14 SQL> 
20:41:14 SQL> 
20:41:14 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:41:14 SQL> --
20:41:14 SQL> -- DROP	TABLE svmc_settings ;
20:41:14 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:41:14 SQL> -- DELETE svmc_settings;
20:41:14 SQL> 
20:41:14 SQL> -- The default classification algorithm is Naive Bayes. So override
20:41:14 SQL> -- this choice to SVM using a settings table.
20:41:14 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:41:14 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:41:14 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:41:14 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:41:14 SQL> -- models.
20:41:14 SQL> --
20:41:14 SQL> 
20:41:14 SQL> -- Do this once and then comment it out.
20:41:14 SQL> -- That makes script go faster.
20:41:14 SQL> -- BEGIN
20:41:14 SQL> -- -- Populate settings table
20:41:14 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:41:14 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:41:14 SQL> --
20:41:14 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:41:14 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:41:14 SQL> --
20:41:14 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:41:14 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:41:14 SQL> --   COMMIT;
20:41:14 SQL> -- END;
20:41:14 SQL> -- /
20:41:14 SQL> 
20:41:14 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:41:14 SQL> 
20:41:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:41:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:41:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:41:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:41:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:41:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:41:14 SQL> 
20:41:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:41:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:41:15 SQL> 
20:41:15 SQL> --------------------------------
20:41:15 SQL> -- PREPARE BUILD (TRAINING) DATA
20:41:15 SQL> --
20:41:15 SQL> 
20:41:15 SQL> -- 1. Missing Value treatment for all Predictors and
20:41:15 SQL> -- 2. Outlier Treatment and
20:41:15 SQL> -- 3. Normalization are performed below.
20:41:15 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:41:15 SQL> --    normalized here.
20:41:15 SQL> 
20:41:15 SQL> BEGIN
20:41:15   2  	-- Perform missing value treatment for all predictors
20:41:15   3  	-- create miss tables
20:41:15   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:41:15   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:41:15   6  
20:41:15   7  	-- populate miss tables
20:41:15   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:41:15   9  	  miss_table_name => 'svmc_miss_num',
20:41:15  10  	  data_table_name => '&bldtable',
20:41:15  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:41:15  12  
20:41:15  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:41:15  14  	  miss_table_name => 'svmc_miss_cat',
20:41:15  15  	  data_table_name => '&bldtable',
20:41:15  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:41:15  17  
20:41:15  18  	-- xform input data to replace missing values
20:41:15  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:41:15  20  	  miss_table_name => 'svmc_miss_num',
20:41:15  21  	  data_table_name => '&bldtable',
20:41:15  22  	  xform_view_name => 'xformed_build_miss_num');
20:41:15  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:41:15  24  	  miss_table_name => 'svmc_miss_cat',
20:41:15  25  	  data_table_name => '&bldtable',
20:41:15  26  	  xform_view_name => 'xformed_build_miss_cat');
20:41:15  27  
20:41:15  28  	-- Perform outlier treatment.
20:41:15  29  	-- create clip table
20:41:15  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:41:15  31  
20:41:15  32  	-- populate clip table
20:41:15  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:41:15  34  	  clip_table_name => 'svmc_clip',
20:41:15  35  	  data_table_name => '&bldtable',
20:41:15  36  	  tail_frac	  => 0.025,
20:41:15  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:41:15  38  
20:41:15  39  	-- xform input data to winsorized data
20:41:15  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:41:15  41  	  clip_table_name => 'svmc_clip',
20:41:15  42  	  data_table_name => '&bldtable',
20:41:15  43  	  xform_view_name => 'svmc_winsor');
20:41:15  44  
20:41:15  45  	-- create normalization table
20:41:15  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:41:15  47  
20:41:15  48  	-- populate normalization table based on winsorized data
20:41:15  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:41:15  50  	  norm_table_name => 'svmc_norm',
20:41:15  51  	  data_table_name => 'svmc_winsor',
20:41:15  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:41:15  53  
20:41:15  54  	-- normalize the original data
20:41:15  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:41:15  56  	  norm_table_name => 'svmc_norm',
20:41:15  57  	  data_table_name => '&bldtable',
20:41:15  58  	  xform_view_name => 'svmc_build_prep');
20:41:15  59  END;
20:41:15  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.96
20:41:34 SQL> 
20:41:34 SQL> ---------------------
20:41:34 SQL> -- CREATE A NEW MODEL
20:41:34 SQL> --
20:41:34 SQL> -- Cleanup old model with the same name for repeat runs
20:41:34 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:41:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:41:34   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
20:41:35 SQL> 
20:41:35 SQL> -- Build a new SVM Model
20:41:35 SQL> BEGIN
20:41:35   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:41:35   3  	  model_name	      => '&model_name',
20:41:35   4  	  mining_function     => dbms_data_mining.classification,
20:41:35   5  	  data_table_name     => 'svmc_build_prep',
20:41:35   6  	  case_id_column_name => '&case_id',
20:41:35   7  	  target_column_name  => '&target',
20:41:35   8  	  settings_table_name => 'svmc_settings');
20:41:35   9  END;
20:41:35  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.61
20:42:03 SQL> 
20:42:03 SQL> -----------------------------------------------------------------------
20:42:03 SQL> --			       APPLY/score THE MODEL
20:42:03 SQL> -----------------------------------------------------------------------
20:42:03 SQL> 
20:42:03 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:42:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:42:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:42:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:42:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
20:42:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:42:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:42:03 SQL> -----------------------
20:42:03 SQL> -- PREPARE SCORING DATA
20:42:03 SQL> --
20:42:03 SQL> -- If the data for model creation has been prepared, then the data
20:42:03 SQL> -- to be scored using the model must be prepared in the same manner
20:42:03 SQL> -- in order to obtain meaningful results.
20:42:03 SQL> --
20:42:03 SQL> -- 1. Missing Value treatment for all Predictors and
20:42:03 SQL> -- 2. Normalization
20:42:03 SQL> -- No outlier treatment will be performed during test and apply. The
20:42:03 SQL> -- normalization step is sufficient, since the normalization parameters
20:42:03 SQL> -- already capture the effects of outlier treatment done with build data.
20:42:03 SQL> --
20:42:03 SQL> BEGIN
20:42:03   2  	-- Xform Test data to replace missing values
20:42:03   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:42:03   4  	  miss_table_name => 'svmc_miss_num',
20:42:03   5  	  data_table_name => '&scoretable',
20:42:03   6  	  xform_view_name => 'xformed_apply_miss_num');
20:42:03   7  
20:42:03   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:42:03   9  	  miss_table_name => 'svmc_miss_cat',
20:42:03  10  	  data_table_name => '&scoretable',
20:42:03  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:42:03  12  
20:42:03  13  	-- Normalize the data to be scored
20:42:03  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:42:03  15  	  norm_table_name => 'svmc_norm',
20:42:03  16  	  data_table_name => '&scoretable',
20:42:03  17  	  xform_view_name => 'svmc_apply_prep');
20:42:03  18  END;
20:42:03  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
20:42:05 SQL> 
20:42:05 SQL> -- Use same model_name used in score.sql
20:42:05 SQL> DEFINE model_name = 'forex15'
20:42:05 SQL> 
20:42:05 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
20:42:05 SQL> 
20:42:05 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
20:42:05 SQL> 
20:42:05 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
20:42:05   2  SELECT
20:42:05   3  prdate
20:42:05   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:42:05   5  ,sysdate
20:42:05   6  ,SUBSTR(prdate,1,3)pair
20:42:05   7  ,SUBSTR(prdate,4,19)ydate
20:42:05   8  FROM svmc_apply_prep
20:42:05   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
20:42:05 SQL> @aud_score1day.sql  2011-01-06 20:30:00
20:42:05 SQL> --
20:42:05 SQL> -- aud_score1day.sql
20:42:05 SQL> --
20:42:05 SQL> 
20:42:05 SQL> CREATE OR REPLACE VIEW sme AS
20:42:05   2  SELECT
20:42:05   3  'aud'||m.ydate prdate
20:42:05   4  ,NULL gatt
20:42:05   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:42:05   6  ,eur_g00
20:42:05   7  ,eur_g01
20:42:05   8  ,eur_g02
20:42:05   9  ,eur_g03
20:42:05  10  ,eur_g04
20:42:05  11  ,eur_g05
20:42:05  12  ,eur_g06
20:42:05  13  ,eur_g07
20:42:05  14  ,eur_g08
20:42:05  15  ,eur_g09
20:42:05  16  ,eur_g10
20:42:05  17  ,eur_g11
20:42:05  18  ,eur_g12
20:42:05  19  ,eur_g13
20:42:05  20  ,eur_g14
20:42:05  21  ,eur_g15
20:42:05  22  ,eur_g16
20:42:05  23  ,eur_g17
20:42:05  24  ,eur_g18
20:42:05  25  ,eur_g19
20:42:05  26  ,eur_g20
20:42:05  27  ,eur_g21
20:42:05  28  ,eur_g22
20:42:05  29  ,eur_g23
20:42:05  30  ,eur_g24
20:42:05  31  ,eur_g25
20:42:05  32  ,eur_g26
20:42:05  33  ,eur_g27
20:42:05  34  ,eur_g28
20:42:05  35  ,eur_g29
20:42:05  36  ,eur_g30
20:42:05  37  ,eur_g31
20:42:05  38  ,eur_g32
20:42:05  39  ,eur_g33
20:42:05  40  ,eur_g34
20:42:05  41  ,eur_g35
20:42:05  42  ,eur_g36
20:42:05  43  ,eur_g37
20:42:05  44  ,eur_g38
20:42:05  45  ,eur_g39
20:42:05  46  ,eur_g40
20:42:05  47  ,eur_g41
20:42:05  48  ,aud_g00
20:42:05  49  ,aud_g01
20:42:05  50  ,aud_g02
20:42:05  51  ,aud_g03
20:42:05  52  ,aud_g04
20:42:05  53  ,aud_g05
20:42:05  54  ,aud_g06
20:42:05  55  ,aud_g07
20:42:05  56  ,aud_g08
20:42:05  57  ,aud_g09
20:42:05  58  ,aud_g10
20:42:05  59  ,aud_g11
20:42:05  60  ,aud_g12
20:42:05  61  ,aud_g13
20:42:05  62  ,aud_g14
20:42:05  63  ,aud_g15
20:42:05  64  ,aud_g16
20:42:05  65  ,aud_g17
20:42:05  66  ,aud_g18
20:42:05  67  ,aud_g19
20:42:05  68  ,aud_g20
20:42:05  69  ,aud_g21
20:42:05  70  ,aud_g22
20:42:05  71  ,aud_g23
20:42:05  72  ,aud_g24
20:42:05  73  ,aud_g25
20:42:05  74  ,aud_g26
20:42:05  75  ,aud_g27
20:42:05  76  ,aud_g28
20:42:05  77  ,aud_g29
20:42:05  78  ,aud_g30
20:42:05  79  ,aud_g31
20:42:05  80  ,aud_g32
20:42:05  81  ,aud_g33
20:42:05  82  ,aud_g34
20:42:05  83  ,aud_g35
20:42:05  84  ,aud_g36
20:42:05  85  ,aud_g37
20:42:05  86  ,aud_g38
20:42:05  87  ,aud_g39
20:42:05  88  ,aud_g40
20:42:05  89  ,aud_g41
20:42:05  90  ,gbp_g00
20:42:05  91  ,gbp_g01
20:42:05  92  ,gbp_g02
20:42:05  93  ,gbp_g03
20:42:05  94  ,gbp_g04
20:42:05  95  ,gbp_g05
20:42:05  96  ,gbp_g06
20:42:05  97  ,gbp_g07
20:42:05  98  ,gbp_g08
20:42:05  99  ,gbp_g09
20:42:05 100  ,gbp_g10
20:42:05 101  ,gbp_g11
20:42:05 102  ,gbp_g12
20:42:05 103  ,gbp_g13
20:42:05 104  ,gbp_g14
20:42:05 105  ,gbp_g15
20:42:05 106  ,gbp_g16
20:42:05 107  ,gbp_g17
20:42:05 108  ,gbp_g18
20:42:05 109  ,gbp_g19
20:42:05 110  ,gbp_g20
20:42:05 111  ,gbp_g21
20:42:05 112  ,gbp_g22
20:42:05 113  ,gbp_g23
20:42:05 114  ,gbp_g24
20:42:05 115  ,gbp_g25
20:42:05 116  ,gbp_g26
20:42:05 117  ,gbp_g27
20:42:05 118  ,gbp_g28
20:42:05 119  ,gbp_g29
20:42:05 120  ,gbp_g30
20:42:05 121  ,gbp_g31
20:42:05 122  ,gbp_g32
20:42:05 123  ,gbp_g33
20:42:05 124  ,gbp_g34
20:42:05 125  ,gbp_g35
20:42:05 126  ,gbp_g36
20:42:05 127  ,gbp_g37
20:42:05 128  ,gbp_g38
20:42:05 129  ,gbp_g39
20:42:05 130  ,gbp_g40
20:42:05 131  ,gbp_g41
20:42:05 132  ,jpy_g00
20:42:05 133  ,jpy_g01
20:42:05 134  ,jpy_g02
20:42:05 135  ,jpy_g03
20:42:05 136  ,jpy_g04
20:42:05 137  ,jpy_g05
20:42:05 138  ,jpy_g06
20:42:05 139  ,jpy_g07
20:42:05 140  ,jpy_g08
20:42:05 141  ,jpy_g09
20:42:05 142  ,jpy_g10
20:42:05 143  ,jpy_g11
20:42:05 144  ,jpy_g12
20:42:05 145  ,jpy_g13
20:42:05 146  ,jpy_g14
20:42:05 147  ,jpy_g15
20:42:05 148  ,jpy_g16
20:42:05 149  ,jpy_g17
20:42:05 150  ,jpy_g18
20:42:05 151  ,jpy_g19
20:42:05 152  ,jpy_g20
20:42:05 153  ,jpy_g21
20:42:05 154  ,jpy_g22
20:42:05 155  ,jpy_g23
20:42:05 156  ,jpy_g24
20:42:05 157  ,jpy_g25
20:42:05 158  ,jpy_g26
20:42:05 159  ,jpy_g27
20:42:05 160  ,jpy_g28
20:42:05 161  ,jpy_g29
20:42:05 162  ,jpy_g30
20:42:05 163  ,jpy_g31
20:42:05 164  ,jpy_g32
20:42:05 165  ,jpy_g33
20:42:05 166  ,jpy_g34
20:42:05 167  ,jpy_g35
20:42:05 168  ,jpy_g36
20:42:05 169  ,jpy_g37
20:42:05 170  ,jpy_g38
20:42:05 171  ,jpy_g39
20:42:05 172  ,jpy_g40
20:42:05 173  ,jpy_g41
20:42:05 174  ,cad_g00
20:42:05 175  ,cad_g01
20:42:05 176  ,cad_g02
20:42:05 177  ,cad_g03
20:42:05 178  ,cad_g04
20:42:05 179  ,cad_g05
20:42:05 180  ,cad_g06
20:42:05 181  ,cad_g07
20:42:05 182  ,cad_g08
20:42:05 183  ,cad_g09
20:42:05 184  ,cad_g10
20:42:05 185  ,cad_g11
20:42:05 186  ,cad_g12
20:42:05 187  ,cad_g13
20:42:05 188  ,cad_g14
20:42:05 189  ,cad_g15
20:42:05 190  ,cad_g16
20:42:05 191  ,cad_g17
20:42:05 192  ,cad_g18
20:42:05 193  ,cad_g19
20:42:05 194  ,cad_g20
20:42:05 195  ,cad_g21
20:42:05 196  ,cad_g22
20:42:05 197  ,cad_g23
20:42:05 198  ,cad_g24
20:42:05 199  ,cad_g25
20:42:05 200  ,cad_g26
20:42:05 201  ,cad_g27
20:42:05 202  ,cad_g28
20:42:05 203  ,cad_g29
20:42:05 204  ,cad_g30
20:42:05 205  ,cad_g31
20:42:05 206  ,cad_g32
20:42:05 207  ,cad_g33
20:42:05 208  ,cad_g34
20:42:05 209  ,cad_g35
20:42:05 210  ,cad_g36
20:42:05 211  ,cad_g37
20:42:05 212  ,cad_g38
20:42:05 213  ,cad_g39
20:42:05 214  ,cad_g40
20:42:05 215  ,cad_g41
20:42:05 216  ,chf_g00
20:42:05 217  ,chf_g01
20:42:05 218  ,chf_g02
20:42:05 219  ,chf_g03
20:42:05 220  ,chf_g04
20:42:05 221  ,chf_g05
20:42:05 222  ,chf_g06
20:42:05 223  ,chf_g07
20:42:05 224  ,chf_g08
20:42:05 225  ,chf_g09
20:42:05 226  ,chf_g10
20:42:05 227  ,chf_g11
20:42:05 228  ,chf_g12
20:42:05 229  ,chf_g13
20:42:05 230  ,chf_g14
20:42:05 231  ,chf_g15
20:42:05 232  ,chf_g16
20:42:05 233  ,chf_g17
20:42:05 234  ,chf_g18
20:42:05 235  ,chf_g19
20:42:05 236  ,chf_g20
20:42:05 237  ,chf_g21
20:42:05 238  ,chf_g22
20:42:05 239  ,chf_g23
20:42:05 240  ,chf_g24
20:42:05 241  ,chf_g25
20:42:05 242  ,chf_g26
20:42:05 243  ,chf_g27
20:42:05 244  ,chf_g28
20:42:05 245  ,chf_g29
20:42:05 246  ,chf_g30
20:42:05 247  ,chf_g31
20:42:05 248  ,chf_g32
20:42:05 249  ,chf_g33
20:42:05 250  ,chf_g34
20:42:05 251  ,chf_g35
20:42:05 252  ,chf_g36
20:42:05 253  ,chf_g37
20:42:05 254  ,chf_g38
20:42:05 255  ,chf_g39
20:42:05 256  ,chf_g40
20:42:05 257  ,chf_g41
20:42:05 258  FROM aud_ms6 m
20:42:05 259  WHERE m.ydate = '&1'||' '||'&2'
20:42:05 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'20:30:00'

View created.

Elapsed: 00:00:00.14
20:42:05 SQL> 
20:42:05 SQL> -- rpt
20:42:05 SQL> -- We should see just 1 row:
20:42:05 SQL> 
20:42:05 SQL> SELECT COUNT(prdate) FROM sme
20:42:05   2  
20:42:05 SQL> -- Build the model:
20:42:05 SQL> CREATE OR REPLACE VIEW bme AS
20:42:05   2  SELECT
20:42:05   3  'aud'||m.ydate prdate
20:42:05   4  ,gatt
20:42:05   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:42:05   6  ,eur_g00
20:42:05   7  ,eur_g01
20:42:05   8  ,eur_g02
20:42:05   9  ,eur_g03
20:42:05  10  ,eur_g04
20:42:05  11  ,eur_g05
20:42:05  12  ,eur_g06
20:42:05  13  ,eur_g07
20:42:05  14  ,eur_g08
20:42:05  15  ,eur_g09
20:42:05  16  ,eur_g10
20:42:05  17  ,eur_g11
20:42:05  18  ,eur_g12
20:42:05  19  ,eur_g13
20:42:05  20  ,eur_g14
20:42:05  21  ,eur_g15
20:42:05  22  ,eur_g16
20:42:05  23  ,eur_g17
20:42:05  24  ,eur_g18
20:42:05  25  ,eur_g19
20:42:05  26  ,eur_g20
20:42:05  27  ,eur_g21
20:42:05  28  ,eur_g22
20:42:05  29  ,eur_g23
20:42:05  30  ,eur_g24
20:42:05  31  ,eur_g25
20:42:05  32  ,eur_g26
20:42:05  33  ,eur_g27
20:42:05  34  ,eur_g28
20:42:05  35  ,eur_g29
20:42:05  36  ,eur_g30
20:42:05  37  ,eur_g31
20:42:05  38  ,eur_g32
20:42:05  39  ,eur_g33
20:42:05  40  ,eur_g34
20:42:05  41  ,eur_g35
20:42:05  42  ,eur_g36
20:42:05  43  ,eur_g37
20:42:05  44  ,eur_g38
20:42:05  45  ,eur_g39
20:42:05  46  ,eur_g40
20:42:05  47  ,eur_g41
20:42:05  48  ,aud_g00
20:42:05  49  ,aud_g01
20:42:05  50  ,aud_g02
20:42:05  51  ,aud_g03
20:42:05  52  ,aud_g04
20:42:05  53  ,aud_g05
20:42:05  54  ,aud_g06
20:42:05  55  ,aud_g07
20:42:05  56  ,aud_g08
20:42:05  57  ,aud_g09
20:42:05  58  ,aud_g10
20:42:05  59  ,aud_g11
20:42:05  60  ,aud_g12
20:42:05  61  ,aud_g13
20:42:05  62  ,aud_g14
20:42:05  63  ,aud_g15
20:42:05  64  ,aud_g16
20:42:05  65  ,aud_g17
20:42:05  66  ,aud_g18
20:42:05  67  ,aud_g19
20:42:05  68  ,aud_g20
20:42:05  69  ,aud_g21
20:42:05  70  ,aud_g22
20:42:05  71  ,aud_g23
20:42:05  72  ,aud_g24
20:42:05  73  ,aud_g25
20:42:05  74  ,aud_g26
20:42:05  75  ,aud_g27
20:42:05  76  ,aud_g28
20:42:05  77  ,aud_g29
20:42:05  78  ,aud_g30
20:42:05  79  ,aud_g31
20:42:05  80  ,aud_g32
20:42:05  81  ,aud_g33
20:42:05  82  ,aud_g34
20:42:05  83  ,aud_g35
20:42:05  84  ,aud_g36
20:42:05  85  ,aud_g37
20:42:05  86  ,aud_g38
20:42:05  87  ,aud_g39
20:42:05  88  ,aud_g40
20:42:05  89  ,aud_g41
20:42:05  90  ,gbp_g00
20:42:05  91  ,gbp_g01
20:42:05  92  ,gbp_g02
20:42:05  93  ,gbp_g03
20:42:05  94  ,gbp_g04
20:42:05  95  ,gbp_g05
20:42:05  96  ,gbp_g06
20:42:05  97  ,gbp_g07
20:42:05  98  ,gbp_g08
20:42:05  99  ,gbp_g09
20:42:05 100  ,gbp_g10
20:42:05 101  ,gbp_g11
20:42:05 102  ,gbp_g12
20:42:05 103  ,gbp_g13
20:42:05 104  ,gbp_g14
20:42:05 105  ,gbp_g15
20:42:05 106  ,gbp_g16
20:42:05 107  ,gbp_g17
20:42:05 108  ,gbp_g18
20:42:05 109  ,gbp_g19
20:42:05 110  ,gbp_g20
20:42:05 111  ,gbp_g21
20:42:05 112  ,gbp_g22
20:42:05 113  ,gbp_g23
20:42:05 114  ,gbp_g24
20:42:05 115  ,gbp_g25
20:42:05 116  ,gbp_g26
20:42:05 117  ,gbp_g27
20:42:05 118  ,gbp_g28
20:42:05 119  ,gbp_g29
20:42:05 120  ,gbp_g30
20:42:05 121  ,gbp_g31
20:42:05 122  ,gbp_g32
20:42:05 123  ,gbp_g33
20:42:05 124  ,gbp_g34
20:42:05 125  ,gbp_g35
20:42:05 126  ,gbp_g36
20:42:05 127  ,gbp_g37
20:42:05 128  ,gbp_g38
20:42:05 129  ,gbp_g39
20:42:05 130  ,gbp_g40
20:42:05 131  ,gbp_g41
20:42:05 132  ,jpy_g00
20:42:05 133  ,jpy_g01
20:42:05 134  ,jpy_g02
20:42:05 135  ,jpy_g03
20:42:05 136  ,jpy_g04
20:42:05 137  ,jpy_g05
20:42:05 138  ,jpy_g06
20:42:05 139  ,jpy_g07
20:42:05 140  ,jpy_g08
20:42:05 141  ,jpy_g09
20:42:05 142  ,jpy_g10
20:42:05 143  ,jpy_g11
20:42:05 144  ,jpy_g12
20:42:05 145  ,jpy_g13
20:42:05 146  ,jpy_g14
20:42:05 147  ,jpy_g15
20:42:05 148  ,jpy_g16
20:42:05 149  ,jpy_g17
20:42:05 150  ,jpy_g18
20:42:05 151  ,jpy_g19
20:42:05 152  ,jpy_g20
20:42:05 153  ,jpy_g21
20:42:05 154  ,jpy_g22
20:42:05 155  ,jpy_g23
20:42:05 156  ,jpy_g24
20:42:05 157  ,jpy_g25
20:42:05 158  ,jpy_g26
20:42:05 159  ,jpy_g27
20:42:05 160  ,jpy_g28
20:42:05 161  ,jpy_g29
20:42:05 162  ,jpy_g30
20:42:05 163  ,jpy_g31
20:42:05 164  ,jpy_g32
20:42:05 165  ,jpy_g33
20:42:05 166  ,jpy_g34
20:42:05 167  ,jpy_g35
20:42:05 168  ,jpy_g36
20:42:05 169  ,jpy_g37
20:42:05 170  ,jpy_g38
20:42:05 171  ,jpy_g39
20:42:05 172  ,jpy_g40
20:42:05 173  ,jpy_g41
20:42:05 174  ,cad_g00
20:42:05 175  ,cad_g01
20:42:05 176  ,cad_g02
20:42:05 177  ,cad_g03
20:42:05 178  ,cad_g04
20:42:05 179  ,cad_g05
20:42:05 180  ,cad_g06
20:42:05 181  ,cad_g07
20:42:05 182  ,cad_g08
20:42:05 183  ,cad_g09
20:42:05 184  ,cad_g10
20:42:05 185  ,cad_g11
20:42:05 186  ,cad_g12
20:42:05 187  ,cad_g13
20:42:05 188  ,cad_g14
20:42:05 189  ,cad_g15
20:42:05 190  ,cad_g16
20:42:05 191  ,cad_g17
20:42:05 192  ,cad_g18
20:42:05 193  ,cad_g19
20:42:05 194  ,cad_g20
20:42:05 195  ,cad_g21
20:42:05 196  ,cad_g22
20:42:05 197  ,cad_g23
20:42:05 198  ,cad_g24
20:42:05 199  ,cad_g25
20:42:05 200  ,cad_g26
20:42:05 201  ,cad_g27
20:42:05 202  ,cad_g28
20:42:05 203  ,cad_g29
20:42:05 204  ,cad_g30
20:42:05 205  ,cad_g31
20:42:05 206  ,cad_g32
20:42:05 207  ,cad_g33
20:42:05 208  ,cad_g34
20:42:05 209  ,cad_g35
20:42:05 210  ,cad_g36
20:42:05 211  ,cad_g37
20:42:05 212  ,cad_g38
20:42:05 213  ,cad_g39
20:42:05 214  ,cad_g40
20:42:05 215  ,cad_g41
20:42:05 216  ,chf_g00
20:42:05 217  ,chf_g01
20:42:05 218  ,chf_g02
20:42:05 219  ,chf_g03
20:42:05 220  ,chf_g04
20:42:05 221  ,chf_g05
20:42:05 222  ,chf_g06
20:42:05 223  ,chf_g07
20:42:05 224  ,chf_g08
20:42:05 225  ,chf_g09
20:42:05 226  ,chf_g10
20:42:05 227  ,chf_g11
20:42:05 228  ,chf_g12
20:42:05 229  ,chf_g13
20:42:05 230  ,chf_g14
20:42:05 231  ,chf_g15
20:42:05 232  ,chf_g16
20:42:05 233  ,chf_g17
20:42:05 234  ,chf_g18
20:42:05 235  ,chf_g19
20:42:05 236  ,chf_g20
20:42:05 237  ,chf_g21
20:42:05 238  ,chf_g22
20:42:05 239  ,chf_g23
20:42:05 240  ,chf_g24
20:42:05 241  ,chf_g25
20:42:05 242  ,chf_g26
20:42:05 243  ,chf_g27
20:42:05 244  ,chf_g28
20:42:05 245  ,chf_g29
20:42:05 246  ,chf_g30
20:42:05 247  ,chf_g31
20:42:05 248  ,chf_g32
20:42:05 249  ,chf_g33
20:42:05 250  ,chf_g34
20:42:05 251  ,chf_g35
20:42:05 252  ,chf_g36
20:42:05 253  ,chf_g37
20:42:05 254  ,chf_g38
20:42:05 255  ,chf_g39
20:42:05 256  ,chf_g40
20:42:05 257  ,chf_g41
20:42:05 258  FROM aud_ms6 m
20:42:05 259  WHERE gatt IN('nup','up')
20:42:05 260  AND 1+m.ydate < '&1'||' '||'&2'
20:42:05 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'20:30:00'

View created.

Elapsed: 00:00:00.12
20:42:05 SQL> 
20:42:05 SQL> -- rpt
20:42:05 SQL> 
20:42:05 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
20:42:05   2  
20:42:05 SQL> SELECT MAX(prdate) FROM bme
20:42:05   2  
20:42:05 SQL> -- Now build model from bme and score sme
20:42:05 SQL> @score1.sql
20:42:05 SQL> -- score1.sql
20:42:05 SQL> 
20:42:05 SQL> -- Does the 1st SVM score
20:42:05 SQL> 
20:42:05 SQL> -- Fill up svmc_apply_prep
20:42:05 SQL> @score.sql
20:42:05 SQL> --
20:42:05 SQL> -- score.sql
20:42:05 SQL> --
20:42:05 SQL> 
20:42:05 SQL> -- usage: score.sql
20:42:05 SQL> 
20:42:05 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:42:05 SQL> 
20:42:05 SQL> DEFINE target	= 'gatt'
20:42:05 SQL> DEFINE model_name = 'forex15'
20:42:05 SQL> DEFINE bldtable	= 'bme'
20:42:05 SQL> DEFINE scoretable = 'sme'
20:42:05 SQL> DEFINE case_id	= 'prdate'
20:42:05 SQL> 
20:42:05 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:42:05 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:42:05 SQL> 
20:42:05 SQL> -- Builds an SVM model using pl/sql.
20:42:05 SQL> 
20:42:05 SQL> -----------------------------------------------------------------------
20:42:05 SQL> --			    BUILD THE MODEL
20:42:05 SQL> -----------------------------------------------------------------------
20:42:05 SQL> 
20:42:05 SQL> -- Cleanup old build data preparation objects for repeat runs
20:42:05 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
20:42:05 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
20:42:05 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
20:42:05 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
20:42:05 SQL> 
20:42:05 SQL> 
20:42:05 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:42:05 SQL> --
20:42:05 SQL> -- DROP	TABLE svmc_settings ;
20:42:05 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:42:05 SQL> -- DELETE svmc_settings;
20:42:05 SQL> 
20:42:05 SQL> -- The default classification algorithm is Naive Bayes. So override
20:42:05 SQL> -- this choice to SVM using a settings table.
20:42:05 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:42:05 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:42:05 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:42:05 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:42:05 SQL> -- models.
20:42:05 SQL> --
20:42:05 SQL> 
20:42:05 SQL> -- Do this once and then comment it out.
20:42:05 SQL> -- That makes script go faster.
20:42:05 SQL> -- BEGIN
20:42:05 SQL> -- -- Populate settings table
20:42:05 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:42:05 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:42:05 SQL> --
20:42:05 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:42:05 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:42:05 SQL> --
20:42:05 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:42:05 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:42:05 SQL> --   COMMIT;
20:42:05 SQL> -- END;
20:42:05 SQL> -- /
20:42:05 SQL> 
20:42:05 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:42:05 SQL> 
20:42:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:42:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:42:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:42:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
20:42:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:42:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:42:05 SQL> 
20:42:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:42:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:42:06 SQL> 
20:42:06 SQL> --------------------------------
20:42:06 SQL> -- PREPARE BUILD (TRAINING) DATA
20:42:06 SQL> --
20:42:06 SQL> 
20:42:06 SQL> -- 1. Missing Value treatment for all Predictors and
20:42:06 SQL> -- 2. Outlier Treatment and
20:42:06 SQL> -- 3. Normalization are performed below.
20:42:06 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:42:06 SQL> --    normalized here.
20:42:06 SQL> 
20:42:06 SQL> BEGIN
20:42:06   2  	-- Perform missing value treatment for all predictors
20:42:06   3  	-- create miss tables
20:42:06   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:42:06   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:42:06   6  
20:42:06   7  	-- populate miss tables
20:42:06   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:42:06   9  	  miss_table_name => 'svmc_miss_num',
20:42:06  10  	  data_table_name => '&bldtable',
20:42:06  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:42:06  12  
20:42:06  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:42:06  14  	  miss_table_name => 'svmc_miss_cat',
20:42:06  15  	  data_table_name => '&bldtable',
20:42:06  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:42:06  17  
20:42:06  18  	-- xform input data to replace missing values
20:42:06  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:42:06  20  	  miss_table_name => 'svmc_miss_num',
20:42:06  21  	  data_table_name => '&bldtable',
20:42:06  22  	  xform_view_name => 'xformed_build_miss_num');
20:42:06  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:42:06  24  	  miss_table_name => 'svmc_miss_cat',
20:42:06  25  	  data_table_name => '&bldtable',
20:42:06  26  	  xform_view_name => 'xformed_build_miss_cat');
20:42:06  27  
20:42:06  28  	-- Perform outlier treatment.
20:42:06  29  	-- create clip table
20:42:06  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:42:06  31  
20:42:06  32  	-- populate clip table
20:42:06  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:42:06  34  	  clip_table_name => 'svmc_clip',
20:42:06  35  	  data_table_name => '&bldtable',
20:42:06  36  	  tail_frac	  => 0.025,
20:42:06  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:42:06  38  
20:42:06  39  	-- xform input data to winsorized data
20:42:06  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:42:06  41  	  clip_table_name => 'svmc_clip',
20:42:06  42  	  data_table_name => '&bldtable',
20:42:06  43  	  xform_view_name => 'svmc_winsor');
20:42:06  44  
20:42:06  45  	-- create normalization table
20:42:06  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:42:06  47  
20:42:06  48  	-- populate normalization table based on winsorized data
20:42:06  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:42:06  50  	  norm_table_name => 'svmc_norm',
20:42:06  51  	  data_table_name => 'svmc_winsor',
20:42:06  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:42:06  53  
20:42:06  54  	-- normalize the original data
20:42:06  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:42:06  56  	  norm_table_name => 'svmc_norm',
20:42:06  57  	  data_table_name => '&bldtable',
20:42:06  58  	  xform_view_name => 'svmc_build_prep');
20:42:06  59  END;
20:42:06  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.89
20:42:24 SQL> 
20:42:24 SQL> ---------------------
20:42:24 SQL> -- CREATE A NEW MODEL
20:42:24 SQL> --
20:42:24 SQL> -- Cleanup old model with the same name for repeat runs
20:42:24 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:42:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:24   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.59
20:42:26 SQL> 
20:42:26 SQL> -- Build a new SVM Model
20:42:26 SQL> BEGIN
20:42:26   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:42:26   3  	  model_name	      => '&model_name',
20:42:26   4  	  mining_function     => dbms_data_mining.classification,
20:42:26   5  	  data_table_name     => 'svmc_build_prep',
20:42:26   6  	  case_id_column_name => '&case_id',
20:42:26   7  	  target_column_name  => '&target',
20:42:26   8  	  settings_table_name => 'svmc_settings');
20:42:26   9  END;
20:42:26  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.63
20:42:55 SQL> 
20:42:55 SQL> -----------------------------------------------------------------------
20:42:55 SQL> --			       APPLY/score THE MODEL
20:42:55 SQL> -----------------------------------------------------------------------
20:42:55 SQL> 
20:42:55 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:42:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:42:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
20:42:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:42:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:42:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:42:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:42:55 SQL> -----------------------
20:42:55 SQL> -- PREPARE SCORING DATA
20:42:55 SQL> --
20:42:55 SQL> -- If the data for model creation has been prepared, then the data
20:42:55 SQL> -- to be scored using the model must be prepared in the same manner
20:42:55 SQL> -- in order to obtain meaningful results.
20:42:55 SQL> --
20:42:55 SQL> -- 1. Missing Value treatment for all Predictors and
20:42:55 SQL> -- 2. Normalization
20:42:55 SQL> -- No outlier treatment will be performed during test and apply. The
20:42:55 SQL> -- normalization step is sufficient, since the normalization parameters
20:42:55 SQL> -- already capture the effects of outlier treatment done with build data.
20:42:55 SQL> --
20:42:55 SQL> BEGIN
20:42:55   2  	-- Xform Test data to replace missing values
20:42:55   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:42:55   4  	  miss_table_name => 'svmc_miss_num',
20:42:55   5  	  data_table_name => '&scoretable',
20:42:55   6  	  xform_view_name => 'xformed_apply_miss_num');
20:42:55   7  
20:42:55   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:42:55   9  	  miss_table_name => 'svmc_miss_cat',
20:42:55  10  	  data_table_name => '&scoretable',
20:42:55  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:42:55  12  
20:42:55  13  	-- Normalize the data to be scored
20:42:55  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:42:55  15  	  norm_table_name => 'svmc_norm',
20:42:55  16  	  data_table_name => '&scoretable',
20:42:55  17  	  xform_view_name => 'svmc_apply_prep');
20:42:55  18  END;
20:42:55  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.30
20:42:56 SQL> 
20:42:56 SQL> -- Use same model_name used in score.sql
20:42:56 SQL> DEFINE model_name = 'forex15'
20:42:56 SQL> 
20:42:56 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
20:42:56 SQL> 
20:42:56 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
20:42:56 SQL> 
20:42:56 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
20:42:56   2  SELECT
20:42:56   3  prdate
20:42:56   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:42:56   5  ,sysdate
20:42:56   6  ,SUBSTR(prdate,1,3)pair
20:42:56   7  ,SUBSTR(prdate,4,19)ydate
20:42:56   8  FROM svmc_apply_prep
20:42:56   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
20:42:56 SQL> @aud_score1day_gattn.sql	2011-01-06 20:15:00
20:42:56 SQL> --
20:42:56 SQL> -- aud_score1day_gattn.sql
20:42:56 SQL> --
20:42:56 SQL> 
20:42:56 SQL> CREATE OR REPLACE VIEW sme AS
20:42:56   2  SELECT
20:42:56   3  'aud'||m.ydate prdate
20:42:56   4  ,NULL gattn
20:42:56   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:42:56   6  ,eur_g00
20:42:56   7  ,eur_g01
20:42:56   8  ,eur_g02
20:42:56   9  ,eur_g03
20:42:56  10  ,eur_g04
20:42:56  11  ,eur_g05
20:42:56  12  ,eur_g06
20:42:56  13  ,eur_g07
20:42:56  14  ,eur_g08
20:42:56  15  ,eur_g09
20:42:56  16  ,eur_g10
20:42:56  17  ,eur_g11
20:42:56  18  ,eur_g12
20:42:56  19  ,eur_g13
20:42:56  20  ,eur_g14
20:42:56  21  ,eur_g15
20:42:56  22  ,eur_g16
20:42:56  23  ,eur_g17
20:42:56  24  ,eur_g18
20:42:56  25  ,eur_g19
20:42:56  26  ,eur_g20
20:42:56  27  ,eur_g21
20:42:56  28  ,eur_g22
20:42:56  29  ,eur_g23
20:42:56  30  ,eur_g24
20:42:56  31  ,eur_g25
20:42:56  32  ,eur_g26
20:42:56  33  ,eur_g27
20:42:56  34  ,eur_g28
20:42:56  35  ,eur_g29
20:42:56  36  ,eur_g30
20:42:56  37  ,eur_g31
20:42:56  38  ,eur_g32
20:42:56  39  ,eur_g33
20:42:56  40  ,eur_g34
20:42:56  41  ,eur_g35
20:42:56  42  ,eur_g36
20:42:56  43  ,eur_g37
20:42:56  44  ,eur_g38
20:42:56  45  ,eur_g39
20:42:56  46  ,eur_g40
20:42:56  47  ,eur_g41
20:42:56  48  ,aud_g00
20:42:56  49  ,aud_g01
20:42:56  50  ,aud_g02
20:42:56  51  ,aud_g03
20:42:56  52  ,aud_g04
20:42:56  53  ,aud_g05
20:42:56  54  ,aud_g06
20:42:56  55  ,aud_g07
20:42:56  56  ,aud_g08
20:42:56  57  ,aud_g09
20:42:56  58  ,aud_g10
20:42:56  59  ,aud_g11
20:42:56  60  ,aud_g12
20:42:56  61  ,aud_g13
20:42:56  62  ,aud_g14
20:42:56  63  ,aud_g15
20:42:56  64  ,aud_g16
20:42:56  65  ,aud_g17
20:42:56  66  ,aud_g18
20:42:56  67  ,aud_g19
20:42:56  68  ,aud_g20
20:42:56  69  ,aud_g21
20:42:56  70  ,aud_g22
20:42:56  71  ,aud_g23
20:42:56  72  ,aud_g24
20:42:56  73  ,aud_g25
20:42:56  74  ,aud_g26
20:42:56  75  ,aud_g27
20:42:56  76  ,aud_g28
20:42:56  77  ,aud_g29
20:42:56  78  ,aud_g30
20:42:56  79  ,aud_g31
20:42:56  80  ,aud_g32
20:42:56  81  ,aud_g33
20:42:56  82  ,aud_g34
20:42:56  83  ,aud_g35
20:42:56  84  ,aud_g36
20:42:56  85  ,aud_g37
20:42:56  86  ,aud_g38
20:42:56  87  ,aud_g39
20:42:56  88  ,aud_g40
20:42:56  89  ,aud_g41
20:42:56  90  ,gbp_g00
20:42:56  91  ,gbp_g01
20:42:56  92  ,gbp_g02
20:42:56  93  ,gbp_g03
20:42:56  94  ,gbp_g04
20:42:56  95  ,gbp_g05
20:42:56  96  ,gbp_g06
20:42:56  97  ,gbp_g07
20:42:56  98  ,gbp_g08
20:42:56  99  ,gbp_g09
20:42:56 100  ,gbp_g10
20:42:56 101  ,gbp_g11
20:42:56 102  ,gbp_g12
20:42:56 103  ,gbp_g13
20:42:56 104  ,gbp_g14
20:42:56 105  ,gbp_g15
20:42:56 106  ,gbp_g16
20:42:56 107  ,gbp_g17
20:42:56 108  ,gbp_g18
20:42:56 109  ,gbp_g19
20:42:56 110  ,gbp_g20
20:42:56 111  ,gbp_g21
20:42:56 112  ,gbp_g22
20:42:56 113  ,gbp_g23
20:42:56 114  ,gbp_g24
20:42:56 115  ,gbp_g25
20:42:56 116  ,gbp_g26
20:42:56 117  ,gbp_g27
20:42:56 118  ,gbp_g28
20:42:56 119  ,gbp_g29
20:42:56 120  ,gbp_g30
20:42:56 121  ,gbp_g31
20:42:56 122  ,gbp_g32
20:42:56 123  ,gbp_g33
20:42:56 124  ,gbp_g34
20:42:56 125  ,gbp_g35
20:42:56 126  ,gbp_g36
20:42:56 127  ,gbp_g37
20:42:56 128  ,gbp_g38
20:42:56 129  ,gbp_g39
20:42:56 130  ,gbp_g40
20:42:56 131  ,gbp_g41
20:42:56 132  ,jpy_g00
20:42:56 133  ,jpy_g01
20:42:56 134  ,jpy_g02
20:42:56 135  ,jpy_g03
20:42:56 136  ,jpy_g04
20:42:56 137  ,jpy_g05
20:42:56 138  ,jpy_g06
20:42:56 139  ,jpy_g07
20:42:56 140  ,jpy_g08
20:42:56 141  ,jpy_g09
20:42:56 142  ,jpy_g10
20:42:56 143  ,jpy_g11
20:42:56 144  ,jpy_g12
20:42:56 145  ,jpy_g13
20:42:56 146  ,jpy_g14
20:42:56 147  ,jpy_g15
20:42:56 148  ,jpy_g16
20:42:56 149  ,jpy_g17
20:42:56 150  ,jpy_g18
20:42:56 151  ,jpy_g19
20:42:56 152  ,jpy_g20
20:42:56 153  ,jpy_g21
20:42:56 154  ,jpy_g22
20:42:56 155  ,jpy_g23
20:42:56 156  ,jpy_g24
20:42:56 157  ,jpy_g25
20:42:56 158  ,jpy_g26
20:42:56 159  ,jpy_g27
20:42:56 160  ,jpy_g28
20:42:56 161  ,jpy_g29
20:42:56 162  ,jpy_g30
20:42:56 163  ,jpy_g31
20:42:56 164  ,jpy_g32
20:42:56 165  ,jpy_g33
20:42:56 166  ,jpy_g34
20:42:56 167  ,jpy_g35
20:42:56 168  ,jpy_g36
20:42:56 169  ,jpy_g37
20:42:56 170  ,jpy_g38
20:42:56 171  ,jpy_g39
20:42:56 172  ,jpy_g40
20:42:56 173  ,jpy_g41
20:42:56 174  ,cad_g00
20:42:56 175  ,cad_g01
20:42:56 176  ,cad_g02
20:42:56 177  ,cad_g03
20:42:56 178  ,cad_g04
20:42:56 179  ,cad_g05
20:42:56 180  ,cad_g06
20:42:56 181  ,cad_g07
20:42:56 182  ,cad_g08
20:42:56 183  ,cad_g09
20:42:56 184  ,cad_g10
20:42:56 185  ,cad_g11
20:42:56 186  ,cad_g12
20:42:56 187  ,cad_g13
20:42:56 188  ,cad_g14
20:42:56 189  ,cad_g15
20:42:56 190  ,cad_g16
20:42:56 191  ,cad_g17
20:42:56 192  ,cad_g18
20:42:56 193  ,cad_g19
20:42:56 194  ,cad_g20
20:42:56 195  ,cad_g21
20:42:56 196  ,cad_g22
20:42:56 197  ,cad_g23
20:42:56 198  ,cad_g24
20:42:56 199  ,cad_g25
20:42:56 200  ,cad_g26
20:42:56 201  ,cad_g27
20:42:56 202  ,cad_g28
20:42:56 203  ,cad_g29
20:42:56 204  ,cad_g30
20:42:56 205  ,cad_g31
20:42:56 206  ,cad_g32
20:42:56 207  ,cad_g33
20:42:56 208  ,cad_g34
20:42:56 209  ,cad_g35
20:42:56 210  ,cad_g36
20:42:56 211  ,cad_g37
20:42:56 212  ,cad_g38
20:42:56 213  ,cad_g39
20:42:56 214  ,cad_g40
20:42:56 215  ,cad_g41
20:42:56 216  ,chf_g00
20:42:56 217  ,chf_g01
20:42:56 218  ,chf_g02
20:42:56 219  ,chf_g03
20:42:56 220  ,chf_g04
20:42:56 221  ,chf_g05
20:42:56 222  ,chf_g06
20:42:56 223  ,chf_g07
20:42:56 224  ,chf_g08
20:42:56 225  ,chf_g09
20:42:56 226  ,chf_g10
20:42:56 227  ,chf_g11
20:42:56 228  ,chf_g12
20:42:56 229  ,chf_g13
20:42:56 230  ,chf_g14
20:42:56 231  ,chf_g15
20:42:56 232  ,chf_g16
20:42:56 233  ,chf_g17
20:42:56 234  ,chf_g18
20:42:56 235  ,chf_g19
20:42:56 236  ,chf_g20
20:42:56 237  ,chf_g21
20:42:56 238  ,chf_g22
20:42:56 239  ,chf_g23
20:42:56 240  ,chf_g24
20:42:56 241  ,chf_g25
20:42:56 242  ,chf_g26
20:42:56 243  ,chf_g27
20:42:56 244  ,chf_g28
20:42:56 245  ,chf_g29
20:42:56 246  ,chf_g30
20:42:56 247  ,chf_g31
20:42:56 248  ,chf_g32
20:42:56 249  ,chf_g33
20:42:56 250  ,chf_g34
20:42:56 251  ,chf_g35
20:42:56 252  ,chf_g36
20:42:56 253  ,chf_g37
20:42:56 254  ,chf_g38
20:42:56 255  ,chf_g39
20:42:56 256  ,chf_g40
20:42:56 257  ,chf_g41
20:42:56 258  FROM aud_ms6 m
20:42:56 259  WHERE m.ydate = '&1'||' '||'&2'
20:42:56 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'20:15:00'

View created.

Elapsed: 00:00:00.12
20:42:56 SQL> 
20:42:56 SQL> -- rpt
20:42:56 SQL> -- We should see just 1 row:
20:42:56 SQL> 
20:42:56 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
20:42:57 SQL> 
20:42:57 SQL> -- Build the model:
20:42:57 SQL> CREATE OR REPLACE VIEW bme AS
20:42:57   2  SELECT
20:42:57   3  'aud'||m.ydate prdate
20:42:57   4  ,gattn
20:42:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:42:57   6  ,eur_g00
20:42:57   7  ,eur_g01
20:42:57   8  ,eur_g02
20:42:57   9  ,eur_g03
20:42:57  10  ,eur_g04
20:42:57  11  ,eur_g05
20:42:57  12  ,eur_g06
20:42:57  13  ,eur_g07
20:42:57  14  ,eur_g08
20:42:57  15  ,eur_g09
20:42:57  16  ,eur_g10
20:42:57  17  ,eur_g11
20:42:57  18  ,eur_g12
20:42:57  19  ,eur_g13
20:42:57  20  ,eur_g14
20:42:57  21  ,eur_g15
20:42:57  22  ,eur_g16
20:42:57  23  ,eur_g17
20:42:57  24  ,eur_g18
20:42:57  25  ,eur_g19
20:42:57  26  ,eur_g20
20:42:57  27  ,eur_g21
20:42:57  28  ,eur_g22
20:42:57  29  ,eur_g23
20:42:57  30  ,eur_g24
20:42:57  31  ,eur_g25
20:42:57  32  ,eur_g26
20:42:57  33  ,eur_g27
20:42:57  34  ,eur_g28
20:42:57  35  ,eur_g29
20:42:57  36  ,eur_g30
20:42:57  37  ,eur_g31
20:42:57  38  ,eur_g32
20:42:57  39  ,eur_g33
20:42:57  40  ,eur_g34
20:42:57  41  ,eur_g35
20:42:57  42  ,eur_g36
20:42:57  43  ,eur_g37
20:42:57  44  ,eur_g38
20:42:57  45  ,eur_g39
20:42:57  46  ,eur_g40
20:42:57  47  ,eur_g41
20:42:57  48  ,aud_g00
20:42:57  49  ,aud_g01
20:42:57  50  ,aud_g02
20:42:57  51  ,aud_g03
20:42:57  52  ,aud_g04
20:42:57  53  ,aud_g05
20:42:57  54  ,aud_g06
20:42:57  55  ,aud_g07
20:42:57  56  ,aud_g08
20:42:57  57  ,aud_g09
20:42:57  58  ,aud_g10
20:42:57  59  ,aud_g11
20:42:57  60  ,aud_g12
20:42:57  61  ,aud_g13
20:42:57  62  ,aud_g14
20:42:57  63  ,aud_g15
20:42:57  64  ,aud_g16
20:42:57  65  ,aud_g17
20:42:57  66  ,aud_g18
20:42:57  67  ,aud_g19
20:42:57  68  ,aud_g20
20:42:57  69  ,aud_g21
20:42:57  70  ,aud_g22
20:42:57  71  ,aud_g23
20:42:57  72  ,aud_g24
20:42:57  73  ,aud_g25
20:42:57  74  ,aud_g26
20:42:57  75  ,aud_g27
20:42:57  76  ,aud_g28
20:42:57  77  ,aud_g29
20:42:57  78  ,aud_g30
20:42:57  79  ,aud_g31
20:42:57  80  ,aud_g32
20:42:57  81  ,aud_g33
20:42:57  82  ,aud_g34
20:42:57  83  ,aud_g35
20:42:57  84  ,aud_g36
20:42:57  85  ,aud_g37
20:42:57  86  ,aud_g38
20:42:57  87  ,aud_g39
20:42:57  88  ,aud_g40
20:42:57  89  ,aud_g41
20:42:57  90  ,gbp_g00
20:42:57  91  ,gbp_g01
20:42:57  92  ,gbp_g02
20:42:57  93  ,gbp_g03
20:42:57  94  ,gbp_g04
20:42:57  95  ,gbp_g05
20:42:57  96  ,gbp_g06
20:42:57  97  ,gbp_g07
20:42:57  98  ,gbp_g08
20:42:57  99  ,gbp_g09
20:42:57 100  ,gbp_g10
20:42:57 101  ,gbp_g11
20:42:57 102  ,gbp_g12
20:42:57 103  ,gbp_g13
20:42:57 104  ,gbp_g14
20:42:57 105  ,gbp_g15
20:42:57 106  ,gbp_g16
20:42:57 107  ,gbp_g17
20:42:57 108  ,gbp_g18
20:42:57 109  ,gbp_g19
20:42:57 110  ,gbp_g20
20:42:57 111  ,gbp_g21
20:42:57 112  ,gbp_g22
20:42:57 113  ,gbp_g23
20:42:57 114  ,gbp_g24
20:42:57 115  ,gbp_g25
20:42:57 116  ,gbp_g26
20:42:57 117  ,gbp_g27
20:42:57 118  ,gbp_g28
20:42:57 119  ,gbp_g29
20:42:57 120  ,gbp_g30
20:42:57 121  ,gbp_g31
20:42:57 122  ,gbp_g32
20:42:57 123  ,gbp_g33
20:42:57 124  ,gbp_g34
20:42:57 125  ,gbp_g35
20:42:57 126  ,gbp_g36
20:42:57 127  ,gbp_g37
20:42:57 128  ,gbp_g38
20:42:57 129  ,gbp_g39
20:42:57 130  ,gbp_g40
20:42:57 131  ,gbp_g41
20:42:57 132  ,jpy_g00
20:42:57 133  ,jpy_g01
20:42:57 134  ,jpy_g02
20:42:57 135  ,jpy_g03
20:42:57 136  ,jpy_g04
20:42:57 137  ,jpy_g05
20:42:57 138  ,jpy_g06
20:42:57 139  ,jpy_g07
20:42:57 140  ,jpy_g08
20:42:57 141  ,jpy_g09
20:42:57 142  ,jpy_g10
20:42:57 143  ,jpy_g11
20:42:57 144  ,jpy_g12
20:42:57 145  ,jpy_g13
20:42:57 146  ,jpy_g14
20:42:57 147  ,jpy_g15
20:42:57 148  ,jpy_g16
20:42:57 149  ,jpy_g17
20:42:57 150  ,jpy_g18
20:42:57 151  ,jpy_g19
20:42:57 152  ,jpy_g20
20:42:57 153  ,jpy_g21
20:42:57 154  ,jpy_g22
20:42:57 155  ,jpy_g23
20:42:57 156  ,jpy_g24
20:42:57 157  ,jpy_g25
20:42:57 158  ,jpy_g26
20:42:57 159  ,jpy_g27
20:42:57 160  ,jpy_g28
20:42:57 161  ,jpy_g29
20:42:57 162  ,jpy_g30
20:42:57 163  ,jpy_g31
20:42:57 164  ,jpy_g32
20:42:57 165  ,jpy_g33
20:42:57 166  ,jpy_g34
20:42:57 167  ,jpy_g35
20:42:57 168  ,jpy_g36
20:42:57 169  ,jpy_g37
20:42:57 170  ,jpy_g38
20:42:57 171  ,jpy_g39
20:42:57 172  ,jpy_g40
20:42:57 173  ,jpy_g41
20:42:57 174  ,cad_g00
20:42:57 175  ,cad_g01
20:42:57 176  ,cad_g02
20:42:57 177  ,cad_g03
20:42:57 178  ,cad_g04
20:42:57 179  ,cad_g05
20:42:57 180  ,cad_g06
20:42:57 181  ,cad_g07
20:42:57 182  ,cad_g08
20:42:57 183  ,cad_g09
20:42:57 184  ,cad_g10
20:42:57 185  ,cad_g11
20:42:57 186  ,cad_g12
20:42:57 187  ,cad_g13
20:42:57 188  ,cad_g14
20:42:57 189  ,cad_g15
20:42:57 190  ,cad_g16
20:42:57 191  ,cad_g17
20:42:57 192  ,cad_g18
20:42:57 193  ,cad_g19
20:42:57 194  ,cad_g20
20:42:57 195  ,cad_g21
20:42:57 196  ,cad_g22
20:42:57 197  ,cad_g23
20:42:57 198  ,cad_g24
20:42:57 199  ,cad_g25
20:42:57 200  ,cad_g26
20:42:57 201  ,cad_g27
20:42:57 202  ,cad_g28
20:42:57 203  ,cad_g29
20:42:57 204  ,cad_g30
20:42:57 205  ,cad_g31
20:42:57 206  ,cad_g32
20:42:57 207  ,cad_g33
20:42:57 208  ,cad_g34
20:42:57 209  ,cad_g35
20:42:57 210  ,cad_g36
20:42:57 211  ,cad_g37
20:42:57 212  ,cad_g38
20:42:57 213  ,cad_g39
20:42:57 214  ,cad_g40
20:42:57 215  ,cad_g41
20:42:57 216  ,chf_g00
20:42:57 217  ,chf_g01
20:42:57 218  ,chf_g02
20:42:57 219  ,chf_g03
20:42:57 220  ,chf_g04
20:42:57 221  ,chf_g05
20:42:57 222  ,chf_g06
20:42:57 223  ,chf_g07
20:42:57 224  ,chf_g08
20:42:57 225  ,chf_g09
20:42:57 226  ,chf_g10
20:42:57 227  ,chf_g11
20:42:57 228  ,chf_g12
20:42:57 229  ,chf_g13
20:42:57 230  ,chf_g14
20:42:57 231  ,chf_g15
20:42:57 232  ,chf_g16
20:42:57 233  ,chf_g17
20:42:57 234  ,chf_g18
20:42:57 235  ,chf_g19
20:42:57 236  ,chf_g20
20:42:57 237  ,chf_g21
20:42:57 238  ,chf_g22
20:42:57 239  ,chf_g23
20:42:57 240  ,chf_g24
20:42:57 241  ,chf_g25
20:42:57 242  ,chf_g26
20:42:57 243  ,chf_g27
20:42:57 244  ,chf_g28
20:42:57 245  ,chf_g29
20:42:57 246  ,chf_g30
20:42:57 247  ,chf_g31
20:42:57 248  ,chf_g32
20:42:57 249  ,chf_g33
20:42:57 250  ,chf_g34
20:42:57 251  ,chf_g35
20:42:57 252  ,chf_g36
20:42:57 253  ,chf_g37
20:42:57 254  ,chf_g38
20:42:57 255  ,chf_g39
20:42:57 256  ,chf_g40
20:42:57 257  ,chf_g41
20:42:57 258  FROM aud_ms6 m
20:42:57 259  WHERE gattn IN('nup','up')
20:42:57 260  AND 1+m.ydate < '&1'||' '||'&2'
20:42:57 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'20:15:00'

View created.

Elapsed: 00:00:00.12
20:42:57 SQL> 
20:42:57 SQL> -- rpt
20:42:57 SQL> 
20:42:57 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12870
up	     6638

Elapsed: 00:00:00.05
20:42:57 SQL> 
20:42:57 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 20:10:00

Elapsed: 00:00:00.03
20:42:57 SQL> 
20:42:57 SQL> -- Now build model from bme and score sme
20:42:57 SQL> @score1gattn.sql
20:42:57 SQL> -- score1gattn.sql
20:42:57 SQL> 
20:42:57 SQL> -- Does the 1st SVM score
20:42:57 SQL> 
20:42:57 SQL> -- Fill up svmc_apply_prep
20:42:57 SQL> @score_gattn.sql
20:42:57 SQL> --
20:42:57 SQL> -- score_gattn.sql
20:42:57 SQL> --
20:42:57 SQL> 
20:42:57 SQL> -- usage: score_gattn.sql
20:42:57 SQL> 
20:42:57 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:42:57 SQL> 
20:42:57 SQL> DEFINE target	= 'gattn'
20:42:57 SQL> DEFINE model_name = 'forex15'
20:42:57 SQL> DEFINE bldtable	= 'bme'
20:42:57 SQL> DEFINE scoretable = 'sme'
20:42:57 SQL> DEFINE case_id	= 'prdate'
20:42:57 SQL> 
20:42:57 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:42:57 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:42:57 SQL> 
20:42:57 SQL> -- Builds an SVM model using pl/sql.
20:42:57 SQL> 
20:42:57 SQL> -----------------------------------------------------------------------
20:42:57 SQL> --			    BUILD THE MODEL
20:42:57 SQL> -----------------------------------------------------------------------
20:42:57 SQL> 
20:42:57 SQL> -- Cleanup old build data preparation objects for repeat runs
20:42:57 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
20:42:57 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:42:57 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
20:42:57 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
20:42:57 SQL> 
20:42:57 SQL> 
20:42:57 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:42:57 SQL> --
20:42:57 SQL> -- DROP	TABLE svmc_settings ;
20:42:57 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:42:57 SQL> -- DELETE svmc_settings;
20:42:57 SQL> 
20:42:57 SQL> -- The default classification algorithm is Naive Bayes. So override
20:42:57 SQL> -- this choice to SVM using a settings table.
20:42:57 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:42:57 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:42:57 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:42:57 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:42:57 SQL> -- models.
20:42:57 SQL> --
20:42:57 SQL> 
20:42:57 SQL> -- Do this once and then comment it out.
20:42:57 SQL> -- That makes script go faster.
20:42:57 SQL> -- BEGIN
20:42:57 SQL> -- -- Populate settings table
20:42:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:42:57 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:42:57 SQL> --
20:42:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:42:57 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:42:57 SQL> --
20:42:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:42:57 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:42:57 SQL> --   COMMIT;
20:42:57 SQL> -- END;
20:42:57 SQL> -- /
20:42:57 SQL> 
20:42:57 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:42:57 SQL> 
20:42:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:42:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:42:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:42:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:42:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:42:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:42:57 SQL> 
20:42:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:42:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:42:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:42:57 SQL> 
20:42:57 SQL> --------------------------------
20:42:57 SQL> -- PREPARE BUILD (TRAINING) DATA
20:42:57 SQL> --
20:42:57 SQL> 
20:42:57 SQL> -- 1. Missing Value treatment for all Predictors and
20:42:57 SQL> -- 2. Outlier Treatment and
20:42:57 SQL> -- 3. Normalization are performed below.
20:42:57 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:42:57 SQL> --    normalized here.
20:42:57 SQL> 
20:42:57 SQL> BEGIN
20:42:57   2  	-- Perform missing value treatment for all predictors
20:42:57   3  	-- create miss tables
20:42:57   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:42:57   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:42:57   6  
20:42:57   7  	-- populate miss tables
20:42:57   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:42:57   9  	  miss_table_name => 'svmc_miss_num',
20:42:57  10  	  data_table_name => '&bldtable',
20:42:57  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:42:57  12  
20:42:57  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:42:57  14  	  miss_table_name => 'svmc_miss_cat',
20:42:57  15  	  data_table_name => '&bldtable',
20:42:57  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:42:57  17  
20:42:57  18  	-- xform input data to replace missing values
20:42:57  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:42:57  20  	  miss_table_name => 'svmc_miss_num',
20:42:57  21  	  data_table_name => '&bldtable',
20:42:57  22  	  xform_view_name => 'xformed_build_miss_num');
20:42:57  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:42:57  24  	  miss_table_name => 'svmc_miss_cat',
20:42:57  25  	  data_table_name => '&bldtable',
20:42:57  26  	  xform_view_name => 'xformed_build_miss_cat');
20:42:57  27  
20:42:57  28  	-- Perform outlier treatment.
20:42:57  29  	-- create clip table
20:42:57  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:42:57  31  
20:42:57  32  	-- populate clip table
20:42:57  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:42:57  34  	  clip_table_name => 'svmc_clip',
20:42:57  35  	  data_table_name => '&bldtable',
20:42:57  36  	  tail_frac	  => 0.025,
20:42:57  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:42:57  38  
20:42:57  39  	-- xform input data to winsorized data
20:42:57  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:42:57  41  	  clip_table_name => 'svmc_clip',
20:42:57  42  	  data_table_name => '&bldtable',
20:42:57  43  	  xform_view_name => 'svmc_winsor');
20:42:57  44  
20:42:57  45  	-- create normalization table
20:42:57  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:42:57  47  
20:42:57  48  	-- populate normalization table based on winsorized data
20:42:57  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:42:57  50  	  norm_table_name => 'svmc_norm',
20:42:57  51  	  data_table_name => 'svmc_winsor',
20:42:57  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:42:57  53  
20:42:57  54  	-- normalize the original data
20:42:57  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:42:57  56  	  norm_table_name => 'svmc_norm',
20:42:57  57  	  data_table_name => '&bldtable',
20:42:57  58  	  xform_view_name => 'svmc_build_prep');
20:42:57  59  END;
20:42:57  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:20.23
20:43:17 SQL> 
20:43:17 SQL> ---------------------
20:43:17 SQL> -- CREATE A NEW MODEL
20:43:17 SQL> --
20:43:17 SQL> -- Cleanup old model with the same name for repeat runs
20:43:17 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:43:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:17   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
20:43:18 SQL> 
20:43:18 SQL> -- Build a new SVM Model
20:43:18 SQL> BEGIN
20:43:18   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:43:18   3  	  model_name	      => '&model_name',
20:43:18   4  	  mining_function     => dbms_data_mining.classification,
20:43:18   5  	  data_table_name     => 'svmc_build_prep',
20:43:18   6  	  case_id_column_name => '&case_id',
20:43:18   7  	  target_column_name  => '&target',
20:43:18   8  	  settings_table_name => 'svmc_settings');
20:43:18   9  END;
20:43:18  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.38
20:43:46 SQL> 
20:43:46 SQL> -----------------------------------------------------------------------
20:43:46 SQL> --			       APPLY/score THE MODEL
20:43:46 SQL> -----------------------------------------------------------------------
20:43:46 SQL> 
20:43:46 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:43:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:43:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:43:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:43:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:43:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:43:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
20:43:46 SQL> -----------------------
20:43:46 SQL> -- PREPARE SCORING DATA
20:43:46 SQL> --
20:43:46 SQL> -- If the data for model creation has been prepared, then the data
20:43:46 SQL> -- to be scored using the model must be prepared in the same manner
20:43:46 SQL> -- in order to obtain meaningful results.
20:43:46 SQL> --
20:43:46 SQL> -- 1. Missing Value treatment for all Predictors and
20:43:46 SQL> -- 2. Normalization
20:43:46 SQL> -- No outlier treatment will be performed during test and apply. The
20:43:46 SQL> -- normalization step is sufficient, since the normalization parameters
20:43:46 SQL> -- already capture the effects of outlier treatment done with build data.
20:43:46 SQL> --
20:43:46 SQL> BEGIN
20:43:46   2  	-- Xform Test data to replace missing values
20:43:46   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:43:46   4  	  miss_table_name => 'svmc_miss_num',
20:43:46   5  	  data_table_name => '&scoretable',
20:43:46   6  	  xform_view_name => 'xformed_apply_miss_num');
20:43:46   7  
20:43:46   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:43:46   9  	  miss_table_name => 'svmc_miss_cat',
20:43:46  10  	  data_table_name => '&scoretable',
20:43:46  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:43:46  12  
20:43:46  13  	-- Normalize the data to be scored
20:43:46  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:43:46  15  	  norm_table_name => 'svmc_norm',
20:43:46  16  	  data_table_name => '&scoretable',
20:43:46  17  	  xform_view_name => 'svmc_apply_prep');
20:43:46  18  END;
20:43:46  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
20:43:47 SQL> 
20:43:47 SQL> -- Use same model_name used in score_gattn.sql
20:43:47 SQL> DEFINE model_name = 'forex15'
20:43:47 SQL> 
20:43:47 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
20:43:47 SQL> 
20:43:47 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
20:43:47   2  SELECT
20:43:47   3  prdate
20:43:47   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:43:47   5  ,sysdate
20:43:47   6  ,SUBSTR(prdate,1,3)pair
20:43:47   7  ,SUBSTR(prdate,4,19)ydate
20:43:47   8  FROM svmc_apply_prep
20:43:47   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
20:43:48 SQL> @aud_score1day_gattn.sql	2011-01-06 20:20:00
20:43:48 SQL> --
20:43:48 SQL> -- aud_score1day_gattn.sql
20:43:48 SQL> --
20:43:48 SQL> 
20:43:48 SQL> CREATE OR REPLACE VIEW sme AS
20:43:48   2  SELECT
20:43:48   3  'aud'||m.ydate prdate
20:43:48   4  ,NULL gattn
20:43:48   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:43:48   6  ,eur_g00
20:43:48   7  ,eur_g01
20:43:48   8  ,eur_g02
20:43:48   9  ,eur_g03
20:43:48  10  ,eur_g04
20:43:48  11  ,eur_g05
20:43:48  12  ,eur_g06
20:43:48  13  ,eur_g07
20:43:48  14  ,eur_g08
20:43:48  15  ,eur_g09
20:43:48  16  ,eur_g10
20:43:48  17  ,eur_g11
20:43:48  18  ,eur_g12
20:43:48  19  ,eur_g13
20:43:48  20  ,eur_g14
20:43:48  21  ,eur_g15
20:43:48  22  ,eur_g16
20:43:48  23  ,eur_g17
20:43:48  24  ,eur_g18
20:43:48  25  ,eur_g19
20:43:48  26  ,eur_g20
20:43:48  27  ,eur_g21
20:43:48  28  ,eur_g22
20:43:48  29  ,eur_g23
20:43:48  30  ,eur_g24
20:43:48  31  ,eur_g25
20:43:48  32  ,eur_g26
20:43:48  33  ,eur_g27
20:43:48  34  ,eur_g28
20:43:48  35  ,eur_g29
20:43:48  36  ,eur_g30
20:43:48  37  ,eur_g31
20:43:48  38  ,eur_g32
20:43:48  39  ,eur_g33
20:43:48  40  ,eur_g34
20:43:48  41  ,eur_g35
20:43:48  42  ,eur_g36
20:43:48  43  ,eur_g37
20:43:48  44  ,eur_g38
20:43:48  45  ,eur_g39
20:43:48  46  ,eur_g40
20:43:48  47  ,eur_g41
20:43:48  48  ,aud_g00
20:43:48  49  ,aud_g01
20:43:48  50  ,aud_g02
20:43:48  51  ,aud_g03
20:43:48  52  ,aud_g04
20:43:48  53  ,aud_g05
20:43:48  54  ,aud_g06
20:43:48  55  ,aud_g07
20:43:48  56  ,aud_g08
20:43:48  57  ,aud_g09
20:43:48  58  ,aud_g10
20:43:48  59  ,aud_g11
20:43:48  60  ,aud_g12
20:43:48  61  ,aud_g13
20:43:48  62  ,aud_g14
20:43:48  63  ,aud_g15
20:43:48  64  ,aud_g16
20:43:48  65  ,aud_g17
20:43:48  66  ,aud_g18
20:43:48  67  ,aud_g19
20:43:48  68  ,aud_g20
20:43:48  69  ,aud_g21
20:43:48  70  ,aud_g22
20:43:48  71  ,aud_g23
20:43:48  72  ,aud_g24
20:43:48  73  ,aud_g25
20:43:48  74  ,aud_g26
20:43:48  75  ,aud_g27
20:43:48  76  ,aud_g28
20:43:48  77  ,aud_g29
20:43:48  78  ,aud_g30
20:43:48  79  ,aud_g31
20:43:48  80  ,aud_g32
20:43:48  81  ,aud_g33
20:43:48  82  ,aud_g34
20:43:48  83  ,aud_g35
20:43:48  84  ,aud_g36
20:43:48  85  ,aud_g37
20:43:48  86  ,aud_g38
20:43:48  87  ,aud_g39
20:43:48  88  ,aud_g40
20:43:48  89  ,aud_g41
20:43:48  90  ,gbp_g00
20:43:48  91  ,gbp_g01
20:43:48  92  ,gbp_g02
20:43:48  93  ,gbp_g03
20:43:48  94  ,gbp_g04
20:43:48  95  ,gbp_g05
20:43:48  96  ,gbp_g06
20:43:48  97  ,gbp_g07
20:43:48  98  ,gbp_g08
20:43:48  99  ,gbp_g09
20:43:48 100  ,gbp_g10
20:43:48 101  ,gbp_g11
20:43:48 102  ,gbp_g12
20:43:48 103  ,gbp_g13
20:43:48 104  ,gbp_g14
20:43:48 105  ,gbp_g15
20:43:48 106  ,gbp_g16
20:43:48 107  ,gbp_g17
20:43:48 108  ,gbp_g18
20:43:48 109  ,gbp_g19
20:43:48 110  ,gbp_g20
20:43:48 111  ,gbp_g21
20:43:48 112  ,gbp_g22
20:43:48 113  ,gbp_g23
20:43:48 114  ,gbp_g24
20:43:48 115  ,gbp_g25
20:43:48 116  ,gbp_g26
20:43:48 117  ,gbp_g27
20:43:48 118  ,gbp_g28
20:43:48 119  ,gbp_g29
20:43:48 120  ,gbp_g30
20:43:48 121  ,gbp_g31
20:43:48 122  ,gbp_g32
20:43:48 123  ,gbp_g33
20:43:48 124  ,gbp_g34
20:43:48 125  ,gbp_g35
20:43:48 126  ,gbp_g36
20:43:48 127  ,gbp_g37
20:43:48 128  ,gbp_g38
20:43:48 129  ,gbp_g39
20:43:48 130  ,gbp_g40
20:43:48 131  ,gbp_g41
20:43:48 132  ,jpy_g00
20:43:48 133  ,jpy_g01
20:43:48 134  ,jpy_g02
20:43:48 135  ,jpy_g03
20:43:48 136  ,jpy_g04
20:43:48 137  ,jpy_g05
20:43:48 138  ,jpy_g06
20:43:48 139  ,jpy_g07
20:43:48 140  ,jpy_g08
20:43:48 141  ,jpy_g09
20:43:48 142  ,jpy_g10
20:43:48 143  ,jpy_g11
20:43:48 144  ,jpy_g12
20:43:48 145  ,jpy_g13
20:43:48 146  ,jpy_g14
20:43:48 147  ,jpy_g15
20:43:48 148  ,jpy_g16
20:43:48 149  ,jpy_g17
20:43:48 150  ,jpy_g18
20:43:48 151  ,jpy_g19
20:43:48 152  ,jpy_g20
20:43:48 153  ,jpy_g21
20:43:48 154  ,jpy_g22
20:43:48 155  ,jpy_g23
20:43:48 156  ,jpy_g24
20:43:48 157  ,jpy_g25
20:43:48 158  ,jpy_g26
20:43:48 159  ,jpy_g27
20:43:48 160  ,jpy_g28
20:43:48 161  ,jpy_g29
20:43:48 162  ,jpy_g30
20:43:48 163  ,jpy_g31
20:43:48 164  ,jpy_g32
20:43:48 165  ,jpy_g33
20:43:48 166  ,jpy_g34
20:43:48 167  ,jpy_g35
20:43:48 168  ,jpy_g36
20:43:48 169  ,jpy_g37
20:43:48 170  ,jpy_g38
20:43:48 171  ,jpy_g39
20:43:48 172  ,jpy_g40
20:43:48 173  ,jpy_g41
20:43:48 174  ,cad_g00
20:43:48 175  ,cad_g01
20:43:48 176  ,cad_g02
20:43:48 177  ,cad_g03
20:43:48 178  ,cad_g04
20:43:48 179  ,cad_g05
20:43:48 180  ,cad_g06
20:43:48 181  ,cad_g07
20:43:48 182  ,cad_g08
20:43:48 183  ,cad_g09
20:43:48 184  ,cad_g10
20:43:48 185  ,cad_g11
20:43:48 186  ,cad_g12
20:43:48 187  ,cad_g13
20:43:48 188  ,cad_g14
20:43:48 189  ,cad_g15
20:43:48 190  ,cad_g16
20:43:48 191  ,cad_g17
20:43:48 192  ,cad_g18
20:43:48 193  ,cad_g19
20:43:48 194  ,cad_g20
20:43:48 195  ,cad_g21
20:43:48 196  ,cad_g22
20:43:48 197  ,cad_g23
20:43:48 198  ,cad_g24
20:43:48 199  ,cad_g25
20:43:48 200  ,cad_g26
20:43:48 201  ,cad_g27
20:43:48 202  ,cad_g28
20:43:48 203  ,cad_g29
20:43:48 204  ,cad_g30
20:43:48 205  ,cad_g31
20:43:48 206  ,cad_g32
20:43:48 207  ,cad_g33
20:43:48 208  ,cad_g34
20:43:48 209  ,cad_g35
20:43:48 210  ,cad_g36
20:43:48 211  ,cad_g37
20:43:48 212  ,cad_g38
20:43:48 213  ,cad_g39
20:43:48 214  ,cad_g40
20:43:48 215  ,cad_g41
20:43:48 216  ,chf_g00
20:43:48 217  ,chf_g01
20:43:48 218  ,chf_g02
20:43:48 219  ,chf_g03
20:43:48 220  ,chf_g04
20:43:48 221  ,chf_g05
20:43:48 222  ,chf_g06
20:43:48 223  ,chf_g07
20:43:48 224  ,chf_g08
20:43:48 225  ,chf_g09
20:43:48 226  ,chf_g10
20:43:48 227  ,chf_g11
20:43:48 228  ,chf_g12
20:43:48 229  ,chf_g13
20:43:48 230  ,chf_g14
20:43:48 231  ,chf_g15
20:43:48 232  ,chf_g16
20:43:48 233  ,chf_g17
20:43:48 234  ,chf_g18
20:43:48 235  ,chf_g19
20:43:48 236  ,chf_g20
20:43:48 237  ,chf_g21
20:43:48 238  ,chf_g22
20:43:48 239  ,chf_g23
20:43:48 240  ,chf_g24
20:43:48 241  ,chf_g25
20:43:48 242  ,chf_g26
20:43:48 243  ,chf_g27
20:43:48 244  ,chf_g28
20:43:48 245  ,chf_g29
20:43:48 246  ,chf_g30
20:43:48 247  ,chf_g31
20:43:48 248  ,chf_g32
20:43:48 249  ,chf_g33
20:43:48 250  ,chf_g34
20:43:48 251  ,chf_g35
20:43:48 252  ,chf_g36
20:43:48 253  ,chf_g37
20:43:48 254  ,chf_g38
20:43:48 255  ,chf_g39
20:43:48 256  ,chf_g40
20:43:48 257  ,chf_g41
20:43:48 258  FROM aud_ms6 m
20:43:48 259  WHERE m.ydate = '&1'||' '||'&2'
20:43:48 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'20:20:00'

View created.

Elapsed: 00:00:00.13
20:43:48 SQL> 
20:43:48 SQL> -- rpt
20:43:48 SQL> -- We should see just 1 row:
20:43:48 SQL> 
20:43:48 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
20:43:48 SQL> 
20:43:48 SQL> -- Build the model:
20:43:48 SQL> CREATE OR REPLACE VIEW bme AS
20:43:48   2  SELECT
20:43:48   3  'aud'||m.ydate prdate
20:43:48   4  ,gattn
20:43:48   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:43:48   6  ,eur_g00
20:43:48   7  ,eur_g01
20:43:48   8  ,eur_g02
20:43:48   9  ,eur_g03
20:43:48  10  ,eur_g04
20:43:48  11  ,eur_g05
20:43:48  12  ,eur_g06
20:43:48  13  ,eur_g07
20:43:48  14  ,eur_g08
20:43:48  15  ,eur_g09
20:43:48  16  ,eur_g10
20:43:48  17  ,eur_g11
20:43:48  18  ,eur_g12
20:43:48  19  ,eur_g13
20:43:48  20  ,eur_g14
20:43:48  21  ,eur_g15
20:43:48  22  ,eur_g16
20:43:48  23  ,eur_g17
20:43:48  24  ,eur_g18
20:43:48  25  ,eur_g19
20:43:48  26  ,eur_g20
20:43:48  27  ,eur_g21
20:43:48  28  ,eur_g22
20:43:48  29  ,eur_g23
20:43:48  30  ,eur_g24
20:43:48  31  ,eur_g25
20:43:48  32  ,eur_g26
20:43:48  33  ,eur_g27
20:43:48  34  ,eur_g28
20:43:48  35  ,eur_g29
20:43:48  36  ,eur_g30
20:43:48  37  ,eur_g31
20:43:48  38  ,eur_g32
20:43:48  39  ,eur_g33
20:43:48  40  ,eur_g34
20:43:48  41  ,eur_g35
20:43:48  42  ,eur_g36
20:43:48  43  ,eur_g37
20:43:48  44  ,eur_g38
20:43:48  45  ,eur_g39
20:43:48  46  ,eur_g40
20:43:48  47  ,eur_g41
20:43:48  48  ,aud_g00
20:43:48  49  ,aud_g01
20:43:48  50  ,aud_g02
20:43:48  51  ,aud_g03
20:43:48  52  ,aud_g04
20:43:48  53  ,aud_g05
20:43:48  54  ,aud_g06
20:43:48  55  ,aud_g07
20:43:48  56  ,aud_g08
20:43:48  57  ,aud_g09
20:43:48  58  ,aud_g10
20:43:48  59  ,aud_g11
20:43:48  60  ,aud_g12
20:43:48  61  ,aud_g13
20:43:48  62  ,aud_g14
20:43:48  63  ,aud_g15
20:43:48  64  ,aud_g16
20:43:48  65  ,aud_g17
20:43:48  66  ,aud_g18
20:43:48  67  ,aud_g19
20:43:48  68  ,aud_g20
20:43:48  69  ,aud_g21
20:43:48  70  ,aud_g22
20:43:48  71  ,aud_g23
20:43:48  72  ,aud_g24
20:43:48  73  ,aud_g25
20:43:48  74  ,aud_g26
20:43:48  75  ,aud_g27
20:43:48  76  ,aud_g28
20:43:48  77  ,aud_g29
20:43:48  78  ,aud_g30
20:43:48  79  ,aud_g31
20:43:48  80  ,aud_g32
20:43:48  81  ,aud_g33
20:43:48  82  ,aud_g34
20:43:48  83  ,aud_g35
20:43:48  84  ,aud_g36
20:43:48  85  ,aud_g37
20:43:48  86  ,aud_g38
20:43:48  87  ,aud_g39
20:43:48  88  ,aud_g40
20:43:48  89  ,aud_g41
20:43:48  90  ,gbp_g00
20:43:48  91  ,gbp_g01
20:43:48  92  ,gbp_g02
20:43:48  93  ,gbp_g03
20:43:48  94  ,gbp_g04
20:43:48  95  ,gbp_g05
20:43:48  96  ,gbp_g06
20:43:48  97  ,gbp_g07
20:43:48  98  ,gbp_g08
20:43:48  99  ,gbp_g09
20:43:48 100  ,gbp_g10
20:43:48 101  ,gbp_g11
20:43:48 102  ,gbp_g12
20:43:48 103  ,gbp_g13
20:43:48 104  ,gbp_g14
20:43:48 105  ,gbp_g15
20:43:48 106  ,gbp_g16
20:43:48 107  ,gbp_g17
20:43:48 108  ,gbp_g18
20:43:48 109  ,gbp_g19
20:43:48 110  ,gbp_g20
20:43:48 111  ,gbp_g21
20:43:48 112  ,gbp_g22
20:43:48 113  ,gbp_g23
20:43:48 114  ,gbp_g24
20:43:48 115  ,gbp_g25
20:43:48 116  ,gbp_g26
20:43:48 117  ,gbp_g27
20:43:48 118  ,gbp_g28
20:43:48 119  ,gbp_g29
20:43:48 120  ,gbp_g30
20:43:48 121  ,gbp_g31
20:43:48 122  ,gbp_g32
20:43:48 123  ,gbp_g33
20:43:48 124  ,gbp_g34
20:43:48 125  ,gbp_g35
20:43:48 126  ,gbp_g36
20:43:48 127  ,gbp_g37
20:43:48 128  ,gbp_g38
20:43:48 129  ,gbp_g39
20:43:48 130  ,gbp_g40
20:43:48 131  ,gbp_g41
20:43:48 132  ,jpy_g00
20:43:48 133  ,jpy_g01
20:43:48 134  ,jpy_g02
20:43:48 135  ,jpy_g03
20:43:48 136  ,jpy_g04
20:43:48 137  ,jpy_g05
20:43:48 138  ,jpy_g06
20:43:48 139  ,jpy_g07
20:43:48 140  ,jpy_g08
20:43:48 141  ,jpy_g09
20:43:48 142  ,jpy_g10
20:43:48 143  ,jpy_g11
20:43:48 144  ,jpy_g12
20:43:48 145  ,jpy_g13
20:43:48 146  ,jpy_g14
20:43:48 147  ,jpy_g15
20:43:48 148  ,jpy_g16
20:43:48 149  ,jpy_g17
20:43:48 150  ,jpy_g18
20:43:48 151  ,jpy_g19
20:43:48 152  ,jpy_g20
20:43:48 153  ,jpy_g21
20:43:48 154  ,jpy_g22
20:43:48 155  ,jpy_g23
20:43:48 156  ,jpy_g24
20:43:48 157  ,jpy_g25
20:43:48 158  ,jpy_g26
20:43:48 159  ,jpy_g27
20:43:48 160  ,jpy_g28
20:43:48 161  ,jpy_g29
20:43:48 162  ,jpy_g30
20:43:48 163  ,jpy_g31
20:43:48 164  ,jpy_g32
20:43:48 165  ,jpy_g33
20:43:48 166  ,jpy_g34
20:43:48 167  ,jpy_g35
20:43:48 168  ,jpy_g36
20:43:48 169  ,jpy_g37
20:43:48 170  ,jpy_g38
20:43:48 171  ,jpy_g39
20:43:48 172  ,jpy_g40
20:43:48 173  ,jpy_g41
20:43:48 174  ,cad_g00
20:43:48 175  ,cad_g01
20:43:48 176  ,cad_g02
20:43:48 177  ,cad_g03
20:43:48 178  ,cad_g04
20:43:48 179  ,cad_g05
20:43:48 180  ,cad_g06
20:43:48 181  ,cad_g07
20:43:48 182  ,cad_g08
20:43:48 183  ,cad_g09
20:43:48 184  ,cad_g10
20:43:48 185  ,cad_g11
20:43:48 186  ,cad_g12
20:43:48 187  ,cad_g13
20:43:48 188  ,cad_g14
20:43:48 189  ,cad_g15
20:43:48 190  ,cad_g16
20:43:48 191  ,cad_g17
20:43:48 192  ,cad_g18
20:43:48 193  ,cad_g19
20:43:48 194  ,cad_g20
20:43:48 195  ,cad_g21
20:43:48 196  ,cad_g22
20:43:48 197  ,cad_g23
20:43:48 198  ,cad_g24
20:43:48 199  ,cad_g25
20:43:48 200  ,cad_g26
20:43:48 201  ,cad_g27
20:43:48 202  ,cad_g28
20:43:48 203  ,cad_g29
20:43:48 204  ,cad_g30
20:43:48 205  ,cad_g31
20:43:48 206  ,cad_g32
20:43:48 207  ,cad_g33
20:43:48 208  ,cad_g34
20:43:48 209  ,cad_g35
20:43:48 210  ,cad_g36
20:43:48 211  ,cad_g37
20:43:48 212  ,cad_g38
20:43:48 213  ,cad_g39
20:43:48 214  ,cad_g40
20:43:48 215  ,cad_g41
20:43:48 216  ,chf_g00
20:43:48 217  ,chf_g01
20:43:48 218  ,chf_g02
20:43:48 219  ,chf_g03
20:43:48 220  ,chf_g04
20:43:48 221  ,chf_g05
20:43:48 222  ,chf_g06
20:43:48 223  ,chf_g07
20:43:48 224  ,chf_g08
20:43:48 225  ,chf_g09
20:43:48 226  ,chf_g10
20:43:48 227  ,chf_g11
20:43:48 228  ,chf_g12
20:43:48 229  ,chf_g13
20:43:48 230  ,chf_g14
20:43:48 231  ,chf_g15
20:43:48 232  ,chf_g16
20:43:48 233  ,chf_g17
20:43:48 234  ,chf_g18
20:43:48 235  ,chf_g19
20:43:48 236  ,chf_g20
20:43:48 237  ,chf_g21
20:43:48 238  ,chf_g22
20:43:48 239  ,chf_g23
20:43:48 240  ,chf_g24
20:43:48 241  ,chf_g25
20:43:48 242  ,chf_g26
20:43:48 243  ,chf_g27
20:43:48 244  ,chf_g28
20:43:48 245  ,chf_g29
20:43:48 246  ,chf_g30
20:43:48 247  ,chf_g31
20:43:48 248  ,chf_g32
20:43:48 249  ,chf_g33
20:43:48 250  ,chf_g34
20:43:48 251  ,chf_g35
20:43:48 252  ,chf_g36
20:43:48 253  ,chf_g37
20:43:48 254  ,chf_g38
20:43:48 255  ,chf_g39
20:43:48 256  ,chf_g40
20:43:48 257  ,chf_g41
20:43:48 258  FROM aud_ms6 m
20:43:48 259  WHERE gattn IN('nup','up')
20:43:48 260  AND 1+m.ydate < '&1'||' '||'&2'
20:43:48 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'20:20:00'

View created.

Elapsed: 00:00:00.13
20:43:48 SQL> 
20:43:48 SQL> -- rpt
20:43:48 SQL> 
20:43:48 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12870
up	     6639

Elapsed: 00:00:00.05
20:43:48 SQL> 
20:43:48 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 20:15:00

Elapsed: 00:00:00.03
20:43:48 SQL> 
20:43:48 SQL> -- Now build model from bme and score sme
20:43:48 SQL> @score1gattn.sql
20:43:48 SQL> -- score1gattn.sql
20:43:48 SQL> 
20:43:48 SQL> -- Does the 1st SVM score
20:43:48 SQL> 
20:43:48 SQL> -- Fill up svmc_apply_prep
20:43:48 SQL> @score_gattn.sql
20:43:48 SQL> --
20:43:48 SQL> -- score_gattn.sql
20:43:48 SQL> --
20:43:48 SQL> 
20:43:48 SQL> -- usage: score_gattn.sql
20:43:48 SQL> 
20:43:48 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:43:48 SQL> 
20:43:48 SQL> DEFINE target	= 'gattn'
20:43:48 SQL> DEFINE model_name = 'forex15'
20:43:48 SQL> DEFINE bldtable	= 'bme'
20:43:48 SQL> DEFINE scoretable = 'sme'
20:43:48 SQL> DEFINE case_id	= 'prdate'
20:43:48 SQL> 
20:43:48 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:43:48 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:43:48 SQL> 
20:43:48 SQL> -- Builds an SVM model using pl/sql.
20:43:48 SQL> 
20:43:48 SQL> -----------------------------------------------------------------------
20:43:48 SQL> --			    BUILD THE MODEL
20:43:48 SQL> -----------------------------------------------------------------------
20:43:48 SQL> 
20:43:48 SQL> -- Cleanup old build data preparation objects for repeat runs
20:43:48 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
20:43:48 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:43:48 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
20:43:48 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
20:43:48 SQL> 
20:43:48 SQL> 
20:43:48 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:43:48 SQL> --
20:43:48 SQL> -- DROP	TABLE svmc_settings ;
20:43:48 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:43:48 SQL> -- DELETE svmc_settings;
20:43:48 SQL> 
20:43:48 SQL> -- The default classification algorithm is Naive Bayes. So override
20:43:48 SQL> -- this choice to SVM using a settings table.
20:43:48 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:43:48 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:43:48 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:43:48 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:43:48 SQL> -- models.
20:43:48 SQL> --
20:43:48 SQL> 
20:43:48 SQL> -- Do this once and then comment it out.
20:43:48 SQL> -- That makes script go faster.
20:43:48 SQL> -- BEGIN
20:43:48 SQL> -- -- Populate settings table
20:43:48 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:43:48 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:43:48 SQL> --
20:43:48 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:43:48 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:43:48 SQL> --
20:43:48 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:43:48 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:43:48 SQL> --   COMMIT;
20:43:48 SQL> -- END;
20:43:48 SQL> -- /
20:43:48 SQL> 
20:43:48 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:43:48 SQL> 
20:43:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:43:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:43:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:43:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:43:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:43:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.22
20:43:48 SQL> 
20:43:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:43:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:43:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.28
20:43:49 SQL> 
20:43:49 SQL> --------------------------------
20:43:49 SQL> -- PREPARE BUILD (TRAINING) DATA
20:43:49 SQL> --
20:43:49 SQL> 
20:43:49 SQL> -- 1. Missing Value treatment for all Predictors and
20:43:49 SQL> -- 2. Outlier Treatment and
20:43:49 SQL> -- 3. Normalization are performed below.
20:43:49 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:43:49 SQL> --    normalized here.
20:43:49 SQL> 
20:43:49 SQL> BEGIN
20:43:49   2  	-- Perform missing value treatment for all predictors
20:43:49   3  	-- create miss tables
20:43:49   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:43:49   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:43:49   6  
20:43:49   7  	-- populate miss tables
20:43:49   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:43:49   9  	  miss_table_name => 'svmc_miss_num',
20:43:49  10  	  data_table_name => '&bldtable',
20:43:49  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:43:49  12  
20:43:49  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:43:49  14  	  miss_table_name => 'svmc_miss_cat',
20:43:49  15  	  data_table_name => '&bldtable',
20:43:49  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:43:49  17  
20:43:49  18  	-- xform input data to replace missing values
20:43:49  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:43:49  20  	  miss_table_name => 'svmc_miss_num',
20:43:49  21  	  data_table_name => '&bldtable',
20:43:49  22  	  xform_view_name => 'xformed_build_miss_num');
20:43:49  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:43:49  24  	  miss_table_name => 'svmc_miss_cat',
20:43:49  25  	  data_table_name => '&bldtable',
20:43:49  26  	  xform_view_name => 'xformed_build_miss_cat');
20:43:49  27  
20:43:49  28  	-- Perform outlier treatment.
20:43:49  29  	-- create clip table
20:43:49  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:43:49  31  
20:43:49  32  	-- populate clip table
20:43:49  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:43:49  34  	  clip_table_name => 'svmc_clip',
20:43:49  35  	  data_table_name => '&bldtable',
20:43:49  36  	  tail_frac	  => 0.025,
20:43:49  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:43:49  38  
20:43:49  39  	-- xform input data to winsorized data
20:43:49  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:43:49  41  	  clip_table_name => 'svmc_clip',
20:43:49  42  	  data_table_name => '&bldtable',
20:43:49  43  	  xform_view_name => 'svmc_winsor');
20:43:49  44  
20:43:49  45  	-- create normalization table
20:43:49  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:43:49  47  
20:43:49  48  	-- populate normalization table based on winsorized data
20:43:49  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:43:49  50  	  norm_table_name => 'svmc_norm',
20:43:49  51  	  data_table_name => 'svmc_winsor',
20:43:49  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:43:49  53  
20:43:49  54  	-- normalize the original data
20:43:49  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:43:49  56  	  norm_table_name => 'svmc_norm',
20:43:49  57  	  data_table_name => '&bldtable',
20:43:49  58  	  xform_view_name => 'svmc_build_prep');
20:43:49  59  END;
20:43:49  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.31
20:44:07 SQL> 
20:44:07 SQL> ---------------------
20:44:07 SQL> -- CREATE A NEW MODEL
20:44:07 SQL> --
20:44:07 SQL> -- Cleanup old model with the same name for repeat runs
20:44:07 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:44:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:07   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.01
20:44:08 SQL> 
20:44:08 SQL> -- Build a new SVM Model
20:44:08 SQL> BEGIN
20:44:08   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:44:08   3  	  model_name	      => '&model_name',
20:44:08   4  	  mining_function     => dbms_data_mining.classification,
20:44:08   5  	  data_table_name     => 'svmc_build_prep',
20:44:08   6  	  case_id_column_name => '&case_id',
20:44:08   7  	  target_column_name  => '&target',
20:44:08   8  	  settings_table_name => 'svmc_settings');
20:44:08   9  END;
20:44:08  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.85
20:44:38 SQL> 
20:44:38 SQL> -----------------------------------------------------------------------
20:44:38 SQL> --			       APPLY/score THE MODEL
20:44:38 SQL> -----------------------------------------------------------------------
20:44:38 SQL> 
20:44:38 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:44:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:44:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
20:44:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:44:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:44:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:44:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:44:38 SQL> -----------------------
20:44:38 SQL> -- PREPARE SCORING DATA
20:44:38 SQL> --
20:44:38 SQL> -- If the data for model creation has been prepared, then the data
20:44:38 SQL> -- to be scored using the model must be prepared in the same manner
20:44:38 SQL> -- in order to obtain meaningful results.
20:44:38 SQL> --
20:44:38 SQL> -- 1. Missing Value treatment for all Predictors and
20:44:38 SQL> -- 2. Normalization
20:44:38 SQL> -- No outlier treatment will be performed during test and apply. The
20:44:38 SQL> -- normalization step is sufficient, since the normalization parameters
20:44:38 SQL> -- already capture the effects of outlier treatment done with build data.
20:44:38 SQL> --
20:44:38 SQL> BEGIN
20:44:38   2  	-- Xform Test data to replace missing values
20:44:38   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:44:38   4  	  miss_table_name => 'svmc_miss_num',
20:44:38   5  	  data_table_name => '&scoretable',
20:44:38   6  	  xform_view_name => 'xformed_apply_miss_num');
20:44:38   7  
20:44:38   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:44:38   9  	  miss_table_name => 'svmc_miss_cat',
20:44:38  10  	  data_table_name => '&scoretable',
20:44:38  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:44:38  12  
20:44:38  13  	-- Normalize the data to be scored
20:44:38  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:44:38  15  	  norm_table_name => 'svmc_norm',
20:44:38  16  	  data_table_name => '&scoretable',
20:44:38  17  	  xform_view_name => 'svmc_apply_prep');
20:44:38  18  END;
20:44:38  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
20:44:39 SQL> 
20:44:39 SQL> -- Use same model_name used in score_gattn.sql
20:44:39 SQL> DEFINE model_name = 'forex15'
20:44:39 SQL> 
20:44:39 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
20:44:39 SQL> 
20:44:39 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
20:44:39   2  SELECT
20:44:39   3  prdate
20:44:39   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:44:39   5  ,sysdate
20:44:39   6  ,SUBSTR(prdate,1,3)pair
20:44:39   7  ,SUBSTR(prdate,4,19)ydate
20:44:39   8  FROM svmc_apply_prep
20:44:39   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
20:44:39 SQL> @aud_score1day_gattn.sql	2011-01-06 20:25:00
20:44:39 SQL> --
20:44:39 SQL> -- aud_score1day_gattn.sql
20:44:39 SQL> --
20:44:39 SQL> 
20:44:39 SQL> CREATE OR REPLACE VIEW sme AS
20:44:39   2  SELECT
20:44:39   3  'aud'||m.ydate prdate
20:44:39   4  ,NULL gattn
20:44:39   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:44:39   6  ,eur_g00
20:44:39   7  ,eur_g01
20:44:39   8  ,eur_g02
20:44:39   9  ,eur_g03
20:44:39  10  ,eur_g04
20:44:39  11  ,eur_g05
20:44:39  12  ,eur_g06
20:44:39  13  ,eur_g07
20:44:39  14  ,eur_g08
20:44:39  15  ,eur_g09
20:44:39  16  ,eur_g10
20:44:39  17  ,eur_g11
20:44:39  18  ,eur_g12
20:44:39  19  ,eur_g13
20:44:39  20  ,eur_g14
20:44:39  21  ,eur_g15
20:44:39  22  ,eur_g16
20:44:39  23  ,eur_g17
20:44:39  24  ,eur_g18
20:44:39  25  ,eur_g19
20:44:39  26  ,eur_g20
20:44:39  27  ,eur_g21
20:44:39  28  ,eur_g22
20:44:39  29  ,eur_g23
20:44:39  30  ,eur_g24
20:44:39  31  ,eur_g25
20:44:39  32  ,eur_g26
20:44:39  33  ,eur_g27
20:44:39  34  ,eur_g28
20:44:39  35  ,eur_g29
20:44:39  36  ,eur_g30
20:44:39  37  ,eur_g31
20:44:39  38  ,eur_g32
20:44:39  39  ,eur_g33
20:44:39  40  ,eur_g34
20:44:39  41  ,eur_g35
20:44:39  42  ,eur_g36
20:44:39  43  ,eur_g37
20:44:39  44  ,eur_g38
20:44:39  45  ,eur_g39
20:44:39  46  ,eur_g40
20:44:39  47  ,eur_g41
20:44:39  48  ,aud_g00
20:44:39  49  ,aud_g01
20:44:39  50  ,aud_g02
20:44:39  51  ,aud_g03
20:44:39  52  ,aud_g04
20:44:39  53  ,aud_g05
20:44:39  54  ,aud_g06
20:44:39  55  ,aud_g07
20:44:39  56  ,aud_g08
20:44:39  57  ,aud_g09
20:44:39  58  ,aud_g10
20:44:39  59  ,aud_g11
20:44:39  60  ,aud_g12
20:44:39  61  ,aud_g13
20:44:39  62  ,aud_g14
20:44:39  63  ,aud_g15
20:44:39  64  ,aud_g16
20:44:39  65  ,aud_g17
20:44:39  66  ,aud_g18
20:44:39  67  ,aud_g19
20:44:39  68  ,aud_g20
20:44:39  69  ,aud_g21
20:44:39  70  ,aud_g22
20:44:39  71  ,aud_g23
20:44:39  72  ,aud_g24
20:44:39  73  ,aud_g25
20:44:39  74  ,aud_g26
20:44:39  75  ,aud_g27
20:44:39  76  ,aud_g28
20:44:39  77  ,aud_g29
20:44:39  78  ,aud_g30
20:44:39  79  ,aud_g31
20:44:39  80  ,aud_g32
20:44:39  81  ,aud_g33
20:44:39  82  ,aud_g34
20:44:39  83  ,aud_g35
20:44:39  84  ,aud_g36
20:44:39  85  ,aud_g37
20:44:39  86  ,aud_g38
20:44:39  87  ,aud_g39
20:44:39  88  ,aud_g40
20:44:39  89  ,aud_g41
20:44:39  90  ,gbp_g00
20:44:39  91  ,gbp_g01
20:44:39  92  ,gbp_g02
20:44:39  93  ,gbp_g03
20:44:39  94  ,gbp_g04
20:44:39  95  ,gbp_g05
20:44:39  96  ,gbp_g06
20:44:39  97  ,gbp_g07
20:44:39  98  ,gbp_g08
20:44:39  99  ,gbp_g09
20:44:39 100  ,gbp_g10
20:44:39 101  ,gbp_g11
20:44:39 102  ,gbp_g12
20:44:39 103  ,gbp_g13
20:44:39 104  ,gbp_g14
20:44:39 105  ,gbp_g15
20:44:39 106  ,gbp_g16
20:44:39 107  ,gbp_g17
20:44:39 108  ,gbp_g18
20:44:39 109  ,gbp_g19
20:44:39 110  ,gbp_g20
20:44:39 111  ,gbp_g21
20:44:39 112  ,gbp_g22
20:44:39 113  ,gbp_g23
20:44:39 114  ,gbp_g24
20:44:39 115  ,gbp_g25
20:44:39 116  ,gbp_g26
20:44:39 117  ,gbp_g27
20:44:39 118  ,gbp_g28
20:44:39 119  ,gbp_g29
20:44:39 120  ,gbp_g30
20:44:39 121  ,gbp_g31
20:44:39 122  ,gbp_g32
20:44:39 123  ,gbp_g33
20:44:39 124  ,gbp_g34
20:44:39 125  ,gbp_g35
20:44:39 126  ,gbp_g36
20:44:39 127  ,gbp_g37
20:44:39 128  ,gbp_g38
20:44:39 129  ,gbp_g39
20:44:39 130  ,gbp_g40
20:44:39 131  ,gbp_g41
20:44:39 132  ,jpy_g00
20:44:39 133  ,jpy_g01
20:44:39 134  ,jpy_g02
20:44:39 135  ,jpy_g03
20:44:39 136  ,jpy_g04
20:44:39 137  ,jpy_g05
20:44:39 138  ,jpy_g06
20:44:39 139  ,jpy_g07
20:44:39 140  ,jpy_g08
20:44:39 141  ,jpy_g09
20:44:39 142  ,jpy_g10
20:44:39 143  ,jpy_g11
20:44:39 144  ,jpy_g12
20:44:39 145  ,jpy_g13
20:44:39 146  ,jpy_g14
20:44:39 147  ,jpy_g15
20:44:39 148  ,jpy_g16
20:44:39 149  ,jpy_g17
20:44:39 150  ,jpy_g18
20:44:39 151  ,jpy_g19
20:44:39 152  ,jpy_g20
20:44:39 153  ,jpy_g21
20:44:39 154  ,jpy_g22
20:44:39 155  ,jpy_g23
20:44:39 156  ,jpy_g24
20:44:39 157  ,jpy_g25
20:44:39 158  ,jpy_g26
20:44:39 159  ,jpy_g27
20:44:39 160  ,jpy_g28
20:44:39 161  ,jpy_g29
20:44:39 162  ,jpy_g30
20:44:39 163  ,jpy_g31
20:44:39 164  ,jpy_g32
20:44:39 165  ,jpy_g33
20:44:39 166  ,jpy_g34
20:44:39 167  ,jpy_g35
20:44:39 168  ,jpy_g36
20:44:39 169  ,jpy_g37
20:44:39 170  ,jpy_g38
20:44:39 171  ,jpy_g39
20:44:39 172  ,jpy_g40
20:44:39 173  ,jpy_g41
20:44:39 174  ,cad_g00
20:44:39 175  ,cad_g01
20:44:39 176  ,cad_g02
20:44:39 177  ,cad_g03
20:44:39 178  ,cad_g04
20:44:39 179  ,cad_g05
20:44:39 180  ,cad_g06
20:44:39 181  ,cad_g07
20:44:39 182  ,cad_g08
20:44:39 183  ,cad_g09
20:44:39 184  ,cad_g10
20:44:39 185  ,cad_g11
20:44:39 186  ,cad_g12
20:44:39 187  ,cad_g13
20:44:39 188  ,cad_g14
20:44:39 189  ,cad_g15
20:44:39 190  ,cad_g16
20:44:39 191  ,cad_g17
20:44:39 192  ,cad_g18
20:44:39 193  ,cad_g19
20:44:39 194  ,cad_g20
20:44:39 195  ,cad_g21
20:44:39 196  ,cad_g22
20:44:39 197  ,cad_g23
20:44:39 198  ,cad_g24
20:44:39 199  ,cad_g25
20:44:39 200  ,cad_g26
20:44:39 201  ,cad_g27
20:44:39 202  ,cad_g28
20:44:39 203  ,cad_g29
20:44:39 204  ,cad_g30
20:44:39 205  ,cad_g31
20:44:39 206  ,cad_g32
20:44:39 207  ,cad_g33
20:44:39 208  ,cad_g34
20:44:39 209  ,cad_g35
20:44:39 210  ,cad_g36
20:44:39 211  ,cad_g37
20:44:39 212  ,cad_g38
20:44:39 213  ,cad_g39
20:44:39 214  ,cad_g40
20:44:39 215  ,cad_g41
20:44:39 216  ,chf_g00
20:44:39 217  ,chf_g01
20:44:39 218  ,chf_g02
20:44:39 219  ,chf_g03
20:44:39 220  ,chf_g04
20:44:39 221  ,chf_g05
20:44:39 222  ,chf_g06
20:44:39 223  ,chf_g07
20:44:39 224  ,chf_g08
20:44:39 225  ,chf_g09
20:44:39 226  ,chf_g10
20:44:39 227  ,chf_g11
20:44:39 228  ,chf_g12
20:44:39 229  ,chf_g13
20:44:39 230  ,chf_g14
20:44:39 231  ,chf_g15
20:44:39 232  ,chf_g16
20:44:39 233  ,chf_g17
20:44:39 234  ,chf_g18
20:44:39 235  ,chf_g19
20:44:39 236  ,chf_g20
20:44:39 237  ,chf_g21
20:44:39 238  ,chf_g22
20:44:39 239  ,chf_g23
20:44:39 240  ,chf_g24
20:44:39 241  ,chf_g25
20:44:39 242  ,chf_g26
20:44:39 243  ,chf_g27
20:44:39 244  ,chf_g28
20:44:39 245  ,chf_g29
20:44:39 246  ,chf_g30
20:44:39 247  ,chf_g31
20:44:39 248  ,chf_g32
20:44:39 249  ,chf_g33
20:44:39 250  ,chf_g34
20:44:39 251  ,chf_g35
20:44:39 252  ,chf_g36
20:44:39 253  ,chf_g37
20:44:39 254  ,chf_g38
20:44:39 255  ,chf_g39
20:44:39 256  ,chf_g40
20:44:39 257  ,chf_g41
20:44:39 258  FROM aud_ms6 m
20:44:39 259  WHERE m.ydate = '&1'||' '||'&2'
20:44:39 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'20:25:00'

View created.

Elapsed: 00:00:00.12
20:44:39 SQL> 
20:44:39 SQL> -- rpt
20:44:39 SQL> -- We should see just 1 row:
20:44:39 SQL> 
20:44:39 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
20:44:39 SQL> 
20:44:39 SQL> -- Build the model:
20:44:39 SQL> CREATE OR REPLACE VIEW bme AS
20:44:39   2  SELECT
20:44:39   3  'aud'||m.ydate prdate
20:44:39   4  ,gattn
20:44:39   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:44:39   6  ,eur_g00
20:44:39   7  ,eur_g01
20:44:39   8  ,eur_g02
20:44:39   9  ,eur_g03
20:44:39  10  ,eur_g04
20:44:39  11  ,eur_g05
20:44:39  12  ,eur_g06
20:44:39  13  ,eur_g07
20:44:39  14  ,eur_g08
20:44:39  15  ,eur_g09
20:44:39  16  ,eur_g10
20:44:39  17  ,eur_g11
20:44:39  18  ,eur_g12
20:44:39  19  ,eur_g13
20:44:39  20  ,eur_g14
20:44:39  21  ,eur_g15
20:44:39  22  ,eur_g16
20:44:39  23  ,eur_g17
20:44:39  24  ,eur_g18
20:44:39  25  ,eur_g19
20:44:39  26  ,eur_g20
20:44:39  27  ,eur_g21
20:44:39  28  ,eur_g22
20:44:39  29  ,eur_g23
20:44:39  30  ,eur_g24
20:44:39  31  ,eur_g25
20:44:39  32  ,eur_g26
20:44:39  33  ,eur_g27
20:44:39  34  ,eur_g28
20:44:39  35  ,eur_g29
20:44:39  36  ,eur_g30
20:44:39  37  ,eur_g31
20:44:39  38  ,eur_g32
20:44:39  39  ,eur_g33
20:44:39  40  ,eur_g34
20:44:39  41  ,eur_g35
20:44:39  42  ,eur_g36
20:44:39  43  ,eur_g37
20:44:39  44  ,eur_g38
20:44:39  45  ,eur_g39
20:44:39  46  ,eur_g40
20:44:39  47  ,eur_g41
20:44:39  48  ,aud_g00
20:44:39  49  ,aud_g01
20:44:39  50  ,aud_g02
20:44:39  51  ,aud_g03
20:44:39  52  ,aud_g04
20:44:39  53  ,aud_g05
20:44:39  54  ,aud_g06
20:44:39  55  ,aud_g07
20:44:39  56  ,aud_g08
20:44:39  57  ,aud_g09
20:44:39  58  ,aud_g10
20:44:39  59  ,aud_g11
20:44:39  60  ,aud_g12
20:44:39  61  ,aud_g13
20:44:39  62  ,aud_g14
20:44:39  63  ,aud_g15
20:44:39  64  ,aud_g16
20:44:39  65  ,aud_g17
20:44:39  66  ,aud_g18
20:44:39  67  ,aud_g19
20:44:39  68  ,aud_g20
20:44:39  69  ,aud_g21
20:44:39  70  ,aud_g22
20:44:39  71  ,aud_g23
20:44:39  72  ,aud_g24
20:44:39  73  ,aud_g25
20:44:39  74  ,aud_g26
20:44:39  75  ,aud_g27
20:44:39  76  ,aud_g28
20:44:39  77  ,aud_g29
20:44:39  78  ,aud_g30
20:44:39  79  ,aud_g31
20:44:39  80  ,aud_g32
20:44:39  81  ,aud_g33
20:44:39  82  ,aud_g34
20:44:39  83  ,aud_g35
20:44:39  84  ,aud_g36
20:44:39  85  ,aud_g37
20:44:39  86  ,aud_g38
20:44:39  87  ,aud_g39
20:44:39  88  ,aud_g40
20:44:39  89  ,aud_g41
20:44:39  90  ,gbp_g00
20:44:39  91  ,gbp_g01
20:44:39  92  ,gbp_g02
20:44:39  93  ,gbp_g03
20:44:39  94  ,gbp_g04
20:44:39  95  ,gbp_g05
20:44:39  96  ,gbp_g06
20:44:39  97  ,gbp_g07
20:44:39  98  ,gbp_g08
20:44:39  99  ,gbp_g09
20:44:39 100  ,gbp_g10
20:44:39 101  ,gbp_g11
20:44:39 102  ,gbp_g12
20:44:39 103  ,gbp_g13
20:44:39 104  ,gbp_g14
20:44:39 105  ,gbp_g15
20:44:39 106  ,gbp_g16
20:44:39 107  ,gbp_g17
20:44:39 108  ,gbp_g18
20:44:39 109  ,gbp_g19
20:44:39 110  ,gbp_g20
20:44:39 111  ,gbp_g21
20:44:39 112  ,gbp_g22
20:44:39 113  ,gbp_g23
20:44:39 114  ,gbp_g24
20:44:39 115  ,gbp_g25
20:44:39 116  ,gbp_g26
20:44:39 117  ,gbp_g27
20:44:39 118  ,gbp_g28
20:44:39 119  ,gbp_g29
20:44:39 120  ,gbp_g30
20:44:39 121  ,gbp_g31
20:44:39 122  ,gbp_g32
20:44:39 123  ,gbp_g33
20:44:39 124  ,gbp_g34
20:44:39 125  ,gbp_g35
20:44:39 126  ,gbp_g36
20:44:39 127  ,gbp_g37
20:44:39 128  ,gbp_g38
20:44:39 129  ,gbp_g39
20:44:39 130  ,gbp_g40
20:44:39 131  ,gbp_g41
20:44:39 132  ,jpy_g00
20:44:39 133  ,jpy_g01
20:44:39 134  ,jpy_g02
20:44:39 135  ,jpy_g03
20:44:39 136  ,jpy_g04
20:44:39 137  ,jpy_g05
20:44:39 138  ,jpy_g06
20:44:39 139  ,jpy_g07
20:44:39 140  ,jpy_g08
20:44:39 141  ,jpy_g09
20:44:39 142  ,jpy_g10
20:44:39 143  ,jpy_g11
20:44:39 144  ,jpy_g12
20:44:39 145  ,jpy_g13
20:44:39 146  ,jpy_g14
20:44:39 147  ,jpy_g15
20:44:39 148  ,jpy_g16
20:44:39 149  ,jpy_g17
20:44:39 150  ,jpy_g18
20:44:39 151  ,jpy_g19
20:44:39 152  ,jpy_g20
20:44:39 153  ,jpy_g21
20:44:39 154  ,jpy_g22
20:44:39 155  ,jpy_g23
20:44:39 156  ,jpy_g24
20:44:39 157  ,jpy_g25
20:44:39 158  ,jpy_g26
20:44:39 159  ,jpy_g27
20:44:39 160  ,jpy_g28
20:44:39 161  ,jpy_g29
20:44:39 162  ,jpy_g30
20:44:39 163  ,jpy_g31
20:44:39 164  ,jpy_g32
20:44:39 165  ,jpy_g33
20:44:39 166  ,jpy_g34
20:44:39 167  ,jpy_g35
20:44:39 168  ,jpy_g36
20:44:39 169  ,jpy_g37
20:44:39 170  ,jpy_g38
20:44:39 171  ,jpy_g39
20:44:39 172  ,jpy_g40
20:44:39 173  ,jpy_g41
20:44:39 174  ,cad_g00
20:44:39 175  ,cad_g01
20:44:39 176  ,cad_g02
20:44:39 177  ,cad_g03
20:44:39 178  ,cad_g04
20:44:39 179  ,cad_g05
20:44:39 180  ,cad_g06
20:44:39 181  ,cad_g07
20:44:39 182  ,cad_g08
20:44:39 183  ,cad_g09
20:44:39 184  ,cad_g10
20:44:39 185  ,cad_g11
20:44:39 186  ,cad_g12
20:44:39 187  ,cad_g13
20:44:39 188  ,cad_g14
20:44:39 189  ,cad_g15
20:44:39 190  ,cad_g16
20:44:39 191  ,cad_g17
20:44:39 192  ,cad_g18
20:44:39 193  ,cad_g19
20:44:39 194  ,cad_g20
20:44:39 195  ,cad_g21
20:44:39 196  ,cad_g22
20:44:39 197  ,cad_g23
20:44:39 198  ,cad_g24
20:44:39 199  ,cad_g25
20:44:39 200  ,cad_g26
20:44:39 201  ,cad_g27
20:44:39 202  ,cad_g28
20:44:39 203  ,cad_g29
20:44:39 204  ,cad_g30
20:44:39 205  ,cad_g31
20:44:39 206  ,cad_g32
20:44:39 207  ,cad_g33
20:44:39 208  ,cad_g34
20:44:39 209  ,cad_g35
20:44:39 210  ,cad_g36
20:44:39 211  ,cad_g37
20:44:39 212  ,cad_g38
20:44:39 213  ,cad_g39
20:44:39 214  ,cad_g40
20:44:39 215  ,cad_g41
20:44:39 216  ,chf_g00
20:44:39 217  ,chf_g01
20:44:39 218  ,chf_g02
20:44:39 219  ,chf_g03
20:44:39 220  ,chf_g04
20:44:39 221  ,chf_g05
20:44:39 222  ,chf_g06
20:44:39 223  ,chf_g07
20:44:39 224  ,chf_g08
20:44:39 225  ,chf_g09
20:44:39 226  ,chf_g10
20:44:39 227  ,chf_g11
20:44:39 228  ,chf_g12
20:44:39 229  ,chf_g13
20:44:39 230  ,chf_g14
20:44:39 231  ,chf_g15
20:44:39 232  ,chf_g16
20:44:39 233  ,chf_g17
20:44:39 234  ,chf_g18
20:44:39 235  ,chf_g19
20:44:39 236  ,chf_g20
20:44:39 237  ,chf_g21
20:44:39 238  ,chf_g22
20:44:39 239  ,chf_g23
20:44:39 240  ,chf_g24
20:44:39 241  ,chf_g25
20:44:39 242  ,chf_g26
20:44:39 243  ,chf_g27
20:44:39 244  ,chf_g28
20:44:39 245  ,chf_g29
20:44:39 246  ,chf_g30
20:44:39 247  ,chf_g31
20:44:39 248  ,chf_g32
20:44:39 249  ,chf_g33
20:44:39 250  ,chf_g34
20:44:39 251  ,chf_g35
20:44:39 252  ,chf_g36
20:44:39 253  ,chf_g37
20:44:39 254  ,chf_g38
20:44:39 255  ,chf_g39
20:44:39 256  ,chf_g40
20:44:39 257  ,chf_g41
20:44:39 258  FROM aud_ms6 m
20:44:39 259  WHERE gattn IN('nup','up')
20:44:39 260  AND 1+m.ydate < '&1'||' '||'&2'
20:44:39 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'20:25:00'

View created.

Elapsed: 00:00:00.13
20:44:40 SQL> 
20:44:40 SQL> -- rpt
20:44:40 SQL> 
20:44:40 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12870
up	     6640

Elapsed: 00:00:00.05
20:44:40 SQL> 
20:44:40 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 20:20:00

Elapsed: 00:00:00.05
20:44:40 SQL> 
20:44:40 SQL> -- Now build model from bme and score sme
20:44:40 SQL> @score1gattn.sql
20:44:40 SQL> -- score1gattn.sql
20:44:40 SQL> 
20:44:40 SQL> -- Does the 1st SVM score
20:44:40 SQL> 
20:44:40 SQL> -- Fill up svmc_apply_prep
20:44:40 SQL> @score_gattn.sql
20:44:40 SQL> --
20:44:40 SQL> -- score_gattn.sql
20:44:40 SQL> --
20:44:40 SQL> 
20:44:40 SQL> -- usage: score_gattn.sql
20:44:40 SQL> 
20:44:40 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:44:40 SQL> 
20:44:40 SQL> DEFINE target	= 'gattn'
20:44:40 SQL> DEFINE model_name = 'forex15'
20:44:40 SQL> DEFINE bldtable	= 'bme'
20:44:40 SQL> DEFINE scoretable = 'sme'
20:44:40 SQL> DEFINE case_id	= 'prdate'
20:44:40 SQL> 
20:44:40 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:44:40 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:44:40 SQL> 
20:44:40 SQL> -- Builds an SVM model using pl/sql.
20:44:40 SQL> 
20:44:40 SQL> -----------------------------------------------------------------------
20:44:40 SQL> --			    BUILD THE MODEL
20:44:40 SQL> -----------------------------------------------------------------------
20:44:40 SQL> 
20:44:40 SQL> -- Cleanup old build data preparation objects for repeat runs
20:44:40 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
20:44:40 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:44:40 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
20:44:40 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
20:44:40 SQL> 
20:44:40 SQL> 
20:44:40 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:44:40 SQL> --
20:44:40 SQL> -- DROP	TABLE svmc_settings ;
20:44:40 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:44:40 SQL> -- DELETE svmc_settings;
20:44:40 SQL> 
20:44:40 SQL> -- The default classification algorithm is Naive Bayes. So override
20:44:40 SQL> -- this choice to SVM using a settings table.
20:44:40 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:44:40 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:44:40 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:44:40 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:44:40 SQL> -- models.
20:44:40 SQL> --
20:44:40 SQL> 
20:44:40 SQL> -- Do this once and then comment it out.
20:44:40 SQL> -- That makes script go faster.
20:44:40 SQL> -- BEGIN
20:44:40 SQL> -- -- Populate settings table
20:44:40 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:44:40 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:44:40 SQL> --
20:44:40 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:44:40 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:44:40 SQL> --
20:44:40 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:44:40 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:44:40 SQL> --   COMMIT;
20:44:40 SQL> -- END;
20:44:40 SQL> -- /
20:44:40 SQL> 
20:44:40 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
20:44:40 SQL> 
20:44:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:44:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:44:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:44:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:44:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:44:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:44:40 SQL> 
20:44:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:44:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
20:44:40 SQL> 
20:44:40 SQL> --------------------------------
20:44:40 SQL> -- PREPARE BUILD (TRAINING) DATA
20:44:40 SQL> --
20:44:40 SQL> 
20:44:40 SQL> -- 1. Missing Value treatment for all Predictors and
20:44:40 SQL> -- 2. Outlier Treatment and
20:44:40 SQL> -- 3. Normalization are performed below.
20:44:40 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:44:40 SQL> --    normalized here.
20:44:40 SQL> 
20:44:40 SQL> BEGIN
20:44:40   2  	-- Perform missing value treatment for all predictors
20:44:40   3  	-- create miss tables
20:44:40   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:44:40   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:44:40   6  
20:44:40   7  	-- populate miss tables
20:44:40   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:44:40   9  	  miss_table_name => 'svmc_miss_num',
20:44:40  10  	  data_table_name => '&bldtable',
20:44:40  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:44:40  12  
20:44:40  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:44:40  14  	  miss_table_name => 'svmc_miss_cat',
20:44:40  15  	  data_table_name => '&bldtable',
20:44:40  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:44:40  17  
20:44:40  18  	-- xform input data to replace missing values
20:44:40  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:44:40  20  	  miss_table_name => 'svmc_miss_num',
20:44:40  21  	  data_table_name => '&bldtable',
20:44:40  22  	  xform_view_name => 'xformed_build_miss_num');
20:44:40  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:44:40  24  	  miss_table_name => 'svmc_miss_cat',
20:44:40  25  	  data_table_name => '&bldtable',
20:44:40  26  	  xform_view_name => 'xformed_build_miss_cat');
20:44:40  27  
20:44:40  28  	-- Perform outlier treatment.
20:44:40  29  	-- create clip table
20:44:40  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:44:40  31  
20:44:40  32  	-- populate clip table
20:44:40  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:44:40  34  	  clip_table_name => 'svmc_clip',
20:44:40  35  	  data_table_name => '&bldtable',
20:44:40  36  	  tail_frac	  => 0.025,
20:44:40  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:44:40  38  
20:44:40  39  	-- xform input data to winsorized data
20:44:40  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:44:40  41  	  clip_table_name => 'svmc_clip',
20:44:40  42  	  data_table_name => '&bldtable',
20:44:40  43  	  xform_view_name => 'svmc_winsor');
20:44:40  44  
20:44:40  45  	-- create normalization table
20:44:40  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:44:40  47  
20:44:40  48  	-- populate normalization table based on winsorized data
20:44:40  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:44:40  50  	  norm_table_name => 'svmc_norm',
20:44:40  51  	  data_table_name => 'svmc_winsor',
20:44:40  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:44:40  53  
20:44:40  54  	-- normalize the original data
20:44:40  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:44:40  56  	  norm_table_name => 'svmc_norm',
20:44:40  57  	  data_table_name => '&bldtable',
20:44:40  58  	  xform_view_name => 'svmc_build_prep');
20:44:40  59  END;
20:44:40  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.48
20:44:58 SQL> 
20:44:58 SQL> ---------------------
20:44:58 SQL> -- CREATE A NEW MODEL
20:44:58 SQL> --
20:44:58 SQL> -- Cleanup old model with the same name for repeat runs
20:44:58 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:44:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:44:58   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.88
20:44:59 SQL> 
20:44:59 SQL> -- Build a new SVM Model
20:44:59 SQL> BEGIN
20:44:59   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:44:59   3  	  model_name	      => '&model_name',
20:44:59   4  	  mining_function     => dbms_data_mining.classification,
20:44:59   5  	  data_table_name     => 'svmc_build_prep',
20:44:59   6  	  case_id_column_name => '&case_id',
20:44:59   7  	  target_column_name  => '&target',
20:44:59   8  	  settings_table_name => 'svmc_settings');
20:44:59   9  END;
20:44:59  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.04
20:45:27 SQL> 
20:45:27 SQL> -----------------------------------------------------------------------
20:45:27 SQL> --			       APPLY/score THE MODEL
20:45:27 SQL> -----------------------------------------------------------------------
20:45:27 SQL> 
20:45:27 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:45:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:45:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:45:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
20:45:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:45:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:45:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:45:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:45:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:45:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:45:28 SQL> -----------------------
20:45:28 SQL> -- PREPARE SCORING DATA
20:45:28 SQL> --
20:45:28 SQL> -- If the data for model creation has been prepared, then the data
20:45:28 SQL> -- to be scored using the model must be prepared in the same manner
20:45:28 SQL> -- in order to obtain meaningful results.
20:45:28 SQL> --
20:45:28 SQL> -- 1. Missing Value treatment for all Predictors and
20:45:28 SQL> -- 2. Normalization
20:45:28 SQL> -- No outlier treatment will be performed during test and apply. The
20:45:28 SQL> -- normalization step is sufficient, since the normalization parameters
20:45:28 SQL> -- already capture the effects of outlier treatment done with build data.
20:45:28 SQL> --
20:45:28 SQL> BEGIN
20:45:28   2  	-- Xform Test data to replace missing values
20:45:28   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:45:28   4  	  miss_table_name => 'svmc_miss_num',
20:45:28   5  	  data_table_name => '&scoretable',
20:45:28   6  	  xform_view_name => 'xformed_apply_miss_num');
20:45:28   7  
20:45:28   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:45:28   9  	  miss_table_name => 'svmc_miss_cat',
20:45:28  10  	  data_table_name => '&scoretable',
20:45:28  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:45:28  12  
20:45:28  13  	-- Normalize the data to be scored
20:45:28  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:45:28  15  	  norm_table_name => 'svmc_norm',
20:45:28  16  	  data_table_name => '&scoretable',
20:45:28  17  	  xform_view_name => 'svmc_apply_prep');
20:45:28  18  END;
20:45:28  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
20:45:29 SQL> 
20:45:29 SQL> -- Use same model_name used in score_gattn.sql
20:45:29 SQL> DEFINE model_name = 'forex15'
20:45:29 SQL> 
20:45:29 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
20:45:29 SQL> 
20:45:29 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
20:45:29   2  SELECT
20:45:29   3  prdate
20:45:29   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:45:29   5  ,sysdate
20:45:29   6  ,SUBSTR(prdate,1,3)pair
20:45:29   7  ,SUBSTR(prdate,4,19)ydate
20:45:29   8  FROM svmc_apply_prep
20:45:29   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
20:45:29 SQL> @aud_score1day_gattn.sql	2011-01-06 20:30:00
20:45:29 SQL> --
20:45:29 SQL> -- aud_score1day_gattn.sql
20:45:29 SQL> --
20:45:29 SQL> 
20:45:29 SQL> CREATE OR REPLACE VIEW sme AS
20:45:29   2  SELECT
20:45:29   3  'aud'||m.ydate prdate
20:45:29   4  ,NULL gattn
20:45:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:45:29   6  ,eur_g00
20:45:29   7  ,eur_g01
20:45:29   8  ,eur_g02
20:45:29   9  ,eur_g03
20:45:29  10  ,eur_g04
20:45:29  11  ,eur_g05
20:45:29  12  ,eur_g06
20:45:29  13  ,eur_g07
20:45:29  14  ,eur_g08
20:45:29  15  ,eur_g09
20:45:29  16  ,eur_g10
20:45:29  17  ,eur_g11
20:45:29  18  ,eur_g12
20:45:29  19  ,eur_g13
20:45:29  20  ,eur_g14
20:45:29  21  ,eur_g15
20:45:29  22  ,eur_g16
20:45:29  23  ,eur_g17
20:45:29  24  ,eur_g18
20:45:29  25  ,eur_g19
20:45:29  26  ,eur_g20
20:45:29  27  ,eur_g21
20:45:29  28  ,eur_g22
20:45:29  29  ,eur_g23
20:45:29  30  ,eur_g24
20:45:29  31  ,eur_g25
20:45:29  32  ,eur_g26
20:45:29  33  ,eur_g27
20:45:29  34  ,eur_g28
20:45:29  35  ,eur_g29
20:45:29  36  ,eur_g30
20:45:29  37  ,eur_g31
20:45:29  38  ,eur_g32
20:45:29  39  ,eur_g33
20:45:29  40  ,eur_g34
20:45:29  41  ,eur_g35
20:45:29  42  ,eur_g36
20:45:29  43  ,eur_g37
20:45:29  44  ,eur_g38
20:45:29  45  ,eur_g39
20:45:29  46  ,eur_g40
20:45:29  47  ,eur_g41
20:45:29  48  ,aud_g00
20:45:29  49  ,aud_g01
20:45:29  50  ,aud_g02
20:45:29  51  ,aud_g03
20:45:29  52  ,aud_g04
20:45:29  53  ,aud_g05
20:45:29  54  ,aud_g06
20:45:29  55  ,aud_g07
20:45:29  56  ,aud_g08
20:45:29  57  ,aud_g09
20:45:29  58  ,aud_g10
20:45:29  59  ,aud_g11
20:45:29  60  ,aud_g12
20:45:29  61  ,aud_g13
20:45:29  62  ,aud_g14
20:45:29  63  ,aud_g15
20:45:29  64  ,aud_g16
20:45:29  65  ,aud_g17
20:45:29  66  ,aud_g18
20:45:29  67  ,aud_g19
20:45:29  68  ,aud_g20
20:45:29  69  ,aud_g21
20:45:29  70  ,aud_g22
20:45:29  71  ,aud_g23
20:45:29  72  ,aud_g24
20:45:29  73  ,aud_g25
20:45:29  74  ,aud_g26
20:45:29  75  ,aud_g27
20:45:29  76  ,aud_g28
20:45:29  77  ,aud_g29
20:45:29  78  ,aud_g30
20:45:29  79  ,aud_g31
20:45:29  80  ,aud_g32
20:45:29  81  ,aud_g33
20:45:29  82  ,aud_g34
20:45:29  83  ,aud_g35
20:45:29  84  ,aud_g36
20:45:29  85  ,aud_g37
20:45:29  86  ,aud_g38
20:45:29  87  ,aud_g39
20:45:29  88  ,aud_g40
20:45:29  89  ,aud_g41
20:45:29  90  ,gbp_g00
20:45:29  91  ,gbp_g01
20:45:29  92  ,gbp_g02
20:45:29  93  ,gbp_g03
20:45:29  94  ,gbp_g04
20:45:29  95  ,gbp_g05
20:45:29  96  ,gbp_g06
20:45:29  97  ,gbp_g07
20:45:29  98  ,gbp_g08
20:45:29  99  ,gbp_g09
20:45:29 100  ,gbp_g10
20:45:29 101  ,gbp_g11
20:45:29 102  ,gbp_g12
20:45:29 103  ,gbp_g13
20:45:29 104  ,gbp_g14
20:45:29 105  ,gbp_g15
20:45:29 106  ,gbp_g16
20:45:29 107  ,gbp_g17
20:45:29 108  ,gbp_g18
20:45:29 109  ,gbp_g19
20:45:29 110  ,gbp_g20
20:45:29 111  ,gbp_g21
20:45:29 112  ,gbp_g22
20:45:29 113  ,gbp_g23
20:45:29 114  ,gbp_g24
20:45:29 115  ,gbp_g25
20:45:29 116  ,gbp_g26
20:45:29 117  ,gbp_g27
20:45:29 118  ,gbp_g28
20:45:29 119  ,gbp_g29
20:45:29 120  ,gbp_g30
20:45:29 121  ,gbp_g31
20:45:29 122  ,gbp_g32
20:45:29 123  ,gbp_g33
20:45:29 124  ,gbp_g34
20:45:29 125  ,gbp_g35
20:45:29 126  ,gbp_g36
20:45:29 127  ,gbp_g37
20:45:29 128  ,gbp_g38
20:45:29 129  ,gbp_g39
20:45:29 130  ,gbp_g40
20:45:29 131  ,gbp_g41
20:45:29 132  ,jpy_g00
20:45:29 133  ,jpy_g01
20:45:29 134  ,jpy_g02
20:45:29 135  ,jpy_g03
20:45:29 136  ,jpy_g04
20:45:29 137  ,jpy_g05
20:45:29 138  ,jpy_g06
20:45:29 139  ,jpy_g07
20:45:29 140  ,jpy_g08
20:45:29 141  ,jpy_g09
20:45:29 142  ,jpy_g10
20:45:29 143  ,jpy_g11
20:45:29 144  ,jpy_g12
20:45:29 145  ,jpy_g13
20:45:29 146  ,jpy_g14
20:45:29 147  ,jpy_g15
20:45:29 148  ,jpy_g16
20:45:29 149  ,jpy_g17
20:45:29 150  ,jpy_g18
20:45:29 151  ,jpy_g19
20:45:29 152  ,jpy_g20
20:45:29 153  ,jpy_g21
20:45:29 154  ,jpy_g22
20:45:29 155  ,jpy_g23
20:45:29 156  ,jpy_g24
20:45:29 157  ,jpy_g25
20:45:29 158  ,jpy_g26
20:45:29 159  ,jpy_g27
20:45:29 160  ,jpy_g28
20:45:29 161  ,jpy_g29
20:45:29 162  ,jpy_g30
20:45:29 163  ,jpy_g31
20:45:29 164  ,jpy_g32
20:45:29 165  ,jpy_g33
20:45:29 166  ,jpy_g34
20:45:29 167  ,jpy_g35
20:45:29 168  ,jpy_g36
20:45:29 169  ,jpy_g37
20:45:29 170  ,jpy_g38
20:45:29 171  ,jpy_g39
20:45:29 172  ,jpy_g40
20:45:29 173  ,jpy_g41
20:45:29 174  ,cad_g00
20:45:29 175  ,cad_g01
20:45:29 176  ,cad_g02
20:45:29 177  ,cad_g03
20:45:29 178  ,cad_g04
20:45:29 179  ,cad_g05
20:45:29 180  ,cad_g06
20:45:29 181  ,cad_g07
20:45:29 182  ,cad_g08
20:45:29 183  ,cad_g09
20:45:29 184  ,cad_g10
20:45:29 185  ,cad_g11
20:45:29 186  ,cad_g12
20:45:29 187  ,cad_g13
20:45:29 188  ,cad_g14
20:45:29 189  ,cad_g15
20:45:29 190  ,cad_g16
20:45:29 191  ,cad_g17
20:45:29 192  ,cad_g18
20:45:29 193  ,cad_g19
20:45:29 194  ,cad_g20
20:45:29 195  ,cad_g21
20:45:29 196  ,cad_g22
20:45:29 197  ,cad_g23
20:45:29 198  ,cad_g24
20:45:29 199  ,cad_g25
20:45:29 200  ,cad_g26
20:45:29 201  ,cad_g27
20:45:29 202  ,cad_g28
20:45:29 203  ,cad_g29
20:45:29 204  ,cad_g30
20:45:29 205  ,cad_g31
20:45:29 206  ,cad_g32
20:45:29 207  ,cad_g33
20:45:29 208  ,cad_g34
20:45:29 209  ,cad_g35
20:45:29 210  ,cad_g36
20:45:29 211  ,cad_g37
20:45:29 212  ,cad_g38
20:45:29 213  ,cad_g39
20:45:29 214  ,cad_g40
20:45:29 215  ,cad_g41
20:45:29 216  ,chf_g00
20:45:29 217  ,chf_g01
20:45:29 218  ,chf_g02
20:45:29 219  ,chf_g03
20:45:29 220  ,chf_g04
20:45:29 221  ,chf_g05
20:45:29 222  ,chf_g06
20:45:29 223  ,chf_g07
20:45:29 224  ,chf_g08
20:45:29 225  ,chf_g09
20:45:29 226  ,chf_g10
20:45:29 227  ,chf_g11
20:45:29 228  ,chf_g12
20:45:29 229  ,chf_g13
20:45:29 230  ,chf_g14
20:45:29 231  ,chf_g15
20:45:29 232  ,chf_g16
20:45:29 233  ,chf_g17
20:45:29 234  ,chf_g18
20:45:29 235  ,chf_g19
20:45:29 236  ,chf_g20
20:45:29 237  ,chf_g21
20:45:29 238  ,chf_g22
20:45:29 239  ,chf_g23
20:45:29 240  ,chf_g24
20:45:29 241  ,chf_g25
20:45:29 242  ,chf_g26
20:45:29 243  ,chf_g27
20:45:29 244  ,chf_g28
20:45:29 245  ,chf_g29
20:45:29 246  ,chf_g30
20:45:29 247  ,chf_g31
20:45:29 248  ,chf_g32
20:45:29 249  ,chf_g33
20:45:29 250  ,chf_g34
20:45:29 251  ,chf_g35
20:45:29 252  ,chf_g36
20:45:29 253  ,chf_g37
20:45:29 254  ,chf_g38
20:45:29 255  ,chf_g39
20:45:29 256  ,chf_g40
20:45:29 257  ,chf_g41
20:45:29 258  FROM aud_ms6 m
20:45:29 259  WHERE m.ydate = '&1'||' '||'&2'
20:45:29 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'20:30:00'

View created.

Elapsed: 00:00:00.12
20:45:29 SQL> 
20:45:29 SQL> -- rpt
20:45:29 SQL> -- We should see just 1 row:
20:45:29 SQL> 
20:45:29 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
20:45:29 SQL> 
20:45:29 SQL> -- Build the model:
20:45:29 SQL> CREATE OR REPLACE VIEW bme AS
20:45:29   2  SELECT
20:45:29   3  'aud'||m.ydate prdate
20:45:29   4  ,gattn
20:45:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:45:29   6  ,eur_g00
20:45:29   7  ,eur_g01
20:45:29   8  ,eur_g02
20:45:29   9  ,eur_g03
20:45:29  10  ,eur_g04
20:45:29  11  ,eur_g05
20:45:29  12  ,eur_g06
20:45:29  13  ,eur_g07
20:45:29  14  ,eur_g08
20:45:29  15  ,eur_g09
20:45:29  16  ,eur_g10
20:45:29  17  ,eur_g11
20:45:29  18  ,eur_g12
20:45:29  19  ,eur_g13
20:45:29  20  ,eur_g14
20:45:29  21  ,eur_g15
20:45:29  22  ,eur_g16
20:45:29  23  ,eur_g17
20:45:29  24  ,eur_g18
20:45:29  25  ,eur_g19
20:45:29  26  ,eur_g20
20:45:29  27  ,eur_g21
20:45:29  28  ,eur_g22
20:45:29  29  ,eur_g23
20:45:29  30  ,eur_g24
20:45:29  31  ,eur_g25
20:45:29  32  ,eur_g26
20:45:29  33  ,eur_g27
20:45:29  34  ,eur_g28
20:45:29  35  ,eur_g29
20:45:29  36  ,eur_g30
20:45:29  37  ,eur_g31
20:45:29  38  ,eur_g32
20:45:29  39  ,eur_g33
20:45:29  40  ,eur_g34
20:45:29  41  ,eur_g35
20:45:29  42  ,eur_g36
20:45:29  43  ,eur_g37
20:45:29  44  ,eur_g38
20:45:29  45  ,eur_g39
20:45:29  46  ,eur_g40
20:45:29  47  ,eur_g41
20:45:29  48  ,aud_g00
20:45:29  49  ,aud_g01
20:45:29  50  ,aud_g02
20:45:29  51  ,aud_g03
20:45:29  52  ,aud_g04
20:45:29  53  ,aud_g05
20:45:29  54  ,aud_g06
20:45:29  55  ,aud_g07
20:45:29  56  ,aud_g08
20:45:29  57  ,aud_g09
20:45:29  58  ,aud_g10
20:45:29  59  ,aud_g11
20:45:29  60  ,aud_g12
20:45:29  61  ,aud_g13
20:45:29  62  ,aud_g14
20:45:29  63  ,aud_g15
20:45:29  64  ,aud_g16
20:45:29  65  ,aud_g17
20:45:29  66  ,aud_g18
20:45:29  67  ,aud_g19
20:45:29  68  ,aud_g20
20:45:29  69  ,aud_g21
20:45:29  70  ,aud_g22
20:45:29  71  ,aud_g23
20:45:29  72  ,aud_g24
20:45:29  73  ,aud_g25
20:45:29  74  ,aud_g26
20:45:29  75  ,aud_g27
20:45:29  76  ,aud_g28
20:45:29  77  ,aud_g29
20:45:29  78  ,aud_g30
20:45:29  79  ,aud_g31
20:45:29  80  ,aud_g32
20:45:29  81  ,aud_g33
20:45:29  82  ,aud_g34
20:45:29  83  ,aud_g35
20:45:29  84  ,aud_g36
20:45:29  85  ,aud_g37
20:45:29  86  ,aud_g38
20:45:29  87  ,aud_g39
20:45:29  88  ,aud_g40
20:45:29  89  ,aud_g41
20:45:29  90  ,gbp_g00
20:45:29  91  ,gbp_g01
20:45:29  92  ,gbp_g02
20:45:29  93  ,gbp_g03
20:45:29  94  ,gbp_g04
20:45:29  95  ,gbp_g05
20:45:29  96  ,gbp_g06
20:45:29  97  ,gbp_g07
20:45:29  98  ,gbp_g08
20:45:29  99  ,gbp_g09
20:45:29 100  ,gbp_g10
20:45:29 101  ,gbp_g11
20:45:29 102  ,gbp_g12
20:45:29 103  ,gbp_g13
20:45:29 104  ,gbp_g14
20:45:29 105  ,gbp_g15
20:45:29 106  ,gbp_g16
20:45:29 107  ,gbp_g17
20:45:29 108  ,gbp_g18
20:45:29 109  ,gbp_g19
20:45:29 110  ,gbp_g20
20:45:29 111  ,gbp_g21
20:45:29 112  ,gbp_g22
20:45:29 113  ,gbp_g23
20:45:29 114  ,gbp_g24
20:45:29 115  ,gbp_g25
20:45:29 116  ,gbp_g26
20:45:29 117  ,gbp_g27
20:45:29 118  ,gbp_g28
20:45:29 119  ,gbp_g29
20:45:29 120  ,gbp_g30
20:45:29 121  ,gbp_g31
20:45:29 122  ,gbp_g32
20:45:29 123  ,gbp_g33
20:45:29 124  ,gbp_g34
20:45:29 125  ,gbp_g35
20:45:29 126  ,gbp_g36
20:45:29 127  ,gbp_g37
20:45:29 128  ,gbp_g38
20:45:29 129  ,gbp_g39
20:45:29 130  ,gbp_g40
20:45:29 131  ,gbp_g41
20:45:29 132  ,jpy_g00
20:45:29 133  ,jpy_g01
20:45:29 134  ,jpy_g02
20:45:29 135  ,jpy_g03
20:45:29 136  ,jpy_g04
20:45:29 137  ,jpy_g05
20:45:29 138  ,jpy_g06
20:45:29 139  ,jpy_g07
20:45:29 140  ,jpy_g08
20:45:29 141  ,jpy_g09
20:45:29 142  ,jpy_g10
20:45:29 143  ,jpy_g11
20:45:29 144  ,jpy_g12
20:45:29 145  ,jpy_g13
20:45:29 146  ,jpy_g14
20:45:29 147  ,jpy_g15
20:45:29 148  ,jpy_g16
20:45:29 149  ,jpy_g17
20:45:29 150  ,jpy_g18
20:45:29 151  ,jpy_g19
20:45:29 152  ,jpy_g20
20:45:29 153  ,jpy_g21
20:45:29 154  ,jpy_g22
20:45:29 155  ,jpy_g23
20:45:29 156  ,jpy_g24
20:45:29 157  ,jpy_g25
20:45:29 158  ,jpy_g26
20:45:29 159  ,jpy_g27
20:45:29 160  ,jpy_g28
20:45:29 161  ,jpy_g29
20:45:29 162  ,jpy_g30
20:45:29 163  ,jpy_g31
20:45:29 164  ,jpy_g32
20:45:29 165  ,jpy_g33
20:45:29 166  ,jpy_g34
20:45:29 167  ,jpy_g35
20:45:29 168  ,jpy_g36
20:45:29 169  ,jpy_g37
20:45:29 170  ,jpy_g38
20:45:29 171  ,jpy_g39
20:45:29 172  ,jpy_g40
20:45:29 173  ,jpy_g41
20:45:29 174  ,cad_g00
20:45:29 175  ,cad_g01
20:45:29 176  ,cad_g02
20:45:29 177  ,cad_g03
20:45:29 178  ,cad_g04
20:45:29 179  ,cad_g05
20:45:29 180  ,cad_g06
20:45:29 181  ,cad_g07
20:45:29 182  ,cad_g08
20:45:29 183  ,cad_g09
20:45:29 184  ,cad_g10
20:45:29 185  ,cad_g11
20:45:29 186  ,cad_g12
20:45:29 187  ,cad_g13
20:45:29 188  ,cad_g14
20:45:29 189  ,cad_g15
20:45:29 190  ,cad_g16
20:45:29 191  ,cad_g17
20:45:29 192  ,cad_g18
20:45:29 193  ,cad_g19
20:45:29 194  ,cad_g20
20:45:29 195  ,cad_g21
20:45:29 196  ,cad_g22
20:45:29 197  ,cad_g23
20:45:29 198  ,cad_g24
20:45:29 199  ,cad_g25
20:45:29 200  ,cad_g26
20:45:29 201  ,cad_g27
20:45:29 202  ,cad_g28
20:45:29 203  ,cad_g29
20:45:29 204  ,cad_g30
20:45:29 205  ,cad_g31
20:45:29 206  ,cad_g32
20:45:29 207  ,cad_g33
20:45:29 208  ,cad_g34
20:45:29 209  ,cad_g35
20:45:29 210  ,cad_g36
20:45:29 211  ,cad_g37
20:45:29 212  ,cad_g38
20:45:29 213  ,cad_g39
20:45:29 214  ,cad_g40
20:45:29 215  ,cad_g41
20:45:29 216  ,chf_g00
20:45:29 217  ,chf_g01
20:45:29 218  ,chf_g02
20:45:29 219  ,chf_g03
20:45:29 220  ,chf_g04
20:45:29 221  ,chf_g05
20:45:29 222  ,chf_g06
20:45:29 223  ,chf_g07
20:45:29 224  ,chf_g08
20:45:29 225  ,chf_g09
20:45:29 226  ,chf_g10
20:45:29 227  ,chf_g11
20:45:29 228  ,chf_g12
20:45:29 229  ,chf_g13
20:45:29 230  ,chf_g14
20:45:29 231  ,chf_g15
20:45:29 232  ,chf_g16
20:45:29 233  ,chf_g17
20:45:29 234  ,chf_g18
20:45:29 235  ,chf_g19
20:45:29 236  ,chf_g20
20:45:29 237  ,chf_g21
20:45:29 238  ,chf_g22
20:45:29 239  ,chf_g23
20:45:29 240  ,chf_g24
20:45:29 241  ,chf_g25
20:45:29 242  ,chf_g26
20:45:29 243  ,chf_g27
20:45:29 244  ,chf_g28
20:45:29 245  ,chf_g29
20:45:29 246  ,chf_g30
20:45:29 247  ,chf_g31
20:45:29 248  ,chf_g32
20:45:29 249  ,chf_g33
20:45:29 250  ,chf_g34
20:45:29 251  ,chf_g35
20:45:29 252  ,chf_g36
20:45:29 253  ,chf_g37
20:45:29 254  ,chf_g38
20:45:29 255  ,chf_g39
20:45:29 256  ,chf_g40
20:45:29 257  ,chf_g41
20:45:29 258  FROM aud_ms6 m
20:45:29 259  WHERE gattn IN('nup','up')
20:45:29 260  AND 1+m.ydate < '&1'||' '||'&2'
20:45:29 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'20:30:00'

View created.

Elapsed: 00:00:00.11
20:45:29 SQL> 
20:45:29 SQL> -- rpt
20:45:29 SQL> 
20:45:29 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12870
up	     6641

Elapsed: 00:00:00.04
20:45:29 SQL> 
20:45:29 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 20:25:00

Elapsed: 00:00:00.05
20:45:29 SQL> 
20:45:29 SQL> -- Now build model from bme and score sme
20:45:29 SQL> @score1gattn.sql
20:45:29 SQL> -- score1gattn.sql
20:45:29 SQL> 
20:45:29 SQL> -- Does the 1st SVM score
20:45:29 SQL> 
20:45:29 SQL> -- Fill up svmc_apply_prep
20:45:29 SQL> @score_gattn.sql
20:45:29 SQL> --
20:45:29 SQL> -- score_gattn.sql
20:45:29 SQL> --
20:45:29 SQL> 
20:45:29 SQL> -- usage: score_gattn.sql
20:45:29 SQL> 
20:45:29 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:45:29 SQL> 
20:45:29 SQL> DEFINE target	= 'gattn'
20:45:29 SQL> DEFINE model_name = 'forex15'
20:45:29 SQL> DEFINE bldtable	= 'bme'
20:45:29 SQL> DEFINE scoretable = 'sme'
20:45:29 SQL> DEFINE case_id	= 'prdate'
20:45:29 SQL> 
20:45:29 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:45:29 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:45:29 SQL> 
20:45:29 SQL> -- Builds an SVM model using pl/sql.
20:45:29 SQL> 
20:45:29 SQL> -----------------------------------------------------------------------
20:45:29 SQL> --			    BUILD THE MODEL
20:45:29 SQL> -----------------------------------------------------------------------
20:45:29 SQL> 
20:45:29 SQL> -- Cleanup old build data preparation objects for repeat runs
20:45:29 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
20:45:29 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
20:45:29 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
20:45:29 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
20:45:29 SQL> 
20:45:29 SQL> 
20:45:29 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:45:29 SQL> --
20:45:29 SQL> -- DROP	TABLE svmc_settings ;
20:45:29 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:45:29 SQL> -- DELETE svmc_settings;
20:45:29 SQL> 
20:45:29 SQL> -- The default classification algorithm is Naive Bayes. So override
20:45:29 SQL> -- this choice to SVM using a settings table.
20:45:29 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:45:29 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:45:29 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:45:29 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:45:29 SQL> -- models.
20:45:29 SQL> --
20:45:29 SQL> 
20:45:29 SQL> -- Do this once and then comment it out.
20:45:29 SQL> -- That makes script go faster.
20:45:29 SQL> -- BEGIN
20:45:29 SQL> -- -- Populate settings table
20:45:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:45:29 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:45:29 SQL> --
20:45:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:45:29 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:45:29 SQL> --
20:45:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:45:29 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:45:29 SQL> --   COMMIT;
20:45:29 SQL> -- END;
20:45:29 SQL> -- /
20:45:29 SQL> 
20:45:29 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:45:29 SQL> 
20:45:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:45:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:45:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:45:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:45:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:45:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:45:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:45:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:45:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:45:30 SQL> 
20:45:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:45:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:45:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:45:30 SQL> 
20:45:30 SQL> --------------------------------
20:45:30 SQL> -- PREPARE BUILD (TRAINING) DATA
20:45:30 SQL> --
20:45:30 SQL> 
20:45:30 SQL> -- 1. Missing Value treatment for all Predictors and
20:45:30 SQL> -- 2. Outlier Treatment and
20:45:30 SQL> -- 3. Normalization are performed below.
20:45:30 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:45:30 SQL> --    normalized here.
20:45:30 SQL> 
20:45:30 SQL> BEGIN
20:45:30   2  	-- Perform missing value treatment for all predictors
20:45:30   3  	-- create miss tables
20:45:30   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:45:30   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:45:30   6  
20:45:30   7  	-- populate miss tables
20:45:30   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:45:30   9  	  miss_table_name => 'svmc_miss_num',
20:45:30  10  	  data_table_name => '&bldtable',
20:45:30  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:45:30  12  
20:45:30  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:45:30  14  	  miss_table_name => 'svmc_miss_cat',
20:45:30  15  	  data_table_name => '&bldtable',
20:45:30  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:45:30  17  
20:45:30  18  	-- xform input data to replace missing values
20:45:30  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:45:30  20  	  miss_table_name => 'svmc_miss_num',
20:45:30  21  	  data_table_name => '&bldtable',
20:45:30  22  	  xform_view_name => 'xformed_build_miss_num');
20:45:30  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:45:30  24  	  miss_table_name => 'svmc_miss_cat',
20:45:30  25  	  data_table_name => '&bldtable',
20:45:30  26  	  xform_view_name => 'xformed_build_miss_cat');
20:45:30  27  
20:45:30  28  	-- Perform outlier treatment.
20:45:30  29  	-- create clip table
20:45:30  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:45:30  31  
20:45:30  32  	-- populate clip table
20:45:30  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:45:30  34  	  clip_table_name => 'svmc_clip',
20:45:30  35  	  data_table_name => '&bldtable',
20:45:30  36  	  tail_frac	  => 0.025,
20:45:30  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:45:30  38  
20:45:30  39  	-- xform input data to winsorized data
20:45:30  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:45:30  41  	  clip_table_name => 'svmc_clip',
20:45:30  42  	  data_table_name => '&bldtable',
20:45:30  43  	  xform_view_name => 'svmc_winsor');
20:45:30  44  
20:45:30  45  	-- create normalization table
20:45:30  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:45:30  47  
20:45:30  48  	-- populate normalization table based on winsorized data
20:45:30  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:45:30  50  	  norm_table_name => 'svmc_norm',
20:45:30  51  	  data_table_name => 'svmc_winsor',
20:45:30  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:45:30  53  
20:45:30  54  	-- normalize the original data
20:45:30  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:45:30  56  	  norm_table_name => 'svmc_norm',
20:45:30  57  	  data_table_name => '&bldtable',
20:45:30  58  	  xform_view_name => 'svmc_build_prep');
20:45:30  59  END;
20:45:30  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.71
20:45:48 SQL> 
20:45:48 SQL> ---------------------
20:45:48 SQL> -- CREATE A NEW MODEL
20:45:48 SQL> --
20:45:48 SQL> -- Cleanup old model with the same name for repeat runs
20:45:48 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:45:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:45:48   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.01
20:45:49 SQL> 
20:45:49 SQL> -- Build a new SVM Model
20:45:49 SQL> BEGIN
20:45:49   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:45:49   3  	  model_name	      => '&model_name',
20:45:49   4  	  mining_function     => dbms_data_mining.classification,
20:45:49   5  	  data_table_name     => 'svmc_build_prep',
20:45:49   6  	  case_id_column_name => '&case_id',
20:45:49   7  	  target_column_name  => '&target',
20:45:49   8  	  settings_table_name => 'svmc_settings');
20:45:49   9  END;
20:45:49  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.02
20:46:16 SQL> 
20:46:16 SQL> -----------------------------------------------------------------------
20:46:16 SQL> --			       APPLY/score THE MODEL
20:46:16 SQL> -----------------------------------------------------------------------
20:46:16 SQL> 
20:46:16 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:46:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:46:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:46:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:46:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:46:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:46:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:46:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:46:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:46:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:46:17 SQL> -----------------------
20:46:17 SQL> -- PREPARE SCORING DATA
20:46:17 SQL> --
20:46:17 SQL> -- If the data for model creation has been prepared, then the data
20:46:17 SQL> -- to be scored using the model must be prepared in the same manner
20:46:17 SQL> -- in order to obtain meaningful results.
20:46:17 SQL> --
20:46:17 SQL> -- 1. Missing Value treatment for all Predictors and
20:46:17 SQL> -- 2. Normalization
20:46:17 SQL> -- No outlier treatment will be performed during test and apply. The
20:46:17 SQL> -- normalization step is sufficient, since the normalization parameters
20:46:17 SQL> -- already capture the effects of outlier treatment done with build data.
20:46:17 SQL> --
20:46:17 SQL> BEGIN
20:46:17   2  	-- Xform Test data to replace missing values
20:46:17   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:46:17   4  	  miss_table_name => 'svmc_miss_num',
20:46:17   5  	  data_table_name => '&scoretable',
20:46:17   6  	  xform_view_name => 'xformed_apply_miss_num');
20:46:17   7  
20:46:17   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:46:17   9  	  miss_table_name => 'svmc_miss_cat',
20:46:17  10  	  data_table_name => '&scoretable',
20:46:17  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:46:17  12  
20:46:17  13  	-- Normalize the data to be scored
20:46:17  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:46:17  15  	  norm_table_name => 'svmc_norm',
20:46:17  16  	  data_table_name => '&scoretable',
20:46:17  17  	  xform_view_name => 'svmc_apply_prep');
20:46:17  18  END;
20:46:17  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
20:46:18 SQL> 
20:46:18 SQL> -- Use same model_name used in score_gattn.sql
20:46:18 SQL> DEFINE model_name = 'forex15'
20:46:18 SQL> 
20:46:18 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
20:46:18 SQL> 
20:46:18 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
20:46:18   2  SELECT
20:46:18   3  prdate
20:46:18   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:46:18   5  ,sysdate
20:46:18   6  ,SUBSTR(prdate,1,3)pair
20:46:18   7  ,SUBSTR(prdate,4,19)ydate
20:46:18   8  FROM svmc_apply_prep
20:46:18   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
20:46:18 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
