
SQL*Plus: Release 11.2.0.1.0 Production on Fri Jan 7 17:00:16 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

17:00:16 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
17:00:16 SQL> 17:00:16 SQL> @aud_score1day.sql  2011-01-07 16:40:00
17:00:16 SQL> --
17:00:16 SQL> -- aud_score1day.sql
17:00:16 SQL> --
17:00:16 SQL> 
17:00:16 SQL> CREATE OR REPLACE VIEW sme AS
17:00:16   2  SELECT
17:00:16   3  'aud'||m.ydate prdate
17:00:16   4  ,NULL gatt
17:00:16   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
17:00:16   6  ,eur_g00
17:00:16   7  ,eur_g01
17:00:16   8  ,eur_g02
17:00:16   9  ,eur_g03
17:00:16  10  ,eur_g04
17:00:16  11  ,eur_g05
17:00:16  12  ,eur_g06
17:00:16  13  ,eur_g07
17:00:16  14  ,eur_g08
17:00:16  15  ,eur_g09
17:00:16  16  ,eur_g10
17:00:16  17  ,eur_g11
17:00:16  18  ,eur_g12
17:00:16  19  ,eur_g13
17:00:16  20  ,eur_g14
17:00:16  21  ,eur_g15
17:00:16  22  ,eur_g16
17:00:16  23  ,eur_g17
17:00:16  24  ,eur_g18
17:00:16  25  ,eur_g19
17:00:16  26  ,eur_g20
17:00:16  27  ,eur_g21
17:00:16  28  ,eur_g22
17:00:16  29  ,eur_g23
17:00:16  30  ,eur_g24
17:00:16  31  ,eur_g25
17:00:16  32  ,eur_g26
17:00:16  33  ,eur_g27
17:00:16  34  ,eur_g28
17:00:16  35  ,eur_g29
17:00:16  36  ,eur_g30
17:00:16  37  ,eur_g31
17:00:16  38  ,eur_g32
17:00:16  39  ,eur_g33
17:00:16  40  ,eur_g34
17:00:16  41  ,eur_g35
17:00:16  42  ,eur_g36
17:00:16  43  ,eur_g37
17:00:16  44  ,eur_g38
17:00:16  45  ,eur_g39
17:00:16  46  ,eur_g40
17:00:16  47  ,eur_g41
17:00:16  48  ,aud_g00
17:00:16  49  ,aud_g01
17:00:16  50  ,aud_g02
17:00:16  51  ,aud_g03
17:00:16  52  ,aud_g04
17:00:16  53  ,aud_g05
17:00:16  54  ,aud_g06
17:00:16  55  ,aud_g07
17:00:16  56  ,aud_g08
17:00:16  57  ,aud_g09
17:00:16  58  ,aud_g10
17:00:16  59  ,aud_g11
17:00:16  60  ,aud_g12
17:00:16  61  ,aud_g13
17:00:16  62  ,aud_g14
17:00:16  63  ,aud_g15
17:00:16  64  ,aud_g16
17:00:16  65  ,aud_g17
17:00:16  66  ,aud_g18
17:00:16  67  ,aud_g19
17:00:16  68  ,aud_g20
17:00:16  69  ,aud_g21
17:00:16  70  ,aud_g22
17:00:16  71  ,aud_g23
17:00:16  72  ,aud_g24
17:00:16  73  ,aud_g25
17:00:16  74  ,aud_g26
17:00:16  75  ,aud_g27
17:00:16  76  ,aud_g28
17:00:16  77  ,aud_g29
17:00:16  78  ,aud_g30
17:00:16  79  ,aud_g31
17:00:16  80  ,aud_g32
17:00:16  81  ,aud_g33
17:00:16  82  ,aud_g34
17:00:16  83  ,aud_g35
17:00:16  84  ,aud_g36
17:00:16  85  ,aud_g37
17:00:16  86  ,aud_g38
17:00:16  87  ,aud_g39
17:00:16  88  ,aud_g40
17:00:16  89  ,aud_g41
17:00:16  90  ,gbp_g00
17:00:16  91  ,gbp_g01
17:00:16  92  ,gbp_g02
17:00:16  93  ,gbp_g03
17:00:16  94  ,gbp_g04
17:00:16  95  ,gbp_g05
17:00:16  96  ,gbp_g06
17:00:16  97  ,gbp_g07
17:00:16  98  ,gbp_g08
17:00:16  99  ,gbp_g09
17:00:16 100  ,gbp_g10
17:00:16 101  ,gbp_g11
17:00:16 102  ,gbp_g12
17:00:16 103  ,gbp_g13
17:00:16 104  ,gbp_g14
17:00:16 105  ,gbp_g15
17:00:16 106  ,gbp_g16
17:00:16 107  ,gbp_g17
17:00:16 108  ,gbp_g18
17:00:16 109  ,gbp_g19
17:00:16 110  ,gbp_g20
17:00:16 111  ,gbp_g21
17:00:16 112  ,gbp_g22
17:00:16 113  ,gbp_g23
17:00:16 114  ,gbp_g24
17:00:16 115  ,gbp_g25
17:00:16 116  ,gbp_g26
17:00:16 117  ,gbp_g27
17:00:16 118  ,gbp_g28
17:00:16 119  ,gbp_g29
17:00:16 120  ,gbp_g30
17:00:16 121  ,gbp_g31
17:00:16 122  ,gbp_g32
17:00:16 123  ,gbp_g33
17:00:16 124  ,gbp_g34
17:00:16 125  ,gbp_g35
17:00:16 126  ,gbp_g36
17:00:16 127  ,gbp_g37
17:00:16 128  ,gbp_g38
17:00:16 129  ,gbp_g39
17:00:16 130  ,gbp_g40
17:00:16 131  ,gbp_g41
17:00:16 132  ,jpy_g00
17:00:16 133  ,jpy_g01
17:00:16 134  ,jpy_g02
17:00:16 135  ,jpy_g03
17:00:16 136  ,jpy_g04
17:00:16 137  ,jpy_g05
17:00:16 138  ,jpy_g06
17:00:16 139  ,jpy_g07
17:00:16 140  ,jpy_g08
17:00:16 141  ,jpy_g09
17:00:16 142  ,jpy_g10
17:00:16 143  ,jpy_g11
17:00:16 144  ,jpy_g12
17:00:16 145  ,jpy_g13
17:00:16 146  ,jpy_g14
17:00:16 147  ,jpy_g15
17:00:16 148  ,jpy_g16
17:00:16 149  ,jpy_g17
17:00:16 150  ,jpy_g18
17:00:16 151  ,jpy_g19
17:00:16 152  ,jpy_g20
17:00:16 153  ,jpy_g21
17:00:16 154  ,jpy_g22
17:00:16 155  ,jpy_g23
17:00:16 156  ,jpy_g24
17:00:16 157  ,jpy_g25
17:00:16 158  ,jpy_g26
17:00:16 159  ,jpy_g27
17:00:16 160  ,jpy_g28
17:00:16 161  ,jpy_g29
17:00:16 162  ,jpy_g30
17:00:16 163  ,jpy_g31
17:00:16 164  ,jpy_g32
17:00:16 165  ,jpy_g33
17:00:16 166  ,jpy_g34
17:00:16 167  ,jpy_g35
17:00:16 168  ,jpy_g36
17:00:16 169  ,jpy_g37
17:00:16 170  ,jpy_g38
17:00:16 171  ,jpy_g39
17:00:16 172  ,jpy_g40
17:00:16 173  ,jpy_g41
17:00:16 174  ,cad_g00
17:00:16 175  ,cad_g01
17:00:16 176  ,cad_g02
17:00:16 177  ,cad_g03
17:00:16 178  ,cad_g04
17:00:16 179  ,cad_g05
17:00:16 180  ,cad_g06
17:00:16 181  ,cad_g07
17:00:16 182  ,cad_g08
17:00:16 183  ,cad_g09
17:00:16 184  ,cad_g10
17:00:16 185  ,cad_g11
17:00:16 186  ,cad_g12
17:00:16 187  ,cad_g13
17:00:16 188  ,cad_g14
17:00:16 189  ,cad_g15
17:00:16 190  ,cad_g16
17:00:16 191  ,cad_g17
17:00:16 192  ,cad_g18
17:00:16 193  ,cad_g19
17:00:16 194  ,cad_g20
17:00:16 195  ,cad_g21
17:00:16 196  ,cad_g22
17:00:16 197  ,cad_g23
17:00:16 198  ,cad_g24
17:00:16 199  ,cad_g25
17:00:16 200  ,cad_g26
17:00:16 201  ,cad_g27
17:00:16 202  ,cad_g28
17:00:16 203  ,cad_g29
17:00:16 204  ,cad_g30
17:00:16 205  ,cad_g31
17:00:16 206  ,cad_g32
17:00:16 207  ,cad_g33
17:00:16 208  ,cad_g34
17:00:16 209  ,cad_g35
17:00:16 210  ,cad_g36
17:00:16 211  ,cad_g37
17:00:16 212  ,cad_g38
17:00:16 213  ,cad_g39
17:00:16 214  ,cad_g40
17:00:16 215  ,cad_g41
17:00:16 216  ,chf_g00
17:00:16 217  ,chf_g01
17:00:16 218  ,chf_g02
17:00:16 219  ,chf_g03
17:00:16 220  ,chf_g04
17:00:16 221  ,chf_g05
17:00:16 222  ,chf_g06
17:00:16 223  ,chf_g07
17:00:16 224  ,chf_g08
17:00:16 225  ,chf_g09
17:00:16 226  ,chf_g10
17:00:16 227  ,chf_g11
17:00:16 228  ,chf_g12
17:00:16 229  ,chf_g13
17:00:16 230  ,chf_g14
17:00:16 231  ,chf_g15
17:00:16 232  ,chf_g16
17:00:16 233  ,chf_g17
17:00:16 234  ,chf_g18
17:00:16 235  ,chf_g19
17:00:16 236  ,chf_g20
17:00:16 237  ,chf_g21
17:00:16 238  ,chf_g22
17:00:16 239  ,chf_g23
17:00:16 240  ,chf_g24
17:00:16 241  ,chf_g25
17:00:16 242  ,chf_g26
17:00:16 243  ,chf_g27
17:00:16 244  ,chf_g28
17:00:16 245  ,chf_g29
17:00:16 246  ,chf_g30
17:00:16 247  ,chf_g31
17:00:16 248  ,chf_g32
17:00:16 249  ,chf_g33
17:00:16 250  ,chf_g34
17:00:16 251  ,chf_g35
17:00:16 252  ,chf_g36
17:00:16 253  ,chf_g37
17:00:16 254  ,chf_g38
17:00:16 255  ,chf_g39
17:00:16 256  ,chf_g40
17:00:16 257  ,chf_g41
17:00:16 258  FROM aud_ms6 m
17:00:16 259  WHERE m.ydate = '&1'||' '||'&2'
17:00:16 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'16:40:00'

View created.

Elapsed: 00:00:00.15
17:00:16 SQL> 
17:00:16 SQL> -- rpt
17:00:16 SQL> -- We should see just 1 row:
17:00:16 SQL> 
17:00:16 SQL> SELECT COUNT(prdate) FROM sme
17:00:16   2  
17:00:16 SQL> -- Build the model:
17:00:16 SQL> CREATE OR REPLACE VIEW bme AS
17:00:16   2  SELECT
17:00:16   3  'aud'||m.ydate prdate
17:00:16   4  ,gatt
17:00:16   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
17:00:16   6  ,eur_g00
17:00:16   7  ,eur_g01
17:00:16   8  ,eur_g02
17:00:16   9  ,eur_g03
17:00:16  10  ,eur_g04
17:00:16  11  ,eur_g05
17:00:16  12  ,eur_g06
17:00:16  13  ,eur_g07
17:00:16  14  ,eur_g08
17:00:16  15  ,eur_g09
17:00:16  16  ,eur_g10
17:00:16  17  ,eur_g11
17:00:16  18  ,eur_g12
17:00:16  19  ,eur_g13
17:00:16  20  ,eur_g14
17:00:16  21  ,eur_g15
17:00:16  22  ,eur_g16
17:00:16  23  ,eur_g17
17:00:16  24  ,eur_g18
17:00:16  25  ,eur_g19
17:00:16  26  ,eur_g20
17:00:16  27  ,eur_g21
17:00:16  28  ,eur_g22
17:00:16  29  ,eur_g23
17:00:16  30  ,eur_g24
17:00:16  31  ,eur_g25
17:00:16  32  ,eur_g26
17:00:16  33  ,eur_g27
17:00:16  34  ,eur_g28
17:00:16  35  ,eur_g29
17:00:16  36  ,eur_g30
17:00:16  37  ,eur_g31
17:00:16  38  ,eur_g32
17:00:16  39  ,eur_g33
17:00:16  40  ,eur_g34
17:00:16  41  ,eur_g35
17:00:16  42  ,eur_g36
17:00:16  43  ,eur_g37
17:00:16  44  ,eur_g38
17:00:16  45  ,eur_g39
17:00:16  46  ,eur_g40
17:00:16  47  ,eur_g41
17:00:16  48  ,aud_g00
17:00:16  49  ,aud_g01
17:00:16  50  ,aud_g02
17:00:16  51  ,aud_g03
17:00:16  52  ,aud_g04
17:00:16  53  ,aud_g05
17:00:16  54  ,aud_g06
17:00:16  55  ,aud_g07
17:00:16  56  ,aud_g08
17:00:16  57  ,aud_g09
17:00:16  58  ,aud_g10
17:00:16  59  ,aud_g11
17:00:16  60  ,aud_g12
17:00:16  61  ,aud_g13
17:00:16  62  ,aud_g14
17:00:16  63  ,aud_g15
17:00:16  64  ,aud_g16
17:00:16  65  ,aud_g17
17:00:16  66  ,aud_g18
17:00:16  67  ,aud_g19
17:00:16  68  ,aud_g20
17:00:16  69  ,aud_g21
17:00:16  70  ,aud_g22
17:00:16  71  ,aud_g23
17:00:16  72  ,aud_g24
17:00:16  73  ,aud_g25
17:00:16  74  ,aud_g26
17:00:16  75  ,aud_g27
17:00:16  76  ,aud_g28
17:00:16  77  ,aud_g29
17:00:16  78  ,aud_g30
17:00:16  79  ,aud_g31
17:00:16  80  ,aud_g32
17:00:16  81  ,aud_g33
17:00:16  82  ,aud_g34
17:00:16  83  ,aud_g35
17:00:16  84  ,aud_g36
17:00:16  85  ,aud_g37
17:00:16  86  ,aud_g38
17:00:16  87  ,aud_g39
17:00:16  88  ,aud_g40
17:00:16  89  ,aud_g41
17:00:16  90  ,gbp_g00
17:00:16  91  ,gbp_g01
17:00:16  92  ,gbp_g02
17:00:16  93  ,gbp_g03
17:00:16  94  ,gbp_g04
17:00:16  95  ,gbp_g05
17:00:16  96  ,gbp_g06
17:00:16  97  ,gbp_g07
17:00:16  98  ,gbp_g08
17:00:16  99  ,gbp_g09
17:00:16 100  ,gbp_g10
17:00:16 101  ,gbp_g11
17:00:16 102  ,gbp_g12
17:00:16 103  ,gbp_g13
17:00:16 104  ,gbp_g14
17:00:16 105  ,gbp_g15
17:00:16 106  ,gbp_g16
17:00:16 107  ,gbp_g17
17:00:16 108  ,gbp_g18
17:00:16 109  ,gbp_g19
17:00:16 110  ,gbp_g20
17:00:16 111  ,gbp_g21
17:00:16 112  ,gbp_g22
17:00:16 113  ,gbp_g23
17:00:16 114  ,gbp_g24
17:00:16 115  ,gbp_g25
17:00:16 116  ,gbp_g26
17:00:16 117  ,gbp_g27
17:00:16 118  ,gbp_g28
17:00:16 119  ,gbp_g29
17:00:16 120  ,gbp_g30
17:00:16 121  ,gbp_g31
17:00:16 122  ,gbp_g32
17:00:16 123  ,gbp_g33
17:00:16 124  ,gbp_g34
17:00:16 125  ,gbp_g35
17:00:16 126  ,gbp_g36
17:00:16 127  ,gbp_g37
17:00:16 128  ,gbp_g38
17:00:16 129  ,gbp_g39
17:00:16 130  ,gbp_g40
17:00:16 131  ,gbp_g41
17:00:16 132  ,jpy_g00
17:00:16 133  ,jpy_g01
17:00:16 134  ,jpy_g02
17:00:16 135  ,jpy_g03
17:00:16 136  ,jpy_g04
17:00:16 137  ,jpy_g05
17:00:16 138  ,jpy_g06
17:00:16 139  ,jpy_g07
17:00:16 140  ,jpy_g08
17:00:16 141  ,jpy_g09
17:00:16 142  ,jpy_g10
17:00:16 143  ,jpy_g11
17:00:16 144  ,jpy_g12
17:00:16 145  ,jpy_g13
17:00:16 146  ,jpy_g14
17:00:16 147  ,jpy_g15
17:00:16 148  ,jpy_g16
17:00:16 149  ,jpy_g17
17:00:16 150  ,jpy_g18
17:00:16 151  ,jpy_g19
17:00:16 152  ,jpy_g20
17:00:16 153  ,jpy_g21
17:00:16 154  ,jpy_g22
17:00:16 155  ,jpy_g23
17:00:16 156  ,jpy_g24
17:00:16 157  ,jpy_g25
17:00:16 158  ,jpy_g26
17:00:16 159  ,jpy_g27
17:00:16 160  ,jpy_g28
17:00:16 161  ,jpy_g29
17:00:16 162  ,jpy_g30
17:00:16 163  ,jpy_g31
17:00:16 164  ,jpy_g32
17:00:16 165  ,jpy_g33
17:00:16 166  ,jpy_g34
17:00:16 167  ,jpy_g35
17:00:16 168  ,jpy_g36
17:00:16 169  ,jpy_g37
17:00:16 170  ,jpy_g38
17:00:16 171  ,jpy_g39
17:00:16 172  ,jpy_g40
17:00:16 173  ,jpy_g41
17:00:16 174  ,cad_g00
17:00:16 175  ,cad_g01
17:00:16 176  ,cad_g02
17:00:16 177  ,cad_g03
17:00:16 178  ,cad_g04
17:00:16 179  ,cad_g05
17:00:16 180  ,cad_g06
17:00:16 181  ,cad_g07
17:00:16 182  ,cad_g08
17:00:16 183  ,cad_g09
17:00:16 184  ,cad_g10
17:00:16 185  ,cad_g11
17:00:16 186  ,cad_g12
17:00:16 187  ,cad_g13
17:00:16 188  ,cad_g14
17:00:16 189  ,cad_g15
17:00:16 190  ,cad_g16
17:00:16 191  ,cad_g17
17:00:16 192  ,cad_g18
17:00:16 193  ,cad_g19
17:00:16 194  ,cad_g20
17:00:16 195  ,cad_g21
17:00:16 196  ,cad_g22
17:00:16 197  ,cad_g23
17:00:16 198  ,cad_g24
17:00:16 199  ,cad_g25
17:00:16 200  ,cad_g26
17:00:16 201  ,cad_g27
17:00:16 202  ,cad_g28
17:00:16 203  ,cad_g29
17:00:16 204  ,cad_g30
17:00:16 205  ,cad_g31
17:00:16 206  ,cad_g32
17:00:16 207  ,cad_g33
17:00:16 208  ,cad_g34
17:00:16 209  ,cad_g35
17:00:16 210  ,cad_g36
17:00:16 211  ,cad_g37
17:00:16 212  ,cad_g38
17:00:16 213  ,cad_g39
17:00:16 214  ,cad_g40
17:00:16 215  ,cad_g41
17:00:16 216  ,chf_g00
17:00:16 217  ,chf_g01
17:00:16 218  ,chf_g02
17:00:16 219  ,chf_g03
17:00:16 220  ,chf_g04
17:00:16 221  ,chf_g05
17:00:16 222  ,chf_g06
17:00:16 223  ,chf_g07
17:00:16 224  ,chf_g08
17:00:16 225  ,chf_g09
17:00:16 226  ,chf_g10
17:00:16 227  ,chf_g11
17:00:16 228  ,chf_g12
17:00:16 229  ,chf_g13
17:00:16 230  ,chf_g14
17:00:16 231  ,chf_g15
17:00:16 232  ,chf_g16
17:00:16 233  ,chf_g17
17:00:16 234  ,chf_g18
17:00:16 235  ,chf_g19
17:00:16 236  ,chf_g20
17:00:16 237  ,chf_g21
17:00:16 238  ,chf_g22
17:00:16 239  ,chf_g23
17:00:16 240  ,chf_g24
17:00:16 241  ,chf_g25
17:00:16 242  ,chf_g26
17:00:16 243  ,chf_g27
17:00:16 244  ,chf_g28
17:00:16 245  ,chf_g29
17:00:16 246  ,chf_g30
17:00:16 247  ,chf_g31
17:00:16 248  ,chf_g32
17:00:16 249  ,chf_g33
17:00:16 250  ,chf_g34
17:00:16 251  ,chf_g35
17:00:16 252  ,chf_g36
17:00:16 253  ,chf_g37
17:00:16 254  ,chf_g38
17:00:16 255  ,chf_g39
17:00:16 256  ,chf_g40
17:00:16 257  ,chf_g41
17:00:16 258  FROM aud_ms6 m
17:00:16 259  WHERE gatt IN('nup','up')
17:00:16 260  AND 1+m.ydate < '&1'||' '||'&2'
17:00:16 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'16:40:00'

View created.

Elapsed: 00:00:00.13
17:00:16 SQL> 
17:00:16 SQL> -- rpt
17:00:16 SQL> 
17:00:16 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
17:00:16   2  
17:00:16 SQL> SELECT MAX(prdate) FROM bme
17:00:16   2  
17:00:16 SQL> -- Now build model from bme and score sme
17:00:16 SQL> @score1.sql
17:00:16 SQL> -- score1.sql
17:00:16 SQL> 
17:00:16 SQL> -- Does the 1st SVM score
17:00:16 SQL> 
17:00:16 SQL> -- Fill up svmc_apply_prep
17:00:16 SQL> @score.sql
17:00:16 SQL> --
17:00:16 SQL> -- score.sql
17:00:16 SQL> --
17:00:16 SQL> 
17:00:16 SQL> -- usage: score.sql
17:00:16 SQL> 
17:00:16 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
17:00:16 SQL> 
17:00:16 SQL> DEFINE target	= 'gatt'
17:00:16 SQL> DEFINE model_name = 'forex15'
17:00:16 SQL> DEFINE bldtable	= 'bme'
17:00:16 SQL> DEFINE scoretable = 'sme'
17:00:16 SQL> DEFINE case_id	= 'prdate'
17:00:16 SQL> 
17:00:16 SQL> -- Define a variable to help me exclude some columns from some data mining calls
17:00:16 SQL> DEFINE exclude1 = "'&target','&case_id'"
17:00:16 SQL> 
17:00:16 SQL> -- Builds an SVM model using pl/sql.
17:00:16 SQL> 
17:00:16 SQL> -----------------------------------------------------------------------
17:00:16 SQL> --			    BUILD THE MODEL
17:00:16 SQL> -----------------------------------------------------------------------
17:00:16 SQL> 
17:00:16 SQL> -- Cleanup old build data preparation objects for repeat runs
17:00:16 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
17:00:16 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
17:00:16 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
17:00:16 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
17:00:16 SQL> 
17:00:16 SQL> 
17:00:16 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
17:00:16 SQL> --
17:00:16 SQL> -- DROP	TABLE svmc_settings ;
17:00:16 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
17:00:16 SQL> -- DELETE svmc_settings;
17:00:16 SQL> 
17:00:16 SQL> -- The default classification algorithm is Naive Bayes. So override
17:00:16 SQL> -- this choice to SVM using a settings table.
17:00:16 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
17:00:16 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
17:00:16 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
17:00:16 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
17:00:16 SQL> -- models.
17:00:16 SQL> --
17:00:16 SQL> 
17:00:16 SQL> -- Do this once and then comment it out.
17:00:16 SQL> -- That makes script go faster.
17:00:16 SQL> -- BEGIN
17:00:16 SQL> -- -- Populate settings table
17:00:16 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:00:16 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
17:00:16 SQL> --
17:00:16 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:00:16 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
17:00:16 SQL> --
17:00:16 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:00:16 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
17:00:16 SQL> --   COMMIT;
17:00:16 SQL> -- END;
17:00:16 SQL> -- /
17:00:16 SQL> 
17:00:16 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
17:00:16 SQL> 
17:00:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
17:00:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:00:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
17:00:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
17:00:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:00:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
17:00:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
17:00:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:00:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
17:00:16 SQL> 
17:00:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
17:00:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:00:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
17:00:16 SQL> 
17:00:16 SQL> --------------------------------
17:00:16 SQL> -- PREPARE BUILD (TRAINING) DATA
17:00:16 SQL> --
17:00:16 SQL> 
17:00:16 SQL> -- 1. Missing Value treatment for all Predictors and
17:00:16 SQL> -- 2. Outlier Treatment and
17:00:16 SQL> -- 3. Normalization are performed below.
17:00:16 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
17:00:16 SQL> --    normalized here.
17:00:16 SQL> 
17:00:16 SQL> BEGIN
17:00:16   2  	-- Perform missing value treatment for all predictors
17:00:16   3  	-- create miss tables
17:00:16   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
17:00:16   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
17:00:16   6  
17:00:16   7  	-- populate miss tables
17:00:16   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
17:00:16   9  	  miss_table_name => 'svmc_miss_num',
17:00:16  10  	  data_table_name => '&bldtable',
17:00:16  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:00:16  12  
17:00:16  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
17:00:16  14  	  miss_table_name => 'svmc_miss_cat',
17:00:16  15  	  data_table_name => '&bldtable',
17:00:16  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:00:16  17  
17:00:16  18  	-- xform input data to replace missing values
17:00:16  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
17:00:16  20  	  miss_table_name => 'svmc_miss_num',
17:00:16  21  	  data_table_name => '&bldtable',
17:00:16  22  	  xform_view_name => 'xformed_build_miss_num');
17:00:16  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
17:00:16  24  	  miss_table_name => 'svmc_miss_cat',
17:00:16  25  	  data_table_name => '&bldtable',
17:00:16  26  	  xform_view_name => 'xformed_build_miss_cat');
17:00:16  27  
17:00:16  28  	-- Perform outlier treatment.
17:00:16  29  	-- create clip table
17:00:16  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
17:00:16  31  
17:00:16  32  	-- populate clip table
17:00:16  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
17:00:16  34  	  clip_table_name => 'svmc_clip',
17:00:16  35  	  data_table_name => '&bldtable',
17:00:16  36  	  tail_frac	  => 0.025,
17:00:16  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:00:16  38  
17:00:16  39  	-- xform input data to winsorized data
17:00:16  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
17:00:16  41  	  clip_table_name => 'svmc_clip',
17:00:16  42  	  data_table_name => '&bldtable',
17:00:16  43  	  xform_view_name => 'svmc_winsor');
17:00:16  44  
17:00:16  45  	-- create normalization table
17:00:16  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
17:00:16  47  
17:00:16  48  	-- populate normalization table based on winsorized data
17:00:16  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
17:00:16  50  	  norm_table_name => 'svmc_norm',
17:00:16  51  	  data_table_name => 'svmc_winsor',
17:00:16  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:00:16  53  
17:00:16  54  	-- normalize the original data
17:00:16  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
17:00:16  56  	  norm_table_name => 'svmc_norm',
17:00:16  57  	  data_table_name => '&bldtable',
17:00:16  58  	  xform_view_name => 'svmc_build_prep');
17:00:16  59  END;
17:00:16  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.25
17:00:36 SQL> 
17:00:36 SQL> ---------------------
17:00:36 SQL> -- CREATE A NEW MODEL
17:00:36 SQL> --
17:00:36 SQL> -- Cleanup old model with the same name for repeat runs
17:00:36 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
17:00:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:00:36   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.61
17:00:36 SQL> 
17:00:36 SQL> -- Build a new SVM Model
17:00:36 SQL> BEGIN
17:00:36   2  	DBMS_DATA_MINING.CREATE_MODEL(
17:00:36   3  	  model_name	      => '&model_name',
17:00:36   4  	  mining_function     => dbms_data_mining.classification,
17:00:36   5  	  data_table_name     => 'svmc_build_prep',
17:00:36   6  	  case_id_column_name => '&case_id',
17:00:36   7  	  target_column_name  => '&target',
17:00:36   8  	  settings_table_name => 'svmc_settings');
17:00:36   9  END;
17:00:36  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:31.54
17:01:08 SQL> 
17:01:08 SQL> -----------------------------------------------------------------------
17:01:08 SQL> --			       APPLY/score THE MODEL
17:01:08 SQL> -----------------------------------------------------------------------
17:01:08 SQL> 
17:01:08 SQL> -- Cleanup old scoring data preparation objects for repeat runs
17:01:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
17:01:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:01:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
17:01:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
17:01:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:01:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
17:01:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
17:01:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:01:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
17:01:08 SQL> -----------------------
17:01:08 SQL> -- PREPARE SCORING DATA
17:01:08 SQL> --
17:01:08 SQL> -- If the data for model creation has been prepared, then the data
17:01:08 SQL> -- to be scored using the model must be prepared in the same manner
17:01:08 SQL> -- in order to obtain meaningful results.
17:01:08 SQL> --
17:01:08 SQL> -- 1. Missing Value treatment for all Predictors and
17:01:08 SQL> -- 2. Normalization
17:01:08 SQL> -- No outlier treatment will be performed during test and apply. The
17:01:08 SQL> -- normalization step is sufficient, since the normalization parameters
17:01:08 SQL> -- already capture the effects of outlier treatment done with build data.
17:01:08 SQL> --
17:01:08 SQL> BEGIN
17:01:08   2  	-- Xform Test data to replace missing values
17:01:08   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
17:01:08   4  	  miss_table_name => 'svmc_miss_num',
17:01:08   5  	  data_table_name => '&scoretable',
17:01:08   6  	  xform_view_name => 'xformed_apply_miss_num');
17:01:08   7  
17:01:08   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
17:01:08   9  	  miss_table_name => 'svmc_miss_cat',
17:01:08  10  	  data_table_name => '&scoretable',
17:01:08  11  	  xform_view_name => 'xformed_apply_miss_cat');
17:01:08  12  
17:01:08  13  	-- Normalize the data to be scored
17:01:08  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
17:01:08  15  	  norm_table_name => 'svmc_norm',
17:01:08  16  	  data_table_name => '&scoretable',
17:01:08  17  	  xform_view_name => 'svmc_apply_prep');
17:01:08  18  END;
17:01:08  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.36
17:01:09 SQL> 
17:01:09 SQL> -- Use same model_name used in score.sql
17:01:09 SQL> DEFINE model_name = 'forex15'
17:01:09 SQL> 
17:01:09 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
17:01:09 SQL> 
17:01:09 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.13
17:01:10 SQL> 
17:01:10 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
17:01:10   2  SELECT
17:01:10   3  prdate
17:01:10   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
17:01:10   5  ,sysdate
17:01:10   6  ,SUBSTR(prdate,1,3)pair
17:01:10   7  ,SUBSTR(prdate,4,19)ydate
17:01:10   8  FROM svmc_apply_prep
17:01:10   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.31
17:01:10 SQL> @aud_score1day.sql  2011-01-07 16:45:00
17:01:10 SQL> --
17:01:10 SQL> -- aud_score1day.sql
17:01:10 SQL> --
17:01:10 SQL> 
17:01:10 SQL> CREATE OR REPLACE VIEW sme AS
17:01:10   2  SELECT
17:01:10   3  'aud'||m.ydate prdate
17:01:10   4  ,NULL gatt
17:01:10   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
17:01:10   6  ,eur_g00
17:01:10   7  ,eur_g01
17:01:10   8  ,eur_g02
17:01:10   9  ,eur_g03
17:01:10  10  ,eur_g04
17:01:10  11  ,eur_g05
17:01:10  12  ,eur_g06
17:01:10  13  ,eur_g07
17:01:10  14  ,eur_g08
17:01:10  15  ,eur_g09
17:01:10  16  ,eur_g10
17:01:10  17  ,eur_g11
17:01:10  18  ,eur_g12
17:01:10  19  ,eur_g13
17:01:10  20  ,eur_g14
17:01:10  21  ,eur_g15
17:01:10  22  ,eur_g16
17:01:10  23  ,eur_g17
17:01:10  24  ,eur_g18
17:01:10  25  ,eur_g19
17:01:10  26  ,eur_g20
17:01:10  27  ,eur_g21
17:01:10  28  ,eur_g22
17:01:10  29  ,eur_g23
17:01:10  30  ,eur_g24
17:01:10  31  ,eur_g25
17:01:10  32  ,eur_g26
17:01:10  33  ,eur_g27
17:01:10  34  ,eur_g28
17:01:10  35  ,eur_g29
17:01:10  36  ,eur_g30
17:01:10  37  ,eur_g31
17:01:10  38  ,eur_g32
17:01:10  39  ,eur_g33
17:01:10  40  ,eur_g34
17:01:10  41  ,eur_g35
17:01:10  42  ,eur_g36
17:01:10  43  ,eur_g37
17:01:10  44  ,eur_g38
17:01:10  45  ,eur_g39
17:01:10  46  ,eur_g40
17:01:10  47  ,eur_g41
17:01:10  48  ,aud_g00
17:01:10  49  ,aud_g01
17:01:10  50  ,aud_g02
17:01:10  51  ,aud_g03
17:01:10  52  ,aud_g04
17:01:10  53  ,aud_g05
17:01:10  54  ,aud_g06
17:01:10  55  ,aud_g07
17:01:10  56  ,aud_g08
17:01:10  57  ,aud_g09
17:01:10  58  ,aud_g10
17:01:10  59  ,aud_g11
17:01:10  60  ,aud_g12
17:01:10  61  ,aud_g13
17:01:10  62  ,aud_g14
17:01:10  63  ,aud_g15
17:01:10  64  ,aud_g16
17:01:10  65  ,aud_g17
17:01:10  66  ,aud_g18
17:01:10  67  ,aud_g19
17:01:10  68  ,aud_g20
17:01:10  69  ,aud_g21
17:01:10  70  ,aud_g22
17:01:10  71  ,aud_g23
17:01:10  72  ,aud_g24
17:01:10  73  ,aud_g25
17:01:10  74  ,aud_g26
17:01:10  75  ,aud_g27
17:01:10  76  ,aud_g28
17:01:10  77  ,aud_g29
17:01:10  78  ,aud_g30
17:01:10  79  ,aud_g31
17:01:10  80  ,aud_g32
17:01:10  81  ,aud_g33
17:01:10  82  ,aud_g34
17:01:10  83  ,aud_g35
17:01:10  84  ,aud_g36
17:01:10  85  ,aud_g37
17:01:10  86  ,aud_g38
17:01:10  87  ,aud_g39
17:01:10  88  ,aud_g40
17:01:10  89  ,aud_g41
17:01:10  90  ,gbp_g00
17:01:10  91  ,gbp_g01
17:01:10  92  ,gbp_g02
17:01:10  93  ,gbp_g03
17:01:10  94  ,gbp_g04
17:01:10  95  ,gbp_g05
17:01:10  96  ,gbp_g06
17:01:10  97  ,gbp_g07
17:01:10  98  ,gbp_g08
17:01:10  99  ,gbp_g09
17:01:10 100  ,gbp_g10
17:01:10 101  ,gbp_g11
17:01:10 102  ,gbp_g12
17:01:10 103  ,gbp_g13
17:01:10 104  ,gbp_g14
17:01:10 105  ,gbp_g15
17:01:10 106  ,gbp_g16
17:01:10 107  ,gbp_g17
17:01:10 108  ,gbp_g18
17:01:10 109  ,gbp_g19
17:01:10 110  ,gbp_g20
17:01:10 111  ,gbp_g21
17:01:10 112  ,gbp_g22
17:01:10 113  ,gbp_g23
17:01:10 114  ,gbp_g24
17:01:10 115  ,gbp_g25
17:01:10 116  ,gbp_g26
17:01:10 117  ,gbp_g27
17:01:10 118  ,gbp_g28
17:01:10 119  ,gbp_g29
17:01:10 120  ,gbp_g30
17:01:10 121  ,gbp_g31
17:01:10 122  ,gbp_g32
17:01:10 123  ,gbp_g33
17:01:10 124  ,gbp_g34
17:01:10 125  ,gbp_g35
17:01:10 126  ,gbp_g36
17:01:10 127  ,gbp_g37
17:01:10 128  ,gbp_g38
17:01:10 129  ,gbp_g39
17:01:10 130  ,gbp_g40
17:01:10 131  ,gbp_g41
17:01:10 132  ,jpy_g00
17:01:10 133  ,jpy_g01
17:01:10 134  ,jpy_g02
17:01:10 135  ,jpy_g03
17:01:10 136  ,jpy_g04
17:01:10 137  ,jpy_g05
17:01:10 138  ,jpy_g06
17:01:10 139  ,jpy_g07
17:01:10 140  ,jpy_g08
17:01:10 141  ,jpy_g09
17:01:10 142  ,jpy_g10
17:01:10 143  ,jpy_g11
17:01:10 144  ,jpy_g12
17:01:10 145  ,jpy_g13
17:01:10 146  ,jpy_g14
17:01:10 147  ,jpy_g15
17:01:10 148  ,jpy_g16
17:01:10 149  ,jpy_g17
17:01:10 150  ,jpy_g18
17:01:10 151  ,jpy_g19
17:01:10 152  ,jpy_g20
17:01:10 153  ,jpy_g21
17:01:10 154  ,jpy_g22
17:01:10 155  ,jpy_g23
17:01:10 156  ,jpy_g24
17:01:10 157  ,jpy_g25
17:01:10 158  ,jpy_g26
17:01:10 159  ,jpy_g27
17:01:10 160  ,jpy_g28
17:01:10 161  ,jpy_g29
17:01:10 162  ,jpy_g30
17:01:10 163  ,jpy_g31
17:01:10 164  ,jpy_g32
17:01:10 165  ,jpy_g33
17:01:10 166  ,jpy_g34
17:01:10 167  ,jpy_g35
17:01:10 168  ,jpy_g36
17:01:10 169  ,jpy_g37
17:01:10 170  ,jpy_g38
17:01:10 171  ,jpy_g39
17:01:10 172  ,jpy_g40
17:01:10 173  ,jpy_g41
17:01:10 174  ,cad_g00
17:01:10 175  ,cad_g01
17:01:10 176  ,cad_g02
17:01:10 177  ,cad_g03
17:01:10 178  ,cad_g04
17:01:10 179  ,cad_g05
17:01:10 180  ,cad_g06
17:01:10 181  ,cad_g07
17:01:10 182  ,cad_g08
17:01:10 183  ,cad_g09
17:01:10 184  ,cad_g10
17:01:10 185  ,cad_g11
17:01:10 186  ,cad_g12
17:01:10 187  ,cad_g13
17:01:10 188  ,cad_g14
17:01:10 189  ,cad_g15
17:01:10 190  ,cad_g16
17:01:10 191  ,cad_g17
17:01:10 192  ,cad_g18
17:01:10 193  ,cad_g19
17:01:10 194  ,cad_g20
17:01:10 195  ,cad_g21
17:01:10 196  ,cad_g22
17:01:10 197  ,cad_g23
17:01:10 198  ,cad_g24
17:01:10 199  ,cad_g25
17:01:10 200  ,cad_g26
17:01:10 201  ,cad_g27
17:01:10 202  ,cad_g28
17:01:10 203  ,cad_g29
17:01:10 204  ,cad_g30
17:01:10 205  ,cad_g31
17:01:10 206  ,cad_g32
17:01:10 207  ,cad_g33
17:01:10 208  ,cad_g34
17:01:10 209  ,cad_g35
17:01:10 210  ,cad_g36
17:01:10 211  ,cad_g37
17:01:10 212  ,cad_g38
17:01:10 213  ,cad_g39
17:01:10 214  ,cad_g40
17:01:10 215  ,cad_g41
17:01:10 216  ,chf_g00
17:01:10 217  ,chf_g01
17:01:10 218  ,chf_g02
17:01:10 219  ,chf_g03
17:01:10 220  ,chf_g04
17:01:10 221  ,chf_g05
17:01:10 222  ,chf_g06
17:01:10 223  ,chf_g07
17:01:10 224  ,chf_g08
17:01:10 225  ,chf_g09
17:01:10 226  ,chf_g10
17:01:10 227  ,chf_g11
17:01:10 228  ,chf_g12
17:01:10 229  ,chf_g13
17:01:10 230  ,chf_g14
17:01:10 231  ,chf_g15
17:01:10 232  ,chf_g16
17:01:10 233  ,chf_g17
17:01:10 234  ,chf_g18
17:01:10 235  ,chf_g19
17:01:10 236  ,chf_g20
17:01:10 237  ,chf_g21
17:01:10 238  ,chf_g22
17:01:10 239  ,chf_g23
17:01:10 240  ,chf_g24
17:01:10 241  ,chf_g25
17:01:10 242  ,chf_g26
17:01:10 243  ,chf_g27
17:01:10 244  ,chf_g28
17:01:10 245  ,chf_g29
17:01:10 246  ,chf_g30
17:01:10 247  ,chf_g31
17:01:10 248  ,chf_g32
17:01:10 249  ,chf_g33
17:01:10 250  ,chf_g34
17:01:10 251  ,chf_g35
17:01:10 252  ,chf_g36
17:01:10 253  ,chf_g37
17:01:10 254  ,chf_g38
17:01:10 255  ,chf_g39
17:01:10 256  ,chf_g40
17:01:10 257  ,chf_g41
17:01:10 258  FROM aud_ms6 m
17:01:10 259  WHERE m.ydate = '&1'||' '||'&2'
17:01:10 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'16:45:00'

View created.

Elapsed: 00:00:00.17
17:01:10 SQL> 
17:01:10 SQL> -- rpt
17:01:10 SQL> -- We should see just 1 row:
17:01:10 SQL> 
17:01:10 SQL> SELECT COUNT(prdate) FROM sme
17:01:10   2  
17:01:10 SQL> -- Build the model:
17:01:10 SQL> CREATE OR REPLACE VIEW bme AS
17:01:10   2  SELECT
17:01:10   3  'aud'||m.ydate prdate
17:01:10   4  ,gatt
17:01:10   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
17:01:10   6  ,eur_g00
17:01:10   7  ,eur_g01
17:01:10   8  ,eur_g02
17:01:10   9  ,eur_g03
17:01:10  10  ,eur_g04
17:01:10  11  ,eur_g05
17:01:10  12  ,eur_g06
17:01:10  13  ,eur_g07
17:01:10  14  ,eur_g08
17:01:10  15  ,eur_g09
17:01:10  16  ,eur_g10
17:01:10  17  ,eur_g11
17:01:10  18  ,eur_g12
17:01:10  19  ,eur_g13
17:01:10  20  ,eur_g14
17:01:10  21  ,eur_g15
17:01:10  22  ,eur_g16
17:01:10  23  ,eur_g17
17:01:10  24  ,eur_g18
17:01:10  25  ,eur_g19
17:01:10  26  ,eur_g20
17:01:10  27  ,eur_g21
17:01:10  28  ,eur_g22
17:01:10  29  ,eur_g23
17:01:10  30  ,eur_g24
17:01:10  31  ,eur_g25
17:01:10  32  ,eur_g26
17:01:10  33  ,eur_g27
17:01:10  34  ,eur_g28
17:01:10  35  ,eur_g29
17:01:10  36  ,eur_g30
17:01:10  37  ,eur_g31
17:01:10  38  ,eur_g32
17:01:10  39  ,eur_g33
17:01:10  40  ,eur_g34
17:01:10  41  ,eur_g35
17:01:10  42  ,eur_g36
17:01:10  43  ,eur_g37
17:01:10  44  ,eur_g38
17:01:10  45  ,eur_g39
17:01:10  46  ,eur_g40
17:01:10  47  ,eur_g41
17:01:10  48  ,aud_g00
17:01:10  49  ,aud_g01
17:01:10  50  ,aud_g02
17:01:10  51  ,aud_g03
17:01:10  52  ,aud_g04
17:01:10  53  ,aud_g05
17:01:10  54  ,aud_g06
17:01:10  55  ,aud_g07
17:01:10  56  ,aud_g08
17:01:10  57  ,aud_g09
17:01:10  58  ,aud_g10
17:01:10  59  ,aud_g11
17:01:10  60  ,aud_g12
17:01:10  61  ,aud_g13
17:01:10  62  ,aud_g14
17:01:10  63  ,aud_g15
17:01:10  64  ,aud_g16
17:01:10  65  ,aud_g17
17:01:10  66  ,aud_g18
17:01:10  67  ,aud_g19
17:01:10  68  ,aud_g20
17:01:10  69  ,aud_g21
17:01:10  70  ,aud_g22
17:01:10  71  ,aud_g23
17:01:10  72  ,aud_g24
17:01:10  73  ,aud_g25
17:01:10  74  ,aud_g26
17:01:10  75  ,aud_g27
17:01:10  76  ,aud_g28
17:01:10  77  ,aud_g29
17:01:10  78  ,aud_g30
17:01:10  79  ,aud_g31
17:01:10  80  ,aud_g32
17:01:10  81  ,aud_g33
17:01:10  82  ,aud_g34
17:01:10  83  ,aud_g35
17:01:10  84  ,aud_g36
17:01:10  85  ,aud_g37
17:01:10  86  ,aud_g38
17:01:10  87  ,aud_g39
17:01:10  88  ,aud_g40
17:01:10  89  ,aud_g41
17:01:10  90  ,gbp_g00
17:01:10  91  ,gbp_g01
17:01:10  92  ,gbp_g02
17:01:10  93  ,gbp_g03
17:01:10  94  ,gbp_g04
17:01:10  95  ,gbp_g05
17:01:10  96  ,gbp_g06
17:01:10  97  ,gbp_g07
17:01:10  98  ,gbp_g08
17:01:10  99  ,gbp_g09
17:01:10 100  ,gbp_g10
17:01:10 101  ,gbp_g11
17:01:10 102  ,gbp_g12
17:01:10 103  ,gbp_g13
17:01:10 104  ,gbp_g14
17:01:10 105  ,gbp_g15
17:01:10 106  ,gbp_g16
17:01:10 107  ,gbp_g17
17:01:10 108  ,gbp_g18
17:01:10 109  ,gbp_g19
17:01:10 110  ,gbp_g20
17:01:10 111  ,gbp_g21
17:01:10 112  ,gbp_g22
17:01:10 113  ,gbp_g23
17:01:10 114  ,gbp_g24
17:01:10 115  ,gbp_g25
17:01:10 116  ,gbp_g26
17:01:10 117  ,gbp_g27
17:01:10 118  ,gbp_g28
17:01:10 119  ,gbp_g29
17:01:10 120  ,gbp_g30
17:01:10 121  ,gbp_g31
17:01:10 122  ,gbp_g32
17:01:10 123  ,gbp_g33
17:01:10 124  ,gbp_g34
17:01:10 125  ,gbp_g35
17:01:10 126  ,gbp_g36
17:01:10 127  ,gbp_g37
17:01:10 128  ,gbp_g38
17:01:10 129  ,gbp_g39
17:01:10 130  ,gbp_g40
17:01:10 131  ,gbp_g41
17:01:10 132  ,jpy_g00
17:01:10 133  ,jpy_g01
17:01:10 134  ,jpy_g02
17:01:10 135  ,jpy_g03
17:01:10 136  ,jpy_g04
17:01:10 137  ,jpy_g05
17:01:10 138  ,jpy_g06
17:01:10 139  ,jpy_g07
17:01:10 140  ,jpy_g08
17:01:10 141  ,jpy_g09
17:01:10 142  ,jpy_g10
17:01:10 143  ,jpy_g11
17:01:10 144  ,jpy_g12
17:01:10 145  ,jpy_g13
17:01:10 146  ,jpy_g14
17:01:10 147  ,jpy_g15
17:01:10 148  ,jpy_g16
17:01:10 149  ,jpy_g17
17:01:10 150  ,jpy_g18
17:01:10 151  ,jpy_g19
17:01:10 152  ,jpy_g20
17:01:10 153  ,jpy_g21
17:01:10 154  ,jpy_g22
17:01:10 155  ,jpy_g23
17:01:10 156  ,jpy_g24
17:01:10 157  ,jpy_g25
17:01:10 158  ,jpy_g26
17:01:10 159  ,jpy_g27
17:01:10 160  ,jpy_g28
17:01:10 161  ,jpy_g29
17:01:10 162  ,jpy_g30
17:01:10 163  ,jpy_g31
17:01:10 164  ,jpy_g32
17:01:10 165  ,jpy_g33
17:01:10 166  ,jpy_g34
17:01:10 167  ,jpy_g35
17:01:10 168  ,jpy_g36
17:01:10 169  ,jpy_g37
17:01:10 170  ,jpy_g38
17:01:10 171  ,jpy_g39
17:01:10 172  ,jpy_g40
17:01:10 173  ,jpy_g41
17:01:10 174  ,cad_g00
17:01:10 175  ,cad_g01
17:01:10 176  ,cad_g02
17:01:10 177  ,cad_g03
17:01:10 178  ,cad_g04
17:01:10 179  ,cad_g05
17:01:10 180  ,cad_g06
17:01:10 181  ,cad_g07
17:01:10 182  ,cad_g08
17:01:10 183  ,cad_g09
17:01:10 184  ,cad_g10
17:01:10 185  ,cad_g11
17:01:10 186  ,cad_g12
17:01:10 187  ,cad_g13
17:01:10 188  ,cad_g14
17:01:10 189  ,cad_g15
17:01:10 190  ,cad_g16
17:01:10 191  ,cad_g17
17:01:10 192  ,cad_g18
17:01:10 193  ,cad_g19
17:01:10 194  ,cad_g20
17:01:10 195  ,cad_g21
17:01:10 196  ,cad_g22
17:01:10 197  ,cad_g23
17:01:10 198  ,cad_g24
17:01:10 199  ,cad_g25
17:01:10 200  ,cad_g26
17:01:10 201  ,cad_g27
17:01:10 202  ,cad_g28
17:01:10 203  ,cad_g29
17:01:10 204  ,cad_g30
17:01:10 205  ,cad_g31
17:01:10 206  ,cad_g32
17:01:10 207  ,cad_g33
17:01:10 208  ,cad_g34
17:01:10 209  ,cad_g35
17:01:10 210  ,cad_g36
17:01:10 211  ,cad_g37
17:01:10 212  ,cad_g38
17:01:10 213  ,cad_g39
17:01:10 214  ,cad_g40
17:01:10 215  ,cad_g41
17:01:10 216  ,chf_g00
17:01:10 217  ,chf_g01
17:01:10 218  ,chf_g02
17:01:10 219  ,chf_g03
17:01:10 220  ,chf_g04
17:01:10 221  ,chf_g05
17:01:10 222  ,chf_g06
17:01:10 223  ,chf_g07
17:01:10 224  ,chf_g08
17:01:10 225  ,chf_g09
17:01:10 226  ,chf_g10
17:01:10 227  ,chf_g11
17:01:10 228  ,chf_g12
17:01:10 229  ,chf_g13
17:01:10 230  ,chf_g14
17:01:10 231  ,chf_g15
17:01:10 232  ,chf_g16
17:01:10 233  ,chf_g17
17:01:10 234  ,chf_g18
17:01:10 235  ,chf_g19
17:01:10 236  ,chf_g20
17:01:10 237  ,chf_g21
17:01:10 238  ,chf_g22
17:01:10 239  ,chf_g23
17:01:10 240  ,chf_g24
17:01:10 241  ,chf_g25
17:01:10 242  ,chf_g26
17:01:10 243  ,chf_g27
17:01:10 244  ,chf_g28
17:01:10 245  ,chf_g29
17:01:10 246  ,chf_g30
17:01:10 247  ,chf_g31
17:01:10 248  ,chf_g32
17:01:10 249  ,chf_g33
17:01:10 250  ,chf_g34
17:01:10 251  ,chf_g35
17:01:10 252  ,chf_g36
17:01:10 253  ,chf_g37
17:01:10 254  ,chf_g38
17:01:10 255  ,chf_g39
17:01:10 256  ,chf_g40
17:01:10 257  ,chf_g41
17:01:10 258  FROM aud_ms6 m
17:01:10 259  WHERE gatt IN('nup','up')
17:01:10 260  AND 1+m.ydate < '&1'||' '||'&2'
17:01:10 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'16:45:00'

View created.

Elapsed: 00:00:00.13
17:01:10 SQL> 
17:01:10 SQL> -- rpt
17:01:10 SQL> 
17:01:10 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
17:01:10   2  
17:01:10 SQL> SELECT MAX(prdate) FROM bme
17:01:10   2  
17:01:10 SQL> -- Now build model from bme and score sme
17:01:10 SQL> @score1.sql
17:01:10 SQL> -- score1.sql
17:01:10 SQL> 
17:01:10 SQL> -- Does the 1st SVM score
17:01:10 SQL> 
17:01:10 SQL> -- Fill up svmc_apply_prep
17:01:10 SQL> @score.sql
17:01:10 SQL> --
17:01:10 SQL> -- score.sql
17:01:10 SQL> --
17:01:10 SQL> 
17:01:10 SQL> -- usage: score.sql
17:01:10 SQL> 
17:01:10 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
17:01:10 SQL> 
17:01:10 SQL> DEFINE target	= 'gatt'
17:01:10 SQL> DEFINE model_name = 'forex15'
17:01:10 SQL> DEFINE bldtable	= 'bme'
17:01:10 SQL> DEFINE scoretable = 'sme'
17:01:10 SQL> DEFINE case_id	= 'prdate'
17:01:10 SQL> 
17:01:10 SQL> -- Define a variable to help me exclude some columns from some data mining calls
17:01:10 SQL> DEFINE exclude1 = "'&target','&case_id'"
17:01:10 SQL> 
17:01:10 SQL> -- Builds an SVM model using pl/sql.
17:01:10 SQL> 
17:01:10 SQL> -----------------------------------------------------------------------
17:01:10 SQL> --			    BUILD THE MODEL
17:01:10 SQL> -----------------------------------------------------------------------
17:01:10 SQL> 
17:01:10 SQL> -- Cleanup old build data preparation objects for repeat runs
17:01:10 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
17:01:10 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
17:01:10 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
17:01:10 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
17:01:10 SQL> 
17:01:10 SQL> 
17:01:10 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
17:01:10 SQL> --
17:01:10 SQL> -- DROP	TABLE svmc_settings ;
17:01:10 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
17:01:10 SQL> -- DELETE svmc_settings;
17:01:10 SQL> 
17:01:10 SQL> -- The default classification algorithm is Naive Bayes. So override
17:01:10 SQL> -- this choice to SVM using a settings table.
17:01:10 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
17:01:10 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
17:01:10 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
17:01:10 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
17:01:10 SQL> -- models.
17:01:10 SQL> --
17:01:10 SQL> 
17:01:10 SQL> -- Do this once and then comment it out.
17:01:10 SQL> -- That makes script go faster.
17:01:10 SQL> -- BEGIN
17:01:10 SQL> -- -- Populate settings table
17:01:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:01:10 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
17:01:10 SQL> --
17:01:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:01:10 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
17:01:10 SQL> --
17:01:10 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:01:10 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
17:01:10 SQL> --   COMMIT;
17:01:10 SQL> -- END;
17:01:10 SQL> -- /
17:01:10 SQL> 
17:01:10 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
17:01:10 SQL> 
17:01:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
17:01:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:01:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
17:01:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
17:01:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:01:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
17:01:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
17:01:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:01:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
17:01:10 SQL> 
17:01:10 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
17:01:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:01:10   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
17:01:10 SQL> 
17:01:10 SQL> --------------------------------
17:01:10 SQL> -- PREPARE BUILD (TRAINING) DATA
17:01:10 SQL> --
17:01:10 SQL> 
17:01:10 SQL> -- 1. Missing Value treatment for all Predictors and
17:01:10 SQL> -- 2. Outlier Treatment and
17:01:10 SQL> -- 3. Normalization are performed below.
17:01:10 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
17:01:10 SQL> --    normalized here.
17:01:10 SQL> 
17:01:10 SQL> BEGIN
17:01:10   2  	-- Perform missing value treatment for all predictors
17:01:10   3  	-- create miss tables
17:01:10   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
17:01:10   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
17:01:10   6  
17:01:10   7  	-- populate miss tables
17:01:10   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
17:01:10   9  	  miss_table_name => 'svmc_miss_num',
17:01:10  10  	  data_table_name => '&bldtable',
17:01:10  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:01:10  12  
17:01:10  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
17:01:10  14  	  miss_table_name => 'svmc_miss_cat',
17:01:10  15  	  data_table_name => '&bldtable',
17:01:10  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:01:10  17  
17:01:10  18  	-- xform input data to replace missing values
17:01:10  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
17:01:10  20  	  miss_table_name => 'svmc_miss_num',
17:01:10  21  	  data_table_name => '&bldtable',
17:01:10  22  	  xform_view_name => 'xformed_build_miss_num');
17:01:10  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
17:01:10  24  	  miss_table_name => 'svmc_miss_cat',
17:01:10  25  	  data_table_name => '&bldtable',
17:01:10  26  	  xform_view_name => 'xformed_build_miss_cat');
17:01:10  27  
17:01:10  28  	-- Perform outlier treatment.
17:01:10  29  	-- create clip table
17:01:10  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
17:01:10  31  
17:01:10  32  	-- populate clip table
17:01:10  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
17:01:10  34  	  clip_table_name => 'svmc_clip',
17:01:10  35  	  data_table_name => '&bldtable',
17:01:10  36  	  tail_frac	  => 0.025,
17:01:10  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:01:10  38  
17:01:10  39  	-- xform input data to winsorized data
17:01:10  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
17:01:10  41  	  clip_table_name => 'svmc_clip',
17:01:10  42  	  data_table_name => '&bldtable',
17:01:10  43  	  xform_view_name => 'svmc_winsor');
17:01:10  44  
17:01:10  45  	-- create normalization table
17:01:10  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
17:01:10  47  
17:01:10  48  	-- populate normalization table based on winsorized data
17:01:10  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
17:01:10  50  	  norm_table_name => 'svmc_norm',
17:01:10  51  	  data_table_name => 'svmc_winsor',
17:01:10  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:01:10  53  
17:01:10  54  	-- normalize the original data
17:01:10  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
17:01:10  56  	  norm_table_name => 'svmc_norm',
17:01:10  57  	  data_table_name => '&bldtable',
17:01:10  58  	  xform_view_name => 'svmc_build_prep');
17:01:10  59  END;
17:01:10  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.67
17:01:29 SQL> 
17:01:29 SQL> ---------------------
17:01:29 SQL> -- CREATE A NEW MODEL
17:01:29 SQL> --
17:01:29 SQL> -- Cleanup old model with the same name for repeat runs
17:01:29 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
17:01:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:01:29   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.01
17:01:30 SQL> 
17:01:30 SQL> -- Build a new SVM Model
17:01:30 SQL> BEGIN
17:01:30   2  	DBMS_DATA_MINING.CREATE_MODEL(
17:01:30   3  	  model_name	      => '&model_name',
17:01:30   4  	  mining_function     => dbms_data_mining.classification,
17:01:30   5  	  data_table_name     => 'svmc_build_prep',
17:01:30   6  	  case_id_column_name => '&case_id',
17:01:30   7  	  target_column_name  => '&target',
17:01:30   8  	  settings_table_name => 'svmc_settings');
17:01:30   9  END;
17:01:30  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.82
17:01:59 SQL> 
17:01:59 SQL> -----------------------------------------------------------------------
17:01:59 SQL> --			       APPLY/score THE MODEL
17:01:59 SQL> -----------------------------------------------------------------------
17:01:59 SQL> 
17:01:59 SQL> -- Cleanup old scoring data preparation objects for repeat runs
17:01:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
17:01:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:01:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
17:01:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
17:01:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:01:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
17:01:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
17:01:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:01:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
17:01:59 SQL> -----------------------
17:01:59 SQL> -- PREPARE SCORING DATA
17:01:59 SQL> --
17:01:59 SQL> -- If the data for model creation has been prepared, then the data
17:01:59 SQL> -- to be scored using the model must be prepared in the same manner
17:01:59 SQL> -- in order to obtain meaningful results.
17:01:59 SQL> --
17:01:59 SQL> -- 1. Missing Value treatment for all Predictors and
17:01:59 SQL> -- 2. Normalization
17:01:59 SQL> -- No outlier treatment will be performed during test and apply. The
17:01:59 SQL> -- normalization step is sufficient, since the normalization parameters
17:01:59 SQL> -- already capture the effects of outlier treatment done with build data.
17:01:59 SQL> --
17:01:59 SQL> BEGIN
17:01:59   2  	-- Xform Test data to replace missing values
17:01:59   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
17:01:59   4  	  miss_table_name => 'svmc_miss_num',
17:01:59   5  	  data_table_name => '&scoretable',
17:01:59   6  	  xform_view_name => 'xformed_apply_miss_num');
17:01:59   7  
17:01:59   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
17:01:59   9  	  miss_table_name => 'svmc_miss_cat',
17:01:59  10  	  data_table_name => '&scoretable',
17:01:59  11  	  xform_view_name => 'xformed_apply_miss_cat');
17:01:59  12  
17:01:59  13  	-- Normalize the data to be scored
17:01:59  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
17:01:59  15  	  norm_table_name => 'svmc_norm',
17:01:59  16  	  data_table_name => '&scoretable',
17:01:59  17  	  xform_view_name => 'svmc_apply_prep');
17:01:59  18  END;
17:01:59  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.33
17:02:01 SQL> 
17:02:01 SQL> -- Use same model_name used in score.sql
17:02:01 SQL> DEFINE model_name = 'forex15'
17:02:01 SQL> 
17:02:01 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
17:02:01 SQL> 
17:02:01 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
17:02:01 SQL> 
17:02:01 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
17:02:01   2  SELECT
17:02:01   3  prdate
17:02:01   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
17:02:01   5  ,sysdate
17:02:01   6  ,SUBSTR(prdate,1,3)pair
17:02:01   7  ,SUBSTR(prdate,4,19)ydate
17:02:01   8  FROM svmc_apply_prep
17:02:01   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
17:02:01 SQL> @aud_score1day.sql  2011-01-07 16:50:00
17:02:01 SQL> --
17:02:01 SQL> -- aud_score1day.sql
17:02:01 SQL> --
17:02:01 SQL> 
17:02:01 SQL> CREATE OR REPLACE VIEW sme AS
17:02:01   2  SELECT
17:02:01   3  'aud'||m.ydate prdate
17:02:01   4  ,NULL gatt
17:02:01   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
17:02:01   6  ,eur_g00
17:02:01   7  ,eur_g01
17:02:01   8  ,eur_g02
17:02:01   9  ,eur_g03
17:02:01  10  ,eur_g04
17:02:01  11  ,eur_g05
17:02:01  12  ,eur_g06
17:02:01  13  ,eur_g07
17:02:01  14  ,eur_g08
17:02:01  15  ,eur_g09
17:02:01  16  ,eur_g10
17:02:01  17  ,eur_g11
17:02:01  18  ,eur_g12
17:02:01  19  ,eur_g13
17:02:01  20  ,eur_g14
17:02:01  21  ,eur_g15
17:02:01  22  ,eur_g16
17:02:01  23  ,eur_g17
17:02:01  24  ,eur_g18
17:02:01  25  ,eur_g19
17:02:01  26  ,eur_g20
17:02:01  27  ,eur_g21
17:02:01  28  ,eur_g22
17:02:01  29  ,eur_g23
17:02:01  30  ,eur_g24
17:02:01  31  ,eur_g25
17:02:01  32  ,eur_g26
17:02:01  33  ,eur_g27
17:02:01  34  ,eur_g28
17:02:01  35  ,eur_g29
17:02:01  36  ,eur_g30
17:02:01  37  ,eur_g31
17:02:01  38  ,eur_g32
17:02:01  39  ,eur_g33
17:02:01  40  ,eur_g34
17:02:01  41  ,eur_g35
17:02:01  42  ,eur_g36
17:02:01  43  ,eur_g37
17:02:01  44  ,eur_g38
17:02:01  45  ,eur_g39
17:02:01  46  ,eur_g40
17:02:01  47  ,eur_g41
17:02:01  48  ,aud_g00
17:02:01  49  ,aud_g01
17:02:01  50  ,aud_g02
17:02:01  51  ,aud_g03
17:02:01  52  ,aud_g04
17:02:01  53  ,aud_g05
17:02:01  54  ,aud_g06
17:02:01  55  ,aud_g07
17:02:01  56  ,aud_g08
17:02:01  57  ,aud_g09
17:02:01  58  ,aud_g10
17:02:01  59  ,aud_g11
17:02:01  60  ,aud_g12
17:02:01  61  ,aud_g13
17:02:01  62  ,aud_g14
17:02:01  63  ,aud_g15
17:02:01  64  ,aud_g16
17:02:01  65  ,aud_g17
17:02:01  66  ,aud_g18
17:02:01  67  ,aud_g19
17:02:01  68  ,aud_g20
17:02:01  69  ,aud_g21
17:02:01  70  ,aud_g22
17:02:01  71  ,aud_g23
17:02:01  72  ,aud_g24
17:02:01  73  ,aud_g25
17:02:01  74  ,aud_g26
17:02:01  75  ,aud_g27
17:02:01  76  ,aud_g28
17:02:01  77  ,aud_g29
17:02:01  78  ,aud_g30
17:02:01  79  ,aud_g31
17:02:01  80  ,aud_g32
17:02:01  81  ,aud_g33
17:02:01  82  ,aud_g34
17:02:01  83  ,aud_g35
17:02:01  84  ,aud_g36
17:02:01  85  ,aud_g37
17:02:01  86  ,aud_g38
17:02:01  87  ,aud_g39
17:02:01  88  ,aud_g40
17:02:01  89  ,aud_g41
17:02:01  90  ,gbp_g00
17:02:01  91  ,gbp_g01
17:02:01  92  ,gbp_g02
17:02:01  93  ,gbp_g03
17:02:01  94  ,gbp_g04
17:02:01  95  ,gbp_g05
17:02:01  96  ,gbp_g06
17:02:01  97  ,gbp_g07
17:02:01  98  ,gbp_g08
17:02:01  99  ,gbp_g09
17:02:01 100  ,gbp_g10
17:02:01 101  ,gbp_g11
17:02:01 102  ,gbp_g12
17:02:01 103  ,gbp_g13
17:02:01 104  ,gbp_g14
17:02:01 105  ,gbp_g15
17:02:01 106  ,gbp_g16
17:02:01 107  ,gbp_g17
17:02:01 108  ,gbp_g18
17:02:01 109  ,gbp_g19
17:02:01 110  ,gbp_g20
17:02:01 111  ,gbp_g21
17:02:01 112  ,gbp_g22
17:02:01 113  ,gbp_g23
17:02:01 114  ,gbp_g24
17:02:01 115  ,gbp_g25
17:02:01 116  ,gbp_g26
17:02:01 117  ,gbp_g27
17:02:01 118  ,gbp_g28
17:02:01 119  ,gbp_g29
17:02:01 120  ,gbp_g30
17:02:01 121  ,gbp_g31
17:02:01 122  ,gbp_g32
17:02:01 123  ,gbp_g33
17:02:01 124  ,gbp_g34
17:02:01 125  ,gbp_g35
17:02:01 126  ,gbp_g36
17:02:01 127  ,gbp_g37
17:02:01 128  ,gbp_g38
17:02:01 129  ,gbp_g39
17:02:01 130  ,gbp_g40
17:02:01 131  ,gbp_g41
17:02:01 132  ,jpy_g00
17:02:01 133  ,jpy_g01
17:02:01 134  ,jpy_g02
17:02:01 135  ,jpy_g03
17:02:01 136  ,jpy_g04
17:02:01 137  ,jpy_g05
17:02:01 138  ,jpy_g06
17:02:01 139  ,jpy_g07
17:02:01 140  ,jpy_g08
17:02:01 141  ,jpy_g09
17:02:01 142  ,jpy_g10
17:02:01 143  ,jpy_g11
17:02:01 144  ,jpy_g12
17:02:01 145  ,jpy_g13
17:02:01 146  ,jpy_g14
17:02:01 147  ,jpy_g15
17:02:01 148  ,jpy_g16
17:02:01 149  ,jpy_g17
17:02:01 150  ,jpy_g18
17:02:01 151  ,jpy_g19
17:02:01 152  ,jpy_g20
17:02:01 153  ,jpy_g21
17:02:01 154  ,jpy_g22
17:02:01 155  ,jpy_g23
17:02:01 156  ,jpy_g24
17:02:01 157  ,jpy_g25
17:02:01 158  ,jpy_g26
17:02:01 159  ,jpy_g27
17:02:01 160  ,jpy_g28
17:02:01 161  ,jpy_g29
17:02:01 162  ,jpy_g30
17:02:01 163  ,jpy_g31
17:02:01 164  ,jpy_g32
17:02:01 165  ,jpy_g33
17:02:01 166  ,jpy_g34
17:02:01 167  ,jpy_g35
17:02:01 168  ,jpy_g36
17:02:01 169  ,jpy_g37
17:02:01 170  ,jpy_g38
17:02:01 171  ,jpy_g39
17:02:01 172  ,jpy_g40
17:02:01 173  ,jpy_g41
17:02:01 174  ,cad_g00
17:02:01 175  ,cad_g01
17:02:01 176  ,cad_g02
17:02:01 177  ,cad_g03
17:02:01 178  ,cad_g04
17:02:01 179  ,cad_g05
17:02:01 180  ,cad_g06
17:02:01 181  ,cad_g07
17:02:01 182  ,cad_g08
17:02:01 183  ,cad_g09
17:02:01 184  ,cad_g10
17:02:01 185  ,cad_g11
17:02:01 186  ,cad_g12
17:02:01 187  ,cad_g13
17:02:01 188  ,cad_g14
17:02:01 189  ,cad_g15
17:02:01 190  ,cad_g16
17:02:01 191  ,cad_g17
17:02:01 192  ,cad_g18
17:02:01 193  ,cad_g19
17:02:01 194  ,cad_g20
17:02:01 195  ,cad_g21
17:02:01 196  ,cad_g22
17:02:01 197  ,cad_g23
17:02:01 198  ,cad_g24
17:02:01 199  ,cad_g25
17:02:01 200  ,cad_g26
17:02:01 201  ,cad_g27
17:02:01 202  ,cad_g28
17:02:01 203  ,cad_g29
17:02:01 204  ,cad_g30
17:02:01 205  ,cad_g31
17:02:01 206  ,cad_g32
17:02:01 207  ,cad_g33
17:02:01 208  ,cad_g34
17:02:01 209  ,cad_g35
17:02:01 210  ,cad_g36
17:02:01 211  ,cad_g37
17:02:01 212  ,cad_g38
17:02:01 213  ,cad_g39
17:02:01 214  ,cad_g40
17:02:01 215  ,cad_g41
17:02:01 216  ,chf_g00
17:02:01 217  ,chf_g01
17:02:01 218  ,chf_g02
17:02:01 219  ,chf_g03
17:02:01 220  ,chf_g04
17:02:01 221  ,chf_g05
17:02:01 222  ,chf_g06
17:02:01 223  ,chf_g07
17:02:01 224  ,chf_g08
17:02:01 225  ,chf_g09
17:02:01 226  ,chf_g10
17:02:01 227  ,chf_g11
17:02:01 228  ,chf_g12
17:02:01 229  ,chf_g13
17:02:01 230  ,chf_g14
17:02:01 231  ,chf_g15
17:02:01 232  ,chf_g16
17:02:01 233  ,chf_g17
17:02:01 234  ,chf_g18
17:02:01 235  ,chf_g19
17:02:01 236  ,chf_g20
17:02:01 237  ,chf_g21
17:02:01 238  ,chf_g22
17:02:01 239  ,chf_g23
17:02:01 240  ,chf_g24
17:02:01 241  ,chf_g25
17:02:01 242  ,chf_g26
17:02:01 243  ,chf_g27
17:02:01 244  ,chf_g28
17:02:01 245  ,chf_g29
17:02:01 246  ,chf_g30
17:02:01 247  ,chf_g31
17:02:01 248  ,chf_g32
17:02:01 249  ,chf_g33
17:02:01 250  ,chf_g34
17:02:01 251  ,chf_g35
17:02:01 252  ,chf_g36
17:02:01 253  ,chf_g37
17:02:01 254  ,chf_g38
17:02:01 255  ,chf_g39
17:02:01 256  ,chf_g40
17:02:01 257  ,chf_g41
17:02:01 258  FROM aud_ms6 m
17:02:01 259  WHERE m.ydate = '&1'||' '||'&2'
17:02:01 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'16:50:00'

View created.

Elapsed: 00:00:00.19
17:02:01 SQL> 
17:02:01 SQL> -- rpt
17:02:01 SQL> -- We should see just 1 row:
17:02:01 SQL> 
17:02:01 SQL> SELECT COUNT(prdate) FROM sme
17:02:01   2  
17:02:01 SQL> -- Build the model:
17:02:01 SQL> CREATE OR REPLACE VIEW bme AS
17:02:01   2  SELECT
17:02:01   3  'aud'||m.ydate prdate
17:02:01   4  ,gatt
17:02:01   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
17:02:01   6  ,eur_g00
17:02:01   7  ,eur_g01
17:02:01   8  ,eur_g02
17:02:01   9  ,eur_g03
17:02:01  10  ,eur_g04
17:02:01  11  ,eur_g05
17:02:01  12  ,eur_g06
17:02:01  13  ,eur_g07
17:02:01  14  ,eur_g08
17:02:01  15  ,eur_g09
17:02:01  16  ,eur_g10
17:02:01  17  ,eur_g11
17:02:01  18  ,eur_g12
17:02:01  19  ,eur_g13
17:02:01  20  ,eur_g14
17:02:01  21  ,eur_g15
17:02:01  22  ,eur_g16
17:02:01  23  ,eur_g17
17:02:01  24  ,eur_g18
17:02:01  25  ,eur_g19
17:02:01  26  ,eur_g20
17:02:01  27  ,eur_g21
17:02:01  28  ,eur_g22
17:02:01  29  ,eur_g23
17:02:01  30  ,eur_g24
17:02:01  31  ,eur_g25
17:02:01  32  ,eur_g26
17:02:01  33  ,eur_g27
17:02:01  34  ,eur_g28
17:02:01  35  ,eur_g29
17:02:01  36  ,eur_g30
17:02:01  37  ,eur_g31
17:02:01  38  ,eur_g32
17:02:01  39  ,eur_g33
17:02:01  40  ,eur_g34
17:02:01  41  ,eur_g35
17:02:01  42  ,eur_g36
17:02:01  43  ,eur_g37
17:02:01  44  ,eur_g38
17:02:01  45  ,eur_g39
17:02:01  46  ,eur_g40
17:02:01  47  ,eur_g41
17:02:01  48  ,aud_g00
17:02:01  49  ,aud_g01
17:02:01  50  ,aud_g02
17:02:01  51  ,aud_g03
17:02:01  52  ,aud_g04
17:02:01  53  ,aud_g05
17:02:01  54  ,aud_g06
17:02:01  55  ,aud_g07
17:02:01  56  ,aud_g08
17:02:01  57  ,aud_g09
17:02:01  58  ,aud_g10
17:02:01  59  ,aud_g11
17:02:01  60  ,aud_g12
17:02:01  61  ,aud_g13
17:02:01  62  ,aud_g14
17:02:01  63  ,aud_g15
17:02:01  64  ,aud_g16
17:02:01  65  ,aud_g17
17:02:01  66  ,aud_g18
17:02:01  67  ,aud_g19
17:02:01  68  ,aud_g20
17:02:01  69  ,aud_g21
17:02:01  70  ,aud_g22
17:02:01  71  ,aud_g23
17:02:01  72  ,aud_g24
17:02:01  73  ,aud_g25
17:02:01  74  ,aud_g26
17:02:01  75  ,aud_g27
17:02:01  76  ,aud_g28
17:02:01  77  ,aud_g29
17:02:01  78  ,aud_g30
17:02:01  79  ,aud_g31
17:02:01  80  ,aud_g32
17:02:01  81  ,aud_g33
17:02:01  82  ,aud_g34
17:02:01  83  ,aud_g35
17:02:01  84  ,aud_g36
17:02:01  85  ,aud_g37
17:02:01  86  ,aud_g38
17:02:01  87  ,aud_g39
17:02:01  88  ,aud_g40
17:02:01  89  ,aud_g41
17:02:01  90  ,gbp_g00
17:02:01  91  ,gbp_g01
17:02:01  92  ,gbp_g02
17:02:01  93  ,gbp_g03
17:02:01  94  ,gbp_g04
17:02:01  95  ,gbp_g05
17:02:01  96  ,gbp_g06
17:02:01  97  ,gbp_g07
17:02:01  98  ,gbp_g08
17:02:01  99  ,gbp_g09
17:02:01 100  ,gbp_g10
17:02:01 101  ,gbp_g11
17:02:01 102  ,gbp_g12
17:02:01 103  ,gbp_g13
17:02:01 104  ,gbp_g14
17:02:01 105  ,gbp_g15
17:02:01 106  ,gbp_g16
17:02:01 107  ,gbp_g17
17:02:01 108  ,gbp_g18
17:02:01 109  ,gbp_g19
17:02:01 110  ,gbp_g20
17:02:01 111  ,gbp_g21
17:02:01 112  ,gbp_g22
17:02:01 113  ,gbp_g23
17:02:01 114  ,gbp_g24
17:02:01 115  ,gbp_g25
17:02:01 116  ,gbp_g26
17:02:01 117  ,gbp_g27
17:02:01 118  ,gbp_g28
17:02:01 119  ,gbp_g29
17:02:01 120  ,gbp_g30
17:02:01 121  ,gbp_g31
17:02:01 122  ,gbp_g32
17:02:01 123  ,gbp_g33
17:02:01 124  ,gbp_g34
17:02:01 125  ,gbp_g35
17:02:01 126  ,gbp_g36
17:02:01 127  ,gbp_g37
17:02:01 128  ,gbp_g38
17:02:01 129  ,gbp_g39
17:02:01 130  ,gbp_g40
17:02:01 131  ,gbp_g41
17:02:01 132  ,jpy_g00
17:02:01 133  ,jpy_g01
17:02:01 134  ,jpy_g02
17:02:01 135  ,jpy_g03
17:02:01 136  ,jpy_g04
17:02:01 137  ,jpy_g05
17:02:01 138  ,jpy_g06
17:02:01 139  ,jpy_g07
17:02:01 140  ,jpy_g08
17:02:01 141  ,jpy_g09
17:02:01 142  ,jpy_g10
17:02:01 143  ,jpy_g11
17:02:01 144  ,jpy_g12
17:02:01 145  ,jpy_g13
17:02:01 146  ,jpy_g14
17:02:01 147  ,jpy_g15
17:02:01 148  ,jpy_g16
17:02:01 149  ,jpy_g17
17:02:01 150  ,jpy_g18
17:02:01 151  ,jpy_g19
17:02:01 152  ,jpy_g20
17:02:01 153  ,jpy_g21
17:02:01 154  ,jpy_g22
17:02:01 155  ,jpy_g23
17:02:01 156  ,jpy_g24
17:02:01 157  ,jpy_g25
17:02:01 158  ,jpy_g26
17:02:01 159  ,jpy_g27
17:02:01 160  ,jpy_g28
17:02:01 161  ,jpy_g29
17:02:01 162  ,jpy_g30
17:02:01 163  ,jpy_g31
17:02:01 164  ,jpy_g32
17:02:01 165  ,jpy_g33
17:02:01 166  ,jpy_g34
17:02:01 167  ,jpy_g35
17:02:01 168  ,jpy_g36
17:02:01 169  ,jpy_g37
17:02:01 170  ,jpy_g38
17:02:01 171  ,jpy_g39
17:02:01 172  ,jpy_g40
17:02:01 173  ,jpy_g41
17:02:01 174  ,cad_g00
17:02:01 175  ,cad_g01
17:02:01 176  ,cad_g02
17:02:01 177  ,cad_g03
17:02:01 178  ,cad_g04
17:02:01 179  ,cad_g05
17:02:01 180  ,cad_g06
17:02:01 181  ,cad_g07
17:02:01 182  ,cad_g08
17:02:01 183  ,cad_g09
17:02:01 184  ,cad_g10
17:02:01 185  ,cad_g11
17:02:01 186  ,cad_g12
17:02:01 187  ,cad_g13
17:02:01 188  ,cad_g14
17:02:01 189  ,cad_g15
17:02:01 190  ,cad_g16
17:02:01 191  ,cad_g17
17:02:01 192  ,cad_g18
17:02:01 193  ,cad_g19
17:02:01 194  ,cad_g20
17:02:01 195  ,cad_g21
17:02:01 196  ,cad_g22
17:02:01 197  ,cad_g23
17:02:01 198  ,cad_g24
17:02:01 199  ,cad_g25
17:02:01 200  ,cad_g26
17:02:01 201  ,cad_g27
17:02:01 202  ,cad_g28
17:02:01 203  ,cad_g29
17:02:01 204  ,cad_g30
17:02:01 205  ,cad_g31
17:02:01 206  ,cad_g32
17:02:01 207  ,cad_g33
17:02:01 208  ,cad_g34
17:02:01 209  ,cad_g35
17:02:01 210  ,cad_g36
17:02:01 211  ,cad_g37
17:02:01 212  ,cad_g38
17:02:01 213  ,cad_g39
17:02:01 214  ,cad_g40
17:02:01 215  ,cad_g41
17:02:01 216  ,chf_g00
17:02:01 217  ,chf_g01
17:02:01 218  ,chf_g02
17:02:01 219  ,chf_g03
17:02:01 220  ,chf_g04
17:02:01 221  ,chf_g05
17:02:01 222  ,chf_g06
17:02:01 223  ,chf_g07
17:02:01 224  ,chf_g08
17:02:01 225  ,chf_g09
17:02:01 226  ,chf_g10
17:02:01 227  ,chf_g11
17:02:01 228  ,chf_g12
17:02:01 229  ,chf_g13
17:02:01 230  ,chf_g14
17:02:01 231  ,chf_g15
17:02:01 232  ,chf_g16
17:02:01 233  ,chf_g17
17:02:01 234  ,chf_g18
17:02:01 235  ,chf_g19
17:02:01 236  ,chf_g20
17:02:01 237  ,chf_g21
17:02:01 238  ,chf_g22
17:02:01 239  ,chf_g23
17:02:01 240  ,chf_g24
17:02:01 241  ,chf_g25
17:02:01 242  ,chf_g26
17:02:01 243  ,chf_g27
17:02:01 244  ,chf_g28
17:02:01 245  ,chf_g29
17:02:01 246  ,chf_g30
17:02:01 247  ,chf_g31
17:02:01 248  ,chf_g32
17:02:01 249  ,chf_g33
17:02:01 250  ,chf_g34
17:02:01 251  ,chf_g35
17:02:01 252  ,chf_g36
17:02:01 253  ,chf_g37
17:02:01 254  ,chf_g38
17:02:01 255  ,chf_g39
17:02:01 256  ,chf_g40
17:02:01 257  ,chf_g41
17:02:01 258  FROM aud_ms6 m
17:02:01 259  WHERE gatt IN('nup','up')
17:02:01 260  AND 1+m.ydate < '&1'||' '||'&2'
17:02:01 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'16:50:00'

View created.

Elapsed: 00:00:00.13
17:02:01 SQL> 
17:02:01 SQL> -- rpt
17:02:01 SQL> 
17:02:01 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
17:02:01   2  
17:02:01 SQL> SELECT MAX(prdate) FROM bme
17:02:01   2  
17:02:01 SQL> -- Now build model from bme and score sme
17:02:01 SQL> @score1.sql
17:02:01 SQL> -- score1.sql
17:02:01 SQL> 
17:02:01 SQL> -- Does the 1st SVM score
17:02:01 SQL> 
17:02:01 SQL> -- Fill up svmc_apply_prep
17:02:01 SQL> @score.sql
17:02:01 SQL> --
17:02:01 SQL> -- score.sql
17:02:01 SQL> --
17:02:01 SQL> 
17:02:01 SQL> -- usage: score.sql
17:02:01 SQL> 
17:02:01 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
17:02:01 SQL> 
17:02:01 SQL> DEFINE target	= 'gatt'
17:02:01 SQL> DEFINE model_name = 'forex15'
17:02:01 SQL> DEFINE bldtable	= 'bme'
17:02:01 SQL> DEFINE scoretable = 'sme'
17:02:01 SQL> DEFINE case_id	= 'prdate'
17:02:01 SQL> 
17:02:01 SQL> -- Define a variable to help me exclude some columns from some data mining calls
17:02:01 SQL> DEFINE exclude1 = "'&target','&case_id'"
17:02:01 SQL> 
17:02:01 SQL> -- Builds an SVM model using pl/sql.
17:02:01 SQL> 
17:02:01 SQL> -----------------------------------------------------------------------
17:02:01 SQL> --			    BUILD THE MODEL
17:02:01 SQL> -----------------------------------------------------------------------
17:02:01 SQL> 
17:02:01 SQL> -- Cleanup old build data preparation objects for repeat runs
17:02:01 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
17:02:01 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
17:02:01 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
17:02:01 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
17:02:01 SQL> 
17:02:01 SQL> 
17:02:01 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
17:02:01 SQL> --
17:02:01 SQL> -- DROP	TABLE svmc_settings ;
17:02:01 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
17:02:01 SQL> -- DELETE svmc_settings;
17:02:01 SQL> 
17:02:01 SQL> -- The default classification algorithm is Naive Bayes. So override
17:02:01 SQL> -- this choice to SVM using a settings table.
17:02:01 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
17:02:01 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
17:02:01 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
17:02:01 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
17:02:01 SQL> -- models.
17:02:01 SQL> --
17:02:01 SQL> 
17:02:01 SQL> -- Do this once and then comment it out.
17:02:01 SQL> -- That makes script go faster.
17:02:01 SQL> -- BEGIN
17:02:01 SQL> -- -- Populate settings table
17:02:01 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:02:01 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
17:02:01 SQL> --
17:02:01 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:02:01 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
17:02:01 SQL> --
17:02:01 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:02:01 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
17:02:01 SQL> --   COMMIT;
17:02:01 SQL> -- END;
17:02:01 SQL> -- /
17:02:01 SQL> 
17:02:01 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
17:02:01 SQL> 
17:02:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
17:02:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:02:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
17:02:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
17:02:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:02:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
17:02:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
17:02:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:02:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
17:02:01 SQL> 
17:02:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
17:02:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:02:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
17:02:01 SQL> 
17:02:01 SQL> --------------------------------
17:02:01 SQL> -- PREPARE BUILD (TRAINING) DATA
17:02:01 SQL> --
17:02:01 SQL> 
17:02:01 SQL> -- 1. Missing Value treatment for all Predictors and
17:02:01 SQL> -- 2. Outlier Treatment and
17:02:01 SQL> -- 3. Normalization are performed below.
17:02:01 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
17:02:01 SQL> --    normalized here.
17:02:01 SQL> 
17:02:01 SQL> BEGIN
17:02:01   2  	-- Perform missing value treatment for all predictors
17:02:01   3  	-- create miss tables
17:02:01   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
17:02:01   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
17:02:01   6  
17:02:01   7  	-- populate miss tables
17:02:01   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
17:02:01   9  	  miss_table_name => 'svmc_miss_num',
17:02:01  10  	  data_table_name => '&bldtable',
17:02:01  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:02:01  12  
17:02:01  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
17:02:01  14  	  miss_table_name => 'svmc_miss_cat',
17:02:01  15  	  data_table_name => '&bldtable',
17:02:01  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:02:01  17  
17:02:01  18  	-- xform input data to replace missing values
17:02:01  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
17:02:01  20  	  miss_table_name => 'svmc_miss_num',
17:02:01  21  	  data_table_name => '&bldtable',
17:02:01  22  	  xform_view_name => 'xformed_build_miss_num');
17:02:01  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
17:02:01  24  	  miss_table_name => 'svmc_miss_cat',
17:02:01  25  	  data_table_name => '&bldtable',
17:02:01  26  	  xform_view_name => 'xformed_build_miss_cat');
17:02:01  27  
17:02:01  28  	-- Perform outlier treatment.
17:02:01  29  	-- create clip table
17:02:01  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
17:02:01  31  
17:02:01  32  	-- populate clip table
17:02:01  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
17:02:01  34  	  clip_table_name => 'svmc_clip',
17:02:01  35  	  data_table_name => '&bldtable',
17:02:01  36  	  tail_frac	  => 0.025,
17:02:01  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:02:01  38  
17:02:01  39  	-- xform input data to winsorized data
17:02:01  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
17:02:01  41  	  clip_table_name => 'svmc_clip',
17:02:01  42  	  data_table_name => '&bldtable',
17:02:01  43  	  xform_view_name => 'svmc_winsor');
17:02:01  44  
17:02:01  45  	-- create normalization table
17:02:01  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
17:02:01  47  
17:02:01  48  	-- populate normalization table based on winsorized data
17:02:01  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
17:02:01  50  	  norm_table_name => 'svmc_norm',
17:02:01  51  	  data_table_name => 'svmc_winsor',
17:02:01  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:02:01  53  
17:02:01  54  	-- normalize the original data
17:02:01  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
17:02:01  56  	  norm_table_name => 'svmc_norm',
17:02:01  57  	  data_table_name => '&bldtable',
17:02:01  58  	  xform_view_name => 'svmc_build_prep');
17:02:01  59  END;
17:02:01  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.60
17:02:20 SQL> 
17:02:20 SQL> ---------------------
17:02:20 SQL> -- CREATE A NEW MODEL
17:02:20 SQL> --
17:02:20 SQL> -- Cleanup old model with the same name for repeat runs
17:02:20 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
17:02:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:02:20   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.95
17:02:21 SQL> 
17:02:21 SQL> -- Build a new SVM Model
17:02:21 SQL> BEGIN
17:02:21   2  	DBMS_DATA_MINING.CREATE_MODEL(
17:02:21   3  	  model_name	      => '&model_name',
17:02:21   4  	  mining_function     => dbms_data_mining.classification,
17:02:21   5  	  data_table_name     => 'svmc_build_prep',
17:02:21   6  	  case_id_column_name => '&case_id',
17:02:21   7  	  target_column_name  => '&target',
17:02:21   8  	  settings_table_name => 'svmc_settings');
17:02:21   9  END;
17:02:21  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.82
17:02:50 SQL> 
17:02:50 SQL> -----------------------------------------------------------------------
17:02:50 SQL> --			       APPLY/score THE MODEL
17:02:50 SQL> -----------------------------------------------------------------------
17:02:50 SQL> 
17:02:50 SQL> -- Cleanup old scoring data preparation objects for repeat runs
17:02:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
17:02:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:02:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
17:02:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
17:02:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:02:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
17:02:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
17:02:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:02:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
17:02:50 SQL> -----------------------
17:02:50 SQL> -- PREPARE SCORING DATA
17:02:50 SQL> --
17:02:50 SQL> -- If the data for model creation has been prepared, then the data
17:02:50 SQL> -- to be scored using the model must be prepared in the same manner
17:02:50 SQL> -- in order to obtain meaningful results.
17:02:50 SQL> --
17:02:50 SQL> -- 1. Missing Value treatment for all Predictors and
17:02:50 SQL> -- 2. Normalization
17:02:50 SQL> -- No outlier treatment will be performed during test and apply. The
17:02:50 SQL> -- normalization step is sufficient, since the normalization parameters
17:02:50 SQL> -- already capture the effects of outlier treatment done with build data.
17:02:50 SQL> --
17:02:50 SQL> BEGIN
17:02:50   2  	-- Xform Test data to replace missing values
17:02:50   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
17:02:50   4  	  miss_table_name => 'svmc_miss_num',
17:02:50   5  	  data_table_name => '&scoretable',
17:02:50   6  	  xform_view_name => 'xformed_apply_miss_num');
17:02:50   7  
17:02:50   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
17:02:50   9  	  miss_table_name => 'svmc_miss_cat',
17:02:50  10  	  data_table_name => '&scoretable',
17:02:50  11  	  xform_view_name => 'xformed_apply_miss_cat');
17:02:50  12  
17:02:50  13  	-- Normalize the data to be scored
17:02:50  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
17:02:50  15  	  norm_table_name => 'svmc_norm',
17:02:50  16  	  data_table_name => '&scoretable',
17:02:50  17  	  xform_view_name => 'svmc_apply_prep');
17:02:50  18  END;
17:02:50  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.31
17:02:51 SQL> 
17:02:51 SQL> -- Use same model_name used in score.sql
17:02:51 SQL> DEFINE model_name = 'forex15'
17:02:51 SQL> 
17:02:51 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
17:02:51 SQL> 
17:02:51 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
17:02:51 SQL> 
17:02:51 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
17:02:51   2  SELECT
17:02:51   3  prdate
17:02:51   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
17:02:51   5  ,sysdate
17:02:51   6  ,SUBSTR(prdate,1,3)pair
17:02:51   7  ,SUBSTR(prdate,4,19)ydate
17:02:51   8  FROM svmc_apply_prep
17:02:51   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
17:02:51 SQL> @aud_score1day_gattn.sql	2011-01-07 16:40:00
17:02:51 SQL> --
17:02:51 SQL> -- aud_score1day_gattn.sql
17:02:51 SQL> --
17:02:51 SQL> 
17:02:51 SQL> CREATE OR REPLACE VIEW sme AS
17:02:51   2  SELECT
17:02:51   3  'aud'||m.ydate prdate
17:02:51   4  ,NULL gattn
17:02:51   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
17:02:51   6  ,eur_g00
17:02:51   7  ,eur_g01
17:02:51   8  ,eur_g02
17:02:51   9  ,eur_g03
17:02:51  10  ,eur_g04
17:02:51  11  ,eur_g05
17:02:51  12  ,eur_g06
17:02:51  13  ,eur_g07
17:02:51  14  ,eur_g08
17:02:51  15  ,eur_g09
17:02:51  16  ,eur_g10
17:02:51  17  ,eur_g11
17:02:51  18  ,eur_g12
17:02:51  19  ,eur_g13
17:02:51  20  ,eur_g14
17:02:51  21  ,eur_g15
17:02:51  22  ,eur_g16
17:02:51  23  ,eur_g17
17:02:51  24  ,eur_g18
17:02:51  25  ,eur_g19
17:02:51  26  ,eur_g20
17:02:51  27  ,eur_g21
17:02:51  28  ,eur_g22
17:02:51  29  ,eur_g23
17:02:51  30  ,eur_g24
17:02:51  31  ,eur_g25
17:02:51  32  ,eur_g26
17:02:51  33  ,eur_g27
17:02:51  34  ,eur_g28
17:02:51  35  ,eur_g29
17:02:51  36  ,eur_g30
17:02:51  37  ,eur_g31
17:02:51  38  ,eur_g32
17:02:51  39  ,eur_g33
17:02:51  40  ,eur_g34
17:02:51  41  ,eur_g35
17:02:51  42  ,eur_g36
17:02:51  43  ,eur_g37
17:02:51  44  ,eur_g38
17:02:51  45  ,eur_g39
17:02:51  46  ,eur_g40
17:02:51  47  ,eur_g41
17:02:51  48  ,aud_g00
17:02:51  49  ,aud_g01
17:02:51  50  ,aud_g02
17:02:51  51  ,aud_g03
17:02:51  52  ,aud_g04
17:02:51  53  ,aud_g05
17:02:51  54  ,aud_g06
17:02:51  55  ,aud_g07
17:02:51  56  ,aud_g08
17:02:51  57  ,aud_g09
17:02:51  58  ,aud_g10
17:02:51  59  ,aud_g11
17:02:51  60  ,aud_g12
17:02:51  61  ,aud_g13
17:02:51  62  ,aud_g14
17:02:51  63  ,aud_g15
17:02:51  64  ,aud_g16
17:02:51  65  ,aud_g17
17:02:51  66  ,aud_g18
17:02:51  67  ,aud_g19
17:02:51  68  ,aud_g20
17:02:51  69  ,aud_g21
17:02:51  70  ,aud_g22
17:02:51  71  ,aud_g23
17:02:51  72  ,aud_g24
17:02:51  73  ,aud_g25
17:02:51  74  ,aud_g26
17:02:51  75  ,aud_g27
17:02:51  76  ,aud_g28
17:02:51  77  ,aud_g29
17:02:51  78  ,aud_g30
17:02:51  79  ,aud_g31
17:02:51  80  ,aud_g32
17:02:51  81  ,aud_g33
17:02:51  82  ,aud_g34
17:02:51  83  ,aud_g35
17:02:51  84  ,aud_g36
17:02:51  85  ,aud_g37
17:02:51  86  ,aud_g38
17:02:51  87  ,aud_g39
17:02:51  88  ,aud_g40
17:02:51  89  ,aud_g41
17:02:51  90  ,gbp_g00
17:02:51  91  ,gbp_g01
17:02:51  92  ,gbp_g02
17:02:51  93  ,gbp_g03
17:02:51  94  ,gbp_g04
17:02:51  95  ,gbp_g05
17:02:51  96  ,gbp_g06
17:02:51  97  ,gbp_g07
17:02:51  98  ,gbp_g08
17:02:51  99  ,gbp_g09
17:02:51 100  ,gbp_g10
17:02:51 101  ,gbp_g11
17:02:51 102  ,gbp_g12
17:02:51 103  ,gbp_g13
17:02:51 104  ,gbp_g14
17:02:51 105  ,gbp_g15
17:02:51 106  ,gbp_g16
17:02:51 107  ,gbp_g17
17:02:51 108  ,gbp_g18
17:02:51 109  ,gbp_g19
17:02:51 110  ,gbp_g20
17:02:51 111  ,gbp_g21
17:02:51 112  ,gbp_g22
17:02:51 113  ,gbp_g23
17:02:51 114  ,gbp_g24
17:02:51 115  ,gbp_g25
17:02:51 116  ,gbp_g26
17:02:51 117  ,gbp_g27
17:02:51 118  ,gbp_g28
17:02:51 119  ,gbp_g29
17:02:51 120  ,gbp_g30
17:02:51 121  ,gbp_g31
17:02:51 122  ,gbp_g32
17:02:51 123  ,gbp_g33
17:02:51 124  ,gbp_g34
17:02:51 125  ,gbp_g35
17:02:51 126  ,gbp_g36
17:02:51 127  ,gbp_g37
17:02:51 128  ,gbp_g38
17:02:51 129  ,gbp_g39
17:02:51 130  ,gbp_g40
17:02:51 131  ,gbp_g41
17:02:51 132  ,jpy_g00
17:02:51 133  ,jpy_g01
17:02:51 134  ,jpy_g02
17:02:51 135  ,jpy_g03
17:02:51 136  ,jpy_g04
17:02:51 137  ,jpy_g05
17:02:51 138  ,jpy_g06
17:02:51 139  ,jpy_g07
17:02:51 140  ,jpy_g08
17:02:51 141  ,jpy_g09
17:02:51 142  ,jpy_g10
17:02:51 143  ,jpy_g11
17:02:51 144  ,jpy_g12
17:02:51 145  ,jpy_g13
17:02:51 146  ,jpy_g14
17:02:51 147  ,jpy_g15
17:02:51 148  ,jpy_g16
17:02:51 149  ,jpy_g17
17:02:51 150  ,jpy_g18
17:02:51 151  ,jpy_g19
17:02:51 152  ,jpy_g20
17:02:51 153  ,jpy_g21
17:02:51 154  ,jpy_g22
17:02:51 155  ,jpy_g23
17:02:51 156  ,jpy_g24
17:02:51 157  ,jpy_g25
17:02:51 158  ,jpy_g26
17:02:51 159  ,jpy_g27
17:02:51 160  ,jpy_g28
17:02:51 161  ,jpy_g29
17:02:51 162  ,jpy_g30
17:02:51 163  ,jpy_g31
17:02:51 164  ,jpy_g32
17:02:51 165  ,jpy_g33
17:02:51 166  ,jpy_g34
17:02:51 167  ,jpy_g35
17:02:51 168  ,jpy_g36
17:02:51 169  ,jpy_g37
17:02:51 170  ,jpy_g38
17:02:51 171  ,jpy_g39
17:02:51 172  ,jpy_g40
17:02:51 173  ,jpy_g41
17:02:51 174  ,cad_g00
17:02:51 175  ,cad_g01
17:02:51 176  ,cad_g02
17:02:51 177  ,cad_g03
17:02:51 178  ,cad_g04
17:02:51 179  ,cad_g05
17:02:51 180  ,cad_g06
17:02:51 181  ,cad_g07
17:02:51 182  ,cad_g08
17:02:51 183  ,cad_g09
17:02:51 184  ,cad_g10
17:02:51 185  ,cad_g11
17:02:51 186  ,cad_g12
17:02:51 187  ,cad_g13
17:02:51 188  ,cad_g14
17:02:51 189  ,cad_g15
17:02:51 190  ,cad_g16
17:02:51 191  ,cad_g17
17:02:51 192  ,cad_g18
17:02:51 193  ,cad_g19
17:02:51 194  ,cad_g20
17:02:51 195  ,cad_g21
17:02:51 196  ,cad_g22
17:02:51 197  ,cad_g23
17:02:51 198  ,cad_g24
17:02:51 199  ,cad_g25
17:02:51 200  ,cad_g26
17:02:51 201  ,cad_g27
17:02:51 202  ,cad_g28
17:02:51 203  ,cad_g29
17:02:51 204  ,cad_g30
17:02:51 205  ,cad_g31
17:02:51 206  ,cad_g32
17:02:51 207  ,cad_g33
17:02:51 208  ,cad_g34
17:02:51 209  ,cad_g35
17:02:51 210  ,cad_g36
17:02:51 211  ,cad_g37
17:02:51 212  ,cad_g38
17:02:51 213  ,cad_g39
17:02:51 214  ,cad_g40
17:02:51 215  ,cad_g41
17:02:51 216  ,chf_g00
17:02:51 217  ,chf_g01
17:02:51 218  ,chf_g02
17:02:51 219  ,chf_g03
17:02:51 220  ,chf_g04
17:02:51 221  ,chf_g05
17:02:51 222  ,chf_g06
17:02:51 223  ,chf_g07
17:02:51 224  ,chf_g08
17:02:51 225  ,chf_g09
17:02:51 226  ,chf_g10
17:02:51 227  ,chf_g11
17:02:51 228  ,chf_g12
17:02:51 229  ,chf_g13
17:02:51 230  ,chf_g14
17:02:51 231  ,chf_g15
17:02:51 232  ,chf_g16
17:02:51 233  ,chf_g17
17:02:51 234  ,chf_g18
17:02:51 235  ,chf_g19
17:02:51 236  ,chf_g20
17:02:51 237  ,chf_g21
17:02:51 238  ,chf_g22
17:02:51 239  ,chf_g23
17:02:51 240  ,chf_g24
17:02:51 241  ,chf_g25
17:02:51 242  ,chf_g26
17:02:51 243  ,chf_g27
17:02:51 244  ,chf_g28
17:02:51 245  ,chf_g29
17:02:51 246  ,chf_g30
17:02:51 247  ,chf_g31
17:02:51 248  ,chf_g32
17:02:51 249  ,chf_g33
17:02:51 250  ,chf_g34
17:02:51 251  ,chf_g35
17:02:51 252  ,chf_g36
17:02:51 253  ,chf_g37
17:02:51 254  ,chf_g38
17:02:51 255  ,chf_g39
17:02:51 256  ,chf_g40
17:02:51 257  ,chf_g41
17:02:51 258  FROM aud_ms6 m
17:02:51 259  WHERE m.ydate = '&1'||' '||'&2'
17:02:51 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'16:40:00'

View created.

Elapsed: 00:00:00.12
17:02:52 SQL> 
17:02:52 SQL> -- rpt
17:02:52 SQL> -- We should see just 1 row:
17:02:52 SQL> 
17:02:52 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.03
17:02:52 SQL> 
17:02:52 SQL> -- Build the model:
17:02:52 SQL> CREATE OR REPLACE VIEW bme AS
17:02:52   2  SELECT
17:02:52   3  'aud'||m.ydate prdate
17:02:52   4  ,gattn
17:02:52   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
17:02:52   6  ,eur_g00
17:02:52   7  ,eur_g01
17:02:52   8  ,eur_g02
17:02:52   9  ,eur_g03
17:02:52  10  ,eur_g04
17:02:52  11  ,eur_g05
17:02:52  12  ,eur_g06
17:02:52  13  ,eur_g07
17:02:52  14  ,eur_g08
17:02:52  15  ,eur_g09
17:02:52  16  ,eur_g10
17:02:52  17  ,eur_g11
17:02:52  18  ,eur_g12
17:02:52  19  ,eur_g13
17:02:52  20  ,eur_g14
17:02:52  21  ,eur_g15
17:02:52  22  ,eur_g16
17:02:52  23  ,eur_g17
17:02:52  24  ,eur_g18
17:02:52  25  ,eur_g19
17:02:52  26  ,eur_g20
17:02:52  27  ,eur_g21
17:02:52  28  ,eur_g22
17:02:52  29  ,eur_g23
17:02:52  30  ,eur_g24
17:02:52  31  ,eur_g25
17:02:52  32  ,eur_g26
17:02:52  33  ,eur_g27
17:02:52  34  ,eur_g28
17:02:52  35  ,eur_g29
17:02:52  36  ,eur_g30
17:02:52  37  ,eur_g31
17:02:52  38  ,eur_g32
17:02:52  39  ,eur_g33
17:02:52  40  ,eur_g34
17:02:52  41  ,eur_g35
17:02:52  42  ,eur_g36
17:02:52  43  ,eur_g37
17:02:52  44  ,eur_g38
17:02:52  45  ,eur_g39
17:02:52  46  ,eur_g40
17:02:52  47  ,eur_g41
17:02:52  48  ,aud_g00
17:02:52  49  ,aud_g01
17:02:52  50  ,aud_g02
17:02:52  51  ,aud_g03
17:02:52  52  ,aud_g04
17:02:52  53  ,aud_g05
17:02:52  54  ,aud_g06
17:02:52  55  ,aud_g07
17:02:52  56  ,aud_g08
17:02:52  57  ,aud_g09
17:02:52  58  ,aud_g10
17:02:52  59  ,aud_g11
17:02:52  60  ,aud_g12
17:02:52  61  ,aud_g13
17:02:52  62  ,aud_g14
17:02:52  63  ,aud_g15
17:02:52  64  ,aud_g16
17:02:52  65  ,aud_g17
17:02:52  66  ,aud_g18
17:02:52  67  ,aud_g19
17:02:52  68  ,aud_g20
17:02:52  69  ,aud_g21
17:02:52  70  ,aud_g22
17:02:52  71  ,aud_g23
17:02:52  72  ,aud_g24
17:02:52  73  ,aud_g25
17:02:52  74  ,aud_g26
17:02:52  75  ,aud_g27
17:02:52  76  ,aud_g28
17:02:52  77  ,aud_g29
17:02:52  78  ,aud_g30
17:02:52  79  ,aud_g31
17:02:52  80  ,aud_g32
17:02:52  81  ,aud_g33
17:02:52  82  ,aud_g34
17:02:52  83  ,aud_g35
17:02:52  84  ,aud_g36
17:02:52  85  ,aud_g37
17:02:52  86  ,aud_g38
17:02:52  87  ,aud_g39
17:02:52  88  ,aud_g40
17:02:52  89  ,aud_g41
17:02:52  90  ,gbp_g00
17:02:52  91  ,gbp_g01
17:02:52  92  ,gbp_g02
17:02:52  93  ,gbp_g03
17:02:52  94  ,gbp_g04
17:02:52  95  ,gbp_g05
17:02:52  96  ,gbp_g06
17:02:52  97  ,gbp_g07
17:02:52  98  ,gbp_g08
17:02:52  99  ,gbp_g09
17:02:52 100  ,gbp_g10
17:02:52 101  ,gbp_g11
17:02:52 102  ,gbp_g12
17:02:52 103  ,gbp_g13
17:02:52 104  ,gbp_g14
17:02:52 105  ,gbp_g15
17:02:52 106  ,gbp_g16
17:02:52 107  ,gbp_g17
17:02:52 108  ,gbp_g18
17:02:52 109  ,gbp_g19
17:02:52 110  ,gbp_g20
17:02:52 111  ,gbp_g21
17:02:52 112  ,gbp_g22
17:02:52 113  ,gbp_g23
17:02:52 114  ,gbp_g24
17:02:52 115  ,gbp_g25
17:02:52 116  ,gbp_g26
17:02:52 117  ,gbp_g27
17:02:52 118  ,gbp_g28
17:02:52 119  ,gbp_g29
17:02:52 120  ,gbp_g30
17:02:52 121  ,gbp_g31
17:02:52 122  ,gbp_g32
17:02:52 123  ,gbp_g33
17:02:52 124  ,gbp_g34
17:02:52 125  ,gbp_g35
17:02:52 126  ,gbp_g36
17:02:52 127  ,gbp_g37
17:02:52 128  ,gbp_g38
17:02:52 129  ,gbp_g39
17:02:52 130  ,gbp_g40
17:02:52 131  ,gbp_g41
17:02:52 132  ,jpy_g00
17:02:52 133  ,jpy_g01
17:02:52 134  ,jpy_g02
17:02:52 135  ,jpy_g03
17:02:52 136  ,jpy_g04
17:02:52 137  ,jpy_g05
17:02:52 138  ,jpy_g06
17:02:52 139  ,jpy_g07
17:02:52 140  ,jpy_g08
17:02:52 141  ,jpy_g09
17:02:52 142  ,jpy_g10
17:02:52 143  ,jpy_g11
17:02:52 144  ,jpy_g12
17:02:52 145  ,jpy_g13
17:02:52 146  ,jpy_g14
17:02:52 147  ,jpy_g15
17:02:52 148  ,jpy_g16
17:02:52 149  ,jpy_g17
17:02:52 150  ,jpy_g18
17:02:52 151  ,jpy_g19
17:02:52 152  ,jpy_g20
17:02:52 153  ,jpy_g21
17:02:52 154  ,jpy_g22
17:02:52 155  ,jpy_g23
17:02:52 156  ,jpy_g24
17:02:52 157  ,jpy_g25
17:02:52 158  ,jpy_g26
17:02:52 159  ,jpy_g27
17:02:52 160  ,jpy_g28
17:02:52 161  ,jpy_g29
17:02:52 162  ,jpy_g30
17:02:52 163  ,jpy_g31
17:02:52 164  ,jpy_g32
17:02:52 165  ,jpy_g33
17:02:52 166  ,jpy_g34
17:02:52 167  ,jpy_g35
17:02:52 168  ,jpy_g36
17:02:52 169  ,jpy_g37
17:02:52 170  ,jpy_g38
17:02:52 171  ,jpy_g39
17:02:52 172  ,jpy_g40
17:02:52 173  ,jpy_g41
17:02:52 174  ,cad_g00
17:02:52 175  ,cad_g01
17:02:52 176  ,cad_g02
17:02:52 177  ,cad_g03
17:02:52 178  ,cad_g04
17:02:52 179  ,cad_g05
17:02:52 180  ,cad_g06
17:02:52 181  ,cad_g07
17:02:52 182  ,cad_g08
17:02:52 183  ,cad_g09
17:02:52 184  ,cad_g10
17:02:52 185  ,cad_g11
17:02:52 186  ,cad_g12
17:02:52 187  ,cad_g13
17:02:52 188  ,cad_g14
17:02:52 189  ,cad_g15
17:02:52 190  ,cad_g16
17:02:52 191  ,cad_g17
17:02:52 192  ,cad_g18
17:02:52 193  ,cad_g19
17:02:52 194  ,cad_g20
17:02:52 195  ,cad_g21
17:02:52 196  ,cad_g22
17:02:52 197  ,cad_g23
17:02:52 198  ,cad_g24
17:02:52 199  ,cad_g25
17:02:52 200  ,cad_g26
17:02:52 201  ,cad_g27
17:02:52 202  ,cad_g28
17:02:52 203  ,cad_g29
17:02:52 204  ,cad_g30
17:02:52 205  ,cad_g31
17:02:52 206  ,cad_g32
17:02:52 207  ,cad_g33
17:02:52 208  ,cad_g34
17:02:52 209  ,cad_g35
17:02:52 210  ,cad_g36
17:02:52 211  ,cad_g37
17:02:52 212  ,cad_g38
17:02:52 213  ,cad_g39
17:02:52 214  ,cad_g40
17:02:52 215  ,cad_g41
17:02:52 216  ,chf_g00
17:02:52 217  ,chf_g01
17:02:52 218  ,chf_g02
17:02:52 219  ,chf_g03
17:02:52 220  ,chf_g04
17:02:52 221  ,chf_g05
17:02:52 222  ,chf_g06
17:02:52 223  ,chf_g07
17:02:52 224  ,chf_g08
17:02:52 225  ,chf_g09
17:02:52 226  ,chf_g10
17:02:52 227  ,chf_g11
17:02:52 228  ,chf_g12
17:02:52 229  ,chf_g13
17:02:52 230  ,chf_g14
17:02:52 231  ,chf_g15
17:02:52 232  ,chf_g16
17:02:52 233  ,chf_g17
17:02:52 234  ,chf_g18
17:02:52 235  ,chf_g19
17:02:52 236  ,chf_g20
17:02:52 237  ,chf_g21
17:02:52 238  ,chf_g22
17:02:52 239  ,chf_g23
17:02:52 240  ,chf_g24
17:02:52 241  ,chf_g25
17:02:52 242  ,chf_g26
17:02:52 243  ,chf_g27
17:02:52 244  ,chf_g28
17:02:52 245  ,chf_g29
17:02:52 246  ,chf_g30
17:02:52 247  ,chf_g31
17:02:52 248  ,chf_g32
17:02:52 249  ,chf_g33
17:02:52 250  ,chf_g34
17:02:52 251  ,chf_g35
17:02:52 252  ,chf_g36
17:02:52 253  ,chf_g37
17:02:52 254  ,chf_g38
17:02:52 255  ,chf_g39
17:02:52 256  ,chf_g40
17:02:52 257  ,chf_g41
17:02:52 258  FROM aud_ms6 m
17:02:52 259  WHERE gattn IN('nup','up')
17:02:52 260  AND 1+m.ydate < '&1'||' '||'&2'
17:02:52 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'16:40:00'

View created.

Elapsed: 00:00:00.12
17:02:52 SQL> 
17:02:52 SQL> -- rpt
17:02:52 SQL> 
17:02:52 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12865
up	     6643

Elapsed: 00:00:00.04
17:02:52 SQL> 
17:02:52 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-06 16:35:00

Elapsed: 00:00:00.04
17:02:52 SQL> 
17:02:52 SQL> -- Now build model from bme and score sme
17:02:52 SQL> @score1gattn.sql
17:02:52 SQL> -- score1gattn.sql
17:02:52 SQL> 
17:02:52 SQL> -- Does the 1st SVM score
17:02:52 SQL> 
17:02:52 SQL> -- Fill up svmc_apply_prep
17:02:52 SQL> @score_gattn.sql
17:02:52 SQL> --
17:02:52 SQL> -- score_gattn.sql
17:02:52 SQL> --
17:02:52 SQL> 
17:02:52 SQL> -- usage: score_gattn.sql
17:02:52 SQL> 
17:02:52 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
17:02:52 SQL> 
17:02:52 SQL> DEFINE target	= 'gattn'
17:02:52 SQL> DEFINE model_name = 'forex15'
17:02:52 SQL> DEFINE bldtable	= 'bme'
17:02:52 SQL> DEFINE scoretable = 'sme'
17:02:52 SQL> DEFINE case_id	= 'prdate'
17:02:52 SQL> 
17:02:52 SQL> -- Define a variable to help me exclude some columns from some data mining calls
17:02:52 SQL> DEFINE exclude1 = "'&target','&case_id'"
17:02:52 SQL> 
17:02:52 SQL> -- Builds an SVM model using pl/sql.
17:02:52 SQL> 
17:02:52 SQL> -----------------------------------------------------------------------
17:02:52 SQL> --			    BUILD THE MODEL
17:02:52 SQL> -----------------------------------------------------------------------
17:02:52 SQL> 
17:02:52 SQL> -- Cleanup old build data preparation objects for repeat runs
17:02:52 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
17:02:52 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
17:02:52 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
17:02:52 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.02
17:02:52 SQL> 
17:02:52 SQL> 
17:02:52 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
17:02:52 SQL> --
17:02:52 SQL> -- DROP	TABLE svmc_settings ;
17:02:52 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
17:02:52 SQL> -- DELETE svmc_settings;
17:02:52 SQL> 
17:02:52 SQL> -- The default classification algorithm is Naive Bayes. So override
17:02:52 SQL> -- this choice to SVM using a settings table.
17:02:52 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
17:02:52 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
17:02:52 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
17:02:52 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
17:02:52 SQL> -- models.
17:02:52 SQL> --
17:02:52 SQL> 
17:02:52 SQL> -- Do this once and then comment it out.
17:02:52 SQL> -- That makes script go faster.
17:02:52 SQL> -- BEGIN
17:02:52 SQL> -- -- Populate settings table
17:02:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:02:52 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
17:02:52 SQL> --
17:02:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:02:52 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
17:02:52 SQL> --
17:02:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:02:52 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
17:02:52 SQL> --   COMMIT;
17:02:52 SQL> -- END;
17:02:52 SQL> -- /
17:02:52 SQL> 
17:02:52 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
17:02:52 SQL> 
17:02:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
17:02:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:02:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
17:02:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
17:02:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:02:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
17:02:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
17:02:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:02:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
17:02:52 SQL> 
17:02:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
17:02:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:02:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
17:02:52 SQL> 
17:02:52 SQL> --------------------------------
17:02:52 SQL> -- PREPARE BUILD (TRAINING) DATA
17:02:52 SQL> --
17:02:52 SQL> 
17:02:52 SQL> -- 1. Missing Value treatment for all Predictors and
17:02:52 SQL> -- 2. Outlier Treatment and
17:02:52 SQL> -- 3. Normalization are performed below.
17:02:52 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
17:02:52 SQL> --    normalized here.
17:02:52 SQL> 
17:02:52 SQL> BEGIN
17:02:52   2  	-- Perform missing value treatment for all predictors
17:02:52   3  	-- create miss tables
17:02:52   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
17:02:52   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
17:02:52   6  
17:02:52   7  	-- populate miss tables
17:02:52   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
17:02:52   9  	  miss_table_name => 'svmc_miss_num',
17:02:52  10  	  data_table_name => '&bldtable',
17:02:52  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:02:52  12  
17:02:52  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
17:02:52  14  	  miss_table_name => 'svmc_miss_cat',
17:02:52  15  	  data_table_name => '&bldtable',
17:02:52  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:02:52  17  
17:02:52  18  	-- xform input data to replace missing values
17:02:52  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
17:02:52  20  	  miss_table_name => 'svmc_miss_num',
17:02:52  21  	  data_table_name => '&bldtable',
17:02:52  22  	  xform_view_name => 'xformed_build_miss_num');
17:02:52  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
17:02:52  24  	  miss_table_name => 'svmc_miss_cat',
17:02:52  25  	  data_table_name => '&bldtable',
17:02:52  26  	  xform_view_name => 'xformed_build_miss_cat');
17:02:52  27  
17:02:52  28  	-- Perform outlier treatment.
17:02:52  29  	-- create clip table
17:02:52  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
17:02:52  31  
17:02:52  32  	-- populate clip table
17:02:52  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
17:02:52  34  	  clip_table_name => 'svmc_clip',
17:02:52  35  	  data_table_name => '&bldtable',
17:02:52  36  	  tail_frac	  => 0.025,
17:02:52  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:02:52  38  
17:02:52  39  	-- xform input data to winsorized data
17:02:52  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
17:02:52  41  	  clip_table_name => 'svmc_clip',
17:02:52  42  	  data_table_name => '&bldtable',
17:02:52  43  	  xform_view_name => 'svmc_winsor');
17:02:52  44  
17:02:52  45  	-- create normalization table
17:02:52  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
17:02:52  47  
17:02:52  48  	-- populate normalization table based on winsorized data
17:02:52  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
17:02:52  50  	  norm_table_name => 'svmc_norm',
17:02:52  51  	  data_table_name => 'svmc_winsor',
17:02:52  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:02:52  53  
17:02:52  54  	-- normalize the original data
17:02:52  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
17:02:52  56  	  norm_table_name => 'svmc_norm',
17:02:52  57  	  data_table_name => '&bldtable',
17:02:52  58  	  xform_view_name => 'svmc_build_prep');
17:02:52  59  END;
17:02:52  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.85
17:03:11 SQL> 
17:03:11 SQL> ---------------------
17:03:11 SQL> -- CREATE A NEW MODEL
17:03:11 SQL> --
17:03:11 SQL> -- Cleanup old model with the same name for repeat runs
17:03:11 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
17:03:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:03:11   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.99
17:03:12 SQL> 
17:03:12 SQL> -- Build a new SVM Model
17:03:12 SQL> BEGIN
17:03:12   2  	DBMS_DATA_MINING.CREATE_MODEL(
17:03:12   3  	  model_name	      => '&model_name',
17:03:12   4  	  mining_function     => dbms_data_mining.classification,
17:03:12   5  	  data_table_name     => 'svmc_build_prep',
17:03:12   6  	  case_id_column_name => '&case_id',
17:03:12   7  	  target_column_name  => '&target',
17:03:12   8  	  settings_table_name => 'svmc_settings');
17:03:12   9  END;
17:03:12  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.39
17:03:41 SQL> 
17:03:41 SQL> -----------------------------------------------------------------------
17:03:41 SQL> --			       APPLY/score THE MODEL
17:03:41 SQL> -----------------------------------------------------------------------
17:03:41 SQL> 
17:03:41 SQL> -- Cleanup old scoring data preparation objects for repeat runs
17:03:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
17:03:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:03:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
17:03:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
17:03:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:03:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
17:03:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
17:03:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:03:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
17:03:42 SQL> -----------------------
17:03:42 SQL> -- PREPARE SCORING DATA
17:03:42 SQL> --
17:03:42 SQL> -- If the data for model creation has been prepared, then the data
17:03:42 SQL> -- to be scored using the model must be prepared in the same manner
17:03:42 SQL> -- in order to obtain meaningful results.
17:03:42 SQL> --
17:03:42 SQL> -- 1. Missing Value treatment for all Predictors and
17:03:42 SQL> -- 2. Normalization
17:03:42 SQL> -- No outlier treatment will be performed during test and apply. The
17:03:42 SQL> -- normalization step is sufficient, since the normalization parameters
17:03:42 SQL> -- already capture the effects of outlier treatment done with build data.
17:03:42 SQL> --
17:03:42 SQL> BEGIN
17:03:42   2  	-- Xform Test data to replace missing values
17:03:42   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
17:03:42   4  	  miss_table_name => 'svmc_miss_num',
17:03:42   5  	  data_table_name => '&scoretable',
17:03:42   6  	  xform_view_name => 'xformed_apply_miss_num');
17:03:42   7  
17:03:42   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
17:03:42   9  	  miss_table_name => 'svmc_miss_cat',
17:03:42  10  	  data_table_name => '&scoretable',
17:03:42  11  	  xform_view_name => 'xformed_apply_miss_cat');
17:03:42  12  
17:03:42  13  	-- Normalize the data to be scored
17:03:42  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
17:03:42  15  	  norm_table_name => 'svmc_norm',
17:03:42  16  	  data_table_name => '&scoretable',
17:03:42  17  	  xform_view_name => 'svmc_apply_prep');
17:03:42  18  END;
17:03:42  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
17:03:43 SQL> 
17:03:43 SQL> -- Use same model_name used in score_gattn.sql
17:03:43 SQL> DEFINE model_name = 'forex15'
17:03:43 SQL> 
17:03:43 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
17:03:43 SQL> 
17:03:43 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
17:03:43   2  SELECT
17:03:43   3  prdate
17:03:43   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
17:03:43   5  ,sysdate
17:03:43   6  ,SUBSTR(prdate,1,3)pair
17:03:43   7  ,SUBSTR(prdate,4,19)ydate
17:03:43   8  FROM svmc_apply_prep
17:03:43   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.19
17:03:43 SQL> @aud_score1day_gattn.sql	2011-01-07 16:45:00
17:03:43 SQL> --
17:03:43 SQL> -- aud_score1day_gattn.sql
17:03:43 SQL> --
17:03:43 SQL> 
17:03:43 SQL> CREATE OR REPLACE VIEW sme AS
17:03:43   2  SELECT
17:03:43   3  'aud'||m.ydate prdate
17:03:43   4  ,NULL gattn
17:03:43   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
17:03:43   6  ,eur_g00
17:03:43   7  ,eur_g01
17:03:43   8  ,eur_g02
17:03:43   9  ,eur_g03
17:03:43  10  ,eur_g04
17:03:43  11  ,eur_g05
17:03:43  12  ,eur_g06
17:03:43  13  ,eur_g07
17:03:43  14  ,eur_g08
17:03:43  15  ,eur_g09
17:03:43  16  ,eur_g10
17:03:43  17  ,eur_g11
17:03:43  18  ,eur_g12
17:03:43  19  ,eur_g13
17:03:43  20  ,eur_g14
17:03:43  21  ,eur_g15
17:03:43  22  ,eur_g16
17:03:43  23  ,eur_g17
17:03:43  24  ,eur_g18
17:03:43  25  ,eur_g19
17:03:43  26  ,eur_g20
17:03:43  27  ,eur_g21
17:03:43  28  ,eur_g22
17:03:43  29  ,eur_g23
17:03:43  30  ,eur_g24
17:03:43  31  ,eur_g25
17:03:43  32  ,eur_g26
17:03:43  33  ,eur_g27
17:03:43  34  ,eur_g28
17:03:43  35  ,eur_g29
17:03:43  36  ,eur_g30
17:03:43  37  ,eur_g31
17:03:43  38  ,eur_g32
17:03:43  39  ,eur_g33
17:03:43  40  ,eur_g34
17:03:43  41  ,eur_g35
17:03:43  42  ,eur_g36
17:03:43  43  ,eur_g37
17:03:43  44  ,eur_g38
17:03:43  45  ,eur_g39
17:03:43  46  ,eur_g40
17:03:43  47  ,eur_g41
17:03:43  48  ,aud_g00
17:03:43  49  ,aud_g01
17:03:43  50  ,aud_g02
17:03:43  51  ,aud_g03
17:03:43  52  ,aud_g04
17:03:43  53  ,aud_g05
17:03:43  54  ,aud_g06
17:03:43  55  ,aud_g07
17:03:43  56  ,aud_g08
17:03:43  57  ,aud_g09
17:03:43  58  ,aud_g10
17:03:43  59  ,aud_g11
17:03:43  60  ,aud_g12
17:03:43  61  ,aud_g13
17:03:43  62  ,aud_g14
17:03:43  63  ,aud_g15
17:03:43  64  ,aud_g16
17:03:43  65  ,aud_g17
17:03:43  66  ,aud_g18
17:03:43  67  ,aud_g19
17:03:43  68  ,aud_g20
17:03:43  69  ,aud_g21
17:03:43  70  ,aud_g22
17:03:43  71  ,aud_g23
17:03:43  72  ,aud_g24
17:03:43  73  ,aud_g25
17:03:43  74  ,aud_g26
17:03:43  75  ,aud_g27
17:03:43  76  ,aud_g28
17:03:43  77  ,aud_g29
17:03:43  78  ,aud_g30
17:03:43  79  ,aud_g31
17:03:43  80  ,aud_g32
17:03:43  81  ,aud_g33
17:03:43  82  ,aud_g34
17:03:43  83  ,aud_g35
17:03:43  84  ,aud_g36
17:03:43  85  ,aud_g37
17:03:43  86  ,aud_g38
17:03:43  87  ,aud_g39
17:03:43  88  ,aud_g40
17:03:43  89  ,aud_g41
17:03:43  90  ,gbp_g00
17:03:43  91  ,gbp_g01
17:03:43  92  ,gbp_g02
17:03:43  93  ,gbp_g03
17:03:43  94  ,gbp_g04
17:03:43  95  ,gbp_g05
17:03:43  96  ,gbp_g06
17:03:43  97  ,gbp_g07
17:03:43  98  ,gbp_g08
17:03:43  99  ,gbp_g09
17:03:43 100  ,gbp_g10
17:03:43 101  ,gbp_g11
17:03:43 102  ,gbp_g12
17:03:43 103  ,gbp_g13
17:03:43 104  ,gbp_g14
17:03:43 105  ,gbp_g15
17:03:43 106  ,gbp_g16
17:03:43 107  ,gbp_g17
17:03:43 108  ,gbp_g18
17:03:43 109  ,gbp_g19
17:03:43 110  ,gbp_g20
17:03:43 111  ,gbp_g21
17:03:43 112  ,gbp_g22
17:03:43 113  ,gbp_g23
17:03:43 114  ,gbp_g24
17:03:43 115  ,gbp_g25
17:03:43 116  ,gbp_g26
17:03:43 117  ,gbp_g27
17:03:43 118  ,gbp_g28
17:03:43 119  ,gbp_g29
17:03:43 120  ,gbp_g30
17:03:43 121  ,gbp_g31
17:03:43 122  ,gbp_g32
17:03:43 123  ,gbp_g33
17:03:43 124  ,gbp_g34
17:03:43 125  ,gbp_g35
17:03:43 126  ,gbp_g36
17:03:43 127  ,gbp_g37
17:03:43 128  ,gbp_g38
17:03:43 129  ,gbp_g39
17:03:43 130  ,gbp_g40
17:03:43 131  ,gbp_g41
17:03:43 132  ,jpy_g00
17:03:43 133  ,jpy_g01
17:03:43 134  ,jpy_g02
17:03:43 135  ,jpy_g03
17:03:43 136  ,jpy_g04
17:03:43 137  ,jpy_g05
17:03:43 138  ,jpy_g06
17:03:43 139  ,jpy_g07
17:03:43 140  ,jpy_g08
17:03:43 141  ,jpy_g09
17:03:43 142  ,jpy_g10
17:03:43 143  ,jpy_g11
17:03:43 144  ,jpy_g12
17:03:43 145  ,jpy_g13
17:03:43 146  ,jpy_g14
17:03:43 147  ,jpy_g15
17:03:43 148  ,jpy_g16
17:03:43 149  ,jpy_g17
17:03:43 150  ,jpy_g18
17:03:43 151  ,jpy_g19
17:03:43 152  ,jpy_g20
17:03:43 153  ,jpy_g21
17:03:43 154  ,jpy_g22
17:03:43 155  ,jpy_g23
17:03:43 156  ,jpy_g24
17:03:43 157  ,jpy_g25
17:03:43 158  ,jpy_g26
17:03:43 159  ,jpy_g27
17:03:43 160  ,jpy_g28
17:03:43 161  ,jpy_g29
17:03:43 162  ,jpy_g30
17:03:43 163  ,jpy_g31
17:03:43 164  ,jpy_g32
17:03:43 165  ,jpy_g33
17:03:43 166  ,jpy_g34
17:03:43 167  ,jpy_g35
17:03:43 168  ,jpy_g36
17:03:43 169  ,jpy_g37
17:03:43 170  ,jpy_g38
17:03:43 171  ,jpy_g39
17:03:43 172  ,jpy_g40
17:03:43 173  ,jpy_g41
17:03:43 174  ,cad_g00
17:03:43 175  ,cad_g01
17:03:43 176  ,cad_g02
17:03:43 177  ,cad_g03
17:03:43 178  ,cad_g04
17:03:43 179  ,cad_g05
17:03:43 180  ,cad_g06
17:03:43 181  ,cad_g07
17:03:43 182  ,cad_g08
17:03:43 183  ,cad_g09
17:03:43 184  ,cad_g10
17:03:43 185  ,cad_g11
17:03:43 186  ,cad_g12
17:03:43 187  ,cad_g13
17:03:43 188  ,cad_g14
17:03:43 189  ,cad_g15
17:03:43 190  ,cad_g16
17:03:43 191  ,cad_g17
17:03:43 192  ,cad_g18
17:03:43 193  ,cad_g19
17:03:43 194  ,cad_g20
17:03:43 195  ,cad_g21
17:03:43 196  ,cad_g22
17:03:43 197  ,cad_g23
17:03:43 198  ,cad_g24
17:03:43 199  ,cad_g25
17:03:43 200  ,cad_g26
17:03:43 201  ,cad_g27
17:03:43 202  ,cad_g28
17:03:43 203  ,cad_g29
17:03:43 204  ,cad_g30
17:03:43 205  ,cad_g31
17:03:43 206  ,cad_g32
17:03:43 207  ,cad_g33
17:03:43 208  ,cad_g34
17:03:43 209  ,cad_g35
17:03:43 210  ,cad_g36
17:03:43 211  ,cad_g37
17:03:43 212  ,cad_g38
17:03:43 213  ,cad_g39
17:03:43 214  ,cad_g40
17:03:43 215  ,cad_g41
17:03:43 216  ,chf_g00
17:03:43 217  ,chf_g01
17:03:43 218  ,chf_g02
17:03:43 219  ,chf_g03
17:03:43 220  ,chf_g04
17:03:43 221  ,chf_g05
17:03:43 222  ,chf_g06
17:03:43 223  ,chf_g07
17:03:43 224  ,chf_g08
17:03:43 225  ,chf_g09
17:03:43 226  ,chf_g10
17:03:43 227  ,chf_g11
17:03:43 228  ,chf_g12
17:03:43 229  ,chf_g13
17:03:43 230  ,chf_g14
17:03:43 231  ,chf_g15
17:03:43 232  ,chf_g16
17:03:43 233  ,chf_g17
17:03:43 234  ,chf_g18
17:03:43 235  ,chf_g19
17:03:43 236  ,chf_g20
17:03:43 237  ,chf_g21
17:03:43 238  ,chf_g22
17:03:43 239  ,chf_g23
17:03:43 240  ,chf_g24
17:03:43 241  ,chf_g25
17:03:43 242  ,chf_g26
17:03:43 243  ,chf_g27
17:03:43 244  ,chf_g28
17:03:43 245  ,chf_g29
17:03:43 246  ,chf_g30
17:03:43 247  ,chf_g31
17:03:43 248  ,chf_g32
17:03:43 249  ,chf_g33
17:03:43 250  ,chf_g34
17:03:43 251  ,chf_g35
17:03:43 252  ,chf_g36
17:03:43 253  ,chf_g37
17:03:43 254  ,chf_g38
17:03:43 255  ,chf_g39
17:03:43 256  ,chf_g40
17:03:43 257  ,chf_g41
17:03:43 258  FROM aud_ms6 m
17:03:43 259  WHERE m.ydate = '&1'||' '||'&2'
17:03:43 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'16:45:00'

View created.

Elapsed: 00:00:00.12
17:03:43 SQL> 
17:03:43 SQL> -- rpt
17:03:43 SQL> -- We should see just 1 row:
17:03:43 SQL> 
17:03:43 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
17:03:43 SQL> 
17:03:43 SQL> -- Build the model:
17:03:43 SQL> CREATE OR REPLACE VIEW bme AS
17:03:43   2  SELECT
17:03:43   3  'aud'||m.ydate prdate
17:03:43   4  ,gattn
17:03:43   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
17:03:43   6  ,eur_g00
17:03:43   7  ,eur_g01
17:03:43   8  ,eur_g02
17:03:43   9  ,eur_g03
17:03:43  10  ,eur_g04
17:03:43  11  ,eur_g05
17:03:43  12  ,eur_g06
17:03:43  13  ,eur_g07
17:03:43  14  ,eur_g08
17:03:43  15  ,eur_g09
17:03:43  16  ,eur_g10
17:03:43  17  ,eur_g11
17:03:43  18  ,eur_g12
17:03:43  19  ,eur_g13
17:03:43  20  ,eur_g14
17:03:43  21  ,eur_g15
17:03:43  22  ,eur_g16
17:03:43  23  ,eur_g17
17:03:43  24  ,eur_g18
17:03:43  25  ,eur_g19
17:03:43  26  ,eur_g20
17:03:43  27  ,eur_g21
17:03:43  28  ,eur_g22
17:03:43  29  ,eur_g23
17:03:43  30  ,eur_g24
17:03:43  31  ,eur_g25
17:03:43  32  ,eur_g26
17:03:43  33  ,eur_g27
17:03:43  34  ,eur_g28
17:03:43  35  ,eur_g29
17:03:43  36  ,eur_g30
17:03:43  37  ,eur_g31
17:03:43  38  ,eur_g32
17:03:43  39  ,eur_g33
17:03:43  40  ,eur_g34
17:03:43  41  ,eur_g35
17:03:43  42  ,eur_g36
17:03:43  43  ,eur_g37
17:03:43  44  ,eur_g38
17:03:43  45  ,eur_g39
17:03:43  46  ,eur_g40
17:03:43  47  ,eur_g41
17:03:43  48  ,aud_g00
17:03:43  49  ,aud_g01
17:03:43  50  ,aud_g02
17:03:43  51  ,aud_g03
17:03:43  52  ,aud_g04
17:03:43  53  ,aud_g05
17:03:43  54  ,aud_g06
17:03:43  55  ,aud_g07
17:03:43  56  ,aud_g08
17:03:43  57  ,aud_g09
17:03:43  58  ,aud_g10
17:03:43  59  ,aud_g11
17:03:43  60  ,aud_g12
17:03:43  61  ,aud_g13
17:03:43  62  ,aud_g14
17:03:43  63  ,aud_g15
17:03:43  64  ,aud_g16
17:03:43  65  ,aud_g17
17:03:43  66  ,aud_g18
17:03:43  67  ,aud_g19
17:03:43  68  ,aud_g20
17:03:43  69  ,aud_g21
17:03:43  70  ,aud_g22
17:03:43  71  ,aud_g23
17:03:43  72  ,aud_g24
17:03:43  73  ,aud_g25
17:03:43  74  ,aud_g26
17:03:43  75  ,aud_g27
17:03:43  76  ,aud_g28
17:03:43  77  ,aud_g29
17:03:43  78  ,aud_g30
17:03:43  79  ,aud_g31
17:03:43  80  ,aud_g32
17:03:43  81  ,aud_g33
17:03:43  82  ,aud_g34
17:03:43  83  ,aud_g35
17:03:43  84  ,aud_g36
17:03:43  85  ,aud_g37
17:03:43  86  ,aud_g38
17:03:43  87  ,aud_g39
17:03:43  88  ,aud_g40
17:03:43  89  ,aud_g41
17:03:43  90  ,gbp_g00
17:03:43  91  ,gbp_g01
17:03:43  92  ,gbp_g02
17:03:43  93  ,gbp_g03
17:03:43  94  ,gbp_g04
17:03:43  95  ,gbp_g05
17:03:43  96  ,gbp_g06
17:03:43  97  ,gbp_g07
17:03:43  98  ,gbp_g08
17:03:43  99  ,gbp_g09
17:03:43 100  ,gbp_g10
17:03:43 101  ,gbp_g11
17:03:43 102  ,gbp_g12
17:03:43 103  ,gbp_g13
17:03:43 104  ,gbp_g14
17:03:43 105  ,gbp_g15
17:03:43 106  ,gbp_g16
17:03:43 107  ,gbp_g17
17:03:43 108  ,gbp_g18
17:03:43 109  ,gbp_g19
17:03:43 110  ,gbp_g20
17:03:43 111  ,gbp_g21
17:03:43 112  ,gbp_g22
17:03:43 113  ,gbp_g23
17:03:43 114  ,gbp_g24
17:03:43 115  ,gbp_g25
17:03:43 116  ,gbp_g26
17:03:43 117  ,gbp_g27
17:03:43 118  ,gbp_g28
17:03:43 119  ,gbp_g29
17:03:43 120  ,gbp_g30
17:03:43 121  ,gbp_g31
17:03:43 122  ,gbp_g32
17:03:43 123  ,gbp_g33
17:03:43 124  ,gbp_g34
17:03:43 125  ,gbp_g35
17:03:43 126  ,gbp_g36
17:03:43 127  ,gbp_g37
17:03:43 128  ,gbp_g38
17:03:43 129  ,gbp_g39
17:03:43 130  ,gbp_g40
17:03:43 131  ,gbp_g41
17:03:43 132  ,jpy_g00
17:03:43 133  ,jpy_g01
17:03:43 134  ,jpy_g02
17:03:43 135  ,jpy_g03
17:03:43 136  ,jpy_g04
17:03:43 137  ,jpy_g05
17:03:43 138  ,jpy_g06
17:03:43 139  ,jpy_g07
17:03:43 140  ,jpy_g08
17:03:43 141  ,jpy_g09
17:03:43 142  ,jpy_g10
17:03:43 143  ,jpy_g11
17:03:43 144  ,jpy_g12
17:03:43 145  ,jpy_g13
17:03:43 146  ,jpy_g14
17:03:43 147  ,jpy_g15
17:03:43 148  ,jpy_g16
17:03:43 149  ,jpy_g17
17:03:43 150  ,jpy_g18
17:03:43 151  ,jpy_g19
17:03:43 152  ,jpy_g20
17:03:43 153  ,jpy_g21
17:03:43 154  ,jpy_g22
17:03:43 155  ,jpy_g23
17:03:43 156  ,jpy_g24
17:03:43 157  ,jpy_g25
17:03:43 158  ,jpy_g26
17:03:43 159  ,jpy_g27
17:03:43 160  ,jpy_g28
17:03:43 161  ,jpy_g29
17:03:43 162  ,jpy_g30
17:03:43 163  ,jpy_g31
17:03:43 164  ,jpy_g32
17:03:43 165  ,jpy_g33
17:03:43 166  ,jpy_g34
17:03:43 167  ,jpy_g35
17:03:43 168  ,jpy_g36
17:03:43 169  ,jpy_g37
17:03:43 170  ,jpy_g38
17:03:43 171  ,jpy_g39
17:03:43 172  ,jpy_g40
17:03:43 173  ,jpy_g41
17:03:43 174  ,cad_g00
17:03:43 175  ,cad_g01
17:03:43 176  ,cad_g02
17:03:43 177  ,cad_g03
17:03:43 178  ,cad_g04
17:03:43 179  ,cad_g05
17:03:43 180  ,cad_g06
17:03:43 181  ,cad_g07
17:03:43 182  ,cad_g08
17:03:43 183  ,cad_g09
17:03:43 184  ,cad_g10
17:03:43 185  ,cad_g11
17:03:43 186  ,cad_g12
17:03:43 187  ,cad_g13
17:03:43 188  ,cad_g14
17:03:43 189  ,cad_g15
17:03:43 190  ,cad_g16
17:03:43 191  ,cad_g17
17:03:43 192  ,cad_g18
17:03:43 193  ,cad_g19
17:03:43 194  ,cad_g20
17:03:43 195  ,cad_g21
17:03:43 196  ,cad_g22
17:03:43 197  ,cad_g23
17:03:43 198  ,cad_g24
17:03:43 199  ,cad_g25
17:03:43 200  ,cad_g26
17:03:43 201  ,cad_g27
17:03:43 202  ,cad_g28
17:03:43 203  ,cad_g29
17:03:43 204  ,cad_g30
17:03:43 205  ,cad_g31
17:03:43 206  ,cad_g32
17:03:43 207  ,cad_g33
17:03:43 208  ,cad_g34
17:03:43 209  ,cad_g35
17:03:43 210  ,cad_g36
17:03:43 211  ,cad_g37
17:03:43 212  ,cad_g38
17:03:43 213  ,cad_g39
17:03:43 214  ,cad_g40
17:03:43 215  ,cad_g41
17:03:43 216  ,chf_g00
17:03:43 217  ,chf_g01
17:03:43 218  ,chf_g02
17:03:43 219  ,chf_g03
17:03:43 220  ,chf_g04
17:03:43 221  ,chf_g05
17:03:43 222  ,chf_g06
17:03:43 223  ,chf_g07
17:03:43 224  ,chf_g08
17:03:43 225  ,chf_g09
17:03:43 226  ,chf_g10
17:03:43 227  ,chf_g11
17:03:43 228  ,chf_g12
17:03:43 229  ,chf_g13
17:03:43 230  ,chf_g14
17:03:43 231  ,chf_g15
17:03:43 232  ,chf_g16
17:03:43 233  ,chf_g17
17:03:43 234  ,chf_g18
17:03:43 235  ,chf_g19
17:03:43 236  ,chf_g20
17:03:43 237  ,chf_g21
17:03:43 238  ,chf_g22
17:03:43 239  ,chf_g23
17:03:43 240  ,chf_g24
17:03:43 241  ,chf_g25
17:03:43 242  ,chf_g26
17:03:43 243  ,chf_g27
17:03:43 244  ,chf_g28
17:03:43 245  ,chf_g29
17:03:43 246  ,chf_g30
17:03:43 247  ,chf_g31
17:03:43 248  ,chf_g32
17:03:43 249  ,chf_g33
17:03:43 250  ,chf_g34
17:03:43 251  ,chf_g35
17:03:43 252  ,chf_g36
17:03:43 253  ,chf_g37
17:03:43 254  ,chf_g38
17:03:43 255  ,chf_g39
17:03:43 256  ,chf_g40
17:03:43 257  ,chf_g41
17:03:43 258  FROM aud_ms6 m
17:03:43 259  WHERE gattn IN('nup','up')
17:03:43 260  AND 1+m.ydate < '&1'||' '||'&2'
17:03:43 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'16:45:00'

View created.

Elapsed: 00:00:00.13
17:03:43 SQL> 
17:03:43 SQL> -- rpt
17:03:43 SQL> 
17:03:43 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12866
up	     6643

Elapsed: 00:00:00.05
17:03:43 SQL> 
17:03:43 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-06 16:40:00

Elapsed: 00:00:00.03
17:03:43 SQL> 
17:03:43 SQL> -- Now build model from bme and score sme
17:03:43 SQL> @score1gattn.sql
17:03:43 SQL> -- score1gattn.sql
17:03:43 SQL> 
17:03:43 SQL> -- Does the 1st SVM score
17:03:43 SQL> 
17:03:43 SQL> -- Fill up svmc_apply_prep
17:03:43 SQL> @score_gattn.sql
17:03:43 SQL> --
17:03:43 SQL> -- score_gattn.sql
17:03:43 SQL> --
17:03:43 SQL> 
17:03:43 SQL> -- usage: score_gattn.sql
17:03:43 SQL> 
17:03:43 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
17:03:43 SQL> 
17:03:43 SQL> DEFINE target	= 'gattn'
17:03:43 SQL> DEFINE model_name = 'forex15'
17:03:43 SQL> DEFINE bldtable	= 'bme'
17:03:43 SQL> DEFINE scoretable = 'sme'
17:03:43 SQL> DEFINE case_id	= 'prdate'
17:03:43 SQL> 
17:03:43 SQL> -- Define a variable to help me exclude some columns from some data mining calls
17:03:43 SQL> DEFINE exclude1 = "'&target','&case_id'"
17:03:43 SQL> 
17:03:43 SQL> -- Builds an SVM model using pl/sql.
17:03:43 SQL> 
17:03:43 SQL> -----------------------------------------------------------------------
17:03:43 SQL> --			    BUILD THE MODEL
17:03:43 SQL> -----------------------------------------------------------------------
17:03:43 SQL> 
17:03:43 SQL> -- Cleanup old build data preparation objects for repeat runs
17:03:43 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
17:03:43 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
17:03:43 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
17:03:43 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
17:03:43 SQL> 
17:03:43 SQL> 
17:03:43 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
17:03:43 SQL> --
17:03:43 SQL> -- DROP	TABLE svmc_settings ;
17:03:43 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
17:03:43 SQL> -- DELETE svmc_settings;
17:03:43 SQL> 
17:03:43 SQL> -- The default classification algorithm is Naive Bayes. So override
17:03:43 SQL> -- this choice to SVM using a settings table.
17:03:43 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
17:03:43 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
17:03:43 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
17:03:43 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
17:03:43 SQL> -- models.
17:03:43 SQL> --
17:03:43 SQL> 
17:03:43 SQL> -- Do this once and then comment it out.
17:03:43 SQL> -- That makes script go faster.
17:03:43 SQL> -- BEGIN
17:03:43 SQL> -- -- Populate settings table
17:03:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:03:43 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
17:03:43 SQL> --
17:03:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:03:43 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
17:03:43 SQL> --
17:03:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:03:43 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
17:03:43 SQL> --   COMMIT;
17:03:43 SQL> -- END;
17:03:43 SQL> -- /
17:03:43 SQL> 
17:03:43 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
17:03:43 SQL> 
17:03:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
17:03:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:03:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
17:03:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
17:03:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:03:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
17:03:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
17:03:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:03:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
17:03:44 SQL> 
17:03:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
17:03:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:03:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
17:03:44 SQL> 
17:03:44 SQL> --------------------------------
17:03:44 SQL> -- PREPARE BUILD (TRAINING) DATA
17:03:44 SQL> --
17:03:44 SQL> 
17:03:44 SQL> -- 1. Missing Value treatment for all Predictors and
17:03:44 SQL> -- 2. Outlier Treatment and
17:03:44 SQL> -- 3. Normalization are performed below.
17:03:44 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
17:03:44 SQL> --    normalized here.
17:03:44 SQL> 
17:03:44 SQL> BEGIN
17:03:44   2  	-- Perform missing value treatment for all predictors
17:03:44   3  	-- create miss tables
17:03:44   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
17:03:44   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
17:03:44   6  
17:03:44   7  	-- populate miss tables
17:03:44   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
17:03:44   9  	  miss_table_name => 'svmc_miss_num',
17:03:44  10  	  data_table_name => '&bldtable',
17:03:44  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:03:44  12  
17:03:44  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
17:03:44  14  	  miss_table_name => 'svmc_miss_cat',
17:03:44  15  	  data_table_name => '&bldtable',
17:03:44  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:03:44  17  
17:03:44  18  	-- xform input data to replace missing values
17:03:44  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
17:03:44  20  	  miss_table_name => 'svmc_miss_num',
17:03:44  21  	  data_table_name => '&bldtable',
17:03:44  22  	  xform_view_name => 'xformed_build_miss_num');
17:03:44  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
17:03:44  24  	  miss_table_name => 'svmc_miss_cat',
17:03:44  25  	  data_table_name => '&bldtable',
17:03:44  26  	  xform_view_name => 'xformed_build_miss_cat');
17:03:44  27  
17:03:44  28  	-- Perform outlier treatment.
17:03:44  29  	-- create clip table
17:03:44  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
17:03:44  31  
17:03:44  32  	-- populate clip table
17:03:44  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
17:03:44  34  	  clip_table_name => 'svmc_clip',
17:03:44  35  	  data_table_name => '&bldtable',
17:03:44  36  	  tail_frac	  => 0.025,
17:03:44  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:03:44  38  
17:03:44  39  	-- xform input data to winsorized data
17:03:44  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
17:03:44  41  	  clip_table_name => 'svmc_clip',
17:03:44  42  	  data_table_name => '&bldtable',
17:03:44  43  	  xform_view_name => 'svmc_winsor');
17:03:44  44  
17:03:44  45  	-- create normalization table
17:03:44  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
17:03:44  47  
17:03:44  48  	-- populate normalization table based on winsorized data
17:03:44  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
17:03:44  50  	  norm_table_name => 'svmc_norm',
17:03:44  51  	  data_table_name => 'svmc_winsor',
17:03:44  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:03:44  53  
17:03:44  54  	-- normalize the original data
17:03:44  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
17:03:44  56  	  norm_table_name => 'svmc_norm',
17:03:44  57  	  data_table_name => '&bldtable',
17:03:44  58  	  xform_view_name => 'svmc_build_prep');
17:03:44  59  END;
17:03:44  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.37
17:04:02 SQL> 
17:04:02 SQL> ---------------------
17:04:02 SQL> -- CREATE A NEW MODEL
17:04:02 SQL> --
17:04:02 SQL> -- Cleanup old model with the same name for repeat runs
17:04:02 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
17:04:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:04:02   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.09
17:04:03 SQL> 
17:04:03 SQL> -- Build a new SVM Model
17:04:03 SQL> BEGIN
17:04:03   2  	DBMS_DATA_MINING.CREATE_MODEL(
17:04:03   3  	  model_name	      => '&model_name',
17:04:03   4  	  mining_function     => dbms_data_mining.classification,
17:04:03   5  	  data_table_name     => 'svmc_build_prep',
17:04:03   6  	  case_id_column_name => '&case_id',
17:04:03   7  	  target_column_name  => '&target',
17:04:03   8  	  settings_table_name => 'svmc_settings');
17:04:03   9  END;
17:04:03  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.20
17:04:30 SQL> 
17:04:30 SQL> -----------------------------------------------------------------------
17:04:30 SQL> --			       APPLY/score THE MODEL
17:04:30 SQL> -----------------------------------------------------------------------
17:04:30 SQL> 
17:04:30 SQL> -- Cleanup old scoring data preparation objects for repeat runs
17:04:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
17:04:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:04:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
17:04:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
17:04:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:04:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
17:04:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
17:04:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:04:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
17:04:31 SQL> -----------------------
17:04:31 SQL> -- PREPARE SCORING DATA
17:04:31 SQL> --
17:04:31 SQL> -- If the data for model creation has been prepared, then the data
17:04:31 SQL> -- to be scored using the model must be prepared in the same manner
17:04:31 SQL> -- in order to obtain meaningful results.
17:04:31 SQL> --
17:04:31 SQL> -- 1. Missing Value treatment for all Predictors and
17:04:31 SQL> -- 2. Normalization
17:04:31 SQL> -- No outlier treatment will be performed during test and apply. The
17:04:31 SQL> -- normalization step is sufficient, since the normalization parameters
17:04:31 SQL> -- already capture the effects of outlier treatment done with build data.
17:04:31 SQL> --
17:04:31 SQL> BEGIN
17:04:31   2  	-- Xform Test data to replace missing values
17:04:31   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
17:04:31   4  	  miss_table_name => 'svmc_miss_num',
17:04:31   5  	  data_table_name => '&scoretable',
17:04:31   6  	  xform_view_name => 'xformed_apply_miss_num');
17:04:31   7  
17:04:31   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
17:04:31   9  	  miss_table_name => 'svmc_miss_cat',
17:04:31  10  	  data_table_name => '&scoretable',
17:04:31  11  	  xform_view_name => 'xformed_apply_miss_cat');
17:04:31  12  
17:04:31  13  	-- Normalize the data to be scored
17:04:31  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
17:04:31  15  	  norm_table_name => 'svmc_norm',
17:04:31  16  	  data_table_name => '&scoretable',
17:04:31  17  	  xform_view_name => 'svmc_apply_prep');
17:04:31  18  END;
17:04:31  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
17:04:32 SQL> 
17:04:32 SQL> -- Use same model_name used in score_gattn.sql
17:04:32 SQL> DEFINE model_name = 'forex15'
17:04:32 SQL> 
17:04:32 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
17:04:32 SQL> 
17:04:32 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
17:04:32   2  SELECT
17:04:32   3  prdate
17:04:32   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
17:04:32   5  ,sysdate
17:04:32   6  ,SUBSTR(prdate,1,3)pair
17:04:32   7  ,SUBSTR(prdate,4,19)ydate
17:04:32   8  FROM svmc_apply_prep
17:04:32   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
17:04:32 SQL> @aud_score1day_gattn.sql	2011-01-07 16:50:00
17:04:32 SQL> --
17:04:32 SQL> -- aud_score1day_gattn.sql
17:04:32 SQL> --
17:04:32 SQL> 
17:04:32 SQL> CREATE OR REPLACE VIEW sme AS
17:04:32   2  SELECT
17:04:32   3  'aud'||m.ydate prdate
17:04:32   4  ,NULL gattn
17:04:32   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
17:04:32   6  ,eur_g00
17:04:32   7  ,eur_g01
17:04:32   8  ,eur_g02
17:04:32   9  ,eur_g03
17:04:32  10  ,eur_g04
17:04:32  11  ,eur_g05
17:04:32  12  ,eur_g06
17:04:32  13  ,eur_g07
17:04:32  14  ,eur_g08
17:04:32  15  ,eur_g09
17:04:32  16  ,eur_g10
17:04:32  17  ,eur_g11
17:04:32  18  ,eur_g12
17:04:32  19  ,eur_g13
17:04:32  20  ,eur_g14
17:04:32  21  ,eur_g15
17:04:32  22  ,eur_g16
17:04:32  23  ,eur_g17
17:04:32  24  ,eur_g18
17:04:32  25  ,eur_g19
17:04:32  26  ,eur_g20
17:04:32  27  ,eur_g21
17:04:32  28  ,eur_g22
17:04:32  29  ,eur_g23
17:04:32  30  ,eur_g24
17:04:32  31  ,eur_g25
17:04:32  32  ,eur_g26
17:04:32  33  ,eur_g27
17:04:32  34  ,eur_g28
17:04:32  35  ,eur_g29
17:04:32  36  ,eur_g30
17:04:32  37  ,eur_g31
17:04:32  38  ,eur_g32
17:04:32  39  ,eur_g33
17:04:32  40  ,eur_g34
17:04:32  41  ,eur_g35
17:04:32  42  ,eur_g36
17:04:32  43  ,eur_g37
17:04:32  44  ,eur_g38
17:04:32  45  ,eur_g39
17:04:32  46  ,eur_g40
17:04:32  47  ,eur_g41
17:04:32  48  ,aud_g00
17:04:32  49  ,aud_g01
17:04:32  50  ,aud_g02
17:04:32  51  ,aud_g03
17:04:32  52  ,aud_g04
17:04:32  53  ,aud_g05
17:04:32  54  ,aud_g06
17:04:32  55  ,aud_g07
17:04:32  56  ,aud_g08
17:04:32  57  ,aud_g09
17:04:32  58  ,aud_g10
17:04:32  59  ,aud_g11
17:04:32  60  ,aud_g12
17:04:32  61  ,aud_g13
17:04:32  62  ,aud_g14
17:04:32  63  ,aud_g15
17:04:32  64  ,aud_g16
17:04:32  65  ,aud_g17
17:04:32  66  ,aud_g18
17:04:32  67  ,aud_g19
17:04:32  68  ,aud_g20
17:04:32  69  ,aud_g21
17:04:32  70  ,aud_g22
17:04:32  71  ,aud_g23
17:04:32  72  ,aud_g24
17:04:32  73  ,aud_g25
17:04:32  74  ,aud_g26
17:04:32  75  ,aud_g27
17:04:32  76  ,aud_g28
17:04:32  77  ,aud_g29
17:04:32  78  ,aud_g30
17:04:32  79  ,aud_g31
17:04:32  80  ,aud_g32
17:04:32  81  ,aud_g33
17:04:32  82  ,aud_g34
17:04:32  83  ,aud_g35
17:04:32  84  ,aud_g36
17:04:32  85  ,aud_g37
17:04:32  86  ,aud_g38
17:04:32  87  ,aud_g39
17:04:32  88  ,aud_g40
17:04:32  89  ,aud_g41
17:04:32  90  ,gbp_g00
17:04:32  91  ,gbp_g01
17:04:32  92  ,gbp_g02
17:04:32  93  ,gbp_g03
17:04:32  94  ,gbp_g04
17:04:32  95  ,gbp_g05
17:04:32  96  ,gbp_g06
17:04:32  97  ,gbp_g07
17:04:32  98  ,gbp_g08
17:04:32  99  ,gbp_g09
17:04:32 100  ,gbp_g10
17:04:32 101  ,gbp_g11
17:04:32 102  ,gbp_g12
17:04:32 103  ,gbp_g13
17:04:32 104  ,gbp_g14
17:04:32 105  ,gbp_g15
17:04:32 106  ,gbp_g16
17:04:32 107  ,gbp_g17
17:04:32 108  ,gbp_g18
17:04:32 109  ,gbp_g19
17:04:32 110  ,gbp_g20
17:04:32 111  ,gbp_g21
17:04:32 112  ,gbp_g22
17:04:32 113  ,gbp_g23
17:04:32 114  ,gbp_g24
17:04:32 115  ,gbp_g25
17:04:32 116  ,gbp_g26
17:04:32 117  ,gbp_g27
17:04:32 118  ,gbp_g28
17:04:32 119  ,gbp_g29
17:04:32 120  ,gbp_g30
17:04:32 121  ,gbp_g31
17:04:32 122  ,gbp_g32
17:04:32 123  ,gbp_g33
17:04:32 124  ,gbp_g34
17:04:32 125  ,gbp_g35
17:04:32 126  ,gbp_g36
17:04:32 127  ,gbp_g37
17:04:32 128  ,gbp_g38
17:04:32 129  ,gbp_g39
17:04:32 130  ,gbp_g40
17:04:32 131  ,gbp_g41
17:04:32 132  ,jpy_g00
17:04:32 133  ,jpy_g01
17:04:32 134  ,jpy_g02
17:04:32 135  ,jpy_g03
17:04:32 136  ,jpy_g04
17:04:32 137  ,jpy_g05
17:04:32 138  ,jpy_g06
17:04:32 139  ,jpy_g07
17:04:32 140  ,jpy_g08
17:04:32 141  ,jpy_g09
17:04:32 142  ,jpy_g10
17:04:32 143  ,jpy_g11
17:04:32 144  ,jpy_g12
17:04:32 145  ,jpy_g13
17:04:32 146  ,jpy_g14
17:04:32 147  ,jpy_g15
17:04:32 148  ,jpy_g16
17:04:32 149  ,jpy_g17
17:04:32 150  ,jpy_g18
17:04:32 151  ,jpy_g19
17:04:32 152  ,jpy_g20
17:04:32 153  ,jpy_g21
17:04:32 154  ,jpy_g22
17:04:32 155  ,jpy_g23
17:04:32 156  ,jpy_g24
17:04:32 157  ,jpy_g25
17:04:32 158  ,jpy_g26
17:04:32 159  ,jpy_g27
17:04:32 160  ,jpy_g28
17:04:32 161  ,jpy_g29
17:04:32 162  ,jpy_g30
17:04:32 163  ,jpy_g31
17:04:32 164  ,jpy_g32
17:04:32 165  ,jpy_g33
17:04:32 166  ,jpy_g34
17:04:32 167  ,jpy_g35
17:04:32 168  ,jpy_g36
17:04:32 169  ,jpy_g37
17:04:32 170  ,jpy_g38
17:04:32 171  ,jpy_g39
17:04:32 172  ,jpy_g40
17:04:32 173  ,jpy_g41
17:04:32 174  ,cad_g00
17:04:32 175  ,cad_g01
17:04:32 176  ,cad_g02
17:04:32 177  ,cad_g03
17:04:32 178  ,cad_g04
17:04:32 179  ,cad_g05
17:04:32 180  ,cad_g06
17:04:32 181  ,cad_g07
17:04:32 182  ,cad_g08
17:04:32 183  ,cad_g09
17:04:32 184  ,cad_g10
17:04:32 185  ,cad_g11
17:04:32 186  ,cad_g12
17:04:32 187  ,cad_g13
17:04:32 188  ,cad_g14
17:04:32 189  ,cad_g15
17:04:32 190  ,cad_g16
17:04:32 191  ,cad_g17
17:04:32 192  ,cad_g18
17:04:32 193  ,cad_g19
17:04:32 194  ,cad_g20
17:04:32 195  ,cad_g21
17:04:32 196  ,cad_g22
17:04:32 197  ,cad_g23
17:04:32 198  ,cad_g24
17:04:32 199  ,cad_g25
17:04:32 200  ,cad_g26
17:04:32 201  ,cad_g27
17:04:32 202  ,cad_g28
17:04:32 203  ,cad_g29
17:04:32 204  ,cad_g30
17:04:32 205  ,cad_g31
17:04:32 206  ,cad_g32
17:04:32 207  ,cad_g33
17:04:32 208  ,cad_g34
17:04:32 209  ,cad_g35
17:04:32 210  ,cad_g36
17:04:32 211  ,cad_g37
17:04:32 212  ,cad_g38
17:04:32 213  ,cad_g39
17:04:32 214  ,cad_g40
17:04:32 215  ,cad_g41
17:04:32 216  ,chf_g00
17:04:32 217  ,chf_g01
17:04:32 218  ,chf_g02
17:04:32 219  ,chf_g03
17:04:32 220  ,chf_g04
17:04:32 221  ,chf_g05
17:04:32 222  ,chf_g06
17:04:32 223  ,chf_g07
17:04:32 224  ,chf_g08
17:04:32 225  ,chf_g09
17:04:32 226  ,chf_g10
17:04:32 227  ,chf_g11
17:04:32 228  ,chf_g12
17:04:32 229  ,chf_g13
17:04:32 230  ,chf_g14
17:04:32 231  ,chf_g15
17:04:32 232  ,chf_g16
17:04:32 233  ,chf_g17
17:04:32 234  ,chf_g18
17:04:32 235  ,chf_g19
17:04:32 236  ,chf_g20
17:04:32 237  ,chf_g21
17:04:32 238  ,chf_g22
17:04:32 239  ,chf_g23
17:04:32 240  ,chf_g24
17:04:32 241  ,chf_g25
17:04:32 242  ,chf_g26
17:04:32 243  ,chf_g27
17:04:32 244  ,chf_g28
17:04:32 245  ,chf_g29
17:04:32 246  ,chf_g30
17:04:32 247  ,chf_g31
17:04:32 248  ,chf_g32
17:04:32 249  ,chf_g33
17:04:32 250  ,chf_g34
17:04:32 251  ,chf_g35
17:04:32 252  ,chf_g36
17:04:32 253  ,chf_g37
17:04:32 254  ,chf_g38
17:04:32 255  ,chf_g39
17:04:32 256  ,chf_g40
17:04:32 257  ,chf_g41
17:04:32 258  FROM aud_ms6 m
17:04:32 259  WHERE m.ydate = '&1'||' '||'&2'
17:04:32 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'16:50:00'

View created.

Elapsed: 00:00:00.15
17:04:32 SQL> 
17:04:32 SQL> -- rpt
17:04:32 SQL> -- We should see just 1 row:
17:04:32 SQL> 
17:04:32 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
17:04:32 SQL> 
17:04:32 SQL> -- Build the model:
17:04:32 SQL> CREATE OR REPLACE VIEW bme AS
17:04:32   2  SELECT
17:04:32   3  'aud'||m.ydate prdate
17:04:32   4  ,gattn
17:04:32   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
17:04:32   6  ,eur_g00
17:04:32   7  ,eur_g01
17:04:32   8  ,eur_g02
17:04:32   9  ,eur_g03
17:04:32  10  ,eur_g04
17:04:32  11  ,eur_g05
17:04:32  12  ,eur_g06
17:04:32  13  ,eur_g07
17:04:32  14  ,eur_g08
17:04:32  15  ,eur_g09
17:04:32  16  ,eur_g10
17:04:32  17  ,eur_g11
17:04:32  18  ,eur_g12
17:04:32  19  ,eur_g13
17:04:32  20  ,eur_g14
17:04:32  21  ,eur_g15
17:04:32  22  ,eur_g16
17:04:32  23  ,eur_g17
17:04:32  24  ,eur_g18
17:04:32  25  ,eur_g19
17:04:32  26  ,eur_g20
17:04:32  27  ,eur_g21
17:04:32  28  ,eur_g22
17:04:32  29  ,eur_g23
17:04:32  30  ,eur_g24
17:04:32  31  ,eur_g25
17:04:32  32  ,eur_g26
17:04:32  33  ,eur_g27
17:04:32  34  ,eur_g28
17:04:32  35  ,eur_g29
17:04:32  36  ,eur_g30
17:04:32  37  ,eur_g31
17:04:32  38  ,eur_g32
17:04:32  39  ,eur_g33
17:04:32  40  ,eur_g34
17:04:32  41  ,eur_g35
17:04:32  42  ,eur_g36
17:04:32  43  ,eur_g37
17:04:32  44  ,eur_g38
17:04:32  45  ,eur_g39
17:04:32  46  ,eur_g40
17:04:32  47  ,eur_g41
17:04:32  48  ,aud_g00
17:04:32  49  ,aud_g01
17:04:32  50  ,aud_g02
17:04:32  51  ,aud_g03
17:04:32  52  ,aud_g04
17:04:32  53  ,aud_g05
17:04:32  54  ,aud_g06
17:04:32  55  ,aud_g07
17:04:32  56  ,aud_g08
17:04:32  57  ,aud_g09
17:04:32  58  ,aud_g10
17:04:32  59  ,aud_g11
17:04:32  60  ,aud_g12
17:04:32  61  ,aud_g13
17:04:32  62  ,aud_g14
17:04:32  63  ,aud_g15
17:04:32  64  ,aud_g16
17:04:32  65  ,aud_g17
17:04:32  66  ,aud_g18
17:04:32  67  ,aud_g19
17:04:32  68  ,aud_g20
17:04:32  69  ,aud_g21
17:04:32  70  ,aud_g22
17:04:32  71  ,aud_g23
17:04:32  72  ,aud_g24
17:04:32  73  ,aud_g25
17:04:32  74  ,aud_g26
17:04:32  75  ,aud_g27
17:04:32  76  ,aud_g28
17:04:32  77  ,aud_g29
17:04:32  78  ,aud_g30
17:04:32  79  ,aud_g31
17:04:32  80  ,aud_g32
17:04:32  81  ,aud_g33
17:04:32  82  ,aud_g34
17:04:32  83  ,aud_g35
17:04:32  84  ,aud_g36
17:04:32  85  ,aud_g37
17:04:32  86  ,aud_g38
17:04:32  87  ,aud_g39
17:04:32  88  ,aud_g40
17:04:32  89  ,aud_g41
17:04:32  90  ,gbp_g00
17:04:32  91  ,gbp_g01
17:04:32  92  ,gbp_g02
17:04:32  93  ,gbp_g03
17:04:32  94  ,gbp_g04
17:04:32  95  ,gbp_g05
17:04:32  96  ,gbp_g06
17:04:32  97  ,gbp_g07
17:04:32  98  ,gbp_g08
17:04:32  99  ,gbp_g09
17:04:32 100  ,gbp_g10
17:04:32 101  ,gbp_g11
17:04:32 102  ,gbp_g12
17:04:32 103  ,gbp_g13
17:04:32 104  ,gbp_g14
17:04:32 105  ,gbp_g15
17:04:32 106  ,gbp_g16
17:04:32 107  ,gbp_g17
17:04:32 108  ,gbp_g18
17:04:32 109  ,gbp_g19
17:04:32 110  ,gbp_g20
17:04:32 111  ,gbp_g21
17:04:32 112  ,gbp_g22
17:04:32 113  ,gbp_g23
17:04:32 114  ,gbp_g24
17:04:32 115  ,gbp_g25
17:04:32 116  ,gbp_g26
17:04:32 117  ,gbp_g27
17:04:32 118  ,gbp_g28
17:04:32 119  ,gbp_g29
17:04:32 120  ,gbp_g30
17:04:32 121  ,gbp_g31
17:04:32 122  ,gbp_g32
17:04:32 123  ,gbp_g33
17:04:32 124  ,gbp_g34
17:04:32 125  ,gbp_g35
17:04:32 126  ,gbp_g36
17:04:32 127  ,gbp_g37
17:04:32 128  ,gbp_g38
17:04:32 129  ,gbp_g39
17:04:32 130  ,gbp_g40
17:04:32 131  ,gbp_g41
17:04:32 132  ,jpy_g00
17:04:32 133  ,jpy_g01
17:04:32 134  ,jpy_g02
17:04:32 135  ,jpy_g03
17:04:32 136  ,jpy_g04
17:04:32 137  ,jpy_g05
17:04:32 138  ,jpy_g06
17:04:32 139  ,jpy_g07
17:04:32 140  ,jpy_g08
17:04:32 141  ,jpy_g09
17:04:32 142  ,jpy_g10
17:04:32 143  ,jpy_g11
17:04:32 144  ,jpy_g12
17:04:32 145  ,jpy_g13
17:04:32 146  ,jpy_g14
17:04:32 147  ,jpy_g15
17:04:32 148  ,jpy_g16
17:04:32 149  ,jpy_g17
17:04:32 150  ,jpy_g18
17:04:32 151  ,jpy_g19
17:04:32 152  ,jpy_g20
17:04:32 153  ,jpy_g21
17:04:32 154  ,jpy_g22
17:04:32 155  ,jpy_g23
17:04:32 156  ,jpy_g24
17:04:32 157  ,jpy_g25
17:04:32 158  ,jpy_g26
17:04:32 159  ,jpy_g27
17:04:32 160  ,jpy_g28
17:04:32 161  ,jpy_g29
17:04:32 162  ,jpy_g30
17:04:32 163  ,jpy_g31
17:04:32 164  ,jpy_g32
17:04:32 165  ,jpy_g33
17:04:32 166  ,jpy_g34
17:04:32 167  ,jpy_g35
17:04:32 168  ,jpy_g36
17:04:32 169  ,jpy_g37
17:04:32 170  ,jpy_g38
17:04:32 171  ,jpy_g39
17:04:32 172  ,jpy_g40
17:04:32 173  ,jpy_g41
17:04:32 174  ,cad_g00
17:04:32 175  ,cad_g01
17:04:32 176  ,cad_g02
17:04:32 177  ,cad_g03
17:04:32 178  ,cad_g04
17:04:32 179  ,cad_g05
17:04:32 180  ,cad_g06
17:04:32 181  ,cad_g07
17:04:32 182  ,cad_g08
17:04:32 183  ,cad_g09
17:04:32 184  ,cad_g10
17:04:32 185  ,cad_g11
17:04:32 186  ,cad_g12
17:04:32 187  ,cad_g13
17:04:32 188  ,cad_g14
17:04:32 189  ,cad_g15
17:04:32 190  ,cad_g16
17:04:32 191  ,cad_g17
17:04:32 192  ,cad_g18
17:04:32 193  ,cad_g19
17:04:32 194  ,cad_g20
17:04:32 195  ,cad_g21
17:04:32 196  ,cad_g22
17:04:32 197  ,cad_g23
17:04:32 198  ,cad_g24
17:04:32 199  ,cad_g25
17:04:32 200  ,cad_g26
17:04:32 201  ,cad_g27
17:04:32 202  ,cad_g28
17:04:32 203  ,cad_g29
17:04:32 204  ,cad_g30
17:04:32 205  ,cad_g31
17:04:32 206  ,cad_g32
17:04:32 207  ,cad_g33
17:04:32 208  ,cad_g34
17:04:32 209  ,cad_g35
17:04:32 210  ,cad_g36
17:04:32 211  ,cad_g37
17:04:32 212  ,cad_g38
17:04:32 213  ,cad_g39
17:04:32 214  ,cad_g40
17:04:32 215  ,cad_g41
17:04:32 216  ,chf_g00
17:04:32 217  ,chf_g01
17:04:32 218  ,chf_g02
17:04:32 219  ,chf_g03
17:04:32 220  ,chf_g04
17:04:32 221  ,chf_g05
17:04:32 222  ,chf_g06
17:04:32 223  ,chf_g07
17:04:32 224  ,chf_g08
17:04:32 225  ,chf_g09
17:04:32 226  ,chf_g10
17:04:32 227  ,chf_g11
17:04:32 228  ,chf_g12
17:04:32 229  ,chf_g13
17:04:32 230  ,chf_g14
17:04:32 231  ,chf_g15
17:04:32 232  ,chf_g16
17:04:32 233  ,chf_g17
17:04:32 234  ,chf_g18
17:04:32 235  ,chf_g19
17:04:32 236  ,chf_g20
17:04:32 237  ,chf_g21
17:04:32 238  ,chf_g22
17:04:32 239  ,chf_g23
17:04:32 240  ,chf_g24
17:04:32 241  ,chf_g25
17:04:32 242  ,chf_g26
17:04:32 243  ,chf_g27
17:04:32 244  ,chf_g28
17:04:32 245  ,chf_g29
17:04:32 246  ,chf_g30
17:04:32 247  ,chf_g31
17:04:32 248  ,chf_g32
17:04:32 249  ,chf_g33
17:04:32 250  ,chf_g34
17:04:32 251  ,chf_g35
17:04:32 252  ,chf_g36
17:04:32 253  ,chf_g37
17:04:32 254  ,chf_g38
17:04:32 255  ,chf_g39
17:04:32 256  ,chf_g40
17:04:32 257  ,chf_g41
17:04:32 258  FROM aud_ms6 m
17:04:32 259  WHERE gattn IN('nup','up')
17:04:32 260  AND 1+m.ydate < '&1'||' '||'&2'
17:04:32 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'16:50:00'

View created.

Elapsed: 00:00:00.13
17:04:32 SQL> 
17:04:32 SQL> -- rpt
17:04:32 SQL> 
17:04:32 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12867
up	     6643

Elapsed: 00:00:00.04
17:04:32 SQL> 
17:04:32 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-06 16:45:00

Elapsed: 00:00:00.03
17:04:32 SQL> 
17:04:32 SQL> -- Now build model from bme and score sme
17:04:32 SQL> @score1gattn.sql
17:04:32 SQL> -- score1gattn.sql
17:04:32 SQL> 
17:04:32 SQL> -- Does the 1st SVM score
17:04:32 SQL> 
17:04:32 SQL> -- Fill up svmc_apply_prep
17:04:32 SQL> @score_gattn.sql
17:04:32 SQL> --
17:04:32 SQL> -- score_gattn.sql
17:04:32 SQL> --
17:04:32 SQL> 
17:04:32 SQL> -- usage: score_gattn.sql
17:04:32 SQL> 
17:04:32 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
17:04:32 SQL> 
17:04:32 SQL> DEFINE target	= 'gattn'
17:04:32 SQL> DEFINE model_name = 'forex15'
17:04:32 SQL> DEFINE bldtable	= 'bme'
17:04:32 SQL> DEFINE scoretable = 'sme'
17:04:32 SQL> DEFINE case_id	= 'prdate'
17:04:32 SQL> 
17:04:32 SQL> -- Define a variable to help me exclude some columns from some data mining calls
17:04:32 SQL> DEFINE exclude1 = "'&target','&case_id'"
17:04:32 SQL> 
17:04:32 SQL> -- Builds an SVM model using pl/sql.
17:04:32 SQL> 
17:04:32 SQL> -----------------------------------------------------------------------
17:04:32 SQL> --			    BUILD THE MODEL
17:04:32 SQL> -----------------------------------------------------------------------
17:04:32 SQL> 
17:04:32 SQL> -- Cleanup old build data preparation objects for repeat runs
17:04:32 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
17:04:32 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
17:04:32 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
17:04:32 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
17:04:32 SQL> 
17:04:32 SQL> 
17:04:32 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
17:04:32 SQL> --
17:04:32 SQL> -- DROP	TABLE svmc_settings ;
17:04:32 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
17:04:32 SQL> -- DELETE svmc_settings;
17:04:32 SQL> 
17:04:32 SQL> -- The default classification algorithm is Naive Bayes. So override
17:04:32 SQL> -- this choice to SVM using a settings table.
17:04:32 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
17:04:32 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
17:04:32 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
17:04:32 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
17:04:32 SQL> -- models.
17:04:32 SQL> --
17:04:32 SQL> 
17:04:32 SQL> -- Do this once and then comment it out.
17:04:32 SQL> -- That makes script go faster.
17:04:32 SQL> -- BEGIN
17:04:32 SQL> -- -- Populate settings table
17:04:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:04:32 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
17:04:32 SQL> --
17:04:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:04:32 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
17:04:32 SQL> --
17:04:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
17:04:32 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
17:04:32 SQL> --   COMMIT;
17:04:32 SQL> -- END;
17:04:32 SQL> -- /
17:04:32 SQL> 
17:04:32 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
17:04:32 SQL> 
17:04:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
17:04:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:04:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
17:04:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
17:04:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:04:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
17:04:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
17:04:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:04:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
17:04:33 SQL> 
17:04:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
17:04:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:04:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
17:04:33 SQL> 
17:04:33 SQL> --------------------------------
17:04:33 SQL> -- PREPARE BUILD (TRAINING) DATA
17:04:33 SQL> --
17:04:33 SQL> 
17:04:33 SQL> -- 1. Missing Value treatment for all Predictors and
17:04:33 SQL> -- 2. Outlier Treatment and
17:04:33 SQL> -- 3. Normalization are performed below.
17:04:33 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
17:04:33 SQL> --    normalized here.
17:04:33 SQL> 
17:04:33 SQL> BEGIN
17:04:33   2  	-- Perform missing value treatment for all predictors
17:04:33   3  	-- create miss tables
17:04:33   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
17:04:33   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
17:04:33   6  
17:04:33   7  	-- populate miss tables
17:04:33   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
17:04:33   9  	  miss_table_name => 'svmc_miss_num',
17:04:33  10  	  data_table_name => '&bldtable',
17:04:33  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:04:33  12  
17:04:33  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
17:04:33  14  	  miss_table_name => 'svmc_miss_cat',
17:04:33  15  	  data_table_name => '&bldtable',
17:04:33  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:04:33  17  
17:04:33  18  	-- xform input data to replace missing values
17:04:33  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
17:04:33  20  	  miss_table_name => 'svmc_miss_num',
17:04:33  21  	  data_table_name => '&bldtable',
17:04:33  22  	  xform_view_name => 'xformed_build_miss_num');
17:04:33  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
17:04:33  24  	  miss_table_name => 'svmc_miss_cat',
17:04:33  25  	  data_table_name => '&bldtable',
17:04:33  26  	  xform_view_name => 'xformed_build_miss_cat');
17:04:33  27  
17:04:33  28  	-- Perform outlier treatment.
17:04:33  29  	-- create clip table
17:04:33  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
17:04:33  31  
17:04:33  32  	-- populate clip table
17:04:33  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
17:04:33  34  	  clip_table_name => 'svmc_clip',
17:04:33  35  	  data_table_name => '&bldtable',
17:04:33  36  	  tail_frac	  => 0.025,
17:04:33  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:04:33  38  
17:04:33  39  	-- xform input data to winsorized data
17:04:33  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
17:04:33  41  	  clip_table_name => 'svmc_clip',
17:04:33  42  	  data_table_name => '&bldtable',
17:04:33  43  	  xform_view_name => 'svmc_winsor');
17:04:33  44  
17:04:33  45  	-- create normalization table
17:04:33  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
17:04:33  47  
17:04:33  48  	-- populate normalization table based on winsorized data
17:04:33  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
17:04:33  50  	  norm_table_name => 'svmc_norm',
17:04:33  51  	  data_table_name => 'svmc_winsor',
17:04:33  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
17:04:33  53  
17:04:33  54  	-- normalize the original data
17:04:33  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
17:04:33  56  	  norm_table_name => 'svmc_norm',
17:04:33  57  	  data_table_name => '&bldtable',
17:04:33  58  	  xform_view_name => 'svmc_build_prep');
17:04:33  59  END;
17:04:33  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.43
17:04:51 SQL> 
17:04:51 SQL> ---------------------
17:04:51 SQL> -- CREATE A NEW MODEL
17:04:51 SQL> --
17:04:51 SQL> -- Cleanup old model with the same name for repeat runs
17:04:51 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
17:04:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:04:51   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.02
17:04:52 SQL> 
17:04:52 SQL> -- Build a new SVM Model
17:04:52 SQL> BEGIN
17:04:52   2  	DBMS_DATA_MINING.CREATE_MODEL(
17:04:52   3  	  model_name	      => '&model_name',
17:04:52   4  	  mining_function     => dbms_data_mining.classification,
17:04:52   5  	  data_table_name     => 'svmc_build_prep',
17:04:52   6  	  case_id_column_name => '&case_id',
17:04:52   7  	  target_column_name  => '&target',
17:04:52   8  	  settings_table_name => 'svmc_settings');
17:04:52   9  END;
17:04:52  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.95
17:05:20 SQL> 
17:05:20 SQL> -----------------------------------------------------------------------
17:05:20 SQL> --			       APPLY/score THE MODEL
17:05:20 SQL> -----------------------------------------------------------------------
17:05:20 SQL> 
17:05:20 SQL> -- Cleanup old scoring data preparation objects for repeat runs
17:05:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
17:05:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:05:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
17:05:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
17:05:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:05:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
17:05:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
17:05:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
17:05:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
17:05:20 SQL> -----------------------
17:05:20 SQL> -- PREPARE SCORING DATA
17:05:20 SQL> --
17:05:20 SQL> -- If the data for model creation has been prepared, then the data
17:05:20 SQL> -- to be scored using the model must be prepared in the same manner
17:05:20 SQL> -- in order to obtain meaningful results.
17:05:20 SQL> --
17:05:20 SQL> -- 1. Missing Value treatment for all Predictors and
17:05:20 SQL> -- 2. Normalization
17:05:20 SQL> -- No outlier treatment will be performed during test and apply. The
17:05:20 SQL> -- normalization step is sufficient, since the normalization parameters
17:05:20 SQL> -- already capture the effects of outlier treatment done with build data.
17:05:20 SQL> --
17:05:20 SQL> BEGIN
17:05:20   2  	-- Xform Test data to replace missing values
17:05:20   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
17:05:20   4  	  miss_table_name => 'svmc_miss_num',
17:05:20   5  	  data_table_name => '&scoretable',
17:05:20   6  	  xform_view_name => 'xformed_apply_miss_num');
17:05:20   7  
17:05:20   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
17:05:20   9  	  miss_table_name => 'svmc_miss_cat',
17:05:20  10  	  data_table_name => '&scoretable',
17:05:20  11  	  xform_view_name => 'xformed_apply_miss_cat');
17:05:20  12  
17:05:20  13  	-- Normalize the data to be scored
17:05:20  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
17:05:20  15  	  norm_table_name => 'svmc_norm',
17:05:20  16  	  data_table_name => '&scoretable',
17:05:20  17  	  xform_view_name => 'svmc_apply_prep');
17:05:20  18  END;
17:05:20  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
17:05:22 SQL> 
17:05:22 SQL> -- Use same model_name used in score_gattn.sql
17:05:22 SQL> DEFINE model_name = 'forex15'
17:05:22 SQL> 
17:05:22 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
17:05:22 SQL> 
17:05:22 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
17:05:22   2  SELECT
17:05:22   3  prdate
17:05:22   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
17:05:22   5  ,sysdate
17:05:22   6  ,SUBSTR(prdate,1,3)pair
17:05:22   7  ,SUBSTR(prdate,4,19)ydate
17:05:22   8  FROM svmc_apply_prep
17:05:22   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
17:05:22 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
