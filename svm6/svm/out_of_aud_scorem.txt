
SQL*Plus: Release 11.2.0.1.0 Production on Fri Jan 7 15:34:18 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

15:34:18 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
15:34:18 SQL> 15:34:18 SQL> @aud_score1day.sql  2011-01-07 15:10:00
15:34:18 SQL> --
15:34:18 SQL> -- aud_score1day.sql
15:34:18 SQL> --
15:34:18 SQL> 
15:34:18 SQL> CREATE OR REPLACE VIEW sme AS
15:34:18   2  SELECT
15:34:18   3  'aud'||m.ydate prdate
15:34:18   4  ,NULL gatt
15:34:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:34:18   6  ,eur_g00
15:34:18   7  ,eur_g01
15:34:18   8  ,eur_g02
15:34:18   9  ,eur_g03
15:34:18  10  ,eur_g04
15:34:18  11  ,eur_g05
15:34:18  12  ,eur_g06
15:34:18  13  ,eur_g07
15:34:18  14  ,eur_g08
15:34:18  15  ,eur_g09
15:34:18  16  ,eur_g10
15:34:18  17  ,eur_g11
15:34:18  18  ,eur_g12
15:34:18  19  ,eur_g13
15:34:18  20  ,eur_g14
15:34:18  21  ,eur_g15
15:34:18  22  ,eur_g16
15:34:18  23  ,eur_g17
15:34:18  24  ,eur_g18
15:34:18  25  ,eur_g19
15:34:18  26  ,eur_g20
15:34:18  27  ,eur_g21
15:34:18  28  ,eur_g22
15:34:18  29  ,eur_g23
15:34:18  30  ,eur_g24
15:34:18  31  ,eur_g25
15:34:18  32  ,eur_g26
15:34:18  33  ,eur_g27
15:34:18  34  ,eur_g28
15:34:18  35  ,eur_g29
15:34:18  36  ,eur_g30
15:34:18  37  ,eur_g31
15:34:18  38  ,eur_g32
15:34:18  39  ,eur_g33
15:34:18  40  ,eur_g34
15:34:18  41  ,eur_g35
15:34:18  42  ,eur_g36
15:34:18  43  ,eur_g37
15:34:18  44  ,eur_g38
15:34:18  45  ,eur_g39
15:34:18  46  ,eur_g40
15:34:18  47  ,eur_g41
15:34:18  48  ,aud_g00
15:34:18  49  ,aud_g01
15:34:18  50  ,aud_g02
15:34:18  51  ,aud_g03
15:34:18  52  ,aud_g04
15:34:18  53  ,aud_g05
15:34:18  54  ,aud_g06
15:34:18  55  ,aud_g07
15:34:18  56  ,aud_g08
15:34:18  57  ,aud_g09
15:34:18  58  ,aud_g10
15:34:18  59  ,aud_g11
15:34:18  60  ,aud_g12
15:34:18  61  ,aud_g13
15:34:18  62  ,aud_g14
15:34:18  63  ,aud_g15
15:34:18  64  ,aud_g16
15:34:18  65  ,aud_g17
15:34:18  66  ,aud_g18
15:34:18  67  ,aud_g19
15:34:18  68  ,aud_g20
15:34:18  69  ,aud_g21
15:34:18  70  ,aud_g22
15:34:18  71  ,aud_g23
15:34:18  72  ,aud_g24
15:34:18  73  ,aud_g25
15:34:18  74  ,aud_g26
15:34:18  75  ,aud_g27
15:34:18  76  ,aud_g28
15:34:18  77  ,aud_g29
15:34:18  78  ,aud_g30
15:34:18  79  ,aud_g31
15:34:18  80  ,aud_g32
15:34:18  81  ,aud_g33
15:34:18  82  ,aud_g34
15:34:18  83  ,aud_g35
15:34:18  84  ,aud_g36
15:34:18  85  ,aud_g37
15:34:18  86  ,aud_g38
15:34:18  87  ,aud_g39
15:34:18  88  ,aud_g40
15:34:18  89  ,aud_g41
15:34:18  90  ,gbp_g00
15:34:18  91  ,gbp_g01
15:34:18  92  ,gbp_g02
15:34:18  93  ,gbp_g03
15:34:18  94  ,gbp_g04
15:34:18  95  ,gbp_g05
15:34:18  96  ,gbp_g06
15:34:18  97  ,gbp_g07
15:34:18  98  ,gbp_g08
15:34:18  99  ,gbp_g09
15:34:18 100  ,gbp_g10
15:34:18 101  ,gbp_g11
15:34:18 102  ,gbp_g12
15:34:18 103  ,gbp_g13
15:34:18 104  ,gbp_g14
15:34:18 105  ,gbp_g15
15:34:18 106  ,gbp_g16
15:34:18 107  ,gbp_g17
15:34:18 108  ,gbp_g18
15:34:18 109  ,gbp_g19
15:34:18 110  ,gbp_g20
15:34:18 111  ,gbp_g21
15:34:18 112  ,gbp_g22
15:34:18 113  ,gbp_g23
15:34:18 114  ,gbp_g24
15:34:18 115  ,gbp_g25
15:34:18 116  ,gbp_g26
15:34:18 117  ,gbp_g27
15:34:18 118  ,gbp_g28
15:34:18 119  ,gbp_g29
15:34:18 120  ,gbp_g30
15:34:18 121  ,gbp_g31
15:34:18 122  ,gbp_g32
15:34:18 123  ,gbp_g33
15:34:18 124  ,gbp_g34
15:34:18 125  ,gbp_g35
15:34:18 126  ,gbp_g36
15:34:18 127  ,gbp_g37
15:34:18 128  ,gbp_g38
15:34:18 129  ,gbp_g39
15:34:18 130  ,gbp_g40
15:34:18 131  ,gbp_g41
15:34:18 132  ,jpy_g00
15:34:18 133  ,jpy_g01
15:34:18 134  ,jpy_g02
15:34:18 135  ,jpy_g03
15:34:18 136  ,jpy_g04
15:34:18 137  ,jpy_g05
15:34:18 138  ,jpy_g06
15:34:18 139  ,jpy_g07
15:34:18 140  ,jpy_g08
15:34:18 141  ,jpy_g09
15:34:18 142  ,jpy_g10
15:34:18 143  ,jpy_g11
15:34:18 144  ,jpy_g12
15:34:18 145  ,jpy_g13
15:34:18 146  ,jpy_g14
15:34:18 147  ,jpy_g15
15:34:18 148  ,jpy_g16
15:34:18 149  ,jpy_g17
15:34:18 150  ,jpy_g18
15:34:18 151  ,jpy_g19
15:34:18 152  ,jpy_g20
15:34:18 153  ,jpy_g21
15:34:18 154  ,jpy_g22
15:34:18 155  ,jpy_g23
15:34:18 156  ,jpy_g24
15:34:18 157  ,jpy_g25
15:34:18 158  ,jpy_g26
15:34:18 159  ,jpy_g27
15:34:18 160  ,jpy_g28
15:34:18 161  ,jpy_g29
15:34:18 162  ,jpy_g30
15:34:18 163  ,jpy_g31
15:34:18 164  ,jpy_g32
15:34:18 165  ,jpy_g33
15:34:18 166  ,jpy_g34
15:34:18 167  ,jpy_g35
15:34:18 168  ,jpy_g36
15:34:18 169  ,jpy_g37
15:34:18 170  ,jpy_g38
15:34:18 171  ,jpy_g39
15:34:18 172  ,jpy_g40
15:34:18 173  ,jpy_g41
15:34:18 174  ,cad_g00
15:34:18 175  ,cad_g01
15:34:18 176  ,cad_g02
15:34:18 177  ,cad_g03
15:34:18 178  ,cad_g04
15:34:18 179  ,cad_g05
15:34:18 180  ,cad_g06
15:34:18 181  ,cad_g07
15:34:18 182  ,cad_g08
15:34:18 183  ,cad_g09
15:34:18 184  ,cad_g10
15:34:18 185  ,cad_g11
15:34:18 186  ,cad_g12
15:34:18 187  ,cad_g13
15:34:18 188  ,cad_g14
15:34:18 189  ,cad_g15
15:34:18 190  ,cad_g16
15:34:18 191  ,cad_g17
15:34:18 192  ,cad_g18
15:34:18 193  ,cad_g19
15:34:18 194  ,cad_g20
15:34:18 195  ,cad_g21
15:34:18 196  ,cad_g22
15:34:18 197  ,cad_g23
15:34:18 198  ,cad_g24
15:34:18 199  ,cad_g25
15:34:18 200  ,cad_g26
15:34:18 201  ,cad_g27
15:34:18 202  ,cad_g28
15:34:18 203  ,cad_g29
15:34:18 204  ,cad_g30
15:34:18 205  ,cad_g31
15:34:18 206  ,cad_g32
15:34:18 207  ,cad_g33
15:34:18 208  ,cad_g34
15:34:18 209  ,cad_g35
15:34:18 210  ,cad_g36
15:34:18 211  ,cad_g37
15:34:18 212  ,cad_g38
15:34:18 213  ,cad_g39
15:34:18 214  ,cad_g40
15:34:18 215  ,cad_g41
15:34:18 216  ,chf_g00
15:34:18 217  ,chf_g01
15:34:18 218  ,chf_g02
15:34:18 219  ,chf_g03
15:34:18 220  ,chf_g04
15:34:18 221  ,chf_g05
15:34:18 222  ,chf_g06
15:34:18 223  ,chf_g07
15:34:18 224  ,chf_g08
15:34:18 225  ,chf_g09
15:34:18 226  ,chf_g10
15:34:18 227  ,chf_g11
15:34:18 228  ,chf_g12
15:34:18 229  ,chf_g13
15:34:18 230  ,chf_g14
15:34:18 231  ,chf_g15
15:34:18 232  ,chf_g16
15:34:18 233  ,chf_g17
15:34:18 234  ,chf_g18
15:34:18 235  ,chf_g19
15:34:18 236  ,chf_g20
15:34:18 237  ,chf_g21
15:34:18 238  ,chf_g22
15:34:18 239  ,chf_g23
15:34:18 240  ,chf_g24
15:34:18 241  ,chf_g25
15:34:18 242  ,chf_g26
15:34:18 243  ,chf_g27
15:34:18 244  ,chf_g28
15:34:18 245  ,chf_g29
15:34:18 246  ,chf_g30
15:34:18 247  ,chf_g31
15:34:18 248  ,chf_g32
15:34:18 249  ,chf_g33
15:34:18 250  ,chf_g34
15:34:18 251  ,chf_g35
15:34:18 252  ,chf_g36
15:34:18 253  ,chf_g37
15:34:18 254  ,chf_g38
15:34:18 255  ,chf_g39
15:34:18 256  ,chf_g40
15:34:18 257  ,chf_g41
15:34:18 258  FROM aud_ms6 m
15:34:18 259  WHERE m.ydate = '&1'||' '||'&2'
15:34:18 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'15:10:00'

View created.

Elapsed: 00:00:00.16
15:34:18 SQL> 
15:34:18 SQL> -- rpt
15:34:18 SQL> -- We should see just 1 row:
15:34:18 SQL> 
15:34:18 SQL> SELECT COUNT(prdate) FROM sme
15:34:18   2  
15:34:18 SQL> -- Build the model:
15:34:18 SQL> CREATE OR REPLACE VIEW bme AS
15:34:18   2  SELECT
15:34:18   3  'aud'||m.ydate prdate
15:34:18   4  ,gatt
15:34:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:34:18   6  ,eur_g00
15:34:18   7  ,eur_g01
15:34:18   8  ,eur_g02
15:34:18   9  ,eur_g03
15:34:18  10  ,eur_g04
15:34:18  11  ,eur_g05
15:34:18  12  ,eur_g06
15:34:18  13  ,eur_g07
15:34:18  14  ,eur_g08
15:34:18  15  ,eur_g09
15:34:18  16  ,eur_g10
15:34:18  17  ,eur_g11
15:34:18  18  ,eur_g12
15:34:18  19  ,eur_g13
15:34:18  20  ,eur_g14
15:34:18  21  ,eur_g15
15:34:18  22  ,eur_g16
15:34:18  23  ,eur_g17
15:34:18  24  ,eur_g18
15:34:18  25  ,eur_g19
15:34:18  26  ,eur_g20
15:34:18  27  ,eur_g21
15:34:18  28  ,eur_g22
15:34:18  29  ,eur_g23
15:34:18  30  ,eur_g24
15:34:18  31  ,eur_g25
15:34:18  32  ,eur_g26
15:34:18  33  ,eur_g27
15:34:18  34  ,eur_g28
15:34:18  35  ,eur_g29
15:34:18  36  ,eur_g30
15:34:18  37  ,eur_g31
15:34:18  38  ,eur_g32
15:34:18  39  ,eur_g33
15:34:18  40  ,eur_g34
15:34:18  41  ,eur_g35
15:34:18  42  ,eur_g36
15:34:18  43  ,eur_g37
15:34:18  44  ,eur_g38
15:34:18  45  ,eur_g39
15:34:18  46  ,eur_g40
15:34:18  47  ,eur_g41
15:34:18  48  ,aud_g00
15:34:18  49  ,aud_g01
15:34:18  50  ,aud_g02
15:34:18  51  ,aud_g03
15:34:18  52  ,aud_g04
15:34:18  53  ,aud_g05
15:34:18  54  ,aud_g06
15:34:18  55  ,aud_g07
15:34:18  56  ,aud_g08
15:34:18  57  ,aud_g09
15:34:18  58  ,aud_g10
15:34:18  59  ,aud_g11
15:34:18  60  ,aud_g12
15:34:18  61  ,aud_g13
15:34:18  62  ,aud_g14
15:34:18  63  ,aud_g15
15:34:18  64  ,aud_g16
15:34:18  65  ,aud_g17
15:34:18  66  ,aud_g18
15:34:18  67  ,aud_g19
15:34:18  68  ,aud_g20
15:34:18  69  ,aud_g21
15:34:18  70  ,aud_g22
15:34:18  71  ,aud_g23
15:34:18  72  ,aud_g24
15:34:18  73  ,aud_g25
15:34:18  74  ,aud_g26
15:34:18  75  ,aud_g27
15:34:18  76  ,aud_g28
15:34:18  77  ,aud_g29
15:34:18  78  ,aud_g30
15:34:18  79  ,aud_g31
15:34:18  80  ,aud_g32
15:34:18  81  ,aud_g33
15:34:18  82  ,aud_g34
15:34:18  83  ,aud_g35
15:34:18  84  ,aud_g36
15:34:18  85  ,aud_g37
15:34:18  86  ,aud_g38
15:34:18  87  ,aud_g39
15:34:18  88  ,aud_g40
15:34:18  89  ,aud_g41
15:34:18  90  ,gbp_g00
15:34:18  91  ,gbp_g01
15:34:18  92  ,gbp_g02
15:34:18  93  ,gbp_g03
15:34:18  94  ,gbp_g04
15:34:18  95  ,gbp_g05
15:34:18  96  ,gbp_g06
15:34:18  97  ,gbp_g07
15:34:18  98  ,gbp_g08
15:34:18  99  ,gbp_g09
15:34:18 100  ,gbp_g10
15:34:18 101  ,gbp_g11
15:34:18 102  ,gbp_g12
15:34:18 103  ,gbp_g13
15:34:18 104  ,gbp_g14
15:34:18 105  ,gbp_g15
15:34:18 106  ,gbp_g16
15:34:18 107  ,gbp_g17
15:34:18 108  ,gbp_g18
15:34:18 109  ,gbp_g19
15:34:18 110  ,gbp_g20
15:34:18 111  ,gbp_g21
15:34:18 112  ,gbp_g22
15:34:18 113  ,gbp_g23
15:34:18 114  ,gbp_g24
15:34:18 115  ,gbp_g25
15:34:18 116  ,gbp_g26
15:34:18 117  ,gbp_g27
15:34:18 118  ,gbp_g28
15:34:18 119  ,gbp_g29
15:34:18 120  ,gbp_g30
15:34:18 121  ,gbp_g31
15:34:18 122  ,gbp_g32
15:34:18 123  ,gbp_g33
15:34:18 124  ,gbp_g34
15:34:18 125  ,gbp_g35
15:34:18 126  ,gbp_g36
15:34:18 127  ,gbp_g37
15:34:18 128  ,gbp_g38
15:34:18 129  ,gbp_g39
15:34:18 130  ,gbp_g40
15:34:18 131  ,gbp_g41
15:34:18 132  ,jpy_g00
15:34:18 133  ,jpy_g01
15:34:18 134  ,jpy_g02
15:34:18 135  ,jpy_g03
15:34:18 136  ,jpy_g04
15:34:18 137  ,jpy_g05
15:34:18 138  ,jpy_g06
15:34:18 139  ,jpy_g07
15:34:18 140  ,jpy_g08
15:34:18 141  ,jpy_g09
15:34:18 142  ,jpy_g10
15:34:18 143  ,jpy_g11
15:34:18 144  ,jpy_g12
15:34:18 145  ,jpy_g13
15:34:18 146  ,jpy_g14
15:34:18 147  ,jpy_g15
15:34:18 148  ,jpy_g16
15:34:18 149  ,jpy_g17
15:34:18 150  ,jpy_g18
15:34:18 151  ,jpy_g19
15:34:18 152  ,jpy_g20
15:34:18 153  ,jpy_g21
15:34:18 154  ,jpy_g22
15:34:18 155  ,jpy_g23
15:34:18 156  ,jpy_g24
15:34:18 157  ,jpy_g25
15:34:18 158  ,jpy_g26
15:34:18 159  ,jpy_g27
15:34:18 160  ,jpy_g28
15:34:18 161  ,jpy_g29
15:34:18 162  ,jpy_g30
15:34:18 163  ,jpy_g31
15:34:18 164  ,jpy_g32
15:34:18 165  ,jpy_g33
15:34:18 166  ,jpy_g34
15:34:18 167  ,jpy_g35
15:34:18 168  ,jpy_g36
15:34:18 169  ,jpy_g37
15:34:18 170  ,jpy_g38
15:34:18 171  ,jpy_g39
15:34:18 172  ,jpy_g40
15:34:18 173  ,jpy_g41
15:34:18 174  ,cad_g00
15:34:18 175  ,cad_g01
15:34:18 176  ,cad_g02
15:34:18 177  ,cad_g03
15:34:18 178  ,cad_g04
15:34:18 179  ,cad_g05
15:34:18 180  ,cad_g06
15:34:18 181  ,cad_g07
15:34:18 182  ,cad_g08
15:34:18 183  ,cad_g09
15:34:18 184  ,cad_g10
15:34:18 185  ,cad_g11
15:34:18 186  ,cad_g12
15:34:18 187  ,cad_g13
15:34:18 188  ,cad_g14
15:34:18 189  ,cad_g15
15:34:18 190  ,cad_g16
15:34:18 191  ,cad_g17
15:34:18 192  ,cad_g18
15:34:18 193  ,cad_g19
15:34:18 194  ,cad_g20
15:34:18 195  ,cad_g21
15:34:18 196  ,cad_g22
15:34:18 197  ,cad_g23
15:34:18 198  ,cad_g24
15:34:18 199  ,cad_g25
15:34:18 200  ,cad_g26
15:34:18 201  ,cad_g27
15:34:18 202  ,cad_g28
15:34:18 203  ,cad_g29
15:34:18 204  ,cad_g30
15:34:18 205  ,cad_g31
15:34:18 206  ,cad_g32
15:34:18 207  ,cad_g33
15:34:18 208  ,cad_g34
15:34:18 209  ,cad_g35
15:34:18 210  ,cad_g36
15:34:18 211  ,cad_g37
15:34:18 212  ,cad_g38
15:34:18 213  ,cad_g39
15:34:18 214  ,cad_g40
15:34:18 215  ,cad_g41
15:34:18 216  ,chf_g00
15:34:18 217  ,chf_g01
15:34:18 218  ,chf_g02
15:34:18 219  ,chf_g03
15:34:18 220  ,chf_g04
15:34:18 221  ,chf_g05
15:34:18 222  ,chf_g06
15:34:18 223  ,chf_g07
15:34:18 224  ,chf_g08
15:34:18 225  ,chf_g09
15:34:18 226  ,chf_g10
15:34:18 227  ,chf_g11
15:34:18 228  ,chf_g12
15:34:18 229  ,chf_g13
15:34:18 230  ,chf_g14
15:34:18 231  ,chf_g15
15:34:18 232  ,chf_g16
15:34:18 233  ,chf_g17
15:34:18 234  ,chf_g18
15:34:18 235  ,chf_g19
15:34:18 236  ,chf_g20
15:34:18 237  ,chf_g21
15:34:18 238  ,chf_g22
15:34:18 239  ,chf_g23
15:34:18 240  ,chf_g24
15:34:18 241  ,chf_g25
15:34:18 242  ,chf_g26
15:34:18 243  ,chf_g27
15:34:18 244  ,chf_g28
15:34:18 245  ,chf_g29
15:34:18 246  ,chf_g30
15:34:18 247  ,chf_g31
15:34:18 248  ,chf_g32
15:34:18 249  ,chf_g33
15:34:18 250  ,chf_g34
15:34:18 251  ,chf_g35
15:34:18 252  ,chf_g36
15:34:18 253  ,chf_g37
15:34:18 254  ,chf_g38
15:34:18 255  ,chf_g39
15:34:18 256  ,chf_g40
15:34:18 257  ,chf_g41
15:34:18 258  FROM aud_ms6 m
15:34:18 259  WHERE gatt IN('nup','up')
15:34:18 260  AND 1+m.ydate < '&1'||' '||'&2'
15:34:18 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'15:10:00'

View created.

Elapsed: 00:00:00.12
15:34:18 SQL> 
15:34:18 SQL> -- rpt
15:34:18 SQL> 
15:34:18 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
15:34:18   2  
15:34:18 SQL> SELECT MAX(prdate) FROM bme
15:34:18   2  
15:34:18 SQL> -- Now build model from bme and score sme
15:34:18 SQL> @score1.sql
15:34:18 SQL> -- score1.sql
15:34:18 SQL> 
15:34:18 SQL> -- Does the 1st SVM score
15:34:18 SQL> 
15:34:18 SQL> -- Fill up svmc_apply_prep
15:34:18 SQL> @score.sql
15:34:18 SQL> --
15:34:18 SQL> -- score.sql
15:34:18 SQL> --
15:34:18 SQL> 
15:34:18 SQL> -- usage: score.sql
15:34:18 SQL> 
15:34:18 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:34:18 SQL> 
15:34:18 SQL> DEFINE target	= 'gatt'
15:34:18 SQL> DEFINE model_name = 'forex15'
15:34:18 SQL> DEFINE bldtable	= 'bme'
15:34:18 SQL> DEFINE scoretable = 'sme'
15:34:18 SQL> DEFINE case_id	= 'prdate'
15:34:18 SQL> 
15:34:18 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:34:18 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:34:18 SQL> 
15:34:18 SQL> -- Builds an SVM model using pl/sql.
15:34:18 SQL> 
15:34:18 SQL> -----------------------------------------------------------------------
15:34:18 SQL> --			    BUILD THE MODEL
15:34:18 SQL> -----------------------------------------------------------------------
15:34:18 SQL> 
15:34:18 SQL> -- Cleanup old build data preparation objects for repeat runs
15:34:18 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
15:34:18 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:34:18 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
15:34:18 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
15:34:18 SQL> 
15:34:18 SQL> 
15:34:18 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:34:18 SQL> --
15:34:18 SQL> -- DROP	TABLE svmc_settings ;
15:34:18 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:34:18 SQL> -- DELETE svmc_settings;
15:34:18 SQL> 
15:34:18 SQL> -- The default classification algorithm is Naive Bayes. So override
15:34:18 SQL> -- this choice to SVM using a settings table.
15:34:18 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:34:18 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:34:18 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:34:18 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:34:18 SQL> -- models.
15:34:18 SQL> --
15:34:18 SQL> 
15:34:18 SQL> -- Do this once and then comment it out.
15:34:18 SQL> -- That makes script go faster.
15:34:18 SQL> -- BEGIN
15:34:18 SQL> -- -- Populate settings table
15:34:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:34:18 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:34:18 SQL> --
15:34:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:34:18 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:34:18 SQL> --
15:34:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:34:18 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:34:18 SQL> --   COMMIT;
15:34:18 SQL> -- END;
15:34:18 SQL> -- /
15:34:18 SQL> 
15:34:18 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:34:18 SQL> 
15:34:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:34:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:34:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:34:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:34:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:34:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:34:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:34:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:34:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:34:18 SQL> 
15:34:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:34:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:34:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:34:18 SQL> 
15:34:18 SQL> --------------------------------
15:34:18 SQL> -- PREPARE BUILD (TRAINING) DATA
15:34:18 SQL> --
15:34:18 SQL> 
15:34:18 SQL> -- 1. Missing Value treatment for all Predictors and
15:34:18 SQL> -- 2. Outlier Treatment and
15:34:18 SQL> -- 3. Normalization are performed below.
15:34:18 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:34:18 SQL> --    normalized here.
15:34:18 SQL> 
15:34:18 SQL> BEGIN
15:34:18   2  	-- Perform missing value treatment for all predictors
15:34:18   3  	-- create miss tables
15:34:18   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:34:18   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:34:18   6  
15:34:18   7  	-- populate miss tables
15:34:18   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:34:18   9  	  miss_table_name => 'svmc_miss_num',
15:34:18  10  	  data_table_name => '&bldtable',
15:34:18  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:34:18  12  
15:34:18  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:34:18  14  	  miss_table_name => 'svmc_miss_cat',
15:34:18  15  	  data_table_name => '&bldtable',
15:34:18  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:34:18  17  
15:34:18  18  	-- xform input data to replace missing values
15:34:18  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:34:18  20  	  miss_table_name => 'svmc_miss_num',
15:34:18  21  	  data_table_name => '&bldtable',
15:34:18  22  	  xform_view_name => 'xformed_build_miss_num');
15:34:18  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:34:18  24  	  miss_table_name => 'svmc_miss_cat',
15:34:18  25  	  data_table_name => '&bldtable',
15:34:18  26  	  xform_view_name => 'xformed_build_miss_cat');
15:34:18  27  
15:34:18  28  	-- Perform outlier treatment.
15:34:18  29  	-- create clip table
15:34:18  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:34:18  31  
15:34:18  32  	-- populate clip table
15:34:18  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:34:18  34  	  clip_table_name => 'svmc_clip',
15:34:18  35  	  data_table_name => '&bldtable',
15:34:18  36  	  tail_frac	  => 0.025,
15:34:18  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:34:18  38  
15:34:18  39  	-- xform input data to winsorized data
15:34:18  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:34:18  41  	  clip_table_name => 'svmc_clip',
15:34:18  42  	  data_table_name => '&bldtable',
15:34:18  43  	  xform_view_name => 'svmc_winsor');
15:34:18  44  
15:34:18  45  	-- create normalization table
15:34:18  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:34:18  47  
15:34:18  48  	-- populate normalization table based on winsorized data
15:34:18  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:34:18  50  	  norm_table_name => 'svmc_norm',
15:34:18  51  	  data_table_name => 'svmc_winsor',
15:34:18  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:34:18  53  
15:34:18  54  	-- normalize the original data
15:34:18  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:34:18  56  	  norm_table_name => 'svmc_norm',
15:34:18  57  	  data_table_name => '&bldtable',
15:34:18  58  	  xform_view_name => 'svmc_build_prep');
15:34:18  59  END;
15:34:18  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.18
15:34:37 SQL> 
15:34:37 SQL> ---------------------
15:34:37 SQL> -- CREATE A NEW MODEL
15:34:37 SQL> --
15:34:37 SQL> -- Cleanup old model with the same name for repeat runs
15:34:37 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:34:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:34:37   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.58
15:34:38 SQL> 
15:34:38 SQL> -- Build a new SVM Model
15:34:38 SQL> BEGIN
15:34:38   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:34:38   3  	  model_name	      => '&model_name',
15:34:38   4  	  mining_function     => dbms_data_mining.classification,
15:34:38   5  	  data_table_name     => 'svmc_build_prep',
15:34:38   6  	  case_id_column_name => '&case_id',
15:34:38   7  	  target_column_name  => '&target',
15:34:38   8  	  settings_table_name => 'svmc_settings');
15:34:38   9  END;
15:34:38  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:30.71
15:35:09 SQL> 
15:35:09 SQL> -----------------------------------------------------------------------
15:35:09 SQL> --			       APPLY/score THE MODEL
15:35:09 SQL> -----------------------------------------------------------------------
15:35:09 SQL> 
15:35:09 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:35:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:35:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:35:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:35:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:35:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:35:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:35:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:35:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:35:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:35:09 SQL> -----------------------
15:35:09 SQL> -- PREPARE SCORING DATA
15:35:09 SQL> --
15:35:09 SQL> -- If the data for model creation has been prepared, then the data
15:35:09 SQL> -- to be scored using the model must be prepared in the same manner
15:35:09 SQL> -- in order to obtain meaningful results.
15:35:09 SQL> --
15:35:09 SQL> -- 1. Missing Value treatment for all Predictors and
15:35:09 SQL> -- 2. Normalization
15:35:09 SQL> -- No outlier treatment will be performed during test and apply. The
15:35:09 SQL> -- normalization step is sufficient, since the normalization parameters
15:35:09 SQL> -- already capture the effects of outlier treatment done with build data.
15:35:09 SQL> --
15:35:09 SQL> BEGIN
15:35:09   2  	-- Xform Test data to replace missing values
15:35:09   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:35:09   4  	  miss_table_name => 'svmc_miss_num',
15:35:09   5  	  data_table_name => '&scoretable',
15:35:09   6  	  xform_view_name => 'xformed_apply_miss_num');
15:35:09   7  
15:35:09   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:35:09   9  	  miss_table_name => 'svmc_miss_cat',
15:35:09  10  	  data_table_name => '&scoretable',
15:35:09  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:35:09  12  
15:35:09  13  	-- Normalize the data to be scored
15:35:09  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:35:09  15  	  norm_table_name => 'svmc_norm',
15:35:09  16  	  data_table_name => '&scoretable',
15:35:09  17  	  xform_view_name => 'svmc_apply_prep');
15:35:09  18  END;
15:35:09  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.35
15:35:10 SQL> 
15:35:10 SQL> -- Use same model_name used in score.sql
15:35:10 SQL> DEFINE model_name = 'forex15'
15:35:10 SQL> 
15:35:10 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
15:35:10 SQL> 
15:35:10 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
15:35:10 SQL> 
15:35:10 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
15:35:10   2  SELECT
15:35:10   3  prdate
15:35:10   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:35:10   5  ,sysdate
15:35:10   6  ,SUBSTR(prdate,1,3)pair
15:35:10   7  ,SUBSTR(prdate,4,19)ydate
15:35:10   8  FROM svmc_apply_prep
15:35:10   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:35:10 SQL> @aud_score1day.sql  2011-01-07 15:15:00
15:35:10 SQL> --
15:35:10 SQL> -- aud_score1day.sql
15:35:10 SQL> --
15:35:10 SQL> 
15:35:10 SQL> CREATE OR REPLACE VIEW sme AS
15:35:10   2  SELECT
15:35:10   3  'aud'||m.ydate prdate
15:35:10   4  ,NULL gatt
15:35:10   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:35:10   6  ,eur_g00
15:35:10   7  ,eur_g01
15:35:10   8  ,eur_g02
15:35:10   9  ,eur_g03
15:35:10  10  ,eur_g04
15:35:10  11  ,eur_g05
15:35:10  12  ,eur_g06
15:35:10  13  ,eur_g07
15:35:10  14  ,eur_g08
15:35:10  15  ,eur_g09
15:35:10  16  ,eur_g10
15:35:10  17  ,eur_g11
15:35:10  18  ,eur_g12
15:35:10  19  ,eur_g13
15:35:10  20  ,eur_g14
15:35:10  21  ,eur_g15
15:35:10  22  ,eur_g16
15:35:10  23  ,eur_g17
15:35:10  24  ,eur_g18
15:35:10  25  ,eur_g19
15:35:10  26  ,eur_g20
15:35:10  27  ,eur_g21
15:35:10  28  ,eur_g22
15:35:10  29  ,eur_g23
15:35:10  30  ,eur_g24
15:35:10  31  ,eur_g25
15:35:10  32  ,eur_g26
15:35:10  33  ,eur_g27
15:35:10  34  ,eur_g28
15:35:10  35  ,eur_g29
15:35:10  36  ,eur_g30
15:35:10  37  ,eur_g31
15:35:10  38  ,eur_g32
15:35:10  39  ,eur_g33
15:35:10  40  ,eur_g34
15:35:10  41  ,eur_g35
15:35:10  42  ,eur_g36
15:35:10  43  ,eur_g37
15:35:10  44  ,eur_g38
15:35:10  45  ,eur_g39
15:35:10  46  ,eur_g40
15:35:10  47  ,eur_g41
15:35:10  48  ,aud_g00
15:35:10  49  ,aud_g01
15:35:10  50  ,aud_g02
15:35:10  51  ,aud_g03
15:35:10  52  ,aud_g04
15:35:10  53  ,aud_g05
15:35:10  54  ,aud_g06
15:35:10  55  ,aud_g07
15:35:10  56  ,aud_g08
15:35:10  57  ,aud_g09
15:35:10  58  ,aud_g10
15:35:10  59  ,aud_g11
15:35:10  60  ,aud_g12
15:35:10  61  ,aud_g13
15:35:10  62  ,aud_g14
15:35:10  63  ,aud_g15
15:35:10  64  ,aud_g16
15:35:10  65  ,aud_g17
15:35:10  66  ,aud_g18
15:35:10  67  ,aud_g19
15:35:10  68  ,aud_g20
15:35:10  69  ,aud_g21
15:35:10  70  ,aud_g22
15:35:10  71  ,aud_g23
15:35:10  72  ,aud_g24
15:35:10  73  ,aud_g25
15:35:10  74  ,aud_g26
15:35:10  75  ,aud_g27
15:35:10  76  ,aud_g28
15:35:10  77  ,aud_g29
15:35:10  78  ,aud_g30
15:35:10  79  ,aud_g31
15:35:10  80  ,aud_g32
15:35:10  81  ,aud_g33
15:35:10  82  ,aud_g34
15:35:10  83  ,aud_g35
15:35:10  84  ,aud_g36
15:35:10  85  ,aud_g37
15:35:10  86  ,aud_g38
15:35:10  87  ,aud_g39
15:35:10  88  ,aud_g40
15:35:10  89  ,aud_g41
15:35:10  90  ,gbp_g00
15:35:10  91  ,gbp_g01
15:35:10  92  ,gbp_g02
15:35:10  93  ,gbp_g03
15:35:10  94  ,gbp_g04
15:35:10  95  ,gbp_g05
15:35:10  96  ,gbp_g06
15:35:10  97  ,gbp_g07
15:35:10  98  ,gbp_g08
15:35:10  99  ,gbp_g09
15:35:10 100  ,gbp_g10
15:35:10 101  ,gbp_g11
15:35:10 102  ,gbp_g12
15:35:10 103  ,gbp_g13
15:35:10 104  ,gbp_g14
15:35:10 105  ,gbp_g15
15:35:10 106  ,gbp_g16
15:35:10 107  ,gbp_g17
15:35:10 108  ,gbp_g18
15:35:10 109  ,gbp_g19
15:35:10 110  ,gbp_g20
15:35:10 111  ,gbp_g21
15:35:10 112  ,gbp_g22
15:35:10 113  ,gbp_g23
15:35:10 114  ,gbp_g24
15:35:10 115  ,gbp_g25
15:35:10 116  ,gbp_g26
15:35:10 117  ,gbp_g27
15:35:10 118  ,gbp_g28
15:35:10 119  ,gbp_g29
15:35:10 120  ,gbp_g30
15:35:10 121  ,gbp_g31
15:35:10 122  ,gbp_g32
15:35:10 123  ,gbp_g33
15:35:10 124  ,gbp_g34
15:35:10 125  ,gbp_g35
15:35:10 126  ,gbp_g36
15:35:10 127  ,gbp_g37
15:35:10 128  ,gbp_g38
15:35:10 129  ,gbp_g39
15:35:10 130  ,gbp_g40
15:35:10 131  ,gbp_g41
15:35:10 132  ,jpy_g00
15:35:10 133  ,jpy_g01
15:35:10 134  ,jpy_g02
15:35:10 135  ,jpy_g03
15:35:10 136  ,jpy_g04
15:35:10 137  ,jpy_g05
15:35:10 138  ,jpy_g06
15:35:10 139  ,jpy_g07
15:35:10 140  ,jpy_g08
15:35:10 141  ,jpy_g09
15:35:10 142  ,jpy_g10
15:35:10 143  ,jpy_g11
15:35:10 144  ,jpy_g12
15:35:10 145  ,jpy_g13
15:35:10 146  ,jpy_g14
15:35:10 147  ,jpy_g15
15:35:10 148  ,jpy_g16
15:35:10 149  ,jpy_g17
15:35:10 150  ,jpy_g18
15:35:10 151  ,jpy_g19
15:35:10 152  ,jpy_g20
15:35:10 153  ,jpy_g21
15:35:10 154  ,jpy_g22
15:35:10 155  ,jpy_g23
15:35:10 156  ,jpy_g24
15:35:10 157  ,jpy_g25
15:35:10 158  ,jpy_g26
15:35:10 159  ,jpy_g27
15:35:10 160  ,jpy_g28
15:35:10 161  ,jpy_g29
15:35:10 162  ,jpy_g30
15:35:10 163  ,jpy_g31
15:35:10 164  ,jpy_g32
15:35:10 165  ,jpy_g33
15:35:10 166  ,jpy_g34
15:35:10 167  ,jpy_g35
15:35:10 168  ,jpy_g36
15:35:10 169  ,jpy_g37
15:35:10 170  ,jpy_g38
15:35:10 171  ,jpy_g39
15:35:10 172  ,jpy_g40
15:35:10 173  ,jpy_g41
15:35:10 174  ,cad_g00
15:35:10 175  ,cad_g01
15:35:10 176  ,cad_g02
15:35:10 177  ,cad_g03
15:35:10 178  ,cad_g04
15:35:10 179  ,cad_g05
15:35:10 180  ,cad_g06
15:35:10 181  ,cad_g07
15:35:10 182  ,cad_g08
15:35:10 183  ,cad_g09
15:35:10 184  ,cad_g10
15:35:10 185  ,cad_g11
15:35:10 186  ,cad_g12
15:35:10 187  ,cad_g13
15:35:10 188  ,cad_g14
15:35:10 189  ,cad_g15
15:35:10 190  ,cad_g16
15:35:10 191  ,cad_g17
15:35:10 192  ,cad_g18
15:35:10 193  ,cad_g19
15:35:10 194  ,cad_g20
15:35:10 195  ,cad_g21
15:35:10 196  ,cad_g22
15:35:10 197  ,cad_g23
15:35:10 198  ,cad_g24
15:35:10 199  ,cad_g25
15:35:10 200  ,cad_g26
15:35:10 201  ,cad_g27
15:35:10 202  ,cad_g28
15:35:10 203  ,cad_g29
15:35:10 204  ,cad_g30
15:35:10 205  ,cad_g31
15:35:10 206  ,cad_g32
15:35:10 207  ,cad_g33
15:35:10 208  ,cad_g34
15:35:10 209  ,cad_g35
15:35:10 210  ,cad_g36
15:35:10 211  ,cad_g37
15:35:10 212  ,cad_g38
15:35:10 213  ,cad_g39
15:35:10 214  ,cad_g40
15:35:10 215  ,cad_g41
15:35:10 216  ,chf_g00
15:35:10 217  ,chf_g01
15:35:10 218  ,chf_g02
15:35:10 219  ,chf_g03
15:35:10 220  ,chf_g04
15:35:10 221  ,chf_g05
15:35:10 222  ,chf_g06
15:35:10 223  ,chf_g07
15:35:10 224  ,chf_g08
15:35:10 225  ,chf_g09
15:35:10 226  ,chf_g10
15:35:10 227  ,chf_g11
15:35:10 228  ,chf_g12
15:35:10 229  ,chf_g13
15:35:10 230  ,chf_g14
15:35:10 231  ,chf_g15
15:35:10 232  ,chf_g16
15:35:10 233  ,chf_g17
15:35:10 234  ,chf_g18
15:35:10 235  ,chf_g19
15:35:10 236  ,chf_g20
15:35:10 237  ,chf_g21
15:35:10 238  ,chf_g22
15:35:10 239  ,chf_g23
15:35:10 240  ,chf_g24
15:35:10 241  ,chf_g25
15:35:10 242  ,chf_g26
15:35:10 243  ,chf_g27
15:35:10 244  ,chf_g28
15:35:10 245  ,chf_g29
15:35:10 246  ,chf_g30
15:35:10 247  ,chf_g31
15:35:10 248  ,chf_g32
15:35:10 249  ,chf_g33
15:35:10 250  ,chf_g34
15:35:10 251  ,chf_g35
15:35:10 252  ,chf_g36
15:35:10 253  ,chf_g37
15:35:10 254  ,chf_g38
15:35:10 255  ,chf_g39
15:35:10 256  ,chf_g40
15:35:10 257  ,chf_g41
15:35:10 258  FROM aud_ms6 m
15:35:10 259  WHERE m.ydate = '&1'||' '||'&2'
15:35:10 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'15:15:00'

View created.

Elapsed: 00:00:00.12
15:35:11 SQL> 
15:35:11 SQL> -- rpt
15:35:11 SQL> -- We should see just 1 row:
15:35:11 SQL> 
15:35:11 SQL> SELECT COUNT(prdate) FROM sme
15:35:11   2  
15:35:11 SQL> -- Build the model:
15:35:11 SQL> CREATE OR REPLACE VIEW bme AS
15:35:11   2  SELECT
15:35:11   3  'aud'||m.ydate prdate
15:35:11   4  ,gatt
15:35:11   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:35:11   6  ,eur_g00
15:35:11   7  ,eur_g01
15:35:11   8  ,eur_g02
15:35:11   9  ,eur_g03
15:35:11  10  ,eur_g04
15:35:11  11  ,eur_g05
15:35:11  12  ,eur_g06
15:35:11  13  ,eur_g07
15:35:11  14  ,eur_g08
15:35:11  15  ,eur_g09
15:35:11  16  ,eur_g10
15:35:11  17  ,eur_g11
15:35:11  18  ,eur_g12
15:35:11  19  ,eur_g13
15:35:11  20  ,eur_g14
15:35:11  21  ,eur_g15
15:35:11  22  ,eur_g16
15:35:11  23  ,eur_g17
15:35:11  24  ,eur_g18
15:35:11  25  ,eur_g19
15:35:11  26  ,eur_g20
15:35:11  27  ,eur_g21
15:35:11  28  ,eur_g22
15:35:11  29  ,eur_g23
15:35:11  30  ,eur_g24
15:35:11  31  ,eur_g25
15:35:11  32  ,eur_g26
15:35:11  33  ,eur_g27
15:35:11  34  ,eur_g28
15:35:11  35  ,eur_g29
15:35:11  36  ,eur_g30
15:35:11  37  ,eur_g31
15:35:11  38  ,eur_g32
15:35:11  39  ,eur_g33
15:35:11  40  ,eur_g34
15:35:11  41  ,eur_g35
15:35:11  42  ,eur_g36
15:35:11  43  ,eur_g37
15:35:11  44  ,eur_g38
15:35:11  45  ,eur_g39
15:35:11  46  ,eur_g40
15:35:11  47  ,eur_g41
15:35:11  48  ,aud_g00
15:35:11  49  ,aud_g01
15:35:11  50  ,aud_g02
15:35:11  51  ,aud_g03
15:35:11  52  ,aud_g04
15:35:11  53  ,aud_g05
15:35:11  54  ,aud_g06
15:35:11  55  ,aud_g07
15:35:11  56  ,aud_g08
15:35:11  57  ,aud_g09
15:35:11  58  ,aud_g10
15:35:11  59  ,aud_g11
15:35:11  60  ,aud_g12
15:35:11  61  ,aud_g13
15:35:11  62  ,aud_g14
15:35:11  63  ,aud_g15
15:35:11  64  ,aud_g16
15:35:11  65  ,aud_g17
15:35:11  66  ,aud_g18
15:35:11  67  ,aud_g19
15:35:11  68  ,aud_g20
15:35:11  69  ,aud_g21
15:35:11  70  ,aud_g22
15:35:11  71  ,aud_g23
15:35:11  72  ,aud_g24
15:35:11  73  ,aud_g25
15:35:11  74  ,aud_g26
15:35:11  75  ,aud_g27
15:35:11  76  ,aud_g28
15:35:11  77  ,aud_g29
15:35:11  78  ,aud_g30
15:35:11  79  ,aud_g31
15:35:11  80  ,aud_g32
15:35:11  81  ,aud_g33
15:35:11  82  ,aud_g34
15:35:11  83  ,aud_g35
15:35:11  84  ,aud_g36
15:35:11  85  ,aud_g37
15:35:11  86  ,aud_g38
15:35:11  87  ,aud_g39
15:35:11  88  ,aud_g40
15:35:11  89  ,aud_g41
15:35:11  90  ,gbp_g00
15:35:11  91  ,gbp_g01
15:35:11  92  ,gbp_g02
15:35:11  93  ,gbp_g03
15:35:11  94  ,gbp_g04
15:35:11  95  ,gbp_g05
15:35:11  96  ,gbp_g06
15:35:11  97  ,gbp_g07
15:35:11  98  ,gbp_g08
15:35:11  99  ,gbp_g09
15:35:11 100  ,gbp_g10
15:35:11 101  ,gbp_g11
15:35:11 102  ,gbp_g12
15:35:11 103  ,gbp_g13
15:35:11 104  ,gbp_g14
15:35:11 105  ,gbp_g15
15:35:11 106  ,gbp_g16
15:35:11 107  ,gbp_g17
15:35:11 108  ,gbp_g18
15:35:11 109  ,gbp_g19
15:35:11 110  ,gbp_g20
15:35:11 111  ,gbp_g21
15:35:11 112  ,gbp_g22
15:35:11 113  ,gbp_g23
15:35:11 114  ,gbp_g24
15:35:11 115  ,gbp_g25
15:35:11 116  ,gbp_g26
15:35:11 117  ,gbp_g27
15:35:11 118  ,gbp_g28
15:35:11 119  ,gbp_g29
15:35:11 120  ,gbp_g30
15:35:11 121  ,gbp_g31
15:35:11 122  ,gbp_g32
15:35:11 123  ,gbp_g33
15:35:11 124  ,gbp_g34
15:35:11 125  ,gbp_g35
15:35:11 126  ,gbp_g36
15:35:11 127  ,gbp_g37
15:35:11 128  ,gbp_g38
15:35:11 129  ,gbp_g39
15:35:11 130  ,gbp_g40
15:35:11 131  ,gbp_g41
15:35:11 132  ,jpy_g00
15:35:11 133  ,jpy_g01
15:35:11 134  ,jpy_g02
15:35:11 135  ,jpy_g03
15:35:11 136  ,jpy_g04
15:35:11 137  ,jpy_g05
15:35:11 138  ,jpy_g06
15:35:11 139  ,jpy_g07
15:35:11 140  ,jpy_g08
15:35:11 141  ,jpy_g09
15:35:11 142  ,jpy_g10
15:35:11 143  ,jpy_g11
15:35:11 144  ,jpy_g12
15:35:11 145  ,jpy_g13
15:35:11 146  ,jpy_g14
15:35:11 147  ,jpy_g15
15:35:11 148  ,jpy_g16
15:35:11 149  ,jpy_g17
15:35:11 150  ,jpy_g18
15:35:11 151  ,jpy_g19
15:35:11 152  ,jpy_g20
15:35:11 153  ,jpy_g21
15:35:11 154  ,jpy_g22
15:35:11 155  ,jpy_g23
15:35:11 156  ,jpy_g24
15:35:11 157  ,jpy_g25
15:35:11 158  ,jpy_g26
15:35:11 159  ,jpy_g27
15:35:11 160  ,jpy_g28
15:35:11 161  ,jpy_g29
15:35:11 162  ,jpy_g30
15:35:11 163  ,jpy_g31
15:35:11 164  ,jpy_g32
15:35:11 165  ,jpy_g33
15:35:11 166  ,jpy_g34
15:35:11 167  ,jpy_g35
15:35:11 168  ,jpy_g36
15:35:11 169  ,jpy_g37
15:35:11 170  ,jpy_g38
15:35:11 171  ,jpy_g39
15:35:11 172  ,jpy_g40
15:35:11 173  ,jpy_g41
15:35:11 174  ,cad_g00
15:35:11 175  ,cad_g01
15:35:11 176  ,cad_g02
15:35:11 177  ,cad_g03
15:35:11 178  ,cad_g04
15:35:11 179  ,cad_g05
15:35:11 180  ,cad_g06
15:35:11 181  ,cad_g07
15:35:11 182  ,cad_g08
15:35:11 183  ,cad_g09
15:35:11 184  ,cad_g10
15:35:11 185  ,cad_g11
15:35:11 186  ,cad_g12
15:35:11 187  ,cad_g13
15:35:11 188  ,cad_g14
15:35:11 189  ,cad_g15
15:35:11 190  ,cad_g16
15:35:11 191  ,cad_g17
15:35:11 192  ,cad_g18
15:35:11 193  ,cad_g19
15:35:11 194  ,cad_g20
15:35:11 195  ,cad_g21
15:35:11 196  ,cad_g22
15:35:11 197  ,cad_g23
15:35:11 198  ,cad_g24
15:35:11 199  ,cad_g25
15:35:11 200  ,cad_g26
15:35:11 201  ,cad_g27
15:35:11 202  ,cad_g28
15:35:11 203  ,cad_g29
15:35:11 204  ,cad_g30
15:35:11 205  ,cad_g31
15:35:11 206  ,cad_g32
15:35:11 207  ,cad_g33
15:35:11 208  ,cad_g34
15:35:11 209  ,cad_g35
15:35:11 210  ,cad_g36
15:35:11 211  ,cad_g37
15:35:11 212  ,cad_g38
15:35:11 213  ,cad_g39
15:35:11 214  ,cad_g40
15:35:11 215  ,cad_g41
15:35:11 216  ,chf_g00
15:35:11 217  ,chf_g01
15:35:11 218  ,chf_g02
15:35:11 219  ,chf_g03
15:35:11 220  ,chf_g04
15:35:11 221  ,chf_g05
15:35:11 222  ,chf_g06
15:35:11 223  ,chf_g07
15:35:11 224  ,chf_g08
15:35:11 225  ,chf_g09
15:35:11 226  ,chf_g10
15:35:11 227  ,chf_g11
15:35:11 228  ,chf_g12
15:35:11 229  ,chf_g13
15:35:11 230  ,chf_g14
15:35:11 231  ,chf_g15
15:35:11 232  ,chf_g16
15:35:11 233  ,chf_g17
15:35:11 234  ,chf_g18
15:35:11 235  ,chf_g19
15:35:11 236  ,chf_g20
15:35:11 237  ,chf_g21
15:35:11 238  ,chf_g22
15:35:11 239  ,chf_g23
15:35:11 240  ,chf_g24
15:35:11 241  ,chf_g25
15:35:11 242  ,chf_g26
15:35:11 243  ,chf_g27
15:35:11 244  ,chf_g28
15:35:11 245  ,chf_g29
15:35:11 246  ,chf_g30
15:35:11 247  ,chf_g31
15:35:11 248  ,chf_g32
15:35:11 249  ,chf_g33
15:35:11 250  ,chf_g34
15:35:11 251  ,chf_g35
15:35:11 252  ,chf_g36
15:35:11 253  ,chf_g37
15:35:11 254  ,chf_g38
15:35:11 255  ,chf_g39
15:35:11 256  ,chf_g40
15:35:11 257  ,chf_g41
15:35:11 258  FROM aud_ms6 m
15:35:11 259  WHERE gatt IN('nup','up')
15:35:11 260  AND 1+m.ydate < '&1'||' '||'&2'
15:35:11 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'15:15:00'

View created.

Elapsed: 00:00:00.12
15:35:11 SQL> 
15:35:11 SQL> -- rpt
15:35:11 SQL> 
15:35:11 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
15:35:11   2  
15:35:11 SQL> SELECT MAX(prdate) FROM bme
15:35:11   2  
15:35:11 SQL> -- Now build model from bme and score sme
15:35:11 SQL> @score1.sql
15:35:11 SQL> -- score1.sql
15:35:11 SQL> 
15:35:11 SQL> -- Does the 1st SVM score
15:35:11 SQL> 
15:35:11 SQL> -- Fill up svmc_apply_prep
15:35:11 SQL> @score.sql
15:35:11 SQL> --
15:35:11 SQL> -- score.sql
15:35:11 SQL> --
15:35:11 SQL> 
15:35:11 SQL> -- usage: score.sql
15:35:11 SQL> 
15:35:11 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:35:11 SQL> 
15:35:11 SQL> DEFINE target	= 'gatt'
15:35:11 SQL> DEFINE model_name = 'forex15'
15:35:11 SQL> DEFINE bldtable	= 'bme'
15:35:11 SQL> DEFINE scoretable = 'sme'
15:35:11 SQL> DEFINE case_id	= 'prdate'
15:35:11 SQL> 
15:35:11 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:35:11 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:35:11 SQL> 
15:35:11 SQL> -- Builds an SVM model using pl/sql.
15:35:11 SQL> 
15:35:11 SQL> -----------------------------------------------------------------------
15:35:11 SQL> --			    BUILD THE MODEL
15:35:11 SQL> -----------------------------------------------------------------------
15:35:11 SQL> 
15:35:11 SQL> -- Cleanup old build data preparation objects for repeat runs
15:35:11 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
15:35:11 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
15:35:11 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
15:35:11 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
15:35:11 SQL> 
15:35:11 SQL> 
15:35:11 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:35:11 SQL> --
15:35:11 SQL> -- DROP	TABLE svmc_settings ;
15:35:11 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:35:11 SQL> -- DELETE svmc_settings;
15:35:11 SQL> 
15:35:11 SQL> -- The default classification algorithm is Naive Bayes. So override
15:35:11 SQL> -- this choice to SVM using a settings table.
15:35:11 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:35:11 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:35:11 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:35:11 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:35:11 SQL> -- models.
15:35:11 SQL> --
15:35:11 SQL> 
15:35:11 SQL> -- Do this once and then comment it out.
15:35:11 SQL> -- That makes script go faster.
15:35:11 SQL> -- BEGIN
15:35:11 SQL> -- -- Populate settings table
15:35:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:35:11 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:35:11 SQL> --
15:35:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:35:11 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:35:11 SQL> --
15:35:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:35:11 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:35:11 SQL> --   COMMIT;
15:35:11 SQL> -- END;
15:35:11 SQL> -- /
15:35:11 SQL> 
15:35:11 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:35:11 SQL> 
15:35:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:35:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:35:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:35:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:35:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:35:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:35:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:35:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:35:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:35:11 SQL> 
15:35:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:35:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:35:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:35:11 SQL> 
15:35:11 SQL> --------------------------------
15:35:11 SQL> -- PREPARE BUILD (TRAINING) DATA
15:35:11 SQL> --
15:35:11 SQL> 
15:35:11 SQL> -- 1. Missing Value treatment for all Predictors and
15:35:11 SQL> -- 2. Outlier Treatment and
15:35:11 SQL> -- 3. Normalization are performed below.
15:35:11 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:35:11 SQL> --    normalized here.
15:35:11 SQL> 
15:35:11 SQL> BEGIN
15:35:11   2  	-- Perform missing value treatment for all predictors
15:35:11   3  	-- create miss tables
15:35:11   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:35:11   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:35:11   6  
15:35:11   7  	-- populate miss tables
15:35:11   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:35:11   9  	  miss_table_name => 'svmc_miss_num',
15:35:11  10  	  data_table_name => '&bldtable',
15:35:11  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:35:11  12  
15:35:11  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:35:11  14  	  miss_table_name => 'svmc_miss_cat',
15:35:11  15  	  data_table_name => '&bldtable',
15:35:11  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:35:11  17  
15:35:11  18  	-- xform input data to replace missing values
15:35:11  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:35:11  20  	  miss_table_name => 'svmc_miss_num',
15:35:11  21  	  data_table_name => '&bldtable',
15:35:11  22  	  xform_view_name => 'xformed_build_miss_num');
15:35:11  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:35:11  24  	  miss_table_name => 'svmc_miss_cat',
15:35:11  25  	  data_table_name => '&bldtable',
15:35:11  26  	  xform_view_name => 'xformed_build_miss_cat');
15:35:11  27  
15:35:11  28  	-- Perform outlier treatment.
15:35:11  29  	-- create clip table
15:35:11  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:35:11  31  
15:35:11  32  	-- populate clip table
15:35:11  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:35:11  34  	  clip_table_name => 'svmc_clip',
15:35:11  35  	  data_table_name => '&bldtable',
15:35:11  36  	  tail_frac	  => 0.025,
15:35:11  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:35:11  38  
15:35:11  39  	-- xform input data to winsorized data
15:35:11  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:35:11  41  	  clip_table_name => 'svmc_clip',
15:35:11  42  	  data_table_name => '&bldtable',
15:35:11  43  	  xform_view_name => 'svmc_winsor');
15:35:11  44  
15:35:11  45  	-- create normalization table
15:35:11  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:35:11  47  
15:35:11  48  	-- populate normalization table based on winsorized data
15:35:11  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:35:11  50  	  norm_table_name => 'svmc_norm',
15:35:11  51  	  data_table_name => 'svmc_winsor',
15:35:11  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:35:11  53  
15:35:11  54  	-- normalize the original data
15:35:11  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:35:11  56  	  norm_table_name => 'svmc_norm',
15:35:11  57  	  data_table_name => '&bldtable',
15:35:11  58  	  xform_view_name => 'svmc_build_prep');
15:35:11  59  END;
15:35:11  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.66
15:35:30 SQL> 
15:35:30 SQL> ---------------------
15:35:30 SQL> -- CREATE A NEW MODEL
15:35:30 SQL> --
15:35:30 SQL> -- Cleanup old model with the same name for repeat runs
15:35:30 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:35:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:35:30   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.12
15:35:31 SQL> 
15:35:31 SQL> -- Build a new SVM Model
15:35:31 SQL> BEGIN
15:35:31   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:35:31   3  	  model_name	      => '&model_name',
15:35:31   4  	  mining_function     => dbms_data_mining.classification,
15:35:31   5  	  data_table_name     => 'svmc_build_prep',
15:35:31   6  	  case_id_column_name => '&case_id',
15:35:31   7  	  target_column_name  => '&target',
15:35:31   8  	  settings_table_name => 'svmc_settings');
15:35:31   9  END;
15:35:31  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.71
15:35:58 SQL> 
15:35:58 SQL> -----------------------------------------------------------------------
15:35:58 SQL> --			       APPLY/score THE MODEL
15:35:58 SQL> -----------------------------------------------------------------------
15:35:58 SQL> 
15:35:58 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:35:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:35:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:35:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:35:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:35:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:35:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:35:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:35:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:35:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:35:59 SQL> -----------------------
15:35:59 SQL> -- PREPARE SCORING DATA
15:35:59 SQL> --
15:35:59 SQL> -- If the data for model creation has been prepared, then the data
15:35:59 SQL> -- to be scored using the model must be prepared in the same manner
15:35:59 SQL> -- in order to obtain meaningful results.
15:35:59 SQL> --
15:35:59 SQL> -- 1. Missing Value treatment for all Predictors and
15:35:59 SQL> -- 2. Normalization
15:35:59 SQL> -- No outlier treatment will be performed during test and apply. The
15:35:59 SQL> -- normalization step is sufficient, since the normalization parameters
15:35:59 SQL> -- already capture the effects of outlier treatment done with build data.
15:35:59 SQL> --
15:35:59 SQL> BEGIN
15:35:59   2  	-- Xform Test data to replace missing values
15:35:59   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:35:59   4  	  miss_table_name => 'svmc_miss_num',
15:35:59   5  	  data_table_name => '&scoretable',
15:35:59   6  	  xform_view_name => 'xformed_apply_miss_num');
15:35:59   7  
15:35:59   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:35:59   9  	  miss_table_name => 'svmc_miss_cat',
15:35:59  10  	  data_table_name => '&scoretable',
15:35:59  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:35:59  12  
15:35:59  13  	-- Normalize the data to be scored
15:35:59  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:35:59  15  	  norm_table_name => 'svmc_norm',
15:35:59  16  	  data_table_name => '&scoretable',
15:35:59  17  	  xform_view_name => 'svmc_apply_prep');
15:35:59  18  END;
15:35:59  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
15:36:00 SQL> 
15:36:00 SQL> -- Use same model_name used in score.sql
15:36:00 SQL> DEFINE model_name = 'forex15'
15:36:00 SQL> 
15:36:00 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
15:36:00 SQL> 
15:36:00 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
15:36:00 SQL> 
15:36:00 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
15:36:00   2  SELECT
15:36:00   3  prdate
15:36:00   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:36:00   5  ,sysdate
15:36:00   6  ,SUBSTR(prdate,1,3)pair
15:36:00   7  ,SUBSTR(prdate,4,19)ydate
15:36:00   8  FROM svmc_apply_prep
15:36:00   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:36:00 SQL> @aud_score1day.sql  2011-01-07 15:20:00
15:36:00 SQL> --
15:36:00 SQL> -- aud_score1day.sql
15:36:00 SQL> --
15:36:00 SQL> 
15:36:00 SQL> CREATE OR REPLACE VIEW sme AS
15:36:00   2  SELECT
15:36:00   3  'aud'||m.ydate prdate
15:36:00   4  ,NULL gatt
15:36:00   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:36:00   6  ,eur_g00
15:36:00   7  ,eur_g01
15:36:00   8  ,eur_g02
15:36:00   9  ,eur_g03
15:36:00  10  ,eur_g04
15:36:00  11  ,eur_g05
15:36:00  12  ,eur_g06
15:36:00  13  ,eur_g07
15:36:00  14  ,eur_g08
15:36:00  15  ,eur_g09
15:36:00  16  ,eur_g10
15:36:00  17  ,eur_g11
15:36:00  18  ,eur_g12
15:36:00  19  ,eur_g13
15:36:00  20  ,eur_g14
15:36:00  21  ,eur_g15
15:36:00  22  ,eur_g16
15:36:00  23  ,eur_g17
15:36:00  24  ,eur_g18
15:36:00  25  ,eur_g19
15:36:00  26  ,eur_g20
15:36:00  27  ,eur_g21
15:36:00  28  ,eur_g22
15:36:00  29  ,eur_g23
15:36:00  30  ,eur_g24
15:36:00  31  ,eur_g25
15:36:00  32  ,eur_g26
15:36:00  33  ,eur_g27
15:36:00  34  ,eur_g28
15:36:00  35  ,eur_g29
15:36:00  36  ,eur_g30
15:36:00  37  ,eur_g31
15:36:00  38  ,eur_g32
15:36:00  39  ,eur_g33
15:36:00  40  ,eur_g34
15:36:00  41  ,eur_g35
15:36:00  42  ,eur_g36
15:36:00  43  ,eur_g37
15:36:00  44  ,eur_g38
15:36:00  45  ,eur_g39
15:36:00  46  ,eur_g40
15:36:00  47  ,eur_g41
15:36:00  48  ,aud_g00
15:36:00  49  ,aud_g01
15:36:00  50  ,aud_g02
15:36:00  51  ,aud_g03
15:36:00  52  ,aud_g04
15:36:00  53  ,aud_g05
15:36:00  54  ,aud_g06
15:36:00  55  ,aud_g07
15:36:00  56  ,aud_g08
15:36:00  57  ,aud_g09
15:36:00  58  ,aud_g10
15:36:00  59  ,aud_g11
15:36:00  60  ,aud_g12
15:36:00  61  ,aud_g13
15:36:00  62  ,aud_g14
15:36:00  63  ,aud_g15
15:36:00  64  ,aud_g16
15:36:00  65  ,aud_g17
15:36:00  66  ,aud_g18
15:36:00  67  ,aud_g19
15:36:00  68  ,aud_g20
15:36:00  69  ,aud_g21
15:36:00  70  ,aud_g22
15:36:00  71  ,aud_g23
15:36:00  72  ,aud_g24
15:36:00  73  ,aud_g25
15:36:00  74  ,aud_g26
15:36:00  75  ,aud_g27
15:36:00  76  ,aud_g28
15:36:00  77  ,aud_g29
15:36:00  78  ,aud_g30
15:36:00  79  ,aud_g31
15:36:00  80  ,aud_g32
15:36:00  81  ,aud_g33
15:36:00  82  ,aud_g34
15:36:00  83  ,aud_g35
15:36:00  84  ,aud_g36
15:36:00  85  ,aud_g37
15:36:00  86  ,aud_g38
15:36:00  87  ,aud_g39
15:36:00  88  ,aud_g40
15:36:00  89  ,aud_g41
15:36:00  90  ,gbp_g00
15:36:00  91  ,gbp_g01
15:36:00  92  ,gbp_g02
15:36:00  93  ,gbp_g03
15:36:00  94  ,gbp_g04
15:36:00  95  ,gbp_g05
15:36:00  96  ,gbp_g06
15:36:00  97  ,gbp_g07
15:36:00  98  ,gbp_g08
15:36:00  99  ,gbp_g09
15:36:00 100  ,gbp_g10
15:36:00 101  ,gbp_g11
15:36:00 102  ,gbp_g12
15:36:00 103  ,gbp_g13
15:36:00 104  ,gbp_g14
15:36:00 105  ,gbp_g15
15:36:00 106  ,gbp_g16
15:36:00 107  ,gbp_g17
15:36:00 108  ,gbp_g18
15:36:00 109  ,gbp_g19
15:36:00 110  ,gbp_g20
15:36:00 111  ,gbp_g21
15:36:00 112  ,gbp_g22
15:36:00 113  ,gbp_g23
15:36:00 114  ,gbp_g24
15:36:00 115  ,gbp_g25
15:36:00 116  ,gbp_g26
15:36:00 117  ,gbp_g27
15:36:00 118  ,gbp_g28
15:36:00 119  ,gbp_g29
15:36:00 120  ,gbp_g30
15:36:00 121  ,gbp_g31
15:36:00 122  ,gbp_g32
15:36:00 123  ,gbp_g33
15:36:00 124  ,gbp_g34
15:36:00 125  ,gbp_g35
15:36:00 126  ,gbp_g36
15:36:00 127  ,gbp_g37
15:36:00 128  ,gbp_g38
15:36:00 129  ,gbp_g39
15:36:00 130  ,gbp_g40
15:36:00 131  ,gbp_g41
15:36:00 132  ,jpy_g00
15:36:00 133  ,jpy_g01
15:36:00 134  ,jpy_g02
15:36:00 135  ,jpy_g03
15:36:00 136  ,jpy_g04
15:36:00 137  ,jpy_g05
15:36:00 138  ,jpy_g06
15:36:00 139  ,jpy_g07
15:36:00 140  ,jpy_g08
15:36:00 141  ,jpy_g09
15:36:00 142  ,jpy_g10
15:36:00 143  ,jpy_g11
15:36:00 144  ,jpy_g12
15:36:00 145  ,jpy_g13
15:36:00 146  ,jpy_g14
15:36:00 147  ,jpy_g15
15:36:00 148  ,jpy_g16
15:36:00 149  ,jpy_g17
15:36:00 150  ,jpy_g18
15:36:00 151  ,jpy_g19
15:36:00 152  ,jpy_g20
15:36:00 153  ,jpy_g21
15:36:00 154  ,jpy_g22
15:36:00 155  ,jpy_g23
15:36:00 156  ,jpy_g24
15:36:00 157  ,jpy_g25
15:36:00 158  ,jpy_g26
15:36:00 159  ,jpy_g27
15:36:00 160  ,jpy_g28
15:36:00 161  ,jpy_g29
15:36:00 162  ,jpy_g30
15:36:00 163  ,jpy_g31
15:36:00 164  ,jpy_g32
15:36:00 165  ,jpy_g33
15:36:00 166  ,jpy_g34
15:36:00 167  ,jpy_g35
15:36:00 168  ,jpy_g36
15:36:00 169  ,jpy_g37
15:36:00 170  ,jpy_g38
15:36:00 171  ,jpy_g39
15:36:00 172  ,jpy_g40
15:36:00 173  ,jpy_g41
15:36:00 174  ,cad_g00
15:36:00 175  ,cad_g01
15:36:00 176  ,cad_g02
15:36:00 177  ,cad_g03
15:36:00 178  ,cad_g04
15:36:00 179  ,cad_g05
15:36:00 180  ,cad_g06
15:36:00 181  ,cad_g07
15:36:00 182  ,cad_g08
15:36:00 183  ,cad_g09
15:36:00 184  ,cad_g10
15:36:00 185  ,cad_g11
15:36:00 186  ,cad_g12
15:36:00 187  ,cad_g13
15:36:00 188  ,cad_g14
15:36:00 189  ,cad_g15
15:36:00 190  ,cad_g16
15:36:00 191  ,cad_g17
15:36:00 192  ,cad_g18
15:36:00 193  ,cad_g19
15:36:00 194  ,cad_g20
15:36:00 195  ,cad_g21
15:36:00 196  ,cad_g22
15:36:00 197  ,cad_g23
15:36:00 198  ,cad_g24
15:36:00 199  ,cad_g25
15:36:00 200  ,cad_g26
15:36:00 201  ,cad_g27
15:36:00 202  ,cad_g28
15:36:00 203  ,cad_g29
15:36:00 204  ,cad_g30
15:36:00 205  ,cad_g31
15:36:00 206  ,cad_g32
15:36:00 207  ,cad_g33
15:36:00 208  ,cad_g34
15:36:00 209  ,cad_g35
15:36:00 210  ,cad_g36
15:36:00 211  ,cad_g37
15:36:00 212  ,cad_g38
15:36:00 213  ,cad_g39
15:36:00 214  ,cad_g40
15:36:00 215  ,cad_g41
15:36:00 216  ,chf_g00
15:36:00 217  ,chf_g01
15:36:00 218  ,chf_g02
15:36:00 219  ,chf_g03
15:36:00 220  ,chf_g04
15:36:00 221  ,chf_g05
15:36:00 222  ,chf_g06
15:36:00 223  ,chf_g07
15:36:00 224  ,chf_g08
15:36:00 225  ,chf_g09
15:36:00 226  ,chf_g10
15:36:00 227  ,chf_g11
15:36:00 228  ,chf_g12
15:36:00 229  ,chf_g13
15:36:00 230  ,chf_g14
15:36:00 231  ,chf_g15
15:36:00 232  ,chf_g16
15:36:00 233  ,chf_g17
15:36:00 234  ,chf_g18
15:36:00 235  ,chf_g19
15:36:00 236  ,chf_g20
15:36:00 237  ,chf_g21
15:36:00 238  ,chf_g22
15:36:00 239  ,chf_g23
15:36:00 240  ,chf_g24
15:36:00 241  ,chf_g25
15:36:00 242  ,chf_g26
15:36:00 243  ,chf_g27
15:36:00 244  ,chf_g28
15:36:00 245  ,chf_g29
15:36:00 246  ,chf_g30
15:36:00 247  ,chf_g31
15:36:00 248  ,chf_g32
15:36:00 249  ,chf_g33
15:36:00 250  ,chf_g34
15:36:00 251  ,chf_g35
15:36:00 252  ,chf_g36
15:36:00 253  ,chf_g37
15:36:00 254  ,chf_g38
15:36:00 255  ,chf_g39
15:36:00 256  ,chf_g40
15:36:00 257  ,chf_g41
15:36:00 258  FROM aud_ms6 m
15:36:00 259  WHERE m.ydate = '&1'||' '||'&2'
15:36:00 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'15:20:00'

View created.

Elapsed: 00:00:00.11
15:36:00 SQL> 
15:36:00 SQL> -- rpt
15:36:00 SQL> -- We should see just 1 row:
15:36:00 SQL> 
15:36:00 SQL> SELECT COUNT(prdate) FROM sme
15:36:00   2  
15:36:00 SQL> -- Build the model:
15:36:00 SQL> CREATE OR REPLACE VIEW bme AS
15:36:00   2  SELECT
15:36:00   3  'aud'||m.ydate prdate
15:36:00   4  ,gatt
15:36:00   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:36:00   6  ,eur_g00
15:36:00   7  ,eur_g01
15:36:00   8  ,eur_g02
15:36:00   9  ,eur_g03
15:36:00  10  ,eur_g04
15:36:00  11  ,eur_g05
15:36:00  12  ,eur_g06
15:36:00  13  ,eur_g07
15:36:00  14  ,eur_g08
15:36:00  15  ,eur_g09
15:36:00  16  ,eur_g10
15:36:00  17  ,eur_g11
15:36:00  18  ,eur_g12
15:36:00  19  ,eur_g13
15:36:00  20  ,eur_g14
15:36:00  21  ,eur_g15
15:36:00  22  ,eur_g16
15:36:00  23  ,eur_g17
15:36:00  24  ,eur_g18
15:36:00  25  ,eur_g19
15:36:00  26  ,eur_g20
15:36:00  27  ,eur_g21
15:36:00  28  ,eur_g22
15:36:00  29  ,eur_g23
15:36:00  30  ,eur_g24
15:36:00  31  ,eur_g25
15:36:00  32  ,eur_g26
15:36:00  33  ,eur_g27
15:36:00  34  ,eur_g28
15:36:00  35  ,eur_g29
15:36:00  36  ,eur_g30
15:36:00  37  ,eur_g31
15:36:00  38  ,eur_g32
15:36:00  39  ,eur_g33
15:36:00  40  ,eur_g34
15:36:00  41  ,eur_g35
15:36:00  42  ,eur_g36
15:36:00  43  ,eur_g37
15:36:00  44  ,eur_g38
15:36:00  45  ,eur_g39
15:36:00  46  ,eur_g40
15:36:00  47  ,eur_g41
15:36:00  48  ,aud_g00
15:36:00  49  ,aud_g01
15:36:00  50  ,aud_g02
15:36:00  51  ,aud_g03
15:36:00  52  ,aud_g04
15:36:00  53  ,aud_g05
15:36:00  54  ,aud_g06
15:36:00  55  ,aud_g07
15:36:00  56  ,aud_g08
15:36:00  57  ,aud_g09
15:36:00  58  ,aud_g10
15:36:00  59  ,aud_g11
15:36:00  60  ,aud_g12
15:36:00  61  ,aud_g13
15:36:00  62  ,aud_g14
15:36:00  63  ,aud_g15
15:36:00  64  ,aud_g16
15:36:00  65  ,aud_g17
15:36:00  66  ,aud_g18
15:36:00  67  ,aud_g19
15:36:00  68  ,aud_g20
15:36:00  69  ,aud_g21
15:36:00  70  ,aud_g22
15:36:00  71  ,aud_g23
15:36:00  72  ,aud_g24
15:36:00  73  ,aud_g25
15:36:00  74  ,aud_g26
15:36:00  75  ,aud_g27
15:36:00  76  ,aud_g28
15:36:00  77  ,aud_g29
15:36:00  78  ,aud_g30
15:36:00  79  ,aud_g31
15:36:00  80  ,aud_g32
15:36:00  81  ,aud_g33
15:36:00  82  ,aud_g34
15:36:00  83  ,aud_g35
15:36:00  84  ,aud_g36
15:36:00  85  ,aud_g37
15:36:00  86  ,aud_g38
15:36:00  87  ,aud_g39
15:36:00  88  ,aud_g40
15:36:00  89  ,aud_g41
15:36:00  90  ,gbp_g00
15:36:00  91  ,gbp_g01
15:36:00  92  ,gbp_g02
15:36:00  93  ,gbp_g03
15:36:00  94  ,gbp_g04
15:36:00  95  ,gbp_g05
15:36:00  96  ,gbp_g06
15:36:00  97  ,gbp_g07
15:36:00  98  ,gbp_g08
15:36:00  99  ,gbp_g09
15:36:00 100  ,gbp_g10
15:36:00 101  ,gbp_g11
15:36:00 102  ,gbp_g12
15:36:00 103  ,gbp_g13
15:36:00 104  ,gbp_g14
15:36:00 105  ,gbp_g15
15:36:00 106  ,gbp_g16
15:36:00 107  ,gbp_g17
15:36:00 108  ,gbp_g18
15:36:00 109  ,gbp_g19
15:36:00 110  ,gbp_g20
15:36:00 111  ,gbp_g21
15:36:00 112  ,gbp_g22
15:36:00 113  ,gbp_g23
15:36:00 114  ,gbp_g24
15:36:00 115  ,gbp_g25
15:36:00 116  ,gbp_g26
15:36:00 117  ,gbp_g27
15:36:00 118  ,gbp_g28
15:36:00 119  ,gbp_g29
15:36:00 120  ,gbp_g30
15:36:00 121  ,gbp_g31
15:36:00 122  ,gbp_g32
15:36:00 123  ,gbp_g33
15:36:00 124  ,gbp_g34
15:36:00 125  ,gbp_g35
15:36:00 126  ,gbp_g36
15:36:00 127  ,gbp_g37
15:36:00 128  ,gbp_g38
15:36:00 129  ,gbp_g39
15:36:00 130  ,gbp_g40
15:36:00 131  ,gbp_g41
15:36:00 132  ,jpy_g00
15:36:00 133  ,jpy_g01
15:36:00 134  ,jpy_g02
15:36:00 135  ,jpy_g03
15:36:00 136  ,jpy_g04
15:36:00 137  ,jpy_g05
15:36:00 138  ,jpy_g06
15:36:00 139  ,jpy_g07
15:36:00 140  ,jpy_g08
15:36:00 141  ,jpy_g09
15:36:00 142  ,jpy_g10
15:36:00 143  ,jpy_g11
15:36:00 144  ,jpy_g12
15:36:00 145  ,jpy_g13
15:36:00 146  ,jpy_g14
15:36:00 147  ,jpy_g15
15:36:00 148  ,jpy_g16
15:36:00 149  ,jpy_g17
15:36:00 150  ,jpy_g18
15:36:00 151  ,jpy_g19
15:36:00 152  ,jpy_g20
15:36:00 153  ,jpy_g21
15:36:00 154  ,jpy_g22
15:36:00 155  ,jpy_g23
15:36:00 156  ,jpy_g24
15:36:00 157  ,jpy_g25
15:36:00 158  ,jpy_g26
15:36:00 159  ,jpy_g27
15:36:00 160  ,jpy_g28
15:36:00 161  ,jpy_g29
15:36:00 162  ,jpy_g30
15:36:00 163  ,jpy_g31
15:36:00 164  ,jpy_g32
15:36:00 165  ,jpy_g33
15:36:00 166  ,jpy_g34
15:36:00 167  ,jpy_g35
15:36:00 168  ,jpy_g36
15:36:00 169  ,jpy_g37
15:36:00 170  ,jpy_g38
15:36:00 171  ,jpy_g39
15:36:00 172  ,jpy_g40
15:36:00 173  ,jpy_g41
15:36:00 174  ,cad_g00
15:36:00 175  ,cad_g01
15:36:00 176  ,cad_g02
15:36:00 177  ,cad_g03
15:36:00 178  ,cad_g04
15:36:00 179  ,cad_g05
15:36:00 180  ,cad_g06
15:36:00 181  ,cad_g07
15:36:00 182  ,cad_g08
15:36:00 183  ,cad_g09
15:36:00 184  ,cad_g10
15:36:00 185  ,cad_g11
15:36:00 186  ,cad_g12
15:36:00 187  ,cad_g13
15:36:00 188  ,cad_g14
15:36:00 189  ,cad_g15
15:36:00 190  ,cad_g16
15:36:00 191  ,cad_g17
15:36:00 192  ,cad_g18
15:36:00 193  ,cad_g19
15:36:00 194  ,cad_g20
15:36:00 195  ,cad_g21
15:36:00 196  ,cad_g22
15:36:00 197  ,cad_g23
15:36:00 198  ,cad_g24
15:36:00 199  ,cad_g25
15:36:00 200  ,cad_g26
15:36:00 201  ,cad_g27
15:36:00 202  ,cad_g28
15:36:00 203  ,cad_g29
15:36:00 204  ,cad_g30
15:36:00 205  ,cad_g31
15:36:00 206  ,cad_g32
15:36:00 207  ,cad_g33
15:36:00 208  ,cad_g34
15:36:00 209  ,cad_g35
15:36:00 210  ,cad_g36
15:36:00 211  ,cad_g37
15:36:00 212  ,cad_g38
15:36:00 213  ,cad_g39
15:36:00 214  ,cad_g40
15:36:00 215  ,cad_g41
15:36:00 216  ,chf_g00
15:36:00 217  ,chf_g01
15:36:00 218  ,chf_g02
15:36:00 219  ,chf_g03
15:36:00 220  ,chf_g04
15:36:00 221  ,chf_g05
15:36:00 222  ,chf_g06
15:36:00 223  ,chf_g07
15:36:00 224  ,chf_g08
15:36:00 225  ,chf_g09
15:36:00 226  ,chf_g10
15:36:00 227  ,chf_g11
15:36:00 228  ,chf_g12
15:36:00 229  ,chf_g13
15:36:00 230  ,chf_g14
15:36:00 231  ,chf_g15
15:36:00 232  ,chf_g16
15:36:00 233  ,chf_g17
15:36:00 234  ,chf_g18
15:36:00 235  ,chf_g19
15:36:00 236  ,chf_g20
15:36:00 237  ,chf_g21
15:36:00 238  ,chf_g22
15:36:00 239  ,chf_g23
15:36:00 240  ,chf_g24
15:36:00 241  ,chf_g25
15:36:00 242  ,chf_g26
15:36:00 243  ,chf_g27
15:36:00 244  ,chf_g28
15:36:00 245  ,chf_g29
15:36:00 246  ,chf_g30
15:36:00 247  ,chf_g31
15:36:00 248  ,chf_g32
15:36:00 249  ,chf_g33
15:36:00 250  ,chf_g34
15:36:00 251  ,chf_g35
15:36:00 252  ,chf_g36
15:36:00 253  ,chf_g37
15:36:00 254  ,chf_g38
15:36:00 255  ,chf_g39
15:36:00 256  ,chf_g40
15:36:00 257  ,chf_g41
15:36:00 258  FROM aud_ms6 m
15:36:00 259  WHERE gatt IN('nup','up')
15:36:00 260  AND 1+m.ydate < '&1'||' '||'&2'
15:36:00 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'15:20:00'

View created.

Elapsed: 00:00:00.12
15:36:00 SQL> 
15:36:00 SQL> -- rpt
15:36:00 SQL> 
15:36:00 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
15:36:00   2  
15:36:00 SQL> SELECT MAX(prdate) FROM bme
15:36:00   2  
15:36:00 SQL> -- Now build model from bme and score sme
15:36:00 SQL> @score1.sql
15:36:00 SQL> -- score1.sql
15:36:00 SQL> 
15:36:00 SQL> -- Does the 1st SVM score
15:36:00 SQL> 
15:36:00 SQL> -- Fill up svmc_apply_prep
15:36:00 SQL> @score.sql
15:36:00 SQL> --
15:36:00 SQL> -- score.sql
15:36:00 SQL> --
15:36:00 SQL> 
15:36:00 SQL> -- usage: score.sql
15:36:00 SQL> 
15:36:00 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:36:00 SQL> 
15:36:00 SQL> DEFINE target	= 'gatt'
15:36:00 SQL> DEFINE model_name = 'forex15'
15:36:00 SQL> DEFINE bldtable	= 'bme'
15:36:00 SQL> DEFINE scoretable = 'sme'
15:36:00 SQL> DEFINE case_id	= 'prdate'
15:36:00 SQL> 
15:36:00 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:36:00 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:36:00 SQL> 
15:36:00 SQL> -- Builds an SVM model using pl/sql.
15:36:00 SQL> 
15:36:00 SQL> -----------------------------------------------------------------------
15:36:00 SQL> --			    BUILD THE MODEL
15:36:00 SQL> -----------------------------------------------------------------------
15:36:00 SQL> 
15:36:00 SQL> -- Cleanup old build data preparation objects for repeat runs
15:36:00 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
15:36:00 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:36:00 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
15:36:00 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
15:36:00 SQL> 
15:36:00 SQL> 
15:36:00 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:36:00 SQL> --
15:36:00 SQL> -- DROP	TABLE svmc_settings ;
15:36:00 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:36:00 SQL> -- DELETE svmc_settings;
15:36:00 SQL> 
15:36:00 SQL> -- The default classification algorithm is Naive Bayes. So override
15:36:00 SQL> -- this choice to SVM using a settings table.
15:36:00 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:36:00 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:36:00 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:36:00 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:36:00 SQL> -- models.
15:36:00 SQL> --
15:36:00 SQL> 
15:36:00 SQL> -- Do this once and then comment it out.
15:36:00 SQL> -- That makes script go faster.
15:36:00 SQL> -- BEGIN
15:36:00 SQL> -- -- Populate settings table
15:36:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:36:00 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:36:00 SQL> --
15:36:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:36:00 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:36:00 SQL> --
15:36:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:36:00 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:36:00 SQL> --   COMMIT;
15:36:00 SQL> -- END;
15:36:00 SQL> -- /
15:36:00 SQL> 
15:36:00 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
15:36:00 SQL> 
15:36:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:36:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:36:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:36:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:36:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:36:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:36:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:36:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:36:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:36:00 SQL> 
15:36:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:36:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:36:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:36:01 SQL> 
15:36:01 SQL> --------------------------------
15:36:01 SQL> -- PREPARE BUILD (TRAINING) DATA
15:36:01 SQL> --
15:36:01 SQL> 
15:36:01 SQL> -- 1. Missing Value treatment for all Predictors and
15:36:01 SQL> -- 2. Outlier Treatment and
15:36:01 SQL> -- 3. Normalization are performed below.
15:36:01 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:36:01 SQL> --    normalized here.
15:36:01 SQL> 
15:36:01 SQL> BEGIN
15:36:01   2  	-- Perform missing value treatment for all predictors
15:36:01   3  	-- create miss tables
15:36:01   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:36:01   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:36:01   6  
15:36:01   7  	-- populate miss tables
15:36:01   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:36:01   9  	  miss_table_name => 'svmc_miss_num',
15:36:01  10  	  data_table_name => '&bldtable',
15:36:01  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:36:01  12  
15:36:01  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:36:01  14  	  miss_table_name => 'svmc_miss_cat',
15:36:01  15  	  data_table_name => '&bldtable',
15:36:01  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:36:01  17  
15:36:01  18  	-- xform input data to replace missing values
15:36:01  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:36:01  20  	  miss_table_name => 'svmc_miss_num',
15:36:01  21  	  data_table_name => '&bldtable',
15:36:01  22  	  xform_view_name => 'xformed_build_miss_num');
15:36:01  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:36:01  24  	  miss_table_name => 'svmc_miss_cat',
15:36:01  25  	  data_table_name => '&bldtable',
15:36:01  26  	  xform_view_name => 'xformed_build_miss_cat');
15:36:01  27  
15:36:01  28  	-- Perform outlier treatment.
15:36:01  29  	-- create clip table
15:36:01  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:36:01  31  
15:36:01  32  	-- populate clip table
15:36:01  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:36:01  34  	  clip_table_name => 'svmc_clip',
15:36:01  35  	  data_table_name => '&bldtable',
15:36:01  36  	  tail_frac	  => 0.025,
15:36:01  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:36:01  38  
15:36:01  39  	-- xform input data to winsorized data
15:36:01  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:36:01  41  	  clip_table_name => 'svmc_clip',
15:36:01  42  	  data_table_name => '&bldtable',
15:36:01  43  	  xform_view_name => 'svmc_winsor');
15:36:01  44  
15:36:01  45  	-- create normalization table
15:36:01  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:36:01  47  
15:36:01  48  	-- populate normalization table based on winsorized data
15:36:01  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:36:01  50  	  norm_table_name => 'svmc_norm',
15:36:01  51  	  data_table_name => 'svmc_winsor',
15:36:01  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:36:01  53  
15:36:01  54  	-- normalize the original data
15:36:01  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:36:01  56  	  norm_table_name => 'svmc_norm',
15:36:01  57  	  data_table_name => '&bldtable',
15:36:01  58  	  xform_view_name => 'svmc_build_prep');
15:36:01  59  END;
15:36:01  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.39
15:36:19 SQL> 
15:36:19 SQL> ---------------------
15:36:19 SQL> -- CREATE A NEW MODEL
15:36:19 SQL> --
15:36:19 SQL> -- Cleanup old model with the same name for repeat runs
15:36:19 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:36:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:36:19   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.86
15:36:20 SQL> 
15:36:20 SQL> -- Build a new SVM Model
15:36:20 SQL> BEGIN
15:36:20   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:36:20   3  	  model_name	      => '&model_name',
15:36:20   4  	  mining_function     => dbms_data_mining.classification,
15:36:20   5  	  data_table_name     => 'svmc_build_prep',
15:36:20   6  	  case_id_column_name => '&case_id',
15:36:20   7  	  target_column_name  => '&target',
15:36:20   8  	  settings_table_name => 'svmc_settings');
15:36:20   9  END;
15:36:20  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.68
15:36:49 SQL> 
15:36:49 SQL> -----------------------------------------------------------------------
15:36:49 SQL> --			       APPLY/score THE MODEL
15:36:49 SQL> -----------------------------------------------------------------------
15:36:49 SQL> 
15:36:49 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:36:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:36:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:36:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:36:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:36:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:36:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
15:36:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:36:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:36:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
15:36:50 SQL> -----------------------
15:36:50 SQL> -- PREPARE SCORING DATA
15:36:50 SQL> --
15:36:50 SQL> -- If the data for model creation has been prepared, then the data
15:36:50 SQL> -- to be scored using the model must be prepared in the same manner
15:36:50 SQL> -- in order to obtain meaningful results.
15:36:50 SQL> --
15:36:50 SQL> -- 1. Missing Value treatment for all Predictors and
15:36:50 SQL> -- 2. Normalization
15:36:50 SQL> -- No outlier treatment will be performed during test and apply. The
15:36:50 SQL> -- normalization step is sufficient, since the normalization parameters
15:36:50 SQL> -- already capture the effects of outlier treatment done with build data.
15:36:50 SQL> --
15:36:50 SQL> BEGIN
15:36:50   2  	-- Xform Test data to replace missing values
15:36:50   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:36:50   4  	  miss_table_name => 'svmc_miss_num',
15:36:50   5  	  data_table_name => '&scoretable',
15:36:50   6  	  xform_view_name => 'xformed_apply_miss_num');
15:36:50   7  
15:36:50   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:36:50   9  	  miss_table_name => 'svmc_miss_cat',
15:36:50  10  	  data_table_name => '&scoretable',
15:36:50  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:36:50  12  
15:36:50  13  	-- Normalize the data to be scored
15:36:50  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:36:50  15  	  norm_table_name => 'svmc_norm',
15:36:50  16  	  data_table_name => '&scoretable',
15:36:50  17  	  xform_view_name => 'svmc_apply_prep');
15:36:50  18  END;
15:36:50  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.33
15:36:51 SQL> 
15:36:51 SQL> -- Use same model_name used in score.sql
15:36:51 SQL> DEFINE model_name = 'forex15'
15:36:51 SQL> 
15:36:51 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
15:36:51 SQL> 
15:36:51 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
15:36:51 SQL> 
15:36:51 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
15:36:51   2  SELECT
15:36:51   3  prdate
15:36:51   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:36:51   5  ,sysdate
15:36:51   6  ,SUBSTR(prdate,1,3)pair
15:36:51   7  ,SUBSTR(prdate,4,19)ydate
15:36:51   8  FROM svmc_apply_prep
15:36:51   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
15:36:51 SQL> @aud_score1day.sql  2011-01-07 15:25:00
15:36:51 SQL> --
15:36:51 SQL> -- aud_score1day.sql
15:36:51 SQL> --
15:36:51 SQL> 
15:36:51 SQL> CREATE OR REPLACE VIEW sme AS
15:36:51   2  SELECT
15:36:51   3  'aud'||m.ydate prdate
15:36:51   4  ,NULL gatt
15:36:51   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:36:51   6  ,eur_g00
15:36:51   7  ,eur_g01
15:36:51   8  ,eur_g02
15:36:51   9  ,eur_g03
15:36:51  10  ,eur_g04
15:36:51  11  ,eur_g05
15:36:51  12  ,eur_g06
15:36:51  13  ,eur_g07
15:36:51  14  ,eur_g08
15:36:51  15  ,eur_g09
15:36:51  16  ,eur_g10
15:36:51  17  ,eur_g11
15:36:51  18  ,eur_g12
15:36:51  19  ,eur_g13
15:36:51  20  ,eur_g14
15:36:51  21  ,eur_g15
15:36:51  22  ,eur_g16
15:36:51  23  ,eur_g17
15:36:51  24  ,eur_g18
15:36:51  25  ,eur_g19
15:36:51  26  ,eur_g20
15:36:51  27  ,eur_g21
15:36:51  28  ,eur_g22
15:36:51  29  ,eur_g23
15:36:51  30  ,eur_g24
15:36:51  31  ,eur_g25
15:36:51  32  ,eur_g26
15:36:51  33  ,eur_g27
15:36:51  34  ,eur_g28
15:36:51  35  ,eur_g29
15:36:51  36  ,eur_g30
15:36:51  37  ,eur_g31
15:36:51  38  ,eur_g32
15:36:51  39  ,eur_g33
15:36:51  40  ,eur_g34
15:36:51  41  ,eur_g35
15:36:51  42  ,eur_g36
15:36:51  43  ,eur_g37
15:36:51  44  ,eur_g38
15:36:51  45  ,eur_g39
15:36:51  46  ,eur_g40
15:36:51  47  ,eur_g41
15:36:51  48  ,aud_g00
15:36:51  49  ,aud_g01
15:36:51  50  ,aud_g02
15:36:51  51  ,aud_g03
15:36:51  52  ,aud_g04
15:36:51  53  ,aud_g05
15:36:51  54  ,aud_g06
15:36:51  55  ,aud_g07
15:36:51  56  ,aud_g08
15:36:51  57  ,aud_g09
15:36:51  58  ,aud_g10
15:36:51  59  ,aud_g11
15:36:51  60  ,aud_g12
15:36:51  61  ,aud_g13
15:36:51  62  ,aud_g14
15:36:51  63  ,aud_g15
15:36:51  64  ,aud_g16
15:36:51  65  ,aud_g17
15:36:51  66  ,aud_g18
15:36:51  67  ,aud_g19
15:36:51  68  ,aud_g20
15:36:51  69  ,aud_g21
15:36:51  70  ,aud_g22
15:36:51  71  ,aud_g23
15:36:51  72  ,aud_g24
15:36:51  73  ,aud_g25
15:36:51  74  ,aud_g26
15:36:51  75  ,aud_g27
15:36:51  76  ,aud_g28
15:36:51  77  ,aud_g29
15:36:51  78  ,aud_g30
15:36:51  79  ,aud_g31
15:36:51  80  ,aud_g32
15:36:51  81  ,aud_g33
15:36:51  82  ,aud_g34
15:36:51  83  ,aud_g35
15:36:51  84  ,aud_g36
15:36:51  85  ,aud_g37
15:36:51  86  ,aud_g38
15:36:51  87  ,aud_g39
15:36:51  88  ,aud_g40
15:36:51  89  ,aud_g41
15:36:51  90  ,gbp_g00
15:36:51  91  ,gbp_g01
15:36:51  92  ,gbp_g02
15:36:51  93  ,gbp_g03
15:36:51  94  ,gbp_g04
15:36:51  95  ,gbp_g05
15:36:51  96  ,gbp_g06
15:36:51  97  ,gbp_g07
15:36:51  98  ,gbp_g08
15:36:51  99  ,gbp_g09
15:36:51 100  ,gbp_g10
15:36:51 101  ,gbp_g11
15:36:51 102  ,gbp_g12
15:36:51 103  ,gbp_g13
15:36:51 104  ,gbp_g14
15:36:51 105  ,gbp_g15
15:36:51 106  ,gbp_g16
15:36:51 107  ,gbp_g17
15:36:51 108  ,gbp_g18
15:36:51 109  ,gbp_g19
15:36:51 110  ,gbp_g20
15:36:51 111  ,gbp_g21
15:36:51 112  ,gbp_g22
15:36:51 113  ,gbp_g23
15:36:51 114  ,gbp_g24
15:36:51 115  ,gbp_g25
15:36:51 116  ,gbp_g26
15:36:51 117  ,gbp_g27
15:36:51 118  ,gbp_g28
15:36:51 119  ,gbp_g29
15:36:51 120  ,gbp_g30
15:36:51 121  ,gbp_g31
15:36:51 122  ,gbp_g32
15:36:51 123  ,gbp_g33
15:36:51 124  ,gbp_g34
15:36:51 125  ,gbp_g35
15:36:51 126  ,gbp_g36
15:36:51 127  ,gbp_g37
15:36:51 128  ,gbp_g38
15:36:51 129  ,gbp_g39
15:36:51 130  ,gbp_g40
15:36:51 131  ,gbp_g41
15:36:51 132  ,jpy_g00
15:36:51 133  ,jpy_g01
15:36:51 134  ,jpy_g02
15:36:51 135  ,jpy_g03
15:36:51 136  ,jpy_g04
15:36:51 137  ,jpy_g05
15:36:51 138  ,jpy_g06
15:36:51 139  ,jpy_g07
15:36:51 140  ,jpy_g08
15:36:51 141  ,jpy_g09
15:36:51 142  ,jpy_g10
15:36:51 143  ,jpy_g11
15:36:51 144  ,jpy_g12
15:36:51 145  ,jpy_g13
15:36:51 146  ,jpy_g14
15:36:51 147  ,jpy_g15
15:36:51 148  ,jpy_g16
15:36:51 149  ,jpy_g17
15:36:51 150  ,jpy_g18
15:36:51 151  ,jpy_g19
15:36:51 152  ,jpy_g20
15:36:51 153  ,jpy_g21
15:36:51 154  ,jpy_g22
15:36:51 155  ,jpy_g23
15:36:51 156  ,jpy_g24
15:36:51 157  ,jpy_g25
15:36:51 158  ,jpy_g26
15:36:51 159  ,jpy_g27
15:36:51 160  ,jpy_g28
15:36:51 161  ,jpy_g29
15:36:51 162  ,jpy_g30
15:36:51 163  ,jpy_g31
15:36:51 164  ,jpy_g32
15:36:51 165  ,jpy_g33
15:36:51 166  ,jpy_g34
15:36:51 167  ,jpy_g35
15:36:51 168  ,jpy_g36
15:36:51 169  ,jpy_g37
15:36:51 170  ,jpy_g38
15:36:51 171  ,jpy_g39
15:36:51 172  ,jpy_g40
15:36:51 173  ,jpy_g41
15:36:51 174  ,cad_g00
15:36:51 175  ,cad_g01
15:36:51 176  ,cad_g02
15:36:51 177  ,cad_g03
15:36:51 178  ,cad_g04
15:36:51 179  ,cad_g05
15:36:51 180  ,cad_g06
15:36:51 181  ,cad_g07
15:36:51 182  ,cad_g08
15:36:51 183  ,cad_g09
15:36:51 184  ,cad_g10
15:36:51 185  ,cad_g11
15:36:51 186  ,cad_g12
15:36:51 187  ,cad_g13
15:36:51 188  ,cad_g14
15:36:51 189  ,cad_g15
15:36:51 190  ,cad_g16
15:36:51 191  ,cad_g17
15:36:51 192  ,cad_g18
15:36:51 193  ,cad_g19
15:36:51 194  ,cad_g20
15:36:51 195  ,cad_g21
15:36:51 196  ,cad_g22
15:36:51 197  ,cad_g23
15:36:51 198  ,cad_g24
15:36:51 199  ,cad_g25
15:36:51 200  ,cad_g26
15:36:51 201  ,cad_g27
15:36:51 202  ,cad_g28
15:36:51 203  ,cad_g29
15:36:51 204  ,cad_g30
15:36:51 205  ,cad_g31
15:36:51 206  ,cad_g32
15:36:51 207  ,cad_g33
15:36:51 208  ,cad_g34
15:36:51 209  ,cad_g35
15:36:51 210  ,cad_g36
15:36:51 211  ,cad_g37
15:36:51 212  ,cad_g38
15:36:51 213  ,cad_g39
15:36:51 214  ,cad_g40
15:36:51 215  ,cad_g41
15:36:51 216  ,chf_g00
15:36:51 217  ,chf_g01
15:36:51 218  ,chf_g02
15:36:51 219  ,chf_g03
15:36:51 220  ,chf_g04
15:36:51 221  ,chf_g05
15:36:51 222  ,chf_g06
15:36:51 223  ,chf_g07
15:36:51 224  ,chf_g08
15:36:51 225  ,chf_g09
15:36:51 226  ,chf_g10
15:36:51 227  ,chf_g11
15:36:51 228  ,chf_g12
15:36:51 229  ,chf_g13
15:36:51 230  ,chf_g14
15:36:51 231  ,chf_g15
15:36:51 232  ,chf_g16
15:36:51 233  ,chf_g17
15:36:51 234  ,chf_g18
15:36:51 235  ,chf_g19
15:36:51 236  ,chf_g20
15:36:51 237  ,chf_g21
15:36:51 238  ,chf_g22
15:36:51 239  ,chf_g23
15:36:51 240  ,chf_g24
15:36:51 241  ,chf_g25
15:36:51 242  ,chf_g26
15:36:51 243  ,chf_g27
15:36:51 244  ,chf_g28
15:36:51 245  ,chf_g29
15:36:51 246  ,chf_g30
15:36:51 247  ,chf_g31
15:36:51 248  ,chf_g32
15:36:51 249  ,chf_g33
15:36:51 250  ,chf_g34
15:36:51 251  ,chf_g35
15:36:51 252  ,chf_g36
15:36:51 253  ,chf_g37
15:36:51 254  ,chf_g38
15:36:51 255  ,chf_g39
15:36:51 256  ,chf_g40
15:36:51 257  ,chf_g41
15:36:51 258  FROM aud_ms6 m
15:36:51 259  WHERE m.ydate = '&1'||' '||'&2'
15:36:51 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'15:25:00'

View created.

Elapsed: 00:00:00.13
15:36:51 SQL> 
15:36:51 SQL> -- rpt
15:36:51 SQL> -- We should see just 1 row:
15:36:51 SQL> 
15:36:51 SQL> SELECT COUNT(prdate) FROM sme
15:36:51   2  
15:36:51 SQL> -- Build the model:
15:36:51 SQL> CREATE OR REPLACE VIEW bme AS
15:36:51   2  SELECT
15:36:51   3  'aud'||m.ydate prdate
15:36:51   4  ,gatt
15:36:51   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:36:51   6  ,eur_g00
15:36:51   7  ,eur_g01
15:36:51   8  ,eur_g02
15:36:51   9  ,eur_g03
15:36:51  10  ,eur_g04
15:36:51  11  ,eur_g05
15:36:51  12  ,eur_g06
15:36:51  13  ,eur_g07
15:36:51  14  ,eur_g08
15:36:51  15  ,eur_g09
15:36:51  16  ,eur_g10
15:36:51  17  ,eur_g11
15:36:51  18  ,eur_g12
15:36:51  19  ,eur_g13
15:36:51  20  ,eur_g14
15:36:51  21  ,eur_g15
15:36:51  22  ,eur_g16
15:36:51  23  ,eur_g17
15:36:51  24  ,eur_g18
15:36:51  25  ,eur_g19
15:36:51  26  ,eur_g20
15:36:51  27  ,eur_g21
15:36:51  28  ,eur_g22
15:36:51  29  ,eur_g23
15:36:51  30  ,eur_g24
15:36:51  31  ,eur_g25
15:36:51  32  ,eur_g26
15:36:51  33  ,eur_g27
15:36:51  34  ,eur_g28
15:36:51  35  ,eur_g29
15:36:51  36  ,eur_g30
15:36:51  37  ,eur_g31
15:36:51  38  ,eur_g32
15:36:51  39  ,eur_g33
15:36:51  40  ,eur_g34
15:36:51  41  ,eur_g35
15:36:51  42  ,eur_g36
15:36:51  43  ,eur_g37
15:36:51  44  ,eur_g38
15:36:51  45  ,eur_g39
15:36:51  46  ,eur_g40
15:36:51  47  ,eur_g41
15:36:51  48  ,aud_g00
15:36:51  49  ,aud_g01
15:36:51  50  ,aud_g02
15:36:51  51  ,aud_g03
15:36:51  52  ,aud_g04
15:36:51  53  ,aud_g05
15:36:51  54  ,aud_g06
15:36:51  55  ,aud_g07
15:36:51  56  ,aud_g08
15:36:51  57  ,aud_g09
15:36:51  58  ,aud_g10
15:36:51  59  ,aud_g11
15:36:51  60  ,aud_g12
15:36:51  61  ,aud_g13
15:36:51  62  ,aud_g14
15:36:51  63  ,aud_g15
15:36:51  64  ,aud_g16
15:36:51  65  ,aud_g17
15:36:51  66  ,aud_g18
15:36:51  67  ,aud_g19
15:36:51  68  ,aud_g20
15:36:51  69  ,aud_g21
15:36:51  70  ,aud_g22
15:36:51  71  ,aud_g23
15:36:51  72  ,aud_g24
15:36:51  73  ,aud_g25
15:36:51  74  ,aud_g26
15:36:51  75  ,aud_g27
15:36:51  76  ,aud_g28
15:36:51  77  ,aud_g29
15:36:51  78  ,aud_g30
15:36:51  79  ,aud_g31
15:36:51  80  ,aud_g32
15:36:51  81  ,aud_g33
15:36:51  82  ,aud_g34
15:36:51  83  ,aud_g35
15:36:51  84  ,aud_g36
15:36:51  85  ,aud_g37
15:36:51  86  ,aud_g38
15:36:51  87  ,aud_g39
15:36:51  88  ,aud_g40
15:36:51  89  ,aud_g41
15:36:51  90  ,gbp_g00
15:36:51  91  ,gbp_g01
15:36:51  92  ,gbp_g02
15:36:51  93  ,gbp_g03
15:36:51  94  ,gbp_g04
15:36:51  95  ,gbp_g05
15:36:51  96  ,gbp_g06
15:36:51  97  ,gbp_g07
15:36:51  98  ,gbp_g08
15:36:51  99  ,gbp_g09
15:36:51 100  ,gbp_g10
15:36:51 101  ,gbp_g11
15:36:51 102  ,gbp_g12
15:36:51 103  ,gbp_g13
15:36:51 104  ,gbp_g14
15:36:51 105  ,gbp_g15
15:36:51 106  ,gbp_g16
15:36:51 107  ,gbp_g17
15:36:51 108  ,gbp_g18
15:36:51 109  ,gbp_g19
15:36:51 110  ,gbp_g20
15:36:51 111  ,gbp_g21
15:36:51 112  ,gbp_g22
15:36:51 113  ,gbp_g23
15:36:51 114  ,gbp_g24
15:36:51 115  ,gbp_g25
15:36:51 116  ,gbp_g26
15:36:51 117  ,gbp_g27
15:36:51 118  ,gbp_g28
15:36:51 119  ,gbp_g29
15:36:51 120  ,gbp_g30
15:36:51 121  ,gbp_g31
15:36:51 122  ,gbp_g32
15:36:51 123  ,gbp_g33
15:36:51 124  ,gbp_g34
15:36:51 125  ,gbp_g35
15:36:51 126  ,gbp_g36
15:36:51 127  ,gbp_g37
15:36:51 128  ,gbp_g38
15:36:51 129  ,gbp_g39
15:36:51 130  ,gbp_g40
15:36:51 131  ,gbp_g41
15:36:51 132  ,jpy_g00
15:36:51 133  ,jpy_g01
15:36:51 134  ,jpy_g02
15:36:51 135  ,jpy_g03
15:36:51 136  ,jpy_g04
15:36:51 137  ,jpy_g05
15:36:51 138  ,jpy_g06
15:36:51 139  ,jpy_g07
15:36:51 140  ,jpy_g08
15:36:51 141  ,jpy_g09
15:36:51 142  ,jpy_g10
15:36:51 143  ,jpy_g11
15:36:51 144  ,jpy_g12
15:36:51 145  ,jpy_g13
15:36:51 146  ,jpy_g14
15:36:51 147  ,jpy_g15
15:36:51 148  ,jpy_g16
15:36:51 149  ,jpy_g17
15:36:51 150  ,jpy_g18
15:36:51 151  ,jpy_g19
15:36:51 152  ,jpy_g20
15:36:51 153  ,jpy_g21
15:36:51 154  ,jpy_g22
15:36:51 155  ,jpy_g23
15:36:51 156  ,jpy_g24
15:36:51 157  ,jpy_g25
15:36:51 158  ,jpy_g26
15:36:51 159  ,jpy_g27
15:36:51 160  ,jpy_g28
15:36:51 161  ,jpy_g29
15:36:51 162  ,jpy_g30
15:36:51 163  ,jpy_g31
15:36:51 164  ,jpy_g32
15:36:51 165  ,jpy_g33
15:36:51 166  ,jpy_g34
15:36:51 167  ,jpy_g35
15:36:51 168  ,jpy_g36
15:36:51 169  ,jpy_g37
15:36:51 170  ,jpy_g38
15:36:51 171  ,jpy_g39
15:36:51 172  ,jpy_g40
15:36:51 173  ,jpy_g41
15:36:51 174  ,cad_g00
15:36:51 175  ,cad_g01
15:36:51 176  ,cad_g02
15:36:51 177  ,cad_g03
15:36:51 178  ,cad_g04
15:36:51 179  ,cad_g05
15:36:51 180  ,cad_g06
15:36:51 181  ,cad_g07
15:36:51 182  ,cad_g08
15:36:51 183  ,cad_g09
15:36:51 184  ,cad_g10
15:36:51 185  ,cad_g11
15:36:51 186  ,cad_g12
15:36:51 187  ,cad_g13
15:36:51 188  ,cad_g14
15:36:51 189  ,cad_g15
15:36:51 190  ,cad_g16
15:36:51 191  ,cad_g17
15:36:51 192  ,cad_g18
15:36:51 193  ,cad_g19
15:36:51 194  ,cad_g20
15:36:51 195  ,cad_g21
15:36:51 196  ,cad_g22
15:36:51 197  ,cad_g23
15:36:51 198  ,cad_g24
15:36:51 199  ,cad_g25
15:36:51 200  ,cad_g26
15:36:51 201  ,cad_g27
15:36:51 202  ,cad_g28
15:36:51 203  ,cad_g29
15:36:51 204  ,cad_g30
15:36:51 205  ,cad_g31
15:36:51 206  ,cad_g32
15:36:51 207  ,cad_g33
15:36:51 208  ,cad_g34
15:36:51 209  ,cad_g35
15:36:51 210  ,cad_g36
15:36:51 211  ,cad_g37
15:36:51 212  ,cad_g38
15:36:51 213  ,cad_g39
15:36:51 214  ,cad_g40
15:36:51 215  ,cad_g41
15:36:51 216  ,chf_g00
15:36:51 217  ,chf_g01
15:36:51 218  ,chf_g02
15:36:51 219  ,chf_g03
15:36:51 220  ,chf_g04
15:36:51 221  ,chf_g05
15:36:51 222  ,chf_g06
15:36:51 223  ,chf_g07
15:36:51 224  ,chf_g08
15:36:51 225  ,chf_g09
15:36:51 226  ,chf_g10
15:36:51 227  ,chf_g11
15:36:51 228  ,chf_g12
15:36:51 229  ,chf_g13
15:36:51 230  ,chf_g14
15:36:51 231  ,chf_g15
15:36:51 232  ,chf_g16
15:36:51 233  ,chf_g17
15:36:51 234  ,chf_g18
15:36:51 235  ,chf_g19
15:36:51 236  ,chf_g20
15:36:51 237  ,chf_g21
15:36:51 238  ,chf_g22
15:36:51 239  ,chf_g23
15:36:51 240  ,chf_g24
15:36:51 241  ,chf_g25
15:36:51 242  ,chf_g26
15:36:51 243  ,chf_g27
15:36:51 244  ,chf_g28
15:36:51 245  ,chf_g29
15:36:51 246  ,chf_g30
15:36:51 247  ,chf_g31
15:36:51 248  ,chf_g32
15:36:51 249  ,chf_g33
15:36:51 250  ,chf_g34
15:36:51 251  ,chf_g35
15:36:51 252  ,chf_g36
15:36:51 253  ,chf_g37
15:36:51 254  ,chf_g38
15:36:51 255  ,chf_g39
15:36:51 256  ,chf_g40
15:36:51 257  ,chf_g41
15:36:51 258  FROM aud_ms6 m
15:36:51 259  WHERE gatt IN('nup','up')
15:36:51 260  AND 1+m.ydate < '&1'||' '||'&2'
15:36:51 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'15:25:00'

View created.

Elapsed: 00:00:00.12
15:36:51 SQL> 
15:36:51 SQL> -- rpt
15:36:51 SQL> 
15:36:51 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
15:36:51   2  
15:36:51 SQL> SELECT MAX(prdate) FROM bme
15:36:51   2  
15:36:51 SQL> -- Now build model from bme and score sme
15:36:51 SQL> @score1.sql
15:36:51 SQL> -- score1.sql
15:36:51 SQL> 
15:36:51 SQL> -- Does the 1st SVM score
15:36:51 SQL> 
15:36:51 SQL> -- Fill up svmc_apply_prep
15:36:51 SQL> @score.sql
15:36:51 SQL> --
15:36:51 SQL> -- score.sql
15:36:51 SQL> --
15:36:51 SQL> 
15:36:51 SQL> -- usage: score.sql
15:36:51 SQL> 
15:36:51 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:36:51 SQL> 
15:36:51 SQL> DEFINE target	= 'gatt'
15:36:52 SQL> DEFINE model_name = 'forex15'
15:36:52 SQL> DEFINE bldtable	= 'bme'
15:36:52 SQL> DEFINE scoretable = 'sme'
15:36:52 SQL> DEFINE case_id	= 'prdate'
15:36:52 SQL> 
15:36:52 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:36:52 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:36:52 SQL> 
15:36:52 SQL> -- Builds an SVM model using pl/sql.
15:36:52 SQL> 
15:36:52 SQL> -----------------------------------------------------------------------
15:36:52 SQL> --			    BUILD THE MODEL
15:36:52 SQL> -----------------------------------------------------------------------
15:36:52 SQL> 
15:36:52 SQL> -- Cleanup old build data preparation objects for repeat runs
15:36:52 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
15:36:52 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:36:52 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
15:36:52 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
15:36:52 SQL> 
15:36:52 SQL> 
15:36:52 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:36:52 SQL> --
15:36:52 SQL> -- DROP	TABLE svmc_settings ;
15:36:52 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:36:52 SQL> -- DELETE svmc_settings;
15:36:52 SQL> 
15:36:52 SQL> -- The default classification algorithm is Naive Bayes. So override
15:36:52 SQL> -- this choice to SVM using a settings table.
15:36:52 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:36:52 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:36:52 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:36:52 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:36:52 SQL> -- models.
15:36:52 SQL> --
15:36:52 SQL> 
15:36:52 SQL> -- Do this once and then comment it out.
15:36:52 SQL> -- That makes script go faster.
15:36:52 SQL> -- BEGIN
15:36:52 SQL> -- -- Populate settings table
15:36:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:36:52 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:36:52 SQL> --
15:36:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:36:52 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:36:52 SQL> --
15:36:52 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:36:52 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:36:52 SQL> --   COMMIT;
15:36:52 SQL> -- END;
15:36:52 SQL> -- /
15:36:52 SQL> 
15:36:52 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:36:52 SQL> 
15:36:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:36:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:36:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:36:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:36:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:36:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:36:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:36:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:36:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:36:52 SQL> 
15:36:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:36:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:36:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
15:36:52 SQL> 
15:36:52 SQL> --------------------------------
15:36:52 SQL> -- PREPARE BUILD (TRAINING) DATA
15:36:52 SQL> --
15:36:52 SQL> 
15:36:52 SQL> -- 1. Missing Value treatment for all Predictors and
15:36:52 SQL> -- 2. Outlier Treatment and
15:36:52 SQL> -- 3. Normalization are performed below.
15:36:52 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:36:52 SQL> --    normalized here.
15:36:52 SQL> 
15:36:52 SQL> BEGIN
15:36:52   2  	-- Perform missing value treatment for all predictors
15:36:52   3  	-- create miss tables
15:36:52   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:36:52   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:36:52   6  
15:36:52   7  	-- populate miss tables
15:36:52   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:36:52   9  	  miss_table_name => 'svmc_miss_num',
15:36:52  10  	  data_table_name => '&bldtable',
15:36:52  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:36:52  12  
15:36:52  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:36:52  14  	  miss_table_name => 'svmc_miss_cat',
15:36:52  15  	  data_table_name => '&bldtable',
15:36:52  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:36:52  17  
15:36:52  18  	-- xform input data to replace missing values
15:36:52  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:36:52  20  	  miss_table_name => 'svmc_miss_num',
15:36:52  21  	  data_table_name => '&bldtable',
15:36:52  22  	  xform_view_name => 'xformed_build_miss_num');
15:36:52  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:36:52  24  	  miss_table_name => 'svmc_miss_cat',
15:36:52  25  	  data_table_name => '&bldtable',
15:36:52  26  	  xform_view_name => 'xformed_build_miss_cat');
15:36:52  27  
15:36:52  28  	-- Perform outlier treatment.
15:36:52  29  	-- create clip table
15:36:52  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:36:52  31  
15:36:52  32  	-- populate clip table
15:36:52  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:36:52  34  	  clip_table_name => 'svmc_clip',
15:36:52  35  	  data_table_name => '&bldtable',
15:36:52  36  	  tail_frac	  => 0.025,
15:36:52  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:36:52  38  
15:36:52  39  	-- xform input data to winsorized data
15:36:52  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:36:52  41  	  clip_table_name => 'svmc_clip',
15:36:52  42  	  data_table_name => '&bldtable',
15:36:52  43  	  xform_view_name => 'svmc_winsor');
15:36:52  44  
15:36:52  45  	-- create normalization table
15:36:52  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:36:52  47  
15:36:52  48  	-- populate normalization table based on winsorized data
15:36:52  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:36:52  50  	  norm_table_name => 'svmc_norm',
15:36:52  51  	  data_table_name => 'svmc_winsor',
15:36:52  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:36:52  53  
15:36:52  54  	-- normalize the original data
15:36:52  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:36:52  56  	  norm_table_name => 'svmc_norm',
15:36:52  57  	  data_table_name => '&bldtable',
15:36:52  58  	  xform_view_name => 'svmc_build_prep');
15:36:52  59  END;
15:36:52  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.61
15:37:10 SQL> 
15:37:10 SQL> ---------------------
15:37:10 SQL> -- CREATE A NEW MODEL
15:37:10 SQL> --
15:37:10 SQL> -- Cleanup old model with the same name for repeat runs
15:37:10 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:37:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:37:10   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:03.07
15:37:13 SQL> 
15:37:13 SQL> -- Build a new SVM Model
15:37:13 SQL> BEGIN
15:37:13   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:37:13   3  	  model_name	      => '&model_name',
15:37:13   4  	  mining_function     => dbms_data_mining.classification,
15:37:13   5  	  data_table_name     => 'svmc_build_prep',
15:37:13   6  	  case_id_column_name => '&case_id',
15:37:13   7  	  target_column_name  => '&target',
15:37:13   8  	  settings_table_name => 'svmc_settings');
15:37:13   9  END;
15:37:13  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.45
15:37:43 SQL> 
15:37:43 SQL> -----------------------------------------------------------------------
15:37:43 SQL> --			       APPLY/score THE MODEL
15:37:43 SQL> -----------------------------------------------------------------------
15:37:43 SQL> 
15:37:43 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:37:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:37:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:37:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:37:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:37:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:37:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:37:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:37:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:37:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:37:43 SQL> -----------------------
15:37:43 SQL> -- PREPARE SCORING DATA
15:37:43 SQL> --
15:37:43 SQL> -- If the data for model creation has been prepared, then the data
15:37:43 SQL> -- to be scored using the model must be prepared in the same manner
15:37:43 SQL> -- in order to obtain meaningful results.
15:37:43 SQL> --
15:37:43 SQL> -- 1. Missing Value treatment for all Predictors and
15:37:43 SQL> -- 2. Normalization
15:37:43 SQL> -- No outlier treatment will be performed during test and apply. The
15:37:43 SQL> -- normalization step is sufficient, since the normalization parameters
15:37:43 SQL> -- already capture the effects of outlier treatment done with build data.
15:37:43 SQL> --
15:37:43 SQL> BEGIN
15:37:43   2  	-- Xform Test data to replace missing values
15:37:43   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:37:43   4  	  miss_table_name => 'svmc_miss_num',
15:37:43   5  	  data_table_name => '&scoretable',
15:37:43   6  	  xform_view_name => 'xformed_apply_miss_num');
15:37:43   7  
15:37:43   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:37:43   9  	  miss_table_name => 'svmc_miss_cat',
15:37:43  10  	  data_table_name => '&scoretable',
15:37:43  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:37:43  12  
15:37:43  13  	-- Normalize the data to be scored
15:37:43  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:37:43  15  	  norm_table_name => 'svmc_norm',
15:37:43  16  	  data_table_name => '&scoretable',
15:37:43  17  	  xform_view_name => 'svmc_apply_prep');
15:37:43  18  END;
15:37:43  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.36
15:37:44 SQL> 
15:37:44 SQL> -- Use same model_name used in score.sql
15:37:44 SQL> DEFINE model_name = 'forex15'
15:37:44 SQL> 
15:37:44 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
15:37:44 SQL> 
15:37:44 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
15:37:45 SQL> 
15:37:45 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
15:37:45   2  SELECT
15:37:45   3  prdate
15:37:45   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:37:45   5  ,sysdate
15:37:45   6  ,SUBSTR(prdate,1,3)pair
15:37:45   7  ,SUBSTR(prdate,4,19)ydate
15:37:45   8  FROM svmc_apply_prep
15:37:45   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:37:45 SQL> @aud_score1day_gattn.sql	2011-01-07 15:10:00
15:37:45 SQL> --
15:37:45 SQL> -- aud_score1day_gattn.sql
15:37:45 SQL> --
15:37:45 SQL> 
15:37:45 SQL> CREATE OR REPLACE VIEW sme AS
15:37:45   2  SELECT
15:37:45   3  'aud'||m.ydate prdate
15:37:45   4  ,NULL gattn
15:37:45   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:37:45   6  ,eur_g00
15:37:45   7  ,eur_g01
15:37:45   8  ,eur_g02
15:37:45   9  ,eur_g03
15:37:45  10  ,eur_g04
15:37:45  11  ,eur_g05
15:37:45  12  ,eur_g06
15:37:45  13  ,eur_g07
15:37:45  14  ,eur_g08
15:37:45  15  ,eur_g09
15:37:45  16  ,eur_g10
15:37:45  17  ,eur_g11
15:37:45  18  ,eur_g12
15:37:45  19  ,eur_g13
15:37:45  20  ,eur_g14
15:37:45  21  ,eur_g15
15:37:45  22  ,eur_g16
15:37:45  23  ,eur_g17
15:37:45  24  ,eur_g18
15:37:45  25  ,eur_g19
15:37:45  26  ,eur_g20
15:37:45  27  ,eur_g21
15:37:45  28  ,eur_g22
15:37:45  29  ,eur_g23
15:37:45  30  ,eur_g24
15:37:45  31  ,eur_g25
15:37:45  32  ,eur_g26
15:37:45  33  ,eur_g27
15:37:45  34  ,eur_g28
15:37:45  35  ,eur_g29
15:37:45  36  ,eur_g30
15:37:45  37  ,eur_g31
15:37:45  38  ,eur_g32
15:37:45  39  ,eur_g33
15:37:45  40  ,eur_g34
15:37:45  41  ,eur_g35
15:37:45  42  ,eur_g36
15:37:45  43  ,eur_g37
15:37:45  44  ,eur_g38
15:37:45  45  ,eur_g39
15:37:45  46  ,eur_g40
15:37:45  47  ,eur_g41
15:37:45  48  ,aud_g00
15:37:45  49  ,aud_g01
15:37:45  50  ,aud_g02
15:37:45  51  ,aud_g03
15:37:45  52  ,aud_g04
15:37:45  53  ,aud_g05
15:37:45  54  ,aud_g06
15:37:45  55  ,aud_g07
15:37:45  56  ,aud_g08
15:37:45  57  ,aud_g09
15:37:45  58  ,aud_g10
15:37:45  59  ,aud_g11
15:37:45  60  ,aud_g12
15:37:45  61  ,aud_g13
15:37:45  62  ,aud_g14
15:37:45  63  ,aud_g15
15:37:45  64  ,aud_g16
15:37:45  65  ,aud_g17
15:37:45  66  ,aud_g18
15:37:45  67  ,aud_g19
15:37:45  68  ,aud_g20
15:37:45  69  ,aud_g21
15:37:45  70  ,aud_g22
15:37:45  71  ,aud_g23
15:37:45  72  ,aud_g24
15:37:45  73  ,aud_g25
15:37:45  74  ,aud_g26
15:37:45  75  ,aud_g27
15:37:45  76  ,aud_g28
15:37:45  77  ,aud_g29
15:37:45  78  ,aud_g30
15:37:45  79  ,aud_g31
15:37:45  80  ,aud_g32
15:37:45  81  ,aud_g33
15:37:45  82  ,aud_g34
15:37:45  83  ,aud_g35
15:37:45  84  ,aud_g36
15:37:45  85  ,aud_g37
15:37:45  86  ,aud_g38
15:37:45  87  ,aud_g39
15:37:45  88  ,aud_g40
15:37:45  89  ,aud_g41
15:37:45  90  ,gbp_g00
15:37:45  91  ,gbp_g01
15:37:45  92  ,gbp_g02
15:37:45  93  ,gbp_g03
15:37:45  94  ,gbp_g04
15:37:45  95  ,gbp_g05
15:37:45  96  ,gbp_g06
15:37:45  97  ,gbp_g07
15:37:45  98  ,gbp_g08
15:37:45  99  ,gbp_g09
15:37:45 100  ,gbp_g10
15:37:45 101  ,gbp_g11
15:37:45 102  ,gbp_g12
15:37:45 103  ,gbp_g13
15:37:45 104  ,gbp_g14
15:37:45 105  ,gbp_g15
15:37:45 106  ,gbp_g16
15:37:45 107  ,gbp_g17
15:37:45 108  ,gbp_g18
15:37:45 109  ,gbp_g19
15:37:45 110  ,gbp_g20
15:37:45 111  ,gbp_g21
15:37:45 112  ,gbp_g22
15:37:45 113  ,gbp_g23
15:37:45 114  ,gbp_g24
15:37:45 115  ,gbp_g25
15:37:45 116  ,gbp_g26
15:37:45 117  ,gbp_g27
15:37:45 118  ,gbp_g28
15:37:45 119  ,gbp_g29
15:37:45 120  ,gbp_g30
15:37:45 121  ,gbp_g31
15:37:45 122  ,gbp_g32
15:37:45 123  ,gbp_g33
15:37:45 124  ,gbp_g34
15:37:45 125  ,gbp_g35
15:37:45 126  ,gbp_g36
15:37:45 127  ,gbp_g37
15:37:45 128  ,gbp_g38
15:37:45 129  ,gbp_g39
15:37:45 130  ,gbp_g40
15:37:45 131  ,gbp_g41
15:37:45 132  ,jpy_g00
15:37:45 133  ,jpy_g01
15:37:45 134  ,jpy_g02
15:37:45 135  ,jpy_g03
15:37:45 136  ,jpy_g04
15:37:45 137  ,jpy_g05
15:37:45 138  ,jpy_g06
15:37:45 139  ,jpy_g07
15:37:45 140  ,jpy_g08
15:37:45 141  ,jpy_g09
15:37:45 142  ,jpy_g10
15:37:45 143  ,jpy_g11
15:37:45 144  ,jpy_g12
15:37:45 145  ,jpy_g13
15:37:45 146  ,jpy_g14
15:37:45 147  ,jpy_g15
15:37:45 148  ,jpy_g16
15:37:45 149  ,jpy_g17
15:37:45 150  ,jpy_g18
15:37:45 151  ,jpy_g19
15:37:45 152  ,jpy_g20
15:37:45 153  ,jpy_g21
15:37:45 154  ,jpy_g22
15:37:45 155  ,jpy_g23
15:37:45 156  ,jpy_g24
15:37:45 157  ,jpy_g25
15:37:45 158  ,jpy_g26
15:37:45 159  ,jpy_g27
15:37:45 160  ,jpy_g28
15:37:45 161  ,jpy_g29
15:37:45 162  ,jpy_g30
15:37:45 163  ,jpy_g31
15:37:45 164  ,jpy_g32
15:37:45 165  ,jpy_g33
15:37:45 166  ,jpy_g34
15:37:45 167  ,jpy_g35
15:37:45 168  ,jpy_g36
15:37:45 169  ,jpy_g37
15:37:45 170  ,jpy_g38
15:37:45 171  ,jpy_g39
15:37:45 172  ,jpy_g40
15:37:45 173  ,jpy_g41
15:37:45 174  ,cad_g00
15:37:45 175  ,cad_g01
15:37:45 176  ,cad_g02
15:37:45 177  ,cad_g03
15:37:45 178  ,cad_g04
15:37:45 179  ,cad_g05
15:37:45 180  ,cad_g06
15:37:45 181  ,cad_g07
15:37:45 182  ,cad_g08
15:37:45 183  ,cad_g09
15:37:45 184  ,cad_g10
15:37:45 185  ,cad_g11
15:37:45 186  ,cad_g12
15:37:45 187  ,cad_g13
15:37:45 188  ,cad_g14
15:37:45 189  ,cad_g15
15:37:45 190  ,cad_g16
15:37:45 191  ,cad_g17
15:37:45 192  ,cad_g18
15:37:45 193  ,cad_g19
15:37:45 194  ,cad_g20
15:37:45 195  ,cad_g21
15:37:45 196  ,cad_g22
15:37:45 197  ,cad_g23
15:37:45 198  ,cad_g24
15:37:45 199  ,cad_g25
15:37:45 200  ,cad_g26
15:37:45 201  ,cad_g27
15:37:45 202  ,cad_g28
15:37:45 203  ,cad_g29
15:37:45 204  ,cad_g30
15:37:45 205  ,cad_g31
15:37:45 206  ,cad_g32
15:37:45 207  ,cad_g33
15:37:45 208  ,cad_g34
15:37:45 209  ,cad_g35
15:37:45 210  ,cad_g36
15:37:45 211  ,cad_g37
15:37:45 212  ,cad_g38
15:37:45 213  ,cad_g39
15:37:45 214  ,cad_g40
15:37:45 215  ,cad_g41
15:37:45 216  ,chf_g00
15:37:45 217  ,chf_g01
15:37:45 218  ,chf_g02
15:37:45 219  ,chf_g03
15:37:45 220  ,chf_g04
15:37:45 221  ,chf_g05
15:37:45 222  ,chf_g06
15:37:45 223  ,chf_g07
15:37:45 224  ,chf_g08
15:37:45 225  ,chf_g09
15:37:45 226  ,chf_g10
15:37:45 227  ,chf_g11
15:37:45 228  ,chf_g12
15:37:45 229  ,chf_g13
15:37:45 230  ,chf_g14
15:37:45 231  ,chf_g15
15:37:45 232  ,chf_g16
15:37:45 233  ,chf_g17
15:37:45 234  ,chf_g18
15:37:45 235  ,chf_g19
15:37:45 236  ,chf_g20
15:37:45 237  ,chf_g21
15:37:45 238  ,chf_g22
15:37:45 239  ,chf_g23
15:37:45 240  ,chf_g24
15:37:45 241  ,chf_g25
15:37:45 242  ,chf_g26
15:37:45 243  ,chf_g27
15:37:45 244  ,chf_g28
15:37:45 245  ,chf_g29
15:37:45 246  ,chf_g30
15:37:45 247  ,chf_g31
15:37:45 248  ,chf_g32
15:37:45 249  ,chf_g33
15:37:45 250  ,chf_g34
15:37:45 251  ,chf_g35
15:37:45 252  ,chf_g36
15:37:45 253  ,chf_g37
15:37:45 254  ,chf_g38
15:37:45 255  ,chf_g39
15:37:45 256  ,chf_g40
15:37:45 257  ,chf_g41
15:37:45 258  FROM aud_ms6 m
15:37:45 259  WHERE m.ydate = '&1'||' '||'&2'
15:37:45 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'15:10:00'

View created.

Elapsed: 00:00:00.11
15:37:45 SQL> 
15:37:45 SQL> -- rpt
15:37:45 SQL> -- We should see just 1 row:
15:37:45 SQL> 
15:37:45 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
15:37:45 SQL> 
15:37:45 SQL> -- Build the model:
15:37:45 SQL> CREATE OR REPLACE VIEW bme AS
15:37:45   2  SELECT
15:37:45   3  'aud'||m.ydate prdate
15:37:45   4  ,gattn
15:37:45   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:37:45   6  ,eur_g00
15:37:45   7  ,eur_g01
15:37:45   8  ,eur_g02
15:37:45   9  ,eur_g03
15:37:45  10  ,eur_g04
15:37:45  11  ,eur_g05
15:37:45  12  ,eur_g06
15:37:45  13  ,eur_g07
15:37:45  14  ,eur_g08
15:37:45  15  ,eur_g09
15:37:45  16  ,eur_g10
15:37:45  17  ,eur_g11
15:37:45  18  ,eur_g12
15:37:45  19  ,eur_g13
15:37:45  20  ,eur_g14
15:37:45  21  ,eur_g15
15:37:45  22  ,eur_g16
15:37:45  23  ,eur_g17
15:37:45  24  ,eur_g18
15:37:45  25  ,eur_g19
15:37:45  26  ,eur_g20
15:37:45  27  ,eur_g21
15:37:45  28  ,eur_g22
15:37:45  29  ,eur_g23
15:37:45  30  ,eur_g24
15:37:45  31  ,eur_g25
15:37:45  32  ,eur_g26
15:37:45  33  ,eur_g27
15:37:45  34  ,eur_g28
15:37:45  35  ,eur_g29
15:37:45  36  ,eur_g30
15:37:45  37  ,eur_g31
15:37:45  38  ,eur_g32
15:37:45  39  ,eur_g33
15:37:45  40  ,eur_g34
15:37:45  41  ,eur_g35
15:37:45  42  ,eur_g36
15:37:45  43  ,eur_g37
15:37:45  44  ,eur_g38
15:37:45  45  ,eur_g39
15:37:45  46  ,eur_g40
15:37:45  47  ,eur_g41
15:37:45  48  ,aud_g00
15:37:45  49  ,aud_g01
15:37:45  50  ,aud_g02
15:37:45  51  ,aud_g03
15:37:45  52  ,aud_g04
15:37:45  53  ,aud_g05
15:37:45  54  ,aud_g06
15:37:45  55  ,aud_g07
15:37:45  56  ,aud_g08
15:37:45  57  ,aud_g09
15:37:45  58  ,aud_g10
15:37:45  59  ,aud_g11
15:37:45  60  ,aud_g12
15:37:45  61  ,aud_g13
15:37:45  62  ,aud_g14
15:37:45  63  ,aud_g15
15:37:45  64  ,aud_g16
15:37:45  65  ,aud_g17
15:37:45  66  ,aud_g18
15:37:45  67  ,aud_g19
15:37:45  68  ,aud_g20
15:37:45  69  ,aud_g21
15:37:45  70  ,aud_g22
15:37:45  71  ,aud_g23
15:37:45  72  ,aud_g24
15:37:45  73  ,aud_g25
15:37:45  74  ,aud_g26
15:37:45  75  ,aud_g27
15:37:45  76  ,aud_g28
15:37:45  77  ,aud_g29
15:37:45  78  ,aud_g30
15:37:45  79  ,aud_g31
15:37:45  80  ,aud_g32
15:37:45  81  ,aud_g33
15:37:45  82  ,aud_g34
15:37:45  83  ,aud_g35
15:37:45  84  ,aud_g36
15:37:45  85  ,aud_g37
15:37:45  86  ,aud_g38
15:37:45  87  ,aud_g39
15:37:45  88  ,aud_g40
15:37:45  89  ,aud_g41
15:37:45  90  ,gbp_g00
15:37:45  91  ,gbp_g01
15:37:45  92  ,gbp_g02
15:37:45  93  ,gbp_g03
15:37:45  94  ,gbp_g04
15:37:45  95  ,gbp_g05
15:37:45  96  ,gbp_g06
15:37:45  97  ,gbp_g07
15:37:45  98  ,gbp_g08
15:37:45  99  ,gbp_g09
15:37:45 100  ,gbp_g10
15:37:45 101  ,gbp_g11
15:37:45 102  ,gbp_g12
15:37:45 103  ,gbp_g13
15:37:45 104  ,gbp_g14
15:37:45 105  ,gbp_g15
15:37:45 106  ,gbp_g16
15:37:45 107  ,gbp_g17
15:37:45 108  ,gbp_g18
15:37:45 109  ,gbp_g19
15:37:45 110  ,gbp_g20
15:37:45 111  ,gbp_g21
15:37:45 112  ,gbp_g22
15:37:45 113  ,gbp_g23
15:37:45 114  ,gbp_g24
15:37:45 115  ,gbp_g25
15:37:45 116  ,gbp_g26
15:37:45 117  ,gbp_g27
15:37:45 118  ,gbp_g28
15:37:45 119  ,gbp_g29
15:37:45 120  ,gbp_g30
15:37:45 121  ,gbp_g31
15:37:45 122  ,gbp_g32
15:37:45 123  ,gbp_g33
15:37:45 124  ,gbp_g34
15:37:45 125  ,gbp_g35
15:37:45 126  ,gbp_g36
15:37:45 127  ,gbp_g37
15:37:45 128  ,gbp_g38
15:37:45 129  ,gbp_g39
15:37:45 130  ,gbp_g40
15:37:45 131  ,gbp_g41
15:37:45 132  ,jpy_g00
15:37:45 133  ,jpy_g01
15:37:45 134  ,jpy_g02
15:37:45 135  ,jpy_g03
15:37:45 136  ,jpy_g04
15:37:45 137  ,jpy_g05
15:37:45 138  ,jpy_g06
15:37:45 139  ,jpy_g07
15:37:45 140  ,jpy_g08
15:37:45 141  ,jpy_g09
15:37:45 142  ,jpy_g10
15:37:45 143  ,jpy_g11
15:37:45 144  ,jpy_g12
15:37:45 145  ,jpy_g13
15:37:45 146  ,jpy_g14
15:37:45 147  ,jpy_g15
15:37:45 148  ,jpy_g16
15:37:45 149  ,jpy_g17
15:37:45 150  ,jpy_g18
15:37:45 151  ,jpy_g19
15:37:45 152  ,jpy_g20
15:37:45 153  ,jpy_g21
15:37:45 154  ,jpy_g22
15:37:45 155  ,jpy_g23
15:37:45 156  ,jpy_g24
15:37:45 157  ,jpy_g25
15:37:45 158  ,jpy_g26
15:37:45 159  ,jpy_g27
15:37:45 160  ,jpy_g28
15:37:45 161  ,jpy_g29
15:37:45 162  ,jpy_g30
15:37:45 163  ,jpy_g31
15:37:45 164  ,jpy_g32
15:37:45 165  ,jpy_g33
15:37:45 166  ,jpy_g34
15:37:45 167  ,jpy_g35
15:37:45 168  ,jpy_g36
15:37:45 169  ,jpy_g37
15:37:45 170  ,jpy_g38
15:37:45 171  ,jpy_g39
15:37:45 172  ,jpy_g40
15:37:45 173  ,jpy_g41
15:37:45 174  ,cad_g00
15:37:45 175  ,cad_g01
15:37:45 176  ,cad_g02
15:37:45 177  ,cad_g03
15:37:45 178  ,cad_g04
15:37:45 179  ,cad_g05
15:37:45 180  ,cad_g06
15:37:45 181  ,cad_g07
15:37:45 182  ,cad_g08
15:37:45 183  ,cad_g09
15:37:45 184  ,cad_g10
15:37:45 185  ,cad_g11
15:37:45 186  ,cad_g12
15:37:45 187  ,cad_g13
15:37:45 188  ,cad_g14
15:37:45 189  ,cad_g15
15:37:45 190  ,cad_g16
15:37:45 191  ,cad_g17
15:37:45 192  ,cad_g18
15:37:45 193  ,cad_g19
15:37:45 194  ,cad_g20
15:37:45 195  ,cad_g21
15:37:45 196  ,cad_g22
15:37:45 197  ,cad_g23
15:37:45 198  ,cad_g24
15:37:45 199  ,cad_g25
15:37:45 200  ,cad_g26
15:37:45 201  ,cad_g27
15:37:45 202  ,cad_g28
15:37:45 203  ,cad_g29
15:37:45 204  ,cad_g30
15:37:45 205  ,cad_g31
15:37:45 206  ,cad_g32
15:37:45 207  ,cad_g33
15:37:45 208  ,cad_g34
15:37:45 209  ,cad_g35
15:37:45 210  ,cad_g36
15:37:45 211  ,cad_g37
15:37:45 212  ,cad_g38
15:37:45 213  ,cad_g39
15:37:45 214  ,cad_g40
15:37:45 215  ,cad_g41
15:37:45 216  ,chf_g00
15:37:45 217  ,chf_g01
15:37:45 218  ,chf_g02
15:37:45 219  ,chf_g03
15:37:45 220  ,chf_g04
15:37:45 221  ,chf_g05
15:37:45 222  ,chf_g06
15:37:45 223  ,chf_g07
15:37:45 224  ,chf_g08
15:37:45 225  ,chf_g09
15:37:45 226  ,chf_g10
15:37:45 227  ,chf_g11
15:37:45 228  ,chf_g12
15:37:45 229  ,chf_g13
15:37:45 230  ,chf_g14
15:37:45 231  ,chf_g15
15:37:45 232  ,chf_g16
15:37:45 233  ,chf_g17
15:37:45 234  ,chf_g18
15:37:45 235  ,chf_g19
15:37:45 236  ,chf_g20
15:37:45 237  ,chf_g21
15:37:45 238  ,chf_g22
15:37:45 239  ,chf_g23
15:37:45 240  ,chf_g24
15:37:45 241  ,chf_g25
15:37:45 242  ,chf_g26
15:37:45 243  ,chf_g27
15:37:45 244  ,chf_g28
15:37:45 245  ,chf_g29
15:37:45 246  ,chf_g30
15:37:45 247  ,chf_g31
15:37:45 248  ,chf_g32
15:37:45 249  ,chf_g33
15:37:45 250  ,chf_g34
15:37:45 251  ,chf_g35
15:37:45 252  ,chf_g36
15:37:45 253  ,chf_g37
15:37:45 254  ,chf_g38
15:37:45 255  ,chf_g39
15:37:45 256  ,chf_g40
15:37:45 257  ,chf_g41
15:37:45 258  FROM aud_ms6 m
15:37:45 259  WHERE gattn IN('nup','up')
15:37:45 260  AND 1+m.ydate < '&1'||' '||'&2'
15:37:45 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'15:10:00'

View created.

Elapsed: 00:00:00.13
15:37:45 SQL> 
15:37:45 SQL> -- rpt
15:37:45 SQL> 
15:37:45 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12873
up	     6635

Elapsed: 00:00:00.04
15:37:45 SQL> 
15:37:45 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-06 15:05:00

Elapsed: 00:00:00.03
15:37:45 SQL> 
15:37:45 SQL> -- Now build model from bme and score sme
15:37:45 SQL> @score1gattn.sql
15:37:45 SQL> -- score1gattn.sql
15:37:45 SQL> 
15:37:45 SQL> -- Does the 1st SVM score
15:37:45 SQL> 
15:37:45 SQL> -- Fill up svmc_apply_prep
15:37:45 SQL> @score_gattn.sql
15:37:45 SQL> --
15:37:45 SQL> -- score_gattn.sql
15:37:45 SQL> --
15:37:45 SQL> 
15:37:45 SQL> -- usage: score_gattn.sql
15:37:45 SQL> 
15:37:45 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:37:45 SQL> 
15:37:45 SQL> DEFINE target	= 'gattn'
15:37:45 SQL> DEFINE model_name = 'forex15'
15:37:45 SQL> DEFINE bldtable	= 'bme'
15:37:45 SQL> DEFINE scoretable = 'sme'
15:37:45 SQL> DEFINE case_id	= 'prdate'
15:37:45 SQL> 
15:37:45 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:37:45 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:37:45 SQL> 
15:37:45 SQL> -- Builds an SVM model using pl/sql.
15:37:45 SQL> 
15:37:45 SQL> -----------------------------------------------------------------------
15:37:45 SQL> --			    BUILD THE MODEL
15:37:45 SQL> -----------------------------------------------------------------------
15:37:45 SQL> 
15:37:45 SQL> -- Cleanup old build data preparation objects for repeat runs
15:37:45 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
15:37:45 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:37:45 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
15:37:45 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
15:37:45 SQL> 
15:37:45 SQL> 
15:37:45 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:37:45 SQL> --
15:37:45 SQL> -- DROP	TABLE svmc_settings ;
15:37:45 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:37:45 SQL> -- DELETE svmc_settings;
15:37:45 SQL> 
15:37:45 SQL> -- The default classification algorithm is Naive Bayes. So override
15:37:45 SQL> -- this choice to SVM using a settings table.
15:37:45 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:37:45 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:37:45 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:37:45 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:37:45 SQL> -- models.
15:37:45 SQL> --
15:37:45 SQL> 
15:37:45 SQL> -- Do this once and then comment it out.
15:37:45 SQL> -- That makes script go faster.
15:37:45 SQL> -- BEGIN
15:37:45 SQL> -- -- Populate settings table
15:37:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:37:45 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:37:45 SQL> --
15:37:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:37:45 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:37:45 SQL> --
15:37:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:37:45 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:37:45 SQL> --   COMMIT;
15:37:45 SQL> -- END;
15:37:45 SQL> -- /
15:37:45 SQL> 
15:37:45 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:37:45 SQL> 
15:37:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:37:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:37:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:37:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:37:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:37:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:37:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:37:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:37:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:37:45 SQL> 
15:37:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:37:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:37:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:37:45 SQL> 
15:37:45 SQL> --------------------------------
15:37:45 SQL> -- PREPARE BUILD (TRAINING) DATA
15:37:45 SQL> --
15:37:45 SQL> 
15:37:45 SQL> -- 1. Missing Value treatment for all Predictors and
15:37:45 SQL> -- 2. Outlier Treatment and
15:37:45 SQL> -- 3. Normalization are performed below.
15:37:45 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:37:45 SQL> --    normalized here.
15:37:45 SQL> 
15:37:45 SQL> BEGIN
15:37:45   2  	-- Perform missing value treatment for all predictors
15:37:45   3  	-- create miss tables
15:37:45   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:37:45   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:37:45   6  
15:37:45   7  	-- populate miss tables
15:37:45   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:37:45   9  	  miss_table_name => 'svmc_miss_num',
15:37:45  10  	  data_table_name => '&bldtable',
15:37:45  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:37:45  12  
15:37:45  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:37:45  14  	  miss_table_name => 'svmc_miss_cat',
15:37:45  15  	  data_table_name => '&bldtable',
15:37:45  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:37:45  17  
15:37:45  18  	-- xform input data to replace missing values
15:37:45  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:37:45  20  	  miss_table_name => 'svmc_miss_num',
15:37:45  21  	  data_table_name => '&bldtable',
15:37:45  22  	  xform_view_name => 'xformed_build_miss_num');
15:37:45  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:37:45  24  	  miss_table_name => 'svmc_miss_cat',
15:37:45  25  	  data_table_name => '&bldtable',
15:37:45  26  	  xform_view_name => 'xformed_build_miss_cat');
15:37:45  27  
15:37:45  28  	-- Perform outlier treatment.
15:37:45  29  	-- create clip table
15:37:45  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:37:45  31  
15:37:45  32  	-- populate clip table
15:37:45  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:37:45  34  	  clip_table_name => 'svmc_clip',
15:37:45  35  	  data_table_name => '&bldtable',
15:37:45  36  	  tail_frac	  => 0.025,
15:37:45  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:37:45  38  
15:37:45  39  	-- xform input data to winsorized data
15:37:45  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:37:45  41  	  clip_table_name => 'svmc_clip',
15:37:45  42  	  data_table_name => '&bldtable',
15:37:45  43  	  xform_view_name => 'svmc_winsor');
15:37:45  44  
15:37:45  45  	-- create normalization table
15:37:45  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:37:45  47  
15:37:45  48  	-- populate normalization table based on winsorized data
15:37:45  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:37:45  50  	  norm_table_name => 'svmc_norm',
15:37:45  51  	  data_table_name => 'svmc_winsor',
15:37:45  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:37:45  53  
15:37:45  54  	-- normalize the original data
15:37:45  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:37:45  56  	  norm_table_name => 'svmc_norm',
15:37:45  57  	  data_table_name => '&bldtable',
15:37:45  58  	  xform_view_name => 'svmc_build_prep');
15:37:45  59  END;
15:37:45  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.86
15:38:04 SQL> 
15:38:04 SQL> ---------------------
15:38:04 SQL> -- CREATE A NEW MODEL
15:38:04 SQL> --
15:38:04 SQL> -- Cleanup old model with the same name for repeat runs
15:38:04 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:38:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:38:04   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
15:38:05 SQL> 
15:38:05 SQL> -- Build a new SVM Model
15:38:05 SQL> BEGIN
15:38:05   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:38:05   3  	  model_name	      => '&model_name',
15:38:05   4  	  mining_function     => dbms_data_mining.classification,
15:38:05   5  	  data_table_name     => 'svmc_build_prep',
15:38:05   6  	  case_id_column_name => '&case_id',
15:38:05   7  	  target_column_name  => '&target',
15:38:05   8  	  settings_table_name => 'svmc_settings');
15:38:05   9  END;
15:38:05  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:31.41
15:38:37 SQL> 
15:38:37 SQL> -----------------------------------------------------------------------
15:38:37 SQL> --			       APPLY/score THE MODEL
15:38:37 SQL> -----------------------------------------------------------------------
15:38:37 SQL> 
15:38:37 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:38:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:38:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:38:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:38:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:38:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:38:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:38:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:38:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:38:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:38:37 SQL> -----------------------
15:38:37 SQL> -- PREPARE SCORING DATA
15:38:37 SQL> --
15:38:37 SQL> -- If the data for model creation has been prepared, then the data
15:38:37 SQL> -- to be scored using the model must be prepared in the same manner
15:38:37 SQL> -- in order to obtain meaningful results.
15:38:37 SQL> --
15:38:37 SQL> -- 1. Missing Value treatment for all Predictors and
15:38:37 SQL> -- 2. Normalization
15:38:37 SQL> -- No outlier treatment will be performed during test and apply. The
15:38:37 SQL> -- normalization step is sufficient, since the normalization parameters
15:38:37 SQL> -- already capture the effects of outlier treatment done with build data.
15:38:37 SQL> --
15:38:37 SQL> BEGIN
15:38:37   2  	-- Xform Test data to replace missing values
15:38:37   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:38:37   4  	  miss_table_name => 'svmc_miss_num',
15:38:37   5  	  data_table_name => '&scoretable',
15:38:37   6  	  xform_view_name => 'xformed_apply_miss_num');
15:38:37   7  
15:38:37   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:38:37   9  	  miss_table_name => 'svmc_miss_cat',
15:38:37  10  	  data_table_name => '&scoretable',
15:38:37  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:38:37  12  
15:38:37  13  	-- Normalize the data to be scored
15:38:37  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:38:37  15  	  norm_table_name => 'svmc_norm',
15:38:37  16  	  data_table_name => '&scoretable',
15:38:37  17  	  xform_view_name => 'svmc_apply_prep');
15:38:37  18  END;
15:38:37  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.29
15:38:38 SQL> 
15:38:38 SQL> -- Use same model_name used in score_gattn.sql
15:38:38 SQL> DEFINE model_name = 'forex15'
15:38:38 SQL> 
15:38:38 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
15:38:38 SQL> 
15:38:38 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
15:38:38   2  SELECT
15:38:38   3  prdate
15:38:38   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:38:38   5  ,sysdate
15:38:38   6  ,SUBSTR(prdate,1,3)pair
15:38:38   7  ,SUBSTR(prdate,4,19)ydate
15:38:38   8  FROM svmc_apply_prep
15:38:38   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
15:38:38 SQL> @aud_score1day_gattn.sql	2011-01-07 15:15:00
15:38:38 SQL> --
15:38:38 SQL> -- aud_score1day_gattn.sql
15:38:38 SQL> --
15:38:38 SQL> 
15:38:38 SQL> CREATE OR REPLACE VIEW sme AS
15:38:38   2  SELECT
15:38:38   3  'aud'||m.ydate prdate
15:38:38   4  ,NULL gattn
15:38:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:38:38   6  ,eur_g00
15:38:38   7  ,eur_g01
15:38:38   8  ,eur_g02
15:38:38   9  ,eur_g03
15:38:38  10  ,eur_g04
15:38:38  11  ,eur_g05
15:38:38  12  ,eur_g06
15:38:38  13  ,eur_g07
15:38:38  14  ,eur_g08
15:38:38  15  ,eur_g09
15:38:38  16  ,eur_g10
15:38:38  17  ,eur_g11
15:38:38  18  ,eur_g12
15:38:38  19  ,eur_g13
15:38:38  20  ,eur_g14
15:38:38  21  ,eur_g15
15:38:38  22  ,eur_g16
15:38:38  23  ,eur_g17
15:38:38  24  ,eur_g18
15:38:38  25  ,eur_g19
15:38:38  26  ,eur_g20
15:38:38  27  ,eur_g21
15:38:38  28  ,eur_g22
15:38:38  29  ,eur_g23
15:38:38  30  ,eur_g24
15:38:38  31  ,eur_g25
15:38:38  32  ,eur_g26
15:38:38  33  ,eur_g27
15:38:38  34  ,eur_g28
15:38:38  35  ,eur_g29
15:38:38  36  ,eur_g30
15:38:38  37  ,eur_g31
15:38:38  38  ,eur_g32
15:38:38  39  ,eur_g33
15:38:38  40  ,eur_g34
15:38:38  41  ,eur_g35
15:38:38  42  ,eur_g36
15:38:38  43  ,eur_g37
15:38:38  44  ,eur_g38
15:38:38  45  ,eur_g39
15:38:38  46  ,eur_g40
15:38:38  47  ,eur_g41
15:38:38  48  ,aud_g00
15:38:38  49  ,aud_g01
15:38:38  50  ,aud_g02
15:38:38  51  ,aud_g03
15:38:38  52  ,aud_g04
15:38:38  53  ,aud_g05
15:38:38  54  ,aud_g06
15:38:38  55  ,aud_g07
15:38:38  56  ,aud_g08
15:38:38  57  ,aud_g09
15:38:38  58  ,aud_g10
15:38:38  59  ,aud_g11
15:38:38  60  ,aud_g12
15:38:38  61  ,aud_g13
15:38:38  62  ,aud_g14
15:38:38  63  ,aud_g15
15:38:38  64  ,aud_g16
15:38:38  65  ,aud_g17
15:38:38  66  ,aud_g18
15:38:38  67  ,aud_g19
15:38:38  68  ,aud_g20
15:38:38  69  ,aud_g21
15:38:38  70  ,aud_g22
15:38:38  71  ,aud_g23
15:38:38  72  ,aud_g24
15:38:38  73  ,aud_g25
15:38:38  74  ,aud_g26
15:38:38  75  ,aud_g27
15:38:38  76  ,aud_g28
15:38:38  77  ,aud_g29
15:38:38  78  ,aud_g30
15:38:38  79  ,aud_g31
15:38:38  80  ,aud_g32
15:38:38  81  ,aud_g33
15:38:38  82  ,aud_g34
15:38:38  83  ,aud_g35
15:38:38  84  ,aud_g36
15:38:38  85  ,aud_g37
15:38:38  86  ,aud_g38
15:38:38  87  ,aud_g39
15:38:38  88  ,aud_g40
15:38:38  89  ,aud_g41
15:38:38  90  ,gbp_g00
15:38:38  91  ,gbp_g01
15:38:38  92  ,gbp_g02
15:38:38  93  ,gbp_g03
15:38:38  94  ,gbp_g04
15:38:38  95  ,gbp_g05
15:38:38  96  ,gbp_g06
15:38:38  97  ,gbp_g07
15:38:38  98  ,gbp_g08
15:38:38  99  ,gbp_g09
15:38:38 100  ,gbp_g10
15:38:38 101  ,gbp_g11
15:38:38 102  ,gbp_g12
15:38:38 103  ,gbp_g13
15:38:38 104  ,gbp_g14
15:38:38 105  ,gbp_g15
15:38:38 106  ,gbp_g16
15:38:38 107  ,gbp_g17
15:38:38 108  ,gbp_g18
15:38:38 109  ,gbp_g19
15:38:38 110  ,gbp_g20
15:38:38 111  ,gbp_g21
15:38:38 112  ,gbp_g22
15:38:38 113  ,gbp_g23
15:38:38 114  ,gbp_g24
15:38:38 115  ,gbp_g25
15:38:38 116  ,gbp_g26
15:38:38 117  ,gbp_g27
15:38:38 118  ,gbp_g28
15:38:38 119  ,gbp_g29
15:38:38 120  ,gbp_g30
15:38:38 121  ,gbp_g31
15:38:38 122  ,gbp_g32
15:38:38 123  ,gbp_g33
15:38:38 124  ,gbp_g34
15:38:38 125  ,gbp_g35
15:38:38 126  ,gbp_g36
15:38:38 127  ,gbp_g37
15:38:38 128  ,gbp_g38
15:38:38 129  ,gbp_g39
15:38:38 130  ,gbp_g40
15:38:38 131  ,gbp_g41
15:38:38 132  ,jpy_g00
15:38:38 133  ,jpy_g01
15:38:38 134  ,jpy_g02
15:38:38 135  ,jpy_g03
15:38:38 136  ,jpy_g04
15:38:38 137  ,jpy_g05
15:38:38 138  ,jpy_g06
15:38:38 139  ,jpy_g07
15:38:38 140  ,jpy_g08
15:38:38 141  ,jpy_g09
15:38:38 142  ,jpy_g10
15:38:38 143  ,jpy_g11
15:38:38 144  ,jpy_g12
15:38:38 145  ,jpy_g13
15:38:38 146  ,jpy_g14
15:38:38 147  ,jpy_g15
15:38:38 148  ,jpy_g16
15:38:38 149  ,jpy_g17
15:38:38 150  ,jpy_g18
15:38:38 151  ,jpy_g19
15:38:38 152  ,jpy_g20
15:38:38 153  ,jpy_g21
15:38:38 154  ,jpy_g22
15:38:38 155  ,jpy_g23
15:38:38 156  ,jpy_g24
15:38:38 157  ,jpy_g25
15:38:38 158  ,jpy_g26
15:38:38 159  ,jpy_g27
15:38:38 160  ,jpy_g28
15:38:38 161  ,jpy_g29
15:38:38 162  ,jpy_g30
15:38:38 163  ,jpy_g31
15:38:38 164  ,jpy_g32
15:38:38 165  ,jpy_g33
15:38:38 166  ,jpy_g34
15:38:38 167  ,jpy_g35
15:38:38 168  ,jpy_g36
15:38:38 169  ,jpy_g37
15:38:38 170  ,jpy_g38
15:38:38 171  ,jpy_g39
15:38:38 172  ,jpy_g40
15:38:38 173  ,jpy_g41
15:38:38 174  ,cad_g00
15:38:38 175  ,cad_g01
15:38:38 176  ,cad_g02
15:38:38 177  ,cad_g03
15:38:38 178  ,cad_g04
15:38:38 179  ,cad_g05
15:38:38 180  ,cad_g06
15:38:38 181  ,cad_g07
15:38:38 182  ,cad_g08
15:38:38 183  ,cad_g09
15:38:38 184  ,cad_g10
15:38:38 185  ,cad_g11
15:38:38 186  ,cad_g12
15:38:38 187  ,cad_g13
15:38:38 188  ,cad_g14
15:38:38 189  ,cad_g15
15:38:38 190  ,cad_g16
15:38:38 191  ,cad_g17
15:38:38 192  ,cad_g18
15:38:38 193  ,cad_g19
15:38:38 194  ,cad_g20
15:38:38 195  ,cad_g21
15:38:38 196  ,cad_g22
15:38:38 197  ,cad_g23
15:38:38 198  ,cad_g24
15:38:38 199  ,cad_g25
15:38:38 200  ,cad_g26
15:38:38 201  ,cad_g27
15:38:38 202  ,cad_g28
15:38:38 203  ,cad_g29
15:38:38 204  ,cad_g30
15:38:38 205  ,cad_g31
15:38:38 206  ,cad_g32
15:38:38 207  ,cad_g33
15:38:38 208  ,cad_g34
15:38:38 209  ,cad_g35
15:38:38 210  ,cad_g36
15:38:38 211  ,cad_g37
15:38:38 212  ,cad_g38
15:38:38 213  ,cad_g39
15:38:38 214  ,cad_g40
15:38:38 215  ,cad_g41
15:38:38 216  ,chf_g00
15:38:38 217  ,chf_g01
15:38:38 218  ,chf_g02
15:38:38 219  ,chf_g03
15:38:38 220  ,chf_g04
15:38:38 221  ,chf_g05
15:38:38 222  ,chf_g06
15:38:38 223  ,chf_g07
15:38:38 224  ,chf_g08
15:38:38 225  ,chf_g09
15:38:38 226  ,chf_g10
15:38:38 227  ,chf_g11
15:38:38 228  ,chf_g12
15:38:38 229  ,chf_g13
15:38:38 230  ,chf_g14
15:38:38 231  ,chf_g15
15:38:38 232  ,chf_g16
15:38:38 233  ,chf_g17
15:38:38 234  ,chf_g18
15:38:38 235  ,chf_g19
15:38:38 236  ,chf_g20
15:38:38 237  ,chf_g21
15:38:38 238  ,chf_g22
15:38:38 239  ,chf_g23
15:38:38 240  ,chf_g24
15:38:38 241  ,chf_g25
15:38:38 242  ,chf_g26
15:38:38 243  ,chf_g27
15:38:38 244  ,chf_g28
15:38:38 245  ,chf_g29
15:38:38 246  ,chf_g30
15:38:38 247  ,chf_g31
15:38:38 248  ,chf_g32
15:38:38 249  ,chf_g33
15:38:38 250  ,chf_g34
15:38:38 251  ,chf_g35
15:38:38 252  ,chf_g36
15:38:38 253  ,chf_g37
15:38:38 254  ,chf_g38
15:38:38 255  ,chf_g39
15:38:38 256  ,chf_g40
15:38:38 257  ,chf_g41
15:38:38 258  FROM aud_ms6 m
15:38:38 259  WHERE m.ydate = '&1'||' '||'&2'
15:38:38 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'15:15:00'

View created.

Elapsed: 00:00:00.13
15:38:39 SQL> 
15:38:39 SQL> -- rpt
15:38:39 SQL> -- We should see just 1 row:
15:38:39 SQL> 
15:38:39 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
15:38:39 SQL> 
15:38:39 SQL> -- Build the model:
15:38:39 SQL> CREATE OR REPLACE VIEW bme AS
15:38:39   2  SELECT
15:38:39   3  'aud'||m.ydate prdate
15:38:39   4  ,gattn
15:38:39   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:38:39   6  ,eur_g00
15:38:39   7  ,eur_g01
15:38:39   8  ,eur_g02
15:38:39   9  ,eur_g03
15:38:39  10  ,eur_g04
15:38:39  11  ,eur_g05
15:38:39  12  ,eur_g06
15:38:39  13  ,eur_g07
15:38:39  14  ,eur_g08
15:38:39  15  ,eur_g09
15:38:39  16  ,eur_g10
15:38:39  17  ,eur_g11
15:38:39  18  ,eur_g12
15:38:39  19  ,eur_g13
15:38:39  20  ,eur_g14
15:38:39  21  ,eur_g15
15:38:39  22  ,eur_g16
15:38:39  23  ,eur_g17
15:38:39  24  ,eur_g18
15:38:39  25  ,eur_g19
15:38:39  26  ,eur_g20
15:38:39  27  ,eur_g21
15:38:39  28  ,eur_g22
15:38:39  29  ,eur_g23
15:38:39  30  ,eur_g24
15:38:39  31  ,eur_g25
15:38:39  32  ,eur_g26
15:38:39  33  ,eur_g27
15:38:39  34  ,eur_g28
15:38:39  35  ,eur_g29
15:38:39  36  ,eur_g30
15:38:39  37  ,eur_g31
15:38:39  38  ,eur_g32
15:38:39  39  ,eur_g33
15:38:39  40  ,eur_g34
15:38:39  41  ,eur_g35
15:38:39  42  ,eur_g36
15:38:39  43  ,eur_g37
15:38:39  44  ,eur_g38
15:38:39  45  ,eur_g39
15:38:39  46  ,eur_g40
15:38:39  47  ,eur_g41
15:38:39  48  ,aud_g00
15:38:39  49  ,aud_g01
15:38:39  50  ,aud_g02
15:38:39  51  ,aud_g03
15:38:39  52  ,aud_g04
15:38:39  53  ,aud_g05
15:38:39  54  ,aud_g06
15:38:39  55  ,aud_g07
15:38:39  56  ,aud_g08
15:38:39  57  ,aud_g09
15:38:39  58  ,aud_g10
15:38:39  59  ,aud_g11
15:38:39  60  ,aud_g12
15:38:39  61  ,aud_g13
15:38:39  62  ,aud_g14
15:38:39  63  ,aud_g15
15:38:39  64  ,aud_g16
15:38:39  65  ,aud_g17
15:38:39  66  ,aud_g18
15:38:39  67  ,aud_g19
15:38:39  68  ,aud_g20
15:38:39  69  ,aud_g21
15:38:39  70  ,aud_g22
15:38:39  71  ,aud_g23
15:38:39  72  ,aud_g24
15:38:39  73  ,aud_g25
15:38:39  74  ,aud_g26
15:38:39  75  ,aud_g27
15:38:39  76  ,aud_g28
15:38:39  77  ,aud_g29
15:38:39  78  ,aud_g30
15:38:39  79  ,aud_g31
15:38:39  80  ,aud_g32
15:38:39  81  ,aud_g33
15:38:39  82  ,aud_g34
15:38:39  83  ,aud_g35
15:38:39  84  ,aud_g36
15:38:39  85  ,aud_g37
15:38:39  86  ,aud_g38
15:38:39  87  ,aud_g39
15:38:39  88  ,aud_g40
15:38:39  89  ,aud_g41
15:38:39  90  ,gbp_g00
15:38:39  91  ,gbp_g01
15:38:39  92  ,gbp_g02
15:38:39  93  ,gbp_g03
15:38:39  94  ,gbp_g04
15:38:39  95  ,gbp_g05
15:38:39  96  ,gbp_g06
15:38:39  97  ,gbp_g07
15:38:39  98  ,gbp_g08
15:38:39  99  ,gbp_g09
15:38:39 100  ,gbp_g10
15:38:39 101  ,gbp_g11
15:38:39 102  ,gbp_g12
15:38:39 103  ,gbp_g13
15:38:39 104  ,gbp_g14
15:38:39 105  ,gbp_g15
15:38:39 106  ,gbp_g16
15:38:39 107  ,gbp_g17
15:38:39 108  ,gbp_g18
15:38:39 109  ,gbp_g19
15:38:39 110  ,gbp_g20
15:38:39 111  ,gbp_g21
15:38:39 112  ,gbp_g22
15:38:39 113  ,gbp_g23
15:38:39 114  ,gbp_g24
15:38:39 115  ,gbp_g25
15:38:39 116  ,gbp_g26
15:38:39 117  ,gbp_g27
15:38:39 118  ,gbp_g28
15:38:39 119  ,gbp_g29
15:38:39 120  ,gbp_g30
15:38:39 121  ,gbp_g31
15:38:39 122  ,gbp_g32
15:38:39 123  ,gbp_g33
15:38:39 124  ,gbp_g34
15:38:39 125  ,gbp_g35
15:38:39 126  ,gbp_g36
15:38:39 127  ,gbp_g37
15:38:39 128  ,gbp_g38
15:38:39 129  ,gbp_g39
15:38:39 130  ,gbp_g40
15:38:39 131  ,gbp_g41
15:38:39 132  ,jpy_g00
15:38:39 133  ,jpy_g01
15:38:39 134  ,jpy_g02
15:38:39 135  ,jpy_g03
15:38:39 136  ,jpy_g04
15:38:39 137  ,jpy_g05
15:38:39 138  ,jpy_g06
15:38:39 139  ,jpy_g07
15:38:39 140  ,jpy_g08
15:38:39 141  ,jpy_g09
15:38:39 142  ,jpy_g10
15:38:39 143  ,jpy_g11
15:38:39 144  ,jpy_g12
15:38:39 145  ,jpy_g13
15:38:39 146  ,jpy_g14
15:38:39 147  ,jpy_g15
15:38:39 148  ,jpy_g16
15:38:39 149  ,jpy_g17
15:38:39 150  ,jpy_g18
15:38:39 151  ,jpy_g19
15:38:39 152  ,jpy_g20
15:38:39 153  ,jpy_g21
15:38:39 154  ,jpy_g22
15:38:39 155  ,jpy_g23
15:38:39 156  ,jpy_g24
15:38:39 157  ,jpy_g25
15:38:39 158  ,jpy_g26
15:38:39 159  ,jpy_g27
15:38:39 160  ,jpy_g28
15:38:39 161  ,jpy_g29
15:38:39 162  ,jpy_g30
15:38:39 163  ,jpy_g31
15:38:39 164  ,jpy_g32
15:38:39 165  ,jpy_g33
15:38:39 166  ,jpy_g34
15:38:39 167  ,jpy_g35
15:38:39 168  ,jpy_g36
15:38:39 169  ,jpy_g37
15:38:39 170  ,jpy_g38
15:38:39 171  ,jpy_g39
15:38:39 172  ,jpy_g40
15:38:39 173  ,jpy_g41
15:38:39 174  ,cad_g00
15:38:39 175  ,cad_g01
15:38:39 176  ,cad_g02
15:38:39 177  ,cad_g03
15:38:39 178  ,cad_g04
15:38:39 179  ,cad_g05
15:38:39 180  ,cad_g06
15:38:39 181  ,cad_g07
15:38:39 182  ,cad_g08
15:38:39 183  ,cad_g09
15:38:39 184  ,cad_g10
15:38:39 185  ,cad_g11
15:38:39 186  ,cad_g12
15:38:39 187  ,cad_g13
15:38:39 188  ,cad_g14
15:38:39 189  ,cad_g15
15:38:39 190  ,cad_g16
15:38:39 191  ,cad_g17
15:38:39 192  ,cad_g18
15:38:39 193  ,cad_g19
15:38:39 194  ,cad_g20
15:38:39 195  ,cad_g21
15:38:39 196  ,cad_g22
15:38:39 197  ,cad_g23
15:38:39 198  ,cad_g24
15:38:39 199  ,cad_g25
15:38:39 200  ,cad_g26
15:38:39 201  ,cad_g27
15:38:39 202  ,cad_g28
15:38:39 203  ,cad_g29
15:38:39 204  ,cad_g30
15:38:39 205  ,cad_g31
15:38:39 206  ,cad_g32
15:38:39 207  ,cad_g33
15:38:39 208  ,cad_g34
15:38:39 209  ,cad_g35
15:38:39 210  ,cad_g36
15:38:39 211  ,cad_g37
15:38:39 212  ,cad_g38
15:38:39 213  ,cad_g39
15:38:39 214  ,cad_g40
15:38:39 215  ,cad_g41
15:38:39 216  ,chf_g00
15:38:39 217  ,chf_g01
15:38:39 218  ,chf_g02
15:38:39 219  ,chf_g03
15:38:39 220  ,chf_g04
15:38:39 221  ,chf_g05
15:38:39 222  ,chf_g06
15:38:39 223  ,chf_g07
15:38:39 224  ,chf_g08
15:38:39 225  ,chf_g09
15:38:39 226  ,chf_g10
15:38:39 227  ,chf_g11
15:38:39 228  ,chf_g12
15:38:39 229  ,chf_g13
15:38:39 230  ,chf_g14
15:38:39 231  ,chf_g15
15:38:39 232  ,chf_g16
15:38:39 233  ,chf_g17
15:38:39 234  ,chf_g18
15:38:39 235  ,chf_g19
15:38:39 236  ,chf_g20
15:38:39 237  ,chf_g21
15:38:39 238  ,chf_g22
15:38:39 239  ,chf_g23
15:38:39 240  ,chf_g24
15:38:39 241  ,chf_g25
15:38:39 242  ,chf_g26
15:38:39 243  ,chf_g27
15:38:39 244  ,chf_g28
15:38:39 245  ,chf_g29
15:38:39 246  ,chf_g30
15:38:39 247  ,chf_g31
15:38:39 248  ,chf_g32
15:38:39 249  ,chf_g33
15:38:39 250  ,chf_g34
15:38:39 251  ,chf_g35
15:38:39 252  ,chf_g36
15:38:39 253  ,chf_g37
15:38:39 254  ,chf_g38
15:38:39 255  ,chf_g39
15:38:39 256  ,chf_g40
15:38:39 257  ,chf_g41
15:38:39 258  FROM aud_ms6 m
15:38:39 259  WHERE gattn IN('nup','up')
15:38:39 260  AND 1+m.ydate < '&1'||' '||'&2'
15:38:39 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'15:15:00'

View created.

Elapsed: 00:00:00.13
15:38:39 SQL> 
15:38:39 SQL> -- rpt
15:38:39 SQL> 
15:38:39 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12874
up	     6635

Elapsed: 00:00:00.06
15:38:39 SQL> 
15:38:39 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-06 15:10:00

Elapsed: 00:00:00.03
15:38:39 SQL> 
15:38:39 SQL> -- Now build model from bme and score sme
15:38:39 SQL> @score1gattn.sql
15:38:39 SQL> -- score1gattn.sql
15:38:39 SQL> 
15:38:39 SQL> -- Does the 1st SVM score
15:38:39 SQL> 
15:38:39 SQL> -- Fill up svmc_apply_prep
15:38:39 SQL> @score_gattn.sql
15:38:39 SQL> --
15:38:39 SQL> -- score_gattn.sql
15:38:39 SQL> --
15:38:39 SQL> 
15:38:39 SQL> -- usage: score_gattn.sql
15:38:39 SQL> 
15:38:39 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:38:39 SQL> 
15:38:39 SQL> DEFINE target	= 'gattn'
15:38:39 SQL> DEFINE model_name = 'forex15'
15:38:39 SQL> DEFINE bldtable	= 'bme'
15:38:39 SQL> DEFINE scoretable = 'sme'
15:38:39 SQL> DEFINE case_id	= 'prdate'
15:38:39 SQL> 
15:38:39 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:38:39 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:38:39 SQL> 
15:38:39 SQL> -- Builds an SVM model using pl/sql.
15:38:39 SQL> 
15:38:39 SQL> -----------------------------------------------------------------------
15:38:39 SQL> --			    BUILD THE MODEL
15:38:39 SQL> -----------------------------------------------------------------------
15:38:39 SQL> 
15:38:39 SQL> -- Cleanup old build data preparation objects for repeat runs
15:38:39 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
15:38:39 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:38:39 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
15:38:39 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
15:38:39 SQL> 
15:38:39 SQL> 
15:38:39 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:38:39 SQL> --
15:38:39 SQL> -- DROP	TABLE svmc_settings ;
15:38:39 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:38:39 SQL> -- DELETE svmc_settings;
15:38:39 SQL> 
15:38:39 SQL> -- The default classification algorithm is Naive Bayes. So override
15:38:39 SQL> -- this choice to SVM using a settings table.
15:38:39 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:38:39 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:38:39 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:38:39 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:38:39 SQL> -- models.
15:38:39 SQL> --
15:38:39 SQL> 
15:38:39 SQL> -- Do this once and then comment it out.
15:38:39 SQL> -- That makes script go faster.
15:38:39 SQL> -- BEGIN
15:38:39 SQL> -- -- Populate settings table
15:38:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:38:39 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:38:39 SQL> --
15:38:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:38:39 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:38:39 SQL> --
15:38:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:38:39 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:38:39 SQL> --   COMMIT;
15:38:39 SQL> -- END;
15:38:39 SQL> -- /
15:38:39 SQL> 
15:38:39 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:38:39 SQL> 
15:38:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:38:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:38:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:38:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:38:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:38:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:38:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:38:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:38:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:38:39 SQL> 
15:38:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:38:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:38:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:38:39 SQL> 
15:38:39 SQL> --------------------------------
15:38:39 SQL> -- PREPARE BUILD (TRAINING) DATA
15:38:39 SQL> --
15:38:39 SQL> 
15:38:39 SQL> -- 1. Missing Value treatment for all Predictors and
15:38:39 SQL> -- 2. Outlier Treatment and
15:38:39 SQL> -- 3. Normalization are performed below.
15:38:39 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:38:39 SQL> --    normalized here.
15:38:39 SQL> 
15:38:39 SQL> BEGIN
15:38:39   2  	-- Perform missing value treatment for all predictors
15:38:39   3  	-- create miss tables
15:38:39   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:38:39   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:38:39   6  
15:38:39   7  	-- populate miss tables
15:38:39   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:38:39   9  	  miss_table_name => 'svmc_miss_num',
15:38:39  10  	  data_table_name => '&bldtable',
15:38:39  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:38:39  12  
15:38:39  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:38:39  14  	  miss_table_name => 'svmc_miss_cat',
15:38:39  15  	  data_table_name => '&bldtable',
15:38:39  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:38:39  17  
15:38:39  18  	-- xform input data to replace missing values
15:38:39  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:38:39  20  	  miss_table_name => 'svmc_miss_num',
15:38:39  21  	  data_table_name => '&bldtable',
15:38:39  22  	  xform_view_name => 'xformed_build_miss_num');
15:38:39  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:38:39  24  	  miss_table_name => 'svmc_miss_cat',
15:38:39  25  	  data_table_name => '&bldtable',
15:38:39  26  	  xform_view_name => 'xformed_build_miss_cat');
15:38:39  27  
15:38:39  28  	-- Perform outlier treatment.
15:38:39  29  	-- create clip table
15:38:39  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:38:39  31  
15:38:39  32  	-- populate clip table
15:38:39  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:38:39  34  	  clip_table_name => 'svmc_clip',
15:38:39  35  	  data_table_name => '&bldtable',
15:38:39  36  	  tail_frac	  => 0.025,
15:38:39  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:38:39  38  
15:38:39  39  	-- xform input data to winsorized data
15:38:39  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:38:39  41  	  clip_table_name => 'svmc_clip',
15:38:39  42  	  data_table_name => '&bldtable',
15:38:39  43  	  xform_view_name => 'svmc_winsor');
15:38:39  44  
15:38:39  45  	-- create normalization table
15:38:39  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:38:39  47  
15:38:39  48  	-- populate normalization table based on winsorized data
15:38:39  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:38:39  50  	  norm_table_name => 'svmc_norm',
15:38:39  51  	  data_table_name => 'svmc_winsor',
15:38:39  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:38:39  53  
15:38:39  54  	-- normalize the original data
15:38:39  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:38:39  56  	  norm_table_name => 'svmc_norm',
15:38:39  57  	  data_table_name => '&bldtable',
15:38:39  58  	  xform_view_name => 'svmc_build_prep');
15:38:39  59  END;
15:38:39  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.71
15:38:58 SQL> 
15:38:58 SQL> ---------------------
15:38:58 SQL> -- CREATE A NEW MODEL
15:38:58 SQL> --
15:38:58 SQL> -- Cleanup old model with the same name for repeat runs
15:38:58 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:38:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:38:58   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.00
15:38:59 SQL> 
15:38:59 SQL> -- Build a new SVM Model
15:38:59 SQL> BEGIN
15:38:59   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:38:59   3  	  model_name	      => '&model_name',
15:38:59   4  	  mining_function     => dbms_data_mining.classification,
15:38:59   5  	  data_table_name     => 'svmc_build_prep',
15:38:59   6  	  case_id_column_name => '&case_id',
15:38:59   7  	  target_column_name  => '&target',
15:38:59   8  	  settings_table_name => 'svmc_settings');
15:38:59   9  END;
15:38:59  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.57
15:39:27 SQL> 
15:39:27 SQL> -----------------------------------------------------------------------
15:39:27 SQL> --			       APPLY/score THE MODEL
15:39:27 SQL> -----------------------------------------------------------------------
15:39:27 SQL> 
15:39:27 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:39:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:39:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:39:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:39:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:39:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:39:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:39:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:39:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:39:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:39:28 SQL> -----------------------
15:39:28 SQL> -- PREPARE SCORING DATA
15:39:28 SQL> --
15:39:28 SQL> -- If the data for model creation has been prepared, then the data
15:39:28 SQL> -- to be scored using the model must be prepared in the same manner
15:39:28 SQL> -- in order to obtain meaningful results.
15:39:28 SQL> --
15:39:28 SQL> -- 1. Missing Value treatment for all Predictors and
15:39:28 SQL> -- 2. Normalization
15:39:28 SQL> -- No outlier treatment will be performed during test and apply. The
15:39:28 SQL> -- normalization step is sufficient, since the normalization parameters
15:39:28 SQL> -- already capture the effects of outlier treatment done with build data.
15:39:28 SQL> --
15:39:28 SQL> BEGIN
15:39:28   2  	-- Xform Test data to replace missing values
15:39:28   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:39:28   4  	  miss_table_name => 'svmc_miss_num',
15:39:28   5  	  data_table_name => '&scoretable',
15:39:28   6  	  xform_view_name => 'xformed_apply_miss_num');
15:39:28   7  
15:39:28   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:39:28   9  	  miss_table_name => 'svmc_miss_cat',
15:39:28  10  	  data_table_name => '&scoretable',
15:39:28  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:39:28  12  
15:39:28  13  	-- Normalize the data to be scored
15:39:28  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:39:28  15  	  norm_table_name => 'svmc_norm',
15:39:28  16  	  data_table_name => '&scoretable',
15:39:28  17  	  xform_view_name => 'svmc_apply_prep');
15:39:28  18  END;
15:39:28  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
15:39:29 SQL> 
15:39:29 SQL> -- Use same model_name used in score_gattn.sql
15:39:29 SQL> DEFINE model_name = 'forex15'
15:39:29 SQL> 
15:39:29 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
15:39:29 SQL> 
15:39:29 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
15:39:29   2  SELECT
15:39:29   3  prdate
15:39:29   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:39:29   5  ,sysdate
15:39:29   6  ,SUBSTR(prdate,1,3)pair
15:39:29   7  ,SUBSTR(prdate,4,19)ydate
15:39:29   8  FROM svmc_apply_prep
15:39:29   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:39:29 SQL> @aud_score1day_gattn.sql	2011-01-07 15:20:00
15:39:29 SQL> --
15:39:29 SQL> -- aud_score1day_gattn.sql
15:39:29 SQL> --
15:39:29 SQL> 
15:39:29 SQL> CREATE OR REPLACE VIEW sme AS
15:39:29   2  SELECT
15:39:29   3  'aud'||m.ydate prdate
15:39:29   4  ,NULL gattn
15:39:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:39:29   6  ,eur_g00
15:39:29   7  ,eur_g01
15:39:29   8  ,eur_g02
15:39:29   9  ,eur_g03
15:39:29  10  ,eur_g04
15:39:29  11  ,eur_g05
15:39:29  12  ,eur_g06
15:39:29  13  ,eur_g07
15:39:29  14  ,eur_g08
15:39:29  15  ,eur_g09
15:39:29  16  ,eur_g10
15:39:29  17  ,eur_g11
15:39:29  18  ,eur_g12
15:39:29  19  ,eur_g13
15:39:29  20  ,eur_g14
15:39:29  21  ,eur_g15
15:39:29  22  ,eur_g16
15:39:29  23  ,eur_g17
15:39:29  24  ,eur_g18
15:39:29  25  ,eur_g19
15:39:29  26  ,eur_g20
15:39:29  27  ,eur_g21
15:39:29  28  ,eur_g22
15:39:29  29  ,eur_g23
15:39:29  30  ,eur_g24
15:39:29  31  ,eur_g25
15:39:29  32  ,eur_g26
15:39:29  33  ,eur_g27
15:39:29  34  ,eur_g28
15:39:29  35  ,eur_g29
15:39:29  36  ,eur_g30
15:39:29  37  ,eur_g31
15:39:29  38  ,eur_g32
15:39:29  39  ,eur_g33
15:39:29  40  ,eur_g34
15:39:29  41  ,eur_g35
15:39:29  42  ,eur_g36
15:39:29  43  ,eur_g37
15:39:29  44  ,eur_g38
15:39:29  45  ,eur_g39
15:39:29  46  ,eur_g40
15:39:29  47  ,eur_g41
15:39:29  48  ,aud_g00
15:39:29  49  ,aud_g01
15:39:29  50  ,aud_g02
15:39:29  51  ,aud_g03
15:39:29  52  ,aud_g04
15:39:29  53  ,aud_g05
15:39:29  54  ,aud_g06
15:39:29  55  ,aud_g07
15:39:29  56  ,aud_g08
15:39:29  57  ,aud_g09
15:39:29  58  ,aud_g10
15:39:29  59  ,aud_g11
15:39:29  60  ,aud_g12
15:39:29  61  ,aud_g13
15:39:29  62  ,aud_g14
15:39:29  63  ,aud_g15
15:39:29  64  ,aud_g16
15:39:29  65  ,aud_g17
15:39:29  66  ,aud_g18
15:39:29  67  ,aud_g19
15:39:29  68  ,aud_g20
15:39:29  69  ,aud_g21
15:39:29  70  ,aud_g22
15:39:29  71  ,aud_g23
15:39:29  72  ,aud_g24
15:39:29  73  ,aud_g25
15:39:29  74  ,aud_g26
15:39:29  75  ,aud_g27
15:39:29  76  ,aud_g28
15:39:29  77  ,aud_g29
15:39:29  78  ,aud_g30
15:39:29  79  ,aud_g31
15:39:29  80  ,aud_g32
15:39:29  81  ,aud_g33
15:39:29  82  ,aud_g34
15:39:29  83  ,aud_g35
15:39:29  84  ,aud_g36
15:39:29  85  ,aud_g37
15:39:29  86  ,aud_g38
15:39:29  87  ,aud_g39
15:39:29  88  ,aud_g40
15:39:29  89  ,aud_g41
15:39:29  90  ,gbp_g00
15:39:29  91  ,gbp_g01
15:39:29  92  ,gbp_g02
15:39:29  93  ,gbp_g03
15:39:29  94  ,gbp_g04
15:39:29  95  ,gbp_g05
15:39:29  96  ,gbp_g06
15:39:29  97  ,gbp_g07
15:39:29  98  ,gbp_g08
15:39:29  99  ,gbp_g09
15:39:29 100  ,gbp_g10
15:39:29 101  ,gbp_g11
15:39:29 102  ,gbp_g12
15:39:29 103  ,gbp_g13
15:39:29 104  ,gbp_g14
15:39:29 105  ,gbp_g15
15:39:29 106  ,gbp_g16
15:39:29 107  ,gbp_g17
15:39:29 108  ,gbp_g18
15:39:29 109  ,gbp_g19
15:39:29 110  ,gbp_g20
15:39:29 111  ,gbp_g21
15:39:29 112  ,gbp_g22
15:39:29 113  ,gbp_g23
15:39:29 114  ,gbp_g24
15:39:29 115  ,gbp_g25
15:39:29 116  ,gbp_g26
15:39:29 117  ,gbp_g27
15:39:29 118  ,gbp_g28
15:39:29 119  ,gbp_g29
15:39:29 120  ,gbp_g30
15:39:29 121  ,gbp_g31
15:39:29 122  ,gbp_g32
15:39:29 123  ,gbp_g33
15:39:29 124  ,gbp_g34
15:39:29 125  ,gbp_g35
15:39:29 126  ,gbp_g36
15:39:29 127  ,gbp_g37
15:39:29 128  ,gbp_g38
15:39:29 129  ,gbp_g39
15:39:29 130  ,gbp_g40
15:39:29 131  ,gbp_g41
15:39:29 132  ,jpy_g00
15:39:29 133  ,jpy_g01
15:39:29 134  ,jpy_g02
15:39:29 135  ,jpy_g03
15:39:29 136  ,jpy_g04
15:39:29 137  ,jpy_g05
15:39:29 138  ,jpy_g06
15:39:29 139  ,jpy_g07
15:39:29 140  ,jpy_g08
15:39:29 141  ,jpy_g09
15:39:29 142  ,jpy_g10
15:39:29 143  ,jpy_g11
15:39:29 144  ,jpy_g12
15:39:29 145  ,jpy_g13
15:39:29 146  ,jpy_g14
15:39:29 147  ,jpy_g15
15:39:29 148  ,jpy_g16
15:39:29 149  ,jpy_g17
15:39:29 150  ,jpy_g18
15:39:29 151  ,jpy_g19
15:39:29 152  ,jpy_g20
15:39:29 153  ,jpy_g21
15:39:29 154  ,jpy_g22
15:39:29 155  ,jpy_g23
15:39:29 156  ,jpy_g24
15:39:29 157  ,jpy_g25
15:39:29 158  ,jpy_g26
15:39:29 159  ,jpy_g27
15:39:29 160  ,jpy_g28
15:39:29 161  ,jpy_g29
15:39:29 162  ,jpy_g30
15:39:29 163  ,jpy_g31
15:39:29 164  ,jpy_g32
15:39:29 165  ,jpy_g33
15:39:29 166  ,jpy_g34
15:39:29 167  ,jpy_g35
15:39:29 168  ,jpy_g36
15:39:29 169  ,jpy_g37
15:39:29 170  ,jpy_g38
15:39:29 171  ,jpy_g39
15:39:29 172  ,jpy_g40
15:39:29 173  ,jpy_g41
15:39:29 174  ,cad_g00
15:39:29 175  ,cad_g01
15:39:29 176  ,cad_g02
15:39:29 177  ,cad_g03
15:39:29 178  ,cad_g04
15:39:29 179  ,cad_g05
15:39:29 180  ,cad_g06
15:39:29 181  ,cad_g07
15:39:29 182  ,cad_g08
15:39:29 183  ,cad_g09
15:39:29 184  ,cad_g10
15:39:29 185  ,cad_g11
15:39:29 186  ,cad_g12
15:39:29 187  ,cad_g13
15:39:29 188  ,cad_g14
15:39:29 189  ,cad_g15
15:39:29 190  ,cad_g16
15:39:29 191  ,cad_g17
15:39:29 192  ,cad_g18
15:39:29 193  ,cad_g19
15:39:29 194  ,cad_g20
15:39:29 195  ,cad_g21
15:39:29 196  ,cad_g22
15:39:29 197  ,cad_g23
15:39:29 198  ,cad_g24
15:39:29 199  ,cad_g25
15:39:29 200  ,cad_g26
15:39:29 201  ,cad_g27
15:39:29 202  ,cad_g28
15:39:29 203  ,cad_g29
15:39:29 204  ,cad_g30
15:39:29 205  ,cad_g31
15:39:29 206  ,cad_g32
15:39:29 207  ,cad_g33
15:39:29 208  ,cad_g34
15:39:29 209  ,cad_g35
15:39:29 210  ,cad_g36
15:39:29 211  ,cad_g37
15:39:29 212  ,cad_g38
15:39:29 213  ,cad_g39
15:39:29 214  ,cad_g40
15:39:29 215  ,cad_g41
15:39:29 216  ,chf_g00
15:39:29 217  ,chf_g01
15:39:29 218  ,chf_g02
15:39:29 219  ,chf_g03
15:39:29 220  ,chf_g04
15:39:29 221  ,chf_g05
15:39:29 222  ,chf_g06
15:39:29 223  ,chf_g07
15:39:29 224  ,chf_g08
15:39:29 225  ,chf_g09
15:39:29 226  ,chf_g10
15:39:29 227  ,chf_g11
15:39:29 228  ,chf_g12
15:39:29 229  ,chf_g13
15:39:29 230  ,chf_g14
15:39:29 231  ,chf_g15
15:39:29 232  ,chf_g16
15:39:29 233  ,chf_g17
15:39:29 234  ,chf_g18
15:39:29 235  ,chf_g19
15:39:29 236  ,chf_g20
15:39:29 237  ,chf_g21
15:39:29 238  ,chf_g22
15:39:29 239  ,chf_g23
15:39:29 240  ,chf_g24
15:39:29 241  ,chf_g25
15:39:29 242  ,chf_g26
15:39:29 243  ,chf_g27
15:39:29 244  ,chf_g28
15:39:29 245  ,chf_g29
15:39:29 246  ,chf_g30
15:39:29 247  ,chf_g31
15:39:29 248  ,chf_g32
15:39:29 249  ,chf_g33
15:39:29 250  ,chf_g34
15:39:29 251  ,chf_g35
15:39:29 252  ,chf_g36
15:39:29 253  ,chf_g37
15:39:29 254  ,chf_g38
15:39:29 255  ,chf_g39
15:39:29 256  ,chf_g40
15:39:29 257  ,chf_g41
15:39:29 258  FROM aud_ms6 m
15:39:29 259  WHERE m.ydate = '&1'||' '||'&2'
15:39:29 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'15:20:00'

View created.

Elapsed: 00:00:00.14
15:39:29 SQL> 
15:39:29 SQL> -- rpt
15:39:29 SQL> -- We should see just 1 row:
15:39:29 SQL> 
15:39:29 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
15:39:29 SQL> 
15:39:29 SQL> -- Build the model:
15:39:29 SQL> CREATE OR REPLACE VIEW bme AS
15:39:29   2  SELECT
15:39:29   3  'aud'||m.ydate prdate
15:39:29   4  ,gattn
15:39:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:39:29   6  ,eur_g00
15:39:29   7  ,eur_g01
15:39:29   8  ,eur_g02
15:39:29   9  ,eur_g03
15:39:29  10  ,eur_g04
15:39:29  11  ,eur_g05
15:39:29  12  ,eur_g06
15:39:29  13  ,eur_g07
15:39:29  14  ,eur_g08
15:39:29  15  ,eur_g09
15:39:29  16  ,eur_g10
15:39:29  17  ,eur_g11
15:39:29  18  ,eur_g12
15:39:29  19  ,eur_g13
15:39:29  20  ,eur_g14
15:39:29  21  ,eur_g15
15:39:29  22  ,eur_g16
15:39:29  23  ,eur_g17
15:39:29  24  ,eur_g18
15:39:29  25  ,eur_g19
15:39:29  26  ,eur_g20
15:39:29  27  ,eur_g21
15:39:29  28  ,eur_g22
15:39:29  29  ,eur_g23
15:39:29  30  ,eur_g24
15:39:29  31  ,eur_g25
15:39:29  32  ,eur_g26
15:39:29  33  ,eur_g27
15:39:29  34  ,eur_g28
15:39:29  35  ,eur_g29
15:39:29  36  ,eur_g30
15:39:29  37  ,eur_g31
15:39:29  38  ,eur_g32
15:39:29  39  ,eur_g33
15:39:29  40  ,eur_g34
15:39:29  41  ,eur_g35
15:39:29  42  ,eur_g36
15:39:29  43  ,eur_g37
15:39:29  44  ,eur_g38
15:39:29  45  ,eur_g39
15:39:29  46  ,eur_g40
15:39:29  47  ,eur_g41
15:39:29  48  ,aud_g00
15:39:29  49  ,aud_g01
15:39:29  50  ,aud_g02
15:39:29  51  ,aud_g03
15:39:29  52  ,aud_g04
15:39:29  53  ,aud_g05
15:39:29  54  ,aud_g06
15:39:29  55  ,aud_g07
15:39:29  56  ,aud_g08
15:39:29  57  ,aud_g09
15:39:29  58  ,aud_g10
15:39:29  59  ,aud_g11
15:39:29  60  ,aud_g12
15:39:29  61  ,aud_g13
15:39:29  62  ,aud_g14
15:39:29  63  ,aud_g15
15:39:29  64  ,aud_g16
15:39:29  65  ,aud_g17
15:39:29  66  ,aud_g18
15:39:29  67  ,aud_g19
15:39:29  68  ,aud_g20
15:39:29  69  ,aud_g21
15:39:29  70  ,aud_g22
15:39:29  71  ,aud_g23
15:39:29  72  ,aud_g24
15:39:29  73  ,aud_g25
15:39:29  74  ,aud_g26
15:39:29  75  ,aud_g27
15:39:29  76  ,aud_g28
15:39:29  77  ,aud_g29
15:39:29  78  ,aud_g30
15:39:29  79  ,aud_g31
15:39:29  80  ,aud_g32
15:39:29  81  ,aud_g33
15:39:29  82  ,aud_g34
15:39:29  83  ,aud_g35
15:39:29  84  ,aud_g36
15:39:29  85  ,aud_g37
15:39:29  86  ,aud_g38
15:39:29  87  ,aud_g39
15:39:29  88  ,aud_g40
15:39:29  89  ,aud_g41
15:39:29  90  ,gbp_g00
15:39:29  91  ,gbp_g01
15:39:29  92  ,gbp_g02
15:39:29  93  ,gbp_g03
15:39:29  94  ,gbp_g04
15:39:29  95  ,gbp_g05
15:39:29  96  ,gbp_g06
15:39:29  97  ,gbp_g07
15:39:29  98  ,gbp_g08
15:39:29  99  ,gbp_g09
15:39:29 100  ,gbp_g10
15:39:29 101  ,gbp_g11
15:39:29 102  ,gbp_g12
15:39:29 103  ,gbp_g13
15:39:29 104  ,gbp_g14
15:39:29 105  ,gbp_g15
15:39:29 106  ,gbp_g16
15:39:29 107  ,gbp_g17
15:39:29 108  ,gbp_g18
15:39:29 109  ,gbp_g19
15:39:29 110  ,gbp_g20
15:39:29 111  ,gbp_g21
15:39:29 112  ,gbp_g22
15:39:29 113  ,gbp_g23
15:39:29 114  ,gbp_g24
15:39:29 115  ,gbp_g25
15:39:29 116  ,gbp_g26
15:39:29 117  ,gbp_g27
15:39:29 118  ,gbp_g28
15:39:29 119  ,gbp_g29
15:39:29 120  ,gbp_g30
15:39:29 121  ,gbp_g31
15:39:29 122  ,gbp_g32
15:39:29 123  ,gbp_g33
15:39:29 124  ,gbp_g34
15:39:29 125  ,gbp_g35
15:39:29 126  ,gbp_g36
15:39:29 127  ,gbp_g37
15:39:29 128  ,gbp_g38
15:39:29 129  ,gbp_g39
15:39:29 130  ,gbp_g40
15:39:29 131  ,gbp_g41
15:39:29 132  ,jpy_g00
15:39:29 133  ,jpy_g01
15:39:29 134  ,jpy_g02
15:39:29 135  ,jpy_g03
15:39:29 136  ,jpy_g04
15:39:29 137  ,jpy_g05
15:39:29 138  ,jpy_g06
15:39:29 139  ,jpy_g07
15:39:29 140  ,jpy_g08
15:39:29 141  ,jpy_g09
15:39:29 142  ,jpy_g10
15:39:29 143  ,jpy_g11
15:39:29 144  ,jpy_g12
15:39:29 145  ,jpy_g13
15:39:29 146  ,jpy_g14
15:39:29 147  ,jpy_g15
15:39:29 148  ,jpy_g16
15:39:29 149  ,jpy_g17
15:39:29 150  ,jpy_g18
15:39:29 151  ,jpy_g19
15:39:29 152  ,jpy_g20
15:39:29 153  ,jpy_g21
15:39:29 154  ,jpy_g22
15:39:29 155  ,jpy_g23
15:39:29 156  ,jpy_g24
15:39:29 157  ,jpy_g25
15:39:29 158  ,jpy_g26
15:39:29 159  ,jpy_g27
15:39:29 160  ,jpy_g28
15:39:29 161  ,jpy_g29
15:39:29 162  ,jpy_g30
15:39:29 163  ,jpy_g31
15:39:29 164  ,jpy_g32
15:39:29 165  ,jpy_g33
15:39:29 166  ,jpy_g34
15:39:29 167  ,jpy_g35
15:39:29 168  ,jpy_g36
15:39:29 169  ,jpy_g37
15:39:29 170  ,jpy_g38
15:39:29 171  ,jpy_g39
15:39:29 172  ,jpy_g40
15:39:29 173  ,jpy_g41
15:39:29 174  ,cad_g00
15:39:29 175  ,cad_g01
15:39:29 176  ,cad_g02
15:39:29 177  ,cad_g03
15:39:29 178  ,cad_g04
15:39:29 179  ,cad_g05
15:39:29 180  ,cad_g06
15:39:29 181  ,cad_g07
15:39:29 182  ,cad_g08
15:39:29 183  ,cad_g09
15:39:29 184  ,cad_g10
15:39:29 185  ,cad_g11
15:39:29 186  ,cad_g12
15:39:29 187  ,cad_g13
15:39:29 188  ,cad_g14
15:39:29 189  ,cad_g15
15:39:29 190  ,cad_g16
15:39:29 191  ,cad_g17
15:39:29 192  ,cad_g18
15:39:29 193  ,cad_g19
15:39:29 194  ,cad_g20
15:39:29 195  ,cad_g21
15:39:29 196  ,cad_g22
15:39:29 197  ,cad_g23
15:39:29 198  ,cad_g24
15:39:29 199  ,cad_g25
15:39:29 200  ,cad_g26
15:39:29 201  ,cad_g27
15:39:29 202  ,cad_g28
15:39:29 203  ,cad_g29
15:39:29 204  ,cad_g30
15:39:29 205  ,cad_g31
15:39:29 206  ,cad_g32
15:39:29 207  ,cad_g33
15:39:29 208  ,cad_g34
15:39:29 209  ,cad_g35
15:39:29 210  ,cad_g36
15:39:29 211  ,cad_g37
15:39:29 212  ,cad_g38
15:39:29 213  ,cad_g39
15:39:29 214  ,cad_g40
15:39:29 215  ,cad_g41
15:39:29 216  ,chf_g00
15:39:29 217  ,chf_g01
15:39:29 218  ,chf_g02
15:39:29 219  ,chf_g03
15:39:29 220  ,chf_g04
15:39:29 221  ,chf_g05
15:39:29 222  ,chf_g06
15:39:29 223  ,chf_g07
15:39:29 224  ,chf_g08
15:39:29 225  ,chf_g09
15:39:29 226  ,chf_g10
15:39:29 227  ,chf_g11
15:39:29 228  ,chf_g12
15:39:29 229  ,chf_g13
15:39:29 230  ,chf_g14
15:39:29 231  ,chf_g15
15:39:29 232  ,chf_g16
15:39:29 233  ,chf_g17
15:39:29 234  ,chf_g18
15:39:29 235  ,chf_g19
15:39:29 236  ,chf_g20
15:39:29 237  ,chf_g21
15:39:29 238  ,chf_g22
15:39:29 239  ,chf_g23
15:39:29 240  ,chf_g24
15:39:29 241  ,chf_g25
15:39:29 242  ,chf_g26
15:39:29 243  ,chf_g27
15:39:29 244  ,chf_g28
15:39:29 245  ,chf_g29
15:39:29 246  ,chf_g30
15:39:29 247  ,chf_g31
15:39:29 248  ,chf_g32
15:39:29 249  ,chf_g33
15:39:29 250  ,chf_g34
15:39:29 251  ,chf_g35
15:39:29 252  ,chf_g36
15:39:29 253  ,chf_g37
15:39:29 254  ,chf_g38
15:39:29 255  ,chf_g39
15:39:29 256  ,chf_g40
15:39:29 257  ,chf_g41
15:39:29 258  FROM aud_ms6 m
15:39:29 259  WHERE gattn IN('nup','up')
15:39:29 260  AND 1+m.ydate < '&1'||' '||'&2'
15:39:29 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'15:20:00'

View created.

Elapsed: 00:00:00.13
15:39:29 SQL> 
15:39:29 SQL> -- rpt
15:39:29 SQL> 
15:39:29 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12874
up	     6636

Elapsed: 00:00:00.04
15:39:29 SQL> 
15:39:29 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-06 15:15:00

Elapsed: 00:00:00.03
15:39:29 SQL> 
15:39:29 SQL> -- Now build model from bme and score sme
15:39:29 SQL> @score1gattn.sql
15:39:29 SQL> -- score1gattn.sql
15:39:29 SQL> 
15:39:29 SQL> -- Does the 1st SVM score
15:39:29 SQL> 
15:39:29 SQL> -- Fill up svmc_apply_prep
15:39:29 SQL> @score_gattn.sql
15:39:29 SQL> --
15:39:29 SQL> -- score_gattn.sql
15:39:29 SQL> --
15:39:29 SQL> 
15:39:29 SQL> -- usage: score_gattn.sql
15:39:29 SQL> 
15:39:29 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:39:29 SQL> 
15:39:29 SQL> DEFINE target	= 'gattn'
15:39:29 SQL> DEFINE model_name = 'forex15'
15:39:29 SQL> DEFINE bldtable	= 'bme'
15:39:29 SQL> DEFINE scoretable = 'sme'
15:39:29 SQL> DEFINE case_id	= 'prdate'
15:39:29 SQL> 
15:39:29 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:39:29 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:39:29 SQL> 
15:39:29 SQL> -- Builds an SVM model using pl/sql.
15:39:29 SQL> 
15:39:29 SQL> -----------------------------------------------------------------------
15:39:29 SQL> --			    BUILD THE MODEL
15:39:29 SQL> -----------------------------------------------------------------------
15:39:29 SQL> 
15:39:29 SQL> -- Cleanup old build data preparation objects for repeat runs
15:39:29 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
15:39:29 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:39:29 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
15:39:29 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
15:39:29 SQL> 
15:39:29 SQL> 
15:39:29 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:39:29 SQL> --
15:39:29 SQL> -- DROP	TABLE svmc_settings ;
15:39:29 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:39:29 SQL> -- DELETE svmc_settings;
15:39:29 SQL> 
15:39:29 SQL> -- The default classification algorithm is Naive Bayes. So override
15:39:29 SQL> -- this choice to SVM using a settings table.
15:39:29 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:39:29 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:39:29 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:39:29 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:39:29 SQL> -- models.
15:39:29 SQL> --
15:39:29 SQL> 
15:39:29 SQL> -- Do this once and then comment it out.
15:39:29 SQL> -- That makes script go faster.
15:39:29 SQL> -- BEGIN
15:39:29 SQL> -- -- Populate settings table
15:39:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:39:29 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:39:29 SQL> --
15:39:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:39:29 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:39:29 SQL> --
15:39:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:39:29 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:39:29 SQL> --   COMMIT;
15:39:29 SQL> -- END;
15:39:29 SQL> -- /
15:39:29 SQL> 
15:39:29 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:39:29 SQL> 
15:39:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:39:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:39:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:39:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:39:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:39:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
15:39:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:39:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:39:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
15:39:30 SQL> 
15:39:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:39:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:39:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:39:30 SQL> 
15:39:30 SQL> --------------------------------
15:39:30 SQL> -- PREPARE BUILD (TRAINING) DATA
15:39:30 SQL> --
15:39:30 SQL> 
15:39:30 SQL> -- 1. Missing Value treatment for all Predictors and
15:39:30 SQL> -- 2. Outlier Treatment and
15:39:30 SQL> -- 3. Normalization are performed below.
15:39:30 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:39:30 SQL> --    normalized here.
15:39:30 SQL> 
15:39:30 SQL> BEGIN
15:39:30   2  	-- Perform missing value treatment for all predictors
15:39:30   3  	-- create miss tables
15:39:30   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:39:30   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:39:30   6  
15:39:30   7  	-- populate miss tables
15:39:30   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:39:30   9  	  miss_table_name => 'svmc_miss_num',
15:39:30  10  	  data_table_name => '&bldtable',
15:39:30  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:39:30  12  
15:39:30  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:39:30  14  	  miss_table_name => 'svmc_miss_cat',
15:39:30  15  	  data_table_name => '&bldtable',
15:39:30  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:39:30  17  
15:39:30  18  	-- xform input data to replace missing values
15:39:30  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:39:30  20  	  miss_table_name => 'svmc_miss_num',
15:39:30  21  	  data_table_name => '&bldtable',
15:39:30  22  	  xform_view_name => 'xformed_build_miss_num');
15:39:30  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:39:30  24  	  miss_table_name => 'svmc_miss_cat',
15:39:30  25  	  data_table_name => '&bldtable',
15:39:30  26  	  xform_view_name => 'xformed_build_miss_cat');
15:39:30  27  
15:39:30  28  	-- Perform outlier treatment.
15:39:30  29  	-- create clip table
15:39:30  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:39:30  31  
15:39:30  32  	-- populate clip table
15:39:30  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:39:30  34  	  clip_table_name => 'svmc_clip',
15:39:30  35  	  data_table_name => '&bldtable',
15:39:30  36  	  tail_frac	  => 0.025,
15:39:30  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:39:30  38  
15:39:30  39  	-- xform input data to winsorized data
15:39:30  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:39:30  41  	  clip_table_name => 'svmc_clip',
15:39:30  42  	  data_table_name => '&bldtable',
15:39:30  43  	  xform_view_name => 'svmc_winsor');
15:39:30  44  
15:39:30  45  	-- create normalization table
15:39:30  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:39:30  47  
15:39:30  48  	-- populate normalization table based on winsorized data
15:39:30  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:39:30  50  	  norm_table_name => 'svmc_norm',
15:39:30  51  	  data_table_name => 'svmc_winsor',
15:39:30  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:39:30  53  
15:39:30  54  	-- normalize the original data
15:39:30  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:39:30  56  	  norm_table_name => 'svmc_norm',
15:39:30  57  	  data_table_name => '&bldtable',
15:39:30  58  	  xform_view_name => 'svmc_build_prep');
15:39:30  59  END;
15:39:30  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.47
15:39:48 SQL> 
15:39:48 SQL> ---------------------
15:39:48 SQL> -- CREATE A NEW MODEL
15:39:48 SQL> --
15:39:48 SQL> -- Cleanup old model with the same name for repeat runs
15:39:48 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:39:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:39:48   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.13
15:39:49 SQL> 
15:39:49 SQL> -- Build a new SVM Model
15:39:49 SQL> BEGIN
15:39:49   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:39:49   3  	  model_name	      => '&model_name',
15:39:49   4  	  mining_function     => dbms_data_mining.classification,
15:39:49   5  	  data_table_name     => 'svmc_build_prep',
15:39:49   6  	  case_id_column_name => '&case_id',
15:39:49   7  	  target_column_name  => '&target',
15:39:49   8  	  settings_table_name => 'svmc_settings');
15:39:49   9  END;
15:39:49  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.48
15:40:19 SQL> 
15:40:19 SQL> -----------------------------------------------------------------------
15:40:19 SQL> --			       APPLY/score THE MODEL
15:40:19 SQL> -----------------------------------------------------------------------
15:40:19 SQL> 
15:40:19 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:40:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:40:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:40:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:40:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:40:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:40:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
15:40:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:40:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:40:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:40:19 SQL> -----------------------
15:40:19 SQL> -- PREPARE SCORING DATA
15:40:19 SQL> --
15:40:19 SQL> -- If the data for model creation has been prepared, then the data
15:40:19 SQL> -- to be scored using the model must be prepared in the same manner
15:40:19 SQL> -- in order to obtain meaningful results.
15:40:19 SQL> --
15:40:19 SQL> -- 1. Missing Value treatment for all Predictors and
15:40:19 SQL> -- 2. Normalization
15:40:19 SQL> -- No outlier treatment will be performed during test and apply. The
15:40:19 SQL> -- normalization step is sufficient, since the normalization parameters
15:40:19 SQL> -- already capture the effects of outlier treatment done with build data.
15:40:19 SQL> --
15:40:19 SQL> BEGIN
15:40:19   2  	-- Xform Test data to replace missing values
15:40:19   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:40:19   4  	  miss_table_name => 'svmc_miss_num',
15:40:19   5  	  data_table_name => '&scoretable',
15:40:19   6  	  xform_view_name => 'xformed_apply_miss_num');
15:40:19   7  
15:40:19   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:40:19   9  	  miss_table_name => 'svmc_miss_cat',
15:40:19  10  	  data_table_name => '&scoretable',
15:40:19  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:40:19  12  
15:40:19  13  	-- Normalize the data to be scored
15:40:19  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:40:19  15  	  norm_table_name => 'svmc_norm',
15:40:19  16  	  data_table_name => '&scoretable',
15:40:19  17  	  xform_view_name => 'svmc_apply_prep');
15:40:19  18  END;
15:40:19  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
15:40:20 SQL> 
15:40:20 SQL> -- Use same model_name used in score_gattn.sql
15:40:20 SQL> DEFINE model_name = 'forex15'
15:40:20 SQL> 
15:40:20 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
15:40:20 SQL> 
15:40:20 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
15:40:20   2  SELECT
15:40:20   3  prdate
15:40:20   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:40:20   5  ,sysdate
15:40:20   6  ,SUBSTR(prdate,1,3)pair
15:40:20   7  ,SUBSTR(prdate,4,19)ydate
15:40:20   8  FROM svmc_apply_prep
15:40:20   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:40:20 SQL> @aud_score1day_gattn.sql	2011-01-07 15:25:00
15:40:20 SQL> --
15:40:20 SQL> -- aud_score1day_gattn.sql
15:40:20 SQL> --
15:40:20 SQL> 
15:40:20 SQL> CREATE OR REPLACE VIEW sme AS
15:40:20   2  SELECT
15:40:20   3  'aud'||m.ydate prdate
15:40:20   4  ,NULL gattn
15:40:20   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:40:20   6  ,eur_g00
15:40:20   7  ,eur_g01
15:40:20   8  ,eur_g02
15:40:20   9  ,eur_g03
15:40:20  10  ,eur_g04
15:40:20  11  ,eur_g05
15:40:20  12  ,eur_g06
15:40:20  13  ,eur_g07
15:40:20  14  ,eur_g08
15:40:20  15  ,eur_g09
15:40:20  16  ,eur_g10
15:40:20  17  ,eur_g11
15:40:20  18  ,eur_g12
15:40:20  19  ,eur_g13
15:40:20  20  ,eur_g14
15:40:20  21  ,eur_g15
15:40:20  22  ,eur_g16
15:40:20  23  ,eur_g17
15:40:20  24  ,eur_g18
15:40:20  25  ,eur_g19
15:40:20  26  ,eur_g20
15:40:20  27  ,eur_g21
15:40:20  28  ,eur_g22
15:40:20  29  ,eur_g23
15:40:20  30  ,eur_g24
15:40:20  31  ,eur_g25
15:40:20  32  ,eur_g26
15:40:20  33  ,eur_g27
15:40:20  34  ,eur_g28
15:40:20  35  ,eur_g29
15:40:20  36  ,eur_g30
15:40:20  37  ,eur_g31
15:40:20  38  ,eur_g32
15:40:20  39  ,eur_g33
15:40:20  40  ,eur_g34
15:40:20  41  ,eur_g35
15:40:20  42  ,eur_g36
15:40:20  43  ,eur_g37
15:40:20  44  ,eur_g38
15:40:20  45  ,eur_g39
15:40:20  46  ,eur_g40
15:40:20  47  ,eur_g41
15:40:20  48  ,aud_g00
15:40:20  49  ,aud_g01
15:40:20  50  ,aud_g02
15:40:20  51  ,aud_g03
15:40:20  52  ,aud_g04
15:40:20  53  ,aud_g05
15:40:20  54  ,aud_g06
15:40:20  55  ,aud_g07
15:40:20  56  ,aud_g08
15:40:20  57  ,aud_g09
15:40:20  58  ,aud_g10
15:40:20  59  ,aud_g11
15:40:20  60  ,aud_g12
15:40:20  61  ,aud_g13
15:40:20  62  ,aud_g14
15:40:20  63  ,aud_g15
15:40:20  64  ,aud_g16
15:40:20  65  ,aud_g17
15:40:20  66  ,aud_g18
15:40:20  67  ,aud_g19
15:40:20  68  ,aud_g20
15:40:20  69  ,aud_g21
15:40:20  70  ,aud_g22
15:40:20  71  ,aud_g23
15:40:20  72  ,aud_g24
15:40:20  73  ,aud_g25
15:40:20  74  ,aud_g26
15:40:20  75  ,aud_g27
15:40:20  76  ,aud_g28
15:40:20  77  ,aud_g29
15:40:20  78  ,aud_g30
15:40:20  79  ,aud_g31
15:40:20  80  ,aud_g32
15:40:20  81  ,aud_g33
15:40:20  82  ,aud_g34
15:40:20  83  ,aud_g35
15:40:20  84  ,aud_g36
15:40:20  85  ,aud_g37
15:40:20  86  ,aud_g38
15:40:20  87  ,aud_g39
15:40:20  88  ,aud_g40
15:40:20  89  ,aud_g41
15:40:20  90  ,gbp_g00
15:40:20  91  ,gbp_g01
15:40:20  92  ,gbp_g02
15:40:20  93  ,gbp_g03
15:40:20  94  ,gbp_g04
15:40:20  95  ,gbp_g05
15:40:20  96  ,gbp_g06
15:40:20  97  ,gbp_g07
15:40:20  98  ,gbp_g08
15:40:20  99  ,gbp_g09
15:40:20 100  ,gbp_g10
15:40:20 101  ,gbp_g11
15:40:20 102  ,gbp_g12
15:40:20 103  ,gbp_g13
15:40:20 104  ,gbp_g14
15:40:20 105  ,gbp_g15
15:40:20 106  ,gbp_g16
15:40:20 107  ,gbp_g17
15:40:20 108  ,gbp_g18
15:40:20 109  ,gbp_g19
15:40:20 110  ,gbp_g20
15:40:20 111  ,gbp_g21
15:40:20 112  ,gbp_g22
15:40:20 113  ,gbp_g23
15:40:20 114  ,gbp_g24
15:40:20 115  ,gbp_g25
15:40:20 116  ,gbp_g26
15:40:20 117  ,gbp_g27
15:40:20 118  ,gbp_g28
15:40:20 119  ,gbp_g29
15:40:20 120  ,gbp_g30
15:40:20 121  ,gbp_g31
15:40:20 122  ,gbp_g32
15:40:20 123  ,gbp_g33
15:40:20 124  ,gbp_g34
15:40:20 125  ,gbp_g35
15:40:20 126  ,gbp_g36
15:40:20 127  ,gbp_g37
15:40:20 128  ,gbp_g38
15:40:20 129  ,gbp_g39
15:40:20 130  ,gbp_g40
15:40:20 131  ,gbp_g41
15:40:20 132  ,jpy_g00
15:40:20 133  ,jpy_g01
15:40:20 134  ,jpy_g02
15:40:20 135  ,jpy_g03
15:40:20 136  ,jpy_g04
15:40:20 137  ,jpy_g05
15:40:20 138  ,jpy_g06
15:40:20 139  ,jpy_g07
15:40:20 140  ,jpy_g08
15:40:20 141  ,jpy_g09
15:40:20 142  ,jpy_g10
15:40:20 143  ,jpy_g11
15:40:20 144  ,jpy_g12
15:40:20 145  ,jpy_g13
15:40:20 146  ,jpy_g14
15:40:20 147  ,jpy_g15
15:40:20 148  ,jpy_g16
15:40:20 149  ,jpy_g17
15:40:20 150  ,jpy_g18
15:40:20 151  ,jpy_g19
15:40:20 152  ,jpy_g20
15:40:20 153  ,jpy_g21
15:40:20 154  ,jpy_g22
15:40:20 155  ,jpy_g23
15:40:20 156  ,jpy_g24
15:40:20 157  ,jpy_g25
15:40:20 158  ,jpy_g26
15:40:20 159  ,jpy_g27
15:40:20 160  ,jpy_g28
15:40:20 161  ,jpy_g29
15:40:20 162  ,jpy_g30
15:40:20 163  ,jpy_g31
15:40:20 164  ,jpy_g32
15:40:20 165  ,jpy_g33
15:40:20 166  ,jpy_g34
15:40:20 167  ,jpy_g35
15:40:20 168  ,jpy_g36
15:40:20 169  ,jpy_g37
15:40:20 170  ,jpy_g38
15:40:20 171  ,jpy_g39
15:40:20 172  ,jpy_g40
15:40:20 173  ,jpy_g41
15:40:20 174  ,cad_g00
15:40:20 175  ,cad_g01
15:40:20 176  ,cad_g02
15:40:20 177  ,cad_g03
15:40:20 178  ,cad_g04
15:40:20 179  ,cad_g05
15:40:20 180  ,cad_g06
15:40:20 181  ,cad_g07
15:40:20 182  ,cad_g08
15:40:20 183  ,cad_g09
15:40:20 184  ,cad_g10
15:40:20 185  ,cad_g11
15:40:20 186  ,cad_g12
15:40:20 187  ,cad_g13
15:40:20 188  ,cad_g14
15:40:20 189  ,cad_g15
15:40:20 190  ,cad_g16
15:40:20 191  ,cad_g17
15:40:20 192  ,cad_g18
15:40:20 193  ,cad_g19
15:40:20 194  ,cad_g20
15:40:20 195  ,cad_g21
15:40:20 196  ,cad_g22
15:40:20 197  ,cad_g23
15:40:20 198  ,cad_g24
15:40:20 199  ,cad_g25
15:40:20 200  ,cad_g26
15:40:20 201  ,cad_g27
15:40:20 202  ,cad_g28
15:40:20 203  ,cad_g29
15:40:20 204  ,cad_g30
15:40:20 205  ,cad_g31
15:40:20 206  ,cad_g32
15:40:20 207  ,cad_g33
15:40:20 208  ,cad_g34
15:40:20 209  ,cad_g35
15:40:20 210  ,cad_g36
15:40:20 211  ,cad_g37
15:40:20 212  ,cad_g38
15:40:20 213  ,cad_g39
15:40:20 214  ,cad_g40
15:40:20 215  ,cad_g41
15:40:20 216  ,chf_g00
15:40:20 217  ,chf_g01
15:40:20 218  ,chf_g02
15:40:20 219  ,chf_g03
15:40:20 220  ,chf_g04
15:40:20 221  ,chf_g05
15:40:20 222  ,chf_g06
15:40:20 223  ,chf_g07
15:40:20 224  ,chf_g08
15:40:20 225  ,chf_g09
15:40:20 226  ,chf_g10
15:40:20 227  ,chf_g11
15:40:20 228  ,chf_g12
15:40:20 229  ,chf_g13
15:40:20 230  ,chf_g14
15:40:20 231  ,chf_g15
15:40:20 232  ,chf_g16
15:40:20 233  ,chf_g17
15:40:20 234  ,chf_g18
15:40:20 235  ,chf_g19
15:40:20 236  ,chf_g20
15:40:20 237  ,chf_g21
15:40:20 238  ,chf_g22
15:40:20 239  ,chf_g23
15:40:20 240  ,chf_g24
15:40:20 241  ,chf_g25
15:40:20 242  ,chf_g26
15:40:20 243  ,chf_g27
15:40:20 244  ,chf_g28
15:40:20 245  ,chf_g29
15:40:20 246  ,chf_g30
15:40:20 247  ,chf_g31
15:40:20 248  ,chf_g32
15:40:20 249  ,chf_g33
15:40:20 250  ,chf_g34
15:40:20 251  ,chf_g35
15:40:20 252  ,chf_g36
15:40:20 253  ,chf_g37
15:40:20 254  ,chf_g38
15:40:20 255  ,chf_g39
15:40:20 256  ,chf_g40
15:40:20 257  ,chf_g41
15:40:20 258  FROM aud_ms6 m
15:40:20 259  WHERE m.ydate = '&1'||' '||'&2'
15:40:20 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'15:25:00'

View created.

Elapsed: 00:00:00.12
15:40:21 SQL> 
15:40:21 SQL> -- rpt
15:40:21 SQL> -- We should see just 1 row:
15:40:21 SQL> 
15:40:21 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.03
15:40:21 SQL> 
15:40:21 SQL> -- Build the model:
15:40:21 SQL> CREATE OR REPLACE VIEW bme AS
15:40:21   2  SELECT
15:40:21   3  'aud'||m.ydate prdate
15:40:21   4  ,gattn
15:40:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
15:40:21   6  ,eur_g00
15:40:21   7  ,eur_g01
15:40:21   8  ,eur_g02
15:40:21   9  ,eur_g03
15:40:21  10  ,eur_g04
15:40:21  11  ,eur_g05
15:40:21  12  ,eur_g06
15:40:21  13  ,eur_g07
15:40:21  14  ,eur_g08
15:40:21  15  ,eur_g09
15:40:21  16  ,eur_g10
15:40:21  17  ,eur_g11
15:40:21  18  ,eur_g12
15:40:21  19  ,eur_g13
15:40:21  20  ,eur_g14
15:40:21  21  ,eur_g15
15:40:21  22  ,eur_g16
15:40:21  23  ,eur_g17
15:40:21  24  ,eur_g18
15:40:21  25  ,eur_g19
15:40:21  26  ,eur_g20
15:40:21  27  ,eur_g21
15:40:21  28  ,eur_g22
15:40:21  29  ,eur_g23
15:40:21  30  ,eur_g24
15:40:21  31  ,eur_g25
15:40:21  32  ,eur_g26
15:40:21  33  ,eur_g27
15:40:21  34  ,eur_g28
15:40:21  35  ,eur_g29
15:40:21  36  ,eur_g30
15:40:21  37  ,eur_g31
15:40:21  38  ,eur_g32
15:40:21  39  ,eur_g33
15:40:21  40  ,eur_g34
15:40:21  41  ,eur_g35
15:40:21  42  ,eur_g36
15:40:21  43  ,eur_g37
15:40:21  44  ,eur_g38
15:40:21  45  ,eur_g39
15:40:21  46  ,eur_g40
15:40:21  47  ,eur_g41
15:40:21  48  ,aud_g00
15:40:21  49  ,aud_g01
15:40:21  50  ,aud_g02
15:40:21  51  ,aud_g03
15:40:21  52  ,aud_g04
15:40:21  53  ,aud_g05
15:40:21  54  ,aud_g06
15:40:21  55  ,aud_g07
15:40:21  56  ,aud_g08
15:40:21  57  ,aud_g09
15:40:21  58  ,aud_g10
15:40:21  59  ,aud_g11
15:40:21  60  ,aud_g12
15:40:21  61  ,aud_g13
15:40:21  62  ,aud_g14
15:40:21  63  ,aud_g15
15:40:21  64  ,aud_g16
15:40:21  65  ,aud_g17
15:40:21  66  ,aud_g18
15:40:21  67  ,aud_g19
15:40:21  68  ,aud_g20
15:40:21  69  ,aud_g21
15:40:21  70  ,aud_g22
15:40:21  71  ,aud_g23
15:40:21  72  ,aud_g24
15:40:21  73  ,aud_g25
15:40:21  74  ,aud_g26
15:40:21  75  ,aud_g27
15:40:21  76  ,aud_g28
15:40:21  77  ,aud_g29
15:40:21  78  ,aud_g30
15:40:21  79  ,aud_g31
15:40:21  80  ,aud_g32
15:40:21  81  ,aud_g33
15:40:21  82  ,aud_g34
15:40:21  83  ,aud_g35
15:40:21  84  ,aud_g36
15:40:21  85  ,aud_g37
15:40:21  86  ,aud_g38
15:40:21  87  ,aud_g39
15:40:21  88  ,aud_g40
15:40:21  89  ,aud_g41
15:40:21  90  ,gbp_g00
15:40:21  91  ,gbp_g01
15:40:21  92  ,gbp_g02
15:40:21  93  ,gbp_g03
15:40:21  94  ,gbp_g04
15:40:21  95  ,gbp_g05
15:40:21  96  ,gbp_g06
15:40:21  97  ,gbp_g07
15:40:21  98  ,gbp_g08
15:40:21  99  ,gbp_g09
15:40:21 100  ,gbp_g10
15:40:21 101  ,gbp_g11
15:40:21 102  ,gbp_g12
15:40:21 103  ,gbp_g13
15:40:21 104  ,gbp_g14
15:40:21 105  ,gbp_g15
15:40:21 106  ,gbp_g16
15:40:21 107  ,gbp_g17
15:40:21 108  ,gbp_g18
15:40:21 109  ,gbp_g19
15:40:21 110  ,gbp_g20
15:40:21 111  ,gbp_g21
15:40:21 112  ,gbp_g22
15:40:21 113  ,gbp_g23
15:40:21 114  ,gbp_g24
15:40:21 115  ,gbp_g25
15:40:21 116  ,gbp_g26
15:40:21 117  ,gbp_g27
15:40:21 118  ,gbp_g28
15:40:21 119  ,gbp_g29
15:40:21 120  ,gbp_g30
15:40:21 121  ,gbp_g31
15:40:21 122  ,gbp_g32
15:40:21 123  ,gbp_g33
15:40:21 124  ,gbp_g34
15:40:21 125  ,gbp_g35
15:40:21 126  ,gbp_g36
15:40:21 127  ,gbp_g37
15:40:21 128  ,gbp_g38
15:40:21 129  ,gbp_g39
15:40:21 130  ,gbp_g40
15:40:21 131  ,gbp_g41
15:40:21 132  ,jpy_g00
15:40:21 133  ,jpy_g01
15:40:21 134  ,jpy_g02
15:40:21 135  ,jpy_g03
15:40:21 136  ,jpy_g04
15:40:21 137  ,jpy_g05
15:40:21 138  ,jpy_g06
15:40:21 139  ,jpy_g07
15:40:21 140  ,jpy_g08
15:40:21 141  ,jpy_g09
15:40:21 142  ,jpy_g10
15:40:21 143  ,jpy_g11
15:40:21 144  ,jpy_g12
15:40:21 145  ,jpy_g13
15:40:21 146  ,jpy_g14
15:40:21 147  ,jpy_g15
15:40:21 148  ,jpy_g16
15:40:21 149  ,jpy_g17
15:40:21 150  ,jpy_g18
15:40:21 151  ,jpy_g19
15:40:21 152  ,jpy_g20
15:40:21 153  ,jpy_g21
15:40:21 154  ,jpy_g22
15:40:21 155  ,jpy_g23
15:40:21 156  ,jpy_g24
15:40:21 157  ,jpy_g25
15:40:21 158  ,jpy_g26
15:40:21 159  ,jpy_g27
15:40:21 160  ,jpy_g28
15:40:21 161  ,jpy_g29
15:40:21 162  ,jpy_g30
15:40:21 163  ,jpy_g31
15:40:21 164  ,jpy_g32
15:40:21 165  ,jpy_g33
15:40:21 166  ,jpy_g34
15:40:21 167  ,jpy_g35
15:40:21 168  ,jpy_g36
15:40:21 169  ,jpy_g37
15:40:21 170  ,jpy_g38
15:40:21 171  ,jpy_g39
15:40:21 172  ,jpy_g40
15:40:21 173  ,jpy_g41
15:40:21 174  ,cad_g00
15:40:21 175  ,cad_g01
15:40:21 176  ,cad_g02
15:40:21 177  ,cad_g03
15:40:21 178  ,cad_g04
15:40:21 179  ,cad_g05
15:40:21 180  ,cad_g06
15:40:21 181  ,cad_g07
15:40:21 182  ,cad_g08
15:40:21 183  ,cad_g09
15:40:21 184  ,cad_g10
15:40:21 185  ,cad_g11
15:40:21 186  ,cad_g12
15:40:21 187  ,cad_g13
15:40:21 188  ,cad_g14
15:40:21 189  ,cad_g15
15:40:21 190  ,cad_g16
15:40:21 191  ,cad_g17
15:40:21 192  ,cad_g18
15:40:21 193  ,cad_g19
15:40:21 194  ,cad_g20
15:40:21 195  ,cad_g21
15:40:21 196  ,cad_g22
15:40:21 197  ,cad_g23
15:40:21 198  ,cad_g24
15:40:21 199  ,cad_g25
15:40:21 200  ,cad_g26
15:40:21 201  ,cad_g27
15:40:21 202  ,cad_g28
15:40:21 203  ,cad_g29
15:40:21 204  ,cad_g30
15:40:21 205  ,cad_g31
15:40:21 206  ,cad_g32
15:40:21 207  ,cad_g33
15:40:21 208  ,cad_g34
15:40:21 209  ,cad_g35
15:40:21 210  ,cad_g36
15:40:21 211  ,cad_g37
15:40:21 212  ,cad_g38
15:40:21 213  ,cad_g39
15:40:21 214  ,cad_g40
15:40:21 215  ,cad_g41
15:40:21 216  ,chf_g00
15:40:21 217  ,chf_g01
15:40:21 218  ,chf_g02
15:40:21 219  ,chf_g03
15:40:21 220  ,chf_g04
15:40:21 221  ,chf_g05
15:40:21 222  ,chf_g06
15:40:21 223  ,chf_g07
15:40:21 224  ,chf_g08
15:40:21 225  ,chf_g09
15:40:21 226  ,chf_g10
15:40:21 227  ,chf_g11
15:40:21 228  ,chf_g12
15:40:21 229  ,chf_g13
15:40:21 230  ,chf_g14
15:40:21 231  ,chf_g15
15:40:21 232  ,chf_g16
15:40:21 233  ,chf_g17
15:40:21 234  ,chf_g18
15:40:21 235  ,chf_g19
15:40:21 236  ,chf_g20
15:40:21 237  ,chf_g21
15:40:21 238  ,chf_g22
15:40:21 239  ,chf_g23
15:40:21 240  ,chf_g24
15:40:21 241  ,chf_g25
15:40:21 242  ,chf_g26
15:40:21 243  ,chf_g27
15:40:21 244  ,chf_g28
15:40:21 245  ,chf_g29
15:40:21 246  ,chf_g30
15:40:21 247  ,chf_g31
15:40:21 248  ,chf_g32
15:40:21 249  ,chf_g33
15:40:21 250  ,chf_g34
15:40:21 251  ,chf_g35
15:40:21 252  ,chf_g36
15:40:21 253  ,chf_g37
15:40:21 254  ,chf_g38
15:40:21 255  ,chf_g39
15:40:21 256  ,chf_g40
15:40:21 257  ,chf_g41
15:40:21 258  FROM aud_ms6 m
15:40:21 259  WHERE gattn IN('nup','up')
15:40:21 260  AND 1+m.ydate < '&1'||' '||'&2'
15:40:21 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'15:25:00'

View created.

Elapsed: 00:00:00.12
15:40:21 SQL> 
15:40:21 SQL> -- rpt
15:40:21 SQL> 
15:40:21 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12874
up	     6637

Elapsed: 00:00:00.04
15:40:21 SQL> 
15:40:21 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-06 15:20:00

Elapsed: 00:00:00.04
15:40:21 SQL> 
15:40:21 SQL> -- Now build model from bme and score sme
15:40:21 SQL> @score1gattn.sql
15:40:21 SQL> -- score1gattn.sql
15:40:21 SQL> 
15:40:21 SQL> -- Does the 1st SVM score
15:40:21 SQL> 
15:40:21 SQL> -- Fill up svmc_apply_prep
15:40:21 SQL> @score_gattn.sql
15:40:21 SQL> --
15:40:21 SQL> -- score_gattn.sql
15:40:21 SQL> --
15:40:21 SQL> 
15:40:21 SQL> -- usage: score_gattn.sql
15:40:21 SQL> 
15:40:21 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
15:40:21 SQL> 
15:40:21 SQL> DEFINE target	= 'gattn'
15:40:21 SQL> DEFINE model_name = 'forex15'
15:40:21 SQL> DEFINE bldtable	= 'bme'
15:40:21 SQL> DEFINE scoretable = 'sme'
15:40:21 SQL> DEFINE case_id	= 'prdate'
15:40:21 SQL> 
15:40:21 SQL> -- Define a variable to help me exclude some columns from some data mining calls
15:40:21 SQL> DEFINE exclude1 = "'&target','&case_id'"
15:40:21 SQL> 
15:40:21 SQL> -- Builds an SVM model using pl/sql.
15:40:21 SQL> 
15:40:21 SQL> -----------------------------------------------------------------------
15:40:21 SQL> --			    BUILD THE MODEL
15:40:21 SQL> -----------------------------------------------------------------------
15:40:21 SQL> 
15:40:21 SQL> -- Cleanup old build data preparation objects for repeat runs
15:40:21 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
15:40:21 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
15:40:21 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
15:40:21 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
15:40:21 SQL> 
15:40:21 SQL> 
15:40:21 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
15:40:21 SQL> --
15:40:21 SQL> -- DROP	TABLE svmc_settings ;
15:40:21 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
15:40:21 SQL> -- DELETE svmc_settings;
15:40:21 SQL> 
15:40:21 SQL> -- The default classification algorithm is Naive Bayes. So override
15:40:21 SQL> -- this choice to SVM using a settings table.
15:40:21 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
15:40:21 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
15:40:21 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
15:40:21 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
15:40:21 SQL> -- models.
15:40:21 SQL> --
15:40:21 SQL> 
15:40:21 SQL> -- Do this once and then comment it out.
15:40:21 SQL> -- That makes script go faster.
15:40:21 SQL> -- BEGIN
15:40:21 SQL> -- -- Populate settings table
15:40:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:40:21 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
15:40:21 SQL> --
15:40:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:40:21 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
15:40:21 SQL> --
15:40:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
15:40:21 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
15:40:21 SQL> --   COMMIT;
15:40:21 SQL> -- END;
15:40:21 SQL> -- /
15:40:21 SQL> 
15:40:21 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
15:40:21 SQL> 
15:40:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
15:40:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:40:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
15:40:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
15:40:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:40:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:40:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
15:40:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:40:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.28
15:40:21 SQL> 
15:40:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
15:40:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:40:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.18
15:40:21 SQL> 
15:40:21 SQL> --------------------------------
15:40:21 SQL> -- PREPARE BUILD (TRAINING) DATA
15:40:21 SQL> --
15:40:21 SQL> 
15:40:21 SQL> -- 1. Missing Value treatment for all Predictors and
15:40:21 SQL> -- 2. Outlier Treatment and
15:40:21 SQL> -- 3. Normalization are performed below.
15:40:21 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
15:40:21 SQL> --    normalized here.
15:40:21 SQL> 
15:40:21 SQL> BEGIN
15:40:21   2  	-- Perform missing value treatment for all predictors
15:40:21   3  	-- create miss tables
15:40:21   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
15:40:21   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
15:40:21   6  
15:40:21   7  	-- populate miss tables
15:40:21   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
15:40:21   9  	  miss_table_name => 'svmc_miss_num',
15:40:21  10  	  data_table_name => '&bldtable',
15:40:21  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:40:21  12  
15:40:21  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
15:40:21  14  	  miss_table_name => 'svmc_miss_cat',
15:40:21  15  	  data_table_name => '&bldtable',
15:40:21  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:40:21  17  
15:40:21  18  	-- xform input data to replace missing values
15:40:21  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:40:21  20  	  miss_table_name => 'svmc_miss_num',
15:40:21  21  	  data_table_name => '&bldtable',
15:40:21  22  	  xform_view_name => 'xformed_build_miss_num');
15:40:21  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:40:21  24  	  miss_table_name => 'svmc_miss_cat',
15:40:21  25  	  data_table_name => '&bldtable',
15:40:21  26  	  xform_view_name => 'xformed_build_miss_cat');
15:40:21  27  
15:40:21  28  	-- Perform outlier treatment.
15:40:21  29  	-- create clip table
15:40:21  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
15:40:21  31  
15:40:21  32  	-- populate clip table
15:40:21  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
15:40:21  34  	  clip_table_name => 'svmc_clip',
15:40:21  35  	  data_table_name => '&bldtable',
15:40:21  36  	  tail_frac	  => 0.025,
15:40:21  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:40:21  38  
15:40:21  39  	-- xform input data to winsorized data
15:40:21  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
15:40:21  41  	  clip_table_name => 'svmc_clip',
15:40:21  42  	  data_table_name => '&bldtable',
15:40:21  43  	  xform_view_name => 'svmc_winsor');
15:40:21  44  
15:40:21  45  	-- create normalization table
15:40:21  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
15:40:21  47  
15:40:21  48  	-- populate normalization table based on winsorized data
15:40:21  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
15:40:21  50  	  norm_table_name => 'svmc_norm',
15:40:21  51  	  data_table_name => 'svmc_winsor',
15:40:21  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
15:40:21  53  
15:40:21  54  	-- normalize the original data
15:40:21  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:40:21  56  	  norm_table_name => 'svmc_norm',
15:40:21  57  	  data_table_name => '&bldtable',
15:40:21  58  	  xform_view_name => 'svmc_build_prep');
15:40:21  59  END;
15:40:21  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.44
15:40:40 SQL> 
15:40:40 SQL> ---------------------
15:40:40 SQL> -- CREATE A NEW MODEL
15:40:40 SQL> --
15:40:40 SQL> -- Cleanup old model with the same name for repeat runs
15:40:40 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
15:40:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:40:40   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.94
15:40:41 SQL> 
15:40:41 SQL> -- Build a new SVM Model
15:40:41 SQL> BEGIN
15:40:41   2  	DBMS_DATA_MINING.CREATE_MODEL(
15:40:41   3  	  model_name	      => '&model_name',
15:40:41   4  	  mining_function     => dbms_data_mining.classification,
15:40:41   5  	  data_table_name     => 'svmc_build_prep',
15:40:41   6  	  case_id_column_name => '&case_id',
15:40:41   7  	  target_column_name  => '&target',
15:40:41   8  	  settings_table_name => 'svmc_settings');
15:40:41   9  END;
15:40:41  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.28
15:41:09 SQL> 
15:41:09 SQL> -----------------------------------------------------------------------
15:41:09 SQL> --			       APPLY/score THE MODEL
15:41:09 SQL> -----------------------------------------------------------------------
15:41:09 SQL> 
15:41:09 SQL> -- Cleanup old scoring data preparation objects for repeat runs
15:41:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
15:41:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:41:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
15:41:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
15:41:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:41:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:41:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
15:41:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
15:41:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
15:41:09 SQL> -----------------------
15:41:09 SQL> -- PREPARE SCORING DATA
15:41:09 SQL> --
15:41:09 SQL> -- If the data for model creation has been prepared, then the data
15:41:09 SQL> -- to be scored using the model must be prepared in the same manner
15:41:09 SQL> -- in order to obtain meaningful results.
15:41:09 SQL> --
15:41:09 SQL> -- 1. Missing Value treatment for all Predictors and
15:41:09 SQL> -- 2. Normalization
15:41:09 SQL> -- No outlier treatment will be performed during test and apply. The
15:41:09 SQL> -- normalization step is sufficient, since the normalization parameters
15:41:09 SQL> -- already capture the effects of outlier treatment done with build data.
15:41:09 SQL> --
15:41:09 SQL> BEGIN
15:41:09   2  	-- Xform Test data to replace missing values
15:41:09   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
15:41:09   4  	  miss_table_name => 'svmc_miss_num',
15:41:09   5  	  data_table_name => '&scoretable',
15:41:09   6  	  xform_view_name => 'xformed_apply_miss_num');
15:41:09   7  
15:41:09   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
15:41:09   9  	  miss_table_name => 'svmc_miss_cat',
15:41:09  10  	  data_table_name => '&scoretable',
15:41:09  11  	  xform_view_name => 'xformed_apply_miss_cat');
15:41:09  12  
15:41:09  13  	-- Normalize the data to be scored
15:41:09  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
15:41:09  15  	  norm_table_name => 'svmc_norm',
15:41:09  16  	  data_table_name => '&scoretable',
15:41:09  17  	  xform_view_name => 'svmc_apply_prep');
15:41:09  18  END;
15:41:09  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
15:41:10 SQL> 
15:41:10 SQL> -- Use same model_name used in score_gattn.sql
15:41:10 SQL> DEFINE model_name = 'forex15'
15:41:10 SQL> 
15:41:10 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
15:41:10 SQL> 
15:41:10 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
15:41:10   2  SELECT
15:41:10   3  prdate
15:41:10   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
15:41:10   5  ,sysdate
15:41:10   6  ,SUBSTR(prdate,1,3)pair
15:41:10   7  ,SUBSTR(prdate,4,19)ydate
15:41:10   8  FROM svmc_apply_prep
15:41:10   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
15:41:11 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
