
SQL*Plus: Release 11.2.0.1.0 Production on Wed Dec 29 20:17:08 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

20:17:08 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
20:17:08 SQL> 20:17:08 SQL> @aud_score1day.sql  2010-12-29 19:55:00
20:17:08 SQL> --
20:17:08 SQL> -- aud_score1day.sql
20:17:08 SQL> --
20:17:08 SQL> 
20:17:08 SQL> CREATE OR REPLACE VIEW sme AS
20:17:08   2  SELECT
20:17:08   3  'aud'||m.ydate prdate
20:17:08   4  ,NULL gatt
20:17:08   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:17:08   6  ,eur_g00
20:17:08   7  ,eur_g01
20:17:08   8  ,eur_g02
20:17:08   9  ,eur_g03
20:17:08  10  ,eur_g04
20:17:08  11  ,eur_g05
20:17:08  12  ,eur_g06
20:17:08  13  ,eur_g07
20:17:08  14  ,eur_g08
20:17:08  15  ,eur_g09
20:17:08  16  ,eur_g10
20:17:08  17  ,eur_g11
20:17:08  18  ,eur_g12
20:17:08  19  ,eur_g13
20:17:08  20  ,eur_g14
20:17:08  21  ,eur_g15
20:17:08  22  ,eur_g16
20:17:08  23  ,eur_g17
20:17:08  24  ,eur_g18
20:17:08  25  ,eur_g19
20:17:08  26  ,eur_g20
20:17:08  27  ,eur_g21
20:17:08  28  ,eur_g22
20:17:08  29  ,eur_g23
20:17:08  30  ,eur_g24
20:17:08  31  ,eur_g25
20:17:08  32  ,eur_g26
20:17:08  33  ,eur_g27
20:17:08  34  ,eur_g28
20:17:08  35  ,eur_g29
20:17:08  36  ,eur_g30
20:17:08  37  ,eur_g31
20:17:08  38  ,eur_g32
20:17:08  39  ,eur_g33
20:17:08  40  ,eur_g34
20:17:08  41  ,eur_g35
20:17:08  42  ,eur_g36
20:17:08  43  ,eur_g37
20:17:08  44  ,eur_g38
20:17:08  45  ,eur_g39
20:17:08  46  ,eur_g40
20:17:08  47  ,eur_g41
20:17:08  48  ,aud_g00
20:17:08  49  ,aud_g01
20:17:08  50  ,aud_g02
20:17:08  51  ,aud_g03
20:17:08  52  ,aud_g04
20:17:08  53  ,aud_g05
20:17:08  54  ,aud_g06
20:17:08  55  ,aud_g07
20:17:08  56  ,aud_g08
20:17:08  57  ,aud_g09
20:17:08  58  ,aud_g10
20:17:08  59  ,aud_g11
20:17:08  60  ,aud_g12
20:17:08  61  ,aud_g13
20:17:08  62  ,aud_g14
20:17:08  63  ,aud_g15
20:17:08  64  ,aud_g16
20:17:08  65  ,aud_g17
20:17:08  66  ,aud_g18
20:17:08  67  ,aud_g19
20:17:08  68  ,aud_g20
20:17:08  69  ,aud_g21
20:17:08  70  ,aud_g22
20:17:08  71  ,aud_g23
20:17:08  72  ,aud_g24
20:17:08  73  ,aud_g25
20:17:08  74  ,aud_g26
20:17:08  75  ,aud_g27
20:17:08  76  ,aud_g28
20:17:08  77  ,aud_g29
20:17:08  78  ,aud_g30
20:17:08  79  ,aud_g31
20:17:08  80  ,aud_g32
20:17:08  81  ,aud_g33
20:17:08  82  ,aud_g34
20:17:08  83  ,aud_g35
20:17:08  84  ,aud_g36
20:17:08  85  ,aud_g37
20:17:08  86  ,aud_g38
20:17:08  87  ,aud_g39
20:17:08  88  ,aud_g40
20:17:08  89  ,aud_g41
20:17:08  90  ,gbp_g00
20:17:08  91  ,gbp_g01
20:17:08  92  ,gbp_g02
20:17:08  93  ,gbp_g03
20:17:08  94  ,gbp_g04
20:17:08  95  ,gbp_g05
20:17:08  96  ,gbp_g06
20:17:08  97  ,gbp_g07
20:17:08  98  ,gbp_g08
20:17:08  99  ,gbp_g09
20:17:08 100  ,gbp_g10
20:17:08 101  ,gbp_g11
20:17:08 102  ,gbp_g12
20:17:08 103  ,gbp_g13
20:17:08 104  ,gbp_g14
20:17:08 105  ,gbp_g15
20:17:08 106  ,gbp_g16
20:17:08 107  ,gbp_g17
20:17:08 108  ,gbp_g18
20:17:08 109  ,gbp_g19
20:17:08 110  ,gbp_g20
20:17:08 111  ,gbp_g21
20:17:08 112  ,gbp_g22
20:17:08 113  ,gbp_g23
20:17:08 114  ,gbp_g24
20:17:08 115  ,gbp_g25
20:17:08 116  ,gbp_g26
20:17:08 117  ,gbp_g27
20:17:08 118  ,gbp_g28
20:17:08 119  ,gbp_g29
20:17:08 120  ,gbp_g30
20:17:08 121  ,gbp_g31
20:17:08 122  ,gbp_g32
20:17:08 123  ,gbp_g33
20:17:08 124  ,gbp_g34
20:17:08 125  ,gbp_g35
20:17:08 126  ,gbp_g36
20:17:08 127  ,gbp_g37
20:17:08 128  ,gbp_g38
20:17:08 129  ,gbp_g39
20:17:08 130  ,gbp_g40
20:17:08 131  ,gbp_g41
20:17:08 132  ,jpy_g00
20:17:08 133  ,jpy_g01
20:17:08 134  ,jpy_g02
20:17:08 135  ,jpy_g03
20:17:08 136  ,jpy_g04
20:17:08 137  ,jpy_g05
20:17:08 138  ,jpy_g06
20:17:08 139  ,jpy_g07
20:17:08 140  ,jpy_g08
20:17:08 141  ,jpy_g09
20:17:08 142  ,jpy_g10
20:17:08 143  ,jpy_g11
20:17:08 144  ,jpy_g12
20:17:08 145  ,jpy_g13
20:17:08 146  ,jpy_g14
20:17:08 147  ,jpy_g15
20:17:08 148  ,jpy_g16
20:17:08 149  ,jpy_g17
20:17:08 150  ,jpy_g18
20:17:08 151  ,jpy_g19
20:17:08 152  ,jpy_g20
20:17:08 153  ,jpy_g21
20:17:08 154  ,jpy_g22
20:17:08 155  ,jpy_g23
20:17:08 156  ,jpy_g24
20:17:08 157  ,jpy_g25
20:17:08 158  ,jpy_g26
20:17:08 159  ,jpy_g27
20:17:08 160  ,jpy_g28
20:17:08 161  ,jpy_g29
20:17:08 162  ,jpy_g30
20:17:08 163  ,jpy_g31
20:17:08 164  ,jpy_g32
20:17:08 165  ,jpy_g33
20:17:08 166  ,jpy_g34
20:17:08 167  ,jpy_g35
20:17:08 168  ,jpy_g36
20:17:08 169  ,jpy_g37
20:17:08 170  ,jpy_g38
20:17:08 171  ,jpy_g39
20:17:08 172  ,jpy_g40
20:17:08 173  ,jpy_g41
20:17:08 174  ,cad_g00
20:17:08 175  ,cad_g01
20:17:08 176  ,cad_g02
20:17:08 177  ,cad_g03
20:17:08 178  ,cad_g04
20:17:08 179  ,cad_g05
20:17:08 180  ,cad_g06
20:17:08 181  ,cad_g07
20:17:08 182  ,cad_g08
20:17:08 183  ,cad_g09
20:17:08 184  ,cad_g10
20:17:08 185  ,cad_g11
20:17:08 186  ,cad_g12
20:17:08 187  ,cad_g13
20:17:08 188  ,cad_g14
20:17:08 189  ,cad_g15
20:17:08 190  ,cad_g16
20:17:08 191  ,cad_g17
20:17:08 192  ,cad_g18
20:17:08 193  ,cad_g19
20:17:08 194  ,cad_g20
20:17:08 195  ,cad_g21
20:17:08 196  ,cad_g22
20:17:08 197  ,cad_g23
20:17:08 198  ,cad_g24
20:17:08 199  ,cad_g25
20:17:08 200  ,cad_g26
20:17:08 201  ,cad_g27
20:17:08 202  ,cad_g28
20:17:08 203  ,cad_g29
20:17:08 204  ,cad_g30
20:17:08 205  ,cad_g31
20:17:08 206  ,cad_g32
20:17:08 207  ,cad_g33
20:17:08 208  ,cad_g34
20:17:08 209  ,cad_g35
20:17:08 210  ,cad_g36
20:17:08 211  ,cad_g37
20:17:08 212  ,cad_g38
20:17:08 213  ,cad_g39
20:17:08 214  ,cad_g40
20:17:08 215  ,cad_g41
20:17:08 216  ,chf_g00
20:17:08 217  ,chf_g01
20:17:08 218  ,chf_g02
20:17:08 219  ,chf_g03
20:17:08 220  ,chf_g04
20:17:08 221  ,chf_g05
20:17:08 222  ,chf_g06
20:17:08 223  ,chf_g07
20:17:08 224  ,chf_g08
20:17:08 225  ,chf_g09
20:17:08 226  ,chf_g10
20:17:08 227  ,chf_g11
20:17:08 228  ,chf_g12
20:17:08 229  ,chf_g13
20:17:08 230  ,chf_g14
20:17:08 231  ,chf_g15
20:17:08 232  ,chf_g16
20:17:08 233  ,chf_g17
20:17:08 234  ,chf_g18
20:17:08 235  ,chf_g19
20:17:08 236  ,chf_g20
20:17:08 237  ,chf_g21
20:17:08 238  ,chf_g22
20:17:08 239  ,chf_g23
20:17:08 240  ,chf_g24
20:17:08 241  ,chf_g25
20:17:08 242  ,chf_g26
20:17:08 243  ,chf_g27
20:17:08 244  ,chf_g28
20:17:08 245  ,chf_g29
20:17:08 246  ,chf_g30
20:17:08 247  ,chf_g31
20:17:08 248  ,chf_g32
20:17:08 249  ,chf_g33
20:17:08 250  ,chf_g34
20:17:08 251  ,chf_g35
20:17:08 252  ,chf_g36
20:17:08 253  ,chf_g37
20:17:08 254  ,chf_g38
20:17:08 255  ,chf_g39
20:17:08 256  ,chf_g40
20:17:08 257  ,chf_g41
20:17:08 258  FROM aud_ms6 m
20:17:08 259  WHERE m.ydate = '&1'||' '||'&2'
20:17:08 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'19:55:00'

View created.

Elapsed: 00:00:00.11
20:17:08 SQL> 
20:17:08 SQL> -- rpt
20:17:08 SQL> -- We should see just 1 row:
20:17:08 SQL> 
20:17:08 SQL> SELECT COUNT(prdate) FROM sme
20:17:08   2  
20:17:08 SQL> -- Build the model:
20:17:08 SQL> CREATE OR REPLACE VIEW bme AS
20:17:08   2  SELECT
20:17:08   3  'aud'||m.ydate prdate
20:17:08   4  ,gatt
20:17:08   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:17:08   6  ,eur_g00
20:17:08   7  ,eur_g01
20:17:08   8  ,eur_g02
20:17:08   9  ,eur_g03
20:17:08  10  ,eur_g04
20:17:08  11  ,eur_g05
20:17:08  12  ,eur_g06
20:17:08  13  ,eur_g07
20:17:08  14  ,eur_g08
20:17:08  15  ,eur_g09
20:17:08  16  ,eur_g10
20:17:08  17  ,eur_g11
20:17:08  18  ,eur_g12
20:17:08  19  ,eur_g13
20:17:08  20  ,eur_g14
20:17:08  21  ,eur_g15
20:17:08  22  ,eur_g16
20:17:08  23  ,eur_g17
20:17:08  24  ,eur_g18
20:17:08  25  ,eur_g19
20:17:08  26  ,eur_g20
20:17:08  27  ,eur_g21
20:17:08  28  ,eur_g22
20:17:08  29  ,eur_g23
20:17:08  30  ,eur_g24
20:17:08  31  ,eur_g25
20:17:08  32  ,eur_g26
20:17:08  33  ,eur_g27
20:17:08  34  ,eur_g28
20:17:08  35  ,eur_g29
20:17:08  36  ,eur_g30
20:17:08  37  ,eur_g31
20:17:08  38  ,eur_g32
20:17:08  39  ,eur_g33
20:17:08  40  ,eur_g34
20:17:08  41  ,eur_g35
20:17:08  42  ,eur_g36
20:17:08  43  ,eur_g37
20:17:08  44  ,eur_g38
20:17:08  45  ,eur_g39
20:17:08  46  ,eur_g40
20:17:08  47  ,eur_g41
20:17:08  48  ,aud_g00
20:17:08  49  ,aud_g01
20:17:08  50  ,aud_g02
20:17:08  51  ,aud_g03
20:17:08  52  ,aud_g04
20:17:08  53  ,aud_g05
20:17:08  54  ,aud_g06
20:17:08  55  ,aud_g07
20:17:08  56  ,aud_g08
20:17:08  57  ,aud_g09
20:17:08  58  ,aud_g10
20:17:08  59  ,aud_g11
20:17:08  60  ,aud_g12
20:17:08  61  ,aud_g13
20:17:08  62  ,aud_g14
20:17:08  63  ,aud_g15
20:17:08  64  ,aud_g16
20:17:08  65  ,aud_g17
20:17:08  66  ,aud_g18
20:17:08  67  ,aud_g19
20:17:08  68  ,aud_g20
20:17:08  69  ,aud_g21
20:17:08  70  ,aud_g22
20:17:08  71  ,aud_g23
20:17:08  72  ,aud_g24
20:17:08  73  ,aud_g25
20:17:08  74  ,aud_g26
20:17:08  75  ,aud_g27
20:17:08  76  ,aud_g28
20:17:08  77  ,aud_g29
20:17:08  78  ,aud_g30
20:17:08  79  ,aud_g31
20:17:08  80  ,aud_g32
20:17:08  81  ,aud_g33
20:17:08  82  ,aud_g34
20:17:08  83  ,aud_g35
20:17:08  84  ,aud_g36
20:17:08  85  ,aud_g37
20:17:08  86  ,aud_g38
20:17:08  87  ,aud_g39
20:17:08  88  ,aud_g40
20:17:08  89  ,aud_g41
20:17:08  90  ,gbp_g00
20:17:08  91  ,gbp_g01
20:17:08  92  ,gbp_g02
20:17:08  93  ,gbp_g03
20:17:08  94  ,gbp_g04
20:17:08  95  ,gbp_g05
20:17:08  96  ,gbp_g06
20:17:08  97  ,gbp_g07
20:17:08  98  ,gbp_g08
20:17:08  99  ,gbp_g09
20:17:08 100  ,gbp_g10
20:17:08 101  ,gbp_g11
20:17:08 102  ,gbp_g12
20:17:08 103  ,gbp_g13
20:17:08 104  ,gbp_g14
20:17:08 105  ,gbp_g15
20:17:08 106  ,gbp_g16
20:17:08 107  ,gbp_g17
20:17:08 108  ,gbp_g18
20:17:08 109  ,gbp_g19
20:17:08 110  ,gbp_g20
20:17:08 111  ,gbp_g21
20:17:08 112  ,gbp_g22
20:17:08 113  ,gbp_g23
20:17:08 114  ,gbp_g24
20:17:08 115  ,gbp_g25
20:17:08 116  ,gbp_g26
20:17:08 117  ,gbp_g27
20:17:08 118  ,gbp_g28
20:17:08 119  ,gbp_g29
20:17:08 120  ,gbp_g30
20:17:08 121  ,gbp_g31
20:17:08 122  ,gbp_g32
20:17:08 123  ,gbp_g33
20:17:08 124  ,gbp_g34
20:17:08 125  ,gbp_g35
20:17:08 126  ,gbp_g36
20:17:08 127  ,gbp_g37
20:17:08 128  ,gbp_g38
20:17:08 129  ,gbp_g39
20:17:08 130  ,gbp_g40
20:17:08 131  ,gbp_g41
20:17:08 132  ,jpy_g00
20:17:08 133  ,jpy_g01
20:17:08 134  ,jpy_g02
20:17:08 135  ,jpy_g03
20:17:08 136  ,jpy_g04
20:17:08 137  ,jpy_g05
20:17:08 138  ,jpy_g06
20:17:08 139  ,jpy_g07
20:17:08 140  ,jpy_g08
20:17:08 141  ,jpy_g09
20:17:08 142  ,jpy_g10
20:17:08 143  ,jpy_g11
20:17:08 144  ,jpy_g12
20:17:08 145  ,jpy_g13
20:17:08 146  ,jpy_g14
20:17:08 147  ,jpy_g15
20:17:08 148  ,jpy_g16
20:17:08 149  ,jpy_g17
20:17:08 150  ,jpy_g18
20:17:08 151  ,jpy_g19
20:17:08 152  ,jpy_g20
20:17:08 153  ,jpy_g21
20:17:08 154  ,jpy_g22
20:17:08 155  ,jpy_g23
20:17:08 156  ,jpy_g24
20:17:08 157  ,jpy_g25
20:17:08 158  ,jpy_g26
20:17:08 159  ,jpy_g27
20:17:08 160  ,jpy_g28
20:17:08 161  ,jpy_g29
20:17:08 162  ,jpy_g30
20:17:08 163  ,jpy_g31
20:17:08 164  ,jpy_g32
20:17:08 165  ,jpy_g33
20:17:08 166  ,jpy_g34
20:17:08 167  ,jpy_g35
20:17:08 168  ,jpy_g36
20:17:08 169  ,jpy_g37
20:17:08 170  ,jpy_g38
20:17:08 171  ,jpy_g39
20:17:08 172  ,jpy_g40
20:17:08 173  ,jpy_g41
20:17:08 174  ,cad_g00
20:17:08 175  ,cad_g01
20:17:08 176  ,cad_g02
20:17:08 177  ,cad_g03
20:17:08 178  ,cad_g04
20:17:08 179  ,cad_g05
20:17:08 180  ,cad_g06
20:17:08 181  ,cad_g07
20:17:08 182  ,cad_g08
20:17:08 183  ,cad_g09
20:17:08 184  ,cad_g10
20:17:08 185  ,cad_g11
20:17:08 186  ,cad_g12
20:17:08 187  ,cad_g13
20:17:08 188  ,cad_g14
20:17:08 189  ,cad_g15
20:17:08 190  ,cad_g16
20:17:08 191  ,cad_g17
20:17:08 192  ,cad_g18
20:17:08 193  ,cad_g19
20:17:08 194  ,cad_g20
20:17:08 195  ,cad_g21
20:17:08 196  ,cad_g22
20:17:08 197  ,cad_g23
20:17:08 198  ,cad_g24
20:17:08 199  ,cad_g25
20:17:08 200  ,cad_g26
20:17:08 201  ,cad_g27
20:17:08 202  ,cad_g28
20:17:08 203  ,cad_g29
20:17:08 204  ,cad_g30
20:17:08 205  ,cad_g31
20:17:08 206  ,cad_g32
20:17:08 207  ,cad_g33
20:17:08 208  ,cad_g34
20:17:08 209  ,cad_g35
20:17:08 210  ,cad_g36
20:17:08 211  ,cad_g37
20:17:08 212  ,cad_g38
20:17:08 213  ,cad_g39
20:17:08 214  ,cad_g40
20:17:08 215  ,cad_g41
20:17:08 216  ,chf_g00
20:17:08 217  ,chf_g01
20:17:08 218  ,chf_g02
20:17:08 219  ,chf_g03
20:17:08 220  ,chf_g04
20:17:08 221  ,chf_g05
20:17:08 222  ,chf_g06
20:17:08 223  ,chf_g07
20:17:08 224  ,chf_g08
20:17:08 225  ,chf_g09
20:17:08 226  ,chf_g10
20:17:08 227  ,chf_g11
20:17:08 228  ,chf_g12
20:17:08 229  ,chf_g13
20:17:08 230  ,chf_g14
20:17:08 231  ,chf_g15
20:17:08 232  ,chf_g16
20:17:08 233  ,chf_g17
20:17:08 234  ,chf_g18
20:17:08 235  ,chf_g19
20:17:08 236  ,chf_g20
20:17:08 237  ,chf_g21
20:17:08 238  ,chf_g22
20:17:08 239  ,chf_g23
20:17:08 240  ,chf_g24
20:17:08 241  ,chf_g25
20:17:08 242  ,chf_g26
20:17:08 243  ,chf_g27
20:17:08 244  ,chf_g28
20:17:08 245  ,chf_g29
20:17:08 246  ,chf_g30
20:17:08 247  ,chf_g31
20:17:08 248  ,chf_g32
20:17:08 249  ,chf_g33
20:17:08 250  ,chf_g34
20:17:08 251  ,chf_g35
20:17:08 252  ,chf_g36
20:17:08 253  ,chf_g37
20:17:08 254  ,chf_g38
20:17:08 255  ,chf_g39
20:17:08 256  ,chf_g40
20:17:08 257  ,chf_g41
20:17:08 258  FROM aud_ms6 m
20:17:08 259  WHERE gatt IN('nup','up')
20:17:08 260  AND 1+m.ydate < '&1'||' '||'&2'
20:17:08 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'19:55:00'

View created.

Elapsed: 00:00:00.12
20:17:08 SQL> 
20:17:08 SQL> -- rpt
20:17:08 SQL> 
20:17:08 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
20:17:08   2  
20:17:08 SQL> SELECT MAX(prdate) FROM bme
20:17:08   2  
20:17:08 SQL> -- Now build model from bme and score sme
20:17:08 SQL> @score1.sql
20:17:08 SQL> -- score1.sql
20:17:08 SQL> 
20:17:08 SQL> -- Does the 1st SVM score
20:17:08 SQL> 
20:17:08 SQL> -- Fill up svmc_apply_prep
20:17:08 SQL> @score.sql
20:17:08 SQL> --
20:17:08 SQL> -- score.sql
20:17:08 SQL> --
20:17:08 SQL> 
20:17:08 SQL> -- usage: score.sql
20:17:08 SQL> 
20:17:08 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:17:08 SQL> 
20:17:08 SQL> DEFINE target	= 'gatt'
20:17:08 SQL> DEFINE model_name = 'forex14'
20:17:08 SQL> DEFINE bldtable	= 'bme'
20:17:08 SQL> DEFINE scoretable = 'sme'
20:17:08 SQL> DEFINE case_id	= 'prdate'
20:17:08 SQL> 
20:17:08 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:17:08 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:17:08 SQL> 
20:17:08 SQL> -- Builds an SVM model using pl/sql.
20:17:08 SQL> 
20:17:08 SQL> -----------------------------------------------------------------------
20:17:08 SQL> --			    BUILD THE MODEL
20:17:08 SQL> -----------------------------------------------------------------------
20:17:08 SQL> 
20:17:08 SQL> -- Cleanup old build data preparation objects for repeat runs
20:17:08 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
20:17:08 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:17:08 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
20:17:08 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
20:17:08 SQL> 
20:17:08 SQL> 
20:17:08 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:17:08 SQL> --
20:17:08 SQL> -- DROP	TABLE svmc_settings ;
20:17:08 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:17:08 SQL> -- DELETE svmc_settings;
20:17:08 SQL> 
20:17:08 SQL> -- The default classification algorithm is Naive Bayes. So override
20:17:08 SQL> -- this choice to SVM using a settings table.
20:17:08 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:17:08 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:17:08 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:17:08 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:17:08 SQL> -- models.
20:17:08 SQL> --
20:17:08 SQL> 
20:17:08 SQL> -- Do this once and then comment it out.
20:17:08 SQL> -- That makes script go faster.
20:17:08 SQL> -- BEGIN
20:17:08 SQL> -- -- Populate settings table
20:17:08 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:17:08 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:17:08 SQL> --
20:17:08 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:17:08 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:17:08 SQL> --
20:17:08 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:17:08 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:17:08 SQL> --   COMMIT;
20:17:08 SQL> -- END;
20:17:08 SQL> -- /
20:17:08 SQL> 
20:17:08 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:17:08 SQL> 
20:17:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:17:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:17:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:17:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:17:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:17:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:17:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:17:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:17:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:17:08 SQL> 
20:17:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:17:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:17:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:17:08 SQL> 
20:17:08 SQL> --------------------------------
20:17:08 SQL> -- PREPARE BUILD (TRAINING) DATA
20:17:08 SQL> --
20:17:08 SQL> 
20:17:08 SQL> -- 1. Missing Value treatment for all Predictors and
20:17:08 SQL> -- 2. Outlier Treatment and
20:17:08 SQL> -- 3. Normalization are performed below.
20:17:08 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:17:08 SQL> --    normalized here.
20:17:08 SQL> 
20:17:08 SQL> BEGIN
20:17:08   2  	-- Perform missing value treatment for all predictors
20:17:08   3  	-- create miss tables
20:17:08   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:17:08   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:17:08   6  
20:17:08   7  	-- populate miss tables
20:17:08   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:17:08   9  	  miss_table_name => 'svmc_miss_num',
20:17:08  10  	  data_table_name => '&bldtable',
20:17:08  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:17:08  12  
20:17:08  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:17:08  14  	  miss_table_name => 'svmc_miss_cat',
20:17:08  15  	  data_table_name => '&bldtable',
20:17:08  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:17:08  17  
20:17:08  18  	-- xform input data to replace missing values
20:17:08  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:17:08  20  	  miss_table_name => 'svmc_miss_num',
20:17:08  21  	  data_table_name => '&bldtable',
20:17:08  22  	  xform_view_name => 'xformed_build_miss_num');
20:17:08  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:17:08  24  	  miss_table_name => 'svmc_miss_cat',
20:17:08  25  	  data_table_name => '&bldtable',
20:17:08  26  	  xform_view_name => 'xformed_build_miss_cat');
20:17:08  27  
20:17:08  28  	-- Perform outlier treatment.
20:17:08  29  	-- create clip table
20:17:08  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:17:08  31  
20:17:08  32  	-- populate clip table
20:17:08  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:17:08  34  	  clip_table_name => 'svmc_clip',
20:17:08  35  	  data_table_name => '&bldtable',
20:17:08  36  	  tail_frac	  => 0.025,
20:17:08  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:17:08  38  
20:17:08  39  	-- xform input data to winsorized data
20:17:08  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:17:08  41  	  clip_table_name => 'svmc_clip',
20:17:08  42  	  data_table_name => '&bldtable',
20:17:08  43  	  xform_view_name => 'svmc_winsor');
20:17:08  44  
20:17:08  45  	-- create normalization table
20:17:08  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:17:08  47  
20:17:08  48  	-- populate normalization table based on winsorized data
20:17:08  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:17:08  50  	  norm_table_name => 'svmc_norm',
20:17:08  51  	  data_table_name => 'svmc_winsor',
20:17:08  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:17:08  53  
20:17:08  54  	-- normalize the original data
20:17:08  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:17:08  56  	  norm_table_name => 'svmc_norm',
20:17:08  57  	  data_table_name => '&bldtable',
20:17:08  58  	  xform_view_name => 'svmc_build_prep');
20:17:08  59  END;
20:17:08  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.20
20:17:26 SQL> 
20:17:26 SQL> ---------------------
20:17:26 SQL> -- CREATE A NEW MODEL
20:17:26 SQL> --
20:17:26 SQL> -- Cleanup old model with the same name for repeat runs
20:17:26 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:17:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:17:26   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.67
20:17:27 SQL> 
20:17:27 SQL> -- Build a new SVM Model
20:17:27 SQL> BEGIN
20:17:27   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:17:27   3  	  model_name	      => '&model_name',
20:17:27   4  	  mining_function     => dbms_data_mining.classification,
20:17:27   5  	  data_table_name     => 'svmc_build_prep',
20:17:27   6  	  case_id_column_name => '&case_id',
20:17:27   7  	  target_column_name  => '&target',
20:17:27   8  	  settings_table_name => 'svmc_settings');
20:17:27   9  END;
20:17:27  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:31.18
20:17:58 SQL> 
20:17:58 SQL> -----------------------------------------------------------------------
20:17:58 SQL> --			       APPLY/score THE MODEL
20:17:58 SQL> -----------------------------------------------------------------------
20:17:58 SQL> 
20:17:58 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:17:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:17:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:17:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:17:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:17:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:17:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:17:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:17:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:17:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:17:59 SQL> -----------------------
20:17:59 SQL> -- PREPARE SCORING DATA
20:17:59 SQL> --
20:17:59 SQL> -- If the data for model creation has been prepared, then the data
20:17:59 SQL> -- to be scored using the model must be prepared in the same manner
20:17:59 SQL> -- in order to obtain meaningful results.
20:17:59 SQL> --
20:17:59 SQL> -- 1. Missing Value treatment for all Predictors and
20:17:59 SQL> -- 2. Normalization
20:17:59 SQL> -- No outlier treatment will be performed during test and apply. The
20:17:59 SQL> -- normalization step is sufficient, since the normalization parameters
20:17:59 SQL> -- already capture the effects of outlier treatment done with build data.
20:17:59 SQL> --
20:17:59 SQL> BEGIN
20:17:59   2  	-- Xform Test data to replace missing values
20:17:59   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:17:59   4  	  miss_table_name => 'svmc_miss_num',
20:17:59   5  	  data_table_name => '&scoretable',
20:17:59   6  	  xform_view_name => 'xformed_apply_miss_num');
20:17:59   7  
20:17:59   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:17:59   9  	  miss_table_name => 'svmc_miss_cat',
20:17:59  10  	  data_table_name => '&scoretable',
20:17:59  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:17:59  12  
20:17:59  13  	-- Normalize the data to be scored
20:17:59  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:17:59  15  	  norm_table_name => 'svmc_norm',
20:17:59  16  	  data_table_name => '&scoretable',
20:17:59  17  	  xform_view_name => 'svmc_apply_prep');
20:17:59  18  END;
20:17:59  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
20:18:00 SQL> 
20:18:00 SQL> -- Use same model_name used in score.sql
20:18:00 SQL> DEFINE model_name = 'forex14'
20:18:00 SQL> 
20:18:00 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
20:18:00 SQL> 
20:18:00 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
20:18:00 SQL> 
20:18:00 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
20:18:00   2  SELECT
20:18:00   3  prdate
20:18:00   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:18:00   5  ,sysdate
20:18:00   6  ,SUBSTR(prdate,1,3)pair
20:18:00   7  ,SUBSTR(prdate,4,19)ydate
20:18:00   8  FROM svmc_apply_prep
20:18:00   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.20
20:18:00 SQL> @aud_score1day.sql  2010-12-29 20:00:00
20:18:00 SQL> --
20:18:00 SQL> -- aud_score1day.sql
20:18:00 SQL> --
20:18:00 SQL> 
20:18:00 SQL> CREATE OR REPLACE VIEW sme AS
20:18:00   2  SELECT
20:18:00   3  'aud'||m.ydate prdate
20:18:00   4  ,NULL gatt
20:18:00   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:18:00   6  ,eur_g00
20:18:00   7  ,eur_g01
20:18:00   8  ,eur_g02
20:18:00   9  ,eur_g03
20:18:00  10  ,eur_g04
20:18:00  11  ,eur_g05
20:18:00  12  ,eur_g06
20:18:00  13  ,eur_g07
20:18:00  14  ,eur_g08
20:18:00  15  ,eur_g09
20:18:00  16  ,eur_g10
20:18:00  17  ,eur_g11
20:18:00  18  ,eur_g12
20:18:00  19  ,eur_g13
20:18:00  20  ,eur_g14
20:18:00  21  ,eur_g15
20:18:00  22  ,eur_g16
20:18:00  23  ,eur_g17
20:18:00  24  ,eur_g18
20:18:00  25  ,eur_g19
20:18:00  26  ,eur_g20
20:18:00  27  ,eur_g21
20:18:00  28  ,eur_g22
20:18:00  29  ,eur_g23
20:18:00  30  ,eur_g24
20:18:00  31  ,eur_g25
20:18:00  32  ,eur_g26
20:18:00  33  ,eur_g27
20:18:00  34  ,eur_g28
20:18:00  35  ,eur_g29
20:18:00  36  ,eur_g30
20:18:00  37  ,eur_g31
20:18:00  38  ,eur_g32
20:18:00  39  ,eur_g33
20:18:00  40  ,eur_g34
20:18:00  41  ,eur_g35
20:18:00  42  ,eur_g36
20:18:00  43  ,eur_g37
20:18:00  44  ,eur_g38
20:18:00  45  ,eur_g39
20:18:00  46  ,eur_g40
20:18:00  47  ,eur_g41
20:18:00  48  ,aud_g00
20:18:00  49  ,aud_g01
20:18:00  50  ,aud_g02
20:18:00  51  ,aud_g03
20:18:00  52  ,aud_g04
20:18:00  53  ,aud_g05
20:18:00  54  ,aud_g06
20:18:00  55  ,aud_g07
20:18:00  56  ,aud_g08
20:18:00  57  ,aud_g09
20:18:00  58  ,aud_g10
20:18:00  59  ,aud_g11
20:18:00  60  ,aud_g12
20:18:00  61  ,aud_g13
20:18:00  62  ,aud_g14
20:18:00  63  ,aud_g15
20:18:00  64  ,aud_g16
20:18:00  65  ,aud_g17
20:18:00  66  ,aud_g18
20:18:00  67  ,aud_g19
20:18:00  68  ,aud_g20
20:18:00  69  ,aud_g21
20:18:00  70  ,aud_g22
20:18:00  71  ,aud_g23
20:18:00  72  ,aud_g24
20:18:00  73  ,aud_g25
20:18:00  74  ,aud_g26
20:18:00  75  ,aud_g27
20:18:00  76  ,aud_g28
20:18:00  77  ,aud_g29
20:18:00  78  ,aud_g30
20:18:00  79  ,aud_g31
20:18:00  80  ,aud_g32
20:18:00  81  ,aud_g33
20:18:00  82  ,aud_g34
20:18:00  83  ,aud_g35
20:18:00  84  ,aud_g36
20:18:00  85  ,aud_g37
20:18:00  86  ,aud_g38
20:18:00  87  ,aud_g39
20:18:00  88  ,aud_g40
20:18:00  89  ,aud_g41
20:18:00  90  ,gbp_g00
20:18:00  91  ,gbp_g01
20:18:00  92  ,gbp_g02
20:18:00  93  ,gbp_g03
20:18:00  94  ,gbp_g04
20:18:00  95  ,gbp_g05
20:18:00  96  ,gbp_g06
20:18:00  97  ,gbp_g07
20:18:00  98  ,gbp_g08
20:18:00  99  ,gbp_g09
20:18:00 100  ,gbp_g10
20:18:00 101  ,gbp_g11
20:18:00 102  ,gbp_g12
20:18:00 103  ,gbp_g13
20:18:00 104  ,gbp_g14
20:18:00 105  ,gbp_g15
20:18:00 106  ,gbp_g16
20:18:00 107  ,gbp_g17
20:18:00 108  ,gbp_g18
20:18:00 109  ,gbp_g19
20:18:00 110  ,gbp_g20
20:18:00 111  ,gbp_g21
20:18:00 112  ,gbp_g22
20:18:00 113  ,gbp_g23
20:18:00 114  ,gbp_g24
20:18:00 115  ,gbp_g25
20:18:00 116  ,gbp_g26
20:18:00 117  ,gbp_g27
20:18:00 118  ,gbp_g28
20:18:00 119  ,gbp_g29
20:18:00 120  ,gbp_g30
20:18:00 121  ,gbp_g31
20:18:00 122  ,gbp_g32
20:18:00 123  ,gbp_g33
20:18:00 124  ,gbp_g34
20:18:00 125  ,gbp_g35
20:18:00 126  ,gbp_g36
20:18:00 127  ,gbp_g37
20:18:00 128  ,gbp_g38
20:18:00 129  ,gbp_g39
20:18:00 130  ,gbp_g40
20:18:00 131  ,gbp_g41
20:18:00 132  ,jpy_g00
20:18:00 133  ,jpy_g01
20:18:00 134  ,jpy_g02
20:18:00 135  ,jpy_g03
20:18:00 136  ,jpy_g04
20:18:00 137  ,jpy_g05
20:18:00 138  ,jpy_g06
20:18:00 139  ,jpy_g07
20:18:00 140  ,jpy_g08
20:18:00 141  ,jpy_g09
20:18:00 142  ,jpy_g10
20:18:00 143  ,jpy_g11
20:18:00 144  ,jpy_g12
20:18:00 145  ,jpy_g13
20:18:00 146  ,jpy_g14
20:18:00 147  ,jpy_g15
20:18:00 148  ,jpy_g16
20:18:00 149  ,jpy_g17
20:18:00 150  ,jpy_g18
20:18:00 151  ,jpy_g19
20:18:00 152  ,jpy_g20
20:18:00 153  ,jpy_g21
20:18:00 154  ,jpy_g22
20:18:00 155  ,jpy_g23
20:18:00 156  ,jpy_g24
20:18:00 157  ,jpy_g25
20:18:00 158  ,jpy_g26
20:18:00 159  ,jpy_g27
20:18:00 160  ,jpy_g28
20:18:00 161  ,jpy_g29
20:18:00 162  ,jpy_g30
20:18:00 163  ,jpy_g31
20:18:00 164  ,jpy_g32
20:18:00 165  ,jpy_g33
20:18:00 166  ,jpy_g34
20:18:00 167  ,jpy_g35
20:18:00 168  ,jpy_g36
20:18:00 169  ,jpy_g37
20:18:00 170  ,jpy_g38
20:18:00 171  ,jpy_g39
20:18:00 172  ,jpy_g40
20:18:00 173  ,jpy_g41
20:18:00 174  ,cad_g00
20:18:00 175  ,cad_g01
20:18:00 176  ,cad_g02
20:18:00 177  ,cad_g03
20:18:00 178  ,cad_g04
20:18:00 179  ,cad_g05
20:18:00 180  ,cad_g06
20:18:00 181  ,cad_g07
20:18:00 182  ,cad_g08
20:18:00 183  ,cad_g09
20:18:00 184  ,cad_g10
20:18:00 185  ,cad_g11
20:18:00 186  ,cad_g12
20:18:00 187  ,cad_g13
20:18:00 188  ,cad_g14
20:18:00 189  ,cad_g15
20:18:00 190  ,cad_g16
20:18:00 191  ,cad_g17
20:18:00 192  ,cad_g18
20:18:00 193  ,cad_g19
20:18:00 194  ,cad_g20
20:18:00 195  ,cad_g21
20:18:00 196  ,cad_g22
20:18:00 197  ,cad_g23
20:18:00 198  ,cad_g24
20:18:00 199  ,cad_g25
20:18:00 200  ,cad_g26
20:18:00 201  ,cad_g27
20:18:00 202  ,cad_g28
20:18:00 203  ,cad_g29
20:18:00 204  ,cad_g30
20:18:00 205  ,cad_g31
20:18:00 206  ,cad_g32
20:18:00 207  ,cad_g33
20:18:00 208  ,cad_g34
20:18:00 209  ,cad_g35
20:18:00 210  ,cad_g36
20:18:00 211  ,cad_g37
20:18:00 212  ,cad_g38
20:18:00 213  ,cad_g39
20:18:00 214  ,cad_g40
20:18:00 215  ,cad_g41
20:18:00 216  ,chf_g00
20:18:00 217  ,chf_g01
20:18:00 218  ,chf_g02
20:18:00 219  ,chf_g03
20:18:00 220  ,chf_g04
20:18:00 221  ,chf_g05
20:18:00 222  ,chf_g06
20:18:00 223  ,chf_g07
20:18:00 224  ,chf_g08
20:18:00 225  ,chf_g09
20:18:00 226  ,chf_g10
20:18:00 227  ,chf_g11
20:18:00 228  ,chf_g12
20:18:00 229  ,chf_g13
20:18:00 230  ,chf_g14
20:18:00 231  ,chf_g15
20:18:00 232  ,chf_g16
20:18:00 233  ,chf_g17
20:18:00 234  ,chf_g18
20:18:00 235  ,chf_g19
20:18:00 236  ,chf_g20
20:18:00 237  ,chf_g21
20:18:00 238  ,chf_g22
20:18:00 239  ,chf_g23
20:18:00 240  ,chf_g24
20:18:00 241  ,chf_g25
20:18:00 242  ,chf_g26
20:18:00 243  ,chf_g27
20:18:00 244  ,chf_g28
20:18:00 245  ,chf_g29
20:18:00 246  ,chf_g30
20:18:00 247  ,chf_g31
20:18:00 248  ,chf_g32
20:18:00 249  ,chf_g33
20:18:00 250  ,chf_g34
20:18:00 251  ,chf_g35
20:18:00 252  ,chf_g36
20:18:00 253  ,chf_g37
20:18:00 254  ,chf_g38
20:18:00 255  ,chf_g39
20:18:00 256  ,chf_g40
20:18:00 257  ,chf_g41
20:18:00 258  FROM aud_ms6 m
20:18:00 259  WHERE m.ydate = '&1'||' '||'&2'
20:18:00 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'20:00:00'

View created.

Elapsed: 00:00:00.11
20:18:00 SQL> 
20:18:00 SQL> -- rpt
20:18:00 SQL> -- We should see just 1 row:
20:18:00 SQL> 
20:18:00 SQL> SELECT COUNT(prdate) FROM sme
20:18:00   2  
20:18:00 SQL> -- Build the model:
20:18:00 SQL> CREATE OR REPLACE VIEW bme AS
20:18:00   2  SELECT
20:18:00   3  'aud'||m.ydate prdate
20:18:00   4  ,gatt
20:18:00   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:18:00   6  ,eur_g00
20:18:00   7  ,eur_g01
20:18:00   8  ,eur_g02
20:18:00   9  ,eur_g03
20:18:00  10  ,eur_g04
20:18:00  11  ,eur_g05
20:18:00  12  ,eur_g06
20:18:00  13  ,eur_g07
20:18:00  14  ,eur_g08
20:18:00  15  ,eur_g09
20:18:00  16  ,eur_g10
20:18:00  17  ,eur_g11
20:18:00  18  ,eur_g12
20:18:00  19  ,eur_g13
20:18:00  20  ,eur_g14
20:18:00  21  ,eur_g15
20:18:00  22  ,eur_g16
20:18:00  23  ,eur_g17
20:18:00  24  ,eur_g18
20:18:00  25  ,eur_g19
20:18:00  26  ,eur_g20
20:18:00  27  ,eur_g21
20:18:00  28  ,eur_g22
20:18:00  29  ,eur_g23
20:18:00  30  ,eur_g24
20:18:00  31  ,eur_g25
20:18:00  32  ,eur_g26
20:18:00  33  ,eur_g27
20:18:00  34  ,eur_g28
20:18:00  35  ,eur_g29
20:18:00  36  ,eur_g30
20:18:00  37  ,eur_g31
20:18:00  38  ,eur_g32
20:18:00  39  ,eur_g33
20:18:00  40  ,eur_g34
20:18:00  41  ,eur_g35
20:18:00  42  ,eur_g36
20:18:00  43  ,eur_g37
20:18:00  44  ,eur_g38
20:18:00  45  ,eur_g39
20:18:00  46  ,eur_g40
20:18:00  47  ,eur_g41
20:18:00  48  ,aud_g00
20:18:00  49  ,aud_g01
20:18:00  50  ,aud_g02
20:18:00  51  ,aud_g03
20:18:00  52  ,aud_g04
20:18:00  53  ,aud_g05
20:18:00  54  ,aud_g06
20:18:00  55  ,aud_g07
20:18:00  56  ,aud_g08
20:18:00  57  ,aud_g09
20:18:00  58  ,aud_g10
20:18:00  59  ,aud_g11
20:18:00  60  ,aud_g12
20:18:00  61  ,aud_g13
20:18:00  62  ,aud_g14
20:18:00  63  ,aud_g15
20:18:00  64  ,aud_g16
20:18:00  65  ,aud_g17
20:18:00  66  ,aud_g18
20:18:00  67  ,aud_g19
20:18:00  68  ,aud_g20
20:18:00  69  ,aud_g21
20:18:00  70  ,aud_g22
20:18:00  71  ,aud_g23
20:18:00  72  ,aud_g24
20:18:00  73  ,aud_g25
20:18:00  74  ,aud_g26
20:18:00  75  ,aud_g27
20:18:00  76  ,aud_g28
20:18:00  77  ,aud_g29
20:18:00  78  ,aud_g30
20:18:00  79  ,aud_g31
20:18:00  80  ,aud_g32
20:18:00  81  ,aud_g33
20:18:00  82  ,aud_g34
20:18:00  83  ,aud_g35
20:18:00  84  ,aud_g36
20:18:00  85  ,aud_g37
20:18:00  86  ,aud_g38
20:18:00  87  ,aud_g39
20:18:00  88  ,aud_g40
20:18:00  89  ,aud_g41
20:18:00  90  ,gbp_g00
20:18:00  91  ,gbp_g01
20:18:00  92  ,gbp_g02
20:18:00  93  ,gbp_g03
20:18:00  94  ,gbp_g04
20:18:00  95  ,gbp_g05
20:18:00  96  ,gbp_g06
20:18:00  97  ,gbp_g07
20:18:00  98  ,gbp_g08
20:18:00  99  ,gbp_g09
20:18:00 100  ,gbp_g10
20:18:00 101  ,gbp_g11
20:18:00 102  ,gbp_g12
20:18:00 103  ,gbp_g13
20:18:00 104  ,gbp_g14
20:18:00 105  ,gbp_g15
20:18:00 106  ,gbp_g16
20:18:00 107  ,gbp_g17
20:18:00 108  ,gbp_g18
20:18:00 109  ,gbp_g19
20:18:00 110  ,gbp_g20
20:18:00 111  ,gbp_g21
20:18:00 112  ,gbp_g22
20:18:00 113  ,gbp_g23
20:18:00 114  ,gbp_g24
20:18:00 115  ,gbp_g25
20:18:00 116  ,gbp_g26
20:18:00 117  ,gbp_g27
20:18:00 118  ,gbp_g28
20:18:00 119  ,gbp_g29
20:18:00 120  ,gbp_g30
20:18:00 121  ,gbp_g31
20:18:00 122  ,gbp_g32
20:18:00 123  ,gbp_g33
20:18:00 124  ,gbp_g34
20:18:00 125  ,gbp_g35
20:18:00 126  ,gbp_g36
20:18:00 127  ,gbp_g37
20:18:00 128  ,gbp_g38
20:18:00 129  ,gbp_g39
20:18:00 130  ,gbp_g40
20:18:00 131  ,gbp_g41
20:18:00 132  ,jpy_g00
20:18:00 133  ,jpy_g01
20:18:00 134  ,jpy_g02
20:18:00 135  ,jpy_g03
20:18:00 136  ,jpy_g04
20:18:00 137  ,jpy_g05
20:18:00 138  ,jpy_g06
20:18:00 139  ,jpy_g07
20:18:00 140  ,jpy_g08
20:18:00 141  ,jpy_g09
20:18:00 142  ,jpy_g10
20:18:00 143  ,jpy_g11
20:18:00 144  ,jpy_g12
20:18:00 145  ,jpy_g13
20:18:00 146  ,jpy_g14
20:18:00 147  ,jpy_g15
20:18:00 148  ,jpy_g16
20:18:00 149  ,jpy_g17
20:18:00 150  ,jpy_g18
20:18:00 151  ,jpy_g19
20:18:00 152  ,jpy_g20
20:18:00 153  ,jpy_g21
20:18:00 154  ,jpy_g22
20:18:00 155  ,jpy_g23
20:18:00 156  ,jpy_g24
20:18:00 157  ,jpy_g25
20:18:00 158  ,jpy_g26
20:18:00 159  ,jpy_g27
20:18:00 160  ,jpy_g28
20:18:00 161  ,jpy_g29
20:18:00 162  ,jpy_g30
20:18:00 163  ,jpy_g31
20:18:00 164  ,jpy_g32
20:18:00 165  ,jpy_g33
20:18:00 166  ,jpy_g34
20:18:00 167  ,jpy_g35
20:18:00 168  ,jpy_g36
20:18:00 169  ,jpy_g37
20:18:00 170  ,jpy_g38
20:18:00 171  ,jpy_g39
20:18:00 172  ,jpy_g40
20:18:00 173  ,jpy_g41
20:18:00 174  ,cad_g00
20:18:00 175  ,cad_g01
20:18:00 176  ,cad_g02
20:18:00 177  ,cad_g03
20:18:00 178  ,cad_g04
20:18:00 179  ,cad_g05
20:18:00 180  ,cad_g06
20:18:00 181  ,cad_g07
20:18:00 182  ,cad_g08
20:18:00 183  ,cad_g09
20:18:00 184  ,cad_g10
20:18:00 185  ,cad_g11
20:18:00 186  ,cad_g12
20:18:00 187  ,cad_g13
20:18:00 188  ,cad_g14
20:18:00 189  ,cad_g15
20:18:00 190  ,cad_g16
20:18:00 191  ,cad_g17
20:18:00 192  ,cad_g18
20:18:00 193  ,cad_g19
20:18:00 194  ,cad_g20
20:18:00 195  ,cad_g21
20:18:00 196  ,cad_g22
20:18:00 197  ,cad_g23
20:18:00 198  ,cad_g24
20:18:00 199  ,cad_g25
20:18:00 200  ,cad_g26
20:18:00 201  ,cad_g27
20:18:00 202  ,cad_g28
20:18:00 203  ,cad_g29
20:18:00 204  ,cad_g30
20:18:00 205  ,cad_g31
20:18:00 206  ,cad_g32
20:18:00 207  ,cad_g33
20:18:00 208  ,cad_g34
20:18:00 209  ,cad_g35
20:18:00 210  ,cad_g36
20:18:00 211  ,cad_g37
20:18:00 212  ,cad_g38
20:18:00 213  ,cad_g39
20:18:00 214  ,cad_g40
20:18:00 215  ,cad_g41
20:18:00 216  ,chf_g00
20:18:00 217  ,chf_g01
20:18:00 218  ,chf_g02
20:18:00 219  ,chf_g03
20:18:00 220  ,chf_g04
20:18:00 221  ,chf_g05
20:18:00 222  ,chf_g06
20:18:00 223  ,chf_g07
20:18:00 224  ,chf_g08
20:18:00 225  ,chf_g09
20:18:00 226  ,chf_g10
20:18:00 227  ,chf_g11
20:18:00 228  ,chf_g12
20:18:00 229  ,chf_g13
20:18:00 230  ,chf_g14
20:18:00 231  ,chf_g15
20:18:00 232  ,chf_g16
20:18:00 233  ,chf_g17
20:18:00 234  ,chf_g18
20:18:00 235  ,chf_g19
20:18:00 236  ,chf_g20
20:18:00 237  ,chf_g21
20:18:00 238  ,chf_g22
20:18:00 239  ,chf_g23
20:18:00 240  ,chf_g24
20:18:00 241  ,chf_g25
20:18:00 242  ,chf_g26
20:18:00 243  ,chf_g27
20:18:00 244  ,chf_g28
20:18:00 245  ,chf_g29
20:18:00 246  ,chf_g30
20:18:00 247  ,chf_g31
20:18:00 248  ,chf_g32
20:18:00 249  ,chf_g33
20:18:00 250  ,chf_g34
20:18:00 251  ,chf_g35
20:18:00 252  ,chf_g36
20:18:00 253  ,chf_g37
20:18:00 254  ,chf_g38
20:18:00 255  ,chf_g39
20:18:00 256  ,chf_g40
20:18:00 257  ,chf_g41
20:18:00 258  FROM aud_ms6 m
20:18:00 259  WHERE gatt IN('nup','up')
20:18:00 260  AND 1+m.ydate < '&1'||' '||'&2'
20:18:00 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'20:00:00'

View created.

Elapsed: 00:00:00.15
20:18:00 SQL> 
20:18:00 SQL> -- rpt
20:18:00 SQL> 
20:18:00 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
20:18:00   2  
20:18:00 SQL> SELECT MAX(prdate) FROM bme
20:18:00   2  
20:18:00 SQL> -- Now build model from bme and score sme
20:18:00 SQL> @score1.sql
20:18:00 SQL> -- score1.sql
20:18:00 SQL> 
20:18:00 SQL> -- Does the 1st SVM score
20:18:00 SQL> 
20:18:00 SQL> -- Fill up svmc_apply_prep
20:18:00 SQL> @score.sql
20:18:00 SQL> --
20:18:00 SQL> -- score.sql
20:18:00 SQL> --
20:18:00 SQL> 
20:18:00 SQL> -- usage: score.sql
20:18:00 SQL> 
20:18:00 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:18:00 SQL> 
20:18:00 SQL> DEFINE target	= 'gatt'
20:18:00 SQL> DEFINE model_name = 'forex14'
20:18:00 SQL> DEFINE bldtable	= 'bme'
20:18:00 SQL> DEFINE scoretable = 'sme'
20:18:00 SQL> DEFINE case_id	= 'prdate'
20:18:00 SQL> 
20:18:00 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:18:00 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:18:00 SQL> 
20:18:00 SQL> -- Builds an SVM model using pl/sql.
20:18:00 SQL> 
20:18:00 SQL> -----------------------------------------------------------------------
20:18:00 SQL> --			    BUILD THE MODEL
20:18:00 SQL> -----------------------------------------------------------------------
20:18:00 SQL> 
20:18:00 SQL> -- Cleanup old build data preparation objects for repeat runs
20:18:00 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
20:18:00 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:18:00 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
20:18:00 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
20:18:00 SQL> 
20:18:00 SQL> 
20:18:00 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:18:00 SQL> --
20:18:00 SQL> -- DROP	TABLE svmc_settings ;
20:18:00 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:18:00 SQL> -- DELETE svmc_settings;
20:18:00 SQL> 
20:18:00 SQL> -- The default classification algorithm is Naive Bayes. So override
20:18:00 SQL> -- this choice to SVM using a settings table.
20:18:00 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:18:00 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:18:00 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:18:00 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:18:00 SQL> -- models.
20:18:00 SQL> --
20:18:00 SQL> 
20:18:00 SQL> -- Do this once and then comment it out.
20:18:00 SQL> -- That makes script go faster.
20:18:00 SQL> -- BEGIN
20:18:00 SQL> -- -- Populate settings table
20:18:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:18:00 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:18:00 SQL> --
20:18:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:18:00 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:18:00 SQL> --
20:18:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:18:00 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:18:00 SQL> --   COMMIT;
20:18:00 SQL> -- END;
20:18:00 SQL> -- /
20:18:00 SQL> 
20:18:00 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:18:00 SQL> 
20:18:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:18:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:18:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
20:18:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:18:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:18:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.13
20:18:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:18:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:18:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:18:01 SQL> 
20:18:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:18:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:18:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:18:01 SQL> 
20:18:01 SQL> --------------------------------
20:18:01 SQL> -- PREPARE BUILD (TRAINING) DATA
20:18:01 SQL> --
20:18:01 SQL> 
20:18:01 SQL> -- 1. Missing Value treatment for all Predictors and
20:18:01 SQL> -- 2. Outlier Treatment and
20:18:01 SQL> -- 3. Normalization are performed below.
20:18:01 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:18:01 SQL> --    normalized here.
20:18:01 SQL> 
20:18:01 SQL> BEGIN
20:18:01   2  	-- Perform missing value treatment for all predictors
20:18:01   3  	-- create miss tables
20:18:01   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:18:01   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:18:01   6  
20:18:01   7  	-- populate miss tables
20:18:01   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:18:01   9  	  miss_table_name => 'svmc_miss_num',
20:18:01  10  	  data_table_name => '&bldtable',
20:18:01  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:18:01  12  
20:18:01  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:18:01  14  	  miss_table_name => 'svmc_miss_cat',
20:18:01  15  	  data_table_name => '&bldtable',
20:18:01  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:18:01  17  
20:18:01  18  	-- xform input data to replace missing values
20:18:01  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:18:01  20  	  miss_table_name => 'svmc_miss_num',
20:18:01  21  	  data_table_name => '&bldtable',
20:18:01  22  	  xform_view_name => 'xformed_build_miss_num');
20:18:01  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:18:01  24  	  miss_table_name => 'svmc_miss_cat',
20:18:01  25  	  data_table_name => '&bldtable',
20:18:01  26  	  xform_view_name => 'xformed_build_miss_cat');
20:18:01  27  
20:18:01  28  	-- Perform outlier treatment.
20:18:01  29  	-- create clip table
20:18:01  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:18:01  31  
20:18:01  32  	-- populate clip table
20:18:01  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:18:01  34  	  clip_table_name => 'svmc_clip',
20:18:01  35  	  data_table_name => '&bldtable',
20:18:01  36  	  tail_frac	  => 0.025,
20:18:01  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:18:01  38  
20:18:01  39  	-- xform input data to winsorized data
20:18:01  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:18:01  41  	  clip_table_name => 'svmc_clip',
20:18:01  42  	  data_table_name => '&bldtable',
20:18:01  43  	  xform_view_name => 'svmc_winsor');
20:18:01  44  
20:18:01  45  	-- create normalization table
20:18:01  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:18:01  47  
20:18:01  48  	-- populate normalization table based on winsorized data
20:18:01  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:18:01  50  	  norm_table_name => 'svmc_norm',
20:18:01  51  	  data_table_name => 'svmc_winsor',
20:18:01  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:18:01  53  
20:18:01  54  	-- normalize the original data
20:18:01  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:18:01  56  	  norm_table_name => 'svmc_norm',
20:18:01  57  	  data_table_name => '&bldtable',
20:18:01  58  	  xform_view_name => 'svmc_build_prep');
20:18:01  59  END;
20:18:01  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.94
20:18:19 SQL> 
20:18:19 SQL> ---------------------
20:18:19 SQL> -- CREATE A NEW MODEL
20:18:19 SQL> --
20:18:19 SQL> -- Cleanup old model with the same name for repeat runs
20:18:19 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:18:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:18:19   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
20:18:20 SQL> 
20:18:20 SQL> -- Build a new SVM Model
20:18:20 SQL> BEGIN
20:18:20   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:18:20   3  	  model_name	      => '&model_name',
20:18:20   4  	  mining_function     => dbms_data_mining.classification,
20:18:20   5  	  data_table_name     => 'svmc_build_prep',
20:18:20   6  	  case_id_column_name => '&case_id',
20:18:20   7  	  target_column_name  => '&target',
20:18:20   8  	  settings_table_name => 'svmc_settings');
20:18:20   9  END;
20:18:20  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.97
20:18:48 SQL> 
20:18:48 SQL> -----------------------------------------------------------------------
20:18:48 SQL> --			       APPLY/score THE MODEL
20:18:48 SQL> -----------------------------------------------------------------------
20:18:48 SQL> 
20:18:48 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:18:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:18:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:18:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
20:18:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:18:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:18:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.14
20:18:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:18:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:18:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.12
20:18:48 SQL> -----------------------
20:18:48 SQL> -- PREPARE SCORING DATA
20:18:48 SQL> --
20:18:48 SQL> -- If the data for model creation has been prepared, then the data
20:18:48 SQL> -- to be scored using the model must be prepared in the same manner
20:18:48 SQL> -- in order to obtain meaningful results.
20:18:48 SQL> --
20:18:48 SQL> -- 1. Missing Value treatment for all Predictors and
20:18:48 SQL> -- 2. Normalization
20:18:48 SQL> -- No outlier treatment will be performed during test and apply. The
20:18:48 SQL> -- normalization step is sufficient, since the normalization parameters
20:18:48 SQL> -- already capture the effects of outlier treatment done with build data.
20:18:48 SQL> --
20:18:48 SQL> BEGIN
20:18:48   2  	-- Xform Test data to replace missing values
20:18:48   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:18:48   4  	  miss_table_name => 'svmc_miss_num',
20:18:48   5  	  data_table_name => '&scoretable',
20:18:48   6  	  xform_view_name => 'xformed_apply_miss_num');
20:18:48   7  
20:18:48   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:18:48   9  	  miss_table_name => 'svmc_miss_cat',
20:18:48  10  	  data_table_name => '&scoretable',
20:18:48  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:18:48  12  
20:18:48  13  	-- Normalize the data to be scored
20:18:48  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:18:48  15  	  norm_table_name => 'svmc_norm',
20:18:48  16  	  data_table_name => '&scoretable',
20:18:48  17  	  xform_view_name => 'svmc_apply_prep');
20:18:48  18  END;
20:18:48  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.55
20:18:50 SQL> 
20:18:50 SQL> -- Use same model_name used in score.sql
20:18:50 SQL> DEFINE model_name = 'forex14'
20:18:50 SQL> 
20:18:50 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
20:18:50 SQL> 
20:18:50 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
20:18:50 SQL> 
20:18:50 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
20:18:50   2  SELECT
20:18:50   3  prdate
20:18:50   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:18:50   5  ,sysdate
20:18:50   6  ,SUBSTR(prdate,1,3)pair
20:18:50   7  ,SUBSTR(prdate,4,19)ydate
20:18:50   8  FROM svmc_apply_prep
20:18:50   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.21
20:18:50 SQL> @aud_score1day.sql  2010-12-29 20:05:00
20:18:50 SQL> --
20:18:50 SQL> -- aud_score1day.sql
20:18:50 SQL> --
20:18:50 SQL> 
20:18:50 SQL> CREATE OR REPLACE VIEW sme AS
20:18:50   2  SELECT
20:18:50   3  'aud'||m.ydate prdate
20:18:50   4  ,NULL gatt
20:18:50   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:18:50   6  ,eur_g00
20:18:50   7  ,eur_g01
20:18:50   8  ,eur_g02
20:18:50   9  ,eur_g03
20:18:50  10  ,eur_g04
20:18:50  11  ,eur_g05
20:18:50  12  ,eur_g06
20:18:50  13  ,eur_g07
20:18:50  14  ,eur_g08
20:18:50  15  ,eur_g09
20:18:50  16  ,eur_g10
20:18:50  17  ,eur_g11
20:18:50  18  ,eur_g12
20:18:50  19  ,eur_g13
20:18:50  20  ,eur_g14
20:18:50  21  ,eur_g15
20:18:50  22  ,eur_g16
20:18:50  23  ,eur_g17
20:18:50  24  ,eur_g18
20:18:50  25  ,eur_g19
20:18:50  26  ,eur_g20
20:18:50  27  ,eur_g21
20:18:50  28  ,eur_g22
20:18:50  29  ,eur_g23
20:18:50  30  ,eur_g24
20:18:50  31  ,eur_g25
20:18:50  32  ,eur_g26
20:18:50  33  ,eur_g27
20:18:50  34  ,eur_g28
20:18:50  35  ,eur_g29
20:18:50  36  ,eur_g30
20:18:50  37  ,eur_g31
20:18:50  38  ,eur_g32
20:18:50  39  ,eur_g33
20:18:50  40  ,eur_g34
20:18:50  41  ,eur_g35
20:18:50  42  ,eur_g36
20:18:50  43  ,eur_g37
20:18:50  44  ,eur_g38
20:18:50  45  ,eur_g39
20:18:50  46  ,eur_g40
20:18:50  47  ,eur_g41
20:18:50  48  ,aud_g00
20:18:50  49  ,aud_g01
20:18:50  50  ,aud_g02
20:18:50  51  ,aud_g03
20:18:50  52  ,aud_g04
20:18:50  53  ,aud_g05
20:18:50  54  ,aud_g06
20:18:50  55  ,aud_g07
20:18:50  56  ,aud_g08
20:18:50  57  ,aud_g09
20:18:50  58  ,aud_g10
20:18:50  59  ,aud_g11
20:18:50  60  ,aud_g12
20:18:50  61  ,aud_g13
20:18:50  62  ,aud_g14
20:18:50  63  ,aud_g15
20:18:50  64  ,aud_g16
20:18:50  65  ,aud_g17
20:18:50  66  ,aud_g18
20:18:50  67  ,aud_g19
20:18:50  68  ,aud_g20
20:18:50  69  ,aud_g21
20:18:50  70  ,aud_g22
20:18:50  71  ,aud_g23
20:18:50  72  ,aud_g24
20:18:50  73  ,aud_g25
20:18:50  74  ,aud_g26
20:18:50  75  ,aud_g27
20:18:50  76  ,aud_g28
20:18:50  77  ,aud_g29
20:18:50  78  ,aud_g30
20:18:50  79  ,aud_g31
20:18:50  80  ,aud_g32
20:18:50  81  ,aud_g33
20:18:50  82  ,aud_g34
20:18:50  83  ,aud_g35
20:18:50  84  ,aud_g36
20:18:50  85  ,aud_g37
20:18:50  86  ,aud_g38
20:18:50  87  ,aud_g39
20:18:50  88  ,aud_g40
20:18:50  89  ,aud_g41
20:18:50  90  ,gbp_g00
20:18:50  91  ,gbp_g01
20:18:50  92  ,gbp_g02
20:18:50  93  ,gbp_g03
20:18:50  94  ,gbp_g04
20:18:50  95  ,gbp_g05
20:18:50  96  ,gbp_g06
20:18:50  97  ,gbp_g07
20:18:50  98  ,gbp_g08
20:18:50  99  ,gbp_g09
20:18:50 100  ,gbp_g10
20:18:50 101  ,gbp_g11
20:18:50 102  ,gbp_g12
20:18:50 103  ,gbp_g13
20:18:50 104  ,gbp_g14
20:18:50 105  ,gbp_g15
20:18:50 106  ,gbp_g16
20:18:50 107  ,gbp_g17
20:18:50 108  ,gbp_g18
20:18:50 109  ,gbp_g19
20:18:50 110  ,gbp_g20
20:18:50 111  ,gbp_g21
20:18:50 112  ,gbp_g22
20:18:50 113  ,gbp_g23
20:18:50 114  ,gbp_g24
20:18:50 115  ,gbp_g25
20:18:50 116  ,gbp_g26
20:18:50 117  ,gbp_g27
20:18:50 118  ,gbp_g28
20:18:50 119  ,gbp_g29
20:18:50 120  ,gbp_g30
20:18:50 121  ,gbp_g31
20:18:50 122  ,gbp_g32
20:18:50 123  ,gbp_g33
20:18:50 124  ,gbp_g34
20:18:50 125  ,gbp_g35
20:18:50 126  ,gbp_g36
20:18:50 127  ,gbp_g37
20:18:50 128  ,gbp_g38
20:18:50 129  ,gbp_g39
20:18:50 130  ,gbp_g40
20:18:50 131  ,gbp_g41
20:18:50 132  ,jpy_g00
20:18:50 133  ,jpy_g01
20:18:50 134  ,jpy_g02
20:18:50 135  ,jpy_g03
20:18:50 136  ,jpy_g04
20:18:50 137  ,jpy_g05
20:18:50 138  ,jpy_g06
20:18:50 139  ,jpy_g07
20:18:50 140  ,jpy_g08
20:18:50 141  ,jpy_g09
20:18:50 142  ,jpy_g10
20:18:50 143  ,jpy_g11
20:18:50 144  ,jpy_g12
20:18:50 145  ,jpy_g13
20:18:50 146  ,jpy_g14
20:18:50 147  ,jpy_g15
20:18:50 148  ,jpy_g16
20:18:50 149  ,jpy_g17
20:18:50 150  ,jpy_g18
20:18:50 151  ,jpy_g19
20:18:50 152  ,jpy_g20
20:18:50 153  ,jpy_g21
20:18:50 154  ,jpy_g22
20:18:50 155  ,jpy_g23
20:18:50 156  ,jpy_g24
20:18:50 157  ,jpy_g25
20:18:50 158  ,jpy_g26
20:18:50 159  ,jpy_g27
20:18:50 160  ,jpy_g28
20:18:50 161  ,jpy_g29
20:18:50 162  ,jpy_g30
20:18:50 163  ,jpy_g31
20:18:50 164  ,jpy_g32
20:18:50 165  ,jpy_g33
20:18:50 166  ,jpy_g34
20:18:50 167  ,jpy_g35
20:18:50 168  ,jpy_g36
20:18:50 169  ,jpy_g37
20:18:50 170  ,jpy_g38
20:18:50 171  ,jpy_g39
20:18:50 172  ,jpy_g40
20:18:50 173  ,jpy_g41
20:18:50 174  ,cad_g00
20:18:50 175  ,cad_g01
20:18:50 176  ,cad_g02
20:18:50 177  ,cad_g03
20:18:50 178  ,cad_g04
20:18:50 179  ,cad_g05
20:18:50 180  ,cad_g06
20:18:50 181  ,cad_g07
20:18:50 182  ,cad_g08
20:18:50 183  ,cad_g09
20:18:50 184  ,cad_g10
20:18:50 185  ,cad_g11
20:18:50 186  ,cad_g12
20:18:50 187  ,cad_g13
20:18:50 188  ,cad_g14
20:18:50 189  ,cad_g15
20:18:50 190  ,cad_g16
20:18:50 191  ,cad_g17
20:18:50 192  ,cad_g18
20:18:50 193  ,cad_g19
20:18:50 194  ,cad_g20
20:18:50 195  ,cad_g21
20:18:50 196  ,cad_g22
20:18:50 197  ,cad_g23
20:18:50 198  ,cad_g24
20:18:50 199  ,cad_g25
20:18:50 200  ,cad_g26
20:18:50 201  ,cad_g27
20:18:50 202  ,cad_g28
20:18:50 203  ,cad_g29
20:18:50 204  ,cad_g30
20:18:50 205  ,cad_g31
20:18:50 206  ,cad_g32
20:18:50 207  ,cad_g33
20:18:50 208  ,cad_g34
20:18:50 209  ,cad_g35
20:18:50 210  ,cad_g36
20:18:50 211  ,cad_g37
20:18:50 212  ,cad_g38
20:18:50 213  ,cad_g39
20:18:50 214  ,cad_g40
20:18:50 215  ,cad_g41
20:18:50 216  ,chf_g00
20:18:50 217  ,chf_g01
20:18:50 218  ,chf_g02
20:18:50 219  ,chf_g03
20:18:50 220  ,chf_g04
20:18:50 221  ,chf_g05
20:18:50 222  ,chf_g06
20:18:50 223  ,chf_g07
20:18:50 224  ,chf_g08
20:18:50 225  ,chf_g09
20:18:50 226  ,chf_g10
20:18:50 227  ,chf_g11
20:18:50 228  ,chf_g12
20:18:50 229  ,chf_g13
20:18:50 230  ,chf_g14
20:18:50 231  ,chf_g15
20:18:50 232  ,chf_g16
20:18:50 233  ,chf_g17
20:18:50 234  ,chf_g18
20:18:50 235  ,chf_g19
20:18:50 236  ,chf_g20
20:18:50 237  ,chf_g21
20:18:50 238  ,chf_g22
20:18:50 239  ,chf_g23
20:18:50 240  ,chf_g24
20:18:50 241  ,chf_g25
20:18:50 242  ,chf_g26
20:18:50 243  ,chf_g27
20:18:50 244  ,chf_g28
20:18:50 245  ,chf_g29
20:18:50 246  ,chf_g30
20:18:50 247  ,chf_g31
20:18:50 248  ,chf_g32
20:18:50 249  ,chf_g33
20:18:50 250  ,chf_g34
20:18:50 251  ,chf_g35
20:18:50 252  ,chf_g36
20:18:50 253  ,chf_g37
20:18:50 254  ,chf_g38
20:18:50 255  ,chf_g39
20:18:50 256  ,chf_g40
20:18:50 257  ,chf_g41
20:18:50 258  FROM aud_ms6 m
20:18:50 259  WHERE m.ydate = '&1'||' '||'&2'
20:18:50 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'20:05:00'

View created.

Elapsed: 00:00:00.23
20:18:50 SQL> 
20:18:50 SQL> -- rpt
20:18:50 SQL> -- We should see just 1 row:
20:18:50 SQL> 
20:18:50 SQL> SELECT COUNT(prdate) FROM sme
20:18:50   2  
20:18:50 SQL> -- Build the model:
20:18:50 SQL> CREATE OR REPLACE VIEW bme AS
20:18:50   2  SELECT
20:18:50   3  'aud'||m.ydate prdate
20:18:50   4  ,gatt
20:18:50   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:18:50   6  ,eur_g00
20:18:50   7  ,eur_g01
20:18:50   8  ,eur_g02
20:18:50   9  ,eur_g03
20:18:50  10  ,eur_g04
20:18:50  11  ,eur_g05
20:18:50  12  ,eur_g06
20:18:50  13  ,eur_g07
20:18:50  14  ,eur_g08
20:18:50  15  ,eur_g09
20:18:50  16  ,eur_g10
20:18:50  17  ,eur_g11
20:18:50  18  ,eur_g12
20:18:50  19  ,eur_g13
20:18:50  20  ,eur_g14
20:18:50  21  ,eur_g15
20:18:50  22  ,eur_g16
20:18:50  23  ,eur_g17
20:18:50  24  ,eur_g18
20:18:50  25  ,eur_g19
20:18:50  26  ,eur_g20
20:18:50  27  ,eur_g21
20:18:50  28  ,eur_g22
20:18:50  29  ,eur_g23
20:18:50  30  ,eur_g24
20:18:50  31  ,eur_g25
20:18:50  32  ,eur_g26
20:18:50  33  ,eur_g27
20:18:50  34  ,eur_g28
20:18:50  35  ,eur_g29
20:18:50  36  ,eur_g30
20:18:50  37  ,eur_g31
20:18:50  38  ,eur_g32
20:18:50  39  ,eur_g33
20:18:50  40  ,eur_g34
20:18:50  41  ,eur_g35
20:18:50  42  ,eur_g36
20:18:50  43  ,eur_g37
20:18:50  44  ,eur_g38
20:18:50  45  ,eur_g39
20:18:50  46  ,eur_g40
20:18:50  47  ,eur_g41
20:18:50  48  ,aud_g00
20:18:50  49  ,aud_g01
20:18:50  50  ,aud_g02
20:18:50  51  ,aud_g03
20:18:50  52  ,aud_g04
20:18:50  53  ,aud_g05
20:18:50  54  ,aud_g06
20:18:50  55  ,aud_g07
20:18:50  56  ,aud_g08
20:18:50  57  ,aud_g09
20:18:50  58  ,aud_g10
20:18:50  59  ,aud_g11
20:18:50  60  ,aud_g12
20:18:50  61  ,aud_g13
20:18:50  62  ,aud_g14
20:18:50  63  ,aud_g15
20:18:50  64  ,aud_g16
20:18:50  65  ,aud_g17
20:18:50  66  ,aud_g18
20:18:50  67  ,aud_g19
20:18:50  68  ,aud_g20
20:18:50  69  ,aud_g21
20:18:50  70  ,aud_g22
20:18:50  71  ,aud_g23
20:18:50  72  ,aud_g24
20:18:50  73  ,aud_g25
20:18:50  74  ,aud_g26
20:18:50  75  ,aud_g27
20:18:50  76  ,aud_g28
20:18:50  77  ,aud_g29
20:18:50  78  ,aud_g30
20:18:50  79  ,aud_g31
20:18:50  80  ,aud_g32
20:18:50  81  ,aud_g33
20:18:50  82  ,aud_g34
20:18:50  83  ,aud_g35
20:18:50  84  ,aud_g36
20:18:50  85  ,aud_g37
20:18:50  86  ,aud_g38
20:18:50  87  ,aud_g39
20:18:50  88  ,aud_g40
20:18:50  89  ,aud_g41
20:18:50  90  ,gbp_g00
20:18:50  91  ,gbp_g01
20:18:50  92  ,gbp_g02
20:18:50  93  ,gbp_g03
20:18:50  94  ,gbp_g04
20:18:50  95  ,gbp_g05
20:18:50  96  ,gbp_g06
20:18:50  97  ,gbp_g07
20:18:50  98  ,gbp_g08
20:18:50  99  ,gbp_g09
20:18:50 100  ,gbp_g10
20:18:50 101  ,gbp_g11
20:18:50 102  ,gbp_g12
20:18:50 103  ,gbp_g13
20:18:50 104  ,gbp_g14
20:18:50 105  ,gbp_g15
20:18:50 106  ,gbp_g16
20:18:50 107  ,gbp_g17
20:18:50 108  ,gbp_g18
20:18:50 109  ,gbp_g19
20:18:50 110  ,gbp_g20
20:18:50 111  ,gbp_g21
20:18:50 112  ,gbp_g22
20:18:50 113  ,gbp_g23
20:18:50 114  ,gbp_g24
20:18:50 115  ,gbp_g25
20:18:50 116  ,gbp_g26
20:18:50 117  ,gbp_g27
20:18:50 118  ,gbp_g28
20:18:50 119  ,gbp_g29
20:18:50 120  ,gbp_g30
20:18:50 121  ,gbp_g31
20:18:50 122  ,gbp_g32
20:18:50 123  ,gbp_g33
20:18:50 124  ,gbp_g34
20:18:50 125  ,gbp_g35
20:18:50 126  ,gbp_g36
20:18:50 127  ,gbp_g37
20:18:50 128  ,gbp_g38
20:18:50 129  ,gbp_g39
20:18:50 130  ,gbp_g40
20:18:50 131  ,gbp_g41
20:18:50 132  ,jpy_g00
20:18:50 133  ,jpy_g01
20:18:50 134  ,jpy_g02
20:18:50 135  ,jpy_g03
20:18:50 136  ,jpy_g04
20:18:50 137  ,jpy_g05
20:18:50 138  ,jpy_g06
20:18:50 139  ,jpy_g07
20:18:50 140  ,jpy_g08
20:18:50 141  ,jpy_g09
20:18:50 142  ,jpy_g10
20:18:50 143  ,jpy_g11
20:18:50 144  ,jpy_g12
20:18:50 145  ,jpy_g13
20:18:50 146  ,jpy_g14
20:18:50 147  ,jpy_g15
20:18:50 148  ,jpy_g16
20:18:50 149  ,jpy_g17
20:18:50 150  ,jpy_g18
20:18:50 151  ,jpy_g19
20:18:50 152  ,jpy_g20
20:18:50 153  ,jpy_g21
20:18:50 154  ,jpy_g22
20:18:50 155  ,jpy_g23
20:18:50 156  ,jpy_g24
20:18:50 157  ,jpy_g25
20:18:50 158  ,jpy_g26
20:18:50 159  ,jpy_g27
20:18:50 160  ,jpy_g28
20:18:50 161  ,jpy_g29
20:18:50 162  ,jpy_g30
20:18:50 163  ,jpy_g31
20:18:50 164  ,jpy_g32
20:18:50 165  ,jpy_g33
20:18:50 166  ,jpy_g34
20:18:50 167  ,jpy_g35
20:18:50 168  ,jpy_g36
20:18:50 169  ,jpy_g37
20:18:50 170  ,jpy_g38
20:18:50 171  ,jpy_g39
20:18:50 172  ,jpy_g40
20:18:50 173  ,jpy_g41
20:18:50 174  ,cad_g00
20:18:50 175  ,cad_g01
20:18:50 176  ,cad_g02
20:18:50 177  ,cad_g03
20:18:50 178  ,cad_g04
20:18:50 179  ,cad_g05
20:18:50 180  ,cad_g06
20:18:50 181  ,cad_g07
20:18:50 182  ,cad_g08
20:18:50 183  ,cad_g09
20:18:50 184  ,cad_g10
20:18:50 185  ,cad_g11
20:18:50 186  ,cad_g12
20:18:50 187  ,cad_g13
20:18:50 188  ,cad_g14
20:18:50 189  ,cad_g15
20:18:50 190  ,cad_g16
20:18:50 191  ,cad_g17
20:18:50 192  ,cad_g18
20:18:50 193  ,cad_g19
20:18:50 194  ,cad_g20
20:18:50 195  ,cad_g21
20:18:50 196  ,cad_g22
20:18:50 197  ,cad_g23
20:18:50 198  ,cad_g24
20:18:50 199  ,cad_g25
20:18:50 200  ,cad_g26
20:18:50 201  ,cad_g27
20:18:50 202  ,cad_g28
20:18:50 203  ,cad_g29
20:18:50 204  ,cad_g30
20:18:50 205  ,cad_g31
20:18:50 206  ,cad_g32
20:18:50 207  ,cad_g33
20:18:50 208  ,cad_g34
20:18:50 209  ,cad_g35
20:18:50 210  ,cad_g36
20:18:50 211  ,cad_g37
20:18:50 212  ,cad_g38
20:18:50 213  ,cad_g39
20:18:50 214  ,cad_g40
20:18:50 215  ,cad_g41
20:18:50 216  ,chf_g00
20:18:50 217  ,chf_g01
20:18:50 218  ,chf_g02
20:18:50 219  ,chf_g03
20:18:50 220  ,chf_g04
20:18:50 221  ,chf_g05
20:18:50 222  ,chf_g06
20:18:50 223  ,chf_g07
20:18:50 224  ,chf_g08
20:18:50 225  ,chf_g09
20:18:50 226  ,chf_g10
20:18:50 227  ,chf_g11
20:18:50 228  ,chf_g12
20:18:50 229  ,chf_g13
20:18:50 230  ,chf_g14
20:18:50 231  ,chf_g15
20:18:50 232  ,chf_g16
20:18:50 233  ,chf_g17
20:18:50 234  ,chf_g18
20:18:50 235  ,chf_g19
20:18:50 236  ,chf_g20
20:18:50 237  ,chf_g21
20:18:50 238  ,chf_g22
20:18:50 239  ,chf_g23
20:18:50 240  ,chf_g24
20:18:50 241  ,chf_g25
20:18:50 242  ,chf_g26
20:18:50 243  ,chf_g27
20:18:50 244  ,chf_g28
20:18:50 245  ,chf_g29
20:18:50 246  ,chf_g30
20:18:50 247  ,chf_g31
20:18:50 248  ,chf_g32
20:18:50 249  ,chf_g33
20:18:50 250  ,chf_g34
20:18:50 251  ,chf_g35
20:18:50 252  ,chf_g36
20:18:50 253  ,chf_g37
20:18:50 254  ,chf_g38
20:18:50 255  ,chf_g39
20:18:50 256  ,chf_g40
20:18:50 257  ,chf_g41
20:18:50 258  FROM aud_ms6 m
20:18:50 259  WHERE gatt IN('nup','up')
20:18:50 260  AND 1+m.ydate < '&1'||' '||'&2'
20:18:50 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'20:05:00'

View created.

Elapsed: 00:00:00.36
20:18:51 SQL> 
20:18:51 SQL> -- rpt
20:18:51 SQL> 
20:18:51 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
20:18:51   2  
20:18:51 SQL> SELECT MAX(prdate) FROM bme
20:18:51   2  
20:18:51 SQL> -- Now build model from bme and score sme
20:18:51 SQL> @score1.sql
20:18:51 SQL> -- score1.sql
20:18:51 SQL> 
20:18:51 SQL> -- Does the 1st SVM score
20:18:51 SQL> 
20:18:51 SQL> -- Fill up svmc_apply_prep
20:18:51 SQL> @score.sql
20:18:51 SQL> --
20:18:51 SQL> -- score.sql
20:18:51 SQL> --
20:18:51 SQL> 
20:18:51 SQL> -- usage: score.sql
20:18:51 SQL> 
20:18:51 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:18:51 SQL> 
20:18:51 SQL> DEFINE target	= 'gatt'
20:18:51 SQL> DEFINE model_name = 'forex14'
20:18:51 SQL> DEFINE bldtable	= 'bme'
20:18:51 SQL> DEFINE scoretable = 'sme'
20:18:51 SQL> DEFINE case_id	= 'prdate'
20:18:51 SQL> 
20:18:51 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:18:51 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:18:51 SQL> 
20:18:51 SQL> -- Builds an SVM model using pl/sql.
20:18:51 SQL> 
20:18:51 SQL> -----------------------------------------------------------------------
20:18:51 SQL> --			    BUILD THE MODEL
20:18:51 SQL> -----------------------------------------------------------------------
20:18:51 SQL> 
20:18:51 SQL> -- Cleanup old build data preparation objects for repeat runs
20:18:51 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
20:18:51 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:18:51 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.16
20:18:51 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
20:18:51 SQL> 
20:18:51 SQL> 
20:18:51 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:18:51 SQL> --
20:18:51 SQL> -- DROP	TABLE svmc_settings ;
20:18:51 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:18:51 SQL> -- DELETE svmc_settings;
20:18:51 SQL> 
20:18:51 SQL> -- The default classification algorithm is Naive Bayes. So override
20:18:51 SQL> -- this choice to SVM using a settings table.
20:18:51 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:18:51 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:18:51 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:18:51 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:18:51 SQL> -- models.
20:18:51 SQL> --
20:18:51 SQL> 
20:18:51 SQL> -- Do this once and then comment it out.
20:18:51 SQL> -- That makes script go faster.
20:18:51 SQL> -- BEGIN
20:18:51 SQL> -- -- Populate settings table
20:18:51 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:18:51 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:18:51 SQL> --
20:18:51 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:18:51 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:18:51 SQL> --
20:18:51 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:18:51 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:18:51 SQL> --   COMMIT;
20:18:51 SQL> -- END;
20:18:51 SQL> -- /
20:18:51 SQL> 
20:18:51 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:18:51 SQL> 
20:18:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:18:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:18:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.19
20:18:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:18:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:18:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.12
20:18:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:18:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:18:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
20:18:51 SQL> 
20:18:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:18:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:18:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:18:51 SQL> 
20:18:51 SQL> --------------------------------
20:18:51 SQL> -- PREPARE BUILD (TRAINING) DATA
20:18:51 SQL> --
20:18:51 SQL> 
20:18:51 SQL> -- 1. Missing Value treatment for all Predictors and
20:18:51 SQL> -- 2. Outlier Treatment and
20:18:51 SQL> -- 3. Normalization are performed below.
20:18:51 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:18:51 SQL> --    normalized here.
20:18:51 SQL> 
20:18:51 SQL> BEGIN
20:18:51   2  	-- Perform missing value treatment for all predictors
20:18:51   3  	-- create miss tables
20:18:51   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:18:51   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:18:51   6  
20:18:51   7  	-- populate miss tables
20:18:51   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:18:51   9  	  miss_table_name => 'svmc_miss_num',
20:18:51  10  	  data_table_name => '&bldtable',
20:18:51  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:18:51  12  
20:18:51  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:18:51  14  	  miss_table_name => 'svmc_miss_cat',
20:18:51  15  	  data_table_name => '&bldtable',
20:18:51  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:18:51  17  
20:18:51  18  	-- xform input data to replace missing values
20:18:51  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:18:51  20  	  miss_table_name => 'svmc_miss_num',
20:18:51  21  	  data_table_name => '&bldtable',
20:18:51  22  	  xform_view_name => 'xformed_build_miss_num');
20:18:51  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:18:51  24  	  miss_table_name => 'svmc_miss_cat',
20:18:51  25  	  data_table_name => '&bldtable',
20:18:51  26  	  xform_view_name => 'xformed_build_miss_cat');
20:18:51  27  
20:18:51  28  	-- Perform outlier treatment.
20:18:51  29  	-- create clip table
20:18:51  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:18:51  31  
20:18:51  32  	-- populate clip table
20:18:51  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:18:51  34  	  clip_table_name => 'svmc_clip',
20:18:51  35  	  data_table_name => '&bldtable',
20:18:51  36  	  tail_frac	  => 0.025,
20:18:51  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:18:51  38  
20:18:51  39  	-- xform input data to winsorized data
20:18:51  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:18:51  41  	  clip_table_name => 'svmc_clip',
20:18:51  42  	  data_table_name => '&bldtable',
20:18:51  43  	  xform_view_name => 'svmc_winsor');
20:18:51  44  
20:18:51  45  	-- create normalization table
20:18:51  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:18:51  47  
20:18:51  48  	-- populate normalization table based on winsorized data
20:18:51  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:18:51  50  	  norm_table_name => 'svmc_norm',
20:18:51  51  	  data_table_name => 'svmc_winsor',
20:18:51  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:18:51  53  
20:18:51  54  	-- normalize the original data
20:18:51  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:18:51  56  	  norm_table_name => 'svmc_norm',
20:18:51  57  	  data_table_name => '&bldtable',
20:18:51  58  	  xform_view_name => 'svmc_build_prep');
20:18:51  59  END;
20:18:51  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.59
20:19:10 SQL> 
20:19:10 SQL> ---------------------
20:19:10 SQL> -- CREATE A NEW MODEL
20:19:10 SQL> --
20:19:10 SQL> -- Cleanup old model with the same name for repeat runs
20:19:10 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:19:10   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:19:10   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.05
20:19:11 SQL> 
20:19:11 SQL> -- Build a new SVM Model
20:19:11 SQL> BEGIN
20:19:11   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:19:11   3  	  model_name	      => '&model_name',
20:19:11   4  	  mining_function     => dbms_data_mining.classification,
20:19:11   5  	  data_table_name     => 'svmc_build_prep',
20:19:11   6  	  case_id_column_name => '&case_id',
20:19:11   7  	  target_column_name  => '&target',
20:19:11   8  	  settings_table_name => 'svmc_settings');
20:19:11   9  END;
20:19:11  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.85
20:19:40 SQL> 
20:19:40 SQL> -----------------------------------------------------------------------
20:19:40 SQL> --			       APPLY/score THE MODEL
20:19:40 SQL> -----------------------------------------------------------------------
20:19:40 SQL> 
20:19:40 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:19:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:19:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:19:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:19:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:19:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:19:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:19:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:19:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:19:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:19:40 SQL> -----------------------
20:19:40 SQL> -- PREPARE SCORING DATA
20:19:40 SQL> --
20:19:40 SQL> -- If the data for model creation has been prepared, then the data
20:19:40 SQL> -- to be scored using the model must be prepared in the same manner
20:19:40 SQL> -- in order to obtain meaningful results.
20:19:40 SQL> --
20:19:40 SQL> -- 1. Missing Value treatment for all Predictors and
20:19:40 SQL> -- 2. Normalization
20:19:40 SQL> -- No outlier treatment will be performed during test and apply. The
20:19:40 SQL> -- normalization step is sufficient, since the normalization parameters
20:19:40 SQL> -- already capture the effects of outlier treatment done with build data.
20:19:40 SQL> --
20:19:40 SQL> BEGIN
20:19:40   2  	-- Xform Test data to replace missing values
20:19:40   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:19:40   4  	  miss_table_name => 'svmc_miss_num',
20:19:40   5  	  data_table_name => '&scoretable',
20:19:40   6  	  xform_view_name => 'xformed_apply_miss_num');
20:19:40   7  
20:19:40   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:19:40   9  	  miss_table_name => 'svmc_miss_cat',
20:19:40  10  	  data_table_name => '&scoretable',
20:19:40  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:19:40  12  
20:19:40  13  	-- Normalize the data to be scored
20:19:40  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:19:40  15  	  norm_table_name => 'svmc_norm',
20:19:40  16  	  data_table_name => '&scoretable',
20:19:40  17  	  xform_view_name => 'svmc_apply_prep');
20:19:40  18  END;
20:19:40  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
20:19:41 SQL> 
20:19:41 SQL> -- Use same model_name used in score.sql
20:19:41 SQL> DEFINE model_name = 'forex14'
20:19:41 SQL> 
20:19:41 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
20:19:41 SQL> 
20:19:41 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
20:19:41 SQL> 
20:19:41 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
20:19:41   2  SELECT
20:19:41   3  prdate
20:19:41   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:19:41   5  ,sysdate
20:19:41   6  ,SUBSTR(prdate,1,3)pair
20:19:41   7  ,SUBSTR(prdate,4,19)ydate
20:19:41   8  FROM svmc_apply_prep
20:19:41   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
20:19:41 SQL> @aud_score1day_gattn.sql	2010-12-29 19:55:00
20:19:41 SQL> --
20:19:41 SQL> -- aud_score1day_gattn.sql
20:19:41 SQL> --
20:19:41 SQL> 
20:19:41 SQL> CREATE OR REPLACE VIEW sme AS
20:19:41   2  SELECT
20:19:41   3  'aud'||m.ydate prdate
20:19:41   4  ,NULL gattn
20:19:41   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:19:41   6  ,eur_g00
20:19:41   7  ,eur_g01
20:19:41   8  ,eur_g02
20:19:41   9  ,eur_g03
20:19:41  10  ,eur_g04
20:19:41  11  ,eur_g05
20:19:41  12  ,eur_g06
20:19:41  13  ,eur_g07
20:19:41  14  ,eur_g08
20:19:41  15  ,eur_g09
20:19:41  16  ,eur_g10
20:19:41  17  ,eur_g11
20:19:41  18  ,eur_g12
20:19:41  19  ,eur_g13
20:19:41  20  ,eur_g14
20:19:41  21  ,eur_g15
20:19:41  22  ,eur_g16
20:19:41  23  ,eur_g17
20:19:41  24  ,eur_g18
20:19:41  25  ,eur_g19
20:19:41  26  ,eur_g20
20:19:41  27  ,eur_g21
20:19:41  28  ,eur_g22
20:19:41  29  ,eur_g23
20:19:41  30  ,eur_g24
20:19:41  31  ,eur_g25
20:19:41  32  ,eur_g26
20:19:41  33  ,eur_g27
20:19:41  34  ,eur_g28
20:19:41  35  ,eur_g29
20:19:41  36  ,eur_g30
20:19:41  37  ,eur_g31
20:19:41  38  ,eur_g32
20:19:41  39  ,eur_g33
20:19:41  40  ,eur_g34
20:19:41  41  ,eur_g35
20:19:41  42  ,eur_g36
20:19:41  43  ,eur_g37
20:19:41  44  ,eur_g38
20:19:41  45  ,eur_g39
20:19:41  46  ,eur_g40
20:19:41  47  ,eur_g41
20:19:41  48  ,aud_g00
20:19:41  49  ,aud_g01
20:19:41  50  ,aud_g02
20:19:41  51  ,aud_g03
20:19:41  52  ,aud_g04
20:19:41  53  ,aud_g05
20:19:41  54  ,aud_g06
20:19:41  55  ,aud_g07
20:19:41  56  ,aud_g08
20:19:41  57  ,aud_g09
20:19:41  58  ,aud_g10
20:19:41  59  ,aud_g11
20:19:41  60  ,aud_g12
20:19:41  61  ,aud_g13
20:19:41  62  ,aud_g14
20:19:41  63  ,aud_g15
20:19:41  64  ,aud_g16
20:19:41  65  ,aud_g17
20:19:41  66  ,aud_g18
20:19:41  67  ,aud_g19
20:19:41  68  ,aud_g20
20:19:41  69  ,aud_g21
20:19:41  70  ,aud_g22
20:19:41  71  ,aud_g23
20:19:41  72  ,aud_g24
20:19:41  73  ,aud_g25
20:19:41  74  ,aud_g26
20:19:41  75  ,aud_g27
20:19:41  76  ,aud_g28
20:19:41  77  ,aud_g29
20:19:41  78  ,aud_g30
20:19:41  79  ,aud_g31
20:19:41  80  ,aud_g32
20:19:41  81  ,aud_g33
20:19:41  82  ,aud_g34
20:19:41  83  ,aud_g35
20:19:41  84  ,aud_g36
20:19:41  85  ,aud_g37
20:19:41  86  ,aud_g38
20:19:41  87  ,aud_g39
20:19:41  88  ,aud_g40
20:19:41  89  ,aud_g41
20:19:41  90  ,gbp_g00
20:19:41  91  ,gbp_g01
20:19:41  92  ,gbp_g02
20:19:41  93  ,gbp_g03
20:19:41  94  ,gbp_g04
20:19:41  95  ,gbp_g05
20:19:41  96  ,gbp_g06
20:19:41  97  ,gbp_g07
20:19:41  98  ,gbp_g08
20:19:41  99  ,gbp_g09
20:19:41 100  ,gbp_g10
20:19:41 101  ,gbp_g11
20:19:41 102  ,gbp_g12
20:19:41 103  ,gbp_g13
20:19:41 104  ,gbp_g14
20:19:41 105  ,gbp_g15
20:19:41 106  ,gbp_g16
20:19:41 107  ,gbp_g17
20:19:41 108  ,gbp_g18
20:19:41 109  ,gbp_g19
20:19:41 110  ,gbp_g20
20:19:41 111  ,gbp_g21
20:19:41 112  ,gbp_g22
20:19:41 113  ,gbp_g23
20:19:41 114  ,gbp_g24
20:19:41 115  ,gbp_g25
20:19:41 116  ,gbp_g26
20:19:41 117  ,gbp_g27
20:19:41 118  ,gbp_g28
20:19:41 119  ,gbp_g29
20:19:41 120  ,gbp_g30
20:19:41 121  ,gbp_g31
20:19:41 122  ,gbp_g32
20:19:41 123  ,gbp_g33
20:19:41 124  ,gbp_g34
20:19:41 125  ,gbp_g35
20:19:41 126  ,gbp_g36
20:19:41 127  ,gbp_g37
20:19:41 128  ,gbp_g38
20:19:41 129  ,gbp_g39
20:19:41 130  ,gbp_g40
20:19:41 131  ,gbp_g41
20:19:41 132  ,jpy_g00
20:19:41 133  ,jpy_g01
20:19:41 134  ,jpy_g02
20:19:41 135  ,jpy_g03
20:19:41 136  ,jpy_g04
20:19:41 137  ,jpy_g05
20:19:41 138  ,jpy_g06
20:19:41 139  ,jpy_g07
20:19:41 140  ,jpy_g08
20:19:41 141  ,jpy_g09
20:19:41 142  ,jpy_g10
20:19:41 143  ,jpy_g11
20:19:41 144  ,jpy_g12
20:19:41 145  ,jpy_g13
20:19:41 146  ,jpy_g14
20:19:41 147  ,jpy_g15
20:19:41 148  ,jpy_g16
20:19:41 149  ,jpy_g17
20:19:41 150  ,jpy_g18
20:19:41 151  ,jpy_g19
20:19:41 152  ,jpy_g20
20:19:41 153  ,jpy_g21
20:19:41 154  ,jpy_g22
20:19:41 155  ,jpy_g23
20:19:41 156  ,jpy_g24
20:19:41 157  ,jpy_g25
20:19:41 158  ,jpy_g26
20:19:41 159  ,jpy_g27
20:19:41 160  ,jpy_g28
20:19:41 161  ,jpy_g29
20:19:41 162  ,jpy_g30
20:19:41 163  ,jpy_g31
20:19:41 164  ,jpy_g32
20:19:41 165  ,jpy_g33
20:19:41 166  ,jpy_g34
20:19:41 167  ,jpy_g35
20:19:41 168  ,jpy_g36
20:19:41 169  ,jpy_g37
20:19:41 170  ,jpy_g38
20:19:41 171  ,jpy_g39
20:19:41 172  ,jpy_g40
20:19:41 173  ,jpy_g41
20:19:41 174  ,cad_g00
20:19:41 175  ,cad_g01
20:19:41 176  ,cad_g02
20:19:41 177  ,cad_g03
20:19:41 178  ,cad_g04
20:19:41 179  ,cad_g05
20:19:41 180  ,cad_g06
20:19:41 181  ,cad_g07
20:19:41 182  ,cad_g08
20:19:41 183  ,cad_g09
20:19:41 184  ,cad_g10
20:19:41 185  ,cad_g11
20:19:41 186  ,cad_g12
20:19:41 187  ,cad_g13
20:19:41 188  ,cad_g14
20:19:41 189  ,cad_g15
20:19:41 190  ,cad_g16
20:19:41 191  ,cad_g17
20:19:41 192  ,cad_g18
20:19:41 193  ,cad_g19
20:19:41 194  ,cad_g20
20:19:41 195  ,cad_g21
20:19:41 196  ,cad_g22
20:19:41 197  ,cad_g23
20:19:41 198  ,cad_g24
20:19:41 199  ,cad_g25
20:19:41 200  ,cad_g26
20:19:41 201  ,cad_g27
20:19:41 202  ,cad_g28
20:19:41 203  ,cad_g29
20:19:41 204  ,cad_g30
20:19:41 205  ,cad_g31
20:19:41 206  ,cad_g32
20:19:41 207  ,cad_g33
20:19:41 208  ,cad_g34
20:19:41 209  ,cad_g35
20:19:41 210  ,cad_g36
20:19:41 211  ,cad_g37
20:19:41 212  ,cad_g38
20:19:41 213  ,cad_g39
20:19:41 214  ,cad_g40
20:19:41 215  ,cad_g41
20:19:41 216  ,chf_g00
20:19:41 217  ,chf_g01
20:19:41 218  ,chf_g02
20:19:41 219  ,chf_g03
20:19:41 220  ,chf_g04
20:19:41 221  ,chf_g05
20:19:41 222  ,chf_g06
20:19:41 223  ,chf_g07
20:19:41 224  ,chf_g08
20:19:41 225  ,chf_g09
20:19:41 226  ,chf_g10
20:19:41 227  ,chf_g11
20:19:41 228  ,chf_g12
20:19:41 229  ,chf_g13
20:19:41 230  ,chf_g14
20:19:41 231  ,chf_g15
20:19:41 232  ,chf_g16
20:19:41 233  ,chf_g17
20:19:41 234  ,chf_g18
20:19:41 235  ,chf_g19
20:19:41 236  ,chf_g20
20:19:41 237  ,chf_g21
20:19:41 238  ,chf_g22
20:19:41 239  ,chf_g23
20:19:41 240  ,chf_g24
20:19:41 241  ,chf_g25
20:19:41 242  ,chf_g26
20:19:41 243  ,chf_g27
20:19:41 244  ,chf_g28
20:19:41 245  ,chf_g29
20:19:41 246  ,chf_g30
20:19:41 247  ,chf_g31
20:19:41 248  ,chf_g32
20:19:41 249  ,chf_g33
20:19:41 250  ,chf_g34
20:19:41 251  ,chf_g35
20:19:41 252  ,chf_g36
20:19:41 253  ,chf_g37
20:19:41 254  ,chf_g38
20:19:41 255  ,chf_g39
20:19:41 256  ,chf_g40
20:19:41 257  ,chf_g41
20:19:41 258  FROM aud_ms6 m
20:19:41 259  WHERE m.ydate = '&1'||' '||'&2'
20:19:41 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'19:55:00'

View created.

Elapsed: 00:00:00.12
20:19:41 SQL> 
20:19:41 SQL> -- rpt
20:19:41 SQL> -- We should see just 1 row:
20:19:41 SQL> 
20:19:41 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
20:19:41 SQL> 
20:19:41 SQL> -- Build the model:
20:19:41 SQL> CREATE OR REPLACE VIEW bme AS
20:19:41   2  SELECT
20:19:41   3  'aud'||m.ydate prdate
20:19:41   4  ,gattn
20:19:41   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:19:41   6  ,eur_g00
20:19:41   7  ,eur_g01
20:19:41   8  ,eur_g02
20:19:41   9  ,eur_g03
20:19:41  10  ,eur_g04
20:19:41  11  ,eur_g05
20:19:41  12  ,eur_g06
20:19:41  13  ,eur_g07
20:19:41  14  ,eur_g08
20:19:41  15  ,eur_g09
20:19:41  16  ,eur_g10
20:19:41  17  ,eur_g11
20:19:41  18  ,eur_g12
20:19:41  19  ,eur_g13
20:19:41  20  ,eur_g14
20:19:41  21  ,eur_g15
20:19:41  22  ,eur_g16
20:19:41  23  ,eur_g17
20:19:41  24  ,eur_g18
20:19:41  25  ,eur_g19
20:19:41  26  ,eur_g20
20:19:41  27  ,eur_g21
20:19:41  28  ,eur_g22
20:19:41  29  ,eur_g23
20:19:41  30  ,eur_g24
20:19:41  31  ,eur_g25
20:19:41  32  ,eur_g26
20:19:41  33  ,eur_g27
20:19:41  34  ,eur_g28
20:19:41  35  ,eur_g29
20:19:41  36  ,eur_g30
20:19:41  37  ,eur_g31
20:19:41  38  ,eur_g32
20:19:41  39  ,eur_g33
20:19:41  40  ,eur_g34
20:19:41  41  ,eur_g35
20:19:41  42  ,eur_g36
20:19:41  43  ,eur_g37
20:19:41  44  ,eur_g38
20:19:41  45  ,eur_g39
20:19:41  46  ,eur_g40
20:19:41  47  ,eur_g41
20:19:41  48  ,aud_g00
20:19:41  49  ,aud_g01
20:19:41  50  ,aud_g02
20:19:41  51  ,aud_g03
20:19:41  52  ,aud_g04
20:19:41  53  ,aud_g05
20:19:41  54  ,aud_g06
20:19:41  55  ,aud_g07
20:19:41  56  ,aud_g08
20:19:41  57  ,aud_g09
20:19:41  58  ,aud_g10
20:19:41  59  ,aud_g11
20:19:41  60  ,aud_g12
20:19:41  61  ,aud_g13
20:19:41  62  ,aud_g14
20:19:41  63  ,aud_g15
20:19:41  64  ,aud_g16
20:19:41  65  ,aud_g17
20:19:41  66  ,aud_g18
20:19:41  67  ,aud_g19
20:19:41  68  ,aud_g20
20:19:41  69  ,aud_g21
20:19:41  70  ,aud_g22
20:19:41  71  ,aud_g23
20:19:41  72  ,aud_g24
20:19:41  73  ,aud_g25
20:19:41  74  ,aud_g26
20:19:41  75  ,aud_g27
20:19:41  76  ,aud_g28
20:19:41  77  ,aud_g29
20:19:41  78  ,aud_g30
20:19:41  79  ,aud_g31
20:19:41  80  ,aud_g32
20:19:41  81  ,aud_g33
20:19:41  82  ,aud_g34
20:19:41  83  ,aud_g35
20:19:41  84  ,aud_g36
20:19:41  85  ,aud_g37
20:19:41  86  ,aud_g38
20:19:41  87  ,aud_g39
20:19:41  88  ,aud_g40
20:19:41  89  ,aud_g41
20:19:41  90  ,gbp_g00
20:19:41  91  ,gbp_g01
20:19:41  92  ,gbp_g02
20:19:41  93  ,gbp_g03
20:19:41  94  ,gbp_g04
20:19:41  95  ,gbp_g05
20:19:41  96  ,gbp_g06
20:19:41  97  ,gbp_g07
20:19:41  98  ,gbp_g08
20:19:41  99  ,gbp_g09
20:19:41 100  ,gbp_g10
20:19:41 101  ,gbp_g11
20:19:41 102  ,gbp_g12
20:19:41 103  ,gbp_g13
20:19:41 104  ,gbp_g14
20:19:41 105  ,gbp_g15
20:19:41 106  ,gbp_g16
20:19:41 107  ,gbp_g17
20:19:41 108  ,gbp_g18
20:19:41 109  ,gbp_g19
20:19:41 110  ,gbp_g20
20:19:41 111  ,gbp_g21
20:19:41 112  ,gbp_g22
20:19:41 113  ,gbp_g23
20:19:41 114  ,gbp_g24
20:19:41 115  ,gbp_g25
20:19:41 116  ,gbp_g26
20:19:41 117  ,gbp_g27
20:19:41 118  ,gbp_g28
20:19:41 119  ,gbp_g29
20:19:41 120  ,gbp_g30
20:19:41 121  ,gbp_g31
20:19:41 122  ,gbp_g32
20:19:41 123  ,gbp_g33
20:19:41 124  ,gbp_g34
20:19:41 125  ,gbp_g35
20:19:41 126  ,gbp_g36
20:19:41 127  ,gbp_g37
20:19:41 128  ,gbp_g38
20:19:41 129  ,gbp_g39
20:19:41 130  ,gbp_g40
20:19:41 131  ,gbp_g41
20:19:41 132  ,jpy_g00
20:19:41 133  ,jpy_g01
20:19:41 134  ,jpy_g02
20:19:41 135  ,jpy_g03
20:19:41 136  ,jpy_g04
20:19:41 137  ,jpy_g05
20:19:41 138  ,jpy_g06
20:19:41 139  ,jpy_g07
20:19:41 140  ,jpy_g08
20:19:41 141  ,jpy_g09
20:19:41 142  ,jpy_g10
20:19:41 143  ,jpy_g11
20:19:41 144  ,jpy_g12
20:19:41 145  ,jpy_g13
20:19:41 146  ,jpy_g14
20:19:41 147  ,jpy_g15
20:19:41 148  ,jpy_g16
20:19:41 149  ,jpy_g17
20:19:41 150  ,jpy_g18
20:19:41 151  ,jpy_g19
20:19:41 152  ,jpy_g20
20:19:41 153  ,jpy_g21
20:19:41 154  ,jpy_g22
20:19:41 155  ,jpy_g23
20:19:41 156  ,jpy_g24
20:19:41 157  ,jpy_g25
20:19:41 158  ,jpy_g26
20:19:41 159  ,jpy_g27
20:19:41 160  ,jpy_g28
20:19:41 161  ,jpy_g29
20:19:41 162  ,jpy_g30
20:19:41 163  ,jpy_g31
20:19:41 164  ,jpy_g32
20:19:41 165  ,jpy_g33
20:19:41 166  ,jpy_g34
20:19:41 167  ,jpy_g35
20:19:41 168  ,jpy_g36
20:19:41 169  ,jpy_g37
20:19:41 170  ,jpy_g38
20:19:41 171  ,jpy_g39
20:19:41 172  ,jpy_g40
20:19:41 173  ,jpy_g41
20:19:41 174  ,cad_g00
20:19:41 175  ,cad_g01
20:19:41 176  ,cad_g02
20:19:41 177  ,cad_g03
20:19:41 178  ,cad_g04
20:19:41 179  ,cad_g05
20:19:41 180  ,cad_g06
20:19:41 181  ,cad_g07
20:19:41 182  ,cad_g08
20:19:41 183  ,cad_g09
20:19:41 184  ,cad_g10
20:19:41 185  ,cad_g11
20:19:41 186  ,cad_g12
20:19:41 187  ,cad_g13
20:19:41 188  ,cad_g14
20:19:41 189  ,cad_g15
20:19:41 190  ,cad_g16
20:19:41 191  ,cad_g17
20:19:41 192  ,cad_g18
20:19:41 193  ,cad_g19
20:19:41 194  ,cad_g20
20:19:41 195  ,cad_g21
20:19:41 196  ,cad_g22
20:19:41 197  ,cad_g23
20:19:41 198  ,cad_g24
20:19:41 199  ,cad_g25
20:19:41 200  ,cad_g26
20:19:41 201  ,cad_g27
20:19:41 202  ,cad_g28
20:19:41 203  ,cad_g29
20:19:41 204  ,cad_g30
20:19:41 205  ,cad_g31
20:19:41 206  ,cad_g32
20:19:41 207  ,cad_g33
20:19:41 208  ,cad_g34
20:19:41 209  ,cad_g35
20:19:41 210  ,cad_g36
20:19:41 211  ,cad_g37
20:19:41 212  ,cad_g38
20:19:41 213  ,cad_g39
20:19:41 214  ,cad_g40
20:19:41 215  ,cad_g41
20:19:41 216  ,chf_g00
20:19:41 217  ,chf_g01
20:19:41 218  ,chf_g02
20:19:41 219  ,chf_g03
20:19:41 220  ,chf_g04
20:19:41 221  ,chf_g05
20:19:41 222  ,chf_g06
20:19:41 223  ,chf_g07
20:19:41 224  ,chf_g08
20:19:41 225  ,chf_g09
20:19:41 226  ,chf_g10
20:19:41 227  ,chf_g11
20:19:41 228  ,chf_g12
20:19:41 229  ,chf_g13
20:19:41 230  ,chf_g14
20:19:41 231  ,chf_g15
20:19:41 232  ,chf_g16
20:19:41 233  ,chf_g17
20:19:41 234  ,chf_g18
20:19:41 235  ,chf_g19
20:19:41 236  ,chf_g20
20:19:41 237  ,chf_g21
20:19:41 238  ,chf_g22
20:19:41 239  ,chf_g23
20:19:41 240  ,chf_g24
20:19:41 241  ,chf_g25
20:19:41 242  ,chf_g26
20:19:41 243  ,chf_g27
20:19:41 244  ,chf_g28
20:19:41 245  ,chf_g29
20:19:41 246  ,chf_g30
20:19:41 247  ,chf_g31
20:19:41 248  ,chf_g32
20:19:41 249  ,chf_g33
20:19:41 250  ,chf_g34
20:19:41 251  ,chf_g35
20:19:41 252  ,chf_g36
20:19:41 253  ,chf_g37
20:19:41 254  ,chf_g38
20:19:41 255  ,chf_g39
20:19:41 256  ,chf_g40
20:19:41 257  ,chf_g41
20:19:41 258  FROM aud_ms6 m
20:19:41 259  WHERE gattn IN('nup','up')
20:19:41 260  AND 1+m.ydate < '&1'||' '||'&2'
20:19:41 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'19:55:00'

View created.

Elapsed: 00:00:00.12
20:19:42 SQL> 
20:19:42 SQL> -- rpt
20:19:42 SQL> 
20:19:42 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12852
up	     6397

Elapsed: 00:00:00.04
20:19:42 SQL> 
20:19:42 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-28 19:50:00

Elapsed: 00:00:00.04
20:19:42 SQL> 
20:19:42 SQL> -- Now build model from bme and score sme
20:19:42 SQL> @score1gattn.sql
20:19:42 SQL> -- score1gattn.sql
20:19:42 SQL> 
20:19:42 SQL> -- Does the 1st SVM score
20:19:42 SQL> 
20:19:42 SQL> -- Fill up svmc_apply_prep
20:19:42 SQL> @score_gattn.sql
20:19:42 SQL> --
20:19:42 SQL> -- score_gattn.sql
20:19:42 SQL> --
20:19:42 SQL> 
20:19:42 SQL> -- usage: score_gattn.sql
20:19:42 SQL> 
20:19:42 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:19:42 SQL> 
20:19:42 SQL> DEFINE target	= 'gattn'
20:19:42 SQL> DEFINE model_name = 'forex14'
20:19:42 SQL> DEFINE bldtable	= 'bme'
20:19:42 SQL> DEFINE scoretable = 'sme'
20:19:42 SQL> DEFINE case_id	= 'prdate'
20:19:42 SQL> 
20:19:42 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:19:42 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:19:42 SQL> 
20:19:42 SQL> -- Builds an SVM model using pl/sql.
20:19:42 SQL> 
20:19:42 SQL> -----------------------------------------------------------------------
20:19:42 SQL> --			    BUILD THE MODEL
20:19:42 SQL> -----------------------------------------------------------------------
20:19:42 SQL> 
20:19:42 SQL> -- Cleanup old build data preparation objects for repeat runs
20:19:42 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
20:19:42 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
20:19:42 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
20:19:42 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
20:19:42 SQL> 
20:19:42 SQL> 
20:19:42 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:19:42 SQL> --
20:19:42 SQL> -- DROP	TABLE svmc_settings ;
20:19:42 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:19:42 SQL> -- DELETE svmc_settings;
20:19:42 SQL> 
20:19:42 SQL> -- The default classification algorithm is Naive Bayes. So override
20:19:42 SQL> -- this choice to SVM using a settings table.
20:19:42 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:19:42 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:19:42 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:19:42 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:19:42 SQL> -- models.
20:19:42 SQL> --
20:19:42 SQL> 
20:19:42 SQL> -- Do this once and then comment it out.
20:19:42 SQL> -- That makes script go faster.
20:19:42 SQL> -- BEGIN
20:19:42 SQL> -- -- Populate settings table
20:19:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:19:42 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:19:42 SQL> --
20:19:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:19:42 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:19:42 SQL> --
20:19:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:19:42 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:19:42 SQL> --   COMMIT;
20:19:42 SQL> -- END;
20:19:42 SQL> -- /
20:19:42 SQL> 
20:19:42 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:19:42 SQL> 
20:19:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:19:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:19:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:19:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:19:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:19:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
20:19:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:19:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:19:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:19:42 SQL> 
20:19:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:19:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:19:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:19:42 SQL> 
20:19:42 SQL> --------------------------------
20:19:42 SQL> -- PREPARE BUILD (TRAINING) DATA
20:19:42 SQL> --
20:19:42 SQL> 
20:19:42 SQL> -- 1. Missing Value treatment for all Predictors and
20:19:42 SQL> -- 2. Outlier Treatment and
20:19:42 SQL> -- 3. Normalization are performed below.
20:19:42 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:19:42 SQL> --    normalized here.
20:19:42 SQL> 
20:19:42 SQL> BEGIN
20:19:42   2  	-- Perform missing value treatment for all predictors
20:19:42   3  	-- create miss tables
20:19:42   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:19:42   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:19:42   6  
20:19:42   7  	-- populate miss tables
20:19:42   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:19:42   9  	  miss_table_name => 'svmc_miss_num',
20:19:42  10  	  data_table_name => '&bldtable',
20:19:42  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:19:42  12  
20:19:42  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:19:42  14  	  miss_table_name => 'svmc_miss_cat',
20:19:42  15  	  data_table_name => '&bldtable',
20:19:42  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:19:42  17  
20:19:42  18  	-- xform input data to replace missing values
20:19:42  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:19:42  20  	  miss_table_name => 'svmc_miss_num',
20:19:42  21  	  data_table_name => '&bldtable',
20:19:42  22  	  xform_view_name => 'xformed_build_miss_num');
20:19:42  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:19:42  24  	  miss_table_name => 'svmc_miss_cat',
20:19:42  25  	  data_table_name => '&bldtable',
20:19:42  26  	  xform_view_name => 'xformed_build_miss_cat');
20:19:42  27  
20:19:42  28  	-- Perform outlier treatment.
20:19:42  29  	-- create clip table
20:19:42  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:19:42  31  
20:19:42  32  	-- populate clip table
20:19:42  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:19:42  34  	  clip_table_name => 'svmc_clip',
20:19:42  35  	  data_table_name => '&bldtable',
20:19:42  36  	  tail_frac	  => 0.025,
20:19:42  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:19:42  38  
20:19:42  39  	-- xform input data to winsorized data
20:19:42  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:19:42  41  	  clip_table_name => 'svmc_clip',
20:19:42  42  	  data_table_name => '&bldtable',
20:19:42  43  	  xform_view_name => 'svmc_winsor');
20:19:42  44  
20:19:42  45  	-- create normalization table
20:19:42  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:19:42  47  
20:19:42  48  	-- populate normalization table based on winsorized data
20:19:42  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:19:42  50  	  norm_table_name => 'svmc_norm',
20:19:42  51  	  data_table_name => 'svmc_winsor',
20:19:42  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:19:42  53  
20:19:42  54  	-- normalize the original data
20:19:42  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:19:42  56  	  norm_table_name => 'svmc_norm',
20:19:42  57  	  data_table_name => '&bldtable',
20:19:42  58  	  xform_view_name => 'svmc_build_prep');
20:19:42  59  END;
20:19:42  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.11
20:20:01 SQL> 
20:20:01 SQL> ---------------------
20:20:01 SQL> -- CREATE A NEW MODEL
20:20:01 SQL> --
20:20:01 SQL> -- Cleanup old model with the same name for repeat runs
20:20:01 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:20:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:20:01   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.16
20:20:02 SQL> 
20:20:02 SQL> -- Build a new SVM Model
20:20:02 SQL> BEGIN
20:20:02   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:20:02   3  	  model_name	      => '&model_name',
20:20:02   4  	  mining_function     => dbms_data_mining.classification,
20:20:02   5  	  data_table_name     => 'svmc_build_prep',
20:20:02   6  	  case_id_column_name => '&case_id',
20:20:02   7  	  target_column_name  => '&target',
20:20:02   8  	  settings_table_name => 'svmc_settings');
20:20:02   9  END;
20:20:02  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.61
20:20:29 SQL> 
20:20:29 SQL> -----------------------------------------------------------------------
20:20:29 SQL> --			       APPLY/score THE MODEL
20:20:29 SQL> -----------------------------------------------------------------------
20:20:29 SQL> 
20:20:29 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:20:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:20:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:20:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:20:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:20:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:20:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:20:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:20:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:20:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:20:29 SQL> -----------------------
20:20:29 SQL> -- PREPARE SCORING DATA
20:20:29 SQL> --
20:20:29 SQL> -- If the data for model creation has been prepared, then the data
20:20:29 SQL> -- to be scored using the model must be prepared in the same manner
20:20:29 SQL> -- in order to obtain meaningful results.
20:20:29 SQL> --
20:20:29 SQL> -- 1. Missing Value treatment for all Predictors and
20:20:29 SQL> -- 2. Normalization
20:20:29 SQL> -- No outlier treatment will be performed during test and apply. The
20:20:29 SQL> -- normalization step is sufficient, since the normalization parameters
20:20:29 SQL> -- already capture the effects of outlier treatment done with build data.
20:20:29 SQL> --
20:20:29 SQL> BEGIN
20:20:29   2  	-- Xform Test data to replace missing values
20:20:29   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:20:29   4  	  miss_table_name => 'svmc_miss_num',
20:20:29   5  	  data_table_name => '&scoretable',
20:20:29   6  	  xform_view_name => 'xformed_apply_miss_num');
20:20:29   7  
20:20:29   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:20:29   9  	  miss_table_name => 'svmc_miss_cat',
20:20:29  10  	  data_table_name => '&scoretable',
20:20:29  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:20:29  12  
20:20:29  13  	-- Normalize the data to be scored
20:20:29  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:20:29  15  	  norm_table_name => 'svmc_norm',
20:20:29  16  	  data_table_name => '&scoretable',
20:20:29  17  	  xform_view_name => 'svmc_apply_prep');
20:20:29  18  END;
20:20:29  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.25
20:20:30 SQL> 
20:20:30 SQL> -- Use same model_name used in score_gattn.sql
20:20:30 SQL> DEFINE model_name = 'forex14'
20:20:30 SQL> 
20:20:30 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
20:20:30 SQL> 
20:20:30 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
20:20:30   2  SELECT
20:20:30   3  prdate
20:20:30   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:20:30   5  ,sysdate
20:20:30   6  ,SUBSTR(prdate,1,3)pair
20:20:30   7  ,SUBSTR(prdate,4,19)ydate
20:20:30   8  FROM svmc_apply_prep
20:20:30   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
20:20:30 SQL> @aud_score1day_gattn.sql	2010-12-29 20:00:00
20:20:30 SQL> --
20:20:30 SQL> -- aud_score1day_gattn.sql
20:20:30 SQL> --
20:20:30 SQL> 
20:20:30 SQL> CREATE OR REPLACE VIEW sme AS
20:20:30   2  SELECT
20:20:30   3  'aud'||m.ydate prdate
20:20:30   4  ,NULL gattn
20:20:30   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:20:30   6  ,eur_g00
20:20:30   7  ,eur_g01
20:20:30   8  ,eur_g02
20:20:30   9  ,eur_g03
20:20:30  10  ,eur_g04
20:20:30  11  ,eur_g05
20:20:30  12  ,eur_g06
20:20:30  13  ,eur_g07
20:20:30  14  ,eur_g08
20:20:30  15  ,eur_g09
20:20:30  16  ,eur_g10
20:20:30  17  ,eur_g11
20:20:30  18  ,eur_g12
20:20:30  19  ,eur_g13
20:20:30  20  ,eur_g14
20:20:30  21  ,eur_g15
20:20:30  22  ,eur_g16
20:20:30  23  ,eur_g17
20:20:30  24  ,eur_g18
20:20:30  25  ,eur_g19
20:20:30  26  ,eur_g20
20:20:30  27  ,eur_g21
20:20:30  28  ,eur_g22
20:20:30  29  ,eur_g23
20:20:30  30  ,eur_g24
20:20:30  31  ,eur_g25
20:20:30  32  ,eur_g26
20:20:30  33  ,eur_g27
20:20:30  34  ,eur_g28
20:20:30  35  ,eur_g29
20:20:30  36  ,eur_g30
20:20:30  37  ,eur_g31
20:20:30  38  ,eur_g32
20:20:30  39  ,eur_g33
20:20:30  40  ,eur_g34
20:20:30  41  ,eur_g35
20:20:30  42  ,eur_g36
20:20:30  43  ,eur_g37
20:20:30  44  ,eur_g38
20:20:30  45  ,eur_g39
20:20:30  46  ,eur_g40
20:20:30  47  ,eur_g41
20:20:30  48  ,aud_g00
20:20:30  49  ,aud_g01
20:20:30  50  ,aud_g02
20:20:30  51  ,aud_g03
20:20:30  52  ,aud_g04
20:20:30  53  ,aud_g05
20:20:30  54  ,aud_g06
20:20:30  55  ,aud_g07
20:20:30  56  ,aud_g08
20:20:30  57  ,aud_g09
20:20:30  58  ,aud_g10
20:20:30  59  ,aud_g11
20:20:30  60  ,aud_g12
20:20:30  61  ,aud_g13
20:20:30  62  ,aud_g14
20:20:30  63  ,aud_g15
20:20:30  64  ,aud_g16
20:20:30  65  ,aud_g17
20:20:30  66  ,aud_g18
20:20:30  67  ,aud_g19
20:20:30  68  ,aud_g20
20:20:30  69  ,aud_g21
20:20:30  70  ,aud_g22
20:20:30  71  ,aud_g23
20:20:30  72  ,aud_g24
20:20:30  73  ,aud_g25
20:20:30  74  ,aud_g26
20:20:30  75  ,aud_g27
20:20:30  76  ,aud_g28
20:20:30  77  ,aud_g29
20:20:30  78  ,aud_g30
20:20:30  79  ,aud_g31
20:20:30  80  ,aud_g32
20:20:30  81  ,aud_g33
20:20:30  82  ,aud_g34
20:20:30  83  ,aud_g35
20:20:30  84  ,aud_g36
20:20:30  85  ,aud_g37
20:20:30  86  ,aud_g38
20:20:30  87  ,aud_g39
20:20:30  88  ,aud_g40
20:20:30  89  ,aud_g41
20:20:30  90  ,gbp_g00
20:20:30  91  ,gbp_g01
20:20:30  92  ,gbp_g02
20:20:30  93  ,gbp_g03
20:20:30  94  ,gbp_g04
20:20:30  95  ,gbp_g05
20:20:30  96  ,gbp_g06
20:20:30  97  ,gbp_g07
20:20:30  98  ,gbp_g08
20:20:30  99  ,gbp_g09
20:20:30 100  ,gbp_g10
20:20:30 101  ,gbp_g11
20:20:30 102  ,gbp_g12
20:20:30 103  ,gbp_g13
20:20:30 104  ,gbp_g14
20:20:30 105  ,gbp_g15
20:20:30 106  ,gbp_g16
20:20:30 107  ,gbp_g17
20:20:30 108  ,gbp_g18
20:20:30 109  ,gbp_g19
20:20:30 110  ,gbp_g20
20:20:30 111  ,gbp_g21
20:20:30 112  ,gbp_g22
20:20:30 113  ,gbp_g23
20:20:30 114  ,gbp_g24
20:20:30 115  ,gbp_g25
20:20:30 116  ,gbp_g26
20:20:30 117  ,gbp_g27
20:20:30 118  ,gbp_g28
20:20:30 119  ,gbp_g29
20:20:30 120  ,gbp_g30
20:20:30 121  ,gbp_g31
20:20:30 122  ,gbp_g32
20:20:30 123  ,gbp_g33
20:20:30 124  ,gbp_g34
20:20:30 125  ,gbp_g35
20:20:30 126  ,gbp_g36
20:20:30 127  ,gbp_g37
20:20:30 128  ,gbp_g38
20:20:30 129  ,gbp_g39
20:20:30 130  ,gbp_g40
20:20:30 131  ,gbp_g41
20:20:30 132  ,jpy_g00
20:20:30 133  ,jpy_g01
20:20:30 134  ,jpy_g02
20:20:30 135  ,jpy_g03
20:20:30 136  ,jpy_g04
20:20:30 137  ,jpy_g05
20:20:30 138  ,jpy_g06
20:20:30 139  ,jpy_g07
20:20:30 140  ,jpy_g08
20:20:30 141  ,jpy_g09
20:20:30 142  ,jpy_g10
20:20:30 143  ,jpy_g11
20:20:30 144  ,jpy_g12
20:20:30 145  ,jpy_g13
20:20:30 146  ,jpy_g14
20:20:30 147  ,jpy_g15
20:20:30 148  ,jpy_g16
20:20:30 149  ,jpy_g17
20:20:30 150  ,jpy_g18
20:20:30 151  ,jpy_g19
20:20:30 152  ,jpy_g20
20:20:30 153  ,jpy_g21
20:20:30 154  ,jpy_g22
20:20:30 155  ,jpy_g23
20:20:30 156  ,jpy_g24
20:20:30 157  ,jpy_g25
20:20:30 158  ,jpy_g26
20:20:30 159  ,jpy_g27
20:20:30 160  ,jpy_g28
20:20:30 161  ,jpy_g29
20:20:30 162  ,jpy_g30
20:20:30 163  ,jpy_g31
20:20:30 164  ,jpy_g32
20:20:30 165  ,jpy_g33
20:20:30 166  ,jpy_g34
20:20:30 167  ,jpy_g35
20:20:30 168  ,jpy_g36
20:20:30 169  ,jpy_g37
20:20:30 170  ,jpy_g38
20:20:30 171  ,jpy_g39
20:20:30 172  ,jpy_g40
20:20:30 173  ,jpy_g41
20:20:30 174  ,cad_g00
20:20:30 175  ,cad_g01
20:20:30 176  ,cad_g02
20:20:30 177  ,cad_g03
20:20:30 178  ,cad_g04
20:20:30 179  ,cad_g05
20:20:30 180  ,cad_g06
20:20:30 181  ,cad_g07
20:20:30 182  ,cad_g08
20:20:30 183  ,cad_g09
20:20:30 184  ,cad_g10
20:20:30 185  ,cad_g11
20:20:30 186  ,cad_g12
20:20:30 187  ,cad_g13
20:20:30 188  ,cad_g14
20:20:30 189  ,cad_g15
20:20:30 190  ,cad_g16
20:20:30 191  ,cad_g17
20:20:30 192  ,cad_g18
20:20:30 193  ,cad_g19
20:20:30 194  ,cad_g20
20:20:30 195  ,cad_g21
20:20:30 196  ,cad_g22
20:20:30 197  ,cad_g23
20:20:30 198  ,cad_g24
20:20:30 199  ,cad_g25
20:20:30 200  ,cad_g26
20:20:30 201  ,cad_g27
20:20:30 202  ,cad_g28
20:20:30 203  ,cad_g29
20:20:30 204  ,cad_g30
20:20:30 205  ,cad_g31
20:20:30 206  ,cad_g32
20:20:30 207  ,cad_g33
20:20:30 208  ,cad_g34
20:20:30 209  ,cad_g35
20:20:30 210  ,cad_g36
20:20:30 211  ,cad_g37
20:20:30 212  ,cad_g38
20:20:30 213  ,cad_g39
20:20:30 214  ,cad_g40
20:20:30 215  ,cad_g41
20:20:30 216  ,chf_g00
20:20:30 217  ,chf_g01
20:20:30 218  ,chf_g02
20:20:30 219  ,chf_g03
20:20:30 220  ,chf_g04
20:20:30 221  ,chf_g05
20:20:30 222  ,chf_g06
20:20:30 223  ,chf_g07
20:20:30 224  ,chf_g08
20:20:30 225  ,chf_g09
20:20:30 226  ,chf_g10
20:20:30 227  ,chf_g11
20:20:30 228  ,chf_g12
20:20:30 229  ,chf_g13
20:20:30 230  ,chf_g14
20:20:30 231  ,chf_g15
20:20:30 232  ,chf_g16
20:20:30 233  ,chf_g17
20:20:30 234  ,chf_g18
20:20:30 235  ,chf_g19
20:20:30 236  ,chf_g20
20:20:30 237  ,chf_g21
20:20:30 238  ,chf_g22
20:20:30 239  ,chf_g23
20:20:30 240  ,chf_g24
20:20:30 241  ,chf_g25
20:20:30 242  ,chf_g26
20:20:30 243  ,chf_g27
20:20:30 244  ,chf_g28
20:20:30 245  ,chf_g29
20:20:30 246  ,chf_g30
20:20:30 247  ,chf_g31
20:20:30 248  ,chf_g32
20:20:30 249  ,chf_g33
20:20:30 250  ,chf_g34
20:20:30 251  ,chf_g35
20:20:30 252  ,chf_g36
20:20:30 253  ,chf_g37
20:20:30 254  ,chf_g38
20:20:30 255  ,chf_g39
20:20:30 256  ,chf_g40
20:20:30 257  ,chf_g41
20:20:30 258  FROM aud_ms6 m
20:20:30 259  WHERE m.ydate = '&1'||' '||'&2'
20:20:30 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'20:00:00'

View created.

Elapsed: 00:00:00.12
20:20:31 SQL> 
20:20:31 SQL> -- rpt
20:20:31 SQL> -- We should see just 1 row:
20:20:31 SQL> 
20:20:31 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
20:20:31 SQL> 
20:20:31 SQL> -- Build the model:
20:20:31 SQL> CREATE OR REPLACE VIEW bme AS
20:20:31   2  SELECT
20:20:31   3  'aud'||m.ydate prdate
20:20:31   4  ,gattn
20:20:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:20:31   6  ,eur_g00
20:20:31   7  ,eur_g01
20:20:31   8  ,eur_g02
20:20:31   9  ,eur_g03
20:20:31  10  ,eur_g04
20:20:31  11  ,eur_g05
20:20:31  12  ,eur_g06
20:20:31  13  ,eur_g07
20:20:31  14  ,eur_g08
20:20:31  15  ,eur_g09
20:20:31  16  ,eur_g10
20:20:31  17  ,eur_g11
20:20:31  18  ,eur_g12
20:20:31  19  ,eur_g13
20:20:31  20  ,eur_g14
20:20:31  21  ,eur_g15
20:20:31  22  ,eur_g16
20:20:31  23  ,eur_g17
20:20:31  24  ,eur_g18
20:20:31  25  ,eur_g19
20:20:31  26  ,eur_g20
20:20:31  27  ,eur_g21
20:20:31  28  ,eur_g22
20:20:31  29  ,eur_g23
20:20:31  30  ,eur_g24
20:20:31  31  ,eur_g25
20:20:31  32  ,eur_g26
20:20:31  33  ,eur_g27
20:20:31  34  ,eur_g28
20:20:31  35  ,eur_g29
20:20:31  36  ,eur_g30
20:20:31  37  ,eur_g31
20:20:31  38  ,eur_g32
20:20:31  39  ,eur_g33
20:20:31  40  ,eur_g34
20:20:31  41  ,eur_g35
20:20:31  42  ,eur_g36
20:20:31  43  ,eur_g37
20:20:31  44  ,eur_g38
20:20:31  45  ,eur_g39
20:20:31  46  ,eur_g40
20:20:31  47  ,eur_g41
20:20:31  48  ,aud_g00
20:20:31  49  ,aud_g01
20:20:31  50  ,aud_g02
20:20:31  51  ,aud_g03
20:20:31  52  ,aud_g04
20:20:31  53  ,aud_g05
20:20:31  54  ,aud_g06
20:20:31  55  ,aud_g07
20:20:31  56  ,aud_g08
20:20:31  57  ,aud_g09
20:20:31  58  ,aud_g10
20:20:31  59  ,aud_g11
20:20:31  60  ,aud_g12
20:20:31  61  ,aud_g13
20:20:31  62  ,aud_g14
20:20:31  63  ,aud_g15
20:20:31  64  ,aud_g16
20:20:31  65  ,aud_g17
20:20:31  66  ,aud_g18
20:20:31  67  ,aud_g19
20:20:31  68  ,aud_g20
20:20:31  69  ,aud_g21
20:20:31  70  ,aud_g22
20:20:31  71  ,aud_g23
20:20:31  72  ,aud_g24
20:20:31  73  ,aud_g25
20:20:31  74  ,aud_g26
20:20:31  75  ,aud_g27
20:20:31  76  ,aud_g28
20:20:31  77  ,aud_g29
20:20:31  78  ,aud_g30
20:20:31  79  ,aud_g31
20:20:31  80  ,aud_g32
20:20:31  81  ,aud_g33
20:20:31  82  ,aud_g34
20:20:31  83  ,aud_g35
20:20:31  84  ,aud_g36
20:20:31  85  ,aud_g37
20:20:31  86  ,aud_g38
20:20:31  87  ,aud_g39
20:20:31  88  ,aud_g40
20:20:31  89  ,aud_g41
20:20:31  90  ,gbp_g00
20:20:31  91  ,gbp_g01
20:20:31  92  ,gbp_g02
20:20:31  93  ,gbp_g03
20:20:31  94  ,gbp_g04
20:20:31  95  ,gbp_g05
20:20:31  96  ,gbp_g06
20:20:31  97  ,gbp_g07
20:20:31  98  ,gbp_g08
20:20:31  99  ,gbp_g09
20:20:31 100  ,gbp_g10
20:20:31 101  ,gbp_g11
20:20:31 102  ,gbp_g12
20:20:31 103  ,gbp_g13
20:20:31 104  ,gbp_g14
20:20:31 105  ,gbp_g15
20:20:31 106  ,gbp_g16
20:20:31 107  ,gbp_g17
20:20:31 108  ,gbp_g18
20:20:31 109  ,gbp_g19
20:20:31 110  ,gbp_g20
20:20:31 111  ,gbp_g21
20:20:31 112  ,gbp_g22
20:20:31 113  ,gbp_g23
20:20:31 114  ,gbp_g24
20:20:31 115  ,gbp_g25
20:20:31 116  ,gbp_g26
20:20:31 117  ,gbp_g27
20:20:31 118  ,gbp_g28
20:20:31 119  ,gbp_g29
20:20:31 120  ,gbp_g30
20:20:31 121  ,gbp_g31
20:20:31 122  ,gbp_g32
20:20:31 123  ,gbp_g33
20:20:31 124  ,gbp_g34
20:20:31 125  ,gbp_g35
20:20:31 126  ,gbp_g36
20:20:31 127  ,gbp_g37
20:20:31 128  ,gbp_g38
20:20:31 129  ,gbp_g39
20:20:31 130  ,gbp_g40
20:20:31 131  ,gbp_g41
20:20:31 132  ,jpy_g00
20:20:31 133  ,jpy_g01
20:20:31 134  ,jpy_g02
20:20:31 135  ,jpy_g03
20:20:31 136  ,jpy_g04
20:20:31 137  ,jpy_g05
20:20:31 138  ,jpy_g06
20:20:31 139  ,jpy_g07
20:20:31 140  ,jpy_g08
20:20:31 141  ,jpy_g09
20:20:31 142  ,jpy_g10
20:20:31 143  ,jpy_g11
20:20:31 144  ,jpy_g12
20:20:31 145  ,jpy_g13
20:20:31 146  ,jpy_g14
20:20:31 147  ,jpy_g15
20:20:31 148  ,jpy_g16
20:20:31 149  ,jpy_g17
20:20:31 150  ,jpy_g18
20:20:31 151  ,jpy_g19
20:20:31 152  ,jpy_g20
20:20:31 153  ,jpy_g21
20:20:31 154  ,jpy_g22
20:20:31 155  ,jpy_g23
20:20:31 156  ,jpy_g24
20:20:31 157  ,jpy_g25
20:20:31 158  ,jpy_g26
20:20:31 159  ,jpy_g27
20:20:31 160  ,jpy_g28
20:20:31 161  ,jpy_g29
20:20:31 162  ,jpy_g30
20:20:31 163  ,jpy_g31
20:20:31 164  ,jpy_g32
20:20:31 165  ,jpy_g33
20:20:31 166  ,jpy_g34
20:20:31 167  ,jpy_g35
20:20:31 168  ,jpy_g36
20:20:31 169  ,jpy_g37
20:20:31 170  ,jpy_g38
20:20:31 171  ,jpy_g39
20:20:31 172  ,jpy_g40
20:20:31 173  ,jpy_g41
20:20:31 174  ,cad_g00
20:20:31 175  ,cad_g01
20:20:31 176  ,cad_g02
20:20:31 177  ,cad_g03
20:20:31 178  ,cad_g04
20:20:31 179  ,cad_g05
20:20:31 180  ,cad_g06
20:20:31 181  ,cad_g07
20:20:31 182  ,cad_g08
20:20:31 183  ,cad_g09
20:20:31 184  ,cad_g10
20:20:31 185  ,cad_g11
20:20:31 186  ,cad_g12
20:20:31 187  ,cad_g13
20:20:31 188  ,cad_g14
20:20:31 189  ,cad_g15
20:20:31 190  ,cad_g16
20:20:31 191  ,cad_g17
20:20:31 192  ,cad_g18
20:20:31 193  ,cad_g19
20:20:31 194  ,cad_g20
20:20:31 195  ,cad_g21
20:20:31 196  ,cad_g22
20:20:31 197  ,cad_g23
20:20:31 198  ,cad_g24
20:20:31 199  ,cad_g25
20:20:31 200  ,cad_g26
20:20:31 201  ,cad_g27
20:20:31 202  ,cad_g28
20:20:31 203  ,cad_g29
20:20:31 204  ,cad_g30
20:20:31 205  ,cad_g31
20:20:31 206  ,cad_g32
20:20:31 207  ,cad_g33
20:20:31 208  ,cad_g34
20:20:31 209  ,cad_g35
20:20:31 210  ,cad_g36
20:20:31 211  ,cad_g37
20:20:31 212  ,cad_g38
20:20:31 213  ,cad_g39
20:20:31 214  ,cad_g40
20:20:31 215  ,cad_g41
20:20:31 216  ,chf_g00
20:20:31 217  ,chf_g01
20:20:31 218  ,chf_g02
20:20:31 219  ,chf_g03
20:20:31 220  ,chf_g04
20:20:31 221  ,chf_g05
20:20:31 222  ,chf_g06
20:20:31 223  ,chf_g07
20:20:31 224  ,chf_g08
20:20:31 225  ,chf_g09
20:20:31 226  ,chf_g10
20:20:31 227  ,chf_g11
20:20:31 228  ,chf_g12
20:20:31 229  ,chf_g13
20:20:31 230  ,chf_g14
20:20:31 231  ,chf_g15
20:20:31 232  ,chf_g16
20:20:31 233  ,chf_g17
20:20:31 234  ,chf_g18
20:20:31 235  ,chf_g19
20:20:31 236  ,chf_g20
20:20:31 237  ,chf_g21
20:20:31 238  ,chf_g22
20:20:31 239  ,chf_g23
20:20:31 240  ,chf_g24
20:20:31 241  ,chf_g25
20:20:31 242  ,chf_g26
20:20:31 243  ,chf_g27
20:20:31 244  ,chf_g28
20:20:31 245  ,chf_g29
20:20:31 246  ,chf_g30
20:20:31 247  ,chf_g31
20:20:31 248  ,chf_g32
20:20:31 249  ,chf_g33
20:20:31 250  ,chf_g34
20:20:31 251  ,chf_g35
20:20:31 252  ,chf_g36
20:20:31 253  ,chf_g37
20:20:31 254  ,chf_g38
20:20:31 255  ,chf_g39
20:20:31 256  ,chf_g40
20:20:31 257  ,chf_g41
20:20:31 258  FROM aud_ms6 m
20:20:31 259  WHERE gattn IN('nup','up')
20:20:31 260  AND 1+m.ydate < '&1'||' '||'&2'
20:20:31 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'20:00:00'

View created.

Elapsed: 00:00:00.14
20:20:31 SQL> 
20:20:31 SQL> -- rpt
20:20:31 SQL> 
20:20:31 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12853
up	     6397

Elapsed: 00:00:00.04
20:20:31 SQL> 
20:20:31 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-28 19:55:00

Elapsed: 00:00:00.03
20:20:31 SQL> 
20:20:31 SQL> -- Now build model from bme and score sme
20:20:31 SQL> @score1gattn.sql
20:20:31 SQL> -- score1gattn.sql
20:20:31 SQL> 
20:20:31 SQL> -- Does the 1st SVM score
20:20:31 SQL> 
20:20:31 SQL> -- Fill up svmc_apply_prep
20:20:31 SQL> @score_gattn.sql
20:20:31 SQL> --
20:20:31 SQL> -- score_gattn.sql
20:20:31 SQL> --
20:20:31 SQL> 
20:20:31 SQL> -- usage: score_gattn.sql
20:20:31 SQL> 
20:20:31 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:20:31 SQL> 
20:20:31 SQL> DEFINE target	= 'gattn'
20:20:31 SQL> DEFINE model_name = 'forex14'
20:20:31 SQL> DEFINE bldtable	= 'bme'
20:20:31 SQL> DEFINE scoretable = 'sme'
20:20:31 SQL> DEFINE case_id	= 'prdate'
20:20:31 SQL> 
20:20:31 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:20:31 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:20:31 SQL> 
20:20:31 SQL> -- Builds an SVM model using pl/sql.
20:20:31 SQL> 
20:20:31 SQL> -----------------------------------------------------------------------
20:20:31 SQL> --			    BUILD THE MODEL
20:20:31 SQL> -----------------------------------------------------------------------
20:20:31 SQL> 
20:20:31 SQL> -- Cleanup old build data preparation objects for repeat runs
20:20:31 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
20:20:31 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:20:31 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
20:20:31 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
20:20:31 SQL> 
20:20:31 SQL> 
20:20:31 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:20:31 SQL> --
20:20:31 SQL> -- DROP	TABLE svmc_settings ;
20:20:31 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:20:31 SQL> -- DELETE svmc_settings;
20:20:31 SQL> 
20:20:31 SQL> -- The default classification algorithm is Naive Bayes. So override
20:20:31 SQL> -- this choice to SVM using a settings table.
20:20:31 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:20:31 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:20:31 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:20:31 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:20:31 SQL> -- models.
20:20:31 SQL> --
20:20:31 SQL> 
20:20:31 SQL> -- Do this once and then comment it out.
20:20:31 SQL> -- That makes script go faster.
20:20:31 SQL> -- BEGIN
20:20:31 SQL> -- -- Populate settings table
20:20:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:20:31 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:20:31 SQL> --
20:20:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:20:31 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:20:31 SQL> --
20:20:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:20:31 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:20:31 SQL> --   COMMIT;
20:20:31 SQL> -- END;
20:20:31 SQL> -- /
20:20:31 SQL> 
20:20:31 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
20:20:31 SQL> 
20:20:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:20:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:20:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:20:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:20:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:20:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:20:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:20:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:20:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:20:31 SQL> 
20:20:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:20:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:20:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:20:31 SQL> 
20:20:31 SQL> --------------------------------
20:20:31 SQL> -- PREPARE BUILD (TRAINING) DATA
20:20:31 SQL> --
20:20:31 SQL> 
20:20:31 SQL> -- 1. Missing Value treatment for all Predictors and
20:20:31 SQL> -- 2. Outlier Treatment and
20:20:31 SQL> -- 3. Normalization are performed below.
20:20:31 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:20:31 SQL> --    normalized here.
20:20:31 SQL> 
20:20:31 SQL> BEGIN
20:20:31   2  	-- Perform missing value treatment for all predictors
20:20:31   3  	-- create miss tables
20:20:31   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:20:31   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:20:31   6  
20:20:31   7  	-- populate miss tables
20:20:31   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:20:31   9  	  miss_table_name => 'svmc_miss_num',
20:20:31  10  	  data_table_name => '&bldtable',
20:20:31  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:20:31  12  
20:20:31  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:20:31  14  	  miss_table_name => 'svmc_miss_cat',
20:20:31  15  	  data_table_name => '&bldtable',
20:20:31  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:20:31  17  
20:20:31  18  	-- xform input data to replace missing values
20:20:31  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:20:31  20  	  miss_table_name => 'svmc_miss_num',
20:20:31  21  	  data_table_name => '&bldtable',
20:20:31  22  	  xform_view_name => 'xformed_build_miss_num');
20:20:31  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:20:31  24  	  miss_table_name => 'svmc_miss_cat',
20:20:31  25  	  data_table_name => '&bldtable',
20:20:31  26  	  xform_view_name => 'xformed_build_miss_cat');
20:20:31  27  
20:20:31  28  	-- Perform outlier treatment.
20:20:31  29  	-- create clip table
20:20:31  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:20:31  31  
20:20:31  32  	-- populate clip table
20:20:31  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:20:31  34  	  clip_table_name => 'svmc_clip',
20:20:31  35  	  data_table_name => '&bldtable',
20:20:31  36  	  tail_frac	  => 0.025,
20:20:31  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:20:31  38  
20:20:31  39  	-- xform input data to winsorized data
20:20:31  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:20:31  41  	  clip_table_name => 'svmc_clip',
20:20:31  42  	  data_table_name => '&bldtable',
20:20:31  43  	  xform_view_name => 'svmc_winsor');
20:20:31  44  
20:20:31  45  	-- create normalization table
20:20:31  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:20:31  47  
20:20:31  48  	-- populate normalization table based on winsorized data
20:20:31  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:20:31  50  	  norm_table_name => 'svmc_norm',
20:20:31  51  	  data_table_name => 'svmc_winsor',
20:20:31  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:20:31  53  
20:20:31  54  	-- normalize the original data
20:20:31  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:20:31  56  	  norm_table_name => 'svmc_norm',
20:20:31  57  	  data_table_name => '&bldtable',
20:20:31  58  	  xform_view_name => 'svmc_build_prep');
20:20:31  59  END;
20:20:31  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.93
20:20:49 SQL> 
20:20:49 SQL> ---------------------
20:20:49 SQL> -- CREATE A NEW MODEL
20:20:49 SQL> --
20:20:49 SQL> -- Cleanup old model with the same name for repeat runs
20:20:49 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:20:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:20:49   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
20:20:50 SQL> 
20:20:50 SQL> -- Build a new SVM Model
20:20:50 SQL> BEGIN
20:20:50   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:20:50   3  	  model_name	      => '&model_name',
20:20:50   4  	  mining_function     => dbms_data_mining.classification,
20:20:50   5  	  data_table_name     => 'svmc_build_prep',
20:20:50   6  	  case_id_column_name => '&case_id',
20:20:50   7  	  target_column_name  => '&target',
20:20:50   8  	  settings_table_name => 'svmc_settings');
20:20:50   9  END;
20:20:50  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.22
20:21:17 SQL> 
20:21:17 SQL> -----------------------------------------------------------------------
20:21:17 SQL> --			       APPLY/score THE MODEL
20:21:17 SQL> -----------------------------------------------------------------------
20:21:17 SQL> 
20:21:17 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:21:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:21:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:21:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:21:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:21:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:21:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:21:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:21:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:21:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
20:21:18 SQL> -----------------------
20:21:18 SQL> -- PREPARE SCORING DATA
20:21:18 SQL> --
20:21:18 SQL> -- If the data for model creation has been prepared, then the data
20:21:18 SQL> -- to be scored using the model must be prepared in the same manner
20:21:18 SQL> -- in order to obtain meaningful results.
20:21:18 SQL> --
20:21:18 SQL> -- 1. Missing Value treatment for all Predictors and
20:21:18 SQL> -- 2. Normalization
20:21:18 SQL> -- No outlier treatment will be performed during test and apply. The
20:21:18 SQL> -- normalization step is sufficient, since the normalization parameters
20:21:18 SQL> -- already capture the effects of outlier treatment done with build data.
20:21:18 SQL> --
20:21:18 SQL> BEGIN
20:21:18   2  	-- Xform Test data to replace missing values
20:21:18   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:21:18   4  	  miss_table_name => 'svmc_miss_num',
20:21:18   5  	  data_table_name => '&scoretable',
20:21:18   6  	  xform_view_name => 'xformed_apply_miss_num');
20:21:18   7  
20:21:18   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:21:18   9  	  miss_table_name => 'svmc_miss_cat',
20:21:18  10  	  data_table_name => '&scoretable',
20:21:18  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:21:18  12  
20:21:18  13  	-- Normalize the data to be scored
20:21:18  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:21:18  15  	  norm_table_name => 'svmc_norm',
20:21:18  16  	  data_table_name => '&scoretable',
20:21:18  17  	  xform_view_name => 'svmc_apply_prep');
20:21:18  18  END;
20:21:18  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.27
20:21:19 SQL> 
20:21:19 SQL> -- Use same model_name used in score_gattn.sql
20:21:19 SQL> DEFINE model_name = 'forex14'
20:21:19 SQL> 
20:21:19 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
20:21:19 SQL> 
20:21:19 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
20:21:19   2  SELECT
20:21:19   3  prdate
20:21:19   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:21:19   5  ,sysdate
20:21:19   6  ,SUBSTR(prdate,1,3)pair
20:21:19   7  ,SUBSTR(prdate,4,19)ydate
20:21:19   8  FROM svmc_apply_prep
20:21:19   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
20:21:19 SQL> @aud_score1day_gattn.sql	2010-12-29 20:05:00
20:21:19 SQL> --
20:21:19 SQL> -- aud_score1day_gattn.sql
20:21:19 SQL> --
20:21:19 SQL> 
20:21:19 SQL> CREATE OR REPLACE VIEW sme AS
20:21:19   2  SELECT
20:21:19   3  'aud'||m.ydate prdate
20:21:19   4  ,NULL gattn
20:21:19   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:21:19   6  ,eur_g00
20:21:19   7  ,eur_g01
20:21:19   8  ,eur_g02
20:21:19   9  ,eur_g03
20:21:19  10  ,eur_g04
20:21:19  11  ,eur_g05
20:21:19  12  ,eur_g06
20:21:19  13  ,eur_g07
20:21:19  14  ,eur_g08
20:21:19  15  ,eur_g09
20:21:19  16  ,eur_g10
20:21:19  17  ,eur_g11
20:21:19  18  ,eur_g12
20:21:19  19  ,eur_g13
20:21:19  20  ,eur_g14
20:21:19  21  ,eur_g15
20:21:19  22  ,eur_g16
20:21:19  23  ,eur_g17
20:21:19  24  ,eur_g18
20:21:19  25  ,eur_g19
20:21:19  26  ,eur_g20
20:21:19  27  ,eur_g21
20:21:19  28  ,eur_g22
20:21:19  29  ,eur_g23
20:21:19  30  ,eur_g24
20:21:19  31  ,eur_g25
20:21:19  32  ,eur_g26
20:21:19  33  ,eur_g27
20:21:19  34  ,eur_g28
20:21:19  35  ,eur_g29
20:21:19  36  ,eur_g30
20:21:19  37  ,eur_g31
20:21:19  38  ,eur_g32
20:21:19  39  ,eur_g33
20:21:19  40  ,eur_g34
20:21:19  41  ,eur_g35
20:21:19  42  ,eur_g36
20:21:19  43  ,eur_g37
20:21:19  44  ,eur_g38
20:21:19  45  ,eur_g39
20:21:19  46  ,eur_g40
20:21:19  47  ,eur_g41
20:21:19  48  ,aud_g00
20:21:19  49  ,aud_g01
20:21:19  50  ,aud_g02
20:21:19  51  ,aud_g03
20:21:19  52  ,aud_g04
20:21:19  53  ,aud_g05
20:21:19  54  ,aud_g06
20:21:19  55  ,aud_g07
20:21:19  56  ,aud_g08
20:21:19  57  ,aud_g09
20:21:19  58  ,aud_g10
20:21:19  59  ,aud_g11
20:21:19  60  ,aud_g12
20:21:19  61  ,aud_g13
20:21:19  62  ,aud_g14
20:21:19  63  ,aud_g15
20:21:19  64  ,aud_g16
20:21:19  65  ,aud_g17
20:21:19  66  ,aud_g18
20:21:19  67  ,aud_g19
20:21:19  68  ,aud_g20
20:21:19  69  ,aud_g21
20:21:19  70  ,aud_g22
20:21:19  71  ,aud_g23
20:21:19  72  ,aud_g24
20:21:19  73  ,aud_g25
20:21:19  74  ,aud_g26
20:21:19  75  ,aud_g27
20:21:19  76  ,aud_g28
20:21:19  77  ,aud_g29
20:21:19  78  ,aud_g30
20:21:19  79  ,aud_g31
20:21:19  80  ,aud_g32
20:21:19  81  ,aud_g33
20:21:19  82  ,aud_g34
20:21:19  83  ,aud_g35
20:21:19  84  ,aud_g36
20:21:19  85  ,aud_g37
20:21:19  86  ,aud_g38
20:21:19  87  ,aud_g39
20:21:19  88  ,aud_g40
20:21:19  89  ,aud_g41
20:21:19  90  ,gbp_g00
20:21:19  91  ,gbp_g01
20:21:19  92  ,gbp_g02
20:21:19  93  ,gbp_g03
20:21:19  94  ,gbp_g04
20:21:19  95  ,gbp_g05
20:21:19  96  ,gbp_g06
20:21:19  97  ,gbp_g07
20:21:19  98  ,gbp_g08
20:21:19  99  ,gbp_g09
20:21:19 100  ,gbp_g10
20:21:19 101  ,gbp_g11
20:21:19 102  ,gbp_g12
20:21:19 103  ,gbp_g13
20:21:19 104  ,gbp_g14
20:21:19 105  ,gbp_g15
20:21:19 106  ,gbp_g16
20:21:19 107  ,gbp_g17
20:21:19 108  ,gbp_g18
20:21:19 109  ,gbp_g19
20:21:19 110  ,gbp_g20
20:21:19 111  ,gbp_g21
20:21:19 112  ,gbp_g22
20:21:19 113  ,gbp_g23
20:21:19 114  ,gbp_g24
20:21:19 115  ,gbp_g25
20:21:19 116  ,gbp_g26
20:21:19 117  ,gbp_g27
20:21:19 118  ,gbp_g28
20:21:19 119  ,gbp_g29
20:21:19 120  ,gbp_g30
20:21:19 121  ,gbp_g31
20:21:19 122  ,gbp_g32
20:21:19 123  ,gbp_g33
20:21:19 124  ,gbp_g34
20:21:19 125  ,gbp_g35
20:21:19 126  ,gbp_g36
20:21:19 127  ,gbp_g37
20:21:19 128  ,gbp_g38
20:21:19 129  ,gbp_g39
20:21:19 130  ,gbp_g40
20:21:19 131  ,gbp_g41
20:21:19 132  ,jpy_g00
20:21:19 133  ,jpy_g01
20:21:19 134  ,jpy_g02
20:21:19 135  ,jpy_g03
20:21:19 136  ,jpy_g04
20:21:19 137  ,jpy_g05
20:21:19 138  ,jpy_g06
20:21:19 139  ,jpy_g07
20:21:19 140  ,jpy_g08
20:21:19 141  ,jpy_g09
20:21:19 142  ,jpy_g10
20:21:19 143  ,jpy_g11
20:21:19 144  ,jpy_g12
20:21:19 145  ,jpy_g13
20:21:19 146  ,jpy_g14
20:21:19 147  ,jpy_g15
20:21:19 148  ,jpy_g16
20:21:19 149  ,jpy_g17
20:21:19 150  ,jpy_g18
20:21:19 151  ,jpy_g19
20:21:19 152  ,jpy_g20
20:21:19 153  ,jpy_g21
20:21:19 154  ,jpy_g22
20:21:19 155  ,jpy_g23
20:21:19 156  ,jpy_g24
20:21:19 157  ,jpy_g25
20:21:19 158  ,jpy_g26
20:21:19 159  ,jpy_g27
20:21:19 160  ,jpy_g28
20:21:19 161  ,jpy_g29
20:21:19 162  ,jpy_g30
20:21:19 163  ,jpy_g31
20:21:19 164  ,jpy_g32
20:21:19 165  ,jpy_g33
20:21:19 166  ,jpy_g34
20:21:19 167  ,jpy_g35
20:21:19 168  ,jpy_g36
20:21:19 169  ,jpy_g37
20:21:19 170  ,jpy_g38
20:21:19 171  ,jpy_g39
20:21:19 172  ,jpy_g40
20:21:19 173  ,jpy_g41
20:21:19 174  ,cad_g00
20:21:19 175  ,cad_g01
20:21:19 176  ,cad_g02
20:21:19 177  ,cad_g03
20:21:19 178  ,cad_g04
20:21:19 179  ,cad_g05
20:21:19 180  ,cad_g06
20:21:19 181  ,cad_g07
20:21:19 182  ,cad_g08
20:21:19 183  ,cad_g09
20:21:19 184  ,cad_g10
20:21:19 185  ,cad_g11
20:21:19 186  ,cad_g12
20:21:19 187  ,cad_g13
20:21:19 188  ,cad_g14
20:21:19 189  ,cad_g15
20:21:19 190  ,cad_g16
20:21:19 191  ,cad_g17
20:21:19 192  ,cad_g18
20:21:19 193  ,cad_g19
20:21:19 194  ,cad_g20
20:21:19 195  ,cad_g21
20:21:19 196  ,cad_g22
20:21:19 197  ,cad_g23
20:21:19 198  ,cad_g24
20:21:19 199  ,cad_g25
20:21:19 200  ,cad_g26
20:21:19 201  ,cad_g27
20:21:19 202  ,cad_g28
20:21:19 203  ,cad_g29
20:21:19 204  ,cad_g30
20:21:19 205  ,cad_g31
20:21:19 206  ,cad_g32
20:21:19 207  ,cad_g33
20:21:19 208  ,cad_g34
20:21:19 209  ,cad_g35
20:21:19 210  ,cad_g36
20:21:19 211  ,cad_g37
20:21:19 212  ,cad_g38
20:21:19 213  ,cad_g39
20:21:19 214  ,cad_g40
20:21:19 215  ,cad_g41
20:21:19 216  ,chf_g00
20:21:19 217  ,chf_g01
20:21:19 218  ,chf_g02
20:21:19 219  ,chf_g03
20:21:19 220  ,chf_g04
20:21:19 221  ,chf_g05
20:21:19 222  ,chf_g06
20:21:19 223  ,chf_g07
20:21:19 224  ,chf_g08
20:21:19 225  ,chf_g09
20:21:19 226  ,chf_g10
20:21:19 227  ,chf_g11
20:21:19 228  ,chf_g12
20:21:19 229  ,chf_g13
20:21:19 230  ,chf_g14
20:21:19 231  ,chf_g15
20:21:19 232  ,chf_g16
20:21:19 233  ,chf_g17
20:21:19 234  ,chf_g18
20:21:19 235  ,chf_g19
20:21:19 236  ,chf_g20
20:21:19 237  ,chf_g21
20:21:19 238  ,chf_g22
20:21:19 239  ,chf_g23
20:21:19 240  ,chf_g24
20:21:19 241  ,chf_g25
20:21:19 242  ,chf_g26
20:21:19 243  ,chf_g27
20:21:19 244  ,chf_g28
20:21:19 245  ,chf_g29
20:21:19 246  ,chf_g30
20:21:19 247  ,chf_g31
20:21:19 248  ,chf_g32
20:21:19 249  ,chf_g33
20:21:19 250  ,chf_g34
20:21:19 251  ,chf_g35
20:21:19 252  ,chf_g36
20:21:19 253  ,chf_g37
20:21:19 254  ,chf_g38
20:21:19 255  ,chf_g39
20:21:19 256  ,chf_g40
20:21:19 257  ,chf_g41
20:21:19 258  FROM aud_ms6 m
20:21:19 259  WHERE m.ydate = '&1'||' '||'&2'
20:21:19 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-29'||' '||'20:05:00'

View created.

Elapsed: 00:00:00.12
20:21:19 SQL> 
20:21:19 SQL> -- rpt
20:21:19 SQL> -- We should see just 1 row:
20:21:19 SQL> 
20:21:19 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
20:21:19 SQL> 
20:21:19 SQL> -- Build the model:
20:21:19 SQL> CREATE OR REPLACE VIEW bme AS
20:21:19   2  SELECT
20:21:19   3  'aud'||m.ydate prdate
20:21:19   4  ,gattn
20:21:19   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
20:21:19   6  ,eur_g00
20:21:19   7  ,eur_g01
20:21:19   8  ,eur_g02
20:21:19   9  ,eur_g03
20:21:19  10  ,eur_g04
20:21:19  11  ,eur_g05
20:21:19  12  ,eur_g06
20:21:19  13  ,eur_g07
20:21:19  14  ,eur_g08
20:21:19  15  ,eur_g09
20:21:19  16  ,eur_g10
20:21:19  17  ,eur_g11
20:21:19  18  ,eur_g12
20:21:19  19  ,eur_g13
20:21:19  20  ,eur_g14
20:21:19  21  ,eur_g15
20:21:19  22  ,eur_g16
20:21:19  23  ,eur_g17
20:21:19  24  ,eur_g18
20:21:19  25  ,eur_g19
20:21:19  26  ,eur_g20
20:21:19  27  ,eur_g21
20:21:19  28  ,eur_g22
20:21:19  29  ,eur_g23
20:21:19  30  ,eur_g24
20:21:19  31  ,eur_g25
20:21:19  32  ,eur_g26
20:21:19  33  ,eur_g27
20:21:19  34  ,eur_g28
20:21:19  35  ,eur_g29
20:21:19  36  ,eur_g30
20:21:19  37  ,eur_g31
20:21:19  38  ,eur_g32
20:21:19  39  ,eur_g33
20:21:19  40  ,eur_g34
20:21:19  41  ,eur_g35
20:21:19  42  ,eur_g36
20:21:19  43  ,eur_g37
20:21:19  44  ,eur_g38
20:21:19  45  ,eur_g39
20:21:19  46  ,eur_g40
20:21:19  47  ,eur_g41
20:21:19  48  ,aud_g00
20:21:19  49  ,aud_g01
20:21:19  50  ,aud_g02
20:21:19  51  ,aud_g03
20:21:19  52  ,aud_g04
20:21:19  53  ,aud_g05
20:21:19  54  ,aud_g06
20:21:19  55  ,aud_g07
20:21:19  56  ,aud_g08
20:21:19  57  ,aud_g09
20:21:19  58  ,aud_g10
20:21:19  59  ,aud_g11
20:21:19  60  ,aud_g12
20:21:19  61  ,aud_g13
20:21:19  62  ,aud_g14
20:21:19  63  ,aud_g15
20:21:19  64  ,aud_g16
20:21:19  65  ,aud_g17
20:21:19  66  ,aud_g18
20:21:19  67  ,aud_g19
20:21:19  68  ,aud_g20
20:21:19  69  ,aud_g21
20:21:19  70  ,aud_g22
20:21:19  71  ,aud_g23
20:21:19  72  ,aud_g24
20:21:19  73  ,aud_g25
20:21:19  74  ,aud_g26
20:21:19  75  ,aud_g27
20:21:19  76  ,aud_g28
20:21:19  77  ,aud_g29
20:21:19  78  ,aud_g30
20:21:19  79  ,aud_g31
20:21:19  80  ,aud_g32
20:21:19  81  ,aud_g33
20:21:19  82  ,aud_g34
20:21:19  83  ,aud_g35
20:21:19  84  ,aud_g36
20:21:19  85  ,aud_g37
20:21:19  86  ,aud_g38
20:21:19  87  ,aud_g39
20:21:19  88  ,aud_g40
20:21:19  89  ,aud_g41
20:21:19  90  ,gbp_g00
20:21:19  91  ,gbp_g01
20:21:19  92  ,gbp_g02
20:21:19  93  ,gbp_g03
20:21:19  94  ,gbp_g04
20:21:19  95  ,gbp_g05
20:21:19  96  ,gbp_g06
20:21:19  97  ,gbp_g07
20:21:19  98  ,gbp_g08
20:21:19  99  ,gbp_g09
20:21:19 100  ,gbp_g10
20:21:19 101  ,gbp_g11
20:21:19 102  ,gbp_g12
20:21:19 103  ,gbp_g13
20:21:19 104  ,gbp_g14
20:21:19 105  ,gbp_g15
20:21:19 106  ,gbp_g16
20:21:19 107  ,gbp_g17
20:21:19 108  ,gbp_g18
20:21:19 109  ,gbp_g19
20:21:19 110  ,gbp_g20
20:21:19 111  ,gbp_g21
20:21:19 112  ,gbp_g22
20:21:19 113  ,gbp_g23
20:21:19 114  ,gbp_g24
20:21:19 115  ,gbp_g25
20:21:19 116  ,gbp_g26
20:21:19 117  ,gbp_g27
20:21:19 118  ,gbp_g28
20:21:19 119  ,gbp_g29
20:21:19 120  ,gbp_g30
20:21:19 121  ,gbp_g31
20:21:19 122  ,gbp_g32
20:21:19 123  ,gbp_g33
20:21:19 124  ,gbp_g34
20:21:19 125  ,gbp_g35
20:21:19 126  ,gbp_g36
20:21:19 127  ,gbp_g37
20:21:19 128  ,gbp_g38
20:21:19 129  ,gbp_g39
20:21:19 130  ,gbp_g40
20:21:19 131  ,gbp_g41
20:21:19 132  ,jpy_g00
20:21:19 133  ,jpy_g01
20:21:19 134  ,jpy_g02
20:21:19 135  ,jpy_g03
20:21:19 136  ,jpy_g04
20:21:19 137  ,jpy_g05
20:21:19 138  ,jpy_g06
20:21:19 139  ,jpy_g07
20:21:19 140  ,jpy_g08
20:21:19 141  ,jpy_g09
20:21:19 142  ,jpy_g10
20:21:19 143  ,jpy_g11
20:21:19 144  ,jpy_g12
20:21:19 145  ,jpy_g13
20:21:19 146  ,jpy_g14
20:21:19 147  ,jpy_g15
20:21:19 148  ,jpy_g16
20:21:19 149  ,jpy_g17
20:21:19 150  ,jpy_g18
20:21:19 151  ,jpy_g19
20:21:19 152  ,jpy_g20
20:21:19 153  ,jpy_g21
20:21:19 154  ,jpy_g22
20:21:19 155  ,jpy_g23
20:21:19 156  ,jpy_g24
20:21:19 157  ,jpy_g25
20:21:19 158  ,jpy_g26
20:21:19 159  ,jpy_g27
20:21:19 160  ,jpy_g28
20:21:19 161  ,jpy_g29
20:21:19 162  ,jpy_g30
20:21:19 163  ,jpy_g31
20:21:19 164  ,jpy_g32
20:21:19 165  ,jpy_g33
20:21:19 166  ,jpy_g34
20:21:19 167  ,jpy_g35
20:21:19 168  ,jpy_g36
20:21:19 169  ,jpy_g37
20:21:19 170  ,jpy_g38
20:21:19 171  ,jpy_g39
20:21:19 172  ,jpy_g40
20:21:19 173  ,jpy_g41
20:21:19 174  ,cad_g00
20:21:19 175  ,cad_g01
20:21:19 176  ,cad_g02
20:21:19 177  ,cad_g03
20:21:19 178  ,cad_g04
20:21:19 179  ,cad_g05
20:21:19 180  ,cad_g06
20:21:19 181  ,cad_g07
20:21:19 182  ,cad_g08
20:21:19 183  ,cad_g09
20:21:19 184  ,cad_g10
20:21:19 185  ,cad_g11
20:21:19 186  ,cad_g12
20:21:19 187  ,cad_g13
20:21:19 188  ,cad_g14
20:21:19 189  ,cad_g15
20:21:19 190  ,cad_g16
20:21:19 191  ,cad_g17
20:21:19 192  ,cad_g18
20:21:19 193  ,cad_g19
20:21:19 194  ,cad_g20
20:21:19 195  ,cad_g21
20:21:19 196  ,cad_g22
20:21:19 197  ,cad_g23
20:21:19 198  ,cad_g24
20:21:19 199  ,cad_g25
20:21:19 200  ,cad_g26
20:21:19 201  ,cad_g27
20:21:19 202  ,cad_g28
20:21:19 203  ,cad_g29
20:21:19 204  ,cad_g30
20:21:19 205  ,cad_g31
20:21:19 206  ,cad_g32
20:21:19 207  ,cad_g33
20:21:19 208  ,cad_g34
20:21:19 209  ,cad_g35
20:21:19 210  ,cad_g36
20:21:19 211  ,cad_g37
20:21:19 212  ,cad_g38
20:21:19 213  ,cad_g39
20:21:19 214  ,cad_g40
20:21:19 215  ,cad_g41
20:21:19 216  ,chf_g00
20:21:19 217  ,chf_g01
20:21:19 218  ,chf_g02
20:21:19 219  ,chf_g03
20:21:19 220  ,chf_g04
20:21:19 221  ,chf_g05
20:21:19 222  ,chf_g06
20:21:19 223  ,chf_g07
20:21:19 224  ,chf_g08
20:21:19 225  ,chf_g09
20:21:19 226  ,chf_g10
20:21:19 227  ,chf_g11
20:21:19 228  ,chf_g12
20:21:19 229  ,chf_g13
20:21:19 230  ,chf_g14
20:21:19 231  ,chf_g15
20:21:19 232  ,chf_g16
20:21:19 233  ,chf_g17
20:21:19 234  ,chf_g18
20:21:19 235  ,chf_g19
20:21:19 236  ,chf_g20
20:21:19 237  ,chf_g21
20:21:19 238  ,chf_g22
20:21:19 239  ,chf_g23
20:21:19 240  ,chf_g24
20:21:19 241  ,chf_g25
20:21:19 242  ,chf_g26
20:21:19 243  ,chf_g27
20:21:19 244  ,chf_g28
20:21:19 245  ,chf_g29
20:21:19 246  ,chf_g30
20:21:19 247  ,chf_g31
20:21:19 248  ,chf_g32
20:21:19 249  ,chf_g33
20:21:19 250  ,chf_g34
20:21:19 251  ,chf_g35
20:21:19 252  ,chf_g36
20:21:19 253  ,chf_g37
20:21:19 254  ,chf_g38
20:21:19 255  ,chf_g39
20:21:19 256  ,chf_g40
20:21:19 257  ,chf_g41
20:21:19 258  FROM aud_ms6 m
20:21:19 259  WHERE gattn IN('nup','up')
20:21:19 260  AND 1+m.ydate < '&1'||' '||'&2'
20:21:19 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-29'||' '||'20:05:00'

View created.

Elapsed: 00:00:00.12
20:21:19 SQL> 
20:21:19 SQL> -- rpt
20:21:19 SQL> 
20:21:19 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12854
up	     6397

Elapsed: 00:00:00.05
20:21:19 SQL> 
20:21:19 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-28 20:00:00

Elapsed: 00:00:00.03
20:21:19 SQL> 
20:21:19 SQL> -- Now build model from bme and score sme
20:21:19 SQL> @score1gattn.sql
20:21:19 SQL> -- score1gattn.sql
20:21:19 SQL> 
20:21:19 SQL> -- Does the 1st SVM score
20:21:19 SQL> 
20:21:19 SQL> -- Fill up svmc_apply_prep
20:21:19 SQL> @score_gattn.sql
20:21:19 SQL> --
20:21:19 SQL> -- score_gattn.sql
20:21:19 SQL> --
20:21:19 SQL> 
20:21:19 SQL> -- usage: score_gattn.sql
20:21:19 SQL> 
20:21:19 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
20:21:19 SQL> 
20:21:19 SQL> DEFINE target	= 'gattn'
20:21:19 SQL> DEFINE model_name = 'forex14'
20:21:19 SQL> DEFINE bldtable	= 'bme'
20:21:19 SQL> DEFINE scoretable = 'sme'
20:21:19 SQL> DEFINE case_id	= 'prdate'
20:21:19 SQL> 
20:21:19 SQL> -- Define a variable to help me exclude some columns from some data mining calls
20:21:19 SQL> DEFINE exclude1 = "'&target','&case_id'"
20:21:19 SQL> 
20:21:19 SQL> -- Builds an SVM model using pl/sql.
20:21:19 SQL> 
20:21:19 SQL> -----------------------------------------------------------------------
20:21:19 SQL> --			    BUILD THE MODEL
20:21:19 SQL> -----------------------------------------------------------------------
20:21:19 SQL> 
20:21:19 SQL> -- Cleanup old build data preparation objects for repeat runs
20:21:19 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
20:21:19 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
20:21:19 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
20:21:19 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
20:21:19 SQL> 
20:21:19 SQL> 
20:21:19 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
20:21:19 SQL> --
20:21:19 SQL> -- DROP	TABLE svmc_settings ;
20:21:19 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
20:21:19 SQL> -- DELETE svmc_settings;
20:21:19 SQL> 
20:21:19 SQL> -- The default classification algorithm is Naive Bayes. So override
20:21:19 SQL> -- this choice to SVM using a settings table.
20:21:19 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
20:21:19 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
20:21:19 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
20:21:19 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
20:21:19 SQL> -- models.
20:21:19 SQL> --
20:21:19 SQL> 
20:21:19 SQL> -- Do this once and then comment it out.
20:21:19 SQL> -- That makes script go faster.
20:21:19 SQL> -- BEGIN
20:21:19 SQL> -- -- Populate settings table
20:21:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:21:19 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
20:21:19 SQL> --
20:21:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:21:19 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
20:21:19 SQL> --
20:21:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
20:21:19 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
20:21:19 SQL> --   COMMIT;
20:21:19 SQL> -- END;
20:21:19 SQL> -- /
20:21:19 SQL> 
20:21:19 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
20:21:19 SQL> 
20:21:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
20:21:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:21:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
20:21:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
20:21:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:21:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:21:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
20:21:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:21:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:21:20 SQL> 
20:21:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
20:21:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:21:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
20:21:20 SQL> 
20:21:20 SQL> --------------------------------
20:21:20 SQL> -- PREPARE BUILD (TRAINING) DATA
20:21:20 SQL> --
20:21:20 SQL> 
20:21:20 SQL> -- 1. Missing Value treatment for all Predictors and
20:21:20 SQL> -- 2. Outlier Treatment and
20:21:20 SQL> -- 3. Normalization are performed below.
20:21:20 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
20:21:20 SQL> --    normalized here.
20:21:20 SQL> 
20:21:20 SQL> BEGIN
20:21:20   2  	-- Perform missing value treatment for all predictors
20:21:20   3  	-- create miss tables
20:21:20   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
20:21:20   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
20:21:20   6  
20:21:20   7  	-- populate miss tables
20:21:20   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
20:21:20   9  	  miss_table_name => 'svmc_miss_num',
20:21:20  10  	  data_table_name => '&bldtable',
20:21:20  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:21:20  12  
20:21:20  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
20:21:20  14  	  miss_table_name => 'svmc_miss_cat',
20:21:20  15  	  data_table_name => '&bldtable',
20:21:20  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:21:20  17  
20:21:20  18  	-- xform input data to replace missing values
20:21:20  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:21:20  20  	  miss_table_name => 'svmc_miss_num',
20:21:20  21  	  data_table_name => '&bldtable',
20:21:20  22  	  xform_view_name => 'xformed_build_miss_num');
20:21:20  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:21:20  24  	  miss_table_name => 'svmc_miss_cat',
20:21:20  25  	  data_table_name => '&bldtable',
20:21:20  26  	  xform_view_name => 'xformed_build_miss_cat');
20:21:20  27  
20:21:20  28  	-- Perform outlier treatment.
20:21:20  29  	-- create clip table
20:21:20  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
20:21:20  31  
20:21:20  32  	-- populate clip table
20:21:20  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
20:21:20  34  	  clip_table_name => 'svmc_clip',
20:21:20  35  	  data_table_name => '&bldtable',
20:21:20  36  	  tail_frac	  => 0.025,
20:21:20  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:21:20  38  
20:21:20  39  	-- xform input data to winsorized data
20:21:20  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
20:21:20  41  	  clip_table_name => 'svmc_clip',
20:21:20  42  	  data_table_name => '&bldtable',
20:21:20  43  	  xform_view_name => 'svmc_winsor');
20:21:20  44  
20:21:20  45  	-- create normalization table
20:21:20  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
20:21:20  47  
20:21:20  48  	-- populate normalization table based on winsorized data
20:21:20  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
20:21:20  50  	  norm_table_name => 'svmc_norm',
20:21:20  51  	  data_table_name => 'svmc_winsor',
20:21:20  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
20:21:20  53  
20:21:20  54  	-- normalize the original data
20:21:20  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:21:20  56  	  norm_table_name => 'svmc_norm',
20:21:20  57  	  data_table_name => '&bldtable',
20:21:20  58  	  xform_view_name => 'svmc_build_prep');
20:21:20  59  END;
20:21:20  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.17
20:21:38 SQL> 
20:21:38 SQL> ---------------------
20:21:38 SQL> -- CREATE A NEW MODEL
20:21:38 SQL> --
20:21:38 SQL> -- Cleanup old model with the same name for repeat runs
20:21:38 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
20:21:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:21:38   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.02
20:21:39 SQL> 
20:21:39 SQL> -- Build a new SVM Model
20:21:39 SQL> BEGIN
20:21:39   2  	DBMS_DATA_MINING.CREATE_MODEL(
20:21:39   3  	  model_name	      => '&model_name',
20:21:39   4  	  mining_function     => dbms_data_mining.classification,
20:21:39   5  	  data_table_name     => 'svmc_build_prep',
20:21:39   6  	  case_id_column_name => '&case_id',
20:21:39   7  	  target_column_name  => '&target',
20:21:39   8  	  settings_table_name => 'svmc_settings');
20:21:39   9  END;
20:21:39  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.23
20:22:06 SQL> 
20:22:06 SQL> -----------------------------------------------------------------------
20:22:06 SQL> --			       APPLY/score THE MODEL
20:22:06 SQL> -----------------------------------------------------------------------
20:22:06 SQL> 
20:22:06 SQL> -- Cleanup old scoring data preparation objects for repeat runs
20:22:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
20:22:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:22:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:22:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
20:22:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:22:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
20:22:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
20:22:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
20:22:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
20:22:06 SQL> -----------------------
20:22:06 SQL> -- PREPARE SCORING DATA
20:22:06 SQL> --
20:22:06 SQL> -- If the data for model creation has been prepared, then the data
20:22:06 SQL> -- to be scored using the model must be prepared in the same manner
20:22:06 SQL> -- in order to obtain meaningful results.
20:22:06 SQL> --
20:22:06 SQL> -- 1. Missing Value treatment for all Predictors and
20:22:06 SQL> -- 2. Normalization
20:22:06 SQL> -- No outlier treatment will be performed during test and apply. The
20:22:06 SQL> -- normalization step is sufficient, since the normalization parameters
20:22:06 SQL> -- already capture the effects of outlier treatment done with build data.
20:22:06 SQL> --
20:22:06 SQL> BEGIN
20:22:06   2  	-- Xform Test data to replace missing values
20:22:06   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
20:22:06   4  	  miss_table_name => 'svmc_miss_num',
20:22:06   5  	  data_table_name => '&scoretable',
20:22:06   6  	  xform_view_name => 'xformed_apply_miss_num');
20:22:06   7  
20:22:06   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
20:22:06   9  	  miss_table_name => 'svmc_miss_cat',
20:22:06  10  	  data_table_name => '&scoretable',
20:22:06  11  	  xform_view_name => 'xformed_apply_miss_cat');
20:22:06  12  
20:22:06  13  	-- Normalize the data to be scored
20:22:06  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
20:22:06  15  	  norm_table_name => 'svmc_norm',
20:22:06  16  	  data_table_name => '&scoretable',
20:22:06  17  	  xform_view_name => 'svmc_apply_prep');
20:22:06  18  END;
20:22:06  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.30
20:22:08 SQL> 
20:22:08 SQL> -- Use same model_name used in score_gattn.sql
20:22:08 SQL> DEFINE model_name = 'forex14'
20:22:08 SQL> 
20:22:08 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
20:22:08 SQL> 
20:22:08 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
20:22:08   2  SELECT
20:22:08   3  prdate
20:22:08   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
20:22:08   5  ,sysdate
20:22:08   6  ,SUBSTR(prdate,1,3)pair
20:22:08   7  ,SUBSTR(prdate,4,19)ydate
20:22:08   8  FROM svmc_apply_prep
20:22:08   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
20:22:08 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
