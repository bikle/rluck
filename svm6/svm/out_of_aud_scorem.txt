
SQL*Plus: Release 11.2.0.1.0 Production on Thu Jan 6 19:14:22 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

19:14:22 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
19:14:22 SQL> 19:14:22 SQL> @aud_score1day.sql  2011-01-06 18:50:00
19:14:22 SQL> --
19:14:22 SQL> -- aud_score1day.sql
19:14:22 SQL> --
19:14:22 SQL> 
19:14:22 SQL> CREATE OR REPLACE VIEW sme AS
19:14:22   2  SELECT
19:14:22   3  'aud'||m.ydate prdate
19:14:22   4  ,NULL gatt
19:14:22   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:14:22   6  ,eur_g00
19:14:22   7  ,eur_g01
19:14:22   8  ,eur_g02
19:14:22   9  ,eur_g03
19:14:22  10  ,eur_g04
19:14:22  11  ,eur_g05
19:14:22  12  ,eur_g06
19:14:22  13  ,eur_g07
19:14:22  14  ,eur_g08
19:14:22  15  ,eur_g09
19:14:22  16  ,eur_g10
19:14:22  17  ,eur_g11
19:14:22  18  ,eur_g12
19:14:22  19  ,eur_g13
19:14:22  20  ,eur_g14
19:14:22  21  ,eur_g15
19:14:22  22  ,eur_g16
19:14:22  23  ,eur_g17
19:14:22  24  ,eur_g18
19:14:22  25  ,eur_g19
19:14:22  26  ,eur_g20
19:14:22  27  ,eur_g21
19:14:22  28  ,eur_g22
19:14:22  29  ,eur_g23
19:14:22  30  ,eur_g24
19:14:22  31  ,eur_g25
19:14:22  32  ,eur_g26
19:14:22  33  ,eur_g27
19:14:22  34  ,eur_g28
19:14:22  35  ,eur_g29
19:14:22  36  ,eur_g30
19:14:22  37  ,eur_g31
19:14:22  38  ,eur_g32
19:14:22  39  ,eur_g33
19:14:22  40  ,eur_g34
19:14:22  41  ,eur_g35
19:14:22  42  ,eur_g36
19:14:22  43  ,eur_g37
19:14:22  44  ,eur_g38
19:14:22  45  ,eur_g39
19:14:22  46  ,eur_g40
19:14:22  47  ,eur_g41
19:14:22  48  ,aud_g00
19:14:22  49  ,aud_g01
19:14:22  50  ,aud_g02
19:14:22  51  ,aud_g03
19:14:22  52  ,aud_g04
19:14:22  53  ,aud_g05
19:14:22  54  ,aud_g06
19:14:22  55  ,aud_g07
19:14:22  56  ,aud_g08
19:14:22  57  ,aud_g09
19:14:22  58  ,aud_g10
19:14:22  59  ,aud_g11
19:14:22  60  ,aud_g12
19:14:22  61  ,aud_g13
19:14:22  62  ,aud_g14
19:14:22  63  ,aud_g15
19:14:22  64  ,aud_g16
19:14:22  65  ,aud_g17
19:14:22  66  ,aud_g18
19:14:22  67  ,aud_g19
19:14:22  68  ,aud_g20
19:14:22  69  ,aud_g21
19:14:22  70  ,aud_g22
19:14:22  71  ,aud_g23
19:14:22  72  ,aud_g24
19:14:22  73  ,aud_g25
19:14:22  74  ,aud_g26
19:14:22  75  ,aud_g27
19:14:22  76  ,aud_g28
19:14:22  77  ,aud_g29
19:14:22  78  ,aud_g30
19:14:22  79  ,aud_g31
19:14:22  80  ,aud_g32
19:14:22  81  ,aud_g33
19:14:22  82  ,aud_g34
19:14:22  83  ,aud_g35
19:14:22  84  ,aud_g36
19:14:22  85  ,aud_g37
19:14:22  86  ,aud_g38
19:14:22  87  ,aud_g39
19:14:22  88  ,aud_g40
19:14:22  89  ,aud_g41
19:14:22  90  ,gbp_g00
19:14:22  91  ,gbp_g01
19:14:22  92  ,gbp_g02
19:14:22  93  ,gbp_g03
19:14:22  94  ,gbp_g04
19:14:22  95  ,gbp_g05
19:14:22  96  ,gbp_g06
19:14:22  97  ,gbp_g07
19:14:22  98  ,gbp_g08
19:14:22  99  ,gbp_g09
19:14:22 100  ,gbp_g10
19:14:22 101  ,gbp_g11
19:14:22 102  ,gbp_g12
19:14:22 103  ,gbp_g13
19:14:22 104  ,gbp_g14
19:14:22 105  ,gbp_g15
19:14:22 106  ,gbp_g16
19:14:22 107  ,gbp_g17
19:14:22 108  ,gbp_g18
19:14:22 109  ,gbp_g19
19:14:22 110  ,gbp_g20
19:14:22 111  ,gbp_g21
19:14:22 112  ,gbp_g22
19:14:22 113  ,gbp_g23
19:14:22 114  ,gbp_g24
19:14:22 115  ,gbp_g25
19:14:22 116  ,gbp_g26
19:14:22 117  ,gbp_g27
19:14:22 118  ,gbp_g28
19:14:22 119  ,gbp_g29
19:14:22 120  ,gbp_g30
19:14:22 121  ,gbp_g31
19:14:22 122  ,gbp_g32
19:14:22 123  ,gbp_g33
19:14:22 124  ,gbp_g34
19:14:22 125  ,gbp_g35
19:14:22 126  ,gbp_g36
19:14:22 127  ,gbp_g37
19:14:22 128  ,gbp_g38
19:14:22 129  ,gbp_g39
19:14:22 130  ,gbp_g40
19:14:22 131  ,gbp_g41
19:14:22 132  ,jpy_g00
19:14:22 133  ,jpy_g01
19:14:22 134  ,jpy_g02
19:14:22 135  ,jpy_g03
19:14:22 136  ,jpy_g04
19:14:22 137  ,jpy_g05
19:14:22 138  ,jpy_g06
19:14:22 139  ,jpy_g07
19:14:22 140  ,jpy_g08
19:14:22 141  ,jpy_g09
19:14:22 142  ,jpy_g10
19:14:22 143  ,jpy_g11
19:14:22 144  ,jpy_g12
19:14:22 145  ,jpy_g13
19:14:22 146  ,jpy_g14
19:14:22 147  ,jpy_g15
19:14:22 148  ,jpy_g16
19:14:22 149  ,jpy_g17
19:14:22 150  ,jpy_g18
19:14:22 151  ,jpy_g19
19:14:22 152  ,jpy_g20
19:14:22 153  ,jpy_g21
19:14:22 154  ,jpy_g22
19:14:22 155  ,jpy_g23
19:14:22 156  ,jpy_g24
19:14:22 157  ,jpy_g25
19:14:22 158  ,jpy_g26
19:14:22 159  ,jpy_g27
19:14:22 160  ,jpy_g28
19:14:22 161  ,jpy_g29
19:14:22 162  ,jpy_g30
19:14:22 163  ,jpy_g31
19:14:22 164  ,jpy_g32
19:14:22 165  ,jpy_g33
19:14:22 166  ,jpy_g34
19:14:22 167  ,jpy_g35
19:14:22 168  ,jpy_g36
19:14:22 169  ,jpy_g37
19:14:22 170  ,jpy_g38
19:14:22 171  ,jpy_g39
19:14:22 172  ,jpy_g40
19:14:22 173  ,jpy_g41
19:14:22 174  ,cad_g00
19:14:22 175  ,cad_g01
19:14:22 176  ,cad_g02
19:14:22 177  ,cad_g03
19:14:22 178  ,cad_g04
19:14:22 179  ,cad_g05
19:14:22 180  ,cad_g06
19:14:22 181  ,cad_g07
19:14:22 182  ,cad_g08
19:14:22 183  ,cad_g09
19:14:22 184  ,cad_g10
19:14:22 185  ,cad_g11
19:14:22 186  ,cad_g12
19:14:22 187  ,cad_g13
19:14:22 188  ,cad_g14
19:14:22 189  ,cad_g15
19:14:22 190  ,cad_g16
19:14:22 191  ,cad_g17
19:14:22 192  ,cad_g18
19:14:22 193  ,cad_g19
19:14:22 194  ,cad_g20
19:14:22 195  ,cad_g21
19:14:22 196  ,cad_g22
19:14:22 197  ,cad_g23
19:14:22 198  ,cad_g24
19:14:22 199  ,cad_g25
19:14:22 200  ,cad_g26
19:14:22 201  ,cad_g27
19:14:22 202  ,cad_g28
19:14:22 203  ,cad_g29
19:14:22 204  ,cad_g30
19:14:22 205  ,cad_g31
19:14:22 206  ,cad_g32
19:14:22 207  ,cad_g33
19:14:22 208  ,cad_g34
19:14:22 209  ,cad_g35
19:14:22 210  ,cad_g36
19:14:22 211  ,cad_g37
19:14:22 212  ,cad_g38
19:14:22 213  ,cad_g39
19:14:22 214  ,cad_g40
19:14:22 215  ,cad_g41
19:14:22 216  ,chf_g00
19:14:22 217  ,chf_g01
19:14:22 218  ,chf_g02
19:14:22 219  ,chf_g03
19:14:22 220  ,chf_g04
19:14:22 221  ,chf_g05
19:14:22 222  ,chf_g06
19:14:22 223  ,chf_g07
19:14:22 224  ,chf_g08
19:14:22 225  ,chf_g09
19:14:22 226  ,chf_g10
19:14:22 227  ,chf_g11
19:14:22 228  ,chf_g12
19:14:22 229  ,chf_g13
19:14:22 230  ,chf_g14
19:14:22 231  ,chf_g15
19:14:22 232  ,chf_g16
19:14:22 233  ,chf_g17
19:14:22 234  ,chf_g18
19:14:22 235  ,chf_g19
19:14:22 236  ,chf_g20
19:14:22 237  ,chf_g21
19:14:22 238  ,chf_g22
19:14:22 239  ,chf_g23
19:14:22 240  ,chf_g24
19:14:22 241  ,chf_g25
19:14:22 242  ,chf_g26
19:14:22 243  ,chf_g27
19:14:22 244  ,chf_g28
19:14:22 245  ,chf_g29
19:14:22 246  ,chf_g30
19:14:22 247  ,chf_g31
19:14:22 248  ,chf_g32
19:14:22 249  ,chf_g33
19:14:22 250  ,chf_g34
19:14:22 251  ,chf_g35
19:14:22 252  ,chf_g36
19:14:22 253  ,chf_g37
19:14:22 254  ,chf_g38
19:14:22 255  ,chf_g39
19:14:22 256  ,chf_g40
19:14:22 257  ,chf_g41
19:14:22 258  FROM aud_ms6 m
19:14:22 259  WHERE m.ydate = '&1'||' '||'&2'
19:14:22 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'18:50:00'

View created.

Elapsed: 00:00:00.13
19:14:22 SQL> 
19:14:22 SQL> -- rpt
19:14:22 SQL> -- We should see just 1 row:
19:14:22 SQL> 
19:14:22 SQL> SELECT COUNT(prdate) FROM sme
19:14:22   2  
19:14:22 SQL> -- Build the model:
19:14:22 SQL> CREATE OR REPLACE VIEW bme AS
19:14:22   2  SELECT
19:14:22   3  'aud'||m.ydate prdate
19:14:22   4  ,gatt
19:14:22   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:14:22   6  ,eur_g00
19:14:22   7  ,eur_g01
19:14:22   8  ,eur_g02
19:14:22   9  ,eur_g03
19:14:22  10  ,eur_g04
19:14:22  11  ,eur_g05
19:14:22  12  ,eur_g06
19:14:22  13  ,eur_g07
19:14:22  14  ,eur_g08
19:14:22  15  ,eur_g09
19:14:22  16  ,eur_g10
19:14:22  17  ,eur_g11
19:14:22  18  ,eur_g12
19:14:22  19  ,eur_g13
19:14:22  20  ,eur_g14
19:14:22  21  ,eur_g15
19:14:22  22  ,eur_g16
19:14:22  23  ,eur_g17
19:14:22  24  ,eur_g18
19:14:22  25  ,eur_g19
19:14:22  26  ,eur_g20
19:14:22  27  ,eur_g21
19:14:22  28  ,eur_g22
19:14:22  29  ,eur_g23
19:14:22  30  ,eur_g24
19:14:22  31  ,eur_g25
19:14:22  32  ,eur_g26
19:14:22  33  ,eur_g27
19:14:22  34  ,eur_g28
19:14:22  35  ,eur_g29
19:14:22  36  ,eur_g30
19:14:22  37  ,eur_g31
19:14:22  38  ,eur_g32
19:14:22  39  ,eur_g33
19:14:22  40  ,eur_g34
19:14:22  41  ,eur_g35
19:14:22  42  ,eur_g36
19:14:22  43  ,eur_g37
19:14:22  44  ,eur_g38
19:14:22  45  ,eur_g39
19:14:22  46  ,eur_g40
19:14:22  47  ,eur_g41
19:14:22  48  ,aud_g00
19:14:22  49  ,aud_g01
19:14:22  50  ,aud_g02
19:14:22  51  ,aud_g03
19:14:22  52  ,aud_g04
19:14:22  53  ,aud_g05
19:14:22  54  ,aud_g06
19:14:22  55  ,aud_g07
19:14:22  56  ,aud_g08
19:14:22  57  ,aud_g09
19:14:22  58  ,aud_g10
19:14:22  59  ,aud_g11
19:14:22  60  ,aud_g12
19:14:22  61  ,aud_g13
19:14:22  62  ,aud_g14
19:14:22  63  ,aud_g15
19:14:22  64  ,aud_g16
19:14:22  65  ,aud_g17
19:14:22  66  ,aud_g18
19:14:22  67  ,aud_g19
19:14:22  68  ,aud_g20
19:14:22  69  ,aud_g21
19:14:22  70  ,aud_g22
19:14:22  71  ,aud_g23
19:14:22  72  ,aud_g24
19:14:22  73  ,aud_g25
19:14:22  74  ,aud_g26
19:14:22  75  ,aud_g27
19:14:22  76  ,aud_g28
19:14:22  77  ,aud_g29
19:14:22  78  ,aud_g30
19:14:22  79  ,aud_g31
19:14:22  80  ,aud_g32
19:14:22  81  ,aud_g33
19:14:22  82  ,aud_g34
19:14:22  83  ,aud_g35
19:14:22  84  ,aud_g36
19:14:22  85  ,aud_g37
19:14:22  86  ,aud_g38
19:14:22  87  ,aud_g39
19:14:22  88  ,aud_g40
19:14:22  89  ,aud_g41
19:14:22  90  ,gbp_g00
19:14:22  91  ,gbp_g01
19:14:22  92  ,gbp_g02
19:14:22  93  ,gbp_g03
19:14:22  94  ,gbp_g04
19:14:22  95  ,gbp_g05
19:14:22  96  ,gbp_g06
19:14:22  97  ,gbp_g07
19:14:22  98  ,gbp_g08
19:14:22  99  ,gbp_g09
19:14:22 100  ,gbp_g10
19:14:22 101  ,gbp_g11
19:14:22 102  ,gbp_g12
19:14:22 103  ,gbp_g13
19:14:22 104  ,gbp_g14
19:14:22 105  ,gbp_g15
19:14:22 106  ,gbp_g16
19:14:22 107  ,gbp_g17
19:14:22 108  ,gbp_g18
19:14:22 109  ,gbp_g19
19:14:22 110  ,gbp_g20
19:14:22 111  ,gbp_g21
19:14:22 112  ,gbp_g22
19:14:22 113  ,gbp_g23
19:14:22 114  ,gbp_g24
19:14:22 115  ,gbp_g25
19:14:22 116  ,gbp_g26
19:14:22 117  ,gbp_g27
19:14:22 118  ,gbp_g28
19:14:22 119  ,gbp_g29
19:14:22 120  ,gbp_g30
19:14:22 121  ,gbp_g31
19:14:22 122  ,gbp_g32
19:14:22 123  ,gbp_g33
19:14:22 124  ,gbp_g34
19:14:22 125  ,gbp_g35
19:14:22 126  ,gbp_g36
19:14:22 127  ,gbp_g37
19:14:22 128  ,gbp_g38
19:14:22 129  ,gbp_g39
19:14:22 130  ,gbp_g40
19:14:22 131  ,gbp_g41
19:14:22 132  ,jpy_g00
19:14:22 133  ,jpy_g01
19:14:22 134  ,jpy_g02
19:14:22 135  ,jpy_g03
19:14:22 136  ,jpy_g04
19:14:22 137  ,jpy_g05
19:14:22 138  ,jpy_g06
19:14:22 139  ,jpy_g07
19:14:22 140  ,jpy_g08
19:14:22 141  ,jpy_g09
19:14:22 142  ,jpy_g10
19:14:22 143  ,jpy_g11
19:14:22 144  ,jpy_g12
19:14:22 145  ,jpy_g13
19:14:22 146  ,jpy_g14
19:14:22 147  ,jpy_g15
19:14:22 148  ,jpy_g16
19:14:22 149  ,jpy_g17
19:14:22 150  ,jpy_g18
19:14:22 151  ,jpy_g19
19:14:22 152  ,jpy_g20
19:14:22 153  ,jpy_g21
19:14:22 154  ,jpy_g22
19:14:22 155  ,jpy_g23
19:14:22 156  ,jpy_g24
19:14:22 157  ,jpy_g25
19:14:22 158  ,jpy_g26
19:14:22 159  ,jpy_g27
19:14:22 160  ,jpy_g28
19:14:22 161  ,jpy_g29
19:14:22 162  ,jpy_g30
19:14:22 163  ,jpy_g31
19:14:22 164  ,jpy_g32
19:14:22 165  ,jpy_g33
19:14:22 166  ,jpy_g34
19:14:22 167  ,jpy_g35
19:14:22 168  ,jpy_g36
19:14:22 169  ,jpy_g37
19:14:22 170  ,jpy_g38
19:14:22 171  ,jpy_g39
19:14:22 172  ,jpy_g40
19:14:22 173  ,jpy_g41
19:14:22 174  ,cad_g00
19:14:22 175  ,cad_g01
19:14:22 176  ,cad_g02
19:14:22 177  ,cad_g03
19:14:22 178  ,cad_g04
19:14:22 179  ,cad_g05
19:14:22 180  ,cad_g06
19:14:22 181  ,cad_g07
19:14:22 182  ,cad_g08
19:14:22 183  ,cad_g09
19:14:22 184  ,cad_g10
19:14:22 185  ,cad_g11
19:14:22 186  ,cad_g12
19:14:22 187  ,cad_g13
19:14:22 188  ,cad_g14
19:14:22 189  ,cad_g15
19:14:22 190  ,cad_g16
19:14:22 191  ,cad_g17
19:14:22 192  ,cad_g18
19:14:22 193  ,cad_g19
19:14:22 194  ,cad_g20
19:14:22 195  ,cad_g21
19:14:22 196  ,cad_g22
19:14:22 197  ,cad_g23
19:14:22 198  ,cad_g24
19:14:22 199  ,cad_g25
19:14:22 200  ,cad_g26
19:14:22 201  ,cad_g27
19:14:22 202  ,cad_g28
19:14:22 203  ,cad_g29
19:14:22 204  ,cad_g30
19:14:22 205  ,cad_g31
19:14:22 206  ,cad_g32
19:14:22 207  ,cad_g33
19:14:22 208  ,cad_g34
19:14:22 209  ,cad_g35
19:14:22 210  ,cad_g36
19:14:22 211  ,cad_g37
19:14:22 212  ,cad_g38
19:14:22 213  ,cad_g39
19:14:22 214  ,cad_g40
19:14:22 215  ,cad_g41
19:14:22 216  ,chf_g00
19:14:22 217  ,chf_g01
19:14:22 218  ,chf_g02
19:14:22 219  ,chf_g03
19:14:22 220  ,chf_g04
19:14:22 221  ,chf_g05
19:14:22 222  ,chf_g06
19:14:22 223  ,chf_g07
19:14:22 224  ,chf_g08
19:14:22 225  ,chf_g09
19:14:22 226  ,chf_g10
19:14:22 227  ,chf_g11
19:14:22 228  ,chf_g12
19:14:22 229  ,chf_g13
19:14:22 230  ,chf_g14
19:14:22 231  ,chf_g15
19:14:22 232  ,chf_g16
19:14:22 233  ,chf_g17
19:14:22 234  ,chf_g18
19:14:22 235  ,chf_g19
19:14:22 236  ,chf_g20
19:14:22 237  ,chf_g21
19:14:22 238  ,chf_g22
19:14:22 239  ,chf_g23
19:14:22 240  ,chf_g24
19:14:22 241  ,chf_g25
19:14:22 242  ,chf_g26
19:14:22 243  ,chf_g27
19:14:22 244  ,chf_g28
19:14:22 245  ,chf_g29
19:14:22 246  ,chf_g30
19:14:22 247  ,chf_g31
19:14:22 248  ,chf_g32
19:14:22 249  ,chf_g33
19:14:22 250  ,chf_g34
19:14:22 251  ,chf_g35
19:14:22 252  ,chf_g36
19:14:22 253  ,chf_g37
19:14:22 254  ,chf_g38
19:14:22 255  ,chf_g39
19:14:22 256  ,chf_g40
19:14:22 257  ,chf_g41
19:14:22 258  FROM aud_ms6 m
19:14:22 259  WHERE gatt IN('nup','up')
19:14:22 260  AND 1+m.ydate < '&1'||' '||'&2'
19:14:22 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'18:50:00'

View created.

Elapsed: 00:00:00.14
19:14:23 SQL> 
19:14:23 SQL> -- rpt
19:14:23 SQL> 
19:14:23 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
19:14:23   2  
19:14:23 SQL> SELECT MAX(prdate) FROM bme
19:14:23   2  
19:14:23 SQL> -- Now build model from bme and score sme
19:14:23 SQL> @score1.sql
19:14:23 SQL> -- score1.sql
19:14:23 SQL> 
19:14:23 SQL> -- Does the 1st SVM score
19:14:23 SQL> 
19:14:23 SQL> -- Fill up svmc_apply_prep
19:14:23 SQL> @score.sql
19:14:23 SQL> --
19:14:23 SQL> -- score.sql
19:14:23 SQL> --
19:14:23 SQL> 
19:14:23 SQL> -- usage: score.sql
19:14:23 SQL> 
19:14:23 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
19:14:23 SQL> 
19:14:23 SQL> DEFINE target	= 'gatt'
19:14:23 SQL> DEFINE model_name = 'forex15'
19:14:23 SQL> DEFINE bldtable	= 'bme'
19:14:23 SQL> DEFINE scoretable = 'sme'
19:14:23 SQL> DEFINE case_id	= 'prdate'
19:14:23 SQL> 
19:14:23 SQL> -- Define a variable to help me exclude some columns from some data mining calls
19:14:23 SQL> DEFINE exclude1 = "'&target','&case_id'"
19:14:23 SQL> 
19:14:23 SQL> -- Builds an SVM model using pl/sql.
19:14:23 SQL> 
19:14:23 SQL> -----------------------------------------------------------------------
19:14:23 SQL> --			    BUILD THE MODEL
19:14:23 SQL> -----------------------------------------------------------------------
19:14:23 SQL> 
19:14:23 SQL> -- Cleanup old build data preparation objects for repeat runs
19:14:23 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
19:14:23 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
19:14:23 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
19:14:23 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
19:14:23 SQL> 
19:14:23 SQL> 
19:14:23 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
19:14:23 SQL> --
19:14:23 SQL> -- DROP	TABLE svmc_settings ;
19:14:23 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
19:14:23 SQL> -- DELETE svmc_settings;
19:14:23 SQL> 
19:14:23 SQL> -- The default classification algorithm is Naive Bayes. So override
19:14:23 SQL> -- this choice to SVM using a settings table.
19:14:23 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
19:14:23 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
19:14:23 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
19:14:23 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
19:14:23 SQL> -- models.
19:14:23 SQL> --
19:14:23 SQL> 
19:14:23 SQL> -- Do this once and then comment it out.
19:14:23 SQL> -- That makes script go faster.
19:14:23 SQL> -- BEGIN
19:14:23 SQL> -- -- Populate settings table
19:14:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:14:23 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
19:14:23 SQL> --
19:14:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:14:23 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
19:14:23 SQL> --
19:14:23 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:14:23 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
19:14:23 SQL> --   COMMIT;
19:14:23 SQL> -- END;
19:14:23 SQL> -- /
19:14:23 SQL> 
19:14:23 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
19:14:23 SQL> 
19:14:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
19:14:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:14:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
19:14:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
19:14:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:14:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:14:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
19:14:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:14:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:14:23 SQL> 
19:14:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
19:14:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:14:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:14:23 SQL> 
19:14:23 SQL> --------------------------------
19:14:23 SQL> -- PREPARE BUILD (TRAINING) DATA
19:14:23 SQL> --
19:14:23 SQL> 
19:14:23 SQL> -- 1. Missing Value treatment for all Predictors and
19:14:23 SQL> -- 2. Outlier Treatment and
19:14:23 SQL> -- 3. Normalization are performed below.
19:14:23 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
19:14:23 SQL> --    normalized here.
19:14:23 SQL> 
19:14:23 SQL> BEGIN
19:14:23   2  	-- Perform missing value treatment for all predictors
19:14:23   3  	-- create miss tables
19:14:23   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
19:14:23   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
19:14:23   6  
19:14:23   7  	-- populate miss tables
19:14:23   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
19:14:23   9  	  miss_table_name => 'svmc_miss_num',
19:14:23  10  	  data_table_name => '&bldtable',
19:14:23  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:14:23  12  
19:14:23  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
19:14:23  14  	  miss_table_name => 'svmc_miss_cat',
19:14:23  15  	  data_table_name => '&bldtable',
19:14:23  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:14:23  17  
19:14:23  18  	-- xform input data to replace missing values
19:14:23  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:14:23  20  	  miss_table_name => 'svmc_miss_num',
19:14:23  21  	  data_table_name => '&bldtable',
19:14:23  22  	  xform_view_name => 'xformed_build_miss_num');
19:14:23  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:14:23  24  	  miss_table_name => 'svmc_miss_cat',
19:14:23  25  	  data_table_name => '&bldtable',
19:14:23  26  	  xform_view_name => 'xformed_build_miss_cat');
19:14:23  27  
19:14:23  28  	-- Perform outlier treatment.
19:14:23  29  	-- create clip table
19:14:23  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
19:14:23  31  
19:14:23  32  	-- populate clip table
19:14:23  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
19:14:23  34  	  clip_table_name => 'svmc_clip',
19:14:23  35  	  data_table_name => '&bldtable',
19:14:23  36  	  tail_frac	  => 0.025,
19:14:23  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:14:23  38  
19:14:23  39  	-- xform input data to winsorized data
19:14:23  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
19:14:23  41  	  clip_table_name => 'svmc_clip',
19:14:23  42  	  data_table_name => '&bldtable',
19:14:23  43  	  xform_view_name => 'svmc_winsor');
19:14:23  44  
19:14:23  45  	-- create normalization table
19:14:23  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
19:14:23  47  
19:14:23  48  	-- populate normalization table based on winsorized data
19:14:23  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
19:14:23  50  	  norm_table_name => 'svmc_norm',
19:14:23  51  	  data_table_name => 'svmc_winsor',
19:14:23  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:14:23  53  
19:14:23  54  	-- normalize the original data
19:14:23  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:14:23  56  	  norm_table_name => 'svmc_norm',
19:14:23  57  	  data_table_name => '&bldtable',
19:14:23  58  	  xform_view_name => 'svmc_build_prep');
19:14:23  59  END;
19:14:23  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.76
19:14:42 SQL> 
19:14:42 SQL> ---------------------
19:14:42 SQL> -- CREATE A NEW MODEL
19:14:42 SQL> --
19:14:42 SQL> -- Cleanup old model with the same name for repeat runs
19:14:42 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
19:14:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:14:42   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.66
19:14:42 SQL> 
19:14:42 SQL> -- Build a new SVM Model
19:14:42 SQL> BEGIN
19:14:42   2  	DBMS_DATA_MINING.CREATE_MODEL(
19:14:42   3  	  model_name	      => '&model_name',
19:14:42   4  	  mining_function     => dbms_data_mining.classification,
19:14:42   5  	  data_table_name     => 'svmc_build_prep',
19:14:42   6  	  case_id_column_name => '&case_id',
19:14:42   7  	  target_column_name  => '&target',
19:14:42   8  	  settings_table_name => 'svmc_settings');
19:14:42   9  END;
19:14:42  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:32.15
19:15:14 SQL> 
19:15:14 SQL> -----------------------------------------------------------------------
19:15:14 SQL> --			       APPLY/score THE MODEL
19:15:14 SQL> -----------------------------------------------------------------------
19:15:14 SQL> 
19:15:14 SQL> -- Cleanup old scoring data preparation objects for repeat runs
19:15:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
19:15:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:15:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
19:15:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
19:15:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:15:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:15:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
19:15:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:15:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
19:15:15 SQL> -----------------------
19:15:15 SQL> -- PREPARE SCORING DATA
19:15:15 SQL> --
19:15:15 SQL> -- If the data for model creation has been prepared, then the data
19:15:15 SQL> -- to be scored using the model must be prepared in the same manner
19:15:15 SQL> -- in order to obtain meaningful results.
19:15:15 SQL> --
19:15:15 SQL> -- 1. Missing Value treatment for all Predictors and
19:15:15 SQL> -- 2. Normalization
19:15:15 SQL> -- No outlier treatment will be performed during test and apply. The
19:15:15 SQL> -- normalization step is sufficient, since the normalization parameters
19:15:15 SQL> -- already capture the effects of outlier treatment done with build data.
19:15:15 SQL> --
19:15:15 SQL> BEGIN
19:15:15   2  	-- Xform Test data to replace missing values
19:15:15   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:15:15   4  	  miss_table_name => 'svmc_miss_num',
19:15:15   5  	  data_table_name => '&scoretable',
19:15:15   6  	  xform_view_name => 'xformed_apply_miss_num');
19:15:15   7  
19:15:15   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:15:15   9  	  miss_table_name => 'svmc_miss_cat',
19:15:15  10  	  data_table_name => '&scoretable',
19:15:15  11  	  xform_view_name => 'xformed_apply_miss_cat');
19:15:15  12  
19:15:15  13  	-- Normalize the data to be scored
19:15:15  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:15:15  15  	  norm_table_name => 'svmc_norm',
19:15:15  16  	  data_table_name => '&scoretable',
19:15:15  17  	  xform_view_name => 'svmc_apply_prep');
19:15:15  18  END;
19:15:15  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
19:15:16 SQL> 
19:15:16 SQL> -- Use same model_name used in score.sql
19:15:16 SQL> DEFINE model_name = 'forex15'
19:15:16 SQL> 
19:15:16 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
19:15:16 SQL> 
19:15:16 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.06
19:15:16 SQL> 
19:15:16 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
19:15:16   2  SELECT
19:15:16   3  prdate
19:15:16   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
19:15:16   5  ,sysdate
19:15:16   6  ,SUBSTR(prdate,1,3)pair
19:15:16   7  ,SUBSTR(prdate,4,19)ydate
19:15:16   8  FROM svmc_apply_prep
19:15:16   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.28
19:15:16 SQL> @aud_score1day.sql  2011-01-06 18:55:00
19:15:16 SQL> --
19:15:16 SQL> -- aud_score1day.sql
19:15:16 SQL> --
19:15:16 SQL> 
19:15:16 SQL> CREATE OR REPLACE VIEW sme AS
19:15:16   2  SELECT
19:15:16   3  'aud'||m.ydate prdate
19:15:16   4  ,NULL gatt
19:15:16   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:15:16   6  ,eur_g00
19:15:16   7  ,eur_g01
19:15:16   8  ,eur_g02
19:15:16   9  ,eur_g03
19:15:16  10  ,eur_g04
19:15:16  11  ,eur_g05
19:15:16  12  ,eur_g06
19:15:16  13  ,eur_g07
19:15:16  14  ,eur_g08
19:15:16  15  ,eur_g09
19:15:16  16  ,eur_g10
19:15:16  17  ,eur_g11
19:15:16  18  ,eur_g12
19:15:16  19  ,eur_g13
19:15:16  20  ,eur_g14
19:15:16  21  ,eur_g15
19:15:16  22  ,eur_g16
19:15:16  23  ,eur_g17
19:15:16  24  ,eur_g18
19:15:16  25  ,eur_g19
19:15:16  26  ,eur_g20
19:15:16  27  ,eur_g21
19:15:16  28  ,eur_g22
19:15:16  29  ,eur_g23
19:15:16  30  ,eur_g24
19:15:16  31  ,eur_g25
19:15:16  32  ,eur_g26
19:15:16  33  ,eur_g27
19:15:16  34  ,eur_g28
19:15:16  35  ,eur_g29
19:15:16  36  ,eur_g30
19:15:16  37  ,eur_g31
19:15:16  38  ,eur_g32
19:15:16  39  ,eur_g33
19:15:16  40  ,eur_g34
19:15:16  41  ,eur_g35
19:15:16  42  ,eur_g36
19:15:16  43  ,eur_g37
19:15:16  44  ,eur_g38
19:15:16  45  ,eur_g39
19:15:16  46  ,eur_g40
19:15:16  47  ,eur_g41
19:15:16  48  ,aud_g00
19:15:16  49  ,aud_g01
19:15:16  50  ,aud_g02
19:15:16  51  ,aud_g03
19:15:16  52  ,aud_g04
19:15:16  53  ,aud_g05
19:15:16  54  ,aud_g06
19:15:16  55  ,aud_g07
19:15:16  56  ,aud_g08
19:15:16  57  ,aud_g09
19:15:16  58  ,aud_g10
19:15:16  59  ,aud_g11
19:15:16  60  ,aud_g12
19:15:16  61  ,aud_g13
19:15:16  62  ,aud_g14
19:15:16  63  ,aud_g15
19:15:16  64  ,aud_g16
19:15:16  65  ,aud_g17
19:15:16  66  ,aud_g18
19:15:16  67  ,aud_g19
19:15:16  68  ,aud_g20
19:15:16  69  ,aud_g21
19:15:16  70  ,aud_g22
19:15:16  71  ,aud_g23
19:15:16  72  ,aud_g24
19:15:16  73  ,aud_g25
19:15:16  74  ,aud_g26
19:15:16  75  ,aud_g27
19:15:16  76  ,aud_g28
19:15:16  77  ,aud_g29
19:15:16  78  ,aud_g30
19:15:16  79  ,aud_g31
19:15:16  80  ,aud_g32
19:15:16  81  ,aud_g33
19:15:16  82  ,aud_g34
19:15:16  83  ,aud_g35
19:15:16  84  ,aud_g36
19:15:16  85  ,aud_g37
19:15:16  86  ,aud_g38
19:15:16  87  ,aud_g39
19:15:16  88  ,aud_g40
19:15:16  89  ,aud_g41
19:15:16  90  ,gbp_g00
19:15:16  91  ,gbp_g01
19:15:16  92  ,gbp_g02
19:15:16  93  ,gbp_g03
19:15:16  94  ,gbp_g04
19:15:16  95  ,gbp_g05
19:15:16  96  ,gbp_g06
19:15:16  97  ,gbp_g07
19:15:16  98  ,gbp_g08
19:15:16  99  ,gbp_g09
19:15:16 100  ,gbp_g10
19:15:16 101  ,gbp_g11
19:15:16 102  ,gbp_g12
19:15:16 103  ,gbp_g13
19:15:16 104  ,gbp_g14
19:15:16 105  ,gbp_g15
19:15:16 106  ,gbp_g16
19:15:16 107  ,gbp_g17
19:15:16 108  ,gbp_g18
19:15:16 109  ,gbp_g19
19:15:16 110  ,gbp_g20
19:15:16 111  ,gbp_g21
19:15:16 112  ,gbp_g22
19:15:16 113  ,gbp_g23
19:15:16 114  ,gbp_g24
19:15:16 115  ,gbp_g25
19:15:16 116  ,gbp_g26
19:15:16 117  ,gbp_g27
19:15:16 118  ,gbp_g28
19:15:16 119  ,gbp_g29
19:15:16 120  ,gbp_g30
19:15:16 121  ,gbp_g31
19:15:16 122  ,gbp_g32
19:15:16 123  ,gbp_g33
19:15:16 124  ,gbp_g34
19:15:16 125  ,gbp_g35
19:15:16 126  ,gbp_g36
19:15:16 127  ,gbp_g37
19:15:16 128  ,gbp_g38
19:15:16 129  ,gbp_g39
19:15:16 130  ,gbp_g40
19:15:16 131  ,gbp_g41
19:15:16 132  ,jpy_g00
19:15:16 133  ,jpy_g01
19:15:16 134  ,jpy_g02
19:15:16 135  ,jpy_g03
19:15:16 136  ,jpy_g04
19:15:16 137  ,jpy_g05
19:15:16 138  ,jpy_g06
19:15:16 139  ,jpy_g07
19:15:16 140  ,jpy_g08
19:15:16 141  ,jpy_g09
19:15:16 142  ,jpy_g10
19:15:16 143  ,jpy_g11
19:15:16 144  ,jpy_g12
19:15:16 145  ,jpy_g13
19:15:16 146  ,jpy_g14
19:15:16 147  ,jpy_g15
19:15:16 148  ,jpy_g16
19:15:16 149  ,jpy_g17
19:15:16 150  ,jpy_g18
19:15:16 151  ,jpy_g19
19:15:16 152  ,jpy_g20
19:15:16 153  ,jpy_g21
19:15:16 154  ,jpy_g22
19:15:16 155  ,jpy_g23
19:15:16 156  ,jpy_g24
19:15:16 157  ,jpy_g25
19:15:16 158  ,jpy_g26
19:15:16 159  ,jpy_g27
19:15:16 160  ,jpy_g28
19:15:16 161  ,jpy_g29
19:15:16 162  ,jpy_g30
19:15:16 163  ,jpy_g31
19:15:16 164  ,jpy_g32
19:15:16 165  ,jpy_g33
19:15:16 166  ,jpy_g34
19:15:16 167  ,jpy_g35
19:15:16 168  ,jpy_g36
19:15:16 169  ,jpy_g37
19:15:16 170  ,jpy_g38
19:15:16 171  ,jpy_g39
19:15:16 172  ,jpy_g40
19:15:16 173  ,jpy_g41
19:15:16 174  ,cad_g00
19:15:16 175  ,cad_g01
19:15:16 176  ,cad_g02
19:15:16 177  ,cad_g03
19:15:16 178  ,cad_g04
19:15:16 179  ,cad_g05
19:15:16 180  ,cad_g06
19:15:16 181  ,cad_g07
19:15:16 182  ,cad_g08
19:15:16 183  ,cad_g09
19:15:16 184  ,cad_g10
19:15:16 185  ,cad_g11
19:15:16 186  ,cad_g12
19:15:16 187  ,cad_g13
19:15:16 188  ,cad_g14
19:15:16 189  ,cad_g15
19:15:16 190  ,cad_g16
19:15:16 191  ,cad_g17
19:15:16 192  ,cad_g18
19:15:16 193  ,cad_g19
19:15:16 194  ,cad_g20
19:15:16 195  ,cad_g21
19:15:16 196  ,cad_g22
19:15:16 197  ,cad_g23
19:15:16 198  ,cad_g24
19:15:16 199  ,cad_g25
19:15:16 200  ,cad_g26
19:15:16 201  ,cad_g27
19:15:16 202  ,cad_g28
19:15:16 203  ,cad_g29
19:15:16 204  ,cad_g30
19:15:16 205  ,cad_g31
19:15:16 206  ,cad_g32
19:15:16 207  ,cad_g33
19:15:16 208  ,cad_g34
19:15:16 209  ,cad_g35
19:15:16 210  ,cad_g36
19:15:16 211  ,cad_g37
19:15:16 212  ,cad_g38
19:15:16 213  ,cad_g39
19:15:16 214  ,cad_g40
19:15:16 215  ,cad_g41
19:15:16 216  ,chf_g00
19:15:16 217  ,chf_g01
19:15:16 218  ,chf_g02
19:15:16 219  ,chf_g03
19:15:16 220  ,chf_g04
19:15:16 221  ,chf_g05
19:15:16 222  ,chf_g06
19:15:16 223  ,chf_g07
19:15:16 224  ,chf_g08
19:15:16 225  ,chf_g09
19:15:16 226  ,chf_g10
19:15:16 227  ,chf_g11
19:15:16 228  ,chf_g12
19:15:16 229  ,chf_g13
19:15:16 230  ,chf_g14
19:15:16 231  ,chf_g15
19:15:16 232  ,chf_g16
19:15:16 233  ,chf_g17
19:15:16 234  ,chf_g18
19:15:16 235  ,chf_g19
19:15:16 236  ,chf_g20
19:15:16 237  ,chf_g21
19:15:16 238  ,chf_g22
19:15:16 239  ,chf_g23
19:15:16 240  ,chf_g24
19:15:16 241  ,chf_g25
19:15:16 242  ,chf_g26
19:15:16 243  ,chf_g27
19:15:16 244  ,chf_g28
19:15:16 245  ,chf_g29
19:15:16 246  ,chf_g30
19:15:16 247  ,chf_g31
19:15:16 248  ,chf_g32
19:15:16 249  ,chf_g33
19:15:16 250  ,chf_g34
19:15:16 251  ,chf_g35
19:15:16 252  ,chf_g36
19:15:16 253  ,chf_g37
19:15:16 254  ,chf_g38
19:15:16 255  ,chf_g39
19:15:16 256  ,chf_g40
19:15:16 257  ,chf_g41
19:15:16 258  FROM aud_ms6 m
19:15:16 259  WHERE m.ydate = '&1'||' '||'&2'
19:15:16 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'18:55:00'

View created.

Elapsed: 00:00:00.14
19:15:16 SQL> 
19:15:16 SQL> -- rpt
19:15:16 SQL> -- We should see just 1 row:
19:15:16 SQL> 
19:15:16 SQL> SELECT COUNT(prdate) FROM sme
19:15:16   2  
19:15:16 SQL> -- Build the model:
19:15:16 SQL> CREATE OR REPLACE VIEW bme AS
19:15:16   2  SELECT
19:15:16   3  'aud'||m.ydate prdate
19:15:16   4  ,gatt
19:15:16   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:15:16   6  ,eur_g00
19:15:16   7  ,eur_g01
19:15:16   8  ,eur_g02
19:15:16   9  ,eur_g03
19:15:16  10  ,eur_g04
19:15:16  11  ,eur_g05
19:15:16  12  ,eur_g06
19:15:16  13  ,eur_g07
19:15:16  14  ,eur_g08
19:15:16  15  ,eur_g09
19:15:16  16  ,eur_g10
19:15:16  17  ,eur_g11
19:15:16  18  ,eur_g12
19:15:16  19  ,eur_g13
19:15:16  20  ,eur_g14
19:15:16  21  ,eur_g15
19:15:16  22  ,eur_g16
19:15:16  23  ,eur_g17
19:15:16  24  ,eur_g18
19:15:16  25  ,eur_g19
19:15:16  26  ,eur_g20
19:15:16  27  ,eur_g21
19:15:16  28  ,eur_g22
19:15:16  29  ,eur_g23
19:15:16  30  ,eur_g24
19:15:16  31  ,eur_g25
19:15:16  32  ,eur_g26
19:15:16  33  ,eur_g27
19:15:16  34  ,eur_g28
19:15:16  35  ,eur_g29
19:15:16  36  ,eur_g30
19:15:16  37  ,eur_g31
19:15:16  38  ,eur_g32
19:15:16  39  ,eur_g33
19:15:16  40  ,eur_g34
19:15:16  41  ,eur_g35
19:15:16  42  ,eur_g36
19:15:16  43  ,eur_g37
19:15:16  44  ,eur_g38
19:15:16  45  ,eur_g39
19:15:16  46  ,eur_g40
19:15:16  47  ,eur_g41
19:15:16  48  ,aud_g00
19:15:16  49  ,aud_g01
19:15:16  50  ,aud_g02
19:15:16  51  ,aud_g03
19:15:16  52  ,aud_g04
19:15:16  53  ,aud_g05
19:15:16  54  ,aud_g06
19:15:16  55  ,aud_g07
19:15:16  56  ,aud_g08
19:15:16  57  ,aud_g09
19:15:16  58  ,aud_g10
19:15:16  59  ,aud_g11
19:15:16  60  ,aud_g12
19:15:16  61  ,aud_g13
19:15:16  62  ,aud_g14
19:15:16  63  ,aud_g15
19:15:16  64  ,aud_g16
19:15:16  65  ,aud_g17
19:15:16  66  ,aud_g18
19:15:16  67  ,aud_g19
19:15:16  68  ,aud_g20
19:15:16  69  ,aud_g21
19:15:16  70  ,aud_g22
19:15:16  71  ,aud_g23
19:15:16  72  ,aud_g24
19:15:16  73  ,aud_g25
19:15:16  74  ,aud_g26
19:15:16  75  ,aud_g27
19:15:16  76  ,aud_g28
19:15:16  77  ,aud_g29
19:15:16  78  ,aud_g30
19:15:16  79  ,aud_g31
19:15:16  80  ,aud_g32
19:15:16  81  ,aud_g33
19:15:16  82  ,aud_g34
19:15:16  83  ,aud_g35
19:15:16  84  ,aud_g36
19:15:16  85  ,aud_g37
19:15:16  86  ,aud_g38
19:15:16  87  ,aud_g39
19:15:16  88  ,aud_g40
19:15:16  89  ,aud_g41
19:15:16  90  ,gbp_g00
19:15:16  91  ,gbp_g01
19:15:16  92  ,gbp_g02
19:15:16  93  ,gbp_g03
19:15:16  94  ,gbp_g04
19:15:16  95  ,gbp_g05
19:15:16  96  ,gbp_g06
19:15:16  97  ,gbp_g07
19:15:16  98  ,gbp_g08
19:15:16  99  ,gbp_g09
19:15:16 100  ,gbp_g10
19:15:16 101  ,gbp_g11
19:15:16 102  ,gbp_g12
19:15:16 103  ,gbp_g13
19:15:16 104  ,gbp_g14
19:15:16 105  ,gbp_g15
19:15:16 106  ,gbp_g16
19:15:16 107  ,gbp_g17
19:15:16 108  ,gbp_g18
19:15:16 109  ,gbp_g19
19:15:16 110  ,gbp_g20
19:15:16 111  ,gbp_g21
19:15:16 112  ,gbp_g22
19:15:16 113  ,gbp_g23
19:15:16 114  ,gbp_g24
19:15:16 115  ,gbp_g25
19:15:16 116  ,gbp_g26
19:15:16 117  ,gbp_g27
19:15:16 118  ,gbp_g28
19:15:16 119  ,gbp_g29
19:15:16 120  ,gbp_g30
19:15:16 121  ,gbp_g31
19:15:16 122  ,gbp_g32
19:15:16 123  ,gbp_g33
19:15:16 124  ,gbp_g34
19:15:16 125  ,gbp_g35
19:15:16 126  ,gbp_g36
19:15:16 127  ,gbp_g37
19:15:16 128  ,gbp_g38
19:15:16 129  ,gbp_g39
19:15:16 130  ,gbp_g40
19:15:16 131  ,gbp_g41
19:15:16 132  ,jpy_g00
19:15:16 133  ,jpy_g01
19:15:16 134  ,jpy_g02
19:15:16 135  ,jpy_g03
19:15:16 136  ,jpy_g04
19:15:16 137  ,jpy_g05
19:15:16 138  ,jpy_g06
19:15:16 139  ,jpy_g07
19:15:16 140  ,jpy_g08
19:15:16 141  ,jpy_g09
19:15:16 142  ,jpy_g10
19:15:16 143  ,jpy_g11
19:15:16 144  ,jpy_g12
19:15:16 145  ,jpy_g13
19:15:16 146  ,jpy_g14
19:15:16 147  ,jpy_g15
19:15:16 148  ,jpy_g16
19:15:16 149  ,jpy_g17
19:15:16 150  ,jpy_g18
19:15:16 151  ,jpy_g19
19:15:16 152  ,jpy_g20
19:15:16 153  ,jpy_g21
19:15:16 154  ,jpy_g22
19:15:16 155  ,jpy_g23
19:15:16 156  ,jpy_g24
19:15:16 157  ,jpy_g25
19:15:16 158  ,jpy_g26
19:15:16 159  ,jpy_g27
19:15:16 160  ,jpy_g28
19:15:16 161  ,jpy_g29
19:15:16 162  ,jpy_g30
19:15:16 163  ,jpy_g31
19:15:16 164  ,jpy_g32
19:15:16 165  ,jpy_g33
19:15:16 166  ,jpy_g34
19:15:16 167  ,jpy_g35
19:15:16 168  ,jpy_g36
19:15:16 169  ,jpy_g37
19:15:16 170  ,jpy_g38
19:15:16 171  ,jpy_g39
19:15:16 172  ,jpy_g40
19:15:16 173  ,jpy_g41
19:15:16 174  ,cad_g00
19:15:16 175  ,cad_g01
19:15:16 176  ,cad_g02
19:15:16 177  ,cad_g03
19:15:16 178  ,cad_g04
19:15:16 179  ,cad_g05
19:15:16 180  ,cad_g06
19:15:16 181  ,cad_g07
19:15:16 182  ,cad_g08
19:15:16 183  ,cad_g09
19:15:16 184  ,cad_g10
19:15:16 185  ,cad_g11
19:15:16 186  ,cad_g12
19:15:16 187  ,cad_g13
19:15:16 188  ,cad_g14
19:15:16 189  ,cad_g15
19:15:16 190  ,cad_g16
19:15:16 191  ,cad_g17
19:15:16 192  ,cad_g18
19:15:16 193  ,cad_g19
19:15:16 194  ,cad_g20
19:15:16 195  ,cad_g21
19:15:16 196  ,cad_g22
19:15:16 197  ,cad_g23
19:15:16 198  ,cad_g24
19:15:16 199  ,cad_g25
19:15:16 200  ,cad_g26
19:15:16 201  ,cad_g27
19:15:16 202  ,cad_g28
19:15:16 203  ,cad_g29
19:15:16 204  ,cad_g30
19:15:16 205  ,cad_g31
19:15:16 206  ,cad_g32
19:15:16 207  ,cad_g33
19:15:16 208  ,cad_g34
19:15:16 209  ,cad_g35
19:15:16 210  ,cad_g36
19:15:16 211  ,cad_g37
19:15:16 212  ,cad_g38
19:15:16 213  ,cad_g39
19:15:16 214  ,cad_g40
19:15:16 215  ,cad_g41
19:15:16 216  ,chf_g00
19:15:16 217  ,chf_g01
19:15:16 218  ,chf_g02
19:15:16 219  ,chf_g03
19:15:16 220  ,chf_g04
19:15:16 221  ,chf_g05
19:15:16 222  ,chf_g06
19:15:16 223  ,chf_g07
19:15:16 224  ,chf_g08
19:15:16 225  ,chf_g09
19:15:16 226  ,chf_g10
19:15:16 227  ,chf_g11
19:15:16 228  ,chf_g12
19:15:16 229  ,chf_g13
19:15:16 230  ,chf_g14
19:15:16 231  ,chf_g15
19:15:16 232  ,chf_g16
19:15:16 233  ,chf_g17
19:15:16 234  ,chf_g18
19:15:16 235  ,chf_g19
19:15:16 236  ,chf_g20
19:15:16 237  ,chf_g21
19:15:16 238  ,chf_g22
19:15:16 239  ,chf_g23
19:15:16 240  ,chf_g24
19:15:16 241  ,chf_g25
19:15:16 242  ,chf_g26
19:15:16 243  ,chf_g27
19:15:16 244  ,chf_g28
19:15:16 245  ,chf_g29
19:15:16 246  ,chf_g30
19:15:16 247  ,chf_g31
19:15:16 248  ,chf_g32
19:15:16 249  ,chf_g33
19:15:16 250  ,chf_g34
19:15:16 251  ,chf_g35
19:15:16 252  ,chf_g36
19:15:16 253  ,chf_g37
19:15:16 254  ,chf_g38
19:15:16 255  ,chf_g39
19:15:16 256  ,chf_g40
19:15:16 257  ,chf_g41
19:15:16 258  FROM aud_ms6 m
19:15:16 259  WHERE gatt IN('nup','up')
19:15:16 260  AND 1+m.ydate < '&1'||' '||'&2'
19:15:16 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'18:55:00'

View created.

Elapsed: 00:00:00.13
19:15:17 SQL> 
19:15:17 SQL> -- rpt
19:15:17 SQL> 
19:15:17 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
19:15:17   2  
19:15:17 SQL> SELECT MAX(prdate) FROM bme
19:15:17   2  
19:15:17 SQL> -- Now build model from bme and score sme
19:15:17 SQL> @score1.sql
19:15:17 SQL> -- score1.sql
19:15:17 SQL> 
19:15:17 SQL> -- Does the 1st SVM score
19:15:17 SQL> 
19:15:17 SQL> -- Fill up svmc_apply_prep
19:15:17 SQL> @score.sql
19:15:17 SQL> --
19:15:17 SQL> -- score.sql
19:15:17 SQL> --
19:15:17 SQL> 
19:15:17 SQL> -- usage: score.sql
19:15:17 SQL> 
19:15:17 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
19:15:17 SQL> 
19:15:17 SQL> DEFINE target	= 'gatt'
19:15:17 SQL> DEFINE model_name = 'forex15'
19:15:17 SQL> DEFINE bldtable	= 'bme'
19:15:17 SQL> DEFINE scoretable = 'sme'
19:15:17 SQL> DEFINE case_id	= 'prdate'
19:15:17 SQL> 
19:15:17 SQL> -- Define a variable to help me exclude some columns from some data mining calls
19:15:17 SQL> DEFINE exclude1 = "'&target','&case_id'"
19:15:17 SQL> 
19:15:17 SQL> -- Builds an SVM model using pl/sql.
19:15:17 SQL> 
19:15:17 SQL> -----------------------------------------------------------------------
19:15:17 SQL> --			    BUILD THE MODEL
19:15:17 SQL> -----------------------------------------------------------------------
19:15:17 SQL> 
19:15:17 SQL> -- Cleanup old build data preparation objects for repeat runs
19:15:17 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
19:15:17 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
19:15:17 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
19:15:17 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
19:15:17 SQL> 
19:15:17 SQL> 
19:15:17 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
19:15:17 SQL> --
19:15:17 SQL> -- DROP	TABLE svmc_settings ;
19:15:17 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
19:15:17 SQL> -- DELETE svmc_settings;
19:15:17 SQL> 
19:15:17 SQL> -- The default classification algorithm is Naive Bayes. So override
19:15:17 SQL> -- this choice to SVM using a settings table.
19:15:17 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
19:15:17 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
19:15:17 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
19:15:17 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
19:15:17 SQL> -- models.
19:15:17 SQL> --
19:15:17 SQL> 
19:15:17 SQL> -- Do this once and then comment it out.
19:15:17 SQL> -- That makes script go faster.
19:15:17 SQL> -- BEGIN
19:15:17 SQL> -- -- Populate settings table
19:15:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:15:17 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
19:15:17 SQL> --
19:15:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:15:17 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
19:15:17 SQL> --
19:15:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:15:17 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
19:15:17 SQL> --   COMMIT;
19:15:17 SQL> -- END;
19:15:17 SQL> -- /
19:15:17 SQL> 
19:15:17 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
19:15:17 SQL> 
19:15:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
19:15:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:15:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:15:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
19:15:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:15:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:15:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
19:15:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:15:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:15:17 SQL> 
19:15:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
19:15:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:15:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:15:17 SQL> 
19:15:17 SQL> --------------------------------
19:15:17 SQL> -- PREPARE BUILD (TRAINING) DATA
19:15:17 SQL> --
19:15:17 SQL> 
19:15:17 SQL> -- 1. Missing Value treatment for all Predictors and
19:15:17 SQL> -- 2. Outlier Treatment and
19:15:17 SQL> -- 3. Normalization are performed below.
19:15:17 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
19:15:17 SQL> --    normalized here.
19:15:17 SQL> 
19:15:17 SQL> BEGIN
19:15:17   2  	-- Perform missing value treatment for all predictors
19:15:17   3  	-- create miss tables
19:15:17   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
19:15:17   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
19:15:17   6  
19:15:17   7  	-- populate miss tables
19:15:17   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
19:15:17   9  	  miss_table_name => 'svmc_miss_num',
19:15:17  10  	  data_table_name => '&bldtable',
19:15:17  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:15:17  12  
19:15:17  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
19:15:17  14  	  miss_table_name => 'svmc_miss_cat',
19:15:17  15  	  data_table_name => '&bldtable',
19:15:17  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:15:17  17  
19:15:17  18  	-- xform input data to replace missing values
19:15:17  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:15:17  20  	  miss_table_name => 'svmc_miss_num',
19:15:17  21  	  data_table_name => '&bldtable',
19:15:17  22  	  xform_view_name => 'xformed_build_miss_num');
19:15:17  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:15:17  24  	  miss_table_name => 'svmc_miss_cat',
19:15:17  25  	  data_table_name => '&bldtable',
19:15:17  26  	  xform_view_name => 'xformed_build_miss_cat');
19:15:17  27  
19:15:17  28  	-- Perform outlier treatment.
19:15:17  29  	-- create clip table
19:15:17  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
19:15:17  31  
19:15:17  32  	-- populate clip table
19:15:17  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
19:15:17  34  	  clip_table_name => 'svmc_clip',
19:15:17  35  	  data_table_name => '&bldtable',
19:15:17  36  	  tail_frac	  => 0.025,
19:15:17  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:15:17  38  
19:15:17  39  	-- xform input data to winsorized data
19:15:17  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
19:15:17  41  	  clip_table_name => 'svmc_clip',
19:15:17  42  	  data_table_name => '&bldtable',
19:15:17  43  	  xform_view_name => 'svmc_winsor');
19:15:17  44  
19:15:17  45  	-- create normalization table
19:15:17  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
19:15:17  47  
19:15:17  48  	-- populate normalization table based on winsorized data
19:15:17  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
19:15:17  50  	  norm_table_name => 'svmc_norm',
19:15:17  51  	  data_table_name => 'svmc_winsor',
19:15:17  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:15:17  53  
19:15:17  54  	-- normalize the original data
19:15:17  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:15:17  56  	  norm_table_name => 'svmc_norm',
19:15:17  57  	  data_table_name => '&bldtable',
19:15:17  58  	  xform_view_name => 'svmc_build_prep');
19:15:17  59  END;
19:15:17  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.34
19:15:35 SQL> 
19:15:35 SQL> ---------------------
19:15:35 SQL> -- CREATE A NEW MODEL
19:15:35 SQL> --
19:15:35 SQL> -- Cleanup old model with the same name for repeat runs
19:15:35 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
19:15:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:15:35   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.15
19:15:36 SQL> 
19:15:36 SQL> -- Build a new SVM Model
19:15:36 SQL> BEGIN
19:15:36   2  	DBMS_DATA_MINING.CREATE_MODEL(
19:15:36   3  	  model_name	      => '&model_name',
19:15:36   4  	  mining_function     => dbms_data_mining.classification,
19:15:36   5  	  data_table_name     => 'svmc_build_prep',
19:15:36   6  	  case_id_column_name => '&case_id',
19:15:36   7  	  target_column_name  => '&target',
19:15:36   8  	  settings_table_name => 'svmc_settings');
19:15:36   9  END;
19:15:36  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.54
19:16:04 SQL> 
19:16:04 SQL> -----------------------------------------------------------------------
19:16:04 SQL> --			       APPLY/score THE MODEL
19:16:04 SQL> -----------------------------------------------------------------------
19:16:04 SQL> 
19:16:04 SQL> -- Cleanup old scoring data preparation objects for repeat runs
19:16:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
19:16:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:16:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
19:16:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
19:16:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:16:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:16:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
19:16:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:16:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:16:04 SQL> -----------------------
19:16:04 SQL> -- PREPARE SCORING DATA
19:16:04 SQL> --
19:16:04 SQL> -- If the data for model creation has been prepared, then the data
19:16:04 SQL> -- to be scored using the model must be prepared in the same manner
19:16:04 SQL> -- in order to obtain meaningful results.
19:16:04 SQL> --
19:16:04 SQL> -- 1. Missing Value treatment for all Predictors and
19:16:04 SQL> -- 2. Normalization
19:16:04 SQL> -- No outlier treatment will be performed during test and apply. The
19:16:04 SQL> -- normalization step is sufficient, since the normalization parameters
19:16:04 SQL> -- already capture the effects of outlier treatment done with build data.
19:16:04 SQL> --
19:16:04 SQL> BEGIN
19:16:04   2  	-- Xform Test data to replace missing values
19:16:04   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:16:04   4  	  miss_table_name => 'svmc_miss_num',
19:16:04   5  	  data_table_name => '&scoretable',
19:16:04   6  	  xform_view_name => 'xformed_apply_miss_num');
19:16:04   7  
19:16:04   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:16:04   9  	  miss_table_name => 'svmc_miss_cat',
19:16:04  10  	  data_table_name => '&scoretable',
19:16:04  11  	  xform_view_name => 'xformed_apply_miss_cat');
19:16:04  12  
19:16:04  13  	-- Normalize the data to be scored
19:16:04  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:16:04  15  	  norm_table_name => 'svmc_norm',
19:16:04  16  	  data_table_name => '&scoretable',
19:16:04  17  	  xform_view_name => 'svmc_apply_prep');
19:16:04  18  END;
19:16:04  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.24
19:16:05 SQL> 
19:16:05 SQL> -- Use same model_name used in score.sql
19:16:05 SQL> DEFINE model_name = 'forex15'
19:16:05 SQL> 
19:16:05 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
19:16:05 SQL> 
19:16:05 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
19:16:05 SQL> 
19:16:05 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
19:16:05   2  SELECT
19:16:05   3  prdate
19:16:05   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
19:16:05   5  ,sysdate
19:16:05   6  ,SUBSTR(prdate,1,3)pair
19:16:05   7  ,SUBSTR(prdate,4,19)ydate
19:16:05   8  FROM svmc_apply_prep
19:16:05   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
19:16:05 SQL> @aud_score1day.sql  2011-01-06 19:00:00
19:16:05 SQL> --
19:16:05 SQL> -- aud_score1day.sql
19:16:05 SQL> --
19:16:05 SQL> 
19:16:05 SQL> CREATE OR REPLACE VIEW sme AS
19:16:05   2  SELECT
19:16:05   3  'aud'||m.ydate prdate
19:16:05   4  ,NULL gatt
19:16:05   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:16:05   6  ,eur_g00
19:16:05   7  ,eur_g01
19:16:05   8  ,eur_g02
19:16:05   9  ,eur_g03
19:16:05  10  ,eur_g04
19:16:05  11  ,eur_g05
19:16:05  12  ,eur_g06
19:16:05  13  ,eur_g07
19:16:05  14  ,eur_g08
19:16:05  15  ,eur_g09
19:16:05  16  ,eur_g10
19:16:05  17  ,eur_g11
19:16:05  18  ,eur_g12
19:16:05  19  ,eur_g13
19:16:05  20  ,eur_g14
19:16:05  21  ,eur_g15
19:16:05  22  ,eur_g16
19:16:05  23  ,eur_g17
19:16:05  24  ,eur_g18
19:16:05  25  ,eur_g19
19:16:05  26  ,eur_g20
19:16:05  27  ,eur_g21
19:16:05  28  ,eur_g22
19:16:05  29  ,eur_g23
19:16:05  30  ,eur_g24
19:16:05  31  ,eur_g25
19:16:05  32  ,eur_g26
19:16:05  33  ,eur_g27
19:16:05  34  ,eur_g28
19:16:05  35  ,eur_g29
19:16:05  36  ,eur_g30
19:16:05  37  ,eur_g31
19:16:05  38  ,eur_g32
19:16:05  39  ,eur_g33
19:16:05  40  ,eur_g34
19:16:05  41  ,eur_g35
19:16:05  42  ,eur_g36
19:16:05  43  ,eur_g37
19:16:05  44  ,eur_g38
19:16:05  45  ,eur_g39
19:16:05  46  ,eur_g40
19:16:05  47  ,eur_g41
19:16:05  48  ,aud_g00
19:16:05  49  ,aud_g01
19:16:05  50  ,aud_g02
19:16:05  51  ,aud_g03
19:16:05  52  ,aud_g04
19:16:05  53  ,aud_g05
19:16:05  54  ,aud_g06
19:16:05  55  ,aud_g07
19:16:05  56  ,aud_g08
19:16:05  57  ,aud_g09
19:16:05  58  ,aud_g10
19:16:05  59  ,aud_g11
19:16:05  60  ,aud_g12
19:16:05  61  ,aud_g13
19:16:05  62  ,aud_g14
19:16:05  63  ,aud_g15
19:16:05  64  ,aud_g16
19:16:05  65  ,aud_g17
19:16:05  66  ,aud_g18
19:16:05  67  ,aud_g19
19:16:05  68  ,aud_g20
19:16:05  69  ,aud_g21
19:16:05  70  ,aud_g22
19:16:05  71  ,aud_g23
19:16:05  72  ,aud_g24
19:16:05  73  ,aud_g25
19:16:05  74  ,aud_g26
19:16:05  75  ,aud_g27
19:16:05  76  ,aud_g28
19:16:05  77  ,aud_g29
19:16:05  78  ,aud_g30
19:16:05  79  ,aud_g31
19:16:05  80  ,aud_g32
19:16:05  81  ,aud_g33
19:16:05  82  ,aud_g34
19:16:05  83  ,aud_g35
19:16:05  84  ,aud_g36
19:16:05  85  ,aud_g37
19:16:05  86  ,aud_g38
19:16:05  87  ,aud_g39
19:16:05  88  ,aud_g40
19:16:05  89  ,aud_g41
19:16:05  90  ,gbp_g00
19:16:05  91  ,gbp_g01
19:16:05  92  ,gbp_g02
19:16:05  93  ,gbp_g03
19:16:05  94  ,gbp_g04
19:16:05  95  ,gbp_g05
19:16:05  96  ,gbp_g06
19:16:05  97  ,gbp_g07
19:16:05  98  ,gbp_g08
19:16:05  99  ,gbp_g09
19:16:05 100  ,gbp_g10
19:16:05 101  ,gbp_g11
19:16:05 102  ,gbp_g12
19:16:05 103  ,gbp_g13
19:16:05 104  ,gbp_g14
19:16:05 105  ,gbp_g15
19:16:05 106  ,gbp_g16
19:16:05 107  ,gbp_g17
19:16:05 108  ,gbp_g18
19:16:05 109  ,gbp_g19
19:16:05 110  ,gbp_g20
19:16:05 111  ,gbp_g21
19:16:05 112  ,gbp_g22
19:16:05 113  ,gbp_g23
19:16:05 114  ,gbp_g24
19:16:05 115  ,gbp_g25
19:16:05 116  ,gbp_g26
19:16:05 117  ,gbp_g27
19:16:05 118  ,gbp_g28
19:16:05 119  ,gbp_g29
19:16:05 120  ,gbp_g30
19:16:05 121  ,gbp_g31
19:16:05 122  ,gbp_g32
19:16:05 123  ,gbp_g33
19:16:05 124  ,gbp_g34
19:16:05 125  ,gbp_g35
19:16:05 126  ,gbp_g36
19:16:05 127  ,gbp_g37
19:16:05 128  ,gbp_g38
19:16:05 129  ,gbp_g39
19:16:05 130  ,gbp_g40
19:16:05 131  ,gbp_g41
19:16:05 132  ,jpy_g00
19:16:05 133  ,jpy_g01
19:16:05 134  ,jpy_g02
19:16:05 135  ,jpy_g03
19:16:05 136  ,jpy_g04
19:16:05 137  ,jpy_g05
19:16:05 138  ,jpy_g06
19:16:05 139  ,jpy_g07
19:16:05 140  ,jpy_g08
19:16:05 141  ,jpy_g09
19:16:05 142  ,jpy_g10
19:16:05 143  ,jpy_g11
19:16:05 144  ,jpy_g12
19:16:05 145  ,jpy_g13
19:16:05 146  ,jpy_g14
19:16:05 147  ,jpy_g15
19:16:05 148  ,jpy_g16
19:16:05 149  ,jpy_g17
19:16:05 150  ,jpy_g18
19:16:05 151  ,jpy_g19
19:16:05 152  ,jpy_g20
19:16:05 153  ,jpy_g21
19:16:05 154  ,jpy_g22
19:16:05 155  ,jpy_g23
19:16:05 156  ,jpy_g24
19:16:05 157  ,jpy_g25
19:16:05 158  ,jpy_g26
19:16:05 159  ,jpy_g27
19:16:05 160  ,jpy_g28
19:16:05 161  ,jpy_g29
19:16:05 162  ,jpy_g30
19:16:05 163  ,jpy_g31
19:16:05 164  ,jpy_g32
19:16:05 165  ,jpy_g33
19:16:05 166  ,jpy_g34
19:16:05 167  ,jpy_g35
19:16:05 168  ,jpy_g36
19:16:05 169  ,jpy_g37
19:16:05 170  ,jpy_g38
19:16:05 171  ,jpy_g39
19:16:05 172  ,jpy_g40
19:16:05 173  ,jpy_g41
19:16:05 174  ,cad_g00
19:16:05 175  ,cad_g01
19:16:05 176  ,cad_g02
19:16:05 177  ,cad_g03
19:16:05 178  ,cad_g04
19:16:05 179  ,cad_g05
19:16:05 180  ,cad_g06
19:16:05 181  ,cad_g07
19:16:05 182  ,cad_g08
19:16:05 183  ,cad_g09
19:16:05 184  ,cad_g10
19:16:05 185  ,cad_g11
19:16:05 186  ,cad_g12
19:16:05 187  ,cad_g13
19:16:05 188  ,cad_g14
19:16:05 189  ,cad_g15
19:16:05 190  ,cad_g16
19:16:05 191  ,cad_g17
19:16:05 192  ,cad_g18
19:16:05 193  ,cad_g19
19:16:05 194  ,cad_g20
19:16:05 195  ,cad_g21
19:16:05 196  ,cad_g22
19:16:05 197  ,cad_g23
19:16:05 198  ,cad_g24
19:16:05 199  ,cad_g25
19:16:05 200  ,cad_g26
19:16:05 201  ,cad_g27
19:16:05 202  ,cad_g28
19:16:05 203  ,cad_g29
19:16:05 204  ,cad_g30
19:16:05 205  ,cad_g31
19:16:05 206  ,cad_g32
19:16:05 207  ,cad_g33
19:16:05 208  ,cad_g34
19:16:05 209  ,cad_g35
19:16:05 210  ,cad_g36
19:16:05 211  ,cad_g37
19:16:05 212  ,cad_g38
19:16:05 213  ,cad_g39
19:16:05 214  ,cad_g40
19:16:05 215  ,cad_g41
19:16:05 216  ,chf_g00
19:16:05 217  ,chf_g01
19:16:05 218  ,chf_g02
19:16:05 219  ,chf_g03
19:16:05 220  ,chf_g04
19:16:05 221  ,chf_g05
19:16:05 222  ,chf_g06
19:16:05 223  ,chf_g07
19:16:05 224  ,chf_g08
19:16:05 225  ,chf_g09
19:16:05 226  ,chf_g10
19:16:05 227  ,chf_g11
19:16:05 228  ,chf_g12
19:16:05 229  ,chf_g13
19:16:05 230  ,chf_g14
19:16:05 231  ,chf_g15
19:16:05 232  ,chf_g16
19:16:05 233  ,chf_g17
19:16:05 234  ,chf_g18
19:16:05 235  ,chf_g19
19:16:05 236  ,chf_g20
19:16:05 237  ,chf_g21
19:16:05 238  ,chf_g22
19:16:05 239  ,chf_g23
19:16:05 240  ,chf_g24
19:16:05 241  ,chf_g25
19:16:05 242  ,chf_g26
19:16:05 243  ,chf_g27
19:16:05 244  ,chf_g28
19:16:05 245  ,chf_g29
19:16:05 246  ,chf_g30
19:16:05 247  ,chf_g31
19:16:05 248  ,chf_g32
19:16:05 249  ,chf_g33
19:16:05 250  ,chf_g34
19:16:05 251  ,chf_g35
19:16:05 252  ,chf_g36
19:16:05 253  ,chf_g37
19:16:05 254  ,chf_g38
19:16:05 255  ,chf_g39
19:16:05 256  ,chf_g40
19:16:05 257  ,chf_g41
19:16:05 258  FROM aud_ms6 m
19:16:05 259  WHERE m.ydate = '&1'||' '||'&2'
19:16:05 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'19:00:00'

View created.

Elapsed: 00:00:00.16
19:16:06 SQL> 
19:16:06 SQL> -- rpt
19:16:06 SQL> -- We should see just 1 row:
19:16:06 SQL> 
19:16:06 SQL> SELECT COUNT(prdate) FROM sme
19:16:06   2  
19:16:06 SQL> -- Build the model:
19:16:06 SQL> CREATE OR REPLACE VIEW bme AS
19:16:06   2  SELECT
19:16:06   3  'aud'||m.ydate prdate
19:16:06   4  ,gatt
19:16:06   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:16:06   6  ,eur_g00
19:16:06   7  ,eur_g01
19:16:06   8  ,eur_g02
19:16:06   9  ,eur_g03
19:16:06  10  ,eur_g04
19:16:06  11  ,eur_g05
19:16:06  12  ,eur_g06
19:16:06  13  ,eur_g07
19:16:06  14  ,eur_g08
19:16:06  15  ,eur_g09
19:16:06  16  ,eur_g10
19:16:06  17  ,eur_g11
19:16:06  18  ,eur_g12
19:16:06  19  ,eur_g13
19:16:06  20  ,eur_g14
19:16:06  21  ,eur_g15
19:16:06  22  ,eur_g16
19:16:06  23  ,eur_g17
19:16:06  24  ,eur_g18
19:16:06  25  ,eur_g19
19:16:06  26  ,eur_g20
19:16:06  27  ,eur_g21
19:16:06  28  ,eur_g22
19:16:06  29  ,eur_g23
19:16:06  30  ,eur_g24
19:16:06  31  ,eur_g25
19:16:06  32  ,eur_g26
19:16:06  33  ,eur_g27
19:16:06  34  ,eur_g28
19:16:06  35  ,eur_g29
19:16:06  36  ,eur_g30
19:16:06  37  ,eur_g31
19:16:06  38  ,eur_g32
19:16:06  39  ,eur_g33
19:16:06  40  ,eur_g34
19:16:06  41  ,eur_g35
19:16:06  42  ,eur_g36
19:16:06  43  ,eur_g37
19:16:06  44  ,eur_g38
19:16:06  45  ,eur_g39
19:16:06  46  ,eur_g40
19:16:06  47  ,eur_g41
19:16:06  48  ,aud_g00
19:16:06  49  ,aud_g01
19:16:06  50  ,aud_g02
19:16:06  51  ,aud_g03
19:16:06  52  ,aud_g04
19:16:06  53  ,aud_g05
19:16:06  54  ,aud_g06
19:16:06  55  ,aud_g07
19:16:06  56  ,aud_g08
19:16:06  57  ,aud_g09
19:16:06  58  ,aud_g10
19:16:06  59  ,aud_g11
19:16:06  60  ,aud_g12
19:16:06  61  ,aud_g13
19:16:06  62  ,aud_g14
19:16:06  63  ,aud_g15
19:16:06  64  ,aud_g16
19:16:06  65  ,aud_g17
19:16:06  66  ,aud_g18
19:16:06  67  ,aud_g19
19:16:06  68  ,aud_g20
19:16:06  69  ,aud_g21
19:16:06  70  ,aud_g22
19:16:06  71  ,aud_g23
19:16:06  72  ,aud_g24
19:16:06  73  ,aud_g25
19:16:06  74  ,aud_g26
19:16:06  75  ,aud_g27
19:16:06  76  ,aud_g28
19:16:06  77  ,aud_g29
19:16:06  78  ,aud_g30
19:16:06  79  ,aud_g31
19:16:06  80  ,aud_g32
19:16:06  81  ,aud_g33
19:16:06  82  ,aud_g34
19:16:06  83  ,aud_g35
19:16:06  84  ,aud_g36
19:16:06  85  ,aud_g37
19:16:06  86  ,aud_g38
19:16:06  87  ,aud_g39
19:16:06  88  ,aud_g40
19:16:06  89  ,aud_g41
19:16:06  90  ,gbp_g00
19:16:06  91  ,gbp_g01
19:16:06  92  ,gbp_g02
19:16:06  93  ,gbp_g03
19:16:06  94  ,gbp_g04
19:16:06  95  ,gbp_g05
19:16:06  96  ,gbp_g06
19:16:06  97  ,gbp_g07
19:16:06  98  ,gbp_g08
19:16:06  99  ,gbp_g09
19:16:06 100  ,gbp_g10
19:16:06 101  ,gbp_g11
19:16:06 102  ,gbp_g12
19:16:06 103  ,gbp_g13
19:16:06 104  ,gbp_g14
19:16:06 105  ,gbp_g15
19:16:06 106  ,gbp_g16
19:16:06 107  ,gbp_g17
19:16:06 108  ,gbp_g18
19:16:06 109  ,gbp_g19
19:16:06 110  ,gbp_g20
19:16:06 111  ,gbp_g21
19:16:06 112  ,gbp_g22
19:16:06 113  ,gbp_g23
19:16:06 114  ,gbp_g24
19:16:06 115  ,gbp_g25
19:16:06 116  ,gbp_g26
19:16:06 117  ,gbp_g27
19:16:06 118  ,gbp_g28
19:16:06 119  ,gbp_g29
19:16:06 120  ,gbp_g30
19:16:06 121  ,gbp_g31
19:16:06 122  ,gbp_g32
19:16:06 123  ,gbp_g33
19:16:06 124  ,gbp_g34
19:16:06 125  ,gbp_g35
19:16:06 126  ,gbp_g36
19:16:06 127  ,gbp_g37
19:16:06 128  ,gbp_g38
19:16:06 129  ,gbp_g39
19:16:06 130  ,gbp_g40
19:16:06 131  ,gbp_g41
19:16:06 132  ,jpy_g00
19:16:06 133  ,jpy_g01
19:16:06 134  ,jpy_g02
19:16:06 135  ,jpy_g03
19:16:06 136  ,jpy_g04
19:16:06 137  ,jpy_g05
19:16:06 138  ,jpy_g06
19:16:06 139  ,jpy_g07
19:16:06 140  ,jpy_g08
19:16:06 141  ,jpy_g09
19:16:06 142  ,jpy_g10
19:16:06 143  ,jpy_g11
19:16:06 144  ,jpy_g12
19:16:06 145  ,jpy_g13
19:16:06 146  ,jpy_g14
19:16:06 147  ,jpy_g15
19:16:06 148  ,jpy_g16
19:16:06 149  ,jpy_g17
19:16:06 150  ,jpy_g18
19:16:06 151  ,jpy_g19
19:16:06 152  ,jpy_g20
19:16:06 153  ,jpy_g21
19:16:06 154  ,jpy_g22
19:16:06 155  ,jpy_g23
19:16:06 156  ,jpy_g24
19:16:06 157  ,jpy_g25
19:16:06 158  ,jpy_g26
19:16:06 159  ,jpy_g27
19:16:06 160  ,jpy_g28
19:16:06 161  ,jpy_g29
19:16:06 162  ,jpy_g30
19:16:06 163  ,jpy_g31
19:16:06 164  ,jpy_g32
19:16:06 165  ,jpy_g33
19:16:06 166  ,jpy_g34
19:16:06 167  ,jpy_g35
19:16:06 168  ,jpy_g36
19:16:06 169  ,jpy_g37
19:16:06 170  ,jpy_g38
19:16:06 171  ,jpy_g39
19:16:06 172  ,jpy_g40
19:16:06 173  ,jpy_g41
19:16:06 174  ,cad_g00
19:16:06 175  ,cad_g01
19:16:06 176  ,cad_g02
19:16:06 177  ,cad_g03
19:16:06 178  ,cad_g04
19:16:06 179  ,cad_g05
19:16:06 180  ,cad_g06
19:16:06 181  ,cad_g07
19:16:06 182  ,cad_g08
19:16:06 183  ,cad_g09
19:16:06 184  ,cad_g10
19:16:06 185  ,cad_g11
19:16:06 186  ,cad_g12
19:16:06 187  ,cad_g13
19:16:06 188  ,cad_g14
19:16:06 189  ,cad_g15
19:16:06 190  ,cad_g16
19:16:06 191  ,cad_g17
19:16:06 192  ,cad_g18
19:16:06 193  ,cad_g19
19:16:06 194  ,cad_g20
19:16:06 195  ,cad_g21
19:16:06 196  ,cad_g22
19:16:06 197  ,cad_g23
19:16:06 198  ,cad_g24
19:16:06 199  ,cad_g25
19:16:06 200  ,cad_g26
19:16:06 201  ,cad_g27
19:16:06 202  ,cad_g28
19:16:06 203  ,cad_g29
19:16:06 204  ,cad_g30
19:16:06 205  ,cad_g31
19:16:06 206  ,cad_g32
19:16:06 207  ,cad_g33
19:16:06 208  ,cad_g34
19:16:06 209  ,cad_g35
19:16:06 210  ,cad_g36
19:16:06 211  ,cad_g37
19:16:06 212  ,cad_g38
19:16:06 213  ,cad_g39
19:16:06 214  ,cad_g40
19:16:06 215  ,cad_g41
19:16:06 216  ,chf_g00
19:16:06 217  ,chf_g01
19:16:06 218  ,chf_g02
19:16:06 219  ,chf_g03
19:16:06 220  ,chf_g04
19:16:06 221  ,chf_g05
19:16:06 222  ,chf_g06
19:16:06 223  ,chf_g07
19:16:06 224  ,chf_g08
19:16:06 225  ,chf_g09
19:16:06 226  ,chf_g10
19:16:06 227  ,chf_g11
19:16:06 228  ,chf_g12
19:16:06 229  ,chf_g13
19:16:06 230  ,chf_g14
19:16:06 231  ,chf_g15
19:16:06 232  ,chf_g16
19:16:06 233  ,chf_g17
19:16:06 234  ,chf_g18
19:16:06 235  ,chf_g19
19:16:06 236  ,chf_g20
19:16:06 237  ,chf_g21
19:16:06 238  ,chf_g22
19:16:06 239  ,chf_g23
19:16:06 240  ,chf_g24
19:16:06 241  ,chf_g25
19:16:06 242  ,chf_g26
19:16:06 243  ,chf_g27
19:16:06 244  ,chf_g28
19:16:06 245  ,chf_g29
19:16:06 246  ,chf_g30
19:16:06 247  ,chf_g31
19:16:06 248  ,chf_g32
19:16:06 249  ,chf_g33
19:16:06 250  ,chf_g34
19:16:06 251  ,chf_g35
19:16:06 252  ,chf_g36
19:16:06 253  ,chf_g37
19:16:06 254  ,chf_g38
19:16:06 255  ,chf_g39
19:16:06 256  ,chf_g40
19:16:06 257  ,chf_g41
19:16:06 258  FROM aud_ms6 m
19:16:06 259  WHERE gatt IN('nup','up')
19:16:06 260  AND 1+m.ydate < '&1'||' '||'&2'
19:16:06 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'19:00:00'

View created.

Elapsed: 00:00:00.12
19:16:06 SQL> 
19:16:06 SQL> -- rpt
19:16:06 SQL> 
19:16:06 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
19:16:06   2  
19:16:06 SQL> SELECT MAX(prdate) FROM bme
19:16:06   2  
19:16:06 SQL> -- Now build model from bme and score sme
19:16:06 SQL> @score1.sql
19:16:06 SQL> -- score1.sql
19:16:06 SQL> 
19:16:06 SQL> -- Does the 1st SVM score
19:16:06 SQL> 
19:16:06 SQL> -- Fill up svmc_apply_prep
19:16:06 SQL> @score.sql
19:16:06 SQL> --
19:16:06 SQL> -- score.sql
19:16:06 SQL> --
19:16:06 SQL> 
19:16:06 SQL> -- usage: score.sql
19:16:06 SQL> 
19:16:06 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
19:16:06 SQL> 
19:16:06 SQL> DEFINE target	= 'gatt'
19:16:06 SQL> DEFINE model_name = 'forex15'
19:16:06 SQL> DEFINE bldtable	= 'bme'
19:16:06 SQL> DEFINE scoretable = 'sme'
19:16:06 SQL> DEFINE case_id	= 'prdate'
19:16:06 SQL> 
19:16:06 SQL> -- Define a variable to help me exclude some columns from some data mining calls
19:16:06 SQL> DEFINE exclude1 = "'&target','&case_id'"
19:16:06 SQL> 
19:16:06 SQL> -- Builds an SVM model using pl/sql.
19:16:06 SQL> 
19:16:06 SQL> -----------------------------------------------------------------------
19:16:06 SQL> --			    BUILD THE MODEL
19:16:06 SQL> -----------------------------------------------------------------------
19:16:06 SQL> 
19:16:06 SQL> -- Cleanup old build data preparation objects for repeat runs
19:16:06 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
19:16:06 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
19:16:06 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
19:16:06 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
19:16:06 SQL> 
19:16:06 SQL> 
19:16:06 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
19:16:06 SQL> --
19:16:06 SQL> -- DROP	TABLE svmc_settings ;
19:16:06 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
19:16:06 SQL> -- DELETE svmc_settings;
19:16:06 SQL> 
19:16:06 SQL> -- The default classification algorithm is Naive Bayes. So override
19:16:06 SQL> -- this choice to SVM using a settings table.
19:16:06 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
19:16:06 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
19:16:06 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
19:16:06 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
19:16:06 SQL> -- models.
19:16:06 SQL> --
19:16:06 SQL> 
19:16:06 SQL> -- Do this once and then comment it out.
19:16:06 SQL> -- That makes script go faster.
19:16:06 SQL> -- BEGIN
19:16:06 SQL> -- -- Populate settings table
19:16:06 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:16:06 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
19:16:06 SQL> --
19:16:06 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:16:06 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
19:16:06 SQL> --
19:16:06 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:16:06 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
19:16:06 SQL> --   COMMIT;
19:16:06 SQL> -- END;
19:16:06 SQL> -- /
19:16:06 SQL> 
19:16:06 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
19:16:06 SQL> 
19:16:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
19:16:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:16:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
19:16:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
19:16:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:16:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:16:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
19:16:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:16:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
19:16:06 SQL> 
19:16:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
19:16:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:16:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:16:06 SQL> 
19:16:06 SQL> --------------------------------
19:16:06 SQL> -- PREPARE BUILD (TRAINING) DATA
19:16:06 SQL> --
19:16:06 SQL> 
19:16:06 SQL> -- 1. Missing Value treatment for all Predictors and
19:16:06 SQL> -- 2. Outlier Treatment and
19:16:06 SQL> -- 3. Normalization are performed below.
19:16:06 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
19:16:06 SQL> --    normalized here.
19:16:06 SQL> 
19:16:06 SQL> BEGIN
19:16:06   2  	-- Perform missing value treatment for all predictors
19:16:06   3  	-- create miss tables
19:16:06   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
19:16:06   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
19:16:06   6  
19:16:06   7  	-- populate miss tables
19:16:06   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
19:16:06   9  	  miss_table_name => 'svmc_miss_num',
19:16:06  10  	  data_table_name => '&bldtable',
19:16:06  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:16:06  12  
19:16:06  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
19:16:06  14  	  miss_table_name => 'svmc_miss_cat',
19:16:06  15  	  data_table_name => '&bldtable',
19:16:06  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:16:06  17  
19:16:06  18  	-- xform input data to replace missing values
19:16:06  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:16:06  20  	  miss_table_name => 'svmc_miss_num',
19:16:06  21  	  data_table_name => '&bldtable',
19:16:06  22  	  xform_view_name => 'xformed_build_miss_num');
19:16:06  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:16:06  24  	  miss_table_name => 'svmc_miss_cat',
19:16:06  25  	  data_table_name => '&bldtable',
19:16:06  26  	  xform_view_name => 'xformed_build_miss_cat');
19:16:06  27  
19:16:06  28  	-- Perform outlier treatment.
19:16:06  29  	-- create clip table
19:16:06  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
19:16:06  31  
19:16:06  32  	-- populate clip table
19:16:06  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
19:16:06  34  	  clip_table_name => 'svmc_clip',
19:16:06  35  	  data_table_name => '&bldtable',
19:16:06  36  	  tail_frac	  => 0.025,
19:16:06  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:16:06  38  
19:16:06  39  	-- xform input data to winsorized data
19:16:06  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
19:16:06  41  	  clip_table_name => 'svmc_clip',
19:16:06  42  	  data_table_name => '&bldtable',
19:16:06  43  	  xform_view_name => 'svmc_winsor');
19:16:06  44  
19:16:06  45  	-- create normalization table
19:16:06  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
19:16:06  47  
19:16:06  48  	-- populate normalization table based on winsorized data
19:16:06  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
19:16:06  50  	  norm_table_name => 'svmc_norm',
19:16:06  51  	  data_table_name => 'svmc_winsor',
19:16:06  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:16:06  53  
19:16:06  54  	-- normalize the original data
19:16:06  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:16:06  56  	  norm_table_name => 'svmc_norm',
19:16:06  57  	  data_table_name => '&bldtable',
19:16:06  58  	  xform_view_name => 'svmc_build_prep');
19:16:06  59  END;
19:16:06  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.40
19:16:24 SQL> 
19:16:24 SQL> ---------------------
19:16:24 SQL> -- CREATE A NEW MODEL
19:16:24 SQL> --
19:16:24 SQL> -- Cleanup old model with the same name for repeat runs
19:16:24 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
19:16:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:16:24   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.96
19:16:25 SQL> 
19:16:25 SQL> -- Build a new SVM Model
19:16:25 SQL> BEGIN
19:16:25   2  	DBMS_DATA_MINING.CREATE_MODEL(
19:16:25   3  	  model_name	      => '&model_name',
19:16:25   4  	  mining_function     => dbms_data_mining.classification,
19:16:25   5  	  data_table_name     => 'svmc_build_prep',
19:16:25   6  	  case_id_column_name => '&case_id',
19:16:25   7  	  target_column_name  => '&target',
19:16:25   8  	  settings_table_name => 'svmc_settings');
19:16:25   9  END;
19:16:25  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.63
19:16:52 SQL> 
19:16:52 SQL> -----------------------------------------------------------------------
19:16:52 SQL> --			       APPLY/score THE MODEL
19:16:52 SQL> -----------------------------------------------------------------------
19:16:52 SQL> 
19:16:52 SQL> -- Cleanup old scoring data preparation objects for repeat runs
19:16:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
19:16:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:16:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
19:16:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
19:16:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:16:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:16:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
19:16:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:16:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
19:16:52 SQL> -----------------------
19:16:52 SQL> -- PREPARE SCORING DATA
19:16:52 SQL> --
19:16:52 SQL> -- If the data for model creation has been prepared, then the data
19:16:52 SQL> -- to be scored using the model must be prepared in the same manner
19:16:52 SQL> -- in order to obtain meaningful results.
19:16:52 SQL> --
19:16:52 SQL> -- 1. Missing Value treatment for all Predictors and
19:16:52 SQL> -- 2. Normalization
19:16:52 SQL> -- No outlier treatment will be performed during test and apply. The
19:16:52 SQL> -- normalization step is sufficient, since the normalization parameters
19:16:52 SQL> -- already capture the effects of outlier treatment done with build data.
19:16:52 SQL> --
19:16:52 SQL> BEGIN
19:16:52   2  	-- Xform Test data to replace missing values
19:16:52   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:16:52   4  	  miss_table_name => 'svmc_miss_num',
19:16:52   5  	  data_table_name => '&scoretable',
19:16:52   6  	  xform_view_name => 'xformed_apply_miss_num');
19:16:52   7  
19:16:52   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:16:52   9  	  miss_table_name => 'svmc_miss_cat',
19:16:52  10  	  data_table_name => '&scoretable',
19:16:52  11  	  xform_view_name => 'xformed_apply_miss_cat');
19:16:52  12  
19:16:52  13  	-- Normalize the data to be scored
19:16:52  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:16:52  15  	  norm_table_name => 'svmc_norm',
19:16:52  16  	  data_table_name => '&scoretable',
19:16:52  17  	  xform_view_name => 'svmc_apply_prep');
19:16:52  18  END;
19:16:52  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.27
19:16:54 SQL> 
19:16:54 SQL> -- Use same model_name used in score.sql
19:16:54 SQL> DEFINE model_name = 'forex15'
19:16:54 SQL> 
19:16:54 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
19:16:54 SQL> 
19:16:54 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
19:16:54 SQL> 
19:16:54 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
19:16:54   2  SELECT
19:16:54   3  prdate
19:16:54   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
19:16:54   5  ,sysdate
19:16:54   6  ,SUBSTR(prdate,1,3)pair
19:16:54   7  ,SUBSTR(prdate,4,19)ydate
19:16:54   8  FROM svmc_apply_prep
19:16:54   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
19:16:54 SQL> @aud_score1day.sql  2011-01-06 19:05:00
19:16:54 SQL> --
19:16:54 SQL> -- aud_score1day.sql
19:16:54 SQL> --
19:16:54 SQL> 
19:16:54 SQL> CREATE OR REPLACE VIEW sme AS
19:16:54   2  SELECT
19:16:54   3  'aud'||m.ydate prdate
19:16:54   4  ,NULL gatt
19:16:54   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:16:54   6  ,eur_g00
19:16:54   7  ,eur_g01
19:16:54   8  ,eur_g02
19:16:54   9  ,eur_g03
19:16:54  10  ,eur_g04
19:16:54  11  ,eur_g05
19:16:54  12  ,eur_g06
19:16:54  13  ,eur_g07
19:16:54  14  ,eur_g08
19:16:54  15  ,eur_g09
19:16:54  16  ,eur_g10
19:16:54  17  ,eur_g11
19:16:54  18  ,eur_g12
19:16:54  19  ,eur_g13
19:16:54  20  ,eur_g14
19:16:54  21  ,eur_g15
19:16:54  22  ,eur_g16
19:16:54  23  ,eur_g17
19:16:54  24  ,eur_g18
19:16:54  25  ,eur_g19
19:16:54  26  ,eur_g20
19:16:54  27  ,eur_g21
19:16:54  28  ,eur_g22
19:16:54  29  ,eur_g23
19:16:54  30  ,eur_g24
19:16:54  31  ,eur_g25
19:16:54  32  ,eur_g26
19:16:54  33  ,eur_g27
19:16:54  34  ,eur_g28
19:16:54  35  ,eur_g29
19:16:54  36  ,eur_g30
19:16:54  37  ,eur_g31
19:16:54  38  ,eur_g32
19:16:54  39  ,eur_g33
19:16:54  40  ,eur_g34
19:16:54  41  ,eur_g35
19:16:54  42  ,eur_g36
19:16:54  43  ,eur_g37
19:16:54  44  ,eur_g38
19:16:54  45  ,eur_g39
19:16:54  46  ,eur_g40
19:16:54  47  ,eur_g41
19:16:54  48  ,aud_g00
19:16:54  49  ,aud_g01
19:16:54  50  ,aud_g02
19:16:54  51  ,aud_g03
19:16:54  52  ,aud_g04
19:16:54  53  ,aud_g05
19:16:54  54  ,aud_g06
19:16:54  55  ,aud_g07
19:16:54  56  ,aud_g08
19:16:54  57  ,aud_g09
19:16:54  58  ,aud_g10
19:16:54  59  ,aud_g11
19:16:54  60  ,aud_g12
19:16:54  61  ,aud_g13
19:16:54  62  ,aud_g14
19:16:54  63  ,aud_g15
19:16:54  64  ,aud_g16
19:16:54  65  ,aud_g17
19:16:54  66  ,aud_g18
19:16:54  67  ,aud_g19
19:16:54  68  ,aud_g20
19:16:54  69  ,aud_g21
19:16:54  70  ,aud_g22
19:16:54  71  ,aud_g23
19:16:54  72  ,aud_g24
19:16:54  73  ,aud_g25
19:16:54  74  ,aud_g26
19:16:54  75  ,aud_g27
19:16:54  76  ,aud_g28
19:16:54  77  ,aud_g29
19:16:54  78  ,aud_g30
19:16:54  79  ,aud_g31
19:16:54  80  ,aud_g32
19:16:54  81  ,aud_g33
19:16:54  82  ,aud_g34
19:16:54  83  ,aud_g35
19:16:54  84  ,aud_g36
19:16:54  85  ,aud_g37
19:16:54  86  ,aud_g38
19:16:54  87  ,aud_g39
19:16:54  88  ,aud_g40
19:16:54  89  ,aud_g41
19:16:54  90  ,gbp_g00
19:16:54  91  ,gbp_g01
19:16:54  92  ,gbp_g02
19:16:54  93  ,gbp_g03
19:16:54  94  ,gbp_g04
19:16:54  95  ,gbp_g05
19:16:54  96  ,gbp_g06
19:16:54  97  ,gbp_g07
19:16:54  98  ,gbp_g08
19:16:54  99  ,gbp_g09
19:16:54 100  ,gbp_g10
19:16:54 101  ,gbp_g11
19:16:54 102  ,gbp_g12
19:16:54 103  ,gbp_g13
19:16:54 104  ,gbp_g14
19:16:54 105  ,gbp_g15
19:16:54 106  ,gbp_g16
19:16:54 107  ,gbp_g17
19:16:54 108  ,gbp_g18
19:16:54 109  ,gbp_g19
19:16:54 110  ,gbp_g20
19:16:54 111  ,gbp_g21
19:16:54 112  ,gbp_g22
19:16:54 113  ,gbp_g23
19:16:54 114  ,gbp_g24
19:16:54 115  ,gbp_g25
19:16:54 116  ,gbp_g26
19:16:54 117  ,gbp_g27
19:16:54 118  ,gbp_g28
19:16:54 119  ,gbp_g29
19:16:54 120  ,gbp_g30
19:16:54 121  ,gbp_g31
19:16:54 122  ,gbp_g32
19:16:54 123  ,gbp_g33
19:16:54 124  ,gbp_g34
19:16:54 125  ,gbp_g35
19:16:54 126  ,gbp_g36
19:16:54 127  ,gbp_g37
19:16:54 128  ,gbp_g38
19:16:54 129  ,gbp_g39
19:16:54 130  ,gbp_g40
19:16:54 131  ,gbp_g41
19:16:54 132  ,jpy_g00
19:16:54 133  ,jpy_g01
19:16:54 134  ,jpy_g02
19:16:54 135  ,jpy_g03
19:16:54 136  ,jpy_g04
19:16:54 137  ,jpy_g05
19:16:54 138  ,jpy_g06
19:16:54 139  ,jpy_g07
19:16:54 140  ,jpy_g08
19:16:54 141  ,jpy_g09
19:16:54 142  ,jpy_g10
19:16:54 143  ,jpy_g11
19:16:54 144  ,jpy_g12
19:16:54 145  ,jpy_g13
19:16:54 146  ,jpy_g14
19:16:54 147  ,jpy_g15
19:16:54 148  ,jpy_g16
19:16:54 149  ,jpy_g17
19:16:54 150  ,jpy_g18
19:16:54 151  ,jpy_g19
19:16:54 152  ,jpy_g20
19:16:54 153  ,jpy_g21
19:16:54 154  ,jpy_g22
19:16:54 155  ,jpy_g23
19:16:54 156  ,jpy_g24
19:16:54 157  ,jpy_g25
19:16:54 158  ,jpy_g26
19:16:54 159  ,jpy_g27
19:16:54 160  ,jpy_g28
19:16:54 161  ,jpy_g29
19:16:54 162  ,jpy_g30
19:16:54 163  ,jpy_g31
19:16:54 164  ,jpy_g32
19:16:54 165  ,jpy_g33
19:16:54 166  ,jpy_g34
19:16:54 167  ,jpy_g35
19:16:54 168  ,jpy_g36
19:16:54 169  ,jpy_g37
19:16:54 170  ,jpy_g38
19:16:54 171  ,jpy_g39
19:16:54 172  ,jpy_g40
19:16:54 173  ,jpy_g41
19:16:54 174  ,cad_g00
19:16:54 175  ,cad_g01
19:16:54 176  ,cad_g02
19:16:54 177  ,cad_g03
19:16:54 178  ,cad_g04
19:16:54 179  ,cad_g05
19:16:54 180  ,cad_g06
19:16:54 181  ,cad_g07
19:16:54 182  ,cad_g08
19:16:54 183  ,cad_g09
19:16:54 184  ,cad_g10
19:16:54 185  ,cad_g11
19:16:54 186  ,cad_g12
19:16:54 187  ,cad_g13
19:16:54 188  ,cad_g14
19:16:54 189  ,cad_g15
19:16:54 190  ,cad_g16
19:16:54 191  ,cad_g17
19:16:54 192  ,cad_g18
19:16:54 193  ,cad_g19
19:16:54 194  ,cad_g20
19:16:54 195  ,cad_g21
19:16:54 196  ,cad_g22
19:16:54 197  ,cad_g23
19:16:54 198  ,cad_g24
19:16:54 199  ,cad_g25
19:16:54 200  ,cad_g26
19:16:54 201  ,cad_g27
19:16:54 202  ,cad_g28
19:16:54 203  ,cad_g29
19:16:54 204  ,cad_g30
19:16:54 205  ,cad_g31
19:16:54 206  ,cad_g32
19:16:54 207  ,cad_g33
19:16:54 208  ,cad_g34
19:16:54 209  ,cad_g35
19:16:54 210  ,cad_g36
19:16:54 211  ,cad_g37
19:16:54 212  ,cad_g38
19:16:54 213  ,cad_g39
19:16:54 214  ,cad_g40
19:16:54 215  ,cad_g41
19:16:54 216  ,chf_g00
19:16:54 217  ,chf_g01
19:16:54 218  ,chf_g02
19:16:54 219  ,chf_g03
19:16:54 220  ,chf_g04
19:16:54 221  ,chf_g05
19:16:54 222  ,chf_g06
19:16:54 223  ,chf_g07
19:16:54 224  ,chf_g08
19:16:54 225  ,chf_g09
19:16:54 226  ,chf_g10
19:16:54 227  ,chf_g11
19:16:54 228  ,chf_g12
19:16:54 229  ,chf_g13
19:16:54 230  ,chf_g14
19:16:54 231  ,chf_g15
19:16:54 232  ,chf_g16
19:16:54 233  ,chf_g17
19:16:54 234  ,chf_g18
19:16:54 235  ,chf_g19
19:16:54 236  ,chf_g20
19:16:54 237  ,chf_g21
19:16:54 238  ,chf_g22
19:16:54 239  ,chf_g23
19:16:54 240  ,chf_g24
19:16:54 241  ,chf_g25
19:16:54 242  ,chf_g26
19:16:54 243  ,chf_g27
19:16:54 244  ,chf_g28
19:16:54 245  ,chf_g29
19:16:54 246  ,chf_g30
19:16:54 247  ,chf_g31
19:16:54 248  ,chf_g32
19:16:54 249  ,chf_g33
19:16:54 250  ,chf_g34
19:16:54 251  ,chf_g35
19:16:54 252  ,chf_g36
19:16:54 253  ,chf_g37
19:16:54 254  ,chf_g38
19:16:54 255  ,chf_g39
19:16:54 256  ,chf_g40
19:16:54 257  ,chf_g41
19:16:54 258  FROM aud_ms6 m
19:16:54 259  WHERE m.ydate = '&1'||' '||'&2'
19:16:54 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'19:05:00'

View created.

Elapsed: 00:00:00.13
19:16:54 SQL> 
19:16:54 SQL> -- rpt
19:16:54 SQL> -- We should see just 1 row:
19:16:54 SQL> 
19:16:54 SQL> SELECT COUNT(prdate) FROM sme
19:16:54   2  
19:16:54 SQL> -- Build the model:
19:16:54 SQL> CREATE OR REPLACE VIEW bme AS
19:16:54   2  SELECT
19:16:54   3  'aud'||m.ydate prdate
19:16:54   4  ,gatt
19:16:54   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:16:54   6  ,eur_g00
19:16:54   7  ,eur_g01
19:16:54   8  ,eur_g02
19:16:54   9  ,eur_g03
19:16:54  10  ,eur_g04
19:16:54  11  ,eur_g05
19:16:54  12  ,eur_g06
19:16:54  13  ,eur_g07
19:16:54  14  ,eur_g08
19:16:54  15  ,eur_g09
19:16:54  16  ,eur_g10
19:16:54  17  ,eur_g11
19:16:54  18  ,eur_g12
19:16:54  19  ,eur_g13
19:16:54  20  ,eur_g14
19:16:54  21  ,eur_g15
19:16:54  22  ,eur_g16
19:16:54  23  ,eur_g17
19:16:54  24  ,eur_g18
19:16:54  25  ,eur_g19
19:16:54  26  ,eur_g20
19:16:54  27  ,eur_g21
19:16:54  28  ,eur_g22
19:16:54  29  ,eur_g23
19:16:54  30  ,eur_g24
19:16:54  31  ,eur_g25
19:16:54  32  ,eur_g26
19:16:54  33  ,eur_g27
19:16:54  34  ,eur_g28
19:16:54  35  ,eur_g29
19:16:54  36  ,eur_g30
19:16:54  37  ,eur_g31
19:16:54  38  ,eur_g32
19:16:54  39  ,eur_g33
19:16:54  40  ,eur_g34
19:16:54  41  ,eur_g35
19:16:54  42  ,eur_g36
19:16:54  43  ,eur_g37
19:16:54  44  ,eur_g38
19:16:54  45  ,eur_g39
19:16:54  46  ,eur_g40
19:16:54  47  ,eur_g41
19:16:54  48  ,aud_g00
19:16:54  49  ,aud_g01
19:16:54  50  ,aud_g02
19:16:54  51  ,aud_g03
19:16:54  52  ,aud_g04
19:16:54  53  ,aud_g05
19:16:54  54  ,aud_g06
19:16:54  55  ,aud_g07
19:16:54  56  ,aud_g08
19:16:54  57  ,aud_g09
19:16:54  58  ,aud_g10
19:16:54  59  ,aud_g11
19:16:54  60  ,aud_g12
19:16:54  61  ,aud_g13
19:16:54  62  ,aud_g14
19:16:54  63  ,aud_g15
19:16:54  64  ,aud_g16
19:16:54  65  ,aud_g17
19:16:54  66  ,aud_g18
19:16:54  67  ,aud_g19
19:16:54  68  ,aud_g20
19:16:54  69  ,aud_g21
19:16:54  70  ,aud_g22
19:16:54  71  ,aud_g23
19:16:54  72  ,aud_g24
19:16:54  73  ,aud_g25
19:16:54  74  ,aud_g26
19:16:54  75  ,aud_g27
19:16:54  76  ,aud_g28
19:16:54  77  ,aud_g29
19:16:54  78  ,aud_g30
19:16:54  79  ,aud_g31
19:16:54  80  ,aud_g32
19:16:54  81  ,aud_g33
19:16:54  82  ,aud_g34
19:16:54  83  ,aud_g35
19:16:54  84  ,aud_g36
19:16:54  85  ,aud_g37
19:16:54  86  ,aud_g38
19:16:54  87  ,aud_g39
19:16:54  88  ,aud_g40
19:16:54  89  ,aud_g41
19:16:54  90  ,gbp_g00
19:16:54  91  ,gbp_g01
19:16:54  92  ,gbp_g02
19:16:54  93  ,gbp_g03
19:16:54  94  ,gbp_g04
19:16:54  95  ,gbp_g05
19:16:54  96  ,gbp_g06
19:16:54  97  ,gbp_g07
19:16:54  98  ,gbp_g08
19:16:54  99  ,gbp_g09
19:16:54 100  ,gbp_g10
19:16:54 101  ,gbp_g11
19:16:54 102  ,gbp_g12
19:16:54 103  ,gbp_g13
19:16:54 104  ,gbp_g14
19:16:54 105  ,gbp_g15
19:16:54 106  ,gbp_g16
19:16:54 107  ,gbp_g17
19:16:54 108  ,gbp_g18
19:16:54 109  ,gbp_g19
19:16:54 110  ,gbp_g20
19:16:54 111  ,gbp_g21
19:16:54 112  ,gbp_g22
19:16:54 113  ,gbp_g23
19:16:54 114  ,gbp_g24
19:16:54 115  ,gbp_g25
19:16:54 116  ,gbp_g26
19:16:54 117  ,gbp_g27
19:16:54 118  ,gbp_g28
19:16:54 119  ,gbp_g29
19:16:54 120  ,gbp_g30
19:16:54 121  ,gbp_g31
19:16:54 122  ,gbp_g32
19:16:54 123  ,gbp_g33
19:16:54 124  ,gbp_g34
19:16:54 125  ,gbp_g35
19:16:54 126  ,gbp_g36
19:16:54 127  ,gbp_g37
19:16:54 128  ,gbp_g38
19:16:54 129  ,gbp_g39
19:16:54 130  ,gbp_g40
19:16:54 131  ,gbp_g41
19:16:54 132  ,jpy_g00
19:16:54 133  ,jpy_g01
19:16:54 134  ,jpy_g02
19:16:54 135  ,jpy_g03
19:16:54 136  ,jpy_g04
19:16:54 137  ,jpy_g05
19:16:54 138  ,jpy_g06
19:16:54 139  ,jpy_g07
19:16:54 140  ,jpy_g08
19:16:54 141  ,jpy_g09
19:16:54 142  ,jpy_g10
19:16:54 143  ,jpy_g11
19:16:54 144  ,jpy_g12
19:16:54 145  ,jpy_g13
19:16:54 146  ,jpy_g14
19:16:54 147  ,jpy_g15
19:16:54 148  ,jpy_g16
19:16:54 149  ,jpy_g17
19:16:54 150  ,jpy_g18
19:16:54 151  ,jpy_g19
19:16:54 152  ,jpy_g20
19:16:54 153  ,jpy_g21
19:16:54 154  ,jpy_g22
19:16:54 155  ,jpy_g23
19:16:54 156  ,jpy_g24
19:16:54 157  ,jpy_g25
19:16:54 158  ,jpy_g26
19:16:54 159  ,jpy_g27
19:16:54 160  ,jpy_g28
19:16:54 161  ,jpy_g29
19:16:54 162  ,jpy_g30
19:16:54 163  ,jpy_g31
19:16:54 164  ,jpy_g32
19:16:54 165  ,jpy_g33
19:16:54 166  ,jpy_g34
19:16:54 167  ,jpy_g35
19:16:54 168  ,jpy_g36
19:16:54 169  ,jpy_g37
19:16:54 170  ,jpy_g38
19:16:54 171  ,jpy_g39
19:16:54 172  ,jpy_g40
19:16:54 173  ,jpy_g41
19:16:54 174  ,cad_g00
19:16:54 175  ,cad_g01
19:16:54 176  ,cad_g02
19:16:54 177  ,cad_g03
19:16:54 178  ,cad_g04
19:16:54 179  ,cad_g05
19:16:54 180  ,cad_g06
19:16:54 181  ,cad_g07
19:16:54 182  ,cad_g08
19:16:54 183  ,cad_g09
19:16:54 184  ,cad_g10
19:16:54 185  ,cad_g11
19:16:54 186  ,cad_g12
19:16:54 187  ,cad_g13
19:16:54 188  ,cad_g14
19:16:54 189  ,cad_g15
19:16:54 190  ,cad_g16
19:16:54 191  ,cad_g17
19:16:54 192  ,cad_g18
19:16:54 193  ,cad_g19
19:16:54 194  ,cad_g20
19:16:54 195  ,cad_g21
19:16:54 196  ,cad_g22
19:16:54 197  ,cad_g23
19:16:54 198  ,cad_g24
19:16:54 199  ,cad_g25
19:16:54 200  ,cad_g26
19:16:54 201  ,cad_g27
19:16:54 202  ,cad_g28
19:16:54 203  ,cad_g29
19:16:54 204  ,cad_g30
19:16:54 205  ,cad_g31
19:16:54 206  ,cad_g32
19:16:54 207  ,cad_g33
19:16:54 208  ,cad_g34
19:16:54 209  ,cad_g35
19:16:54 210  ,cad_g36
19:16:54 211  ,cad_g37
19:16:54 212  ,cad_g38
19:16:54 213  ,cad_g39
19:16:54 214  ,cad_g40
19:16:54 215  ,cad_g41
19:16:54 216  ,chf_g00
19:16:54 217  ,chf_g01
19:16:54 218  ,chf_g02
19:16:54 219  ,chf_g03
19:16:54 220  ,chf_g04
19:16:54 221  ,chf_g05
19:16:54 222  ,chf_g06
19:16:54 223  ,chf_g07
19:16:54 224  ,chf_g08
19:16:54 225  ,chf_g09
19:16:54 226  ,chf_g10
19:16:54 227  ,chf_g11
19:16:54 228  ,chf_g12
19:16:54 229  ,chf_g13
19:16:54 230  ,chf_g14
19:16:54 231  ,chf_g15
19:16:54 232  ,chf_g16
19:16:54 233  ,chf_g17
19:16:54 234  ,chf_g18
19:16:54 235  ,chf_g19
19:16:54 236  ,chf_g20
19:16:54 237  ,chf_g21
19:16:54 238  ,chf_g22
19:16:54 239  ,chf_g23
19:16:54 240  ,chf_g24
19:16:54 241  ,chf_g25
19:16:54 242  ,chf_g26
19:16:54 243  ,chf_g27
19:16:54 244  ,chf_g28
19:16:54 245  ,chf_g29
19:16:54 246  ,chf_g30
19:16:54 247  ,chf_g31
19:16:54 248  ,chf_g32
19:16:54 249  ,chf_g33
19:16:54 250  ,chf_g34
19:16:54 251  ,chf_g35
19:16:54 252  ,chf_g36
19:16:54 253  ,chf_g37
19:16:54 254  ,chf_g38
19:16:54 255  ,chf_g39
19:16:54 256  ,chf_g40
19:16:54 257  ,chf_g41
19:16:54 258  FROM aud_ms6 m
19:16:54 259  WHERE gatt IN('nup','up')
19:16:54 260  AND 1+m.ydate < '&1'||' '||'&2'
19:16:54 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'19:05:00'

View created.

Elapsed: 00:00:00.12
19:16:54 SQL> 
19:16:54 SQL> -- rpt
19:16:54 SQL> 
19:16:54 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
19:16:54   2  
19:16:54 SQL> SELECT MAX(prdate) FROM bme
19:16:54   2  
19:16:54 SQL> -- Now build model from bme and score sme
19:16:54 SQL> @score1.sql
19:16:54 SQL> -- score1.sql
19:16:54 SQL> 
19:16:54 SQL> -- Does the 1st SVM score
19:16:54 SQL> 
19:16:54 SQL> -- Fill up svmc_apply_prep
19:16:54 SQL> @score.sql
19:16:54 SQL> --
19:16:54 SQL> -- score.sql
19:16:54 SQL> --
19:16:54 SQL> 
19:16:54 SQL> -- usage: score.sql
19:16:54 SQL> 
19:16:54 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
19:16:54 SQL> 
19:16:54 SQL> DEFINE target	= 'gatt'
19:16:54 SQL> DEFINE model_name = 'forex15'
19:16:54 SQL> DEFINE bldtable	= 'bme'
19:16:54 SQL> DEFINE scoretable = 'sme'
19:16:54 SQL> DEFINE case_id	= 'prdate'
19:16:54 SQL> 
19:16:54 SQL> -- Define a variable to help me exclude some columns from some data mining calls
19:16:54 SQL> DEFINE exclude1 = "'&target','&case_id'"
19:16:54 SQL> 
19:16:54 SQL> -- Builds an SVM model using pl/sql.
19:16:54 SQL> 
19:16:54 SQL> -----------------------------------------------------------------------
19:16:54 SQL> --			    BUILD THE MODEL
19:16:54 SQL> -----------------------------------------------------------------------
19:16:54 SQL> 
19:16:54 SQL> -- Cleanup old build data preparation objects for repeat runs
19:16:54 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
19:16:54 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
19:16:54 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
19:16:54 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
19:16:54 SQL> 
19:16:54 SQL> 
19:16:54 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
19:16:54 SQL> --
19:16:54 SQL> -- DROP	TABLE svmc_settings ;
19:16:54 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
19:16:54 SQL> -- DELETE svmc_settings;
19:16:54 SQL> 
19:16:54 SQL> -- The default classification algorithm is Naive Bayes. So override
19:16:54 SQL> -- this choice to SVM using a settings table.
19:16:54 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
19:16:54 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
19:16:54 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
19:16:54 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
19:16:54 SQL> -- models.
19:16:54 SQL> --
19:16:54 SQL> 
19:16:54 SQL> -- Do this once and then comment it out.
19:16:54 SQL> -- That makes script go faster.
19:16:54 SQL> -- BEGIN
19:16:54 SQL> -- -- Populate settings table
19:16:54 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:16:54 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
19:16:54 SQL> --
19:16:54 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:16:54 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
19:16:54 SQL> --
19:16:54 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:16:54 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
19:16:54 SQL> --   COMMIT;
19:16:54 SQL> -- END;
19:16:54 SQL> -- /
19:16:54 SQL> 
19:16:54 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
19:16:54 SQL> 
19:16:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
19:16:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:16:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:16:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
19:16:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:16:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:16:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
19:16:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:16:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:16:54 SQL> 
19:16:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
19:16:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:16:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:16:54 SQL> 
19:16:54 SQL> --------------------------------
19:16:54 SQL> -- PREPARE BUILD (TRAINING) DATA
19:16:54 SQL> --
19:16:54 SQL> 
19:16:54 SQL> -- 1. Missing Value treatment for all Predictors and
19:16:54 SQL> -- 2. Outlier Treatment and
19:16:54 SQL> -- 3. Normalization are performed below.
19:16:54 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
19:16:54 SQL> --    normalized here.
19:16:54 SQL> 
19:16:54 SQL> BEGIN
19:16:54   2  	-- Perform missing value treatment for all predictors
19:16:54   3  	-- create miss tables
19:16:54   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
19:16:54   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
19:16:54   6  
19:16:54   7  	-- populate miss tables
19:16:54   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
19:16:54   9  	  miss_table_name => 'svmc_miss_num',
19:16:54  10  	  data_table_name => '&bldtable',
19:16:54  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:16:54  12  
19:16:54  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
19:16:54  14  	  miss_table_name => 'svmc_miss_cat',
19:16:54  15  	  data_table_name => '&bldtable',
19:16:54  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:16:54  17  
19:16:54  18  	-- xform input data to replace missing values
19:16:54  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:16:54  20  	  miss_table_name => 'svmc_miss_num',
19:16:54  21  	  data_table_name => '&bldtable',
19:16:54  22  	  xform_view_name => 'xformed_build_miss_num');
19:16:54  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:16:54  24  	  miss_table_name => 'svmc_miss_cat',
19:16:54  25  	  data_table_name => '&bldtable',
19:16:54  26  	  xform_view_name => 'xformed_build_miss_cat');
19:16:54  27  
19:16:54  28  	-- Perform outlier treatment.
19:16:54  29  	-- create clip table
19:16:54  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
19:16:54  31  
19:16:54  32  	-- populate clip table
19:16:54  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
19:16:54  34  	  clip_table_name => 'svmc_clip',
19:16:54  35  	  data_table_name => '&bldtable',
19:16:54  36  	  tail_frac	  => 0.025,
19:16:54  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:16:54  38  
19:16:54  39  	-- xform input data to winsorized data
19:16:54  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
19:16:54  41  	  clip_table_name => 'svmc_clip',
19:16:54  42  	  data_table_name => '&bldtable',
19:16:54  43  	  xform_view_name => 'svmc_winsor');
19:16:54  44  
19:16:54  45  	-- create normalization table
19:16:54  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
19:16:54  47  
19:16:54  48  	-- populate normalization table based on winsorized data
19:16:54  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
19:16:54  50  	  norm_table_name => 'svmc_norm',
19:16:54  51  	  data_table_name => 'svmc_winsor',
19:16:54  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:16:54  53  
19:16:54  54  	-- normalize the original data
19:16:54  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:16:54  56  	  norm_table_name => 'svmc_norm',
19:16:54  57  	  data_table_name => '&bldtable',
19:16:54  58  	  xform_view_name => 'svmc_build_prep');
19:16:54  59  END;
19:16:54  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.61
19:17:13 SQL> 
19:17:13 SQL> ---------------------
19:17:13 SQL> -- CREATE A NEW MODEL
19:17:13 SQL> --
19:17:13 SQL> -- Cleanup old model with the same name for repeat runs
19:17:13 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
19:17:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:17:13   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.02
19:17:14 SQL> 
19:17:14 SQL> -- Build a new SVM Model
19:17:14 SQL> BEGIN
19:17:14   2  	DBMS_DATA_MINING.CREATE_MODEL(
19:17:14   3  	  model_name	      => '&model_name',
19:17:14   4  	  mining_function     => dbms_data_mining.classification,
19:17:14   5  	  data_table_name     => 'svmc_build_prep',
19:17:14   6  	  case_id_column_name => '&case_id',
19:17:14   7  	  target_column_name  => '&target',
19:17:14   8  	  settings_table_name => 'svmc_settings');
19:17:14   9  END;
19:17:14  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.72
19:17:41 SQL> 
19:17:41 SQL> -----------------------------------------------------------------------
19:17:41 SQL> --			       APPLY/score THE MODEL
19:17:41 SQL> -----------------------------------------------------------------------
19:17:41 SQL> 
19:17:41 SQL> -- Cleanup old scoring data preparation objects for repeat runs
19:17:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
19:17:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:17:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
19:17:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
19:17:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:17:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:17:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
19:17:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:17:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:17:41 SQL> -----------------------
19:17:41 SQL> -- PREPARE SCORING DATA
19:17:41 SQL> --
19:17:41 SQL> -- If the data for model creation has been prepared, then the data
19:17:41 SQL> -- to be scored using the model must be prepared in the same manner
19:17:41 SQL> -- in order to obtain meaningful results.
19:17:41 SQL> --
19:17:41 SQL> -- 1. Missing Value treatment for all Predictors and
19:17:41 SQL> -- 2. Normalization
19:17:41 SQL> -- No outlier treatment will be performed during test and apply. The
19:17:41 SQL> -- normalization step is sufficient, since the normalization parameters
19:17:41 SQL> -- already capture the effects of outlier treatment done with build data.
19:17:41 SQL> --
19:17:41 SQL> BEGIN
19:17:41   2  	-- Xform Test data to replace missing values
19:17:41   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:17:41   4  	  miss_table_name => 'svmc_miss_num',
19:17:41   5  	  data_table_name => '&scoretable',
19:17:41   6  	  xform_view_name => 'xformed_apply_miss_num');
19:17:41   7  
19:17:41   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:17:41   9  	  miss_table_name => 'svmc_miss_cat',
19:17:41  10  	  data_table_name => '&scoretable',
19:17:41  11  	  xform_view_name => 'xformed_apply_miss_cat');
19:17:41  12  
19:17:41  13  	-- Normalize the data to be scored
19:17:41  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:17:41  15  	  norm_table_name => 'svmc_norm',
19:17:41  16  	  data_table_name => '&scoretable',
19:17:41  17  	  xform_view_name => 'svmc_apply_prep');
19:17:41  18  END;
19:17:41  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.27
19:17:42 SQL> 
19:17:42 SQL> -- Use same model_name used in score.sql
19:17:42 SQL> DEFINE model_name = 'forex15'
19:17:42 SQL> 
19:17:42 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
19:17:42 SQL> 
19:17:42 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
19:17:42 SQL> 
19:17:42 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
19:17:42   2  SELECT
19:17:42   3  prdate
19:17:42   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
19:17:42   5  ,sysdate
19:17:42   6  ,SUBSTR(prdate,1,3)pair
19:17:42   7  ,SUBSTR(prdate,4,19)ydate
19:17:42   8  FROM svmc_apply_prep
19:17:42   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
19:17:42 SQL> @aud_score1day_gattn.sql	2011-01-06 18:50:00
19:17:42 SQL> --
19:17:42 SQL> -- aud_score1day_gattn.sql
19:17:42 SQL> --
19:17:42 SQL> 
19:17:42 SQL> CREATE OR REPLACE VIEW sme AS
19:17:42   2  SELECT
19:17:42   3  'aud'||m.ydate prdate
19:17:42   4  ,NULL gattn
19:17:42   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:17:42   6  ,eur_g00
19:17:42   7  ,eur_g01
19:17:42   8  ,eur_g02
19:17:42   9  ,eur_g03
19:17:42  10  ,eur_g04
19:17:42  11  ,eur_g05
19:17:42  12  ,eur_g06
19:17:42  13  ,eur_g07
19:17:42  14  ,eur_g08
19:17:42  15  ,eur_g09
19:17:42  16  ,eur_g10
19:17:42  17  ,eur_g11
19:17:42  18  ,eur_g12
19:17:42  19  ,eur_g13
19:17:42  20  ,eur_g14
19:17:42  21  ,eur_g15
19:17:42  22  ,eur_g16
19:17:42  23  ,eur_g17
19:17:42  24  ,eur_g18
19:17:42  25  ,eur_g19
19:17:42  26  ,eur_g20
19:17:42  27  ,eur_g21
19:17:42  28  ,eur_g22
19:17:42  29  ,eur_g23
19:17:42  30  ,eur_g24
19:17:42  31  ,eur_g25
19:17:42  32  ,eur_g26
19:17:42  33  ,eur_g27
19:17:42  34  ,eur_g28
19:17:42  35  ,eur_g29
19:17:42  36  ,eur_g30
19:17:42  37  ,eur_g31
19:17:42  38  ,eur_g32
19:17:42  39  ,eur_g33
19:17:42  40  ,eur_g34
19:17:42  41  ,eur_g35
19:17:42  42  ,eur_g36
19:17:42  43  ,eur_g37
19:17:42  44  ,eur_g38
19:17:42  45  ,eur_g39
19:17:42  46  ,eur_g40
19:17:42  47  ,eur_g41
19:17:42  48  ,aud_g00
19:17:42  49  ,aud_g01
19:17:42  50  ,aud_g02
19:17:42  51  ,aud_g03
19:17:42  52  ,aud_g04
19:17:42  53  ,aud_g05
19:17:42  54  ,aud_g06
19:17:42  55  ,aud_g07
19:17:42  56  ,aud_g08
19:17:42  57  ,aud_g09
19:17:42  58  ,aud_g10
19:17:42  59  ,aud_g11
19:17:42  60  ,aud_g12
19:17:42  61  ,aud_g13
19:17:42  62  ,aud_g14
19:17:42  63  ,aud_g15
19:17:42  64  ,aud_g16
19:17:42  65  ,aud_g17
19:17:42  66  ,aud_g18
19:17:42  67  ,aud_g19
19:17:42  68  ,aud_g20
19:17:42  69  ,aud_g21
19:17:42  70  ,aud_g22
19:17:42  71  ,aud_g23
19:17:42  72  ,aud_g24
19:17:42  73  ,aud_g25
19:17:42  74  ,aud_g26
19:17:42  75  ,aud_g27
19:17:42  76  ,aud_g28
19:17:42  77  ,aud_g29
19:17:42  78  ,aud_g30
19:17:42  79  ,aud_g31
19:17:42  80  ,aud_g32
19:17:42  81  ,aud_g33
19:17:42  82  ,aud_g34
19:17:42  83  ,aud_g35
19:17:42  84  ,aud_g36
19:17:42  85  ,aud_g37
19:17:42  86  ,aud_g38
19:17:42  87  ,aud_g39
19:17:42  88  ,aud_g40
19:17:42  89  ,aud_g41
19:17:42  90  ,gbp_g00
19:17:42  91  ,gbp_g01
19:17:42  92  ,gbp_g02
19:17:42  93  ,gbp_g03
19:17:42  94  ,gbp_g04
19:17:42  95  ,gbp_g05
19:17:42  96  ,gbp_g06
19:17:42  97  ,gbp_g07
19:17:42  98  ,gbp_g08
19:17:42  99  ,gbp_g09
19:17:42 100  ,gbp_g10
19:17:42 101  ,gbp_g11
19:17:42 102  ,gbp_g12
19:17:42 103  ,gbp_g13
19:17:42 104  ,gbp_g14
19:17:42 105  ,gbp_g15
19:17:42 106  ,gbp_g16
19:17:42 107  ,gbp_g17
19:17:42 108  ,gbp_g18
19:17:42 109  ,gbp_g19
19:17:42 110  ,gbp_g20
19:17:42 111  ,gbp_g21
19:17:42 112  ,gbp_g22
19:17:42 113  ,gbp_g23
19:17:42 114  ,gbp_g24
19:17:42 115  ,gbp_g25
19:17:42 116  ,gbp_g26
19:17:42 117  ,gbp_g27
19:17:42 118  ,gbp_g28
19:17:42 119  ,gbp_g29
19:17:42 120  ,gbp_g30
19:17:42 121  ,gbp_g31
19:17:42 122  ,gbp_g32
19:17:42 123  ,gbp_g33
19:17:42 124  ,gbp_g34
19:17:42 125  ,gbp_g35
19:17:42 126  ,gbp_g36
19:17:42 127  ,gbp_g37
19:17:42 128  ,gbp_g38
19:17:42 129  ,gbp_g39
19:17:42 130  ,gbp_g40
19:17:42 131  ,gbp_g41
19:17:42 132  ,jpy_g00
19:17:42 133  ,jpy_g01
19:17:42 134  ,jpy_g02
19:17:42 135  ,jpy_g03
19:17:42 136  ,jpy_g04
19:17:42 137  ,jpy_g05
19:17:42 138  ,jpy_g06
19:17:42 139  ,jpy_g07
19:17:42 140  ,jpy_g08
19:17:42 141  ,jpy_g09
19:17:42 142  ,jpy_g10
19:17:42 143  ,jpy_g11
19:17:42 144  ,jpy_g12
19:17:42 145  ,jpy_g13
19:17:42 146  ,jpy_g14
19:17:42 147  ,jpy_g15
19:17:42 148  ,jpy_g16
19:17:42 149  ,jpy_g17
19:17:42 150  ,jpy_g18
19:17:42 151  ,jpy_g19
19:17:42 152  ,jpy_g20
19:17:42 153  ,jpy_g21
19:17:42 154  ,jpy_g22
19:17:42 155  ,jpy_g23
19:17:42 156  ,jpy_g24
19:17:42 157  ,jpy_g25
19:17:42 158  ,jpy_g26
19:17:42 159  ,jpy_g27
19:17:42 160  ,jpy_g28
19:17:42 161  ,jpy_g29
19:17:42 162  ,jpy_g30
19:17:42 163  ,jpy_g31
19:17:42 164  ,jpy_g32
19:17:42 165  ,jpy_g33
19:17:42 166  ,jpy_g34
19:17:42 167  ,jpy_g35
19:17:42 168  ,jpy_g36
19:17:42 169  ,jpy_g37
19:17:42 170  ,jpy_g38
19:17:42 171  ,jpy_g39
19:17:42 172  ,jpy_g40
19:17:42 173  ,jpy_g41
19:17:42 174  ,cad_g00
19:17:42 175  ,cad_g01
19:17:42 176  ,cad_g02
19:17:42 177  ,cad_g03
19:17:42 178  ,cad_g04
19:17:42 179  ,cad_g05
19:17:42 180  ,cad_g06
19:17:42 181  ,cad_g07
19:17:42 182  ,cad_g08
19:17:42 183  ,cad_g09
19:17:42 184  ,cad_g10
19:17:42 185  ,cad_g11
19:17:42 186  ,cad_g12
19:17:42 187  ,cad_g13
19:17:42 188  ,cad_g14
19:17:42 189  ,cad_g15
19:17:42 190  ,cad_g16
19:17:42 191  ,cad_g17
19:17:42 192  ,cad_g18
19:17:42 193  ,cad_g19
19:17:42 194  ,cad_g20
19:17:42 195  ,cad_g21
19:17:42 196  ,cad_g22
19:17:42 197  ,cad_g23
19:17:42 198  ,cad_g24
19:17:42 199  ,cad_g25
19:17:42 200  ,cad_g26
19:17:42 201  ,cad_g27
19:17:42 202  ,cad_g28
19:17:42 203  ,cad_g29
19:17:42 204  ,cad_g30
19:17:42 205  ,cad_g31
19:17:42 206  ,cad_g32
19:17:42 207  ,cad_g33
19:17:42 208  ,cad_g34
19:17:42 209  ,cad_g35
19:17:42 210  ,cad_g36
19:17:42 211  ,cad_g37
19:17:42 212  ,cad_g38
19:17:42 213  ,cad_g39
19:17:42 214  ,cad_g40
19:17:42 215  ,cad_g41
19:17:42 216  ,chf_g00
19:17:42 217  ,chf_g01
19:17:42 218  ,chf_g02
19:17:42 219  ,chf_g03
19:17:42 220  ,chf_g04
19:17:42 221  ,chf_g05
19:17:42 222  ,chf_g06
19:17:42 223  ,chf_g07
19:17:42 224  ,chf_g08
19:17:42 225  ,chf_g09
19:17:42 226  ,chf_g10
19:17:42 227  ,chf_g11
19:17:42 228  ,chf_g12
19:17:42 229  ,chf_g13
19:17:42 230  ,chf_g14
19:17:42 231  ,chf_g15
19:17:42 232  ,chf_g16
19:17:42 233  ,chf_g17
19:17:42 234  ,chf_g18
19:17:42 235  ,chf_g19
19:17:42 236  ,chf_g20
19:17:42 237  ,chf_g21
19:17:42 238  ,chf_g22
19:17:42 239  ,chf_g23
19:17:42 240  ,chf_g24
19:17:42 241  ,chf_g25
19:17:42 242  ,chf_g26
19:17:42 243  ,chf_g27
19:17:42 244  ,chf_g28
19:17:42 245  ,chf_g29
19:17:42 246  ,chf_g30
19:17:42 247  ,chf_g31
19:17:42 248  ,chf_g32
19:17:42 249  ,chf_g33
19:17:42 250  ,chf_g34
19:17:42 251  ,chf_g35
19:17:42 252  ,chf_g36
19:17:42 253  ,chf_g37
19:17:42 254  ,chf_g38
19:17:42 255  ,chf_g39
19:17:42 256  ,chf_g40
19:17:42 257  ,chf_g41
19:17:42 258  FROM aud_ms6 m
19:17:42 259  WHERE m.ydate = '&1'||' '||'&2'
19:17:42 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'18:50:00'

View created.

Elapsed: 00:00:00.12
19:17:42 SQL> 
19:17:42 SQL> -- rpt
19:17:42 SQL> -- We should see just 1 row:
19:17:42 SQL> 
19:17:42 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
19:17:42 SQL> 
19:17:42 SQL> -- Build the model:
19:17:42 SQL> CREATE OR REPLACE VIEW bme AS
19:17:42   2  SELECT
19:17:42   3  'aud'||m.ydate prdate
19:17:42   4  ,gattn
19:17:42   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:17:42   6  ,eur_g00
19:17:42   7  ,eur_g01
19:17:42   8  ,eur_g02
19:17:42   9  ,eur_g03
19:17:42  10  ,eur_g04
19:17:42  11  ,eur_g05
19:17:42  12  ,eur_g06
19:17:42  13  ,eur_g07
19:17:42  14  ,eur_g08
19:17:42  15  ,eur_g09
19:17:42  16  ,eur_g10
19:17:42  17  ,eur_g11
19:17:42  18  ,eur_g12
19:17:42  19  ,eur_g13
19:17:42  20  ,eur_g14
19:17:42  21  ,eur_g15
19:17:42  22  ,eur_g16
19:17:42  23  ,eur_g17
19:17:42  24  ,eur_g18
19:17:42  25  ,eur_g19
19:17:42  26  ,eur_g20
19:17:42  27  ,eur_g21
19:17:42  28  ,eur_g22
19:17:42  29  ,eur_g23
19:17:42  30  ,eur_g24
19:17:42  31  ,eur_g25
19:17:42  32  ,eur_g26
19:17:42  33  ,eur_g27
19:17:42  34  ,eur_g28
19:17:42  35  ,eur_g29
19:17:42  36  ,eur_g30
19:17:42  37  ,eur_g31
19:17:42  38  ,eur_g32
19:17:42  39  ,eur_g33
19:17:42  40  ,eur_g34
19:17:42  41  ,eur_g35
19:17:42  42  ,eur_g36
19:17:42  43  ,eur_g37
19:17:42  44  ,eur_g38
19:17:42  45  ,eur_g39
19:17:42  46  ,eur_g40
19:17:42  47  ,eur_g41
19:17:42  48  ,aud_g00
19:17:42  49  ,aud_g01
19:17:42  50  ,aud_g02
19:17:42  51  ,aud_g03
19:17:42  52  ,aud_g04
19:17:42  53  ,aud_g05
19:17:42  54  ,aud_g06
19:17:42  55  ,aud_g07
19:17:42  56  ,aud_g08
19:17:42  57  ,aud_g09
19:17:42  58  ,aud_g10
19:17:42  59  ,aud_g11
19:17:42  60  ,aud_g12
19:17:42  61  ,aud_g13
19:17:42  62  ,aud_g14
19:17:42  63  ,aud_g15
19:17:42  64  ,aud_g16
19:17:42  65  ,aud_g17
19:17:42  66  ,aud_g18
19:17:42  67  ,aud_g19
19:17:42  68  ,aud_g20
19:17:42  69  ,aud_g21
19:17:42  70  ,aud_g22
19:17:42  71  ,aud_g23
19:17:42  72  ,aud_g24
19:17:42  73  ,aud_g25
19:17:42  74  ,aud_g26
19:17:42  75  ,aud_g27
19:17:42  76  ,aud_g28
19:17:42  77  ,aud_g29
19:17:42  78  ,aud_g30
19:17:42  79  ,aud_g31
19:17:42  80  ,aud_g32
19:17:42  81  ,aud_g33
19:17:42  82  ,aud_g34
19:17:42  83  ,aud_g35
19:17:42  84  ,aud_g36
19:17:42  85  ,aud_g37
19:17:42  86  ,aud_g38
19:17:42  87  ,aud_g39
19:17:42  88  ,aud_g40
19:17:42  89  ,aud_g41
19:17:42  90  ,gbp_g00
19:17:42  91  ,gbp_g01
19:17:42  92  ,gbp_g02
19:17:42  93  ,gbp_g03
19:17:42  94  ,gbp_g04
19:17:42  95  ,gbp_g05
19:17:42  96  ,gbp_g06
19:17:42  97  ,gbp_g07
19:17:42  98  ,gbp_g08
19:17:42  99  ,gbp_g09
19:17:42 100  ,gbp_g10
19:17:42 101  ,gbp_g11
19:17:42 102  ,gbp_g12
19:17:42 103  ,gbp_g13
19:17:42 104  ,gbp_g14
19:17:42 105  ,gbp_g15
19:17:42 106  ,gbp_g16
19:17:42 107  ,gbp_g17
19:17:42 108  ,gbp_g18
19:17:42 109  ,gbp_g19
19:17:42 110  ,gbp_g20
19:17:42 111  ,gbp_g21
19:17:42 112  ,gbp_g22
19:17:42 113  ,gbp_g23
19:17:42 114  ,gbp_g24
19:17:42 115  ,gbp_g25
19:17:42 116  ,gbp_g26
19:17:42 117  ,gbp_g27
19:17:42 118  ,gbp_g28
19:17:42 119  ,gbp_g29
19:17:42 120  ,gbp_g30
19:17:42 121  ,gbp_g31
19:17:42 122  ,gbp_g32
19:17:42 123  ,gbp_g33
19:17:42 124  ,gbp_g34
19:17:42 125  ,gbp_g35
19:17:42 126  ,gbp_g36
19:17:42 127  ,gbp_g37
19:17:42 128  ,gbp_g38
19:17:42 129  ,gbp_g39
19:17:42 130  ,gbp_g40
19:17:42 131  ,gbp_g41
19:17:42 132  ,jpy_g00
19:17:42 133  ,jpy_g01
19:17:42 134  ,jpy_g02
19:17:42 135  ,jpy_g03
19:17:42 136  ,jpy_g04
19:17:42 137  ,jpy_g05
19:17:42 138  ,jpy_g06
19:17:42 139  ,jpy_g07
19:17:42 140  ,jpy_g08
19:17:42 141  ,jpy_g09
19:17:42 142  ,jpy_g10
19:17:42 143  ,jpy_g11
19:17:42 144  ,jpy_g12
19:17:42 145  ,jpy_g13
19:17:42 146  ,jpy_g14
19:17:42 147  ,jpy_g15
19:17:42 148  ,jpy_g16
19:17:42 149  ,jpy_g17
19:17:42 150  ,jpy_g18
19:17:42 151  ,jpy_g19
19:17:42 152  ,jpy_g20
19:17:42 153  ,jpy_g21
19:17:42 154  ,jpy_g22
19:17:42 155  ,jpy_g23
19:17:42 156  ,jpy_g24
19:17:42 157  ,jpy_g25
19:17:42 158  ,jpy_g26
19:17:42 159  ,jpy_g27
19:17:42 160  ,jpy_g28
19:17:42 161  ,jpy_g29
19:17:42 162  ,jpy_g30
19:17:42 163  ,jpy_g31
19:17:42 164  ,jpy_g32
19:17:42 165  ,jpy_g33
19:17:42 166  ,jpy_g34
19:17:42 167  ,jpy_g35
19:17:42 168  ,jpy_g36
19:17:42 169  ,jpy_g37
19:17:42 170  ,jpy_g38
19:17:42 171  ,jpy_g39
19:17:42 172  ,jpy_g40
19:17:42 173  ,jpy_g41
19:17:42 174  ,cad_g00
19:17:42 175  ,cad_g01
19:17:42 176  ,cad_g02
19:17:42 177  ,cad_g03
19:17:42 178  ,cad_g04
19:17:42 179  ,cad_g05
19:17:42 180  ,cad_g06
19:17:42 181  ,cad_g07
19:17:42 182  ,cad_g08
19:17:42 183  ,cad_g09
19:17:42 184  ,cad_g10
19:17:42 185  ,cad_g11
19:17:42 186  ,cad_g12
19:17:42 187  ,cad_g13
19:17:42 188  ,cad_g14
19:17:42 189  ,cad_g15
19:17:42 190  ,cad_g16
19:17:42 191  ,cad_g17
19:17:42 192  ,cad_g18
19:17:42 193  ,cad_g19
19:17:42 194  ,cad_g20
19:17:42 195  ,cad_g21
19:17:42 196  ,cad_g22
19:17:42 197  ,cad_g23
19:17:42 198  ,cad_g24
19:17:42 199  ,cad_g25
19:17:42 200  ,cad_g26
19:17:42 201  ,cad_g27
19:17:42 202  ,cad_g28
19:17:42 203  ,cad_g29
19:17:42 204  ,cad_g30
19:17:42 205  ,cad_g31
19:17:42 206  ,cad_g32
19:17:42 207  ,cad_g33
19:17:42 208  ,cad_g34
19:17:42 209  ,cad_g35
19:17:42 210  ,cad_g36
19:17:42 211  ,cad_g37
19:17:42 212  ,cad_g38
19:17:42 213  ,cad_g39
19:17:42 214  ,cad_g40
19:17:42 215  ,cad_g41
19:17:42 216  ,chf_g00
19:17:42 217  ,chf_g01
19:17:42 218  ,chf_g02
19:17:42 219  ,chf_g03
19:17:42 220  ,chf_g04
19:17:42 221  ,chf_g05
19:17:42 222  ,chf_g06
19:17:42 223  ,chf_g07
19:17:42 224  ,chf_g08
19:17:42 225  ,chf_g09
19:17:42 226  ,chf_g10
19:17:42 227  ,chf_g11
19:17:42 228  ,chf_g12
19:17:42 229  ,chf_g13
19:17:42 230  ,chf_g14
19:17:42 231  ,chf_g15
19:17:42 232  ,chf_g16
19:17:42 233  ,chf_g17
19:17:42 234  ,chf_g18
19:17:42 235  ,chf_g19
19:17:42 236  ,chf_g20
19:17:42 237  ,chf_g21
19:17:42 238  ,chf_g22
19:17:42 239  ,chf_g23
19:17:42 240  ,chf_g24
19:17:42 241  ,chf_g25
19:17:42 242  ,chf_g26
19:17:42 243  ,chf_g27
19:17:42 244  ,chf_g28
19:17:42 245  ,chf_g29
19:17:42 246  ,chf_g30
19:17:42 247  ,chf_g31
19:17:42 248  ,chf_g32
19:17:42 249  ,chf_g33
19:17:42 250  ,chf_g34
19:17:42 251  ,chf_g35
19:17:42 252  ,chf_g36
19:17:42 253  ,chf_g37
19:17:42 254  ,chf_g38
19:17:42 255  ,chf_g39
19:17:42 256  ,chf_g40
19:17:42 257  ,chf_g41
19:17:42 258  FROM aud_ms6 m
19:17:42 259  WHERE gattn IN('nup','up')
19:17:42 260  AND 1+m.ydate < '&1'||' '||'&2'
19:17:42 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'18:50:00'

View created.

Elapsed: 00:00:00.11
19:17:43 SQL> 
19:17:43 SQL> -- rpt
19:17:43 SQL> 
19:17:43 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12865
up	     6626

Elapsed: 00:00:00.04
19:17:43 SQL> 
19:17:43 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 18:45:00

Elapsed: 00:00:00.04
19:17:43 SQL> 
19:17:43 SQL> -- Now build model from bme and score sme
19:17:43 SQL> @score1gattn.sql
19:17:43 SQL> -- score1gattn.sql
19:17:43 SQL> 
19:17:43 SQL> -- Does the 1st SVM score
19:17:43 SQL> 
19:17:43 SQL> -- Fill up svmc_apply_prep
19:17:43 SQL> @score_gattn.sql
19:17:43 SQL> --
19:17:43 SQL> -- score_gattn.sql
19:17:43 SQL> --
19:17:43 SQL> 
19:17:43 SQL> -- usage: score_gattn.sql
19:17:43 SQL> 
19:17:43 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
19:17:43 SQL> 
19:17:43 SQL> DEFINE target	= 'gattn'
19:17:43 SQL> DEFINE model_name = 'forex15'
19:17:43 SQL> DEFINE bldtable	= 'bme'
19:17:43 SQL> DEFINE scoretable = 'sme'
19:17:43 SQL> DEFINE case_id	= 'prdate'
19:17:43 SQL> 
19:17:43 SQL> -- Define a variable to help me exclude some columns from some data mining calls
19:17:43 SQL> DEFINE exclude1 = "'&target','&case_id'"
19:17:43 SQL> 
19:17:43 SQL> -- Builds an SVM model using pl/sql.
19:17:43 SQL> 
19:17:43 SQL> -----------------------------------------------------------------------
19:17:43 SQL> --			    BUILD THE MODEL
19:17:43 SQL> -----------------------------------------------------------------------
19:17:43 SQL> 
19:17:43 SQL> -- Cleanup old build data preparation objects for repeat runs
19:17:43 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
19:17:43 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
19:17:43 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
19:17:43 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
19:17:43 SQL> 
19:17:43 SQL> 
19:17:43 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
19:17:43 SQL> --
19:17:43 SQL> -- DROP	TABLE svmc_settings ;
19:17:43 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
19:17:43 SQL> -- DELETE svmc_settings;
19:17:43 SQL> 
19:17:43 SQL> -- The default classification algorithm is Naive Bayes. So override
19:17:43 SQL> -- this choice to SVM using a settings table.
19:17:43 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
19:17:43 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
19:17:43 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
19:17:43 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
19:17:43 SQL> -- models.
19:17:43 SQL> --
19:17:43 SQL> 
19:17:43 SQL> -- Do this once and then comment it out.
19:17:43 SQL> -- That makes script go faster.
19:17:43 SQL> -- BEGIN
19:17:43 SQL> -- -- Populate settings table
19:17:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:17:43 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
19:17:43 SQL> --
19:17:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:17:43 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
19:17:43 SQL> --
19:17:43 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:17:43 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
19:17:43 SQL> --   COMMIT;
19:17:43 SQL> -- END;
19:17:43 SQL> -- /
19:17:43 SQL> 
19:17:43 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
19:17:43 SQL> 
19:17:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
19:17:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:17:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:17:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
19:17:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:17:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
19:17:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
19:17:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:17:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:17:43 SQL> 
19:17:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
19:17:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:17:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:17:43 SQL> 
19:17:43 SQL> --------------------------------
19:17:43 SQL> -- PREPARE BUILD (TRAINING) DATA
19:17:43 SQL> --
19:17:43 SQL> 
19:17:43 SQL> -- 1. Missing Value treatment for all Predictors and
19:17:43 SQL> -- 2. Outlier Treatment and
19:17:43 SQL> -- 3. Normalization are performed below.
19:17:43 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
19:17:43 SQL> --    normalized here.
19:17:43 SQL> 
19:17:43 SQL> BEGIN
19:17:43   2  	-- Perform missing value treatment for all predictors
19:17:43   3  	-- create miss tables
19:17:43   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
19:17:43   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
19:17:43   6  
19:17:43   7  	-- populate miss tables
19:17:43   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
19:17:43   9  	  miss_table_name => 'svmc_miss_num',
19:17:43  10  	  data_table_name => '&bldtable',
19:17:43  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:17:43  12  
19:17:43  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
19:17:43  14  	  miss_table_name => 'svmc_miss_cat',
19:17:43  15  	  data_table_name => '&bldtable',
19:17:43  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:17:43  17  
19:17:43  18  	-- xform input data to replace missing values
19:17:43  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:17:43  20  	  miss_table_name => 'svmc_miss_num',
19:17:43  21  	  data_table_name => '&bldtable',
19:17:43  22  	  xform_view_name => 'xformed_build_miss_num');
19:17:43  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:17:43  24  	  miss_table_name => 'svmc_miss_cat',
19:17:43  25  	  data_table_name => '&bldtable',
19:17:43  26  	  xform_view_name => 'xformed_build_miss_cat');
19:17:43  27  
19:17:43  28  	-- Perform outlier treatment.
19:17:43  29  	-- create clip table
19:17:43  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
19:17:43  31  
19:17:43  32  	-- populate clip table
19:17:43  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
19:17:43  34  	  clip_table_name => 'svmc_clip',
19:17:43  35  	  data_table_name => '&bldtable',
19:17:43  36  	  tail_frac	  => 0.025,
19:17:43  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:17:43  38  
19:17:43  39  	-- xform input data to winsorized data
19:17:43  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
19:17:43  41  	  clip_table_name => 'svmc_clip',
19:17:43  42  	  data_table_name => '&bldtable',
19:17:43  43  	  xform_view_name => 'svmc_winsor');
19:17:43  44  
19:17:43  45  	-- create normalization table
19:17:43  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
19:17:43  47  
19:17:43  48  	-- populate normalization table based on winsorized data
19:17:43  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
19:17:43  50  	  norm_table_name => 'svmc_norm',
19:17:43  51  	  data_table_name => 'svmc_winsor',
19:17:43  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:17:43  53  
19:17:43  54  	-- normalize the original data
19:17:43  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:17:43  56  	  norm_table_name => 'svmc_norm',
19:17:43  57  	  data_table_name => '&bldtable',
19:17:43  58  	  xform_view_name => 'svmc_build_prep');
19:17:43  59  END;
19:17:43  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.91
19:18:02 SQL> 
19:18:02 SQL> ---------------------
19:18:02 SQL> -- CREATE A NEW MODEL
19:18:02 SQL> --
19:18:02 SQL> -- Cleanup old model with the same name for repeat runs
19:18:02 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
19:18:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:18:02   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.10
19:18:03 SQL> 
19:18:03 SQL> -- Build a new SVM Model
19:18:03 SQL> BEGIN
19:18:03   2  	DBMS_DATA_MINING.CREATE_MODEL(
19:18:03   3  	  model_name	      => '&model_name',
19:18:03   4  	  mining_function     => dbms_data_mining.classification,
19:18:03   5  	  data_table_name     => 'svmc_build_prep',
19:18:03   6  	  case_id_column_name => '&case_id',
19:18:03   7  	  target_column_name  => '&target',
19:18:03   8  	  settings_table_name => 'svmc_settings');
19:18:03   9  END;
19:18:03  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.71
19:18:31 SQL> 
19:18:31 SQL> -----------------------------------------------------------------------
19:18:31 SQL> --			       APPLY/score THE MODEL
19:18:31 SQL> -----------------------------------------------------------------------
19:18:31 SQL> 
19:18:31 SQL> -- Cleanup old scoring data preparation objects for repeat runs
19:18:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
19:18:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:18:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:18:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
19:18:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:18:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:18:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
19:18:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:18:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:18:31 SQL> -----------------------
19:18:31 SQL> -- PREPARE SCORING DATA
19:18:31 SQL> --
19:18:31 SQL> -- If the data for model creation has been prepared, then the data
19:18:31 SQL> -- to be scored using the model must be prepared in the same manner
19:18:31 SQL> -- in order to obtain meaningful results.
19:18:31 SQL> --
19:18:31 SQL> -- 1. Missing Value treatment for all Predictors and
19:18:31 SQL> -- 2. Normalization
19:18:31 SQL> -- No outlier treatment will be performed during test and apply. The
19:18:31 SQL> -- normalization step is sufficient, since the normalization parameters
19:18:31 SQL> -- already capture the effects of outlier treatment done with build data.
19:18:31 SQL> --
19:18:31 SQL> BEGIN
19:18:31   2  	-- Xform Test data to replace missing values
19:18:31   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:18:31   4  	  miss_table_name => 'svmc_miss_num',
19:18:31   5  	  data_table_name => '&scoretable',
19:18:31   6  	  xform_view_name => 'xformed_apply_miss_num');
19:18:31   7  
19:18:31   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:18:31   9  	  miss_table_name => 'svmc_miss_cat',
19:18:31  10  	  data_table_name => '&scoretable',
19:18:31  11  	  xform_view_name => 'xformed_apply_miss_cat');
19:18:31  12  
19:18:31  13  	-- Normalize the data to be scored
19:18:31  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:18:31  15  	  norm_table_name => 'svmc_norm',
19:18:31  16  	  data_table_name => '&scoretable',
19:18:31  17  	  xform_view_name => 'svmc_apply_prep');
19:18:31  18  END;
19:18:31  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.35
19:18:32 SQL> 
19:18:32 SQL> -- Use same model_name used in score_gattn.sql
19:18:32 SQL> DEFINE model_name = 'forex15'
19:18:32 SQL> 
19:18:32 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
19:18:32 SQL> 
19:18:32 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
19:18:32   2  SELECT
19:18:32   3  prdate
19:18:32   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
19:18:32   5  ,sysdate
19:18:32   6  ,SUBSTR(prdate,1,3)pair
19:18:32   7  ,SUBSTR(prdate,4,19)ydate
19:18:32   8  FROM svmc_apply_prep
19:18:32   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
19:18:32 SQL> @aud_score1day_gattn.sql	2011-01-06 18:55:00
19:18:32 SQL> --
19:18:32 SQL> -- aud_score1day_gattn.sql
19:18:32 SQL> --
19:18:32 SQL> 
19:18:32 SQL> CREATE OR REPLACE VIEW sme AS
19:18:32   2  SELECT
19:18:32   3  'aud'||m.ydate prdate
19:18:32   4  ,NULL gattn
19:18:32   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:18:32   6  ,eur_g00
19:18:32   7  ,eur_g01
19:18:32   8  ,eur_g02
19:18:32   9  ,eur_g03
19:18:32  10  ,eur_g04
19:18:32  11  ,eur_g05
19:18:32  12  ,eur_g06
19:18:32  13  ,eur_g07
19:18:32  14  ,eur_g08
19:18:32  15  ,eur_g09
19:18:32  16  ,eur_g10
19:18:32  17  ,eur_g11
19:18:32  18  ,eur_g12
19:18:32  19  ,eur_g13
19:18:32  20  ,eur_g14
19:18:32  21  ,eur_g15
19:18:32  22  ,eur_g16
19:18:32  23  ,eur_g17
19:18:32  24  ,eur_g18
19:18:32  25  ,eur_g19
19:18:32  26  ,eur_g20
19:18:32  27  ,eur_g21
19:18:32  28  ,eur_g22
19:18:32  29  ,eur_g23
19:18:32  30  ,eur_g24
19:18:32  31  ,eur_g25
19:18:32  32  ,eur_g26
19:18:32  33  ,eur_g27
19:18:32  34  ,eur_g28
19:18:32  35  ,eur_g29
19:18:32  36  ,eur_g30
19:18:32  37  ,eur_g31
19:18:32  38  ,eur_g32
19:18:32  39  ,eur_g33
19:18:32  40  ,eur_g34
19:18:32  41  ,eur_g35
19:18:32  42  ,eur_g36
19:18:32  43  ,eur_g37
19:18:32  44  ,eur_g38
19:18:32  45  ,eur_g39
19:18:32  46  ,eur_g40
19:18:32  47  ,eur_g41
19:18:32  48  ,aud_g00
19:18:32  49  ,aud_g01
19:18:32  50  ,aud_g02
19:18:32  51  ,aud_g03
19:18:32  52  ,aud_g04
19:18:32  53  ,aud_g05
19:18:32  54  ,aud_g06
19:18:32  55  ,aud_g07
19:18:32  56  ,aud_g08
19:18:32  57  ,aud_g09
19:18:32  58  ,aud_g10
19:18:32  59  ,aud_g11
19:18:32  60  ,aud_g12
19:18:32  61  ,aud_g13
19:18:32  62  ,aud_g14
19:18:32  63  ,aud_g15
19:18:32  64  ,aud_g16
19:18:32  65  ,aud_g17
19:18:32  66  ,aud_g18
19:18:32  67  ,aud_g19
19:18:32  68  ,aud_g20
19:18:32  69  ,aud_g21
19:18:32  70  ,aud_g22
19:18:32  71  ,aud_g23
19:18:32  72  ,aud_g24
19:18:32  73  ,aud_g25
19:18:32  74  ,aud_g26
19:18:32  75  ,aud_g27
19:18:32  76  ,aud_g28
19:18:32  77  ,aud_g29
19:18:32  78  ,aud_g30
19:18:32  79  ,aud_g31
19:18:32  80  ,aud_g32
19:18:32  81  ,aud_g33
19:18:32  82  ,aud_g34
19:18:32  83  ,aud_g35
19:18:32  84  ,aud_g36
19:18:32  85  ,aud_g37
19:18:32  86  ,aud_g38
19:18:32  87  ,aud_g39
19:18:32  88  ,aud_g40
19:18:32  89  ,aud_g41
19:18:32  90  ,gbp_g00
19:18:32  91  ,gbp_g01
19:18:32  92  ,gbp_g02
19:18:32  93  ,gbp_g03
19:18:32  94  ,gbp_g04
19:18:32  95  ,gbp_g05
19:18:32  96  ,gbp_g06
19:18:32  97  ,gbp_g07
19:18:32  98  ,gbp_g08
19:18:32  99  ,gbp_g09
19:18:32 100  ,gbp_g10
19:18:32 101  ,gbp_g11
19:18:32 102  ,gbp_g12
19:18:32 103  ,gbp_g13
19:18:32 104  ,gbp_g14
19:18:32 105  ,gbp_g15
19:18:32 106  ,gbp_g16
19:18:32 107  ,gbp_g17
19:18:32 108  ,gbp_g18
19:18:32 109  ,gbp_g19
19:18:32 110  ,gbp_g20
19:18:32 111  ,gbp_g21
19:18:32 112  ,gbp_g22
19:18:32 113  ,gbp_g23
19:18:32 114  ,gbp_g24
19:18:32 115  ,gbp_g25
19:18:32 116  ,gbp_g26
19:18:32 117  ,gbp_g27
19:18:32 118  ,gbp_g28
19:18:32 119  ,gbp_g29
19:18:32 120  ,gbp_g30
19:18:32 121  ,gbp_g31
19:18:32 122  ,gbp_g32
19:18:32 123  ,gbp_g33
19:18:32 124  ,gbp_g34
19:18:32 125  ,gbp_g35
19:18:32 126  ,gbp_g36
19:18:32 127  ,gbp_g37
19:18:32 128  ,gbp_g38
19:18:32 129  ,gbp_g39
19:18:32 130  ,gbp_g40
19:18:32 131  ,gbp_g41
19:18:32 132  ,jpy_g00
19:18:32 133  ,jpy_g01
19:18:32 134  ,jpy_g02
19:18:32 135  ,jpy_g03
19:18:32 136  ,jpy_g04
19:18:32 137  ,jpy_g05
19:18:32 138  ,jpy_g06
19:18:32 139  ,jpy_g07
19:18:32 140  ,jpy_g08
19:18:32 141  ,jpy_g09
19:18:32 142  ,jpy_g10
19:18:32 143  ,jpy_g11
19:18:32 144  ,jpy_g12
19:18:32 145  ,jpy_g13
19:18:32 146  ,jpy_g14
19:18:32 147  ,jpy_g15
19:18:32 148  ,jpy_g16
19:18:32 149  ,jpy_g17
19:18:32 150  ,jpy_g18
19:18:32 151  ,jpy_g19
19:18:32 152  ,jpy_g20
19:18:32 153  ,jpy_g21
19:18:32 154  ,jpy_g22
19:18:32 155  ,jpy_g23
19:18:32 156  ,jpy_g24
19:18:32 157  ,jpy_g25
19:18:32 158  ,jpy_g26
19:18:32 159  ,jpy_g27
19:18:32 160  ,jpy_g28
19:18:32 161  ,jpy_g29
19:18:32 162  ,jpy_g30
19:18:32 163  ,jpy_g31
19:18:32 164  ,jpy_g32
19:18:32 165  ,jpy_g33
19:18:32 166  ,jpy_g34
19:18:32 167  ,jpy_g35
19:18:32 168  ,jpy_g36
19:18:32 169  ,jpy_g37
19:18:32 170  ,jpy_g38
19:18:32 171  ,jpy_g39
19:18:32 172  ,jpy_g40
19:18:32 173  ,jpy_g41
19:18:32 174  ,cad_g00
19:18:32 175  ,cad_g01
19:18:32 176  ,cad_g02
19:18:32 177  ,cad_g03
19:18:32 178  ,cad_g04
19:18:32 179  ,cad_g05
19:18:32 180  ,cad_g06
19:18:32 181  ,cad_g07
19:18:32 182  ,cad_g08
19:18:32 183  ,cad_g09
19:18:32 184  ,cad_g10
19:18:32 185  ,cad_g11
19:18:32 186  ,cad_g12
19:18:32 187  ,cad_g13
19:18:32 188  ,cad_g14
19:18:32 189  ,cad_g15
19:18:32 190  ,cad_g16
19:18:32 191  ,cad_g17
19:18:32 192  ,cad_g18
19:18:32 193  ,cad_g19
19:18:32 194  ,cad_g20
19:18:32 195  ,cad_g21
19:18:32 196  ,cad_g22
19:18:32 197  ,cad_g23
19:18:32 198  ,cad_g24
19:18:32 199  ,cad_g25
19:18:32 200  ,cad_g26
19:18:32 201  ,cad_g27
19:18:32 202  ,cad_g28
19:18:32 203  ,cad_g29
19:18:32 204  ,cad_g30
19:18:32 205  ,cad_g31
19:18:32 206  ,cad_g32
19:18:32 207  ,cad_g33
19:18:32 208  ,cad_g34
19:18:32 209  ,cad_g35
19:18:32 210  ,cad_g36
19:18:32 211  ,cad_g37
19:18:32 212  ,cad_g38
19:18:32 213  ,cad_g39
19:18:32 214  ,cad_g40
19:18:32 215  ,cad_g41
19:18:32 216  ,chf_g00
19:18:32 217  ,chf_g01
19:18:32 218  ,chf_g02
19:18:32 219  ,chf_g03
19:18:32 220  ,chf_g04
19:18:32 221  ,chf_g05
19:18:32 222  ,chf_g06
19:18:32 223  ,chf_g07
19:18:32 224  ,chf_g08
19:18:32 225  ,chf_g09
19:18:32 226  ,chf_g10
19:18:32 227  ,chf_g11
19:18:32 228  ,chf_g12
19:18:32 229  ,chf_g13
19:18:32 230  ,chf_g14
19:18:32 231  ,chf_g15
19:18:32 232  ,chf_g16
19:18:32 233  ,chf_g17
19:18:32 234  ,chf_g18
19:18:32 235  ,chf_g19
19:18:32 236  ,chf_g20
19:18:32 237  ,chf_g21
19:18:32 238  ,chf_g22
19:18:32 239  ,chf_g23
19:18:32 240  ,chf_g24
19:18:32 241  ,chf_g25
19:18:32 242  ,chf_g26
19:18:32 243  ,chf_g27
19:18:32 244  ,chf_g28
19:18:32 245  ,chf_g29
19:18:32 246  ,chf_g30
19:18:32 247  ,chf_g31
19:18:32 248  ,chf_g32
19:18:32 249  ,chf_g33
19:18:32 250  ,chf_g34
19:18:32 251  ,chf_g35
19:18:32 252  ,chf_g36
19:18:32 253  ,chf_g37
19:18:32 254  ,chf_g38
19:18:32 255  ,chf_g39
19:18:32 256  ,chf_g40
19:18:32 257  ,chf_g41
19:18:32 258  FROM aud_ms6 m
19:18:32 259  WHERE m.ydate = '&1'||' '||'&2'
19:18:32 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'18:55:00'

View created.

Elapsed: 00:00:00.11
19:18:32 SQL> 
19:18:32 SQL> -- rpt
19:18:32 SQL> -- We should see just 1 row:
19:18:32 SQL> 
19:18:32 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
19:18:32 SQL> 
19:18:32 SQL> -- Build the model:
19:18:32 SQL> CREATE OR REPLACE VIEW bme AS
19:18:32   2  SELECT
19:18:32   3  'aud'||m.ydate prdate
19:18:32   4  ,gattn
19:18:32   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:18:32   6  ,eur_g00
19:18:32   7  ,eur_g01
19:18:32   8  ,eur_g02
19:18:32   9  ,eur_g03
19:18:32  10  ,eur_g04
19:18:32  11  ,eur_g05
19:18:32  12  ,eur_g06
19:18:32  13  ,eur_g07
19:18:32  14  ,eur_g08
19:18:32  15  ,eur_g09
19:18:32  16  ,eur_g10
19:18:32  17  ,eur_g11
19:18:32  18  ,eur_g12
19:18:32  19  ,eur_g13
19:18:32  20  ,eur_g14
19:18:32  21  ,eur_g15
19:18:32  22  ,eur_g16
19:18:32  23  ,eur_g17
19:18:32  24  ,eur_g18
19:18:32  25  ,eur_g19
19:18:32  26  ,eur_g20
19:18:32  27  ,eur_g21
19:18:32  28  ,eur_g22
19:18:32  29  ,eur_g23
19:18:32  30  ,eur_g24
19:18:32  31  ,eur_g25
19:18:32  32  ,eur_g26
19:18:32  33  ,eur_g27
19:18:32  34  ,eur_g28
19:18:32  35  ,eur_g29
19:18:32  36  ,eur_g30
19:18:32  37  ,eur_g31
19:18:32  38  ,eur_g32
19:18:32  39  ,eur_g33
19:18:32  40  ,eur_g34
19:18:32  41  ,eur_g35
19:18:32  42  ,eur_g36
19:18:32  43  ,eur_g37
19:18:32  44  ,eur_g38
19:18:32  45  ,eur_g39
19:18:32  46  ,eur_g40
19:18:32  47  ,eur_g41
19:18:32  48  ,aud_g00
19:18:32  49  ,aud_g01
19:18:32  50  ,aud_g02
19:18:32  51  ,aud_g03
19:18:32  52  ,aud_g04
19:18:32  53  ,aud_g05
19:18:32  54  ,aud_g06
19:18:32  55  ,aud_g07
19:18:32  56  ,aud_g08
19:18:32  57  ,aud_g09
19:18:32  58  ,aud_g10
19:18:32  59  ,aud_g11
19:18:32  60  ,aud_g12
19:18:32  61  ,aud_g13
19:18:32  62  ,aud_g14
19:18:32  63  ,aud_g15
19:18:32  64  ,aud_g16
19:18:32  65  ,aud_g17
19:18:32  66  ,aud_g18
19:18:32  67  ,aud_g19
19:18:32  68  ,aud_g20
19:18:32  69  ,aud_g21
19:18:32  70  ,aud_g22
19:18:32  71  ,aud_g23
19:18:32  72  ,aud_g24
19:18:32  73  ,aud_g25
19:18:32  74  ,aud_g26
19:18:32  75  ,aud_g27
19:18:32  76  ,aud_g28
19:18:32  77  ,aud_g29
19:18:32  78  ,aud_g30
19:18:32  79  ,aud_g31
19:18:32  80  ,aud_g32
19:18:32  81  ,aud_g33
19:18:32  82  ,aud_g34
19:18:32  83  ,aud_g35
19:18:32  84  ,aud_g36
19:18:32  85  ,aud_g37
19:18:32  86  ,aud_g38
19:18:32  87  ,aud_g39
19:18:32  88  ,aud_g40
19:18:32  89  ,aud_g41
19:18:32  90  ,gbp_g00
19:18:32  91  ,gbp_g01
19:18:32  92  ,gbp_g02
19:18:32  93  ,gbp_g03
19:18:32  94  ,gbp_g04
19:18:32  95  ,gbp_g05
19:18:32  96  ,gbp_g06
19:18:32  97  ,gbp_g07
19:18:32  98  ,gbp_g08
19:18:32  99  ,gbp_g09
19:18:32 100  ,gbp_g10
19:18:32 101  ,gbp_g11
19:18:32 102  ,gbp_g12
19:18:32 103  ,gbp_g13
19:18:32 104  ,gbp_g14
19:18:32 105  ,gbp_g15
19:18:32 106  ,gbp_g16
19:18:32 107  ,gbp_g17
19:18:32 108  ,gbp_g18
19:18:32 109  ,gbp_g19
19:18:32 110  ,gbp_g20
19:18:32 111  ,gbp_g21
19:18:32 112  ,gbp_g22
19:18:32 113  ,gbp_g23
19:18:32 114  ,gbp_g24
19:18:32 115  ,gbp_g25
19:18:32 116  ,gbp_g26
19:18:32 117  ,gbp_g27
19:18:32 118  ,gbp_g28
19:18:32 119  ,gbp_g29
19:18:32 120  ,gbp_g30
19:18:32 121  ,gbp_g31
19:18:32 122  ,gbp_g32
19:18:32 123  ,gbp_g33
19:18:32 124  ,gbp_g34
19:18:32 125  ,gbp_g35
19:18:32 126  ,gbp_g36
19:18:32 127  ,gbp_g37
19:18:32 128  ,gbp_g38
19:18:32 129  ,gbp_g39
19:18:32 130  ,gbp_g40
19:18:32 131  ,gbp_g41
19:18:32 132  ,jpy_g00
19:18:32 133  ,jpy_g01
19:18:32 134  ,jpy_g02
19:18:32 135  ,jpy_g03
19:18:32 136  ,jpy_g04
19:18:32 137  ,jpy_g05
19:18:32 138  ,jpy_g06
19:18:32 139  ,jpy_g07
19:18:32 140  ,jpy_g08
19:18:32 141  ,jpy_g09
19:18:32 142  ,jpy_g10
19:18:32 143  ,jpy_g11
19:18:32 144  ,jpy_g12
19:18:32 145  ,jpy_g13
19:18:32 146  ,jpy_g14
19:18:32 147  ,jpy_g15
19:18:32 148  ,jpy_g16
19:18:32 149  ,jpy_g17
19:18:32 150  ,jpy_g18
19:18:32 151  ,jpy_g19
19:18:32 152  ,jpy_g20
19:18:32 153  ,jpy_g21
19:18:32 154  ,jpy_g22
19:18:32 155  ,jpy_g23
19:18:32 156  ,jpy_g24
19:18:32 157  ,jpy_g25
19:18:32 158  ,jpy_g26
19:18:32 159  ,jpy_g27
19:18:32 160  ,jpy_g28
19:18:32 161  ,jpy_g29
19:18:32 162  ,jpy_g30
19:18:32 163  ,jpy_g31
19:18:32 164  ,jpy_g32
19:18:32 165  ,jpy_g33
19:18:32 166  ,jpy_g34
19:18:32 167  ,jpy_g35
19:18:32 168  ,jpy_g36
19:18:32 169  ,jpy_g37
19:18:32 170  ,jpy_g38
19:18:32 171  ,jpy_g39
19:18:32 172  ,jpy_g40
19:18:32 173  ,jpy_g41
19:18:32 174  ,cad_g00
19:18:32 175  ,cad_g01
19:18:32 176  ,cad_g02
19:18:32 177  ,cad_g03
19:18:32 178  ,cad_g04
19:18:32 179  ,cad_g05
19:18:32 180  ,cad_g06
19:18:32 181  ,cad_g07
19:18:32 182  ,cad_g08
19:18:32 183  ,cad_g09
19:18:32 184  ,cad_g10
19:18:32 185  ,cad_g11
19:18:32 186  ,cad_g12
19:18:32 187  ,cad_g13
19:18:32 188  ,cad_g14
19:18:32 189  ,cad_g15
19:18:32 190  ,cad_g16
19:18:32 191  ,cad_g17
19:18:32 192  ,cad_g18
19:18:32 193  ,cad_g19
19:18:32 194  ,cad_g20
19:18:32 195  ,cad_g21
19:18:32 196  ,cad_g22
19:18:32 197  ,cad_g23
19:18:32 198  ,cad_g24
19:18:32 199  ,cad_g25
19:18:32 200  ,cad_g26
19:18:32 201  ,cad_g27
19:18:32 202  ,cad_g28
19:18:32 203  ,cad_g29
19:18:32 204  ,cad_g30
19:18:32 205  ,cad_g31
19:18:32 206  ,cad_g32
19:18:32 207  ,cad_g33
19:18:32 208  ,cad_g34
19:18:32 209  ,cad_g35
19:18:32 210  ,cad_g36
19:18:32 211  ,cad_g37
19:18:32 212  ,cad_g38
19:18:32 213  ,cad_g39
19:18:32 214  ,cad_g40
19:18:32 215  ,cad_g41
19:18:32 216  ,chf_g00
19:18:32 217  ,chf_g01
19:18:32 218  ,chf_g02
19:18:32 219  ,chf_g03
19:18:32 220  ,chf_g04
19:18:32 221  ,chf_g05
19:18:32 222  ,chf_g06
19:18:32 223  ,chf_g07
19:18:32 224  ,chf_g08
19:18:32 225  ,chf_g09
19:18:32 226  ,chf_g10
19:18:32 227  ,chf_g11
19:18:32 228  ,chf_g12
19:18:32 229  ,chf_g13
19:18:32 230  ,chf_g14
19:18:32 231  ,chf_g15
19:18:32 232  ,chf_g16
19:18:32 233  ,chf_g17
19:18:32 234  ,chf_g18
19:18:32 235  ,chf_g19
19:18:32 236  ,chf_g20
19:18:32 237  ,chf_g21
19:18:32 238  ,chf_g22
19:18:32 239  ,chf_g23
19:18:32 240  ,chf_g24
19:18:32 241  ,chf_g25
19:18:32 242  ,chf_g26
19:18:32 243  ,chf_g27
19:18:32 244  ,chf_g28
19:18:32 245  ,chf_g29
19:18:32 246  ,chf_g30
19:18:32 247  ,chf_g31
19:18:32 248  ,chf_g32
19:18:32 249  ,chf_g33
19:18:32 250  ,chf_g34
19:18:32 251  ,chf_g35
19:18:32 252  ,chf_g36
19:18:32 253  ,chf_g37
19:18:32 254  ,chf_g38
19:18:32 255  ,chf_g39
19:18:32 256  ,chf_g40
19:18:32 257  ,chf_g41
19:18:32 258  FROM aud_ms6 m
19:18:32 259  WHERE gattn IN('nup','up')
19:18:32 260  AND 1+m.ydate < '&1'||' '||'&2'
19:18:32 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'18:55:00'

View created.

Elapsed: 00:00:00.12
19:18:33 SQL> 
19:18:33 SQL> -- rpt
19:18:33 SQL> 
19:18:33 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12865
up	     6627

Elapsed: 00:00:00.04
19:18:33 SQL> 
19:18:33 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 18:50:00

Elapsed: 00:00:00.03
19:18:33 SQL> 
19:18:33 SQL> -- Now build model from bme and score sme
19:18:33 SQL> @score1gattn.sql
19:18:33 SQL> -- score1gattn.sql
19:18:33 SQL> 
19:18:33 SQL> -- Does the 1st SVM score
19:18:33 SQL> 
19:18:33 SQL> -- Fill up svmc_apply_prep
19:18:33 SQL> @score_gattn.sql
19:18:33 SQL> --
19:18:33 SQL> -- score_gattn.sql
19:18:33 SQL> --
19:18:33 SQL> 
19:18:33 SQL> -- usage: score_gattn.sql
19:18:33 SQL> 
19:18:33 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
19:18:33 SQL> 
19:18:33 SQL> DEFINE target	= 'gattn'
19:18:33 SQL> DEFINE model_name = 'forex15'
19:18:33 SQL> DEFINE bldtable	= 'bme'
19:18:33 SQL> DEFINE scoretable = 'sme'
19:18:33 SQL> DEFINE case_id	= 'prdate'
19:18:33 SQL> 
19:18:33 SQL> -- Define a variable to help me exclude some columns from some data mining calls
19:18:33 SQL> DEFINE exclude1 = "'&target','&case_id'"
19:18:33 SQL> 
19:18:33 SQL> -- Builds an SVM model using pl/sql.
19:18:33 SQL> 
19:18:33 SQL> -----------------------------------------------------------------------
19:18:33 SQL> --			    BUILD THE MODEL
19:18:33 SQL> -----------------------------------------------------------------------
19:18:33 SQL> 
19:18:33 SQL> -- Cleanup old build data preparation objects for repeat runs
19:18:33 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
19:18:33 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
19:18:33 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
19:18:33 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
19:18:33 SQL> 
19:18:33 SQL> 
19:18:33 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
19:18:33 SQL> --
19:18:33 SQL> -- DROP	TABLE svmc_settings ;
19:18:33 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
19:18:33 SQL> -- DELETE svmc_settings;
19:18:33 SQL> 
19:18:33 SQL> -- The default classification algorithm is Naive Bayes. So override
19:18:33 SQL> -- this choice to SVM using a settings table.
19:18:33 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
19:18:33 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
19:18:33 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
19:18:33 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
19:18:33 SQL> -- models.
19:18:33 SQL> --
19:18:33 SQL> 
19:18:33 SQL> -- Do this once and then comment it out.
19:18:33 SQL> -- That makes script go faster.
19:18:33 SQL> -- BEGIN
19:18:33 SQL> -- -- Populate settings table
19:18:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:18:33 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
19:18:33 SQL> --
19:18:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:18:33 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
19:18:33 SQL> --
19:18:33 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:18:33 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
19:18:33 SQL> --   COMMIT;
19:18:33 SQL> -- END;
19:18:33 SQL> -- /
19:18:33 SQL> 
19:18:33 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
19:18:33 SQL> 
19:18:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
19:18:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:18:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:18:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
19:18:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:18:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:18:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
19:18:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:18:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:18:33 SQL> 
19:18:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
19:18:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:18:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:18:33 SQL> 
19:18:33 SQL> --------------------------------
19:18:33 SQL> -- PREPARE BUILD (TRAINING) DATA
19:18:33 SQL> --
19:18:33 SQL> 
19:18:33 SQL> -- 1. Missing Value treatment for all Predictors and
19:18:33 SQL> -- 2. Outlier Treatment and
19:18:33 SQL> -- 3. Normalization are performed below.
19:18:33 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
19:18:33 SQL> --    normalized here.
19:18:33 SQL> 
19:18:33 SQL> BEGIN
19:18:33   2  	-- Perform missing value treatment for all predictors
19:18:33   3  	-- create miss tables
19:18:33   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
19:18:33   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
19:18:33   6  
19:18:33   7  	-- populate miss tables
19:18:33   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
19:18:33   9  	  miss_table_name => 'svmc_miss_num',
19:18:33  10  	  data_table_name => '&bldtable',
19:18:33  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:18:33  12  
19:18:33  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
19:18:33  14  	  miss_table_name => 'svmc_miss_cat',
19:18:33  15  	  data_table_name => '&bldtable',
19:18:33  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:18:33  17  
19:18:33  18  	-- xform input data to replace missing values
19:18:33  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:18:33  20  	  miss_table_name => 'svmc_miss_num',
19:18:33  21  	  data_table_name => '&bldtable',
19:18:33  22  	  xform_view_name => 'xformed_build_miss_num');
19:18:33  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:18:33  24  	  miss_table_name => 'svmc_miss_cat',
19:18:33  25  	  data_table_name => '&bldtable',
19:18:33  26  	  xform_view_name => 'xformed_build_miss_cat');
19:18:33  27  
19:18:33  28  	-- Perform outlier treatment.
19:18:33  29  	-- create clip table
19:18:33  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
19:18:33  31  
19:18:33  32  	-- populate clip table
19:18:33  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
19:18:33  34  	  clip_table_name => 'svmc_clip',
19:18:33  35  	  data_table_name => '&bldtable',
19:18:33  36  	  tail_frac	  => 0.025,
19:18:33  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:18:33  38  
19:18:33  39  	-- xform input data to winsorized data
19:18:33  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
19:18:33  41  	  clip_table_name => 'svmc_clip',
19:18:33  42  	  data_table_name => '&bldtable',
19:18:33  43  	  xform_view_name => 'svmc_winsor');
19:18:33  44  
19:18:33  45  	-- create normalization table
19:18:33  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
19:18:33  47  
19:18:33  48  	-- populate normalization table based on winsorized data
19:18:33  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
19:18:33  50  	  norm_table_name => 'svmc_norm',
19:18:33  51  	  data_table_name => 'svmc_winsor',
19:18:33  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:18:33  53  
19:18:33  54  	-- normalize the original data
19:18:33  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:18:33  56  	  norm_table_name => 'svmc_norm',
19:18:33  57  	  data_table_name => '&bldtable',
19:18:33  58  	  xform_view_name => 'svmc_build_prep');
19:18:33  59  END;
19:18:33  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.61
19:18:52 SQL> 
19:18:52 SQL> ---------------------
19:18:52 SQL> -- CREATE A NEW MODEL
19:18:52 SQL> --
19:18:52 SQL> -- Cleanup old model with the same name for repeat runs
19:18:52 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
19:18:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:18:52   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.04
19:18:53 SQL> 
19:18:53 SQL> -- Build a new SVM Model
19:18:53 SQL> BEGIN
19:18:53   2  	DBMS_DATA_MINING.CREATE_MODEL(
19:18:53   3  	  model_name	      => '&model_name',
19:18:53   4  	  mining_function     => dbms_data_mining.classification,
19:18:53   5  	  data_table_name     => 'svmc_build_prep',
19:18:53   6  	  case_id_column_name => '&case_id',
19:18:53   7  	  target_column_name  => '&target',
19:18:53   8  	  settings_table_name => 'svmc_settings');
19:18:53   9  END;
19:18:53  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.03
19:19:20 SQL> 
19:19:20 SQL> -----------------------------------------------------------------------
19:19:20 SQL> --			       APPLY/score THE MODEL
19:19:20 SQL> -----------------------------------------------------------------------
19:19:20 SQL> 
19:19:20 SQL> -- Cleanup old scoring data preparation objects for repeat runs
19:19:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
19:19:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:19:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:19:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
19:19:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:19:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:19:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
19:19:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:19:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:19:20 SQL> -----------------------
19:19:20 SQL> -- PREPARE SCORING DATA
19:19:20 SQL> --
19:19:20 SQL> -- If the data for model creation has been prepared, then the data
19:19:20 SQL> -- to be scored using the model must be prepared in the same manner
19:19:20 SQL> -- in order to obtain meaningful results.
19:19:20 SQL> --
19:19:20 SQL> -- 1. Missing Value treatment for all Predictors and
19:19:20 SQL> -- 2. Normalization
19:19:20 SQL> -- No outlier treatment will be performed during test and apply. The
19:19:20 SQL> -- normalization step is sufficient, since the normalization parameters
19:19:20 SQL> -- already capture the effects of outlier treatment done with build data.
19:19:20 SQL> --
19:19:20 SQL> BEGIN
19:19:20   2  	-- Xform Test data to replace missing values
19:19:20   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:19:20   4  	  miss_table_name => 'svmc_miss_num',
19:19:20   5  	  data_table_name => '&scoretable',
19:19:20   6  	  xform_view_name => 'xformed_apply_miss_num');
19:19:20   7  
19:19:20   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:19:20   9  	  miss_table_name => 'svmc_miss_cat',
19:19:20  10  	  data_table_name => '&scoretable',
19:19:20  11  	  xform_view_name => 'xformed_apply_miss_cat');
19:19:20  12  
19:19:20  13  	-- Normalize the data to be scored
19:19:20  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:19:20  15  	  norm_table_name => 'svmc_norm',
19:19:20  16  	  data_table_name => '&scoretable',
19:19:20  17  	  xform_view_name => 'svmc_apply_prep');
19:19:20  18  END;
19:19:20  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
19:19:21 SQL> 
19:19:21 SQL> -- Use same model_name used in score_gattn.sql
19:19:21 SQL> DEFINE model_name = 'forex15'
19:19:21 SQL> 
19:19:21 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
19:19:21 SQL> 
19:19:21 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
19:19:21   2  SELECT
19:19:21   3  prdate
19:19:21   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
19:19:21   5  ,sysdate
19:19:21   6  ,SUBSTR(prdate,1,3)pair
19:19:21   7  ,SUBSTR(prdate,4,19)ydate
19:19:21   8  FROM svmc_apply_prep
19:19:21   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
19:19:21 SQL> @aud_score1day_gattn.sql	2011-01-06 19:00:00
19:19:21 SQL> --
19:19:21 SQL> -- aud_score1day_gattn.sql
19:19:21 SQL> --
19:19:21 SQL> 
19:19:21 SQL> CREATE OR REPLACE VIEW sme AS
19:19:21   2  SELECT
19:19:21   3  'aud'||m.ydate prdate
19:19:21   4  ,NULL gattn
19:19:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:19:21   6  ,eur_g00
19:19:21   7  ,eur_g01
19:19:21   8  ,eur_g02
19:19:21   9  ,eur_g03
19:19:21  10  ,eur_g04
19:19:21  11  ,eur_g05
19:19:21  12  ,eur_g06
19:19:21  13  ,eur_g07
19:19:21  14  ,eur_g08
19:19:21  15  ,eur_g09
19:19:21  16  ,eur_g10
19:19:21  17  ,eur_g11
19:19:21  18  ,eur_g12
19:19:21  19  ,eur_g13
19:19:21  20  ,eur_g14
19:19:21  21  ,eur_g15
19:19:21  22  ,eur_g16
19:19:21  23  ,eur_g17
19:19:21  24  ,eur_g18
19:19:21  25  ,eur_g19
19:19:21  26  ,eur_g20
19:19:21  27  ,eur_g21
19:19:21  28  ,eur_g22
19:19:21  29  ,eur_g23
19:19:21  30  ,eur_g24
19:19:21  31  ,eur_g25
19:19:21  32  ,eur_g26
19:19:21  33  ,eur_g27
19:19:21  34  ,eur_g28
19:19:21  35  ,eur_g29
19:19:21  36  ,eur_g30
19:19:21  37  ,eur_g31
19:19:21  38  ,eur_g32
19:19:21  39  ,eur_g33
19:19:21  40  ,eur_g34
19:19:21  41  ,eur_g35
19:19:21  42  ,eur_g36
19:19:21  43  ,eur_g37
19:19:21  44  ,eur_g38
19:19:21  45  ,eur_g39
19:19:21  46  ,eur_g40
19:19:21  47  ,eur_g41
19:19:21  48  ,aud_g00
19:19:21  49  ,aud_g01
19:19:21  50  ,aud_g02
19:19:21  51  ,aud_g03
19:19:21  52  ,aud_g04
19:19:21  53  ,aud_g05
19:19:21  54  ,aud_g06
19:19:21  55  ,aud_g07
19:19:21  56  ,aud_g08
19:19:21  57  ,aud_g09
19:19:21  58  ,aud_g10
19:19:21  59  ,aud_g11
19:19:21  60  ,aud_g12
19:19:21  61  ,aud_g13
19:19:21  62  ,aud_g14
19:19:21  63  ,aud_g15
19:19:21  64  ,aud_g16
19:19:21  65  ,aud_g17
19:19:21  66  ,aud_g18
19:19:21  67  ,aud_g19
19:19:21  68  ,aud_g20
19:19:21  69  ,aud_g21
19:19:21  70  ,aud_g22
19:19:21  71  ,aud_g23
19:19:21  72  ,aud_g24
19:19:21  73  ,aud_g25
19:19:21  74  ,aud_g26
19:19:21  75  ,aud_g27
19:19:21  76  ,aud_g28
19:19:21  77  ,aud_g29
19:19:21  78  ,aud_g30
19:19:21  79  ,aud_g31
19:19:21  80  ,aud_g32
19:19:21  81  ,aud_g33
19:19:21  82  ,aud_g34
19:19:21  83  ,aud_g35
19:19:21  84  ,aud_g36
19:19:21  85  ,aud_g37
19:19:21  86  ,aud_g38
19:19:21  87  ,aud_g39
19:19:21  88  ,aud_g40
19:19:21  89  ,aud_g41
19:19:21  90  ,gbp_g00
19:19:21  91  ,gbp_g01
19:19:21  92  ,gbp_g02
19:19:21  93  ,gbp_g03
19:19:21  94  ,gbp_g04
19:19:21  95  ,gbp_g05
19:19:21  96  ,gbp_g06
19:19:21  97  ,gbp_g07
19:19:21  98  ,gbp_g08
19:19:21  99  ,gbp_g09
19:19:21 100  ,gbp_g10
19:19:21 101  ,gbp_g11
19:19:21 102  ,gbp_g12
19:19:21 103  ,gbp_g13
19:19:21 104  ,gbp_g14
19:19:21 105  ,gbp_g15
19:19:21 106  ,gbp_g16
19:19:21 107  ,gbp_g17
19:19:21 108  ,gbp_g18
19:19:21 109  ,gbp_g19
19:19:21 110  ,gbp_g20
19:19:21 111  ,gbp_g21
19:19:21 112  ,gbp_g22
19:19:21 113  ,gbp_g23
19:19:21 114  ,gbp_g24
19:19:21 115  ,gbp_g25
19:19:21 116  ,gbp_g26
19:19:21 117  ,gbp_g27
19:19:21 118  ,gbp_g28
19:19:21 119  ,gbp_g29
19:19:21 120  ,gbp_g30
19:19:21 121  ,gbp_g31
19:19:21 122  ,gbp_g32
19:19:21 123  ,gbp_g33
19:19:21 124  ,gbp_g34
19:19:21 125  ,gbp_g35
19:19:21 126  ,gbp_g36
19:19:21 127  ,gbp_g37
19:19:21 128  ,gbp_g38
19:19:21 129  ,gbp_g39
19:19:21 130  ,gbp_g40
19:19:21 131  ,gbp_g41
19:19:21 132  ,jpy_g00
19:19:21 133  ,jpy_g01
19:19:21 134  ,jpy_g02
19:19:21 135  ,jpy_g03
19:19:21 136  ,jpy_g04
19:19:21 137  ,jpy_g05
19:19:21 138  ,jpy_g06
19:19:21 139  ,jpy_g07
19:19:21 140  ,jpy_g08
19:19:21 141  ,jpy_g09
19:19:21 142  ,jpy_g10
19:19:21 143  ,jpy_g11
19:19:21 144  ,jpy_g12
19:19:21 145  ,jpy_g13
19:19:21 146  ,jpy_g14
19:19:21 147  ,jpy_g15
19:19:21 148  ,jpy_g16
19:19:21 149  ,jpy_g17
19:19:21 150  ,jpy_g18
19:19:21 151  ,jpy_g19
19:19:21 152  ,jpy_g20
19:19:21 153  ,jpy_g21
19:19:21 154  ,jpy_g22
19:19:21 155  ,jpy_g23
19:19:21 156  ,jpy_g24
19:19:21 157  ,jpy_g25
19:19:21 158  ,jpy_g26
19:19:21 159  ,jpy_g27
19:19:21 160  ,jpy_g28
19:19:21 161  ,jpy_g29
19:19:21 162  ,jpy_g30
19:19:21 163  ,jpy_g31
19:19:21 164  ,jpy_g32
19:19:21 165  ,jpy_g33
19:19:21 166  ,jpy_g34
19:19:21 167  ,jpy_g35
19:19:21 168  ,jpy_g36
19:19:21 169  ,jpy_g37
19:19:21 170  ,jpy_g38
19:19:21 171  ,jpy_g39
19:19:21 172  ,jpy_g40
19:19:21 173  ,jpy_g41
19:19:21 174  ,cad_g00
19:19:21 175  ,cad_g01
19:19:21 176  ,cad_g02
19:19:21 177  ,cad_g03
19:19:21 178  ,cad_g04
19:19:21 179  ,cad_g05
19:19:21 180  ,cad_g06
19:19:21 181  ,cad_g07
19:19:21 182  ,cad_g08
19:19:21 183  ,cad_g09
19:19:21 184  ,cad_g10
19:19:21 185  ,cad_g11
19:19:21 186  ,cad_g12
19:19:21 187  ,cad_g13
19:19:21 188  ,cad_g14
19:19:21 189  ,cad_g15
19:19:21 190  ,cad_g16
19:19:21 191  ,cad_g17
19:19:21 192  ,cad_g18
19:19:21 193  ,cad_g19
19:19:21 194  ,cad_g20
19:19:21 195  ,cad_g21
19:19:21 196  ,cad_g22
19:19:21 197  ,cad_g23
19:19:21 198  ,cad_g24
19:19:21 199  ,cad_g25
19:19:21 200  ,cad_g26
19:19:21 201  ,cad_g27
19:19:21 202  ,cad_g28
19:19:21 203  ,cad_g29
19:19:21 204  ,cad_g30
19:19:21 205  ,cad_g31
19:19:21 206  ,cad_g32
19:19:21 207  ,cad_g33
19:19:21 208  ,cad_g34
19:19:21 209  ,cad_g35
19:19:21 210  ,cad_g36
19:19:21 211  ,cad_g37
19:19:21 212  ,cad_g38
19:19:21 213  ,cad_g39
19:19:21 214  ,cad_g40
19:19:21 215  ,cad_g41
19:19:21 216  ,chf_g00
19:19:21 217  ,chf_g01
19:19:21 218  ,chf_g02
19:19:21 219  ,chf_g03
19:19:21 220  ,chf_g04
19:19:21 221  ,chf_g05
19:19:21 222  ,chf_g06
19:19:21 223  ,chf_g07
19:19:21 224  ,chf_g08
19:19:21 225  ,chf_g09
19:19:21 226  ,chf_g10
19:19:21 227  ,chf_g11
19:19:21 228  ,chf_g12
19:19:21 229  ,chf_g13
19:19:21 230  ,chf_g14
19:19:21 231  ,chf_g15
19:19:21 232  ,chf_g16
19:19:21 233  ,chf_g17
19:19:21 234  ,chf_g18
19:19:21 235  ,chf_g19
19:19:21 236  ,chf_g20
19:19:21 237  ,chf_g21
19:19:21 238  ,chf_g22
19:19:21 239  ,chf_g23
19:19:21 240  ,chf_g24
19:19:21 241  ,chf_g25
19:19:21 242  ,chf_g26
19:19:21 243  ,chf_g27
19:19:21 244  ,chf_g28
19:19:21 245  ,chf_g29
19:19:21 246  ,chf_g30
19:19:21 247  ,chf_g31
19:19:21 248  ,chf_g32
19:19:21 249  ,chf_g33
19:19:21 250  ,chf_g34
19:19:21 251  ,chf_g35
19:19:21 252  ,chf_g36
19:19:21 253  ,chf_g37
19:19:21 254  ,chf_g38
19:19:21 255  ,chf_g39
19:19:21 256  ,chf_g40
19:19:21 257  ,chf_g41
19:19:21 258  FROM aud_ms6 m
19:19:21 259  WHERE m.ydate = '&1'||' '||'&2'
19:19:21 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'19:00:00'

View created.

Elapsed: 00:00:00.20
19:19:21 SQL> 
19:19:21 SQL> -- rpt
19:19:21 SQL> -- We should see just 1 row:
19:19:21 SQL> 
19:19:21 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.03
19:19:22 SQL> 
19:19:22 SQL> -- Build the model:
19:19:22 SQL> CREATE OR REPLACE VIEW bme AS
19:19:22   2  SELECT
19:19:22   3  'aud'||m.ydate prdate
19:19:22   4  ,gattn
19:19:22   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:19:22   6  ,eur_g00
19:19:22   7  ,eur_g01
19:19:22   8  ,eur_g02
19:19:22   9  ,eur_g03
19:19:22  10  ,eur_g04
19:19:22  11  ,eur_g05
19:19:22  12  ,eur_g06
19:19:22  13  ,eur_g07
19:19:22  14  ,eur_g08
19:19:22  15  ,eur_g09
19:19:22  16  ,eur_g10
19:19:22  17  ,eur_g11
19:19:22  18  ,eur_g12
19:19:22  19  ,eur_g13
19:19:22  20  ,eur_g14
19:19:22  21  ,eur_g15
19:19:22  22  ,eur_g16
19:19:22  23  ,eur_g17
19:19:22  24  ,eur_g18
19:19:22  25  ,eur_g19
19:19:22  26  ,eur_g20
19:19:22  27  ,eur_g21
19:19:22  28  ,eur_g22
19:19:22  29  ,eur_g23
19:19:22  30  ,eur_g24
19:19:22  31  ,eur_g25
19:19:22  32  ,eur_g26
19:19:22  33  ,eur_g27
19:19:22  34  ,eur_g28
19:19:22  35  ,eur_g29
19:19:22  36  ,eur_g30
19:19:22  37  ,eur_g31
19:19:22  38  ,eur_g32
19:19:22  39  ,eur_g33
19:19:22  40  ,eur_g34
19:19:22  41  ,eur_g35
19:19:22  42  ,eur_g36
19:19:22  43  ,eur_g37
19:19:22  44  ,eur_g38
19:19:22  45  ,eur_g39
19:19:22  46  ,eur_g40
19:19:22  47  ,eur_g41
19:19:22  48  ,aud_g00
19:19:22  49  ,aud_g01
19:19:22  50  ,aud_g02
19:19:22  51  ,aud_g03
19:19:22  52  ,aud_g04
19:19:22  53  ,aud_g05
19:19:22  54  ,aud_g06
19:19:22  55  ,aud_g07
19:19:22  56  ,aud_g08
19:19:22  57  ,aud_g09
19:19:22  58  ,aud_g10
19:19:22  59  ,aud_g11
19:19:22  60  ,aud_g12
19:19:22  61  ,aud_g13
19:19:22  62  ,aud_g14
19:19:22  63  ,aud_g15
19:19:22  64  ,aud_g16
19:19:22  65  ,aud_g17
19:19:22  66  ,aud_g18
19:19:22  67  ,aud_g19
19:19:22  68  ,aud_g20
19:19:22  69  ,aud_g21
19:19:22  70  ,aud_g22
19:19:22  71  ,aud_g23
19:19:22  72  ,aud_g24
19:19:22  73  ,aud_g25
19:19:22  74  ,aud_g26
19:19:22  75  ,aud_g27
19:19:22  76  ,aud_g28
19:19:22  77  ,aud_g29
19:19:22  78  ,aud_g30
19:19:22  79  ,aud_g31
19:19:22  80  ,aud_g32
19:19:22  81  ,aud_g33
19:19:22  82  ,aud_g34
19:19:22  83  ,aud_g35
19:19:22  84  ,aud_g36
19:19:22  85  ,aud_g37
19:19:22  86  ,aud_g38
19:19:22  87  ,aud_g39
19:19:22  88  ,aud_g40
19:19:22  89  ,aud_g41
19:19:22  90  ,gbp_g00
19:19:22  91  ,gbp_g01
19:19:22  92  ,gbp_g02
19:19:22  93  ,gbp_g03
19:19:22  94  ,gbp_g04
19:19:22  95  ,gbp_g05
19:19:22  96  ,gbp_g06
19:19:22  97  ,gbp_g07
19:19:22  98  ,gbp_g08
19:19:22  99  ,gbp_g09
19:19:22 100  ,gbp_g10
19:19:22 101  ,gbp_g11
19:19:22 102  ,gbp_g12
19:19:22 103  ,gbp_g13
19:19:22 104  ,gbp_g14
19:19:22 105  ,gbp_g15
19:19:22 106  ,gbp_g16
19:19:22 107  ,gbp_g17
19:19:22 108  ,gbp_g18
19:19:22 109  ,gbp_g19
19:19:22 110  ,gbp_g20
19:19:22 111  ,gbp_g21
19:19:22 112  ,gbp_g22
19:19:22 113  ,gbp_g23
19:19:22 114  ,gbp_g24
19:19:22 115  ,gbp_g25
19:19:22 116  ,gbp_g26
19:19:22 117  ,gbp_g27
19:19:22 118  ,gbp_g28
19:19:22 119  ,gbp_g29
19:19:22 120  ,gbp_g30
19:19:22 121  ,gbp_g31
19:19:22 122  ,gbp_g32
19:19:22 123  ,gbp_g33
19:19:22 124  ,gbp_g34
19:19:22 125  ,gbp_g35
19:19:22 126  ,gbp_g36
19:19:22 127  ,gbp_g37
19:19:22 128  ,gbp_g38
19:19:22 129  ,gbp_g39
19:19:22 130  ,gbp_g40
19:19:22 131  ,gbp_g41
19:19:22 132  ,jpy_g00
19:19:22 133  ,jpy_g01
19:19:22 134  ,jpy_g02
19:19:22 135  ,jpy_g03
19:19:22 136  ,jpy_g04
19:19:22 137  ,jpy_g05
19:19:22 138  ,jpy_g06
19:19:22 139  ,jpy_g07
19:19:22 140  ,jpy_g08
19:19:22 141  ,jpy_g09
19:19:22 142  ,jpy_g10
19:19:22 143  ,jpy_g11
19:19:22 144  ,jpy_g12
19:19:22 145  ,jpy_g13
19:19:22 146  ,jpy_g14
19:19:22 147  ,jpy_g15
19:19:22 148  ,jpy_g16
19:19:22 149  ,jpy_g17
19:19:22 150  ,jpy_g18
19:19:22 151  ,jpy_g19
19:19:22 152  ,jpy_g20
19:19:22 153  ,jpy_g21
19:19:22 154  ,jpy_g22
19:19:22 155  ,jpy_g23
19:19:22 156  ,jpy_g24
19:19:22 157  ,jpy_g25
19:19:22 158  ,jpy_g26
19:19:22 159  ,jpy_g27
19:19:22 160  ,jpy_g28
19:19:22 161  ,jpy_g29
19:19:22 162  ,jpy_g30
19:19:22 163  ,jpy_g31
19:19:22 164  ,jpy_g32
19:19:22 165  ,jpy_g33
19:19:22 166  ,jpy_g34
19:19:22 167  ,jpy_g35
19:19:22 168  ,jpy_g36
19:19:22 169  ,jpy_g37
19:19:22 170  ,jpy_g38
19:19:22 171  ,jpy_g39
19:19:22 172  ,jpy_g40
19:19:22 173  ,jpy_g41
19:19:22 174  ,cad_g00
19:19:22 175  ,cad_g01
19:19:22 176  ,cad_g02
19:19:22 177  ,cad_g03
19:19:22 178  ,cad_g04
19:19:22 179  ,cad_g05
19:19:22 180  ,cad_g06
19:19:22 181  ,cad_g07
19:19:22 182  ,cad_g08
19:19:22 183  ,cad_g09
19:19:22 184  ,cad_g10
19:19:22 185  ,cad_g11
19:19:22 186  ,cad_g12
19:19:22 187  ,cad_g13
19:19:22 188  ,cad_g14
19:19:22 189  ,cad_g15
19:19:22 190  ,cad_g16
19:19:22 191  ,cad_g17
19:19:22 192  ,cad_g18
19:19:22 193  ,cad_g19
19:19:22 194  ,cad_g20
19:19:22 195  ,cad_g21
19:19:22 196  ,cad_g22
19:19:22 197  ,cad_g23
19:19:22 198  ,cad_g24
19:19:22 199  ,cad_g25
19:19:22 200  ,cad_g26
19:19:22 201  ,cad_g27
19:19:22 202  ,cad_g28
19:19:22 203  ,cad_g29
19:19:22 204  ,cad_g30
19:19:22 205  ,cad_g31
19:19:22 206  ,cad_g32
19:19:22 207  ,cad_g33
19:19:22 208  ,cad_g34
19:19:22 209  ,cad_g35
19:19:22 210  ,cad_g36
19:19:22 211  ,cad_g37
19:19:22 212  ,cad_g38
19:19:22 213  ,cad_g39
19:19:22 214  ,cad_g40
19:19:22 215  ,cad_g41
19:19:22 216  ,chf_g00
19:19:22 217  ,chf_g01
19:19:22 218  ,chf_g02
19:19:22 219  ,chf_g03
19:19:22 220  ,chf_g04
19:19:22 221  ,chf_g05
19:19:22 222  ,chf_g06
19:19:22 223  ,chf_g07
19:19:22 224  ,chf_g08
19:19:22 225  ,chf_g09
19:19:22 226  ,chf_g10
19:19:22 227  ,chf_g11
19:19:22 228  ,chf_g12
19:19:22 229  ,chf_g13
19:19:22 230  ,chf_g14
19:19:22 231  ,chf_g15
19:19:22 232  ,chf_g16
19:19:22 233  ,chf_g17
19:19:22 234  ,chf_g18
19:19:22 235  ,chf_g19
19:19:22 236  ,chf_g20
19:19:22 237  ,chf_g21
19:19:22 238  ,chf_g22
19:19:22 239  ,chf_g23
19:19:22 240  ,chf_g24
19:19:22 241  ,chf_g25
19:19:22 242  ,chf_g26
19:19:22 243  ,chf_g27
19:19:22 244  ,chf_g28
19:19:22 245  ,chf_g29
19:19:22 246  ,chf_g30
19:19:22 247  ,chf_g31
19:19:22 248  ,chf_g32
19:19:22 249  ,chf_g33
19:19:22 250  ,chf_g34
19:19:22 251  ,chf_g35
19:19:22 252  ,chf_g36
19:19:22 253  ,chf_g37
19:19:22 254  ,chf_g38
19:19:22 255  ,chf_g39
19:19:22 256  ,chf_g40
19:19:22 257  ,chf_g41
19:19:22 258  FROM aud_ms6 m
19:19:22 259  WHERE gattn IN('nup','up')
19:19:22 260  AND 1+m.ydate < '&1'||' '||'&2'
19:19:22 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'19:00:00'

View created.

Elapsed: 00:00:00.17
19:19:22 SQL> 
19:19:22 SQL> -- rpt
19:19:22 SQL> 
19:19:22 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12865
up	     6628

Elapsed: 00:00:00.04
19:19:22 SQL> 
19:19:22 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 18:55:00

Elapsed: 00:00:00.03
19:19:22 SQL> 
19:19:22 SQL> -- Now build model from bme and score sme
19:19:22 SQL> @score1gattn.sql
19:19:22 SQL> -- score1gattn.sql
19:19:22 SQL> 
19:19:22 SQL> -- Does the 1st SVM score
19:19:22 SQL> 
19:19:22 SQL> -- Fill up svmc_apply_prep
19:19:22 SQL> @score_gattn.sql
19:19:22 SQL> --
19:19:22 SQL> -- score_gattn.sql
19:19:22 SQL> --
19:19:22 SQL> 
19:19:22 SQL> -- usage: score_gattn.sql
19:19:22 SQL> 
19:19:22 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
19:19:22 SQL> 
19:19:22 SQL> DEFINE target	= 'gattn'
19:19:22 SQL> DEFINE model_name = 'forex15'
19:19:22 SQL> DEFINE bldtable	= 'bme'
19:19:22 SQL> DEFINE scoretable = 'sme'
19:19:22 SQL> DEFINE case_id	= 'prdate'
19:19:22 SQL> 
19:19:22 SQL> -- Define a variable to help me exclude some columns from some data mining calls
19:19:22 SQL> DEFINE exclude1 = "'&target','&case_id'"
19:19:22 SQL> 
19:19:22 SQL> -- Builds an SVM model using pl/sql.
19:19:22 SQL> 
19:19:22 SQL> -----------------------------------------------------------------------
19:19:22 SQL> --			    BUILD THE MODEL
19:19:22 SQL> -----------------------------------------------------------------------
19:19:22 SQL> 
19:19:22 SQL> -- Cleanup old build data preparation objects for repeat runs
19:19:22 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
19:19:22 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
19:19:22 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
19:19:22 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
19:19:22 SQL> 
19:19:22 SQL> 
19:19:22 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
19:19:22 SQL> --
19:19:22 SQL> -- DROP	TABLE svmc_settings ;
19:19:22 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
19:19:22 SQL> -- DELETE svmc_settings;
19:19:22 SQL> 
19:19:22 SQL> -- The default classification algorithm is Naive Bayes. So override
19:19:22 SQL> -- this choice to SVM using a settings table.
19:19:22 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
19:19:22 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
19:19:22 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
19:19:22 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
19:19:22 SQL> -- models.
19:19:22 SQL> --
19:19:22 SQL> 
19:19:22 SQL> -- Do this once and then comment it out.
19:19:22 SQL> -- That makes script go faster.
19:19:22 SQL> -- BEGIN
19:19:22 SQL> -- -- Populate settings table
19:19:22 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:19:22 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
19:19:22 SQL> --
19:19:22 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:19:22 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
19:19:22 SQL> --
19:19:22 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:19:22 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
19:19:22 SQL> --   COMMIT;
19:19:22 SQL> -- END;
19:19:22 SQL> -- /
19:19:22 SQL> 
19:19:22 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
19:19:22 SQL> 
19:19:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
19:19:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:19:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.21
19:19:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
19:19:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:19:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
19:19:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
19:19:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:19:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
19:19:22 SQL> 
19:19:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
19:19:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:19:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
19:19:22 SQL> 
19:19:22 SQL> --------------------------------
19:19:22 SQL> -- PREPARE BUILD (TRAINING) DATA
19:19:22 SQL> --
19:19:22 SQL> 
19:19:22 SQL> -- 1. Missing Value treatment for all Predictors and
19:19:22 SQL> -- 2. Outlier Treatment and
19:19:22 SQL> -- 3. Normalization are performed below.
19:19:22 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
19:19:22 SQL> --    normalized here.
19:19:22 SQL> 
19:19:22 SQL> BEGIN
19:19:22   2  	-- Perform missing value treatment for all predictors
19:19:22   3  	-- create miss tables
19:19:22   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
19:19:22   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
19:19:22   6  
19:19:22   7  	-- populate miss tables
19:19:22   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
19:19:22   9  	  miss_table_name => 'svmc_miss_num',
19:19:22  10  	  data_table_name => '&bldtable',
19:19:22  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:19:22  12  
19:19:22  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
19:19:22  14  	  miss_table_name => 'svmc_miss_cat',
19:19:22  15  	  data_table_name => '&bldtable',
19:19:22  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:19:22  17  
19:19:22  18  	-- xform input data to replace missing values
19:19:22  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:19:22  20  	  miss_table_name => 'svmc_miss_num',
19:19:22  21  	  data_table_name => '&bldtable',
19:19:22  22  	  xform_view_name => 'xformed_build_miss_num');
19:19:22  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:19:22  24  	  miss_table_name => 'svmc_miss_cat',
19:19:22  25  	  data_table_name => '&bldtable',
19:19:22  26  	  xform_view_name => 'xformed_build_miss_cat');
19:19:22  27  
19:19:22  28  	-- Perform outlier treatment.
19:19:22  29  	-- create clip table
19:19:22  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
19:19:22  31  
19:19:22  32  	-- populate clip table
19:19:22  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
19:19:22  34  	  clip_table_name => 'svmc_clip',
19:19:22  35  	  data_table_name => '&bldtable',
19:19:22  36  	  tail_frac	  => 0.025,
19:19:22  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:19:22  38  
19:19:22  39  	-- xform input data to winsorized data
19:19:22  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
19:19:22  41  	  clip_table_name => 'svmc_clip',
19:19:22  42  	  data_table_name => '&bldtable',
19:19:22  43  	  xform_view_name => 'svmc_winsor');
19:19:22  44  
19:19:22  45  	-- create normalization table
19:19:22  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
19:19:22  47  
19:19:22  48  	-- populate normalization table based on winsorized data
19:19:22  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
19:19:22  50  	  norm_table_name => 'svmc_norm',
19:19:22  51  	  data_table_name => 'svmc_winsor',
19:19:22  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:19:22  53  
19:19:22  54  	-- normalize the original data
19:19:22  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:19:22  56  	  norm_table_name => 'svmc_norm',
19:19:22  57  	  data_table_name => '&bldtable',
19:19:22  58  	  xform_view_name => 'svmc_build_prep');
19:19:22  59  END;
19:19:22  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.82
19:19:41 SQL> 
19:19:41 SQL> ---------------------
19:19:41 SQL> -- CREATE A NEW MODEL
19:19:41 SQL> --
19:19:41 SQL> -- Cleanup old model with the same name for repeat runs
19:19:41 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
19:19:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:19:41   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.96
19:19:42 SQL> 
19:19:42 SQL> -- Build a new SVM Model
19:19:42 SQL> BEGIN
19:19:42   2  	DBMS_DATA_MINING.CREATE_MODEL(
19:19:42   3  	  model_name	      => '&model_name',
19:19:42   4  	  mining_function     => dbms_data_mining.classification,
19:19:42   5  	  data_table_name     => 'svmc_build_prep',
19:19:42   6  	  case_id_column_name => '&case_id',
19:19:42   7  	  target_column_name  => '&target',
19:19:42   8  	  settings_table_name => 'svmc_settings');
19:19:42   9  END;
19:19:42  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.24
19:20:09 SQL> 
19:20:09 SQL> -----------------------------------------------------------------------
19:20:09 SQL> --			       APPLY/score THE MODEL
19:20:09 SQL> -----------------------------------------------------------------------
19:20:09 SQL> 
19:20:09 SQL> -- Cleanup old scoring data preparation objects for repeat runs
19:20:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
19:20:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:20:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
19:20:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
19:20:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:20:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:20:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
19:20:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:20:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
19:20:10 SQL> -----------------------
19:20:10 SQL> -- PREPARE SCORING DATA
19:20:10 SQL> --
19:20:10 SQL> -- If the data for model creation has been prepared, then the data
19:20:10 SQL> -- to be scored using the model must be prepared in the same manner
19:20:10 SQL> -- in order to obtain meaningful results.
19:20:10 SQL> --
19:20:10 SQL> -- 1. Missing Value treatment for all Predictors and
19:20:10 SQL> -- 2. Normalization
19:20:10 SQL> -- No outlier treatment will be performed during test and apply. The
19:20:10 SQL> -- normalization step is sufficient, since the normalization parameters
19:20:10 SQL> -- already capture the effects of outlier treatment done with build data.
19:20:10 SQL> --
19:20:10 SQL> BEGIN
19:20:10   2  	-- Xform Test data to replace missing values
19:20:10   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:20:10   4  	  miss_table_name => 'svmc_miss_num',
19:20:10   5  	  data_table_name => '&scoretable',
19:20:10   6  	  xform_view_name => 'xformed_apply_miss_num');
19:20:10   7  
19:20:10   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:20:10   9  	  miss_table_name => 'svmc_miss_cat',
19:20:10  10  	  data_table_name => '&scoretable',
19:20:10  11  	  xform_view_name => 'xformed_apply_miss_cat');
19:20:10  12  
19:20:10  13  	-- Normalize the data to be scored
19:20:10  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:20:10  15  	  norm_table_name => 'svmc_norm',
19:20:10  16  	  data_table_name => '&scoretable',
19:20:10  17  	  xform_view_name => 'svmc_apply_prep');
19:20:10  18  END;
19:20:10  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
19:20:11 SQL> 
19:20:11 SQL> -- Use same model_name used in score_gattn.sql
19:20:11 SQL> DEFINE model_name = 'forex15'
19:20:11 SQL> 
19:20:11 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
19:20:11 SQL> 
19:20:11 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
19:20:11   2  SELECT
19:20:11   3  prdate
19:20:11   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
19:20:11   5  ,sysdate
19:20:11   6  ,SUBSTR(prdate,1,3)pair
19:20:11   7  ,SUBSTR(prdate,4,19)ydate
19:20:11   8  FROM svmc_apply_prep
19:20:11   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
19:20:11 SQL> @aud_score1day_gattn.sql	2011-01-06 19:05:00
19:20:11 SQL> --
19:20:11 SQL> -- aud_score1day_gattn.sql
19:20:11 SQL> --
19:20:11 SQL> 
19:20:11 SQL> CREATE OR REPLACE VIEW sme AS
19:20:11   2  SELECT
19:20:11   3  'aud'||m.ydate prdate
19:20:11   4  ,NULL gattn
19:20:11   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:20:11   6  ,eur_g00
19:20:11   7  ,eur_g01
19:20:11   8  ,eur_g02
19:20:11   9  ,eur_g03
19:20:11  10  ,eur_g04
19:20:11  11  ,eur_g05
19:20:11  12  ,eur_g06
19:20:11  13  ,eur_g07
19:20:11  14  ,eur_g08
19:20:11  15  ,eur_g09
19:20:11  16  ,eur_g10
19:20:11  17  ,eur_g11
19:20:11  18  ,eur_g12
19:20:11  19  ,eur_g13
19:20:11  20  ,eur_g14
19:20:11  21  ,eur_g15
19:20:11  22  ,eur_g16
19:20:11  23  ,eur_g17
19:20:11  24  ,eur_g18
19:20:11  25  ,eur_g19
19:20:11  26  ,eur_g20
19:20:11  27  ,eur_g21
19:20:11  28  ,eur_g22
19:20:11  29  ,eur_g23
19:20:11  30  ,eur_g24
19:20:11  31  ,eur_g25
19:20:11  32  ,eur_g26
19:20:11  33  ,eur_g27
19:20:11  34  ,eur_g28
19:20:11  35  ,eur_g29
19:20:11  36  ,eur_g30
19:20:11  37  ,eur_g31
19:20:11  38  ,eur_g32
19:20:11  39  ,eur_g33
19:20:11  40  ,eur_g34
19:20:11  41  ,eur_g35
19:20:11  42  ,eur_g36
19:20:11  43  ,eur_g37
19:20:11  44  ,eur_g38
19:20:11  45  ,eur_g39
19:20:11  46  ,eur_g40
19:20:11  47  ,eur_g41
19:20:11  48  ,aud_g00
19:20:11  49  ,aud_g01
19:20:11  50  ,aud_g02
19:20:11  51  ,aud_g03
19:20:11  52  ,aud_g04
19:20:11  53  ,aud_g05
19:20:11  54  ,aud_g06
19:20:11  55  ,aud_g07
19:20:11  56  ,aud_g08
19:20:11  57  ,aud_g09
19:20:11  58  ,aud_g10
19:20:11  59  ,aud_g11
19:20:11  60  ,aud_g12
19:20:11  61  ,aud_g13
19:20:11  62  ,aud_g14
19:20:11  63  ,aud_g15
19:20:11  64  ,aud_g16
19:20:11  65  ,aud_g17
19:20:11  66  ,aud_g18
19:20:11  67  ,aud_g19
19:20:11  68  ,aud_g20
19:20:11  69  ,aud_g21
19:20:11  70  ,aud_g22
19:20:11  71  ,aud_g23
19:20:11  72  ,aud_g24
19:20:11  73  ,aud_g25
19:20:11  74  ,aud_g26
19:20:11  75  ,aud_g27
19:20:11  76  ,aud_g28
19:20:11  77  ,aud_g29
19:20:11  78  ,aud_g30
19:20:11  79  ,aud_g31
19:20:11  80  ,aud_g32
19:20:11  81  ,aud_g33
19:20:11  82  ,aud_g34
19:20:11  83  ,aud_g35
19:20:11  84  ,aud_g36
19:20:11  85  ,aud_g37
19:20:11  86  ,aud_g38
19:20:11  87  ,aud_g39
19:20:11  88  ,aud_g40
19:20:11  89  ,aud_g41
19:20:11  90  ,gbp_g00
19:20:11  91  ,gbp_g01
19:20:11  92  ,gbp_g02
19:20:11  93  ,gbp_g03
19:20:11  94  ,gbp_g04
19:20:11  95  ,gbp_g05
19:20:11  96  ,gbp_g06
19:20:11  97  ,gbp_g07
19:20:11  98  ,gbp_g08
19:20:11  99  ,gbp_g09
19:20:11 100  ,gbp_g10
19:20:11 101  ,gbp_g11
19:20:11 102  ,gbp_g12
19:20:11 103  ,gbp_g13
19:20:11 104  ,gbp_g14
19:20:11 105  ,gbp_g15
19:20:11 106  ,gbp_g16
19:20:11 107  ,gbp_g17
19:20:11 108  ,gbp_g18
19:20:11 109  ,gbp_g19
19:20:11 110  ,gbp_g20
19:20:11 111  ,gbp_g21
19:20:11 112  ,gbp_g22
19:20:11 113  ,gbp_g23
19:20:11 114  ,gbp_g24
19:20:11 115  ,gbp_g25
19:20:11 116  ,gbp_g26
19:20:11 117  ,gbp_g27
19:20:11 118  ,gbp_g28
19:20:11 119  ,gbp_g29
19:20:11 120  ,gbp_g30
19:20:11 121  ,gbp_g31
19:20:11 122  ,gbp_g32
19:20:11 123  ,gbp_g33
19:20:11 124  ,gbp_g34
19:20:11 125  ,gbp_g35
19:20:11 126  ,gbp_g36
19:20:11 127  ,gbp_g37
19:20:11 128  ,gbp_g38
19:20:11 129  ,gbp_g39
19:20:11 130  ,gbp_g40
19:20:11 131  ,gbp_g41
19:20:11 132  ,jpy_g00
19:20:11 133  ,jpy_g01
19:20:11 134  ,jpy_g02
19:20:11 135  ,jpy_g03
19:20:11 136  ,jpy_g04
19:20:11 137  ,jpy_g05
19:20:11 138  ,jpy_g06
19:20:11 139  ,jpy_g07
19:20:11 140  ,jpy_g08
19:20:11 141  ,jpy_g09
19:20:11 142  ,jpy_g10
19:20:11 143  ,jpy_g11
19:20:11 144  ,jpy_g12
19:20:11 145  ,jpy_g13
19:20:11 146  ,jpy_g14
19:20:11 147  ,jpy_g15
19:20:11 148  ,jpy_g16
19:20:11 149  ,jpy_g17
19:20:11 150  ,jpy_g18
19:20:11 151  ,jpy_g19
19:20:11 152  ,jpy_g20
19:20:11 153  ,jpy_g21
19:20:11 154  ,jpy_g22
19:20:11 155  ,jpy_g23
19:20:11 156  ,jpy_g24
19:20:11 157  ,jpy_g25
19:20:11 158  ,jpy_g26
19:20:11 159  ,jpy_g27
19:20:11 160  ,jpy_g28
19:20:11 161  ,jpy_g29
19:20:11 162  ,jpy_g30
19:20:11 163  ,jpy_g31
19:20:11 164  ,jpy_g32
19:20:11 165  ,jpy_g33
19:20:11 166  ,jpy_g34
19:20:11 167  ,jpy_g35
19:20:11 168  ,jpy_g36
19:20:11 169  ,jpy_g37
19:20:11 170  ,jpy_g38
19:20:11 171  ,jpy_g39
19:20:11 172  ,jpy_g40
19:20:11 173  ,jpy_g41
19:20:11 174  ,cad_g00
19:20:11 175  ,cad_g01
19:20:11 176  ,cad_g02
19:20:11 177  ,cad_g03
19:20:11 178  ,cad_g04
19:20:11 179  ,cad_g05
19:20:11 180  ,cad_g06
19:20:11 181  ,cad_g07
19:20:11 182  ,cad_g08
19:20:11 183  ,cad_g09
19:20:11 184  ,cad_g10
19:20:11 185  ,cad_g11
19:20:11 186  ,cad_g12
19:20:11 187  ,cad_g13
19:20:11 188  ,cad_g14
19:20:11 189  ,cad_g15
19:20:11 190  ,cad_g16
19:20:11 191  ,cad_g17
19:20:11 192  ,cad_g18
19:20:11 193  ,cad_g19
19:20:11 194  ,cad_g20
19:20:11 195  ,cad_g21
19:20:11 196  ,cad_g22
19:20:11 197  ,cad_g23
19:20:11 198  ,cad_g24
19:20:11 199  ,cad_g25
19:20:11 200  ,cad_g26
19:20:11 201  ,cad_g27
19:20:11 202  ,cad_g28
19:20:11 203  ,cad_g29
19:20:11 204  ,cad_g30
19:20:11 205  ,cad_g31
19:20:11 206  ,cad_g32
19:20:11 207  ,cad_g33
19:20:11 208  ,cad_g34
19:20:11 209  ,cad_g35
19:20:11 210  ,cad_g36
19:20:11 211  ,cad_g37
19:20:11 212  ,cad_g38
19:20:11 213  ,cad_g39
19:20:11 214  ,cad_g40
19:20:11 215  ,cad_g41
19:20:11 216  ,chf_g00
19:20:11 217  ,chf_g01
19:20:11 218  ,chf_g02
19:20:11 219  ,chf_g03
19:20:11 220  ,chf_g04
19:20:11 221  ,chf_g05
19:20:11 222  ,chf_g06
19:20:11 223  ,chf_g07
19:20:11 224  ,chf_g08
19:20:11 225  ,chf_g09
19:20:11 226  ,chf_g10
19:20:11 227  ,chf_g11
19:20:11 228  ,chf_g12
19:20:11 229  ,chf_g13
19:20:11 230  ,chf_g14
19:20:11 231  ,chf_g15
19:20:11 232  ,chf_g16
19:20:11 233  ,chf_g17
19:20:11 234  ,chf_g18
19:20:11 235  ,chf_g19
19:20:11 236  ,chf_g20
19:20:11 237  ,chf_g21
19:20:11 238  ,chf_g22
19:20:11 239  ,chf_g23
19:20:11 240  ,chf_g24
19:20:11 241  ,chf_g25
19:20:11 242  ,chf_g26
19:20:11 243  ,chf_g27
19:20:11 244  ,chf_g28
19:20:11 245  ,chf_g29
19:20:11 246  ,chf_g30
19:20:11 247  ,chf_g31
19:20:11 248  ,chf_g32
19:20:11 249  ,chf_g33
19:20:11 250  ,chf_g34
19:20:11 251  ,chf_g35
19:20:11 252  ,chf_g36
19:20:11 253  ,chf_g37
19:20:11 254  ,chf_g38
19:20:11 255  ,chf_g39
19:20:11 256  ,chf_g40
19:20:11 257  ,chf_g41
19:20:11 258  FROM aud_ms6 m
19:20:11 259  WHERE m.ydate = '&1'||' '||'&2'
19:20:11 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'19:05:00'

View created.

Elapsed: 00:00:00.12
19:20:11 SQL> 
19:20:11 SQL> -- rpt
19:20:11 SQL> -- We should see just 1 row:
19:20:11 SQL> 
19:20:11 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
19:20:11 SQL> 
19:20:11 SQL> -- Build the model:
19:20:11 SQL> CREATE OR REPLACE VIEW bme AS
19:20:11   2  SELECT
19:20:11   3  'aud'||m.ydate prdate
19:20:11   4  ,gattn
19:20:11   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
19:20:11   6  ,eur_g00
19:20:11   7  ,eur_g01
19:20:11   8  ,eur_g02
19:20:11   9  ,eur_g03
19:20:11  10  ,eur_g04
19:20:11  11  ,eur_g05
19:20:11  12  ,eur_g06
19:20:11  13  ,eur_g07
19:20:11  14  ,eur_g08
19:20:11  15  ,eur_g09
19:20:11  16  ,eur_g10
19:20:11  17  ,eur_g11
19:20:11  18  ,eur_g12
19:20:11  19  ,eur_g13
19:20:11  20  ,eur_g14
19:20:11  21  ,eur_g15
19:20:11  22  ,eur_g16
19:20:11  23  ,eur_g17
19:20:11  24  ,eur_g18
19:20:11  25  ,eur_g19
19:20:11  26  ,eur_g20
19:20:11  27  ,eur_g21
19:20:11  28  ,eur_g22
19:20:11  29  ,eur_g23
19:20:11  30  ,eur_g24
19:20:11  31  ,eur_g25
19:20:11  32  ,eur_g26
19:20:11  33  ,eur_g27
19:20:11  34  ,eur_g28
19:20:11  35  ,eur_g29
19:20:11  36  ,eur_g30
19:20:11  37  ,eur_g31
19:20:11  38  ,eur_g32
19:20:11  39  ,eur_g33
19:20:11  40  ,eur_g34
19:20:11  41  ,eur_g35
19:20:11  42  ,eur_g36
19:20:11  43  ,eur_g37
19:20:11  44  ,eur_g38
19:20:11  45  ,eur_g39
19:20:11  46  ,eur_g40
19:20:11  47  ,eur_g41
19:20:11  48  ,aud_g00
19:20:11  49  ,aud_g01
19:20:11  50  ,aud_g02
19:20:11  51  ,aud_g03
19:20:11  52  ,aud_g04
19:20:11  53  ,aud_g05
19:20:11  54  ,aud_g06
19:20:11  55  ,aud_g07
19:20:11  56  ,aud_g08
19:20:11  57  ,aud_g09
19:20:11  58  ,aud_g10
19:20:11  59  ,aud_g11
19:20:11  60  ,aud_g12
19:20:11  61  ,aud_g13
19:20:11  62  ,aud_g14
19:20:11  63  ,aud_g15
19:20:11  64  ,aud_g16
19:20:11  65  ,aud_g17
19:20:11  66  ,aud_g18
19:20:11  67  ,aud_g19
19:20:11  68  ,aud_g20
19:20:11  69  ,aud_g21
19:20:11  70  ,aud_g22
19:20:11  71  ,aud_g23
19:20:11  72  ,aud_g24
19:20:11  73  ,aud_g25
19:20:11  74  ,aud_g26
19:20:11  75  ,aud_g27
19:20:11  76  ,aud_g28
19:20:11  77  ,aud_g29
19:20:11  78  ,aud_g30
19:20:11  79  ,aud_g31
19:20:11  80  ,aud_g32
19:20:11  81  ,aud_g33
19:20:11  82  ,aud_g34
19:20:11  83  ,aud_g35
19:20:11  84  ,aud_g36
19:20:11  85  ,aud_g37
19:20:11  86  ,aud_g38
19:20:11  87  ,aud_g39
19:20:11  88  ,aud_g40
19:20:11  89  ,aud_g41
19:20:11  90  ,gbp_g00
19:20:11  91  ,gbp_g01
19:20:11  92  ,gbp_g02
19:20:11  93  ,gbp_g03
19:20:11  94  ,gbp_g04
19:20:11  95  ,gbp_g05
19:20:11  96  ,gbp_g06
19:20:11  97  ,gbp_g07
19:20:11  98  ,gbp_g08
19:20:11  99  ,gbp_g09
19:20:11 100  ,gbp_g10
19:20:11 101  ,gbp_g11
19:20:11 102  ,gbp_g12
19:20:11 103  ,gbp_g13
19:20:11 104  ,gbp_g14
19:20:11 105  ,gbp_g15
19:20:11 106  ,gbp_g16
19:20:11 107  ,gbp_g17
19:20:11 108  ,gbp_g18
19:20:11 109  ,gbp_g19
19:20:11 110  ,gbp_g20
19:20:11 111  ,gbp_g21
19:20:11 112  ,gbp_g22
19:20:11 113  ,gbp_g23
19:20:11 114  ,gbp_g24
19:20:11 115  ,gbp_g25
19:20:11 116  ,gbp_g26
19:20:11 117  ,gbp_g27
19:20:11 118  ,gbp_g28
19:20:11 119  ,gbp_g29
19:20:11 120  ,gbp_g30
19:20:11 121  ,gbp_g31
19:20:11 122  ,gbp_g32
19:20:11 123  ,gbp_g33
19:20:11 124  ,gbp_g34
19:20:11 125  ,gbp_g35
19:20:11 126  ,gbp_g36
19:20:11 127  ,gbp_g37
19:20:11 128  ,gbp_g38
19:20:11 129  ,gbp_g39
19:20:11 130  ,gbp_g40
19:20:11 131  ,gbp_g41
19:20:11 132  ,jpy_g00
19:20:11 133  ,jpy_g01
19:20:11 134  ,jpy_g02
19:20:11 135  ,jpy_g03
19:20:11 136  ,jpy_g04
19:20:11 137  ,jpy_g05
19:20:11 138  ,jpy_g06
19:20:11 139  ,jpy_g07
19:20:11 140  ,jpy_g08
19:20:11 141  ,jpy_g09
19:20:11 142  ,jpy_g10
19:20:11 143  ,jpy_g11
19:20:11 144  ,jpy_g12
19:20:11 145  ,jpy_g13
19:20:11 146  ,jpy_g14
19:20:11 147  ,jpy_g15
19:20:11 148  ,jpy_g16
19:20:11 149  ,jpy_g17
19:20:11 150  ,jpy_g18
19:20:11 151  ,jpy_g19
19:20:11 152  ,jpy_g20
19:20:11 153  ,jpy_g21
19:20:11 154  ,jpy_g22
19:20:11 155  ,jpy_g23
19:20:11 156  ,jpy_g24
19:20:11 157  ,jpy_g25
19:20:11 158  ,jpy_g26
19:20:11 159  ,jpy_g27
19:20:11 160  ,jpy_g28
19:20:11 161  ,jpy_g29
19:20:11 162  ,jpy_g30
19:20:11 163  ,jpy_g31
19:20:11 164  ,jpy_g32
19:20:11 165  ,jpy_g33
19:20:11 166  ,jpy_g34
19:20:11 167  ,jpy_g35
19:20:11 168  ,jpy_g36
19:20:11 169  ,jpy_g37
19:20:11 170  ,jpy_g38
19:20:11 171  ,jpy_g39
19:20:11 172  ,jpy_g40
19:20:11 173  ,jpy_g41
19:20:11 174  ,cad_g00
19:20:11 175  ,cad_g01
19:20:11 176  ,cad_g02
19:20:11 177  ,cad_g03
19:20:11 178  ,cad_g04
19:20:11 179  ,cad_g05
19:20:11 180  ,cad_g06
19:20:11 181  ,cad_g07
19:20:11 182  ,cad_g08
19:20:11 183  ,cad_g09
19:20:11 184  ,cad_g10
19:20:11 185  ,cad_g11
19:20:11 186  ,cad_g12
19:20:11 187  ,cad_g13
19:20:11 188  ,cad_g14
19:20:11 189  ,cad_g15
19:20:11 190  ,cad_g16
19:20:11 191  ,cad_g17
19:20:11 192  ,cad_g18
19:20:11 193  ,cad_g19
19:20:11 194  ,cad_g20
19:20:11 195  ,cad_g21
19:20:11 196  ,cad_g22
19:20:11 197  ,cad_g23
19:20:11 198  ,cad_g24
19:20:11 199  ,cad_g25
19:20:11 200  ,cad_g26
19:20:11 201  ,cad_g27
19:20:11 202  ,cad_g28
19:20:11 203  ,cad_g29
19:20:11 204  ,cad_g30
19:20:11 205  ,cad_g31
19:20:11 206  ,cad_g32
19:20:11 207  ,cad_g33
19:20:11 208  ,cad_g34
19:20:11 209  ,cad_g35
19:20:11 210  ,cad_g36
19:20:11 211  ,cad_g37
19:20:11 212  ,cad_g38
19:20:11 213  ,cad_g39
19:20:11 214  ,cad_g40
19:20:11 215  ,cad_g41
19:20:11 216  ,chf_g00
19:20:11 217  ,chf_g01
19:20:11 218  ,chf_g02
19:20:11 219  ,chf_g03
19:20:11 220  ,chf_g04
19:20:11 221  ,chf_g05
19:20:11 222  ,chf_g06
19:20:11 223  ,chf_g07
19:20:11 224  ,chf_g08
19:20:11 225  ,chf_g09
19:20:11 226  ,chf_g10
19:20:11 227  ,chf_g11
19:20:11 228  ,chf_g12
19:20:11 229  ,chf_g13
19:20:11 230  ,chf_g14
19:20:11 231  ,chf_g15
19:20:11 232  ,chf_g16
19:20:11 233  ,chf_g17
19:20:11 234  ,chf_g18
19:20:11 235  ,chf_g19
19:20:11 236  ,chf_g20
19:20:11 237  ,chf_g21
19:20:11 238  ,chf_g22
19:20:11 239  ,chf_g23
19:20:11 240  ,chf_g24
19:20:11 241  ,chf_g25
19:20:11 242  ,chf_g26
19:20:11 243  ,chf_g27
19:20:11 244  ,chf_g28
19:20:11 245  ,chf_g29
19:20:11 246  ,chf_g30
19:20:11 247  ,chf_g31
19:20:11 248  ,chf_g32
19:20:11 249  ,chf_g33
19:20:11 250  ,chf_g34
19:20:11 251  ,chf_g35
19:20:11 252  ,chf_g36
19:20:11 253  ,chf_g37
19:20:11 254  ,chf_g38
19:20:11 255  ,chf_g39
19:20:11 256  ,chf_g40
19:20:11 257  ,chf_g41
19:20:11 258  FROM aud_ms6 m
19:20:11 259  WHERE gattn IN('nup','up')
19:20:11 260  AND 1+m.ydate < '&1'||' '||'&2'
19:20:11 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'19:05:00'

View created.

Elapsed: 00:00:00.13
19:20:11 SQL> 
19:20:11 SQL> -- rpt
19:20:11 SQL> 
19:20:11 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12865
up	     6629

Elapsed: 00:00:00.05
19:20:11 SQL> 
19:20:11 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 19:00:00

Elapsed: 00:00:00.03
19:20:11 SQL> 
19:20:11 SQL> -- Now build model from bme and score sme
19:20:11 SQL> @score1gattn.sql
19:20:11 SQL> -- score1gattn.sql
19:20:11 SQL> 
19:20:11 SQL> -- Does the 1st SVM score
19:20:11 SQL> 
19:20:11 SQL> -- Fill up svmc_apply_prep
19:20:11 SQL> @score_gattn.sql
19:20:11 SQL> --
19:20:11 SQL> -- score_gattn.sql
19:20:11 SQL> --
19:20:11 SQL> 
19:20:11 SQL> -- usage: score_gattn.sql
19:20:11 SQL> 
19:20:11 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
19:20:11 SQL> 
19:20:11 SQL> DEFINE target	= 'gattn'
19:20:11 SQL> DEFINE model_name = 'forex15'
19:20:11 SQL> DEFINE bldtable	= 'bme'
19:20:11 SQL> DEFINE scoretable = 'sme'
19:20:11 SQL> DEFINE case_id	= 'prdate'
19:20:11 SQL> 
19:20:11 SQL> -- Define a variable to help me exclude some columns from some data mining calls
19:20:11 SQL> DEFINE exclude1 = "'&target','&case_id'"
19:20:11 SQL> 
19:20:11 SQL> -- Builds an SVM model using pl/sql.
19:20:11 SQL> 
19:20:11 SQL> -----------------------------------------------------------------------
19:20:11 SQL> --			    BUILD THE MODEL
19:20:11 SQL> -----------------------------------------------------------------------
19:20:11 SQL> 
19:20:11 SQL> -- Cleanup old build data preparation objects for repeat runs
19:20:11 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
19:20:11 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
19:20:11 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
19:20:11 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
19:20:11 SQL> 
19:20:11 SQL> 
19:20:11 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
19:20:11 SQL> --
19:20:11 SQL> -- DROP	TABLE svmc_settings ;
19:20:11 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
19:20:11 SQL> -- DELETE svmc_settings;
19:20:11 SQL> 
19:20:11 SQL> -- The default classification algorithm is Naive Bayes. So override
19:20:11 SQL> -- this choice to SVM using a settings table.
19:20:11 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
19:20:11 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
19:20:11 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
19:20:11 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
19:20:11 SQL> -- models.
19:20:11 SQL> --
19:20:11 SQL> 
19:20:11 SQL> -- Do this once and then comment it out.
19:20:11 SQL> -- That makes script go faster.
19:20:11 SQL> -- BEGIN
19:20:11 SQL> -- -- Populate settings table
19:20:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:20:11 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
19:20:11 SQL> --
19:20:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:20:11 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
19:20:11 SQL> --
19:20:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
19:20:11 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
19:20:11 SQL> --   COMMIT;
19:20:11 SQL> -- END;
19:20:11 SQL> -- /
19:20:11 SQL> 
19:20:11 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
19:20:11 SQL> 
19:20:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
19:20:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:20:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:20:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
19:20:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:20:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:20:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
19:20:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:20:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:20:12 SQL> 
19:20:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
19:20:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:20:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:20:12 SQL> 
19:20:12 SQL> --------------------------------
19:20:12 SQL> -- PREPARE BUILD (TRAINING) DATA
19:20:12 SQL> --
19:20:12 SQL> 
19:20:12 SQL> -- 1. Missing Value treatment for all Predictors and
19:20:12 SQL> -- 2. Outlier Treatment and
19:20:12 SQL> -- 3. Normalization are performed below.
19:20:12 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
19:20:12 SQL> --    normalized here.
19:20:12 SQL> 
19:20:12 SQL> BEGIN
19:20:12   2  	-- Perform missing value treatment for all predictors
19:20:12   3  	-- create miss tables
19:20:12   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
19:20:12   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
19:20:12   6  
19:20:12   7  	-- populate miss tables
19:20:12   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
19:20:12   9  	  miss_table_name => 'svmc_miss_num',
19:20:12  10  	  data_table_name => '&bldtable',
19:20:12  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:20:12  12  
19:20:12  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
19:20:12  14  	  miss_table_name => 'svmc_miss_cat',
19:20:12  15  	  data_table_name => '&bldtable',
19:20:12  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:20:12  17  
19:20:12  18  	-- xform input data to replace missing values
19:20:12  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:20:12  20  	  miss_table_name => 'svmc_miss_num',
19:20:12  21  	  data_table_name => '&bldtable',
19:20:12  22  	  xform_view_name => 'xformed_build_miss_num');
19:20:12  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:20:12  24  	  miss_table_name => 'svmc_miss_cat',
19:20:12  25  	  data_table_name => '&bldtable',
19:20:12  26  	  xform_view_name => 'xformed_build_miss_cat');
19:20:12  27  
19:20:12  28  	-- Perform outlier treatment.
19:20:12  29  	-- create clip table
19:20:12  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
19:20:12  31  
19:20:12  32  	-- populate clip table
19:20:12  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
19:20:12  34  	  clip_table_name => 'svmc_clip',
19:20:12  35  	  data_table_name => '&bldtable',
19:20:12  36  	  tail_frac	  => 0.025,
19:20:12  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:20:12  38  
19:20:12  39  	-- xform input data to winsorized data
19:20:12  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
19:20:12  41  	  clip_table_name => 'svmc_clip',
19:20:12  42  	  data_table_name => '&bldtable',
19:20:12  43  	  xform_view_name => 'svmc_winsor');
19:20:12  44  
19:20:12  45  	-- create normalization table
19:20:12  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
19:20:12  47  
19:20:12  48  	-- populate normalization table based on winsorized data
19:20:12  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
19:20:12  50  	  norm_table_name => 'svmc_norm',
19:20:12  51  	  data_table_name => 'svmc_winsor',
19:20:12  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
19:20:12  53  
19:20:12  54  	-- normalize the original data
19:20:12  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:20:12  56  	  norm_table_name => 'svmc_norm',
19:20:12  57  	  data_table_name => '&bldtable',
19:20:12  58  	  xform_view_name => 'svmc_build_prep');
19:20:12  59  END;
19:20:12  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.78
19:20:30 SQL> 
19:20:30 SQL> ---------------------
19:20:30 SQL> -- CREATE A NEW MODEL
19:20:30 SQL> --
19:20:30 SQL> -- Cleanup old model with the same name for repeat runs
19:20:30 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
19:20:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:20:30   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.08
19:20:31 SQL> 
19:20:31 SQL> -- Build a new SVM Model
19:20:31 SQL> BEGIN
19:20:31   2  	DBMS_DATA_MINING.CREATE_MODEL(
19:20:31   3  	  model_name	      => '&model_name',
19:20:31   4  	  mining_function     => dbms_data_mining.classification,
19:20:31   5  	  data_table_name     => 'svmc_build_prep',
19:20:31   6  	  case_id_column_name => '&case_id',
19:20:31   7  	  target_column_name  => '&target',
19:20:31   8  	  settings_table_name => 'svmc_settings');
19:20:31   9  END;
19:20:31  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.39
19:20:58 SQL> 
19:20:58 SQL> -----------------------------------------------------------------------
19:20:58 SQL> --			       APPLY/score THE MODEL
19:20:58 SQL> -----------------------------------------------------------------------
19:20:58 SQL> 
19:20:58 SQL> -- Cleanup old scoring data preparation objects for repeat runs
19:20:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
19:20:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:20:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
19:20:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
19:20:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:20:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:20:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
19:20:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
19:20:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
19:20:58 SQL> -----------------------
19:20:58 SQL> -- PREPARE SCORING DATA
19:20:58 SQL> --
19:20:58 SQL> -- If the data for model creation has been prepared, then the data
19:20:58 SQL> -- to be scored using the model must be prepared in the same manner
19:20:58 SQL> -- in order to obtain meaningful results.
19:20:58 SQL> --
19:20:58 SQL> -- 1. Missing Value treatment for all Predictors and
19:20:58 SQL> -- 2. Normalization
19:20:58 SQL> -- No outlier treatment will be performed during test and apply. The
19:20:58 SQL> -- normalization step is sufficient, since the normalization parameters
19:20:58 SQL> -- already capture the effects of outlier treatment done with build data.
19:20:58 SQL> --
19:20:58 SQL> BEGIN
19:20:58   2  	-- Xform Test data to replace missing values
19:20:58   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
19:20:58   4  	  miss_table_name => 'svmc_miss_num',
19:20:58   5  	  data_table_name => '&scoretable',
19:20:58   6  	  xform_view_name => 'xformed_apply_miss_num');
19:20:58   7  
19:20:58   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
19:20:58   9  	  miss_table_name => 'svmc_miss_cat',
19:20:58  10  	  data_table_name => '&scoretable',
19:20:58  11  	  xform_view_name => 'xformed_apply_miss_cat');
19:20:58  12  
19:20:58  13  	-- Normalize the data to be scored
19:20:58  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
19:20:58  15  	  norm_table_name => 'svmc_norm',
19:20:58  16  	  data_table_name => '&scoretable',
19:20:58  17  	  xform_view_name => 'svmc_apply_prep');
19:20:58  18  END;
19:20:58  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.25
19:20:59 SQL> 
19:20:59 SQL> -- Use same model_name used in score_gattn.sql
19:20:59 SQL> DEFINE model_name = 'forex15'
19:20:59 SQL> 
19:20:59 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
19:20:59 SQL> 
19:20:59 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
19:20:59   2  SELECT
19:20:59   3  prdate
19:20:59   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
19:20:59   5  ,sysdate
19:20:59   6  ,SUBSTR(prdate,1,3)pair
19:20:59   7  ,SUBSTR(prdate,4,19)ydate
19:20:59   8  FROM svmc_apply_prep
19:20:59   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
19:20:59 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
