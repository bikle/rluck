
SQL*Plus: Release 11.2.0.1.0 Production on Fri Jan 7 04:55:03 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

04:55:03 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
04:55:03 SQL> 04:55:03 SQL> @aud_score1day.sql  2011-01-07 04:35:00
04:55:03 SQL> --
04:55:03 SQL> -- aud_score1day.sql
04:55:03 SQL> --
04:55:03 SQL> 
04:55:03 SQL> CREATE OR REPLACE VIEW sme AS
04:55:03   2  SELECT
04:55:03   3  'aud'||m.ydate prdate
04:55:03   4  ,NULL gatt
04:55:03   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:55:03   6  ,eur_g00
04:55:03   7  ,eur_g01
04:55:03   8  ,eur_g02
04:55:03   9  ,eur_g03
04:55:03  10  ,eur_g04
04:55:03  11  ,eur_g05
04:55:03  12  ,eur_g06
04:55:03  13  ,eur_g07
04:55:03  14  ,eur_g08
04:55:03  15  ,eur_g09
04:55:03  16  ,eur_g10
04:55:03  17  ,eur_g11
04:55:03  18  ,eur_g12
04:55:03  19  ,eur_g13
04:55:03  20  ,eur_g14
04:55:03  21  ,eur_g15
04:55:03  22  ,eur_g16
04:55:03  23  ,eur_g17
04:55:03  24  ,eur_g18
04:55:03  25  ,eur_g19
04:55:03  26  ,eur_g20
04:55:03  27  ,eur_g21
04:55:03  28  ,eur_g22
04:55:03  29  ,eur_g23
04:55:03  30  ,eur_g24
04:55:03  31  ,eur_g25
04:55:03  32  ,eur_g26
04:55:03  33  ,eur_g27
04:55:03  34  ,eur_g28
04:55:03  35  ,eur_g29
04:55:03  36  ,eur_g30
04:55:03  37  ,eur_g31
04:55:03  38  ,eur_g32
04:55:03  39  ,eur_g33
04:55:03  40  ,eur_g34
04:55:03  41  ,eur_g35
04:55:03  42  ,eur_g36
04:55:03  43  ,eur_g37
04:55:03  44  ,eur_g38
04:55:03  45  ,eur_g39
04:55:03  46  ,eur_g40
04:55:03  47  ,eur_g41
04:55:03  48  ,aud_g00
04:55:03  49  ,aud_g01
04:55:03  50  ,aud_g02
04:55:03  51  ,aud_g03
04:55:03  52  ,aud_g04
04:55:03  53  ,aud_g05
04:55:03  54  ,aud_g06
04:55:03  55  ,aud_g07
04:55:03  56  ,aud_g08
04:55:03  57  ,aud_g09
04:55:03  58  ,aud_g10
04:55:03  59  ,aud_g11
04:55:03  60  ,aud_g12
04:55:03  61  ,aud_g13
04:55:03  62  ,aud_g14
04:55:03  63  ,aud_g15
04:55:03  64  ,aud_g16
04:55:03  65  ,aud_g17
04:55:03  66  ,aud_g18
04:55:03  67  ,aud_g19
04:55:03  68  ,aud_g20
04:55:03  69  ,aud_g21
04:55:03  70  ,aud_g22
04:55:03  71  ,aud_g23
04:55:03  72  ,aud_g24
04:55:03  73  ,aud_g25
04:55:03  74  ,aud_g26
04:55:03  75  ,aud_g27
04:55:03  76  ,aud_g28
04:55:03  77  ,aud_g29
04:55:03  78  ,aud_g30
04:55:03  79  ,aud_g31
04:55:03  80  ,aud_g32
04:55:03  81  ,aud_g33
04:55:03  82  ,aud_g34
04:55:03  83  ,aud_g35
04:55:03  84  ,aud_g36
04:55:03  85  ,aud_g37
04:55:03  86  ,aud_g38
04:55:03  87  ,aud_g39
04:55:03  88  ,aud_g40
04:55:03  89  ,aud_g41
04:55:03  90  ,gbp_g00
04:55:03  91  ,gbp_g01
04:55:03  92  ,gbp_g02
04:55:03  93  ,gbp_g03
04:55:03  94  ,gbp_g04
04:55:03  95  ,gbp_g05
04:55:03  96  ,gbp_g06
04:55:03  97  ,gbp_g07
04:55:03  98  ,gbp_g08
04:55:03  99  ,gbp_g09
04:55:03 100  ,gbp_g10
04:55:03 101  ,gbp_g11
04:55:03 102  ,gbp_g12
04:55:03 103  ,gbp_g13
04:55:03 104  ,gbp_g14
04:55:03 105  ,gbp_g15
04:55:03 106  ,gbp_g16
04:55:03 107  ,gbp_g17
04:55:03 108  ,gbp_g18
04:55:03 109  ,gbp_g19
04:55:03 110  ,gbp_g20
04:55:03 111  ,gbp_g21
04:55:03 112  ,gbp_g22
04:55:03 113  ,gbp_g23
04:55:03 114  ,gbp_g24
04:55:03 115  ,gbp_g25
04:55:03 116  ,gbp_g26
04:55:03 117  ,gbp_g27
04:55:03 118  ,gbp_g28
04:55:03 119  ,gbp_g29
04:55:03 120  ,gbp_g30
04:55:03 121  ,gbp_g31
04:55:03 122  ,gbp_g32
04:55:03 123  ,gbp_g33
04:55:03 124  ,gbp_g34
04:55:03 125  ,gbp_g35
04:55:03 126  ,gbp_g36
04:55:03 127  ,gbp_g37
04:55:03 128  ,gbp_g38
04:55:03 129  ,gbp_g39
04:55:03 130  ,gbp_g40
04:55:03 131  ,gbp_g41
04:55:03 132  ,jpy_g00
04:55:03 133  ,jpy_g01
04:55:03 134  ,jpy_g02
04:55:03 135  ,jpy_g03
04:55:03 136  ,jpy_g04
04:55:03 137  ,jpy_g05
04:55:03 138  ,jpy_g06
04:55:03 139  ,jpy_g07
04:55:03 140  ,jpy_g08
04:55:03 141  ,jpy_g09
04:55:03 142  ,jpy_g10
04:55:03 143  ,jpy_g11
04:55:03 144  ,jpy_g12
04:55:03 145  ,jpy_g13
04:55:03 146  ,jpy_g14
04:55:03 147  ,jpy_g15
04:55:03 148  ,jpy_g16
04:55:03 149  ,jpy_g17
04:55:03 150  ,jpy_g18
04:55:03 151  ,jpy_g19
04:55:03 152  ,jpy_g20
04:55:03 153  ,jpy_g21
04:55:03 154  ,jpy_g22
04:55:03 155  ,jpy_g23
04:55:03 156  ,jpy_g24
04:55:03 157  ,jpy_g25
04:55:03 158  ,jpy_g26
04:55:03 159  ,jpy_g27
04:55:03 160  ,jpy_g28
04:55:03 161  ,jpy_g29
04:55:03 162  ,jpy_g30
04:55:03 163  ,jpy_g31
04:55:03 164  ,jpy_g32
04:55:03 165  ,jpy_g33
04:55:03 166  ,jpy_g34
04:55:03 167  ,jpy_g35
04:55:03 168  ,jpy_g36
04:55:03 169  ,jpy_g37
04:55:03 170  ,jpy_g38
04:55:03 171  ,jpy_g39
04:55:03 172  ,jpy_g40
04:55:03 173  ,jpy_g41
04:55:03 174  ,cad_g00
04:55:03 175  ,cad_g01
04:55:03 176  ,cad_g02
04:55:03 177  ,cad_g03
04:55:03 178  ,cad_g04
04:55:03 179  ,cad_g05
04:55:03 180  ,cad_g06
04:55:03 181  ,cad_g07
04:55:03 182  ,cad_g08
04:55:03 183  ,cad_g09
04:55:03 184  ,cad_g10
04:55:03 185  ,cad_g11
04:55:03 186  ,cad_g12
04:55:03 187  ,cad_g13
04:55:03 188  ,cad_g14
04:55:03 189  ,cad_g15
04:55:03 190  ,cad_g16
04:55:03 191  ,cad_g17
04:55:03 192  ,cad_g18
04:55:03 193  ,cad_g19
04:55:03 194  ,cad_g20
04:55:03 195  ,cad_g21
04:55:03 196  ,cad_g22
04:55:03 197  ,cad_g23
04:55:03 198  ,cad_g24
04:55:03 199  ,cad_g25
04:55:03 200  ,cad_g26
04:55:03 201  ,cad_g27
04:55:03 202  ,cad_g28
04:55:03 203  ,cad_g29
04:55:03 204  ,cad_g30
04:55:03 205  ,cad_g31
04:55:03 206  ,cad_g32
04:55:03 207  ,cad_g33
04:55:03 208  ,cad_g34
04:55:03 209  ,cad_g35
04:55:03 210  ,cad_g36
04:55:03 211  ,cad_g37
04:55:03 212  ,cad_g38
04:55:03 213  ,cad_g39
04:55:03 214  ,cad_g40
04:55:03 215  ,cad_g41
04:55:03 216  ,chf_g00
04:55:03 217  ,chf_g01
04:55:03 218  ,chf_g02
04:55:03 219  ,chf_g03
04:55:03 220  ,chf_g04
04:55:03 221  ,chf_g05
04:55:03 222  ,chf_g06
04:55:03 223  ,chf_g07
04:55:03 224  ,chf_g08
04:55:03 225  ,chf_g09
04:55:03 226  ,chf_g10
04:55:03 227  ,chf_g11
04:55:03 228  ,chf_g12
04:55:03 229  ,chf_g13
04:55:03 230  ,chf_g14
04:55:03 231  ,chf_g15
04:55:03 232  ,chf_g16
04:55:03 233  ,chf_g17
04:55:03 234  ,chf_g18
04:55:03 235  ,chf_g19
04:55:03 236  ,chf_g20
04:55:03 237  ,chf_g21
04:55:03 238  ,chf_g22
04:55:03 239  ,chf_g23
04:55:03 240  ,chf_g24
04:55:03 241  ,chf_g25
04:55:03 242  ,chf_g26
04:55:03 243  ,chf_g27
04:55:03 244  ,chf_g28
04:55:03 245  ,chf_g29
04:55:03 246  ,chf_g30
04:55:03 247  ,chf_g31
04:55:03 248  ,chf_g32
04:55:03 249  ,chf_g33
04:55:03 250  ,chf_g34
04:55:03 251  ,chf_g35
04:55:03 252  ,chf_g36
04:55:03 253  ,chf_g37
04:55:03 254  ,chf_g38
04:55:03 255  ,chf_g39
04:55:03 256  ,chf_g40
04:55:03 257  ,chf_g41
04:55:03 258  FROM aud_ms6 m
04:55:03 259  WHERE m.ydate = '&1'||' '||'&2'
04:55:03 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'04:35:00'

View created.

Elapsed: 00:00:00.14
04:55:04 SQL> 
04:55:04 SQL> -- rpt
04:55:04 SQL> -- We should see just 1 row:
04:55:04 SQL> 
04:55:04 SQL> SELECT COUNT(prdate) FROM sme
04:55:04   2  
04:55:04 SQL> -- Build the model:
04:55:04 SQL> CREATE OR REPLACE VIEW bme AS
04:55:04   2  SELECT
04:55:04   3  'aud'||m.ydate prdate
04:55:04   4  ,gatt
04:55:04   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:55:04   6  ,eur_g00
04:55:04   7  ,eur_g01
04:55:04   8  ,eur_g02
04:55:04   9  ,eur_g03
04:55:04  10  ,eur_g04
04:55:04  11  ,eur_g05
04:55:04  12  ,eur_g06
04:55:04  13  ,eur_g07
04:55:04  14  ,eur_g08
04:55:04  15  ,eur_g09
04:55:04  16  ,eur_g10
04:55:04  17  ,eur_g11
04:55:04  18  ,eur_g12
04:55:04  19  ,eur_g13
04:55:04  20  ,eur_g14
04:55:04  21  ,eur_g15
04:55:04  22  ,eur_g16
04:55:04  23  ,eur_g17
04:55:04  24  ,eur_g18
04:55:04  25  ,eur_g19
04:55:04  26  ,eur_g20
04:55:04  27  ,eur_g21
04:55:04  28  ,eur_g22
04:55:04  29  ,eur_g23
04:55:04  30  ,eur_g24
04:55:04  31  ,eur_g25
04:55:04  32  ,eur_g26
04:55:04  33  ,eur_g27
04:55:04  34  ,eur_g28
04:55:04  35  ,eur_g29
04:55:04  36  ,eur_g30
04:55:04  37  ,eur_g31
04:55:04  38  ,eur_g32
04:55:04  39  ,eur_g33
04:55:04  40  ,eur_g34
04:55:04  41  ,eur_g35
04:55:04  42  ,eur_g36
04:55:04  43  ,eur_g37
04:55:04  44  ,eur_g38
04:55:04  45  ,eur_g39
04:55:04  46  ,eur_g40
04:55:04  47  ,eur_g41
04:55:04  48  ,aud_g00
04:55:04  49  ,aud_g01
04:55:04  50  ,aud_g02
04:55:04  51  ,aud_g03
04:55:04  52  ,aud_g04
04:55:04  53  ,aud_g05
04:55:04  54  ,aud_g06
04:55:04  55  ,aud_g07
04:55:04  56  ,aud_g08
04:55:04  57  ,aud_g09
04:55:04  58  ,aud_g10
04:55:04  59  ,aud_g11
04:55:04  60  ,aud_g12
04:55:04  61  ,aud_g13
04:55:04  62  ,aud_g14
04:55:04  63  ,aud_g15
04:55:04  64  ,aud_g16
04:55:04  65  ,aud_g17
04:55:04  66  ,aud_g18
04:55:04  67  ,aud_g19
04:55:04  68  ,aud_g20
04:55:04  69  ,aud_g21
04:55:04  70  ,aud_g22
04:55:04  71  ,aud_g23
04:55:04  72  ,aud_g24
04:55:04  73  ,aud_g25
04:55:04  74  ,aud_g26
04:55:04  75  ,aud_g27
04:55:04  76  ,aud_g28
04:55:04  77  ,aud_g29
04:55:04  78  ,aud_g30
04:55:04  79  ,aud_g31
04:55:04  80  ,aud_g32
04:55:04  81  ,aud_g33
04:55:04  82  ,aud_g34
04:55:04  83  ,aud_g35
04:55:04  84  ,aud_g36
04:55:04  85  ,aud_g37
04:55:04  86  ,aud_g38
04:55:04  87  ,aud_g39
04:55:04  88  ,aud_g40
04:55:04  89  ,aud_g41
04:55:04  90  ,gbp_g00
04:55:04  91  ,gbp_g01
04:55:04  92  ,gbp_g02
04:55:04  93  ,gbp_g03
04:55:04  94  ,gbp_g04
04:55:04  95  ,gbp_g05
04:55:04  96  ,gbp_g06
04:55:04  97  ,gbp_g07
04:55:04  98  ,gbp_g08
04:55:04  99  ,gbp_g09
04:55:04 100  ,gbp_g10
04:55:04 101  ,gbp_g11
04:55:04 102  ,gbp_g12
04:55:04 103  ,gbp_g13
04:55:04 104  ,gbp_g14
04:55:04 105  ,gbp_g15
04:55:04 106  ,gbp_g16
04:55:04 107  ,gbp_g17
04:55:04 108  ,gbp_g18
04:55:04 109  ,gbp_g19
04:55:04 110  ,gbp_g20
04:55:04 111  ,gbp_g21
04:55:04 112  ,gbp_g22
04:55:04 113  ,gbp_g23
04:55:04 114  ,gbp_g24
04:55:04 115  ,gbp_g25
04:55:04 116  ,gbp_g26
04:55:04 117  ,gbp_g27
04:55:04 118  ,gbp_g28
04:55:04 119  ,gbp_g29
04:55:04 120  ,gbp_g30
04:55:04 121  ,gbp_g31
04:55:04 122  ,gbp_g32
04:55:04 123  ,gbp_g33
04:55:04 124  ,gbp_g34
04:55:04 125  ,gbp_g35
04:55:04 126  ,gbp_g36
04:55:04 127  ,gbp_g37
04:55:04 128  ,gbp_g38
04:55:04 129  ,gbp_g39
04:55:04 130  ,gbp_g40
04:55:04 131  ,gbp_g41
04:55:04 132  ,jpy_g00
04:55:04 133  ,jpy_g01
04:55:04 134  ,jpy_g02
04:55:04 135  ,jpy_g03
04:55:04 136  ,jpy_g04
04:55:04 137  ,jpy_g05
04:55:04 138  ,jpy_g06
04:55:04 139  ,jpy_g07
04:55:04 140  ,jpy_g08
04:55:04 141  ,jpy_g09
04:55:04 142  ,jpy_g10
04:55:04 143  ,jpy_g11
04:55:04 144  ,jpy_g12
04:55:04 145  ,jpy_g13
04:55:04 146  ,jpy_g14
04:55:04 147  ,jpy_g15
04:55:04 148  ,jpy_g16
04:55:04 149  ,jpy_g17
04:55:04 150  ,jpy_g18
04:55:04 151  ,jpy_g19
04:55:04 152  ,jpy_g20
04:55:04 153  ,jpy_g21
04:55:04 154  ,jpy_g22
04:55:04 155  ,jpy_g23
04:55:04 156  ,jpy_g24
04:55:04 157  ,jpy_g25
04:55:04 158  ,jpy_g26
04:55:04 159  ,jpy_g27
04:55:04 160  ,jpy_g28
04:55:04 161  ,jpy_g29
04:55:04 162  ,jpy_g30
04:55:04 163  ,jpy_g31
04:55:04 164  ,jpy_g32
04:55:04 165  ,jpy_g33
04:55:04 166  ,jpy_g34
04:55:04 167  ,jpy_g35
04:55:04 168  ,jpy_g36
04:55:04 169  ,jpy_g37
04:55:04 170  ,jpy_g38
04:55:04 171  ,jpy_g39
04:55:04 172  ,jpy_g40
04:55:04 173  ,jpy_g41
04:55:04 174  ,cad_g00
04:55:04 175  ,cad_g01
04:55:04 176  ,cad_g02
04:55:04 177  ,cad_g03
04:55:04 178  ,cad_g04
04:55:04 179  ,cad_g05
04:55:04 180  ,cad_g06
04:55:04 181  ,cad_g07
04:55:04 182  ,cad_g08
04:55:04 183  ,cad_g09
04:55:04 184  ,cad_g10
04:55:04 185  ,cad_g11
04:55:04 186  ,cad_g12
04:55:04 187  ,cad_g13
04:55:04 188  ,cad_g14
04:55:04 189  ,cad_g15
04:55:04 190  ,cad_g16
04:55:04 191  ,cad_g17
04:55:04 192  ,cad_g18
04:55:04 193  ,cad_g19
04:55:04 194  ,cad_g20
04:55:04 195  ,cad_g21
04:55:04 196  ,cad_g22
04:55:04 197  ,cad_g23
04:55:04 198  ,cad_g24
04:55:04 199  ,cad_g25
04:55:04 200  ,cad_g26
04:55:04 201  ,cad_g27
04:55:04 202  ,cad_g28
04:55:04 203  ,cad_g29
04:55:04 204  ,cad_g30
04:55:04 205  ,cad_g31
04:55:04 206  ,cad_g32
04:55:04 207  ,cad_g33
04:55:04 208  ,cad_g34
04:55:04 209  ,cad_g35
04:55:04 210  ,cad_g36
04:55:04 211  ,cad_g37
04:55:04 212  ,cad_g38
04:55:04 213  ,cad_g39
04:55:04 214  ,cad_g40
04:55:04 215  ,cad_g41
04:55:04 216  ,chf_g00
04:55:04 217  ,chf_g01
04:55:04 218  ,chf_g02
04:55:04 219  ,chf_g03
04:55:04 220  ,chf_g04
04:55:04 221  ,chf_g05
04:55:04 222  ,chf_g06
04:55:04 223  ,chf_g07
04:55:04 224  ,chf_g08
04:55:04 225  ,chf_g09
04:55:04 226  ,chf_g10
04:55:04 227  ,chf_g11
04:55:04 228  ,chf_g12
04:55:04 229  ,chf_g13
04:55:04 230  ,chf_g14
04:55:04 231  ,chf_g15
04:55:04 232  ,chf_g16
04:55:04 233  ,chf_g17
04:55:04 234  ,chf_g18
04:55:04 235  ,chf_g19
04:55:04 236  ,chf_g20
04:55:04 237  ,chf_g21
04:55:04 238  ,chf_g22
04:55:04 239  ,chf_g23
04:55:04 240  ,chf_g24
04:55:04 241  ,chf_g25
04:55:04 242  ,chf_g26
04:55:04 243  ,chf_g27
04:55:04 244  ,chf_g28
04:55:04 245  ,chf_g29
04:55:04 246  ,chf_g30
04:55:04 247  ,chf_g31
04:55:04 248  ,chf_g32
04:55:04 249  ,chf_g33
04:55:04 250  ,chf_g34
04:55:04 251  ,chf_g35
04:55:04 252  ,chf_g36
04:55:04 253  ,chf_g37
04:55:04 254  ,chf_g38
04:55:04 255  ,chf_g39
04:55:04 256  ,chf_g40
04:55:04 257  ,chf_g41
04:55:04 258  FROM aud_ms6 m
04:55:04 259  WHERE gatt IN('nup','up')
04:55:04 260  AND 1+m.ydate < '&1'||' '||'&2'
04:55:04 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'04:35:00'

View created.

Elapsed: 00:00:00.15
04:55:04 SQL> 
04:55:04 SQL> -- rpt
04:55:04 SQL> 
04:55:04 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
04:55:04   2  
04:55:04 SQL> SELECT MAX(prdate) FROM bme
04:55:04   2  
04:55:04 SQL> -- Now build model from bme and score sme
04:55:04 SQL> @score1.sql
04:55:04 SQL> -- score1.sql
04:55:04 SQL> 
04:55:04 SQL> -- Does the 1st SVM score
04:55:04 SQL> 
04:55:04 SQL> -- Fill up svmc_apply_prep
04:55:04 SQL> @score.sql
04:55:04 SQL> --
04:55:04 SQL> -- score.sql
04:55:04 SQL> --
04:55:04 SQL> 
04:55:04 SQL> -- usage: score.sql
04:55:04 SQL> 
04:55:04 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
04:55:04 SQL> 
04:55:04 SQL> DEFINE target	= 'gatt'
04:55:04 SQL> DEFINE model_name = 'forex15'
04:55:04 SQL> DEFINE bldtable	= 'bme'
04:55:04 SQL> DEFINE scoretable = 'sme'
04:55:04 SQL> DEFINE case_id	= 'prdate'
04:55:04 SQL> 
04:55:04 SQL> -- Define a variable to help me exclude some columns from some data mining calls
04:55:04 SQL> DEFINE exclude1 = "'&target','&case_id'"
04:55:04 SQL> 
04:55:04 SQL> -- Builds an SVM model using pl/sql.
04:55:04 SQL> 
04:55:04 SQL> -----------------------------------------------------------------------
04:55:04 SQL> --			    BUILD THE MODEL
04:55:04 SQL> -----------------------------------------------------------------------
04:55:04 SQL> 
04:55:04 SQL> -- Cleanup old build data preparation objects for repeat runs
04:55:04 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
04:55:04 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
04:55:04 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
04:55:04 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
04:55:04 SQL> 
04:55:04 SQL> 
04:55:04 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
04:55:04 SQL> --
04:55:04 SQL> -- DROP	TABLE svmc_settings ;
04:55:04 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
04:55:04 SQL> -- DELETE svmc_settings;
04:55:04 SQL> 
04:55:04 SQL> -- The default classification algorithm is Naive Bayes. So override
04:55:04 SQL> -- this choice to SVM using a settings table.
04:55:04 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
04:55:04 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
04:55:04 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
04:55:04 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
04:55:04 SQL> -- models.
04:55:04 SQL> --
04:55:04 SQL> 
04:55:04 SQL> -- Do this once and then comment it out.
04:55:04 SQL> -- That makes script go faster.
04:55:04 SQL> -- BEGIN
04:55:04 SQL> -- -- Populate settings table
04:55:04 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:55:04 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
04:55:04 SQL> --
04:55:04 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:55:04 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
04:55:04 SQL> --
04:55:04 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:55:04 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
04:55:04 SQL> --   COMMIT;
04:55:04 SQL> -- END;
04:55:04 SQL> -- /
04:55:04 SQL> 
04:55:04 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
04:55:04 SQL> 
04:55:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
04:55:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:55:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:55:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
04:55:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:55:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:55:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
04:55:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:55:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:55:04 SQL> 
04:55:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
04:55:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:55:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:55:04 SQL> 
04:55:04 SQL> --------------------------------
04:55:04 SQL> -- PREPARE BUILD (TRAINING) DATA
04:55:04 SQL> --
04:55:04 SQL> 
04:55:04 SQL> -- 1. Missing Value treatment for all Predictors and
04:55:04 SQL> -- 2. Outlier Treatment and
04:55:04 SQL> -- 3. Normalization are performed below.
04:55:04 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
04:55:04 SQL> --    normalized here.
04:55:04 SQL> 
04:55:04 SQL> BEGIN
04:55:04   2  	-- Perform missing value treatment for all predictors
04:55:04   3  	-- create miss tables
04:55:04   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
04:55:04   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
04:55:04   6  
04:55:04   7  	-- populate miss tables
04:55:04   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
04:55:04   9  	  miss_table_name => 'svmc_miss_num',
04:55:04  10  	  data_table_name => '&bldtable',
04:55:04  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:55:04  12  
04:55:04  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
04:55:04  14  	  miss_table_name => 'svmc_miss_cat',
04:55:04  15  	  data_table_name => '&bldtable',
04:55:04  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:55:04  17  
04:55:04  18  	-- xform input data to replace missing values
04:55:04  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:55:04  20  	  miss_table_name => 'svmc_miss_num',
04:55:04  21  	  data_table_name => '&bldtable',
04:55:04  22  	  xform_view_name => 'xformed_build_miss_num');
04:55:04  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:55:04  24  	  miss_table_name => 'svmc_miss_cat',
04:55:04  25  	  data_table_name => '&bldtable',
04:55:04  26  	  xform_view_name => 'xformed_build_miss_cat');
04:55:04  27  
04:55:04  28  	-- Perform outlier treatment.
04:55:04  29  	-- create clip table
04:55:04  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
04:55:04  31  
04:55:04  32  	-- populate clip table
04:55:04  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
04:55:04  34  	  clip_table_name => 'svmc_clip',
04:55:04  35  	  data_table_name => '&bldtable',
04:55:04  36  	  tail_frac	  => 0.025,
04:55:04  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:55:04  38  
04:55:04  39  	-- xform input data to winsorized data
04:55:04  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
04:55:04  41  	  clip_table_name => 'svmc_clip',
04:55:04  42  	  data_table_name => '&bldtable',
04:55:04  43  	  xform_view_name => 'svmc_winsor');
04:55:04  44  
04:55:04  45  	-- create normalization table
04:55:04  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
04:55:04  47  
04:55:04  48  	-- populate normalization table based on winsorized data
04:55:04  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
04:55:04  50  	  norm_table_name => 'svmc_norm',
04:55:04  51  	  data_table_name => 'svmc_winsor',
04:55:04  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:55:04  53  
04:55:04  54  	-- normalize the original data
04:55:04  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:55:04  56  	  norm_table_name => 'svmc_norm',
04:55:04  57  	  data_table_name => '&bldtable',
04:55:04  58  	  xform_view_name => 'svmc_build_prep');
04:55:04  59  END;
04:55:04  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.20
04:55:23 SQL> 
04:55:23 SQL> ---------------------
04:55:23 SQL> -- CREATE A NEW MODEL
04:55:23 SQL> --
04:55:23 SQL> -- Cleanup old model with the same name for repeat runs
04:55:23 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
04:55:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:55:23   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.83
04:55:24 SQL> 
04:55:24 SQL> -- Build a new SVM Model
04:55:24 SQL> BEGIN
04:55:24   2  	DBMS_DATA_MINING.CREATE_MODEL(
04:55:24   3  	  model_name	      => '&model_name',
04:55:24   4  	  mining_function     => dbms_data_mining.classification,
04:55:24   5  	  data_table_name     => 'svmc_build_prep',
04:55:24   6  	  case_id_column_name => '&case_id',
04:55:24   7  	  target_column_name  => '&target',
04:55:24   8  	  settings_table_name => 'svmc_settings');
04:55:24   9  END;
04:55:24  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:30.58
04:55:55 SQL> 
04:55:55 SQL> -----------------------------------------------------------------------
04:55:55 SQL> --			       APPLY/score THE MODEL
04:55:55 SQL> -----------------------------------------------------------------------
04:55:55 SQL> 
04:55:55 SQL> -- Cleanup old scoring data preparation objects for repeat runs
04:55:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
04:55:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:55:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
04:55:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
04:55:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:55:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:55:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
04:55:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:55:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
04:55:55 SQL> -----------------------
04:55:55 SQL> -- PREPARE SCORING DATA
04:55:55 SQL> --
04:55:55 SQL> -- If the data for model creation has been prepared, then the data
04:55:55 SQL> -- to be scored using the model must be prepared in the same manner
04:55:55 SQL> -- in order to obtain meaningful results.
04:55:55 SQL> --
04:55:55 SQL> -- 1. Missing Value treatment for all Predictors and
04:55:55 SQL> -- 2. Normalization
04:55:55 SQL> -- No outlier treatment will be performed during test and apply. The
04:55:55 SQL> -- normalization step is sufficient, since the normalization parameters
04:55:55 SQL> -- already capture the effects of outlier treatment done with build data.
04:55:55 SQL> --
04:55:55 SQL> BEGIN
04:55:55   2  	-- Xform Test data to replace missing values
04:55:55   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:55:55   4  	  miss_table_name => 'svmc_miss_num',
04:55:55   5  	  data_table_name => '&scoretable',
04:55:55   6  	  xform_view_name => 'xformed_apply_miss_num');
04:55:55   7  
04:55:55   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:55:55   9  	  miss_table_name => 'svmc_miss_cat',
04:55:55  10  	  data_table_name => '&scoretable',
04:55:55  11  	  xform_view_name => 'xformed_apply_miss_cat');
04:55:55  12  
04:55:55  13  	-- Normalize the data to be scored
04:55:55  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:55:55  15  	  norm_table_name => 'svmc_norm',
04:55:55  16  	  data_table_name => '&scoretable',
04:55:55  17  	  xform_view_name => 'svmc_apply_prep');
04:55:55  18  END;
04:55:55  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.36
04:55:56 SQL> 
04:55:56 SQL> -- Use same model_name used in score.sql
04:55:56 SQL> DEFINE model_name = 'forex15'
04:55:56 SQL> 
04:55:56 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
04:55:56 SQL> 
04:55:56 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
04:55:56 SQL> 
04:55:56 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
04:55:56   2  SELECT
04:55:56   3  prdate
04:55:56   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
04:55:56   5  ,sysdate
04:55:56   6  ,SUBSTR(prdate,1,3)pair
04:55:56   7  ,SUBSTR(prdate,4,19)ydate
04:55:56   8  FROM svmc_apply_prep
04:55:56   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.24
04:55:56 SQL> @aud_score1day.sql  2011-01-07 04:40:00
04:55:56 SQL> --
04:55:56 SQL> -- aud_score1day.sql
04:55:56 SQL> --
04:55:56 SQL> 
04:55:56 SQL> CREATE OR REPLACE VIEW sme AS
04:55:56   2  SELECT
04:55:56   3  'aud'||m.ydate prdate
04:55:56   4  ,NULL gatt
04:55:56   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:55:56   6  ,eur_g00
04:55:56   7  ,eur_g01
04:55:56   8  ,eur_g02
04:55:56   9  ,eur_g03
04:55:56  10  ,eur_g04
04:55:56  11  ,eur_g05
04:55:56  12  ,eur_g06
04:55:56  13  ,eur_g07
04:55:56  14  ,eur_g08
04:55:56  15  ,eur_g09
04:55:56  16  ,eur_g10
04:55:56  17  ,eur_g11
04:55:56  18  ,eur_g12
04:55:56  19  ,eur_g13
04:55:56  20  ,eur_g14
04:55:56  21  ,eur_g15
04:55:56  22  ,eur_g16
04:55:56  23  ,eur_g17
04:55:56  24  ,eur_g18
04:55:56  25  ,eur_g19
04:55:56  26  ,eur_g20
04:55:56  27  ,eur_g21
04:55:56  28  ,eur_g22
04:55:56  29  ,eur_g23
04:55:56  30  ,eur_g24
04:55:56  31  ,eur_g25
04:55:56  32  ,eur_g26
04:55:56  33  ,eur_g27
04:55:56  34  ,eur_g28
04:55:56  35  ,eur_g29
04:55:56  36  ,eur_g30
04:55:56  37  ,eur_g31
04:55:56  38  ,eur_g32
04:55:56  39  ,eur_g33
04:55:56  40  ,eur_g34
04:55:56  41  ,eur_g35
04:55:56  42  ,eur_g36
04:55:56  43  ,eur_g37
04:55:56  44  ,eur_g38
04:55:56  45  ,eur_g39
04:55:56  46  ,eur_g40
04:55:56  47  ,eur_g41
04:55:56  48  ,aud_g00
04:55:56  49  ,aud_g01
04:55:56  50  ,aud_g02
04:55:56  51  ,aud_g03
04:55:56  52  ,aud_g04
04:55:56  53  ,aud_g05
04:55:56  54  ,aud_g06
04:55:56  55  ,aud_g07
04:55:56  56  ,aud_g08
04:55:56  57  ,aud_g09
04:55:56  58  ,aud_g10
04:55:56  59  ,aud_g11
04:55:56  60  ,aud_g12
04:55:56  61  ,aud_g13
04:55:56  62  ,aud_g14
04:55:56  63  ,aud_g15
04:55:56  64  ,aud_g16
04:55:56  65  ,aud_g17
04:55:56  66  ,aud_g18
04:55:56  67  ,aud_g19
04:55:56  68  ,aud_g20
04:55:56  69  ,aud_g21
04:55:56  70  ,aud_g22
04:55:56  71  ,aud_g23
04:55:56  72  ,aud_g24
04:55:56  73  ,aud_g25
04:55:56  74  ,aud_g26
04:55:56  75  ,aud_g27
04:55:56  76  ,aud_g28
04:55:56  77  ,aud_g29
04:55:56  78  ,aud_g30
04:55:56  79  ,aud_g31
04:55:56  80  ,aud_g32
04:55:56  81  ,aud_g33
04:55:56  82  ,aud_g34
04:55:56  83  ,aud_g35
04:55:56  84  ,aud_g36
04:55:56  85  ,aud_g37
04:55:56  86  ,aud_g38
04:55:56  87  ,aud_g39
04:55:56  88  ,aud_g40
04:55:56  89  ,aud_g41
04:55:56  90  ,gbp_g00
04:55:56  91  ,gbp_g01
04:55:56  92  ,gbp_g02
04:55:56  93  ,gbp_g03
04:55:56  94  ,gbp_g04
04:55:56  95  ,gbp_g05
04:55:56  96  ,gbp_g06
04:55:56  97  ,gbp_g07
04:55:56  98  ,gbp_g08
04:55:56  99  ,gbp_g09
04:55:56 100  ,gbp_g10
04:55:56 101  ,gbp_g11
04:55:56 102  ,gbp_g12
04:55:56 103  ,gbp_g13
04:55:56 104  ,gbp_g14
04:55:56 105  ,gbp_g15
04:55:56 106  ,gbp_g16
04:55:56 107  ,gbp_g17
04:55:56 108  ,gbp_g18
04:55:56 109  ,gbp_g19
04:55:56 110  ,gbp_g20
04:55:56 111  ,gbp_g21
04:55:56 112  ,gbp_g22
04:55:56 113  ,gbp_g23
04:55:56 114  ,gbp_g24
04:55:56 115  ,gbp_g25
04:55:56 116  ,gbp_g26
04:55:56 117  ,gbp_g27
04:55:56 118  ,gbp_g28
04:55:56 119  ,gbp_g29
04:55:56 120  ,gbp_g30
04:55:56 121  ,gbp_g31
04:55:56 122  ,gbp_g32
04:55:56 123  ,gbp_g33
04:55:56 124  ,gbp_g34
04:55:56 125  ,gbp_g35
04:55:56 126  ,gbp_g36
04:55:56 127  ,gbp_g37
04:55:56 128  ,gbp_g38
04:55:56 129  ,gbp_g39
04:55:56 130  ,gbp_g40
04:55:56 131  ,gbp_g41
04:55:56 132  ,jpy_g00
04:55:56 133  ,jpy_g01
04:55:56 134  ,jpy_g02
04:55:56 135  ,jpy_g03
04:55:56 136  ,jpy_g04
04:55:56 137  ,jpy_g05
04:55:56 138  ,jpy_g06
04:55:56 139  ,jpy_g07
04:55:56 140  ,jpy_g08
04:55:56 141  ,jpy_g09
04:55:56 142  ,jpy_g10
04:55:56 143  ,jpy_g11
04:55:56 144  ,jpy_g12
04:55:56 145  ,jpy_g13
04:55:56 146  ,jpy_g14
04:55:56 147  ,jpy_g15
04:55:56 148  ,jpy_g16
04:55:56 149  ,jpy_g17
04:55:56 150  ,jpy_g18
04:55:56 151  ,jpy_g19
04:55:56 152  ,jpy_g20
04:55:56 153  ,jpy_g21
04:55:56 154  ,jpy_g22
04:55:56 155  ,jpy_g23
04:55:56 156  ,jpy_g24
04:55:56 157  ,jpy_g25
04:55:56 158  ,jpy_g26
04:55:56 159  ,jpy_g27
04:55:56 160  ,jpy_g28
04:55:56 161  ,jpy_g29
04:55:56 162  ,jpy_g30
04:55:56 163  ,jpy_g31
04:55:56 164  ,jpy_g32
04:55:56 165  ,jpy_g33
04:55:56 166  ,jpy_g34
04:55:56 167  ,jpy_g35
04:55:56 168  ,jpy_g36
04:55:56 169  ,jpy_g37
04:55:56 170  ,jpy_g38
04:55:56 171  ,jpy_g39
04:55:56 172  ,jpy_g40
04:55:56 173  ,jpy_g41
04:55:56 174  ,cad_g00
04:55:56 175  ,cad_g01
04:55:56 176  ,cad_g02
04:55:56 177  ,cad_g03
04:55:56 178  ,cad_g04
04:55:56 179  ,cad_g05
04:55:56 180  ,cad_g06
04:55:56 181  ,cad_g07
04:55:56 182  ,cad_g08
04:55:56 183  ,cad_g09
04:55:56 184  ,cad_g10
04:55:56 185  ,cad_g11
04:55:56 186  ,cad_g12
04:55:56 187  ,cad_g13
04:55:56 188  ,cad_g14
04:55:56 189  ,cad_g15
04:55:56 190  ,cad_g16
04:55:56 191  ,cad_g17
04:55:56 192  ,cad_g18
04:55:56 193  ,cad_g19
04:55:56 194  ,cad_g20
04:55:56 195  ,cad_g21
04:55:56 196  ,cad_g22
04:55:56 197  ,cad_g23
04:55:56 198  ,cad_g24
04:55:56 199  ,cad_g25
04:55:56 200  ,cad_g26
04:55:56 201  ,cad_g27
04:55:56 202  ,cad_g28
04:55:56 203  ,cad_g29
04:55:56 204  ,cad_g30
04:55:56 205  ,cad_g31
04:55:56 206  ,cad_g32
04:55:56 207  ,cad_g33
04:55:56 208  ,cad_g34
04:55:56 209  ,cad_g35
04:55:56 210  ,cad_g36
04:55:56 211  ,cad_g37
04:55:56 212  ,cad_g38
04:55:56 213  ,cad_g39
04:55:56 214  ,cad_g40
04:55:56 215  ,cad_g41
04:55:56 216  ,chf_g00
04:55:56 217  ,chf_g01
04:55:56 218  ,chf_g02
04:55:56 219  ,chf_g03
04:55:56 220  ,chf_g04
04:55:56 221  ,chf_g05
04:55:56 222  ,chf_g06
04:55:56 223  ,chf_g07
04:55:56 224  ,chf_g08
04:55:56 225  ,chf_g09
04:55:56 226  ,chf_g10
04:55:56 227  ,chf_g11
04:55:56 228  ,chf_g12
04:55:56 229  ,chf_g13
04:55:56 230  ,chf_g14
04:55:56 231  ,chf_g15
04:55:56 232  ,chf_g16
04:55:56 233  ,chf_g17
04:55:56 234  ,chf_g18
04:55:56 235  ,chf_g19
04:55:56 236  ,chf_g20
04:55:56 237  ,chf_g21
04:55:56 238  ,chf_g22
04:55:56 239  ,chf_g23
04:55:56 240  ,chf_g24
04:55:56 241  ,chf_g25
04:55:56 242  ,chf_g26
04:55:56 243  ,chf_g27
04:55:56 244  ,chf_g28
04:55:56 245  ,chf_g29
04:55:56 246  ,chf_g30
04:55:56 247  ,chf_g31
04:55:56 248  ,chf_g32
04:55:56 249  ,chf_g33
04:55:56 250  ,chf_g34
04:55:56 251  ,chf_g35
04:55:56 252  ,chf_g36
04:55:56 253  ,chf_g37
04:55:56 254  ,chf_g38
04:55:56 255  ,chf_g39
04:55:56 256  ,chf_g40
04:55:56 257  ,chf_g41
04:55:56 258  FROM aud_ms6 m
04:55:56 259  WHERE m.ydate = '&1'||' '||'&2'
04:55:56 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'04:40:00'

View created.

Elapsed: 00:00:00.12
04:55:57 SQL> 
04:55:57 SQL> -- rpt
04:55:57 SQL> -- We should see just 1 row:
04:55:57 SQL> 
04:55:57 SQL> SELECT COUNT(prdate) FROM sme
04:55:57   2  
04:55:57 SQL> -- Build the model:
04:55:57 SQL> CREATE OR REPLACE VIEW bme AS
04:55:57   2  SELECT
04:55:57   3  'aud'||m.ydate prdate
04:55:57   4  ,gatt
04:55:57   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:55:57   6  ,eur_g00
04:55:57   7  ,eur_g01
04:55:57   8  ,eur_g02
04:55:57   9  ,eur_g03
04:55:57  10  ,eur_g04
04:55:57  11  ,eur_g05
04:55:57  12  ,eur_g06
04:55:57  13  ,eur_g07
04:55:57  14  ,eur_g08
04:55:57  15  ,eur_g09
04:55:57  16  ,eur_g10
04:55:57  17  ,eur_g11
04:55:57  18  ,eur_g12
04:55:57  19  ,eur_g13
04:55:57  20  ,eur_g14
04:55:57  21  ,eur_g15
04:55:57  22  ,eur_g16
04:55:57  23  ,eur_g17
04:55:57  24  ,eur_g18
04:55:57  25  ,eur_g19
04:55:57  26  ,eur_g20
04:55:57  27  ,eur_g21
04:55:57  28  ,eur_g22
04:55:57  29  ,eur_g23
04:55:57  30  ,eur_g24
04:55:57  31  ,eur_g25
04:55:57  32  ,eur_g26
04:55:57  33  ,eur_g27
04:55:57  34  ,eur_g28
04:55:57  35  ,eur_g29
04:55:57  36  ,eur_g30
04:55:57  37  ,eur_g31
04:55:57  38  ,eur_g32
04:55:57  39  ,eur_g33
04:55:57  40  ,eur_g34
04:55:57  41  ,eur_g35
04:55:57  42  ,eur_g36
04:55:57  43  ,eur_g37
04:55:57  44  ,eur_g38
04:55:57  45  ,eur_g39
04:55:57  46  ,eur_g40
04:55:57  47  ,eur_g41
04:55:57  48  ,aud_g00
04:55:57  49  ,aud_g01
04:55:57  50  ,aud_g02
04:55:57  51  ,aud_g03
04:55:57  52  ,aud_g04
04:55:57  53  ,aud_g05
04:55:57  54  ,aud_g06
04:55:57  55  ,aud_g07
04:55:57  56  ,aud_g08
04:55:57  57  ,aud_g09
04:55:57  58  ,aud_g10
04:55:57  59  ,aud_g11
04:55:57  60  ,aud_g12
04:55:57  61  ,aud_g13
04:55:57  62  ,aud_g14
04:55:57  63  ,aud_g15
04:55:57  64  ,aud_g16
04:55:57  65  ,aud_g17
04:55:57  66  ,aud_g18
04:55:57  67  ,aud_g19
04:55:57  68  ,aud_g20
04:55:57  69  ,aud_g21
04:55:57  70  ,aud_g22
04:55:57  71  ,aud_g23
04:55:57  72  ,aud_g24
04:55:57  73  ,aud_g25
04:55:57  74  ,aud_g26
04:55:57  75  ,aud_g27
04:55:57  76  ,aud_g28
04:55:57  77  ,aud_g29
04:55:57  78  ,aud_g30
04:55:57  79  ,aud_g31
04:55:57  80  ,aud_g32
04:55:57  81  ,aud_g33
04:55:57  82  ,aud_g34
04:55:57  83  ,aud_g35
04:55:57  84  ,aud_g36
04:55:57  85  ,aud_g37
04:55:57  86  ,aud_g38
04:55:57  87  ,aud_g39
04:55:57  88  ,aud_g40
04:55:57  89  ,aud_g41
04:55:57  90  ,gbp_g00
04:55:57  91  ,gbp_g01
04:55:57  92  ,gbp_g02
04:55:57  93  ,gbp_g03
04:55:57  94  ,gbp_g04
04:55:57  95  ,gbp_g05
04:55:57  96  ,gbp_g06
04:55:57  97  ,gbp_g07
04:55:57  98  ,gbp_g08
04:55:57  99  ,gbp_g09
04:55:57 100  ,gbp_g10
04:55:57 101  ,gbp_g11
04:55:57 102  ,gbp_g12
04:55:57 103  ,gbp_g13
04:55:57 104  ,gbp_g14
04:55:57 105  ,gbp_g15
04:55:57 106  ,gbp_g16
04:55:57 107  ,gbp_g17
04:55:57 108  ,gbp_g18
04:55:57 109  ,gbp_g19
04:55:57 110  ,gbp_g20
04:55:57 111  ,gbp_g21
04:55:57 112  ,gbp_g22
04:55:57 113  ,gbp_g23
04:55:57 114  ,gbp_g24
04:55:57 115  ,gbp_g25
04:55:57 116  ,gbp_g26
04:55:57 117  ,gbp_g27
04:55:57 118  ,gbp_g28
04:55:57 119  ,gbp_g29
04:55:57 120  ,gbp_g30
04:55:57 121  ,gbp_g31
04:55:57 122  ,gbp_g32
04:55:57 123  ,gbp_g33
04:55:57 124  ,gbp_g34
04:55:57 125  ,gbp_g35
04:55:57 126  ,gbp_g36
04:55:57 127  ,gbp_g37
04:55:57 128  ,gbp_g38
04:55:57 129  ,gbp_g39
04:55:57 130  ,gbp_g40
04:55:57 131  ,gbp_g41
04:55:57 132  ,jpy_g00
04:55:57 133  ,jpy_g01
04:55:57 134  ,jpy_g02
04:55:57 135  ,jpy_g03
04:55:57 136  ,jpy_g04
04:55:57 137  ,jpy_g05
04:55:57 138  ,jpy_g06
04:55:57 139  ,jpy_g07
04:55:57 140  ,jpy_g08
04:55:57 141  ,jpy_g09
04:55:57 142  ,jpy_g10
04:55:57 143  ,jpy_g11
04:55:57 144  ,jpy_g12
04:55:57 145  ,jpy_g13
04:55:57 146  ,jpy_g14
04:55:57 147  ,jpy_g15
04:55:57 148  ,jpy_g16
04:55:57 149  ,jpy_g17
04:55:57 150  ,jpy_g18
04:55:57 151  ,jpy_g19
04:55:57 152  ,jpy_g20
04:55:57 153  ,jpy_g21
04:55:57 154  ,jpy_g22
04:55:57 155  ,jpy_g23
04:55:57 156  ,jpy_g24
04:55:57 157  ,jpy_g25
04:55:57 158  ,jpy_g26
04:55:57 159  ,jpy_g27
04:55:57 160  ,jpy_g28
04:55:57 161  ,jpy_g29
04:55:57 162  ,jpy_g30
04:55:57 163  ,jpy_g31
04:55:57 164  ,jpy_g32
04:55:57 165  ,jpy_g33
04:55:57 166  ,jpy_g34
04:55:57 167  ,jpy_g35
04:55:57 168  ,jpy_g36
04:55:57 169  ,jpy_g37
04:55:57 170  ,jpy_g38
04:55:57 171  ,jpy_g39
04:55:57 172  ,jpy_g40
04:55:57 173  ,jpy_g41
04:55:57 174  ,cad_g00
04:55:57 175  ,cad_g01
04:55:57 176  ,cad_g02
04:55:57 177  ,cad_g03
04:55:57 178  ,cad_g04
04:55:57 179  ,cad_g05
04:55:57 180  ,cad_g06
04:55:57 181  ,cad_g07
04:55:57 182  ,cad_g08
04:55:57 183  ,cad_g09
04:55:57 184  ,cad_g10
04:55:57 185  ,cad_g11
04:55:57 186  ,cad_g12
04:55:57 187  ,cad_g13
04:55:57 188  ,cad_g14
04:55:57 189  ,cad_g15
04:55:57 190  ,cad_g16
04:55:57 191  ,cad_g17
04:55:57 192  ,cad_g18
04:55:57 193  ,cad_g19
04:55:57 194  ,cad_g20
04:55:57 195  ,cad_g21
04:55:57 196  ,cad_g22
04:55:57 197  ,cad_g23
04:55:57 198  ,cad_g24
04:55:57 199  ,cad_g25
04:55:57 200  ,cad_g26
04:55:57 201  ,cad_g27
04:55:57 202  ,cad_g28
04:55:57 203  ,cad_g29
04:55:57 204  ,cad_g30
04:55:57 205  ,cad_g31
04:55:57 206  ,cad_g32
04:55:57 207  ,cad_g33
04:55:57 208  ,cad_g34
04:55:57 209  ,cad_g35
04:55:57 210  ,cad_g36
04:55:57 211  ,cad_g37
04:55:57 212  ,cad_g38
04:55:57 213  ,cad_g39
04:55:57 214  ,cad_g40
04:55:57 215  ,cad_g41
04:55:57 216  ,chf_g00
04:55:57 217  ,chf_g01
04:55:57 218  ,chf_g02
04:55:57 219  ,chf_g03
04:55:57 220  ,chf_g04
04:55:57 221  ,chf_g05
04:55:57 222  ,chf_g06
04:55:57 223  ,chf_g07
04:55:57 224  ,chf_g08
04:55:57 225  ,chf_g09
04:55:57 226  ,chf_g10
04:55:57 227  ,chf_g11
04:55:57 228  ,chf_g12
04:55:57 229  ,chf_g13
04:55:57 230  ,chf_g14
04:55:57 231  ,chf_g15
04:55:57 232  ,chf_g16
04:55:57 233  ,chf_g17
04:55:57 234  ,chf_g18
04:55:57 235  ,chf_g19
04:55:57 236  ,chf_g20
04:55:57 237  ,chf_g21
04:55:57 238  ,chf_g22
04:55:57 239  ,chf_g23
04:55:57 240  ,chf_g24
04:55:57 241  ,chf_g25
04:55:57 242  ,chf_g26
04:55:57 243  ,chf_g27
04:55:57 244  ,chf_g28
04:55:57 245  ,chf_g29
04:55:57 246  ,chf_g30
04:55:57 247  ,chf_g31
04:55:57 248  ,chf_g32
04:55:57 249  ,chf_g33
04:55:57 250  ,chf_g34
04:55:57 251  ,chf_g35
04:55:57 252  ,chf_g36
04:55:57 253  ,chf_g37
04:55:57 254  ,chf_g38
04:55:57 255  ,chf_g39
04:55:57 256  ,chf_g40
04:55:57 257  ,chf_g41
04:55:57 258  FROM aud_ms6 m
04:55:57 259  WHERE gatt IN('nup','up')
04:55:57 260  AND 1+m.ydate < '&1'||' '||'&2'
04:55:57 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'04:40:00'

View created.

Elapsed: 00:00:00.13
04:55:57 SQL> 
04:55:57 SQL> -- rpt
04:55:57 SQL> 
04:55:57 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
04:55:57   2  
04:55:57 SQL> SELECT MAX(prdate) FROM bme
04:55:57   2  
04:55:57 SQL> -- Now build model from bme and score sme
04:55:57 SQL> @score1.sql
04:55:57 SQL> -- score1.sql
04:55:57 SQL> 
04:55:57 SQL> -- Does the 1st SVM score
04:55:57 SQL> 
04:55:57 SQL> -- Fill up svmc_apply_prep
04:55:57 SQL> @score.sql
04:55:57 SQL> --
04:55:57 SQL> -- score.sql
04:55:57 SQL> --
04:55:57 SQL> 
04:55:57 SQL> -- usage: score.sql
04:55:57 SQL> 
04:55:57 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
04:55:57 SQL> 
04:55:57 SQL> DEFINE target	= 'gatt'
04:55:57 SQL> DEFINE model_name = 'forex15'
04:55:57 SQL> DEFINE bldtable	= 'bme'
04:55:57 SQL> DEFINE scoretable = 'sme'
04:55:57 SQL> DEFINE case_id	= 'prdate'
04:55:57 SQL> 
04:55:57 SQL> -- Define a variable to help me exclude some columns from some data mining calls
04:55:57 SQL> DEFINE exclude1 = "'&target','&case_id'"
04:55:57 SQL> 
04:55:57 SQL> -- Builds an SVM model using pl/sql.
04:55:57 SQL> 
04:55:57 SQL> -----------------------------------------------------------------------
04:55:57 SQL> --			    BUILD THE MODEL
04:55:57 SQL> -----------------------------------------------------------------------
04:55:57 SQL> 
04:55:57 SQL> -- Cleanup old build data preparation objects for repeat runs
04:55:57 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
04:55:57 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
04:55:57 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
04:55:57 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
04:55:57 SQL> 
04:55:57 SQL> 
04:55:57 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
04:55:57 SQL> --
04:55:57 SQL> -- DROP	TABLE svmc_settings ;
04:55:57 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
04:55:57 SQL> -- DELETE svmc_settings;
04:55:57 SQL> 
04:55:57 SQL> -- The default classification algorithm is Naive Bayes. So override
04:55:57 SQL> -- this choice to SVM using a settings table.
04:55:57 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
04:55:57 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
04:55:57 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
04:55:57 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
04:55:57 SQL> -- models.
04:55:57 SQL> --
04:55:57 SQL> 
04:55:57 SQL> -- Do this once and then comment it out.
04:55:57 SQL> -- That makes script go faster.
04:55:57 SQL> -- BEGIN
04:55:57 SQL> -- -- Populate settings table
04:55:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:55:57 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
04:55:57 SQL> --
04:55:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:55:57 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
04:55:57 SQL> --
04:55:57 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:55:57 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
04:55:57 SQL> --   COMMIT;
04:55:57 SQL> -- END;
04:55:57 SQL> -- /
04:55:57 SQL> 
04:55:57 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
04:55:57 SQL> 
04:55:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
04:55:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:55:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:55:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
04:55:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:55:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:55:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
04:55:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:55:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:55:57 SQL> 
04:55:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
04:55:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:55:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:55:57 SQL> 
04:55:57 SQL> --------------------------------
04:55:57 SQL> -- PREPARE BUILD (TRAINING) DATA
04:55:57 SQL> --
04:55:57 SQL> 
04:55:57 SQL> -- 1. Missing Value treatment for all Predictors and
04:55:57 SQL> -- 2. Outlier Treatment and
04:55:57 SQL> -- 3. Normalization are performed below.
04:55:57 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
04:55:57 SQL> --    normalized here.
04:55:57 SQL> 
04:55:57 SQL> BEGIN
04:55:57   2  	-- Perform missing value treatment for all predictors
04:55:57   3  	-- create miss tables
04:55:57   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
04:55:57   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
04:55:57   6  
04:55:57   7  	-- populate miss tables
04:55:57   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
04:55:57   9  	  miss_table_name => 'svmc_miss_num',
04:55:57  10  	  data_table_name => '&bldtable',
04:55:57  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:55:57  12  
04:55:57  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
04:55:57  14  	  miss_table_name => 'svmc_miss_cat',
04:55:57  15  	  data_table_name => '&bldtable',
04:55:57  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:55:57  17  
04:55:57  18  	-- xform input data to replace missing values
04:55:57  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:55:57  20  	  miss_table_name => 'svmc_miss_num',
04:55:57  21  	  data_table_name => '&bldtable',
04:55:57  22  	  xform_view_name => 'xformed_build_miss_num');
04:55:57  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:55:57  24  	  miss_table_name => 'svmc_miss_cat',
04:55:57  25  	  data_table_name => '&bldtable',
04:55:57  26  	  xform_view_name => 'xformed_build_miss_cat');
04:55:57  27  
04:55:57  28  	-- Perform outlier treatment.
04:55:57  29  	-- create clip table
04:55:57  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
04:55:57  31  
04:55:57  32  	-- populate clip table
04:55:57  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
04:55:57  34  	  clip_table_name => 'svmc_clip',
04:55:57  35  	  data_table_name => '&bldtable',
04:55:57  36  	  tail_frac	  => 0.025,
04:55:57  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:55:57  38  
04:55:57  39  	-- xform input data to winsorized data
04:55:57  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
04:55:57  41  	  clip_table_name => 'svmc_clip',
04:55:57  42  	  data_table_name => '&bldtable',
04:55:57  43  	  xform_view_name => 'svmc_winsor');
04:55:57  44  
04:55:57  45  	-- create normalization table
04:55:57  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
04:55:57  47  
04:55:57  48  	-- populate normalization table based on winsorized data
04:55:57  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
04:55:57  50  	  norm_table_name => 'svmc_norm',
04:55:57  51  	  data_table_name => 'svmc_winsor',
04:55:57  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:55:57  53  
04:55:57  54  	-- normalize the original data
04:55:57  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:55:57  56  	  norm_table_name => 'svmc_norm',
04:55:57  57  	  data_table_name => '&bldtable',
04:55:57  58  	  xform_view_name => 'svmc_build_prep');
04:55:57  59  END;
04:55:57  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.42
04:56:15 SQL> 
04:56:15 SQL> ---------------------
04:56:15 SQL> -- CREATE A NEW MODEL
04:56:15 SQL> --
04:56:15 SQL> -- Cleanup old model with the same name for repeat runs
04:56:15 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
04:56:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:56:15   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.93
04:56:16 SQL> 
04:56:16 SQL> -- Build a new SVM Model
04:56:16 SQL> BEGIN
04:56:16   2  	DBMS_DATA_MINING.CREATE_MODEL(
04:56:16   3  	  model_name	      => '&model_name',
04:56:16   4  	  mining_function     => dbms_data_mining.classification,
04:56:16   5  	  data_table_name     => 'svmc_build_prep',
04:56:16   6  	  case_id_column_name => '&case_id',
04:56:16   7  	  target_column_name  => '&target',
04:56:16   8  	  settings_table_name => 'svmc_settings');
04:56:16   9  END;
04:56:16  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.99
04:56:44 SQL> 
04:56:44 SQL> -----------------------------------------------------------------------
04:56:44 SQL> --			       APPLY/score THE MODEL
04:56:44 SQL> -----------------------------------------------------------------------
04:56:44 SQL> 
04:56:44 SQL> -- Cleanup old scoring data preparation objects for repeat runs
04:56:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
04:56:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:56:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
04:56:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
04:56:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:56:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:56:44 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
04:56:44   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:56:44   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:56:45 SQL> -----------------------
04:56:45 SQL> -- PREPARE SCORING DATA
04:56:45 SQL> --
04:56:45 SQL> -- If the data for model creation has been prepared, then the data
04:56:45 SQL> -- to be scored using the model must be prepared in the same manner
04:56:45 SQL> -- in order to obtain meaningful results.
04:56:45 SQL> --
04:56:45 SQL> -- 1. Missing Value treatment for all Predictors and
04:56:45 SQL> -- 2. Normalization
04:56:45 SQL> -- No outlier treatment will be performed during test and apply. The
04:56:45 SQL> -- normalization step is sufficient, since the normalization parameters
04:56:45 SQL> -- already capture the effects of outlier treatment done with build data.
04:56:45 SQL> --
04:56:45 SQL> BEGIN
04:56:45   2  	-- Xform Test data to replace missing values
04:56:45   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:56:45   4  	  miss_table_name => 'svmc_miss_num',
04:56:45   5  	  data_table_name => '&scoretable',
04:56:45   6  	  xform_view_name => 'xformed_apply_miss_num');
04:56:45   7  
04:56:45   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:56:45   9  	  miss_table_name => 'svmc_miss_cat',
04:56:45  10  	  data_table_name => '&scoretable',
04:56:45  11  	  xform_view_name => 'xformed_apply_miss_cat');
04:56:45  12  
04:56:45  13  	-- Normalize the data to be scored
04:56:45  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:56:45  15  	  norm_table_name => 'svmc_norm',
04:56:45  16  	  data_table_name => '&scoretable',
04:56:45  17  	  xform_view_name => 'svmc_apply_prep');
04:56:45  18  END;
04:56:45  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
04:56:46 SQL> 
04:56:46 SQL> -- Use same model_name used in score.sql
04:56:46 SQL> DEFINE model_name = 'forex15'
04:56:46 SQL> 
04:56:46 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
04:56:46 SQL> 
04:56:46 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
04:56:46 SQL> 
04:56:46 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
04:56:46   2  SELECT
04:56:46   3  prdate
04:56:46   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
04:56:46   5  ,sysdate
04:56:46   6  ,SUBSTR(prdate,1,3)pair
04:56:46   7  ,SUBSTR(prdate,4,19)ydate
04:56:46   8  FROM svmc_apply_prep
04:56:46   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
04:56:46 SQL> @aud_score1day.sql  2011-01-07 04:45:00
04:56:46 SQL> --
04:56:46 SQL> -- aud_score1day.sql
04:56:46 SQL> --
04:56:46 SQL> 
04:56:46 SQL> CREATE OR REPLACE VIEW sme AS
04:56:46   2  SELECT
04:56:46   3  'aud'||m.ydate prdate
04:56:46   4  ,NULL gatt
04:56:46   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:56:46   6  ,eur_g00
04:56:46   7  ,eur_g01
04:56:46   8  ,eur_g02
04:56:46   9  ,eur_g03
04:56:46  10  ,eur_g04
04:56:46  11  ,eur_g05
04:56:46  12  ,eur_g06
04:56:46  13  ,eur_g07
04:56:46  14  ,eur_g08
04:56:46  15  ,eur_g09
04:56:46  16  ,eur_g10
04:56:46  17  ,eur_g11
04:56:46  18  ,eur_g12
04:56:46  19  ,eur_g13
04:56:46  20  ,eur_g14
04:56:46  21  ,eur_g15
04:56:46  22  ,eur_g16
04:56:46  23  ,eur_g17
04:56:46  24  ,eur_g18
04:56:46  25  ,eur_g19
04:56:46  26  ,eur_g20
04:56:46  27  ,eur_g21
04:56:46  28  ,eur_g22
04:56:46  29  ,eur_g23
04:56:46  30  ,eur_g24
04:56:46  31  ,eur_g25
04:56:46  32  ,eur_g26
04:56:46  33  ,eur_g27
04:56:46  34  ,eur_g28
04:56:46  35  ,eur_g29
04:56:46  36  ,eur_g30
04:56:46  37  ,eur_g31
04:56:46  38  ,eur_g32
04:56:46  39  ,eur_g33
04:56:46  40  ,eur_g34
04:56:46  41  ,eur_g35
04:56:46  42  ,eur_g36
04:56:46  43  ,eur_g37
04:56:46  44  ,eur_g38
04:56:46  45  ,eur_g39
04:56:46  46  ,eur_g40
04:56:46  47  ,eur_g41
04:56:46  48  ,aud_g00
04:56:46  49  ,aud_g01
04:56:46  50  ,aud_g02
04:56:46  51  ,aud_g03
04:56:46  52  ,aud_g04
04:56:46  53  ,aud_g05
04:56:46  54  ,aud_g06
04:56:46  55  ,aud_g07
04:56:46  56  ,aud_g08
04:56:46  57  ,aud_g09
04:56:46  58  ,aud_g10
04:56:46  59  ,aud_g11
04:56:46  60  ,aud_g12
04:56:46  61  ,aud_g13
04:56:46  62  ,aud_g14
04:56:46  63  ,aud_g15
04:56:46  64  ,aud_g16
04:56:46  65  ,aud_g17
04:56:46  66  ,aud_g18
04:56:46  67  ,aud_g19
04:56:46  68  ,aud_g20
04:56:46  69  ,aud_g21
04:56:46  70  ,aud_g22
04:56:46  71  ,aud_g23
04:56:46  72  ,aud_g24
04:56:46  73  ,aud_g25
04:56:46  74  ,aud_g26
04:56:46  75  ,aud_g27
04:56:46  76  ,aud_g28
04:56:46  77  ,aud_g29
04:56:46  78  ,aud_g30
04:56:46  79  ,aud_g31
04:56:46  80  ,aud_g32
04:56:46  81  ,aud_g33
04:56:46  82  ,aud_g34
04:56:46  83  ,aud_g35
04:56:46  84  ,aud_g36
04:56:46  85  ,aud_g37
04:56:46  86  ,aud_g38
04:56:46  87  ,aud_g39
04:56:46  88  ,aud_g40
04:56:46  89  ,aud_g41
04:56:46  90  ,gbp_g00
04:56:46  91  ,gbp_g01
04:56:46  92  ,gbp_g02
04:56:46  93  ,gbp_g03
04:56:46  94  ,gbp_g04
04:56:46  95  ,gbp_g05
04:56:46  96  ,gbp_g06
04:56:46  97  ,gbp_g07
04:56:46  98  ,gbp_g08
04:56:46  99  ,gbp_g09
04:56:46 100  ,gbp_g10
04:56:46 101  ,gbp_g11
04:56:46 102  ,gbp_g12
04:56:46 103  ,gbp_g13
04:56:46 104  ,gbp_g14
04:56:46 105  ,gbp_g15
04:56:46 106  ,gbp_g16
04:56:46 107  ,gbp_g17
04:56:46 108  ,gbp_g18
04:56:46 109  ,gbp_g19
04:56:46 110  ,gbp_g20
04:56:46 111  ,gbp_g21
04:56:46 112  ,gbp_g22
04:56:46 113  ,gbp_g23
04:56:46 114  ,gbp_g24
04:56:46 115  ,gbp_g25
04:56:46 116  ,gbp_g26
04:56:46 117  ,gbp_g27
04:56:46 118  ,gbp_g28
04:56:46 119  ,gbp_g29
04:56:46 120  ,gbp_g30
04:56:46 121  ,gbp_g31
04:56:46 122  ,gbp_g32
04:56:46 123  ,gbp_g33
04:56:46 124  ,gbp_g34
04:56:46 125  ,gbp_g35
04:56:46 126  ,gbp_g36
04:56:46 127  ,gbp_g37
04:56:46 128  ,gbp_g38
04:56:46 129  ,gbp_g39
04:56:46 130  ,gbp_g40
04:56:46 131  ,gbp_g41
04:56:46 132  ,jpy_g00
04:56:46 133  ,jpy_g01
04:56:46 134  ,jpy_g02
04:56:46 135  ,jpy_g03
04:56:46 136  ,jpy_g04
04:56:46 137  ,jpy_g05
04:56:46 138  ,jpy_g06
04:56:46 139  ,jpy_g07
04:56:46 140  ,jpy_g08
04:56:46 141  ,jpy_g09
04:56:46 142  ,jpy_g10
04:56:46 143  ,jpy_g11
04:56:46 144  ,jpy_g12
04:56:46 145  ,jpy_g13
04:56:46 146  ,jpy_g14
04:56:46 147  ,jpy_g15
04:56:46 148  ,jpy_g16
04:56:46 149  ,jpy_g17
04:56:46 150  ,jpy_g18
04:56:46 151  ,jpy_g19
04:56:46 152  ,jpy_g20
04:56:46 153  ,jpy_g21
04:56:46 154  ,jpy_g22
04:56:46 155  ,jpy_g23
04:56:46 156  ,jpy_g24
04:56:46 157  ,jpy_g25
04:56:46 158  ,jpy_g26
04:56:46 159  ,jpy_g27
04:56:46 160  ,jpy_g28
04:56:46 161  ,jpy_g29
04:56:46 162  ,jpy_g30
04:56:46 163  ,jpy_g31
04:56:46 164  ,jpy_g32
04:56:46 165  ,jpy_g33
04:56:46 166  ,jpy_g34
04:56:46 167  ,jpy_g35
04:56:46 168  ,jpy_g36
04:56:46 169  ,jpy_g37
04:56:46 170  ,jpy_g38
04:56:46 171  ,jpy_g39
04:56:46 172  ,jpy_g40
04:56:46 173  ,jpy_g41
04:56:46 174  ,cad_g00
04:56:46 175  ,cad_g01
04:56:46 176  ,cad_g02
04:56:46 177  ,cad_g03
04:56:46 178  ,cad_g04
04:56:46 179  ,cad_g05
04:56:46 180  ,cad_g06
04:56:46 181  ,cad_g07
04:56:46 182  ,cad_g08
04:56:46 183  ,cad_g09
04:56:46 184  ,cad_g10
04:56:46 185  ,cad_g11
04:56:46 186  ,cad_g12
04:56:46 187  ,cad_g13
04:56:46 188  ,cad_g14
04:56:46 189  ,cad_g15
04:56:46 190  ,cad_g16
04:56:46 191  ,cad_g17
04:56:46 192  ,cad_g18
04:56:46 193  ,cad_g19
04:56:46 194  ,cad_g20
04:56:46 195  ,cad_g21
04:56:46 196  ,cad_g22
04:56:46 197  ,cad_g23
04:56:46 198  ,cad_g24
04:56:46 199  ,cad_g25
04:56:46 200  ,cad_g26
04:56:46 201  ,cad_g27
04:56:46 202  ,cad_g28
04:56:46 203  ,cad_g29
04:56:46 204  ,cad_g30
04:56:46 205  ,cad_g31
04:56:46 206  ,cad_g32
04:56:46 207  ,cad_g33
04:56:46 208  ,cad_g34
04:56:46 209  ,cad_g35
04:56:46 210  ,cad_g36
04:56:46 211  ,cad_g37
04:56:46 212  ,cad_g38
04:56:46 213  ,cad_g39
04:56:46 214  ,cad_g40
04:56:46 215  ,cad_g41
04:56:46 216  ,chf_g00
04:56:46 217  ,chf_g01
04:56:46 218  ,chf_g02
04:56:46 219  ,chf_g03
04:56:46 220  ,chf_g04
04:56:46 221  ,chf_g05
04:56:46 222  ,chf_g06
04:56:46 223  ,chf_g07
04:56:46 224  ,chf_g08
04:56:46 225  ,chf_g09
04:56:46 226  ,chf_g10
04:56:46 227  ,chf_g11
04:56:46 228  ,chf_g12
04:56:46 229  ,chf_g13
04:56:46 230  ,chf_g14
04:56:46 231  ,chf_g15
04:56:46 232  ,chf_g16
04:56:46 233  ,chf_g17
04:56:46 234  ,chf_g18
04:56:46 235  ,chf_g19
04:56:46 236  ,chf_g20
04:56:46 237  ,chf_g21
04:56:46 238  ,chf_g22
04:56:46 239  ,chf_g23
04:56:46 240  ,chf_g24
04:56:46 241  ,chf_g25
04:56:46 242  ,chf_g26
04:56:46 243  ,chf_g27
04:56:46 244  ,chf_g28
04:56:46 245  ,chf_g29
04:56:46 246  ,chf_g30
04:56:46 247  ,chf_g31
04:56:46 248  ,chf_g32
04:56:46 249  ,chf_g33
04:56:46 250  ,chf_g34
04:56:46 251  ,chf_g35
04:56:46 252  ,chf_g36
04:56:46 253  ,chf_g37
04:56:46 254  ,chf_g38
04:56:46 255  ,chf_g39
04:56:46 256  ,chf_g40
04:56:46 257  ,chf_g41
04:56:46 258  FROM aud_ms6 m
04:56:46 259  WHERE m.ydate = '&1'||' '||'&2'
04:56:46 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'04:45:00'

View created.

Elapsed: 00:00:00.13
04:56:46 SQL> 
04:56:46 SQL> -- rpt
04:56:46 SQL> -- We should see just 1 row:
04:56:46 SQL> 
04:56:46 SQL> SELECT COUNT(prdate) FROM sme
04:56:46   2  
04:56:46 SQL> -- Build the model:
04:56:46 SQL> CREATE OR REPLACE VIEW bme AS
04:56:46   2  SELECT
04:56:46   3  'aud'||m.ydate prdate
04:56:46   4  ,gatt
04:56:46   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:56:46   6  ,eur_g00
04:56:46   7  ,eur_g01
04:56:46   8  ,eur_g02
04:56:46   9  ,eur_g03
04:56:46  10  ,eur_g04
04:56:46  11  ,eur_g05
04:56:46  12  ,eur_g06
04:56:46  13  ,eur_g07
04:56:46  14  ,eur_g08
04:56:46  15  ,eur_g09
04:56:46  16  ,eur_g10
04:56:46  17  ,eur_g11
04:56:46  18  ,eur_g12
04:56:46  19  ,eur_g13
04:56:46  20  ,eur_g14
04:56:46  21  ,eur_g15
04:56:46  22  ,eur_g16
04:56:46  23  ,eur_g17
04:56:46  24  ,eur_g18
04:56:46  25  ,eur_g19
04:56:46  26  ,eur_g20
04:56:46  27  ,eur_g21
04:56:46  28  ,eur_g22
04:56:46  29  ,eur_g23
04:56:46  30  ,eur_g24
04:56:46  31  ,eur_g25
04:56:46  32  ,eur_g26
04:56:46  33  ,eur_g27
04:56:46  34  ,eur_g28
04:56:46  35  ,eur_g29
04:56:46  36  ,eur_g30
04:56:46  37  ,eur_g31
04:56:46  38  ,eur_g32
04:56:46  39  ,eur_g33
04:56:46  40  ,eur_g34
04:56:46  41  ,eur_g35
04:56:46  42  ,eur_g36
04:56:46  43  ,eur_g37
04:56:46  44  ,eur_g38
04:56:46  45  ,eur_g39
04:56:46  46  ,eur_g40
04:56:46  47  ,eur_g41
04:56:46  48  ,aud_g00
04:56:46  49  ,aud_g01
04:56:46  50  ,aud_g02
04:56:46  51  ,aud_g03
04:56:46  52  ,aud_g04
04:56:46  53  ,aud_g05
04:56:46  54  ,aud_g06
04:56:46  55  ,aud_g07
04:56:46  56  ,aud_g08
04:56:46  57  ,aud_g09
04:56:46  58  ,aud_g10
04:56:46  59  ,aud_g11
04:56:46  60  ,aud_g12
04:56:46  61  ,aud_g13
04:56:46  62  ,aud_g14
04:56:46  63  ,aud_g15
04:56:46  64  ,aud_g16
04:56:46  65  ,aud_g17
04:56:46  66  ,aud_g18
04:56:46  67  ,aud_g19
04:56:46  68  ,aud_g20
04:56:46  69  ,aud_g21
04:56:46  70  ,aud_g22
04:56:46  71  ,aud_g23
04:56:46  72  ,aud_g24
04:56:46  73  ,aud_g25
04:56:46  74  ,aud_g26
04:56:46  75  ,aud_g27
04:56:46  76  ,aud_g28
04:56:46  77  ,aud_g29
04:56:46  78  ,aud_g30
04:56:46  79  ,aud_g31
04:56:46  80  ,aud_g32
04:56:46  81  ,aud_g33
04:56:46  82  ,aud_g34
04:56:46  83  ,aud_g35
04:56:46  84  ,aud_g36
04:56:46  85  ,aud_g37
04:56:46  86  ,aud_g38
04:56:46  87  ,aud_g39
04:56:46  88  ,aud_g40
04:56:46  89  ,aud_g41
04:56:46  90  ,gbp_g00
04:56:46  91  ,gbp_g01
04:56:46  92  ,gbp_g02
04:56:46  93  ,gbp_g03
04:56:46  94  ,gbp_g04
04:56:46  95  ,gbp_g05
04:56:46  96  ,gbp_g06
04:56:46  97  ,gbp_g07
04:56:46  98  ,gbp_g08
04:56:46  99  ,gbp_g09
04:56:46 100  ,gbp_g10
04:56:46 101  ,gbp_g11
04:56:46 102  ,gbp_g12
04:56:46 103  ,gbp_g13
04:56:46 104  ,gbp_g14
04:56:46 105  ,gbp_g15
04:56:46 106  ,gbp_g16
04:56:46 107  ,gbp_g17
04:56:46 108  ,gbp_g18
04:56:46 109  ,gbp_g19
04:56:46 110  ,gbp_g20
04:56:46 111  ,gbp_g21
04:56:46 112  ,gbp_g22
04:56:46 113  ,gbp_g23
04:56:46 114  ,gbp_g24
04:56:46 115  ,gbp_g25
04:56:46 116  ,gbp_g26
04:56:46 117  ,gbp_g27
04:56:46 118  ,gbp_g28
04:56:46 119  ,gbp_g29
04:56:46 120  ,gbp_g30
04:56:46 121  ,gbp_g31
04:56:46 122  ,gbp_g32
04:56:46 123  ,gbp_g33
04:56:46 124  ,gbp_g34
04:56:46 125  ,gbp_g35
04:56:46 126  ,gbp_g36
04:56:46 127  ,gbp_g37
04:56:46 128  ,gbp_g38
04:56:46 129  ,gbp_g39
04:56:46 130  ,gbp_g40
04:56:46 131  ,gbp_g41
04:56:46 132  ,jpy_g00
04:56:46 133  ,jpy_g01
04:56:46 134  ,jpy_g02
04:56:46 135  ,jpy_g03
04:56:46 136  ,jpy_g04
04:56:46 137  ,jpy_g05
04:56:46 138  ,jpy_g06
04:56:46 139  ,jpy_g07
04:56:46 140  ,jpy_g08
04:56:46 141  ,jpy_g09
04:56:46 142  ,jpy_g10
04:56:46 143  ,jpy_g11
04:56:46 144  ,jpy_g12
04:56:46 145  ,jpy_g13
04:56:46 146  ,jpy_g14
04:56:46 147  ,jpy_g15
04:56:46 148  ,jpy_g16
04:56:46 149  ,jpy_g17
04:56:46 150  ,jpy_g18
04:56:46 151  ,jpy_g19
04:56:46 152  ,jpy_g20
04:56:46 153  ,jpy_g21
04:56:46 154  ,jpy_g22
04:56:46 155  ,jpy_g23
04:56:46 156  ,jpy_g24
04:56:46 157  ,jpy_g25
04:56:46 158  ,jpy_g26
04:56:46 159  ,jpy_g27
04:56:46 160  ,jpy_g28
04:56:46 161  ,jpy_g29
04:56:46 162  ,jpy_g30
04:56:46 163  ,jpy_g31
04:56:46 164  ,jpy_g32
04:56:46 165  ,jpy_g33
04:56:46 166  ,jpy_g34
04:56:46 167  ,jpy_g35
04:56:46 168  ,jpy_g36
04:56:46 169  ,jpy_g37
04:56:46 170  ,jpy_g38
04:56:46 171  ,jpy_g39
04:56:46 172  ,jpy_g40
04:56:46 173  ,jpy_g41
04:56:46 174  ,cad_g00
04:56:46 175  ,cad_g01
04:56:46 176  ,cad_g02
04:56:46 177  ,cad_g03
04:56:46 178  ,cad_g04
04:56:46 179  ,cad_g05
04:56:46 180  ,cad_g06
04:56:46 181  ,cad_g07
04:56:46 182  ,cad_g08
04:56:46 183  ,cad_g09
04:56:46 184  ,cad_g10
04:56:46 185  ,cad_g11
04:56:46 186  ,cad_g12
04:56:46 187  ,cad_g13
04:56:46 188  ,cad_g14
04:56:46 189  ,cad_g15
04:56:46 190  ,cad_g16
04:56:46 191  ,cad_g17
04:56:46 192  ,cad_g18
04:56:46 193  ,cad_g19
04:56:46 194  ,cad_g20
04:56:46 195  ,cad_g21
04:56:46 196  ,cad_g22
04:56:46 197  ,cad_g23
04:56:46 198  ,cad_g24
04:56:46 199  ,cad_g25
04:56:46 200  ,cad_g26
04:56:46 201  ,cad_g27
04:56:46 202  ,cad_g28
04:56:46 203  ,cad_g29
04:56:46 204  ,cad_g30
04:56:46 205  ,cad_g31
04:56:46 206  ,cad_g32
04:56:46 207  ,cad_g33
04:56:46 208  ,cad_g34
04:56:46 209  ,cad_g35
04:56:46 210  ,cad_g36
04:56:46 211  ,cad_g37
04:56:46 212  ,cad_g38
04:56:46 213  ,cad_g39
04:56:46 214  ,cad_g40
04:56:46 215  ,cad_g41
04:56:46 216  ,chf_g00
04:56:46 217  ,chf_g01
04:56:46 218  ,chf_g02
04:56:46 219  ,chf_g03
04:56:46 220  ,chf_g04
04:56:46 221  ,chf_g05
04:56:46 222  ,chf_g06
04:56:46 223  ,chf_g07
04:56:46 224  ,chf_g08
04:56:46 225  ,chf_g09
04:56:46 226  ,chf_g10
04:56:46 227  ,chf_g11
04:56:46 228  ,chf_g12
04:56:46 229  ,chf_g13
04:56:46 230  ,chf_g14
04:56:46 231  ,chf_g15
04:56:46 232  ,chf_g16
04:56:46 233  ,chf_g17
04:56:46 234  ,chf_g18
04:56:46 235  ,chf_g19
04:56:46 236  ,chf_g20
04:56:46 237  ,chf_g21
04:56:46 238  ,chf_g22
04:56:46 239  ,chf_g23
04:56:46 240  ,chf_g24
04:56:46 241  ,chf_g25
04:56:46 242  ,chf_g26
04:56:46 243  ,chf_g27
04:56:46 244  ,chf_g28
04:56:46 245  ,chf_g29
04:56:46 246  ,chf_g30
04:56:46 247  ,chf_g31
04:56:46 248  ,chf_g32
04:56:46 249  ,chf_g33
04:56:46 250  ,chf_g34
04:56:46 251  ,chf_g35
04:56:46 252  ,chf_g36
04:56:46 253  ,chf_g37
04:56:46 254  ,chf_g38
04:56:46 255  ,chf_g39
04:56:46 256  ,chf_g40
04:56:46 257  ,chf_g41
04:56:46 258  FROM aud_ms6 m
04:56:46 259  WHERE gatt IN('nup','up')
04:56:46 260  AND 1+m.ydate < '&1'||' '||'&2'
04:56:46 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'04:45:00'

View created.

Elapsed: 00:00:00.13
04:56:46 SQL> 
04:56:46 SQL> -- rpt
04:56:46 SQL> 
04:56:46 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
04:56:46   2  
04:56:46 SQL> SELECT MAX(prdate) FROM bme
04:56:46   2  
04:56:46 SQL> -- Now build model from bme and score sme
04:56:46 SQL> @score1.sql
04:56:46 SQL> -- score1.sql
04:56:46 SQL> 
04:56:46 SQL> -- Does the 1st SVM score
04:56:46 SQL> 
04:56:46 SQL> -- Fill up svmc_apply_prep
04:56:46 SQL> @score.sql
04:56:46 SQL> --
04:56:46 SQL> -- score.sql
04:56:46 SQL> --
04:56:46 SQL> 
04:56:46 SQL> -- usage: score.sql
04:56:46 SQL> 
04:56:46 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
04:56:46 SQL> 
04:56:46 SQL> DEFINE target	= 'gatt'
04:56:46 SQL> DEFINE model_name = 'forex15'
04:56:46 SQL> DEFINE bldtable	= 'bme'
04:56:46 SQL> DEFINE scoretable = 'sme'
04:56:46 SQL> DEFINE case_id	= 'prdate'
04:56:46 SQL> 
04:56:46 SQL> -- Define a variable to help me exclude some columns from some data mining calls
04:56:46 SQL> DEFINE exclude1 = "'&target','&case_id'"
04:56:46 SQL> 
04:56:46 SQL> -- Builds an SVM model using pl/sql.
04:56:46 SQL> 
04:56:46 SQL> -----------------------------------------------------------------------
04:56:46 SQL> --			    BUILD THE MODEL
04:56:46 SQL> -----------------------------------------------------------------------
04:56:46 SQL> 
04:56:46 SQL> -- Cleanup old build data preparation objects for repeat runs
04:56:46 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
04:56:46 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
04:56:46 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
04:56:46 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
04:56:46 SQL> 
04:56:46 SQL> 
04:56:46 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
04:56:46 SQL> --
04:56:46 SQL> -- DROP	TABLE svmc_settings ;
04:56:46 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
04:56:46 SQL> -- DELETE svmc_settings;
04:56:46 SQL> 
04:56:46 SQL> -- The default classification algorithm is Naive Bayes. So override
04:56:46 SQL> -- this choice to SVM using a settings table.
04:56:46 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
04:56:46 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
04:56:46 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
04:56:46 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
04:56:46 SQL> -- models.
04:56:46 SQL> --
04:56:46 SQL> 
04:56:46 SQL> -- Do this once and then comment it out.
04:56:46 SQL> -- That makes script go faster.
04:56:46 SQL> -- BEGIN
04:56:46 SQL> -- -- Populate settings table
04:56:46 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:56:46 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
04:56:46 SQL> --
04:56:46 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:56:46 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
04:56:46 SQL> --
04:56:46 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:56:46 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
04:56:46 SQL> --   COMMIT;
04:56:46 SQL> -- END;
04:56:46 SQL> -- /
04:56:46 SQL> 
04:56:46 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
04:56:46 SQL> 
04:56:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
04:56:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:56:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:56:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
04:56:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:56:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
04:56:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
04:56:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:56:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:56:47 SQL> 
04:56:47 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
04:56:47   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:56:47   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:56:47 SQL> 
04:56:47 SQL> --------------------------------
04:56:47 SQL> -- PREPARE BUILD (TRAINING) DATA
04:56:47 SQL> --
04:56:47 SQL> 
04:56:47 SQL> -- 1. Missing Value treatment for all Predictors and
04:56:47 SQL> -- 2. Outlier Treatment and
04:56:47 SQL> -- 3. Normalization are performed below.
04:56:47 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
04:56:47 SQL> --    normalized here.
04:56:47 SQL> 
04:56:47 SQL> BEGIN
04:56:47   2  	-- Perform missing value treatment for all predictors
04:56:47   3  	-- create miss tables
04:56:47   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
04:56:47   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
04:56:47   6  
04:56:47   7  	-- populate miss tables
04:56:47   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
04:56:47   9  	  miss_table_name => 'svmc_miss_num',
04:56:47  10  	  data_table_name => '&bldtable',
04:56:47  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:56:47  12  
04:56:47  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
04:56:47  14  	  miss_table_name => 'svmc_miss_cat',
04:56:47  15  	  data_table_name => '&bldtable',
04:56:47  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:56:47  17  
04:56:47  18  	-- xform input data to replace missing values
04:56:47  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:56:47  20  	  miss_table_name => 'svmc_miss_num',
04:56:47  21  	  data_table_name => '&bldtable',
04:56:47  22  	  xform_view_name => 'xformed_build_miss_num');
04:56:47  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:56:47  24  	  miss_table_name => 'svmc_miss_cat',
04:56:47  25  	  data_table_name => '&bldtable',
04:56:47  26  	  xform_view_name => 'xformed_build_miss_cat');
04:56:47  27  
04:56:47  28  	-- Perform outlier treatment.
04:56:47  29  	-- create clip table
04:56:47  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
04:56:47  31  
04:56:47  32  	-- populate clip table
04:56:47  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
04:56:47  34  	  clip_table_name => 'svmc_clip',
04:56:47  35  	  data_table_name => '&bldtable',
04:56:47  36  	  tail_frac	  => 0.025,
04:56:47  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:56:47  38  
04:56:47  39  	-- xform input data to winsorized data
04:56:47  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
04:56:47  41  	  clip_table_name => 'svmc_clip',
04:56:47  42  	  data_table_name => '&bldtable',
04:56:47  43  	  xform_view_name => 'svmc_winsor');
04:56:47  44  
04:56:47  45  	-- create normalization table
04:56:47  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
04:56:47  47  
04:56:47  48  	-- populate normalization table based on winsorized data
04:56:47  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
04:56:47  50  	  norm_table_name => 'svmc_norm',
04:56:47  51  	  data_table_name => 'svmc_winsor',
04:56:47  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:56:47  53  
04:56:47  54  	-- normalize the original data
04:56:47  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:56:47  56  	  norm_table_name => 'svmc_norm',
04:56:47  57  	  data_table_name => '&bldtable',
04:56:47  58  	  xform_view_name => 'svmc_build_prep');
04:56:47  59  END;
04:56:47  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.37
04:57:05 SQL> 
04:57:05 SQL> ---------------------
04:57:05 SQL> -- CREATE A NEW MODEL
04:57:05 SQL> --
04:57:05 SQL> -- Cleanup old model with the same name for repeat runs
04:57:05 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
04:57:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:57:05   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
04:57:06 SQL> 
04:57:06 SQL> -- Build a new SVM Model
04:57:06 SQL> BEGIN
04:57:06   2  	DBMS_DATA_MINING.CREATE_MODEL(
04:57:06   3  	  model_name	      => '&model_name',
04:57:06   4  	  mining_function     => dbms_data_mining.classification,
04:57:06   5  	  data_table_name     => 'svmc_build_prep',
04:57:06   6  	  case_id_column_name => '&case_id',
04:57:06   7  	  target_column_name  => '&target',
04:57:06   8  	  settings_table_name => 'svmc_settings');
04:57:06   9  END;
04:57:06  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.25
04:57:34 SQL> 
04:57:34 SQL> -----------------------------------------------------------------------
04:57:34 SQL> --			       APPLY/score THE MODEL
04:57:34 SQL> -----------------------------------------------------------------------
04:57:34 SQL> 
04:57:34 SQL> -- Cleanup old scoring data preparation objects for repeat runs
04:57:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
04:57:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:57:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:57:34 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
04:57:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:57:34   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:57:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
04:57:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:57:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:57:35 SQL> -----------------------
04:57:35 SQL> -- PREPARE SCORING DATA
04:57:35 SQL> --
04:57:35 SQL> -- If the data for model creation has been prepared, then the data
04:57:35 SQL> -- to be scored using the model must be prepared in the same manner
04:57:35 SQL> -- in order to obtain meaningful results.
04:57:35 SQL> --
04:57:35 SQL> -- 1. Missing Value treatment for all Predictors and
04:57:35 SQL> -- 2. Normalization
04:57:35 SQL> -- No outlier treatment will be performed during test and apply. The
04:57:35 SQL> -- normalization step is sufficient, since the normalization parameters
04:57:35 SQL> -- already capture the effects of outlier treatment done with build data.
04:57:35 SQL> --
04:57:35 SQL> BEGIN
04:57:35   2  	-- Xform Test data to replace missing values
04:57:35   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:57:35   4  	  miss_table_name => 'svmc_miss_num',
04:57:35   5  	  data_table_name => '&scoretable',
04:57:35   6  	  xform_view_name => 'xformed_apply_miss_num');
04:57:35   7  
04:57:35   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:57:35   9  	  miss_table_name => 'svmc_miss_cat',
04:57:35  10  	  data_table_name => '&scoretable',
04:57:35  11  	  xform_view_name => 'xformed_apply_miss_cat');
04:57:35  12  
04:57:35  13  	-- Normalize the data to be scored
04:57:35  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:57:35  15  	  norm_table_name => 'svmc_norm',
04:57:35  16  	  data_table_name => '&scoretable',
04:57:35  17  	  xform_view_name => 'svmc_apply_prep');
04:57:35  18  END;
04:57:35  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
04:57:36 SQL> 
04:57:36 SQL> -- Use same model_name used in score.sql
04:57:36 SQL> DEFINE model_name = 'forex15'
04:57:36 SQL> 
04:57:36 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
04:57:36 SQL> 
04:57:36 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
04:57:36 SQL> 
04:57:36 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
04:57:36   2  SELECT
04:57:36   3  prdate
04:57:36   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
04:57:36   5  ,sysdate
04:57:36   6  ,SUBSTR(prdate,1,3)pair
04:57:36   7  ,SUBSTR(prdate,4,19)ydate
04:57:36   8  FROM svmc_apply_prep
04:57:36   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
04:57:36 SQL> @aud_score1day_gattn.sql	2011-01-07 04:35:00
04:57:36 SQL> --
04:57:36 SQL> -- aud_score1day_gattn.sql
04:57:36 SQL> --
04:57:36 SQL> 
04:57:36 SQL> CREATE OR REPLACE VIEW sme AS
04:57:36   2  SELECT
04:57:36   3  'aud'||m.ydate prdate
04:57:36   4  ,NULL gattn
04:57:36   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:57:36   6  ,eur_g00
04:57:36   7  ,eur_g01
04:57:36   8  ,eur_g02
04:57:36   9  ,eur_g03
04:57:36  10  ,eur_g04
04:57:36  11  ,eur_g05
04:57:36  12  ,eur_g06
04:57:36  13  ,eur_g07
04:57:36  14  ,eur_g08
04:57:36  15  ,eur_g09
04:57:36  16  ,eur_g10
04:57:36  17  ,eur_g11
04:57:36  18  ,eur_g12
04:57:36  19  ,eur_g13
04:57:36  20  ,eur_g14
04:57:36  21  ,eur_g15
04:57:36  22  ,eur_g16
04:57:36  23  ,eur_g17
04:57:36  24  ,eur_g18
04:57:36  25  ,eur_g19
04:57:36  26  ,eur_g20
04:57:36  27  ,eur_g21
04:57:36  28  ,eur_g22
04:57:36  29  ,eur_g23
04:57:36  30  ,eur_g24
04:57:36  31  ,eur_g25
04:57:36  32  ,eur_g26
04:57:36  33  ,eur_g27
04:57:36  34  ,eur_g28
04:57:36  35  ,eur_g29
04:57:36  36  ,eur_g30
04:57:36  37  ,eur_g31
04:57:36  38  ,eur_g32
04:57:36  39  ,eur_g33
04:57:36  40  ,eur_g34
04:57:36  41  ,eur_g35
04:57:36  42  ,eur_g36
04:57:36  43  ,eur_g37
04:57:36  44  ,eur_g38
04:57:36  45  ,eur_g39
04:57:36  46  ,eur_g40
04:57:36  47  ,eur_g41
04:57:36  48  ,aud_g00
04:57:36  49  ,aud_g01
04:57:36  50  ,aud_g02
04:57:36  51  ,aud_g03
04:57:36  52  ,aud_g04
04:57:36  53  ,aud_g05
04:57:36  54  ,aud_g06
04:57:36  55  ,aud_g07
04:57:36  56  ,aud_g08
04:57:36  57  ,aud_g09
04:57:36  58  ,aud_g10
04:57:36  59  ,aud_g11
04:57:36  60  ,aud_g12
04:57:36  61  ,aud_g13
04:57:36  62  ,aud_g14
04:57:36  63  ,aud_g15
04:57:36  64  ,aud_g16
04:57:36  65  ,aud_g17
04:57:36  66  ,aud_g18
04:57:36  67  ,aud_g19
04:57:36  68  ,aud_g20
04:57:36  69  ,aud_g21
04:57:36  70  ,aud_g22
04:57:36  71  ,aud_g23
04:57:36  72  ,aud_g24
04:57:36  73  ,aud_g25
04:57:36  74  ,aud_g26
04:57:36  75  ,aud_g27
04:57:36  76  ,aud_g28
04:57:36  77  ,aud_g29
04:57:36  78  ,aud_g30
04:57:36  79  ,aud_g31
04:57:36  80  ,aud_g32
04:57:36  81  ,aud_g33
04:57:36  82  ,aud_g34
04:57:36  83  ,aud_g35
04:57:36  84  ,aud_g36
04:57:36  85  ,aud_g37
04:57:36  86  ,aud_g38
04:57:36  87  ,aud_g39
04:57:36  88  ,aud_g40
04:57:36  89  ,aud_g41
04:57:36  90  ,gbp_g00
04:57:36  91  ,gbp_g01
04:57:36  92  ,gbp_g02
04:57:36  93  ,gbp_g03
04:57:36  94  ,gbp_g04
04:57:36  95  ,gbp_g05
04:57:36  96  ,gbp_g06
04:57:36  97  ,gbp_g07
04:57:36  98  ,gbp_g08
04:57:36  99  ,gbp_g09
04:57:36 100  ,gbp_g10
04:57:36 101  ,gbp_g11
04:57:36 102  ,gbp_g12
04:57:36 103  ,gbp_g13
04:57:36 104  ,gbp_g14
04:57:36 105  ,gbp_g15
04:57:36 106  ,gbp_g16
04:57:36 107  ,gbp_g17
04:57:36 108  ,gbp_g18
04:57:36 109  ,gbp_g19
04:57:36 110  ,gbp_g20
04:57:36 111  ,gbp_g21
04:57:36 112  ,gbp_g22
04:57:36 113  ,gbp_g23
04:57:36 114  ,gbp_g24
04:57:36 115  ,gbp_g25
04:57:36 116  ,gbp_g26
04:57:36 117  ,gbp_g27
04:57:36 118  ,gbp_g28
04:57:36 119  ,gbp_g29
04:57:36 120  ,gbp_g30
04:57:36 121  ,gbp_g31
04:57:36 122  ,gbp_g32
04:57:36 123  ,gbp_g33
04:57:36 124  ,gbp_g34
04:57:36 125  ,gbp_g35
04:57:36 126  ,gbp_g36
04:57:36 127  ,gbp_g37
04:57:36 128  ,gbp_g38
04:57:36 129  ,gbp_g39
04:57:36 130  ,gbp_g40
04:57:36 131  ,gbp_g41
04:57:36 132  ,jpy_g00
04:57:36 133  ,jpy_g01
04:57:36 134  ,jpy_g02
04:57:36 135  ,jpy_g03
04:57:36 136  ,jpy_g04
04:57:36 137  ,jpy_g05
04:57:36 138  ,jpy_g06
04:57:36 139  ,jpy_g07
04:57:36 140  ,jpy_g08
04:57:36 141  ,jpy_g09
04:57:36 142  ,jpy_g10
04:57:36 143  ,jpy_g11
04:57:36 144  ,jpy_g12
04:57:36 145  ,jpy_g13
04:57:36 146  ,jpy_g14
04:57:36 147  ,jpy_g15
04:57:36 148  ,jpy_g16
04:57:36 149  ,jpy_g17
04:57:36 150  ,jpy_g18
04:57:36 151  ,jpy_g19
04:57:36 152  ,jpy_g20
04:57:36 153  ,jpy_g21
04:57:36 154  ,jpy_g22
04:57:36 155  ,jpy_g23
04:57:36 156  ,jpy_g24
04:57:36 157  ,jpy_g25
04:57:36 158  ,jpy_g26
04:57:36 159  ,jpy_g27
04:57:36 160  ,jpy_g28
04:57:36 161  ,jpy_g29
04:57:36 162  ,jpy_g30
04:57:36 163  ,jpy_g31
04:57:36 164  ,jpy_g32
04:57:36 165  ,jpy_g33
04:57:36 166  ,jpy_g34
04:57:36 167  ,jpy_g35
04:57:36 168  ,jpy_g36
04:57:36 169  ,jpy_g37
04:57:36 170  ,jpy_g38
04:57:36 171  ,jpy_g39
04:57:36 172  ,jpy_g40
04:57:36 173  ,jpy_g41
04:57:36 174  ,cad_g00
04:57:36 175  ,cad_g01
04:57:36 176  ,cad_g02
04:57:36 177  ,cad_g03
04:57:36 178  ,cad_g04
04:57:36 179  ,cad_g05
04:57:36 180  ,cad_g06
04:57:36 181  ,cad_g07
04:57:36 182  ,cad_g08
04:57:36 183  ,cad_g09
04:57:36 184  ,cad_g10
04:57:36 185  ,cad_g11
04:57:36 186  ,cad_g12
04:57:36 187  ,cad_g13
04:57:36 188  ,cad_g14
04:57:36 189  ,cad_g15
04:57:36 190  ,cad_g16
04:57:36 191  ,cad_g17
04:57:36 192  ,cad_g18
04:57:36 193  ,cad_g19
04:57:36 194  ,cad_g20
04:57:36 195  ,cad_g21
04:57:36 196  ,cad_g22
04:57:36 197  ,cad_g23
04:57:36 198  ,cad_g24
04:57:36 199  ,cad_g25
04:57:36 200  ,cad_g26
04:57:36 201  ,cad_g27
04:57:36 202  ,cad_g28
04:57:36 203  ,cad_g29
04:57:36 204  ,cad_g30
04:57:36 205  ,cad_g31
04:57:36 206  ,cad_g32
04:57:36 207  ,cad_g33
04:57:36 208  ,cad_g34
04:57:36 209  ,cad_g35
04:57:36 210  ,cad_g36
04:57:36 211  ,cad_g37
04:57:36 212  ,cad_g38
04:57:36 213  ,cad_g39
04:57:36 214  ,cad_g40
04:57:36 215  ,cad_g41
04:57:36 216  ,chf_g00
04:57:36 217  ,chf_g01
04:57:36 218  ,chf_g02
04:57:36 219  ,chf_g03
04:57:36 220  ,chf_g04
04:57:36 221  ,chf_g05
04:57:36 222  ,chf_g06
04:57:36 223  ,chf_g07
04:57:36 224  ,chf_g08
04:57:36 225  ,chf_g09
04:57:36 226  ,chf_g10
04:57:36 227  ,chf_g11
04:57:36 228  ,chf_g12
04:57:36 229  ,chf_g13
04:57:36 230  ,chf_g14
04:57:36 231  ,chf_g15
04:57:36 232  ,chf_g16
04:57:36 233  ,chf_g17
04:57:36 234  ,chf_g18
04:57:36 235  ,chf_g19
04:57:36 236  ,chf_g20
04:57:36 237  ,chf_g21
04:57:36 238  ,chf_g22
04:57:36 239  ,chf_g23
04:57:36 240  ,chf_g24
04:57:36 241  ,chf_g25
04:57:36 242  ,chf_g26
04:57:36 243  ,chf_g27
04:57:36 244  ,chf_g28
04:57:36 245  ,chf_g29
04:57:36 246  ,chf_g30
04:57:36 247  ,chf_g31
04:57:36 248  ,chf_g32
04:57:36 249  ,chf_g33
04:57:36 250  ,chf_g34
04:57:36 251  ,chf_g35
04:57:36 252  ,chf_g36
04:57:36 253  ,chf_g37
04:57:36 254  ,chf_g38
04:57:36 255  ,chf_g39
04:57:36 256  ,chf_g40
04:57:36 257  ,chf_g41
04:57:36 258  FROM aud_ms6 m
04:57:36 259  WHERE m.ydate = '&1'||' '||'&2'
04:57:36 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'04:35:00'

View created.

Elapsed: 00:00:00.13
04:57:36 SQL> 
04:57:36 SQL> -- rpt
04:57:36 SQL> -- We should see just 1 row:
04:57:36 SQL> 
04:57:36 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
04:57:36 SQL> 
04:57:36 SQL> -- Build the model:
04:57:36 SQL> CREATE OR REPLACE VIEW bme AS
04:57:36   2  SELECT
04:57:36   3  'aud'||m.ydate prdate
04:57:36   4  ,gattn
04:57:36   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:57:36   6  ,eur_g00
04:57:36   7  ,eur_g01
04:57:36   8  ,eur_g02
04:57:36   9  ,eur_g03
04:57:36  10  ,eur_g04
04:57:36  11  ,eur_g05
04:57:36  12  ,eur_g06
04:57:36  13  ,eur_g07
04:57:36  14  ,eur_g08
04:57:36  15  ,eur_g09
04:57:36  16  ,eur_g10
04:57:36  17  ,eur_g11
04:57:36  18  ,eur_g12
04:57:36  19  ,eur_g13
04:57:36  20  ,eur_g14
04:57:36  21  ,eur_g15
04:57:36  22  ,eur_g16
04:57:36  23  ,eur_g17
04:57:36  24  ,eur_g18
04:57:36  25  ,eur_g19
04:57:36  26  ,eur_g20
04:57:36  27  ,eur_g21
04:57:36  28  ,eur_g22
04:57:36  29  ,eur_g23
04:57:36  30  ,eur_g24
04:57:36  31  ,eur_g25
04:57:36  32  ,eur_g26
04:57:36  33  ,eur_g27
04:57:36  34  ,eur_g28
04:57:36  35  ,eur_g29
04:57:36  36  ,eur_g30
04:57:36  37  ,eur_g31
04:57:36  38  ,eur_g32
04:57:36  39  ,eur_g33
04:57:36  40  ,eur_g34
04:57:36  41  ,eur_g35
04:57:36  42  ,eur_g36
04:57:36  43  ,eur_g37
04:57:36  44  ,eur_g38
04:57:36  45  ,eur_g39
04:57:36  46  ,eur_g40
04:57:36  47  ,eur_g41
04:57:36  48  ,aud_g00
04:57:36  49  ,aud_g01
04:57:36  50  ,aud_g02
04:57:36  51  ,aud_g03
04:57:36  52  ,aud_g04
04:57:36  53  ,aud_g05
04:57:36  54  ,aud_g06
04:57:36  55  ,aud_g07
04:57:36  56  ,aud_g08
04:57:36  57  ,aud_g09
04:57:36  58  ,aud_g10
04:57:36  59  ,aud_g11
04:57:36  60  ,aud_g12
04:57:36  61  ,aud_g13
04:57:36  62  ,aud_g14
04:57:36  63  ,aud_g15
04:57:36  64  ,aud_g16
04:57:36  65  ,aud_g17
04:57:36  66  ,aud_g18
04:57:36  67  ,aud_g19
04:57:36  68  ,aud_g20
04:57:36  69  ,aud_g21
04:57:36  70  ,aud_g22
04:57:36  71  ,aud_g23
04:57:36  72  ,aud_g24
04:57:36  73  ,aud_g25
04:57:36  74  ,aud_g26
04:57:36  75  ,aud_g27
04:57:36  76  ,aud_g28
04:57:36  77  ,aud_g29
04:57:36  78  ,aud_g30
04:57:36  79  ,aud_g31
04:57:36  80  ,aud_g32
04:57:36  81  ,aud_g33
04:57:36  82  ,aud_g34
04:57:36  83  ,aud_g35
04:57:36  84  ,aud_g36
04:57:36  85  ,aud_g37
04:57:36  86  ,aud_g38
04:57:36  87  ,aud_g39
04:57:36  88  ,aud_g40
04:57:36  89  ,aud_g41
04:57:36  90  ,gbp_g00
04:57:36  91  ,gbp_g01
04:57:36  92  ,gbp_g02
04:57:36  93  ,gbp_g03
04:57:36  94  ,gbp_g04
04:57:36  95  ,gbp_g05
04:57:36  96  ,gbp_g06
04:57:36  97  ,gbp_g07
04:57:36  98  ,gbp_g08
04:57:36  99  ,gbp_g09
04:57:36 100  ,gbp_g10
04:57:36 101  ,gbp_g11
04:57:36 102  ,gbp_g12
04:57:36 103  ,gbp_g13
04:57:36 104  ,gbp_g14
04:57:36 105  ,gbp_g15
04:57:36 106  ,gbp_g16
04:57:36 107  ,gbp_g17
04:57:36 108  ,gbp_g18
04:57:36 109  ,gbp_g19
04:57:36 110  ,gbp_g20
04:57:36 111  ,gbp_g21
04:57:36 112  ,gbp_g22
04:57:36 113  ,gbp_g23
04:57:36 114  ,gbp_g24
04:57:36 115  ,gbp_g25
04:57:36 116  ,gbp_g26
04:57:36 117  ,gbp_g27
04:57:36 118  ,gbp_g28
04:57:36 119  ,gbp_g29
04:57:36 120  ,gbp_g30
04:57:36 121  ,gbp_g31
04:57:36 122  ,gbp_g32
04:57:36 123  ,gbp_g33
04:57:36 124  ,gbp_g34
04:57:36 125  ,gbp_g35
04:57:36 126  ,gbp_g36
04:57:36 127  ,gbp_g37
04:57:36 128  ,gbp_g38
04:57:36 129  ,gbp_g39
04:57:36 130  ,gbp_g40
04:57:36 131  ,gbp_g41
04:57:36 132  ,jpy_g00
04:57:36 133  ,jpy_g01
04:57:36 134  ,jpy_g02
04:57:36 135  ,jpy_g03
04:57:36 136  ,jpy_g04
04:57:36 137  ,jpy_g05
04:57:36 138  ,jpy_g06
04:57:36 139  ,jpy_g07
04:57:36 140  ,jpy_g08
04:57:36 141  ,jpy_g09
04:57:36 142  ,jpy_g10
04:57:36 143  ,jpy_g11
04:57:36 144  ,jpy_g12
04:57:36 145  ,jpy_g13
04:57:36 146  ,jpy_g14
04:57:36 147  ,jpy_g15
04:57:36 148  ,jpy_g16
04:57:36 149  ,jpy_g17
04:57:36 150  ,jpy_g18
04:57:36 151  ,jpy_g19
04:57:36 152  ,jpy_g20
04:57:36 153  ,jpy_g21
04:57:36 154  ,jpy_g22
04:57:36 155  ,jpy_g23
04:57:36 156  ,jpy_g24
04:57:36 157  ,jpy_g25
04:57:36 158  ,jpy_g26
04:57:36 159  ,jpy_g27
04:57:36 160  ,jpy_g28
04:57:36 161  ,jpy_g29
04:57:36 162  ,jpy_g30
04:57:36 163  ,jpy_g31
04:57:36 164  ,jpy_g32
04:57:36 165  ,jpy_g33
04:57:36 166  ,jpy_g34
04:57:36 167  ,jpy_g35
04:57:36 168  ,jpy_g36
04:57:36 169  ,jpy_g37
04:57:36 170  ,jpy_g38
04:57:36 171  ,jpy_g39
04:57:36 172  ,jpy_g40
04:57:36 173  ,jpy_g41
04:57:36 174  ,cad_g00
04:57:36 175  ,cad_g01
04:57:36 176  ,cad_g02
04:57:36 177  ,cad_g03
04:57:36 178  ,cad_g04
04:57:36 179  ,cad_g05
04:57:36 180  ,cad_g06
04:57:36 181  ,cad_g07
04:57:36 182  ,cad_g08
04:57:36 183  ,cad_g09
04:57:36 184  ,cad_g10
04:57:36 185  ,cad_g11
04:57:36 186  ,cad_g12
04:57:36 187  ,cad_g13
04:57:36 188  ,cad_g14
04:57:36 189  ,cad_g15
04:57:36 190  ,cad_g16
04:57:36 191  ,cad_g17
04:57:36 192  ,cad_g18
04:57:36 193  ,cad_g19
04:57:36 194  ,cad_g20
04:57:36 195  ,cad_g21
04:57:36 196  ,cad_g22
04:57:36 197  ,cad_g23
04:57:36 198  ,cad_g24
04:57:36 199  ,cad_g25
04:57:36 200  ,cad_g26
04:57:36 201  ,cad_g27
04:57:36 202  ,cad_g28
04:57:36 203  ,cad_g29
04:57:36 204  ,cad_g30
04:57:36 205  ,cad_g31
04:57:36 206  ,cad_g32
04:57:36 207  ,cad_g33
04:57:36 208  ,cad_g34
04:57:36 209  ,cad_g35
04:57:36 210  ,cad_g36
04:57:36 211  ,cad_g37
04:57:36 212  ,cad_g38
04:57:36 213  ,cad_g39
04:57:36 214  ,cad_g40
04:57:36 215  ,cad_g41
04:57:36 216  ,chf_g00
04:57:36 217  ,chf_g01
04:57:36 218  ,chf_g02
04:57:36 219  ,chf_g03
04:57:36 220  ,chf_g04
04:57:36 221  ,chf_g05
04:57:36 222  ,chf_g06
04:57:36 223  ,chf_g07
04:57:36 224  ,chf_g08
04:57:36 225  ,chf_g09
04:57:36 226  ,chf_g10
04:57:36 227  ,chf_g11
04:57:36 228  ,chf_g12
04:57:36 229  ,chf_g13
04:57:36 230  ,chf_g14
04:57:36 231  ,chf_g15
04:57:36 232  ,chf_g16
04:57:36 233  ,chf_g17
04:57:36 234  ,chf_g18
04:57:36 235  ,chf_g19
04:57:36 236  ,chf_g20
04:57:36 237  ,chf_g21
04:57:36 238  ,chf_g22
04:57:36 239  ,chf_g23
04:57:36 240  ,chf_g24
04:57:36 241  ,chf_g25
04:57:36 242  ,chf_g26
04:57:36 243  ,chf_g27
04:57:36 244  ,chf_g28
04:57:36 245  ,chf_g29
04:57:36 246  ,chf_g30
04:57:36 247  ,chf_g31
04:57:36 248  ,chf_g32
04:57:36 249  ,chf_g33
04:57:36 250  ,chf_g34
04:57:36 251  ,chf_g35
04:57:36 252  ,chf_g36
04:57:36 253  ,chf_g37
04:57:36 254  ,chf_g38
04:57:36 255  ,chf_g39
04:57:36 256  ,chf_g40
04:57:36 257  ,chf_g41
04:57:36 258  FROM aud_ms6 m
04:57:36 259  WHERE gattn IN('nup','up')
04:57:36 260  AND 1+m.ydate < '&1'||' '||'&2'
04:57:36 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'04:35:00'

View created.

Elapsed: 00:00:00.12
04:57:36 SQL> 
04:57:36 SQL> -- rpt
04:57:36 SQL> 
04:57:36 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12891
up	     6618

Elapsed: 00:00:00.05
04:57:36 SQL> 
04:57:36 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-06 04:30:00

Elapsed: 00:00:00.04
04:57:36 SQL> 
04:57:36 SQL> -- Now build model from bme and score sme
04:57:36 SQL> @score1gattn.sql
04:57:36 SQL> -- score1gattn.sql
04:57:36 SQL> 
04:57:36 SQL> -- Does the 1st SVM score
04:57:36 SQL> 
04:57:36 SQL> -- Fill up svmc_apply_prep
04:57:36 SQL> @score_gattn.sql
04:57:36 SQL> --
04:57:36 SQL> -- score_gattn.sql
04:57:36 SQL> --
04:57:36 SQL> 
04:57:36 SQL> -- usage: score_gattn.sql
04:57:36 SQL> 
04:57:36 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
04:57:36 SQL> 
04:57:36 SQL> DEFINE target	= 'gattn'
04:57:36 SQL> DEFINE model_name = 'forex15'
04:57:36 SQL> DEFINE bldtable	= 'bme'
04:57:36 SQL> DEFINE scoretable = 'sme'
04:57:36 SQL> DEFINE case_id	= 'prdate'
04:57:36 SQL> 
04:57:36 SQL> -- Define a variable to help me exclude some columns from some data mining calls
04:57:36 SQL> DEFINE exclude1 = "'&target','&case_id'"
04:57:36 SQL> 
04:57:36 SQL> -- Builds an SVM model using pl/sql.
04:57:36 SQL> 
04:57:36 SQL> -----------------------------------------------------------------------
04:57:36 SQL> --			    BUILD THE MODEL
04:57:36 SQL> -----------------------------------------------------------------------
04:57:36 SQL> 
04:57:36 SQL> -- Cleanup old build data preparation objects for repeat runs
04:57:36 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
04:57:36 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
04:57:36 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
04:57:36 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
04:57:36 SQL> 
04:57:36 SQL> 
04:57:36 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
04:57:36 SQL> --
04:57:36 SQL> -- DROP	TABLE svmc_settings ;
04:57:36 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
04:57:36 SQL> -- DELETE svmc_settings;
04:57:36 SQL> 
04:57:36 SQL> -- The default classification algorithm is Naive Bayes. So override
04:57:36 SQL> -- this choice to SVM using a settings table.
04:57:36 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
04:57:36 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
04:57:36 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
04:57:36 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
04:57:36 SQL> -- models.
04:57:36 SQL> --
04:57:36 SQL> 
04:57:36 SQL> -- Do this once and then comment it out.
04:57:36 SQL> -- That makes script go faster.
04:57:36 SQL> -- BEGIN
04:57:36 SQL> -- -- Populate settings table
04:57:36 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:57:36 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
04:57:36 SQL> --
04:57:36 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:57:36 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
04:57:36 SQL> --
04:57:36 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:57:36 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
04:57:36 SQL> --   COMMIT;
04:57:36 SQL> -- END;
04:57:36 SQL> -- /
04:57:36 SQL> 
04:57:36 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
04:57:36 SQL> 
04:57:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
04:57:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:57:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:57:36 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
04:57:36   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:57:36   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:57:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
04:57:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:57:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:57:37 SQL> 
04:57:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
04:57:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:57:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:57:37 SQL> 
04:57:37 SQL> --------------------------------
04:57:37 SQL> -- PREPARE BUILD (TRAINING) DATA
04:57:37 SQL> --
04:57:37 SQL> 
04:57:37 SQL> -- 1. Missing Value treatment for all Predictors and
04:57:37 SQL> -- 2. Outlier Treatment and
04:57:37 SQL> -- 3. Normalization are performed below.
04:57:37 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
04:57:37 SQL> --    normalized here.
04:57:37 SQL> 
04:57:37 SQL> BEGIN
04:57:37   2  	-- Perform missing value treatment for all predictors
04:57:37   3  	-- create miss tables
04:57:37   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
04:57:37   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
04:57:37   6  
04:57:37   7  	-- populate miss tables
04:57:37   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
04:57:37   9  	  miss_table_name => 'svmc_miss_num',
04:57:37  10  	  data_table_name => '&bldtable',
04:57:37  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:57:37  12  
04:57:37  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
04:57:37  14  	  miss_table_name => 'svmc_miss_cat',
04:57:37  15  	  data_table_name => '&bldtable',
04:57:37  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:57:37  17  
04:57:37  18  	-- xform input data to replace missing values
04:57:37  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:57:37  20  	  miss_table_name => 'svmc_miss_num',
04:57:37  21  	  data_table_name => '&bldtable',
04:57:37  22  	  xform_view_name => 'xformed_build_miss_num');
04:57:37  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:57:37  24  	  miss_table_name => 'svmc_miss_cat',
04:57:37  25  	  data_table_name => '&bldtable',
04:57:37  26  	  xform_view_name => 'xformed_build_miss_cat');
04:57:37  27  
04:57:37  28  	-- Perform outlier treatment.
04:57:37  29  	-- create clip table
04:57:37  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
04:57:37  31  
04:57:37  32  	-- populate clip table
04:57:37  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
04:57:37  34  	  clip_table_name => 'svmc_clip',
04:57:37  35  	  data_table_name => '&bldtable',
04:57:37  36  	  tail_frac	  => 0.025,
04:57:37  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:57:37  38  
04:57:37  39  	-- xform input data to winsorized data
04:57:37  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
04:57:37  41  	  clip_table_name => 'svmc_clip',
04:57:37  42  	  data_table_name => '&bldtable',
04:57:37  43  	  xform_view_name => 'svmc_winsor');
04:57:37  44  
04:57:37  45  	-- create normalization table
04:57:37  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
04:57:37  47  
04:57:37  48  	-- populate normalization table based on winsorized data
04:57:37  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
04:57:37  50  	  norm_table_name => 'svmc_norm',
04:57:37  51  	  data_table_name => 'svmc_winsor',
04:57:37  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:57:37  53  
04:57:37  54  	-- normalize the original data
04:57:37  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:57:37  56  	  norm_table_name => 'svmc_norm',
04:57:37  57  	  data_table_name => '&bldtable',
04:57:37  58  	  xform_view_name => 'svmc_build_prep');
04:57:37  59  END;
04:57:37  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.81
04:57:55 SQL> 
04:57:55 SQL> ---------------------
04:57:55 SQL> -- CREATE A NEW MODEL
04:57:55 SQL> --
04:57:55 SQL> -- Cleanup old model with the same name for repeat runs
04:57:55 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
04:57:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:57:55   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.92
04:57:56 SQL> 
04:57:56 SQL> -- Build a new SVM Model
04:57:56 SQL> BEGIN
04:57:56   2  	DBMS_DATA_MINING.CREATE_MODEL(
04:57:56   3  	  model_name	      => '&model_name',
04:57:56   4  	  mining_function     => dbms_data_mining.classification,
04:57:56   5  	  data_table_name     => 'svmc_build_prep',
04:57:56   6  	  case_id_column_name => '&case_id',
04:57:56   7  	  target_column_name  => '&target',
04:57:56   8  	  settings_table_name => 'svmc_settings');
04:57:56   9  END;
04:57:56  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.97
04:58:25 SQL> 
04:58:25 SQL> -----------------------------------------------------------------------
04:58:25 SQL> --			       APPLY/score THE MODEL
04:58:25 SQL> -----------------------------------------------------------------------
04:58:25 SQL> 
04:58:25 SQL> -- Cleanup old scoring data preparation objects for repeat runs
04:58:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
04:58:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:58:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:58:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
04:58:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:58:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:58:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
04:58:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:58:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:58:26 SQL> -----------------------
04:58:26 SQL> -- PREPARE SCORING DATA
04:58:26 SQL> --
04:58:26 SQL> -- If the data for model creation has been prepared, then the data
04:58:26 SQL> -- to be scored using the model must be prepared in the same manner
04:58:26 SQL> -- in order to obtain meaningful results.
04:58:26 SQL> --
04:58:26 SQL> -- 1. Missing Value treatment for all Predictors and
04:58:26 SQL> -- 2. Normalization
04:58:26 SQL> -- No outlier treatment will be performed during test and apply. The
04:58:26 SQL> -- normalization step is sufficient, since the normalization parameters
04:58:26 SQL> -- already capture the effects of outlier treatment done with build data.
04:58:26 SQL> --
04:58:26 SQL> BEGIN
04:58:26   2  	-- Xform Test data to replace missing values
04:58:26   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:58:26   4  	  miss_table_name => 'svmc_miss_num',
04:58:26   5  	  data_table_name => '&scoretable',
04:58:26   6  	  xform_view_name => 'xformed_apply_miss_num');
04:58:26   7  
04:58:26   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:58:26   9  	  miss_table_name => 'svmc_miss_cat',
04:58:26  10  	  data_table_name => '&scoretable',
04:58:26  11  	  xform_view_name => 'xformed_apply_miss_cat');
04:58:26  12  
04:58:26  13  	-- Normalize the data to be scored
04:58:26  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:58:26  15  	  norm_table_name => 'svmc_norm',
04:58:26  16  	  data_table_name => '&scoretable',
04:58:26  17  	  xform_view_name => 'svmc_apply_prep');
04:58:26  18  END;
04:58:26  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
04:58:27 SQL> 
04:58:27 SQL> -- Use same model_name used in score_gattn.sql
04:58:27 SQL> DEFINE model_name = 'forex15'
04:58:27 SQL> 
04:58:27 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
04:58:27 SQL> 
04:58:27 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
04:58:27   2  SELECT
04:58:27   3  prdate
04:58:27   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
04:58:27   5  ,sysdate
04:58:27   6  ,SUBSTR(prdate,1,3)pair
04:58:27   7  ,SUBSTR(prdate,4,19)ydate
04:58:27   8  FROM svmc_apply_prep
04:58:27   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.20
04:58:27 SQL> @aud_score1day_gattn.sql	2011-01-07 04:40:00
04:58:27 SQL> --
04:58:27 SQL> -- aud_score1day_gattn.sql
04:58:27 SQL> --
04:58:27 SQL> 
04:58:27 SQL> CREATE OR REPLACE VIEW sme AS
04:58:27   2  SELECT
04:58:27   3  'aud'||m.ydate prdate
04:58:27   4  ,NULL gattn
04:58:27   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:58:27   6  ,eur_g00
04:58:27   7  ,eur_g01
04:58:27   8  ,eur_g02
04:58:27   9  ,eur_g03
04:58:27  10  ,eur_g04
04:58:27  11  ,eur_g05
04:58:27  12  ,eur_g06
04:58:27  13  ,eur_g07
04:58:27  14  ,eur_g08
04:58:27  15  ,eur_g09
04:58:27  16  ,eur_g10
04:58:27  17  ,eur_g11
04:58:27  18  ,eur_g12
04:58:27  19  ,eur_g13
04:58:27  20  ,eur_g14
04:58:27  21  ,eur_g15
04:58:27  22  ,eur_g16
04:58:27  23  ,eur_g17
04:58:27  24  ,eur_g18
04:58:27  25  ,eur_g19
04:58:27  26  ,eur_g20
04:58:27  27  ,eur_g21
04:58:27  28  ,eur_g22
04:58:27  29  ,eur_g23
04:58:27  30  ,eur_g24
04:58:27  31  ,eur_g25
04:58:27  32  ,eur_g26
04:58:27  33  ,eur_g27
04:58:27  34  ,eur_g28
04:58:27  35  ,eur_g29
04:58:27  36  ,eur_g30
04:58:27  37  ,eur_g31
04:58:27  38  ,eur_g32
04:58:27  39  ,eur_g33
04:58:27  40  ,eur_g34
04:58:27  41  ,eur_g35
04:58:27  42  ,eur_g36
04:58:27  43  ,eur_g37
04:58:27  44  ,eur_g38
04:58:27  45  ,eur_g39
04:58:27  46  ,eur_g40
04:58:27  47  ,eur_g41
04:58:27  48  ,aud_g00
04:58:27  49  ,aud_g01
04:58:27  50  ,aud_g02
04:58:27  51  ,aud_g03
04:58:27  52  ,aud_g04
04:58:27  53  ,aud_g05
04:58:27  54  ,aud_g06
04:58:27  55  ,aud_g07
04:58:27  56  ,aud_g08
04:58:27  57  ,aud_g09
04:58:27  58  ,aud_g10
04:58:27  59  ,aud_g11
04:58:27  60  ,aud_g12
04:58:27  61  ,aud_g13
04:58:27  62  ,aud_g14
04:58:27  63  ,aud_g15
04:58:27  64  ,aud_g16
04:58:27  65  ,aud_g17
04:58:27  66  ,aud_g18
04:58:27  67  ,aud_g19
04:58:27  68  ,aud_g20
04:58:27  69  ,aud_g21
04:58:27  70  ,aud_g22
04:58:27  71  ,aud_g23
04:58:27  72  ,aud_g24
04:58:27  73  ,aud_g25
04:58:27  74  ,aud_g26
04:58:27  75  ,aud_g27
04:58:27  76  ,aud_g28
04:58:27  77  ,aud_g29
04:58:27  78  ,aud_g30
04:58:27  79  ,aud_g31
04:58:27  80  ,aud_g32
04:58:27  81  ,aud_g33
04:58:27  82  ,aud_g34
04:58:27  83  ,aud_g35
04:58:27  84  ,aud_g36
04:58:27  85  ,aud_g37
04:58:27  86  ,aud_g38
04:58:27  87  ,aud_g39
04:58:27  88  ,aud_g40
04:58:27  89  ,aud_g41
04:58:27  90  ,gbp_g00
04:58:27  91  ,gbp_g01
04:58:27  92  ,gbp_g02
04:58:27  93  ,gbp_g03
04:58:27  94  ,gbp_g04
04:58:27  95  ,gbp_g05
04:58:27  96  ,gbp_g06
04:58:27  97  ,gbp_g07
04:58:27  98  ,gbp_g08
04:58:27  99  ,gbp_g09
04:58:27 100  ,gbp_g10
04:58:27 101  ,gbp_g11
04:58:27 102  ,gbp_g12
04:58:27 103  ,gbp_g13
04:58:27 104  ,gbp_g14
04:58:27 105  ,gbp_g15
04:58:27 106  ,gbp_g16
04:58:27 107  ,gbp_g17
04:58:27 108  ,gbp_g18
04:58:27 109  ,gbp_g19
04:58:27 110  ,gbp_g20
04:58:27 111  ,gbp_g21
04:58:27 112  ,gbp_g22
04:58:27 113  ,gbp_g23
04:58:27 114  ,gbp_g24
04:58:27 115  ,gbp_g25
04:58:27 116  ,gbp_g26
04:58:27 117  ,gbp_g27
04:58:27 118  ,gbp_g28
04:58:27 119  ,gbp_g29
04:58:27 120  ,gbp_g30
04:58:27 121  ,gbp_g31
04:58:27 122  ,gbp_g32
04:58:27 123  ,gbp_g33
04:58:27 124  ,gbp_g34
04:58:27 125  ,gbp_g35
04:58:27 126  ,gbp_g36
04:58:27 127  ,gbp_g37
04:58:27 128  ,gbp_g38
04:58:27 129  ,gbp_g39
04:58:27 130  ,gbp_g40
04:58:27 131  ,gbp_g41
04:58:27 132  ,jpy_g00
04:58:27 133  ,jpy_g01
04:58:27 134  ,jpy_g02
04:58:27 135  ,jpy_g03
04:58:27 136  ,jpy_g04
04:58:27 137  ,jpy_g05
04:58:27 138  ,jpy_g06
04:58:27 139  ,jpy_g07
04:58:27 140  ,jpy_g08
04:58:27 141  ,jpy_g09
04:58:27 142  ,jpy_g10
04:58:27 143  ,jpy_g11
04:58:27 144  ,jpy_g12
04:58:27 145  ,jpy_g13
04:58:27 146  ,jpy_g14
04:58:27 147  ,jpy_g15
04:58:27 148  ,jpy_g16
04:58:27 149  ,jpy_g17
04:58:27 150  ,jpy_g18
04:58:27 151  ,jpy_g19
04:58:27 152  ,jpy_g20
04:58:27 153  ,jpy_g21
04:58:27 154  ,jpy_g22
04:58:27 155  ,jpy_g23
04:58:27 156  ,jpy_g24
04:58:27 157  ,jpy_g25
04:58:27 158  ,jpy_g26
04:58:27 159  ,jpy_g27
04:58:27 160  ,jpy_g28
04:58:27 161  ,jpy_g29
04:58:27 162  ,jpy_g30
04:58:27 163  ,jpy_g31
04:58:27 164  ,jpy_g32
04:58:27 165  ,jpy_g33
04:58:27 166  ,jpy_g34
04:58:27 167  ,jpy_g35
04:58:27 168  ,jpy_g36
04:58:27 169  ,jpy_g37
04:58:27 170  ,jpy_g38
04:58:27 171  ,jpy_g39
04:58:27 172  ,jpy_g40
04:58:27 173  ,jpy_g41
04:58:27 174  ,cad_g00
04:58:27 175  ,cad_g01
04:58:27 176  ,cad_g02
04:58:27 177  ,cad_g03
04:58:27 178  ,cad_g04
04:58:27 179  ,cad_g05
04:58:27 180  ,cad_g06
04:58:27 181  ,cad_g07
04:58:27 182  ,cad_g08
04:58:27 183  ,cad_g09
04:58:27 184  ,cad_g10
04:58:27 185  ,cad_g11
04:58:27 186  ,cad_g12
04:58:27 187  ,cad_g13
04:58:27 188  ,cad_g14
04:58:27 189  ,cad_g15
04:58:27 190  ,cad_g16
04:58:27 191  ,cad_g17
04:58:27 192  ,cad_g18
04:58:27 193  ,cad_g19
04:58:27 194  ,cad_g20
04:58:27 195  ,cad_g21
04:58:27 196  ,cad_g22
04:58:27 197  ,cad_g23
04:58:27 198  ,cad_g24
04:58:27 199  ,cad_g25
04:58:27 200  ,cad_g26
04:58:27 201  ,cad_g27
04:58:27 202  ,cad_g28
04:58:27 203  ,cad_g29
04:58:27 204  ,cad_g30
04:58:27 205  ,cad_g31
04:58:27 206  ,cad_g32
04:58:27 207  ,cad_g33
04:58:27 208  ,cad_g34
04:58:27 209  ,cad_g35
04:58:27 210  ,cad_g36
04:58:27 211  ,cad_g37
04:58:27 212  ,cad_g38
04:58:27 213  ,cad_g39
04:58:27 214  ,cad_g40
04:58:27 215  ,cad_g41
04:58:27 216  ,chf_g00
04:58:27 217  ,chf_g01
04:58:27 218  ,chf_g02
04:58:27 219  ,chf_g03
04:58:27 220  ,chf_g04
04:58:27 221  ,chf_g05
04:58:27 222  ,chf_g06
04:58:27 223  ,chf_g07
04:58:27 224  ,chf_g08
04:58:27 225  ,chf_g09
04:58:27 226  ,chf_g10
04:58:27 227  ,chf_g11
04:58:27 228  ,chf_g12
04:58:27 229  ,chf_g13
04:58:27 230  ,chf_g14
04:58:27 231  ,chf_g15
04:58:27 232  ,chf_g16
04:58:27 233  ,chf_g17
04:58:27 234  ,chf_g18
04:58:27 235  ,chf_g19
04:58:27 236  ,chf_g20
04:58:27 237  ,chf_g21
04:58:27 238  ,chf_g22
04:58:27 239  ,chf_g23
04:58:27 240  ,chf_g24
04:58:27 241  ,chf_g25
04:58:27 242  ,chf_g26
04:58:27 243  ,chf_g27
04:58:27 244  ,chf_g28
04:58:27 245  ,chf_g29
04:58:27 246  ,chf_g30
04:58:27 247  ,chf_g31
04:58:27 248  ,chf_g32
04:58:27 249  ,chf_g33
04:58:27 250  ,chf_g34
04:58:27 251  ,chf_g35
04:58:27 252  ,chf_g36
04:58:27 253  ,chf_g37
04:58:27 254  ,chf_g38
04:58:27 255  ,chf_g39
04:58:27 256  ,chf_g40
04:58:27 257  ,chf_g41
04:58:27 258  FROM aud_ms6 m
04:58:27 259  WHERE m.ydate = '&1'||' '||'&2'
04:58:27 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'04:40:00'

View created.

Elapsed: 00:00:00.13
04:58:27 SQL> 
04:58:27 SQL> -- rpt
04:58:27 SQL> -- We should see just 1 row:
04:58:27 SQL> 
04:58:27 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
04:58:27 SQL> 
04:58:27 SQL> -- Build the model:
04:58:27 SQL> CREATE OR REPLACE VIEW bme AS
04:58:27   2  SELECT
04:58:27   3  'aud'||m.ydate prdate
04:58:27   4  ,gattn
04:58:27   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:58:27   6  ,eur_g00
04:58:27   7  ,eur_g01
04:58:27   8  ,eur_g02
04:58:27   9  ,eur_g03
04:58:27  10  ,eur_g04
04:58:27  11  ,eur_g05
04:58:27  12  ,eur_g06
04:58:27  13  ,eur_g07
04:58:27  14  ,eur_g08
04:58:27  15  ,eur_g09
04:58:27  16  ,eur_g10
04:58:27  17  ,eur_g11
04:58:27  18  ,eur_g12
04:58:27  19  ,eur_g13
04:58:27  20  ,eur_g14
04:58:27  21  ,eur_g15
04:58:27  22  ,eur_g16
04:58:27  23  ,eur_g17
04:58:27  24  ,eur_g18
04:58:27  25  ,eur_g19
04:58:27  26  ,eur_g20
04:58:27  27  ,eur_g21
04:58:27  28  ,eur_g22
04:58:27  29  ,eur_g23
04:58:27  30  ,eur_g24
04:58:27  31  ,eur_g25
04:58:27  32  ,eur_g26
04:58:27  33  ,eur_g27
04:58:27  34  ,eur_g28
04:58:27  35  ,eur_g29
04:58:27  36  ,eur_g30
04:58:27  37  ,eur_g31
04:58:27  38  ,eur_g32
04:58:27  39  ,eur_g33
04:58:27  40  ,eur_g34
04:58:27  41  ,eur_g35
04:58:27  42  ,eur_g36
04:58:27  43  ,eur_g37
04:58:27  44  ,eur_g38
04:58:27  45  ,eur_g39
04:58:27  46  ,eur_g40
04:58:27  47  ,eur_g41
04:58:27  48  ,aud_g00
04:58:27  49  ,aud_g01
04:58:27  50  ,aud_g02
04:58:27  51  ,aud_g03
04:58:27  52  ,aud_g04
04:58:27  53  ,aud_g05
04:58:27  54  ,aud_g06
04:58:27  55  ,aud_g07
04:58:27  56  ,aud_g08
04:58:27  57  ,aud_g09
04:58:27  58  ,aud_g10
04:58:27  59  ,aud_g11
04:58:27  60  ,aud_g12
04:58:27  61  ,aud_g13
04:58:27  62  ,aud_g14
04:58:27  63  ,aud_g15
04:58:27  64  ,aud_g16
04:58:27  65  ,aud_g17
04:58:27  66  ,aud_g18
04:58:27  67  ,aud_g19
04:58:27  68  ,aud_g20
04:58:27  69  ,aud_g21
04:58:27  70  ,aud_g22
04:58:27  71  ,aud_g23
04:58:27  72  ,aud_g24
04:58:27  73  ,aud_g25
04:58:27  74  ,aud_g26
04:58:27  75  ,aud_g27
04:58:27  76  ,aud_g28
04:58:27  77  ,aud_g29
04:58:27  78  ,aud_g30
04:58:27  79  ,aud_g31
04:58:27  80  ,aud_g32
04:58:27  81  ,aud_g33
04:58:27  82  ,aud_g34
04:58:27  83  ,aud_g35
04:58:27  84  ,aud_g36
04:58:27  85  ,aud_g37
04:58:27  86  ,aud_g38
04:58:27  87  ,aud_g39
04:58:27  88  ,aud_g40
04:58:27  89  ,aud_g41
04:58:27  90  ,gbp_g00
04:58:27  91  ,gbp_g01
04:58:27  92  ,gbp_g02
04:58:27  93  ,gbp_g03
04:58:27  94  ,gbp_g04
04:58:27  95  ,gbp_g05
04:58:27  96  ,gbp_g06
04:58:27  97  ,gbp_g07
04:58:27  98  ,gbp_g08
04:58:27  99  ,gbp_g09
04:58:27 100  ,gbp_g10
04:58:27 101  ,gbp_g11
04:58:27 102  ,gbp_g12
04:58:27 103  ,gbp_g13
04:58:27 104  ,gbp_g14
04:58:27 105  ,gbp_g15
04:58:27 106  ,gbp_g16
04:58:27 107  ,gbp_g17
04:58:27 108  ,gbp_g18
04:58:27 109  ,gbp_g19
04:58:27 110  ,gbp_g20
04:58:27 111  ,gbp_g21
04:58:27 112  ,gbp_g22
04:58:27 113  ,gbp_g23
04:58:27 114  ,gbp_g24
04:58:27 115  ,gbp_g25
04:58:27 116  ,gbp_g26
04:58:27 117  ,gbp_g27
04:58:27 118  ,gbp_g28
04:58:27 119  ,gbp_g29
04:58:27 120  ,gbp_g30
04:58:27 121  ,gbp_g31
04:58:27 122  ,gbp_g32
04:58:27 123  ,gbp_g33
04:58:27 124  ,gbp_g34
04:58:27 125  ,gbp_g35
04:58:27 126  ,gbp_g36
04:58:27 127  ,gbp_g37
04:58:27 128  ,gbp_g38
04:58:27 129  ,gbp_g39
04:58:27 130  ,gbp_g40
04:58:27 131  ,gbp_g41
04:58:27 132  ,jpy_g00
04:58:27 133  ,jpy_g01
04:58:27 134  ,jpy_g02
04:58:27 135  ,jpy_g03
04:58:27 136  ,jpy_g04
04:58:27 137  ,jpy_g05
04:58:27 138  ,jpy_g06
04:58:27 139  ,jpy_g07
04:58:27 140  ,jpy_g08
04:58:27 141  ,jpy_g09
04:58:27 142  ,jpy_g10
04:58:27 143  ,jpy_g11
04:58:27 144  ,jpy_g12
04:58:27 145  ,jpy_g13
04:58:27 146  ,jpy_g14
04:58:27 147  ,jpy_g15
04:58:27 148  ,jpy_g16
04:58:27 149  ,jpy_g17
04:58:27 150  ,jpy_g18
04:58:27 151  ,jpy_g19
04:58:27 152  ,jpy_g20
04:58:27 153  ,jpy_g21
04:58:27 154  ,jpy_g22
04:58:27 155  ,jpy_g23
04:58:27 156  ,jpy_g24
04:58:27 157  ,jpy_g25
04:58:27 158  ,jpy_g26
04:58:27 159  ,jpy_g27
04:58:27 160  ,jpy_g28
04:58:27 161  ,jpy_g29
04:58:27 162  ,jpy_g30
04:58:27 163  ,jpy_g31
04:58:27 164  ,jpy_g32
04:58:27 165  ,jpy_g33
04:58:27 166  ,jpy_g34
04:58:27 167  ,jpy_g35
04:58:27 168  ,jpy_g36
04:58:27 169  ,jpy_g37
04:58:27 170  ,jpy_g38
04:58:27 171  ,jpy_g39
04:58:27 172  ,jpy_g40
04:58:27 173  ,jpy_g41
04:58:27 174  ,cad_g00
04:58:27 175  ,cad_g01
04:58:27 176  ,cad_g02
04:58:27 177  ,cad_g03
04:58:27 178  ,cad_g04
04:58:27 179  ,cad_g05
04:58:27 180  ,cad_g06
04:58:27 181  ,cad_g07
04:58:27 182  ,cad_g08
04:58:27 183  ,cad_g09
04:58:27 184  ,cad_g10
04:58:27 185  ,cad_g11
04:58:27 186  ,cad_g12
04:58:27 187  ,cad_g13
04:58:27 188  ,cad_g14
04:58:27 189  ,cad_g15
04:58:27 190  ,cad_g16
04:58:27 191  ,cad_g17
04:58:27 192  ,cad_g18
04:58:27 193  ,cad_g19
04:58:27 194  ,cad_g20
04:58:27 195  ,cad_g21
04:58:27 196  ,cad_g22
04:58:27 197  ,cad_g23
04:58:27 198  ,cad_g24
04:58:27 199  ,cad_g25
04:58:27 200  ,cad_g26
04:58:27 201  ,cad_g27
04:58:27 202  ,cad_g28
04:58:27 203  ,cad_g29
04:58:27 204  ,cad_g30
04:58:27 205  ,cad_g31
04:58:27 206  ,cad_g32
04:58:27 207  ,cad_g33
04:58:27 208  ,cad_g34
04:58:27 209  ,cad_g35
04:58:27 210  ,cad_g36
04:58:27 211  ,cad_g37
04:58:27 212  ,cad_g38
04:58:27 213  ,cad_g39
04:58:27 214  ,cad_g40
04:58:27 215  ,cad_g41
04:58:27 216  ,chf_g00
04:58:27 217  ,chf_g01
04:58:27 218  ,chf_g02
04:58:27 219  ,chf_g03
04:58:27 220  ,chf_g04
04:58:27 221  ,chf_g05
04:58:27 222  ,chf_g06
04:58:27 223  ,chf_g07
04:58:27 224  ,chf_g08
04:58:27 225  ,chf_g09
04:58:27 226  ,chf_g10
04:58:27 227  ,chf_g11
04:58:27 228  ,chf_g12
04:58:27 229  ,chf_g13
04:58:27 230  ,chf_g14
04:58:27 231  ,chf_g15
04:58:27 232  ,chf_g16
04:58:27 233  ,chf_g17
04:58:27 234  ,chf_g18
04:58:27 235  ,chf_g19
04:58:27 236  ,chf_g20
04:58:27 237  ,chf_g21
04:58:27 238  ,chf_g22
04:58:27 239  ,chf_g23
04:58:27 240  ,chf_g24
04:58:27 241  ,chf_g25
04:58:27 242  ,chf_g26
04:58:27 243  ,chf_g27
04:58:27 244  ,chf_g28
04:58:27 245  ,chf_g29
04:58:27 246  ,chf_g30
04:58:27 247  ,chf_g31
04:58:27 248  ,chf_g32
04:58:27 249  ,chf_g33
04:58:27 250  ,chf_g34
04:58:27 251  ,chf_g35
04:58:27 252  ,chf_g36
04:58:27 253  ,chf_g37
04:58:27 254  ,chf_g38
04:58:27 255  ,chf_g39
04:58:27 256  ,chf_g40
04:58:27 257  ,chf_g41
04:58:27 258  FROM aud_ms6 m
04:58:27 259  WHERE gattn IN('nup','up')
04:58:27 260  AND 1+m.ydate < '&1'||' '||'&2'
04:58:27 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'04:40:00'

View created.

Elapsed: 00:00:00.13
04:58:27 SQL> 
04:58:27 SQL> -- rpt
04:58:27 SQL> 
04:58:27 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12892
up	     6618

Elapsed: 00:00:00.04
04:58:27 SQL> 
04:58:27 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-06 04:35:00

Elapsed: 00:00:00.03
04:58:27 SQL> 
04:58:27 SQL> -- Now build model from bme and score sme
04:58:27 SQL> @score1gattn.sql
04:58:27 SQL> -- score1gattn.sql
04:58:27 SQL> 
04:58:27 SQL> -- Does the 1st SVM score
04:58:27 SQL> 
04:58:27 SQL> -- Fill up svmc_apply_prep
04:58:27 SQL> @score_gattn.sql
04:58:27 SQL> --
04:58:27 SQL> -- score_gattn.sql
04:58:27 SQL> --
04:58:27 SQL> 
04:58:27 SQL> -- usage: score_gattn.sql
04:58:27 SQL> 
04:58:27 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
04:58:27 SQL> 
04:58:27 SQL> DEFINE target	= 'gattn'
04:58:27 SQL> DEFINE model_name = 'forex15'
04:58:27 SQL> DEFINE bldtable	= 'bme'
04:58:27 SQL> DEFINE scoretable = 'sme'
04:58:27 SQL> DEFINE case_id	= 'prdate'
04:58:27 SQL> 
04:58:27 SQL> -- Define a variable to help me exclude some columns from some data mining calls
04:58:27 SQL> DEFINE exclude1 = "'&target','&case_id'"
04:58:27 SQL> 
04:58:27 SQL> -- Builds an SVM model using pl/sql.
04:58:27 SQL> 
04:58:27 SQL> -----------------------------------------------------------------------
04:58:27 SQL> --			    BUILD THE MODEL
04:58:27 SQL> -----------------------------------------------------------------------
04:58:27 SQL> 
04:58:27 SQL> -- Cleanup old build data preparation objects for repeat runs
04:58:27 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
04:58:27 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
04:58:27 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
04:58:27 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
04:58:27 SQL> 
04:58:27 SQL> 
04:58:27 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
04:58:27 SQL> --
04:58:27 SQL> -- DROP	TABLE svmc_settings ;
04:58:27 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
04:58:27 SQL> -- DELETE svmc_settings;
04:58:27 SQL> 
04:58:27 SQL> -- The default classification algorithm is Naive Bayes. So override
04:58:27 SQL> -- this choice to SVM using a settings table.
04:58:27 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
04:58:27 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
04:58:27 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
04:58:27 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
04:58:27 SQL> -- models.
04:58:27 SQL> --
04:58:27 SQL> 
04:58:27 SQL> -- Do this once and then comment it out.
04:58:27 SQL> -- That makes script go faster.
04:58:27 SQL> -- BEGIN
04:58:27 SQL> -- -- Populate settings table
04:58:27 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:58:27 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
04:58:27 SQL> --
04:58:27 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:58:27 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
04:58:27 SQL> --
04:58:27 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:58:27 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
04:58:27 SQL> --   COMMIT;
04:58:27 SQL> -- END;
04:58:27 SQL> -- /
04:58:27 SQL> 
04:58:27 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
04:58:27 SQL> 
04:58:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
04:58:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:58:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:58:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
04:58:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:58:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:58:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
04:58:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:58:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:58:28 SQL> 
04:58:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
04:58:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:58:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:58:28 SQL> 
04:58:28 SQL> --------------------------------
04:58:28 SQL> -- PREPARE BUILD (TRAINING) DATA
04:58:28 SQL> --
04:58:28 SQL> 
04:58:28 SQL> -- 1. Missing Value treatment for all Predictors and
04:58:28 SQL> -- 2. Outlier Treatment and
04:58:28 SQL> -- 3. Normalization are performed below.
04:58:28 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
04:58:28 SQL> --    normalized here.
04:58:28 SQL> 
04:58:28 SQL> BEGIN
04:58:28   2  	-- Perform missing value treatment for all predictors
04:58:28   3  	-- create miss tables
04:58:28   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
04:58:28   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
04:58:28   6  
04:58:28   7  	-- populate miss tables
04:58:28   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
04:58:28   9  	  miss_table_name => 'svmc_miss_num',
04:58:28  10  	  data_table_name => '&bldtable',
04:58:28  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:58:28  12  
04:58:28  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
04:58:28  14  	  miss_table_name => 'svmc_miss_cat',
04:58:28  15  	  data_table_name => '&bldtable',
04:58:28  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:58:28  17  
04:58:28  18  	-- xform input data to replace missing values
04:58:28  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:58:28  20  	  miss_table_name => 'svmc_miss_num',
04:58:28  21  	  data_table_name => '&bldtable',
04:58:28  22  	  xform_view_name => 'xformed_build_miss_num');
04:58:28  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:58:28  24  	  miss_table_name => 'svmc_miss_cat',
04:58:28  25  	  data_table_name => '&bldtable',
04:58:28  26  	  xform_view_name => 'xformed_build_miss_cat');
04:58:28  27  
04:58:28  28  	-- Perform outlier treatment.
04:58:28  29  	-- create clip table
04:58:28  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
04:58:28  31  
04:58:28  32  	-- populate clip table
04:58:28  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
04:58:28  34  	  clip_table_name => 'svmc_clip',
04:58:28  35  	  data_table_name => '&bldtable',
04:58:28  36  	  tail_frac	  => 0.025,
04:58:28  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:58:28  38  
04:58:28  39  	-- xform input data to winsorized data
04:58:28  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
04:58:28  41  	  clip_table_name => 'svmc_clip',
04:58:28  42  	  data_table_name => '&bldtable',
04:58:28  43  	  xform_view_name => 'svmc_winsor');
04:58:28  44  
04:58:28  45  	-- create normalization table
04:58:28  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
04:58:28  47  
04:58:28  48  	-- populate normalization table based on winsorized data
04:58:28  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
04:58:28  50  	  norm_table_name => 'svmc_norm',
04:58:28  51  	  data_table_name => 'svmc_winsor',
04:58:28  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:58:28  53  
04:58:28  54  	-- normalize the original data
04:58:28  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:58:28  56  	  norm_table_name => 'svmc_norm',
04:58:28  57  	  data_table_name => '&bldtable',
04:58:28  58  	  xform_view_name => 'svmc_build_prep');
04:58:28  59  END;
04:58:28  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.67
04:58:46 SQL> 
04:58:46 SQL> ---------------------
04:58:46 SQL> -- CREATE A NEW MODEL
04:58:46 SQL> --
04:58:46 SQL> -- Cleanup old model with the same name for repeat runs
04:58:46 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
04:58:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:58:46   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.07
04:58:47 SQL> 
04:58:47 SQL> -- Build a new SVM Model
04:58:47 SQL> BEGIN
04:58:47   2  	DBMS_DATA_MINING.CREATE_MODEL(
04:58:47   3  	  model_name	      => '&model_name',
04:58:47   4  	  mining_function     => dbms_data_mining.classification,
04:58:47   5  	  data_table_name     => 'svmc_build_prep',
04:58:47   6  	  case_id_column_name => '&case_id',
04:58:47   7  	  target_column_name  => '&target',
04:58:47   8  	  settings_table_name => 'svmc_settings');
04:58:47   9  END;
04:58:47  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.71
04:59:16 SQL> 
04:59:16 SQL> -----------------------------------------------------------------------
04:59:16 SQL> --			       APPLY/score THE MODEL
04:59:16 SQL> -----------------------------------------------------------------------
04:59:16 SQL> 
04:59:16 SQL> -- Cleanup old scoring data preparation objects for repeat runs
04:59:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
04:59:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:59:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
04:59:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
04:59:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:59:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
04:59:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
04:59:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:59:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:59:16 SQL> -----------------------
04:59:16 SQL> -- PREPARE SCORING DATA
04:59:16 SQL> --
04:59:16 SQL> -- If the data for model creation has been prepared, then the data
04:59:16 SQL> -- to be scored using the model must be prepared in the same manner
04:59:16 SQL> -- in order to obtain meaningful results.
04:59:16 SQL> --
04:59:16 SQL> -- 1. Missing Value treatment for all Predictors and
04:59:16 SQL> -- 2. Normalization
04:59:16 SQL> -- No outlier treatment will be performed during test and apply. The
04:59:16 SQL> -- normalization step is sufficient, since the normalization parameters
04:59:16 SQL> -- already capture the effects of outlier treatment done with build data.
04:59:16 SQL> --
04:59:16 SQL> BEGIN
04:59:16   2  	-- Xform Test data to replace missing values
04:59:16   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:59:16   4  	  miss_table_name => 'svmc_miss_num',
04:59:16   5  	  data_table_name => '&scoretable',
04:59:16   6  	  xform_view_name => 'xformed_apply_miss_num');
04:59:16   7  
04:59:16   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:59:16   9  	  miss_table_name => 'svmc_miss_cat',
04:59:16  10  	  data_table_name => '&scoretable',
04:59:16  11  	  xform_view_name => 'xformed_apply_miss_cat');
04:59:16  12  
04:59:16  13  	-- Normalize the data to be scored
04:59:16  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:59:16  15  	  norm_table_name => 'svmc_norm',
04:59:16  16  	  data_table_name => '&scoretable',
04:59:16  17  	  xform_view_name => 'svmc_apply_prep');
04:59:16  18  END;
04:59:16  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
04:59:17 SQL> 
04:59:17 SQL> -- Use same model_name used in score_gattn.sql
04:59:17 SQL> DEFINE model_name = 'forex15'
04:59:17 SQL> 
04:59:17 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
04:59:17 SQL> 
04:59:17 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
04:59:17   2  SELECT
04:59:17   3  prdate
04:59:17   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
04:59:17   5  ,sysdate
04:59:17   6  ,SUBSTR(prdate,1,3)pair
04:59:17   7  ,SUBSTR(prdate,4,19)ydate
04:59:17   8  FROM svmc_apply_prep
04:59:17   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.19
04:59:18 SQL> @aud_score1day_gattn.sql	2011-01-07 04:45:00
04:59:18 SQL> --
04:59:18 SQL> -- aud_score1day_gattn.sql
04:59:18 SQL> --
04:59:18 SQL> 
04:59:18 SQL> CREATE OR REPLACE VIEW sme AS
04:59:18   2  SELECT
04:59:18   3  'aud'||m.ydate prdate
04:59:18   4  ,NULL gattn
04:59:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:59:18   6  ,eur_g00
04:59:18   7  ,eur_g01
04:59:18   8  ,eur_g02
04:59:18   9  ,eur_g03
04:59:18  10  ,eur_g04
04:59:18  11  ,eur_g05
04:59:18  12  ,eur_g06
04:59:18  13  ,eur_g07
04:59:18  14  ,eur_g08
04:59:18  15  ,eur_g09
04:59:18  16  ,eur_g10
04:59:18  17  ,eur_g11
04:59:18  18  ,eur_g12
04:59:18  19  ,eur_g13
04:59:18  20  ,eur_g14
04:59:18  21  ,eur_g15
04:59:18  22  ,eur_g16
04:59:18  23  ,eur_g17
04:59:18  24  ,eur_g18
04:59:18  25  ,eur_g19
04:59:18  26  ,eur_g20
04:59:18  27  ,eur_g21
04:59:18  28  ,eur_g22
04:59:18  29  ,eur_g23
04:59:18  30  ,eur_g24
04:59:18  31  ,eur_g25
04:59:18  32  ,eur_g26
04:59:18  33  ,eur_g27
04:59:18  34  ,eur_g28
04:59:18  35  ,eur_g29
04:59:18  36  ,eur_g30
04:59:18  37  ,eur_g31
04:59:18  38  ,eur_g32
04:59:18  39  ,eur_g33
04:59:18  40  ,eur_g34
04:59:18  41  ,eur_g35
04:59:18  42  ,eur_g36
04:59:18  43  ,eur_g37
04:59:18  44  ,eur_g38
04:59:18  45  ,eur_g39
04:59:18  46  ,eur_g40
04:59:18  47  ,eur_g41
04:59:18  48  ,aud_g00
04:59:18  49  ,aud_g01
04:59:18  50  ,aud_g02
04:59:18  51  ,aud_g03
04:59:18  52  ,aud_g04
04:59:18  53  ,aud_g05
04:59:18  54  ,aud_g06
04:59:18  55  ,aud_g07
04:59:18  56  ,aud_g08
04:59:18  57  ,aud_g09
04:59:18  58  ,aud_g10
04:59:18  59  ,aud_g11
04:59:18  60  ,aud_g12
04:59:18  61  ,aud_g13
04:59:18  62  ,aud_g14
04:59:18  63  ,aud_g15
04:59:18  64  ,aud_g16
04:59:18  65  ,aud_g17
04:59:18  66  ,aud_g18
04:59:18  67  ,aud_g19
04:59:18  68  ,aud_g20
04:59:18  69  ,aud_g21
04:59:18  70  ,aud_g22
04:59:18  71  ,aud_g23
04:59:18  72  ,aud_g24
04:59:18  73  ,aud_g25
04:59:18  74  ,aud_g26
04:59:18  75  ,aud_g27
04:59:18  76  ,aud_g28
04:59:18  77  ,aud_g29
04:59:18  78  ,aud_g30
04:59:18  79  ,aud_g31
04:59:18  80  ,aud_g32
04:59:18  81  ,aud_g33
04:59:18  82  ,aud_g34
04:59:18  83  ,aud_g35
04:59:18  84  ,aud_g36
04:59:18  85  ,aud_g37
04:59:18  86  ,aud_g38
04:59:18  87  ,aud_g39
04:59:18  88  ,aud_g40
04:59:18  89  ,aud_g41
04:59:18  90  ,gbp_g00
04:59:18  91  ,gbp_g01
04:59:18  92  ,gbp_g02
04:59:18  93  ,gbp_g03
04:59:18  94  ,gbp_g04
04:59:18  95  ,gbp_g05
04:59:18  96  ,gbp_g06
04:59:18  97  ,gbp_g07
04:59:18  98  ,gbp_g08
04:59:18  99  ,gbp_g09
04:59:18 100  ,gbp_g10
04:59:18 101  ,gbp_g11
04:59:18 102  ,gbp_g12
04:59:18 103  ,gbp_g13
04:59:18 104  ,gbp_g14
04:59:18 105  ,gbp_g15
04:59:18 106  ,gbp_g16
04:59:18 107  ,gbp_g17
04:59:18 108  ,gbp_g18
04:59:18 109  ,gbp_g19
04:59:18 110  ,gbp_g20
04:59:18 111  ,gbp_g21
04:59:18 112  ,gbp_g22
04:59:18 113  ,gbp_g23
04:59:18 114  ,gbp_g24
04:59:18 115  ,gbp_g25
04:59:18 116  ,gbp_g26
04:59:18 117  ,gbp_g27
04:59:18 118  ,gbp_g28
04:59:18 119  ,gbp_g29
04:59:18 120  ,gbp_g30
04:59:18 121  ,gbp_g31
04:59:18 122  ,gbp_g32
04:59:18 123  ,gbp_g33
04:59:18 124  ,gbp_g34
04:59:18 125  ,gbp_g35
04:59:18 126  ,gbp_g36
04:59:18 127  ,gbp_g37
04:59:18 128  ,gbp_g38
04:59:18 129  ,gbp_g39
04:59:18 130  ,gbp_g40
04:59:18 131  ,gbp_g41
04:59:18 132  ,jpy_g00
04:59:18 133  ,jpy_g01
04:59:18 134  ,jpy_g02
04:59:18 135  ,jpy_g03
04:59:18 136  ,jpy_g04
04:59:18 137  ,jpy_g05
04:59:18 138  ,jpy_g06
04:59:18 139  ,jpy_g07
04:59:18 140  ,jpy_g08
04:59:18 141  ,jpy_g09
04:59:18 142  ,jpy_g10
04:59:18 143  ,jpy_g11
04:59:18 144  ,jpy_g12
04:59:18 145  ,jpy_g13
04:59:18 146  ,jpy_g14
04:59:18 147  ,jpy_g15
04:59:18 148  ,jpy_g16
04:59:18 149  ,jpy_g17
04:59:18 150  ,jpy_g18
04:59:18 151  ,jpy_g19
04:59:18 152  ,jpy_g20
04:59:18 153  ,jpy_g21
04:59:18 154  ,jpy_g22
04:59:18 155  ,jpy_g23
04:59:18 156  ,jpy_g24
04:59:18 157  ,jpy_g25
04:59:18 158  ,jpy_g26
04:59:18 159  ,jpy_g27
04:59:18 160  ,jpy_g28
04:59:18 161  ,jpy_g29
04:59:18 162  ,jpy_g30
04:59:18 163  ,jpy_g31
04:59:18 164  ,jpy_g32
04:59:18 165  ,jpy_g33
04:59:18 166  ,jpy_g34
04:59:18 167  ,jpy_g35
04:59:18 168  ,jpy_g36
04:59:18 169  ,jpy_g37
04:59:18 170  ,jpy_g38
04:59:18 171  ,jpy_g39
04:59:18 172  ,jpy_g40
04:59:18 173  ,jpy_g41
04:59:18 174  ,cad_g00
04:59:18 175  ,cad_g01
04:59:18 176  ,cad_g02
04:59:18 177  ,cad_g03
04:59:18 178  ,cad_g04
04:59:18 179  ,cad_g05
04:59:18 180  ,cad_g06
04:59:18 181  ,cad_g07
04:59:18 182  ,cad_g08
04:59:18 183  ,cad_g09
04:59:18 184  ,cad_g10
04:59:18 185  ,cad_g11
04:59:18 186  ,cad_g12
04:59:18 187  ,cad_g13
04:59:18 188  ,cad_g14
04:59:18 189  ,cad_g15
04:59:18 190  ,cad_g16
04:59:18 191  ,cad_g17
04:59:18 192  ,cad_g18
04:59:18 193  ,cad_g19
04:59:18 194  ,cad_g20
04:59:18 195  ,cad_g21
04:59:18 196  ,cad_g22
04:59:18 197  ,cad_g23
04:59:18 198  ,cad_g24
04:59:18 199  ,cad_g25
04:59:18 200  ,cad_g26
04:59:18 201  ,cad_g27
04:59:18 202  ,cad_g28
04:59:18 203  ,cad_g29
04:59:18 204  ,cad_g30
04:59:18 205  ,cad_g31
04:59:18 206  ,cad_g32
04:59:18 207  ,cad_g33
04:59:18 208  ,cad_g34
04:59:18 209  ,cad_g35
04:59:18 210  ,cad_g36
04:59:18 211  ,cad_g37
04:59:18 212  ,cad_g38
04:59:18 213  ,cad_g39
04:59:18 214  ,cad_g40
04:59:18 215  ,cad_g41
04:59:18 216  ,chf_g00
04:59:18 217  ,chf_g01
04:59:18 218  ,chf_g02
04:59:18 219  ,chf_g03
04:59:18 220  ,chf_g04
04:59:18 221  ,chf_g05
04:59:18 222  ,chf_g06
04:59:18 223  ,chf_g07
04:59:18 224  ,chf_g08
04:59:18 225  ,chf_g09
04:59:18 226  ,chf_g10
04:59:18 227  ,chf_g11
04:59:18 228  ,chf_g12
04:59:18 229  ,chf_g13
04:59:18 230  ,chf_g14
04:59:18 231  ,chf_g15
04:59:18 232  ,chf_g16
04:59:18 233  ,chf_g17
04:59:18 234  ,chf_g18
04:59:18 235  ,chf_g19
04:59:18 236  ,chf_g20
04:59:18 237  ,chf_g21
04:59:18 238  ,chf_g22
04:59:18 239  ,chf_g23
04:59:18 240  ,chf_g24
04:59:18 241  ,chf_g25
04:59:18 242  ,chf_g26
04:59:18 243  ,chf_g27
04:59:18 244  ,chf_g28
04:59:18 245  ,chf_g29
04:59:18 246  ,chf_g30
04:59:18 247  ,chf_g31
04:59:18 248  ,chf_g32
04:59:18 249  ,chf_g33
04:59:18 250  ,chf_g34
04:59:18 251  ,chf_g35
04:59:18 252  ,chf_g36
04:59:18 253  ,chf_g37
04:59:18 254  ,chf_g38
04:59:18 255  ,chf_g39
04:59:18 256  ,chf_g40
04:59:18 257  ,chf_g41
04:59:18 258  FROM aud_ms6 m
04:59:18 259  WHERE m.ydate = '&1'||' '||'&2'
04:59:18 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-07'||' '||'04:45:00'

View created.

Elapsed: 00:00:00.11
04:59:18 SQL> 
04:59:18 SQL> -- rpt
04:59:18 SQL> -- We should see just 1 row:
04:59:18 SQL> 
04:59:18 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
04:59:18 SQL> 
04:59:18 SQL> -- Build the model:
04:59:18 SQL> CREATE OR REPLACE VIEW bme AS
04:59:18   2  SELECT
04:59:18   3  'aud'||m.ydate prdate
04:59:18   4  ,gattn
04:59:18   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
04:59:18   6  ,eur_g00
04:59:18   7  ,eur_g01
04:59:18   8  ,eur_g02
04:59:18   9  ,eur_g03
04:59:18  10  ,eur_g04
04:59:18  11  ,eur_g05
04:59:18  12  ,eur_g06
04:59:18  13  ,eur_g07
04:59:18  14  ,eur_g08
04:59:18  15  ,eur_g09
04:59:18  16  ,eur_g10
04:59:18  17  ,eur_g11
04:59:18  18  ,eur_g12
04:59:18  19  ,eur_g13
04:59:18  20  ,eur_g14
04:59:18  21  ,eur_g15
04:59:18  22  ,eur_g16
04:59:18  23  ,eur_g17
04:59:18  24  ,eur_g18
04:59:18  25  ,eur_g19
04:59:18  26  ,eur_g20
04:59:18  27  ,eur_g21
04:59:18  28  ,eur_g22
04:59:18  29  ,eur_g23
04:59:18  30  ,eur_g24
04:59:18  31  ,eur_g25
04:59:18  32  ,eur_g26
04:59:18  33  ,eur_g27
04:59:18  34  ,eur_g28
04:59:18  35  ,eur_g29
04:59:18  36  ,eur_g30
04:59:18  37  ,eur_g31
04:59:18  38  ,eur_g32
04:59:18  39  ,eur_g33
04:59:18  40  ,eur_g34
04:59:18  41  ,eur_g35
04:59:18  42  ,eur_g36
04:59:18  43  ,eur_g37
04:59:18  44  ,eur_g38
04:59:18  45  ,eur_g39
04:59:18  46  ,eur_g40
04:59:18  47  ,eur_g41
04:59:18  48  ,aud_g00
04:59:18  49  ,aud_g01
04:59:18  50  ,aud_g02
04:59:18  51  ,aud_g03
04:59:18  52  ,aud_g04
04:59:18  53  ,aud_g05
04:59:18  54  ,aud_g06
04:59:18  55  ,aud_g07
04:59:18  56  ,aud_g08
04:59:18  57  ,aud_g09
04:59:18  58  ,aud_g10
04:59:18  59  ,aud_g11
04:59:18  60  ,aud_g12
04:59:18  61  ,aud_g13
04:59:18  62  ,aud_g14
04:59:18  63  ,aud_g15
04:59:18  64  ,aud_g16
04:59:18  65  ,aud_g17
04:59:18  66  ,aud_g18
04:59:18  67  ,aud_g19
04:59:18  68  ,aud_g20
04:59:18  69  ,aud_g21
04:59:18  70  ,aud_g22
04:59:18  71  ,aud_g23
04:59:18  72  ,aud_g24
04:59:18  73  ,aud_g25
04:59:18  74  ,aud_g26
04:59:18  75  ,aud_g27
04:59:18  76  ,aud_g28
04:59:18  77  ,aud_g29
04:59:18  78  ,aud_g30
04:59:18  79  ,aud_g31
04:59:18  80  ,aud_g32
04:59:18  81  ,aud_g33
04:59:18  82  ,aud_g34
04:59:18  83  ,aud_g35
04:59:18  84  ,aud_g36
04:59:18  85  ,aud_g37
04:59:18  86  ,aud_g38
04:59:18  87  ,aud_g39
04:59:18  88  ,aud_g40
04:59:18  89  ,aud_g41
04:59:18  90  ,gbp_g00
04:59:18  91  ,gbp_g01
04:59:18  92  ,gbp_g02
04:59:18  93  ,gbp_g03
04:59:18  94  ,gbp_g04
04:59:18  95  ,gbp_g05
04:59:18  96  ,gbp_g06
04:59:18  97  ,gbp_g07
04:59:18  98  ,gbp_g08
04:59:18  99  ,gbp_g09
04:59:18 100  ,gbp_g10
04:59:18 101  ,gbp_g11
04:59:18 102  ,gbp_g12
04:59:18 103  ,gbp_g13
04:59:18 104  ,gbp_g14
04:59:18 105  ,gbp_g15
04:59:18 106  ,gbp_g16
04:59:18 107  ,gbp_g17
04:59:18 108  ,gbp_g18
04:59:18 109  ,gbp_g19
04:59:18 110  ,gbp_g20
04:59:18 111  ,gbp_g21
04:59:18 112  ,gbp_g22
04:59:18 113  ,gbp_g23
04:59:18 114  ,gbp_g24
04:59:18 115  ,gbp_g25
04:59:18 116  ,gbp_g26
04:59:18 117  ,gbp_g27
04:59:18 118  ,gbp_g28
04:59:18 119  ,gbp_g29
04:59:18 120  ,gbp_g30
04:59:18 121  ,gbp_g31
04:59:18 122  ,gbp_g32
04:59:18 123  ,gbp_g33
04:59:18 124  ,gbp_g34
04:59:18 125  ,gbp_g35
04:59:18 126  ,gbp_g36
04:59:18 127  ,gbp_g37
04:59:18 128  ,gbp_g38
04:59:18 129  ,gbp_g39
04:59:18 130  ,gbp_g40
04:59:18 131  ,gbp_g41
04:59:18 132  ,jpy_g00
04:59:18 133  ,jpy_g01
04:59:18 134  ,jpy_g02
04:59:18 135  ,jpy_g03
04:59:18 136  ,jpy_g04
04:59:18 137  ,jpy_g05
04:59:18 138  ,jpy_g06
04:59:18 139  ,jpy_g07
04:59:18 140  ,jpy_g08
04:59:18 141  ,jpy_g09
04:59:18 142  ,jpy_g10
04:59:18 143  ,jpy_g11
04:59:18 144  ,jpy_g12
04:59:18 145  ,jpy_g13
04:59:18 146  ,jpy_g14
04:59:18 147  ,jpy_g15
04:59:18 148  ,jpy_g16
04:59:18 149  ,jpy_g17
04:59:18 150  ,jpy_g18
04:59:18 151  ,jpy_g19
04:59:18 152  ,jpy_g20
04:59:18 153  ,jpy_g21
04:59:18 154  ,jpy_g22
04:59:18 155  ,jpy_g23
04:59:18 156  ,jpy_g24
04:59:18 157  ,jpy_g25
04:59:18 158  ,jpy_g26
04:59:18 159  ,jpy_g27
04:59:18 160  ,jpy_g28
04:59:18 161  ,jpy_g29
04:59:18 162  ,jpy_g30
04:59:18 163  ,jpy_g31
04:59:18 164  ,jpy_g32
04:59:18 165  ,jpy_g33
04:59:18 166  ,jpy_g34
04:59:18 167  ,jpy_g35
04:59:18 168  ,jpy_g36
04:59:18 169  ,jpy_g37
04:59:18 170  ,jpy_g38
04:59:18 171  ,jpy_g39
04:59:18 172  ,jpy_g40
04:59:18 173  ,jpy_g41
04:59:18 174  ,cad_g00
04:59:18 175  ,cad_g01
04:59:18 176  ,cad_g02
04:59:18 177  ,cad_g03
04:59:18 178  ,cad_g04
04:59:18 179  ,cad_g05
04:59:18 180  ,cad_g06
04:59:18 181  ,cad_g07
04:59:18 182  ,cad_g08
04:59:18 183  ,cad_g09
04:59:18 184  ,cad_g10
04:59:18 185  ,cad_g11
04:59:18 186  ,cad_g12
04:59:18 187  ,cad_g13
04:59:18 188  ,cad_g14
04:59:18 189  ,cad_g15
04:59:18 190  ,cad_g16
04:59:18 191  ,cad_g17
04:59:18 192  ,cad_g18
04:59:18 193  ,cad_g19
04:59:18 194  ,cad_g20
04:59:18 195  ,cad_g21
04:59:18 196  ,cad_g22
04:59:18 197  ,cad_g23
04:59:18 198  ,cad_g24
04:59:18 199  ,cad_g25
04:59:18 200  ,cad_g26
04:59:18 201  ,cad_g27
04:59:18 202  ,cad_g28
04:59:18 203  ,cad_g29
04:59:18 204  ,cad_g30
04:59:18 205  ,cad_g31
04:59:18 206  ,cad_g32
04:59:18 207  ,cad_g33
04:59:18 208  ,cad_g34
04:59:18 209  ,cad_g35
04:59:18 210  ,cad_g36
04:59:18 211  ,cad_g37
04:59:18 212  ,cad_g38
04:59:18 213  ,cad_g39
04:59:18 214  ,cad_g40
04:59:18 215  ,cad_g41
04:59:18 216  ,chf_g00
04:59:18 217  ,chf_g01
04:59:18 218  ,chf_g02
04:59:18 219  ,chf_g03
04:59:18 220  ,chf_g04
04:59:18 221  ,chf_g05
04:59:18 222  ,chf_g06
04:59:18 223  ,chf_g07
04:59:18 224  ,chf_g08
04:59:18 225  ,chf_g09
04:59:18 226  ,chf_g10
04:59:18 227  ,chf_g11
04:59:18 228  ,chf_g12
04:59:18 229  ,chf_g13
04:59:18 230  ,chf_g14
04:59:18 231  ,chf_g15
04:59:18 232  ,chf_g16
04:59:18 233  ,chf_g17
04:59:18 234  ,chf_g18
04:59:18 235  ,chf_g19
04:59:18 236  ,chf_g20
04:59:18 237  ,chf_g21
04:59:18 238  ,chf_g22
04:59:18 239  ,chf_g23
04:59:18 240  ,chf_g24
04:59:18 241  ,chf_g25
04:59:18 242  ,chf_g26
04:59:18 243  ,chf_g27
04:59:18 244  ,chf_g28
04:59:18 245  ,chf_g29
04:59:18 246  ,chf_g30
04:59:18 247  ,chf_g31
04:59:18 248  ,chf_g32
04:59:18 249  ,chf_g33
04:59:18 250  ,chf_g34
04:59:18 251  ,chf_g35
04:59:18 252  ,chf_g36
04:59:18 253  ,chf_g37
04:59:18 254  ,chf_g38
04:59:18 255  ,chf_g39
04:59:18 256  ,chf_g40
04:59:18 257  ,chf_g41
04:59:18 258  FROM aud_ms6 m
04:59:18 259  WHERE gattn IN('nup','up')
04:59:18 260  AND 1+m.ydate < '&1'||' '||'&2'
04:59:18 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-07'||' '||'04:45:00'

View created.

Elapsed: 00:00:00.12
04:59:18 SQL> 
04:59:18 SQL> -- rpt
04:59:18 SQL> 
04:59:18 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12893
up	     6618

Elapsed: 00:00:00.05
04:59:18 SQL> 
04:59:18 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-06 04:40:00

Elapsed: 00:00:00.03
04:59:18 SQL> 
04:59:18 SQL> -- Now build model from bme and score sme
04:59:18 SQL> @score1gattn.sql
04:59:18 SQL> -- score1gattn.sql
04:59:18 SQL> 
04:59:18 SQL> -- Does the 1st SVM score
04:59:18 SQL> 
04:59:18 SQL> -- Fill up svmc_apply_prep
04:59:18 SQL> @score_gattn.sql
04:59:18 SQL> --
04:59:18 SQL> -- score_gattn.sql
04:59:18 SQL> --
04:59:18 SQL> 
04:59:18 SQL> -- usage: score_gattn.sql
04:59:18 SQL> 
04:59:18 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
04:59:18 SQL> 
04:59:18 SQL> DEFINE target	= 'gattn'
04:59:18 SQL> DEFINE model_name = 'forex15'
04:59:18 SQL> DEFINE bldtable	= 'bme'
04:59:18 SQL> DEFINE scoretable = 'sme'
04:59:18 SQL> DEFINE case_id	= 'prdate'
04:59:18 SQL> 
04:59:18 SQL> -- Define a variable to help me exclude some columns from some data mining calls
04:59:18 SQL> DEFINE exclude1 = "'&target','&case_id'"
04:59:18 SQL> 
04:59:18 SQL> -- Builds an SVM model using pl/sql.
04:59:18 SQL> 
04:59:18 SQL> -----------------------------------------------------------------------
04:59:18 SQL> --			    BUILD THE MODEL
04:59:18 SQL> -----------------------------------------------------------------------
04:59:18 SQL> 
04:59:18 SQL> -- Cleanup old build data preparation objects for repeat runs
04:59:18 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
04:59:18 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
04:59:18 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
04:59:18 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
04:59:18 SQL> 
04:59:18 SQL> 
04:59:18 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
04:59:18 SQL> --
04:59:18 SQL> -- DROP	TABLE svmc_settings ;
04:59:18 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
04:59:18 SQL> -- DELETE svmc_settings;
04:59:18 SQL> 
04:59:18 SQL> -- The default classification algorithm is Naive Bayes. So override
04:59:18 SQL> -- this choice to SVM using a settings table.
04:59:18 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
04:59:18 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
04:59:18 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
04:59:18 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
04:59:18 SQL> -- models.
04:59:18 SQL> --
04:59:18 SQL> 
04:59:18 SQL> -- Do this once and then comment it out.
04:59:18 SQL> -- That makes script go faster.
04:59:18 SQL> -- BEGIN
04:59:18 SQL> -- -- Populate settings table
04:59:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:59:18 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
04:59:18 SQL> --
04:59:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:59:18 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
04:59:18 SQL> --
04:59:18 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
04:59:18 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
04:59:18 SQL> --   COMMIT;
04:59:18 SQL> -- END;
04:59:18 SQL> -- /
04:59:18 SQL> 
04:59:18 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
04:59:18 SQL> 
04:59:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
04:59:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:59:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
04:59:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
04:59:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:59:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:59:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
04:59:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:59:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:59:18 SQL> 
04:59:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
04:59:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:59:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
04:59:18 SQL> 
04:59:18 SQL> --------------------------------
04:59:18 SQL> -- PREPARE BUILD (TRAINING) DATA
04:59:18 SQL> --
04:59:18 SQL> 
04:59:18 SQL> -- 1. Missing Value treatment for all Predictors and
04:59:18 SQL> -- 2. Outlier Treatment and
04:59:18 SQL> -- 3. Normalization are performed below.
04:59:18 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
04:59:18 SQL> --    normalized here.
04:59:18 SQL> 
04:59:18 SQL> BEGIN
04:59:18   2  	-- Perform missing value treatment for all predictors
04:59:18   3  	-- create miss tables
04:59:18   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
04:59:18   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
04:59:18   6  
04:59:18   7  	-- populate miss tables
04:59:18   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
04:59:18   9  	  miss_table_name => 'svmc_miss_num',
04:59:18  10  	  data_table_name => '&bldtable',
04:59:18  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:59:18  12  
04:59:18  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
04:59:18  14  	  miss_table_name => 'svmc_miss_cat',
04:59:18  15  	  data_table_name => '&bldtable',
04:59:18  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:59:18  17  
04:59:18  18  	-- xform input data to replace missing values
04:59:18  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
04:59:18  20  	  miss_table_name => 'svmc_miss_num',
04:59:18  21  	  data_table_name => '&bldtable',
04:59:18  22  	  xform_view_name => 'xformed_build_miss_num');
04:59:18  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
04:59:18  24  	  miss_table_name => 'svmc_miss_cat',
04:59:18  25  	  data_table_name => '&bldtable',
04:59:18  26  	  xform_view_name => 'xformed_build_miss_cat');
04:59:18  27  
04:59:18  28  	-- Perform outlier treatment.
04:59:18  29  	-- create clip table
04:59:18  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
04:59:18  31  
04:59:18  32  	-- populate clip table
04:59:18  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
04:59:18  34  	  clip_table_name => 'svmc_clip',
04:59:18  35  	  data_table_name => '&bldtable',
04:59:18  36  	  tail_frac	  => 0.025,
04:59:18  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:59:18  38  
04:59:18  39  	-- xform input data to winsorized data
04:59:18  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
04:59:18  41  	  clip_table_name => 'svmc_clip',
04:59:18  42  	  data_table_name => '&bldtable',
04:59:18  43  	  xform_view_name => 'svmc_winsor');
04:59:18  44  
04:59:18  45  	-- create normalization table
04:59:18  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
04:59:18  47  
04:59:18  48  	-- populate normalization table based on winsorized data
04:59:18  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
04:59:18  50  	  norm_table_name => 'svmc_norm',
04:59:18  51  	  data_table_name => 'svmc_winsor',
04:59:18  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
04:59:18  53  
04:59:18  54  	-- normalize the original data
04:59:18  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
04:59:18  56  	  norm_table_name => 'svmc_norm',
04:59:18  57  	  data_table_name => '&bldtable',
04:59:18  58  	  xform_view_name => 'svmc_build_prep');
04:59:18  59  END;
04:59:18  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.55
04:59:37 SQL> 
04:59:37 SQL> ---------------------
04:59:37 SQL> -- CREATE A NEW MODEL
04:59:37 SQL> --
04:59:37 SQL> -- Cleanup old model with the same name for repeat runs
04:59:37 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
04:59:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
04:59:37   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.10
04:59:38 SQL> 
04:59:38 SQL> -- Build a new SVM Model
04:59:38 SQL> BEGIN
04:59:38   2  	DBMS_DATA_MINING.CREATE_MODEL(
04:59:38   3  	  model_name	      => '&model_name',
04:59:38   4  	  mining_function     => dbms_data_mining.classification,
04:59:38   5  	  data_table_name     => 'svmc_build_prep',
04:59:38   6  	  case_id_column_name => '&case_id',
04:59:38   7  	  target_column_name  => '&target',
04:59:38   8  	  settings_table_name => 'svmc_settings');
04:59:38   9  END;
04:59:38  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:30.68
05:00:09 SQL> 
05:00:09 SQL> -----------------------------------------------------------------------
05:00:09 SQL> --			       APPLY/score THE MODEL
05:00:09 SQL> -----------------------------------------------------------------------
05:00:09 SQL> 
05:00:09 SQL> -- Cleanup old scoring data preparation objects for repeat runs
05:00:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
05:00:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:00:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
05:00:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
05:00:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:00:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:00:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
05:00:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:00:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
05:00:09 SQL> -----------------------
05:00:09 SQL> -- PREPARE SCORING DATA
05:00:09 SQL> --
05:00:09 SQL> -- If the data for model creation has been prepared, then the data
05:00:09 SQL> -- to be scored using the model must be prepared in the same manner
05:00:09 SQL> -- in order to obtain meaningful results.
05:00:09 SQL> --
05:00:09 SQL> -- 1. Missing Value treatment for all Predictors and
05:00:09 SQL> -- 2. Normalization
05:00:09 SQL> -- No outlier treatment will be performed during test and apply. The
05:00:09 SQL> -- normalization step is sufficient, since the normalization parameters
05:00:09 SQL> -- already capture the effects of outlier treatment done with build data.
05:00:09 SQL> --
05:00:09 SQL> BEGIN
05:00:09   2  	-- Xform Test data to replace missing values
05:00:09   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:00:09   4  	  miss_table_name => 'svmc_miss_num',
05:00:09   5  	  data_table_name => '&scoretable',
05:00:09   6  	  xform_view_name => 'xformed_apply_miss_num');
05:00:09   7  
05:00:09   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:00:09   9  	  miss_table_name => 'svmc_miss_cat',
05:00:09  10  	  data_table_name => '&scoretable',
05:00:09  11  	  xform_view_name => 'xformed_apply_miss_cat');
05:00:09  12  
05:00:09  13  	-- Normalize the data to be scored
05:00:09  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:00:09  15  	  norm_table_name => 'svmc_norm',
05:00:09  16  	  data_table_name => '&scoretable',
05:00:09  17  	  xform_view_name => 'svmc_apply_prep');
05:00:09  18  END;
05:00:09  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.25
05:00:10 SQL> 
05:00:10 SQL> -- Use same model_name used in score_gattn.sql
05:00:10 SQL> DEFINE model_name = 'forex15'
05:00:10 SQL> 
05:00:10 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
05:00:10 SQL> 
05:00:10 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
05:00:10   2  SELECT
05:00:10   3  prdate
05:00:10   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
05:00:10   5  ,sysdate
05:00:10   6  ,SUBSTR(prdate,1,3)pair
05:00:10   7  ,SUBSTR(prdate,4,19)ydate
05:00:10   8  FROM svmc_apply_prep
05:00:10   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
05:00:10 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
